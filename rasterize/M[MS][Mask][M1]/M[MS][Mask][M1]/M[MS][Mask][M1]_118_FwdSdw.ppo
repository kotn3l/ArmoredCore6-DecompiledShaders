#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 21) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1655;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _254 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _255 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _256 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _262 = inversesqrt(dot(vec3(_254, _255, _256), vec3(_254, _255, _256)));
    float _269 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _276 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _288 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _290 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _291 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4262 = isnan(0.0) ? _288 : (isnan(_288) ? 0.0 : max(_288, 0.0));
    float _4273 = isnan(0.0) ? _290 : (isnan(_290) ? 0.0 : max(_290, 0.0));
    float _4284 = isnan(0.0) ? _291 : (isnan(_291) ? 0.0 : max(_291, 0.0));
    uint _301 = uint(roundEven(NORMAL.w)) * 13u;
    uint _306 = _301 + 1u;
    uint _310 = _301 + 2u;
    float _319 = sqrt(((cbInstanceData._m0[_306].x * cbInstanceData._m0[_306].x) + (cbInstanceData._m0[_301].x * cbInstanceData._m0[_301].x)) + (cbInstanceData._m0[_310].x * cbInstanceData._m0[_310].x));
    float _320 = _319 * TEXCOORD.z;
    float _321 = _319 * TEXCOORD.w;
    vec4 _334 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _320) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _321) + cbTextureTilingScale._m0[13u].w));
    vec4 _358 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _363 = _358.x * cbMtdParam._m0[11u].x;
    float _364 = _358.y * cbMtdParam._m0[11u].y;
    float _365 = _358.z * cbMtdParam._m0[11u].z;
    vec4 _384 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _320) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _321) + cbTextureTilingScale._m0[5u].w));
    vec4 _403 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _438 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _440 = _438.x;
    float _452 = dot(vec4(_440, _438.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _469 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _403.x) * 2.0) - ((((_440 - _452) * cbMtdParam._m0[23u].w) + _452) * cbMtdParam._m0[22u].w))) + 1.0;
    float _4295 = isnan(0.0) ? _469 : (isnan(_469) ? 0.0 : max(_469, 0.0));
    float _470 = isnan(1.0) ? _4295 : (isnan(_4295) ? 1.0 : min(_4295, 1.0));
    float _477 = (_470 * ((_384.x * cbMtdParam._m0[12u].x) - _363)) + _363;
    float _478 = (_470 * ((_384.y * cbMtdParam._m0[12u].y) - _364)) + _364;
    float _479 = (_470 * ((_384.z * cbMtdParam._m0[12u].z) - _365)) + _365;
    vec4 _496 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _320) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _321) + cbTextureTilingScale._m0[3u].w));
    vec4 _516 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _518 = _516.x;
    float _528 = dot(vec4(_518, _516.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _542 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _403.y) * 2.0) - ((((_518 - _528) * cbMtdParam._m0[23u].w) + _528) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4306 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0));
    float _543 = isnan(1.0) ? _4306 : (isnan(_4306) ? 1.0 : min(_4306, 1.0));
    float _550 = (_543 * ((_496.x * cbMtdParam._m0[13u].x) - _477)) + _477;
    float _551 = (_543 * ((_496.y * cbMtdParam._m0[13u].y) - _478)) + _478;
    float _552 = (_543 * ((_496.z * cbMtdParam._m0[13u].z) - _479)) + _479;
    vec4 _571 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _320) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _321) + cbTextureTilingScale._m0[24u].w));
    vec4 _588 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _590 = _588.x;
    float _600 = dot(vec4(_590, _588.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _612 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _403.z) * 2.0) - ((((_590 - _600) * cbMtdParam._m0[23u].w) + _600) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4317 = isnan(0.0) ? _612 : (isnan(_612) ? 0.0 : max(_612, 0.0));
    float _613 = isnan(1.0) ? _4317 : (isnan(_4317) ? 1.0 : min(_4317, 1.0));
    float _620 = (_613 * ((_571.x * cbMtdParam._m0[14u].x) - _550)) + _550;
    float _621 = (_613 * ((_571.y * cbMtdParam._m0[14u].y) - _551)) + _551;
    float _622 = (_613 * ((_571.z * cbMtdParam._m0[14u].z) - _552)) + _552;
    float _626 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _334.x) * _620;
    float _629 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _334.y) * _621;
    float _632 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _334.z) * _622;
    float _639 = ((_620 - _626) * (isnan(1.0) ? _4262 : (isnan(_4262) ? 1.0 : min(_4262, 1.0)))) + _626;
    float _640 = ((_621 - _629) * (isnan(1.0) ? _4273 : (isnan(_4273) ? 1.0 : min(_4273, 1.0)))) + _629;
    float _641 = ((_622 - _632) * (isnan(1.0) ? _4284 : (isnan(_4284) ? 1.0 : min(_4284, 1.0)))) + _632;
    vec4 _658 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _320) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _321) + cbTextureTilingScale._m0[20u].w));
    vec4 _681 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _320) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _321) + cbTextureTilingScale._m0[4u].w));
    vec4 _698 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _700 = _698.x;
    float _701 = _698.y;
    float _702 = _698.z;
    float _709 = ((_681.x - _700) * _470) + _700;
    float _710 = ((_681.y - _701) * _470) + _701;
    float _711 = ((_681.z - _702) * _470) + _702;
    vec4 _723 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _320) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _321) + cbTextureTilingScale._m0[2u].w));
    float _734 = ((_723.x - _709) * _543) + _709;
    float _735 = ((_723.y - _710) * _543) + _710;
    float _736 = ((_723.z - _711) * _543) + _711;
    vec4 _748 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _320) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _321) + cbTextureTilingScale._m0[23u].w));
    float _761 = ((_748.z - _736) * _613) + _736;
    float _764 = ((((_748.x - _734) * _613) + _734) * 2.0) + (-1.0);
    float _765 = ((((_748.y - _735) * _613) + _735) * 2.0) + (-1.0);
    float _766 = dot(vec2(_764, _765), vec2(_764, _765));
    float _4328 = isnan(0.0) ? _766 : (isnan(_766) ? 0.0 : max(_766, 0.0));
    float _771 = sqrt(1.0 - (isnan(1.0) ? _4328 : (isnan(_4328) ? 1.0 : min(_4328, 1.0))));
    vec4 _785 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _810 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _320) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _321) + cbTextureTilingScale._m0[11u].w));
    float _812 = _810.x;
    float _813 = 1.0 - _812;
    float _821 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _824 = ((isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : min(_821, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _833 = (_824 - ((((((_812 - _813) * cbMtdParam._m0[24u].z) + _813) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _824))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4349 = isnan(0.0) ? _833 : (isnan(_833) ? 0.0 : max(_833, 0.0));
    float _834 = isnan(1.0) ? _4349 : (isnan(_4349) ? 1.0 : min(_4349, 1.0));
    float _841 = (_834 * (cbMtdParam._m0[17u].x - _639)) + _639;
    float _842 = (_834 * (cbMtdParam._m0[17u].y - _640)) + _640;
    float _843 = (_834 * (cbMtdParam._m0[17u].z - _641)) + _641;
    vec4 _855 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _320) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _321) + cbTextureTilingScale._m0[19u].w));
    float _857 = _855.x;
    float _858 = 1.0 - _857;
    float _883 = (TEXCOORD_8.x - ((cbMtdParam._m0[24u].y * (1.0 - TEXCOORD_8.x)) * ((((_857 - _858) * cbMtdParam._m0[24u].w) + _858) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].y + 1.0);
    float _4360 = isnan(0.0) ? _883 : (isnan(_883) ? 0.0 : max(_883, 0.0));
    float _884 = isnan(1.0) ? _4360 : (isnan(_4360) ? 1.0 : min(_4360, 1.0));
    float _892 = ((((cbMtdParam._m0[10u].x - _841) * TEXCOORD_8.x) * cbMtdParam._m0[23u].z) * _884) + _841;
    float _893 = ((((cbMtdParam._m0[10u].y - _842) * TEXCOORD_8.y) * cbMtdParam._m0[23u].z) * _884) + _842;
    float _894 = (((cbMtdParam._m0[23u].z * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _843)) * _884) + _843;
    vec4 _920 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _922 = _920.x;
    float _940 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _320) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _321) + cbTextureTilingScale._m0[9u].w)).x - _922) * _470) + _922;
    float _957 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _320) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _321) + cbTextureTilingScale._m0[21u].w)).x - _940) * _543) + _940;
    float _974 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _320) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _321) + cbTextureTilingScale._m0[10u].w)).x - _957) * _613) + _957;
    float _978 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _974) * cbMtdParam._m0[19u].z) + _974;
    float _980 = _978 - (_978 * _834);
    float _982 = _980 - (_980 * _884);
    float _987 = (((_658.z - _761) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _761;
    float _991 = ((_785.z - _987) * cbMtdParam._m0[19u].w) + _987;
    vec4 _1007 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _320) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _321) + cbTextureTilingScale._m0[15u].w));
    float _1014 = (_1007.x * 2.0) + (-1.0);
    float _1015 = (_1007.y * 2.0) + (-1.0);
    float _1016 = dot(vec2(_1014, _1015), vec2(_1014, _1015));
    float _4371 = isnan(0.0) ? _1016 : (isnan(_1016) ? 0.0 : max(_1016, 0.0));
    float _1024 = (_834 * (_1007.z - _991)) + _991;
    float _1027 = ((cbMtdParam._m0[23u].x - _1024) * _884) + _1024;
    vec4 _1050 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _320) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _321) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _1056 = (_1050.x * 2.0) + (-1.0);
    float _1057 = (_1050.y * 2.0) + (-1.0);
    float _1058 = dot(vec2(_1056, _1057), vec2(_1056, _1057));
    float _4382 = isnan(0.0) ? _1058 : (isnan(_1058) ? 0.0 : max(_1058, 0.0));
    float _1072 = (_764 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_658.x * 2.0) + (-1.0)))) + (((_785.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _1073 = (_765 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_658.y * 2.0) + (-1.0)))) + (((_785.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _1085 = (((_1014 - _1072) + (cbMtdParam._m0[21u].x * _1072)) * _834) + _1072;
    float _1086 = (((_1015 - _1073) + (cbMtdParam._m0[21u].x * _1073)) * _834) + _1073;
    float _1087 = (_834 * (sqrt(1.0 - (isnan(1.0) ? _4371 : (isnan(_4371) ? 1.0 : min(_4371, 1.0)))) - _771)) + _771;
    float _1098 = (((_1056 - _1085) + (_1085 * cbMtdParam._m0[22u].z)) * _884) + _1085;
    float _1099 = (((_1057 - _1086) + (_1086 * cbMtdParam._m0[22u].z)) * _884) + _1086;
    float _1100 = ((sqrt(1.0 - (isnan(1.0) ? _4382 : (isnan(_4382) ? 1.0 : min(_4382, 1.0)))) - _1087) * _884) + _1087;
    float _1102 = cbMtdParam._m0[22u].x + _785.w;
    float _1105 = fma(_1100, _269 * NORMAL.x, fma(_1099, _276 * TANGENT.x, (_262 * _254) * _1098));
    float _1108 = fma(_1100, _269 * NORMAL.y, fma(_1099, _276 * TANGENT.y, (_262 * _255) * _1098));
    float _1111 = fma(_1100, _269 * NORMAL.z, fma(_1099, _276 * TANGENT.z, (_262 * _256) * _1098));
    float _1115 = inversesqrt(dot(vec3(_1105, _1108, _1111), vec3(_1105, _1108, _1111)));
    float _1116 = _1115 * _1105;
    float _1117 = _1115 * _1108;
    float _1118 = _1115 * _1111;
    float _4393 = isnan(0.0) ? _1027 : (isnan(_1027) ? 0.0 : max(_1027, 0.0));
    float _1119 = isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0));
    float _4404 = isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0));
    float _4415 = isnan(0.0) ? _892 : (isnan(_892) ? 0.0 : max(_892, 0.0));
    float _4426 = isnan(0.0) ? _893 : (isnan(_893) ? 0.0 : max(_893, 0.0));
    float _4437 = isnan(0.0) ? _894 : (isnan(_894) ? 0.0 : max(_894, 0.0));
    float _4448 = isnan(0.0) ? _982 : (isnan(_982) ? 0.0 : max(_982, 0.0));
    float _1124 = isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0));
    float _1138 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1178 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1188 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1178);
    float _1189 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1178);
    float _1190 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1178);
    float _1194 = inversesqrt(dot(vec3(_1188, _1189, _1190), vec3(_1188, _1189, _1190)));
    float _1195 = _1188 * _1194;
    float _1196 = _1189 * _1194;
    float _1197 = _1190 * _1194;
    float _1203 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1204 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1222 = fma(_1118, cbSceneParam._m0[5u].z, fma(_1117, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1116));
    float _1225 = fma(_1118, cbSceneParam._m0[6u].z, fma(_1117, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1116));
    float _1228 = fma(_1118, cbSceneParam._m0[7u].z, fma(_1117, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1116));
    uint _1242 = (_301 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1248 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0)))) * cbInstanceData._m0[_1242].x;
    float _1249 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0)))) * cbInstanceData._m0[_1242].y;
    float _1250 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0)))) * cbInstanceData._m0[_1242].z;
    float _4459 = isnan(0.0) ? _1248 : (isnan(_1248) ? 0.0 : max(_1248, 0.0));
    float _1251 = isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0));
    float _4470 = isnan(0.0) ? _1249 : (isnan(_1249) ? 0.0 : max(_1249, 0.0));
    float _1252 = isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0));
    float _4481 = isnan(0.0) ? _1250 : (isnan(_1250) ? 0.0 : max(_1250, 0.0));
    float _1253 = isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0));
    float _1254 = 1.0 - _1124;
    float _1255 = _1251 * _1254;
    float _1256 = _1252 * _1254;
    float _1257 = _1253 * _1254;
    float _1262 = (_1251 + (-0.039999999105930328369140625)) * _1124;
    float _1263 = (_1252 + (-0.039999999105930328369140625)) * _1124;
    float _1264 = (_1253 + (-0.039999999105930328369140625)) * _1124;
    float _1265 = _1262 + 0.039999999105930328369140625;
    float _1267 = _1263 + 0.039999999105930328369140625;
    float _1268 = _1264 + 0.039999999105930328369140625;
    vec4 _1277 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1203, cbSceneParam._m0[86u].y * _1204));
    float _1281 = ((isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0))) * TEXCOORD_5.w) * _1277.x;
    float _1282 = dot(vec3(_1116, _1117, _1118), vec3(_1195, _1196, _1197));
    float _1285 = _1282 * 2.0;
    float _1289 = (_1285 * _1116) - _1195;
    float _1290 = (_1285 * _1117) - _1196;
    float _1291 = (_1285 * _1118) - _1197;
    float _1295 = abs(dot(vec3(_1195, _1196, _1197), vec3(_1116, _1117, _1118)));
    float _4492 = isnan(0.0) ? _1295 : (isnan(_1295) ? 0.0 : max(_1295, 0.0));
    float _1297 = sqrt(_1119);
    float _1310 = exp2((_1297 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4492 : (isnan(_4492) ? 1.0 : min(_4492, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1297 * 3.0));
    float _1316 = (1.0 - _1310) * ((_1297 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1317 = _1310 * _1297;
    float _1345 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1349 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1353 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1654;
    float _1656;
    float _1657;
    float _1658;
    float _1659;
    float _1660;
    float _1661;
    float _1662;
    float _1663;
    float _1664;
    float _1665;
    float _1666;
    float _1667;
    float _1668;
    float _1669;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1379 = fma(_1353, cbModelParam._m0[26u].z, fma(_1349, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1345));
        float _1383 = fma(_1353, cbModelParam._m0[27u].z, fma(_1349, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1345));
        float _1387 = fma(_1353, cbModelParam._m0[28u].z, fma(_1349, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1345));
        float _1412 = _1345 + _1116;
        float _1413 = _1349 + _1117;
        float _1414 = _1353 + _1118;
        float _1424 = fma(_1414, cbModelParam._m0[26u].z, fma(_1413, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1412)) - _1379;
        float _1425 = fma(_1414, cbModelParam._m0[27u].z, fma(_1413, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1412)) - _1383;
        float _1426 = fma(_1414, cbModelParam._m0[28u].z, fma(_1413, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1412)) - _1387;
        float _1430 = inversesqrt(dot(vec3(_1424, _1425, _1426), vec3(_1424, _1425, _1426)));
        float _1443 = ((_1430 * _1424) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1379 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1444 = ((_1430 * _1425) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1383 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1445 = ((_1430 * _1426) / cbModelParam._m0[34u].z) + ((((((_1387 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1448 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1443, _1444, _1445), 0.0);
        vec4 _1455 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1443, _1444, _1445), 0.0);
        vec4 _1462 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1443, _1444, _1445), 0.0);
        vec4 _1469 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1443, _1444, _1445), 0.0);
        float _1482 = exp2((_1448.w + (-0.5)) * 20.0) * 2.0;
        float _1483 = _1482 * (_1448.x + (-0.5));
        float _1484 = _1482 * (_1448.y + (-0.5));
        float _1485 = _1482 * (_1448.z + (-0.5));
        float _1492 = exp2((_1455.w + (-0.5)) * 20.0) * 2.0;
        float _1493 = _1492 * (_1455.x + (-0.5));
        float _1494 = _1492 * (_1455.y + (-0.5));
        float _1495 = _1492 * (_1455.z + (-0.5));
        float _1502 = exp2((_1462.w + (-0.5)) * 20.0) * 2.0;
        float _1503 = _1502 * (_1462.x + (-0.5));
        float _1504 = _1502 * (_1462.y + (-0.5));
        float _1505 = _1502 * (_1462.z + (-0.5));
        float _1512 = exp2((_1469.w + (-0.5)) * 20.0) * 2.0;
        float _1513 = _1512 * (_1469.x + (-0.5));
        float _1514 = _1512 * (_1469.y + (-0.5));
        float _1515 = _1512 * (_1469.z + (-0.5));
        float _1516 = isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0));
        float _1517 = isnan(0.0) ? _1514 : (isnan(_1514) ? 0.0 : max(_1514, 0.0));
        float _1518 = isnan(0.0) ? _1515 : (isnan(_1515) ? 0.0 : max(_1515, 0.0));
        float _1519 = _1483 * 0.5;
        float _1520 = _1493 * 0.5;
        float _1521 = _1503 * 0.5;
        float _1522 = dot(vec3(_1519, _1520, _1521), vec3(_1519, _1520, _1521));
        float _1527 = (_1522 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1522);
        float _1536 = (dot(vec3(_1116, _1117, _1118), vec3(_1527 * _1519, _1527 * _1520, _1527 * _1521)) + 1.0) * 0.5;
        float _4518 = isnan(0.0) ? _1536 : (isnan(_1536) ? 0.0 : max(_1536, 0.0));
        float _1546 = sqrt(((_1520 * _1520) + (_1519 * _1519)) + (_1521 * _1521)) / (_1516 + 9.9999997473787516355514526367188e-06);
        float _4529 = isnan(0.0) ? _1546 : (isnan(_1546) ? 0.0 : max(_1546, 0.0));
        float _1547 = isnan(1.0) ? _4529 : (isnan(_4529) ? 1.0 : min(_4529, 1.0));
        float _1548 = _1547 * 2.0;
        float _1552 = (1.0 - _1547) / (_1547 + 1.0);
        float _4540 = isnan(0.0) ? _1552 : (isnan(_1552) ? 0.0 : max(_1552, 0.0));
        float _1553 = isnan(1.0) ? _4540 : (isnan(_4540) ? 1.0 : min(_4540, 1.0));
        float _1562 = ((((1.0 - _1553) * (_1548 + 2.0)) * exp2(log2(isnan(1.0) ? _4518 : (isnan(_4518) ? 1.0 : min(_4518, 1.0))) * (_1548 + 1.0))) + _1553) * _1516;
        float _1563 = _1484 * 0.5;
        float _1564 = _1494 * 0.5;
        float _1565 = _1504 * 0.5;
        float _1566 = dot(vec3(_1563, _1564, _1565), vec3(_1563, _1564, _1565));
        float _1571 = (_1566 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1566);
        float _1579 = (dot(vec3(_1116, _1117, _1118), vec3(_1571 * _1563, _1571 * _1564, _1571 * _1565)) + 1.0) * 0.5;
        float _4551 = isnan(0.0) ? _1579 : (isnan(_1579) ? 0.0 : max(_1579, 0.0));
        float _1588 = sqrt(((_1564 * _1564) + (_1563 * _1563)) + (_1565 * _1565)) / (_1517 + 9.9999997473787516355514526367188e-06);
        float _4562 = isnan(0.0) ? _1588 : (isnan(_1588) ? 0.0 : max(_1588, 0.0));
        float _1589 = isnan(1.0) ? _4562 : (isnan(_4562) ? 1.0 : min(_4562, 1.0));
        float _1590 = _1589 * 2.0;
        float _1594 = (1.0 - _1589) / (_1589 + 1.0);
        float _4573 = isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0));
        float _1595 = isnan(1.0) ? _4573 : (isnan(_4573) ? 1.0 : min(_4573, 1.0));
        float _1604 = ((((1.0 - _1595) * (_1590 + 2.0)) * exp2(log2(isnan(1.0) ? _4551 : (isnan(_4551) ? 1.0 : min(_4551, 1.0))) * (_1590 + 1.0))) + _1595) * _1517;
        float _1605 = _1485 * 0.5;
        float _1606 = _1495 * 0.5;
        float _1607 = _1505 * 0.5;
        float _1608 = dot(vec3(_1605, _1606, _1607), vec3(_1605, _1606, _1607));
        float _1613 = (_1608 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1608);
        float _1621 = (dot(vec3(_1116, _1117, _1118), vec3(_1613 * _1605, _1613 * _1606, _1613 * _1607)) + 1.0) * 0.5;
        float _4584 = isnan(0.0) ? _1621 : (isnan(_1621) ? 0.0 : max(_1621, 0.0));
        float _1630 = sqrt(((_1606 * _1606) + (_1605 * _1605)) + (_1607 * _1607)) / (_1518 + 9.9999997473787516355514526367188e-06);
        float _4595 = isnan(0.0) ? _1630 : (isnan(_1630) ? 0.0 : max(_1630, 0.0));
        float _1631 = isnan(1.0) ? _4595 : (isnan(_4595) ? 1.0 : min(_4595, 1.0));
        float _1632 = _1631 * 2.0;
        float _1636 = (1.0 - _1631) / (_1631 + 1.0);
        float _4606 = isnan(0.0) ? _1636 : (isnan(_1636) ? 0.0 : max(_1636, 0.0));
        float _1637 = isnan(1.0) ? _4606 : (isnan(_4606) ? 1.0 : min(_4606, 1.0));
        float _1646 = ((((1.0 - _1637) * (_1632 + 2.0)) * exp2(log2(isnan(1.0) ? _4584 : (isnan(_4584) ? 1.0 : min(_4584, 1.0))) * (_1632 + 1.0))) + _1637) * _1518;
        _1654 = _1485;
        _1656 = _1484;
        _1657 = _1483;
        _1658 = _1495;
        _1659 = _1494;
        _1660 = _1493;
        _1661 = _1505;
        _1662 = _1504;
        _1663 = _1503;
        _1664 = _1518;
        _1665 = _1517;
        _1666 = _1516;
        _1667 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1562 : (isnan(_1562) ? 0.0 : max(_1562, 0.0)));
        _1668 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1604 : (isnan(_1604) ? 0.0 : max(_1604, 0.0)));
        _1669 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0)));
    }
    else
    {
        _1654 = _1655;
        _1656 = _1655;
        _1657 = _1655;
        _1658 = _1655;
        _1659 = _1655;
        _1660 = _1655;
        _1661 = _1655;
        _1662 = _1655;
        _1663 = _1655;
        _1664 = _1655;
        _1665 = _1655;
        _1666 = _1655;
        _1667 = 0.0;
        _1668 = 0.0;
        _1669 = 0.0;
    }
    float _1961;
    float _1962;
    float _1963;
    float _1964;
    float _1965;
    float _1966;
    float _1967;
    float _1968;
    float _1969;
    float _1970;
    float _1971;
    float _1972;
    float _1973;
    float _1974;
    float _1975;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1692 = fma(_1353, cbModelParam._m0[30u].z, fma(_1349, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1345));
        float _1696 = fma(_1353, cbModelParam._m0[31u].z, fma(_1349, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1345));
        float _1700 = fma(_1353, cbModelParam._m0[32u].z, fma(_1349, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1345));
        float _1723 = _1345 + _1116;
        float _1724 = _1349 + _1117;
        float _1725 = _1353 + _1118;
        float _1735 = fma(_1725, cbModelParam._m0[30u].z, fma(_1724, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1723)) - _1692;
        float _1736 = fma(_1725, cbModelParam._m0[31u].z, fma(_1724, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1723)) - _1696;
        float _1737 = fma(_1725, cbModelParam._m0[32u].z, fma(_1724, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1723)) - _1700;
        float _1741 = inversesqrt(dot(vec3(_1735, _1736, _1737), vec3(_1735, _1736, _1737)));
        float _1754 = ((_1741 * _1735) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1692 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1755 = ((_1741 * _1736) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1696 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1756 = ((_1741 * _1737) / cbModelParam._m0[35u].z) + ((((((_1700 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1758 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1754, _1755, _1756), 0.0);
        vec4 _1765 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1754, _1755, _1756), 0.0);
        vec4 _1772 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1754, _1755, _1756), 0.0);
        vec4 _1779 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1754, _1755, _1756), 0.0);
        float _1791 = exp2((_1758.w + (-0.5)) * 20.0) * 2.0;
        float _1792 = _1791 * (_1758.x + (-0.5));
        float _1793 = _1791 * (_1758.y + (-0.5));
        float _1794 = _1791 * (_1758.z + (-0.5));
        float _1801 = exp2((_1765.w + (-0.5)) * 20.0) * 2.0;
        float _1802 = _1801 * (_1765.x + (-0.5));
        float _1803 = _1801 * (_1765.y + (-0.5));
        float _1804 = _1801 * (_1765.z + (-0.5));
        float _1811 = exp2((_1772.w + (-0.5)) * 20.0) * 2.0;
        float _1812 = _1811 * (_1772.x + (-0.5));
        float _1813 = _1811 * (_1772.y + (-0.5));
        float _1814 = _1811 * (_1772.z + (-0.5));
        float _1821 = exp2((_1779.w + (-0.5)) * 20.0) * 2.0;
        float _1822 = _1821 * (_1779.x + (-0.5));
        float _1823 = _1821 * (_1779.y + (-0.5));
        float _1824 = _1821 * (_1779.z + (-0.5));
        float _1825 = isnan(0.0) ? _1822 : (isnan(_1822) ? 0.0 : max(_1822, 0.0));
        float _1826 = isnan(0.0) ? _1823 : (isnan(_1823) ? 0.0 : max(_1823, 0.0));
        float _1827 = isnan(0.0) ? _1824 : (isnan(_1824) ? 0.0 : max(_1824, 0.0));
        float _1828 = _1792 * 0.5;
        float _1829 = _1802 * 0.5;
        float _1830 = _1812 * 0.5;
        float _1831 = dot(vec3(_1828, _1829, _1830), vec3(_1828, _1829, _1830));
        float _1836 = (_1831 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1831);
        float _1844 = (dot(vec3(_1116, _1117, _1118), vec3(_1836 * _1828, _1836 * _1829, _1836 * _1830)) + 1.0) * 0.5;
        float _4647 = isnan(0.0) ? _1844 : (isnan(_1844) ? 0.0 : max(_1844, 0.0));
        float _1853 = sqrt(((_1829 * _1829) + (_1828 * _1828)) + (_1830 * _1830)) / (_1825 + 9.9999997473787516355514526367188e-06);
        float _4658 = isnan(0.0) ? _1853 : (isnan(_1853) ? 0.0 : max(_1853, 0.0));
        float _1854 = isnan(1.0) ? _4658 : (isnan(_4658) ? 1.0 : min(_4658, 1.0));
        float _1855 = _1854 * 2.0;
        float _1859 = (1.0 - _1854) / (_1854 + 1.0);
        float _4669 = isnan(0.0) ? _1859 : (isnan(_1859) ? 0.0 : max(_1859, 0.0));
        float _1860 = isnan(1.0) ? _4669 : (isnan(_4669) ? 1.0 : min(_4669, 1.0));
        float _1869 = ((((1.0 - _1860) * (_1855 + 2.0)) * exp2(log2(isnan(1.0) ? _4647 : (isnan(_4647) ? 1.0 : min(_4647, 1.0))) * (_1855 + 1.0))) + _1860) * _1825;
        float _1870 = _1793 * 0.5;
        float _1871 = _1803 * 0.5;
        float _1872 = _1813 * 0.5;
        float _1873 = dot(vec3(_1870, _1871, _1872), vec3(_1870, _1871, _1872));
        float _1878 = (_1873 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1873);
        float _1886 = (dot(vec3(_1116, _1117, _1118), vec3(_1878 * _1870, _1878 * _1871, _1878 * _1872)) + 1.0) * 0.5;
        float _4680 = isnan(0.0) ? _1886 : (isnan(_1886) ? 0.0 : max(_1886, 0.0));
        float _1895 = sqrt(((_1871 * _1871) + (_1870 * _1870)) + (_1872 * _1872)) / (_1826 + 9.9999997473787516355514526367188e-06);
        float _4691 = isnan(0.0) ? _1895 : (isnan(_1895) ? 0.0 : max(_1895, 0.0));
        float _1896 = isnan(1.0) ? _4691 : (isnan(_4691) ? 1.0 : min(_4691, 1.0));
        float _1897 = _1896 * 2.0;
        float _1901 = (1.0 - _1896) / (_1896 + 1.0);
        float _4702 = isnan(0.0) ? _1901 : (isnan(_1901) ? 0.0 : max(_1901, 0.0));
        float _1902 = isnan(1.0) ? _4702 : (isnan(_4702) ? 1.0 : min(_4702, 1.0));
        float _1911 = ((((1.0 - _1902) * (_1897 + 2.0)) * exp2(log2(isnan(1.0) ? _4680 : (isnan(_4680) ? 1.0 : min(_4680, 1.0))) * (_1897 + 1.0))) + _1902) * _1826;
        float _1912 = _1794 * 0.5;
        float _1913 = _1804 * 0.5;
        float _1914 = _1814 * 0.5;
        float _1915 = dot(vec3(_1912, _1913, _1914), vec3(_1912, _1913, _1914));
        float _1920 = (_1915 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1915);
        float _1928 = (dot(vec3(_1116, _1117, _1118), vec3(_1920 * _1912, _1920 * _1913, _1920 * _1914)) + 1.0) * 0.5;
        float _4713 = isnan(0.0) ? _1928 : (isnan(_1928) ? 0.0 : max(_1928, 0.0));
        float _1937 = sqrt(((_1913 * _1913) + (_1912 * _1912)) + (_1914 * _1914)) / (_1827 + 9.9999997473787516355514526367188e-06);
        float _4724 = isnan(0.0) ? _1937 : (isnan(_1937) ? 0.0 : max(_1937, 0.0));
        float _1938 = isnan(1.0) ? _4724 : (isnan(_4724) ? 1.0 : min(_4724, 1.0));
        float _1939 = _1938 * 2.0;
        float _1943 = (1.0 - _1938) / (_1938 + 1.0);
        float _4735 = isnan(0.0) ? _1943 : (isnan(_1943) ? 0.0 : max(_1943, 0.0));
        float _1944 = isnan(1.0) ? _4735 : (isnan(_4735) ? 1.0 : min(_4735, 1.0));
        float _1953 = ((((1.0 - _1944) * (_1939 + 2.0)) * exp2(log2(isnan(1.0) ? _4713 : (isnan(_4713) ? 1.0 : min(_4713, 1.0))) * (_1939 + 1.0))) + _1944) * _1827;
        _1961 = _1794;
        _1962 = _1793;
        _1963 = _1792;
        _1964 = _1804;
        _1965 = _1803;
        _1966 = _1802;
        _1967 = _1814;
        _1968 = _1813;
        _1969 = _1812;
        _1970 = _1827;
        _1971 = _1826;
        _1972 = _1825;
        _1973 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1869 : (isnan(_1869) ? 0.0 : max(_1869, 0.0)));
        _1974 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1911 : (isnan(_1911) ? 0.0 : max(_1911, 0.0)));
        _1975 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1953 : (isnan(_1953) ? 0.0 : max(_1953, 0.0)));
    }
    else
    {
        _1961 = _1655;
        _1962 = _1655;
        _1963 = _1655;
        _1964 = _1655;
        _1965 = _1655;
        _1966 = _1655;
        _1967 = _1655;
        _1968 = _1655;
        _1969 = _1655;
        _1970 = _1655;
        _1971 = _1655;
        _1972 = _1655;
        _1973 = 0.0;
        _1974 = 0.0;
        _1975 = 0.0;
    }
    float _1985 = (cbModelParam._m0[1u].x * (_1973 - _1667)) + _1667;
    float _1986 = (cbModelParam._m0[1u].x * (_1974 - _1668)) + _1668;
    float _1987 = (cbModelParam._m0[1u].x * (_1975 - _1669)) + _1669;
    float _2008 = fma(_1987, cbSceneParam._m0[89u].z, fma(_1986, cbSceneParam._m0[89u].y, _1985 * cbSceneParam._m0[89u].x));
    float _2011 = fma(_1987, cbSceneParam._m0[90u].z, fma(_1986, cbSceneParam._m0[90u].y, _1985 * cbSceneParam._m0[90u].x));
    float _2014 = fma(_1987, cbSceneParam._m0[91u].z, fma(_1986, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1985));
    float _2029 = _1289 * 0.5;
    float _2030 = _1290 * 0.5;
    float _2031 = _1291 * 0.5;
    float _2032 = dot(vec4(_2029, _2030, _2031, 1.0), vec4(_1963, _1966, _1969, _1972));
    float _2035 = dot(vec4(_2029, _2030, _2031, 1.0), vec4(_1962, _1965, _1968, _1971));
    float _2038 = dot(vec4(_2029, _2030, _2031, 1.0), vec4(_1961, _1964, _1967, _1970));
    float _2072;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2045 = dot(vec4(_2029, _2030, _2031, 1.0), vec4(_1654, _1658, _1661, _1664));
        float _2049 = dot(vec4(_2029, _2030, _2031, 1.0), vec4(_1656, _1659, _1662, _1665));
        float _2053 = dot(vec4(_2029, _2030, _2031, 1.0), vec4(_1657, _1660, _1663, _1666));
        float _2060 = dot(vec4(cbModelParam._m0[39u]), vec4(_2029, _2030, _2031, 1.0));
        _2072 = dot(vec3(isnan(0.0) ? _2053 : (isnan(_2053) ? 0.0 : max(_2053, 0.0)), isnan(0.0) ? _2049 : (isnan(_2049) ? 0.0 : max(_2049, 0.0)), isnan(0.0) ? _2045 : (isnan(_2045) ? 0.0 : max(_2045, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2060) ? 0.0 : (isnan(0.0) ? _2060 : max(0.0, _2060))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2072 = 1.0;
    }
    float _2083;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2074 = dot(vec4(cbModelParam._m0[40u]), vec4(_2029, _2030, _2031, 1.0));
        _2083 = dot(vec3(isnan(0.0) ? _2032 : (isnan(_2032) ? 0.0 : max(_2032, 0.0)), isnan(0.0) ? _2035 : (isnan(_2035) ? 0.0 : max(_2035, 0.0)), isnan(0.0) ? _2038 : (isnan(_2038) ? 0.0 : max(_2038, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2074) ? 0.0 : (isnan(0.0) ? _2074 : max(0.0, _2074))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2083 = 1.0;
    }
    float _2087 = (_2083 * cbModelParam._m0[1u].x) + (_2072 * (1.0 - cbModelParam._m0[1u].x));
    float _2097 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1119);
    float _2098 = isnan(_2097) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2097 : min(cbModelParam._m0[25u].z, _2097));
    float _2178;
    float _2180;
    float _2182;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2145 = fma(_1353, cbModelParam._m0[13u].z, fma(_1349, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1345)) + cbModelParam._m0[13u].w;
        float _2149 = fma(_1353, cbModelParam._m0[14u].z, fma(_1349, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1345)) + cbModelParam._m0[14u].w;
        float _2153 = fma(_1353, cbModelParam._m0[15u].z, fma(_1349, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1345)) + cbModelParam._m0[15u].w;
        float _2156 = fma(_1291, cbModelParam._m0[13u].z, fma(_1290, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1289));
        float _2159 = fma(_1291, cbModelParam._m0[14u].z, fma(_1290, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1289));
        float _2162 = fma(_1291, cbModelParam._m0[15u].z, fma(_1290, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1289));
        float _2190;
        if (_2156 > 0.0)
        {
            _2190 = abs((1.0 - _2145) / _2156);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2156 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2145 + 1.0) / _2156);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2190 = frontier_phi_14_12_ladder;
        }
        float _2362;
        if (_2159 > 0.0)
        {
            _2362 = abs((1.0 - _2149) / _2159);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2159 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2149 + 1.0) / _2159);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2362 = frontier_phi_23_19_ladder;
        }
        float _2657;
        if (_2162 > 0.0)
        {
            _2657 = abs((1.0 - _2153) / _2162);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2162 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2153 + 1.0) / _2162);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2657 = frontier_phi_35_30_ladder;
        }
        float _2659 = isnan(_2362) ? _2190 : (isnan(_2190) ? _2362 : min(_2190, _2362));
        float _2660 = isnan(_2657) ? _2659 : (isnan(_2659) ? _2657 : min(_2659, _2657));
        float _2664 = (_2660 * _2156) + _2145;
        float _2665 = (_2660 * _2159) + _2149;
        float _2666 = (_2660 * _2162) + _2153;
        float _2667 = _2660 * 9.9999997473787516355514526367188e-05;
        float _2669 = (-1.0) - _2667;
        float _2671 = _2667 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2666 > _2671) || ((_2666 < _2669) || ((_2665 > _2671) || ((_2665 < _2669) || ((_2664 < _2669) || (_2664 > _2671))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2811 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2666, cbModelParam._m0[9u].z, fma(_2665, cbModelParam._m0[9u].y, _2664 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2666, cbModelParam._m0[10u].z, fma(_2665, cbModelParam._m0[10u].y, _2664 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2666, cbModelParam._m0[11u].z, fma(_2665, cbModelParam._m0[11u].y, _2664 * cbModelParam._m0[11u].x))), _2098);
            frontier_phi_13_35_ladder = _2811.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2811.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2811.x * cbModelParam._m0[1u].y;
        }
        _2178 = frontier_phi_13_35_ladder_2;
        _2180 = frontier_phi_13_35_ladder_1;
        _2182 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2166 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1289, _1290, _1291), _2098);
        _2178 = _2166.x * cbModelParam._m0[1u].y;
        _2180 = _2166.y * cbModelParam._m0[1u].y;
        _2182 = _2166.z * cbModelParam._m0[1u].y;
    }
    float _2186 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1119);
    float _2187 = isnan(_2186) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2186 : min(cbModelParam._m0[25u].w, _2186));
    float _2277;
    float _2279;
    float _2281;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2241 = fma(_1353, cbModelParam._m0[21u].z, fma(_1349, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1345)) + cbModelParam._m0[21u].w;
        float _2245 = fma(_1353, cbModelParam._m0[22u].z, fma(_1349, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1345)) + cbModelParam._m0[22u].w;
        float _2249 = fma(_1353, cbModelParam._m0[23u].z, fma(_1349, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1345)) + cbModelParam._m0[23u].w;
        float _2252 = fma(_1291, cbModelParam._m0[21u].z, fma(_1290, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1289));
        float _2255 = fma(_1291, cbModelParam._m0[22u].z, fma(_1290, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1289));
        float _2258 = fma(_1291, cbModelParam._m0[23u].z, fma(_1290, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1289));
        float _2367;
        if (_2252 > 0.0)
        {
            _2367 = abs((1.0 - _2241) / _2252);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2252 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2241 + 1.0) / _2252);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2367 = frontier_phi_25_21_ladder;
        }
        float _2684;
        if (_2255 > 0.0)
        {
            _2684 = abs((1.0 - _2245) / _2255);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2255 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2245 + 1.0) / _2255);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2684 = frontier_phi_37_32_ladder;
        }
        float _3022;
        if (_2258 > 0.0)
        {
            _3022 = abs((1.0 - _2249) / _2258);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2258 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2249 + 1.0) / _2258);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _3022 = frontier_phi_47_44_ladder;
        }
        float _3024 = isnan(_2684) ? _2367 : (isnan(_2367) ? _2684 : min(_2367, _2684));
        float _3025 = isnan(_3022) ? _3024 : (isnan(_3024) ? _3022 : min(_3024, _3022));
        float _3029 = (_3025 * _2252) + _2241;
        float _3030 = (_3025 * _2255) + _2245;
        float _3031 = (_3025 * _2258) + _2249;
        float _3032 = _3025 * 9.9999997473787516355514526367188e-05;
        float _3033 = (-1.0) - _3032;
        float _3035 = _3032 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_3031 > _3035) || ((_3031 < _3033) || ((_3030 > _3035) || ((_3030 < _3033) || ((_3029 < _3033) || (_3029 > _3035))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3153 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3031, cbModelParam._m0[17u].z, fma(_3030, cbModelParam._m0[17u].y, _3029 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3031, cbModelParam._m0[18u].z, fma(_3030, cbModelParam._m0[18u].y, _3029 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3031, cbModelParam._m0[19u].z, fma(_3030, cbModelParam._m0[19u].y, _3029 * cbModelParam._m0[19u].x))), _2187);
            frontier_phi_22_47_ladder = _3153.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _3153.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _3153.x * cbModelParam._m0[1u].z;
        }
        _2277 = frontier_phi_22_47_ladder_2;
        _2279 = frontier_phi_22_47_ladder_1;
        _2281 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2261 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1289, _1290, _1291), _2187);
        _2277 = _2261.x * cbModelParam._m0[1u].z;
        _2279 = _2261.y * cbModelParam._m0[1u].z;
        _2281 = _2261.z * cbModelParam._m0[1u].z;
    }
    float _2294 = (((_1316 * _1265) + _1317) * _1281) * ((cbModelParam._m0[1u].w * (_2277 - _2178)) + _2178);
    float _2296 = (((_1316 * _1267) + _1317) * _1281) * ((cbModelParam._m0[1u].w * (_2279 - _2180)) + _2180);
    float _2298 = (((_1316 * _1268) + _1317) * _1281) * ((cbModelParam._m0[1u].w * (_2281 - _2182)) + _2182);
    float _2301 = fma(_2298, cbSceneParam._m0[89u].z, fma(_2296, cbSceneParam._m0[89u].y, _2294 * cbSceneParam._m0[89u].x));
    float _2304 = fma(_2298, cbSceneParam._m0[90u].z, fma(_2296, cbSceneParam._m0[90u].y, _2294 * cbSceneParam._m0[90u].x));
    float _2307 = fma(_2298, cbSceneParam._m0[91u].z, fma(_2296, cbSceneParam._m0[91u].y, _2294 * cbSceneParam._m0[91u].x));
    float _2341 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2345 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2349 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2353 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2354 = _2341 / _2353;
    float _2355 = _2345 / _2353;
    float _2356 = _2349 / _2353;
    float _2503;
    float _2504;
    float _2505;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2383 = ((uint(_2356 > cbSceneParam._m0[59u].y) + uint(_2356 > cbSceneParam._m0[59u].x)) + uint(_2356 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2384 = _2383 + 43u;
        uint _2392 = _2383 + 44u;
        uint _2400 = _2383 + 45u;
        uint _2408 = _2383 + 46u;
        float _2419 = fma(_2353, cbSceneParam._m0[_2384].w, fma(_2349, cbSceneParam._m0[_2384].z, fma(_2345, cbSceneParam._m0[_2384].y, _2341 * cbSceneParam._m0[_2384].x)));
        float _2423 = fma(_2353, cbSceneParam._m0[_2392].w, fma(_2349, cbSceneParam._m0[_2392].z, fma(_2345, cbSceneParam._m0[_2392].y, _2341 * cbSceneParam._m0[_2392].x)));
        float _2431 = fma(_2353, cbSceneParam._m0[_2408].w, fma(_2349, cbSceneParam._m0[_2408].z, fma(_2345, cbSceneParam._m0[_2408].y, _2341 * cbSceneParam._m0[_2408].x)));
        float _2436 = cbSceneParam._m0[33u].z * _2431;
        float _2438 = cbSceneParam._m0[33u].w * _2431;
        float _2441 = fma(_2353, cbSceneParam._m0[_2400].w, fma(_2349, cbSceneParam._m0[_2400].z, fma(_2345, cbSceneParam._m0[_2400].y, _2341 * cbSceneParam._m0[_2400].x))) / _2431;
        float _2489 = (cbSceneParam._m0[33u].x - sqrt(((_2355 * _2355) + (_2354 * _2354)) + (_2356 * _2356))) * cbSceneParam._m0[33u].y;
        float _4861 = isnan(0.0) ? _2489 : (isnan(_2489) ? 0.0 : max(_2489, 0.0));
        float _2496 = (isnan(1.0) ? _4861 : (isnan(_4861) ? 1.0 : min(_4861, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2436 + _2419) / _2431, (_2438 + _2423) / _2431), _2441), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2438 + _2419) / _2431, (_2423 - _2436) / _2431), _2441), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2419 - _2436) / _2431, (_2423 - _2438) / _2431), _2441), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2419 - _2438) / _2431, (_2436 + _2423) / _2431), _2441), 0.0)).x), vec4(0.25)));
        _2503 = 1.0 - (_2496 * cbSceneParam._m0[34u].x);
        _2504 = 1.0 - (_2496 * cbSceneParam._m0[34u].y);
        _2505 = 1.0 - (_2496 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2503 = 1.0;
        _2504 = 1.0;
        _2505 = 1.0;
    }
    float _2569;
    float _2571;
    float _2573;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2557 = fma(_2353, cbSceneParam._m0[63u].w, fma(_2349, cbSceneParam._m0[63u].z, fma(_2345, cbSceneParam._m0[63u].y, _2341 * cbSceneParam._m0[63u].x)));
        float _2558 = fma(_2353, cbSceneParam._m0[60u].w, fma(_2349, cbSceneParam._m0[60u].z, fma(_2345, cbSceneParam._m0[60u].y, _2341 * cbSceneParam._m0[60u].x))) / _2557;
        float _2559 = fma(_2353, cbSceneParam._m0[61u].w, fma(_2349, cbSceneParam._m0[61u].z, fma(_2345, cbSceneParam._m0[61u].y, _2341 * cbSceneParam._m0[61u].x))) / _2557;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2558 >= cbSceneParam._m0[64u].x) && (_2559 >= cbSceneParam._m0[64u].y)) && (_2558 <= cbSceneParam._m0[64u].z)) && (_2559 <= cbSceneParam._m0[64u].w))
        {
            float _2697 = fma(_2353, cbSceneParam._m0[62u].w, fma(_2349, cbSceneParam._m0[62u].z, fma(_2345, cbSceneParam._m0[62u].y, _2341 * cbSceneParam._m0[62u].x))) / _2557;
            float _2701 = isnan(cbSceneParam._m0[41u].w) ? _2697 : (isnan(_2697) ? cbSceneParam._m0[41u].w : max(_2697, cbSceneParam._m0[41u].w));
            float _2744 = (cbSceneParam._m0[33u].x - sqrt(((_2355 * _2355) + (_2354 * _2354)) + (_2356 * _2356))) * cbSceneParam._m0[33u].y;
            float _4877 = isnan(0.0) ? _2744 : (isnan(_2744) ? 0.0 : max(_2744, 0.0));
            float _2751 = (isnan(1.0) ? _4877 : (isnan(_4877) ? 1.0 : min(_4877, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2558, cbSceneParam._m0[33u].w + _2559), _2701), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2558, _2559 - cbSceneParam._m0[33u].z), _2701), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2558 - cbSceneParam._m0[33u].z, _2559 - cbSceneParam._m0[33u].w), _2701), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2558 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2559), _2701), 0.0)).x), vec4(0.25)));
            float _2755 = 1.0 - (_2751 * cbSceneParam._m0[34u].x);
            float _2756 = 1.0 - (_2751 * cbSceneParam._m0[34u].y);
            float _2757 = 1.0 - (_2751 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2757) ? _2505 : (isnan(_2505) ? _2757 : min(_2505, _2757));
            frontier_phi_34_33_ladder_1 = isnan(_2756) ? _2504 : (isnan(_2504) ? _2756 : min(_2504, _2756));
            frontier_phi_34_33_ladder_2 = isnan(_2755) ? _2503 : (isnan(_2503) ? _2755 : min(_2503, _2755));
        }
        else
        {
            frontier_phi_34_33_ladder = _2505;
            frontier_phi_34_33_ladder_1 = _2504;
            frontier_phi_34_33_ladder_2 = _2503;
        }
        _2569 = frontier_phi_34_33_ladder_2;
        _2571 = frontier_phi_34_33_ladder_1;
        _2573 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2569 = _2503;
        _2571 = _2504;
        _2573 = _2505;
    }
    uvec4 _2578 = floatBitsToUint(cbInstanceData._m0[_301 + 5u]);
    uint _2580 = _2578.x * 14u;
    uint _2581 = _2580 + 13u;
    float _2588 = _1281 + (-1.0);
    float _2593 = (cbLight._m0[_2581].x * _2588) + 1.0;
    float _2594 = (cbLight._m0[_2581].y * _2588) + 1.0;
    float _2595 = (cbLight._m0[_2581].z * _2588) + 1.0;
    float _2596 = (cbLight._m0[_2581].w * _2588) + 1.0;
    uint _2597 = _2580 + 5u;
    float _2603 = isnan(1.0) ? _2594 : (isnan(_2594) ? 1.0 : min(_2594, 1.0));
    uint _2607 = _2580 + 4u;
    float _2616 = isnan(1.0) ? _2593 : (isnan(_2593) ? 1.0 : min(_2593, 1.0));
    uint _2620 = _2580 | 1u;
    float _2631 = dot(vec3(cbLight._m0[_2580].xyz), vec3(_1116, _1117, _1118));
    float _2634 = dot(vec3(cbLight._m0[_2620].xyz), vec3(_1116, _1117, _1118));
    float _4913 = isnan(0.0) ? _2631 : (isnan(_2631) ? 0.0 : max(_2631, 0.0));
    float _4924 = isnan(0.0) ? _2634 : (isnan(_2634) ? 0.0 : max(_2634, 0.0));
    float _2639 = (isnan(1.0) ? _4913 : (isnan(_4913) ? 1.0 : min(_4913, 1.0))) * 0.3183098733425140380859375;
    float _2641 = (isnan(1.0) ? _4924 : (isnan(_4924) ? 1.0 : min(_4924, 1.0))) * 0.3183098733425140380859375;
    float _2648 = ((cbLight._m0[_2597].x * _2603) * _2641) + (((cbLight._m0[_2607].x * _2569) * _2616) * _2639);
    float _2649 = ((_2603 * cbLight._m0[_2597].y) * _2641) + (((cbLight._m0[_2607].y * _2571) * _2616) * _2639);
    float _2650 = ((_2603 * cbLight._m0[_2597].z) * _2641) + (((cbLight._m0[_2607].z * _2573) * _2616) * _2639);
    uvec4 _2654 = floatBitsToUint(cbLight._m0[_2580 + 12u]);
    bool _2656 = _2654.x == 0u;
    float _2758;
    float _2760;
    float _2762;
    if (_2656)
    {
        _2758 = _2648;
        _2760 = _2649;
        _2762 = _2650;
    }
    else
    {
        uint _2766 = _2580 + 6u;
        float _2782 = (dot(vec3(cbLight._m0[_2580 + 2u].xyz), vec3(_1116, _1117, _1118)) * 0.5) + 0.5;
        float _2783 = _2782 * _2782;
        float _4935 = isnan(0.0) ? _2783 : (isnan(_2783) ? 0.0 : max(_2783, 0.0));
        float _2784 = isnan(1.0) ? _4935 : (isnan(_4935) ? 1.0 : min(_4935, 1.0));
        float _2785 = isnan(1.0) ? _2595 : (isnan(_2595) ? 1.0 : min(_2595, 1.0));
        _2758 = (((cbLight._m0[_2766].x * 0.3183098733425140380859375) * _2784) * _2785) + _2648;
        _2760 = (((cbLight._m0[_2766].y * 0.3183098733425140380859375) * _2784) * _2785) + _2649;
        _2762 = (((cbLight._m0[_2766].z * 0.3183098733425140380859375) * _2784) * _2785) + _2650;
    }
    bool _2765 = _2654.y == 0u;
    float _2820;
    float _2822;
    float _2824;
    if (_2765)
    {
        _2820 = _2758;
        _2822 = _2760;
        _2824 = _2762;
    }
    else
    {
        uint _2993 = _2580 + 7u;
        float _3009 = (dot(vec3(cbLight._m0[_2580 + 3u].xyz), vec3(_1116, _1117, _1118)) * 0.5) + 0.5;
        float _3010 = _3009 * _3009;
        float _4951 = isnan(0.0) ? _3010 : (isnan(_3010) ? 0.0 : max(_3010, 0.0));
        float _3011 = isnan(1.0) ? _4951 : (isnan(_4951) ? 1.0 : min(_4951, 1.0));
        float _3012 = isnan(1.0) ? _2596 : (isnan(_2596) ? 1.0 : min(_2596, 1.0));
        _2820 = (((cbLight._m0[_2993].x * 0.3183098733425140380859375) * _3011) * _3012) + _2758;
        _2822 = (((cbLight._m0[_2993].y * 0.3183098733425140380859375) * _3011) * _3012) + _2760;
        _2824 = (((cbLight._m0[_2993].z * 0.3183098733425140380859375) * _3011) * _3012) + _2762;
    }
    uint _2827 = _2580 + 8u;
    float _2840 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2580].w)) * _1119) * 0.949999988079071044921875);
    float _2841 = _2840 * _2840;
    float _2842 = cbLight._m0[_2580].x + _1195;
    float _2843 = cbLight._m0[_2580].y + _1196;
    float _2844 = cbLight._m0[_2580].z + _1197;
    float _2848 = inversesqrt(dot(vec3(_2842, _2843, _2844), vec3(_2842, _2843, _2844)));
    float _2849 = _2848 * _2842;
    float _2850 = _2848 * _2843;
    float _2851 = _2848 * _2844;
    float _2852 = dot(vec3(_1116, _1117, _1118), vec3(cbLight._m0[_2580].xyz));
    float _4967 = isnan(0.0) ? _2852 : (isnan(_2852) ? 0.0 : max(_2852, 0.0));
    float _2855 = isnan(1.0) ? _4967 : (isnan(_4967) ? 1.0 : min(_4967, 1.0));
    float _4978 = isnan(0.0) ? _1282 : (isnan(_1282) ? 0.0 : max(_1282, 0.0));
    float _2856 = isnan(1.0) ? _4978 : (isnan(_4978) ? 1.0 : min(_4978, 1.0));
    float _2857 = dot(vec3(_1116, _1117, _1118), vec3(_2849, _2850, _2851));
    float _4989 = isnan(0.0) ? _2857 : (isnan(_2857) ? 0.0 : max(_2857, 0.0));
    float _2860 = isnan(1.0) ? _4989 : (isnan(_4989) ? 1.0 : min(_4989, 1.0));
    float _2861 = dot(vec3(cbLight._m0[_2580].xyz), vec3(_2849, _2850, _2851));
    float _5000 = isnan(0.0) ? _2861 : (isnan(_2861) ? 0.0 : max(_2861, 0.0));
    float _2865 = _2841 * _2841;
    float _2869 = ((_2860 * _2860) * (_2865 + (-1.0))) + 1.0;
    float _2877 = exp2(log2(1.0 - (isnan(1.0) ? _5000 : (isnan(_5000) ? 1.0 : min(_5000, 1.0)))) * 5.0);
    float _2878 = 0.959999978542327880859375 - _1262;
    float _2880 = 0.959999978542327880859375 - _1263;
    float _2881 = 0.959999978542327880859375 - _1264;
    float _2888 = 1.0 - _2841;
    float _2899 = (0.5 / (((_2856 * ((_2855 * _2888) + _2841)) + 9.9999999392252902907785028219223e-09) + (((_2856 * _2888) + _2841) * _2855))) * _2855;
    float _5011 = isnan(0.0) ? _2899 : (isnan(_2899) ? 0.0 : max(_2899, 0.0));
    float _2901 = (isnan(1.0) ? _5011 : (isnan(_5011) ? 1.0 : min(_5011, 1.0))) * (_2865 / ((_2869 * _2869) * 3.141590118408203125));
    uint _2915 = _2580 + 9u;
    float _2926 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2620].w)) * _1119) * 0.949999988079071044921875);
    float _2927 = _2926 * _2926;
    float _2928 = cbLight._m0[_2620].x + _1195;
    float _2929 = cbLight._m0[_2620].y + _1196;
    float _2930 = cbLight._m0[_2620].z + _1197;
    float _2934 = inversesqrt(dot(vec3(_2928, _2929, _2930), vec3(_2928, _2929, _2930)));
    float _2935 = _2934 * _2928;
    float _2936 = _2934 * _2929;
    float _2937 = _2934 * _2930;
    float _2938 = dot(vec3(_1116, _1117, _1118), vec3(cbLight._m0[_2620].xyz));
    float _5022 = isnan(0.0) ? _2938 : (isnan(_2938) ? 0.0 : max(_2938, 0.0));
    float _2941 = isnan(1.0) ? _5022 : (isnan(_5022) ? 1.0 : min(_5022, 1.0));
    float _2942 = dot(vec3(_1116, _1117, _1118), vec3(_2935, _2936, _2937));
    float _5033 = isnan(0.0) ? _2942 : (isnan(_2942) ? 0.0 : max(_2942, 0.0));
    float _2945 = isnan(1.0) ? _5033 : (isnan(_5033) ? 1.0 : min(_5033, 1.0));
    float _2946 = dot(vec3(cbLight._m0[_2620].xyz), vec3(_2935, _2936, _2937));
    float _5044 = isnan(0.0) ? _2946 : (isnan(_2946) ? 0.0 : max(_2946, 0.0));
    float _2950 = _2927 * _2927;
    float _2954 = ((_2945 * _2945) * (_2950 + (-1.0))) + 1.0;
    float _2961 = exp2(log2(1.0 - (isnan(1.0) ? _5044 : (isnan(_5044) ? 1.0 : min(_5044, 1.0)))) * 5.0);
    float _2968 = 1.0 - _2927;
    float _2978 = (0.5 / (((_2856 * ((_2941 * _2968) + _2927)) + 9.9999999392252902907785028219223e-09) + (((_2856 * _2968) + _2927) * _2941))) * _2941;
    float _5055 = isnan(0.0) ? _2978 : (isnan(_2978) ? 0.0 : max(_2978, 0.0));
    float _2980 = (isnan(1.0) ? _5055 : (isnan(_5055) ? 1.0 : min(_5055, 1.0))) * (_2950 / ((_2954 * _2954) * 3.141590118408203125));
    float _2990 = (((((_2961 * _2878) + _1265) * cbLight._m0[_2915].x) * _2980) * _2603) + ((((cbLight._m0[_2827].x * _2569) * ((_2877 * _2878) + _1265)) * _2901) * _2616);
    float _2991 = (((((_2961 * _2880) + _1267) * cbLight._m0[_2915].y) * _2980) * _2603) + ((((cbLight._m0[_2827].y * _2571) * ((_2877 * _2880) + _1267)) * _2901) * _2616);
    float _2992 = (((((_2961 * _2881) + _1268) * cbLight._m0[_2915].z) * _2980) * _2603) + ((((cbLight._m0[_2827].z * _2573) * ((_2877 * _2881) + _1268)) * _2901) * _2616);
    float _3048;
    float _3050;
    float _3052;
    if (_2656)
    {
        _3048 = _2990;
        _3050 = _2991;
        _3052 = _2992;
    }
    else
    {
        uint _3054 = _2580 + 2u;
        uint _3058 = _2580 + 10u;
        float _3072 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3054].w)) * _1119) * 0.949999988079071044921875);
        float _3073 = _3072 * _3072;
        float _3074 = cbLight._m0[_3054].x + _1195;
        float _3075 = cbLight._m0[_3054].y + _1196;
        float _3076 = cbLight._m0[_3054].z + _1197;
        float _3080 = inversesqrt(dot(vec3(_3074, _3075, _3076), vec3(_3074, _3075, _3076)));
        float _3081 = _3080 * _3074;
        float _3082 = _3080 * _3075;
        float _3083 = _3080 * _3076;
        float _3084 = dot(vec3(_1116, _1117, _1118), vec3(cbLight._m0[_3054].xyz));
        float _5066 = isnan(0.0) ? _3084 : (isnan(_3084) ? 0.0 : max(_3084, 0.0));
        float _3087 = isnan(1.0) ? _5066 : (isnan(_5066) ? 1.0 : min(_5066, 1.0));
        float _3088 = dot(vec3(_1116, _1117, _1118), vec3(_3081, _3082, _3083));
        float _5077 = isnan(0.0) ? _3088 : (isnan(_3088) ? 0.0 : max(_3088, 0.0));
        float _3091 = isnan(1.0) ? _5077 : (isnan(_5077) ? 1.0 : min(_5077, 1.0));
        float _3092 = dot(vec3(cbLight._m0[_3054].xyz), vec3(_3081, _3082, _3083));
        float _5088 = isnan(0.0) ? _3092 : (isnan(_3092) ? 0.0 : max(_3092, 0.0));
        float _3096 = _3073 * _3073;
        float _3100 = ((_3091 * _3091) * (_3096 + (-1.0))) + 1.0;
        float _3107 = exp2(log2(1.0 - (isnan(1.0) ? _5088 : (isnan(_5088) ? 1.0 : min(_5088, 1.0)))) * 5.0);
        float _3114 = 1.0 - _3073;
        float _3124 = (0.5 / (((_2856 * ((_3087 * _3114) + _3073)) + 9.9999999392252902907785028219223e-09) + (((_2856 * _3114) + _3073) * _3087))) * _3087;
        float _5099 = isnan(0.0) ? _3124 : (isnan(_3124) ? 0.0 : max(_3124, 0.0));
        float _3126 = (isnan(1.0) ? _5099 : (isnan(_5099) ? 1.0 : min(_5099, 1.0))) * (_3096 / ((_3100 * _3100) * 3.141590118408203125));
        float _3127 = isnan(1.0) ? _2595 : (isnan(_2595) ? 1.0 : min(_2595, 1.0));
        _3048 = (((((_3107 * _2878) + _1265) * cbLight._m0[_3058].x) * _3126) * _3127) + _2990;
        _3050 = (((((_3107 * _2880) + _1267) * cbLight._m0[_3058].y) * _3126) * _3127) + _2991;
        _3052 = (((((_3107 * _2881) + _1268) * cbLight._m0[_3058].z) * _3126) * _3127) + _2992;
    }
    float _3158;
    float _3160;
    float _3162;
    if (_2765)
    {
        _3158 = _3048;
        _3160 = _3050;
        _3162 = _3052;
    }
    else
    {
        uint _3169 = _2580 + 3u;
        uint _3173 = _2580 + 11u;
        float _3187 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3169].w)) * _1119) * 0.949999988079071044921875);
        float _3188 = _3187 * _3187;
        float _3189 = cbLight._m0[_3169].x + _1195;
        float _3190 = cbLight._m0[_3169].y + _1196;
        float _3191 = cbLight._m0[_3169].z + _1197;
        float _3195 = inversesqrt(dot(vec3(_3189, _3190, _3191), vec3(_3189, _3190, _3191)));
        float _3196 = _3195 * _3189;
        float _3197 = _3195 * _3190;
        float _3198 = _3195 * _3191;
        float _3199 = dot(vec3(_1116, _1117, _1118), vec3(cbLight._m0[_3169].xyz));
        float _5115 = isnan(0.0) ? _3199 : (isnan(_3199) ? 0.0 : max(_3199, 0.0));
        float _3202 = isnan(1.0) ? _5115 : (isnan(_5115) ? 1.0 : min(_5115, 1.0));
        float _3203 = dot(vec3(_1116, _1117, _1118), vec3(_3196, _3197, _3198));
        float _5126 = isnan(0.0) ? _3203 : (isnan(_3203) ? 0.0 : max(_3203, 0.0));
        float _3206 = isnan(1.0) ? _5126 : (isnan(_5126) ? 1.0 : min(_5126, 1.0));
        float _3207 = dot(vec3(cbLight._m0[_3169].xyz), vec3(_3196, _3197, _3198));
        float _5137 = isnan(0.0) ? _3207 : (isnan(_3207) ? 0.0 : max(_3207, 0.0));
        float _3211 = _3188 * _3188;
        float _3215 = ((_3206 * _3206) * (_3211 + (-1.0))) + 1.0;
        float _3222 = exp2(log2(1.0 - (isnan(1.0) ? _5137 : (isnan(_5137) ? 1.0 : min(_5137, 1.0)))) * 5.0);
        float _3229 = 1.0 - _3188;
        float _3239 = (0.5 / (((_2856 * ((_3202 * _3229) + _3188)) + 9.9999999392252902907785028219223e-09) + (((_2856 * _3229) + _3188) * _3202))) * _3202;
        float _5148 = isnan(0.0) ? _3239 : (isnan(_3239) ? 0.0 : max(_3239, 0.0));
        float _3241 = (isnan(1.0) ? _5148 : (isnan(_5148) ? 1.0 : min(_5148, 1.0))) * (_3211 / ((_3215 * _3215) * 3.141590118408203125));
        float _3242 = isnan(1.0) ? _2596 : (isnan(_2596) ? 1.0 : min(_2596, 1.0));
        _3158 = (((((_3222 * _2878) + _1265) * cbLight._m0[_3173].x) * _3241) * _3242) + _3048;
        _3160 = (((((_3222 * _2880) + _1267) * cbLight._m0[_3173].y) * _3241) * _3242) + _3050;
        _3162 = (((((_3222 * _2881) + _1268) * cbLight._m0[_3173].z) * _3241) * _3242) + _3052;
    }
    float _3308;
    float _3310;
    float _3312;
    float _3314;
    float _3316;
    float _3318;
    if (_2578.y == 0u)
    {
        uvec4 _3263 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3264 = _3263.x;
        uint _3275 = uint((float(_3263.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1204) / _3264))) + floor(float(uint(cbSceneParam._m0[85u].x * _1203) / _3264)));
        float _3285 = (log2(_2356 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3286 = isnan(0.0) ? _3285 : (isnan(_3285) ? 0.0 : max(_3285, 0.0));
        uint _3289 = uint(isnan(14.0) ? _3286 : (isnan(_3286) ? 14.0 : min(_3286, 14.0)));
        uvec4 _3294 = texelFetch(g_lightClusterGridBuffer, int(((_3289 << 2u) + (_3275 << 6u)) >> 2u));
        uint _3295 = _3294.x;
        uint _3296 = _3263.z;
        float _3375;
        float _3377;
        float _3379;
        float _3381;
        float _3383;
        float _3385;
        if (((((1u << ((_3296 >> 4u) & 15u)) + 4294967295u) & _3295) == 0u) || ((_3296 & 240u) == 0u))
        {
            _3375 = 0.0;
            _3377 = 0.0;
            _3379 = 0.0;
            _3381 = 0.0;
            _3383 = 0.0;
            _3385 = 0.0;
        }
        else
        {
            float _3376;
            float _3378;
            float _3380;
            float _3382;
            float _3384;
            float _3386;
            float _3520 = 0.0;
            float _3521 = 0.0;
            float _3522 = 0.0;
            float _3523 = 0.0;
            float _3524 = 0.0;
            float _3525 = 0.0;
            uint _3526 = 0u;
            uint _3535;
            bool _3536;
            for (;;)
            {
                _3535 = texelFetch(g_lightClassification, int((((_3289 << 5u) + (_3275 << 9u)) + (_3526 << 2u)) >> 2u)).x;
                _3536 = _3535 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3536)
                {
                    frontier_phi_66_pred = _3525;
                    frontier_phi_66_pred_1 = _3524;
                    frontier_phi_66_pred_2 = _3523;
                    frontier_phi_66_pred_3 = _3522;
                    frontier_phi_66_pred_4 = _3521;
                    frontier_phi_66_pred_5 = _3520;
                }
                else
                {
                    float _3644;
                    float _3645;
                    float _3646;
                    float _3647;
                    float _3648;
                    float _3649;
                    uint _3650;
                    _3644 = _3520;
                    _3645 = _3521;
                    _3646 = _3522;
                    _3647 = _3523;
                    _3648 = _3524;
                    _3649 = _3525;
                    _3650 = _3535;
                    float _3576;
                    float _3577;
                    float _3578;
                    float _3579;
                    float _3580;
                    float _3581;
                    for (;;)
                    {
                        uint _3654 = uint(findLSB(_3650)) + (_3526 << 5u);
                        uint _3651 = (_3650 + 4294967295u) & _3650;
                        uint _3656 = _3654 * 48u;
                        vec4 _3670 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3656)).x, texelFetch(g_PointLightRenderingBuffer, int(_3656 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3656 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3656 + 3u)).x));
                        uint _3676 = (_3654 * 48u) + 4u;
                        vec4 _3689 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3676)).x, texelFetch(g_PointLightRenderingBuffer, int(_3676 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3676 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3676 + 3u)).x));
                        uint _3695 = (_3654 * 48u) + 8u;
                        vec3 _3706 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3695)).x, texelFetch(g_PointLightRenderingBuffer, int(_3695 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3695 + 2u)).x));
                        float _3710 = _3670.x - _2354;
                        float _3711 = _3670.y - _2355;
                        float _3712 = _3670.z - _2356;
                        float _3713 = dot(vec3(_3710, _3711, _3712), vec3(_3710, _3711, _3712));
                        float _3716 = inversesqrt(_3713);
                        float _3717 = _3716 * _3710;
                        float _3718 = _3716 * _3711;
                        float _3719 = _3716 * _3712;
                        float _3720 = dot(vec3(_1222, _1225, _1228), vec3(_3717, _3718, _3719));
                        float _3725 = 1.0 - (_3713 * _3670.w);
                        float _5174 = isnan(0.0) ? _3725 : (isnan(_3725) ? 0.0 : max(_3725, 0.0));
                        float _3726 = isnan(1.0) ? _5174 : (isnan(_5174) ? 1.0 : min(_5174, 1.0));
                        float _3727 = sqrt(_3713) * _3689.w;
                        float _3730 = 1.39999997615814208984375 / (_3727 + 1.39999997615814208984375);
                        float _3731 = _3730 * _3730;
                        float _3734 = ((1.0 - _3731) * _3720) + _3731;
                        float _3737 = _3727 * _3727;
                        float _3741 = ((isnan(0.0) ? _3734 : (isnan(_3734) ? 0.0 : max(_3734, 0.0))) * _3726) / ((_3737 * 0.699999988079071044921875) + 1.0);
                        float _3745 = (-0.0) - _2354;
                        float _3746 = (-0.0) - _2355;
                        float _3747 = (-0.0) - _2356;
                        float _3751 = inversesqrt(dot(vec3(_3745, _3746, _3747), vec3(_3745, _3746, _3747)));
                        float _3752 = _3751 * _3745;
                        float _3753 = _3751 * _3746;
                        float _3754 = _3751 * _3747;
                        float _3761 = exp2(log2(1.0 / ((_3737 * 3.5) + 5.0)) * 0.25);
                        float _3762 = 1.0 - _1297;
                        float _3769 = sqrt(1.0 - ((1.0 - (_3762 * _3762)) * (1.0 - (_3761 * _3761))));
                        float _3770 = _3769 * _3769;
                        float _3771 = _3770 * _3770;
                        float _3772 = _3752 + _3717;
                        float _3773 = _3753 + _3718;
                        float _3774 = _3754 + _3719;
                        float _3778 = inversesqrt(dot(vec3(_3772, _3773, _3774), vec3(_3772, _3773, _3774)));
                        float _3782 = dot(vec3(_1222, _1225, _1228), vec3(_3752, _3753, _3754));
                        float _5190 = isnan(0.0) ? _3782 : (isnan(_3782) ? 0.0 : max(_3782, 0.0));
                        float _3785 = isnan(1.0) ? _5190 : (isnan(_5190) ? 1.0 : min(_5190, 1.0));
                        float _3786 = dot(vec3(_1222, _1225, _1228), vec3(_3778 * _3772, _3778 * _3773, _3778 * _3774));
                        float _5201 = isnan(0.0) ? _3786 : (isnan(_3786) ? 0.0 : max(_3786, 0.0));
                        float _3789 = isnan(1.0) ? _5201 : (isnan(_5201) ? 1.0 : min(_5201, 1.0));
                        float _3793 = ((_3789 * _3789) * (_3771 + (-1.0))) + 1.0;
                        float _3794 = _3730 * _3770;
                        float _3795 = _3794 * _3794;
                        float _3798 = ((1.0 - _3795) * _3720) + _3795;
                        float _5212 = isnan(0.0) ? _3798 : (isnan(_3798) ? 0.0 : max(_3798, 0.0));
                        float _3799 = isnan(1.0) ? _5212 : (isnan(_5212) ? 1.0 : min(_5212, 1.0));
                        float _3800 = 1.0 - _3770;
                        float _3810 = (0.5 / (((_3799 * ((_3785 * _3800) + _3770)) + 9.9999999392252902907785028219223e-09) + (((_3799 * _3800) + _3770) * _3785))) * _3799;
                        float _5223 = isnan(0.0) ? _3810 : (isnan(_3810) ? 0.0 : max(_3810, 0.0));
                        float _3821 = (((_3771 * 3.1415927410125732421875) * (isnan(1.0) ? _5223 : (isnan(_5223) ? 1.0 : min(_5223, 1.0)))) / ((_3793 * _3793) * ((_3737 * 2.1991131305694580078125) + 3.141590118408203125))) * _3726;
                        _3579 = (_3741 * _3689.x) + _3647;
                        _3580 = (_3741 * _3689.y) + _3648;
                        _3581 = (_3741 * _3689.z) + _3649;
                        _3576 = (_3821 * _3706.x) + _3644;
                        _3577 = (_3821 * _3706.y) + _3645;
                        _3578 = (_3821 * _3706.z) + _3646;
                        if (_3651 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3644 = _3576;
                            _3645 = _3577;
                            _3646 = _3578;
                            _3647 = _3579;
                            _3648 = _3580;
                            _3649 = _3581;
                            _3650 = _3651;
                        }
                    }
                    frontier_phi_66_pred = _3581;
                    frontier_phi_66_pred_1 = _3580;
                    frontier_phi_66_pred_2 = _3579;
                    frontier_phi_66_pred_3 = _3578;
                    frontier_phi_66_pred_4 = _3577;
                    frontier_phi_66_pred_5 = _3576;
                }
                _3386 = frontier_phi_66_pred;
                _3384 = frontier_phi_66_pred_1;
                _3382 = frontier_phi_66_pred_2;
                _3380 = frontier_phi_66_pred_3;
                _3378 = frontier_phi_66_pred_4;
                _3376 = frontier_phi_66_pred_5;
                uint _3527 = _3526 + 1u;
                if (_3527 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3520 = _3376;
                    _3521 = _3378;
                    _3522 = _3380;
                    _3523 = _3382;
                    _3524 = _3384;
                    _3525 = _3386;
                    _3526 = _3527;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3375 = _3376;
            _3377 = _3378;
            _3379 = _3380;
            _3381 = _3382;
            _3383 = _3384;
            _3385 = _3386;
        }
        uvec4 _3389 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3390 = _3389.z;
        uint _3392 = (_3390 >> 8u) & 15u;
        float _3488;
        float _3490;
        float _3492;
        float _3494;
        float _3496;
        float _3498;
        if (((4294967295u << _3392) & _3295) == 0u)
        {
            _3488 = _3375;
            _3490 = _3377;
            _3492 = _3379;
            _3494 = _3381;
            _3496 = _3383;
            _3498 = _3385;
        }
        else
        {
            float _3513 = inversesqrt(dot(vec3(_2354, _2355, _2356), vec3(_2354, _2355, _2356)));
            float _3514 = _3513 * _2354;
            float _3515 = _3513 * _2355;
            float _3516 = _3513 * _2356;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3392 < ((_3390 >> 12u) & 15u))
            {
                float _3489;
                float _3491;
                float _3493;
                float _3495;
                float _3497;
                float _3499;
                float _3627 = _3375;
                float _3628 = _3377;
                float _3629 = _3379;
                float _3630 = _3381;
                float _3631 = _3383;
                float _3632 = _3385;
                uint _3633 = _3392;
                uint _3642;
                bool _3643;
                for (;;)
                {
                    _3642 = texelFetch(g_lightClassification, int((((_3289 << 5u) + (_3275 << 9u)) + (_3633 << 2u)) >> 2u)).x;
                    _3643 = _3642 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3643)
                    {
                        frontier_phi_72_pred = _3632;
                        frontier_phi_72_pred_1 = _3631;
                        frontier_phi_72_pred_2 = _3630;
                        frontier_phi_72_pred_3 = _3629;
                        frontier_phi_72_pred_4 = _3628;
                        frontier_phi_72_pred_5 = _3627;
                    }
                    else
                    {
                        float _3826;
                        float _3827;
                        float _3828;
                        float _3829;
                        float _3830;
                        float _3831;
                        float _4119;
                        float _4120;
                        float _4121;
                        float _4122;
                        float _4123;
                        float _4124;
                        float _3839 = _3627;
                        float _3840 = _3628;
                        float _3841 = _3629;
                        float _3842 = _3630;
                        float _3843 = _3631;
                        float _3844 = _3632;
                        uint _3845 = _3642;
                        uint _3846;
                        vec4 _3871;
                        float _3872;
                        vec4 _3887;
                        vec3 _3899;
                        vec4 _3914;
                        vec4 _3929;
                        float _3975;
                        bool _3976;
                        for (;;)
                        {
                            uint _3856 = ((_3633 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3845));
                            _3846 = (_3845 + 4294967295u) & _3845;
                            uint _3858 = _3856 * 40u;
                            _3871 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3858)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3858 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3858 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3858 + 3u)).x));
                            _3872 = _3871.w;
                            uint _3874 = (_3856 * 40u) + 4u;
                            _3887 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3874)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3874 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3874 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3874 + 3u)).x));
                            uint _3889 = (_3856 * 40u) + 8u;
                            _3899 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3889)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3889 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3889 + 2u)).x));
                            uint _3901 = (_3856 * 40u) + 16u;
                            _3914 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3901)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3901 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3901 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3901 + 3u)).x));
                            uint _3916 = (_3856 * 40u) + 20u;
                            _3929 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3916)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3916 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3916 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3916 + 3u)).x));
                            uint _3931 = (_3856 * 40u) + 24u;
                            vec4 _3944 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3931)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3931 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3931 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3931 + 3u)).x));
                            uint _3950 = (_3856 * 40u) + 28u;
                            vec4 _3963 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3950)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3950 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3950 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3950 + 3u)).x));
                            _3975 = fma(_2356, _3963.z, fma(_2355, _3963.y, _3963.x * _2354)) + _3963.w;
                            _3976 = !((fma(_2356, _3944.z, fma(_2355, _3944.y, _3944.x * _2354)) + _3944.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3976)
                            {
                                float _4003 = _3871.x - _2354;
                                float _4004 = _3871.y - _2355;
                                float _4005 = _3871.z - _2356;
                                float _4006 = dot(vec3(_4003, _4004, _4005), vec3(_4003, _4004, _4005));
                                float _4009 = inversesqrt(_4006);
                                float _4010 = _4009 * _4003;
                                float _4011 = _4009 * _4004;
                                float _4012 = _4009 * _4005;
                                float _4016 = 1.0 - (_4006 / (_3872 * _3872));
                                float _5234 = isnan(0.0) ? _4016 : (isnan(_4016) ? 0.0 : max(_4016, 0.0));
                                float _4017 = isnan(1.0) ? _5234 : (isnan(_5234) ? 1.0 : min(_5234, 1.0));
                                float _4021 = sqrt(_4006) * _3887.w;
                                float _4023 = 1.39999997615814208984375 / (_4021 + 1.39999997615814208984375);
                                float _4024 = _4023 * _4023;
                                float _4027 = ((1.0 - _4024) * dot(vec3(_4010, _4011, _4012), vec3(_1222, _1225, _1228))) + _4024;
                                float _4030 = _4021 * _4021;
                                float _4034 = (fma(_2356, _3914.z, fma(_2355, _3914.y, _3914.x * _2354)) + _3914.w) / _3975;
                                float _4035 = (fma(_2356, _3929.z, fma(_2355, _3929.y, _3929.x * _2354)) + _3929.w) / _3975;
                                float _4039 = 1.0 - dot(vec2(_4034, _4035), vec2(_4034, _4035));
                                float _5250 = isnan(0.0) ? _4039 : (isnan(_4039) ? 0.0 : max(_4039, 0.0));
                                float _4040 = isnan(1.0) ? _5250 : (isnan(_5250) ? 1.0 : min(_5250, 1.0));
                                float _4041 = _4040 * (((isnan(0.0) ? _4027 : (isnan(_4027) ? 0.0 : max(_4027, 0.0))) * _4017) / ((_4030 * 0.699999988079071044921875) + 1.0));
                                float _4053 = exp2(log2(1.0 / ((_4030 * 3.5) + 5.0)) * 0.25);
                                float _4054 = 1.0 - _1297;
                                float _4061 = sqrt(1.0 - ((1.0 - (_4054 * _4054)) * (1.0 - (_4053 * _4053))));
                                float _4062 = _4061 * _4061;
                                float _4063 = _4062 * _4062;
                                float _4064 = _4010 - _3514;
                                float _4065 = _4011 - _3515;
                                float _4066 = _4012 - _3516;
                                float _4070 = inversesqrt(dot(vec3(_4064, _4065, _4066), vec3(_4064, _4065, _4066)));
                                float _4074 = dot(vec3(_1222, _1225, _1228), vec3((-0.0) - _3514, (-0.0) - _3515, (-0.0) - _3516));
                                float _5261 = isnan(0.0) ? _4074 : (isnan(_4074) ? 0.0 : max(_4074, 0.0));
                                float _4077 = isnan(1.0) ? _5261 : (isnan(_5261) ? 1.0 : min(_5261, 1.0));
                                float _4078 = dot(vec3(_1222, _1225, _1228), vec3(_4070 * _4064, _4070 * _4065, _4070 * _4066));
                                float _5272 = isnan(0.0) ? _4078 : (isnan(_4078) ? 0.0 : max(_4078, 0.0));
                                float _4081 = isnan(1.0) ? _5272 : (isnan(_5272) ? 1.0 : min(_5272, 1.0));
                                float _4085 = ((_4081 * _4081) * (_4063 + (-1.0))) + 1.0;
                                float _4086 = _4023 * _4062;
                                float _4087 = _4086 * _4086;
                                float _4093 = ((1.0 - _4087) * dot(vec3(_1222, _1225, _1228), vec3(_4010, _4011, _4012))) + _4087;
                                float _5283 = isnan(0.0) ? _4093 : (isnan(_4093) ? 0.0 : max(_4093, 0.0));
                                float _4094 = isnan(1.0) ? _5283 : (isnan(_5283) ? 1.0 : min(_5283, 1.0));
                                float _4095 = 1.0 - _4062;
                                float _4105 = (0.5 / (((_4094 * ((_4077 * _4095) + _4062)) + 9.9999999392252902907785028219223e-09) + (((_4094 * _4095) + _4062) * _4077))) * _4094;
                                float _5294 = isnan(0.0) ? _4105 : (isnan(_4105) ? 0.0 : max(_4105, 0.0));
                                float _4115 = (_4040 * _4017) * (((_4063 * 3.1415927410125732421875) * (isnan(1.0) ? _5294 : (isnan(_5294) ? 1.0 : min(_5294, 1.0)))) / ((_4085 * _4085) * ((_4030 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _4041 * _3887.y;
                                frontier_phi_78_pred_1 = _4041 * _3887.x;
                                frontier_phi_78_pred_2 = _4115 * _3899.z;
                                frontier_phi_78_pred_3 = _4115 * _3899.y;
                                frontier_phi_78_pred_4 = _4115 * _3899.x;
                                frontier_phi_78_pred_5 = _4041 * _3887.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _4123 = frontier_phi_78_pred;
                            _4122 = frontier_phi_78_pred_1;
                            _4121 = frontier_phi_78_pred_2;
                            _4120 = frontier_phi_78_pred_3;
                            _4119 = frontier_phi_78_pred_4;
                            _4124 = frontier_phi_78_pred_5;
                            _3829 = _4122 + _3842;
                            _3830 = _4123 + _3843;
                            _3831 = _4124 + _3844;
                            _3826 = _4119 + _3839;
                            _3827 = _4120 + _3840;
                            _3828 = _4121 + _3841;
                            if (_3846 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3839 = _3826;
                                _3840 = _3827;
                                _3841 = _3828;
                                _3842 = _3829;
                                _3843 = _3830;
                                _3844 = _3831;
                                _3845 = _3846;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3831;
                        frontier_phi_72_pred_1 = _3830;
                        frontier_phi_72_pred_2 = _3829;
                        frontier_phi_72_pred_3 = _3828;
                        frontier_phi_72_pred_4 = _3827;
                        frontier_phi_72_pred_5 = _3826;
                    }
                    _3499 = frontier_phi_72_pred;
                    _3497 = frontier_phi_72_pred_1;
                    _3495 = frontier_phi_72_pred_2;
                    _3493 = frontier_phi_72_pred_3;
                    _3491 = frontier_phi_72_pred_4;
                    _3489 = frontier_phi_72_pred_5;
                    uint _3634 = _3633 + 1u;
                    if (_3634 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3627 = _3489;
                        _3628 = _3491;
                        _3629 = _3493;
                        _3630 = _3495;
                        _3631 = _3497;
                        _3632 = _3499;
                        _3633 = _3634;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3499;
                frontier_phi_60_61_ladder_1 = _3497;
                frontier_phi_60_61_ladder_2 = _3493;
                frontier_phi_60_61_ladder_3 = _3491;
                frontier_phi_60_61_ladder_4 = _3489;
                frontier_phi_60_61_ladder_5 = _3495;
            }
            else
            {
                frontier_phi_60_61_ladder = _3385;
                frontier_phi_60_61_ladder_1 = _3383;
                frontier_phi_60_61_ladder_2 = _3379;
                frontier_phi_60_61_ladder_3 = _3377;
                frontier_phi_60_61_ladder_4 = _3375;
                frontier_phi_60_61_ladder_5 = _3381;
            }
            _3488 = frontier_phi_60_61_ladder_4;
            _3490 = frontier_phi_60_61_ladder_3;
            _3492 = frontier_phi_60_61_ladder_2;
            _3494 = frontier_phi_60_61_ladder_5;
            _3496 = frontier_phi_60_61_ladder_1;
            _3498 = frontier_phi_60_61_ladder;
        }
        float _3503 = isnan(1.0) ? _1281 : (isnan(_1281) ? 1.0 : min(_1281, 1.0));
        _3308 = (_3503 * _3494) + _2820;
        _3310 = (_3503 * _3496) + _2822;
        _3312 = (_3503 * _3498) + _2824;
        _3314 = ((_3488 * _1265) * _3503) + _3158;
        _3316 = ((_3490 * _1267) * _3503) + _3160;
        _3318 = ((_3492 * _1268) * _3503) + _3162;
    }
    else
    {
        _3308 = _2820;
        _3310 = _2822;
        _3312 = _2824;
        _3314 = _3158;
        _3316 = _3160;
        _3318 = _3162;
    }
    float _5310 = isnan(0.0) ? _1255 : (isnan(_1255) ? 0.0 : max(_1255, 0.0));
    float _5321 = isnan(0.0) ? _1256 : (isnan(_1256) ? 0.0 : max(_1256, 0.0));
    float _5332 = isnan(0.0) ? _1257 : (isnan(_1257) ? 0.0 : max(_1257, 0.0));
    uint _3338 = _301 + 6u;
    float _3346 = _1203 / cbSceneParam._m0[86u].x;
    float _3347 = _1204 / cbSceneParam._m0[86u].y;
    vec4 _3361 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3346, _3347, (log2((isnan(cbSceneParam._m0[77u].w) ? _1138 : (isnan(_1138) ? cbSceneParam._m0[77u].w : min(_1138, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3363 = _3361.x;
    float _3364 = _3361.y;
    float _3365 = _3361.z;
    float _3366 = _3361.w;
    float _3438;
    float _3440;
    float _3442;
    float _3444;
    if (_1138 > cbSceneParam._m0[78u].w)
    {
        float _3400 = isnan(_1138) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1138 : min(cbSceneParam._m0[80u].w, _1138));
        float _3401 = _3400 / _1138;
        float _3412 = _3401 * _1188;
        float _3413 = _1189 * _3401;
        float _3414 = (-0.0) - _3413;
        float _3416 = _3401 * _1190;
        float _3418 = (cbSceneParam._m0[77u].w * _3414) / _3400;
        float _3419 = _3418 + cbSceneParam._m0[79u].w;
        float _3420 = cbSceneParam._m0[79u].w - _3413;
        float _3426 = sqrt(((_3412 * _3412) + (_3413 * _3413)) + (_3416 * _3416));
        float _3429 = (1.0 - (cbSceneParam._m0[77u].w / _3400)) * _3426;
        float _3434 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3436 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3589;
        if (abs((_3414 - _3418) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3589 = ((((_3419 > 0.0) ? exp2(_3434 * _3419) : (2.0 - exp2(_3436 * _3419))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3429;
        }
        else
        {
            float _3549 = 1.0 / cbSceneParam._m0[80u].x;
            float _3550 = isnan(_3420) ? _3419 : (isnan(_3419) ? _3420 : max(_3419, _3420));
            float _3551 = isnan(_3420) ? _3419 : (isnan(_3419) ? _3420 : min(_3419, _3420));
            float _3560 = isnan(0.0) ? _3550 : (isnan(_3550) ? 0.0 : min(_3550, 0.0));
            float _3561 = isnan(0.0) ? _3551 : (isnan(_3551) ? 0.0 : min(_3551, 0.0));
            _3589 = ((abs(_3426 / _3414) * cbSceneParam._m0[80u].y) * ((((_3560 - _3561) * 2.0) - ((exp2(_3434 * (isnan(0.0) ? _3550 : (isnan(_3550) ? 0.0 : max(_3550, 0.0)))) - exp2(_3434 * (isnan(0.0) ? _3551 : (isnan(_3551) ? 0.0 : max(_3551, 0.0))))) * _3549)) - ((exp2(_3436 * _3560) - exp2(_3436 * _3561)) * _3549))) + (_3429 * cbSceneParam._m0[80u].z);
        }
        vec4 _3591 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3346, _3347, 1.0), 0.0);
        float _3600 = exp2((_3589 * (-1.44269502162933349609375)) * (1.0 - _3591.w));
        float _3601 = log2(_3600);
        float _3617 = log2(_3366);
        _3438 = (exp2(_3617 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3601 * cbSceneParam._m0[78u].x)) * _3591.x) / cbSceneParam._m0[78u].x)) + _3363;
        _3440 = (exp2(_3617 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3601 * cbSceneParam._m0[78u].y)) * _3591.y) / cbSceneParam._m0[78u].y)) + _3364;
        _3442 = (exp2(_3617 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3601 * cbSceneParam._m0[78u].z)) * _3591.z) / cbSceneParam._m0[78u].z)) + _3365;
        _3444 = _3600 * _3366;
    }
    else
    {
        _3438 = _3363;
        _3440 = _3364;
        _3442 = _3365;
        _3444 = _3366;
    }
    float _3456 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3457 = _3456 == 3.0;
    float _3458 = log2(_3444);
    float _3465 = exp2(_3458 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5310 : (isnan(_5310) ? 1.0 : min(_5310, 1.0))) * (_3308 + ((isnan(0.0) ? _2008 : (isnan(_2008) ? 0.0 : max(_2008, 0.0))) * _1281))) + ((_3314 + ((isnan(0.0) ? _2301 : (isnan(_2301) ? 0.0 : max(_2301, 0.0))) * _2087)) * cbPerFrame._m0[3u].x));
    float _3466 = exp2(_3458 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5321 : (isnan(_5321) ? 1.0 : min(_5321, 1.0))) * (_3310 + ((isnan(0.0) ? _2011 : (isnan(_2011) ? 0.0 : max(_2011, 0.0))) * _1281))) + ((_3316 + ((isnan(0.0) ? _2304 : (isnan(_2304) ? 0.0 : max(_2304, 0.0))) * _2087)) * cbPerFrame._m0[3u].x));
    float _3467 = exp2(_3458 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5332 : (isnan(_5332) ? 1.0 : min(_5332, 1.0))) * (_3312 + ((isnan(0.0) ? _2014 : (isnan(_2014) ? 0.0 : max(_2014, 0.0))) * _1281))) + ((_3318 + ((isnan(0.0) ? _2307 : (isnan(_2307) ? 0.0 : max(_2307, 0.0))) * _2087)) * cbPerFrame._m0[3u].x));
    float _3476 = (_3456 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3476 * (_3457 ? _3465 : (_3465 + (cbSceneParam._m0[72u].w * _3438)));
    SV_Target.y = _3476 * (_3457 ? _3466 : (_3466 + (cbSceneParam._m0[72u].w * _3440)));
    SV_Target.z = _3476 * (_3457 ? _3467 : (_3467 + (cbSceneParam._m0[72u].w * _3442)));
    SV_Target.w = cbInstanceData._m0[_3338].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3338].w;
}


