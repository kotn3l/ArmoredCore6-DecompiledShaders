#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 21) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1702;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _252 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _253 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _254 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _260 = inversesqrt(dot(vec3(_252, _253, _254), vec3(_252, _253, _254)));
    float _267 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _274 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _286 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _288 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _289 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4026 = isnan(0.0) ? _286 : (isnan(_286) ? 0.0 : max(_286, 0.0));
    float _4037 = isnan(0.0) ? _288 : (isnan(_288) ? 0.0 : max(_288, 0.0));
    float _4048 = isnan(0.0) ? _289 : (isnan(_289) ? 0.0 : max(_289, 0.0));
    uint _299 = uint(roundEven(NORMAL.w)) * 13u;
    uint _304 = _299 + 1u;
    uint _308 = _299 + 2u;
    float _317 = sqrt(((cbInstanceData._m0[_304].x * cbInstanceData._m0[_304].x) + (cbInstanceData._m0[_299].x * cbInstanceData._m0[_299].x)) + (cbInstanceData._m0[_308].x * cbInstanceData._m0[_308].x));
    float _318 = _317 * TEXCOORD.z;
    float _319 = _317 * TEXCOORD.w;
    vec4 _332 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _318) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _319) + cbTextureTilingScale._m0[13u].w));
    vec4 _355 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _381 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _386 = _381.x * cbMtdParam._m0[11u].x;
    float _387 = _381.y * cbMtdParam._m0[11u].y;
    float _388 = _381.z * cbMtdParam._m0[11u].z;
    vec4 _407 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _318) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _319) + cbTextureTilingScale._m0[5u].w));
    vec4 _426 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _461 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _463 = _461.x;
    float _475 = dot(vec4(_463, _461.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _492 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _426.x) * 2.0) - ((((_463 - _475) * cbMtdParam._m0[23u].w) + _475) * cbMtdParam._m0[22u].w))) + 1.0;
    float _4059 = isnan(0.0) ? _492 : (isnan(_492) ? 0.0 : max(_492, 0.0));
    float _493 = isnan(1.0) ? _4059 : (isnan(_4059) ? 1.0 : min(_4059, 1.0));
    float _500 = (_493 * ((_407.x * cbMtdParam._m0[12u].x) - _386)) + _386;
    float _501 = (_493 * ((_407.y * cbMtdParam._m0[12u].y) - _387)) + _387;
    float _502 = (_493 * ((_407.z * cbMtdParam._m0[12u].z) - _388)) + _388;
    vec4 _519 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _318) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _319) + cbTextureTilingScale._m0[3u].w));
    vec4 _539 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _541 = _539.x;
    float _551 = dot(vec4(_541, _539.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _565 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _426.y) * 2.0) - ((((_541 - _551) * cbMtdParam._m0[23u].w) + _551) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4070 = isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : max(_565, 0.0));
    float _566 = isnan(1.0) ? _4070 : (isnan(_4070) ? 1.0 : min(_4070, 1.0));
    float _573 = (_566 * ((_519.x * cbMtdParam._m0[13u].x) - _500)) + _500;
    float _574 = (_566 * ((_519.y * cbMtdParam._m0[13u].y) - _501)) + _501;
    float _575 = (_566 * ((_519.z * cbMtdParam._m0[13u].z) - _502)) + _502;
    vec4 _594 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _318) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _319) + cbTextureTilingScale._m0[24u].w));
    vec4 _611 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _613 = _611.x;
    float _623 = dot(vec4(_613, _611.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _635 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _426.z) * 2.0) - ((((_613 - _623) * cbMtdParam._m0[23u].w) + _623) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4081 = isnan(0.0) ? _635 : (isnan(_635) ? 0.0 : max(_635, 0.0));
    float _636 = isnan(1.0) ? _4081 : (isnan(_4081) ? 1.0 : min(_4081, 1.0));
    float _646 = (_355.x * cbMtdParam._m0[9u].x) * ((_636 * ((_594.x * cbMtdParam._m0[14u].x) - _573)) + _573);
    float _647 = (_355.y * cbMtdParam._m0[9u].y) * ((_636 * ((_594.y * cbMtdParam._m0[14u].y) - _574)) + _574);
    float _648 = (_355.z * cbMtdParam._m0[9u].z) * ((_636 * ((_594.z * cbMtdParam._m0[14u].z) - _575)) + _575);
    float _652 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _332.x) * _646;
    float _655 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _332.y) * _647;
    float _658 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _332.z) * _648;
    float _666 = (((_646 - _652) * (isnan(1.0) ? _4026 : (isnan(_4026) ? 1.0 : min(_4026, 1.0)))) + _652) * 4.55000019073486328125;
    float _668 = (((_647 - _655) * (isnan(1.0) ? _4037 : (isnan(_4037) ? 1.0 : min(_4037, 1.0)))) + _655) * 4.55000019073486328125;
    float _670 = (((_648 - _658) * (isnan(1.0) ? _4048 : (isnan(_4048) ? 1.0 : min(_4048, 1.0)))) + _658) * 4.55000019073486328125;
    vec4 _687 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _318) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _319) + cbTextureTilingScale._m0[20u].w));
    vec4 _710 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _318) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _319) + cbTextureTilingScale._m0[4u].w));
    vec4 _727 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _729 = _727.x;
    float _730 = _727.y;
    float _731 = _727.z;
    float _738 = ((_710.x - _729) * _493) + _729;
    float _739 = ((_710.y - _730) * _493) + _730;
    float _740 = ((_710.z - _731) * _493) + _731;
    vec4 _752 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _318) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _319) + cbTextureTilingScale._m0[2u].w));
    float _763 = ((_752.x - _738) * _566) + _738;
    float _764 = ((_752.y - _739) * _566) + _739;
    float _765 = ((_752.z - _740) * _566) + _740;
    vec4 _777 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _318) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _319) + cbTextureTilingScale._m0[23u].w));
    float _790 = ((_777.z - _765) * _636) + _765;
    float _793 = ((((_777.x - _763) * _636) + _763) * 2.0) + (-1.0);
    float _794 = ((((_777.y - _764) * _636) + _764) * 2.0) + (-1.0);
    float _795 = dot(vec2(_793, _794), vec2(_793, _794));
    float _4092 = isnan(0.0) ? _795 : (isnan(_795) ? 0.0 : max(_795, 0.0));
    float _800 = sqrt(1.0 - (isnan(1.0) ? _4092 : (isnan(_4092) ? 1.0 : min(_4092, 1.0))));
    vec4 _814 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _839 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _318) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _319) + cbTextureTilingScale._m0[11u].w));
    float _841 = _839.x;
    float _842 = 1.0 - _841;
    float _850 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _853 = ((isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : min(_850, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _862 = (_853 - ((((((_841 - _842) * cbMtdParam._m0[24u].z) + _842) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _853))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4113 = isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0));
    float _863 = isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0));
    float _870 = (_863 * (cbMtdParam._m0[17u].x - _666)) + _666;
    float _871 = (_863 * (cbMtdParam._m0[17u].y - _668)) + _668;
    float _872 = (_863 * (cbMtdParam._m0[17u].z - _670)) + _670;
    float _887 = sqrt(((cbInstanceData._m0[_304].x * cbInstanceData._m0[_304].x) + (cbInstanceData._m0[_299].x * cbInstanceData._m0[_299].x)) + (cbInstanceData._m0[_308].x * cbInstanceData._m0[_308].x));
    float _888 = _887 * TEXCOORD.z;
    float _889 = _887 * TEXCOORD.w;
    vec4 _901 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _888) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _889) + cbTextureTilingScale._m0[19u].w));
    float _903 = _901.x;
    float _904 = 1.0 - _903;
    float _929 = (TEXCOORD_8.x - ((cbMtdParam._m0[24u].y * (1.0 - TEXCOORD_8.x)) * ((((_903 - _904) * cbMtdParam._m0[24u].w) + _904) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].y + 1.0);
    float _4124 = isnan(0.0) ? _929 : (isnan(_929) ? 0.0 : max(_929, 0.0));
    float _930 = isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0));
    float _938 = ((((cbMtdParam._m0[10u].x - _870) * TEXCOORD_8.x) * cbMtdParam._m0[23u].z) * _930) + _870;
    float _939 = ((((cbMtdParam._m0[10u].y - _871) * TEXCOORD_8.y) * cbMtdParam._m0[23u].z) * _930) + _871;
    float _940 = (((cbMtdParam._m0[23u].z * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _872)) * _930) + _872;
    vec4 _966 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _968 = _966.x;
    float _985 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _318) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _319) + cbTextureTilingScale._m0[9u].w)).x - _968) * _493) + _968;
    float _1002 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _318) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _319) + cbTextureTilingScale._m0[21u].w)).x - _985) * _566) + _985;
    float _1019 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _318) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _319) + cbTextureTilingScale._m0[10u].w)).x - _1002) * _636) + _1002;
    float _1023 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _1019) * cbMtdParam._m0[19u].z) + _1019;
    float _1025 = _1023 - (_1023 * _863);
    float _1027 = _1025 - (_1025 * _930);
    float _1032 = (((_687.z - _790) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _790;
    float _1038 = ((_814.z - _1032) * cbMtdParam._m0[19u].w) + _1032;
    vec4 _1054 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _318) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _319) + cbTextureTilingScale._m0[15u].w));
    float _1061 = (_1054.x * 2.0) + (-1.0);
    float _1062 = (_1054.y * 2.0) + (-1.0);
    float _1063 = dot(vec2(_1061, _1062), vec2(_1061, _1062));
    float _4135 = isnan(0.0) ? _1063 : (isnan(_1063) ? 0.0 : max(_1063, 0.0));
    float _1071 = (_863 * (_1054.z - _1038)) + _1038;
    float _1074 = ((cbMtdParam._m0[23u].x - _1071) * _930) + _1071;
    vec4 _1097 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _888) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _889) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _1103 = (_1097.x * 2.0) + (-1.0);
    float _1104 = (_1097.y * 2.0) + (-1.0);
    float _1105 = dot(vec2(_1103, _1104), vec2(_1103, _1104));
    float _4146 = isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0));
    float _1119 = (_793 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_687.x * 2.0) + (-1.0)))) + (((_814.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _1120 = (_794 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_687.y * 2.0) + (-1.0)))) + (((_814.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _1132 = (((_1061 - _1119) + (cbMtdParam._m0[21u].x * _1119)) * _863) + _1119;
    float _1133 = (((_1062 - _1120) + (cbMtdParam._m0[21u].x * _1120)) * _863) + _1120;
    float _1134 = (_863 * (sqrt(1.0 - (isnan(1.0) ? _4135 : (isnan(_4135) ? 1.0 : min(_4135, 1.0)))) - _800)) + _800;
    float _1145 = (((_1103 - _1132) + (_1132 * cbMtdParam._m0[22u].z)) * _930) + _1132;
    float _1146 = (((_1104 - _1133) + (_1133 * cbMtdParam._m0[22u].z)) * _930) + _1133;
    float _1147 = ((sqrt(1.0 - (isnan(1.0) ? _4146 : (isnan(_4146) ? 1.0 : min(_4146, 1.0)))) - _1134) * _930) + _1134;
    float _1149 = cbMtdParam._m0[22u].x + _814.w;
    float _1152 = fma(_1147, _267 * NORMAL.x, fma(_1146, _274 * TANGENT.x, (_260 * _252) * _1145));
    float _1155 = fma(_1147, _267 * NORMAL.y, fma(_1146, _274 * TANGENT.y, (_260 * _253) * _1145));
    float _1158 = fma(_1147, _267 * NORMAL.z, fma(_1146, _274 * TANGENT.z, (_260 * _254) * _1145));
    float _1162 = inversesqrt(dot(vec3(_1152, _1155, _1158), vec3(_1152, _1155, _1158)));
    float _1163 = _1162 * _1152;
    float _1164 = _1162 * _1155;
    float _1165 = _1162 * _1158;
    float _4157 = isnan(0.0) ? _1074 : (isnan(_1074) ? 0.0 : max(_1074, 0.0));
    float _1166 = isnan(1.0) ? _4157 : (isnan(_4157) ? 1.0 : min(_4157, 1.0));
    float _4168 = isnan(0.0) ? _1149 : (isnan(_1149) ? 0.0 : max(_1149, 0.0));
    float _4179 = isnan(0.0) ? _938 : (isnan(_938) ? 0.0 : max(_938, 0.0));
    float _4190 = isnan(0.0) ? _939 : (isnan(_939) ? 0.0 : max(_939, 0.0));
    float _4201 = isnan(0.0) ? _940 : (isnan(_940) ? 0.0 : max(_940, 0.0));
    float _4212 = isnan(0.0) ? _1027 : (isnan(_1027) ? 0.0 : max(_1027, 0.0));
    float _1171 = isnan(1.0) ? _4212 : (isnan(_4212) ? 1.0 : min(_4212, 1.0));
    float _1185 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1225 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1235 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1225);
    float _1236 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1225);
    float _1237 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1225);
    float _1241 = inversesqrt(dot(vec3(_1235, _1236, _1237), vec3(_1235, _1236, _1237)));
    float _1242 = _1235 * _1241;
    float _1243 = _1236 * _1241;
    float _1244 = _1237 * _1241;
    float _1250 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1251 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1269 = fma(_1165, cbSceneParam._m0[5u].z, fma(_1164, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1163));
    float _1272 = fma(_1165, cbSceneParam._m0[6u].z, fma(_1164, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1163));
    float _1275 = fma(_1165, cbSceneParam._m0[7u].z, fma(_1164, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1163));
    uint _1289 = (_299 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1295 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4179 : (isnan(_4179) ? 1.0 : min(_4179, 1.0)))) * cbInstanceData._m0[_1289].x;
    float _1296 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4190 : (isnan(_4190) ? 1.0 : min(_4190, 1.0)))) * cbInstanceData._m0[_1289].y;
    float _1297 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4201 : (isnan(_4201) ? 1.0 : min(_4201, 1.0)))) * cbInstanceData._m0[_1289].z;
    float _4223 = isnan(0.0) ? _1295 : (isnan(_1295) ? 0.0 : max(_1295, 0.0));
    float _1298 = isnan(1.0) ? _4223 : (isnan(_4223) ? 1.0 : min(_4223, 1.0));
    float _4234 = isnan(0.0) ? _1296 : (isnan(_1296) ? 0.0 : max(_1296, 0.0));
    float _1299 = isnan(1.0) ? _4234 : (isnan(_4234) ? 1.0 : min(_4234, 1.0));
    float _4245 = isnan(0.0) ? _1297 : (isnan(_1297) ? 0.0 : max(_1297, 0.0));
    float _1300 = isnan(1.0) ? _4245 : (isnan(_4245) ? 1.0 : min(_4245, 1.0));
    float _1301 = 1.0 - _1171;
    float _1302 = _1298 * _1301;
    float _1303 = _1299 * _1301;
    float _1304 = _1300 * _1301;
    float _1309 = (_1298 + (-0.039999999105930328369140625)) * _1171;
    float _1310 = (_1299 + (-0.039999999105930328369140625)) * _1171;
    float _1311 = (_1300 + (-0.039999999105930328369140625)) * _1171;
    float _1312 = _1309 + 0.039999999105930328369140625;
    float _1314 = _1310 + 0.039999999105930328369140625;
    float _1315 = _1311 + 0.039999999105930328369140625;
    vec4 _1324 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1250, cbSceneParam._m0[86u].y * _1251));
    float _1328 = ((isnan(1.0) ? _4168 : (isnan(_4168) ? 1.0 : min(_4168, 1.0))) * TEXCOORD_5.w) * _1324.x;
    float _1329 = dot(vec3(_1163, _1164, _1165), vec3(_1242, _1243, _1244));
    float _1332 = _1329 * 2.0;
    float _1336 = (_1332 * _1163) - _1242;
    float _1337 = (_1332 * _1164) - _1243;
    float _1338 = (_1332 * _1165) - _1244;
    float _1342 = abs(dot(vec3(_1242, _1243, _1244), vec3(_1163, _1164, _1165)));
    float _4256 = isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0));
    float _1344 = sqrt(_1166);
    float _1357 = exp2((_1344 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4256 : (isnan(_4256) ? 1.0 : min(_4256, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1344 * 3.0));
    float _1363 = (1.0 - _1357) * ((_1344 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1364 = _1357 * _1344;
    float _1392 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1396 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1400 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1701;
    float _1703;
    float _1704;
    float _1705;
    float _1706;
    float _1707;
    float _1708;
    float _1709;
    float _1710;
    float _1711;
    float _1712;
    float _1713;
    float _1714;
    float _1715;
    float _1716;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1426 = fma(_1400, cbModelParam._m0[26u].z, fma(_1396, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1392));
        float _1430 = fma(_1400, cbModelParam._m0[27u].z, fma(_1396, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1392));
        float _1434 = fma(_1400, cbModelParam._m0[28u].z, fma(_1396, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1392));
        float _1459 = _1392 + _1163;
        float _1460 = _1396 + _1164;
        float _1461 = _1400 + _1165;
        float _1471 = fma(_1461, cbModelParam._m0[26u].z, fma(_1460, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1459)) - _1426;
        float _1472 = fma(_1461, cbModelParam._m0[27u].z, fma(_1460, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1459)) - _1430;
        float _1473 = fma(_1461, cbModelParam._m0[28u].z, fma(_1460, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1459)) - _1434;
        float _1477 = inversesqrt(dot(vec3(_1471, _1472, _1473), vec3(_1471, _1472, _1473)));
        float _1490 = ((_1477 * _1471) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1426 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1491 = ((_1477 * _1472) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1430 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1492 = ((_1477 * _1473) / cbModelParam._m0[34u].z) + ((((((_1434 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1495 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1490, _1491, _1492), 0.0);
        vec4 _1502 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1490, _1491, _1492), 0.0);
        vec4 _1509 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1490, _1491, _1492), 0.0);
        vec4 _1516 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1490, _1491, _1492), 0.0);
        float _1529 = exp2((_1495.w + (-0.5)) * 20.0) * 2.0;
        float _1530 = _1529 * (_1495.x + (-0.5));
        float _1531 = _1529 * (_1495.y + (-0.5));
        float _1532 = _1529 * (_1495.z + (-0.5));
        float _1539 = exp2((_1502.w + (-0.5)) * 20.0) * 2.0;
        float _1540 = _1539 * (_1502.x + (-0.5));
        float _1541 = _1539 * (_1502.y + (-0.5));
        float _1542 = _1539 * (_1502.z + (-0.5));
        float _1549 = exp2((_1509.w + (-0.5)) * 20.0) * 2.0;
        float _1550 = _1549 * (_1509.x + (-0.5));
        float _1551 = _1549 * (_1509.y + (-0.5));
        float _1552 = _1549 * (_1509.z + (-0.5));
        float _1559 = exp2((_1516.w + (-0.5)) * 20.0) * 2.0;
        float _1560 = _1559 * (_1516.x + (-0.5));
        float _1561 = _1559 * (_1516.y + (-0.5));
        float _1562 = _1559 * (_1516.z + (-0.5));
        float _1563 = isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0));
        float _1564 = isnan(0.0) ? _1561 : (isnan(_1561) ? 0.0 : max(_1561, 0.0));
        float _1565 = isnan(0.0) ? _1562 : (isnan(_1562) ? 0.0 : max(_1562, 0.0));
        float _1566 = _1530 * 0.5;
        float _1567 = _1540 * 0.5;
        float _1568 = _1550 * 0.5;
        float _1569 = dot(vec3(_1566, _1567, _1568), vec3(_1566, _1567, _1568));
        float _1574 = (_1569 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1569);
        float _1583 = (dot(vec3(_1163, _1164, _1165), vec3(_1574 * _1566, _1574 * _1567, _1574 * _1568)) + 1.0) * 0.5;
        float _4282 = isnan(0.0) ? _1583 : (isnan(_1583) ? 0.0 : max(_1583, 0.0));
        float _1593 = sqrt(((_1567 * _1567) + (_1566 * _1566)) + (_1568 * _1568)) / (_1563 + 9.9999997473787516355514526367188e-06);
        float _4293 = isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : max(_1593, 0.0));
        float _1594 = isnan(1.0) ? _4293 : (isnan(_4293) ? 1.0 : min(_4293, 1.0));
        float _1595 = _1594 * 2.0;
        float _1599 = (1.0 - _1594) / (_1594 + 1.0);
        float _4304 = isnan(0.0) ? _1599 : (isnan(_1599) ? 0.0 : max(_1599, 0.0));
        float _1600 = isnan(1.0) ? _4304 : (isnan(_4304) ? 1.0 : min(_4304, 1.0));
        float _1609 = ((((1.0 - _1600) * (_1595 + 2.0)) * exp2(log2(isnan(1.0) ? _4282 : (isnan(_4282) ? 1.0 : min(_4282, 1.0))) * (_1595 + 1.0))) + _1600) * _1563;
        float _1610 = _1531 * 0.5;
        float _1611 = _1541 * 0.5;
        float _1612 = _1551 * 0.5;
        float _1613 = dot(vec3(_1610, _1611, _1612), vec3(_1610, _1611, _1612));
        float _1618 = (_1613 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1613);
        float _1626 = (dot(vec3(_1163, _1164, _1165), vec3(_1618 * _1610, _1618 * _1611, _1618 * _1612)) + 1.0) * 0.5;
        float _4315 = isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0));
        float _1635 = sqrt(((_1611 * _1611) + (_1610 * _1610)) + (_1612 * _1612)) / (_1564 + 9.9999997473787516355514526367188e-06);
        float _4326 = isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0));
        float _1636 = isnan(1.0) ? _4326 : (isnan(_4326) ? 1.0 : min(_4326, 1.0));
        float _1637 = _1636 * 2.0;
        float _1641 = (1.0 - _1636) / (_1636 + 1.0);
        float _4337 = isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0));
        float _1642 = isnan(1.0) ? _4337 : (isnan(_4337) ? 1.0 : min(_4337, 1.0));
        float _1651 = ((((1.0 - _1642) * (_1637 + 2.0)) * exp2(log2(isnan(1.0) ? _4315 : (isnan(_4315) ? 1.0 : min(_4315, 1.0))) * (_1637 + 1.0))) + _1642) * _1564;
        float _1652 = _1532 * 0.5;
        float _1653 = _1542 * 0.5;
        float _1654 = _1552 * 0.5;
        float _1655 = dot(vec3(_1652, _1653, _1654), vec3(_1652, _1653, _1654));
        float _1660 = (_1655 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1655);
        float _1668 = (dot(vec3(_1163, _1164, _1165), vec3(_1660 * _1652, _1660 * _1653, _1660 * _1654)) + 1.0) * 0.5;
        float _4348 = isnan(0.0) ? _1668 : (isnan(_1668) ? 0.0 : max(_1668, 0.0));
        float _1677 = sqrt(((_1653 * _1653) + (_1652 * _1652)) + (_1654 * _1654)) / (_1565 + 9.9999997473787516355514526367188e-06);
        float _4359 = isnan(0.0) ? _1677 : (isnan(_1677) ? 0.0 : max(_1677, 0.0));
        float _1678 = isnan(1.0) ? _4359 : (isnan(_4359) ? 1.0 : min(_4359, 1.0));
        float _1679 = _1678 * 2.0;
        float _1683 = (1.0 - _1678) / (_1678 + 1.0);
        float _4370 = isnan(0.0) ? _1683 : (isnan(_1683) ? 0.0 : max(_1683, 0.0));
        float _1684 = isnan(1.0) ? _4370 : (isnan(_4370) ? 1.0 : min(_4370, 1.0));
        float _1693 = ((((1.0 - _1684) * (_1679 + 2.0)) * exp2(log2(isnan(1.0) ? _4348 : (isnan(_4348) ? 1.0 : min(_4348, 1.0))) * (_1679 + 1.0))) + _1684) * _1565;
        _1701 = _1532;
        _1703 = _1531;
        _1704 = _1530;
        _1705 = _1542;
        _1706 = _1541;
        _1707 = _1540;
        _1708 = _1552;
        _1709 = _1551;
        _1710 = _1550;
        _1711 = _1565;
        _1712 = _1564;
        _1713 = _1563;
        _1714 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0)));
        _1715 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0)));
        _1716 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1693 : (isnan(_1693) ? 0.0 : max(_1693, 0.0)));
    }
    else
    {
        _1701 = _1702;
        _1703 = _1702;
        _1704 = _1702;
        _1705 = _1702;
        _1706 = _1702;
        _1707 = _1702;
        _1708 = _1702;
        _1709 = _1702;
        _1710 = _1702;
        _1711 = _1702;
        _1712 = _1702;
        _1713 = _1702;
        _1714 = 0.0;
        _1715 = 0.0;
        _1716 = 0.0;
    }
    float _2008;
    float _2009;
    float _2010;
    float _2011;
    float _2012;
    float _2013;
    float _2014;
    float _2015;
    float _2016;
    float _2017;
    float _2018;
    float _2019;
    float _2020;
    float _2021;
    float _2022;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1739 = fma(_1400, cbModelParam._m0[30u].z, fma(_1396, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1392));
        float _1743 = fma(_1400, cbModelParam._m0[31u].z, fma(_1396, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1392));
        float _1747 = fma(_1400, cbModelParam._m0[32u].z, fma(_1396, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1392));
        float _1770 = _1392 + _1163;
        float _1771 = _1396 + _1164;
        float _1772 = _1400 + _1165;
        float _1782 = fma(_1772, cbModelParam._m0[30u].z, fma(_1771, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1770)) - _1739;
        float _1783 = fma(_1772, cbModelParam._m0[31u].z, fma(_1771, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1770)) - _1743;
        float _1784 = fma(_1772, cbModelParam._m0[32u].z, fma(_1771, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1770)) - _1747;
        float _1788 = inversesqrt(dot(vec3(_1782, _1783, _1784), vec3(_1782, _1783, _1784)));
        float _1801 = ((_1788 * _1782) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1739 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1802 = ((_1788 * _1783) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1743 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1803 = ((_1788 * _1784) / cbModelParam._m0[35u].z) + ((((((_1747 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1805 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1801, _1802, _1803), 0.0);
        vec4 _1812 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1801, _1802, _1803), 0.0);
        vec4 _1819 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1801, _1802, _1803), 0.0);
        vec4 _1826 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1801, _1802, _1803), 0.0);
        float _1838 = exp2((_1805.w + (-0.5)) * 20.0) * 2.0;
        float _1839 = _1838 * (_1805.x + (-0.5));
        float _1840 = _1838 * (_1805.y + (-0.5));
        float _1841 = _1838 * (_1805.z + (-0.5));
        float _1848 = exp2((_1812.w + (-0.5)) * 20.0) * 2.0;
        float _1849 = _1848 * (_1812.x + (-0.5));
        float _1850 = _1848 * (_1812.y + (-0.5));
        float _1851 = _1848 * (_1812.z + (-0.5));
        float _1858 = exp2((_1819.w + (-0.5)) * 20.0) * 2.0;
        float _1859 = _1858 * (_1819.x + (-0.5));
        float _1860 = _1858 * (_1819.y + (-0.5));
        float _1861 = _1858 * (_1819.z + (-0.5));
        float _1868 = exp2((_1826.w + (-0.5)) * 20.0) * 2.0;
        float _1869 = _1868 * (_1826.x + (-0.5));
        float _1870 = _1868 * (_1826.y + (-0.5));
        float _1871 = _1868 * (_1826.z + (-0.5));
        float _1872 = isnan(0.0) ? _1869 : (isnan(_1869) ? 0.0 : max(_1869, 0.0));
        float _1873 = isnan(0.0) ? _1870 : (isnan(_1870) ? 0.0 : max(_1870, 0.0));
        float _1874 = isnan(0.0) ? _1871 : (isnan(_1871) ? 0.0 : max(_1871, 0.0));
        float _1875 = _1839 * 0.5;
        float _1876 = _1849 * 0.5;
        float _1877 = _1859 * 0.5;
        float _1878 = dot(vec3(_1875, _1876, _1877), vec3(_1875, _1876, _1877));
        float _1883 = (_1878 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1878);
        float _1891 = (dot(vec3(_1163, _1164, _1165), vec3(_1883 * _1875, _1883 * _1876, _1883 * _1877)) + 1.0) * 0.5;
        float _4411 = isnan(0.0) ? _1891 : (isnan(_1891) ? 0.0 : max(_1891, 0.0));
        float _1900 = sqrt(((_1876 * _1876) + (_1875 * _1875)) + (_1877 * _1877)) / (_1872 + 9.9999997473787516355514526367188e-06);
        float _4422 = isnan(0.0) ? _1900 : (isnan(_1900) ? 0.0 : max(_1900, 0.0));
        float _1901 = isnan(1.0) ? _4422 : (isnan(_4422) ? 1.0 : min(_4422, 1.0));
        float _1902 = _1901 * 2.0;
        float _1906 = (1.0 - _1901) / (_1901 + 1.0);
        float _4433 = isnan(0.0) ? _1906 : (isnan(_1906) ? 0.0 : max(_1906, 0.0));
        float _1907 = isnan(1.0) ? _4433 : (isnan(_4433) ? 1.0 : min(_4433, 1.0));
        float _1916 = ((((1.0 - _1907) * (_1902 + 2.0)) * exp2(log2(isnan(1.0) ? _4411 : (isnan(_4411) ? 1.0 : min(_4411, 1.0))) * (_1902 + 1.0))) + _1907) * _1872;
        float _1917 = _1840 * 0.5;
        float _1918 = _1850 * 0.5;
        float _1919 = _1860 * 0.5;
        float _1920 = dot(vec3(_1917, _1918, _1919), vec3(_1917, _1918, _1919));
        float _1925 = (_1920 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1920);
        float _1933 = (dot(vec3(_1163, _1164, _1165), vec3(_1925 * _1917, _1925 * _1918, _1925 * _1919)) + 1.0) * 0.5;
        float _4444 = isnan(0.0) ? _1933 : (isnan(_1933) ? 0.0 : max(_1933, 0.0));
        float _1942 = sqrt(((_1918 * _1918) + (_1917 * _1917)) + (_1919 * _1919)) / (_1873 + 9.9999997473787516355514526367188e-06);
        float _4455 = isnan(0.0) ? _1942 : (isnan(_1942) ? 0.0 : max(_1942, 0.0));
        float _1943 = isnan(1.0) ? _4455 : (isnan(_4455) ? 1.0 : min(_4455, 1.0));
        float _1944 = _1943 * 2.0;
        float _1948 = (1.0 - _1943) / (_1943 + 1.0);
        float _4466 = isnan(0.0) ? _1948 : (isnan(_1948) ? 0.0 : max(_1948, 0.0));
        float _1949 = isnan(1.0) ? _4466 : (isnan(_4466) ? 1.0 : min(_4466, 1.0));
        float _1958 = ((((1.0 - _1949) * (_1944 + 2.0)) * exp2(log2(isnan(1.0) ? _4444 : (isnan(_4444) ? 1.0 : min(_4444, 1.0))) * (_1944 + 1.0))) + _1949) * _1873;
        float _1959 = _1841 * 0.5;
        float _1960 = _1851 * 0.5;
        float _1961 = _1861 * 0.5;
        float _1962 = dot(vec3(_1959, _1960, _1961), vec3(_1959, _1960, _1961));
        float _1967 = (_1962 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1962);
        float _1975 = (dot(vec3(_1163, _1164, _1165), vec3(_1967 * _1959, _1967 * _1960, _1967 * _1961)) + 1.0) * 0.5;
        float _4477 = isnan(0.0) ? _1975 : (isnan(_1975) ? 0.0 : max(_1975, 0.0));
        float _1984 = sqrt(((_1960 * _1960) + (_1959 * _1959)) + (_1961 * _1961)) / (_1874 + 9.9999997473787516355514526367188e-06);
        float _4488 = isnan(0.0) ? _1984 : (isnan(_1984) ? 0.0 : max(_1984, 0.0));
        float _1985 = isnan(1.0) ? _4488 : (isnan(_4488) ? 1.0 : min(_4488, 1.0));
        float _1986 = _1985 * 2.0;
        float _1990 = (1.0 - _1985) / (_1985 + 1.0);
        float _4499 = isnan(0.0) ? _1990 : (isnan(_1990) ? 0.0 : max(_1990, 0.0));
        float _1991 = isnan(1.0) ? _4499 : (isnan(_4499) ? 1.0 : min(_4499, 1.0));
        float _2000 = ((((1.0 - _1991) * (_1986 + 2.0)) * exp2(log2(isnan(1.0) ? _4477 : (isnan(_4477) ? 1.0 : min(_4477, 1.0))) * (_1986 + 1.0))) + _1991) * _1874;
        _2008 = _1841;
        _2009 = _1840;
        _2010 = _1839;
        _2011 = _1851;
        _2012 = _1850;
        _2013 = _1849;
        _2014 = _1861;
        _2015 = _1860;
        _2016 = _1859;
        _2017 = _1874;
        _2018 = _1873;
        _2019 = _1872;
        _2020 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1916 : (isnan(_1916) ? 0.0 : max(_1916, 0.0)));
        _2021 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1958 : (isnan(_1958) ? 0.0 : max(_1958, 0.0)));
        _2022 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2000 : (isnan(_2000) ? 0.0 : max(_2000, 0.0)));
    }
    else
    {
        _2008 = _1702;
        _2009 = _1702;
        _2010 = _1702;
        _2011 = _1702;
        _2012 = _1702;
        _2013 = _1702;
        _2014 = _1702;
        _2015 = _1702;
        _2016 = _1702;
        _2017 = _1702;
        _2018 = _1702;
        _2019 = _1702;
        _2020 = 0.0;
        _2021 = 0.0;
        _2022 = 0.0;
    }
    float _2032 = (cbModelParam._m0[1u].x * (_2020 - _1714)) + _1714;
    float _2033 = (cbModelParam._m0[1u].x * (_2021 - _1715)) + _1715;
    float _2034 = (cbModelParam._m0[1u].x * (_2022 - _1716)) + _1716;
    float _2055 = fma(_2034, cbSceneParam._m0[89u].z, fma(_2033, cbSceneParam._m0[89u].y, _2032 * cbSceneParam._m0[89u].x));
    float _2058 = fma(_2034, cbSceneParam._m0[90u].z, fma(_2033, cbSceneParam._m0[90u].y, _2032 * cbSceneParam._m0[90u].x));
    float _2061 = fma(_2034, cbSceneParam._m0[91u].z, fma(_2033, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2032));
    float _2076 = _1336 * 0.5;
    float _2077 = _1337 * 0.5;
    float _2078 = _1338 * 0.5;
    float _2079 = dot(vec4(_2076, _2077, _2078, 1.0), vec4(_2010, _2013, _2016, _2019));
    float _2082 = dot(vec4(_2076, _2077, _2078, 1.0), vec4(_2009, _2012, _2015, _2018));
    float _2085 = dot(vec4(_2076, _2077, _2078, 1.0), vec4(_2008, _2011, _2014, _2017));
    float _2119;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2092 = dot(vec4(_2076, _2077, _2078, 1.0), vec4(_1701, _1705, _1708, _1711));
        float _2096 = dot(vec4(_2076, _2077, _2078, 1.0), vec4(_1703, _1706, _1709, _1712));
        float _2100 = dot(vec4(_2076, _2077, _2078, 1.0), vec4(_1704, _1707, _1710, _1713));
        float _2107 = dot(vec4(cbModelParam._m0[39u]), vec4(_2076, _2077, _2078, 1.0));
        _2119 = dot(vec3(isnan(0.0) ? _2100 : (isnan(_2100) ? 0.0 : max(_2100, 0.0)), isnan(0.0) ? _2096 : (isnan(_2096) ? 0.0 : max(_2096, 0.0)), isnan(0.0) ? _2092 : (isnan(_2092) ? 0.0 : max(_2092, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2107) ? 0.0 : (isnan(0.0) ? _2107 : max(0.0, _2107))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2119 = 1.0;
    }
    float _2130;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2121 = dot(vec4(cbModelParam._m0[40u]), vec4(_2076, _2077, _2078, 1.0));
        _2130 = dot(vec3(isnan(0.0) ? _2079 : (isnan(_2079) ? 0.0 : max(_2079, 0.0)), isnan(0.0) ? _2082 : (isnan(_2082) ? 0.0 : max(_2082, 0.0)), isnan(0.0) ? _2085 : (isnan(_2085) ? 0.0 : max(_2085, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2121) ? 0.0 : (isnan(0.0) ? _2121 : max(0.0, _2121))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2130 = 1.0;
    }
    float _2134 = (_2130 * cbModelParam._m0[1u].x) + (_2119 * (1.0 - cbModelParam._m0[1u].x));
    float _2144 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1166);
    float _2145 = isnan(_2144) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2144 : min(cbModelParam._m0[25u].z, _2144));
    float _2225;
    float _2227;
    float _2229;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2192 = fma(_1400, cbModelParam._m0[13u].z, fma(_1396, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1392)) + cbModelParam._m0[13u].w;
        float _2196 = fma(_1400, cbModelParam._m0[14u].z, fma(_1396, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1392)) + cbModelParam._m0[14u].w;
        float _2200 = fma(_1400, cbModelParam._m0[15u].z, fma(_1396, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1392)) + cbModelParam._m0[15u].w;
        float _2203 = fma(_1338, cbModelParam._m0[13u].z, fma(_1337, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1336));
        float _2206 = fma(_1338, cbModelParam._m0[14u].z, fma(_1337, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1336));
        float _2209 = fma(_1338, cbModelParam._m0[15u].z, fma(_1337, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1336));
        float _2237;
        if (_2203 > 0.0)
        {
            _2237 = abs((1.0 - _2192) / _2203);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2203 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2192 + 1.0) / _2203);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2237 = frontier_phi_14_12_ladder;
        }
        float _2440;
        if (_2206 > 0.0)
        {
            _2440 = abs((1.0 - _2196) / _2206);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2206 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2196 + 1.0) / _2206);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2440 = frontier_phi_23_19_ladder;
        }
        float _2694;
        if (_2209 > 0.0)
        {
            _2694 = abs((1.0 - _2200) / _2209);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2209 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2200 + 1.0) / _2209);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2694 = frontier_phi_35_30_ladder;
        }
        float _2696 = isnan(_2440) ? _2237 : (isnan(_2237) ? _2440 : min(_2237, _2440));
        float _2697 = isnan(_2694) ? _2696 : (isnan(_2696) ? _2694 : min(_2696, _2694));
        float _2701 = (_2697 * _2203) + _2192;
        float _2702 = (_2697 * _2206) + _2196;
        float _2703 = (_2697 * _2209) + _2200;
        float _2704 = _2697 * 9.9999997473787516355514526367188e-05;
        float _2706 = (-1.0) - _2704;
        float _2708 = _2704 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2703 > _2708) || ((_2703 < _2706) || ((_2702 > _2708) || ((_2702 < _2706) || ((_2701 < _2706) || (_2701 > _2708))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2831 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2703, cbModelParam._m0[9u].z, fma(_2702, cbModelParam._m0[9u].y, _2701 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2703, cbModelParam._m0[10u].z, fma(_2702, cbModelParam._m0[10u].y, _2701 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2703, cbModelParam._m0[11u].z, fma(_2702, cbModelParam._m0[11u].y, _2701 * cbModelParam._m0[11u].x))), _2145);
            frontier_phi_13_35_ladder = _2831.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2831.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2831.x * cbModelParam._m0[1u].y;
        }
        _2225 = frontier_phi_13_35_ladder_2;
        _2227 = frontier_phi_13_35_ladder_1;
        _2229 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2213 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1336, _1337, _1338), _2145);
        _2225 = _2213.x * cbModelParam._m0[1u].y;
        _2227 = _2213.y * cbModelParam._m0[1u].y;
        _2229 = _2213.z * cbModelParam._m0[1u].y;
    }
    float _2233 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1166);
    float _2234 = isnan(_2233) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2233 : min(cbModelParam._m0[25u].w, _2233));
    float _2324;
    float _2326;
    float _2328;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2288 = fma(_1400, cbModelParam._m0[21u].z, fma(_1396, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1392)) + cbModelParam._m0[21u].w;
        float _2292 = fma(_1400, cbModelParam._m0[22u].z, fma(_1396, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1392)) + cbModelParam._m0[22u].w;
        float _2296 = fma(_1400, cbModelParam._m0[23u].z, fma(_1396, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1392)) + cbModelParam._m0[23u].w;
        float _2299 = fma(_1338, cbModelParam._m0[21u].z, fma(_1337, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1336));
        float _2302 = fma(_1338, cbModelParam._m0[22u].z, fma(_1337, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1336));
        float _2305 = fma(_1338, cbModelParam._m0[23u].z, fma(_1337, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1336));
        float _2445;
        if (_2299 > 0.0)
        {
            _2445 = abs((1.0 - _2288) / _2299);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2299 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2288 + 1.0) / _2299);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2445 = frontier_phi_25_21_ladder;
        }
        float _2721;
        if (_2302 > 0.0)
        {
            _2721 = abs((1.0 - _2292) / _2302);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2302 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2292 + 1.0) / _2302);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2721 = frontier_phi_37_32_ladder;
        }
        float _2934;
        if (_2305 > 0.0)
        {
            _2934 = abs((1.0 - _2296) / _2305);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2305 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2296 + 1.0) / _2305);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2934 = frontier_phi_46_43_ladder;
        }
        float _2936 = isnan(_2721) ? _2445 : (isnan(_2445) ? _2721 : min(_2445, _2721));
        float _2937 = isnan(_2934) ? _2936 : (isnan(_2936) ? _2934 : min(_2936, _2934));
        float _2941 = (_2937 * _2299) + _2288;
        float _2942 = (_2937 * _2302) + _2292;
        float _2943 = (_2937 * _2305) + _2296;
        float _2944 = _2937 * 9.9999997473787516355514526367188e-05;
        float _2945 = (-1.0) - _2944;
        float _2947 = _2944 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2943 > _2947) || ((_2943 < _2945) || ((_2942 > _2947) || ((_2942 < _2945) || ((_2941 < _2945) || (_2941 > _2947))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3142 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2943, cbModelParam._m0[17u].z, fma(_2942, cbModelParam._m0[17u].y, _2941 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2943, cbModelParam._m0[18u].z, fma(_2942, cbModelParam._m0[18u].y, _2941 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2943, cbModelParam._m0[19u].z, fma(_2942, cbModelParam._m0[19u].y, _2941 * cbModelParam._m0[19u].x))), _2234);
            frontier_phi_22_46_ladder = _3142.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _3142.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _3142.x * cbModelParam._m0[1u].z;
        }
        _2324 = frontier_phi_22_46_ladder_2;
        _2326 = frontier_phi_22_46_ladder_1;
        _2328 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2308 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1336, _1337, _1338), _2234);
        _2324 = _2308.x * cbModelParam._m0[1u].z;
        _2326 = _2308.y * cbModelParam._m0[1u].z;
        _2328 = _2308.z * cbModelParam._m0[1u].z;
    }
    float _2341 = (((_1363 * _1312) + _1364) * _1328) * ((cbModelParam._m0[1u].w * (_2324 - _2225)) + _2225);
    float _2343 = (((_1363 * _1314) + _1364) * _1328) * ((cbModelParam._m0[1u].w * (_2326 - _2227)) + _2227);
    float _2345 = (((_1363 * _1315) + _1364) * _1328) * ((cbModelParam._m0[1u].w * (_2328 - _2229)) + _2229);
    float _2348 = fma(_2345, cbSceneParam._m0[89u].z, fma(_2343, cbSceneParam._m0[89u].y, _2341 * cbSceneParam._m0[89u].x));
    float _2351 = fma(_2345, cbSceneParam._m0[90u].z, fma(_2343, cbSceneParam._m0[90u].y, _2341 * cbSceneParam._m0[90u].x));
    float _2354 = fma(_2345, cbSceneParam._m0[91u].z, fma(_2343, cbSceneParam._m0[91u].y, _2341 * cbSceneParam._m0[91u].x));
    uvec4 _2364 = floatBitsToUint(cbInstanceData._m0[_299 + 5u]);
    uint _2366 = _2364.x * 14u;
    uint _2367 = _2366 + 13u;
    float _2374 = _1328 + (-1.0);
    float _2379 = (cbLight._m0[_2367].x * _2374) + 1.0;
    float _2380 = (cbLight._m0[_2367].y * _2374) + 1.0;
    float _2381 = (cbLight._m0[_2367].z * _2374) + 1.0;
    float _2382 = (cbLight._m0[_2367].w * _2374) + 1.0;
    uint _2383 = _2366 + 5u;
    float _2389 = isnan(1.0) ? _2380 : (isnan(_2380) ? 1.0 : min(_2380, 1.0));
    uint _2393 = _2366 + 4u;
    float _2399 = isnan(1.0) ? _2379 : (isnan(_2379) ? 1.0 : min(_2379, 1.0));
    uint _2403 = _2366 | 1u;
    float _2414 = dot(vec3(cbLight._m0[_2366].xyz), vec3(_1163, _1164, _1165));
    float _2417 = dot(vec3(cbLight._m0[_2403].xyz), vec3(_1163, _1164, _1165));
    float _4635 = isnan(0.0) ? _2414 : (isnan(_2414) ? 0.0 : max(_2414, 0.0));
    float _4646 = isnan(0.0) ? _2417 : (isnan(_2417) ? 0.0 : max(_2417, 0.0));
    float _2422 = (isnan(1.0) ? _4635 : (isnan(_4635) ? 1.0 : min(_4635, 1.0))) * 0.3183098733425140380859375;
    float _2424 = (isnan(1.0) ? _4646 : (isnan(_4646) ? 1.0 : min(_4646, 1.0))) * 0.3183098733425140380859375;
    float _2431 = ((cbLight._m0[_2383].x * _2389) * _2424) + ((cbLight._m0[_2393].x * _2399) * _2422);
    float _2432 = ((_2389 * cbLight._m0[_2383].y) * _2424) + ((_2399 * cbLight._m0[_2393].y) * _2422);
    float _2433 = ((_2389 * cbLight._m0[_2383].z) * _2424) + ((_2399 * cbLight._m0[_2393].z) * _2422);
    uvec4 _2437 = floatBitsToUint(cbLight._m0[_2366 + 12u]);
    bool _2439 = _2437.x == 0u;
    float _2450;
    float _2452;
    float _2454;
    if (_2439)
    {
        _2450 = _2431;
        _2452 = _2432;
        _2454 = _2433;
    }
    else
    {
        uint _2458 = _2366 + 6u;
        float _2474 = (dot(vec3(cbLight._m0[_2366 + 2u].xyz), vec3(_1163, _1164, _1165)) * 0.5) + 0.5;
        float _2475 = _2474 * _2474;
        float _4657 = isnan(0.0) ? _2475 : (isnan(_2475) ? 0.0 : max(_2475, 0.0));
        float _2476 = isnan(1.0) ? _4657 : (isnan(_4657) ? 1.0 : min(_4657, 1.0));
        float _2477 = isnan(1.0) ? _2381 : (isnan(_2381) ? 1.0 : min(_2381, 1.0));
        _2450 = (((cbLight._m0[_2458].x * 0.3183098733425140380859375) * _2476) * _2477) + _2431;
        _2452 = (((cbLight._m0[_2458].y * 0.3183098733425140380859375) * _2476) * _2477) + _2432;
        _2454 = (((cbLight._m0[_2458].z * 0.3183098733425140380859375) * _2476) * _2477) + _2433;
    }
    bool _2457 = _2437.y == 0u;
    float _2495;
    float _2497;
    float _2499;
    if (_2457)
    {
        _2495 = _2450;
        _2497 = _2452;
        _2499 = _2454;
    }
    else
    {
        uint _2665 = _2366 + 7u;
        float _2681 = (dot(vec3(cbLight._m0[_2366 + 3u].xyz), vec3(_1163, _1164, _1165)) * 0.5) + 0.5;
        float _2682 = _2681 * _2681;
        float _4673 = isnan(0.0) ? _2682 : (isnan(_2682) ? 0.0 : max(_2682, 0.0));
        float _2683 = isnan(1.0) ? _4673 : (isnan(_4673) ? 1.0 : min(_4673, 1.0));
        float _2684 = isnan(1.0) ? _2382 : (isnan(_2382) ? 1.0 : min(_2382, 1.0));
        _2495 = (((cbLight._m0[_2665].x * 0.3183098733425140380859375) * _2683) * _2684) + _2450;
        _2497 = (((cbLight._m0[_2665].y * 0.3183098733425140380859375) * _2683) * _2684) + _2452;
        _2499 = (((cbLight._m0[_2665].z * 0.3183098733425140380859375) * _2683) * _2684) + _2454;
    }
    uint _2502 = _2366 + 8u;
    float _2515 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2366].w)) * _1166) * 0.949999988079071044921875);
    float _2516 = _2515 * _2515;
    float _2517 = cbLight._m0[_2366].x + _1242;
    float _2518 = cbLight._m0[_2366].y + _1243;
    float _2519 = cbLight._m0[_2366].z + _1244;
    float _2523 = inversesqrt(dot(vec3(_2517, _2518, _2519), vec3(_2517, _2518, _2519)));
    float _2524 = _2523 * _2517;
    float _2525 = _2523 * _2518;
    float _2526 = _2523 * _2519;
    float _2527 = dot(vec3(_1163, _1164, _1165), vec3(cbLight._m0[_2366].xyz));
    float _4689 = isnan(0.0) ? _2527 : (isnan(_2527) ? 0.0 : max(_2527, 0.0));
    float _2530 = isnan(1.0) ? _4689 : (isnan(_4689) ? 1.0 : min(_4689, 1.0));
    float _4700 = isnan(0.0) ? _1329 : (isnan(_1329) ? 0.0 : max(_1329, 0.0));
    float _2531 = isnan(1.0) ? _4700 : (isnan(_4700) ? 1.0 : min(_4700, 1.0));
    float _2532 = dot(vec3(_1163, _1164, _1165), vec3(_2524, _2525, _2526));
    float _4711 = isnan(0.0) ? _2532 : (isnan(_2532) ? 0.0 : max(_2532, 0.0));
    float _2535 = isnan(1.0) ? _4711 : (isnan(_4711) ? 1.0 : min(_4711, 1.0));
    float _2536 = dot(vec3(cbLight._m0[_2366].xyz), vec3(_2524, _2525, _2526));
    float _4722 = isnan(0.0) ? _2536 : (isnan(_2536) ? 0.0 : max(_2536, 0.0));
    float _2540 = _2516 * _2516;
    float _2544 = ((_2535 * _2535) * (_2540 + (-1.0))) + 1.0;
    float _2552 = exp2(log2(1.0 - (isnan(1.0) ? _4722 : (isnan(_4722) ? 1.0 : min(_4722, 1.0)))) * 5.0);
    float _2553 = 0.959999978542327880859375 - _1309;
    float _2555 = 0.959999978542327880859375 - _1310;
    float _2556 = 0.959999978542327880859375 - _1311;
    float _2563 = 1.0 - _2516;
    float _2574 = (0.5 / (((_2531 * ((_2530 * _2563) + _2516)) + 9.9999999392252902907785028219223e-09) + (((_2531 * _2563) + _2516) * _2530))) * _2530;
    float _4733 = isnan(0.0) ? _2574 : (isnan(_2574) ? 0.0 : max(_2574, 0.0));
    float _2576 = (isnan(1.0) ? _4733 : (isnan(_4733) ? 1.0 : min(_4733, 1.0))) * (_2540 / ((_2544 * _2544) * 3.141590118408203125));
    uint _2587 = _2366 + 9u;
    float _2598 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2403].w)) * _1166) * 0.949999988079071044921875);
    float _2599 = _2598 * _2598;
    float _2600 = cbLight._m0[_2403].x + _1242;
    float _2601 = cbLight._m0[_2403].y + _1243;
    float _2602 = cbLight._m0[_2403].z + _1244;
    float _2606 = inversesqrt(dot(vec3(_2600, _2601, _2602), vec3(_2600, _2601, _2602)));
    float _2607 = _2606 * _2600;
    float _2608 = _2606 * _2601;
    float _2609 = _2606 * _2602;
    float _2610 = dot(vec3(_1163, _1164, _1165), vec3(cbLight._m0[_2403].xyz));
    float _4744 = isnan(0.0) ? _2610 : (isnan(_2610) ? 0.0 : max(_2610, 0.0));
    float _2613 = isnan(1.0) ? _4744 : (isnan(_4744) ? 1.0 : min(_4744, 1.0));
    float _2614 = dot(vec3(_1163, _1164, _1165), vec3(_2607, _2608, _2609));
    float _4755 = isnan(0.0) ? _2614 : (isnan(_2614) ? 0.0 : max(_2614, 0.0));
    float _2617 = isnan(1.0) ? _4755 : (isnan(_4755) ? 1.0 : min(_4755, 1.0));
    float _2618 = dot(vec3(cbLight._m0[_2403].xyz), vec3(_2607, _2608, _2609));
    float _4766 = isnan(0.0) ? _2618 : (isnan(_2618) ? 0.0 : max(_2618, 0.0));
    float _2622 = _2599 * _2599;
    float _2626 = ((_2617 * _2617) * (_2622 + (-1.0))) + 1.0;
    float _2633 = exp2(log2(1.0 - (isnan(1.0) ? _4766 : (isnan(_4766) ? 1.0 : min(_4766, 1.0)))) * 5.0);
    float _2640 = 1.0 - _2599;
    float _2650 = (0.5 / (((_2531 * ((_2613 * _2640) + _2599)) + 9.9999999392252902907785028219223e-09) + (((_2531 * _2640) + _2599) * _2613))) * _2613;
    float _4777 = isnan(0.0) ? _2650 : (isnan(_2650) ? 0.0 : max(_2650, 0.0));
    float _2652 = (isnan(1.0) ? _4777 : (isnan(_4777) ? 1.0 : min(_4777, 1.0))) * (_2622 / ((_2626 * _2626) * 3.141590118408203125));
    float _2662 = (((((_2633 * _2553) + _1312) * cbLight._m0[_2587].x) * _2652) * _2389) + (((((_2552 * _2553) + _1312) * cbLight._m0[_2502].x) * _2576) * _2399);
    float _2663 = (((((_2633 * _2555) + _1314) * cbLight._m0[_2587].y) * _2652) * _2389) + (((((_2552 * _2555) + _1314) * cbLight._m0[_2502].y) * _2576) * _2399);
    float _2664 = (((((_2633 * _2556) + _1315) * cbLight._m0[_2587].z) * _2652) * _2389) + (((((_2552 * _2556) + _1315) * cbLight._m0[_2502].z) * _2576) * _2399);
    float _2726;
    float _2728;
    float _2730;
    if (_2439)
    {
        _2726 = _2662;
        _2728 = _2663;
        _2730 = _2664;
    }
    else
    {
        uint _2732 = _2366 + 2u;
        uint _2736 = _2366 + 10u;
        float _2750 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2732].w)) * _1166) * 0.949999988079071044921875);
        float _2751 = _2750 * _2750;
        float _2752 = cbLight._m0[_2732].x + _1242;
        float _2753 = cbLight._m0[_2732].y + _1243;
        float _2754 = cbLight._m0[_2732].z + _1244;
        float _2758 = inversesqrt(dot(vec3(_2752, _2753, _2754), vec3(_2752, _2753, _2754)));
        float _2759 = _2758 * _2752;
        float _2760 = _2758 * _2753;
        float _2761 = _2758 * _2754;
        float _2762 = dot(vec3(_1163, _1164, _1165), vec3(cbLight._m0[_2732].xyz));
        float _4788 = isnan(0.0) ? _2762 : (isnan(_2762) ? 0.0 : max(_2762, 0.0));
        float _2765 = isnan(1.0) ? _4788 : (isnan(_4788) ? 1.0 : min(_4788, 1.0));
        float _2766 = dot(vec3(_1163, _1164, _1165), vec3(_2759, _2760, _2761));
        float _4799 = isnan(0.0) ? _2766 : (isnan(_2766) ? 0.0 : max(_2766, 0.0));
        float _2769 = isnan(1.0) ? _4799 : (isnan(_4799) ? 1.0 : min(_4799, 1.0));
        float _2770 = dot(vec3(cbLight._m0[_2732].xyz), vec3(_2759, _2760, _2761));
        float _4810 = isnan(0.0) ? _2770 : (isnan(_2770) ? 0.0 : max(_2770, 0.0));
        float _2774 = _2751 * _2751;
        float _2778 = ((_2769 * _2769) * (_2774 + (-1.0))) + 1.0;
        float _2785 = exp2(log2(1.0 - (isnan(1.0) ? _4810 : (isnan(_4810) ? 1.0 : min(_4810, 1.0)))) * 5.0);
        float _2792 = 1.0 - _2751;
        float _2802 = (0.5 / (((_2531 * ((_2765 * _2792) + _2751)) + 9.9999999392252902907785028219223e-09) + (((_2531 * _2792) + _2751) * _2765))) * _2765;
        float _4821 = isnan(0.0) ? _2802 : (isnan(_2802) ? 0.0 : max(_2802, 0.0));
        float _2804 = (isnan(1.0) ? _4821 : (isnan(_4821) ? 1.0 : min(_4821, 1.0))) * (_2774 / ((_2778 * _2778) * 3.141590118408203125));
        float _2805 = isnan(1.0) ? _2381 : (isnan(_2381) ? 1.0 : min(_2381, 1.0));
        _2726 = (((((_2785 * _2553) + _1312) * cbLight._m0[_2736].x) * _2804) * _2805) + _2662;
        _2728 = (((((_2785 * _2555) + _1314) * cbLight._m0[_2736].y) * _2804) * _2805) + _2663;
        _2730 = (((((_2785 * _2556) + _1315) * cbLight._m0[_2736].z) * _2804) * _2805) + _2664;
    }
    float _2840;
    float _2842;
    float _2844;
    if (_2457)
    {
        _2840 = _2726;
        _2842 = _2728;
        _2844 = _2730;
    }
    else
    {
        uint _2851 = _2366 + 3u;
        uint _2855 = _2366 + 11u;
        float _2869 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2851].w)) * _1166) * 0.949999988079071044921875);
        float _2870 = _2869 * _2869;
        float _2871 = cbLight._m0[_2851].x + _1242;
        float _2872 = cbLight._m0[_2851].y + _1243;
        float _2873 = cbLight._m0[_2851].z + _1244;
        float _2877 = inversesqrt(dot(vec3(_2871, _2872, _2873), vec3(_2871, _2872, _2873)));
        float _2878 = _2877 * _2871;
        float _2879 = _2877 * _2872;
        float _2880 = _2877 * _2873;
        float _2881 = dot(vec3(_1163, _1164, _1165), vec3(cbLight._m0[_2851].xyz));
        float _4837 = isnan(0.0) ? _2881 : (isnan(_2881) ? 0.0 : max(_2881, 0.0));
        float _2884 = isnan(1.0) ? _4837 : (isnan(_4837) ? 1.0 : min(_4837, 1.0));
        float _2885 = dot(vec3(_1163, _1164, _1165), vec3(_2878, _2879, _2880));
        float _4848 = isnan(0.0) ? _2885 : (isnan(_2885) ? 0.0 : max(_2885, 0.0));
        float _2888 = isnan(1.0) ? _4848 : (isnan(_4848) ? 1.0 : min(_4848, 1.0));
        float _2889 = dot(vec3(cbLight._m0[_2851].xyz), vec3(_2878, _2879, _2880));
        float _4859 = isnan(0.0) ? _2889 : (isnan(_2889) ? 0.0 : max(_2889, 0.0));
        float _2893 = _2870 * _2870;
        float _2897 = ((_2888 * _2888) * (_2893 + (-1.0))) + 1.0;
        float _2904 = exp2(log2(1.0 - (isnan(1.0) ? _4859 : (isnan(_4859) ? 1.0 : min(_4859, 1.0)))) * 5.0);
        float _2911 = 1.0 - _2870;
        float _2921 = (0.5 / (((_2531 * ((_2884 * _2911) + _2870)) + 9.9999999392252902907785028219223e-09) + (((_2531 * _2911) + _2870) * _2884))) * _2884;
        float _4870 = isnan(0.0) ? _2921 : (isnan(_2921) ? 0.0 : max(_2921, 0.0));
        float _2923 = (isnan(1.0) ? _4870 : (isnan(_4870) ? 1.0 : min(_4870, 1.0))) * (_2893 / ((_2897 * _2897) * 3.141590118408203125));
        float _2924 = isnan(1.0) ? _2382 : (isnan(_2382) ? 1.0 : min(_2382, 1.0));
        _2840 = (((((_2904 * _2553) + _1312) * cbLight._m0[_2855].x) * _2923) * _2924) + _2726;
        _2842 = (((((_2904 * _2555) + _1314) * cbLight._m0[_2855].y) * _2923) * _2924) + _2728;
        _2844 = (((((_2904 * _2556) + _1315) * cbLight._m0[_2855].z) * _2923) * _2924) + _2730;
    }
    float _3059;
    float _3061;
    float _3063;
    float _3065;
    float _3067;
    float _3069;
    if (_2364.y == 0u)
    {
        float _2999 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _3000 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2999;
        float _3001 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2999;
        float _3002 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2999;
        uvec4 _3014 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3015 = _3014.x;
        uint _3026 = uint((float(_3014.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1251) / _3015))) + floor(float(uint(cbSceneParam._m0[85u].x * _1250) / _3015)));
        float _3036 = (log2(_3002 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3037 = isnan(0.0) ? _3036 : (isnan(_3036) ? 0.0 : max(_3036, 0.0));
        uint _3040 = uint(isnan(14.0) ? _3037 : (isnan(_3037) ? 14.0 : min(_3037, 14.0)));
        uvec4 _3045 = texelFetch(g_lightClusterGridBuffer, int(((_3040 << 2u) + (_3026 << 6u)) >> 2u));
        uint _3046 = _3045.x;
        uint _3047 = _3014.z;
        float _3147;
        float _3149;
        float _3151;
        float _3153;
        float _3155;
        float _3157;
        if (((((1u << ((_3047 >> 4u) & 15u)) + 4294967295u) & _3046) == 0u) || ((_3047 & 240u) == 0u))
        {
            _3147 = 0.0;
            _3149 = 0.0;
            _3151 = 0.0;
            _3153 = 0.0;
            _3155 = 0.0;
            _3157 = 0.0;
        }
        else
        {
            float _3148;
            float _3150;
            float _3152;
            float _3154;
            float _3156;
            float _3158;
            float _3292 = 0.0;
            float _3293 = 0.0;
            float _3294 = 0.0;
            float _3295 = 0.0;
            float _3296 = 0.0;
            float _3297 = 0.0;
            uint _3298 = 0u;
            uint _3307;
            bool _3308;
            for (;;)
            {
                _3307 = texelFetch(g_lightClassification, int((((_3040 << 5u) + (_3026 << 9u)) + (_3298 << 2u)) >> 2u)).x;
                _3308 = _3307 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3308)
                {
                    frontier_phi_61_pred = _3292;
                    frontier_phi_61_pred_1 = _3297;
                    frontier_phi_61_pred_2 = _3296;
                    frontier_phi_61_pred_3 = _3295;
                    frontier_phi_61_pred_4 = _3294;
                    frontier_phi_61_pred_5 = _3293;
                }
                else
                {
                    float _3416;
                    float _3417;
                    float _3418;
                    float _3419;
                    float _3420;
                    float _3421;
                    uint _3422;
                    _3416 = _3292;
                    _3417 = _3293;
                    _3418 = _3294;
                    _3419 = _3295;
                    _3420 = _3296;
                    _3421 = _3297;
                    _3422 = _3307;
                    float _3348;
                    float _3349;
                    float _3350;
                    float _3351;
                    float _3352;
                    float _3353;
                    for (;;)
                    {
                        uint _3426 = uint(findLSB(_3422)) + (_3298 << 5u);
                        uint _3423 = (_3422 + 4294967295u) & _3422;
                        uint _3428 = _3426 * 48u;
                        vec4 _3442 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3428)).x, texelFetch(g_PointLightRenderingBuffer, int(_3428 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3428 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3428 + 3u)).x));
                        uint _3448 = (_3426 * 48u) + 4u;
                        vec4 _3461 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3448)).x, texelFetch(g_PointLightRenderingBuffer, int(_3448 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3448 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3448 + 3u)).x));
                        uint _3467 = (_3426 * 48u) + 8u;
                        vec3 _3478 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3467)).x, texelFetch(g_PointLightRenderingBuffer, int(_3467 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3467 + 2u)).x));
                        float _3482 = _3442.x - _3000;
                        float _3483 = _3442.y - _3001;
                        float _3484 = _3442.z - _3002;
                        float _3485 = dot(vec3(_3482, _3483, _3484), vec3(_3482, _3483, _3484));
                        float _3488 = inversesqrt(_3485);
                        float _3489 = _3488 * _3482;
                        float _3490 = _3488 * _3483;
                        float _3491 = _3488 * _3484;
                        float _3492 = dot(vec3(_1269, _1272, _1275), vec3(_3489, _3490, _3491));
                        float _3497 = 1.0 - (_3485 * _3442.w);
                        float _4896 = isnan(0.0) ? _3497 : (isnan(_3497) ? 0.0 : max(_3497, 0.0));
                        float _3498 = isnan(1.0) ? _4896 : (isnan(_4896) ? 1.0 : min(_4896, 1.0));
                        float _3499 = sqrt(_3485) * _3461.w;
                        float _3502 = 1.39999997615814208984375 / (_3499 + 1.39999997615814208984375);
                        float _3503 = _3502 * _3502;
                        float _3506 = ((1.0 - _3503) * _3492) + _3503;
                        float _3509 = _3499 * _3499;
                        float _3513 = ((isnan(0.0) ? _3506 : (isnan(_3506) ? 0.0 : max(_3506, 0.0))) * _3498) / ((_3509 * 0.699999988079071044921875) + 1.0);
                        float _3517 = (-0.0) - _3000;
                        float _3518 = (-0.0) - _3001;
                        float _3519 = (-0.0) - _3002;
                        float _3523 = inversesqrt(dot(vec3(_3517, _3518, _3519), vec3(_3517, _3518, _3519)));
                        float _3524 = _3523 * _3517;
                        float _3525 = _3523 * _3518;
                        float _3526 = _3523 * _3519;
                        float _3534 = exp2(log2(1.0 / ((_3509 * 3.5) + 5.0)) * 0.25);
                        float _3535 = 1.0 - _1344;
                        float _3542 = sqrt(1.0 - ((1.0 - (_3535 * _3535)) * (1.0 - (_3534 * _3534))));
                        float _3543 = _3542 * _3542;
                        float _3544 = _3543 * _3543;
                        float _3545 = _3524 + _3489;
                        float _3546 = _3525 + _3490;
                        float _3547 = _3526 + _3491;
                        float _3551 = inversesqrt(dot(vec3(_3545, _3546, _3547), vec3(_3545, _3546, _3547)));
                        float _3555 = dot(vec3(_1269, _1272, _1275), vec3(_3524, _3525, _3526));
                        float _4912 = isnan(0.0) ? _3555 : (isnan(_3555) ? 0.0 : max(_3555, 0.0));
                        float _3558 = isnan(1.0) ? _4912 : (isnan(_4912) ? 1.0 : min(_4912, 1.0));
                        float _3559 = dot(vec3(_1269, _1272, _1275), vec3(_3551 * _3545, _3551 * _3546, _3551 * _3547));
                        float _4923 = isnan(0.0) ? _3559 : (isnan(_3559) ? 0.0 : max(_3559, 0.0));
                        float _3562 = isnan(1.0) ? _4923 : (isnan(_4923) ? 1.0 : min(_4923, 1.0));
                        float _3566 = ((_3562 * _3562) * (_3544 + (-1.0))) + 1.0;
                        float _3567 = _3502 * _3543;
                        float _3568 = _3567 * _3567;
                        float _3571 = ((1.0 - _3568) * _3492) + _3568;
                        float _4934 = isnan(0.0) ? _3571 : (isnan(_3571) ? 0.0 : max(_3571, 0.0));
                        float _3572 = isnan(1.0) ? _4934 : (isnan(_4934) ? 1.0 : min(_4934, 1.0));
                        float _3573 = 1.0 - _3543;
                        float _3583 = (0.5 / (((_3572 * ((_3558 * _3573) + _3543)) + 9.9999999392252902907785028219223e-09) + (((_3572 * _3573) + _3543) * _3558))) * _3572;
                        float _4945 = isnan(0.0) ? _3583 : (isnan(_3583) ? 0.0 : max(_3583, 0.0));
                        float _3594 = (((_3544 * 3.1415927410125732421875) * (isnan(1.0) ? _4945 : (isnan(_4945) ? 1.0 : min(_4945, 1.0)))) / ((_3566 * _3566) * ((_3509 * 2.1991131305694580078125) + 3.141590118408203125))) * _3498;
                        _3351 = (_3513 * _3461.x) + _3419;
                        _3352 = (_3513 * _3461.y) + _3420;
                        _3353 = (_3513 * _3461.z) + _3421;
                        _3348 = (_3594 * _3478.x) + _3416;
                        _3349 = (_3594 * _3478.y) + _3417;
                        _3350 = (_3594 * _3478.z) + _3418;
                        if (_3423 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3416 = _3348;
                            _3417 = _3349;
                            _3418 = _3350;
                            _3419 = _3351;
                            _3420 = _3352;
                            _3421 = _3353;
                            _3422 = _3423;
                        }
                    }
                    frontier_phi_61_pred = _3348;
                    frontier_phi_61_pred_1 = _3353;
                    frontier_phi_61_pred_2 = _3352;
                    frontier_phi_61_pred_3 = _3351;
                    frontier_phi_61_pred_4 = _3350;
                    frontier_phi_61_pred_5 = _3349;
                }
                _3148 = frontier_phi_61_pred;
                _3158 = frontier_phi_61_pred_1;
                _3156 = frontier_phi_61_pred_2;
                _3154 = frontier_phi_61_pred_3;
                _3152 = frontier_phi_61_pred_4;
                _3150 = frontier_phi_61_pred_5;
                uint _3299 = _3298 + 1u;
                if (_3299 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3292 = _3148;
                    _3293 = _3150;
                    _3294 = _3152;
                    _3295 = _3154;
                    _3296 = _3156;
                    _3297 = _3158;
                    _3298 = _3299;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3147 = _3148;
            _3149 = _3150;
            _3151 = _3152;
            _3153 = _3154;
            _3155 = _3156;
            _3157 = _3158;
        }
        uvec4 _3161 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3162 = _3161.z;
        uint _3164 = (_3162 >> 8u) & 15u;
        float _3260;
        float _3262;
        float _3264;
        float _3266;
        float _3268;
        float _3270;
        if (((4294967295u << _3164) & _3046) == 0u)
        {
            _3260 = _3147;
            _3262 = _3149;
            _3264 = _3151;
            _3266 = _3153;
            _3268 = _3155;
            _3270 = _3157;
        }
        else
        {
            float _3285 = inversesqrt(dot(vec3(_3000, _3001, _3002), vec3(_3000, _3001, _3002)));
            float _3286 = _3285 * _3000;
            float _3287 = _3285 * _3001;
            float _3288 = _3285 * _3002;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_3164 < ((_3162 >> 12u) & 15u))
            {
                float _3261;
                float _3263;
                float _3265;
                float _3267;
                float _3269;
                float _3271;
                float _3399 = _3147;
                float _3400 = _3149;
                float _3401 = _3151;
                float _3402 = _3153;
                float _3403 = _3155;
                float _3404 = _3157;
                uint _3405 = _3164;
                uint _3414;
                bool _3415;
                for (;;)
                {
                    _3414 = texelFetch(g_lightClassification, int((((_3040 << 5u) + (_3026 << 9u)) + (_3405 << 2u)) >> 2u)).x;
                    _3415 = _3414 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3415)
                    {
                        frontier_phi_67_pred = _3402;
                        frontier_phi_67_pred_1 = _3403;
                        frontier_phi_67_pred_2 = _3404;
                        frontier_phi_67_pred_3 = _3401;
                        frontier_phi_67_pred_4 = _3400;
                        frontier_phi_67_pred_5 = _3399;
                    }
                    else
                    {
                        float _3599;
                        float _3600;
                        float _3601;
                        float _3602;
                        float _3603;
                        float _3604;
                        float _3892;
                        float _3893;
                        float _3894;
                        float _3895;
                        float _3896;
                        float _3897;
                        float _3612 = _3399;
                        float _3613 = _3400;
                        float _3614 = _3401;
                        float _3615 = _3402;
                        float _3616 = _3403;
                        float _3617 = _3404;
                        uint _3618 = _3414;
                        uint _3619;
                        vec4 _3644;
                        float _3645;
                        vec4 _3660;
                        vec3 _3672;
                        vec4 _3687;
                        vec4 _3702;
                        float _3748;
                        bool _3749;
                        for (;;)
                        {
                            uint _3629 = ((_3405 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3618));
                            _3619 = (_3618 + 4294967295u) & _3618;
                            uint _3631 = _3629 * 40u;
                            _3644 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3631)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3631 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3631 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3631 + 3u)).x));
                            _3645 = _3644.w;
                            uint _3647 = (_3629 * 40u) + 4u;
                            _3660 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3647)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3647 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3647 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3647 + 3u)).x));
                            uint _3662 = (_3629 * 40u) + 8u;
                            _3672 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3662)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3662 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3662 + 2u)).x));
                            uint _3674 = (_3629 * 40u) + 16u;
                            _3687 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3674)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3674 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3674 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3674 + 3u)).x));
                            uint _3689 = (_3629 * 40u) + 20u;
                            _3702 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3689)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3689 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3689 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3689 + 3u)).x));
                            uint _3704 = (_3629 * 40u) + 24u;
                            vec4 _3717 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3704)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3704 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3704 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3704 + 3u)).x));
                            uint _3723 = (_3629 * 40u) + 28u;
                            vec4 _3736 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3723)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3723 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3723 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3723 + 3u)).x));
                            _3748 = fma(_3002, _3736.z, fma(_3001, _3736.y, _3736.x * _3000)) + _3736.w;
                            _3749 = !((fma(_3002, _3717.z, fma(_3001, _3717.y, _3717.x * _3000)) + _3717.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3749)
                            {
                                float _3776 = _3644.x - _3000;
                                float _3777 = _3644.y - _3001;
                                float _3778 = _3644.z - _3002;
                                float _3779 = dot(vec3(_3776, _3777, _3778), vec3(_3776, _3777, _3778));
                                float _3782 = inversesqrt(_3779);
                                float _3783 = _3782 * _3776;
                                float _3784 = _3782 * _3777;
                                float _3785 = _3782 * _3778;
                                float _3789 = 1.0 - (_3779 / (_3645 * _3645));
                                float _4956 = isnan(0.0) ? _3789 : (isnan(_3789) ? 0.0 : max(_3789, 0.0));
                                float _3790 = isnan(1.0) ? _4956 : (isnan(_4956) ? 1.0 : min(_4956, 1.0));
                                float _3794 = sqrt(_3779) * _3660.w;
                                float _3796 = 1.39999997615814208984375 / (_3794 + 1.39999997615814208984375);
                                float _3797 = _3796 * _3796;
                                float _3800 = ((1.0 - _3797) * dot(vec3(_3783, _3784, _3785), vec3(_1269, _1272, _1275))) + _3797;
                                float _3803 = _3794 * _3794;
                                float _3807 = (fma(_3002, _3687.z, fma(_3001, _3687.y, _3687.x * _3000)) + _3687.w) / _3748;
                                float _3808 = (fma(_3002, _3702.z, fma(_3001, _3702.y, _3702.x * _3000)) + _3702.w) / _3748;
                                float _3812 = 1.0 - dot(vec2(_3807, _3808), vec2(_3807, _3808));
                                float _4972 = isnan(0.0) ? _3812 : (isnan(_3812) ? 0.0 : max(_3812, 0.0));
                                float _3813 = isnan(1.0) ? _4972 : (isnan(_4972) ? 1.0 : min(_4972, 1.0));
                                float _3814 = _3813 * (((isnan(0.0) ? _3800 : (isnan(_3800) ? 0.0 : max(_3800, 0.0))) * _3790) / ((_3803 * 0.699999988079071044921875) + 1.0));
                                float _3826 = exp2(log2(1.0 / ((_3803 * 3.5) + 5.0)) * 0.25);
                                float _3827 = 1.0 - _1344;
                                float _3834 = sqrt(1.0 - ((1.0 - (_3827 * _3827)) * (1.0 - (_3826 * _3826))));
                                float _3835 = _3834 * _3834;
                                float _3836 = _3835 * _3835;
                                float _3837 = _3783 - _3286;
                                float _3838 = _3784 - _3287;
                                float _3839 = _3785 - _3288;
                                float _3843 = inversesqrt(dot(vec3(_3837, _3838, _3839), vec3(_3837, _3838, _3839)));
                                float _3847 = dot(vec3(_1269, _1272, _1275), vec3((-0.0) - _3286, (-0.0) - _3287, (-0.0) - _3288));
                                float _4983 = isnan(0.0) ? _3847 : (isnan(_3847) ? 0.0 : max(_3847, 0.0));
                                float _3850 = isnan(1.0) ? _4983 : (isnan(_4983) ? 1.0 : min(_4983, 1.0));
                                float _3851 = dot(vec3(_1269, _1272, _1275), vec3(_3843 * _3837, _3843 * _3838, _3843 * _3839));
                                float _4994 = isnan(0.0) ? _3851 : (isnan(_3851) ? 0.0 : max(_3851, 0.0));
                                float _3854 = isnan(1.0) ? _4994 : (isnan(_4994) ? 1.0 : min(_4994, 1.0));
                                float _3858 = ((_3854 * _3854) * (_3836 + (-1.0))) + 1.0;
                                float _3859 = _3796 * _3835;
                                float _3860 = _3859 * _3859;
                                float _3866 = ((1.0 - _3860) * dot(vec3(_1269, _1272, _1275), vec3(_3783, _3784, _3785))) + _3860;
                                float _5005 = isnan(0.0) ? _3866 : (isnan(_3866) ? 0.0 : max(_3866, 0.0));
                                float _3867 = isnan(1.0) ? _5005 : (isnan(_5005) ? 1.0 : min(_5005, 1.0));
                                float _3868 = 1.0 - _3835;
                                float _3878 = (0.5 / (((_3867 * ((_3850 * _3868) + _3835)) + 9.9999999392252902907785028219223e-09) + (((_3867 * _3868) + _3835) * _3850))) * _3867;
                                float _5016 = isnan(0.0) ? _3878 : (isnan(_3878) ? 0.0 : max(_3878, 0.0));
                                float _3888 = (_3813 * _3790) * (((_3836 * 3.1415927410125732421875) * (isnan(1.0) ? _5016 : (isnan(_5016) ? 1.0 : min(_5016, 1.0)))) / ((_3858 * _3858) * ((_3803 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3888 * _3672.x;
                                frontier_phi_73_pred_1 = _3888 * _3672.y;
                                frontier_phi_73_pred_2 = _3814 * _3660.z;
                                frontier_phi_73_pred_3 = _3814 * _3660.y;
                                frontier_phi_73_pred_4 = _3814 * _3660.x;
                                frontier_phi_73_pred_5 = _3888 * _3672.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3892 = frontier_phi_73_pred;
                            _3893 = frontier_phi_73_pred_1;
                            _3897 = frontier_phi_73_pred_2;
                            _3896 = frontier_phi_73_pred_3;
                            _3895 = frontier_phi_73_pred_4;
                            _3894 = frontier_phi_73_pred_5;
                            _3602 = _3895 + _3615;
                            _3603 = _3896 + _3616;
                            _3604 = _3897 + _3617;
                            _3599 = _3892 + _3612;
                            _3600 = _3893 + _3613;
                            _3601 = _3894 + _3614;
                            if (_3619 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3612 = _3599;
                                _3613 = _3600;
                                _3614 = _3601;
                                _3615 = _3602;
                                _3616 = _3603;
                                _3617 = _3604;
                                _3618 = _3619;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3602;
                        frontier_phi_67_pred_1 = _3603;
                        frontier_phi_67_pred_2 = _3604;
                        frontier_phi_67_pred_3 = _3601;
                        frontier_phi_67_pred_4 = _3600;
                        frontier_phi_67_pred_5 = _3599;
                    }
                    _3267 = frontier_phi_67_pred;
                    _3269 = frontier_phi_67_pred_1;
                    _3271 = frontier_phi_67_pred_2;
                    _3265 = frontier_phi_67_pred_3;
                    _3263 = frontier_phi_67_pred_4;
                    _3261 = frontier_phi_67_pred_5;
                    uint _3406 = _3405 + 1u;
                    if (_3406 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3399 = _3261;
                        _3400 = _3263;
                        _3401 = _3265;
                        _3402 = _3267;
                        _3403 = _3269;
                        _3404 = _3271;
                        _3405 = _3406;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3269;
                frontier_phi_55_56_ladder_1 = _3271;
                frontier_phi_55_56_ladder_2 = _3267;
                frontier_phi_55_56_ladder_3 = _3265;
                frontier_phi_55_56_ladder_4 = _3263;
                frontier_phi_55_56_ladder_5 = _3261;
            }
            else
            {
                frontier_phi_55_56_ladder = _3155;
                frontier_phi_55_56_ladder_1 = _3157;
                frontier_phi_55_56_ladder_2 = _3153;
                frontier_phi_55_56_ladder_3 = _3151;
                frontier_phi_55_56_ladder_4 = _3149;
                frontier_phi_55_56_ladder_5 = _3147;
            }
            _3260 = frontier_phi_55_56_ladder_5;
            _3262 = frontier_phi_55_56_ladder_4;
            _3264 = frontier_phi_55_56_ladder_3;
            _3266 = frontier_phi_55_56_ladder_2;
            _3268 = frontier_phi_55_56_ladder;
            _3270 = frontier_phi_55_56_ladder_1;
        }
        float _3275 = isnan(1.0) ? _1328 : (isnan(_1328) ? 1.0 : min(_1328, 1.0));
        _3059 = (_3275 * _3266) + _2495;
        _3061 = (_3275 * _3268) + _2497;
        _3063 = (_3275 * _3270) + _2499;
        _3065 = ((_3260 * _1312) * _3275) + _2840;
        _3067 = ((_3262 * _1314) * _3275) + _2842;
        _3069 = ((_3264 * _1315) * _3275) + _2844;
    }
    else
    {
        _3059 = _2495;
        _3061 = _2497;
        _3063 = _2499;
        _3065 = _2840;
        _3067 = _2842;
        _3069 = _2844;
    }
    float _5032 = isnan(0.0) ? _1302 : (isnan(_1302) ? 0.0 : max(_1302, 0.0));
    float _5043 = isnan(0.0) ? _1303 : (isnan(_1303) ? 0.0 : max(_1303, 0.0));
    float _5054 = isnan(0.0) ? _1304 : (isnan(_1304) ? 0.0 : max(_1304, 0.0));
    uint _3089 = _299 + 6u;
    float _3097 = _1250 / cbSceneParam._m0[86u].x;
    float _3098 = _1251 / cbSceneParam._m0[86u].y;
    vec4 _3112 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3097, _3098, (log2((isnan(cbSceneParam._m0[77u].w) ? _1185 : (isnan(_1185) ? cbSceneParam._m0[77u].w : min(_1185, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3114 = _3112.x;
    float _3115 = _3112.y;
    float _3116 = _3112.z;
    float _3117 = _3112.w;
    float _3210;
    float _3212;
    float _3214;
    float _3216;
    if (_1185 > cbSceneParam._m0[78u].w)
    {
        float _3172 = isnan(_1185) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1185 : min(cbSceneParam._m0[80u].w, _1185));
        float _3173 = _3172 / _1185;
        float _3184 = _3173 * _1235;
        float _3185 = _1236 * _3173;
        float _3186 = (-0.0) - _3185;
        float _3188 = _3173 * _1237;
        float _3190 = (cbSceneParam._m0[77u].w * _3186) / _3172;
        float _3191 = _3190 + cbSceneParam._m0[79u].w;
        float _3192 = cbSceneParam._m0[79u].w - _3185;
        float _3198 = sqrt(((_3184 * _3184) + (_3185 * _3185)) + (_3188 * _3188));
        float _3201 = (1.0 - (cbSceneParam._m0[77u].w / _3172)) * _3198;
        float _3206 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3208 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3361;
        if (abs((_3186 - _3190) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3361 = ((((_3191 > 0.0) ? exp2(_3206 * _3191) : (2.0 - exp2(_3208 * _3191))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3201;
        }
        else
        {
            float _3321 = 1.0 / cbSceneParam._m0[80u].x;
            float _3322 = isnan(_3192) ? _3191 : (isnan(_3191) ? _3192 : max(_3191, _3192));
            float _3323 = isnan(_3192) ? _3191 : (isnan(_3191) ? _3192 : min(_3191, _3192));
            float _3332 = isnan(0.0) ? _3322 : (isnan(_3322) ? 0.0 : min(_3322, 0.0));
            float _3333 = isnan(0.0) ? _3323 : (isnan(_3323) ? 0.0 : min(_3323, 0.0));
            _3361 = ((abs(_3198 / _3186) * cbSceneParam._m0[80u].y) * ((((_3332 - _3333) * 2.0) - ((exp2(_3206 * (isnan(0.0) ? _3322 : (isnan(_3322) ? 0.0 : max(_3322, 0.0)))) - exp2(_3206 * (isnan(0.0) ? _3323 : (isnan(_3323) ? 0.0 : max(_3323, 0.0))))) * _3321)) - ((exp2(_3208 * _3332) - exp2(_3208 * _3333)) * _3321))) + (_3201 * cbSceneParam._m0[80u].z);
        }
        vec4 _3363 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3097, _3098, 1.0), 0.0);
        float _3372 = exp2((_3361 * (-1.44269502162933349609375)) * (1.0 - _3363.w));
        float _3373 = log2(_3372);
        float _3389 = log2(_3117);
        _3210 = (exp2(_3389 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3373 * cbSceneParam._m0[78u].x)) * _3363.x) / cbSceneParam._m0[78u].x)) + _3114;
        _3212 = (exp2(_3389 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3373 * cbSceneParam._m0[78u].y)) * _3363.y) / cbSceneParam._m0[78u].y)) + _3115;
        _3214 = (exp2(_3389 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3373 * cbSceneParam._m0[78u].z)) * _3363.z) / cbSceneParam._m0[78u].z)) + _3116;
        _3216 = _3372 * _3117;
    }
    else
    {
        _3210 = _3114;
        _3212 = _3115;
        _3214 = _3116;
        _3216 = _3117;
    }
    float _3228 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3229 = _3228 == 3.0;
    float _3230 = log2(_3216);
    float _3237 = exp2(_3230 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5032 : (isnan(_5032) ? 1.0 : min(_5032, 1.0))) * (_3059 + ((isnan(0.0) ? _2055 : (isnan(_2055) ? 0.0 : max(_2055, 0.0))) * _1328))) + ((_3065 + ((isnan(0.0) ? _2348 : (isnan(_2348) ? 0.0 : max(_2348, 0.0))) * _2134)) * cbPerFrame._m0[3u].x));
    float _3238 = exp2(_3230 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5043 : (isnan(_5043) ? 1.0 : min(_5043, 1.0))) * (_3061 + ((isnan(0.0) ? _2058 : (isnan(_2058) ? 0.0 : max(_2058, 0.0))) * _1328))) + ((_3067 + ((isnan(0.0) ? _2351 : (isnan(_2351) ? 0.0 : max(_2351, 0.0))) * _2134)) * cbPerFrame._m0[3u].x));
    float _3239 = exp2(_3230 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5054 : (isnan(_5054) ? 1.0 : min(_5054, 1.0))) * (_3063 + ((isnan(0.0) ? _2061 : (isnan(_2061) ? 0.0 : max(_2061, 0.0))) * _1328))) + ((_3069 + ((isnan(0.0) ? _2354 : (isnan(_2354) ? 0.0 : max(_2354, 0.0))) * _2134)) * cbPerFrame._m0[3u].x));
    float _3248 = (_3228 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3248 * (_3229 ? _3237 : (_3237 + (cbSceneParam._m0[72u].w * _3210)));
    SV_Target.y = _3248 * (_3229 ? _3238 : (_3238 + (cbSceneParam._m0[72u].w * _3212)));
    SV_Target.z = _3248 * (_3229 ? _3239 : (_3239 + (cbSceneParam._m0[72u].w * _3214)));
    SV_Target.w = cbInstanceData._m0[_3089].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3089].w;
}


