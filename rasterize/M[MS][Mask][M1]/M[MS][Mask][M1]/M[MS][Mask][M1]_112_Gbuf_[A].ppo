#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 21) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _195 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _196 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _197 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _203 = inversesqrt(dot(vec3(_195, _196, _197), vec3(_195, _196, _197)));
    float _210 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _217 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _223 = uint(roundEven(NORMAL.w)) * 13u;
    uint _229 = _223 + 1u;
    uint _233 = _223 + 2u;
    float _242 = sqrt(((cbInstanceData._m0[_229].x * cbInstanceData._m0[_229].x) + (cbInstanceData._m0[_223].x * cbInstanceData._m0[_223].x)) + (cbInstanceData._m0[_233].x * cbInstanceData._m0[_233].x));
    float _243 = _242 * TEXCOORD.z;
    float _244 = _242 * TEXCOORD.w;
    vec4 _263 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _287 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _292 = _287.x * cbMtdParam._m0[11u].x;
    float _293 = _287.y * cbMtdParam._m0[11u].y;
    float _294 = _287.z * cbMtdParam._m0[11u].z;
    vec4 _313 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _243) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _244) + cbTextureTilingScale._m0[5u].w));
    vec4 _333 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _373 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _375 = _373.x;
    float _388 = dot(vec4(_375, _373.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _405 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _333.x) * 2.0) - ((((_375 - _388) * cbMtdParam._m0[23u].w) + _388) * cbMtdParam._m0[22u].w))) + 1.0;
    float _1133 = isnan(0.0) ? _405 : (isnan(_405) ? 0.0 : max(_405, 0.0));
    float _406 = isnan(1.0) ? _1133 : (isnan(_1133) ? 1.0 : min(_1133, 1.0));
    float _413 = (_406 * ((_313.x * cbMtdParam._m0[12u].x) - _292)) + _292;
    float _414 = (_406 * ((_313.y * cbMtdParam._m0[12u].y) - _293)) + _293;
    float _415 = (_406 * ((_313.z * cbMtdParam._m0[12u].z) - _294)) + _294;
    vec4 _432 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _243) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _244) + cbTextureTilingScale._m0[3u].w));
    vec4 _452 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _454 = _452.x;
    float _464 = dot(vec4(_454, _452.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _478 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _333.y) * 2.0) - ((((_454 - _464) * cbMtdParam._m0[23u].w) + _464) * cbMtdParam._m0[20u].w))) + 1.0;
    float _1144 = isnan(0.0) ? _478 : (isnan(_478) ? 0.0 : max(_478, 0.0));
    float _479 = isnan(1.0) ? _1144 : (isnan(_1144) ? 1.0 : min(_1144, 1.0));
    float _486 = (_479 * ((_432.x * cbMtdParam._m0[13u].x) - _413)) + _413;
    float _487 = (_479 * ((_432.y * cbMtdParam._m0[13u].y) - _414)) + _414;
    float _488 = (_479 * ((_432.z * cbMtdParam._m0[13u].z) - _415)) + _415;
    vec4 _507 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _243) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _244) + cbTextureTilingScale._m0[24u].w));
    vec4 _524 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _526 = _524.x;
    float _536 = dot(vec4(_526, _524.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _548 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _333.z) * 2.0) - ((((_526 - _536) * cbMtdParam._m0[23u].w) + _536) * cbMtdParam._m0[20u].z))) + 1.0;
    float _1155 = isnan(0.0) ? _548 : (isnan(_548) ? 0.0 : max(_548, 0.0));
    float _549 = isnan(1.0) ? _1155 : (isnan(_1155) ? 1.0 : min(_1155, 1.0));
    float _562 = ((cbMtdParam._m0[9u].x * 4.55000019073486328125) * _263.x) * ((_549 * ((_507.x * cbMtdParam._m0[14u].x) - _486)) + _486);
    float _565 = ((cbMtdParam._m0[9u].y * 4.55000019073486328125) * _263.y) * ((_549 * ((_507.y * cbMtdParam._m0[14u].y) - _487)) + _487);
    float _568 = ((cbMtdParam._m0[9u].z * 4.55000019073486328125) * _263.z) * ((_549 * ((_507.z * cbMtdParam._m0[14u].z) - _488)) + _488);
    vec4 _586 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _243) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _244) + cbTextureTilingScale._m0[4u].w));
    vec4 _603 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _605 = _603.x;
    float _606 = _603.y;
    float _607 = _603.z;
    float _614 = ((_586.x - _605) * _406) + _605;
    float _615 = ((_586.y - _606) * _406) + _606;
    float _616 = ((_586.z - _607) * _406) + _607;
    vec4 _628 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _243) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _244) + cbTextureTilingScale._m0[2u].w));
    float _639 = ((_628.x - _614) * _479) + _614;
    float _640 = ((_628.y - _615) * _479) + _615;
    float _641 = ((_628.z - _616) * _479) + _616;
    vec4 _653 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _243) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _244) + cbTextureTilingScale._m0[23u].w));
    float _666 = ((_653.z - _641) * _549) + _641;
    float _669 = ((((_653.x - _639) * _549) + _639) * 2.0) + (-1.0);
    float _671 = ((((_653.y - _640) * _549) + _640) * 2.0) + (-1.0);
    float _672 = dot(vec2(_669, _671), vec2(_669, _671));
    float _1166 = isnan(0.0) ? _672 : (isnan(_672) ? 0.0 : max(_672, 0.0));
    float _677 = sqrt(1.0 - (isnan(1.0) ? _1166 : (isnan(_1166) ? 1.0 : min(_1166, 1.0))));
    vec4 _691 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _716 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _243) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _244) + cbTextureTilingScale._m0[11u].w));
    float _718 = _716.x;
    float _719 = 1.0 - _718;
    float _734 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_718 - _719) * cbMtdParam._m0[24u].z) + _719) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _1177 = isnan(0.0) ? _734 : (isnan(_734) ? 0.0 : max(_734, 0.0));
    float _735 = isnan(1.0) ? _1177 : (isnan(_1177) ? 1.0 : min(_1177, 1.0));
    float _742 = (_735 * (cbMtdParam._m0[17u].x - _562)) + _562;
    float _743 = (_735 * (cbMtdParam._m0[17u].y - _565)) + _565;
    float _744 = (_735 * (cbMtdParam._m0[17u].z - _568)) + _568;
    vec4 _770 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _772 = _770.x;
    float _789 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _243) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _244) + cbTextureTilingScale._m0[9u].w)).x - _772) * _406) + _772;
    float _806 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _243) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _244) + cbTextureTilingScale._m0[21u].w)).x - _789) * _479) + _789;
    float _824 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _243) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _244) + cbTextureTilingScale._m0[10u].w)).x - _806) * _549) + _806;
    float _828 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _824) * cbMtdParam._m0[19u].z) + _824;
    float _830 = _828 - (_828 * _735);
    float _834 = (cbMtdParam._m0[19u].w * (_691.z - _666)) + _666;
    vec4 _847 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _243) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _244) + cbTextureTilingScale._m0[15u].w));
    float _854 = (_847.x * 2.0) + (-1.0);
    float _855 = (_847.y * 2.0) + (-1.0);
    float _856 = dot(vec2(_854, _855), vec2(_854, _855));
    float _1188 = isnan(0.0) ? _856 : (isnan(_856) ? 0.0 : max(_856, 0.0));
    float _864 = (_735 * (_847.z - _834)) + _834;
    float _867 = (((_691.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _669;
    float _868 = (((_691.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _671;
    float _880 = (((_854 - _867) + (cbMtdParam._m0[21u].x * _867)) * _735) + _867;
    float _881 = (((_855 - _868) + (cbMtdParam._m0[21u].x * _868)) * _735) + _868;
    float _882 = (_735 * (sqrt(1.0 - (isnan(1.0) ? _1188 : (isnan(_1188) ? 1.0 : min(_1188, 1.0)))) - _677)) + _677;
    float _884 = cbMtdParam._m0[22u].x + _691.w;
    float _887 = fma(_882, _210 * NORMAL.x, fma(_881, _217 * TANGENT.x, (_203 * _195) * _880));
    float _890 = fma(_882, _210 * NORMAL.y, fma(_881, _217 * TANGENT.y, (_203 * _196) * _880));
    float _893 = fma(_882, _210 * NORMAL.z, fma(_881, _217 * TANGENT.z, (_203 * _197) * _880));
    float _897 = inversesqrt(dot(vec3(_887, _890, _893), vec3(_887, _890, _893)));
    float _1199 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
    float _1210 = isnan(0.0) ? _884 : (isnan(_884) ? 0.0 : max(_884, 0.0));
    float _899 = isnan(1.0) ? _1210 : (isnan(_1210) ? 1.0 : min(_1210, 1.0));
    float _1221 = isnan(0.0) ? _742 : (isnan(_742) ? 0.0 : max(_742, 0.0));
    float _900 = isnan(1.0) ? _1221 : (isnan(_1221) ? 1.0 : min(_1221, 1.0));
    float _1232 = isnan(0.0) ? _743 : (isnan(_743) ? 0.0 : max(_743, 0.0));
    float _901 = isnan(1.0) ? _1232 : (isnan(_1232) ? 1.0 : min(_1232, 1.0));
    float _1243 = isnan(0.0) ? _744 : (isnan(_744) ? 0.0 : max(_744, 0.0));
    float _902 = isnan(1.0) ? _1243 : (isnan(_1243) ? 1.0 : min(_1243, 1.0));
    float _1254 = isnan(0.0) ? _830 : (isnan(_830) ? 0.0 : max(_830, 0.0));
    float _943 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _953 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _943);
    float _954 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _943);
    float _955 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _943);
    vec4 _960 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _962 = _960.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1022 = sqrt(((_953 * _953) + (_954 * _954)) + (_955 * _955));
        float _1028 = (cbMatDynParam._m0[5u].x * _1022) + cbMatDynParam._m0[5u].y;
        float _1265 = isnan(0.0) ? _1028 : (isnan(_1028) ? 0.0 : max(_1028, 0.0));
        float _1029 = isnan(1.0) ? _1265 : (isnan(_1265) ? 1.0 : min(_1265, 1.0));
        float _1033 = (cbMatDynParam._m0[5u].z * _1022) + cbMatDynParam._m0[5u].w;
        float _1276 = isnan(0.0) ? _1033 : (isnan(_1033) ? 0.0 : max(_1033, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1276 : (isnan(_1276) ? 1.0 : min(_1276, 1.0))) - _1029)) + _1029) < ((_962 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _1060;
    vec4 _984;
    float _991;
    float _992;
    float _993;
    float _994;
    float _998;
    vec4 _1002;
    float _1004;
    float _1005;
    bool _1016;
    for (;;)
    {
        _984 = cbInstanceData._m0[(_223 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _988 = (cbMtdParam._m0[0u].x * _900) * _984.x;
        float _989 = (cbMtdParam._m0[0u].y * _901) * _984.y;
        float _990 = (cbMtdParam._m0[0u].z * _902) * _984.z;
        float _1287 = isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0));
        _991 = isnan(1.0) ? _1287 : (isnan(_1287) ? 1.0 : min(_1287, 1.0));
        float _1298 = isnan(0.0) ? _989 : (isnan(_989) ? 0.0 : max(_989, 0.0));
        _992 = isnan(1.0) ? _1298 : (isnan(_1298) ? 1.0 : min(_1298, 1.0));
        float _1309 = isnan(0.0) ? _990 : (isnan(_990) ? 0.0 : max(_990, 0.0));
        _993 = isnan(1.0) ? _1309 : (isnan(_1309) ? 1.0 : min(_1309, 1.0));
        _994 = _899 * TEXCOORD_5.w;
        _998 = cbInstanceData._m0[_223 + 6u].w;
        float _999 = _962 + (-0.5);
        _1002 = cbMtdParam._m0[1u];
        _1004 = _1002.y * _999;
        _1005 = _999 * 0.999000012874603271484375;
        _1016 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1016)
        {
            if ((cbInstanceData._m0[_223 + 7u].x + _1005) < 0.5)
            {
                _1060 = true;
                break;
            }
        }
        if ((_984.w < 1.0) && ((_984.w + _1005) < 0.5))
        {
            _1060 = true;
            break;
        }
        if ((_1004 + 1.0) < _1002.x)
        {
            _1060 = true;
            break;
        }
        _1060 = false;
        break;
    }
    if (_1060)
    {
        discard_state = true;
    }
    bool _1086 = cbMtdParam._m0[1u].z != 0.0;
    float _1087 = _1086 ? _998 : 0.0;
    SV_Target.x = ((_887 * 0.5) * _897) + 0.500488758087158203125;
    SV_Target.y = ((_890 * 0.5) * _897) + 0.500488758087158203125;
    SV_Target.z = ((_893 * 0.5) * _897) + 0.500488758087158203125;
    SV_Target.w = _1087;
    SV_Target_1.x = isnan(1.0) ? _1254 : (isnan(_1254) ? 1.0 : min(_1254, 1.0));
    SV_Target_1.y = isnan(1.0) ? _1199 : (isnan(_1199) ? 1.0 : min(_1199, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _1086 ? _998 : _994;
    SV_Target_2.x = _991;
    SV_Target_2.y = _992;
    SV_Target_2.z = _993;
    SV_Target_2.w = _1086 ? _998 : (float(floatBitsToUint(cbInstanceData._m0[_223 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _1087;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _1087;
    discard_exit();
}


