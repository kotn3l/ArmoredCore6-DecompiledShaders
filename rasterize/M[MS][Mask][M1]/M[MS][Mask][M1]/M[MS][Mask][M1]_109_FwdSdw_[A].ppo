#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_18;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 21) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1625;
float _4287;
float _4288;
float _4289;
float _4290;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _254 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _255 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _256 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _262 = inversesqrt(dot(vec3(_254, _255, _256), vec3(_254, _255, _256)));
    float _269 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _276 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _288 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _290 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _291 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4299 = isnan(0.0) ? _288 : (isnan(_288) ? 0.0 : max(_288, 0.0));
    float _4310 = isnan(0.0) ? _290 : (isnan(_290) ? 0.0 : max(_290, 0.0));
    float _4321 = isnan(0.0) ? _291 : (isnan(_291) ? 0.0 : max(_291, 0.0));
    uint _301 = uint(roundEven(NORMAL.w)) * 13u;
    uint _306 = _301 + 1u;
    uint _310 = _301 + 2u;
    float _319 = sqrt(((cbInstanceData._m0[_306].x * cbInstanceData._m0[_306].x) + (cbInstanceData._m0[_301].x * cbInstanceData._m0[_301].x)) + (cbInstanceData._m0[_310].x * cbInstanceData._m0[_310].x));
    float _320 = _319 * TEXCOORD.z;
    float _321 = _319 * TEXCOORD.w;
    vec4 _334 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _320) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _321) + cbTextureTilingScale._m0[13u].w));
    vec4 _357 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _383 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _388 = _383.x * cbMtdParam._m0[11u].x;
    float _389 = _383.y * cbMtdParam._m0[11u].y;
    float _390 = _383.z * cbMtdParam._m0[11u].z;
    vec4 _409 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _320) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _321) + cbTextureTilingScale._m0[5u].w));
    vec4 _428 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _463 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _465 = _463.x;
    float _477 = dot(vec4(_465, _463.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _494 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _428.x) * 2.0) - ((((_465 - _477) * cbMtdParam._m0[23u].w) + _477) * cbMtdParam._m0[22u].w))) + 1.0;
    float _4332 = isnan(0.0) ? _494 : (isnan(_494) ? 0.0 : max(_494, 0.0));
    float _495 = isnan(1.0) ? _4332 : (isnan(_4332) ? 1.0 : min(_4332, 1.0));
    float _502 = (_495 * ((_409.x * cbMtdParam._m0[12u].x) - _388)) + _388;
    float _503 = (_495 * ((_409.y * cbMtdParam._m0[12u].y) - _389)) + _389;
    float _504 = (_495 * ((_409.z * cbMtdParam._m0[12u].z) - _390)) + _390;
    vec4 _521 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _320) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _321) + cbTextureTilingScale._m0[3u].w));
    vec4 _541 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _543 = _541.x;
    float _553 = dot(vec4(_543, _541.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _567 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _428.y) * 2.0) - ((((_543 - _553) * cbMtdParam._m0[23u].w) + _553) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4343 = isnan(0.0) ? _567 : (isnan(_567) ? 0.0 : max(_567, 0.0));
    float _568 = isnan(1.0) ? _4343 : (isnan(_4343) ? 1.0 : min(_4343, 1.0));
    float _575 = (_568 * ((_521.x * cbMtdParam._m0[13u].x) - _502)) + _502;
    float _576 = (_568 * ((_521.y * cbMtdParam._m0[13u].y) - _503)) + _503;
    float _577 = (_568 * ((_521.z * cbMtdParam._m0[13u].z) - _504)) + _504;
    vec4 _596 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _320) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _321) + cbTextureTilingScale._m0[24u].w));
    vec4 _613 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _615 = _613.x;
    float _625 = dot(vec4(_615, _613.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _637 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _428.z) * 2.0) - ((((_615 - _625) * cbMtdParam._m0[23u].w) + _625) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4354 = isnan(0.0) ? _637 : (isnan(_637) ? 0.0 : max(_637, 0.0));
    float _638 = isnan(1.0) ? _4354 : (isnan(_4354) ? 1.0 : min(_4354, 1.0));
    float _648 = (_357.x * cbMtdParam._m0[9u].x) * ((_638 * ((_596.x * cbMtdParam._m0[14u].x) - _575)) + _575);
    float _649 = (_357.y * cbMtdParam._m0[9u].y) * ((_638 * ((_596.y * cbMtdParam._m0[14u].y) - _576)) + _576);
    float _650 = (_357.z * cbMtdParam._m0[9u].z) * ((_638 * ((_596.z * cbMtdParam._m0[14u].z) - _577)) + _577);
    float _654 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _334.x) * _648;
    float _657 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _334.y) * _649;
    float _660 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _334.z) * _650;
    float _668 = (((_648 - _654) * (isnan(1.0) ? _4299 : (isnan(_4299) ? 1.0 : min(_4299, 1.0)))) + _654) * 4.55000019073486328125;
    float _670 = (((_649 - _657) * (isnan(1.0) ? _4310 : (isnan(_4310) ? 1.0 : min(_4310, 1.0)))) + _657) * 4.55000019073486328125;
    float _672 = (((_650 - _660) * (isnan(1.0) ? _4321 : (isnan(_4321) ? 1.0 : min(_4321, 1.0)))) + _660) * 4.55000019073486328125;
    vec4 _684 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _320) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _321) + cbTextureTilingScale._m0[20u].w));
    vec4 _707 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _320) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _321) + cbTextureTilingScale._m0[4u].w));
    vec4 _724 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _726 = _724.x;
    float _727 = _724.y;
    float _728 = _724.z;
    float _735 = ((_707.x - _726) * _495) + _726;
    float _736 = ((_707.y - _727) * _495) + _727;
    float _737 = ((_707.z - _728) * _495) + _728;
    vec4 _749 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _320) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _321) + cbTextureTilingScale._m0[2u].w));
    float _760 = ((_749.x - _735) * _568) + _735;
    float _761 = ((_749.y - _736) * _568) + _736;
    float _762 = ((_749.z - _737) * _568) + _737;
    vec4 _774 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _320) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _321) + cbTextureTilingScale._m0[23u].w));
    float _787 = ((_774.z - _762) * _638) + _762;
    float _790 = ((((_774.x - _760) * _638) + _760) * 2.0) + (-1.0);
    float _791 = ((((_774.y - _761) * _638) + _761) * 2.0) + (-1.0);
    float _792 = dot(vec2(_790, _791), vec2(_790, _791));
    float _4365 = isnan(0.0) ? _792 : (isnan(_792) ? 0.0 : max(_792, 0.0));
    float _797 = sqrt(1.0 - (isnan(1.0) ? _4365 : (isnan(_4365) ? 1.0 : min(_4365, 1.0))));
    vec4 _817 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _829 = (_790 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_684.x * 2.0) + (-1.0)))) + (((_817.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _830 = (_791 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_684.y * 2.0) + (-1.0)))) + (((_817.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    vec4 _842 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _320) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _321) + cbTextureTilingScale._m0[19u].w));
    float _844 = _842.x;
    float _845 = 1.0 - _844;
    float _873 = (TEXCOORD_8.x - ((cbMtdParam._m0[24u].y * (1.0 - TEXCOORD_8.x)) * ((((_844 - _845) * cbMtdParam._m0[24u].w) + _845) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].y + 1.0);
    float _4376 = isnan(0.0) ? _873 : (isnan(_873) ? 0.0 : max(_873, 0.0));
    float _874 = isnan(1.0) ? _4376 : (isnan(_4376) ? 1.0 : min(_4376, 1.0));
    float _882 = ((((cbMtdParam._m0[10u].x - _668) * TEXCOORD_8.x) * cbMtdParam._m0[23u].z) * _874) + _668;
    float _883 = ((((cbMtdParam._m0[10u].y - _670) * TEXCOORD_8.y) * cbMtdParam._m0[23u].z) * _874) + _670;
    float _884 = (((cbMtdParam._m0[23u].z * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _672)) * _874) + _672;
    vec4 _910 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _912 = _910.x;
    float _929 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _320) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _321) + cbTextureTilingScale._m0[9u].w)).x - _912) * _495) + _912;
    float _947 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _320) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _321) + cbTextureTilingScale._m0[21u].w)).x - _929) * _568) + _929;
    float _964 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _320) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _321) + cbTextureTilingScale._m0[10u].w)).x - _947) * _638) + _947;
    float _968 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _964) * cbMtdParam._m0[19u].z) + _964;
    float _970 = _968 - (_968 * _874);
    float _975 = (((_684.z - _787) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _787;
    float _979 = ((_817.z - _975) * cbMtdParam._m0[19u].w) + _975;
    float _983 = ((cbMtdParam._m0[23u].x - _979) * _874) + _979;
    vec4 _1004 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _320) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _321) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _1010 = (_1004.x * 2.0) + (-1.0);
    float _1011 = (_1004.y * 2.0) + (-1.0);
    float _1012 = dot(vec2(_1010, _1011), vec2(_1010, _1011));
    float _4387 = isnan(0.0) ? _1012 : (isnan(_1012) ? 0.0 : max(_1012, 0.0));
    float _1028 = (_874 * (((cbMtdParam._m0[22u].z * _829) - _829) + _1010)) + _829;
    float _1029 = (_874 * (((cbMtdParam._m0[22u].z * _830) - _830) + _1011)) + _830;
    float _1030 = (_874 * (sqrt(1.0 - (isnan(1.0) ? _4387 : (isnan(_4387) ? 1.0 : min(_4387, 1.0)))) - _797)) + _797;
    float _1032 = cbMtdParam._m0[22u].x + _817.w;
    float _1035 = fma(_1030, _269 * NORMAL.x, fma(_1029, _276 * TANGENT.x, (_262 * _254) * _1028));
    float _1038 = fma(_1030, _269 * NORMAL.y, fma(_1029, _276 * TANGENT.y, (_262 * _255) * _1028));
    float _1041 = fma(_1030, _269 * NORMAL.z, fma(_1029, _276 * TANGENT.z, (_262 * _256) * _1028));
    float _1045 = inversesqrt(dot(vec3(_1035, _1038, _1041), vec3(_1035, _1038, _1041)));
    float _1046 = _1045 * _1035;
    float _1047 = _1045 * _1038;
    float _1048 = _1045 * _1041;
    float _4398 = isnan(0.0) ? _983 : (isnan(_983) ? 0.0 : max(_983, 0.0));
    float _1049 = isnan(1.0) ? _4398 : (isnan(_4398) ? 1.0 : min(_4398, 1.0));
    float _4409 = isnan(0.0) ? _1032 : (isnan(_1032) ? 0.0 : max(_1032, 0.0));
    float _4420 = isnan(0.0) ? _882 : (isnan(_882) ? 0.0 : max(_882, 0.0));
    float _4431 = isnan(0.0) ? _883 : (isnan(_883) ? 0.0 : max(_883, 0.0));
    float _4442 = isnan(0.0) ? _884 : (isnan(_884) ? 0.0 : max(_884, 0.0));
    float _4453 = isnan(0.0) ? _970 : (isnan(_970) ? 0.0 : max(_970, 0.0));
    float _1054 = isnan(1.0) ? _4453 : (isnan(_4453) ? 1.0 : min(_4453, 1.0));
    float _1068 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1108 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1118 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1108);
    float _1119 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1108);
    float _1120 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1108);
    float _1124 = inversesqrt(dot(vec3(_1118, _1119, _1120), vec3(_1118, _1119, _1120)));
    float _1125 = _1118 * _1124;
    float _1126 = _1119 * _1124;
    float _1127 = _1120 * _1124;
    vec4 _1132 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1134 = _1132.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1306 = sqrt(((_1118 * _1118) + (_1119 * _1119)) + (_1120 * _1120));
        float _1312 = (cbMatDynParam._m0[5u].x * _1306) + cbMatDynParam._m0[5u].y;
        float _4464 = isnan(0.0) ? _1312 : (isnan(_1312) ? 0.0 : max(_1312, 0.0));
        float _1313 = isnan(1.0) ? _4464 : (isnan(_4464) ? 1.0 : min(_4464, 1.0));
        float _1317 = (cbMatDynParam._m0[5u].z * _1306) + cbMatDynParam._m0[5u].w;
        float _4475 = isnan(0.0) ? _1317 : (isnan(_1317) ? 0.0 : max(_1317, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4475 : (isnan(_4475) ? 1.0 : min(_4475, 1.0))) - _1313)) + _1313) < ((_1134 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1145 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1146 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1164 = fma(_1048, cbSceneParam._m0[5u].z, fma(_1047, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1046));
    float _1167 = fma(_1048, cbSceneParam._m0[6u].z, fma(_1047, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1046));
    float _1170 = fma(_1048, cbSceneParam._m0[7u].z, fma(_1047, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1046));
    uint _1183 = _301 + 9u;
    uint _1184 = _1183 + uint(cbMatDynParam._m0[0u].w);
    float _1190 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4420 : (isnan(_4420) ? 1.0 : min(_4420, 1.0)))) * cbInstanceData._m0[_1184].x;
    float _1191 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4431 : (isnan(_4431) ? 1.0 : min(_4431, 1.0)))) * cbInstanceData._m0[_1184].y;
    float _1192 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4442 : (isnan(_4442) ? 1.0 : min(_4442, 1.0)))) * cbInstanceData._m0[_1184].z;
    float _4486 = isnan(0.0) ? _1190 : (isnan(_1190) ? 0.0 : max(_1190, 0.0));
    float _1193 = isnan(1.0) ? _4486 : (isnan(_4486) ? 1.0 : min(_4486, 1.0));
    float _4497 = isnan(0.0) ? _1191 : (isnan(_1191) ? 0.0 : max(_1191, 0.0));
    float _1194 = isnan(1.0) ? _4497 : (isnan(_4497) ? 1.0 : min(_4497, 1.0));
    float _4508 = isnan(0.0) ? _1192 : (isnan(_1192) ? 0.0 : max(_1192, 0.0));
    float _1195 = isnan(1.0) ? _4508 : (isnan(_4508) ? 1.0 : min(_4508, 1.0));
    float _1196 = 1.0 - _1054;
    float _1197 = _1193 * _1196;
    float _1198 = _1194 * _1196;
    float _1199 = _1195 * _1196;
    float _1204 = (_1193 + (-0.039999999105930328369140625)) * _1054;
    float _1205 = (_1194 + (-0.039999999105930328369140625)) * _1054;
    float _1206 = (_1195 + (-0.039999999105930328369140625)) * _1054;
    float _1207 = _1204 + 0.039999999105930328369140625;
    float _1209 = _1205 + 0.039999999105930328369140625;
    float _1210 = _1206 + 0.039999999105930328369140625;
    vec4 _1219 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1145, cbSceneParam._m0[86u].y * _1146));
    float _1223 = ((isnan(1.0) ? _4409 : (isnan(_4409) ? 1.0 : min(_4409, 1.0))) * TEXCOORD_5.w) * _1219.x;
    float _1224 = dot(vec3(_1046, _1047, _1048), vec3(_1125, _1126, _1127));
    float _1227 = _1224 * 2.0;
    float _1231 = (_1227 * _1046) - _1125;
    float _1232 = (_1227 * _1047) - _1126;
    float _1233 = (_1227 * _1048) - _1127;
    float _1237 = abs(dot(vec3(_1125, _1126, _1127), vec3(_1046, _1047, _1048)));
    float _4519 = isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0));
    float _1239 = sqrt(_1049);
    float _1252 = exp2((_1239 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4519 : (isnan(_4519) ? 1.0 : min(_4519, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1239 * 3.0));
    float _1258 = (1.0 - _1252) * ((_1239 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1259 = _1252 * _1239;
    float _1287 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1291 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1295 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1624;
    float _1626;
    float _1627;
    float _1628;
    float _1629;
    float _1630;
    float _1631;
    float _1632;
    float _1633;
    float _1634;
    float _1635;
    float _1636;
    float _1637;
    float _1638;
    float _1639;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1349 = fma(_1295, cbModelParam._m0[26u].z, fma(_1291, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1287));
        float _1353 = fma(_1295, cbModelParam._m0[27u].z, fma(_1291, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1287));
        float _1357 = fma(_1295, cbModelParam._m0[28u].z, fma(_1291, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1287));
        float _1382 = _1287 + _1046;
        float _1383 = _1291 + _1047;
        float _1384 = _1295 + _1048;
        float _1394 = fma(_1384, cbModelParam._m0[26u].z, fma(_1383, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1382)) - _1349;
        float _1395 = fma(_1384, cbModelParam._m0[27u].z, fma(_1383, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1382)) - _1353;
        float _1396 = fma(_1384, cbModelParam._m0[28u].z, fma(_1383, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1382)) - _1357;
        float _1400 = inversesqrt(dot(vec3(_1394, _1395, _1396), vec3(_1394, _1395, _1396)));
        float _1413 = ((_1400 * _1394) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1349 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1414 = ((_1400 * _1395) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1353 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1415 = ((_1400 * _1396) / cbModelParam._m0[34u].z) + ((((((_1357 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1418 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1413, _1414, _1415), 0.0);
        vec4 _1425 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1413, _1414, _1415), 0.0);
        vec4 _1432 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1413, _1414, _1415), 0.0);
        vec4 _1439 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1413, _1414, _1415), 0.0);
        float _1452 = exp2((_1418.w + (-0.5)) * 20.0) * 2.0;
        float _1453 = _1452 * (_1418.x + (-0.5));
        float _1454 = _1452 * (_1418.y + (-0.5));
        float _1455 = _1452 * (_1418.z + (-0.5));
        float _1462 = exp2((_1425.w + (-0.5)) * 20.0) * 2.0;
        float _1463 = _1462 * (_1425.x + (-0.5));
        float _1464 = _1462 * (_1425.y + (-0.5));
        float _1465 = _1462 * (_1425.z + (-0.5));
        float _1472 = exp2((_1432.w + (-0.5)) * 20.0) * 2.0;
        float _1473 = _1472 * (_1432.x + (-0.5));
        float _1474 = _1472 * (_1432.y + (-0.5));
        float _1475 = _1472 * (_1432.z + (-0.5));
        float _1482 = exp2((_1439.w + (-0.5)) * 20.0) * 2.0;
        float _1483 = _1482 * (_1439.x + (-0.5));
        float _1484 = _1482 * (_1439.y + (-0.5));
        float _1485 = _1482 * (_1439.z + (-0.5));
        float _1486 = isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0));
        float _1487 = isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0));
        float _1488 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
        float _1489 = _1453 * 0.5;
        float _1490 = _1463 * 0.5;
        float _1491 = _1473 * 0.5;
        float _1492 = dot(vec3(_1489, _1490, _1491), vec3(_1489, _1490, _1491));
        float _1497 = (_1492 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1492);
        float _1506 = (dot(vec3(_1046, _1047, _1048), vec3(_1497 * _1489, _1497 * _1490, _1497 * _1491)) + 1.0) * 0.5;
        float _4545 = isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0));
        float _1516 = sqrt(((_1490 * _1490) + (_1489 * _1489)) + (_1491 * _1491)) / (_1486 + 9.9999997473787516355514526367188e-06);
        float _4556 = isnan(0.0) ? _1516 : (isnan(_1516) ? 0.0 : max(_1516, 0.0));
        float _1517 = isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0));
        float _1518 = _1517 * 2.0;
        float _1522 = (1.0 - _1517) / (_1517 + 1.0);
        float _4567 = isnan(0.0) ? _1522 : (isnan(_1522) ? 0.0 : max(_1522, 0.0));
        float _1523 = isnan(1.0) ? _4567 : (isnan(_4567) ? 1.0 : min(_4567, 1.0));
        float _1532 = ((((1.0 - _1523) * (_1518 + 2.0)) * exp2(log2(isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0))) * (_1518 + 1.0))) + _1523) * _1486;
        float _1533 = _1454 * 0.5;
        float _1534 = _1464 * 0.5;
        float _1535 = _1474 * 0.5;
        float _1536 = dot(vec3(_1533, _1534, _1535), vec3(_1533, _1534, _1535));
        float _1541 = (_1536 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1536);
        float _1549 = (dot(vec3(_1046, _1047, _1048), vec3(_1541 * _1533, _1541 * _1534, _1541 * _1535)) + 1.0) * 0.5;
        float _4578 = isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0));
        float _1558 = sqrt(((_1534 * _1534) + (_1533 * _1533)) + (_1535 * _1535)) / (_1487 + 9.9999997473787516355514526367188e-06);
        float _4589 = isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0));
        float _1559 = isnan(1.0) ? _4589 : (isnan(_4589) ? 1.0 : min(_4589, 1.0));
        float _1560 = _1559 * 2.0;
        float _1564 = (1.0 - _1559) / (_1559 + 1.0);
        float _4600 = isnan(0.0) ? _1564 : (isnan(_1564) ? 0.0 : max(_1564, 0.0));
        float _1565 = isnan(1.0) ? _4600 : (isnan(_4600) ? 1.0 : min(_4600, 1.0));
        float _1574 = ((((1.0 - _1565) * (_1560 + 2.0)) * exp2(log2(isnan(1.0) ? _4578 : (isnan(_4578) ? 1.0 : min(_4578, 1.0))) * (_1560 + 1.0))) + _1565) * _1487;
        float _1575 = _1455 * 0.5;
        float _1576 = _1465 * 0.5;
        float _1577 = _1475 * 0.5;
        float _1578 = dot(vec3(_1575, _1576, _1577), vec3(_1575, _1576, _1577));
        float _1583 = (_1578 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1578);
        float _1591 = (dot(vec3(_1046, _1047, _1048), vec3(_1583 * _1575, _1583 * _1576, _1583 * _1577)) + 1.0) * 0.5;
        float _4611 = isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0));
        float _1600 = sqrt(((_1576 * _1576) + (_1575 * _1575)) + (_1577 * _1577)) / (_1488 + 9.9999997473787516355514526367188e-06);
        float _4622 = isnan(0.0) ? _1600 : (isnan(_1600) ? 0.0 : max(_1600, 0.0));
        float _1601 = isnan(1.0) ? _4622 : (isnan(_4622) ? 1.0 : min(_4622, 1.0));
        float _1602 = _1601 * 2.0;
        float _1606 = (1.0 - _1601) / (_1601 + 1.0);
        float _4633 = isnan(0.0) ? _1606 : (isnan(_1606) ? 0.0 : max(_1606, 0.0));
        float _1607 = isnan(1.0) ? _4633 : (isnan(_4633) ? 1.0 : min(_4633, 1.0));
        float _1616 = ((((1.0 - _1607) * (_1602 + 2.0)) * exp2(log2(isnan(1.0) ? _4611 : (isnan(_4611) ? 1.0 : min(_4611, 1.0))) * (_1602 + 1.0))) + _1607) * _1488;
        _1624 = _1455;
        _1626 = _1454;
        _1627 = _1453;
        _1628 = _1465;
        _1629 = _1464;
        _1630 = _1463;
        _1631 = _1475;
        _1632 = _1474;
        _1633 = _1473;
        _1634 = _1488;
        _1635 = _1487;
        _1636 = _1486;
        _1637 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0)));
        _1638 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1574 : (isnan(_1574) ? 0.0 : max(_1574, 0.0)));
        _1639 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1616 : (isnan(_1616) ? 0.0 : max(_1616, 0.0)));
    }
    else
    {
        _1624 = _1625;
        _1626 = _1625;
        _1627 = _1625;
        _1628 = _1625;
        _1629 = _1625;
        _1630 = _1625;
        _1631 = _1625;
        _1632 = _1625;
        _1633 = _1625;
        _1634 = _1625;
        _1635 = _1625;
        _1636 = _1625;
        _1637 = 0.0;
        _1638 = 0.0;
        _1639 = 0.0;
    }
    float _1934;
    float _1935;
    float _1936;
    float _1937;
    float _1938;
    float _1939;
    float _1940;
    float _1941;
    float _1942;
    float _1943;
    float _1944;
    float _1945;
    float _1946;
    float _1947;
    float _1948;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1665 = fma(_1295, cbModelParam._m0[30u].z, fma(_1291, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1287));
        float _1669 = fma(_1295, cbModelParam._m0[31u].z, fma(_1291, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1287));
        float _1673 = fma(_1295, cbModelParam._m0[32u].z, fma(_1291, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1287));
        float _1696 = _1287 + _1046;
        float _1697 = _1291 + _1047;
        float _1698 = _1295 + _1048;
        float _1708 = fma(_1698, cbModelParam._m0[30u].z, fma(_1697, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1696)) - _1665;
        float _1709 = fma(_1698, cbModelParam._m0[31u].z, fma(_1697, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1696)) - _1669;
        float _1710 = fma(_1698, cbModelParam._m0[32u].z, fma(_1697, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1696)) - _1673;
        float _1714 = inversesqrt(dot(vec3(_1708, _1709, _1710), vec3(_1708, _1709, _1710)));
        float _1727 = ((_1714 * _1708) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1665 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1728 = ((_1714 * _1709) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1669 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1729 = ((_1714 * _1710) / cbModelParam._m0[35u].z) + ((((((_1673 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1731 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1727, _1728, _1729), 0.0);
        vec4 _1738 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1727, _1728, _1729), 0.0);
        vec4 _1745 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1727, _1728, _1729), 0.0);
        vec4 _1752 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1727, _1728, _1729), 0.0);
        float _1764 = exp2((_1731.w + (-0.5)) * 20.0) * 2.0;
        float _1765 = _1764 * (_1731.x + (-0.5));
        float _1766 = _1764 * (_1731.y + (-0.5));
        float _1767 = _1764 * (_1731.z + (-0.5));
        float _1774 = exp2((_1738.w + (-0.5)) * 20.0) * 2.0;
        float _1775 = _1774 * (_1738.x + (-0.5));
        float _1776 = _1774 * (_1738.y + (-0.5));
        float _1777 = _1774 * (_1738.z + (-0.5));
        float _1784 = exp2((_1745.w + (-0.5)) * 20.0) * 2.0;
        float _1785 = _1784 * (_1745.x + (-0.5));
        float _1786 = _1784 * (_1745.y + (-0.5));
        float _1787 = _1784 * (_1745.z + (-0.5));
        float _1794 = exp2((_1752.w + (-0.5)) * 20.0) * 2.0;
        float _1795 = _1794 * (_1752.x + (-0.5));
        float _1796 = _1794 * (_1752.y + (-0.5));
        float _1797 = _1794 * (_1752.z + (-0.5));
        float _1798 = isnan(0.0) ? _1795 : (isnan(_1795) ? 0.0 : max(_1795, 0.0));
        float _1799 = isnan(0.0) ? _1796 : (isnan(_1796) ? 0.0 : max(_1796, 0.0));
        float _1800 = isnan(0.0) ? _1797 : (isnan(_1797) ? 0.0 : max(_1797, 0.0));
        float _1801 = _1765 * 0.5;
        float _1802 = _1775 * 0.5;
        float _1803 = _1785 * 0.5;
        float _1804 = dot(vec3(_1801, _1802, _1803), vec3(_1801, _1802, _1803));
        float _1809 = (_1804 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1804);
        float _1817 = (dot(vec3(_1046, _1047, _1048), vec3(_1809 * _1801, _1809 * _1802, _1809 * _1803)) + 1.0) * 0.5;
        float _4674 = isnan(0.0) ? _1817 : (isnan(_1817) ? 0.0 : max(_1817, 0.0));
        float _1826 = sqrt(((_1802 * _1802) + (_1801 * _1801)) + (_1803 * _1803)) / (_1798 + 9.9999997473787516355514526367188e-06);
        float _4685 = isnan(0.0) ? _1826 : (isnan(_1826) ? 0.0 : max(_1826, 0.0));
        float _1827 = isnan(1.0) ? _4685 : (isnan(_4685) ? 1.0 : min(_4685, 1.0));
        float _1828 = _1827 * 2.0;
        float _1832 = (1.0 - _1827) / (_1827 + 1.0);
        float _4696 = isnan(0.0) ? _1832 : (isnan(_1832) ? 0.0 : max(_1832, 0.0));
        float _1833 = isnan(1.0) ? _4696 : (isnan(_4696) ? 1.0 : min(_4696, 1.0));
        float _1842 = ((((1.0 - _1833) * (_1828 + 2.0)) * exp2(log2(isnan(1.0) ? _4674 : (isnan(_4674) ? 1.0 : min(_4674, 1.0))) * (_1828 + 1.0))) + _1833) * _1798;
        float _1843 = _1766 * 0.5;
        float _1844 = _1776 * 0.5;
        float _1845 = _1786 * 0.5;
        float _1846 = dot(vec3(_1843, _1844, _1845), vec3(_1843, _1844, _1845));
        float _1851 = (_1846 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1846);
        float _1859 = (dot(vec3(_1046, _1047, _1048), vec3(_1851 * _1843, _1851 * _1844, _1851 * _1845)) + 1.0) * 0.5;
        float _4707 = isnan(0.0) ? _1859 : (isnan(_1859) ? 0.0 : max(_1859, 0.0));
        float _1868 = sqrt(((_1844 * _1844) + (_1843 * _1843)) + (_1845 * _1845)) / (_1799 + 9.9999997473787516355514526367188e-06);
        float _4718 = isnan(0.0) ? _1868 : (isnan(_1868) ? 0.0 : max(_1868, 0.0));
        float _1869 = isnan(1.0) ? _4718 : (isnan(_4718) ? 1.0 : min(_4718, 1.0));
        float _1870 = _1869 * 2.0;
        float _1874 = (1.0 - _1869) / (_1869 + 1.0);
        float _4729 = isnan(0.0) ? _1874 : (isnan(_1874) ? 0.0 : max(_1874, 0.0));
        float _1875 = isnan(1.0) ? _4729 : (isnan(_4729) ? 1.0 : min(_4729, 1.0));
        float _1884 = ((((1.0 - _1875) * (_1870 + 2.0)) * exp2(log2(isnan(1.0) ? _4707 : (isnan(_4707) ? 1.0 : min(_4707, 1.0))) * (_1870 + 1.0))) + _1875) * _1799;
        float _1885 = _1767 * 0.5;
        float _1886 = _1777 * 0.5;
        float _1887 = _1787 * 0.5;
        float _1888 = dot(vec3(_1885, _1886, _1887), vec3(_1885, _1886, _1887));
        float _1893 = (_1888 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1888);
        float _1901 = (dot(vec3(_1046, _1047, _1048), vec3(_1893 * _1885, _1893 * _1886, _1893 * _1887)) + 1.0) * 0.5;
        float _4740 = isnan(0.0) ? _1901 : (isnan(_1901) ? 0.0 : max(_1901, 0.0));
        float _1910 = sqrt(((_1886 * _1886) + (_1885 * _1885)) + (_1887 * _1887)) / (_1800 + 9.9999997473787516355514526367188e-06);
        float _4751 = isnan(0.0) ? _1910 : (isnan(_1910) ? 0.0 : max(_1910, 0.0));
        float _1911 = isnan(1.0) ? _4751 : (isnan(_4751) ? 1.0 : min(_4751, 1.0));
        float _1912 = _1911 * 2.0;
        float _1916 = (1.0 - _1911) / (_1911 + 1.0);
        float _4762 = isnan(0.0) ? _1916 : (isnan(_1916) ? 0.0 : max(_1916, 0.0));
        float _1917 = isnan(1.0) ? _4762 : (isnan(_4762) ? 1.0 : min(_4762, 1.0));
        float _1926 = ((((1.0 - _1917) * (_1912 + 2.0)) * exp2(log2(isnan(1.0) ? _4740 : (isnan(_4740) ? 1.0 : min(_4740, 1.0))) * (_1912 + 1.0))) + _1917) * _1800;
        _1934 = _1767;
        _1935 = _1766;
        _1936 = _1765;
        _1937 = _1777;
        _1938 = _1776;
        _1939 = _1775;
        _1940 = _1787;
        _1941 = _1786;
        _1942 = _1785;
        _1943 = _1800;
        _1944 = _1799;
        _1945 = _1798;
        _1946 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1842 : (isnan(_1842) ? 0.0 : max(_1842, 0.0)));
        _1947 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1884 : (isnan(_1884) ? 0.0 : max(_1884, 0.0)));
        _1948 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1926 : (isnan(_1926) ? 0.0 : max(_1926, 0.0)));
    }
    else
    {
        _1934 = _1625;
        _1935 = _1625;
        _1936 = _1625;
        _1937 = _1625;
        _1938 = _1625;
        _1939 = _1625;
        _1940 = _1625;
        _1941 = _1625;
        _1942 = _1625;
        _1943 = _1625;
        _1944 = _1625;
        _1945 = _1625;
        _1946 = 0.0;
        _1947 = 0.0;
        _1948 = 0.0;
    }
    float _1958 = (cbModelParam._m0[1u].x * (_1946 - _1637)) + _1637;
    float _1959 = (cbModelParam._m0[1u].x * (_1947 - _1638)) + _1638;
    float _1960 = (cbModelParam._m0[1u].x * (_1948 - _1639)) + _1639;
    float _1981 = fma(_1960, cbSceneParam._m0[89u].z, fma(_1959, cbSceneParam._m0[89u].y, _1958 * cbSceneParam._m0[89u].x));
    float _1984 = fma(_1960, cbSceneParam._m0[90u].z, fma(_1959, cbSceneParam._m0[90u].y, _1958 * cbSceneParam._m0[90u].x));
    float _1987 = fma(_1960, cbSceneParam._m0[91u].z, fma(_1959, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1958));
    float _2002 = _1231 * 0.5;
    float _2003 = _1232 * 0.5;
    float _2004 = _1233 * 0.5;
    float _2005 = dot(vec4(_2002, _2003, _2004, 1.0), vec4(_1936, _1939, _1942, _1945));
    float _2008 = dot(vec4(_2002, _2003, _2004, 1.0), vec4(_1935, _1938, _1941, _1944));
    float _2011 = dot(vec4(_2002, _2003, _2004, 1.0), vec4(_1934, _1937, _1940, _1943));
    float _2045;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2018 = dot(vec4(_2002, _2003, _2004, 1.0), vec4(_1624, _1628, _1631, _1634));
        float _2022 = dot(vec4(_2002, _2003, _2004, 1.0), vec4(_1626, _1629, _1632, _1635));
        float _2026 = dot(vec4(_2002, _2003, _2004, 1.0), vec4(_1627, _1630, _1633, _1636));
        float _2033 = dot(vec4(cbModelParam._m0[39u]), vec4(_2002, _2003, _2004, 1.0));
        _2045 = dot(vec3(isnan(0.0) ? _2026 : (isnan(_2026) ? 0.0 : max(_2026, 0.0)), isnan(0.0) ? _2022 : (isnan(_2022) ? 0.0 : max(_2022, 0.0)), isnan(0.0) ? _2018 : (isnan(_2018) ? 0.0 : max(_2018, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2033) ? 0.0 : (isnan(0.0) ? _2033 : max(0.0, _2033))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2045 = 1.0;
    }
    float _2056;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2047 = dot(vec4(cbModelParam._m0[40u]), vec4(_2002, _2003, _2004, 1.0));
        _2056 = dot(vec3(isnan(0.0) ? _2005 : (isnan(_2005) ? 0.0 : max(_2005, 0.0)), isnan(0.0) ? _2008 : (isnan(_2008) ? 0.0 : max(_2008, 0.0)), isnan(0.0) ? _2011 : (isnan(_2011) ? 0.0 : max(_2011, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2047) ? 0.0 : (isnan(0.0) ? _2047 : max(0.0, _2047))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2056 = 1.0;
    }
    float _2060 = (_2056 * cbModelParam._m0[1u].x) + (_2045 * (1.0 - cbModelParam._m0[1u].x));
    float _2070 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1049);
    float _2071 = isnan(_2070) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2070 : min(cbModelParam._m0[25u].z, _2070));
    float _2152;
    float _2154;
    float _2156;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2119 = fma(_1295, cbModelParam._m0[13u].z, fma(_1291, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1287)) + cbModelParam._m0[13u].w;
        float _2123 = fma(_1295, cbModelParam._m0[14u].z, fma(_1291, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1287)) + cbModelParam._m0[14u].w;
        float _2127 = fma(_1295, cbModelParam._m0[15u].z, fma(_1291, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1287)) + cbModelParam._m0[15u].w;
        float _2130 = fma(_1233, cbModelParam._m0[13u].z, fma(_1232, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1231));
        float _2133 = fma(_1233, cbModelParam._m0[14u].z, fma(_1232, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1231));
        float _2136 = fma(_1233, cbModelParam._m0[15u].z, fma(_1232, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1231));
        float _2164;
        if (_2130 > 0.0)
        {
            _2164 = abs((1.0 - _2119) / _2130);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_2130 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_2119 + 1.0) / _2130);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _2164 = frontier_phi_17_15_ladder;
        }
        float _2336;
        if (_2133 > 0.0)
        {
            _2336 = abs((1.0 - _2123) / _2133);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_2133 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_2123 + 1.0) / _2133);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2336 = frontier_phi_26_22_ladder;
        }
        float _2631;
        if (_2136 > 0.0)
        {
            _2631 = abs((1.0 - _2127) / _2136);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_2136 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_2127 + 1.0) / _2136);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2631 = frontier_phi_38_33_ladder;
        }
        float _2633 = isnan(_2336) ? _2164 : (isnan(_2164) ? _2336 : min(_2164, _2336));
        float _2634 = isnan(_2631) ? _2633 : (isnan(_2633) ? _2631 : min(_2633, _2631));
        float _2638 = (_2634 * _2130) + _2119;
        float _2639 = (_2634 * _2133) + _2123;
        float _2640 = (_2634 * _2136) + _2127;
        float _2641 = _2634 * 9.9999997473787516355514526367188e-05;
        float _2643 = (-1.0) - _2641;
        float _2645 = _2641 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2640 > _2645) || ((_2640 < _2643) || ((_2639 > _2645) || ((_2639 < _2643) || ((_2638 < _2643) || (_2638 > _2645))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2785 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2640, cbModelParam._m0[9u].z, fma(_2639, cbModelParam._m0[9u].y, _2638 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2640, cbModelParam._m0[10u].z, fma(_2639, cbModelParam._m0[10u].y, _2638 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2640, cbModelParam._m0[11u].z, fma(_2639, cbModelParam._m0[11u].y, _2638 * cbModelParam._m0[11u].x))), _2071);
            frontier_phi_16_38_ladder = _2785.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2785.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2785.x * cbModelParam._m0[1u].y;
        }
        _2152 = frontier_phi_16_38_ladder_2;
        _2154 = frontier_phi_16_38_ladder_1;
        _2156 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _2140 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1231, _1232, _1233), _2071);
        _2152 = _2140.x * cbModelParam._m0[1u].y;
        _2154 = _2140.y * cbModelParam._m0[1u].y;
        _2156 = _2140.z * cbModelParam._m0[1u].y;
    }
    float _2160 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1049);
    float _2161 = isnan(_2160) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2160 : min(cbModelParam._m0[25u].w, _2160));
    float _2251;
    float _2253;
    float _2255;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2215 = fma(_1295, cbModelParam._m0[21u].z, fma(_1291, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1287)) + cbModelParam._m0[21u].w;
        float _2219 = fma(_1295, cbModelParam._m0[22u].z, fma(_1291, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1287)) + cbModelParam._m0[22u].w;
        float _2223 = fma(_1295, cbModelParam._m0[23u].z, fma(_1291, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1287)) + cbModelParam._m0[23u].w;
        float _2226 = fma(_1233, cbModelParam._m0[21u].z, fma(_1232, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1231));
        float _2229 = fma(_1233, cbModelParam._m0[22u].z, fma(_1232, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1231));
        float _2232 = fma(_1233, cbModelParam._m0[23u].z, fma(_1232, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1231));
        float _2341;
        if (_2226 > 0.0)
        {
            _2341 = abs((1.0 - _2215) / _2226);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2226 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2215 + 1.0) / _2226);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2341 = frontier_phi_28_24_ladder;
        }
        float _2658;
        if (_2229 > 0.0)
        {
            _2658 = abs((1.0 - _2219) / _2229);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2229 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2219 + 1.0) / _2229);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2658 = frontier_phi_40_35_ladder;
        }
        float _2996;
        if (_2232 > 0.0)
        {
            _2996 = abs((1.0 - _2223) / _2232);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_2232 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_2223 + 1.0) / _2232);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2996 = frontier_phi_50_47_ladder;
        }
        float _2998 = isnan(_2658) ? _2341 : (isnan(_2341) ? _2658 : min(_2341, _2658));
        float _2999 = isnan(_2996) ? _2998 : (isnan(_2998) ? _2996 : min(_2998, _2996));
        float _3003 = (_2999 * _2226) + _2215;
        float _3004 = (_2999 * _2229) + _2219;
        float _3005 = (_2999 * _2232) + _2223;
        float _3006 = _2999 * 9.9999997473787516355514526367188e-05;
        float _3007 = (-1.0) - _3006;
        float _3009 = _3006 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_3005 > _3009) || ((_3005 < _3007) || ((_3004 > _3009) || ((_3004 < _3007) || ((_3003 < _3007) || (_3003 > _3009))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3127 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3005, cbModelParam._m0[17u].z, fma(_3004, cbModelParam._m0[17u].y, _3003 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3005, cbModelParam._m0[18u].z, fma(_3004, cbModelParam._m0[18u].y, _3003 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3005, cbModelParam._m0[19u].z, fma(_3004, cbModelParam._m0[19u].y, _3003 * cbModelParam._m0[19u].x))), _2161);
            frontier_phi_25_50_ladder = _3127.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _3127.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _3127.x * cbModelParam._m0[1u].z;
        }
        _2251 = frontier_phi_25_50_ladder_2;
        _2253 = frontier_phi_25_50_ladder_1;
        _2255 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _2235 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1231, _1232, _1233), _2161);
        _2251 = _2235.x * cbModelParam._m0[1u].z;
        _2253 = _2235.y * cbModelParam._m0[1u].z;
        _2255 = _2235.z * cbModelParam._m0[1u].z;
    }
    float _2268 = (((_1258 * _1207) + _1259) * _1223) * ((cbModelParam._m0[1u].w * (_2251 - _2152)) + _2152);
    float _2270 = (((_1258 * _1209) + _1259) * _1223) * ((cbModelParam._m0[1u].w * (_2253 - _2154)) + _2154);
    float _2272 = (((_1258 * _1210) + _1259) * _1223) * ((cbModelParam._m0[1u].w * (_2255 - _2156)) + _2156);
    float _2275 = fma(_2272, cbSceneParam._m0[89u].z, fma(_2270, cbSceneParam._m0[89u].y, _2268 * cbSceneParam._m0[89u].x));
    float _2278 = fma(_2272, cbSceneParam._m0[90u].z, fma(_2270, cbSceneParam._m0[90u].y, _2268 * cbSceneParam._m0[90u].x));
    float _2281 = fma(_2272, cbSceneParam._m0[91u].z, fma(_2270, cbSceneParam._m0[91u].y, _2268 * cbSceneParam._m0[91u].x));
    float _2315 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2319 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2323 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2327 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2328 = _2315 / _2327;
    float _2329 = _2319 / _2327;
    float _2330 = _2323 / _2327;
    float _2477;
    float _2478;
    float _2479;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2357 = ((uint(_2330 > cbSceneParam._m0[59u].y) + uint(_2330 > cbSceneParam._m0[59u].x)) + uint(_2330 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2358 = _2357 + 43u;
        uint _2366 = _2357 + 44u;
        uint _2374 = _2357 + 45u;
        uint _2382 = _2357 + 46u;
        float _2393 = fma(_2327, cbSceneParam._m0[_2358].w, fma(_2323, cbSceneParam._m0[_2358].z, fma(_2319, cbSceneParam._m0[_2358].y, _2315 * cbSceneParam._m0[_2358].x)));
        float _2397 = fma(_2327, cbSceneParam._m0[_2366].w, fma(_2323, cbSceneParam._m0[_2366].z, fma(_2319, cbSceneParam._m0[_2366].y, _2315 * cbSceneParam._m0[_2366].x)));
        float _2405 = fma(_2327, cbSceneParam._m0[_2382].w, fma(_2323, cbSceneParam._m0[_2382].z, fma(_2319, cbSceneParam._m0[_2382].y, _2315 * cbSceneParam._m0[_2382].x)));
        float _2410 = cbSceneParam._m0[33u].z * _2405;
        float _2412 = cbSceneParam._m0[33u].w * _2405;
        float _2415 = fma(_2327, cbSceneParam._m0[_2374].w, fma(_2323, cbSceneParam._m0[_2374].z, fma(_2319, cbSceneParam._m0[_2374].y, _2315 * cbSceneParam._m0[_2374].x))) / _2405;
        float _2463 = (cbSceneParam._m0[33u].x - sqrt(((_2329 * _2329) + (_2328 * _2328)) + (_2330 * _2330))) * cbSceneParam._m0[33u].y;
        float _4888 = isnan(0.0) ? _2463 : (isnan(_2463) ? 0.0 : max(_2463, 0.0));
        float _2470 = (isnan(1.0) ? _4888 : (isnan(_4888) ? 1.0 : min(_4888, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2410 + _2393) / _2405, (_2412 + _2397) / _2405), _2415), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2412 + _2393) / _2405, (_2397 - _2410) / _2405), _2415), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2393 - _2410) / _2405, (_2397 - _2412) / _2405), _2415), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2393 - _2412) / _2405, (_2410 + _2397) / _2405), _2415), 0.0)).x), vec4(0.25)));
        _2477 = 1.0 - (_2470 * cbSceneParam._m0[34u].x);
        _2478 = 1.0 - (_2470 * cbSceneParam._m0[34u].y);
        _2479 = 1.0 - (_2470 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2477 = 1.0;
        _2478 = 1.0;
        _2479 = 1.0;
    }
    float _2543;
    float _2545;
    float _2547;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2531 = fma(_2327, cbSceneParam._m0[63u].w, fma(_2323, cbSceneParam._m0[63u].z, fma(_2319, cbSceneParam._m0[63u].y, _2315 * cbSceneParam._m0[63u].x)));
        float _2532 = fma(_2327, cbSceneParam._m0[60u].w, fma(_2323, cbSceneParam._m0[60u].z, fma(_2319, cbSceneParam._m0[60u].y, _2315 * cbSceneParam._m0[60u].x))) / _2531;
        float _2533 = fma(_2327, cbSceneParam._m0[61u].w, fma(_2323, cbSceneParam._m0[61u].z, fma(_2319, cbSceneParam._m0[61u].y, _2315 * cbSceneParam._m0[61u].x))) / _2531;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2532 >= cbSceneParam._m0[64u].x) && (_2533 >= cbSceneParam._m0[64u].y)) && (_2532 <= cbSceneParam._m0[64u].z)) && (_2533 <= cbSceneParam._m0[64u].w))
        {
            float _2671 = fma(_2327, cbSceneParam._m0[62u].w, fma(_2323, cbSceneParam._m0[62u].z, fma(_2319, cbSceneParam._m0[62u].y, _2315 * cbSceneParam._m0[62u].x))) / _2531;
            float _2675 = isnan(cbSceneParam._m0[41u].w) ? _2671 : (isnan(_2671) ? cbSceneParam._m0[41u].w : max(_2671, cbSceneParam._m0[41u].w));
            float _2718 = (cbSceneParam._m0[33u].x - sqrt(((_2329 * _2329) + (_2328 * _2328)) + (_2330 * _2330))) * cbSceneParam._m0[33u].y;
            float _4904 = isnan(0.0) ? _2718 : (isnan(_2718) ? 0.0 : max(_2718, 0.0));
            float _2725 = (isnan(1.0) ? _4904 : (isnan(_4904) ? 1.0 : min(_4904, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2532, cbSceneParam._m0[33u].w + _2533), _2675), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2532, _2533 - cbSceneParam._m0[33u].z), _2675), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2532 - cbSceneParam._m0[33u].z, _2533 - cbSceneParam._m0[33u].w), _2675), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2532 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2533), _2675), 0.0)).x), vec4(0.25)));
            float _2729 = 1.0 - (_2725 * cbSceneParam._m0[34u].x);
            float _2730 = 1.0 - (_2725 * cbSceneParam._m0[34u].y);
            float _2731 = 1.0 - (_2725 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2731) ? _2479 : (isnan(_2479) ? _2731 : min(_2479, _2731));
            frontier_phi_37_36_ladder_1 = isnan(_2730) ? _2478 : (isnan(_2478) ? _2730 : min(_2478, _2730));
            frontier_phi_37_36_ladder_2 = isnan(_2729) ? _2477 : (isnan(_2477) ? _2729 : min(_2477, _2729));
        }
        else
        {
            frontier_phi_37_36_ladder = _2479;
            frontier_phi_37_36_ladder_1 = _2478;
            frontier_phi_37_36_ladder_2 = _2477;
        }
        _2543 = frontier_phi_37_36_ladder_2;
        _2545 = frontier_phi_37_36_ladder_1;
        _2547 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2543 = _2477;
        _2545 = _2478;
        _2547 = _2479;
    }
    uvec4 _2552 = floatBitsToUint(cbInstanceData._m0[_301 + 5u]);
    uint _2554 = _2552.x * 14u;
    uint _2555 = _2554 + 13u;
    float _2562 = _1223 + (-1.0);
    float _2567 = (cbLight._m0[_2555].x * _2562) + 1.0;
    float _2568 = (cbLight._m0[_2555].y * _2562) + 1.0;
    float _2569 = (cbLight._m0[_2555].z * _2562) + 1.0;
    float _2570 = (cbLight._m0[_2555].w * _2562) + 1.0;
    uint _2571 = _2554 + 5u;
    float _2577 = isnan(1.0) ? _2568 : (isnan(_2568) ? 1.0 : min(_2568, 1.0));
    uint _2581 = _2554 + 4u;
    float _2590 = isnan(1.0) ? _2567 : (isnan(_2567) ? 1.0 : min(_2567, 1.0));
    uint _2594 = _2554 | 1u;
    float _2605 = dot(vec3(cbLight._m0[_2554].xyz), vec3(_1046, _1047, _1048));
    float _2608 = dot(vec3(cbLight._m0[_2594].xyz), vec3(_1046, _1047, _1048));
    float _4940 = isnan(0.0) ? _2605 : (isnan(_2605) ? 0.0 : max(_2605, 0.0));
    float _4951 = isnan(0.0) ? _2608 : (isnan(_2608) ? 0.0 : max(_2608, 0.0));
    float _2613 = (isnan(1.0) ? _4940 : (isnan(_4940) ? 1.0 : min(_4940, 1.0))) * 0.3183098733425140380859375;
    float _2615 = (isnan(1.0) ? _4951 : (isnan(_4951) ? 1.0 : min(_4951, 1.0))) * 0.3183098733425140380859375;
    float _2622 = ((cbLight._m0[_2571].x * _2577) * _2615) + (((cbLight._m0[_2581].x * _2543) * _2590) * _2613);
    float _2623 = ((_2577 * cbLight._m0[_2571].y) * _2615) + (((cbLight._m0[_2581].y * _2545) * _2590) * _2613);
    float _2624 = ((_2577 * cbLight._m0[_2571].z) * _2615) + (((cbLight._m0[_2581].z * _2547) * _2590) * _2613);
    uvec4 _2628 = floatBitsToUint(cbLight._m0[_2554 + 12u]);
    bool _2630 = _2628.x == 0u;
    float _2732;
    float _2734;
    float _2736;
    if (_2630)
    {
        _2732 = _2622;
        _2734 = _2623;
        _2736 = _2624;
    }
    else
    {
        uint _2740 = _2554 + 6u;
        float _2756 = (dot(vec3(cbLight._m0[_2554 + 2u].xyz), vec3(_1046, _1047, _1048)) * 0.5) + 0.5;
        float _2757 = _2756 * _2756;
        float _4962 = isnan(0.0) ? _2757 : (isnan(_2757) ? 0.0 : max(_2757, 0.0));
        float _2758 = isnan(1.0) ? _4962 : (isnan(_4962) ? 1.0 : min(_4962, 1.0));
        float _2759 = isnan(1.0) ? _2569 : (isnan(_2569) ? 1.0 : min(_2569, 1.0));
        _2732 = (((cbLight._m0[_2740].x * 0.3183098733425140380859375) * _2758) * _2759) + _2622;
        _2734 = (((cbLight._m0[_2740].y * 0.3183098733425140380859375) * _2758) * _2759) + _2623;
        _2736 = (((cbLight._m0[_2740].z * 0.3183098733425140380859375) * _2758) * _2759) + _2624;
    }
    bool _2739 = _2628.y == 0u;
    float _2794;
    float _2796;
    float _2798;
    if (_2739)
    {
        _2794 = _2732;
        _2796 = _2734;
        _2798 = _2736;
    }
    else
    {
        uint _2967 = _2554 + 7u;
        float _2983 = (dot(vec3(cbLight._m0[_2554 + 3u].xyz), vec3(_1046, _1047, _1048)) * 0.5) + 0.5;
        float _2984 = _2983 * _2983;
        float _4978 = isnan(0.0) ? _2984 : (isnan(_2984) ? 0.0 : max(_2984, 0.0));
        float _2985 = isnan(1.0) ? _4978 : (isnan(_4978) ? 1.0 : min(_4978, 1.0));
        float _2986 = isnan(1.0) ? _2570 : (isnan(_2570) ? 1.0 : min(_2570, 1.0));
        _2794 = (((cbLight._m0[_2967].x * 0.3183098733425140380859375) * _2985) * _2986) + _2732;
        _2796 = (((cbLight._m0[_2967].y * 0.3183098733425140380859375) * _2985) * _2986) + _2734;
        _2798 = (((cbLight._m0[_2967].z * 0.3183098733425140380859375) * _2985) * _2986) + _2736;
    }
    uint _2801 = _2554 + 8u;
    float _2814 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2554].w)) * _1049) * 0.949999988079071044921875);
    float _2815 = _2814 * _2814;
    float _2816 = cbLight._m0[_2554].x + _1125;
    float _2817 = cbLight._m0[_2554].y + _1126;
    float _2818 = cbLight._m0[_2554].z + _1127;
    float _2822 = inversesqrt(dot(vec3(_2816, _2817, _2818), vec3(_2816, _2817, _2818)));
    float _2823 = _2822 * _2816;
    float _2824 = _2822 * _2817;
    float _2825 = _2822 * _2818;
    float _2826 = dot(vec3(_1046, _1047, _1048), vec3(cbLight._m0[_2554].xyz));
    float _4994 = isnan(0.0) ? _2826 : (isnan(_2826) ? 0.0 : max(_2826, 0.0));
    float _2829 = isnan(1.0) ? _4994 : (isnan(_4994) ? 1.0 : min(_4994, 1.0));
    float _5005 = isnan(0.0) ? _1224 : (isnan(_1224) ? 0.0 : max(_1224, 0.0));
    float _2830 = isnan(1.0) ? _5005 : (isnan(_5005) ? 1.0 : min(_5005, 1.0));
    float _2831 = dot(vec3(_1046, _1047, _1048), vec3(_2823, _2824, _2825));
    float _5016 = isnan(0.0) ? _2831 : (isnan(_2831) ? 0.0 : max(_2831, 0.0));
    float _2834 = isnan(1.0) ? _5016 : (isnan(_5016) ? 1.0 : min(_5016, 1.0));
    float _2835 = dot(vec3(cbLight._m0[_2554].xyz), vec3(_2823, _2824, _2825));
    float _5027 = isnan(0.0) ? _2835 : (isnan(_2835) ? 0.0 : max(_2835, 0.0));
    float _2839 = _2815 * _2815;
    float _2843 = ((_2834 * _2834) * (_2839 + (-1.0))) + 1.0;
    float _2851 = exp2(log2(1.0 - (isnan(1.0) ? _5027 : (isnan(_5027) ? 1.0 : min(_5027, 1.0)))) * 5.0);
    float _2852 = 0.959999978542327880859375 - _1204;
    float _2854 = 0.959999978542327880859375 - _1205;
    float _2855 = 0.959999978542327880859375 - _1206;
    float _2862 = 1.0 - _2815;
    float _2873 = (0.5 / (((_2830 * ((_2829 * _2862) + _2815)) + 9.9999999392252902907785028219223e-09) + (((_2830 * _2862) + _2815) * _2829))) * _2829;
    float _5038 = isnan(0.0) ? _2873 : (isnan(_2873) ? 0.0 : max(_2873, 0.0));
    float _2875 = (isnan(1.0) ? _5038 : (isnan(_5038) ? 1.0 : min(_5038, 1.0))) * (_2839 / ((_2843 * _2843) * 3.141590118408203125));
    uint _2889 = _2554 + 9u;
    float _2900 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2594].w)) * _1049) * 0.949999988079071044921875);
    float _2901 = _2900 * _2900;
    float _2902 = cbLight._m0[_2594].x + _1125;
    float _2903 = cbLight._m0[_2594].y + _1126;
    float _2904 = cbLight._m0[_2594].z + _1127;
    float _2908 = inversesqrt(dot(vec3(_2902, _2903, _2904), vec3(_2902, _2903, _2904)));
    float _2909 = _2908 * _2902;
    float _2910 = _2908 * _2903;
    float _2911 = _2908 * _2904;
    float _2912 = dot(vec3(_1046, _1047, _1048), vec3(cbLight._m0[_2594].xyz));
    float _5049 = isnan(0.0) ? _2912 : (isnan(_2912) ? 0.0 : max(_2912, 0.0));
    float _2915 = isnan(1.0) ? _5049 : (isnan(_5049) ? 1.0 : min(_5049, 1.0));
    float _2916 = dot(vec3(_1046, _1047, _1048), vec3(_2909, _2910, _2911));
    float _5060 = isnan(0.0) ? _2916 : (isnan(_2916) ? 0.0 : max(_2916, 0.0));
    float _2919 = isnan(1.0) ? _5060 : (isnan(_5060) ? 1.0 : min(_5060, 1.0));
    float _2920 = dot(vec3(cbLight._m0[_2594].xyz), vec3(_2909, _2910, _2911));
    float _5071 = isnan(0.0) ? _2920 : (isnan(_2920) ? 0.0 : max(_2920, 0.0));
    float _2924 = _2901 * _2901;
    float _2928 = ((_2919 * _2919) * (_2924 + (-1.0))) + 1.0;
    float _2935 = exp2(log2(1.0 - (isnan(1.0) ? _5071 : (isnan(_5071) ? 1.0 : min(_5071, 1.0)))) * 5.0);
    float _2942 = 1.0 - _2901;
    float _2952 = (0.5 / (((_2830 * ((_2915 * _2942) + _2901)) + 9.9999999392252902907785028219223e-09) + (((_2830 * _2942) + _2901) * _2915))) * _2915;
    float _5082 = isnan(0.0) ? _2952 : (isnan(_2952) ? 0.0 : max(_2952, 0.0));
    float _2954 = (isnan(1.0) ? _5082 : (isnan(_5082) ? 1.0 : min(_5082, 1.0))) * (_2924 / ((_2928 * _2928) * 3.141590118408203125));
    float _2964 = (((((_2935 * _2852) + _1207) * cbLight._m0[_2889].x) * _2954) * _2577) + ((((cbLight._m0[_2801].x * _2543) * ((_2851 * _2852) + _1207)) * _2875) * _2590);
    float _2965 = (((((_2935 * _2854) + _1209) * cbLight._m0[_2889].y) * _2954) * _2577) + ((((cbLight._m0[_2801].y * _2545) * ((_2851 * _2854) + _1209)) * _2875) * _2590);
    float _2966 = (((((_2935 * _2855) + _1210) * cbLight._m0[_2889].z) * _2954) * _2577) + ((((cbLight._m0[_2801].z * _2547) * ((_2851 * _2855) + _1210)) * _2875) * _2590);
    float _3022;
    float _3024;
    float _3026;
    if (_2630)
    {
        _3022 = _2964;
        _3024 = _2965;
        _3026 = _2966;
    }
    else
    {
        uint _3028 = _2554 + 2u;
        uint _3032 = _2554 + 10u;
        float _3046 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3028].w)) * _1049) * 0.949999988079071044921875);
        float _3047 = _3046 * _3046;
        float _3048 = cbLight._m0[_3028].x + _1125;
        float _3049 = cbLight._m0[_3028].y + _1126;
        float _3050 = cbLight._m0[_3028].z + _1127;
        float _3054 = inversesqrt(dot(vec3(_3048, _3049, _3050), vec3(_3048, _3049, _3050)));
        float _3055 = _3054 * _3048;
        float _3056 = _3054 * _3049;
        float _3057 = _3054 * _3050;
        float _3058 = dot(vec3(_1046, _1047, _1048), vec3(cbLight._m0[_3028].xyz));
        float _5093 = isnan(0.0) ? _3058 : (isnan(_3058) ? 0.0 : max(_3058, 0.0));
        float _3061 = isnan(1.0) ? _5093 : (isnan(_5093) ? 1.0 : min(_5093, 1.0));
        float _3062 = dot(vec3(_1046, _1047, _1048), vec3(_3055, _3056, _3057));
        float _5104 = isnan(0.0) ? _3062 : (isnan(_3062) ? 0.0 : max(_3062, 0.0));
        float _3065 = isnan(1.0) ? _5104 : (isnan(_5104) ? 1.0 : min(_5104, 1.0));
        float _3066 = dot(vec3(cbLight._m0[_3028].xyz), vec3(_3055, _3056, _3057));
        float _5115 = isnan(0.0) ? _3066 : (isnan(_3066) ? 0.0 : max(_3066, 0.0));
        float _3070 = _3047 * _3047;
        float _3074 = ((_3065 * _3065) * (_3070 + (-1.0))) + 1.0;
        float _3081 = exp2(log2(1.0 - (isnan(1.0) ? _5115 : (isnan(_5115) ? 1.0 : min(_5115, 1.0)))) * 5.0);
        float _3088 = 1.0 - _3047;
        float _3098 = (0.5 / (((_2830 * ((_3061 * _3088) + _3047)) + 9.9999999392252902907785028219223e-09) + (((_2830 * _3088) + _3047) * _3061))) * _3061;
        float _5126 = isnan(0.0) ? _3098 : (isnan(_3098) ? 0.0 : max(_3098, 0.0));
        float _3100 = (isnan(1.0) ? _5126 : (isnan(_5126) ? 1.0 : min(_5126, 1.0))) * (_3070 / ((_3074 * _3074) * 3.141590118408203125));
        float _3101 = isnan(1.0) ? _2569 : (isnan(_2569) ? 1.0 : min(_2569, 1.0));
        _3022 = (((((_3081 * _2852) + _1207) * cbLight._m0[_3032].x) * _3100) * _3101) + _2964;
        _3024 = (((((_3081 * _2854) + _1209) * cbLight._m0[_3032].y) * _3100) * _3101) + _2965;
        _3026 = (((((_3081 * _2855) + _1210) * cbLight._m0[_3032].z) * _3100) * _3101) + _2966;
    }
    float _3132;
    float _3134;
    float _3136;
    if (_2739)
    {
        _3132 = _3022;
        _3134 = _3024;
        _3136 = _3026;
    }
    else
    {
        uint _3143 = _2554 + 3u;
        uint _3147 = _2554 + 11u;
        float _3161 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3143].w)) * _1049) * 0.949999988079071044921875);
        float _3162 = _3161 * _3161;
        float _3163 = cbLight._m0[_3143].x + _1125;
        float _3164 = cbLight._m0[_3143].y + _1126;
        float _3165 = cbLight._m0[_3143].z + _1127;
        float _3169 = inversesqrt(dot(vec3(_3163, _3164, _3165), vec3(_3163, _3164, _3165)));
        float _3170 = _3169 * _3163;
        float _3171 = _3169 * _3164;
        float _3172 = _3169 * _3165;
        float _3173 = dot(vec3(_1046, _1047, _1048), vec3(cbLight._m0[_3143].xyz));
        float _5142 = isnan(0.0) ? _3173 : (isnan(_3173) ? 0.0 : max(_3173, 0.0));
        float _3176 = isnan(1.0) ? _5142 : (isnan(_5142) ? 1.0 : min(_5142, 1.0));
        float _3177 = dot(vec3(_1046, _1047, _1048), vec3(_3170, _3171, _3172));
        float _5153 = isnan(0.0) ? _3177 : (isnan(_3177) ? 0.0 : max(_3177, 0.0));
        float _3180 = isnan(1.0) ? _5153 : (isnan(_5153) ? 1.0 : min(_5153, 1.0));
        float _3181 = dot(vec3(cbLight._m0[_3143].xyz), vec3(_3170, _3171, _3172));
        float _5164 = isnan(0.0) ? _3181 : (isnan(_3181) ? 0.0 : max(_3181, 0.0));
        float _3185 = _3162 * _3162;
        float _3189 = ((_3180 * _3180) * (_3185 + (-1.0))) + 1.0;
        float _3196 = exp2(log2(1.0 - (isnan(1.0) ? _5164 : (isnan(_5164) ? 1.0 : min(_5164, 1.0)))) * 5.0);
        float _3203 = 1.0 - _3162;
        float _3213 = (0.5 / (((_2830 * ((_3176 * _3203) + _3162)) + 9.9999999392252902907785028219223e-09) + (((_2830 * _3203) + _3162) * _3176))) * _3176;
        float _5175 = isnan(0.0) ? _3213 : (isnan(_3213) ? 0.0 : max(_3213, 0.0));
        float _3215 = (isnan(1.0) ? _5175 : (isnan(_5175) ? 1.0 : min(_5175, 1.0))) * (_3185 / ((_3189 * _3189) * 3.141590118408203125));
        float _3216 = isnan(1.0) ? _2570 : (isnan(_2570) ? 1.0 : min(_2570, 1.0));
        _3132 = (((((_3196 * _2852) + _1207) * cbLight._m0[_3147].x) * _3215) * _3216) + _3022;
        _3134 = (((((_3196 * _2854) + _1209) * cbLight._m0[_3147].y) * _3215) * _3216) + _3024;
        _3136 = (((((_3196 * _2855) + _1210) * cbLight._m0[_3147].z) * _3215) * _3216) + _3026;
    }
    float _3282;
    float _3284;
    float _3286;
    float _3288;
    float _3290;
    float _3292;
    if (_2552.y == 0u)
    {
        uvec4 _3237 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3238 = _3237.x;
        uint _3249 = uint((float(_3237.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1146) / _3238))) + floor(float(uint(cbSceneParam._m0[85u].x * _1145) / _3238)));
        float _3259 = (log2(_2330 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3260 = isnan(0.0) ? _3259 : (isnan(_3259) ? 0.0 : max(_3259, 0.0));
        uint _3263 = uint(isnan(14.0) ? _3260 : (isnan(_3260) ? 14.0 : min(_3260, 14.0)));
        uvec4 _3268 = texelFetch(g_lightClusterGridBuffer, int(((_3263 << 2u) + (_3249 << 6u)) >> 2u));
        uint _3269 = _3268.x;
        uint _3270 = _3237.z;
        float _3349;
        float _3351;
        float _3353;
        float _3355;
        float _3357;
        float _3359;
        if (((((1u << ((_3270 >> 4u) & 15u)) + 4294967295u) & _3269) == 0u) || ((_3270 & 240u) == 0u))
        {
            _3349 = 0.0;
            _3351 = 0.0;
            _3353 = 0.0;
            _3355 = 0.0;
            _3357 = 0.0;
            _3359 = 0.0;
        }
        else
        {
            float _3350;
            float _3352;
            float _3354;
            float _3356;
            float _3358;
            float _3360;
            float _3502 = 0.0;
            float _3503 = 0.0;
            float _3504 = 0.0;
            float _3505 = 0.0;
            float _3506 = 0.0;
            float _3507 = 0.0;
            uint _3508 = 0u;
            uint _3517;
            bool _3518;
            for (;;)
            {
                _3517 = texelFetch(g_lightClassification, int((((_3263 << 5u) + (_3249 << 9u)) + (_3508 << 2u)) >> 2u)).x;
                _3518 = _3517 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3518)
                {
                    frontier_phi_71_pred = _3507;
                    frontier_phi_71_pred_1 = _3506;
                    frontier_phi_71_pred_2 = _3505;
                    frontier_phi_71_pred_3 = _3504;
                    frontier_phi_71_pred_4 = _3503;
                    frontier_phi_71_pred_5 = _3502;
                }
                else
                {
                    float _3647;
                    float _3648;
                    float _3649;
                    float _3650;
                    float _3651;
                    float _3652;
                    uint _3653;
                    _3647 = _3502;
                    _3648 = _3503;
                    _3649 = _3504;
                    _3650 = _3505;
                    _3651 = _3506;
                    _3652 = _3507;
                    _3653 = _3517;
                    float _3574;
                    float _3575;
                    float _3576;
                    float _3577;
                    float _3578;
                    float _3579;
                    for (;;)
                    {
                        uint _3657 = uint(findLSB(_3653)) + (_3508 << 5u);
                        uint _3654 = (_3653 + 4294967295u) & _3653;
                        uint _3659 = _3657 * 48u;
                        vec4 _3673 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3659)).x, texelFetch(g_PointLightRenderingBuffer, int(_3659 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3659 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3659 + 3u)).x));
                        uint _3679 = (_3657 * 48u) + 4u;
                        vec4 _3692 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3679)).x, texelFetch(g_PointLightRenderingBuffer, int(_3679 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3679 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3679 + 3u)).x));
                        uint _3698 = (_3657 * 48u) + 8u;
                        vec3 _3709 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3698)).x, texelFetch(g_PointLightRenderingBuffer, int(_3698 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3698 + 2u)).x));
                        float _3713 = _3673.x - _2328;
                        float _3714 = _3673.y - _2329;
                        float _3715 = _3673.z - _2330;
                        float _3716 = dot(vec3(_3713, _3714, _3715), vec3(_3713, _3714, _3715));
                        float _3719 = inversesqrt(_3716);
                        float _3720 = _3719 * _3713;
                        float _3721 = _3719 * _3714;
                        float _3722 = _3719 * _3715;
                        float _3723 = dot(vec3(_1164, _1167, _1170), vec3(_3720, _3721, _3722));
                        float _3728 = 1.0 - (_3716 * _3673.w);
                        float _5201 = isnan(0.0) ? _3728 : (isnan(_3728) ? 0.0 : max(_3728, 0.0));
                        float _3729 = isnan(1.0) ? _5201 : (isnan(_5201) ? 1.0 : min(_5201, 1.0));
                        float _3730 = sqrt(_3716) * _3692.w;
                        float _3733 = 1.39999997615814208984375 / (_3730 + 1.39999997615814208984375);
                        float _3734 = _3733 * _3733;
                        float _3737 = ((1.0 - _3734) * _3723) + _3734;
                        float _3740 = _3730 * _3730;
                        float _3744 = ((isnan(0.0) ? _3737 : (isnan(_3737) ? 0.0 : max(_3737, 0.0))) * _3729) / ((_3740 * 0.699999988079071044921875) + 1.0);
                        float _3748 = (-0.0) - _2328;
                        float _3749 = (-0.0) - _2329;
                        float _3750 = (-0.0) - _2330;
                        float _3754 = inversesqrt(dot(vec3(_3748, _3749, _3750), vec3(_3748, _3749, _3750)));
                        float _3755 = _3754 * _3748;
                        float _3756 = _3754 * _3749;
                        float _3757 = _3754 * _3750;
                        float _3764 = exp2(log2(1.0 / ((_3740 * 3.5) + 5.0)) * 0.25);
                        float _3765 = 1.0 - _1239;
                        float _3772 = sqrt(1.0 - ((1.0 - (_3765 * _3765)) * (1.0 - (_3764 * _3764))));
                        float _3773 = _3772 * _3772;
                        float _3774 = _3773 * _3773;
                        float _3775 = _3755 + _3720;
                        float _3776 = _3756 + _3721;
                        float _3777 = _3757 + _3722;
                        float _3781 = inversesqrt(dot(vec3(_3775, _3776, _3777), vec3(_3775, _3776, _3777)));
                        float _3785 = dot(vec3(_1164, _1167, _1170), vec3(_3755, _3756, _3757));
                        float _5217 = isnan(0.0) ? _3785 : (isnan(_3785) ? 0.0 : max(_3785, 0.0));
                        float _3788 = isnan(1.0) ? _5217 : (isnan(_5217) ? 1.0 : min(_5217, 1.0));
                        float _3789 = dot(vec3(_1164, _1167, _1170), vec3(_3781 * _3775, _3781 * _3776, _3781 * _3777));
                        float _5228 = isnan(0.0) ? _3789 : (isnan(_3789) ? 0.0 : max(_3789, 0.0));
                        float _3792 = isnan(1.0) ? _5228 : (isnan(_5228) ? 1.0 : min(_5228, 1.0));
                        float _3796 = ((_3792 * _3792) * (_3774 + (-1.0))) + 1.0;
                        float _3797 = _3733 * _3773;
                        float _3798 = _3797 * _3797;
                        float _3801 = ((1.0 - _3798) * _3723) + _3798;
                        float _5239 = isnan(0.0) ? _3801 : (isnan(_3801) ? 0.0 : max(_3801, 0.0));
                        float _3802 = isnan(1.0) ? _5239 : (isnan(_5239) ? 1.0 : min(_5239, 1.0));
                        float _3803 = 1.0 - _3773;
                        float _3813 = (0.5 / (((_3802 * ((_3788 * _3803) + _3773)) + 9.9999999392252902907785028219223e-09) + (((_3802 * _3803) + _3773) * _3788))) * _3802;
                        float _5250 = isnan(0.0) ? _3813 : (isnan(_3813) ? 0.0 : max(_3813, 0.0));
                        float _3824 = (((_3774 * 3.1415927410125732421875) * (isnan(1.0) ? _5250 : (isnan(_5250) ? 1.0 : min(_5250, 1.0)))) / ((_3796 * _3796) * ((_3740 * 2.1991131305694580078125) + 3.141590118408203125))) * _3729;
                        _3577 = (_3744 * _3692.x) + _3650;
                        _3578 = (_3744 * _3692.y) + _3651;
                        _3579 = (_3744 * _3692.z) + _3652;
                        _3574 = (_3824 * _3709.x) + _3647;
                        _3575 = (_3824 * _3709.y) + _3648;
                        _3576 = (_3824 * _3709.z) + _3649;
                        if (_3654 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3647 = _3574;
                            _3648 = _3575;
                            _3649 = _3576;
                            _3650 = _3577;
                            _3651 = _3578;
                            _3652 = _3579;
                            _3653 = _3654;
                        }
                    }
                    frontier_phi_71_pred = _3579;
                    frontier_phi_71_pred_1 = _3578;
                    frontier_phi_71_pred_2 = _3577;
                    frontier_phi_71_pred_3 = _3576;
                    frontier_phi_71_pred_4 = _3575;
                    frontier_phi_71_pred_5 = _3574;
                }
                _3360 = frontier_phi_71_pred;
                _3358 = frontier_phi_71_pred_1;
                _3356 = frontier_phi_71_pred_2;
                _3354 = frontier_phi_71_pred_3;
                _3352 = frontier_phi_71_pred_4;
                _3350 = frontier_phi_71_pred_5;
                uint _3509 = _3508 + 1u;
                if (_3509 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3502 = _3350;
                    _3503 = _3352;
                    _3504 = _3354;
                    _3505 = _3356;
                    _3506 = _3358;
                    _3507 = _3360;
                    _3508 = _3509;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3349 = _3350;
            _3351 = _3352;
            _3353 = _3354;
            _3355 = _3356;
            _3357 = _3358;
            _3359 = _3360;
        }
        uvec4 _3363 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3364 = _3363.z;
        uint _3366 = (_3364 >> 8u) & 15u;
        float _3470;
        float _3472;
        float _3474;
        float _3476;
        float _3478;
        float _3480;
        if (((4294967295u << _3366) & _3269) == 0u)
        {
            _3470 = _3349;
            _3472 = _3351;
            _3474 = _3353;
            _3476 = _3355;
            _3478 = _3357;
            _3480 = _3359;
        }
        else
        {
            float _3495 = inversesqrt(dot(vec3(_2328, _2329, _2330), vec3(_2328, _2329, _2330)));
            float _3496 = _3495 * _2328;
            float _3497 = _3495 * _2329;
            float _3498 = _3495 * _2330;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3366 < ((_3364 >> 12u) & 15u))
            {
                float _3471;
                float _3473;
                float _3475;
                float _3477;
                float _3479;
                float _3481;
                float _3630 = _3349;
                float _3631 = _3351;
                float _3632 = _3353;
                float _3633 = _3355;
                float _3634 = _3357;
                float _3635 = _3359;
                uint _3636 = _3366;
                uint _3645;
                bool _3646;
                for (;;)
                {
                    _3645 = texelFetch(g_lightClassification, int((((_3263 << 5u) + (_3249 << 9u)) + (_3636 << 2u)) >> 2u)).x;
                    _3646 = _3645 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3646)
                    {
                        frontier_phi_82_pred = _3635;
                        frontier_phi_82_pred_1 = _3634;
                        frontier_phi_82_pred_2 = _3633;
                        frontier_phi_82_pred_3 = _3632;
                        frontier_phi_82_pred_4 = _3631;
                        frontier_phi_82_pred_5 = _3630;
                    }
                    else
                    {
                        float _3838;
                        float _3839;
                        float _3840;
                        float _3841;
                        float _3842;
                        float _3843;
                        float _4131;
                        float _4132;
                        float _4133;
                        float _4134;
                        float _4135;
                        float _4136;
                        float _3851 = _3630;
                        float _3852 = _3631;
                        float _3853 = _3632;
                        float _3854 = _3633;
                        float _3855 = _3634;
                        float _3856 = _3635;
                        uint _3857 = _3645;
                        uint _3858;
                        vec4 _3883;
                        float _3884;
                        vec4 _3899;
                        vec3 _3911;
                        vec4 _3926;
                        vec4 _3941;
                        float _3987;
                        bool _3988;
                        for (;;)
                        {
                            uint _3868 = ((_3636 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3857));
                            _3858 = (_3857 + 4294967295u) & _3857;
                            uint _3870 = _3868 * 40u;
                            _3883 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3870)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3870 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3870 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3870 + 3u)).x));
                            _3884 = _3883.w;
                            uint _3886 = (_3868 * 40u) + 4u;
                            _3899 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3886)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3886 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3886 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3886 + 3u)).x));
                            uint _3901 = (_3868 * 40u) + 8u;
                            _3911 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3901)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3901 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3901 + 2u)).x));
                            uint _3913 = (_3868 * 40u) + 16u;
                            _3926 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3913)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3913 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3913 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3913 + 3u)).x));
                            uint _3928 = (_3868 * 40u) + 20u;
                            _3941 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3928)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3928 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3928 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3928 + 3u)).x));
                            uint _3943 = (_3868 * 40u) + 24u;
                            vec4 _3956 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3943)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3943 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3943 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3943 + 3u)).x));
                            uint _3962 = (_3868 * 40u) + 28u;
                            vec4 _3975 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3962)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3962 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3962 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3962 + 3u)).x));
                            _3987 = fma(_2330, _3975.z, fma(_2329, _3975.y, _3975.x * _2328)) + _3975.w;
                            _3988 = !((fma(_2330, _3956.z, fma(_2329, _3956.y, _3956.x * _2328)) + _3956.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3988)
                            {
                                float _4015 = _3883.x - _2328;
                                float _4016 = _3883.y - _2329;
                                float _4017 = _3883.z - _2330;
                                float _4018 = dot(vec3(_4015, _4016, _4017), vec3(_4015, _4016, _4017));
                                float _4021 = inversesqrt(_4018);
                                float _4022 = _4021 * _4015;
                                float _4023 = _4021 * _4016;
                                float _4024 = _4021 * _4017;
                                float _4028 = 1.0 - (_4018 / (_3884 * _3884));
                                float _5261 = isnan(0.0) ? _4028 : (isnan(_4028) ? 0.0 : max(_4028, 0.0));
                                float _4029 = isnan(1.0) ? _5261 : (isnan(_5261) ? 1.0 : min(_5261, 1.0));
                                float _4033 = sqrt(_4018) * _3899.w;
                                float _4035 = 1.39999997615814208984375 / (_4033 + 1.39999997615814208984375);
                                float _4036 = _4035 * _4035;
                                float _4039 = ((1.0 - _4036) * dot(vec3(_4022, _4023, _4024), vec3(_1164, _1167, _1170))) + _4036;
                                float _4042 = _4033 * _4033;
                                float _4046 = (fma(_2330, _3926.z, fma(_2329, _3926.y, _3926.x * _2328)) + _3926.w) / _3987;
                                float _4047 = (fma(_2330, _3941.z, fma(_2329, _3941.y, _3941.x * _2328)) + _3941.w) / _3987;
                                float _4051 = 1.0 - dot(vec2(_4046, _4047), vec2(_4046, _4047));
                                float _5277 = isnan(0.0) ? _4051 : (isnan(_4051) ? 0.0 : max(_4051, 0.0));
                                float _4052 = isnan(1.0) ? _5277 : (isnan(_5277) ? 1.0 : min(_5277, 1.0));
                                float _4053 = _4052 * (((isnan(0.0) ? _4039 : (isnan(_4039) ? 0.0 : max(_4039, 0.0))) * _4029) / ((_4042 * 0.699999988079071044921875) + 1.0));
                                float _4065 = exp2(log2(1.0 / ((_4042 * 3.5) + 5.0)) * 0.25);
                                float _4066 = 1.0 - _1239;
                                float _4073 = sqrt(1.0 - ((1.0 - (_4066 * _4066)) * (1.0 - (_4065 * _4065))));
                                float _4074 = _4073 * _4073;
                                float _4075 = _4074 * _4074;
                                float _4076 = _4022 - _3496;
                                float _4077 = _4023 - _3497;
                                float _4078 = _4024 - _3498;
                                float _4082 = inversesqrt(dot(vec3(_4076, _4077, _4078), vec3(_4076, _4077, _4078)));
                                float _4086 = dot(vec3(_1164, _1167, _1170), vec3((-0.0) - _3496, (-0.0) - _3497, (-0.0) - _3498));
                                float _5288 = isnan(0.0) ? _4086 : (isnan(_4086) ? 0.0 : max(_4086, 0.0));
                                float _4089 = isnan(1.0) ? _5288 : (isnan(_5288) ? 1.0 : min(_5288, 1.0));
                                float _4090 = dot(vec3(_1164, _1167, _1170), vec3(_4082 * _4076, _4082 * _4077, _4082 * _4078));
                                float _5299 = isnan(0.0) ? _4090 : (isnan(_4090) ? 0.0 : max(_4090, 0.0));
                                float _4093 = isnan(1.0) ? _5299 : (isnan(_5299) ? 1.0 : min(_5299, 1.0));
                                float _4097 = ((_4093 * _4093) * (_4075 + (-1.0))) + 1.0;
                                float _4098 = _4035 * _4074;
                                float _4099 = _4098 * _4098;
                                float _4105 = ((1.0 - _4099) * dot(vec3(_1164, _1167, _1170), vec3(_4022, _4023, _4024))) + _4099;
                                float _5310 = isnan(0.0) ? _4105 : (isnan(_4105) ? 0.0 : max(_4105, 0.0));
                                float _4106 = isnan(1.0) ? _5310 : (isnan(_5310) ? 1.0 : min(_5310, 1.0));
                                float _4107 = 1.0 - _4074;
                                float _4117 = (0.5 / (((_4106 * ((_4089 * _4107) + _4074)) + 9.9999999392252902907785028219223e-09) + (((_4106 * _4107) + _4074) * _4089))) * _4106;
                                float _5321 = isnan(0.0) ? _4117 : (isnan(_4117) ? 0.0 : max(_4117, 0.0));
                                float _4127 = (_4052 * _4029) * (((_4075 * 3.1415927410125732421875) * (isnan(1.0) ? _5321 : (isnan(_5321) ? 1.0 : min(_5321, 1.0)))) / ((_4097 * _4097) * ((_4042 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _4053 * _3899.z;
                                frontier_phi_88_pred_1 = _4053 * _3899.y;
                                frontier_phi_88_pred_2 = _4053 * _3899.x;
                                frontier_phi_88_pred_3 = _4127 * _3911.z;
                                frontier_phi_88_pred_4 = _4127 * _3911.y;
                                frontier_phi_88_pred_5 = _4127 * _3911.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _4136 = frontier_phi_88_pred;
                            _4135 = frontier_phi_88_pred_1;
                            _4134 = frontier_phi_88_pred_2;
                            _4133 = frontier_phi_88_pred_3;
                            _4132 = frontier_phi_88_pred_4;
                            _4131 = frontier_phi_88_pred_5;
                            _3841 = _4134 + _3854;
                            _3842 = _4135 + _3855;
                            _3843 = _4136 + _3856;
                            _3838 = _4131 + _3851;
                            _3839 = _4132 + _3852;
                            _3840 = _4133 + _3853;
                            if (_3858 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3851 = _3838;
                                _3852 = _3839;
                                _3853 = _3840;
                                _3854 = _3841;
                                _3855 = _3842;
                                _3856 = _3843;
                                _3857 = _3858;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3843;
                        frontier_phi_82_pred_1 = _3842;
                        frontier_phi_82_pred_2 = _3841;
                        frontier_phi_82_pred_3 = _3840;
                        frontier_phi_82_pred_4 = _3839;
                        frontier_phi_82_pred_5 = _3838;
                    }
                    _3481 = frontier_phi_82_pred;
                    _3479 = frontier_phi_82_pred_1;
                    _3477 = frontier_phi_82_pred_2;
                    _3475 = frontier_phi_82_pred_3;
                    _3473 = frontier_phi_82_pred_4;
                    _3471 = frontier_phi_82_pred_5;
                    uint _3637 = _3636 + 1u;
                    if (_3637 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3630 = _3471;
                        _3631 = _3473;
                        _3632 = _3475;
                        _3633 = _3477;
                        _3634 = _3479;
                        _3635 = _3481;
                        _3636 = _3637;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3477;
                frontier_phi_63_64_ladder_1 = _3481;
                frontier_phi_63_64_ladder_2 = _3479;
                frontier_phi_63_64_ladder_3 = _3475;
                frontier_phi_63_64_ladder_4 = _3473;
                frontier_phi_63_64_ladder_5 = _3471;
            }
            else
            {
                frontier_phi_63_64_ladder = _3355;
                frontier_phi_63_64_ladder_1 = _3359;
                frontier_phi_63_64_ladder_2 = _3357;
                frontier_phi_63_64_ladder_3 = _3353;
                frontier_phi_63_64_ladder_4 = _3351;
                frontier_phi_63_64_ladder_5 = _3349;
            }
            _3470 = frontier_phi_63_64_ladder_5;
            _3472 = frontier_phi_63_64_ladder_4;
            _3474 = frontier_phi_63_64_ladder_3;
            _3476 = frontier_phi_63_64_ladder;
            _3478 = frontier_phi_63_64_ladder_2;
            _3480 = frontier_phi_63_64_ladder_1;
        }
        float _3485 = isnan(1.0) ? _1223 : (isnan(_1223) ? 1.0 : min(_1223, 1.0));
        _3282 = (_3485 * _3476) + _2794;
        _3284 = (_3485 * _3478) + _2796;
        _3286 = (_3485 * _3480) + _2798;
        _3288 = ((_3470 * _1207) * _3485) + _3132;
        _3290 = ((_3472 * _1209) * _3485) + _3134;
        _3292 = ((_3474 * _1210) * _3485) + _3136;
    }
    else
    {
        _3282 = _2794;
        _3284 = _2796;
        _3286 = _2798;
        _3288 = _3132;
        _3290 = _3134;
        _3292 = _3136;
    }
    float _5337 = isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0));
    float _5348 = isnan(0.0) ? _1198 : (isnan(_1198) ? 0.0 : max(_1198, 0.0));
    float _5359 = isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0));
    float _3309 = ((isnan(1.0) ? _5337 : (isnan(_5337) ? 1.0 : min(_5337, 1.0))) * (_3282 + ((isnan(0.0) ? _1981 : (isnan(_1981) ? 0.0 : max(_1981, 0.0))) * _1223))) + ((_3288 + ((isnan(0.0) ? _2275 : (isnan(_2275) ? 0.0 : max(_2275, 0.0))) * _2060)) * cbPerFrame._m0[3u].x);
    float _3310 = ((isnan(1.0) ? _5348 : (isnan(_5348) ? 1.0 : min(_5348, 1.0))) * (_3284 + ((isnan(0.0) ? _1984 : (isnan(_1984) ? 0.0 : max(_1984, 0.0))) * _1223))) + ((_3290 + ((isnan(0.0) ? _2278 : (isnan(_2278) ? 0.0 : max(_2278, 0.0))) * _2060)) * cbPerFrame._m0[3u].x);
    float _3311 = ((isnan(1.0) ? _5359 : (isnan(_5359) ? 1.0 : min(_5359, 1.0))) * (_3286 + ((isnan(0.0) ? _1987 : (isnan(_1987) ? 0.0 : max(_1987, 0.0))) * _1223))) + ((_3292 + ((isnan(0.0) ? _2281 : (isnan(_2281) ? 0.0 : max(_2281, 0.0))) * _2060)) * cbPerFrame._m0[3u].x);
    uint _3312 = _301 + 6u;
    float _3320 = _1145 / cbSceneParam._m0[86u].x;
    float _3321 = _1146 / cbSceneParam._m0[86u].y;
    vec4 _3335 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3320, _3321, (log2((isnan(cbSceneParam._m0[77u].w) ? _1068 : (isnan(_1068) ? cbSceneParam._m0[77u].w : min(_1068, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3337 = _3335.x;
    float _3338 = _3335.y;
    float _3339 = _3335.z;
    float _3340 = _3335.w;
    float _3412;
    float _3414;
    float _3416;
    float _3418;
    if (_1068 > cbSceneParam._m0[78u].w)
    {
        float _3374 = isnan(_1068) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1068 : min(cbSceneParam._m0[80u].w, _1068));
        float _3375 = _3374 / _1068;
        float _3386 = _3375 * _1118;
        float _3387 = _1119 * _3375;
        float _3388 = (-0.0) - _3387;
        float _3390 = _3375 * _1120;
        float _3392 = (cbSceneParam._m0[77u].w * _3388) / _3374;
        float _3393 = _3392 + cbSceneParam._m0[79u].w;
        float _3394 = cbSceneParam._m0[79u].w - _3387;
        float _3400 = sqrt(((_3386 * _3386) + (_3387 * _3387)) + (_3390 * _3390));
        float _3403 = (1.0 - (cbSceneParam._m0[77u].w / _3374)) * _3400;
        float _3408 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3410 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3587;
        if (abs((_3388 - _3392) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3587 = ((((_3393 > 0.0) ? exp2(_3408 * _3393) : (2.0 - exp2(_3410 * _3393))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3403;
        }
        else
        {
            float _3531 = 1.0 / cbSceneParam._m0[80u].x;
            float _3532 = isnan(_3394) ? _3393 : (isnan(_3393) ? _3394 : max(_3393, _3394));
            float _3533 = isnan(_3394) ? _3393 : (isnan(_3393) ? _3394 : min(_3393, _3394));
            float _3542 = isnan(0.0) ? _3532 : (isnan(_3532) ? 0.0 : min(_3532, 0.0));
            float _3543 = isnan(0.0) ? _3533 : (isnan(_3533) ? 0.0 : min(_3533, 0.0));
            _3587 = ((abs(_3400 / _3388) * cbSceneParam._m0[80u].y) * ((((_3542 - _3543) * 2.0) - ((exp2(_3408 * (isnan(0.0) ? _3532 : (isnan(_3532) ? 0.0 : max(_3532, 0.0)))) - exp2(_3408 * (isnan(0.0) ? _3533 : (isnan(_3533) ? 0.0 : max(_3533, 0.0))))) * _3531)) - ((exp2(_3410 * _3542) - exp2(_3410 * _3543)) * _3531))) + (_3403 * cbSceneParam._m0[80u].z);
        }
        vec4 _3589 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3320, _3321, 1.0), 0.0);
        float _3598 = exp2((_3587 * (-1.44269502162933349609375)) * (1.0 - _3589.w));
        float _3599 = log2(_3598);
        float _3615 = log2(_3340);
        _3412 = (exp2(_3615 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3599 * cbSceneParam._m0[78u].x)) * _3589.x) / cbSceneParam._m0[78u].x)) + _3337;
        _3414 = (exp2(_3615 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3599 * cbSceneParam._m0[78u].y)) * _3589.y) / cbSceneParam._m0[78u].y)) + _3338;
        _3416 = (exp2(_3615 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3599 * cbSceneParam._m0[78u].z)) * _3589.z) / cbSceneParam._m0[78u].z)) + _3339;
        _3418 = _3598 * _3340;
    }
    else
    {
        _3412 = _3337;
        _3414 = _3338;
        _3416 = _3339;
        _3418 = _3340;
    }
    bool _3625;
    vec4 _3428;
    vec4 _3450;
    float _3452;
    float _3456;
    float _3457;
    float _3458;
    float _3459;
    bool _3469;
    for (;;)
    {
        _3428 = cbMatDynParam._m0[0u];
        float _3430 = roundEven(_3428.y);
        bool _3431 = _3430 == 3.0;
        float _3432 = log2(_3418);
        float _3439 = exp2(_3432 * cbSceneParam._m0[78u].x) * _3309;
        float _3440 = exp2(_3432 * cbSceneParam._m0[78u].y) * _3310;
        float _3441 = exp2(_3432 * cbSceneParam._m0[78u].z) * _3311;
        float _3448 = _1134 + (-0.5);
        _3450 = cbMtdParam._m0[1u];
        _3452 = _3450.y * _3448;
        float _3455 = (_3430 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3456 = _3455 * (_3431 ? _3439 : (_3439 + (cbSceneParam._m0[72u].w * _3412)));
        _3457 = _3455 * (_3431 ? _3440 : (_3440 + (cbSceneParam._m0[72u].w * _3414)));
        _3458 = _3455 * (_3431 ? _3441 : (_3441 + (cbSceneParam._m0[72u].w * _3416)));
        _3459 = _3448 * 0.999000012874603271484375;
        _3469 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3469)
        {
            if ((cbInstanceData._m0[_301 + 7u].x + _3459) < 0.5)
            {
                _3625 = true;
                break;
            }
        }
        uint _3566 = _1183 + uint(_3428.w);
        if ((cbInstanceData._m0[_3566].w < 1.0) && ((cbInstanceData._m0[_3566].w + _3459) < 0.5))
        {
            _3625 = true;
            break;
        }
        if ((_3452 + 1.0) < _3450.x)
        {
            _3625 = true;
            break;
        }
        _3625 = false;
        break;
    }
    float _3829;
    if (_3625)
    {
        discard_state = true;
        _3829 = 0.0;
    }
    else
    {
        _3829 = cbInstanceData._m0[_3312].w;
    }
    SV_Target.x = _3456;
    SV_Target.y = _3457;
    SV_Target.z = _3458;
    SV_Target.w = _3829;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3312].w;
    discard_exit();
}


