#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_18;
layout(set = 0, binding = 12) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_22;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 21) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_MS_Mask_M1_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1549;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _248 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _249 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _250 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _256 = inversesqrt(dot(vec3(_248, _249, _250), vec3(_248, _249, _250)));
    float _263 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _270 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _282 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _284 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _285 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4157 = isnan(0.0) ? _282 : (isnan(_282) ? 0.0 : max(_282, 0.0));
    float _4168 = isnan(0.0) ? _284 : (isnan(_284) ? 0.0 : max(_284, 0.0));
    float _4179 = isnan(0.0) ? _285 : (isnan(_285) ? 0.0 : max(_285, 0.0));
    uint _295 = uint(roundEven(NORMAL.w)) * 13u;
    uint _300 = _295 + 1u;
    uint _304 = _295 + 2u;
    float _313 = sqrt(((cbInstanceData._m0[_300].x * cbInstanceData._m0[_300].x) + (cbInstanceData._m0[_295].x * cbInstanceData._m0[_295].x)) + (cbInstanceData._m0[_304].x * cbInstanceData._m0[_304].x));
    float _314 = _313 * TEXCOORD.z;
    float _315 = _313 * TEXCOORD.w;
    vec4 _328 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _314) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _315) + cbTextureTilingScale._m0[13u].w));
    vec4 _352 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _357 = _352.x * cbMtdParam._m0[11u].x;
    float _358 = _352.y * cbMtdParam._m0[11u].y;
    float _359 = _352.z * cbMtdParam._m0[11u].z;
    vec4 _378 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _314) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _315) + cbTextureTilingScale._m0[5u].w));
    vec4 _397 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _432 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _434 = _432.x;
    float _446 = dot(vec4(_434, _432.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _463 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _397.x) * 2.0) - ((((_434 - _446) * cbMtdParam._m0[23u].w) + _446) * cbMtdParam._m0[22u].w))) + 1.0;
    float _4190 = isnan(0.0) ? _463 : (isnan(_463) ? 0.0 : max(_463, 0.0));
    float _464 = isnan(1.0) ? _4190 : (isnan(_4190) ? 1.0 : min(_4190, 1.0));
    float _471 = (_464 * ((_378.x * cbMtdParam._m0[12u].x) - _357)) + _357;
    float _472 = (_464 * ((_378.y * cbMtdParam._m0[12u].y) - _358)) + _358;
    float _473 = (_464 * ((_378.z * cbMtdParam._m0[12u].z) - _359)) + _359;
    vec4 _490 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _314) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _315) + cbTextureTilingScale._m0[3u].w));
    vec4 _510 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _512 = _510.x;
    float _522 = dot(vec4(_512, _510.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _536 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _397.y) * 2.0) - ((((_512 - _522) * cbMtdParam._m0[23u].w) + _522) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4201 = isnan(0.0) ? _536 : (isnan(_536) ? 0.0 : max(_536, 0.0));
    float _537 = isnan(1.0) ? _4201 : (isnan(_4201) ? 1.0 : min(_4201, 1.0));
    float _544 = (_537 * ((_490.x * cbMtdParam._m0[13u].x) - _471)) + _471;
    float _545 = (_537 * ((_490.y * cbMtdParam._m0[13u].y) - _472)) + _472;
    float _546 = (_537 * ((_490.z * cbMtdParam._m0[13u].z) - _473)) + _473;
    vec4 _565 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _314) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _315) + cbTextureTilingScale._m0[24u].w));
    vec4 _582 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _584 = _582.x;
    float _594 = dot(vec4(_584, _582.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _606 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _397.z) * 2.0) - ((((_584 - _594) * cbMtdParam._m0[23u].w) + _594) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4212 = isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : max(_606, 0.0));
    float _607 = isnan(1.0) ? _4212 : (isnan(_4212) ? 1.0 : min(_4212, 1.0));
    float _614 = (_607 * ((_565.x * cbMtdParam._m0[14u].x) - _544)) + _544;
    float _615 = (_607 * ((_565.y * cbMtdParam._m0[14u].y) - _545)) + _545;
    float _616 = (_607 * ((_565.z * cbMtdParam._m0[14u].z) - _546)) + _546;
    float _620 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _328.x) * _614;
    float _623 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _328.y) * _615;
    float _626 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _328.z) * _616;
    float _633 = ((_614 - _620) * (isnan(1.0) ? _4157 : (isnan(_4157) ? 1.0 : min(_4157, 1.0)))) + _620;
    float _634 = ((_615 - _623) * (isnan(1.0) ? _4168 : (isnan(_4168) ? 1.0 : min(_4168, 1.0)))) + _623;
    float _635 = ((_616 - _626) * (isnan(1.0) ? _4179 : (isnan(_4179) ? 1.0 : min(_4179, 1.0)))) + _626;
    vec4 _647 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _314) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _315) + cbTextureTilingScale._m0[20u].w));
    vec4 _670 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _314) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _315) + cbTextureTilingScale._m0[4u].w));
    vec4 _687 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _689 = _687.x;
    float _690 = _687.y;
    float _691 = _687.z;
    float _698 = ((_670.x - _689) * _464) + _689;
    float _699 = ((_670.y - _690) * _464) + _690;
    float _700 = ((_670.z - _691) * _464) + _691;
    vec4 _712 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _314) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _315) + cbTextureTilingScale._m0[2u].w));
    float _723 = ((_712.x - _698) * _537) + _698;
    float _724 = ((_712.y - _699) * _537) + _699;
    float _725 = ((_712.z - _700) * _537) + _700;
    vec4 _737 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _314) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _315) + cbTextureTilingScale._m0[23u].w));
    float _750 = ((_737.z - _725) * _607) + _725;
    float _753 = ((((_737.x - _723) * _607) + _723) * 2.0) + (-1.0);
    float _754 = ((((_737.y - _724) * _607) + _724) * 2.0) + (-1.0);
    float _755 = dot(vec2(_753, _754), vec2(_753, _754));
    float _4223 = isnan(0.0) ? _755 : (isnan(_755) ? 0.0 : max(_755, 0.0));
    float _760 = sqrt(1.0 - (isnan(1.0) ? _4223 : (isnan(_4223) ? 1.0 : min(_4223, 1.0))));
    vec4 _780 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _792 = (_753 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_647.x * 2.0) + (-1.0)))) + (((_780.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _793 = (_754 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_647.y * 2.0) + (-1.0)))) + (((_780.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    vec4 _805 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _314) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _315) + cbTextureTilingScale._m0[19u].w));
    float _807 = _805.x;
    float _808 = 1.0 - _807;
    float _836 = (TEXCOORD_8.x - ((cbMtdParam._m0[24u].y * (1.0 - TEXCOORD_8.x)) * ((((_807 - _808) * cbMtdParam._m0[24u].w) + _808) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].y + 1.0);
    float _4234 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
    float _837 = isnan(1.0) ? _4234 : (isnan(_4234) ? 1.0 : min(_4234, 1.0));
    float _845 = ((((cbMtdParam._m0[10u].x - _633) * TEXCOORD_8.x) * cbMtdParam._m0[23u].z) * _837) + _633;
    float _846 = ((((cbMtdParam._m0[10u].y - _634) * TEXCOORD_8.y) * cbMtdParam._m0[23u].z) * _837) + _634;
    float _847 = (((cbMtdParam._m0[23u].z * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _635)) * _837) + _635;
    vec4 _873 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _875 = _873.x;
    float _893 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * _314) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _315) + cbTextureTilingScale._m0[9u].w)).x - _875) * _464) + _875;
    float _911 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[21u].x * _314) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * _315) + cbTextureTilingScale._m0[21u].w)).x - _893) * _537) + _893;
    float _928 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * _314) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * _315) + cbTextureTilingScale._m0[10u].w)).x - _911) * _607) + _911;
    float _932 = ((texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w)).x - _928) * cbMtdParam._m0[19u].z) + _928;
    float _934 = _932 - (_932 * _837);
    float _939 = (((_647.z - _750) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _750;
    float _943 = ((_780.z - _939) * cbMtdParam._m0[19u].w) + _939;
    float _947 = ((cbMtdParam._m0[23u].x - _943) * _837) + _943;
    vec4 _968 = texture(sampler2D(M_MS_Mask_M1_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _314) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _315) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _974 = (_968.x * 2.0) + (-1.0);
    float _975 = (_968.y * 2.0) + (-1.0);
    float _976 = dot(vec2(_974, _975), vec2(_974, _975));
    float _4245 = isnan(0.0) ? _976 : (isnan(_976) ? 0.0 : max(_976, 0.0));
    float _992 = (_837 * (((cbMtdParam._m0[22u].z * _792) - _792) + _974)) + _792;
    float _993 = (_837 * (((cbMtdParam._m0[22u].z * _793) - _793) + _975)) + _793;
    float _994 = (_837 * (sqrt(1.0 - (isnan(1.0) ? _4245 : (isnan(_4245) ? 1.0 : min(_4245, 1.0)))) - _760)) + _760;
    float _996 = cbMtdParam._m0[22u].x + _780.w;
    float _999 = fma(_994, _263 * NORMAL.x, fma(_993, _270 * TANGENT.x, (_256 * _248) * _992));
    float _1002 = fma(_994, _263 * NORMAL.y, fma(_993, _270 * TANGENT.y, (_256 * _249) * _992));
    float _1005 = fma(_994, _263 * NORMAL.z, fma(_993, _270 * TANGENT.z, (_256 * _250) * _992));
    float _1009 = inversesqrt(dot(vec3(_999, _1002, _1005), vec3(_999, _1002, _1005)));
    float _1010 = _1009 * _999;
    float _1011 = _1009 * _1002;
    float _1012 = _1009 * _1005;
    float _4256 = isnan(0.0) ? _947 : (isnan(_947) ? 0.0 : max(_947, 0.0));
    float _1013 = isnan(1.0) ? _4256 : (isnan(_4256) ? 1.0 : min(_4256, 1.0));
    float _4267 = isnan(0.0) ? _996 : (isnan(_996) ? 0.0 : max(_996, 0.0));
    float _4278 = isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0));
    float _4289 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _4300 = isnan(0.0) ? _847 : (isnan(_847) ? 0.0 : max(_847, 0.0));
    float _4311 = isnan(0.0) ? _934 : (isnan(_934) ? 0.0 : max(_934, 0.0));
    float _1018 = isnan(1.0) ? _4311 : (isnan(_4311) ? 1.0 : min(_4311, 1.0));
    float _1032 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1072 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1082 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1072);
    float _1083 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1072);
    float _1084 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1072);
    float _1088 = inversesqrt(dot(vec3(_1082, _1083, _1084), vec3(_1082, _1083, _1084)));
    float _1089 = _1082 * _1088;
    float _1090 = _1083 * _1088;
    float _1091 = _1084 * _1088;
    float _1097 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1098 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1116 = fma(_1012, cbSceneParam._m0[5u].z, fma(_1011, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1010));
    float _1119 = fma(_1012, cbSceneParam._m0[6u].z, fma(_1011, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1010));
    float _1122 = fma(_1012, cbSceneParam._m0[7u].z, fma(_1011, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1010));
    uint _1136 = (_295 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1142 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4278 : (isnan(_4278) ? 1.0 : min(_4278, 1.0)))) * cbInstanceData._m0[_1136].x;
    float _1143 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4289 : (isnan(_4289) ? 1.0 : min(_4289, 1.0)))) * cbInstanceData._m0[_1136].y;
    float _1144 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4300 : (isnan(_4300) ? 1.0 : min(_4300, 1.0)))) * cbInstanceData._m0[_1136].z;
    float _4322 = isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0));
    float _1145 = isnan(1.0) ? _4322 : (isnan(_4322) ? 1.0 : min(_4322, 1.0));
    float _4333 = isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0));
    float _1146 = isnan(1.0) ? _4333 : (isnan(_4333) ? 1.0 : min(_4333, 1.0));
    float _4344 = isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0));
    float _1147 = isnan(1.0) ? _4344 : (isnan(_4344) ? 1.0 : min(_4344, 1.0));
    float _1148 = 1.0 - _1018;
    float _1149 = _1145 * _1148;
    float _1150 = _1146 * _1148;
    float _1151 = _1147 * _1148;
    float _1156 = (_1145 + (-0.039999999105930328369140625)) * _1018;
    float _1157 = (_1146 + (-0.039999999105930328369140625)) * _1018;
    float _1158 = (_1147 + (-0.039999999105930328369140625)) * _1018;
    float _1159 = _1156 + 0.039999999105930328369140625;
    float _1161 = _1157 + 0.039999999105930328369140625;
    float _1162 = _1158 + 0.039999999105930328369140625;
    vec4 _1171 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1097, cbSceneParam._m0[86u].y * _1098));
    float _1175 = ((isnan(1.0) ? _4267 : (isnan(_4267) ? 1.0 : min(_4267, 1.0))) * TEXCOORD_5.w) * _1171.x;
    float _1176 = dot(vec3(_1010, _1011, _1012), vec3(_1089, _1090, _1091));
    float _1179 = _1176 * 2.0;
    float _1183 = (_1179 * _1010) - _1089;
    float _1184 = (_1179 * _1011) - _1090;
    float _1185 = (_1179 * _1012) - _1091;
    float _1189 = abs(dot(vec3(_1089, _1090, _1091), vec3(_1010, _1011, _1012)));
    float _4355 = isnan(0.0) ? _1189 : (isnan(_1189) ? 0.0 : max(_1189, 0.0));
    float _1191 = sqrt(_1013);
    float _1204 = exp2((_1191 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4355 : (isnan(_4355) ? 1.0 : min(_4355, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1191 * 3.0));
    float _1210 = (1.0 - _1204) * ((_1191 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1211 = _1204 * _1191;
    float _1239 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1243 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1247 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1548;
    float _1550;
    float _1551;
    float _1552;
    float _1553;
    float _1554;
    float _1555;
    float _1556;
    float _1557;
    float _1558;
    float _1559;
    float _1560;
    float _1561;
    float _1562;
    float _1563;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1273 = fma(_1247, cbModelParam._m0[26u].z, fma(_1243, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1239));
        float _1277 = fma(_1247, cbModelParam._m0[27u].z, fma(_1243, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1239));
        float _1281 = fma(_1247, cbModelParam._m0[28u].z, fma(_1243, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1239));
        float _1306 = _1239 + _1010;
        float _1307 = _1243 + _1011;
        float _1308 = _1247 + _1012;
        float _1318 = fma(_1308, cbModelParam._m0[26u].z, fma(_1307, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1306)) - _1273;
        float _1319 = fma(_1308, cbModelParam._m0[27u].z, fma(_1307, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1306)) - _1277;
        float _1320 = fma(_1308, cbModelParam._m0[28u].z, fma(_1307, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1306)) - _1281;
        float _1324 = inversesqrt(dot(vec3(_1318, _1319, _1320), vec3(_1318, _1319, _1320)));
        float _1337 = ((_1324 * _1318) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1273 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1338 = ((_1324 * _1319) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1277 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1339 = ((_1324 * _1320) / cbModelParam._m0[34u].z) + ((((((_1281 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1342 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1337, _1338, _1339), 0.0);
        vec4 _1349 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1337, _1338, _1339), 0.0);
        vec4 _1356 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1337, _1338, _1339), 0.0);
        vec4 _1363 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1337, _1338, _1339), 0.0);
        float _1376 = exp2((_1342.w + (-0.5)) * 20.0) * 2.0;
        float _1377 = _1376 * (_1342.x + (-0.5));
        float _1378 = _1376 * (_1342.y + (-0.5));
        float _1379 = _1376 * (_1342.z + (-0.5));
        float _1386 = exp2((_1349.w + (-0.5)) * 20.0) * 2.0;
        float _1387 = _1386 * (_1349.x + (-0.5));
        float _1388 = _1386 * (_1349.y + (-0.5));
        float _1389 = _1386 * (_1349.z + (-0.5));
        float _1396 = exp2((_1356.w + (-0.5)) * 20.0) * 2.0;
        float _1397 = _1396 * (_1356.x + (-0.5));
        float _1398 = _1396 * (_1356.y + (-0.5));
        float _1399 = _1396 * (_1356.z + (-0.5));
        float _1406 = exp2((_1363.w + (-0.5)) * 20.0) * 2.0;
        float _1407 = _1406 * (_1363.x + (-0.5));
        float _1408 = _1406 * (_1363.y + (-0.5));
        float _1409 = _1406 * (_1363.z + (-0.5));
        float _1410 = isnan(0.0) ? _1407 : (isnan(_1407) ? 0.0 : max(_1407, 0.0));
        float _1411 = isnan(0.0) ? _1408 : (isnan(_1408) ? 0.0 : max(_1408, 0.0));
        float _1412 = isnan(0.0) ? _1409 : (isnan(_1409) ? 0.0 : max(_1409, 0.0));
        float _1413 = _1377 * 0.5;
        float _1414 = _1387 * 0.5;
        float _1415 = _1397 * 0.5;
        float _1416 = dot(vec3(_1413, _1414, _1415), vec3(_1413, _1414, _1415));
        float _1421 = (_1416 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1416);
        float _1430 = (dot(vec3(_1010, _1011, _1012), vec3(_1421 * _1413, _1421 * _1414, _1421 * _1415)) + 1.0) * 0.5;
        float _4381 = isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0));
        float _1440 = sqrt(((_1414 * _1414) + (_1413 * _1413)) + (_1415 * _1415)) / (_1410 + 9.9999997473787516355514526367188e-06);
        float _4392 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
        float _1441 = isnan(1.0) ? _4392 : (isnan(_4392) ? 1.0 : min(_4392, 1.0));
        float _1442 = _1441 * 2.0;
        float _1446 = (1.0 - _1441) / (_1441 + 1.0);
        float _4403 = isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0));
        float _1447 = isnan(1.0) ? _4403 : (isnan(_4403) ? 1.0 : min(_4403, 1.0));
        float _1456 = ((((1.0 - _1447) * (_1442 + 2.0)) * exp2(log2(isnan(1.0) ? _4381 : (isnan(_4381) ? 1.0 : min(_4381, 1.0))) * (_1442 + 1.0))) + _1447) * _1410;
        float _1457 = _1378 * 0.5;
        float _1458 = _1388 * 0.5;
        float _1459 = _1398 * 0.5;
        float _1460 = dot(vec3(_1457, _1458, _1459), vec3(_1457, _1458, _1459));
        float _1465 = (_1460 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1460);
        float _1473 = (dot(vec3(_1010, _1011, _1012), vec3(_1465 * _1457, _1465 * _1458, _1465 * _1459)) + 1.0) * 0.5;
        float _4414 = isnan(0.0) ? _1473 : (isnan(_1473) ? 0.0 : max(_1473, 0.0));
        float _1482 = sqrt(((_1458 * _1458) + (_1457 * _1457)) + (_1459 * _1459)) / (_1411 + 9.9999997473787516355514526367188e-06);
        float _4425 = isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0));
        float _1483 = isnan(1.0) ? _4425 : (isnan(_4425) ? 1.0 : min(_4425, 1.0));
        float _1484 = _1483 * 2.0;
        float _1488 = (1.0 - _1483) / (_1483 + 1.0);
        float _4436 = isnan(0.0) ? _1488 : (isnan(_1488) ? 0.0 : max(_1488, 0.0));
        float _1489 = isnan(1.0) ? _4436 : (isnan(_4436) ? 1.0 : min(_4436, 1.0));
        float _1498 = ((((1.0 - _1489) * (_1484 + 2.0)) * exp2(log2(isnan(1.0) ? _4414 : (isnan(_4414) ? 1.0 : min(_4414, 1.0))) * (_1484 + 1.0))) + _1489) * _1411;
        float _1499 = _1379 * 0.5;
        float _1500 = _1389 * 0.5;
        float _1501 = _1399 * 0.5;
        float _1502 = dot(vec3(_1499, _1500, _1501), vec3(_1499, _1500, _1501));
        float _1507 = (_1502 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1502);
        float _1515 = (dot(vec3(_1010, _1011, _1012), vec3(_1507 * _1499, _1507 * _1500, _1507 * _1501)) + 1.0) * 0.5;
        float _4447 = isnan(0.0) ? _1515 : (isnan(_1515) ? 0.0 : max(_1515, 0.0));
        float _1524 = sqrt(((_1500 * _1500) + (_1499 * _1499)) + (_1501 * _1501)) / (_1412 + 9.9999997473787516355514526367188e-06);
        float _4458 = isnan(0.0) ? _1524 : (isnan(_1524) ? 0.0 : max(_1524, 0.0));
        float _1525 = isnan(1.0) ? _4458 : (isnan(_4458) ? 1.0 : min(_4458, 1.0));
        float _1526 = _1525 * 2.0;
        float _1530 = (1.0 - _1525) / (_1525 + 1.0);
        float _4469 = isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0));
        float _1531 = isnan(1.0) ? _4469 : (isnan(_4469) ? 1.0 : min(_4469, 1.0));
        float _1540 = ((((1.0 - _1531) * (_1526 + 2.0)) * exp2(log2(isnan(1.0) ? _4447 : (isnan(_4447) ? 1.0 : min(_4447, 1.0))) * (_1526 + 1.0))) + _1531) * _1412;
        _1548 = _1379;
        _1550 = _1378;
        _1551 = _1377;
        _1552 = _1389;
        _1553 = _1388;
        _1554 = _1387;
        _1555 = _1399;
        _1556 = _1398;
        _1557 = _1397;
        _1558 = _1412;
        _1559 = _1411;
        _1560 = _1410;
        _1561 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0)));
        _1562 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1498 : (isnan(_1498) ? 0.0 : max(_1498, 0.0)));
        _1563 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1540 : (isnan(_1540) ? 0.0 : max(_1540, 0.0)));
    }
    else
    {
        _1548 = _1549;
        _1550 = _1549;
        _1551 = _1549;
        _1552 = _1549;
        _1553 = _1549;
        _1554 = _1549;
        _1555 = _1549;
        _1556 = _1549;
        _1557 = _1549;
        _1558 = _1549;
        _1559 = _1549;
        _1560 = _1549;
        _1561 = 0.0;
        _1562 = 0.0;
        _1563 = 0.0;
    }
    float _1855;
    float _1856;
    float _1857;
    float _1858;
    float _1859;
    float _1860;
    float _1861;
    float _1862;
    float _1863;
    float _1864;
    float _1865;
    float _1866;
    float _1867;
    float _1868;
    float _1869;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1586 = fma(_1247, cbModelParam._m0[30u].z, fma(_1243, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1239));
        float _1590 = fma(_1247, cbModelParam._m0[31u].z, fma(_1243, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1239));
        float _1594 = fma(_1247, cbModelParam._m0[32u].z, fma(_1243, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1239));
        float _1617 = _1239 + _1010;
        float _1618 = _1243 + _1011;
        float _1619 = _1247 + _1012;
        float _1629 = fma(_1619, cbModelParam._m0[30u].z, fma(_1618, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1617)) - _1586;
        float _1630 = fma(_1619, cbModelParam._m0[31u].z, fma(_1618, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1617)) - _1590;
        float _1631 = fma(_1619, cbModelParam._m0[32u].z, fma(_1618, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1617)) - _1594;
        float _1635 = inversesqrt(dot(vec3(_1629, _1630, _1631), vec3(_1629, _1630, _1631)));
        float _1648 = ((_1635 * _1629) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1586 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1649 = ((_1635 * _1630) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1590 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1650 = ((_1635 * _1631) / cbModelParam._m0[35u].z) + ((((((_1594 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1652 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1648, _1649, _1650), 0.0);
        vec4 _1659 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1648, _1649, _1650), 0.0);
        vec4 _1666 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1648, _1649, _1650), 0.0);
        vec4 _1673 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1648, _1649, _1650), 0.0);
        float _1685 = exp2((_1652.w + (-0.5)) * 20.0) * 2.0;
        float _1686 = _1685 * (_1652.x + (-0.5));
        float _1687 = _1685 * (_1652.y + (-0.5));
        float _1688 = _1685 * (_1652.z + (-0.5));
        float _1695 = exp2((_1659.w + (-0.5)) * 20.0) * 2.0;
        float _1696 = _1695 * (_1659.x + (-0.5));
        float _1697 = _1695 * (_1659.y + (-0.5));
        float _1698 = _1695 * (_1659.z + (-0.5));
        float _1705 = exp2((_1666.w + (-0.5)) * 20.0) * 2.0;
        float _1706 = _1705 * (_1666.x + (-0.5));
        float _1707 = _1705 * (_1666.y + (-0.5));
        float _1708 = _1705 * (_1666.z + (-0.5));
        float _1715 = exp2((_1673.w + (-0.5)) * 20.0) * 2.0;
        float _1716 = _1715 * (_1673.x + (-0.5));
        float _1717 = _1715 * (_1673.y + (-0.5));
        float _1718 = _1715 * (_1673.z + (-0.5));
        float _1719 = isnan(0.0) ? _1716 : (isnan(_1716) ? 0.0 : max(_1716, 0.0));
        float _1720 = isnan(0.0) ? _1717 : (isnan(_1717) ? 0.0 : max(_1717, 0.0));
        float _1721 = isnan(0.0) ? _1718 : (isnan(_1718) ? 0.0 : max(_1718, 0.0));
        float _1722 = _1686 * 0.5;
        float _1723 = _1696 * 0.5;
        float _1724 = _1706 * 0.5;
        float _1725 = dot(vec3(_1722, _1723, _1724), vec3(_1722, _1723, _1724));
        float _1730 = (_1725 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1725);
        float _1738 = (dot(vec3(_1010, _1011, _1012), vec3(_1730 * _1722, _1730 * _1723, _1730 * _1724)) + 1.0) * 0.5;
        float _4510 = isnan(0.0) ? _1738 : (isnan(_1738) ? 0.0 : max(_1738, 0.0));
        float _1747 = sqrt(((_1723 * _1723) + (_1722 * _1722)) + (_1724 * _1724)) / (_1719 + 9.9999997473787516355514526367188e-06);
        float _4521 = isnan(0.0) ? _1747 : (isnan(_1747) ? 0.0 : max(_1747, 0.0));
        float _1748 = isnan(1.0) ? _4521 : (isnan(_4521) ? 1.0 : min(_4521, 1.0));
        float _1749 = _1748 * 2.0;
        float _1753 = (1.0 - _1748) / (_1748 + 1.0);
        float _4532 = isnan(0.0) ? _1753 : (isnan(_1753) ? 0.0 : max(_1753, 0.0));
        float _1754 = isnan(1.0) ? _4532 : (isnan(_4532) ? 1.0 : min(_4532, 1.0));
        float _1763 = ((((1.0 - _1754) * (_1749 + 2.0)) * exp2(log2(isnan(1.0) ? _4510 : (isnan(_4510) ? 1.0 : min(_4510, 1.0))) * (_1749 + 1.0))) + _1754) * _1719;
        float _1764 = _1687 * 0.5;
        float _1765 = _1697 * 0.5;
        float _1766 = _1707 * 0.5;
        float _1767 = dot(vec3(_1764, _1765, _1766), vec3(_1764, _1765, _1766));
        float _1772 = (_1767 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1767);
        float _1780 = (dot(vec3(_1010, _1011, _1012), vec3(_1772 * _1764, _1772 * _1765, _1772 * _1766)) + 1.0) * 0.5;
        float _4543 = isnan(0.0) ? _1780 : (isnan(_1780) ? 0.0 : max(_1780, 0.0));
        float _1789 = sqrt(((_1765 * _1765) + (_1764 * _1764)) + (_1766 * _1766)) / (_1720 + 9.9999997473787516355514526367188e-06);
        float _4554 = isnan(0.0) ? _1789 : (isnan(_1789) ? 0.0 : max(_1789, 0.0));
        float _1790 = isnan(1.0) ? _4554 : (isnan(_4554) ? 1.0 : min(_4554, 1.0));
        float _1791 = _1790 * 2.0;
        float _1795 = (1.0 - _1790) / (_1790 + 1.0);
        float _4565 = isnan(0.0) ? _1795 : (isnan(_1795) ? 0.0 : max(_1795, 0.0));
        float _1796 = isnan(1.0) ? _4565 : (isnan(_4565) ? 1.0 : min(_4565, 1.0));
        float _1805 = ((((1.0 - _1796) * (_1791 + 2.0)) * exp2(log2(isnan(1.0) ? _4543 : (isnan(_4543) ? 1.0 : min(_4543, 1.0))) * (_1791 + 1.0))) + _1796) * _1720;
        float _1806 = _1688 * 0.5;
        float _1807 = _1698 * 0.5;
        float _1808 = _1708 * 0.5;
        float _1809 = dot(vec3(_1806, _1807, _1808), vec3(_1806, _1807, _1808));
        float _1814 = (_1809 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1809);
        float _1822 = (dot(vec3(_1010, _1011, _1012), vec3(_1814 * _1806, _1814 * _1807, _1814 * _1808)) + 1.0) * 0.5;
        float _4576 = isnan(0.0) ? _1822 : (isnan(_1822) ? 0.0 : max(_1822, 0.0));
        float _1831 = sqrt(((_1807 * _1807) + (_1806 * _1806)) + (_1808 * _1808)) / (_1721 + 9.9999997473787516355514526367188e-06);
        float _4587 = isnan(0.0) ? _1831 : (isnan(_1831) ? 0.0 : max(_1831, 0.0));
        float _1832 = isnan(1.0) ? _4587 : (isnan(_4587) ? 1.0 : min(_4587, 1.0));
        float _1833 = _1832 * 2.0;
        float _1837 = (1.0 - _1832) / (_1832 + 1.0);
        float _4598 = isnan(0.0) ? _1837 : (isnan(_1837) ? 0.0 : max(_1837, 0.0));
        float _1838 = isnan(1.0) ? _4598 : (isnan(_4598) ? 1.0 : min(_4598, 1.0));
        float _1847 = ((((1.0 - _1838) * (_1833 + 2.0)) * exp2(log2(isnan(1.0) ? _4576 : (isnan(_4576) ? 1.0 : min(_4576, 1.0))) * (_1833 + 1.0))) + _1838) * _1721;
        _1855 = _1688;
        _1856 = _1687;
        _1857 = _1686;
        _1858 = _1698;
        _1859 = _1697;
        _1860 = _1696;
        _1861 = _1708;
        _1862 = _1707;
        _1863 = _1706;
        _1864 = _1721;
        _1865 = _1720;
        _1866 = _1719;
        _1867 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1763 : (isnan(_1763) ? 0.0 : max(_1763, 0.0)));
        _1868 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1805 : (isnan(_1805) ? 0.0 : max(_1805, 0.0)));
        _1869 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1847 : (isnan(_1847) ? 0.0 : max(_1847, 0.0)));
    }
    else
    {
        _1855 = _1549;
        _1856 = _1549;
        _1857 = _1549;
        _1858 = _1549;
        _1859 = _1549;
        _1860 = _1549;
        _1861 = _1549;
        _1862 = _1549;
        _1863 = _1549;
        _1864 = _1549;
        _1865 = _1549;
        _1866 = _1549;
        _1867 = 0.0;
        _1868 = 0.0;
        _1869 = 0.0;
    }
    float _1879 = (cbModelParam._m0[1u].x * (_1867 - _1561)) + _1561;
    float _1880 = (cbModelParam._m0[1u].x * (_1868 - _1562)) + _1562;
    float _1881 = (cbModelParam._m0[1u].x * (_1869 - _1563)) + _1563;
    float _1902 = fma(_1881, cbSceneParam._m0[89u].z, fma(_1880, cbSceneParam._m0[89u].y, _1879 * cbSceneParam._m0[89u].x));
    float _1905 = fma(_1881, cbSceneParam._m0[90u].z, fma(_1880, cbSceneParam._m0[90u].y, _1879 * cbSceneParam._m0[90u].x));
    float _1908 = fma(_1881, cbSceneParam._m0[91u].z, fma(_1880, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1879));
    float _1923 = _1183 * 0.5;
    float _1924 = _1184 * 0.5;
    float _1925 = _1185 * 0.5;
    float _1926 = dot(vec4(_1923, _1924, _1925, 1.0), vec4(_1857, _1860, _1863, _1866));
    float _1929 = dot(vec4(_1923, _1924, _1925, 1.0), vec4(_1856, _1859, _1862, _1865));
    float _1932 = dot(vec4(_1923, _1924, _1925, 1.0), vec4(_1855, _1858, _1861, _1864));
    float _1966;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1939 = dot(vec4(_1923, _1924, _1925, 1.0), vec4(_1548, _1552, _1555, _1558));
        float _1943 = dot(vec4(_1923, _1924, _1925, 1.0), vec4(_1550, _1553, _1556, _1559));
        float _1947 = dot(vec4(_1923, _1924, _1925, 1.0), vec4(_1551, _1554, _1557, _1560));
        float _1954 = dot(vec4(cbModelParam._m0[39u]), vec4(_1923, _1924, _1925, 1.0));
        _1966 = dot(vec3(isnan(0.0) ? _1947 : (isnan(_1947) ? 0.0 : max(_1947, 0.0)), isnan(0.0) ? _1943 : (isnan(_1943) ? 0.0 : max(_1943, 0.0)), isnan(0.0) ? _1939 : (isnan(_1939) ? 0.0 : max(_1939, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1954) ? 0.0 : (isnan(0.0) ? _1954 : max(0.0, _1954))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1966 = 1.0;
    }
    float _1977;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1968 = dot(vec4(cbModelParam._m0[40u]), vec4(_1923, _1924, _1925, 1.0));
        _1977 = dot(vec3(isnan(0.0) ? _1926 : (isnan(_1926) ? 0.0 : max(_1926, 0.0)), isnan(0.0) ? _1929 : (isnan(_1929) ? 0.0 : max(_1929, 0.0)), isnan(0.0) ? _1932 : (isnan(_1932) ? 0.0 : max(_1932, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1968) ? 0.0 : (isnan(0.0) ? _1968 : max(0.0, _1968))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1977 = 1.0;
    }
    float _1981 = (_1977 * cbModelParam._m0[1u].x) + (_1966 * (1.0 - cbModelParam._m0[1u].x));
    float _1991 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1013);
    float _1992 = isnan(_1991) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1991 : min(cbModelParam._m0[25u].z, _1991));
    float _2073;
    float _2075;
    float _2077;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2040 = fma(_1247, cbModelParam._m0[13u].z, fma(_1243, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1239)) + cbModelParam._m0[13u].w;
        float _2044 = fma(_1247, cbModelParam._m0[14u].z, fma(_1243, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1239)) + cbModelParam._m0[14u].w;
        float _2048 = fma(_1247, cbModelParam._m0[15u].z, fma(_1243, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1239)) + cbModelParam._m0[15u].w;
        float _2051 = fma(_1185, cbModelParam._m0[13u].z, fma(_1184, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1183));
        float _2054 = fma(_1185, cbModelParam._m0[14u].z, fma(_1184, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1183));
        float _2057 = fma(_1185, cbModelParam._m0[15u].z, fma(_1184, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1183));
        float _2085;
        if (_2051 > 0.0)
        {
            _2085 = abs((1.0 - _2040) / _2051);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2051 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2040 + 1.0) / _2051);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2085 = frontier_phi_14_12_ladder;
        }
        float _2257;
        if (_2054 > 0.0)
        {
            _2257 = abs((1.0 - _2044) / _2054);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2054 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2044 + 1.0) / _2054);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2257 = frontier_phi_23_19_ladder;
        }
        float _2552;
        if (_2057 > 0.0)
        {
            _2552 = abs((1.0 - _2048) / _2057);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2057 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2048 + 1.0) / _2057);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2552 = frontier_phi_35_30_ladder;
        }
        float _2554 = isnan(_2257) ? _2085 : (isnan(_2085) ? _2257 : min(_2085, _2257));
        float _2555 = isnan(_2552) ? _2554 : (isnan(_2554) ? _2552 : min(_2554, _2552));
        float _2559 = (_2555 * _2051) + _2040;
        float _2560 = (_2555 * _2054) + _2044;
        float _2561 = (_2555 * _2057) + _2048;
        float _2562 = _2555 * 9.9999997473787516355514526367188e-05;
        float _2564 = (-1.0) - _2562;
        float _2566 = _2562 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2561 > _2566) || ((_2561 < _2564) || ((_2560 > _2566) || ((_2560 < _2564) || ((_2559 < _2564) || (_2559 > _2566))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2706 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2561, cbModelParam._m0[9u].z, fma(_2560, cbModelParam._m0[9u].y, _2559 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2561, cbModelParam._m0[10u].z, fma(_2560, cbModelParam._m0[10u].y, _2559 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2561, cbModelParam._m0[11u].z, fma(_2560, cbModelParam._m0[11u].y, _2559 * cbModelParam._m0[11u].x))), _1992);
            frontier_phi_13_35_ladder = _2706.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2706.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2706.x * cbModelParam._m0[1u].y;
        }
        _2073 = frontier_phi_13_35_ladder_2;
        _2075 = frontier_phi_13_35_ladder_1;
        _2077 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2061 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1183, _1184, _1185), _1992);
        _2073 = _2061.x * cbModelParam._m0[1u].y;
        _2075 = _2061.y * cbModelParam._m0[1u].y;
        _2077 = _2061.z * cbModelParam._m0[1u].y;
    }
    float _2081 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1013);
    float _2082 = isnan(_2081) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2081 : min(cbModelParam._m0[25u].w, _2081));
    float _2172;
    float _2174;
    float _2176;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2136 = fma(_1247, cbModelParam._m0[21u].z, fma(_1243, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1239)) + cbModelParam._m0[21u].w;
        float _2140 = fma(_1247, cbModelParam._m0[22u].z, fma(_1243, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1239)) + cbModelParam._m0[22u].w;
        float _2144 = fma(_1247, cbModelParam._m0[23u].z, fma(_1243, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1239)) + cbModelParam._m0[23u].w;
        float _2147 = fma(_1185, cbModelParam._m0[21u].z, fma(_1184, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1183));
        float _2150 = fma(_1185, cbModelParam._m0[22u].z, fma(_1184, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1183));
        float _2153 = fma(_1185, cbModelParam._m0[23u].z, fma(_1184, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1183));
        float _2262;
        if (_2147 > 0.0)
        {
            _2262 = abs((1.0 - _2136) / _2147);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2147 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2136 + 1.0) / _2147);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2262 = frontier_phi_25_21_ladder;
        }
        float _2579;
        if (_2150 > 0.0)
        {
            _2579 = abs((1.0 - _2140) / _2150);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2150 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2140 + 1.0) / _2150);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2579 = frontier_phi_37_32_ladder;
        }
        float _2917;
        if (_2153 > 0.0)
        {
            _2917 = abs((1.0 - _2144) / _2153);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2153 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2144 + 1.0) / _2153);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2917 = frontier_phi_47_44_ladder;
        }
        float _2919 = isnan(_2579) ? _2262 : (isnan(_2262) ? _2579 : min(_2262, _2579));
        float _2920 = isnan(_2917) ? _2919 : (isnan(_2919) ? _2917 : min(_2919, _2917));
        float _2924 = (_2920 * _2147) + _2136;
        float _2925 = (_2920 * _2150) + _2140;
        float _2926 = (_2920 * _2153) + _2144;
        float _2927 = _2920 * 9.9999997473787516355514526367188e-05;
        float _2928 = (-1.0) - _2927;
        float _2930 = _2927 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2926 > _2930) || ((_2926 < _2928) || ((_2925 > _2930) || ((_2925 < _2928) || ((_2924 < _2928) || (_2924 > _2930))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3048 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2926, cbModelParam._m0[17u].z, fma(_2925, cbModelParam._m0[17u].y, _2924 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2926, cbModelParam._m0[18u].z, fma(_2925, cbModelParam._m0[18u].y, _2924 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2926, cbModelParam._m0[19u].z, fma(_2925, cbModelParam._m0[19u].y, _2924 * cbModelParam._m0[19u].x))), _2082);
            frontier_phi_22_47_ladder = _3048.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _3048.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _3048.x * cbModelParam._m0[1u].z;
        }
        _2172 = frontier_phi_22_47_ladder_2;
        _2174 = frontier_phi_22_47_ladder_1;
        _2176 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2156 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1183, _1184, _1185), _2082);
        _2172 = _2156.x * cbModelParam._m0[1u].z;
        _2174 = _2156.y * cbModelParam._m0[1u].z;
        _2176 = _2156.z * cbModelParam._m0[1u].z;
    }
    float _2189 = (((_1210 * _1159) + _1211) * _1175) * ((cbModelParam._m0[1u].w * (_2172 - _2073)) + _2073);
    float _2191 = (((_1210 * _1161) + _1211) * _1175) * ((cbModelParam._m0[1u].w * (_2174 - _2075)) + _2075);
    float _2193 = (((_1210 * _1162) + _1211) * _1175) * ((cbModelParam._m0[1u].w * (_2176 - _2077)) + _2077);
    float _2196 = fma(_2193, cbSceneParam._m0[89u].z, fma(_2191, cbSceneParam._m0[89u].y, _2189 * cbSceneParam._m0[89u].x));
    float _2199 = fma(_2193, cbSceneParam._m0[90u].z, fma(_2191, cbSceneParam._m0[90u].y, _2189 * cbSceneParam._m0[90u].x));
    float _2202 = fma(_2193, cbSceneParam._m0[91u].z, fma(_2191, cbSceneParam._m0[91u].y, _2189 * cbSceneParam._m0[91u].x));
    float _2236 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2240 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2244 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2248 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2249 = _2236 / _2248;
    float _2250 = _2240 / _2248;
    float _2251 = _2244 / _2248;
    float _2398;
    float _2399;
    float _2400;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2278 = ((uint(_2251 > cbSceneParam._m0[59u].y) + uint(_2251 > cbSceneParam._m0[59u].x)) + uint(_2251 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2279 = _2278 + 43u;
        uint _2287 = _2278 + 44u;
        uint _2295 = _2278 + 45u;
        uint _2303 = _2278 + 46u;
        float _2314 = fma(_2248, cbSceneParam._m0[_2279].w, fma(_2244, cbSceneParam._m0[_2279].z, fma(_2240, cbSceneParam._m0[_2279].y, _2236 * cbSceneParam._m0[_2279].x)));
        float _2318 = fma(_2248, cbSceneParam._m0[_2287].w, fma(_2244, cbSceneParam._m0[_2287].z, fma(_2240, cbSceneParam._m0[_2287].y, _2236 * cbSceneParam._m0[_2287].x)));
        float _2326 = fma(_2248, cbSceneParam._m0[_2303].w, fma(_2244, cbSceneParam._m0[_2303].z, fma(_2240, cbSceneParam._m0[_2303].y, _2236 * cbSceneParam._m0[_2303].x)));
        float _2331 = cbSceneParam._m0[33u].z * _2326;
        float _2333 = cbSceneParam._m0[33u].w * _2326;
        float _2336 = fma(_2248, cbSceneParam._m0[_2295].w, fma(_2244, cbSceneParam._m0[_2295].z, fma(_2240, cbSceneParam._m0[_2295].y, _2236 * cbSceneParam._m0[_2295].x))) / _2326;
        float _2384 = (cbSceneParam._m0[33u].x - sqrt(((_2250 * _2250) + (_2249 * _2249)) + (_2251 * _2251))) * cbSceneParam._m0[33u].y;
        float _4724 = isnan(0.0) ? _2384 : (isnan(_2384) ? 0.0 : max(_2384, 0.0));
        float _2391 = (isnan(1.0) ? _4724 : (isnan(_4724) ? 1.0 : min(_4724, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2331 + _2314) / _2326, (_2333 + _2318) / _2326), _2336), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2333 + _2314) / _2326, (_2318 - _2331) / _2326), _2336), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2314 - _2331) / _2326, (_2318 - _2333) / _2326), _2336), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2314 - _2333) / _2326, (_2331 + _2318) / _2326), _2336), 0.0)).x), vec4(0.25)));
        _2398 = 1.0 - (_2391 * cbSceneParam._m0[34u].x);
        _2399 = 1.0 - (_2391 * cbSceneParam._m0[34u].y);
        _2400 = 1.0 - (_2391 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2398 = 1.0;
        _2399 = 1.0;
        _2400 = 1.0;
    }
    float _2464;
    float _2466;
    float _2468;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2452 = fma(_2248, cbSceneParam._m0[63u].w, fma(_2244, cbSceneParam._m0[63u].z, fma(_2240, cbSceneParam._m0[63u].y, _2236 * cbSceneParam._m0[63u].x)));
        float _2453 = fma(_2248, cbSceneParam._m0[60u].w, fma(_2244, cbSceneParam._m0[60u].z, fma(_2240, cbSceneParam._m0[60u].y, _2236 * cbSceneParam._m0[60u].x))) / _2452;
        float _2454 = fma(_2248, cbSceneParam._m0[61u].w, fma(_2244, cbSceneParam._m0[61u].z, fma(_2240, cbSceneParam._m0[61u].y, _2236 * cbSceneParam._m0[61u].x))) / _2452;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2453 >= cbSceneParam._m0[64u].x) && (_2454 >= cbSceneParam._m0[64u].y)) && (_2453 <= cbSceneParam._m0[64u].z)) && (_2454 <= cbSceneParam._m0[64u].w))
        {
            float _2592 = fma(_2248, cbSceneParam._m0[62u].w, fma(_2244, cbSceneParam._m0[62u].z, fma(_2240, cbSceneParam._m0[62u].y, _2236 * cbSceneParam._m0[62u].x))) / _2452;
            float _2596 = isnan(cbSceneParam._m0[41u].w) ? _2592 : (isnan(_2592) ? cbSceneParam._m0[41u].w : max(_2592, cbSceneParam._m0[41u].w));
            float _2639 = (cbSceneParam._m0[33u].x - sqrt(((_2250 * _2250) + (_2249 * _2249)) + (_2251 * _2251))) * cbSceneParam._m0[33u].y;
            float _4740 = isnan(0.0) ? _2639 : (isnan(_2639) ? 0.0 : max(_2639, 0.0));
            float _2646 = (isnan(1.0) ? _4740 : (isnan(_4740) ? 1.0 : min(_4740, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2453, cbSceneParam._m0[33u].w + _2454), _2596), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2453, _2454 - cbSceneParam._m0[33u].z), _2596), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2453 - cbSceneParam._m0[33u].z, _2454 - cbSceneParam._m0[33u].w), _2596), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2453 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2454), _2596), 0.0)).x), vec4(0.25)));
            float _2650 = 1.0 - (_2646 * cbSceneParam._m0[34u].x);
            float _2651 = 1.0 - (_2646 * cbSceneParam._m0[34u].y);
            float _2652 = 1.0 - (_2646 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2652) ? _2400 : (isnan(_2400) ? _2652 : min(_2400, _2652));
            frontier_phi_34_33_ladder_1 = isnan(_2651) ? _2399 : (isnan(_2399) ? _2651 : min(_2399, _2651));
            frontier_phi_34_33_ladder_2 = isnan(_2650) ? _2398 : (isnan(_2398) ? _2650 : min(_2398, _2650));
        }
        else
        {
            frontier_phi_34_33_ladder = _2400;
            frontier_phi_34_33_ladder_1 = _2399;
            frontier_phi_34_33_ladder_2 = _2398;
        }
        _2464 = frontier_phi_34_33_ladder_2;
        _2466 = frontier_phi_34_33_ladder_1;
        _2468 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2464 = _2398;
        _2466 = _2399;
        _2468 = _2400;
    }
    uvec4 _2473 = floatBitsToUint(cbInstanceData._m0[_295 + 5u]);
    uint _2475 = _2473.x * 14u;
    uint _2476 = _2475 + 13u;
    float _2483 = _1175 + (-1.0);
    float _2488 = (cbLight._m0[_2476].x * _2483) + 1.0;
    float _2489 = (cbLight._m0[_2476].y * _2483) + 1.0;
    float _2490 = (cbLight._m0[_2476].z * _2483) + 1.0;
    float _2491 = (cbLight._m0[_2476].w * _2483) + 1.0;
    uint _2492 = _2475 + 5u;
    float _2498 = isnan(1.0) ? _2489 : (isnan(_2489) ? 1.0 : min(_2489, 1.0));
    uint _2502 = _2475 + 4u;
    float _2511 = isnan(1.0) ? _2488 : (isnan(_2488) ? 1.0 : min(_2488, 1.0));
    uint _2515 = _2475 | 1u;
    float _2526 = dot(vec3(cbLight._m0[_2475].xyz), vec3(_1010, _1011, _1012));
    float _2529 = dot(vec3(cbLight._m0[_2515].xyz), vec3(_1010, _1011, _1012));
    float _4776 = isnan(0.0) ? _2526 : (isnan(_2526) ? 0.0 : max(_2526, 0.0));
    float _4787 = isnan(0.0) ? _2529 : (isnan(_2529) ? 0.0 : max(_2529, 0.0));
    float _2534 = (isnan(1.0) ? _4776 : (isnan(_4776) ? 1.0 : min(_4776, 1.0))) * 0.3183098733425140380859375;
    float _2536 = (isnan(1.0) ? _4787 : (isnan(_4787) ? 1.0 : min(_4787, 1.0))) * 0.3183098733425140380859375;
    float _2543 = ((cbLight._m0[_2492].x * _2498) * _2536) + (((cbLight._m0[_2502].x * _2464) * _2511) * _2534);
    float _2544 = ((_2498 * cbLight._m0[_2492].y) * _2536) + (((cbLight._m0[_2502].y * _2466) * _2511) * _2534);
    float _2545 = ((_2498 * cbLight._m0[_2492].z) * _2536) + (((cbLight._m0[_2502].z * _2468) * _2511) * _2534);
    uvec4 _2549 = floatBitsToUint(cbLight._m0[_2475 + 12u]);
    bool _2551 = _2549.x == 0u;
    float _2653;
    float _2655;
    float _2657;
    if (_2551)
    {
        _2653 = _2543;
        _2655 = _2544;
        _2657 = _2545;
    }
    else
    {
        uint _2661 = _2475 + 6u;
        float _2677 = (dot(vec3(cbLight._m0[_2475 + 2u].xyz), vec3(_1010, _1011, _1012)) * 0.5) + 0.5;
        float _2678 = _2677 * _2677;
        float _4798 = isnan(0.0) ? _2678 : (isnan(_2678) ? 0.0 : max(_2678, 0.0));
        float _2679 = isnan(1.0) ? _4798 : (isnan(_4798) ? 1.0 : min(_4798, 1.0));
        float _2680 = isnan(1.0) ? _2490 : (isnan(_2490) ? 1.0 : min(_2490, 1.0));
        _2653 = (((cbLight._m0[_2661].x * 0.3183098733425140380859375) * _2679) * _2680) + _2543;
        _2655 = (((cbLight._m0[_2661].y * 0.3183098733425140380859375) * _2679) * _2680) + _2544;
        _2657 = (((cbLight._m0[_2661].z * 0.3183098733425140380859375) * _2679) * _2680) + _2545;
    }
    bool _2660 = _2549.y == 0u;
    float _2715;
    float _2717;
    float _2719;
    if (_2660)
    {
        _2715 = _2653;
        _2717 = _2655;
        _2719 = _2657;
    }
    else
    {
        uint _2888 = _2475 + 7u;
        float _2904 = (dot(vec3(cbLight._m0[_2475 + 3u].xyz), vec3(_1010, _1011, _1012)) * 0.5) + 0.5;
        float _2905 = _2904 * _2904;
        float _4814 = isnan(0.0) ? _2905 : (isnan(_2905) ? 0.0 : max(_2905, 0.0));
        float _2906 = isnan(1.0) ? _4814 : (isnan(_4814) ? 1.0 : min(_4814, 1.0));
        float _2907 = isnan(1.0) ? _2491 : (isnan(_2491) ? 1.0 : min(_2491, 1.0));
        _2715 = (((cbLight._m0[_2888].x * 0.3183098733425140380859375) * _2906) * _2907) + _2653;
        _2717 = (((cbLight._m0[_2888].y * 0.3183098733425140380859375) * _2906) * _2907) + _2655;
        _2719 = (((cbLight._m0[_2888].z * 0.3183098733425140380859375) * _2906) * _2907) + _2657;
    }
    uint _2722 = _2475 + 8u;
    float _2735 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2475].w)) * _1013) * 0.949999988079071044921875);
    float _2736 = _2735 * _2735;
    float _2737 = cbLight._m0[_2475].x + _1089;
    float _2738 = cbLight._m0[_2475].y + _1090;
    float _2739 = cbLight._m0[_2475].z + _1091;
    float _2743 = inversesqrt(dot(vec3(_2737, _2738, _2739), vec3(_2737, _2738, _2739)));
    float _2744 = _2743 * _2737;
    float _2745 = _2743 * _2738;
    float _2746 = _2743 * _2739;
    float _2747 = dot(vec3(_1010, _1011, _1012), vec3(cbLight._m0[_2475].xyz));
    float _4830 = isnan(0.0) ? _2747 : (isnan(_2747) ? 0.0 : max(_2747, 0.0));
    float _2750 = isnan(1.0) ? _4830 : (isnan(_4830) ? 1.0 : min(_4830, 1.0));
    float _4841 = isnan(0.0) ? _1176 : (isnan(_1176) ? 0.0 : max(_1176, 0.0));
    float _2751 = isnan(1.0) ? _4841 : (isnan(_4841) ? 1.0 : min(_4841, 1.0));
    float _2752 = dot(vec3(_1010, _1011, _1012), vec3(_2744, _2745, _2746));
    float _4852 = isnan(0.0) ? _2752 : (isnan(_2752) ? 0.0 : max(_2752, 0.0));
    float _2755 = isnan(1.0) ? _4852 : (isnan(_4852) ? 1.0 : min(_4852, 1.0));
    float _2756 = dot(vec3(cbLight._m0[_2475].xyz), vec3(_2744, _2745, _2746));
    float _4863 = isnan(0.0) ? _2756 : (isnan(_2756) ? 0.0 : max(_2756, 0.0));
    float _2760 = _2736 * _2736;
    float _2764 = ((_2755 * _2755) * (_2760 + (-1.0))) + 1.0;
    float _2772 = exp2(log2(1.0 - (isnan(1.0) ? _4863 : (isnan(_4863) ? 1.0 : min(_4863, 1.0)))) * 5.0);
    float _2773 = 0.959999978542327880859375 - _1156;
    float _2775 = 0.959999978542327880859375 - _1157;
    float _2776 = 0.959999978542327880859375 - _1158;
    float _2783 = 1.0 - _2736;
    float _2794 = (0.5 / (((_2751 * ((_2750 * _2783) + _2736)) + 9.9999999392252902907785028219223e-09) + (((_2751 * _2783) + _2736) * _2750))) * _2750;
    float _4874 = isnan(0.0) ? _2794 : (isnan(_2794) ? 0.0 : max(_2794, 0.0));
    float _2796 = (isnan(1.0) ? _4874 : (isnan(_4874) ? 1.0 : min(_4874, 1.0))) * (_2760 / ((_2764 * _2764) * 3.141590118408203125));
    uint _2810 = _2475 + 9u;
    float _2821 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2515].w)) * _1013) * 0.949999988079071044921875);
    float _2822 = _2821 * _2821;
    float _2823 = cbLight._m0[_2515].x + _1089;
    float _2824 = cbLight._m0[_2515].y + _1090;
    float _2825 = cbLight._m0[_2515].z + _1091;
    float _2829 = inversesqrt(dot(vec3(_2823, _2824, _2825), vec3(_2823, _2824, _2825)));
    float _2830 = _2829 * _2823;
    float _2831 = _2829 * _2824;
    float _2832 = _2829 * _2825;
    float _2833 = dot(vec3(_1010, _1011, _1012), vec3(cbLight._m0[_2515].xyz));
    float _4885 = isnan(0.0) ? _2833 : (isnan(_2833) ? 0.0 : max(_2833, 0.0));
    float _2836 = isnan(1.0) ? _4885 : (isnan(_4885) ? 1.0 : min(_4885, 1.0));
    float _2837 = dot(vec3(_1010, _1011, _1012), vec3(_2830, _2831, _2832));
    float _4896 = isnan(0.0) ? _2837 : (isnan(_2837) ? 0.0 : max(_2837, 0.0));
    float _2840 = isnan(1.0) ? _4896 : (isnan(_4896) ? 1.0 : min(_4896, 1.0));
    float _2841 = dot(vec3(cbLight._m0[_2515].xyz), vec3(_2830, _2831, _2832));
    float _4907 = isnan(0.0) ? _2841 : (isnan(_2841) ? 0.0 : max(_2841, 0.0));
    float _2845 = _2822 * _2822;
    float _2849 = ((_2840 * _2840) * (_2845 + (-1.0))) + 1.0;
    float _2856 = exp2(log2(1.0 - (isnan(1.0) ? _4907 : (isnan(_4907) ? 1.0 : min(_4907, 1.0)))) * 5.0);
    float _2863 = 1.0 - _2822;
    float _2873 = (0.5 / (((_2751 * ((_2836 * _2863) + _2822)) + 9.9999999392252902907785028219223e-09) + (((_2751 * _2863) + _2822) * _2836))) * _2836;
    float _4918 = isnan(0.0) ? _2873 : (isnan(_2873) ? 0.0 : max(_2873, 0.0));
    float _2875 = (isnan(1.0) ? _4918 : (isnan(_4918) ? 1.0 : min(_4918, 1.0))) * (_2845 / ((_2849 * _2849) * 3.141590118408203125));
    float _2885 = (((((_2856 * _2773) + _1159) * cbLight._m0[_2810].x) * _2875) * _2498) + ((((cbLight._m0[_2722].x * _2464) * ((_2772 * _2773) + _1159)) * _2796) * _2511);
    float _2886 = (((((_2856 * _2775) + _1161) * cbLight._m0[_2810].y) * _2875) * _2498) + ((((cbLight._m0[_2722].y * _2466) * ((_2772 * _2775) + _1161)) * _2796) * _2511);
    float _2887 = (((((_2856 * _2776) + _1162) * cbLight._m0[_2810].z) * _2875) * _2498) + ((((cbLight._m0[_2722].z * _2468) * ((_2772 * _2776) + _1162)) * _2796) * _2511);
    float _2943;
    float _2945;
    float _2947;
    if (_2551)
    {
        _2943 = _2885;
        _2945 = _2886;
        _2947 = _2887;
    }
    else
    {
        uint _2949 = _2475 + 2u;
        uint _2953 = _2475 + 10u;
        float _2967 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2949].w)) * _1013) * 0.949999988079071044921875);
        float _2968 = _2967 * _2967;
        float _2969 = cbLight._m0[_2949].x + _1089;
        float _2970 = cbLight._m0[_2949].y + _1090;
        float _2971 = cbLight._m0[_2949].z + _1091;
        float _2975 = inversesqrt(dot(vec3(_2969, _2970, _2971), vec3(_2969, _2970, _2971)));
        float _2976 = _2975 * _2969;
        float _2977 = _2975 * _2970;
        float _2978 = _2975 * _2971;
        float _2979 = dot(vec3(_1010, _1011, _1012), vec3(cbLight._m0[_2949].xyz));
        float _4929 = isnan(0.0) ? _2979 : (isnan(_2979) ? 0.0 : max(_2979, 0.0));
        float _2982 = isnan(1.0) ? _4929 : (isnan(_4929) ? 1.0 : min(_4929, 1.0));
        float _2983 = dot(vec3(_1010, _1011, _1012), vec3(_2976, _2977, _2978));
        float _4940 = isnan(0.0) ? _2983 : (isnan(_2983) ? 0.0 : max(_2983, 0.0));
        float _2986 = isnan(1.0) ? _4940 : (isnan(_4940) ? 1.0 : min(_4940, 1.0));
        float _2987 = dot(vec3(cbLight._m0[_2949].xyz), vec3(_2976, _2977, _2978));
        float _4951 = isnan(0.0) ? _2987 : (isnan(_2987) ? 0.0 : max(_2987, 0.0));
        float _2991 = _2968 * _2968;
        float _2995 = ((_2986 * _2986) * (_2991 + (-1.0))) + 1.0;
        float _3002 = exp2(log2(1.0 - (isnan(1.0) ? _4951 : (isnan(_4951) ? 1.0 : min(_4951, 1.0)))) * 5.0);
        float _3009 = 1.0 - _2968;
        float _3019 = (0.5 / (((_2751 * ((_2982 * _3009) + _2968)) + 9.9999999392252902907785028219223e-09) + (((_2751 * _3009) + _2968) * _2982))) * _2982;
        float _4962 = isnan(0.0) ? _3019 : (isnan(_3019) ? 0.0 : max(_3019, 0.0));
        float _3021 = (isnan(1.0) ? _4962 : (isnan(_4962) ? 1.0 : min(_4962, 1.0))) * (_2991 / ((_2995 * _2995) * 3.141590118408203125));
        float _3022 = isnan(1.0) ? _2490 : (isnan(_2490) ? 1.0 : min(_2490, 1.0));
        _2943 = (((((_3002 * _2773) + _1159) * cbLight._m0[_2953].x) * _3021) * _3022) + _2885;
        _2945 = (((((_3002 * _2775) + _1161) * cbLight._m0[_2953].y) * _3021) * _3022) + _2886;
        _2947 = (((((_3002 * _2776) + _1162) * cbLight._m0[_2953].z) * _3021) * _3022) + _2887;
    }
    float _3053;
    float _3055;
    float _3057;
    if (_2660)
    {
        _3053 = _2943;
        _3055 = _2945;
        _3057 = _2947;
    }
    else
    {
        uint _3064 = _2475 + 3u;
        uint _3068 = _2475 + 11u;
        float _3082 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3064].w)) * _1013) * 0.949999988079071044921875);
        float _3083 = _3082 * _3082;
        float _3084 = cbLight._m0[_3064].x + _1089;
        float _3085 = cbLight._m0[_3064].y + _1090;
        float _3086 = cbLight._m0[_3064].z + _1091;
        float _3090 = inversesqrt(dot(vec3(_3084, _3085, _3086), vec3(_3084, _3085, _3086)));
        float _3091 = _3090 * _3084;
        float _3092 = _3090 * _3085;
        float _3093 = _3090 * _3086;
        float _3094 = dot(vec3(_1010, _1011, _1012), vec3(cbLight._m0[_3064].xyz));
        float _4978 = isnan(0.0) ? _3094 : (isnan(_3094) ? 0.0 : max(_3094, 0.0));
        float _3097 = isnan(1.0) ? _4978 : (isnan(_4978) ? 1.0 : min(_4978, 1.0));
        float _3098 = dot(vec3(_1010, _1011, _1012), vec3(_3091, _3092, _3093));
        float _4989 = isnan(0.0) ? _3098 : (isnan(_3098) ? 0.0 : max(_3098, 0.0));
        float _3101 = isnan(1.0) ? _4989 : (isnan(_4989) ? 1.0 : min(_4989, 1.0));
        float _3102 = dot(vec3(cbLight._m0[_3064].xyz), vec3(_3091, _3092, _3093));
        float _5000 = isnan(0.0) ? _3102 : (isnan(_3102) ? 0.0 : max(_3102, 0.0));
        float _3106 = _3083 * _3083;
        float _3110 = ((_3101 * _3101) * (_3106 + (-1.0))) + 1.0;
        float _3117 = exp2(log2(1.0 - (isnan(1.0) ? _5000 : (isnan(_5000) ? 1.0 : min(_5000, 1.0)))) * 5.0);
        float _3124 = 1.0 - _3083;
        float _3134 = (0.5 / (((_2751 * ((_3097 * _3124) + _3083)) + 9.9999999392252902907785028219223e-09) + (((_2751 * _3124) + _3083) * _3097))) * _3097;
        float _5011 = isnan(0.0) ? _3134 : (isnan(_3134) ? 0.0 : max(_3134, 0.0));
        float _3136 = (isnan(1.0) ? _5011 : (isnan(_5011) ? 1.0 : min(_5011, 1.0))) * (_3106 / ((_3110 * _3110) * 3.141590118408203125));
        float _3137 = isnan(1.0) ? _2491 : (isnan(_2491) ? 1.0 : min(_2491, 1.0));
        _3053 = (((((_3117 * _2773) + _1159) * cbLight._m0[_3068].x) * _3136) * _3137) + _2943;
        _3055 = (((((_3117 * _2775) + _1161) * cbLight._m0[_3068].y) * _3136) * _3137) + _2945;
        _3057 = (((((_3117 * _2776) + _1162) * cbLight._m0[_3068].z) * _3136) * _3137) + _2947;
    }
    float _3203;
    float _3205;
    float _3207;
    float _3209;
    float _3211;
    float _3213;
    if (_2473.y == 0u)
    {
        uvec4 _3158 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3159 = _3158.x;
        uint _3170 = uint((float(_3158.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1098) / _3159))) + floor(float(uint(cbSceneParam._m0[85u].x * _1097) / _3159)));
        float _3180 = (log2(_2251 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3181 = isnan(0.0) ? _3180 : (isnan(_3180) ? 0.0 : max(_3180, 0.0));
        uint _3184 = uint(isnan(14.0) ? _3181 : (isnan(_3181) ? 14.0 : min(_3181, 14.0)));
        uvec4 _3189 = texelFetch(g_lightClusterGridBuffer, int(((_3184 << 2u) + (_3170 << 6u)) >> 2u));
        uint _3190 = _3189.x;
        uint _3191 = _3158.z;
        float _3270;
        float _3272;
        float _3274;
        float _3276;
        float _3278;
        float _3280;
        if (((((1u << ((_3191 >> 4u) & 15u)) + 4294967295u) & _3190) == 0u) || ((_3191 & 240u) == 0u))
        {
            _3270 = 0.0;
            _3272 = 0.0;
            _3274 = 0.0;
            _3276 = 0.0;
            _3278 = 0.0;
            _3280 = 0.0;
        }
        else
        {
            float _3271;
            float _3273;
            float _3275;
            float _3277;
            float _3279;
            float _3281;
            float _3415 = 0.0;
            float _3416 = 0.0;
            float _3417 = 0.0;
            float _3418 = 0.0;
            float _3419 = 0.0;
            float _3420 = 0.0;
            uint _3421 = 0u;
            uint _3430;
            bool _3431;
            for (;;)
            {
                _3430 = texelFetch(g_lightClassification, int((((_3184 << 5u) + (_3170 << 9u)) + (_3421 << 2u)) >> 2u)).x;
                _3431 = _3430 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3431)
                {
                    frontier_phi_66_pred = _3420;
                    frontier_phi_66_pred_1 = _3419;
                    frontier_phi_66_pred_2 = _3418;
                    frontier_phi_66_pred_3 = _3417;
                    frontier_phi_66_pred_4 = _3416;
                    frontier_phi_66_pred_5 = _3415;
                }
                else
                {
                    float _3539;
                    float _3540;
                    float _3541;
                    float _3542;
                    float _3543;
                    float _3544;
                    uint _3545;
                    _3539 = _3415;
                    _3540 = _3416;
                    _3541 = _3417;
                    _3542 = _3418;
                    _3543 = _3419;
                    _3544 = _3420;
                    _3545 = _3430;
                    float _3471;
                    float _3472;
                    float _3473;
                    float _3474;
                    float _3475;
                    float _3476;
                    for (;;)
                    {
                        uint _3549 = uint(findLSB(_3545)) + (_3421 << 5u);
                        uint _3546 = (_3545 + 4294967295u) & _3545;
                        uint _3551 = _3549 * 48u;
                        vec4 _3565 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3551)).x, texelFetch(g_PointLightRenderingBuffer, int(_3551 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3551 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3551 + 3u)).x));
                        uint _3571 = (_3549 * 48u) + 4u;
                        vec4 _3584 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3571)).x, texelFetch(g_PointLightRenderingBuffer, int(_3571 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3571 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3571 + 3u)).x));
                        uint _3590 = (_3549 * 48u) + 8u;
                        vec3 _3601 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3590)).x, texelFetch(g_PointLightRenderingBuffer, int(_3590 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3590 + 2u)).x));
                        float _3605 = _3565.x - _2249;
                        float _3606 = _3565.y - _2250;
                        float _3607 = _3565.z - _2251;
                        float _3608 = dot(vec3(_3605, _3606, _3607), vec3(_3605, _3606, _3607));
                        float _3611 = inversesqrt(_3608);
                        float _3612 = _3611 * _3605;
                        float _3613 = _3611 * _3606;
                        float _3614 = _3611 * _3607;
                        float _3615 = dot(vec3(_1116, _1119, _1122), vec3(_3612, _3613, _3614));
                        float _3620 = 1.0 - (_3608 * _3565.w);
                        float _5037 = isnan(0.0) ? _3620 : (isnan(_3620) ? 0.0 : max(_3620, 0.0));
                        float _3621 = isnan(1.0) ? _5037 : (isnan(_5037) ? 1.0 : min(_5037, 1.0));
                        float _3622 = sqrt(_3608) * _3584.w;
                        float _3625 = 1.39999997615814208984375 / (_3622 + 1.39999997615814208984375);
                        float _3626 = _3625 * _3625;
                        float _3629 = ((1.0 - _3626) * _3615) + _3626;
                        float _3632 = _3622 * _3622;
                        float _3636 = ((isnan(0.0) ? _3629 : (isnan(_3629) ? 0.0 : max(_3629, 0.0))) * _3621) / ((_3632 * 0.699999988079071044921875) + 1.0);
                        float _3640 = (-0.0) - _2249;
                        float _3641 = (-0.0) - _2250;
                        float _3642 = (-0.0) - _2251;
                        float _3646 = inversesqrt(dot(vec3(_3640, _3641, _3642), vec3(_3640, _3641, _3642)));
                        float _3647 = _3646 * _3640;
                        float _3648 = _3646 * _3641;
                        float _3649 = _3646 * _3642;
                        float _3656 = exp2(log2(1.0 / ((_3632 * 3.5) + 5.0)) * 0.25);
                        float _3657 = 1.0 - _1191;
                        float _3664 = sqrt(1.0 - ((1.0 - (_3657 * _3657)) * (1.0 - (_3656 * _3656))));
                        float _3665 = _3664 * _3664;
                        float _3666 = _3665 * _3665;
                        float _3667 = _3647 + _3612;
                        float _3668 = _3648 + _3613;
                        float _3669 = _3649 + _3614;
                        float _3673 = inversesqrt(dot(vec3(_3667, _3668, _3669), vec3(_3667, _3668, _3669)));
                        float _3677 = dot(vec3(_1116, _1119, _1122), vec3(_3647, _3648, _3649));
                        float _5053 = isnan(0.0) ? _3677 : (isnan(_3677) ? 0.0 : max(_3677, 0.0));
                        float _3680 = isnan(1.0) ? _5053 : (isnan(_5053) ? 1.0 : min(_5053, 1.0));
                        float _3681 = dot(vec3(_1116, _1119, _1122), vec3(_3673 * _3667, _3673 * _3668, _3673 * _3669));
                        float _5064 = isnan(0.0) ? _3681 : (isnan(_3681) ? 0.0 : max(_3681, 0.0));
                        float _3684 = isnan(1.0) ? _5064 : (isnan(_5064) ? 1.0 : min(_5064, 1.0));
                        float _3688 = ((_3684 * _3684) * (_3666 + (-1.0))) + 1.0;
                        float _3689 = _3625 * _3665;
                        float _3690 = _3689 * _3689;
                        float _3693 = ((1.0 - _3690) * _3615) + _3690;
                        float _5075 = isnan(0.0) ? _3693 : (isnan(_3693) ? 0.0 : max(_3693, 0.0));
                        float _3694 = isnan(1.0) ? _5075 : (isnan(_5075) ? 1.0 : min(_5075, 1.0));
                        float _3695 = 1.0 - _3665;
                        float _3705 = (0.5 / (((_3694 * ((_3680 * _3695) + _3665)) + 9.9999999392252902907785028219223e-09) + (((_3694 * _3695) + _3665) * _3680))) * _3694;
                        float _5086 = isnan(0.0) ? _3705 : (isnan(_3705) ? 0.0 : max(_3705, 0.0));
                        float _3716 = (((_3666 * 3.1415927410125732421875) * (isnan(1.0) ? _5086 : (isnan(_5086) ? 1.0 : min(_5086, 1.0)))) / ((_3688 * _3688) * ((_3632 * 2.1991131305694580078125) + 3.141590118408203125))) * _3621;
                        _3474 = (_3636 * _3584.x) + _3542;
                        _3475 = (_3636 * _3584.y) + _3543;
                        _3476 = (_3636 * _3584.z) + _3544;
                        _3471 = (_3716 * _3601.x) + _3539;
                        _3472 = (_3716 * _3601.y) + _3540;
                        _3473 = (_3716 * _3601.z) + _3541;
                        if (_3546 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3539 = _3471;
                            _3540 = _3472;
                            _3541 = _3473;
                            _3542 = _3474;
                            _3543 = _3475;
                            _3544 = _3476;
                            _3545 = _3546;
                        }
                    }
                    frontier_phi_66_pred = _3476;
                    frontier_phi_66_pred_1 = _3475;
                    frontier_phi_66_pred_2 = _3474;
                    frontier_phi_66_pred_3 = _3473;
                    frontier_phi_66_pred_4 = _3472;
                    frontier_phi_66_pred_5 = _3471;
                }
                _3281 = frontier_phi_66_pred;
                _3279 = frontier_phi_66_pred_1;
                _3277 = frontier_phi_66_pred_2;
                _3275 = frontier_phi_66_pred_3;
                _3273 = frontier_phi_66_pred_4;
                _3271 = frontier_phi_66_pred_5;
                uint _3422 = _3421 + 1u;
                if (_3422 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3415 = _3271;
                    _3416 = _3273;
                    _3417 = _3275;
                    _3418 = _3277;
                    _3419 = _3279;
                    _3420 = _3281;
                    _3421 = _3422;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3270 = _3271;
            _3272 = _3273;
            _3274 = _3275;
            _3276 = _3277;
            _3278 = _3279;
            _3280 = _3281;
        }
        uvec4 _3284 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3285 = _3284.z;
        uint _3287 = (_3285 >> 8u) & 15u;
        float _3383;
        float _3385;
        float _3387;
        float _3389;
        float _3391;
        float _3393;
        if (((4294967295u << _3287) & _3190) == 0u)
        {
            _3383 = _3270;
            _3385 = _3272;
            _3387 = _3274;
            _3389 = _3276;
            _3391 = _3278;
            _3393 = _3280;
        }
        else
        {
            float _3408 = inversesqrt(dot(vec3(_2249, _2250, _2251), vec3(_2249, _2250, _2251)));
            float _3409 = _3408 * _2249;
            float _3410 = _3408 * _2250;
            float _3411 = _3408 * _2251;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3287 < ((_3285 >> 12u) & 15u))
            {
                float _3384;
                float _3386;
                float _3388;
                float _3390;
                float _3392;
                float _3394;
                float _3522 = _3270;
                float _3523 = _3272;
                float _3524 = _3274;
                float _3525 = _3276;
                float _3526 = _3278;
                float _3527 = _3280;
                uint _3528 = _3287;
                uint _3537;
                bool _3538;
                for (;;)
                {
                    _3537 = texelFetch(g_lightClassification, int((((_3184 << 5u) + (_3170 << 9u)) + (_3528 << 2u)) >> 2u)).x;
                    _3538 = _3537 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3538)
                    {
                        frontier_phi_72_pred = _3527;
                        frontier_phi_72_pred_1 = _3526;
                        frontier_phi_72_pred_2 = _3525;
                        frontier_phi_72_pred_3 = _3524;
                        frontier_phi_72_pred_4 = _3523;
                        frontier_phi_72_pred_5 = _3522;
                    }
                    else
                    {
                        float _3721;
                        float _3722;
                        float _3723;
                        float _3724;
                        float _3725;
                        float _3726;
                        float _4014;
                        float _4015;
                        float _4016;
                        float _4017;
                        float _4018;
                        float _4019;
                        float _3734 = _3522;
                        float _3735 = _3523;
                        float _3736 = _3524;
                        float _3737 = _3525;
                        float _3738 = _3526;
                        float _3739 = _3527;
                        uint _3740 = _3537;
                        uint _3741;
                        vec4 _3766;
                        float _3767;
                        vec4 _3782;
                        vec3 _3794;
                        vec4 _3809;
                        vec4 _3824;
                        float _3870;
                        bool _3871;
                        for (;;)
                        {
                            uint _3751 = ((_3528 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3740));
                            _3741 = (_3740 + 4294967295u) & _3740;
                            uint _3753 = _3751 * 40u;
                            _3766 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3753)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3753 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3753 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3753 + 3u)).x));
                            _3767 = _3766.w;
                            uint _3769 = (_3751 * 40u) + 4u;
                            _3782 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3769)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3769 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3769 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3769 + 3u)).x));
                            uint _3784 = (_3751 * 40u) + 8u;
                            _3794 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3784)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3784 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3784 + 2u)).x));
                            uint _3796 = (_3751 * 40u) + 16u;
                            _3809 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3796)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3796 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3796 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3796 + 3u)).x));
                            uint _3811 = (_3751 * 40u) + 20u;
                            _3824 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3811)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3811 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3811 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3811 + 3u)).x));
                            uint _3826 = (_3751 * 40u) + 24u;
                            vec4 _3839 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3826)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3826 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3826 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3826 + 3u)).x));
                            uint _3845 = (_3751 * 40u) + 28u;
                            vec4 _3858 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3845)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3845 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3845 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3845 + 3u)).x));
                            _3870 = fma(_2251, _3858.z, fma(_2250, _3858.y, _3858.x * _2249)) + _3858.w;
                            _3871 = !((fma(_2251, _3839.z, fma(_2250, _3839.y, _3839.x * _2249)) + _3839.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3871)
                            {
                                float _3898 = _3766.x - _2249;
                                float _3899 = _3766.y - _2250;
                                float _3900 = _3766.z - _2251;
                                float _3901 = dot(vec3(_3898, _3899, _3900), vec3(_3898, _3899, _3900));
                                float _3904 = inversesqrt(_3901);
                                float _3905 = _3904 * _3898;
                                float _3906 = _3904 * _3899;
                                float _3907 = _3904 * _3900;
                                float _3911 = 1.0 - (_3901 / (_3767 * _3767));
                                float _5097 = isnan(0.0) ? _3911 : (isnan(_3911) ? 0.0 : max(_3911, 0.0));
                                float _3912 = isnan(1.0) ? _5097 : (isnan(_5097) ? 1.0 : min(_5097, 1.0));
                                float _3916 = sqrt(_3901) * _3782.w;
                                float _3918 = 1.39999997615814208984375 / (_3916 + 1.39999997615814208984375);
                                float _3919 = _3918 * _3918;
                                float _3922 = ((1.0 - _3919) * dot(vec3(_3905, _3906, _3907), vec3(_1116, _1119, _1122))) + _3919;
                                float _3925 = _3916 * _3916;
                                float _3929 = (fma(_2251, _3809.z, fma(_2250, _3809.y, _3809.x * _2249)) + _3809.w) / _3870;
                                float _3930 = (fma(_2251, _3824.z, fma(_2250, _3824.y, _3824.x * _2249)) + _3824.w) / _3870;
                                float _3934 = 1.0 - dot(vec2(_3929, _3930), vec2(_3929, _3930));
                                float _5113 = isnan(0.0) ? _3934 : (isnan(_3934) ? 0.0 : max(_3934, 0.0));
                                float _3935 = isnan(1.0) ? _5113 : (isnan(_5113) ? 1.0 : min(_5113, 1.0));
                                float _3936 = _3935 * (((isnan(0.0) ? _3922 : (isnan(_3922) ? 0.0 : max(_3922, 0.0))) * _3912) / ((_3925 * 0.699999988079071044921875) + 1.0));
                                float _3948 = exp2(log2(1.0 / ((_3925 * 3.5) + 5.0)) * 0.25);
                                float _3949 = 1.0 - _1191;
                                float _3956 = sqrt(1.0 - ((1.0 - (_3949 * _3949)) * (1.0 - (_3948 * _3948))));
                                float _3957 = _3956 * _3956;
                                float _3958 = _3957 * _3957;
                                float _3959 = _3905 - _3409;
                                float _3960 = _3906 - _3410;
                                float _3961 = _3907 - _3411;
                                float _3965 = inversesqrt(dot(vec3(_3959, _3960, _3961), vec3(_3959, _3960, _3961)));
                                float _3969 = dot(vec3(_1116, _1119, _1122), vec3((-0.0) - _3409, (-0.0) - _3410, (-0.0) - _3411));
                                float _5124 = isnan(0.0) ? _3969 : (isnan(_3969) ? 0.0 : max(_3969, 0.0));
                                float _3972 = isnan(1.0) ? _5124 : (isnan(_5124) ? 1.0 : min(_5124, 1.0));
                                float _3973 = dot(vec3(_1116, _1119, _1122), vec3(_3965 * _3959, _3965 * _3960, _3965 * _3961));
                                float _5135 = isnan(0.0) ? _3973 : (isnan(_3973) ? 0.0 : max(_3973, 0.0));
                                float _3976 = isnan(1.0) ? _5135 : (isnan(_5135) ? 1.0 : min(_5135, 1.0));
                                float _3980 = ((_3976 * _3976) * (_3958 + (-1.0))) + 1.0;
                                float _3981 = _3918 * _3957;
                                float _3982 = _3981 * _3981;
                                float _3988 = ((1.0 - _3982) * dot(vec3(_1116, _1119, _1122), vec3(_3905, _3906, _3907))) + _3982;
                                float _5146 = isnan(0.0) ? _3988 : (isnan(_3988) ? 0.0 : max(_3988, 0.0));
                                float _3989 = isnan(1.0) ? _5146 : (isnan(_5146) ? 1.0 : min(_5146, 1.0));
                                float _3990 = 1.0 - _3957;
                                float _4000 = (0.5 / (((_3989 * ((_3972 * _3990) + _3957)) + 9.9999999392252902907785028219223e-09) + (((_3989 * _3990) + _3957) * _3972))) * _3989;
                                float _5157 = isnan(0.0) ? _4000 : (isnan(_4000) ? 0.0 : max(_4000, 0.0));
                                float _4010 = (_3935 * _3912) * (((_3958 * 3.1415927410125732421875) * (isnan(1.0) ? _5157 : (isnan(_5157) ? 1.0 : min(_5157, 1.0)))) / ((_3980 * _3980) * ((_3925 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3936 * _3782.y;
                                frontier_phi_78_pred_1 = _3936 * _3782.x;
                                frontier_phi_78_pred_2 = _4010 * _3794.z;
                                frontier_phi_78_pred_3 = _4010 * _3794.y;
                                frontier_phi_78_pred_4 = _4010 * _3794.x;
                                frontier_phi_78_pred_5 = _3936 * _3782.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _4018 = frontier_phi_78_pred;
                            _4017 = frontier_phi_78_pred_1;
                            _4016 = frontier_phi_78_pred_2;
                            _4015 = frontier_phi_78_pred_3;
                            _4014 = frontier_phi_78_pred_4;
                            _4019 = frontier_phi_78_pred_5;
                            _3724 = _4017 + _3737;
                            _3725 = _4018 + _3738;
                            _3726 = _4019 + _3739;
                            _3721 = _4014 + _3734;
                            _3722 = _4015 + _3735;
                            _3723 = _4016 + _3736;
                            if (_3741 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3734 = _3721;
                                _3735 = _3722;
                                _3736 = _3723;
                                _3737 = _3724;
                                _3738 = _3725;
                                _3739 = _3726;
                                _3740 = _3741;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3726;
                        frontier_phi_72_pred_1 = _3725;
                        frontier_phi_72_pred_2 = _3724;
                        frontier_phi_72_pred_3 = _3723;
                        frontier_phi_72_pred_4 = _3722;
                        frontier_phi_72_pred_5 = _3721;
                    }
                    _3394 = frontier_phi_72_pred;
                    _3392 = frontier_phi_72_pred_1;
                    _3390 = frontier_phi_72_pred_2;
                    _3388 = frontier_phi_72_pred_3;
                    _3386 = frontier_phi_72_pred_4;
                    _3384 = frontier_phi_72_pred_5;
                    uint _3529 = _3528 + 1u;
                    if (_3529 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3522 = _3384;
                        _3523 = _3386;
                        _3524 = _3388;
                        _3525 = _3390;
                        _3526 = _3392;
                        _3527 = _3394;
                        _3528 = _3529;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3394;
                frontier_phi_60_61_ladder_1 = _3392;
                frontier_phi_60_61_ladder_2 = _3388;
                frontier_phi_60_61_ladder_3 = _3386;
                frontier_phi_60_61_ladder_4 = _3384;
                frontier_phi_60_61_ladder_5 = _3390;
            }
            else
            {
                frontier_phi_60_61_ladder = _3280;
                frontier_phi_60_61_ladder_1 = _3278;
                frontier_phi_60_61_ladder_2 = _3274;
                frontier_phi_60_61_ladder_3 = _3272;
                frontier_phi_60_61_ladder_4 = _3270;
                frontier_phi_60_61_ladder_5 = _3276;
            }
            _3383 = frontier_phi_60_61_ladder_4;
            _3385 = frontier_phi_60_61_ladder_3;
            _3387 = frontier_phi_60_61_ladder_2;
            _3389 = frontier_phi_60_61_ladder_5;
            _3391 = frontier_phi_60_61_ladder_1;
            _3393 = frontier_phi_60_61_ladder;
        }
        float _3398 = isnan(1.0) ? _1175 : (isnan(_1175) ? 1.0 : min(_1175, 1.0));
        _3203 = (_3398 * _3389) + _2715;
        _3205 = (_3398 * _3391) + _2717;
        _3207 = (_3398 * _3393) + _2719;
        _3209 = ((_3383 * _1159) * _3398) + _3053;
        _3211 = ((_3385 * _1161) * _3398) + _3055;
        _3213 = ((_3387 * _1162) * _3398) + _3057;
    }
    else
    {
        _3203 = _2715;
        _3205 = _2717;
        _3207 = _2719;
        _3209 = _3053;
        _3211 = _3055;
        _3213 = _3057;
    }
    float _5173 = isnan(0.0) ? _1149 : (isnan(_1149) ? 0.0 : max(_1149, 0.0));
    float _5184 = isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0));
    float _5195 = isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0));
    uint _3233 = _295 + 6u;
    float _3241 = _1097 / cbSceneParam._m0[86u].x;
    float _3242 = _1098 / cbSceneParam._m0[86u].y;
    vec4 _3256 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3241, _3242, (log2((isnan(cbSceneParam._m0[77u].w) ? _1032 : (isnan(_1032) ? cbSceneParam._m0[77u].w : min(_1032, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3258 = _3256.x;
    float _3259 = _3256.y;
    float _3260 = _3256.z;
    float _3261 = _3256.w;
    float _3333;
    float _3335;
    float _3337;
    float _3339;
    if (_1032 > cbSceneParam._m0[78u].w)
    {
        float _3295 = isnan(_1032) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1032 : min(cbSceneParam._m0[80u].w, _1032));
        float _3296 = _3295 / _1032;
        float _3307 = _3296 * _1082;
        float _3308 = _1083 * _3296;
        float _3309 = (-0.0) - _3308;
        float _3311 = _3296 * _1084;
        float _3313 = (cbSceneParam._m0[77u].w * _3309) / _3295;
        float _3314 = _3313 + cbSceneParam._m0[79u].w;
        float _3315 = cbSceneParam._m0[79u].w - _3308;
        float _3321 = sqrt(((_3307 * _3307) + (_3308 * _3308)) + (_3311 * _3311));
        float _3324 = (1.0 - (cbSceneParam._m0[77u].w / _3295)) * _3321;
        float _3329 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3331 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3484;
        if (abs((_3309 - _3313) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3484 = ((((_3314 > 0.0) ? exp2(_3329 * _3314) : (2.0 - exp2(_3331 * _3314))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3324;
        }
        else
        {
            float _3444 = 1.0 / cbSceneParam._m0[80u].x;
            float _3445 = isnan(_3315) ? _3314 : (isnan(_3314) ? _3315 : max(_3314, _3315));
            float _3446 = isnan(_3315) ? _3314 : (isnan(_3314) ? _3315 : min(_3314, _3315));
            float _3455 = isnan(0.0) ? _3445 : (isnan(_3445) ? 0.0 : min(_3445, 0.0));
            float _3456 = isnan(0.0) ? _3446 : (isnan(_3446) ? 0.0 : min(_3446, 0.0));
            _3484 = ((abs(_3321 / _3309) * cbSceneParam._m0[80u].y) * ((((_3455 - _3456) * 2.0) - ((exp2(_3329 * (isnan(0.0) ? _3445 : (isnan(_3445) ? 0.0 : max(_3445, 0.0)))) - exp2(_3329 * (isnan(0.0) ? _3446 : (isnan(_3446) ? 0.0 : max(_3446, 0.0))))) * _3444)) - ((exp2(_3331 * _3455) - exp2(_3331 * _3456)) * _3444))) + (_3324 * cbSceneParam._m0[80u].z);
        }
        vec4 _3486 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3241, _3242, 1.0), 0.0);
        float _3495 = exp2((_3484 * (-1.44269502162933349609375)) * (1.0 - _3486.w));
        float _3496 = log2(_3495);
        float _3512 = log2(_3261);
        _3333 = (exp2(_3512 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3496 * cbSceneParam._m0[78u].x)) * _3486.x) / cbSceneParam._m0[78u].x)) + _3258;
        _3335 = (exp2(_3512 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3496 * cbSceneParam._m0[78u].y)) * _3486.y) / cbSceneParam._m0[78u].y)) + _3259;
        _3337 = (exp2(_3512 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3496 * cbSceneParam._m0[78u].z)) * _3486.z) / cbSceneParam._m0[78u].z)) + _3260;
        _3339 = _3495 * _3261;
    }
    else
    {
        _3333 = _3258;
        _3335 = _3259;
        _3337 = _3260;
        _3339 = _3261;
    }
    float _3351 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3352 = _3351 == 3.0;
    float _3353 = log2(_3339);
    float _3360 = exp2(_3353 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5173 : (isnan(_5173) ? 1.0 : min(_5173, 1.0))) * (_3203 + ((isnan(0.0) ? _1902 : (isnan(_1902) ? 0.0 : max(_1902, 0.0))) * _1175))) + ((_3209 + ((isnan(0.0) ? _2196 : (isnan(_2196) ? 0.0 : max(_2196, 0.0))) * _1981)) * cbPerFrame._m0[3u].x));
    float _3361 = exp2(_3353 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5184 : (isnan(_5184) ? 1.0 : min(_5184, 1.0))) * (_3205 + ((isnan(0.0) ? _1905 : (isnan(_1905) ? 0.0 : max(_1905, 0.0))) * _1175))) + ((_3211 + ((isnan(0.0) ? _2199 : (isnan(_2199) ? 0.0 : max(_2199, 0.0))) * _1981)) * cbPerFrame._m0[3u].x));
    float _3362 = exp2(_3353 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5195 : (isnan(_5195) ? 1.0 : min(_5195, 1.0))) * (_3207 + ((isnan(0.0) ? _1908 : (isnan(_1908) ? 0.0 : max(_1908, 0.0))) * _1175))) + ((_3213 + ((isnan(0.0) ? _2202 : (isnan(_2202) ? 0.0 : max(_2202, 0.0))) * _1981)) * cbPerFrame._m0[3u].x));
    float _3371 = (_3351 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3371 * (_3352 ? _3360 : (_3360 + (cbSceneParam._m0[72u].w * _3333)));
    SV_Target.y = _3371 * (_3352 ? _3361 : (_3361 + (cbSceneParam._m0[72u].w * _3335)));
    SV_Target.z = _3371 * (_3352 ? _3362 : (_3362 + (cbSceneParam._m0[72u].w * _3337)));
    SV_Target.w = cbInstanceData._m0[_3233].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3233].w;
}


