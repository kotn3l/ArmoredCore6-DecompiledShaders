#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 10) in vec4 TEXCOORD_3;
layout(location = 11) in vec4 TEXCOORD_4;
layout(location = 12) in vec4 TEXCOORD_5;
layout(location = 13) in vec4 TEXCOORD_6;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_7;
layout(location = 6) out vec4 TEXCOORD_5_1;
layout(location = 7) out vec4 TEXCOORD_8;
layout(location = 8) out vec4 TEXCOORD_11;
layout(location = 9) out vec4 TEXCOORD_14;
layout(location = 10) out float TEXCOORD_20;
layout(location = 10, component = 1) out float TEXCOORD_21;
layout(location = 10, component = 2) out float TEXCOORD_22;
layout(location = 11) out vec4 TEXCOORD_25;
layout(location = 12) out vec4 TEXCOORD_26;
layout(location = 13) out vec3 TEXCOORD_27;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_7.z = 0.0;
    TEXCOORD_7.w = 0.0;
    TEXCOORD_5_1.x = 0.0;
    TEXCOORD_5_1.y = 0.0;
    TEXCOORD_5_1.z = 0.0;
    TEXCOORD_5_1.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    TEXCOORD_11.w = 0.0;
    TEXCOORD_14.x = 0.0;
    TEXCOORD_14.y = 0.0;
    TEXCOORD_14.z = 0.0;
    TEXCOORD_14.w = 0.0;
    TEXCOORD_20 = 0.0;
    TEXCOORD_21 = 0.0;
    TEXCOORD_22 = 0.0;
    TEXCOORD_25.x = 0.0;
    TEXCOORD_25.y = 0.0;
    TEXCOORD_25.z = 0.0;
    TEXCOORD_25.w = 0.0;
    TEXCOORD_26.x = 0.0;
    TEXCOORD_26.y = 0.0;
    TEXCOORD_26.z = 0.0;
    TEXCOORD_26.w = 0.0;
    TEXCOORD_27.x = 0.0;
    TEXCOORD_27.y = 0.0;
    TEXCOORD_27.z = 0.0;
    float _276 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _278 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _279 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _288 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _289 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _290 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _300 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _301 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _302 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _312 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _314 = texelFetch(g_InstanceIndexBuffer, int(_312));
    uint _315 = _314.x;
    precise float _316 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _321 = isnan(_316) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _316 : max(0.001000000047497451305389404296875, _316));
    precise float _323 = BLENDWEIGHT.x / _321;
    precise float _324 = BLENDWEIGHT.y / _321;
    precise float _325 = BLENDWEIGHT.z / _321;
    precise float _326 = BLENDWEIGHT.w / _321;
    uvec4 _333 = floatBitsToUint(cbInstanceData._m0[(_315 * 13u) + 4u]);
    uint _334 = _333.x;
    uint _336 = (_334 + uint(float(BLENDINDICES.x))) * 3u;
    uint _343 = _336 + 1u;
    uint _350 = _336 + 2u;
    precise float _357 = _323 * cbObjMatrix._m0[_336].x;
    precise float _358 = _323 * cbObjMatrix._m0[_343].x;
    precise float _359 = _323 * cbObjMatrix._m0[_350].x;
    precise float _360 = _323 * cbObjMatrix._m0[_336].y;
    precise float _361 = _323 * cbObjMatrix._m0[_343].y;
    precise float _362 = _323 * cbObjMatrix._m0[_350].y;
    precise float _363 = _323 * cbObjMatrix._m0[_336].z;
    precise float _364 = _323 * cbObjMatrix._m0[_343].z;
    precise float _365 = _323 * cbObjMatrix._m0[_350].z;
    precise float _366 = _323 * cbObjMatrix._m0[_336].w;
    precise float _367 = _323 * cbObjMatrix._m0[_343].w;
    precise float _368 = _323 * cbObjMatrix._m0[_350].w;
    uint _371 = (_334 + uint(float(BLENDINDICES.y))) * 3u;
    uint _378 = _371 + 1u;
    uint _385 = _371 + 2u;
    precise float _392 = _324 * cbObjMatrix._m0[_371].x;
    precise float _393 = _324 * cbObjMatrix._m0[_378].x;
    precise float _394 = _324 * cbObjMatrix._m0[_385].x;
    precise float _395 = _324 * cbObjMatrix._m0[_371].y;
    precise float _396 = _324 * cbObjMatrix._m0[_378].y;
    precise float _397 = _324 * cbObjMatrix._m0[_385].y;
    precise float _398 = _324 * cbObjMatrix._m0[_371].z;
    precise float _399 = _324 * cbObjMatrix._m0[_378].z;
    precise float _400 = _324 * cbObjMatrix._m0[_385].z;
    precise float _401 = _324 * cbObjMatrix._m0[_371].w;
    precise float _402 = _324 * cbObjMatrix._m0[_378].w;
    precise float _403 = _324 * cbObjMatrix._m0[_385].w;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    precise float _413 = _366 + _401;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    uint _418 = (_334 + uint(float(BLENDINDICES.z))) * 3u;
    uint _425 = _418 + 1u;
    uint _432 = _418 + 2u;
    precise float _439 = _325 * cbObjMatrix._m0[_418].x;
    precise float _440 = _325 * cbObjMatrix._m0[_425].x;
    precise float _441 = _325 * cbObjMatrix._m0[_432].x;
    precise float _442 = _325 * cbObjMatrix._m0[_418].y;
    precise float _443 = _325 * cbObjMatrix._m0[_425].y;
    precise float _444 = _325 * cbObjMatrix._m0[_432].y;
    precise float _445 = _325 * cbObjMatrix._m0[_418].z;
    precise float _446 = _325 * cbObjMatrix._m0[_425].z;
    precise float _447 = _325 * cbObjMatrix._m0[_432].z;
    precise float _448 = _325 * cbObjMatrix._m0[_418].w;
    precise float _449 = _325 * cbObjMatrix._m0[_425].w;
    precise float _450 = _325 * cbObjMatrix._m0[_432].w;
    precise float _451 = _404 + _439;
    precise float _452 = _405 + _440;
    precise float _453 = _406 + _441;
    precise float _454 = _407 + _442;
    precise float _455 = _408 + _443;
    precise float _456 = _409 + _444;
    precise float _457 = _410 + _445;
    precise float _458 = _411 + _446;
    precise float _459 = _412 + _447;
    precise float _460 = _413 + _448;
    precise float _461 = _414 + _449;
    precise float _462 = _415 + _450;
    uint _465 = (_334 + uint(float(BLENDINDICES.w))) * 3u;
    uint _472 = _465 + 1u;
    uint _479 = _465 + 2u;
    precise float _486 = _326 * cbObjMatrix._m0[_465].x;
    precise float _487 = _326 * cbObjMatrix._m0[_472].x;
    precise float _488 = _326 * cbObjMatrix._m0[_479].x;
    precise float _489 = _326 * cbObjMatrix._m0[_465].y;
    precise float _490 = _326 * cbObjMatrix._m0[_472].y;
    precise float _491 = _326 * cbObjMatrix._m0[_479].y;
    precise float _492 = _326 * cbObjMatrix._m0[_465].z;
    precise float _493 = _326 * cbObjMatrix._m0[_472].z;
    precise float _494 = _326 * cbObjMatrix._m0[_479].z;
    precise float _495 = _326 * cbObjMatrix._m0[_465].w;
    precise float _496 = _326 * cbObjMatrix._m0[_472].w;
    precise float _497 = _326 * cbObjMatrix._m0[_479].w;
    precise float _498 = _451 + _486;
    precise float _499 = _452 + _487;
    precise float _500 = _453 + _488;
    precise float _501 = _454 + _489;
    precise float _502 = _455 + _490;
    precise float _503 = _456 + _491;
    precise float _504 = _457 + _492;
    precise float _505 = _458 + _493;
    precise float _506 = _459 + _494;
    precise float _507 = _460 + _495;
    precise float _508 = _461 + _496;
    precise float _509 = _462 + _497;
    precise float _510 = POSITION.x * _498;
    precise float _511 = POSITION.y * _501;
    precise float _512 = _511 + _510;
    precise float _513 = POSITION.z * _504;
    precise float _514 = _513 + _512;
    precise float _515 = 1.0 * _507;
    precise float _516 = _515 + _514;
    precise float _517 = POSITION.x * _499;
    precise float _518 = POSITION.y * _502;
    precise float _519 = _518 + _517;
    precise float _520 = POSITION.z * _505;
    precise float _521 = _520 + _519;
    precise float _522 = 1.0 * _508;
    precise float _523 = _522 + _521;
    precise float _524 = POSITION.x * _500;
    precise float _525 = POSITION.y * _503;
    precise float _526 = _525 + _524;
    precise float _527 = POSITION.z * _506;
    precise float _528 = _527 + _526;
    precise float _529 = 1.0 * _509;
    precise float _530 = _529 + _528;
    float _705 = (((((cbPrevObjMatrix._m0[_371].w * _324) + (cbPrevObjMatrix._m0[_336].w * _323)) + (cbPrevObjMatrix._m0[_418].w * _325)) + (cbPrevObjMatrix._m0[_465].w * _326)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_371].z * _324) + (cbPrevObjMatrix._m0[_336].z * _323)) + (cbPrevObjMatrix._m0[_418].z * _325)) + (cbPrevObjMatrix._m0[_465].z * _326), fma(POSITION.y, (((cbPrevObjMatrix._m0[_371].y * _324) + (cbPrevObjMatrix._m0[_336].y * _323)) + (cbPrevObjMatrix._m0[_418].y * _325)) + (cbPrevObjMatrix._m0[_465].y * _326), ((((cbPrevObjMatrix._m0[_371].x * _324) + (cbPrevObjMatrix._m0[_336].x * _323)) + (cbPrevObjMatrix._m0[_418].x * _325)) + (cbPrevObjMatrix._m0[_465].x * _326)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _706 = (((((cbPrevObjMatrix._m0[_378].w * _324) + (cbPrevObjMatrix._m0[_343].w * _323)) + (cbPrevObjMatrix._m0[_425].w * _325)) + (cbPrevObjMatrix._m0[_472].w * _326)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_378].z * _324) + (cbPrevObjMatrix._m0[_343].z * _323)) + (cbPrevObjMatrix._m0[_425].z * _325)) + (cbPrevObjMatrix._m0[_472].z * _326), fma(POSITION.y, (((cbPrevObjMatrix._m0[_378].y * _324) + (cbPrevObjMatrix._m0[_343].y * _323)) + (cbPrevObjMatrix._m0[_425].y * _325)) + (cbPrevObjMatrix._m0[_472].y * _326), ((((cbPrevObjMatrix._m0[_378].x * _324) + (cbPrevObjMatrix._m0[_343].x * _323)) + (cbPrevObjMatrix._m0[_425].x * _325)) + (cbPrevObjMatrix._m0[_472].x * _326)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _707 = (((((cbPrevObjMatrix._m0[_385].w * _324) + (cbPrevObjMatrix._m0[_350].w * _323)) + (cbPrevObjMatrix._m0[_432].w * _325)) + (cbPrevObjMatrix._m0[_479].w * _326)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_385].z * _324) + (cbPrevObjMatrix._m0[_350].z * _323)) + (cbPrevObjMatrix._m0[_432].z * _325)) + (cbPrevObjMatrix._m0[_479].z * _326), fma(POSITION.y, (((cbPrevObjMatrix._m0[_385].y * _324) + (cbPrevObjMatrix._m0[_350].y * _323)) + (cbPrevObjMatrix._m0[_432].y * _325)) + (cbPrevObjMatrix._m0[_479].y * _326), ((((cbPrevObjMatrix._m0[_385].x * _324) + (cbPrevObjMatrix._m0[_350].x * _323)) + (cbPrevObjMatrix._m0[_432].x * _325)) + (cbPrevObjMatrix._m0[_479].x * _326)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _754 = fma(_279, _504, fma(_278, _501, _498 * _276));
    float _757 = fma(_279, _505, fma(_278, _502, _499 * _276));
    float _760 = fma(_279, _506, fma(_278, _503, _500 * _276));
    precise float _785 = _516 - cbSceneParam._m0[3u].x;
    precise float _786 = _523 - cbSceneParam._m0[3u].y;
    precise float _787 = _530 - cbSceneParam._m0[3u].z;
    precise float _815 = _785 * cbSceneParam._m0[24u].x;
    precise float _816 = _786 * cbSceneParam._m0[24u].y;
    precise float _817 = _816 + _815;
    precise float _818 = _787 * cbSceneParam._m0[24u].z;
    precise float _819 = _818 + _817;
    precise float _820 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _821 = _820 + _819;
    precise float _822 = _785 * cbSceneParam._m0[25u].x;
    precise float _823 = _786 * cbSceneParam._m0[25u].y;
    precise float _824 = _823 + _822;
    precise float _825 = _787 * cbSceneParam._m0[25u].z;
    precise float _826 = _825 + _824;
    precise float _827 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _828 = _827 + _826;
    precise float _829 = _785 * cbSceneParam._m0[26u].x;
    precise float _830 = _786 * cbSceneParam._m0[26u].y;
    precise float _831 = _830 + _829;
    precise float _832 = _787 * cbSceneParam._m0[26u].z;
    precise float _833 = _832 + _831;
    precise float _834 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _835 = _834 + _833;
    precise float _836 = _785 * cbSceneParam._m0[27u].x;
    precise float _837 = _786 * cbSceneParam._m0[27u].y;
    precise float _838 = _837 + _836;
    precise float _839 = _787 * cbSceneParam._m0[27u].z;
    precise float _840 = _839 + _838;
    precise float _841 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _842 = _841 + _840;
    gl_Position.x = _821;
    gl_Position.y = _828;
    gl_Position.z = _835;
    gl_Position.w = _842;
    POSITION_1.x = _821;
    POSITION_1.y = _828;
    POSITION_1.z = _835;
    POSITION_1.w = _842;
    NORMAL_1.x = _754;
    NORMAL_1.y = _757;
    NORMAL_1.z = _760;
    NORMAL_1.w = float(_315);
    TANGENT_1.x = fma(_290, _504, fma(_289, _501, _498 * _288));
    TANGENT_1.y = fma(_290, _505, fma(_289, _502, _499 * _288));
    TANGENT_1.z = fma(_290, _506, fma(_289, _503, _500 * _288));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_302, _504, fma(_301, _501, _498 * _300));
    TANGENT_2_1.y = fma(_302, _505, fma(_301, _502, _499 * _300));
    TANGENT_2_1.z = fma(_302, _506, fma(_301, _503, _500 * _300));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_7.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_7.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_7.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_7.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5_1.x = TEXCOORD_1.x;
    TEXCOORD_5_1.y = TEXCOORD_1.y;
    TEXCOORD_5_1.z = TEXCOORD_1.z;
    TEXCOORD_5_1.w = COLOR_1.x;
    TEXCOORD_8.x = TEXCOORD_2.x;
    TEXCOORD_8.y = TEXCOORD_2.y;
    TEXCOORD_8.z = TEXCOORD_2.z;
    TEXCOORD_8.w = TEXCOORD_5.x;
    TEXCOORD_11.x = TEXCOORD_3.x;
    TEXCOORD_11.y = TEXCOORD_3.y;
    TEXCOORD_11.z = TEXCOORD_3.z;
    TEXCOORD_11.w = TEXCOORD_5.y;
    TEXCOORD_14.x = TEXCOORD_4.x;
    TEXCOORD_14.y = TEXCOORD_4.y;
    TEXCOORD_14.z = TEXCOORD_4.z;
    TEXCOORD_14.w = TEXCOORD_5.z;
    TEXCOORD_20 = TEXCOORD_6.x;
    TEXCOORD_21 = TEXCOORD_6.y;
    TEXCOORD_22 = TEXCOORD_6.z;
    TEXCOORD_25.x = _821;
    TEXCOORD_25.y = _828;
    TEXCOORD_25.z = _835;
    TEXCOORD_25.w = _842;
    TEXCOORD_26.x = fma(_707, cbSceneParam._m0[29u].z, fma(_706, cbSceneParam._m0[29u].y, _705 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_26.y = fma(_707, cbSceneParam._m0[30u].z, fma(_706, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _705)) + cbSceneParam._m0[30u].w;
    TEXCOORD_26.z = fma(_707, cbSceneParam._m0[31u].z, fma(_706, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _705)) + cbSceneParam._m0[31u].w;
    TEXCOORD_26.w = fma(_707, cbSceneParam._m0[32u].z, fma(_706, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _705)) + cbSceneParam._m0[32u].w;
    TEXCOORD_27.x = _754;
    TEXCOORD_27.y = _757;
    TEXCOORD_27.z = _760;
}


