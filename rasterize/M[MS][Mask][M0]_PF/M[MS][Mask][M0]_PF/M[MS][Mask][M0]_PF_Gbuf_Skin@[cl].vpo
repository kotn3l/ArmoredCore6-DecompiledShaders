#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 10) in vec4 TEXCOORD_3;
layout(location = 11) in vec4 TEXCOORD_4;
layout(location = 12) in vec4 TEXCOORD_5;
layout(location = 13) in vec4 TEXCOORD_6;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_7;
layout(location = 6) out vec4 TEXCOORD_5_1;
layout(location = 7) out vec4 TEXCOORD_8;
layout(location = 8) out vec4 TEXCOORD_11;
layout(location = 9) out vec4 TEXCOORD_14;
layout(location = 10) out float TEXCOORD_20;
layout(location = 10, component = 1) out float TEXCOORD_21;
layout(location = 10, component = 2) out float TEXCOORD_22;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_7.z = 0.0;
    TEXCOORD_7.w = 0.0;
    TEXCOORD_5_1.x = 0.0;
    TEXCOORD_5_1.y = 0.0;
    TEXCOORD_5_1.z = 0.0;
    TEXCOORD_5_1.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    TEXCOORD_11.w = 0.0;
    TEXCOORD_14.x = 0.0;
    TEXCOORD_14.y = 0.0;
    TEXCOORD_14.z = 0.0;
    TEXCOORD_14.w = 0.0;
    TEXCOORD_20 = 0.0;
    TEXCOORD_21 = 0.0;
    TEXCOORD_22 = 0.0;
    float _257 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _259 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _260 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _269 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _270 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _271 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _281 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _282 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _283 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _293 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _295 = texelFetch(g_InstanceIndexBuffer, int(_293));
    uint _296 = _295.x;
    precise float _297 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _302 = isnan(_297) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _297 : max(0.001000000047497451305389404296875, _297));
    precise float _304 = BLENDWEIGHT.x / _302;
    precise float _305 = BLENDWEIGHT.y / _302;
    precise float _306 = BLENDWEIGHT.z / _302;
    precise float _307 = BLENDWEIGHT.w / _302;
    uvec4 _314 = floatBitsToUint(cbInstanceData._m0[(_296 * 13u) + 4u]);
    uint _315 = _314.x;
    uint _317 = (_315 + uint(float(BLENDINDICES.x))) * 3u;
    uint _324 = _317 + 1u;
    uint _331 = _317 + 2u;
    precise float _338 = _304 * cbObjMatrix._m0[_317].x;
    precise float _339 = _304 * cbObjMatrix._m0[_324].x;
    precise float _340 = _304 * cbObjMatrix._m0[_331].x;
    precise float _341 = _304 * cbObjMatrix._m0[_317].y;
    precise float _342 = _304 * cbObjMatrix._m0[_324].y;
    precise float _343 = _304 * cbObjMatrix._m0[_331].y;
    precise float _344 = _304 * cbObjMatrix._m0[_317].z;
    precise float _345 = _304 * cbObjMatrix._m0[_324].z;
    precise float _346 = _304 * cbObjMatrix._m0[_331].z;
    precise float _347 = _304 * cbObjMatrix._m0[_317].w;
    precise float _348 = _304 * cbObjMatrix._m0[_324].w;
    precise float _349 = _304 * cbObjMatrix._m0[_331].w;
    uint _352 = (_315 + uint(float(BLENDINDICES.y))) * 3u;
    uint _359 = _352 + 1u;
    uint _366 = _352 + 2u;
    precise float _373 = _305 * cbObjMatrix._m0[_352].x;
    precise float _374 = _305 * cbObjMatrix._m0[_359].x;
    precise float _375 = _305 * cbObjMatrix._m0[_366].x;
    precise float _376 = _305 * cbObjMatrix._m0[_352].y;
    precise float _377 = _305 * cbObjMatrix._m0[_359].y;
    precise float _378 = _305 * cbObjMatrix._m0[_366].y;
    precise float _379 = _305 * cbObjMatrix._m0[_352].z;
    precise float _380 = _305 * cbObjMatrix._m0[_359].z;
    precise float _381 = _305 * cbObjMatrix._m0[_366].z;
    precise float _382 = _305 * cbObjMatrix._m0[_352].w;
    precise float _383 = _305 * cbObjMatrix._m0[_359].w;
    precise float _384 = _305 * cbObjMatrix._m0[_366].w;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    uint _399 = (_315 + uint(float(BLENDINDICES.z))) * 3u;
    uint _406 = _399 + 1u;
    uint _413 = _399 + 2u;
    precise float _420 = _306 * cbObjMatrix._m0[_399].x;
    precise float _421 = _306 * cbObjMatrix._m0[_406].x;
    precise float _422 = _306 * cbObjMatrix._m0[_413].x;
    precise float _423 = _306 * cbObjMatrix._m0[_399].y;
    precise float _424 = _306 * cbObjMatrix._m0[_406].y;
    precise float _425 = _306 * cbObjMatrix._m0[_413].y;
    precise float _426 = _306 * cbObjMatrix._m0[_399].z;
    precise float _427 = _306 * cbObjMatrix._m0[_406].z;
    precise float _428 = _306 * cbObjMatrix._m0[_413].z;
    precise float _429 = _306 * cbObjMatrix._m0[_399].w;
    precise float _430 = _306 * cbObjMatrix._m0[_406].w;
    precise float _431 = _306 * cbObjMatrix._m0[_413].w;
    precise float _432 = _385 + _420;
    precise float _433 = _386 + _421;
    precise float _434 = _387 + _422;
    precise float _435 = _388 + _423;
    precise float _436 = _389 + _424;
    precise float _437 = _390 + _425;
    precise float _438 = _391 + _426;
    precise float _439 = _392 + _427;
    precise float _440 = _393 + _428;
    precise float _441 = _394 + _429;
    precise float _442 = _395 + _430;
    precise float _443 = _396 + _431;
    uint _446 = (_315 + uint(float(BLENDINDICES.w))) * 3u;
    uint _453 = _446 + 1u;
    uint _460 = _446 + 2u;
    precise float _467 = _307 * cbObjMatrix._m0[_446].x;
    precise float _468 = _307 * cbObjMatrix._m0[_453].x;
    precise float _469 = _307 * cbObjMatrix._m0[_460].x;
    precise float _470 = _307 * cbObjMatrix._m0[_446].y;
    precise float _471 = _307 * cbObjMatrix._m0[_453].y;
    precise float _472 = _307 * cbObjMatrix._m0[_460].y;
    precise float _473 = _307 * cbObjMatrix._m0[_446].z;
    precise float _474 = _307 * cbObjMatrix._m0[_453].z;
    precise float _475 = _307 * cbObjMatrix._m0[_460].z;
    precise float _476 = _307 * cbObjMatrix._m0[_446].w;
    precise float _477 = _307 * cbObjMatrix._m0[_453].w;
    precise float _478 = _307 * cbObjMatrix._m0[_460].w;
    precise float _479 = _432 + _467;
    precise float _480 = _433 + _468;
    precise float _481 = _434 + _469;
    precise float _482 = _435 + _470;
    precise float _483 = _436 + _471;
    precise float _484 = _437 + _472;
    precise float _485 = _438 + _473;
    precise float _486 = _439 + _474;
    precise float _487 = _440 + _475;
    precise float _488 = _441 + _476;
    precise float _489 = _442 + _477;
    precise float _490 = _443 + _478;
    precise float _491 = POSITION.x * _479;
    precise float _492 = POSITION.y * _482;
    precise float _493 = _492 + _491;
    precise float _494 = POSITION.z * _485;
    precise float _495 = _494 + _493;
    precise float _496 = 1.0 * _488;
    precise float _497 = _496 + _495;
    precise float _498 = POSITION.x * _480;
    precise float _499 = POSITION.y * _483;
    precise float _500 = _499 + _498;
    precise float _501 = POSITION.z * _486;
    precise float _502 = _501 + _500;
    precise float _503 = 1.0 * _489;
    precise float _504 = _503 + _502;
    precise float _505 = POSITION.x * _481;
    precise float _506 = POSITION.y * _484;
    precise float _507 = _506 + _505;
    precise float _508 = POSITION.z * _487;
    precise float _509 = _508 + _507;
    precise float _510 = 1.0 * _490;
    precise float _511 = _510 + _509;
    precise float _545 = _497 - cbSceneParam._m0[3u].x;
    precise float _546 = _504 - cbSceneParam._m0[3u].y;
    precise float _547 = _511 - cbSceneParam._m0[3u].z;
    precise float _575 = _545 * cbSceneParam._m0[24u].x;
    precise float _576 = _546 * cbSceneParam._m0[24u].y;
    precise float _577 = _576 + _575;
    precise float _578 = _547 * cbSceneParam._m0[24u].z;
    precise float _579 = _578 + _577;
    precise float _580 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _581 = _580 + _579;
    precise float _582 = _545 * cbSceneParam._m0[25u].x;
    precise float _583 = _546 * cbSceneParam._m0[25u].y;
    precise float _584 = _583 + _582;
    precise float _585 = _547 * cbSceneParam._m0[25u].z;
    precise float _586 = _585 + _584;
    precise float _587 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _588 = _587 + _586;
    precise float _589 = _545 * cbSceneParam._m0[26u].x;
    precise float _590 = _546 * cbSceneParam._m0[26u].y;
    precise float _591 = _590 + _589;
    precise float _592 = _547 * cbSceneParam._m0[26u].z;
    precise float _593 = _592 + _591;
    precise float _594 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _595 = _594 + _593;
    precise float _596 = _545 * cbSceneParam._m0[27u].x;
    precise float _597 = _546 * cbSceneParam._m0[27u].y;
    precise float _598 = _597 + _596;
    precise float _599 = _547 * cbSceneParam._m0[27u].z;
    precise float _600 = _599 + _598;
    precise float _601 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _602 = _601 + _600;
    gl_Position.x = _581;
    gl_Position.y = _588;
    gl_Position.z = _595;
    gl_Position.w = _602;
    POSITION_1.x = _581;
    POSITION_1.y = _588;
    POSITION_1.z = _595;
    POSITION_1.w = _602;
    NORMAL_1.x = fma(_260, _485, fma(_259, _482, _479 * _257));
    NORMAL_1.y = fma(_260, _486, fma(_259, _483, _480 * _257));
    NORMAL_1.z = fma(_260, _487, fma(_259, _484, _481 * _257));
    NORMAL_1.w = float(_296);
    TANGENT_1.x = fma(_271, _485, fma(_270, _482, _479 * _269));
    TANGENT_1.y = fma(_271, _486, fma(_270, _483, _480 * _269));
    TANGENT_1.z = fma(_271, _487, fma(_270, _484, _481 * _269));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_283, _485, fma(_282, _482, _479 * _281));
    TANGENT_2_1.y = fma(_283, _486, fma(_282, _483, _480 * _281));
    TANGENT_2_1.z = fma(_283, _487, fma(_282, _484, _481 * _281));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_7.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_7.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_7.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_7.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5_1.x = TEXCOORD_1.x;
    TEXCOORD_5_1.y = TEXCOORD_1.y;
    TEXCOORD_5_1.z = TEXCOORD_1.z;
    TEXCOORD_5_1.w = COLOR_1.x;
    TEXCOORD_8.x = TEXCOORD_2.x;
    TEXCOORD_8.y = TEXCOORD_2.y;
    TEXCOORD_8.z = TEXCOORD_2.z;
    TEXCOORD_8.w = TEXCOORD_5.x;
    TEXCOORD_11.x = TEXCOORD_3.x;
    TEXCOORD_11.y = TEXCOORD_3.y;
    TEXCOORD_11.z = TEXCOORD_3.z;
    TEXCOORD_11.w = TEXCOORD_5.y;
    TEXCOORD_14.x = TEXCOORD_4.x;
    TEXCOORD_14.y = TEXCOORD_4.y;
    TEXCOORD_14.z = TEXCOORD_4.z;
    TEXCOORD_14.w = TEXCOORD_5.z;
    TEXCOORD_20 = TEXCOORD_6.x;
    TEXCOORD_21 = TEXCOORD_6.y;
    TEXCOORD_22 = TEXCOORD_6.z;
}


