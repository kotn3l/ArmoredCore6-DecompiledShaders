#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 10) in vec4 TEXCOORD_3;
layout(location = 11) in vec4 TEXCOORD_4;
layout(location = 12) in vec4 TEXCOORD_5;
layout(location = 13) in vec4 TEXCOORD_6;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_7;
layout(location = 6) out vec4 TEXCOORD_5_1;
layout(location = 7) out vec4 TEXCOORD_8;
layout(location = 8) out vec4 TEXCOORD_11;
layout(location = 9) out vec4 TEXCOORD_14;
layout(location = 10) out float TEXCOORD_20;
layout(location = 10, component = 1) out float TEXCOORD_21;
layout(location = 10, component = 2) out float TEXCOORD_22;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_7.z = 0.0;
    TEXCOORD_7.w = 0.0;
    TEXCOORD_5_1.x = 0.0;
    TEXCOORD_5_1.y = 0.0;
    TEXCOORD_5_1.z = 0.0;
    TEXCOORD_5_1.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    TEXCOORD_11.w = 0.0;
    TEXCOORD_14.x = 0.0;
    TEXCOORD_14.y = 0.0;
    TEXCOORD_14.z = 0.0;
    TEXCOORD_14.w = 0.0;
    TEXCOORD_20 = 0.0;
    TEXCOORD_21 = 0.0;
    TEXCOORD_22 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _262 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _264 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _265 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _274 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _275 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _276 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _286 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _287 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _288 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _298 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _300 = texelFetch(g_InstanceIndexBuffer, int(_298));
    uint _301 = _300.x;
    precise float _302 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _307 = isnan(_302) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _302 : max(0.001000000047497451305389404296875, _302));
    precise float _309 = BLENDWEIGHT.x / _307;
    precise float _310 = BLENDWEIGHT.y / _307;
    precise float _311 = BLENDWEIGHT.z / _307;
    precise float _312 = BLENDWEIGHT.w / _307;
    uint _314 = _301 * 13u;
    uvec4 _319 = floatBitsToUint(cbInstanceData._m0[_314 + 4u]);
    uint _320 = _319.x;
    uint _322 = (_320 + uint(float(BLENDINDICES.x))) * 3u;
    uint _329 = _322 + 1u;
    uint _336 = _322 + 2u;
    precise float _343 = _309 * cbObjMatrix._m0[_322].x;
    precise float _344 = _309 * cbObjMatrix._m0[_329].x;
    precise float _345 = _309 * cbObjMatrix._m0[_336].x;
    precise float _346 = _309 * cbObjMatrix._m0[_322].y;
    precise float _347 = _309 * cbObjMatrix._m0[_329].y;
    precise float _348 = _309 * cbObjMatrix._m0[_336].y;
    precise float _349 = _309 * cbObjMatrix._m0[_322].z;
    precise float _350 = _309 * cbObjMatrix._m0[_329].z;
    precise float _351 = _309 * cbObjMatrix._m0[_336].z;
    precise float _352 = _309 * cbObjMatrix._m0[_322].w;
    precise float _353 = _309 * cbObjMatrix._m0[_329].w;
    precise float _354 = _309 * cbObjMatrix._m0[_336].w;
    uint _357 = (_320 + uint(float(BLENDINDICES.y))) * 3u;
    uint _364 = _357 + 1u;
    uint _371 = _357 + 2u;
    precise float _378 = _310 * cbObjMatrix._m0[_357].x;
    precise float _379 = _310 * cbObjMatrix._m0[_364].x;
    precise float _380 = _310 * cbObjMatrix._m0[_371].x;
    precise float _381 = _310 * cbObjMatrix._m0[_357].y;
    precise float _382 = _310 * cbObjMatrix._m0[_364].y;
    precise float _383 = _310 * cbObjMatrix._m0[_371].y;
    precise float _384 = _310 * cbObjMatrix._m0[_357].z;
    precise float _385 = _310 * cbObjMatrix._m0[_364].z;
    precise float _386 = _310 * cbObjMatrix._m0[_371].z;
    precise float _387 = _310 * cbObjMatrix._m0[_357].w;
    precise float _388 = _310 * cbObjMatrix._m0[_364].w;
    precise float _389 = _310 * cbObjMatrix._m0[_371].w;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    uint _404 = (_320 + uint(float(BLENDINDICES.z))) * 3u;
    uint _411 = _404 + 1u;
    uint _418 = _404 + 2u;
    precise float _425 = _311 * cbObjMatrix._m0[_404].x;
    precise float _426 = _311 * cbObjMatrix._m0[_411].x;
    precise float _427 = _311 * cbObjMatrix._m0[_418].x;
    precise float _428 = _311 * cbObjMatrix._m0[_404].y;
    precise float _429 = _311 * cbObjMatrix._m0[_411].y;
    precise float _430 = _311 * cbObjMatrix._m0[_418].y;
    precise float _431 = _311 * cbObjMatrix._m0[_404].z;
    precise float _432 = _311 * cbObjMatrix._m0[_411].z;
    precise float _433 = _311 * cbObjMatrix._m0[_418].z;
    precise float _434 = _311 * cbObjMatrix._m0[_404].w;
    precise float _435 = _311 * cbObjMatrix._m0[_411].w;
    precise float _436 = _311 * cbObjMatrix._m0[_418].w;
    precise float _437 = _390 + _425;
    precise float _438 = _391 + _426;
    precise float _439 = _392 + _427;
    precise float _440 = _393 + _428;
    precise float _441 = _394 + _429;
    precise float _442 = _395 + _430;
    precise float _443 = _396 + _431;
    precise float _444 = _397 + _432;
    precise float _445 = _398 + _433;
    precise float _446 = _399 + _434;
    precise float _447 = _400 + _435;
    precise float _448 = _401 + _436;
    uint _451 = (_320 + uint(float(BLENDINDICES.w))) * 3u;
    uint _458 = _451 + 1u;
    uint _465 = _451 + 2u;
    precise float _472 = _312 * cbObjMatrix._m0[_451].x;
    precise float _473 = _312 * cbObjMatrix._m0[_458].x;
    precise float _474 = _312 * cbObjMatrix._m0[_465].x;
    precise float _475 = _312 * cbObjMatrix._m0[_451].y;
    precise float _476 = _312 * cbObjMatrix._m0[_458].y;
    precise float _477 = _312 * cbObjMatrix._m0[_465].y;
    precise float _478 = _312 * cbObjMatrix._m0[_451].z;
    precise float _479 = _312 * cbObjMatrix._m0[_458].z;
    precise float _480 = _312 * cbObjMatrix._m0[_465].z;
    precise float _481 = _312 * cbObjMatrix._m0[_451].w;
    precise float _482 = _312 * cbObjMatrix._m0[_458].w;
    precise float _483 = _312 * cbObjMatrix._m0[_465].w;
    precise float _484 = _437 + _472;
    precise float _485 = _438 + _473;
    precise float _486 = _439 + _474;
    precise float _487 = _440 + _475;
    precise float _488 = _441 + _476;
    precise float _489 = _442 + _477;
    precise float _490 = _443 + _478;
    precise float _491 = _444 + _479;
    precise float _492 = _445 + _480;
    precise float _493 = _446 + _481;
    precise float _494 = _447 + _482;
    precise float _495 = _448 + _483;
    precise float _496 = POSITION.x * _484;
    precise float _497 = POSITION.y * _487;
    precise float _498 = _497 + _496;
    precise float _499 = POSITION.z * _490;
    precise float _500 = _499 + _498;
    precise float _501 = 1.0 * _493;
    precise float _502 = _501 + _500;
    precise float _503 = POSITION.x * _485;
    precise float _504 = POSITION.y * _488;
    precise float _505 = _504 + _503;
    precise float _506 = POSITION.z * _491;
    precise float _507 = _506 + _505;
    precise float _508 = 1.0 * _494;
    precise float _509 = _508 + _507;
    precise float _510 = POSITION.x * _486;
    precise float _511 = POSITION.y * _489;
    precise float _512 = _511 + _510;
    precise float _513 = POSITION.z * _492;
    precise float _514 = _513 + _512;
    precise float _515 = 1.0 * _495;
    precise float _516 = _515 + _514;
    precise float _550 = _502 - cbSceneParam._m0[3u].x;
    precise float _551 = _509 - cbSceneParam._m0[3u].y;
    precise float _552 = _516 - cbSceneParam._m0[3u].z;
    precise float _580 = _550 * cbSceneParam._m0[24u].x;
    precise float _581 = _551 * cbSceneParam._m0[24u].y;
    precise float _582 = _581 + _580;
    precise float _583 = _552 * cbSceneParam._m0[24u].z;
    precise float _584 = _583 + _582;
    precise float _585 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _586 = _585 + _584;
    precise float _587 = _550 * cbSceneParam._m0[25u].x;
    precise float _588 = _551 * cbSceneParam._m0[25u].y;
    precise float _589 = _588 + _587;
    precise float _590 = _552 * cbSceneParam._m0[25u].z;
    precise float _591 = _590 + _589;
    precise float _592 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _593 = _592 + _591;
    precise float _594 = _550 * cbSceneParam._m0[26u].x;
    precise float _595 = _551 * cbSceneParam._m0[26u].y;
    precise float _596 = _595 + _594;
    precise float _597 = _552 * cbSceneParam._m0[26u].z;
    precise float _598 = _597 + _596;
    precise float _599 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _600 = _599 + _598;
    precise float _601 = _550 * cbSceneParam._m0[27u].x;
    precise float _602 = _551 * cbSceneParam._m0[27u].y;
    precise float _603 = _602 + _601;
    precise float _604 = _552 * cbSceneParam._m0[27u].z;
    precise float _605 = _604 + _603;
    precise float _606 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _607 = _606 + _605;
    gl_Position.x = _586;
    gl_Position.y = _593;
    gl_Position.z = _600;
    gl_Position.w = _607;
    POSITION_1.x = _586;
    POSITION_1.y = _593;
    POSITION_1.z = _600;
    POSITION_1.w = _607;
    NORMAL_1.x = fma(_265, _490, fma(_264, _487, _484 * _262));
    NORMAL_1.y = fma(_265, _491, fma(_264, _488, _485 * _262));
    NORMAL_1.z = fma(_265, _492, fma(_264, _489, _486 * _262));
    NORMAL_1.w = float(_301);
    TANGENT_1.x = fma(_276, _490, fma(_275, _487, _484 * _274));
    TANGENT_1.y = fma(_276, _491, fma(_275, _488, _485 * _274));
    TANGENT_1.z = fma(_276, _492, fma(_275, _489, _486 * _274));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_288, _490, fma(_287, _487, _484 * _286));
    TANGENT_2_1.y = fma(_288, _491, fma(_287, _488, _485 * _286));
    TANGENT_2_1.z = fma(_288, _492, fma(_287, _489, _486 * _286));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_7.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_7.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_7.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_7.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5_1.x = TEXCOORD_1.x;
    TEXCOORD_5_1.y = TEXCOORD_1.y;
    TEXCOORD_5_1.z = TEXCOORD_1.z;
    TEXCOORD_5_1.w = COLOR_1.x;
    TEXCOORD_8.x = TEXCOORD_2.x;
    TEXCOORD_8.y = TEXCOORD_2.y;
    TEXCOORD_8.z = TEXCOORD_2.z;
    TEXCOORD_8.w = TEXCOORD_5.x;
    TEXCOORD_11.x = TEXCOORD_3.x;
    TEXCOORD_11.y = TEXCOORD_3.y;
    TEXCOORD_11.z = TEXCOORD_3.z;
    TEXCOORD_11.w = TEXCOORD_5.y;
    TEXCOORD_14.x = TEXCOORD_4.x;
    TEXCOORD_14.y = TEXCOORD_4.y;
    TEXCOORD_14.z = TEXCOORD_4.z;
    TEXCOORD_14.w = TEXCOORD_5.z;
    TEXCOORD_20 = TEXCOORD_6.x;
    TEXCOORD_21 = TEXCOORD_6.y;
    TEXCOORD_22 = TEXCOORD_6.z;
    gl_ClipDistance[0u] = dot(vec4(_586, _593, _600, _607), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_586, _593, _600, _607), vec4(cbInstanceData._m0[_314 + 3u]));
}


