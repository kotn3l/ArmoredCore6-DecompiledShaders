#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D S_Ground_blend_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D S_Ground_blend_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _113 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _114 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _115 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _121 = inversesqrt(dot(vec3(_113, _114, _115), vec3(_113, _114, _115)));
    float _128 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _135 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _158 = texture(sampler2D(S_Ground_blend_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _164 = _158.x * cbMtdParam._m0[9u].x;
    float _165 = _158.y * cbMtdParam._m0[9u].y;
    float _166 = _158.z * cbMtdParam._m0[9u].z;
    vec4 _178 = texture(sampler2D(S_Ground_blend_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[1u].w));
    float _182 = _178.z;
    float _186 = (_178.x * 2.0) + (-1.0);
    float _188 = (_178.y * 2.0) + (-1.0);
    float _189 = dot(vec2(_186, _188), vec2(_186, _188));
    float _297 = isnan(0.0) ? _189 : (isnan(_189) ? 0.0 : max(_189, 0.0));
    float _195 = sqrt(1.0 - (isnan(1.0) ? _297 : (isnan(_297) ? 1.0 : min(_297, 1.0))));
    float _198 = fma(_195, _128 * NORMAL.x, fma(_188, _135 * TANGENT.x, (_121 * _113) * _186));
    float _201 = fma(_195, _128 * NORMAL.y, fma(_188, _135 * TANGENT.y, (_121 * _114) * _186));
    float _204 = fma(_195, _128 * NORMAL.z, fma(_188, _135 * TANGENT.z, (_121 * _115) * _186));
    float _208 = inversesqrt(dot(vec3(_198, _201, _204), vec3(_198, _201, _204)));
    float _308 = isnan(0.0) ? _182 : (isnan(_182) ? 0.0 : max(_182, 0.0));
    float _319 = isnan(0.0) ? _164 : (isnan(_164) ? 0.0 : max(_164, 0.0));
    float _330 = isnan(0.0) ? _165 : (isnan(_165) ? 0.0 : max(_165, 0.0));
    float _341 = isnan(0.0) ? _166 : (isnan(_166) ? 0.0 : max(_166, 0.0));
    uint _227 = uint(roundEven(NORMAL.w)) * 13u;
    uint _230 = (_227 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _236 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _319 : (isnan(_319) ? 1.0 : min(_319, 1.0)))) * cbInstanceData._m0[_230].x;
    float _237 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _330 : (isnan(_330) ? 1.0 : min(_330, 1.0)))) * cbInstanceData._m0[_230].y;
    float _238 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _341 : (isnan(_341) ? 1.0 : min(_341, 1.0)))) * cbInstanceData._m0[_230].z;
    float _352 = isnan(0.0) ? _236 : (isnan(_236) ? 0.0 : max(_236, 0.0));
    float _363 = isnan(0.0) ? _237 : (isnan(_237) ? 0.0 : max(_237, 0.0));
    float _374 = isnan(0.0) ? _238 : (isnan(_238) ? 0.0 : max(_238, 0.0));
    uint _242 = _227 + 6u;
    bool _271 = cbMtdParam._m0[1u].z != 0.0;
    float _272 = _271 ? cbInstanceData._m0[_242].w : 0.0;
    SV_Target.x = ((_198 * 0.5) * _208) + 0.500488758087158203125;
    SV_Target.y = ((_201 * 0.5) * _208) + 0.500488758087158203125;
    SV_Target.z = ((_204 * 0.5) * _208) + 0.500488758087158203125;
    SV_Target.w = _272;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _308 : (isnan(_308) ? 1.0 : min(_308, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _271 ? cbInstanceData._m0[_242].w : TEXCOORD_1.w;
    SV_Target_2.x = isnan(1.0) ? _352 : (isnan(_352) ? 1.0 : min(_352, 1.0));
    SV_Target_2.y = isnan(1.0) ? _363 : (isnan(_363) ? 1.0 : min(_363, 1.0));
    SV_Target_2.z = isnan(1.0) ? _374 : (isnan(_374) ? 1.0 : min(_374, 1.0));
    SV_Target_2.w = _271 ? cbInstanceData._m0[_242].w : (float(floatBitsToUint(cbInstanceData._m0[_227 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _272;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _272;
}


