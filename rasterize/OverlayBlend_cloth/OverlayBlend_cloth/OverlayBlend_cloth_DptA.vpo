#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec4 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out float TEXCOORD_4;
layout(location = 4, component = 1) out vec2 TEXCOORD_6;
layout(location = 4, component = 3) out float TEXCOORD_10;

void main()
{
    uint _81 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_10 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _177 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _179 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _180 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _187 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _188 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _189 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _256;
    float _257;
    float _258;
    float _259;
    float _260;
    float _261;
    float _262;
    float _263;
    float _264;
    float _265;
    float _266;
    float _267;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _204 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _81;
        uint _217 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_204)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
        uint _224 = _217 + 1u;
        uint _231 = _217 + 2u;
        _256 = cbObjMatrix._m0[_217].x;
        _257 = cbObjMatrix._m0[_217].y;
        _258 = cbObjMatrix._m0[_217].z;
        _259 = cbObjMatrix._m0[_217].w;
        _260 = cbObjMatrix._m0[_224].x;
        _261 = cbObjMatrix._m0[_224].y;
        _262 = cbObjMatrix._m0[_224].z;
        _263 = cbObjMatrix._m0[_224].w;
        _264 = cbObjMatrix._m0[_231].x;
        _265 = cbObjMatrix._m0[_231].y;
        _266 = cbObjMatrix._m0[_231].z;
        _267 = cbObjMatrix._m0[_231].w;
    }
    else
    {
        _256 = cbvModelParam._m0[0u].x;
        _257 = cbvModelParam._m0[0u].y;
        _258 = cbvModelParam._m0[0u].z;
        _259 = cbvModelParam._m0[0u].w;
        _260 = cbvModelParam._m0[1u].x;
        _261 = cbvModelParam._m0[1u].y;
        _262 = cbvModelParam._m0[1u].z;
        _263 = cbvModelParam._m0[1u].w;
        _264 = cbvModelParam._m0[2u].x;
        _265 = cbvModelParam._m0[2u].y;
        _266 = cbvModelParam._m0[2u].z;
        _267 = cbvModelParam._m0[2u].w;
    }
    precise float _268 = POSITION.x * _256;
    precise float _269 = POSITION.y * _257;
    precise float _270 = _269 + _268;
    precise float _271 = POSITION.z * _258;
    precise float _272 = _271 + _270;
    precise float _273 = 1.0 * _259;
    precise float _275 = _273 + _272;
    precise float _276 = POSITION.x * _260;
    precise float _277 = POSITION.y * _261;
    precise float _278 = _277 + _276;
    precise float _279 = POSITION.z * _262;
    precise float _280 = _279 + _278;
    precise float _281 = 1.0 * _263;
    precise float _282 = _281 + _280;
    precise float _283 = POSITION.x * _264;
    precise float _284 = POSITION.y * _265;
    precise float _285 = _284 + _283;
    precise float _286 = POSITION.z * _266;
    precise float _287 = _286 + _285;
    precise float _288 = 1.0 * _267;
    precise float _289 = _288 + _287;
    float _295 = cbSceneParam._m0[3u].x - _275;
    float _296 = cbSceneParam._m0[3u].y - _282;
    float _297 = cbSceneParam._m0[3u].z - _289;
    uint _318 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _81;
    uvec4 _320 = texelFetch(g_InstanceIndexBuffer, int(_318));
    uint _321 = _320.x;
    precise float _332 = _275 - cbSceneParam._m0[3u].x;
    precise float _333 = _282 - cbSceneParam._m0[3u].y;
    precise float _334 = _289 - cbSceneParam._m0[3u].z;
    precise float _362 = _332 * cbSceneParam._m0[24u].x;
    precise float _363 = _333 * cbSceneParam._m0[24u].y;
    precise float _364 = _363 + _362;
    precise float _365 = _334 * cbSceneParam._m0[24u].z;
    precise float _366 = _365 + _364;
    precise float _367 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _368 = _367 + _366;
    precise float _369 = _332 * cbSceneParam._m0[25u].x;
    precise float _370 = _333 * cbSceneParam._m0[25u].y;
    precise float _371 = _370 + _369;
    precise float _372 = _334 * cbSceneParam._m0[25u].z;
    precise float _373 = _372 + _371;
    precise float _374 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _375 = _374 + _373;
    precise float _376 = _332 * cbSceneParam._m0[26u].x;
    precise float _377 = _333 * cbSceneParam._m0[26u].y;
    precise float _378 = _377 + _376;
    precise float _379 = _334 * cbSceneParam._m0[26u].z;
    precise float _380 = _379 + _378;
    precise float _381 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _382 = _381 + _380;
    precise float _383 = _332 * cbSceneParam._m0[27u].x;
    precise float _384 = _333 * cbSceneParam._m0[27u].y;
    precise float _385 = _384 + _383;
    precise float _386 = _334 * cbSceneParam._m0[27u].z;
    precise float _387 = _386 + _385;
    precise float _388 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _389 = _388 + _387;
    gl_Position.x = _368;
    gl_Position.y = _375;
    gl_Position.z = _382;
    gl_Position.w = _389;
    NORMAL_1.x = fma(_180, _258, fma(_179, _257, _256 * _177));
    NORMAL_1.y = fma(_180, _262, fma(_179, _261, _260 * _177));
    NORMAL_1.z = fma(_180, _266, fma(_179, _265, _264 * _177));
    NORMAL_1.w = float(_321);
    TANGENT_1.x = fma(_189, _258, fma(_188, _257, _256 * _187));
    TANGENT_1.y = fma(_189, _262, fma(_188, _261, _260 * _187));
    TANGENT_1.z = fma(_189, _266, fma(_188, _265, _264 * _187));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4 = COLOR_1.x;
    TEXCOORD_6.x = _382;
    TEXCOORD_6.y = _389;
    TEXCOORD_10 = sqrt(((_295 * _295) + (_296 * _296)) + (_297 * _297));
    gl_ClipDistance[0u] = dot(vec4(_368, _375, _382, _389), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_368, _375, _382, _389), vec4(cbInstanceData._m0[(_321 * 13u) + 3u]));
}


