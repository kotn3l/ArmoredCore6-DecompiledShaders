#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out float TEXCOORD_4;
layout(location = 6) out vec4 TEXCOORD_7;
layout(location = 7) out vec4 TEXCOORD_8;
layout(location = 5, component = 1) out vec3 TEXCOORD_9;

void main()
{
    uint _88 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_7.z = 0.0;
    TEXCOORD_7.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _213 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _215 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _216 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _223 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _224 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _225 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _227 = float(BLENDINDICES.x);
    float _228 = float(BLENDINDICES.y);
    float _229 = float(BLENDINDICES.z);
    float _230 = float(BLENDINDICES.w);
    bool _236 = floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u;
    float _457;
    float _458;
    float _459;
    float _460;
    float _461;
    float _462;
    float _463;
    float _464;
    float _465;
    float _466;
    float _467;
    float _468;
    if (_236)
    {
        uint _241 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _88;
        precise float _245 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _250 = isnan(_245) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _245 : max(0.001000000047497451305389404296875, _245));
        precise float _252 = BLENDWEIGHT.x / _250;
        precise float _253 = BLENDWEIGHT.y / _250;
        precise float _254 = BLENDWEIGHT.z / _250;
        precise float _255 = BLENDWEIGHT.w / _250;
        uvec4 _262 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_241)).x * 13u) + 4u]);
        uint _263 = _262.x;
        uint _265 = (_263 + uint(_227)) * 3u;
        uint _272 = _265 + 1u;
        uint _279 = _265 + 2u;
        precise float _286 = _252 * cbObjMatrix._m0[_265].x;
        precise float _287 = _252 * cbObjMatrix._m0[_272].x;
        precise float _288 = _252 * cbObjMatrix._m0[_279].x;
        precise float _289 = _252 * cbObjMatrix._m0[_265].y;
        precise float _290 = _252 * cbObjMatrix._m0[_272].y;
        precise float _291 = _252 * cbObjMatrix._m0[_279].y;
        precise float _292 = _252 * cbObjMatrix._m0[_265].z;
        precise float _293 = _252 * cbObjMatrix._m0[_272].z;
        precise float _294 = _252 * cbObjMatrix._m0[_279].z;
        precise float _295 = _252 * cbObjMatrix._m0[_265].w;
        precise float _296 = _252 * cbObjMatrix._m0[_272].w;
        precise float _297 = _252 * cbObjMatrix._m0[_279].w;
        uint _300 = (_263 + uint(_228)) * 3u;
        uint _307 = _300 + 1u;
        uint _314 = _300 + 2u;
        precise float _321 = _253 * cbObjMatrix._m0[_300].x;
        precise float _322 = _253 * cbObjMatrix._m0[_307].x;
        precise float _323 = _253 * cbObjMatrix._m0[_314].x;
        precise float _324 = _253 * cbObjMatrix._m0[_300].y;
        precise float _325 = _253 * cbObjMatrix._m0[_307].y;
        precise float _326 = _253 * cbObjMatrix._m0[_314].y;
        precise float _327 = _253 * cbObjMatrix._m0[_300].z;
        precise float _328 = _253 * cbObjMatrix._m0[_307].z;
        precise float _329 = _253 * cbObjMatrix._m0[_314].z;
        precise float _330 = _253 * cbObjMatrix._m0[_300].w;
        precise float _331 = _253 * cbObjMatrix._m0[_307].w;
        precise float _332 = _253 * cbObjMatrix._m0[_314].w;
        precise float _333 = _286 + _321;
        precise float _334 = _287 + _322;
        precise float _335 = _288 + _323;
        precise float _336 = _289 + _324;
        precise float _337 = _290 + _325;
        precise float _338 = _291 + _326;
        precise float _339 = _292 + _327;
        precise float _340 = _293 + _328;
        precise float _341 = _294 + _329;
        precise float _342 = _295 + _330;
        precise float _343 = _296 + _331;
        precise float _344 = _297 + _332;
        uint _347 = (_263 + uint(_229)) * 3u;
        uint _354 = _347 + 1u;
        uint _361 = _347 + 2u;
        precise float _368 = _254 * cbObjMatrix._m0[_347].x;
        precise float _369 = _254 * cbObjMatrix._m0[_354].x;
        precise float _370 = _254 * cbObjMatrix._m0[_361].x;
        precise float _371 = _254 * cbObjMatrix._m0[_347].y;
        precise float _372 = _254 * cbObjMatrix._m0[_354].y;
        precise float _373 = _254 * cbObjMatrix._m0[_361].y;
        precise float _374 = _254 * cbObjMatrix._m0[_347].z;
        precise float _375 = _254 * cbObjMatrix._m0[_354].z;
        precise float _376 = _254 * cbObjMatrix._m0[_361].z;
        precise float _377 = _254 * cbObjMatrix._m0[_347].w;
        precise float _378 = _254 * cbObjMatrix._m0[_354].w;
        precise float _379 = _254 * cbObjMatrix._m0[_361].w;
        precise float _380 = _333 + _368;
        precise float _381 = _334 + _369;
        precise float _382 = _335 + _370;
        precise float _383 = _336 + _371;
        precise float _384 = _337 + _372;
        precise float _385 = _338 + _373;
        precise float _386 = _339 + _374;
        precise float _387 = _340 + _375;
        precise float _388 = _341 + _376;
        precise float _389 = _342 + _377;
        precise float _390 = _343 + _378;
        precise float _391 = _344 + _379;
        uint _394 = (_263 + uint(_230)) * 3u;
        uint _401 = _394 + 1u;
        uint _408 = _394 + 2u;
        precise float _415 = _255 * cbObjMatrix._m0[_394].x;
        precise float _416 = _255 * cbObjMatrix._m0[_401].x;
        precise float _417 = _255 * cbObjMatrix._m0[_408].x;
        precise float _418 = _255 * cbObjMatrix._m0[_394].y;
        precise float _419 = _255 * cbObjMatrix._m0[_401].y;
        precise float _420 = _255 * cbObjMatrix._m0[_408].y;
        precise float _421 = _255 * cbObjMatrix._m0[_394].z;
        precise float _422 = _255 * cbObjMatrix._m0[_401].z;
        precise float _423 = _255 * cbObjMatrix._m0[_408].z;
        precise float _424 = _255 * cbObjMatrix._m0[_394].w;
        precise float _425 = _255 * cbObjMatrix._m0[_401].w;
        precise float _426 = _255 * cbObjMatrix._m0[_408].w;
        precise float _427 = _380 + _415;
        precise float _428 = _381 + _416;
        precise float _429 = _382 + _417;
        precise float _430 = _383 + _418;
        precise float _431 = _384 + _419;
        precise float _432 = _385 + _420;
        precise float _433 = _386 + _421;
        precise float _434 = _387 + _422;
        precise float _435 = _388 + _423;
        precise float _436 = _389 + _424;
        precise float _437 = _390 + _425;
        precise float _438 = _391 + _426;
        _457 = _427;
        _458 = _430;
        _459 = _433;
        _460 = _436;
        _461 = _428;
        _462 = _431;
        _463 = _434;
        _464 = _437;
        _465 = _429;
        _466 = _432;
        _467 = _435;
        _468 = _438;
    }
    else
    {
        _457 = cbvModelParam._m0[0u].x;
        _458 = cbvModelParam._m0[0u].y;
        _459 = cbvModelParam._m0[0u].z;
        _460 = cbvModelParam._m0[0u].w;
        _461 = cbvModelParam._m0[1u].x;
        _462 = cbvModelParam._m0[1u].y;
        _463 = cbvModelParam._m0[1u].z;
        _464 = cbvModelParam._m0[1u].w;
        _465 = cbvModelParam._m0[2u].x;
        _466 = cbvModelParam._m0[2u].y;
        _467 = cbvModelParam._m0[2u].z;
        _468 = cbvModelParam._m0[2u].w;
    }
    precise float _469 = POSITION.x * _457;
    precise float _470 = POSITION.y * _458;
    precise float _471 = _470 + _469;
    precise float _472 = POSITION.z * _459;
    precise float _473 = _472 + _471;
    precise float _474 = 1.0 * _460;
    precise float _475 = _474 + _473;
    precise float _476 = POSITION.x * _461;
    precise float _477 = POSITION.y * _462;
    precise float _478 = _477 + _476;
    precise float _479 = POSITION.z * _463;
    precise float _480 = _479 + _478;
    precise float _481 = 1.0 * _464;
    precise float _482 = _481 + _480;
    precise float _483 = POSITION.x * _465;
    precise float _484 = POSITION.y * _466;
    precise float _485 = _484 + _483;
    precise float _486 = POSITION.z * _467;
    precise float _487 = _486 + _485;
    precise float _488 = 1.0 * _468;
    precise float _489 = _488 + _487;
    float _707;
    float _708;
    float _709;
    float _710;
    float _711;
    float _712;
    float _713;
    float _714;
    float _715;
    float _716;
    float _717;
    float _718;
    if (_236)
    {
        float _490 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _493 = isnan(_490) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _490 : max(0.001000000047497451305389404296875, _490));
        float _494 = BLENDWEIGHT.x / _493;
        float _495 = BLENDWEIGHT.y / _493;
        float _496 = BLENDWEIGHT.z / _493;
        float _497 = BLENDWEIGHT.w / _493;
        uint _503 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _88;
        uvec4 _511 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_503)).x * 13u) + 4u]);
        uint _512 = _511.x;
        uint _514 = (_512 + uint(_227)) * 3u;
        uint _521 = _514 + 1u;
        uint _528 = _514 + 2u;
        uint _549 = (_512 + uint(_228)) * 3u;
        uint _556 = _549 + 1u;
        uint _563 = _549 + 2u;
        uint _596 = (_512 + uint(_229)) * 3u;
        uint _603 = _596 + 1u;
        uint _610 = _596 + 2u;
        uint _643 = (_512 + uint(_230)) * 3u;
        uint _650 = _643 + 1u;
        uint _657 = _643 + 2u;
        _707 = (((cbPrevObjMatrix._m0[_549].x * _495) + (cbPrevObjMatrix._m0[_514].x * _494)) + (cbPrevObjMatrix._m0[_596].x * _496)) + (cbPrevObjMatrix._m0[_643].x * _497);
        _708 = (((cbPrevObjMatrix._m0[_549].y * _495) + (cbPrevObjMatrix._m0[_514].y * _494)) + (cbPrevObjMatrix._m0[_596].y * _496)) + (cbPrevObjMatrix._m0[_643].y * _497);
        _709 = (((cbPrevObjMatrix._m0[_549].z * _495) + (cbPrevObjMatrix._m0[_514].z * _494)) + (cbPrevObjMatrix._m0[_596].z * _496)) + (cbPrevObjMatrix._m0[_643].z * _497);
        _710 = (((cbPrevObjMatrix._m0[_549].w * _495) + (cbPrevObjMatrix._m0[_514].w * _494)) + (cbPrevObjMatrix._m0[_596].w * _496)) + (cbPrevObjMatrix._m0[_643].w * _497);
        _711 = (((cbPrevObjMatrix._m0[_556].x * _495) + (cbPrevObjMatrix._m0[_521].x * _494)) + (cbPrevObjMatrix._m0[_603].x * _496)) + (cbPrevObjMatrix._m0[_650].x * _497);
        _712 = (((cbPrevObjMatrix._m0[_556].y * _495) + (cbPrevObjMatrix._m0[_521].y * _494)) + (cbPrevObjMatrix._m0[_603].y * _496)) + (cbPrevObjMatrix._m0[_650].y * _497);
        _713 = (((cbPrevObjMatrix._m0[_556].z * _495) + (cbPrevObjMatrix._m0[_521].z * _494)) + (cbPrevObjMatrix._m0[_603].z * _496)) + (cbPrevObjMatrix._m0[_650].z * _497);
        _714 = (((cbPrevObjMatrix._m0[_556].w * _495) + (cbPrevObjMatrix._m0[_521].w * _494)) + (cbPrevObjMatrix._m0[_603].w * _496)) + (cbPrevObjMatrix._m0[_650].w * _497);
        _715 = (((cbPrevObjMatrix._m0[_563].x * _495) + (cbPrevObjMatrix._m0[_528].x * _494)) + (cbPrevObjMatrix._m0[_610].x * _496)) + (cbPrevObjMatrix._m0[_657].x * _497);
        _716 = (((cbPrevObjMatrix._m0[_563].y * _495) + (cbPrevObjMatrix._m0[_528].y * _494)) + (cbPrevObjMatrix._m0[_610].y * _496)) + (cbPrevObjMatrix._m0[_657].y * _497);
        _717 = (((cbPrevObjMatrix._m0[_563].z * _495) + (cbPrevObjMatrix._m0[_528].z * _494)) + (cbPrevObjMatrix._m0[_610].z * _496)) + (cbPrevObjMatrix._m0[_657].z * _497);
        _718 = (((cbPrevObjMatrix._m0[_563].w * _495) + (cbPrevObjMatrix._m0[_528].w * _494)) + (cbPrevObjMatrix._m0[_610].w * _496)) + (cbPrevObjMatrix._m0[_657].w * _497);
    }
    else
    {
        _707 = cbvModelParam._m0[3u].x;
        _708 = cbvModelParam._m0[3u].y;
        _709 = cbvModelParam._m0[3u].z;
        _710 = cbvModelParam._m0[3u].w;
        _711 = cbvModelParam._m0[4u].x;
        _712 = cbvModelParam._m0[4u].y;
        _713 = cbvModelParam._m0[4u].z;
        _714 = cbvModelParam._m0[4u].w;
        _715 = cbvModelParam._m0[5u].x;
        _716 = cbvModelParam._m0[5u].y;
        _717 = cbvModelParam._m0[5u].z;
        _718 = cbvModelParam._m0[5u].w;
    }
    float _737 = (fma(POSITION.z, _709, fma(POSITION.y, _708, _707 * POSITION.x)) + _710) - cbSceneParam._m0[28u].x;
    float _738 = (fma(POSITION.z, _713, fma(POSITION.y, _712, _711 * POSITION.x)) + _714) - cbSceneParam._m0[28u].y;
    float _739 = (fma(POSITION.z, _717, fma(POSITION.y, _716, _715 * POSITION.x)) + _718) - cbSceneParam._m0[28u].z;
    float _786 = fma(_216, _459, fma(_215, _458, _457 * _213));
    float _789 = fma(_216, _463, fma(_215, _462, _461 * _213));
    float _792 = fma(_216, _467, fma(_215, _466, _465 * _213));
    uint _797 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _88;
    uvec4 _799 = texelFetch(g_InstanceIndexBuffer, int(_797));
    uint _800 = _799.x;
    precise float _816 = _475 - cbSceneParam._m0[3u].x;
    precise float _817 = _482 - cbSceneParam._m0[3u].y;
    precise float _818 = _489 - cbSceneParam._m0[3u].z;
    precise float _846 = _816 * cbSceneParam._m0[24u].x;
    precise float _847 = _817 * cbSceneParam._m0[24u].y;
    precise float _848 = _847 + _846;
    precise float _849 = _818 * cbSceneParam._m0[24u].z;
    precise float _850 = _849 + _848;
    precise float _851 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _852 = _851 + _850;
    precise float _853 = _816 * cbSceneParam._m0[25u].x;
    precise float _854 = _817 * cbSceneParam._m0[25u].y;
    precise float _855 = _854 + _853;
    precise float _856 = _818 * cbSceneParam._m0[25u].z;
    precise float _857 = _856 + _855;
    precise float _858 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _859 = _858 + _857;
    precise float _860 = _816 * cbSceneParam._m0[26u].x;
    precise float _861 = _817 * cbSceneParam._m0[26u].y;
    precise float _862 = _861 + _860;
    precise float _863 = _818 * cbSceneParam._m0[26u].z;
    precise float _864 = _863 + _862;
    precise float _865 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _866 = _865 + _864;
    precise float _867 = _816 * cbSceneParam._m0[27u].x;
    precise float _868 = _817 * cbSceneParam._m0[27u].y;
    precise float _869 = _868 + _867;
    precise float _870 = _818 * cbSceneParam._m0[27u].z;
    precise float _871 = _870 + _869;
    precise float _872 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _873 = _872 + _871;
    gl_Position.x = _852;
    gl_Position.y = _859;
    gl_Position.z = _866;
    gl_Position.w = _873;
    POSITION_1.x = _852;
    POSITION_1.y = _859;
    POSITION_1.z = _866;
    POSITION_1.w = _873;
    NORMAL_1.x = _786;
    NORMAL_1.y = _789;
    NORMAL_1.z = _792;
    NORMAL_1.w = float(_800);
    TANGENT_1.x = fma(_225, _459, fma(_224, _458, _457 * _223));
    TANGENT_1.y = fma(_225, _463, fma(_224, _462, _461 * _223));
    TANGENT_1.z = fma(_225, _467, fma(_224, _466, _465 * _223));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4 = COLOR_1.x;
    TEXCOORD_7.x = _852;
    TEXCOORD_7.y = _859;
    TEXCOORD_7.z = _866;
    TEXCOORD_7.w = _873;
    TEXCOORD_8.x = fma(_739, cbSceneParam._m0[29u].z, fma(_738, cbSceneParam._m0[29u].y, _737 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_8.y = fma(_739, cbSceneParam._m0[30u].z, fma(_738, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _737)) + cbSceneParam._m0[30u].w;
    TEXCOORD_8.z = fma(_739, cbSceneParam._m0[31u].z, fma(_738, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _737)) + cbSceneParam._m0[31u].w;
    TEXCOORD_8.w = fma(_739, cbSceneParam._m0[32u].z, fma(_738, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _737)) + cbSceneParam._m0[32u].w;
    TEXCOORD_9.x = _786;
    TEXCOORD_9.y = _789;
    TEXCOORD_9.z = _792;
    gl_ClipDistance[0u] = dot(vec4(_852, _859, _866, _873), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_852, _859, _866, _873), vec4(cbInstanceData._m0[(_800 * 13u) + 3u]));
}


