#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec4 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out float TEXCOORD_4;
layout(location = 4, component = 1) out float TEXCOORD_10;

void main()
{
    uint _78 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    TEXCOORD_10 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _172 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _174 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _175 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _182 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _183 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _184 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _251;
    float _252;
    float _253;
    float _254;
    float _255;
    float _256;
    float _257;
    float _258;
    float _259;
    float _260;
    float _261;
    float _262;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _199 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _78;
        uint _212 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_199)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
        uint _219 = _212 + 1u;
        uint _226 = _212 + 2u;
        _251 = cbObjMatrix._m0[_212].x;
        _252 = cbObjMatrix._m0[_212].y;
        _253 = cbObjMatrix._m0[_212].z;
        _254 = cbObjMatrix._m0[_212].w;
        _255 = cbObjMatrix._m0[_219].x;
        _256 = cbObjMatrix._m0[_219].y;
        _257 = cbObjMatrix._m0[_219].z;
        _258 = cbObjMatrix._m0[_219].w;
        _259 = cbObjMatrix._m0[_226].x;
        _260 = cbObjMatrix._m0[_226].y;
        _261 = cbObjMatrix._m0[_226].z;
        _262 = cbObjMatrix._m0[_226].w;
    }
    else
    {
        _251 = cbvModelParam._m0[0u].x;
        _252 = cbvModelParam._m0[0u].y;
        _253 = cbvModelParam._m0[0u].z;
        _254 = cbvModelParam._m0[0u].w;
        _255 = cbvModelParam._m0[1u].x;
        _256 = cbvModelParam._m0[1u].y;
        _257 = cbvModelParam._m0[1u].z;
        _258 = cbvModelParam._m0[1u].w;
        _259 = cbvModelParam._m0[2u].x;
        _260 = cbvModelParam._m0[2u].y;
        _261 = cbvModelParam._m0[2u].z;
        _262 = cbvModelParam._m0[2u].w;
    }
    precise float _263 = POSITION.x * _251;
    precise float _264 = POSITION.y * _252;
    precise float _265 = _264 + _263;
    precise float _266 = POSITION.z * _253;
    precise float _267 = _266 + _265;
    precise float _268 = 1.0 * _254;
    precise float _270 = _268 + _267;
    precise float _271 = POSITION.x * _255;
    precise float _272 = POSITION.y * _256;
    precise float _273 = _272 + _271;
    precise float _274 = POSITION.z * _257;
    precise float _275 = _274 + _273;
    precise float _276 = 1.0 * _258;
    precise float _277 = _276 + _275;
    precise float _278 = POSITION.x * _259;
    precise float _279 = POSITION.y * _260;
    precise float _280 = _279 + _278;
    precise float _281 = POSITION.z * _261;
    precise float _282 = _281 + _280;
    precise float _283 = 1.0 * _262;
    precise float _284 = _283 + _282;
    float _290 = cbSceneParam._m0[3u].x - _270;
    float _291 = cbSceneParam._m0[3u].y - _277;
    float _292 = cbSceneParam._m0[3u].z - _284;
    uint _313 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _78;
    uvec4 _315 = texelFetch(g_InstanceIndexBuffer, int(_313));
    uint _316 = _315.x;
    precise float _327 = _270 - cbSceneParam._m0[3u].x;
    precise float _328 = _277 - cbSceneParam._m0[3u].y;
    precise float _329 = _284 - cbSceneParam._m0[3u].z;
    precise float _357 = _327 * cbSceneParam._m0[24u].x;
    precise float _358 = _328 * cbSceneParam._m0[24u].y;
    precise float _359 = _358 + _357;
    precise float _360 = _329 * cbSceneParam._m0[24u].z;
    precise float _361 = _360 + _359;
    precise float _362 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _363 = _362 + _361;
    precise float _364 = _327 * cbSceneParam._m0[25u].x;
    precise float _365 = _328 * cbSceneParam._m0[25u].y;
    precise float _366 = _365 + _364;
    precise float _367 = _329 * cbSceneParam._m0[25u].z;
    precise float _368 = _367 + _366;
    precise float _369 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _370 = _369 + _368;
    precise float _371 = _327 * cbSceneParam._m0[26u].x;
    precise float _372 = _328 * cbSceneParam._m0[26u].y;
    precise float _373 = _372 + _371;
    precise float _374 = _329 * cbSceneParam._m0[26u].z;
    precise float _375 = _374 + _373;
    precise float _376 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _377 = _376 + _375;
    precise float _378 = _327 * cbSceneParam._m0[27u].x;
    precise float _379 = _328 * cbSceneParam._m0[27u].y;
    precise float _380 = _379 + _378;
    precise float _381 = _329 * cbSceneParam._m0[27u].z;
    precise float _382 = _381 + _380;
    precise float _383 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _384 = _383 + _382;
    gl_Position.x = _363;
    gl_Position.y = _370;
    gl_Position.z = _377;
    gl_Position.w = _384;
    NORMAL_1.x = fma(_175, _253, fma(_174, _252, _251 * _172));
    NORMAL_1.y = fma(_175, _257, fma(_174, _256, _255 * _172));
    NORMAL_1.z = fma(_175, _261, fma(_174, _260, _259 * _172));
    NORMAL_1.w = float(_316);
    TANGENT_1.x = fma(_184, _253, fma(_183, _252, _251 * _182));
    TANGENT_1.y = fma(_184, _257, fma(_183, _256, _255 * _182));
    TANGENT_1.z = fma(_184, _261, fma(_183, _260, _259 * _182));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4 = COLOR_1.x;
    TEXCOORD_10 = sqrt(((_290 * _290) + (_291 * _291)) + (_292 * _292));
    gl_ClipDistance[0u] = dot(vec4(_363, _370, _377, _384), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_363, _370, _377, _384), vec4(cbInstanceData._m0[(_316 * 13u) + 3u]));
}


