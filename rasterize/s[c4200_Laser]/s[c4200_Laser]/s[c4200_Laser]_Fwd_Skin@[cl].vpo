#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 0) uniform texture2D s_c4200_Laser_snp_0_Texture2D_10;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_2;
layout(location = 9) in vec4 TEXCOORD_3;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec3 TEXCOORD_1_1;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out vec4 TEXCOORD_8;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1_1.x = 0.0;
    TEXCOORD_1_1.y = 0.0;
    TEXCOORD_1_1.z = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    precise float _193 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _195 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _200 = _193 * cbTexScroll._m0[0u].x;
    precise float _201 = _195 * cbTexScroll._m0[0u].y;
    precise float _204 = _200 + cbTexScroll._m0[0u].z;
    precise float _205 = _201 + cbTexScroll._m0[0u].w;
    precise float _209 = float(NORMAL.x) + (-127.0);
    precise float _211 = float(NORMAL.y) + (-127.0);
    precise float _212 = float(NORMAL.z) + (-127.0);
    precise float _213 = _209 * 0.0078740157186985015869140625;
    precise float _215 = _211 * 0.0078740157186985015869140625;
    precise float _216 = _212 * 0.0078740157186985015869140625;
    float _225 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _226 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _227 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _241 = _213 * cbMtdParam._m0[23u].w;
    precise float _242 = _215 * cbMtdParam._m0[24u].x;
    precise float _243 = _216 * cbMtdParam._m0[24u].y;
    precise float _248 = cbPerFrame._m0[22u].x * cbMtdParam._m0[20u].x;
    precise float _253 = _248 * cbMtdParam._m0[22u].w;
    precise float _254 = _248 * cbMtdParam._m0[23u].x;
    precise float _255 = _204 + _253;
    precise float _256 = _205 + _254;
    precise float _263 = _255 * cbTextureTilingScale._m0[0u].x;
    precise float _264 = cbTextureTilingScale._m0[0u].y * _256;
    precise float _265 = cbTextureTilingScale._m0[0u].z + _263;
    precise float _266 = cbTextureTilingScale._m0[0u].w + _264;
    precise float _277 = textureLod(sampler2D(s_c4200_Laser_snp_0_Texture2D_10, SS_DiffuseMap), vec2(_265, _266), 0.0).x * cbMtdParam._m0[18u].x;
    precise float _278 = _241 * _277;
    precise float _279 = _242 * _277;
    precise float _280 = _243 * _277;
    precise float _281 = _241 + _278;
    precise float _282 = _242 + _279;
    precise float _283 = _243 + _280;
    precise float _284 = _241 * 0.0;
    precise float _285 = _242 * 0.0;
    precise float _286 = _243 * 0.0;
    precise float _287 = _284 + _281;
    precise float _288 = _285 + _282;
    precise float _289 = _286 + _283;
    precise float _290 = TEXCOORD_3.x * _287;
    precise float _291 = TEXCOORD_3.y * _288;
    precise float _292 = TEXCOORD_3.z * _289;
    precise float _293 = POSITION.x + _290;
    precise float _294 = POSITION.y + _291;
    precise float _295 = POSITION.z + _292;
    uint _300 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _302 = texelFetch(g_InstanceIndexBuffer, int(_300));
    uint _303 = _302.x;
    precise float _304 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _309 = isnan(_304) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _304 : max(0.001000000047497451305389404296875, _304));
    precise float _311 = BLENDWEIGHT.x / _309;
    precise float _312 = BLENDWEIGHT.y / _309;
    precise float _313 = BLENDWEIGHT.z / _309;
    precise float _314 = BLENDWEIGHT.w / _309;
    uvec4 _321 = floatBitsToUint(cbInstanceData._m0[(_303 * 13u) + 4u]);
    uint _322 = _321.x;
    uint _324 = (_322 + uint(float(BLENDINDICES.x))) * 3u;
    uint _331 = _324 + 1u;
    uint _338 = _324 + 2u;
    precise float _345 = _311 * cbObjMatrix._m0[_324].x;
    precise float _346 = _311 * cbObjMatrix._m0[_331].x;
    precise float _347 = _311 * cbObjMatrix._m0[_338].x;
    precise float _348 = _311 * cbObjMatrix._m0[_324].y;
    precise float _349 = _311 * cbObjMatrix._m0[_331].y;
    precise float _350 = _311 * cbObjMatrix._m0[_338].y;
    precise float _351 = _311 * cbObjMatrix._m0[_324].z;
    precise float _352 = _311 * cbObjMatrix._m0[_331].z;
    precise float _353 = _311 * cbObjMatrix._m0[_338].z;
    precise float _354 = _311 * cbObjMatrix._m0[_324].w;
    precise float _355 = _311 * cbObjMatrix._m0[_331].w;
    precise float _356 = _311 * cbObjMatrix._m0[_338].w;
    uint _359 = (_322 + uint(float(BLENDINDICES.y))) * 3u;
    uint _366 = _359 + 1u;
    uint _373 = _359 + 2u;
    precise float _380 = _312 * cbObjMatrix._m0[_359].x;
    precise float _381 = _312 * cbObjMatrix._m0[_366].x;
    precise float _382 = _312 * cbObjMatrix._m0[_373].x;
    precise float _383 = _312 * cbObjMatrix._m0[_359].y;
    precise float _384 = _312 * cbObjMatrix._m0[_366].y;
    precise float _385 = _312 * cbObjMatrix._m0[_373].y;
    precise float _386 = _312 * cbObjMatrix._m0[_359].z;
    precise float _387 = _312 * cbObjMatrix._m0[_366].z;
    precise float _388 = _312 * cbObjMatrix._m0[_373].z;
    precise float _389 = _312 * cbObjMatrix._m0[_359].w;
    precise float _390 = _312 * cbObjMatrix._m0[_366].w;
    precise float _391 = _312 * cbObjMatrix._m0[_373].w;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    uint _406 = (_322 + uint(float(BLENDINDICES.z))) * 3u;
    uint _413 = _406 + 1u;
    uint _420 = _406 + 2u;
    precise float _427 = _313 * cbObjMatrix._m0[_406].x;
    precise float _428 = _313 * cbObjMatrix._m0[_413].x;
    precise float _429 = _313 * cbObjMatrix._m0[_420].x;
    precise float _430 = _313 * cbObjMatrix._m0[_406].y;
    precise float _431 = _313 * cbObjMatrix._m0[_413].y;
    precise float _432 = _313 * cbObjMatrix._m0[_420].y;
    precise float _433 = _313 * cbObjMatrix._m0[_406].z;
    precise float _434 = _313 * cbObjMatrix._m0[_413].z;
    precise float _435 = _313 * cbObjMatrix._m0[_420].z;
    precise float _436 = _313 * cbObjMatrix._m0[_406].w;
    precise float _437 = _313 * cbObjMatrix._m0[_413].w;
    precise float _438 = _313 * cbObjMatrix._m0[_420].w;
    precise float _439 = _392 + _427;
    precise float _440 = _393 + _428;
    precise float _441 = _394 + _429;
    precise float _442 = _395 + _430;
    precise float _443 = _396 + _431;
    precise float _444 = _397 + _432;
    precise float _445 = _398 + _433;
    precise float _446 = _399 + _434;
    precise float _447 = _400 + _435;
    precise float _448 = _401 + _436;
    precise float _449 = _402 + _437;
    precise float _450 = _403 + _438;
    uint _453 = (_322 + uint(float(BLENDINDICES.w))) * 3u;
    uint _460 = _453 + 1u;
    uint _467 = _453 + 2u;
    precise float _474 = _314 * cbObjMatrix._m0[_453].x;
    precise float _475 = _314 * cbObjMatrix._m0[_460].x;
    precise float _476 = _314 * cbObjMatrix._m0[_467].x;
    precise float _477 = _314 * cbObjMatrix._m0[_453].y;
    precise float _478 = _314 * cbObjMatrix._m0[_460].y;
    precise float _479 = _314 * cbObjMatrix._m0[_467].y;
    precise float _480 = _314 * cbObjMatrix._m0[_453].z;
    precise float _481 = _314 * cbObjMatrix._m0[_460].z;
    precise float _482 = _314 * cbObjMatrix._m0[_467].z;
    precise float _483 = _314 * cbObjMatrix._m0[_453].w;
    precise float _484 = _314 * cbObjMatrix._m0[_460].w;
    precise float _485 = _314 * cbObjMatrix._m0[_467].w;
    precise float _486 = _439 + _474;
    precise float _487 = _440 + _475;
    precise float _488 = _441 + _476;
    precise float _489 = _442 + _477;
    precise float _490 = _443 + _478;
    precise float _491 = _444 + _479;
    precise float _492 = _445 + _480;
    precise float _493 = _446 + _481;
    precise float _494 = _447 + _482;
    precise float _495 = _448 + _483;
    precise float _496 = _449 + _484;
    precise float _497 = _450 + _485;
    precise float _498 = _293 * _486;
    precise float _499 = _294 * _489;
    precise float _500 = _499 + _498;
    precise float _501 = _295 * _492;
    precise float _502 = _501 + _500;
    precise float _503 = 1.0 * _495;
    precise float _504 = _503 + _502;
    precise float _505 = _293 * _487;
    precise float _506 = _294 * _490;
    precise float _507 = _506 + _505;
    precise float _508 = _295 * _493;
    precise float _509 = _508 + _507;
    precise float _510 = 1.0 * _496;
    precise float _511 = _510 + _509;
    precise float _512 = _293 * _488;
    precise float _513 = _294 * _491;
    precise float _514 = _513 + _512;
    precise float _515 = _295 * _494;
    precise float _516 = _515 + _514;
    precise float _517 = 1.0 * _497;
    precise float _518 = _517 + _516;
    precise float _538 = _504 + 0.0;
    precise float _539 = _511 + 0.0;
    precise float _540 = _518 + 0.0;
    precise float _546 = _538 - cbSceneParam._m0[3u].x;
    precise float _547 = _539 - cbSceneParam._m0[3u].y;
    precise float _548 = _540 - cbSceneParam._m0[3u].z;
    precise float _574 = _546 * cbSceneParam._m0[24u].x;
    precise float _575 = _547 * cbSceneParam._m0[24u].y;
    precise float _576 = _575 + _574;
    precise float _577 = _548 * cbSceneParam._m0[24u].z;
    precise float _578 = _577 + _576;
    precise float _579 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _580 = _579 + _578;
    precise float _581 = _546 * cbSceneParam._m0[25u].x;
    precise float _582 = _547 * cbSceneParam._m0[25u].y;
    precise float _583 = _582 + _581;
    precise float _584 = _548 * cbSceneParam._m0[25u].z;
    precise float _585 = _584 + _583;
    precise float _586 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _587 = _586 + _585;
    precise float _588 = _546 * cbSceneParam._m0[26u].x;
    precise float _589 = _547 * cbSceneParam._m0[26u].y;
    precise float _590 = _589 + _588;
    precise float _591 = _548 * cbSceneParam._m0[26u].z;
    precise float _592 = _591 + _590;
    precise float _593 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _594 = _593 + _592;
    precise float _595 = _546 * cbSceneParam._m0[27u].x;
    precise float _596 = _547 * cbSceneParam._m0[27u].y;
    precise float _597 = _596 + _595;
    precise float _598 = _548 * cbSceneParam._m0[27u].z;
    precise float _599 = _598 + _597;
    precise float _600 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _601 = _600 + _599;
    gl_Position.x = _580;
    gl_Position.y = _587;
    gl_Position.z = _594;
    gl_Position.w = _601;
    POSITION_1.x = _580;
    POSITION_1.y = _587;
    POSITION_1.z = _594;
    POSITION_1.w = _601;
    NORMAL_1.x = fma(_216, _492, fma(_215, _489, _486 * _213));
    NORMAL_1.y = fma(_216, _493, fma(_215, _490, _487 * _213));
    NORMAL_1.z = fma(_216, _494, fma(_215, _491, _488 * _213));
    NORMAL_1.w = float(_303);
    TANGENT_1.x = fma(_227, _492, fma(_226, _489, _486 * _225));
    TANGENT_1.y = fma(_227, _493, fma(_226, _490, _487 * _225));
    TANGENT_1.z = fma(_227, _494, fma(_226, _491, _488 * _225));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1_1.x = _204;
    TEXCOORD_1_1.y = _205;
    TEXCOORD_1_1.z = TEXCOORD_1.x;
    TEXCOORD_5.x = TEXCOORD_2.x;
    TEXCOORD_5.y = TEXCOORD_2.y;
    TEXCOORD_5.z = TEXCOORD_2.z;
    TEXCOORD_5.w = COLOR_1.w;
    TEXCOORD_8.x = TEXCOORD_3.x;
    TEXCOORD_8.y = TEXCOORD_3.y;
    TEXCOORD_8.z = TEXCOORD_3.z;
    TEXCOORD_8.w = COLOR_1.x;
}


