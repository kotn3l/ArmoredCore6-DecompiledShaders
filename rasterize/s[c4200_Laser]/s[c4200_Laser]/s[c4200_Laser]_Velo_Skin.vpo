#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 0) uniform texture2D s_c4200_Laser_snp_0_Texture2D_10;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_2;
layout(location = 9) in vec4 TEXCOORD_3;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec3 TEXCOORD_1_1;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out vec4 TEXCOORD_8;
layout(location = 7) out vec4 TEXCOORD_13;
layout(location = 8) out vec4 TEXCOORD_14;
layout(location = 9) out vec3 TEXCOORD_15;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1_1.x = 0.0;
    TEXCOORD_1_1.y = 0.0;
    TEXCOORD_1_1.z = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_13.x = 0.0;
    TEXCOORD_13.y = 0.0;
    TEXCOORD_13.z = 0.0;
    TEXCOORD_13.w = 0.0;
    TEXCOORD_14.x = 0.0;
    TEXCOORD_14.y = 0.0;
    TEXCOORD_14.z = 0.0;
    TEXCOORD_14.w = 0.0;
    TEXCOORD_15.x = 0.0;
    TEXCOORD_15.y = 0.0;
    TEXCOORD_15.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _216 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _218 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _223 = _216 * cbTexScroll._m0[0u].x;
    precise float _224 = _218 * cbTexScroll._m0[0u].y;
    precise float _227 = _223 + cbTexScroll._m0[0u].z;
    precise float _228 = _224 + cbTexScroll._m0[0u].w;
    precise float _232 = float(NORMAL.x) + (-127.0);
    precise float _234 = float(NORMAL.y) + (-127.0);
    precise float _235 = float(NORMAL.z) + (-127.0);
    precise float _236 = _232 * 0.0078740157186985015869140625;
    precise float _238 = _234 * 0.0078740157186985015869140625;
    precise float _239 = _235 * 0.0078740157186985015869140625;
    float _248 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _249 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _250 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _264 = _236 * cbMtdParam._m0[23u].w;
    precise float _265 = _238 * cbMtdParam._m0[24u].x;
    precise float _266 = _239 * cbMtdParam._m0[24u].y;
    precise float _271 = cbPerFrame._m0[22u].x * cbMtdParam._m0[20u].x;
    precise float _276 = _271 * cbMtdParam._m0[22u].w;
    precise float _277 = _271 * cbMtdParam._m0[23u].x;
    precise float _278 = _227 + _276;
    precise float _279 = _228 + _277;
    precise float _286 = _278 * cbTextureTilingScale._m0[0u].x;
    precise float _287 = cbTextureTilingScale._m0[0u].y * _279;
    precise float _288 = cbTextureTilingScale._m0[0u].z + _286;
    precise float _289 = cbTextureTilingScale._m0[0u].w + _287;
    precise float _300 = textureLod(sampler2D(s_c4200_Laser_snp_0_Texture2D_10, SS_DiffuseMap), vec2(_288, _289), 0.0).x * cbMtdParam._m0[18u].x;
    precise float _301 = _264 * _300;
    precise float _302 = _265 * _300;
    precise float _303 = _266 * _300;
    precise float _304 = _264 + _301;
    precise float _305 = _265 + _302;
    precise float _306 = _266 + _303;
    precise float _307 = _264 * 0.0;
    precise float _308 = _265 * 0.0;
    precise float _309 = _266 * 0.0;
    precise float _310 = _307 + _304;
    precise float _311 = _308 + _305;
    precise float _312 = _309 + _306;
    precise float _313 = TEXCOORD_3.x * _310;
    precise float _314 = TEXCOORD_3.y * _311;
    precise float _315 = TEXCOORD_3.z * _312;
    precise float _316 = POSITION.x + _313;
    precise float _317 = POSITION.y + _314;
    precise float _318 = POSITION.z + _315;
    uint _323 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _325 = texelFetch(g_InstanceIndexBuffer, int(_323));
    uint _326 = _325.x;
    precise float _327 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _332 = isnan(_327) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _327 : max(0.001000000047497451305389404296875, _327));
    precise float _334 = BLENDWEIGHT.x / _332;
    precise float _335 = BLENDWEIGHT.y / _332;
    precise float _336 = BLENDWEIGHT.z / _332;
    precise float _337 = BLENDWEIGHT.w / _332;
    uint _339 = _326 * 13u;
    uvec4 _344 = floatBitsToUint(cbInstanceData._m0[_339 + 4u]);
    uint _345 = _344.x;
    uint _347 = (_345 + uint(float(BLENDINDICES.x))) * 3u;
    uint _354 = _347 + 1u;
    uint _361 = _347 + 2u;
    precise float _368 = _334 * cbObjMatrix._m0[_347].x;
    precise float _369 = _334 * cbObjMatrix._m0[_354].x;
    precise float _370 = _334 * cbObjMatrix._m0[_361].x;
    precise float _371 = _334 * cbObjMatrix._m0[_347].y;
    precise float _372 = _334 * cbObjMatrix._m0[_354].y;
    precise float _373 = _334 * cbObjMatrix._m0[_361].y;
    precise float _374 = _334 * cbObjMatrix._m0[_347].z;
    precise float _375 = _334 * cbObjMatrix._m0[_354].z;
    precise float _376 = _334 * cbObjMatrix._m0[_361].z;
    precise float _377 = _334 * cbObjMatrix._m0[_347].w;
    precise float _378 = _334 * cbObjMatrix._m0[_354].w;
    precise float _379 = _334 * cbObjMatrix._m0[_361].w;
    uint _382 = (_345 + uint(float(BLENDINDICES.y))) * 3u;
    uint _389 = _382 + 1u;
    uint _396 = _382 + 2u;
    precise float _403 = _335 * cbObjMatrix._m0[_382].x;
    precise float _404 = _335 * cbObjMatrix._m0[_389].x;
    precise float _405 = _335 * cbObjMatrix._m0[_396].x;
    precise float _406 = _335 * cbObjMatrix._m0[_382].y;
    precise float _407 = _335 * cbObjMatrix._m0[_389].y;
    precise float _408 = _335 * cbObjMatrix._m0[_396].y;
    precise float _409 = _335 * cbObjMatrix._m0[_382].z;
    precise float _410 = _335 * cbObjMatrix._m0[_389].z;
    precise float _411 = _335 * cbObjMatrix._m0[_396].z;
    precise float _412 = _335 * cbObjMatrix._m0[_382].w;
    precise float _413 = _335 * cbObjMatrix._m0[_389].w;
    precise float _414 = _335 * cbObjMatrix._m0[_396].w;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    precise float _418 = _371 + _406;
    precise float _419 = _372 + _407;
    precise float _420 = _373 + _408;
    precise float _421 = _374 + _409;
    precise float _422 = _375 + _410;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    precise float _426 = _379 + _414;
    uint _429 = (_345 + uint(float(BLENDINDICES.z))) * 3u;
    uint _436 = _429 + 1u;
    uint _443 = _429 + 2u;
    precise float _450 = _336 * cbObjMatrix._m0[_429].x;
    precise float _451 = _336 * cbObjMatrix._m0[_436].x;
    precise float _452 = _336 * cbObjMatrix._m0[_443].x;
    precise float _453 = _336 * cbObjMatrix._m0[_429].y;
    precise float _454 = _336 * cbObjMatrix._m0[_436].y;
    precise float _455 = _336 * cbObjMatrix._m0[_443].y;
    precise float _456 = _336 * cbObjMatrix._m0[_429].z;
    precise float _457 = _336 * cbObjMatrix._m0[_436].z;
    precise float _458 = _336 * cbObjMatrix._m0[_443].z;
    precise float _459 = _336 * cbObjMatrix._m0[_429].w;
    precise float _460 = _336 * cbObjMatrix._m0[_436].w;
    precise float _461 = _336 * cbObjMatrix._m0[_443].w;
    precise float _462 = _415 + _450;
    precise float _463 = _416 + _451;
    precise float _464 = _417 + _452;
    precise float _465 = _418 + _453;
    precise float _466 = _419 + _454;
    precise float _467 = _420 + _455;
    precise float _468 = _421 + _456;
    precise float _469 = _422 + _457;
    precise float _470 = _423 + _458;
    precise float _471 = _424 + _459;
    precise float _472 = _425 + _460;
    precise float _473 = _426 + _461;
    uint _476 = (_345 + uint(float(BLENDINDICES.w))) * 3u;
    uint _483 = _476 + 1u;
    uint _490 = _476 + 2u;
    precise float _497 = _337 * cbObjMatrix._m0[_476].x;
    precise float _498 = _337 * cbObjMatrix._m0[_483].x;
    precise float _499 = _337 * cbObjMatrix._m0[_490].x;
    precise float _500 = _337 * cbObjMatrix._m0[_476].y;
    precise float _501 = _337 * cbObjMatrix._m0[_483].y;
    precise float _502 = _337 * cbObjMatrix._m0[_490].y;
    precise float _503 = _337 * cbObjMatrix._m0[_476].z;
    precise float _504 = _337 * cbObjMatrix._m0[_483].z;
    precise float _505 = _337 * cbObjMatrix._m0[_490].z;
    precise float _506 = _337 * cbObjMatrix._m0[_476].w;
    precise float _507 = _337 * cbObjMatrix._m0[_483].w;
    precise float _508 = _337 * cbObjMatrix._m0[_490].w;
    precise float _509 = _462 + _497;
    precise float _510 = _463 + _498;
    precise float _511 = _464 + _499;
    precise float _512 = _465 + _500;
    precise float _513 = _466 + _501;
    precise float _514 = _467 + _502;
    precise float _515 = _468 + _503;
    precise float _516 = _469 + _504;
    precise float _517 = _470 + _505;
    precise float _518 = _471 + _506;
    precise float _519 = _472 + _507;
    precise float _520 = _473 + _508;
    precise float _521 = _316 * _509;
    precise float _522 = _317 * _512;
    precise float _523 = _522 + _521;
    precise float _524 = _318 * _515;
    precise float _525 = _524 + _523;
    precise float _526 = 1.0 * _518;
    precise float _527 = _526 + _525;
    precise float _528 = _316 * _510;
    precise float _529 = _317 * _513;
    precise float _530 = _529 + _528;
    precise float _531 = _318 * _516;
    precise float _532 = _531 + _530;
    precise float _533 = 1.0 * _519;
    precise float _534 = _533 + _532;
    precise float _535 = _316 * _511;
    precise float _536 = _317 * _514;
    precise float _537 = _536 + _535;
    precise float _538 = _318 * _517;
    precise float _539 = _538 + _537;
    precise float _540 = 1.0 * _520;
    precise float _541 = _540 + _539;
    float _712 = fma(_239, _515, fma(_238, _512, _509 * _236));
    float _715 = fma(_239, _516, fma(_238, _513, _510 * _236));
    float _718 = fma(_239, _517, fma(_238, _514, _511 * _236));
    precise float _729 = _527 + 0.0;
    precise float _730 = _534 + 0.0;
    precise float _731 = _541 + 0.0;
    float _738 = (((((cbPrevObjMatrix._m0[_382].w * _335) + (cbPrevObjMatrix._m0[_347].w * _334)) + (cbPrevObjMatrix._m0[_429].w * _336)) + (cbPrevObjMatrix._m0[_476].w * _337)) + fma(_318, (((cbPrevObjMatrix._m0[_382].z * _335) + (cbPrevObjMatrix._m0[_347].z * _334)) + (cbPrevObjMatrix._m0[_429].z * _336)) + (cbPrevObjMatrix._m0[_476].z * _337), fma(_317, (((cbPrevObjMatrix._m0[_382].y * _335) + (cbPrevObjMatrix._m0[_347].y * _334)) + (cbPrevObjMatrix._m0[_429].y * _336)) + (cbPrevObjMatrix._m0[_476].y * _337), ((((cbPrevObjMatrix._m0[_382].x * _335) + (cbPrevObjMatrix._m0[_347].x * _334)) + (cbPrevObjMatrix._m0[_429].x * _336)) + (cbPrevObjMatrix._m0[_476].x * _337)) * _316))) - cbSceneParam._m0[28u].x;
    float _739 = (((((cbPrevObjMatrix._m0[_389].w * _335) + (cbPrevObjMatrix._m0[_354].w * _334)) + (cbPrevObjMatrix._m0[_436].w * _336)) + (cbPrevObjMatrix._m0[_483].w * _337)) + fma(_318, (((cbPrevObjMatrix._m0[_389].z * _335) + (cbPrevObjMatrix._m0[_354].z * _334)) + (cbPrevObjMatrix._m0[_436].z * _336)) + (cbPrevObjMatrix._m0[_483].z * _337), fma(_317, (((cbPrevObjMatrix._m0[_389].y * _335) + (cbPrevObjMatrix._m0[_354].y * _334)) + (cbPrevObjMatrix._m0[_436].y * _336)) + (cbPrevObjMatrix._m0[_483].y * _337), ((((cbPrevObjMatrix._m0[_389].x * _335) + (cbPrevObjMatrix._m0[_354].x * _334)) + (cbPrevObjMatrix._m0[_436].x * _336)) + (cbPrevObjMatrix._m0[_483].x * _337)) * _316))) - cbSceneParam._m0[28u].y;
    float _740 = (((((cbPrevObjMatrix._m0[_396].w * _335) + (cbPrevObjMatrix._m0[_361].w * _334)) + (cbPrevObjMatrix._m0[_443].w * _336)) + (cbPrevObjMatrix._m0[_490].w * _337)) + fma(_318, (((cbPrevObjMatrix._m0[_396].z * _335) + (cbPrevObjMatrix._m0[_361].z * _334)) + (cbPrevObjMatrix._m0[_443].z * _336)) + (cbPrevObjMatrix._m0[_490].z * _337), fma(_317, (((cbPrevObjMatrix._m0[_396].y * _335) + (cbPrevObjMatrix._m0[_361].y * _334)) + (cbPrevObjMatrix._m0[_443].y * _336)) + (cbPrevObjMatrix._m0[_490].y * _337), ((((cbPrevObjMatrix._m0[_396].x * _335) + (cbPrevObjMatrix._m0[_361].x * _334)) + (cbPrevObjMatrix._m0[_443].x * _336)) + (cbPrevObjMatrix._m0[_490].x * _337)) * _316))) - cbSceneParam._m0[28u].z;
    precise float _790 = _729 - cbSceneParam._m0[3u].x;
    precise float _791 = _730 - cbSceneParam._m0[3u].y;
    precise float _792 = _731 - cbSceneParam._m0[3u].z;
    precise float _818 = _790 * cbSceneParam._m0[24u].x;
    precise float _819 = _791 * cbSceneParam._m0[24u].y;
    precise float _820 = _819 + _818;
    precise float _821 = _792 * cbSceneParam._m0[24u].z;
    precise float _822 = _821 + _820;
    precise float _823 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _824 = _823 + _822;
    precise float _825 = _790 * cbSceneParam._m0[25u].x;
    precise float _826 = _791 * cbSceneParam._m0[25u].y;
    precise float _827 = _826 + _825;
    precise float _828 = _792 * cbSceneParam._m0[25u].z;
    precise float _829 = _828 + _827;
    precise float _830 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _831 = _830 + _829;
    precise float _832 = _790 * cbSceneParam._m0[26u].x;
    precise float _833 = _791 * cbSceneParam._m0[26u].y;
    precise float _834 = _833 + _832;
    precise float _835 = _792 * cbSceneParam._m0[26u].z;
    precise float _836 = _835 + _834;
    precise float _837 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _838 = _837 + _836;
    precise float _839 = _790 * cbSceneParam._m0[27u].x;
    precise float _840 = _791 * cbSceneParam._m0[27u].y;
    precise float _841 = _840 + _839;
    precise float _842 = _792 * cbSceneParam._m0[27u].z;
    precise float _843 = _842 + _841;
    precise float _844 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _845 = _844 + _843;
    gl_Position.x = _824;
    gl_Position.y = _831;
    gl_Position.z = _838;
    gl_Position.w = _845;
    POSITION_1.x = _824;
    POSITION_1.y = _831;
    POSITION_1.z = _838;
    POSITION_1.w = _845;
    NORMAL_1.x = _712;
    NORMAL_1.y = _715;
    NORMAL_1.z = _718;
    NORMAL_1.w = float(_326);
    TANGENT_1.x = fma(_250, _515, fma(_249, _512, _509 * _248));
    TANGENT_1.y = fma(_250, _516, fma(_249, _513, _510 * _248));
    TANGENT_1.z = fma(_250, _517, fma(_249, _514, _511 * _248));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1_1.x = _227;
    TEXCOORD_1_1.y = _228;
    TEXCOORD_1_1.z = TEXCOORD_1.x;
    TEXCOORD_5.x = TEXCOORD_2.x;
    TEXCOORD_5.y = TEXCOORD_2.y;
    TEXCOORD_5.z = TEXCOORD_2.z;
    TEXCOORD_5.w = COLOR_1.w;
    TEXCOORD_8.x = TEXCOORD_3.x;
    TEXCOORD_8.y = TEXCOORD_3.y;
    TEXCOORD_8.z = TEXCOORD_3.z;
    TEXCOORD_8.w = COLOR_1.x;
    TEXCOORD_13.x = _824;
    TEXCOORD_13.y = _831;
    TEXCOORD_13.z = _838;
    TEXCOORD_13.w = _845;
    TEXCOORD_14.x = fma(_740, cbSceneParam._m0[29u].z, fma(_739, cbSceneParam._m0[29u].y, _738 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_14.y = fma(_740, cbSceneParam._m0[30u].z, fma(_739, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _738)) + cbSceneParam._m0[30u].w;
    TEXCOORD_14.z = fma(_740, cbSceneParam._m0[31u].z, fma(_739, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _738)) + cbSceneParam._m0[31u].w;
    TEXCOORD_14.w = fma(_740, cbSceneParam._m0[32u].z, fma(_739, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _738)) + cbSceneParam._m0[32u].w;
    TEXCOORD_15.x = _712;
    TEXCOORD_15.y = _715;
    TEXCOORD_15.z = _718;
    gl_ClipDistance[0u] = dot(vec4(_824, _831, _838, _845), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_824, _831, _838, _845), vec4(cbInstanceData._m0[_339 + 3u]));
}


