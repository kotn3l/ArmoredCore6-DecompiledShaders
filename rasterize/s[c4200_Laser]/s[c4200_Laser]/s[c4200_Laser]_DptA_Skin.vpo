#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 0) uniform texture2D s_c4200_Laser_snp_0_Texture2D_10;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_2;
layout(location = 9) in vec4 TEXCOORD_3;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec3 TEXCOORD_1_1;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out vec4 TEXCOORD_8;
layout(location = 7) out vec2 TEXCOORD_12;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1_1.x = 0.0;
    TEXCOORD_1_1.y = 0.0;
    TEXCOORD_1_1.z = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_12.x = 0.0;
    TEXCOORD_12.y = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _203 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _205 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _210 = _203 * cbTexScroll._m0[0u].x;
    precise float _211 = _205 * cbTexScroll._m0[0u].y;
    precise float _214 = _210 + cbTexScroll._m0[0u].z;
    precise float _215 = _211 + cbTexScroll._m0[0u].w;
    precise float _219 = float(NORMAL.x) + (-127.0);
    precise float _221 = float(NORMAL.y) + (-127.0);
    precise float _222 = float(NORMAL.z) + (-127.0);
    precise float _223 = _219 * 0.0078740157186985015869140625;
    precise float _225 = _221 * 0.0078740157186985015869140625;
    precise float _226 = _222 * 0.0078740157186985015869140625;
    float _235 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _236 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _237 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _251 = _223 * cbMtdParam._m0[23u].w;
    precise float _252 = _225 * cbMtdParam._m0[24u].x;
    precise float _253 = _226 * cbMtdParam._m0[24u].y;
    precise float _258 = cbPerFrame._m0[22u].x * cbMtdParam._m0[20u].x;
    precise float _263 = _258 * cbMtdParam._m0[22u].w;
    precise float _264 = _258 * cbMtdParam._m0[23u].x;
    precise float _265 = _214 + _263;
    precise float _266 = _215 + _264;
    precise float _273 = _265 * cbTextureTilingScale._m0[0u].x;
    precise float _274 = cbTextureTilingScale._m0[0u].y * _266;
    precise float _275 = cbTextureTilingScale._m0[0u].z + _273;
    precise float _276 = cbTextureTilingScale._m0[0u].w + _274;
    precise float _286 = textureLod(sampler2D(s_c4200_Laser_snp_0_Texture2D_10, SS_DiffuseMap), vec2(_275, _276), 0.0).x * cbMtdParam._m0[18u].x;
    precise float _287 = _251 * _286;
    precise float _288 = _252 * _286;
    precise float _289 = _253 * _286;
    precise float _290 = _251 + _287;
    precise float _291 = _252 + _288;
    precise float _292 = _253 + _289;
    precise float _293 = _251 * 0.0;
    precise float _294 = _252 * 0.0;
    precise float _295 = _253 * 0.0;
    precise float _296 = _293 + _290;
    precise float _297 = _294 + _291;
    precise float _298 = _295 + _292;
    precise float _299 = TEXCOORD_3.x * _296;
    precise float _300 = TEXCOORD_3.y * _297;
    precise float _301 = TEXCOORD_3.z * _298;
    precise float _302 = POSITION.x + _299;
    precise float _303 = POSITION.y + _300;
    precise float _304 = POSITION.z + _301;
    uint _309 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _311 = texelFetch(g_InstanceIndexBuffer, int(_309));
    uint _312 = _311.x;
    precise float _313 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _318 = isnan(_313) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _313 : max(0.001000000047497451305389404296875, _313));
    precise float _320 = BLENDWEIGHT.x / _318;
    precise float _321 = BLENDWEIGHT.y / _318;
    precise float _322 = BLENDWEIGHT.z / _318;
    precise float _323 = BLENDWEIGHT.w / _318;
    uint _325 = _312 * 13u;
    uvec4 _330 = floatBitsToUint(cbInstanceData._m0[_325 + 4u]);
    uint _331 = _330.x;
    uint _333 = (_331 + uint(float(BLENDINDICES.x))) * 3u;
    uint _340 = _333 + 1u;
    uint _347 = _333 + 2u;
    precise float _354 = _320 * cbObjMatrix._m0[_333].x;
    precise float _355 = _320 * cbObjMatrix._m0[_340].x;
    precise float _356 = _320 * cbObjMatrix._m0[_347].x;
    precise float _357 = _320 * cbObjMatrix._m0[_333].y;
    precise float _358 = _320 * cbObjMatrix._m0[_340].y;
    precise float _359 = _320 * cbObjMatrix._m0[_347].y;
    precise float _360 = _320 * cbObjMatrix._m0[_333].z;
    precise float _361 = _320 * cbObjMatrix._m0[_340].z;
    precise float _362 = _320 * cbObjMatrix._m0[_347].z;
    precise float _363 = _320 * cbObjMatrix._m0[_333].w;
    precise float _364 = _320 * cbObjMatrix._m0[_340].w;
    precise float _365 = _320 * cbObjMatrix._m0[_347].w;
    uint _368 = (_331 + uint(float(BLENDINDICES.y))) * 3u;
    uint _375 = _368 + 1u;
    uint _382 = _368 + 2u;
    precise float _389 = _321 * cbObjMatrix._m0[_368].x;
    precise float _390 = _321 * cbObjMatrix._m0[_375].x;
    precise float _391 = _321 * cbObjMatrix._m0[_382].x;
    precise float _392 = _321 * cbObjMatrix._m0[_368].y;
    precise float _393 = _321 * cbObjMatrix._m0[_375].y;
    precise float _394 = _321 * cbObjMatrix._m0[_382].y;
    precise float _395 = _321 * cbObjMatrix._m0[_368].z;
    precise float _396 = _321 * cbObjMatrix._m0[_375].z;
    precise float _397 = _321 * cbObjMatrix._m0[_382].z;
    precise float _398 = _321 * cbObjMatrix._m0[_368].w;
    precise float _399 = _321 * cbObjMatrix._m0[_375].w;
    precise float _400 = _321 * cbObjMatrix._m0[_382].w;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    uint _415 = (_331 + uint(float(BLENDINDICES.z))) * 3u;
    uint _422 = _415 + 1u;
    uint _429 = _415 + 2u;
    precise float _436 = _322 * cbObjMatrix._m0[_415].x;
    precise float _437 = _322 * cbObjMatrix._m0[_422].x;
    precise float _438 = _322 * cbObjMatrix._m0[_429].x;
    precise float _439 = _322 * cbObjMatrix._m0[_415].y;
    precise float _440 = _322 * cbObjMatrix._m0[_422].y;
    precise float _441 = _322 * cbObjMatrix._m0[_429].y;
    precise float _442 = _322 * cbObjMatrix._m0[_415].z;
    precise float _443 = _322 * cbObjMatrix._m0[_422].z;
    precise float _444 = _322 * cbObjMatrix._m0[_429].z;
    precise float _445 = _322 * cbObjMatrix._m0[_415].w;
    precise float _446 = _322 * cbObjMatrix._m0[_422].w;
    precise float _447 = _322 * cbObjMatrix._m0[_429].w;
    precise float _448 = _401 + _436;
    precise float _449 = _402 + _437;
    precise float _450 = _403 + _438;
    precise float _451 = _404 + _439;
    precise float _452 = _405 + _440;
    precise float _453 = _406 + _441;
    precise float _454 = _407 + _442;
    precise float _455 = _408 + _443;
    precise float _456 = _409 + _444;
    precise float _457 = _410 + _445;
    precise float _458 = _411 + _446;
    precise float _459 = _412 + _447;
    uint _462 = (_331 + uint(float(BLENDINDICES.w))) * 3u;
    uint _469 = _462 + 1u;
    uint _476 = _462 + 2u;
    precise float _483 = _323 * cbObjMatrix._m0[_462].x;
    precise float _484 = _323 * cbObjMatrix._m0[_469].x;
    precise float _485 = _323 * cbObjMatrix._m0[_476].x;
    precise float _486 = _323 * cbObjMatrix._m0[_462].y;
    precise float _487 = _323 * cbObjMatrix._m0[_469].y;
    precise float _488 = _323 * cbObjMatrix._m0[_476].y;
    precise float _489 = _323 * cbObjMatrix._m0[_462].z;
    precise float _490 = _323 * cbObjMatrix._m0[_469].z;
    precise float _491 = _323 * cbObjMatrix._m0[_476].z;
    precise float _492 = _323 * cbObjMatrix._m0[_462].w;
    precise float _493 = _323 * cbObjMatrix._m0[_469].w;
    precise float _494 = _323 * cbObjMatrix._m0[_476].w;
    precise float _495 = _448 + _483;
    precise float _496 = _449 + _484;
    precise float _497 = _450 + _485;
    precise float _498 = _451 + _486;
    precise float _499 = _452 + _487;
    precise float _500 = _453 + _488;
    precise float _501 = _454 + _489;
    precise float _502 = _455 + _490;
    precise float _503 = _456 + _491;
    precise float _504 = _457 + _492;
    precise float _505 = _458 + _493;
    precise float _506 = _459 + _494;
    precise float _507 = _302 * _495;
    precise float _508 = _303 * _498;
    precise float _509 = _508 + _507;
    precise float _510 = _304 * _501;
    precise float _511 = _510 + _509;
    precise float _512 = 1.0 * _504;
    precise float _513 = _512 + _511;
    precise float _514 = _302 * _496;
    precise float _515 = _303 * _499;
    precise float _516 = _515 + _514;
    precise float _517 = _304 * _502;
    precise float _518 = _517 + _516;
    precise float _519 = 1.0 * _505;
    precise float _520 = _519 + _518;
    precise float _521 = _302 * _497;
    precise float _522 = _303 * _500;
    precise float _523 = _522 + _521;
    precise float _524 = _304 * _503;
    precise float _525 = _524 + _523;
    precise float _526 = 1.0 * _506;
    precise float _527 = _526 + _525;
    precise float _547 = _513 + 0.0;
    precise float _548 = _520 + 0.0;
    precise float _549 = _527 + 0.0;
    precise float _555 = _547 - cbSceneParam._m0[3u].x;
    precise float _556 = _548 - cbSceneParam._m0[3u].y;
    precise float _557 = _549 - cbSceneParam._m0[3u].z;
    precise float _583 = _555 * cbSceneParam._m0[24u].x;
    precise float _584 = _556 * cbSceneParam._m0[24u].y;
    precise float _585 = _584 + _583;
    precise float _586 = _557 * cbSceneParam._m0[24u].z;
    precise float _587 = _586 + _585;
    precise float _588 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _589 = _588 + _587;
    precise float _590 = _555 * cbSceneParam._m0[25u].x;
    precise float _591 = _556 * cbSceneParam._m0[25u].y;
    precise float _592 = _591 + _590;
    precise float _593 = _557 * cbSceneParam._m0[25u].z;
    precise float _594 = _593 + _592;
    precise float _595 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _596 = _595 + _594;
    precise float _597 = _555 * cbSceneParam._m0[26u].x;
    precise float _598 = _556 * cbSceneParam._m0[26u].y;
    precise float _599 = _598 + _597;
    precise float _600 = _557 * cbSceneParam._m0[26u].z;
    precise float _601 = _600 + _599;
    precise float _602 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _603 = _602 + _601;
    precise float _604 = _555 * cbSceneParam._m0[27u].x;
    precise float _605 = _556 * cbSceneParam._m0[27u].y;
    precise float _606 = _605 + _604;
    precise float _607 = _557 * cbSceneParam._m0[27u].z;
    precise float _608 = _607 + _606;
    precise float _609 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _610 = _609 + _608;
    gl_Position.x = _589;
    gl_Position.y = _596;
    gl_Position.z = _603;
    gl_Position.w = _610;
    POSITION_1.x = _589;
    POSITION_1.y = _596;
    POSITION_1.z = _603;
    POSITION_1.w = _610;
    NORMAL_1.x = fma(_226, _501, fma(_225, _498, _495 * _223));
    NORMAL_1.y = fma(_226, _502, fma(_225, _499, _496 * _223));
    NORMAL_1.z = fma(_226, _503, fma(_225, _500, _497 * _223));
    NORMAL_1.w = float(_312);
    TANGENT_1.x = fma(_237, _501, fma(_236, _498, _495 * _235));
    TANGENT_1.y = fma(_237, _502, fma(_236, _499, _496 * _235));
    TANGENT_1.z = fma(_237, _503, fma(_236, _500, _497 * _235));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1_1.x = _214;
    TEXCOORD_1_1.y = _215;
    TEXCOORD_1_1.z = TEXCOORD_1.x;
    TEXCOORD_5.x = TEXCOORD_2.x;
    TEXCOORD_5.y = TEXCOORD_2.y;
    TEXCOORD_5.z = TEXCOORD_2.z;
    TEXCOORD_5.w = COLOR_1.w;
    TEXCOORD_8.x = TEXCOORD_3.x;
    TEXCOORD_8.y = TEXCOORD_3.y;
    TEXCOORD_8.z = TEXCOORD_3.z;
    TEXCOORD_8.w = COLOR_1.x;
    TEXCOORD_12.x = _603;
    TEXCOORD_12.y = _610;
    gl_ClipDistance[0u] = dot(vec4(_589, _596, _603, _610), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_589, _596, _603, _610), vec4(cbInstanceData._m0[_325 + 3u]));
}


