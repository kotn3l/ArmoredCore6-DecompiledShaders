#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 0) uniform texture2D s_c4200_Laser_snp_0_Texture2D_10;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;
layout(location = 6) in vec4 TEXCOORD_2;
layout(location = 7) in vec4 TEXCOORD_3;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec3 TEXCOORD_1_1;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out vec4 TEXCOORD_8;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1_1.x = 0.0;
    TEXCOORD_1_1.y = 0.0;
    TEXCOORD_1_1.z = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    precise float _177 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _179 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _184 = _177 * cbTexScroll._m0[0u].x;
    precise float _185 = _179 * cbTexScroll._m0[0u].y;
    precise float _188 = _184 + cbTexScroll._m0[0u].z;
    precise float _189 = _185 + cbTexScroll._m0[0u].w;
    precise float _193 = float(NORMAL.x) + (-127.0);
    precise float _195 = float(NORMAL.y) + (-127.0);
    precise float _196 = float(NORMAL.z) + (-127.0);
    precise float _197 = _193 * 0.0078740157186985015869140625;
    precise float _199 = _195 * 0.0078740157186985015869140625;
    precise float _200 = _196 * 0.0078740157186985015869140625;
    float _210 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _211 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _212 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _222 = _197 * cbMtdParam._m0[23u].w;
    precise float _223 = _199 * cbMtdParam._m0[24u].x;
    precise float _224 = _200 * cbMtdParam._m0[24u].y;
    precise float _229 = cbPerFrame._m0[22u].x * cbMtdParam._m0[20u].x;
    precise float _234 = _229 * cbMtdParam._m0[22u].w;
    precise float _235 = _229 * cbMtdParam._m0[23u].x;
    precise float _236 = _188 + _234;
    precise float _237 = _189 + _235;
    precise float _244 = _236 * cbTextureTilingScale._m0[0u].x;
    precise float _245 = cbTextureTilingScale._m0[0u].y * _237;
    precise float _246 = cbTextureTilingScale._m0[0u].z + _244;
    precise float _247 = cbTextureTilingScale._m0[0u].w + _245;
    precise float _258 = textureLod(sampler2D(s_c4200_Laser_snp_0_Texture2D_10, SS_DiffuseMap), vec2(_246, _247), 0.0).x * cbMtdParam._m0[18u].x;
    precise float _259 = _222 * _258;
    precise float _260 = _223 * _258;
    precise float _261 = _224 * _258;
    precise float _262 = _222 + _259;
    precise float _263 = _223 + _260;
    precise float _264 = _224 + _261;
    precise float _265 = _222 * 0.0;
    precise float _266 = _223 * 0.0;
    precise float _267 = _224 * 0.0;
    precise float _268 = _265 + _262;
    precise float _269 = _266 + _263;
    precise float _270 = _267 + _264;
    precise float _271 = TEXCOORD_3.x * _268;
    precise float _272 = TEXCOORD_3.y * _269;
    precise float _273 = TEXCOORD_3.z * _270;
    precise float _274 = POSITION.x + _271;
    precise float _275 = POSITION.y + _272;
    precise float _276 = POSITION.z + _273;
    uint _281 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _283 = texelFetch(g_InstanceIndexBuffer, int(_281));
    uint _284 = _283.x;
    uint _294 = (floatBitsToUint(cbInstanceData._m0[(_284 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _301 = _294 + 1u;
    uint _308 = _294 + 2u;
    precise float _315 = _274 * cbObjMatrix._m0[_294].x;
    precise float _316 = _275 * cbObjMatrix._m0[_294].y;
    precise float _317 = _316 + _315;
    precise float _318 = _276 * cbObjMatrix._m0[_294].z;
    precise float _319 = _318 + _317;
    precise float _320 = 1.0 * cbObjMatrix._m0[_294].w;
    precise float _322 = _320 + _319;
    precise float _323 = _274 * cbObjMatrix._m0[_301].x;
    precise float _324 = _275 * cbObjMatrix._m0[_301].y;
    precise float _325 = _324 + _323;
    precise float _326 = _276 * cbObjMatrix._m0[_301].z;
    precise float _327 = _326 + _325;
    precise float _328 = 1.0 * cbObjMatrix._m0[_301].w;
    precise float _329 = _328 + _327;
    precise float _330 = _274 * cbObjMatrix._m0[_308].x;
    precise float _331 = _275 * cbObjMatrix._m0[_308].y;
    precise float _332 = _331 + _330;
    precise float _333 = _276 * cbObjMatrix._m0[_308].z;
    precise float _334 = _333 + _332;
    precise float _335 = 1.0 * cbObjMatrix._m0[_308].w;
    precise float _336 = _335 + _334;
    precise float _357 = _322 + 0.0;
    precise float _358 = _329 + 0.0;
    precise float _359 = _336 + 0.0;
    precise float _365 = _357 - cbSceneParam._m0[3u].x;
    precise float _366 = _358 - cbSceneParam._m0[3u].y;
    precise float _367 = _359 - cbSceneParam._m0[3u].z;
    precise float _393 = _365 * cbSceneParam._m0[24u].x;
    precise float _394 = _366 * cbSceneParam._m0[24u].y;
    precise float _395 = _394 + _393;
    precise float _396 = _367 * cbSceneParam._m0[24u].z;
    precise float _397 = _396 + _395;
    precise float _398 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _399 = _398 + _397;
    precise float _400 = _365 * cbSceneParam._m0[25u].x;
    precise float _401 = _366 * cbSceneParam._m0[25u].y;
    precise float _402 = _401 + _400;
    precise float _403 = _367 * cbSceneParam._m0[25u].z;
    precise float _404 = _403 + _402;
    precise float _405 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _406 = _405 + _404;
    precise float _407 = _365 * cbSceneParam._m0[26u].x;
    precise float _408 = _366 * cbSceneParam._m0[26u].y;
    precise float _409 = _408 + _407;
    precise float _410 = _367 * cbSceneParam._m0[26u].z;
    precise float _411 = _410 + _409;
    precise float _412 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _413 = _412 + _411;
    precise float _414 = _365 * cbSceneParam._m0[27u].x;
    precise float _415 = _366 * cbSceneParam._m0[27u].y;
    precise float _416 = _415 + _414;
    precise float _417 = _367 * cbSceneParam._m0[27u].z;
    precise float _418 = _417 + _416;
    precise float _419 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _420 = _419 + _418;
    gl_Position.x = _399;
    gl_Position.y = _406;
    gl_Position.z = _413;
    gl_Position.w = _420;
    POSITION_1.x = _399;
    POSITION_1.y = _406;
    POSITION_1.z = _413;
    POSITION_1.w = _420;
    NORMAL_1.x = fma(_200, cbObjMatrix._m0[_294].z, fma(_199, cbObjMatrix._m0[_294].y, cbObjMatrix._m0[_294].x * _197));
    NORMAL_1.y = fma(_200, cbObjMatrix._m0[_301].z, fma(_199, cbObjMatrix._m0[_301].y, cbObjMatrix._m0[_301].x * _197));
    NORMAL_1.z = fma(_200, cbObjMatrix._m0[_308].z, fma(_199, cbObjMatrix._m0[_308].y, cbObjMatrix._m0[_308].x * _197));
    NORMAL_1.w = float(_284);
    TANGENT_1.x = fma(_212, cbObjMatrix._m0[_294].z, fma(_211, cbObjMatrix._m0[_294].y, cbObjMatrix._m0[_294].x * _210));
    TANGENT_1.y = fma(_212, cbObjMatrix._m0[_301].z, fma(_211, cbObjMatrix._m0[_301].y, cbObjMatrix._m0[_301].x * _210));
    TANGENT_1.z = fma(_212, cbObjMatrix._m0[_308].z, fma(_211, cbObjMatrix._m0[_308].y, cbObjMatrix._m0[_308].x * _210));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1_1.x = _188;
    TEXCOORD_1_1.y = _189;
    TEXCOORD_1_1.z = TEXCOORD_1.x;
    TEXCOORD_5.x = TEXCOORD_2.x;
    TEXCOORD_5.y = TEXCOORD_2.y;
    TEXCOORD_5.z = TEXCOORD_2.z;
    TEXCOORD_5.w = COLOR_1.w;
    TEXCOORD_8.x = TEXCOORD_3.x;
    TEXCOORD_8.y = TEXCOORD_3.y;
    TEXCOORD_8.z = TEXCOORD_3.z;
    TEXCOORD_8.w = COLOR_1.x;
}


