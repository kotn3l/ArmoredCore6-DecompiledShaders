#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out float TEXCOORD_4;
layout(location = 6) out vec4 TEXCOORD_7;
layout(location = 7) out vec4 TEXCOORD_8;
layout(location = 5, component = 1) out vec3 TEXCOORD_9;

void main()
{
    uint _84 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_7.z = 0.0;
    TEXCOORD_7.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    float _208 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _210 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _211 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _218 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _219 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _220 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _222 = float(BLENDINDICES.x);
    float _223 = float(BLENDINDICES.y);
    float _224 = float(BLENDINDICES.z);
    float _225 = float(BLENDINDICES.w);
    bool _231 = floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u;
    float _452;
    float _453;
    float _454;
    float _455;
    float _456;
    float _457;
    float _458;
    float _459;
    float _460;
    float _461;
    float _462;
    float _463;
    if (_231)
    {
        uint _236 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _84;
        precise float _240 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _245 = isnan(_240) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _240 : max(0.001000000047497451305389404296875, _240));
        precise float _247 = BLENDWEIGHT.x / _245;
        precise float _248 = BLENDWEIGHT.y / _245;
        precise float _249 = BLENDWEIGHT.z / _245;
        precise float _250 = BLENDWEIGHT.w / _245;
        uvec4 _257 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_236)).x * 13u) + 4u]);
        uint _258 = _257.x;
        uint _260 = (_258 + uint(_222)) * 3u;
        uint _267 = _260 + 1u;
        uint _274 = _260 + 2u;
        precise float _281 = _247 * cbObjMatrix._m0[_260].x;
        precise float _282 = _247 * cbObjMatrix._m0[_267].x;
        precise float _283 = _247 * cbObjMatrix._m0[_274].x;
        precise float _284 = _247 * cbObjMatrix._m0[_260].y;
        precise float _285 = _247 * cbObjMatrix._m0[_267].y;
        precise float _286 = _247 * cbObjMatrix._m0[_274].y;
        precise float _287 = _247 * cbObjMatrix._m0[_260].z;
        precise float _288 = _247 * cbObjMatrix._m0[_267].z;
        precise float _289 = _247 * cbObjMatrix._m0[_274].z;
        precise float _290 = _247 * cbObjMatrix._m0[_260].w;
        precise float _291 = _247 * cbObjMatrix._m0[_267].w;
        precise float _292 = _247 * cbObjMatrix._m0[_274].w;
        uint _295 = (_258 + uint(_223)) * 3u;
        uint _302 = _295 + 1u;
        uint _309 = _295 + 2u;
        precise float _316 = _248 * cbObjMatrix._m0[_295].x;
        precise float _317 = _248 * cbObjMatrix._m0[_302].x;
        precise float _318 = _248 * cbObjMatrix._m0[_309].x;
        precise float _319 = _248 * cbObjMatrix._m0[_295].y;
        precise float _320 = _248 * cbObjMatrix._m0[_302].y;
        precise float _321 = _248 * cbObjMatrix._m0[_309].y;
        precise float _322 = _248 * cbObjMatrix._m0[_295].z;
        precise float _323 = _248 * cbObjMatrix._m0[_302].z;
        precise float _324 = _248 * cbObjMatrix._m0[_309].z;
        precise float _325 = _248 * cbObjMatrix._m0[_295].w;
        precise float _326 = _248 * cbObjMatrix._m0[_302].w;
        precise float _327 = _248 * cbObjMatrix._m0[_309].w;
        precise float _328 = _281 + _316;
        precise float _329 = _282 + _317;
        precise float _330 = _283 + _318;
        precise float _331 = _284 + _319;
        precise float _332 = _285 + _320;
        precise float _333 = _286 + _321;
        precise float _334 = _287 + _322;
        precise float _335 = _288 + _323;
        precise float _336 = _289 + _324;
        precise float _337 = _290 + _325;
        precise float _338 = _291 + _326;
        precise float _339 = _292 + _327;
        uint _342 = (_258 + uint(_224)) * 3u;
        uint _349 = _342 + 1u;
        uint _356 = _342 + 2u;
        precise float _363 = _249 * cbObjMatrix._m0[_342].x;
        precise float _364 = _249 * cbObjMatrix._m0[_349].x;
        precise float _365 = _249 * cbObjMatrix._m0[_356].x;
        precise float _366 = _249 * cbObjMatrix._m0[_342].y;
        precise float _367 = _249 * cbObjMatrix._m0[_349].y;
        precise float _368 = _249 * cbObjMatrix._m0[_356].y;
        precise float _369 = _249 * cbObjMatrix._m0[_342].z;
        precise float _370 = _249 * cbObjMatrix._m0[_349].z;
        precise float _371 = _249 * cbObjMatrix._m0[_356].z;
        precise float _372 = _249 * cbObjMatrix._m0[_342].w;
        precise float _373 = _249 * cbObjMatrix._m0[_349].w;
        precise float _374 = _249 * cbObjMatrix._m0[_356].w;
        precise float _375 = _328 + _363;
        precise float _376 = _329 + _364;
        precise float _377 = _330 + _365;
        precise float _378 = _331 + _366;
        precise float _379 = _332 + _367;
        precise float _380 = _333 + _368;
        precise float _381 = _334 + _369;
        precise float _382 = _335 + _370;
        precise float _383 = _336 + _371;
        precise float _384 = _337 + _372;
        precise float _385 = _338 + _373;
        precise float _386 = _339 + _374;
        uint _389 = (_258 + uint(_225)) * 3u;
        uint _396 = _389 + 1u;
        uint _403 = _389 + 2u;
        precise float _410 = _250 * cbObjMatrix._m0[_389].x;
        precise float _411 = _250 * cbObjMatrix._m0[_396].x;
        precise float _412 = _250 * cbObjMatrix._m0[_403].x;
        precise float _413 = _250 * cbObjMatrix._m0[_389].y;
        precise float _414 = _250 * cbObjMatrix._m0[_396].y;
        precise float _415 = _250 * cbObjMatrix._m0[_403].y;
        precise float _416 = _250 * cbObjMatrix._m0[_389].z;
        precise float _417 = _250 * cbObjMatrix._m0[_396].z;
        precise float _418 = _250 * cbObjMatrix._m0[_403].z;
        precise float _419 = _250 * cbObjMatrix._m0[_389].w;
        precise float _420 = _250 * cbObjMatrix._m0[_396].w;
        precise float _421 = _250 * cbObjMatrix._m0[_403].w;
        precise float _422 = _375 + _410;
        precise float _423 = _376 + _411;
        precise float _424 = _377 + _412;
        precise float _425 = _378 + _413;
        precise float _426 = _379 + _414;
        precise float _427 = _380 + _415;
        precise float _428 = _381 + _416;
        precise float _429 = _382 + _417;
        precise float _430 = _383 + _418;
        precise float _431 = _384 + _419;
        precise float _432 = _385 + _420;
        precise float _433 = _386 + _421;
        _452 = _422;
        _453 = _425;
        _454 = _428;
        _455 = _431;
        _456 = _423;
        _457 = _426;
        _458 = _429;
        _459 = _432;
        _460 = _424;
        _461 = _427;
        _462 = _430;
        _463 = _433;
    }
    else
    {
        _452 = cbvModelParam._m0[0u].x;
        _453 = cbvModelParam._m0[0u].y;
        _454 = cbvModelParam._m0[0u].z;
        _455 = cbvModelParam._m0[0u].w;
        _456 = cbvModelParam._m0[1u].x;
        _457 = cbvModelParam._m0[1u].y;
        _458 = cbvModelParam._m0[1u].z;
        _459 = cbvModelParam._m0[1u].w;
        _460 = cbvModelParam._m0[2u].x;
        _461 = cbvModelParam._m0[2u].y;
        _462 = cbvModelParam._m0[2u].z;
        _463 = cbvModelParam._m0[2u].w;
    }
    precise float _464 = POSITION.x * _452;
    precise float _465 = POSITION.y * _453;
    precise float _466 = _465 + _464;
    precise float _467 = POSITION.z * _454;
    precise float _468 = _467 + _466;
    precise float _469 = 1.0 * _455;
    precise float _470 = _469 + _468;
    precise float _471 = POSITION.x * _456;
    precise float _472 = POSITION.y * _457;
    precise float _473 = _472 + _471;
    precise float _474 = POSITION.z * _458;
    precise float _475 = _474 + _473;
    precise float _476 = 1.0 * _459;
    precise float _477 = _476 + _475;
    precise float _478 = POSITION.x * _460;
    precise float _479 = POSITION.y * _461;
    precise float _480 = _479 + _478;
    precise float _481 = POSITION.z * _462;
    precise float _482 = _481 + _480;
    precise float _483 = 1.0 * _463;
    precise float _484 = _483 + _482;
    float _702;
    float _703;
    float _704;
    float _705;
    float _706;
    float _707;
    float _708;
    float _709;
    float _710;
    float _711;
    float _712;
    float _713;
    if (_231)
    {
        float _485 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _488 = isnan(_485) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _485 : max(0.001000000047497451305389404296875, _485));
        float _489 = BLENDWEIGHT.x / _488;
        float _490 = BLENDWEIGHT.y / _488;
        float _491 = BLENDWEIGHT.z / _488;
        float _492 = BLENDWEIGHT.w / _488;
        uint _498 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _84;
        uvec4 _506 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_498)).x * 13u) + 4u]);
        uint _507 = _506.x;
        uint _509 = (_507 + uint(_222)) * 3u;
        uint _516 = _509 + 1u;
        uint _523 = _509 + 2u;
        uint _544 = (_507 + uint(_223)) * 3u;
        uint _551 = _544 + 1u;
        uint _558 = _544 + 2u;
        uint _591 = (_507 + uint(_224)) * 3u;
        uint _598 = _591 + 1u;
        uint _605 = _591 + 2u;
        uint _638 = (_507 + uint(_225)) * 3u;
        uint _645 = _638 + 1u;
        uint _652 = _638 + 2u;
        _702 = (((cbPrevObjMatrix._m0[_544].x * _490) + (cbPrevObjMatrix._m0[_509].x * _489)) + (cbPrevObjMatrix._m0[_591].x * _491)) + (cbPrevObjMatrix._m0[_638].x * _492);
        _703 = (((cbPrevObjMatrix._m0[_544].y * _490) + (cbPrevObjMatrix._m0[_509].y * _489)) + (cbPrevObjMatrix._m0[_591].y * _491)) + (cbPrevObjMatrix._m0[_638].y * _492);
        _704 = (((cbPrevObjMatrix._m0[_544].z * _490) + (cbPrevObjMatrix._m0[_509].z * _489)) + (cbPrevObjMatrix._m0[_591].z * _491)) + (cbPrevObjMatrix._m0[_638].z * _492);
        _705 = (((cbPrevObjMatrix._m0[_544].w * _490) + (cbPrevObjMatrix._m0[_509].w * _489)) + (cbPrevObjMatrix._m0[_591].w * _491)) + (cbPrevObjMatrix._m0[_638].w * _492);
        _706 = (((cbPrevObjMatrix._m0[_551].x * _490) + (cbPrevObjMatrix._m0[_516].x * _489)) + (cbPrevObjMatrix._m0[_598].x * _491)) + (cbPrevObjMatrix._m0[_645].x * _492);
        _707 = (((cbPrevObjMatrix._m0[_551].y * _490) + (cbPrevObjMatrix._m0[_516].y * _489)) + (cbPrevObjMatrix._m0[_598].y * _491)) + (cbPrevObjMatrix._m0[_645].y * _492);
        _708 = (((cbPrevObjMatrix._m0[_551].z * _490) + (cbPrevObjMatrix._m0[_516].z * _489)) + (cbPrevObjMatrix._m0[_598].z * _491)) + (cbPrevObjMatrix._m0[_645].z * _492);
        _709 = (((cbPrevObjMatrix._m0[_551].w * _490) + (cbPrevObjMatrix._m0[_516].w * _489)) + (cbPrevObjMatrix._m0[_598].w * _491)) + (cbPrevObjMatrix._m0[_645].w * _492);
        _710 = (((cbPrevObjMatrix._m0[_558].x * _490) + (cbPrevObjMatrix._m0[_523].x * _489)) + (cbPrevObjMatrix._m0[_605].x * _491)) + (cbPrevObjMatrix._m0[_652].x * _492);
        _711 = (((cbPrevObjMatrix._m0[_558].y * _490) + (cbPrevObjMatrix._m0[_523].y * _489)) + (cbPrevObjMatrix._m0[_605].y * _491)) + (cbPrevObjMatrix._m0[_652].y * _492);
        _712 = (((cbPrevObjMatrix._m0[_558].z * _490) + (cbPrevObjMatrix._m0[_523].z * _489)) + (cbPrevObjMatrix._m0[_605].z * _491)) + (cbPrevObjMatrix._m0[_652].z * _492);
        _713 = (((cbPrevObjMatrix._m0[_558].w * _490) + (cbPrevObjMatrix._m0[_523].w * _489)) + (cbPrevObjMatrix._m0[_605].w * _491)) + (cbPrevObjMatrix._m0[_652].w * _492);
    }
    else
    {
        _702 = cbvModelParam._m0[3u].x;
        _703 = cbvModelParam._m0[3u].y;
        _704 = cbvModelParam._m0[3u].z;
        _705 = cbvModelParam._m0[3u].w;
        _706 = cbvModelParam._m0[4u].x;
        _707 = cbvModelParam._m0[4u].y;
        _708 = cbvModelParam._m0[4u].z;
        _709 = cbvModelParam._m0[4u].w;
        _710 = cbvModelParam._m0[5u].x;
        _711 = cbvModelParam._m0[5u].y;
        _712 = cbvModelParam._m0[5u].z;
        _713 = cbvModelParam._m0[5u].w;
    }
    float _732 = (fma(POSITION.z, _704, fma(POSITION.y, _703, _702 * POSITION.x)) + _705) - cbSceneParam._m0[28u].x;
    float _733 = (fma(POSITION.z, _708, fma(POSITION.y, _707, _706 * POSITION.x)) + _709) - cbSceneParam._m0[28u].y;
    float _734 = (fma(POSITION.z, _712, fma(POSITION.y, _711, _710 * POSITION.x)) + _713) - cbSceneParam._m0[28u].z;
    float _781 = fma(_211, _454, fma(_210, _453, _452 * _208));
    float _784 = fma(_211, _458, fma(_210, _457, _456 * _208));
    float _787 = fma(_211, _462, fma(_210, _461, _460 * _208));
    uint _792 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _84;
    precise float _811 = _470 - cbSceneParam._m0[3u].x;
    precise float _812 = _477 - cbSceneParam._m0[3u].y;
    precise float _813 = _484 - cbSceneParam._m0[3u].z;
    precise float _841 = _811 * cbSceneParam._m0[24u].x;
    precise float _842 = _812 * cbSceneParam._m0[24u].y;
    precise float _843 = _842 + _841;
    precise float _844 = _813 * cbSceneParam._m0[24u].z;
    precise float _845 = _844 + _843;
    precise float _846 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _847 = _846 + _845;
    precise float _848 = _811 * cbSceneParam._m0[25u].x;
    precise float _849 = _812 * cbSceneParam._m0[25u].y;
    precise float _850 = _849 + _848;
    precise float _851 = _813 * cbSceneParam._m0[25u].z;
    precise float _852 = _851 + _850;
    precise float _853 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _854 = _853 + _852;
    precise float _855 = _811 * cbSceneParam._m0[26u].x;
    precise float _856 = _812 * cbSceneParam._m0[26u].y;
    precise float _857 = _856 + _855;
    precise float _858 = _813 * cbSceneParam._m0[26u].z;
    precise float _859 = _858 + _857;
    precise float _860 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _861 = _860 + _859;
    precise float _862 = _811 * cbSceneParam._m0[27u].x;
    precise float _863 = _812 * cbSceneParam._m0[27u].y;
    precise float _864 = _863 + _862;
    precise float _865 = _813 * cbSceneParam._m0[27u].z;
    precise float _866 = _865 + _864;
    precise float _867 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _868 = _867 + _866;
    gl_Position.x = _847;
    gl_Position.y = _854;
    gl_Position.z = _861;
    gl_Position.w = _868;
    POSITION_1.x = _847;
    POSITION_1.y = _854;
    POSITION_1.z = _861;
    POSITION_1.w = _868;
    NORMAL_1.x = _781;
    NORMAL_1.y = _784;
    NORMAL_1.z = _787;
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_792)).x);
    TANGENT_1.x = fma(_220, _454, fma(_219, _453, _452 * _218));
    TANGENT_1.y = fma(_220, _458, fma(_219, _457, _456 * _218));
    TANGENT_1.z = fma(_220, _462, fma(_219, _461, _460 * _218));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4 = COLOR_1.x;
    TEXCOORD_7.x = _847;
    TEXCOORD_7.y = _854;
    TEXCOORD_7.z = _861;
    TEXCOORD_7.w = _868;
    TEXCOORD_8.x = fma(_734, cbSceneParam._m0[29u].z, fma(_733, cbSceneParam._m0[29u].y, _732 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_8.y = fma(_734, cbSceneParam._m0[30u].z, fma(_733, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _732)) + cbSceneParam._m0[30u].w;
    TEXCOORD_8.z = fma(_734, cbSceneParam._m0[31u].z, fma(_733, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _732)) + cbSceneParam._m0[31u].w;
    TEXCOORD_8.w = fma(_734, cbSceneParam._m0[32u].z, fma(_733, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _732)) + cbSceneParam._m0[32u].w;
    TEXCOORD_9.x = _781;
    TEXCOORD_9.y = _784;
    TEXCOORD_9.z = _787;
}


