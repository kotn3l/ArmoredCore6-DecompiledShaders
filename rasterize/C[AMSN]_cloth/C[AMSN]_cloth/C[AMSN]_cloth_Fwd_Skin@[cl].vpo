#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out float TEXCOORD_4;

void main()
{
    uint _76 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    float _181 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _183 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _184 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _191 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _192 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _193 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _433;
    float _434;
    float _435;
    float _436;
    float _437;
    float _438;
    float _439;
    float _440;
    float _441;
    float _442;
    float _443;
    float _444;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _217 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _76;
        precise float _221 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _226 = isnan(_221) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _221 : max(0.001000000047497451305389404296875, _221));
        precise float _228 = BLENDWEIGHT.x / _226;
        precise float _229 = BLENDWEIGHT.y / _226;
        precise float _230 = BLENDWEIGHT.z / _226;
        precise float _231 = BLENDWEIGHT.w / _226;
        uvec4 _238 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_217)).x * 13u) + 4u]);
        uint _239 = _238.x;
        uint _241 = (_239 + uint(float(BLENDINDICES.x))) * 3u;
        uint _248 = _241 + 1u;
        uint _255 = _241 + 2u;
        precise float _262 = _228 * cbObjMatrix._m0[_241].x;
        precise float _263 = _228 * cbObjMatrix._m0[_248].x;
        precise float _264 = _228 * cbObjMatrix._m0[_255].x;
        precise float _265 = _228 * cbObjMatrix._m0[_241].y;
        precise float _266 = _228 * cbObjMatrix._m0[_248].y;
        precise float _267 = _228 * cbObjMatrix._m0[_255].y;
        precise float _268 = _228 * cbObjMatrix._m0[_241].z;
        precise float _269 = _228 * cbObjMatrix._m0[_248].z;
        precise float _270 = _228 * cbObjMatrix._m0[_255].z;
        precise float _271 = _228 * cbObjMatrix._m0[_241].w;
        precise float _272 = _228 * cbObjMatrix._m0[_248].w;
        precise float _273 = _228 * cbObjMatrix._m0[_255].w;
        uint _276 = (_239 + uint(float(BLENDINDICES.y))) * 3u;
        uint _283 = _276 + 1u;
        uint _290 = _276 + 2u;
        precise float _297 = _229 * cbObjMatrix._m0[_276].x;
        precise float _298 = _229 * cbObjMatrix._m0[_283].x;
        precise float _299 = _229 * cbObjMatrix._m0[_290].x;
        precise float _300 = _229 * cbObjMatrix._m0[_276].y;
        precise float _301 = _229 * cbObjMatrix._m0[_283].y;
        precise float _302 = _229 * cbObjMatrix._m0[_290].y;
        precise float _303 = _229 * cbObjMatrix._m0[_276].z;
        precise float _304 = _229 * cbObjMatrix._m0[_283].z;
        precise float _305 = _229 * cbObjMatrix._m0[_290].z;
        precise float _306 = _229 * cbObjMatrix._m0[_276].w;
        precise float _307 = _229 * cbObjMatrix._m0[_283].w;
        precise float _308 = _229 * cbObjMatrix._m0[_290].w;
        precise float _309 = _262 + _297;
        precise float _310 = _263 + _298;
        precise float _311 = _264 + _299;
        precise float _312 = _265 + _300;
        precise float _313 = _266 + _301;
        precise float _314 = _267 + _302;
        precise float _315 = _268 + _303;
        precise float _316 = _269 + _304;
        precise float _317 = _270 + _305;
        precise float _318 = _271 + _306;
        precise float _319 = _272 + _307;
        precise float _320 = _273 + _308;
        uint _323 = (_239 + uint(float(BLENDINDICES.z))) * 3u;
        uint _330 = _323 + 1u;
        uint _337 = _323 + 2u;
        precise float _344 = _230 * cbObjMatrix._m0[_323].x;
        precise float _345 = _230 * cbObjMatrix._m0[_330].x;
        precise float _346 = _230 * cbObjMatrix._m0[_337].x;
        precise float _347 = _230 * cbObjMatrix._m0[_323].y;
        precise float _348 = _230 * cbObjMatrix._m0[_330].y;
        precise float _349 = _230 * cbObjMatrix._m0[_337].y;
        precise float _350 = _230 * cbObjMatrix._m0[_323].z;
        precise float _351 = _230 * cbObjMatrix._m0[_330].z;
        precise float _352 = _230 * cbObjMatrix._m0[_337].z;
        precise float _353 = _230 * cbObjMatrix._m0[_323].w;
        precise float _354 = _230 * cbObjMatrix._m0[_330].w;
        precise float _355 = _230 * cbObjMatrix._m0[_337].w;
        precise float _356 = _309 + _344;
        precise float _357 = _310 + _345;
        precise float _358 = _311 + _346;
        precise float _359 = _312 + _347;
        precise float _360 = _313 + _348;
        precise float _361 = _314 + _349;
        precise float _362 = _315 + _350;
        precise float _363 = _316 + _351;
        precise float _364 = _317 + _352;
        precise float _365 = _318 + _353;
        precise float _366 = _319 + _354;
        precise float _367 = _320 + _355;
        uint _370 = (_239 + uint(float(BLENDINDICES.w))) * 3u;
        uint _377 = _370 + 1u;
        uint _384 = _370 + 2u;
        precise float _391 = _231 * cbObjMatrix._m0[_370].x;
        precise float _392 = _231 * cbObjMatrix._m0[_377].x;
        precise float _393 = _231 * cbObjMatrix._m0[_384].x;
        precise float _394 = _231 * cbObjMatrix._m0[_370].y;
        precise float _395 = _231 * cbObjMatrix._m0[_377].y;
        precise float _396 = _231 * cbObjMatrix._m0[_384].y;
        precise float _397 = _231 * cbObjMatrix._m0[_370].z;
        precise float _398 = _231 * cbObjMatrix._m0[_377].z;
        precise float _399 = _231 * cbObjMatrix._m0[_384].z;
        precise float _400 = _231 * cbObjMatrix._m0[_370].w;
        precise float _401 = _231 * cbObjMatrix._m0[_377].w;
        precise float _402 = _231 * cbObjMatrix._m0[_384].w;
        precise float _403 = _356 + _391;
        precise float _404 = _357 + _392;
        precise float _405 = _358 + _393;
        precise float _406 = _359 + _394;
        precise float _407 = _360 + _395;
        precise float _408 = _361 + _396;
        precise float _409 = _362 + _397;
        precise float _410 = _363 + _398;
        precise float _411 = _364 + _399;
        precise float _412 = _365 + _400;
        precise float _413 = _366 + _401;
        precise float _414 = _367 + _402;
        _433 = _403;
        _434 = _406;
        _435 = _409;
        _436 = _412;
        _437 = _404;
        _438 = _407;
        _439 = _410;
        _440 = _413;
        _441 = _405;
        _442 = _408;
        _443 = _411;
        _444 = _414;
    }
    else
    {
        _433 = cbvModelParam._m0[0u].x;
        _434 = cbvModelParam._m0[0u].y;
        _435 = cbvModelParam._m0[0u].z;
        _436 = cbvModelParam._m0[0u].w;
        _437 = cbvModelParam._m0[1u].x;
        _438 = cbvModelParam._m0[1u].y;
        _439 = cbvModelParam._m0[1u].z;
        _440 = cbvModelParam._m0[1u].w;
        _441 = cbvModelParam._m0[2u].x;
        _442 = cbvModelParam._m0[2u].y;
        _443 = cbvModelParam._m0[2u].z;
        _444 = cbvModelParam._m0[2u].w;
    }
    precise float _445 = POSITION.x * _433;
    precise float _446 = POSITION.y * _434;
    precise float _447 = _446 + _445;
    precise float _448 = POSITION.z * _435;
    precise float _449 = _448 + _447;
    precise float _450 = 1.0 * _436;
    precise float _451 = _450 + _449;
    precise float _452 = POSITION.x * _437;
    precise float _453 = POSITION.y * _438;
    precise float _454 = _453 + _452;
    precise float _455 = POSITION.z * _439;
    precise float _456 = _455 + _454;
    precise float _457 = 1.0 * _440;
    precise float _458 = _457 + _456;
    precise float _459 = POSITION.x * _441;
    precise float _460 = POSITION.y * _442;
    precise float _461 = _460 + _459;
    precise float _462 = POSITION.z * _443;
    precise float _463 = _462 + _461;
    precise float _464 = 1.0 * _444;
    precise float _465 = _464 + _463;
    uint _479 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _76;
    precise float _498 = _451 - cbSceneParam._m0[3u].x;
    precise float _499 = _458 - cbSceneParam._m0[3u].y;
    precise float _500 = _465 - cbSceneParam._m0[3u].z;
    precise float _528 = _498 * cbSceneParam._m0[24u].x;
    precise float _529 = _499 * cbSceneParam._m0[24u].y;
    precise float _530 = _529 + _528;
    precise float _531 = _500 * cbSceneParam._m0[24u].z;
    precise float _532 = _531 + _530;
    precise float _533 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _534 = _533 + _532;
    precise float _535 = _498 * cbSceneParam._m0[25u].x;
    precise float _536 = _499 * cbSceneParam._m0[25u].y;
    precise float _537 = _536 + _535;
    precise float _538 = _500 * cbSceneParam._m0[25u].z;
    precise float _539 = _538 + _537;
    precise float _540 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _541 = _540 + _539;
    precise float _542 = _498 * cbSceneParam._m0[26u].x;
    precise float _543 = _499 * cbSceneParam._m0[26u].y;
    precise float _544 = _543 + _542;
    precise float _545 = _500 * cbSceneParam._m0[26u].z;
    precise float _546 = _545 + _544;
    precise float _547 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _548 = _547 + _546;
    precise float _549 = _498 * cbSceneParam._m0[27u].x;
    precise float _550 = _499 * cbSceneParam._m0[27u].y;
    precise float _551 = _550 + _549;
    precise float _552 = _500 * cbSceneParam._m0[27u].z;
    precise float _553 = _552 + _551;
    precise float _554 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _555 = _554 + _553;
    gl_Position.x = _534;
    gl_Position.y = _541;
    gl_Position.z = _548;
    gl_Position.w = _555;
    POSITION_1.x = _534;
    POSITION_1.y = _541;
    POSITION_1.z = _548;
    POSITION_1.w = _555;
    NORMAL_1.x = fma(_184, _435, fma(_183, _434, _433 * _181));
    NORMAL_1.y = fma(_184, _439, fma(_183, _438, _437 * _181));
    NORMAL_1.z = fma(_184, _443, fma(_183, _442, _441 * _181));
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_479)).x);
    TANGENT_1.x = fma(_193, _435, fma(_192, _434, _433 * _191));
    TANGENT_1.y = fma(_193, _439, fma(_192, _438, _437 * _191));
    TANGENT_1.z = fma(_193, _443, fma(_192, _442, _441 * _191));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4 = COLOR_1.x;
}


