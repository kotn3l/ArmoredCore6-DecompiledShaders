#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 1) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 6) in vec4 TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1212;
float _1213;
float _1214;
float _1215;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _171 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _172 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _173 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _179 = inversesqrt(dot(vec3(_171, _172, _173), vec3(_171, _172, _173)));
    float _180 = _179 * _171;
    float _181 = _179 * _172;
    float _182 = _179 * _173;
    float _186 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _187 = _186 * NORMAL.x;
    float _188 = _186 * NORMAL.y;
    float _189 = _186 * NORMAL.z;
    float _193 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _194 = _193 * TANGENT.x;
    float _195 = _193 * TANGENT.y;
    float _196 = _193 * TANGENT.z;
    float _201;
    float _202;
    float _203;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _201 = (-0.0) - _187;
        _202 = (-0.0) - _188;
        _203 = (-0.0) - _189;
    }
    else
    {
        _201 = _187;
        _202 = _188;
        _203 = _189;
    }
    float _223 = cbMtdParam._m0[17u].y * cbPerFrame._m0[22u].x;
    uint _228 = uint(roundEven(NORMAL.w)) * 13u;
    uint _234 = _228 + 1u;
    uint _239 = _228 + 2u;
    float _249 = sqrt(((cbInstanceData._m0[_234].x * cbInstanceData._m0[_234].x) + (cbInstanceData._m0[_228].x * cbInstanceData._m0[_228].x)) + (cbInstanceData._m0[_239].x * cbInstanceData._m0[_239].x));
    float _255 = sqrt(((cbInstanceData._m0[_234].y * cbInstanceData._m0[_234].y) + (cbInstanceData._m0[_228].y * cbInstanceData._m0[_228].y)) + (cbInstanceData._m0[_239].y * cbInstanceData._m0[_239].y));
    float _256 = _249 * ((_223 * cbMtdParam._m0[22u].y) + TEXCOORD_4.x);
    float _257 = _255 * ((_223 * cbMtdParam._m0[22u].z) + TEXCOORD_4.y);
    vec4 _286 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * (_249 * ((_223 * cbMtdParam._m0[22u].w) + TEXCOORD_4.x))) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (_255 * ((_223 * cbMtdParam._m0[23u].x) + TEXCOORD_4.y))) + cbTextureTilingScale._m0[4u].w));
    float _294 = (_286.x * 2.0) + (-1.0);
    float _296 = (_286.y * 2.0) + (-1.0);
    float _300 = 1.0 - dot(vec2(_294, _296), vec2(_294, _296));
    float _1224 = isnan(0.0) ? _300 : (isnan(_300) ? 0.0 : max(_300, 0.0));
    float _303 = sqrt(isnan(1.0) ? _1224 : (isnan(_1224) ? 1.0 : min(_1224, 1.0)));
    float _306 = fma(_303, _201, fma(_296, _194, _294 * _180));
    float _309 = fma(_303, _202, fma(_296, _195, _294 * _181));
    float _312 = fma(_303, _203, fma(_296, _196, _294 * _182));
    float _316 = inversesqrt(dot(vec3(_306, _309, _312), vec3(_306, _309, _312)));
    float _318 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[17u].y;
    float _319 = _318 * cbMtdParam._m0[17u].x;
    float _323 = ((_306 * 0.5) * _316) + (-0.25);
    float _327 = ((_309 * 0.5) * _316) + (-0.25);
    float _328 = _327 * cbMtdParam._m0[16u].w;
    float _330 = (-0.0) - (cbMtdParam._m0[16u].w * _323);
    float _331 = fract(_319);
    float _333 = fract(_319 + 0.5);
    float _344 = abs((_331 * 2.0) + (-1.0));
    vec4 _361 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_331 * _330) + _256) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_328 * _331) + _257) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w));
    float _363 = _361.x;
    float _364 = _361.y;
    float _365 = _361.z;
    vec4 _366 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_333 * _330) + _256) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_328 * _333) + _257) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w));
    float _387 = cbMtdParam._m0[20u].x * TEXCOORD_4.w;
    float _403 = _249 * ((_223 * cbMtdParam._m0[23u].w) + TEXCOORD_4.x);
    float _404 = _255 * ((_223 * cbMtdParam._m0[24u].x) + TEXCOORD_4.y);
    float _407 = _318 * cbMtdParam._m0[16u].y;
    float _408 = _327 * cbMtdParam._m0[19u].x;
    float _410 = (-0.0) - (cbMtdParam._m0[19u].x * _323);
    float _411 = fract(_407);
    float _413 = fract(_407 + 0.5);
    float _424 = abs((_411 * 2.0) + (-1.0));
    vec4 _440 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_411 * _410) + _403) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_408 * _411) + _404) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _442 = _440.x;
    float _443 = _440.y;
    float _444 = _440.z;
    vec4 _445 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_413 * _410) + _403) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_408 * _413) + _404) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _474 = _249 * ((_223 * cbMtdParam._m0[20u].y) + TEXCOORD_4.x);
    float _475 = _255 * ((_223 * cbMtdParam._m0[20u].z) + TEXCOORD_4.y);
    float _481 = _318 * cbMtdParam._m0[18u].z;
    float _482 = _327 * cbMtdParam._m0[18u].w;
    float _484 = (-0.0) - (cbMtdParam._m0[18u].w * _323);
    float _485 = fract(_481);
    float _487 = fract(_481 + 0.5);
    float _498 = abs((_485 * 2.0) + (-1.0));
    vec4 _514 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_485 * _484) + _474) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_482 * _485) + _475) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _516 = _514.x;
    float _517 = _514.y;
    float _518 = _514.z;
    vec4 _519 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_487 * _484) + _474) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_482 * _487) + _475) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _553 = _249 * ((_223 * cbMtdParam._m0[21u].w) + TEXCOORD_4.x);
    float _554 = _255 * ((_223 * cbMtdParam._m0[22u].x) + TEXCOORD_4.y);
    float _557 = _318 * cbMtdParam._m0[17u].z;
    float _558 = _327 * cbMtdParam._m0[17u].w;
    float _560 = (-0.0) - (cbMtdParam._m0[17u].w * _323);
    float _561 = fract(_557);
    float _563 = fract(_557 + 0.5);
    float _574 = abs((_561 * 2.0) + (-1.0));
    vec4 _591 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_561 * _560) + _553) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_558 * _561) + _554) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _593 = _591.x;
    float _594 = _591.y;
    float _595 = _591.z;
    vec4 _596 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_563 * _560) + _553) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_558 * _563) + _554) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _613 = (((((_519.x - _516) * _498) + _516) * cbMtdParam._m0[11u].x) + ((((_445.x - _442) * _424) + _442) * cbMtdParam._m0[10u].x)) + ((((_596.x - _593) * _574) + _593) * cbMtdParam._m0[13u].x);
    float _614 = (((((_519.y - _517) * _498) + _517) * cbMtdParam._m0[11u].y) + ((((_445.y - _443) * _424) + _443) * cbMtdParam._m0[10u].y)) + ((((_596.y - _594) * _574) + _594) * cbMtdParam._m0[13u].y);
    float _615 = (((((_519.z - _518) * _498) + _518) * cbMtdParam._m0[11u].z) + ((((_445.z - _444) * _424) + _444) * cbMtdParam._m0[10u].z)) + ((((_596.z - _595) * _574) + _595) * cbMtdParam._m0[13u].z);
    float _628 = _249 * ((_223 * cbMtdParam._m0[23u].y) + TEXCOORD_4.x);
    float _629 = _255 * ((_223 * cbMtdParam._m0[23u].z) + TEXCOORD_4.y);
    vec4 _652 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_5, SS_BumpMap), vec2(((_249 * ((_223 * cbMtdParam._m0[24u].y) + TEXCOORD_4.x)) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((_255 * ((_223 * cbMtdParam._m0[24u].z) + TEXCOORD_4.y)) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _658 = (_652.x * 2.0) + (-1.0);
    float _659 = (_652.y * 2.0) + (-1.0);
    float _663 = 1.0 - dot(vec2(_658, _659), vec2(_658, _659));
    float _1235 = isnan(0.0) ? _663 : (isnan(_663) ? 0.0 : max(_663, 0.0));
    float _665 = sqrt(isnan(1.0) ? _1235 : (isnan(_1235) ? 1.0 : min(_1235, 1.0)));
    float _668 = fma(_665, _201, fma(_659, _194, _658 * _180));
    float _671 = fma(_665, _202, fma(_659, _195, _658 * _181));
    float _674 = fma(_665, _203, fma(_659, _196, _658 * _182));
    float _678 = inversesqrt(dot(vec3(_668, _671, _674), vec3(_668, _671, _674)));
    float _679 = _318 * cbMtdParam._m0[19u].z;
    float _686 = (((_671 * 0.5) * _678) + (-0.25)) * cbMtdParam._m0[19u].y;
    float _688 = (-0.0) - (cbMtdParam._m0[19u].y * (((_668 * 0.5) * _678) + (-0.25)));
    float _689 = fract(_679);
    float _691 = fract(_679 + 0.5);
    float _702 = abs((_689 * 2.0) + (-1.0));
    vec4 _718 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_689 * _688) + _628) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_686 * _689) + _629) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _720 = _718.x;
    float _721 = _718.y;
    float _722 = _718.z;
    vec4 _723 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_691 * _688) + _628) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_686 * _691) + _629) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _741 = cbMtdParam._m0[16u].z * TEXCOORD_4.z;
    float _748 = (_741 * (((((_723.x - _720) * _702) + _720) * cbMtdParam._m0[12u].x) - _613)) + _613;
    float _749 = (_741 * (((((_723.y - _721) * _702) + _721) * cbMtdParam._m0[12u].y) - _614)) + _614;
    float _750 = (_741 * (((((_723.z - _722) * _702) + _722) * cbMtdParam._m0[12u].z) - _615)) + _615;
    float _757 = (_387 * (((((_366.x - _363) * _344) + _363) * cbMtdParam._m0[14u].x) - _748)) + _748;
    float _759 = (cbMtdParam._m0[19u].w * TEXCOORD.w) * _757;
    float _760 = _757 + TEXCOORD.x;
    float _762 = (_749 + TEXCOORD.y) + (_387 * (((((_366.y - _364) * _344) + _364) * cbMtdParam._m0[14u].y) - _749));
    float _764 = (_750 + TEXCOORD.z) + (_387 * (((((_366.z - _365) * _344) + _365) * cbMtdParam._m0[14u].z) - _750));
    float _1246 = isnan(0.0) ? _759 : (isnan(_759) ? 0.0 : max(_759, 0.0));
    float _798 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _840 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _850 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _840);
    float _851 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _840);
    float _852 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _840);
    vec4 _857 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _859 = _857.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _944 = sqrt(((_850 * _850) + (_851 * _851)) + (_852 * _852));
        float _950 = (cbMatDynParam._m0[5u].x * _944) + cbMatDynParam._m0[5u].y;
        float _1257 = isnan(0.0) ? _950 : (isnan(_950) ? 0.0 : max(_950, 0.0));
        float _951 = isnan(1.0) ? _1257 : (isnan(_1257) ? 1.0 : min(_1257, 1.0));
        float _955 = (cbMatDynParam._m0[5u].z * _944) + cbMatDynParam._m0[5u].w;
        float _1268 = isnan(0.0) ? _955 : (isnan(_955) ? 0.0 : max(_955, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1268 : (isnan(_1268) ? 1.0 : min(_1268, 1.0))) - _951)) + _951) < ((_859 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _876 = _228 + 9u;
    uint _877 = _876 + uint(cbMatDynParam._m0[0u].w);
    float _883 = ((((cbMtdParam._m0[15u].x - _760) * TEXCOORD_9.x) + _760) * cbMtdParam._m0[16u].x) * cbInstanceData._m0[_877].x;
    float _884 = ((((cbMtdParam._m0[15u].y - _762) * TEXCOORD_9.y) + _762) * cbMtdParam._m0[16u].x) * cbInstanceData._m0[_877].y;
    float _885 = ((((cbMtdParam._m0[15u].z - _764) * TEXCOORD_9.z) + _764) * cbMtdParam._m0[16u].x) * cbInstanceData._m0[_877].z;
    float _886 = isnan(0.0) ? _883 : (isnan(_883) ? 0.0 : max(_883, 0.0));
    float _887 = isnan(0.0) ? _884 : (isnan(_884) ? 0.0 : max(_884, 0.0));
    float _888 = isnan(0.0) ? _885 : (isnan(_885) ? 0.0 : max(_885, 0.0));
    float _894 = cbMtdParam._m0[2u].x * _883;
    float _895 = cbMtdParam._m0[2u].y * _884;
    float _896 = cbMtdParam._m0[2u].z * _885;
    float _1294 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _898 = isnan(1.0) ? _1294 : (isnan(_1294) ? 1.0 : min(_1294, 1.0));
    float _903 = cbInstanceData._m0[_228 + 6u].w * (isnan(1.0) ? _1246 : (isnan(_1246) ? 1.0 : min(_1246, 1.0)));
    float _909 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _910 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _925 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_909, _910, (log2((isnan(cbSceneParam._m0[77u].w) ? _798 : (isnan(_798) ? cbSceneParam._m0[77u].w : min(_798, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _927 = _925.x;
    float _928 = _925.y;
    float _929 = _925.z;
    float _930 = _925.w;
    float _1010;
    float _1012;
    float _1014;
    float _1016;
    if (_798 > cbSceneParam._m0[78u].w)
    {
        float _972 = isnan(_798) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _798 : min(cbSceneParam._m0[80u].w, _798));
        float _973 = _972 / _798;
        float _984 = _973 * _850;
        float _985 = _851 * _973;
        float _986 = (-0.0) - _985;
        float _987 = _973 * _852;
        float _989 = (cbSceneParam._m0[77u].w * _986) / _972;
        float _990 = _989 + cbSceneParam._m0[79u].w;
        float _991 = cbSceneParam._m0[79u].w - _985;
        float _997 = sqrt(((_984 * _984) + (_985 * _985)) + (_987 * _987));
        float _1000 = (1.0 - (cbSceneParam._m0[77u].w / _972)) * _997;
        float _1006 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1008 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1138;
        if (abs((_986 - _989) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1138 = ((((_990 > 0.0) ? exp2(_1006 * _990) : (2.0 - exp2(_1008 * _990))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1000;
        }
        else
        {
            float _1095 = 1.0 / cbSceneParam._m0[80u].x;
            float _1096 = isnan(_991) ? _990 : (isnan(_990) ? _991 : max(_990, _991));
            float _1097 = isnan(_991) ? _990 : (isnan(_990) ? _991 : min(_990, _991));
            float _1106 = isnan(0.0) ? _1096 : (isnan(_1096) ? 0.0 : min(_1096, 0.0));
            float _1107 = isnan(0.0) ? _1097 : (isnan(_1097) ? 0.0 : min(_1097, 0.0));
            _1138 = ((abs(_997 / _986) * cbSceneParam._m0[80u].y) * ((((_1106 - _1107) * 2.0) - ((exp2(_1006 * (isnan(0.0) ? _1096 : (isnan(_1096) ? 0.0 : max(_1096, 0.0)))) - exp2(_1006 * (isnan(0.0) ? _1097 : (isnan(_1097) ? 0.0 : max(_1097, 0.0))))) * _1095)) - ((exp2(_1008 * _1106) - exp2(_1008 * _1107)) * _1095))) + (_1000 * cbSceneParam._m0[80u].z);
        }
        vec4 _1140 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_909, _910, 1.0), 0.0);
        float _1149 = exp2((_1138 * (-1.44269502162933349609375)) * (1.0 - _1140.w));
        float _1150 = log2(_1149);
        float _1166 = log2(_930);
        _1010 = (exp2(_1166 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1150 * cbSceneParam._m0[78u].x)) * _1140.x) / cbSceneParam._m0[78u].x)) + _927;
        _1012 = (exp2(_1166 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1150 * cbSceneParam._m0[78u].y)) * _1140.y) / cbSceneParam._m0[78u].y)) + _928;
        _1014 = (exp2(_1166 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1150 * cbSceneParam._m0[78u].z)) * _1140.z) / cbSceneParam._m0[78u].z)) + _929;
        _1016 = _1149 * _930;
    }
    else
    {
        _1010 = _927;
        _1012 = _928;
        _1014 = _929;
        _1016 = _930;
    }
    bool _1176;
    vec4 _1026;
    vec4 _1050;
    float _1052;
    float _1056;
    float _1057;
    float _1058;
    float _1061;
    float _1064;
    float _1067;
    float _1068;
    bool _1079;
    for (;;)
    {
        _1026 = cbMatDynParam._m0[0u];
        float _1028 = roundEven(_1026.y);
        bool _1029 = _1028 == 3.0;
        float _1031 = log2(_1016);
        float _1035 = exp2(_1031 * cbSceneParam._m0[78u].x);
        float _1036 = exp2(_1031 * cbSceneParam._m0[78u].y);
        float _1037 = exp2(_1031 * cbSceneParam._m0[78u].z);
        float _1038 = _1035 * _886;
        float _1039 = _1036 * _887;
        float _1040 = _1037 * _888;
        float _1047 = _859 + (-0.5);
        _1050 = cbMtdParam._m0[1u];
        _1052 = _1050.y * _1047;
        float _1055 = (_1028 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1056 = _1055 * (_1029 ? _1038 : (_1038 + (cbSceneParam._m0[72u].w * _1010)));
        _1057 = _1055 * (_1029 ? _1039 : (_1039 + (cbSceneParam._m0[72u].w * _1012)));
        _1058 = _1055 * (_1029 ? _1040 : (_1040 + (cbSceneParam._m0[72u].w * _1014)));
        _1061 = ((_894 * _898) * _1035) * _1055;
        _1064 = ((_895 * _898) * _1036) * _1055;
        _1067 = ((_896 * _898) * _1037) * _1055;
        _1068 = _1047 * 0.999000012874603271484375;
        _1079 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1079)
        {
            if ((cbInstanceData._m0[_228 + 7u].x + _1068) < 0.5)
            {
                _1176 = true;
                break;
            }
        }
        uint _1130 = _876 + uint(_1026.w);
        if ((cbInstanceData._m0[_1130].w < 1.0) && ((cbInstanceData._m0[_1130].w + _1068) < 0.5))
        {
            _1176 = true;
            break;
        }
        if ((_1052 + 1.0) < _1050.x)
        {
            _1176 = true;
            break;
        }
        _1176 = false;
        break;
    }
    float _1181;
    if (_1176)
    {
        discard_state = true;
        _1181 = 0.0;
    }
    else
    {
        _1181 = _903;
    }
    SV_Target.x = _1056;
    SV_Target.y = _1057;
    SV_Target.z = _1058;
    SV_Target.w = _1181;
    SV_Target_1.x = _1061;
    SV_Target_1.y = _1064;
    SV_Target_1.z = _1067;
    SV_Target_1.w = _903;
    discard_exit();
}


