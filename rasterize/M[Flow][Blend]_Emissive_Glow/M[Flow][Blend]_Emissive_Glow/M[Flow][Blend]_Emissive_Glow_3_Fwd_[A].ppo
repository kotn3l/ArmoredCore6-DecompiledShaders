#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 6) in vec4 TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1302;
float _1303;
float _1304;
float _1305;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _175 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _176 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _177 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _183 = inversesqrt(dot(vec3(_175, _176, _177), vec3(_175, _176, _177)));
    float _184 = _183 * _175;
    float _185 = _183 * _176;
    float _186 = _183 * _177;
    float _190 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _191 = _190 * NORMAL.x;
    float _192 = _190 * NORMAL.y;
    float _193 = _190 * NORMAL.z;
    float _197 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _198 = _197 * TANGENT.x;
    float _199 = _197 * TANGENT.y;
    float _200 = _197 * TANGENT.z;
    float _205;
    float _206;
    float _207;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _205 = (-0.0) - _191;
        _206 = (-0.0) - _192;
        _207 = (-0.0) - _193;
    }
    else
    {
        _205 = _191;
        _206 = _192;
        _207 = _193;
    }
    float _223 = cbMtdParam._m0[21u].y * cbPerFrame._m0[22u].x;
    float _230 = TEXCOORD_4.y - ((cbMtdParam._m0[21u].z * cbPerFrame._m0[22u].x) * 0.550000011920928955078125);
    float _249 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbTextureTilingScale._m0[0u].x * cbMtdParam._m0[18u].x) * ((_223 * 6.900000095367431640625) + TEXCOORD_4.x)) + cbTextureTilingScale._m0[0u].z, ((cbTextureTilingScale._m0[0u].y * cbMtdParam._m0[18u].x) * _230) + cbTextureTilingScale._m0[0u].w)).x * 0.0500000007450580596923828125;
    float _261 = ((_230 * cbMtdParam._m0[18u].x) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w;
    float _311 = cbMtdParam._m0[17u].y * cbPerFrame._m0[22u].x;
    uint _316 = uint(roundEven(NORMAL.w)) * 13u;
    uint _322 = _316 + 1u;
    uint _327 = _316 + 2u;
    float _337 = sqrt(((cbInstanceData._m0[_322].x * cbInstanceData._m0[_322].x) + (cbInstanceData._m0[_316].x * cbInstanceData._m0[_316].x)) + (cbInstanceData._m0[_327].x * cbInstanceData._m0[_327].x));
    float _343 = sqrt(((cbInstanceData._m0[_322].y * cbInstanceData._m0[_322].y) + (cbInstanceData._m0[_316].y * cbInstanceData._m0[_316].y)) + (cbInstanceData._m0[_327].y * cbInstanceData._m0[_327].y));
    float _344 = _337 * ((_311 * cbMtdParam._m0[22u].y) + TEXCOORD_4.x);
    float _345 = _343 * ((_311 * cbMtdParam._m0[22u].z) + TEXCOORD_4.y);
    vec4 _373 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * (_337 * ((_311 * cbMtdParam._m0[22u].w) + TEXCOORD_4.x))) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (_343 * ((_311 * cbMtdParam._m0[23u].x) + TEXCOORD_4.y))) + cbTextureTilingScale._m0[4u].w));
    float _380 = (_373.x * 2.0) + (-1.0);
    float _382 = (_373.y * 2.0) + (-1.0);
    float _386 = 1.0 - dot(vec2(_380, _382), vec2(_380, _382));
    float _1314 = isnan(0.0) ? _386 : (isnan(_386) ? 0.0 : max(_386, 0.0));
    float _388 = sqrt(isnan(1.0) ? _1314 : (isnan(_1314) ? 1.0 : min(_1314, 1.0)));
    float _391 = fma(_388, _205, fma(_382, _198, _380 * _184));
    float _394 = fma(_388, _206, fma(_382, _199, _380 * _185));
    float _397 = fma(_388, _207, fma(_382, _200, _380 * _186));
    float _401 = inversesqrt(dot(vec3(_391, _394, _397), vec3(_391, _394, _397)));
    float _403 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[17u].y;
    float _404 = _403 * cbMtdParam._m0[17u].x;
    float _408 = ((_391 * 0.5) * _401) + (-0.25);
    float _412 = ((_394 * 0.5) * _401) + (-0.25);
    float _413 = _412 * cbMtdParam._m0[16u].w;
    float _415 = (-0.0) - (cbMtdParam._m0[16u].w * _408);
    float _416 = fract(_404);
    float _418 = fract(_404 + 0.5);
    float _429 = abs((_416 * 2.0) + (-1.0));
    vec4 _446 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_416 * _415) + _344) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_413 * _416) + _345) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w));
    float _448 = _446.x;
    float _449 = _446.y;
    float _450 = _446.z;
    vec4 _451 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_418 * _415) + _344) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_413 * _418) + _345) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w));
    float _469 = cbMtdParam._m0[20u].x * TEXCOORD_4.w;
    float _485 = _337 * ((_311 * cbMtdParam._m0[23u].w) + TEXCOORD_4.x);
    float _486 = _343 * ((_311 * cbMtdParam._m0[24u].x) + TEXCOORD_4.y);
    float _489 = _403 * cbMtdParam._m0[16u].y;
    float _490 = _412 * cbMtdParam._m0[19u].x;
    float _492 = (-0.0) - (cbMtdParam._m0[19u].x * _408);
    float _493 = fract(_489);
    float _495 = fract(_489 + 0.5);
    float _506 = abs((_493 * 2.0) + (-1.0));
    vec4 _522 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_493 * _492) + _485) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_490 * _493) + _486) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _524 = _522.x;
    float _525 = _522.y;
    float _526 = _522.z;
    vec4 _527 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_495 * _492) + _485) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_490 * _495) + _486) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _556 = _337 * ((_311 * cbMtdParam._m0[20u].y) + TEXCOORD_4.x);
    float _557 = _343 * ((_311 * cbMtdParam._m0[20u].z) + TEXCOORD_4.y);
    float _560 = _403 * cbMtdParam._m0[18u].z;
    float _561 = _412 * cbMtdParam._m0[18u].w;
    float _563 = (-0.0) - (cbMtdParam._m0[18u].w * _408);
    float _564 = fract(_560);
    float _566 = fract(_560 + 0.5);
    float _577 = abs((_564 * 2.0) + (-1.0));
    vec4 _593 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_564 * _563) + _556) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_561 * _564) + _557) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _595 = _593.x;
    float _596 = _593.y;
    float _597 = _593.z;
    vec4 _598 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_566 * _563) + _556) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_561 * _566) + _557) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _629 = _337 * ((_311 * cbMtdParam._m0[21u].w) + TEXCOORD_4.x);
    float _630 = _343 * ((_311 * cbMtdParam._m0[22u].x) + TEXCOORD_4.y);
    float _633 = _403 * cbMtdParam._m0[17u].z;
    float _634 = _412 * cbMtdParam._m0[17u].w;
    float _636 = (-0.0) - (cbMtdParam._m0[17u].w * _408);
    float _637 = fract(_633);
    float _639 = fract(_633 + 0.5);
    float _650 = abs((_637 * 2.0) + (-1.0));
    vec4 _667 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_637 * _636) + _629) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_634 * _637) + _630) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _669 = _667.x;
    float _670 = _667.y;
    float _671 = _667.z;
    vec4 _672 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_639 * _636) + _629) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_634 * _639) + _630) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _689 = (((((_598.x - _595) * _577) + _595) * cbMtdParam._m0[11u].x) + ((((_527.x - _524) * _506) + _524) * cbMtdParam._m0[10u].x)) + ((((_672.x - _669) * _650) + _669) * cbMtdParam._m0[13u].x);
    float _690 = (((((_598.y - _596) * _577) + _596) * cbMtdParam._m0[11u].y) + ((((_527.y - _525) * _506) + _525) * cbMtdParam._m0[10u].y)) + ((((_672.y - _670) * _650) + _670) * cbMtdParam._m0[13u].y);
    float _691 = (((((_598.z - _597) * _577) + _597) * cbMtdParam._m0[11u].z) + ((((_527.z - _526) * _506) + _526) * cbMtdParam._m0[10u].z)) + ((((_672.z - _671) * _650) + _671) * cbMtdParam._m0[13u].z);
    float _704 = _337 * ((_311 * cbMtdParam._m0[23u].y) + TEXCOORD_4.x);
    float _705 = _343 * ((_311 * cbMtdParam._m0[23u].z) + TEXCOORD_4.y);
    vec4 _728 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_5, SS_BumpMap), vec2(((_337 * ((_311 * cbMtdParam._m0[24u].y) + TEXCOORD_4.x)) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((_343 * ((_311 * cbMtdParam._m0[24u].z) + TEXCOORD_4.y)) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _734 = (_728.x * 2.0) + (-1.0);
    float _735 = (_728.y * 2.0) + (-1.0);
    float _739 = 1.0 - dot(vec2(_734, _735), vec2(_734, _735));
    float _1325 = isnan(0.0) ? _739 : (isnan(_739) ? 0.0 : max(_739, 0.0));
    float _741 = sqrt(isnan(1.0) ? _1325 : (isnan(_1325) ? 1.0 : min(_1325, 1.0)));
    float _744 = fma(_741, _205, fma(_735, _198, _734 * _184));
    float _747 = fma(_741, _206, fma(_735, _199, _734 * _185));
    float _750 = fma(_741, _207, fma(_735, _200, _734 * _186));
    float _754 = inversesqrt(dot(vec3(_744, _747, _750), vec3(_744, _747, _750)));
    float _755 = _403 * cbMtdParam._m0[19u].z;
    float _762 = (((_747 * 0.5) * _754) + (-0.25)) * cbMtdParam._m0[19u].y;
    float _764 = (-0.0) - (cbMtdParam._m0[19u].y * (((_744 * 0.5) * _754) + (-0.25)));
    float _765 = fract(_755);
    float _767 = fract(_755 + 0.5);
    float _778 = abs((_765 * 2.0) + (-1.0));
    vec4 _794 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_765 * _764) + _704) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_762 * _765) + _705) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _796 = _794.x;
    float _797 = _794.y;
    float _798 = _794.z;
    vec4 _799 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_767 * _764) + _704) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_762 * _767) + _705) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _817 = cbMtdParam._m0[16u].z * TEXCOORD_4.z;
    float _824 = (_817 * (((((_799.x - _796) * _778) + _796) * cbMtdParam._m0[12u].x) - _689)) + _689;
    float _825 = (_817 * (((((_799.y - _797) * _778) + _797) * cbMtdParam._m0[12u].y) - _690)) + _690;
    float _826 = (_817 * (((((_799.z - _798) * _778) + _798) * cbMtdParam._m0[12u].z) - _691)) + _691;
    float _833 = (_469 * (((((_451.x - _448) * _429) + _448) * cbMtdParam._m0[14u].x) - _824)) + _824;
    float _838 = ((((cbMtdParam._m0[19u].w * TEXCOORD.w) * (1.0 - _249)) * cbMtdParam._m0[18u].y) * (((_249 - (texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_0, SS_WrapLinear), vec2(((((_223 * 3.2999999523162841796875) + TEXCOORD_4.x) * cbMtdParam._m0[18u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, _261)).y * 0.20000000298023223876953125)) + texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_0, SS_WrapLinear), vec2((((cbMtdParam._m0[20u].w * cbPerFrame._m0[22u].x) + TEXCOORD_4.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[21u].x * cbPerFrame._m0[22u].x) + TEXCOORD_4.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z) + (texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_0, SS_WrapLinear), vec2(((((_223 * 16.0) + TEXCOORD_4.x) * cbMtdParam._m0[18u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, _261)).x * 0.100000001490116119384765625))) * _833;
    float _849 = ((cbMtdParam._m0[9u].x * _249) + TEXCOORD.x) + _833;
    float _852 = (((_249 * cbMtdParam._m0[9u].y) + TEXCOORD.y) + _825) + (_469 * (((((_451.y - _449) * _429) + _449) * cbMtdParam._m0[14u].y) - _825));
    float _855 = (((_249 * cbMtdParam._m0[9u].z) + TEXCOORD.z) + _826) + (_469 * (((((_451.z - _450) * _429) + _450) * cbMtdParam._m0[14u].z) - _826));
    float _1336 = isnan(0.0) ? _838 : (isnan(_838) ? 0.0 : max(_838, 0.0));
    float _889 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _930 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _940 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _930);
    float _941 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _930);
    float _942 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _930);
    vec4 _947 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _949 = _947.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1034 = sqrt(((_940 * _940) + (_941 * _941)) + (_942 * _942));
        float _1040 = (cbMatDynParam._m0[5u].x * _1034) + cbMatDynParam._m0[5u].y;
        float _1347 = isnan(0.0) ? _1040 : (isnan(_1040) ? 0.0 : max(_1040, 0.0));
        float _1041 = isnan(1.0) ? _1347 : (isnan(_1347) ? 1.0 : min(_1347, 1.0));
        float _1045 = (cbMatDynParam._m0[5u].z * _1034) + cbMatDynParam._m0[5u].w;
        float _1358 = isnan(0.0) ? _1045 : (isnan(_1045) ? 0.0 : max(_1045, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1358 : (isnan(_1358) ? 1.0 : min(_1358, 1.0))) - _1041)) + _1041) < ((_949 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _966 = _316 + 9u;
    uint _967 = _966 + uint(cbMatDynParam._m0[0u].w);
    float _973 = ((((cbMtdParam._m0[15u].x - _849) * TEXCOORD_9.x) + _849) * cbMtdParam._m0[16u].x) * cbInstanceData._m0[_967].x;
    float _974 = ((((cbMtdParam._m0[15u].y - _852) * TEXCOORD_9.y) + _852) * cbMtdParam._m0[16u].x) * cbInstanceData._m0[_967].y;
    float _975 = ((((cbMtdParam._m0[15u].z - _855) * TEXCOORD_9.z) + _855) * cbMtdParam._m0[16u].x) * cbInstanceData._m0[_967].z;
    float _976 = isnan(0.0) ? _973 : (isnan(_973) ? 0.0 : max(_973, 0.0));
    float _977 = isnan(0.0) ? _974 : (isnan(_974) ? 0.0 : max(_974, 0.0));
    float _978 = isnan(0.0) ? _975 : (isnan(_975) ? 0.0 : max(_975, 0.0));
    float _984 = cbMtdParam._m0[2u].x * _973;
    float _985 = cbMtdParam._m0[2u].y * _974;
    float _986 = cbMtdParam._m0[2u].z * _975;
    float _1384 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _988 = isnan(1.0) ? _1384 : (isnan(_1384) ? 1.0 : min(_1384, 1.0));
    float _993 = cbInstanceData._m0[_316 + 6u].w * (isnan(1.0) ? _1336 : (isnan(_1336) ? 1.0 : min(_1336, 1.0)));
    float _999 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _1000 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _1015 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_999, _1000, (log2((isnan(cbSceneParam._m0[77u].w) ? _889 : (isnan(_889) ? cbSceneParam._m0[77u].w : min(_889, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1017 = _1015.x;
    float _1018 = _1015.y;
    float _1019 = _1015.z;
    float _1020 = _1015.w;
    float _1100;
    float _1102;
    float _1104;
    float _1106;
    if (_889 > cbSceneParam._m0[78u].w)
    {
        float _1062 = isnan(_889) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _889 : min(cbSceneParam._m0[80u].w, _889));
        float _1063 = _1062 / _889;
        float _1074 = _1063 * _940;
        float _1075 = _941 * _1063;
        float _1076 = (-0.0) - _1075;
        float _1077 = _1063 * _942;
        float _1079 = (cbSceneParam._m0[77u].w * _1076) / _1062;
        float _1080 = _1079 + cbSceneParam._m0[79u].w;
        float _1081 = cbSceneParam._m0[79u].w - _1075;
        float _1087 = sqrt(((_1074 * _1074) + (_1075 * _1075)) + (_1077 * _1077));
        float _1090 = (1.0 - (cbSceneParam._m0[77u].w / _1062)) * _1087;
        float _1096 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1098 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1228;
        if (abs((_1076 - _1079) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1228 = ((((_1080 > 0.0) ? exp2(_1096 * _1080) : (2.0 - exp2(_1098 * _1080))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1090;
        }
        else
        {
            float _1185 = 1.0 / cbSceneParam._m0[80u].x;
            float _1186 = isnan(_1081) ? _1080 : (isnan(_1080) ? _1081 : max(_1080, _1081));
            float _1187 = isnan(_1081) ? _1080 : (isnan(_1080) ? _1081 : min(_1080, _1081));
            float _1196 = isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : min(_1186, 0.0));
            float _1197 = isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : min(_1187, 0.0));
            _1228 = ((abs(_1087 / _1076) * cbSceneParam._m0[80u].y) * ((((_1196 - _1197) * 2.0) - ((exp2(_1096 * (isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0)))) - exp2(_1096 * (isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0))))) * _1185)) - ((exp2(_1098 * _1196) - exp2(_1098 * _1197)) * _1185))) + (_1090 * cbSceneParam._m0[80u].z);
        }
        vec4 _1230 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_999, _1000, 1.0), 0.0);
        float _1239 = exp2((_1228 * (-1.44269502162933349609375)) * (1.0 - _1230.w));
        float _1240 = log2(_1239);
        float _1256 = log2(_1020);
        _1100 = (exp2(_1256 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1240 * cbSceneParam._m0[78u].x)) * _1230.x) / cbSceneParam._m0[78u].x)) + _1017;
        _1102 = (exp2(_1256 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1240 * cbSceneParam._m0[78u].y)) * _1230.y) / cbSceneParam._m0[78u].y)) + _1018;
        _1104 = (exp2(_1256 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1240 * cbSceneParam._m0[78u].z)) * _1230.z) / cbSceneParam._m0[78u].z)) + _1019;
        _1106 = _1239 * _1020;
    }
    else
    {
        _1100 = _1017;
        _1102 = _1018;
        _1104 = _1019;
        _1106 = _1020;
    }
    bool _1266;
    vec4 _1116;
    vec4 _1140;
    float _1142;
    float _1146;
    float _1147;
    float _1148;
    float _1151;
    float _1154;
    float _1157;
    float _1158;
    bool _1169;
    for (;;)
    {
        _1116 = cbMatDynParam._m0[0u];
        float _1118 = roundEven(_1116.y);
        bool _1119 = _1118 == 3.0;
        float _1121 = log2(_1106);
        float _1125 = exp2(_1121 * cbSceneParam._m0[78u].x);
        float _1126 = exp2(_1121 * cbSceneParam._m0[78u].y);
        float _1127 = exp2(_1121 * cbSceneParam._m0[78u].z);
        float _1128 = _1125 * _976;
        float _1129 = _1126 * _977;
        float _1130 = _1127 * _978;
        float _1137 = _949 + (-0.5);
        _1140 = cbMtdParam._m0[1u];
        _1142 = _1140.y * _1137;
        float _1145 = (_1118 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1146 = _1145 * (_1119 ? _1128 : (_1128 + (cbSceneParam._m0[72u].w * _1100)));
        _1147 = _1145 * (_1119 ? _1129 : (_1129 + (cbSceneParam._m0[72u].w * _1102)));
        _1148 = _1145 * (_1119 ? _1130 : (_1130 + (cbSceneParam._m0[72u].w * _1104)));
        _1151 = ((_984 * _988) * _1125) * _1145;
        _1154 = ((_985 * _988) * _1126) * _1145;
        _1157 = ((_986 * _988) * _1127) * _1145;
        _1158 = _1137 * 0.999000012874603271484375;
        _1169 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1169)
        {
            if ((cbInstanceData._m0[_316 + 7u].x + _1158) < 0.5)
            {
                _1266 = true;
                break;
            }
        }
        uint _1220 = _966 + uint(_1116.w);
        if ((cbInstanceData._m0[_1220].w < 1.0) && ((cbInstanceData._m0[_1220].w + _1158) < 0.5))
        {
            _1266 = true;
            break;
        }
        if ((_1142 + 1.0) < _1140.x)
        {
            _1266 = true;
            break;
        }
        _1266 = false;
        break;
    }
    float _1271;
    if (_1266)
    {
        discard_state = true;
        _1271 = 0.0;
    }
    else
    {
        _1271 = _993;
    }
    SV_Target.x = _1146;
    SV_Target.y = _1147;
    SV_Target.z = _1148;
    SV_Target.w = _1271;
    SV_Target_1.x = _1151;
    SV_Target_1.y = _1154;
    SV_Target_1.z = _1157;
    SV_Target_1.w = _993;
    discard_exit();
}


