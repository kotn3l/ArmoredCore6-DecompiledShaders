#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec2 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_3;
layout(location = 4) out vec4 TEXCOORD_4;
layout(location = 5) out vec4 TEXCOORD_9;
layout(location = 6) out float TEXCOORD_17;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    TEXCOORD_9.w = 0.0;
    TEXCOORD_17 = 0.0;
    float _185 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _187 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _188 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _197 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _198 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _199 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _209 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _211 = texelFetch(g_InstanceIndexBuffer, int(_209));
    uint _212 = _211.x;
    precise float _213 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _218 = isnan(_213) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _213 : max(0.001000000047497451305389404296875, _213));
    precise float _220 = BLENDWEIGHT.x / _218;
    precise float _221 = BLENDWEIGHT.y / _218;
    precise float _222 = BLENDWEIGHT.z / _218;
    precise float _223 = BLENDWEIGHT.w / _218;
    uvec4 _230 = floatBitsToUint(cbInstanceData._m0[(_212 * 13u) + 4u]);
    uint _231 = _230.x;
    uint _233 = (_231 + uint(float(BLENDINDICES.x))) * 3u;
    uint _240 = _233 + 1u;
    uint _247 = _233 + 2u;
    precise float _254 = _220 * cbObjMatrix._m0[_233].x;
    precise float _255 = _220 * cbObjMatrix._m0[_240].x;
    precise float _256 = _220 * cbObjMatrix._m0[_247].x;
    precise float _257 = _220 * cbObjMatrix._m0[_233].y;
    precise float _258 = _220 * cbObjMatrix._m0[_240].y;
    precise float _259 = _220 * cbObjMatrix._m0[_247].y;
    precise float _260 = _220 * cbObjMatrix._m0[_233].z;
    precise float _261 = _220 * cbObjMatrix._m0[_240].z;
    precise float _262 = _220 * cbObjMatrix._m0[_247].z;
    precise float _263 = _220 * cbObjMatrix._m0[_233].w;
    precise float _264 = _220 * cbObjMatrix._m0[_240].w;
    precise float _265 = _220 * cbObjMatrix._m0[_247].w;
    uint _268 = (_231 + uint(float(BLENDINDICES.y))) * 3u;
    uint _275 = _268 + 1u;
    uint _282 = _268 + 2u;
    precise float _289 = _221 * cbObjMatrix._m0[_268].x;
    precise float _290 = _221 * cbObjMatrix._m0[_275].x;
    precise float _291 = _221 * cbObjMatrix._m0[_282].x;
    precise float _292 = _221 * cbObjMatrix._m0[_268].y;
    precise float _293 = _221 * cbObjMatrix._m0[_275].y;
    precise float _294 = _221 * cbObjMatrix._m0[_282].y;
    precise float _295 = _221 * cbObjMatrix._m0[_268].z;
    precise float _296 = _221 * cbObjMatrix._m0[_275].z;
    precise float _297 = _221 * cbObjMatrix._m0[_282].z;
    precise float _298 = _221 * cbObjMatrix._m0[_268].w;
    precise float _299 = _221 * cbObjMatrix._m0[_275].w;
    precise float _300 = _221 * cbObjMatrix._m0[_282].w;
    precise float _301 = _254 + _289;
    precise float _302 = _255 + _290;
    precise float _303 = _256 + _291;
    precise float _304 = _257 + _292;
    precise float _305 = _258 + _293;
    precise float _306 = _259 + _294;
    precise float _307 = _260 + _295;
    precise float _308 = _261 + _296;
    precise float _309 = _262 + _297;
    precise float _310 = _263 + _298;
    precise float _311 = _264 + _299;
    precise float _312 = _265 + _300;
    uint _315 = (_231 + uint(float(BLENDINDICES.z))) * 3u;
    uint _322 = _315 + 1u;
    uint _329 = _315 + 2u;
    precise float _336 = _222 * cbObjMatrix._m0[_315].x;
    precise float _337 = _222 * cbObjMatrix._m0[_322].x;
    precise float _338 = _222 * cbObjMatrix._m0[_329].x;
    precise float _339 = _222 * cbObjMatrix._m0[_315].y;
    precise float _340 = _222 * cbObjMatrix._m0[_322].y;
    precise float _341 = _222 * cbObjMatrix._m0[_329].y;
    precise float _342 = _222 * cbObjMatrix._m0[_315].z;
    precise float _343 = _222 * cbObjMatrix._m0[_322].z;
    precise float _344 = _222 * cbObjMatrix._m0[_329].z;
    precise float _345 = _222 * cbObjMatrix._m0[_315].w;
    precise float _346 = _222 * cbObjMatrix._m0[_322].w;
    precise float _347 = _222 * cbObjMatrix._m0[_329].w;
    precise float _348 = _301 + _336;
    precise float _349 = _302 + _337;
    precise float _350 = _303 + _338;
    precise float _351 = _304 + _339;
    precise float _352 = _305 + _340;
    precise float _353 = _306 + _341;
    precise float _354 = _307 + _342;
    precise float _355 = _308 + _343;
    precise float _356 = _309 + _344;
    precise float _357 = _310 + _345;
    precise float _358 = _311 + _346;
    precise float _359 = _312 + _347;
    uint _362 = (_231 + uint(float(BLENDINDICES.w))) * 3u;
    uint _369 = _362 + 1u;
    uint _376 = _362 + 2u;
    precise float _383 = _223 * cbObjMatrix._m0[_362].x;
    precise float _384 = _223 * cbObjMatrix._m0[_369].x;
    precise float _385 = _223 * cbObjMatrix._m0[_376].x;
    precise float _386 = _223 * cbObjMatrix._m0[_362].y;
    precise float _387 = _223 * cbObjMatrix._m0[_369].y;
    precise float _388 = _223 * cbObjMatrix._m0[_376].y;
    precise float _389 = _223 * cbObjMatrix._m0[_362].z;
    precise float _390 = _223 * cbObjMatrix._m0[_369].z;
    precise float _391 = _223 * cbObjMatrix._m0[_376].z;
    precise float _392 = _223 * cbObjMatrix._m0[_362].w;
    precise float _393 = _223 * cbObjMatrix._m0[_369].w;
    precise float _394 = _223 * cbObjMatrix._m0[_376].w;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    precise float _407 = POSITION.x * _395;
    precise float _408 = POSITION.y * _398;
    precise float _409 = _408 + _407;
    precise float _410 = POSITION.z * _401;
    precise float _411 = _410 + _409;
    precise float _412 = 1.0 * _404;
    precise float _413 = _412 + _411;
    precise float _414 = POSITION.x * _396;
    precise float _415 = POSITION.y * _399;
    precise float _416 = _415 + _414;
    precise float _417 = POSITION.z * _402;
    precise float _418 = _417 + _416;
    precise float _419 = 1.0 * _405;
    precise float _420 = _419 + _418;
    precise float _421 = POSITION.x * _397;
    precise float _422 = POSITION.y * _400;
    precise float _423 = _422 + _421;
    precise float _424 = POSITION.z * _403;
    precise float _425 = _424 + _423;
    precise float _426 = 1.0 * _406;
    precise float _427 = _426 + _425;
    float _433 = cbSceneParam._m0[3u].x - _413;
    float _434 = cbSceneParam._m0[3u].y - _420;
    float _435 = cbSceneParam._m0[3u].z - _427;
    precise float _461 = _413 - cbSceneParam._m0[3u].x;
    precise float _462 = _420 - cbSceneParam._m0[3u].y;
    precise float _463 = _427 - cbSceneParam._m0[3u].z;
    precise float _491 = _461 * cbSceneParam._m0[24u].x;
    precise float _492 = _462 * cbSceneParam._m0[24u].y;
    precise float _493 = _492 + _491;
    precise float _494 = _463 * cbSceneParam._m0[24u].z;
    precise float _495 = _494 + _493;
    precise float _496 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _497 = _496 + _495;
    precise float _498 = _461 * cbSceneParam._m0[25u].x;
    precise float _499 = _462 * cbSceneParam._m0[25u].y;
    precise float _500 = _499 + _498;
    precise float _501 = _463 * cbSceneParam._m0[25u].z;
    precise float _502 = _501 + _500;
    precise float _503 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _504 = _503 + _502;
    precise float _505 = _461 * cbSceneParam._m0[26u].x;
    precise float _506 = _462 * cbSceneParam._m0[26u].y;
    precise float _507 = _506 + _505;
    precise float _508 = _463 * cbSceneParam._m0[26u].z;
    precise float _509 = _508 + _507;
    precise float _510 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _511 = _510 + _509;
    precise float _512 = _461 * cbSceneParam._m0[27u].x;
    precise float _513 = _462 * cbSceneParam._m0[27u].y;
    precise float _514 = _513 + _512;
    precise float _515 = _463 * cbSceneParam._m0[27u].z;
    precise float _516 = _515 + _514;
    precise float _517 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _518 = _517 + _516;
    gl_Position.x = _497;
    gl_Position.y = _504;
    gl_Position.z = _511;
    gl_Position.w = _518;
    NORMAL_1.x = fma(_188, _401, fma(_187, _398, _395 * _185));
    NORMAL_1.y = fma(_188, _402, fma(_187, _399, _396 * _185));
    NORMAL_1.z = fma(_188, _403, fma(_187, _400, _397 * _185));
    NORMAL_1.w = float(_212);
    TANGENT_1.x = fma(_199, _401, fma(_198, _398, _395 * _197));
    TANGENT_1.y = fma(_199, _402, fma(_198, _399, _396 * _197));
    TANGENT_1.z = fma(_199, _403, fma(_198, _400, _397 * _197));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = COLOR.x;
    TEXCOORD_3.y = COLOR.y;
    TEXCOORD_3.z = COLOR.z;
    TEXCOORD_3.w = COLOR.w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_4.z = TEXCOORD_1.x;
    TEXCOORD_4.w = TEXCOORD_1.y;
    TEXCOORD_9.x = TEXCOORD_2.x;
    TEXCOORD_9.y = TEXCOORD_2.y;
    TEXCOORD_9.z = TEXCOORD_2.z;
    TEXCOORD_9.w = COLOR_1.x;
    TEXCOORD_17 = sqrt(((_433 * _433) + (_434 * _434)) + (_435 * _435));
}


