#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 1) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 6) in vec4 TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _156 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _157 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _158 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _164 = inversesqrt(dot(vec3(_156, _157, _158), vec3(_156, _157, _158)));
    float _165 = _164 * _156;
    float _166 = _164 * _157;
    float _167 = _164 * _158;
    float _171 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _172 = _171 * NORMAL.x;
    float _173 = _171 * NORMAL.y;
    float _174 = _171 * NORMAL.z;
    float _178 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _179 = _178 * TANGENT.x;
    float _180 = _178 * TANGENT.y;
    float _181 = _178 * TANGENT.z;
    float _186;
    float _187;
    float _188;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _186 = (-0.0) - _172;
        _187 = (-0.0) - _173;
        _188 = (-0.0) - _174;
    }
    else
    {
        _186 = _172;
        _187 = _173;
        _188 = _174;
    }
    float _208 = cbMtdParam._m0[17u].y * cbPerFrame._m0[22u].x;
    uint _213 = uint(roundEven(NORMAL.w)) * 13u;
    uint _219 = _213 + 1u;
    uint _224 = _213 + 2u;
    float _234 = sqrt(((cbInstanceData._m0[_219].x * cbInstanceData._m0[_219].x) + (cbInstanceData._m0[_213].x * cbInstanceData._m0[_213].x)) + (cbInstanceData._m0[_224].x * cbInstanceData._m0[_224].x));
    float _240 = sqrt(((cbInstanceData._m0[_219].y * cbInstanceData._m0[_219].y) + (cbInstanceData._m0[_213].y * cbInstanceData._m0[_213].y)) + (cbInstanceData._m0[_224].y * cbInstanceData._m0[_224].y));
    float _241 = _234 * ((_208 * cbMtdParam._m0[22u].y) + TEXCOORD_4.x);
    float _242 = _240 * ((_208 * cbMtdParam._m0[22u].z) + TEXCOORD_4.y);
    vec4 _271 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * (_234 * ((_208 * cbMtdParam._m0[22u].w) + TEXCOORD_4.x))) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (_240 * ((_208 * cbMtdParam._m0[23u].x) + TEXCOORD_4.y))) + cbTextureTilingScale._m0[4u].w));
    float _279 = (_271.x * 2.0) + (-1.0);
    float _281 = (_271.y * 2.0) + (-1.0);
    float _285 = 1.0 - dot(vec2(_279, _281), vec2(_279, _281));
    float _1085 = isnan(0.0) ? _285 : (isnan(_285) ? 0.0 : max(_285, 0.0));
    float _288 = sqrt(isnan(1.0) ? _1085 : (isnan(_1085) ? 1.0 : min(_1085, 1.0)));
    float _291 = fma(_288, _186, fma(_281, _179, _279 * _165));
    float _294 = fma(_288, _187, fma(_281, _180, _279 * _166));
    float _297 = fma(_288, _188, fma(_281, _181, _279 * _167));
    float _301 = inversesqrt(dot(vec3(_291, _294, _297), vec3(_291, _294, _297)));
    float _303 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[17u].y;
    float _304 = _303 * cbMtdParam._m0[17u].x;
    float _308 = ((_291 * 0.5) * _301) + (-0.25);
    float _312 = ((_294 * 0.5) * _301) + (-0.25);
    float _313 = _312 * cbMtdParam._m0[16u].w;
    float _315 = (-0.0) - (cbMtdParam._m0[16u].w * _308);
    float _316 = fract(_304);
    float _318 = fract(_304 + 0.5);
    float _329 = abs((_316 * 2.0) + (-1.0));
    vec4 _346 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_316 * _315) + _241) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_313 * _316) + _242) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w));
    float _348 = _346.x;
    float _349 = _346.y;
    float _350 = _346.z;
    vec4 _351 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_318 * _315) + _241) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_313 * _318) + _242) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w));
    float _372 = cbMtdParam._m0[20u].x * TEXCOORD_4.w;
    float _388 = _234 * ((_208 * cbMtdParam._m0[23u].w) + TEXCOORD_4.x);
    float _389 = _240 * ((_208 * cbMtdParam._m0[24u].x) + TEXCOORD_4.y);
    float _392 = _303 * cbMtdParam._m0[16u].y;
    float _393 = _312 * cbMtdParam._m0[19u].x;
    float _395 = (-0.0) - (cbMtdParam._m0[19u].x * _308);
    float _396 = fract(_392);
    float _398 = fract(_392 + 0.5);
    float _409 = abs((_396 * 2.0) + (-1.0));
    vec4 _425 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_396 * _395) + _388) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_393 * _396) + _389) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _427 = _425.x;
    float _428 = _425.y;
    float _429 = _425.z;
    vec4 _430 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_398 * _395) + _388) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_393 * _398) + _389) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _459 = _234 * ((_208 * cbMtdParam._m0[20u].y) + TEXCOORD_4.x);
    float _460 = _240 * ((_208 * cbMtdParam._m0[20u].z) + TEXCOORD_4.y);
    float _466 = _303 * cbMtdParam._m0[18u].z;
    float _467 = _312 * cbMtdParam._m0[18u].w;
    float _469 = (-0.0) - (cbMtdParam._m0[18u].w * _308);
    float _470 = fract(_466);
    float _472 = fract(_466 + 0.5);
    float _483 = abs((_470 * 2.0) + (-1.0));
    vec4 _499 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_470 * _469) + _459) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_467 * _470) + _460) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _501 = _499.x;
    float _502 = _499.y;
    float _503 = _499.z;
    vec4 _504 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_472 * _469) + _459) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_467 * _472) + _460) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _538 = _234 * ((_208 * cbMtdParam._m0[21u].w) + TEXCOORD_4.x);
    float _539 = _240 * ((_208 * cbMtdParam._m0[22u].x) + TEXCOORD_4.y);
    float _542 = _303 * cbMtdParam._m0[17u].z;
    float _543 = _312 * cbMtdParam._m0[17u].w;
    float _545 = (-0.0) - (cbMtdParam._m0[17u].w * _308);
    float _546 = fract(_542);
    float _548 = fract(_542 + 0.5);
    float _559 = abs((_546 * 2.0) + (-1.0));
    vec4 _576 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_546 * _545) + _538) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_543 * _546) + _539) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _578 = _576.x;
    float _579 = _576.y;
    float _580 = _576.z;
    vec4 _581 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_548 * _545) + _538) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_543 * _548) + _539) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _598 = (((((_504.x - _501) * _483) + _501) * cbMtdParam._m0[11u].x) + ((((_430.x - _427) * _409) + _427) * cbMtdParam._m0[10u].x)) + ((((_581.x - _578) * _559) + _578) * cbMtdParam._m0[13u].x);
    float _599 = (((((_504.y - _502) * _483) + _502) * cbMtdParam._m0[11u].y) + ((((_430.y - _428) * _409) + _428) * cbMtdParam._m0[10u].y)) + ((((_581.y - _579) * _559) + _579) * cbMtdParam._m0[13u].y);
    float _600 = (((((_504.z - _503) * _483) + _503) * cbMtdParam._m0[11u].z) + ((((_430.z - _429) * _409) + _429) * cbMtdParam._m0[10u].z)) + ((((_581.z - _580) * _559) + _580) * cbMtdParam._m0[13u].z);
    float _613 = _234 * ((_208 * cbMtdParam._m0[23u].y) + TEXCOORD_4.x);
    float _614 = _240 * ((_208 * cbMtdParam._m0[23u].z) + TEXCOORD_4.y);
    vec4 _637 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_5, SS_BumpMap), vec2(((_234 * ((_208 * cbMtdParam._m0[24u].y) + TEXCOORD_4.x)) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((_240 * ((_208 * cbMtdParam._m0[24u].z) + TEXCOORD_4.y)) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _643 = (_637.x * 2.0) + (-1.0);
    float _644 = (_637.y * 2.0) + (-1.0);
    float _648 = 1.0 - dot(vec2(_643, _644), vec2(_643, _644));
    float _1096 = isnan(0.0) ? _648 : (isnan(_648) ? 0.0 : max(_648, 0.0));
    float _650 = sqrt(isnan(1.0) ? _1096 : (isnan(_1096) ? 1.0 : min(_1096, 1.0)));
    float _653 = fma(_650, _186, fma(_644, _179, _643 * _165));
    float _656 = fma(_650, _187, fma(_644, _180, _643 * _166));
    float _659 = fma(_650, _188, fma(_644, _181, _643 * _167));
    float _663 = inversesqrt(dot(vec3(_653, _656, _659), vec3(_653, _656, _659)));
    float _664 = _303 * cbMtdParam._m0[19u].z;
    float _671 = (((_656 * 0.5) * _663) + (-0.25)) * cbMtdParam._m0[19u].y;
    float _673 = (-0.0) - (cbMtdParam._m0[19u].y * (((_653 * 0.5) * _663) + (-0.25)));
    float _674 = fract(_664);
    float _676 = fract(_664 + 0.5);
    float _687 = abs((_674 * 2.0) + (-1.0));
    vec4 _703 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_674 * _673) + _613) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_671 * _674) + _614) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _705 = _703.x;
    float _706 = _703.y;
    float _707 = _703.z;
    vec4 _708 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_676 * _673) + _613) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_671 * _676) + _614) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _726 = cbMtdParam._m0[16u].z * TEXCOORD_4.z;
    float _733 = (_726 * (((((_708.x - _705) * _687) + _705) * cbMtdParam._m0[12u].x) - _598)) + _598;
    float _734 = (_726 * (((((_708.y - _706) * _687) + _706) * cbMtdParam._m0[12u].y) - _599)) + _599;
    float _735 = (_726 * (((((_708.z - _707) * _687) + _707) * cbMtdParam._m0[12u].z) - _600)) + _600;
    float _742 = (_372 * (((((_351.x - _348) * _329) + _348) * cbMtdParam._m0[14u].x) - _733)) + _733;
    float _744 = (cbMtdParam._m0[19u].w * TEXCOORD.w) * _742;
    float _1107 = isnan(0.0) ? _744 : (isnan(_744) ? 0.0 : max(_744, 0.0));
    float _768 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _786 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _802 = (_213 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _808 = ((_742 + TEXCOORD.x) * cbMtdParam._m0[16u].x) * cbInstanceData._m0[_802].x;
    float _809 = (((_734 + TEXCOORD.y) + (_372 * (((((_351.y - _349) * _329) + _349) * cbMtdParam._m0[14u].y) - _734))) * cbMtdParam._m0[16u].x) * cbInstanceData._m0[_802].y;
    float _810 = (((_735 + TEXCOORD.z) + (_372 * (((((_351.z - _350) * _329) + _350) * cbMtdParam._m0[14u].z) - _735))) * cbMtdParam._m0[16u].x) * cbInstanceData._m0[_802].z;
    float _1133 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _823 = isnan(1.0) ? _1133 : (isnan(_1133) ? 1.0 : min(_1133, 1.0));
    float _828 = cbInstanceData._m0[_213 + 6u].w * (isnan(1.0) ? _1107 : (isnan(_1107) ? 1.0 : min(_1107, 1.0)));
    float _834 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _835 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _850 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_834, _835, (log2((isnan(cbSceneParam._m0[77u].w) ? _768 : (isnan(_768) ? cbSceneParam._m0[77u].w : min(_768, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _852 = _850.x;
    float _853 = _850.y;
    float _854 = _850.z;
    float _855 = _850.w;
    float _939;
    float _941;
    float _943;
    float _945;
    if (_768 > cbSceneParam._m0[78u].w)
    {
        float _901 = isnan(_768) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _768 : min(cbSceneParam._m0[80u].w, _768));
        float _902 = _901 / _768;
        float _913 = _902 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _786));
        float _914 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _786)) * _902;
        float _915 = (-0.0) - _914;
        float _916 = _902 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _786));
        float _918 = (cbSceneParam._m0[77u].w * _915) / _901;
        float _919 = _918 + cbSceneParam._m0[79u].w;
        float _920 = cbSceneParam._m0[79u].w - _914;
        float _926 = sqrt(((_913 * _913) + (_914 * _914)) + (_916 * _916));
        float _929 = (1.0 - (cbSceneParam._m0[77u].w / _901)) * _926;
        float _935 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _937 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1038;
        if (abs((_915 - _918) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1038 = ((((_919 > 0.0) ? exp2(_935 * _919) : (2.0 - exp2(_937 * _919))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _929;
        }
        else
        {
            float _1011 = 1.0 / cbSceneParam._m0[80u].x;
            float _1012 = isnan(_920) ? _919 : (isnan(_919) ? _920 : max(_919, _920));
            float _1013 = isnan(_920) ? _919 : (isnan(_919) ? _920 : min(_919, _920));
            float _1022 = isnan(0.0) ? _1012 : (isnan(_1012) ? 0.0 : min(_1012, 0.0));
            float _1023 = isnan(0.0) ? _1013 : (isnan(_1013) ? 0.0 : min(_1013, 0.0));
            _1038 = ((abs(_926 / _915) * cbSceneParam._m0[80u].y) * ((((_1022 - _1023) * 2.0) - ((exp2(_935 * (isnan(0.0) ? _1012 : (isnan(_1012) ? 0.0 : max(_1012, 0.0)))) - exp2(_935 * (isnan(0.0) ? _1013 : (isnan(_1013) ? 0.0 : max(_1013, 0.0))))) * _1011)) - ((exp2(_937 * _1022) - exp2(_937 * _1023)) * _1011))) + (_929 * cbSceneParam._m0[80u].z);
        }
        vec4 _1040 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_834, _835, 1.0), 0.0);
        float _1049 = exp2((_1038 * (-1.44269502162933349609375)) * (1.0 - _1040.w));
        float _1050 = log2(_1049);
        float _1066 = log2(_855);
        _939 = (exp2(_1066 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1050 * cbSceneParam._m0[78u].x)) * _1040.x) / cbSceneParam._m0[78u].x)) + _852;
        _941 = (exp2(_1066 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1050 * cbSceneParam._m0[78u].y)) * _1040.y) / cbSceneParam._m0[78u].y)) + _853;
        _943 = (exp2(_1066 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1050 * cbSceneParam._m0[78u].z)) * _1040.z) / cbSceneParam._m0[78u].z)) + _854;
        _945 = _1049 * _855;
    }
    else
    {
        _939 = _852;
        _941 = _853;
        _943 = _854;
        _945 = _855;
    }
    float _957 = roundEven(cbMatDynParam._m0[0u].y);
    bool _958 = _957 == 3.0;
    float _960 = log2(_945);
    float _964 = exp2(_960 * cbSceneParam._m0[78u].x);
    float _965 = exp2(_960 * cbSceneParam._m0[78u].y);
    float _966 = exp2(_960 * cbSceneParam._m0[78u].z);
    float _967 = _964 * (isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0)));
    float _968 = _965 * (isnan(0.0) ? _809 : (isnan(_809) ? 0.0 : max(_809, 0.0)));
    float _969 = _966 * (isnan(0.0) ? _810 : (isnan(_810) ? 0.0 : max(_810, 0.0)));
    float _978 = (_957 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _978 * (_958 ? _967 : (_967 + (cbSceneParam._m0[72u].w * _939)));
    SV_Target.y = _978 * (_958 ? _968 : (_968 + (cbSceneParam._m0[72u].w * _941)));
    SV_Target.z = _978 * (_958 ? _969 : (_969 + (cbSceneParam._m0[72u].w * _943)));
    SV_Target.w = _828;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _808) * _823) * _964) * _978;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _809) * _823) * _965) * _978;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _810) * _823) * _966) * _978;
    SV_Target_1.w = _828;
}


