#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 1) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 6) in vec4 TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1191;
float _1192;
float _1193;
float _1194;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _165 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _166 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _167 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _173 = inversesqrt(dot(vec3(_165, _166, _167), vec3(_165, _166, _167)));
    float _174 = _173 * _165;
    float _175 = _173 * _166;
    float _176 = _173 * _167;
    float _180 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _181 = _180 * NORMAL.x;
    float _182 = _180 * NORMAL.y;
    float _183 = _180 * NORMAL.z;
    float _187 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _188 = _187 * TANGENT.x;
    float _189 = _187 * TANGENT.y;
    float _190 = _187 * TANGENT.z;
    float _195;
    float _196;
    float _197;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _195 = (-0.0) - _181;
        _196 = (-0.0) - _182;
        _197 = (-0.0) - _183;
    }
    else
    {
        _195 = _181;
        _196 = _182;
        _197 = _183;
    }
    float _217 = cbMtdParam._m0[17u].y * cbPerFrame._m0[22u].x;
    uint _222 = uint(roundEven(NORMAL.w)) * 13u;
    uint _228 = _222 + 1u;
    uint _233 = _222 + 2u;
    float _243 = sqrt(((cbInstanceData._m0[_228].x * cbInstanceData._m0[_228].x) + (cbInstanceData._m0[_222].x * cbInstanceData._m0[_222].x)) + (cbInstanceData._m0[_233].x * cbInstanceData._m0[_233].x));
    float _249 = sqrt(((cbInstanceData._m0[_228].y * cbInstanceData._m0[_228].y) + (cbInstanceData._m0[_222].y * cbInstanceData._m0[_222].y)) + (cbInstanceData._m0[_233].y * cbInstanceData._m0[_233].y));
    float _250 = _243 * ((_217 * cbMtdParam._m0[22u].y) + TEXCOORD_4.x);
    float _251 = _249 * ((_217 * cbMtdParam._m0[22u].z) + TEXCOORD_4.y);
    vec4 _280 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * (_243 * ((_217 * cbMtdParam._m0[22u].w) + TEXCOORD_4.x))) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (_249 * ((_217 * cbMtdParam._m0[23u].x) + TEXCOORD_4.y))) + cbTextureTilingScale._m0[4u].w));
    float _288 = (_280.x * 2.0) + (-1.0);
    float _290 = (_280.y * 2.0) + (-1.0);
    float _294 = 1.0 - dot(vec2(_288, _290), vec2(_288, _290));
    float _1203 = isnan(0.0) ? _294 : (isnan(_294) ? 0.0 : max(_294, 0.0));
    float _297 = sqrt(isnan(1.0) ? _1203 : (isnan(_1203) ? 1.0 : min(_1203, 1.0)));
    float _300 = fma(_297, _195, fma(_290, _188, _288 * _174));
    float _303 = fma(_297, _196, fma(_290, _189, _288 * _175));
    float _306 = fma(_297, _197, fma(_290, _190, _288 * _176));
    float _310 = inversesqrt(dot(vec3(_300, _303, _306), vec3(_300, _303, _306)));
    float _312 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[17u].y;
    float _313 = _312 * cbMtdParam._m0[17u].x;
    float _317 = ((_300 * 0.5) * _310) + (-0.25);
    float _321 = ((_303 * 0.5) * _310) + (-0.25);
    float _322 = _321 * cbMtdParam._m0[16u].w;
    float _324 = (-0.0) - (cbMtdParam._m0[16u].w * _317);
    float _325 = fract(_313);
    float _327 = fract(_313 + 0.5);
    float _338 = abs((_325 * 2.0) + (-1.0));
    vec4 _355 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_325 * _324) + _250) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_322 * _325) + _251) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w));
    float _357 = _355.x;
    float _358 = _355.y;
    float _359 = _355.z;
    vec4 _360 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_327 * _324) + _250) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_322 * _327) + _251) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w));
    float _381 = cbMtdParam._m0[20u].x * TEXCOORD_4.w;
    float _397 = _243 * ((_217 * cbMtdParam._m0[23u].w) + TEXCOORD_4.x);
    float _398 = _249 * ((_217 * cbMtdParam._m0[24u].x) + TEXCOORD_4.y);
    float _401 = _312 * cbMtdParam._m0[16u].y;
    float _402 = _321 * cbMtdParam._m0[19u].x;
    float _404 = (-0.0) - (cbMtdParam._m0[19u].x * _317);
    float _405 = fract(_401);
    float _407 = fract(_401 + 0.5);
    float _418 = abs((_405 * 2.0) + (-1.0));
    vec4 _434 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_405 * _404) + _397) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_402 * _405) + _398) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _436 = _434.x;
    float _437 = _434.y;
    float _438 = _434.z;
    vec4 _439 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_407 * _404) + _397) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_402 * _407) + _398) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _468 = _243 * ((_217 * cbMtdParam._m0[20u].y) + TEXCOORD_4.x);
    float _469 = _249 * ((_217 * cbMtdParam._m0[20u].z) + TEXCOORD_4.y);
    float _475 = _312 * cbMtdParam._m0[18u].z;
    float _476 = _321 * cbMtdParam._m0[18u].w;
    float _478 = (-0.0) - (cbMtdParam._m0[18u].w * _317);
    float _479 = fract(_475);
    float _481 = fract(_475 + 0.5);
    float _492 = abs((_479 * 2.0) + (-1.0));
    vec4 _508 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_479 * _478) + _468) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_476 * _479) + _469) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _510 = _508.x;
    float _511 = _508.y;
    float _512 = _508.z;
    vec4 _513 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_481 * _478) + _468) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_476 * _481) + _469) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _547 = _243 * ((_217 * cbMtdParam._m0[21u].w) + TEXCOORD_4.x);
    float _548 = _249 * ((_217 * cbMtdParam._m0[22u].x) + TEXCOORD_4.y);
    float _551 = _312 * cbMtdParam._m0[17u].z;
    float _552 = _321 * cbMtdParam._m0[17u].w;
    float _554 = (-0.0) - (cbMtdParam._m0[17u].w * _317);
    float _555 = fract(_551);
    float _557 = fract(_551 + 0.5);
    float _568 = abs((_555 * 2.0) + (-1.0));
    vec4 _585 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_555 * _554) + _547) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_552 * _555) + _548) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _587 = _585.x;
    float _588 = _585.y;
    float _589 = _585.z;
    vec4 _590 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_557 * _554) + _547) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_552 * _557) + _548) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _607 = (((((_513.x - _510) * _492) + _510) * cbMtdParam._m0[11u].x) + ((((_439.x - _436) * _418) + _436) * cbMtdParam._m0[10u].x)) + ((((_590.x - _587) * _568) + _587) * cbMtdParam._m0[13u].x);
    float _608 = (((((_513.y - _511) * _492) + _511) * cbMtdParam._m0[11u].y) + ((((_439.y - _437) * _418) + _437) * cbMtdParam._m0[10u].y)) + ((((_590.y - _588) * _568) + _588) * cbMtdParam._m0[13u].y);
    float _609 = (((((_513.z - _512) * _492) + _512) * cbMtdParam._m0[11u].z) + ((((_439.z - _438) * _418) + _438) * cbMtdParam._m0[10u].z)) + ((((_590.z - _589) * _568) + _589) * cbMtdParam._m0[13u].z);
    float _622 = _243 * ((_217 * cbMtdParam._m0[23u].y) + TEXCOORD_4.x);
    float _623 = _249 * ((_217 * cbMtdParam._m0[23u].z) + TEXCOORD_4.y);
    vec4 _646 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_5, SS_BumpMap), vec2(((_243 * ((_217 * cbMtdParam._m0[24u].y) + TEXCOORD_4.x)) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((_249 * ((_217 * cbMtdParam._m0[24u].z) + TEXCOORD_4.y)) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _652 = (_646.x * 2.0) + (-1.0);
    float _653 = (_646.y * 2.0) + (-1.0);
    float _657 = 1.0 - dot(vec2(_652, _653), vec2(_652, _653));
    float _1214 = isnan(0.0) ? _657 : (isnan(_657) ? 0.0 : max(_657, 0.0));
    float _659 = sqrt(isnan(1.0) ? _1214 : (isnan(_1214) ? 1.0 : min(_1214, 1.0)));
    float _662 = fma(_659, _195, fma(_653, _188, _652 * _174));
    float _665 = fma(_659, _196, fma(_653, _189, _652 * _175));
    float _668 = fma(_659, _197, fma(_653, _190, _652 * _176));
    float _672 = inversesqrt(dot(vec3(_662, _665, _668), vec3(_662, _665, _668)));
    float _673 = _312 * cbMtdParam._m0[19u].z;
    float _680 = (((_665 * 0.5) * _672) + (-0.25)) * cbMtdParam._m0[19u].y;
    float _682 = (-0.0) - (cbMtdParam._m0[19u].y * (((_662 * 0.5) * _672) + (-0.25)));
    float _683 = fract(_673);
    float _685 = fract(_673 + 0.5);
    float _696 = abs((_683 * 2.0) + (-1.0));
    vec4 _712 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_683 * _682) + _622) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_680 * _683) + _623) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _714 = _712.x;
    float _715 = _712.y;
    float _716 = _712.z;
    vec4 _717 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_685 * _682) + _622) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_680 * _685) + _623) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _735 = cbMtdParam._m0[16u].z * TEXCOORD_4.z;
    float _742 = (_735 * (((((_717.x - _714) * _696) + _714) * cbMtdParam._m0[12u].x) - _607)) + _607;
    float _743 = (_735 * (((((_717.y - _715) * _696) + _715) * cbMtdParam._m0[12u].y) - _608)) + _608;
    float _744 = (_735 * (((((_717.z - _716) * _696) + _716) * cbMtdParam._m0[12u].z) - _609)) + _609;
    float _751 = (_381 * (((((_360.x - _357) * _338) + _357) * cbMtdParam._m0[14u].x) - _742)) + _742;
    float _753 = (cbMtdParam._m0[19u].w * TEXCOORD.w) * _751;
    float _1225 = isnan(0.0) ? _753 : (isnan(_753) ? 0.0 : max(_753, 0.0));
    float _777 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _819 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _829 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _819);
    float _830 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _819);
    float _831 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _819);
    vec4 _836 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _838 = _836.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _923 = sqrt(((_829 * _829) + (_830 * _830)) + (_831 * _831));
        float _929 = (cbMatDynParam._m0[5u].x * _923) + cbMatDynParam._m0[5u].y;
        float _1236 = isnan(0.0) ? _929 : (isnan(_929) ? 0.0 : max(_929, 0.0));
        float _930 = isnan(1.0) ? _1236 : (isnan(_1236) ? 1.0 : min(_1236, 1.0));
        float _934 = (cbMatDynParam._m0[5u].z * _923) + cbMatDynParam._m0[5u].w;
        float _1247 = isnan(0.0) ? _934 : (isnan(_934) ? 0.0 : max(_934, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1247 : (isnan(_1247) ? 1.0 : min(_1247, 1.0))) - _930)) + _930) < ((_838 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _855 = _222 + 9u;
    uint _856 = _855 + uint(cbMatDynParam._m0[0u].w);
    float _862 = ((_751 + TEXCOORD.x) * cbMtdParam._m0[16u].x) * cbInstanceData._m0[_856].x;
    float _863 = (((_743 + TEXCOORD.y) + (_381 * (((((_360.y - _358) * _338) + _358) * cbMtdParam._m0[14u].y) - _743))) * cbMtdParam._m0[16u].x) * cbInstanceData._m0[_856].y;
    float _864 = (((_744 + TEXCOORD.z) + (_381 * (((((_360.z - _359) * _338) + _359) * cbMtdParam._m0[14u].z) - _744))) * cbMtdParam._m0[16u].x) * cbInstanceData._m0[_856].z;
    float _865 = isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0));
    float _866 = isnan(0.0) ? _863 : (isnan(_863) ? 0.0 : max(_863, 0.0));
    float _867 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
    float _873 = cbMtdParam._m0[2u].x * _862;
    float _874 = cbMtdParam._m0[2u].y * _863;
    float _875 = cbMtdParam._m0[2u].z * _864;
    float _1273 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _877 = isnan(1.0) ? _1273 : (isnan(_1273) ? 1.0 : min(_1273, 1.0));
    float _882 = cbInstanceData._m0[_222 + 6u].w * (isnan(1.0) ? _1225 : (isnan(_1225) ? 1.0 : min(_1225, 1.0)));
    float _888 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _889 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _904 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_888, _889, (log2((isnan(cbSceneParam._m0[77u].w) ? _777 : (isnan(_777) ? cbSceneParam._m0[77u].w : min(_777, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _906 = _904.x;
    float _907 = _904.y;
    float _908 = _904.z;
    float _909 = _904.w;
    float _989;
    float _991;
    float _993;
    float _995;
    if (_777 > cbSceneParam._m0[78u].w)
    {
        float _951 = isnan(_777) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _777 : min(cbSceneParam._m0[80u].w, _777));
        float _952 = _951 / _777;
        float _963 = _952 * _829;
        float _964 = _830 * _952;
        float _965 = (-0.0) - _964;
        float _966 = _952 * _831;
        float _968 = (cbSceneParam._m0[77u].w * _965) / _951;
        float _969 = _968 + cbSceneParam._m0[79u].w;
        float _970 = cbSceneParam._m0[79u].w - _964;
        float _976 = sqrt(((_963 * _963) + (_964 * _964)) + (_966 * _966));
        float _979 = (1.0 - (cbSceneParam._m0[77u].w / _951)) * _976;
        float _985 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _987 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1117;
        if (abs((_965 - _968) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1117 = ((((_969 > 0.0) ? exp2(_985 * _969) : (2.0 - exp2(_987 * _969))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _979;
        }
        else
        {
            float _1074 = 1.0 / cbSceneParam._m0[80u].x;
            float _1075 = isnan(_970) ? _969 : (isnan(_969) ? _970 : max(_969, _970));
            float _1076 = isnan(_970) ? _969 : (isnan(_969) ? _970 : min(_969, _970));
            float _1085 = isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : min(_1075, 0.0));
            float _1086 = isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : min(_1076, 0.0));
            _1117 = ((abs(_976 / _965) * cbSceneParam._m0[80u].y) * ((((_1085 - _1086) * 2.0) - ((exp2(_985 * (isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : max(_1075, 0.0)))) - exp2(_985 * (isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : max(_1076, 0.0))))) * _1074)) - ((exp2(_987 * _1085) - exp2(_987 * _1086)) * _1074))) + (_979 * cbSceneParam._m0[80u].z);
        }
        vec4 _1119 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_888, _889, 1.0), 0.0);
        float _1128 = exp2((_1117 * (-1.44269502162933349609375)) * (1.0 - _1119.w));
        float _1129 = log2(_1128);
        float _1145 = log2(_909);
        _989 = (exp2(_1145 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1129 * cbSceneParam._m0[78u].x)) * _1119.x) / cbSceneParam._m0[78u].x)) + _906;
        _991 = (exp2(_1145 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1129 * cbSceneParam._m0[78u].y)) * _1119.y) / cbSceneParam._m0[78u].y)) + _907;
        _993 = (exp2(_1145 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1129 * cbSceneParam._m0[78u].z)) * _1119.z) / cbSceneParam._m0[78u].z)) + _908;
        _995 = _1128 * _909;
    }
    else
    {
        _989 = _906;
        _991 = _907;
        _993 = _908;
        _995 = _909;
    }
    bool _1155;
    vec4 _1005;
    vec4 _1029;
    float _1031;
    float _1035;
    float _1036;
    float _1037;
    float _1040;
    float _1043;
    float _1046;
    float _1047;
    bool _1058;
    for (;;)
    {
        _1005 = cbMatDynParam._m0[0u];
        float _1007 = roundEven(_1005.y);
        bool _1008 = _1007 == 3.0;
        float _1010 = log2(_995);
        float _1014 = exp2(_1010 * cbSceneParam._m0[78u].x);
        float _1015 = exp2(_1010 * cbSceneParam._m0[78u].y);
        float _1016 = exp2(_1010 * cbSceneParam._m0[78u].z);
        float _1017 = _1014 * _865;
        float _1018 = _1015 * _866;
        float _1019 = _1016 * _867;
        float _1026 = _838 + (-0.5);
        _1029 = cbMtdParam._m0[1u];
        _1031 = _1029.y * _1026;
        float _1034 = (_1007 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1035 = _1034 * (_1008 ? _1017 : (_1017 + (cbSceneParam._m0[72u].w * _989)));
        _1036 = _1034 * (_1008 ? _1018 : (_1018 + (cbSceneParam._m0[72u].w * _991)));
        _1037 = _1034 * (_1008 ? _1019 : (_1019 + (cbSceneParam._m0[72u].w * _993)));
        _1040 = ((_873 * _877) * _1014) * _1034;
        _1043 = ((_874 * _877) * _1015) * _1034;
        _1046 = ((_875 * _877) * _1016) * _1034;
        _1047 = _1026 * 0.999000012874603271484375;
        _1058 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1058)
        {
            if ((cbInstanceData._m0[_222 + 7u].x + _1047) < 0.5)
            {
                _1155 = true;
                break;
            }
        }
        uint _1109 = _855 + uint(_1005.w);
        if ((cbInstanceData._m0[_1109].w < 1.0) && ((cbInstanceData._m0[_1109].w + _1047) < 0.5))
        {
            _1155 = true;
            break;
        }
        if ((_1031 + 1.0) < _1029.x)
        {
            _1155 = true;
            break;
        }
        _1155 = false;
        break;
    }
    float _1160;
    if (_1155)
    {
        discard_state = true;
        _1160 = 0.0;
    }
    else
    {
        _1160 = _882;
    }
    SV_Target.x = _1035;
    SV_Target.y = _1036;
    SV_Target.z = _1037;
    SV_Target.w = _1160;
    SV_Target_1.x = _1040;
    SV_Target_1.y = _1043;
    SV_Target_1.z = _1046;
    SV_Target_1.w = _882;
    discard_exit();
}


