#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 6) in vec4 TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1281;
float _1282;
float _1283;
float _1284;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _169 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _170 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _171 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _177 = inversesqrt(dot(vec3(_169, _170, _171), vec3(_169, _170, _171)));
    float _178 = _177 * _169;
    float _179 = _177 * _170;
    float _180 = _177 * _171;
    float _184 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _185 = _184 * NORMAL.x;
    float _186 = _184 * NORMAL.y;
    float _187 = _184 * NORMAL.z;
    float _191 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _192 = _191 * TANGENT.x;
    float _193 = _191 * TANGENT.y;
    float _194 = _191 * TANGENT.z;
    float _199;
    float _200;
    float _201;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _199 = (-0.0) - _185;
        _200 = (-0.0) - _186;
        _201 = (-0.0) - _187;
    }
    else
    {
        _199 = _185;
        _200 = _186;
        _201 = _187;
    }
    float _217 = cbMtdParam._m0[21u].y * cbPerFrame._m0[22u].x;
    float _224 = TEXCOORD_4.y - ((cbMtdParam._m0[21u].z * cbPerFrame._m0[22u].x) * 0.550000011920928955078125);
    float _243 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbTextureTilingScale._m0[0u].x * cbMtdParam._m0[18u].x) * ((_217 * 6.900000095367431640625) + TEXCOORD_4.x)) + cbTextureTilingScale._m0[0u].z, ((cbTextureTilingScale._m0[0u].y * cbMtdParam._m0[18u].x) * _224) + cbTextureTilingScale._m0[0u].w)).x * 0.0500000007450580596923828125;
    float _255 = ((_224 * cbMtdParam._m0[18u].x) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w;
    float _305 = cbMtdParam._m0[17u].y * cbPerFrame._m0[22u].x;
    uint _310 = uint(roundEven(NORMAL.w)) * 13u;
    uint _316 = _310 + 1u;
    uint _321 = _310 + 2u;
    float _331 = sqrt(((cbInstanceData._m0[_316].x * cbInstanceData._m0[_316].x) + (cbInstanceData._m0[_310].x * cbInstanceData._m0[_310].x)) + (cbInstanceData._m0[_321].x * cbInstanceData._m0[_321].x));
    float _337 = sqrt(((cbInstanceData._m0[_316].y * cbInstanceData._m0[_316].y) + (cbInstanceData._m0[_310].y * cbInstanceData._m0[_310].y)) + (cbInstanceData._m0[_321].y * cbInstanceData._m0[_321].y));
    float _338 = _331 * ((_305 * cbMtdParam._m0[22u].y) + TEXCOORD_4.x);
    float _339 = _337 * ((_305 * cbMtdParam._m0[22u].z) + TEXCOORD_4.y);
    vec4 _367 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * (_331 * ((_305 * cbMtdParam._m0[22u].w) + TEXCOORD_4.x))) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (_337 * ((_305 * cbMtdParam._m0[23u].x) + TEXCOORD_4.y))) + cbTextureTilingScale._m0[4u].w));
    float _374 = (_367.x * 2.0) + (-1.0);
    float _376 = (_367.y * 2.0) + (-1.0);
    float _380 = 1.0 - dot(vec2(_374, _376), vec2(_374, _376));
    float _1293 = isnan(0.0) ? _380 : (isnan(_380) ? 0.0 : max(_380, 0.0));
    float _382 = sqrt(isnan(1.0) ? _1293 : (isnan(_1293) ? 1.0 : min(_1293, 1.0)));
    float _385 = fma(_382, _199, fma(_376, _192, _374 * _178));
    float _388 = fma(_382, _200, fma(_376, _193, _374 * _179));
    float _391 = fma(_382, _201, fma(_376, _194, _374 * _180));
    float _395 = inversesqrt(dot(vec3(_385, _388, _391), vec3(_385, _388, _391)));
    float _397 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[17u].y;
    float _398 = _397 * cbMtdParam._m0[17u].x;
    float _402 = ((_385 * 0.5) * _395) + (-0.25);
    float _406 = ((_388 * 0.5) * _395) + (-0.25);
    float _407 = _406 * cbMtdParam._m0[16u].w;
    float _409 = (-0.0) - (cbMtdParam._m0[16u].w * _402);
    float _410 = fract(_398);
    float _412 = fract(_398 + 0.5);
    float _423 = abs((_410 * 2.0) + (-1.0));
    vec4 _440 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_410 * _409) + _338) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_407 * _410) + _339) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w));
    float _442 = _440.x;
    float _443 = _440.y;
    float _444 = _440.z;
    vec4 _445 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_412 * _409) + _338) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_407 * _412) + _339) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w));
    float _463 = cbMtdParam._m0[20u].x * TEXCOORD_4.w;
    float _479 = _331 * ((_305 * cbMtdParam._m0[23u].w) + TEXCOORD_4.x);
    float _480 = _337 * ((_305 * cbMtdParam._m0[24u].x) + TEXCOORD_4.y);
    float _483 = _397 * cbMtdParam._m0[16u].y;
    float _484 = _406 * cbMtdParam._m0[19u].x;
    float _486 = (-0.0) - (cbMtdParam._m0[19u].x * _402);
    float _487 = fract(_483);
    float _489 = fract(_483 + 0.5);
    float _500 = abs((_487 * 2.0) + (-1.0));
    vec4 _516 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_487 * _486) + _479) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_484 * _487) + _480) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _518 = _516.x;
    float _519 = _516.y;
    float _520 = _516.z;
    vec4 _521 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_489 * _486) + _479) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_484 * _489) + _480) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _550 = _331 * ((_305 * cbMtdParam._m0[20u].y) + TEXCOORD_4.x);
    float _551 = _337 * ((_305 * cbMtdParam._m0[20u].z) + TEXCOORD_4.y);
    float _554 = _397 * cbMtdParam._m0[18u].z;
    float _555 = _406 * cbMtdParam._m0[18u].w;
    float _557 = (-0.0) - (cbMtdParam._m0[18u].w * _402);
    float _558 = fract(_554);
    float _560 = fract(_554 + 0.5);
    float _571 = abs((_558 * 2.0) + (-1.0));
    vec4 _587 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_558 * _557) + _550) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_555 * _558) + _551) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _589 = _587.x;
    float _590 = _587.y;
    float _591 = _587.z;
    vec4 _592 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_560 * _557) + _550) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_555 * _560) + _551) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _623 = _331 * ((_305 * cbMtdParam._m0[21u].w) + TEXCOORD_4.x);
    float _624 = _337 * ((_305 * cbMtdParam._m0[22u].x) + TEXCOORD_4.y);
    float _627 = _397 * cbMtdParam._m0[17u].z;
    float _628 = _406 * cbMtdParam._m0[17u].w;
    float _630 = (-0.0) - (cbMtdParam._m0[17u].w * _402);
    float _631 = fract(_627);
    float _633 = fract(_627 + 0.5);
    float _644 = abs((_631 * 2.0) + (-1.0));
    vec4 _661 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_631 * _630) + _623) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_628 * _631) + _624) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _663 = _661.x;
    float _664 = _661.y;
    float _665 = _661.z;
    vec4 _666 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_633 * _630) + _623) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_628 * _633) + _624) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _683 = (((((_592.x - _589) * _571) + _589) * cbMtdParam._m0[11u].x) + ((((_521.x - _518) * _500) + _518) * cbMtdParam._m0[10u].x)) + ((((_666.x - _663) * _644) + _663) * cbMtdParam._m0[13u].x);
    float _684 = (((((_592.y - _590) * _571) + _590) * cbMtdParam._m0[11u].y) + ((((_521.y - _519) * _500) + _519) * cbMtdParam._m0[10u].y)) + ((((_666.y - _664) * _644) + _664) * cbMtdParam._m0[13u].y);
    float _685 = (((((_592.z - _591) * _571) + _591) * cbMtdParam._m0[11u].z) + ((((_521.z - _520) * _500) + _520) * cbMtdParam._m0[10u].z)) + ((((_666.z - _665) * _644) + _665) * cbMtdParam._m0[13u].z);
    float _698 = _331 * ((_305 * cbMtdParam._m0[23u].y) + TEXCOORD_4.x);
    float _699 = _337 * ((_305 * cbMtdParam._m0[23u].z) + TEXCOORD_4.y);
    vec4 _722 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_5, SS_BumpMap), vec2(((_331 * ((_305 * cbMtdParam._m0[24u].y) + TEXCOORD_4.x)) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((_337 * ((_305 * cbMtdParam._m0[24u].z) + TEXCOORD_4.y)) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _728 = (_722.x * 2.0) + (-1.0);
    float _729 = (_722.y * 2.0) + (-1.0);
    float _733 = 1.0 - dot(vec2(_728, _729), vec2(_728, _729));
    float _1304 = isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0));
    float _735 = sqrt(isnan(1.0) ? _1304 : (isnan(_1304) ? 1.0 : min(_1304, 1.0)));
    float _738 = fma(_735, _199, fma(_729, _192, _728 * _178));
    float _741 = fma(_735, _200, fma(_729, _193, _728 * _179));
    float _744 = fma(_735, _201, fma(_729, _194, _728 * _180));
    float _748 = inversesqrt(dot(vec3(_738, _741, _744), vec3(_738, _741, _744)));
    float _749 = _397 * cbMtdParam._m0[19u].z;
    float _756 = (((_741 * 0.5) * _748) + (-0.25)) * cbMtdParam._m0[19u].y;
    float _758 = (-0.0) - (cbMtdParam._m0[19u].y * (((_738 * 0.5) * _748) + (-0.25)));
    float _759 = fract(_749);
    float _761 = fract(_749 + 0.5);
    float _772 = abs((_759 * 2.0) + (-1.0));
    vec4 _788 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_759 * _758) + _698) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_756 * _759) + _699) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _790 = _788.x;
    float _791 = _788.y;
    float _792 = _788.z;
    vec4 _793 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_761 * _758) + _698) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_756 * _761) + _699) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _811 = cbMtdParam._m0[16u].z * TEXCOORD_4.z;
    float _818 = (_811 * (((((_793.x - _790) * _772) + _790) * cbMtdParam._m0[12u].x) - _683)) + _683;
    float _819 = (_811 * (((((_793.y - _791) * _772) + _791) * cbMtdParam._m0[12u].y) - _684)) + _684;
    float _820 = (_811 * (((((_793.z - _792) * _772) + _792) * cbMtdParam._m0[12u].z) - _685)) + _685;
    float _827 = (_463 * (((((_445.x - _442) * _423) + _442) * cbMtdParam._m0[14u].x) - _818)) + _818;
    float _832 = ((((cbMtdParam._m0[19u].w * TEXCOORD.w) * (1.0 - _243)) * cbMtdParam._m0[18u].y) * (((_243 - (texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_0, SS_WrapLinear), vec2(((((_217 * 3.2999999523162841796875) + TEXCOORD_4.x) * cbMtdParam._m0[18u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, _255)).y * 0.20000000298023223876953125)) + texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_0, SS_WrapLinear), vec2((((cbMtdParam._m0[20u].w * cbPerFrame._m0[22u].x) + TEXCOORD_4.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[21u].x * cbPerFrame._m0[22u].x) + TEXCOORD_4.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z) + (texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_0, SS_WrapLinear), vec2(((((_217 * 16.0) + TEXCOORD_4.x) * cbMtdParam._m0[18u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, _255)).x * 0.100000001490116119384765625))) * _827;
    float _1315 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
    float _868 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _909 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _919 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _909);
    float _920 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _909);
    float _921 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _909);
    vec4 _926 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _928 = _926.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1013 = sqrt(((_919 * _919) + (_920 * _920)) + (_921 * _921));
        float _1019 = (cbMatDynParam._m0[5u].x * _1013) + cbMatDynParam._m0[5u].y;
        float _1326 = isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0));
        float _1020 = isnan(1.0) ? _1326 : (isnan(_1326) ? 1.0 : min(_1326, 1.0));
        float _1024 = (cbMatDynParam._m0[5u].z * _1013) + cbMatDynParam._m0[5u].w;
        float _1337 = isnan(0.0) ? _1024 : (isnan(_1024) ? 0.0 : max(_1024, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1337 : (isnan(_1337) ? 1.0 : min(_1337, 1.0))) - _1020)) + _1020) < ((_928 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _945 = _310 + 9u;
    uint _946 = _945 + uint(cbMatDynParam._m0[0u].w);
    float _952 = ((((cbMtdParam._m0[9u].x * _243) + TEXCOORD.x) + _827) * cbMtdParam._m0[16u].x) * cbInstanceData._m0[_946].x;
    float _953 = (((((_243 * cbMtdParam._m0[9u].y) + TEXCOORD.y) + _819) + (_463 * (((((_445.y - _443) * _423) + _443) * cbMtdParam._m0[14u].y) - _819))) * cbMtdParam._m0[16u].x) * cbInstanceData._m0[_946].y;
    float _954 = (((((_243 * cbMtdParam._m0[9u].z) + TEXCOORD.z) + _820) + (_463 * (((((_445.z - _444) * _423) + _444) * cbMtdParam._m0[14u].z) - _820))) * cbMtdParam._m0[16u].x) * cbInstanceData._m0[_946].z;
    float _955 = isnan(0.0) ? _952 : (isnan(_952) ? 0.0 : max(_952, 0.0));
    float _956 = isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0));
    float _957 = isnan(0.0) ? _954 : (isnan(_954) ? 0.0 : max(_954, 0.0));
    float _963 = cbMtdParam._m0[2u].x * _952;
    float _964 = cbMtdParam._m0[2u].y * _953;
    float _965 = cbMtdParam._m0[2u].z * _954;
    float _1363 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _967 = isnan(1.0) ? _1363 : (isnan(_1363) ? 1.0 : min(_1363, 1.0));
    float _972 = cbInstanceData._m0[_310 + 6u].w * (isnan(1.0) ? _1315 : (isnan(_1315) ? 1.0 : min(_1315, 1.0)));
    float _978 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _979 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _994 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_978, _979, (log2((isnan(cbSceneParam._m0[77u].w) ? _868 : (isnan(_868) ? cbSceneParam._m0[77u].w : min(_868, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _996 = _994.x;
    float _997 = _994.y;
    float _998 = _994.z;
    float _999 = _994.w;
    float _1079;
    float _1081;
    float _1083;
    float _1085;
    if (_868 > cbSceneParam._m0[78u].w)
    {
        float _1041 = isnan(_868) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _868 : min(cbSceneParam._m0[80u].w, _868));
        float _1042 = _1041 / _868;
        float _1053 = _1042 * _919;
        float _1054 = _920 * _1042;
        float _1055 = (-0.0) - _1054;
        float _1056 = _1042 * _921;
        float _1058 = (cbSceneParam._m0[77u].w * _1055) / _1041;
        float _1059 = _1058 + cbSceneParam._m0[79u].w;
        float _1060 = cbSceneParam._m0[79u].w - _1054;
        float _1066 = sqrt(((_1053 * _1053) + (_1054 * _1054)) + (_1056 * _1056));
        float _1069 = (1.0 - (cbSceneParam._m0[77u].w / _1041)) * _1066;
        float _1075 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1077 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1207;
        if (abs((_1055 - _1058) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1207 = ((((_1059 > 0.0) ? exp2(_1075 * _1059) : (2.0 - exp2(_1077 * _1059))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1069;
        }
        else
        {
            float _1164 = 1.0 / cbSceneParam._m0[80u].x;
            float _1165 = isnan(_1060) ? _1059 : (isnan(_1059) ? _1060 : max(_1059, _1060));
            float _1166 = isnan(_1060) ? _1059 : (isnan(_1059) ? _1060 : min(_1059, _1060));
            float _1175 = isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : min(_1165, 0.0));
            float _1176 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : min(_1166, 0.0));
            _1207 = ((abs(_1066 / _1055) * cbSceneParam._m0[80u].y) * ((((_1175 - _1176) * 2.0) - ((exp2(_1075 * (isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0)))) - exp2(_1075 * (isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0))))) * _1164)) - ((exp2(_1077 * _1175) - exp2(_1077 * _1176)) * _1164))) + (_1069 * cbSceneParam._m0[80u].z);
        }
        vec4 _1209 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_978, _979, 1.0), 0.0);
        float _1218 = exp2((_1207 * (-1.44269502162933349609375)) * (1.0 - _1209.w));
        float _1219 = log2(_1218);
        float _1235 = log2(_999);
        _1079 = (exp2(_1235 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1219 * cbSceneParam._m0[78u].x)) * _1209.x) / cbSceneParam._m0[78u].x)) + _996;
        _1081 = (exp2(_1235 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1219 * cbSceneParam._m0[78u].y)) * _1209.y) / cbSceneParam._m0[78u].y)) + _997;
        _1083 = (exp2(_1235 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1219 * cbSceneParam._m0[78u].z)) * _1209.z) / cbSceneParam._m0[78u].z)) + _998;
        _1085 = _1218 * _999;
    }
    else
    {
        _1079 = _996;
        _1081 = _997;
        _1083 = _998;
        _1085 = _999;
    }
    bool _1245;
    vec4 _1095;
    vec4 _1119;
    float _1121;
    float _1125;
    float _1126;
    float _1127;
    float _1130;
    float _1133;
    float _1136;
    float _1137;
    bool _1148;
    for (;;)
    {
        _1095 = cbMatDynParam._m0[0u];
        float _1097 = roundEven(_1095.y);
        bool _1098 = _1097 == 3.0;
        float _1100 = log2(_1085);
        float _1104 = exp2(_1100 * cbSceneParam._m0[78u].x);
        float _1105 = exp2(_1100 * cbSceneParam._m0[78u].y);
        float _1106 = exp2(_1100 * cbSceneParam._m0[78u].z);
        float _1107 = _1104 * _955;
        float _1108 = _1105 * _956;
        float _1109 = _1106 * _957;
        float _1116 = _928 + (-0.5);
        _1119 = cbMtdParam._m0[1u];
        _1121 = _1119.y * _1116;
        float _1124 = (_1097 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1125 = _1124 * (_1098 ? _1107 : (_1107 + (cbSceneParam._m0[72u].w * _1079)));
        _1126 = _1124 * (_1098 ? _1108 : (_1108 + (cbSceneParam._m0[72u].w * _1081)));
        _1127 = _1124 * (_1098 ? _1109 : (_1109 + (cbSceneParam._m0[72u].w * _1083)));
        _1130 = ((_963 * _967) * _1104) * _1124;
        _1133 = ((_964 * _967) * _1105) * _1124;
        _1136 = ((_965 * _967) * _1106) * _1124;
        _1137 = _1116 * 0.999000012874603271484375;
        _1148 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1148)
        {
            if ((cbInstanceData._m0[_310 + 7u].x + _1137) < 0.5)
            {
                _1245 = true;
                break;
            }
        }
        uint _1199 = _945 + uint(_1095.w);
        if ((cbInstanceData._m0[_1199].w < 1.0) && ((cbInstanceData._m0[_1199].w + _1137) < 0.5))
        {
            _1245 = true;
            break;
        }
        if ((_1121 + 1.0) < _1119.x)
        {
            _1245 = true;
            break;
        }
        _1245 = false;
        break;
    }
    float _1250;
    if (_1245)
    {
        discard_state = true;
        _1250 = 0.0;
    }
    else
    {
        _1250 = _972;
    }
    SV_Target.x = _1125;
    SV_Target.y = _1126;
    SV_Target.z = _1127;
    SV_Target.w = _1250;
    SV_Target_1.x = _1130;
    SV_Target_1.y = _1133;
    SV_Target_1.z = _1136;
    SV_Target_1.w = _972;
    discard_exit();
}


