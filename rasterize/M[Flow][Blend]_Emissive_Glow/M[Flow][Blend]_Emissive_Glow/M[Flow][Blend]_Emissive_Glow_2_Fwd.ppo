#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 1) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 6) in vec4 TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _162 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _163 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _164 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _170 = inversesqrt(dot(vec3(_162, _163, _164), vec3(_162, _163, _164)));
    float _171 = _170 * _162;
    float _172 = _170 * _163;
    float _173 = _170 * _164;
    float _177 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _178 = _177 * NORMAL.x;
    float _179 = _177 * NORMAL.y;
    float _180 = _177 * NORMAL.z;
    float _184 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _185 = _184 * TANGENT.x;
    float _186 = _184 * TANGENT.y;
    float _187 = _184 * TANGENT.z;
    float _192;
    float _193;
    float _194;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _192 = (-0.0) - _178;
        _193 = (-0.0) - _179;
        _194 = (-0.0) - _180;
    }
    else
    {
        _192 = _178;
        _193 = _179;
        _194 = _180;
    }
    float _214 = cbMtdParam._m0[17u].y * cbPerFrame._m0[22u].x;
    uint _219 = uint(roundEven(NORMAL.w)) * 13u;
    uint _225 = _219 + 1u;
    uint _230 = _219 + 2u;
    float _240 = sqrt(((cbInstanceData._m0[_225].x * cbInstanceData._m0[_225].x) + (cbInstanceData._m0[_219].x * cbInstanceData._m0[_219].x)) + (cbInstanceData._m0[_230].x * cbInstanceData._m0[_230].x));
    float _246 = sqrt(((cbInstanceData._m0[_225].y * cbInstanceData._m0[_225].y) + (cbInstanceData._m0[_219].y * cbInstanceData._m0[_219].y)) + (cbInstanceData._m0[_230].y * cbInstanceData._m0[_230].y));
    float _247 = _240 * ((_214 * cbMtdParam._m0[22u].y) + TEXCOORD_4.x);
    float _248 = _246 * ((_214 * cbMtdParam._m0[22u].z) + TEXCOORD_4.y);
    vec4 _277 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * (_240 * ((_214 * cbMtdParam._m0[22u].w) + TEXCOORD_4.x))) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (_246 * ((_214 * cbMtdParam._m0[23u].x) + TEXCOORD_4.y))) + cbTextureTilingScale._m0[4u].w));
    float _285 = (_277.x * 2.0) + (-1.0);
    float _287 = (_277.y * 2.0) + (-1.0);
    float _291 = 1.0 - dot(vec2(_285, _287), vec2(_285, _287));
    float _1106 = isnan(0.0) ? _291 : (isnan(_291) ? 0.0 : max(_291, 0.0));
    float _294 = sqrt(isnan(1.0) ? _1106 : (isnan(_1106) ? 1.0 : min(_1106, 1.0)));
    float _297 = fma(_294, _192, fma(_287, _185, _285 * _171));
    float _300 = fma(_294, _193, fma(_287, _186, _285 * _172));
    float _303 = fma(_294, _194, fma(_287, _187, _285 * _173));
    float _307 = inversesqrt(dot(vec3(_297, _300, _303), vec3(_297, _300, _303)));
    float _309 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[17u].y;
    float _310 = _309 * cbMtdParam._m0[17u].x;
    float _314 = ((_297 * 0.5) * _307) + (-0.25);
    float _318 = ((_300 * 0.5) * _307) + (-0.25);
    float _319 = _318 * cbMtdParam._m0[16u].w;
    float _321 = (-0.0) - (cbMtdParam._m0[16u].w * _314);
    float _322 = fract(_310);
    float _324 = fract(_310 + 0.5);
    float _335 = abs((_322 * 2.0) + (-1.0));
    vec4 _352 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_322 * _321) + _247) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_319 * _322) + _248) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w));
    float _354 = _352.x;
    float _355 = _352.y;
    float _356 = _352.z;
    vec4 _357 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_324 * _321) + _247) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_319 * _324) + _248) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w));
    float _378 = cbMtdParam._m0[20u].x * TEXCOORD_4.w;
    float _394 = _240 * ((_214 * cbMtdParam._m0[23u].w) + TEXCOORD_4.x);
    float _395 = _246 * ((_214 * cbMtdParam._m0[24u].x) + TEXCOORD_4.y);
    float _398 = _309 * cbMtdParam._m0[16u].y;
    float _399 = _318 * cbMtdParam._m0[19u].x;
    float _401 = (-0.0) - (cbMtdParam._m0[19u].x * _314);
    float _402 = fract(_398);
    float _404 = fract(_398 + 0.5);
    float _415 = abs((_402 * 2.0) + (-1.0));
    vec4 _431 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_402 * _401) + _394) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_399 * _402) + _395) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _433 = _431.x;
    float _434 = _431.y;
    float _435 = _431.z;
    vec4 _436 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_404 * _401) + _394) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_399 * _404) + _395) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _465 = _240 * ((_214 * cbMtdParam._m0[20u].y) + TEXCOORD_4.x);
    float _466 = _246 * ((_214 * cbMtdParam._m0[20u].z) + TEXCOORD_4.y);
    float _472 = _309 * cbMtdParam._m0[18u].z;
    float _473 = _318 * cbMtdParam._m0[18u].w;
    float _475 = (-0.0) - (cbMtdParam._m0[18u].w * _314);
    float _476 = fract(_472);
    float _478 = fract(_472 + 0.5);
    float _489 = abs((_476 * 2.0) + (-1.0));
    vec4 _505 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_476 * _475) + _465) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_473 * _476) + _466) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _507 = _505.x;
    float _508 = _505.y;
    float _509 = _505.z;
    vec4 _510 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_478 * _475) + _465) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_473 * _478) + _466) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _544 = _240 * ((_214 * cbMtdParam._m0[21u].w) + TEXCOORD_4.x);
    float _545 = _246 * ((_214 * cbMtdParam._m0[22u].x) + TEXCOORD_4.y);
    float _548 = _309 * cbMtdParam._m0[17u].z;
    float _549 = _318 * cbMtdParam._m0[17u].w;
    float _551 = (-0.0) - (cbMtdParam._m0[17u].w * _314);
    float _552 = fract(_548);
    float _554 = fract(_548 + 0.5);
    float _565 = abs((_552 * 2.0) + (-1.0));
    vec4 _582 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_552 * _551) + _544) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_549 * _552) + _545) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _584 = _582.x;
    float _585 = _582.y;
    float _586 = _582.z;
    vec4 _587 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_554 * _551) + _544) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_549 * _554) + _545) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _604 = (((((_510.x - _507) * _489) + _507) * cbMtdParam._m0[11u].x) + ((((_436.x - _433) * _415) + _433) * cbMtdParam._m0[10u].x)) + ((((_587.x - _584) * _565) + _584) * cbMtdParam._m0[13u].x);
    float _605 = (((((_510.y - _508) * _489) + _508) * cbMtdParam._m0[11u].y) + ((((_436.y - _434) * _415) + _434) * cbMtdParam._m0[10u].y)) + ((((_587.y - _585) * _565) + _585) * cbMtdParam._m0[13u].y);
    float _606 = (((((_510.z - _509) * _489) + _509) * cbMtdParam._m0[11u].z) + ((((_436.z - _435) * _415) + _435) * cbMtdParam._m0[10u].z)) + ((((_587.z - _586) * _565) + _586) * cbMtdParam._m0[13u].z);
    float _619 = _240 * ((_214 * cbMtdParam._m0[23u].y) + TEXCOORD_4.x);
    float _620 = _246 * ((_214 * cbMtdParam._m0[23u].z) + TEXCOORD_4.y);
    vec4 _643 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_5, SS_BumpMap), vec2(((_240 * ((_214 * cbMtdParam._m0[24u].y) + TEXCOORD_4.x)) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((_246 * ((_214 * cbMtdParam._m0[24u].z) + TEXCOORD_4.y)) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _649 = (_643.x * 2.0) + (-1.0);
    float _650 = (_643.y * 2.0) + (-1.0);
    float _654 = 1.0 - dot(vec2(_649, _650), vec2(_649, _650));
    float _1117 = isnan(0.0) ? _654 : (isnan(_654) ? 0.0 : max(_654, 0.0));
    float _656 = sqrt(isnan(1.0) ? _1117 : (isnan(_1117) ? 1.0 : min(_1117, 1.0)));
    float _659 = fma(_656, _192, fma(_650, _185, _649 * _171));
    float _662 = fma(_656, _193, fma(_650, _186, _649 * _172));
    float _665 = fma(_656, _194, fma(_650, _187, _649 * _173));
    float _669 = inversesqrt(dot(vec3(_659, _662, _665), vec3(_659, _662, _665)));
    float _670 = _309 * cbMtdParam._m0[19u].z;
    float _677 = (((_662 * 0.5) * _669) + (-0.25)) * cbMtdParam._m0[19u].y;
    float _679 = (-0.0) - (cbMtdParam._m0[19u].y * (((_659 * 0.5) * _669) + (-0.25)));
    float _680 = fract(_670);
    float _682 = fract(_670 + 0.5);
    float _693 = abs((_680 * 2.0) + (-1.0));
    vec4 _709 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_680 * _679) + _619) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_677 * _680) + _620) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _711 = _709.x;
    float _712 = _709.y;
    float _713 = _709.z;
    vec4 _714 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_682 * _679) + _619) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_677 * _682) + _620) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _732 = cbMtdParam._m0[16u].z * TEXCOORD_4.z;
    float _739 = (_732 * (((((_714.x - _711) * _693) + _711) * cbMtdParam._m0[12u].x) - _604)) + _604;
    float _740 = (_732 * (((((_714.y - _712) * _693) + _712) * cbMtdParam._m0[12u].y) - _605)) + _605;
    float _741 = (_732 * (((((_714.z - _713) * _693) + _713) * cbMtdParam._m0[12u].z) - _606)) + _606;
    float _748 = (_378 * (((((_357.x - _354) * _335) + _354) * cbMtdParam._m0[14u].x) - _739)) + _739;
    float _750 = (cbMtdParam._m0[19u].w * TEXCOORD.w) * _748;
    float _751 = _748 + TEXCOORD.x;
    float _753 = (_740 + TEXCOORD.y) + (_378 * (((((_357.y - _355) * _335) + _355) * cbMtdParam._m0[14u].y) - _740));
    float _755 = (_741 + TEXCOORD.z) + (_378 * (((((_357.z - _356) * _335) + _356) * cbMtdParam._m0[14u].z) - _741));
    float _1128 = isnan(0.0) ? _750 : (isnan(_750) ? 0.0 : max(_750, 0.0));
    float _789 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _807 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _823 = (_219 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _829 = ((((cbMtdParam._m0[15u].x - _751) * TEXCOORD_9.x) + _751) * cbMtdParam._m0[16u].x) * cbInstanceData._m0[_823].x;
    float _830 = ((((cbMtdParam._m0[15u].y - _753) * TEXCOORD_9.y) + _753) * cbMtdParam._m0[16u].x) * cbInstanceData._m0[_823].y;
    float _831 = ((((cbMtdParam._m0[15u].z - _755) * TEXCOORD_9.z) + _755) * cbMtdParam._m0[16u].x) * cbInstanceData._m0[_823].z;
    float _1154 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _844 = isnan(1.0) ? _1154 : (isnan(_1154) ? 1.0 : min(_1154, 1.0));
    float _849 = cbInstanceData._m0[_219 + 6u].w * (isnan(1.0) ? _1128 : (isnan(_1128) ? 1.0 : min(_1128, 1.0)));
    float _855 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _856 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _871 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_855, _856, (log2((isnan(cbSceneParam._m0[77u].w) ? _789 : (isnan(_789) ? cbSceneParam._m0[77u].w : min(_789, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _873 = _871.x;
    float _874 = _871.y;
    float _875 = _871.z;
    float _876 = _871.w;
    float _960;
    float _962;
    float _964;
    float _966;
    if (_789 > cbSceneParam._m0[78u].w)
    {
        float _922 = isnan(_789) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _789 : min(cbSceneParam._m0[80u].w, _789));
        float _923 = _922 / _789;
        float _934 = _923 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _807));
        float _935 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _807)) * _923;
        float _936 = (-0.0) - _935;
        float _937 = _923 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _807));
        float _939 = (cbSceneParam._m0[77u].w * _936) / _922;
        float _940 = _939 + cbSceneParam._m0[79u].w;
        float _941 = cbSceneParam._m0[79u].w - _935;
        float _947 = sqrt(((_934 * _934) + (_935 * _935)) + (_937 * _937));
        float _950 = (1.0 - (cbSceneParam._m0[77u].w / _922)) * _947;
        float _956 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _958 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1059;
        if (abs((_936 - _939) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1059 = ((((_940 > 0.0) ? exp2(_956 * _940) : (2.0 - exp2(_958 * _940))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _950;
        }
        else
        {
            float _1032 = 1.0 / cbSceneParam._m0[80u].x;
            float _1033 = isnan(_941) ? _940 : (isnan(_940) ? _941 : max(_940, _941));
            float _1034 = isnan(_941) ? _940 : (isnan(_940) ? _941 : min(_940, _941));
            float _1043 = isnan(0.0) ? _1033 : (isnan(_1033) ? 0.0 : min(_1033, 0.0));
            float _1044 = isnan(0.0) ? _1034 : (isnan(_1034) ? 0.0 : min(_1034, 0.0));
            _1059 = ((abs(_947 / _936) * cbSceneParam._m0[80u].y) * ((((_1043 - _1044) * 2.0) - ((exp2(_956 * (isnan(0.0) ? _1033 : (isnan(_1033) ? 0.0 : max(_1033, 0.0)))) - exp2(_956 * (isnan(0.0) ? _1034 : (isnan(_1034) ? 0.0 : max(_1034, 0.0))))) * _1032)) - ((exp2(_958 * _1043) - exp2(_958 * _1044)) * _1032))) + (_950 * cbSceneParam._m0[80u].z);
        }
        vec4 _1061 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_855, _856, 1.0), 0.0);
        float _1070 = exp2((_1059 * (-1.44269502162933349609375)) * (1.0 - _1061.w));
        float _1071 = log2(_1070);
        float _1087 = log2(_876);
        _960 = (exp2(_1087 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1071 * cbSceneParam._m0[78u].x)) * _1061.x) / cbSceneParam._m0[78u].x)) + _873;
        _962 = (exp2(_1087 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1071 * cbSceneParam._m0[78u].y)) * _1061.y) / cbSceneParam._m0[78u].y)) + _874;
        _964 = (exp2(_1087 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1071 * cbSceneParam._m0[78u].z)) * _1061.z) / cbSceneParam._m0[78u].z)) + _875;
        _966 = _1070 * _876;
    }
    else
    {
        _960 = _873;
        _962 = _874;
        _964 = _875;
        _966 = _876;
    }
    float _978 = roundEven(cbMatDynParam._m0[0u].y);
    bool _979 = _978 == 3.0;
    float _981 = log2(_966);
    float _985 = exp2(_981 * cbSceneParam._m0[78u].x);
    float _986 = exp2(_981 * cbSceneParam._m0[78u].y);
    float _987 = exp2(_981 * cbSceneParam._m0[78u].z);
    float _988 = _985 * (isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0)));
    float _989 = _986 * (isnan(0.0) ? _830 : (isnan(_830) ? 0.0 : max(_830, 0.0)));
    float _990 = _987 * (isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0)));
    float _999 = (_978 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _999 * (_979 ? _988 : (_988 + (cbSceneParam._m0[72u].w * _960)));
    SV_Target.y = _999 * (_979 ? _989 : (_989 + (cbSceneParam._m0[72u].w * _962)));
    SV_Target.z = _999 * (_979 ? _990 : (_990 + (cbSceneParam._m0[72u].w * _964)));
    SV_Target.w = _849;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _829) * _844) * _985) * _999;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _830) * _844) * _986) * _999;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _831) * _844) * _987) * _999;
    SV_Target_1.w = _849;
}


