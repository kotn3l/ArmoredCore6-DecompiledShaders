#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 1) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD;
layout(location = 4) in vec4 TEXCOORD_4;
layout(location = 5) in vec4 TEXCOORD_9;
layout(location = 6) in float TEXCOORD_17;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _158 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _159 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _160 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _166 = inversesqrt(dot(vec3(_158, _159, _160), vec3(_158, _159, _160)));
    float _167 = _166 * _158;
    float _168 = _166 * _159;
    float _169 = _166 * _160;
    float _173 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _174 = _173 * NORMAL.x;
    float _175 = _173 * NORMAL.y;
    float _176 = _173 * NORMAL.z;
    float _180 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _181 = _180 * TANGENT.x;
    float _182 = _180 * TANGENT.y;
    float _183 = _180 * TANGENT.z;
    float _188;
    float _189;
    float _190;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _188 = (-0.0) - _174;
        _189 = (-0.0) - _175;
        _190 = (-0.0) - _176;
    }
    else
    {
        _188 = _174;
        _189 = _175;
        _190 = _176;
    }
    float _208 = cbMtdParam._m0[17u].y * cbPerFrame._m0[22u].x;
    uint _213 = uint(roundEven(NORMAL.w)) * 13u;
    uint _219 = _213 + 1u;
    uint _224 = _213 + 2u;
    float _234 = sqrt(((cbInstanceData._m0[_219].x * cbInstanceData._m0[_219].x) + (cbInstanceData._m0[_213].x * cbInstanceData._m0[_213].x)) + (cbInstanceData._m0[_224].x * cbInstanceData._m0[_224].x));
    float _240 = sqrt(((cbInstanceData._m0[_219].y * cbInstanceData._m0[_219].y) + (cbInstanceData._m0[_213].y * cbInstanceData._m0[_213].y)) + (cbInstanceData._m0[_224].y * cbInstanceData._m0[_224].y));
    float _241 = _234 * ((_208 * cbMtdParam._m0[22u].y) + TEXCOORD_4.x);
    float _242 = _240 * ((_208 * cbMtdParam._m0[22u].z) + TEXCOORD_4.y);
    vec4 _271 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * (_234 * ((_208 * cbMtdParam._m0[22u].w) + TEXCOORD_4.x))) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (_240 * ((_208 * cbMtdParam._m0[23u].x) + TEXCOORD_4.y))) + cbTextureTilingScale._m0[4u].w));
    float _279 = (_271.x * 2.0) + (-1.0);
    float _281 = (_271.y * 2.0) + (-1.0);
    float _285 = 1.0 - dot(vec2(_279, _281), vec2(_279, _281));
    float _816 = isnan(0.0) ? _285 : (isnan(_285) ? 0.0 : max(_285, 0.0));
    float _288 = sqrt(isnan(1.0) ? _816 : (isnan(_816) ? 1.0 : min(_816, 1.0)));
    float _291 = fma(_288, _188, fma(_281, _181, _279 * _167));
    float _294 = fma(_288, _189, fma(_281, _182, _279 * _168));
    float _297 = fma(_288, _190, fma(_281, _183, _279 * _169));
    float _301 = inversesqrt(dot(vec3(_291, _294, _297), vec3(_291, _294, _297)));
    float _303 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[17u].y;
    float _304 = _303 * cbMtdParam._m0[17u].x;
    float _308 = ((_291 * 0.5) * _301) + (-0.25);
    float _312 = ((_294 * 0.5) * _301) + (-0.25);
    float _313 = _312 * cbMtdParam._m0[16u].w;
    float _315 = (-0.0) - (cbMtdParam._m0[16u].w * _308);
    float _316 = fract(_304);
    float _318 = fract(_304 + 0.5);
    vec4 _346 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_316 * _315) + _241) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_313 * _316) + _242) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w));
    float _348 = _346.x;
    float _374 = _234 * ((_208 * cbMtdParam._m0[23u].w) + TEXCOORD_4.x);
    float _375 = _240 * ((_208 * cbMtdParam._m0[24u].x) + TEXCOORD_4.y);
    float _378 = _303 * cbMtdParam._m0[16u].y;
    float _379 = _312 * cbMtdParam._m0[19u].x;
    float _381 = (-0.0) - (cbMtdParam._m0[19u].x * _308);
    float _382 = fract(_378);
    float _384 = fract(_378 + 0.5);
    vec4 _411 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_382 * _381) + _374) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_379 * _382) + _375) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _413 = _411.x;
    float _431 = _234 * ((_208 * cbMtdParam._m0[20u].y) + TEXCOORD_4.x);
    float _432 = _240 * ((_208 * cbMtdParam._m0[20u].z) + TEXCOORD_4.y);
    float _438 = _303 * cbMtdParam._m0[18u].z;
    float _439 = _312 * cbMtdParam._m0[18u].w;
    float _441 = (-0.0) - (cbMtdParam._m0[18u].w * _308);
    float _442 = fract(_438);
    float _444 = fract(_438 + 0.5);
    vec4 _471 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_442 * _441) + _431) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_439 * _442) + _432) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _473 = _471.x;
    float _494 = _234 * ((_208 * cbMtdParam._m0[21u].w) + TEXCOORD_4.x);
    float _495 = _240 * ((_208 * cbMtdParam._m0[22u].x) + TEXCOORD_4.y);
    float _498 = _303 * cbMtdParam._m0[17u].z;
    float _499 = _312 * cbMtdParam._m0[17u].w;
    float _501 = (-0.0) - (cbMtdParam._m0[17u].w * _308);
    float _502 = fract(_498);
    float _504 = fract(_498 + 0.5);
    vec4 _532 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_502 * _501) + _494) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_499 * _502) + _495) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _534 = _532.x;
    float _542 = (((((texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_444 * _441) + _431) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_439 * _444) + _432) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w)).x - _473) * abs((_442 * 2.0) + (-1.0))) + _473) * cbMtdParam._m0[11u].x) + ((((texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_384 * _381) + _374) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_379 * _384) + _375) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w)).x - _413) * abs((_382 * 2.0) + (-1.0))) + _413) * cbMtdParam._m0[10u].x)) + ((((texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_504 * _501) + _494) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (((_499 * _504) + _495) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w)).x - _534) * abs((_502 * 2.0) + (-1.0))) + _534) * cbMtdParam._m0[13u].x);
    float _553 = _234 * ((_208 * cbMtdParam._m0[23u].y) + TEXCOORD_4.x);
    float _554 = _240 * ((_208 * cbMtdParam._m0[23u].z) + TEXCOORD_4.y);
    vec4 _577 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_5, SS_BumpMap), vec2(((_234 * ((_208 * cbMtdParam._m0[24u].y) + TEXCOORD_4.x)) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((_240 * ((_208 * cbMtdParam._m0[24u].z) + TEXCOORD_4.y)) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _583 = (_577.x * 2.0) + (-1.0);
    float _584 = (_577.y * 2.0) + (-1.0);
    float _588 = 1.0 - dot(vec2(_583, _584), vec2(_583, _584));
    float _827 = isnan(0.0) ? _588 : (isnan(_588) ? 0.0 : max(_588, 0.0));
    float _590 = sqrt(isnan(1.0) ? _827 : (isnan(_827) ? 1.0 : min(_827, 1.0)));
    float _593 = fma(_590, _188, fma(_584, _181, _583 * _167));
    float _596 = fma(_590, _189, fma(_584, _182, _583 * _168));
    float _599 = fma(_590, _190, fma(_584, _183, _583 * _169));
    float _603 = inversesqrt(dot(vec3(_593, _596, _599), vec3(_593, _596, _599)));
    float _604 = _303 * cbMtdParam._m0[19u].z;
    float _611 = (((_596 * 0.5) * _603) + (-0.25)) * cbMtdParam._m0[19u].y;
    float _613 = (-0.0) - (cbMtdParam._m0[19u].y * (((_593 * 0.5) * _603) + (-0.25)));
    float _614 = fract(_604);
    float _616 = fract(_604 + 0.5);
    vec4 _643 = texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_614 * _613) + _553) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_611 * _614) + _554) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _645 = _643.x;
    float _657 = ((cbMtdParam._m0[16u].z * TEXCOORD_4.z) * (((((texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_616 * _613) + _553) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_611 * _616) + _554) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x - _645) * abs((_614 * 2.0) + (-1.0))) + _645) * cbMtdParam._m0[12u].x) - _542)) + _542;
    float _662 = (cbMtdParam._m0[19u].w * TEXCOORD.w) * (((cbMtdParam._m0[20u].x * TEXCOORD_4.w) * (((((texture(sampler2D(M_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_318 * _315) + _241) * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (((_313 * _318) + _242) * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w)).x - _348) * abs((_316 * 2.0) + (-1.0))) + _348) * cbMtdParam._m0[14u].x) - _657)) + _657);
    float _666 = inversesqrt(dot(vec3(_188, _189, _190), vec3(_188, _189, _190)));
    float _838 = isnan(0.0) ? _662 : (isnan(_662) ? 0.0 : max(_662, 0.0));
    float _667 = isnan(1.0) ? _838 : (isnan(_838) ? 1.0 : min(_838, 1.0));
    vec4 _672 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _674 = _672.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _709 = (cbMatDynParam._m0[5u].x * TEXCOORD_17) + cbMatDynParam._m0[5u].y;
        float _849 = isnan(0.0) ? _709 : (isnan(_709) ? 0.0 : max(_709, 0.0));
        float _710 = isnan(1.0) ? _849 : (isnan(_849) ? 1.0 : min(_849, 1.0));
        float _714 = (cbMatDynParam._m0[5u].z * TEXCOORD_17) + cbMatDynParam._m0[5u].w;
        float _860 = isnan(0.0) ? _714 : (isnan(_714) ? 0.0 : max(_714, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _860 : (isnan(_860) ? 1.0 : min(_860, 1.0))) - _710)) + _710) < ((_674 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _750;
    float _685;
    vec4 _689;
    float _691;
    float _692;
    bool _703;
    for (;;)
    {
        _685 = cbInstanceData._m0[_213 + 6u].w * _667;
        float _686 = _674 + (-0.5);
        _689 = cbMtdParam._m0[1u];
        _691 = _689.y * _686;
        _692 = _686 * 0.999000012874603271484375;
        _703 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_703)
        {
            if ((cbInstanceData._m0[_213 + 7u].x + _692) < 0.5)
            {
                _750 = true;
                break;
            }
        }
        uint _739 = (_213 + 9u) + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_739].w < 1.0) && ((cbInstanceData._m0[_739].w + _692) < 0.5))
        {
            _750 = true;
            break;
        }
        if ((_691 + 1.0) < _689.x)
        {
            _750 = true;
            break;
        }
        _750 = false;
        break;
    }
    if (_750)
    {
        discard_state = true;
    }
    bool _768 = cbMtdParam._m0[1u].z != 0.0;
    float _769 = _768 ? _685 : 0.0;
    SV_Target.x = ((_188 * 0.5) * _666) + 0.500488758087158203125;
    SV_Target.y = ((_189 * 0.5) * _666) + 0.500488758087158203125;
    SV_Target.z = ((_190 * 0.5) * _666) + 0.500488758087158203125;
    SV_Target.w = _769;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _768 ? _685 : TEXCOORD_9.w;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = _685;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _769;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _769;
    discard_exit();
}


