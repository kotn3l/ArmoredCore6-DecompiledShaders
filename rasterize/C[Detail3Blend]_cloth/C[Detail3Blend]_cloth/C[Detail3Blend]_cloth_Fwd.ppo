#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_Detail3Blend_snp_0_Texture2D_7;
layout(set = 0, binding = 1) uniform texture2D C_Detail3Blend_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D C_Detail3Blend_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D C_Detail3Blend_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D C_Detail3Blend_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D C_Detail3Blend_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D C_Detail3Blend_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D C_Detail3Blend_snp_0_Texture2D_8;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1173;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _198 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _199 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _200 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _206 = inversesqrt(dot(vec3(_198, _199, _200), vec3(_198, _199, _200)));
    float _213 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _214 = _213 * NORMAL.x;
    float _215 = _213 * NORMAL.y;
    float _216 = _213 * NORMAL.z;
    float _220 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _228;
    float _229;
    float _230;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _228 = (-0.0) - _214;
        _229 = (-0.0) - _215;
        _230 = (-0.0) - _216;
    }
    else
    {
        _228 = _214;
        _229 = _215;
        _230 = _216;
    }
    vec4 _244 = texture(sampler2D(C_Detail3Blend_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _250 = _244.w;
    float _256 = exp2(log2(1.0 - _250) * 10.0);
    vec4 _269 = texture(sampler2D(C_Detail3Blend_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    vec4 _294 = texture(sampler2D(C_Detail3Blend_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _305 = cbMtdParam._m0[9u].x * _294.x;
    float _306 = cbMtdParam._m0[9u].y * _294.y;
    float _307 = cbMtdParam._m0[9u].z * _294.z;
    float _314 = (((cbMtdParam._m0[10u].x * _269.x) - _305) * _256) + _305;
    float _315 = (((cbMtdParam._m0[10u].y * _269.y) - _306) * _256) + _306;
    float _316 = (((cbMtdParam._m0[10u].z * _269.z) - _307) * _256) + _307;
    float _319 = exp2(log2(_250) * 10.0);
    vec4 _331 = texture(sampler2D(C_Detail3Blend_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    vec4 _365 = texture(sampler2D(C_Detail3Blend_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _370 = _365.w;
    float _373 = (((((cbMtdParam._m0[11u].x * _331.x) - _314) * _319) + _314) * 4.55000019073486328125) * _365.x;
    float _375 = (((((cbMtdParam._m0[11u].y * _331.y) - _315) * _319) + _315) * 4.55000019073486328125) * _365.y;
    float _377 = (((((cbMtdParam._m0[11u].z * _331.z) - _316) * _319) + _316) * 4.55000019073486328125) * _365.z;
    vec4 _394 = texture(sampler2D(C_Detail3Blend_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    vec4 _413 = texture(sampler2D(C_Detail3Blend_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _415 = _413.x;
    float _416 = _413.y;
    float _419 = cbMtdParam._m0[12u].x + _413.z;
    float _422 = (((cbMtdParam._m0[12u].y + _394.z) - _419) * _256) + _419;
    vec4 _435 = texture(sampler2D(C_Detail3Blend_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _450 = (_244.z * 2.0) * ((((_435.z - _422) + cbMtdParam._m0[13u].x) * _319) + _422);
    float _461 = ((_394.x - _415) * _256) + _415;
    float _462 = ((_394.y - _416) * _256) + _416;
    float _471 = ((((_435.x - _461) * _319) + _461) * 2.0) + (-1.0);
    float _472 = ((((_435.y - _462) * _319) + _462) * 2.0) + (-1.0);
    float _473 = dot(vec2(_471, _472), vec2(_471, _472));
    float _3504 = isnan(0.0) ? _473 : (isnan(_473) ? 0.0 : max(_473, 0.0));
    float _478 = sqrt(1.0 - (isnan(1.0) ? _3504 : (isnan(_3504) ? 1.0 : min(_3504, 1.0))));
    float _481 = _471 + (cbMtdParam._m0[12u].z * ((_244.x * 2.0) + (-1.0)));
    float _482 = _472 + (cbMtdParam._m0[12u].z * ((_244.y * 2.0) + (-1.0)));
    float _485 = fma(_478, _228, fma(_482, _220 * TANGENT.x, (_206 * _198) * _481));
    float _488 = fma(_478, _229, fma(_482, _220 * TANGENT.y, (_206 * _199) * _481));
    float _491 = fma(_478, _230, fma(_482, _220 * TANGENT.z, (_206 * _200) * _481));
    float _495 = inversesqrt(dot(vec3(_485, _488, _491), vec3(_485, _488, _491)));
    float _496 = _495 * _485;
    float _497 = _495 * _488;
    float _498 = _495 * _491;
    float _3515 = isnan(0.0) ? _370 : (isnan(_370) ? 0.0 : max(_370, 0.0));
    float _499 = isnan(1.0) ? _3515 : (isnan(_3515) ? 1.0 : min(_3515, 1.0));
    float _3526 = isnan(0.0) ? _450 : (isnan(_450) ? 0.0 : max(_450, 0.0));
    float _500 = isnan(1.0) ? _3526 : (isnan(_3526) ? 1.0 : min(_3526, 1.0));
    float _3537 = isnan(0.0) ? _373 : (isnan(_373) ? 0.0 : max(_373, 0.0));
    float _501 = isnan(1.0) ? _3537 : (isnan(_3537) ? 1.0 : min(_3537, 1.0));
    float _3548 = isnan(0.0) ? _375 : (isnan(_375) ? 0.0 : max(_375, 0.0));
    float _502 = isnan(1.0) ? _3548 : (isnan(_3548) ? 1.0 : min(_3548, 1.0));
    float _3559 = isnan(0.0) ? _377 : (isnan(_377) ? 0.0 : max(_377, 0.0));
    float _503 = isnan(1.0) ? _3559 : (isnan(_3559) ? 1.0 : min(_3559, 1.0));
    float _3570 = isnan(0.0) ? cbMtdParam._m0[12u].w : (isnan(cbMtdParam._m0[12u].w) ? 0.0 : max(cbMtdParam._m0[12u].w, 0.0));
    float _504 = isnan(1.0) ? _3570 : (isnan(_3570) ? 1.0 : min(_3570, 1.0));
    float _520 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _561 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _571 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _561);
    float _572 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _561);
    float _573 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _561);
    float _577 = inversesqrt(dot(vec3(_571, _572, _573), vec3(_571, _572, _573)));
    float _578 = _571 * _577;
    float _579 = _572 * _577;
    float _580 = _573 * _577;
    float _586 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _587 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _589 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _591 = _589.w;
    float _609 = fma(_498, cbSceneParam._m0[5u].z, fma(_497, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _496));
    float _612 = fma(_498, cbSceneParam._m0[6u].z, fma(_497, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _496));
    float _615 = fma(_498, cbSceneParam._m0[7u].z, fma(_497, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _496));
    vec4 _617 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _619 = _617.x;
    float _631 = (((_617.y - _500) + (_617.w * _500)) * cbMtdParam._m0[3u].x) + _500;
    vec4 _632 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _648 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_619 * _619)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _632.z;
    float _657 = (((cbMatDynParam._m0[15u].x - _504) * cbMatDynParam._m0[15u].w) * _648) + _504;
    float _666 = ((_648 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _631)) + _631;
    uint _690 = uint(roundEven(NORMAL.w)) * 13u;
    uint _692 = (_690 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _698 = (cbMtdParam._m0[0u].x * _501) * cbInstanceData._m0[_692].x;
    float _699 = (cbMtdParam._m0[0u].y * _502) * cbInstanceData._m0[_692].y;
    float _700 = (cbMtdParam._m0[0u].z * _503) * cbInstanceData._m0[_692].z;
    float _3581 = isnan(0.0) ? _698 : (isnan(_698) ? 0.0 : max(_698, 0.0));
    float _701 = isnan(1.0) ? _3581 : (isnan(_3581) ? 1.0 : min(_3581, 1.0));
    float _3592 = isnan(0.0) ? _699 : (isnan(_699) ? 0.0 : max(_699, 0.0));
    float _702 = isnan(1.0) ? _3592 : (isnan(_3592) ? 1.0 : min(_3592, 1.0));
    float _3603 = isnan(0.0) ? _700 : (isnan(_700) ? 0.0 : max(_700, 0.0));
    float _703 = isnan(1.0) ? _3603 : (isnan(_3603) ? 1.0 : min(_3603, 1.0));
    vec4 _704 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _709 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _720 = (((_709.x - _657) + (_709.w * _657)) * cbMtdParam._m0[3u].x) + _657;
    float _733 = (cbMtdParam._m0[3u].x * (((_701 * _591) - _701) + _704.x)) + _701;
    float _734 = (cbMtdParam._m0[3u].x * (((_702 * _591) - _702) + _704.y)) + _702;
    float _735 = (cbMtdParam._m0[3u].x * (((_703 * _591) - _703) + _704.z)) + _703;
    float _749 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_657 * (_501 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_657 * (_502 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_657 * (_503 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w)).z;
    float _753 = _749 * cbMatDynParam._m0[13u].w;
    float _763 = (_753 * (cbMatDynParam._m0[13u].x - _733)) + _733;
    float _764 = (_753 * (cbMatDynParam._m0[13u].y - _734)) + _734;
    float _765 = (_753 * (cbMatDynParam._m0[13u].z - _735)) + _735;
    float _773 = ((_749 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _720)) + _720;
    float _774 = 1.0 - _773;
    float _775 = _774 * _763;
    float _776 = _774 * _764;
    float _777 = _774 * _765;
    float _781 = (_763 + (-0.039999999105930328369140625)) * _773;
    float _782 = (_764 + (-0.039999999105930328369140625)) * _773;
    float _783 = (_765 + (-0.039999999105930328369140625)) * _773;
    float _784 = _781 + 0.039999999105930328369140625;
    float _785 = _782 + 0.039999999105930328369140625;
    float _786 = _783 + 0.039999999105930328369140625;
    vec4 _795 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _586, cbSceneParam._m0[86u].y * _587));
    float _798 = _795.x * TEXCOORD_4;
    float _799 = dot(vec3(_496, _497, _498), vec3(_578, _579, _580));
    float _802 = _799 * 2.0;
    float _806 = (_802 * _496) - _578;
    float _807 = (_802 * _497) - _579;
    float _808 = (_802 * _498) - _580;
    float _812 = abs(dot(vec3(_578, _579, _580), vec3(_496, _497, _498)));
    float _3614 = isnan(0.0) ? _812 : (isnan(_812) ? 0.0 : max(_812, 0.0));
    float _814 = sqrt(_666);
    float _827 = exp2((_814 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3614 : (isnan(_3614) ? 1.0 : min(_3614, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_814 * 3.0));
    float _833 = (1.0 - _827) * ((_814 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _834 = _827 * _814;
    float _862 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _866 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _870 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1172;
    float _1174;
    float _1175;
    float _1176;
    float _1177;
    float _1178;
    float _1179;
    float _1180;
    float _1181;
    float _1182;
    float _1183;
    float _1184;
    float _1185;
    float _1186;
    float _1187;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _897 = fma(_870, cbModelParam._m0[26u].z, fma(_866, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _862));
        float _901 = fma(_870, cbModelParam._m0[27u].z, fma(_866, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _862));
        float _905 = fma(_870, cbModelParam._m0[28u].z, fma(_866, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _862));
        float _930 = _862 + _496;
        float _931 = _866 + _497;
        float _932 = _870 + _498;
        float _942 = fma(_932, cbModelParam._m0[26u].z, fma(_931, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _930)) - _897;
        float _943 = fma(_932, cbModelParam._m0[27u].z, fma(_931, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _930)) - _901;
        float _944 = fma(_932, cbModelParam._m0[28u].z, fma(_931, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _930)) - _905;
        float _948 = inversesqrt(dot(vec3(_942, _943, _944), vec3(_942, _943, _944)));
        float _961 = ((_948 * _942) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_897 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _962 = ((_948 * _943) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_901 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _963 = ((_948 * _944) / cbModelParam._m0[34u].z) + ((((((_905 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _966 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_961, _962, _963), 0.0);
        vec4 _973 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_961, _962, _963), 0.0);
        vec4 _980 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_961, _962, _963), 0.0);
        vec4 _987 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_961, _962, _963), 0.0);
        float _1000 = exp2((_966.w + (-0.5)) * 20.0) * 2.0;
        float _1001 = _1000 * (_966.x + (-0.5));
        float _1002 = _1000 * (_966.y + (-0.5));
        float _1003 = _1000 * (_966.z + (-0.5));
        float _1010 = exp2((_973.w + (-0.5)) * 20.0) * 2.0;
        float _1011 = _1010 * (_973.x + (-0.5));
        float _1012 = _1010 * (_973.y + (-0.5));
        float _1013 = _1010 * (_973.z + (-0.5));
        float _1020 = exp2((_980.w + (-0.5)) * 20.0) * 2.0;
        float _1021 = _1020 * (_980.x + (-0.5));
        float _1022 = _1020 * (_980.y + (-0.5));
        float _1023 = _1020 * (_980.z + (-0.5));
        float _1030 = exp2((_987.w + (-0.5)) * 20.0) * 2.0;
        float _1031 = _1030 * (_987.x + (-0.5));
        float _1032 = _1030 * (_987.y + (-0.5));
        float _1033 = _1030 * (_987.z + (-0.5));
        float _1034 = isnan(0.0) ? _1031 : (isnan(_1031) ? 0.0 : max(_1031, 0.0));
        float _1035 = isnan(0.0) ? _1032 : (isnan(_1032) ? 0.0 : max(_1032, 0.0));
        float _1036 = isnan(0.0) ? _1033 : (isnan(_1033) ? 0.0 : max(_1033, 0.0));
        float _1037 = _1001 * 0.5;
        float _1038 = _1011 * 0.5;
        float _1039 = _1021 * 0.5;
        float _1040 = dot(vec3(_1037, _1038, _1039), vec3(_1037, _1038, _1039));
        float _1045 = (_1040 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1040);
        float _1054 = (dot(vec3(_496, _497, _498), vec3(_1045 * _1037, _1045 * _1038, _1045 * _1039)) + 1.0) * 0.5;
        float _3640 = isnan(0.0) ? _1054 : (isnan(_1054) ? 0.0 : max(_1054, 0.0));
        float _1064 = sqrt(((_1038 * _1038) + (_1037 * _1037)) + (_1039 * _1039)) / (_1034 + 9.9999997473787516355514526367188e-06);
        float _3651 = isnan(0.0) ? _1064 : (isnan(_1064) ? 0.0 : max(_1064, 0.0));
        float _1065 = isnan(1.0) ? _3651 : (isnan(_3651) ? 1.0 : min(_3651, 1.0));
        float _1066 = _1065 * 2.0;
        float _1070 = (1.0 - _1065) / (_1065 + 1.0);
        float _3662 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
        float _1071 = isnan(1.0) ? _3662 : (isnan(_3662) ? 1.0 : min(_3662, 1.0));
        float _1080 = ((((1.0 - _1071) * (_1066 + 2.0)) * exp2(log2(isnan(1.0) ? _3640 : (isnan(_3640) ? 1.0 : min(_3640, 1.0))) * (_1066 + 1.0))) + _1071) * _1034;
        float _1081 = _1002 * 0.5;
        float _1082 = _1012 * 0.5;
        float _1083 = _1022 * 0.5;
        float _1084 = dot(vec3(_1081, _1082, _1083), vec3(_1081, _1082, _1083));
        float _1089 = (_1084 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1084);
        float _1097 = (dot(vec3(_496, _497, _498), vec3(_1089 * _1081, _1089 * _1082, _1089 * _1083)) + 1.0) * 0.5;
        float _3673 = isnan(0.0) ? _1097 : (isnan(_1097) ? 0.0 : max(_1097, 0.0));
        float _1106 = sqrt(((_1082 * _1082) + (_1081 * _1081)) + (_1083 * _1083)) / (_1035 + 9.9999997473787516355514526367188e-06);
        float _3684 = isnan(0.0) ? _1106 : (isnan(_1106) ? 0.0 : max(_1106, 0.0));
        float _1107 = isnan(1.0) ? _3684 : (isnan(_3684) ? 1.0 : min(_3684, 1.0));
        float _1108 = _1107 * 2.0;
        float _1112 = (1.0 - _1107) / (_1107 + 1.0);
        float _3695 = isnan(0.0) ? _1112 : (isnan(_1112) ? 0.0 : max(_1112, 0.0));
        float _1113 = isnan(1.0) ? _3695 : (isnan(_3695) ? 1.0 : min(_3695, 1.0));
        float _1122 = ((((1.0 - _1113) * (_1108 + 2.0)) * exp2(log2(isnan(1.0) ? _3673 : (isnan(_3673) ? 1.0 : min(_3673, 1.0))) * (_1108 + 1.0))) + _1113) * _1035;
        float _1123 = _1003 * 0.5;
        float _1124 = _1013 * 0.5;
        float _1125 = _1023 * 0.5;
        float _1126 = dot(vec3(_1123, _1124, _1125), vec3(_1123, _1124, _1125));
        float _1131 = (_1126 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1126);
        float _1139 = (dot(vec3(_496, _497, _498), vec3(_1131 * _1123, _1131 * _1124, _1131 * _1125)) + 1.0) * 0.5;
        float _3706 = isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0));
        float _1148 = sqrt(((_1124 * _1124) + (_1123 * _1123)) + (_1125 * _1125)) / (_1036 + 9.9999997473787516355514526367188e-06);
        float _3717 = isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0));
        float _1149 = isnan(1.0) ? _3717 : (isnan(_3717) ? 1.0 : min(_3717, 1.0));
        float _1150 = _1149 * 2.0;
        float _1154 = (1.0 - _1149) / (_1149 + 1.0);
        float _3728 = isnan(0.0) ? _1154 : (isnan(_1154) ? 0.0 : max(_1154, 0.0));
        float _1155 = isnan(1.0) ? _3728 : (isnan(_3728) ? 1.0 : min(_3728, 1.0));
        float _1164 = ((((1.0 - _1155) * (_1150 + 2.0)) * exp2(log2(isnan(1.0) ? _3706 : (isnan(_3706) ? 1.0 : min(_3706, 1.0))) * (_1150 + 1.0))) + _1155) * _1036;
        _1172 = _1003;
        _1174 = _1002;
        _1175 = _1001;
        _1176 = _1013;
        _1177 = _1012;
        _1178 = _1011;
        _1179 = _1023;
        _1180 = _1022;
        _1181 = _1021;
        _1182 = _1036;
        _1183 = _1035;
        _1184 = _1034;
        _1185 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0)));
        _1186 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1122 : (isnan(_1122) ? 0.0 : max(_1122, 0.0)));
        _1187 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0)));
    }
    else
    {
        _1172 = _1173;
        _1174 = _1173;
        _1175 = _1173;
        _1176 = _1173;
        _1177 = _1173;
        _1178 = _1173;
        _1179 = _1173;
        _1180 = _1173;
        _1181 = _1173;
        _1182 = _1173;
        _1183 = _1173;
        _1184 = _1173;
        _1185 = 0.0;
        _1186 = 0.0;
        _1187 = 0.0;
    }
    float _1482;
    float _1483;
    float _1484;
    float _1485;
    float _1486;
    float _1487;
    float _1488;
    float _1489;
    float _1490;
    float _1491;
    float _1492;
    float _1493;
    float _1494;
    float _1495;
    float _1496;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1213 = fma(_870, cbModelParam._m0[30u].z, fma(_866, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _862));
        float _1217 = fma(_870, cbModelParam._m0[31u].z, fma(_866, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _862));
        float _1221 = fma(_870, cbModelParam._m0[32u].z, fma(_866, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _862));
        float _1244 = _862 + _496;
        float _1245 = _866 + _497;
        float _1246 = _870 + _498;
        float _1256 = fma(_1246, cbModelParam._m0[30u].z, fma(_1245, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1244)) - _1213;
        float _1257 = fma(_1246, cbModelParam._m0[31u].z, fma(_1245, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1244)) - _1217;
        float _1258 = fma(_1246, cbModelParam._m0[32u].z, fma(_1245, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1244)) - _1221;
        float _1262 = inversesqrt(dot(vec3(_1256, _1257, _1258), vec3(_1256, _1257, _1258)));
        float _1275 = ((_1262 * _1256) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1213 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1276 = ((_1262 * _1257) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1217 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1277 = ((_1262 * _1258) / cbModelParam._m0[35u].z) + ((((((_1221 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1279 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1275, _1276, _1277), 0.0);
        vec4 _1286 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1275, _1276, _1277), 0.0);
        vec4 _1293 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1275, _1276, _1277), 0.0);
        vec4 _1300 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1275, _1276, _1277), 0.0);
        float _1312 = exp2((_1279.w + (-0.5)) * 20.0) * 2.0;
        float _1313 = _1312 * (_1279.x + (-0.5));
        float _1314 = _1312 * (_1279.y + (-0.5));
        float _1315 = _1312 * (_1279.z + (-0.5));
        float _1322 = exp2((_1286.w + (-0.5)) * 20.0) * 2.0;
        float _1323 = _1322 * (_1286.x + (-0.5));
        float _1324 = _1322 * (_1286.y + (-0.5));
        float _1325 = _1322 * (_1286.z + (-0.5));
        float _1332 = exp2((_1293.w + (-0.5)) * 20.0) * 2.0;
        float _1333 = _1332 * (_1293.x + (-0.5));
        float _1334 = _1332 * (_1293.y + (-0.5));
        float _1335 = _1332 * (_1293.z + (-0.5));
        float _1342 = exp2((_1300.w + (-0.5)) * 20.0) * 2.0;
        float _1343 = _1342 * (_1300.x + (-0.5));
        float _1344 = _1342 * (_1300.y + (-0.5));
        float _1345 = _1342 * (_1300.z + (-0.5));
        float _1346 = isnan(0.0) ? _1343 : (isnan(_1343) ? 0.0 : max(_1343, 0.0));
        float _1347 = isnan(0.0) ? _1344 : (isnan(_1344) ? 0.0 : max(_1344, 0.0));
        float _1348 = isnan(0.0) ? _1345 : (isnan(_1345) ? 0.0 : max(_1345, 0.0));
        float _1349 = _1313 * 0.5;
        float _1350 = _1323 * 0.5;
        float _1351 = _1333 * 0.5;
        float _1352 = dot(vec3(_1349, _1350, _1351), vec3(_1349, _1350, _1351));
        float _1357 = (_1352 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1352);
        float _1365 = (dot(vec3(_496, _497, _498), vec3(_1357 * _1349, _1357 * _1350, _1357 * _1351)) + 1.0) * 0.5;
        float _3769 = isnan(0.0) ? _1365 : (isnan(_1365) ? 0.0 : max(_1365, 0.0));
        float _1374 = sqrt(((_1350 * _1350) + (_1349 * _1349)) + (_1351 * _1351)) / (_1346 + 9.9999997473787516355514526367188e-06);
        float _3780 = isnan(0.0) ? _1374 : (isnan(_1374) ? 0.0 : max(_1374, 0.0));
        float _1375 = isnan(1.0) ? _3780 : (isnan(_3780) ? 1.0 : min(_3780, 1.0));
        float _1376 = _1375 * 2.0;
        float _1380 = (1.0 - _1375) / (_1375 + 1.0);
        float _3791 = isnan(0.0) ? _1380 : (isnan(_1380) ? 0.0 : max(_1380, 0.0));
        float _1381 = isnan(1.0) ? _3791 : (isnan(_3791) ? 1.0 : min(_3791, 1.0));
        float _1390 = ((((1.0 - _1381) * (_1376 + 2.0)) * exp2(log2(isnan(1.0) ? _3769 : (isnan(_3769) ? 1.0 : min(_3769, 1.0))) * (_1376 + 1.0))) + _1381) * _1346;
        float _1391 = _1314 * 0.5;
        float _1392 = _1324 * 0.5;
        float _1393 = _1334 * 0.5;
        float _1394 = dot(vec3(_1391, _1392, _1393), vec3(_1391, _1392, _1393));
        float _1399 = (_1394 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1394);
        float _1407 = (dot(vec3(_496, _497, _498), vec3(_1399 * _1391, _1399 * _1392, _1399 * _1393)) + 1.0) * 0.5;
        float _3802 = isnan(0.0) ? _1407 : (isnan(_1407) ? 0.0 : max(_1407, 0.0));
        float _1416 = sqrt(((_1392 * _1392) + (_1391 * _1391)) + (_1393 * _1393)) / (_1347 + 9.9999997473787516355514526367188e-06);
        float _3813 = isnan(0.0) ? _1416 : (isnan(_1416) ? 0.0 : max(_1416, 0.0));
        float _1417 = isnan(1.0) ? _3813 : (isnan(_3813) ? 1.0 : min(_3813, 1.0));
        float _1418 = _1417 * 2.0;
        float _1422 = (1.0 - _1417) / (_1417 + 1.0);
        float _3824 = isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0));
        float _1423 = isnan(1.0) ? _3824 : (isnan(_3824) ? 1.0 : min(_3824, 1.0));
        float _1432 = ((((1.0 - _1423) * (_1418 + 2.0)) * exp2(log2(isnan(1.0) ? _3802 : (isnan(_3802) ? 1.0 : min(_3802, 1.0))) * (_1418 + 1.0))) + _1423) * _1347;
        float _1433 = _1315 * 0.5;
        float _1434 = _1325 * 0.5;
        float _1435 = _1335 * 0.5;
        float _1436 = dot(vec3(_1433, _1434, _1435), vec3(_1433, _1434, _1435));
        float _1441 = (_1436 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1436);
        float _1449 = (dot(vec3(_496, _497, _498), vec3(_1441 * _1433, _1441 * _1434, _1441 * _1435)) + 1.0) * 0.5;
        float _3835 = isnan(0.0) ? _1449 : (isnan(_1449) ? 0.0 : max(_1449, 0.0));
        float _1458 = sqrt(((_1434 * _1434) + (_1433 * _1433)) + (_1435 * _1435)) / (_1348 + 9.9999997473787516355514526367188e-06);
        float _3846 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
        float _1459 = isnan(1.0) ? _3846 : (isnan(_3846) ? 1.0 : min(_3846, 1.0));
        float _1460 = _1459 * 2.0;
        float _1464 = (1.0 - _1459) / (_1459 + 1.0);
        float _3857 = isnan(0.0) ? _1464 : (isnan(_1464) ? 0.0 : max(_1464, 0.0));
        float _1465 = isnan(1.0) ? _3857 : (isnan(_3857) ? 1.0 : min(_3857, 1.0));
        float _1474 = ((((1.0 - _1465) * (_1460 + 2.0)) * exp2(log2(isnan(1.0) ? _3835 : (isnan(_3835) ? 1.0 : min(_3835, 1.0))) * (_1460 + 1.0))) + _1465) * _1348;
        _1482 = _1315;
        _1483 = _1314;
        _1484 = _1313;
        _1485 = _1325;
        _1486 = _1324;
        _1487 = _1323;
        _1488 = _1335;
        _1489 = _1334;
        _1490 = _1333;
        _1491 = _1348;
        _1492 = _1347;
        _1493 = _1346;
        _1494 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1390 : (isnan(_1390) ? 0.0 : max(_1390, 0.0)));
        _1495 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0)));
        _1496 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0)));
    }
    else
    {
        _1482 = _1173;
        _1483 = _1173;
        _1484 = _1173;
        _1485 = _1173;
        _1486 = _1173;
        _1487 = _1173;
        _1488 = _1173;
        _1489 = _1173;
        _1490 = _1173;
        _1491 = _1173;
        _1492 = _1173;
        _1493 = _1173;
        _1494 = 0.0;
        _1495 = 0.0;
        _1496 = 0.0;
    }
    float _1506 = (cbModelParam._m0[1u].x * (_1494 - _1185)) + _1185;
    float _1507 = (cbModelParam._m0[1u].x * (_1495 - _1186)) + _1186;
    float _1508 = (cbModelParam._m0[1u].x * (_1496 - _1187)) + _1187;
    float _1529 = fma(_1508, cbSceneParam._m0[89u].z, fma(_1507, cbSceneParam._m0[89u].y, _1506 * cbSceneParam._m0[89u].x));
    float _1532 = fma(_1508, cbSceneParam._m0[90u].z, fma(_1507, cbSceneParam._m0[90u].y, _1506 * cbSceneParam._m0[90u].x));
    float _1535 = fma(_1508, cbSceneParam._m0[91u].z, fma(_1507, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1506));
    float _1550 = _806 * 0.5;
    float _1551 = _807 * 0.5;
    float _1552 = _808 * 0.5;
    float _1553 = dot(vec4(_1550, _1551, _1552, 1.0), vec4(_1484, _1487, _1490, _1493));
    float _1556 = dot(vec4(_1550, _1551, _1552, 1.0), vec4(_1483, _1486, _1489, _1492));
    float _1559 = dot(vec4(_1550, _1551, _1552, 1.0), vec4(_1482, _1485, _1488, _1491));
    float _1590;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1566 = dot(vec4(_1550, _1551, _1552, 1.0), vec4(_1172, _1176, _1179, _1182));
        float _1570 = dot(vec4(_1550, _1551, _1552, 1.0), vec4(_1174, _1177, _1180, _1183));
        float _1574 = dot(vec4(_1550, _1551, _1552, 1.0), vec4(_1175, _1178, _1181, _1184));
        float _1581 = dot(vec4(cbModelParam._m0[39u]), vec4(_1550, _1551, _1552, 1.0));
        _1590 = dot(vec3(isnan(0.0) ? _1574 : (isnan(_1574) ? 0.0 : max(_1574, 0.0)), isnan(0.0) ? _1570 : (isnan(_1570) ? 0.0 : max(_1570, 0.0)), isnan(0.0) ? _1566 : (isnan(_1566) ? 0.0 : max(_1566, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1581) ? 0.0 : (isnan(0.0) ? _1581 : max(0.0, _1581))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1590 = 1.0;
    }
    float _1601;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1592 = dot(vec4(cbModelParam._m0[40u]), vec4(_1550, _1551, _1552, 1.0));
        _1601 = dot(vec3(isnan(0.0) ? _1553 : (isnan(_1553) ? 0.0 : max(_1553, 0.0)), isnan(0.0) ? _1556 : (isnan(_1556) ? 0.0 : max(_1556, 0.0)), isnan(0.0) ? _1559 : (isnan(_1559) ? 0.0 : max(_1559, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1592) ? 0.0 : (isnan(0.0) ? _1592 : max(0.0, _1592))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1601 = 1.0;
    }
    float _1605 = (_1601 * cbModelParam._m0[1u].x) + (_1590 * (1.0 - cbModelParam._m0[1u].x));
    float _1615 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _666);
    float _1616 = isnan(_1615) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1615 : min(cbModelParam._m0[25u].z, _1615));
    float _1696;
    float _1698;
    float _1700;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1663 = fma(_870, cbModelParam._m0[13u].z, fma(_866, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _862)) + cbModelParam._m0[13u].w;
        float _1667 = fma(_870, cbModelParam._m0[14u].z, fma(_866, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _862)) + cbModelParam._m0[14u].w;
        float _1671 = fma(_870, cbModelParam._m0[15u].z, fma(_866, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _862)) + cbModelParam._m0[15u].w;
        float _1674 = fma(_808, cbModelParam._m0[13u].z, fma(_807, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _806));
        float _1677 = fma(_808, cbModelParam._m0[14u].z, fma(_807, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _806));
        float _1680 = fma(_808, cbModelParam._m0[15u].z, fma(_807, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _806));
        float _1708;
        if (_1674 > 0.0)
        {
            _1708 = abs((1.0 - _1663) / _1674);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1674 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1663 + 1.0) / _1674);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1708 = frontier_phi_16_14_ladder;
        }
        float _1914;
        if (_1677 > 0.0)
        {
            _1914 = abs((1.0 - _1667) / _1677);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1677 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1667 + 1.0) / _1677);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1914 = frontier_phi_25_21_ladder;
        }
        float _2168;
        if (_1680 > 0.0)
        {
            _2168 = abs((1.0 - _1671) / _1680);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1680 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1671 + 1.0) / _1680);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2168 = frontier_phi_37_32_ladder;
        }
        float _2170 = isnan(_1914) ? _1708 : (isnan(_1708) ? _1914 : min(_1708, _1914));
        float _2171 = isnan(_2168) ? _2170 : (isnan(_2170) ? _2168 : min(_2170, _2168));
        float _2175 = (_2171 * _1674) + _1663;
        float _2176 = (_2171 * _1677) + _1667;
        float _2177 = (_2171 * _1680) + _1671;
        float _2178 = _2171 * 9.9999997473787516355514526367188e-05;
        float _2180 = (-1.0) - _2178;
        float _2182 = _2178 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2177 > _2182) || ((_2177 < _2180) || ((_2176 > _2182) || ((_2176 < _2180) || ((_2175 < _2180) || (_2175 > _2182))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2305 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2177, cbModelParam._m0[9u].z, fma(_2176, cbModelParam._m0[9u].y, _2175 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2177, cbModelParam._m0[10u].z, fma(_2176, cbModelParam._m0[10u].y, _2175 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2177, cbModelParam._m0[11u].z, fma(_2176, cbModelParam._m0[11u].y, _2175 * cbModelParam._m0[11u].x))), _1616);
            frontier_phi_15_37_ladder = _2305.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2305.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2305.x * cbModelParam._m0[1u].y;
        }
        _1696 = frontier_phi_15_37_ladder_2;
        _1698 = frontier_phi_15_37_ladder_1;
        _1700 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1684 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_806, _807, _808), _1616);
        _1696 = _1684.x * cbModelParam._m0[1u].y;
        _1698 = _1684.y * cbModelParam._m0[1u].y;
        _1700 = _1684.z * cbModelParam._m0[1u].y;
    }
    float _1704 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _666);
    float _1705 = isnan(_1704) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1704 : min(cbModelParam._m0[25u].w, _1704));
    float _1798;
    float _1800;
    float _1802;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1762 = fma(_870, cbModelParam._m0[21u].z, fma(_866, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _862)) + cbModelParam._m0[21u].w;
        float _1766 = fma(_870, cbModelParam._m0[22u].z, fma(_866, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _862)) + cbModelParam._m0[22u].w;
        float _1770 = fma(_870, cbModelParam._m0[23u].z, fma(_866, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _862)) + cbModelParam._m0[23u].w;
        float _1773 = fma(_808, cbModelParam._m0[21u].z, fma(_807, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _806));
        float _1776 = fma(_808, cbModelParam._m0[22u].z, fma(_807, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _806));
        float _1779 = fma(_808, cbModelParam._m0[23u].z, fma(_807, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _806));
        float _1919;
        if (_1773 > 0.0)
        {
            _1919 = abs((1.0 - _1762) / _1773);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1773 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1762 + 1.0) / _1773);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1919 = frontier_phi_27_23_ladder;
        }
        float _2195;
        if (_1776 > 0.0)
        {
            _2195 = abs((1.0 - _1766) / _1776);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1776 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1766 + 1.0) / _1776);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2195 = frontier_phi_39_34_ladder;
        }
        float _2408;
        if (_1779 > 0.0)
        {
            _2408 = abs((1.0 - _1770) / _1779);
        }
        else
        {
            float frontier_phi_48_45_ladder;
            if (_1779 < 0.0)
            {
                frontier_phi_48_45_ladder = abs((_1770 + 1.0) / _1779);
            }
            else
            {
                frontier_phi_48_45_ladder = 5000.0;
            }
            _2408 = frontier_phi_48_45_ladder;
        }
        float _2410 = isnan(_2195) ? _1919 : (isnan(_1919) ? _2195 : min(_1919, _2195));
        float _2411 = isnan(_2408) ? _2410 : (isnan(_2410) ? _2408 : min(_2410, _2408));
        float _2415 = (_2411 * _1773) + _1762;
        float _2416 = (_2411 * _1776) + _1766;
        float _2417 = (_2411 * _1779) + _1770;
        float _2418 = _2411 * 9.9999997473787516355514526367188e-05;
        float _2419 = (-1.0) - _2418;
        float _2421 = _2418 + 1.0;
        float frontier_phi_24_48_ladder;
        float frontier_phi_24_48_ladder_1;
        float frontier_phi_24_48_ladder_2;
        if ((_2417 > _2421) || ((_2417 < _2419) || ((_2416 > _2421) || ((_2416 < _2419) || ((_2415 < _2419) || (_2415 > _2421))))))
        {
            frontier_phi_24_48_ladder = 0.0;
            frontier_phi_24_48_ladder_1 = 0.0;
            frontier_phi_24_48_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2617 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2417, cbModelParam._m0[17u].z, fma(_2416, cbModelParam._m0[17u].y, _2415 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2417, cbModelParam._m0[18u].z, fma(_2416, cbModelParam._m0[18u].y, _2415 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2417, cbModelParam._m0[19u].z, fma(_2416, cbModelParam._m0[19u].y, _2415 * cbModelParam._m0[19u].x))), _1705);
            frontier_phi_24_48_ladder = _2617.z * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_1 = _2617.y * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_2 = _2617.x * cbModelParam._m0[1u].z;
        }
        _1798 = frontier_phi_24_48_ladder_2;
        _1800 = frontier_phi_24_48_ladder_1;
        _1802 = frontier_phi_24_48_ladder;
    }
    else
    {
        vec4 _1782 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_806, _807, _808), _1705);
        _1798 = _1782.x * cbModelParam._m0[1u].z;
        _1800 = _1782.y * cbModelParam._m0[1u].z;
        _1802 = _1782.z * cbModelParam._m0[1u].z;
    }
    float _1815 = (((_833 * _784) + _834) * _798) * ((cbModelParam._m0[1u].w * (_1798 - _1696)) + _1696);
    float _1817 = (((_833 * _785) + _834) * _798) * ((cbModelParam._m0[1u].w * (_1800 - _1698)) + _1698);
    float _1819 = (((_833 * _786) + _834) * _798) * ((cbModelParam._m0[1u].w * (_1802 - _1700)) + _1700);
    float _1822 = fma(_1819, cbSceneParam._m0[89u].z, fma(_1817, cbSceneParam._m0[89u].y, _1815 * cbSceneParam._m0[89u].x));
    float _1825 = fma(_1819, cbSceneParam._m0[90u].z, fma(_1817, cbSceneParam._m0[90u].y, _1815 * cbSceneParam._m0[90u].x));
    float _1828 = fma(_1819, cbSceneParam._m0[91u].z, fma(_1817, cbSceneParam._m0[91u].y, _1815 * cbSceneParam._m0[91u].x));
    uvec4 _1838 = floatBitsToUint(cbInstanceData._m0[_690 + 5u]);
    uint _1840 = _1838.x * 14u;
    uint _1841 = _1840 + 13u;
    float _1848 = _798 + (-1.0);
    float _1853 = (cbLight._m0[_1841].x * _1848) + 1.0;
    float _1854 = (cbLight._m0[_1841].y * _1848) + 1.0;
    float _1855 = (cbLight._m0[_1841].z * _1848) + 1.0;
    float _1856 = (cbLight._m0[_1841].w * _1848) + 1.0;
    uint _1857 = _1840 + 5u;
    float _1863 = isnan(1.0) ? _1854 : (isnan(_1854) ? 1.0 : min(_1854, 1.0));
    uint _1867 = _1840 + 4u;
    float _1873 = isnan(1.0) ? _1853 : (isnan(_1853) ? 1.0 : min(_1853, 1.0));
    uint _1877 = _1840 | 1u;
    float _1888 = dot(vec3(cbLight._m0[_1840].xyz), vec3(_496, _497, _498));
    float _1891 = dot(vec3(cbLight._m0[_1877].xyz), vec3(_496, _497, _498));
    float _3993 = isnan(0.0) ? _1888 : (isnan(_1888) ? 0.0 : max(_1888, 0.0));
    float _4004 = isnan(0.0) ? _1891 : (isnan(_1891) ? 0.0 : max(_1891, 0.0));
    float _1896 = (isnan(1.0) ? _3993 : (isnan(_3993) ? 1.0 : min(_3993, 1.0))) * 0.3183098733425140380859375;
    float _1898 = (isnan(1.0) ? _4004 : (isnan(_4004) ? 1.0 : min(_4004, 1.0))) * 0.3183098733425140380859375;
    float _1905 = ((cbLight._m0[_1857].x * _1863) * _1898) + ((cbLight._m0[_1867].x * _1873) * _1896);
    float _1906 = ((_1863 * cbLight._m0[_1857].y) * _1898) + ((_1873 * cbLight._m0[_1867].y) * _1896);
    float _1907 = ((_1863 * cbLight._m0[_1857].z) * _1898) + ((_1873 * cbLight._m0[_1867].z) * _1896);
    uvec4 _1911 = floatBitsToUint(cbLight._m0[_1840 + 12u]);
    bool _1913 = _1911.x == 0u;
    float _1924;
    float _1926;
    float _1928;
    if (_1913)
    {
        _1924 = _1905;
        _1926 = _1906;
        _1928 = _1907;
    }
    else
    {
        uint _1932 = _1840 + 6u;
        float _1948 = (dot(vec3(cbLight._m0[_1840 + 2u].xyz), vec3(_496, _497, _498)) * 0.5) + 0.5;
        float _1949 = _1948 * _1948;
        float _4015 = isnan(0.0) ? _1949 : (isnan(_1949) ? 0.0 : max(_1949, 0.0));
        float _1950 = isnan(1.0) ? _4015 : (isnan(_4015) ? 1.0 : min(_4015, 1.0));
        float _1951 = isnan(1.0) ? _1855 : (isnan(_1855) ? 1.0 : min(_1855, 1.0));
        _1924 = (((cbLight._m0[_1932].x * 0.3183098733425140380859375) * _1950) * _1951) + _1905;
        _1926 = (((cbLight._m0[_1932].y * 0.3183098733425140380859375) * _1950) * _1951) + _1906;
        _1928 = (((cbLight._m0[_1932].z * 0.3183098733425140380859375) * _1950) * _1951) + _1907;
    }
    bool _1931 = _1911.y == 0u;
    float _1969;
    float _1971;
    float _1973;
    if (_1931)
    {
        _1969 = _1924;
        _1971 = _1926;
        _1973 = _1928;
    }
    else
    {
        uint _2139 = _1840 + 7u;
        float _2155 = (dot(vec3(cbLight._m0[_1840 + 3u].xyz), vec3(_496, _497, _498)) * 0.5) + 0.5;
        float _2156 = _2155 * _2155;
        float _4031 = isnan(0.0) ? _2156 : (isnan(_2156) ? 0.0 : max(_2156, 0.0));
        float _2157 = isnan(1.0) ? _4031 : (isnan(_4031) ? 1.0 : min(_4031, 1.0));
        float _2158 = isnan(1.0) ? _1856 : (isnan(_1856) ? 1.0 : min(_1856, 1.0));
        _1969 = (((cbLight._m0[_2139].x * 0.3183098733425140380859375) * _2157) * _2158) + _1924;
        _1971 = (((cbLight._m0[_2139].y * 0.3183098733425140380859375) * _2157) * _2158) + _1926;
        _1973 = (((cbLight._m0[_2139].z * 0.3183098733425140380859375) * _2157) * _2158) + _1928;
    }
    uint _1976 = _1840 + 8u;
    float _1989 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1840].w)) * _666) * 0.949999988079071044921875);
    float _1990 = _1989 * _1989;
    float _1991 = cbLight._m0[_1840].x + _578;
    float _1992 = cbLight._m0[_1840].y + _579;
    float _1993 = cbLight._m0[_1840].z + _580;
    float _1997 = inversesqrt(dot(vec3(_1991, _1992, _1993), vec3(_1991, _1992, _1993)));
    float _1998 = _1997 * _1991;
    float _1999 = _1997 * _1992;
    float _2000 = _1997 * _1993;
    float _2001 = dot(vec3(_496, _497, _498), vec3(cbLight._m0[_1840].xyz));
    float _4047 = isnan(0.0) ? _2001 : (isnan(_2001) ? 0.0 : max(_2001, 0.0));
    float _2004 = isnan(1.0) ? _4047 : (isnan(_4047) ? 1.0 : min(_4047, 1.0));
    float _4058 = isnan(0.0) ? _799 : (isnan(_799) ? 0.0 : max(_799, 0.0));
    float _2005 = isnan(1.0) ? _4058 : (isnan(_4058) ? 1.0 : min(_4058, 1.0));
    float _2006 = dot(vec3(_496, _497, _498), vec3(_1998, _1999, _2000));
    float _4069 = isnan(0.0) ? _2006 : (isnan(_2006) ? 0.0 : max(_2006, 0.0));
    float _2009 = isnan(1.0) ? _4069 : (isnan(_4069) ? 1.0 : min(_4069, 1.0));
    float _2010 = dot(vec3(cbLight._m0[_1840].xyz), vec3(_1998, _1999, _2000));
    float _4080 = isnan(0.0) ? _2010 : (isnan(_2010) ? 0.0 : max(_2010, 0.0));
    float _2014 = _1990 * _1990;
    float _2018 = ((_2009 * _2009) * (_2014 + (-1.0))) + 1.0;
    float _2026 = exp2(log2(1.0 - (isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0)))) * 5.0);
    float _2027 = 0.959999978542327880859375 - _781;
    float _2029 = 0.959999978542327880859375 - _782;
    float _2030 = 0.959999978542327880859375 - _783;
    float _2037 = 1.0 - _1990;
    float _2048 = (0.5 / (((_2005 * ((_2004 * _2037) + _1990)) + 9.9999999392252902907785028219223e-09) + (((_2005 * _2037) + _1990) * _2004))) * _2004;
    float _4091 = isnan(0.0) ? _2048 : (isnan(_2048) ? 0.0 : max(_2048, 0.0));
    float _2050 = (isnan(1.0) ? _4091 : (isnan(_4091) ? 1.0 : min(_4091, 1.0))) * (_2014 / ((_2018 * _2018) * 3.141590118408203125));
    uint _2061 = _1840 + 9u;
    float _2072 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1877].w)) * _666) * 0.949999988079071044921875);
    float _2073 = _2072 * _2072;
    float _2074 = cbLight._m0[_1877].x + _578;
    float _2075 = cbLight._m0[_1877].y + _579;
    float _2076 = cbLight._m0[_1877].z + _580;
    float _2080 = inversesqrt(dot(vec3(_2074, _2075, _2076), vec3(_2074, _2075, _2076)));
    float _2081 = _2080 * _2074;
    float _2082 = _2080 * _2075;
    float _2083 = _2080 * _2076;
    float _2084 = dot(vec3(_496, _497, _498), vec3(cbLight._m0[_1877].xyz));
    float _4102 = isnan(0.0) ? _2084 : (isnan(_2084) ? 0.0 : max(_2084, 0.0));
    float _2087 = isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0));
    float _2088 = dot(vec3(_496, _497, _498), vec3(_2081, _2082, _2083));
    float _4113 = isnan(0.0) ? _2088 : (isnan(_2088) ? 0.0 : max(_2088, 0.0));
    float _2091 = isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0));
    float _2092 = dot(vec3(cbLight._m0[_1877].xyz), vec3(_2081, _2082, _2083));
    float _4124 = isnan(0.0) ? _2092 : (isnan(_2092) ? 0.0 : max(_2092, 0.0));
    float _2096 = _2073 * _2073;
    float _2100 = ((_2091 * _2091) * (_2096 + (-1.0))) + 1.0;
    float _2107 = exp2(log2(1.0 - (isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0)))) * 5.0);
    float _2114 = 1.0 - _2073;
    float _2124 = (0.5 / (((_2005 * ((_2087 * _2114) + _2073)) + 9.9999999392252902907785028219223e-09) + (((_2005 * _2114) + _2073) * _2087))) * _2087;
    float _4135 = isnan(0.0) ? _2124 : (isnan(_2124) ? 0.0 : max(_2124, 0.0));
    float _2126 = (isnan(1.0) ? _4135 : (isnan(_4135) ? 1.0 : min(_4135, 1.0))) * (_2096 / ((_2100 * _2100) * 3.141590118408203125));
    float _2136 = (((((_2107 * _2027) + _784) * cbLight._m0[_2061].x) * _2126) * _1863) + (((((_2026 * _2027) + _784) * cbLight._m0[_1976].x) * _2050) * _1873);
    float _2137 = (((((_2107 * _2029) + _785) * cbLight._m0[_2061].y) * _2126) * _1863) + (((((_2026 * _2029) + _785) * cbLight._m0[_1976].y) * _2050) * _1873);
    float _2138 = (((((_2107 * _2030) + _786) * cbLight._m0[_2061].z) * _2126) * _1863) + (((((_2026 * _2030) + _786) * cbLight._m0[_1976].z) * _2050) * _1873);
    float _2200;
    float _2202;
    float _2204;
    if (_1913)
    {
        _2200 = _2136;
        _2202 = _2137;
        _2204 = _2138;
    }
    else
    {
        uint _2206 = _1840 + 2u;
        uint _2210 = _1840 + 10u;
        float _2224 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2206].w)) * _666) * 0.949999988079071044921875);
        float _2225 = _2224 * _2224;
        float _2226 = cbLight._m0[_2206].x + _578;
        float _2227 = cbLight._m0[_2206].y + _579;
        float _2228 = cbLight._m0[_2206].z + _580;
        float _2232 = inversesqrt(dot(vec3(_2226, _2227, _2228), vec3(_2226, _2227, _2228)));
        float _2233 = _2232 * _2226;
        float _2234 = _2232 * _2227;
        float _2235 = _2232 * _2228;
        float _2236 = dot(vec3(_496, _497, _498), vec3(cbLight._m0[_2206].xyz));
        float _4146 = isnan(0.0) ? _2236 : (isnan(_2236) ? 0.0 : max(_2236, 0.0));
        float _2239 = isnan(1.0) ? _4146 : (isnan(_4146) ? 1.0 : min(_4146, 1.0));
        float _2240 = dot(vec3(_496, _497, _498), vec3(_2233, _2234, _2235));
        float _4157 = isnan(0.0) ? _2240 : (isnan(_2240) ? 0.0 : max(_2240, 0.0));
        float _2243 = isnan(1.0) ? _4157 : (isnan(_4157) ? 1.0 : min(_4157, 1.0));
        float _2244 = dot(vec3(cbLight._m0[_2206].xyz), vec3(_2233, _2234, _2235));
        float _4168 = isnan(0.0) ? _2244 : (isnan(_2244) ? 0.0 : max(_2244, 0.0));
        float _2248 = _2225 * _2225;
        float _2252 = ((_2243 * _2243) * (_2248 + (-1.0))) + 1.0;
        float _2259 = exp2(log2(1.0 - (isnan(1.0) ? _4168 : (isnan(_4168) ? 1.0 : min(_4168, 1.0)))) * 5.0);
        float _2266 = 1.0 - _2225;
        float _2276 = (0.5 / (((_2005 * ((_2239 * _2266) + _2225)) + 9.9999999392252902907785028219223e-09) + (((_2005 * _2266) + _2225) * _2239))) * _2239;
        float _4179 = isnan(0.0) ? _2276 : (isnan(_2276) ? 0.0 : max(_2276, 0.0));
        float _2278 = (isnan(1.0) ? _4179 : (isnan(_4179) ? 1.0 : min(_4179, 1.0))) * (_2248 / ((_2252 * _2252) * 3.141590118408203125));
        float _2279 = isnan(1.0) ? _1855 : (isnan(_1855) ? 1.0 : min(_1855, 1.0));
        _2200 = (((((_2259 * _2027) + _784) * cbLight._m0[_2210].x) * _2278) * _2279) + _2136;
        _2202 = (((((_2259 * _2029) + _785) * cbLight._m0[_2210].y) * _2278) * _2279) + _2137;
        _2204 = (((((_2259 * _2030) + _786) * cbLight._m0[_2210].z) * _2278) * _2279) + _2138;
    }
    float _2314;
    float _2316;
    float _2318;
    if (_1931)
    {
        _2314 = _2200;
        _2316 = _2202;
        _2318 = _2204;
    }
    else
    {
        uint _2325 = _1840 + 3u;
        uint _2329 = _1840 + 11u;
        float _2343 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2325].w)) * _666) * 0.949999988079071044921875);
        float _2344 = _2343 * _2343;
        float _2345 = cbLight._m0[_2325].x + _578;
        float _2346 = cbLight._m0[_2325].y + _579;
        float _2347 = cbLight._m0[_2325].z + _580;
        float _2351 = inversesqrt(dot(vec3(_2345, _2346, _2347), vec3(_2345, _2346, _2347)));
        float _2352 = _2351 * _2345;
        float _2353 = _2351 * _2346;
        float _2354 = _2351 * _2347;
        float _2355 = dot(vec3(_496, _497, _498), vec3(cbLight._m0[_2325].xyz));
        float _4195 = isnan(0.0) ? _2355 : (isnan(_2355) ? 0.0 : max(_2355, 0.0));
        float _2358 = isnan(1.0) ? _4195 : (isnan(_4195) ? 1.0 : min(_4195, 1.0));
        float _2359 = dot(vec3(_496, _497, _498), vec3(_2352, _2353, _2354));
        float _4206 = isnan(0.0) ? _2359 : (isnan(_2359) ? 0.0 : max(_2359, 0.0));
        float _2362 = isnan(1.0) ? _4206 : (isnan(_4206) ? 1.0 : min(_4206, 1.0));
        float _2363 = dot(vec3(cbLight._m0[_2325].xyz), vec3(_2352, _2353, _2354));
        float _4217 = isnan(0.0) ? _2363 : (isnan(_2363) ? 0.0 : max(_2363, 0.0));
        float _2367 = _2344 * _2344;
        float _2371 = ((_2362 * _2362) * (_2367 + (-1.0))) + 1.0;
        float _2378 = exp2(log2(1.0 - (isnan(1.0) ? _4217 : (isnan(_4217) ? 1.0 : min(_4217, 1.0)))) * 5.0);
        float _2385 = 1.0 - _2344;
        float _2395 = (0.5 / (((_2005 * ((_2358 * _2385) + _2344)) + 9.9999999392252902907785028219223e-09) + (((_2005 * _2385) + _2344) * _2358))) * _2358;
        float _4228 = isnan(0.0) ? _2395 : (isnan(_2395) ? 0.0 : max(_2395, 0.0));
        float _2397 = (isnan(1.0) ? _4228 : (isnan(_4228) ? 1.0 : min(_4228, 1.0))) * (_2367 / ((_2371 * _2371) * 3.141590118408203125));
        float _2398 = isnan(1.0) ? _1856 : (isnan(_1856) ? 1.0 : min(_1856, 1.0));
        _2314 = (((((_2378 * _2027) + _784) * cbLight._m0[_2329].x) * _2397) * _2398) + _2200;
        _2316 = (((((_2378 * _2029) + _785) * cbLight._m0[_2329].y) * _2397) * _2398) + _2202;
        _2318 = (((((_2378 * _2030) + _786) * cbLight._m0[_2329].z) * _2397) * _2398) + _2204;
    }
    float _2532;
    float _2534;
    float _2536;
    float _2538;
    float _2540;
    float _2542;
    if (_1838.y == 0u)
    {
        float _2473 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2474 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2473;
        float _2475 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2473;
        float _2476 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2473;
        uvec4 _2488 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2489 = _2488.x;
        uint _2500 = uint((float(_2488.y) * floor(float(uint(cbSceneParam._m0[85u].y * _587) / _2489))) + floor(float(uint(cbSceneParam._m0[85u].x * _586) / _2489)));
        float _2510 = (log2(_2476 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2511 = isnan(0.0) ? _2510 : (isnan(_2510) ? 0.0 : max(_2510, 0.0));
        uint _2514 = uint(isnan(14.0) ? _2511 : (isnan(_2511) ? 14.0 : min(_2511, 14.0)));
        uvec4 _2519 = texelFetch(g_lightClusterGridBuffer, int(((_2514 << 2u) + (_2500 << 6u)) >> 2u));
        uint _2520 = _2519.x;
        uint _2521 = _2488.z;
        float _2622;
        float _2624;
        float _2626;
        float _2628;
        float _2630;
        float _2632;
        if (((((1u << ((_2521 >> 4u) & 15u)) + 4294967295u) & _2520) == 0u) || ((_2521 & 240u) == 0u))
        {
            _2622 = 0.0;
            _2624 = 0.0;
            _2626 = 0.0;
            _2628 = 0.0;
            _2630 = 0.0;
            _2632 = 0.0;
        }
        else
        {
            float _2623;
            float _2625;
            float _2627;
            float _2629;
            float _2631;
            float _2633;
            float _2766 = 0.0;
            float _2767 = 0.0;
            float _2768 = 0.0;
            float _2769 = 0.0;
            float _2770 = 0.0;
            float _2771 = 0.0;
            uint _2772 = 0u;
            uint _2781;
            bool _2782;
            for (;;)
            {
                _2781 = texelFetch(g_lightClassification, int((((_2514 << 5u) + (_2500 << 9u)) + (_2772 << 2u)) >> 2u)).x;
                _2782 = _2781 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_2782)
                {
                    frontier_phi_63_pred = _2771;
                    frontier_phi_63_pred_1 = _2770;
                    frontier_phi_63_pred_2 = _2769;
                    frontier_phi_63_pred_3 = _2768;
                    frontier_phi_63_pred_4 = _2767;
                    frontier_phi_63_pred_5 = _2766;
                }
                else
                {
                    float _2890;
                    float _2891;
                    float _2892;
                    float _2893;
                    float _2894;
                    float _2895;
                    uint _2896;
                    _2890 = _2766;
                    _2891 = _2767;
                    _2892 = _2768;
                    _2893 = _2769;
                    _2894 = _2770;
                    _2895 = _2771;
                    _2896 = _2781;
                    float _2822;
                    float _2823;
                    float _2824;
                    float _2825;
                    float _2826;
                    float _2827;
                    for (;;)
                    {
                        uint _2900 = uint(findLSB(_2896)) + (_2772 << 5u);
                        uint _2897 = (_2896 + 4294967295u) & _2896;
                        uint _2902 = _2900 * 48u;
                        vec4 _2916 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2902)).x, texelFetch(g_PointLightRenderingBuffer, int(_2902 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2902 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2902 + 3u)).x));
                        uint _2922 = (_2900 * 48u) + 4u;
                        vec4 _2935 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2922)).x, texelFetch(g_PointLightRenderingBuffer, int(_2922 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2922 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2922 + 3u)).x));
                        uint _2941 = (_2900 * 48u) + 8u;
                        vec3 _2952 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2941)).x, texelFetch(g_PointLightRenderingBuffer, int(_2941 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2941 + 2u)).x));
                        float _2956 = _2916.x - _2474;
                        float _2957 = _2916.y - _2475;
                        float _2958 = _2916.z - _2476;
                        float _2959 = dot(vec3(_2956, _2957, _2958), vec3(_2956, _2957, _2958));
                        float _2962 = inversesqrt(_2959);
                        float _2963 = _2962 * _2956;
                        float _2964 = _2962 * _2957;
                        float _2965 = _2962 * _2958;
                        float _2966 = dot(vec3(_609, _612, _615), vec3(_2963, _2964, _2965));
                        float _2971 = 1.0 - (_2959 * _2916.w);
                        float _4254 = isnan(0.0) ? _2971 : (isnan(_2971) ? 0.0 : max(_2971, 0.0));
                        float _2972 = isnan(1.0) ? _4254 : (isnan(_4254) ? 1.0 : min(_4254, 1.0));
                        float _2973 = sqrt(_2959) * _2935.w;
                        float _2976 = 1.39999997615814208984375 / (_2973 + 1.39999997615814208984375);
                        float _2977 = _2976 * _2976;
                        float _2980 = ((1.0 - _2977) * _2966) + _2977;
                        float _2983 = _2973 * _2973;
                        float _2987 = ((isnan(0.0) ? _2980 : (isnan(_2980) ? 0.0 : max(_2980, 0.0))) * _2972) / ((_2983 * 0.699999988079071044921875) + 1.0);
                        float _2991 = (-0.0) - _2474;
                        float _2992 = (-0.0) - _2475;
                        float _2993 = (-0.0) - _2476;
                        float _2997 = inversesqrt(dot(vec3(_2991, _2992, _2993), vec3(_2991, _2992, _2993)));
                        float _2998 = _2997 * _2991;
                        float _2999 = _2997 * _2992;
                        float _3000 = _2997 * _2993;
                        float _3008 = exp2(log2(1.0 / ((_2983 * 3.5) + 5.0)) * 0.25);
                        float _3009 = 1.0 - _814;
                        float _3016 = sqrt(1.0 - ((1.0 - (_3009 * _3009)) * (1.0 - (_3008 * _3008))));
                        float _3017 = _3016 * _3016;
                        float _3018 = _3017 * _3017;
                        float _3019 = _2998 + _2963;
                        float _3020 = _2999 + _2964;
                        float _3021 = _3000 + _2965;
                        float _3025 = inversesqrt(dot(vec3(_3019, _3020, _3021), vec3(_3019, _3020, _3021)));
                        float _3029 = dot(vec3(_609, _612, _615), vec3(_2998, _2999, _3000));
                        float _4270 = isnan(0.0) ? _3029 : (isnan(_3029) ? 0.0 : max(_3029, 0.0));
                        float _3032 = isnan(1.0) ? _4270 : (isnan(_4270) ? 1.0 : min(_4270, 1.0));
                        float _3033 = dot(vec3(_609, _612, _615), vec3(_3025 * _3019, _3025 * _3020, _3025 * _3021));
                        float _4281 = isnan(0.0) ? _3033 : (isnan(_3033) ? 0.0 : max(_3033, 0.0));
                        float _3036 = isnan(1.0) ? _4281 : (isnan(_4281) ? 1.0 : min(_4281, 1.0));
                        float _3040 = ((_3036 * _3036) * (_3018 + (-1.0))) + 1.0;
                        float _3041 = _2976 * _3017;
                        float _3042 = _3041 * _3041;
                        float _3045 = ((1.0 - _3042) * _2966) + _3042;
                        float _4292 = isnan(0.0) ? _3045 : (isnan(_3045) ? 0.0 : max(_3045, 0.0));
                        float _3046 = isnan(1.0) ? _4292 : (isnan(_4292) ? 1.0 : min(_4292, 1.0));
                        float _3047 = 1.0 - _3017;
                        float _3057 = (0.5 / (((_3046 * ((_3032 * _3047) + _3017)) + 9.9999999392252902907785028219223e-09) + (((_3046 * _3047) + _3017) * _3032))) * _3046;
                        float _4303 = isnan(0.0) ? _3057 : (isnan(_3057) ? 0.0 : max(_3057, 0.0));
                        float _3068 = (((_3018 * 3.1415927410125732421875) * (isnan(1.0) ? _4303 : (isnan(_4303) ? 1.0 : min(_4303, 1.0)))) / ((_3040 * _3040) * ((_2983 * 2.1991131305694580078125) + 3.141590118408203125))) * _2972;
                        _2825 = (_2987 * _2935.x) + _2893;
                        _2826 = (_2987 * _2935.y) + _2894;
                        _2827 = (_2987 * _2935.z) + _2895;
                        _2822 = (_3068 * _2952.x) + _2890;
                        _2823 = (_3068 * _2952.y) + _2891;
                        _2824 = (_3068 * _2952.z) + _2892;
                        if (_2897 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2890 = _2822;
                            _2891 = _2823;
                            _2892 = _2824;
                            _2893 = _2825;
                            _2894 = _2826;
                            _2895 = _2827;
                            _2896 = _2897;
                        }
                    }
                    frontier_phi_63_pred = _2827;
                    frontier_phi_63_pred_1 = _2826;
                    frontier_phi_63_pred_2 = _2825;
                    frontier_phi_63_pred_3 = _2824;
                    frontier_phi_63_pred_4 = _2823;
                    frontier_phi_63_pred_5 = _2822;
                }
                _2633 = frontier_phi_63_pred;
                _2631 = frontier_phi_63_pred_1;
                _2629 = frontier_phi_63_pred_2;
                _2627 = frontier_phi_63_pred_3;
                _2625 = frontier_phi_63_pred_4;
                _2623 = frontier_phi_63_pred_5;
                uint _2773 = _2772 + 1u;
                if (_2773 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2766 = _2623;
                    _2767 = _2625;
                    _2768 = _2627;
                    _2769 = _2629;
                    _2770 = _2631;
                    _2771 = _2633;
                    _2772 = _2773;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2622 = _2623;
            _2624 = _2625;
            _2626 = _2627;
            _2628 = _2629;
            _2630 = _2631;
            _2632 = _2633;
        }
        uvec4 _2636 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2637 = _2636.z;
        uint _2639 = (_2637 >> 8u) & 15u;
        float _2734;
        float _2736;
        float _2738;
        float _2740;
        float _2742;
        float _2744;
        if (((4294967295u << _2639) & _2520) == 0u)
        {
            _2734 = _2622;
            _2736 = _2624;
            _2738 = _2626;
            _2740 = _2628;
            _2742 = _2630;
            _2744 = _2632;
        }
        else
        {
            float _2759 = inversesqrt(dot(vec3(_2474, _2475, _2476), vec3(_2474, _2475, _2476)));
            float _2760 = _2759 * _2474;
            float _2761 = _2759 * _2475;
            float _2762 = _2759 * _2476;
            float frontier_phi_57_58_ladder;
            float frontier_phi_57_58_ladder_1;
            float frontier_phi_57_58_ladder_2;
            float frontier_phi_57_58_ladder_3;
            float frontier_phi_57_58_ladder_4;
            float frontier_phi_57_58_ladder_5;
            if (_2639 < ((_2637 >> 12u) & 15u))
            {
                float _2735;
                float _2737;
                float _2739;
                float _2741;
                float _2743;
                float _2745;
                float _2873 = _2622;
                float _2874 = _2624;
                float _2875 = _2626;
                float _2876 = _2628;
                float _2877 = _2630;
                float _2878 = _2632;
                uint _2879 = _2639;
                uint _2888;
                bool _2889;
                for (;;)
                {
                    _2888 = texelFetch(g_lightClassification, int((((_2514 << 5u) + (_2500 << 9u)) + (_2879 << 2u)) >> 2u)).x;
                    _2889 = _2888 == 0u;
                    float frontier_phi_69_pred;
                    float frontier_phi_69_pred_1;
                    float frontier_phi_69_pred_2;
                    float frontier_phi_69_pred_3;
                    float frontier_phi_69_pred_4;
                    float frontier_phi_69_pred_5;
                    if (_2889)
                    {
                        frontier_phi_69_pred = _2878;
                        frontier_phi_69_pred_1 = _2877;
                        frontier_phi_69_pred_2 = _2876;
                        frontier_phi_69_pred_3 = _2875;
                        frontier_phi_69_pred_4 = _2874;
                        frontier_phi_69_pred_5 = _2873;
                    }
                    else
                    {
                        float _3073;
                        float _3074;
                        float _3075;
                        float _3076;
                        float _3077;
                        float _3078;
                        float _3368;
                        float _3369;
                        float _3370;
                        float _3371;
                        float _3372;
                        float _3373;
                        float _3086 = _2873;
                        float _3087 = _2874;
                        float _3088 = _2875;
                        float _3089 = _2876;
                        float _3090 = _2877;
                        float _3091 = _2878;
                        uint _3092 = _2888;
                        uint _3093;
                        vec4 _3118;
                        float _3119;
                        vec4 _3134;
                        vec3 _3146;
                        vec4 _3161;
                        vec4 _3177;
                        float _3224;
                        bool _3225;
                        for (;;)
                        {
                            uint _3103 = ((_2879 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3092));
                            _3093 = (_3092 + 4294967295u) & _3092;
                            uint _3105 = _3103 * 40u;
                            _3118 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3105)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3105 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3105 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3105 + 3u)).x));
                            _3119 = _3118.w;
                            uint _3121 = (_3103 * 40u) + 4u;
                            _3134 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3121)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3121 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3121 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3121 + 3u)).x));
                            uint _3136 = (_3103 * 40u) + 8u;
                            _3146 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3136)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3136 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3136 + 2u)).x));
                            uint _3148 = (_3103 * 40u) + 16u;
                            _3161 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3148)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3148 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3148 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3148 + 3u)).x));
                            uint _3164 = (_3103 * 40u) + 20u;
                            _3177 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3164)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3164 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3164 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3164 + 3u)).x));
                            uint _3180 = (_3103 * 40u) + 24u;
                            vec4 _3193 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3180)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3180 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3180 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3180 + 3u)).x));
                            uint _3199 = (_3103 * 40u) + 28u;
                            vec4 _3212 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3199)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3199 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3199 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3199 + 3u)).x));
                            _3224 = fma(_2476, _3212.z, fma(_2475, _3212.y, _3212.x * _2474)) + _3212.w;
                            _3225 = !((fma(_2476, _3193.z, fma(_2475, _3193.y, _3193.x * _2474)) + _3193.w) <= 0.0);
                            float frontier_phi_75_pred;
                            float frontier_phi_75_pred_1;
                            float frontier_phi_75_pred_2;
                            float frontier_phi_75_pred_3;
                            float frontier_phi_75_pred_4;
                            float frontier_phi_75_pred_5;
                            if (_3225)
                            {
                                float _3252 = _3118.x - _2474;
                                float _3253 = _3118.y - _2475;
                                float _3254 = _3118.z - _2476;
                                float _3255 = dot(vec3(_3252, _3253, _3254), vec3(_3252, _3253, _3254));
                                float _3258 = inversesqrt(_3255);
                                float _3259 = _3258 * _3252;
                                float _3260 = _3258 * _3253;
                                float _3261 = _3258 * _3254;
                                float _3265 = 1.0 - (_3255 / (_3119 * _3119));
                                float _4314 = isnan(0.0) ? _3265 : (isnan(_3265) ? 0.0 : max(_3265, 0.0));
                                float _3266 = isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0));
                                float _3270 = sqrt(_3255) * _3134.w;
                                float _3272 = 1.39999997615814208984375 / (_3270 + 1.39999997615814208984375);
                                float _3273 = _3272 * _3272;
                                float _3276 = ((1.0 - _3273) * dot(vec3(_3259, _3260, _3261), vec3(_609, _612, _615))) + _3273;
                                float _3279 = _3270 * _3270;
                                float _3283 = (fma(_2476, _3161.z, fma(_2475, _3161.y, _3161.x * _2474)) + _3161.w) / _3224;
                                float _3284 = (fma(_2476, _3177.z, fma(_2475, _3177.y, _3177.x * _2474)) + _3177.w) / _3224;
                                float _3288 = 1.0 - dot(vec2(_3283, _3284), vec2(_3283, _3284));
                                float _4330 = isnan(0.0) ? _3288 : (isnan(_3288) ? 0.0 : max(_3288, 0.0));
                                float _3289 = isnan(1.0) ? _4330 : (isnan(_4330) ? 1.0 : min(_4330, 1.0));
                                float _3290 = _3289 * (((isnan(0.0) ? _3276 : (isnan(_3276) ? 0.0 : max(_3276, 0.0))) * _3266) / ((_3279 * 0.699999988079071044921875) + 1.0));
                                float _3302 = exp2(log2(1.0 / ((_3279 * 3.5) + 5.0)) * 0.25);
                                float _3303 = 1.0 - _814;
                                float _3310 = sqrt(1.0 - ((1.0 - (_3303 * _3303)) * (1.0 - (_3302 * _3302))));
                                float _3311 = _3310 * _3310;
                                float _3312 = _3311 * _3311;
                                float _3313 = _3259 - _2760;
                                float _3314 = _3260 - _2761;
                                float _3315 = _3261 - _2762;
                                float _3319 = inversesqrt(dot(vec3(_3313, _3314, _3315), vec3(_3313, _3314, _3315)));
                                float _3323 = dot(vec3(_609, _612, _615), vec3((-0.0) - _2760, (-0.0) - _2761, (-0.0) - _2762));
                                float _4341 = isnan(0.0) ? _3323 : (isnan(_3323) ? 0.0 : max(_3323, 0.0));
                                float _3326 = isnan(1.0) ? _4341 : (isnan(_4341) ? 1.0 : min(_4341, 1.0));
                                float _3327 = dot(vec3(_609, _612, _615), vec3(_3319 * _3313, _3319 * _3314, _3319 * _3315));
                                float _4352 = isnan(0.0) ? _3327 : (isnan(_3327) ? 0.0 : max(_3327, 0.0));
                                float _3330 = isnan(1.0) ? _4352 : (isnan(_4352) ? 1.0 : min(_4352, 1.0));
                                float _3334 = ((_3330 * _3330) * (_3312 + (-1.0))) + 1.0;
                                float _3335 = _3272 * _3311;
                                float _3336 = _3335 * _3335;
                                float _3342 = ((1.0 - _3336) * dot(vec3(_609, _612, _615), vec3(_3259, _3260, _3261))) + _3336;
                                float _4363 = isnan(0.0) ? _3342 : (isnan(_3342) ? 0.0 : max(_3342, 0.0));
                                float _3343 = isnan(1.0) ? _4363 : (isnan(_4363) ? 1.0 : min(_4363, 1.0));
                                float _3344 = 1.0 - _3311;
                                float _3354 = (0.5 / (((_3343 * ((_3326 * _3344) + _3311)) + 9.9999999392252902907785028219223e-09) + (((_3343 * _3344) + _3311) * _3326))) * _3343;
                                float _4374 = isnan(0.0) ? _3354 : (isnan(_3354) ? 0.0 : max(_3354, 0.0));
                                float _3364 = (_3289 * _3266) * (((_3312 * 3.1415927410125732421875) * (isnan(1.0) ? _4374 : (isnan(_4374) ? 1.0 : min(_4374, 1.0)))) / ((_3334 * _3334) * ((_3279 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_75_pred = _3290 * _3134.z;
                                frontier_phi_75_pred_1 = _3290 * _3134.y;
                                frontier_phi_75_pred_2 = _3290 * _3134.x;
                                frontier_phi_75_pred_3 = _3364 * _3146.z;
                                frontier_phi_75_pred_4 = _3364 * _3146.y;
                                frontier_phi_75_pred_5 = _3364 * _3146.x;
                            }
                            else
                            {
                                frontier_phi_75_pred = 0.0;
                                frontier_phi_75_pred_1 = 0.0;
                                frontier_phi_75_pred_2 = 0.0;
                                frontier_phi_75_pred_3 = 0.0;
                                frontier_phi_75_pred_4 = 0.0;
                                frontier_phi_75_pred_5 = 0.0;
                            }
                            _3373 = frontier_phi_75_pred;
                            _3372 = frontier_phi_75_pred_1;
                            _3371 = frontier_phi_75_pred_2;
                            _3370 = frontier_phi_75_pred_3;
                            _3369 = frontier_phi_75_pred_4;
                            _3368 = frontier_phi_75_pred_5;
                            _3076 = _3371 + _3089;
                            _3077 = _3372 + _3090;
                            _3078 = _3373 + _3091;
                            _3073 = _3368 + _3086;
                            _3074 = _3369 + _3087;
                            _3075 = _3370 + _3088;
                            if (_3093 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3086 = _3073;
                                _3087 = _3074;
                                _3088 = _3075;
                                _3089 = _3076;
                                _3090 = _3077;
                                _3091 = _3078;
                                _3092 = _3093;
                                continue;
                            }
                        }
                        frontier_phi_69_pred = _3078;
                        frontier_phi_69_pred_1 = _3077;
                        frontier_phi_69_pred_2 = _3076;
                        frontier_phi_69_pred_3 = _3075;
                        frontier_phi_69_pred_4 = _3074;
                        frontier_phi_69_pred_5 = _3073;
                    }
                    _2745 = frontier_phi_69_pred;
                    _2743 = frontier_phi_69_pred_1;
                    _2741 = frontier_phi_69_pred_2;
                    _2739 = frontier_phi_69_pred_3;
                    _2737 = frontier_phi_69_pred_4;
                    _2735 = frontier_phi_69_pred_5;
                    uint _2880 = _2879 + 1u;
                    if (_2880 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2873 = _2735;
                        _2874 = _2737;
                        _2875 = _2739;
                        _2876 = _2741;
                        _2877 = _2743;
                        _2878 = _2745;
                        _2879 = _2880;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_57_58_ladder = _2745;
                frontier_phi_57_58_ladder_1 = _2743;
                frontier_phi_57_58_ladder_2 = _2741;
                frontier_phi_57_58_ladder_3 = _2739;
                frontier_phi_57_58_ladder_4 = _2737;
                frontier_phi_57_58_ladder_5 = _2735;
            }
            else
            {
                frontier_phi_57_58_ladder = _2632;
                frontier_phi_57_58_ladder_1 = _2630;
                frontier_phi_57_58_ladder_2 = _2628;
                frontier_phi_57_58_ladder_3 = _2626;
                frontier_phi_57_58_ladder_4 = _2624;
                frontier_phi_57_58_ladder_5 = _2622;
            }
            _2734 = frontier_phi_57_58_ladder_5;
            _2736 = frontier_phi_57_58_ladder_4;
            _2738 = frontier_phi_57_58_ladder_3;
            _2740 = frontier_phi_57_58_ladder_2;
            _2742 = frontier_phi_57_58_ladder_1;
            _2744 = frontier_phi_57_58_ladder;
        }
        float _2749 = isnan(1.0) ? _798 : (isnan(_798) ? 1.0 : min(_798, 1.0));
        _2532 = (_2749 * _2740) + _1969;
        _2534 = (_2749 * _2742) + _1971;
        _2536 = (_2749 * _2744) + _1973;
        _2538 = ((_2734 * _784) * _2749) + _2314;
        _2540 = ((_2736 * _785) * _2749) + _2316;
        _2542 = ((_2738 * _786) * _2749) + _2318;
    }
    else
    {
        _2532 = _1969;
        _2534 = _1971;
        _2536 = _1973;
        _2538 = _2314;
        _2540 = _2316;
        _2542 = _2318;
    }
    float _4390 = isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0));
    float _4401 = isnan(0.0) ? _776 : (isnan(_776) ? 0.0 : max(_776, 0.0));
    float _4412 = isnan(0.0) ? _777 : (isnan(_777) ? 0.0 : max(_777, 0.0));
    float _4423 = isnan(0.0) ? _499 : (isnan(_499) ? 0.0 : max(_499, 0.0));
    float _2567 = cbInstanceData._m0[_690 + 6u].w * (isnan(1.0) ? _4423 : (isnan(_4423) ? 1.0 : min(_4423, 1.0)));
    float _2572 = _586 / cbSceneParam._m0[86u].x;
    float _2573 = _587 / cbSceneParam._m0[86u].y;
    vec4 _2587 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2572, _2573, (log2((isnan(cbSceneParam._m0[77u].w) ? _520 : (isnan(_520) ? cbSceneParam._m0[77u].w : min(_520, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2589 = _2587.x;
    float _2590 = _2587.y;
    float _2591 = _2587.z;
    float _2592 = _2587.w;
    float _2684;
    float _2686;
    float _2688;
    float _2690;
    if (_520 > cbSceneParam._m0[78u].w)
    {
        float _2647 = isnan(_520) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _520 : min(cbSceneParam._m0[80u].w, _520));
        float _2648 = _2647 / _520;
        float _2659 = _2648 * _571;
        float _2660 = _572 * _2648;
        float _2661 = (-0.0) - _2660;
        float _2662 = _2648 * _573;
        float _2664 = (cbSceneParam._m0[77u].w * _2661) / _2647;
        float _2665 = _2664 + cbSceneParam._m0[79u].w;
        float _2666 = cbSceneParam._m0[79u].w - _2660;
        float _2672 = sqrt(((_2659 * _2659) + (_2660 * _2660)) + (_2662 * _2662));
        float _2675 = (1.0 - (cbSceneParam._m0[77u].w / _2647)) * _2672;
        float _2680 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2682 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2835;
        if (abs((_2661 - _2664) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2835 = ((((_2665 > 0.0) ? exp2(_2680 * _2665) : (2.0 - exp2(_2682 * _2665))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2675;
        }
        else
        {
            float _2795 = 1.0 / cbSceneParam._m0[80u].x;
            float _2796 = isnan(_2666) ? _2665 : (isnan(_2665) ? _2666 : max(_2665, _2666));
            float _2797 = isnan(_2666) ? _2665 : (isnan(_2665) ? _2666 : min(_2665, _2666));
            float _2806 = isnan(0.0) ? _2796 : (isnan(_2796) ? 0.0 : min(_2796, 0.0));
            float _2807 = isnan(0.0) ? _2797 : (isnan(_2797) ? 0.0 : min(_2797, 0.0));
            _2835 = ((abs(_2672 / _2661) * cbSceneParam._m0[80u].y) * ((((_2806 - _2807) * 2.0) - ((exp2(_2680 * (isnan(0.0) ? _2796 : (isnan(_2796) ? 0.0 : max(_2796, 0.0)))) - exp2(_2680 * (isnan(0.0) ? _2797 : (isnan(_2797) ? 0.0 : max(_2797, 0.0))))) * _2795)) - ((exp2(_2682 * _2806) - exp2(_2682 * _2807)) * _2795))) + (_2675 * cbSceneParam._m0[80u].z);
        }
        vec4 _2837 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2572, _2573, 1.0), 0.0);
        float _2846 = exp2((_2835 * (-1.44269502162933349609375)) * (1.0 - _2837.w));
        float _2847 = log2(_2846);
        float _2863 = log2(_2592);
        _2684 = (exp2(_2863 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2847 * cbSceneParam._m0[78u].x)) * _2837.x) / cbSceneParam._m0[78u].x)) + _2589;
        _2686 = (exp2(_2863 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2847 * cbSceneParam._m0[78u].y)) * _2837.y) / cbSceneParam._m0[78u].y)) + _2590;
        _2688 = (exp2(_2863 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2847 * cbSceneParam._m0[78u].z)) * _2837.z) / cbSceneParam._m0[78u].z)) + _2591;
        _2690 = _2846 * _2592;
    }
    else
    {
        _2684 = _2589;
        _2686 = _2590;
        _2688 = _2591;
        _2690 = _2592;
    }
    float _2702 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2703 = _2702 == 3.0;
    float _2704 = log2(_2690);
    float _2711 = exp2(_2704 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4390 : (isnan(_4390) ? 1.0 : min(_4390, 1.0))) * (_2532 + ((isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0))) * _798))) + ((_2538 + ((isnan(0.0) ? _1822 : (isnan(_1822) ? 0.0 : max(_1822, 0.0))) * _1605)) * cbPerFrame._m0[3u].x));
    float _2712 = exp2(_2704 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4401 : (isnan(_4401) ? 1.0 : min(_4401, 1.0))) * (_2534 + ((isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0))) * _798))) + ((_2540 + ((isnan(0.0) ? _1825 : (isnan(_1825) ? 0.0 : max(_1825, 0.0))) * _1605)) * cbPerFrame._m0[3u].x));
    float _2713 = exp2(_2704 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4412 : (isnan(_4412) ? 1.0 : min(_4412, 1.0))) * (_2536 + ((isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0))) * _798))) + ((_2542 + ((isnan(0.0) ? _1828 : (isnan(_1828) ? 0.0 : max(_1828, 0.0))) * _1605)) * cbPerFrame._m0[3u].x));
    float _2722 = (_2702 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2722 * (_2703 ? _2711 : (_2711 + (cbSceneParam._m0[72u].w * _2684)));
    SV_Target.y = _2722 * (_2703 ? _2712 : (_2712 + (cbSceneParam._m0[72u].w * _2686)));
    SV_Target.z = _2722 * (_2703 ? _2713 : (_2713 + (cbSceneParam._m0[72u].w * _2688)));
    SV_Target.w = _2567;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2567;
}


