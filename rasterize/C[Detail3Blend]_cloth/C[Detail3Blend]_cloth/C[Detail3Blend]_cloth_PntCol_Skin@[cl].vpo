#version 460

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 1) out vec4 COLOR;
layout(location = 2) out vec3 TEXCOORD_1;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    precise float _100 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _102 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _103 = _100 + 0.0;
    precise float _104 = _102 + 0.0;
    float _349;
    float _350;
    float _351;
    float _352;
    float _353;
    float _354;
    float _355;
    float _356;
    float _357;
    float _358;
    float _359;
    float _360;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _132 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
        precise float _136 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _141 = isnan(_136) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _136 : max(0.001000000047497451305389404296875, _136));
        precise float _143 = BLENDWEIGHT.x / _141;
        precise float _144 = BLENDWEIGHT.y / _141;
        precise float _145 = BLENDWEIGHT.z / _141;
        precise float _146 = BLENDWEIGHT.w / _141;
        uvec4 _154 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_132)).x * 13u) + 4u]);
        uint _155 = _154.x;
        uint _157 = (_155 + uint(float(BLENDINDICES.x))) * 3u;
        uint _164 = _157 + 1u;
        uint _171 = _157 + 2u;
        precise float _178 = _143 * cbObjMatrix._m0[_157].x;
        precise float _179 = _143 * cbObjMatrix._m0[_164].x;
        precise float _180 = _143 * cbObjMatrix._m0[_171].x;
        precise float _181 = _143 * cbObjMatrix._m0[_157].y;
        precise float _182 = _143 * cbObjMatrix._m0[_164].y;
        precise float _183 = _143 * cbObjMatrix._m0[_171].y;
        precise float _184 = _143 * cbObjMatrix._m0[_157].z;
        precise float _185 = _143 * cbObjMatrix._m0[_164].z;
        precise float _186 = _143 * cbObjMatrix._m0[_171].z;
        precise float _187 = _143 * cbObjMatrix._m0[_157].w;
        precise float _188 = _143 * cbObjMatrix._m0[_164].w;
        precise float _189 = _143 * cbObjMatrix._m0[_171].w;
        uint _192 = (_155 + uint(float(BLENDINDICES.y))) * 3u;
        uint _199 = _192 + 1u;
        uint _206 = _192 + 2u;
        precise float _213 = _144 * cbObjMatrix._m0[_192].x;
        precise float _214 = _144 * cbObjMatrix._m0[_199].x;
        precise float _215 = _144 * cbObjMatrix._m0[_206].x;
        precise float _216 = _144 * cbObjMatrix._m0[_192].y;
        precise float _217 = _144 * cbObjMatrix._m0[_199].y;
        precise float _218 = _144 * cbObjMatrix._m0[_206].y;
        precise float _219 = _144 * cbObjMatrix._m0[_192].z;
        precise float _220 = _144 * cbObjMatrix._m0[_199].z;
        precise float _221 = _144 * cbObjMatrix._m0[_206].z;
        precise float _222 = _144 * cbObjMatrix._m0[_192].w;
        precise float _223 = _144 * cbObjMatrix._m0[_199].w;
        precise float _224 = _144 * cbObjMatrix._m0[_206].w;
        precise float _225 = _178 + _213;
        precise float _226 = _179 + _214;
        precise float _227 = _180 + _215;
        precise float _228 = _181 + _216;
        precise float _229 = _182 + _217;
        precise float _230 = _183 + _218;
        precise float _231 = _184 + _219;
        precise float _232 = _185 + _220;
        precise float _233 = _186 + _221;
        precise float _234 = _187 + _222;
        precise float _235 = _188 + _223;
        precise float _236 = _189 + _224;
        uint _239 = (_155 + uint(float(BLENDINDICES.z))) * 3u;
        uint _246 = _239 + 1u;
        uint _253 = _239 + 2u;
        precise float _260 = _145 * cbObjMatrix._m0[_239].x;
        precise float _261 = _145 * cbObjMatrix._m0[_246].x;
        precise float _262 = _145 * cbObjMatrix._m0[_253].x;
        precise float _263 = _145 * cbObjMatrix._m0[_239].y;
        precise float _264 = _145 * cbObjMatrix._m0[_246].y;
        precise float _265 = _145 * cbObjMatrix._m0[_253].y;
        precise float _266 = _145 * cbObjMatrix._m0[_239].z;
        precise float _267 = _145 * cbObjMatrix._m0[_246].z;
        precise float _268 = _145 * cbObjMatrix._m0[_253].z;
        precise float _269 = _145 * cbObjMatrix._m0[_239].w;
        precise float _270 = _145 * cbObjMatrix._m0[_246].w;
        precise float _271 = _145 * cbObjMatrix._m0[_253].w;
        precise float _272 = _225 + _260;
        precise float _273 = _226 + _261;
        precise float _274 = _227 + _262;
        precise float _275 = _228 + _263;
        precise float _276 = _229 + _264;
        precise float _277 = _230 + _265;
        precise float _278 = _231 + _266;
        precise float _279 = _232 + _267;
        precise float _280 = _233 + _268;
        precise float _281 = _234 + _269;
        precise float _282 = _235 + _270;
        precise float _283 = _236 + _271;
        uint _286 = (_155 + uint(float(BLENDINDICES.w))) * 3u;
        uint _293 = _286 + 1u;
        uint _300 = _286 + 2u;
        precise float _307 = _146 * cbObjMatrix._m0[_286].x;
        precise float _308 = _146 * cbObjMatrix._m0[_293].x;
        precise float _309 = _146 * cbObjMatrix._m0[_300].x;
        precise float _310 = _146 * cbObjMatrix._m0[_286].y;
        precise float _311 = _146 * cbObjMatrix._m0[_293].y;
        precise float _312 = _146 * cbObjMatrix._m0[_300].y;
        precise float _313 = _146 * cbObjMatrix._m0[_286].z;
        precise float _314 = _146 * cbObjMatrix._m0[_293].z;
        precise float _315 = _146 * cbObjMatrix._m0[_300].z;
        precise float _316 = _146 * cbObjMatrix._m0[_286].w;
        precise float _317 = _146 * cbObjMatrix._m0[_293].w;
        precise float _318 = _146 * cbObjMatrix._m0[_300].w;
        precise float _319 = _272 + _307;
        precise float _320 = _273 + _308;
        precise float _321 = _274 + _309;
        precise float _322 = _275 + _310;
        precise float _323 = _276 + _311;
        precise float _324 = _277 + _312;
        precise float _325 = _278 + _313;
        precise float _326 = _279 + _314;
        precise float _327 = _280 + _315;
        precise float _328 = _281 + _316;
        precise float _329 = _282 + _317;
        precise float _330 = _283 + _318;
        _349 = _319;
        _350 = _322;
        _351 = _325;
        _352 = _328;
        _353 = _320;
        _354 = _323;
        _355 = _326;
        _356 = _329;
        _357 = _321;
        _358 = _324;
        _359 = _327;
        _360 = _330;
    }
    else
    {
        _349 = cbvModelParam._m0[0u].x;
        _350 = cbvModelParam._m0[0u].y;
        _351 = cbvModelParam._m0[0u].z;
        _352 = cbvModelParam._m0[0u].w;
        _353 = cbvModelParam._m0[1u].x;
        _354 = cbvModelParam._m0[1u].y;
        _355 = cbvModelParam._m0[1u].z;
        _356 = cbvModelParam._m0[1u].w;
        _357 = cbvModelParam._m0[2u].x;
        _358 = cbvModelParam._m0[2u].y;
        _359 = cbvModelParam._m0[2u].z;
        _360 = cbvModelParam._m0[2u].w;
    }
    precise float _361 = POSITION.x * _349;
    precise float _362 = POSITION.y * _350;
    precise float _363 = _362 + _361;
    precise float _364 = POSITION.z * _351;
    precise float _365 = _364 + _363;
    precise float _366 = 1.0 * _352;
    precise float _367 = _366 + _365;
    precise float _368 = POSITION.x * _353;
    precise float _369 = POSITION.y * _354;
    precise float _370 = _369 + _368;
    precise float _371 = POSITION.z * _355;
    precise float _372 = _371 + _370;
    precise float _373 = 1.0 * _356;
    precise float _374 = _373 + _372;
    precise float _375 = POSITION.x * _357;
    precise float _376 = POSITION.y * _358;
    precise float _377 = _376 + _375;
    precise float _378 = POSITION.z * _359;
    precise float _379 = _378 + _377;
    precise float _380 = 1.0 * _360;
    precise float _381 = _380 + _379;
    precise float _382 = _103 * 2.0;
    precise float _384 = _104 * 2.0;
    precise float _385 = _382 + (-1.0);
    precise float _387 = 1.0 - _384;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    gl_Position.x = _385;
    gl_Position.y = _387;
    gl_Position.z = 0.0;
    gl_Position.w = 1.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_1.x = _367;
    TEXCOORD_1.y = _374;
    TEXCOORD_1.z = _381;
}


