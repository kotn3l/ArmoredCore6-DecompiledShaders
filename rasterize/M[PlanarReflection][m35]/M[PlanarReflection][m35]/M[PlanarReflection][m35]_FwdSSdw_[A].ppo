#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[46];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 54) uniform texture2D g_ReflectionTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 57) uniform texture2D g_WaterSimulationNormalTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_5;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in vec4 TEXCOORD_8;
layout(location = 7) in float TEXCOORD_11;
layout(location = 7, component = 1) in float TEXCOORD_12;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _3667;
float _3668;
float _3669;
float _3670;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _219 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _220 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _221 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _227 = inversesqrt(dot(vec3(_219, _220, _221), vec3(_219, _220, _221)));
    float _228 = _227 * _219;
    float _229 = _227 * _220;
    float _230 = _227 * _221;
    float _234 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _235 = _234 * NORMAL.x;
    float _236 = _234 * NORMAL.y;
    float _237 = _234 * NORMAL.z;
    float _241 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _249;
    float _250;
    float _251;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _249 = (-0.0) - _235;
        _250 = (-0.0) - _236;
        _251 = (-0.0) - _237;
    }
    else
    {
        _249 = _235;
        _250 = _236;
        _251 = _237;
    }
    float _297 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _307 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _297);
    float _308 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _297);
    float _309 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _297);
    float _324 = cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x;
    vec4 _341 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_2, SS_BumpMap), vec2((((_324 * cbMtdParam._m0[27u].y) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_324 * cbMtdParam._m0[27u].z) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _344 = _341.x;
    float _345 = _341.y;
    float _346 = _341.z;
    float _347 = _341.w;
    float _360 = cbMtdParam._m0[14u].y - cbMtdParam._m0[14u].x;
    float _363 = (sqrt(((_307 * _307) + (_308 * _308)) + (_309 * _309)) - cbMtdParam._m0[14u].x) / (isnan(0.001000000047497451305389404296875) ? _360 : (isnan(_360) ? 0.001000000047497451305389404296875 : max(_360, 0.001000000047497451305389404296875)));
    float _364 = _363 + 0.180000007152557373046875;
    float _366 = _364 * 12.0;
    float _3684 = isnan(0.0) ? _366 : (isnan(_366) ? 0.0 : max(_366, 0.0));
    float _369 = isnan(1.0) ? _3684 : (isnan(_3684) ? 1.0 : min(_3684, 1.0));
    vec4 _381 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _383 = _381.x;
    float _405 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _383)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _383))) - POSITION_1.w;
    float _406 = _405 / ((_369 * 0.0599999986588954925537109375) + 0.0599999986588954925537109375);
    float _3695 = isnan(0.0) ? _406 : (isnan(_406) ? 0.0 : max(_406, 0.0));
    float _407 = isnan(1.0) ? _3695 : (isnan(_3695) ? 1.0 : min(_3695, 1.0));
    float _408 = isnan(0.5) ? _407 : (isnan(_407) ? 0.5 : max(_407, 0.5));
    float _410 = 1.0 - _408;
    float _411 = _364 * 7.0;
    float _3711 = isnan(0.0) ? _411 : (isnan(_411) ? 0.0 : max(_411, 0.0));
    float _413 = isnan(1.0) ? _3711 : (isnan(_3711) ? 1.0 : min(_3711, 1.0));
    float _426 = (_346 * 0.00200000009499490261077880859375) + TEXCOORD.x;
    float _427 = (_346 * 0.00999999977648258209228515625) + TEXCOORD.y;
    vec4 _441 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[25u].w * _324) + _426) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[26u].x * _324) + _427) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _443 = _441.x;
    float _468 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[23u].w * _426) + (cbMtdParam._m0[26u].w * _324)) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[24u].x * _427) + (cbMtdParam._m0[27u].x * _324)) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x + (-0.0500000007450580596923828125);
    float _471 = (isnan(_468) ? _443 : (isnan(_443) ? _468 : max(_443, _468))) - _413;
    float _3727 = isnan(0.0) ? _471 : (isnan(_471) ? 0.0 : max(_471, 0.0));
    float _472 = isnan(1.0) ? _3727 : (isnan(_3727) ? 1.0 : min(_3727, 1.0));
    float _473 = _413 + 0.5;
    float _3738 = isnan(0.0) ? _473 : (isnan(_473) ? 0.0 : max(_473, 0.0));
    float _484 = cbMtdParam._m0[16u].w * _324;
    float _485 = cos(_484);
    float _486 = sin(_484);
    vec4 _510 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((((_486 * cbMtdParam._m0[31u].y) + TEXCOORD.x) + (cbMtdParam._m0[22u].y * _324)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((_485 * cbMtdParam._m0[31u].z) + TEXCOORD.y) + (cbMtdParam._m0[22u].z * _324)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _514 = _510.z;
    vec4 _529 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[21u].w * _324) + TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[22u].x * _324) + TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _533 = _529.z;
    float _536 = (isnan(_533) ? _514 : (isnan(_514) ? _533 : max(_514, _533))) * (isnan(1.0) ? _3738 : (isnan(_3738) ? 1.0 : min(_3738, 1.0)));
    float _3754 = isnan(0.0) ? _536 : (isnan(_536) ? 0.0 : max(_536, 0.0));
    float _537 = isnan(1.0) ? _3754 : (isnan(_3754) ? 1.0 : min(_3754, 1.0));
    float _540 = (_410 - _347) + (isnan(_537) ? _472 : (isnan(_472) ? _537 : max(_472, _537)));
    float _3770 = isnan(0.0) ? _540 : (isnan(_540) ? 0.0 : max(_540, 0.0));
    float _541 = isnan(1.0) ? _3770 : (isnan(_3770) ? 1.0 : min(_3770, 1.0));
    float _542 = _541 * _408;
    float _3781 = isnan(0.0) ? _363 : (isnan(_363) ? 0.0 : max(_363, 0.0));
    float _551 = isnan(1.0) ? _3781 : (isnan(_3781) ? 1.0 : min(_3781, 1.0));
    float _552 = _346 - _551;
    float _3792 = isnan(0.0) ? _552 : (isnan(_552) ? 0.0 : max(_552, 0.0));
    float _553 = isnan(1.0) ? _3792 : (isnan(_3792) ? 1.0 : min(_3792, 1.0));
    vec4 _609 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[23u].y * _324) + (cbMtdParam._m0[30u].w * _486)) + (cbMtdParam._m0[34u].w * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[23u].z * _324) + (cbMtdParam._m0[31u].x * _485)) + (cbMtdParam._m0[35u].x * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _636 = cbMtdParam._m0[38u].x * TEXCOORD_5.x;
    float _695 = ((((((_609.w + (-0.5)) * cbMtdParam._m0[44u].x) + (cbMtdParam._m0[39u].z * (_510.w + (-0.5)))) + (cbMtdParam._m0[40u].y * (_529.w + (-0.5)))) + (((_636 + cbMtdParam._m0[41u].w) * cos(cbMtdParam._m0[13u].y * _324)) * (texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[32u].w * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[33u].x * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) + ((sin(cbMtdParam._m0[13u].x * _324) * (cbMtdParam._m0[41u].x + _636)) * (texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[31u].w * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[32u].x * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) * (1.0 - TEXCOORD_5.y);
    float _722 = 1.0 - _347;
    float _727 = ((isnan(0.550000011920928955078125) ? _722 : (isnan(_722) ? 0.550000011920928955078125 : max(_722, 0.550000011920928955078125))) + (-0.550000011920928955078125)) * cbMtdParam._m0[16u].z;
    float _730 = ((TEXCOORD_5.y * (-0.5)) * _727) + _727;
    float _734 = ((TEXCOORD_5.z * (-0.699999988079071044921875)) * _730) + _730;
    float _744 = (((_695 + ((cbMtdParam._m0[37u].y - (cbMtdParam._m0[37u].y * TEXCOORD_5.y)) * _346)) + ((texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[35u].w * TEXCOORD.x) + (cbMtdParam._m0[22u].w * _324)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[36u].x * TEXCOORD.y) + (cbMtdParam._m0[23u].x * _324)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).w + (-0.5)) * cbMtdParam._m0[44u].w)) + ((sin(cbMtdParam._m0[21u].y * _324) * cbMtdParam._m0[38u].w) * (isnan(0.300000011920928955078125) ? TEXCOORD_5.z : (isnan(TEXCOORD_5.z) ? 0.300000011920928955078125 : max(TEXCOORD_5.z, 0.300000011920928955078125))))) + _734;
    float _747 = (_744 + cbMtdParam._m0[20u].z) * cbMtdParam._m0[20u].w;
    float _3813 = isnan(0.0) ? _747 : (isnan(_747) ? 0.0 : max(_747, 0.0));
    float _748 = isnan(1.0) ? _3813 : (isnan(_3813) ? 1.0 : min(_3813, 1.0));
    float _760 = inversesqrt(dot(vec3(_307, _308, _309), vec3(_307, _308, _309)));
    float _764 = dot(vec4(_760 * _307, _760 * _308, _760 * _309, 0.0), vec4(_249, _250, _251, 0.0));
    float _3824 = isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0));
    float _772 = exp2(log2((1.0 - (isnan(1.0) ? _3824 : (isnan(_3824) ? 1.0 : min(_3824, 1.0)))) * cbMtdParam._m0[12u].z) * cbMtdParam._m0[12u].w);
    float _3835 = isnan(0.0) ? _772 : (isnan(_772) ? 0.0 : max(_772, 0.0));
    float _773 = isnan(1.0) ? _3835 : (isnan(_3835) ? 1.0 : min(_3835, 1.0));
    float _777 = ((_542 + cbMtdParam._m0[9u].x) + (_553 * cbMtdParam._m0[10u].x)) + ((_748 * cbMtdParam._m0[11u].x) * _773);
    float _778 = ((_542 + cbMtdParam._m0[9u].y) + (_553 * cbMtdParam._m0[10u].y)) + ((_748 * cbMtdParam._m0[11u].y) * _773);
    float _779 = ((_542 + cbMtdParam._m0[9u].z) + (_553 * cbMtdParam._m0[10u].z)) + ((_748 * cbMtdParam._m0[11u].z) * _773);
    float _3846 = isnan(0.0) ? _408 : (isnan(_408) ? 0.0 : max(_408, 0.0));
    float _780 = isnan(1.0) ? _3846 : (isnan(_3846) ? 1.0 : min(_3846, 1.0));
    float _3857 = isnan(0.0) ? _410 : (isnan(_410) ? 0.0 : max(_410, 0.0));
    float _790 = isnan(1.0) ? _3857 : (isnan(_3857) ? 1.0 : min(_3857, 1.0));
    float _793 = (_369 * (-0.87999999523162841796875)) * _790;
    float _796 = (((((1.0 - _777) - _780) * _551) + _777) + _790) + _793;
    float _799 = (((((1.0 - _778) - _780) * _551) + _778) + _790) + _793;
    float _802 = (((((1.0 - _779) - _780) * _551) + _779) + _790) + _793;
    float _803 = _346 * 0.01200000010430812835693359375;
    float _825 = (_346 * 0.300000011920928955078125) * texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[35u].y * _324) + _803) + (cbMtdParam._m0[24u].y * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[35u].z * _324) + _803) + (cbMtdParam._m0[24u].z * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z;
    float _3868 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _826 = isnan(1.0) ? _3868 : (isnan(_3868) ? 1.0 : min(_3868, 1.0));
    float _836 = (((1.0 - _796) * TEXCOORD_5.x) * _826) + _796;
    float _837 = (((1.0 - _799) * TEXCOORD_5.x) * _826) + _799;
    float _838 = (((1.0 - _802) * TEXCOORD_5.x) * _826) + _802;
    vec4 _872 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].w * _324) + (cbMtdParam._m0[30u].y * _486)) + (cbMtdParam._m0[29u].y * _426)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[28u].x * _324) + (cbMtdParam._m0[30u].z * _485)) + (cbMtdParam._m0[29u].z * _427)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _875 = _872.y;
    float _882 = 1.0 - (_405 / cbMtdParam._m0[18u].w);
    float _886 = ((_872.x * TEXCOORD_8.x) * cbMtdParam._m0[18u].z) * (isnan(0.0) ? _882 : (isnan(_882) ? 0.0 : max(_882, 0.0)));
    float _892 = _875 * TEXCOORD_8.y;
    float _895 = ((isnan(cbMtdParam._m0[19u].x) ? _892 : (isnan(_892) ? cbMtdParam._m0[19u].x : max(_892, cbMtdParam._m0[19u].x))) - cbMtdParam._m0[19u].x) * cbMtdParam._m0[19u].y;
    float _896 = isnan(_895) ? _886 : (isnan(_886) ? _895 : max(_886, _895));
    float _3894 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
    float _897 = isnan(1.0) ? _3894 : (isnan(_3894) ? 1.0 : min(_3894, 1.0));
    float _904 = (_897 * (1.0 - _836)) + _836;
    float _905 = (_897 * (1.0 - _837)) + _837;
    float _906 = (_897 * (1.0 - _838)) + _838;
    float _941 = exp2(log2(cbMtdParam._m0[15u].w * _722) * cbMtdParam._m0[17u].x);
    float _3905 = isnan(0.0) ? _941 : (isnan(_941) ? 0.0 : max(_941, 0.0));
    float _942 = isnan(1.0) ? _3905 : (isnan(_3905) ? 1.0 : min(_3905, 1.0));
    float _943 = _942 * texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[28u].y * _324) + (cbMtdParam._m0[28u].w * _722)) + (cbMtdParam._m0[29u].w * _426)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[28u].z * _324) + (cbMtdParam._m0[29u].x * _722)) + (cbMtdParam._m0[30u].x * _427)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w)).z;
    float _946 = ((_942 - _943) * cbMtdParam._m0[17u].w) + _943;
    float _950 = _413 * TEXCOORD_8.z;
    float _957 = ((_950 * (1.0 - _904)) * _946) + _904;
    float _958 = ((_950 * (1.0 - _905)) * _946) + _905;
    float _959 = ((_950 * (1.0 - _906)) * _946) + _906;
    float _963 = 1.0 - (_405 / cbMtdParam._m0[18u].x);
    float _969 = (cbMtdParam._m0[18u].y * _875) * (isnan(0.0) ? _963 : (isnan(_963) ? 0.0 : max(_963, 0.0)));
    float _973 = (_969 * (1.0 - _957)) + _957;
    float _974 = (_969 * (1.0 - _958)) + _958;
    float _975 = (_969 * (1.0 - _959)) + _959;
    float _978 = _363 / cbMtdParam._m0[15u].y;
    float _3921 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
    float _981 = (1.0 - (isnan(1.0) ? _3921 : (isnan(_3921) ? 1.0 : min(_3921, 1.0)))) * cbMtdParam._m0[15u].x;
    float _987 = _363 + 0.20000000298023223876953125;
    float _989 = _987 * 9.0;
    float _3932 = isnan(0.0) ? _989 : (isnan(_989) ? 0.0 : max(_989, 0.0));
    float _994 = ((cbMtdParam._m0[13u].w - cbMtdParam._m0[12u].x) * (isnan(1.0) ? _3932 : (isnan(_3932) ? 1.0 : min(_3932, 1.0)))) + cbMtdParam._m0[12u].x;
    float _997 = (_363 + 0.099999986588954925537109375) * 2.5;
    float _3943 = isnan(0.0) ? _997 : (isnan(_997) ? 0.0 : max(_997, 0.0));
    float _1002 = ((cbMtdParam._m0[14u].z - _994) * (isnan(1.0) ? _3943 : (isnan(_3943) ? 1.0 : min(_3943, 1.0)))) + _994;
    float _1003 = _973 + _541;
    float _3954 = isnan(0.0) ? _1003 : (isnan(_1003) ? 0.0 : max(_1003, 0.0));
    float _1008 = ((0.3499999940395355224609375 - _1002) * (isnan(1.0) ? _3954 : (isnan(_3954) ? 1.0 : min(_3954, 1.0)))) + _1002;
    float _1009 = TEXCOORD_5.z * 0.5;
    float _1021 = (_363 + 0.100000001490116119384765625) * 0.89999997615814208984375;
    float _3965 = isnan(0.0) ? _1021 : (isnan(_1021) ? 0.0 : max(_1021, 0.0));
    float _1026 = ((cbMtdParam._m0[17u].y - cbMtdParam._m0[20u].x) * (isnan(1.0) ? _3965 : (isnan(_3965) ? 1.0 : min(_3965, 1.0)))) + cbMtdParam._m0[20u].x;
    float _1031 = (_1026 * (_344 + (-0.5))) + 0.5;
    float _1032 = (_1026 * (_345 + (-0.5))) + 0.5;
    float _3976 = isnan(0.0) ? TEXCOORD_5.y : (isnan(TEXCOORD_5.y) ? 0.0 : max(TEXCOORD_5.y, 0.0));
    float _1033 = isnan(1.0) ? _3976 : (isnan(_3976) ? 1.0 : min(_3976, 1.0));
    vec4 _1063 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[26u].y * TEXCOORD.z) + (cbMtdParam._m0[32u].y * _324)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[26u].z * TEXCOORD.w) + (cbMtdParam._m0[32u].z * _324)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1071 = ((_529.x + (-0.5)) * 0.5) + _510.x;
    float _1072 = ((_529.y + (-0.5)) * 0.5) + _510.y;
    vec4 _1098 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[24u].w * TEXCOORD.x) + (cbMtdParam._m0[25u].y * _324)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[25u].x * TEXCOORD.y) + (cbMtdParam._m0[25u].z * _324)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1107 = _987 * 12.0;
    float _3987 = isnan(0.0) ? _1107 : (isnan(_1107) ? 0.0 : max(_1107, 0.0));
    float _1109 = 1.0 - (isnan(1.0) ? _3987 : (isnan(_3987) ? 1.0 : min(_3987, 1.0)));
    float _1120 = cbMtdParam._m0[33u].w * TEXCOORD.x;
    float _1121 = cbMtdParam._m0[34u].x * TEXCOORD.y;
    vec4 _1134 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((_1120 + (cbMtdParam._m0[33u].y * _324)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_1121 + (cbMtdParam._m0[33u].z * _324)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _1155 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1120 + ((cbMtdParam._m0[27u].y * 0.4000000059604644775390625) * _553)) + (cbMtdParam._m0[34u].y * _324)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1121 + ((cbMtdParam._m0[27u].z * 0.4000000059604644775390625) * _553)) + (cbMtdParam._m0[34u].z * _324)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _1169 = (((0.5 - _1071) * 0.10999999940395355224609375) + _1071) + (((((((_1098.z + (-0.5)) * cbMtdParam._m0[16u].x) * _1109) + (-1.0)) + _1134.x) + _1155.x) * cbMtdParam._m0[15u].z);
    float _1170 = (((0.5 - _1072) * 0.10999999940395355224609375) + _1072) + (((((((_1098.w + (-0.5)) * cbMtdParam._m0[16u].x) * _1109) + (-1.0)) + _1134.y) + _1155.y) * cbMtdParam._m0[15u].z);
    float _1175 = ((_1063.x - _1169) * _363) + _1169;
    float _1176 = ((_1063.y - _1170) * _363) + _1170;
    float _1177 = _363 * 0.5;
    float _3998 = isnan(0.0) ? _1177 : (isnan(_1177) ? 0.0 : max(_1177, 0.0));
    float _1178 = isnan(1.0) ? _3998 : (isnan(_3998) ? 1.0 : min(_3998, 1.0));
    float _1189 = cbMtdParam._m0[17u].z - (cbMtdParam._m0[17u].z * _734);
    float _1196 = cbMtdParam._m0[19u].z - (cbMtdParam._m0[19u].z * TEXCOORD_5.y);
    float _1198 = _1196 - (_1196 * _1178);
    float _1202 = (((((((0.5 - _344) * 0.60000002384185791015625) + _344) - _1031) * _1033) + _1031) + (_1198 * (_609.x + (-0.5)))) + (((_1175 + (-0.5)) + ((0.5 - _1175) * _1178)) * _1189);
    float _1204 = (((((((0.5 - _345) * 0.60000002384185791015625) + _345) - _1032) * _1033) + _1032) + (_1198 * (_609.y + (-0.5)))) + (((_1176 + (-0.5)) + ((0.5 - _1176) * _1178)) * _1189);
    float _1214 = (((_1009 * (0.5 - _1202)) + _1202) * 2.0) + (-1.0);
    float _1215 = (((_1009 * (0.5 - _1204)) + _1204) * 2.0) + (-1.0);
    float _1216 = dot(vec2(_1214, _1215), vec2(_1214, _1215));
    float _4009 = isnan(0.0) ? _1216 : (isnan(_1216) ? 0.0 : max(_1216, 0.0));
    float _1221 = sqrt(1.0 - (isnan(1.0) ? _4009 : (isnan(_4009) ? 1.0 : min(_4009, 1.0))));
    float _1224 = _987 * 6.0;
    float _4020 = isnan(0.0) ? _1224 : (isnan(_1224) ? 0.0 : max(_1224, 0.0));
    float _1227 = cbMtdParam._m0[16u].y * (isnan(1.0) ? _4020 : (isnan(_4020) ? 1.0 : min(_4020, 1.0)));
    float _4031 = isnan(0.0) ? _1227 : (isnan(_1227) ? 0.0 : max(_1227, 0.0));
    float _1228 = isnan(1.0) ? _4031 : (isnan(_4031) ? 1.0 : min(_4031, 1.0));
    float _1231 = ((1.0 - _1228) * _1003) + _1228;
    uint _1245 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1246 = _1245 + 5u;
    float _1257 = (-0.0) - _307;
    float _1258 = (-0.0) - _308;
    float _1259 = (-0.0) - _309;
    float _1263 = inversesqrt(dot(vec3(_1257, _1258, _1259), vec3(_1257, _1258, _1259)));
    float _1267 = dot(vec3(_1263 * _1257, _1263 * _1258, _1263 * _1259), vec3(cbLight._m0[floatBitsToUint(cbInstanceData._m0[_1246]).x * 14u].xyz));
    float _1277 = 0.90999996662139892578125 / exp2(log2(1.091000080108642578125 - (_1267 * 0.60000002384185791015625)) * 1.5);
    float _1290 = ((((0.959999978542327880859375 / exp2(log2((_1267 * 0.4000000059604644775390625) + 1.04100000858306884765625) * 1.5)) - _1277) * 0.5) + _1277) * 0.079577468335628509521484375;
    float _1294 = fma(_1221, _249, fma(_1215, _241 * TANGENT.x, _1214 * _228));
    float _1297 = fma(_1221, _250, fma(_1215, _241 * TANGENT.y, _1214 * _229));
    float _1300 = fma(_1221, _251, fma(_1215, _241 * TANGENT.z, _1214 * _230));
    float _1304 = inversesqrt(dot(vec3(_1294, _1297, _1300), vec3(_1294, _1297, _1300)));
    float _1305 = _1304 * _1294;
    float _1306 = _1304 * _1297;
    float _1307 = _1304 * _1300;
    float _4042 = isnan(0.0) ? _981 : (isnan(_981) ? 0.0 : max(_981, 0.0));
    float _4053 = isnan(0.0) ? _1008 : (isnan(_1008) ? 0.0 : max(_1008, 0.0));
    float _1309 = isnan(1.0) ? _4053 : (isnan(_4053) ? 1.0 : min(_4053, 1.0));
    float _4064 = isnan(0.0) ? _973 : (isnan(_973) ? 0.0 : max(_973, 0.0));
    float _4075 = isnan(0.0) ? _974 : (isnan(_974) ? 0.0 : max(_974, 0.0));
    float _4086 = isnan(0.0) ? _975 : (isnan(_975) ? 0.0 : max(_975, 0.0));
    float _1324 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1364 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1373 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1364);
    float _1374 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1364);
    float _1375 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1364);
    float _1379 = inversesqrt(dot(vec3(_1373, _1374, _1375), vec3(_1373, _1374, _1375)));
    float _1380 = _1373 * _1379;
    float _1381 = _1374 * _1379;
    float _1382 = _1375 * _1379;
    vec4 _1387 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1389 = _1387.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1585 = sqrt(((_1373 * _1373) + (_1374 * _1374)) + (_1375 * _1375));
        float _1591 = (cbMatDynParam._m0[5u].x * _1585) + cbMatDynParam._m0[5u].y;
        float _4097 = isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0));
        float _1592 = isnan(1.0) ? _4097 : (isnan(_4097) ? 1.0 : min(_4097, 1.0));
        float _1596 = (cbMatDynParam._m0[5u].z * _1585) + cbMatDynParam._m0[5u].w;
        float _4108 = isnan(0.0) ? _1596 : (isnan(_1596) ? 0.0 : max(_1596, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4108 : (isnan(_4108) ? 1.0 : min(_4108, 1.0))) - _1592)) + _1592) < ((_1389 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1400 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1401 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _1403 = texture(sampler2D(g_WaterSimulationNormalTexture, SS_ClampLinear), vec2(TEXCOORD_11, TEXCOORD_12));
    float _1412 = (_1403.x * 2.0) + (-1.0);
    float _1413 = (_1403.y * 2.0) + (-1.0);
    float _1414 = (_1403.z * 2.0) + (-1.0);
    float _1418 = inversesqrt(dot(vec3(_1412, _1413, _1414), vec3(_1412, _1413, _1414)));
    float _1429 = ((TEXCOORD_12 >= 1.0) || ((TEXCOORD_12 <= 0.0) || ((TEXCOORD_11 <= 0.0) || (TEXCOORD_11 >= 1.0)))) ? 0.0 : _1403.w;
    float _1436 = (((_1412 * _1418) - _1305) * _1429) + _1305;
    float _1437 = (((_1413 * _1418) - _1306) * _1429) + _1306;
    float _1438 = (((_1414 * _1418) - _1307) * _1429) + _1307;
    float _1457 = fma(_1438, cbSceneParam._m0[5u].z, fma(_1437, cbSceneParam._m0[5u].y, _1436 * cbSceneParam._m0[5u].x));
    float _1460 = fma(_1438, cbSceneParam._m0[6u].z, fma(_1437, cbSceneParam._m0[6u].y, _1436 * cbSceneParam._m0[6u].x));
    float _1463 = fma(_1438, cbSceneParam._m0[7u].z, fma(_1437, cbSceneParam._m0[7u].y, _1436 * cbSceneParam._m0[7u].x));
    uint _1476 = _1245 + 9u;
    uint _1477 = _1476 + uint(cbMatDynParam._m0[0u].w);
    float _1483 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4064 : (isnan(_4064) ? 1.0 : min(_4064, 1.0)))) * cbInstanceData._m0[_1477].x;
    float _1484 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4075 : (isnan(_4075) ? 1.0 : min(_4075, 1.0)))) * cbInstanceData._m0[_1477].y;
    float _1485 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4086 : (isnan(_4086) ? 1.0 : min(_4086, 1.0)))) * cbInstanceData._m0[_1477].z;
    float _4119 = isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0));
    float _1486 = isnan(1.0) ? _4119 : (isnan(_4119) ? 1.0 : min(_4119, 1.0));
    float _4130 = isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0));
    float _1487 = isnan(1.0) ? _4130 : (isnan(_4130) ? 1.0 : min(_4130, 1.0));
    float _4141 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
    float _1488 = isnan(1.0) ? _4141 : (isnan(_4141) ? 1.0 : min(_4141, 1.0));
    vec4 _1497 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1400, cbSceneParam._m0[86u].y * _1401));
    float _1500 = _1497.x * TEXCOORD_5.w;
    float _1504 = abs(dot(vec3(_1380, _1381, _1382), vec3(_1436, _1437, _1438)));
    float _4152 = isnan(0.0) ? _1504 : (isnan(_1504) ? 0.0 : max(_1504, 0.0));
    float _1511 = exp2(log2(1.0 - (isnan(1.0) ? _4152 : (isnan(_4152) ? 1.0 : min(_4152, 1.0)))) * 5.0) * 0.959999978542327880859375;
    float _1512 = _1511 + 0.039999999105930328369140625;
    float _1516 = 10.0 / (_1324 + 10.0);
    vec4 _1531 = texture(sampler2D(g_ReflectionTexture, SS_ClampLinear), vec2(((_1516 * cbMtdParam._m0[21u].z) * dot(vec3(_1436, _1437, _1438), vec3(1.0, 0.0, 0.0))) + (_1400 / cbSceneParam._m0[86u].x), 1.0 - (_1401 / cbSceneParam._m0[86u].y)));
    float _1567 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1571 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1575 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1899;
    float _1900;
    float _1901;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1628 = fma(_1575, cbModelParam._m0[26u].z, fma(_1571, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1567));
        float _1632 = fma(_1575, cbModelParam._m0[27u].z, fma(_1571, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1567));
        float _1636 = fma(_1575, cbModelParam._m0[28u].z, fma(_1571, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1567));
        float _1658 = _1567 + _1436;
        float _1659 = _1571 + _1437;
        float _1660 = _1575 + _1438;
        float _1670 = fma(_1660, cbModelParam._m0[26u].z, fma(_1659, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1658)) - _1628;
        float _1671 = fma(_1660, cbModelParam._m0[27u].z, fma(_1659, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1658)) - _1632;
        float _1672 = fma(_1660, cbModelParam._m0[28u].z, fma(_1659, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1658)) - _1636;
        float _1676 = inversesqrt(dot(vec3(_1670, _1671, _1672), vec3(_1670, _1671, _1672)));
        float _1688 = ((_1676 * _1670) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1628 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1689 = ((_1676 * _1671) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1632 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1690 = ((_1676 * _1672) / cbModelParam._m0[34u].z) + ((((((_1636 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1693 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1688, _1689, _1690), 0.0);
        vec4 _1700 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1688, _1689, _1690), 0.0);
        vec4 _1707 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1688, _1689, _1690), 0.0);
        vec4 _1714 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1688, _1689, _1690), 0.0);
        float _1727 = exp2((_1693.w + (-0.5)) * 20.0) * 2.0;
        float _1734 = exp2((_1700.w + (-0.5)) * 20.0) * 2.0;
        float _1741 = exp2((_1707.w + (-0.5)) * 20.0) * 2.0;
        float _1748 = exp2((_1714.w + (-0.5)) * 20.0) * 2.0;
        float _1749 = _1748 * (_1714.x + (-0.5));
        float _1750 = _1748 * (_1714.y + (-0.5));
        float _1751 = _1748 * (_1714.z + (-0.5));
        float _1752 = isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0));
        float _1753 = isnan(0.0) ? _1750 : (isnan(_1750) ? 0.0 : max(_1750, 0.0));
        float _1754 = isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0));
        float _1756 = ((_1693.x + (-0.5)) * 0.5) * _1727;
        float _1758 = ((_1700.x + (-0.5)) * 0.5) * _1734;
        float _1760 = ((_1707.x + (-0.5)) * 0.5) * _1741;
        float _1761 = dot(vec3(_1756, _1758, _1760), vec3(_1756, _1758, _1760));
        float _1766 = (_1761 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1761);
        float _1775 = (dot(vec3(_1436, _1437, _1438), vec3(_1766 * _1756, _1766 * _1758, _1766 * _1760)) + 1.0) * 0.5;
        float _4178 = isnan(0.0) ? _1775 : (isnan(_1775) ? 0.0 : max(_1775, 0.0));
        float _1785 = sqrt(((_1758 * _1758) + (_1756 * _1756)) + (_1760 * _1760)) / (_1752 + 9.9999997473787516355514526367188e-06);
        float _4189 = isnan(0.0) ? _1785 : (isnan(_1785) ? 0.0 : max(_1785, 0.0));
        float _1786 = isnan(1.0) ? _4189 : (isnan(_4189) ? 1.0 : min(_4189, 1.0));
        float _1787 = _1786 * 2.0;
        float _1791 = (1.0 - _1786) / (_1786 + 1.0);
        float _4200 = isnan(0.0) ? _1791 : (isnan(_1791) ? 0.0 : max(_1791, 0.0));
        float _1792 = isnan(1.0) ? _4200 : (isnan(_4200) ? 1.0 : min(_4200, 1.0));
        float _1801 = ((((1.0 - _1792) * (_1787 + 2.0)) * exp2(log2(isnan(1.0) ? _4178 : (isnan(_4178) ? 1.0 : min(_4178, 1.0))) * (_1787 + 1.0))) + _1792) * _1752;
        float _1803 = ((_1693.y + (-0.5)) * 0.5) * _1727;
        float _1805 = ((_1700.y + (-0.5)) * 0.5) * _1734;
        float _1807 = ((_1707.y + (-0.5)) * 0.5) * _1741;
        float _1808 = dot(vec3(_1803, _1805, _1807), vec3(_1803, _1805, _1807));
        float _1813 = (_1808 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1808);
        float _1821 = (dot(vec3(_1436, _1437, _1438), vec3(_1813 * _1803, _1813 * _1805, _1813 * _1807)) + 1.0) * 0.5;
        float _4211 = isnan(0.0) ? _1821 : (isnan(_1821) ? 0.0 : max(_1821, 0.0));
        float _1830 = sqrt(((_1805 * _1805) + (_1803 * _1803)) + (_1807 * _1807)) / (_1753 + 9.9999997473787516355514526367188e-06);
        float _4222 = isnan(0.0) ? _1830 : (isnan(_1830) ? 0.0 : max(_1830, 0.0));
        float _1831 = isnan(1.0) ? _4222 : (isnan(_4222) ? 1.0 : min(_4222, 1.0));
        float _1832 = _1831 * 2.0;
        float _1836 = (1.0 - _1831) / (_1831 + 1.0);
        float _4233 = isnan(0.0) ? _1836 : (isnan(_1836) ? 0.0 : max(_1836, 0.0));
        float _1837 = isnan(1.0) ? _4233 : (isnan(_4233) ? 1.0 : min(_4233, 1.0));
        float _1846 = ((((1.0 - _1837) * (_1832 + 2.0)) * exp2(log2(isnan(1.0) ? _4211 : (isnan(_4211) ? 1.0 : min(_4211, 1.0))) * (_1832 + 1.0))) + _1837) * _1753;
        float _1848 = ((_1693.z + (-0.5)) * 0.5) * _1727;
        float _1850 = ((_1700.z + (-0.5)) * 0.5) * _1734;
        float _1852 = ((_1707.z + (-0.5)) * 0.5) * _1741;
        float _1853 = dot(vec3(_1848, _1850, _1852), vec3(_1848, _1850, _1852));
        float _1858 = (_1853 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1853);
        float _1866 = (dot(vec3(_1436, _1437, _1438), vec3(_1858 * _1848, _1858 * _1850, _1858 * _1852)) + 1.0) * 0.5;
        float _4244 = isnan(0.0) ? _1866 : (isnan(_1866) ? 0.0 : max(_1866, 0.0));
        float _1875 = sqrt(((_1850 * _1850) + (_1848 * _1848)) + (_1852 * _1852)) / (_1754 + 9.9999997473787516355514526367188e-06);
        float _4255 = isnan(0.0) ? _1875 : (isnan(_1875) ? 0.0 : max(_1875, 0.0));
        float _1876 = isnan(1.0) ? _4255 : (isnan(_4255) ? 1.0 : min(_4255, 1.0));
        float _1877 = _1876 * 2.0;
        float _1881 = (1.0 - _1876) / (_1876 + 1.0);
        float _4266 = isnan(0.0) ? _1881 : (isnan(_1881) ? 0.0 : max(_1881, 0.0));
        float _1882 = isnan(1.0) ? _4266 : (isnan(_4266) ? 1.0 : min(_4266, 1.0));
        float _1891 = ((((1.0 - _1882) * (_1877 + 2.0)) * exp2(log2(isnan(1.0) ? _4244 : (isnan(_4244) ? 1.0 : min(_4244, 1.0))) * (_1877 + 1.0))) + _1882) * _1754;
        _1899 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1801 : (isnan(_1801) ? 0.0 : max(_1801, 0.0)));
        _1900 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1846 : (isnan(_1846) ? 0.0 : max(_1846, 0.0)));
        _1901 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1891 : (isnan(_1891) ? 0.0 : max(_1891, 0.0)));
    }
    else
    {
        _1899 = 0.0;
        _1900 = 0.0;
        _1901 = 0.0;
    }
    float _2194;
    float _2195;
    float _2196;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1927 = fma(_1575, cbModelParam._m0[30u].z, fma(_1571, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1567));
        float _1931 = fma(_1575, cbModelParam._m0[31u].z, fma(_1571, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1567));
        float _1935 = fma(_1575, cbModelParam._m0[32u].z, fma(_1571, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1567));
        float _1957 = _1567 + _1436;
        float _1958 = _1571 + _1437;
        float _1959 = _1575 + _1438;
        float _1969 = fma(_1959, cbModelParam._m0[30u].z, fma(_1958, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1957)) - _1927;
        float _1970 = fma(_1959, cbModelParam._m0[31u].z, fma(_1958, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1957)) - _1931;
        float _1971 = fma(_1959, cbModelParam._m0[32u].z, fma(_1958, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1957)) - _1935;
        float _1975 = inversesqrt(dot(vec3(_1969, _1970, _1971), vec3(_1969, _1970, _1971)));
        float _1987 = ((_1975 * _1969) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1927 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1988 = ((_1975 * _1970) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1931 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1989 = ((_1975 * _1971) / cbModelParam._m0[35u].z) + ((((((_1935 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1991 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1987, _1988, _1989), 0.0);
        vec4 _1998 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1987, _1988, _1989), 0.0);
        vec4 _2005 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1987, _1988, _1989), 0.0);
        vec4 _2012 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1987, _1988, _1989), 0.0);
        float _2024 = exp2((_1991.w + (-0.5)) * 20.0) * 2.0;
        float _2031 = exp2((_1998.w + (-0.5)) * 20.0) * 2.0;
        float _2038 = exp2((_2005.w + (-0.5)) * 20.0) * 2.0;
        float _2045 = exp2((_2012.w + (-0.5)) * 20.0) * 2.0;
        float _2046 = _2045 * (_2012.x + (-0.5));
        float _2047 = _2045 * (_2012.y + (-0.5));
        float _2048 = _2045 * (_2012.z + (-0.5));
        float _2049 = isnan(0.0) ? _2046 : (isnan(_2046) ? 0.0 : max(_2046, 0.0));
        float _2050 = isnan(0.0) ? _2047 : (isnan(_2047) ? 0.0 : max(_2047, 0.0));
        float _2051 = isnan(0.0) ? _2048 : (isnan(_2048) ? 0.0 : max(_2048, 0.0));
        float _2053 = ((_1991.x + (-0.5)) * 0.5) * _2024;
        float _2055 = ((_1998.x + (-0.5)) * 0.5) * _2031;
        float _2057 = ((_2005.x + (-0.5)) * 0.5) * _2038;
        float _2058 = dot(vec3(_2053, _2055, _2057), vec3(_2053, _2055, _2057));
        float _2063 = (_2058 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2058);
        float _2071 = (dot(vec3(_1436, _1437, _1438), vec3(_2063 * _2053, _2063 * _2055, _2063 * _2057)) + 1.0) * 0.5;
        float _4307 = isnan(0.0) ? _2071 : (isnan(_2071) ? 0.0 : max(_2071, 0.0));
        float _2080 = sqrt(((_2055 * _2055) + (_2053 * _2053)) + (_2057 * _2057)) / (_2049 + 9.9999997473787516355514526367188e-06);
        float _4318 = isnan(0.0) ? _2080 : (isnan(_2080) ? 0.0 : max(_2080, 0.0));
        float _2081 = isnan(1.0) ? _4318 : (isnan(_4318) ? 1.0 : min(_4318, 1.0));
        float _2082 = _2081 * 2.0;
        float _2086 = (1.0 - _2081) / (_2081 + 1.0);
        float _4329 = isnan(0.0) ? _2086 : (isnan(_2086) ? 0.0 : max(_2086, 0.0));
        float _2087 = isnan(1.0) ? _4329 : (isnan(_4329) ? 1.0 : min(_4329, 1.0));
        float _2096 = ((((1.0 - _2087) * (_2082 + 2.0)) * exp2(log2(isnan(1.0) ? _4307 : (isnan(_4307) ? 1.0 : min(_4307, 1.0))) * (_2082 + 1.0))) + _2087) * _2049;
        float _2098 = ((_1991.y + (-0.5)) * 0.5) * _2024;
        float _2100 = ((_1998.y + (-0.5)) * 0.5) * _2031;
        float _2102 = ((_2005.y + (-0.5)) * 0.5) * _2038;
        float _2103 = dot(vec3(_2098, _2100, _2102), vec3(_2098, _2100, _2102));
        float _2108 = (_2103 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2103);
        float _2116 = (dot(vec3(_1436, _1437, _1438), vec3(_2108 * _2098, _2108 * _2100, _2108 * _2102)) + 1.0) * 0.5;
        float _4340 = isnan(0.0) ? _2116 : (isnan(_2116) ? 0.0 : max(_2116, 0.0));
        float _2125 = sqrt(((_2100 * _2100) + (_2098 * _2098)) + (_2102 * _2102)) / (_2050 + 9.9999997473787516355514526367188e-06);
        float _4351 = isnan(0.0) ? _2125 : (isnan(_2125) ? 0.0 : max(_2125, 0.0));
        float _2126 = isnan(1.0) ? _4351 : (isnan(_4351) ? 1.0 : min(_4351, 1.0));
        float _2127 = _2126 * 2.0;
        float _2131 = (1.0 - _2126) / (_2126 + 1.0);
        float _4362 = isnan(0.0) ? _2131 : (isnan(_2131) ? 0.0 : max(_2131, 0.0));
        float _2132 = isnan(1.0) ? _4362 : (isnan(_4362) ? 1.0 : min(_4362, 1.0));
        float _2141 = ((((1.0 - _2132) * (_2127 + 2.0)) * exp2(log2(isnan(1.0) ? _4340 : (isnan(_4340) ? 1.0 : min(_4340, 1.0))) * (_2127 + 1.0))) + _2132) * _2050;
        float _2143 = ((_1991.z + (-0.5)) * 0.5) * _2024;
        float _2145 = ((_1998.z + (-0.5)) * 0.5) * _2031;
        float _2147 = ((_2005.z + (-0.5)) * 0.5) * _2038;
        float _2148 = dot(vec3(_2143, _2145, _2147), vec3(_2143, _2145, _2147));
        float _2153 = (_2148 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2148);
        float _2161 = (dot(vec3(_1436, _1437, _1438), vec3(_2153 * _2143, _2153 * _2145, _2153 * _2147)) + 1.0) * 0.5;
        float _4373 = isnan(0.0) ? _2161 : (isnan(_2161) ? 0.0 : max(_2161, 0.0));
        float _2170 = sqrt(((_2145 * _2145) + (_2143 * _2143)) + (_2147 * _2147)) / (_2051 + 9.9999997473787516355514526367188e-06);
        float _4384 = isnan(0.0) ? _2170 : (isnan(_2170) ? 0.0 : max(_2170, 0.0));
        float _2171 = isnan(1.0) ? _4384 : (isnan(_4384) ? 1.0 : min(_4384, 1.0));
        float _2172 = _2171 * 2.0;
        float _2176 = (1.0 - _2171) / (_2171 + 1.0);
        float _4395 = isnan(0.0) ? _2176 : (isnan(_2176) ? 0.0 : max(_2176, 0.0));
        float _2177 = isnan(1.0) ? _4395 : (isnan(_4395) ? 1.0 : min(_4395, 1.0));
        float _2186 = ((((1.0 - _2177) * (_2172 + 2.0)) * exp2(log2(isnan(1.0) ? _4373 : (isnan(_4373) ? 1.0 : min(_4373, 1.0))) * (_2172 + 1.0))) + _2177) * _2051;
        _2194 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2096 : (isnan(_2096) ? 0.0 : max(_2096, 0.0)));
        _2195 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2141 : (isnan(_2141) ? 0.0 : max(_2141, 0.0)));
        _2196 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2186 : (isnan(_2186) ? 0.0 : max(_2186, 0.0)));
    }
    else
    {
        _2194 = 0.0;
        _2195 = 0.0;
        _2196 = 0.0;
    }
    float _2206 = (cbModelParam._m0[1u].x * (_2194 - _1899)) + _1899;
    float _2207 = (cbModelParam._m0[1u].x * (_2195 - _1900)) + _1900;
    float _2208 = (cbModelParam._m0[1u].x * (_2196 - _1901)) + _1901;
    float _2229 = fma(_2208, cbSceneParam._m0[89u].z, fma(_2207, cbSceneParam._m0[89u].y, _2206 * cbSceneParam._m0[89u].x));
    float _2232 = fma(_2208, cbSceneParam._m0[90u].z, fma(_2207, cbSceneParam._m0[90u].y, _2206 * cbSceneParam._m0[90u].x));
    float _2235 = fma(_2208, cbSceneParam._m0[91u].z, fma(_2207, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2206));
    float _2239 = 0.959999978542327880859375 - _1511;
    float _2240 = _2239 * _1500;
    vec4 _2245 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1400, _1401));
    float _2247 = _2245.w;
    float _2259 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2247);
    float _2260 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2247);
    float _2261 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2247);
    uvec4 _2264 = floatBitsToUint(cbInstanceData._m0[_1246]);
    uint _2266 = _2264.x * 14u;
    float _2273 = (cbLight._m0[_2266 + 13u].x * (_1500 + (-1.0))) + 1.0;
    uint _2274 = _2266 + 4u;
    float _2283 = isnan(1.0) ? _2273 : (isnan(_2273) ? 1.0 : min(_2273, 1.0));
    float _2292 = dot(vec3(cbLight._m0[_2266].xyz), vec3(_1436, _1437, _1438));
    float _4441 = isnan(0.0) ? _2292 : (isnan(_2292) ? 0.0 : max(_2292, 0.0));
    float _2296 = (isnan(1.0) ? _4441 : (isnan(_4441) ? 1.0 : min(_4441, 1.0))) * 0.3183098733425140380859375;
    float _2298 = ((cbLight._m0[_2274].x * _2259) * _2283) * _2296;
    float _2299 = ((cbLight._m0[_2274].y * _2260) * _2283) * _2296;
    float _2300 = ((cbLight._m0[_2274].z * _2261) * _2283) * _2296;
    uint _2302 = _2266 + 8u;
    float _2315 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2266].w)) * _1309) * 0.949999988079071044921875);
    float _2316 = _2315 * _2315;
    float _2317 = cbLight._m0[_2266].x + _1380;
    float _2318 = cbLight._m0[_2266].y + _1381;
    float _2319 = cbLight._m0[_2266].z + _1382;
    float _2323 = inversesqrt(dot(vec3(_2317, _2318, _2319), vec3(_2317, _2318, _2319)));
    float _2324 = _2323 * _2317;
    float _2325 = _2323 * _2318;
    float _2326 = _2323 * _2319;
    float _2327 = dot(vec3(_1436, _1437, _1438), vec3(cbLight._m0[_2266].xyz));
    float _4452 = isnan(0.0) ? _2327 : (isnan(_2327) ? 0.0 : max(_2327, 0.0));
    float _2330 = isnan(1.0) ? _4452 : (isnan(_4452) ? 1.0 : min(_4452, 1.0));
    float _2331 = dot(vec3(_1436, _1437, _1438), vec3(_1380, _1381, _1382));
    float _4463 = isnan(0.0) ? _2331 : (isnan(_2331) ? 0.0 : max(_2331, 0.0));
    float _2334 = isnan(1.0) ? _4463 : (isnan(_4463) ? 1.0 : min(_4463, 1.0));
    float _2335 = dot(vec3(_1436, _1437, _1438), vec3(_2324, _2325, _2326));
    float _4474 = isnan(0.0) ? _2335 : (isnan(_2335) ? 0.0 : max(_2335, 0.0));
    float _2338 = isnan(1.0) ? _4474 : (isnan(_4474) ? 1.0 : min(_4474, 1.0));
    float _2339 = dot(vec3(cbLight._m0[_2266].xyz), vec3(_2324, _2325, _2326));
    float _4485 = isnan(0.0) ? _2339 : (isnan(_2339) ? 0.0 : max(_2339, 0.0));
    float _2343 = _2316 * _2316;
    float _2347 = ((_2338 * _2338) * (_2343 + (-1.0))) + 1.0;
    float _2357 = (exp2(log2(1.0 - (isnan(1.0) ? _4485 : (isnan(_4485) ? 1.0 : min(_4485, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2358 = 1.0 - _2316;
    float _2369 = (0.5 / (((_2334 * ((_2330 * _2358) + _2316)) + 9.9999999392252902907785028219223e-09) + (((_2334 * _2358) + _2316) * _2330))) * _2330;
    float _4496 = isnan(0.0) ? _2369 : (isnan(_2369) ? 0.0 : max(_2369, 0.0));
    float _2371 = (isnan(1.0) ? _4496 : (isnan(_4496) ? 1.0 : min(_4496, 1.0))) * (_2343 / ((_2347 * _2347) * 3.141590118408203125));
    float _2375 = (((cbLight._m0[_2302].x * _2259) * _2357) * _2371) * _2283;
    float _2379 = (((cbLight._m0[_2302].y * _2260) * _2357) * _2371) * _2283;
    float _2383 = (((cbLight._m0[_2302].z * _2261) * _2357) * _2371) * _2283;
    float _2487;
    float _2489;
    float _2491;
    float _2493;
    float _2495;
    float _2497;
    if (_2264.y == 0u)
    {
        float _2428 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2429 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2428;
        float _2430 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2428;
        float _2431 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2428;
        uvec4 _2443 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2444 = _2443.x;
        uint _2455 = uint((float(_2443.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1401) / _2444))) + floor(float(uint(cbSceneParam._m0[85u].x * _1400) / _2444)));
        float _2465 = (log2(_2431 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2466 = isnan(0.0) ? _2465 : (isnan(_2465) ? 0.0 : max(_2465, 0.0));
        uint _2469 = uint(isnan(14.0) ? _2466 : (isnan(_2466) ? 14.0 : min(_2466, 14.0)));
        uvec4 _2474 = texelFetch(g_lightClusterGridBuffer, int(((_2469 << 2u) + (_2455 << 6u)) >> 2u));
        uint _2475 = _2474.x;
        uint _2476 = _2443.z;
        float _2612;
        float _2614;
        float _2616;
        float _2618;
        float _2620;
        float _2622;
        if (((((1u << ((_2476 >> 4u) & 15u)) + 4294967295u) & _2475) == 0u) || ((_2476 & 240u) == 0u))
        {
            _2612 = 0.0;
            _2614 = 0.0;
            _2616 = 0.0;
            _2618 = 0.0;
            _2620 = 0.0;
            _2622 = 0.0;
        }
        else
        {
            float _2613;
            float _2615;
            float _2617;
            float _2619;
            float _2621;
            float _2623;
            float _2816 = 0.0;
            float _2817 = 0.0;
            float _2818 = 0.0;
            float _2819 = 0.0;
            float _2820 = 0.0;
            float _2821 = 0.0;
            uint _2822 = 0u;
            uint _2831;
            bool _2832;
            for (;;)
            {
                _2831 = texelFetch(g_lightClassification, int((((_2469 << 5u) + (_2455 << 9u)) + (_2822 << 2u)) >> 2u)).x;
                _2832 = _2831 == 0u;
                float frontier_phi_22_pred;
                float frontier_phi_22_pred_1;
                float frontier_phi_22_pred_2;
                float frontier_phi_22_pred_3;
                float frontier_phi_22_pred_4;
                float frontier_phi_22_pred_5;
                if (_2832)
                {
                    frontier_phi_22_pred = _2816;
                    frontier_phi_22_pred_1 = _2821;
                    frontier_phi_22_pred_2 = _2820;
                    frontier_phi_22_pred_3 = _2819;
                    frontier_phi_22_pred_4 = _2818;
                    frontier_phi_22_pred_5 = _2817;
                }
                else
                {
                    float _3050;
                    float _3051;
                    float _3052;
                    float _3053;
                    float _3054;
                    float _3055;
                    uint _3056;
                    _3050 = _2816;
                    _3051 = _2817;
                    _3052 = _2818;
                    _3053 = _2819;
                    _3054 = _2820;
                    _3055 = _2821;
                    _3056 = _2831;
                    float _2965;
                    float _2966;
                    float _2967;
                    float _2968;
                    float _2969;
                    float _2970;
                    for (;;)
                    {
                        uint _3060 = uint(findLSB(_3056)) + (_2822 << 5u);
                        uint _3057 = (_3056 + 4294967295u) & _3056;
                        uint _3062 = _3060 * 48u;
                        vec4 _3076 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3062)).x, texelFetch(g_PointLightRenderingBuffer, int(_3062 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3062 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3062 + 3u)).x));
                        uint _3082 = (_3060 * 48u) + 4u;
                        vec4 _3095 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3082)).x, texelFetch(g_PointLightRenderingBuffer, int(_3082 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3082 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3082 + 3u)).x));
                        uint _3101 = (_3060 * 48u) + 8u;
                        vec3 _3112 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3101)).x, texelFetch(g_PointLightRenderingBuffer, int(_3101 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3101 + 2u)).x));
                        float _3116 = _3076.x - _2429;
                        float _3117 = _3076.y - _2430;
                        float _3118 = _3076.z - _2431;
                        float _3119 = dot(vec3(_3116, _3117, _3118), vec3(_3116, _3117, _3118));
                        float _3122 = inversesqrt(_3119);
                        float _3123 = _3122 * _3116;
                        float _3124 = _3122 * _3117;
                        float _3125 = _3122 * _3118;
                        float _3126 = dot(vec3(_1457, _1460, _1463), vec3(_3123, _3124, _3125));
                        float _3131 = 1.0 - (_3119 * _3076.w);
                        float _4517 = isnan(0.0) ? _3131 : (isnan(_3131) ? 0.0 : max(_3131, 0.0));
                        float _3132 = isnan(1.0) ? _4517 : (isnan(_4517) ? 1.0 : min(_4517, 1.0));
                        float _3133 = sqrt(_3119) * _3095.w;
                        float _3136 = 1.39999997615814208984375 / (_3133 + 1.39999997615814208984375);
                        float _3137 = _3136 * _3136;
                        float _3140 = ((1.0 - _3137) * _3126) + _3137;
                        float _3143 = _3133 * _3133;
                        float _3147 = ((isnan(0.0) ? _3140 : (isnan(_3140) ? 0.0 : max(_3140, 0.0))) * _3132) / ((_3143 * 0.699999988079071044921875) + 1.0);
                        float _3151 = (-0.0) - _2429;
                        float _3152 = (-0.0) - _2430;
                        float _3153 = (-0.0) - _2431;
                        float _3157 = inversesqrt(dot(vec3(_3151, _3152, _3153), vec3(_3151, _3152, _3153)));
                        float _3158 = _3157 * _3151;
                        float _3159 = _3157 * _3152;
                        float _3160 = _3157 * _3153;
                        float _3168 = exp2(log2(1.0 / ((_3143 * 3.5) + 5.0)) * 0.25);
                        float _3170 = 1.0 - sqrt(_1309);
                        float _3177 = sqrt(1.0 - ((1.0 - (_3170 * _3170)) * (1.0 - (_3168 * _3168))));
                        float _3178 = _3177 * _3177;
                        float _3179 = _3178 * _3178;
                        float _3180 = _3158 + _3123;
                        float _3181 = _3159 + _3124;
                        float _3182 = _3160 + _3125;
                        float _3186 = inversesqrt(dot(vec3(_3180, _3181, _3182), vec3(_3180, _3181, _3182)));
                        float _3190 = dot(vec3(_1457, _1460, _1463), vec3(_3158, _3159, _3160));
                        float _4533 = isnan(0.0) ? _3190 : (isnan(_3190) ? 0.0 : max(_3190, 0.0));
                        float _3193 = isnan(1.0) ? _4533 : (isnan(_4533) ? 1.0 : min(_4533, 1.0));
                        float _3194 = dot(vec3(_1457, _1460, _1463), vec3(_3186 * _3180, _3186 * _3181, _3186 * _3182));
                        float _4544 = isnan(0.0) ? _3194 : (isnan(_3194) ? 0.0 : max(_3194, 0.0));
                        float _3197 = isnan(1.0) ? _4544 : (isnan(_4544) ? 1.0 : min(_4544, 1.0));
                        float _3201 = ((_3197 * _3197) * (_3179 + (-1.0))) + 1.0;
                        float _3202 = _3136 * _3178;
                        float _3203 = _3202 * _3202;
                        float _3206 = ((1.0 - _3203) * _3126) + _3203;
                        float _4555 = isnan(0.0) ? _3206 : (isnan(_3206) ? 0.0 : max(_3206, 0.0));
                        float _3207 = isnan(1.0) ? _4555 : (isnan(_4555) ? 1.0 : min(_4555, 1.0));
                        float _3208 = 1.0 - _3178;
                        float _3218 = (0.5 / (((_3207 * ((_3193 * _3208) + _3178)) + 9.9999999392252902907785028219223e-09) + (((_3207 * _3208) + _3178) * _3193))) * _3207;
                        float _4566 = isnan(0.0) ? _3218 : (isnan(_3218) ? 0.0 : max(_3218, 0.0));
                        float _3229 = (((_3179 * 3.1415927410125732421875) * (isnan(1.0) ? _4566 : (isnan(_4566) ? 1.0 : min(_4566, 1.0)))) / ((_3201 * _3201) * ((_3143 * 2.1991131305694580078125) + 3.141590118408203125))) * _3132;
                        _2968 = (_3147 * _3095.x) + _3053;
                        _2969 = (_3147 * _3095.y) + _3054;
                        _2970 = (_3147 * _3095.z) + _3055;
                        _2965 = (_3229 * _3112.x) + _3050;
                        _2966 = (_3229 * _3112.y) + _3051;
                        _2967 = (_3229 * _3112.z) + _3052;
                        if (_3057 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3050 = _2965;
                            _3051 = _2966;
                            _3052 = _2967;
                            _3053 = _2968;
                            _3054 = _2969;
                            _3055 = _2970;
                            _3056 = _3057;
                        }
                    }
                    frontier_phi_22_pred = _2965;
                    frontier_phi_22_pred_1 = _2970;
                    frontier_phi_22_pred_2 = _2969;
                    frontier_phi_22_pred_3 = _2968;
                    frontier_phi_22_pred_4 = _2967;
                    frontier_phi_22_pred_5 = _2966;
                }
                _2613 = frontier_phi_22_pred;
                _2623 = frontier_phi_22_pred_1;
                _2621 = frontier_phi_22_pred_2;
                _2619 = frontier_phi_22_pred_3;
                _2617 = frontier_phi_22_pred_4;
                _2615 = frontier_phi_22_pred_5;
                uint _2823 = _2822 + 1u;
                if (_2823 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2816 = _2613;
                    _2817 = _2615;
                    _2818 = _2617;
                    _2819 = _2619;
                    _2820 = _2621;
                    _2821 = _2623;
                    _2822 = _2823;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2612 = _2613;
            _2614 = _2615;
            _2616 = _2617;
            _2618 = _2619;
            _2620 = _2621;
            _2622 = _2623;
        }
        uvec4 _2626 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2627 = _2626.z;
        uint _2629 = (_2627 >> 8u) & 15u;
        float _2784;
        float _2786;
        float _2788;
        float _2790;
        float _2792;
        float _2794;
        if (((4294967295u << _2629) & _2475) == 0u)
        {
            _2784 = _2612;
            _2786 = _2614;
            _2788 = _2616;
            _2790 = _2618;
            _2792 = _2620;
            _2794 = _2622;
        }
        else
        {
            float _2809 = inversesqrt(dot(vec3(_2429, _2430, _2431), vec3(_2429, _2430, _2431)));
            float _2810 = _2809 * _2429;
            float _2811 = _2809 * _2430;
            float _2812 = _2809 * _2431;
            float frontier_phi_16_17_ladder;
            float frontier_phi_16_17_ladder_1;
            float frontier_phi_16_17_ladder_2;
            float frontier_phi_16_17_ladder_3;
            float frontier_phi_16_17_ladder_4;
            float frontier_phi_16_17_ladder_5;
            if (_2629 < ((_2627 >> 12u) & 15u))
            {
                float _2785;
                float _2787;
                float _2789;
                float _2791;
                float _2793;
                float _2795;
                float _3033 = _2612;
                float _3034 = _2614;
                float _3035 = _2616;
                float _3036 = _2618;
                float _3037 = _2620;
                float _3038 = _2622;
                uint _3039 = _2629;
                uint _3048;
                bool _3049;
                for (;;)
                {
                    _3048 = texelFetch(g_lightClassification, int((((_2469 << 5u) + (_2455 << 9u)) + (_3039 << 2u)) >> 2u)).x;
                    _3049 = _3048 == 0u;
                    float frontier_phi_34_pred;
                    float frontier_phi_34_pred_1;
                    float frontier_phi_34_pred_2;
                    float frontier_phi_34_pred_3;
                    float frontier_phi_34_pred_4;
                    float frontier_phi_34_pred_5;
                    if (_3049)
                    {
                        frontier_phi_34_pred = _3037;
                        frontier_phi_34_pred_1 = _3038;
                        frontier_phi_34_pred_2 = _3033;
                        frontier_phi_34_pred_3 = _3034;
                        frontier_phi_34_pred_4 = _3035;
                        frontier_phi_34_pred_5 = _3036;
                    }
                    else
                    {
                        float _3277;
                        float _3278;
                        float _3279;
                        float _3280;
                        float _3281;
                        float _3282;
                        float _3580;
                        float _3581;
                        float _3582;
                        float _3583;
                        float _3584;
                        float _3585;
                        float _3299 = _3033;
                        float _3300 = _3034;
                        float _3301 = _3035;
                        float _3302 = _3036;
                        float _3303 = _3037;
                        float _3304 = _3038;
                        uint _3305 = _3048;
                        uint _3306;
                        vec4 _3331;
                        float _3332;
                        vec4 _3347;
                        vec3 _3359;
                        vec4 _3374;
                        vec4 _3389;
                        float _3435;
                        bool _3436;
                        for (;;)
                        {
                            uint _3316 = ((_3039 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3305));
                            _3306 = (_3305 + 4294967295u) & _3305;
                            uint _3318 = _3316 * 40u;
                            _3331 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3318)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3318 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3318 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3318 + 3u)).x));
                            _3332 = _3331.w;
                            uint _3334 = (_3316 * 40u) + 4u;
                            _3347 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3334)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3334 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3334 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3334 + 3u)).x));
                            uint _3349 = (_3316 * 40u) + 8u;
                            _3359 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3349)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3349 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3349 + 2u)).x));
                            uint _3361 = (_3316 * 40u) + 16u;
                            _3374 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3361)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3361 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3361 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3361 + 3u)).x));
                            uint _3376 = (_3316 * 40u) + 20u;
                            _3389 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3376)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3376 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3376 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3376 + 3u)).x));
                            uint _3391 = (_3316 * 40u) + 24u;
                            vec4 _3404 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3391)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3391 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3391 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3391 + 3u)).x));
                            uint _3410 = (_3316 * 40u) + 28u;
                            vec4 _3423 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3410)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3410 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3410 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3410 + 3u)).x));
                            _3435 = fma(_2431, _3423.z, fma(_2430, _3423.y, _3423.x * _2429)) + _3423.w;
                            _3436 = !((fma(_2431, _3404.z, fma(_2430, _3404.y, _3404.x * _2429)) + _3404.w) <= 0.0);
                            float frontier_phi_43_pred;
                            float frontier_phi_43_pred_1;
                            float frontier_phi_43_pred_2;
                            float frontier_phi_43_pred_3;
                            float frontier_phi_43_pred_4;
                            float frontier_phi_43_pred_5;
                            if (_3436)
                            {
                                float _3463 = _3331.x - _2429;
                                float _3464 = _3331.y - _2430;
                                float _3465 = _3331.z - _2431;
                                float _3466 = dot(vec3(_3463, _3464, _3465), vec3(_3463, _3464, _3465));
                                float _3469 = inversesqrt(_3466);
                                float _3470 = _3469 * _3463;
                                float _3471 = _3469 * _3464;
                                float _3472 = _3469 * _3465;
                                float _3476 = 1.0 - (_3466 / (_3332 * _3332));
                                float _4577 = isnan(0.0) ? _3476 : (isnan(_3476) ? 0.0 : max(_3476, 0.0));
                                float _3477 = isnan(1.0) ? _4577 : (isnan(_4577) ? 1.0 : min(_4577, 1.0));
                                float _3481 = sqrt(_3466) * _3347.w;
                                float _3483 = 1.39999997615814208984375 / (_3481 + 1.39999997615814208984375);
                                float _3484 = _3483 * _3483;
                                float _3487 = ((1.0 - _3484) * dot(vec3(_3470, _3471, _3472), vec3(_1457, _1460, _1463))) + _3484;
                                float _3490 = _3481 * _3481;
                                float _3494 = (fma(_2431, _3374.z, fma(_2430, _3374.y, _3374.x * _2429)) + _3374.w) / _3435;
                                float _3495 = (fma(_2431, _3389.z, fma(_2430, _3389.y, _3389.x * _2429)) + _3389.w) / _3435;
                                float _3499 = 1.0 - dot(vec2(_3494, _3495), vec2(_3494, _3495));
                                float _4593 = isnan(0.0) ? _3499 : (isnan(_3499) ? 0.0 : max(_3499, 0.0));
                                float _3500 = isnan(1.0) ? _4593 : (isnan(_4593) ? 1.0 : min(_4593, 1.0));
                                float _3501 = _3500 * (((isnan(0.0) ? _3487 : (isnan(_3487) ? 0.0 : max(_3487, 0.0))) * _3477) / ((_3490 * 0.699999988079071044921875) + 1.0));
                                float _3513 = exp2(log2(1.0 / ((_3490 * 3.5) + 5.0)) * 0.25);
                                float _3515 = 1.0 - sqrt(_1309);
                                float _3522 = sqrt(1.0 - ((1.0 - (_3515 * _3515)) * (1.0 - (_3513 * _3513))));
                                float _3523 = _3522 * _3522;
                                float _3524 = _3523 * _3523;
                                float _3525 = _3470 - _2810;
                                float _3526 = _3471 - _2811;
                                float _3527 = _3472 - _2812;
                                float _3531 = inversesqrt(dot(vec3(_3525, _3526, _3527), vec3(_3525, _3526, _3527)));
                                float _3535 = dot(vec3(_1457, _1460, _1463), vec3((-0.0) - _2810, (-0.0) - _2811, (-0.0) - _2812));
                                float _4604 = isnan(0.0) ? _3535 : (isnan(_3535) ? 0.0 : max(_3535, 0.0));
                                float _3538 = isnan(1.0) ? _4604 : (isnan(_4604) ? 1.0 : min(_4604, 1.0));
                                float _3539 = dot(vec3(_1457, _1460, _1463), vec3(_3531 * _3525, _3531 * _3526, _3531 * _3527));
                                float _4615 = isnan(0.0) ? _3539 : (isnan(_3539) ? 0.0 : max(_3539, 0.0));
                                float _3542 = isnan(1.0) ? _4615 : (isnan(_4615) ? 1.0 : min(_4615, 1.0));
                                float _3546 = ((_3542 * _3542) * (_3524 + (-1.0))) + 1.0;
                                float _3547 = _3483 * _3523;
                                float _3548 = _3547 * _3547;
                                float _3554 = ((1.0 - _3548) * dot(vec3(_1457, _1460, _1463), vec3(_3470, _3471, _3472))) + _3548;
                                float _4626 = isnan(0.0) ? _3554 : (isnan(_3554) ? 0.0 : max(_3554, 0.0));
                                float _3555 = isnan(1.0) ? _4626 : (isnan(_4626) ? 1.0 : min(_4626, 1.0));
                                float _3556 = 1.0 - _3523;
                                float _3566 = (0.5 / (((_3555 * ((_3538 * _3556) + _3523)) + 9.9999999392252902907785028219223e-09) + (((_3555 * _3556) + _3523) * _3538))) * _3555;
                                float _4637 = isnan(0.0) ? _3566 : (isnan(_3566) ? 0.0 : max(_3566, 0.0));
                                float _3576 = (_3500 * _3477) * (((_3524 * 3.1415927410125732421875) * (isnan(1.0) ? _4637 : (isnan(_4637) ? 1.0 : min(_4637, 1.0)))) / ((_3546 * _3546) * ((_3490 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_43_pred = _3501 * _3347.x;
                                frontier_phi_43_pred_1 = _3501 * _3347.z;
                                frontier_phi_43_pred_2 = _3501 * _3347.y;
                                frontier_phi_43_pred_3 = _3576 * _3359.z;
                                frontier_phi_43_pred_4 = _3576 * _3359.y;
                                frontier_phi_43_pred_5 = _3576 * _3359.x;
                            }
                            else
                            {
                                frontier_phi_43_pred = 0.0;
                                frontier_phi_43_pred_1 = 0.0;
                                frontier_phi_43_pred_2 = 0.0;
                                frontier_phi_43_pred_3 = 0.0;
                                frontier_phi_43_pred_4 = 0.0;
                                frontier_phi_43_pred_5 = 0.0;
                            }
                            _3583 = frontier_phi_43_pred;
                            _3585 = frontier_phi_43_pred_1;
                            _3584 = frontier_phi_43_pred_2;
                            _3582 = frontier_phi_43_pred_3;
                            _3581 = frontier_phi_43_pred_4;
                            _3580 = frontier_phi_43_pred_5;
                            _3280 = _3583 + _3302;
                            _3281 = _3584 + _3303;
                            _3282 = _3585 + _3304;
                            _3277 = _3580 + _3299;
                            _3278 = _3581 + _3300;
                            _3279 = _3582 + _3301;
                            if (_3306 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3299 = _3277;
                                _3300 = _3278;
                                _3301 = _3279;
                                _3302 = _3280;
                                _3303 = _3281;
                                _3304 = _3282;
                                _3305 = _3306;
                                continue;
                            }
                        }
                        frontier_phi_34_pred = _3281;
                        frontier_phi_34_pred_1 = _3282;
                        frontier_phi_34_pred_2 = _3277;
                        frontier_phi_34_pred_3 = _3278;
                        frontier_phi_34_pred_4 = _3279;
                        frontier_phi_34_pred_5 = _3280;
                    }
                    _2793 = frontier_phi_34_pred;
                    _2795 = frontier_phi_34_pred_1;
                    _2785 = frontier_phi_34_pred_2;
                    _2787 = frontier_phi_34_pred_3;
                    _2789 = frontier_phi_34_pred_4;
                    _2791 = frontier_phi_34_pred_5;
                    uint _3040 = _3039 + 1u;
                    if (_3040 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3033 = _2785;
                        _3034 = _2787;
                        _3035 = _2789;
                        _3036 = _2791;
                        _3037 = _2793;
                        _3038 = _2795;
                        _3039 = _3040;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_16_17_ladder = _2785;
                frontier_phi_16_17_ladder_1 = _2793;
                frontier_phi_16_17_ladder_2 = _2795;
                frontier_phi_16_17_ladder_3 = _2791;
                frontier_phi_16_17_ladder_4 = _2789;
                frontier_phi_16_17_ladder_5 = _2787;
            }
            else
            {
                frontier_phi_16_17_ladder = _2612;
                frontier_phi_16_17_ladder_1 = _2620;
                frontier_phi_16_17_ladder_2 = _2622;
                frontier_phi_16_17_ladder_3 = _2618;
                frontier_phi_16_17_ladder_4 = _2616;
                frontier_phi_16_17_ladder_5 = _2614;
            }
            _2784 = frontier_phi_16_17_ladder;
            _2786 = frontier_phi_16_17_ladder_5;
            _2788 = frontier_phi_16_17_ladder_4;
            _2790 = frontier_phi_16_17_ladder_3;
            _2792 = frontier_phi_16_17_ladder_1;
            _2794 = frontier_phi_16_17_ladder_2;
        }
        float _2799 = isnan(1.0) ? _1500 : (isnan(_1500) ? 1.0 : min(_1500, 1.0));
        _2487 = (_2799 * _2790) + _2298;
        _2489 = (_2799 * _2792) + _2299;
        _2491 = (_2799 * _2794) + _2300;
        _2493 = ((_2784 * 0.039999999105930328369140625) * _2799) + _2375;
        _2495 = ((_2786 * 0.039999999105930328369140625) * _2799) + _2379;
        _2497 = ((_2788 * 0.039999999105930328369140625) * _2799) + _2383;
    }
    else
    {
        _2487 = _2298;
        _2489 = _2299;
        _2491 = _2300;
        _2493 = _2375;
        _2495 = _2379;
        _2497 = _2383;
    }
    float _2517 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2518 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2519 = cbSceneParam._m0[86u].x * ((_1400 / cbSceneParam._m0[86u].x) + ((_1516 * cbMtdParam._m0[12u].y) * dot(vec3(_1436, _1437, _1438), vec3(_228, _229, _230))));
    float _2520 = isnan(_2517) ? _2519 : (isnan(_2519) ? _2517 : min(_2519, _2517));
    float _2521 = isnan(_2518) ? _1401 : (isnan(_1401) ? _2518 : min(_1401, _2518));
    vec4 _2523 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2520, _2521), 0.0);
    float _2525 = _2523.x;
    bool _2545 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2525)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2525))) > _1324;
    float _2546 = _2545 ? _2520 : _1400;
    float _2547 = _2545 ? _2521 : _1401;
    vec4 _2549 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2546, _2547));
    vec4 _2554 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2546, _2547));
    float _2556 = _2554.x;
    bool _2561 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _2570 = (-0.0) - cbSceneParam._m0[2u].z;
    float _2576 = (_2561 ? (_2570 / (cbSceneParam._m0[2u].x - _2556)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2556))) - _1324;
    float _2578 = cbMtdParam._m0[42u].y + cbMtdParam._m0[36u].y;
    float _2579 = cbMtdParam._m0[42u].z + cbMtdParam._m0[36u].z;
    float _2580 = cbMtdParam._m0[42u].w + cbMtdParam._m0[36u].w;
    bool _2586 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _2590 = (isnan(_2576) ? 0.0 : (isnan(0.0) ? _2576 : max(0.0, _2576))) * (-1.44269502162933349609375);
    float _4668 = isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0));
    float _4679 = isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0));
    float _4690 = isnan(0.0) ? _1488 : (isnan(_1488) ? 0.0 : max(_1488, 0.0));
    float _2713;
    float _2714;
    float _2715;
    if ((1.0 - _1231) > 0.00999999977648258209228515625)
    {
        vec4 _2634 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2546, _2547), 0.0);
        float _2636 = _2634.x;
        float _2642 = (_2561 ? (_2570 / (cbSceneParam._m0[2u].x - _2636)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2636))) - _1324;
        uint _2648 = floatBitsToUint(cbInstanceData._m0[_1246]).x * 14u;
        uint _2654 = _2648 + 4u;
        float _2663 = dot(vec3(cbLight._m0[_2648].xyz), vec3(_249, _250, _251));
        float _2670 = dot(vec3((-0.0) - _1380, (-0.0) - _1381, (-0.0) - _1382), vec3((-0.0) - _249, (-0.0) - _250, (-0.0) - _251));
        float _2675 = ((isnan(0.0) ? _2670 : (isnan(_2670) ? 0.0 : max(_2670, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _2663 : (isnan(_2663) ? 0.001000000047497451305389404296875 : max(_2663, 0.001000000047497451305389404296875)))) + 1.0;
        float _2677 = (-0.0) - ((isnan(_2642) ? 0.0 : (isnan(0.0) ? _2642 : max(0.0, _2642))) * _2675);
        _2713 = _2586 ? 0.0 : ((((_1290 * cbMtdParam._m0[36u].y) * cbLight._m0[_2654].x) / ((_2675 * _2578) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2578 * 1.44269502162933349609375) * _2677)));
        _2714 = _2586 ? 0.0 : ((((_1290 * cbMtdParam._m0[36u].z) * cbLight._m0[_2654].y) / ((_2675 * _2579) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2579 * 1.44269502162933349609375) * _2677)));
        _2715 = _2586 ? 0.0 : ((((_1290 * cbMtdParam._m0[36u].w) * cbLight._m0[_2654].z) / ((_2675 * _2580) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2580 * 1.44269502162933349609375) * _2677)));
    }
    else
    {
        _2713 = 0.0;
        _2714 = 0.0;
        _2715 = 0.0;
    }
    float _2731 = (_2713 + ((exp2(_2590 * (_2586 ? 0.0 : _2578)) * _2549.x) * cbSceneParam._m0[72u].w)) * _2239;
    float _2732 = (_2714 + ((exp2(_2590 * (_2586 ? 0.0 : _2579)) * _2549.y) * cbSceneParam._m0[72u].w)) * _2239;
    float _2733 = (_2715 + ((exp2(_2590 * (_2586 ? 0.0 : _2580)) * _2549.z) * cbSceneParam._m0[72u].w)) * _2239;
    float _2741 = (_2731 + ((_2493 + ((_1531.x * _1512) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4668 : (isnan(_4668) ? 1.0 : min(_4668, 1.0))) * (_2487 + (_2240 * (isnan(0.0) ? _2229 : (isnan(_2229) ? 0.0 : max(_2229, 0.0)))))) - _2731) * _1231);
    float _2743 = (_2732 + ((_2495 + ((_1531.y * _1512) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4679 : (isnan(_4679) ? 1.0 : min(_4679, 1.0))) * (_2489 + (_2240 * (isnan(0.0) ? _2232 : (isnan(_2232) ? 0.0 : max(_2232, 0.0)))))) - _2732) * _1231);
    float _2745 = (_2733 + ((_2497 + ((_1531.z * _1512) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4690 : (isnan(_4690) ? 1.0 : min(_4690, 1.0))) * (_2491 + (_2240 * (isnan(0.0) ? _2235 : (isnan(_2235) ? 0.0 : max(_2235, 0.0)))))) - _2733) * _1231);
    float _2750 = cbInstanceData._m0[_1245 + 6u].w * (isnan(1.0) ? _4042 : (isnan(_4042) ? 1.0 : min(_4042, 1.0)));
    float _2755 = _1400 / cbSceneParam._m0[86u].x;
    float _2756 = _1401 / cbSceneParam._m0[86u].y;
    vec4 _2770 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2755, _2756, (log2((isnan(cbSceneParam._m0[77u].w) ? _1324 : (isnan(_1324) ? cbSceneParam._m0[77u].w : min(_1324, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2772 = _2770.x;
    float _2773 = _2770.y;
    float _2774 = _2770.z;
    float _2775 = _2770.w;
    float _2873;
    float _2875;
    float _2877;
    float _2879;
    if (_1324 > cbSceneParam._m0[78u].w)
    {
        float _2837 = isnan(_1324) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1324 : min(cbSceneParam._m0[80u].w, _1324));
        float _2838 = _2837 / _1324;
        float _2849 = _2838 * _1373;
        float _2850 = _1374 * _2838;
        float _2851 = (-0.0) - _2850;
        float _2852 = _2838 * _1375;
        float _2854 = (cbSceneParam._m0[77u].w * _2851) / _2837;
        float _2855 = _2854 + cbSceneParam._m0[79u].w;
        float _2856 = cbSceneParam._m0[79u].w - _2850;
        float _2862 = sqrt(((_2849 * _2849) + (_2850 * _2850)) + (_2852 * _2852));
        float _2865 = (1.0 - (cbSceneParam._m0[77u].w / _2837)) * _2862;
        float _2871 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2872 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3234;
        if (abs((_2851 - _2854) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3234 = ((((_2855 > 0.0) ? exp2(_2871 * _2855) : (2.0 - exp2(_2872 * _2855))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2865;
        }
        else
        {
            float _2990 = 1.0 / cbSceneParam._m0[80u].x;
            float _2991 = isnan(_2856) ? _2855 : (isnan(_2855) ? _2856 : max(_2855, _2856));
            float _2992 = isnan(_2856) ? _2855 : (isnan(_2855) ? _2856 : min(_2855, _2856));
            float _3001 = isnan(0.0) ? _2991 : (isnan(_2991) ? 0.0 : min(_2991, 0.0));
            float _3002 = isnan(0.0) ? _2992 : (isnan(_2992) ? 0.0 : min(_2992, 0.0));
            _3234 = ((abs(_2862 / _2851) * cbSceneParam._m0[80u].y) * ((((_3001 - _3002) * 2.0) - ((exp2(_2871 * (isnan(0.0) ? _2991 : (isnan(_2991) ? 0.0 : max(_2991, 0.0)))) - exp2(_2871 * (isnan(0.0) ? _2992 : (isnan(_2992) ? 0.0 : max(_2992, 0.0))))) * _2990)) - ((exp2(_2872 * _3001) - exp2(_2872 * _3002)) * _2990))) + (_2865 * cbSceneParam._m0[80u].z);
        }
        vec4 _3236 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2755, _2756, 1.0), 0.0);
        float _3245 = exp2((_3234 * (-1.44269502162933349609375)) * (1.0 - _3236.w));
        float _3246 = log2(_3245);
        float _3262 = log2(_2775);
        _2873 = (exp2(_3262 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3246 * cbSceneParam._m0[78u].x)) * _3236.x) / cbSceneParam._m0[78u].x)) + _2772;
        _2875 = (exp2(_3262 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3246 * cbSceneParam._m0[78u].y)) * _3236.y) / cbSceneParam._m0[78u].y)) + _2773;
        _2877 = (exp2(_3262 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3246 * cbSceneParam._m0[78u].z)) * _3236.z) / cbSceneParam._m0[78u].z)) + _2774;
        _2879 = _3245 * _2775;
    }
    else
    {
        _2873 = _2772;
        _2875 = _2773;
        _2877 = _2774;
        _2879 = _2775;
    }
    bool _3272;
    float _2935;
    vec4 _2938;
    float _2940;
    vec4 _2942;
    float _2950;
    float _2951;
    float _2952;
    float _2953;
    bool _2964;
    for (;;)
    {
        bool _2891 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2893 = log2(_2879);
        float _2900 = exp2(_2893 * cbSceneParam._m0[78u].x) * _2741;
        float _2901 = exp2(_2893 * cbSceneParam._m0[78u].y) * _2743;
        float _2902 = exp2(_2893 * cbSceneParam._m0[78u].z) * _2745;
        vec4 _2910 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1400, _1401));
        float _2912 = _2910.x;
        float _2933 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2912)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2912))) - _1324) * cbMtdParam._m0[14u].w;
        float _4756 = isnan(0.0) ? _2933 : (isnan(_2933) ? 0.0 : max(_2933, 0.0));
        _2935 = _2750 * (isnan(1.0) ? _4756 : (isnan(_4756) ? 1.0 : min(_4756, 1.0)));
        float _2936 = _1389 + (-0.5);
        _2938 = cbMtdParam._m0[1u];
        _2940 = _2938.y * _2936;
        _2942 = cbMatDynParam._m0[0u];
        float _2949 = (roundEven(_2942.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2950 = _2949 * (_2891 ? _2900 : (_2900 + (cbSceneParam._m0[72u].w * _2873)));
        _2951 = _2949 * (_2891 ? _2901 : (_2901 + (cbSceneParam._m0[72u].w * _2875)));
        _2952 = _2949 * (_2891 ? _2902 : (_2902 + (cbSceneParam._m0[72u].w * _2877)));
        _2953 = _2936 * 0.999000012874603271484375;
        _2964 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2964)
        {
            if ((cbInstanceData._m0[_1245 + 7u].x + _2953) < 0.5)
            {
                _3272 = true;
                break;
            }
        }
        uint _3025 = _1476 + uint(_2942.w);
        if ((cbInstanceData._m0[_3025].w < 1.0) && ((cbInstanceData._m0[_3025].w + _2953) < 0.5))
        {
            _3272 = true;
            break;
        }
        if ((_2940 + 1.0) < _2938.x)
        {
            _3272 = true;
            break;
        }
        _3272 = false;
        break;
    }
    float _3290;
    if (_3272)
    {
        discard_state = true;
        _3290 = 0.0;
    }
    else
    {
        _3290 = _2935;
    }
    SV_Target.x = _2950;
    SV_Target.y = _2951;
    SV_Target.z = _2952;
    SV_Target.w = _3290;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2935;
    discard_exit();
}


