#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[46];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 54) uniform texture2D g_ReflectionTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 57) uniform texture2D g_WaterSimulationNormalTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_5;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in vec4 TEXCOORD_8;
layout(location = 7) in float TEXCOORD_11;
layout(location = 7, component = 1) in float TEXCOORD_12;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _3641;
float _3642;
float _3643;
float _3644;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _217 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _218 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _219 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _225 = inversesqrt(dot(vec3(_217, _218, _219), vec3(_217, _218, _219)));
    float _226 = _225 * _217;
    float _227 = _225 * _218;
    float _228 = _225 * _219;
    float _232 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _233 = _232 * NORMAL.x;
    float _234 = _232 * NORMAL.y;
    float _235 = _232 * NORMAL.z;
    float _239 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _247;
    float _248;
    float _249;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _247 = (-0.0) - _233;
        _248 = (-0.0) - _234;
        _249 = (-0.0) - _235;
    }
    else
    {
        _247 = _233;
        _248 = _234;
        _249 = _235;
    }
    float _295 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _305 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _295);
    float _306 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _295);
    float _307 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _295);
    float _322 = cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x;
    vec4 _339 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_2, SS_BumpMap), vec2((((_322 * cbMtdParam._m0[27u].y) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_322 * cbMtdParam._m0[27u].z) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _342 = _339.x;
    float _343 = _339.y;
    float _344 = _339.z;
    float _345 = _339.w;
    float _358 = cbMtdParam._m0[14u].y - cbMtdParam._m0[14u].x;
    float _361 = (sqrt(((_305 * _305) + (_306 * _306)) + (_307 * _307)) - cbMtdParam._m0[14u].x) / (isnan(0.001000000047497451305389404296875) ? _358 : (isnan(_358) ? 0.001000000047497451305389404296875 : max(_358, 0.001000000047497451305389404296875)));
    float _362 = _361 + 0.180000007152557373046875;
    float _364 = _362 * 12.0;
    float _3658 = isnan(0.0) ? _364 : (isnan(_364) ? 0.0 : max(_364, 0.0));
    float _367 = isnan(1.0) ? _3658 : (isnan(_3658) ? 1.0 : min(_3658, 1.0));
    vec4 _379 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _381 = _379.x;
    float _403 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _381)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _381))) - POSITION_1.w;
    float _404 = _403 / ((_367 * 0.0599999986588954925537109375) + 0.0599999986588954925537109375);
    float _3669 = isnan(0.0) ? _404 : (isnan(_404) ? 0.0 : max(_404, 0.0));
    float _405 = isnan(1.0) ? _3669 : (isnan(_3669) ? 1.0 : min(_3669, 1.0));
    float _406 = isnan(0.5) ? _405 : (isnan(_405) ? 0.5 : max(_405, 0.5));
    float _408 = 1.0 - _406;
    float _409 = _362 * 7.0;
    float _3685 = isnan(0.0) ? _409 : (isnan(_409) ? 0.0 : max(_409, 0.0));
    float _411 = isnan(1.0) ? _3685 : (isnan(_3685) ? 1.0 : min(_3685, 1.0));
    float _424 = (_344 * 0.00200000009499490261077880859375) + TEXCOORD.x;
    float _425 = (_344 * 0.00999999977648258209228515625) + TEXCOORD.y;
    vec4 _439 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[25u].w * _322) + _424) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[26u].x * _322) + _425) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _441 = _439.x;
    float _466 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[23u].w * _424) + (cbMtdParam._m0[26u].w * _322)) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[24u].x * _425) + (cbMtdParam._m0[27u].x * _322)) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x + (-0.0500000007450580596923828125);
    float _469 = (isnan(_466) ? _441 : (isnan(_441) ? _466 : max(_441, _466))) - _411;
    float _3701 = isnan(0.0) ? _469 : (isnan(_469) ? 0.0 : max(_469, 0.0));
    float _470 = isnan(1.0) ? _3701 : (isnan(_3701) ? 1.0 : min(_3701, 1.0));
    float _471 = _411 + 0.5;
    float _3712 = isnan(0.0) ? _471 : (isnan(_471) ? 0.0 : max(_471, 0.0));
    float _482 = cbMtdParam._m0[16u].w * _322;
    float _483 = cos(_482);
    float _484 = sin(_482);
    vec4 _508 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((((_484 * cbMtdParam._m0[31u].y) + TEXCOORD.x) + (cbMtdParam._m0[22u].y * _322)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((_483 * cbMtdParam._m0[31u].z) + TEXCOORD.y) + (cbMtdParam._m0[22u].z * _322)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _512 = _508.z;
    vec4 _527 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[21u].w * _322) + TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[22u].x * _322) + TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _531 = _527.z;
    float _534 = (isnan(_531) ? _512 : (isnan(_512) ? _531 : max(_512, _531))) * (isnan(1.0) ? _3712 : (isnan(_3712) ? 1.0 : min(_3712, 1.0)));
    float _3728 = isnan(0.0) ? _534 : (isnan(_534) ? 0.0 : max(_534, 0.0));
    float _535 = isnan(1.0) ? _3728 : (isnan(_3728) ? 1.0 : min(_3728, 1.0));
    float _538 = (_408 - _345) + (isnan(_535) ? _470 : (isnan(_470) ? _535 : max(_470, _535)));
    float _3744 = isnan(0.0) ? _538 : (isnan(_538) ? 0.0 : max(_538, 0.0));
    float _539 = isnan(1.0) ? _3744 : (isnan(_3744) ? 1.0 : min(_3744, 1.0));
    float _540 = _539 * _406;
    float _3755 = isnan(0.0) ? _361 : (isnan(_361) ? 0.0 : max(_361, 0.0));
    float _549 = isnan(1.0) ? _3755 : (isnan(_3755) ? 1.0 : min(_3755, 1.0));
    float _550 = _344 - _549;
    float _3766 = isnan(0.0) ? _550 : (isnan(_550) ? 0.0 : max(_550, 0.0));
    float _551 = isnan(1.0) ? _3766 : (isnan(_3766) ? 1.0 : min(_3766, 1.0));
    vec4 _607 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[23u].y * _322) + (cbMtdParam._m0[30u].w * _484)) + (cbMtdParam._m0[34u].w * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[23u].z * _322) + (cbMtdParam._m0[31u].x * _483)) + (cbMtdParam._m0[35u].x * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _634 = cbMtdParam._m0[38u].x * TEXCOORD_5.x;
    float _693 = ((((((_607.w + (-0.5)) * cbMtdParam._m0[44u].x) + (cbMtdParam._m0[39u].z * (_508.w + (-0.5)))) + (cbMtdParam._m0[40u].y * (_527.w + (-0.5)))) + (((_634 + cbMtdParam._m0[41u].w) * cos(cbMtdParam._m0[13u].y * _322)) * (texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[32u].w * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[33u].x * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) + ((sin(cbMtdParam._m0[13u].x * _322) * (cbMtdParam._m0[41u].x + _634)) * (texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[31u].w * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[32u].x * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) * (1.0 - TEXCOORD_5.y);
    float _720 = 1.0 - _345;
    float _725 = ((isnan(0.550000011920928955078125) ? _720 : (isnan(_720) ? 0.550000011920928955078125 : max(_720, 0.550000011920928955078125))) + (-0.550000011920928955078125)) * cbMtdParam._m0[16u].z;
    float _728 = ((TEXCOORD_5.y * (-0.5)) * _725) + _725;
    float _732 = ((TEXCOORD_5.z * (-0.699999988079071044921875)) * _728) + _728;
    float _742 = (((_693 + ((cbMtdParam._m0[37u].y - (cbMtdParam._m0[37u].y * TEXCOORD_5.y)) * _344)) + ((texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[35u].w * TEXCOORD.x) + (cbMtdParam._m0[22u].w * _322)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[36u].x * TEXCOORD.y) + (cbMtdParam._m0[23u].x * _322)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).w + (-0.5)) * cbMtdParam._m0[44u].w)) + ((sin(cbMtdParam._m0[21u].y * _322) * cbMtdParam._m0[38u].w) * (isnan(0.300000011920928955078125) ? TEXCOORD_5.z : (isnan(TEXCOORD_5.z) ? 0.300000011920928955078125 : max(TEXCOORD_5.z, 0.300000011920928955078125))))) + _732;
    float _745 = (_742 + cbMtdParam._m0[20u].z) * cbMtdParam._m0[20u].w;
    float _3787 = isnan(0.0) ? _745 : (isnan(_745) ? 0.0 : max(_745, 0.0));
    float _746 = isnan(1.0) ? _3787 : (isnan(_3787) ? 1.0 : min(_3787, 1.0));
    float _758 = inversesqrt(dot(vec3(_305, _306, _307), vec3(_305, _306, _307)));
    float _762 = dot(vec4(_758 * _305, _758 * _306, _758 * _307, 0.0), vec4(_247, _248, _249, 0.0));
    float _3798 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
    float _770 = exp2(log2((1.0 - (isnan(1.0) ? _3798 : (isnan(_3798) ? 1.0 : min(_3798, 1.0)))) * cbMtdParam._m0[12u].z) * cbMtdParam._m0[12u].w);
    float _3809 = isnan(0.0) ? _770 : (isnan(_770) ? 0.0 : max(_770, 0.0));
    float _771 = isnan(1.0) ? _3809 : (isnan(_3809) ? 1.0 : min(_3809, 1.0));
    float _775 = ((_540 + cbMtdParam._m0[9u].x) + (_551 * cbMtdParam._m0[10u].x)) + ((_746 * cbMtdParam._m0[11u].x) * _771);
    float _776 = ((_540 + cbMtdParam._m0[9u].y) + (_551 * cbMtdParam._m0[10u].y)) + ((_746 * cbMtdParam._m0[11u].y) * _771);
    float _777 = ((_540 + cbMtdParam._m0[9u].z) + (_551 * cbMtdParam._m0[10u].z)) + ((_746 * cbMtdParam._m0[11u].z) * _771);
    float _3820 = isnan(0.0) ? _406 : (isnan(_406) ? 0.0 : max(_406, 0.0));
    float _778 = isnan(1.0) ? _3820 : (isnan(_3820) ? 1.0 : min(_3820, 1.0));
    float _3831 = isnan(0.0) ? _408 : (isnan(_408) ? 0.0 : max(_408, 0.0));
    float _788 = isnan(1.0) ? _3831 : (isnan(_3831) ? 1.0 : min(_3831, 1.0));
    float _791 = (_367 * (-0.87999999523162841796875)) * _788;
    float _794 = (((((1.0 - _775) - _778) * _549) + _775) + _788) + _791;
    float _797 = (((((1.0 - _776) - _778) * _549) + _776) + _788) + _791;
    float _800 = (((((1.0 - _777) - _778) * _549) + _777) + _788) + _791;
    float _801 = _344 * 0.01200000010430812835693359375;
    float _823 = (_344 * 0.300000011920928955078125) * texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[35u].y * _322) + _801) + (cbMtdParam._m0[24u].y * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[35u].z * _322) + _801) + (cbMtdParam._m0[24u].z * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z;
    float _3842 = isnan(0.0) ? _823 : (isnan(_823) ? 0.0 : max(_823, 0.0));
    float _824 = isnan(1.0) ? _3842 : (isnan(_3842) ? 1.0 : min(_3842, 1.0));
    float _834 = (((1.0 - _794) * TEXCOORD_5.x) * _824) + _794;
    float _835 = (((1.0 - _797) * TEXCOORD_5.x) * _824) + _797;
    float _836 = (((1.0 - _800) * TEXCOORD_5.x) * _824) + _800;
    vec4 _870 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].w * _322) + (cbMtdParam._m0[30u].y * _484)) + (cbMtdParam._m0[29u].y * _424)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[28u].x * _322) + (cbMtdParam._m0[30u].z * _483)) + (cbMtdParam._m0[29u].z * _425)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _873 = _870.y;
    float _880 = 1.0 - (_403 / cbMtdParam._m0[18u].w);
    float _884 = ((_870.x * TEXCOORD_8.x) * cbMtdParam._m0[18u].z) * (isnan(0.0) ? _880 : (isnan(_880) ? 0.0 : max(_880, 0.0)));
    float _890 = _873 * TEXCOORD_8.y;
    float _893 = ((isnan(cbMtdParam._m0[19u].x) ? _890 : (isnan(_890) ? cbMtdParam._m0[19u].x : max(_890, cbMtdParam._m0[19u].x))) - cbMtdParam._m0[19u].x) * cbMtdParam._m0[19u].y;
    float _894 = isnan(_893) ? _884 : (isnan(_884) ? _893 : max(_884, _893));
    float _3868 = isnan(0.0) ? _894 : (isnan(_894) ? 0.0 : max(_894, 0.0));
    float _895 = isnan(1.0) ? _3868 : (isnan(_3868) ? 1.0 : min(_3868, 1.0));
    float _902 = (_895 * (1.0 - _834)) + _834;
    float _903 = (_895 * (1.0 - _835)) + _835;
    float _904 = (_895 * (1.0 - _836)) + _836;
    float _939 = exp2(log2(cbMtdParam._m0[15u].w * _720) * cbMtdParam._m0[17u].x);
    float _3879 = isnan(0.0) ? _939 : (isnan(_939) ? 0.0 : max(_939, 0.0));
    float _940 = isnan(1.0) ? _3879 : (isnan(_3879) ? 1.0 : min(_3879, 1.0));
    float _941 = _940 * texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[28u].y * _322) + (cbMtdParam._m0[28u].w * _720)) + (cbMtdParam._m0[29u].w * _424)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[28u].z * _322) + (cbMtdParam._m0[29u].x * _720)) + (cbMtdParam._m0[30u].x * _425)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w)).z;
    float _944 = ((_940 - _941) * cbMtdParam._m0[17u].w) + _941;
    float _948 = _411 * TEXCOORD_8.z;
    float _955 = ((_948 * (1.0 - _902)) * _944) + _902;
    float _956 = ((_948 * (1.0 - _903)) * _944) + _903;
    float _957 = ((_948 * (1.0 - _904)) * _944) + _904;
    float _961 = 1.0 - (_403 / cbMtdParam._m0[18u].x);
    float _967 = (cbMtdParam._m0[18u].y * _873) * (isnan(0.0) ? _961 : (isnan(_961) ? 0.0 : max(_961, 0.0)));
    float _971 = (_967 * (1.0 - _955)) + _955;
    float _972 = (_967 * (1.0 - _956)) + _956;
    float _973 = (_967 * (1.0 - _957)) + _957;
    float _976 = _361 / cbMtdParam._m0[15u].y;
    float _3895 = isnan(0.0) ? _976 : (isnan(_976) ? 0.0 : max(_976, 0.0));
    float _979 = (1.0 - (isnan(1.0) ? _3895 : (isnan(_3895) ? 1.0 : min(_3895, 1.0)))) * cbMtdParam._m0[15u].x;
    float _985 = _361 + 0.20000000298023223876953125;
    float _987 = _985 * 9.0;
    float _3906 = isnan(0.0) ? _987 : (isnan(_987) ? 0.0 : max(_987, 0.0));
    float _992 = ((cbMtdParam._m0[13u].w - cbMtdParam._m0[12u].x) * (isnan(1.0) ? _3906 : (isnan(_3906) ? 1.0 : min(_3906, 1.0)))) + cbMtdParam._m0[12u].x;
    float _995 = (_361 + 0.099999986588954925537109375) * 2.5;
    float _3917 = isnan(0.0) ? _995 : (isnan(_995) ? 0.0 : max(_995, 0.0));
    float _1000 = ((cbMtdParam._m0[14u].z - _992) * (isnan(1.0) ? _3917 : (isnan(_3917) ? 1.0 : min(_3917, 1.0)))) + _992;
    float _1001 = _971 + _539;
    float _3928 = isnan(0.0) ? _1001 : (isnan(_1001) ? 0.0 : max(_1001, 0.0));
    float _1006 = ((0.3499999940395355224609375 - _1000) * (isnan(1.0) ? _3928 : (isnan(_3928) ? 1.0 : min(_3928, 1.0)))) + _1000;
    float _1007 = TEXCOORD_5.z * 0.5;
    float _1019 = (_361 + 0.100000001490116119384765625) * 0.89999997615814208984375;
    float _3939 = isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0));
    float _1024 = ((cbMtdParam._m0[17u].y - cbMtdParam._m0[20u].x) * (isnan(1.0) ? _3939 : (isnan(_3939) ? 1.0 : min(_3939, 1.0)))) + cbMtdParam._m0[20u].x;
    float _1029 = (_1024 * (_342 + (-0.5))) + 0.5;
    float _1030 = (_1024 * (_343 + (-0.5))) + 0.5;
    float _3950 = isnan(0.0) ? TEXCOORD_5.y : (isnan(TEXCOORD_5.y) ? 0.0 : max(TEXCOORD_5.y, 0.0));
    float _1031 = isnan(1.0) ? _3950 : (isnan(_3950) ? 1.0 : min(_3950, 1.0));
    vec4 _1061 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[26u].y * TEXCOORD.z) + (cbMtdParam._m0[32u].y * _322)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[26u].z * TEXCOORD.w) + (cbMtdParam._m0[32u].z * _322)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1069 = ((_527.x + (-0.5)) * 0.5) + _508.x;
    float _1070 = ((_527.y + (-0.5)) * 0.5) + _508.y;
    vec4 _1096 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[24u].w * TEXCOORD.x) + (cbMtdParam._m0[25u].y * _322)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[25u].x * TEXCOORD.y) + (cbMtdParam._m0[25u].z * _322)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1105 = _985 * 12.0;
    float _3961 = isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0));
    float _1107 = 1.0 - (isnan(1.0) ? _3961 : (isnan(_3961) ? 1.0 : min(_3961, 1.0)));
    float _1118 = cbMtdParam._m0[33u].w * TEXCOORD.x;
    float _1119 = cbMtdParam._m0[34u].x * TEXCOORD.y;
    vec4 _1132 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((_1118 + (cbMtdParam._m0[33u].y * _322)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_1119 + (cbMtdParam._m0[33u].z * _322)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _1153 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1118 + ((cbMtdParam._m0[27u].y * 0.4000000059604644775390625) * _551)) + (cbMtdParam._m0[34u].y * _322)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1119 + ((cbMtdParam._m0[27u].z * 0.4000000059604644775390625) * _551)) + (cbMtdParam._m0[34u].z * _322)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _1167 = (((0.5 - _1069) * 0.10999999940395355224609375) + _1069) + (((((((_1096.z + (-0.5)) * cbMtdParam._m0[16u].x) * _1107) + (-1.0)) + _1132.x) + _1153.x) * cbMtdParam._m0[15u].z);
    float _1168 = (((0.5 - _1070) * 0.10999999940395355224609375) + _1070) + (((((((_1096.w + (-0.5)) * cbMtdParam._m0[16u].x) * _1107) + (-1.0)) + _1132.y) + _1153.y) * cbMtdParam._m0[15u].z);
    float _1173 = ((_1061.x - _1167) * _361) + _1167;
    float _1174 = ((_1061.y - _1168) * _361) + _1168;
    float _1175 = _361 * 0.5;
    float _3972 = isnan(0.0) ? _1175 : (isnan(_1175) ? 0.0 : max(_1175, 0.0));
    float _1176 = isnan(1.0) ? _3972 : (isnan(_3972) ? 1.0 : min(_3972, 1.0));
    float _1187 = cbMtdParam._m0[17u].z - (cbMtdParam._m0[17u].z * _732);
    float _1194 = cbMtdParam._m0[19u].z - (cbMtdParam._m0[19u].z * TEXCOORD_5.y);
    float _1196 = _1194 - (_1194 * _1176);
    float _1200 = (((((((0.5 - _342) * 0.60000002384185791015625) + _342) - _1029) * _1031) + _1029) + (_1196 * (_607.x + (-0.5)))) + (((_1173 + (-0.5)) + ((0.5 - _1173) * _1176)) * _1187);
    float _1202 = (((((((0.5 - _343) * 0.60000002384185791015625) + _343) - _1030) * _1031) + _1030) + (_1196 * (_607.y + (-0.5)))) + (((_1174 + (-0.5)) + ((0.5 - _1174) * _1176)) * _1187);
    float _1212 = (((_1007 * (0.5 - _1200)) + _1200) * 2.0) + (-1.0);
    float _1213 = (((_1007 * (0.5 - _1202)) + _1202) * 2.0) + (-1.0);
    float _1214 = dot(vec2(_1212, _1213), vec2(_1212, _1213));
    float _3983 = isnan(0.0) ? _1214 : (isnan(_1214) ? 0.0 : max(_1214, 0.0));
    float _1219 = sqrt(1.0 - (isnan(1.0) ? _3983 : (isnan(_3983) ? 1.0 : min(_3983, 1.0))));
    float _1222 = _985 * 6.0;
    float _3994 = isnan(0.0) ? _1222 : (isnan(_1222) ? 0.0 : max(_1222, 0.0));
    float _1225 = cbMtdParam._m0[16u].y * (isnan(1.0) ? _3994 : (isnan(_3994) ? 1.0 : min(_3994, 1.0)));
    float _4005 = isnan(0.0) ? _1225 : (isnan(_1225) ? 0.0 : max(_1225, 0.0));
    float _1226 = isnan(1.0) ? _4005 : (isnan(_4005) ? 1.0 : min(_4005, 1.0));
    float _1229 = ((1.0 - _1226) * _1001) + _1226;
    uint _1243 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1244 = _1243 + 5u;
    float _1255 = (-0.0) - _305;
    float _1256 = (-0.0) - _306;
    float _1257 = (-0.0) - _307;
    float _1261 = inversesqrt(dot(vec3(_1255, _1256, _1257), vec3(_1255, _1256, _1257)));
    float _1265 = dot(vec3(_1261 * _1255, _1261 * _1256, _1261 * _1257), vec3(cbLight._m0[floatBitsToUint(cbInstanceData._m0[_1244]).x * 14u].xyz));
    float _1275 = 0.90999996662139892578125 / exp2(log2(1.091000080108642578125 - (_1265 * 0.60000002384185791015625)) * 1.5);
    float _1288 = ((((0.959999978542327880859375 / exp2(log2((_1265 * 0.4000000059604644775390625) + 1.04100000858306884765625) * 1.5)) - _1275) * 0.5) + _1275) * 0.079577468335628509521484375;
    float _1292 = fma(_1219, _247, fma(_1213, _239 * TANGENT.x, _1212 * _226));
    float _1295 = fma(_1219, _248, fma(_1213, _239 * TANGENT.y, _1212 * _227));
    float _1298 = fma(_1219, _249, fma(_1213, _239 * TANGENT.z, _1212 * _228));
    float _1302 = inversesqrt(dot(vec3(_1292, _1295, _1298), vec3(_1292, _1295, _1298)));
    float _1303 = _1302 * _1292;
    float _1304 = _1302 * _1295;
    float _1305 = _1302 * _1298;
    float _4016 = isnan(0.0) ? _979 : (isnan(_979) ? 0.0 : max(_979, 0.0));
    float _4027 = isnan(0.0) ? _1006 : (isnan(_1006) ? 0.0 : max(_1006, 0.0));
    float _1307 = isnan(1.0) ? _4027 : (isnan(_4027) ? 1.0 : min(_4027, 1.0));
    float _4038 = isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0));
    float _4049 = isnan(0.0) ? _972 : (isnan(_972) ? 0.0 : max(_972, 0.0));
    float _4060 = isnan(0.0) ? _973 : (isnan(_973) ? 0.0 : max(_973, 0.0));
    float _1322 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1362 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1371 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1362);
    float _1372 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1362);
    float _1373 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1362);
    float _1377 = inversesqrt(dot(vec3(_1371, _1372, _1373), vec3(_1371, _1372, _1373)));
    float _1378 = _1371 * _1377;
    float _1379 = _1372 * _1377;
    float _1380 = _1373 * _1377;
    vec4 _1385 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1387 = _1385.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1583 = sqrt(((_1371 * _1371) + (_1372 * _1372)) + (_1373 * _1373));
        float _1589 = (cbMatDynParam._m0[5u].x * _1583) + cbMatDynParam._m0[5u].y;
        float _4071 = isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0));
        float _1590 = isnan(1.0) ? _4071 : (isnan(_4071) ? 1.0 : min(_4071, 1.0));
        float _1594 = (cbMatDynParam._m0[5u].z * _1583) + cbMatDynParam._m0[5u].w;
        float _4082 = isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4082 : (isnan(_4082) ? 1.0 : min(_4082, 1.0))) - _1590)) + _1590) < ((_1387 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1398 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1399 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _1401 = texture(sampler2D(g_WaterSimulationNormalTexture, SS_ClampLinear), vec2(TEXCOORD_11, TEXCOORD_12));
    float _1410 = (_1401.x * 2.0) + (-1.0);
    float _1411 = (_1401.y * 2.0) + (-1.0);
    float _1412 = (_1401.z * 2.0) + (-1.0);
    float _1416 = inversesqrt(dot(vec3(_1410, _1411, _1412), vec3(_1410, _1411, _1412)));
    float _1427 = ((TEXCOORD_12 >= 1.0) || ((TEXCOORD_12 <= 0.0) || ((TEXCOORD_11 <= 0.0) || (TEXCOORD_11 >= 1.0)))) ? 0.0 : _1401.w;
    float _1434 = (((_1410 * _1416) - _1303) * _1427) + _1303;
    float _1435 = (((_1411 * _1416) - _1304) * _1427) + _1304;
    float _1436 = (((_1412 * _1416) - _1305) * _1427) + _1305;
    float _1455 = fma(_1436, cbSceneParam._m0[5u].z, fma(_1435, cbSceneParam._m0[5u].y, _1434 * cbSceneParam._m0[5u].x));
    float _1458 = fma(_1436, cbSceneParam._m0[6u].z, fma(_1435, cbSceneParam._m0[6u].y, _1434 * cbSceneParam._m0[6u].x));
    float _1461 = fma(_1436, cbSceneParam._m0[7u].z, fma(_1435, cbSceneParam._m0[7u].y, _1434 * cbSceneParam._m0[7u].x));
    uint _1474 = _1243 + 9u;
    uint _1475 = _1474 + uint(cbMatDynParam._m0[0u].w);
    float _1481 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4038 : (isnan(_4038) ? 1.0 : min(_4038, 1.0)))) * cbInstanceData._m0[_1475].x;
    float _1482 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4049 : (isnan(_4049) ? 1.0 : min(_4049, 1.0)))) * cbInstanceData._m0[_1475].y;
    float _1483 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4060 : (isnan(_4060) ? 1.0 : min(_4060, 1.0)))) * cbInstanceData._m0[_1475].z;
    float _4093 = isnan(0.0) ? _1481 : (isnan(_1481) ? 0.0 : max(_1481, 0.0));
    float _1484 = isnan(1.0) ? _4093 : (isnan(_4093) ? 1.0 : min(_4093, 1.0));
    float _4104 = isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0));
    float _1485 = isnan(1.0) ? _4104 : (isnan(_4104) ? 1.0 : min(_4104, 1.0));
    float _4115 = isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0));
    float _1486 = isnan(1.0) ? _4115 : (isnan(_4115) ? 1.0 : min(_4115, 1.0));
    vec4 _1495 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1398, cbSceneParam._m0[86u].y * _1399));
    float _1498 = _1495.x * TEXCOORD_5.w;
    float _1502 = abs(dot(vec3(_1378, _1379, _1380), vec3(_1434, _1435, _1436)));
    float _4126 = isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0));
    float _1509 = exp2(log2(1.0 - (isnan(1.0) ? _4126 : (isnan(_4126) ? 1.0 : min(_4126, 1.0)))) * 5.0) * 0.959999978542327880859375;
    float _1510 = _1509 + 0.039999999105930328369140625;
    float _1514 = 10.0 / (_1322 + 10.0);
    vec4 _1529 = texture(sampler2D(g_ReflectionTexture, SS_ClampLinear), vec2(((_1514 * cbMtdParam._m0[21u].z) * dot(vec3(_1434, _1435, _1436), vec3(1.0, 0.0, 0.0))) + (_1398 / cbSceneParam._m0[86u].x), 1.0 - (_1399 / cbSceneParam._m0[86u].y)));
    float _1565 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1569 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1573 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1897;
    float _1898;
    float _1899;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1626 = fma(_1573, cbModelParam._m0[26u].z, fma(_1569, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1565));
        float _1630 = fma(_1573, cbModelParam._m0[27u].z, fma(_1569, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1565));
        float _1634 = fma(_1573, cbModelParam._m0[28u].z, fma(_1569, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1565));
        float _1656 = _1565 + _1434;
        float _1657 = _1569 + _1435;
        float _1658 = _1573 + _1436;
        float _1668 = fma(_1658, cbModelParam._m0[26u].z, fma(_1657, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1656)) - _1626;
        float _1669 = fma(_1658, cbModelParam._m0[27u].z, fma(_1657, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1656)) - _1630;
        float _1670 = fma(_1658, cbModelParam._m0[28u].z, fma(_1657, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1656)) - _1634;
        float _1674 = inversesqrt(dot(vec3(_1668, _1669, _1670), vec3(_1668, _1669, _1670)));
        float _1686 = ((_1674 * _1668) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1626 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1687 = ((_1674 * _1669) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1630 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1688 = ((_1674 * _1670) / cbModelParam._m0[34u].z) + ((((((_1634 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1691 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1686, _1687, _1688), 0.0);
        vec4 _1698 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1686, _1687, _1688), 0.0);
        vec4 _1705 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1686, _1687, _1688), 0.0);
        vec4 _1712 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1686, _1687, _1688), 0.0);
        float _1725 = exp2((_1691.w + (-0.5)) * 20.0) * 2.0;
        float _1732 = exp2((_1698.w + (-0.5)) * 20.0) * 2.0;
        float _1739 = exp2((_1705.w + (-0.5)) * 20.0) * 2.0;
        float _1746 = exp2((_1712.w + (-0.5)) * 20.0) * 2.0;
        float _1747 = _1746 * (_1712.x + (-0.5));
        float _1748 = _1746 * (_1712.y + (-0.5));
        float _1749 = _1746 * (_1712.z + (-0.5));
        float _1750 = isnan(0.0) ? _1747 : (isnan(_1747) ? 0.0 : max(_1747, 0.0));
        float _1751 = isnan(0.0) ? _1748 : (isnan(_1748) ? 0.0 : max(_1748, 0.0));
        float _1752 = isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0));
        float _1754 = ((_1691.x + (-0.5)) * 0.5) * _1725;
        float _1756 = ((_1698.x + (-0.5)) * 0.5) * _1732;
        float _1758 = ((_1705.x + (-0.5)) * 0.5) * _1739;
        float _1759 = dot(vec3(_1754, _1756, _1758), vec3(_1754, _1756, _1758));
        float _1764 = (_1759 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1759);
        float _1773 = (dot(vec3(_1434, _1435, _1436), vec3(_1764 * _1754, _1764 * _1756, _1764 * _1758)) + 1.0) * 0.5;
        float _4152 = isnan(0.0) ? _1773 : (isnan(_1773) ? 0.0 : max(_1773, 0.0));
        float _1783 = sqrt(((_1756 * _1756) + (_1754 * _1754)) + (_1758 * _1758)) / (_1750 + 9.9999997473787516355514526367188e-06);
        float _4163 = isnan(0.0) ? _1783 : (isnan(_1783) ? 0.0 : max(_1783, 0.0));
        float _1784 = isnan(1.0) ? _4163 : (isnan(_4163) ? 1.0 : min(_4163, 1.0));
        float _1785 = _1784 * 2.0;
        float _1789 = (1.0 - _1784) / (_1784 + 1.0);
        float _4174 = isnan(0.0) ? _1789 : (isnan(_1789) ? 0.0 : max(_1789, 0.0));
        float _1790 = isnan(1.0) ? _4174 : (isnan(_4174) ? 1.0 : min(_4174, 1.0));
        float _1799 = ((((1.0 - _1790) * (_1785 + 2.0)) * exp2(log2(isnan(1.0) ? _4152 : (isnan(_4152) ? 1.0 : min(_4152, 1.0))) * (_1785 + 1.0))) + _1790) * _1750;
        float _1801 = ((_1691.y + (-0.5)) * 0.5) * _1725;
        float _1803 = ((_1698.y + (-0.5)) * 0.5) * _1732;
        float _1805 = ((_1705.y + (-0.5)) * 0.5) * _1739;
        float _1806 = dot(vec3(_1801, _1803, _1805), vec3(_1801, _1803, _1805));
        float _1811 = (_1806 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1806);
        float _1819 = (dot(vec3(_1434, _1435, _1436), vec3(_1811 * _1801, _1811 * _1803, _1811 * _1805)) + 1.0) * 0.5;
        float _4185 = isnan(0.0) ? _1819 : (isnan(_1819) ? 0.0 : max(_1819, 0.0));
        float _1828 = sqrt(((_1803 * _1803) + (_1801 * _1801)) + (_1805 * _1805)) / (_1751 + 9.9999997473787516355514526367188e-06);
        float _4196 = isnan(0.0) ? _1828 : (isnan(_1828) ? 0.0 : max(_1828, 0.0));
        float _1829 = isnan(1.0) ? _4196 : (isnan(_4196) ? 1.0 : min(_4196, 1.0));
        float _1830 = _1829 * 2.0;
        float _1834 = (1.0 - _1829) / (_1829 + 1.0);
        float _4207 = isnan(0.0) ? _1834 : (isnan(_1834) ? 0.0 : max(_1834, 0.0));
        float _1835 = isnan(1.0) ? _4207 : (isnan(_4207) ? 1.0 : min(_4207, 1.0));
        float _1844 = ((((1.0 - _1835) * (_1830 + 2.0)) * exp2(log2(isnan(1.0) ? _4185 : (isnan(_4185) ? 1.0 : min(_4185, 1.0))) * (_1830 + 1.0))) + _1835) * _1751;
        float _1846 = ((_1691.z + (-0.5)) * 0.5) * _1725;
        float _1848 = ((_1698.z + (-0.5)) * 0.5) * _1732;
        float _1850 = ((_1705.z + (-0.5)) * 0.5) * _1739;
        float _1851 = dot(vec3(_1846, _1848, _1850), vec3(_1846, _1848, _1850));
        float _1856 = (_1851 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1851);
        float _1864 = (dot(vec3(_1434, _1435, _1436), vec3(_1856 * _1846, _1856 * _1848, _1856 * _1850)) + 1.0) * 0.5;
        float _4218 = isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0));
        float _1873 = sqrt(((_1848 * _1848) + (_1846 * _1846)) + (_1850 * _1850)) / (_1752 + 9.9999997473787516355514526367188e-06);
        float _4229 = isnan(0.0) ? _1873 : (isnan(_1873) ? 0.0 : max(_1873, 0.0));
        float _1874 = isnan(1.0) ? _4229 : (isnan(_4229) ? 1.0 : min(_4229, 1.0));
        float _1875 = _1874 * 2.0;
        float _1879 = (1.0 - _1874) / (_1874 + 1.0);
        float _4240 = isnan(0.0) ? _1879 : (isnan(_1879) ? 0.0 : max(_1879, 0.0));
        float _1880 = isnan(1.0) ? _4240 : (isnan(_4240) ? 1.0 : min(_4240, 1.0));
        float _1889 = ((((1.0 - _1880) * (_1875 + 2.0)) * exp2(log2(isnan(1.0) ? _4218 : (isnan(_4218) ? 1.0 : min(_4218, 1.0))) * (_1875 + 1.0))) + _1880) * _1752;
        _1897 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1799 : (isnan(_1799) ? 0.0 : max(_1799, 0.0)));
        _1898 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1844 : (isnan(_1844) ? 0.0 : max(_1844, 0.0)));
        _1899 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1889 : (isnan(_1889) ? 0.0 : max(_1889, 0.0)));
    }
    else
    {
        _1897 = 0.0;
        _1898 = 0.0;
        _1899 = 0.0;
    }
    float _2192;
    float _2193;
    float _2194;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1925 = fma(_1573, cbModelParam._m0[30u].z, fma(_1569, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1565));
        float _1929 = fma(_1573, cbModelParam._m0[31u].z, fma(_1569, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1565));
        float _1933 = fma(_1573, cbModelParam._m0[32u].z, fma(_1569, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1565));
        float _1955 = _1565 + _1434;
        float _1956 = _1569 + _1435;
        float _1957 = _1573 + _1436;
        float _1967 = fma(_1957, cbModelParam._m0[30u].z, fma(_1956, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1955)) - _1925;
        float _1968 = fma(_1957, cbModelParam._m0[31u].z, fma(_1956, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1955)) - _1929;
        float _1969 = fma(_1957, cbModelParam._m0[32u].z, fma(_1956, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1955)) - _1933;
        float _1973 = inversesqrt(dot(vec3(_1967, _1968, _1969), vec3(_1967, _1968, _1969)));
        float _1985 = ((_1973 * _1967) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1925 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1986 = ((_1973 * _1968) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1929 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1987 = ((_1973 * _1969) / cbModelParam._m0[35u].z) + ((((((_1933 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1989 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1985, _1986, _1987), 0.0);
        vec4 _1996 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1985, _1986, _1987), 0.0);
        vec4 _2003 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1985, _1986, _1987), 0.0);
        vec4 _2010 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1985, _1986, _1987), 0.0);
        float _2022 = exp2((_1989.w + (-0.5)) * 20.0) * 2.0;
        float _2029 = exp2((_1996.w + (-0.5)) * 20.0) * 2.0;
        float _2036 = exp2((_2003.w + (-0.5)) * 20.0) * 2.0;
        float _2043 = exp2((_2010.w + (-0.5)) * 20.0) * 2.0;
        float _2044 = _2043 * (_2010.x + (-0.5));
        float _2045 = _2043 * (_2010.y + (-0.5));
        float _2046 = _2043 * (_2010.z + (-0.5));
        float _2047 = isnan(0.0) ? _2044 : (isnan(_2044) ? 0.0 : max(_2044, 0.0));
        float _2048 = isnan(0.0) ? _2045 : (isnan(_2045) ? 0.0 : max(_2045, 0.0));
        float _2049 = isnan(0.0) ? _2046 : (isnan(_2046) ? 0.0 : max(_2046, 0.0));
        float _2051 = ((_1989.x + (-0.5)) * 0.5) * _2022;
        float _2053 = ((_1996.x + (-0.5)) * 0.5) * _2029;
        float _2055 = ((_2003.x + (-0.5)) * 0.5) * _2036;
        float _2056 = dot(vec3(_2051, _2053, _2055), vec3(_2051, _2053, _2055));
        float _2061 = (_2056 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2056);
        float _2069 = (dot(vec3(_1434, _1435, _1436), vec3(_2061 * _2051, _2061 * _2053, _2061 * _2055)) + 1.0) * 0.5;
        float _4281 = isnan(0.0) ? _2069 : (isnan(_2069) ? 0.0 : max(_2069, 0.0));
        float _2078 = sqrt(((_2053 * _2053) + (_2051 * _2051)) + (_2055 * _2055)) / (_2047 + 9.9999997473787516355514526367188e-06);
        float _4292 = isnan(0.0) ? _2078 : (isnan(_2078) ? 0.0 : max(_2078, 0.0));
        float _2079 = isnan(1.0) ? _4292 : (isnan(_4292) ? 1.0 : min(_4292, 1.0));
        float _2080 = _2079 * 2.0;
        float _2084 = (1.0 - _2079) / (_2079 + 1.0);
        float _4303 = isnan(0.0) ? _2084 : (isnan(_2084) ? 0.0 : max(_2084, 0.0));
        float _2085 = isnan(1.0) ? _4303 : (isnan(_4303) ? 1.0 : min(_4303, 1.0));
        float _2094 = ((((1.0 - _2085) * (_2080 + 2.0)) * exp2(log2(isnan(1.0) ? _4281 : (isnan(_4281) ? 1.0 : min(_4281, 1.0))) * (_2080 + 1.0))) + _2085) * _2047;
        float _2096 = ((_1989.y + (-0.5)) * 0.5) * _2022;
        float _2098 = ((_1996.y + (-0.5)) * 0.5) * _2029;
        float _2100 = ((_2003.y + (-0.5)) * 0.5) * _2036;
        float _2101 = dot(vec3(_2096, _2098, _2100), vec3(_2096, _2098, _2100));
        float _2106 = (_2101 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2101);
        float _2114 = (dot(vec3(_1434, _1435, _1436), vec3(_2106 * _2096, _2106 * _2098, _2106 * _2100)) + 1.0) * 0.5;
        float _4314 = isnan(0.0) ? _2114 : (isnan(_2114) ? 0.0 : max(_2114, 0.0));
        float _2123 = sqrt(((_2098 * _2098) + (_2096 * _2096)) + (_2100 * _2100)) / (_2048 + 9.9999997473787516355514526367188e-06);
        float _4325 = isnan(0.0) ? _2123 : (isnan(_2123) ? 0.0 : max(_2123, 0.0));
        float _2124 = isnan(1.0) ? _4325 : (isnan(_4325) ? 1.0 : min(_4325, 1.0));
        float _2125 = _2124 * 2.0;
        float _2129 = (1.0 - _2124) / (_2124 + 1.0);
        float _4336 = isnan(0.0) ? _2129 : (isnan(_2129) ? 0.0 : max(_2129, 0.0));
        float _2130 = isnan(1.0) ? _4336 : (isnan(_4336) ? 1.0 : min(_4336, 1.0));
        float _2139 = ((((1.0 - _2130) * (_2125 + 2.0)) * exp2(log2(isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0))) * (_2125 + 1.0))) + _2130) * _2048;
        float _2141 = ((_1989.z + (-0.5)) * 0.5) * _2022;
        float _2143 = ((_1996.z + (-0.5)) * 0.5) * _2029;
        float _2145 = ((_2003.z + (-0.5)) * 0.5) * _2036;
        float _2146 = dot(vec3(_2141, _2143, _2145), vec3(_2141, _2143, _2145));
        float _2151 = (_2146 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2146);
        float _2159 = (dot(vec3(_1434, _1435, _1436), vec3(_2151 * _2141, _2151 * _2143, _2151 * _2145)) + 1.0) * 0.5;
        float _4347 = isnan(0.0) ? _2159 : (isnan(_2159) ? 0.0 : max(_2159, 0.0));
        float _2168 = sqrt(((_2143 * _2143) + (_2141 * _2141)) + (_2145 * _2145)) / (_2049 + 9.9999997473787516355514526367188e-06);
        float _4358 = isnan(0.0) ? _2168 : (isnan(_2168) ? 0.0 : max(_2168, 0.0));
        float _2169 = isnan(1.0) ? _4358 : (isnan(_4358) ? 1.0 : min(_4358, 1.0));
        float _2170 = _2169 * 2.0;
        float _2174 = (1.0 - _2169) / (_2169 + 1.0);
        float _4369 = isnan(0.0) ? _2174 : (isnan(_2174) ? 0.0 : max(_2174, 0.0));
        float _2175 = isnan(1.0) ? _4369 : (isnan(_4369) ? 1.0 : min(_4369, 1.0));
        float _2184 = ((((1.0 - _2175) * (_2170 + 2.0)) * exp2(log2(isnan(1.0) ? _4347 : (isnan(_4347) ? 1.0 : min(_4347, 1.0))) * (_2170 + 1.0))) + _2175) * _2049;
        _2192 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2094 : (isnan(_2094) ? 0.0 : max(_2094, 0.0)));
        _2193 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2139 : (isnan(_2139) ? 0.0 : max(_2139, 0.0)));
        _2194 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2184 : (isnan(_2184) ? 0.0 : max(_2184, 0.0)));
    }
    else
    {
        _2192 = 0.0;
        _2193 = 0.0;
        _2194 = 0.0;
    }
    float _2204 = (cbModelParam._m0[1u].x * (_2192 - _1897)) + _1897;
    float _2205 = (cbModelParam._m0[1u].x * (_2193 - _1898)) + _1898;
    float _2206 = (cbModelParam._m0[1u].x * (_2194 - _1899)) + _1899;
    float _2227 = fma(_2206, cbSceneParam._m0[89u].z, fma(_2205, cbSceneParam._m0[89u].y, _2204 * cbSceneParam._m0[89u].x));
    float _2230 = fma(_2206, cbSceneParam._m0[90u].z, fma(_2205, cbSceneParam._m0[90u].y, _2204 * cbSceneParam._m0[90u].x));
    float _2233 = fma(_2206, cbSceneParam._m0[91u].z, fma(_2205, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2204));
    float _2237 = 0.959999978542327880859375 - _1509;
    float _2238 = _2237 * _1498;
    uvec4 _2244 = floatBitsToUint(cbInstanceData._m0[_1244]);
    uint _2246 = _2244.x * 14u;
    float _2253 = (cbLight._m0[_2246 + 13u].x * (_1498 + (-1.0))) + 1.0;
    uint _2254 = _2246 + 4u;
    float _2260 = isnan(1.0) ? _2253 : (isnan(_2253) ? 1.0 : min(_2253, 1.0));
    float _2269 = dot(vec3(cbLight._m0[_2246].xyz), vec3(_1434, _1435, _1436));
    float _4415 = isnan(0.0) ? _2269 : (isnan(_2269) ? 0.0 : max(_2269, 0.0));
    float _2273 = (isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0))) * 0.3183098733425140380859375;
    float _2275 = (cbLight._m0[_2254].x * _2260) * _2273;
    float _2276 = (_2260 * cbLight._m0[_2254].y) * _2273;
    float _2277 = (_2260 * cbLight._m0[_2254].z) * _2273;
    uint _2279 = _2246 + 8u;
    float _2292 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2246].w)) * _1307) * 0.949999988079071044921875);
    float _2293 = _2292 * _2292;
    float _2294 = cbLight._m0[_2246].x + _1378;
    float _2295 = cbLight._m0[_2246].y + _1379;
    float _2296 = cbLight._m0[_2246].z + _1380;
    float _2300 = inversesqrt(dot(vec3(_2294, _2295, _2296), vec3(_2294, _2295, _2296)));
    float _2301 = _2300 * _2294;
    float _2302 = _2300 * _2295;
    float _2303 = _2300 * _2296;
    float _2304 = dot(vec3(_1434, _1435, _1436), vec3(cbLight._m0[_2246].xyz));
    float _4426 = isnan(0.0) ? _2304 : (isnan(_2304) ? 0.0 : max(_2304, 0.0));
    float _2307 = isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0));
    float _2308 = dot(vec3(_1434, _1435, _1436), vec3(_1378, _1379, _1380));
    float _4437 = isnan(0.0) ? _2308 : (isnan(_2308) ? 0.0 : max(_2308, 0.0));
    float _2311 = isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0));
    float _2312 = dot(vec3(_1434, _1435, _1436), vec3(_2301, _2302, _2303));
    float _4448 = isnan(0.0) ? _2312 : (isnan(_2312) ? 0.0 : max(_2312, 0.0));
    float _2315 = isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0));
    float _2316 = dot(vec3(cbLight._m0[_2246].xyz), vec3(_2301, _2302, _2303));
    float _4459 = isnan(0.0) ? _2316 : (isnan(_2316) ? 0.0 : max(_2316, 0.0));
    float _2320 = _2293 * _2293;
    float _2324 = ((_2315 * _2315) * (_2320 + (-1.0))) + 1.0;
    float _2334 = (exp2(log2(1.0 - (isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2335 = 1.0 - _2293;
    float _2346 = (0.5 / (((_2311 * ((_2307 * _2335) + _2293)) + 9.9999999392252902907785028219223e-09) + (((_2311 * _2335) + _2293) * _2307))) * _2307;
    float _4470 = isnan(0.0) ? _2346 : (isnan(_2346) ? 0.0 : max(_2346, 0.0));
    float _2348 = (isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0))) * (_2320 / ((_2324 * _2324) * 3.141590118408203125));
    float _2351 = ((_2334 * cbLight._m0[_2279].x) * _2348) * _2260;
    float _2354 = ((_2334 * cbLight._m0[_2279].y) * _2348) * _2260;
    float _2357 = ((_2334 * cbLight._m0[_2279].z) * _2348) * _2260;
    float _2461;
    float _2463;
    float _2465;
    float _2467;
    float _2469;
    float _2471;
    if (_2244.y == 0u)
    {
        float _2402 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2403 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2402;
        float _2404 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2402;
        float _2405 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2402;
        uvec4 _2417 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2418 = _2417.x;
        uint _2429 = uint((float(_2417.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1399) / _2418))) + floor(float(uint(cbSceneParam._m0[85u].x * _1398) / _2418)));
        float _2439 = (log2(_2405 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2440 = isnan(0.0) ? _2439 : (isnan(_2439) ? 0.0 : max(_2439, 0.0));
        uint _2443 = uint(isnan(14.0) ? _2440 : (isnan(_2440) ? 14.0 : min(_2440, 14.0)));
        uvec4 _2448 = texelFetch(g_lightClusterGridBuffer, int(((_2443 << 2u) + (_2429 << 6u)) >> 2u));
        uint _2449 = _2448.x;
        uint _2450 = _2417.z;
        float _2586;
        float _2588;
        float _2590;
        float _2592;
        float _2594;
        float _2596;
        if (((((1u << ((_2450 >> 4u) & 15u)) + 4294967295u) & _2449) == 0u) || ((_2450 & 240u) == 0u))
        {
            _2586 = 0.0;
            _2588 = 0.0;
            _2590 = 0.0;
            _2592 = 0.0;
            _2594 = 0.0;
            _2596 = 0.0;
        }
        else
        {
            float _2587;
            float _2589;
            float _2591;
            float _2593;
            float _2595;
            float _2597;
            float _2790 = 0.0;
            float _2791 = 0.0;
            float _2792 = 0.0;
            float _2793 = 0.0;
            float _2794 = 0.0;
            float _2795 = 0.0;
            uint _2796 = 0u;
            uint _2805;
            bool _2806;
            for (;;)
            {
                _2805 = texelFetch(g_lightClassification, int((((_2443 << 5u) + (_2429 << 9u)) + (_2796 << 2u)) >> 2u)).x;
                _2806 = _2805 == 0u;
                float frontier_phi_22_pred;
                float frontier_phi_22_pred_1;
                float frontier_phi_22_pred_2;
                float frontier_phi_22_pred_3;
                float frontier_phi_22_pred_4;
                float frontier_phi_22_pred_5;
                if (_2806)
                {
                    frontier_phi_22_pred = _2790;
                    frontier_phi_22_pred_1 = _2795;
                    frontier_phi_22_pred_2 = _2794;
                    frontier_phi_22_pred_3 = _2793;
                    frontier_phi_22_pred_4 = _2792;
                    frontier_phi_22_pred_5 = _2791;
                }
                else
                {
                    float _3024;
                    float _3025;
                    float _3026;
                    float _3027;
                    float _3028;
                    float _3029;
                    uint _3030;
                    _3024 = _2790;
                    _3025 = _2791;
                    _3026 = _2792;
                    _3027 = _2793;
                    _3028 = _2794;
                    _3029 = _2795;
                    _3030 = _2805;
                    float _2939;
                    float _2940;
                    float _2941;
                    float _2942;
                    float _2943;
                    float _2944;
                    for (;;)
                    {
                        uint _3034 = uint(findLSB(_3030)) + (_2796 << 5u);
                        uint _3031 = (_3030 + 4294967295u) & _3030;
                        uint _3036 = _3034 * 48u;
                        vec4 _3050 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3036)).x, texelFetch(g_PointLightRenderingBuffer, int(_3036 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3036 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3036 + 3u)).x));
                        uint _3056 = (_3034 * 48u) + 4u;
                        vec4 _3069 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3056)).x, texelFetch(g_PointLightRenderingBuffer, int(_3056 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3056 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3056 + 3u)).x));
                        uint _3075 = (_3034 * 48u) + 8u;
                        vec3 _3086 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3075)).x, texelFetch(g_PointLightRenderingBuffer, int(_3075 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3075 + 2u)).x));
                        float _3090 = _3050.x - _2403;
                        float _3091 = _3050.y - _2404;
                        float _3092 = _3050.z - _2405;
                        float _3093 = dot(vec3(_3090, _3091, _3092), vec3(_3090, _3091, _3092));
                        float _3096 = inversesqrt(_3093);
                        float _3097 = _3096 * _3090;
                        float _3098 = _3096 * _3091;
                        float _3099 = _3096 * _3092;
                        float _3100 = dot(vec3(_1455, _1458, _1461), vec3(_3097, _3098, _3099));
                        float _3105 = 1.0 - (_3093 * _3050.w);
                        float _4491 = isnan(0.0) ? _3105 : (isnan(_3105) ? 0.0 : max(_3105, 0.0));
                        float _3106 = isnan(1.0) ? _4491 : (isnan(_4491) ? 1.0 : min(_4491, 1.0));
                        float _3107 = sqrt(_3093) * _3069.w;
                        float _3110 = 1.39999997615814208984375 / (_3107 + 1.39999997615814208984375);
                        float _3111 = _3110 * _3110;
                        float _3114 = ((1.0 - _3111) * _3100) + _3111;
                        float _3117 = _3107 * _3107;
                        float _3121 = ((isnan(0.0) ? _3114 : (isnan(_3114) ? 0.0 : max(_3114, 0.0))) * _3106) / ((_3117 * 0.699999988079071044921875) + 1.0);
                        float _3125 = (-0.0) - _2403;
                        float _3126 = (-0.0) - _2404;
                        float _3127 = (-0.0) - _2405;
                        float _3131 = inversesqrt(dot(vec3(_3125, _3126, _3127), vec3(_3125, _3126, _3127)));
                        float _3132 = _3131 * _3125;
                        float _3133 = _3131 * _3126;
                        float _3134 = _3131 * _3127;
                        float _3142 = exp2(log2(1.0 / ((_3117 * 3.5) + 5.0)) * 0.25);
                        float _3144 = 1.0 - sqrt(_1307);
                        float _3151 = sqrt(1.0 - ((1.0 - (_3144 * _3144)) * (1.0 - (_3142 * _3142))));
                        float _3152 = _3151 * _3151;
                        float _3153 = _3152 * _3152;
                        float _3154 = _3132 + _3097;
                        float _3155 = _3133 + _3098;
                        float _3156 = _3134 + _3099;
                        float _3160 = inversesqrt(dot(vec3(_3154, _3155, _3156), vec3(_3154, _3155, _3156)));
                        float _3164 = dot(vec3(_1455, _1458, _1461), vec3(_3132, _3133, _3134));
                        float _4507 = isnan(0.0) ? _3164 : (isnan(_3164) ? 0.0 : max(_3164, 0.0));
                        float _3167 = isnan(1.0) ? _4507 : (isnan(_4507) ? 1.0 : min(_4507, 1.0));
                        float _3168 = dot(vec3(_1455, _1458, _1461), vec3(_3160 * _3154, _3160 * _3155, _3160 * _3156));
                        float _4518 = isnan(0.0) ? _3168 : (isnan(_3168) ? 0.0 : max(_3168, 0.0));
                        float _3171 = isnan(1.0) ? _4518 : (isnan(_4518) ? 1.0 : min(_4518, 1.0));
                        float _3175 = ((_3171 * _3171) * (_3153 + (-1.0))) + 1.0;
                        float _3176 = _3110 * _3152;
                        float _3177 = _3176 * _3176;
                        float _3180 = ((1.0 - _3177) * _3100) + _3177;
                        float _4529 = isnan(0.0) ? _3180 : (isnan(_3180) ? 0.0 : max(_3180, 0.0));
                        float _3181 = isnan(1.0) ? _4529 : (isnan(_4529) ? 1.0 : min(_4529, 1.0));
                        float _3182 = 1.0 - _3152;
                        float _3192 = (0.5 / (((_3181 * ((_3167 * _3182) + _3152)) + 9.9999999392252902907785028219223e-09) + (((_3181 * _3182) + _3152) * _3167))) * _3181;
                        float _4540 = isnan(0.0) ? _3192 : (isnan(_3192) ? 0.0 : max(_3192, 0.0));
                        float _3203 = (((_3153 * 3.1415927410125732421875) * (isnan(1.0) ? _4540 : (isnan(_4540) ? 1.0 : min(_4540, 1.0)))) / ((_3175 * _3175) * ((_3117 * 2.1991131305694580078125) + 3.141590118408203125))) * _3106;
                        _2942 = (_3121 * _3069.x) + _3027;
                        _2943 = (_3121 * _3069.y) + _3028;
                        _2944 = (_3121 * _3069.z) + _3029;
                        _2939 = (_3203 * _3086.x) + _3024;
                        _2940 = (_3203 * _3086.y) + _3025;
                        _2941 = (_3203 * _3086.z) + _3026;
                        if (_3031 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3024 = _2939;
                            _3025 = _2940;
                            _3026 = _2941;
                            _3027 = _2942;
                            _3028 = _2943;
                            _3029 = _2944;
                            _3030 = _3031;
                        }
                    }
                    frontier_phi_22_pred = _2939;
                    frontier_phi_22_pred_1 = _2944;
                    frontier_phi_22_pred_2 = _2943;
                    frontier_phi_22_pred_3 = _2942;
                    frontier_phi_22_pred_4 = _2941;
                    frontier_phi_22_pred_5 = _2940;
                }
                _2587 = frontier_phi_22_pred;
                _2597 = frontier_phi_22_pred_1;
                _2595 = frontier_phi_22_pred_2;
                _2593 = frontier_phi_22_pred_3;
                _2591 = frontier_phi_22_pred_4;
                _2589 = frontier_phi_22_pred_5;
                uint _2797 = _2796 + 1u;
                if (_2797 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2790 = _2587;
                    _2791 = _2589;
                    _2792 = _2591;
                    _2793 = _2593;
                    _2794 = _2595;
                    _2795 = _2597;
                    _2796 = _2797;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2586 = _2587;
            _2588 = _2589;
            _2590 = _2591;
            _2592 = _2593;
            _2594 = _2595;
            _2596 = _2597;
        }
        uvec4 _2600 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2601 = _2600.z;
        uint _2603 = (_2601 >> 8u) & 15u;
        float _2758;
        float _2760;
        float _2762;
        float _2764;
        float _2766;
        float _2768;
        if (((4294967295u << _2603) & _2449) == 0u)
        {
            _2758 = _2586;
            _2760 = _2588;
            _2762 = _2590;
            _2764 = _2592;
            _2766 = _2594;
            _2768 = _2596;
        }
        else
        {
            float _2783 = inversesqrt(dot(vec3(_2403, _2404, _2405), vec3(_2403, _2404, _2405)));
            float _2784 = _2783 * _2403;
            float _2785 = _2783 * _2404;
            float _2786 = _2783 * _2405;
            float frontier_phi_16_17_ladder;
            float frontier_phi_16_17_ladder_1;
            float frontier_phi_16_17_ladder_2;
            float frontier_phi_16_17_ladder_3;
            float frontier_phi_16_17_ladder_4;
            float frontier_phi_16_17_ladder_5;
            if (_2603 < ((_2601 >> 12u) & 15u))
            {
                float _2759;
                float _2761;
                float _2763;
                float _2765;
                float _2767;
                float _2769;
                float _3007 = _2586;
                float _3008 = _2588;
                float _3009 = _2590;
                float _3010 = _2592;
                float _3011 = _2594;
                float _3012 = _2596;
                uint _3013 = _2603;
                uint _3022;
                bool _3023;
                for (;;)
                {
                    _3022 = texelFetch(g_lightClassification, int((((_2443 << 5u) + (_2429 << 9u)) + (_3013 << 2u)) >> 2u)).x;
                    _3023 = _3022 == 0u;
                    float frontier_phi_34_pred;
                    float frontier_phi_34_pred_1;
                    float frontier_phi_34_pred_2;
                    float frontier_phi_34_pred_3;
                    float frontier_phi_34_pred_4;
                    float frontier_phi_34_pred_5;
                    if (_3023)
                    {
                        frontier_phi_34_pred = _3011;
                        frontier_phi_34_pred_1 = _3012;
                        frontier_phi_34_pred_2 = _3007;
                        frontier_phi_34_pred_3 = _3008;
                        frontier_phi_34_pred_4 = _3009;
                        frontier_phi_34_pred_5 = _3010;
                    }
                    else
                    {
                        float _3251;
                        float _3252;
                        float _3253;
                        float _3254;
                        float _3255;
                        float _3256;
                        float _3554;
                        float _3555;
                        float _3556;
                        float _3557;
                        float _3558;
                        float _3559;
                        float _3273 = _3007;
                        float _3274 = _3008;
                        float _3275 = _3009;
                        float _3276 = _3010;
                        float _3277 = _3011;
                        float _3278 = _3012;
                        uint _3279 = _3022;
                        uint _3280;
                        vec4 _3305;
                        float _3306;
                        vec4 _3321;
                        vec3 _3333;
                        vec4 _3348;
                        vec4 _3363;
                        float _3409;
                        bool _3410;
                        for (;;)
                        {
                            uint _3290 = ((_3013 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3279));
                            _3280 = (_3279 + 4294967295u) & _3279;
                            uint _3292 = _3290 * 40u;
                            _3305 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3292)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3292 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3292 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3292 + 3u)).x));
                            _3306 = _3305.w;
                            uint _3308 = (_3290 * 40u) + 4u;
                            _3321 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3308)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3308 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3308 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3308 + 3u)).x));
                            uint _3323 = (_3290 * 40u) + 8u;
                            _3333 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3323)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3323 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3323 + 2u)).x));
                            uint _3335 = (_3290 * 40u) + 16u;
                            _3348 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3335)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3335 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3335 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3335 + 3u)).x));
                            uint _3350 = (_3290 * 40u) + 20u;
                            _3363 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3350)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3350 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3350 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3350 + 3u)).x));
                            uint _3365 = (_3290 * 40u) + 24u;
                            vec4 _3378 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3365)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3365 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3365 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3365 + 3u)).x));
                            uint _3384 = (_3290 * 40u) + 28u;
                            vec4 _3397 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3384)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3384 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3384 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3384 + 3u)).x));
                            _3409 = fma(_2405, _3397.z, fma(_2404, _3397.y, _3397.x * _2403)) + _3397.w;
                            _3410 = !((fma(_2405, _3378.z, fma(_2404, _3378.y, _3378.x * _2403)) + _3378.w) <= 0.0);
                            float frontier_phi_43_pred;
                            float frontier_phi_43_pred_1;
                            float frontier_phi_43_pred_2;
                            float frontier_phi_43_pred_3;
                            float frontier_phi_43_pred_4;
                            float frontier_phi_43_pred_5;
                            if (_3410)
                            {
                                float _3437 = _3305.x - _2403;
                                float _3438 = _3305.y - _2404;
                                float _3439 = _3305.z - _2405;
                                float _3440 = dot(vec3(_3437, _3438, _3439), vec3(_3437, _3438, _3439));
                                float _3443 = inversesqrt(_3440);
                                float _3444 = _3443 * _3437;
                                float _3445 = _3443 * _3438;
                                float _3446 = _3443 * _3439;
                                float _3450 = 1.0 - (_3440 / (_3306 * _3306));
                                float _4551 = isnan(0.0) ? _3450 : (isnan(_3450) ? 0.0 : max(_3450, 0.0));
                                float _3451 = isnan(1.0) ? _4551 : (isnan(_4551) ? 1.0 : min(_4551, 1.0));
                                float _3455 = sqrt(_3440) * _3321.w;
                                float _3457 = 1.39999997615814208984375 / (_3455 + 1.39999997615814208984375);
                                float _3458 = _3457 * _3457;
                                float _3461 = ((1.0 - _3458) * dot(vec3(_3444, _3445, _3446), vec3(_1455, _1458, _1461))) + _3458;
                                float _3464 = _3455 * _3455;
                                float _3468 = (fma(_2405, _3348.z, fma(_2404, _3348.y, _3348.x * _2403)) + _3348.w) / _3409;
                                float _3469 = (fma(_2405, _3363.z, fma(_2404, _3363.y, _3363.x * _2403)) + _3363.w) / _3409;
                                float _3473 = 1.0 - dot(vec2(_3468, _3469), vec2(_3468, _3469));
                                float _4567 = isnan(0.0) ? _3473 : (isnan(_3473) ? 0.0 : max(_3473, 0.0));
                                float _3474 = isnan(1.0) ? _4567 : (isnan(_4567) ? 1.0 : min(_4567, 1.0));
                                float _3475 = _3474 * (((isnan(0.0) ? _3461 : (isnan(_3461) ? 0.0 : max(_3461, 0.0))) * _3451) / ((_3464 * 0.699999988079071044921875) + 1.0));
                                float _3487 = exp2(log2(1.0 / ((_3464 * 3.5) + 5.0)) * 0.25);
                                float _3489 = 1.0 - sqrt(_1307);
                                float _3496 = sqrt(1.0 - ((1.0 - (_3489 * _3489)) * (1.0 - (_3487 * _3487))));
                                float _3497 = _3496 * _3496;
                                float _3498 = _3497 * _3497;
                                float _3499 = _3444 - _2784;
                                float _3500 = _3445 - _2785;
                                float _3501 = _3446 - _2786;
                                float _3505 = inversesqrt(dot(vec3(_3499, _3500, _3501), vec3(_3499, _3500, _3501)));
                                float _3509 = dot(vec3(_1455, _1458, _1461), vec3((-0.0) - _2784, (-0.0) - _2785, (-0.0) - _2786));
                                float _4578 = isnan(0.0) ? _3509 : (isnan(_3509) ? 0.0 : max(_3509, 0.0));
                                float _3512 = isnan(1.0) ? _4578 : (isnan(_4578) ? 1.0 : min(_4578, 1.0));
                                float _3513 = dot(vec3(_1455, _1458, _1461), vec3(_3505 * _3499, _3505 * _3500, _3505 * _3501));
                                float _4589 = isnan(0.0) ? _3513 : (isnan(_3513) ? 0.0 : max(_3513, 0.0));
                                float _3516 = isnan(1.0) ? _4589 : (isnan(_4589) ? 1.0 : min(_4589, 1.0));
                                float _3520 = ((_3516 * _3516) * (_3498 + (-1.0))) + 1.0;
                                float _3521 = _3457 * _3497;
                                float _3522 = _3521 * _3521;
                                float _3528 = ((1.0 - _3522) * dot(vec3(_1455, _1458, _1461), vec3(_3444, _3445, _3446))) + _3522;
                                float _4600 = isnan(0.0) ? _3528 : (isnan(_3528) ? 0.0 : max(_3528, 0.0));
                                float _3529 = isnan(1.0) ? _4600 : (isnan(_4600) ? 1.0 : min(_4600, 1.0));
                                float _3530 = 1.0 - _3497;
                                float _3540 = (0.5 / (((_3529 * ((_3512 * _3530) + _3497)) + 9.9999999392252902907785028219223e-09) + (((_3529 * _3530) + _3497) * _3512))) * _3529;
                                float _4611 = isnan(0.0) ? _3540 : (isnan(_3540) ? 0.0 : max(_3540, 0.0));
                                float _3550 = (_3474 * _3451) * (((_3498 * 3.1415927410125732421875) * (isnan(1.0) ? _4611 : (isnan(_4611) ? 1.0 : min(_4611, 1.0)))) / ((_3520 * _3520) * ((_3464 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_43_pred = _3475 * _3321.x;
                                frontier_phi_43_pred_1 = _3475 * _3321.z;
                                frontier_phi_43_pred_2 = _3475 * _3321.y;
                                frontier_phi_43_pred_3 = _3550 * _3333.z;
                                frontier_phi_43_pred_4 = _3550 * _3333.y;
                                frontier_phi_43_pred_5 = _3550 * _3333.x;
                            }
                            else
                            {
                                frontier_phi_43_pred = 0.0;
                                frontier_phi_43_pred_1 = 0.0;
                                frontier_phi_43_pred_2 = 0.0;
                                frontier_phi_43_pred_3 = 0.0;
                                frontier_phi_43_pred_4 = 0.0;
                                frontier_phi_43_pred_5 = 0.0;
                            }
                            _3557 = frontier_phi_43_pred;
                            _3559 = frontier_phi_43_pred_1;
                            _3558 = frontier_phi_43_pred_2;
                            _3556 = frontier_phi_43_pred_3;
                            _3555 = frontier_phi_43_pred_4;
                            _3554 = frontier_phi_43_pred_5;
                            _3254 = _3557 + _3276;
                            _3255 = _3558 + _3277;
                            _3256 = _3559 + _3278;
                            _3251 = _3554 + _3273;
                            _3252 = _3555 + _3274;
                            _3253 = _3556 + _3275;
                            if (_3280 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3273 = _3251;
                                _3274 = _3252;
                                _3275 = _3253;
                                _3276 = _3254;
                                _3277 = _3255;
                                _3278 = _3256;
                                _3279 = _3280;
                                continue;
                            }
                        }
                        frontier_phi_34_pred = _3255;
                        frontier_phi_34_pred_1 = _3256;
                        frontier_phi_34_pred_2 = _3251;
                        frontier_phi_34_pred_3 = _3252;
                        frontier_phi_34_pred_4 = _3253;
                        frontier_phi_34_pred_5 = _3254;
                    }
                    _2767 = frontier_phi_34_pred;
                    _2769 = frontier_phi_34_pred_1;
                    _2759 = frontier_phi_34_pred_2;
                    _2761 = frontier_phi_34_pred_3;
                    _2763 = frontier_phi_34_pred_4;
                    _2765 = frontier_phi_34_pred_5;
                    uint _3014 = _3013 + 1u;
                    if (_3014 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3007 = _2759;
                        _3008 = _2761;
                        _3009 = _2763;
                        _3010 = _2765;
                        _3011 = _2767;
                        _3012 = _2769;
                        _3013 = _3014;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_16_17_ladder = _2759;
                frontier_phi_16_17_ladder_1 = _2767;
                frontier_phi_16_17_ladder_2 = _2769;
                frontier_phi_16_17_ladder_3 = _2765;
                frontier_phi_16_17_ladder_4 = _2763;
                frontier_phi_16_17_ladder_5 = _2761;
            }
            else
            {
                frontier_phi_16_17_ladder = _2586;
                frontier_phi_16_17_ladder_1 = _2594;
                frontier_phi_16_17_ladder_2 = _2596;
                frontier_phi_16_17_ladder_3 = _2592;
                frontier_phi_16_17_ladder_4 = _2590;
                frontier_phi_16_17_ladder_5 = _2588;
            }
            _2758 = frontier_phi_16_17_ladder;
            _2760 = frontier_phi_16_17_ladder_5;
            _2762 = frontier_phi_16_17_ladder_4;
            _2764 = frontier_phi_16_17_ladder_3;
            _2766 = frontier_phi_16_17_ladder_1;
            _2768 = frontier_phi_16_17_ladder_2;
        }
        float _2773 = isnan(1.0) ? _1498 : (isnan(_1498) ? 1.0 : min(_1498, 1.0));
        _2461 = (_2773 * _2764) + _2275;
        _2463 = (_2773 * _2766) + _2276;
        _2465 = (_2773 * _2768) + _2277;
        _2467 = ((_2758 * 0.039999999105930328369140625) * _2773) + _2351;
        _2469 = ((_2760 * 0.039999999105930328369140625) * _2773) + _2354;
        _2471 = ((_2762 * 0.039999999105930328369140625) * _2773) + _2357;
    }
    else
    {
        _2461 = _2275;
        _2463 = _2276;
        _2465 = _2277;
        _2467 = _2351;
        _2469 = _2354;
        _2471 = _2357;
    }
    float _2491 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2492 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2493 = cbSceneParam._m0[86u].x * ((_1398 / cbSceneParam._m0[86u].x) + ((_1514 * cbMtdParam._m0[12u].y) * dot(vec3(_1434, _1435, _1436), vec3(_226, _227, _228))));
    float _2494 = isnan(_2491) ? _2493 : (isnan(_2493) ? _2491 : min(_2493, _2491));
    float _2495 = isnan(_2492) ? _1399 : (isnan(_1399) ? _2492 : min(_1399, _2492));
    vec4 _2497 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2494, _2495), 0.0);
    float _2499 = _2497.x;
    bool _2519 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2499)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2499))) > _1322;
    float _2520 = _2519 ? _2494 : _1398;
    float _2521 = _2519 ? _2495 : _1399;
    vec4 _2523 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2520, _2521));
    vec4 _2528 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2520, _2521));
    float _2530 = _2528.x;
    bool _2535 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _2544 = (-0.0) - cbSceneParam._m0[2u].z;
    float _2550 = (_2535 ? (_2544 / (cbSceneParam._m0[2u].x - _2530)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2530))) - _1322;
    float _2552 = cbMtdParam._m0[42u].y + cbMtdParam._m0[36u].y;
    float _2553 = cbMtdParam._m0[42u].z + cbMtdParam._m0[36u].z;
    float _2554 = cbMtdParam._m0[42u].w + cbMtdParam._m0[36u].w;
    bool _2560 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _2564 = (isnan(_2550) ? 0.0 : (isnan(0.0) ? _2550 : max(0.0, _2550))) * (-1.44269502162933349609375);
    float _4642 = isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0));
    float _4653 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
    float _4664 = isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0));
    float _2687;
    float _2688;
    float _2689;
    if ((1.0 - _1229) > 0.00999999977648258209228515625)
    {
        vec4 _2608 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2520, _2521), 0.0);
        float _2610 = _2608.x;
        float _2616 = (_2535 ? (_2544 / (cbSceneParam._m0[2u].x - _2610)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2610))) - _1322;
        uint _2622 = floatBitsToUint(cbInstanceData._m0[_1244]).x * 14u;
        uint _2628 = _2622 + 4u;
        float _2637 = dot(vec3(cbLight._m0[_2622].xyz), vec3(_247, _248, _249));
        float _2644 = dot(vec3((-0.0) - _1378, (-0.0) - _1379, (-0.0) - _1380), vec3((-0.0) - _247, (-0.0) - _248, (-0.0) - _249));
        float _2649 = ((isnan(0.0) ? _2644 : (isnan(_2644) ? 0.0 : max(_2644, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _2637 : (isnan(_2637) ? 0.001000000047497451305389404296875 : max(_2637, 0.001000000047497451305389404296875)))) + 1.0;
        float _2651 = (-0.0) - ((isnan(_2616) ? 0.0 : (isnan(0.0) ? _2616 : max(0.0, _2616))) * _2649);
        _2687 = _2560 ? 0.0 : ((((_1288 * cbMtdParam._m0[36u].y) * cbLight._m0[_2628].x) / ((_2649 * _2552) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2552 * 1.44269502162933349609375) * _2651)));
        _2688 = _2560 ? 0.0 : ((((_1288 * cbMtdParam._m0[36u].z) * cbLight._m0[_2628].y) / ((_2649 * _2553) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2553 * 1.44269502162933349609375) * _2651)));
        _2689 = _2560 ? 0.0 : ((((_1288 * cbMtdParam._m0[36u].w) * cbLight._m0[_2628].z) / ((_2649 * _2554) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2554 * 1.44269502162933349609375) * _2651)));
    }
    else
    {
        _2687 = 0.0;
        _2688 = 0.0;
        _2689 = 0.0;
    }
    float _2705 = (_2687 + ((exp2(_2564 * (_2560 ? 0.0 : _2552)) * _2523.x) * cbSceneParam._m0[72u].w)) * _2237;
    float _2706 = (_2688 + ((exp2(_2564 * (_2560 ? 0.0 : _2553)) * _2523.y) * cbSceneParam._m0[72u].w)) * _2237;
    float _2707 = (_2689 + ((exp2(_2564 * (_2560 ? 0.0 : _2554)) * _2523.z) * cbSceneParam._m0[72u].w)) * _2237;
    float _2715 = (_2705 + ((_2467 + ((_1529.x * _1510) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4642 : (isnan(_4642) ? 1.0 : min(_4642, 1.0))) * (_2461 + (_2238 * (isnan(0.0) ? _2227 : (isnan(_2227) ? 0.0 : max(_2227, 0.0)))))) - _2705) * _1229);
    float _2717 = (_2706 + ((_2469 + ((_1529.y * _1510) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4653 : (isnan(_4653) ? 1.0 : min(_4653, 1.0))) * (_2463 + (_2238 * (isnan(0.0) ? _2230 : (isnan(_2230) ? 0.0 : max(_2230, 0.0)))))) - _2706) * _1229);
    float _2719 = (_2707 + ((_2471 + ((_1529.z * _1510) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4664 : (isnan(_4664) ? 1.0 : min(_4664, 1.0))) * (_2465 + (_2238 * (isnan(0.0) ? _2233 : (isnan(_2233) ? 0.0 : max(_2233, 0.0)))))) - _2707) * _1229);
    float _2724 = cbInstanceData._m0[_1243 + 6u].w * (isnan(1.0) ? _4016 : (isnan(_4016) ? 1.0 : min(_4016, 1.0)));
    float _2729 = _1398 / cbSceneParam._m0[86u].x;
    float _2730 = _1399 / cbSceneParam._m0[86u].y;
    vec4 _2744 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2729, _2730, (log2((isnan(cbSceneParam._m0[77u].w) ? _1322 : (isnan(_1322) ? cbSceneParam._m0[77u].w : min(_1322, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2746 = _2744.x;
    float _2747 = _2744.y;
    float _2748 = _2744.z;
    float _2749 = _2744.w;
    float _2847;
    float _2849;
    float _2851;
    float _2853;
    if (_1322 > cbSceneParam._m0[78u].w)
    {
        float _2811 = isnan(_1322) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1322 : min(cbSceneParam._m0[80u].w, _1322));
        float _2812 = _2811 / _1322;
        float _2823 = _2812 * _1371;
        float _2824 = _1372 * _2812;
        float _2825 = (-0.0) - _2824;
        float _2826 = _2812 * _1373;
        float _2828 = (cbSceneParam._m0[77u].w * _2825) / _2811;
        float _2829 = _2828 + cbSceneParam._m0[79u].w;
        float _2830 = cbSceneParam._m0[79u].w - _2824;
        float _2836 = sqrt(((_2823 * _2823) + (_2824 * _2824)) + (_2826 * _2826));
        float _2839 = (1.0 - (cbSceneParam._m0[77u].w / _2811)) * _2836;
        float _2845 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2846 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3208;
        if (abs((_2825 - _2828) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3208 = ((((_2829 > 0.0) ? exp2(_2845 * _2829) : (2.0 - exp2(_2846 * _2829))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2839;
        }
        else
        {
            float _2964 = 1.0 / cbSceneParam._m0[80u].x;
            float _2965 = isnan(_2830) ? _2829 : (isnan(_2829) ? _2830 : max(_2829, _2830));
            float _2966 = isnan(_2830) ? _2829 : (isnan(_2829) ? _2830 : min(_2829, _2830));
            float _2975 = isnan(0.0) ? _2965 : (isnan(_2965) ? 0.0 : min(_2965, 0.0));
            float _2976 = isnan(0.0) ? _2966 : (isnan(_2966) ? 0.0 : min(_2966, 0.0));
            _3208 = ((abs(_2836 / _2825) * cbSceneParam._m0[80u].y) * ((((_2975 - _2976) * 2.0) - ((exp2(_2845 * (isnan(0.0) ? _2965 : (isnan(_2965) ? 0.0 : max(_2965, 0.0)))) - exp2(_2845 * (isnan(0.0) ? _2966 : (isnan(_2966) ? 0.0 : max(_2966, 0.0))))) * _2964)) - ((exp2(_2846 * _2975) - exp2(_2846 * _2976)) * _2964))) + (_2839 * cbSceneParam._m0[80u].z);
        }
        vec4 _3210 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2729, _2730, 1.0), 0.0);
        float _3219 = exp2((_3208 * (-1.44269502162933349609375)) * (1.0 - _3210.w));
        float _3220 = log2(_3219);
        float _3236 = log2(_2749);
        _2847 = (exp2(_3236 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3220 * cbSceneParam._m0[78u].x)) * _3210.x) / cbSceneParam._m0[78u].x)) + _2746;
        _2849 = (exp2(_3236 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3220 * cbSceneParam._m0[78u].y)) * _3210.y) / cbSceneParam._m0[78u].y)) + _2747;
        _2851 = (exp2(_3236 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3220 * cbSceneParam._m0[78u].z)) * _3210.z) / cbSceneParam._m0[78u].z)) + _2748;
        _2853 = _3219 * _2749;
    }
    else
    {
        _2847 = _2746;
        _2849 = _2747;
        _2851 = _2748;
        _2853 = _2749;
    }
    bool _3246;
    float _2909;
    vec4 _2912;
    float _2914;
    vec4 _2916;
    float _2924;
    float _2925;
    float _2926;
    float _2927;
    bool _2938;
    for (;;)
    {
        bool _2865 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2867 = log2(_2853);
        float _2874 = exp2(_2867 * cbSceneParam._m0[78u].x) * _2715;
        float _2875 = exp2(_2867 * cbSceneParam._m0[78u].y) * _2717;
        float _2876 = exp2(_2867 * cbSceneParam._m0[78u].z) * _2719;
        vec4 _2884 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1398, _1399));
        float _2886 = _2884.x;
        float _2907 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2886)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2886))) - _1322) * cbMtdParam._m0[14u].w;
        float _4730 = isnan(0.0) ? _2907 : (isnan(_2907) ? 0.0 : max(_2907, 0.0));
        _2909 = _2724 * (isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0)));
        float _2910 = _1387 + (-0.5);
        _2912 = cbMtdParam._m0[1u];
        _2914 = _2912.y * _2910;
        _2916 = cbMatDynParam._m0[0u];
        float _2923 = (roundEven(_2916.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2924 = _2923 * (_2865 ? _2874 : (_2874 + (cbSceneParam._m0[72u].w * _2847)));
        _2925 = _2923 * (_2865 ? _2875 : (_2875 + (cbSceneParam._m0[72u].w * _2849)));
        _2926 = _2923 * (_2865 ? _2876 : (_2876 + (cbSceneParam._m0[72u].w * _2851)));
        _2927 = _2910 * 0.999000012874603271484375;
        _2938 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2938)
        {
            if ((cbInstanceData._m0[_1243 + 7u].x + _2927) < 0.5)
            {
                _3246 = true;
                break;
            }
        }
        uint _2999 = _1474 + uint(_2916.w);
        if ((cbInstanceData._m0[_2999].w < 1.0) && ((cbInstanceData._m0[_2999].w + _2927) < 0.5))
        {
            _3246 = true;
            break;
        }
        if ((_2914 + 1.0) < _2912.x)
        {
            _3246 = true;
            break;
        }
        _3246 = false;
        break;
    }
    float _3264;
    if (_3246)
    {
        discard_state = true;
        _3264 = 0.0;
    }
    else
    {
        _3264 = _2909;
    }
    SV_Target.x = _2924;
    SV_Target.y = _2925;
    SV_Target.z = _2926;
    SV_Target.w = _3264;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2909;
    discard_exit();
}


