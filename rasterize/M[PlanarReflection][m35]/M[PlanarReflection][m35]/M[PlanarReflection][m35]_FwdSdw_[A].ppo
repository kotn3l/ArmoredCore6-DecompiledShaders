#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[46];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 54) uniform texture2D g_ReflectionTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 57) uniform texture2D g_WaterSimulationNormalTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_5;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in vec4 TEXCOORD_8;
layout(location = 7) in float TEXCOORD_11;
layout(location = 7, component = 1) in float TEXCOORD_12;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _3925;
float _3926;
float _3927;
float _3928;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _221 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _222 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _223 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _229 = inversesqrt(dot(vec3(_221, _222, _223), vec3(_221, _222, _223)));
    float _230 = _229 * _221;
    float _231 = _229 * _222;
    float _232 = _229 * _223;
    float _236 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _237 = _236 * NORMAL.x;
    float _238 = _236 * NORMAL.y;
    float _239 = _236 * NORMAL.z;
    float _243 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _251;
    float _252;
    float _253;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _251 = (-0.0) - _237;
        _252 = (-0.0) - _238;
        _253 = (-0.0) - _239;
    }
    else
    {
        _251 = _237;
        _252 = _238;
        _253 = _239;
    }
    float _299 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _309 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _299);
    float _310 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _299);
    float _311 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _299);
    float _326 = cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x;
    vec4 _343 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_2, SS_BumpMap), vec2((((_326 * cbMtdParam._m0[27u].y) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_326 * cbMtdParam._m0[27u].z) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _346 = _343.x;
    float _347 = _343.y;
    float _348 = _343.z;
    float _349 = _343.w;
    float _362 = cbMtdParam._m0[14u].y - cbMtdParam._m0[14u].x;
    float _365 = (sqrt(((_309 * _309) + (_310 * _310)) + (_311 * _311)) - cbMtdParam._m0[14u].x) / (isnan(0.001000000047497451305389404296875) ? _362 : (isnan(_362) ? 0.001000000047497451305389404296875 : max(_362, 0.001000000047497451305389404296875)));
    float _366 = _365 + 0.180000007152557373046875;
    float _368 = _366 * 12.0;
    float _3942 = isnan(0.0) ? _368 : (isnan(_368) ? 0.0 : max(_368, 0.0));
    float _371 = isnan(1.0) ? _3942 : (isnan(_3942) ? 1.0 : min(_3942, 1.0));
    vec4 _383 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _385 = _383.x;
    float _407 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _385)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _385))) - POSITION_1.w;
    float _408 = _407 / ((_371 * 0.0599999986588954925537109375) + 0.0599999986588954925537109375);
    float _3953 = isnan(0.0) ? _408 : (isnan(_408) ? 0.0 : max(_408, 0.0));
    float _409 = isnan(1.0) ? _3953 : (isnan(_3953) ? 1.0 : min(_3953, 1.0));
    float _410 = isnan(0.5) ? _409 : (isnan(_409) ? 0.5 : max(_409, 0.5));
    float _412 = 1.0 - _410;
    float _413 = _366 * 7.0;
    float _3969 = isnan(0.0) ? _413 : (isnan(_413) ? 0.0 : max(_413, 0.0));
    float _415 = isnan(1.0) ? _3969 : (isnan(_3969) ? 1.0 : min(_3969, 1.0));
    float _428 = (_348 * 0.00200000009499490261077880859375) + TEXCOORD.x;
    float _429 = (_348 * 0.00999999977648258209228515625) + TEXCOORD.y;
    vec4 _443 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[25u].w * _326) + _428) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[26u].x * _326) + _429) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _445 = _443.x;
    float _470 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[23u].w * _428) + (cbMtdParam._m0[26u].w * _326)) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[24u].x * _429) + (cbMtdParam._m0[27u].x * _326)) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x + (-0.0500000007450580596923828125);
    float _473 = (isnan(_470) ? _445 : (isnan(_445) ? _470 : max(_445, _470))) - _415;
    float _3985 = isnan(0.0) ? _473 : (isnan(_473) ? 0.0 : max(_473, 0.0));
    float _474 = isnan(1.0) ? _3985 : (isnan(_3985) ? 1.0 : min(_3985, 1.0));
    float _475 = _415 + 0.5;
    float _3996 = isnan(0.0) ? _475 : (isnan(_475) ? 0.0 : max(_475, 0.0));
    float _486 = cbMtdParam._m0[16u].w * _326;
    float _487 = cos(_486);
    float _488 = sin(_486);
    vec4 _512 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((((_488 * cbMtdParam._m0[31u].y) + TEXCOORD.x) + (cbMtdParam._m0[22u].y * _326)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((_487 * cbMtdParam._m0[31u].z) + TEXCOORD.y) + (cbMtdParam._m0[22u].z * _326)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _516 = _512.z;
    vec4 _531 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[21u].w * _326) + TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[22u].x * _326) + TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _535 = _531.z;
    float _538 = (isnan(_535) ? _516 : (isnan(_516) ? _535 : max(_516, _535))) * (isnan(1.0) ? _3996 : (isnan(_3996) ? 1.0 : min(_3996, 1.0)));
    float _4012 = isnan(0.0) ? _538 : (isnan(_538) ? 0.0 : max(_538, 0.0));
    float _539 = isnan(1.0) ? _4012 : (isnan(_4012) ? 1.0 : min(_4012, 1.0));
    float _542 = (_412 - _349) + (isnan(_539) ? _474 : (isnan(_474) ? _539 : max(_474, _539)));
    float _4028 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0));
    float _543 = isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0));
    float _544 = _543 * _410;
    float _4039 = isnan(0.0) ? _365 : (isnan(_365) ? 0.0 : max(_365, 0.0));
    float _553 = isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0));
    float _554 = _348 - _553;
    float _4050 = isnan(0.0) ? _554 : (isnan(_554) ? 0.0 : max(_554, 0.0));
    float _555 = isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0));
    vec4 _611 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[23u].y * _326) + (cbMtdParam._m0[30u].w * _488)) + (cbMtdParam._m0[34u].w * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[23u].z * _326) + (cbMtdParam._m0[31u].x * _487)) + (cbMtdParam._m0[35u].x * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _638 = cbMtdParam._m0[38u].x * TEXCOORD_5.x;
    float _697 = ((((((_611.w + (-0.5)) * cbMtdParam._m0[44u].x) + (cbMtdParam._m0[39u].z * (_512.w + (-0.5)))) + (cbMtdParam._m0[40u].y * (_531.w + (-0.5)))) + (((_638 + cbMtdParam._m0[41u].w) * cos(cbMtdParam._m0[13u].y * _326)) * (texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[32u].w * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[33u].x * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) + ((sin(cbMtdParam._m0[13u].x * _326) * (cbMtdParam._m0[41u].x + _638)) * (texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[31u].w * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[32u].x * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) * (1.0 - TEXCOORD_5.y);
    float _724 = 1.0 - _349;
    float _729 = ((isnan(0.550000011920928955078125) ? _724 : (isnan(_724) ? 0.550000011920928955078125 : max(_724, 0.550000011920928955078125))) + (-0.550000011920928955078125)) * cbMtdParam._m0[16u].z;
    float _732 = ((TEXCOORD_5.y * (-0.5)) * _729) + _729;
    float _736 = ((TEXCOORD_5.z * (-0.699999988079071044921875)) * _732) + _732;
    float _746 = (((_697 + ((cbMtdParam._m0[37u].y - (cbMtdParam._m0[37u].y * TEXCOORD_5.y)) * _348)) + ((texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[35u].w * TEXCOORD.x) + (cbMtdParam._m0[22u].w * _326)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[36u].x * TEXCOORD.y) + (cbMtdParam._m0[23u].x * _326)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).w + (-0.5)) * cbMtdParam._m0[44u].w)) + ((sin(cbMtdParam._m0[21u].y * _326) * cbMtdParam._m0[38u].w) * (isnan(0.300000011920928955078125) ? TEXCOORD_5.z : (isnan(TEXCOORD_5.z) ? 0.300000011920928955078125 : max(TEXCOORD_5.z, 0.300000011920928955078125))))) + _736;
    float _749 = (_746 + cbMtdParam._m0[20u].z) * cbMtdParam._m0[20u].w;
    float _4071 = isnan(0.0) ? _749 : (isnan(_749) ? 0.0 : max(_749, 0.0));
    float _750 = isnan(1.0) ? _4071 : (isnan(_4071) ? 1.0 : min(_4071, 1.0));
    float _762 = inversesqrt(dot(vec3(_309, _310, _311), vec3(_309, _310, _311)));
    float _766 = dot(vec4(_762 * _309, _762 * _310, _762 * _311, 0.0), vec4(_251, _252, _253, 0.0));
    float _4082 = isnan(0.0) ? _766 : (isnan(_766) ? 0.0 : max(_766, 0.0));
    float _774 = exp2(log2((1.0 - (isnan(1.0) ? _4082 : (isnan(_4082) ? 1.0 : min(_4082, 1.0)))) * cbMtdParam._m0[12u].z) * cbMtdParam._m0[12u].w);
    float _4093 = isnan(0.0) ? _774 : (isnan(_774) ? 0.0 : max(_774, 0.0));
    float _775 = isnan(1.0) ? _4093 : (isnan(_4093) ? 1.0 : min(_4093, 1.0));
    float _779 = ((_544 + cbMtdParam._m0[9u].x) + (_555 * cbMtdParam._m0[10u].x)) + ((_750 * cbMtdParam._m0[11u].x) * _775);
    float _780 = ((_544 + cbMtdParam._m0[9u].y) + (_555 * cbMtdParam._m0[10u].y)) + ((_750 * cbMtdParam._m0[11u].y) * _775);
    float _781 = ((_544 + cbMtdParam._m0[9u].z) + (_555 * cbMtdParam._m0[10u].z)) + ((_750 * cbMtdParam._m0[11u].z) * _775);
    float _4104 = isnan(0.0) ? _410 : (isnan(_410) ? 0.0 : max(_410, 0.0));
    float _782 = isnan(1.0) ? _4104 : (isnan(_4104) ? 1.0 : min(_4104, 1.0));
    float _4115 = isnan(0.0) ? _412 : (isnan(_412) ? 0.0 : max(_412, 0.0));
    float _792 = isnan(1.0) ? _4115 : (isnan(_4115) ? 1.0 : min(_4115, 1.0));
    float _795 = (_371 * (-0.87999999523162841796875)) * _792;
    float _798 = (((((1.0 - _779) - _782) * _553) + _779) + _792) + _795;
    float _801 = (((((1.0 - _780) - _782) * _553) + _780) + _792) + _795;
    float _804 = (((((1.0 - _781) - _782) * _553) + _781) + _792) + _795;
    float _805 = _348 * 0.01200000010430812835693359375;
    float _827 = (_348 * 0.300000011920928955078125) * texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[35u].y * _326) + _805) + (cbMtdParam._m0[24u].y * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[35u].z * _326) + _805) + (cbMtdParam._m0[24u].z * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z;
    float _4126 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    float _828 = isnan(1.0) ? _4126 : (isnan(_4126) ? 1.0 : min(_4126, 1.0));
    float _838 = (((1.0 - _798) * TEXCOORD_5.x) * _828) + _798;
    float _839 = (((1.0 - _801) * TEXCOORD_5.x) * _828) + _801;
    float _840 = (((1.0 - _804) * TEXCOORD_5.x) * _828) + _804;
    vec4 _874 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].w * _326) + (cbMtdParam._m0[30u].y * _488)) + (cbMtdParam._m0[29u].y * _428)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[28u].x * _326) + (cbMtdParam._m0[30u].z * _487)) + (cbMtdParam._m0[29u].z * _429)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _877 = _874.y;
    float _884 = 1.0 - (_407 / cbMtdParam._m0[18u].w);
    float _888 = ((_874.x * TEXCOORD_8.x) * cbMtdParam._m0[18u].z) * (isnan(0.0) ? _884 : (isnan(_884) ? 0.0 : max(_884, 0.0)));
    float _894 = _877 * TEXCOORD_8.y;
    float _897 = ((isnan(cbMtdParam._m0[19u].x) ? _894 : (isnan(_894) ? cbMtdParam._m0[19u].x : max(_894, cbMtdParam._m0[19u].x))) - cbMtdParam._m0[19u].x) * cbMtdParam._m0[19u].y;
    float _898 = isnan(_897) ? _888 : (isnan(_888) ? _897 : max(_888, _897));
    float _4152 = isnan(0.0) ? _898 : (isnan(_898) ? 0.0 : max(_898, 0.0));
    float _899 = isnan(1.0) ? _4152 : (isnan(_4152) ? 1.0 : min(_4152, 1.0));
    float _906 = (_899 * (1.0 - _838)) + _838;
    float _907 = (_899 * (1.0 - _839)) + _839;
    float _908 = (_899 * (1.0 - _840)) + _840;
    float _943 = exp2(log2(cbMtdParam._m0[15u].w * _724) * cbMtdParam._m0[17u].x);
    float _4163 = isnan(0.0) ? _943 : (isnan(_943) ? 0.0 : max(_943, 0.0));
    float _944 = isnan(1.0) ? _4163 : (isnan(_4163) ? 1.0 : min(_4163, 1.0));
    float _945 = _944 * texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[28u].y * _326) + (cbMtdParam._m0[28u].w * _724)) + (cbMtdParam._m0[29u].w * _428)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[28u].z * _326) + (cbMtdParam._m0[29u].x * _724)) + (cbMtdParam._m0[30u].x * _429)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w)).z;
    float _948 = ((_944 - _945) * cbMtdParam._m0[17u].w) + _945;
    float _952 = _415 * TEXCOORD_8.z;
    float _959 = ((_952 * (1.0 - _906)) * _948) + _906;
    float _960 = ((_952 * (1.0 - _907)) * _948) + _907;
    float _961 = ((_952 * (1.0 - _908)) * _948) + _908;
    float _965 = 1.0 - (_407 / cbMtdParam._m0[18u].x);
    float _971 = (cbMtdParam._m0[18u].y * _877) * (isnan(0.0) ? _965 : (isnan(_965) ? 0.0 : max(_965, 0.0)));
    float _975 = (_971 * (1.0 - _959)) + _959;
    float _976 = (_971 * (1.0 - _960)) + _960;
    float _977 = (_971 * (1.0 - _961)) + _961;
    float _980 = _365 / cbMtdParam._m0[15u].y;
    float _4179 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
    float _983 = (1.0 - (isnan(1.0) ? _4179 : (isnan(_4179) ? 1.0 : min(_4179, 1.0)))) * cbMtdParam._m0[15u].x;
    float _989 = _365 + 0.20000000298023223876953125;
    float _991 = _989 * 9.0;
    float _4190 = isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0));
    float _996 = ((cbMtdParam._m0[13u].w - cbMtdParam._m0[12u].x) * (isnan(1.0) ? _4190 : (isnan(_4190) ? 1.0 : min(_4190, 1.0)))) + cbMtdParam._m0[12u].x;
    float _999 = (_365 + 0.099999986588954925537109375) * 2.5;
    float _4201 = isnan(0.0) ? _999 : (isnan(_999) ? 0.0 : max(_999, 0.0));
    float _1004 = ((cbMtdParam._m0[14u].z - _996) * (isnan(1.0) ? _4201 : (isnan(_4201) ? 1.0 : min(_4201, 1.0)))) + _996;
    float _1005 = _975 + _543;
    float _4212 = isnan(0.0) ? _1005 : (isnan(_1005) ? 0.0 : max(_1005, 0.0));
    float _1010 = ((0.3499999940395355224609375 - _1004) * (isnan(1.0) ? _4212 : (isnan(_4212) ? 1.0 : min(_4212, 1.0)))) + _1004;
    float _1011 = TEXCOORD_5.z * 0.5;
    float _1023 = (_365 + 0.100000001490116119384765625) * 0.89999997615814208984375;
    float _4223 = isnan(0.0) ? _1023 : (isnan(_1023) ? 0.0 : max(_1023, 0.0));
    float _1028 = ((cbMtdParam._m0[17u].y - cbMtdParam._m0[20u].x) * (isnan(1.0) ? _4223 : (isnan(_4223) ? 1.0 : min(_4223, 1.0)))) + cbMtdParam._m0[20u].x;
    float _1033 = (_1028 * (_346 + (-0.5))) + 0.5;
    float _1034 = (_1028 * (_347 + (-0.5))) + 0.5;
    float _4234 = isnan(0.0) ? TEXCOORD_5.y : (isnan(TEXCOORD_5.y) ? 0.0 : max(TEXCOORD_5.y, 0.0));
    float _1035 = isnan(1.0) ? _4234 : (isnan(_4234) ? 1.0 : min(_4234, 1.0));
    vec4 _1065 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[26u].y * TEXCOORD.z) + (cbMtdParam._m0[32u].y * _326)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[26u].z * TEXCOORD.w) + (cbMtdParam._m0[32u].z * _326)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1073 = ((_531.x + (-0.5)) * 0.5) + _512.x;
    float _1074 = ((_531.y + (-0.5)) * 0.5) + _512.y;
    vec4 _1100 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[24u].w * TEXCOORD.x) + (cbMtdParam._m0[25u].y * _326)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[25u].x * TEXCOORD.y) + (cbMtdParam._m0[25u].z * _326)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1109 = _989 * 12.0;
    float _4245 = isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0));
    float _1111 = 1.0 - (isnan(1.0) ? _4245 : (isnan(_4245) ? 1.0 : min(_4245, 1.0)));
    float _1122 = cbMtdParam._m0[33u].w * TEXCOORD.x;
    float _1123 = cbMtdParam._m0[34u].x * TEXCOORD.y;
    vec4 _1136 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((_1122 + (cbMtdParam._m0[33u].y * _326)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_1123 + (cbMtdParam._m0[33u].z * _326)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _1157 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1122 + ((cbMtdParam._m0[27u].y * 0.4000000059604644775390625) * _555)) + (cbMtdParam._m0[34u].y * _326)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1123 + ((cbMtdParam._m0[27u].z * 0.4000000059604644775390625) * _555)) + (cbMtdParam._m0[34u].z * _326)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _1171 = (((0.5 - _1073) * 0.10999999940395355224609375) + _1073) + (((((((_1100.z + (-0.5)) * cbMtdParam._m0[16u].x) * _1111) + (-1.0)) + _1136.x) + _1157.x) * cbMtdParam._m0[15u].z);
    float _1172 = (((0.5 - _1074) * 0.10999999940395355224609375) + _1074) + (((((((_1100.w + (-0.5)) * cbMtdParam._m0[16u].x) * _1111) + (-1.0)) + _1136.y) + _1157.y) * cbMtdParam._m0[15u].z);
    float _1177 = ((_1065.x - _1171) * _365) + _1171;
    float _1178 = ((_1065.y - _1172) * _365) + _1172;
    float _1179 = _365 * 0.5;
    float _4256 = isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0));
    float _1180 = isnan(1.0) ? _4256 : (isnan(_4256) ? 1.0 : min(_4256, 1.0));
    float _1191 = cbMtdParam._m0[17u].z - (cbMtdParam._m0[17u].z * _736);
    float _1198 = cbMtdParam._m0[19u].z - (cbMtdParam._m0[19u].z * TEXCOORD_5.y);
    float _1200 = _1198 - (_1198 * _1180);
    float _1204 = (((((((0.5 - _346) * 0.60000002384185791015625) + _346) - _1033) * _1035) + _1033) + (_1200 * (_611.x + (-0.5)))) + (((_1177 + (-0.5)) + ((0.5 - _1177) * _1180)) * _1191);
    float _1206 = (((((((0.5 - _347) * 0.60000002384185791015625) + _347) - _1034) * _1035) + _1034) + (_1200 * (_611.y + (-0.5)))) + (((_1178 + (-0.5)) + ((0.5 - _1178) * _1180)) * _1191);
    float _1216 = (((_1011 * (0.5 - _1204)) + _1204) * 2.0) + (-1.0);
    float _1217 = (((_1011 * (0.5 - _1206)) + _1206) * 2.0) + (-1.0);
    float _1218 = dot(vec2(_1216, _1217), vec2(_1216, _1217));
    float _4267 = isnan(0.0) ? _1218 : (isnan(_1218) ? 0.0 : max(_1218, 0.0));
    float _1223 = sqrt(1.0 - (isnan(1.0) ? _4267 : (isnan(_4267) ? 1.0 : min(_4267, 1.0))));
    float _1226 = _989 * 6.0;
    float _4278 = isnan(0.0) ? _1226 : (isnan(_1226) ? 0.0 : max(_1226, 0.0));
    float _1229 = cbMtdParam._m0[16u].y * (isnan(1.0) ? _4278 : (isnan(_4278) ? 1.0 : min(_4278, 1.0)));
    float _4289 = isnan(0.0) ? _1229 : (isnan(_1229) ? 0.0 : max(_1229, 0.0));
    float _1230 = isnan(1.0) ? _4289 : (isnan(_4289) ? 1.0 : min(_4289, 1.0));
    float _1233 = ((1.0 - _1230) * _1005) + _1230;
    uint _1247 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1248 = _1247 + 5u;
    float _1259 = (-0.0) - _309;
    float _1260 = (-0.0) - _310;
    float _1261 = (-0.0) - _311;
    float _1265 = inversesqrt(dot(vec3(_1259, _1260, _1261), vec3(_1259, _1260, _1261)));
    float _1269 = dot(vec3(_1265 * _1259, _1265 * _1260, _1265 * _1261), vec3(cbLight._m0[floatBitsToUint(cbInstanceData._m0[_1248]).x * 14u].xyz));
    float _1279 = 0.90999996662139892578125 / exp2(log2(1.091000080108642578125 - (_1269 * 0.60000002384185791015625)) * 1.5);
    float _1292 = ((((0.959999978542327880859375 / exp2(log2((_1269 * 0.4000000059604644775390625) + 1.04100000858306884765625) * 1.5)) - _1279) * 0.5) + _1279) * 0.079577468335628509521484375;
    float _1296 = fma(_1223, _251, fma(_1217, _243 * TANGENT.x, _1216 * _230));
    float _1299 = fma(_1223, _252, fma(_1217, _243 * TANGENT.y, _1216 * _231));
    float _1302 = fma(_1223, _253, fma(_1217, _243 * TANGENT.z, _1216 * _232));
    float _1306 = inversesqrt(dot(vec3(_1296, _1299, _1302), vec3(_1296, _1299, _1302)));
    float _1307 = _1306 * _1296;
    float _1308 = _1306 * _1299;
    float _1309 = _1306 * _1302;
    float _4300 = isnan(0.0) ? _983 : (isnan(_983) ? 0.0 : max(_983, 0.0));
    float _4311 = isnan(0.0) ? _1010 : (isnan(_1010) ? 0.0 : max(_1010, 0.0));
    float _1311 = isnan(1.0) ? _4311 : (isnan(_4311) ? 1.0 : min(_4311, 1.0));
    float _4322 = isnan(0.0) ? _975 : (isnan(_975) ? 0.0 : max(_975, 0.0));
    float _4333 = isnan(0.0) ? _976 : (isnan(_976) ? 0.0 : max(_976, 0.0));
    float _4344 = isnan(0.0) ? _977 : (isnan(_977) ? 0.0 : max(_977, 0.0));
    float _1326 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1366 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1375 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1366);
    float _1376 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1366);
    float _1377 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1366);
    float _1381 = inversesqrt(dot(vec3(_1375, _1376, _1377), vec3(_1375, _1376, _1377)));
    float _1382 = _1375 * _1381;
    float _1383 = _1376 * _1381;
    float _1384 = _1377 * _1381;
    vec4 _1389 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1391 = _1389.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1587 = sqrt(((_1375 * _1375) + (_1376 * _1376)) + (_1377 * _1377));
        float _1593 = (cbMatDynParam._m0[5u].x * _1587) + cbMatDynParam._m0[5u].y;
        float _4355 = isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : max(_1593, 0.0));
        float _1594 = isnan(1.0) ? _4355 : (isnan(_4355) ? 1.0 : min(_4355, 1.0));
        float _1598 = (cbMatDynParam._m0[5u].z * _1587) + cbMatDynParam._m0[5u].w;
        float _4366 = isnan(0.0) ? _1598 : (isnan(_1598) ? 0.0 : max(_1598, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4366 : (isnan(_4366) ? 1.0 : min(_4366, 1.0))) - _1594)) + _1594) < ((_1391 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1402 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1403 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _1405 = texture(sampler2D(g_WaterSimulationNormalTexture, SS_ClampLinear), vec2(TEXCOORD_11, TEXCOORD_12));
    float _1414 = (_1405.x * 2.0) + (-1.0);
    float _1415 = (_1405.y * 2.0) + (-1.0);
    float _1416 = (_1405.z * 2.0) + (-1.0);
    float _1420 = inversesqrt(dot(vec3(_1414, _1415, _1416), vec3(_1414, _1415, _1416)));
    float _1431 = ((TEXCOORD_12 >= 1.0) || ((TEXCOORD_12 <= 0.0) || ((TEXCOORD_11 <= 0.0) || (TEXCOORD_11 >= 1.0)))) ? 0.0 : _1405.w;
    float _1438 = (((_1414 * _1420) - _1307) * _1431) + _1307;
    float _1439 = (((_1415 * _1420) - _1308) * _1431) + _1308;
    float _1440 = (((_1416 * _1420) - _1309) * _1431) + _1309;
    float _1459 = fma(_1440, cbSceneParam._m0[5u].z, fma(_1439, cbSceneParam._m0[5u].y, _1438 * cbSceneParam._m0[5u].x));
    float _1462 = fma(_1440, cbSceneParam._m0[6u].z, fma(_1439, cbSceneParam._m0[6u].y, _1438 * cbSceneParam._m0[6u].x));
    float _1465 = fma(_1440, cbSceneParam._m0[7u].z, fma(_1439, cbSceneParam._m0[7u].y, _1438 * cbSceneParam._m0[7u].x));
    uint _1478 = _1247 + 9u;
    uint _1479 = _1478 + uint(cbMatDynParam._m0[0u].w);
    float _1485 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4322 : (isnan(_4322) ? 1.0 : min(_4322, 1.0)))) * cbInstanceData._m0[_1479].x;
    float _1486 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4333 : (isnan(_4333) ? 1.0 : min(_4333, 1.0)))) * cbInstanceData._m0[_1479].y;
    float _1487 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4344 : (isnan(_4344) ? 1.0 : min(_4344, 1.0)))) * cbInstanceData._m0[_1479].z;
    float _4377 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
    float _1488 = isnan(1.0) ? _4377 : (isnan(_4377) ? 1.0 : min(_4377, 1.0));
    float _4388 = isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0));
    float _1489 = isnan(1.0) ? _4388 : (isnan(_4388) ? 1.0 : min(_4388, 1.0));
    float _4399 = isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0));
    float _1490 = isnan(1.0) ? _4399 : (isnan(_4399) ? 1.0 : min(_4399, 1.0));
    vec4 _1499 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1402, cbSceneParam._m0[86u].y * _1403));
    float _1502 = _1499.x * TEXCOORD_5.w;
    float _1506 = abs(dot(vec3(_1382, _1383, _1384), vec3(_1438, _1439, _1440)));
    float _4410 = isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0));
    float _1513 = exp2(log2(1.0 - (isnan(1.0) ? _4410 : (isnan(_4410) ? 1.0 : min(_4410, 1.0)))) * 5.0) * 0.959999978542327880859375;
    float _1514 = _1513 + 0.039999999105930328369140625;
    float _1518 = 10.0 / (_1326 + 10.0);
    vec4 _1533 = texture(sampler2D(g_ReflectionTexture, SS_ClampLinear), vec2(((_1518 * cbMtdParam._m0[21u].z) * dot(vec3(_1438, _1439, _1440), vec3(1.0, 0.0, 0.0))) + (_1402 / cbSceneParam._m0[86u].x), 1.0 - (_1403 / cbSceneParam._m0[86u].y)));
    float _1569 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1573 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1577 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1901;
    float _1902;
    float _1903;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1630 = fma(_1577, cbModelParam._m0[26u].z, fma(_1573, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1569));
        float _1634 = fma(_1577, cbModelParam._m0[27u].z, fma(_1573, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1569));
        float _1638 = fma(_1577, cbModelParam._m0[28u].z, fma(_1573, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1569));
        float _1660 = _1569 + _1438;
        float _1661 = _1573 + _1439;
        float _1662 = _1577 + _1440;
        float _1672 = fma(_1662, cbModelParam._m0[26u].z, fma(_1661, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1660)) - _1630;
        float _1673 = fma(_1662, cbModelParam._m0[27u].z, fma(_1661, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1660)) - _1634;
        float _1674 = fma(_1662, cbModelParam._m0[28u].z, fma(_1661, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1660)) - _1638;
        float _1678 = inversesqrt(dot(vec3(_1672, _1673, _1674), vec3(_1672, _1673, _1674)));
        float _1690 = ((_1678 * _1672) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1630 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1691 = ((_1678 * _1673) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1634 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1692 = ((_1678 * _1674) / cbModelParam._m0[34u].z) + ((((((_1638 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1695 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1690, _1691, _1692), 0.0);
        vec4 _1702 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1690, _1691, _1692), 0.0);
        vec4 _1709 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1690, _1691, _1692), 0.0);
        vec4 _1716 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1690, _1691, _1692), 0.0);
        float _1729 = exp2((_1695.w + (-0.5)) * 20.0) * 2.0;
        float _1736 = exp2((_1702.w + (-0.5)) * 20.0) * 2.0;
        float _1743 = exp2((_1709.w + (-0.5)) * 20.0) * 2.0;
        float _1750 = exp2((_1716.w + (-0.5)) * 20.0) * 2.0;
        float _1751 = _1750 * (_1716.x + (-0.5));
        float _1752 = _1750 * (_1716.y + (-0.5));
        float _1753 = _1750 * (_1716.z + (-0.5));
        float _1754 = isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0));
        float _1755 = isnan(0.0) ? _1752 : (isnan(_1752) ? 0.0 : max(_1752, 0.0));
        float _1756 = isnan(0.0) ? _1753 : (isnan(_1753) ? 0.0 : max(_1753, 0.0));
        float _1758 = ((_1695.x + (-0.5)) * 0.5) * _1729;
        float _1760 = ((_1702.x + (-0.5)) * 0.5) * _1736;
        float _1762 = ((_1709.x + (-0.5)) * 0.5) * _1743;
        float _1763 = dot(vec3(_1758, _1760, _1762), vec3(_1758, _1760, _1762));
        float _1768 = (_1763 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1763);
        float _1777 = (dot(vec3(_1438, _1439, _1440), vec3(_1768 * _1758, _1768 * _1760, _1768 * _1762)) + 1.0) * 0.5;
        float _4436 = isnan(0.0) ? _1777 : (isnan(_1777) ? 0.0 : max(_1777, 0.0));
        float _1787 = sqrt(((_1760 * _1760) + (_1758 * _1758)) + (_1762 * _1762)) / (_1754 + 9.9999997473787516355514526367188e-06);
        float _4447 = isnan(0.0) ? _1787 : (isnan(_1787) ? 0.0 : max(_1787, 0.0));
        float _1788 = isnan(1.0) ? _4447 : (isnan(_4447) ? 1.0 : min(_4447, 1.0));
        float _1789 = _1788 * 2.0;
        float _1793 = (1.0 - _1788) / (_1788 + 1.0);
        float _4458 = isnan(0.0) ? _1793 : (isnan(_1793) ? 0.0 : max(_1793, 0.0));
        float _1794 = isnan(1.0) ? _4458 : (isnan(_4458) ? 1.0 : min(_4458, 1.0));
        float _1803 = ((((1.0 - _1794) * (_1789 + 2.0)) * exp2(log2(isnan(1.0) ? _4436 : (isnan(_4436) ? 1.0 : min(_4436, 1.0))) * (_1789 + 1.0))) + _1794) * _1754;
        float _1805 = ((_1695.y + (-0.5)) * 0.5) * _1729;
        float _1807 = ((_1702.y + (-0.5)) * 0.5) * _1736;
        float _1809 = ((_1709.y + (-0.5)) * 0.5) * _1743;
        float _1810 = dot(vec3(_1805, _1807, _1809), vec3(_1805, _1807, _1809));
        float _1815 = (_1810 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1810);
        float _1823 = (dot(vec3(_1438, _1439, _1440), vec3(_1815 * _1805, _1815 * _1807, _1815 * _1809)) + 1.0) * 0.5;
        float _4469 = isnan(0.0) ? _1823 : (isnan(_1823) ? 0.0 : max(_1823, 0.0));
        float _1832 = sqrt(((_1807 * _1807) + (_1805 * _1805)) + (_1809 * _1809)) / (_1755 + 9.9999997473787516355514526367188e-06);
        float _4480 = isnan(0.0) ? _1832 : (isnan(_1832) ? 0.0 : max(_1832, 0.0));
        float _1833 = isnan(1.0) ? _4480 : (isnan(_4480) ? 1.0 : min(_4480, 1.0));
        float _1834 = _1833 * 2.0;
        float _1838 = (1.0 - _1833) / (_1833 + 1.0);
        float _4491 = isnan(0.0) ? _1838 : (isnan(_1838) ? 0.0 : max(_1838, 0.0));
        float _1839 = isnan(1.0) ? _4491 : (isnan(_4491) ? 1.0 : min(_4491, 1.0));
        float _1848 = ((((1.0 - _1839) * (_1834 + 2.0)) * exp2(log2(isnan(1.0) ? _4469 : (isnan(_4469) ? 1.0 : min(_4469, 1.0))) * (_1834 + 1.0))) + _1839) * _1755;
        float _1850 = ((_1695.z + (-0.5)) * 0.5) * _1729;
        float _1852 = ((_1702.z + (-0.5)) * 0.5) * _1736;
        float _1854 = ((_1709.z + (-0.5)) * 0.5) * _1743;
        float _1855 = dot(vec3(_1850, _1852, _1854), vec3(_1850, _1852, _1854));
        float _1860 = (_1855 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1855);
        float _1868 = (dot(vec3(_1438, _1439, _1440), vec3(_1860 * _1850, _1860 * _1852, _1860 * _1854)) + 1.0) * 0.5;
        float _4502 = isnan(0.0) ? _1868 : (isnan(_1868) ? 0.0 : max(_1868, 0.0));
        float _1877 = sqrt(((_1852 * _1852) + (_1850 * _1850)) + (_1854 * _1854)) / (_1756 + 9.9999997473787516355514526367188e-06);
        float _4513 = isnan(0.0) ? _1877 : (isnan(_1877) ? 0.0 : max(_1877, 0.0));
        float _1878 = isnan(1.0) ? _4513 : (isnan(_4513) ? 1.0 : min(_4513, 1.0));
        float _1879 = _1878 * 2.0;
        float _1883 = (1.0 - _1878) / (_1878 + 1.0);
        float _4524 = isnan(0.0) ? _1883 : (isnan(_1883) ? 0.0 : max(_1883, 0.0));
        float _1884 = isnan(1.0) ? _4524 : (isnan(_4524) ? 1.0 : min(_4524, 1.0));
        float _1893 = ((((1.0 - _1884) * (_1879 + 2.0)) * exp2(log2(isnan(1.0) ? _4502 : (isnan(_4502) ? 1.0 : min(_4502, 1.0))) * (_1879 + 1.0))) + _1884) * _1756;
        _1901 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1803 : (isnan(_1803) ? 0.0 : max(_1803, 0.0)));
        _1902 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1848 : (isnan(_1848) ? 0.0 : max(_1848, 0.0)));
        _1903 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1893 : (isnan(_1893) ? 0.0 : max(_1893, 0.0)));
    }
    else
    {
        _1901 = 0.0;
        _1902 = 0.0;
        _1903 = 0.0;
    }
    float _2196;
    float _2197;
    float _2198;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1929 = fma(_1577, cbModelParam._m0[30u].z, fma(_1573, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1569));
        float _1933 = fma(_1577, cbModelParam._m0[31u].z, fma(_1573, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1569));
        float _1937 = fma(_1577, cbModelParam._m0[32u].z, fma(_1573, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1569));
        float _1959 = _1569 + _1438;
        float _1960 = _1573 + _1439;
        float _1961 = _1577 + _1440;
        float _1971 = fma(_1961, cbModelParam._m0[30u].z, fma(_1960, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1959)) - _1929;
        float _1972 = fma(_1961, cbModelParam._m0[31u].z, fma(_1960, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1959)) - _1933;
        float _1973 = fma(_1961, cbModelParam._m0[32u].z, fma(_1960, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1959)) - _1937;
        float _1977 = inversesqrt(dot(vec3(_1971, _1972, _1973), vec3(_1971, _1972, _1973)));
        float _1989 = ((_1977 * _1971) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1929 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1990 = ((_1977 * _1972) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1933 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1991 = ((_1977 * _1973) / cbModelParam._m0[35u].z) + ((((((_1937 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1993 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1989, _1990, _1991), 0.0);
        vec4 _2000 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1989, _1990, _1991), 0.0);
        vec4 _2007 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1989, _1990, _1991), 0.0);
        vec4 _2014 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1989, _1990, _1991), 0.0);
        float _2026 = exp2((_1993.w + (-0.5)) * 20.0) * 2.0;
        float _2033 = exp2((_2000.w + (-0.5)) * 20.0) * 2.0;
        float _2040 = exp2((_2007.w + (-0.5)) * 20.0) * 2.0;
        float _2047 = exp2((_2014.w + (-0.5)) * 20.0) * 2.0;
        float _2048 = _2047 * (_2014.x + (-0.5));
        float _2049 = _2047 * (_2014.y + (-0.5));
        float _2050 = _2047 * (_2014.z + (-0.5));
        float _2051 = isnan(0.0) ? _2048 : (isnan(_2048) ? 0.0 : max(_2048, 0.0));
        float _2052 = isnan(0.0) ? _2049 : (isnan(_2049) ? 0.0 : max(_2049, 0.0));
        float _2053 = isnan(0.0) ? _2050 : (isnan(_2050) ? 0.0 : max(_2050, 0.0));
        float _2055 = ((_1993.x + (-0.5)) * 0.5) * _2026;
        float _2057 = ((_2000.x + (-0.5)) * 0.5) * _2033;
        float _2059 = ((_2007.x + (-0.5)) * 0.5) * _2040;
        float _2060 = dot(vec3(_2055, _2057, _2059), vec3(_2055, _2057, _2059));
        float _2065 = (_2060 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2060);
        float _2073 = (dot(vec3(_1438, _1439, _1440), vec3(_2065 * _2055, _2065 * _2057, _2065 * _2059)) + 1.0) * 0.5;
        float _4565 = isnan(0.0) ? _2073 : (isnan(_2073) ? 0.0 : max(_2073, 0.0));
        float _2082 = sqrt(((_2057 * _2057) + (_2055 * _2055)) + (_2059 * _2059)) / (_2051 + 9.9999997473787516355514526367188e-06);
        float _4576 = isnan(0.0) ? _2082 : (isnan(_2082) ? 0.0 : max(_2082, 0.0));
        float _2083 = isnan(1.0) ? _4576 : (isnan(_4576) ? 1.0 : min(_4576, 1.0));
        float _2084 = _2083 * 2.0;
        float _2088 = (1.0 - _2083) / (_2083 + 1.0);
        float _4587 = isnan(0.0) ? _2088 : (isnan(_2088) ? 0.0 : max(_2088, 0.0));
        float _2089 = isnan(1.0) ? _4587 : (isnan(_4587) ? 1.0 : min(_4587, 1.0));
        float _2098 = ((((1.0 - _2089) * (_2084 + 2.0)) * exp2(log2(isnan(1.0) ? _4565 : (isnan(_4565) ? 1.0 : min(_4565, 1.0))) * (_2084 + 1.0))) + _2089) * _2051;
        float _2100 = ((_1993.y + (-0.5)) * 0.5) * _2026;
        float _2102 = ((_2000.y + (-0.5)) * 0.5) * _2033;
        float _2104 = ((_2007.y + (-0.5)) * 0.5) * _2040;
        float _2105 = dot(vec3(_2100, _2102, _2104), vec3(_2100, _2102, _2104));
        float _2110 = (_2105 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2105);
        float _2118 = (dot(vec3(_1438, _1439, _1440), vec3(_2110 * _2100, _2110 * _2102, _2110 * _2104)) + 1.0) * 0.5;
        float _4598 = isnan(0.0) ? _2118 : (isnan(_2118) ? 0.0 : max(_2118, 0.0));
        float _2127 = sqrt(((_2102 * _2102) + (_2100 * _2100)) + (_2104 * _2104)) / (_2052 + 9.9999997473787516355514526367188e-06);
        float _4609 = isnan(0.0) ? _2127 : (isnan(_2127) ? 0.0 : max(_2127, 0.0));
        float _2128 = isnan(1.0) ? _4609 : (isnan(_4609) ? 1.0 : min(_4609, 1.0));
        float _2129 = _2128 * 2.0;
        float _2133 = (1.0 - _2128) / (_2128 + 1.0);
        float _4620 = isnan(0.0) ? _2133 : (isnan(_2133) ? 0.0 : max(_2133, 0.0));
        float _2134 = isnan(1.0) ? _4620 : (isnan(_4620) ? 1.0 : min(_4620, 1.0));
        float _2143 = ((((1.0 - _2134) * (_2129 + 2.0)) * exp2(log2(isnan(1.0) ? _4598 : (isnan(_4598) ? 1.0 : min(_4598, 1.0))) * (_2129 + 1.0))) + _2134) * _2052;
        float _2145 = ((_1993.z + (-0.5)) * 0.5) * _2026;
        float _2147 = ((_2000.z + (-0.5)) * 0.5) * _2033;
        float _2149 = ((_2007.z + (-0.5)) * 0.5) * _2040;
        float _2150 = dot(vec3(_2145, _2147, _2149), vec3(_2145, _2147, _2149));
        float _2155 = (_2150 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2150);
        float _2163 = (dot(vec3(_1438, _1439, _1440), vec3(_2155 * _2145, _2155 * _2147, _2155 * _2149)) + 1.0) * 0.5;
        float _4631 = isnan(0.0) ? _2163 : (isnan(_2163) ? 0.0 : max(_2163, 0.0));
        float _2172 = sqrt(((_2147 * _2147) + (_2145 * _2145)) + (_2149 * _2149)) / (_2053 + 9.9999997473787516355514526367188e-06);
        float _4642 = isnan(0.0) ? _2172 : (isnan(_2172) ? 0.0 : max(_2172, 0.0));
        float _2173 = isnan(1.0) ? _4642 : (isnan(_4642) ? 1.0 : min(_4642, 1.0));
        float _2174 = _2173 * 2.0;
        float _2178 = (1.0 - _2173) / (_2173 + 1.0);
        float _4653 = isnan(0.0) ? _2178 : (isnan(_2178) ? 0.0 : max(_2178, 0.0));
        float _2179 = isnan(1.0) ? _4653 : (isnan(_4653) ? 1.0 : min(_4653, 1.0));
        float _2188 = ((((1.0 - _2179) * (_2174 + 2.0)) * exp2(log2(isnan(1.0) ? _4631 : (isnan(_4631) ? 1.0 : min(_4631, 1.0))) * (_2174 + 1.0))) + _2179) * _2053;
        _2196 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2098 : (isnan(_2098) ? 0.0 : max(_2098, 0.0)));
        _2197 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2143 : (isnan(_2143) ? 0.0 : max(_2143, 0.0)));
        _2198 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2188 : (isnan(_2188) ? 0.0 : max(_2188, 0.0)));
    }
    else
    {
        _2196 = 0.0;
        _2197 = 0.0;
        _2198 = 0.0;
    }
    float _2208 = (cbModelParam._m0[1u].x * (_2196 - _1901)) + _1901;
    float _2209 = (cbModelParam._m0[1u].x * (_2197 - _1902)) + _1902;
    float _2210 = (cbModelParam._m0[1u].x * (_2198 - _1903)) + _1903;
    float _2231 = fma(_2210, cbSceneParam._m0[89u].z, fma(_2209, cbSceneParam._m0[89u].y, _2208 * cbSceneParam._m0[89u].x));
    float _2234 = fma(_2210, cbSceneParam._m0[90u].z, fma(_2209, cbSceneParam._m0[90u].y, _2208 * cbSceneParam._m0[90u].x));
    float _2237 = fma(_2210, cbSceneParam._m0[91u].z, fma(_2209, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2208));
    float _2241 = 0.959999978542327880859375 - _1513;
    float _2242 = _2241 * _1502;
    float _2273 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2277 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2281 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2285 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2286 = _2273 / _2285;
    float _2287 = _2277 / _2285;
    float _2288 = _2281 / _2285;
    float _2422;
    float _2423;
    float _2424;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2305 = ((uint(_2288 > cbSceneParam._m0[59u].y) + uint(_2288 > cbSceneParam._m0[59u].x)) + uint(_2288 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2306 = _2305 + 43u;
        uint _2314 = _2305 + 44u;
        uint _2321 = _2305 + 45u;
        uint _2329 = _2305 + 46u;
        float _2339 = fma(_2285, cbSceneParam._m0[_2306].w, fma(_2281, cbSceneParam._m0[_2306].z, fma(_2277, cbSceneParam._m0[_2306].y, _2273 * cbSceneParam._m0[_2306].x)));
        float _2343 = fma(_2285, cbSceneParam._m0[_2314].w, fma(_2281, cbSceneParam._m0[_2314].z, fma(_2277, cbSceneParam._m0[_2314].y, _2273 * cbSceneParam._m0[_2314].x)));
        float _2351 = fma(_2285, cbSceneParam._m0[_2329].w, fma(_2281, cbSceneParam._m0[_2329].z, fma(_2277, cbSceneParam._m0[_2329].y, _2273 * cbSceneParam._m0[_2329].x)));
        float _2355 = cbSceneParam._m0[33u].z * _2351;
        float _2357 = cbSceneParam._m0[33u].w * _2351;
        float _2360 = fma(_2285, cbSceneParam._m0[_2321].w, fma(_2281, cbSceneParam._m0[_2321].z, fma(_2277, cbSceneParam._m0[_2321].y, _2273 * cbSceneParam._m0[_2321].x))) / _2351;
        float _2408 = (cbSceneParam._m0[33u].x - sqrt(((_2287 * _2287) + (_2286 * _2286)) + (_2288 * _2288))) * cbSceneParam._m0[33u].y;
        float _4694 = isnan(0.0) ? _2408 : (isnan(_2408) ? 0.0 : max(_2408, 0.0));
        float _2415 = (isnan(1.0) ? _4694 : (isnan(_4694) ? 1.0 : min(_4694, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2355 + _2339) / _2351, (_2357 + _2343) / _2351), _2360), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2357 + _2339) / _2351, (_2343 - _2355) / _2351), _2360), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2339 - _2355) / _2351, (_2343 - _2357) / _2351), _2360), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2339 - _2357) / _2351, (_2355 + _2343) / _2351), _2360), 0.0)).x), vec4(0.25)));
        _2422 = 1.0 - (_2415 * cbSceneParam._m0[34u].x);
        _2423 = 1.0 - (_2415 * cbSceneParam._m0[34u].y);
        _2424 = 1.0 - (_2415 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2422 = 1.0;
        _2423 = 1.0;
        _2424 = 1.0;
    }
    float _2480;
    float _2482;
    float _2484;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2468 = fma(_2285, cbSceneParam._m0[63u].w, fma(_2281, cbSceneParam._m0[63u].z, fma(_2277, cbSceneParam._m0[63u].y, _2273 * cbSceneParam._m0[63u].x)));
        float _2469 = fma(_2285, cbSceneParam._m0[60u].w, fma(_2281, cbSceneParam._m0[60u].z, fma(_2277, cbSceneParam._m0[60u].y, _2273 * cbSceneParam._m0[60u].x))) / _2468;
        float _2470 = fma(_2285, cbSceneParam._m0[61u].w, fma(_2281, cbSceneParam._m0[61u].z, fma(_2277, cbSceneParam._m0[61u].y, _2273 * cbSceneParam._m0[61u].x))) / _2468;
        float frontier_phi_13_12_ladder;
        float frontier_phi_13_12_ladder_1;
        float frontier_phi_13_12_ladder_2;
        if ((((_2469 >= cbSceneParam._m0[64u].x) && (_2470 >= cbSceneParam._m0[64u].y)) && (_2469 <= cbSceneParam._m0[64u].z)) && (_2470 <= cbSceneParam._m0[64u].w))
        {
            float _2621 = fma(_2285, cbSceneParam._m0[62u].w, fma(_2281, cbSceneParam._m0[62u].z, fma(_2277, cbSceneParam._m0[62u].y, _2273 * cbSceneParam._m0[62u].x))) / _2468;
            float _2625 = isnan(cbSceneParam._m0[41u].w) ? _2621 : (isnan(_2621) ? cbSceneParam._m0[41u].w : max(_2621, cbSceneParam._m0[41u].w));
            float _2668 = (cbSceneParam._m0[33u].x - sqrt(((_2287 * _2287) + (_2286 * _2286)) + (_2288 * _2288))) * cbSceneParam._m0[33u].y;
            float _4710 = isnan(0.0) ? _2668 : (isnan(_2668) ? 0.0 : max(_2668, 0.0));
            float _2675 = (isnan(1.0) ? _4710 : (isnan(_4710) ? 1.0 : min(_4710, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2469, cbSceneParam._m0[33u].w + _2470), _2625), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2469, _2470 - cbSceneParam._m0[33u].z), _2625), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2469 - cbSceneParam._m0[33u].z, _2470 - cbSceneParam._m0[33u].w), _2625), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2469 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2470), _2625), 0.0)).x), vec4(0.25)));
            float _2679 = 1.0 - (_2675 * cbSceneParam._m0[34u].x);
            float _2680 = 1.0 - (_2675 * cbSceneParam._m0[34u].y);
            float _2681 = 1.0 - (_2675 * cbSceneParam._m0[34u].z);
            frontier_phi_13_12_ladder = isnan(_2681) ? _2424 : (isnan(_2424) ? _2681 : min(_2424, _2681));
            frontier_phi_13_12_ladder_1 = isnan(_2680) ? _2423 : (isnan(_2423) ? _2680 : min(_2423, _2680));
            frontier_phi_13_12_ladder_2 = isnan(_2679) ? _2422 : (isnan(_2422) ? _2679 : min(_2422, _2679));
        }
        else
        {
            frontier_phi_13_12_ladder = _2424;
            frontier_phi_13_12_ladder_1 = _2423;
            frontier_phi_13_12_ladder_2 = _2422;
        }
        _2480 = frontier_phi_13_12_ladder_2;
        _2482 = frontier_phi_13_12_ladder_1;
        _2484 = frontier_phi_13_12_ladder;
    }
    else
    {
        _2480 = _2422;
        _2482 = _2423;
        _2484 = _2424;
    }
    uvec4 _2488 = floatBitsToUint(cbInstanceData._m0[_1248]);
    uint _2490 = _2488.x * 14u;
    float _2497 = (cbLight._m0[_2490 + 13u].x * (_1502 + (-1.0))) + 1.0;
    uint _2498 = _2490 + 4u;
    float _2507 = isnan(1.0) ? _2497 : (isnan(_2497) ? 1.0 : min(_2497, 1.0));
    float _2516 = dot(vec3(cbLight._m0[_2490].xyz), vec3(_1438, _1439, _1440));
    float _4741 = isnan(0.0) ? _2516 : (isnan(_2516) ? 0.0 : max(_2516, 0.0));
    float _2520 = (isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0))) * 0.3183098733425140380859375;
    float _2522 = ((cbLight._m0[_2498].x * _2480) * _2507) * _2520;
    float _2523 = ((cbLight._m0[_2498].y * _2482) * _2507) * _2520;
    float _2524 = ((cbLight._m0[_2498].z * _2484) * _2507) * _2520;
    uint _2526 = _2490 + 8u;
    float _2539 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2490].w)) * _1311) * 0.949999988079071044921875);
    float _2540 = _2539 * _2539;
    float _2541 = cbLight._m0[_2490].x + _1382;
    float _2542 = cbLight._m0[_2490].y + _1383;
    float _2543 = cbLight._m0[_2490].z + _1384;
    float _2547 = inversesqrt(dot(vec3(_2541, _2542, _2543), vec3(_2541, _2542, _2543)));
    float _2548 = _2547 * _2541;
    float _2549 = _2547 * _2542;
    float _2550 = _2547 * _2543;
    float _2551 = dot(vec3(_1438, _1439, _1440), vec3(cbLight._m0[_2490].xyz));
    float _4752 = isnan(0.0) ? _2551 : (isnan(_2551) ? 0.0 : max(_2551, 0.0));
    float _2554 = isnan(1.0) ? _4752 : (isnan(_4752) ? 1.0 : min(_4752, 1.0));
    float _2555 = dot(vec3(_1438, _1439, _1440), vec3(_1382, _1383, _1384));
    float _4763 = isnan(0.0) ? _2555 : (isnan(_2555) ? 0.0 : max(_2555, 0.0));
    float _2558 = isnan(1.0) ? _4763 : (isnan(_4763) ? 1.0 : min(_4763, 1.0));
    float _2559 = dot(vec3(_1438, _1439, _1440), vec3(_2548, _2549, _2550));
    float _4774 = isnan(0.0) ? _2559 : (isnan(_2559) ? 0.0 : max(_2559, 0.0));
    float _2562 = isnan(1.0) ? _4774 : (isnan(_4774) ? 1.0 : min(_4774, 1.0));
    float _2563 = dot(vec3(cbLight._m0[_2490].xyz), vec3(_2548, _2549, _2550));
    float _4785 = isnan(0.0) ? _2563 : (isnan(_2563) ? 0.0 : max(_2563, 0.0));
    float _2567 = _2540 * _2540;
    float _2571 = ((_2562 * _2562) * (_2567 + (-1.0))) + 1.0;
    float _2581 = (exp2(log2(1.0 - (isnan(1.0) ? _4785 : (isnan(_4785) ? 1.0 : min(_4785, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2582 = 1.0 - _2540;
    float _2593 = (0.5 / (((_2558 * ((_2554 * _2582) + _2540)) + 9.9999999392252902907785028219223e-09) + (((_2558 * _2582) + _2540) * _2554))) * _2554;
    float _4796 = isnan(0.0) ? _2593 : (isnan(_2593) ? 0.0 : max(_2593, 0.0));
    float _2595 = (isnan(1.0) ? _4796 : (isnan(_4796) ? 1.0 : min(_4796, 1.0))) * (_2567 / ((_2571 * _2571) * 3.141590118408203125));
    float _2599 = (((cbLight._m0[_2526].x * _2480) * _2581) * _2595) * _2507;
    float _2603 = (((cbLight._m0[_2526].y * _2482) * _2581) * _2595) * _2507;
    float _2607 = (((cbLight._m0[_2526].z * _2484) * _2581) * _2595) * _2507;
    float _2737;
    float _2739;
    float _2741;
    float _2743;
    float _2745;
    float _2747;
    if (_2488.y == 0u)
    {
        uvec4 _2693 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2694 = _2693.x;
        uint _2705 = uint((float(_2693.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1403) / _2694))) + floor(float(uint(cbSceneParam._m0[85u].x * _1402) / _2694)));
        float _2715 = (log2(_2288 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2716 = isnan(0.0) ? _2715 : (isnan(_2715) ? 0.0 : max(_2715, 0.0));
        uint _2719 = uint(isnan(14.0) ? _2716 : (isnan(_2716) ? 14.0 : min(_2716, 14.0)));
        uvec4 _2724 = texelFetch(g_lightClusterGridBuffer, int(((_2719 << 2u) + (_2705 << 6u)) >> 2u));
        uint _2725 = _2724.x;
        uint _2726 = _2693.z;
        float _2862;
        float _2864;
        float _2866;
        float _2868;
        float _2870;
        float _2872;
        if (((((1u << ((_2726 >> 4u) & 15u)) + 4294967295u) & _2725) == 0u) || ((_2726 & 240u) == 0u))
        {
            _2862 = 0.0;
            _2864 = 0.0;
            _2866 = 0.0;
            _2868 = 0.0;
            _2870 = 0.0;
            _2872 = 0.0;
        }
        else
        {
            float _2863;
            float _2865;
            float _2867;
            float _2869;
            float _2871;
            float _2873;
            float _3066 = 0.0;
            float _3067 = 0.0;
            float _3068 = 0.0;
            float _3069 = 0.0;
            float _3070 = 0.0;
            float _3071 = 0.0;
            uint _3072 = 0u;
            uint _3081;
            bool _3082;
            for (;;)
            {
                _3081 = texelFetch(g_lightClassification, int((((_2719 << 5u) + (_2705 << 9u)) + (_3072 << 2u)) >> 2u)).x;
                _3082 = _3081 == 0u;
                float frontier_phi_27_pred;
                float frontier_phi_27_pred_1;
                float frontier_phi_27_pred_2;
                float frontier_phi_27_pred_3;
                float frontier_phi_27_pred_4;
                float frontier_phi_27_pred_5;
                if (_3082)
                {
                    frontier_phi_27_pred = _3071;
                    frontier_phi_27_pred_1 = _3070;
                    frontier_phi_27_pred_2 = _3069;
                    frontier_phi_27_pred_3 = _3068;
                    frontier_phi_27_pred_4 = _3067;
                    frontier_phi_27_pred_5 = _3066;
                }
                else
                {
                    float _3300;
                    float _3301;
                    float _3302;
                    float _3303;
                    float _3304;
                    float _3305;
                    uint _3306;
                    _3300 = _3066;
                    _3301 = _3067;
                    _3302 = _3068;
                    _3303 = _3069;
                    _3304 = _3070;
                    _3305 = _3071;
                    _3306 = _3081;
                    float _3215;
                    float _3216;
                    float _3217;
                    float _3218;
                    float _3219;
                    float _3220;
                    for (;;)
                    {
                        uint _3310 = uint(findLSB(_3306)) + (_3072 << 5u);
                        uint _3307 = (_3306 + 4294967295u) & _3306;
                        uint _3312 = _3310 * 48u;
                        vec4 _3326 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3312)).x, texelFetch(g_PointLightRenderingBuffer, int(_3312 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3312 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3312 + 3u)).x));
                        uint _3332 = (_3310 * 48u) + 4u;
                        vec4 _3345 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3332)).x, texelFetch(g_PointLightRenderingBuffer, int(_3332 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3332 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3332 + 3u)).x));
                        uint _3351 = (_3310 * 48u) + 8u;
                        vec3 _3362 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3351)).x, texelFetch(g_PointLightRenderingBuffer, int(_3351 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3351 + 2u)).x));
                        float _3366 = _3326.x - _2286;
                        float _3367 = _3326.y - _2287;
                        float _3368 = _3326.z - _2288;
                        float _3369 = dot(vec3(_3366, _3367, _3368), vec3(_3366, _3367, _3368));
                        float _3372 = inversesqrt(_3369);
                        float _3373 = _3372 * _3366;
                        float _3374 = _3372 * _3367;
                        float _3375 = _3372 * _3368;
                        float _3376 = dot(vec3(_1459, _1462, _1465), vec3(_3373, _3374, _3375));
                        float _3381 = 1.0 - (_3369 * _3326.w);
                        float _4817 = isnan(0.0) ? _3381 : (isnan(_3381) ? 0.0 : max(_3381, 0.0));
                        float _3382 = isnan(1.0) ? _4817 : (isnan(_4817) ? 1.0 : min(_4817, 1.0));
                        float _3383 = sqrt(_3369) * _3345.w;
                        float _3386 = 1.39999997615814208984375 / (_3383 + 1.39999997615814208984375);
                        float _3387 = _3386 * _3386;
                        float _3390 = ((1.0 - _3387) * _3376) + _3387;
                        float _3393 = _3383 * _3383;
                        float _3397 = ((isnan(0.0) ? _3390 : (isnan(_3390) ? 0.0 : max(_3390, 0.0))) * _3382) / ((_3393 * 0.699999988079071044921875) + 1.0);
                        float _3401 = (-0.0) - _2286;
                        float _3402 = (-0.0) - _2287;
                        float _3403 = (-0.0) - _2288;
                        float _3407 = inversesqrt(dot(vec3(_3401, _3402, _3403), vec3(_3401, _3402, _3403)));
                        float _3408 = _3407 * _3401;
                        float _3409 = _3407 * _3402;
                        float _3410 = _3407 * _3403;
                        float _3417 = exp2(log2(1.0 / ((_3393 * 3.5) + 5.0)) * 0.25);
                        float _3419 = 1.0 - sqrt(_1311);
                        float _3426 = sqrt(1.0 - ((1.0 - (_3419 * _3419)) * (1.0 - (_3417 * _3417))));
                        float _3427 = _3426 * _3426;
                        float _3428 = _3427 * _3427;
                        float _3429 = _3408 + _3373;
                        float _3430 = _3409 + _3374;
                        float _3431 = _3410 + _3375;
                        float _3435 = inversesqrt(dot(vec3(_3429, _3430, _3431), vec3(_3429, _3430, _3431)));
                        float _3439 = dot(vec3(_1459, _1462, _1465), vec3(_3408, _3409, _3410));
                        float _4833 = isnan(0.0) ? _3439 : (isnan(_3439) ? 0.0 : max(_3439, 0.0));
                        float _3442 = isnan(1.0) ? _4833 : (isnan(_4833) ? 1.0 : min(_4833, 1.0));
                        float _3443 = dot(vec3(_1459, _1462, _1465), vec3(_3435 * _3429, _3435 * _3430, _3435 * _3431));
                        float _4844 = isnan(0.0) ? _3443 : (isnan(_3443) ? 0.0 : max(_3443, 0.0));
                        float _3446 = isnan(1.0) ? _4844 : (isnan(_4844) ? 1.0 : min(_4844, 1.0));
                        float _3450 = ((_3446 * _3446) * (_3428 + (-1.0))) + 1.0;
                        float _3451 = _3386 * _3427;
                        float _3452 = _3451 * _3451;
                        float _3455 = ((1.0 - _3452) * _3376) + _3452;
                        float _4855 = isnan(0.0) ? _3455 : (isnan(_3455) ? 0.0 : max(_3455, 0.0));
                        float _3456 = isnan(1.0) ? _4855 : (isnan(_4855) ? 1.0 : min(_4855, 1.0));
                        float _3457 = 1.0 - _3427;
                        float _3467 = (0.5 / (((_3456 * ((_3442 * _3457) + _3427)) + 9.9999999392252902907785028219223e-09) + (((_3456 * _3457) + _3427) * _3442))) * _3456;
                        float _4866 = isnan(0.0) ? _3467 : (isnan(_3467) ? 0.0 : max(_3467, 0.0));
                        float _3478 = (((_3428 * 3.1415927410125732421875) * (isnan(1.0) ? _4866 : (isnan(_4866) ? 1.0 : min(_4866, 1.0)))) / ((_3450 * _3450) * ((_3393 * 2.1991131305694580078125) + 3.141590118408203125))) * _3382;
                        _3218 = (_3397 * _3345.x) + _3303;
                        _3219 = (_3397 * _3345.y) + _3304;
                        _3220 = (_3397 * _3345.z) + _3305;
                        _3215 = (_3478 * _3362.x) + _3300;
                        _3216 = (_3478 * _3362.y) + _3301;
                        _3217 = (_3478 * _3362.z) + _3302;
                        if (_3307 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3300 = _3215;
                            _3301 = _3216;
                            _3302 = _3217;
                            _3303 = _3218;
                            _3304 = _3219;
                            _3305 = _3220;
                            _3306 = _3307;
                        }
                    }
                    frontier_phi_27_pred = _3220;
                    frontier_phi_27_pred_1 = _3219;
                    frontier_phi_27_pred_2 = _3218;
                    frontier_phi_27_pred_3 = _3217;
                    frontier_phi_27_pred_4 = _3216;
                    frontier_phi_27_pred_5 = _3215;
                }
                _2873 = frontier_phi_27_pred;
                _2871 = frontier_phi_27_pred_1;
                _2869 = frontier_phi_27_pred_2;
                _2867 = frontier_phi_27_pred_3;
                _2865 = frontier_phi_27_pred_4;
                _2863 = frontier_phi_27_pred_5;
                uint _3073 = _3072 + 1u;
                if (_3073 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3066 = _2863;
                    _3067 = _2865;
                    _3068 = _2867;
                    _3069 = _2869;
                    _3070 = _2871;
                    _3071 = _2873;
                    _3072 = _3073;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2862 = _2863;
            _2864 = _2865;
            _2866 = _2867;
            _2868 = _2869;
            _2870 = _2871;
            _2872 = _2873;
        }
        uvec4 _2876 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2877 = _2876.z;
        uint _2879 = (_2877 >> 8u) & 15u;
        float _3034;
        float _3036;
        float _3038;
        float _3040;
        float _3042;
        float _3044;
        if (((4294967295u << _2879) & _2725) == 0u)
        {
            _3034 = _2862;
            _3036 = _2864;
            _3038 = _2866;
            _3040 = _2868;
            _3042 = _2870;
            _3044 = _2872;
        }
        else
        {
            float _3059 = inversesqrt(dot(vec3(_2286, _2287, _2288), vec3(_2286, _2287, _2288)));
            float _3060 = _3059 * _2286;
            float _3061 = _3059 * _2287;
            float _3062 = _3059 * _2288;
            float frontier_phi_21_22_ladder;
            float frontier_phi_21_22_ladder_1;
            float frontier_phi_21_22_ladder_2;
            float frontier_phi_21_22_ladder_3;
            float frontier_phi_21_22_ladder_4;
            float frontier_phi_21_22_ladder_5;
            if (_2879 < ((_2877 >> 12u) & 15u))
            {
                float _3035;
                float _3037;
                float _3039;
                float _3041;
                float _3043;
                float _3045;
                float _3283 = _2862;
                float _3284 = _2864;
                float _3285 = _2866;
                float _3286 = _2868;
                float _3287 = _2870;
                float _3288 = _2872;
                uint _3289 = _2879;
                uint _3298;
                bool _3299;
                for (;;)
                {
                    _3298 = texelFetch(g_lightClassification, int((((_2719 << 5u) + (_2705 << 9u)) + (_3289 << 2u)) >> 2u)).x;
                    _3299 = _3298 == 0u;
                    float frontier_phi_39_pred;
                    float frontier_phi_39_pred_1;
                    float frontier_phi_39_pred_2;
                    float frontier_phi_39_pred_3;
                    float frontier_phi_39_pred_4;
                    float frontier_phi_39_pred_5;
                    if (_3299)
                    {
                        frontier_phi_39_pred = _3288;
                        frontier_phi_39_pred_1 = _3287;
                        frontier_phi_39_pred_2 = _3286;
                        frontier_phi_39_pred_3 = _3285;
                        frontier_phi_39_pred_4 = _3284;
                        frontier_phi_39_pred_5 = _3283;
                    }
                    else
                    {
                        float _3526;
                        float _3527;
                        float _3528;
                        float _3529;
                        float _3530;
                        float _3531;
                        float _3829;
                        float _3830;
                        float _3831;
                        float _3832;
                        float _3833;
                        float _3834;
                        float _3548 = _3283;
                        float _3549 = _3284;
                        float _3550 = _3285;
                        float _3551 = _3286;
                        float _3552 = _3287;
                        float _3553 = _3288;
                        uint _3554 = _3298;
                        uint _3555;
                        vec4 _3580;
                        float _3581;
                        vec4 _3596;
                        vec3 _3608;
                        vec4 _3623;
                        vec4 _3638;
                        float _3684;
                        bool _3685;
                        for (;;)
                        {
                            uint _3565 = ((_3289 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3554));
                            _3555 = (_3554 + 4294967295u) & _3554;
                            uint _3567 = _3565 * 40u;
                            _3580 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3567)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3567 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3567 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3567 + 3u)).x));
                            _3581 = _3580.w;
                            uint _3583 = (_3565 * 40u) + 4u;
                            _3596 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3583)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3583 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3583 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3583 + 3u)).x));
                            uint _3598 = (_3565 * 40u) + 8u;
                            _3608 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3598)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3598 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3598 + 2u)).x));
                            uint _3610 = (_3565 * 40u) + 16u;
                            _3623 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3610)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3610 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3610 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3610 + 3u)).x));
                            uint _3625 = (_3565 * 40u) + 20u;
                            _3638 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3625)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3625 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3625 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3625 + 3u)).x));
                            uint _3640 = (_3565 * 40u) + 24u;
                            vec4 _3653 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3640)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3640 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3640 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3640 + 3u)).x));
                            uint _3659 = (_3565 * 40u) + 28u;
                            vec4 _3672 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3659)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3659 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3659 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3659 + 3u)).x));
                            _3684 = fma(_2288, _3672.z, fma(_2287, _3672.y, _3672.x * _2286)) + _3672.w;
                            _3685 = !((fma(_2288, _3653.z, fma(_2287, _3653.y, _3653.x * _2286)) + _3653.w) <= 0.0);
                            float frontier_phi_48_pred;
                            float frontier_phi_48_pred_1;
                            float frontier_phi_48_pred_2;
                            float frontier_phi_48_pred_3;
                            float frontier_phi_48_pred_4;
                            float frontier_phi_48_pred_5;
                            if (_3685)
                            {
                                float _3712 = _3580.x - _2286;
                                float _3713 = _3580.y - _2287;
                                float _3714 = _3580.z - _2288;
                                float _3715 = dot(vec3(_3712, _3713, _3714), vec3(_3712, _3713, _3714));
                                float _3718 = inversesqrt(_3715);
                                float _3719 = _3718 * _3712;
                                float _3720 = _3718 * _3713;
                                float _3721 = _3718 * _3714;
                                float _3725 = 1.0 - (_3715 / (_3581 * _3581));
                                float _4877 = isnan(0.0) ? _3725 : (isnan(_3725) ? 0.0 : max(_3725, 0.0));
                                float _3726 = isnan(1.0) ? _4877 : (isnan(_4877) ? 1.0 : min(_4877, 1.0));
                                float _3730 = sqrt(_3715) * _3596.w;
                                float _3732 = 1.39999997615814208984375 / (_3730 + 1.39999997615814208984375);
                                float _3733 = _3732 * _3732;
                                float _3736 = ((1.0 - _3733) * dot(vec3(_3719, _3720, _3721), vec3(_1459, _1462, _1465))) + _3733;
                                float _3739 = _3730 * _3730;
                                float _3743 = (fma(_2288, _3623.z, fma(_2287, _3623.y, _3623.x * _2286)) + _3623.w) / _3684;
                                float _3744 = (fma(_2288, _3638.z, fma(_2287, _3638.y, _3638.x * _2286)) + _3638.w) / _3684;
                                float _3748 = 1.0 - dot(vec2(_3743, _3744), vec2(_3743, _3744));
                                float _4893 = isnan(0.0) ? _3748 : (isnan(_3748) ? 0.0 : max(_3748, 0.0));
                                float _3749 = isnan(1.0) ? _4893 : (isnan(_4893) ? 1.0 : min(_4893, 1.0));
                                float _3750 = _3749 * (((isnan(0.0) ? _3736 : (isnan(_3736) ? 0.0 : max(_3736, 0.0))) * _3726) / ((_3739 * 0.699999988079071044921875) + 1.0));
                                float _3762 = exp2(log2(1.0 / ((_3739 * 3.5) + 5.0)) * 0.25);
                                float _3764 = 1.0 - sqrt(_1311);
                                float _3771 = sqrt(1.0 - ((1.0 - (_3764 * _3764)) * (1.0 - (_3762 * _3762))));
                                float _3772 = _3771 * _3771;
                                float _3773 = _3772 * _3772;
                                float _3774 = _3719 - _3060;
                                float _3775 = _3720 - _3061;
                                float _3776 = _3721 - _3062;
                                float _3780 = inversesqrt(dot(vec3(_3774, _3775, _3776), vec3(_3774, _3775, _3776)));
                                float _3784 = dot(vec3(_1459, _1462, _1465), vec3((-0.0) - _3060, (-0.0) - _3061, (-0.0) - _3062));
                                float _4904 = isnan(0.0) ? _3784 : (isnan(_3784) ? 0.0 : max(_3784, 0.0));
                                float _3787 = isnan(1.0) ? _4904 : (isnan(_4904) ? 1.0 : min(_4904, 1.0));
                                float _3788 = dot(vec3(_1459, _1462, _1465), vec3(_3780 * _3774, _3780 * _3775, _3780 * _3776));
                                float _4915 = isnan(0.0) ? _3788 : (isnan(_3788) ? 0.0 : max(_3788, 0.0));
                                float _3791 = isnan(1.0) ? _4915 : (isnan(_4915) ? 1.0 : min(_4915, 1.0));
                                float _3795 = ((_3791 * _3791) * (_3773 + (-1.0))) + 1.0;
                                float _3796 = _3732 * _3772;
                                float _3797 = _3796 * _3796;
                                float _3803 = ((1.0 - _3797) * dot(vec3(_1459, _1462, _1465), vec3(_3719, _3720, _3721))) + _3797;
                                float _4926 = isnan(0.0) ? _3803 : (isnan(_3803) ? 0.0 : max(_3803, 0.0));
                                float _3804 = isnan(1.0) ? _4926 : (isnan(_4926) ? 1.0 : min(_4926, 1.0));
                                float _3805 = 1.0 - _3772;
                                float _3815 = (0.5 / (((_3804 * ((_3787 * _3805) + _3772)) + 9.9999999392252902907785028219223e-09) + (((_3804 * _3805) + _3772) * _3787))) * _3804;
                                float _4937 = isnan(0.0) ? _3815 : (isnan(_3815) ? 0.0 : max(_3815, 0.0));
                                float _3825 = (_3749 * _3726) * (((_3773 * 3.1415927410125732421875) * (isnan(1.0) ? _4937 : (isnan(_4937) ? 1.0 : min(_4937, 1.0)))) / ((_3795 * _3795) * ((_3739 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_48_pred = _3750 * _3596.z;
                                frontier_phi_48_pred_1 = _3750 * _3596.y;
                                frontier_phi_48_pred_2 = _3750 * _3596.x;
                                frontier_phi_48_pred_3 = _3825 * _3608.z;
                                frontier_phi_48_pred_4 = _3825 * _3608.y;
                                frontier_phi_48_pred_5 = _3825 * _3608.x;
                            }
                            else
                            {
                                frontier_phi_48_pred = 0.0;
                                frontier_phi_48_pred_1 = 0.0;
                                frontier_phi_48_pred_2 = 0.0;
                                frontier_phi_48_pred_3 = 0.0;
                                frontier_phi_48_pred_4 = 0.0;
                                frontier_phi_48_pred_5 = 0.0;
                            }
                            _3834 = frontier_phi_48_pred;
                            _3833 = frontier_phi_48_pred_1;
                            _3832 = frontier_phi_48_pred_2;
                            _3831 = frontier_phi_48_pred_3;
                            _3830 = frontier_phi_48_pred_4;
                            _3829 = frontier_phi_48_pred_5;
                            _3529 = _3832 + _3551;
                            _3530 = _3833 + _3552;
                            _3531 = _3834 + _3553;
                            _3526 = _3829 + _3548;
                            _3527 = _3830 + _3549;
                            _3528 = _3831 + _3550;
                            if (_3555 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3548 = _3526;
                                _3549 = _3527;
                                _3550 = _3528;
                                _3551 = _3529;
                                _3552 = _3530;
                                _3553 = _3531;
                                _3554 = _3555;
                                continue;
                            }
                        }
                        frontier_phi_39_pred = _3531;
                        frontier_phi_39_pred_1 = _3530;
                        frontier_phi_39_pred_2 = _3529;
                        frontier_phi_39_pred_3 = _3528;
                        frontier_phi_39_pred_4 = _3527;
                        frontier_phi_39_pred_5 = _3526;
                    }
                    _3045 = frontier_phi_39_pred;
                    _3043 = frontier_phi_39_pred_1;
                    _3041 = frontier_phi_39_pred_2;
                    _3039 = frontier_phi_39_pred_3;
                    _3037 = frontier_phi_39_pred_4;
                    _3035 = frontier_phi_39_pred_5;
                    uint _3290 = _3289 + 1u;
                    if (_3290 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3283 = _3035;
                        _3284 = _3037;
                        _3285 = _3039;
                        _3286 = _3041;
                        _3287 = _3043;
                        _3288 = _3045;
                        _3289 = _3290;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_21_22_ladder = _3045;
                frontier_phi_21_22_ladder_1 = _3041;
                frontier_phi_21_22_ladder_2 = _3039;
                frontier_phi_21_22_ladder_3 = _3037;
                frontier_phi_21_22_ladder_4 = _3035;
                frontier_phi_21_22_ladder_5 = _3043;
            }
            else
            {
                frontier_phi_21_22_ladder = _2872;
                frontier_phi_21_22_ladder_1 = _2868;
                frontier_phi_21_22_ladder_2 = _2866;
                frontier_phi_21_22_ladder_3 = _2864;
                frontier_phi_21_22_ladder_4 = _2862;
                frontier_phi_21_22_ladder_5 = _2870;
            }
            _3034 = frontier_phi_21_22_ladder_4;
            _3036 = frontier_phi_21_22_ladder_3;
            _3038 = frontier_phi_21_22_ladder_2;
            _3040 = frontier_phi_21_22_ladder_1;
            _3042 = frontier_phi_21_22_ladder_5;
            _3044 = frontier_phi_21_22_ladder;
        }
        float _3049 = isnan(1.0) ? _1502 : (isnan(_1502) ? 1.0 : min(_1502, 1.0));
        _2737 = (_3049 * _3040) + _2522;
        _2739 = (_3049 * _3042) + _2523;
        _2741 = (_3049 * _3044) + _2524;
        _2743 = ((_3034 * 0.039999999105930328369140625) * _3049) + _2599;
        _2745 = ((_3036 * 0.039999999105930328369140625) * _3049) + _2603;
        _2747 = ((_3038 * 0.039999999105930328369140625) * _3049) + _2607;
    }
    else
    {
        _2737 = _2522;
        _2739 = _2523;
        _2741 = _2524;
        _2743 = _2599;
        _2745 = _2603;
        _2747 = _2607;
    }
    float _2767 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2768 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2769 = cbSceneParam._m0[86u].x * ((_1402 / cbSceneParam._m0[86u].x) + ((_1518 * cbMtdParam._m0[12u].y) * dot(vec3(_1438, _1439, _1440), vec3(_230, _231, _232))));
    float _2770 = isnan(_2767) ? _2769 : (isnan(_2769) ? _2767 : min(_2769, _2767));
    float _2771 = isnan(_2768) ? _1403 : (isnan(_1403) ? _2768 : min(_1403, _2768));
    vec4 _2773 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2770, _2771), 0.0);
    float _2775 = _2773.x;
    bool _2795 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2775)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2775))) > _1326;
    float _2796 = _2795 ? _2770 : _1402;
    float _2797 = _2795 ? _2771 : _1403;
    vec4 _2799 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2796, _2797));
    vec4 _2804 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2796, _2797));
    float _2806 = _2804.x;
    bool _2811 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _2820 = (-0.0) - cbSceneParam._m0[2u].z;
    float _2826 = (_2811 ? (_2820 / (cbSceneParam._m0[2u].x - _2806)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2806))) - _1326;
    float _2828 = cbMtdParam._m0[42u].y + cbMtdParam._m0[36u].y;
    float _2829 = cbMtdParam._m0[42u].z + cbMtdParam._m0[36u].z;
    float _2830 = cbMtdParam._m0[42u].w + cbMtdParam._m0[36u].w;
    bool _2836 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _2840 = (isnan(_2826) ? 0.0 : (isnan(0.0) ? _2826 : max(0.0, _2826))) * (-1.44269502162933349609375);
    float _4968 = isnan(0.0) ? _1488 : (isnan(_1488) ? 0.0 : max(_1488, 0.0));
    float _4979 = isnan(0.0) ? _1489 : (isnan(_1489) ? 0.0 : max(_1489, 0.0));
    float _4990 = isnan(0.0) ? _1490 : (isnan(_1490) ? 0.0 : max(_1490, 0.0));
    float _2963;
    float _2964;
    float _2965;
    if ((1.0 - _1233) > 0.00999999977648258209228515625)
    {
        vec4 _2884 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2796, _2797), 0.0);
        float _2886 = _2884.x;
        float _2892 = (_2811 ? (_2820 / (cbSceneParam._m0[2u].x - _2886)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2886))) - _1326;
        uint _2898 = floatBitsToUint(cbInstanceData._m0[_1248]).x * 14u;
        uint _2904 = _2898 + 4u;
        float _2913 = dot(vec3(cbLight._m0[_2898].xyz), vec3(_251, _252, _253));
        float _2920 = dot(vec3((-0.0) - _1382, (-0.0) - _1383, (-0.0) - _1384), vec3((-0.0) - _251, (-0.0) - _252, (-0.0) - _253));
        float _2925 = ((isnan(0.0) ? _2920 : (isnan(_2920) ? 0.0 : max(_2920, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _2913 : (isnan(_2913) ? 0.001000000047497451305389404296875 : max(_2913, 0.001000000047497451305389404296875)))) + 1.0;
        float _2927 = (-0.0) - ((isnan(_2892) ? 0.0 : (isnan(0.0) ? _2892 : max(0.0, _2892))) * _2925);
        _2963 = _2836 ? 0.0 : ((((_1292 * cbMtdParam._m0[36u].y) * cbLight._m0[_2904].x) / ((_2925 * _2828) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2828 * 1.44269502162933349609375) * _2927)));
        _2964 = _2836 ? 0.0 : ((((_1292 * cbMtdParam._m0[36u].z) * cbLight._m0[_2904].y) / ((_2925 * _2829) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2829 * 1.44269502162933349609375) * _2927)));
        _2965 = _2836 ? 0.0 : ((((_1292 * cbMtdParam._m0[36u].w) * cbLight._m0[_2904].z) / ((_2925 * _2830) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2830 * 1.44269502162933349609375) * _2927)));
    }
    else
    {
        _2963 = 0.0;
        _2964 = 0.0;
        _2965 = 0.0;
    }
    float _2981 = (_2963 + ((exp2(_2840 * (_2836 ? 0.0 : _2828)) * _2799.x) * cbSceneParam._m0[72u].w)) * _2241;
    float _2982 = (_2964 + ((exp2(_2840 * (_2836 ? 0.0 : _2829)) * _2799.y) * cbSceneParam._m0[72u].w)) * _2241;
    float _2983 = (_2965 + ((exp2(_2840 * (_2836 ? 0.0 : _2830)) * _2799.z) * cbSceneParam._m0[72u].w)) * _2241;
    float _2991 = (_2981 + ((_2743 + ((_1533.x * _1514) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4968 : (isnan(_4968) ? 1.0 : min(_4968, 1.0))) * (_2737 + (_2242 * (isnan(0.0) ? _2231 : (isnan(_2231) ? 0.0 : max(_2231, 0.0)))))) - _2981) * _1233);
    float _2993 = (_2982 + ((_2745 + ((_1533.y * _1514) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4979 : (isnan(_4979) ? 1.0 : min(_4979, 1.0))) * (_2739 + (_2242 * (isnan(0.0) ? _2234 : (isnan(_2234) ? 0.0 : max(_2234, 0.0)))))) - _2982) * _1233);
    float _2995 = (_2983 + ((_2747 + ((_1533.z * _1514) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4990 : (isnan(_4990) ? 1.0 : min(_4990, 1.0))) * (_2741 + (_2242 * (isnan(0.0) ? _2237 : (isnan(_2237) ? 0.0 : max(_2237, 0.0)))))) - _2983) * _1233);
    float _3000 = cbInstanceData._m0[_1247 + 6u].w * (isnan(1.0) ? _4300 : (isnan(_4300) ? 1.0 : min(_4300, 1.0)));
    float _3005 = _1402 / cbSceneParam._m0[86u].x;
    float _3006 = _1403 / cbSceneParam._m0[86u].y;
    vec4 _3020 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3005, _3006, (log2((isnan(cbSceneParam._m0[77u].w) ? _1326 : (isnan(_1326) ? cbSceneParam._m0[77u].w : min(_1326, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3022 = _3020.x;
    float _3023 = _3020.y;
    float _3024 = _3020.z;
    float _3025 = _3020.w;
    float _3123;
    float _3125;
    float _3127;
    float _3129;
    if (_1326 > cbSceneParam._m0[78u].w)
    {
        float _3087 = isnan(_1326) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1326 : min(cbSceneParam._m0[80u].w, _1326));
        float _3088 = _3087 / _1326;
        float _3099 = _3088 * _1375;
        float _3100 = _1376 * _3088;
        float _3101 = (-0.0) - _3100;
        float _3102 = _3088 * _1377;
        float _3104 = (cbSceneParam._m0[77u].w * _3101) / _3087;
        float _3105 = _3104 + cbSceneParam._m0[79u].w;
        float _3106 = cbSceneParam._m0[79u].w - _3100;
        float _3112 = sqrt(((_3099 * _3099) + (_3100 * _3100)) + (_3102 * _3102));
        float _3115 = (1.0 - (cbSceneParam._m0[77u].w / _3087)) * _3112;
        float _3121 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3122 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3483;
        if (abs((_3101 - _3104) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3483 = ((((_3105 > 0.0) ? exp2(_3121 * _3105) : (2.0 - exp2(_3122 * _3105))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3115;
        }
        else
        {
            float _3240 = 1.0 / cbSceneParam._m0[80u].x;
            float _3241 = isnan(_3106) ? _3105 : (isnan(_3105) ? _3106 : max(_3105, _3106));
            float _3242 = isnan(_3106) ? _3105 : (isnan(_3105) ? _3106 : min(_3105, _3106));
            float _3251 = isnan(0.0) ? _3241 : (isnan(_3241) ? 0.0 : min(_3241, 0.0));
            float _3252 = isnan(0.0) ? _3242 : (isnan(_3242) ? 0.0 : min(_3242, 0.0));
            _3483 = ((abs(_3112 / _3101) * cbSceneParam._m0[80u].y) * ((((_3251 - _3252) * 2.0) - ((exp2(_3121 * (isnan(0.0) ? _3241 : (isnan(_3241) ? 0.0 : max(_3241, 0.0)))) - exp2(_3121 * (isnan(0.0) ? _3242 : (isnan(_3242) ? 0.0 : max(_3242, 0.0))))) * _3240)) - ((exp2(_3122 * _3251) - exp2(_3122 * _3252)) * _3240))) + (_3115 * cbSceneParam._m0[80u].z);
        }
        vec4 _3485 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3005, _3006, 1.0), 0.0);
        float _3494 = exp2((_3483 * (-1.44269502162933349609375)) * (1.0 - _3485.w));
        float _3495 = log2(_3494);
        float _3511 = log2(_3025);
        _3123 = (exp2(_3511 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3495 * cbSceneParam._m0[78u].x)) * _3485.x) / cbSceneParam._m0[78u].x)) + _3022;
        _3125 = (exp2(_3511 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3495 * cbSceneParam._m0[78u].y)) * _3485.y) / cbSceneParam._m0[78u].y)) + _3023;
        _3127 = (exp2(_3511 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3495 * cbSceneParam._m0[78u].z)) * _3485.z) / cbSceneParam._m0[78u].z)) + _3024;
        _3129 = _3494 * _3025;
    }
    else
    {
        _3123 = _3022;
        _3125 = _3023;
        _3127 = _3024;
        _3129 = _3025;
    }
    bool _3521;
    float _3185;
    vec4 _3188;
    float _3190;
    vec4 _3192;
    float _3200;
    float _3201;
    float _3202;
    float _3203;
    bool _3214;
    for (;;)
    {
        bool _3141 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _3143 = log2(_3129);
        float _3150 = exp2(_3143 * cbSceneParam._m0[78u].x) * _2991;
        float _3151 = exp2(_3143 * cbSceneParam._m0[78u].y) * _2993;
        float _3152 = exp2(_3143 * cbSceneParam._m0[78u].z) * _2995;
        vec4 _3160 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1402, _1403));
        float _3162 = _3160.x;
        float _3183 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _3162)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3162))) - _1326) * cbMtdParam._m0[14u].w;
        float _5056 = isnan(0.0) ? _3183 : (isnan(_3183) ? 0.0 : max(_3183, 0.0));
        _3185 = _3000 * (isnan(1.0) ? _5056 : (isnan(_5056) ? 1.0 : min(_5056, 1.0)));
        float _3186 = _1391 + (-0.5);
        _3188 = cbMtdParam._m0[1u];
        _3190 = _3188.y * _3186;
        _3192 = cbMatDynParam._m0[0u];
        float _3199 = (roundEven(_3192.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3200 = _3199 * (_3141 ? _3150 : (_3150 + (cbSceneParam._m0[72u].w * _3123)));
        _3201 = _3199 * (_3141 ? _3151 : (_3151 + (cbSceneParam._m0[72u].w * _3125)));
        _3202 = _3199 * (_3141 ? _3152 : (_3152 + (cbSceneParam._m0[72u].w * _3127)));
        _3203 = _3186 * 0.999000012874603271484375;
        _3214 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3214)
        {
            if ((cbInstanceData._m0[_1247 + 7u].x + _3203) < 0.5)
            {
                _3521 = true;
                break;
            }
        }
        uint _3275 = _1478 + uint(_3192.w);
        if ((cbInstanceData._m0[_3275].w < 1.0) && ((cbInstanceData._m0[_3275].w + _3203) < 0.5))
        {
            _3521 = true;
            break;
        }
        if ((_3190 + 1.0) < _3188.x)
        {
            _3521 = true;
            break;
        }
        _3521 = false;
        break;
    }
    float _3539;
    if (_3521)
    {
        discard_state = true;
        _3539 = 0.0;
    }
    else
    {
        _3539 = _3185;
    }
    SV_Target.x = _3200;
    SV_Target.y = _3201;
    SV_Target.z = _3202;
    SV_Target.w = _3539;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3185;
    discard_exit();
}


