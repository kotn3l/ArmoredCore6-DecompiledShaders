#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[46];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 54) uniform texture2D g_ReflectionTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 57) uniform texture2D g_WaterSimulationNormalTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_5;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in vec4 TEXCOORD_8;
layout(location = 7) in float TEXCOORD_11;
layout(location = 7, component = 1) in float TEXCOORD_12;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _213 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _214 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _215 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _221 = inversesqrt(dot(vec3(_213, _214, _215), vec3(_213, _214, _215)));
    float _222 = _221 * _213;
    float _223 = _221 * _214;
    float _224 = _221 * _215;
    float _228 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _229 = _228 * NORMAL.x;
    float _230 = _228 * NORMAL.y;
    float _231 = _228 * NORMAL.z;
    float _235 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _243;
    float _244;
    float _245;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _243 = (-0.0) - _229;
        _244 = (-0.0) - _230;
        _245 = (-0.0) - _231;
    }
    else
    {
        _243 = _229;
        _244 = _230;
        _245 = _231;
    }
    float _291 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _301 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _291);
    float _302 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _291);
    float _303 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _291);
    float _318 = cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x;
    vec4 _335 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_2, SS_BumpMap), vec2((((_318 * cbMtdParam._m0[27u].y) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_318 * cbMtdParam._m0[27u].z) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _338 = _335.x;
    float _339 = _335.y;
    float _340 = _335.z;
    float _341 = _335.w;
    float _354 = cbMtdParam._m0[14u].y - cbMtdParam._m0[14u].x;
    float _357 = (sqrt(((_301 * _301) + (_302 * _302)) + (_303 * _303)) - cbMtdParam._m0[14u].x) / (isnan(0.001000000047497451305389404296875) ? _354 : (isnan(_354) ? 0.001000000047497451305389404296875 : max(_354, 0.001000000047497451305389404296875)));
    float _358 = _357 + 0.180000007152557373046875;
    float _360 = _358 * 12.0;
    float _3547 = isnan(0.0) ? _360 : (isnan(_360) ? 0.0 : max(_360, 0.0));
    float _363 = isnan(1.0) ? _3547 : (isnan(_3547) ? 1.0 : min(_3547, 1.0));
    vec4 _375 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _377 = _375.x;
    float _399 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _377)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _377))) - POSITION_1.w;
    float _400 = _399 / ((_363 * 0.0599999986588954925537109375) + 0.0599999986588954925537109375);
    float _3558 = isnan(0.0) ? _400 : (isnan(_400) ? 0.0 : max(_400, 0.0));
    float _401 = isnan(1.0) ? _3558 : (isnan(_3558) ? 1.0 : min(_3558, 1.0));
    float _402 = isnan(0.5) ? _401 : (isnan(_401) ? 0.5 : max(_401, 0.5));
    float _404 = 1.0 - _402;
    float _405 = _358 * 7.0;
    float _3574 = isnan(0.0) ? _405 : (isnan(_405) ? 0.0 : max(_405, 0.0));
    float _407 = isnan(1.0) ? _3574 : (isnan(_3574) ? 1.0 : min(_3574, 1.0));
    float _420 = (_340 * 0.00200000009499490261077880859375) + TEXCOORD.x;
    float _421 = (_340 * 0.00999999977648258209228515625) + TEXCOORD.y;
    vec4 _435 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[25u].w * _318) + _420) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[26u].x * _318) + _421) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _437 = _435.x;
    float _462 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[23u].w * _420) + (cbMtdParam._m0[26u].w * _318)) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[24u].x * _421) + (cbMtdParam._m0[27u].x * _318)) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x + (-0.0500000007450580596923828125);
    float _465 = (isnan(_462) ? _437 : (isnan(_437) ? _462 : max(_437, _462))) - _407;
    float _3590 = isnan(0.0) ? _465 : (isnan(_465) ? 0.0 : max(_465, 0.0));
    float _466 = isnan(1.0) ? _3590 : (isnan(_3590) ? 1.0 : min(_3590, 1.0));
    float _467 = _407 + 0.5;
    float _3601 = isnan(0.0) ? _467 : (isnan(_467) ? 0.0 : max(_467, 0.0));
    float _478 = cbMtdParam._m0[16u].w * _318;
    float _479 = cos(_478);
    float _480 = sin(_478);
    vec4 _504 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((((_480 * cbMtdParam._m0[31u].y) + TEXCOORD.x) + (cbMtdParam._m0[22u].y * _318)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((_479 * cbMtdParam._m0[31u].z) + TEXCOORD.y) + (cbMtdParam._m0[22u].z * _318)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _508 = _504.z;
    vec4 _523 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[21u].w * _318) + TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[22u].x * _318) + TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _527 = _523.z;
    float _530 = (isnan(_527) ? _508 : (isnan(_508) ? _527 : max(_508, _527))) * (isnan(1.0) ? _3601 : (isnan(_3601) ? 1.0 : min(_3601, 1.0)));
    float _3617 = isnan(0.0) ? _530 : (isnan(_530) ? 0.0 : max(_530, 0.0));
    float _531 = isnan(1.0) ? _3617 : (isnan(_3617) ? 1.0 : min(_3617, 1.0));
    float _534 = (_404 - _341) + (isnan(_531) ? _466 : (isnan(_466) ? _531 : max(_466, _531)));
    float _3633 = isnan(0.0) ? _534 : (isnan(_534) ? 0.0 : max(_534, 0.0));
    float _535 = isnan(1.0) ? _3633 : (isnan(_3633) ? 1.0 : min(_3633, 1.0));
    float _536 = _535 * _402;
    float _3644 = isnan(0.0) ? _357 : (isnan(_357) ? 0.0 : max(_357, 0.0));
    float _545 = isnan(1.0) ? _3644 : (isnan(_3644) ? 1.0 : min(_3644, 1.0));
    float _546 = _340 - _545;
    float _3655 = isnan(0.0) ? _546 : (isnan(_546) ? 0.0 : max(_546, 0.0));
    float _547 = isnan(1.0) ? _3655 : (isnan(_3655) ? 1.0 : min(_3655, 1.0));
    vec4 _603 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[23u].y * _318) + (cbMtdParam._m0[30u].w * _480)) + (cbMtdParam._m0[34u].w * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[23u].z * _318) + (cbMtdParam._m0[31u].x * _479)) + (cbMtdParam._m0[35u].x * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _630 = cbMtdParam._m0[38u].x * TEXCOORD_5.x;
    float _689 = ((((((_603.w + (-0.5)) * cbMtdParam._m0[44u].x) + (cbMtdParam._m0[39u].z * (_504.w + (-0.5)))) + (cbMtdParam._m0[40u].y * (_523.w + (-0.5)))) + (((_630 + cbMtdParam._m0[41u].w) * cos(cbMtdParam._m0[13u].y * _318)) * (texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[32u].w * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[33u].x * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) + ((sin(cbMtdParam._m0[13u].x * _318) * (cbMtdParam._m0[41u].x + _630)) * (texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[31u].w * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[32u].x * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) * (1.0 - TEXCOORD_5.y);
    float _716 = 1.0 - _341;
    float _721 = ((isnan(0.550000011920928955078125) ? _716 : (isnan(_716) ? 0.550000011920928955078125 : max(_716, 0.550000011920928955078125))) + (-0.550000011920928955078125)) * cbMtdParam._m0[16u].z;
    float _724 = ((TEXCOORD_5.y * (-0.5)) * _721) + _721;
    float _728 = ((TEXCOORD_5.z * (-0.699999988079071044921875)) * _724) + _724;
    float _738 = (((_689 + ((cbMtdParam._m0[37u].y - (cbMtdParam._m0[37u].y * TEXCOORD_5.y)) * _340)) + ((texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[35u].w * TEXCOORD.x) + (cbMtdParam._m0[22u].w * _318)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[36u].x * TEXCOORD.y) + (cbMtdParam._m0[23u].x * _318)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).w + (-0.5)) * cbMtdParam._m0[44u].w)) + ((sin(cbMtdParam._m0[21u].y * _318) * cbMtdParam._m0[38u].w) * (isnan(0.300000011920928955078125) ? TEXCOORD_5.z : (isnan(TEXCOORD_5.z) ? 0.300000011920928955078125 : max(TEXCOORD_5.z, 0.300000011920928955078125))))) + _728;
    float _741 = (_738 + cbMtdParam._m0[20u].z) * cbMtdParam._m0[20u].w;
    float _3676 = isnan(0.0) ? _741 : (isnan(_741) ? 0.0 : max(_741, 0.0));
    float _742 = isnan(1.0) ? _3676 : (isnan(_3676) ? 1.0 : min(_3676, 1.0));
    float _754 = inversesqrt(dot(vec3(_301, _302, _303), vec3(_301, _302, _303)));
    float _758 = dot(vec4(_754 * _301, _754 * _302, _754 * _303, 0.0), vec4(_243, _244, _245, 0.0));
    float _3687 = isnan(0.0) ? _758 : (isnan(_758) ? 0.0 : max(_758, 0.0));
    float _766 = exp2(log2((1.0 - (isnan(1.0) ? _3687 : (isnan(_3687) ? 1.0 : min(_3687, 1.0)))) * cbMtdParam._m0[12u].z) * cbMtdParam._m0[12u].w);
    float _3698 = isnan(0.0) ? _766 : (isnan(_766) ? 0.0 : max(_766, 0.0));
    float _767 = isnan(1.0) ? _3698 : (isnan(_3698) ? 1.0 : min(_3698, 1.0));
    float _771 = ((_536 + cbMtdParam._m0[9u].x) + (_547 * cbMtdParam._m0[10u].x)) + ((_742 * cbMtdParam._m0[11u].x) * _767);
    float _772 = ((_536 + cbMtdParam._m0[9u].y) + (_547 * cbMtdParam._m0[10u].y)) + ((_742 * cbMtdParam._m0[11u].y) * _767);
    float _773 = ((_536 + cbMtdParam._m0[9u].z) + (_547 * cbMtdParam._m0[10u].z)) + ((_742 * cbMtdParam._m0[11u].z) * _767);
    float _3709 = isnan(0.0) ? _402 : (isnan(_402) ? 0.0 : max(_402, 0.0));
    float _774 = isnan(1.0) ? _3709 : (isnan(_3709) ? 1.0 : min(_3709, 1.0));
    float _3720 = isnan(0.0) ? _404 : (isnan(_404) ? 0.0 : max(_404, 0.0));
    float _784 = isnan(1.0) ? _3720 : (isnan(_3720) ? 1.0 : min(_3720, 1.0));
    float _787 = (_363 * (-0.87999999523162841796875)) * _784;
    float _790 = (((((1.0 - _771) - _774) * _545) + _771) + _784) + _787;
    float _793 = (((((1.0 - _772) - _774) * _545) + _772) + _784) + _787;
    float _796 = (((((1.0 - _773) - _774) * _545) + _773) + _784) + _787;
    float _797 = _340 * 0.01200000010430812835693359375;
    float _819 = (_340 * 0.300000011920928955078125) * texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[35u].y * _318) + _797) + (cbMtdParam._m0[24u].y * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[35u].z * _318) + _797) + (cbMtdParam._m0[24u].z * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z;
    float _3731 = isnan(0.0) ? _819 : (isnan(_819) ? 0.0 : max(_819, 0.0));
    float _820 = isnan(1.0) ? _3731 : (isnan(_3731) ? 1.0 : min(_3731, 1.0));
    float _830 = (((1.0 - _790) * TEXCOORD_5.x) * _820) + _790;
    float _831 = (((1.0 - _793) * TEXCOORD_5.x) * _820) + _793;
    float _832 = (((1.0 - _796) * TEXCOORD_5.x) * _820) + _796;
    vec4 _866 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].w * _318) + (cbMtdParam._m0[30u].y * _480)) + (cbMtdParam._m0[29u].y * _420)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[28u].x * _318) + (cbMtdParam._m0[30u].z * _479)) + (cbMtdParam._m0[29u].z * _421)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _869 = _866.y;
    float _876 = 1.0 - (_399 / cbMtdParam._m0[18u].w);
    float _880 = ((_866.x * TEXCOORD_8.x) * cbMtdParam._m0[18u].z) * (isnan(0.0) ? _876 : (isnan(_876) ? 0.0 : max(_876, 0.0)));
    float _886 = _869 * TEXCOORD_8.y;
    float _889 = ((isnan(cbMtdParam._m0[19u].x) ? _886 : (isnan(_886) ? cbMtdParam._m0[19u].x : max(_886, cbMtdParam._m0[19u].x))) - cbMtdParam._m0[19u].x) * cbMtdParam._m0[19u].y;
    float _890 = isnan(_889) ? _880 : (isnan(_880) ? _889 : max(_880, _889));
    float _3757 = isnan(0.0) ? _890 : (isnan(_890) ? 0.0 : max(_890, 0.0));
    float _891 = isnan(1.0) ? _3757 : (isnan(_3757) ? 1.0 : min(_3757, 1.0));
    float _898 = (_891 * (1.0 - _830)) + _830;
    float _899 = (_891 * (1.0 - _831)) + _831;
    float _900 = (_891 * (1.0 - _832)) + _832;
    float _935 = exp2(log2(cbMtdParam._m0[15u].w * _716) * cbMtdParam._m0[17u].x);
    float _3768 = isnan(0.0) ? _935 : (isnan(_935) ? 0.0 : max(_935, 0.0));
    float _936 = isnan(1.0) ? _3768 : (isnan(_3768) ? 1.0 : min(_3768, 1.0));
    float _937 = _936 * texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[28u].y * _318) + (cbMtdParam._m0[28u].w * _716)) + (cbMtdParam._m0[29u].w * _420)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[28u].z * _318) + (cbMtdParam._m0[29u].x * _716)) + (cbMtdParam._m0[30u].x * _421)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w)).z;
    float _940 = ((_936 - _937) * cbMtdParam._m0[17u].w) + _937;
    float _944 = _407 * TEXCOORD_8.z;
    float _951 = ((_944 * (1.0 - _898)) * _940) + _898;
    float _952 = ((_944 * (1.0 - _899)) * _940) + _899;
    float _953 = ((_944 * (1.0 - _900)) * _940) + _900;
    float _957 = 1.0 - (_399 / cbMtdParam._m0[18u].x);
    float _963 = (cbMtdParam._m0[18u].y * _869) * (isnan(0.0) ? _957 : (isnan(_957) ? 0.0 : max(_957, 0.0)));
    float _967 = (_963 * (1.0 - _951)) + _951;
    float _968 = (_963 * (1.0 - _952)) + _952;
    float _969 = (_963 * (1.0 - _953)) + _953;
    float _972 = _357 / cbMtdParam._m0[15u].y;
    float _3784 = isnan(0.0) ? _972 : (isnan(_972) ? 0.0 : max(_972, 0.0));
    float _975 = (1.0 - (isnan(1.0) ? _3784 : (isnan(_3784) ? 1.0 : min(_3784, 1.0)))) * cbMtdParam._m0[15u].x;
    float _981 = _357 + 0.20000000298023223876953125;
    float _983 = _981 * 9.0;
    float _3795 = isnan(0.0) ? _983 : (isnan(_983) ? 0.0 : max(_983, 0.0));
    float _988 = ((cbMtdParam._m0[13u].w - cbMtdParam._m0[12u].x) * (isnan(1.0) ? _3795 : (isnan(_3795) ? 1.0 : min(_3795, 1.0)))) + cbMtdParam._m0[12u].x;
    float _991 = (_357 + 0.099999986588954925537109375) * 2.5;
    float _3806 = isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0));
    float _996 = ((cbMtdParam._m0[14u].z - _988) * (isnan(1.0) ? _3806 : (isnan(_3806) ? 1.0 : min(_3806, 1.0)))) + _988;
    float _997 = _967 + _535;
    float _3817 = isnan(0.0) ? _997 : (isnan(_997) ? 0.0 : max(_997, 0.0));
    float _1002 = ((0.3499999940395355224609375 - _996) * (isnan(1.0) ? _3817 : (isnan(_3817) ? 1.0 : min(_3817, 1.0)))) + _996;
    float _1003 = TEXCOORD_5.z * 0.5;
    float _1015 = (_357 + 0.100000001490116119384765625) * 0.89999997615814208984375;
    float _3828 = isnan(0.0) ? _1015 : (isnan(_1015) ? 0.0 : max(_1015, 0.0));
    float _1020 = ((cbMtdParam._m0[17u].y - cbMtdParam._m0[20u].x) * (isnan(1.0) ? _3828 : (isnan(_3828) ? 1.0 : min(_3828, 1.0)))) + cbMtdParam._m0[20u].x;
    float _1025 = (_1020 * (_338 + (-0.5))) + 0.5;
    float _1026 = (_1020 * (_339 + (-0.5))) + 0.5;
    float _3839 = isnan(0.0) ? TEXCOORD_5.y : (isnan(TEXCOORD_5.y) ? 0.0 : max(TEXCOORD_5.y, 0.0));
    float _1027 = isnan(1.0) ? _3839 : (isnan(_3839) ? 1.0 : min(_3839, 1.0));
    vec4 _1057 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[26u].y * TEXCOORD.z) + (cbMtdParam._m0[32u].y * _318)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[26u].z * TEXCOORD.w) + (cbMtdParam._m0[32u].z * _318)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1065 = ((_523.x + (-0.5)) * 0.5) + _504.x;
    float _1066 = ((_523.y + (-0.5)) * 0.5) + _504.y;
    vec4 _1092 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[24u].w * TEXCOORD.x) + (cbMtdParam._m0[25u].y * _318)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[25u].x * TEXCOORD.y) + (cbMtdParam._m0[25u].z * _318)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1101 = _981 * 12.0;
    float _3850 = isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0));
    float _1103 = 1.0 - (isnan(1.0) ? _3850 : (isnan(_3850) ? 1.0 : min(_3850, 1.0)));
    float _1114 = cbMtdParam._m0[33u].w * TEXCOORD.x;
    float _1115 = cbMtdParam._m0[34u].x * TEXCOORD.y;
    vec4 _1128 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((_1114 + (cbMtdParam._m0[33u].y * _318)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_1115 + (cbMtdParam._m0[33u].z * _318)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _1149 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1114 + ((cbMtdParam._m0[27u].y * 0.4000000059604644775390625) * _547)) + (cbMtdParam._m0[34u].y * _318)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1115 + ((cbMtdParam._m0[27u].z * 0.4000000059604644775390625) * _547)) + (cbMtdParam._m0[34u].z * _318)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _1163 = (((0.5 - _1065) * 0.10999999940395355224609375) + _1065) + (((((((_1092.z + (-0.5)) * cbMtdParam._m0[16u].x) * _1103) + (-1.0)) + _1128.x) + _1149.x) * cbMtdParam._m0[15u].z);
    float _1164 = (((0.5 - _1066) * 0.10999999940395355224609375) + _1066) + (((((((_1092.w + (-0.5)) * cbMtdParam._m0[16u].x) * _1103) + (-1.0)) + _1128.y) + _1149.y) * cbMtdParam._m0[15u].z);
    float _1169 = ((_1057.x - _1163) * _357) + _1163;
    float _1170 = ((_1057.y - _1164) * _357) + _1164;
    float _1171 = _357 * 0.5;
    float _3861 = isnan(0.0) ? _1171 : (isnan(_1171) ? 0.0 : max(_1171, 0.0));
    float _1172 = isnan(1.0) ? _3861 : (isnan(_3861) ? 1.0 : min(_3861, 1.0));
    float _1183 = cbMtdParam._m0[17u].z - (cbMtdParam._m0[17u].z * _728);
    float _1190 = cbMtdParam._m0[19u].z - (cbMtdParam._m0[19u].z * TEXCOORD_5.y);
    float _1192 = _1190 - (_1190 * _1172);
    float _1196 = (((((((0.5 - _338) * 0.60000002384185791015625) + _338) - _1025) * _1027) + _1025) + (_1192 * (_603.x + (-0.5)))) + (((_1169 + (-0.5)) + ((0.5 - _1169) * _1172)) * _1183);
    float _1198 = (((((((0.5 - _339) * 0.60000002384185791015625) + _339) - _1026) * _1027) + _1026) + (_1192 * (_603.y + (-0.5)))) + (((_1170 + (-0.5)) + ((0.5 - _1170) * _1172)) * _1183);
    float _1208 = (((_1003 * (0.5 - _1196)) + _1196) * 2.0) + (-1.0);
    float _1209 = (((_1003 * (0.5 - _1198)) + _1198) * 2.0) + (-1.0);
    float _1210 = dot(vec2(_1208, _1209), vec2(_1208, _1209));
    float _3872 = isnan(0.0) ? _1210 : (isnan(_1210) ? 0.0 : max(_1210, 0.0));
    float _1215 = sqrt(1.0 - (isnan(1.0) ? _3872 : (isnan(_3872) ? 1.0 : min(_3872, 1.0))));
    float _1218 = _981 * 6.0;
    float _3883 = isnan(0.0) ? _1218 : (isnan(_1218) ? 0.0 : max(_1218, 0.0));
    float _1221 = cbMtdParam._m0[16u].y * (isnan(1.0) ? _3883 : (isnan(_3883) ? 1.0 : min(_3883, 1.0)));
    float _3894 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
    float _1222 = isnan(1.0) ? _3894 : (isnan(_3894) ? 1.0 : min(_3894, 1.0));
    float _1225 = ((1.0 - _1222) * _997) + _1222;
    uint _1239 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1240 = _1239 + 5u;
    float _1251 = (-0.0) - _301;
    float _1252 = (-0.0) - _302;
    float _1253 = (-0.0) - _303;
    float _1257 = inversesqrt(dot(vec3(_1251, _1252, _1253), vec3(_1251, _1252, _1253)));
    float _1261 = dot(vec3(_1257 * _1251, _1257 * _1252, _1257 * _1253), vec3(cbLight._m0[floatBitsToUint(cbInstanceData._m0[_1240]).x * 14u].xyz));
    float _1271 = 0.90999996662139892578125 / exp2(log2(1.091000080108642578125 - (_1261 * 0.60000002384185791015625)) * 1.5);
    float _1284 = ((((0.959999978542327880859375 / exp2(log2((_1261 * 0.4000000059604644775390625) + 1.04100000858306884765625) * 1.5)) - _1271) * 0.5) + _1271) * 0.079577468335628509521484375;
    float _1288 = fma(_1215, _243, fma(_1209, _235 * TANGENT.x, _1208 * _222));
    float _1291 = fma(_1215, _244, fma(_1209, _235 * TANGENT.y, _1208 * _223));
    float _1294 = fma(_1215, _245, fma(_1209, _235 * TANGENT.z, _1208 * _224));
    float _1298 = inversesqrt(dot(vec3(_1288, _1291, _1294), vec3(_1288, _1291, _1294)));
    float _1299 = _1298 * _1288;
    float _1300 = _1298 * _1291;
    float _1301 = _1298 * _1294;
    float _3905 = isnan(0.0) ? _975 : (isnan(_975) ? 0.0 : max(_975, 0.0));
    float _3916 = isnan(0.0) ? _1002 : (isnan(_1002) ? 0.0 : max(_1002, 0.0));
    float _1303 = isnan(1.0) ? _3916 : (isnan(_3916) ? 1.0 : min(_3916, 1.0));
    float _3927 = isnan(0.0) ? _967 : (isnan(_967) ? 0.0 : max(_967, 0.0));
    float _3938 = isnan(0.0) ? _968 : (isnan(_968) ? 0.0 : max(_968, 0.0));
    float _3949 = isnan(0.0) ? _969 : (isnan(_969) ? 0.0 : max(_969, 0.0));
    float _1318 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1358 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1367 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1358);
    float _1368 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1358);
    float _1369 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1358);
    float _1373 = inversesqrt(dot(vec3(_1367, _1368, _1369), vec3(_1367, _1368, _1369)));
    float _1374 = _1367 * _1373;
    float _1375 = _1368 * _1373;
    float _1376 = _1369 * _1373;
    float _1381 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1382 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _1384 = texture(sampler2D(g_WaterSimulationNormalTexture, SS_ClampLinear), vec2(TEXCOORD_11, TEXCOORD_12));
    float _1393 = (_1384.x * 2.0) + (-1.0);
    float _1394 = (_1384.y * 2.0) + (-1.0);
    float _1395 = (_1384.z * 2.0) + (-1.0);
    float _1399 = inversesqrt(dot(vec3(_1393, _1394, _1395), vec3(_1393, _1394, _1395)));
    float _1410 = ((TEXCOORD_12 >= 1.0) || ((TEXCOORD_12 <= 0.0) || ((TEXCOORD_11 <= 0.0) || (TEXCOORD_11 >= 1.0)))) ? 0.0 : _1384.w;
    float _1417 = (((_1393 * _1399) - _1299) * _1410) + _1299;
    float _1418 = (((_1394 * _1399) - _1300) * _1410) + _1300;
    float _1419 = (((_1395 * _1399) - _1301) * _1410) + _1301;
    float _1439 = fma(_1419, cbSceneParam._m0[5u].z, fma(_1418, cbSceneParam._m0[5u].y, _1417 * cbSceneParam._m0[5u].x));
    float _1442 = fma(_1419, cbSceneParam._m0[6u].z, fma(_1418, cbSceneParam._m0[6u].y, _1417 * cbSceneParam._m0[6u].x));
    float _1445 = fma(_1419, cbSceneParam._m0[7u].z, fma(_1418, cbSceneParam._m0[7u].y, _1417 * cbSceneParam._m0[7u].x));
    uint _1459 = (_1239 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1465 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3927 : (isnan(_3927) ? 1.0 : min(_3927, 1.0)))) * cbInstanceData._m0[_1459].x;
    float _1466 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3938 : (isnan(_3938) ? 1.0 : min(_3938, 1.0)))) * cbInstanceData._m0[_1459].y;
    float _1467 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3949 : (isnan(_3949) ? 1.0 : min(_3949, 1.0)))) * cbInstanceData._m0[_1459].z;
    float _3960 = isnan(0.0) ? _1465 : (isnan(_1465) ? 0.0 : max(_1465, 0.0));
    float _1468 = isnan(1.0) ? _3960 : (isnan(_3960) ? 1.0 : min(_3960, 1.0));
    float _3971 = isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0));
    float _1469 = isnan(1.0) ? _3971 : (isnan(_3971) ? 1.0 : min(_3971, 1.0));
    float _3982 = isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0));
    float _1470 = isnan(1.0) ? _3982 : (isnan(_3982) ? 1.0 : min(_3982, 1.0));
    vec4 _1479 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1381, cbSceneParam._m0[86u].y * _1382));
    float _1482 = _1479.x * TEXCOORD_5.w;
    float _1486 = abs(dot(vec3(_1374, _1375, _1376), vec3(_1417, _1418, _1419)));
    float _3993 = isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0));
    float _1493 = exp2(log2(1.0 - (isnan(1.0) ? _3993 : (isnan(_3993) ? 1.0 : min(_3993, 1.0)))) * 5.0) * 0.959999978542327880859375;
    float _1494 = _1493 + 0.039999999105930328369140625;
    float _1498 = 10.0 / (_1318 + 10.0);
    vec4 _1513 = texture(sampler2D(g_ReflectionTexture, SS_ClampLinear), vec2(((_1498 * cbMtdParam._m0[21u].z) * dot(vec3(_1417, _1418, _1419), vec3(1.0, 0.0, 0.0))) + (_1381 / cbSceneParam._m0[86u].x), 1.0 - (_1382 / cbSceneParam._m0[86u].y)));
    float _1549 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1553 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1557 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1853;
    float _1854;
    float _1855;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1582 = fma(_1557, cbModelParam._m0[26u].z, fma(_1553, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1549));
        float _1586 = fma(_1557, cbModelParam._m0[27u].z, fma(_1553, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1549));
        float _1590 = fma(_1557, cbModelParam._m0[28u].z, fma(_1553, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1549));
        float _1612 = _1549 + _1417;
        float _1613 = _1553 + _1418;
        float _1614 = _1557 + _1419;
        float _1624 = fma(_1614, cbModelParam._m0[26u].z, fma(_1613, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1612)) - _1582;
        float _1625 = fma(_1614, cbModelParam._m0[27u].z, fma(_1613, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1612)) - _1586;
        float _1626 = fma(_1614, cbModelParam._m0[28u].z, fma(_1613, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1612)) - _1590;
        float _1630 = inversesqrt(dot(vec3(_1624, _1625, _1626), vec3(_1624, _1625, _1626)));
        float _1642 = ((_1630 * _1624) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1582 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1643 = ((_1630 * _1625) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1586 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1644 = ((_1630 * _1626) / cbModelParam._m0[34u].z) + ((((((_1590 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1647 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1642, _1643, _1644), 0.0);
        vec4 _1654 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1642, _1643, _1644), 0.0);
        vec4 _1661 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1642, _1643, _1644), 0.0);
        vec4 _1668 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1642, _1643, _1644), 0.0);
        float _1681 = exp2((_1647.w + (-0.5)) * 20.0) * 2.0;
        float _1688 = exp2((_1654.w + (-0.5)) * 20.0) * 2.0;
        float _1695 = exp2((_1661.w + (-0.5)) * 20.0) * 2.0;
        float _1702 = exp2((_1668.w + (-0.5)) * 20.0) * 2.0;
        float _1703 = _1702 * (_1668.x + (-0.5));
        float _1704 = _1702 * (_1668.y + (-0.5));
        float _1705 = _1702 * (_1668.z + (-0.5));
        float _1706 = isnan(0.0) ? _1703 : (isnan(_1703) ? 0.0 : max(_1703, 0.0));
        float _1707 = isnan(0.0) ? _1704 : (isnan(_1704) ? 0.0 : max(_1704, 0.0));
        float _1708 = isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0));
        float _1710 = ((_1647.x + (-0.5)) * 0.5) * _1681;
        float _1712 = ((_1654.x + (-0.5)) * 0.5) * _1688;
        float _1714 = ((_1661.x + (-0.5)) * 0.5) * _1695;
        float _1715 = dot(vec3(_1710, _1712, _1714), vec3(_1710, _1712, _1714));
        float _1720 = (_1715 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1715);
        float _1729 = (dot(vec3(_1417, _1418, _1419), vec3(_1720 * _1710, _1720 * _1712, _1720 * _1714)) + 1.0) * 0.5;
        float _4019 = isnan(0.0) ? _1729 : (isnan(_1729) ? 0.0 : max(_1729, 0.0));
        float _1739 = sqrt(((_1712 * _1712) + (_1710 * _1710)) + (_1714 * _1714)) / (_1706 + 9.9999997473787516355514526367188e-06);
        float _4030 = isnan(0.0) ? _1739 : (isnan(_1739) ? 0.0 : max(_1739, 0.0));
        float _1740 = isnan(1.0) ? _4030 : (isnan(_4030) ? 1.0 : min(_4030, 1.0));
        float _1741 = _1740 * 2.0;
        float _1745 = (1.0 - _1740) / (_1740 + 1.0);
        float _4041 = isnan(0.0) ? _1745 : (isnan(_1745) ? 0.0 : max(_1745, 0.0));
        float _1746 = isnan(1.0) ? _4041 : (isnan(_4041) ? 1.0 : min(_4041, 1.0));
        float _1755 = ((((1.0 - _1746) * (_1741 + 2.0)) * exp2(log2(isnan(1.0) ? _4019 : (isnan(_4019) ? 1.0 : min(_4019, 1.0))) * (_1741 + 1.0))) + _1746) * _1706;
        float _1757 = ((_1647.y + (-0.5)) * 0.5) * _1681;
        float _1759 = ((_1654.y + (-0.5)) * 0.5) * _1688;
        float _1761 = ((_1661.y + (-0.5)) * 0.5) * _1695;
        float _1762 = dot(vec3(_1757, _1759, _1761), vec3(_1757, _1759, _1761));
        float _1767 = (_1762 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1762);
        float _1775 = (dot(vec3(_1417, _1418, _1419), vec3(_1767 * _1757, _1767 * _1759, _1767 * _1761)) + 1.0) * 0.5;
        float _4052 = isnan(0.0) ? _1775 : (isnan(_1775) ? 0.0 : max(_1775, 0.0));
        float _1784 = sqrt(((_1759 * _1759) + (_1757 * _1757)) + (_1761 * _1761)) / (_1707 + 9.9999997473787516355514526367188e-06);
        float _4063 = isnan(0.0) ? _1784 : (isnan(_1784) ? 0.0 : max(_1784, 0.0));
        float _1785 = isnan(1.0) ? _4063 : (isnan(_4063) ? 1.0 : min(_4063, 1.0));
        float _1786 = _1785 * 2.0;
        float _1790 = (1.0 - _1785) / (_1785 + 1.0);
        float _4074 = isnan(0.0) ? _1790 : (isnan(_1790) ? 0.0 : max(_1790, 0.0));
        float _1791 = isnan(1.0) ? _4074 : (isnan(_4074) ? 1.0 : min(_4074, 1.0));
        float _1800 = ((((1.0 - _1791) * (_1786 + 2.0)) * exp2(log2(isnan(1.0) ? _4052 : (isnan(_4052) ? 1.0 : min(_4052, 1.0))) * (_1786 + 1.0))) + _1791) * _1707;
        float _1802 = ((_1647.z + (-0.5)) * 0.5) * _1681;
        float _1804 = ((_1654.z + (-0.5)) * 0.5) * _1688;
        float _1806 = ((_1661.z + (-0.5)) * 0.5) * _1695;
        float _1807 = dot(vec3(_1802, _1804, _1806), vec3(_1802, _1804, _1806));
        float _1812 = (_1807 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1807);
        float _1820 = (dot(vec3(_1417, _1418, _1419), vec3(_1812 * _1802, _1812 * _1804, _1812 * _1806)) + 1.0) * 0.5;
        float _4085 = isnan(0.0) ? _1820 : (isnan(_1820) ? 0.0 : max(_1820, 0.0));
        float _1829 = sqrt(((_1804 * _1804) + (_1802 * _1802)) + (_1806 * _1806)) / (_1708 + 9.9999997473787516355514526367188e-06);
        float _4096 = isnan(0.0) ? _1829 : (isnan(_1829) ? 0.0 : max(_1829, 0.0));
        float _1830 = isnan(1.0) ? _4096 : (isnan(_4096) ? 1.0 : min(_4096, 1.0));
        float _1831 = _1830 * 2.0;
        float _1835 = (1.0 - _1830) / (_1830 + 1.0);
        float _4107 = isnan(0.0) ? _1835 : (isnan(_1835) ? 0.0 : max(_1835, 0.0));
        float _1836 = isnan(1.0) ? _4107 : (isnan(_4107) ? 1.0 : min(_4107, 1.0));
        float _1845 = ((((1.0 - _1836) * (_1831 + 2.0)) * exp2(log2(isnan(1.0) ? _4085 : (isnan(_4085) ? 1.0 : min(_4085, 1.0))) * (_1831 + 1.0))) + _1836) * _1708;
        _1853 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1755 : (isnan(_1755) ? 0.0 : max(_1755, 0.0)));
        _1854 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1800 : (isnan(_1800) ? 0.0 : max(_1800, 0.0)));
        _1855 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1845 : (isnan(_1845) ? 0.0 : max(_1845, 0.0)));
    }
    else
    {
        _1853 = 0.0;
        _1854 = 0.0;
        _1855 = 0.0;
    }
    float _2145;
    float _2146;
    float _2147;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1878 = fma(_1557, cbModelParam._m0[30u].z, fma(_1553, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1549));
        float _1882 = fma(_1557, cbModelParam._m0[31u].z, fma(_1553, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1549));
        float _1886 = fma(_1557, cbModelParam._m0[32u].z, fma(_1553, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1549));
        float _1908 = _1549 + _1417;
        float _1909 = _1553 + _1418;
        float _1910 = _1557 + _1419;
        float _1920 = fma(_1910, cbModelParam._m0[30u].z, fma(_1909, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1908)) - _1878;
        float _1921 = fma(_1910, cbModelParam._m0[31u].z, fma(_1909, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1908)) - _1882;
        float _1922 = fma(_1910, cbModelParam._m0[32u].z, fma(_1909, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1908)) - _1886;
        float _1926 = inversesqrt(dot(vec3(_1920, _1921, _1922), vec3(_1920, _1921, _1922)));
        float _1938 = ((_1926 * _1920) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1878 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1939 = ((_1926 * _1921) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1882 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1940 = ((_1926 * _1922) / cbModelParam._m0[35u].z) + ((((((_1886 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1942 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1938, _1939, _1940), 0.0);
        vec4 _1949 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1938, _1939, _1940), 0.0);
        vec4 _1956 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1938, _1939, _1940), 0.0);
        vec4 _1963 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1938, _1939, _1940), 0.0);
        float _1975 = exp2((_1942.w + (-0.5)) * 20.0) * 2.0;
        float _1982 = exp2((_1949.w + (-0.5)) * 20.0) * 2.0;
        float _1989 = exp2((_1956.w + (-0.5)) * 20.0) * 2.0;
        float _1996 = exp2((_1963.w + (-0.5)) * 20.0) * 2.0;
        float _1997 = _1996 * (_1963.x + (-0.5));
        float _1998 = _1996 * (_1963.y + (-0.5));
        float _1999 = _1996 * (_1963.z + (-0.5));
        float _2000 = isnan(0.0) ? _1997 : (isnan(_1997) ? 0.0 : max(_1997, 0.0));
        float _2001 = isnan(0.0) ? _1998 : (isnan(_1998) ? 0.0 : max(_1998, 0.0));
        float _2002 = isnan(0.0) ? _1999 : (isnan(_1999) ? 0.0 : max(_1999, 0.0));
        float _2004 = ((_1942.x + (-0.5)) * 0.5) * _1975;
        float _2006 = ((_1949.x + (-0.5)) * 0.5) * _1982;
        float _2008 = ((_1956.x + (-0.5)) * 0.5) * _1989;
        float _2009 = dot(vec3(_2004, _2006, _2008), vec3(_2004, _2006, _2008));
        float _2014 = (_2009 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2009);
        float _2022 = (dot(vec3(_1417, _1418, _1419), vec3(_2014 * _2004, _2014 * _2006, _2014 * _2008)) + 1.0) * 0.5;
        float _4148 = isnan(0.0) ? _2022 : (isnan(_2022) ? 0.0 : max(_2022, 0.0));
        float _2031 = sqrt(((_2006 * _2006) + (_2004 * _2004)) + (_2008 * _2008)) / (_2000 + 9.9999997473787516355514526367188e-06);
        float _4159 = isnan(0.0) ? _2031 : (isnan(_2031) ? 0.0 : max(_2031, 0.0));
        float _2032 = isnan(1.0) ? _4159 : (isnan(_4159) ? 1.0 : min(_4159, 1.0));
        float _2033 = _2032 * 2.0;
        float _2037 = (1.0 - _2032) / (_2032 + 1.0);
        float _4170 = isnan(0.0) ? _2037 : (isnan(_2037) ? 0.0 : max(_2037, 0.0));
        float _2038 = isnan(1.0) ? _4170 : (isnan(_4170) ? 1.0 : min(_4170, 1.0));
        float _2047 = ((((1.0 - _2038) * (_2033 + 2.0)) * exp2(log2(isnan(1.0) ? _4148 : (isnan(_4148) ? 1.0 : min(_4148, 1.0))) * (_2033 + 1.0))) + _2038) * _2000;
        float _2049 = ((_1942.y + (-0.5)) * 0.5) * _1975;
        float _2051 = ((_1949.y + (-0.5)) * 0.5) * _1982;
        float _2053 = ((_1956.y + (-0.5)) * 0.5) * _1989;
        float _2054 = dot(vec3(_2049, _2051, _2053), vec3(_2049, _2051, _2053));
        float _2059 = (_2054 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2054);
        float _2067 = (dot(vec3(_1417, _1418, _1419), vec3(_2059 * _2049, _2059 * _2051, _2059 * _2053)) + 1.0) * 0.5;
        float _4181 = isnan(0.0) ? _2067 : (isnan(_2067) ? 0.0 : max(_2067, 0.0));
        float _2076 = sqrt(((_2051 * _2051) + (_2049 * _2049)) + (_2053 * _2053)) / (_2001 + 9.9999997473787516355514526367188e-06);
        float _4192 = isnan(0.0) ? _2076 : (isnan(_2076) ? 0.0 : max(_2076, 0.0));
        float _2077 = isnan(1.0) ? _4192 : (isnan(_4192) ? 1.0 : min(_4192, 1.0));
        float _2078 = _2077 * 2.0;
        float _2082 = (1.0 - _2077) / (_2077 + 1.0);
        float _4203 = isnan(0.0) ? _2082 : (isnan(_2082) ? 0.0 : max(_2082, 0.0));
        float _2083 = isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0));
        float _2092 = ((((1.0 - _2083) * (_2078 + 2.0)) * exp2(log2(isnan(1.0) ? _4181 : (isnan(_4181) ? 1.0 : min(_4181, 1.0))) * (_2078 + 1.0))) + _2083) * _2001;
        float _2094 = ((_1942.z + (-0.5)) * 0.5) * _1975;
        float _2096 = ((_1949.z + (-0.5)) * 0.5) * _1982;
        float _2098 = ((_1956.z + (-0.5)) * 0.5) * _1989;
        float _2099 = dot(vec3(_2094, _2096, _2098), vec3(_2094, _2096, _2098));
        float _2104 = (_2099 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2099);
        float _2112 = (dot(vec3(_1417, _1418, _1419), vec3(_2104 * _2094, _2104 * _2096, _2104 * _2098)) + 1.0) * 0.5;
        float _4214 = isnan(0.0) ? _2112 : (isnan(_2112) ? 0.0 : max(_2112, 0.0));
        float _2121 = sqrt(((_2096 * _2096) + (_2094 * _2094)) + (_2098 * _2098)) / (_2002 + 9.9999997473787516355514526367188e-06);
        float _4225 = isnan(0.0) ? _2121 : (isnan(_2121) ? 0.0 : max(_2121, 0.0));
        float _2122 = isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0));
        float _2123 = _2122 * 2.0;
        float _2127 = (1.0 - _2122) / (_2122 + 1.0);
        float _4236 = isnan(0.0) ? _2127 : (isnan(_2127) ? 0.0 : max(_2127, 0.0));
        float _2128 = isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0));
        float _2137 = ((((1.0 - _2128) * (_2123 + 2.0)) * exp2(log2(isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0))) * (_2123 + 1.0))) + _2128) * _2002;
        _2145 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2047 : (isnan(_2047) ? 0.0 : max(_2047, 0.0)));
        _2146 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2092 : (isnan(_2092) ? 0.0 : max(_2092, 0.0)));
        _2147 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2137 : (isnan(_2137) ? 0.0 : max(_2137, 0.0)));
    }
    else
    {
        _2145 = 0.0;
        _2146 = 0.0;
        _2147 = 0.0;
    }
    float _2157 = (cbModelParam._m0[1u].x * (_2145 - _1853)) + _1853;
    float _2158 = (cbModelParam._m0[1u].x * (_2146 - _1854)) + _1854;
    float _2159 = (cbModelParam._m0[1u].x * (_2147 - _1855)) + _1855;
    float _2180 = fma(_2159, cbSceneParam._m0[89u].z, fma(_2158, cbSceneParam._m0[89u].y, _2157 * cbSceneParam._m0[89u].x));
    float _2183 = fma(_2159, cbSceneParam._m0[90u].z, fma(_2158, cbSceneParam._m0[90u].y, _2157 * cbSceneParam._m0[90u].x));
    float _2186 = fma(_2159, cbSceneParam._m0[91u].z, fma(_2158, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2157));
    float _2190 = 0.959999978542327880859375 - _1493;
    float _2191 = _2190 * _1482;
    uvec4 _2197 = floatBitsToUint(cbInstanceData._m0[_1240]);
    uint _2199 = _2197.x * 14u;
    float _2206 = (cbLight._m0[_2199 + 13u].x * (_1482 + (-1.0))) + 1.0;
    uint _2207 = _2199 + 4u;
    float _2213 = isnan(1.0) ? _2206 : (isnan(_2206) ? 1.0 : min(_2206, 1.0));
    float _2222 = dot(vec3(cbLight._m0[_2199].xyz), vec3(_1417, _1418, _1419));
    float _4282 = isnan(0.0) ? _2222 : (isnan(_2222) ? 0.0 : max(_2222, 0.0));
    float _2226 = (isnan(1.0) ? _4282 : (isnan(_4282) ? 1.0 : min(_4282, 1.0))) * 0.3183098733425140380859375;
    float _2228 = (cbLight._m0[_2207].x * _2213) * _2226;
    float _2229 = (_2213 * cbLight._m0[_2207].y) * _2226;
    float _2230 = (_2213 * cbLight._m0[_2207].z) * _2226;
    uint _2232 = _2199 + 8u;
    float _2245 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2199].w)) * _1303) * 0.949999988079071044921875);
    float _2246 = _2245 * _2245;
    float _2247 = cbLight._m0[_2199].x + _1374;
    float _2248 = cbLight._m0[_2199].y + _1375;
    float _2249 = cbLight._m0[_2199].z + _1376;
    float _2253 = inversesqrt(dot(vec3(_2247, _2248, _2249), vec3(_2247, _2248, _2249)));
    float _2254 = _2253 * _2247;
    float _2255 = _2253 * _2248;
    float _2256 = _2253 * _2249;
    float _2257 = dot(vec3(_1417, _1418, _1419), vec3(cbLight._m0[_2199].xyz));
    float _4293 = isnan(0.0) ? _2257 : (isnan(_2257) ? 0.0 : max(_2257, 0.0));
    float _2260 = isnan(1.0) ? _4293 : (isnan(_4293) ? 1.0 : min(_4293, 1.0));
    float _2261 = dot(vec3(_1417, _1418, _1419), vec3(_1374, _1375, _1376));
    float _4304 = isnan(0.0) ? _2261 : (isnan(_2261) ? 0.0 : max(_2261, 0.0));
    float _2264 = isnan(1.0) ? _4304 : (isnan(_4304) ? 1.0 : min(_4304, 1.0));
    float _2265 = dot(vec3(_1417, _1418, _1419), vec3(_2254, _2255, _2256));
    float _4315 = isnan(0.0) ? _2265 : (isnan(_2265) ? 0.0 : max(_2265, 0.0));
    float _2268 = isnan(1.0) ? _4315 : (isnan(_4315) ? 1.0 : min(_4315, 1.0));
    float _2269 = dot(vec3(cbLight._m0[_2199].xyz), vec3(_2254, _2255, _2256));
    float _4326 = isnan(0.0) ? _2269 : (isnan(_2269) ? 0.0 : max(_2269, 0.0));
    float _2273 = _2246 * _2246;
    float _2277 = ((_2268 * _2268) * (_2273 + (-1.0))) + 1.0;
    float _2287 = (exp2(log2(1.0 - (isnan(1.0) ? _4326 : (isnan(_4326) ? 1.0 : min(_4326, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2288 = 1.0 - _2246;
    float _2299 = (0.5 / (((_2264 * ((_2260 * _2288) + _2246)) + 9.9999999392252902907785028219223e-09) + (((_2264 * _2288) + _2246) * _2260))) * _2260;
    float _4337 = isnan(0.0) ? _2299 : (isnan(_2299) ? 0.0 : max(_2299, 0.0));
    float _2301 = (isnan(1.0) ? _4337 : (isnan(_4337) ? 1.0 : min(_4337, 1.0))) * (_2273 / ((_2277 * _2277) * 3.141590118408203125));
    float _2304 = ((_2287 * cbLight._m0[_2232].x) * _2301) * _2213;
    float _2307 = ((_2287 * cbLight._m0[_2232].y) * _2301) * _2213;
    float _2310 = ((_2287 * cbLight._m0[_2232].z) * _2301) * _2213;
    float _2414;
    float _2416;
    float _2418;
    float _2420;
    float _2422;
    float _2424;
    if (_2197.y == 0u)
    {
        float _2355 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2356 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2355;
        float _2357 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2355;
        float _2358 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2355;
        uvec4 _2370 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2371 = _2370.x;
        uint _2382 = uint((float(_2370.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1382) / _2371))) + floor(float(uint(cbSceneParam._m0[85u].x * _1381) / _2371)));
        float _2392 = (log2(_2358 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2393 = isnan(0.0) ? _2392 : (isnan(_2392) ? 0.0 : max(_2392, 0.0));
        uint _2396 = uint(isnan(14.0) ? _2393 : (isnan(_2393) ? 14.0 : min(_2393, 14.0)));
        uvec4 _2401 = texelFetch(g_lightClusterGridBuffer, int(((_2396 << 2u) + (_2382 << 6u)) >> 2u));
        uint _2402 = _2401.x;
        uint _2403 = _2370.z;
        float _2539;
        float _2541;
        float _2543;
        float _2545;
        float _2547;
        float _2549;
        if (((((1u << ((_2403 >> 4u) & 15u)) + 4294967295u) & _2402) == 0u) || ((_2403 & 240u) == 0u))
        {
            _2539 = 0.0;
            _2541 = 0.0;
            _2543 = 0.0;
            _2545 = 0.0;
            _2547 = 0.0;
            _2549 = 0.0;
        }
        else
        {
            float _2540;
            float _2542;
            float _2544;
            float _2546;
            float _2548;
            float _2550;
            float _2743 = 0.0;
            float _2744 = 0.0;
            float _2745 = 0.0;
            float _2746 = 0.0;
            float _2747 = 0.0;
            float _2748 = 0.0;
            uint _2749 = 0u;
            uint _2758;
            bool _2759;
            for (;;)
            {
                _2758 = texelFetch(g_lightClassification, int((((_2396 << 5u) + (_2382 << 9u)) + (_2749 << 2u)) >> 2u)).x;
                _2759 = _2758 == 0u;
                float frontier_phi_19_pred;
                float frontier_phi_19_pred_1;
                float frontier_phi_19_pred_2;
                float frontier_phi_19_pred_3;
                float frontier_phi_19_pred_4;
                float frontier_phi_19_pred_5;
                if (_2759)
                {
                    frontier_phi_19_pred = _2748;
                    frontier_phi_19_pred_1 = _2747;
                    frontier_phi_19_pred_2 = _2746;
                    frontier_phi_19_pred_3 = _2745;
                    frontier_phi_19_pred_4 = _2744;
                    frontier_phi_19_pred_5 = _2743;
                }
                else
                {
                    float _2952;
                    float _2953;
                    float _2954;
                    float _2955;
                    float _2956;
                    float _2957;
                    uint _2958;
                    _2952 = _2743;
                    _2953 = _2744;
                    _2954 = _2745;
                    _2955 = _2746;
                    _2956 = _2747;
                    _2957 = _2748;
                    _2958 = _2758;
                    float _2883;
                    float _2884;
                    float _2885;
                    float _2886;
                    float _2887;
                    float _2888;
                    for (;;)
                    {
                        uint _2962 = uint(findLSB(_2958)) + (_2749 << 5u);
                        uint _2959 = (_2958 + 4294967295u) & _2958;
                        uint _2964 = _2962 * 48u;
                        vec4 _2978 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2964)).x, texelFetch(g_PointLightRenderingBuffer, int(_2964 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2964 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2964 + 3u)).x));
                        uint _2984 = (_2962 * 48u) + 4u;
                        vec4 _2997 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2984)).x, texelFetch(g_PointLightRenderingBuffer, int(_2984 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2984 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2984 + 3u)).x));
                        uint _3003 = (_2962 * 48u) + 8u;
                        vec3 _3014 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3003)).x, texelFetch(g_PointLightRenderingBuffer, int(_3003 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3003 + 2u)).x));
                        float _3018 = _2978.x - _2356;
                        float _3019 = _2978.y - _2357;
                        float _3020 = _2978.z - _2358;
                        float _3021 = dot(vec3(_3018, _3019, _3020), vec3(_3018, _3019, _3020));
                        float _3024 = inversesqrt(_3021);
                        float _3025 = _3024 * _3018;
                        float _3026 = _3024 * _3019;
                        float _3027 = _3024 * _3020;
                        float _3028 = dot(vec3(_1439, _1442, _1445), vec3(_3025, _3026, _3027));
                        float _3033 = 1.0 - (_3021 * _2978.w);
                        float _4358 = isnan(0.0) ? _3033 : (isnan(_3033) ? 0.0 : max(_3033, 0.0));
                        float _3034 = isnan(1.0) ? _4358 : (isnan(_4358) ? 1.0 : min(_4358, 1.0));
                        float _3035 = sqrt(_3021) * _2997.w;
                        float _3038 = 1.39999997615814208984375 / (_3035 + 1.39999997615814208984375);
                        float _3039 = _3038 * _3038;
                        float _3042 = ((1.0 - _3039) * _3028) + _3039;
                        float _3045 = _3035 * _3035;
                        float _3049 = ((isnan(0.0) ? _3042 : (isnan(_3042) ? 0.0 : max(_3042, 0.0))) * _3034) / ((_3045 * 0.699999988079071044921875) + 1.0);
                        float _3053 = (-0.0) - _2356;
                        float _3054 = (-0.0) - _2357;
                        float _3055 = (-0.0) - _2358;
                        float _3059 = inversesqrt(dot(vec3(_3053, _3054, _3055), vec3(_3053, _3054, _3055)));
                        float _3060 = _3059 * _3053;
                        float _3061 = _3059 * _3054;
                        float _3062 = _3059 * _3055;
                        float _3070 = exp2(log2(1.0 / ((_3045 * 3.5) + 5.0)) * 0.25);
                        float _3072 = 1.0 - sqrt(_1303);
                        float _3079 = sqrt(1.0 - ((1.0 - (_3072 * _3072)) * (1.0 - (_3070 * _3070))));
                        float _3080 = _3079 * _3079;
                        float _3081 = _3080 * _3080;
                        float _3082 = _3060 + _3025;
                        float _3083 = _3061 + _3026;
                        float _3084 = _3062 + _3027;
                        float _3088 = inversesqrt(dot(vec3(_3082, _3083, _3084), vec3(_3082, _3083, _3084)));
                        float _3092 = dot(vec3(_1439, _1442, _1445), vec3(_3060, _3061, _3062));
                        float _4374 = isnan(0.0) ? _3092 : (isnan(_3092) ? 0.0 : max(_3092, 0.0));
                        float _3095 = isnan(1.0) ? _4374 : (isnan(_4374) ? 1.0 : min(_4374, 1.0));
                        float _3096 = dot(vec3(_1439, _1442, _1445), vec3(_3088 * _3082, _3088 * _3083, _3088 * _3084));
                        float _4385 = isnan(0.0) ? _3096 : (isnan(_3096) ? 0.0 : max(_3096, 0.0));
                        float _3099 = isnan(1.0) ? _4385 : (isnan(_4385) ? 1.0 : min(_4385, 1.0));
                        float _3103 = ((_3099 * _3099) * (_3081 + (-1.0))) + 1.0;
                        float _3104 = _3038 * _3080;
                        float _3105 = _3104 * _3104;
                        float _3108 = ((1.0 - _3105) * _3028) + _3105;
                        float _4396 = isnan(0.0) ? _3108 : (isnan(_3108) ? 0.0 : max(_3108, 0.0));
                        float _3109 = isnan(1.0) ? _4396 : (isnan(_4396) ? 1.0 : min(_4396, 1.0));
                        float _3110 = 1.0 - _3080;
                        float _3120 = (0.5 / (((_3109 * ((_3095 * _3110) + _3080)) + 9.9999999392252902907785028219223e-09) + (((_3109 * _3110) + _3080) * _3095))) * _3109;
                        float _4407 = isnan(0.0) ? _3120 : (isnan(_3120) ? 0.0 : max(_3120, 0.0));
                        float _3131 = (((_3081 * 3.1415927410125732421875) * (isnan(1.0) ? _4407 : (isnan(_4407) ? 1.0 : min(_4407, 1.0)))) / ((_3103 * _3103) * ((_3045 * 2.1991131305694580078125) + 3.141590118408203125))) * _3034;
                        _2886 = (_3049 * _2997.x) + _2955;
                        _2887 = (_3049 * _2997.y) + _2956;
                        _2888 = (_3049 * _2997.z) + _2957;
                        _2883 = (_3131 * _3014.x) + _2952;
                        _2884 = (_3131 * _3014.y) + _2953;
                        _2885 = (_3131 * _3014.z) + _2954;
                        if (_2959 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2952 = _2883;
                            _2953 = _2884;
                            _2954 = _2885;
                            _2955 = _2886;
                            _2956 = _2887;
                            _2957 = _2888;
                            _2958 = _2959;
                        }
                    }
                    frontier_phi_19_pred = _2888;
                    frontier_phi_19_pred_1 = _2887;
                    frontier_phi_19_pred_2 = _2886;
                    frontier_phi_19_pred_3 = _2885;
                    frontier_phi_19_pred_4 = _2884;
                    frontier_phi_19_pred_5 = _2883;
                }
                _2550 = frontier_phi_19_pred;
                _2548 = frontier_phi_19_pred_1;
                _2546 = frontier_phi_19_pred_2;
                _2544 = frontier_phi_19_pred_3;
                _2542 = frontier_phi_19_pred_4;
                _2540 = frontier_phi_19_pred_5;
                uint _2750 = _2749 + 1u;
                if (_2750 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2743 = _2540;
                    _2744 = _2542;
                    _2745 = _2544;
                    _2746 = _2546;
                    _2747 = _2548;
                    _2748 = _2550;
                    _2749 = _2750;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2539 = _2540;
            _2541 = _2542;
            _2543 = _2544;
            _2545 = _2546;
            _2547 = _2548;
            _2549 = _2550;
        }
        uvec4 _2553 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2554 = _2553.z;
        uint _2556 = (_2554 >> 8u) & 15u;
        float _2711;
        float _2713;
        float _2715;
        float _2717;
        float _2719;
        float _2721;
        if (((4294967295u << _2556) & _2402) == 0u)
        {
            _2711 = _2539;
            _2713 = _2541;
            _2715 = _2543;
            _2717 = _2545;
            _2719 = _2547;
            _2721 = _2549;
        }
        else
        {
            float _2736 = inversesqrt(dot(vec3(_2356, _2357, _2358), vec3(_2356, _2357, _2358)));
            float _2737 = _2736 * _2356;
            float _2738 = _2736 * _2357;
            float _2739 = _2736 * _2358;
            float frontier_phi_13_14_ladder;
            float frontier_phi_13_14_ladder_1;
            float frontier_phi_13_14_ladder_2;
            float frontier_phi_13_14_ladder_3;
            float frontier_phi_13_14_ladder_4;
            float frontier_phi_13_14_ladder_5;
            if (_2556 < ((_2554 >> 12u) & 15u))
            {
                float _2712;
                float _2714;
                float _2716;
                float _2718;
                float _2720;
                float _2722;
                float _2935 = _2539;
                float _2936 = _2541;
                float _2937 = _2543;
                float _2938 = _2545;
                float _2939 = _2547;
                float _2940 = _2549;
                uint _2941 = _2556;
                uint _2950;
                bool _2951;
                for (;;)
                {
                    _2950 = texelFetch(g_lightClassification, int((((_2396 << 5u) + (_2382 << 9u)) + (_2941 << 2u)) >> 2u)).x;
                    _2951 = _2950 == 0u;
                    float frontier_phi_27_pred;
                    float frontier_phi_27_pred_1;
                    float frontier_phi_27_pred_2;
                    float frontier_phi_27_pred_3;
                    float frontier_phi_27_pred_4;
                    float frontier_phi_27_pred_5;
                    if (_2951)
                    {
                        frontier_phi_27_pred = _2935;
                        frontier_phi_27_pred_1 = _2938;
                        frontier_phi_27_pred_2 = _2937;
                        frontier_phi_27_pred_3 = _2936;
                        frontier_phi_27_pred_4 = _2940;
                        frontier_phi_27_pred_5 = _2939;
                    }
                    else
                    {
                        float _3174;
                        float _3175;
                        float _3176;
                        float _3177;
                        float _3178;
                        float _3179;
                        float _3468;
                        float _3469;
                        float _3470;
                        float _3471;
                        float _3472;
                        float _3473;
                        float _3187 = _2935;
                        float _3188 = _2936;
                        float _3189 = _2937;
                        float _3190 = _2938;
                        float _3191 = _2939;
                        float _3192 = _2940;
                        uint _3193 = _2950;
                        uint _3194;
                        vec4 _3219;
                        float _3220;
                        vec4 _3235;
                        vec3 _3247;
                        vec4 _3262;
                        vec4 _3277;
                        float _3323;
                        bool _3324;
                        for (;;)
                        {
                            uint _3204 = ((_2941 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3193));
                            _3194 = (_3193 + 4294967295u) & _3193;
                            uint _3206 = _3204 * 40u;
                            _3219 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3206)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3206 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3206 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3206 + 3u)).x));
                            _3220 = _3219.w;
                            uint _3222 = (_3204 * 40u) + 4u;
                            _3235 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3222)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3222 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3222 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3222 + 3u)).x));
                            uint _3237 = (_3204 * 40u) + 8u;
                            _3247 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3237)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3237 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3237 + 2u)).x));
                            uint _3249 = (_3204 * 40u) + 16u;
                            _3262 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3249)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3249 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3249 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3249 + 3u)).x));
                            uint _3264 = (_3204 * 40u) + 20u;
                            _3277 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3264)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3264 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3264 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3264 + 3u)).x));
                            uint _3279 = (_3204 * 40u) + 24u;
                            vec4 _3292 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3279)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3279 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3279 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3279 + 3u)).x));
                            uint _3298 = (_3204 * 40u) + 28u;
                            vec4 _3311 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3298)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3298 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3298 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3298 + 3u)).x));
                            _3323 = fma(_2358, _3311.z, fma(_2357, _3311.y, _3311.x * _2356)) + _3311.w;
                            _3324 = !((fma(_2358, _3292.z, fma(_2357, _3292.y, _3292.x * _2356)) + _3292.w) <= 0.0);
                            float frontier_phi_33_pred;
                            float frontier_phi_33_pred_1;
                            float frontier_phi_33_pred_2;
                            float frontier_phi_33_pred_3;
                            float frontier_phi_33_pred_4;
                            float frontier_phi_33_pred_5;
                            if (_3324)
                            {
                                float _3351 = _3219.x - _2356;
                                float _3352 = _3219.y - _2357;
                                float _3353 = _3219.z - _2358;
                                float _3354 = dot(vec3(_3351, _3352, _3353), vec3(_3351, _3352, _3353));
                                float _3357 = inversesqrt(_3354);
                                float _3358 = _3357 * _3351;
                                float _3359 = _3357 * _3352;
                                float _3360 = _3357 * _3353;
                                float _3364 = 1.0 - (_3354 / (_3220 * _3220));
                                float _4418 = isnan(0.0) ? _3364 : (isnan(_3364) ? 0.0 : max(_3364, 0.0));
                                float _3365 = isnan(1.0) ? _4418 : (isnan(_4418) ? 1.0 : min(_4418, 1.0));
                                float _3369 = sqrt(_3354) * _3235.w;
                                float _3371 = 1.39999997615814208984375 / (_3369 + 1.39999997615814208984375);
                                float _3372 = _3371 * _3371;
                                float _3375 = ((1.0 - _3372) * dot(vec3(_3358, _3359, _3360), vec3(_1439, _1442, _1445))) + _3372;
                                float _3378 = _3369 * _3369;
                                float _3382 = (fma(_2358, _3262.z, fma(_2357, _3262.y, _3262.x * _2356)) + _3262.w) / _3323;
                                float _3383 = (fma(_2358, _3277.z, fma(_2357, _3277.y, _3277.x * _2356)) + _3277.w) / _3323;
                                float _3387 = 1.0 - dot(vec2(_3382, _3383), vec2(_3382, _3383));
                                float _4434 = isnan(0.0) ? _3387 : (isnan(_3387) ? 0.0 : max(_3387, 0.0));
                                float _3388 = isnan(1.0) ? _4434 : (isnan(_4434) ? 1.0 : min(_4434, 1.0));
                                float _3389 = _3388 * (((isnan(0.0) ? _3375 : (isnan(_3375) ? 0.0 : max(_3375, 0.0))) * _3365) / ((_3378 * 0.699999988079071044921875) + 1.0));
                                float _3401 = exp2(log2(1.0 / ((_3378 * 3.5) + 5.0)) * 0.25);
                                float _3403 = 1.0 - sqrt(_1303);
                                float _3410 = sqrt(1.0 - ((1.0 - (_3403 * _3403)) * (1.0 - (_3401 * _3401))));
                                float _3411 = _3410 * _3410;
                                float _3412 = _3411 * _3411;
                                float _3413 = _3358 - _2737;
                                float _3414 = _3359 - _2738;
                                float _3415 = _3360 - _2739;
                                float _3419 = inversesqrt(dot(vec3(_3413, _3414, _3415), vec3(_3413, _3414, _3415)));
                                float _3423 = dot(vec3(_1439, _1442, _1445), vec3((-0.0) - _2737, (-0.0) - _2738, (-0.0) - _2739));
                                float _4445 = isnan(0.0) ? _3423 : (isnan(_3423) ? 0.0 : max(_3423, 0.0));
                                float _3426 = isnan(1.0) ? _4445 : (isnan(_4445) ? 1.0 : min(_4445, 1.0));
                                float _3427 = dot(vec3(_1439, _1442, _1445), vec3(_3419 * _3413, _3419 * _3414, _3419 * _3415));
                                float _4456 = isnan(0.0) ? _3427 : (isnan(_3427) ? 0.0 : max(_3427, 0.0));
                                float _3430 = isnan(1.0) ? _4456 : (isnan(_4456) ? 1.0 : min(_4456, 1.0));
                                float _3434 = ((_3430 * _3430) * (_3412 + (-1.0))) + 1.0;
                                float _3435 = _3371 * _3411;
                                float _3436 = _3435 * _3435;
                                float _3442 = ((1.0 - _3436) * dot(vec3(_1439, _1442, _1445), vec3(_3358, _3359, _3360))) + _3436;
                                float _4467 = isnan(0.0) ? _3442 : (isnan(_3442) ? 0.0 : max(_3442, 0.0));
                                float _3443 = isnan(1.0) ? _4467 : (isnan(_4467) ? 1.0 : min(_4467, 1.0));
                                float _3444 = 1.0 - _3411;
                                float _3454 = (0.5 / (((_3443 * ((_3426 * _3444) + _3411)) + 9.9999999392252902907785028219223e-09) + (((_3443 * _3444) + _3411) * _3426))) * _3443;
                                float _4478 = isnan(0.0) ? _3454 : (isnan(_3454) ? 0.0 : max(_3454, 0.0));
                                float _3464 = (_3388 * _3365) * (((_3412 * 3.1415927410125732421875) * (isnan(1.0) ? _4478 : (isnan(_4478) ? 1.0 : min(_4478, 1.0)))) / ((_3434 * _3434) * ((_3378 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_33_pred = _3389 * _3235.x;
                                frontier_phi_33_pred_1 = _3464 * _3247.z;
                                frontier_phi_33_pred_2 = _3464 * _3247.y;
                                frontier_phi_33_pred_3 = _3464 * _3247.x;
                                frontier_phi_33_pred_4 = _3389 * _3235.y;
                                frontier_phi_33_pred_5 = _3389 * _3235.z;
                            }
                            else
                            {
                                frontier_phi_33_pred = 0.0;
                                frontier_phi_33_pred_1 = 0.0;
                                frontier_phi_33_pred_2 = 0.0;
                                frontier_phi_33_pred_3 = 0.0;
                                frontier_phi_33_pred_4 = 0.0;
                                frontier_phi_33_pred_5 = 0.0;
                            }
                            _3471 = frontier_phi_33_pred;
                            _3470 = frontier_phi_33_pred_1;
                            _3469 = frontier_phi_33_pred_2;
                            _3468 = frontier_phi_33_pred_3;
                            _3472 = frontier_phi_33_pred_4;
                            _3473 = frontier_phi_33_pred_5;
                            _3177 = _3471 + _3190;
                            _3178 = _3472 + _3191;
                            _3179 = _3473 + _3192;
                            _3174 = _3468 + _3187;
                            _3175 = _3469 + _3188;
                            _3176 = _3470 + _3189;
                            if (_3194 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3187 = _3174;
                                _3188 = _3175;
                                _3189 = _3176;
                                _3190 = _3177;
                                _3191 = _3178;
                                _3192 = _3179;
                                _3193 = _3194;
                                continue;
                            }
                        }
                        frontier_phi_27_pred = _3174;
                        frontier_phi_27_pred_1 = _3177;
                        frontier_phi_27_pred_2 = _3176;
                        frontier_phi_27_pred_3 = _3175;
                        frontier_phi_27_pred_4 = _3179;
                        frontier_phi_27_pred_5 = _3178;
                    }
                    _2712 = frontier_phi_27_pred;
                    _2718 = frontier_phi_27_pred_1;
                    _2716 = frontier_phi_27_pred_2;
                    _2714 = frontier_phi_27_pred_3;
                    _2722 = frontier_phi_27_pred_4;
                    _2720 = frontier_phi_27_pred_5;
                    uint _2942 = _2941 + 1u;
                    if (_2942 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2935 = _2712;
                        _2936 = _2714;
                        _2937 = _2716;
                        _2938 = _2718;
                        _2939 = _2720;
                        _2940 = _2722;
                        _2941 = _2942;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_13_14_ladder = _2722;
                frontier_phi_13_14_ladder_1 = _2720;
                frontier_phi_13_14_ladder_2 = _2718;
                frontier_phi_13_14_ladder_3 = _2716;
                frontier_phi_13_14_ladder_4 = _2714;
                frontier_phi_13_14_ladder_5 = _2712;
            }
            else
            {
                frontier_phi_13_14_ladder = _2549;
                frontier_phi_13_14_ladder_1 = _2547;
                frontier_phi_13_14_ladder_2 = _2545;
                frontier_phi_13_14_ladder_3 = _2543;
                frontier_phi_13_14_ladder_4 = _2541;
                frontier_phi_13_14_ladder_5 = _2539;
            }
            _2711 = frontier_phi_13_14_ladder_5;
            _2713 = frontier_phi_13_14_ladder_4;
            _2715 = frontier_phi_13_14_ladder_3;
            _2717 = frontier_phi_13_14_ladder_2;
            _2719 = frontier_phi_13_14_ladder_1;
            _2721 = frontier_phi_13_14_ladder;
        }
        float _2726 = isnan(1.0) ? _1482 : (isnan(_1482) ? 1.0 : min(_1482, 1.0));
        _2414 = (_2726 * _2717) + _2228;
        _2416 = (_2726 * _2719) + _2229;
        _2418 = (_2726 * _2721) + _2230;
        _2420 = ((_2711 * 0.039999999105930328369140625) * _2726) + _2304;
        _2422 = ((_2713 * 0.039999999105930328369140625) * _2726) + _2307;
        _2424 = ((_2715 * 0.039999999105930328369140625) * _2726) + _2310;
    }
    else
    {
        _2414 = _2228;
        _2416 = _2229;
        _2418 = _2230;
        _2420 = _2304;
        _2422 = _2307;
        _2424 = _2310;
    }
    float _2444 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2445 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2446 = cbSceneParam._m0[86u].x * ((_1381 / cbSceneParam._m0[86u].x) + ((_1498 * cbMtdParam._m0[12u].y) * dot(vec3(_1417, _1418, _1419), vec3(_222, _223, _224))));
    float _2447 = isnan(_2444) ? _2446 : (isnan(_2446) ? _2444 : min(_2446, _2444));
    float _2448 = isnan(_2445) ? _1382 : (isnan(_1382) ? _2445 : min(_1382, _2445));
    vec4 _2450 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2447, _2448), 0.0);
    float _2452 = _2450.x;
    bool _2472 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2452)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2452))) > _1318;
    float _2473 = _2472 ? _2447 : _1381;
    float _2474 = _2472 ? _2448 : _1382;
    vec4 _2476 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2473, _2474));
    vec4 _2481 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2473, _2474));
    float _2483 = _2481.x;
    bool _2488 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _2497 = (-0.0) - cbSceneParam._m0[2u].z;
    float _2503 = (_2488 ? (_2497 / (cbSceneParam._m0[2u].x - _2483)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2483))) - _1318;
    float _2505 = cbMtdParam._m0[42u].y + cbMtdParam._m0[36u].y;
    float _2506 = cbMtdParam._m0[42u].z + cbMtdParam._m0[36u].z;
    float _2507 = cbMtdParam._m0[42u].w + cbMtdParam._m0[36u].w;
    bool _2513 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _2517 = (isnan(_2503) ? 0.0 : (isnan(0.0) ? _2503 : max(0.0, _2503))) * (-1.44269502162933349609375);
    float _4509 = isnan(0.0) ? _1468 : (isnan(_1468) ? 0.0 : max(_1468, 0.0));
    float _4520 = isnan(0.0) ? _1469 : (isnan(_1469) ? 0.0 : max(_1469, 0.0));
    float _4531 = isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0));
    float _2640;
    float _2641;
    float _2642;
    if ((1.0 - _1225) > 0.00999999977648258209228515625)
    {
        vec4 _2561 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2473, _2474), 0.0);
        float _2563 = _2561.x;
        float _2569 = (_2488 ? (_2497 / (cbSceneParam._m0[2u].x - _2563)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2563))) - _1318;
        uint _2575 = floatBitsToUint(cbInstanceData._m0[_1240]).x * 14u;
        uint _2581 = _2575 + 4u;
        float _2590 = dot(vec3(cbLight._m0[_2575].xyz), vec3(_243, _244, _245));
        float _2597 = dot(vec3((-0.0) - _1374, (-0.0) - _1375, (-0.0) - _1376), vec3((-0.0) - _243, (-0.0) - _244, (-0.0) - _245));
        float _2602 = ((isnan(0.0) ? _2597 : (isnan(_2597) ? 0.0 : max(_2597, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _2590 : (isnan(_2590) ? 0.001000000047497451305389404296875 : max(_2590, 0.001000000047497451305389404296875)))) + 1.0;
        float _2604 = (-0.0) - ((isnan(_2569) ? 0.0 : (isnan(0.0) ? _2569 : max(0.0, _2569))) * _2602);
        _2640 = _2513 ? 0.0 : ((((_1284 * cbMtdParam._m0[36u].y) * cbLight._m0[_2581].x) / ((_2602 * _2505) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2505 * 1.44269502162933349609375) * _2604)));
        _2641 = _2513 ? 0.0 : ((((_1284 * cbMtdParam._m0[36u].z) * cbLight._m0[_2581].y) / ((_2602 * _2506) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2506 * 1.44269502162933349609375) * _2604)));
        _2642 = _2513 ? 0.0 : ((((_1284 * cbMtdParam._m0[36u].w) * cbLight._m0[_2581].z) / ((_2602 * _2507) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2507 * 1.44269502162933349609375) * _2604)));
    }
    else
    {
        _2640 = 0.0;
        _2641 = 0.0;
        _2642 = 0.0;
    }
    float _2658 = (_2640 + ((exp2(_2517 * (_2513 ? 0.0 : _2505)) * _2476.x) * cbSceneParam._m0[72u].w)) * _2190;
    float _2659 = (_2641 + ((exp2(_2517 * (_2513 ? 0.0 : _2506)) * _2476.y) * cbSceneParam._m0[72u].w)) * _2190;
    float _2660 = (_2642 + ((exp2(_2517 * (_2513 ? 0.0 : _2507)) * _2476.z) * cbSceneParam._m0[72u].w)) * _2190;
    float _2682 = _1381 / cbSceneParam._m0[86u].x;
    float _2683 = _1382 / cbSceneParam._m0[86u].y;
    vec4 _2697 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2682, _2683, (log2((isnan(cbSceneParam._m0[77u].w) ? _1318 : (isnan(_1318) ? cbSceneParam._m0[77u].w : min(_1318, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2699 = _2697.x;
    float _2700 = _2697.y;
    float _2701 = _2697.z;
    float _2702 = _2697.w;
    float _2800;
    float _2802;
    float _2804;
    float _2806;
    if (_1318 > cbSceneParam._m0[78u].w)
    {
        float _2764 = isnan(_1318) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1318 : min(cbSceneParam._m0[80u].w, _1318));
        float _2765 = _2764 / _1318;
        float _2776 = _2765 * _1367;
        float _2777 = _1368 * _2765;
        float _2778 = (-0.0) - _2777;
        float _2779 = _2765 * _1369;
        float _2781 = (cbSceneParam._m0[77u].w * _2778) / _2764;
        float _2782 = _2781 + cbSceneParam._m0[79u].w;
        float _2783 = cbSceneParam._m0[79u].w - _2777;
        float _2789 = sqrt(((_2776 * _2776) + (_2777 * _2777)) + (_2779 * _2779));
        float _2792 = (1.0 - (cbSceneParam._m0[77u].w / _2764)) * _2789;
        float _2798 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2799 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3136;
        if (abs((_2778 - _2781) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3136 = ((((_2782 > 0.0) ? exp2(_2798 * _2782) : (2.0 - exp2(_2799 * _2782))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2792;
        }
        else
        {
            float _2908 = 1.0 / cbSceneParam._m0[80u].x;
            float _2909 = isnan(_2783) ? _2782 : (isnan(_2782) ? _2783 : max(_2782, _2783));
            float _2910 = isnan(_2783) ? _2782 : (isnan(_2782) ? _2783 : min(_2782, _2783));
            float _2919 = isnan(0.0) ? _2909 : (isnan(_2909) ? 0.0 : min(_2909, 0.0));
            float _2920 = isnan(0.0) ? _2910 : (isnan(_2910) ? 0.0 : min(_2910, 0.0));
            _3136 = ((abs(_2789 / _2778) * cbSceneParam._m0[80u].y) * ((((_2919 - _2920) * 2.0) - ((exp2(_2798 * (isnan(0.0) ? _2909 : (isnan(_2909) ? 0.0 : max(_2909, 0.0)))) - exp2(_2798 * (isnan(0.0) ? _2910 : (isnan(_2910) ? 0.0 : max(_2910, 0.0))))) * _2908)) - ((exp2(_2799 * _2919) - exp2(_2799 * _2920)) * _2908))) + (_2792 * cbSceneParam._m0[80u].z);
        }
        vec4 _3138 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2682, _2683, 1.0), 0.0);
        float _3147 = exp2((_3136 * (-1.44269502162933349609375)) * (1.0 - _3138.w));
        float _3148 = log2(_3147);
        float _3164 = log2(_2702);
        _2800 = (exp2(_3164 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3148 * cbSceneParam._m0[78u].x)) * _3138.x) / cbSceneParam._m0[78u].x)) + _2699;
        _2802 = (exp2(_3164 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3148 * cbSceneParam._m0[78u].y)) * _3138.y) / cbSceneParam._m0[78u].y)) + _2700;
        _2804 = (exp2(_3164 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3148 * cbSceneParam._m0[78u].z)) * _3138.z) / cbSceneParam._m0[78u].z)) + _2701;
        _2806 = _3147 * _2702;
    }
    else
    {
        _2800 = _2699;
        _2802 = _2700;
        _2804 = _2701;
        _2806 = _2702;
    }
    bool _2818 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2820 = log2(_2806);
    float _2827 = exp2(_2820 * cbSceneParam._m0[78u].x) * ((_2658 + ((_2420 + ((_1513.x * _1494) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4509 : (isnan(_4509) ? 1.0 : min(_4509, 1.0))) * (_2414 + (_2191 * (isnan(0.0) ? _2180 : (isnan(_2180) ? 0.0 : max(_2180, 0.0)))))) - _2658) * _1225));
    float _2828 = exp2(_2820 * cbSceneParam._m0[78u].y) * ((_2659 + ((_2422 + ((_1513.y * _1494) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4520 : (isnan(_4520) ? 1.0 : min(_4520, 1.0))) * (_2416 + (_2191 * (isnan(0.0) ? _2183 : (isnan(_2183) ? 0.0 : max(_2183, 0.0)))))) - _2659) * _1225));
    float _2829 = exp2(_2820 * cbSceneParam._m0[78u].z) * ((_2660 + ((_2424 + ((_1513.z * _1494) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4531 : (isnan(_4531) ? 1.0 : min(_4531, 1.0))) * (_2418 + (_2191 * (isnan(0.0) ? _2186 : (isnan(_2186) ? 0.0 : max(_2186, 0.0)))))) - _2660) * _1225));
    vec4 _2837 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1381, _1382));
    float _2839 = _2837.x;
    float _2860 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2839)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2839))) - _1318) * cbMtdParam._m0[14u].w;
    float _4597 = isnan(0.0) ? _2860 : (isnan(_2860) ? 0.0 : max(_2860, 0.0));
    float _2862 = (cbInstanceData._m0[_1239 + 6u].w * (isnan(1.0) ? _3905 : (isnan(_3905) ? 1.0 : min(_3905, 1.0)))) * (isnan(1.0) ? _4597 : (isnan(_4597) ? 1.0 : min(_4597, 1.0)));
    float _2871 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2871 * (_2818 ? _2827 : (_2827 + (cbSceneParam._m0[72u].w * _2800)));
    SV_Target.y = _2871 * (_2818 ? _2828 : (_2828 + (cbSceneParam._m0[72u].w * _2802)));
    SV_Target.z = _2871 * (_2818 ? _2829 : (_2829 + (cbSceneParam._m0[72u].w * _2804)));
    SV_Target.w = _2862;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2862;
}


