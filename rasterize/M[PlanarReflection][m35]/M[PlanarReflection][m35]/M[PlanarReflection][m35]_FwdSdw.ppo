#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[46];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 54) uniform texture2D g_ReflectionTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 57) uniform texture2D g_WaterSimulationNormalTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_5;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in vec4 TEXCOORD_8;
layout(location = 7) in float TEXCOORD_11;
layout(location = 7, component = 1) in float TEXCOORD_12;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _217 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _218 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _219 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _225 = inversesqrt(dot(vec3(_217, _218, _219), vec3(_217, _218, _219)));
    float _226 = _225 * _217;
    float _227 = _225 * _218;
    float _228 = _225 * _219;
    float _232 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _233 = _232 * NORMAL.x;
    float _234 = _232 * NORMAL.y;
    float _235 = _232 * NORMAL.z;
    float _239 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _247;
    float _248;
    float _249;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _247 = (-0.0) - _233;
        _248 = (-0.0) - _234;
        _249 = (-0.0) - _235;
    }
    else
    {
        _247 = _233;
        _248 = _234;
        _249 = _235;
    }
    float _295 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _305 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _295);
    float _306 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _295);
    float _307 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _295);
    float _322 = cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x;
    vec4 _339 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_2, SS_BumpMap), vec2((((_322 * cbMtdParam._m0[27u].y) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_322 * cbMtdParam._m0[27u].z) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _342 = _339.x;
    float _343 = _339.y;
    float _344 = _339.z;
    float _345 = _339.w;
    float _358 = cbMtdParam._m0[14u].y - cbMtdParam._m0[14u].x;
    float _361 = (sqrt(((_305 * _305) + (_306 * _306)) + (_307 * _307)) - cbMtdParam._m0[14u].x) / (isnan(0.001000000047497451305389404296875) ? _358 : (isnan(_358) ? 0.001000000047497451305389404296875 : max(_358, 0.001000000047497451305389404296875)));
    float _362 = _361 + 0.180000007152557373046875;
    float _364 = _362 * 12.0;
    float _3831 = isnan(0.0) ? _364 : (isnan(_364) ? 0.0 : max(_364, 0.0));
    float _367 = isnan(1.0) ? _3831 : (isnan(_3831) ? 1.0 : min(_3831, 1.0));
    vec4 _379 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _381 = _379.x;
    float _403 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _381)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _381))) - POSITION_1.w;
    float _404 = _403 / ((_367 * 0.0599999986588954925537109375) + 0.0599999986588954925537109375);
    float _3842 = isnan(0.0) ? _404 : (isnan(_404) ? 0.0 : max(_404, 0.0));
    float _405 = isnan(1.0) ? _3842 : (isnan(_3842) ? 1.0 : min(_3842, 1.0));
    float _406 = isnan(0.5) ? _405 : (isnan(_405) ? 0.5 : max(_405, 0.5));
    float _408 = 1.0 - _406;
    float _409 = _362 * 7.0;
    float _3858 = isnan(0.0) ? _409 : (isnan(_409) ? 0.0 : max(_409, 0.0));
    float _411 = isnan(1.0) ? _3858 : (isnan(_3858) ? 1.0 : min(_3858, 1.0));
    float _424 = (_344 * 0.00200000009499490261077880859375) + TEXCOORD.x;
    float _425 = (_344 * 0.00999999977648258209228515625) + TEXCOORD.y;
    vec4 _439 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[25u].w * _322) + _424) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[26u].x * _322) + _425) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _441 = _439.x;
    float _466 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[23u].w * _424) + (cbMtdParam._m0[26u].w * _322)) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[24u].x * _425) + (cbMtdParam._m0[27u].x * _322)) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x + (-0.0500000007450580596923828125);
    float _469 = (isnan(_466) ? _441 : (isnan(_441) ? _466 : max(_441, _466))) - _411;
    float _3874 = isnan(0.0) ? _469 : (isnan(_469) ? 0.0 : max(_469, 0.0));
    float _470 = isnan(1.0) ? _3874 : (isnan(_3874) ? 1.0 : min(_3874, 1.0));
    float _471 = _411 + 0.5;
    float _3885 = isnan(0.0) ? _471 : (isnan(_471) ? 0.0 : max(_471, 0.0));
    float _482 = cbMtdParam._m0[16u].w * _322;
    float _483 = cos(_482);
    float _484 = sin(_482);
    vec4 _508 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((((_484 * cbMtdParam._m0[31u].y) + TEXCOORD.x) + (cbMtdParam._m0[22u].y * _322)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((_483 * cbMtdParam._m0[31u].z) + TEXCOORD.y) + (cbMtdParam._m0[22u].z * _322)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _512 = _508.z;
    vec4 _527 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[21u].w * _322) + TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[22u].x * _322) + TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _531 = _527.z;
    float _534 = (isnan(_531) ? _512 : (isnan(_512) ? _531 : max(_512, _531))) * (isnan(1.0) ? _3885 : (isnan(_3885) ? 1.0 : min(_3885, 1.0)));
    float _3901 = isnan(0.0) ? _534 : (isnan(_534) ? 0.0 : max(_534, 0.0));
    float _535 = isnan(1.0) ? _3901 : (isnan(_3901) ? 1.0 : min(_3901, 1.0));
    float _538 = (_408 - _345) + (isnan(_535) ? _470 : (isnan(_470) ? _535 : max(_470, _535)));
    float _3917 = isnan(0.0) ? _538 : (isnan(_538) ? 0.0 : max(_538, 0.0));
    float _539 = isnan(1.0) ? _3917 : (isnan(_3917) ? 1.0 : min(_3917, 1.0));
    float _540 = _539 * _406;
    float _3928 = isnan(0.0) ? _361 : (isnan(_361) ? 0.0 : max(_361, 0.0));
    float _549 = isnan(1.0) ? _3928 : (isnan(_3928) ? 1.0 : min(_3928, 1.0));
    float _550 = _344 - _549;
    float _3939 = isnan(0.0) ? _550 : (isnan(_550) ? 0.0 : max(_550, 0.0));
    float _551 = isnan(1.0) ? _3939 : (isnan(_3939) ? 1.0 : min(_3939, 1.0));
    vec4 _607 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[23u].y * _322) + (cbMtdParam._m0[30u].w * _484)) + (cbMtdParam._m0[34u].w * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[23u].z * _322) + (cbMtdParam._m0[31u].x * _483)) + (cbMtdParam._m0[35u].x * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _634 = cbMtdParam._m0[38u].x * TEXCOORD_5.x;
    float _693 = ((((((_607.w + (-0.5)) * cbMtdParam._m0[44u].x) + (cbMtdParam._m0[39u].z * (_508.w + (-0.5)))) + (cbMtdParam._m0[40u].y * (_527.w + (-0.5)))) + (((_634 + cbMtdParam._m0[41u].w) * cos(cbMtdParam._m0[13u].y * _322)) * (texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[32u].w * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[33u].x * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) + ((sin(cbMtdParam._m0[13u].x * _322) * (cbMtdParam._m0[41u].x + _634)) * (texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[31u].w * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[32u].x * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) * (1.0 - TEXCOORD_5.y);
    float _720 = 1.0 - _345;
    float _725 = ((isnan(0.550000011920928955078125) ? _720 : (isnan(_720) ? 0.550000011920928955078125 : max(_720, 0.550000011920928955078125))) + (-0.550000011920928955078125)) * cbMtdParam._m0[16u].z;
    float _728 = ((TEXCOORD_5.y * (-0.5)) * _725) + _725;
    float _732 = ((TEXCOORD_5.z * (-0.699999988079071044921875)) * _728) + _728;
    float _742 = (((_693 + ((cbMtdParam._m0[37u].y - (cbMtdParam._m0[37u].y * TEXCOORD_5.y)) * _344)) + ((texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[35u].w * TEXCOORD.x) + (cbMtdParam._m0[22u].w * _322)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[36u].x * TEXCOORD.y) + (cbMtdParam._m0[23u].x * _322)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).w + (-0.5)) * cbMtdParam._m0[44u].w)) + ((sin(cbMtdParam._m0[21u].y * _322) * cbMtdParam._m0[38u].w) * (isnan(0.300000011920928955078125) ? TEXCOORD_5.z : (isnan(TEXCOORD_5.z) ? 0.300000011920928955078125 : max(TEXCOORD_5.z, 0.300000011920928955078125))))) + _732;
    float _745 = (_742 + cbMtdParam._m0[20u].z) * cbMtdParam._m0[20u].w;
    float _3960 = isnan(0.0) ? _745 : (isnan(_745) ? 0.0 : max(_745, 0.0));
    float _746 = isnan(1.0) ? _3960 : (isnan(_3960) ? 1.0 : min(_3960, 1.0));
    float _758 = inversesqrt(dot(vec3(_305, _306, _307), vec3(_305, _306, _307)));
    float _762 = dot(vec4(_758 * _305, _758 * _306, _758 * _307, 0.0), vec4(_247, _248, _249, 0.0));
    float _3971 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
    float _770 = exp2(log2((1.0 - (isnan(1.0) ? _3971 : (isnan(_3971) ? 1.0 : min(_3971, 1.0)))) * cbMtdParam._m0[12u].z) * cbMtdParam._m0[12u].w);
    float _3982 = isnan(0.0) ? _770 : (isnan(_770) ? 0.0 : max(_770, 0.0));
    float _771 = isnan(1.0) ? _3982 : (isnan(_3982) ? 1.0 : min(_3982, 1.0));
    float _775 = ((_540 + cbMtdParam._m0[9u].x) + (_551 * cbMtdParam._m0[10u].x)) + ((_746 * cbMtdParam._m0[11u].x) * _771);
    float _776 = ((_540 + cbMtdParam._m0[9u].y) + (_551 * cbMtdParam._m0[10u].y)) + ((_746 * cbMtdParam._m0[11u].y) * _771);
    float _777 = ((_540 + cbMtdParam._m0[9u].z) + (_551 * cbMtdParam._m0[10u].z)) + ((_746 * cbMtdParam._m0[11u].z) * _771);
    float _3993 = isnan(0.0) ? _406 : (isnan(_406) ? 0.0 : max(_406, 0.0));
    float _778 = isnan(1.0) ? _3993 : (isnan(_3993) ? 1.0 : min(_3993, 1.0));
    float _4004 = isnan(0.0) ? _408 : (isnan(_408) ? 0.0 : max(_408, 0.0));
    float _788 = isnan(1.0) ? _4004 : (isnan(_4004) ? 1.0 : min(_4004, 1.0));
    float _791 = (_367 * (-0.87999999523162841796875)) * _788;
    float _794 = (((((1.0 - _775) - _778) * _549) + _775) + _788) + _791;
    float _797 = (((((1.0 - _776) - _778) * _549) + _776) + _788) + _791;
    float _800 = (((((1.0 - _777) - _778) * _549) + _777) + _788) + _791;
    float _801 = _344 * 0.01200000010430812835693359375;
    float _823 = (_344 * 0.300000011920928955078125) * texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[35u].y * _322) + _801) + (cbMtdParam._m0[24u].y * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[35u].z * _322) + _801) + (cbMtdParam._m0[24u].z * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z;
    float _4015 = isnan(0.0) ? _823 : (isnan(_823) ? 0.0 : max(_823, 0.0));
    float _824 = isnan(1.0) ? _4015 : (isnan(_4015) ? 1.0 : min(_4015, 1.0));
    float _834 = (((1.0 - _794) * TEXCOORD_5.x) * _824) + _794;
    float _835 = (((1.0 - _797) * TEXCOORD_5.x) * _824) + _797;
    float _836 = (((1.0 - _800) * TEXCOORD_5.x) * _824) + _800;
    vec4 _870 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].w * _322) + (cbMtdParam._m0[30u].y * _484)) + (cbMtdParam._m0[29u].y * _424)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[28u].x * _322) + (cbMtdParam._m0[30u].z * _483)) + (cbMtdParam._m0[29u].z * _425)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _873 = _870.y;
    float _880 = 1.0 - (_403 / cbMtdParam._m0[18u].w);
    float _884 = ((_870.x * TEXCOORD_8.x) * cbMtdParam._m0[18u].z) * (isnan(0.0) ? _880 : (isnan(_880) ? 0.0 : max(_880, 0.0)));
    float _890 = _873 * TEXCOORD_8.y;
    float _893 = ((isnan(cbMtdParam._m0[19u].x) ? _890 : (isnan(_890) ? cbMtdParam._m0[19u].x : max(_890, cbMtdParam._m0[19u].x))) - cbMtdParam._m0[19u].x) * cbMtdParam._m0[19u].y;
    float _894 = isnan(_893) ? _884 : (isnan(_884) ? _893 : max(_884, _893));
    float _4041 = isnan(0.0) ? _894 : (isnan(_894) ? 0.0 : max(_894, 0.0));
    float _895 = isnan(1.0) ? _4041 : (isnan(_4041) ? 1.0 : min(_4041, 1.0));
    float _902 = (_895 * (1.0 - _834)) + _834;
    float _903 = (_895 * (1.0 - _835)) + _835;
    float _904 = (_895 * (1.0 - _836)) + _836;
    float _939 = exp2(log2(cbMtdParam._m0[15u].w * _720) * cbMtdParam._m0[17u].x);
    float _4052 = isnan(0.0) ? _939 : (isnan(_939) ? 0.0 : max(_939, 0.0));
    float _940 = isnan(1.0) ? _4052 : (isnan(_4052) ? 1.0 : min(_4052, 1.0));
    float _941 = _940 * texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[28u].y * _322) + (cbMtdParam._m0[28u].w * _720)) + (cbMtdParam._m0[29u].w * _424)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[28u].z * _322) + (cbMtdParam._m0[29u].x * _720)) + (cbMtdParam._m0[30u].x * _425)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w)).z;
    float _944 = ((_940 - _941) * cbMtdParam._m0[17u].w) + _941;
    float _948 = _411 * TEXCOORD_8.z;
    float _955 = ((_948 * (1.0 - _902)) * _944) + _902;
    float _956 = ((_948 * (1.0 - _903)) * _944) + _903;
    float _957 = ((_948 * (1.0 - _904)) * _944) + _904;
    float _961 = 1.0 - (_403 / cbMtdParam._m0[18u].x);
    float _967 = (cbMtdParam._m0[18u].y * _873) * (isnan(0.0) ? _961 : (isnan(_961) ? 0.0 : max(_961, 0.0)));
    float _971 = (_967 * (1.0 - _955)) + _955;
    float _972 = (_967 * (1.0 - _956)) + _956;
    float _973 = (_967 * (1.0 - _957)) + _957;
    float _976 = _361 / cbMtdParam._m0[15u].y;
    float _4068 = isnan(0.0) ? _976 : (isnan(_976) ? 0.0 : max(_976, 0.0));
    float _979 = (1.0 - (isnan(1.0) ? _4068 : (isnan(_4068) ? 1.0 : min(_4068, 1.0)))) * cbMtdParam._m0[15u].x;
    float _985 = _361 + 0.20000000298023223876953125;
    float _987 = _985 * 9.0;
    float _4079 = isnan(0.0) ? _987 : (isnan(_987) ? 0.0 : max(_987, 0.0));
    float _992 = ((cbMtdParam._m0[13u].w - cbMtdParam._m0[12u].x) * (isnan(1.0) ? _4079 : (isnan(_4079) ? 1.0 : min(_4079, 1.0)))) + cbMtdParam._m0[12u].x;
    float _995 = (_361 + 0.099999986588954925537109375) * 2.5;
    float _4090 = isnan(0.0) ? _995 : (isnan(_995) ? 0.0 : max(_995, 0.0));
    float _1000 = ((cbMtdParam._m0[14u].z - _992) * (isnan(1.0) ? _4090 : (isnan(_4090) ? 1.0 : min(_4090, 1.0)))) + _992;
    float _1001 = _971 + _539;
    float _4101 = isnan(0.0) ? _1001 : (isnan(_1001) ? 0.0 : max(_1001, 0.0));
    float _1006 = ((0.3499999940395355224609375 - _1000) * (isnan(1.0) ? _4101 : (isnan(_4101) ? 1.0 : min(_4101, 1.0)))) + _1000;
    float _1007 = TEXCOORD_5.z * 0.5;
    float _1019 = (_361 + 0.100000001490116119384765625) * 0.89999997615814208984375;
    float _4112 = isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0));
    float _1024 = ((cbMtdParam._m0[17u].y - cbMtdParam._m0[20u].x) * (isnan(1.0) ? _4112 : (isnan(_4112) ? 1.0 : min(_4112, 1.0)))) + cbMtdParam._m0[20u].x;
    float _1029 = (_1024 * (_342 + (-0.5))) + 0.5;
    float _1030 = (_1024 * (_343 + (-0.5))) + 0.5;
    float _4123 = isnan(0.0) ? TEXCOORD_5.y : (isnan(TEXCOORD_5.y) ? 0.0 : max(TEXCOORD_5.y, 0.0));
    float _1031 = isnan(1.0) ? _4123 : (isnan(_4123) ? 1.0 : min(_4123, 1.0));
    vec4 _1061 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[26u].y * TEXCOORD.z) + (cbMtdParam._m0[32u].y * _322)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[26u].z * TEXCOORD.w) + (cbMtdParam._m0[32u].z * _322)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1069 = ((_527.x + (-0.5)) * 0.5) + _508.x;
    float _1070 = ((_527.y + (-0.5)) * 0.5) + _508.y;
    vec4 _1096 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[24u].w * TEXCOORD.x) + (cbMtdParam._m0[25u].y * _322)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[25u].x * TEXCOORD.y) + (cbMtdParam._m0[25u].z * _322)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1105 = _985 * 12.0;
    float _4134 = isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0));
    float _1107 = 1.0 - (isnan(1.0) ? _4134 : (isnan(_4134) ? 1.0 : min(_4134, 1.0)));
    float _1118 = cbMtdParam._m0[33u].w * TEXCOORD.x;
    float _1119 = cbMtdParam._m0[34u].x * TEXCOORD.y;
    vec4 _1132 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((_1118 + (cbMtdParam._m0[33u].y * _322)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_1119 + (cbMtdParam._m0[33u].z * _322)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _1153 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1118 + ((cbMtdParam._m0[27u].y * 0.4000000059604644775390625) * _551)) + (cbMtdParam._m0[34u].y * _322)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1119 + ((cbMtdParam._m0[27u].z * 0.4000000059604644775390625) * _551)) + (cbMtdParam._m0[34u].z * _322)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _1167 = (((0.5 - _1069) * 0.10999999940395355224609375) + _1069) + (((((((_1096.z + (-0.5)) * cbMtdParam._m0[16u].x) * _1107) + (-1.0)) + _1132.x) + _1153.x) * cbMtdParam._m0[15u].z);
    float _1168 = (((0.5 - _1070) * 0.10999999940395355224609375) + _1070) + (((((((_1096.w + (-0.5)) * cbMtdParam._m0[16u].x) * _1107) + (-1.0)) + _1132.y) + _1153.y) * cbMtdParam._m0[15u].z);
    float _1173 = ((_1061.x - _1167) * _361) + _1167;
    float _1174 = ((_1061.y - _1168) * _361) + _1168;
    float _1175 = _361 * 0.5;
    float _4145 = isnan(0.0) ? _1175 : (isnan(_1175) ? 0.0 : max(_1175, 0.0));
    float _1176 = isnan(1.0) ? _4145 : (isnan(_4145) ? 1.0 : min(_4145, 1.0));
    float _1187 = cbMtdParam._m0[17u].z - (cbMtdParam._m0[17u].z * _732);
    float _1194 = cbMtdParam._m0[19u].z - (cbMtdParam._m0[19u].z * TEXCOORD_5.y);
    float _1196 = _1194 - (_1194 * _1176);
    float _1200 = (((((((0.5 - _342) * 0.60000002384185791015625) + _342) - _1029) * _1031) + _1029) + (_1196 * (_607.x + (-0.5)))) + (((_1173 + (-0.5)) + ((0.5 - _1173) * _1176)) * _1187);
    float _1202 = (((((((0.5 - _343) * 0.60000002384185791015625) + _343) - _1030) * _1031) + _1030) + (_1196 * (_607.y + (-0.5)))) + (((_1174 + (-0.5)) + ((0.5 - _1174) * _1176)) * _1187);
    float _1212 = (((_1007 * (0.5 - _1200)) + _1200) * 2.0) + (-1.0);
    float _1213 = (((_1007 * (0.5 - _1202)) + _1202) * 2.0) + (-1.0);
    float _1214 = dot(vec2(_1212, _1213), vec2(_1212, _1213));
    float _4156 = isnan(0.0) ? _1214 : (isnan(_1214) ? 0.0 : max(_1214, 0.0));
    float _1219 = sqrt(1.0 - (isnan(1.0) ? _4156 : (isnan(_4156) ? 1.0 : min(_4156, 1.0))));
    float _1222 = _985 * 6.0;
    float _4167 = isnan(0.0) ? _1222 : (isnan(_1222) ? 0.0 : max(_1222, 0.0));
    float _1225 = cbMtdParam._m0[16u].y * (isnan(1.0) ? _4167 : (isnan(_4167) ? 1.0 : min(_4167, 1.0)));
    float _4178 = isnan(0.0) ? _1225 : (isnan(_1225) ? 0.0 : max(_1225, 0.0));
    float _1226 = isnan(1.0) ? _4178 : (isnan(_4178) ? 1.0 : min(_4178, 1.0));
    float _1229 = ((1.0 - _1226) * _1001) + _1226;
    uint _1243 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1244 = _1243 + 5u;
    float _1255 = (-0.0) - _305;
    float _1256 = (-0.0) - _306;
    float _1257 = (-0.0) - _307;
    float _1261 = inversesqrt(dot(vec3(_1255, _1256, _1257), vec3(_1255, _1256, _1257)));
    float _1265 = dot(vec3(_1261 * _1255, _1261 * _1256, _1261 * _1257), vec3(cbLight._m0[floatBitsToUint(cbInstanceData._m0[_1244]).x * 14u].xyz));
    float _1275 = 0.90999996662139892578125 / exp2(log2(1.091000080108642578125 - (_1265 * 0.60000002384185791015625)) * 1.5);
    float _1288 = ((((0.959999978542327880859375 / exp2(log2((_1265 * 0.4000000059604644775390625) + 1.04100000858306884765625) * 1.5)) - _1275) * 0.5) + _1275) * 0.079577468335628509521484375;
    float _1292 = fma(_1219, _247, fma(_1213, _239 * TANGENT.x, _1212 * _226));
    float _1295 = fma(_1219, _248, fma(_1213, _239 * TANGENT.y, _1212 * _227));
    float _1298 = fma(_1219, _249, fma(_1213, _239 * TANGENT.z, _1212 * _228));
    float _1302 = inversesqrt(dot(vec3(_1292, _1295, _1298), vec3(_1292, _1295, _1298)));
    float _1303 = _1302 * _1292;
    float _1304 = _1302 * _1295;
    float _1305 = _1302 * _1298;
    float _4189 = isnan(0.0) ? _979 : (isnan(_979) ? 0.0 : max(_979, 0.0));
    float _4200 = isnan(0.0) ? _1006 : (isnan(_1006) ? 0.0 : max(_1006, 0.0));
    float _1307 = isnan(1.0) ? _4200 : (isnan(_4200) ? 1.0 : min(_4200, 1.0));
    float _4211 = isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0));
    float _4222 = isnan(0.0) ? _972 : (isnan(_972) ? 0.0 : max(_972, 0.0));
    float _4233 = isnan(0.0) ? _973 : (isnan(_973) ? 0.0 : max(_973, 0.0));
    float _1322 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1362 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1371 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1362);
    float _1372 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1362);
    float _1373 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1362);
    float _1377 = inversesqrt(dot(vec3(_1371, _1372, _1373), vec3(_1371, _1372, _1373)));
    float _1378 = _1371 * _1377;
    float _1379 = _1372 * _1377;
    float _1380 = _1373 * _1377;
    float _1385 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1386 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _1388 = texture(sampler2D(g_WaterSimulationNormalTexture, SS_ClampLinear), vec2(TEXCOORD_11, TEXCOORD_12));
    float _1397 = (_1388.x * 2.0) + (-1.0);
    float _1398 = (_1388.y * 2.0) + (-1.0);
    float _1399 = (_1388.z * 2.0) + (-1.0);
    float _1403 = inversesqrt(dot(vec3(_1397, _1398, _1399), vec3(_1397, _1398, _1399)));
    float _1414 = ((TEXCOORD_12 >= 1.0) || ((TEXCOORD_12 <= 0.0) || ((TEXCOORD_11 <= 0.0) || (TEXCOORD_11 >= 1.0)))) ? 0.0 : _1388.w;
    float _1421 = (((_1397 * _1403) - _1303) * _1414) + _1303;
    float _1422 = (((_1398 * _1403) - _1304) * _1414) + _1304;
    float _1423 = (((_1399 * _1403) - _1305) * _1414) + _1305;
    float _1443 = fma(_1423, cbSceneParam._m0[5u].z, fma(_1422, cbSceneParam._m0[5u].y, _1421 * cbSceneParam._m0[5u].x));
    float _1446 = fma(_1423, cbSceneParam._m0[6u].z, fma(_1422, cbSceneParam._m0[6u].y, _1421 * cbSceneParam._m0[6u].x));
    float _1449 = fma(_1423, cbSceneParam._m0[7u].z, fma(_1422, cbSceneParam._m0[7u].y, _1421 * cbSceneParam._m0[7u].x));
    uint _1463 = (_1243 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1469 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4211 : (isnan(_4211) ? 1.0 : min(_4211, 1.0)))) * cbInstanceData._m0[_1463].x;
    float _1470 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4222 : (isnan(_4222) ? 1.0 : min(_4222, 1.0)))) * cbInstanceData._m0[_1463].y;
    float _1471 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4233 : (isnan(_4233) ? 1.0 : min(_4233, 1.0)))) * cbInstanceData._m0[_1463].z;
    float _4244 = isnan(0.0) ? _1469 : (isnan(_1469) ? 0.0 : max(_1469, 0.0));
    float _1472 = isnan(1.0) ? _4244 : (isnan(_4244) ? 1.0 : min(_4244, 1.0));
    float _4255 = isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0));
    float _1473 = isnan(1.0) ? _4255 : (isnan(_4255) ? 1.0 : min(_4255, 1.0));
    float _4266 = isnan(0.0) ? _1471 : (isnan(_1471) ? 0.0 : max(_1471, 0.0));
    float _1474 = isnan(1.0) ? _4266 : (isnan(_4266) ? 1.0 : min(_4266, 1.0));
    vec4 _1483 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1385, cbSceneParam._m0[86u].y * _1386));
    float _1486 = _1483.x * TEXCOORD_5.w;
    float _1490 = abs(dot(vec3(_1378, _1379, _1380), vec3(_1421, _1422, _1423)));
    float _4277 = isnan(0.0) ? _1490 : (isnan(_1490) ? 0.0 : max(_1490, 0.0));
    float _1497 = exp2(log2(1.0 - (isnan(1.0) ? _4277 : (isnan(_4277) ? 1.0 : min(_4277, 1.0)))) * 5.0) * 0.959999978542327880859375;
    float _1498 = _1497 + 0.039999999105930328369140625;
    float _1502 = 10.0 / (_1322 + 10.0);
    vec4 _1517 = texture(sampler2D(g_ReflectionTexture, SS_ClampLinear), vec2(((_1502 * cbMtdParam._m0[21u].z) * dot(vec3(_1421, _1422, _1423), vec3(1.0, 0.0, 0.0))) + (_1385 / cbSceneParam._m0[86u].x), 1.0 - (_1386 / cbSceneParam._m0[86u].y)));
    float _1553 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1557 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1561 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1857;
    float _1858;
    float _1859;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1586 = fma(_1561, cbModelParam._m0[26u].z, fma(_1557, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1553));
        float _1590 = fma(_1561, cbModelParam._m0[27u].z, fma(_1557, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1553));
        float _1594 = fma(_1561, cbModelParam._m0[28u].z, fma(_1557, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1553));
        float _1616 = _1553 + _1421;
        float _1617 = _1557 + _1422;
        float _1618 = _1561 + _1423;
        float _1628 = fma(_1618, cbModelParam._m0[26u].z, fma(_1617, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1616)) - _1586;
        float _1629 = fma(_1618, cbModelParam._m0[27u].z, fma(_1617, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1616)) - _1590;
        float _1630 = fma(_1618, cbModelParam._m0[28u].z, fma(_1617, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1616)) - _1594;
        float _1634 = inversesqrt(dot(vec3(_1628, _1629, _1630), vec3(_1628, _1629, _1630)));
        float _1646 = ((_1634 * _1628) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1586 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1647 = ((_1634 * _1629) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1590 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1648 = ((_1634 * _1630) / cbModelParam._m0[34u].z) + ((((((_1594 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1651 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1646, _1647, _1648), 0.0);
        vec4 _1658 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1646, _1647, _1648), 0.0);
        vec4 _1665 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1646, _1647, _1648), 0.0);
        vec4 _1672 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1646, _1647, _1648), 0.0);
        float _1685 = exp2((_1651.w + (-0.5)) * 20.0) * 2.0;
        float _1692 = exp2((_1658.w + (-0.5)) * 20.0) * 2.0;
        float _1699 = exp2((_1665.w + (-0.5)) * 20.0) * 2.0;
        float _1706 = exp2((_1672.w + (-0.5)) * 20.0) * 2.0;
        float _1707 = _1706 * (_1672.x + (-0.5));
        float _1708 = _1706 * (_1672.y + (-0.5));
        float _1709 = _1706 * (_1672.z + (-0.5));
        float _1710 = isnan(0.0) ? _1707 : (isnan(_1707) ? 0.0 : max(_1707, 0.0));
        float _1711 = isnan(0.0) ? _1708 : (isnan(_1708) ? 0.0 : max(_1708, 0.0));
        float _1712 = isnan(0.0) ? _1709 : (isnan(_1709) ? 0.0 : max(_1709, 0.0));
        float _1714 = ((_1651.x + (-0.5)) * 0.5) * _1685;
        float _1716 = ((_1658.x + (-0.5)) * 0.5) * _1692;
        float _1718 = ((_1665.x + (-0.5)) * 0.5) * _1699;
        float _1719 = dot(vec3(_1714, _1716, _1718), vec3(_1714, _1716, _1718));
        float _1724 = (_1719 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1719);
        float _1733 = (dot(vec3(_1421, _1422, _1423), vec3(_1724 * _1714, _1724 * _1716, _1724 * _1718)) + 1.0) * 0.5;
        float _4303 = isnan(0.0) ? _1733 : (isnan(_1733) ? 0.0 : max(_1733, 0.0));
        float _1743 = sqrt(((_1716 * _1716) + (_1714 * _1714)) + (_1718 * _1718)) / (_1710 + 9.9999997473787516355514526367188e-06);
        float _4314 = isnan(0.0) ? _1743 : (isnan(_1743) ? 0.0 : max(_1743, 0.0));
        float _1744 = isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0));
        float _1745 = _1744 * 2.0;
        float _1749 = (1.0 - _1744) / (_1744 + 1.0);
        float _4325 = isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0));
        float _1750 = isnan(1.0) ? _4325 : (isnan(_4325) ? 1.0 : min(_4325, 1.0));
        float _1759 = ((((1.0 - _1750) * (_1745 + 2.0)) * exp2(log2(isnan(1.0) ? _4303 : (isnan(_4303) ? 1.0 : min(_4303, 1.0))) * (_1745 + 1.0))) + _1750) * _1710;
        float _1761 = ((_1651.y + (-0.5)) * 0.5) * _1685;
        float _1763 = ((_1658.y + (-0.5)) * 0.5) * _1692;
        float _1765 = ((_1665.y + (-0.5)) * 0.5) * _1699;
        float _1766 = dot(vec3(_1761, _1763, _1765), vec3(_1761, _1763, _1765));
        float _1771 = (_1766 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1766);
        float _1779 = (dot(vec3(_1421, _1422, _1423), vec3(_1771 * _1761, _1771 * _1763, _1771 * _1765)) + 1.0) * 0.5;
        float _4336 = isnan(0.0) ? _1779 : (isnan(_1779) ? 0.0 : max(_1779, 0.0));
        float _1788 = sqrt(((_1763 * _1763) + (_1761 * _1761)) + (_1765 * _1765)) / (_1711 + 9.9999997473787516355514526367188e-06);
        float _4347 = isnan(0.0) ? _1788 : (isnan(_1788) ? 0.0 : max(_1788, 0.0));
        float _1789 = isnan(1.0) ? _4347 : (isnan(_4347) ? 1.0 : min(_4347, 1.0));
        float _1790 = _1789 * 2.0;
        float _1794 = (1.0 - _1789) / (_1789 + 1.0);
        float _4358 = isnan(0.0) ? _1794 : (isnan(_1794) ? 0.0 : max(_1794, 0.0));
        float _1795 = isnan(1.0) ? _4358 : (isnan(_4358) ? 1.0 : min(_4358, 1.0));
        float _1804 = ((((1.0 - _1795) * (_1790 + 2.0)) * exp2(log2(isnan(1.0) ? _4336 : (isnan(_4336) ? 1.0 : min(_4336, 1.0))) * (_1790 + 1.0))) + _1795) * _1711;
        float _1806 = ((_1651.z + (-0.5)) * 0.5) * _1685;
        float _1808 = ((_1658.z + (-0.5)) * 0.5) * _1692;
        float _1810 = ((_1665.z + (-0.5)) * 0.5) * _1699;
        float _1811 = dot(vec3(_1806, _1808, _1810), vec3(_1806, _1808, _1810));
        float _1816 = (_1811 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1811);
        float _1824 = (dot(vec3(_1421, _1422, _1423), vec3(_1816 * _1806, _1816 * _1808, _1816 * _1810)) + 1.0) * 0.5;
        float _4369 = isnan(0.0) ? _1824 : (isnan(_1824) ? 0.0 : max(_1824, 0.0));
        float _1833 = sqrt(((_1808 * _1808) + (_1806 * _1806)) + (_1810 * _1810)) / (_1712 + 9.9999997473787516355514526367188e-06);
        float _4380 = isnan(0.0) ? _1833 : (isnan(_1833) ? 0.0 : max(_1833, 0.0));
        float _1834 = isnan(1.0) ? _4380 : (isnan(_4380) ? 1.0 : min(_4380, 1.0));
        float _1835 = _1834 * 2.0;
        float _1839 = (1.0 - _1834) / (_1834 + 1.0);
        float _4391 = isnan(0.0) ? _1839 : (isnan(_1839) ? 0.0 : max(_1839, 0.0));
        float _1840 = isnan(1.0) ? _4391 : (isnan(_4391) ? 1.0 : min(_4391, 1.0));
        float _1849 = ((((1.0 - _1840) * (_1835 + 2.0)) * exp2(log2(isnan(1.0) ? _4369 : (isnan(_4369) ? 1.0 : min(_4369, 1.0))) * (_1835 + 1.0))) + _1840) * _1712;
        _1857 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1759 : (isnan(_1759) ? 0.0 : max(_1759, 0.0)));
        _1858 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1804 : (isnan(_1804) ? 0.0 : max(_1804, 0.0)));
        _1859 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0)));
    }
    else
    {
        _1857 = 0.0;
        _1858 = 0.0;
        _1859 = 0.0;
    }
    float _2149;
    float _2150;
    float _2151;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1882 = fma(_1561, cbModelParam._m0[30u].z, fma(_1557, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1553));
        float _1886 = fma(_1561, cbModelParam._m0[31u].z, fma(_1557, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1553));
        float _1890 = fma(_1561, cbModelParam._m0[32u].z, fma(_1557, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1553));
        float _1912 = _1553 + _1421;
        float _1913 = _1557 + _1422;
        float _1914 = _1561 + _1423;
        float _1924 = fma(_1914, cbModelParam._m0[30u].z, fma(_1913, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1912)) - _1882;
        float _1925 = fma(_1914, cbModelParam._m0[31u].z, fma(_1913, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1912)) - _1886;
        float _1926 = fma(_1914, cbModelParam._m0[32u].z, fma(_1913, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1912)) - _1890;
        float _1930 = inversesqrt(dot(vec3(_1924, _1925, _1926), vec3(_1924, _1925, _1926)));
        float _1942 = ((_1930 * _1924) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1882 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1943 = ((_1930 * _1925) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1886 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1944 = ((_1930 * _1926) / cbModelParam._m0[35u].z) + ((((((_1890 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1946 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1942, _1943, _1944), 0.0);
        vec4 _1953 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1942, _1943, _1944), 0.0);
        vec4 _1960 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1942, _1943, _1944), 0.0);
        vec4 _1967 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1942, _1943, _1944), 0.0);
        float _1979 = exp2((_1946.w + (-0.5)) * 20.0) * 2.0;
        float _1986 = exp2((_1953.w + (-0.5)) * 20.0) * 2.0;
        float _1993 = exp2((_1960.w + (-0.5)) * 20.0) * 2.0;
        float _2000 = exp2((_1967.w + (-0.5)) * 20.0) * 2.0;
        float _2001 = _2000 * (_1967.x + (-0.5));
        float _2002 = _2000 * (_1967.y + (-0.5));
        float _2003 = _2000 * (_1967.z + (-0.5));
        float _2004 = isnan(0.0) ? _2001 : (isnan(_2001) ? 0.0 : max(_2001, 0.0));
        float _2005 = isnan(0.0) ? _2002 : (isnan(_2002) ? 0.0 : max(_2002, 0.0));
        float _2006 = isnan(0.0) ? _2003 : (isnan(_2003) ? 0.0 : max(_2003, 0.0));
        float _2008 = ((_1946.x + (-0.5)) * 0.5) * _1979;
        float _2010 = ((_1953.x + (-0.5)) * 0.5) * _1986;
        float _2012 = ((_1960.x + (-0.5)) * 0.5) * _1993;
        float _2013 = dot(vec3(_2008, _2010, _2012), vec3(_2008, _2010, _2012));
        float _2018 = (_2013 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2013);
        float _2026 = (dot(vec3(_1421, _1422, _1423), vec3(_2018 * _2008, _2018 * _2010, _2018 * _2012)) + 1.0) * 0.5;
        float _4432 = isnan(0.0) ? _2026 : (isnan(_2026) ? 0.0 : max(_2026, 0.0));
        float _2035 = sqrt(((_2010 * _2010) + (_2008 * _2008)) + (_2012 * _2012)) / (_2004 + 9.9999997473787516355514526367188e-06);
        float _4443 = isnan(0.0) ? _2035 : (isnan(_2035) ? 0.0 : max(_2035, 0.0));
        float _2036 = isnan(1.0) ? _4443 : (isnan(_4443) ? 1.0 : min(_4443, 1.0));
        float _2037 = _2036 * 2.0;
        float _2041 = (1.0 - _2036) / (_2036 + 1.0);
        float _4454 = isnan(0.0) ? _2041 : (isnan(_2041) ? 0.0 : max(_2041, 0.0));
        float _2042 = isnan(1.0) ? _4454 : (isnan(_4454) ? 1.0 : min(_4454, 1.0));
        float _2051 = ((((1.0 - _2042) * (_2037 + 2.0)) * exp2(log2(isnan(1.0) ? _4432 : (isnan(_4432) ? 1.0 : min(_4432, 1.0))) * (_2037 + 1.0))) + _2042) * _2004;
        float _2053 = ((_1946.y + (-0.5)) * 0.5) * _1979;
        float _2055 = ((_1953.y + (-0.5)) * 0.5) * _1986;
        float _2057 = ((_1960.y + (-0.5)) * 0.5) * _1993;
        float _2058 = dot(vec3(_2053, _2055, _2057), vec3(_2053, _2055, _2057));
        float _2063 = (_2058 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2058);
        float _2071 = (dot(vec3(_1421, _1422, _1423), vec3(_2063 * _2053, _2063 * _2055, _2063 * _2057)) + 1.0) * 0.5;
        float _4465 = isnan(0.0) ? _2071 : (isnan(_2071) ? 0.0 : max(_2071, 0.0));
        float _2080 = sqrt(((_2055 * _2055) + (_2053 * _2053)) + (_2057 * _2057)) / (_2005 + 9.9999997473787516355514526367188e-06);
        float _4476 = isnan(0.0) ? _2080 : (isnan(_2080) ? 0.0 : max(_2080, 0.0));
        float _2081 = isnan(1.0) ? _4476 : (isnan(_4476) ? 1.0 : min(_4476, 1.0));
        float _2082 = _2081 * 2.0;
        float _2086 = (1.0 - _2081) / (_2081 + 1.0);
        float _4487 = isnan(0.0) ? _2086 : (isnan(_2086) ? 0.0 : max(_2086, 0.0));
        float _2087 = isnan(1.0) ? _4487 : (isnan(_4487) ? 1.0 : min(_4487, 1.0));
        float _2096 = ((((1.0 - _2087) * (_2082 + 2.0)) * exp2(log2(isnan(1.0) ? _4465 : (isnan(_4465) ? 1.0 : min(_4465, 1.0))) * (_2082 + 1.0))) + _2087) * _2005;
        float _2098 = ((_1946.z + (-0.5)) * 0.5) * _1979;
        float _2100 = ((_1953.z + (-0.5)) * 0.5) * _1986;
        float _2102 = ((_1960.z + (-0.5)) * 0.5) * _1993;
        float _2103 = dot(vec3(_2098, _2100, _2102), vec3(_2098, _2100, _2102));
        float _2108 = (_2103 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2103);
        float _2116 = (dot(vec3(_1421, _1422, _1423), vec3(_2108 * _2098, _2108 * _2100, _2108 * _2102)) + 1.0) * 0.5;
        float _4498 = isnan(0.0) ? _2116 : (isnan(_2116) ? 0.0 : max(_2116, 0.0));
        float _2125 = sqrt(((_2100 * _2100) + (_2098 * _2098)) + (_2102 * _2102)) / (_2006 + 9.9999997473787516355514526367188e-06);
        float _4509 = isnan(0.0) ? _2125 : (isnan(_2125) ? 0.0 : max(_2125, 0.0));
        float _2126 = isnan(1.0) ? _4509 : (isnan(_4509) ? 1.0 : min(_4509, 1.0));
        float _2127 = _2126 * 2.0;
        float _2131 = (1.0 - _2126) / (_2126 + 1.0);
        float _4520 = isnan(0.0) ? _2131 : (isnan(_2131) ? 0.0 : max(_2131, 0.0));
        float _2132 = isnan(1.0) ? _4520 : (isnan(_4520) ? 1.0 : min(_4520, 1.0));
        float _2141 = ((((1.0 - _2132) * (_2127 + 2.0)) * exp2(log2(isnan(1.0) ? _4498 : (isnan(_4498) ? 1.0 : min(_4498, 1.0))) * (_2127 + 1.0))) + _2132) * _2006;
        _2149 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2051 : (isnan(_2051) ? 0.0 : max(_2051, 0.0)));
        _2150 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2096 : (isnan(_2096) ? 0.0 : max(_2096, 0.0)));
        _2151 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2141 : (isnan(_2141) ? 0.0 : max(_2141, 0.0)));
    }
    else
    {
        _2149 = 0.0;
        _2150 = 0.0;
        _2151 = 0.0;
    }
    float _2161 = (cbModelParam._m0[1u].x * (_2149 - _1857)) + _1857;
    float _2162 = (cbModelParam._m0[1u].x * (_2150 - _1858)) + _1858;
    float _2163 = (cbModelParam._m0[1u].x * (_2151 - _1859)) + _1859;
    float _2184 = fma(_2163, cbSceneParam._m0[89u].z, fma(_2162, cbSceneParam._m0[89u].y, _2161 * cbSceneParam._m0[89u].x));
    float _2187 = fma(_2163, cbSceneParam._m0[90u].z, fma(_2162, cbSceneParam._m0[90u].y, _2161 * cbSceneParam._m0[90u].x));
    float _2190 = fma(_2163, cbSceneParam._m0[91u].z, fma(_2162, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2161));
    float _2194 = 0.959999978542327880859375 - _1497;
    float _2195 = _2194 * _1486;
    float _2226 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2230 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2234 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2238 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2239 = _2226 / _2238;
    float _2240 = _2230 / _2238;
    float _2241 = _2234 / _2238;
    float _2375;
    float _2376;
    float _2377;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2258 = ((uint(_2241 > cbSceneParam._m0[59u].y) + uint(_2241 > cbSceneParam._m0[59u].x)) + uint(_2241 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2259 = _2258 + 43u;
        uint _2267 = _2258 + 44u;
        uint _2274 = _2258 + 45u;
        uint _2282 = _2258 + 46u;
        float _2292 = fma(_2238, cbSceneParam._m0[_2259].w, fma(_2234, cbSceneParam._m0[_2259].z, fma(_2230, cbSceneParam._m0[_2259].y, _2226 * cbSceneParam._m0[_2259].x)));
        float _2296 = fma(_2238, cbSceneParam._m0[_2267].w, fma(_2234, cbSceneParam._m0[_2267].z, fma(_2230, cbSceneParam._m0[_2267].y, _2226 * cbSceneParam._m0[_2267].x)));
        float _2304 = fma(_2238, cbSceneParam._m0[_2282].w, fma(_2234, cbSceneParam._m0[_2282].z, fma(_2230, cbSceneParam._m0[_2282].y, _2226 * cbSceneParam._m0[_2282].x)));
        float _2308 = cbSceneParam._m0[33u].z * _2304;
        float _2310 = cbSceneParam._m0[33u].w * _2304;
        float _2313 = fma(_2238, cbSceneParam._m0[_2274].w, fma(_2234, cbSceneParam._m0[_2274].z, fma(_2230, cbSceneParam._m0[_2274].y, _2226 * cbSceneParam._m0[_2274].x))) / _2304;
        float _2361 = (cbSceneParam._m0[33u].x - sqrt(((_2240 * _2240) + (_2239 * _2239)) + (_2241 * _2241))) * cbSceneParam._m0[33u].y;
        float _4561 = isnan(0.0) ? _2361 : (isnan(_2361) ? 0.0 : max(_2361, 0.0));
        float _2368 = (isnan(1.0) ? _4561 : (isnan(_4561) ? 1.0 : min(_4561, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2308 + _2292) / _2304, (_2310 + _2296) / _2304), _2313), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2310 + _2292) / _2304, (_2296 - _2308) / _2304), _2313), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2292 - _2308) / _2304, (_2296 - _2310) / _2304), _2313), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2292 - _2310) / _2304, (_2308 + _2296) / _2304), _2313), 0.0)).x), vec4(0.25)));
        _2375 = 1.0 - (_2368 * cbSceneParam._m0[34u].x);
        _2376 = 1.0 - (_2368 * cbSceneParam._m0[34u].y);
        _2377 = 1.0 - (_2368 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2375 = 1.0;
        _2376 = 1.0;
        _2377 = 1.0;
    }
    float _2433;
    float _2435;
    float _2437;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2421 = fma(_2238, cbSceneParam._m0[63u].w, fma(_2234, cbSceneParam._m0[63u].z, fma(_2230, cbSceneParam._m0[63u].y, _2226 * cbSceneParam._m0[63u].x)));
        float _2422 = fma(_2238, cbSceneParam._m0[60u].w, fma(_2234, cbSceneParam._m0[60u].z, fma(_2230, cbSceneParam._m0[60u].y, _2226 * cbSceneParam._m0[60u].x))) / _2421;
        float _2423 = fma(_2238, cbSceneParam._m0[61u].w, fma(_2234, cbSceneParam._m0[61u].z, fma(_2230, cbSceneParam._m0[61u].y, _2226 * cbSceneParam._m0[61u].x))) / _2421;
        float frontier_phi_10_9_ladder;
        float frontier_phi_10_9_ladder_1;
        float frontier_phi_10_9_ladder_2;
        if ((((_2422 >= cbSceneParam._m0[64u].x) && (_2423 >= cbSceneParam._m0[64u].y)) && (_2422 <= cbSceneParam._m0[64u].z)) && (_2423 <= cbSceneParam._m0[64u].w))
        {
            float _2574 = fma(_2238, cbSceneParam._m0[62u].w, fma(_2234, cbSceneParam._m0[62u].z, fma(_2230, cbSceneParam._m0[62u].y, _2226 * cbSceneParam._m0[62u].x))) / _2421;
            float _2578 = isnan(cbSceneParam._m0[41u].w) ? _2574 : (isnan(_2574) ? cbSceneParam._m0[41u].w : max(_2574, cbSceneParam._m0[41u].w));
            float _2621 = (cbSceneParam._m0[33u].x - sqrt(((_2240 * _2240) + (_2239 * _2239)) + (_2241 * _2241))) * cbSceneParam._m0[33u].y;
            float _4577 = isnan(0.0) ? _2621 : (isnan(_2621) ? 0.0 : max(_2621, 0.0));
            float _2628 = (isnan(1.0) ? _4577 : (isnan(_4577) ? 1.0 : min(_4577, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2422, cbSceneParam._m0[33u].w + _2423), _2578), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2422, _2423 - cbSceneParam._m0[33u].z), _2578), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2422 - cbSceneParam._m0[33u].z, _2423 - cbSceneParam._m0[33u].w), _2578), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2422 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2423), _2578), 0.0)).x), vec4(0.25)));
            float _2632 = 1.0 - (_2628 * cbSceneParam._m0[34u].x);
            float _2633 = 1.0 - (_2628 * cbSceneParam._m0[34u].y);
            float _2634 = 1.0 - (_2628 * cbSceneParam._m0[34u].z);
            frontier_phi_10_9_ladder = isnan(_2634) ? _2377 : (isnan(_2377) ? _2634 : min(_2377, _2634));
            frontier_phi_10_9_ladder_1 = isnan(_2633) ? _2376 : (isnan(_2376) ? _2633 : min(_2376, _2633));
            frontier_phi_10_9_ladder_2 = isnan(_2632) ? _2375 : (isnan(_2375) ? _2632 : min(_2375, _2632));
        }
        else
        {
            frontier_phi_10_9_ladder = _2377;
            frontier_phi_10_9_ladder_1 = _2376;
            frontier_phi_10_9_ladder_2 = _2375;
        }
        _2433 = frontier_phi_10_9_ladder_2;
        _2435 = frontier_phi_10_9_ladder_1;
        _2437 = frontier_phi_10_9_ladder;
    }
    else
    {
        _2433 = _2375;
        _2435 = _2376;
        _2437 = _2377;
    }
    uvec4 _2441 = floatBitsToUint(cbInstanceData._m0[_1244]);
    uint _2443 = _2441.x * 14u;
    float _2450 = (cbLight._m0[_2443 + 13u].x * (_1486 + (-1.0))) + 1.0;
    uint _2451 = _2443 + 4u;
    float _2460 = isnan(1.0) ? _2450 : (isnan(_2450) ? 1.0 : min(_2450, 1.0));
    float _2469 = dot(vec3(cbLight._m0[_2443].xyz), vec3(_1421, _1422, _1423));
    float _4608 = isnan(0.0) ? _2469 : (isnan(_2469) ? 0.0 : max(_2469, 0.0));
    float _2473 = (isnan(1.0) ? _4608 : (isnan(_4608) ? 1.0 : min(_4608, 1.0))) * 0.3183098733425140380859375;
    float _2475 = ((cbLight._m0[_2451].x * _2433) * _2460) * _2473;
    float _2476 = ((cbLight._m0[_2451].y * _2435) * _2460) * _2473;
    float _2477 = ((cbLight._m0[_2451].z * _2437) * _2460) * _2473;
    uint _2479 = _2443 + 8u;
    float _2492 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2443].w)) * _1307) * 0.949999988079071044921875);
    float _2493 = _2492 * _2492;
    float _2494 = cbLight._m0[_2443].x + _1378;
    float _2495 = cbLight._m0[_2443].y + _1379;
    float _2496 = cbLight._m0[_2443].z + _1380;
    float _2500 = inversesqrt(dot(vec3(_2494, _2495, _2496), vec3(_2494, _2495, _2496)));
    float _2501 = _2500 * _2494;
    float _2502 = _2500 * _2495;
    float _2503 = _2500 * _2496;
    float _2504 = dot(vec3(_1421, _1422, _1423), vec3(cbLight._m0[_2443].xyz));
    float _4619 = isnan(0.0) ? _2504 : (isnan(_2504) ? 0.0 : max(_2504, 0.0));
    float _2507 = isnan(1.0) ? _4619 : (isnan(_4619) ? 1.0 : min(_4619, 1.0));
    float _2508 = dot(vec3(_1421, _1422, _1423), vec3(_1378, _1379, _1380));
    float _4630 = isnan(0.0) ? _2508 : (isnan(_2508) ? 0.0 : max(_2508, 0.0));
    float _2511 = isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0));
    float _2512 = dot(vec3(_1421, _1422, _1423), vec3(_2501, _2502, _2503));
    float _4641 = isnan(0.0) ? _2512 : (isnan(_2512) ? 0.0 : max(_2512, 0.0));
    float _2515 = isnan(1.0) ? _4641 : (isnan(_4641) ? 1.0 : min(_4641, 1.0));
    float _2516 = dot(vec3(cbLight._m0[_2443].xyz), vec3(_2501, _2502, _2503));
    float _4652 = isnan(0.0) ? _2516 : (isnan(_2516) ? 0.0 : max(_2516, 0.0));
    float _2520 = _2493 * _2493;
    float _2524 = ((_2515 * _2515) * (_2520 + (-1.0))) + 1.0;
    float _2534 = (exp2(log2(1.0 - (isnan(1.0) ? _4652 : (isnan(_4652) ? 1.0 : min(_4652, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2535 = 1.0 - _2493;
    float _2546 = (0.5 / (((_2511 * ((_2507 * _2535) + _2493)) + 9.9999999392252902907785028219223e-09) + (((_2511 * _2535) + _2493) * _2507))) * _2507;
    float _4663 = isnan(0.0) ? _2546 : (isnan(_2546) ? 0.0 : max(_2546, 0.0));
    float _2548 = (isnan(1.0) ? _4663 : (isnan(_4663) ? 1.0 : min(_4663, 1.0))) * (_2520 / ((_2524 * _2524) * 3.141590118408203125));
    float _2552 = (((cbLight._m0[_2479].x * _2433) * _2534) * _2548) * _2460;
    float _2556 = (((cbLight._m0[_2479].y * _2435) * _2534) * _2548) * _2460;
    float _2560 = (((cbLight._m0[_2479].z * _2437) * _2534) * _2548) * _2460;
    float _2690;
    float _2692;
    float _2694;
    float _2696;
    float _2698;
    float _2700;
    if (_2441.y == 0u)
    {
        uvec4 _2646 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2647 = _2646.x;
        uint _2658 = uint((float(_2646.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1386) / _2647))) + floor(float(uint(cbSceneParam._m0[85u].x * _1385) / _2647)));
        float _2668 = (log2(_2241 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2669 = isnan(0.0) ? _2668 : (isnan(_2668) ? 0.0 : max(_2668, 0.0));
        uint _2672 = uint(isnan(14.0) ? _2669 : (isnan(_2669) ? 14.0 : min(_2669, 14.0)));
        uvec4 _2677 = texelFetch(g_lightClusterGridBuffer, int(((_2672 << 2u) + (_2658 << 6u)) >> 2u));
        uint _2678 = _2677.x;
        uint _2679 = _2646.z;
        float _2815;
        float _2817;
        float _2819;
        float _2821;
        float _2823;
        float _2825;
        if (((((1u << ((_2679 >> 4u) & 15u)) + 4294967295u) & _2678) == 0u) || ((_2679 & 240u) == 0u))
        {
            _2815 = 0.0;
            _2817 = 0.0;
            _2819 = 0.0;
            _2821 = 0.0;
            _2823 = 0.0;
            _2825 = 0.0;
        }
        else
        {
            float _2816;
            float _2818;
            float _2820;
            float _2822;
            float _2824;
            float _2826;
            float _3019 = 0.0;
            float _3020 = 0.0;
            float _3021 = 0.0;
            float _3022 = 0.0;
            float _3023 = 0.0;
            float _3024 = 0.0;
            uint _3025 = 0u;
            uint _3034;
            bool _3035;
            for (;;)
            {
                _3034 = texelFetch(g_lightClassification, int((((_2672 << 5u) + (_2658 << 9u)) + (_3025 << 2u)) >> 2u)).x;
                _3035 = _3034 == 0u;
                float frontier_phi_24_pred;
                float frontier_phi_24_pred_1;
                float frontier_phi_24_pred_2;
                float frontier_phi_24_pred_3;
                float frontier_phi_24_pred_4;
                float frontier_phi_24_pred_5;
                if (_3035)
                {
                    frontier_phi_24_pred = _3024;
                    frontier_phi_24_pred_1 = _3023;
                    frontier_phi_24_pred_2 = _3022;
                    frontier_phi_24_pred_3 = _3021;
                    frontier_phi_24_pred_4 = _3019;
                    frontier_phi_24_pred_5 = _3020;
                }
                else
                {
                    float _3228;
                    float _3229;
                    float _3230;
                    float _3231;
                    float _3232;
                    float _3233;
                    uint _3234;
                    _3228 = _3019;
                    _3229 = _3020;
                    _3230 = _3021;
                    _3231 = _3022;
                    _3232 = _3023;
                    _3233 = _3024;
                    _3234 = _3034;
                    float _3159;
                    float _3160;
                    float _3161;
                    float _3162;
                    float _3163;
                    float _3164;
                    for (;;)
                    {
                        uint _3238 = uint(findLSB(_3234)) + (_3025 << 5u);
                        uint _3235 = (_3234 + 4294967295u) & _3234;
                        uint _3240 = _3238 * 48u;
                        vec4 _3254 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3240)).x, texelFetch(g_PointLightRenderingBuffer, int(_3240 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3240 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3240 + 3u)).x));
                        uint _3260 = (_3238 * 48u) + 4u;
                        vec4 _3273 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3260)).x, texelFetch(g_PointLightRenderingBuffer, int(_3260 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3260 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3260 + 3u)).x));
                        uint _3279 = (_3238 * 48u) + 8u;
                        vec3 _3290 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3279)).x, texelFetch(g_PointLightRenderingBuffer, int(_3279 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3279 + 2u)).x));
                        float _3294 = _3254.x - _2239;
                        float _3295 = _3254.y - _2240;
                        float _3296 = _3254.z - _2241;
                        float _3297 = dot(vec3(_3294, _3295, _3296), vec3(_3294, _3295, _3296));
                        float _3300 = inversesqrt(_3297);
                        float _3301 = _3300 * _3294;
                        float _3302 = _3300 * _3295;
                        float _3303 = _3300 * _3296;
                        float _3304 = dot(vec3(_1443, _1446, _1449), vec3(_3301, _3302, _3303));
                        float _3309 = 1.0 - (_3297 * _3254.w);
                        float _4684 = isnan(0.0) ? _3309 : (isnan(_3309) ? 0.0 : max(_3309, 0.0));
                        float _3310 = isnan(1.0) ? _4684 : (isnan(_4684) ? 1.0 : min(_4684, 1.0));
                        float _3311 = sqrt(_3297) * _3273.w;
                        float _3314 = 1.39999997615814208984375 / (_3311 + 1.39999997615814208984375);
                        float _3315 = _3314 * _3314;
                        float _3318 = ((1.0 - _3315) * _3304) + _3315;
                        float _3321 = _3311 * _3311;
                        float _3325 = ((isnan(0.0) ? _3318 : (isnan(_3318) ? 0.0 : max(_3318, 0.0))) * _3310) / ((_3321 * 0.699999988079071044921875) + 1.0);
                        float _3329 = (-0.0) - _2239;
                        float _3330 = (-0.0) - _2240;
                        float _3331 = (-0.0) - _2241;
                        float _3335 = inversesqrt(dot(vec3(_3329, _3330, _3331), vec3(_3329, _3330, _3331)));
                        float _3336 = _3335 * _3329;
                        float _3337 = _3335 * _3330;
                        float _3338 = _3335 * _3331;
                        float _3345 = exp2(log2(1.0 / ((_3321 * 3.5) + 5.0)) * 0.25);
                        float _3347 = 1.0 - sqrt(_1307);
                        float _3354 = sqrt(1.0 - ((1.0 - (_3347 * _3347)) * (1.0 - (_3345 * _3345))));
                        float _3355 = _3354 * _3354;
                        float _3356 = _3355 * _3355;
                        float _3357 = _3336 + _3301;
                        float _3358 = _3337 + _3302;
                        float _3359 = _3338 + _3303;
                        float _3363 = inversesqrt(dot(vec3(_3357, _3358, _3359), vec3(_3357, _3358, _3359)));
                        float _3367 = dot(vec3(_1443, _1446, _1449), vec3(_3336, _3337, _3338));
                        float _4700 = isnan(0.0) ? _3367 : (isnan(_3367) ? 0.0 : max(_3367, 0.0));
                        float _3370 = isnan(1.0) ? _4700 : (isnan(_4700) ? 1.0 : min(_4700, 1.0));
                        float _3371 = dot(vec3(_1443, _1446, _1449), vec3(_3363 * _3357, _3363 * _3358, _3363 * _3359));
                        float _4711 = isnan(0.0) ? _3371 : (isnan(_3371) ? 0.0 : max(_3371, 0.0));
                        float _3374 = isnan(1.0) ? _4711 : (isnan(_4711) ? 1.0 : min(_4711, 1.0));
                        float _3378 = ((_3374 * _3374) * (_3356 + (-1.0))) + 1.0;
                        float _3379 = _3314 * _3355;
                        float _3380 = _3379 * _3379;
                        float _3383 = ((1.0 - _3380) * _3304) + _3380;
                        float _4722 = isnan(0.0) ? _3383 : (isnan(_3383) ? 0.0 : max(_3383, 0.0));
                        float _3384 = isnan(1.0) ? _4722 : (isnan(_4722) ? 1.0 : min(_4722, 1.0));
                        float _3385 = 1.0 - _3355;
                        float _3395 = (0.5 / (((_3384 * ((_3370 * _3385) + _3355)) + 9.9999999392252902907785028219223e-09) + (((_3384 * _3385) + _3355) * _3370))) * _3384;
                        float _4733 = isnan(0.0) ? _3395 : (isnan(_3395) ? 0.0 : max(_3395, 0.0));
                        float _3406 = (((_3356 * 3.1415927410125732421875) * (isnan(1.0) ? _4733 : (isnan(_4733) ? 1.0 : min(_4733, 1.0)))) / ((_3378 * _3378) * ((_3321 * 2.1991131305694580078125) + 3.141590118408203125))) * _3310;
                        _3162 = (_3325 * _3273.x) + _3231;
                        _3163 = (_3325 * _3273.y) + _3232;
                        _3164 = (_3325 * _3273.z) + _3233;
                        _3159 = (_3406 * _3290.x) + _3228;
                        _3160 = (_3406 * _3290.y) + _3229;
                        _3161 = (_3406 * _3290.z) + _3230;
                        if (_3235 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3228 = _3159;
                            _3229 = _3160;
                            _3230 = _3161;
                            _3231 = _3162;
                            _3232 = _3163;
                            _3233 = _3164;
                            _3234 = _3235;
                        }
                    }
                    frontier_phi_24_pred = _3164;
                    frontier_phi_24_pred_1 = _3163;
                    frontier_phi_24_pred_2 = _3162;
                    frontier_phi_24_pred_3 = _3161;
                    frontier_phi_24_pred_4 = _3159;
                    frontier_phi_24_pred_5 = _3160;
                }
                _2826 = frontier_phi_24_pred;
                _2824 = frontier_phi_24_pred_1;
                _2822 = frontier_phi_24_pred_2;
                _2820 = frontier_phi_24_pred_3;
                _2816 = frontier_phi_24_pred_4;
                _2818 = frontier_phi_24_pred_5;
                uint _3026 = _3025 + 1u;
                if (_3026 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3019 = _2816;
                    _3020 = _2818;
                    _3021 = _2820;
                    _3022 = _2822;
                    _3023 = _2824;
                    _3024 = _2826;
                    _3025 = _3026;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2815 = _2816;
            _2817 = _2818;
            _2819 = _2820;
            _2821 = _2822;
            _2823 = _2824;
            _2825 = _2826;
        }
        uvec4 _2829 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2830 = _2829.z;
        uint _2832 = (_2830 >> 8u) & 15u;
        float _2987;
        float _2989;
        float _2991;
        float _2993;
        float _2995;
        float _2997;
        if (((4294967295u << _2832) & _2678) == 0u)
        {
            _2987 = _2815;
            _2989 = _2817;
            _2991 = _2819;
            _2993 = _2821;
            _2995 = _2823;
            _2997 = _2825;
        }
        else
        {
            float _3012 = inversesqrt(dot(vec3(_2239, _2240, _2241), vec3(_2239, _2240, _2241)));
            float _3013 = _3012 * _2239;
            float _3014 = _3012 * _2240;
            float _3015 = _3012 * _2241;
            float frontier_phi_18_19_ladder;
            float frontier_phi_18_19_ladder_1;
            float frontier_phi_18_19_ladder_2;
            float frontier_phi_18_19_ladder_3;
            float frontier_phi_18_19_ladder_4;
            float frontier_phi_18_19_ladder_5;
            if (_2832 < ((_2830 >> 12u) & 15u))
            {
                float _2988;
                float _2990;
                float _2992;
                float _2994;
                float _2996;
                float _2998;
                float _3211 = _2815;
                float _3212 = _2817;
                float _3213 = _2819;
                float _3214 = _2821;
                float _3215 = _2823;
                float _3216 = _2825;
                uint _3217 = _2832;
                uint _3226;
                bool _3227;
                for (;;)
                {
                    _3226 = texelFetch(g_lightClassification, int((((_2672 << 5u) + (_2658 << 9u)) + (_3217 << 2u)) >> 2u)).x;
                    _3227 = _3226 == 0u;
                    float frontier_phi_32_pred;
                    float frontier_phi_32_pred_1;
                    float frontier_phi_32_pred_2;
                    float frontier_phi_32_pred_3;
                    float frontier_phi_32_pred_4;
                    float frontier_phi_32_pred_5;
                    if (_3227)
                    {
                        frontier_phi_32_pred = _3216;
                        frontier_phi_32_pred_1 = _3215;
                        frontier_phi_32_pred_2 = _3214;
                        frontier_phi_32_pred_3 = _3213;
                        frontier_phi_32_pred_4 = _3212;
                        frontier_phi_32_pred_5 = _3211;
                    }
                    else
                    {
                        float _3449;
                        float _3450;
                        float _3451;
                        float _3452;
                        float _3453;
                        float _3454;
                        float _3743;
                        float _3744;
                        float _3745;
                        float _3746;
                        float _3747;
                        float _3748;
                        float _3462 = _3211;
                        float _3463 = _3212;
                        float _3464 = _3213;
                        float _3465 = _3214;
                        float _3466 = _3215;
                        float _3467 = _3216;
                        uint _3468 = _3226;
                        uint _3469;
                        vec4 _3494;
                        float _3495;
                        vec4 _3510;
                        vec3 _3522;
                        vec4 _3537;
                        vec4 _3552;
                        float _3598;
                        bool _3599;
                        for (;;)
                        {
                            uint _3479 = ((_3217 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3468));
                            _3469 = (_3468 + 4294967295u) & _3468;
                            uint _3481 = _3479 * 40u;
                            _3494 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3481)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3481 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3481 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3481 + 3u)).x));
                            _3495 = _3494.w;
                            uint _3497 = (_3479 * 40u) + 4u;
                            _3510 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3497)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3497 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3497 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3497 + 3u)).x));
                            uint _3512 = (_3479 * 40u) + 8u;
                            _3522 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3512)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3512 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3512 + 2u)).x));
                            uint _3524 = (_3479 * 40u) + 16u;
                            _3537 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3524)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3524 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3524 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3524 + 3u)).x));
                            uint _3539 = (_3479 * 40u) + 20u;
                            _3552 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3539)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3539 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3539 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3539 + 3u)).x));
                            uint _3554 = (_3479 * 40u) + 24u;
                            vec4 _3567 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3554)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 3u)).x));
                            uint _3573 = (_3479 * 40u) + 28u;
                            vec4 _3586 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3573)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3573 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3573 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3573 + 3u)).x));
                            _3598 = fma(_2241, _3586.z, fma(_2240, _3586.y, _3586.x * _2239)) + _3586.w;
                            _3599 = !((fma(_2241, _3567.z, fma(_2240, _3567.y, _3567.x * _2239)) + _3567.w) <= 0.0);
                            float frontier_phi_38_pred;
                            float frontier_phi_38_pred_1;
                            float frontier_phi_38_pred_2;
                            float frontier_phi_38_pred_3;
                            float frontier_phi_38_pred_4;
                            float frontier_phi_38_pred_5;
                            if (_3599)
                            {
                                float _3626 = _3494.x - _2239;
                                float _3627 = _3494.y - _2240;
                                float _3628 = _3494.z - _2241;
                                float _3629 = dot(vec3(_3626, _3627, _3628), vec3(_3626, _3627, _3628));
                                float _3632 = inversesqrt(_3629);
                                float _3633 = _3632 * _3626;
                                float _3634 = _3632 * _3627;
                                float _3635 = _3632 * _3628;
                                float _3639 = 1.0 - (_3629 / (_3495 * _3495));
                                float _4744 = isnan(0.0) ? _3639 : (isnan(_3639) ? 0.0 : max(_3639, 0.0));
                                float _3640 = isnan(1.0) ? _4744 : (isnan(_4744) ? 1.0 : min(_4744, 1.0));
                                float _3644 = sqrt(_3629) * _3510.w;
                                float _3646 = 1.39999997615814208984375 / (_3644 + 1.39999997615814208984375);
                                float _3647 = _3646 * _3646;
                                float _3650 = ((1.0 - _3647) * dot(vec3(_3633, _3634, _3635), vec3(_1443, _1446, _1449))) + _3647;
                                float _3653 = _3644 * _3644;
                                float _3657 = (fma(_2241, _3537.z, fma(_2240, _3537.y, _3537.x * _2239)) + _3537.w) / _3598;
                                float _3658 = (fma(_2241, _3552.z, fma(_2240, _3552.y, _3552.x * _2239)) + _3552.w) / _3598;
                                float _3662 = 1.0 - dot(vec2(_3657, _3658), vec2(_3657, _3658));
                                float _4760 = isnan(0.0) ? _3662 : (isnan(_3662) ? 0.0 : max(_3662, 0.0));
                                float _3663 = isnan(1.0) ? _4760 : (isnan(_4760) ? 1.0 : min(_4760, 1.0));
                                float _3664 = _3663 * (((isnan(0.0) ? _3650 : (isnan(_3650) ? 0.0 : max(_3650, 0.0))) * _3640) / ((_3653 * 0.699999988079071044921875) + 1.0));
                                float _3676 = exp2(log2(1.0 / ((_3653 * 3.5) + 5.0)) * 0.25);
                                float _3678 = 1.0 - sqrt(_1307);
                                float _3685 = sqrt(1.0 - ((1.0 - (_3678 * _3678)) * (1.0 - (_3676 * _3676))));
                                float _3686 = _3685 * _3685;
                                float _3687 = _3686 * _3686;
                                float _3688 = _3633 - _3013;
                                float _3689 = _3634 - _3014;
                                float _3690 = _3635 - _3015;
                                float _3694 = inversesqrt(dot(vec3(_3688, _3689, _3690), vec3(_3688, _3689, _3690)));
                                float _3698 = dot(vec3(_1443, _1446, _1449), vec3((-0.0) - _3013, (-0.0) - _3014, (-0.0) - _3015));
                                float _4771 = isnan(0.0) ? _3698 : (isnan(_3698) ? 0.0 : max(_3698, 0.0));
                                float _3701 = isnan(1.0) ? _4771 : (isnan(_4771) ? 1.0 : min(_4771, 1.0));
                                float _3702 = dot(vec3(_1443, _1446, _1449), vec3(_3694 * _3688, _3694 * _3689, _3694 * _3690));
                                float _4782 = isnan(0.0) ? _3702 : (isnan(_3702) ? 0.0 : max(_3702, 0.0));
                                float _3705 = isnan(1.0) ? _4782 : (isnan(_4782) ? 1.0 : min(_4782, 1.0));
                                float _3709 = ((_3705 * _3705) * (_3687 + (-1.0))) + 1.0;
                                float _3710 = _3646 * _3686;
                                float _3711 = _3710 * _3710;
                                float _3717 = ((1.0 - _3711) * dot(vec3(_1443, _1446, _1449), vec3(_3633, _3634, _3635))) + _3711;
                                float _4793 = isnan(0.0) ? _3717 : (isnan(_3717) ? 0.0 : max(_3717, 0.0));
                                float _3718 = isnan(1.0) ? _4793 : (isnan(_4793) ? 1.0 : min(_4793, 1.0));
                                float _3719 = 1.0 - _3686;
                                float _3729 = (0.5 / (((_3718 * ((_3701 * _3719) + _3686)) + 9.9999999392252902907785028219223e-09) + (((_3718 * _3719) + _3686) * _3701))) * _3718;
                                float _4804 = isnan(0.0) ? _3729 : (isnan(_3729) ? 0.0 : max(_3729, 0.0));
                                float _3739 = (_3663 * _3640) * (((_3687 * 3.1415927410125732421875) * (isnan(1.0) ? _4804 : (isnan(_4804) ? 1.0 : min(_4804, 1.0)))) / ((_3709 * _3709) * ((_3653 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_38_pred = _3664 * _3510.z;
                                frontier_phi_38_pred_1 = _3664 * _3510.y;
                                frontier_phi_38_pred_2 = _3664 * _3510.x;
                                frontier_phi_38_pred_3 = _3739 * _3522.z;
                                frontier_phi_38_pred_4 = _3739 * _3522.y;
                                frontier_phi_38_pred_5 = _3739 * _3522.x;
                            }
                            else
                            {
                                frontier_phi_38_pred = 0.0;
                                frontier_phi_38_pred_1 = 0.0;
                                frontier_phi_38_pred_2 = 0.0;
                                frontier_phi_38_pred_3 = 0.0;
                                frontier_phi_38_pred_4 = 0.0;
                                frontier_phi_38_pred_5 = 0.0;
                            }
                            _3748 = frontier_phi_38_pred;
                            _3747 = frontier_phi_38_pred_1;
                            _3746 = frontier_phi_38_pred_2;
                            _3745 = frontier_phi_38_pred_3;
                            _3744 = frontier_phi_38_pred_4;
                            _3743 = frontier_phi_38_pred_5;
                            _3452 = _3746 + _3465;
                            _3453 = _3747 + _3466;
                            _3454 = _3748 + _3467;
                            _3449 = _3743 + _3462;
                            _3450 = _3744 + _3463;
                            _3451 = _3745 + _3464;
                            if (_3469 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3462 = _3449;
                                _3463 = _3450;
                                _3464 = _3451;
                                _3465 = _3452;
                                _3466 = _3453;
                                _3467 = _3454;
                                _3468 = _3469;
                                continue;
                            }
                        }
                        frontier_phi_32_pred = _3454;
                        frontier_phi_32_pred_1 = _3453;
                        frontier_phi_32_pred_2 = _3452;
                        frontier_phi_32_pred_3 = _3451;
                        frontier_phi_32_pred_4 = _3450;
                        frontier_phi_32_pred_5 = _3449;
                    }
                    _2998 = frontier_phi_32_pred;
                    _2996 = frontier_phi_32_pred_1;
                    _2994 = frontier_phi_32_pred_2;
                    _2992 = frontier_phi_32_pred_3;
                    _2990 = frontier_phi_32_pred_4;
                    _2988 = frontier_phi_32_pred_5;
                    uint _3218 = _3217 + 1u;
                    if (_3218 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3211 = _2988;
                        _3212 = _2990;
                        _3213 = _2992;
                        _3214 = _2994;
                        _3215 = _2996;
                        _3216 = _2998;
                        _3217 = _3218;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_18_19_ladder = _2998;
                frontier_phi_18_19_ladder_1 = _2996;
                frontier_phi_18_19_ladder_2 = _2990;
                frontier_phi_18_19_ladder_3 = _2988;
                frontier_phi_18_19_ladder_4 = _2992;
                frontier_phi_18_19_ladder_5 = _2994;
            }
            else
            {
                frontier_phi_18_19_ladder = _2825;
                frontier_phi_18_19_ladder_1 = _2823;
                frontier_phi_18_19_ladder_2 = _2817;
                frontier_phi_18_19_ladder_3 = _2815;
                frontier_phi_18_19_ladder_4 = _2819;
                frontier_phi_18_19_ladder_5 = _2821;
            }
            _2987 = frontier_phi_18_19_ladder_3;
            _2989 = frontier_phi_18_19_ladder_2;
            _2991 = frontier_phi_18_19_ladder_4;
            _2993 = frontier_phi_18_19_ladder_5;
            _2995 = frontier_phi_18_19_ladder_1;
            _2997 = frontier_phi_18_19_ladder;
        }
        float _3002 = isnan(1.0) ? _1486 : (isnan(_1486) ? 1.0 : min(_1486, 1.0));
        _2690 = (_3002 * _2993) + _2475;
        _2692 = (_3002 * _2995) + _2476;
        _2694 = (_3002 * _2997) + _2477;
        _2696 = ((_2987 * 0.039999999105930328369140625) * _3002) + _2552;
        _2698 = ((_2989 * 0.039999999105930328369140625) * _3002) + _2556;
        _2700 = ((_2991 * 0.039999999105930328369140625) * _3002) + _2560;
    }
    else
    {
        _2690 = _2475;
        _2692 = _2476;
        _2694 = _2477;
        _2696 = _2552;
        _2698 = _2556;
        _2700 = _2560;
    }
    float _2720 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2721 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2722 = cbSceneParam._m0[86u].x * ((_1385 / cbSceneParam._m0[86u].x) + ((_1502 * cbMtdParam._m0[12u].y) * dot(vec3(_1421, _1422, _1423), vec3(_226, _227, _228))));
    float _2723 = isnan(_2720) ? _2722 : (isnan(_2722) ? _2720 : min(_2722, _2720));
    float _2724 = isnan(_2721) ? _1386 : (isnan(_1386) ? _2721 : min(_1386, _2721));
    vec4 _2726 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2723, _2724), 0.0);
    float _2728 = _2726.x;
    bool _2748 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2728)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2728))) > _1322;
    float _2749 = _2748 ? _2723 : _1385;
    float _2750 = _2748 ? _2724 : _1386;
    vec4 _2752 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2749, _2750));
    vec4 _2757 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2749, _2750));
    float _2759 = _2757.x;
    bool _2764 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _2773 = (-0.0) - cbSceneParam._m0[2u].z;
    float _2779 = (_2764 ? (_2773 / (cbSceneParam._m0[2u].x - _2759)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2759))) - _1322;
    float _2781 = cbMtdParam._m0[42u].y + cbMtdParam._m0[36u].y;
    float _2782 = cbMtdParam._m0[42u].z + cbMtdParam._m0[36u].z;
    float _2783 = cbMtdParam._m0[42u].w + cbMtdParam._m0[36u].w;
    bool _2789 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _2793 = (isnan(_2779) ? 0.0 : (isnan(0.0) ? _2779 : max(0.0, _2779))) * (-1.44269502162933349609375);
    float _4835 = isnan(0.0) ? _1472 : (isnan(_1472) ? 0.0 : max(_1472, 0.0));
    float _4846 = isnan(0.0) ? _1473 : (isnan(_1473) ? 0.0 : max(_1473, 0.0));
    float _4857 = isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0));
    float _2916;
    float _2917;
    float _2918;
    if ((1.0 - _1229) > 0.00999999977648258209228515625)
    {
        vec4 _2837 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2749, _2750), 0.0);
        float _2839 = _2837.x;
        float _2845 = (_2764 ? (_2773 / (cbSceneParam._m0[2u].x - _2839)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2839))) - _1322;
        uint _2851 = floatBitsToUint(cbInstanceData._m0[_1244]).x * 14u;
        uint _2857 = _2851 + 4u;
        float _2866 = dot(vec3(cbLight._m0[_2851].xyz), vec3(_247, _248, _249));
        float _2873 = dot(vec3((-0.0) - _1378, (-0.0) - _1379, (-0.0) - _1380), vec3((-0.0) - _247, (-0.0) - _248, (-0.0) - _249));
        float _2878 = ((isnan(0.0) ? _2873 : (isnan(_2873) ? 0.0 : max(_2873, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _2866 : (isnan(_2866) ? 0.001000000047497451305389404296875 : max(_2866, 0.001000000047497451305389404296875)))) + 1.0;
        float _2880 = (-0.0) - ((isnan(_2845) ? 0.0 : (isnan(0.0) ? _2845 : max(0.0, _2845))) * _2878);
        _2916 = _2789 ? 0.0 : ((((_1288 * cbMtdParam._m0[36u].y) * cbLight._m0[_2857].x) / ((_2878 * _2781) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2781 * 1.44269502162933349609375) * _2880)));
        _2917 = _2789 ? 0.0 : ((((_1288 * cbMtdParam._m0[36u].z) * cbLight._m0[_2857].y) / ((_2878 * _2782) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2782 * 1.44269502162933349609375) * _2880)));
        _2918 = _2789 ? 0.0 : ((((_1288 * cbMtdParam._m0[36u].w) * cbLight._m0[_2857].z) / ((_2878 * _2783) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2783 * 1.44269502162933349609375) * _2880)));
    }
    else
    {
        _2916 = 0.0;
        _2917 = 0.0;
        _2918 = 0.0;
    }
    float _2934 = (_2916 + ((exp2(_2793 * (_2789 ? 0.0 : _2781)) * _2752.x) * cbSceneParam._m0[72u].w)) * _2194;
    float _2935 = (_2917 + ((exp2(_2793 * (_2789 ? 0.0 : _2782)) * _2752.y) * cbSceneParam._m0[72u].w)) * _2194;
    float _2936 = (_2918 + ((exp2(_2793 * (_2789 ? 0.0 : _2783)) * _2752.z) * cbSceneParam._m0[72u].w)) * _2194;
    float _2958 = _1385 / cbSceneParam._m0[86u].x;
    float _2959 = _1386 / cbSceneParam._m0[86u].y;
    vec4 _2973 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2958, _2959, (log2((isnan(cbSceneParam._m0[77u].w) ? _1322 : (isnan(_1322) ? cbSceneParam._m0[77u].w : min(_1322, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2975 = _2973.x;
    float _2976 = _2973.y;
    float _2977 = _2973.z;
    float _2978 = _2973.w;
    float _3076;
    float _3078;
    float _3080;
    float _3082;
    if (_1322 > cbSceneParam._m0[78u].w)
    {
        float _3040 = isnan(_1322) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1322 : min(cbSceneParam._m0[80u].w, _1322));
        float _3041 = _3040 / _1322;
        float _3052 = _3041 * _1371;
        float _3053 = _1372 * _3041;
        float _3054 = (-0.0) - _3053;
        float _3055 = _3041 * _1373;
        float _3057 = (cbSceneParam._m0[77u].w * _3054) / _3040;
        float _3058 = _3057 + cbSceneParam._m0[79u].w;
        float _3059 = cbSceneParam._m0[79u].w - _3053;
        float _3065 = sqrt(((_3052 * _3052) + (_3053 * _3053)) + (_3055 * _3055));
        float _3068 = (1.0 - (cbSceneParam._m0[77u].w / _3040)) * _3065;
        float _3074 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3075 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3411;
        if (abs((_3054 - _3057) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3411 = ((((_3058 > 0.0) ? exp2(_3074 * _3058) : (2.0 - exp2(_3075 * _3058))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3068;
        }
        else
        {
            float _3184 = 1.0 / cbSceneParam._m0[80u].x;
            float _3185 = isnan(_3059) ? _3058 : (isnan(_3058) ? _3059 : max(_3058, _3059));
            float _3186 = isnan(_3059) ? _3058 : (isnan(_3058) ? _3059 : min(_3058, _3059));
            float _3195 = isnan(0.0) ? _3185 : (isnan(_3185) ? 0.0 : min(_3185, 0.0));
            float _3196 = isnan(0.0) ? _3186 : (isnan(_3186) ? 0.0 : min(_3186, 0.0));
            _3411 = ((abs(_3065 / _3054) * cbSceneParam._m0[80u].y) * ((((_3195 - _3196) * 2.0) - ((exp2(_3074 * (isnan(0.0) ? _3185 : (isnan(_3185) ? 0.0 : max(_3185, 0.0)))) - exp2(_3074 * (isnan(0.0) ? _3186 : (isnan(_3186) ? 0.0 : max(_3186, 0.0))))) * _3184)) - ((exp2(_3075 * _3195) - exp2(_3075 * _3196)) * _3184))) + (_3068 * cbSceneParam._m0[80u].z);
        }
        vec4 _3413 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2958, _2959, 1.0), 0.0);
        float _3422 = exp2((_3411 * (-1.44269502162933349609375)) * (1.0 - _3413.w));
        float _3423 = log2(_3422);
        float _3439 = log2(_2978);
        _3076 = (exp2(_3439 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3423 * cbSceneParam._m0[78u].x)) * _3413.x) / cbSceneParam._m0[78u].x)) + _2975;
        _3078 = (exp2(_3439 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3423 * cbSceneParam._m0[78u].y)) * _3413.y) / cbSceneParam._m0[78u].y)) + _2976;
        _3080 = (exp2(_3439 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3423 * cbSceneParam._m0[78u].z)) * _3413.z) / cbSceneParam._m0[78u].z)) + _2977;
        _3082 = _3422 * _2978;
    }
    else
    {
        _3076 = _2975;
        _3078 = _2976;
        _3080 = _2977;
        _3082 = _2978;
    }
    bool _3094 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _3096 = log2(_3082);
    float _3103 = exp2(_3096 * cbSceneParam._m0[78u].x) * ((_2934 + ((_2696 + ((_1517.x * _1498) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4835 : (isnan(_4835) ? 1.0 : min(_4835, 1.0))) * (_2690 + (_2195 * (isnan(0.0) ? _2184 : (isnan(_2184) ? 0.0 : max(_2184, 0.0)))))) - _2934) * _1229));
    float _3104 = exp2(_3096 * cbSceneParam._m0[78u].y) * ((_2935 + ((_2698 + ((_1517.y * _1498) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4846 : (isnan(_4846) ? 1.0 : min(_4846, 1.0))) * (_2692 + (_2195 * (isnan(0.0) ? _2187 : (isnan(_2187) ? 0.0 : max(_2187, 0.0)))))) - _2935) * _1229));
    float _3105 = exp2(_3096 * cbSceneParam._m0[78u].z) * ((_2936 + ((_2700 + ((_1517.z * _1498) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4857 : (isnan(_4857) ? 1.0 : min(_4857, 1.0))) * (_2694 + (_2195 * (isnan(0.0) ? _2190 : (isnan(_2190) ? 0.0 : max(_2190, 0.0)))))) - _2936) * _1229));
    vec4 _3113 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1385, _1386));
    float _3115 = _3113.x;
    float _3136 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _3115)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3115))) - _1322) * cbMtdParam._m0[14u].w;
    float _4923 = isnan(0.0) ? _3136 : (isnan(_3136) ? 0.0 : max(_3136, 0.0));
    float _3138 = (cbInstanceData._m0[_1243 + 6u].w * (isnan(1.0) ? _4189 : (isnan(_4189) ? 1.0 : min(_4189, 1.0)))) * (isnan(1.0) ? _4923 : (isnan(_4923) ? 1.0 : min(_4923, 1.0)));
    float _3147 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3147 * (_3094 ? _3103 : (_3103 + (cbSceneParam._m0[72u].w * _3076)));
    SV_Target.y = _3147 * (_3094 ? _3104 : (_3104 + (cbSceneParam._m0[72u].w * _3078)));
    SV_Target.z = _3147 * (_3094 ? _3105 : (_3105 + (cbSceneParam._m0[72u].w * _3080)));
    SV_Target.w = _3138;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3138;
}


