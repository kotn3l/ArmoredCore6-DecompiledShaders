#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[46];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 54) uniform texture2D g_ReflectionTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 57) uniform texture2D g_WaterSimulationNormalTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_PlanarReflection_m35_snp_0_Texture2D_5;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in vec4 TEXCOORD_8;
layout(location = 7) in float TEXCOORD_11;
layout(location = 7, component = 1) in float TEXCOORD_12;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _215 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _216 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _217 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _223 = inversesqrt(dot(vec3(_215, _216, _217), vec3(_215, _216, _217)));
    float _224 = _223 * _215;
    float _225 = _223 * _216;
    float _226 = _223 * _217;
    float _230 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _231 = _230 * NORMAL.x;
    float _232 = _230 * NORMAL.y;
    float _233 = _230 * NORMAL.z;
    float _237 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _245;
    float _246;
    float _247;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _245 = (-0.0) - _231;
        _246 = (-0.0) - _232;
        _247 = (-0.0) - _233;
    }
    else
    {
        _245 = _231;
        _246 = _232;
        _247 = _233;
    }
    float _293 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _303 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _293);
    float _304 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _293);
    float _305 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _293);
    float _320 = cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x;
    vec4 _337 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_2, SS_BumpMap), vec2((((_320 * cbMtdParam._m0[27u].y) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_320 * cbMtdParam._m0[27u].z) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _340 = _337.x;
    float _341 = _337.y;
    float _342 = _337.z;
    float _343 = _337.w;
    float _356 = cbMtdParam._m0[14u].y - cbMtdParam._m0[14u].x;
    float _359 = (sqrt(((_303 * _303) + (_304 * _304)) + (_305 * _305)) - cbMtdParam._m0[14u].x) / (isnan(0.001000000047497451305389404296875) ? _356 : (isnan(_356) ? 0.001000000047497451305389404296875 : max(_356, 0.001000000047497451305389404296875)));
    float _360 = _359 + 0.180000007152557373046875;
    float _362 = _360 * 12.0;
    float _3573 = isnan(0.0) ? _362 : (isnan(_362) ? 0.0 : max(_362, 0.0));
    float _365 = isnan(1.0) ? _3573 : (isnan(_3573) ? 1.0 : min(_3573, 1.0));
    vec4 _377 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _379 = _377.x;
    float _401 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _379)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _379))) - POSITION_1.w;
    float _402 = _401 / ((_365 * 0.0599999986588954925537109375) + 0.0599999986588954925537109375);
    float _3584 = isnan(0.0) ? _402 : (isnan(_402) ? 0.0 : max(_402, 0.0));
    float _403 = isnan(1.0) ? _3584 : (isnan(_3584) ? 1.0 : min(_3584, 1.0));
    float _404 = isnan(0.5) ? _403 : (isnan(_403) ? 0.5 : max(_403, 0.5));
    float _406 = 1.0 - _404;
    float _407 = _360 * 7.0;
    float _3600 = isnan(0.0) ? _407 : (isnan(_407) ? 0.0 : max(_407, 0.0));
    float _409 = isnan(1.0) ? _3600 : (isnan(_3600) ? 1.0 : min(_3600, 1.0));
    float _422 = (_342 * 0.00200000009499490261077880859375) + TEXCOORD.x;
    float _423 = (_342 * 0.00999999977648258209228515625) + TEXCOORD.y;
    vec4 _437 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[25u].w * _320) + _422) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[26u].x * _320) + _423) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _439 = _437.x;
    float _464 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[23u].w * _422) + (cbMtdParam._m0[26u].w * _320)) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[24u].x * _423) + (cbMtdParam._m0[27u].x * _320)) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x + (-0.0500000007450580596923828125);
    float _467 = (isnan(_464) ? _439 : (isnan(_439) ? _464 : max(_439, _464))) - _409;
    float _3616 = isnan(0.0) ? _467 : (isnan(_467) ? 0.0 : max(_467, 0.0));
    float _468 = isnan(1.0) ? _3616 : (isnan(_3616) ? 1.0 : min(_3616, 1.0));
    float _469 = _409 + 0.5;
    float _3627 = isnan(0.0) ? _469 : (isnan(_469) ? 0.0 : max(_469, 0.0));
    float _480 = cbMtdParam._m0[16u].w * _320;
    float _481 = cos(_480);
    float _482 = sin(_480);
    vec4 _506 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((((_482 * cbMtdParam._m0[31u].y) + TEXCOORD.x) + (cbMtdParam._m0[22u].y * _320)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((_481 * cbMtdParam._m0[31u].z) + TEXCOORD.y) + (cbMtdParam._m0[22u].z * _320)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _510 = _506.z;
    vec4 _525 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[21u].w * _320) + TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[22u].x * _320) + TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _529 = _525.z;
    float _532 = (isnan(_529) ? _510 : (isnan(_510) ? _529 : max(_510, _529))) * (isnan(1.0) ? _3627 : (isnan(_3627) ? 1.0 : min(_3627, 1.0)));
    float _3643 = isnan(0.0) ? _532 : (isnan(_532) ? 0.0 : max(_532, 0.0));
    float _533 = isnan(1.0) ? _3643 : (isnan(_3643) ? 1.0 : min(_3643, 1.0));
    float _536 = (_406 - _343) + (isnan(_533) ? _468 : (isnan(_468) ? _533 : max(_468, _533)));
    float _3659 = isnan(0.0) ? _536 : (isnan(_536) ? 0.0 : max(_536, 0.0));
    float _537 = isnan(1.0) ? _3659 : (isnan(_3659) ? 1.0 : min(_3659, 1.0));
    float _538 = _537 * _404;
    float _3670 = isnan(0.0) ? _359 : (isnan(_359) ? 0.0 : max(_359, 0.0));
    float _547 = isnan(1.0) ? _3670 : (isnan(_3670) ? 1.0 : min(_3670, 1.0));
    float _548 = _342 - _547;
    float _3681 = isnan(0.0) ? _548 : (isnan(_548) ? 0.0 : max(_548, 0.0));
    float _549 = isnan(1.0) ? _3681 : (isnan(_3681) ? 1.0 : min(_3681, 1.0));
    vec4 _605 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[23u].y * _320) + (cbMtdParam._m0[30u].w * _482)) + (cbMtdParam._m0[34u].w * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[23u].z * _320) + (cbMtdParam._m0[31u].x * _481)) + (cbMtdParam._m0[35u].x * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _632 = cbMtdParam._m0[38u].x * TEXCOORD_5.x;
    float _691 = ((((((_605.w + (-0.5)) * cbMtdParam._m0[44u].x) + (cbMtdParam._m0[39u].z * (_506.w + (-0.5)))) + (cbMtdParam._m0[40u].y * (_525.w + (-0.5)))) + (((_632 + cbMtdParam._m0[41u].w) * cos(cbMtdParam._m0[13u].y * _320)) * (texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[32u].w * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[33u].x * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) + ((sin(cbMtdParam._m0[13u].x * _320) * (cbMtdParam._m0[41u].x + _632)) * (texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[31u].w * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[32u].x * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) * (1.0 - TEXCOORD_5.y);
    float _718 = 1.0 - _343;
    float _723 = ((isnan(0.550000011920928955078125) ? _718 : (isnan(_718) ? 0.550000011920928955078125 : max(_718, 0.550000011920928955078125))) + (-0.550000011920928955078125)) * cbMtdParam._m0[16u].z;
    float _726 = ((TEXCOORD_5.y * (-0.5)) * _723) + _723;
    float _730 = ((TEXCOORD_5.z * (-0.699999988079071044921875)) * _726) + _726;
    float _740 = (((_691 + ((cbMtdParam._m0[37u].y - (cbMtdParam._m0[37u].y * TEXCOORD_5.y)) * _342)) + ((texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[35u].w * TEXCOORD.x) + (cbMtdParam._m0[22u].w * _320)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[36u].x * TEXCOORD.y) + (cbMtdParam._m0[23u].x * _320)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).w + (-0.5)) * cbMtdParam._m0[44u].w)) + ((sin(cbMtdParam._m0[21u].y * _320) * cbMtdParam._m0[38u].w) * (isnan(0.300000011920928955078125) ? TEXCOORD_5.z : (isnan(TEXCOORD_5.z) ? 0.300000011920928955078125 : max(TEXCOORD_5.z, 0.300000011920928955078125))))) + _730;
    float _743 = (_740 + cbMtdParam._m0[20u].z) * cbMtdParam._m0[20u].w;
    float _3702 = isnan(0.0) ? _743 : (isnan(_743) ? 0.0 : max(_743, 0.0));
    float _744 = isnan(1.0) ? _3702 : (isnan(_3702) ? 1.0 : min(_3702, 1.0));
    float _756 = inversesqrt(dot(vec3(_303, _304, _305), vec3(_303, _304, _305)));
    float _760 = dot(vec4(_756 * _303, _756 * _304, _756 * _305, 0.0), vec4(_245, _246, _247, 0.0));
    float _3713 = isnan(0.0) ? _760 : (isnan(_760) ? 0.0 : max(_760, 0.0));
    float _768 = exp2(log2((1.0 - (isnan(1.0) ? _3713 : (isnan(_3713) ? 1.0 : min(_3713, 1.0)))) * cbMtdParam._m0[12u].z) * cbMtdParam._m0[12u].w);
    float _3724 = isnan(0.0) ? _768 : (isnan(_768) ? 0.0 : max(_768, 0.0));
    float _769 = isnan(1.0) ? _3724 : (isnan(_3724) ? 1.0 : min(_3724, 1.0));
    float _773 = ((_538 + cbMtdParam._m0[9u].x) + (_549 * cbMtdParam._m0[10u].x)) + ((_744 * cbMtdParam._m0[11u].x) * _769);
    float _774 = ((_538 + cbMtdParam._m0[9u].y) + (_549 * cbMtdParam._m0[10u].y)) + ((_744 * cbMtdParam._m0[11u].y) * _769);
    float _775 = ((_538 + cbMtdParam._m0[9u].z) + (_549 * cbMtdParam._m0[10u].z)) + ((_744 * cbMtdParam._m0[11u].z) * _769);
    float _3735 = isnan(0.0) ? _404 : (isnan(_404) ? 0.0 : max(_404, 0.0));
    float _776 = isnan(1.0) ? _3735 : (isnan(_3735) ? 1.0 : min(_3735, 1.0));
    float _3746 = isnan(0.0) ? _406 : (isnan(_406) ? 0.0 : max(_406, 0.0));
    float _786 = isnan(1.0) ? _3746 : (isnan(_3746) ? 1.0 : min(_3746, 1.0));
    float _789 = (_365 * (-0.87999999523162841796875)) * _786;
    float _792 = (((((1.0 - _773) - _776) * _547) + _773) + _786) + _789;
    float _795 = (((((1.0 - _774) - _776) * _547) + _774) + _786) + _789;
    float _798 = (((((1.0 - _775) - _776) * _547) + _775) + _786) + _789;
    float _799 = _342 * 0.01200000010430812835693359375;
    float _821 = (_342 * 0.300000011920928955078125) * texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[35u].y * _320) + _799) + (cbMtdParam._m0[24u].y * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[35u].z * _320) + _799) + (cbMtdParam._m0[24u].z * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z;
    float _3757 = isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : max(_821, 0.0));
    float _822 = isnan(1.0) ? _3757 : (isnan(_3757) ? 1.0 : min(_3757, 1.0));
    float _832 = (((1.0 - _792) * TEXCOORD_5.x) * _822) + _792;
    float _833 = (((1.0 - _795) * TEXCOORD_5.x) * _822) + _795;
    float _834 = (((1.0 - _798) * TEXCOORD_5.x) * _822) + _798;
    vec4 _868 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].w * _320) + (cbMtdParam._m0[30u].y * _482)) + (cbMtdParam._m0[29u].y * _422)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[28u].x * _320) + (cbMtdParam._m0[30u].z * _481)) + (cbMtdParam._m0[29u].z * _423)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _871 = _868.y;
    float _878 = 1.0 - (_401 / cbMtdParam._m0[18u].w);
    float _882 = ((_868.x * TEXCOORD_8.x) * cbMtdParam._m0[18u].z) * (isnan(0.0) ? _878 : (isnan(_878) ? 0.0 : max(_878, 0.0)));
    float _888 = _871 * TEXCOORD_8.y;
    float _891 = ((isnan(cbMtdParam._m0[19u].x) ? _888 : (isnan(_888) ? cbMtdParam._m0[19u].x : max(_888, cbMtdParam._m0[19u].x))) - cbMtdParam._m0[19u].x) * cbMtdParam._m0[19u].y;
    float _892 = isnan(_891) ? _882 : (isnan(_882) ? _891 : max(_882, _891));
    float _3783 = isnan(0.0) ? _892 : (isnan(_892) ? 0.0 : max(_892, 0.0));
    float _893 = isnan(1.0) ? _3783 : (isnan(_3783) ? 1.0 : min(_3783, 1.0));
    float _900 = (_893 * (1.0 - _832)) + _832;
    float _901 = (_893 * (1.0 - _833)) + _833;
    float _902 = (_893 * (1.0 - _834)) + _834;
    float _937 = exp2(log2(cbMtdParam._m0[15u].w * _718) * cbMtdParam._m0[17u].x);
    float _3794 = isnan(0.0) ? _937 : (isnan(_937) ? 0.0 : max(_937, 0.0));
    float _938 = isnan(1.0) ? _3794 : (isnan(_3794) ? 1.0 : min(_3794, 1.0));
    float _939 = _938 * texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[28u].y * _320) + (cbMtdParam._m0[28u].w * _718)) + (cbMtdParam._m0[29u].w * _422)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[28u].z * _320) + (cbMtdParam._m0[29u].x * _718)) + (cbMtdParam._m0[30u].x * _423)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w)).z;
    float _942 = ((_938 - _939) * cbMtdParam._m0[17u].w) + _939;
    float _946 = _409 * TEXCOORD_8.z;
    float _953 = ((_946 * (1.0 - _900)) * _942) + _900;
    float _954 = ((_946 * (1.0 - _901)) * _942) + _901;
    float _955 = ((_946 * (1.0 - _902)) * _942) + _902;
    float _959 = 1.0 - (_401 / cbMtdParam._m0[18u].x);
    float _965 = (cbMtdParam._m0[18u].y * _871) * (isnan(0.0) ? _959 : (isnan(_959) ? 0.0 : max(_959, 0.0)));
    float _969 = (_965 * (1.0 - _953)) + _953;
    float _970 = (_965 * (1.0 - _954)) + _954;
    float _971 = (_965 * (1.0 - _955)) + _955;
    float _974 = _359 / cbMtdParam._m0[15u].y;
    float _3810 = isnan(0.0) ? _974 : (isnan(_974) ? 0.0 : max(_974, 0.0));
    float _977 = (1.0 - (isnan(1.0) ? _3810 : (isnan(_3810) ? 1.0 : min(_3810, 1.0)))) * cbMtdParam._m0[15u].x;
    float _983 = _359 + 0.20000000298023223876953125;
    float _985 = _983 * 9.0;
    float _3821 = isnan(0.0) ? _985 : (isnan(_985) ? 0.0 : max(_985, 0.0));
    float _990 = ((cbMtdParam._m0[13u].w - cbMtdParam._m0[12u].x) * (isnan(1.0) ? _3821 : (isnan(_3821) ? 1.0 : min(_3821, 1.0)))) + cbMtdParam._m0[12u].x;
    float _993 = (_359 + 0.099999986588954925537109375) * 2.5;
    float _3832 = isnan(0.0) ? _993 : (isnan(_993) ? 0.0 : max(_993, 0.0));
    float _998 = ((cbMtdParam._m0[14u].z - _990) * (isnan(1.0) ? _3832 : (isnan(_3832) ? 1.0 : min(_3832, 1.0)))) + _990;
    float _999 = _969 + _537;
    float _3843 = isnan(0.0) ? _999 : (isnan(_999) ? 0.0 : max(_999, 0.0));
    float _1004 = ((0.3499999940395355224609375 - _998) * (isnan(1.0) ? _3843 : (isnan(_3843) ? 1.0 : min(_3843, 1.0)))) + _998;
    float _1005 = TEXCOORD_5.z * 0.5;
    float _1017 = (_359 + 0.100000001490116119384765625) * 0.89999997615814208984375;
    float _3854 = isnan(0.0) ? _1017 : (isnan(_1017) ? 0.0 : max(_1017, 0.0));
    float _1022 = ((cbMtdParam._m0[17u].y - cbMtdParam._m0[20u].x) * (isnan(1.0) ? _3854 : (isnan(_3854) ? 1.0 : min(_3854, 1.0)))) + cbMtdParam._m0[20u].x;
    float _1027 = (_1022 * (_340 + (-0.5))) + 0.5;
    float _1028 = (_1022 * (_341 + (-0.5))) + 0.5;
    float _3865 = isnan(0.0) ? TEXCOORD_5.y : (isnan(TEXCOORD_5.y) ? 0.0 : max(TEXCOORD_5.y, 0.0));
    float _1029 = isnan(1.0) ? _3865 : (isnan(_3865) ? 1.0 : min(_3865, 1.0));
    vec4 _1059 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[26u].y * TEXCOORD.z) + (cbMtdParam._m0[32u].y * _320)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[26u].z * TEXCOORD.w) + (cbMtdParam._m0[32u].z * _320)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1067 = ((_525.x + (-0.5)) * 0.5) + _506.x;
    float _1068 = ((_525.y + (-0.5)) * 0.5) + _506.y;
    vec4 _1094 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[24u].w * TEXCOORD.x) + (cbMtdParam._m0[25u].y * _320)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[25u].x * TEXCOORD.y) + (cbMtdParam._m0[25u].z * _320)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1103 = _983 * 12.0;
    float _3876 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
    float _1105 = 1.0 - (isnan(1.0) ? _3876 : (isnan(_3876) ? 1.0 : min(_3876, 1.0)));
    float _1116 = cbMtdParam._m0[33u].w * TEXCOORD.x;
    float _1117 = cbMtdParam._m0[34u].x * TEXCOORD.y;
    vec4 _1130 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2(((_1116 + (cbMtdParam._m0[33u].y * _320)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_1117 + (cbMtdParam._m0[33u].z * _320)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _1151 = texture(sampler2D(M_PlanarReflection_m35_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1116 + ((cbMtdParam._m0[27u].y * 0.4000000059604644775390625) * _549)) + (cbMtdParam._m0[34u].y * _320)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1117 + ((cbMtdParam._m0[27u].z * 0.4000000059604644775390625) * _549)) + (cbMtdParam._m0[34u].z * _320)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _1165 = (((0.5 - _1067) * 0.10999999940395355224609375) + _1067) + (((((((_1094.z + (-0.5)) * cbMtdParam._m0[16u].x) * _1105) + (-1.0)) + _1130.x) + _1151.x) * cbMtdParam._m0[15u].z);
    float _1166 = (((0.5 - _1068) * 0.10999999940395355224609375) + _1068) + (((((((_1094.w + (-0.5)) * cbMtdParam._m0[16u].x) * _1105) + (-1.0)) + _1130.y) + _1151.y) * cbMtdParam._m0[15u].z);
    float _1171 = ((_1059.x - _1165) * _359) + _1165;
    float _1172 = ((_1059.y - _1166) * _359) + _1166;
    float _1173 = _359 * 0.5;
    float _3887 = isnan(0.0) ? _1173 : (isnan(_1173) ? 0.0 : max(_1173, 0.0));
    float _1174 = isnan(1.0) ? _3887 : (isnan(_3887) ? 1.0 : min(_3887, 1.0));
    float _1185 = cbMtdParam._m0[17u].z - (cbMtdParam._m0[17u].z * _730);
    float _1192 = cbMtdParam._m0[19u].z - (cbMtdParam._m0[19u].z * TEXCOORD_5.y);
    float _1194 = _1192 - (_1192 * _1174);
    float _1198 = (((((((0.5 - _340) * 0.60000002384185791015625) + _340) - _1027) * _1029) + _1027) + (_1194 * (_605.x + (-0.5)))) + (((_1171 + (-0.5)) + ((0.5 - _1171) * _1174)) * _1185);
    float _1200 = (((((((0.5 - _341) * 0.60000002384185791015625) + _341) - _1028) * _1029) + _1028) + (_1194 * (_605.y + (-0.5)))) + (((_1172 + (-0.5)) + ((0.5 - _1172) * _1174)) * _1185);
    float _1210 = (((_1005 * (0.5 - _1198)) + _1198) * 2.0) + (-1.0);
    float _1211 = (((_1005 * (0.5 - _1200)) + _1200) * 2.0) + (-1.0);
    float _1212 = dot(vec2(_1210, _1211), vec2(_1210, _1211));
    float _3898 = isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0));
    float _1217 = sqrt(1.0 - (isnan(1.0) ? _3898 : (isnan(_3898) ? 1.0 : min(_3898, 1.0))));
    float _1220 = _983 * 6.0;
    float _3909 = isnan(0.0) ? _1220 : (isnan(_1220) ? 0.0 : max(_1220, 0.0));
    float _1223 = cbMtdParam._m0[16u].y * (isnan(1.0) ? _3909 : (isnan(_3909) ? 1.0 : min(_3909, 1.0)));
    float _3920 = isnan(0.0) ? _1223 : (isnan(_1223) ? 0.0 : max(_1223, 0.0));
    float _1224 = isnan(1.0) ? _3920 : (isnan(_3920) ? 1.0 : min(_3920, 1.0));
    float _1227 = ((1.0 - _1224) * _999) + _1224;
    uint _1241 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1242 = _1241 + 5u;
    float _1253 = (-0.0) - _303;
    float _1254 = (-0.0) - _304;
    float _1255 = (-0.0) - _305;
    float _1259 = inversesqrt(dot(vec3(_1253, _1254, _1255), vec3(_1253, _1254, _1255)));
    float _1263 = dot(vec3(_1259 * _1253, _1259 * _1254, _1259 * _1255), vec3(cbLight._m0[floatBitsToUint(cbInstanceData._m0[_1242]).x * 14u].xyz));
    float _1273 = 0.90999996662139892578125 / exp2(log2(1.091000080108642578125 - (_1263 * 0.60000002384185791015625)) * 1.5);
    float _1286 = ((((0.959999978542327880859375 / exp2(log2((_1263 * 0.4000000059604644775390625) + 1.04100000858306884765625) * 1.5)) - _1273) * 0.5) + _1273) * 0.079577468335628509521484375;
    float _1290 = fma(_1217, _245, fma(_1211, _237 * TANGENT.x, _1210 * _224));
    float _1293 = fma(_1217, _246, fma(_1211, _237 * TANGENT.y, _1210 * _225));
    float _1296 = fma(_1217, _247, fma(_1211, _237 * TANGENT.z, _1210 * _226));
    float _1300 = inversesqrt(dot(vec3(_1290, _1293, _1296), vec3(_1290, _1293, _1296)));
    float _1301 = _1300 * _1290;
    float _1302 = _1300 * _1293;
    float _1303 = _1300 * _1296;
    float _3931 = isnan(0.0) ? _977 : (isnan(_977) ? 0.0 : max(_977, 0.0));
    float _3942 = isnan(0.0) ? _1004 : (isnan(_1004) ? 0.0 : max(_1004, 0.0));
    float _1305 = isnan(1.0) ? _3942 : (isnan(_3942) ? 1.0 : min(_3942, 1.0));
    float _3953 = isnan(0.0) ? _969 : (isnan(_969) ? 0.0 : max(_969, 0.0));
    float _3964 = isnan(0.0) ? _970 : (isnan(_970) ? 0.0 : max(_970, 0.0));
    float _3975 = isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0));
    float _1320 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1360 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1369 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1360);
    float _1370 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1360);
    float _1371 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1360);
    float _1375 = inversesqrt(dot(vec3(_1369, _1370, _1371), vec3(_1369, _1370, _1371)));
    float _1376 = _1369 * _1375;
    float _1377 = _1370 * _1375;
    float _1378 = _1371 * _1375;
    float _1383 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1384 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _1386 = texture(sampler2D(g_WaterSimulationNormalTexture, SS_ClampLinear), vec2(TEXCOORD_11, TEXCOORD_12));
    float _1395 = (_1386.x * 2.0) + (-1.0);
    float _1396 = (_1386.y * 2.0) + (-1.0);
    float _1397 = (_1386.z * 2.0) + (-1.0);
    float _1401 = inversesqrt(dot(vec3(_1395, _1396, _1397), vec3(_1395, _1396, _1397)));
    float _1412 = ((TEXCOORD_12 >= 1.0) || ((TEXCOORD_12 <= 0.0) || ((TEXCOORD_11 <= 0.0) || (TEXCOORD_11 >= 1.0)))) ? 0.0 : _1386.w;
    float _1419 = (((_1395 * _1401) - _1301) * _1412) + _1301;
    float _1420 = (((_1396 * _1401) - _1302) * _1412) + _1302;
    float _1421 = (((_1397 * _1401) - _1303) * _1412) + _1303;
    float _1441 = fma(_1421, cbSceneParam._m0[5u].z, fma(_1420, cbSceneParam._m0[5u].y, _1419 * cbSceneParam._m0[5u].x));
    float _1444 = fma(_1421, cbSceneParam._m0[6u].z, fma(_1420, cbSceneParam._m0[6u].y, _1419 * cbSceneParam._m0[6u].x));
    float _1447 = fma(_1421, cbSceneParam._m0[7u].z, fma(_1420, cbSceneParam._m0[7u].y, _1419 * cbSceneParam._m0[7u].x));
    uint _1461 = (_1241 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1467 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3953 : (isnan(_3953) ? 1.0 : min(_3953, 1.0)))) * cbInstanceData._m0[_1461].x;
    float _1468 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3964 : (isnan(_3964) ? 1.0 : min(_3964, 1.0)))) * cbInstanceData._m0[_1461].y;
    float _1469 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3975 : (isnan(_3975) ? 1.0 : min(_3975, 1.0)))) * cbInstanceData._m0[_1461].z;
    float _3986 = isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0));
    float _1470 = isnan(1.0) ? _3986 : (isnan(_3986) ? 1.0 : min(_3986, 1.0));
    float _3997 = isnan(0.0) ? _1468 : (isnan(_1468) ? 0.0 : max(_1468, 0.0));
    float _1471 = isnan(1.0) ? _3997 : (isnan(_3997) ? 1.0 : min(_3997, 1.0));
    float _4008 = isnan(0.0) ? _1469 : (isnan(_1469) ? 0.0 : max(_1469, 0.0));
    float _1472 = isnan(1.0) ? _4008 : (isnan(_4008) ? 1.0 : min(_4008, 1.0));
    vec4 _1481 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1383, cbSceneParam._m0[86u].y * _1384));
    float _1484 = _1481.x * TEXCOORD_5.w;
    float _1488 = abs(dot(vec3(_1376, _1377, _1378), vec3(_1419, _1420, _1421)));
    float _4019 = isnan(0.0) ? _1488 : (isnan(_1488) ? 0.0 : max(_1488, 0.0));
    float _1495 = exp2(log2(1.0 - (isnan(1.0) ? _4019 : (isnan(_4019) ? 1.0 : min(_4019, 1.0)))) * 5.0) * 0.959999978542327880859375;
    float _1496 = _1495 + 0.039999999105930328369140625;
    float _1500 = 10.0 / (_1320 + 10.0);
    vec4 _1515 = texture(sampler2D(g_ReflectionTexture, SS_ClampLinear), vec2(((_1500 * cbMtdParam._m0[21u].z) * dot(vec3(_1419, _1420, _1421), vec3(1.0, 0.0, 0.0))) + (_1383 / cbSceneParam._m0[86u].x), 1.0 - (_1384 / cbSceneParam._m0[86u].y)));
    float _1551 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1555 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1559 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1855;
    float _1856;
    float _1857;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1584 = fma(_1559, cbModelParam._m0[26u].z, fma(_1555, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1551));
        float _1588 = fma(_1559, cbModelParam._m0[27u].z, fma(_1555, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1551));
        float _1592 = fma(_1559, cbModelParam._m0[28u].z, fma(_1555, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1551));
        float _1614 = _1551 + _1419;
        float _1615 = _1555 + _1420;
        float _1616 = _1559 + _1421;
        float _1626 = fma(_1616, cbModelParam._m0[26u].z, fma(_1615, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1614)) - _1584;
        float _1627 = fma(_1616, cbModelParam._m0[27u].z, fma(_1615, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1614)) - _1588;
        float _1628 = fma(_1616, cbModelParam._m0[28u].z, fma(_1615, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1614)) - _1592;
        float _1632 = inversesqrt(dot(vec3(_1626, _1627, _1628), vec3(_1626, _1627, _1628)));
        float _1644 = ((_1632 * _1626) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1584 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1645 = ((_1632 * _1627) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1588 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1646 = ((_1632 * _1628) / cbModelParam._m0[34u].z) + ((((((_1592 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1649 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1644, _1645, _1646), 0.0);
        vec4 _1656 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1644, _1645, _1646), 0.0);
        vec4 _1663 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1644, _1645, _1646), 0.0);
        vec4 _1670 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1644, _1645, _1646), 0.0);
        float _1683 = exp2((_1649.w + (-0.5)) * 20.0) * 2.0;
        float _1690 = exp2((_1656.w + (-0.5)) * 20.0) * 2.0;
        float _1697 = exp2((_1663.w + (-0.5)) * 20.0) * 2.0;
        float _1704 = exp2((_1670.w + (-0.5)) * 20.0) * 2.0;
        float _1705 = _1704 * (_1670.x + (-0.5));
        float _1706 = _1704 * (_1670.y + (-0.5));
        float _1707 = _1704 * (_1670.z + (-0.5));
        float _1708 = isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0));
        float _1709 = isnan(0.0) ? _1706 : (isnan(_1706) ? 0.0 : max(_1706, 0.0));
        float _1710 = isnan(0.0) ? _1707 : (isnan(_1707) ? 0.0 : max(_1707, 0.0));
        float _1712 = ((_1649.x + (-0.5)) * 0.5) * _1683;
        float _1714 = ((_1656.x + (-0.5)) * 0.5) * _1690;
        float _1716 = ((_1663.x + (-0.5)) * 0.5) * _1697;
        float _1717 = dot(vec3(_1712, _1714, _1716), vec3(_1712, _1714, _1716));
        float _1722 = (_1717 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1717);
        float _1731 = (dot(vec3(_1419, _1420, _1421), vec3(_1722 * _1712, _1722 * _1714, _1722 * _1716)) + 1.0) * 0.5;
        float _4045 = isnan(0.0) ? _1731 : (isnan(_1731) ? 0.0 : max(_1731, 0.0));
        float _1741 = sqrt(((_1714 * _1714) + (_1712 * _1712)) + (_1716 * _1716)) / (_1708 + 9.9999997473787516355514526367188e-06);
        float _4056 = isnan(0.0) ? _1741 : (isnan(_1741) ? 0.0 : max(_1741, 0.0));
        float _1742 = isnan(1.0) ? _4056 : (isnan(_4056) ? 1.0 : min(_4056, 1.0));
        float _1743 = _1742 * 2.0;
        float _1747 = (1.0 - _1742) / (_1742 + 1.0);
        float _4067 = isnan(0.0) ? _1747 : (isnan(_1747) ? 0.0 : max(_1747, 0.0));
        float _1748 = isnan(1.0) ? _4067 : (isnan(_4067) ? 1.0 : min(_4067, 1.0));
        float _1757 = ((((1.0 - _1748) * (_1743 + 2.0)) * exp2(log2(isnan(1.0) ? _4045 : (isnan(_4045) ? 1.0 : min(_4045, 1.0))) * (_1743 + 1.0))) + _1748) * _1708;
        float _1759 = ((_1649.y + (-0.5)) * 0.5) * _1683;
        float _1761 = ((_1656.y + (-0.5)) * 0.5) * _1690;
        float _1763 = ((_1663.y + (-0.5)) * 0.5) * _1697;
        float _1764 = dot(vec3(_1759, _1761, _1763), vec3(_1759, _1761, _1763));
        float _1769 = (_1764 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1764);
        float _1777 = (dot(vec3(_1419, _1420, _1421), vec3(_1769 * _1759, _1769 * _1761, _1769 * _1763)) + 1.0) * 0.5;
        float _4078 = isnan(0.0) ? _1777 : (isnan(_1777) ? 0.0 : max(_1777, 0.0));
        float _1786 = sqrt(((_1761 * _1761) + (_1759 * _1759)) + (_1763 * _1763)) / (_1709 + 9.9999997473787516355514526367188e-06);
        float _4089 = isnan(0.0) ? _1786 : (isnan(_1786) ? 0.0 : max(_1786, 0.0));
        float _1787 = isnan(1.0) ? _4089 : (isnan(_4089) ? 1.0 : min(_4089, 1.0));
        float _1788 = _1787 * 2.0;
        float _1792 = (1.0 - _1787) / (_1787 + 1.0);
        float _4100 = isnan(0.0) ? _1792 : (isnan(_1792) ? 0.0 : max(_1792, 0.0));
        float _1793 = isnan(1.0) ? _4100 : (isnan(_4100) ? 1.0 : min(_4100, 1.0));
        float _1802 = ((((1.0 - _1793) * (_1788 + 2.0)) * exp2(log2(isnan(1.0) ? _4078 : (isnan(_4078) ? 1.0 : min(_4078, 1.0))) * (_1788 + 1.0))) + _1793) * _1709;
        float _1804 = ((_1649.z + (-0.5)) * 0.5) * _1683;
        float _1806 = ((_1656.z + (-0.5)) * 0.5) * _1690;
        float _1808 = ((_1663.z + (-0.5)) * 0.5) * _1697;
        float _1809 = dot(vec3(_1804, _1806, _1808), vec3(_1804, _1806, _1808));
        float _1814 = (_1809 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1809);
        float _1822 = (dot(vec3(_1419, _1420, _1421), vec3(_1814 * _1804, _1814 * _1806, _1814 * _1808)) + 1.0) * 0.5;
        float _4111 = isnan(0.0) ? _1822 : (isnan(_1822) ? 0.0 : max(_1822, 0.0));
        float _1831 = sqrt(((_1806 * _1806) + (_1804 * _1804)) + (_1808 * _1808)) / (_1710 + 9.9999997473787516355514526367188e-06);
        float _4122 = isnan(0.0) ? _1831 : (isnan(_1831) ? 0.0 : max(_1831, 0.0));
        float _1832 = isnan(1.0) ? _4122 : (isnan(_4122) ? 1.0 : min(_4122, 1.0));
        float _1833 = _1832 * 2.0;
        float _1837 = (1.0 - _1832) / (_1832 + 1.0);
        float _4133 = isnan(0.0) ? _1837 : (isnan(_1837) ? 0.0 : max(_1837, 0.0));
        float _1838 = isnan(1.0) ? _4133 : (isnan(_4133) ? 1.0 : min(_4133, 1.0));
        float _1847 = ((((1.0 - _1838) * (_1833 + 2.0)) * exp2(log2(isnan(1.0) ? _4111 : (isnan(_4111) ? 1.0 : min(_4111, 1.0))) * (_1833 + 1.0))) + _1838) * _1710;
        _1855 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1757 : (isnan(_1757) ? 0.0 : max(_1757, 0.0)));
        _1856 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1802 : (isnan(_1802) ? 0.0 : max(_1802, 0.0)));
        _1857 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1847 : (isnan(_1847) ? 0.0 : max(_1847, 0.0)));
    }
    else
    {
        _1855 = 0.0;
        _1856 = 0.0;
        _1857 = 0.0;
    }
    float _2147;
    float _2148;
    float _2149;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1880 = fma(_1559, cbModelParam._m0[30u].z, fma(_1555, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1551));
        float _1884 = fma(_1559, cbModelParam._m0[31u].z, fma(_1555, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1551));
        float _1888 = fma(_1559, cbModelParam._m0[32u].z, fma(_1555, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1551));
        float _1910 = _1551 + _1419;
        float _1911 = _1555 + _1420;
        float _1912 = _1559 + _1421;
        float _1922 = fma(_1912, cbModelParam._m0[30u].z, fma(_1911, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1910)) - _1880;
        float _1923 = fma(_1912, cbModelParam._m0[31u].z, fma(_1911, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1910)) - _1884;
        float _1924 = fma(_1912, cbModelParam._m0[32u].z, fma(_1911, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1910)) - _1888;
        float _1928 = inversesqrt(dot(vec3(_1922, _1923, _1924), vec3(_1922, _1923, _1924)));
        float _1940 = ((_1928 * _1922) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1880 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1941 = ((_1928 * _1923) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1884 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1942 = ((_1928 * _1924) / cbModelParam._m0[35u].z) + ((((((_1888 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1944 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1940, _1941, _1942), 0.0);
        vec4 _1951 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1940, _1941, _1942), 0.0);
        vec4 _1958 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1940, _1941, _1942), 0.0);
        vec4 _1965 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1940, _1941, _1942), 0.0);
        float _1977 = exp2((_1944.w + (-0.5)) * 20.0) * 2.0;
        float _1984 = exp2((_1951.w + (-0.5)) * 20.0) * 2.0;
        float _1991 = exp2((_1958.w + (-0.5)) * 20.0) * 2.0;
        float _1998 = exp2((_1965.w + (-0.5)) * 20.0) * 2.0;
        float _1999 = _1998 * (_1965.x + (-0.5));
        float _2000 = _1998 * (_1965.y + (-0.5));
        float _2001 = _1998 * (_1965.z + (-0.5));
        float _2002 = isnan(0.0) ? _1999 : (isnan(_1999) ? 0.0 : max(_1999, 0.0));
        float _2003 = isnan(0.0) ? _2000 : (isnan(_2000) ? 0.0 : max(_2000, 0.0));
        float _2004 = isnan(0.0) ? _2001 : (isnan(_2001) ? 0.0 : max(_2001, 0.0));
        float _2006 = ((_1944.x + (-0.5)) * 0.5) * _1977;
        float _2008 = ((_1951.x + (-0.5)) * 0.5) * _1984;
        float _2010 = ((_1958.x + (-0.5)) * 0.5) * _1991;
        float _2011 = dot(vec3(_2006, _2008, _2010), vec3(_2006, _2008, _2010));
        float _2016 = (_2011 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2011);
        float _2024 = (dot(vec3(_1419, _1420, _1421), vec3(_2016 * _2006, _2016 * _2008, _2016 * _2010)) + 1.0) * 0.5;
        float _4174 = isnan(0.0) ? _2024 : (isnan(_2024) ? 0.0 : max(_2024, 0.0));
        float _2033 = sqrt(((_2008 * _2008) + (_2006 * _2006)) + (_2010 * _2010)) / (_2002 + 9.9999997473787516355514526367188e-06);
        float _4185 = isnan(0.0) ? _2033 : (isnan(_2033) ? 0.0 : max(_2033, 0.0));
        float _2034 = isnan(1.0) ? _4185 : (isnan(_4185) ? 1.0 : min(_4185, 1.0));
        float _2035 = _2034 * 2.0;
        float _2039 = (1.0 - _2034) / (_2034 + 1.0);
        float _4196 = isnan(0.0) ? _2039 : (isnan(_2039) ? 0.0 : max(_2039, 0.0));
        float _2040 = isnan(1.0) ? _4196 : (isnan(_4196) ? 1.0 : min(_4196, 1.0));
        float _2049 = ((((1.0 - _2040) * (_2035 + 2.0)) * exp2(log2(isnan(1.0) ? _4174 : (isnan(_4174) ? 1.0 : min(_4174, 1.0))) * (_2035 + 1.0))) + _2040) * _2002;
        float _2051 = ((_1944.y + (-0.5)) * 0.5) * _1977;
        float _2053 = ((_1951.y + (-0.5)) * 0.5) * _1984;
        float _2055 = ((_1958.y + (-0.5)) * 0.5) * _1991;
        float _2056 = dot(vec3(_2051, _2053, _2055), vec3(_2051, _2053, _2055));
        float _2061 = (_2056 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2056);
        float _2069 = (dot(vec3(_1419, _1420, _1421), vec3(_2061 * _2051, _2061 * _2053, _2061 * _2055)) + 1.0) * 0.5;
        float _4207 = isnan(0.0) ? _2069 : (isnan(_2069) ? 0.0 : max(_2069, 0.0));
        float _2078 = sqrt(((_2053 * _2053) + (_2051 * _2051)) + (_2055 * _2055)) / (_2003 + 9.9999997473787516355514526367188e-06);
        float _4218 = isnan(0.0) ? _2078 : (isnan(_2078) ? 0.0 : max(_2078, 0.0));
        float _2079 = isnan(1.0) ? _4218 : (isnan(_4218) ? 1.0 : min(_4218, 1.0));
        float _2080 = _2079 * 2.0;
        float _2084 = (1.0 - _2079) / (_2079 + 1.0);
        float _4229 = isnan(0.0) ? _2084 : (isnan(_2084) ? 0.0 : max(_2084, 0.0));
        float _2085 = isnan(1.0) ? _4229 : (isnan(_4229) ? 1.0 : min(_4229, 1.0));
        float _2094 = ((((1.0 - _2085) * (_2080 + 2.0)) * exp2(log2(isnan(1.0) ? _4207 : (isnan(_4207) ? 1.0 : min(_4207, 1.0))) * (_2080 + 1.0))) + _2085) * _2003;
        float _2096 = ((_1944.z + (-0.5)) * 0.5) * _1977;
        float _2098 = ((_1951.z + (-0.5)) * 0.5) * _1984;
        float _2100 = ((_1958.z + (-0.5)) * 0.5) * _1991;
        float _2101 = dot(vec3(_2096, _2098, _2100), vec3(_2096, _2098, _2100));
        float _2106 = (_2101 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2101);
        float _2114 = (dot(vec3(_1419, _1420, _1421), vec3(_2106 * _2096, _2106 * _2098, _2106 * _2100)) + 1.0) * 0.5;
        float _4240 = isnan(0.0) ? _2114 : (isnan(_2114) ? 0.0 : max(_2114, 0.0));
        float _2123 = sqrt(((_2098 * _2098) + (_2096 * _2096)) + (_2100 * _2100)) / (_2004 + 9.9999997473787516355514526367188e-06);
        float _4251 = isnan(0.0) ? _2123 : (isnan(_2123) ? 0.0 : max(_2123, 0.0));
        float _2124 = isnan(1.0) ? _4251 : (isnan(_4251) ? 1.0 : min(_4251, 1.0));
        float _2125 = _2124 * 2.0;
        float _2129 = (1.0 - _2124) / (_2124 + 1.0);
        float _4262 = isnan(0.0) ? _2129 : (isnan(_2129) ? 0.0 : max(_2129, 0.0));
        float _2130 = isnan(1.0) ? _4262 : (isnan(_4262) ? 1.0 : min(_4262, 1.0));
        float _2139 = ((((1.0 - _2130) * (_2125 + 2.0)) * exp2(log2(isnan(1.0) ? _4240 : (isnan(_4240) ? 1.0 : min(_4240, 1.0))) * (_2125 + 1.0))) + _2130) * _2004;
        _2147 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2049 : (isnan(_2049) ? 0.0 : max(_2049, 0.0)));
        _2148 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2094 : (isnan(_2094) ? 0.0 : max(_2094, 0.0)));
        _2149 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2139 : (isnan(_2139) ? 0.0 : max(_2139, 0.0)));
    }
    else
    {
        _2147 = 0.0;
        _2148 = 0.0;
        _2149 = 0.0;
    }
    float _2159 = (cbModelParam._m0[1u].x * (_2147 - _1855)) + _1855;
    float _2160 = (cbModelParam._m0[1u].x * (_2148 - _1856)) + _1856;
    float _2161 = (cbModelParam._m0[1u].x * (_2149 - _1857)) + _1857;
    float _2182 = fma(_2161, cbSceneParam._m0[89u].z, fma(_2160, cbSceneParam._m0[89u].y, _2159 * cbSceneParam._m0[89u].x));
    float _2185 = fma(_2161, cbSceneParam._m0[90u].z, fma(_2160, cbSceneParam._m0[90u].y, _2159 * cbSceneParam._m0[90u].x));
    float _2188 = fma(_2161, cbSceneParam._m0[91u].z, fma(_2160, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2159));
    float _2192 = 0.959999978542327880859375 - _1495;
    float _2193 = _2192 * _1484;
    vec4 _2198 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1383, _1384));
    float _2200 = _2198.w;
    float _2212 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2200);
    float _2213 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2200);
    float _2214 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2200);
    uvec4 _2217 = floatBitsToUint(cbInstanceData._m0[_1242]);
    uint _2219 = _2217.x * 14u;
    float _2226 = (cbLight._m0[_2219 + 13u].x * (_1484 + (-1.0))) + 1.0;
    uint _2227 = _2219 + 4u;
    float _2236 = isnan(1.0) ? _2226 : (isnan(_2226) ? 1.0 : min(_2226, 1.0));
    float _2245 = dot(vec3(cbLight._m0[_2219].xyz), vec3(_1419, _1420, _1421));
    float _4308 = isnan(0.0) ? _2245 : (isnan(_2245) ? 0.0 : max(_2245, 0.0));
    float _2249 = (isnan(1.0) ? _4308 : (isnan(_4308) ? 1.0 : min(_4308, 1.0))) * 0.3183098733425140380859375;
    float _2251 = ((cbLight._m0[_2227].x * _2212) * _2236) * _2249;
    float _2252 = ((cbLight._m0[_2227].y * _2213) * _2236) * _2249;
    float _2253 = ((cbLight._m0[_2227].z * _2214) * _2236) * _2249;
    uint _2255 = _2219 + 8u;
    float _2268 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2219].w)) * _1305) * 0.949999988079071044921875);
    float _2269 = _2268 * _2268;
    float _2270 = cbLight._m0[_2219].x + _1376;
    float _2271 = cbLight._m0[_2219].y + _1377;
    float _2272 = cbLight._m0[_2219].z + _1378;
    float _2276 = inversesqrt(dot(vec3(_2270, _2271, _2272), vec3(_2270, _2271, _2272)));
    float _2277 = _2276 * _2270;
    float _2278 = _2276 * _2271;
    float _2279 = _2276 * _2272;
    float _2280 = dot(vec3(_1419, _1420, _1421), vec3(cbLight._m0[_2219].xyz));
    float _4319 = isnan(0.0) ? _2280 : (isnan(_2280) ? 0.0 : max(_2280, 0.0));
    float _2283 = isnan(1.0) ? _4319 : (isnan(_4319) ? 1.0 : min(_4319, 1.0));
    float _2284 = dot(vec3(_1419, _1420, _1421), vec3(_1376, _1377, _1378));
    float _4330 = isnan(0.0) ? _2284 : (isnan(_2284) ? 0.0 : max(_2284, 0.0));
    float _2287 = isnan(1.0) ? _4330 : (isnan(_4330) ? 1.0 : min(_4330, 1.0));
    float _2288 = dot(vec3(_1419, _1420, _1421), vec3(_2277, _2278, _2279));
    float _4341 = isnan(0.0) ? _2288 : (isnan(_2288) ? 0.0 : max(_2288, 0.0));
    float _2291 = isnan(1.0) ? _4341 : (isnan(_4341) ? 1.0 : min(_4341, 1.0));
    float _2292 = dot(vec3(cbLight._m0[_2219].xyz), vec3(_2277, _2278, _2279));
    float _4352 = isnan(0.0) ? _2292 : (isnan(_2292) ? 0.0 : max(_2292, 0.0));
    float _2296 = _2269 * _2269;
    float _2300 = ((_2291 * _2291) * (_2296 + (-1.0))) + 1.0;
    float _2310 = (exp2(log2(1.0 - (isnan(1.0) ? _4352 : (isnan(_4352) ? 1.0 : min(_4352, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2311 = 1.0 - _2269;
    float _2322 = (0.5 / (((_2287 * ((_2283 * _2311) + _2269)) + 9.9999999392252902907785028219223e-09) + (((_2287 * _2311) + _2269) * _2283))) * _2283;
    float _4363 = isnan(0.0) ? _2322 : (isnan(_2322) ? 0.0 : max(_2322, 0.0));
    float _2324 = (isnan(1.0) ? _4363 : (isnan(_4363) ? 1.0 : min(_4363, 1.0))) * (_2296 / ((_2300 * _2300) * 3.141590118408203125));
    float _2328 = (((cbLight._m0[_2255].x * _2212) * _2310) * _2324) * _2236;
    float _2332 = (((cbLight._m0[_2255].y * _2213) * _2310) * _2324) * _2236;
    float _2336 = (((cbLight._m0[_2255].z * _2214) * _2310) * _2324) * _2236;
    float _2440;
    float _2442;
    float _2444;
    float _2446;
    float _2448;
    float _2450;
    if (_2217.y == 0u)
    {
        float _2381 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2382 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2381;
        float _2383 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2381;
        float _2384 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2381;
        uvec4 _2396 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2397 = _2396.x;
        uint _2408 = uint((float(_2396.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1384) / _2397))) + floor(float(uint(cbSceneParam._m0[85u].x * _1383) / _2397)));
        float _2418 = (log2(_2384 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2419 = isnan(0.0) ? _2418 : (isnan(_2418) ? 0.0 : max(_2418, 0.0));
        uint _2422 = uint(isnan(14.0) ? _2419 : (isnan(_2419) ? 14.0 : min(_2419, 14.0)));
        uvec4 _2427 = texelFetch(g_lightClusterGridBuffer, int(((_2422 << 2u) + (_2408 << 6u)) >> 2u));
        uint _2428 = _2427.x;
        uint _2429 = _2396.z;
        float _2565;
        float _2567;
        float _2569;
        float _2571;
        float _2573;
        float _2575;
        if (((((1u << ((_2429 >> 4u) & 15u)) + 4294967295u) & _2428) == 0u) || ((_2429 & 240u) == 0u))
        {
            _2565 = 0.0;
            _2567 = 0.0;
            _2569 = 0.0;
            _2571 = 0.0;
            _2573 = 0.0;
            _2575 = 0.0;
        }
        else
        {
            float _2566;
            float _2568;
            float _2570;
            float _2572;
            float _2574;
            float _2576;
            float _2769 = 0.0;
            float _2770 = 0.0;
            float _2771 = 0.0;
            float _2772 = 0.0;
            float _2773 = 0.0;
            float _2774 = 0.0;
            uint _2775 = 0u;
            uint _2784;
            bool _2785;
            for (;;)
            {
                _2784 = texelFetch(g_lightClassification, int((((_2422 << 5u) + (_2408 << 9u)) + (_2775 << 2u)) >> 2u)).x;
                _2785 = _2784 == 0u;
                float frontier_phi_19_pred;
                float frontier_phi_19_pred_1;
                float frontier_phi_19_pred_2;
                float frontier_phi_19_pred_3;
                float frontier_phi_19_pred_4;
                float frontier_phi_19_pred_5;
                if (_2785)
                {
                    frontier_phi_19_pred = _2774;
                    frontier_phi_19_pred_1 = _2773;
                    frontier_phi_19_pred_2 = _2772;
                    frontier_phi_19_pred_3 = _2771;
                    frontier_phi_19_pred_4 = _2770;
                    frontier_phi_19_pred_5 = _2769;
                }
                else
                {
                    float _2978;
                    float _2979;
                    float _2980;
                    float _2981;
                    float _2982;
                    float _2983;
                    uint _2984;
                    _2978 = _2769;
                    _2979 = _2770;
                    _2980 = _2771;
                    _2981 = _2772;
                    _2982 = _2773;
                    _2983 = _2774;
                    _2984 = _2784;
                    float _2909;
                    float _2910;
                    float _2911;
                    float _2912;
                    float _2913;
                    float _2914;
                    for (;;)
                    {
                        uint _2988 = uint(findLSB(_2984)) + (_2775 << 5u);
                        uint _2985 = (_2984 + 4294967295u) & _2984;
                        uint _2990 = _2988 * 48u;
                        vec4 _3004 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2990)).x, texelFetch(g_PointLightRenderingBuffer, int(_2990 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2990 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2990 + 3u)).x));
                        uint _3010 = (_2988 * 48u) + 4u;
                        vec4 _3023 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3010)).x, texelFetch(g_PointLightRenderingBuffer, int(_3010 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3010 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3010 + 3u)).x));
                        uint _3029 = (_2988 * 48u) + 8u;
                        vec3 _3040 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3029)).x, texelFetch(g_PointLightRenderingBuffer, int(_3029 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3029 + 2u)).x));
                        float _3044 = _3004.x - _2382;
                        float _3045 = _3004.y - _2383;
                        float _3046 = _3004.z - _2384;
                        float _3047 = dot(vec3(_3044, _3045, _3046), vec3(_3044, _3045, _3046));
                        float _3050 = inversesqrt(_3047);
                        float _3051 = _3050 * _3044;
                        float _3052 = _3050 * _3045;
                        float _3053 = _3050 * _3046;
                        float _3054 = dot(vec3(_1441, _1444, _1447), vec3(_3051, _3052, _3053));
                        float _3059 = 1.0 - (_3047 * _3004.w);
                        float _4384 = isnan(0.0) ? _3059 : (isnan(_3059) ? 0.0 : max(_3059, 0.0));
                        float _3060 = isnan(1.0) ? _4384 : (isnan(_4384) ? 1.0 : min(_4384, 1.0));
                        float _3061 = sqrt(_3047) * _3023.w;
                        float _3064 = 1.39999997615814208984375 / (_3061 + 1.39999997615814208984375);
                        float _3065 = _3064 * _3064;
                        float _3068 = ((1.0 - _3065) * _3054) + _3065;
                        float _3071 = _3061 * _3061;
                        float _3075 = ((isnan(0.0) ? _3068 : (isnan(_3068) ? 0.0 : max(_3068, 0.0))) * _3060) / ((_3071 * 0.699999988079071044921875) + 1.0);
                        float _3079 = (-0.0) - _2382;
                        float _3080 = (-0.0) - _2383;
                        float _3081 = (-0.0) - _2384;
                        float _3085 = inversesqrt(dot(vec3(_3079, _3080, _3081), vec3(_3079, _3080, _3081)));
                        float _3086 = _3085 * _3079;
                        float _3087 = _3085 * _3080;
                        float _3088 = _3085 * _3081;
                        float _3096 = exp2(log2(1.0 / ((_3071 * 3.5) + 5.0)) * 0.25);
                        float _3098 = 1.0 - sqrt(_1305);
                        float _3105 = sqrt(1.0 - ((1.0 - (_3098 * _3098)) * (1.0 - (_3096 * _3096))));
                        float _3106 = _3105 * _3105;
                        float _3107 = _3106 * _3106;
                        float _3108 = _3086 + _3051;
                        float _3109 = _3087 + _3052;
                        float _3110 = _3088 + _3053;
                        float _3114 = inversesqrt(dot(vec3(_3108, _3109, _3110), vec3(_3108, _3109, _3110)));
                        float _3118 = dot(vec3(_1441, _1444, _1447), vec3(_3086, _3087, _3088));
                        float _4400 = isnan(0.0) ? _3118 : (isnan(_3118) ? 0.0 : max(_3118, 0.0));
                        float _3121 = isnan(1.0) ? _4400 : (isnan(_4400) ? 1.0 : min(_4400, 1.0));
                        float _3122 = dot(vec3(_1441, _1444, _1447), vec3(_3114 * _3108, _3114 * _3109, _3114 * _3110));
                        float _4411 = isnan(0.0) ? _3122 : (isnan(_3122) ? 0.0 : max(_3122, 0.0));
                        float _3125 = isnan(1.0) ? _4411 : (isnan(_4411) ? 1.0 : min(_4411, 1.0));
                        float _3129 = ((_3125 * _3125) * (_3107 + (-1.0))) + 1.0;
                        float _3130 = _3064 * _3106;
                        float _3131 = _3130 * _3130;
                        float _3134 = ((1.0 - _3131) * _3054) + _3131;
                        float _4422 = isnan(0.0) ? _3134 : (isnan(_3134) ? 0.0 : max(_3134, 0.0));
                        float _3135 = isnan(1.0) ? _4422 : (isnan(_4422) ? 1.0 : min(_4422, 1.0));
                        float _3136 = 1.0 - _3106;
                        float _3146 = (0.5 / (((_3135 * ((_3121 * _3136) + _3106)) + 9.9999999392252902907785028219223e-09) + (((_3135 * _3136) + _3106) * _3121))) * _3135;
                        float _4433 = isnan(0.0) ? _3146 : (isnan(_3146) ? 0.0 : max(_3146, 0.0));
                        float _3157 = (((_3107 * 3.1415927410125732421875) * (isnan(1.0) ? _4433 : (isnan(_4433) ? 1.0 : min(_4433, 1.0)))) / ((_3129 * _3129) * ((_3071 * 2.1991131305694580078125) + 3.141590118408203125))) * _3060;
                        _2912 = (_3075 * _3023.x) + _2981;
                        _2913 = (_3075 * _3023.y) + _2982;
                        _2914 = (_3075 * _3023.z) + _2983;
                        _2909 = (_3157 * _3040.x) + _2978;
                        _2910 = (_3157 * _3040.y) + _2979;
                        _2911 = (_3157 * _3040.z) + _2980;
                        if (_2985 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2978 = _2909;
                            _2979 = _2910;
                            _2980 = _2911;
                            _2981 = _2912;
                            _2982 = _2913;
                            _2983 = _2914;
                            _2984 = _2985;
                        }
                    }
                    frontier_phi_19_pred = _2914;
                    frontier_phi_19_pred_1 = _2913;
                    frontier_phi_19_pred_2 = _2912;
                    frontier_phi_19_pred_3 = _2911;
                    frontier_phi_19_pred_4 = _2910;
                    frontier_phi_19_pred_5 = _2909;
                }
                _2576 = frontier_phi_19_pred;
                _2574 = frontier_phi_19_pred_1;
                _2572 = frontier_phi_19_pred_2;
                _2570 = frontier_phi_19_pred_3;
                _2568 = frontier_phi_19_pred_4;
                _2566 = frontier_phi_19_pred_5;
                uint _2776 = _2775 + 1u;
                if (_2776 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2769 = _2566;
                    _2770 = _2568;
                    _2771 = _2570;
                    _2772 = _2572;
                    _2773 = _2574;
                    _2774 = _2576;
                    _2775 = _2776;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2565 = _2566;
            _2567 = _2568;
            _2569 = _2570;
            _2571 = _2572;
            _2573 = _2574;
            _2575 = _2576;
        }
        uvec4 _2579 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2580 = _2579.z;
        uint _2582 = (_2580 >> 8u) & 15u;
        float _2737;
        float _2739;
        float _2741;
        float _2743;
        float _2745;
        float _2747;
        if (((4294967295u << _2582) & _2428) == 0u)
        {
            _2737 = _2565;
            _2739 = _2567;
            _2741 = _2569;
            _2743 = _2571;
            _2745 = _2573;
            _2747 = _2575;
        }
        else
        {
            float _2762 = inversesqrt(dot(vec3(_2382, _2383, _2384), vec3(_2382, _2383, _2384)));
            float _2763 = _2762 * _2382;
            float _2764 = _2762 * _2383;
            float _2765 = _2762 * _2384;
            float frontier_phi_13_14_ladder;
            float frontier_phi_13_14_ladder_1;
            float frontier_phi_13_14_ladder_2;
            float frontier_phi_13_14_ladder_3;
            float frontier_phi_13_14_ladder_4;
            float frontier_phi_13_14_ladder_5;
            if (_2582 < ((_2580 >> 12u) & 15u))
            {
                float _2738;
                float _2740;
                float _2742;
                float _2744;
                float _2746;
                float _2748;
                float _2961 = _2565;
                float _2962 = _2567;
                float _2963 = _2569;
                float _2964 = _2571;
                float _2965 = _2573;
                float _2966 = _2575;
                uint _2967 = _2582;
                uint _2976;
                bool _2977;
                for (;;)
                {
                    _2976 = texelFetch(g_lightClassification, int((((_2422 << 5u) + (_2408 << 9u)) + (_2967 << 2u)) >> 2u)).x;
                    _2977 = _2976 == 0u;
                    float frontier_phi_27_pred;
                    float frontier_phi_27_pred_1;
                    float frontier_phi_27_pred_2;
                    float frontier_phi_27_pred_3;
                    float frontier_phi_27_pred_4;
                    float frontier_phi_27_pred_5;
                    if (_2977)
                    {
                        frontier_phi_27_pred = _2961;
                        frontier_phi_27_pred_1 = _2964;
                        frontier_phi_27_pred_2 = _2963;
                        frontier_phi_27_pred_3 = _2962;
                        frontier_phi_27_pred_4 = _2966;
                        frontier_phi_27_pred_5 = _2965;
                    }
                    else
                    {
                        float _3200;
                        float _3201;
                        float _3202;
                        float _3203;
                        float _3204;
                        float _3205;
                        float _3494;
                        float _3495;
                        float _3496;
                        float _3497;
                        float _3498;
                        float _3499;
                        float _3213 = _2961;
                        float _3214 = _2962;
                        float _3215 = _2963;
                        float _3216 = _2964;
                        float _3217 = _2965;
                        float _3218 = _2966;
                        uint _3219 = _2976;
                        uint _3220;
                        vec4 _3245;
                        float _3246;
                        vec4 _3261;
                        vec3 _3273;
                        vec4 _3288;
                        vec4 _3303;
                        float _3349;
                        bool _3350;
                        for (;;)
                        {
                            uint _3230 = ((_2967 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3219));
                            _3220 = (_3219 + 4294967295u) & _3219;
                            uint _3232 = _3230 * 40u;
                            _3245 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3232)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3232 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3232 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3232 + 3u)).x));
                            _3246 = _3245.w;
                            uint _3248 = (_3230 * 40u) + 4u;
                            _3261 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3248)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3248 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3248 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3248 + 3u)).x));
                            uint _3263 = (_3230 * 40u) + 8u;
                            _3273 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3263)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3263 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3263 + 2u)).x));
                            uint _3275 = (_3230 * 40u) + 16u;
                            _3288 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3275)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3275 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3275 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3275 + 3u)).x));
                            uint _3290 = (_3230 * 40u) + 20u;
                            _3303 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3290)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3290 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3290 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3290 + 3u)).x));
                            uint _3305 = (_3230 * 40u) + 24u;
                            vec4 _3318 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3305)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3305 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3305 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3305 + 3u)).x));
                            uint _3324 = (_3230 * 40u) + 28u;
                            vec4 _3337 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3324)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3324 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3324 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3324 + 3u)).x));
                            _3349 = fma(_2384, _3337.z, fma(_2383, _3337.y, _3337.x * _2382)) + _3337.w;
                            _3350 = !((fma(_2384, _3318.z, fma(_2383, _3318.y, _3318.x * _2382)) + _3318.w) <= 0.0);
                            float frontier_phi_33_pred;
                            float frontier_phi_33_pred_1;
                            float frontier_phi_33_pred_2;
                            float frontier_phi_33_pred_3;
                            float frontier_phi_33_pred_4;
                            float frontier_phi_33_pred_5;
                            if (_3350)
                            {
                                float _3377 = _3245.x - _2382;
                                float _3378 = _3245.y - _2383;
                                float _3379 = _3245.z - _2384;
                                float _3380 = dot(vec3(_3377, _3378, _3379), vec3(_3377, _3378, _3379));
                                float _3383 = inversesqrt(_3380);
                                float _3384 = _3383 * _3377;
                                float _3385 = _3383 * _3378;
                                float _3386 = _3383 * _3379;
                                float _3390 = 1.0 - (_3380 / (_3246 * _3246));
                                float _4444 = isnan(0.0) ? _3390 : (isnan(_3390) ? 0.0 : max(_3390, 0.0));
                                float _3391 = isnan(1.0) ? _4444 : (isnan(_4444) ? 1.0 : min(_4444, 1.0));
                                float _3395 = sqrt(_3380) * _3261.w;
                                float _3397 = 1.39999997615814208984375 / (_3395 + 1.39999997615814208984375);
                                float _3398 = _3397 * _3397;
                                float _3401 = ((1.0 - _3398) * dot(vec3(_3384, _3385, _3386), vec3(_1441, _1444, _1447))) + _3398;
                                float _3404 = _3395 * _3395;
                                float _3408 = (fma(_2384, _3288.z, fma(_2383, _3288.y, _3288.x * _2382)) + _3288.w) / _3349;
                                float _3409 = (fma(_2384, _3303.z, fma(_2383, _3303.y, _3303.x * _2382)) + _3303.w) / _3349;
                                float _3413 = 1.0 - dot(vec2(_3408, _3409), vec2(_3408, _3409));
                                float _4460 = isnan(0.0) ? _3413 : (isnan(_3413) ? 0.0 : max(_3413, 0.0));
                                float _3414 = isnan(1.0) ? _4460 : (isnan(_4460) ? 1.0 : min(_4460, 1.0));
                                float _3415 = _3414 * (((isnan(0.0) ? _3401 : (isnan(_3401) ? 0.0 : max(_3401, 0.0))) * _3391) / ((_3404 * 0.699999988079071044921875) + 1.0));
                                float _3427 = exp2(log2(1.0 / ((_3404 * 3.5) + 5.0)) * 0.25);
                                float _3429 = 1.0 - sqrt(_1305);
                                float _3436 = sqrt(1.0 - ((1.0 - (_3429 * _3429)) * (1.0 - (_3427 * _3427))));
                                float _3437 = _3436 * _3436;
                                float _3438 = _3437 * _3437;
                                float _3439 = _3384 - _2763;
                                float _3440 = _3385 - _2764;
                                float _3441 = _3386 - _2765;
                                float _3445 = inversesqrt(dot(vec3(_3439, _3440, _3441), vec3(_3439, _3440, _3441)));
                                float _3449 = dot(vec3(_1441, _1444, _1447), vec3((-0.0) - _2763, (-0.0) - _2764, (-0.0) - _2765));
                                float _4471 = isnan(0.0) ? _3449 : (isnan(_3449) ? 0.0 : max(_3449, 0.0));
                                float _3452 = isnan(1.0) ? _4471 : (isnan(_4471) ? 1.0 : min(_4471, 1.0));
                                float _3453 = dot(vec3(_1441, _1444, _1447), vec3(_3445 * _3439, _3445 * _3440, _3445 * _3441));
                                float _4482 = isnan(0.0) ? _3453 : (isnan(_3453) ? 0.0 : max(_3453, 0.0));
                                float _3456 = isnan(1.0) ? _4482 : (isnan(_4482) ? 1.0 : min(_4482, 1.0));
                                float _3460 = ((_3456 * _3456) * (_3438 + (-1.0))) + 1.0;
                                float _3461 = _3397 * _3437;
                                float _3462 = _3461 * _3461;
                                float _3468 = ((1.0 - _3462) * dot(vec3(_1441, _1444, _1447), vec3(_3384, _3385, _3386))) + _3462;
                                float _4493 = isnan(0.0) ? _3468 : (isnan(_3468) ? 0.0 : max(_3468, 0.0));
                                float _3469 = isnan(1.0) ? _4493 : (isnan(_4493) ? 1.0 : min(_4493, 1.0));
                                float _3470 = 1.0 - _3437;
                                float _3480 = (0.5 / (((_3469 * ((_3452 * _3470) + _3437)) + 9.9999999392252902907785028219223e-09) + (((_3469 * _3470) + _3437) * _3452))) * _3469;
                                float _4504 = isnan(0.0) ? _3480 : (isnan(_3480) ? 0.0 : max(_3480, 0.0));
                                float _3490 = (_3414 * _3391) * (((_3438 * 3.1415927410125732421875) * (isnan(1.0) ? _4504 : (isnan(_4504) ? 1.0 : min(_4504, 1.0)))) / ((_3460 * _3460) * ((_3404 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_33_pred = _3415 * _3261.x;
                                frontier_phi_33_pred_1 = _3490 * _3273.z;
                                frontier_phi_33_pred_2 = _3490 * _3273.y;
                                frontier_phi_33_pred_3 = _3490 * _3273.x;
                                frontier_phi_33_pred_4 = _3415 * _3261.y;
                                frontier_phi_33_pred_5 = _3415 * _3261.z;
                            }
                            else
                            {
                                frontier_phi_33_pred = 0.0;
                                frontier_phi_33_pred_1 = 0.0;
                                frontier_phi_33_pred_2 = 0.0;
                                frontier_phi_33_pred_3 = 0.0;
                                frontier_phi_33_pred_4 = 0.0;
                                frontier_phi_33_pred_5 = 0.0;
                            }
                            _3497 = frontier_phi_33_pred;
                            _3496 = frontier_phi_33_pred_1;
                            _3495 = frontier_phi_33_pred_2;
                            _3494 = frontier_phi_33_pred_3;
                            _3498 = frontier_phi_33_pred_4;
                            _3499 = frontier_phi_33_pred_5;
                            _3203 = _3497 + _3216;
                            _3204 = _3498 + _3217;
                            _3205 = _3499 + _3218;
                            _3200 = _3494 + _3213;
                            _3201 = _3495 + _3214;
                            _3202 = _3496 + _3215;
                            if (_3220 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3213 = _3200;
                                _3214 = _3201;
                                _3215 = _3202;
                                _3216 = _3203;
                                _3217 = _3204;
                                _3218 = _3205;
                                _3219 = _3220;
                                continue;
                            }
                        }
                        frontier_phi_27_pred = _3200;
                        frontier_phi_27_pred_1 = _3203;
                        frontier_phi_27_pred_2 = _3202;
                        frontier_phi_27_pred_3 = _3201;
                        frontier_phi_27_pred_4 = _3205;
                        frontier_phi_27_pred_5 = _3204;
                    }
                    _2738 = frontier_phi_27_pred;
                    _2744 = frontier_phi_27_pred_1;
                    _2742 = frontier_phi_27_pred_2;
                    _2740 = frontier_phi_27_pred_3;
                    _2748 = frontier_phi_27_pred_4;
                    _2746 = frontier_phi_27_pred_5;
                    uint _2968 = _2967 + 1u;
                    if (_2968 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2961 = _2738;
                        _2962 = _2740;
                        _2963 = _2742;
                        _2964 = _2744;
                        _2965 = _2746;
                        _2966 = _2748;
                        _2967 = _2968;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_13_14_ladder = _2748;
                frontier_phi_13_14_ladder_1 = _2746;
                frontier_phi_13_14_ladder_2 = _2744;
                frontier_phi_13_14_ladder_3 = _2742;
                frontier_phi_13_14_ladder_4 = _2740;
                frontier_phi_13_14_ladder_5 = _2738;
            }
            else
            {
                frontier_phi_13_14_ladder = _2575;
                frontier_phi_13_14_ladder_1 = _2573;
                frontier_phi_13_14_ladder_2 = _2571;
                frontier_phi_13_14_ladder_3 = _2569;
                frontier_phi_13_14_ladder_4 = _2567;
                frontier_phi_13_14_ladder_5 = _2565;
            }
            _2737 = frontier_phi_13_14_ladder_5;
            _2739 = frontier_phi_13_14_ladder_4;
            _2741 = frontier_phi_13_14_ladder_3;
            _2743 = frontier_phi_13_14_ladder_2;
            _2745 = frontier_phi_13_14_ladder_1;
            _2747 = frontier_phi_13_14_ladder;
        }
        float _2752 = isnan(1.0) ? _1484 : (isnan(_1484) ? 1.0 : min(_1484, 1.0));
        _2440 = (_2752 * _2743) + _2251;
        _2442 = (_2752 * _2745) + _2252;
        _2444 = (_2752 * _2747) + _2253;
        _2446 = ((_2737 * 0.039999999105930328369140625) * _2752) + _2328;
        _2448 = ((_2739 * 0.039999999105930328369140625) * _2752) + _2332;
        _2450 = ((_2741 * 0.039999999105930328369140625) * _2752) + _2336;
    }
    else
    {
        _2440 = _2251;
        _2442 = _2252;
        _2444 = _2253;
        _2446 = _2328;
        _2448 = _2332;
        _2450 = _2336;
    }
    float _2470 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2471 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2472 = cbSceneParam._m0[86u].x * ((_1383 / cbSceneParam._m0[86u].x) + ((_1500 * cbMtdParam._m0[12u].y) * dot(vec3(_1419, _1420, _1421), vec3(_224, _225, _226))));
    float _2473 = isnan(_2470) ? _2472 : (isnan(_2472) ? _2470 : min(_2472, _2470));
    float _2474 = isnan(_2471) ? _1384 : (isnan(_1384) ? _2471 : min(_1384, _2471));
    vec4 _2476 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2473, _2474), 0.0);
    float _2478 = _2476.x;
    bool _2498 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2478)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2478))) > _1320;
    float _2499 = _2498 ? _2473 : _1383;
    float _2500 = _2498 ? _2474 : _1384;
    vec4 _2502 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2499, _2500));
    vec4 _2507 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2499, _2500));
    float _2509 = _2507.x;
    bool _2514 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _2523 = (-0.0) - cbSceneParam._m0[2u].z;
    float _2529 = (_2514 ? (_2523 / (cbSceneParam._m0[2u].x - _2509)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2509))) - _1320;
    float _2531 = cbMtdParam._m0[42u].y + cbMtdParam._m0[36u].y;
    float _2532 = cbMtdParam._m0[42u].z + cbMtdParam._m0[36u].z;
    float _2533 = cbMtdParam._m0[42u].w + cbMtdParam._m0[36u].w;
    bool _2539 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _2543 = (isnan(_2529) ? 0.0 : (isnan(0.0) ? _2529 : max(0.0, _2529))) * (-1.44269502162933349609375);
    float _4535 = isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0));
    float _4546 = isnan(0.0) ? _1471 : (isnan(_1471) ? 0.0 : max(_1471, 0.0));
    float _4557 = isnan(0.0) ? _1472 : (isnan(_1472) ? 0.0 : max(_1472, 0.0));
    float _2666;
    float _2667;
    float _2668;
    if ((1.0 - _1227) > 0.00999999977648258209228515625)
    {
        vec4 _2587 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2499, _2500), 0.0);
        float _2589 = _2587.x;
        float _2595 = (_2514 ? (_2523 / (cbSceneParam._m0[2u].x - _2589)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2589))) - _1320;
        uint _2601 = floatBitsToUint(cbInstanceData._m0[_1242]).x * 14u;
        uint _2607 = _2601 + 4u;
        float _2616 = dot(vec3(cbLight._m0[_2601].xyz), vec3(_245, _246, _247));
        float _2623 = dot(vec3((-0.0) - _1376, (-0.0) - _1377, (-0.0) - _1378), vec3((-0.0) - _245, (-0.0) - _246, (-0.0) - _247));
        float _2628 = ((isnan(0.0) ? _2623 : (isnan(_2623) ? 0.0 : max(_2623, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _2616 : (isnan(_2616) ? 0.001000000047497451305389404296875 : max(_2616, 0.001000000047497451305389404296875)))) + 1.0;
        float _2630 = (-0.0) - ((isnan(_2595) ? 0.0 : (isnan(0.0) ? _2595 : max(0.0, _2595))) * _2628);
        _2666 = _2539 ? 0.0 : ((((_1286 * cbMtdParam._m0[36u].y) * cbLight._m0[_2607].x) / ((_2628 * _2531) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2531 * 1.44269502162933349609375) * _2630)));
        _2667 = _2539 ? 0.0 : ((((_1286 * cbMtdParam._m0[36u].z) * cbLight._m0[_2607].y) / ((_2628 * _2532) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2532 * 1.44269502162933349609375) * _2630)));
        _2668 = _2539 ? 0.0 : ((((_1286 * cbMtdParam._m0[36u].w) * cbLight._m0[_2607].z) / ((_2628 * _2533) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2533 * 1.44269502162933349609375) * _2630)));
    }
    else
    {
        _2666 = 0.0;
        _2667 = 0.0;
        _2668 = 0.0;
    }
    float _2684 = (_2666 + ((exp2(_2543 * (_2539 ? 0.0 : _2531)) * _2502.x) * cbSceneParam._m0[72u].w)) * _2192;
    float _2685 = (_2667 + ((exp2(_2543 * (_2539 ? 0.0 : _2532)) * _2502.y) * cbSceneParam._m0[72u].w)) * _2192;
    float _2686 = (_2668 + ((exp2(_2543 * (_2539 ? 0.0 : _2533)) * _2502.z) * cbSceneParam._m0[72u].w)) * _2192;
    float _2708 = _1383 / cbSceneParam._m0[86u].x;
    float _2709 = _1384 / cbSceneParam._m0[86u].y;
    vec4 _2723 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2708, _2709, (log2((isnan(cbSceneParam._m0[77u].w) ? _1320 : (isnan(_1320) ? cbSceneParam._m0[77u].w : min(_1320, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2725 = _2723.x;
    float _2726 = _2723.y;
    float _2727 = _2723.z;
    float _2728 = _2723.w;
    float _2826;
    float _2828;
    float _2830;
    float _2832;
    if (_1320 > cbSceneParam._m0[78u].w)
    {
        float _2790 = isnan(_1320) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1320 : min(cbSceneParam._m0[80u].w, _1320));
        float _2791 = _2790 / _1320;
        float _2802 = _2791 * _1369;
        float _2803 = _1370 * _2791;
        float _2804 = (-0.0) - _2803;
        float _2805 = _2791 * _1371;
        float _2807 = (cbSceneParam._m0[77u].w * _2804) / _2790;
        float _2808 = _2807 + cbSceneParam._m0[79u].w;
        float _2809 = cbSceneParam._m0[79u].w - _2803;
        float _2815 = sqrt(((_2802 * _2802) + (_2803 * _2803)) + (_2805 * _2805));
        float _2818 = (1.0 - (cbSceneParam._m0[77u].w / _2790)) * _2815;
        float _2824 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2825 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3162;
        if (abs((_2804 - _2807) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3162 = ((((_2808 > 0.0) ? exp2(_2824 * _2808) : (2.0 - exp2(_2825 * _2808))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2818;
        }
        else
        {
            float _2934 = 1.0 / cbSceneParam._m0[80u].x;
            float _2935 = isnan(_2809) ? _2808 : (isnan(_2808) ? _2809 : max(_2808, _2809));
            float _2936 = isnan(_2809) ? _2808 : (isnan(_2808) ? _2809 : min(_2808, _2809));
            float _2945 = isnan(0.0) ? _2935 : (isnan(_2935) ? 0.0 : min(_2935, 0.0));
            float _2946 = isnan(0.0) ? _2936 : (isnan(_2936) ? 0.0 : min(_2936, 0.0));
            _3162 = ((abs(_2815 / _2804) * cbSceneParam._m0[80u].y) * ((((_2945 - _2946) * 2.0) - ((exp2(_2824 * (isnan(0.0) ? _2935 : (isnan(_2935) ? 0.0 : max(_2935, 0.0)))) - exp2(_2824 * (isnan(0.0) ? _2936 : (isnan(_2936) ? 0.0 : max(_2936, 0.0))))) * _2934)) - ((exp2(_2825 * _2945) - exp2(_2825 * _2946)) * _2934))) + (_2818 * cbSceneParam._m0[80u].z);
        }
        vec4 _3164 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2708, _2709, 1.0), 0.0);
        float _3173 = exp2((_3162 * (-1.44269502162933349609375)) * (1.0 - _3164.w));
        float _3174 = log2(_3173);
        float _3190 = log2(_2728);
        _2826 = (exp2(_3190 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3174 * cbSceneParam._m0[78u].x)) * _3164.x) / cbSceneParam._m0[78u].x)) + _2725;
        _2828 = (exp2(_3190 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3174 * cbSceneParam._m0[78u].y)) * _3164.y) / cbSceneParam._m0[78u].y)) + _2726;
        _2830 = (exp2(_3190 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3174 * cbSceneParam._m0[78u].z)) * _3164.z) / cbSceneParam._m0[78u].z)) + _2727;
        _2832 = _3173 * _2728;
    }
    else
    {
        _2826 = _2725;
        _2828 = _2726;
        _2830 = _2727;
        _2832 = _2728;
    }
    bool _2844 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2846 = log2(_2832);
    float _2853 = exp2(_2846 * cbSceneParam._m0[78u].x) * ((_2684 + ((_2446 + ((_1515.x * _1496) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4535 : (isnan(_4535) ? 1.0 : min(_4535, 1.0))) * (_2440 + (_2193 * (isnan(0.0) ? _2182 : (isnan(_2182) ? 0.0 : max(_2182, 0.0)))))) - _2684) * _1227));
    float _2854 = exp2(_2846 * cbSceneParam._m0[78u].y) * ((_2685 + ((_2448 + ((_1515.y * _1496) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4546 : (isnan(_4546) ? 1.0 : min(_4546, 1.0))) * (_2442 + (_2193 * (isnan(0.0) ? _2185 : (isnan(_2185) ? 0.0 : max(_2185, 0.0)))))) - _2685) * _1227));
    float _2855 = exp2(_2846 * cbSceneParam._m0[78u].z) * ((_2686 + ((_2450 + ((_1515.z * _1496) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4557 : (isnan(_4557) ? 1.0 : min(_4557, 1.0))) * (_2444 + (_2193 * (isnan(0.0) ? _2188 : (isnan(_2188) ? 0.0 : max(_2188, 0.0)))))) - _2686) * _1227));
    vec4 _2863 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1383, _1384));
    float _2865 = _2863.x;
    float _2886 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2865)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2865))) - _1320) * cbMtdParam._m0[14u].w;
    float _4623 = isnan(0.0) ? _2886 : (isnan(_2886) ? 0.0 : max(_2886, 0.0));
    float _2888 = (cbInstanceData._m0[_1241 + 6u].w * (isnan(1.0) ? _3931 : (isnan(_3931) ? 1.0 : min(_3931, 1.0)))) * (isnan(1.0) ? _4623 : (isnan(_4623) ? 1.0 : min(_4623, 1.0)));
    float _2897 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2897 * (_2844 ? _2853 : (_2853 + (cbSceneParam._m0[72u].w * _2826)));
    SV_Target.y = _2897 * (_2844 ? _2854 : (_2854 + (cbSceneParam._m0[72u].w * _2828)));
    SV_Target.z = _2897 * (_2844 ? _2855 : (_2855 + (cbSceneParam._m0[72u].w * _2830)));
    SV_Target.w = _2888;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2888;
}


