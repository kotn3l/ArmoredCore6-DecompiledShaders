#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 2) uniform texture2D C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 3) uniform texture2D C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _823;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _175 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _176 = _175 * NORMAL.x;
    float _177 = _175 * NORMAL.y;
    float _178 = _175 * NORMAL.z;
    vec4 _197 = texture(sampler2D(C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _223 = texture(sampler2D(C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    float _231 = (_223.x * cbMtdParam._m0[12u].x) + (_197.x * cbMtdParam._m0[9u].x);
    float _232 = (_223.y * cbMtdParam._m0[12u].y) + (_197.y * cbMtdParam._m0[9u].y);
    float _233 = (_223.z * cbMtdParam._m0[12u].z) + (_197.z * cbMtdParam._m0[9u].z);
    vec4 _255 = texture(sampler2D(C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    vec4 _284 = texture(sampler2D(C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _309 = abs((fract(cbMtdParam._m0[14u].y * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _3249 = isnan(0.0) ? _309 : (isnan(_309) ? 0.0 : max(_309, 0.0));
    float _311 = isnan(1.0) ? _3249 : (isnan(_3249) ? 1.0 : min(_3249, 1.0));
    float _319 = (((_311 * _311) * (3.0 - (_311 * 2.0))) * cbMtdParam._m0[14u].x) - cbMtdParam._m0[13u].w;
    float _326 = inversesqrt(dot(vec3(_176, _177, _178), vec3(_176, _177, _178)));
    float _327 = _326 * _176;
    float _328 = _326 * _177;
    float _329 = _326 * _178;
    float _3260 = isnan(0.0) ? _231 : (isnan(_231) ? 0.0 : max(_231, 0.0));
    float _3271 = isnan(0.0) ? _232 : (isnan(_232) ? 0.0 : max(_232, 0.0));
    float _3282 = isnan(0.0) ? _233 : (isnan(_233) ? 0.0 : max(_233, 0.0));
    float _348 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _389 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _399 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _389);
    float _400 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _389);
    float _401 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _389);
    float _405 = inversesqrt(dot(vec3(_399, _400, _401), vec3(_399, _400, _401)));
    float _406 = _399 * _405;
    float _407 = _400 * _405;
    float _408 = _401 * _405;
    float _414 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _415 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _436 = fma(_329, cbSceneParam._m0[5u].z, fma(_328, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _327));
    float _439 = fma(_329, cbSceneParam._m0[6u].z, fma(_328, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _327));
    float _442 = fma(_329, cbSceneParam._m0[7u].z, fma(_328, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _327));
    uint _455 = uint(roundEven(NORMAL.w)) * 13u;
    uint _456 = _455 + 9u;
    uint _457 = _456 + uint(cbMatDynParam._m0[0u].w);
    float _463 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3260 : (isnan(_3260) ? 1.0 : min(_3260, 1.0)))) * cbInstanceData._m0[_457].x;
    float _464 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3271 : (isnan(_3271) ? 1.0 : min(_3271, 1.0)))) * cbInstanceData._m0[_457].y;
    float _465 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3282 : (isnan(_3282) ? 1.0 : min(_3282, 1.0)))) * cbInstanceData._m0[_457].z;
    float _3293 = isnan(0.0) ? _463 : (isnan(_463) ? 0.0 : max(_463, 0.0));
    float _466 = isnan(1.0) ? _3293 : (isnan(_3293) ? 1.0 : min(_3293, 1.0));
    float _3304 = isnan(0.0) ? _464 : (isnan(_464) ? 0.0 : max(_464, 0.0));
    float _467 = isnan(1.0) ? _3304 : (isnan(_3304) ? 1.0 : min(_3304, 1.0));
    float _3315 = isnan(0.0) ? _465 : (isnan(_465) ? 0.0 : max(_465, 0.0));
    float _468 = isnan(1.0) ? _3315 : (isnan(_3315) ? 1.0 : min(_3315, 1.0));
    vec4 _477 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _414, cbSceneParam._m0[86u].y * _415));
    float _480 = _477.x * TEXCOORD_4;
    float _481 = dot(vec3(_327, _328, _329), vec3(_406, _407, _408));
    float _484 = _481 * 2.0;
    float _488 = (_484 * _327) - _406;
    float _489 = (_484 * _328) - _407;
    float _490 = (_484 * _329) - _408;
    float _512 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _516 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _520 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _822;
    float _824;
    float _825;
    float _826;
    float _827;
    float _828;
    float _829;
    float _830;
    float _831;
    float _832;
    float _833;
    float _834;
    float _835;
    float _836;
    float _837;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _547 = fma(_520, cbModelParam._m0[26u].z, fma(_516, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _512));
        float _551 = fma(_520, cbModelParam._m0[27u].z, fma(_516, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _512));
        float _555 = fma(_520, cbModelParam._m0[28u].z, fma(_516, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _512));
        float _580 = _512 + _327;
        float _581 = _516 + _328;
        float _582 = _520 + _329;
        float _592 = fma(_582, cbModelParam._m0[26u].z, fma(_581, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _580)) - _547;
        float _593 = fma(_582, cbModelParam._m0[27u].z, fma(_581, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _580)) - _551;
        float _594 = fma(_582, cbModelParam._m0[28u].z, fma(_581, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _580)) - _555;
        float _598 = inversesqrt(dot(vec3(_592, _593, _594), vec3(_592, _593, _594)));
        float _611 = ((_598 * _592) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_547 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _612 = ((_598 * _593) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_551 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _613 = ((_598 * _594) / cbModelParam._m0[34u].z) + ((((((_555 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _616 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_611, _612, _613), 0.0);
        vec4 _623 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_611, _612, _613), 0.0);
        vec4 _630 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_611, _612, _613), 0.0);
        vec4 _637 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_611, _612, _613), 0.0);
        float _650 = exp2((_616.w + (-0.5)) * 20.0) * 2.0;
        float _651 = _650 * (_616.x + (-0.5));
        float _652 = _650 * (_616.y + (-0.5));
        float _653 = _650 * (_616.z + (-0.5));
        float _660 = exp2((_623.w + (-0.5)) * 20.0) * 2.0;
        float _661 = _660 * (_623.x + (-0.5));
        float _662 = _660 * (_623.y + (-0.5));
        float _663 = _660 * (_623.z + (-0.5));
        float _670 = exp2((_630.w + (-0.5)) * 20.0) * 2.0;
        float _671 = _670 * (_630.x + (-0.5));
        float _672 = _670 * (_630.y + (-0.5));
        float _673 = _670 * (_630.z + (-0.5));
        float _680 = exp2((_637.w + (-0.5)) * 20.0) * 2.0;
        float _681 = _680 * (_637.x + (-0.5));
        float _682 = _680 * (_637.y + (-0.5));
        float _683 = _680 * (_637.z + (-0.5));
        float _684 = isnan(0.0) ? _681 : (isnan(_681) ? 0.0 : max(_681, 0.0));
        float _685 = isnan(0.0) ? _682 : (isnan(_682) ? 0.0 : max(_682, 0.0));
        float _686 = isnan(0.0) ? _683 : (isnan(_683) ? 0.0 : max(_683, 0.0));
        float _687 = _651 * 0.5;
        float _688 = _661 * 0.5;
        float _689 = _671 * 0.5;
        float _690 = dot(vec3(_687, _688, _689), vec3(_687, _688, _689));
        float _695 = (_690 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_690);
        float _704 = (dot(vec3(_327, _328, _329), vec3(_695 * _687, _695 * _688, _695 * _689)) + 1.0) * 0.5;
        float _3341 = isnan(0.0) ? _704 : (isnan(_704) ? 0.0 : max(_704, 0.0));
        float _714 = sqrt(((_688 * _688) + (_687 * _687)) + (_689 * _689)) / (_684 + 9.9999997473787516355514526367188e-06);
        float _3352 = isnan(0.0) ? _714 : (isnan(_714) ? 0.0 : max(_714, 0.0));
        float _715 = isnan(1.0) ? _3352 : (isnan(_3352) ? 1.0 : min(_3352, 1.0));
        float _716 = _715 * 2.0;
        float _720 = (1.0 - _715) / (_715 + 1.0);
        float _3363 = isnan(0.0) ? _720 : (isnan(_720) ? 0.0 : max(_720, 0.0));
        float _721 = isnan(1.0) ? _3363 : (isnan(_3363) ? 1.0 : min(_3363, 1.0));
        float _730 = ((((1.0 - _721) * (_716 + 2.0)) * exp2(log2(isnan(1.0) ? _3341 : (isnan(_3341) ? 1.0 : min(_3341, 1.0))) * (_716 + 1.0))) + _721) * _684;
        float _731 = _652 * 0.5;
        float _732 = _662 * 0.5;
        float _733 = _672 * 0.5;
        float _734 = dot(vec3(_731, _732, _733), vec3(_731, _732, _733));
        float _739 = (_734 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_734);
        float _747 = (dot(vec3(_327, _328, _329), vec3(_739 * _731, _739 * _732, _739 * _733)) + 1.0) * 0.5;
        float _3374 = isnan(0.0) ? _747 : (isnan(_747) ? 0.0 : max(_747, 0.0));
        float _756 = sqrt(((_732 * _732) + (_731 * _731)) + (_733 * _733)) / (_685 + 9.9999997473787516355514526367188e-06);
        float _3385 = isnan(0.0) ? _756 : (isnan(_756) ? 0.0 : max(_756, 0.0));
        float _757 = isnan(1.0) ? _3385 : (isnan(_3385) ? 1.0 : min(_3385, 1.0));
        float _758 = _757 * 2.0;
        float _762 = (1.0 - _757) / (_757 + 1.0);
        float _3396 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
        float _763 = isnan(1.0) ? _3396 : (isnan(_3396) ? 1.0 : min(_3396, 1.0));
        float _772 = ((((1.0 - _763) * (_758 + 2.0)) * exp2(log2(isnan(1.0) ? _3374 : (isnan(_3374) ? 1.0 : min(_3374, 1.0))) * (_758 + 1.0))) + _763) * _685;
        float _773 = _653 * 0.5;
        float _774 = _663 * 0.5;
        float _775 = _673 * 0.5;
        float _776 = dot(vec3(_773, _774, _775), vec3(_773, _774, _775));
        float _781 = (_776 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_776);
        float _789 = (dot(vec3(_327, _328, _329), vec3(_781 * _773, _781 * _774, _781 * _775)) + 1.0) * 0.5;
        float _3407 = isnan(0.0) ? _789 : (isnan(_789) ? 0.0 : max(_789, 0.0));
        float _798 = sqrt(((_774 * _774) + (_773 * _773)) + (_775 * _775)) / (_686 + 9.9999997473787516355514526367188e-06);
        float _3418 = isnan(0.0) ? _798 : (isnan(_798) ? 0.0 : max(_798, 0.0));
        float _799 = isnan(1.0) ? _3418 : (isnan(_3418) ? 1.0 : min(_3418, 1.0));
        float _800 = _799 * 2.0;
        float _804 = (1.0 - _799) / (_799 + 1.0);
        float _3429 = isnan(0.0) ? _804 : (isnan(_804) ? 0.0 : max(_804, 0.0));
        float _805 = isnan(1.0) ? _3429 : (isnan(_3429) ? 1.0 : min(_3429, 1.0));
        float _814 = ((((1.0 - _805) * (_800 + 2.0)) * exp2(log2(isnan(1.0) ? _3407 : (isnan(_3407) ? 1.0 : min(_3407, 1.0))) * (_800 + 1.0))) + _805) * _686;
        _822 = _653;
        _824 = _652;
        _825 = _651;
        _826 = _663;
        _827 = _662;
        _828 = _661;
        _829 = _673;
        _830 = _672;
        _831 = _671;
        _832 = _686;
        _833 = _685;
        _834 = _684;
        _835 = cbModelParam._m0[36u].z * (isnan(0.0) ? _730 : (isnan(_730) ? 0.0 : max(_730, 0.0)));
        _836 = cbModelParam._m0[36u].z * (isnan(0.0) ? _772 : (isnan(_772) ? 0.0 : max(_772, 0.0)));
        _837 = cbModelParam._m0[36u].z * (isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0)));
    }
    else
    {
        _822 = _823;
        _824 = _823;
        _825 = _823;
        _826 = _823;
        _827 = _823;
        _828 = _823;
        _829 = _823;
        _830 = _823;
        _831 = _823;
        _832 = _823;
        _833 = _823;
        _834 = _823;
        _835 = 0.0;
        _836 = 0.0;
        _837 = 0.0;
    }
    float _1132;
    float _1133;
    float _1134;
    float _1135;
    float _1136;
    float _1137;
    float _1138;
    float _1139;
    float _1140;
    float _1141;
    float _1142;
    float _1143;
    float _1144;
    float _1145;
    float _1146;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _863 = fma(_520, cbModelParam._m0[30u].z, fma(_516, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _512));
        float _867 = fma(_520, cbModelParam._m0[31u].z, fma(_516, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _512));
        float _871 = fma(_520, cbModelParam._m0[32u].z, fma(_516, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _512));
        float _894 = _512 + _327;
        float _895 = _516 + _328;
        float _896 = _520 + _329;
        float _906 = fma(_896, cbModelParam._m0[30u].z, fma(_895, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _894)) - _863;
        float _907 = fma(_896, cbModelParam._m0[31u].z, fma(_895, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _894)) - _867;
        float _908 = fma(_896, cbModelParam._m0[32u].z, fma(_895, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _894)) - _871;
        float _912 = inversesqrt(dot(vec3(_906, _907, _908), vec3(_906, _907, _908)));
        float _925 = ((_912 * _906) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_863 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _926 = ((_912 * _907) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_867 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _927 = ((_912 * _908) / cbModelParam._m0[35u].z) + ((((((_871 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _929 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_925, _926, _927), 0.0);
        vec4 _936 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_925, _926, _927), 0.0);
        vec4 _943 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_925, _926, _927), 0.0);
        vec4 _950 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_925, _926, _927), 0.0);
        float _962 = exp2((_929.w + (-0.5)) * 20.0) * 2.0;
        float _963 = _962 * (_929.x + (-0.5));
        float _964 = _962 * (_929.y + (-0.5));
        float _965 = _962 * (_929.z + (-0.5));
        float _972 = exp2((_936.w + (-0.5)) * 20.0) * 2.0;
        float _973 = _972 * (_936.x + (-0.5));
        float _974 = _972 * (_936.y + (-0.5));
        float _975 = _972 * (_936.z + (-0.5));
        float _982 = exp2((_943.w + (-0.5)) * 20.0) * 2.0;
        float _983 = _982 * (_943.x + (-0.5));
        float _984 = _982 * (_943.y + (-0.5));
        float _985 = _982 * (_943.z + (-0.5));
        float _992 = exp2((_950.w + (-0.5)) * 20.0) * 2.0;
        float _993 = _992 * (_950.x + (-0.5));
        float _994 = _992 * (_950.y + (-0.5));
        float _995 = _992 * (_950.z + (-0.5));
        float _996 = isnan(0.0) ? _993 : (isnan(_993) ? 0.0 : max(_993, 0.0));
        float _997 = isnan(0.0) ? _994 : (isnan(_994) ? 0.0 : max(_994, 0.0));
        float _998 = isnan(0.0) ? _995 : (isnan(_995) ? 0.0 : max(_995, 0.0));
        float _999 = _963 * 0.5;
        float _1000 = _973 * 0.5;
        float _1001 = _983 * 0.5;
        float _1002 = dot(vec3(_999, _1000, _1001), vec3(_999, _1000, _1001));
        float _1007 = (_1002 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1002);
        float _1015 = (dot(vec3(_327, _328, _329), vec3(_1007 * _999, _1007 * _1000, _1007 * _1001)) + 1.0) * 0.5;
        float _3470 = isnan(0.0) ? _1015 : (isnan(_1015) ? 0.0 : max(_1015, 0.0));
        float _1024 = sqrt(((_1000 * _1000) + (_999 * _999)) + (_1001 * _1001)) / (_996 + 9.9999997473787516355514526367188e-06);
        float _3481 = isnan(0.0) ? _1024 : (isnan(_1024) ? 0.0 : max(_1024, 0.0));
        float _1025 = isnan(1.0) ? _3481 : (isnan(_3481) ? 1.0 : min(_3481, 1.0));
        float _1026 = _1025 * 2.0;
        float _1030 = (1.0 - _1025) / (_1025 + 1.0);
        float _3492 = isnan(0.0) ? _1030 : (isnan(_1030) ? 0.0 : max(_1030, 0.0));
        float _1031 = isnan(1.0) ? _3492 : (isnan(_3492) ? 1.0 : min(_3492, 1.0));
        float _1040 = ((((1.0 - _1031) * (_1026 + 2.0)) * exp2(log2(isnan(1.0) ? _3470 : (isnan(_3470) ? 1.0 : min(_3470, 1.0))) * (_1026 + 1.0))) + _1031) * _996;
        float _1041 = _964 * 0.5;
        float _1042 = _974 * 0.5;
        float _1043 = _984 * 0.5;
        float _1044 = dot(vec3(_1041, _1042, _1043), vec3(_1041, _1042, _1043));
        float _1049 = (_1044 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1044);
        float _1057 = (dot(vec3(_327, _328, _329), vec3(_1049 * _1041, _1049 * _1042, _1049 * _1043)) + 1.0) * 0.5;
        float _3503 = isnan(0.0) ? _1057 : (isnan(_1057) ? 0.0 : max(_1057, 0.0));
        float _1066 = sqrt(((_1042 * _1042) + (_1041 * _1041)) + (_1043 * _1043)) / (_997 + 9.9999997473787516355514526367188e-06);
        float _3514 = isnan(0.0) ? _1066 : (isnan(_1066) ? 0.0 : max(_1066, 0.0));
        float _1067 = isnan(1.0) ? _3514 : (isnan(_3514) ? 1.0 : min(_3514, 1.0));
        float _1068 = _1067 * 2.0;
        float _1072 = (1.0 - _1067) / (_1067 + 1.0);
        float _3525 = isnan(0.0) ? _1072 : (isnan(_1072) ? 0.0 : max(_1072, 0.0));
        float _1073 = isnan(1.0) ? _3525 : (isnan(_3525) ? 1.0 : min(_3525, 1.0));
        float _1082 = ((((1.0 - _1073) * (_1068 + 2.0)) * exp2(log2(isnan(1.0) ? _3503 : (isnan(_3503) ? 1.0 : min(_3503, 1.0))) * (_1068 + 1.0))) + _1073) * _997;
        float _1083 = _965 * 0.5;
        float _1084 = _975 * 0.5;
        float _1085 = _985 * 0.5;
        float _1086 = dot(vec3(_1083, _1084, _1085), vec3(_1083, _1084, _1085));
        float _1091 = (_1086 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1086);
        float _1099 = (dot(vec3(_327, _328, _329), vec3(_1091 * _1083, _1091 * _1084, _1091 * _1085)) + 1.0) * 0.5;
        float _3536 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
        float _1108 = sqrt(((_1084 * _1084) + (_1083 * _1083)) + (_1085 * _1085)) / (_998 + 9.9999997473787516355514526367188e-06);
        float _3547 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
        float _1109 = isnan(1.0) ? _3547 : (isnan(_3547) ? 1.0 : min(_3547, 1.0));
        float _1110 = _1109 * 2.0;
        float _1114 = (1.0 - _1109) / (_1109 + 1.0);
        float _3558 = isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0));
        float _1115 = isnan(1.0) ? _3558 : (isnan(_3558) ? 1.0 : min(_3558, 1.0));
        float _1124 = ((((1.0 - _1115) * (_1110 + 2.0)) * exp2(log2(isnan(1.0) ? _3536 : (isnan(_3536) ? 1.0 : min(_3536, 1.0))) * (_1110 + 1.0))) + _1115) * _998;
        _1132 = _965;
        _1133 = _964;
        _1134 = _963;
        _1135 = _975;
        _1136 = _974;
        _1137 = _973;
        _1138 = _985;
        _1139 = _984;
        _1140 = _983;
        _1141 = _998;
        _1142 = _997;
        _1143 = _996;
        _1144 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1040 : (isnan(_1040) ? 0.0 : max(_1040, 0.0)));
        _1145 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0)));
        _1146 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0)));
    }
    else
    {
        _1132 = _823;
        _1133 = _823;
        _1134 = _823;
        _1135 = _823;
        _1136 = _823;
        _1137 = _823;
        _1138 = _823;
        _1139 = _823;
        _1140 = _823;
        _1141 = _823;
        _1142 = _823;
        _1143 = _823;
        _1144 = 0.0;
        _1145 = 0.0;
        _1146 = 0.0;
    }
    float _1156 = (cbModelParam._m0[1u].x * (_1144 - _835)) + _835;
    float _1157 = (cbModelParam._m0[1u].x * (_1145 - _836)) + _836;
    float _1158 = (cbModelParam._m0[1u].x * (_1146 - _837)) + _837;
    float _1179 = fma(_1158, cbSceneParam._m0[89u].z, fma(_1157, cbSceneParam._m0[89u].y, _1156 * cbSceneParam._m0[89u].x));
    float _1182 = fma(_1158, cbSceneParam._m0[90u].z, fma(_1157, cbSceneParam._m0[90u].y, _1156 * cbSceneParam._m0[90u].x));
    float _1185 = fma(_1158, cbSceneParam._m0[91u].z, fma(_1157, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1156));
    float _1200 = _488 * 0.5;
    float _1201 = _489 * 0.5;
    float _1202 = _490 * 0.5;
    float _1203 = dot(vec4(_1200, _1201, _1202, 1.0), vec4(_1134, _1137, _1140, _1143));
    float _1206 = dot(vec4(_1200, _1201, _1202, 1.0), vec4(_1133, _1136, _1139, _1142));
    float _1209 = dot(vec4(_1200, _1201, _1202, 1.0), vec4(_1132, _1135, _1138, _1141));
    float _1243;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1216 = dot(vec4(_1200, _1201, _1202, 1.0), vec4(_822, _826, _829, _832));
        float _1220 = dot(vec4(_1200, _1201, _1202, 1.0), vec4(_824, _827, _830, _833));
        float _1224 = dot(vec4(_1200, _1201, _1202, 1.0), vec4(_825, _828, _831, _834));
        float _1231 = dot(vec4(cbModelParam._m0[39u]), vec4(_1200, _1201, _1202, 1.0));
        _1243 = dot(vec3(isnan(0.0) ? _1224 : (isnan(_1224) ? 0.0 : max(_1224, 0.0)), isnan(0.0) ? _1220 : (isnan(_1220) ? 0.0 : max(_1220, 0.0)), isnan(0.0) ? _1216 : (isnan(_1216) ? 0.0 : max(_1216, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1231) ? 0.0 : (isnan(0.0) ? _1231 : max(0.0, _1231))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1243 = 1.0;
    }
    float _1254;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1245 = dot(vec4(cbModelParam._m0[40u]), vec4(_1200, _1201, _1202, 1.0));
        _1254 = dot(vec3(isnan(0.0) ? _1203 : (isnan(_1203) ? 0.0 : max(_1203, 0.0)), isnan(0.0) ? _1206 : (isnan(_1206) ? 0.0 : max(_1206, 0.0)), isnan(0.0) ? _1209 : (isnan(_1209) ? 0.0 : max(_1209, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1245) ? 0.0 : (isnan(0.0) ? _1245 : max(0.0, _1245))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1254 = 1.0;
    }
    float _1258 = (_1254 * cbModelParam._m0[1u].x) + (_1243 * (1.0 - cbModelParam._m0[1u].x));
    float _1267 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1348;
    float _1350;
    float _1352;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1315 = fma(_520, cbModelParam._m0[13u].z, fma(_516, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _512)) + cbModelParam._m0[13u].w;
        float _1319 = fma(_520, cbModelParam._m0[14u].z, fma(_516, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _512)) + cbModelParam._m0[14u].w;
        float _1323 = fma(_520, cbModelParam._m0[15u].z, fma(_516, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _512)) + cbModelParam._m0[15u].w;
        float _1326 = fma(_490, cbModelParam._m0[13u].z, fma(_489, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _488));
        float _1329 = fma(_490, cbModelParam._m0[14u].z, fma(_489, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _488));
        float _1332 = fma(_490, cbModelParam._m0[15u].z, fma(_489, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _488));
        float _1358;
        if (_1326 > 0.0)
        {
            _1358 = abs((1.0 - _1315) / _1326);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1326 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1315 + 1.0) / _1326);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1358 = frontier_phi_14_12_ladder;
        }
        float _1531;
        if (_1329 > 0.0)
        {
            _1531 = abs((1.0 - _1319) / _1329);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1329 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1319 + 1.0) / _1329);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1531 = frontier_phi_23_19_ladder;
        }
        float _1827;
        if (_1332 > 0.0)
        {
            _1827 = abs((1.0 - _1323) / _1332);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1332 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1323 + 1.0) / _1332);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _1827 = frontier_phi_35_30_ladder;
        }
        float _1829 = isnan(_1531) ? _1358 : (isnan(_1358) ? _1531 : min(_1358, _1531));
        float _1830 = isnan(_1827) ? _1829 : (isnan(_1829) ? _1827 : min(_1829, _1827));
        float _1834 = (_1830 * _1326) + _1315;
        float _1835 = (_1830 * _1329) + _1319;
        float _1836 = (_1830 * _1332) + _1323;
        float _1837 = _1830 * 9.9999997473787516355514526367188e-05;
        float _1839 = (-1.0) - _1837;
        float _1841 = _1837 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_1836 > _1841) || ((_1836 < _1839) || ((_1835 > _1841) || ((_1835 < _1839) || ((_1834 < _1839) || (_1834 > _1841))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1981 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1836, cbModelParam._m0[9u].z, fma(_1835, cbModelParam._m0[9u].y, _1834 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1836, cbModelParam._m0[10u].z, fma(_1835, cbModelParam._m0[10u].y, _1834 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1836, cbModelParam._m0[11u].z, fma(_1835, cbModelParam._m0[11u].y, _1834 * cbModelParam._m0[11u].x))), _1267);
            frontier_phi_13_35_ladder = _1981.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _1981.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _1981.x * cbModelParam._m0[1u].y;
        }
        _1348 = frontier_phi_13_35_ladder_2;
        _1350 = frontier_phi_13_35_ladder_1;
        _1352 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1336 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_488, _489, _490), _1267);
        _1348 = _1336.x * cbModelParam._m0[1u].y;
        _1350 = _1336.y * cbModelParam._m0[1u].y;
        _1352 = _1336.z * cbModelParam._m0[1u].y;
    }
    float _1355 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1447;
    float _1449;
    float _1451;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1411 = fma(_520, cbModelParam._m0[21u].z, fma(_516, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _512)) + cbModelParam._m0[21u].w;
        float _1415 = fma(_520, cbModelParam._m0[22u].z, fma(_516, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _512)) + cbModelParam._m0[22u].w;
        float _1419 = fma(_520, cbModelParam._m0[23u].z, fma(_516, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _512)) + cbModelParam._m0[23u].w;
        float _1422 = fma(_490, cbModelParam._m0[21u].z, fma(_489, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _488));
        float _1425 = fma(_490, cbModelParam._m0[22u].z, fma(_489, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _488));
        float _1428 = fma(_490, cbModelParam._m0[23u].z, fma(_489, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _488));
        float _1536;
        if (_1422 > 0.0)
        {
            _1536 = abs((1.0 - _1411) / _1422);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1422 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1411 + 1.0) / _1422);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1536 = frontier_phi_25_21_ladder;
        }
        float _1854;
        if (_1425 > 0.0)
        {
            _1854 = abs((1.0 - _1415) / _1425);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1425 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1415 + 1.0) / _1425);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1854 = frontier_phi_37_32_ladder;
        }
        float _2127;
        if (_1428 > 0.0)
        {
            _2127 = abs((1.0 - _1419) / _1428);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1428 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1419 + 1.0) / _1428);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2127 = frontier_phi_47_44_ladder;
        }
        float _2129 = isnan(_1854) ? _1536 : (isnan(_1536) ? _1854 : min(_1536, _1854));
        float _2130 = isnan(_2127) ? _2129 : (isnan(_2129) ? _2127 : min(_2129, _2127));
        float _2134 = (_2130 * _1422) + _1411;
        float _2135 = (_2130 * _1425) + _1415;
        float _2136 = (_2130 * _1428) + _1419;
        float _2137 = _2130 * 9.9999997473787516355514526367188e-05;
        float _2138 = (-1.0) - _2137;
        float _2140 = _2137 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2136 > _2140) || ((_2136 < _2138) || ((_2135 > _2140) || ((_2135 < _2138) || ((_2134 < _2138) || (_2134 > _2140))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2227 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2136, cbModelParam._m0[17u].z, fma(_2135, cbModelParam._m0[17u].y, _2134 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2136, cbModelParam._m0[18u].z, fma(_2135, cbModelParam._m0[18u].y, _2134 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2136, cbModelParam._m0[19u].z, fma(_2135, cbModelParam._m0[19u].y, _2134 * cbModelParam._m0[19u].x))), _1355);
            frontier_phi_22_47_ladder = _2227.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2227.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2227.x * cbModelParam._m0[1u].z;
        }
        _1447 = frontier_phi_22_47_ladder_2;
        _1449 = frontier_phi_22_47_ladder_1;
        _1451 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1431 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_488, _489, _490), _1355);
        _1447 = _1431.x * cbModelParam._m0[1u].z;
        _1449 = _1431.y * cbModelParam._m0[1u].z;
        _1451 = _1431.z * cbModelParam._m0[1u].z;
    }
    float _1463 = _480 * 0.01200000010430812835693359375;
    float _1465 = _1463 * ((cbModelParam._m0[1u].w * (_1447 - _1348)) + _1348);
    float _1466 = _1463 * ((cbModelParam._m0[1u].w * (_1449 - _1350)) + _1350);
    float _1467 = _1463 * ((cbModelParam._m0[1u].w * (_1451 - _1352)) + _1352);
    float _1470 = fma(_1467, cbSceneParam._m0[89u].z, fma(_1466, cbSceneParam._m0[89u].y, _1465 * cbSceneParam._m0[89u].x));
    float _1473 = fma(_1467, cbSceneParam._m0[90u].z, fma(_1466, cbSceneParam._m0[90u].y, _1465 * cbSceneParam._m0[90u].x));
    float _1476 = fma(_1467, cbSceneParam._m0[91u].z, fma(_1466, cbSceneParam._m0[91u].y, _1465 * cbSceneParam._m0[91u].x));
    float _1510 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1514 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1518 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1522 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1523 = _1510 / _1522;
    float _1524 = _1514 / _1522;
    float _1525 = _1518 / _1522;
    float _1672;
    float _1673;
    float _1674;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1552 = ((uint(_1525 > cbSceneParam._m0[59u].y) + uint(_1525 > cbSceneParam._m0[59u].x)) + uint(_1525 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1553 = _1552 + 43u;
        uint _1561 = _1552 + 44u;
        uint _1569 = _1552 + 45u;
        uint _1577 = _1552 + 46u;
        float _1588 = fma(_1522, cbSceneParam._m0[_1553].w, fma(_1518, cbSceneParam._m0[_1553].z, fma(_1514, cbSceneParam._m0[_1553].y, _1510 * cbSceneParam._m0[_1553].x)));
        float _1592 = fma(_1522, cbSceneParam._m0[_1561].w, fma(_1518, cbSceneParam._m0[_1561].z, fma(_1514, cbSceneParam._m0[_1561].y, _1510 * cbSceneParam._m0[_1561].x)));
        float _1600 = fma(_1522, cbSceneParam._m0[_1577].w, fma(_1518, cbSceneParam._m0[_1577].z, fma(_1514, cbSceneParam._m0[_1577].y, _1510 * cbSceneParam._m0[_1577].x)));
        float _1605 = cbSceneParam._m0[33u].z * _1600;
        float _1607 = cbSceneParam._m0[33u].w * _1600;
        float _1610 = fma(_1522, cbSceneParam._m0[_1569].w, fma(_1518, cbSceneParam._m0[_1569].z, fma(_1514, cbSceneParam._m0[_1569].y, _1510 * cbSceneParam._m0[_1569].x))) / _1600;
        float _1658 = (cbSceneParam._m0[33u].x - sqrt(((_1524 * _1524) + (_1523 * _1523)) + (_1525 * _1525))) * cbSceneParam._m0[33u].y;
        float _3684 = isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0));
        float _1665 = (isnan(1.0) ? _3684 : (isnan(_3684) ? 1.0 : min(_3684, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1605 + _1588) / _1600, (_1607 + _1592) / _1600), _1610), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1607 + _1588) / _1600, (_1592 - _1605) / _1600), _1610), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1588 - _1605) / _1600, (_1592 - _1607) / _1600), _1610), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1588 - _1607) / _1600, (_1605 + _1592) / _1600), _1610), 0.0)).x), vec4(0.25)));
        _1672 = 1.0 - (_1665 * cbSceneParam._m0[34u].x);
        _1673 = 1.0 - (_1665 * cbSceneParam._m0[34u].y);
        _1674 = 1.0 - (_1665 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1672 = 1.0;
        _1673 = 1.0;
        _1674 = 1.0;
    }
    float _1738;
    float _1740;
    float _1742;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1726 = fma(_1522, cbSceneParam._m0[63u].w, fma(_1518, cbSceneParam._m0[63u].z, fma(_1514, cbSceneParam._m0[63u].y, _1510 * cbSceneParam._m0[63u].x)));
        float _1727 = fma(_1522, cbSceneParam._m0[60u].w, fma(_1518, cbSceneParam._m0[60u].z, fma(_1514, cbSceneParam._m0[60u].y, _1510 * cbSceneParam._m0[60u].x))) / _1726;
        float _1728 = fma(_1522, cbSceneParam._m0[61u].w, fma(_1518, cbSceneParam._m0[61u].z, fma(_1514, cbSceneParam._m0[61u].y, _1510 * cbSceneParam._m0[61u].x))) / _1726;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_1727 >= cbSceneParam._m0[64u].x) && (_1728 >= cbSceneParam._m0[64u].y)) && (_1727 <= cbSceneParam._m0[64u].z)) && (_1728 <= cbSceneParam._m0[64u].w))
        {
            float _1867 = fma(_1522, cbSceneParam._m0[62u].w, fma(_1518, cbSceneParam._m0[62u].z, fma(_1514, cbSceneParam._m0[62u].y, _1510 * cbSceneParam._m0[62u].x))) / _1726;
            float _1871 = isnan(cbSceneParam._m0[41u].w) ? _1867 : (isnan(_1867) ? cbSceneParam._m0[41u].w : max(_1867, cbSceneParam._m0[41u].w));
            float _1914 = (cbSceneParam._m0[33u].x - sqrt(((_1524 * _1524) + (_1523 * _1523)) + (_1525 * _1525))) * cbSceneParam._m0[33u].y;
            float _3700 = isnan(0.0) ? _1914 : (isnan(_1914) ? 0.0 : max(_1914, 0.0));
            float _1921 = (isnan(1.0) ? _3700 : (isnan(_3700) ? 1.0 : min(_3700, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1727, cbSceneParam._m0[33u].w + _1728), _1871), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1727, _1728 - cbSceneParam._m0[33u].z), _1871), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1727 - cbSceneParam._m0[33u].z, _1728 - cbSceneParam._m0[33u].w), _1871), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1727 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1728), _1871), 0.0)).x), vec4(0.25)));
            float _1925 = 1.0 - (_1921 * cbSceneParam._m0[34u].x);
            float _1926 = 1.0 - (_1921 * cbSceneParam._m0[34u].y);
            float _1927 = 1.0 - (_1921 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_1927) ? _1674 : (isnan(_1674) ? _1927 : min(_1674, _1927));
            frontier_phi_34_33_ladder_1 = isnan(_1926) ? _1673 : (isnan(_1673) ? _1926 : min(_1673, _1926));
            frontier_phi_34_33_ladder_2 = isnan(_1925) ? _1672 : (isnan(_1672) ? _1925 : min(_1672, _1925));
        }
        else
        {
            frontier_phi_34_33_ladder = _1674;
            frontier_phi_34_33_ladder_1 = _1673;
            frontier_phi_34_33_ladder_2 = _1672;
        }
        _1738 = frontier_phi_34_33_ladder_2;
        _1740 = frontier_phi_34_33_ladder_1;
        _1742 = frontier_phi_34_33_ladder;
    }
    else
    {
        _1738 = _1672;
        _1740 = _1673;
        _1742 = _1674;
    }
    uvec4 _1747 = floatBitsToUint(cbInstanceData._m0[_455 + 5u]);
    uint _1749 = _1747.x * 14u;
    uint _1750 = _1749 + 13u;
    float _1757 = _480 + (-1.0);
    float _1762 = (cbLight._m0[_1750].x * _1757) + 1.0;
    float _1763 = (cbLight._m0[_1750].y * _1757) + 1.0;
    float _1764 = (cbLight._m0[_1750].z * _1757) + 1.0;
    float _1765 = (cbLight._m0[_1750].w * _1757) + 1.0;
    uint _1766 = _1749 + 5u;
    float _1772 = isnan(1.0) ? _1763 : (isnan(_1763) ? 1.0 : min(_1763, 1.0));
    uint _1776 = _1749 + 4u;
    float _1786 = isnan(1.0) ? _1762 : (isnan(_1762) ? 1.0 : min(_1762, 1.0));
    uint _1790 = _1749 | 1u;
    float _1801 = dot(vec3(cbLight._m0[_1749].xyz), vec3(_327, _328, _329));
    float _1804 = dot(vec3(cbLight._m0[_1790].xyz), vec3(_327, _328, _329));
    float _3736 = isnan(0.0) ? _1801 : (isnan(_1801) ? 0.0 : max(_1801, 0.0));
    float _3747 = isnan(0.0) ? _1804 : (isnan(_1804) ? 0.0 : max(_1804, 0.0));
    float _1809 = (isnan(1.0) ? _3736 : (isnan(_3736) ? 1.0 : min(_3736, 1.0))) * 0.3183098733425140380859375;
    float _1811 = (isnan(1.0) ? _3747 : (isnan(_3747) ? 1.0 : min(_3747, 1.0))) * 0.3183098733425140380859375;
    float _1818 = ((cbLight._m0[_1766].x * _1772) * _1811) + (((cbLight._m0[_1776].x * _1738) * _1786) * _1809);
    float _1819 = ((_1772 * cbLight._m0[_1766].y) * _1811) + (((cbLight._m0[_1776].y * _1740) * _1786) * _1809);
    float _1820 = ((_1772 * cbLight._m0[_1766].z) * _1811) + (((cbLight._m0[_1776].z * _1742) * _1786) * _1809);
    uvec4 _1824 = floatBitsToUint(cbLight._m0[_1749 + 12u]);
    bool _1826 = _1824.x == 0u;
    float _1928;
    float _1930;
    float _1932;
    if (_1826)
    {
        _1928 = _1818;
        _1930 = _1819;
        _1932 = _1820;
    }
    else
    {
        uint _1936 = _1749 + 6u;
        float _1952 = (dot(vec3(cbLight._m0[_1749 + 2u].xyz), vec3(_327, _328, _329)) * 0.5) + 0.5;
        float _1953 = _1952 * _1952;
        float _3758 = isnan(0.0) ? _1953 : (isnan(_1953) ? 0.0 : max(_1953, 0.0));
        float _1954 = isnan(1.0) ? _3758 : (isnan(_3758) ? 1.0 : min(_3758, 1.0));
        float _1955 = isnan(1.0) ? _1764 : (isnan(_1764) ? 1.0 : min(_1764, 1.0));
        _1928 = (((cbLight._m0[_1936].x * 0.3183098733425140380859375) * _1954) * _1955) + _1818;
        _1930 = (((cbLight._m0[_1936].y * 0.3183098733425140380859375) * _1954) * _1955) + _1819;
        _1932 = (((cbLight._m0[_1936].z * 0.3183098733425140380859375) * _1954) * _1955) + _1820;
    }
    bool _1935 = _1824.y == 0u;
    float _1990;
    float _1992;
    float _1994;
    if (_1935)
    {
        _1990 = _1928;
        _1992 = _1930;
        _1994 = _1932;
    }
    else
    {
        uint _2098 = _1749 + 7u;
        float _2114 = (dot(vec3(cbLight._m0[_1749 + 3u].xyz), vec3(_327, _328, _329)) * 0.5) + 0.5;
        float _2115 = _2114 * _2114;
        float _3774 = isnan(0.0) ? _2115 : (isnan(_2115) ? 0.0 : max(_2115, 0.0));
        float _2116 = isnan(1.0) ? _3774 : (isnan(_3774) ? 1.0 : min(_3774, 1.0));
        float _2117 = isnan(1.0) ? _1765 : (isnan(_1765) ? 1.0 : min(_1765, 1.0));
        _1990 = (((cbLight._m0[_2098].x * 0.3183098733425140380859375) * _2116) * _2117) + _1928;
        _1992 = (((cbLight._m0[_2098].y * 0.3183098733425140380859375) * _2116) * _2117) + _1930;
        _1994 = (((cbLight._m0[_2098].z * 0.3183098733425140380859375) * _2116) * _2117) + _1932;
    }
    uint _1996 = _1749 + 8u;
    float _2002 = cbLight._m0[_1749].x + _406;
    float _2003 = cbLight._m0[_1749].y + _407;
    float _2004 = cbLight._m0[_1749].z + _408;
    float _2008 = inversesqrt(dot(vec3(_2002, _2003, _2004), vec3(_2002, _2003, _2004)));
    float _2012 = dot(vec3(_327, _328, _329), vec3(cbLight._m0[_1749].xyz));
    float _3790 = isnan(0.0) ? _2012 : (isnan(_2012) ? 0.0 : max(_2012, 0.0));
    float _2015 = isnan(1.0) ? _3790 : (isnan(_3790) ? 1.0 : min(_3790, 1.0));
    float _3801 = isnan(0.0) ? _481 : (isnan(_481) ? 0.0 : max(_481, 0.0));
    float _2016 = isnan(1.0) ? _3801 : (isnan(_3801) ? 1.0 : min(_3801, 1.0));
    float _2017 = dot(vec3(cbLight._m0[_1749].xyz), vec3(_2002 * _2008, _2003 * _2008, _2004 * _2008));
    float _3812 = isnan(0.0) ? _2017 : (isnan(_2017) ? 0.0 : max(_2017, 0.0));
    float _2028 = (exp2(log2(1.0 - (isnan(1.0) ? _3812 : (isnan(_3812) ? 1.0 : min(_3812, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2034 = (0.5 / ((_2015 + 9.9999999392252902907785028219223e-09) + _2016)) * _2015;
    float _3823 = isnan(0.0) ? _2034 : (isnan(_2034) ? 0.0 : max(_2034, 0.0));
    float _2036 = (isnan(1.0) ? _3823 : (isnan(_3823) ? 1.0 : min(_3823, 1.0))) * 0.31831014156341552734375;
    uint _2050 = _1749 + 9u;
    float _2056 = cbLight._m0[_1790].x + _406;
    float _2057 = cbLight._m0[_1790].y + _407;
    float _2058 = cbLight._m0[_1790].z + _408;
    float _2062 = inversesqrt(dot(vec3(_2056, _2057, _2058), vec3(_2056, _2057, _2058)));
    float _2066 = dot(vec3(_327, _328, _329), vec3(cbLight._m0[_1790].xyz));
    float _3834 = isnan(0.0) ? _2066 : (isnan(_2066) ? 0.0 : max(_2066, 0.0));
    float _2069 = isnan(1.0) ? _3834 : (isnan(_3834) ? 1.0 : min(_3834, 1.0));
    float _2070 = dot(vec3(cbLight._m0[_1790].xyz), vec3(_2056 * _2062, _2057 * _2062, _2058 * _2062));
    float _3845 = isnan(0.0) ? _2070 : (isnan(_2070) ? 0.0 : max(_2070, 0.0));
    float _2079 = (exp2(log2(1.0 - (isnan(1.0) ? _3845 : (isnan(_3845) ? 1.0 : min(_3845, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2083 = (0.5 / ((_2069 + 9.9999999392252902907785028219223e-09) + _2016)) * _2069;
    float _3856 = isnan(0.0) ? _2083 : (isnan(_2083) ? 0.0 : max(_2083, 0.0));
    float _2085 = (isnan(1.0) ? _3856 : (isnan(_3856) ? 1.0 : min(_3856, 1.0))) * 0.31831014156341552734375;
    float _2095 = (((_2079 * cbLight._m0[_2050].x) * _2085) * _1772) + ((((cbLight._m0[_1996].x * _1738) * _2028) * _2036) * _1786);
    float _2096 = (((_2079 * cbLight._m0[_2050].y) * _2085) * _1772) + ((((cbLight._m0[_1996].y * _1740) * _2028) * _2036) * _1786);
    float _2097 = (((_2079 * cbLight._m0[_2050].z) * _2085) * _1772) + ((((cbLight._m0[_1996].z * _1742) * _2028) * _2036) * _1786);
    float _2153;
    float _2155;
    float _2157;
    if (_1826)
    {
        _2153 = _2095;
        _2155 = _2096;
        _2157 = _2097;
    }
    else
    {
        uint _2159 = _1749 + 10u;
        uint _2165 = _1749 + 2u;
        float _2171 = cbLight._m0[_2165].x + _406;
        float _2172 = cbLight._m0[_2165].y + _407;
        float _2173 = cbLight._m0[_2165].z + _408;
        float _2177 = inversesqrt(dot(vec3(_2171, _2172, _2173), vec3(_2171, _2172, _2173)));
        float _2181 = dot(vec3(_327, _328, _329), vec3(cbLight._m0[_2165].xyz));
        float _3867 = isnan(0.0) ? _2181 : (isnan(_2181) ? 0.0 : max(_2181, 0.0));
        float _2184 = isnan(1.0) ? _3867 : (isnan(_3867) ? 1.0 : min(_3867, 1.0));
        float _2185 = dot(vec3(cbLight._m0[_2165].xyz), vec3(_2171 * _2177, _2172 * _2177, _2173 * _2177));
        float _3878 = isnan(0.0) ? _2185 : (isnan(_2185) ? 0.0 : max(_2185, 0.0));
        float _2194 = (exp2(log2(1.0 - (isnan(1.0) ? _3878 : (isnan(_3878) ? 1.0 : min(_3878, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2198 = (0.5 / ((_2184 + 9.9999999392252902907785028219223e-09) + _2016)) * _2184;
        float _3889 = isnan(0.0) ? _2198 : (isnan(_2198) ? 0.0 : max(_2198, 0.0));
        float _2200 = (isnan(1.0) ? _3889 : (isnan(_3889) ? 1.0 : min(_3889, 1.0))) * 0.31831014156341552734375;
        float _2201 = isnan(1.0) ? _1764 : (isnan(_1764) ? 1.0 : min(_1764, 1.0));
        _2153 = (((_2194 * cbLight._m0[_2159].x) * _2200) * _2201) + _2095;
        _2155 = (((_2194 * cbLight._m0[_2159].y) * _2200) * _2201) + _2096;
        _2157 = (((_2194 * cbLight._m0[_2159].z) * _2200) * _2201) + _2097;
    }
    float _2232;
    float _2234;
    float _2236;
    if (_1935)
    {
        _2232 = _2153;
        _2234 = _2155;
        _2236 = _2157;
    }
    else
    {
        uint _2243 = _1749 + 11u;
        uint _2249 = _1749 + 3u;
        float _2255 = cbLight._m0[_2249].x + _406;
        float _2256 = cbLight._m0[_2249].y + _407;
        float _2257 = cbLight._m0[_2249].z + _408;
        float _2261 = inversesqrt(dot(vec3(_2255, _2256, _2257), vec3(_2255, _2256, _2257)));
        float _2265 = dot(vec3(_327, _328, _329), vec3(cbLight._m0[_2249].xyz));
        float _3905 = isnan(0.0) ? _2265 : (isnan(_2265) ? 0.0 : max(_2265, 0.0));
        float _2268 = isnan(1.0) ? _3905 : (isnan(_3905) ? 1.0 : min(_3905, 1.0));
        float _2269 = dot(vec3(cbLight._m0[_2249].xyz), vec3(_2255 * _2261, _2256 * _2261, _2257 * _2261));
        float _3916 = isnan(0.0) ? _2269 : (isnan(_2269) ? 0.0 : max(_2269, 0.0));
        float _2278 = (exp2(log2(1.0 - (isnan(1.0) ? _3916 : (isnan(_3916) ? 1.0 : min(_3916, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2282 = (0.5 / ((_2268 + 9.9999999392252902907785028219223e-09) + _2016)) * _2268;
        float _3927 = isnan(0.0) ? _2282 : (isnan(_2282) ? 0.0 : max(_2282, 0.0));
        float _2284 = (isnan(1.0) ? _3927 : (isnan(_3927) ? 1.0 : min(_3927, 1.0))) * 0.31831014156341552734375;
        float _2285 = isnan(1.0) ? _1765 : (isnan(_1765) ? 1.0 : min(_1765, 1.0));
        _2232 = (((_2278 * cbLight._m0[_2243].x) * _2284) * _2285) + _2153;
        _2234 = (((_2278 * cbLight._m0[_2243].y) * _2284) * _2285) + _2155;
        _2236 = (((_2278 * cbLight._m0[_2243].z) * _2284) * _2285) + _2157;
    }
    float _2351;
    float _2353;
    float _2355;
    float _2357;
    float _2359;
    float _2361;
    if (_1747.y == 0u)
    {
        uvec4 _2306 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2307 = _2306.x;
        uint _2318 = uint((float(_2306.y) * floor(float(uint(cbSceneParam._m0[85u].y * _415) / _2307))) + floor(float(uint(cbSceneParam._m0[85u].x * _414) / _2307)));
        float _2328 = (log2(_1525 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2329 = isnan(0.0) ? _2328 : (isnan(_2328) ? 0.0 : max(_2328, 0.0));
        uint _2332 = uint(isnan(14.0) ? _2329 : (isnan(_2329) ? 14.0 : min(_2329, 14.0)));
        uvec4 _2337 = texelFetch(g_lightClusterGridBuffer, int(((_2332 << 2u) + (_2318 << 6u)) >> 2u));
        uint _2338 = _2337.x;
        uint _2339 = _2306.z;
        float _2447;
        float _2449;
        float _2451;
        float _2453;
        float _2455;
        float _2457;
        if (((((1u << ((_2339 >> 4u) & 15u)) + 4294967295u) & _2338) == 0u) || ((_2339 & 240u) == 0u))
        {
            _2447 = 0.0;
            _2449 = 0.0;
            _2451 = 0.0;
            _2453 = 0.0;
            _2455 = 0.0;
            _2457 = 0.0;
        }
        else
        {
            float _2448;
            float _2450;
            float _2452;
            float _2454;
            float _2456;
            float _2458;
            float _2598 = 0.0;
            float _2599 = 0.0;
            float _2600 = 0.0;
            float _2601 = 0.0;
            float _2602 = 0.0;
            float _2603 = 0.0;
            uint _2604 = 0u;
            uint _2613;
            bool _2614;
            for (;;)
            {
                _2613 = texelFetch(g_lightClassification, int((((_2332 << 5u) + (_2318 << 9u)) + (_2604 << 2u)) >> 2u)).x;
                _2614 = _2613 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_2614)
                {
                    frontier_phi_66_pred = _2603;
                    frontier_phi_66_pred_1 = _2602;
                    frontier_phi_66_pred_2 = _2601;
                    frontier_phi_66_pred_3 = _2600;
                    frontier_phi_66_pred_4 = _2599;
                    frontier_phi_66_pred_5 = _2598;
                }
                else
                {
                    float _2722;
                    float _2723;
                    float _2724;
                    float _2725;
                    float _2726;
                    float _2727;
                    uint _2728;
                    _2722 = _2598;
                    _2723 = _2599;
                    _2724 = _2600;
                    _2725 = _2601;
                    _2726 = _2602;
                    _2727 = _2603;
                    _2728 = _2613;
                    float _2654;
                    float _2655;
                    float _2656;
                    float _2657;
                    float _2658;
                    float _2659;
                    for (;;)
                    {
                        uint _2732 = uint(findLSB(_2728)) + (_2604 << 5u);
                        uint _2729 = (_2728 + 4294967295u) & _2728;
                        uint _2734 = _2732 * 48u;
                        vec4 _2748 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2734)).x, texelFetch(g_PointLightRenderingBuffer, int(_2734 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2734 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2734 + 3u)).x));
                        uint _2754 = (_2732 * 48u) + 4u;
                        vec4 _2767 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2754)).x, texelFetch(g_PointLightRenderingBuffer, int(_2754 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2754 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2754 + 3u)).x));
                        uint _2773 = (_2732 * 48u) + 8u;
                        vec3 _2784 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2773)).x, texelFetch(g_PointLightRenderingBuffer, int(_2773 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2773 + 2u)).x));
                        float _2788 = _2748.x - _1523;
                        float _2789 = _2748.y - _1524;
                        float _2790 = _2748.z - _1525;
                        float _2791 = dot(vec3(_2788, _2789, _2790), vec3(_2788, _2789, _2790));
                        float _2794 = inversesqrt(_2791);
                        float _2803 = 1.0 - (_2791 * _2748.w);
                        float _3953 = isnan(0.0) ? _2803 : (isnan(_2803) ? 0.0 : max(_2803, 0.0));
                        float _2804 = isnan(1.0) ? _3953 : (isnan(_3953) ? 1.0 : min(_3953, 1.0));
                        float _2805 = sqrt(_2791) * _2767.w;
                        float _2808 = 1.39999997615814208984375 / (_2805 + 1.39999997615814208984375);
                        float _2809 = _2808 * _2808;
                        float _2812 = ((1.0 - _2809) * dot(vec3(_436, _439, _442), vec3(_2794 * _2788, _2794 * _2789, _2794 * _2790))) + _2809;
                        float _2815 = _2805 * _2805;
                        float _2819 = ((isnan(0.0) ? _2812 : (isnan(_2812) ? 0.0 : max(_2812, 0.0))) * _2804) / ((_2815 * 0.699999988079071044921875) + 1.0);
                        float _2823 = (-0.0) - _1523;
                        float _2824 = (-0.0) - _1524;
                        float _2825 = (-0.0) - _1525;
                        float _2829 = inversesqrt(dot(vec3(_2823, _2824, _2825), vec3(_2823, _2824, _2825)));
                        float _2833 = dot(vec3(_436, _439, _442), vec3(_2829 * _2823, _2829 * _2824, _2829 * _2825));
                        float _3969 = isnan(0.0) ? _2833 : (isnan(_2833) ? 0.0 : max(_2833, 0.0));
                        float _3980 = isnan(0.0) ? _2812 : (isnan(_2812) ? 0.0 : max(_2812, 0.0));
                        float _2837 = isnan(1.0) ? _3980 : (isnan(_3980) ? 1.0 : min(_3980, 1.0));
                        float _2841 = (0.5 / (((isnan(1.0) ? _3969 : (isnan(_3969) ? 1.0 : min(_3969, 1.0))) + 9.9999999392252902907785028219223e-09) + _2837)) * _2837;
                        float _3991 = isnan(0.0) ? _2841 : (isnan(_2841) ? 0.0 : max(_2841, 0.0));
                        float _2850 = (((isnan(1.0) ? _3991 : (isnan(_3991) ? 1.0 : min(_3991, 1.0))) * 3.1415927410125732421875) / ((_2815 * 2.1991131305694580078125) + 3.141590118408203125)) * _2804;
                        _2657 = (_2819 * _2767.x) + _2725;
                        _2658 = (_2819 * _2767.y) + _2726;
                        _2659 = (_2819 * _2767.z) + _2727;
                        _2654 = (_2850 * _2784.x) + _2722;
                        _2655 = (_2850 * _2784.y) + _2723;
                        _2656 = (_2850 * _2784.z) + _2724;
                        if (_2729 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2722 = _2654;
                            _2723 = _2655;
                            _2724 = _2656;
                            _2725 = _2657;
                            _2726 = _2658;
                            _2727 = _2659;
                            _2728 = _2729;
                        }
                    }
                    frontier_phi_66_pred = _2659;
                    frontier_phi_66_pred_1 = _2658;
                    frontier_phi_66_pred_2 = _2657;
                    frontier_phi_66_pred_3 = _2656;
                    frontier_phi_66_pred_4 = _2655;
                    frontier_phi_66_pred_5 = _2654;
                }
                _2458 = frontier_phi_66_pred;
                _2456 = frontier_phi_66_pred_1;
                _2454 = frontier_phi_66_pred_2;
                _2452 = frontier_phi_66_pred_3;
                _2450 = frontier_phi_66_pred_4;
                _2448 = frontier_phi_66_pred_5;
                uint _2605 = _2604 + 1u;
                if (_2605 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2598 = _2448;
                    _2599 = _2450;
                    _2600 = _2452;
                    _2601 = _2454;
                    _2602 = _2456;
                    _2603 = _2458;
                    _2604 = _2605;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2447 = _2448;
            _2449 = _2450;
            _2451 = _2452;
            _2453 = _2454;
            _2455 = _2456;
            _2457 = _2458;
        }
        uvec4 _2461 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2462 = _2461.z;
        uint _2464 = (_2462 >> 8u) & 15u;
        float _2569;
        float _2571;
        float _2573;
        float _2575;
        float _2577;
        float _2579;
        if (((4294967295u << _2464) & _2338) == 0u)
        {
            _2569 = _2447;
            _2571 = _2449;
            _2573 = _2451;
            _2575 = _2453;
            _2577 = _2455;
            _2579 = _2457;
        }
        else
        {
            float _2594 = inversesqrt(dot(vec3(_1523, _1524, _1525), vec3(_1523, _1524, _1525)));
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2464 < ((_2462 >> 12u) & 15u))
            {
                float _2570;
                float _2572;
                float _2574;
                float _2576;
                float _2578;
                float _2580;
                float _2705 = _2447;
                float _2706 = _2449;
                float _2707 = _2451;
                float _2708 = _2453;
                float _2709 = _2455;
                float _2710 = _2457;
                uint _2711 = _2464;
                uint _2720;
                bool _2721;
                for (;;)
                {
                    _2720 = texelFetch(g_lightClassification, int((((_2332 << 5u) + (_2318 << 9u)) + (_2711 << 2u)) >> 2u)).x;
                    _2721 = _2720 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_2721)
                    {
                        frontier_phi_72_pred = _2710;
                        frontier_phi_72_pred_1 = _2709;
                        frontier_phi_72_pred_2 = _2708;
                        frontier_phi_72_pred_3 = _2707;
                        frontier_phi_72_pred_4 = _2706;
                        frontier_phi_72_pred_5 = _2705;
                    }
                    else
                    {
                        float _2855;
                        float _2856;
                        float _2857;
                        float _2858;
                        float _2859;
                        float _2860;
                        float _3106;
                        float _3107;
                        float _3108;
                        float _3109;
                        float _3110;
                        float _3111;
                        float _2868 = _2705;
                        float _2869 = _2706;
                        float _2870 = _2707;
                        float _2871 = _2708;
                        float _2872 = _2709;
                        float _2873 = _2710;
                        uint _2874 = _2720;
                        uint _2875;
                        vec4 _2900;
                        float _2901;
                        vec4 _2916;
                        vec3 _2928;
                        vec4 _2943;
                        vec4 _2959;
                        float _3006;
                        bool _3007;
                        for (;;)
                        {
                            uint _2885 = ((_2711 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2874));
                            _2875 = (_2874 + 4294967295u) & _2874;
                            uint _2887 = _2885 * 40u;
                            _2900 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2887)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2887 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2887 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2887 + 3u)).x));
                            _2901 = _2900.w;
                            uint _2903 = (_2885 * 40u) + 4u;
                            _2916 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2903)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2903 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2903 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2903 + 3u)).x));
                            uint _2918 = (_2885 * 40u) + 8u;
                            _2928 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2918)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2918 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2918 + 2u)).x));
                            uint _2930 = (_2885 * 40u) + 16u;
                            _2943 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2930)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2930 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2930 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2930 + 3u)).x));
                            uint _2946 = (_2885 * 40u) + 20u;
                            _2959 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2946)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2946 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2946 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2946 + 3u)).x));
                            uint _2962 = (_2885 * 40u) + 24u;
                            vec4 _2975 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2962)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2962 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2962 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2962 + 3u)).x));
                            uint _2981 = (_2885 * 40u) + 28u;
                            vec4 _2994 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2981)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2981 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2981 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2981 + 3u)).x));
                            _3006 = fma(_1525, _2994.z, fma(_1524, _2994.y, _2994.x * _1523)) + _2994.w;
                            _3007 = !((fma(_1525, _2975.z, fma(_1524, _2975.y, _2975.x * _1523)) + _2975.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3007)
                            {
                                float _3034 = _2900.x - _1523;
                                float _3035 = _2900.y - _1524;
                                float _3036 = _2900.z - _1525;
                                float _3037 = dot(vec3(_3034, _3035, _3036), vec3(_3034, _3035, _3036));
                                float _3040 = inversesqrt(_3037);
                                float _3041 = _3040 * _3034;
                                float _3042 = _3040 * _3035;
                                float _3043 = _3040 * _3036;
                                float _3047 = 1.0 - (_3037 / (_2901 * _2901));
                                float _4002 = isnan(0.0) ? _3047 : (isnan(_3047) ? 0.0 : max(_3047, 0.0));
                                float _3048 = isnan(1.0) ? _4002 : (isnan(_4002) ? 1.0 : min(_4002, 1.0));
                                float _3052 = sqrt(_3037) * _2916.w;
                                float _3054 = 1.39999997615814208984375 / (_3052 + 1.39999997615814208984375);
                                float _3055 = _3054 * _3054;
                                float _3056 = 1.0 - _3055;
                                float _3058 = (_3056 * dot(vec3(_3041, _3042, _3043), vec3(_436, _439, _442))) + _3055;
                                float _3061 = _3052 * _3052;
                                float _3065 = (fma(_1525, _2943.z, fma(_1524, _2943.y, _2943.x * _1523)) + _2943.w) / _3006;
                                float _3066 = (fma(_1525, _2959.z, fma(_1524, _2959.y, _2959.x * _1523)) + _2959.w) / _3006;
                                float _3070 = 1.0 - dot(vec2(_3065, _3066), vec2(_3065, _3066));
                                float _4018 = isnan(0.0) ? _3070 : (isnan(_3070) ? 0.0 : max(_3070, 0.0));
                                float _3071 = isnan(1.0) ? _4018 : (isnan(_4018) ? 1.0 : min(_4018, 1.0));
                                float _3072 = _3071 * (((isnan(0.0) ? _3058 : (isnan(_3058) ? 0.0 : max(_3058, 0.0))) * _3048) / ((_3061 * 0.699999988079071044921875) + 1.0));
                                float _3082 = dot(vec3(_436, _439, _442), vec3((-0.0) - (_1523 * _2594), (-0.0) - (_1524 * _2594), (-0.0) - (_1525 * _2594)));
                                float _4029 = isnan(0.0) ? _3082 : (isnan(_3082) ? 0.0 : max(_3082, 0.0));
                                float _3090 = (_3056 * dot(vec3(_436, _439, _442), vec3(_3041, _3042, _3043))) + _3055;
                                float _4040 = isnan(0.0) ? _3090 : (isnan(_3090) ? 0.0 : max(_3090, 0.0));
                                float _3091 = isnan(1.0) ? _4040 : (isnan(_4040) ? 1.0 : min(_4040, 1.0));
                                float _3095 = (0.5 / (((isnan(1.0) ? _4029 : (isnan(_4029) ? 1.0 : min(_4029, 1.0))) + 9.9999999392252902907785028219223e-09) + _3091)) * _3091;
                                float _4051 = isnan(0.0) ? _3095 : (isnan(_3095) ? 0.0 : max(_3095, 0.0));
                                float _3102 = (_3071 * _3048) * (((isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0))) * 3.1415927410125732421875) / ((_3061 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_78_pred = _3072 * _2916.y;
                                frontier_phi_78_pred_1 = _3072 * _2916.x;
                                frontier_phi_78_pred_2 = _3102 * _2928.z;
                                frontier_phi_78_pred_3 = _3102 * _2928.y;
                                frontier_phi_78_pred_4 = _3102 * _2928.x;
                                frontier_phi_78_pred_5 = _3072 * _2916.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3110 = frontier_phi_78_pred;
                            _3109 = frontier_phi_78_pred_1;
                            _3108 = frontier_phi_78_pred_2;
                            _3107 = frontier_phi_78_pred_3;
                            _3106 = frontier_phi_78_pred_4;
                            _3111 = frontier_phi_78_pred_5;
                            _2858 = _3109 + _2871;
                            _2859 = _3110 + _2872;
                            _2860 = _3111 + _2873;
                            _2855 = _3106 + _2868;
                            _2856 = _3107 + _2869;
                            _2857 = _3108 + _2870;
                            if (_2875 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2868 = _2855;
                                _2869 = _2856;
                                _2870 = _2857;
                                _2871 = _2858;
                                _2872 = _2859;
                                _2873 = _2860;
                                _2874 = _2875;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _2860;
                        frontier_phi_72_pred_1 = _2859;
                        frontier_phi_72_pred_2 = _2858;
                        frontier_phi_72_pred_3 = _2857;
                        frontier_phi_72_pred_4 = _2856;
                        frontier_phi_72_pred_5 = _2855;
                    }
                    _2580 = frontier_phi_72_pred;
                    _2578 = frontier_phi_72_pred_1;
                    _2576 = frontier_phi_72_pred_2;
                    _2574 = frontier_phi_72_pred_3;
                    _2572 = frontier_phi_72_pred_4;
                    _2570 = frontier_phi_72_pred_5;
                    uint _2712 = _2711 + 1u;
                    if (_2712 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2705 = _2570;
                        _2706 = _2572;
                        _2707 = _2574;
                        _2708 = _2576;
                        _2709 = _2578;
                        _2710 = _2580;
                        _2711 = _2712;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _2580;
                frontier_phi_60_61_ladder_1 = _2578;
                frontier_phi_60_61_ladder_2 = _2574;
                frontier_phi_60_61_ladder_3 = _2572;
                frontier_phi_60_61_ladder_4 = _2570;
                frontier_phi_60_61_ladder_5 = _2576;
            }
            else
            {
                frontier_phi_60_61_ladder = _2457;
                frontier_phi_60_61_ladder_1 = _2455;
                frontier_phi_60_61_ladder_2 = _2451;
                frontier_phi_60_61_ladder_3 = _2449;
                frontier_phi_60_61_ladder_4 = _2447;
                frontier_phi_60_61_ladder_5 = _2453;
            }
            _2569 = frontier_phi_60_61_ladder_4;
            _2571 = frontier_phi_60_61_ladder_3;
            _2573 = frontier_phi_60_61_ladder_2;
            _2575 = frontier_phi_60_61_ladder_5;
            _2577 = frontier_phi_60_61_ladder_1;
            _2579 = frontier_phi_60_61_ladder;
        }
        float _2584 = isnan(1.0) ? _480 : (isnan(_480) ? 1.0 : min(_480, 1.0));
        _2351 = (_2584 * _2575) + _1990;
        _2353 = (_2584 * _2577) + _1992;
        _2355 = (_2584 * _2579) + _1994;
        _2357 = ((_2569 * 0.039999999105930328369140625) * _2584) + _2232;
        _2359 = ((_2571 * 0.039999999105930328369140625) * _2584) + _2234;
        _2361 = ((_2573 * 0.039999999105930328369140625) * _2584) + _2236;
    }
    else
    {
        _2351 = _1990;
        _2353 = _1992;
        _2355 = _1994;
        _2357 = _2232;
        _2359 = _2234;
        _2361 = _2236;
    }
    uint _2367 = _456 + uint(cbMatDynParam._m0[0u].w);
    float _2373 = (_319 * (((cbMtdParam._m0[11u].x * cbMtdParam._m0[13u].z) * _284.x) + ((cbMtdParam._m0[10u].x * cbMtdParam._m0[13u].x) * _255.x))) * cbInstanceData._m0[_2367].x;
    float _2374 = (_319 * (((cbMtdParam._m0[11u].y * cbMtdParam._m0[13u].z) * _284.y) + ((cbMtdParam._m0[10u].y * cbMtdParam._m0[13u].x) * _255.y))) * cbInstanceData._m0[_2367].y;
    float _2375 = (_319 * (((cbMtdParam._m0[11u].z * cbMtdParam._m0[13u].z) * _284.z) + ((cbMtdParam._m0[10u].z * cbMtdParam._m0[13u].x) * _255.z))) * cbInstanceData._m0[_2367].z;
    float _4067 = isnan(0.0) ? _466 : (isnan(_466) ? 0.0 : max(_466, 0.0));
    float _4078 = isnan(0.0) ? _467 : (isnan(_467) ? 0.0 : max(_467, 0.0));
    float _4089 = isnan(0.0) ? _468 : (isnan(_468) ? 0.0 : max(_468, 0.0));
    float _2392 = (((isnan(1.0) ? _4067 : (isnan(_4067) ? 1.0 : min(_4067, 1.0))) * (_2351 + ((isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0))) * _480))) + ((_2357 + ((isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0))) * _1258)) * cbPerFrame._m0[3u].x)) + _2373;
    float _2394 = (_2374 + ((_2359 + ((isnan(0.0) ? _1473 : (isnan(_1473) ? 0.0 : max(_1473, 0.0))) * _1258)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4078 : (isnan(_4078) ? 1.0 : min(_4078, 1.0))) * (_2353 + ((isnan(0.0) ? _1182 : (isnan(_1182) ? 0.0 : max(_1182, 0.0))) * _480)));
    float _2396 = (_2375 + ((_2361 + ((isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0))) * _1258)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4089 : (isnan(_4089) ? 1.0 : min(_4089, 1.0))) * (_2355 + ((isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0))) * _480)));
    float _4115 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2409 = isnan(1.0) ? _4115 : (isnan(_4115) ? 1.0 : min(_4115, 1.0));
    uint _2410 = _455 + 6u;
    float _2418 = _414 / cbSceneParam._m0[86u].x;
    float _2419 = _415 / cbSceneParam._m0[86u].y;
    vec4 _2433 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2418, _2419, (log2((isnan(cbSceneParam._m0[77u].w) ? _348 : (isnan(_348) ? cbSceneParam._m0[77u].w : min(_348, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2435 = _2433.x;
    float _2436 = _2433.y;
    float _2437 = _2433.z;
    float _2438 = _2433.w;
    float _2510;
    float _2512;
    float _2514;
    float _2516;
    if (_348 > cbSceneParam._m0[78u].w)
    {
        float _2472 = isnan(_348) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _348 : min(cbSceneParam._m0[80u].w, _348));
        float _2473 = _2472 / _348;
        float _2484 = _2473 * _399;
        float _2485 = _400 * _2473;
        float _2486 = (-0.0) - _2485;
        float _2488 = _2473 * _401;
        float _2490 = (cbSceneParam._m0[77u].w * _2486) / _2472;
        float _2491 = _2490 + cbSceneParam._m0[79u].w;
        float _2492 = cbSceneParam._m0[79u].w - _2485;
        float _2498 = sqrt(((_2484 * _2484) + (_2485 * _2485)) + (_2488 * _2488));
        float _2501 = (1.0 - (cbSceneParam._m0[77u].w / _2472)) * _2498;
        float _2506 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2508 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2667;
        if (abs((_2486 - _2490) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2667 = ((((_2491 > 0.0) ? exp2(_2506 * _2491) : (2.0 - exp2(_2508 * _2491))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2501;
        }
        else
        {
            float _2627 = 1.0 / cbSceneParam._m0[80u].x;
            float _2628 = isnan(_2492) ? _2491 : (isnan(_2491) ? _2492 : max(_2491, _2492));
            float _2629 = isnan(_2492) ? _2491 : (isnan(_2491) ? _2492 : min(_2491, _2492));
            float _2638 = isnan(0.0) ? _2628 : (isnan(_2628) ? 0.0 : min(_2628, 0.0));
            float _2639 = isnan(0.0) ? _2629 : (isnan(_2629) ? 0.0 : min(_2629, 0.0));
            _2667 = ((abs(_2498 / _2486) * cbSceneParam._m0[80u].y) * ((((_2638 - _2639) * 2.0) - ((exp2(_2506 * (isnan(0.0) ? _2628 : (isnan(_2628) ? 0.0 : max(_2628, 0.0)))) - exp2(_2506 * (isnan(0.0) ? _2629 : (isnan(_2629) ? 0.0 : max(_2629, 0.0))))) * _2627)) - ((exp2(_2508 * _2638) - exp2(_2508 * _2639)) * _2627))) + (_2501 * cbSceneParam._m0[80u].z);
        }
        vec4 _2669 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2418, _2419, 1.0), 0.0);
        float _2678 = exp2((_2667 * (-1.44269502162933349609375)) * (1.0 - _2669.w));
        float _2679 = log2(_2678);
        float _2695 = log2(_2438);
        _2510 = (exp2(_2695 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2679 * cbSceneParam._m0[78u].x)) * _2669.x) / cbSceneParam._m0[78u].x)) + _2435;
        _2512 = (exp2(_2695 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2679 * cbSceneParam._m0[78u].y)) * _2669.y) / cbSceneParam._m0[78u].y)) + _2436;
        _2514 = (exp2(_2695 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2679 * cbSceneParam._m0[78u].z)) * _2669.z) / cbSceneParam._m0[78u].z)) + _2437;
        _2516 = _2678 * _2438;
    }
    else
    {
        _2510 = _2435;
        _2512 = _2436;
        _2514 = _2437;
        _2516 = _2438;
    }
    float _2528 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2529 = _2528 == 3.0;
    float _2530 = log2(_2516);
    float _2534 = exp2(_2530 * cbSceneParam._m0[78u].x);
    float _2535 = exp2(_2530 * cbSceneParam._m0[78u].y);
    float _2536 = exp2(_2530 * cbSceneParam._m0[78u].z);
    float _2537 = _2534 * (isnan(0.0) ? _2392 : (isnan(_2392) ? 0.0 : max(_2392, 0.0)));
    float _2538 = _2535 * (isnan(0.0) ? _2394 : (isnan(_2394) ? 0.0 : max(_2394, 0.0)));
    float _2539 = _2536 * (isnan(0.0) ? _2396 : (isnan(_2396) ? 0.0 : max(_2396, 0.0)));
    float _2548 = (_2528 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2548 * (_2529 ? _2537 : (_2537 + (cbSceneParam._m0[72u].w * _2510)));
    SV_Target.y = _2548 * (_2529 ? _2538 : (_2538 + (cbSceneParam._m0[72u].w * _2512)));
    SV_Target.z = _2548 * (_2529 ? _2539 : (_2539 + (cbSceneParam._m0[72u].w * _2514)));
    SV_Target.w = cbInstanceData._m0[_2410].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2373) * _2409) * _2534) * _2548;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2374) * _2409) * _2535) * _2548;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2375) * _2409) * _2536) * _2548;
    SV_Target_1.w = cbInstanceData._m0[_2410].w;
}


