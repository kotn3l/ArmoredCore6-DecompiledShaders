#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 2) uniform texture2D C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 3) uniform texture2D C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _808;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _171 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _172 = _171 * NORMAL.x;
    float _173 = _171 * NORMAL.y;
    float _174 = _171 * NORMAL.z;
    vec4 _193 = texture(sampler2D(C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _219 = texture(sampler2D(C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    float _227 = (_219.x * cbMtdParam._m0[12u].x) + (_193.x * cbMtdParam._m0[9u].x);
    float _228 = (_219.y * cbMtdParam._m0[12u].y) + (_193.y * cbMtdParam._m0[9u].y);
    float _229 = (_219.z * cbMtdParam._m0[12u].z) + (_193.z * cbMtdParam._m0[9u].z);
    vec4 _263 = texture(sampler2D(C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((((cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x) * cbMtdParam._m0[13u].y) + TEXCOORD.x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((((cbMtdParam._m0[15u].y * cbPerFrame._m0[22u].x) * cbMtdParam._m0[13u].y) + TEXCOORD.y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    vec4 _292 = texture(sampler2D(C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _309 = inversesqrt(dot(vec3(_172, _173, _174), vec3(_172, _173, _174)));
    float _310 = _309 * _172;
    float _311 = _309 * _173;
    float _312 = _309 * _174;
    float _2952 = isnan(0.0) ? _227 : (isnan(_227) ? 0.0 : max(_227, 0.0));
    float _2963 = isnan(0.0) ? _228 : (isnan(_228) ? 0.0 : max(_228, 0.0));
    float _2974 = isnan(0.0) ? _229 : (isnan(_229) ? 0.0 : max(_229, 0.0));
    float _332 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _373 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _383 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _373);
    float _384 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _373);
    float _385 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _373);
    float _389 = inversesqrt(dot(vec3(_383, _384, _385), vec3(_383, _384, _385)));
    float _390 = _383 * _389;
    float _391 = _384 * _389;
    float _392 = _385 * _389;
    float _398 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _399 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _420 = fma(_312, cbSceneParam._m0[5u].z, fma(_311, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _310));
    float _423 = fma(_312, cbSceneParam._m0[6u].z, fma(_311, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _310));
    float _426 = fma(_312, cbSceneParam._m0[7u].z, fma(_311, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _310));
    uint _439 = uint(roundEven(NORMAL.w)) * 13u;
    uint _440 = _439 + 9u;
    uint _441 = _440 + uint(cbMatDynParam._m0[0u].w);
    float _447 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2952 : (isnan(_2952) ? 1.0 : min(_2952, 1.0)))) * cbInstanceData._m0[_441].x;
    float _448 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2963 : (isnan(_2963) ? 1.0 : min(_2963, 1.0)))) * cbInstanceData._m0[_441].y;
    float _449 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2974 : (isnan(_2974) ? 1.0 : min(_2974, 1.0)))) * cbInstanceData._m0[_441].z;
    float _2985 = isnan(0.0) ? _447 : (isnan(_447) ? 0.0 : max(_447, 0.0));
    float _450 = isnan(1.0) ? _2985 : (isnan(_2985) ? 1.0 : min(_2985, 1.0));
    float _2996 = isnan(0.0) ? _448 : (isnan(_448) ? 0.0 : max(_448, 0.0));
    float _451 = isnan(1.0) ? _2996 : (isnan(_2996) ? 1.0 : min(_2996, 1.0));
    float _3007 = isnan(0.0) ? _449 : (isnan(_449) ? 0.0 : max(_449, 0.0));
    float _452 = isnan(1.0) ? _3007 : (isnan(_3007) ? 1.0 : min(_3007, 1.0));
    vec4 _461 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _398, cbSceneParam._m0[86u].y * _399));
    float _464 = _461.x * TEXCOORD_4;
    float _465 = dot(vec3(_310, _311, _312), vec3(_390, _391, _392));
    float _468 = _465 * 2.0;
    float _473 = (_468 * _310) - _390;
    float _474 = (_468 * _311) - _391;
    float _475 = (_468 * _312) - _392;
    float _497 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _501 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _505 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _807;
    float _809;
    float _810;
    float _811;
    float _812;
    float _813;
    float _814;
    float _815;
    float _816;
    float _817;
    float _818;
    float _819;
    float _820;
    float _821;
    float _822;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _532 = fma(_505, cbModelParam._m0[26u].z, fma(_501, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _497));
        float _536 = fma(_505, cbModelParam._m0[27u].z, fma(_501, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _497));
        float _540 = fma(_505, cbModelParam._m0[28u].z, fma(_501, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _497));
        float _565 = _497 + _310;
        float _566 = _501 + _311;
        float _567 = _505 + _312;
        float _577 = fma(_567, cbModelParam._m0[26u].z, fma(_566, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _565)) - _532;
        float _578 = fma(_567, cbModelParam._m0[27u].z, fma(_566, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _565)) - _536;
        float _579 = fma(_567, cbModelParam._m0[28u].z, fma(_566, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _565)) - _540;
        float _583 = inversesqrt(dot(vec3(_577, _578, _579), vec3(_577, _578, _579)));
        float _596 = ((_583 * _577) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_532 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _597 = ((_583 * _578) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_536 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _598 = ((_583 * _579) / cbModelParam._m0[34u].z) + ((((((_540 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _601 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_596, _597, _598), 0.0);
        vec4 _608 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_596, _597, _598), 0.0);
        vec4 _615 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_596, _597, _598), 0.0);
        vec4 _622 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_596, _597, _598), 0.0);
        float _635 = exp2((_601.w + (-0.5)) * 20.0) * 2.0;
        float _636 = _635 * (_601.x + (-0.5));
        float _637 = _635 * (_601.y + (-0.5));
        float _638 = _635 * (_601.z + (-0.5));
        float _645 = exp2((_608.w + (-0.5)) * 20.0) * 2.0;
        float _646 = _645 * (_608.x + (-0.5));
        float _647 = _645 * (_608.y + (-0.5));
        float _648 = _645 * (_608.z + (-0.5));
        float _655 = exp2((_615.w + (-0.5)) * 20.0) * 2.0;
        float _656 = _655 * (_615.x + (-0.5));
        float _657 = _655 * (_615.y + (-0.5));
        float _658 = _655 * (_615.z + (-0.5));
        float _665 = exp2((_622.w + (-0.5)) * 20.0) * 2.0;
        float _666 = _665 * (_622.x + (-0.5));
        float _667 = _665 * (_622.y + (-0.5));
        float _668 = _665 * (_622.z + (-0.5));
        float _669 = isnan(0.0) ? _666 : (isnan(_666) ? 0.0 : max(_666, 0.0));
        float _670 = isnan(0.0) ? _667 : (isnan(_667) ? 0.0 : max(_667, 0.0));
        float _671 = isnan(0.0) ? _668 : (isnan(_668) ? 0.0 : max(_668, 0.0));
        float _672 = _636 * 0.5;
        float _673 = _646 * 0.5;
        float _674 = _656 * 0.5;
        float _675 = dot(vec3(_672, _673, _674), vec3(_672, _673, _674));
        float _680 = (_675 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_675);
        float _689 = (dot(vec3(_310, _311, _312), vec3(_680 * _672, _680 * _673, _680 * _674)) + 1.0) * 0.5;
        float _3033 = isnan(0.0) ? _689 : (isnan(_689) ? 0.0 : max(_689, 0.0));
        float _699 = sqrt(((_673 * _673) + (_672 * _672)) + (_674 * _674)) / (_669 + 9.9999997473787516355514526367188e-06);
        float _3044 = isnan(0.0) ? _699 : (isnan(_699) ? 0.0 : max(_699, 0.0));
        float _700 = isnan(1.0) ? _3044 : (isnan(_3044) ? 1.0 : min(_3044, 1.0));
        float _701 = _700 * 2.0;
        float _705 = (1.0 - _700) / (_700 + 1.0);
        float _3055 = isnan(0.0) ? _705 : (isnan(_705) ? 0.0 : max(_705, 0.0));
        float _706 = isnan(1.0) ? _3055 : (isnan(_3055) ? 1.0 : min(_3055, 1.0));
        float _715 = ((((1.0 - _706) * (_701 + 2.0)) * exp2(log2(isnan(1.0) ? _3033 : (isnan(_3033) ? 1.0 : min(_3033, 1.0))) * (_701 + 1.0))) + _706) * _669;
        float _716 = _637 * 0.5;
        float _717 = _647 * 0.5;
        float _718 = _657 * 0.5;
        float _719 = dot(vec3(_716, _717, _718), vec3(_716, _717, _718));
        float _724 = (_719 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_719);
        float _732 = (dot(vec3(_310, _311, _312), vec3(_724 * _716, _724 * _717, _724 * _718)) + 1.0) * 0.5;
        float _3066 = isnan(0.0) ? _732 : (isnan(_732) ? 0.0 : max(_732, 0.0));
        float _741 = sqrt(((_717 * _717) + (_716 * _716)) + (_718 * _718)) / (_670 + 9.9999997473787516355514526367188e-06);
        float _3077 = isnan(0.0) ? _741 : (isnan(_741) ? 0.0 : max(_741, 0.0));
        float _742 = isnan(1.0) ? _3077 : (isnan(_3077) ? 1.0 : min(_3077, 1.0));
        float _743 = _742 * 2.0;
        float _747 = (1.0 - _742) / (_742 + 1.0);
        float _3088 = isnan(0.0) ? _747 : (isnan(_747) ? 0.0 : max(_747, 0.0));
        float _748 = isnan(1.0) ? _3088 : (isnan(_3088) ? 1.0 : min(_3088, 1.0));
        float _757 = ((((1.0 - _748) * (_743 + 2.0)) * exp2(log2(isnan(1.0) ? _3066 : (isnan(_3066) ? 1.0 : min(_3066, 1.0))) * (_743 + 1.0))) + _748) * _670;
        float _758 = _638 * 0.5;
        float _759 = _648 * 0.5;
        float _760 = _658 * 0.5;
        float _761 = dot(vec3(_758, _759, _760), vec3(_758, _759, _760));
        float _766 = (_761 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_761);
        float _774 = (dot(vec3(_310, _311, _312), vec3(_766 * _758, _766 * _759, _766 * _760)) + 1.0) * 0.5;
        float _3099 = isnan(0.0) ? _774 : (isnan(_774) ? 0.0 : max(_774, 0.0));
        float _783 = sqrt(((_759 * _759) + (_758 * _758)) + (_760 * _760)) / (_671 + 9.9999997473787516355514526367188e-06);
        float _3110 = isnan(0.0) ? _783 : (isnan(_783) ? 0.0 : max(_783, 0.0));
        float _784 = isnan(1.0) ? _3110 : (isnan(_3110) ? 1.0 : min(_3110, 1.0));
        float _785 = _784 * 2.0;
        float _789 = (1.0 - _784) / (_784 + 1.0);
        float _3121 = isnan(0.0) ? _789 : (isnan(_789) ? 0.0 : max(_789, 0.0));
        float _790 = isnan(1.0) ? _3121 : (isnan(_3121) ? 1.0 : min(_3121, 1.0));
        float _799 = ((((1.0 - _790) * (_785 + 2.0)) * exp2(log2(isnan(1.0) ? _3099 : (isnan(_3099) ? 1.0 : min(_3099, 1.0))) * (_785 + 1.0))) + _790) * _671;
        _807 = _638;
        _809 = _637;
        _810 = _636;
        _811 = _648;
        _812 = _647;
        _813 = _646;
        _814 = _658;
        _815 = _657;
        _816 = _656;
        _817 = _671;
        _818 = _670;
        _819 = _669;
        _820 = cbModelParam._m0[36u].z * (isnan(0.0) ? _715 : (isnan(_715) ? 0.0 : max(_715, 0.0)));
        _821 = cbModelParam._m0[36u].z * (isnan(0.0) ? _757 : (isnan(_757) ? 0.0 : max(_757, 0.0)));
        _822 = cbModelParam._m0[36u].z * (isnan(0.0) ? _799 : (isnan(_799) ? 0.0 : max(_799, 0.0)));
    }
    else
    {
        _807 = _808;
        _809 = _808;
        _810 = _808;
        _811 = _808;
        _812 = _808;
        _813 = _808;
        _814 = _808;
        _815 = _808;
        _816 = _808;
        _817 = _808;
        _818 = _808;
        _819 = _808;
        _820 = 0.0;
        _821 = 0.0;
        _822 = 0.0;
    }
    float _1117;
    float _1118;
    float _1119;
    float _1120;
    float _1121;
    float _1122;
    float _1123;
    float _1124;
    float _1125;
    float _1126;
    float _1127;
    float _1128;
    float _1129;
    float _1130;
    float _1131;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _848 = fma(_505, cbModelParam._m0[30u].z, fma(_501, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _497));
        float _852 = fma(_505, cbModelParam._m0[31u].z, fma(_501, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _497));
        float _856 = fma(_505, cbModelParam._m0[32u].z, fma(_501, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _497));
        float _879 = _497 + _310;
        float _880 = _501 + _311;
        float _881 = _505 + _312;
        float _891 = fma(_881, cbModelParam._m0[30u].z, fma(_880, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _879)) - _848;
        float _892 = fma(_881, cbModelParam._m0[31u].z, fma(_880, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _879)) - _852;
        float _893 = fma(_881, cbModelParam._m0[32u].z, fma(_880, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _879)) - _856;
        float _897 = inversesqrt(dot(vec3(_891, _892, _893), vec3(_891, _892, _893)));
        float _910 = ((_897 * _891) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_848 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _911 = ((_897 * _892) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_852 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _912 = ((_897 * _893) / cbModelParam._m0[35u].z) + ((((((_856 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _914 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_910, _911, _912), 0.0);
        vec4 _921 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_910, _911, _912), 0.0);
        vec4 _928 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_910, _911, _912), 0.0);
        vec4 _935 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_910, _911, _912), 0.0);
        float _947 = exp2((_914.w + (-0.5)) * 20.0) * 2.0;
        float _948 = _947 * (_914.x + (-0.5));
        float _949 = _947 * (_914.y + (-0.5));
        float _950 = _947 * (_914.z + (-0.5));
        float _957 = exp2((_921.w + (-0.5)) * 20.0) * 2.0;
        float _958 = _957 * (_921.x + (-0.5));
        float _959 = _957 * (_921.y + (-0.5));
        float _960 = _957 * (_921.z + (-0.5));
        float _967 = exp2((_928.w + (-0.5)) * 20.0) * 2.0;
        float _968 = _967 * (_928.x + (-0.5));
        float _969 = _967 * (_928.y + (-0.5));
        float _970 = _967 * (_928.z + (-0.5));
        float _977 = exp2((_935.w + (-0.5)) * 20.0) * 2.0;
        float _978 = _977 * (_935.x + (-0.5));
        float _979 = _977 * (_935.y + (-0.5));
        float _980 = _977 * (_935.z + (-0.5));
        float _981 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
        float _982 = isnan(0.0) ? _979 : (isnan(_979) ? 0.0 : max(_979, 0.0));
        float _983 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
        float _984 = _948 * 0.5;
        float _985 = _958 * 0.5;
        float _986 = _968 * 0.5;
        float _987 = dot(vec3(_984, _985, _986), vec3(_984, _985, _986));
        float _992 = (_987 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_987);
        float _1000 = (dot(vec3(_310, _311, _312), vec3(_992 * _984, _992 * _985, _992 * _986)) + 1.0) * 0.5;
        float _3162 = isnan(0.0) ? _1000 : (isnan(_1000) ? 0.0 : max(_1000, 0.0));
        float _1009 = sqrt(((_985 * _985) + (_984 * _984)) + (_986 * _986)) / (_981 + 9.9999997473787516355514526367188e-06);
        float _3173 = isnan(0.0) ? _1009 : (isnan(_1009) ? 0.0 : max(_1009, 0.0));
        float _1010 = isnan(1.0) ? _3173 : (isnan(_3173) ? 1.0 : min(_3173, 1.0));
        float _1011 = _1010 * 2.0;
        float _1015 = (1.0 - _1010) / (_1010 + 1.0);
        float _3184 = isnan(0.0) ? _1015 : (isnan(_1015) ? 0.0 : max(_1015, 0.0));
        float _1016 = isnan(1.0) ? _3184 : (isnan(_3184) ? 1.0 : min(_3184, 1.0));
        float _1025 = ((((1.0 - _1016) * (_1011 + 2.0)) * exp2(log2(isnan(1.0) ? _3162 : (isnan(_3162) ? 1.0 : min(_3162, 1.0))) * (_1011 + 1.0))) + _1016) * _981;
        float _1026 = _949 * 0.5;
        float _1027 = _959 * 0.5;
        float _1028 = _969 * 0.5;
        float _1029 = dot(vec3(_1026, _1027, _1028), vec3(_1026, _1027, _1028));
        float _1034 = (_1029 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1029);
        float _1042 = (dot(vec3(_310, _311, _312), vec3(_1034 * _1026, _1034 * _1027, _1034 * _1028)) + 1.0) * 0.5;
        float _3195 = isnan(0.0) ? _1042 : (isnan(_1042) ? 0.0 : max(_1042, 0.0));
        float _1051 = sqrt(((_1027 * _1027) + (_1026 * _1026)) + (_1028 * _1028)) / (_982 + 9.9999997473787516355514526367188e-06);
        float _3206 = isnan(0.0) ? _1051 : (isnan(_1051) ? 0.0 : max(_1051, 0.0));
        float _1052 = isnan(1.0) ? _3206 : (isnan(_3206) ? 1.0 : min(_3206, 1.0));
        float _1053 = _1052 * 2.0;
        float _1057 = (1.0 - _1052) / (_1052 + 1.0);
        float _3217 = isnan(0.0) ? _1057 : (isnan(_1057) ? 0.0 : max(_1057, 0.0));
        float _1058 = isnan(1.0) ? _3217 : (isnan(_3217) ? 1.0 : min(_3217, 1.0));
        float _1067 = ((((1.0 - _1058) * (_1053 + 2.0)) * exp2(log2(isnan(1.0) ? _3195 : (isnan(_3195) ? 1.0 : min(_3195, 1.0))) * (_1053 + 1.0))) + _1058) * _982;
        float _1068 = _950 * 0.5;
        float _1069 = _960 * 0.5;
        float _1070 = _970 * 0.5;
        float _1071 = dot(vec3(_1068, _1069, _1070), vec3(_1068, _1069, _1070));
        float _1076 = (_1071 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1071);
        float _1084 = (dot(vec3(_310, _311, _312), vec3(_1076 * _1068, _1076 * _1069, _1076 * _1070)) + 1.0) * 0.5;
        float _3228 = isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0));
        float _1093 = sqrt(((_1069 * _1069) + (_1068 * _1068)) + (_1070 * _1070)) / (_983 + 9.9999997473787516355514526367188e-06);
        float _3239 = isnan(0.0) ? _1093 : (isnan(_1093) ? 0.0 : max(_1093, 0.0));
        float _1094 = isnan(1.0) ? _3239 : (isnan(_3239) ? 1.0 : min(_3239, 1.0));
        float _1095 = _1094 * 2.0;
        float _1099 = (1.0 - _1094) / (_1094 + 1.0);
        float _3250 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
        float _1100 = isnan(1.0) ? _3250 : (isnan(_3250) ? 1.0 : min(_3250, 1.0));
        float _1109 = ((((1.0 - _1100) * (_1095 + 2.0)) * exp2(log2(isnan(1.0) ? _3228 : (isnan(_3228) ? 1.0 : min(_3228, 1.0))) * (_1095 + 1.0))) + _1100) * _983;
        _1117 = _950;
        _1118 = _949;
        _1119 = _948;
        _1120 = _960;
        _1121 = _959;
        _1122 = _958;
        _1123 = _970;
        _1124 = _969;
        _1125 = _968;
        _1126 = _983;
        _1127 = _982;
        _1128 = _981;
        _1129 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1025 : (isnan(_1025) ? 0.0 : max(_1025, 0.0)));
        _1130 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1067 : (isnan(_1067) ? 0.0 : max(_1067, 0.0)));
        _1131 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0)));
    }
    else
    {
        _1117 = _808;
        _1118 = _808;
        _1119 = _808;
        _1120 = _808;
        _1121 = _808;
        _1122 = _808;
        _1123 = _808;
        _1124 = _808;
        _1125 = _808;
        _1126 = _808;
        _1127 = _808;
        _1128 = _808;
        _1129 = 0.0;
        _1130 = 0.0;
        _1131 = 0.0;
    }
    float _1141 = (cbModelParam._m0[1u].x * (_1129 - _820)) + _820;
    float _1142 = (cbModelParam._m0[1u].x * (_1130 - _821)) + _821;
    float _1143 = (cbModelParam._m0[1u].x * (_1131 - _822)) + _822;
    float _1164 = fma(_1143, cbSceneParam._m0[89u].z, fma(_1142, cbSceneParam._m0[89u].y, _1141 * cbSceneParam._m0[89u].x));
    float _1167 = fma(_1143, cbSceneParam._m0[90u].z, fma(_1142, cbSceneParam._m0[90u].y, _1141 * cbSceneParam._m0[90u].x));
    float _1170 = fma(_1143, cbSceneParam._m0[91u].z, fma(_1142, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1141));
    float _1185 = _473 * 0.5;
    float _1186 = _474 * 0.5;
    float _1187 = _475 * 0.5;
    float _1188 = dot(vec4(_1185, _1186, _1187, 1.0), vec4(_1119, _1122, _1125, _1128));
    float _1191 = dot(vec4(_1185, _1186, _1187, 1.0), vec4(_1118, _1121, _1124, _1127));
    float _1194 = dot(vec4(_1185, _1186, _1187, 1.0), vec4(_1117, _1120, _1123, _1126));
    float _1228;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1201 = dot(vec4(_1185, _1186, _1187, 1.0), vec4(_807, _811, _814, _817));
        float _1205 = dot(vec4(_1185, _1186, _1187, 1.0), vec4(_809, _812, _815, _818));
        float _1209 = dot(vec4(_1185, _1186, _1187, 1.0), vec4(_810, _813, _816, _819));
        float _1216 = dot(vec4(cbModelParam._m0[39u]), vec4(_1185, _1186, _1187, 1.0));
        _1228 = dot(vec3(isnan(0.0) ? _1209 : (isnan(_1209) ? 0.0 : max(_1209, 0.0)), isnan(0.0) ? _1205 : (isnan(_1205) ? 0.0 : max(_1205, 0.0)), isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1216) ? 0.0 : (isnan(0.0) ? _1216 : max(0.0, _1216))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1228 = 1.0;
    }
    float _1239;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1230 = dot(vec4(cbModelParam._m0[40u]), vec4(_1185, _1186, _1187, 1.0));
        _1239 = dot(vec3(isnan(0.0) ? _1188 : (isnan(_1188) ? 0.0 : max(_1188, 0.0)), isnan(0.0) ? _1191 : (isnan(_1191) ? 0.0 : max(_1191, 0.0)), isnan(0.0) ? _1194 : (isnan(_1194) ? 0.0 : max(_1194, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1230) ? 0.0 : (isnan(0.0) ? _1230 : max(0.0, _1230))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1239 = 1.0;
    }
    float _1243 = (_1239 * cbModelParam._m0[1u].x) + (_1228 * (1.0 - cbModelParam._m0[1u].x));
    float _1252 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1333;
    float _1335;
    float _1337;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1300 = fma(_505, cbModelParam._m0[13u].z, fma(_501, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _497)) + cbModelParam._m0[13u].w;
        float _1304 = fma(_505, cbModelParam._m0[14u].z, fma(_501, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _497)) + cbModelParam._m0[14u].w;
        float _1308 = fma(_505, cbModelParam._m0[15u].z, fma(_501, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _497)) + cbModelParam._m0[15u].w;
        float _1311 = fma(_475, cbModelParam._m0[13u].z, fma(_474, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _473));
        float _1314 = fma(_475, cbModelParam._m0[14u].z, fma(_474, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _473));
        float _1317 = fma(_475, cbModelParam._m0[15u].z, fma(_474, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _473));
        float _1343;
        if (_1311 > 0.0)
        {
            _1343 = abs((1.0 - _1300) / _1311);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1311 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1300 + 1.0) / _1311);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1343 = frontier_phi_14_12_ladder;
        }
        float _1549;
        if (_1314 > 0.0)
        {
            _1549 = abs((1.0 - _1304) / _1314);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1314 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1304 + 1.0) / _1314);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1549 = frontier_phi_23_19_ladder;
        }
        float _1738;
        if (_1317 > 0.0)
        {
            _1738 = abs((1.0 - _1308) / _1317);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1317 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1308 + 1.0) / _1317);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _1738 = frontier_phi_35_30_ladder;
        }
        float _1740 = isnan(_1549) ? _1343 : (isnan(_1343) ? _1549 : min(_1343, _1549));
        float _1741 = isnan(_1738) ? _1740 : (isnan(_1740) ? _1738 : min(_1740, _1738));
        float _1745 = (_1741 * _1311) + _1300;
        float _1746 = (_1741 * _1314) + _1304;
        float _1747 = (_1741 * _1317) + _1308;
        float _1748 = _1741 * 9.9999997473787516355514526367188e-05;
        float _1750 = (-1.0) - _1748;
        float _1752 = _1748 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_1747 > _1752) || ((_1747 < _1750) || ((_1746 > _1752) || ((_1746 < _1750) || ((_1745 < _1750) || (_1745 > _1752))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1844 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1747, cbModelParam._m0[9u].z, fma(_1746, cbModelParam._m0[9u].y, _1745 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1747, cbModelParam._m0[10u].z, fma(_1746, cbModelParam._m0[10u].y, _1745 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1747, cbModelParam._m0[11u].z, fma(_1746, cbModelParam._m0[11u].y, _1745 * cbModelParam._m0[11u].x))), _1252);
            frontier_phi_13_35_ladder = _1844.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _1844.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _1844.x * cbModelParam._m0[1u].y;
        }
        _1333 = frontier_phi_13_35_ladder_2;
        _1335 = frontier_phi_13_35_ladder_1;
        _1337 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1321 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_473, _474, _475), _1252);
        _1333 = _1321.x * cbModelParam._m0[1u].y;
        _1335 = _1321.y * cbModelParam._m0[1u].y;
        _1337 = _1321.z * cbModelParam._m0[1u].y;
    }
    float _1340 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1432;
    float _1434;
    float _1436;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1396 = fma(_505, cbModelParam._m0[21u].z, fma(_501, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _497)) + cbModelParam._m0[21u].w;
        float _1400 = fma(_505, cbModelParam._m0[22u].z, fma(_501, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _497)) + cbModelParam._m0[22u].w;
        float _1404 = fma(_505, cbModelParam._m0[23u].z, fma(_501, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _497)) + cbModelParam._m0[23u].w;
        float _1407 = fma(_475, cbModelParam._m0[21u].z, fma(_474, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _473));
        float _1410 = fma(_475, cbModelParam._m0[22u].z, fma(_474, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _473));
        float _1413 = fma(_475, cbModelParam._m0[23u].z, fma(_474, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _473));
        float _1554;
        if (_1407 > 0.0)
        {
            _1554 = abs((1.0 - _1396) / _1407);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1407 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1396 + 1.0) / _1407);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1554 = frontier_phi_25_21_ladder;
        }
        float _1765;
        if (_1410 > 0.0)
        {
            _1765 = abs((1.0 - _1400) / _1410);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1410 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1400 + 1.0) / _1410);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1765 = frontier_phi_37_32_ladder;
        }
        float _1916;
        if (_1413 > 0.0)
        {
            _1916 = abs((1.0 - _1404) / _1413);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_1413 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_1404 + 1.0) / _1413);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _1916 = frontier_phi_46_43_ladder;
        }
        float _1918 = isnan(_1765) ? _1554 : (isnan(_1554) ? _1765 : min(_1554, _1765));
        float _1919 = isnan(_1916) ? _1918 : (isnan(_1918) ? _1916 : min(_1918, _1916));
        float _1923 = (_1919 * _1407) + _1396;
        float _1924 = (_1919 * _1410) + _1400;
        float _1925 = (_1919 * _1413) + _1404;
        float _1926 = _1919 * 9.9999997473787516355514526367188e-05;
        float _1927 = (-1.0) - _1926;
        float _1929 = _1926 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_1925 > _1929) || ((_1925 < _1927) || ((_1924 > _1929) || ((_1924 < _1927) || ((_1923 < _1927) || (_1923 > _1929))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2153 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1925, cbModelParam._m0[17u].z, fma(_1924, cbModelParam._m0[17u].y, _1923 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1925, cbModelParam._m0[18u].z, fma(_1924, cbModelParam._m0[18u].y, _1923 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1925, cbModelParam._m0[19u].z, fma(_1924, cbModelParam._m0[19u].y, _1923 * cbModelParam._m0[19u].x))), _1340);
            frontier_phi_22_46_ladder = _2153.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2153.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2153.x * cbModelParam._m0[1u].z;
        }
        _1432 = frontier_phi_22_46_ladder_2;
        _1434 = frontier_phi_22_46_ladder_1;
        _1436 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _1416 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_473, _474, _475), _1340);
        _1432 = _1416.x * cbModelParam._m0[1u].z;
        _1434 = _1416.y * cbModelParam._m0[1u].z;
        _1436 = _1416.z * cbModelParam._m0[1u].z;
    }
    float _1448 = _464 * 0.01200000010430812835693359375;
    float _1450 = _1448 * ((cbModelParam._m0[1u].w * (_1432 - _1333)) + _1333);
    float _1451 = _1448 * ((cbModelParam._m0[1u].w * (_1434 - _1335)) + _1335);
    float _1452 = _1448 * ((cbModelParam._m0[1u].w * (_1436 - _1337)) + _1337);
    float _1455 = fma(_1452, cbSceneParam._m0[89u].z, fma(_1451, cbSceneParam._m0[89u].y, _1450 * cbSceneParam._m0[89u].x));
    float _1458 = fma(_1452, cbSceneParam._m0[90u].z, fma(_1451, cbSceneParam._m0[90u].y, _1450 * cbSceneParam._m0[90u].x));
    float _1461 = fma(_1452, cbSceneParam._m0[91u].z, fma(_1451, cbSceneParam._m0[91u].y, _1450 * cbSceneParam._m0[91u].x));
    uvec4 _1471 = floatBitsToUint(cbInstanceData._m0[_439 + 5u]);
    uint _1473 = _1471.x * 14u;
    uint _1474 = _1473 + 13u;
    float _1481 = _464 + (-1.0);
    float _1487 = (cbLight._m0[_1474].x * _1481) + 1.0;
    float _1488 = (cbLight._m0[_1474].y * _1481) + 1.0;
    float _1489 = (cbLight._m0[_1474].z * _1481) + 1.0;
    float _1490 = (cbLight._m0[_1474].w * _1481) + 1.0;
    uint _1491 = _1473 + 5u;
    float _1497 = isnan(1.0) ? _1488 : (isnan(_1488) ? 1.0 : min(_1488, 1.0));
    uint _1501 = _1473 + 4u;
    float _1508 = isnan(1.0) ? _1487 : (isnan(_1487) ? 1.0 : min(_1487, 1.0));
    uint _1512 = _1473 | 1u;
    float _1523 = dot(vec3(cbLight._m0[_1473].xyz), vec3(_310, _311, _312));
    float _1526 = dot(vec3(cbLight._m0[_1512].xyz), vec3(_310, _311, _312));
    float _3386 = isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0));
    float _3397 = isnan(0.0) ? _1526 : (isnan(_1526) ? 0.0 : max(_1526, 0.0));
    float _1531 = (isnan(1.0) ? _3386 : (isnan(_3386) ? 1.0 : min(_3386, 1.0))) * 0.3183098733425140380859375;
    float _1533 = (isnan(1.0) ? _3397 : (isnan(_3397) ? 1.0 : min(_3397, 1.0))) * 0.3183098733425140380859375;
    float _1540 = ((cbLight._m0[_1491].x * _1497) * _1533) + ((cbLight._m0[_1501].x * _1508) * _1531);
    float _1541 = ((_1497 * cbLight._m0[_1491].y) * _1533) + ((_1508 * cbLight._m0[_1501].y) * _1531);
    float _1542 = ((_1497 * cbLight._m0[_1491].z) * _1533) + ((_1508 * cbLight._m0[_1501].z) * _1531);
    uvec4 _1546 = floatBitsToUint(cbLight._m0[_1473 + 12u]);
    bool _1548 = _1546.x == 0u;
    float _1559;
    float _1561;
    float _1563;
    if (_1548)
    {
        _1559 = _1540;
        _1561 = _1541;
        _1563 = _1542;
    }
    else
    {
        uint _1567 = _1473 + 6u;
        float _1583 = (dot(vec3(cbLight._m0[_1473 + 2u].xyz), vec3(_310, _311, _312)) * 0.5) + 0.5;
        float _1584 = _1583 * _1583;
        float _3408 = isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0));
        float _1585 = isnan(1.0) ? _3408 : (isnan(_3408) ? 1.0 : min(_3408, 1.0));
        float _1586 = isnan(1.0) ? _1489 : (isnan(_1489) ? 1.0 : min(_1489, 1.0));
        _1559 = (((cbLight._m0[_1567].x * 0.3183098733425140380859375) * _1585) * _1586) + _1540;
        _1561 = (((cbLight._m0[_1567].y * 0.3183098733425140380859375) * _1585) * _1586) + _1541;
        _1563 = (((cbLight._m0[_1567].z * 0.3183098733425140380859375) * _1585) * _1586) + _1542;
    }
    bool _1566 = _1546.y == 0u;
    float _1604;
    float _1606;
    float _1608;
    if (_1566)
    {
        _1604 = _1559;
        _1606 = _1561;
        _1608 = _1563;
    }
    else
    {
        uint _1709 = _1473 + 7u;
        float _1725 = (dot(vec3(cbLight._m0[_1473 + 3u].xyz), vec3(_310, _311, _312)) * 0.5) + 0.5;
        float _1726 = _1725 * _1725;
        float _3424 = isnan(0.0) ? _1726 : (isnan(_1726) ? 0.0 : max(_1726, 0.0));
        float _1727 = isnan(1.0) ? _3424 : (isnan(_3424) ? 1.0 : min(_3424, 1.0));
        float _1728 = isnan(1.0) ? _1490 : (isnan(_1490) ? 1.0 : min(_1490, 1.0));
        _1604 = (((cbLight._m0[_1709].x * 0.3183098733425140380859375) * _1727) * _1728) + _1559;
        _1606 = (((cbLight._m0[_1709].y * 0.3183098733425140380859375) * _1727) * _1728) + _1561;
        _1608 = (((cbLight._m0[_1709].z * 0.3183098733425140380859375) * _1727) * _1728) + _1563;
    }
    uint _1610 = _1473 + 8u;
    float _1616 = cbLight._m0[_1473].x + _390;
    float _1617 = cbLight._m0[_1473].y + _391;
    float _1618 = cbLight._m0[_1473].z + _392;
    float _1622 = inversesqrt(dot(vec3(_1616, _1617, _1618), vec3(_1616, _1617, _1618)));
    float _1626 = dot(vec3(_310, _311, _312), vec3(cbLight._m0[_1473].xyz));
    float _3440 = isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0));
    float _1629 = isnan(1.0) ? _3440 : (isnan(_3440) ? 1.0 : min(_3440, 1.0));
    float _3451 = isnan(0.0) ? _465 : (isnan(_465) ? 0.0 : max(_465, 0.0));
    float _1630 = isnan(1.0) ? _3451 : (isnan(_3451) ? 1.0 : min(_3451, 1.0));
    float _1631 = dot(vec3(cbLight._m0[_1473].xyz), vec3(_1616 * _1622, _1617 * _1622, _1618 * _1622));
    float _3462 = isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0));
    float _1642 = (exp2(log2(1.0 - (isnan(1.0) ? _3462 : (isnan(_3462) ? 1.0 : min(_3462, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1648 = (0.5 / ((_1629 + 9.9999999392252902907785028219223e-09) + _1630)) * _1629;
    float _3473 = isnan(0.0) ? _1648 : (isnan(_1648) ? 0.0 : max(_1648, 0.0));
    float _1650 = (isnan(1.0) ? _3473 : (isnan(_3473) ? 1.0 : min(_3473, 1.0))) * 0.31831014156341552734375;
    uint _1661 = _1473 + 9u;
    float _1667 = cbLight._m0[_1512].x + _390;
    float _1668 = cbLight._m0[_1512].y + _391;
    float _1669 = cbLight._m0[_1512].z + _392;
    float _1673 = inversesqrt(dot(vec3(_1667, _1668, _1669), vec3(_1667, _1668, _1669)));
    float _1677 = dot(vec3(_310, _311, _312), vec3(cbLight._m0[_1512].xyz));
    float _3484 = isnan(0.0) ? _1677 : (isnan(_1677) ? 0.0 : max(_1677, 0.0));
    float _1680 = isnan(1.0) ? _3484 : (isnan(_3484) ? 1.0 : min(_3484, 1.0));
    float _1681 = dot(vec3(cbLight._m0[_1512].xyz), vec3(_1667 * _1673, _1668 * _1673, _1669 * _1673));
    float _3495 = isnan(0.0) ? _1681 : (isnan(_1681) ? 0.0 : max(_1681, 0.0));
    float _1690 = (exp2(log2(1.0 - (isnan(1.0) ? _3495 : (isnan(_3495) ? 1.0 : min(_3495, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1694 = (0.5 / ((_1680 + 9.9999999392252902907785028219223e-09) + _1630)) * _1680;
    float _3506 = isnan(0.0) ? _1694 : (isnan(_1694) ? 0.0 : max(_1694, 0.0));
    float _1696 = (isnan(1.0) ? _3506 : (isnan(_3506) ? 1.0 : min(_3506, 1.0))) * 0.31831014156341552734375;
    float _1706 = (((_1690 * cbLight._m0[_1661].x) * _1696) * _1497) + (((_1642 * cbLight._m0[_1610].x) * _1650) * _1508);
    float _1707 = (((_1690 * cbLight._m0[_1661].y) * _1696) * _1497) + (((_1642 * cbLight._m0[_1610].y) * _1650) * _1508);
    float _1708 = (((_1690 * cbLight._m0[_1661].z) * _1696) * _1497) + (((_1642 * cbLight._m0[_1610].z) * _1650) * _1508);
    float _1770;
    float _1772;
    float _1774;
    if (_1548)
    {
        _1770 = _1706;
        _1772 = _1707;
        _1774 = _1708;
    }
    else
    {
        uint _1776 = _1473 + 10u;
        uint _1782 = _1473 + 2u;
        float _1788 = cbLight._m0[_1782].x + _390;
        float _1789 = cbLight._m0[_1782].y + _391;
        float _1790 = cbLight._m0[_1782].z + _392;
        float _1794 = inversesqrt(dot(vec3(_1788, _1789, _1790), vec3(_1788, _1789, _1790)));
        float _1798 = dot(vec3(_310, _311, _312), vec3(cbLight._m0[_1782].xyz));
        float _3517 = isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0));
        float _1801 = isnan(1.0) ? _3517 : (isnan(_3517) ? 1.0 : min(_3517, 1.0));
        float _1802 = dot(vec3(cbLight._m0[_1782].xyz), vec3(_1788 * _1794, _1789 * _1794, _1790 * _1794));
        float _3528 = isnan(0.0) ? _1802 : (isnan(_1802) ? 0.0 : max(_1802, 0.0));
        float _1811 = (exp2(log2(1.0 - (isnan(1.0) ? _3528 : (isnan(_3528) ? 1.0 : min(_3528, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1815 = (0.5 / ((_1801 + 9.9999999392252902907785028219223e-09) + _1630)) * _1801;
        float _3539 = isnan(0.0) ? _1815 : (isnan(_1815) ? 0.0 : max(_1815, 0.0));
        float _1817 = (isnan(1.0) ? _3539 : (isnan(_3539) ? 1.0 : min(_3539, 1.0))) * 0.31831014156341552734375;
        float _1818 = isnan(1.0) ? _1489 : (isnan(_1489) ? 1.0 : min(_1489, 1.0));
        _1770 = (((_1811 * cbLight._m0[_1776].x) * _1817) * _1818) + _1706;
        _1772 = (((_1811 * cbLight._m0[_1776].y) * _1817) * _1818) + _1707;
        _1774 = (((_1811 * cbLight._m0[_1776].z) * _1817) * _1818) + _1708;
    }
    float _1853;
    float _1855;
    float _1857;
    if (_1566)
    {
        _1853 = _1770;
        _1855 = _1772;
        _1857 = _1774;
    }
    else
    {
        uint _1864 = _1473 + 11u;
        uint _1870 = _1473 + 3u;
        float _1876 = cbLight._m0[_1870].x + _390;
        float _1877 = cbLight._m0[_1870].y + _391;
        float _1878 = cbLight._m0[_1870].z + _392;
        float _1882 = inversesqrt(dot(vec3(_1876, _1877, _1878), vec3(_1876, _1877, _1878)));
        float _1886 = dot(vec3(_310, _311, _312), vec3(cbLight._m0[_1870].xyz));
        float _3555 = isnan(0.0) ? _1886 : (isnan(_1886) ? 0.0 : max(_1886, 0.0));
        float _1889 = isnan(1.0) ? _3555 : (isnan(_3555) ? 1.0 : min(_3555, 1.0));
        float _1890 = dot(vec3(cbLight._m0[_1870].xyz), vec3(_1876 * _1882, _1877 * _1882, _1878 * _1882));
        float _3566 = isnan(0.0) ? _1890 : (isnan(_1890) ? 0.0 : max(_1890, 0.0));
        float _1899 = (exp2(log2(1.0 - (isnan(1.0) ? _3566 : (isnan(_3566) ? 1.0 : min(_3566, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1903 = (0.5 / ((_1889 + 9.9999999392252902907785028219223e-09) + _1630)) * _1889;
        float _3577 = isnan(0.0) ? _1903 : (isnan(_1903) ? 0.0 : max(_1903, 0.0));
        float _1905 = (isnan(1.0) ? _3577 : (isnan(_3577) ? 1.0 : min(_3577, 1.0))) * 0.31831014156341552734375;
        float _1906 = isnan(1.0) ? _1490 : (isnan(_1490) ? 1.0 : min(_1490, 1.0));
        _1853 = (((_1899 * cbLight._m0[_1864].x) * _1905) * _1906) + _1770;
        _1855 = (((_1899 * cbLight._m0[_1864].y) * _1905) * _1906) + _1772;
        _1857 = (((_1899 * cbLight._m0[_1864].z) * _1905) * _1906) + _1774;
    }
    float _2041;
    float _2043;
    float _2045;
    float _2047;
    float _2049;
    float _2051;
    if (_1471.y == 0u)
    {
        float _1981 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1982 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1981;
        float _1983 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1981;
        float _1984 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1981;
        uvec4 _1996 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1997 = _1996.x;
        uint _2008 = uint((float(_1996.y) * floor(float(uint(cbSceneParam._m0[85u].y * _399) / _1997))) + floor(float(uint(cbSceneParam._m0[85u].x * _398) / _1997)));
        float _2018 = (log2(_1984 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2019 = isnan(0.0) ? _2018 : (isnan(_2018) ? 0.0 : max(_2018, 0.0));
        uint _2022 = uint(isnan(14.0) ? _2019 : (isnan(_2019) ? 14.0 : min(_2019, 14.0)));
        uvec4 _2027 = texelFetch(g_lightClusterGridBuffer, int(((_2022 << 2u) + (_2008 << 6u)) >> 2u));
        uint _2028 = _2027.x;
        uint _2029 = _1996.z;
        float _2158;
        float _2160;
        float _2162;
        float _2164;
        float _2166;
        float _2168;
        if (((((1u << ((_2029 >> 4u) & 15u)) + 4294967295u) & _2028) == 0u) || ((_2029 & 240u) == 0u))
        {
            _2158 = 0.0;
            _2160 = 0.0;
            _2162 = 0.0;
            _2164 = 0.0;
            _2166 = 0.0;
            _2168 = 0.0;
        }
        else
        {
            float _2159;
            float _2161;
            float _2163;
            float _2165;
            float _2167;
            float _2169;
            float _2310 = 0.0;
            float _2311 = 0.0;
            float _2312 = 0.0;
            float _2313 = 0.0;
            float _2314 = 0.0;
            float _2315 = 0.0;
            uint _2316 = 0u;
            uint _2325;
            bool _2326;
            for (;;)
            {
                _2325 = texelFetch(g_lightClassification, int((((_2022 << 5u) + (_2008 << 9u)) + (_2316 << 2u)) >> 2u)).x;
                _2326 = _2325 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_2326)
                {
                    frontier_phi_61_pred = _2310;
                    frontier_phi_61_pred_1 = _2315;
                    frontier_phi_61_pred_2 = _2314;
                    frontier_phi_61_pred_3 = _2313;
                    frontier_phi_61_pred_4 = _2312;
                    frontier_phi_61_pred_5 = _2311;
                }
                else
                {
                    float _2434;
                    float _2435;
                    float _2436;
                    float _2437;
                    float _2438;
                    float _2439;
                    uint _2440;
                    _2434 = _2310;
                    _2435 = _2311;
                    _2436 = _2312;
                    _2437 = _2313;
                    _2438 = _2314;
                    _2439 = _2315;
                    _2440 = _2325;
                    float _2366;
                    float _2367;
                    float _2368;
                    float _2369;
                    float _2370;
                    float _2371;
                    for (;;)
                    {
                        uint _2444 = uint(findLSB(_2440)) + (_2316 << 5u);
                        uint _2441 = (_2440 + 4294967295u) & _2440;
                        uint _2446 = _2444 * 48u;
                        vec4 _2460 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2446)).x, texelFetch(g_PointLightRenderingBuffer, int(_2446 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2446 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2446 + 3u)).x));
                        uint _2466 = (_2444 * 48u) + 4u;
                        vec4 _2479 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2466)).x, texelFetch(g_PointLightRenderingBuffer, int(_2466 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2466 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2466 + 3u)).x));
                        uint _2485 = (_2444 * 48u) + 8u;
                        vec3 _2496 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2485)).x, texelFetch(g_PointLightRenderingBuffer, int(_2485 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2485 + 2u)).x));
                        float _2500 = _2460.x - _1982;
                        float _2501 = _2460.y - _1983;
                        float _2502 = _2460.z - _1984;
                        float _2503 = dot(vec3(_2500, _2501, _2502), vec3(_2500, _2501, _2502));
                        float _2506 = inversesqrt(_2503);
                        float _2515 = 1.0 - (_2503 * _2460.w);
                        float _3603 = isnan(0.0) ? _2515 : (isnan(_2515) ? 0.0 : max(_2515, 0.0));
                        float _2516 = isnan(1.0) ? _3603 : (isnan(_3603) ? 1.0 : min(_3603, 1.0));
                        float _2517 = sqrt(_2503) * _2479.w;
                        float _2520 = 1.39999997615814208984375 / (_2517 + 1.39999997615814208984375);
                        float _2521 = _2520 * _2520;
                        float _2524 = ((1.0 - _2521) * dot(vec3(_420, _423, _426), vec3(_2506 * _2500, _2506 * _2501, _2506 * _2502))) + _2521;
                        float _2527 = _2517 * _2517;
                        float _2531 = ((isnan(0.0) ? _2524 : (isnan(_2524) ? 0.0 : max(_2524, 0.0))) * _2516) / ((_2527 * 0.699999988079071044921875) + 1.0);
                        float _2535 = (-0.0) - _1982;
                        float _2536 = (-0.0) - _1983;
                        float _2537 = (-0.0) - _1984;
                        float _2541 = inversesqrt(dot(vec3(_2535, _2536, _2537), vec3(_2535, _2536, _2537)));
                        float _2545 = dot(vec3(_420, _423, _426), vec3(_2541 * _2535, _2541 * _2536, _2541 * _2537));
                        float _3619 = isnan(0.0) ? _2545 : (isnan(_2545) ? 0.0 : max(_2545, 0.0));
                        float _3630 = isnan(0.0) ? _2524 : (isnan(_2524) ? 0.0 : max(_2524, 0.0));
                        float _2549 = isnan(1.0) ? _3630 : (isnan(_3630) ? 1.0 : min(_3630, 1.0));
                        float _2553 = (0.5 / (((isnan(1.0) ? _3619 : (isnan(_3619) ? 1.0 : min(_3619, 1.0))) + 9.9999999392252902907785028219223e-09) + _2549)) * _2549;
                        float _3641 = isnan(0.0) ? _2553 : (isnan(_2553) ? 0.0 : max(_2553, 0.0));
                        float _2562 = (((isnan(1.0) ? _3641 : (isnan(_3641) ? 1.0 : min(_3641, 1.0))) * 3.1415927410125732421875) / ((_2527 * 2.1991131305694580078125) + 3.141590118408203125)) * _2516;
                        _2369 = (_2531 * _2479.x) + _2437;
                        _2370 = (_2531 * _2479.y) + _2438;
                        _2371 = (_2531 * _2479.z) + _2439;
                        _2366 = (_2562 * _2496.x) + _2434;
                        _2367 = (_2562 * _2496.y) + _2435;
                        _2368 = (_2562 * _2496.z) + _2436;
                        if (_2441 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2434 = _2366;
                            _2435 = _2367;
                            _2436 = _2368;
                            _2437 = _2369;
                            _2438 = _2370;
                            _2439 = _2371;
                            _2440 = _2441;
                        }
                    }
                    frontier_phi_61_pred = _2366;
                    frontier_phi_61_pred_1 = _2371;
                    frontier_phi_61_pred_2 = _2370;
                    frontier_phi_61_pred_3 = _2369;
                    frontier_phi_61_pred_4 = _2368;
                    frontier_phi_61_pred_5 = _2367;
                }
                _2159 = frontier_phi_61_pred;
                _2169 = frontier_phi_61_pred_1;
                _2167 = frontier_phi_61_pred_2;
                _2165 = frontier_phi_61_pred_3;
                _2163 = frontier_phi_61_pred_4;
                _2161 = frontier_phi_61_pred_5;
                uint _2317 = _2316 + 1u;
                if (_2317 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2310 = _2159;
                    _2311 = _2161;
                    _2312 = _2163;
                    _2313 = _2165;
                    _2314 = _2167;
                    _2315 = _2169;
                    _2316 = _2317;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2158 = _2159;
            _2160 = _2161;
            _2162 = _2163;
            _2164 = _2165;
            _2166 = _2167;
            _2168 = _2169;
        }
        uvec4 _2172 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2173 = _2172.z;
        uint _2175 = (_2173 >> 8u) & 15u;
        float _2281;
        float _2283;
        float _2285;
        float _2287;
        float _2289;
        float _2291;
        if (((4294967295u << _2175) & _2028) == 0u)
        {
            _2281 = _2158;
            _2283 = _2160;
            _2285 = _2162;
            _2287 = _2164;
            _2289 = _2166;
            _2291 = _2168;
        }
        else
        {
            float _2306 = inversesqrt(dot(vec3(_1982, _1983, _1984), vec3(_1982, _1983, _1984)));
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2175 < ((_2173 >> 12u) & 15u))
            {
                float _2282;
                float _2284;
                float _2286;
                float _2288;
                float _2290;
                float _2292;
                float _2417 = _2158;
                float _2418 = _2160;
                float _2419 = _2162;
                float _2420 = _2164;
                float _2421 = _2166;
                float _2422 = _2168;
                uint _2423 = _2175;
                uint _2432;
                bool _2433;
                for (;;)
                {
                    _2432 = texelFetch(g_lightClassification, int((((_2022 << 5u) + (_2008 << 9u)) + (_2423 << 2u)) >> 2u)).x;
                    _2433 = _2432 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_2433)
                    {
                        frontier_phi_67_pred = _2420;
                        frontier_phi_67_pred_1 = _2421;
                        frontier_phi_67_pred_2 = _2422;
                        frontier_phi_67_pred_3 = _2419;
                        frontier_phi_67_pred_4 = _2418;
                        frontier_phi_67_pred_5 = _2417;
                    }
                    else
                    {
                        float _2567;
                        float _2568;
                        float _2569;
                        float _2570;
                        float _2571;
                        float _2572;
                        float _2818;
                        float _2819;
                        float _2820;
                        float _2821;
                        float _2822;
                        float _2823;
                        float _2580 = _2417;
                        float _2581 = _2418;
                        float _2582 = _2419;
                        float _2583 = _2420;
                        float _2584 = _2421;
                        float _2585 = _2422;
                        uint _2586 = _2432;
                        uint _2587;
                        vec4 _2612;
                        float _2613;
                        vec4 _2628;
                        vec3 _2640;
                        vec4 _2655;
                        vec4 _2671;
                        float _2718;
                        bool _2719;
                        for (;;)
                        {
                            uint _2597 = ((_2423 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2586));
                            _2587 = (_2586 + 4294967295u) & _2586;
                            uint _2599 = _2597 * 40u;
                            _2612 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2599)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2599 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2599 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2599 + 3u)).x));
                            _2613 = _2612.w;
                            uint _2615 = (_2597 * 40u) + 4u;
                            _2628 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2615)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2615 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2615 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2615 + 3u)).x));
                            uint _2630 = (_2597 * 40u) + 8u;
                            _2640 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2630)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2630 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2630 + 2u)).x));
                            uint _2642 = (_2597 * 40u) + 16u;
                            _2655 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2642)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2642 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2642 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2642 + 3u)).x));
                            uint _2658 = (_2597 * 40u) + 20u;
                            _2671 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2658)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2658 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2658 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2658 + 3u)).x));
                            uint _2674 = (_2597 * 40u) + 24u;
                            vec4 _2687 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2674)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2674 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2674 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2674 + 3u)).x));
                            uint _2693 = (_2597 * 40u) + 28u;
                            vec4 _2706 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2693)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2693 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2693 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2693 + 3u)).x));
                            _2718 = fma(_1984, _2706.z, fma(_1983, _2706.y, _2706.x * _1982)) + _2706.w;
                            _2719 = !((fma(_1984, _2687.z, fma(_1983, _2687.y, _2687.x * _1982)) + _2687.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_2719)
                            {
                                float _2746 = _2612.x - _1982;
                                float _2747 = _2612.y - _1983;
                                float _2748 = _2612.z - _1984;
                                float _2749 = dot(vec3(_2746, _2747, _2748), vec3(_2746, _2747, _2748));
                                float _2752 = inversesqrt(_2749);
                                float _2753 = _2752 * _2746;
                                float _2754 = _2752 * _2747;
                                float _2755 = _2752 * _2748;
                                float _2759 = 1.0 - (_2749 / (_2613 * _2613));
                                float _3652 = isnan(0.0) ? _2759 : (isnan(_2759) ? 0.0 : max(_2759, 0.0));
                                float _2760 = isnan(1.0) ? _3652 : (isnan(_3652) ? 1.0 : min(_3652, 1.0));
                                float _2764 = sqrt(_2749) * _2628.w;
                                float _2766 = 1.39999997615814208984375 / (_2764 + 1.39999997615814208984375);
                                float _2767 = _2766 * _2766;
                                float _2768 = 1.0 - _2767;
                                float _2770 = (_2768 * dot(vec3(_2753, _2754, _2755), vec3(_420, _423, _426))) + _2767;
                                float _2773 = _2764 * _2764;
                                float _2777 = (fma(_1984, _2655.z, fma(_1983, _2655.y, _2655.x * _1982)) + _2655.w) / _2718;
                                float _2778 = (fma(_1984, _2671.z, fma(_1983, _2671.y, _2671.x * _1982)) + _2671.w) / _2718;
                                float _2782 = 1.0 - dot(vec2(_2777, _2778), vec2(_2777, _2778));
                                float _3668 = isnan(0.0) ? _2782 : (isnan(_2782) ? 0.0 : max(_2782, 0.0));
                                float _2783 = isnan(1.0) ? _3668 : (isnan(_3668) ? 1.0 : min(_3668, 1.0));
                                float _2784 = _2783 * (((isnan(0.0) ? _2770 : (isnan(_2770) ? 0.0 : max(_2770, 0.0))) * _2760) / ((_2773 * 0.699999988079071044921875) + 1.0));
                                float _2794 = dot(vec3(_420, _423, _426), vec3((-0.0) - (_1982 * _2306), (-0.0) - (_1983 * _2306), (-0.0) - (_1984 * _2306)));
                                float _3679 = isnan(0.0) ? _2794 : (isnan(_2794) ? 0.0 : max(_2794, 0.0));
                                float _2802 = (_2768 * dot(vec3(_420, _423, _426), vec3(_2753, _2754, _2755))) + _2767;
                                float _3690 = isnan(0.0) ? _2802 : (isnan(_2802) ? 0.0 : max(_2802, 0.0));
                                float _2803 = isnan(1.0) ? _3690 : (isnan(_3690) ? 1.0 : min(_3690, 1.0));
                                float _2807 = (0.5 / (((isnan(1.0) ? _3679 : (isnan(_3679) ? 1.0 : min(_3679, 1.0))) + 9.9999999392252902907785028219223e-09) + _2803)) * _2803;
                                float _3701 = isnan(0.0) ? _2807 : (isnan(_2807) ? 0.0 : max(_2807, 0.0));
                                float _2814 = (_2783 * _2760) * (((isnan(1.0) ? _3701 : (isnan(_3701) ? 1.0 : min(_3701, 1.0))) * 3.1415927410125732421875) / ((_2773 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_73_pred = _2814 * _2640.x;
                                frontier_phi_73_pred_1 = _2814 * _2640.y;
                                frontier_phi_73_pred_2 = _2784 * _2628.z;
                                frontier_phi_73_pred_3 = _2784 * _2628.y;
                                frontier_phi_73_pred_4 = _2784 * _2628.x;
                                frontier_phi_73_pred_5 = _2814 * _2640.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _2818 = frontier_phi_73_pred;
                            _2819 = frontier_phi_73_pred_1;
                            _2823 = frontier_phi_73_pred_2;
                            _2822 = frontier_phi_73_pred_3;
                            _2821 = frontier_phi_73_pred_4;
                            _2820 = frontier_phi_73_pred_5;
                            _2570 = _2821 + _2583;
                            _2571 = _2822 + _2584;
                            _2572 = _2823 + _2585;
                            _2567 = _2818 + _2580;
                            _2568 = _2819 + _2581;
                            _2569 = _2820 + _2582;
                            if (_2587 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2580 = _2567;
                                _2581 = _2568;
                                _2582 = _2569;
                                _2583 = _2570;
                                _2584 = _2571;
                                _2585 = _2572;
                                _2586 = _2587;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _2570;
                        frontier_phi_67_pred_1 = _2571;
                        frontier_phi_67_pred_2 = _2572;
                        frontier_phi_67_pred_3 = _2569;
                        frontier_phi_67_pred_4 = _2568;
                        frontier_phi_67_pred_5 = _2567;
                    }
                    _2288 = frontier_phi_67_pred;
                    _2290 = frontier_phi_67_pred_1;
                    _2292 = frontier_phi_67_pred_2;
                    _2286 = frontier_phi_67_pred_3;
                    _2284 = frontier_phi_67_pred_4;
                    _2282 = frontier_phi_67_pred_5;
                    uint _2424 = _2423 + 1u;
                    if (_2424 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2417 = _2282;
                        _2418 = _2284;
                        _2419 = _2286;
                        _2420 = _2288;
                        _2421 = _2290;
                        _2422 = _2292;
                        _2423 = _2424;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _2290;
                frontier_phi_55_56_ladder_1 = _2292;
                frontier_phi_55_56_ladder_2 = _2288;
                frontier_phi_55_56_ladder_3 = _2286;
                frontier_phi_55_56_ladder_4 = _2284;
                frontier_phi_55_56_ladder_5 = _2282;
            }
            else
            {
                frontier_phi_55_56_ladder = _2166;
                frontier_phi_55_56_ladder_1 = _2168;
                frontier_phi_55_56_ladder_2 = _2164;
                frontier_phi_55_56_ladder_3 = _2162;
                frontier_phi_55_56_ladder_4 = _2160;
                frontier_phi_55_56_ladder_5 = _2158;
            }
            _2281 = frontier_phi_55_56_ladder_5;
            _2283 = frontier_phi_55_56_ladder_4;
            _2285 = frontier_phi_55_56_ladder_3;
            _2287 = frontier_phi_55_56_ladder_2;
            _2289 = frontier_phi_55_56_ladder;
            _2291 = frontier_phi_55_56_ladder_1;
        }
        float _2296 = isnan(1.0) ? _464 : (isnan(_464) ? 1.0 : min(_464, 1.0));
        _2041 = (_2296 * _2287) + _1604;
        _2043 = (_2296 * _2289) + _1606;
        _2045 = (_2296 * _2291) + _1608;
        _2047 = ((_2281 * 0.039999999105930328369140625) * _2296) + _1853;
        _2049 = ((_2283 * 0.039999999105930328369140625) * _2296) + _1855;
        _2051 = ((_2285 * 0.039999999105930328369140625) * _2296) + _1857;
    }
    else
    {
        _2041 = _1604;
        _2043 = _1606;
        _2045 = _1608;
        _2047 = _1853;
        _2049 = _1855;
        _2051 = _1857;
    }
    uint _2057 = _440 + uint(cbMatDynParam._m0[0u].w);
    float _2063 = cbInstanceData._m0[_2057].x * (((cbMtdParam._m0[11u].x * cbMtdParam._m0[13u].z) * _292.x) + ((cbMtdParam._m0[10u].x * cbMtdParam._m0[13u].x) * _263.x));
    float _2064 = cbInstanceData._m0[_2057].y * (((cbMtdParam._m0[11u].y * cbMtdParam._m0[13u].z) * _292.y) + ((cbMtdParam._m0[10u].y * cbMtdParam._m0[13u].x) * _263.y));
    float _2065 = cbInstanceData._m0[_2057].z * (((cbMtdParam._m0[11u].z * cbMtdParam._m0[13u].z) * _292.z) + ((cbMtdParam._m0[10u].z * cbMtdParam._m0[13u].x) * _263.z));
    float _3717 = isnan(0.0) ? _450 : (isnan(_450) ? 0.0 : max(_450, 0.0));
    float _3728 = isnan(0.0) ? _451 : (isnan(_451) ? 0.0 : max(_451, 0.0));
    float _3739 = isnan(0.0) ? _452 : (isnan(_452) ? 0.0 : max(_452, 0.0));
    float _2082 = (((isnan(1.0) ? _3717 : (isnan(_3717) ? 1.0 : min(_3717, 1.0))) * (_2041 + ((isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0))) * _464))) + ((_2047 + ((isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0))) * _1243)) * cbPerFrame._m0[3u].x)) + _2063;
    float _2084 = (_2064 + ((_2049 + ((isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0))) * _1243)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _3728 : (isnan(_3728) ? 1.0 : min(_3728, 1.0))) * (_2043 + ((isnan(0.0) ? _1167 : (isnan(_1167) ? 0.0 : max(_1167, 0.0))) * _464)));
    float _2086 = (_2065 + ((_2051 + ((isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0))) * _1243)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _3739 : (isnan(_3739) ? 1.0 : min(_3739, 1.0))) * (_2045 + ((isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0))) * _464)));
    float _3765 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2099 = isnan(1.0) ? _3765 : (isnan(_3765) ? 1.0 : min(_3765, 1.0));
    uint _2100 = _439 + 6u;
    float _2108 = _398 / cbSceneParam._m0[86u].x;
    float _2109 = _399 / cbSceneParam._m0[86u].y;
    vec4 _2123 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2108, _2109, (log2((isnan(cbSceneParam._m0[77u].w) ? _332 : (isnan(_332) ? cbSceneParam._m0[77u].w : min(_332, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2125 = _2123.x;
    float _2126 = _2123.y;
    float _2127 = _2123.z;
    float _2128 = _2123.w;
    float _2221;
    float _2223;
    float _2225;
    float _2227;
    if (_332 > cbSceneParam._m0[78u].w)
    {
        float _2183 = isnan(_332) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _332 : min(cbSceneParam._m0[80u].w, _332));
        float _2184 = _2183 / _332;
        float _2195 = _2184 * _383;
        float _2196 = _384 * _2184;
        float _2197 = (-0.0) - _2196;
        float _2199 = _2184 * _385;
        float _2201 = (cbSceneParam._m0[77u].w * _2197) / _2183;
        float _2202 = _2201 + cbSceneParam._m0[79u].w;
        float _2203 = cbSceneParam._m0[79u].w - _2196;
        float _2209 = sqrt(((_2195 * _2195) + (_2196 * _2196)) + (_2199 * _2199));
        float _2212 = (1.0 - (cbSceneParam._m0[77u].w / _2183)) * _2209;
        float _2217 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2219 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2379;
        if (abs((_2197 - _2201) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2379 = ((((_2202 > 0.0) ? exp2(_2217 * _2202) : (2.0 - exp2(_2219 * _2202))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2212;
        }
        else
        {
            float _2339 = 1.0 / cbSceneParam._m0[80u].x;
            float _2340 = isnan(_2203) ? _2202 : (isnan(_2202) ? _2203 : max(_2202, _2203));
            float _2341 = isnan(_2203) ? _2202 : (isnan(_2202) ? _2203 : min(_2202, _2203));
            float _2350 = isnan(0.0) ? _2340 : (isnan(_2340) ? 0.0 : min(_2340, 0.0));
            float _2351 = isnan(0.0) ? _2341 : (isnan(_2341) ? 0.0 : min(_2341, 0.0));
            _2379 = ((abs(_2209 / _2197) * cbSceneParam._m0[80u].y) * ((((_2350 - _2351) * 2.0) - ((exp2(_2217 * (isnan(0.0) ? _2340 : (isnan(_2340) ? 0.0 : max(_2340, 0.0)))) - exp2(_2217 * (isnan(0.0) ? _2341 : (isnan(_2341) ? 0.0 : max(_2341, 0.0))))) * _2339)) - ((exp2(_2219 * _2350) - exp2(_2219 * _2351)) * _2339))) + (_2212 * cbSceneParam._m0[80u].z);
        }
        vec4 _2381 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2108, _2109, 1.0), 0.0);
        float _2390 = exp2((_2379 * (-1.44269502162933349609375)) * (1.0 - _2381.w));
        float _2391 = log2(_2390);
        float _2407 = log2(_2128);
        _2221 = (exp2(_2407 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2391 * cbSceneParam._m0[78u].x)) * _2381.x) / cbSceneParam._m0[78u].x)) + _2125;
        _2223 = (exp2(_2407 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2391 * cbSceneParam._m0[78u].y)) * _2381.y) / cbSceneParam._m0[78u].y)) + _2126;
        _2225 = (exp2(_2407 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2391 * cbSceneParam._m0[78u].z)) * _2381.z) / cbSceneParam._m0[78u].z)) + _2127;
        _2227 = _2390 * _2128;
    }
    else
    {
        _2221 = _2125;
        _2223 = _2126;
        _2225 = _2127;
        _2227 = _2128;
    }
    float _2239 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2240 = _2239 == 3.0;
    float _2242 = log2(_2227);
    float _2246 = exp2(_2242 * cbSceneParam._m0[78u].x);
    float _2247 = exp2(_2242 * cbSceneParam._m0[78u].y);
    float _2248 = exp2(_2242 * cbSceneParam._m0[78u].z);
    float _2249 = _2246 * (isnan(0.0) ? _2082 : (isnan(_2082) ? 0.0 : max(_2082, 0.0)));
    float _2250 = _2247 * (isnan(0.0) ? _2084 : (isnan(_2084) ? 0.0 : max(_2084, 0.0)));
    float _2251 = _2248 * (isnan(0.0) ? _2086 : (isnan(_2086) ? 0.0 : max(_2086, 0.0)));
    float _2260 = (_2239 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2260 * (_2240 ? _2249 : (_2249 + (cbSceneParam._m0[72u].w * _2221)));
    SV_Target.y = _2260 * (_2240 ? _2250 : (_2250 + (cbSceneParam._m0[72u].w * _2223)));
    SV_Target.z = _2260 * (_2240 ? _2251 : (_2251 + (cbSceneParam._m0[72u].w * _2225)));
    SV_Target.w = cbInstanceData._m0[_2100].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2063) * _2099) * _2246) * _2260;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2064) * _2099) * _2247) * _2260;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2065) * _2099) * _2248) * _2260;
    SV_Target_1.w = cbInstanceData._m0[_2100].w;
}


