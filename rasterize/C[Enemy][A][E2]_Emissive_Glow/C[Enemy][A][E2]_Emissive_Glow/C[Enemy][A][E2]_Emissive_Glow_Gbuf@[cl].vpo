#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec4 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out float TEXCOORD_4;
layout(location = 4, component = 1) out float TEXCOORD_10;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    TEXCOORD_10 = 0.0;
    float _159 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _161 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _162 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _172 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _173 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _174 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _180 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _182 = texelFetch(g_InstanceIndexBuffer, int(_180));
    uint _183 = _182.x;
    uint _193 = (floatBitsToUint(cbInstanceData._m0[(_183 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _200 = _193 + 1u;
    uint _207 = _193 + 2u;
    precise float _214 = POSITION.x * cbObjMatrix._m0[_193].x;
    precise float _215 = POSITION.y * cbObjMatrix._m0[_193].y;
    precise float _216 = _215 + _214;
    precise float _217 = POSITION.z * cbObjMatrix._m0[_193].z;
    precise float _218 = _217 + _216;
    precise float _219 = 1.0 * cbObjMatrix._m0[_193].w;
    precise float _221 = _219 + _218;
    precise float _222 = POSITION.x * cbObjMatrix._m0[_200].x;
    precise float _223 = POSITION.y * cbObjMatrix._m0[_200].y;
    precise float _224 = _223 + _222;
    precise float _225 = POSITION.z * cbObjMatrix._m0[_200].z;
    precise float _226 = _225 + _224;
    precise float _227 = 1.0 * cbObjMatrix._m0[_200].w;
    precise float _228 = _227 + _226;
    precise float _229 = POSITION.x * cbObjMatrix._m0[_207].x;
    precise float _230 = POSITION.y * cbObjMatrix._m0[_207].y;
    precise float _231 = _230 + _229;
    precise float _232 = POSITION.z * cbObjMatrix._m0[_207].z;
    precise float _233 = _232 + _231;
    precise float _234 = 1.0 * cbObjMatrix._m0[_207].w;
    precise float _235 = _234 + _233;
    float _241 = cbSceneParam._m0[3u].x - _221;
    float _242 = cbSceneParam._m0[3u].y - _228;
    float _243 = cbSceneParam._m0[3u].z - _235;
    precise float _270 = _221 - cbSceneParam._m0[3u].x;
    precise float _271 = _228 - cbSceneParam._m0[3u].y;
    precise float _272 = _235 - cbSceneParam._m0[3u].z;
    precise float _300 = _270 * cbSceneParam._m0[24u].x;
    precise float _301 = _271 * cbSceneParam._m0[24u].y;
    precise float _302 = _301 + _300;
    precise float _303 = _272 * cbSceneParam._m0[24u].z;
    precise float _304 = _303 + _302;
    precise float _305 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _306 = _305 + _304;
    precise float _307 = _270 * cbSceneParam._m0[25u].x;
    precise float _308 = _271 * cbSceneParam._m0[25u].y;
    precise float _309 = _308 + _307;
    precise float _310 = _272 * cbSceneParam._m0[25u].z;
    precise float _311 = _310 + _309;
    precise float _312 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _313 = _312 + _311;
    precise float _314 = _270 * cbSceneParam._m0[26u].x;
    precise float _315 = _271 * cbSceneParam._m0[26u].y;
    precise float _316 = _315 + _314;
    precise float _317 = _272 * cbSceneParam._m0[26u].z;
    precise float _318 = _317 + _316;
    precise float _319 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _320 = _319 + _318;
    precise float _321 = _270 * cbSceneParam._m0[27u].x;
    precise float _322 = _271 * cbSceneParam._m0[27u].y;
    precise float _323 = _322 + _321;
    precise float _324 = _272 * cbSceneParam._m0[27u].z;
    precise float _325 = _324 + _323;
    precise float _326 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _327 = _326 + _325;
    gl_Position.x = _306;
    gl_Position.y = _313;
    gl_Position.z = _320;
    gl_Position.w = _327;
    NORMAL_1.x = fma(_162, cbObjMatrix._m0[_193].z, fma(_161, cbObjMatrix._m0[_193].y, cbObjMatrix._m0[_193].x * _159));
    NORMAL_1.y = fma(_162, cbObjMatrix._m0[_200].z, fma(_161, cbObjMatrix._m0[_200].y, cbObjMatrix._m0[_200].x * _159));
    NORMAL_1.z = fma(_162, cbObjMatrix._m0[_207].z, fma(_161, cbObjMatrix._m0[_207].y, cbObjMatrix._m0[_207].x * _159));
    NORMAL_1.w = float(_183);
    TANGENT_1.x = fma(_174, cbObjMatrix._m0[_193].z, fma(_173, cbObjMatrix._m0[_193].y, cbObjMatrix._m0[_193].x * _172));
    TANGENT_1.y = fma(_174, cbObjMatrix._m0[_200].z, fma(_173, cbObjMatrix._m0[_200].y, cbObjMatrix._m0[_200].x * _172));
    TANGENT_1.z = fma(_174, cbObjMatrix._m0[_207].z, fma(_173, cbObjMatrix._m0[_207].y, cbObjMatrix._m0[_207].x * _172));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4 = COLOR_1.x;
    TEXCOORD_10 = sqrt(((_241 * _241) + (_242 * _242)) + (_243 * _243));
}


