#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 2) uniform texture2D C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 3) uniform texture2D C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD;
layout(location = 4) in float TEXCOORD_4;
layout(location = 4, component = 1) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _112 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _113 = _112 * NORMAL.x;
    float _114 = _112 * NORMAL.y;
    float _115 = _112 * NORMAL.z;
    vec4 _135 = texture(sampler2D(C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _161 = texture(sampler2D(C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    float _169 = (_161.x * cbMtdParam._m0[12u].x) + (_135.x * cbMtdParam._m0[9u].x);
    float _170 = (_161.y * cbMtdParam._m0[12u].y) + (_135.y * cbMtdParam._m0[9u].y);
    float _171 = (_161.z * cbMtdParam._m0[12u].z) + (_135.z * cbMtdParam._m0[9u].z);
    vec4 _193 = texture(sampler2D(C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    vec4 _222 = texture(sampler2D(C_Enemy_A_E2_Emissive_Glow_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _239 = inversesqrt(dot(vec3(_113, _114, _115), vec3(_113, _114, _115)));
    float _343 = isnan(0.0) ? _169 : (isnan(_169) ? 0.0 : max(_169, 0.0));
    float _354 = isnan(0.0) ? _170 : (isnan(_170) ? 0.0 : max(_170, 0.0));
    float _365 = isnan(0.0) ? _171 : (isnan(_171) ? 0.0 : max(_171, 0.0));
    uint _258 = uint(roundEven(NORMAL.w)) * 13u;
    uint _260 = (_258 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _266 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _343 : (isnan(_343) ? 1.0 : min(_343, 1.0)))) * cbInstanceData._m0[_260].x;
    float _267 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _354 : (isnan(_354) ? 1.0 : min(_354, 1.0)))) * cbInstanceData._m0[_260].y;
    float _268 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _365 : (isnan(_365) ? 1.0 : min(_365, 1.0)))) * cbInstanceData._m0[_260].z;
    float _376 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
    float _387 = isnan(0.0) ? _267 : (isnan(_267) ? 0.0 : max(_267, 0.0));
    float _398 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    uint _278 = _258 + 6u;
    float _315;
    float _316;
    float _317;
    float _318;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _315 = cbInstanceData._m0[_278].w;
        _316 = cbInstanceData._m0[_278].w;
        _317 = cbInstanceData._m0[_278].w;
        _318 = cbInstanceData._m0[_278].w;
    }
    else
    {
        _315 = cbMtdParam._m0[2u].w;
        _316 = 0.0;
        _317 = float(floatBitsToUint(cbInstanceData._m0[_258 + 5u]).x) * 0.0039215688593685626983642578125;
        _318 = TEXCOORD_4;
    }
    SV_Target.x = ((_113 * 0.5) * _239) + 0.500488758087158203125;
    SV_Target.y = ((_114 * 0.5) * _239) + 0.500488758087158203125;
    SV_Target.z = ((_115 * 0.5) * _239) + 0.500488758087158203125;
    SV_Target.w = _316;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _318;
    SV_Target_2.x = isnan(1.0) ? _376 : (isnan(_376) ? 1.0 : min(_376, 1.0));
    SV_Target_2.y = isnan(1.0) ? _387 : (isnan(_387) ? 1.0 : min(_387, 1.0));
    SV_Target_2.z = isnan(1.0) ? _398 : (isnan(_398) ? 1.0 : min(_398, 1.0));
    SV_Target_2.w = _317;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _316;
    SV_Target_4.x = (cbInstanceData._m0[_260].x * (((cbMtdParam._m0[11u].x * cbMtdParam._m0[13u].z) * _222.x) + ((cbMtdParam._m0[10u].x * cbMtdParam._m0[13u].x) * _193.x))) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = (cbInstanceData._m0[_260].y * (((cbMtdParam._m0[11u].y * cbMtdParam._m0[13u].z) * _222.y) + ((cbMtdParam._m0[10u].y * cbMtdParam._m0[13u].x) * _193.y))) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = (cbInstanceData._m0[_260].z * (((cbMtdParam._m0[11u].z * cbMtdParam._m0[13u].z) * _222.z) + ((cbMtdParam._m0[10u].z * cbMtdParam._m0[13u].x) * _193.z))) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _315;
}


