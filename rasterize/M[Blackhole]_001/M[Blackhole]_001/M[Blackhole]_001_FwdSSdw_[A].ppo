#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Blackhole_001_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Blackhole_001_snp_0_Texture2D_3;
layout(set = 0, binding = 2) uniform texture2D M_Blackhole_001_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _702;
float _1763;
float _1764;
float _1765;
float _1766;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _168 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _169 = _168 * NORMAL.x;
    float _170 = _168 * NORMAL.y;
    float _171 = _168 * NORMAL.z;
    float _176;
    float _177;
    float _178;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _176 = (-0.0) - _169;
        _177 = (-0.0) - _170;
        _178 = (-0.0) - _171;
    }
    else
    {
        _176 = _169;
        _177 = _170;
        _178 = _171;
    }
    vec4 _195 = texture(sampler2D(M_Blackhole_001_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _198 = _195.x;
    float _204 = exp2(log2(cbMtdParam._m0[10u].z * _198) * cbMtdParam._m0[10u].w);
    float _1775 = isnan(0.0) ? _204 : (isnan(_204) ? 0.0 : max(_204, 0.0));
    float _206 = isnan(1.0) ? _1775 : (isnan(_1775) ? 1.0 : min(_1775, 1.0));
    float _215 = exp2(log2(cbMtdParam._m0[11u].x * _198) * cbMtdParam._m0[11u].y);
    float _1786 = isnan(0.0) ? _215 : (isnan(_215) ? 0.0 : max(_215, 0.0));
    float _216 = isnan(1.0) ? _1786 : (isnan(_1786) ? 1.0 : min(_1786, 1.0));
    float _232 = cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x;
    float _237 = _232 * cbMtdParam._m0[9u].w;
    float _238 = sin(_237);
    float _239 = cos(_237);
    float _240 = TEXCOORD.x + (-0.5);
    float _242 = TEXCOORD.y + (-0.5);
    vec4 _262 = texture(sampler2D(M_Blackhole_001_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * (fma(_242, (-0.0) - _238, _239 * _240) + 0.5)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (fma(_242, _239, _238 * _240) + 0.5)) + cbTextureTilingScale._m0[1u].w));
    float _279 = exp2(log2(cbMtdParam._m0[10u].y * _198) * cbMtdParam._m0[10u].x);
    float _280 = exp2(log2(cbMtdParam._m0[10u].y * _195.y) * cbMtdParam._m0[10u].x);
    float _1797 = isnan(0.0) ? _279 : (isnan(_279) ? 0.0 : max(_279, 0.0));
    float _1808 = isnan(0.0) ? _280 : (isnan(_280) ? 0.0 : max(_280, 0.0));
    float _283 = ((_262.x + (-0.5)) * cbMtdParam._m0[11u].w) * (isnan(1.0) ? _1797 : (isnan(_1797) ? 1.0 : min(_1797, 1.0)));
    float _284 = ((_262.y + (-0.5)) * cbMtdParam._m0[11u].w) * (isnan(1.0) ? _1808 : (isnan(_1808) ? 1.0 : min(_1808, 1.0)));
    float _287 = cbSceneParam._m0[86u].x * (_283 + ((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x));
    float _288 = (_284 + ((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y)) * cbSceneParam._m0[86u].y;
    float _296 = isnan(cbInstanceData._m0[8u].x) ? _287 : (isnan(_287) ? cbInstanceData._m0[8u].x : max(_287, cbInstanceData._m0[8u].x));
    float _297 = isnan(cbInstanceData._m0[8u].y) ? _288 : (isnan(_288) ? cbInstanceData._m0[8u].y : max(_288, cbInstanceData._m0[8u].y));
    vec4 _301 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _296 : (isnan(_296) ? cbInstanceData._m0[8u].z : min(_296, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _297 : (isnan(_297) ? cbInstanceData._m0[8u].w : min(_297, cbInstanceData._m0[8u].w))));
    float _310 = cbSceneParam._m0[72u].w * _301.x;
    float _311 = cbSceneParam._m0[72u].w * _301.y;
    float _312 = cbSceneParam._m0[72u].w * _301.z;
    float _321 = cbMtdParam._m0[9u].z * _232;
    float _322 = sin(_321);
    float _323 = cos(_321);
    float _324 = _240 + (cbMtdParam._m0[12u].x * _232);
    float _325 = _242 + (_232 * cbMtdParam._m0[12u].y);
    vec4 _346 = texture(sampler2D(M_Blackhole_001_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * ((_283 + 0.5) + fma(_325, (-0.0) - _322, _324 * _323))) + cbTextureTilingScale._m0[0u].z, (((_284 + 0.5) + fma(_325, _323, _324 * _322)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _362 = exp2(log2(cbMtdParam._m0[9u].x * _198) * cbMtdParam._m0[9u].y);
    float _1839 = isnan(0.0) ? _362 : (isnan(_362) ? 0.0 : max(_362, 0.0));
    float _363 = isnan(1.0) ? _1839 : (isnan(_1839) ? 1.0 : min(_1839, 1.0));
    float _370 = (_363 * ((_346.x * 28.0) - _310)) + _310;
    float _371 = (_363 * ((_346.y * 1.62963497638702392578125) - _311)) + _311;
    float _372 = (_363 * ((_346.z * 0.2912090122699737548828125) - _312)) + _312;
    float _382 = inversesqrt(dot(vec3(_176, _177, _178), vec3(_176, _177, _178)));
    float _383 = _382 * _176;
    float _384 = _382 * _177;
    float _385 = _382 * _178;
    float _1850 = isnan(0.0) ? _206 : (isnan(_206) ? 0.0 : max(_206, 0.0));
    float _386 = isnan(1.0) ? _1850 : (isnan(_1850) ? 1.0 : min(_1850, 1.0));
    float _402 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _442 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _452 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _442);
    float _453 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _442);
    float _454 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _442);
    float _458 = inversesqrt(dot(vec3(_452, _453, _454), vec3(_452, _453, _454)));
    float _459 = _452 * _458;
    float _460 = _453 * _458;
    float _461 = _454 * _458;
    vec4 _466 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _468 = _466.w;
    float _473 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _474 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _482 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_473 * cbSceneParam._m0[86u].x, _474 * cbSceneParam._m0[86u].y));
    float _485 = _482.x * TEXCOORD.z;
    float _486 = dot(vec3(_383, _384, _385), vec3(_459, _460, _461));
    float _489 = _486 * 2.0;
    float _494 = (_489 * _383) - _459;
    float _495 = (_489 * _384) - _460;
    float _496 = (_489 * _385) - _461;
    float _500 = abs(dot(vec3(_459, _460, _461), vec3(_383, _384, _385)));
    float _1861 = isnan(0.0) ? _500 : (isnan(_500) ? 0.0 : max(_500, 0.0));
    float _528 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _532 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _536 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _701;
    float _703;
    float _704;
    float _705;
    float _706;
    float _707;
    float _708;
    float _709;
    float _710;
    float _711;
    float _712;
    float _713;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _563 = fma(_536, cbModelParam._m0[26u].z, fma(_532, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _528));
        float _567 = fma(_536, cbModelParam._m0[27u].z, fma(_532, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _528));
        float _571 = fma(_536, cbModelParam._m0[28u].z, fma(_532, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _528));
        float _594 = _528 + _383;
        float _595 = _532 + _384;
        float _596 = _536 + _385;
        float _606 = fma(_596, cbModelParam._m0[26u].z, fma(_595, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _594)) - _563;
        float _607 = fma(_596, cbModelParam._m0[27u].z, fma(_595, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _594)) - _567;
        float _608 = fma(_596, cbModelParam._m0[28u].z, fma(_595, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _594)) - _571;
        float _612 = inversesqrt(dot(vec3(_606, _607, _608), vec3(_606, _607, _608)));
        float _625 = ((_612 * _606) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_563 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _626 = ((_612 * _607) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_567 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _627 = ((_612 * _608) / cbModelParam._m0[34u].z) + ((((((_571 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _630 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_625, _626, _627), 0.0);
        vec4 _637 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_625, _626, _627), 0.0);
        vec4 _644 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_625, _626, _627), 0.0);
        vec4 _651 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_625, _626, _627), 0.0);
        float _664 = exp2((_630.w + (-0.5)) * 20.0) * 2.0;
        float _674 = exp2((_637.w + (-0.5)) * 20.0) * 2.0;
        float _684 = exp2((_644.w + (-0.5)) * 20.0) * 2.0;
        float _694 = exp2((_651.w + (-0.5)) * 20.0) * 2.0;
        float _695 = _694 * (_651.x + (-0.5));
        float _696 = _694 * (_651.y + (-0.5));
        float _697 = _694 * (_651.z + (-0.5));
        _701 = _664 * (_630.z + (-0.5));
        _703 = _664 * (_630.y + (-0.5));
        _704 = _664 * (_630.x + (-0.5));
        _705 = _674 * (_637.z + (-0.5));
        _706 = _674 * (_637.y + (-0.5));
        _707 = _674 * (_637.x + (-0.5));
        _708 = _684 * (_644.z + (-0.5));
        _709 = _684 * (_644.y + (-0.5));
        _710 = _684 * (_644.x + (-0.5));
        _711 = isnan(0.0) ? _697 : (isnan(_697) ? 0.0 : max(_697, 0.0));
        _712 = isnan(0.0) ? _696 : (isnan(_696) ? 0.0 : max(_696, 0.0));
        _713 = isnan(0.0) ? _695 : (isnan(_695) ? 0.0 : max(_695, 0.0));
    }
    else
    {
        _701 = _702;
        _703 = _702;
        _704 = _702;
        _705 = _702;
        _706 = _702;
        _707 = _702;
        _708 = _702;
        _709 = _702;
        _710 = _702;
        _711 = _702;
        _712 = _702;
        _713 = _702;
    }
    float _875;
    float _876;
    float _877;
    float _878;
    float _879;
    float _880;
    float _881;
    float _882;
    float _883;
    float _884;
    float _885;
    float _886;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _739 = fma(_536, cbModelParam._m0[30u].z, fma(_532, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _528));
        float _743 = fma(_536, cbModelParam._m0[31u].z, fma(_532, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _528));
        float _747 = fma(_536, cbModelParam._m0[32u].z, fma(_532, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _528));
        float _770 = _528 + _383;
        float _771 = _532 + _384;
        float _772 = _536 + _385;
        float _782 = fma(_772, cbModelParam._m0[30u].z, fma(_771, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _770)) - _739;
        float _783 = fma(_772, cbModelParam._m0[31u].z, fma(_771, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _770)) - _743;
        float _784 = fma(_772, cbModelParam._m0[32u].z, fma(_771, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _770)) - _747;
        float _788 = inversesqrt(dot(vec3(_782, _783, _784), vec3(_782, _783, _784)));
        float _801 = ((_788 * _782) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_739 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _802 = ((_788 * _783) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_743 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _803 = ((_788 * _784) / cbModelParam._m0[35u].z) + ((((((_747 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _805 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_801, _802, _803), 0.0);
        vec4 _812 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_801, _802, _803), 0.0);
        vec4 _819 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_801, _802, _803), 0.0);
        vec4 _826 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_801, _802, _803), 0.0);
        float _838 = exp2((_805.w + (-0.5)) * 20.0) * 2.0;
        float _848 = exp2((_812.w + (-0.5)) * 20.0) * 2.0;
        float _858 = exp2((_819.w + (-0.5)) * 20.0) * 2.0;
        float _868 = exp2((_826.w + (-0.5)) * 20.0) * 2.0;
        float _869 = _868 * (_826.x + (-0.5));
        float _870 = _868 * (_826.y + (-0.5));
        float _871 = _868 * (_826.z + (-0.5));
        _875 = _838 * (_805.z + (-0.5));
        _876 = _838 * (_805.y + (-0.5));
        _877 = _838 * (_805.x + (-0.5));
        _878 = _848 * (_812.z + (-0.5));
        _879 = _848 * (_812.y + (-0.5));
        _880 = _848 * (_812.x + (-0.5));
        _881 = _858 * (_819.z + (-0.5));
        _882 = _858 * (_819.y + (-0.5));
        _883 = _858 * (_819.x + (-0.5));
        _884 = isnan(0.0) ? _871 : (isnan(_871) ? 0.0 : max(_871, 0.0));
        _885 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
        _886 = isnan(0.0) ? _869 : (isnan(_869) ? 0.0 : max(_869, 0.0));
    }
    else
    {
        _875 = _702;
        _876 = _702;
        _877 = _702;
        _878 = _702;
        _879 = _702;
        _880 = _702;
        _881 = _702;
        _882 = _702;
        _883 = _702;
        _884 = _702;
        _885 = _702;
        _886 = _702;
    }
    float _901 = _494 * 0.5;
    float _902 = _495 * 0.5;
    float _903 = _496 * 0.5;
    float _904 = dot(vec4(_901, _902, _903, 1.0), vec4(_877, _880, _883, _886));
    float _907 = dot(vec4(_901, _902, _903, 1.0), vec4(_876, _879, _882, _885));
    float _910 = dot(vec4(_901, _902, _903, 1.0), vec4(_875, _878, _881, _884));
    float _945;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _917 = dot(vec4(_901, _902, _903, 1.0), vec4(_701, _705, _708, _711));
        float _921 = dot(vec4(_901, _902, _903, 1.0), vec4(_703, _706, _709, _712));
        float _925 = dot(vec4(_901, _902, _903, 1.0), vec4(_704, _707, _710, _713));
        float _932 = dot(vec4(cbModelParam._m0[39u]), vec4(_901, _902, _903, 1.0));
        _945 = dot(vec3(isnan(0.0) ? _925 : (isnan(_925) ? 0.0 : max(_925, 0.0)), isnan(0.0) ? _921 : (isnan(_921) ? 0.0 : max(_921, 0.0)), isnan(0.0) ? _917 : (isnan(_917) ? 0.0 : max(_917, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_932) ? 0.0 : (isnan(0.0) ? _932 : max(0.0, _932))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _945 = 1.0;
    }
    float _956;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _947 = dot(vec4(cbModelParam._m0[40u]), vec4(_901, _902, _903, 1.0));
        _956 = dot(vec3(isnan(0.0) ? _904 : (isnan(_904) ? 0.0 : max(_904, 0.0)), isnan(0.0) ? _907 : (isnan(_907) ? 0.0 : max(_907, 0.0)), isnan(0.0) ? _910 : (isnan(_910) ? 0.0 : max(_910, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_947) ? 0.0 : (isnan(0.0) ? _947 : max(0.0, _947))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _956 = 1.0;
    }
    float _960 = (_956 * cbModelParam._m0[1u].x) + (_945 * (1.0 - cbModelParam._m0[1u].x));
    float _966 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1049;
    float _1051;
    float _1053;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1016 = fma(_536, cbModelParam._m0[13u].z, fma(_532, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _528)) + cbModelParam._m0[13u].w;
        float _1020 = fma(_536, cbModelParam._m0[14u].z, fma(_532, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _528)) + cbModelParam._m0[14u].w;
        float _1024 = fma(_536, cbModelParam._m0[15u].z, fma(_532, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _528)) + cbModelParam._m0[15u].w;
        float _1027 = fma(_496, cbModelParam._m0[13u].z, fma(_495, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _494));
        float _1030 = fma(_496, cbModelParam._m0[14u].z, fma(_495, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _494));
        float _1033 = fma(_496, cbModelParam._m0[15u].z, fma(_495, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _494));
        float _1059;
        if (_1027 > 0.0)
        {
            _1059 = abs((1.0 - _1016) / _1027);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1027 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1016 + 1.0) / _1027);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1059 = frontier_phi_16_14_ladder;
        }
        float _1352;
        if (_1030 > 0.0)
        {
            _1352 = abs((1.0 - _1020) / _1030);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1030 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1020 + 1.0) / _1030);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1352 = frontier_phi_25_21_ladder;
        }
        float _1527;
        if (_1033 > 0.0)
        {
            _1527 = abs((1.0 - _1024) / _1033);
        }
        else
        {
            float frontier_phi_39_32_ladder;
            if (_1033 < 0.0)
            {
                frontier_phi_39_32_ladder = abs((_1024 + 1.0) / _1033);
            }
            else
            {
                frontier_phi_39_32_ladder = 5000.0;
            }
            _1527 = frontier_phi_39_32_ladder;
        }
        float _1529 = isnan(_1352) ? _1059 : (isnan(_1059) ? _1352 : min(_1059, _1352));
        float _1530 = isnan(_1527) ? _1529 : (isnan(_1529) ? _1527 : min(_1529, _1527));
        float _1534 = (_1530 * _1027) + _1016;
        float _1535 = (_1530 * _1030) + _1020;
        float _1536 = (_1530 * _1033) + _1024;
        float _1537 = _1530 * 9.9999997473787516355514526367188e-05;
        float _1538 = (-1.0) - _1537;
        float _1540 = _1537 + 1.0;
        float frontier_phi_15_39_ladder;
        float frontier_phi_15_39_ladder_1;
        float frontier_phi_15_39_ladder_2;
        if ((_1536 > _1540) || ((_1536 < _1538) || ((_1535 > _1540) || ((_1535 < _1538) || ((_1534 < _1538) || (_1534 > _1540))))))
        {
            frontier_phi_15_39_ladder = 0.0;
            frontier_phi_15_39_ladder_1 = 0.0;
            frontier_phi_15_39_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1618 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1536, cbModelParam._m0[9u].z, fma(_1535, cbModelParam._m0[9u].y, _1534 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1536, cbModelParam._m0[10u].z, fma(_1535, cbModelParam._m0[10u].y, _1534 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1536, cbModelParam._m0[11u].z, fma(_1535, cbModelParam._m0[11u].y, _1534 * cbModelParam._m0[11u].x))), _966);
            frontier_phi_15_39_ladder = _1618.z * cbModelParam._m0[1u].y;
            frontier_phi_15_39_ladder_1 = _1618.y * cbModelParam._m0[1u].y;
            frontier_phi_15_39_ladder_2 = _1618.x * cbModelParam._m0[1u].y;
        }
        _1049 = frontier_phi_15_39_ladder_2;
        _1051 = frontier_phi_15_39_ladder_1;
        _1053 = frontier_phi_15_39_ladder;
    }
    else
    {
        vec4 _1037 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_494, _495, _496), _966);
        _1049 = _1037.x * cbModelParam._m0[1u].y;
        _1051 = _1037.y * cbModelParam._m0[1u].y;
        _1053 = _1037.z * cbModelParam._m0[1u].y;
    }
    float _1056 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1148;
    float _1150;
    float _1152;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1112 = fma(_536, cbModelParam._m0[21u].z, fma(_532, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _528)) + cbModelParam._m0[21u].w;
        float _1116 = fma(_536, cbModelParam._m0[22u].z, fma(_532, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _528)) + cbModelParam._m0[22u].w;
        float _1120 = fma(_536, cbModelParam._m0[23u].z, fma(_532, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _528)) + cbModelParam._m0[23u].w;
        float _1123 = fma(_496, cbModelParam._m0[21u].z, fma(_495, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _494));
        float _1126 = fma(_496, cbModelParam._m0[22u].z, fma(_495, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _494));
        float _1129 = fma(_496, cbModelParam._m0[23u].z, fma(_495, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _494));
        float _1357;
        if (_1123 > 0.0)
        {
            _1357 = abs((1.0 - _1112) / _1123);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1123 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1112 + 1.0) / _1123);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1357 = frontier_phi_27_23_ladder;
        }
        float _1553;
        if (_1126 > 0.0)
        {
            _1553 = abs((1.0 - _1116) / _1126);
        }
        else
        {
            float frontier_phi_41_34_ladder;
            if (_1126 < 0.0)
            {
                frontier_phi_41_34_ladder = abs((_1116 + 1.0) / _1126);
            }
            else
            {
                frontier_phi_41_34_ladder = 5000.0;
            }
            _1553 = frontier_phi_41_34_ladder;
        }
        float _1638;
        if (_1129 > 0.0)
        {
            _1638 = abs((1.0 - _1120) / _1129);
        }
        else
        {
            float frontier_phi_52_48_ladder;
            if (_1129 < 0.0)
            {
                frontier_phi_52_48_ladder = abs((_1120 + 1.0) / _1129);
            }
            else
            {
                frontier_phi_52_48_ladder = 5000.0;
            }
            _1638 = frontier_phi_52_48_ladder;
        }
        float _1640 = isnan(_1553) ? _1357 : (isnan(_1357) ? _1553 : min(_1357, _1553));
        float _1641 = isnan(_1638) ? _1640 : (isnan(_1640) ? _1638 : min(_1640, _1638));
        float _1645 = (_1641 * _1123) + _1112;
        float _1646 = (_1641 * _1126) + _1116;
        float _1647 = (_1641 * _1129) + _1120;
        float _1648 = _1641 * 9.9999997473787516355514526367188e-05;
        float _1649 = (-1.0) - _1648;
        float _1651 = _1648 + 1.0;
        float frontier_phi_24_52_ladder;
        float frontier_phi_24_52_ladder_1;
        float frontier_phi_24_52_ladder_2;
        if ((_1647 > _1651) || ((_1647 < _1649) || ((_1646 > _1651) || ((_1646 < _1649) || ((_1645 < _1649) || (_1645 > _1651))))))
        {
            frontier_phi_24_52_ladder = 0.0;
            frontier_phi_24_52_ladder_1 = 0.0;
            frontier_phi_24_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1680 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1647, cbModelParam._m0[17u].z, fma(_1646, cbModelParam._m0[17u].y, _1645 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1647, cbModelParam._m0[18u].z, fma(_1646, cbModelParam._m0[18u].y, _1645 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1647, cbModelParam._m0[19u].z, fma(_1646, cbModelParam._m0[19u].y, _1645 * cbModelParam._m0[19u].x))), _1056);
            frontier_phi_24_52_ladder = _1680.z * cbModelParam._m0[1u].z;
            frontier_phi_24_52_ladder_1 = _1680.y * cbModelParam._m0[1u].z;
            frontier_phi_24_52_ladder_2 = _1680.x * cbModelParam._m0[1u].z;
        }
        _1148 = frontier_phi_24_52_ladder_2;
        _1150 = frontier_phi_24_52_ladder_1;
        _1152 = frontier_phi_24_52_ladder;
    }
    else
    {
        vec4 _1132 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_494, _495, _496), _1056);
        _1148 = _1132.x * cbModelParam._m0[1u].z;
        _1150 = _1132.y * cbModelParam._m0[1u].z;
        _1152 = _1132.z * cbModelParam._m0[1u].z;
    }
    float _1164 = _485 * 0.01200000010430812835693359375;
    float _1166 = _1164 * ((cbModelParam._m0[1u].w * (_1148 - _1049)) + _1049);
    float _1167 = _1164 * ((cbModelParam._m0[1u].w * (_1150 - _1051)) + _1051);
    float _1168 = _1164 * ((cbModelParam._m0[1u].w * (_1152 - _1053)) + _1053);
    float _1189 = fma(_1168, cbSceneParam._m0[89u].z, fma(_1167, cbSceneParam._m0[89u].y, _1166 * cbSceneParam._m0[89u].x));
    float _1192 = fma(_1168, cbSceneParam._m0[90u].z, fma(_1167, cbSceneParam._m0[90u].y, _1166 * cbSceneParam._m0[90u].x));
    float _1195 = fma(_1168, cbSceneParam._m0[91u].z, fma(_1167, cbSceneParam._m0[91u].y, _1166 * cbSceneParam._m0[91u].x));
    vec4 _1203 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_473, _474));
    float _1205 = _1203.w;
    uint _1220 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1227 = floatBitsToUint(cbInstanceData._m0[_1220 + 5u]).x * 14u;
    float _1235 = (cbLight._m0[_1227 + 13u].x * (_485 + (-1.0))) + 1.0;
    uint _1236 = _1227 + 8u;
    float _1247 = cbLight._m0[_1227].x + _459;
    float _1248 = cbLight._m0[_1227].y + _460;
    float _1249 = cbLight._m0[_1227].z + _461;
    float _1253 = inversesqrt(dot(vec3(_1247, _1248, _1249), vec3(_1247, _1248, _1249)));
    float _1257 = dot(vec3(_383, _384, _385), vec3(cbLight._m0[_1227].xyz));
    float _1987 = isnan(0.0) ? _1257 : (isnan(_1257) ? 0.0 : max(_1257, 0.0));
    float _1260 = isnan(1.0) ? _1987 : (isnan(_1987) ? 1.0 : min(_1987, 1.0));
    float _1998 = isnan(0.0) ? _486 : (isnan(_486) ? 0.0 : max(_486, 0.0));
    float _1262 = dot(vec3(cbLight._m0[_1227].xyz), vec3(_1247 * _1253, _1248 * _1253, _1249 * _1253));
    float _2009 = isnan(0.0) ? _1262 : (isnan(_1262) ? 0.0 : max(_1262, 0.0));
    float _1272 = (exp2(log2(1.0 - (isnan(1.0) ? _2009 : (isnan(_2009) ? 1.0 : min(_2009, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1278 = (0.5 / ((_1260 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1998 : (isnan(_1998) ? 1.0 : min(_1998, 1.0))))) * _1260;
    float _2020 = isnan(0.0) ? _1278 : (isnan(_1278) ? 0.0 : max(_1278, 0.0));
    float _1280 = (isnan(1.0) ? _2020 : (isnan(_2020) ? 1.0 : min(_2020, 1.0))) * 0.31831014156341552734375;
    float _1282 = isnan(1.0) ? _1235 : (isnan(_1235) ? 1.0 : min(_1235, 1.0));
    float _2036 = isnan(0.0) ? _386 : (isnan(_386) ? 0.0 : max(_386, 0.0));
    float _1306 = 0.959999978542327880859375 - (exp2(log2(1.0 - (isnan(1.0) ? _1861 : (isnan(_1861) ? 1.0 : min(_1861, 1.0)))) * 5.0) * 0.959999978542327880859375);
    float _1310 = ((((((cbLight._m0[_1236].x * ((1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1205))) * _1272) * _1280) * _1282) + ((isnan(0.0) ? _1189 : (isnan(_1189) ? 0.0 : max(_1189, 0.0))) * _960)) * cbPerFrame._m0[3u].x) + (_1306 * (_370 - (_370 * _216)));
    float _1311 = ((((((cbLight._m0[_1236].y * ((1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1205))) * _1272) * _1280) * _1282) + ((isnan(0.0) ? _1192 : (isnan(_1192) ? 0.0 : max(_1192, 0.0))) * _960)) * cbPerFrame._m0[3u].x) + (_1306 * (_371 - (_371 * _216)));
    float _1312 = ((((((cbLight._m0[_1236].z * ((1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1205))) * _1272) * _1280) * _1282) + ((isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0))) * _960)) * cbPerFrame._m0[3u].x) + (_1306 * (_372 - (_372 * _216)));
    float _1318 = cbInstanceData._m0[_1220 + 6u].w * (isnan(1.0) ? _2036 : (isnan(_2036) ? 1.0 : min(_2036, 1.0)));
    float _1323 = _473 / cbSceneParam._m0[86u].x;
    float _1324 = _474 / cbSceneParam._m0[86u].y;
    vec4 _1338 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1323, _1324, (log2((isnan(cbSceneParam._m0[77u].w) ? _402 : (isnan(_402) ? cbSceneParam._m0[77u].w : min(_402, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1340 = _1338.x;
    float _1341 = _1338.y;
    float _1342 = _1338.z;
    float _1343 = _1338.w;
    float _1404;
    float _1406;
    float _1408;
    float _1410;
    if (_402 > cbSceneParam._m0[78u].w)
    {
        float _1366 = isnan(_402) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _402 : min(cbSceneParam._m0[80u].w, _402));
        float _1367 = _1366 / _402;
        float _1378 = _1367 * _452;
        float _1379 = _453 * _1367;
        float _1380 = (-0.0) - _1379;
        float _1381 = _1367 * _454;
        float _1383 = (cbSceneParam._m0[77u].w * _1380) / _1366;
        float _1384 = _1383 + cbSceneParam._m0[79u].w;
        float _1385 = cbSceneParam._m0[79u].w - _1379;
        float _1391 = sqrt(((_1378 * _1378) + (_1379 * _1379)) + (_1381 * _1381));
        float _1394 = (1.0 - (cbSceneParam._m0[77u].w / _1366)) * _1391;
        float _1400 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1402 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1558;
        if (abs((_1380 - _1383) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1558 = ((((_1384 > 0.0) ? exp2(_1400 * _1384) : (2.0 - exp2(_1402 * _1384))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1394;
        }
        else
        {
            float _1483 = 1.0 / cbSceneParam._m0[80u].x;
            float _1484 = isnan(_1385) ? _1384 : (isnan(_1384) ? _1385 : max(_1384, _1385));
            float _1485 = isnan(_1385) ? _1384 : (isnan(_1384) ? _1385 : min(_1384, _1385));
            float _1494 = isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : min(_1484, 0.0));
            float _1495 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : min(_1485, 0.0));
            _1558 = ((abs(_1391 / _1380) * cbSceneParam._m0[80u].y) * ((((_1494 - _1495) * 2.0) - ((exp2(_1400 * (isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0)))) - exp2(_1400 * (isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0))))) * _1483)) - ((exp2(_1402 * _1494) - exp2(_1402 * _1495)) * _1483))) + (_1394 * cbSceneParam._m0[80u].z);
        }
        vec4 _1560 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1323, _1324, 1.0), 0.0);
        float _1569 = exp2((_1558 * (-1.44269502162933349609375)) * (1.0 - _1560.w));
        float _1570 = log2(_1569);
        float _1586 = log2(_1343);
        _1404 = (exp2(_1586 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1570 * cbSceneParam._m0[78u].x)) * _1560.x) / cbSceneParam._m0[78u].x)) + _1340;
        _1406 = (exp2(_1586 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1570 * cbSceneParam._m0[78u].y)) * _1560.y) / cbSceneParam._m0[78u].y)) + _1341;
        _1408 = (exp2(_1586 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1570 * cbSceneParam._m0[78u].z)) * _1560.z) / cbSceneParam._m0[78u].z)) + _1342;
        _1410 = _1569 * _1343;
    }
    else
    {
        _1404 = _1340;
        _1406 = _1341;
        _1408 = _1342;
        _1410 = _1343;
    }
    bool _1596;
    vec4 _1419;
    vec4 _1442;
    float _1444;
    float _1448;
    float _1449;
    float _1450;
    float _1451;
    bool _1462;
    for (;;)
    {
        _1419 = cbMatDynParam._m0[0u];
        float _1421 = roundEven(_1419.y);
        bool _1422 = _1421 == 3.0;
        float _1424 = log2(_1410);
        float _1431 = exp2(_1424 * cbSceneParam._m0[78u].x) * _1310;
        float _1432 = exp2(_1424 * cbSceneParam._m0[78u].y) * _1311;
        float _1433 = exp2(_1424 * cbSceneParam._m0[78u].z) * _1312;
        float _1440 = _468 + (-0.5);
        _1442 = cbMtdParam._m0[1u];
        _1444 = _1442.y * _1440;
        float _1447 = (_1421 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1448 = _1447 * (_1422 ? _1431 : (_1431 + (cbSceneParam._m0[72u].w * _1404)));
        _1449 = _1447 * (_1422 ? _1432 : (_1432 + (cbSceneParam._m0[72u].w * _1406)));
        _1450 = _1447 * (_1422 ? _1433 : (_1433 + (cbSceneParam._m0[72u].w * _1408)));
        _1451 = _1440 * 0.999000012874603271484375;
        _1462 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1462)
        {
            if ((cbInstanceData._m0[_1220 + 7u].x + _1451) < 0.5)
            {
                _1596 = true;
                break;
            }
        }
        uint _1519 = (_1220 + 9u) + uint(_1419.w);
        if ((cbInstanceData._m0[_1519].w < 1.0) && ((cbInstanceData._m0[_1519].w + _1451) < 0.5))
        {
            _1596 = true;
            break;
        }
        if ((_1444 + 1.0) < _1442.x)
        {
            _1596 = true;
            break;
        }
        _1596 = false;
        break;
    }
    float _1629;
    if (_1596)
    {
        discard_state = true;
        _1629 = 0.0;
    }
    else
    {
        _1629 = _1318;
    }
    SV_Target.x = _1448;
    SV_Target.y = _1449;
    SV_Target.z = _1450;
    SV_Target.w = _1629;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _1318;
    discard_exit();
}


