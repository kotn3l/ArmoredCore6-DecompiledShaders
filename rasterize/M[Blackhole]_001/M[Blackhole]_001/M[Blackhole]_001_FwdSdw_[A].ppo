#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Blackhole_001_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Blackhole_001_snp_0_Texture2D_3;
layout(set = 0, binding = 2) uniform texture2D M_Blackhole_001_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _704;
float _2068;
float _2069;
float _2070;
float _2071;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _170 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _171 = _170 * NORMAL.x;
    float _172 = _170 * NORMAL.y;
    float _173 = _170 * NORMAL.z;
    float _178;
    float _179;
    float _180;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _178 = (-0.0) - _171;
        _179 = (-0.0) - _172;
        _180 = (-0.0) - _173;
    }
    else
    {
        _178 = _171;
        _179 = _172;
        _180 = _173;
    }
    vec4 _197 = texture(sampler2D(M_Blackhole_001_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _200 = _197.x;
    float _206 = exp2(log2(cbMtdParam._m0[10u].z * _200) * cbMtdParam._m0[10u].w);
    float _2080 = isnan(0.0) ? _206 : (isnan(_206) ? 0.0 : max(_206, 0.0));
    float _208 = isnan(1.0) ? _2080 : (isnan(_2080) ? 1.0 : min(_2080, 1.0));
    float _217 = exp2(log2(cbMtdParam._m0[11u].x * _200) * cbMtdParam._m0[11u].y);
    float _2091 = isnan(0.0) ? _217 : (isnan(_217) ? 0.0 : max(_217, 0.0));
    float _218 = isnan(1.0) ? _2091 : (isnan(_2091) ? 1.0 : min(_2091, 1.0));
    float _234 = cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x;
    float _239 = _234 * cbMtdParam._m0[9u].w;
    float _240 = sin(_239);
    float _241 = cos(_239);
    float _242 = TEXCOORD.x + (-0.5);
    float _244 = TEXCOORD.y + (-0.5);
    vec4 _264 = texture(sampler2D(M_Blackhole_001_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * (fma(_244, (-0.0) - _240, _241 * _242) + 0.5)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (fma(_244, _241, _240 * _242) + 0.5)) + cbTextureTilingScale._m0[1u].w));
    float _281 = exp2(log2(cbMtdParam._m0[10u].y * _200) * cbMtdParam._m0[10u].x);
    float _282 = exp2(log2(cbMtdParam._m0[10u].y * _197.y) * cbMtdParam._m0[10u].x);
    float _2102 = isnan(0.0) ? _281 : (isnan(_281) ? 0.0 : max(_281, 0.0));
    float _2113 = isnan(0.0) ? _282 : (isnan(_282) ? 0.0 : max(_282, 0.0));
    float _285 = ((_264.x + (-0.5)) * cbMtdParam._m0[11u].w) * (isnan(1.0) ? _2102 : (isnan(_2102) ? 1.0 : min(_2102, 1.0)));
    float _286 = ((_264.y + (-0.5)) * cbMtdParam._m0[11u].w) * (isnan(1.0) ? _2113 : (isnan(_2113) ? 1.0 : min(_2113, 1.0)));
    float _289 = cbSceneParam._m0[86u].x * (_285 + ((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x));
    float _290 = (_286 + ((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y)) * cbSceneParam._m0[86u].y;
    float _298 = isnan(cbInstanceData._m0[8u].x) ? _289 : (isnan(_289) ? cbInstanceData._m0[8u].x : max(_289, cbInstanceData._m0[8u].x));
    float _299 = isnan(cbInstanceData._m0[8u].y) ? _290 : (isnan(_290) ? cbInstanceData._m0[8u].y : max(_290, cbInstanceData._m0[8u].y));
    vec4 _303 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _298 : (isnan(_298) ? cbInstanceData._m0[8u].z : min(_298, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _299 : (isnan(_299) ? cbInstanceData._m0[8u].w : min(_299, cbInstanceData._m0[8u].w))));
    float _312 = cbSceneParam._m0[72u].w * _303.x;
    float _313 = cbSceneParam._m0[72u].w * _303.y;
    float _314 = cbSceneParam._m0[72u].w * _303.z;
    float _323 = cbMtdParam._m0[9u].z * _234;
    float _324 = sin(_323);
    float _325 = cos(_323);
    float _326 = _242 + (cbMtdParam._m0[12u].x * _234);
    float _327 = _244 + (_234 * cbMtdParam._m0[12u].y);
    vec4 _348 = texture(sampler2D(M_Blackhole_001_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * ((_285 + 0.5) + fma(_327, (-0.0) - _324, _326 * _325))) + cbTextureTilingScale._m0[0u].z, (((_286 + 0.5) + fma(_327, _325, _326 * _324)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _364 = exp2(log2(cbMtdParam._m0[9u].x * _200) * cbMtdParam._m0[9u].y);
    float _2144 = isnan(0.0) ? _364 : (isnan(_364) ? 0.0 : max(_364, 0.0));
    float _365 = isnan(1.0) ? _2144 : (isnan(_2144) ? 1.0 : min(_2144, 1.0));
    float _372 = (_365 * ((_348.x * 28.0) - _312)) + _312;
    float _373 = (_365 * ((_348.y * 1.62963497638702392578125) - _313)) + _313;
    float _374 = (_365 * ((_348.z * 0.2912090122699737548828125) - _314)) + _314;
    float _384 = inversesqrt(dot(vec3(_178, _179, _180), vec3(_178, _179, _180)));
    float _385 = _384 * _178;
    float _386 = _384 * _179;
    float _387 = _384 * _180;
    float _2155 = isnan(0.0) ? _208 : (isnan(_208) ? 0.0 : max(_208, 0.0));
    float _388 = isnan(1.0) ? _2155 : (isnan(_2155) ? 1.0 : min(_2155, 1.0));
    float _404 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _444 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _454 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _444);
    float _455 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _444);
    float _456 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _444);
    float _460 = inversesqrt(dot(vec3(_454, _455, _456), vec3(_454, _455, _456)));
    float _461 = _454 * _460;
    float _462 = _455 * _460;
    float _463 = _456 * _460;
    vec4 _468 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _470 = _468.w;
    float _475 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _476 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _484 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_475 * cbSceneParam._m0[86u].x, _476 * cbSceneParam._m0[86u].y));
    float _487 = _484.x * TEXCOORD.z;
    float _488 = dot(vec3(_385, _386, _387), vec3(_461, _462, _463));
    float _491 = _488 * 2.0;
    float _496 = (_491 * _385) - _461;
    float _497 = (_491 * _386) - _462;
    float _498 = (_491 * _387) - _463;
    float _502 = abs(dot(vec3(_461, _462, _463), vec3(_385, _386, _387)));
    float _2166 = isnan(0.0) ? _502 : (isnan(_502) ? 0.0 : max(_502, 0.0));
    float _530 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _534 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _538 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _703;
    float _705;
    float _706;
    float _707;
    float _708;
    float _709;
    float _710;
    float _711;
    float _712;
    float _713;
    float _714;
    float _715;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _565 = fma(_538, cbModelParam._m0[26u].z, fma(_534, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _530));
        float _569 = fma(_538, cbModelParam._m0[27u].z, fma(_534, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _530));
        float _573 = fma(_538, cbModelParam._m0[28u].z, fma(_534, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _530));
        float _596 = _530 + _385;
        float _597 = _534 + _386;
        float _598 = _538 + _387;
        float _608 = fma(_598, cbModelParam._m0[26u].z, fma(_597, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _596)) - _565;
        float _609 = fma(_598, cbModelParam._m0[27u].z, fma(_597, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _596)) - _569;
        float _610 = fma(_598, cbModelParam._m0[28u].z, fma(_597, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _596)) - _573;
        float _614 = inversesqrt(dot(vec3(_608, _609, _610), vec3(_608, _609, _610)));
        float _627 = ((_614 * _608) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_565 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _628 = ((_614 * _609) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_569 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _629 = ((_614 * _610) / cbModelParam._m0[34u].z) + ((((((_573 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _632 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_627, _628, _629), 0.0);
        vec4 _639 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_627, _628, _629), 0.0);
        vec4 _646 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_627, _628, _629), 0.0);
        vec4 _653 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_627, _628, _629), 0.0);
        float _666 = exp2((_632.w + (-0.5)) * 20.0) * 2.0;
        float _676 = exp2((_639.w + (-0.5)) * 20.0) * 2.0;
        float _686 = exp2((_646.w + (-0.5)) * 20.0) * 2.0;
        float _696 = exp2((_653.w + (-0.5)) * 20.0) * 2.0;
        float _697 = _696 * (_653.x + (-0.5));
        float _698 = _696 * (_653.y + (-0.5));
        float _699 = _696 * (_653.z + (-0.5));
        _703 = _666 * (_632.z + (-0.5));
        _705 = _666 * (_632.y + (-0.5));
        _706 = _666 * (_632.x + (-0.5));
        _707 = _676 * (_639.z + (-0.5));
        _708 = _676 * (_639.y + (-0.5));
        _709 = _676 * (_639.x + (-0.5));
        _710 = _686 * (_646.z + (-0.5));
        _711 = _686 * (_646.y + (-0.5));
        _712 = _686 * (_646.x + (-0.5));
        _713 = isnan(0.0) ? _699 : (isnan(_699) ? 0.0 : max(_699, 0.0));
        _714 = isnan(0.0) ? _698 : (isnan(_698) ? 0.0 : max(_698, 0.0));
        _715 = isnan(0.0) ? _697 : (isnan(_697) ? 0.0 : max(_697, 0.0));
    }
    else
    {
        _703 = _704;
        _705 = _704;
        _706 = _704;
        _707 = _704;
        _708 = _704;
        _709 = _704;
        _710 = _704;
        _711 = _704;
        _712 = _704;
        _713 = _704;
        _714 = _704;
        _715 = _704;
    }
    float _877;
    float _878;
    float _879;
    float _880;
    float _881;
    float _882;
    float _883;
    float _884;
    float _885;
    float _886;
    float _887;
    float _888;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _741 = fma(_538, cbModelParam._m0[30u].z, fma(_534, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _530));
        float _745 = fma(_538, cbModelParam._m0[31u].z, fma(_534, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _530));
        float _749 = fma(_538, cbModelParam._m0[32u].z, fma(_534, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _530));
        float _772 = _530 + _385;
        float _773 = _534 + _386;
        float _774 = _538 + _387;
        float _784 = fma(_774, cbModelParam._m0[30u].z, fma(_773, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _772)) - _741;
        float _785 = fma(_774, cbModelParam._m0[31u].z, fma(_773, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _772)) - _745;
        float _786 = fma(_774, cbModelParam._m0[32u].z, fma(_773, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _772)) - _749;
        float _790 = inversesqrt(dot(vec3(_784, _785, _786), vec3(_784, _785, _786)));
        float _803 = ((_790 * _784) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_741 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _804 = ((_790 * _785) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_745 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _805 = ((_790 * _786) / cbModelParam._m0[35u].z) + ((((((_749 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _807 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_803, _804, _805), 0.0);
        vec4 _814 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_803, _804, _805), 0.0);
        vec4 _821 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_803, _804, _805), 0.0);
        vec4 _828 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_803, _804, _805), 0.0);
        float _840 = exp2((_807.w + (-0.5)) * 20.0) * 2.0;
        float _850 = exp2((_814.w + (-0.5)) * 20.0) * 2.0;
        float _860 = exp2((_821.w + (-0.5)) * 20.0) * 2.0;
        float _870 = exp2((_828.w + (-0.5)) * 20.0) * 2.0;
        float _871 = _870 * (_828.x + (-0.5));
        float _872 = _870 * (_828.y + (-0.5));
        float _873 = _870 * (_828.z + (-0.5));
        _877 = _840 * (_807.z + (-0.5));
        _878 = _840 * (_807.y + (-0.5));
        _879 = _840 * (_807.x + (-0.5));
        _880 = _850 * (_814.z + (-0.5));
        _881 = _850 * (_814.y + (-0.5));
        _882 = _850 * (_814.x + (-0.5));
        _883 = _860 * (_821.z + (-0.5));
        _884 = _860 * (_821.y + (-0.5));
        _885 = _860 * (_821.x + (-0.5));
        _886 = isnan(0.0) ? _873 : (isnan(_873) ? 0.0 : max(_873, 0.0));
        _887 = isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : max(_872, 0.0));
        _888 = isnan(0.0) ? _871 : (isnan(_871) ? 0.0 : max(_871, 0.0));
    }
    else
    {
        _877 = _704;
        _878 = _704;
        _879 = _704;
        _880 = _704;
        _881 = _704;
        _882 = _704;
        _883 = _704;
        _884 = _704;
        _885 = _704;
        _886 = _704;
        _887 = _704;
        _888 = _704;
    }
    float _903 = _496 * 0.5;
    float _904 = _497 * 0.5;
    float _905 = _498 * 0.5;
    float _906 = dot(vec4(_903, _904, _905, 1.0), vec4(_879, _882, _885, _888));
    float _909 = dot(vec4(_903, _904, _905, 1.0), vec4(_878, _881, _884, _887));
    float _912 = dot(vec4(_903, _904, _905, 1.0), vec4(_877, _880, _883, _886));
    float _947;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _919 = dot(vec4(_903, _904, _905, 1.0), vec4(_703, _707, _710, _713));
        float _923 = dot(vec4(_903, _904, _905, 1.0), vec4(_705, _708, _711, _714));
        float _927 = dot(vec4(_903, _904, _905, 1.0), vec4(_706, _709, _712, _715));
        float _934 = dot(vec4(cbModelParam._m0[39u]), vec4(_903, _904, _905, 1.0));
        _947 = dot(vec3(isnan(0.0) ? _927 : (isnan(_927) ? 0.0 : max(_927, 0.0)), isnan(0.0) ? _923 : (isnan(_923) ? 0.0 : max(_923, 0.0)), isnan(0.0) ? _919 : (isnan(_919) ? 0.0 : max(_919, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_934) ? 0.0 : (isnan(0.0) ? _934 : max(0.0, _934))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _947 = 1.0;
    }
    float _958;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _949 = dot(vec4(cbModelParam._m0[40u]), vec4(_903, _904, _905, 1.0));
        _958 = dot(vec3(isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0)), isnan(0.0) ? _909 : (isnan(_909) ? 0.0 : max(_909, 0.0)), isnan(0.0) ? _912 : (isnan(_912) ? 0.0 : max(_912, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_949) ? 0.0 : (isnan(0.0) ? _949 : max(0.0, _949))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _958 = 1.0;
    }
    float _962 = (_958 * cbModelParam._m0[1u].x) + (_947 * (1.0 - cbModelParam._m0[1u].x));
    float _968 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1051;
    float _1053;
    float _1055;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1018 = fma(_538, cbModelParam._m0[13u].z, fma(_534, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _530)) + cbModelParam._m0[13u].w;
        float _1022 = fma(_538, cbModelParam._m0[14u].z, fma(_534, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _530)) + cbModelParam._m0[14u].w;
        float _1026 = fma(_538, cbModelParam._m0[15u].z, fma(_534, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _530)) + cbModelParam._m0[15u].w;
        float _1029 = fma(_498, cbModelParam._m0[13u].z, fma(_497, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _496));
        float _1032 = fma(_498, cbModelParam._m0[14u].z, fma(_497, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _496));
        float _1035 = fma(_498, cbModelParam._m0[15u].z, fma(_497, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _496));
        float _1061;
        if (_1029 > 0.0)
        {
            _1061 = abs((1.0 - _1018) / _1029);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1029 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1018 + 1.0) / _1029);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1061 = frontier_phi_16_14_ladder;
        }
        float _1252;
        if (_1032 > 0.0)
        {
            _1252 = abs((1.0 - _1022) / _1032);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1032 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1022 + 1.0) / _1032);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1252 = frontier_phi_25_21_ladder;
        }
        float _1597;
        if (_1035 > 0.0)
        {
            _1597 = abs((1.0 - _1026) / _1035);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1035 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1026 + 1.0) / _1035);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1597 = frontier_phi_37_32_ladder;
        }
        float _1599 = isnan(_1252) ? _1061 : (isnan(_1061) ? _1252 : min(_1061, _1252));
        float _1600 = isnan(_1597) ? _1599 : (isnan(_1599) ? _1597 : min(_1599, _1597));
        float _1604 = (_1600 * _1029) + _1018;
        float _1605 = (_1600 * _1032) + _1022;
        float _1606 = (_1600 * _1035) + _1026;
        float _1607 = _1600 * 9.9999997473787516355514526367188e-05;
        float _1609 = (-1.0) - _1607;
        float _1611 = _1607 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_1606 > _1611) || ((_1606 < _1609) || ((_1605 > _1611) || ((_1605 < _1609) || ((_1604 < _1609) || (_1604 > _1611))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1814 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1606, cbModelParam._m0[9u].z, fma(_1605, cbModelParam._m0[9u].y, _1604 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1606, cbModelParam._m0[10u].z, fma(_1605, cbModelParam._m0[10u].y, _1604 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1606, cbModelParam._m0[11u].z, fma(_1605, cbModelParam._m0[11u].y, _1604 * cbModelParam._m0[11u].x))), _968);
            frontier_phi_15_37_ladder = _1814.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _1814.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _1814.x * cbModelParam._m0[1u].y;
        }
        _1051 = frontier_phi_15_37_ladder_2;
        _1053 = frontier_phi_15_37_ladder_1;
        _1055 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1039 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_496, _497, _498), _968);
        _1051 = _1039.x * cbModelParam._m0[1u].y;
        _1053 = _1039.y * cbModelParam._m0[1u].y;
        _1055 = _1039.z * cbModelParam._m0[1u].y;
    }
    float _1058 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1150;
    float _1152;
    float _1154;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1114 = fma(_538, cbModelParam._m0[21u].z, fma(_534, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _530)) + cbModelParam._m0[21u].w;
        float _1118 = fma(_538, cbModelParam._m0[22u].z, fma(_534, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _530)) + cbModelParam._m0[22u].w;
        float _1122 = fma(_538, cbModelParam._m0[23u].z, fma(_534, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _530)) + cbModelParam._m0[23u].w;
        float _1125 = fma(_498, cbModelParam._m0[21u].z, fma(_497, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _496));
        float _1128 = fma(_498, cbModelParam._m0[22u].z, fma(_497, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _496));
        float _1131 = fma(_498, cbModelParam._m0[23u].z, fma(_497, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _496));
        float _1257;
        if (_1125 > 0.0)
        {
            _1257 = abs((1.0 - _1114) / _1125);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1125 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1114 + 1.0) / _1125);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1257 = frontier_phi_27_23_ladder;
        }
        float _1624;
        if (_1128 > 0.0)
        {
            _1624 = abs((1.0 - _1118) / _1128);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1128 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1118 + 1.0) / _1128);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _1624 = frontier_phi_39_34_ladder;
        }
        float _1879;
        if (_1131 > 0.0)
        {
            _1879 = abs((1.0 - _1122) / _1131);
        }
        else
        {
            float frontier_phi_51_46_ladder;
            if (_1131 < 0.0)
            {
                frontier_phi_51_46_ladder = abs((_1122 + 1.0) / _1131);
            }
            else
            {
                frontier_phi_51_46_ladder = 5000.0;
            }
            _1879 = frontier_phi_51_46_ladder;
        }
        float _1881 = isnan(_1624) ? _1257 : (isnan(_1257) ? _1624 : min(_1257, _1624));
        float _1882 = isnan(_1879) ? _1881 : (isnan(_1881) ? _1879 : min(_1881, _1879));
        float _1886 = (_1882 * _1125) + _1114;
        float _1887 = (_1882 * _1128) + _1118;
        float _1888 = (_1882 * _1131) + _1122;
        float _1889 = _1882 * 9.9999997473787516355514526367188e-05;
        float _1890 = (-1.0) - _1889;
        float _1892 = _1889 + 1.0;
        float frontier_phi_24_51_ladder;
        float frontier_phi_24_51_ladder_1;
        float frontier_phi_24_51_ladder_2;
        if ((_1888 > _1892) || ((_1888 < _1890) || ((_1887 > _1892) || ((_1887 < _1890) || ((_1886 < _1890) || (_1886 > _1892))))))
        {
            frontier_phi_24_51_ladder = 0.0;
            frontier_phi_24_51_ladder_1 = 0.0;
            frontier_phi_24_51_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1965 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1888, cbModelParam._m0[17u].z, fma(_1887, cbModelParam._m0[17u].y, _1886 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1888, cbModelParam._m0[18u].z, fma(_1887, cbModelParam._m0[18u].y, _1886 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1888, cbModelParam._m0[19u].z, fma(_1887, cbModelParam._m0[19u].y, _1886 * cbModelParam._m0[19u].x))), _1058);
            frontier_phi_24_51_ladder = _1965.z * cbModelParam._m0[1u].z;
            frontier_phi_24_51_ladder_1 = _1965.y * cbModelParam._m0[1u].z;
            frontier_phi_24_51_ladder_2 = _1965.x * cbModelParam._m0[1u].z;
        }
        _1150 = frontier_phi_24_51_ladder_2;
        _1152 = frontier_phi_24_51_ladder_1;
        _1154 = frontier_phi_24_51_ladder;
    }
    else
    {
        vec4 _1134 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_496, _497, _498), _1058);
        _1150 = _1134.x * cbModelParam._m0[1u].z;
        _1152 = _1134.y * cbModelParam._m0[1u].z;
        _1154 = _1134.z * cbModelParam._m0[1u].z;
    }
    float _1166 = _487 * 0.01200000010430812835693359375;
    float _1168 = _1166 * ((cbModelParam._m0[1u].w * (_1150 - _1051)) + _1051);
    float _1169 = _1166 * ((cbModelParam._m0[1u].w * (_1152 - _1053)) + _1053);
    float _1170 = _1166 * ((cbModelParam._m0[1u].w * (_1154 - _1055)) + _1055);
    float _1191 = fma(_1170, cbSceneParam._m0[89u].z, fma(_1169, cbSceneParam._m0[89u].y, _1168 * cbSceneParam._m0[89u].x));
    float _1194 = fma(_1170, cbSceneParam._m0[90u].z, fma(_1169, cbSceneParam._m0[90u].y, _1168 * cbSceneParam._m0[90u].x));
    float _1197 = fma(_1170, cbSceneParam._m0[91u].z, fma(_1169, cbSceneParam._m0[91u].y, _1168 * cbSceneParam._m0[91u].x));
    float _1231 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1235 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1239 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1243 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1244 = _1231 / _1243;
    float _1245 = _1235 / _1243;
    float _1246 = _1239 / _1243;
    float _1393;
    float _1394;
    float _1395;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1273 = ((uint(_1246 > cbSceneParam._m0[59u].y) + uint(_1246 > cbSceneParam._m0[59u].x)) + uint(_1246 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1274 = _1273 + 43u;
        uint _1282 = _1273 + 44u;
        uint _1290 = _1273 + 45u;
        uint _1298 = _1273 + 46u;
        float _1309 = fma(_1243, cbSceneParam._m0[_1274].w, fma(_1239, cbSceneParam._m0[_1274].z, fma(_1235, cbSceneParam._m0[_1274].y, _1231 * cbSceneParam._m0[_1274].x)));
        float _1313 = fma(_1243, cbSceneParam._m0[_1282].w, fma(_1239, cbSceneParam._m0[_1282].z, fma(_1235, cbSceneParam._m0[_1282].y, _1231 * cbSceneParam._m0[_1282].x)));
        float _1321 = fma(_1243, cbSceneParam._m0[_1298].w, fma(_1239, cbSceneParam._m0[_1298].z, fma(_1235, cbSceneParam._m0[_1298].y, _1231 * cbSceneParam._m0[_1298].x)));
        float _1326 = cbSceneParam._m0[33u].z * _1321;
        float _1328 = cbSceneParam._m0[33u].w * _1321;
        float _1331 = fma(_1243, cbSceneParam._m0[_1290].w, fma(_1239, cbSceneParam._m0[_1290].z, fma(_1235, cbSceneParam._m0[_1290].y, _1231 * cbSceneParam._m0[_1290].x))) / _1321;
        float _1379 = (cbSceneParam._m0[33u].x - sqrt(((_1245 * _1245) + (_1244 * _1244)) + (_1246 * _1246))) * cbSceneParam._m0[33u].y;
        float _2292 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1386 = (isnan(1.0) ? _2292 : (isnan(_2292) ? 1.0 : min(_2292, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1326 + _1309) / _1321, (_1328 + _1313) / _1321), _1331), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1328 + _1309) / _1321, (_1313 - _1326) / _1321), _1331), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1309 - _1326) / _1321, (_1313 - _1328) / _1321), _1331), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1309 - _1328) / _1321, (_1326 + _1313) / _1321), _1331), 0.0)).x), vec4(0.25)));
        _1393 = 1.0 - (_1386 * cbSceneParam._m0[34u].x);
        _1394 = 1.0 - (_1386 * cbSceneParam._m0[34u].y);
        _1395 = 1.0 - (_1386 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1393 = 1.0;
        _1394 = 1.0;
        _1395 = 1.0;
    }
    float _1459;
    float _1461;
    float _1463;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1447 = fma(_1243, cbSceneParam._m0[63u].w, fma(_1239, cbSceneParam._m0[63u].z, fma(_1235, cbSceneParam._m0[63u].y, _1231 * cbSceneParam._m0[63u].x)));
        float _1448 = fma(_1243, cbSceneParam._m0[60u].w, fma(_1239, cbSceneParam._m0[60u].z, fma(_1235, cbSceneParam._m0[60u].y, _1231 * cbSceneParam._m0[60u].x))) / _1447;
        float _1449 = fma(_1243, cbSceneParam._m0[61u].w, fma(_1239, cbSceneParam._m0[61u].z, fma(_1235, cbSceneParam._m0[61u].y, _1231 * cbSceneParam._m0[61u].x))) / _1447;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_1448 >= cbSceneParam._m0[64u].x) && (_1449 >= cbSceneParam._m0[64u].y)) && (_1448 <= cbSceneParam._m0[64u].z)) && (_1449 <= cbSceneParam._m0[64u].w))
        {
            float _1637 = fma(_1243, cbSceneParam._m0[62u].w, fma(_1239, cbSceneParam._m0[62u].z, fma(_1235, cbSceneParam._m0[62u].y, _1231 * cbSceneParam._m0[62u].x))) / _1447;
            float _1641 = isnan(cbSceneParam._m0[41u].w) ? _1637 : (isnan(_1637) ? cbSceneParam._m0[41u].w : max(_1637, cbSceneParam._m0[41u].w));
            float _1684 = (cbSceneParam._m0[33u].x - sqrt(((_1245 * _1245) + (_1244 * _1244)) + (_1246 * _1246))) * cbSceneParam._m0[33u].y;
            float _2308 = isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0));
            float _1691 = (isnan(1.0) ? _2308 : (isnan(_2308) ? 1.0 : min(_2308, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1448, cbSceneParam._m0[33u].w + _1449), _1641), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1448, _1449 - cbSceneParam._m0[33u].z), _1641), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1448 - cbSceneParam._m0[33u].z, _1449 - cbSceneParam._m0[33u].w), _1641), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1448 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1449), _1641), 0.0)).x), vec4(0.25)));
            float _1695 = 1.0 - (_1691 * cbSceneParam._m0[34u].x);
            float _1696 = 1.0 - (_1691 * cbSceneParam._m0[34u].y);
            float _1697 = 1.0 - (_1691 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_1695) ? _1393 : (isnan(_1393) ? _1695 : min(_1393, _1695));
            frontier_phi_36_35_ladder_1 = isnan(_1696) ? _1394 : (isnan(_1394) ? _1696 : min(_1394, _1696));
            frontier_phi_36_35_ladder_2 = isnan(_1697) ? _1395 : (isnan(_1395) ? _1697 : min(_1395, _1697));
        }
        else
        {
            frontier_phi_36_35_ladder = _1393;
            frontier_phi_36_35_ladder_1 = _1394;
            frontier_phi_36_35_ladder_2 = _1395;
        }
        _1459 = frontier_phi_36_35_ladder;
        _1461 = frontier_phi_36_35_ladder_1;
        _1463 = frontier_phi_36_35_ladder_2;
    }
    else
    {
        _1459 = _1393;
        _1461 = _1394;
        _1463 = _1395;
    }
    uint _1465 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1472 = floatBitsToUint(cbInstanceData._m0[_1465 + 5u]).x * 14u;
    float _1480 = (cbLight._m0[_1472 + 13u].x * (_487 + (-1.0))) + 1.0;
    uint _1481 = _1472 + 8u;
    float _1492 = cbLight._m0[_1472].x + _461;
    float _1493 = cbLight._m0[_1472].y + _462;
    float _1494 = cbLight._m0[_1472].z + _463;
    float _1498 = inversesqrt(dot(vec3(_1492, _1493, _1494), vec3(_1492, _1493, _1494)));
    float _1502 = dot(vec3(_385, _386, _387), vec3(cbLight._m0[_1472].xyz));
    float _2334 = isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0));
    float _1505 = isnan(1.0) ? _2334 : (isnan(_2334) ? 1.0 : min(_2334, 1.0));
    float _2345 = isnan(0.0) ? _488 : (isnan(_488) ? 0.0 : max(_488, 0.0));
    float _1507 = dot(vec3(cbLight._m0[_1472].xyz), vec3(_1492 * _1498, _1493 * _1498, _1494 * _1498));
    float _2356 = isnan(0.0) ? _1507 : (isnan(_1507) ? 0.0 : max(_1507, 0.0));
    float _1517 = (exp2(log2(1.0 - (isnan(1.0) ? _2356 : (isnan(_2356) ? 1.0 : min(_2356, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1523 = (0.5 / ((_1505 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _2345 : (isnan(_2345) ? 1.0 : min(_2345, 1.0))))) * _1505;
    float _2367 = isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0));
    float _1525 = (isnan(1.0) ? _2367 : (isnan(_2367) ? 1.0 : min(_2367, 1.0))) * 0.31831014156341552734375;
    float _1527 = isnan(1.0) ? _1480 : (isnan(_1480) ? 1.0 : min(_1480, 1.0));
    float _2383 = isnan(0.0) ? _388 : (isnan(_388) ? 0.0 : max(_388, 0.0));
    float _1551 = 0.959999978542327880859375 - (exp2(log2(1.0 - (isnan(1.0) ? _2166 : (isnan(_2166) ? 1.0 : min(_2166, 1.0)))) * 5.0) * 0.959999978542327880859375);
    float _1555 = ((((((cbLight._m0[_1481].x * _1459) * _1517) * _1525) * _1527) + ((isnan(0.0) ? _1191 : (isnan(_1191) ? 0.0 : max(_1191, 0.0))) * _962)) * cbPerFrame._m0[3u].x) + (_1551 * (_372 - (_372 * _218)));
    float _1556 = ((((((cbLight._m0[_1481].y * _1461) * _1517) * _1525) * _1527) + ((isnan(0.0) ? _1194 : (isnan(_1194) ? 0.0 : max(_1194, 0.0))) * _962)) * cbPerFrame._m0[3u].x) + (_1551 * (_373 - (_373 * _218)));
    float _1557 = ((((((cbLight._m0[_1481].z * _1463) * _1517) * _1525) * _1527) + ((isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0))) * _962)) * cbPerFrame._m0[3u].x) + (_1551 * (_374 - (_374 * _218)));
    float _1563 = cbInstanceData._m0[_1465 + 6u].w * (isnan(1.0) ? _2383 : (isnan(_2383) ? 1.0 : min(_2383, 1.0)));
    float _1568 = _475 / cbSceneParam._m0[86u].x;
    float _1569 = _476 / cbSceneParam._m0[86u].y;
    vec4 _1583 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1568, _1569, (log2((isnan(cbSceneParam._m0[77u].w) ? _404 : (isnan(_404) ? cbSceneParam._m0[77u].w : min(_404, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1585 = _1583.x;
    float _1586 = _1583.y;
    float _1587 = _1583.z;
    float _1588 = _1583.w;
    float _1739;
    float _1741;
    float _1743;
    float _1745;
    if (_404 > cbSceneParam._m0[78u].w)
    {
        float _1702 = isnan(_404) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _404 : min(cbSceneParam._m0[80u].w, _404));
        float _1703 = _1702 / _404;
        float _1714 = _1703 * _454;
        float _1715 = _455 * _1703;
        float _1716 = (-0.0) - _1715;
        float _1717 = _1703 * _456;
        float _1719 = (cbSceneParam._m0[77u].w * _1716) / _1702;
        float _1720 = _1719 + cbSceneParam._m0[79u].w;
        float _1721 = cbSceneParam._m0[79u].w - _1715;
        float _1727 = sqrt(((_1714 * _1714) + (_1715 * _1715)) + (_1717 * _1717));
        float _1730 = (1.0 - (cbSceneParam._m0[77u].w / _1702)) * _1727;
        float _1735 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1737 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1905;
        if (abs((_1716 - _1719) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1905 = ((((_1720 > 0.0) ? exp2(_1735 * _1720) : (2.0 - exp2(_1737 * _1720))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1730;
        }
        else
        {
            float _1835 = 1.0 / cbSceneParam._m0[80u].x;
            float _1836 = isnan(_1721) ? _1720 : (isnan(_1720) ? _1721 : max(_1720, _1721));
            float _1837 = isnan(_1721) ? _1720 : (isnan(_1720) ? _1721 : min(_1720, _1721));
            float _1846 = isnan(0.0) ? _1836 : (isnan(_1836) ? 0.0 : min(_1836, 0.0));
            float _1847 = isnan(0.0) ? _1837 : (isnan(_1837) ? 0.0 : min(_1837, 0.0));
            _1905 = ((abs(_1727 / _1716) * cbSceneParam._m0[80u].y) * ((((_1846 - _1847) * 2.0) - ((exp2(_1735 * (isnan(0.0) ? _1836 : (isnan(_1836) ? 0.0 : max(_1836, 0.0)))) - exp2(_1735 * (isnan(0.0) ? _1837 : (isnan(_1837) ? 0.0 : max(_1837, 0.0))))) * _1835)) - ((exp2(_1737 * _1846) - exp2(_1737 * _1847)) * _1835))) + (_1730 * cbSceneParam._m0[80u].z);
        }
        vec4 _1907 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1568, _1569, 1.0), 0.0);
        float _1916 = exp2((_1905 * (-1.44269502162933349609375)) * (1.0 - _1907.w));
        float _1917 = log2(_1916);
        float _1933 = log2(_1588);
        _1739 = (exp2(_1933 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1917 * cbSceneParam._m0[78u].x)) * _1907.x) / cbSceneParam._m0[78u].x)) + _1585;
        _1741 = (exp2(_1933 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1917 * cbSceneParam._m0[78u].y)) * _1907.y) / cbSceneParam._m0[78u].y)) + _1586;
        _1743 = (exp2(_1933 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1917 * cbSceneParam._m0[78u].z)) * _1907.z) / cbSceneParam._m0[78u].z)) + _1587;
        _1745 = _1916 * _1588;
    }
    else
    {
        _1739 = _1585;
        _1741 = _1586;
        _1743 = _1587;
        _1745 = _1588;
    }
    bool _1943;
    vec4 _1754;
    vec4 _1777;
    float _1779;
    float _1783;
    float _1784;
    float _1785;
    float _1786;
    bool _1797;
    for (;;)
    {
        _1754 = cbMatDynParam._m0[0u];
        float _1756 = roundEven(_1754.y);
        bool _1757 = _1756 == 3.0;
        float _1759 = log2(_1745);
        float _1766 = exp2(_1759 * cbSceneParam._m0[78u].x) * _1555;
        float _1767 = exp2(_1759 * cbSceneParam._m0[78u].y) * _1556;
        float _1768 = exp2(_1759 * cbSceneParam._m0[78u].z) * _1557;
        float _1775 = _470 + (-0.5);
        _1777 = cbMtdParam._m0[1u];
        _1779 = _1777.y * _1775;
        float _1782 = (_1756 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1783 = _1782 * (_1757 ? _1766 : (_1766 + (cbSceneParam._m0[72u].w * _1739)));
        _1784 = _1782 * (_1757 ? _1767 : (_1767 + (cbSceneParam._m0[72u].w * _1741)));
        _1785 = _1782 * (_1757 ? _1768 : (_1768 + (cbSceneParam._m0[72u].w * _1743)));
        _1786 = _1775 * 0.999000012874603271484375;
        _1797 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1797)
        {
            if ((cbInstanceData._m0[_1465 + 7u].x + _1786) < 0.5)
            {
                _1943 = true;
                break;
            }
        }
        uint _1871 = (_1465 + 9u) + uint(_1754.w);
        if ((cbInstanceData._m0[_1871].w < 1.0) && ((cbInstanceData._m0[_1871].w + _1786) < 0.5))
        {
            _1943 = true;
            break;
        }
        if ((_1779 + 1.0) < _1777.x)
        {
            _1943 = true;
            break;
        }
        _1943 = false;
        break;
    }
    float _1972;
    if (_1943)
    {
        discard_state = true;
        _1972 = 0.0;
    }
    else
    {
        _1972 = _1563;
    }
    SV_Target.x = _1783;
    SV_Target.y = _1784;
    SV_Target.z = _1785;
    SV_Target.w = _1972;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _1563;
    discard_exit();
}


