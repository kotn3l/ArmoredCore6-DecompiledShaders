#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Blackhole_001_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Blackhole_001_snp_0_Texture2D_3;
layout(set = 0, binding = 2) uniform texture2D M_Blackhole_001_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _679;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _162 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _163 = _162 * NORMAL.x;
    float _164 = _162 * NORMAL.y;
    float _165 = _162 * NORMAL.z;
    float _170;
    float _171;
    float _172;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _170 = (-0.0) - _163;
        _171 = (-0.0) - _164;
        _172 = (-0.0) - _165;
    }
    else
    {
        _170 = _163;
        _171 = _164;
        _172 = _165;
    }
    vec4 _189 = texture(sampler2D(M_Blackhole_001_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _192 = _189.x;
    float _198 = exp2(log2(cbMtdParam._m0[10u].z * _192) * cbMtdParam._m0[10u].w);
    float _1667 = isnan(0.0) ? _198 : (isnan(_198) ? 0.0 : max(_198, 0.0));
    float _200 = isnan(1.0) ? _1667 : (isnan(_1667) ? 1.0 : min(_1667, 1.0));
    float _209 = exp2(log2(cbMtdParam._m0[11u].x * _192) * cbMtdParam._m0[11u].y);
    float _1678 = isnan(0.0) ? _209 : (isnan(_209) ? 0.0 : max(_209, 0.0));
    float _210 = isnan(1.0) ? _1678 : (isnan(_1678) ? 1.0 : min(_1678, 1.0));
    float _216 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _217 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _226 = cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x;
    float _231 = _226 * cbMtdParam._m0[9u].w;
    float _232 = sin(_231);
    float _233 = cos(_231);
    float _234 = TEXCOORD.x + (-0.5);
    float _236 = TEXCOORD.y + (-0.5);
    vec4 _256 = texture(sampler2D(M_Blackhole_001_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * (fma(_236, (-0.0) - _232, _233 * _234) + 0.5)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (fma(_236, _233, _232 * _234) + 0.5)) + cbTextureTilingScale._m0[1u].w));
    float _273 = exp2(log2(cbMtdParam._m0[10u].y * _192) * cbMtdParam._m0[10u].x);
    float _274 = exp2(log2(cbMtdParam._m0[10u].y * _189.y) * cbMtdParam._m0[10u].x);
    float _1689 = isnan(0.0) ? _273 : (isnan(_273) ? 0.0 : max(_273, 0.0));
    float _1700 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _277 = ((_256.x + (-0.5)) * cbMtdParam._m0[11u].w) * (isnan(1.0) ? _1689 : (isnan(_1689) ? 1.0 : min(_1689, 1.0)));
    float _278 = ((_256.y + (-0.5)) * cbMtdParam._m0[11u].w) * (isnan(1.0) ? _1700 : (isnan(_1700) ? 1.0 : min(_1700, 1.0)));
    float _281 = cbSceneParam._m0[86u].x * (_277 + (_216 / cbSceneParam._m0[86u].x));
    float _282 = (_278 + (_217 / cbSceneParam._m0[86u].y)) * cbSceneParam._m0[86u].y;
    float _290 = isnan(cbInstanceData._m0[8u].x) ? _281 : (isnan(_281) ? cbInstanceData._m0[8u].x : max(_281, cbInstanceData._m0[8u].x));
    float _291 = isnan(cbInstanceData._m0[8u].y) ? _282 : (isnan(_282) ? cbInstanceData._m0[8u].y : max(_282, cbInstanceData._m0[8u].y));
    vec4 _295 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _290 : (isnan(_290) ? cbInstanceData._m0[8u].z : min(_290, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _291 : (isnan(_291) ? cbInstanceData._m0[8u].w : min(_291, cbInstanceData._m0[8u].w))));
    float _304 = cbSceneParam._m0[72u].w * _295.x;
    float _305 = cbSceneParam._m0[72u].w * _295.y;
    float _306 = cbSceneParam._m0[72u].w * _295.z;
    float _315 = cbMtdParam._m0[9u].z * _226;
    float _316 = sin(_315);
    float _317 = cos(_315);
    float _318 = _234 + (cbMtdParam._m0[12u].x * _226);
    float _319 = _236 + (_226 * cbMtdParam._m0[12u].y);
    vec4 _340 = texture(sampler2D(M_Blackhole_001_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * ((_277 + 0.5) + fma(_319, (-0.0) - _316, _318 * _317))) + cbTextureTilingScale._m0[0u].z, (((_278 + 0.5) + fma(_319, _317, _318 * _316)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _356 = exp2(log2(cbMtdParam._m0[9u].x * _192) * cbMtdParam._m0[9u].y);
    float _1731 = isnan(0.0) ? _356 : (isnan(_356) ? 0.0 : max(_356, 0.0));
    float _357 = isnan(1.0) ? _1731 : (isnan(_1731) ? 1.0 : min(_1731, 1.0));
    float _364 = (_357 * ((_340.x * 28.0) - _304)) + _304;
    float _365 = (_357 * ((_340.y * 1.62963497638702392578125) - _305)) + _305;
    float _366 = (_357 * ((_340.z * 0.2912090122699737548828125) - _306)) + _306;
    float _376 = inversesqrt(dot(vec3(_170, _171, _172), vec3(_170, _171, _172)));
    float _377 = _376 * _170;
    float _378 = _376 * _171;
    float _379 = _376 * _172;
    float _1742 = isnan(0.0) ? _200 : (isnan(_200) ? 0.0 : max(_200, 0.0));
    float _380 = isnan(1.0) ? _1742 : (isnan(_1742) ? 1.0 : min(_1742, 1.0));
    float _396 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _436 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _446 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _436);
    float _447 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _436);
    float _448 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _436);
    float _452 = inversesqrt(dot(vec3(_446, _447, _448), vec3(_446, _447, _448)));
    float _453 = _446 * _452;
    float _454 = _447 * _452;
    float _455 = _448 * _452;
    vec4 _459 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_216 * cbSceneParam._m0[86u].x, _217 * cbSceneParam._m0[86u].y));
    float _462 = _459.x * TEXCOORD.z;
    float _463 = dot(vec3(_377, _378, _379), vec3(_453, _454, _455));
    float _466 = _463 * 2.0;
    float _471 = (_466 * _377) - _453;
    float _472 = (_466 * _378) - _454;
    float _473 = (_466 * _379) - _455;
    float _477 = abs(dot(vec3(_453, _454, _455), vec3(_377, _378, _379)));
    float _1753 = isnan(0.0) ? _477 : (isnan(_477) ? 0.0 : max(_477, 0.0));
    float _505 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _509 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _513 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _678;
    float _680;
    float _681;
    float _682;
    float _683;
    float _684;
    float _685;
    float _686;
    float _687;
    float _688;
    float _689;
    float _690;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _540 = fma(_513, cbModelParam._m0[26u].z, fma(_509, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _505));
        float _544 = fma(_513, cbModelParam._m0[27u].z, fma(_509, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _505));
        float _548 = fma(_513, cbModelParam._m0[28u].z, fma(_509, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _505));
        float _571 = _505 + _377;
        float _572 = _509 + _378;
        float _573 = _513 + _379;
        float _583 = fma(_573, cbModelParam._m0[26u].z, fma(_572, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _571)) - _540;
        float _584 = fma(_573, cbModelParam._m0[27u].z, fma(_572, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _571)) - _544;
        float _585 = fma(_573, cbModelParam._m0[28u].z, fma(_572, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _571)) - _548;
        float _589 = inversesqrt(dot(vec3(_583, _584, _585), vec3(_583, _584, _585)));
        float _602 = ((_589 * _583) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_540 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _603 = ((_589 * _584) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_544 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _604 = ((_589 * _585) / cbModelParam._m0[34u].z) + ((((((_548 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _607 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_602, _603, _604), 0.0);
        vec4 _614 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_602, _603, _604), 0.0);
        vec4 _621 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_602, _603, _604), 0.0);
        vec4 _628 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_602, _603, _604), 0.0);
        float _641 = exp2((_607.w + (-0.5)) * 20.0) * 2.0;
        float _651 = exp2((_614.w + (-0.5)) * 20.0) * 2.0;
        float _661 = exp2((_621.w + (-0.5)) * 20.0) * 2.0;
        float _671 = exp2((_628.w + (-0.5)) * 20.0) * 2.0;
        float _672 = _671 * (_628.x + (-0.5));
        float _673 = _671 * (_628.y + (-0.5));
        float _674 = _671 * (_628.z + (-0.5));
        _678 = _641 * (_607.z + (-0.5));
        _680 = _641 * (_607.y + (-0.5));
        _681 = _641 * (_607.x + (-0.5));
        _682 = _651 * (_614.z + (-0.5));
        _683 = _651 * (_614.y + (-0.5));
        _684 = _651 * (_614.x + (-0.5));
        _685 = _661 * (_621.z + (-0.5));
        _686 = _661 * (_621.y + (-0.5));
        _687 = _661 * (_621.x + (-0.5));
        _688 = isnan(0.0) ? _674 : (isnan(_674) ? 0.0 : max(_674, 0.0));
        _689 = isnan(0.0) ? _673 : (isnan(_673) ? 0.0 : max(_673, 0.0));
        _690 = isnan(0.0) ? _672 : (isnan(_672) ? 0.0 : max(_672, 0.0));
    }
    else
    {
        _678 = _679;
        _680 = _679;
        _681 = _679;
        _682 = _679;
        _683 = _679;
        _684 = _679;
        _685 = _679;
        _686 = _679;
        _687 = _679;
        _688 = _679;
        _689 = _679;
        _690 = _679;
    }
    float _852;
    float _853;
    float _854;
    float _855;
    float _856;
    float _857;
    float _858;
    float _859;
    float _860;
    float _861;
    float _862;
    float _863;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _716 = fma(_513, cbModelParam._m0[30u].z, fma(_509, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _505));
        float _720 = fma(_513, cbModelParam._m0[31u].z, fma(_509, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _505));
        float _724 = fma(_513, cbModelParam._m0[32u].z, fma(_509, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _505));
        float _747 = _505 + _377;
        float _748 = _509 + _378;
        float _749 = _513 + _379;
        float _759 = fma(_749, cbModelParam._m0[30u].z, fma(_748, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _747)) - _716;
        float _760 = fma(_749, cbModelParam._m0[31u].z, fma(_748, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _747)) - _720;
        float _761 = fma(_749, cbModelParam._m0[32u].z, fma(_748, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _747)) - _724;
        float _765 = inversesqrt(dot(vec3(_759, _760, _761), vec3(_759, _760, _761)));
        float _778 = ((_765 * _759) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_716 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _779 = ((_765 * _760) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_720 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _780 = ((_765 * _761) / cbModelParam._m0[35u].z) + ((((((_724 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _782 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_778, _779, _780), 0.0);
        vec4 _789 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_778, _779, _780), 0.0);
        vec4 _796 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_778, _779, _780), 0.0);
        vec4 _803 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_778, _779, _780), 0.0);
        float _815 = exp2((_782.w + (-0.5)) * 20.0) * 2.0;
        float _825 = exp2((_789.w + (-0.5)) * 20.0) * 2.0;
        float _835 = exp2((_796.w + (-0.5)) * 20.0) * 2.0;
        float _845 = exp2((_803.w + (-0.5)) * 20.0) * 2.0;
        float _846 = _845 * (_803.x + (-0.5));
        float _847 = _845 * (_803.y + (-0.5));
        float _848 = _845 * (_803.z + (-0.5));
        _852 = _815 * (_782.z + (-0.5));
        _853 = _815 * (_782.y + (-0.5));
        _854 = _815 * (_782.x + (-0.5));
        _855 = _825 * (_789.z + (-0.5));
        _856 = _825 * (_789.y + (-0.5));
        _857 = _825 * (_789.x + (-0.5));
        _858 = _835 * (_796.z + (-0.5));
        _859 = _835 * (_796.y + (-0.5));
        _860 = _835 * (_796.x + (-0.5));
        _861 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
        _862 = isnan(0.0) ? _847 : (isnan(_847) ? 0.0 : max(_847, 0.0));
        _863 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    }
    else
    {
        _852 = _679;
        _853 = _679;
        _854 = _679;
        _855 = _679;
        _856 = _679;
        _857 = _679;
        _858 = _679;
        _859 = _679;
        _860 = _679;
        _861 = _679;
        _862 = _679;
        _863 = _679;
    }
    float _878 = _471 * 0.5;
    float _879 = _472 * 0.5;
    float _880 = _473 * 0.5;
    float _881 = dot(vec4(_878, _879, _880, 1.0), vec4(_854, _857, _860, _863));
    float _884 = dot(vec4(_878, _879, _880, 1.0), vec4(_853, _856, _859, _862));
    float _887 = dot(vec4(_878, _879, _880, 1.0), vec4(_852, _855, _858, _861));
    float _922;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _894 = dot(vec4(_878, _879, _880, 1.0), vec4(_678, _682, _685, _688));
        float _898 = dot(vec4(_878, _879, _880, 1.0), vec4(_680, _683, _686, _689));
        float _902 = dot(vec4(_878, _879, _880, 1.0), vec4(_681, _684, _687, _690));
        float _909 = dot(vec4(cbModelParam._m0[39u]), vec4(_878, _879, _880, 1.0));
        _922 = dot(vec3(isnan(0.0) ? _902 : (isnan(_902) ? 0.0 : max(_902, 0.0)), isnan(0.0) ? _898 : (isnan(_898) ? 0.0 : max(_898, 0.0)), isnan(0.0) ? _894 : (isnan(_894) ? 0.0 : max(_894, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_909) ? 0.0 : (isnan(0.0) ? _909 : max(0.0, _909))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _922 = 1.0;
    }
    float _933;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _924 = dot(vec4(cbModelParam._m0[40u]), vec4(_878, _879, _880, 1.0));
        _933 = dot(vec3(isnan(0.0) ? _881 : (isnan(_881) ? 0.0 : max(_881, 0.0)), isnan(0.0) ? _884 : (isnan(_884) ? 0.0 : max(_884, 0.0)), isnan(0.0) ? _887 : (isnan(_887) ? 0.0 : max(_887, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_924) ? 0.0 : (isnan(0.0) ? _924 : max(0.0, _924))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _933 = 1.0;
    }
    float _937 = (_933 * cbModelParam._m0[1u].x) + (_922 * (1.0 - cbModelParam._m0[1u].x));
    float _943 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1026;
    float _1028;
    float _1030;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _993 = fma(_513, cbModelParam._m0[13u].z, fma(_509, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _505)) + cbModelParam._m0[13u].w;
        float _997 = fma(_513, cbModelParam._m0[14u].z, fma(_509, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _505)) + cbModelParam._m0[14u].w;
        float _1001 = fma(_513, cbModelParam._m0[15u].z, fma(_509, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _505)) + cbModelParam._m0[15u].w;
        float _1004 = fma(_473, cbModelParam._m0[13u].z, fma(_472, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _471));
        float _1007 = fma(_473, cbModelParam._m0[14u].z, fma(_472, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _471));
        float _1010 = fma(_473, cbModelParam._m0[15u].z, fma(_472, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _471));
        float _1036;
        if (_1004 > 0.0)
        {
            _1036 = abs((1.0 - _993) / _1004);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1004 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_993 + 1.0) / _1004);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1036 = frontier_phi_16_14_ladder;
        }
        float _1308;
        if (_1007 > 0.0)
        {
            _1308 = abs((1.0 - _997) / _1007);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1007 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_997 + 1.0) / _1007);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1308 = frontier_phi_25_21_ladder;
        }
        float _1457;
        if (_1010 > 0.0)
        {
            _1457 = abs((1.0 - _1001) / _1010);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1010 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1001 + 1.0) / _1010);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1457 = frontier_phi_37_32_ladder;
        }
        float _1459 = isnan(_1308) ? _1036 : (isnan(_1036) ? _1308 : min(_1036, _1308));
        float _1460 = isnan(_1457) ? _1459 : (isnan(_1459) ? _1457 : min(_1459, _1457));
        float _1464 = (_1460 * _1004) + _993;
        float _1465 = (_1460 * _1007) + _997;
        float _1466 = (_1460 * _1010) + _1001;
        float _1467 = _1460 * 9.9999997473787516355514526367188e-05;
        float _1468 = (-1.0) - _1467;
        float _1470 = _1467 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_1466 > _1470) || ((_1466 < _1468) || ((_1465 > _1470) || ((_1465 < _1468) || ((_1464 < _1468) || (_1464 > _1470))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1542 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1466, cbModelParam._m0[9u].z, fma(_1465, cbModelParam._m0[9u].y, _1464 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1466, cbModelParam._m0[10u].z, fma(_1465, cbModelParam._m0[10u].y, _1464 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1466, cbModelParam._m0[11u].z, fma(_1465, cbModelParam._m0[11u].y, _1464 * cbModelParam._m0[11u].x))), _943);
            frontier_phi_15_37_ladder = _1542.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _1542.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _1542.x * cbModelParam._m0[1u].y;
        }
        _1026 = frontier_phi_15_37_ladder_2;
        _1028 = frontier_phi_15_37_ladder_1;
        _1030 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1014 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_471, _472, _473), _943);
        _1026 = _1014.x * cbModelParam._m0[1u].y;
        _1028 = _1014.y * cbModelParam._m0[1u].y;
        _1030 = _1014.z * cbModelParam._m0[1u].y;
    }
    float _1033 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1125;
    float _1127;
    float _1129;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1089 = fma(_513, cbModelParam._m0[21u].z, fma(_509, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _505)) + cbModelParam._m0[21u].w;
        float _1093 = fma(_513, cbModelParam._m0[22u].z, fma(_509, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _505)) + cbModelParam._m0[22u].w;
        float _1097 = fma(_513, cbModelParam._m0[23u].z, fma(_509, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _505)) + cbModelParam._m0[23u].w;
        float _1100 = fma(_473, cbModelParam._m0[21u].z, fma(_472, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _471));
        float _1103 = fma(_473, cbModelParam._m0[22u].z, fma(_472, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _471));
        float _1106 = fma(_473, cbModelParam._m0[23u].z, fma(_472, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _471));
        float _1313;
        if (_1100 > 0.0)
        {
            _1313 = abs((1.0 - _1089) / _1100);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1100 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1089 + 1.0) / _1100);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1313 = frontier_phi_27_23_ladder;
        }
        float _1483;
        if (_1103 > 0.0)
        {
            _1483 = abs((1.0 - _1093) / _1103);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1103 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1093 + 1.0) / _1103);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _1483 = frontier_phi_39_34_ladder;
        }
        float _1551;
        if (_1106 > 0.0)
        {
            _1551 = abs((1.0 - _1097) / _1106);
        }
        else
        {
            float frontier_phi_45_44_ladder;
            if (_1106 < 0.0)
            {
                frontier_phi_45_44_ladder = abs((_1097 + 1.0) / _1106);
            }
            else
            {
                frontier_phi_45_44_ladder = 5000.0;
            }
            _1551 = frontier_phi_45_44_ladder;
        }
        float _1553 = isnan(_1483) ? _1313 : (isnan(_1313) ? _1483 : min(_1313, _1483));
        float _1554 = isnan(_1551) ? _1553 : (isnan(_1553) ? _1551 : min(_1553, _1551));
        float _1558 = (_1554 * _1100) + _1089;
        float _1559 = (_1554 * _1103) + _1093;
        float _1560 = (_1554 * _1106) + _1097;
        float _1561 = _1554 * 9.9999997473787516355514526367188e-05;
        float _1562 = (-1.0) - _1561;
        float _1564 = _1561 + 1.0;
        float frontier_phi_24_45_ladder;
        float frontier_phi_24_45_ladder_1;
        float frontier_phi_24_45_ladder_2;
        if ((_1560 > _1564) || ((_1560 < _1562) || ((_1559 > _1564) || ((_1559 < _1562) || ((_1558 < _1562) || (_1558 > _1564))))))
        {
            frontier_phi_24_45_ladder = 0.0;
            frontier_phi_24_45_ladder_1 = 0.0;
            frontier_phi_24_45_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1593 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1560, cbModelParam._m0[17u].z, fma(_1559, cbModelParam._m0[17u].y, _1558 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1560, cbModelParam._m0[18u].z, fma(_1559, cbModelParam._m0[18u].y, _1558 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1560, cbModelParam._m0[19u].z, fma(_1559, cbModelParam._m0[19u].y, _1558 * cbModelParam._m0[19u].x))), _1033);
            frontier_phi_24_45_ladder = _1593.x * cbModelParam._m0[1u].z;
            frontier_phi_24_45_ladder_1 = _1593.z * cbModelParam._m0[1u].z;
            frontier_phi_24_45_ladder_2 = _1593.y * cbModelParam._m0[1u].z;
        }
        _1125 = frontier_phi_24_45_ladder;
        _1127 = frontier_phi_24_45_ladder_2;
        _1129 = frontier_phi_24_45_ladder_1;
    }
    else
    {
        vec4 _1109 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_471, _472, _473), _1033);
        _1125 = _1109.x * cbModelParam._m0[1u].z;
        _1127 = _1109.y * cbModelParam._m0[1u].z;
        _1129 = _1109.z * cbModelParam._m0[1u].z;
    }
    float _1141 = _462 * 0.01200000010430812835693359375;
    float _1143 = _1141 * ((cbModelParam._m0[1u].w * (_1125 - _1026)) + _1026);
    float _1144 = _1141 * ((cbModelParam._m0[1u].w * (_1127 - _1028)) + _1028);
    float _1145 = _1141 * ((cbModelParam._m0[1u].w * (_1129 - _1030)) + _1030);
    float _1166 = fma(_1145, cbSceneParam._m0[89u].z, fma(_1144, cbSceneParam._m0[89u].y, _1143 * cbSceneParam._m0[89u].x));
    float _1169 = fma(_1145, cbSceneParam._m0[90u].z, fma(_1144, cbSceneParam._m0[90u].y, _1143 * cbSceneParam._m0[90u].x));
    float _1172 = fma(_1145, cbSceneParam._m0[91u].z, fma(_1144, cbSceneParam._m0[91u].y, _1143 * cbSceneParam._m0[91u].x));
    uint _1179 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1186 = floatBitsToUint(cbInstanceData._m0[_1179 + 5u]).x * 14u;
    float _1194 = (cbLight._m0[_1186 + 13u].x * (_462 + (-1.0))) + 1.0;
    uint _1195 = _1186 + 8u;
    float _1206 = cbLight._m0[_1186].x + _453;
    float _1207 = cbLight._m0[_1186].y + _454;
    float _1208 = cbLight._m0[_1186].z + _455;
    float _1212 = inversesqrt(dot(vec3(_1206, _1207, _1208), vec3(_1206, _1207, _1208)));
    float _1216 = dot(vec3(_377, _378, _379), vec3(cbLight._m0[_1186].xyz));
    float _1879 = isnan(0.0) ? _1216 : (isnan(_1216) ? 0.0 : max(_1216, 0.0));
    float _1219 = isnan(1.0) ? _1879 : (isnan(_1879) ? 1.0 : min(_1879, 1.0));
    float _1890 = isnan(0.0) ? _463 : (isnan(_463) ? 0.0 : max(_463, 0.0));
    float _1221 = dot(vec3(cbLight._m0[_1186].xyz), vec3(_1206 * _1212, _1207 * _1212, _1208 * _1212));
    float _1901 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
    float _1231 = (exp2(log2(1.0 - (isnan(1.0) ? _1901 : (isnan(_1901) ? 1.0 : min(_1901, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1237 = (0.5 / ((_1219 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1890 : (isnan(_1890) ? 1.0 : min(_1890, 1.0))))) * _1219;
    float _1912 = isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0));
    float _1239 = (isnan(1.0) ? _1912 : (isnan(_1912) ? 1.0 : min(_1912, 1.0))) * 0.31831014156341552734375;
    float _1241 = isnan(1.0) ? _1194 : (isnan(_1194) ? 1.0 : min(_1194, 1.0));
    float _1928 = isnan(0.0) ? _380 : (isnan(_380) ? 0.0 : max(_380, 0.0));
    float _1262 = 0.959999978542327880859375 - (exp2(log2(1.0 - (isnan(1.0) ? _1753 : (isnan(_1753) ? 1.0 : min(_1753, 1.0)))) * 5.0) * 0.959999978542327880859375);
    float _1274 = cbInstanceData._m0[_1179 + 6u].w * (isnan(1.0) ? _1928 : (isnan(_1928) ? 1.0 : min(_1928, 1.0)));
    float _1279 = _216 / cbSceneParam._m0[86u].x;
    float _1280 = _217 / cbSceneParam._m0[86u].y;
    vec4 _1294 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1279, _1280, (log2((isnan(cbSceneParam._m0[77u].w) ? _396 : (isnan(_396) ? cbSceneParam._m0[77u].w : min(_396, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1296 = _1294.x;
    float _1297 = _1294.y;
    float _1298 = _1294.z;
    float _1299 = _1294.w;
    float _1360;
    float _1362;
    float _1364;
    float _1366;
    if (_396 > cbSceneParam._m0[78u].w)
    {
        float _1322 = isnan(_396) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _396 : min(cbSceneParam._m0[80u].w, _396));
        float _1323 = _1322 / _396;
        float _1334 = _1323 * _446;
        float _1335 = _447 * _1323;
        float _1336 = (-0.0) - _1335;
        float _1337 = _1323 * _448;
        float _1339 = (cbSceneParam._m0[77u].w * _1336) / _1322;
        float _1340 = _1339 + cbSceneParam._m0[79u].w;
        float _1341 = cbSceneParam._m0[79u].w - _1335;
        float _1347 = sqrt(((_1334 * _1334) + (_1335 * _1335)) + (_1337 * _1337));
        float _1350 = (1.0 - (cbSceneParam._m0[77u].w / _1322)) * _1347;
        float _1356 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1358 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1488;
        if (abs((_1336 - _1339) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1488 = ((((_1340 > 0.0) ? exp2(_1356 * _1340) : (2.0 - exp2(_1358 * _1340))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1350;
        }
        else
        {
            float _1430 = 1.0 / cbSceneParam._m0[80u].x;
            float _1431 = isnan(_1341) ? _1340 : (isnan(_1340) ? _1341 : max(_1340, _1341));
            float _1432 = isnan(_1341) ? _1340 : (isnan(_1340) ? _1341 : min(_1340, _1341));
            float _1441 = isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : min(_1431, 0.0));
            float _1442 = isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : min(_1432, 0.0));
            _1488 = ((abs(_1347 / _1336) * cbSceneParam._m0[80u].y) * ((((_1441 - _1442) * 2.0) - ((exp2(_1356 * (isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : max(_1431, 0.0)))) - exp2(_1356 * (isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0))))) * _1430)) - ((exp2(_1358 * _1441) - exp2(_1358 * _1442)) * _1430))) + (_1350 * cbSceneParam._m0[80u].z);
        }
        vec4 _1490 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1279, _1280, 1.0), 0.0);
        float _1499 = exp2((_1488 * (-1.44269502162933349609375)) * (1.0 - _1490.w));
        float _1500 = log2(_1499);
        float _1516 = log2(_1299);
        _1360 = (exp2(_1516 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1500 * cbSceneParam._m0[78u].x)) * _1490.x) / cbSceneParam._m0[78u].x)) + _1296;
        _1362 = (exp2(_1516 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1500 * cbSceneParam._m0[78u].y)) * _1490.y) / cbSceneParam._m0[78u].y)) + _1297;
        _1364 = (exp2(_1516 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1500 * cbSceneParam._m0[78u].z)) * _1490.z) / cbSceneParam._m0[78u].z)) + _1298;
        _1366 = _1499 * _1299;
    }
    else
    {
        _1360 = _1296;
        _1362 = _1297;
        _1364 = _1298;
        _1366 = _1299;
    }
    float _1377 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1378 = _1377 == 3.0;
    float _1380 = log2(_1366);
    float _1387 = exp2(_1380 * cbSceneParam._m0[78u].x) * ((cbPerFrame._m0[3u].x * ((((_1231 * cbLight._m0[_1195].x) * _1239) * _1241) + ((isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0))) * _937))) + (_1262 * (_364 - (_364 * _210))));
    float _1388 = exp2(_1380 * cbSceneParam._m0[78u].y) * ((cbPerFrame._m0[3u].x * ((((_1231 * cbLight._m0[_1195].y) * _1239) * _1241) + ((isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0))) * _937))) + (_1262 * (_365 - (_365 * _210))));
    float _1389 = exp2(_1380 * cbSceneParam._m0[78u].z) * ((cbPerFrame._m0[3u].x * ((((_1231 * cbLight._m0[_1195].z) * _1239) * _1241) + ((isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0))) * _937))) + (_1262 * (_366 - (_366 * _210))));
    float _1398 = (_1377 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1398 * (_1378 ? _1387 : (_1387 + (cbSceneParam._m0[72u].w * _1360)));
    SV_Target.y = _1398 * (_1378 ? _1388 : (_1388 + (cbSceneParam._m0[72u].w * _1362)));
    SV_Target.z = _1398 * (_1378 ? _1389 : (_1389 + (cbSceneParam._m0[72u].w * _1364)));
    SV_Target.w = _1274;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _1274;
}


