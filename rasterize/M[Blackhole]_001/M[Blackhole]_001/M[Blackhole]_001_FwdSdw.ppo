#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Blackhole_001_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Blackhole_001_snp_0_Texture2D_3;
layout(set = 0, binding = 2) uniform texture2D M_Blackhole_001_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _683;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _166 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _167 = _166 * NORMAL.x;
    float _168 = _166 * NORMAL.y;
    float _169 = _166 * NORMAL.z;
    float _174;
    float _175;
    float _176;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _174 = (-0.0) - _167;
        _175 = (-0.0) - _168;
        _176 = (-0.0) - _169;
    }
    else
    {
        _174 = _167;
        _175 = _168;
        _176 = _169;
    }
    vec4 _193 = texture(sampler2D(M_Blackhole_001_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _196 = _193.x;
    float _202 = exp2(log2(cbMtdParam._m0[10u].z * _196) * cbMtdParam._m0[10u].w);
    float _1995 = isnan(0.0) ? _202 : (isnan(_202) ? 0.0 : max(_202, 0.0));
    float _204 = isnan(1.0) ? _1995 : (isnan(_1995) ? 1.0 : min(_1995, 1.0));
    float _213 = exp2(log2(cbMtdParam._m0[11u].x * _196) * cbMtdParam._m0[11u].y);
    float _2006 = isnan(0.0) ? _213 : (isnan(_213) ? 0.0 : max(_213, 0.0));
    float _214 = isnan(1.0) ? _2006 : (isnan(_2006) ? 1.0 : min(_2006, 1.0));
    float _220 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _221 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _230 = cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x;
    float _235 = _230 * cbMtdParam._m0[9u].w;
    float _236 = sin(_235);
    float _237 = cos(_235);
    float _238 = TEXCOORD.x + (-0.5);
    float _240 = TEXCOORD.y + (-0.5);
    vec4 _260 = texture(sampler2D(M_Blackhole_001_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * (fma(_240, (-0.0) - _236, _237 * _238) + 0.5)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (fma(_240, _237, _236 * _238) + 0.5)) + cbTextureTilingScale._m0[1u].w));
    float _277 = exp2(log2(cbMtdParam._m0[10u].y * _196) * cbMtdParam._m0[10u].x);
    float _278 = exp2(log2(cbMtdParam._m0[10u].y * _193.y) * cbMtdParam._m0[10u].x);
    float _2017 = isnan(0.0) ? _277 : (isnan(_277) ? 0.0 : max(_277, 0.0));
    float _2028 = isnan(0.0) ? _278 : (isnan(_278) ? 0.0 : max(_278, 0.0));
    float _281 = ((_260.x + (-0.5)) * cbMtdParam._m0[11u].w) * (isnan(1.0) ? _2017 : (isnan(_2017) ? 1.0 : min(_2017, 1.0)));
    float _282 = ((_260.y + (-0.5)) * cbMtdParam._m0[11u].w) * (isnan(1.0) ? _2028 : (isnan(_2028) ? 1.0 : min(_2028, 1.0)));
    float _285 = cbSceneParam._m0[86u].x * (_281 + (_220 / cbSceneParam._m0[86u].x));
    float _286 = (_282 + (_221 / cbSceneParam._m0[86u].y)) * cbSceneParam._m0[86u].y;
    float _294 = isnan(cbInstanceData._m0[8u].x) ? _285 : (isnan(_285) ? cbInstanceData._m0[8u].x : max(_285, cbInstanceData._m0[8u].x));
    float _295 = isnan(cbInstanceData._m0[8u].y) ? _286 : (isnan(_286) ? cbInstanceData._m0[8u].y : max(_286, cbInstanceData._m0[8u].y));
    vec4 _299 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _294 : (isnan(_294) ? cbInstanceData._m0[8u].z : min(_294, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _295 : (isnan(_295) ? cbInstanceData._m0[8u].w : min(_295, cbInstanceData._m0[8u].w))));
    float _308 = cbSceneParam._m0[72u].w * _299.x;
    float _309 = cbSceneParam._m0[72u].w * _299.y;
    float _310 = cbSceneParam._m0[72u].w * _299.z;
    float _319 = cbMtdParam._m0[9u].z * _230;
    float _320 = sin(_319);
    float _321 = cos(_319);
    float _322 = _238 + (cbMtdParam._m0[12u].x * _230);
    float _323 = _240 + (_230 * cbMtdParam._m0[12u].y);
    vec4 _344 = texture(sampler2D(M_Blackhole_001_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * ((_281 + 0.5) + fma(_323, (-0.0) - _320, _322 * _321))) + cbTextureTilingScale._m0[0u].z, (((_282 + 0.5) + fma(_323, _321, _322 * _320)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _360 = exp2(log2(cbMtdParam._m0[9u].x * _196) * cbMtdParam._m0[9u].y);
    float _2059 = isnan(0.0) ? _360 : (isnan(_360) ? 0.0 : max(_360, 0.0));
    float _361 = isnan(1.0) ? _2059 : (isnan(_2059) ? 1.0 : min(_2059, 1.0));
    float _368 = (_361 * ((_344.x * 28.0) - _308)) + _308;
    float _369 = (_361 * ((_344.y * 1.62963497638702392578125) - _309)) + _309;
    float _370 = (_361 * ((_344.z * 0.2912090122699737548828125) - _310)) + _310;
    float _380 = inversesqrt(dot(vec3(_174, _175, _176), vec3(_174, _175, _176)));
    float _381 = _380 * _174;
    float _382 = _380 * _175;
    float _383 = _380 * _176;
    float _2070 = isnan(0.0) ? _204 : (isnan(_204) ? 0.0 : max(_204, 0.0));
    float _384 = isnan(1.0) ? _2070 : (isnan(_2070) ? 1.0 : min(_2070, 1.0));
    float _400 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _440 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _450 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _440);
    float _451 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _440);
    float _452 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _440);
    float _456 = inversesqrt(dot(vec3(_450, _451, _452), vec3(_450, _451, _452)));
    float _457 = _450 * _456;
    float _458 = _451 * _456;
    float _459 = _452 * _456;
    vec4 _463 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_220 * cbSceneParam._m0[86u].x, _221 * cbSceneParam._m0[86u].y));
    float _466 = _463.x * TEXCOORD.z;
    float _467 = dot(vec3(_381, _382, _383), vec3(_457, _458, _459));
    float _470 = _467 * 2.0;
    float _475 = (_470 * _381) - _457;
    float _476 = (_470 * _382) - _458;
    float _477 = (_470 * _383) - _459;
    float _481 = abs(dot(vec3(_457, _458, _459), vec3(_381, _382, _383)));
    float _2081 = isnan(0.0) ? _481 : (isnan(_481) ? 0.0 : max(_481, 0.0));
    float _509 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _513 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _517 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _682;
    float _684;
    float _685;
    float _686;
    float _687;
    float _688;
    float _689;
    float _690;
    float _691;
    float _692;
    float _693;
    float _694;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _544 = fma(_517, cbModelParam._m0[26u].z, fma(_513, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _509));
        float _548 = fma(_517, cbModelParam._m0[27u].z, fma(_513, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _509));
        float _552 = fma(_517, cbModelParam._m0[28u].z, fma(_513, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _509));
        float _575 = _509 + _381;
        float _576 = _513 + _382;
        float _577 = _517 + _383;
        float _587 = fma(_577, cbModelParam._m0[26u].z, fma(_576, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _575)) - _544;
        float _588 = fma(_577, cbModelParam._m0[27u].z, fma(_576, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _575)) - _548;
        float _589 = fma(_577, cbModelParam._m0[28u].z, fma(_576, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _575)) - _552;
        float _593 = inversesqrt(dot(vec3(_587, _588, _589), vec3(_587, _588, _589)));
        float _606 = ((_593 * _587) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_544 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _607 = ((_593 * _588) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_548 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _608 = ((_593 * _589) / cbModelParam._m0[34u].z) + ((((((_552 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _611 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_606, _607, _608), 0.0);
        vec4 _618 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_606, _607, _608), 0.0);
        vec4 _625 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_606, _607, _608), 0.0);
        vec4 _632 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_606, _607, _608), 0.0);
        float _645 = exp2((_611.w + (-0.5)) * 20.0) * 2.0;
        float _655 = exp2((_618.w + (-0.5)) * 20.0) * 2.0;
        float _665 = exp2((_625.w + (-0.5)) * 20.0) * 2.0;
        float _675 = exp2((_632.w + (-0.5)) * 20.0) * 2.0;
        float _676 = _675 * (_632.x + (-0.5));
        float _677 = _675 * (_632.y + (-0.5));
        float _678 = _675 * (_632.z + (-0.5));
        _682 = _645 * (_611.z + (-0.5));
        _684 = _645 * (_611.y + (-0.5));
        _685 = _645 * (_611.x + (-0.5));
        _686 = _655 * (_618.z + (-0.5));
        _687 = _655 * (_618.y + (-0.5));
        _688 = _655 * (_618.x + (-0.5));
        _689 = _665 * (_625.z + (-0.5));
        _690 = _665 * (_625.y + (-0.5));
        _691 = _665 * (_625.x + (-0.5));
        _692 = isnan(0.0) ? _678 : (isnan(_678) ? 0.0 : max(_678, 0.0));
        _693 = isnan(0.0) ? _677 : (isnan(_677) ? 0.0 : max(_677, 0.0));
        _694 = isnan(0.0) ? _676 : (isnan(_676) ? 0.0 : max(_676, 0.0));
    }
    else
    {
        _682 = _683;
        _684 = _683;
        _685 = _683;
        _686 = _683;
        _687 = _683;
        _688 = _683;
        _689 = _683;
        _690 = _683;
        _691 = _683;
        _692 = _683;
        _693 = _683;
        _694 = _683;
    }
    float _856;
    float _857;
    float _858;
    float _859;
    float _860;
    float _861;
    float _862;
    float _863;
    float _864;
    float _865;
    float _866;
    float _867;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _720 = fma(_517, cbModelParam._m0[30u].z, fma(_513, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _509));
        float _724 = fma(_517, cbModelParam._m0[31u].z, fma(_513, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _509));
        float _728 = fma(_517, cbModelParam._m0[32u].z, fma(_513, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _509));
        float _751 = _509 + _381;
        float _752 = _513 + _382;
        float _753 = _517 + _383;
        float _763 = fma(_753, cbModelParam._m0[30u].z, fma(_752, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _751)) - _720;
        float _764 = fma(_753, cbModelParam._m0[31u].z, fma(_752, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _751)) - _724;
        float _765 = fma(_753, cbModelParam._m0[32u].z, fma(_752, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _751)) - _728;
        float _769 = inversesqrt(dot(vec3(_763, _764, _765), vec3(_763, _764, _765)));
        float _782 = ((_769 * _763) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_720 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _783 = ((_769 * _764) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_724 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _784 = ((_769 * _765) / cbModelParam._m0[35u].z) + ((((((_728 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _786 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_782, _783, _784), 0.0);
        vec4 _793 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_782, _783, _784), 0.0);
        vec4 _800 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_782, _783, _784), 0.0);
        vec4 _807 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_782, _783, _784), 0.0);
        float _819 = exp2((_786.w + (-0.5)) * 20.0) * 2.0;
        float _829 = exp2((_793.w + (-0.5)) * 20.0) * 2.0;
        float _839 = exp2((_800.w + (-0.5)) * 20.0) * 2.0;
        float _849 = exp2((_807.w + (-0.5)) * 20.0) * 2.0;
        float _850 = _849 * (_807.x + (-0.5));
        float _851 = _849 * (_807.y + (-0.5));
        float _852 = _849 * (_807.z + (-0.5));
        _856 = _819 * (_786.z + (-0.5));
        _857 = _819 * (_786.y + (-0.5));
        _858 = _819 * (_786.x + (-0.5));
        _859 = _829 * (_793.z + (-0.5));
        _860 = _829 * (_793.y + (-0.5));
        _861 = _829 * (_793.x + (-0.5));
        _862 = _839 * (_800.z + (-0.5));
        _863 = _839 * (_800.y + (-0.5));
        _864 = _839 * (_800.x + (-0.5));
        _865 = isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0));
        _866 = isnan(0.0) ? _851 : (isnan(_851) ? 0.0 : max(_851, 0.0));
        _867 = isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : max(_850, 0.0));
    }
    else
    {
        _856 = _683;
        _857 = _683;
        _858 = _683;
        _859 = _683;
        _860 = _683;
        _861 = _683;
        _862 = _683;
        _863 = _683;
        _864 = _683;
        _865 = _683;
        _866 = _683;
        _867 = _683;
    }
    float _882 = _475 * 0.5;
    float _883 = _476 * 0.5;
    float _884 = _477 * 0.5;
    float _885 = dot(vec4(_882, _883, _884, 1.0), vec4(_858, _861, _864, _867));
    float _888 = dot(vec4(_882, _883, _884, 1.0), vec4(_857, _860, _863, _866));
    float _891 = dot(vec4(_882, _883, _884, 1.0), vec4(_856, _859, _862, _865));
    float _926;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _898 = dot(vec4(_882, _883, _884, 1.0), vec4(_682, _686, _689, _692));
        float _902 = dot(vec4(_882, _883, _884, 1.0), vec4(_684, _687, _690, _693));
        float _906 = dot(vec4(_882, _883, _884, 1.0), vec4(_685, _688, _691, _694));
        float _913 = dot(vec4(cbModelParam._m0[39u]), vec4(_882, _883, _884, 1.0));
        _926 = dot(vec3(isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0)), isnan(0.0) ? _902 : (isnan(_902) ? 0.0 : max(_902, 0.0)), isnan(0.0) ? _898 : (isnan(_898) ? 0.0 : max(_898, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_913) ? 0.0 : (isnan(0.0) ? _913 : max(0.0, _913))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _926 = 1.0;
    }
    float _937;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _928 = dot(vec4(cbModelParam._m0[40u]), vec4(_882, _883, _884, 1.0));
        _937 = dot(vec3(isnan(0.0) ? _885 : (isnan(_885) ? 0.0 : max(_885, 0.0)), isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0)), isnan(0.0) ? _891 : (isnan(_891) ? 0.0 : max(_891, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_928) ? 0.0 : (isnan(0.0) ? _928 : max(0.0, _928))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _937 = 1.0;
    }
    float _941 = (_937 * cbModelParam._m0[1u].x) + (_926 * (1.0 - cbModelParam._m0[1u].x));
    float _947 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1030;
    float _1032;
    float _1034;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _997 = fma(_517, cbModelParam._m0[13u].z, fma(_513, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _509)) + cbModelParam._m0[13u].w;
        float _1001 = fma(_517, cbModelParam._m0[14u].z, fma(_513, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _509)) + cbModelParam._m0[14u].w;
        float _1005 = fma(_517, cbModelParam._m0[15u].z, fma(_513, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _509)) + cbModelParam._m0[15u].w;
        float _1008 = fma(_477, cbModelParam._m0[13u].z, fma(_476, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _475));
        float _1011 = fma(_477, cbModelParam._m0[14u].z, fma(_476, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _475));
        float _1014 = fma(_477, cbModelParam._m0[15u].z, fma(_476, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _475));
        float _1040;
        if (_1008 > 0.0)
        {
            _1040 = abs((1.0 - _997) / _1008);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1008 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_997 + 1.0) / _1008);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1040 = frontier_phi_16_14_ladder;
        }
        float _1231;
        if (_1011 > 0.0)
        {
            _1231 = abs((1.0 - _1001) / _1011);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1011 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1001 + 1.0) / _1011);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1231 = frontier_phi_25_21_ladder;
        }
        float _1576;
        if (_1014 > 0.0)
        {
            _1576 = abs((1.0 - _1005) / _1014);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1014 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1005 + 1.0) / _1014);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1576 = frontier_phi_37_32_ladder;
        }
        float _1578 = isnan(_1231) ? _1040 : (isnan(_1040) ? _1231 : min(_1040, _1231));
        float _1579 = isnan(_1576) ? _1578 : (isnan(_1578) ? _1576 : min(_1578, _1576));
        float _1583 = (_1579 * _1008) + _997;
        float _1584 = (_1579 * _1011) + _1001;
        float _1585 = (_1579 * _1014) + _1005;
        float _1586 = _1579 * 9.9999997473787516355514526367188e-05;
        float _1588 = (-1.0) - _1586;
        float _1590 = _1586 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_1585 > _1590) || ((_1585 < _1588) || ((_1584 > _1590) || ((_1584 < _1588) || ((_1583 < _1588) || (_1583 > _1590))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1784 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1585, cbModelParam._m0[9u].z, fma(_1584, cbModelParam._m0[9u].y, _1583 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1585, cbModelParam._m0[10u].z, fma(_1584, cbModelParam._m0[10u].y, _1583 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1585, cbModelParam._m0[11u].z, fma(_1584, cbModelParam._m0[11u].y, _1583 * cbModelParam._m0[11u].x))), _947);
            frontier_phi_15_37_ladder = _1784.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _1784.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _1784.x * cbModelParam._m0[1u].y;
        }
        _1030 = frontier_phi_15_37_ladder_2;
        _1032 = frontier_phi_15_37_ladder_1;
        _1034 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1018 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_475, _476, _477), _947);
        _1030 = _1018.x * cbModelParam._m0[1u].y;
        _1032 = _1018.y * cbModelParam._m0[1u].y;
        _1034 = _1018.z * cbModelParam._m0[1u].y;
    }
    float _1037 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1129;
    float _1131;
    float _1133;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1093 = fma(_517, cbModelParam._m0[21u].z, fma(_513, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _509)) + cbModelParam._m0[21u].w;
        float _1097 = fma(_517, cbModelParam._m0[22u].z, fma(_513, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _509)) + cbModelParam._m0[22u].w;
        float _1101 = fma(_517, cbModelParam._m0[23u].z, fma(_513, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _509)) + cbModelParam._m0[23u].w;
        float _1104 = fma(_477, cbModelParam._m0[21u].z, fma(_476, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _475));
        float _1107 = fma(_477, cbModelParam._m0[22u].z, fma(_476, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _475));
        float _1110 = fma(_477, cbModelParam._m0[23u].z, fma(_476, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _475));
        float _1236;
        if (_1104 > 0.0)
        {
            _1236 = abs((1.0 - _1093) / _1104);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1104 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1093 + 1.0) / _1104);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1236 = frontier_phi_27_23_ladder;
        }
        float _1603;
        if (_1107 > 0.0)
        {
            _1603 = abs((1.0 - _1097) / _1107);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1107 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1097 + 1.0) / _1107);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _1603 = frontier_phi_39_34_ladder;
        }
        float _1832;
        if (_1110 > 0.0)
        {
            _1832 = abs((1.0 - _1101) / _1110);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1110 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1101 + 1.0) / _1110);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _1832 = frontier_phi_49_46_ladder;
        }
        float _1834 = isnan(_1603) ? _1236 : (isnan(_1236) ? _1603 : min(_1236, _1603));
        float _1835 = isnan(_1832) ? _1834 : (isnan(_1834) ? _1832 : min(_1834, _1832));
        float _1839 = (_1835 * _1104) + _1093;
        float _1840 = (_1835 * _1107) + _1097;
        float _1841 = (_1835 * _1110) + _1101;
        float _1842 = _1835 * 9.9999997473787516355514526367188e-05;
        float _1843 = (-1.0) - _1842;
        float _1845 = _1842 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_1841 > _1845) || ((_1841 < _1843) || ((_1840 > _1845) || ((_1840 < _1843) || ((_1839 < _1843) || (_1839 > _1845))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1912 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1841, cbModelParam._m0[17u].z, fma(_1840, cbModelParam._m0[17u].y, _1839 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1841, cbModelParam._m0[18u].z, fma(_1840, cbModelParam._m0[18u].y, _1839 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1841, cbModelParam._m0[19u].z, fma(_1840, cbModelParam._m0[19u].y, _1839 * cbModelParam._m0[19u].x))), _1037);
            frontier_phi_24_49_ladder = _1912.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _1912.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _1912.x * cbModelParam._m0[1u].z;
        }
        _1129 = frontier_phi_24_49_ladder_2;
        _1131 = frontier_phi_24_49_ladder;
        _1133 = frontier_phi_24_49_ladder_1;
    }
    else
    {
        vec4 _1113 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_475, _476, _477), _1037);
        _1129 = _1113.x * cbModelParam._m0[1u].z;
        _1131 = _1113.y * cbModelParam._m0[1u].z;
        _1133 = _1113.z * cbModelParam._m0[1u].z;
    }
    float _1145 = _466 * 0.01200000010430812835693359375;
    float _1147 = _1145 * ((cbModelParam._m0[1u].w * (_1129 - _1030)) + _1030);
    float _1148 = _1145 * ((cbModelParam._m0[1u].w * (_1131 - _1032)) + _1032);
    float _1149 = _1145 * ((cbModelParam._m0[1u].w * (_1133 - _1034)) + _1034);
    float _1170 = fma(_1149, cbSceneParam._m0[89u].z, fma(_1148, cbSceneParam._m0[89u].y, _1147 * cbSceneParam._m0[89u].x));
    float _1173 = fma(_1149, cbSceneParam._m0[90u].z, fma(_1148, cbSceneParam._m0[90u].y, _1147 * cbSceneParam._m0[90u].x));
    float _1176 = fma(_1149, cbSceneParam._m0[91u].z, fma(_1148, cbSceneParam._m0[91u].y, _1147 * cbSceneParam._m0[91u].x));
    float _1210 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1214 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1218 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1222 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1223 = _1210 / _1222;
    float _1224 = _1214 / _1222;
    float _1225 = _1218 / _1222;
    float _1372;
    float _1373;
    float _1374;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1252 = ((uint(_1225 > cbSceneParam._m0[59u].y) + uint(_1225 > cbSceneParam._m0[59u].x)) + uint(_1225 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1253 = _1252 + 43u;
        uint _1261 = _1252 + 44u;
        uint _1269 = _1252 + 45u;
        uint _1277 = _1252 + 46u;
        float _1288 = fma(_1222, cbSceneParam._m0[_1253].w, fma(_1218, cbSceneParam._m0[_1253].z, fma(_1214, cbSceneParam._m0[_1253].y, _1210 * cbSceneParam._m0[_1253].x)));
        float _1292 = fma(_1222, cbSceneParam._m0[_1261].w, fma(_1218, cbSceneParam._m0[_1261].z, fma(_1214, cbSceneParam._m0[_1261].y, _1210 * cbSceneParam._m0[_1261].x)));
        float _1300 = fma(_1222, cbSceneParam._m0[_1277].w, fma(_1218, cbSceneParam._m0[_1277].z, fma(_1214, cbSceneParam._m0[_1277].y, _1210 * cbSceneParam._m0[_1277].x)));
        float _1305 = cbSceneParam._m0[33u].z * _1300;
        float _1307 = cbSceneParam._m0[33u].w * _1300;
        float _1310 = fma(_1222, cbSceneParam._m0[_1269].w, fma(_1218, cbSceneParam._m0[_1269].z, fma(_1214, cbSceneParam._m0[_1269].y, _1210 * cbSceneParam._m0[_1269].x))) / _1300;
        float _1358 = (cbSceneParam._m0[33u].x - sqrt(((_1224 * _1224) + (_1223 * _1223)) + (_1225 * _1225))) * cbSceneParam._m0[33u].y;
        float _2207 = isnan(0.0) ? _1358 : (isnan(_1358) ? 0.0 : max(_1358, 0.0));
        float _1365 = (isnan(1.0) ? _2207 : (isnan(_2207) ? 1.0 : min(_2207, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1305 + _1288) / _1300, (_1307 + _1292) / _1300), _1310), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1307 + _1288) / _1300, (_1292 - _1305) / _1300), _1310), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1288 - _1305) / _1300, (_1292 - _1307) / _1300), _1310), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1288 - _1307) / _1300, (_1305 + _1292) / _1300), _1310), 0.0)).x), vec4(0.25)));
        _1372 = 1.0 - (_1365 * cbSceneParam._m0[34u].x);
        _1373 = 1.0 - (_1365 * cbSceneParam._m0[34u].y);
        _1374 = 1.0 - (_1365 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1372 = 1.0;
        _1373 = 1.0;
        _1374 = 1.0;
    }
    float _1438;
    float _1440;
    float _1442;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1426 = fma(_1222, cbSceneParam._m0[63u].w, fma(_1218, cbSceneParam._m0[63u].z, fma(_1214, cbSceneParam._m0[63u].y, _1210 * cbSceneParam._m0[63u].x)));
        float _1427 = fma(_1222, cbSceneParam._m0[60u].w, fma(_1218, cbSceneParam._m0[60u].z, fma(_1214, cbSceneParam._m0[60u].y, _1210 * cbSceneParam._m0[60u].x))) / _1426;
        float _1428 = fma(_1222, cbSceneParam._m0[61u].w, fma(_1218, cbSceneParam._m0[61u].z, fma(_1214, cbSceneParam._m0[61u].y, _1210 * cbSceneParam._m0[61u].x))) / _1426;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_1427 >= cbSceneParam._m0[64u].x) && (_1428 >= cbSceneParam._m0[64u].y)) && (_1427 <= cbSceneParam._m0[64u].z)) && (_1428 <= cbSceneParam._m0[64u].w))
        {
            float _1616 = fma(_1222, cbSceneParam._m0[62u].w, fma(_1218, cbSceneParam._m0[62u].z, fma(_1214, cbSceneParam._m0[62u].y, _1210 * cbSceneParam._m0[62u].x))) / _1426;
            float _1620 = isnan(cbSceneParam._m0[41u].w) ? _1616 : (isnan(_1616) ? cbSceneParam._m0[41u].w : max(_1616, cbSceneParam._m0[41u].w));
            float _1663 = (cbSceneParam._m0[33u].x - sqrt(((_1224 * _1224) + (_1223 * _1223)) + (_1225 * _1225))) * cbSceneParam._m0[33u].y;
            float _2223 = isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0));
            float _1670 = (isnan(1.0) ? _2223 : (isnan(_2223) ? 1.0 : min(_2223, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1427, cbSceneParam._m0[33u].w + _1428), _1620), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1427, _1428 - cbSceneParam._m0[33u].z), _1620), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1427 - cbSceneParam._m0[33u].z, _1428 - cbSceneParam._m0[33u].w), _1620), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1427 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1428), _1620), 0.0)).x), vec4(0.25)));
            float _1674 = 1.0 - (_1670 * cbSceneParam._m0[34u].x);
            float _1675 = 1.0 - (_1670 * cbSceneParam._m0[34u].y);
            float _1676 = 1.0 - (_1670 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_1674) ? _1372 : (isnan(_1372) ? _1674 : min(_1372, _1674));
            frontier_phi_36_35_ladder_1 = isnan(_1676) ? _1374 : (isnan(_1374) ? _1676 : min(_1374, _1676));
            frontier_phi_36_35_ladder_2 = isnan(_1675) ? _1373 : (isnan(_1373) ? _1675 : min(_1373, _1675));
        }
        else
        {
            frontier_phi_36_35_ladder = _1372;
            frontier_phi_36_35_ladder_1 = _1374;
            frontier_phi_36_35_ladder_2 = _1373;
        }
        _1438 = frontier_phi_36_35_ladder;
        _1440 = frontier_phi_36_35_ladder_2;
        _1442 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _1438 = _1372;
        _1440 = _1373;
        _1442 = _1374;
    }
    uint _1444 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1451 = floatBitsToUint(cbInstanceData._m0[_1444 + 5u]).x * 14u;
    float _1459 = (cbLight._m0[_1451 + 13u].x * (_466 + (-1.0))) + 1.0;
    uint _1460 = _1451 + 8u;
    float _1471 = cbLight._m0[_1451].x + _457;
    float _1472 = cbLight._m0[_1451].y + _458;
    float _1473 = cbLight._m0[_1451].z + _459;
    float _1477 = inversesqrt(dot(vec3(_1471, _1472, _1473), vec3(_1471, _1472, _1473)));
    float _1481 = dot(vec3(_381, _382, _383), vec3(cbLight._m0[_1451].xyz));
    float _2249 = isnan(0.0) ? _1481 : (isnan(_1481) ? 0.0 : max(_1481, 0.0));
    float _1484 = isnan(1.0) ? _2249 : (isnan(_2249) ? 1.0 : min(_2249, 1.0));
    float _2260 = isnan(0.0) ? _467 : (isnan(_467) ? 0.0 : max(_467, 0.0));
    float _1486 = dot(vec3(cbLight._m0[_1451].xyz), vec3(_1471 * _1477, _1472 * _1477, _1473 * _1477));
    float _2271 = isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0));
    float _1496 = (exp2(log2(1.0 - (isnan(1.0) ? _2271 : (isnan(_2271) ? 1.0 : min(_2271, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1502 = (0.5 / ((_1484 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _2260 : (isnan(_2260) ? 1.0 : min(_2260, 1.0))))) * _1484;
    float _2282 = isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0));
    float _1504 = (isnan(1.0) ? _2282 : (isnan(_2282) ? 1.0 : min(_2282, 1.0))) * 0.31831014156341552734375;
    float _1506 = isnan(1.0) ? _1459 : (isnan(_1459) ? 1.0 : min(_1459, 1.0));
    float _2298 = isnan(0.0) ? _384 : (isnan(_384) ? 0.0 : max(_384, 0.0));
    float _1530 = 0.959999978542327880859375 - (exp2(log2(1.0 - (isnan(1.0) ? _2081 : (isnan(_2081) ? 1.0 : min(_2081, 1.0)))) * 5.0) * 0.959999978542327880859375);
    float _1542 = cbInstanceData._m0[_1444 + 6u].w * (isnan(1.0) ? _2298 : (isnan(_2298) ? 1.0 : min(_2298, 1.0)));
    float _1547 = _220 / cbSceneParam._m0[86u].x;
    float _1548 = _221 / cbSceneParam._m0[86u].y;
    vec4 _1562 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1547, _1548, (log2((isnan(cbSceneParam._m0[77u].w) ? _400 : (isnan(_400) ? cbSceneParam._m0[77u].w : min(_400, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1564 = _1562.x;
    float _1565 = _1562.y;
    float _1566 = _1562.z;
    float _1567 = _1562.w;
    float _1718;
    float _1720;
    float _1722;
    float _1724;
    if (_400 > cbSceneParam._m0[78u].w)
    {
        float _1681 = isnan(_400) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _400 : min(cbSceneParam._m0[80u].w, _400));
        float _1682 = _1681 / _400;
        float _1693 = _1682 * _450;
        float _1694 = _451 * _1682;
        float _1695 = (-0.0) - _1694;
        float _1696 = _1682 * _452;
        float _1698 = (cbSceneParam._m0[77u].w * _1695) / _1681;
        float _1699 = _1698 + cbSceneParam._m0[79u].w;
        float _1700 = cbSceneParam._m0[79u].w - _1694;
        float _1706 = sqrt(((_1693 * _1693) + (_1694 * _1694)) + (_1696 * _1696));
        float _1709 = (1.0 - (cbSceneParam._m0[77u].w / _1681)) * _1706;
        float _1714 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1716 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1858;
        if (abs((_1695 - _1698) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1858 = ((((_1699 > 0.0) ? exp2(_1714 * _1699) : (2.0 - exp2(_1716 * _1699))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1709;
        }
        else
        {
            float _1805 = 1.0 / cbSceneParam._m0[80u].x;
            float _1806 = isnan(_1700) ? _1699 : (isnan(_1699) ? _1700 : max(_1699, _1700));
            float _1807 = isnan(_1700) ? _1699 : (isnan(_1699) ? _1700 : min(_1699, _1700));
            float _1816 = isnan(0.0) ? _1806 : (isnan(_1806) ? 0.0 : min(_1806, 0.0));
            float _1817 = isnan(0.0) ? _1807 : (isnan(_1807) ? 0.0 : min(_1807, 0.0));
            _1858 = ((abs(_1706 / _1695) * cbSceneParam._m0[80u].y) * ((((_1816 - _1817) * 2.0) - ((exp2(_1714 * (isnan(0.0) ? _1806 : (isnan(_1806) ? 0.0 : max(_1806, 0.0)))) - exp2(_1714 * (isnan(0.0) ? _1807 : (isnan(_1807) ? 0.0 : max(_1807, 0.0))))) * _1805)) - ((exp2(_1716 * _1816) - exp2(_1716 * _1817)) * _1805))) + (_1709 * cbSceneParam._m0[80u].z);
        }
        vec4 _1860 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1547, _1548, 1.0), 0.0);
        float _1869 = exp2((_1858 * (-1.44269502162933349609375)) * (1.0 - _1860.w));
        float _1870 = log2(_1869);
        float _1886 = log2(_1567);
        _1718 = (exp2(_1886 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1870 * cbSceneParam._m0[78u].x)) * _1860.x) / cbSceneParam._m0[78u].x)) + _1564;
        _1720 = (exp2(_1886 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1870 * cbSceneParam._m0[78u].y)) * _1860.y) / cbSceneParam._m0[78u].y)) + _1565;
        _1722 = (exp2(_1886 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1870 * cbSceneParam._m0[78u].z)) * _1860.z) / cbSceneParam._m0[78u].z)) + _1566;
        _1724 = _1869 * _1567;
    }
    else
    {
        _1718 = _1564;
        _1720 = _1565;
        _1722 = _1566;
        _1724 = _1567;
    }
    float _1735 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1736 = _1735 == 3.0;
    float _1738 = log2(_1724);
    float _1745 = exp2(_1738 * cbSceneParam._m0[78u].x) * (((((((cbLight._m0[_1460].x * _1438) * _1496) * _1504) * _1506) + ((isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0))) * _941)) * cbPerFrame._m0[3u].x) + (_1530 * (_368 - (_368 * _214))));
    float _1746 = exp2(_1738 * cbSceneParam._m0[78u].y) * (((((((cbLight._m0[_1460].y * _1440) * _1496) * _1504) * _1506) + ((isnan(0.0) ? _1173 : (isnan(_1173) ? 0.0 : max(_1173, 0.0))) * _941)) * cbPerFrame._m0[3u].x) + (_1530 * (_369 - (_369 * _214))));
    float _1747 = exp2(_1738 * cbSceneParam._m0[78u].z) * (((((((cbLight._m0[_1460].z * _1442) * _1496) * _1504) * _1506) + ((isnan(0.0) ? _1176 : (isnan(_1176) ? 0.0 : max(_1176, 0.0))) * _941)) * cbPerFrame._m0[3u].x) + (_1530 * (_370 - (_370 * _214))));
    float _1756 = (_1735 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1756 * (_1736 ? _1745 : (_1745 + (cbSceneParam._m0[72u].w * _1718)));
    SV_Target.y = _1756 * (_1736 ? _1746 : (_1746 + (cbSceneParam._m0[72u].w * _1720)));
    SV_Target.z = _1756 * (_1736 ? _1747 : (_1747 + (cbSceneParam._m0[72u].w * _1722)));
    SV_Target.w = _1542;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _1542;
}


