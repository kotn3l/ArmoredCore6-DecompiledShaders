#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Blackhole_001_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Blackhole_001_snp_0_Texture2D_3;
layout(set = 0, binding = 2) uniform texture2D M_Blackhole_001_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _700;
float _1740;
float _1741;
float _1742;
float _1743;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _166 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _167 = _166 * NORMAL.x;
    float _168 = _166 * NORMAL.y;
    float _169 = _166 * NORMAL.z;
    float _174;
    float _175;
    float _176;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _174 = (-0.0) - _167;
        _175 = (-0.0) - _168;
        _176 = (-0.0) - _169;
    }
    else
    {
        _174 = _167;
        _175 = _168;
        _176 = _169;
    }
    vec4 _193 = texture(sampler2D(M_Blackhole_001_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _196 = _193.x;
    float _202 = exp2(log2(cbMtdParam._m0[10u].z * _196) * cbMtdParam._m0[10u].w);
    float _1752 = isnan(0.0) ? _202 : (isnan(_202) ? 0.0 : max(_202, 0.0));
    float _204 = isnan(1.0) ? _1752 : (isnan(_1752) ? 1.0 : min(_1752, 1.0));
    float _213 = exp2(log2(cbMtdParam._m0[11u].x * _196) * cbMtdParam._m0[11u].y);
    float _1763 = isnan(0.0) ? _213 : (isnan(_213) ? 0.0 : max(_213, 0.0));
    float _214 = isnan(1.0) ? _1763 : (isnan(_1763) ? 1.0 : min(_1763, 1.0));
    float _230 = cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x;
    float _235 = _230 * cbMtdParam._m0[9u].w;
    float _236 = sin(_235);
    float _237 = cos(_235);
    float _238 = TEXCOORD.x + (-0.5);
    float _240 = TEXCOORD.y + (-0.5);
    vec4 _260 = texture(sampler2D(M_Blackhole_001_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * (fma(_240, (-0.0) - _236, _237 * _238) + 0.5)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (fma(_240, _237, _236 * _238) + 0.5)) + cbTextureTilingScale._m0[1u].w));
    float _277 = exp2(log2(cbMtdParam._m0[10u].y * _196) * cbMtdParam._m0[10u].x);
    float _278 = exp2(log2(cbMtdParam._m0[10u].y * _193.y) * cbMtdParam._m0[10u].x);
    float _1774 = isnan(0.0) ? _277 : (isnan(_277) ? 0.0 : max(_277, 0.0));
    float _1785 = isnan(0.0) ? _278 : (isnan(_278) ? 0.0 : max(_278, 0.0));
    float _281 = ((_260.x + (-0.5)) * cbMtdParam._m0[11u].w) * (isnan(1.0) ? _1774 : (isnan(_1774) ? 1.0 : min(_1774, 1.0)));
    float _282 = ((_260.y + (-0.5)) * cbMtdParam._m0[11u].w) * (isnan(1.0) ? _1785 : (isnan(_1785) ? 1.0 : min(_1785, 1.0)));
    float _285 = cbSceneParam._m0[86u].x * (_281 + ((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x));
    float _286 = (_282 + ((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y)) * cbSceneParam._m0[86u].y;
    float _294 = isnan(cbInstanceData._m0[8u].x) ? _285 : (isnan(_285) ? cbInstanceData._m0[8u].x : max(_285, cbInstanceData._m0[8u].x));
    float _295 = isnan(cbInstanceData._m0[8u].y) ? _286 : (isnan(_286) ? cbInstanceData._m0[8u].y : max(_286, cbInstanceData._m0[8u].y));
    vec4 _299 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _294 : (isnan(_294) ? cbInstanceData._m0[8u].z : min(_294, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _295 : (isnan(_295) ? cbInstanceData._m0[8u].w : min(_295, cbInstanceData._m0[8u].w))));
    float _308 = cbSceneParam._m0[72u].w * _299.x;
    float _309 = cbSceneParam._m0[72u].w * _299.y;
    float _310 = cbSceneParam._m0[72u].w * _299.z;
    float _319 = cbMtdParam._m0[9u].z * _230;
    float _320 = sin(_319);
    float _321 = cos(_319);
    float _322 = _238 + (cbMtdParam._m0[12u].x * _230);
    float _323 = _240 + (_230 * cbMtdParam._m0[12u].y);
    vec4 _344 = texture(sampler2D(M_Blackhole_001_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * ((_281 + 0.5) + fma(_323, (-0.0) - _320, _322 * _321))) + cbTextureTilingScale._m0[0u].z, (((_282 + 0.5) + fma(_323, _321, _322 * _320)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _360 = exp2(log2(cbMtdParam._m0[9u].x * _196) * cbMtdParam._m0[9u].y);
    float _1816 = isnan(0.0) ? _360 : (isnan(_360) ? 0.0 : max(_360, 0.0));
    float _361 = isnan(1.0) ? _1816 : (isnan(_1816) ? 1.0 : min(_1816, 1.0));
    float _368 = (_361 * ((_344.x * 28.0) - _308)) + _308;
    float _369 = (_361 * ((_344.y * 1.62963497638702392578125) - _309)) + _309;
    float _370 = (_361 * ((_344.z * 0.2912090122699737548828125) - _310)) + _310;
    float _380 = inversesqrt(dot(vec3(_174, _175, _176), vec3(_174, _175, _176)));
    float _381 = _380 * _174;
    float _382 = _380 * _175;
    float _383 = _380 * _176;
    float _1827 = isnan(0.0) ? _204 : (isnan(_204) ? 0.0 : max(_204, 0.0));
    float _384 = isnan(1.0) ? _1827 : (isnan(_1827) ? 1.0 : min(_1827, 1.0));
    float _400 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _440 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _450 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _440);
    float _451 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _440);
    float _452 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _440);
    float _456 = inversesqrt(dot(vec3(_450, _451, _452), vec3(_450, _451, _452)));
    float _457 = _450 * _456;
    float _458 = _451 * _456;
    float _459 = _452 * _456;
    vec4 _464 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _466 = _464.w;
    float _471 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _472 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _480 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_471 * cbSceneParam._m0[86u].x, _472 * cbSceneParam._m0[86u].y));
    float _483 = _480.x * TEXCOORD.z;
    float _484 = dot(vec3(_381, _382, _383), vec3(_457, _458, _459));
    float _487 = _484 * 2.0;
    float _492 = (_487 * _381) - _457;
    float _493 = (_487 * _382) - _458;
    float _494 = (_487 * _383) - _459;
    float _498 = abs(dot(vec3(_457, _458, _459), vec3(_381, _382, _383)));
    float _1838 = isnan(0.0) ? _498 : (isnan(_498) ? 0.0 : max(_498, 0.0));
    float _526 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _530 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _534 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _699;
    float _701;
    float _702;
    float _703;
    float _704;
    float _705;
    float _706;
    float _707;
    float _708;
    float _709;
    float _710;
    float _711;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _561 = fma(_534, cbModelParam._m0[26u].z, fma(_530, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _526));
        float _565 = fma(_534, cbModelParam._m0[27u].z, fma(_530, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _526));
        float _569 = fma(_534, cbModelParam._m0[28u].z, fma(_530, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _526));
        float _592 = _526 + _381;
        float _593 = _530 + _382;
        float _594 = _534 + _383;
        float _604 = fma(_594, cbModelParam._m0[26u].z, fma(_593, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _592)) - _561;
        float _605 = fma(_594, cbModelParam._m0[27u].z, fma(_593, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _592)) - _565;
        float _606 = fma(_594, cbModelParam._m0[28u].z, fma(_593, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _592)) - _569;
        float _610 = inversesqrt(dot(vec3(_604, _605, _606), vec3(_604, _605, _606)));
        float _623 = ((_610 * _604) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_561 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _624 = ((_610 * _605) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_565 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _625 = ((_610 * _606) / cbModelParam._m0[34u].z) + ((((((_569 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _628 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_623, _624, _625), 0.0);
        vec4 _635 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_623, _624, _625), 0.0);
        vec4 _642 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_623, _624, _625), 0.0);
        vec4 _649 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_623, _624, _625), 0.0);
        float _662 = exp2((_628.w + (-0.5)) * 20.0) * 2.0;
        float _672 = exp2((_635.w + (-0.5)) * 20.0) * 2.0;
        float _682 = exp2((_642.w + (-0.5)) * 20.0) * 2.0;
        float _692 = exp2((_649.w + (-0.5)) * 20.0) * 2.0;
        float _693 = _692 * (_649.x + (-0.5));
        float _694 = _692 * (_649.y + (-0.5));
        float _695 = _692 * (_649.z + (-0.5));
        _699 = _662 * (_628.z + (-0.5));
        _701 = _662 * (_628.y + (-0.5));
        _702 = _662 * (_628.x + (-0.5));
        _703 = _672 * (_635.z + (-0.5));
        _704 = _672 * (_635.y + (-0.5));
        _705 = _672 * (_635.x + (-0.5));
        _706 = _682 * (_642.z + (-0.5));
        _707 = _682 * (_642.y + (-0.5));
        _708 = _682 * (_642.x + (-0.5));
        _709 = isnan(0.0) ? _695 : (isnan(_695) ? 0.0 : max(_695, 0.0));
        _710 = isnan(0.0) ? _694 : (isnan(_694) ? 0.0 : max(_694, 0.0));
        _711 = isnan(0.0) ? _693 : (isnan(_693) ? 0.0 : max(_693, 0.0));
    }
    else
    {
        _699 = _700;
        _701 = _700;
        _702 = _700;
        _703 = _700;
        _704 = _700;
        _705 = _700;
        _706 = _700;
        _707 = _700;
        _708 = _700;
        _709 = _700;
        _710 = _700;
        _711 = _700;
    }
    float _873;
    float _874;
    float _875;
    float _876;
    float _877;
    float _878;
    float _879;
    float _880;
    float _881;
    float _882;
    float _883;
    float _884;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _737 = fma(_534, cbModelParam._m0[30u].z, fma(_530, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _526));
        float _741 = fma(_534, cbModelParam._m0[31u].z, fma(_530, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _526));
        float _745 = fma(_534, cbModelParam._m0[32u].z, fma(_530, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _526));
        float _768 = _526 + _381;
        float _769 = _530 + _382;
        float _770 = _534 + _383;
        float _780 = fma(_770, cbModelParam._m0[30u].z, fma(_769, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _768)) - _737;
        float _781 = fma(_770, cbModelParam._m0[31u].z, fma(_769, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _768)) - _741;
        float _782 = fma(_770, cbModelParam._m0[32u].z, fma(_769, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _768)) - _745;
        float _786 = inversesqrt(dot(vec3(_780, _781, _782), vec3(_780, _781, _782)));
        float _799 = ((_786 * _780) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_737 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _800 = ((_786 * _781) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_741 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _801 = ((_786 * _782) / cbModelParam._m0[35u].z) + ((((((_745 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _803 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_799, _800, _801), 0.0);
        vec4 _810 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_799, _800, _801), 0.0);
        vec4 _817 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_799, _800, _801), 0.0);
        vec4 _824 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_799, _800, _801), 0.0);
        float _836 = exp2((_803.w + (-0.5)) * 20.0) * 2.0;
        float _846 = exp2((_810.w + (-0.5)) * 20.0) * 2.0;
        float _856 = exp2((_817.w + (-0.5)) * 20.0) * 2.0;
        float _866 = exp2((_824.w + (-0.5)) * 20.0) * 2.0;
        float _867 = _866 * (_824.x + (-0.5));
        float _868 = _866 * (_824.y + (-0.5));
        float _869 = _866 * (_824.z + (-0.5));
        _873 = _836 * (_803.z + (-0.5));
        _874 = _836 * (_803.y + (-0.5));
        _875 = _836 * (_803.x + (-0.5));
        _876 = _846 * (_810.z + (-0.5));
        _877 = _846 * (_810.y + (-0.5));
        _878 = _846 * (_810.x + (-0.5));
        _879 = _856 * (_817.z + (-0.5));
        _880 = _856 * (_817.y + (-0.5));
        _881 = _856 * (_817.x + (-0.5));
        _882 = isnan(0.0) ? _869 : (isnan(_869) ? 0.0 : max(_869, 0.0));
        _883 = isnan(0.0) ? _868 : (isnan(_868) ? 0.0 : max(_868, 0.0));
        _884 = isnan(0.0) ? _867 : (isnan(_867) ? 0.0 : max(_867, 0.0));
    }
    else
    {
        _873 = _700;
        _874 = _700;
        _875 = _700;
        _876 = _700;
        _877 = _700;
        _878 = _700;
        _879 = _700;
        _880 = _700;
        _881 = _700;
        _882 = _700;
        _883 = _700;
        _884 = _700;
    }
    float _899 = _492 * 0.5;
    float _900 = _493 * 0.5;
    float _901 = _494 * 0.5;
    float _902 = dot(vec4(_899, _900, _901, 1.0), vec4(_875, _878, _881, _884));
    float _905 = dot(vec4(_899, _900, _901, 1.0), vec4(_874, _877, _880, _883));
    float _908 = dot(vec4(_899, _900, _901, 1.0), vec4(_873, _876, _879, _882));
    float _943;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _915 = dot(vec4(_899, _900, _901, 1.0), vec4(_699, _703, _706, _709));
        float _919 = dot(vec4(_899, _900, _901, 1.0), vec4(_701, _704, _707, _710));
        float _923 = dot(vec4(_899, _900, _901, 1.0), vec4(_702, _705, _708, _711));
        float _930 = dot(vec4(cbModelParam._m0[39u]), vec4(_899, _900, _901, 1.0));
        _943 = dot(vec3(isnan(0.0) ? _923 : (isnan(_923) ? 0.0 : max(_923, 0.0)), isnan(0.0) ? _919 : (isnan(_919) ? 0.0 : max(_919, 0.0)), isnan(0.0) ? _915 : (isnan(_915) ? 0.0 : max(_915, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_930) ? 0.0 : (isnan(0.0) ? _930 : max(0.0, _930))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _943 = 1.0;
    }
    float _954;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _945 = dot(vec4(cbModelParam._m0[40u]), vec4(_899, _900, _901, 1.0));
        _954 = dot(vec3(isnan(0.0) ? _902 : (isnan(_902) ? 0.0 : max(_902, 0.0)), isnan(0.0) ? _905 : (isnan(_905) ? 0.0 : max(_905, 0.0)), isnan(0.0) ? _908 : (isnan(_908) ? 0.0 : max(_908, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_945) ? 0.0 : (isnan(0.0) ? _945 : max(0.0, _945))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _954 = 1.0;
    }
    float _958 = (_954 * cbModelParam._m0[1u].x) + (_943 * (1.0 - cbModelParam._m0[1u].x));
    float _964 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1047;
    float _1049;
    float _1051;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1014 = fma(_534, cbModelParam._m0[13u].z, fma(_530, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _526)) + cbModelParam._m0[13u].w;
        float _1018 = fma(_534, cbModelParam._m0[14u].z, fma(_530, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _526)) + cbModelParam._m0[14u].w;
        float _1022 = fma(_534, cbModelParam._m0[15u].z, fma(_530, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _526)) + cbModelParam._m0[15u].w;
        float _1025 = fma(_494, cbModelParam._m0[13u].z, fma(_493, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _492));
        float _1028 = fma(_494, cbModelParam._m0[14u].z, fma(_493, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _492));
        float _1031 = fma(_494, cbModelParam._m0[15u].z, fma(_493, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _492));
        float _1057;
        if (_1025 > 0.0)
        {
            _1057 = abs((1.0 - _1014) / _1025);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1025 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1014 + 1.0) / _1025);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1057 = frontier_phi_16_14_ladder;
        }
        float _1329;
        if (_1028 > 0.0)
        {
            _1329 = abs((1.0 - _1018) / _1028);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1028 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1018 + 1.0) / _1028);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1329 = frontier_phi_25_21_ladder;
        }
        float _1504;
        if (_1031 > 0.0)
        {
            _1504 = abs((1.0 - _1022) / _1031);
        }
        else
        {
            float frontier_phi_39_32_ladder;
            if (_1031 < 0.0)
            {
                frontier_phi_39_32_ladder = abs((_1022 + 1.0) / _1031);
            }
            else
            {
                frontier_phi_39_32_ladder = 5000.0;
            }
            _1504 = frontier_phi_39_32_ladder;
        }
        float _1506 = isnan(_1329) ? _1057 : (isnan(_1057) ? _1329 : min(_1057, _1329));
        float _1507 = isnan(_1504) ? _1506 : (isnan(_1506) ? _1504 : min(_1506, _1504));
        float _1511 = (_1507 * _1025) + _1014;
        float _1512 = (_1507 * _1028) + _1018;
        float _1513 = (_1507 * _1031) + _1022;
        float _1514 = _1507 * 9.9999997473787516355514526367188e-05;
        float _1515 = (-1.0) - _1514;
        float _1517 = _1514 + 1.0;
        float frontier_phi_15_39_ladder;
        float frontier_phi_15_39_ladder_1;
        float frontier_phi_15_39_ladder_2;
        if ((_1513 > _1517) || ((_1513 < _1515) || ((_1512 > _1517) || ((_1512 < _1515) || ((_1511 < _1515) || (_1511 > _1517))))))
        {
            frontier_phi_15_39_ladder = 0.0;
            frontier_phi_15_39_ladder_1 = 0.0;
            frontier_phi_15_39_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1595 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1513, cbModelParam._m0[9u].z, fma(_1512, cbModelParam._m0[9u].y, _1511 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1513, cbModelParam._m0[10u].z, fma(_1512, cbModelParam._m0[10u].y, _1511 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1513, cbModelParam._m0[11u].z, fma(_1512, cbModelParam._m0[11u].y, _1511 * cbModelParam._m0[11u].x))), _964);
            frontier_phi_15_39_ladder = _1595.z * cbModelParam._m0[1u].y;
            frontier_phi_15_39_ladder_1 = _1595.y * cbModelParam._m0[1u].y;
            frontier_phi_15_39_ladder_2 = _1595.x * cbModelParam._m0[1u].y;
        }
        _1047 = frontier_phi_15_39_ladder_2;
        _1049 = frontier_phi_15_39_ladder_1;
        _1051 = frontier_phi_15_39_ladder;
    }
    else
    {
        vec4 _1035 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_492, _493, _494), _964);
        _1047 = _1035.x * cbModelParam._m0[1u].y;
        _1049 = _1035.y * cbModelParam._m0[1u].y;
        _1051 = _1035.z * cbModelParam._m0[1u].y;
    }
    float _1054 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1146;
    float _1148;
    float _1150;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1110 = fma(_534, cbModelParam._m0[21u].z, fma(_530, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _526)) + cbModelParam._m0[21u].w;
        float _1114 = fma(_534, cbModelParam._m0[22u].z, fma(_530, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _526)) + cbModelParam._m0[22u].w;
        float _1118 = fma(_534, cbModelParam._m0[23u].z, fma(_530, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _526)) + cbModelParam._m0[23u].w;
        float _1121 = fma(_494, cbModelParam._m0[21u].z, fma(_493, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _492));
        float _1124 = fma(_494, cbModelParam._m0[22u].z, fma(_493, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _492));
        float _1127 = fma(_494, cbModelParam._m0[23u].z, fma(_493, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _492));
        float _1334;
        if (_1121 > 0.0)
        {
            _1334 = abs((1.0 - _1110) / _1121);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1121 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1110 + 1.0) / _1121);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1334 = frontier_phi_27_23_ladder;
        }
        float _1530;
        if (_1124 > 0.0)
        {
            _1530 = abs((1.0 - _1114) / _1124);
        }
        else
        {
            float frontier_phi_41_34_ladder;
            if (_1124 < 0.0)
            {
                frontier_phi_41_34_ladder = abs((_1114 + 1.0) / _1124);
            }
            else
            {
                frontier_phi_41_34_ladder = 5000.0;
            }
            _1530 = frontier_phi_41_34_ladder;
        }
        float _1615;
        if (_1127 > 0.0)
        {
            _1615 = abs((1.0 - _1118) / _1127);
        }
        else
        {
            float frontier_phi_52_48_ladder;
            if (_1127 < 0.0)
            {
                frontier_phi_52_48_ladder = abs((_1118 + 1.0) / _1127);
            }
            else
            {
                frontier_phi_52_48_ladder = 5000.0;
            }
            _1615 = frontier_phi_52_48_ladder;
        }
        float _1617 = isnan(_1530) ? _1334 : (isnan(_1334) ? _1530 : min(_1334, _1530));
        float _1618 = isnan(_1615) ? _1617 : (isnan(_1617) ? _1615 : min(_1617, _1615));
        float _1622 = (_1618 * _1121) + _1110;
        float _1623 = (_1618 * _1124) + _1114;
        float _1624 = (_1618 * _1127) + _1118;
        float _1625 = _1618 * 9.9999997473787516355514526367188e-05;
        float _1626 = (-1.0) - _1625;
        float _1628 = _1625 + 1.0;
        float frontier_phi_24_52_ladder;
        float frontier_phi_24_52_ladder_1;
        float frontier_phi_24_52_ladder_2;
        if ((_1624 > _1628) || ((_1624 < _1626) || ((_1623 > _1628) || ((_1623 < _1626) || ((_1622 < _1626) || (_1622 > _1628))))))
        {
            frontier_phi_24_52_ladder = 0.0;
            frontier_phi_24_52_ladder_1 = 0.0;
            frontier_phi_24_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1657 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1624, cbModelParam._m0[17u].z, fma(_1623, cbModelParam._m0[17u].y, _1622 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1624, cbModelParam._m0[18u].z, fma(_1623, cbModelParam._m0[18u].y, _1622 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1624, cbModelParam._m0[19u].z, fma(_1623, cbModelParam._m0[19u].y, _1622 * cbModelParam._m0[19u].x))), _1054);
            frontier_phi_24_52_ladder = _1657.z * cbModelParam._m0[1u].z;
            frontier_phi_24_52_ladder_1 = _1657.y * cbModelParam._m0[1u].z;
            frontier_phi_24_52_ladder_2 = _1657.x * cbModelParam._m0[1u].z;
        }
        _1146 = frontier_phi_24_52_ladder_2;
        _1148 = frontier_phi_24_52_ladder_1;
        _1150 = frontier_phi_24_52_ladder;
    }
    else
    {
        vec4 _1130 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_492, _493, _494), _1054);
        _1146 = _1130.x * cbModelParam._m0[1u].z;
        _1148 = _1130.y * cbModelParam._m0[1u].z;
        _1150 = _1130.z * cbModelParam._m0[1u].z;
    }
    float _1162 = _483 * 0.01200000010430812835693359375;
    float _1164 = _1162 * ((cbModelParam._m0[1u].w * (_1146 - _1047)) + _1047);
    float _1165 = _1162 * ((cbModelParam._m0[1u].w * (_1148 - _1049)) + _1049);
    float _1166 = _1162 * ((cbModelParam._m0[1u].w * (_1150 - _1051)) + _1051);
    float _1187 = fma(_1166, cbSceneParam._m0[89u].z, fma(_1165, cbSceneParam._m0[89u].y, _1164 * cbSceneParam._m0[89u].x));
    float _1190 = fma(_1166, cbSceneParam._m0[90u].z, fma(_1165, cbSceneParam._m0[90u].y, _1164 * cbSceneParam._m0[90u].x));
    float _1193 = fma(_1166, cbSceneParam._m0[91u].z, fma(_1165, cbSceneParam._m0[91u].y, _1164 * cbSceneParam._m0[91u].x));
    uint _1200 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1207 = floatBitsToUint(cbInstanceData._m0[_1200 + 5u]).x * 14u;
    float _1215 = (cbLight._m0[_1207 + 13u].x * (_483 + (-1.0))) + 1.0;
    uint _1216 = _1207 + 8u;
    float _1227 = cbLight._m0[_1207].x + _457;
    float _1228 = cbLight._m0[_1207].y + _458;
    float _1229 = cbLight._m0[_1207].z + _459;
    float _1233 = inversesqrt(dot(vec3(_1227, _1228, _1229), vec3(_1227, _1228, _1229)));
    float _1237 = dot(vec3(_381, _382, _383), vec3(cbLight._m0[_1207].xyz));
    float _1964 = isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0));
    float _1240 = isnan(1.0) ? _1964 : (isnan(_1964) ? 1.0 : min(_1964, 1.0));
    float _1975 = isnan(0.0) ? _484 : (isnan(_484) ? 0.0 : max(_484, 0.0));
    float _1242 = dot(vec3(cbLight._m0[_1207].xyz), vec3(_1227 * _1233, _1228 * _1233, _1229 * _1233));
    float _1986 = isnan(0.0) ? _1242 : (isnan(_1242) ? 0.0 : max(_1242, 0.0));
    float _1252 = (exp2(log2(1.0 - (isnan(1.0) ? _1986 : (isnan(_1986) ? 1.0 : min(_1986, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1258 = (0.5 / ((_1240 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1975 : (isnan(_1975) ? 1.0 : min(_1975, 1.0))))) * _1240;
    float _1997 = isnan(0.0) ? _1258 : (isnan(_1258) ? 0.0 : max(_1258, 0.0));
    float _1260 = (isnan(1.0) ? _1997 : (isnan(_1997) ? 1.0 : min(_1997, 1.0))) * 0.31831014156341552734375;
    float _1262 = isnan(1.0) ? _1215 : (isnan(_1215) ? 1.0 : min(_1215, 1.0));
    float _2013 = isnan(0.0) ? _384 : (isnan(_384) ? 0.0 : max(_384, 0.0));
    float _1283 = 0.959999978542327880859375 - (exp2(log2(1.0 - (isnan(1.0) ? _1838 : (isnan(_1838) ? 1.0 : min(_1838, 1.0)))) * 5.0) * 0.959999978542327880859375);
    float _1287 = (cbPerFrame._m0[3u].x * ((((_1252 * cbLight._m0[_1216].x) * _1260) * _1262) + ((isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0))) * _958))) + (_1283 * (_368 - (_368 * _214)));
    float _1288 = (cbPerFrame._m0[3u].x * ((((_1252 * cbLight._m0[_1216].y) * _1260) * _1262) + ((isnan(0.0) ? _1190 : (isnan(_1190) ? 0.0 : max(_1190, 0.0))) * _958))) + (_1283 * (_369 - (_369 * _214)));
    float _1289 = (cbPerFrame._m0[3u].x * ((((_1252 * cbLight._m0[_1216].z) * _1260) * _1262) + ((isnan(0.0) ? _1193 : (isnan(_1193) ? 0.0 : max(_1193, 0.0))) * _958))) + (_1283 * (_370 - (_370 * _214)));
    float _1295 = cbInstanceData._m0[_1200 + 6u].w * (isnan(1.0) ? _2013 : (isnan(_2013) ? 1.0 : min(_2013, 1.0)));
    float _1300 = _471 / cbSceneParam._m0[86u].x;
    float _1301 = _472 / cbSceneParam._m0[86u].y;
    vec4 _1315 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1300, _1301, (log2((isnan(cbSceneParam._m0[77u].w) ? _400 : (isnan(_400) ? cbSceneParam._m0[77u].w : min(_400, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1317 = _1315.x;
    float _1318 = _1315.y;
    float _1319 = _1315.z;
    float _1320 = _1315.w;
    float _1381;
    float _1383;
    float _1385;
    float _1387;
    if (_400 > cbSceneParam._m0[78u].w)
    {
        float _1343 = isnan(_400) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _400 : min(cbSceneParam._m0[80u].w, _400));
        float _1344 = _1343 / _400;
        float _1355 = _1344 * _450;
        float _1356 = _451 * _1344;
        float _1357 = (-0.0) - _1356;
        float _1358 = _1344 * _452;
        float _1360 = (cbSceneParam._m0[77u].w * _1357) / _1343;
        float _1361 = _1360 + cbSceneParam._m0[79u].w;
        float _1362 = cbSceneParam._m0[79u].w - _1356;
        float _1368 = sqrt(((_1355 * _1355) + (_1356 * _1356)) + (_1358 * _1358));
        float _1371 = (1.0 - (cbSceneParam._m0[77u].w / _1343)) * _1368;
        float _1377 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1379 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1535;
        if (abs((_1357 - _1360) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1535 = ((((_1361 > 0.0) ? exp2(_1377 * _1361) : (2.0 - exp2(_1379 * _1361))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1371;
        }
        else
        {
            float _1460 = 1.0 / cbSceneParam._m0[80u].x;
            float _1461 = isnan(_1362) ? _1361 : (isnan(_1361) ? _1362 : max(_1361, _1362));
            float _1462 = isnan(_1362) ? _1361 : (isnan(_1361) ? _1362 : min(_1361, _1362));
            float _1471 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : min(_1461, 0.0));
            float _1472 = isnan(0.0) ? _1462 : (isnan(_1462) ? 0.0 : min(_1462, 0.0));
            _1535 = ((abs(_1368 / _1357) * cbSceneParam._m0[80u].y) * ((((_1471 - _1472) * 2.0) - ((exp2(_1377 * (isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0)))) - exp2(_1377 * (isnan(0.0) ? _1462 : (isnan(_1462) ? 0.0 : max(_1462, 0.0))))) * _1460)) - ((exp2(_1379 * _1471) - exp2(_1379 * _1472)) * _1460))) + (_1371 * cbSceneParam._m0[80u].z);
        }
        vec4 _1537 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1300, _1301, 1.0), 0.0);
        float _1546 = exp2((_1535 * (-1.44269502162933349609375)) * (1.0 - _1537.w));
        float _1547 = log2(_1546);
        float _1563 = log2(_1320);
        _1381 = (exp2(_1563 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1547 * cbSceneParam._m0[78u].x)) * _1537.x) / cbSceneParam._m0[78u].x)) + _1317;
        _1383 = (exp2(_1563 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1547 * cbSceneParam._m0[78u].y)) * _1537.y) / cbSceneParam._m0[78u].y)) + _1318;
        _1385 = (exp2(_1563 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1547 * cbSceneParam._m0[78u].z)) * _1537.z) / cbSceneParam._m0[78u].z)) + _1319;
        _1387 = _1546 * _1320;
    }
    else
    {
        _1381 = _1317;
        _1383 = _1318;
        _1385 = _1319;
        _1387 = _1320;
    }
    bool _1573;
    vec4 _1396;
    vec4 _1419;
    float _1421;
    float _1425;
    float _1426;
    float _1427;
    float _1428;
    bool _1439;
    for (;;)
    {
        _1396 = cbMatDynParam._m0[0u];
        float _1398 = roundEven(_1396.y);
        bool _1399 = _1398 == 3.0;
        float _1401 = log2(_1387);
        float _1408 = exp2(_1401 * cbSceneParam._m0[78u].x) * _1287;
        float _1409 = exp2(_1401 * cbSceneParam._m0[78u].y) * _1288;
        float _1410 = exp2(_1401 * cbSceneParam._m0[78u].z) * _1289;
        float _1417 = _466 + (-0.5);
        _1419 = cbMtdParam._m0[1u];
        _1421 = _1419.y * _1417;
        float _1424 = (_1398 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1425 = _1424 * (_1399 ? _1408 : (_1408 + (cbSceneParam._m0[72u].w * _1381)));
        _1426 = _1424 * (_1399 ? _1409 : (_1409 + (cbSceneParam._m0[72u].w * _1383)));
        _1427 = _1424 * (_1399 ? _1410 : (_1410 + (cbSceneParam._m0[72u].w * _1385)));
        _1428 = _1417 * 0.999000012874603271484375;
        _1439 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1439)
        {
            if ((cbInstanceData._m0[_1200 + 7u].x + _1428) < 0.5)
            {
                _1573 = true;
                break;
            }
        }
        uint _1496 = (_1200 + 9u) + uint(_1396.w);
        if ((cbInstanceData._m0[_1496].w < 1.0) && ((cbInstanceData._m0[_1496].w + _1428) < 0.5))
        {
            _1573 = true;
            break;
        }
        if ((_1421 + 1.0) < _1419.x)
        {
            _1573 = true;
            break;
        }
        _1573 = false;
        break;
    }
    float _1606;
    if (_1573)
    {
        discard_state = true;
        _1606 = 0.0;
    }
    else
    {
        _1606 = _1295;
    }
    SV_Target.x = _1425;
    SV_Target.y = _1426;
    SV_Target.z = _1427;
    SV_Target.w = _1606;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _1295;
    discard_exit();
}


