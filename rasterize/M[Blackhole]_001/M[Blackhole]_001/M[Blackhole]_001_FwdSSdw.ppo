#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Blackhole_001_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Blackhole_001_snp_0_Texture2D_3;
layout(set = 0, binding = 2) uniform texture2D M_Blackhole_001_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _681;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _164 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _165 = _164 * NORMAL.x;
    float _166 = _164 * NORMAL.y;
    float _167 = _164 * NORMAL.z;
    float _172;
    float _173;
    float _174;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _172 = (-0.0) - _165;
        _173 = (-0.0) - _166;
        _174 = (-0.0) - _167;
    }
    else
    {
        _172 = _165;
        _173 = _166;
        _174 = _167;
    }
    vec4 _191 = texture(sampler2D(M_Blackhole_001_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _194 = _191.x;
    float _200 = exp2(log2(cbMtdParam._m0[10u].z * _194) * cbMtdParam._m0[10u].w);
    float _1690 = isnan(0.0) ? _200 : (isnan(_200) ? 0.0 : max(_200, 0.0));
    float _202 = isnan(1.0) ? _1690 : (isnan(_1690) ? 1.0 : min(_1690, 1.0));
    float _211 = exp2(log2(cbMtdParam._m0[11u].x * _194) * cbMtdParam._m0[11u].y);
    float _1701 = isnan(0.0) ? _211 : (isnan(_211) ? 0.0 : max(_211, 0.0));
    float _212 = isnan(1.0) ? _1701 : (isnan(_1701) ? 1.0 : min(_1701, 1.0));
    float _218 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _219 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _228 = cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x;
    float _233 = _228 * cbMtdParam._m0[9u].w;
    float _234 = sin(_233);
    float _235 = cos(_233);
    float _236 = TEXCOORD.x + (-0.5);
    float _238 = TEXCOORD.y + (-0.5);
    vec4 _258 = texture(sampler2D(M_Blackhole_001_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * (fma(_238, (-0.0) - _234, _235 * _236) + 0.5)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (fma(_238, _235, _234 * _236) + 0.5)) + cbTextureTilingScale._m0[1u].w));
    float _275 = exp2(log2(cbMtdParam._m0[10u].y * _194) * cbMtdParam._m0[10u].x);
    float _276 = exp2(log2(cbMtdParam._m0[10u].y * _191.y) * cbMtdParam._m0[10u].x);
    float _1712 = isnan(0.0) ? _275 : (isnan(_275) ? 0.0 : max(_275, 0.0));
    float _1723 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
    float _279 = ((_258.x + (-0.5)) * cbMtdParam._m0[11u].w) * (isnan(1.0) ? _1712 : (isnan(_1712) ? 1.0 : min(_1712, 1.0)));
    float _280 = ((_258.y + (-0.5)) * cbMtdParam._m0[11u].w) * (isnan(1.0) ? _1723 : (isnan(_1723) ? 1.0 : min(_1723, 1.0)));
    float _283 = cbSceneParam._m0[86u].x * (_279 + (_218 / cbSceneParam._m0[86u].x));
    float _284 = (_280 + (_219 / cbSceneParam._m0[86u].y)) * cbSceneParam._m0[86u].y;
    float _292 = isnan(cbInstanceData._m0[8u].x) ? _283 : (isnan(_283) ? cbInstanceData._m0[8u].x : max(_283, cbInstanceData._m0[8u].x));
    float _293 = isnan(cbInstanceData._m0[8u].y) ? _284 : (isnan(_284) ? cbInstanceData._m0[8u].y : max(_284, cbInstanceData._m0[8u].y));
    vec4 _297 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _292 : (isnan(_292) ? cbInstanceData._m0[8u].z : min(_292, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _293 : (isnan(_293) ? cbInstanceData._m0[8u].w : min(_293, cbInstanceData._m0[8u].w))));
    float _306 = cbSceneParam._m0[72u].w * _297.x;
    float _307 = cbSceneParam._m0[72u].w * _297.y;
    float _308 = cbSceneParam._m0[72u].w * _297.z;
    float _317 = cbMtdParam._m0[9u].z * _228;
    float _318 = sin(_317);
    float _319 = cos(_317);
    float _320 = _236 + (cbMtdParam._m0[12u].x * _228);
    float _321 = _238 + (_228 * cbMtdParam._m0[12u].y);
    vec4 _342 = texture(sampler2D(M_Blackhole_001_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * ((_279 + 0.5) + fma(_321, (-0.0) - _318, _320 * _319))) + cbTextureTilingScale._m0[0u].z, (((_280 + 0.5) + fma(_321, _319, _320 * _318)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _358 = exp2(log2(cbMtdParam._m0[9u].x * _194) * cbMtdParam._m0[9u].y);
    float _1754 = isnan(0.0) ? _358 : (isnan(_358) ? 0.0 : max(_358, 0.0));
    float _359 = isnan(1.0) ? _1754 : (isnan(_1754) ? 1.0 : min(_1754, 1.0));
    float _366 = (_359 * ((_342.x * 28.0) - _306)) + _306;
    float _367 = (_359 * ((_342.y * 1.62963497638702392578125) - _307)) + _307;
    float _368 = (_359 * ((_342.z * 0.2912090122699737548828125) - _308)) + _308;
    float _378 = inversesqrt(dot(vec3(_172, _173, _174), vec3(_172, _173, _174)));
    float _379 = _378 * _172;
    float _380 = _378 * _173;
    float _381 = _378 * _174;
    float _1765 = isnan(0.0) ? _202 : (isnan(_202) ? 0.0 : max(_202, 0.0));
    float _382 = isnan(1.0) ? _1765 : (isnan(_1765) ? 1.0 : min(_1765, 1.0));
    float _398 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _438 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _448 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _438);
    float _449 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _438);
    float _450 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _438);
    float _454 = inversesqrt(dot(vec3(_448, _449, _450), vec3(_448, _449, _450)));
    float _455 = _448 * _454;
    float _456 = _449 * _454;
    float _457 = _450 * _454;
    vec4 _461 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_218 * cbSceneParam._m0[86u].x, _219 * cbSceneParam._m0[86u].y));
    float _464 = _461.x * TEXCOORD.z;
    float _465 = dot(vec3(_379, _380, _381), vec3(_455, _456, _457));
    float _468 = _465 * 2.0;
    float _473 = (_468 * _379) - _455;
    float _474 = (_468 * _380) - _456;
    float _475 = (_468 * _381) - _457;
    float _479 = abs(dot(vec3(_455, _456, _457), vec3(_379, _380, _381)));
    float _1776 = isnan(0.0) ? _479 : (isnan(_479) ? 0.0 : max(_479, 0.0));
    float _507 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _511 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _515 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _680;
    float _682;
    float _683;
    float _684;
    float _685;
    float _686;
    float _687;
    float _688;
    float _689;
    float _690;
    float _691;
    float _692;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _542 = fma(_515, cbModelParam._m0[26u].z, fma(_511, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _507));
        float _546 = fma(_515, cbModelParam._m0[27u].z, fma(_511, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _507));
        float _550 = fma(_515, cbModelParam._m0[28u].z, fma(_511, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _507));
        float _573 = _507 + _379;
        float _574 = _511 + _380;
        float _575 = _515 + _381;
        float _585 = fma(_575, cbModelParam._m0[26u].z, fma(_574, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _573)) - _542;
        float _586 = fma(_575, cbModelParam._m0[27u].z, fma(_574, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _573)) - _546;
        float _587 = fma(_575, cbModelParam._m0[28u].z, fma(_574, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _573)) - _550;
        float _591 = inversesqrt(dot(vec3(_585, _586, _587), vec3(_585, _586, _587)));
        float _604 = ((_591 * _585) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_542 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _605 = ((_591 * _586) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_546 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _606 = ((_591 * _587) / cbModelParam._m0[34u].z) + ((((((_550 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _609 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_604, _605, _606), 0.0);
        vec4 _616 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_604, _605, _606), 0.0);
        vec4 _623 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_604, _605, _606), 0.0);
        vec4 _630 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_604, _605, _606), 0.0);
        float _643 = exp2((_609.w + (-0.5)) * 20.0) * 2.0;
        float _653 = exp2((_616.w + (-0.5)) * 20.0) * 2.0;
        float _663 = exp2((_623.w + (-0.5)) * 20.0) * 2.0;
        float _673 = exp2((_630.w + (-0.5)) * 20.0) * 2.0;
        float _674 = _673 * (_630.x + (-0.5));
        float _675 = _673 * (_630.y + (-0.5));
        float _676 = _673 * (_630.z + (-0.5));
        _680 = _643 * (_609.z + (-0.5));
        _682 = _643 * (_609.y + (-0.5));
        _683 = _643 * (_609.x + (-0.5));
        _684 = _653 * (_616.z + (-0.5));
        _685 = _653 * (_616.y + (-0.5));
        _686 = _653 * (_616.x + (-0.5));
        _687 = _663 * (_623.z + (-0.5));
        _688 = _663 * (_623.y + (-0.5));
        _689 = _663 * (_623.x + (-0.5));
        _690 = isnan(0.0) ? _676 : (isnan(_676) ? 0.0 : max(_676, 0.0));
        _691 = isnan(0.0) ? _675 : (isnan(_675) ? 0.0 : max(_675, 0.0));
        _692 = isnan(0.0) ? _674 : (isnan(_674) ? 0.0 : max(_674, 0.0));
    }
    else
    {
        _680 = _681;
        _682 = _681;
        _683 = _681;
        _684 = _681;
        _685 = _681;
        _686 = _681;
        _687 = _681;
        _688 = _681;
        _689 = _681;
        _690 = _681;
        _691 = _681;
        _692 = _681;
    }
    float _854;
    float _855;
    float _856;
    float _857;
    float _858;
    float _859;
    float _860;
    float _861;
    float _862;
    float _863;
    float _864;
    float _865;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _718 = fma(_515, cbModelParam._m0[30u].z, fma(_511, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _507));
        float _722 = fma(_515, cbModelParam._m0[31u].z, fma(_511, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _507));
        float _726 = fma(_515, cbModelParam._m0[32u].z, fma(_511, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _507));
        float _749 = _507 + _379;
        float _750 = _511 + _380;
        float _751 = _515 + _381;
        float _761 = fma(_751, cbModelParam._m0[30u].z, fma(_750, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _749)) - _718;
        float _762 = fma(_751, cbModelParam._m0[31u].z, fma(_750, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _749)) - _722;
        float _763 = fma(_751, cbModelParam._m0[32u].z, fma(_750, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _749)) - _726;
        float _767 = inversesqrt(dot(vec3(_761, _762, _763), vec3(_761, _762, _763)));
        float _780 = ((_767 * _761) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_718 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _781 = ((_767 * _762) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_722 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _782 = ((_767 * _763) / cbModelParam._m0[35u].z) + ((((((_726 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _784 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_780, _781, _782), 0.0);
        vec4 _791 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_780, _781, _782), 0.0);
        vec4 _798 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_780, _781, _782), 0.0);
        vec4 _805 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_780, _781, _782), 0.0);
        float _817 = exp2((_784.w + (-0.5)) * 20.0) * 2.0;
        float _827 = exp2((_791.w + (-0.5)) * 20.0) * 2.0;
        float _837 = exp2((_798.w + (-0.5)) * 20.0) * 2.0;
        float _847 = exp2((_805.w + (-0.5)) * 20.0) * 2.0;
        float _848 = _847 * (_805.x + (-0.5));
        float _849 = _847 * (_805.y + (-0.5));
        float _850 = _847 * (_805.z + (-0.5));
        _854 = _817 * (_784.z + (-0.5));
        _855 = _817 * (_784.y + (-0.5));
        _856 = _817 * (_784.x + (-0.5));
        _857 = _827 * (_791.z + (-0.5));
        _858 = _827 * (_791.y + (-0.5));
        _859 = _827 * (_791.x + (-0.5));
        _860 = _837 * (_798.z + (-0.5));
        _861 = _837 * (_798.y + (-0.5));
        _862 = _837 * (_798.x + (-0.5));
        _863 = isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : max(_850, 0.0));
        _864 = isnan(0.0) ? _849 : (isnan(_849) ? 0.0 : max(_849, 0.0));
        _865 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
    }
    else
    {
        _854 = _681;
        _855 = _681;
        _856 = _681;
        _857 = _681;
        _858 = _681;
        _859 = _681;
        _860 = _681;
        _861 = _681;
        _862 = _681;
        _863 = _681;
        _864 = _681;
        _865 = _681;
    }
    float _880 = _473 * 0.5;
    float _881 = _474 * 0.5;
    float _882 = _475 * 0.5;
    float _883 = dot(vec4(_880, _881, _882, 1.0), vec4(_856, _859, _862, _865));
    float _886 = dot(vec4(_880, _881, _882, 1.0), vec4(_855, _858, _861, _864));
    float _889 = dot(vec4(_880, _881, _882, 1.0), vec4(_854, _857, _860, _863));
    float _924;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _896 = dot(vec4(_880, _881, _882, 1.0), vec4(_680, _684, _687, _690));
        float _900 = dot(vec4(_880, _881, _882, 1.0), vec4(_682, _685, _688, _691));
        float _904 = dot(vec4(_880, _881, _882, 1.0), vec4(_683, _686, _689, _692));
        float _911 = dot(vec4(cbModelParam._m0[39u]), vec4(_880, _881, _882, 1.0));
        _924 = dot(vec3(isnan(0.0) ? _904 : (isnan(_904) ? 0.0 : max(_904, 0.0)), isnan(0.0) ? _900 : (isnan(_900) ? 0.0 : max(_900, 0.0)), isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_911) ? 0.0 : (isnan(0.0) ? _911 : max(0.0, _911))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _924 = 1.0;
    }
    float _935;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _926 = dot(vec4(cbModelParam._m0[40u]), vec4(_880, _881, _882, 1.0));
        _935 = dot(vec3(isnan(0.0) ? _883 : (isnan(_883) ? 0.0 : max(_883, 0.0)), isnan(0.0) ? _886 : (isnan(_886) ? 0.0 : max(_886, 0.0)), isnan(0.0) ? _889 : (isnan(_889) ? 0.0 : max(_889, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_926) ? 0.0 : (isnan(0.0) ? _926 : max(0.0, _926))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _935 = 1.0;
    }
    float _939 = (_935 * cbModelParam._m0[1u].x) + (_924 * (1.0 - cbModelParam._m0[1u].x));
    float _945 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1028;
    float _1030;
    float _1032;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _995 = fma(_515, cbModelParam._m0[13u].z, fma(_511, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _507)) + cbModelParam._m0[13u].w;
        float _999 = fma(_515, cbModelParam._m0[14u].z, fma(_511, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _507)) + cbModelParam._m0[14u].w;
        float _1003 = fma(_515, cbModelParam._m0[15u].z, fma(_511, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _507)) + cbModelParam._m0[15u].w;
        float _1006 = fma(_475, cbModelParam._m0[13u].z, fma(_474, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _473));
        float _1009 = fma(_475, cbModelParam._m0[14u].z, fma(_474, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _473));
        float _1012 = fma(_475, cbModelParam._m0[15u].z, fma(_474, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _473));
        float _1038;
        if (_1006 > 0.0)
        {
            _1038 = abs((1.0 - _995) / _1006);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1006 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_995 + 1.0) / _1006);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1038 = frontier_phi_16_14_ladder;
        }
        float _1331;
        if (_1009 > 0.0)
        {
            _1331 = abs((1.0 - _999) / _1009);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1009 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_999 + 1.0) / _1009);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1331 = frontier_phi_25_21_ladder;
        }
        float _1480;
        if (_1012 > 0.0)
        {
            _1480 = abs((1.0 - _1003) / _1012);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1012 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1003 + 1.0) / _1012);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1480 = frontier_phi_37_32_ladder;
        }
        float _1482 = isnan(_1331) ? _1038 : (isnan(_1038) ? _1331 : min(_1038, _1331));
        float _1483 = isnan(_1480) ? _1482 : (isnan(_1482) ? _1480 : min(_1482, _1480));
        float _1487 = (_1483 * _1006) + _995;
        float _1488 = (_1483 * _1009) + _999;
        float _1489 = (_1483 * _1012) + _1003;
        float _1490 = _1483 * 9.9999997473787516355514526367188e-05;
        float _1491 = (-1.0) - _1490;
        float _1493 = _1490 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_1489 > _1493) || ((_1489 < _1491) || ((_1488 > _1493) || ((_1488 < _1491) || ((_1487 < _1491) || (_1487 > _1493))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1565 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1489, cbModelParam._m0[9u].z, fma(_1488, cbModelParam._m0[9u].y, _1487 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1489, cbModelParam._m0[10u].z, fma(_1488, cbModelParam._m0[10u].y, _1487 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1489, cbModelParam._m0[11u].z, fma(_1488, cbModelParam._m0[11u].y, _1487 * cbModelParam._m0[11u].x))), _945);
            frontier_phi_15_37_ladder = _1565.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _1565.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _1565.x * cbModelParam._m0[1u].y;
        }
        _1028 = frontier_phi_15_37_ladder_2;
        _1030 = frontier_phi_15_37_ladder_1;
        _1032 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1016 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_473, _474, _475), _945);
        _1028 = _1016.x * cbModelParam._m0[1u].y;
        _1030 = _1016.y * cbModelParam._m0[1u].y;
        _1032 = _1016.z * cbModelParam._m0[1u].y;
    }
    float _1035 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1127;
    float _1129;
    float _1131;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1091 = fma(_515, cbModelParam._m0[21u].z, fma(_511, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _507)) + cbModelParam._m0[21u].w;
        float _1095 = fma(_515, cbModelParam._m0[22u].z, fma(_511, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _507)) + cbModelParam._m0[22u].w;
        float _1099 = fma(_515, cbModelParam._m0[23u].z, fma(_511, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _507)) + cbModelParam._m0[23u].w;
        float _1102 = fma(_475, cbModelParam._m0[21u].z, fma(_474, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _473));
        float _1105 = fma(_475, cbModelParam._m0[22u].z, fma(_474, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _473));
        float _1108 = fma(_475, cbModelParam._m0[23u].z, fma(_474, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _473));
        float _1336;
        if (_1102 > 0.0)
        {
            _1336 = abs((1.0 - _1091) / _1102);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1102 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1091 + 1.0) / _1102);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1336 = frontier_phi_27_23_ladder;
        }
        float _1506;
        if (_1105 > 0.0)
        {
            _1506 = abs((1.0 - _1095) / _1105);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1105 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1095 + 1.0) / _1105);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _1506 = frontier_phi_39_34_ladder;
        }
        float _1574;
        if (_1108 > 0.0)
        {
            _1574 = abs((1.0 - _1099) / _1108);
        }
        else
        {
            float frontier_phi_45_44_ladder;
            if (_1108 < 0.0)
            {
                frontier_phi_45_44_ladder = abs((_1099 + 1.0) / _1108);
            }
            else
            {
                frontier_phi_45_44_ladder = 5000.0;
            }
            _1574 = frontier_phi_45_44_ladder;
        }
        float _1576 = isnan(_1506) ? _1336 : (isnan(_1336) ? _1506 : min(_1336, _1506));
        float _1577 = isnan(_1574) ? _1576 : (isnan(_1576) ? _1574 : min(_1576, _1574));
        float _1581 = (_1577 * _1102) + _1091;
        float _1582 = (_1577 * _1105) + _1095;
        float _1583 = (_1577 * _1108) + _1099;
        float _1584 = _1577 * 9.9999997473787516355514526367188e-05;
        float _1585 = (-1.0) - _1584;
        float _1587 = _1584 + 1.0;
        float frontier_phi_24_45_ladder;
        float frontier_phi_24_45_ladder_1;
        float frontier_phi_24_45_ladder_2;
        if ((_1583 > _1587) || ((_1583 < _1585) || ((_1582 > _1587) || ((_1582 < _1585) || ((_1581 < _1585) || (_1581 > _1587))))))
        {
            frontier_phi_24_45_ladder = 0.0;
            frontier_phi_24_45_ladder_1 = 0.0;
            frontier_phi_24_45_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1616 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1583, cbModelParam._m0[17u].z, fma(_1582, cbModelParam._m0[17u].y, _1581 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1583, cbModelParam._m0[18u].z, fma(_1582, cbModelParam._m0[18u].y, _1581 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1583, cbModelParam._m0[19u].z, fma(_1582, cbModelParam._m0[19u].y, _1581 * cbModelParam._m0[19u].x))), _1035);
            frontier_phi_24_45_ladder = _1616.x * cbModelParam._m0[1u].z;
            frontier_phi_24_45_ladder_1 = _1616.z * cbModelParam._m0[1u].z;
            frontier_phi_24_45_ladder_2 = _1616.y * cbModelParam._m0[1u].z;
        }
        _1127 = frontier_phi_24_45_ladder;
        _1129 = frontier_phi_24_45_ladder_2;
        _1131 = frontier_phi_24_45_ladder_1;
    }
    else
    {
        vec4 _1111 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_473, _474, _475), _1035);
        _1127 = _1111.x * cbModelParam._m0[1u].z;
        _1129 = _1111.y * cbModelParam._m0[1u].z;
        _1131 = _1111.z * cbModelParam._m0[1u].z;
    }
    float _1143 = _464 * 0.01200000010430812835693359375;
    float _1145 = _1143 * ((cbModelParam._m0[1u].w * (_1127 - _1028)) + _1028);
    float _1146 = _1143 * ((cbModelParam._m0[1u].w * (_1129 - _1030)) + _1030);
    float _1147 = _1143 * ((cbModelParam._m0[1u].w * (_1131 - _1032)) + _1032);
    float _1168 = fma(_1147, cbSceneParam._m0[89u].z, fma(_1146, cbSceneParam._m0[89u].y, _1145 * cbSceneParam._m0[89u].x));
    float _1171 = fma(_1147, cbSceneParam._m0[90u].z, fma(_1146, cbSceneParam._m0[90u].y, _1145 * cbSceneParam._m0[90u].x));
    float _1174 = fma(_1147, cbSceneParam._m0[91u].z, fma(_1146, cbSceneParam._m0[91u].y, _1145 * cbSceneParam._m0[91u].x));
    vec4 _1182 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_218, _219));
    float _1184 = _1182.w;
    uint _1199 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1206 = floatBitsToUint(cbInstanceData._m0[_1199 + 5u]).x * 14u;
    float _1214 = (cbLight._m0[_1206 + 13u].x * (_464 + (-1.0))) + 1.0;
    uint _1215 = _1206 + 8u;
    float _1226 = cbLight._m0[_1206].x + _455;
    float _1227 = cbLight._m0[_1206].y + _456;
    float _1228 = cbLight._m0[_1206].z + _457;
    float _1232 = inversesqrt(dot(vec3(_1226, _1227, _1228), vec3(_1226, _1227, _1228)));
    float _1236 = dot(vec3(_379, _380, _381), vec3(cbLight._m0[_1206].xyz));
    float _1902 = isnan(0.0) ? _1236 : (isnan(_1236) ? 0.0 : max(_1236, 0.0));
    float _1239 = isnan(1.0) ? _1902 : (isnan(_1902) ? 1.0 : min(_1902, 1.0));
    float _1913 = isnan(0.0) ? _465 : (isnan(_465) ? 0.0 : max(_465, 0.0));
    float _1241 = dot(vec3(cbLight._m0[_1206].xyz), vec3(_1226 * _1232, _1227 * _1232, _1228 * _1232));
    float _1924 = isnan(0.0) ? _1241 : (isnan(_1241) ? 0.0 : max(_1241, 0.0));
    float _1251 = (exp2(log2(1.0 - (isnan(1.0) ? _1924 : (isnan(_1924) ? 1.0 : min(_1924, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1257 = (0.5 / ((_1239 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1913 : (isnan(_1913) ? 1.0 : min(_1913, 1.0))))) * _1239;
    float _1935 = isnan(0.0) ? _1257 : (isnan(_1257) ? 0.0 : max(_1257, 0.0));
    float _1259 = (isnan(1.0) ? _1935 : (isnan(_1935) ? 1.0 : min(_1935, 1.0))) * 0.31831014156341552734375;
    float _1261 = isnan(1.0) ? _1214 : (isnan(_1214) ? 1.0 : min(_1214, 1.0));
    float _1951 = isnan(0.0) ? _382 : (isnan(_382) ? 0.0 : max(_382, 0.0));
    float _1285 = 0.959999978542327880859375 - (exp2(log2(1.0 - (isnan(1.0) ? _1776 : (isnan(_1776) ? 1.0 : min(_1776, 1.0)))) * 5.0) * 0.959999978542327880859375);
    float _1297 = cbInstanceData._m0[_1199 + 6u].w * (isnan(1.0) ? _1951 : (isnan(_1951) ? 1.0 : min(_1951, 1.0)));
    float _1302 = _218 / cbSceneParam._m0[86u].x;
    float _1303 = _219 / cbSceneParam._m0[86u].y;
    vec4 _1317 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1302, _1303, (log2((isnan(cbSceneParam._m0[77u].w) ? _398 : (isnan(_398) ? cbSceneParam._m0[77u].w : min(_398, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1319 = _1317.x;
    float _1320 = _1317.y;
    float _1321 = _1317.z;
    float _1322 = _1317.w;
    float _1383;
    float _1385;
    float _1387;
    float _1389;
    if (_398 > cbSceneParam._m0[78u].w)
    {
        float _1345 = isnan(_398) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _398 : min(cbSceneParam._m0[80u].w, _398));
        float _1346 = _1345 / _398;
        float _1357 = _1346 * _448;
        float _1358 = _449 * _1346;
        float _1359 = (-0.0) - _1358;
        float _1360 = _1346 * _450;
        float _1362 = (cbSceneParam._m0[77u].w * _1359) / _1345;
        float _1363 = _1362 + cbSceneParam._m0[79u].w;
        float _1364 = cbSceneParam._m0[79u].w - _1358;
        float _1370 = sqrt(((_1357 * _1357) + (_1358 * _1358)) + (_1360 * _1360));
        float _1373 = (1.0 - (cbSceneParam._m0[77u].w / _1345)) * _1370;
        float _1379 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1381 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1511;
        if (abs((_1359 - _1362) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1511 = ((((_1363 > 0.0) ? exp2(_1379 * _1363) : (2.0 - exp2(_1381 * _1363))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1373;
        }
        else
        {
            float _1453 = 1.0 / cbSceneParam._m0[80u].x;
            float _1454 = isnan(_1364) ? _1363 : (isnan(_1363) ? _1364 : max(_1363, _1364));
            float _1455 = isnan(_1364) ? _1363 : (isnan(_1363) ? _1364 : min(_1363, _1364));
            float _1464 = isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : min(_1454, 0.0));
            float _1465 = isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : min(_1455, 0.0));
            _1511 = ((abs(_1370 / _1359) * cbSceneParam._m0[80u].y) * ((((_1464 - _1465) * 2.0) - ((exp2(_1379 * (isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0)))) - exp2(_1379 * (isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0))))) * _1453)) - ((exp2(_1381 * _1464) - exp2(_1381 * _1465)) * _1453))) + (_1373 * cbSceneParam._m0[80u].z);
        }
        vec4 _1513 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1302, _1303, 1.0), 0.0);
        float _1522 = exp2((_1511 * (-1.44269502162933349609375)) * (1.0 - _1513.w));
        float _1523 = log2(_1522);
        float _1539 = log2(_1322);
        _1383 = (exp2(_1539 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1523 * cbSceneParam._m0[78u].x)) * _1513.x) / cbSceneParam._m0[78u].x)) + _1319;
        _1385 = (exp2(_1539 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1523 * cbSceneParam._m0[78u].y)) * _1513.y) / cbSceneParam._m0[78u].y)) + _1320;
        _1387 = (exp2(_1539 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1523 * cbSceneParam._m0[78u].z)) * _1513.z) / cbSceneParam._m0[78u].z)) + _1321;
        _1389 = _1522 * _1322;
    }
    else
    {
        _1383 = _1319;
        _1385 = _1320;
        _1387 = _1321;
        _1389 = _1322;
    }
    float _1400 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1401 = _1400 == 3.0;
    float _1403 = log2(_1389);
    float _1410 = exp2(_1403 * cbSceneParam._m0[78u].x) * (((((((cbLight._m0[_1215].x * ((1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1184))) * _1251) * _1259) * _1261) + ((isnan(0.0) ? _1168 : (isnan(_1168) ? 0.0 : max(_1168, 0.0))) * _939)) * cbPerFrame._m0[3u].x) + (_1285 * (_366 - (_366 * _212))));
    float _1411 = exp2(_1403 * cbSceneParam._m0[78u].y) * (((((((cbLight._m0[_1215].y * ((1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1184))) * _1251) * _1259) * _1261) + ((isnan(0.0) ? _1171 : (isnan(_1171) ? 0.0 : max(_1171, 0.0))) * _939)) * cbPerFrame._m0[3u].x) + (_1285 * (_367 - (_367 * _212))));
    float _1412 = exp2(_1403 * cbSceneParam._m0[78u].z) * (((((((cbLight._m0[_1215].z * ((1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1184))) * _1251) * _1259) * _1261) + ((isnan(0.0) ? _1174 : (isnan(_1174) ? 0.0 : max(_1174, 0.0))) * _939)) * cbPerFrame._m0[3u].x) + (_1285 * (_368 - (_368 * _212))));
    float _1421 = (_1400 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1421 * (_1401 ? _1410 : (_1410 + (cbSceneParam._m0[72u].w * _1383)));
    SV_Target.y = _1421 * (_1401 ? _1411 : (_1411 + (cbSceneParam._m0[72u].w * _1385)));
    SV_Target.z = _1421 * (_1401 ? _1412 : (_1412 + (cbSceneParam._m0[72u].w * _1387)));
    SV_Target.w = _1297;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _1297;
}


