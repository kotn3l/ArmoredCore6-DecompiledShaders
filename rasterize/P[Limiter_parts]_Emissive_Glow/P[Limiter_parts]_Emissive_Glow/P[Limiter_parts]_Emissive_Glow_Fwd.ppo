#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D P_Limiter_parts_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_Limiter_parts_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D P_Limiter_parts_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _127 = texture(sampler2D(P_Limiter_parts_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _133 = _127.w;
    float _134 = _127.x * cbMtdParam._m0[9u].x;
    float _135 = _127.y * cbMtdParam._m0[9u].y;
    float _136 = _127.z * cbMtdParam._m0[9u].z;
    float _138 = (cbMtdParam._m0[9u].w * TEXCOORD_1.z) * _133;
    vec4 _169 = texture(sampler2D(P_Limiter_parts_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((cbMtdParam._m0[13u].x * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[13u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    vec4 _194 = texture(sampler2D(P_Limiter_parts_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[2u].w));
    float _211 = abs((fract(cbMtdParam._m0[12u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _582 = isnan(0.0) ? _211 : (isnan(_211) ? 0.0 : max(_211, 0.0));
    float _213 = isnan(1.0) ? _582 : (isnan(_582) ? 1.0 : min(_582, 1.0));
    float _221 = (((_213 * _213) * (3.0 - (_213 * 2.0))) * cbMtdParam._m0[12u].w) - cbMtdParam._m0[12u].x;
    float _593 = isnan(0.0) ? _138 : (isnan(_138) ? 0.0 : max(_138, 0.0));
    float _247 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _264 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _287 = uint(roundEven(NORMAL.w)) * 13u;
    uint _289 = (_287 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _295 = cbMtdParam._m0[12u].y * _133;
    float _296 = _295 * (((_194.x * cbMtdParam._m0[11u].x) * _221) + (_169.x * cbMtdParam._m0[10u].x));
    float _298 = _295 * (((_194.y * cbMtdParam._m0[11u].y) * _221) + (_169.y * cbMtdParam._m0[10u].y));
    float _300 = _295 * (((_194.z * cbMtdParam._m0[11u].z) * _221) + (_169.z * cbMtdParam._m0[10u].z));
    float _303 = cbInstanceData._m0[_289].x * (_296 + (cbMtdParam._m0[0u].x * (isnan(0.0) ? _134 : (isnan(_134) ? 0.0 : max(_134, 0.0)))));
    float _305 = cbInstanceData._m0[_289].y * (_298 + (cbMtdParam._m0[0u].y * (isnan(0.0) ? _135 : (isnan(_135) ? 0.0 : max(_135, 0.0)))));
    float _307 = cbInstanceData._m0[_289].z * (_300 + (cbMtdParam._m0[0u].z * (isnan(0.0) ? _136 : (isnan(_136) ? 0.0 : max(_136, 0.0)))));
    float _634 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _320 = isnan(1.0) ? _634 : (isnan(_634) ? 1.0 : min(_634, 1.0));
    float _326 = cbInstanceData._m0[_287 + 6u].w * (isnan(1.0) ? _593 : (isnan(_593) ? 1.0 : min(_593, 1.0)));
    float _332 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _333 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _348 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_332, _333, (log2((isnan(cbSceneParam._m0[77u].w) ? _247 : (isnan(_247) ? cbSceneParam._m0[77u].w : min(_247, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _351 = _348.x;
    float _352 = _348.y;
    float _353 = _348.z;
    float _354 = _348.w;
    float _439;
    float _441;
    float _443;
    float _445;
    if (_247 > cbSceneParam._m0[78u].w)
    {
        float _400 = isnan(_247) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _247 : min(cbSceneParam._m0[80u].w, _247));
        float _401 = _400 / _247;
        float _412 = _401 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _264));
        float _413 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _264)) * _401;
        float _414 = (-0.0) - _413;
        float _416 = _401 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _264));
        float _418 = (cbSceneParam._m0[77u].w * _414) / _400;
        float _419 = _418 + cbSceneParam._m0[79u].w;
        float _420 = cbSceneParam._m0[79u].w - _413;
        float _426 = sqrt(((_412 * _412) + (_413 * _413)) + (_416 * _416));
        float _429 = (1.0 - (cbSceneParam._m0[77u].w / _400)) * _426;
        float _435 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _437 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _537;
        if (abs((_414 - _418) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _537 = ((((_419 > 0.0) ? exp2(_435 * _419) : (2.0 - exp2(_437 * _419))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _429;
        }
        else
        {
            float _510 = 1.0 / cbSceneParam._m0[80u].x;
            float _511 = isnan(_420) ? _419 : (isnan(_419) ? _420 : max(_419, _420));
            float _512 = isnan(_420) ? _419 : (isnan(_419) ? _420 : min(_419, _420));
            float _521 = isnan(0.0) ? _511 : (isnan(_511) ? 0.0 : min(_511, 0.0));
            float _522 = isnan(0.0) ? _512 : (isnan(_512) ? 0.0 : min(_512, 0.0));
            _537 = ((abs(_426 / _414) * cbSceneParam._m0[80u].y) * ((((_521 - _522) * 2.0) - ((exp2(_435 * (isnan(0.0) ? _511 : (isnan(_511) ? 0.0 : max(_511, 0.0)))) - exp2(_435 * (isnan(0.0) ? _512 : (isnan(_512) ? 0.0 : max(_512, 0.0))))) * _510)) - ((exp2(_437 * _521) - exp2(_437 * _522)) * _510))) + (_429 * cbSceneParam._m0[80u].z);
        }
        vec4 _539 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_332, _333, 1.0), 0.0);
        float _548 = exp2((_537 * (-1.44269502162933349609375)) * (1.0 - _539.w));
        float _549 = log2(_548);
        float _565 = log2(_354);
        _439 = (exp2(_565 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_549 * cbSceneParam._m0[78u].x)) * _539.x) / cbSceneParam._m0[78u].x)) + _351;
        _441 = (exp2(_565 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_549 * cbSceneParam._m0[78u].y)) * _539.y) / cbSceneParam._m0[78u].y)) + _352;
        _443 = (exp2(_565 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_549 * cbSceneParam._m0[78u].z)) * _539.z) / cbSceneParam._m0[78u].z)) + _353;
        _445 = _548 * _354;
    }
    else
    {
        _439 = _351;
        _441 = _352;
        _443 = _353;
        _445 = _354;
    }
    float _457 = roundEven(cbMatDynParam._m0[0u].y);
    bool _458 = _457 == 3.0;
    float _459 = log2(_445);
    float _463 = exp2(_459 * cbSceneParam._m0[78u].x);
    float _464 = exp2(_459 * cbSceneParam._m0[78u].y);
    float _465 = exp2(_459 * cbSceneParam._m0[78u].z);
    float _466 = _463 * (isnan(0.0) ? _303 : (isnan(_303) ? 0.0 : max(_303, 0.0)));
    float _467 = _464 * (isnan(0.0) ? _305 : (isnan(_305) ? 0.0 : max(_305, 0.0)));
    float _468 = _465 * (isnan(0.0) ? _307 : (isnan(_307) ? 0.0 : max(_307, 0.0)));
    float _477 = (_457 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _477 * (_458 ? _466 : (_466 + (cbSceneParam._m0[72u].w * _439)));
    SV_Target.y = _477 * (_458 ? _467 : (_467 + (cbSceneParam._m0[72u].w * _441)));
    SV_Target.z = _477 * (_458 ? _468 : (_468 + (cbSceneParam._m0[72u].w * _443)));
    SV_Target.w = _326;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * (_296 * cbInstanceData._m0[_289].x)) * _320) * _463) * _477;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * (_298 * cbInstanceData._m0[_289].y)) * _320) * _464) * _477;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * (_300 * cbInstanceData._m0[_289].z)) * _320) * _465) * _477;
    SV_Target_1.w = _326;
}


