#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D P_Limiter_parts_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_Limiter_parts_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D P_Limiter_parts_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _697;
float _698;
float _699;
float _700;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _136 = texture(sampler2D(P_Limiter_parts_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _142 = _136.w;
    float _143 = _136.x * cbMtdParam._m0[9u].x;
    float _144 = _136.y * cbMtdParam._m0[9u].y;
    float _145 = _136.z * cbMtdParam._m0[9u].z;
    float _146 = _142 * cbMtdParam._m0[9u].w;
    float _147 = _146 * TEXCOORD_1.z;
    float _158 = ((cbMtdParam._m0[12u].y == 0.100000001490116119384765625) ? 0.0 : float(cbMtdParam._m0[12u].y >= 0.100000001490116119384765625)) * _146;
    vec4 _185 = texture(sampler2D(P_Limiter_parts_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((cbMtdParam._m0[13u].x * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[13u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    vec4 _210 = texture(sampler2D(P_Limiter_parts_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[2u].w));
    float _227 = abs((fract(cbMtdParam._m0[12u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _709 = isnan(0.0) ? _227 : (isnan(_227) ? 0.0 : max(_227, 0.0));
    float _228 = isnan(1.0) ? _709 : (isnan(_709) ? 1.0 : min(_709, 1.0));
    float _236 = (((_228 * _228) * (3.0 - (_228 * 2.0))) * cbMtdParam._m0[12u].w) - cbMtdParam._m0[12u].x;
    float _720 = isnan(0.0) ? _147 : (isnan(_147) ? 0.0 : max(_147, 0.0));
    float _262 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _303 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _313 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _303);
    float _314 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _303);
    float _315 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _303);
    vec4 _320 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _322 = _320.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _428 = sqrt(((_313 * _313) + (_314 * _314)) + (_315 * _315));
        float _435 = (cbMatDynParam._m0[5u].x * _428) + cbMatDynParam._m0[5u].y;
        float _746 = isnan(0.0) ? _435 : (isnan(_435) ? 0.0 : max(_435, 0.0));
        float _436 = isnan(1.0) ? _746 : (isnan(_746) ? 1.0 : min(_746, 1.0));
        float _440 = (cbMatDynParam._m0[5u].z * _428) + cbMatDynParam._m0[5u].w;
        float _757 = isnan(0.0) ? _440 : (isnan(_440) ? 0.0 : max(_440, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _757 : (isnan(_757) ? 1.0 : min(_757, 1.0))) - _436)) + _436) < ((_322 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _348 = uint(roundEven(NORMAL.w)) * 13u;
    uint _349 = _348 + 9u;
    uint _350 = _349 + uint(cbMatDynParam._m0[0u].w);
    float _356 = cbMtdParam._m0[12u].y * _142;
    float _357 = _356 * (((_210.x * cbMtdParam._m0[11u].x) * _236) + (_185.x * cbMtdParam._m0[10u].x));
    float _359 = _356 * (((_210.y * cbMtdParam._m0[11u].y) * _236) + (_185.y * cbMtdParam._m0[10u].y));
    float _361 = _356 * (((_210.z * cbMtdParam._m0[11u].z) * _236) + (_185.z * cbMtdParam._m0[10u].z));
    float _364 = cbInstanceData._m0[_350].x * (_357 + (cbMtdParam._m0[0u].x * (isnan(0.0) ? _143 : (isnan(_143) ? 0.0 : max(_143, 0.0)))));
    float _366 = cbInstanceData._m0[_350].y * (_359 + (cbMtdParam._m0[0u].y * (isnan(0.0) ? _144 : (isnan(_144) ? 0.0 : max(_144, 0.0)))));
    float _368 = cbInstanceData._m0[_350].z * (_361 + (cbMtdParam._m0[0u].z * (isnan(0.0) ? _145 : (isnan(_145) ? 0.0 : max(_145, 0.0)))));
    float _369 = isnan(0.0) ? _364 : (isnan(_364) ? 0.0 : max(_364, 0.0));
    float _370 = isnan(0.0) ? _366 : (isnan(_366) ? 0.0 : max(_366, 0.0));
    float _371 = isnan(0.0) ? _368 : (isnan(_368) ? 0.0 : max(_368, 0.0));
    float _377 = cbMtdParam._m0[2u].x * (_357 * cbInstanceData._m0[_350].x);
    float _378 = cbMtdParam._m0[2u].y * (_359 * cbInstanceData._m0[_350].y);
    float _379 = cbMtdParam._m0[2u].z * (_361 * cbInstanceData._m0[_350].z);
    float _783 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _381 = isnan(1.0) ? _783 : (isnan(_783) ? 1.0 : min(_783, 1.0));
    float _386 = cbInstanceData._m0[_348 + 6u].w * (isnan(1.0) ? _720 : (isnan(_720) ? 1.0 : min(_720, 1.0)));
    float _392 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _393 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _408 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_392, _393, (log2((isnan(cbSceneParam._m0[77u].w) ? _262 : (isnan(_262) ? cbSceneParam._m0[77u].w : min(_262, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _411 = _408.x;
    float _412 = _408.y;
    float _413 = _408.z;
    float _414 = _408.w;
    float _496;
    float _498;
    float _500;
    float _502;
    if (_262 > cbSceneParam._m0[78u].w)
    {
        float _457 = isnan(_262) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _262 : min(cbSceneParam._m0[80u].w, _262));
        float _458 = _457 / _262;
        float _469 = _458 * _313;
        float _470 = _314 * _458;
        float _471 = (-0.0) - _470;
        float _473 = _458 * _315;
        float _475 = (cbSceneParam._m0[77u].w * _471) / _457;
        float _476 = _475 + cbSceneParam._m0[79u].w;
        float _477 = cbSceneParam._m0[79u].w - _470;
        float _483 = sqrt(((_469 * _469) + (_470 * _470)) + (_473 * _473));
        float _486 = (1.0 - (cbSceneParam._m0[77u].w / _457)) * _483;
        float _492 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _494 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _625;
        if (abs((_471 - _475) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _625 = ((((_476 > 0.0) ? exp2(_492 * _476) : (2.0 - exp2(_494 * _476))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _486;
        }
        else
        {
            float _580 = 1.0 / cbSceneParam._m0[80u].x;
            float _581 = isnan(_477) ? _476 : (isnan(_476) ? _477 : max(_476, _477));
            float _582 = isnan(_477) ? _476 : (isnan(_476) ? _477 : min(_476, _477));
            float _591 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : min(_581, 0.0));
            float _592 = isnan(0.0) ? _582 : (isnan(_582) ? 0.0 : min(_582, 0.0));
            _625 = ((abs(_483 / _471) * cbSceneParam._m0[80u].y) * ((((_591 - _592) * 2.0) - ((exp2(_492 * (isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0)))) - exp2(_492 * (isnan(0.0) ? _582 : (isnan(_582) ? 0.0 : max(_582, 0.0))))) * _580)) - ((exp2(_494 * _591) - exp2(_494 * _592)) * _580))) + (_486 * cbSceneParam._m0[80u].z);
        }
        vec4 _627 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_392, _393, 1.0), 0.0);
        float _636 = exp2((_625 * (-1.44269502162933349609375)) * (1.0 - _627.w));
        float _637 = log2(_636);
        float _653 = log2(_414);
        _496 = (exp2(_653 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_637 * cbSceneParam._m0[78u].x)) * _627.x) / cbSceneParam._m0[78u].x)) + _411;
        _498 = (exp2(_653 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_637 * cbSceneParam._m0[78u].y)) * _627.y) / cbSceneParam._m0[78u].y)) + _412;
        _500 = (exp2(_653 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_637 * cbSceneParam._m0[78u].z)) * _627.z) / cbSceneParam._m0[78u].z)) + _413;
        _502 = _636 * _414;
    }
    else
    {
        _496 = _411;
        _498 = _412;
        _500 = _413;
        _502 = _414;
    }
    bool _663;
    vec4 _512;
    vec4 _535;
    float _537;
    float _541;
    float _542;
    float _543;
    float _546;
    float _549;
    float _552;
    float _553;
    bool _564;
    for (;;)
    {
        _512 = cbMatDynParam._m0[0u];
        float _514 = roundEven(_512.y);
        bool _515 = _514 == 3.0;
        float _516 = log2(_502);
        float _520 = exp2(_516 * cbSceneParam._m0[78u].x);
        float _521 = exp2(_516 * cbSceneParam._m0[78u].y);
        float _522 = exp2(_516 * cbSceneParam._m0[78u].z);
        float _523 = _520 * _369;
        float _524 = _521 * _370;
        float _525 = _522 * _371;
        float _532 = _322 + (-0.5);
        _535 = cbMtdParam._m0[1u];
        _537 = _535.y * _532;
        float _540 = (_514 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _541 = _540 * (_515 ? _523 : (_523 + (cbSceneParam._m0[72u].w * _496)));
        _542 = _540 * (_515 ? _524 : (_524 + (cbSceneParam._m0[72u].w * _498)));
        _543 = _540 * (_515 ? _525 : (_525 + (cbSceneParam._m0[72u].w * _500)));
        _546 = ((_377 * _381) * _520) * _540;
        _549 = ((_378 * _381) * _521) * _540;
        _552 = ((_379 * _381) * _522) * _540;
        _553 = _532 * 0.999000012874603271484375;
        _564 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_564)
        {
            if ((cbInstanceData._m0[_348 + 7u].x + _553) < 0.5)
            {
                _663 = true;
                break;
            }
        }
        uint _617 = _349 + uint(_512.w);
        if ((cbInstanceData._m0[_617].w < 1.0) && ((cbInstanceData._m0[_617].w + _553) < 0.5))
        {
            _663 = true;
            break;
        }
        if ((_537 + _158) < _535.x)
        {
            _663 = true;
            break;
        }
        _663 = false;
        break;
    }
    float _668;
    if (_663)
    {
        discard_state = true;
        _668 = 0.0;
    }
    else
    {
        _668 = _386;
    }
    SV_Target.x = _541;
    SV_Target.y = _542;
    SV_Target.z = _543;
    SV_Target.w = _668;
    SV_Target_1.x = _546;
    SV_Target_1.y = _549;
    SV_Target_1.z = _552;
    SV_Target_1.w = _386;
    discard_exit();
}


