#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Emissive_Glow_Addition_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Emissive_Glow_Addition_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Emissive_Glow_Addition_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD_1;
layout(location = 4) in float TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _140 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _141 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _142 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _148 = inversesqrt(dot(vec3(_140, _141, _142), vec3(_140, _141, _142)));
    float _155 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _156 = _155 * NORMAL.x;
    float _157 = _155 * NORMAL.y;
    float _158 = _155 * NORMAL.z;
    float _162 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _170;
    float _171;
    float _172;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _170 = (-0.0) - _156;
        _171 = (-0.0) - _157;
        _172 = (-0.0) - _158;
    }
    else
    {
        _170 = _156;
        _171 = _157;
        _172 = _158;
    }
    vec4 _186 = texture(sampler2D(M_AMSN_V_Emissive_Glow_Addition_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _189 = _186.x;
    float _190 = _186.y;
    float _191 = _186.z;
    float _192 = _186.w;
    float _193 = _192 * TEXCOORD_1.z;
    vec4 _209 = texture(sampler2D(M_AMSN_V_Emissive_Glow_Addition_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[1u].w));
    float _213 = _209.z;
    float _217 = (_209.x * 2.0) + (-1.0);
    float _219 = (_209.y * 2.0) + (-1.0);
    float _220 = dot(vec2(_217, _219), vec2(_217, _219));
    float _464 = isnan(0.0) ? _220 : (isnan(_220) ? 0.0 : max(_220, 0.0));
    float _226 = sqrt(1.0 - (isnan(1.0) ? _464 : (isnan(_464) ? 1.0 : min(_464, 1.0))));
    vec4 _239 = texture(sampler2D(M_AMSN_V_Emissive_Glow_Addition_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[2u].w));
    float _244 = _239.x * cbMtdParam._m0[9u].x;
    float _245 = _239.y * cbMtdParam._m0[9u].x;
    float _246 = _239.z * cbMtdParam._m0[9u].x;
    float _249 = fma(_226, _170, fma(_219, _162 * TANGENT.x, (_148 * _140) * _217));
    float _252 = fma(_226, _171, fma(_219, _162 * TANGENT.y, (_148 * _141) * _217));
    float _255 = fma(_226, _172, fma(_219, _162 * TANGENT.z, (_148 * _142) * _217));
    float _259 = inversesqrt(dot(vec3(_249, _252, _255), vec3(_249, _252, _255)));
    float _475 = isnan(0.0) ? _193 : (isnan(_193) ? 0.0 : max(_193, 0.0));
    float _260 = isnan(1.0) ? _475 : (isnan(_475) ? 1.0 : min(_475, 1.0));
    float _486 = isnan(0.0) ? _213 : (isnan(_213) ? 0.0 : max(_213, 0.0));
    float _497 = isnan(0.0) ? _189 : (isnan(_189) ? 0.0 : max(_189, 0.0));
    float _262 = isnan(1.0) ? _497 : (isnan(_497) ? 1.0 : min(_497, 1.0));
    float _508 = isnan(0.0) ? _190 : (isnan(_190) ? 0.0 : max(_190, 0.0));
    float _263 = isnan(1.0) ? _508 : (isnan(_508) ? 1.0 : min(_508, 1.0));
    float _519 = isnan(0.0) ? _191 : (isnan(_191) ? 0.0 : max(_191, 0.0));
    float _264 = isnan(1.0) ? _519 : (isnan(_519) ? 1.0 : min(_519, 1.0));
    float _530 = isnan(0.0) ? cbMtdParam._m0[9u].y : (isnan(cbMtdParam._m0[9u].y) ? 0.0 : max(cbMtdParam._m0[9u].y, 0.0));
    uint _267 = uint(roundEven(NORMAL.w));
    vec4 _272 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _274 = _272.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _345 = (cbMatDynParam._m0[5u].x * TEXCOORD_9) + cbMatDynParam._m0[5u].y;
        float _541 = isnan(0.0) ? _345 : (isnan(_345) ? 0.0 : max(_345, 0.0));
        float _346 = isnan(1.0) ? _541 : (isnan(_541) ? 1.0 : min(_541, 1.0));
        float _350 = (cbMatDynParam._m0[5u].z * TEXCOORD_9) + cbMatDynParam._m0[5u].w;
        float _552 = isnan(0.0) ? _350 : (isnan(_350) ? 0.0 : max(_350, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _552 : (isnan(_552) ? 1.0 : min(_552, 1.0))) - _346)) + _346) < ((_274 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _379;
    uint _294;
    vec4 _299;
    float _306;
    float _307;
    float _308;
    float _309;
    float _310;
    float _311;
    float _315;
    float _320;
    vec4 _324;
    float _326;
    float _327;
    bool _338;
    for (;;)
    {
        _294 = _267 * 13u;
        _299 = cbInstanceData._m0[(_294 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _303 = (cbMtdParam._m0[0u].x * _262) * _299.x;
        float _304 = (cbMtdParam._m0[0u].y * _263) * _299.y;
        float _305 = (cbMtdParam._m0[0u].z * _264) * _299.z;
        float _563 = isnan(0.0) ? _303 : (isnan(_303) ? 0.0 : max(_303, 0.0));
        _306 = isnan(1.0) ? _563 : (isnan(_563) ? 1.0 : min(_563, 1.0));
        float _574 = isnan(0.0) ? _304 : (isnan(_304) ? 0.0 : max(_304, 0.0));
        _307 = isnan(1.0) ? _574 : (isnan(_574) ? 1.0 : min(_574, 1.0));
        float _585 = isnan(0.0) ? _305 : (isnan(_305) ? 0.0 : max(_305, 0.0));
        _308 = isnan(1.0) ? _585 : (isnan(_585) ? 1.0 : min(_585, 1.0));
        _309 = _244 * _299.x;
        _310 = _245 * _299.y;
        _311 = _246 * _299.z;
        float _596 = isnan(0.0) ? _260 : (isnan(_260) ? 0.0 : max(_260, 0.0));
        _315 = cbMtdParam._m0[2u].w;
        _320 = cbInstanceData._m0[_294 + 6u].w * (isnan(1.0) ? _596 : (isnan(_596) ? 1.0 : min(_596, 1.0)));
        float _321 = _274 + (-0.5);
        _324 = cbMtdParam._m0[1u];
        _326 = _324.y * _321;
        _327 = _321 * 0.999000012874603271484375;
        _338 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_338)
        {
            if ((cbInstanceData._m0[_294 + 7u].x + _327) < 0.5)
            {
                _379 = true;
                break;
            }
        }
        if ((_299.w < 1.0) && ((_299.w + _327) < 0.5))
        {
            _379 = true;
            break;
        }
        if ((_326 + _192) < _324.x)
        {
            _379 = true;
            break;
        }
        _379 = false;
        break;
    }
    if (_379)
    {
        discard_state = true;
    }
    float _413;
    float _414;
    float _415;
    float _416;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _413 = _320;
        _414 = _320;
        _415 = _320;
        _416 = _320;
    }
    else
    {
        _413 = _315;
        _414 = 0.0;
        _415 = float(floatBitsToUint(cbInstanceData._m0[_294 + 5u]).x) * 0.0039215688593685626983642578125;
        _416 = TEXCOORD_1.w;
    }
    SV_Target.x = ((_249 * 0.5) * _259) + 0.500488758087158203125;
    SV_Target.y = ((_252 * 0.5) * _259) + 0.500488758087158203125;
    SV_Target.z = ((_255 * 0.5) * _259) + 0.500488758087158203125;
    SV_Target.w = _414;
    SV_Target_1.x = isnan(1.0) ? _530 : (isnan(_530) ? 1.0 : min(_530, 1.0));
    SV_Target_1.y = isnan(1.0) ? _486 : (isnan(_486) ? 1.0 : min(_486, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _416;
    SV_Target_2.x = _306;
    SV_Target_2.y = _307;
    SV_Target_2.z = _308;
    SV_Target_2.w = _415;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _414;
    SV_Target_4.x = _309 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _310 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _311 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _413;
    discard_exit();
}


