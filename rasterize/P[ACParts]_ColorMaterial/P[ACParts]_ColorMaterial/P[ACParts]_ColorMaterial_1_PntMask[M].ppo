#version 460

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 10, std140) uniform cbPaintParamUBO
{
    vec4 _m0[24];
} cbPaintParam;

layout(set = 0, binding = 25) uniform texture2D g_PaintBaseColorTexture;
layout(set = 0, binding = 26) uniform texture2D g_PaintMetallicTexture;
layout(set = 0, binding = 27) uniform texture2D g_PaintNormalTexture;
layout(set = 0, binding = 28) uniform texture2D g_PaintMaskTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 2) uniform texture2D P_ACParts_ColorMaterial_snp_0_Texture2D_14;
layout(set = 0, binding = 3) uniform sampler SS_MaskMap;
layout(set = 0, binding = 5) uniform sampler SS_PaintDecal;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TEXCOORD;
layout(location = 4) in vec4 TEXCOORD_5;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    float _104 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _135 = (((floatBitsToUint(cbPaintParam._m0[21u]).y != 0u) ? (-0.5) : 0.5) * (POSITION_1.x / POSITION_1.w)) + 0.5;
    float _136 = 0.5 - ((POSITION_1.y / POSITION_1.w) * 0.5);
    vec4 _141 = texture(sampler2D(g_PaintMetallicTexture, SS_PaintDecal), vec2(_135, _136));
    vec4 _146 = texture(sampler2D(g_PaintNormalTexture, SS_PaintDecal), vec2(_135, _136));
    vec4 _150 = texture(sampler2D(g_PaintBaseColorTexture, SS_PaintDecal), vec2(_135, _136));
    vec4 _157 = texture(sampler2D(g_PaintMaskTexture, SS_MaskMap), vec2(_135, _136));
    uint _165 = uint(roundEven(NORMAL.w)) * 13u;
    uint _169 = (_165 + 9u) + uint(cbMatDynParam._m0[0u].w);
    uvec4 _183 = floatBitsToUint(cbPaintParam._m0[21u]);
    float _188 = (_183.y != 0u) ? (1.0 - _135) : _135;
    vec4 _192 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_188, _136), 0.0, ivec2(1));
    float _196 = _192.x;
    vec4 _198 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_188, _136), 0.0, ivec2(-1, 1));
    float _201 = _198.x;
    vec4 _202 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_188, _136), 0.0, ivec2(1, -1));
    float _205 = _202.x;
    vec4 _206 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_188, _136), 0.0, ivec2(-1));
    float _209 = _206.x;
    float _210 = isnan(_209) ? _205 : (isnan(_205) ? _209 : min(_205, _209));
    float _211 = isnan(_201) ? _196 : (isnan(_196) ? _201 : min(_196, _201));
    if (((1u << (uint(floor(float(uint(roundEven((texture(sampler2D(P_ACParts_ColorMaterial_snp_0_Texture2D_14, SS_WrapLinear), vec2(TEXCOORD.x, TEXCOORD.y)).x + (-0.02500000037252902984619140625)) * 8.0))))) & 31u)) & _183.z) == 0u)
    {
        discard_state = true;
    }
    float _249 = (dot(vec3(_104 * NORMAL.x, _104 * NORMAL.y, _104 * NORMAL.z), vec3((-0.0) - cbPaintParam._m0[12u].x, (-0.0) - cbPaintParam._m0[12u].y, (-0.0) - cbPaintParam._m0[12u].z)) - cbPaintParam._m0[23u].x) * cbPaintParam._m0[23u].y;
    float _370 = isnan(0.0) ? _249 : (isnan(_249) ? 0.0 : max(_249, 0.0));
    float _291 = fma(POSITION_1.w, cbPaintParam._m0[3u].w, fma(POSITION_1.z, cbPaintParam._m0[3u].z, fma(POSITION_1.y, cbPaintParam._m0[3u].y, cbPaintParam._m0[3u].x * POSITION_1.x)));
    float _297 = fma(_291, cbPaintParam._m0[12u].w, fma(fma(POSITION_1.w, cbPaintParam._m0[2u].w, fma(POSITION_1.z, cbPaintParam._m0[2u].z, fma(POSITION_1.y, cbPaintParam._m0[2u].y, cbPaintParam._m0[2u].x * POSITION_1.x))), cbPaintParam._m0[12u].z, fma(fma(POSITION_1.w, cbPaintParam._m0[1u].w, fma(POSITION_1.z, cbPaintParam._m0[1u].z, fma(POSITION_1.y, cbPaintParam._m0[1u].y, cbPaintParam._m0[1u].x * POSITION_1.x))), cbPaintParam._m0[12u].y, cbPaintParam._m0[12u].x * fma(POSITION_1.w, cbPaintParam._m0[0u].w, fma(POSITION_1.z, cbPaintParam._m0[0u].z, fma(POSITION_1.y, cbPaintParam._m0[0u].y, cbPaintParam._m0[0u].x * POSITION_1.x)))))) / _291;
    float _304 = (_297 - cbPaintParam._m0[22u].x) * cbPaintParam._m0[22u].y;
    float _381 = isnan(0.0) ? _304 : (isnan(_304) ? 0.0 : max(_304, 0.0));
    float _310 = (_297 - cbPaintParam._m0[22u].z) * cbPaintParam._m0[22u].w;
    float _392 = isnan(0.0) ? _310 : (isnan(_310) ? 0.0 : max(_310, 0.0));
    float _313 = ((((_157.x * _150.w) * (((POSITION_1.z / POSITION_1.w) < ((isnan(_210) ? _211 : (isnan(_211) ? _210 : min(_211, _210))) + (-0.001000000047497451305389404296875))) ? 0.0 : 1.0)) * (isnan(1.0) ? _370 : (isnan(_370) ? 1.0 : min(_370, 1.0)))) * (isnan(1.0) ? _381 : (isnan(_381) ? 1.0 : min(_381, 1.0)))) * (1.0 - (isnan(1.0) ? _392 : (isnan(_392) ? 1.0 : min(_392, 1.0))));
    float _322;
    if (_313 < 0.0039215688593685626983642578125)
    {
        discard_state = true;
        _322 = 0.0;
    }
    else
    {
        _322 = _313 * cbInstanceData._m0[_165 + 6u].w;
    }
    SV_Target.x = (cbInstanceData._m0[_169].x * cbInstanceData._m0[_169].x) * _150.x;
    SV_Target.y = (cbInstanceData._m0[_169].y * cbInstanceData._m0[_169].y) * _150.y;
    SV_Target.z = (cbInstanceData._m0[_169].z * cbInstanceData._m0[_169].z) * _150.z;
    SV_Target.w = _322;
    SV_Target_1.x = cbPaintParam._m0[17u].x * _141.x;
    SV_Target_1.y = cbPaintParam._m0[17u].y * _146.z;
    SV_Target_1.z = _141.z;
    SV_Target_1.w = _322;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = _322;
    discard_exit();
}


