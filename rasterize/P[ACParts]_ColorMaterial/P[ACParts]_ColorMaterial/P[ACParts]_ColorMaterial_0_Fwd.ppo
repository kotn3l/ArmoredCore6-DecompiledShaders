#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_ColorMaterial_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_ACParts_ColorMaterial_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D P_ACParts_ColorMaterial_snp_0_Texture2D_14;
layout(set = 0, binding = 3) uniform texture2D P_ACParts_ColorMaterial_snp_0_Texture2D_15;
layout(set = 0, binding = 4) uniform texture2D P_ACParts_ColorMaterial_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D P_ACParts_ColorMaterial_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D P_ACParts_ColorMaterial_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D P_ACParts_ColorMaterial_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D P_ACParts_ColorMaterial_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D P_ACParts_ColorMaterial_snp_0_Texture2D_9;
layout(set = 0, binding = 10) uniform texture2DArray P_ACParts_ColorMaterial_snp_0_Texture2DArray_0;
layout(set = 0, binding = 11) uniform texture2DArray P_ACParts_ColorMaterial_snp_0_Texture2DArray_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1472;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _228 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _229 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _230 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _236 = inversesqrt(dot(vec3(_228, _229, _230), vec3(_228, _229, _230)));
    float _243 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _250 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _275 = texture(sampler2D(P_ACParts_ColorMaterial_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _282 = log2(0.0);
    float _284 = exp2(_282 * cbMtdParam._m0[24u].y);
    float _288 = _284 - ((cbMtdParam._m0[24u].x * TEXCOORD_5.x) * _284);
    float _289 = _284 - ((cbMtdParam._m0[24u].x * TEXCOORD_5.y) * _284);
    float _290 = _284 - ((cbMtdParam._m0[24u].x * TEXCOORD_5.z) * _284);
    float _291 = isnan(0.0) ? _288 : (isnan(_288) ? 0.0 : max(_288, 0.0));
    float _292 = isnan(0.0) ? _289 : (isnan(_289) ? 0.0 : max(_289, 0.0));
    float _293 = isnan(0.0) ? _290 : (isnan(_290) ? 0.0 : max(_290, 0.0));
    float _294 = isnan(1.0) ? _291 : (isnan(_291) ? 1.0 : min(_291, 1.0));
    float _296 = isnan(1.0) ? _292 : (isnan(_292) ? 1.0 : min(_292, 1.0));
    float _297 = isnan(1.0) ? _293 : (isnan(_293) ? 1.0 : min(_293, 1.0));
    vec4 _312 = texture(sampler2D(P_ACParts_ColorMaterial_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _316 = _312.z;
    float _317 = _312.w;
    float _318 = 1.0 - _317;
    float _327 = exp2(log2((1.0 - (_318 * _316)) * cbMtdParam._m0[25u].w) * cbMtdParam._m0[26u].x);
    float _328 = isnan(0.0) ? _327 : (isnan(_327) ? 0.0 : max(_327, 0.0));
    float _329 = isnan(1.0) ? _328 : (isnan(_328) ? 1.0 : min(_328, 1.0));
    float _338 = exp2(log2(cbMtdParam._m0[26u].z * (1.0 - ((_318 * _318) * _316))) * cbMtdParam._m0[26u].y);
    float _339 = isnan(0.0) ? _338 : (isnan(_338) ? 0.0 : max(_338, 0.0));
    vec4 _352 = texture(sampler2D(P_ACParts_ColorMaterial_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _355 = _352.y;
    float _358 = (_355 * ((isnan(1.0) ? _339 : (isnan(_339) ? 1.0 : min(_339, 1.0))) - _317)) + _317;
    float _361 = (_352.x + (-0.02500000037252902984619140625)) * 8.0;
    float _365 = roundEven(5.0 - _361);
    float _366 = isnan(0.0) ? _365 : (isnan(_365) ? 0.0 : max(_365, 0.0));
    float _367 = isnan(4.0) ? _366 : (isnan(_366) ? 4.0 : min(_366, 4.0));
    float _380 = floor(_367);
    vec4 _383 = texture(sampler2DArray(P_ACParts_ColorMaterial_snp_0_Texture2DArray_0, SS_DiffuseMap), vec3((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w, _380));
    float _206[6];
    float _207[6];
    float _208[6];
    _206[0u] = cbMtdParam._m0[12u].x;
    _207[0u] = cbMtdParam._m0[12u].y;
    _208[0u] = cbMtdParam._m0[12u].z;
    _206[1u] = cbMtdParam._m0[13u].x;
    _207[1u] = cbMtdParam._m0[13u].y;
    _208[1u] = cbMtdParam._m0[13u].z;
    _206[2u] = cbMtdParam._m0[14u].x;
    _207[2u] = cbMtdParam._m0[14u].y;
    _208[2u] = cbMtdParam._m0[14u].z;
    _206[3u] = cbMtdParam._m0[15u].x;
    _207[3u] = cbMtdParam._m0[15u].y;
    _208[3u] = cbMtdParam._m0[15u].z;
    _206[4u] = cbMtdParam._m0[16u].x;
    _207[4u] = cbMtdParam._m0[16u].y;
    _208[4u] = cbMtdParam._m0[16u].z;
    _206[5u] = cbMtdParam._m0[11u].x;
    _207[5u] = cbMtdParam._m0[11u].y;
    _208[5u] = cbMtdParam._m0[11u].z;
    float _449 = roundEven(_361);
    float _450 = isnan(0.0) ? _449 : (isnan(_449) ? 0.0 : max(_449, 0.0));
    uint _452 = uint(int(isnan(5.0) ? _450 : (isnan(_450) ? 5.0 : min(_450, 5.0))));
    float _203[6];
    float _204[6];
    float _205[6];
    _203[0u] = 1.0;
    _204[0u] = 1.0;
    _205[0u] = 1.0;
    _203[1u] = cbMtdParam._m0[22u].x;
    _204[1u] = cbMtdParam._m0[22u].y;
    _205[1u] = cbMtdParam._m0[22u].z;
    _203[2u] = cbMtdParam._m0[21u].x;
    _204[2u] = cbMtdParam._m0[21u].y;
    _205[2u] = cbMtdParam._m0[21u].z;
    _203[3u] = cbMtdParam._m0[19u].x;
    _204[3u] = cbMtdParam._m0[19u].y;
    _205[3u] = cbMtdParam._m0[19u].z;
    _203[4u] = cbMtdParam._m0[18u].x;
    _204[4u] = cbMtdParam._m0[18u].y;
    _205[4u] = cbMtdParam._m0[18u].z;
    _203[5u] = cbMtdParam._m0[17u].x;
    _204[5u] = cbMtdParam._m0[17u].y;
    _205[5u] = cbMtdParam._m0[17u].z;
    float _539 = roundEven((texture(sampler2D(P_ACParts_ColorMaterial_snp_0_Texture2D_15, SS_WrapPoint), vec2((((cbMtdParam._m0[29u].y * TEXCOORD.x) * cbMtdParam._m0[24u].w) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[29u].z * TEXCOORD.y) * cbMtdParam._m0[24u].w) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x + (-0.02500000037252902984619140625)) * 8.0);
    float _540 = isnan(0.0) ? _539 : (isnan(_539) ? 0.0 : max(_539, 0.0));
    uint _542 = uint(int(isnan(5.0) ? _540 : (isnan(_540) ? 5.0 : min(_540, 5.0))));
    float _202[6];
    _202[0u] = 1.0;
    _202[1u] = cbMtdParam._m0[22u].w;
    _202[2u] = cbMtdParam._m0[21u].w;
    _202[3u] = cbMtdParam._m0[19u].w;
    _202[4u] = cbMtdParam._m0[18u].w;
    _202[5u] = cbMtdParam._m0[17u].w;
    float _579 = ((((_206[_452] - cbMtdParam._m0[10u].x) + ((cbMtdParam._m0[24u].z * (_203[_542] - _206[_452])) * _202[_452])) * _355) + cbMtdParam._m0[10u].x) * _383.x;
    float _580 = ((((_207[_452] - cbMtdParam._m0[10u].y) + ((cbMtdParam._m0[24u].z * (_204[_542] - _207[_452])) * _202[_452])) * _355) + cbMtdParam._m0[10u].y) * _383.y;
    float _581 = ((((_208[_452] - cbMtdParam._m0[10u].z) + ((cbMtdParam._m0[24u].z * (_205[_542] - _208[_452])) * _202[_452])) * _355) + cbMtdParam._m0[10u].z) * _383.z;
    vec4 _593 = texture(sampler2D(P_ACParts_ColorMaterial_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _613 = (((cbMtdParam._m0[9u].x * _593.x) - _579) * _358) + _579;
    float _614 = (((cbMtdParam._m0[9u].y * _593.y) - _580) * _358) + _580;
    float _615 = (((cbMtdParam._m0[9u].z * _593.z) - _581) * _358) + _581;
    vec4 _627 = texture(sampler2D(P_ACParts_ColorMaterial_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _647 = (((cbMtdParam._m0[20u].x * _627.x) - _613) * _329) + _613;
    float _648 = (((cbMtdParam._m0[20u].y * _627.y) - _614) * _329) + _614;
    float _649 = (((cbMtdParam._m0[20u].z * _627.z) - _615) * _329) + _615;
    vec4 _661 = texture(sampler2D(P_ACParts_ColorMaterial_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _685 = (_275.x * 4.5) * ((((cbMtdParam._m0[23u].x * _661.x) - _647) * _294) + _647);
    float _687 = (_275.y * 4.5) * ((((cbMtdParam._m0[23u].y * _661.y) - _648) * _296) + _648);
    float _689 = (_275.z * 4.5) * ((((cbMtdParam._m0[23u].z * _661.z) - _649) * _297) + _649);
    float _197[5];
    float _198[5];
    _197[0u] = cbMtdParam._m0[26u].w;
    _198[0u] = cbMtdParam._m0[27u].x;
    _197[1u] = cbMtdParam._m0[27u].y;
    _198[1u] = cbMtdParam._m0[27u].z;
    _197[2u] = cbMtdParam._m0[27u].w;
    _198[2u] = cbMtdParam._m0[28u].x;
    _197[3u] = cbMtdParam._m0[28u].y;
    _198[3u] = cbMtdParam._m0[28u].z;
    _197[4u] = cbMtdParam._m0[28u].w;
    _198[4u] = cbMtdParam._m0[29u].x;
    float _717 = isnan(0.0) ? _367 : (isnan(_367) ? 0.0 : max(_367, 0.0));
    uint _719 = uint(int(isnan(4.0) ? _717 : (isnan(_717) ? 4.0 : min(_717, 4.0))));
    float _731 = ((cbMtdParam._m0[30u].x - _198[_719]) * _358) + _198[_719];
    float _736 = ((cbMtdParam._m0[30u].z - _731) * _329) + _731;
    float _744 = ((cbMtdParam._m0[31u].x - _736) * _294) + _736;
    vec4 _759 = texture(sampler2DArray(P_ACParts_ColorMaterial_snp_0_Texture2DArray_1, SS_BumpMap), vec3((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w, _380));
    float _761 = _759.x;
    float _762 = _759.y;
    float _764 = _759.z + _197[_719];
    vec4 _776 = texture(sampler2D(P_ACParts_ColorMaterial_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _784 = (((cbMtdParam._m0[29u].w - _764) + _776.z) * _358) + _764;
    vec4 _797 = texture(sampler2D(P_ACParts_ColorMaterial_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _805 = (((cbMtdParam._m0[30u].y - _784) + _797.z) * _329) + _784;
    float _811 = ((((_316 * 2.0) * _805) - _805) * cbMtdParam._m0[25u].y) + _805;
    vec4 _823 = texture(sampler2D(P_ACParts_ColorMaterial_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _831 = (((_823.z + cbMtdParam._m0[30u].w) - _811) * _297) + _811;
    float _844 = ((_776.x - _761) * _358) + _761;
    float _845 = ((_776.y - _762) * _358) + _762;
    float _850 = ((_797.x - _844) * _329) + _844;
    float _851 = ((_797.y - _845) * _329) + _845;
    float _860 = ((((_823.x - _850) * _294) + _850) * 2.0) + (-1.0);
    float _861 = ((((_823.y - _851) * _296) + _851) * 2.0) + (-1.0);
    float _862 = dot(vec2(_860, _861), vec2(_860, _861));
    float _3885 = isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0));
    float _867 = sqrt(1.0 - (isnan(1.0) ? _3885 : (isnan(_3885) ? 1.0 : min(_3885, 1.0))));
    float _870 = _860 + (cbMtdParam._m0[25u].z * ((_312.x * 2.0) + (-1.0)));
    float _871 = _861 + (cbMtdParam._m0[25u].z * ((_312.y * 2.0) + (-1.0)));
    float _874 = fma(_867, _243 * NORMAL.x, fma(_871, _250 * TANGENT.x, (_236 * _228) * _870));
    float _877 = fma(_867, _243 * NORMAL.y, fma(_871, _250 * TANGENT.y, (_236 * _229) * _870));
    float _880 = fma(_867, _243 * NORMAL.z, fma(_871, _250 * TANGENT.z, (_236 * _230) * _870));
    float _884 = inversesqrt(dot(vec3(_874, _877, _880), vec3(_874, _877, _880)));
    float _885 = _884 * _874;
    float _886 = _884 * _877;
    float _887 = _884 * _880;
    float _3896 = isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0));
    float _888 = isnan(1.0) ? _3896 : (isnan(_3896) ? 1.0 : min(_3896, 1.0));
    float _3907 = isnan(0.0) ? _685 : (isnan(_685) ? 0.0 : max(_685, 0.0));
    float _3918 = isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : max(_687, 0.0));
    float _3929 = isnan(0.0) ? _689 : (isnan(_689) ? 0.0 : max(_689, 0.0));
    float _3940 = isnan(0.0) ? _744 : (isnan(_744) ? 0.0 : max(_744, 0.0));
    float _892 = isnan(1.0) ? _3940 : (isnan(_3940) ? 1.0 : min(_3940, 1.0));
    float _908 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _948 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _958 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _948);
    float _959 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _948);
    float _960 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _948);
    float _964 = inversesqrt(dot(vec3(_958, _959, _960), vec3(_958, _959, _960)));
    float _965 = _958 * _964;
    float _966 = _959 * _964;
    float _967 = _960 * _964;
    float _973 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _974 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _976 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _978 = _976.w;
    float _996 = fma(_887, cbSceneParam._m0[5u].z, fma(_886, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _885));
    float _999 = fma(_887, cbSceneParam._m0[6u].z, fma(_886, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _885));
    float _1002 = fma(_887, cbSceneParam._m0[7u].z, fma(_886, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _885));
    vec4 _1004 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1015 = (((_1004.y - _888) + (_1004.w * _888)) * cbMtdParam._m0[3u].x) + _888;
    uint _1028 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1030 = (_1028 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1036 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3907 : (isnan(_3907) ? 1.0 : min(_3907, 1.0)))) * cbInstanceData._m0[_1030].x;
    float _1037 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3918 : (isnan(_3918) ? 1.0 : min(_3918, 1.0)))) * cbInstanceData._m0[_1030].y;
    float _1038 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3929 : (isnan(_3929) ? 1.0 : min(_3929, 1.0)))) * cbInstanceData._m0[_1030].z;
    float _3951 = isnan(0.0) ? _1036 : (isnan(_1036) ? 0.0 : max(_1036, 0.0));
    float _1039 = isnan(1.0) ? _3951 : (isnan(_3951) ? 1.0 : min(_3951, 1.0));
    float _3962 = isnan(0.0) ? _1037 : (isnan(_1037) ? 0.0 : max(_1037, 0.0));
    float _1040 = isnan(1.0) ? _3962 : (isnan(_3962) ? 1.0 : min(_3962, 1.0));
    float _3973 = isnan(0.0) ? _1038 : (isnan(_1038) ? 0.0 : max(_1038, 0.0));
    float _1041 = isnan(1.0) ? _3973 : (isnan(_3973) ? 1.0 : min(_3973, 1.0));
    vec4 _1042 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _1047 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1058 = (((_1047.x - _892) + (_1047.w * _892)) * cbMtdParam._m0[3u].x) + _892;
    float _1071 = (cbMtdParam._m0[3u].x * (((_1039 * _978) - _1039) + _1042.x)) + _1039;
    float _1072 = (cbMtdParam._m0[3u].x * (((_1040 * _978) - _1040) + _1042.y)) + _1040;
    float _1073 = (cbMtdParam._m0[3u].x * (((_1041 * _978) - _1041) + _1042.z)) + _1041;
    float _1074 = 1.0 - _1058;
    float _1075 = _1074 * _1071;
    float _1076 = _1074 * _1072;
    float _1077 = _1074 * _1073;
    float _1082 = (_1071 + (-0.039999999105930328369140625)) * _1058;
    float _1083 = (_1072 + (-0.039999999105930328369140625)) * _1058;
    float _1084 = (_1073 + (-0.039999999105930328369140625)) * _1058;
    float _1085 = _1082 + 0.039999999105930328369140625;
    float _1087 = _1083 + 0.039999999105930328369140625;
    float _1088 = _1084 + 0.039999999105930328369140625;
    vec4 _1097 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _973, cbSceneParam._m0[86u].y * _974));
    float _1100 = _1097.x * TEXCOORD_5.w;
    float _1101 = dot(vec3(_885, _886, _887), vec3(_965, _966, _967));
    float _1104 = _1101 * 2.0;
    float _1108 = (_1104 * _885) - _965;
    float _1109 = (_1104 * _886) - _966;
    float _1110 = (_1104 * _887) - _967;
    float _1114 = abs(dot(vec3(_965, _966, _967), vec3(_885, _886, _887)));
    float _3984 = isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0));
    float _1116 = sqrt(_1015);
    float _1127 = exp2((_1116 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3984 : (isnan(_3984) ? 1.0 : min(_3984, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1116 * 3.0));
    float _1133 = (1.0 - _1127) * ((_1116 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1134 = _1127 * _1116;
    float _1162 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1166 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1170 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1471;
    float _1473;
    float _1474;
    float _1475;
    float _1476;
    float _1477;
    float _1478;
    float _1479;
    float _1480;
    float _1481;
    float _1482;
    float _1483;
    float _1484;
    float _1485;
    float _1486;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1196 = fma(_1170, cbModelParam._m0[26u].z, fma(_1166, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1162));
        float _1200 = fma(_1170, cbModelParam._m0[27u].z, fma(_1166, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1162));
        float _1204 = fma(_1170, cbModelParam._m0[28u].z, fma(_1166, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1162));
        float _1229 = _1162 + _885;
        float _1230 = _1166 + _886;
        float _1231 = _1170 + _887;
        float _1241 = fma(_1231, cbModelParam._m0[26u].z, fma(_1230, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1229)) - _1196;
        float _1242 = fma(_1231, cbModelParam._m0[27u].z, fma(_1230, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1229)) - _1200;
        float _1243 = fma(_1231, cbModelParam._m0[28u].z, fma(_1230, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1229)) - _1204;
        float _1247 = inversesqrt(dot(vec3(_1241, _1242, _1243), vec3(_1241, _1242, _1243)));
        float _1260 = ((_1247 * _1241) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1196 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1261 = ((_1247 * _1242) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1200 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1262 = ((_1247 * _1243) / cbModelParam._m0[34u].z) + ((((((_1204 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1265 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1260, _1261, _1262), 0.0);
        vec4 _1272 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1260, _1261, _1262), 0.0);
        vec4 _1279 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1260, _1261, _1262), 0.0);
        vec4 _1286 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1260, _1261, _1262), 0.0);
        float _1299 = exp2((_1265.w + (-0.5)) * 20.0) * 2.0;
        float _1300 = _1299 * (_1265.x + (-0.5));
        float _1301 = _1299 * (_1265.y + (-0.5));
        float _1302 = _1299 * (_1265.z + (-0.5));
        float _1309 = exp2((_1272.w + (-0.5)) * 20.0) * 2.0;
        float _1310 = _1309 * (_1272.x + (-0.5));
        float _1311 = _1309 * (_1272.y + (-0.5));
        float _1312 = _1309 * (_1272.z + (-0.5));
        float _1319 = exp2((_1279.w + (-0.5)) * 20.0) * 2.0;
        float _1320 = _1319 * (_1279.x + (-0.5));
        float _1321 = _1319 * (_1279.y + (-0.5));
        float _1322 = _1319 * (_1279.z + (-0.5));
        float _1329 = exp2((_1286.w + (-0.5)) * 20.0) * 2.0;
        float _1330 = _1329 * (_1286.x + (-0.5));
        float _1331 = _1329 * (_1286.y + (-0.5));
        float _1332 = _1329 * (_1286.z + (-0.5));
        float _1333 = isnan(0.0) ? _1330 : (isnan(_1330) ? 0.0 : max(_1330, 0.0));
        float _1334 = isnan(0.0) ? _1331 : (isnan(_1331) ? 0.0 : max(_1331, 0.0));
        float _1335 = isnan(0.0) ? _1332 : (isnan(_1332) ? 0.0 : max(_1332, 0.0));
        float _1336 = _1300 * 0.5;
        float _1337 = _1310 * 0.5;
        float _1338 = _1320 * 0.5;
        float _1339 = dot(vec3(_1336, _1337, _1338), vec3(_1336, _1337, _1338));
        float _1344 = (_1339 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1339);
        float _1353 = (dot(vec3(_885, _886, _887), vec3(_1344 * _1336, _1344 * _1337, _1344 * _1338)) + 1.0) * 0.5;
        float _4010 = isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0));
        float _1363 = sqrt(((_1337 * _1337) + (_1336 * _1336)) + (_1338 * _1338)) / (_1333 + 9.9999997473787516355514526367188e-06);
        float _4021 = isnan(0.0) ? _1363 : (isnan(_1363) ? 0.0 : max(_1363, 0.0));
        float _1364 = isnan(1.0) ? _4021 : (isnan(_4021) ? 1.0 : min(_4021, 1.0));
        float _1365 = _1364 * 2.0;
        float _1369 = (1.0 - _1364) / (_1364 + 1.0);
        float _4032 = isnan(0.0) ? _1369 : (isnan(_1369) ? 0.0 : max(_1369, 0.0));
        float _1370 = isnan(1.0) ? _4032 : (isnan(_4032) ? 1.0 : min(_4032, 1.0));
        float _1379 = ((((1.0 - _1370) * (_1365 + 2.0)) * exp2(log2(isnan(1.0) ? _4010 : (isnan(_4010) ? 1.0 : min(_4010, 1.0))) * (_1365 + 1.0))) + _1370) * _1333;
        float _1380 = _1301 * 0.5;
        float _1381 = _1311 * 0.5;
        float _1382 = _1321 * 0.5;
        float _1383 = dot(vec3(_1380, _1381, _1382), vec3(_1380, _1381, _1382));
        float _1388 = (_1383 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1383);
        float _1396 = (dot(vec3(_885, _886, _887), vec3(_1388 * _1380, _1388 * _1381, _1388 * _1382)) + 1.0) * 0.5;
        float _4043 = isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0));
        float _1405 = sqrt(((_1381 * _1381) + (_1380 * _1380)) + (_1382 * _1382)) / (_1334 + 9.9999997473787516355514526367188e-06);
        float _4054 = isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0));
        float _1406 = isnan(1.0) ? _4054 : (isnan(_4054) ? 1.0 : min(_4054, 1.0));
        float _1407 = _1406 * 2.0;
        float _1411 = (1.0 - _1406) / (_1406 + 1.0);
        float _4065 = isnan(0.0) ? _1411 : (isnan(_1411) ? 0.0 : max(_1411, 0.0));
        float _1412 = isnan(1.0) ? _4065 : (isnan(_4065) ? 1.0 : min(_4065, 1.0));
        float _1421 = ((((1.0 - _1412) * (_1407 + 2.0)) * exp2(log2(isnan(1.0) ? _4043 : (isnan(_4043) ? 1.0 : min(_4043, 1.0))) * (_1407 + 1.0))) + _1412) * _1334;
        float _1422 = _1302 * 0.5;
        float _1423 = _1312 * 0.5;
        float _1424 = _1322 * 0.5;
        float _1425 = dot(vec3(_1422, _1423, _1424), vec3(_1422, _1423, _1424));
        float _1430 = (_1425 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1425);
        float _1438 = (dot(vec3(_885, _886, _887), vec3(_1430 * _1422, _1430 * _1423, _1430 * _1424)) + 1.0) * 0.5;
        float _4076 = isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0));
        float _1447 = sqrt(((_1423 * _1423) + (_1422 * _1422)) + (_1424 * _1424)) / (_1335 + 9.9999997473787516355514526367188e-06);
        float _4087 = isnan(0.0) ? _1447 : (isnan(_1447) ? 0.0 : max(_1447, 0.0));
        float _1448 = isnan(1.0) ? _4087 : (isnan(_4087) ? 1.0 : min(_4087, 1.0));
        float _1449 = _1448 * 2.0;
        float _1453 = (1.0 - _1448) / (_1448 + 1.0);
        float _4098 = isnan(0.0) ? _1453 : (isnan(_1453) ? 0.0 : max(_1453, 0.0));
        float _1454 = isnan(1.0) ? _4098 : (isnan(_4098) ? 1.0 : min(_4098, 1.0));
        float _1463 = ((((1.0 - _1454) * (_1449 + 2.0)) * exp2(log2(isnan(1.0) ? _4076 : (isnan(_4076) ? 1.0 : min(_4076, 1.0))) * (_1449 + 1.0))) + _1454) * _1335;
        _1471 = _1302;
        _1473 = _1301;
        _1474 = _1300;
        _1475 = _1312;
        _1476 = _1311;
        _1477 = _1310;
        _1478 = _1322;
        _1479 = _1321;
        _1480 = _1320;
        _1481 = _1335;
        _1482 = _1334;
        _1483 = _1333;
        _1484 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0)));
        _1485 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0)));
        _1486 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1463 : (isnan(_1463) ? 0.0 : max(_1463, 0.0)));
    }
    else
    {
        _1471 = _1472;
        _1473 = _1472;
        _1474 = _1472;
        _1475 = _1472;
        _1476 = _1472;
        _1477 = _1472;
        _1478 = _1472;
        _1479 = _1472;
        _1480 = _1472;
        _1481 = _1472;
        _1482 = _1472;
        _1483 = _1472;
        _1484 = 0.0;
        _1485 = 0.0;
        _1486 = 0.0;
    }
    float _1778;
    float _1779;
    float _1780;
    float _1781;
    float _1782;
    float _1783;
    float _1784;
    float _1785;
    float _1786;
    float _1787;
    float _1788;
    float _1789;
    float _1790;
    float _1791;
    float _1792;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1509 = fma(_1170, cbModelParam._m0[30u].z, fma(_1166, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1162));
        float _1513 = fma(_1170, cbModelParam._m0[31u].z, fma(_1166, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1162));
        float _1517 = fma(_1170, cbModelParam._m0[32u].z, fma(_1166, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1162));
        float _1540 = _1162 + _885;
        float _1541 = _1166 + _886;
        float _1542 = _1170 + _887;
        float _1552 = fma(_1542, cbModelParam._m0[30u].z, fma(_1541, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1540)) - _1509;
        float _1553 = fma(_1542, cbModelParam._m0[31u].z, fma(_1541, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1540)) - _1513;
        float _1554 = fma(_1542, cbModelParam._m0[32u].z, fma(_1541, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1540)) - _1517;
        float _1558 = inversesqrt(dot(vec3(_1552, _1553, _1554), vec3(_1552, _1553, _1554)));
        float _1571 = ((_1558 * _1552) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1509 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1572 = ((_1558 * _1553) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1513 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1573 = ((_1558 * _1554) / cbModelParam._m0[35u].z) + ((((((_1517 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1575 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1571, _1572, _1573), 0.0);
        vec4 _1582 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1571, _1572, _1573), 0.0);
        vec4 _1589 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1571, _1572, _1573), 0.0);
        vec4 _1596 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1571, _1572, _1573), 0.0);
        float _1608 = exp2((_1575.w + (-0.5)) * 20.0) * 2.0;
        float _1609 = _1608 * (_1575.x + (-0.5));
        float _1610 = _1608 * (_1575.y + (-0.5));
        float _1611 = _1608 * (_1575.z + (-0.5));
        float _1618 = exp2((_1582.w + (-0.5)) * 20.0) * 2.0;
        float _1619 = _1618 * (_1582.x + (-0.5));
        float _1620 = _1618 * (_1582.y + (-0.5));
        float _1621 = _1618 * (_1582.z + (-0.5));
        float _1628 = exp2((_1589.w + (-0.5)) * 20.0) * 2.0;
        float _1629 = _1628 * (_1589.x + (-0.5));
        float _1630 = _1628 * (_1589.y + (-0.5));
        float _1631 = _1628 * (_1589.z + (-0.5));
        float _1638 = exp2((_1596.w + (-0.5)) * 20.0) * 2.0;
        float _1639 = _1638 * (_1596.x + (-0.5));
        float _1640 = _1638 * (_1596.y + (-0.5));
        float _1641 = _1638 * (_1596.z + (-0.5));
        float _1642 = isnan(0.0) ? _1639 : (isnan(_1639) ? 0.0 : max(_1639, 0.0));
        float _1643 = isnan(0.0) ? _1640 : (isnan(_1640) ? 0.0 : max(_1640, 0.0));
        float _1644 = isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0));
        float _1645 = _1609 * 0.5;
        float _1646 = _1619 * 0.5;
        float _1647 = _1629 * 0.5;
        float _1648 = dot(vec3(_1645, _1646, _1647), vec3(_1645, _1646, _1647));
        float _1653 = (_1648 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1648);
        float _1661 = (dot(vec3(_885, _886, _887), vec3(_1653 * _1645, _1653 * _1646, _1653 * _1647)) + 1.0) * 0.5;
        float _4139 = isnan(0.0) ? _1661 : (isnan(_1661) ? 0.0 : max(_1661, 0.0));
        float _1670 = sqrt(((_1646 * _1646) + (_1645 * _1645)) + (_1647 * _1647)) / (_1642 + 9.9999997473787516355514526367188e-06);
        float _4150 = isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0));
        float _1671 = isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0));
        float _1672 = _1671 * 2.0;
        float _1676 = (1.0 - _1671) / (_1671 + 1.0);
        float _4161 = isnan(0.0) ? _1676 : (isnan(_1676) ? 0.0 : max(_1676, 0.0));
        float _1677 = isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0));
        float _1686 = ((((1.0 - _1677) * (_1672 + 2.0)) * exp2(log2(isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0))) * (_1672 + 1.0))) + _1677) * _1642;
        float _1687 = _1610 * 0.5;
        float _1688 = _1620 * 0.5;
        float _1689 = _1630 * 0.5;
        float _1690 = dot(vec3(_1687, _1688, _1689), vec3(_1687, _1688, _1689));
        float _1695 = (_1690 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1690);
        float _1703 = (dot(vec3(_885, _886, _887), vec3(_1695 * _1687, _1695 * _1688, _1695 * _1689)) + 1.0) * 0.5;
        float _4172 = isnan(0.0) ? _1703 : (isnan(_1703) ? 0.0 : max(_1703, 0.0));
        float _1712 = sqrt(((_1688 * _1688) + (_1687 * _1687)) + (_1689 * _1689)) / (_1643 + 9.9999997473787516355514526367188e-06);
        float _4183 = isnan(0.0) ? _1712 : (isnan(_1712) ? 0.0 : max(_1712, 0.0));
        float _1713 = isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0));
        float _1714 = _1713 * 2.0;
        float _1718 = (1.0 - _1713) / (_1713 + 1.0);
        float _4194 = isnan(0.0) ? _1718 : (isnan(_1718) ? 0.0 : max(_1718, 0.0));
        float _1719 = isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0));
        float _1728 = ((((1.0 - _1719) * (_1714 + 2.0)) * exp2(log2(isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0))) * (_1714 + 1.0))) + _1719) * _1643;
        float _1729 = _1611 * 0.5;
        float _1730 = _1621 * 0.5;
        float _1731 = _1631 * 0.5;
        float _1732 = dot(vec3(_1729, _1730, _1731), vec3(_1729, _1730, _1731));
        float _1737 = (_1732 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1732);
        float _1745 = (dot(vec3(_885, _886, _887), vec3(_1737 * _1729, _1737 * _1730, _1737 * _1731)) + 1.0) * 0.5;
        float _4205 = isnan(0.0) ? _1745 : (isnan(_1745) ? 0.0 : max(_1745, 0.0));
        float _1754 = sqrt(((_1730 * _1730) + (_1729 * _1729)) + (_1731 * _1731)) / (_1644 + 9.9999997473787516355514526367188e-06);
        float _4216 = isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0));
        float _1755 = isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0));
        float _1756 = _1755 * 2.0;
        float _1760 = (1.0 - _1755) / (_1755 + 1.0);
        float _4227 = isnan(0.0) ? _1760 : (isnan(_1760) ? 0.0 : max(_1760, 0.0));
        float _1761 = isnan(1.0) ? _4227 : (isnan(_4227) ? 1.0 : min(_4227, 1.0));
        float _1770 = ((((1.0 - _1761) * (_1756 + 2.0)) * exp2(log2(isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0))) * (_1756 + 1.0))) + _1761) * _1644;
        _1778 = _1611;
        _1779 = _1610;
        _1780 = _1609;
        _1781 = _1621;
        _1782 = _1620;
        _1783 = _1619;
        _1784 = _1631;
        _1785 = _1630;
        _1786 = _1629;
        _1787 = _1644;
        _1788 = _1643;
        _1789 = _1642;
        _1790 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0)));
        _1791 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1728 : (isnan(_1728) ? 0.0 : max(_1728, 0.0)));
        _1792 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1770 : (isnan(_1770) ? 0.0 : max(_1770, 0.0)));
    }
    else
    {
        _1778 = _1472;
        _1779 = _1472;
        _1780 = _1472;
        _1781 = _1472;
        _1782 = _1472;
        _1783 = _1472;
        _1784 = _1472;
        _1785 = _1472;
        _1786 = _1472;
        _1787 = _1472;
        _1788 = _1472;
        _1789 = _1472;
        _1790 = 0.0;
        _1791 = 0.0;
        _1792 = 0.0;
    }
    float _1802 = (cbModelParam._m0[1u].x * (_1790 - _1484)) + _1484;
    float _1803 = (cbModelParam._m0[1u].x * (_1791 - _1485)) + _1485;
    float _1804 = (cbModelParam._m0[1u].x * (_1792 - _1486)) + _1486;
    float _1825 = fma(_1804, cbSceneParam._m0[89u].z, fma(_1803, cbSceneParam._m0[89u].y, _1802 * cbSceneParam._m0[89u].x));
    float _1828 = fma(_1804, cbSceneParam._m0[90u].z, fma(_1803, cbSceneParam._m0[90u].y, _1802 * cbSceneParam._m0[90u].x));
    float _1831 = fma(_1804, cbSceneParam._m0[91u].z, fma(_1803, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1802));
    float _1846 = _1108 * 0.5;
    float _1847 = _1109 * 0.5;
    float _1848 = _1110 * 0.5;
    float _1849 = dot(vec4(_1846, _1847, _1848, 1.0), vec4(_1780, _1783, _1786, _1789));
    float _1852 = dot(vec4(_1846, _1847, _1848, 1.0), vec4(_1779, _1782, _1785, _1788));
    float _1855 = dot(vec4(_1846, _1847, _1848, 1.0), vec4(_1778, _1781, _1784, _1787));
    float _1889;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1862 = dot(vec4(_1846, _1847, _1848, 1.0), vec4(_1471, _1475, _1478, _1481));
        float _1866 = dot(vec4(_1846, _1847, _1848, 1.0), vec4(_1473, _1476, _1479, _1482));
        float _1870 = dot(vec4(_1846, _1847, _1848, 1.0), vec4(_1474, _1477, _1480, _1483));
        float _1877 = dot(vec4(cbModelParam._m0[39u]), vec4(_1846, _1847, _1848, 1.0));
        _1889 = dot(vec3(isnan(0.0) ? _1870 : (isnan(_1870) ? 0.0 : max(_1870, 0.0)), isnan(0.0) ? _1866 : (isnan(_1866) ? 0.0 : max(_1866, 0.0)), isnan(0.0) ? _1862 : (isnan(_1862) ? 0.0 : max(_1862, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1877) ? 0.0 : (isnan(0.0) ? _1877 : max(0.0, _1877))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1889 = 1.0;
    }
    float _1900;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1891 = dot(vec4(cbModelParam._m0[40u]), vec4(_1846, _1847, _1848, 1.0));
        _1900 = dot(vec3(isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0)), isnan(0.0) ? _1852 : (isnan(_1852) ? 0.0 : max(_1852, 0.0)), isnan(0.0) ? _1855 : (isnan(_1855) ? 0.0 : max(_1855, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1891) ? 0.0 : (isnan(0.0) ? _1891 : max(0.0, _1891))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1900 = 1.0;
    }
    float _1904 = (_1900 * cbModelParam._m0[1u].x) + (_1889 * (1.0 - cbModelParam._m0[1u].x));
    float _1914 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1015);
    float _1915 = isnan(_1914) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1914 : min(cbModelParam._m0[25u].z, _1914));
    float _1995;
    float _1997;
    float _1999;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1962 = fma(_1170, cbModelParam._m0[13u].z, fma(_1166, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1162)) + cbModelParam._m0[13u].w;
        float _1966 = fma(_1170, cbModelParam._m0[14u].z, fma(_1166, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1162)) + cbModelParam._m0[14u].w;
        float _1970 = fma(_1170, cbModelParam._m0[15u].z, fma(_1166, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1162)) + cbModelParam._m0[15u].w;
        float _1973 = fma(_1110, cbModelParam._m0[13u].z, fma(_1109, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1108));
        float _1976 = fma(_1110, cbModelParam._m0[14u].z, fma(_1109, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1108));
        float _1979 = fma(_1110, cbModelParam._m0[15u].z, fma(_1109, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1108));
        float _2007;
        if (_1973 > 0.0)
        {
            _2007 = abs((1.0 - _1962) / _1973);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1973 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1962 + 1.0) / _1973);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2007 = frontier_phi_14_12_ladder;
        }
        float _2209;
        if (_1976 > 0.0)
        {
            _2209 = abs((1.0 - _1966) / _1976);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1976 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1966 + 1.0) / _1976);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2209 = frontier_phi_23_19_ladder;
        }
        float _2463;
        if (_1979 > 0.0)
        {
            _2463 = abs((1.0 - _1970) / _1979);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1979 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1970 + 1.0) / _1979);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2463 = frontier_phi_35_30_ladder;
        }
        float _2465 = isnan(_2209) ? _2007 : (isnan(_2007) ? _2209 : min(_2007, _2209));
        float _2466 = isnan(_2463) ? _2465 : (isnan(_2465) ? _2463 : min(_2465, _2463));
        float _2470 = (_2466 * _1973) + _1962;
        float _2471 = (_2466 * _1976) + _1966;
        float _2472 = (_2466 * _1979) + _1970;
        float _2473 = _2466 * 9.9999997473787516355514526367188e-05;
        float _2475 = (-1.0) - _2473;
        float _2477 = _2473 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2472 > _2477) || ((_2472 < _2475) || ((_2471 > _2477) || ((_2471 < _2475) || ((_2470 < _2475) || (_2470 > _2477))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2600 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2472, cbModelParam._m0[9u].z, fma(_2471, cbModelParam._m0[9u].y, _2470 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2472, cbModelParam._m0[10u].z, fma(_2471, cbModelParam._m0[10u].y, _2470 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2472, cbModelParam._m0[11u].z, fma(_2471, cbModelParam._m0[11u].y, _2470 * cbModelParam._m0[11u].x))), _1915);
            frontier_phi_13_35_ladder = _2600.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2600.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2600.x * cbModelParam._m0[1u].y;
        }
        _1995 = frontier_phi_13_35_ladder_2;
        _1997 = frontier_phi_13_35_ladder_1;
        _1999 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1983 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1108, _1109, _1110), _1915);
        _1995 = _1983.x * cbModelParam._m0[1u].y;
        _1997 = _1983.y * cbModelParam._m0[1u].y;
        _1999 = _1983.z * cbModelParam._m0[1u].y;
    }
    float _2003 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1015);
    float _2004 = isnan(_2003) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2003 : min(cbModelParam._m0[25u].w, _2003));
    float _2093;
    float _2095;
    float _2097;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2057 = fma(_1170, cbModelParam._m0[21u].z, fma(_1166, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1162)) + cbModelParam._m0[21u].w;
        float _2061 = fma(_1170, cbModelParam._m0[22u].z, fma(_1166, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1162)) + cbModelParam._m0[22u].w;
        float _2065 = fma(_1170, cbModelParam._m0[23u].z, fma(_1166, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1162)) + cbModelParam._m0[23u].w;
        float _2068 = fma(_1110, cbModelParam._m0[21u].z, fma(_1109, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1108));
        float _2071 = fma(_1110, cbModelParam._m0[22u].z, fma(_1109, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1108));
        float _2074 = fma(_1110, cbModelParam._m0[23u].z, fma(_1109, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1108));
        float _2214;
        if (_2068 > 0.0)
        {
            _2214 = abs((1.0 - _2057) / _2068);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2068 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2057 + 1.0) / _2068);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2214 = frontier_phi_25_21_ladder;
        }
        float _2490;
        if (_2071 > 0.0)
        {
            _2490 = abs((1.0 - _2061) / _2071);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2071 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2061 + 1.0) / _2071);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2490 = frontier_phi_37_32_ladder;
        }
        float _2703;
        if (_2074 > 0.0)
        {
            _2703 = abs((1.0 - _2065) / _2074);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2074 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2065 + 1.0) / _2074);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2703 = frontier_phi_46_43_ladder;
        }
        float _2705 = isnan(_2490) ? _2214 : (isnan(_2214) ? _2490 : min(_2214, _2490));
        float _2706 = isnan(_2703) ? _2705 : (isnan(_2705) ? _2703 : min(_2705, _2703));
        float _2710 = (_2706 * _2068) + _2057;
        float _2711 = (_2706 * _2071) + _2061;
        float _2712 = (_2706 * _2074) + _2065;
        float _2713 = _2706 * 9.9999997473787516355514526367188e-05;
        float _2714 = (-1.0) - _2713;
        float _2716 = _2713 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2712 > _2716) || ((_2712 < _2714) || ((_2711 > _2716) || ((_2711 < _2714) || ((_2710 < _2714) || (_2710 > _2716))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2911 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2712, cbModelParam._m0[17u].z, fma(_2711, cbModelParam._m0[17u].y, _2710 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2712, cbModelParam._m0[18u].z, fma(_2711, cbModelParam._m0[18u].y, _2710 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2712, cbModelParam._m0[19u].z, fma(_2711, cbModelParam._m0[19u].y, _2710 * cbModelParam._m0[19u].x))), _2004);
            frontier_phi_22_46_ladder = _2911.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2911.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2911.x * cbModelParam._m0[1u].z;
        }
        _2093 = frontier_phi_22_46_ladder_2;
        _2095 = frontier_phi_22_46_ladder_1;
        _2097 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2077 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1108, _1109, _1110), _2004);
        _2093 = _2077.x * cbModelParam._m0[1u].z;
        _2095 = _2077.y * cbModelParam._m0[1u].z;
        _2097 = _2077.z * cbModelParam._m0[1u].z;
    }
    float _2110 = (((_1133 * _1085) + _1134) * _1100) * ((cbModelParam._m0[1u].w * (_2093 - _1995)) + _1995);
    float _2112 = (((_1133 * _1087) + _1134) * _1100) * ((cbModelParam._m0[1u].w * (_2095 - _1997)) + _1997);
    float _2114 = (((_1133 * _1088) + _1134) * _1100) * ((cbModelParam._m0[1u].w * (_2097 - _1999)) + _1999);
    float _2117 = fma(_2114, cbSceneParam._m0[89u].z, fma(_2112, cbSceneParam._m0[89u].y, _2110 * cbSceneParam._m0[89u].x));
    float _2120 = fma(_2114, cbSceneParam._m0[90u].z, fma(_2112, cbSceneParam._m0[90u].y, _2110 * cbSceneParam._m0[90u].x));
    float _2123 = fma(_2114, cbSceneParam._m0[91u].z, fma(_2112, cbSceneParam._m0[91u].y, _2110 * cbSceneParam._m0[91u].x));
    uvec4 _2133 = floatBitsToUint(cbInstanceData._m0[_1028 + 5u]);
    uint _2135 = _2133.x * 14u;
    uint _2136 = _2135 + 13u;
    float _2143 = _1100 + (-1.0);
    float _2148 = (cbLight._m0[_2136].x * _2143) + 1.0;
    float _2149 = (cbLight._m0[_2136].y * _2143) + 1.0;
    float _2150 = (cbLight._m0[_2136].z * _2143) + 1.0;
    float _2151 = (cbLight._m0[_2136].w * _2143) + 1.0;
    uint _2152 = _2135 + 5u;
    float _2158 = isnan(1.0) ? _2149 : (isnan(_2149) ? 1.0 : min(_2149, 1.0));
    uint _2162 = _2135 + 4u;
    float _2168 = isnan(1.0) ? _2148 : (isnan(_2148) ? 1.0 : min(_2148, 1.0));
    uint _2172 = _2135 | 1u;
    float _2183 = dot(vec3(cbLight._m0[_2135].xyz), vec3(_885, _886, _887));
    float _2186 = dot(vec3(cbLight._m0[_2172].xyz), vec3(_885, _886, _887));
    float _4363 = isnan(0.0) ? _2183 : (isnan(_2183) ? 0.0 : max(_2183, 0.0));
    float _4374 = isnan(0.0) ? _2186 : (isnan(_2186) ? 0.0 : max(_2186, 0.0));
    float _2191 = (isnan(1.0) ? _4363 : (isnan(_4363) ? 1.0 : min(_4363, 1.0))) * 0.3183098733425140380859375;
    float _2193 = (isnan(1.0) ? _4374 : (isnan(_4374) ? 1.0 : min(_4374, 1.0))) * 0.3183098733425140380859375;
    float _2200 = ((cbLight._m0[_2152].x * _2158) * _2193) + ((cbLight._m0[_2162].x * _2168) * _2191);
    float _2201 = ((_2158 * cbLight._m0[_2152].y) * _2193) + ((_2168 * cbLight._m0[_2162].y) * _2191);
    float _2202 = ((_2158 * cbLight._m0[_2152].z) * _2193) + ((_2168 * cbLight._m0[_2162].z) * _2191);
    uvec4 _2206 = floatBitsToUint(cbLight._m0[_2135 + 12u]);
    bool _2208 = _2206.x == 0u;
    float _2219;
    float _2221;
    float _2223;
    if (_2208)
    {
        _2219 = _2200;
        _2221 = _2201;
        _2223 = _2202;
    }
    else
    {
        uint _2227 = _2135 + 6u;
        float _2243 = (dot(vec3(cbLight._m0[_2135 + 2u].xyz), vec3(_885, _886, _887)) * 0.5) + 0.5;
        float _2244 = _2243 * _2243;
        float _4385 = isnan(0.0) ? _2244 : (isnan(_2244) ? 0.0 : max(_2244, 0.0));
        float _2245 = isnan(1.0) ? _4385 : (isnan(_4385) ? 1.0 : min(_4385, 1.0));
        float _2246 = isnan(1.0) ? _2150 : (isnan(_2150) ? 1.0 : min(_2150, 1.0));
        _2219 = (((cbLight._m0[_2227].x * 0.3183098733425140380859375) * _2245) * _2246) + _2200;
        _2221 = (((cbLight._m0[_2227].y * 0.3183098733425140380859375) * _2245) * _2246) + _2201;
        _2223 = (((cbLight._m0[_2227].z * 0.3183098733425140380859375) * _2245) * _2246) + _2202;
    }
    bool _2226 = _2206.y == 0u;
    float _2264;
    float _2266;
    float _2268;
    if (_2226)
    {
        _2264 = _2219;
        _2266 = _2221;
        _2268 = _2223;
    }
    else
    {
        uint _2434 = _2135 + 7u;
        float _2450 = (dot(vec3(cbLight._m0[_2135 + 3u].xyz), vec3(_885, _886, _887)) * 0.5) + 0.5;
        float _2451 = _2450 * _2450;
        float _4401 = isnan(0.0) ? _2451 : (isnan(_2451) ? 0.0 : max(_2451, 0.0));
        float _2452 = isnan(1.0) ? _4401 : (isnan(_4401) ? 1.0 : min(_4401, 1.0));
        float _2453 = isnan(1.0) ? _2151 : (isnan(_2151) ? 1.0 : min(_2151, 1.0));
        _2264 = (((cbLight._m0[_2434].x * 0.3183098733425140380859375) * _2452) * _2453) + _2219;
        _2266 = (((cbLight._m0[_2434].y * 0.3183098733425140380859375) * _2452) * _2453) + _2221;
        _2268 = (((cbLight._m0[_2434].z * 0.3183098733425140380859375) * _2452) * _2453) + _2223;
    }
    uint _2271 = _2135 + 8u;
    float _2284 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2135].w)) * _1015) * 0.949999988079071044921875);
    float _2285 = _2284 * _2284;
    float _2286 = cbLight._m0[_2135].x + _965;
    float _2287 = cbLight._m0[_2135].y + _966;
    float _2288 = cbLight._m0[_2135].z + _967;
    float _2292 = inversesqrt(dot(vec3(_2286, _2287, _2288), vec3(_2286, _2287, _2288)));
    float _2293 = _2292 * _2286;
    float _2294 = _2292 * _2287;
    float _2295 = _2292 * _2288;
    float _2296 = dot(vec3(_885, _886, _887), vec3(cbLight._m0[_2135].xyz));
    float _4417 = isnan(0.0) ? _2296 : (isnan(_2296) ? 0.0 : max(_2296, 0.0));
    float _2299 = isnan(1.0) ? _4417 : (isnan(_4417) ? 1.0 : min(_4417, 1.0));
    float _4428 = isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0));
    float _2300 = isnan(1.0) ? _4428 : (isnan(_4428) ? 1.0 : min(_4428, 1.0));
    float _2301 = dot(vec3(_885, _886, _887), vec3(_2293, _2294, _2295));
    float _4439 = isnan(0.0) ? _2301 : (isnan(_2301) ? 0.0 : max(_2301, 0.0));
    float _2304 = isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0));
    float _2305 = dot(vec3(cbLight._m0[_2135].xyz), vec3(_2293, _2294, _2295));
    float _4450 = isnan(0.0) ? _2305 : (isnan(_2305) ? 0.0 : max(_2305, 0.0));
    float _2309 = _2285 * _2285;
    float _2313 = ((_2304 * _2304) * (_2309 + (-1.0))) + 1.0;
    float _2321 = exp2(log2(1.0 - (isnan(1.0) ? _4450 : (isnan(_4450) ? 1.0 : min(_4450, 1.0)))) * 5.0);
    float _2322 = 0.959999978542327880859375 - _1082;
    float _2324 = 0.959999978542327880859375 - _1083;
    float _2325 = 0.959999978542327880859375 - _1084;
    float _2332 = 1.0 - _2285;
    float _2343 = (0.5 / (((_2300 * ((_2299 * _2332) + _2285)) + 9.9999999392252902907785028219223e-09) + (((_2300 * _2332) + _2285) * _2299))) * _2299;
    float _4461 = isnan(0.0) ? _2343 : (isnan(_2343) ? 0.0 : max(_2343, 0.0));
    float _2345 = (isnan(1.0) ? _4461 : (isnan(_4461) ? 1.0 : min(_4461, 1.0))) * (_2309 / ((_2313 * _2313) * 3.141590118408203125));
    uint _2356 = _2135 + 9u;
    float _2367 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2172].w)) * _1015) * 0.949999988079071044921875);
    float _2368 = _2367 * _2367;
    float _2369 = cbLight._m0[_2172].x + _965;
    float _2370 = cbLight._m0[_2172].y + _966;
    float _2371 = cbLight._m0[_2172].z + _967;
    float _2375 = inversesqrt(dot(vec3(_2369, _2370, _2371), vec3(_2369, _2370, _2371)));
    float _2376 = _2375 * _2369;
    float _2377 = _2375 * _2370;
    float _2378 = _2375 * _2371;
    float _2379 = dot(vec3(_885, _886, _887), vec3(cbLight._m0[_2172].xyz));
    float _4472 = isnan(0.0) ? _2379 : (isnan(_2379) ? 0.0 : max(_2379, 0.0));
    float _2382 = isnan(1.0) ? _4472 : (isnan(_4472) ? 1.0 : min(_4472, 1.0));
    float _2383 = dot(vec3(_885, _886, _887), vec3(_2376, _2377, _2378));
    float _4483 = isnan(0.0) ? _2383 : (isnan(_2383) ? 0.0 : max(_2383, 0.0));
    float _2386 = isnan(1.0) ? _4483 : (isnan(_4483) ? 1.0 : min(_4483, 1.0));
    float _2387 = dot(vec3(cbLight._m0[_2172].xyz), vec3(_2376, _2377, _2378));
    float _4494 = isnan(0.0) ? _2387 : (isnan(_2387) ? 0.0 : max(_2387, 0.0));
    float _2391 = _2368 * _2368;
    float _2395 = ((_2386 * _2386) * (_2391 + (-1.0))) + 1.0;
    float _2402 = exp2(log2(1.0 - (isnan(1.0) ? _4494 : (isnan(_4494) ? 1.0 : min(_4494, 1.0)))) * 5.0);
    float _2409 = 1.0 - _2368;
    float _2419 = (0.5 / (((_2300 * ((_2382 * _2409) + _2368)) + 9.9999999392252902907785028219223e-09) + (((_2300 * _2409) + _2368) * _2382))) * _2382;
    float _4505 = isnan(0.0) ? _2419 : (isnan(_2419) ? 0.0 : max(_2419, 0.0));
    float _2421 = (isnan(1.0) ? _4505 : (isnan(_4505) ? 1.0 : min(_4505, 1.0))) * (_2391 / ((_2395 * _2395) * 3.141590118408203125));
    float _2431 = (((((_2402 * _2322) + _1085) * cbLight._m0[_2356].x) * _2421) * _2158) + (((((_2321 * _2322) + _1085) * cbLight._m0[_2271].x) * _2345) * _2168);
    float _2432 = (((((_2402 * _2324) + _1087) * cbLight._m0[_2356].y) * _2421) * _2158) + (((((_2321 * _2324) + _1087) * cbLight._m0[_2271].y) * _2345) * _2168);
    float _2433 = (((((_2402 * _2325) + _1088) * cbLight._m0[_2356].z) * _2421) * _2158) + (((((_2321 * _2325) + _1088) * cbLight._m0[_2271].z) * _2345) * _2168);
    float _2495;
    float _2497;
    float _2499;
    if (_2208)
    {
        _2495 = _2431;
        _2497 = _2432;
        _2499 = _2433;
    }
    else
    {
        uint _2501 = _2135 + 2u;
        uint _2505 = _2135 + 10u;
        float _2519 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2501].w)) * _1015) * 0.949999988079071044921875);
        float _2520 = _2519 * _2519;
        float _2521 = cbLight._m0[_2501].x + _965;
        float _2522 = cbLight._m0[_2501].y + _966;
        float _2523 = cbLight._m0[_2501].z + _967;
        float _2527 = inversesqrt(dot(vec3(_2521, _2522, _2523), vec3(_2521, _2522, _2523)));
        float _2528 = _2527 * _2521;
        float _2529 = _2527 * _2522;
        float _2530 = _2527 * _2523;
        float _2531 = dot(vec3(_885, _886, _887), vec3(cbLight._m0[_2501].xyz));
        float _4516 = isnan(0.0) ? _2531 : (isnan(_2531) ? 0.0 : max(_2531, 0.0));
        float _2534 = isnan(1.0) ? _4516 : (isnan(_4516) ? 1.0 : min(_4516, 1.0));
        float _2535 = dot(vec3(_885, _886, _887), vec3(_2528, _2529, _2530));
        float _4527 = isnan(0.0) ? _2535 : (isnan(_2535) ? 0.0 : max(_2535, 0.0));
        float _2538 = isnan(1.0) ? _4527 : (isnan(_4527) ? 1.0 : min(_4527, 1.0));
        float _2539 = dot(vec3(cbLight._m0[_2501].xyz), vec3(_2528, _2529, _2530));
        float _4538 = isnan(0.0) ? _2539 : (isnan(_2539) ? 0.0 : max(_2539, 0.0));
        float _2543 = _2520 * _2520;
        float _2547 = ((_2538 * _2538) * (_2543 + (-1.0))) + 1.0;
        float _2554 = exp2(log2(1.0 - (isnan(1.0) ? _4538 : (isnan(_4538) ? 1.0 : min(_4538, 1.0)))) * 5.0);
        float _2561 = 1.0 - _2520;
        float _2571 = (0.5 / (((_2300 * ((_2534 * _2561) + _2520)) + 9.9999999392252902907785028219223e-09) + (((_2300 * _2561) + _2520) * _2534))) * _2534;
        float _4549 = isnan(0.0) ? _2571 : (isnan(_2571) ? 0.0 : max(_2571, 0.0));
        float _2573 = (isnan(1.0) ? _4549 : (isnan(_4549) ? 1.0 : min(_4549, 1.0))) * (_2543 / ((_2547 * _2547) * 3.141590118408203125));
        float _2574 = isnan(1.0) ? _2150 : (isnan(_2150) ? 1.0 : min(_2150, 1.0));
        _2495 = (((((_2554 * _2322) + _1085) * cbLight._m0[_2505].x) * _2573) * _2574) + _2431;
        _2497 = (((((_2554 * _2324) + _1087) * cbLight._m0[_2505].y) * _2573) * _2574) + _2432;
        _2499 = (((((_2554 * _2325) + _1088) * cbLight._m0[_2505].z) * _2573) * _2574) + _2433;
    }
    float _2609;
    float _2611;
    float _2613;
    if (_2226)
    {
        _2609 = _2495;
        _2611 = _2497;
        _2613 = _2499;
    }
    else
    {
        uint _2620 = _2135 + 3u;
        uint _2624 = _2135 + 11u;
        float _2638 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2620].w)) * _1015) * 0.949999988079071044921875);
        float _2639 = _2638 * _2638;
        float _2640 = cbLight._m0[_2620].x + _965;
        float _2641 = cbLight._m0[_2620].y + _966;
        float _2642 = cbLight._m0[_2620].z + _967;
        float _2646 = inversesqrt(dot(vec3(_2640, _2641, _2642), vec3(_2640, _2641, _2642)));
        float _2647 = _2646 * _2640;
        float _2648 = _2646 * _2641;
        float _2649 = _2646 * _2642;
        float _2650 = dot(vec3(_885, _886, _887), vec3(cbLight._m0[_2620].xyz));
        float _4565 = isnan(0.0) ? _2650 : (isnan(_2650) ? 0.0 : max(_2650, 0.0));
        float _2653 = isnan(1.0) ? _4565 : (isnan(_4565) ? 1.0 : min(_4565, 1.0));
        float _2654 = dot(vec3(_885, _886, _887), vec3(_2647, _2648, _2649));
        float _4576 = isnan(0.0) ? _2654 : (isnan(_2654) ? 0.0 : max(_2654, 0.0));
        float _2657 = isnan(1.0) ? _4576 : (isnan(_4576) ? 1.0 : min(_4576, 1.0));
        float _2658 = dot(vec3(cbLight._m0[_2620].xyz), vec3(_2647, _2648, _2649));
        float _4587 = isnan(0.0) ? _2658 : (isnan(_2658) ? 0.0 : max(_2658, 0.0));
        float _2662 = _2639 * _2639;
        float _2666 = ((_2657 * _2657) * (_2662 + (-1.0))) + 1.0;
        float _2673 = exp2(log2(1.0 - (isnan(1.0) ? _4587 : (isnan(_4587) ? 1.0 : min(_4587, 1.0)))) * 5.0);
        float _2680 = 1.0 - _2639;
        float _2690 = (0.5 / (((_2300 * ((_2653 * _2680) + _2639)) + 9.9999999392252902907785028219223e-09) + (((_2300 * _2680) + _2639) * _2653))) * _2653;
        float _4598 = isnan(0.0) ? _2690 : (isnan(_2690) ? 0.0 : max(_2690, 0.0));
        float _2692 = (isnan(1.0) ? _4598 : (isnan(_4598) ? 1.0 : min(_4598, 1.0))) * (_2662 / ((_2666 * _2666) * 3.141590118408203125));
        float _2693 = isnan(1.0) ? _2151 : (isnan(_2151) ? 1.0 : min(_2151, 1.0));
        _2609 = (((((_2673 * _2322) + _1085) * cbLight._m0[_2624].x) * _2692) * _2693) + _2495;
        _2611 = (((((_2673 * _2324) + _1087) * cbLight._m0[_2624].y) * _2692) * _2693) + _2497;
        _2613 = (((((_2673 * _2325) + _1088) * cbLight._m0[_2624].z) * _2692) * _2693) + _2499;
    }
    float _2828;
    float _2830;
    float _2832;
    float _2834;
    float _2836;
    float _2838;
    if (_2133.y == 0u)
    {
        float _2768 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2769 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2768;
        float _2770 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2768;
        float _2771 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2768;
        uvec4 _2783 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2784 = _2783.x;
        uint _2795 = uint((float(_2783.y) * floor(float(uint(cbSceneParam._m0[85u].y * _974) / _2784))) + floor(float(uint(cbSceneParam._m0[85u].x * _973) / _2784)));
        float _2805 = (log2(_2771 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2806 = isnan(0.0) ? _2805 : (isnan(_2805) ? 0.0 : max(_2805, 0.0));
        uint _2809 = uint(isnan(14.0) ? _2806 : (isnan(_2806) ? 14.0 : min(_2806, 14.0)));
        uvec4 _2814 = texelFetch(g_lightClusterGridBuffer, int(((_2809 << 2u) + (_2795 << 6u)) >> 2u));
        uint _2815 = _2814.x;
        uint _2816 = _2783.z;
        float _2916;
        float _2918;
        float _2920;
        float _2922;
        float _2924;
        float _2926;
        if (((((1u << ((_2816 >> 4u) & 15u)) + 4294967295u) & _2815) == 0u) || ((_2816 & 240u) == 0u))
        {
            _2916 = 0.0;
            _2918 = 0.0;
            _2920 = 0.0;
            _2922 = 0.0;
            _2924 = 0.0;
            _2926 = 0.0;
        }
        else
        {
            float _2917;
            float _2919;
            float _2921;
            float _2923;
            float _2925;
            float _2927;
            float _3061 = 0.0;
            float _3062 = 0.0;
            float _3063 = 0.0;
            float _3064 = 0.0;
            float _3065 = 0.0;
            float _3066 = 0.0;
            uint _3067 = 0u;
            uint _3076;
            bool _3077;
            for (;;)
            {
                _3076 = texelFetch(g_lightClassification, int((((_2809 << 5u) + (_2795 << 9u)) + (_3067 << 2u)) >> 2u)).x;
                _3077 = _3076 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3077)
                {
                    frontier_phi_61_pred = _3061;
                    frontier_phi_61_pred_1 = _3066;
                    frontier_phi_61_pred_2 = _3065;
                    frontier_phi_61_pred_3 = _3064;
                    frontier_phi_61_pred_4 = _3063;
                    frontier_phi_61_pred_5 = _3062;
                }
                else
                {
                    float _3185;
                    float _3186;
                    float _3187;
                    float _3188;
                    float _3189;
                    float _3190;
                    uint _3191;
                    _3185 = _3061;
                    _3186 = _3062;
                    _3187 = _3063;
                    _3188 = _3064;
                    _3189 = _3065;
                    _3190 = _3066;
                    _3191 = _3076;
                    float _3117;
                    float _3118;
                    float _3119;
                    float _3120;
                    float _3121;
                    float _3122;
                    for (;;)
                    {
                        uint _3195 = uint(findLSB(_3191)) + (_3067 << 5u);
                        uint _3192 = (_3191 + 4294967295u) & _3191;
                        uint _3197 = _3195 * 48u;
                        vec4 _3211 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3197)).x, texelFetch(g_PointLightRenderingBuffer, int(_3197 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3197 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3197 + 3u)).x));
                        uint _3217 = (_3195 * 48u) + 4u;
                        vec4 _3230 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3217)).x, texelFetch(g_PointLightRenderingBuffer, int(_3217 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3217 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3217 + 3u)).x));
                        uint _3236 = (_3195 * 48u) + 8u;
                        vec3 _3247 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3236)).x, texelFetch(g_PointLightRenderingBuffer, int(_3236 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3236 + 2u)).x));
                        float _3251 = _3211.x - _2769;
                        float _3252 = _3211.y - _2770;
                        float _3253 = _3211.z - _2771;
                        float _3254 = dot(vec3(_3251, _3252, _3253), vec3(_3251, _3252, _3253));
                        float _3257 = inversesqrt(_3254);
                        float _3258 = _3257 * _3251;
                        float _3259 = _3257 * _3252;
                        float _3260 = _3257 * _3253;
                        float _3261 = dot(vec3(_996, _999, _1002), vec3(_3258, _3259, _3260));
                        float _3266 = 1.0 - (_3254 * _3211.w);
                        float _4624 = isnan(0.0) ? _3266 : (isnan(_3266) ? 0.0 : max(_3266, 0.0));
                        float _3267 = isnan(1.0) ? _4624 : (isnan(_4624) ? 1.0 : min(_4624, 1.0));
                        float _3268 = sqrt(_3254) * _3230.w;
                        float _3271 = 1.39999997615814208984375 / (_3268 + 1.39999997615814208984375);
                        float _3272 = _3271 * _3271;
                        float _3275 = ((1.0 - _3272) * _3261) + _3272;
                        float _3278 = _3268 * _3268;
                        float _3282 = ((isnan(0.0) ? _3275 : (isnan(_3275) ? 0.0 : max(_3275, 0.0))) * _3267) / ((_3278 * 0.699999988079071044921875) + 1.0);
                        float _3286 = (-0.0) - _2769;
                        float _3287 = (-0.0) - _2770;
                        float _3288 = (-0.0) - _2771;
                        float _3292 = inversesqrt(dot(vec3(_3286, _3287, _3288), vec3(_3286, _3287, _3288)));
                        float _3293 = _3292 * _3286;
                        float _3294 = _3292 * _3287;
                        float _3295 = _3292 * _3288;
                        float _3303 = exp2(log2(1.0 / ((_3278 * 3.5) + 5.0)) * 0.25);
                        float _3304 = 1.0 - _1116;
                        float _3311 = sqrt(1.0 - ((1.0 - (_3304 * _3304)) * (1.0 - (_3303 * _3303))));
                        float _3312 = _3311 * _3311;
                        float _3313 = _3312 * _3312;
                        float _3314 = _3293 + _3258;
                        float _3315 = _3294 + _3259;
                        float _3316 = _3295 + _3260;
                        float _3320 = inversesqrt(dot(vec3(_3314, _3315, _3316), vec3(_3314, _3315, _3316)));
                        float _3324 = dot(vec3(_996, _999, _1002), vec3(_3293, _3294, _3295));
                        float _4640 = isnan(0.0) ? _3324 : (isnan(_3324) ? 0.0 : max(_3324, 0.0));
                        float _3327 = isnan(1.0) ? _4640 : (isnan(_4640) ? 1.0 : min(_4640, 1.0));
                        float _3328 = dot(vec3(_996, _999, _1002), vec3(_3320 * _3314, _3320 * _3315, _3320 * _3316));
                        float _4651 = isnan(0.0) ? _3328 : (isnan(_3328) ? 0.0 : max(_3328, 0.0));
                        float _3331 = isnan(1.0) ? _4651 : (isnan(_4651) ? 1.0 : min(_4651, 1.0));
                        float _3335 = ((_3331 * _3331) * (_3313 + (-1.0))) + 1.0;
                        float _3336 = _3271 * _3312;
                        float _3337 = _3336 * _3336;
                        float _3340 = ((1.0 - _3337) * _3261) + _3337;
                        float _4662 = isnan(0.0) ? _3340 : (isnan(_3340) ? 0.0 : max(_3340, 0.0));
                        float _3341 = isnan(1.0) ? _4662 : (isnan(_4662) ? 1.0 : min(_4662, 1.0));
                        float _3342 = 1.0 - _3312;
                        float _3352 = (0.5 / (((_3341 * ((_3327 * _3342) + _3312)) + 9.9999999392252902907785028219223e-09) + (((_3341 * _3342) + _3312) * _3327))) * _3341;
                        float _4673 = isnan(0.0) ? _3352 : (isnan(_3352) ? 0.0 : max(_3352, 0.0));
                        float _3363 = (((_3313 * 3.1415927410125732421875) * (isnan(1.0) ? _4673 : (isnan(_4673) ? 1.0 : min(_4673, 1.0)))) / ((_3335 * _3335) * ((_3278 * 2.1991131305694580078125) + 3.141590118408203125))) * _3267;
                        _3120 = (_3282 * _3230.x) + _3188;
                        _3121 = (_3282 * _3230.y) + _3189;
                        _3122 = (_3282 * _3230.z) + _3190;
                        _3117 = (_3363 * _3247.x) + _3185;
                        _3118 = (_3363 * _3247.y) + _3186;
                        _3119 = (_3363 * _3247.z) + _3187;
                        if (_3192 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3185 = _3117;
                            _3186 = _3118;
                            _3187 = _3119;
                            _3188 = _3120;
                            _3189 = _3121;
                            _3190 = _3122;
                            _3191 = _3192;
                        }
                    }
                    frontier_phi_61_pred = _3117;
                    frontier_phi_61_pred_1 = _3122;
                    frontier_phi_61_pred_2 = _3121;
                    frontier_phi_61_pred_3 = _3120;
                    frontier_phi_61_pred_4 = _3119;
                    frontier_phi_61_pred_5 = _3118;
                }
                _2917 = frontier_phi_61_pred;
                _2927 = frontier_phi_61_pred_1;
                _2925 = frontier_phi_61_pred_2;
                _2923 = frontier_phi_61_pred_3;
                _2921 = frontier_phi_61_pred_4;
                _2919 = frontier_phi_61_pred_5;
                uint _3068 = _3067 + 1u;
                if (_3068 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3061 = _2917;
                    _3062 = _2919;
                    _3063 = _2921;
                    _3064 = _2923;
                    _3065 = _2925;
                    _3066 = _2927;
                    _3067 = _3068;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2916 = _2917;
            _2918 = _2919;
            _2920 = _2921;
            _2922 = _2923;
            _2924 = _2925;
            _2926 = _2927;
        }
        uvec4 _2930 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2931 = _2930.z;
        uint _2933 = (_2931 >> 8u) & 15u;
        float _3029;
        float _3031;
        float _3033;
        float _3035;
        float _3037;
        float _3039;
        if (((4294967295u << _2933) & _2815) == 0u)
        {
            _3029 = _2916;
            _3031 = _2918;
            _3033 = _2920;
            _3035 = _2922;
            _3037 = _2924;
            _3039 = _2926;
        }
        else
        {
            float _3054 = inversesqrt(dot(vec3(_2769, _2770, _2771), vec3(_2769, _2770, _2771)));
            float _3055 = _3054 * _2769;
            float _3056 = _3054 * _2770;
            float _3057 = _3054 * _2771;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2933 < ((_2931 >> 12u) & 15u))
            {
                float _3030;
                float _3032;
                float _3034;
                float _3036;
                float _3038;
                float _3040;
                float _3168 = _2916;
                float _3169 = _2918;
                float _3170 = _2920;
                float _3171 = _2922;
                float _3172 = _2924;
                float _3173 = _2926;
                uint _3174 = _2933;
                uint _3183;
                bool _3184;
                for (;;)
                {
                    _3183 = texelFetch(g_lightClassification, int((((_2809 << 5u) + (_2795 << 9u)) + (_3174 << 2u)) >> 2u)).x;
                    _3184 = _3183 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3184)
                    {
                        frontier_phi_67_pred = _3171;
                        frontier_phi_67_pred_1 = _3172;
                        frontier_phi_67_pred_2 = _3173;
                        frontier_phi_67_pred_3 = _3170;
                        frontier_phi_67_pred_4 = _3169;
                        frontier_phi_67_pred_5 = _3168;
                    }
                    else
                    {
                        float _3368;
                        float _3369;
                        float _3370;
                        float _3371;
                        float _3372;
                        float _3373;
                        float _3661;
                        float _3662;
                        float _3663;
                        float _3664;
                        float _3665;
                        float _3666;
                        float _3381 = _3168;
                        float _3382 = _3169;
                        float _3383 = _3170;
                        float _3384 = _3171;
                        float _3385 = _3172;
                        float _3386 = _3173;
                        uint _3387 = _3183;
                        uint _3388;
                        vec4 _3413;
                        float _3414;
                        vec4 _3429;
                        vec3 _3441;
                        vec4 _3456;
                        vec4 _3471;
                        float _3517;
                        bool _3518;
                        for (;;)
                        {
                            uint _3398 = ((_3174 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3387));
                            _3388 = (_3387 + 4294967295u) & _3387;
                            uint _3400 = _3398 * 40u;
                            _3413 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3400)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3400 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3400 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3400 + 3u)).x));
                            _3414 = _3413.w;
                            uint _3416 = (_3398 * 40u) + 4u;
                            _3429 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3416)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3416 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3416 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3416 + 3u)).x));
                            uint _3431 = (_3398 * 40u) + 8u;
                            _3441 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3431)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3431 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3431 + 2u)).x));
                            uint _3443 = (_3398 * 40u) + 16u;
                            _3456 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3443)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3443 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3443 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3443 + 3u)).x));
                            uint _3458 = (_3398 * 40u) + 20u;
                            _3471 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3458)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3458 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3458 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3458 + 3u)).x));
                            uint _3473 = (_3398 * 40u) + 24u;
                            vec4 _3486 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3473)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3473 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3473 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3473 + 3u)).x));
                            uint _3492 = (_3398 * 40u) + 28u;
                            vec4 _3505 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3492)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3492 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3492 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3492 + 3u)).x));
                            _3517 = fma(_2771, _3505.z, fma(_2770, _3505.y, _3505.x * _2769)) + _3505.w;
                            _3518 = !((fma(_2771, _3486.z, fma(_2770, _3486.y, _3486.x * _2769)) + _3486.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3518)
                            {
                                float _3545 = _3413.x - _2769;
                                float _3546 = _3413.y - _2770;
                                float _3547 = _3413.z - _2771;
                                float _3548 = dot(vec3(_3545, _3546, _3547), vec3(_3545, _3546, _3547));
                                float _3551 = inversesqrt(_3548);
                                float _3552 = _3551 * _3545;
                                float _3553 = _3551 * _3546;
                                float _3554 = _3551 * _3547;
                                float _3558 = 1.0 - (_3548 / (_3414 * _3414));
                                float _4684 = isnan(0.0) ? _3558 : (isnan(_3558) ? 0.0 : max(_3558, 0.0));
                                float _3559 = isnan(1.0) ? _4684 : (isnan(_4684) ? 1.0 : min(_4684, 1.0));
                                float _3563 = sqrt(_3548) * _3429.w;
                                float _3565 = 1.39999997615814208984375 / (_3563 + 1.39999997615814208984375);
                                float _3566 = _3565 * _3565;
                                float _3569 = ((1.0 - _3566) * dot(vec3(_3552, _3553, _3554), vec3(_996, _999, _1002))) + _3566;
                                float _3572 = _3563 * _3563;
                                float _3576 = (fma(_2771, _3456.z, fma(_2770, _3456.y, _3456.x * _2769)) + _3456.w) / _3517;
                                float _3577 = (fma(_2771, _3471.z, fma(_2770, _3471.y, _3471.x * _2769)) + _3471.w) / _3517;
                                float _3581 = 1.0 - dot(vec2(_3576, _3577), vec2(_3576, _3577));
                                float _4700 = isnan(0.0) ? _3581 : (isnan(_3581) ? 0.0 : max(_3581, 0.0));
                                float _3582 = isnan(1.0) ? _4700 : (isnan(_4700) ? 1.0 : min(_4700, 1.0));
                                float _3583 = _3582 * (((isnan(0.0) ? _3569 : (isnan(_3569) ? 0.0 : max(_3569, 0.0))) * _3559) / ((_3572 * 0.699999988079071044921875) + 1.0));
                                float _3595 = exp2(log2(1.0 / ((_3572 * 3.5) + 5.0)) * 0.25);
                                float _3596 = 1.0 - _1116;
                                float _3603 = sqrt(1.0 - ((1.0 - (_3596 * _3596)) * (1.0 - (_3595 * _3595))));
                                float _3604 = _3603 * _3603;
                                float _3605 = _3604 * _3604;
                                float _3606 = _3552 - _3055;
                                float _3607 = _3553 - _3056;
                                float _3608 = _3554 - _3057;
                                float _3612 = inversesqrt(dot(vec3(_3606, _3607, _3608), vec3(_3606, _3607, _3608)));
                                float _3616 = dot(vec3(_996, _999, _1002), vec3((-0.0) - _3055, (-0.0) - _3056, (-0.0) - _3057));
                                float _4711 = isnan(0.0) ? _3616 : (isnan(_3616) ? 0.0 : max(_3616, 0.0));
                                float _3619 = isnan(1.0) ? _4711 : (isnan(_4711) ? 1.0 : min(_4711, 1.0));
                                float _3620 = dot(vec3(_996, _999, _1002), vec3(_3612 * _3606, _3612 * _3607, _3612 * _3608));
                                float _4722 = isnan(0.0) ? _3620 : (isnan(_3620) ? 0.0 : max(_3620, 0.0));
                                float _3623 = isnan(1.0) ? _4722 : (isnan(_4722) ? 1.0 : min(_4722, 1.0));
                                float _3627 = ((_3623 * _3623) * (_3605 + (-1.0))) + 1.0;
                                float _3628 = _3565 * _3604;
                                float _3629 = _3628 * _3628;
                                float _3635 = ((1.0 - _3629) * dot(vec3(_996, _999, _1002), vec3(_3552, _3553, _3554))) + _3629;
                                float _4733 = isnan(0.0) ? _3635 : (isnan(_3635) ? 0.0 : max(_3635, 0.0));
                                float _3636 = isnan(1.0) ? _4733 : (isnan(_4733) ? 1.0 : min(_4733, 1.0));
                                float _3637 = 1.0 - _3604;
                                float _3647 = (0.5 / (((_3636 * ((_3619 * _3637) + _3604)) + 9.9999999392252902907785028219223e-09) + (((_3636 * _3637) + _3604) * _3619))) * _3636;
                                float _4744 = isnan(0.0) ? _3647 : (isnan(_3647) ? 0.0 : max(_3647, 0.0));
                                float _3657 = (_3582 * _3559) * (((_3605 * 3.1415927410125732421875) * (isnan(1.0) ? _4744 : (isnan(_4744) ? 1.0 : min(_4744, 1.0)))) / ((_3627 * _3627) * ((_3572 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3657 * _3441.x;
                                frontier_phi_73_pred_1 = _3657 * _3441.y;
                                frontier_phi_73_pred_2 = _3583 * _3429.z;
                                frontier_phi_73_pred_3 = _3583 * _3429.y;
                                frontier_phi_73_pred_4 = _3583 * _3429.x;
                                frontier_phi_73_pred_5 = _3657 * _3441.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3661 = frontier_phi_73_pred;
                            _3662 = frontier_phi_73_pred_1;
                            _3666 = frontier_phi_73_pred_2;
                            _3665 = frontier_phi_73_pred_3;
                            _3664 = frontier_phi_73_pred_4;
                            _3663 = frontier_phi_73_pred_5;
                            _3371 = _3664 + _3384;
                            _3372 = _3665 + _3385;
                            _3373 = _3666 + _3386;
                            _3368 = _3661 + _3381;
                            _3369 = _3662 + _3382;
                            _3370 = _3663 + _3383;
                            if (_3388 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3381 = _3368;
                                _3382 = _3369;
                                _3383 = _3370;
                                _3384 = _3371;
                                _3385 = _3372;
                                _3386 = _3373;
                                _3387 = _3388;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3371;
                        frontier_phi_67_pred_1 = _3372;
                        frontier_phi_67_pred_2 = _3373;
                        frontier_phi_67_pred_3 = _3370;
                        frontier_phi_67_pred_4 = _3369;
                        frontier_phi_67_pred_5 = _3368;
                    }
                    _3036 = frontier_phi_67_pred;
                    _3038 = frontier_phi_67_pred_1;
                    _3040 = frontier_phi_67_pred_2;
                    _3034 = frontier_phi_67_pred_3;
                    _3032 = frontier_phi_67_pred_4;
                    _3030 = frontier_phi_67_pred_5;
                    uint _3175 = _3174 + 1u;
                    if (_3175 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3168 = _3030;
                        _3169 = _3032;
                        _3170 = _3034;
                        _3171 = _3036;
                        _3172 = _3038;
                        _3173 = _3040;
                        _3174 = _3175;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3038;
                frontier_phi_55_56_ladder_1 = _3040;
                frontier_phi_55_56_ladder_2 = _3036;
                frontier_phi_55_56_ladder_3 = _3034;
                frontier_phi_55_56_ladder_4 = _3032;
                frontier_phi_55_56_ladder_5 = _3030;
            }
            else
            {
                frontier_phi_55_56_ladder = _2924;
                frontier_phi_55_56_ladder_1 = _2926;
                frontier_phi_55_56_ladder_2 = _2922;
                frontier_phi_55_56_ladder_3 = _2920;
                frontier_phi_55_56_ladder_4 = _2918;
                frontier_phi_55_56_ladder_5 = _2916;
            }
            _3029 = frontier_phi_55_56_ladder_5;
            _3031 = frontier_phi_55_56_ladder_4;
            _3033 = frontier_phi_55_56_ladder_3;
            _3035 = frontier_phi_55_56_ladder_2;
            _3037 = frontier_phi_55_56_ladder;
            _3039 = frontier_phi_55_56_ladder_1;
        }
        float _3044 = isnan(1.0) ? _1100 : (isnan(_1100) ? 1.0 : min(_1100, 1.0));
        _2828 = (_3044 * _3035) + _2264;
        _2830 = (_3044 * _3037) + _2266;
        _2832 = (_3044 * _3039) + _2268;
        _2834 = ((_3029 * _1085) * _3044) + _2609;
        _2836 = ((_3031 * _1087) * _3044) + _2611;
        _2838 = ((_3033 * _1088) * _3044) + _2613;
    }
    else
    {
        _2828 = _2264;
        _2830 = _2266;
        _2832 = _2268;
        _2834 = _2609;
        _2836 = _2611;
        _2838 = _2613;
    }
    float _4760 = isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : max(_1075, 0.0));
    float _4771 = isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : max(_1076, 0.0));
    float _4782 = isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0));
    uint _2858 = _1028 + 6u;
    float _2866 = _973 / cbSceneParam._m0[86u].x;
    float _2867 = _974 / cbSceneParam._m0[86u].y;
    vec4 _2881 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2866, _2867, (log2((isnan(cbSceneParam._m0[77u].w) ? _908 : (isnan(_908) ? cbSceneParam._m0[77u].w : min(_908, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2883 = _2881.x;
    float _2884 = _2881.y;
    float _2885 = _2881.z;
    float _2886 = _2881.w;
    float _2979;
    float _2981;
    float _2983;
    float _2985;
    if (_908 > cbSceneParam._m0[78u].w)
    {
        float _2941 = isnan(_908) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _908 : min(cbSceneParam._m0[80u].w, _908));
        float _2942 = _2941 / _908;
        float _2953 = _2942 * _958;
        float _2954 = _959 * _2942;
        float _2955 = (-0.0) - _2954;
        float _2957 = _2942 * _960;
        float _2959 = (cbSceneParam._m0[77u].w * _2955) / _2941;
        float _2960 = _2959 + cbSceneParam._m0[79u].w;
        float _2961 = cbSceneParam._m0[79u].w - _2954;
        float _2967 = sqrt(((_2953 * _2953) + (_2954 * _2954)) + (_2957 * _2957));
        float _2970 = (1.0 - (cbSceneParam._m0[77u].w / _2941)) * _2967;
        float _2975 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2977 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3130;
        if (abs((_2955 - _2959) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3130 = ((((_2960 > 0.0) ? exp2(_2975 * _2960) : (2.0 - exp2(_2977 * _2960))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2970;
        }
        else
        {
            float _3090 = 1.0 / cbSceneParam._m0[80u].x;
            float _3091 = isnan(_2961) ? _2960 : (isnan(_2960) ? _2961 : max(_2960, _2961));
            float _3092 = isnan(_2961) ? _2960 : (isnan(_2960) ? _2961 : min(_2960, _2961));
            float _3101 = isnan(0.0) ? _3091 : (isnan(_3091) ? 0.0 : min(_3091, 0.0));
            float _3102 = isnan(0.0) ? _3092 : (isnan(_3092) ? 0.0 : min(_3092, 0.0));
            _3130 = ((abs(_2967 / _2955) * cbSceneParam._m0[80u].y) * ((((_3101 - _3102) * 2.0) - ((exp2(_2975 * (isnan(0.0) ? _3091 : (isnan(_3091) ? 0.0 : max(_3091, 0.0)))) - exp2(_2975 * (isnan(0.0) ? _3092 : (isnan(_3092) ? 0.0 : max(_3092, 0.0))))) * _3090)) - ((exp2(_2977 * _3101) - exp2(_2977 * _3102)) * _3090))) + (_2970 * cbSceneParam._m0[80u].z);
        }
        vec4 _3132 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2866, _2867, 1.0), 0.0);
        float _3141 = exp2((_3130 * (-1.44269502162933349609375)) * (1.0 - _3132.w));
        float _3142 = log2(_3141);
        float _3158 = log2(_2886);
        _2979 = (exp2(_3158 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3142 * cbSceneParam._m0[78u].x)) * _3132.x) / cbSceneParam._m0[78u].x)) + _2883;
        _2981 = (exp2(_3158 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3142 * cbSceneParam._m0[78u].y)) * _3132.y) / cbSceneParam._m0[78u].y)) + _2884;
        _2983 = (exp2(_3158 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3142 * cbSceneParam._m0[78u].z)) * _3132.z) / cbSceneParam._m0[78u].z)) + _2885;
        _2985 = _3141 * _2886;
    }
    else
    {
        _2979 = _2883;
        _2981 = _2884;
        _2983 = _2885;
        _2985 = _2886;
    }
    float _2997 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2998 = _2997 == 3.0;
    float _2999 = log2(_2985);
    float _3006 = exp2(_2999 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4760 : (isnan(_4760) ? 1.0 : min(_4760, 1.0))) * (_2828 + ((isnan(0.0) ? _1825 : (isnan(_1825) ? 0.0 : max(_1825, 0.0))) * _1100))) + ((_2834 + ((isnan(0.0) ? _2117 : (isnan(_2117) ? 0.0 : max(_2117, 0.0))) * _1904)) * cbPerFrame._m0[3u].x));
    float _3007 = exp2(_2999 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4771 : (isnan(_4771) ? 1.0 : min(_4771, 1.0))) * (_2830 + ((isnan(0.0) ? _1828 : (isnan(_1828) ? 0.0 : max(_1828, 0.0))) * _1100))) + ((_2836 + ((isnan(0.0) ? _2120 : (isnan(_2120) ? 0.0 : max(_2120, 0.0))) * _1904)) * cbPerFrame._m0[3u].x));
    float _3008 = exp2(_2999 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4782 : (isnan(_4782) ? 1.0 : min(_4782, 1.0))) * (_2832 + ((isnan(0.0) ? _1831 : (isnan(_1831) ? 0.0 : max(_1831, 0.0))) * _1100))) + ((_2838 + ((isnan(0.0) ? _2123 : (isnan(_2123) ? 0.0 : max(_2123, 0.0))) * _1904)) * cbPerFrame._m0[3u].x));
    float _3017 = (_2997 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3017 * (_2998 ? _3006 : (_3006 + (cbSceneParam._m0[72u].w * _2979)));
    SV_Target.y = _3017 * (_2998 ? _3007 : (_3007 + (cbSceneParam._m0[72u].w * _2981)));
    SV_Target.z = _3017 * (_2998 ? _3008 : (_3008 + (cbSceneParam._m0[72u].w * _2983)));
    SV_Target.w = cbInstanceData._m0[_2858].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2858].w;
}


