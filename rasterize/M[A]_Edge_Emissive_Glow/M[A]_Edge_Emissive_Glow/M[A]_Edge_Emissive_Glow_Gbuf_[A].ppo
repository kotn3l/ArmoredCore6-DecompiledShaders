#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_A_Edge_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_A_Edge_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _123 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _124 = _123 * NORMAL.x;
    float _125 = _123 * NORMAL.y;
    float _126 = _123 * NORMAL.z;
    float _131;
    float _132;
    float _133;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _131 = (-0.0) - _124;
        _132 = (-0.0) - _125;
        _133 = (-0.0) - _126;
    }
    else
    {
        _131 = _124;
        _132 = _125;
        _133 = _126;
    }
    vec4 _147 = texture(sampler2D(M_A_Edge_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _150 = _147.x;
    float _151 = _147.y;
    float _152 = _147.z;
    float _153 = _147.w;
    vec4 _169 = texture(sampler2D(M_A_Edge_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _174 = _169.x * cbMtdParam._m0[9u].x;
    float _175 = _169.y * cbMtdParam._m0[9u].x;
    float _176 = _169.z * cbMtdParam._m0[9u].x;
    float _180 = inversesqrt(dot(vec3(_131, _132, _133), vec3(_131, _132, _133)));
    float _381 = isnan(0.0) ? _150 : (isnan(_150) ? 0.0 : max(_150, 0.0));
    float _182 = isnan(1.0) ? _381 : (isnan(_381) ? 1.0 : min(_381, 1.0));
    float _392 = isnan(0.0) ? _151 : (isnan(_151) ? 0.0 : max(_151, 0.0));
    float _183 = isnan(1.0) ? _392 : (isnan(_392) ? 1.0 : min(_392, 1.0));
    float _403 = isnan(0.0) ? _152 : (isnan(_152) ? 0.0 : max(_152, 0.0));
    float _184 = isnan(1.0) ? _403 : (isnan(_403) ? 1.0 : min(_403, 1.0));
    uint _186 = uint(roundEven(NORMAL.w));
    vec4 _191 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _193 = _191.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _262 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _414 = isnan(0.0) ? _262 : (isnan(_262) ? 0.0 : max(_262, 0.0));
        float _263 = isnan(1.0) ? _414 : (isnan(_414) ? 1.0 : min(_414, 1.0));
        float _267 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _425 = isnan(0.0) ? _267 : (isnan(_267) ? 0.0 : max(_267, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _425 : (isnan(_425) ? 1.0 : min(_425, 1.0))) - _263)) + _263) < ((_193 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _296;
    uint _213;
    vec4 _218;
    float _225;
    float _226;
    float _227;
    float _228;
    float _229;
    float _230;
    float _233;
    float _237;
    vec4 _241;
    float _243;
    float _244;
    bool _255;
    for (;;)
    {
        _213 = _186 * 13u;
        _218 = cbInstanceData._m0[(_213 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _222 = (cbMtdParam._m0[0u].x * _182) * _218.x;
        float _223 = (cbMtdParam._m0[0u].y * _183) * _218.y;
        float _224 = (cbMtdParam._m0[0u].z * _184) * _218.z;
        float _436 = isnan(0.0) ? _222 : (isnan(_222) ? 0.0 : max(_222, 0.0));
        _225 = isnan(1.0) ? _436 : (isnan(_436) ? 1.0 : min(_436, 1.0));
        float _447 = isnan(0.0) ? _223 : (isnan(_223) ? 0.0 : max(_223, 0.0));
        _226 = isnan(1.0) ? _447 : (isnan(_447) ? 1.0 : min(_447, 1.0));
        float _458 = isnan(0.0) ? _224 : (isnan(_224) ? 0.0 : max(_224, 0.0));
        _227 = isnan(1.0) ? _458 : (isnan(_458) ? 1.0 : min(_458, 1.0));
        _228 = _174 * _218.x;
        _229 = _175 * _218.y;
        _230 = _176 * _218.z;
        _233 = cbMtdParam._m0[2u].w;
        _237 = cbInstanceData._m0[_213 + 6u].w;
        float _238 = _193 + (-0.5);
        _241 = cbMtdParam._m0[1u];
        _243 = _241.y * _238;
        _244 = _238 * 0.999000012874603271484375;
        _255 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_255)
        {
            if ((cbInstanceData._m0[_213 + 7u].x + _244) < 0.5)
            {
                _296 = true;
                break;
            }
        }
        if ((_218.w < 1.0) && ((_218.w + _244) < 0.5))
        {
            _296 = true;
            break;
        }
        if ((_243 + _153) < _241.x)
        {
            _296 = true;
            break;
        }
        _296 = false;
        break;
    }
    if (_296)
    {
        discard_state = true;
    }
    float _330;
    float _331;
    float _332;
    float _333;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _330 = _237;
        _331 = _237;
        _332 = _237;
        _333 = _237;
    }
    else
    {
        _330 = _233;
        _331 = 0.0;
        _332 = float(floatBitsToUint(cbInstanceData._m0[_213 + 5u]).x) * 0.0039215688593685626983642578125;
        _333 = TEXCOORD.z;
    }
    SV_Target.x = ((_131 * 0.5) * _180) + 0.500488758087158203125;
    SV_Target.y = ((_132 * 0.5) * _180) + 0.500488758087158203125;
    SV_Target.z = ((_133 * 0.5) * _180) + 0.500488758087158203125;
    SV_Target.w = _331;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _333;
    SV_Target_2.x = _225;
    SV_Target_2.y = _226;
    SV_Target_2.z = _227;
    SV_Target_2.w = _332;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _331;
    SV_Target_4.x = _228 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _229 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _230 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _330;
    discard_exit();
}


