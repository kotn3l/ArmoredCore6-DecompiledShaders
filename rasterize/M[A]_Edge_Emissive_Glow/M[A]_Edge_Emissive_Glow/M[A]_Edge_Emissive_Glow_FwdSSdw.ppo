#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_A_Edge_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_A_Edge_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _722;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _165 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _166 = _165 * NORMAL.x;
    float _167 = _165 * NORMAL.y;
    float _168 = _165 * NORMAL.z;
    float _173;
    float _174;
    float _175;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _173 = (-0.0) - _166;
        _174 = (-0.0) - _167;
        _175 = (-0.0) - _168;
    }
    else
    {
        _173 = _166;
        _174 = _167;
        _175 = _168;
    }
    vec4 _189 = texture(sampler2D(M_A_Edge_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _192 = _189.x;
    float _193 = _189.y;
    float _194 = _189.z;
    vec4 _210 = texture(sampler2D(M_A_Edge_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _221 = inversesqrt(dot(vec3(_173, _174, _175), vec3(_173, _174, _175)));
    float _222 = _221 * _173;
    float _223 = _221 * _174;
    float _224 = _221 * _175;
    float _2894 = isnan(0.0) ? _192 : (isnan(_192) ? 0.0 : max(_192, 0.0));
    float _2905 = isnan(0.0) ? _193 : (isnan(_193) ? 0.0 : max(_193, 0.0));
    float _2916 = isnan(0.0) ? _194 : (isnan(_194) ? 0.0 : max(_194, 0.0));
    float _244 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _286 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _296 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _286);
    float _297 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _286);
    float _298 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _286);
    float _302 = inversesqrt(dot(vec3(_296, _297, _298), vec3(_296, _297, _298)));
    float _303 = _296 * _302;
    float _304 = _297 * _302;
    float _305 = _298 * _302;
    float _311 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _312 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _333 = fma(_224, cbSceneParam._m0[5u].z, fma(_223, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _222));
    float _336 = fma(_224, cbSceneParam._m0[6u].z, fma(_223, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _222));
    float _339 = fma(_224, cbSceneParam._m0[7u].z, fma(_223, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _222));
    uint _352 = uint(roundEven(NORMAL.w)) * 13u;
    uint _354 = _352 + 9u;
    uint _355 = _354 + uint(cbMatDynParam._m0[0u].w);
    float _361 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2894 : (isnan(_2894) ? 1.0 : min(_2894, 1.0)))) * cbInstanceData._m0[_355].x;
    float _362 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2905 : (isnan(_2905) ? 1.0 : min(_2905, 1.0)))) * cbInstanceData._m0[_355].y;
    float _363 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2916 : (isnan(_2916) ? 1.0 : min(_2916, 1.0)))) * cbInstanceData._m0[_355].z;
    float _2927 = isnan(0.0) ? _361 : (isnan(_361) ? 0.0 : max(_361, 0.0));
    float _364 = isnan(1.0) ? _2927 : (isnan(_2927) ? 1.0 : min(_2927, 1.0));
    float _2938 = isnan(0.0) ? _362 : (isnan(_362) ? 0.0 : max(_362, 0.0));
    float _365 = isnan(1.0) ? _2938 : (isnan(_2938) ? 1.0 : min(_2938, 1.0));
    float _2949 = isnan(0.0) ? _363 : (isnan(_363) ? 0.0 : max(_363, 0.0));
    float _366 = isnan(1.0) ? _2949 : (isnan(_2949) ? 1.0 : min(_2949, 1.0));
    vec4 _375 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _311, cbSceneParam._m0[86u].y * _312));
    float _378 = _375.x * TEXCOORD.z;
    float _379 = dot(vec3(_222, _223, _224), vec3(_303, _304, _305));
    float _382 = _379 * 2.0;
    float _387 = (_382 * _222) - _303;
    float _388 = (_382 * _223) - _304;
    float _389 = (_382 * _224) - _305;
    float _411 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _415 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _419 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _721;
    float _723;
    float _724;
    float _725;
    float _726;
    float _727;
    float _728;
    float _729;
    float _730;
    float _731;
    float _732;
    float _733;
    float _734;
    float _735;
    float _736;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _446 = fma(_419, cbModelParam._m0[26u].z, fma(_415, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _411));
        float _450 = fma(_419, cbModelParam._m0[27u].z, fma(_415, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _411));
        float _454 = fma(_419, cbModelParam._m0[28u].z, fma(_415, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _411));
        float _479 = _411 + _222;
        float _480 = _415 + _223;
        float _481 = _419 + _224;
        float _491 = fma(_481, cbModelParam._m0[26u].z, fma(_480, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _479)) - _446;
        float _492 = fma(_481, cbModelParam._m0[27u].z, fma(_480, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _479)) - _450;
        float _493 = fma(_481, cbModelParam._m0[28u].z, fma(_480, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _479)) - _454;
        float _497 = inversesqrt(dot(vec3(_491, _492, _493), vec3(_491, _492, _493)));
        float _510 = ((_497 * _491) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_446 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _511 = ((_497 * _492) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_450 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _512 = ((_497 * _493) / cbModelParam._m0[34u].z) + ((((((_454 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _515 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_510, _511, _512), 0.0);
        vec4 _522 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_510, _511, _512), 0.0);
        vec4 _529 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_510, _511, _512), 0.0);
        vec4 _536 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_510, _511, _512), 0.0);
        float _549 = exp2((_515.w + (-0.5)) * 20.0) * 2.0;
        float _550 = _549 * (_515.x + (-0.5));
        float _551 = _549 * (_515.y + (-0.5));
        float _552 = _549 * (_515.z + (-0.5));
        float _559 = exp2((_522.w + (-0.5)) * 20.0) * 2.0;
        float _560 = _559 * (_522.x + (-0.5));
        float _561 = _559 * (_522.y + (-0.5));
        float _562 = _559 * (_522.z + (-0.5));
        float _569 = exp2((_529.w + (-0.5)) * 20.0) * 2.0;
        float _570 = _569 * (_529.x + (-0.5));
        float _571 = _569 * (_529.y + (-0.5));
        float _572 = _569 * (_529.z + (-0.5));
        float _579 = exp2((_536.w + (-0.5)) * 20.0) * 2.0;
        float _580 = _579 * (_536.x + (-0.5));
        float _581 = _579 * (_536.y + (-0.5));
        float _582 = _579 * (_536.z + (-0.5));
        float _583 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
        float _584 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
        float _585 = isnan(0.0) ? _582 : (isnan(_582) ? 0.0 : max(_582, 0.0));
        float _586 = _550 * 0.5;
        float _587 = _560 * 0.5;
        float _588 = _570 * 0.5;
        float _589 = dot(vec3(_586, _587, _588), vec3(_586, _587, _588));
        float _594 = (_589 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_589);
        float _603 = (dot(vec3(_222, _223, _224), vec3(_594 * _586, _594 * _587, _594 * _588)) + 1.0) * 0.5;
        float _2975 = isnan(0.0) ? _603 : (isnan(_603) ? 0.0 : max(_603, 0.0));
        float _613 = sqrt(((_587 * _587) + (_586 * _586)) + (_588 * _588)) / (_583 + 9.9999997473787516355514526367188e-06);
        float _2986 = isnan(0.0) ? _613 : (isnan(_613) ? 0.0 : max(_613, 0.0));
        float _614 = isnan(1.0) ? _2986 : (isnan(_2986) ? 1.0 : min(_2986, 1.0));
        float _615 = _614 * 2.0;
        float _619 = (1.0 - _614) / (_614 + 1.0);
        float _2997 = isnan(0.0) ? _619 : (isnan(_619) ? 0.0 : max(_619, 0.0));
        float _620 = isnan(1.0) ? _2997 : (isnan(_2997) ? 1.0 : min(_2997, 1.0));
        float _629 = ((((1.0 - _620) * (_615 + 2.0)) * exp2(log2(isnan(1.0) ? _2975 : (isnan(_2975) ? 1.0 : min(_2975, 1.0))) * (_615 + 1.0))) + _620) * _583;
        float _630 = _551 * 0.5;
        float _631 = _561 * 0.5;
        float _632 = _571 * 0.5;
        float _633 = dot(vec3(_630, _631, _632), vec3(_630, _631, _632));
        float _638 = (_633 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_633);
        float _646 = (dot(vec3(_222, _223, _224), vec3(_638 * _630, _638 * _631, _638 * _632)) + 1.0) * 0.5;
        float _3008 = isnan(0.0) ? _646 : (isnan(_646) ? 0.0 : max(_646, 0.0));
        float _655 = sqrt(((_631 * _631) + (_630 * _630)) + (_632 * _632)) / (_584 + 9.9999997473787516355514526367188e-06);
        float _3019 = isnan(0.0) ? _655 : (isnan(_655) ? 0.0 : max(_655, 0.0));
        float _656 = isnan(1.0) ? _3019 : (isnan(_3019) ? 1.0 : min(_3019, 1.0));
        float _657 = _656 * 2.0;
        float _661 = (1.0 - _656) / (_656 + 1.0);
        float _3030 = isnan(0.0) ? _661 : (isnan(_661) ? 0.0 : max(_661, 0.0));
        float _662 = isnan(1.0) ? _3030 : (isnan(_3030) ? 1.0 : min(_3030, 1.0));
        float _671 = ((((1.0 - _662) * (_657 + 2.0)) * exp2(log2(isnan(1.0) ? _3008 : (isnan(_3008) ? 1.0 : min(_3008, 1.0))) * (_657 + 1.0))) + _662) * _584;
        float _672 = _552 * 0.5;
        float _673 = _562 * 0.5;
        float _674 = _572 * 0.5;
        float _675 = dot(vec3(_672, _673, _674), vec3(_672, _673, _674));
        float _680 = (_675 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_675);
        float _688 = (dot(vec3(_222, _223, _224), vec3(_680 * _672, _680 * _673, _680 * _674)) + 1.0) * 0.5;
        float _3041 = isnan(0.0) ? _688 : (isnan(_688) ? 0.0 : max(_688, 0.0));
        float _697 = sqrt(((_673 * _673) + (_672 * _672)) + (_674 * _674)) / (_585 + 9.9999997473787516355514526367188e-06);
        float _3052 = isnan(0.0) ? _697 : (isnan(_697) ? 0.0 : max(_697, 0.0));
        float _698 = isnan(1.0) ? _3052 : (isnan(_3052) ? 1.0 : min(_3052, 1.0));
        float _699 = _698 * 2.0;
        float _703 = (1.0 - _698) / (_698 + 1.0);
        float _3063 = isnan(0.0) ? _703 : (isnan(_703) ? 0.0 : max(_703, 0.0));
        float _704 = isnan(1.0) ? _3063 : (isnan(_3063) ? 1.0 : min(_3063, 1.0));
        float _713 = ((((1.0 - _704) * (_699 + 2.0)) * exp2(log2(isnan(1.0) ? _3041 : (isnan(_3041) ? 1.0 : min(_3041, 1.0))) * (_699 + 1.0))) + _704) * _585;
        _721 = _552;
        _723 = _551;
        _724 = _550;
        _725 = _562;
        _726 = _561;
        _727 = _560;
        _728 = _572;
        _729 = _571;
        _730 = _570;
        _731 = _585;
        _732 = _584;
        _733 = _583;
        _734 = cbModelParam._m0[36u].z * (isnan(0.0) ? _629 : (isnan(_629) ? 0.0 : max(_629, 0.0)));
        _735 = cbModelParam._m0[36u].z * (isnan(0.0) ? _671 : (isnan(_671) ? 0.0 : max(_671, 0.0)));
        _736 = cbModelParam._m0[36u].z * (isnan(0.0) ? _713 : (isnan(_713) ? 0.0 : max(_713, 0.0)));
    }
    else
    {
        _721 = _722;
        _723 = _722;
        _724 = _722;
        _725 = _722;
        _726 = _722;
        _727 = _722;
        _728 = _722;
        _729 = _722;
        _730 = _722;
        _731 = _722;
        _732 = _722;
        _733 = _722;
        _734 = 0.0;
        _735 = 0.0;
        _736 = 0.0;
    }
    float _1031;
    float _1032;
    float _1033;
    float _1034;
    float _1035;
    float _1036;
    float _1037;
    float _1038;
    float _1039;
    float _1040;
    float _1041;
    float _1042;
    float _1043;
    float _1044;
    float _1045;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _762 = fma(_419, cbModelParam._m0[30u].z, fma(_415, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _411));
        float _766 = fma(_419, cbModelParam._m0[31u].z, fma(_415, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _411));
        float _770 = fma(_419, cbModelParam._m0[32u].z, fma(_415, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _411));
        float _793 = _411 + _222;
        float _794 = _415 + _223;
        float _795 = _419 + _224;
        float _805 = fma(_795, cbModelParam._m0[30u].z, fma(_794, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _793)) - _762;
        float _806 = fma(_795, cbModelParam._m0[31u].z, fma(_794, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _793)) - _766;
        float _807 = fma(_795, cbModelParam._m0[32u].z, fma(_794, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _793)) - _770;
        float _811 = inversesqrt(dot(vec3(_805, _806, _807), vec3(_805, _806, _807)));
        float _824 = ((_811 * _805) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_762 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _825 = ((_811 * _806) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_766 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _826 = ((_811 * _807) / cbModelParam._m0[35u].z) + ((((((_770 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _828 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_824, _825, _826), 0.0);
        vec4 _835 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_824, _825, _826), 0.0);
        vec4 _842 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_824, _825, _826), 0.0);
        vec4 _849 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_824, _825, _826), 0.0);
        float _861 = exp2((_828.w + (-0.5)) * 20.0) * 2.0;
        float _862 = _861 * (_828.x + (-0.5));
        float _863 = _861 * (_828.y + (-0.5));
        float _864 = _861 * (_828.z + (-0.5));
        float _871 = exp2((_835.w + (-0.5)) * 20.0) * 2.0;
        float _872 = _871 * (_835.x + (-0.5));
        float _873 = _871 * (_835.y + (-0.5));
        float _874 = _871 * (_835.z + (-0.5));
        float _881 = exp2((_842.w + (-0.5)) * 20.0) * 2.0;
        float _882 = _881 * (_842.x + (-0.5));
        float _883 = _881 * (_842.y + (-0.5));
        float _884 = _881 * (_842.z + (-0.5));
        float _891 = exp2((_849.w + (-0.5)) * 20.0) * 2.0;
        float _892 = _891 * (_849.x + (-0.5));
        float _893 = _891 * (_849.y + (-0.5));
        float _894 = _891 * (_849.z + (-0.5));
        float _895 = isnan(0.0) ? _892 : (isnan(_892) ? 0.0 : max(_892, 0.0));
        float _896 = isnan(0.0) ? _893 : (isnan(_893) ? 0.0 : max(_893, 0.0));
        float _897 = isnan(0.0) ? _894 : (isnan(_894) ? 0.0 : max(_894, 0.0));
        float _898 = _862 * 0.5;
        float _899 = _872 * 0.5;
        float _900 = _882 * 0.5;
        float _901 = dot(vec3(_898, _899, _900), vec3(_898, _899, _900));
        float _906 = (_901 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_901);
        float _914 = (dot(vec3(_222, _223, _224), vec3(_906 * _898, _906 * _899, _906 * _900)) + 1.0) * 0.5;
        float _3104 = isnan(0.0) ? _914 : (isnan(_914) ? 0.0 : max(_914, 0.0));
        float _923 = sqrt(((_899 * _899) + (_898 * _898)) + (_900 * _900)) / (_895 + 9.9999997473787516355514526367188e-06);
        float _3115 = isnan(0.0) ? _923 : (isnan(_923) ? 0.0 : max(_923, 0.0));
        float _924 = isnan(1.0) ? _3115 : (isnan(_3115) ? 1.0 : min(_3115, 1.0));
        float _925 = _924 * 2.0;
        float _929 = (1.0 - _924) / (_924 + 1.0);
        float _3126 = isnan(0.0) ? _929 : (isnan(_929) ? 0.0 : max(_929, 0.0));
        float _930 = isnan(1.0) ? _3126 : (isnan(_3126) ? 1.0 : min(_3126, 1.0));
        float _939 = ((((1.0 - _930) * (_925 + 2.0)) * exp2(log2(isnan(1.0) ? _3104 : (isnan(_3104) ? 1.0 : min(_3104, 1.0))) * (_925 + 1.0))) + _930) * _895;
        float _940 = _863 * 0.5;
        float _941 = _873 * 0.5;
        float _942 = _883 * 0.5;
        float _943 = dot(vec3(_940, _941, _942), vec3(_940, _941, _942));
        float _948 = (_943 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_943);
        float _956 = (dot(vec3(_222, _223, _224), vec3(_948 * _940, _948 * _941, _948 * _942)) + 1.0) * 0.5;
        float _3137 = isnan(0.0) ? _956 : (isnan(_956) ? 0.0 : max(_956, 0.0));
        float _965 = sqrt(((_941 * _941) + (_940 * _940)) + (_942 * _942)) / (_896 + 9.9999997473787516355514526367188e-06);
        float _3148 = isnan(0.0) ? _965 : (isnan(_965) ? 0.0 : max(_965, 0.0));
        float _966 = isnan(1.0) ? _3148 : (isnan(_3148) ? 1.0 : min(_3148, 1.0));
        float _967 = _966 * 2.0;
        float _971 = (1.0 - _966) / (_966 + 1.0);
        float _3159 = isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0));
        float _972 = isnan(1.0) ? _3159 : (isnan(_3159) ? 1.0 : min(_3159, 1.0));
        float _981 = ((((1.0 - _972) * (_967 + 2.0)) * exp2(log2(isnan(1.0) ? _3137 : (isnan(_3137) ? 1.0 : min(_3137, 1.0))) * (_967 + 1.0))) + _972) * _896;
        float _982 = _864 * 0.5;
        float _983 = _874 * 0.5;
        float _984 = _884 * 0.5;
        float _985 = dot(vec3(_982, _983, _984), vec3(_982, _983, _984));
        float _990 = (_985 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_985);
        float _998 = (dot(vec3(_222, _223, _224), vec3(_990 * _982, _990 * _983, _990 * _984)) + 1.0) * 0.5;
        float _3170 = isnan(0.0) ? _998 : (isnan(_998) ? 0.0 : max(_998, 0.0));
        float _1007 = sqrt(((_983 * _983) + (_982 * _982)) + (_984 * _984)) / (_897 + 9.9999997473787516355514526367188e-06);
        float _3181 = isnan(0.0) ? _1007 : (isnan(_1007) ? 0.0 : max(_1007, 0.0));
        float _1008 = isnan(1.0) ? _3181 : (isnan(_3181) ? 1.0 : min(_3181, 1.0));
        float _1009 = _1008 * 2.0;
        float _1013 = (1.0 - _1008) / (_1008 + 1.0);
        float _3192 = isnan(0.0) ? _1013 : (isnan(_1013) ? 0.0 : max(_1013, 0.0));
        float _1014 = isnan(1.0) ? _3192 : (isnan(_3192) ? 1.0 : min(_3192, 1.0));
        float _1023 = ((((1.0 - _1014) * (_1009 + 2.0)) * exp2(log2(isnan(1.0) ? _3170 : (isnan(_3170) ? 1.0 : min(_3170, 1.0))) * (_1009 + 1.0))) + _1014) * _897;
        _1031 = _864;
        _1032 = _863;
        _1033 = _862;
        _1034 = _874;
        _1035 = _873;
        _1036 = _872;
        _1037 = _884;
        _1038 = _883;
        _1039 = _882;
        _1040 = _897;
        _1041 = _896;
        _1042 = _895;
        _1043 = cbModelParam._m0[36u].w * (isnan(0.0) ? _939 : (isnan(_939) ? 0.0 : max(_939, 0.0)));
        _1044 = cbModelParam._m0[36u].w * (isnan(0.0) ? _981 : (isnan(_981) ? 0.0 : max(_981, 0.0)));
        _1045 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1023 : (isnan(_1023) ? 0.0 : max(_1023, 0.0)));
    }
    else
    {
        _1031 = _722;
        _1032 = _722;
        _1033 = _722;
        _1034 = _722;
        _1035 = _722;
        _1036 = _722;
        _1037 = _722;
        _1038 = _722;
        _1039 = _722;
        _1040 = _722;
        _1041 = _722;
        _1042 = _722;
        _1043 = 0.0;
        _1044 = 0.0;
        _1045 = 0.0;
    }
    float _1055 = (cbModelParam._m0[1u].x * (_1043 - _734)) + _734;
    float _1056 = (cbModelParam._m0[1u].x * (_1044 - _735)) + _735;
    float _1057 = (cbModelParam._m0[1u].x * (_1045 - _736)) + _736;
    float _1078 = fma(_1057, cbSceneParam._m0[89u].z, fma(_1056, cbSceneParam._m0[89u].y, _1055 * cbSceneParam._m0[89u].x));
    float _1081 = fma(_1057, cbSceneParam._m0[90u].z, fma(_1056, cbSceneParam._m0[90u].y, _1055 * cbSceneParam._m0[90u].x));
    float _1084 = fma(_1057, cbSceneParam._m0[91u].z, fma(_1056, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1055));
    float _1099 = _387 * 0.5;
    float _1100 = _388 * 0.5;
    float _1101 = _389 * 0.5;
    float _1102 = dot(vec4(_1099, _1100, _1101, 1.0), vec4(_1033, _1036, _1039, _1042));
    float _1105 = dot(vec4(_1099, _1100, _1101, 1.0), vec4(_1032, _1035, _1038, _1041));
    float _1108 = dot(vec4(_1099, _1100, _1101, 1.0), vec4(_1031, _1034, _1037, _1040));
    float _1142;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1115 = dot(vec4(_1099, _1100, _1101, 1.0), vec4(_721, _725, _728, _731));
        float _1119 = dot(vec4(_1099, _1100, _1101, 1.0), vec4(_723, _726, _729, _732));
        float _1123 = dot(vec4(_1099, _1100, _1101, 1.0), vec4(_724, _727, _730, _733));
        float _1130 = dot(vec4(cbModelParam._m0[39u]), vec4(_1099, _1100, _1101, 1.0));
        _1142 = dot(vec3(isnan(0.0) ? _1123 : (isnan(_1123) ? 0.0 : max(_1123, 0.0)), isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0)), isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1130) ? 0.0 : (isnan(0.0) ? _1130 : max(0.0, _1130))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1142 = 1.0;
    }
    float _1153;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1144 = dot(vec4(cbModelParam._m0[40u]), vec4(_1099, _1100, _1101, 1.0));
        _1153 = dot(vec3(isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0)), isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0)), isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1144) ? 0.0 : (isnan(0.0) ? _1144 : max(0.0, _1144))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1153 = 1.0;
    }
    float _1157 = (_1153 * cbModelParam._m0[1u].x) + (_1142 * (1.0 - cbModelParam._m0[1u].x));
    float _1166 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1248;
    float _1250;
    float _1252;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1215 = fma(_419, cbModelParam._m0[13u].z, fma(_415, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _411)) + cbModelParam._m0[13u].w;
        float _1219 = fma(_419, cbModelParam._m0[14u].z, fma(_415, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _411)) + cbModelParam._m0[14u].w;
        float _1223 = fma(_419, cbModelParam._m0[15u].z, fma(_415, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _411)) + cbModelParam._m0[15u].w;
        float _1226 = fma(_389, cbModelParam._m0[13u].z, fma(_388, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _387));
        float _1229 = fma(_389, cbModelParam._m0[14u].z, fma(_388, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _387));
        float _1232 = fma(_389, cbModelParam._m0[15u].z, fma(_388, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _387));
        float _1258;
        if (_1226 > 0.0)
        {
            _1258 = abs((1.0 - _1215) / _1226);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1226 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1215 + 1.0) / _1226);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1258 = frontier_phi_16_14_ladder;
        }
        float _1487;
        if (_1229 > 0.0)
        {
            _1487 = abs((1.0 - _1219) / _1229);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1229 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1219 + 1.0) / _1229);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1487 = frontier_phi_25_21_ladder;
        }
        float _1679;
        if (_1232 > 0.0)
        {
            _1679 = abs((1.0 - _1223) / _1232);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1232 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1223 + 1.0) / _1232);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1679 = frontier_phi_37_32_ladder;
        }
        float _1681 = isnan(_1487) ? _1258 : (isnan(_1258) ? _1487 : min(_1258, _1487));
        float _1682 = isnan(_1679) ? _1681 : (isnan(_1681) ? _1679 : min(_1681, _1679));
        float _1686 = (_1682 * _1226) + _1215;
        float _1687 = (_1682 * _1229) + _1219;
        float _1688 = (_1682 * _1232) + _1223;
        float _1689 = _1682 * 9.9999997473787516355514526367188e-05;
        float _1691 = (-1.0) - _1689;
        float _1693 = _1689 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_1688 > _1693) || ((_1688 < _1691) || ((_1687 > _1693) || ((_1687 < _1691) || ((_1686 < _1691) || (_1686 > _1693))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1785 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1688, cbModelParam._m0[9u].z, fma(_1687, cbModelParam._m0[9u].y, _1686 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1688, cbModelParam._m0[10u].z, fma(_1687, cbModelParam._m0[10u].y, _1686 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1688, cbModelParam._m0[11u].z, fma(_1687, cbModelParam._m0[11u].y, _1686 * cbModelParam._m0[11u].x))), _1166);
            frontier_phi_15_37_ladder = _1785.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _1785.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _1785.x * cbModelParam._m0[1u].y;
        }
        _1248 = frontier_phi_15_37_ladder_2;
        _1250 = frontier_phi_15_37_ladder_1;
        _1252 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1236 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_387, _388, _389), _1166);
        _1248 = _1236.x * cbModelParam._m0[1u].y;
        _1250 = _1236.y * cbModelParam._m0[1u].y;
        _1252 = _1236.z * cbModelParam._m0[1u].y;
    }
    float _1255 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1348;
    float _1350;
    float _1352;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1312 = fma(_419, cbModelParam._m0[21u].z, fma(_415, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _411)) + cbModelParam._m0[21u].w;
        float _1316 = fma(_419, cbModelParam._m0[22u].z, fma(_415, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _411)) + cbModelParam._m0[22u].w;
        float _1320 = fma(_419, cbModelParam._m0[23u].z, fma(_415, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _411)) + cbModelParam._m0[23u].w;
        float _1323 = fma(_389, cbModelParam._m0[21u].z, fma(_388, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _387));
        float _1326 = fma(_389, cbModelParam._m0[22u].z, fma(_388, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _387));
        float _1329 = fma(_389, cbModelParam._m0[23u].z, fma(_388, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _387));
        float _1492;
        if (_1323 > 0.0)
        {
            _1492 = abs((1.0 - _1312) / _1323);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1323 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1312 + 1.0) / _1323);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1492 = frontier_phi_27_23_ladder;
        }
        float _1706;
        if (_1326 > 0.0)
        {
            _1706 = abs((1.0 - _1316) / _1326);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1326 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1316 + 1.0) / _1326);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _1706 = frontier_phi_39_34_ladder;
        }
        float _1857;
        if (_1329 > 0.0)
        {
            _1857 = abs((1.0 - _1320) / _1329);
        }
        else
        {
            float frontier_phi_48_45_ladder;
            if (_1329 < 0.0)
            {
                frontier_phi_48_45_ladder = abs((_1320 + 1.0) / _1329);
            }
            else
            {
                frontier_phi_48_45_ladder = 5000.0;
            }
            _1857 = frontier_phi_48_45_ladder;
        }
        float _1859 = isnan(_1706) ? _1492 : (isnan(_1492) ? _1706 : min(_1492, _1706));
        float _1860 = isnan(_1857) ? _1859 : (isnan(_1859) ? _1857 : min(_1859, _1857));
        float _1864 = (_1860 * _1323) + _1312;
        float _1865 = (_1860 * _1326) + _1316;
        float _1866 = (_1860 * _1329) + _1320;
        float _1867 = _1860 * 9.9999997473787516355514526367188e-05;
        float _1868 = (-1.0) - _1867;
        float _1870 = _1867 + 1.0;
        float frontier_phi_24_48_ladder;
        float frontier_phi_24_48_ladder_1;
        float frontier_phi_24_48_ladder_2;
        if ((_1866 > _1870) || ((_1866 < _1868) || ((_1865 > _1870) || ((_1865 < _1868) || ((_1864 < _1868) || (_1864 > _1870))))))
        {
            frontier_phi_24_48_ladder = 0.0;
            frontier_phi_24_48_ladder_1 = 0.0;
            frontier_phi_24_48_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2093 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1866, cbModelParam._m0[17u].z, fma(_1865, cbModelParam._m0[17u].y, _1864 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1866, cbModelParam._m0[18u].z, fma(_1865, cbModelParam._m0[18u].y, _1864 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1866, cbModelParam._m0[19u].z, fma(_1865, cbModelParam._m0[19u].y, _1864 * cbModelParam._m0[19u].x))), _1255);
            frontier_phi_24_48_ladder = _2093.z * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_1 = _2093.y * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_2 = _2093.x * cbModelParam._m0[1u].z;
        }
        _1348 = frontier_phi_24_48_ladder_2;
        _1350 = frontier_phi_24_48_ladder_1;
        _1352 = frontier_phi_24_48_ladder;
    }
    else
    {
        vec4 _1332 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_387, _388, _389), _1255);
        _1348 = _1332.x * cbModelParam._m0[1u].z;
        _1350 = _1332.y * cbModelParam._m0[1u].z;
        _1352 = _1332.z * cbModelParam._m0[1u].z;
    }
    float _1364 = _378 * 0.01200000010430812835693359375;
    float _1366 = _1364 * ((cbModelParam._m0[1u].w * (_1348 - _1248)) + _1248);
    float _1367 = _1364 * ((cbModelParam._m0[1u].w * (_1350 - _1250)) + _1250);
    float _1368 = _1364 * ((cbModelParam._m0[1u].w * (_1352 - _1252)) + _1252);
    float _1371 = fma(_1368, cbSceneParam._m0[89u].z, fma(_1367, cbSceneParam._m0[89u].y, _1366 * cbSceneParam._m0[89u].x));
    float _1374 = fma(_1368, cbSceneParam._m0[90u].z, fma(_1367, cbSceneParam._m0[90u].y, _1366 * cbSceneParam._m0[90u].x));
    float _1377 = fma(_1368, cbSceneParam._m0[91u].z, fma(_1367, cbSceneParam._m0[91u].y, _1366 * cbSceneParam._m0[91u].x));
    vec4 _1385 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_311, _312));
    float _1387 = _1385.w;
    float _1399 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1387);
    float _1400 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1387);
    float _1401 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1387);
    uvec4 _1405 = floatBitsToUint(cbInstanceData._m0[_352 + 5u]);
    uint _1407 = _1405.x * 14u;
    uint _1408 = _1407 + 13u;
    float _1415 = _378 + (-1.0);
    float _1421 = (cbLight._m0[_1408].x * _1415) + 1.0;
    float _1422 = (cbLight._m0[_1408].y * _1415) + 1.0;
    float _1423 = (cbLight._m0[_1408].z * _1415) + 1.0;
    float _1424 = (cbLight._m0[_1408].w * _1415) + 1.0;
    uint _1425 = _1407 + 5u;
    float _1431 = isnan(1.0) ? _1422 : (isnan(_1422) ? 1.0 : min(_1422, 1.0));
    uint _1435 = _1407 + 4u;
    float _1445 = isnan(1.0) ? _1421 : (isnan(_1421) ? 1.0 : min(_1421, 1.0));
    uint _1449 = _1407 | 1u;
    float _1460 = dot(vec3(cbLight._m0[_1407].xyz), vec3(_222, _223, _224));
    float _1463 = dot(vec3(cbLight._m0[_1449].xyz), vec3(_222, _223, _224));
    float _3328 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
    float _3339 = isnan(0.0) ? _1463 : (isnan(_1463) ? 0.0 : max(_1463, 0.0));
    float _1468 = (isnan(1.0) ? _3328 : (isnan(_3328) ? 1.0 : min(_3328, 1.0))) * 0.3183098733425140380859375;
    float _1470 = (isnan(1.0) ? _3339 : (isnan(_3339) ? 1.0 : min(_3339, 1.0))) * 0.3183098733425140380859375;
    float _1477 = ((cbLight._m0[_1425].x * _1431) * _1470) + (((cbLight._m0[_1435].x * _1399) * _1445) * _1468);
    float _1478 = ((_1431 * cbLight._m0[_1425].y) * _1470) + (((cbLight._m0[_1435].y * _1400) * _1445) * _1468);
    float _1479 = ((_1431 * cbLight._m0[_1425].z) * _1470) + (((cbLight._m0[_1435].z * _1401) * _1445) * _1468);
    uvec4 _1484 = floatBitsToUint(cbLight._m0[_1407 + 12u]);
    bool _1486 = _1484.x == 0u;
    float _1497;
    float _1499;
    float _1501;
    if (_1486)
    {
        _1497 = _1477;
        _1499 = _1478;
        _1501 = _1479;
    }
    else
    {
        uint _1505 = _1407 + 6u;
        float _1521 = (dot(vec3(cbLight._m0[_1407 + 2u].xyz), vec3(_222, _223, _224)) * 0.5) + 0.5;
        float _1522 = _1521 * _1521;
        float _3350 = isnan(0.0) ? _1522 : (isnan(_1522) ? 0.0 : max(_1522, 0.0));
        float _1523 = isnan(1.0) ? _3350 : (isnan(_3350) ? 1.0 : min(_3350, 1.0));
        float _1524 = isnan(1.0) ? _1423 : (isnan(_1423) ? 1.0 : min(_1423, 1.0));
        _1497 = (((cbLight._m0[_1505].x * 0.3183098733425140380859375) * _1523) * _1524) + _1477;
        _1499 = (((cbLight._m0[_1505].y * 0.3183098733425140380859375) * _1523) * _1524) + _1478;
        _1501 = (((cbLight._m0[_1505].z * 0.3183098733425140380859375) * _1523) * _1524) + _1479;
    }
    bool _1504 = _1484.y == 0u;
    float _1542;
    float _1544;
    float _1546;
    if (_1504)
    {
        _1542 = _1497;
        _1544 = _1499;
        _1546 = _1501;
    }
    else
    {
        uint _1650 = _1407 + 7u;
        float _1666 = (dot(vec3(cbLight._m0[_1407 + 3u].xyz), vec3(_222, _223, _224)) * 0.5) + 0.5;
        float _1667 = _1666 * _1666;
        float _3366 = isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0));
        float _1668 = isnan(1.0) ? _3366 : (isnan(_3366) ? 1.0 : min(_3366, 1.0));
        float _1669 = isnan(1.0) ? _1424 : (isnan(_1424) ? 1.0 : min(_1424, 1.0));
        _1542 = (((cbLight._m0[_1650].x * 0.3183098733425140380859375) * _1668) * _1669) + _1497;
        _1544 = (((cbLight._m0[_1650].y * 0.3183098733425140380859375) * _1668) * _1669) + _1499;
        _1546 = (((cbLight._m0[_1650].z * 0.3183098733425140380859375) * _1668) * _1669) + _1501;
    }
    uint _1548 = _1407 + 8u;
    float _1554 = cbLight._m0[_1407].x + _303;
    float _1555 = cbLight._m0[_1407].y + _304;
    float _1556 = cbLight._m0[_1407].z + _305;
    float _1560 = inversesqrt(dot(vec3(_1554, _1555, _1556), vec3(_1554, _1555, _1556)));
    float _1564 = dot(vec3(_222, _223, _224), vec3(cbLight._m0[_1407].xyz));
    float _3382 = isnan(0.0) ? _1564 : (isnan(_1564) ? 0.0 : max(_1564, 0.0));
    float _1567 = isnan(1.0) ? _3382 : (isnan(_3382) ? 1.0 : min(_3382, 1.0));
    float _3393 = isnan(0.0) ? _379 : (isnan(_379) ? 0.0 : max(_379, 0.0));
    float _1568 = isnan(1.0) ? _3393 : (isnan(_3393) ? 1.0 : min(_3393, 1.0));
    float _1569 = dot(vec3(cbLight._m0[_1407].xyz), vec3(_1554 * _1560, _1555 * _1560, _1556 * _1560));
    float _3404 = isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0));
    float _1580 = (exp2(log2(1.0 - (isnan(1.0) ? _3404 : (isnan(_3404) ? 1.0 : min(_3404, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1586 = (0.5 / ((_1567 + 9.9999999392252902907785028219223e-09) + _1568)) * _1567;
    float _3415 = isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0));
    float _1588 = (isnan(1.0) ? _3415 : (isnan(_3415) ? 1.0 : min(_3415, 1.0))) * 0.31831014156341552734375;
    uint _1602 = _1407 + 9u;
    float _1608 = cbLight._m0[_1449].x + _303;
    float _1609 = cbLight._m0[_1449].y + _304;
    float _1610 = cbLight._m0[_1449].z + _305;
    float _1614 = inversesqrt(dot(vec3(_1608, _1609, _1610), vec3(_1608, _1609, _1610)));
    float _1618 = dot(vec3(_222, _223, _224), vec3(cbLight._m0[_1449].xyz));
    float _3426 = isnan(0.0) ? _1618 : (isnan(_1618) ? 0.0 : max(_1618, 0.0));
    float _1621 = isnan(1.0) ? _3426 : (isnan(_3426) ? 1.0 : min(_3426, 1.0));
    float _1622 = dot(vec3(cbLight._m0[_1449].xyz), vec3(_1608 * _1614, _1609 * _1614, _1610 * _1614));
    float _3437 = isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0));
    float _1631 = (exp2(log2(1.0 - (isnan(1.0) ? _3437 : (isnan(_3437) ? 1.0 : min(_3437, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1635 = (0.5 / ((_1621 + 9.9999999392252902907785028219223e-09) + _1568)) * _1621;
    float _3448 = isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0));
    float _1637 = (isnan(1.0) ? _3448 : (isnan(_3448) ? 1.0 : min(_3448, 1.0))) * 0.31831014156341552734375;
    float _1647 = (((_1631 * cbLight._m0[_1602].x) * _1637) * _1431) + ((((cbLight._m0[_1548].x * _1399) * _1580) * _1588) * _1445);
    float _1648 = (((_1631 * cbLight._m0[_1602].y) * _1637) * _1431) + ((((cbLight._m0[_1548].y * _1400) * _1580) * _1588) * _1445);
    float _1649 = (((_1631 * cbLight._m0[_1602].z) * _1637) * _1431) + ((((cbLight._m0[_1548].z * _1401) * _1580) * _1588) * _1445);
    float _1711;
    float _1713;
    float _1715;
    if (_1486)
    {
        _1711 = _1647;
        _1713 = _1648;
        _1715 = _1649;
    }
    else
    {
        uint _1717 = _1407 + 10u;
        uint _1723 = _1407 + 2u;
        float _1729 = cbLight._m0[_1723].x + _303;
        float _1730 = cbLight._m0[_1723].y + _304;
        float _1731 = cbLight._m0[_1723].z + _305;
        float _1735 = inversesqrt(dot(vec3(_1729, _1730, _1731), vec3(_1729, _1730, _1731)));
        float _1739 = dot(vec3(_222, _223, _224), vec3(cbLight._m0[_1723].xyz));
        float _3459 = isnan(0.0) ? _1739 : (isnan(_1739) ? 0.0 : max(_1739, 0.0));
        float _1742 = isnan(1.0) ? _3459 : (isnan(_3459) ? 1.0 : min(_3459, 1.0));
        float _1743 = dot(vec3(cbLight._m0[_1723].xyz), vec3(_1729 * _1735, _1730 * _1735, _1731 * _1735));
        float _3470 = isnan(0.0) ? _1743 : (isnan(_1743) ? 0.0 : max(_1743, 0.0));
        float _1752 = (exp2(log2(1.0 - (isnan(1.0) ? _3470 : (isnan(_3470) ? 1.0 : min(_3470, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1756 = (0.5 / ((_1742 + 9.9999999392252902907785028219223e-09) + _1568)) * _1742;
        float _3481 = isnan(0.0) ? _1756 : (isnan(_1756) ? 0.0 : max(_1756, 0.0));
        float _1758 = (isnan(1.0) ? _3481 : (isnan(_3481) ? 1.0 : min(_3481, 1.0))) * 0.31831014156341552734375;
        float _1759 = isnan(1.0) ? _1423 : (isnan(_1423) ? 1.0 : min(_1423, 1.0));
        _1711 = (((_1752 * cbLight._m0[_1717].x) * _1758) * _1759) + _1647;
        _1713 = (((_1752 * cbLight._m0[_1717].y) * _1758) * _1759) + _1648;
        _1715 = (((_1752 * cbLight._m0[_1717].z) * _1758) * _1759) + _1649;
    }
    float _1794;
    float _1796;
    float _1798;
    if (_1504)
    {
        _1794 = _1711;
        _1796 = _1713;
        _1798 = _1715;
    }
    else
    {
        uint _1805 = _1407 + 11u;
        uint _1811 = _1407 + 3u;
        float _1817 = cbLight._m0[_1811].x + _303;
        float _1818 = cbLight._m0[_1811].y + _304;
        float _1819 = cbLight._m0[_1811].z + _305;
        float _1823 = inversesqrt(dot(vec3(_1817, _1818, _1819), vec3(_1817, _1818, _1819)));
        float _1827 = dot(vec3(_222, _223, _224), vec3(cbLight._m0[_1811].xyz));
        float _3497 = isnan(0.0) ? _1827 : (isnan(_1827) ? 0.0 : max(_1827, 0.0));
        float _1830 = isnan(1.0) ? _3497 : (isnan(_3497) ? 1.0 : min(_3497, 1.0));
        float _1831 = dot(vec3(cbLight._m0[_1811].xyz), vec3(_1817 * _1823, _1818 * _1823, _1819 * _1823));
        float _3508 = isnan(0.0) ? _1831 : (isnan(_1831) ? 0.0 : max(_1831, 0.0));
        float _1840 = (exp2(log2(1.0 - (isnan(1.0) ? _3508 : (isnan(_3508) ? 1.0 : min(_3508, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1844 = (0.5 / ((_1830 + 9.9999999392252902907785028219223e-09) + _1568)) * _1830;
        float _3519 = isnan(0.0) ? _1844 : (isnan(_1844) ? 0.0 : max(_1844, 0.0));
        float _1846 = (isnan(1.0) ? _3519 : (isnan(_3519) ? 1.0 : min(_3519, 1.0))) * 0.31831014156341552734375;
        float _1847 = isnan(1.0) ? _1424 : (isnan(_1424) ? 1.0 : min(_1424, 1.0));
        _1794 = (((_1840 * cbLight._m0[_1805].x) * _1846) * _1847) + _1711;
        _1796 = (((_1840 * cbLight._m0[_1805].y) * _1846) * _1847) + _1713;
        _1798 = (((_1840 * cbLight._m0[_1805].z) * _1846) * _1847) + _1715;
    }
    float _1981;
    float _1983;
    float _1985;
    float _1987;
    float _1989;
    float _1991;
    if (_1405.y == 0u)
    {
        float _1922 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1923 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1922;
        float _1924 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1922;
        float _1925 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1922;
        uvec4 _1937 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1938 = _1937.x;
        uint _1949 = uint((float(_1937.y) * floor(float(uint(cbSceneParam._m0[85u].y * _312) / _1938))) + floor(float(uint(cbSceneParam._m0[85u].x * _311) / _1938)));
        float _1959 = (log2(_1925 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1960 = isnan(0.0) ? _1959 : (isnan(_1959) ? 0.0 : max(_1959, 0.0));
        uint _1963 = uint(isnan(14.0) ? _1960 : (isnan(_1960) ? 14.0 : min(_1960, 14.0)));
        uvec4 _1968 = texelFetch(g_lightClusterGridBuffer, int(((_1963 << 2u) + (_1949 << 6u)) >> 2u));
        uint _1969 = _1968.x;
        uint _1970 = _1937.z;
        float _2098;
        float _2100;
        float _2102;
        float _2104;
        float _2106;
        float _2108;
        if (((((1u << ((_1970 >> 4u) & 15u)) + 4294967295u) & _1969) == 0u) || ((_1970 & 240u) == 0u))
        {
            _2098 = 0.0;
            _2100 = 0.0;
            _2102 = 0.0;
            _2104 = 0.0;
            _2106 = 0.0;
            _2108 = 0.0;
        }
        else
        {
            float _2099;
            float _2101;
            float _2103;
            float _2105;
            float _2107;
            float _2109;
            float _2249 = 0.0;
            float _2250 = 0.0;
            float _2251 = 0.0;
            float _2252 = 0.0;
            float _2253 = 0.0;
            float _2254 = 0.0;
            uint _2255 = 0u;
            uint _2264;
            bool _2265;
            for (;;)
            {
                _2264 = texelFetch(g_lightClassification, int((((_1963 << 5u) + (_1949 << 9u)) + (_2255 << 2u)) >> 2u)).x;
                _2265 = _2264 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_2265)
                {
                    frontier_phi_63_pred = _2254;
                    frontier_phi_63_pred_1 = _2253;
                    frontier_phi_63_pred_2 = _2252;
                    frontier_phi_63_pred_3 = _2251;
                    frontier_phi_63_pred_4 = _2250;
                    frontier_phi_63_pred_5 = _2249;
                }
                else
                {
                    float _2373;
                    float _2374;
                    float _2375;
                    float _2376;
                    float _2377;
                    float _2378;
                    uint _2379;
                    _2373 = _2249;
                    _2374 = _2250;
                    _2375 = _2251;
                    _2376 = _2252;
                    _2377 = _2253;
                    _2378 = _2254;
                    _2379 = _2264;
                    float _2305;
                    float _2306;
                    float _2307;
                    float _2308;
                    float _2309;
                    float _2310;
                    for (;;)
                    {
                        uint _2383 = uint(findLSB(_2379)) + (_2255 << 5u);
                        uint _2380 = (_2379 + 4294967295u) & _2379;
                        uint _2385 = _2383 * 48u;
                        vec4 _2399 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2385)).x, texelFetch(g_PointLightRenderingBuffer, int(_2385 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2385 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2385 + 3u)).x));
                        uint _2405 = (_2383 * 48u) + 4u;
                        vec4 _2418 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2405)).x, texelFetch(g_PointLightRenderingBuffer, int(_2405 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2405 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2405 + 3u)).x));
                        uint _2424 = (_2383 * 48u) + 8u;
                        vec3 _2435 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2424)).x, texelFetch(g_PointLightRenderingBuffer, int(_2424 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2424 + 2u)).x));
                        float _2439 = _2399.x - _1923;
                        float _2440 = _2399.y - _1924;
                        float _2441 = _2399.z - _1925;
                        float _2442 = dot(vec3(_2439, _2440, _2441), vec3(_2439, _2440, _2441));
                        float _2445 = inversesqrt(_2442);
                        float _2454 = 1.0 - (_2442 * _2399.w);
                        float _3545 = isnan(0.0) ? _2454 : (isnan(_2454) ? 0.0 : max(_2454, 0.0));
                        float _2455 = isnan(1.0) ? _3545 : (isnan(_3545) ? 1.0 : min(_3545, 1.0));
                        float _2456 = sqrt(_2442) * _2418.w;
                        float _2459 = 1.39999997615814208984375 / (_2456 + 1.39999997615814208984375);
                        float _2460 = _2459 * _2459;
                        float _2463 = ((1.0 - _2460) * dot(vec3(_333, _336, _339), vec3(_2445 * _2439, _2445 * _2440, _2445 * _2441))) + _2460;
                        float _2466 = _2456 * _2456;
                        float _2470 = ((isnan(0.0) ? _2463 : (isnan(_2463) ? 0.0 : max(_2463, 0.0))) * _2455) / ((_2466 * 0.699999988079071044921875) + 1.0);
                        float _2474 = (-0.0) - _1923;
                        float _2475 = (-0.0) - _1924;
                        float _2476 = (-0.0) - _1925;
                        float _2480 = inversesqrt(dot(vec3(_2474, _2475, _2476), vec3(_2474, _2475, _2476)));
                        float _2484 = dot(vec3(_333, _336, _339), vec3(_2480 * _2474, _2480 * _2475, _2480 * _2476));
                        float _3561 = isnan(0.0) ? _2484 : (isnan(_2484) ? 0.0 : max(_2484, 0.0));
                        float _3572 = isnan(0.0) ? _2463 : (isnan(_2463) ? 0.0 : max(_2463, 0.0));
                        float _2488 = isnan(1.0) ? _3572 : (isnan(_3572) ? 1.0 : min(_3572, 1.0));
                        float _2492 = (0.5 / (((isnan(1.0) ? _3561 : (isnan(_3561) ? 1.0 : min(_3561, 1.0))) + 9.9999999392252902907785028219223e-09) + _2488)) * _2488;
                        float _3583 = isnan(0.0) ? _2492 : (isnan(_2492) ? 0.0 : max(_2492, 0.0));
                        float _2501 = (((isnan(1.0) ? _3583 : (isnan(_3583) ? 1.0 : min(_3583, 1.0))) * 3.1415927410125732421875) / ((_2466 * 2.1991131305694580078125) + 3.141590118408203125)) * _2455;
                        _2308 = (_2470 * _2418.x) + _2376;
                        _2309 = (_2470 * _2418.y) + _2377;
                        _2310 = (_2470 * _2418.z) + _2378;
                        _2305 = (_2501 * _2435.x) + _2373;
                        _2306 = (_2501 * _2435.y) + _2374;
                        _2307 = (_2501 * _2435.z) + _2375;
                        if (_2380 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2373 = _2305;
                            _2374 = _2306;
                            _2375 = _2307;
                            _2376 = _2308;
                            _2377 = _2309;
                            _2378 = _2310;
                            _2379 = _2380;
                        }
                    }
                    frontier_phi_63_pred = _2310;
                    frontier_phi_63_pred_1 = _2309;
                    frontier_phi_63_pred_2 = _2308;
                    frontier_phi_63_pred_3 = _2307;
                    frontier_phi_63_pred_4 = _2306;
                    frontier_phi_63_pred_5 = _2305;
                }
                _2109 = frontier_phi_63_pred;
                _2107 = frontier_phi_63_pred_1;
                _2105 = frontier_phi_63_pred_2;
                _2103 = frontier_phi_63_pred_3;
                _2101 = frontier_phi_63_pred_4;
                _2099 = frontier_phi_63_pred_5;
                uint _2256 = _2255 + 1u;
                if (_2256 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2249 = _2099;
                    _2250 = _2101;
                    _2251 = _2103;
                    _2252 = _2105;
                    _2253 = _2107;
                    _2254 = _2109;
                    _2255 = _2256;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2098 = _2099;
            _2100 = _2101;
            _2102 = _2103;
            _2104 = _2105;
            _2106 = _2107;
            _2108 = _2109;
        }
        uvec4 _2112 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2113 = _2112.z;
        uint _2115 = (_2113 >> 8u) & 15u;
        float _2220;
        float _2222;
        float _2224;
        float _2226;
        float _2228;
        float _2230;
        if (((4294967295u << _2115) & _1969) == 0u)
        {
            _2220 = _2098;
            _2222 = _2100;
            _2224 = _2102;
            _2226 = _2104;
            _2228 = _2106;
            _2230 = _2108;
        }
        else
        {
            float _2245 = inversesqrt(dot(vec3(_1923, _1924, _1925), vec3(_1923, _1924, _1925)));
            float frontier_phi_57_58_ladder;
            float frontier_phi_57_58_ladder_1;
            float frontier_phi_57_58_ladder_2;
            float frontier_phi_57_58_ladder_3;
            float frontier_phi_57_58_ladder_4;
            float frontier_phi_57_58_ladder_5;
            if (_2115 < ((_2113 >> 12u) & 15u))
            {
                float _2221;
                float _2223;
                float _2225;
                float _2227;
                float _2229;
                float _2231;
                float _2356 = _2098;
                float _2357 = _2100;
                float _2358 = _2102;
                float _2359 = _2104;
                float _2360 = _2106;
                float _2361 = _2108;
                uint _2362 = _2115;
                uint _2371;
                bool _2372;
                for (;;)
                {
                    _2371 = texelFetch(g_lightClassification, int((((_1963 << 5u) + (_1949 << 9u)) + (_2362 << 2u)) >> 2u)).x;
                    _2372 = _2371 == 0u;
                    float frontier_phi_69_pred;
                    float frontier_phi_69_pred_1;
                    float frontier_phi_69_pred_2;
                    float frontier_phi_69_pred_3;
                    float frontier_phi_69_pred_4;
                    float frontier_phi_69_pred_5;
                    if (_2372)
                    {
                        frontier_phi_69_pred = _2361;
                        frontier_phi_69_pred_1 = _2360;
                        frontier_phi_69_pred_2 = _2359;
                        frontier_phi_69_pred_3 = _2358;
                        frontier_phi_69_pred_4 = _2357;
                        frontier_phi_69_pred_5 = _2356;
                    }
                    else
                    {
                        float _2506;
                        float _2507;
                        float _2508;
                        float _2509;
                        float _2510;
                        float _2511;
                        float _2758;
                        float _2759;
                        float _2760;
                        float _2761;
                        float _2762;
                        float _2763;
                        float _2519 = _2356;
                        float _2520 = _2357;
                        float _2521 = _2358;
                        float _2522 = _2359;
                        float _2523 = _2360;
                        float _2524 = _2361;
                        uint _2525 = _2371;
                        uint _2526;
                        vec4 _2551;
                        float _2552;
                        vec4 _2567;
                        vec3 _2579;
                        vec4 _2595;
                        vec4 _2611;
                        float _2658;
                        bool _2659;
                        for (;;)
                        {
                            uint _2536 = ((_2362 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2525));
                            _2526 = (_2525 + 4294967295u) & _2525;
                            uint _2538 = _2536 * 40u;
                            _2551 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2538)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2538 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2538 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2538 + 3u)).x));
                            _2552 = _2551.w;
                            uint _2554 = (_2536 * 40u) + 4u;
                            _2567 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2554)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2554 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2554 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2554 + 3u)).x));
                            uint _2569 = (_2536 * 40u) + 8u;
                            _2579 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2569)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2569 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2569 + 2u)).x));
                            uint _2582 = (_2536 * 40u) + 16u;
                            _2595 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2582)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2582 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2582 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2582 + 3u)).x));
                            uint _2598 = (_2536 * 40u) + 20u;
                            _2611 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2598)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2598 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2598 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2598 + 3u)).x));
                            uint _2614 = (_2536 * 40u) + 24u;
                            vec4 _2627 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2614)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2614 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2614 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2614 + 3u)).x));
                            uint _2633 = (_2536 * 40u) + 28u;
                            vec4 _2646 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2633)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2633 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2633 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2633 + 3u)).x));
                            _2658 = fma(_1925, _2646.z, fma(_1924, _2646.y, _2646.x * _1923)) + _2646.w;
                            _2659 = !((fma(_1925, _2627.z, fma(_1924, _2627.y, _2627.x * _1923)) + _2627.w) <= 0.0);
                            float frontier_phi_75_pred;
                            float frontier_phi_75_pred_1;
                            float frontier_phi_75_pred_2;
                            float frontier_phi_75_pred_3;
                            float frontier_phi_75_pred_4;
                            float frontier_phi_75_pred_5;
                            if (_2659)
                            {
                                float _2686 = _2551.x - _1923;
                                float _2687 = _2551.y - _1924;
                                float _2688 = _2551.z - _1925;
                                float _2689 = dot(vec3(_2686, _2687, _2688), vec3(_2686, _2687, _2688));
                                float _2692 = inversesqrt(_2689);
                                float _2693 = _2692 * _2686;
                                float _2694 = _2692 * _2687;
                                float _2695 = _2692 * _2688;
                                float _2699 = 1.0 - (_2689 / (_2552 * _2552));
                                float _3594 = isnan(0.0) ? _2699 : (isnan(_2699) ? 0.0 : max(_2699, 0.0));
                                float _2700 = isnan(1.0) ? _3594 : (isnan(_3594) ? 1.0 : min(_3594, 1.0));
                                float _2704 = sqrt(_2689) * _2567.w;
                                float _2706 = 1.39999997615814208984375 / (_2704 + 1.39999997615814208984375);
                                float _2707 = _2706 * _2706;
                                float _2708 = 1.0 - _2707;
                                float _2710 = (_2708 * dot(vec3(_2693, _2694, _2695), vec3(_333, _336, _339))) + _2707;
                                float _2713 = _2704 * _2704;
                                float _2717 = (fma(_1925, _2595.z, fma(_1924, _2595.y, _2595.x * _1923)) + _2595.w) / _2658;
                                float _2718 = (fma(_1925, _2611.z, fma(_1924, _2611.y, _2611.x * _1923)) + _2611.w) / _2658;
                                float _2722 = 1.0 - dot(vec2(_2717, _2718), vec2(_2717, _2718));
                                float _3610 = isnan(0.0) ? _2722 : (isnan(_2722) ? 0.0 : max(_2722, 0.0));
                                float _2723 = isnan(1.0) ? _3610 : (isnan(_3610) ? 1.0 : min(_3610, 1.0));
                                float _2724 = _2723 * (((isnan(0.0) ? _2710 : (isnan(_2710) ? 0.0 : max(_2710, 0.0))) * _2700) / ((_2713 * 0.699999988079071044921875) + 1.0));
                                float _2734 = dot(vec3(_333, _336, _339), vec3((-0.0) - (_1923 * _2245), (-0.0) - (_1924 * _2245), (-0.0) - (_1925 * _2245)));
                                float _3621 = isnan(0.0) ? _2734 : (isnan(_2734) ? 0.0 : max(_2734, 0.0));
                                float _2742 = (_2708 * dot(vec3(_333, _336, _339), vec3(_2693, _2694, _2695))) + _2707;
                                float _3632 = isnan(0.0) ? _2742 : (isnan(_2742) ? 0.0 : max(_2742, 0.0));
                                float _2743 = isnan(1.0) ? _3632 : (isnan(_3632) ? 1.0 : min(_3632, 1.0));
                                float _2747 = (0.5 / (((isnan(1.0) ? _3621 : (isnan(_3621) ? 1.0 : min(_3621, 1.0))) + 9.9999999392252902907785028219223e-09) + _2743)) * _2743;
                                float _3643 = isnan(0.0) ? _2747 : (isnan(_2747) ? 0.0 : max(_2747, 0.0));
                                float _2754 = (_2723 * _2700) * (((isnan(1.0) ? _3643 : (isnan(_3643) ? 1.0 : min(_3643, 1.0))) * 3.1415927410125732421875) / ((_2713 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_75_pred = _2724 * _2567.z;
                                frontier_phi_75_pred_1 = _2724 * _2567.y;
                                frontier_phi_75_pred_2 = _2724 * _2567.x;
                                frontier_phi_75_pred_3 = _2754 * _2579.z;
                                frontier_phi_75_pred_4 = _2754 * _2579.y;
                                frontier_phi_75_pred_5 = _2754 * _2579.x;
                            }
                            else
                            {
                                frontier_phi_75_pred = 0.0;
                                frontier_phi_75_pred_1 = 0.0;
                                frontier_phi_75_pred_2 = 0.0;
                                frontier_phi_75_pred_3 = 0.0;
                                frontier_phi_75_pred_4 = 0.0;
                                frontier_phi_75_pred_5 = 0.0;
                            }
                            _2763 = frontier_phi_75_pred;
                            _2762 = frontier_phi_75_pred_1;
                            _2761 = frontier_phi_75_pred_2;
                            _2760 = frontier_phi_75_pred_3;
                            _2759 = frontier_phi_75_pred_4;
                            _2758 = frontier_phi_75_pred_5;
                            _2509 = _2761 + _2522;
                            _2510 = _2762 + _2523;
                            _2511 = _2763 + _2524;
                            _2506 = _2758 + _2519;
                            _2507 = _2759 + _2520;
                            _2508 = _2760 + _2521;
                            if (_2526 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2519 = _2506;
                                _2520 = _2507;
                                _2521 = _2508;
                                _2522 = _2509;
                                _2523 = _2510;
                                _2524 = _2511;
                                _2525 = _2526;
                                continue;
                            }
                        }
                        frontier_phi_69_pred = _2511;
                        frontier_phi_69_pred_1 = _2510;
                        frontier_phi_69_pred_2 = _2509;
                        frontier_phi_69_pred_3 = _2508;
                        frontier_phi_69_pred_4 = _2507;
                        frontier_phi_69_pred_5 = _2506;
                    }
                    _2231 = frontier_phi_69_pred;
                    _2229 = frontier_phi_69_pred_1;
                    _2227 = frontier_phi_69_pred_2;
                    _2225 = frontier_phi_69_pred_3;
                    _2223 = frontier_phi_69_pred_4;
                    _2221 = frontier_phi_69_pred_5;
                    uint _2363 = _2362 + 1u;
                    if (_2363 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2356 = _2221;
                        _2357 = _2223;
                        _2358 = _2225;
                        _2359 = _2227;
                        _2360 = _2229;
                        _2361 = _2231;
                        _2362 = _2363;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_57_58_ladder = _2231;
                frontier_phi_57_58_ladder_1 = _2229;
                frontier_phi_57_58_ladder_2 = _2227;
                frontier_phi_57_58_ladder_3 = _2225;
                frontier_phi_57_58_ladder_4 = _2223;
                frontier_phi_57_58_ladder_5 = _2221;
            }
            else
            {
                frontier_phi_57_58_ladder = _2108;
                frontier_phi_57_58_ladder_1 = _2106;
                frontier_phi_57_58_ladder_2 = _2104;
                frontier_phi_57_58_ladder_3 = _2102;
                frontier_phi_57_58_ladder_4 = _2100;
                frontier_phi_57_58_ladder_5 = _2098;
            }
            _2220 = frontier_phi_57_58_ladder_5;
            _2222 = frontier_phi_57_58_ladder_4;
            _2224 = frontier_phi_57_58_ladder_3;
            _2226 = frontier_phi_57_58_ladder_2;
            _2228 = frontier_phi_57_58_ladder_1;
            _2230 = frontier_phi_57_58_ladder;
        }
        float _2235 = isnan(1.0) ? _378 : (isnan(_378) ? 1.0 : min(_378, 1.0));
        _1981 = (_2235 * _2226) + _1542;
        _1983 = (_2235 * _2228) + _1544;
        _1985 = (_2235 * _2230) + _1546;
        _1987 = ((_2220 * 0.039999999105930328369140625) * _2235) + _1794;
        _1989 = ((_2222 * 0.039999999105930328369140625) * _2235) + _1796;
        _1991 = ((_2224 * 0.039999999105930328369140625) * _2235) + _1798;
    }
    else
    {
        _1981 = _1542;
        _1983 = _1544;
        _1985 = _1546;
        _1987 = _1794;
        _1989 = _1796;
        _1991 = _1798;
    }
    uint _1997 = _354 + uint(cbMatDynParam._m0[0u].w);
    float _2003 = (_210.x * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_1997].x;
    float _2004 = (_210.y * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_1997].y;
    float _2005 = (_210.z * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_1997].z;
    float _3659 = isnan(0.0) ? _364 : (isnan(_364) ? 0.0 : max(_364, 0.0));
    float _3670 = isnan(0.0) ? _365 : (isnan(_365) ? 0.0 : max(_365, 0.0));
    float _3681 = isnan(0.0) ? _366 : (isnan(_366) ? 0.0 : max(_366, 0.0));
    float _2022 = (((isnan(1.0) ? _3659 : (isnan(_3659) ? 1.0 : min(_3659, 1.0))) * (_1981 + ((isnan(0.0) ? _1078 : (isnan(_1078) ? 0.0 : max(_1078, 0.0))) * _378))) + ((_1987 + ((isnan(0.0) ? _1371 : (isnan(_1371) ? 0.0 : max(_1371, 0.0))) * _1157)) * cbPerFrame._m0[3u].x)) + _2003;
    float _2024 = (_2004 + ((_1989 + ((isnan(0.0) ? _1374 : (isnan(_1374) ? 0.0 : max(_1374, 0.0))) * _1157)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _3670 : (isnan(_3670) ? 1.0 : min(_3670, 1.0))) * (_1983 + ((isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0))) * _378)));
    float _2026 = (_2005 + ((_1991 + ((isnan(0.0) ? _1377 : (isnan(_1377) ? 0.0 : max(_1377, 0.0))) * _1157)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _3681 : (isnan(_3681) ? 1.0 : min(_3681, 1.0))) * (_1985 + ((isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0))) * _378)));
    float _3707 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2039 = isnan(1.0) ? _3707 : (isnan(_3707) ? 1.0 : min(_3707, 1.0));
    uint _2040 = _352 + 6u;
    float _2048 = _311 / cbSceneParam._m0[86u].x;
    float _2049 = _312 / cbSceneParam._m0[86u].y;
    vec4 _2063 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2048, _2049, (log2((isnan(cbSceneParam._m0[77u].w) ? _244 : (isnan(_244) ? cbSceneParam._m0[77u].w : min(_244, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2065 = _2063.x;
    float _2066 = _2063.y;
    float _2067 = _2063.z;
    float _2068 = _2063.w;
    float _2160;
    float _2162;
    float _2164;
    float _2166;
    if (_244 > cbSceneParam._m0[78u].w)
    {
        float _2123 = isnan(_244) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _244 : min(cbSceneParam._m0[80u].w, _244));
        float _2124 = _2123 / _244;
        float _2135 = _2124 * _296;
        float _2136 = _297 * _2124;
        float _2137 = (-0.0) - _2136;
        float _2138 = _2124 * _298;
        float _2140 = (cbSceneParam._m0[77u].w * _2137) / _2123;
        float _2141 = _2140 + cbSceneParam._m0[79u].w;
        float _2142 = cbSceneParam._m0[79u].w - _2136;
        float _2148 = sqrt(((_2135 * _2135) + (_2136 * _2136)) + (_2138 * _2138));
        float _2151 = (1.0 - (cbSceneParam._m0[77u].w / _2123)) * _2148;
        float _2156 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2158 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2318;
        if (abs((_2137 - _2140) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2318 = ((((_2141 > 0.0) ? exp2(_2156 * _2141) : (2.0 - exp2(_2158 * _2141))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2151;
        }
        else
        {
            float _2278 = 1.0 / cbSceneParam._m0[80u].x;
            float _2279 = isnan(_2142) ? _2141 : (isnan(_2141) ? _2142 : max(_2141, _2142));
            float _2280 = isnan(_2142) ? _2141 : (isnan(_2141) ? _2142 : min(_2141, _2142));
            float _2289 = isnan(0.0) ? _2279 : (isnan(_2279) ? 0.0 : min(_2279, 0.0));
            float _2290 = isnan(0.0) ? _2280 : (isnan(_2280) ? 0.0 : min(_2280, 0.0));
            _2318 = ((abs(_2148 / _2137) * cbSceneParam._m0[80u].y) * ((((_2289 - _2290) * 2.0) - ((exp2(_2156 * (isnan(0.0) ? _2279 : (isnan(_2279) ? 0.0 : max(_2279, 0.0)))) - exp2(_2156 * (isnan(0.0) ? _2280 : (isnan(_2280) ? 0.0 : max(_2280, 0.0))))) * _2278)) - ((exp2(_2158 * _2289) - exp2(_2158 * _2290)) * _2278))) + (_2151 * cbSceneParam._m0[80u].z);
        }
        vec4 _2320 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2048, _2049, 1.0), 0.0);
        float _2329 = exp2((_2318 * (-1.44269502162933349609375)) * (1.0 - _2320.w));
        float _2330 = log2(_2329);
        float _2346 = log2(_2068);
        _2160 = (exp2(_2346 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2330 * cbSceneParam._m0[78u].x)) * _2320.x) / cbSceneParam._m0[78u].x)) + _2065;
        _2162 = (exp2(_2346 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2330 * cbSceneParam._m0[78u].y)) * _2320.y) / cbSceneParam._m0[78u].y)) + _2066;
        _2164 = (exp2(_2346 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2330 * cbSceneParam._m0[78u].z)) * _2320.z) / cbSceneParam._m0[78u].z)) + _2067;
        _2166 = _2329 * _2068;
    }
    else
    {
        _2160 = _2065;
        _2162 = _2066;
        _2164 = _2067;
        _2166 = _2068;
    }
    float _2178 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2179 = _2178 == 3.0;
    float _2181 = log2(_2166);
    float _2185 = exp2(_2181 * cbSceneParam._m0[78u].x);
    float _2186 = exp2(_2181 * cbSceneParam._m0[78u].y);
    float _2187 = exp2(_2181 * cbSceneParam._m0[78u].z);
    float _2188 = _2185 * (isnan(0.0) ? _2022 : (isnan(_2022) ? 0.0 : max(_2022, 0.0)));
    float _2189 = _2186 * (isnan(0.0) ? _2024 : (isnan(_2024) ? 0.0 : max(_2024, 0.0)));
    float _2190 = _2187 * (isnan(0.0) ? _2026 : (isnan(_2026) ? 0.0 : max(_2026, 0.0)));
    float _2199 = (_2178 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2199 * (_2179 ? _2188 : (_2188 + (cbSceneParam._m0[72u].w * _2160)));
    SV_Target.y = _2199 * (_2179 ? _2189 : (_2189 + (cbSceneParam._m0[72u].w * _2162)));
    SV_Target.z = _2199 * (_2179 ? _2190 : (_2190 + (cbSceneParam._m0[72u].w * _2164)));
    SV_Target.w = cbInstanceData._m0[_2040].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2003) * _2039) * _2185) * _2199;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2004) * _2039) * _2186) * _2199;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2005) * _2039) * _2187) * _2199;
    SV_Target_1.w = cbInstanceData._m0[_2040].w;
}


