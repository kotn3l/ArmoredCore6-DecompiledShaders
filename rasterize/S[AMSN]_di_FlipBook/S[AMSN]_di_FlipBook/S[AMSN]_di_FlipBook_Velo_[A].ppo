#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D S_AMSN_di_FlipBook_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_6;
layout(location = 6) in vec4 TEXCOORD_7;
layout(location = 7) in vec3 TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    uint _126 = uint(int(floor(cbMtdParam._m0[10u].z)));
    uint _127 = uint(int(cbMtdParam._m0[11u].x * cbMtdParam._m0[10u].w));
    float _129 = float(int(_126 - _127 * (_126 / _127)));
    vec4 _167 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _169 = _167.x;
    float _193 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _169)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _169))) - POSITION_1.w) / cbMtdParam._m0[10u].y;
    float _409 = isnan(0.0) ? _193 : (isnan(_193) ? 0.0 : max(_193, 0.0));
    float _198 = gl_FragCoord.x * 0.125;
    float _200 = gl_FragCoord.y * 0.125;
    float _210 = float((((cbMtdParam._m0[9u].w * TEXCOORD_1.z) * texture(sampler2D(S_AMSN_di_FlipBook_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((fract(TEXCOORD_1.x) + (_129 - cbMtdParam._m0[10u].w * trunc(_129 / cbMtdParam._m0[10u].w))) * (1.0 / cbMtdParam._m0[10u].w)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((fract(TEXCOORD_1.y) + floor(_129 / cbMtdParam._m0[10u].w)) * (1.0 / cbMtdParam._m0[11u].x)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).w) * (isnan(1.0) ? _409 : (isnan(_409) ? 1.0 : min(_409, 1.0)))) >= ((texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_198, _200)).w * 0.9900000095367431640625) + 0.00999999977648258209228515625));
    uint _212 = uint(roundEven(NORMAL.w));
    float _224 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? TEXCOORD_6.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * TEXCOORD_6.z));
    float _265 = fma(TEXCOORD_6.w, cbSceneParam._m0[11u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[11u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * TEXCOORD_6.x)));
    float _275 = cbSceneParam._m0[71u].x - (fma(TEXCOORD_6.w, cbSceneParam._m0[8u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[8u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * TEXCOORD_6.x))) / _265);
    float _276 = cbSceneParam._m0[71u].y - (fma(TEXCOORD_6.w, cbSceneParam._m0[9u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[9u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * TEXCOORD_6.x))) / _265);
    float _277 = cbSceneParam._m0[71u].z - (fma(TEXCOORD_6.w, cbSceneParam._m0[10u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[10u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * TEXCOORD_6.x))) / _265);
    vec4 _278 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_198, _200));
    float _280 = _278.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _316 = sqrt(((_275 * _275) + (_276 * _276)) + (_277 * _277));
        float _323 = (cbMatDynParam._m0[5u].x * _316) + cbMatDynParam._m0[5u].y;
        float _420 = isnan(0.0) ? _323 : (isnan(_323) ? 0.0 : max(_323, 0.0));
        float _324 = isnan(1.0) ? _420 : (isnan(_420) ? 1.0 : min(_420, 1.0));
        float _328 = (cbMatDynParam._m0[5u].z * _316) + cbMatDynParam._m0[5u].w;
        float _431 = isnan(0.0) ? _328 : (isnan(_328) ? 0.0 : max(_328, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _431 : (isnan(_431) ? 1.0 : min(_431, 1.0))) - _324)) + _324) < ((_280 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _359;
    float _291;
    float _292;
    vec4 _296;
    float _298;
    float _299;
    bool _310;
    for (;;)
    {
        _291 = (TEXCOORD_6.x / TEXCOORD_6.w) - (TEXCOORD_7.x / TEXCOORD_7.w);
        _292 = (TEXCOORD_6.y / TEXCOORD_6.w) - (TEXCOORD_7.y / TEXCOORD_7.w);
        float _293 = _280 + (-0.5);
        _296 = cbMtdParam._m0[1u];
        _298 = _296.y * _293;
        _299 = _293 * 0.999000012874603271484375;
        _310 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_310)
        {
            if ((cbInstanceData._m0[(_212 * 13u) + 7u].x + _299) < 0.5)
            {
                _359 = true;
                break;
            }
        }
        if ((cbInstanceData._m0[6u].w < 1.0) && ((cbInstanceData._m0[6u].w + _299) < 0.5))
        {
            _359 = true;
            break;
        }
        if ((_298 + _210) < _296.x)
        {
            _359 = true;
            break;
        }
        _359 = false;
        break;
    }
    if (_359)
    {
        discard_state = true;
    }
    SV_Target.x = ((cbModelParam._m0[0u].x * _291) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.y = ((cbModelParam._m0[0u].y * _292) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.z = _224 / (_224 + 10.0);
    SV_Target.w = 1.0;
    discard_exit();
}


