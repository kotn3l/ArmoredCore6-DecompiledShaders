#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_POM_M1_AO_Edge_snp_0_Texture2D_3;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_POM_M1_AO_Edge_snp_0_Texture2D_4;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_POM_M1_AO_Edge_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _149 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _150 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _151 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _156 = inversesqrt(dot(vec3(_149, _150, _151), vec3(_149, _150, _151)));
    float _157 = _156 * _149;
    float _158 = _156 * _150;
    float _159 = _156 * _151;
    float _163 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _164 = _163 * NORMAL.x;
    float _165 = _163 * NORMAL.y;
    float _166 = _163 * NORMAL.z;
    float _170 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _171 = _170 * TANGENT.x;
    float _172 = _170 * TANGENT.y;
    float _173 = _170 * TANGENT.z;
    float _178;
    float _179;
    float _180;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _178 = (-0.0) - _164;
        _179 = (-0.0) - _165;
        _180 = (-0.0) - _166;
    }
    else
    {
        _178 = _164;
        _179 = _165;
        _180 = _166;
    }
    float _224 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _234 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _224);
    float _235 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _224);
    float _236 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _224);
    float _245 = dot(vec3(_234, _235, _236), vec3(_157, _158, _159));
    float _248 = dot(vec3(_234, _235, _236), vec3(_171, _172, _173));
    float _251 = dot(vec3(_234, _235, _236), vec3(_178, _179, _180));
    float _257 = inversesqrt(dot(vec3(_245, _248, _251), vec3(_245, _248, _251)));
    vec4 _270 = texture(sampler2D(M_AMSN_POM_M1_AO_Edge_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _281 = dot(vec4(_270), vec4(1.0, 0.0, 0.0, 0.0)) + (-0.5);
    float _289 = (((cbMtdParam._m0[10u].y * _245) * _257) * _281) + TEXCOORD.x;
    float _290 = (((_248 * cbMtdParam._m0[10u].y) * _257) * _281) + TEXCOORD.y;
    vec4 _302 = texture(sampler2D(M_AMSN_POM_M1_AO_Edge_snp_0_Texture2D_4, SS_DiffuseMap), vec2((_289 * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (_290 * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _307 = _302.w;
    float _308 = _302.x * cbMtdParam._m0[9u].x;
    float _309 = _302.y * cbMtdParam._m0[9u].y;
    float _310 = _302.z * cbMtdParam._m0[9u].z;
    vec4 _322 = texture(sampler2D(M_AMSN_POM_M1_AO_Edge_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * _289) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _290) + cbTextureTilingScale._m0[3u].w));
    float _326 = _322.z;
    float _331 = (_322.x * 2.0) + (-1.0);
    float _333 = (_322.y * 2.0) + (-1.0);
    float _334 = dot(vec2(_331, _333), vec2(_331, _333));
    float _553 = isnan(0.0) ? _334 : (isnan(_334) ? 0.0 : max(_334, 0.0));
    float _339 = sqrt(1.0 - (isnan(1.0) ? _553 : (isnan(_553) ? 1.0 : min(_553, 1.0))));
    float _342 = fma(_339, _178, fma(_333, _171, _331 * _157));
    float _345 = fma(_339, _179, fma(_333, _172, _331 * _158));
    float _348 = fma(_339, _180, fma(_333, _173, _331 * _159));
    float _352 = inversesqrt(dot(vec3(_342, _345, _348), vec3(_342, _345, _348)));
    float _353 = _352 * _342;
    float _354 = _352 * _345;
    float _355 = _352 * _348;
    float _357 = cbMtdParam._m0[10u].x + _322.w;
    float _361 = inversesqrt(dot(vec3(_353, _354, _355), vec3(_353, _354, _355)));
    float _564 = isnan(0.0) ? _326 : (isnan(_326) ? 0.0 : max(_326, 0.0));
    float _575 = isnan(0.0) ? _357 : (isnan(_357) ? 0.0 : max(_357, 0.0));
    float _363 = isnan(1.0) ? _575 : (isnan(_575) ? 1.0 : min(_575, 1.0));
    float _586 = isnan(0.0) ? _308 : (isnan(_308) ? 0.0 : max(_308, 0.0));
    float _364 = isnan(1.0) ? _586 : (isnan(_586) ? 1.0 : min(_586, 1.0));
    float _597 = isnan(0.0) ? _309 : (isnan(_309) ? 0.0 : max(_309, 0.0));
    float _365 = isnan(1.0) ? _597 : (isnan(_597) ? 1.0 : min(_597, 1.0));
    float _608 = isnan(0.0) ? _310 : (isnan(_310) ? 0.0 : max(_310, 0.0));
    float _366 = isnan(1.0) ? _608 : (isnan(_608) ? 1.0 : min(_608, 1.0));
    uint _368 = uint(roundEven(NORMAL.w));
    vec4 _373 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _375 = _373.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _437 = sqrt(((_234 * _234) + (_235 * _235)) + (_236 * _236));
        float _444 = (cbMatDynParam._m0[5u].x * _437) + cbMatDynParam._m0[5u].y;
        float _619 = isnan(0.0) ? _444 : (isnan(_444) ? 0.0 : max(_444, 0.0));
        float _445 = isnan(1.0) ? _619 : (isnan(_619) ? 1.0 : min(_619, 1.0));
        float _449 = (cbMatDynParam._m0[5u].z * _437) + cbMatDynParam._m0[5u].w;
        float _630 = isnan(0.0) ? _449 : (isnan(_449) ? 0.0 : max(_449, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _630 : (isnan(_630) ? 1.0 : min(_630, 1.0))) - _445)) + _445) < ((_375 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _478;
    uint _395;
    vec4 _400;
    float _407;
    float _408;
    float _409;
    float _410;
    float _414;
    vec4 _417;
    float _419;
    float _420;
    bool _431;
    for (;;)
    {
        _395 = _368 * 13u;
        _400 = cbInstanceData._m0[(_395 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _404 = (cbMtdParam._m0[0u].x * _364) * _400.x;
        float _405 = (cbMtdParam._m0[0u].y * _365) * _400.y;
        float _406 = (cbMtdParam._m0[0u].z * _366) * _400.z;
        float _641 = isnan(0.0) ? _404 : (isnan(_404) ? 0.0 : max(_404, 0.0));
        _407 = isnan(1.0) ? _641 : (isnan(_641) ? 1.0 : min(_641, 1.0));
        float _652 = isnan(0.0) ? _405 : (isnan(_405) ? 0.0 : max(_405, 0.0));
        _408 = isnan(1.0) ? _652 : (isnan(_652) ? 1.0 : min(_652, 1.0));
        float _663 = isnan(0.0) ? _406 : (isnan(_406) ? 0.0 : max(_406, 0.0));
        _409 = isnan(1.0) ? _663 : (isnan(_663) ? 1.0 : min(_663, 1.0));
        _410 = _363 * TEXCOORD.z;
        _414 = cbInstanceData._m0[_395 + 6u].w;
        float _415 = _375 + (-0.5);
        _417 = cbMtdParam._m0[1u];
        _419 = _417.y * _415;
        _420 = _415 * 0.999000012874603271484375;
        _431 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_431)
        {
            if ((cbInstanceData._m0[_395 + 7u].x + _420) < 0.5)
            {
                _478 = true;
                break;
            }
        }
        if ((_400.w < 1.0) && ((_400.w + _420) < 0.5))
        {
            _478 = true;
            break;
        }
        if ((_419 + _307) < _417.x)
        {
            _478 = true;
            break;
        }
        _478 = false;
        break;
    }
    if (_478)
    {
        discard_state = true;
    }
    bool _504 = cbMtdParam._m0[1u].z != 0.0;
    float _505 = _504 ? _414 : 0.0;
    SV_Target.x = ((_353 * 0.5) * _361) + 0.500488758087158203125;
    SV_Target.y = ((_354 * 0.5) * _361) + 0.500488758087158203125;
    SV_Target.z = ((_355 * 0.5) * _361) + 0.500488758087158203125;
    SV_Target.w = _505;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _564 : (isnan(_564) ? 1.0 : min(_564, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _504 ? _414 : _410;
    SV_Target_2.x = _407;
    SV_Target_2.y = _408;
    SV_Target_2.z = _409;
    SV_Target_2.w = _504 ? _414 : (float(floatBitsToUint(cbInstanceData._m0[_395 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _505;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _505;
    discard_exit();
}


