#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_2;
layout(location = 4) out vec4 TEXCOORD_5;
layout(location = 5) out vec2 TEXCOORD_9;
layout(location = 5, component = 2) out float TEXCOORD_13;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_13 = 0.0;
    float _191 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _193 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _194 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _203 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _204 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _205 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _215 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _217 = texelFetch(g_InstanceIndexBuffer, int(_215));
    uint _218 = _217.x;
    precise float _219 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _224 = isnan(_219) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _219 : max(0.001000000047497451305389404296875, _219));
    precise float _226 = BLENDWEIGHT.x / _224;
    precise float _227 = BLENDWEIGHT.y / _224;
    precise float _228 = BLENDWEIGHT.z / _224;
    precise float _229 = BLENDWEIGHT.w / _224;
    uvec4 _236 = floatBitsToUint(cbInstanceData._m0[(_218 * 13u) + 4u]);
    uint _237 = _236.x;
    uint _239 = (_237 + uint(float(BLENDINDICES.x))) * 3u;
    uint _246 = _239 + 1u;
    uint _253 = _239 + 2u;
    precise float _260 = _226 * cbObjMatrix._m0[_239].x;
    precise float _261 = _226 * cbObjMatrix._m0[_246].x;
    precise float _262 = _226 * cbObjMatrix._m0[_253].x;
    precise float _263 = _226 * cbObjMatrix._m0[_239].y;
    precise float _264 = _226 * cbObjMatrix._m0[_246].y;
    precise float _265 = _226 * cbObjMatrix._m0[_253].y;
    precise float _266 = _226 * cbObjMatrix._m0[_239].z;
    precise float _267 = _226 * cbObjMatrix._m0[_246].z;
    precise float _268 = _226 * cbObjMatrix._m0[_253].z;
    precise float _269 = _226 * cbObjMatrix._m0[_239].w;
    precise float _270 = _226 * cbObjMatrix._m0[_246].w;
    precise float _271 = _226 * cbObjMatrix._m0[_253].w;
    uint _274 = (_237 + uint(float(BLENDINDICES.y))) * 3u;
    uint _281 = _274 + 1u;
    uint _288 = _274 + 2u;
    precise float _295 = _227 * cbObjMatrix._m0[_274].x;
    precise float _296 = _227 * cbObjMatrix._m0[_281].x;
    precise float _297 = _227 * cbObjMatrix._m0[_288].x;
    precise float _298 = _227 * cbObjMatrix._m0[_274].y;
    precise float _299 = _227 * cbObjMatrix._m0[_281].y;
    precise float _300 = _227 * cbObjMatrix._m0[_288].y;
    precise float _301 = _227 * cbObjMatrix._m0[_274].z;
    precise float _302 = _227 * cbObjMatrix._m0[_281].z;
    precise float _303 = _227 * cbObjMatrix._m0[_288].z;
    precise float _304 = _227 * cbObjMatrix._m0[_274].w;
    precise float _305 = _227 * cbObjMatrix._m0[_281].w;
    precise float _306 = _227 * cbObjMatrix._m0[_288].w;
    precise float _307 = _260 + _295;
    precise float _308 = _261 + _296;
    precise float _309 = _262 + _297;
    precise float _310 = _263 + _298;
    precise float _311 = _264 + _299;
    precise float _312 = _265 + _300;
    precise float _313 = _266 + _301;
    precise float _314 = _267 + _302;
    precise float _315 = _268 + _303;
    precise float _316 = _269 + _304;
    precise float _317 = _270 + _305;
    precise float _318 = _271 + _306;
    uint _321 = (_237 + uint(float(BLENDINDICES.z))) * 3u;
    uint _328 = _321 + 1u;
    uint _335 = _321 + 2u;
    precise float _342 = _228 * cbObjMatrix._m0[_321].x;
    precise float _343 = _228 * cbObjMatrix._m0[_328].x;
    precise float _344 = _228 * cbObjMatrix._m0[_335].x;
    precise float _345 = _228 * cbObjMatrix._m0[_321].y;
    precise float _346 = _228 * cbObjMatrix._m0[_328].y;
    precise float _347 = _228 * cbObjMatrix._m0[_335].y;
    precise float _348 = _228 * cbObjMatrix._m0[_321].z;
    precise float _349 = _228 * cbObjMatrix._m0[_328].z;
    precise float _350 = _228 * cbObjMatrix._m0[_335].z;
    precise float _351 = _228 * cbObjMatrix._m0[_321].w;
    precise float _352 = _228 * cbObjMatrix._m0[_328].w;
    precise float _353 = _228 * cbObjMatrix._m0[_335].w;
    precise float _354 = _307 + _342;
    precise float _355 = _308 + _343;
    precise float _356 = _309 + _344;
    precise float _357 = _310 + _345;
    precise float _358 = _311 + _346;
    precise float _359 = _312 + _347;
    precise float _360 = _313 + _348;
    precise float _361 = _314 + _349;
    precise float _362 = _315 + _350;
    precise float _363 = _316 + _351;
    precise float _364 = _317 + _352;
    precise float _365 = _318 + _353;
    uint _368 = (_237 + uint(float(BLENDINDICES.w))) * 3u;
    uint _375 = _368 + 1u;
    uint _382 = _368 + 2u;
    precise float _389 = _229 * cbObjMatrix._m0[_368].x;
    precise float _390 = _229 * cbObjMatrix._m0[_375].x;
    precise float _391 = _229 * cbObjMatrix._m0[_382].x;
    precise float _392 = _229 * cbObjMatrix._m0[_368].y;
    precise float _393 = _229 * cbObjMatrix._m0[_375].y;
    precise float _394 = _229 * cbObjMatrix._m0[_382].y;
    precise float _395 = _229 * cbObjMatrix._m0[_368].z;
    precise float _396 = _229 * cbObjMatrix._m0[_375].z;
    precise float _397 = _229 * cbObjMatrix._m0[_382].z;
    precise float _398 = _229 * cbObjMatrix._m0[_368].w;
    precise float _399 = _229 * cbObjMatrix._m0[_375].w;
    precise float _400 = _229 * cbObjMatrix._m0[_382].w;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    precise float _413 = POSITION.x * _401;
    precise float _414 = POSITION.y * _404;
    precise float _415 = _414 + _413;
    precise float _416 = POSITION.z * _407;
    precise float _417 = _416 + _415;
    precise float _418 = 1.0 * _410;
    precise float _419 = _418 + _417;
    precise float _420 = POSITION.x * _402;
    precise float _421 = POSITION.y * _405;
    precise float _422 = _421 + _420;
    precise float _423 = POSITION.z * _408;
    precise float _424 = _423 + _422;
    precise float _425 = 1.0 * _411;
    precise float _426 = _425 + _424;
    precise float _427 = POSITION.x * _403;
    precise float _428 = POSITION.y * _406;
    precise float _429 = _428 + _427;
    precise float _430 = POSITION.z * _409;
    precise float _431 = _430 + _429;
    precise float _432 = 1.0 * _412;
    precise float _433 = _432 + _431;
    float _439 = cbSceneParam._m0[3u].x - _419;
    float _440 = cbSceneParam._m0[3u].y - _426;
    float _441 = cbSceneParam._m0[3u].z - _433;
    precise float _467 = _419 - cbSceneParam._m0[3u].x;
    precise float _468 = _426 - cbSceneParam._m0[3u].y;
    precise float _469 = _433 - cbSceneParam._m0[3u].z;
    precise float _497 = _467 * cbSceneParam._m0[24u].x;
    precise float _498 = _468 * cbSceneParam._m0[24u].y;
    precise float _499 = _498 + _497;
    precise float _500 = _469 * cbSceneParam._m0[24u].z;
    precise float _501 = _500 + _499;
    precise float _502 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _503 = _502 + _501;
    precise float _504 = _467 * cbSceneParam._m0[25u].x;
    precise float _505 = _468 * cbSceneParam._m0[25u].y;
    precise float _506 = _505 + _504;
    precise float _507 = _469 * cbSceneParam._m0[25u].z;
    precise float _508 = _507 + _506;
    precise float _509 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _510 = _509 + _508;
    precise float _511 = _467 * cbSceneParam._m0[26u].x;
    precise float _512 = _468 * cbSceneParam._m0[26u].y;
    precise float _513 = _512 + _511;
    precise float _514 = _469 * cbSceneParam._m0[26u].z;
    precise float _515 = _514 + _513;
    precise float _516 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _517 = _516 + _515;
    precise float _518 = _467 * cbSceneParam._m0[27u].x;
    precise float _519 = _468 * cbSceneParam._m0[27u].y;
    precise float _520 = _519 + _518;
    precise float _521 = _469 * cbSceneParam._m0[27u].z;
    precise float _522 = _521 + _520;
    precise float _523 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _524 = _523 + _522;
    gl_Position.x = _503;
    gl_Position.y = _510;
    gl_Position.z = _517;
    gl_Position.w = _524;
    NORMAL_1.x = fma(_194, _407, fma(_193, _404, _401 * _191));
    NORMAL_1.y = fma(_194, _408, fma(_193, _405, _402 * _191));
    NORMAL_1.z = fma(_194, _409, fma(_193, _406, _403 * _191));
    NORMAL_1.w = float(_218);
    TANGENT_1.x = fma(_205, _407, fma(_204, _404, _401 * _203));
    TANGENT_1.y = fma(_205, _408, fma(_204, _405, _402 * _203));
    TANGENT_1.z = fma(_205, _409, fma(_204, _406, _403 * _203));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
    TEXCOORD_9.x = _517;
    TEXCOORD_9.y = _524;
    TEXCOORD_13 = sqrt(((_439 * _439) + (_440 * _440)) + (_441 * _441));
}


