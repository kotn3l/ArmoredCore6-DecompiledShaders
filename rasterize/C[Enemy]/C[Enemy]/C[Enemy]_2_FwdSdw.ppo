#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_Enemy_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Enemy_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_Enemy_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D C_Enemy_snp_0_Texture2D_2;
layout(set = 0, binding = 12) uniform texture2D C_Enemy_snp_0_Texture2D_3;
layout(set = 0, binding = 13) uniform texture2D C_Enemy_snp_0_Texture2D_4;
layout(set = 0, binding = 14) uniform texture2D C_Enemy_snp_0_Texture2D_5;
layout(set = 0, binding = 15) uniform texture2D C_Enemy_snp_0_Texture2D_6;
layout(set = 0, binding = 16) uniform texture2D C_Enemy_snp_0_Texture2D_7;
layout(set = 0, binding = 17) uniform texture2D C_Enemy_snp_0_Texture2D_8;
layout(set = 0, binding = 18) uniform texture2D C_Enemy_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_Enemy_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D C_Enemy_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D C_Enemy_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D C_Enemy_snp_0_Texture2D_13;
layout(set = 0, binding = 8) uniform texture2D C_Enemy_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D C_Enemy_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1362;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _218 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _219 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _220 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _226 = inversesqrt(dot(vec3(_218, _219, _220), vec3(_218, _219, _220)));
    float _233 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _240 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _285 = texture(sampler2D(C_Enemy_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w));
    float _298 = exp2(log2(_285.w * cbMtdParam._m0[24u].y) * cbMtdParam._m0[21u].y);
    float _299 = isnan(0.0) ? _298 : (isnan(_298) ? 0.0 : max(_298, 0.0));
    float _300 = isnan(1.0) ? _299 : (isnan(_299) ? 1.0 : min(_299, 1.0));
    vec4 _314 = texture(sampler2D(C_Enemy_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _318 = _314.z;
    float _327 = exp2(log2(_318 * cbMtdParam._m0[21u].w) * cbMtdParam._m0[20u].y);
    float _328 = isnan(0.0) ? _327 : (isnan(_327) ? 0.0 : max(_327, 0.0));
    float _329 = isnan(1.0) ? _328 : (isnan(_328) ? 1.0 : min(_328, 1.0));
    vec4 _342 = texture(sampler2D(C_Enemy_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    vec4 _366 = texture(sampler2D(C_Enemy_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _377 = cbMtdParam._m0[9u].x * _366.x;
    float _378 = cbMtdParam._m0[9u].y * _366.y;
    float _379 = cbMtdParam._m0[9u].z * _366.z;
    float _386 = (((cbMtdParam._m0[10u].x * _342.x) - _377) * _329) + _377;
    float _387 = (((cbMtdParam._m0[10u].y * _342.y) - _378) * _329) + _378;
    float _388 = (((cbMtdParam._m0[10u].z * _342.z) - _379) * _329) + _379;
    float _392 = exp2(log2(_314.w) * cbMtdParam._m0[22u].y);
    vec4 _405 = texture(sampler2D(C_Enemy_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _424 = (((cbMtdParam._m0[12u].x * _405.x) - _386) * _392) + _386;
    float _425 = (((cbMtdParam._m0[12u].y * _405.y) - _387) * _392) + _387;
    float _426 = (((cbMtdParam._m0[12u].z * _405.z) - _388) * _392) + _388;
    vec4 _439 = texture(sampler2D(C_Enemy_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w));
    float _463 = (_285.x * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].x * _439.x) - _424) * _300) + _424);
    float _465 = (_285.y * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].y * _439.y) - _425) * _300) + _425);
    float _467 = (_285.z * 4.55000019073486328125) * ((((cbMtdParam._m0[13u].z * _439.z) - _426) * _300) + _426);
    vec4 _479 = texture(sampler2D(C_Enemy_snp_0_Texture2D_17, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _497 = TEXCOORD_5.x - ((cbMtdParam._m0[22u].z * (1.0 - TEXCOORD_5.x)) * (texture(sampler2D(C_Enemy_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x + 0.00999999977648258209228515625));
    float _499 = _497 * (cbMtdParam._m0[23u].x + 1.0);
    float _3992 = isnan(0.0) ? _499 : (isnan(_499) ? 0.0 : max(_499, 0.0));
    float _500 = isnan(1.0) ? _3992 : (isnan(_3992) ? 1.0 : min(_3992, 1.0));
    float _507 = (_500 * ((cbMtdParam._m0[11u].x * _479.x) - _463)) + _463;
    float _508 = (((cbMtdParam._m0[11u].y * _479.y) - _465) * _500) + _465;
    float _509 = (((cbMtdParam._m0[11u].z * _479.z) - _467) * _500) + _467;
    float _539 = cbMtdParam._m0[23u].z + texture(sampler2D(C_Enemy_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w)).x;
    float _542 = ((texture(sampler2D(C_Enemy_snp_0_Texture2D_11, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w)).x - _539) * _329) + _539;
    float _562 = (((texture(sampler2D(C_Enemy_snp_0_Texture2D_12, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w)).x - _542) + cbMtdParam._m0[21u].z) * _392) + _542;
    float _582 = (((texture(sampler2D(C_Enemy_snp_0_Texture2D_13, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x - _562) + cbMtdParam._m0[24u].z) * _300) + _562;
    float _585 = (cbMtdParam._m0[22u].w + 1.0) * _497;
    float _4003 = isnan(0.0) ? _585 : (isnan(_585) ? 0.0 : max(_585, 0.0));
    float _586 = isnan(1.0) ? _4003 : (isnan(_4003) ? 1.0 : min(_4003, 1.0));
    float _588 = _582 - (_582 * _586);
    vec4 _602 = texture(sampler2D(C_Enemy_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w));
    vec4 _621 = texture(sampler2D(C_Enemy_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.x) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.y) + cbTextureTilingScale._m0[15u].w));
    float _623 = _621.x;
    float _624 = _621.y;
    float _627 = cbMtdParam._m0[20u].x + _621.z;
    float _630 = (((cbMtdParam._m0[21u].x + _602.z) - _627) * _329) + _627;
    vec4 _642 = texture(sampler2D(C_Enemy_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w));
    float _651 = (((_642.z - _630) + cbMtdParam._m0[24u].x) * _392) + _630;
    float _657 = ((((_318 * 2.0) * _651) - _651) * cbMtdParam._m0[23u].y) + _651;
    vec4 _670 = texture(sampler2D(C_Enemy_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * TEXCOORD.x) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD.y) + cbTextureTilingScale._m0[18u].w));
    float _679 = (((cbMtdParam._m0[22u].x + _670.z) - _657) * _300) + _657;
    vec4 _692 = texture(sampler2D(C_Enemy_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _699 = (_692.x * 2.0) + (-1.0);
    float _701 = (_692.y * 2.0) + (-1.0);
    float _702 = dot(vec2(_699, _701), vec2(_699, _701));
    float _4014 = isnan(0.0) ? _702 : (isnan(_702) ? 0.0 : max(_702, 0.0));
    float _710 = (_586 * (_692.z - _679)) + _679;
    float _720 = ((_602.x - _623) * _329) + _623;
    float _721 = ((_602.y - _624) * _329) + _624;
    float _726 = ((_642.x - _720) * _392) + _720;
    float _727 = ((_642.y - _721) * _392) + _721;
    float _736 = ((((_670.x - _726) * _300) + _726) * 2.0) + (-1.0);
    float _737 = ((((_670.y - _727) * _300) + _727) * 2.0) + (-1.0);
    float _738 = dot(vec2(_736, _737), vec2(_736, _737));
    float _4025 = isnan(0.0) ? _738 : (isnan(_738) ? 0.0 : max(_738, 0.0));
    float _743 = sqrt(1.0 - (isnan(1.0) ? _4025 : (isnan(_4025) ? 1.0 : min(_4025, 1.0))));
    float _746 = (cbMtdParam._m0[23u].w * ((_314.x * 2.0) + (-1.0))) + _736;
    float _747 = (cbMtdParam._m0[23u].w * ((_314.y * 2.0) + (-1.0))) + _737;
    float _754 = (_586 * (_699 - _746)) + _746;
    float _755 = (_586 * (_701 - _747)) + _747;
    float _756 = (_586 * (sqrt(1.0 - (isnan(1.0) ? _4014 : (isnan(_4014) ? 1.0 : min(_4014, 1.0)))) - _743)) + _743;
    float _759 = fma(_756, _233 * NORMAL.x, fma(_755, _240 * TANGENT.x, (_226 * _218) * _754));
    float _762 = fma(_756, _233 * NORMAL.y, fma(_755, _240 * TANGENT.y, (_226 * _219) * _754));
    float _765 = fma(_756, _233 * NORMAL.z, fma(_755, _240 * TANGENT.z, (_226 * _220) * _754));
    float _769 = inversesqrt(dot(vec3(_759, _762, _765), vec3(_759, _762, _765)));
    float _770 = _769 * _759;
    float _771 = _769 * _762;
    float _772 = _769 * _765;
    float _4036 = isnan(0.0) ? _710 : (isnan(_710) ? 0.0 : max(_710, 0.0));
    float _773 = isnan(1.0) ? _4036 : (isnan(_4036) ? 1.0 : min(_4036, 1.0));
    float _4047 = isnan(0.0) ? _507 : (isnan(_507) ? 0.0 : max(_507, 0.0));
    float _4058 = isnan(0.0) ? _508 : (isnan(_508) ? 0.0 : max(_508, 0.0));
    float _4069 = isnan(0.0) ? _509 : (isnan(_509) ? 0.0 : max(_509, 0.0));
    float _4080 = isnan(0.0) ? _588 : (isnan(_588) ? 0.0 : max(_588, 0.0));
    float _777 = isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0));
    float _793 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _833 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _843 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _833);
    float _844 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _833);
    float _845 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _833);
    float _849 = inversesqrt(dot(vec3(_843, _844, _845), vec3(_843, _844, _845)));
    float _850 = _843 * _849;
    float _851 = _844 * _849;
    float _852 = _845 * _849;
    float _858 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _859 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _861 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _863 = _861.w;
    float _883 = fma(_772, cbSceneParam._m0[5u].z, fma(_771, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _770));
    float _886 = fma(_772, cbSceneParam._m0[6u].z, fma(_771, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _770));
    float _889 = fma(_772, cbSceneParam._m0[7u].z, fma(_771, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _770));
    vec4 _891 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _902 = (((_891.y - _773) + (_891.w * _773)) * cbMtdParam._m0[3u].x) + _773;
    uint _915 = uint(roundEven(NORMAL.w)) * 13u;
    uint _917 = (_915 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _923 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4047 : (isnan(_4047) ? 1.0 : min(_4047, 1.0)))) * cbInstanceData._m0[_917].x;
    float _924 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4058 : (isnan(_4058) ? 1.0 : min(_4058, 1.0)))) * cbInstanceData._m0[_917].y;
    float _925 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4069 : (isnan(_4069) ? 1.0 : min(_4069, 1.0)))) * cbInstanceData._m0[_917].z;
    float _4091 = isnan(0.0) ? _923 : (isnan(_923) ? 0.0 : max(_923, 0.0));
    float _926 = isnan(1.0) ? _4091 : (isnan(_4091) ? 1.0 : min(_4091, 1.0));
    float _4102 = isnan(0.0) ? _924 : (isnan(_924) ? 0.0 : max(_924, 0.0));
    float _927 = isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0));
    float _4113 = isnan(0.0) ? _925 : (isnan(_925) ? 0.0 : max(_925, 0.0));
    float _928 = isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0));
    vec4 _929 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _934 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _945 = (((_934.x - _777) + (_934.w * _777)) * cbMtdParam._m0[3u].x) + _777;
    float _958 = (cbMtdParam._m0[3u].x * (((_926 * _863) - _926) + _929.x)) + _926;
    float _959 = (cbMtdParam._m0[3u].x * (((_927 * _863) - _927) + _929.y)) + _927;
    float _960 = (cbMtdParam._m0[3u].x * (((_928 * _863) - _928) + _929.z)) + _928;
    float _961 = 1.0 - _945;
    float _962 = _961 * _958;
    float _963 = _961 * _959;
    float _964 = _961 * _960;
    float _969 = (_958 + (-0.039999999105930328369140625)) * _945;
    float _970 = (_959 + (-0.039999999105930328369140625)) * _945;
    float _971 = (_960 + (-0.039999999105930328369140625)) * _945;
    float _972 = _969 + 0.039999999105930328369140625;
    float _974 = _970 + 0.039999999105930328369140625;
    float _975 = _971 + 0.039999999105930328369140625;
    vec4 _984 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _858, cbSceneParam._m0[86u].y * _859));
    float _987 = _984.x * TEXCOORD_5.w;
    float _988 = dot(vec3(_770, _771, _772), vec3(_850, _851, _852));
    float _991 = _988 * 2.0;
    float _995 = (_991 * _770) - _850;
    float _996 = (_991 * _771) - _851;
    float _997 = (_991 * _772) - _852;
    float _1001 = abs(dot(vec3(_850, _851, _852), vec3(_770, _771, _772)));
    float _4124 = isnan(0.0) ? _1001 : (isnan(_1001) ? 0.0 : max(_1001, 0.0));
    float _1003 = sqrt(_902);
    float _1016 = exp2((_1003 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1003 * 3.0));
    float _1022 = (1.0 - _1016) * ((_1003 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1023 = _1016 * _1003;
    float _1051 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1055 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1059 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1361;
    float _1363;
    float _1364;
    float _1365;
    float _1366;
    float _1367;
    float _1368;
    float _1369;
    float _1370;
    float _1371;
    float _1372;
    float _1373;
    float _1374;
    float _1375;
    float _1376;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1086 = fma(_1059, cbModelParam._m0[26u].z, fma(_1055, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1051));
        float _1090 = fma(_1059, cbModelParam._m0[27u].z, fma(_1055, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1051));
        float _1094 = fma(_1059, cbModelParam._m0[28u].z, fma(_1055, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1051));
        float _1119 = _1051 + _770;
        float _1120 = _1055 + _771;
        float _1121 = _1059 + _772;
        float _1131 = fma(_1121, cbModelParam._m0[26u].z, fma(_1120, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1119)) - _1086;
        float _1132 = fma(_1121, cbModelParam._m0[27u].z, fma(_1120, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1119)) - _1090;
        float _1133 = fma(_1121, cbModelParam._m0[28u].z, fma(_1120, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1119)) - _1094;
        float _1137 = inversesqrt(dot(vec3(_1131, _1132, _1133), vec3(_1131, _1132, _1133)));
        float _1150 = ((_1137 * _1131) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1086 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1151 = ((_1137 * _1132) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1090 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1152 = ((_1137 * _1133) / cbModelParam._m0[34u].z) + ((((((_1094 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1155 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1150, _1151, _1152), 0.0);
        vec4 _1162 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1150, _1151, _1152), 0.0);
        vec4 _1169 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1150, _1151, _1152), 0.0);
        vec4 _1176 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1150, _1151, _1152), 0.0);
        float _1189 = exp2((_1155.w + (-0.5)) * 20.0) * 2.0;
        float _1190 = _1189 * (_1155.x + (-0.5));
        float _1191 = _1189 * (_1155.y + (-0.5));
        float _1192 = _1189 * (_1155.z + (-0.5));
        float _1199 = exp2((_1162.w + (-0.5)) * 20.0) * 2.0;
        float _1200 = _1199 * (_1162.x + (-0.5));
        float _1201 = _1199 * (_1162.y + (-0.5));
        float _1202 = _1199 * (_1162.z + (-0.5));
        float _1209 = exp2((_1169.w + (-0.5)) * 20.0) * 2.0;
        float _1210 = _1209 * (_1169.x + (-0.5));
        float _1211 = _1209 * (_1169.y + (-0.5));
        float _1212 = _1209 * (_1169.z + (-0.5));
        float _1219 = exp2((_1176.w + (-0.5)) * 20.0) * 2.0;
        float _1220 = _1219 * (_1176.x + (-0.5));
        float _1221 = _1219 * (_1176.y + (-0.5));
        float _1222 = _1219 * (_1176.z + (-0.5));
        float _1223 = isnan(0.0) ? _1220 : (isnan(_1220) ? 0.0 : max(_1220, 0.0));
        float _1224 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
        float _1225 = isnan(0.0) ? _1222 : (isnan(_1222) ? 0.0 : max(_1222, 0.0));
        float _1226 = _1190 * 0.5;
        float _1227 = _1200 * 0.5;
        float _1228 = _1210 * 0.5;
        float _1229 = dot(vec3(_1226, _1227, _1228), vec3(_1226, _1227, _1228));
        float _1234 = (_1229 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1229);
        float _1243 = (dot(vec3(_770, _771, _772), vec3(_1234 * _1226, _1234 * _1227, _1234 * _1228)) + 1.0) * 0.5;
        float _4150 = isnan(0.0) ? _1243 : (isnan(_1243) ? 0.0 : max(_1243, 0.0));
        float _1253 = sqrt(((_1227 * _1227) + (_1226 * _1226)) + (_1228 * _1228)) / (_1223 + 9.9999997473787516355514526367188e-06);
        float _4161 = isnan(0.0) ? _1253 : (isnan(_1253) ? 0.0 : max(_1253, 0.0));
        float _1254 = isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0));
        float _1255 = _1254 * 2.0;
        float _1259 = (1.0 - _1254) / (_1254 + 1.0);
        float _4172 = isnan(0.0) ? _1259 : (isnan(_1259) ? 0.0 : max(_1259, 0.0));
        float _1260 = isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0));
        float _1269 = ((((1.0 - _1260) * (_1255 + 2.0)) * exp2(log2(isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0))) * (_1255 + 1.0))) + _1260) * _1223;
        float _1270 = _1191 * 0.5;
        float _1271 = _1201 * 0.5;
        float _1272 = _1211 * 0.5;
        float _1273 = dot(vec3(_1270, _1271, _1272), vec3(_1270, _1271, _1272));
        float _1278 = (_1273 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1273);
        float _1286 = (dot(vec3(_770, _771, _772), vec3(_1278 * _1270, _1278 * _1271, _1278 * _1272)) + 1.0) * 0.5;
        float _4183 = isnan(0.0) ? _1286 : (isnan(_1286) ? 0.0 : max(_1286, 0.0));
        float _1295 = sqrt(((_1271 * _1271) + (_1270 * _1270)) + (_1272 * _1272)) / (_1224 + 9.9999997473787516355514526367188e-06);
        float _4194 = isnan(0.0) ? _1295 : (isnan(_1295) ? 0.0 : max(_1295, 0.0));
        float _1296 = isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0));
        float _1297 = _1296 * 2.0;
        float _1301 = (1.0 - _1296) / (_1296 + 1.0);
        float _4205 = isnan(0.0) ? _1301 : (isnan(_1301) ? 0.0 : max(_1301, 0.0));
        float _1302 = isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0));
        float _1311 = ((((1.0 - _1302) * (_1297 + 2.0)) * exp2(log2(isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0))) * (_1297 + 1.0))) + _1302) * _1224;
        float _1312 = _1192 * 0.5;
        float _1313 = _1202 * 0.5;
        float _1314 = _1212 * 0.5;
        float _1315 = dot(vec3(_1312, _1313, _1314), vec3(_1312, _1313, _1314));
        float _1320 = (_1315 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1315);
        float _1328 = (dot(vec3(_770, _771, _772), vec3(_1320 * _1312, _1320 * _1313, _1320 * _1314)) + 1.0) * 0.5;
        float _4216 = isnan(0.0) ? _1328 : (isnan(_1328) ? 0.0 : max(_1328, 0.0));
        float _1337 = sqrt(((_1313 * _1313) + (_1312 * _1312)) + (_1314 * _1314)) / (_1225 + 9.9999997473787516355514526367188e-06);
        float _4227 = isnan(0.0) ? _1337 : (isnan(_1337) ? 0.0 : max(_1337, 0.0));
        float _1338 = isnan(1.0) ? _4227 : (isnan(_4227) ? 1.0 : min(_4227, 1.0));
        float _1339 = _1338 * 2.0;
        float _1343 = (1.0 - _1338) / (_1338 + 1.0);
        float _4238 = isnan(0.0) ? _1343 : (isnan(_1343) ? 0.0 : max(_1343, 0.0));
        float _1344 = isnan(1.0) ? _4238 : (isnan(_4238) ? 1.0 : min(_4238, 1.0));
        float _1353 = ((((1.0 - _1344) * (_1339 + 2.0)) * exp2(log2(isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0))) * (_1339 + 1.0))) + _1344) * _1225;
        _1361 = _1192;
        _1363 = _1191;
        _1364 = _1190;
        _1365 = _1202;
        _1366 = _1201;
        _1367 = _1200;
        _1368 = _1212;
        _1369 = _1211;
        _1370 = _1210;
        _1371 = _1225;
        _1372 = _1224;
        _1373 = _1223;
        _1374 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1269 : (isnan(_1269) ? 0.0 : max(_1269, 0.0)));
        _1375 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1311 : (isnan(_1311) ? 0.0 : max(_1311, 0.0)));
        _1376 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0)));
    }
    else
    {
        _1361 = _1362;
        _1363 = _1362;
        _1364 = _1362;
        _1365 = _1362;
        _1366 = _1362;
        _1367 = _1362;
        _1368 = _1362;
        _1369 = _1362;
        _1370 = _1362;
        _1371 = _1362;
        _1372 = _1362;
        _1373 = _1362;
        _1374 = 0.0;
        _1375 = 0.0;
        _1376 = 0.0;
    }
    float _1671;
    float _1672;
    float _1673;
    float _1674;
    float _1675;
    float _1676;
    float _1677;
    float _1678;
    float _1679;
    float _1680;
    float _1681;
    float _1682;
    float _1683;
    float _1684;
    float _1685;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1402 = fma(_1059, cbModelParam._m0[30u].z, fma(_1055, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1051));
        float _1406 = fma(_1059, cbModelParam._m0[31u].z, fma(_1055, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1051));
        float _1410 = fma(_1059, cbModelParam._m0[32u].z, fma(_1055, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1051));
        float _1433 = _1051 + _770;
        float _1434 = _1055 + _771;
        float _1435 = _1059 + _772;
        float _1445 = fma(_1435, cbModelParam._m0[30u].z, fma(_1434, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1433)) - _1402;
        float _1446 = fma(_1435, cbModelParam._m0[31u].z, fma(_1434, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1433)) - _1406;
        float _1447 = fma(_1435, cbModelParam._m0[32u].z, fma(_1434, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1433)) - _1410;
        float _1451 = inversesqrt(dot(vec3(_1445, _1446, _1447), vec3(_1445, _1446, _1447)));
        float _1464 = ((_1451 * _1445) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1402 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1465 = ((_1451 * _1446) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1406 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1466 = ((_1451 * _1447) / cbModelParam._m0[35u].z) + ((((((_1410 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1468 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1464, _1465, _1466), 0.0);
        vec4 _1475 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1464, _1465, _1466), 0.0);
        vec4 _1482 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1464, _1465, _1466), 0.0);
        vec4 _1489 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1464, _1465, _1466), 0.0);
        float _1501 = exp2((_1468.w + (-0.5)) * 20.0) * 2.0;
        float _1502 = _1501 * (_1468.x + (-0.5));
        float _1503 = _1501 * (_1468.y + (-0.5));
        float _1504 = _1501 * (_1468.z + (-0.5));
        float _1511 = exp2((_1475.w + (-0.5)) * 20.0) * 2.0;
        float _1512 = _1511 * (_1475.x + (-0.5));
        float _1513 = _1511 * (_1475.y + (-0.5));
        float _1514 = _1511 * (_1475.z + (-0.5));
        float _1521 = exp2((_1482.w + (-0.5)) * 20.0) * 2.0;
        float _1522 = _1521 * (_1482.x + (-0.5));
        float _1523 = _1521 * (_1482.y + (-0.5));
        float _1524 = _1521 * (_1482.z + (-0.5));
        float _1531 = exp2((_1489.w + (-0.5)) * 20.0) * 2.0;
        float _1532 = _1531 * (_1489.x + (-0.5));
        float _1533 = _1531 * (_1489.y + (-0.5));
        float _1534 = _1531 * (_1489.z + (-0.5));
        float _1535 = isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0));
        float _1536 = isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0));
        float _1537 = isnan(0.0) ? _1534 : (isnan(_1534) ? 0.0 : max(_1534, 0.0));
        float _1538 = _1502 * 0.5;
        float _1539 = _1512 * 0.5;
        float _1540 = _1522 * 0.5;
        float _1541 = dot(vec3(_1538, _1539, _1540), vec3(_1538, _1539, _1540));
        float _1546 = (_1541 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1541);
        float _1554 = (dot(vec3(_770, _771, _772), vec3(_1546 * _1538, _1546 * _1539, _1546 * _1540)) + 1.0) * 0.5;
        float _4279 = isnan(0.0) ? _1554 : (isnan(_1554) ? 0.0 : max(_1554, 0.0));
        float _1563 = sqrt(((_1539 * _1539) + (_1538 * _1538)) + (_1540 * _1540)) / (_1535 + 9.9999997473787516355514526367188e-06);
        float _4290 = isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0));
        float _1564 = isnan(1.0) ? _4290 : (isnan(_4290) ? 1.0 : min(_4290, 1.0));
        float _1565 = _1564 * 2.0;
        float _1569 = (1.0 - _1564) / (_1564 + 1.0);
        float _4301 = isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0));
        float _1570 = isnan(1.0) ? _4301 : (isnan(_4301) ? 1.0 : min(_4301, 1.0));
        float _1579 = ((((1.0 - _1570) * (_1565 + 2.0)) * exp2(log2(isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0))) * (_1565 + 1.0))) + _1570) * _1535;
        float _1580 = _1503 * 0.5;
        float _1581 = _1513 * 0.5;
        float _1582 = _1523 * 0.5;
        float _1583 = dot(vec3(_1580, _1581, _1582), vec3(_1580, _1581, _1582));
        float _1588 = (_1583 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1583);
        float _1596 = (dot(vec3(_770, _771, _772), vec3(_1588 * _1580, _1588 * _1581, _1588 * _1582)) + 1.0) * 0.5;
        float _4312 = isnan(0.0) ? _1596 : (isnan(_1596) ? 0.0 : max(_1596, 0.0));
        float _1605 = sqrt(((_1581 * _1581) + (_1580 * _1580)) + (_1582 * _1582)) / (_1536 + 9.9999997473787516355514526367188e-06);
        float _4323 = isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0));
        float _1606 = isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0));
        float _1607 = _1606 * 2.0;
        float _1611 = (1.0 - _1606) / (_1606 + 1.0);
        float _4334 = isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0));
        float _1612 = isnan(1.0) ? _4334 : (isnan(_4334) ? 1.0 : min(_4334, 1.0));
        float _1621 = ((((1.0 - _1612) * (_1607 + 2.0)) * exp2(log2(isnan(1.0) ? _4312 : (isnan(_4312) ? 1.0 : min(_4312, 1.0))) * (_1607 + 1.0))) + _1612) * _1536;
        float _1622 = _1504 * 0.5;
        float _1623 = _1514 * 0.5;
        float _1624 = _1524 * 0.5;
        float _1625 = dot(vec3(_1622, _1623, _1624), vec3(_1622, _1623, _1624));
        float _1630 = (_1625 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1625);
        float _1638 = (dot(vec3(_770, _771, _772), vec3(_1630 * _1622, _1630 * _1623, _1630 * _1624)) + 1.0) * 0.5;
        float _4345 = isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0));
        float _1647 = sqrt(((_1623 * _1623) + (_1622 * _1622)) + (_1624 * _1624)) / (_1537 + 9.9999997473787516355514526367188e-06);
        float _4356 = isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0));
        float _1648 = isnan(1.0) ? _4356 : (isnan(_4356) ? 1.0 : min(_4356, 1.0));
        float _1649 = _1648 * 2.0;
        float _1653 = (1.0 - _1648) / (_1648 + 1.0);
        float _4367 = isnan(0.0) ? _1653 : (isnan(_1653) ? 0.0 : max(_1653, 0.0));
        float _1654 = isnan(1.0) ? _4367 : (isnan(_4367) ? 1.0 : min(_4367, 1.0));
        float _1663 = ((((1.0 - _1654) * (_1649 + 2.0)) * exp2(log2(isnan(1.0) ? _4345 : (isnan(_4345) ? 1.0 : min(_4345, 1.0))) * (_1649 + 1.0))) + _1654) * _1537;
        _1671 = _1504;
        _1672 = _1503;
        _1673 = _1502;
        _1674 = _1514;
        _1675 = _1513;
        _1676 = _1512;
        _1677 = _1524;
        _1678 = _1523;
        _1679 = _1522;
        _1680 = _1537;
        _1681 = _1536;
        _1682 = _1535;
        _1683 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1579 : (isnan(_1579) ? 0.0 : max(_1579, 0.0)));
        _1684 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1621 : (isnan(_1621) ? 0.0 : max(_1621, 0.0)));
        _1685 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0)));
    }
    else
    {
        _1671 = _1362;
        _1672 = _1362;
        _1673 = _1362;
        _1674 = _1362;
        _1675 = _1362;
        _1676 = _1362;
        _1677 = _1362;
        _1678 = _1362;
        _1679 = _1362;
        _1680 = _1362;
        _1681 = _1362;
        _1682 = _1362;
        _1683 = 0.0;
        _1684 = 0.0;
        _1685 = 0.0;
    }
    float _1695 = (cbModelParam._m0[1u].x * (_1683 - _1374)) + _1374;
    float _1696 = (cbModelParam._m0[1u].x * (_1684 - _1375)) + _1375;
    float _1697 = (cbModelParam._m0[1u].x * (_1685 - _1376)) + _1376;
    float _1718 = fma(_1697, cbSceneParam._m0[89u].z, fma(_1696, cbSceneParam._m0[89u].y, _1695 * cbSceneParam._m0[89u].x));
    float _1721 = fma(_1697, cbSceneParam._m0[90u].z, fma(_1696, cbSceneParam._m0[90u].y, _1695 * cbSceneParam._m0[90u].x));
    float _1724 = fma(_1697, cbSceneParam._m0[91u].z, fma(_1696, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1695));
    float _1739 = _995 * 0.5;
    float _1740 = _996 * 0.5;
    float _1741 = _997 * 0.5;
    float _1742 = dot(vec4(_1739, _1740, _1741, 1.0), vec4(_1673, _1676, _1679, _1682));
    float _1745 = dot(vec4(_1739, _1740, _1741, 1.0), vec4(_1672, _1675, _1678, _1681));
    float _1748 = dot(vec4(_1739, _1740, _1741, 1.0), vec4(_1671, _1674, _1677, _1680));
    float _1782;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1755 = dot(vec4(_1739, _1740, _1741, 1.0), vec4(_1361, _1365, _1368, _1371));
        float _1759 = dot(vec4(_1739, _1740, _1741, 1.0), vec4(_1363, _1366, _1369, _1372));
        float _1763 = dot(vec4(_1739, _1740, _1741, 1.0), vec4(_1364, _1367, _1370, _1373));
        float _1770 = dot(vec4(cbModelParam._m0[39u]), vec4(_1739, _1740, _1741, 1.0));
        _1782 = dot(vec3(isnan(0.0) ? _1763 : (isnan(_1763) ? 0.0 : max(_1763, 0.0)), isnan(0.0) ? _1759 : (isnan(_1759) ? 0.0 : max(_1759, 0.0)), isnan(0.0) ? _1755 : (isnan(_1755) ? 0.0 : max(_1755, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1770) ? 0.0 : (isnan(0.0) ? _1770 : max(0.0, _1770))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1782 = 1.0;
    }
    float _1793;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1784 = dot(vec4(cbModelParam._m0[40u]), vec4(_1739, _1740, _1741, 1.0));
        _1793 = dot(vec3(isnan(0.0) ? _1742 : (isnan(_1742) ? 0.0 : max(_1742, 0.0)), isnan(0.0) ? _1745 : (isnan(_1745) ? 0.0 : max(_1745, 0.0)), isnan(0.0) ? _1748 : (isnan(_1748) ? 0.0 : max(_1748, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1784) ? 0.0 : (isnan(0.0) ? _1784 : max(0.0, _1784))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1793 = 1.0;
    }
    float _1797 = (_1793 * cbModelParam._m0[1u].x) + (_1782 * (1.0 - cbModelParam._m0[1u].x));
    float _1807 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _902);
    float _1808 = isnan(_1807) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1807 : min(cbModelParam._m0[25u].z, _1807));
    float _1888;
    float _1890;
    float _1892;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1855 = fma(_1059, cbModelParam._m0[13u].z, fma(_1055, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1051)) + cbModelParam._m0[13u].w;
        float _1859 = fma(_1059, cbModelParam._m0[14u].z, fma(_1055, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1051)) + cbModelParam._m0[14u].w;
        float _1863 = fma(_1059, cbModelParam._m0[15u].z, fma(_1055, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1051)) + cbModelParam._m0[15u].w;
        float _1866 = fma(_997, cbModelParam._m0[13u].z, fma(_996, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _995));
        float _1869 = fma(_997, cbModelParam._m0[14u].z, fma(_996, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _995));
        float _1872 = fma(_997, cbModelParam._m0[15u].z, fma(_996, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _995));
        float _1900;
        if (_1866 > 0.0)
        {
            _1900 = abs((1.0 - _1855) / _1866);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1866 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1855 + 1.0) / _1866);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1900 = frontier_phi_14_12_ladder;
        }
        float _2072;
        if (_1869 > 0.0)
        {
            _2072 = abs((1.0 - _1859) / _1869);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1869 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1859 + 1.0) / _1869);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2072 = frontier_phi_23_19_ladder;
        }
        float _2367;
        if (_1872 > 0.0)
        {
            _2367 = abs((1.0 - _1863) / _1872);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1872 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1863 + 1.0) / _1872);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2367 = frontier_phi_35_30_ladder;
        }
        float _2369 = isnan(_2072) ? _1900 : (isnan(_1900) ? _2072 : min(_1900, _2072));
        float _2370 = isnan(_2367) ? _2369 : (isnan(_2369) ? _2367 : min(_2369, _2367));
        float _2374 = (_2370 * _1866) + _1855;
        float _2375 = (_2370 * _1869) + _1859;
        float _2376 = (_2370 * _1872) + _1863;
        float _2377 = _2370 * 9.9999997473787516355514526367188e-05;
        float _2379 = (-1.0) - _2377;
        float _2381 = _2377 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2376 > _2381) || ((_2376 < _2379) || ((_2375 > _2381) || ((_2375 < _2379) || ((_2374 < _2379) || (_2374 > _2381))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2521 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2376, cbModelParam._m0[9u].z, fma(_2375, cbModelParam._m0[9u].y, _2374 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2376, cbModelParam._m0[10u].z, fma(_2375, cbModelParam._m0[10u].y, _2374 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2376, cbModelParam._m0[11u].z, fma(_2375, cbModelParam._m0[11u].y, _2374 * cbModelParam._m0[11u].x))), _1808);
            frontier_phi_13_35_ladder = _2521.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2521.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2521.x * cbModelParam._m0[1u].y;
        }
        _1888 = frontier_phi_13_35_ladder_2;
        _1890 = frontier_phi_13_35_ladder_1;
        _1892 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1876 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_995, _996, _997), _1808);
        _1888 = _1876.x * cbModelParam._m0[1u].y;
        _1890 = _1876.y * cbModelParam._m0[1u].y;
        _1892 = _1876.z * cbModelParam._m0[1u].y;
    }
    float _1896 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _902);
    float _1897 = isnan(_1896) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1896 : min(cbModelParam._m0[25u].w, _1896));
    float _1987;
    float _1989;
    float _1991;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1951 = fma(_1059, cbModelParam._m0[21u].z, fma(_1055, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1051)) + cbModelParam._m0[21u].w;
        float _1955 = fma(_1059, cbModelParam._m0[22u].z, fma(_1055, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1051)) + cbModelParam._m0[22u].w;
        float _1959 = fma(_1059, cbModelParam._m0[23u].z, fma(_1055, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1051)) + cbModelParam._m0[23u].w;
        float _1962 = fma(_997, cbModelParam._m0[21u].z, fma(_996, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _995));
        float _1965 = fma(_997, cbModelParam._m0[22u].z, fma(_996, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _995));
        float _1968 = fma(_997, cbModelParam._m0[23u].z, fma(_996, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _995));
        float _2077;
        if (_1962 > 0.0)
        {
            _2077 = abs((1.0 - _1951) / _1962);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1962 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1951 + 1.0) / _1962);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2077 = frontier_phi_25_21_ladder;
        }
        float _2394;
        if (_1965 > 0.0)
        {
            _2394 = abs((1.0 - _1955) / _1965);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1965 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1955 + 1.0) / _1965);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2394 = frontier_phi_37_32_ladder;
        }
        float _2732;
        if (_1968 > 0.0)
        {
            _2732 = abs((1.0 - _1959) / _1968);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1968 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1959 + 1.0) / _1968);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2732 = frontier_phi_47_44_ladder;
        }
        float _2734 = isnan(_2394) ? _2077 : (isnan(_2077) ? _2394 : min(_2077, _2394));
        float _2735 = isnan(_2732) ? _2734 : (isnan(_2734) ? _2732 : min(_2734, _2732));
        float _2739 = (_2735 * _1962) + _1951;
        float _2740 = (_2735 * _1965) + _1955;
        float _2741 = (_2735 * _1968) + _1959;
        float _2742 = _2735 * 9.9999997473787516355514526367188e-05;
        float _2743 = (-1.0) - _2742;
        float _2745 = _2742 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2741 > _2745) || ((_2741 < _2743) || ((_2740 > _2745) || ((_2740 < _2743) || ((_2739 < _2743) || (_2739 > _2745))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2863 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2741, cbModelParam._m0[17u].z, fma(_2740, cbModelParam._m0[17u].y, _2739 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2741, cbModelParam._m0[18u].z, fma(_2740, cbModelParam._m0[18u].y, _2739 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2741, cbModelParam._m0[19u].z, fma(_2740, cbModelParam._m0[19u].y, _2739 * cbModelParam._m0[19u].x))), _1897);
            frontier_phi_22_47_ladder = _2863.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2863.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2863.x * cbModelParam._m0[1u].z;
        }
        _1987 = frontier_phi_22_47_ladder_2;
        _1989 = frontier_phi_22_47_ladder_1;
        _1991 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1971 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_995, _996, _997), _1897);
        _1987 = _1971.x * cbModelParam._m0[1u].z;
        _1989 = _1971.y * cbModelParam._m0[1u].z;
        _1991 = _1971.z * cbModelParam._m0[1u].z;
    }
    float _2004 = (((_1022 * _972) + _1023) * _987) * ((cbModelParam._m0[1u].w * (_1987 - _1888)) + _1888);
    float _2006 = (((_1022 * _974) + _1023) * _987) * ((cbModelParam._m0[1u].w * (_1989 - _1890)) + _1890);
    float _2008 = (((_1022 * _975) + _1023) * _987) * ((cbModelParam._m0[1u].w * (_1991 - _1892)) + _1892);
    float _2011 = fma(_2008, cbSceneParam._m0[89u].z, fma(_2006, cbSceneParam._m0[89u].y, _2004 * cbSceneParam._m0[89u].x));
    float _2014 = fma(_2008, cbSceneParam._m0[90u].z, fma(_2006, cbSceneParam._m0[90u].y, _2004 * cbSceneParam._m0[90u].x));
    float _2017 = fma(_2008, cbSceneParam._m0[91u].z, fma(_2006, cbSceneParam._m0[91u].y, _2004 * cbSceneParam._m0[91u].x));
    float _2051 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2055 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2059 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2063 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2064 = _2051 / _2063;
    float _2065 = _2055 / _2063;
    float _2066 = _2059 / _2063;
    float _2213;
    float _2214;
    float _2215;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2093 = ((uint(_2066 > cbSceneParam._m0[59u].y) + uint(_2066 > cbSceneParam._m0[59u].x)) + uint(_2066 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2094 = _2093 + 43u;
        uint _2102 = _2093 + 44u;
        uint _2110 = _2093 + 45u;
        uint _2118 = _2093 + 46u;
        float _2129 = fma(_2063, cbSceneParam._m0[_2094].w, fma(_2059, cbSceneParam._m0[_2094].z, fma(_2055, cbSceneParam._m0[_2094].y, _2051 * cbSceneParam._m0[_2094].x)));
        float _2133 = fma(_2063, cbSceneParam._m0[_2102].w, fma(_2059, cbSceneParam._m0[_2102].z, fma(_2055, cbSceneParam._m0[_2102].y, _2051 * cbSceneParam._m0[_2102].x)));
        float _2141 = fma(_2063, cbSceneParam._m0[_2118].w, fma(_2059, cbSceneParam._m0[_2118].z, fma(_2055, cbSceneParam._m0[_2118].y, _2051 * cbSceneParam._m0[_2118].x)));
        float _2146 = cbSceneParam._m0[33u].z * _2141;
        float _2148 = cbSceneParam._m0[33u].w * _2141;
        float _2151 = fma(_2063, cbSceneParam._m0[_2110].w, fma(_2059, cbSceneParam._m0[_2110].z, fma(_2055, cbSceneParam._m0[_2110].y, _2051 * cbSceneParam._m0[_2110].x))) / _2141;
        float _2199 = (cbSceneParam._m0[33u].x - sqrt(((_2065 * _2065) + (_2064 * _2064)) + (_2066 * _2066))) * cbSceneParam._m0[33u].y;
        float _4493 = isnan(0.0) ? _2199 : (isnan(_2199) ? 0.0 : max(_2199, 0.0));
        float _2206 = (isnan(1.0) ? _4493 : (isnan(_4493) ? 1.0 : min(_4493, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2146 + _2129) / _2141, (_2148 + _2133) / _2141), _2151), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2148 + _2129) / _2141, (_2133 - _2146) / _2141), _2151), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2129 - _2146) / _2141, (_2133 - _2148) / _2141), _2151), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2129 - _2148) / _2141, (_2146 + _2133) / _2141), _2151), 0.0)).x), vec4(0.25)));
        _2213 = 1.0 - (_2206 * cbSceneParam._m0[34u].x);
        _2214 = 1.0 - (_2206 * cbSceneParam._m0[34u].y);
        _2215 = 1.0 - (_2206 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2213 = 1.0;
        _2214 = 1.0;
        _2215 = 1.0;
    }
    float _2279;
    float _2281;
    float _2283;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2267 = fma(_2063, cbSceneParam._m0[63u].w, fma(_2059, cbSceneParam._m0[63u].z, fma(_2055, cbSceneParam._m0[63u].y, _2051 * cbSceneParam._m0[63u].x)));
        float _2268 = fma(_2063, cbSceneParam._m0[60u].w, fma(_2059, cbSceneParam._m0[60u].z, fma(_2055, cbSceneParam._m0[60u].y, _2051 * cbSceneParam._m0[60u].x))) / _2267;
        float _2269 = fma(_2063, cbSceneParam._m0[61u].w, fma(_2059, cbSceneParam._m0[61u].z, fma(_2055, cbSceneParam._m0[61u].y, _2051 * cbSceneParam._m0[61u].x))) / _2267;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2268 >= cbSceneParam._m0[64u].x) && (_2269 >= cbSceneParam._m0[64u].y)) && (_2268 <= cbSceneParam._m0[64u].z)) && (_2269 <= cbSceneParam._m0[64u].w))
        {
            float _2407 = fma(_2063, cbSceneParam._m0[62u].w, fma(_2059, cbSceneParam._m0[62u].z, fma(_2055, cbSceneParam._m0[62u].y, _2051 * cbSceneParam._m0[62u].x))) / _2267;
            float _2411 = isnan(cbSceneParam._m0[41u].w) ? _2407 : (isnan(_2407) ? cbSceneParam._m0[41u].w : max(_2407, cbSceneParam._m0[41u].w));
            float _2454 = (cbSceneParam._m0[33u].x - sqrt(((_2065 * _2065) + (_2064 * _2064)) + (_2066 * _2066))) * cbSceneParam._m0[33u].y;
            float _4509 = isnan(0.0) ? _2454 : (isnan(_2454) ? 0.0 : max(_2454, 0.0));
            float _2461 = (isnan(1.0) ? _4509 : (isnan(_4509) ? 1.0 : min(_4509, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2268, cbSceneParam._m0[33u].w + _2269), _2411), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2268, _2269 - cbSceneParam._m0[33u].z), _2411), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2268 - cbSceneParam._m0[33u].z, _2269 - cbSceneParam._m0[33u].w), _2411), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2268 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2269), _2411), 0.0)).x), vec4(0.25)));
            float _2465 = 1.0 - (_2461 * cbSceneParam._m0[34u].x);
            float _2466 = 1.0 - (_2461 * cbSceneParam._m0[34u].y);
            float _2467 = 1.0 - (_2461 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2467) ? _2215 : (isnan(_2215) ? _2467 : min(_2215, _2467));
            frontier_phi_34_33_ladder_1 = isnan(_2466) ? _2214 : (isnan(_2214) ? _2466 : min(_2214, _2466));
            frontier_phi_34_33_ladder_2 = isnan(_2465) ? _2213 : (isnan(_2213) ? _2465 : min(_2213, _2465));
        }
        else
        {
            frontier_phi_34_33_ladder = _2215;
            frontier_phi_34_33_ladder_1 = _2214;
            frontier_phi_34_33_ladder_2 = _2213;
        }
        _2279 = frontier_phi_34_33_ladder_2;
        _2281 = frontier_phi_34_33_ladder_1;
        _2283 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2279 = _2213;
        _2281 = _2214;
        _2283 = _2215;
    }
    uvec4 _2288 = floatBitsToUint(cbInstanceData._m0[_915 + 5u]);
    uint _2290 = _2288.x * 14u;
    uint _2291 = _2290 + 13u;
    float _2298 = _987 + (-1.0);
    float _2303 = (cbLight._m0[_2291].x * _2298) + 1.0;
    float _2304 = (cbLight._m0[_2291].y * _2298) + 1.0;
    float _2305 = (cbLight._m0[_2291].z * _2298) + 1.0;
    float _2306 = (cbLight._m0[_2291].w * _2298) + 1.0;
    uint _2307 = _2290 + 5u;
    float _2313 = isnan(1.0) ? _2304 : (isnan(_2304) ? 1.0 : min(_2304, 1.0));
    uint _2317 = _2290 + 4u;
    float _2326 = isnan(1.0) ? _2303 : (isnan(_2303) ? 1.0 : min(_2303, 1.0));
    uint _2330 = _2290 | 1u;
    float _2341 = dot(vec3(cbLight._m0[_2290].xyz), vec3(_770, _771, _772));
    float _2344 = dot(vec3(cbLight._m0[_2330].xyz), vec3(_770, _771, _772));
    float _4545 = isnan(0.0) ? _2341 : (isnan(_2341) ? 0.0 : max(_2341, 0.0));
    float _4556 = isnan(0.0) ? _2344 : (isnan(_2344) ? 0.0 : max(_2344, 0.0));
    float _2349 = (isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0))) * 0.3183098733425140380859375;
    float _2351 = (isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0))) * 0.3183098733425140380859375;
    float _2358 = ((cbLight._m0[_2307].x * _2313) * _2351) + (((cbLight._m0[_2317].x * _2279) * _2326) * _2349);
    float _2359 = ((_2313 * cbLight._m0[_2307].y) * _2351) + (((cbLight._m0[_2317].y * _2281) * _2326) * _2349);
    float _2360 = ((_2313 * cbLight._m0[_2307].z) * _2351) + (((cbLight._m0[_2317].z * _2283) * _2326) * _2349);
    uvec4 _2364 = floatBitsToUint(cbLight._m0[_2290 + 12u]);
    bool _2366 = _2364.x == 0u;
    float _2468;
    float _2470;
    float _2472;
    if (_2366)
    {
        _2468 = _2358;
        _2470 = _2359;
        _2472 = _2360;
    }
    else
    {
        uint _2476 = _2290 + 6u;
        float _2492 = (dot(vec3(cbLight._m0[_2290 + 2u].xyz), vec3(_770, _771, _772)) * 0.5) + 0.5;
        float _2493 = _2492 * _2492;
        float _4567 = isnan(0.0) ? _2493 : (isnan(_2493) ? 0.0 : max(_2493, 0.0));
        float _2494 = isnan(1.0) ? _4567 : (isnan(_4567) ? 1.0 : min(_4567, 1.0));
        float _2495 = isnan(1.0) ? _2305 : (isnan(_2305) ? 1.0 : min(_2305, 1.0));
        _2468 = (((cbLight._m0[_2476].x * 0.3183098733425140380859375) * _2494) * _2495) + _2358;
        _2470 = (((cbLight._m0[_2476].y * 0.3183098733425140380859375) * _2494) * _2495) + _2359;
        _2472 = (((cbLight._m0[_2476].z * 0.3183098733425140380859375) * _2494) * _2495) + _2360;
    }
    bool _2475 = _2364.y == 0u;
    float _2530;
    float _2532;
    float _2534;
    if (_2475)
    {
        _2530 = _2468;
        _2532 = _2470;
        _2534 = _2472;
    }
    else
    {
        uint _2703 = _2290 + 7u;
        float _2719 = (dot(vec3(cbLight._m0[_2290 + 3u].xyz), vec3(_770, _771, _772)) * 0.5) + 0.5;
        float _2720 = _2719 * _2719;
        float _4583 = isnan(0.0) ? _2720 : (isnan(_2720) ? 0.0 : max(_2720, 0.0));
        float _2721 = isnan(1.0) ? _4583 : (isnan(_4583) ? 1.0 : min(_4583, 1.0));
        float _2722 = isnan(1.0) ? _2306 : (isnan(_2306) ? 1.0 : min(_2306, 1.0));
        _2530 = (((cbLight._m0[_2703].x * 0.3183098733425140380859375) * _2721) * _2722) + _2468;
        _2532 = (((cbLight._m0[_2703].y * 0.3183098733425140380859375) * _2721) * _2722) + _2470;
        _2534 = (((cbLight._m0[_2703].z * 0.3183098733425140380859375) * _2721) * _2722) + _2472;
    }
    uint _2537 = _2290 + 8u;
    float _2550 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2290].w)) * _902) * 0.949999988079071044921875);
    float _2551 = _2550 * _2550;
    float _2552 = cbLight._m0[_2290].x + _850;
    float _2553 = cbLight._m0[_2290].y + _851;
    float _2554 = cbLight._m0[_2290].z + _852;
    float _2558 = inversesqrt(dot(vec3(_2552, _2553, _2554), vec3(_2552, _2553, _2554)));
    float _2559 = _2558 * _2552;
    float _2560 = _2558 * _2553;
    float _2561 = _2558 * _2554;
    float _2562 = dot(vec3(_770, _771, _772), vec3(cbLight._m0[_2290].xyz));
    float _4599 = isnan(0.0) ? _2562 : (isnan(_2562) ? 0.0 : max(_2562, 0.0));
    float _2565 = isnan(1.0) ? _4599 : (isnan(_4599) ? 1.0 : min(_4599, 1.0));
    float _4610 = isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0));
    float _2566 = isnan(1.0) ? _4610 : (isnan(_4610) ? 1.0 : min(_4610, 1.0));
    float _2567 = dot(vec3(_770, _771, _772), vec3(_2559, _2560, _2561));
    float _4621 = isnan(0.0) ? _2567 : (isnan(_2567) ? 0.0 : max(_2567, 0.0));
    float _2570 = isnan(1.0) ? _4621 : (isnan(_4621) ? 1.0 : min(_4621, 1.0));
    float _2571 = dot(vec3(cbLight._m0[_2290].xyz), vec3(_2559, _2560, _2561));
    float _4632 = isnan(0.0) ? _2571 : (isnan(_2571) ? 0.0 : max(_2571, 0.0));
    float _2575 = _2551 * _2551;
    float _2579 = ((_2570 * _2570) * (_2575 + (-1.0))) + 1.0;
    float _2587 = exp2(log2(1.0 - (isnan(1.0) ? _4632 : (isnan(_4632) ? 1.0 : min(_4632, 1.0)))) * 5.0);
    float _2588 = 0.959999978542327880859375 - _969;
    float _2590 = 0.959999978542327880859375 - _970;
    float _2591 = 0.959999978542327880859375 - _971;
    float _2598 = 1.0 - _2551;
    float _2609 = (0.5 / (((_2566 * ((_2565 * _2598) + _2551)) + 9.9999999392252902907785028219223e-09) + (((_2566 * _2598) + _2551) * _2565))) * _2565;
    float _4643 = isnan(0.0) ? _2609 : (isnan(_2609) ? 0.0 : max(_2609, 0.0));
    float _2611 = (isnan(1.0) ? _4643 : (isnan(_4643) ? 1.0 : min(_4643, 1.0))) * (_2575 / ((_2579 * _2579) * 3.141590118408203125));
    uint _2625 = _2290 + 9u;
    float _2636 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2330].w)) * _902) * 0.949999988079071044921875);
    float _2637 = _2636 * _2636;
    float _2638 = cbLight._m0[_2330].x + _850;
    float _2639 = cbLight._m0[_2330].y + _851;
    float _2640 = cbLight._m0[_2330].z + _852;
    float _2644 = inversesqrt(dot(vec3(_2638, _2639, _2640), vec3(_2638, _2639, _2640)));
    float _2645 = _2644 * _2638;
    float _2646 = _2644 * _2639;
    float _2647 = _2644 * _2640;
    float _2648 = dot(vec3(_770, _771, _772), vec3(cbLight._m0[_2330].xyz));
    float _4654 = isnan(0.0) ? _2648 : (isnan(_2648) ? 0.0 : max(_2648, 0.0));
    float _2651 = isnan(1.0) ? _4654 : (isnan(_4654) ? 1.0 : min(_4654, 1.0));
    float _2652 = dot(vec3(_770, _771, _772), vec3(_2645, _2646, _2647));
    float _4665 = isnan(0.0) ? _2652 : (isnan(_2652) ? 0.0 : max(_2652, 0.0));
    float _2655 = isnan(1.0) ? _4665 : (isnan(_4665) ? 1.0 : min(_4665, 1.0));
    float _2656 = dot(vec3(cbLight._m0[_2330].xyz), vec3(_2645, _2646, _2647));
    float _4676 = isnan(0.0) ? _2656 : (isnan(_2656) ? 0.0 : max(_2656, 0.0));
    float _2660 = _2637 * _2637;
    float _2664 = ((_2655 * _2655) * (_2660 + (-1.0))) + 1.0;
    float _2671 = exp2(log2(1.0 - (isnan(1.0) ? _4676 : (isnan(_4676) ? 1.0 : min(_4676, 1.0)))) * 5.0);
    float _2678 = 1.0 - _2637;
    float _2688 = (0.5 / (((_2566 * ((_2651 * _2678) + _2637)) + 9.9999999392252902907785028219223e-09) + (((_2566 * _2678) + _2637) * _2651))) * _2651;
    float _4687 = isnan(0.0) ? _2688 : (isnan(_2688) ? 0.0 : max(_2688, 0.0));
    float _2690 = (isnan(1.0) ? _4687 : (isnan(_4687) ? 1.0 : min(_4687, 1.0))) * (_2660 / ((_2664 * _2664) * 3.141590118408203125));
    float _2700 = (((((_2671 * _2588) + _972) * cbLight._m0[_2625].x) * _2690) * _2313) + ((((cbLight._m0[_2537].x * _2279) * ((_2587 * _2588) + _972)) * _2611) * _2326);
    float _2701 = (((((_2671 * _2590) + _974) * cbLight._m0[_2625].y) * _2690) * _2313) + ((((cbLight._m0[_2537].y * _2281) * ((_2587 * _2590) + _974)) * _2611) * _2326);
    float _2702 = (((((_2671 * _2591) + _975) * cbLight._m0[_2625].z) * _2690) * _2313) + ((((cbLight._m0[_2537].z * _2283) * ((_2587 * _2591) + _975)) * _2611) * _2326);
    float _2758;
    float _2760;
    float _2762;
    if (_2366)
    {
        _2758 = _2700;
        _2760 = _2701;
        _2762 = _2702;
    }
    else
    {
        uint _2764 = _2290 + 2u;
        uint _2768 = _2290 + 10u;
        float _2782 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2764].w)) * _902) * 0.949999988079071044921875);
        float _2783 = _2782 * _2782;
        float _2784 = cbLight._m0[_2764].x + _850;
        float _2785 = cbLight._m0[_2764].y + _851;
        float _2786 = cbLight._m0[_2764].z + _852;
        float _2790 = inversesqrt(dot(vec3(_2784, _2785, _2786), vec3(_2784, _2785, _2786)));
        float _2791 = _2790 * _2784;
        float _2792 = _2790 * _2785;
        float _2793 = _2790 * _2786;
        float _2794 = dot(vec3(_770, _771, _772), vec3(cbLight._m0[_2764].xyz));
        float _4698 = isnan(0.0) ? _2794 : (isnan(_2794) ? 0.0 : max(_2794, 0.0));
        float _2797 = isnan(1.0) ? _4698 : (isnan(_4698) ? 1.0 : min(_4698, 1.0));
        float _2798 = dot(vec3(_770, _771, _772), vec3(_2791, _2792, _2793));
        float _4709 = isnan(0.0) ? _2798 : (isnan(_2798) ? 0.0 : max(_2798, 0.0));
        float _2801 = isnan(1.0) ? _4709 : (isnan(_4709) ? 1.0 : min(_4709, 1.0));
        float _2802 = dot(vec3(cbLight._m0[_2764].xyz), vec3(_2791, _2792, _2793));
        float _4720 = isnan(0.0) ? _2802 : (isnan(_2802) ? 0.0 : max(_2802, 0.0));
        float _2806 = _2783 * _2783;
        float _2810 = ((_2801 * _2801) * (_2806 + (-1.0))) + 1.0;
        float _2817 = exp2(log2(1.0 - (isnan(1.0) ? _4720 : (isnan(_4720) ? 1.0 : min(_4720, 1.0)))) * 5.0);
        float _2824 = 1.0 - _2783;
        float _2834 = (0.5 / (((_2566 * ((_2797 * _2824) + _2783)) + 9.9999999392252902907785028219223e-09) + (((_2566 * _2824) + _2783) * _2797))) * _2797;
        float _4731 = isnan(0.0) ? _2834 : (isnan(_2834) ? 0.0 : max(_2834, 0.0));
        float _2836 = (isnan(1.0) ? _4731 : (isnan(_4731) ? 1.0 : min(_4731, 1.0))) * (_2806 / ((_2810 * _2810) * 3.141590118408203125));
        float _2837 = isnan(1.0) ? _2305 : (isnan(_2305) ? 1.0 : min(_2305, 1.0));
        _2758 = (((((_2817 * _2588) + _972) * cbLight._m0[_2768].x) * _2836) * _2837) + _2700;
        _2760 = (((((_2817 * _2590) + _974) * cbLight._m0[_2768].y) * _2836) * _2837) + _2701;
        _2762 = (((((_2817 * _2591) + _975) * cbLight._m0[_2768].z) * _2836) * _2837) + _2702;
    }
    float _2868;
    float _2870;
    float _2872;
    if (_2475)
    {
        _2868 = _2758;
        _2870 = _2760;
        _2872 = _2762;
    }
    else
    {
        uint _2879 = _2290 + 3u;
        uint _2883 = _2290 + 11u;
        float _2897 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2879].w)) * _902) * 0.949999988079071044921875);
        float _2898 = _2897 * _2897;
        float _2899 = cbLight._m0[_2879].x + _850;
        float _2900 = cbLight._m0[_2879].y + _851;
        float _2901 = cbLight._m0[_2879].z + _852;
        float _2905 = inversesqrt(dot(vec3(_2899, _2900, _2901), vec3(_2899, _2900, _2901)));
        float _2906 = _2905 * _2899;
        float _2907 = _2905 * _2900;
        float _2908 = _2905 * _2901;
        float _2909 = dot(vec3(_770, _771, _772), vec3(cbLight._m0[_2879].xyz));
        float _4747 = isnan(0.0) ? _2909 : (isnan(_2909) ? 0.0 : max(_2909, 0.0));
        float _2912 = isnan(1.0) ? _4747 : (isnan(_4747) ? 1.0 : min(_4747, 1.0));
        float _2913 = dot(vec3(_770, _771, _772), vec3(_2906, _2907, _2908));
        float _4758 = isnan(0.0) ? _2913 : (isnan(_2913) ? 0.0 : max(_2913, 0.0));
        float _2916 = isnan(1.0) ? _4758 : (isnan(_4758) ? 1.0 : min(_4758, 1.0));
        float _2917 = dot(vec3(cbLight._m0[_2879].xyz), vec3(_2906, _2907, _2908));
        float _4769 = isnan(0.0) ? _2917 : (isnan(_2917) ? 0.0 : max(_2917, 0.0));
        float _2921 = _2898 * _2898;
        float _2925 = ((_2916 * _2916) * (_2921 + (-1.0))) + 1.0;
        float _2932 = exp2(log2(1.0 - (isnan(1.0) ? _4769 : (isnan(_4769) ? 1.0 : min(_4769, 1.0)))) * 5.0);
        float _2939 = 1.0 - _2898;
        float _2949 = (0.5 / (((_2566 * ((_2912 * _2939) + _2898)) + 9.9999999392252902907785028219223e-09) + (((_2566 * _2939) + _2898) * _2912))) * _2912;
        float _4780 = isnan(0.0) ? _2949 : (isnan(_2949) ? 0.0 : max(_2949, 0.0));
        float _2951 = (isnan(1.0) ? _4780 : (isnan(_4780) ? 1.0 : min(_4780, 1.0))) * (_2921 / ((_2925 * _2925) * 3.141590118408203125));
        float _2952 = isnan(1.0) ? _2306 : (isnan(_2306) ? 1.0 : min(_2306, 1.0));
        _2868 = (((((_2932 * _2588) + _972) * cbLight._m0[_2883].x) * _2951) * _2952) + _2758;
        _2870 = (((((_2932 * _2590) + _974) * cbLight._m0[_2883].y) * _2951) * _2952) + _2760;
        _2872 = (((((_2932 * _2591) + _975) * cbLight._m0[_2883].z) * _2951) * _2952) + _2762;
    }
    float _3018;
    float _3020;
    float _3022;
    float _3024;
    float _3026;
    float _3028;
    if (_2288.y == 0u)
    {
        uvec4 _2973 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2974 = _2973.x;
        uint _2985 = uint((float(_2973.y) * floor(float(uint(cbSceneParam._m0[85u].y * _859) / _2974))) + floor(float(uint(cbSceneParam._m0[85u].x * _858) / _2974)));
        float _2995 = (log2(_2066 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2996 = isnan(0.0) ? _2995 : (isnan(_2995) ? 0.0 : max(_2995, 0.0));
        uint _2999 = uint(isnan(14.0) ? _2996 : (isnan(_2996) ? 14.0 : min(_2996, 14.0)));
        uvec4 _3004 = texelFetch(g_lightClusterGridBuffer, int(((_2999 << 2u) + (_2985 << 6u)) >> 2u));
        uint _3005 = _3004.x;
        uint _3006 = _2973.z;
        float _3085;
        float _3087;
        float _3089;
        float _3091;
        float _3093;
        float _3095;
        if (((((1u << ((_3006 >> 4u) & 15u)) + 4294967295u) & _3005) == 0u) || ((_3006 & 240u) == 0u))
        {
            _3085 = 0.0;
            _3087 = 0.0;
            _3089 = 0.0;
            _3091 = 0.0;
            _3093 = 0.0;
            _3095 = 0.0;
        }
        else
        {
            float _3086;
            float _3088;
            float _3090;
            float _3092;
            float _3094;
            float _3096;
            float _3230 = 0.0;
            float _3231 = 0.0;
            float _3232 = 0.0;
            float _3233 = 0.0;
            float _3234 = 0.0;
            float _3235 = 0.0;
            uint _3236 = 0u;
            uint _3245;
            bool _3246;
            for (;;)
            {
                _3245 = texelFetch(g_lightClassification, int((((_2999 << 5u) + (_2985 << 9u)) + (_3236 << 2u)) >> 2u)).x;
                _3246 = _3245 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3246)
                {
                    frontier_phi_66_pred = _3235;
                    frontier_phi_66_pred_1 = _3234;
                    frontier_phi_66_pred_2 = _3233;
                    frontier_phi_66_pred_3 = _3232;
                    frontier_phi_66_pred_4 = _3231;
                    frontier_phi_66_pred_5 = _3230;
                }
                else
                {
                    float _3354;
                    float _3355;
                    float _3356;
                    float _3357;
                    float _3358;
                    float _3359;
                    uint _3360;
                    _3354 = _3230;
                    _3355 = _3231;
                    _3356 = _3232;
                    _3357 = _3233;
                    _3358 = _3234;
                    _3359 = _3235;
                    _3360 = _3245;
                    float _3286;
                    float _3287;
                    float _3288;
                    float _3289;
                    float _3290;
                    float _3291;
                    for (;;)
                    {
                        uint _3364 = uint(findLSB(_3360)) + (_3236 << 5u);
                        uint _3361 = (_3360 + 4294967295u) & _3360;
                        uint _3366 = _3364 * 48u;
                        vec4 _3380 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3366)).x, texelFetch(g_PointLightRenderingBuffer, int(_3366 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3366 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3366 + 3u)).x));
                        uint _3386 = (_3364 * 48u) + 4u;
                        vec4 _3399 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3386)).x, texelFetch(g_PointLightRenderingBuffer, int(_3386 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3386 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3386 + 3u)).x));
                        uint _3405 = (_3364 * 48u) + 8u;
                        vec3 _3416 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3405)).x, texelFetch(g_PointLightRenderingBuffer, int(_3405 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3405 + 2u)).x));
                        float _3420 = _3380.x - _2064;
                        float _3421 = _3380.y - _2065;
                        float _3422 = _3380.z - _2066;
                        float _3423 = dot(vec3(_3420, _3421, _3422), vec3(_3420, _3421, _3422));
                        float _3426 = inversesqrt(_3423);
                        float _3427 = _3426 * _3420;
                        float _3428 = _3426 * _3421;
                        float _3429 = _3426 * _3422;
                        float _3430 = dot(vec3(_883, _886, _889), vec3(_3427, _3428, _3429));
                        float _3435 = 1.0 - (_3423 * _3380.w);
                        float _4806 = isnan(0.0) ? _3435 : (isnan(_3435) ? 0.0 : max(_3435, 0.0));
                        float _3436 = isnan(1.0) ? _4806 : (isnan(_4806) ? 1.0 : min(_4806, 1.0));
                        float _3437 = sqrt(_3423) * _3399.w;
                        float _3440 = 1.39999997615814208984375 / (_3437 + 1.39999997615814208984375);
                        float _3441 = _3440 * _3440;
                        float _3444 = ((1.0 - _3441) * _3430) + _3441;
                        float _3447 = _3437 * _3437;
                        float _3451 = ((isnan(0.0) ? _3444 : (isnan(_3444) ? 0.0 : max(_3444, 0.0))) * _3436) / ((_3447 * 0.699999988079071044921875) + 1.0);
                        float _3455 = (-0.0) - _2064;
                        float _3456 = (-0.0) - _2065;
                        float _3457 = (-0.0) - _2066;
                        float _3461 = inversesqrt(dot(vec3(_3455, _3456, _3457), vec3(_3455, _3456, _3457)));
                        float _3462 = _3461 * _3455;
                        float _3463 = _3461 * _3456;
                        float _3464 = _3461 * _3457;
                        float _3471 = exp2(log2(1.0 / ((_3447 * 3.5) + 5.0)) * 0.25);
                        float _3472 = 1.0 - _1003;
                        float _3479 = sqrt(1.0 - ((1.0 - (_3472 * _3472)) * (1.0 - (_3471 * _3471))));
                        float _3480 = _3479 * _3479;
                        float _3481 = _3480 * _3480;
                        float _3482 = _3462 + _3427;
                        float _3483 = _3463 + _3428;
                        float _3484 = _3464 + _3429;
                        float _3488 = inversesqrt(dot(vec3(_3482, _3483, _3484), vec3(_3482, _3483, _3484)));
                        float _3492 = dot(vec3(_883, _886, _889), vec3(_3462, _3463, _3464));
                        float _4822 = isnan(0.0) ? _3492 : (isnan(_3492) ? 0.0 : max(_3492, 0.0));
                        float _3495 = isnan(1.0) ? _4822 : (isnan(_4822) ? 1.0 : min(_4822, 1.0));
                        float _3496 = dot(vec3(_883, _886, _889), vec3(_3488 * _3482, _3488 * _3483, _3488 * _3484));
                        float _4833 = isnan(0.0) ? _3496 : (isnan(_3496) ? 0.0 : max(_3496, 0.0));
                        float _3499 = isnan(1.0) ? _4833 : (isnan(_4833) ? 1.0 : min(_4833, 1.0));
                        float _3503 = ((_3499 * _3499) * (_3481 + (-1.0))) + 1.0;
                        float _3504 = _3440 * _3480;
                        float _3505 = _3504 * _3504;
                        float _3508 = ((1.0 - _3505) * _3430) + _3505;
                        float _4844 = isnan(0.0) ? _3508 : (isnan(_3508) ? 0.0 : max(_3508, 0.0));
                        float _3509 = isnan(1.0) ? _4844 : (isnan(_4844) ? 1.0 : min(_4844, 1.0));
                        float _3510 = 1.0 - _3480;
                        float _3520 = (0.5 / (((_3509 * ((_3495 * _3510) + _3480)) + 9.9999999392252902907785028219223e-09) + (((_3509 * _3510) + _3480) * _3495))) * _3509;
                        float _4855 = isnan(0.0) ? _3520 : (isnan(_3520) ? 0.0 : max(_3520, 0.0));
                        float _3531 = (((_3481 * 3.1415927410125732421875) * (isnan(1.0) ? _4855 : (isnan(_4855) ? 1.0 : min(_4855, 1.0)))) / ((_3503 * _3503) * ((_3447 * 2.1991131305694580078125) + 3.141590118408203125))) * _3436;
                        _3289 = (_3451 * _3399.x) + _3357;
                        _3290 = (_3451 * _3399.y) + _3358;
                        _3291 = (_3451 * _3399.z) + _3359;
                        _3286 = (_3531 * _3416.x) + _3354;
                        _3287 = (_3531 * _3416.y) + _3355;
                        _3288 = (_3531 * _3416.z) + _3356;
                        if (_3361 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3354 = _3286;
                            _3355 = _3287;
                            _3356 = _3288;
                            _3357 = _3289;
                            _3358 = _3290;
                            _3359 = _3291;
                            _3360 = _3361;
                        }
                    }
                    frontier_phi_66_pred = _3291;
                    frontier_phi_66_pred_1 = _3290;
                    frontier_phi_66_pred_2 = _3289;
                    frontier_phi_66_pred_3 = _3288;
                    frontier_phi_66_pred_4 = _3287;
                    frontier_phi_66_pred_5 = _3286;
                }
                _3096 = frontier_phi_66_pred;
                _3094 = frontier_phi_66_pred_1;
                _3092 = frontier_phi_66_pred_2;
                _3090 = frontier_phi_66_pred_3;
                _3088 = frontier_phi_66_pred_4;
                _3086 = frontier_phi_66_pred_5;
                uint _3237 = _3236 + 1u;
                if (_3237 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3230 = _3086;
                    _3231 = _3088;
                    _3232 = _3090;
                    _3233 = _3092;
                    _3234 = _3094;
                    _3235 = _3096;
                    _3236 = _3237;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3085 = _3086;
            _3087 = _3088;
            _3089 = _3090;
            _3091 = _3092;
            _3093 = _3094;
            _3095 = _3096;
        }
        uvec4 _3099 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3100 = _3099.z;
        uint _3102 = (_3100 >> 8u) & 15u;
        float _3198;
        float _3200;
        float _3202;
        float _3204;
        float _3206;
        float _3208;
        if (((4294967295u << _3102) & _3005) == 0u)
        {
            _3198 = _3085;
            _3200 = _3087;
            _3202 = _3089;
            _3204 = _3091;
            _3206 = _3093;
            _3208 = _3095;
        }
        else
        {
            float _3223 = inversesqrt(dot(vec3(_2064, _2065, _2066), vec3(_2064, _2065, _2066)));
            float _3224 = _3223 * _2064;
            float _3225 = _3223 * _2065;
            float _3226 = _3223 * _2066;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3102 < ((_3100 >> 12u) & 15u))
            {
                float _3199;
                float _3201;
                float _3203;
                float _3205;
                float _3207;
                float _3209;
                float _3337 = _3085;
                float _3338 = _3087;
                float _3339 = _3089;
                float _3340 = _3091;
                float _3341 = _3093;
                float _3342 = _3095;
                uint _3343 = _3102;
                uint _3352;
                bool _3353;
                for (;;)
                {
                    _3352 = texelFetch(g_lightClassification, int((((_2999 << 5u) + (_2985 << 9u)) + (_3343 << 2u)) >> 2u)).x;
                    _3353 = _3352 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3353)
                    {
                        frontier_phi_72_pred = _3342;
                        frontier_phi_72_pred_1 = _3341;
                        frontier_phi_72_pred_2 = _3340;
                        frontier_phi_72_pred_3 = _3339;
                        frontier_phi_72_pred_4 = _3338;
                        frontier_phi_72_pred_5 = _3337;
                    }
                    else
                    {
                        float _3536;
                        float _3537;
                        float _3538;
                        float _3539;
                        float _3540;
                        float _3541;
                        float _3829;
                        float _3830;
                        float _3831;
                        float _3832;
                        float _3833;
                        float _3834;
                        float _3549 = _3337;
                        float _3550 = _3338;
                        float _3551 = _3339;
                        float _3552 = _3340;
                        float _3553 = _3341;
                        float _3554 = _3342;
                        uint _3555 = _3352;
                        uint _3556;
                        vec4 _3581;
                        float _3582;
                        vec4 _3597;
                        vec3 _3609;
                        vec4 _3624;
                        vec4 _3639;
                        float _3685;
                        bool _3686;
                        for (;;)
                        {
                            uint _3566 = ((_3343 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3555));
                            _3556 = (_3555 + 4294967295u) & _3555;
                            uint _3568 = _3566 * 40u;
                            _3581 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3568)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3568 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3568 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3568 + 3u)).x));
                            _3582 = _3581.w;
                            uint _3584 = (_3566 * 40u) + 4u;
                            _3597 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3584)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3584 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3584 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3584 + 3u)).x));
                            uint _3599 = (_3566 * 40u) + 8u;
                            _3609 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3599)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3599 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3599 + 2u)).x));
                            uint _3611 = (_3566 * 40u) + 16u;
                            _3624 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3611)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3611 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3611 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3611 + 3u)).x));
                            uint _3626 = (_3566 * 40u) + 20u;
                            _3639 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3626)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3626 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3626 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3626 + 3u)).x));
                            uint _3641 = (_3566 * 40u) + 24u;
                            vec4 _3654 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3641)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3641 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3641 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3641 + 3u)).x));
                            uint _3660 = (_3566 * 40u) + 28u;
                            vec4 _3673 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3660)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3660 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3660 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3660 + 3u)).x));
                            _3685 = fma(_2066, _3673.z, fma(_2065, _3673.y, _3673.x * _2064)) + _3673.w;
                            _3686 = !((fma(_2066, _3654.z, fma(_2065, _3654.y, _3654.x * _2064)) + _3654.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3686)
                            {
                                float _3713 = _3581.x - _2064;
                                float _3714 = _3581.y - _2065;
                                float _3715 = _3581.z - _2066;
                                float _3716 = dot(vec3(_3713, _3714, _3715), vec3(_3713, _3714, _3715));
                                float _3719 = inversesqrt(_3716);
                                float _3720 = _3719 * _3713;
                                float _3721 = _3719 * _3714;
                                float _3722 = _3719 * _3715;
                                float _3726 = 1.0 - (_3716 / (_3582 * _3582));
                                float _4866 = isnan(0.0) ? _3726 : (isnan(_3726) ? 0.0 : max(_3726, 0.0));
                                float _3727 = isnan(1.0) ? _4866 : (isnan(_4866) ? 1.0 : min(_4866, 1.0));
                                float _3731 = sqrt(_3716) * _3597.w;
                                float _3733 = 1.39999997615814208984375 / (_3731 + 1.39999997615814208984375);
                                float _3734 = _3733 * _3733;
                                float _3737 = ((1.0 - _3734) * dot(vec3(_3720, _3721, _3722), vec3(_883, _886, _889))) + _3734;
                                float _3740 = _3731 * _3731;
                                float _3744 = (fma(_2066, _3624.z, fma(_2065, _3624.y, _3624.x * _2064)) + _3624.w) / _3685;
                                float _3745 = (fma(_2066, _3639.z, fma(_2065, _3639.y, _3639.x * _2064)) + _3639.w) / _3685;
                                float _3749 = 1.0 - dot(vec2(_3744, _3745), vec2(_3744, _3745));
                                float _4882 = isnan(0.0) ? _3749 : (isnan(_3749) ? 0.0 : max(_3749, 0.0));
                                float _3750 = isnan(1.0) ? _4882 : (isnan(_4882) ? 1.0 : min(_4882, 1.0));
                                float _3751 = _3750 * (((isnan(0.0) ? _3737 : (isnan(_3737) ? 0.0 : max(_3737, 0.0))) * _3727) / ((_3740 * 0.699999988079071044921875) + 1.0));
                                float _3763 = exp2(log2(1.0 / ((_3740 * 3.5) + 5.0)) * 0.25);
                                float _3764 = 1.0 - _1003;
                                float _3771 = sqrt(1.0 - ((1.0 - (_3764 * _3764)) * (1.0 - (_3763 * _3763))));
                                float _3772 = _3771 * _3771;
                                float _3773 = _3772 * _3772;
                                float _3774 = _3720 - _3224;
                                float _3775 = _3721 - _3225;
                                float _3776 = _3722 - _3226;
                                float _3780 = inversesqrt(dot(vec3(_3774, _3775, _3776), vec3(_3774, _3775, _3776)));
                                float _3784 = dot(vec3(_883, _886, _889), vec3((-0.0) - _3224, (-0.0) - _3225, (-0.0) - _3226));
                                float _4893 = isnan(0.0) ? _3784 : (isnan(_3784) ? 0.0 : max(_3784, 0.0));
                                float _3787 = isnan(1.0) ? _4893 : (isnan(_4893) ? 1.0 : min(_4893, 1.0));
                                float _3788 = dot(vec3(_883, _886, _889), vec3(_3780 * _3774, _3780 * _3775, _3780 * _3776));
                                float _4904 = isnan(0.0) ? _3788 : (isnan(_3788) ? 0.0 : max(_3788, 0.0));
                                float _3791 = isnan(1.0) ? _4904 : (isnan(_4904) ? 1.0 : min(_4904, 1.0));
                                float _3795 = ((_3791 * _3791) * (_3773 + (-1.0))) + 1.0;
                                float _3796 = _3733 * _3772;
                                float _3797 = _3796 * _3796;
                                float _3803 = ((1.0 - _3797) * dot(vec3(_883, _886, _889), vec3(_3720, _3721, _3722))) + _3797;
                                float _4915 = isnan(0.0) ? _3803 : (isnan(_3803) ? 0.0 : max(_3803, 0.0));
                                float _3804 = isnan(1.0) ? _4915 : (isnan(_4915) ? 1.0 : min(_4915, 1.0));
                                float _3805 = 1.0 - _3772;
                                float _3815 = (0.5 / (((_3804 * ((_3787 * _3805) + _3772)) + 9.9999999392252902907785028219223e-09) + (((_3804 * _3805) + _3772) * _3787))) * _3804;
                                float _4926 = isnan(0.0) ? _3815 : (isnan(_3815) ? 0.0 : max(_3815, 0.0));
                                float _3825 = (_3750 * _3727) * (((_3773 * 3.1415927410125732421875) * (isnan(1.0) ? _4926 : (isnan(_4926) ? 1.0 : min(_4926, 1.0)))) / ((_3795 * _3795) * ((_3740 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3751 * _3597.y;
                                frontier_phi_78_pred_1 = _3751 * _3597.x;
                                frontier_phi_78_pred_2 = _3825 * _3609.z;
                                frontier_phi_78_pred_3 = _3825 * _3609.y;
                                frontier_phi_78_pred_4 = _3825 * _3609.x;
                                frontier_phi_78_pred_5 = _3751 * _3597.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3833 = frontier_phi_78_pred;
                            _3832 = frontier_phi_78_pred_1;
                            _3831 = frontier_phi_78_pred_2;
                            _3830 = frontier_phi_78_pred_3;
                            _3829 = frontier_phi_78_pred_4;
                            _3834 = frontier_phi_78_pred_5;
                            _3539 = _3832 + _3552;
                            _3540 = _3833 + _3553;
                            _3541 = _3834 + _3554;
                            _3536 = _3829 + _3549;
                            _3537 = _3830 + _3550;
                            _3538 = _3831 + _3551;
                            if (_3556 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3549 = _3536;
                                _3550 = _3537;
                                _3551 = _3538;
                                _3552 = _3539;
                                _3553 = _3540;
                                _3554 = _3541;
                                _3555 = _3556;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3541;
                        frontier_phi_72_pred_1 = _3540;
                        frontier_phi_72_pred_2 = _3539;
                        frontier_phi_72_pred_3 = _3538;
                        frontier_phi_72_pred_4 = _3537;
                        frontier_phi_72_pred_5 = _3536;
                    }
                    _3209 = frontier_phi_72_pred;
                    _3207 = frontier_phi_72_pred_1;
                    _3205 = frontier_phi_72_pred_2;
                    _3203 = frontier_phi_72_pred_3;
                    _3201 = frontier_phi_72_pred_4;
                    _3199 = frontier_phi_72_pred_5;
                    uint _3344 = _3343 + 1u;
                    if (_3344 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3337 = _3199;
                        _3338 = _3201;
                        _3339 = _3203;
                        _3340 = _3205;
                        _3341 = _3207;
                        _3342 = _3209;
                        _3343 = _3344;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3209;
                frontier_phi_60_61_ladder_1 = _3207;
                frontier_phi_60_61_ladder_2 = _3203;
                frontier_phi_60_61_ladder_3 = _3201;
                frontier_phi_60_61_ladder_4 = _3199;
                frontier_phi_60_61_ladder_5 = _3205;
            }
            else
            {
                frontier_phi_60_61_ladder = _3095;
                frontier_phi_60_61_ladder_1 = _3093;
                frontier_phi_60_61_ladder_2 = _3089;
                frontier_phi_60_61_ladder_3 = _3087;
                frontier_phi_60_61_ladder_4 = _3085;
                frontier_phi_60_61_ladder_5 = _3091;
            }
            _3198 = frontier_phi_60_61_ladder_4;
            _3200 = frontier_phi_60_61_ladder_3;
            _3202 = frontier_phi_60_61_ladder_2;
            _3204 = frontier_phi_60_61_ladder_5;
            _3206 = frontier_phi_60_61_ladder_1;
            _3208 = frontier_phi_60_61_ladder;
        }
        float _3213 = isnan(1.0) ? _987 : (isnan(_987) ? 1.0 : min(_987, 1.0));
        _3018 = (_3213 * _3204) + _2530;
        _3020 = (_3213 * _3206) + _2532;
        _3022 = (_3213 * _3208) + _2534;
        _3024 = ((_3198 * _972) * _3213) + _2868;
        _3026 = ((_3200 * _974) * _3213) + _2870;
        _3028 = ((_3202 * _975) * _3213) + _2872;
    }
    else
    {
        _3018 = _2530;
        _3020 = _2532;
        _3022 = _2534;
        _3024 = _2868;
        _3026 = _2870;
        _3028 = _2872;
    }
    float _4942 = isnan(0.0) ? _962 : (isnan(_962) ? 0.0 : max(_962, 0.0));
    float _4953 = isnan(0.0) ? _963 : (isnan(_963) ? 0.0 : max(_963, 0.0));
    float _4964 = isnan(0.0) ? _964 : (isnan(_964) ? 0.0 : max(_964, 0.0));
    uint _3048 = _915 + 6u;
    float _3056 = _858 / cbSceneParam._m0[86u].x;
    float _3057 = _859 / cbSceneParam._m0[86u].y;
    vec4 _3071 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3056, _3057, (log2((isnan(cbSceneParam._m0[77u].w) ? _793 : (isnan(_793) ? cbSceneParam._m0[77u].w : min(_793, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3073 = _3071.x;
    float _3074 = _3071.y;
    float _3075 = _3071.z;
    float _3076 = _3071.w;
    float _3148;
    float _3150;
    float _3152;
    float _3154;
    if (_793 > cbSceneParam._m0[78u].w)
    {
        float _3110 = isnan(_793) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _793 : min(cbSceneParam._m0[80u].w, _793));
        float _3111 = _3110 / _793;
        float _3122 = _3111 * _843;
        float _3123 = _844 * _3111;
        float _3124 = (-0.0) - _3123;
        float _3126 = _3111 * _845;
        float _3128 = (cbSceneParam._m0[77u].w * _3124) / _3110;
        float _3129 = _3128 + cbSceneParam._m0[79u].w;
        float _3130 = cbSceneParam._m0[79u].w - _3123;
        float _3136 = sqrt(((_3122 * _3122) + (_3123 * _3123)) + (_3126 * _3126));
        float _3139 = (1.0 - (cbSceneParam._m0[77u].w / _3110)) * _3136;
        float _3144 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3146 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3299;
        if (abs((_3124 - _3128) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3299 = ((((_3129 > 0.0) ? exp2(_3144 * _3129) : (2.0 - exp2(_3146 * _3129))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3139;
        }
        else
        {
            float _3259 = 1.0 / cbSceneParam._m0[80u].x;
            float _3260 = isnan(_3130) ? _3129 : (isnan(_3129) ? _3130 : max(_3129, _3130));
            float _3261 = isnan(_3130) ? _3129 : (isnan(_3129) ? _3130 : min(_3129, _3130));
            float _3270 = isnan(0.0) ? _3260 : (isnan(_3260) ? 0.0 : min(_3260, 0.0));
            float _3271 = isnan(0.0) ? _3261 : (isnan(_3261) ? 0.0 : min(_3261, 0.0));
            _3299 = ((abs(_3136 / _3124) * cbSceneParam._m0[80u].y) * ((((_3270 - _3271) * 2.0) - ((exp2(_3144 * (isnan(0.0) ? _3260 : (isnan(_3260) ? 0.0 : max(_3260, 0.0)))) - exp2(_3144 * (isnan(0.0) ? _3261 : (isnan(_3261) ? 0.0 : max(_3261, 0.0))))) * _3259)) - ((exp2(_3146 * _3270) - exp2(_3146 * _3271)) * _3259))) + (_3139 * cbSceneParam._m0[80u].z);
        }
        vec4 _3301 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3056, _3057, 1.0), 0.0);
        float _3310 = exp2((_3299 * (-1.44269502162933349609375)) * (1.0 - _3301.w));
        float _3311 = log2(_3310);
        float _3327 = log2(_3076);
        _3148 = (exp2(_3327 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3311 * cbSceneParam._m0[78u].x)) * _3301.x) / cbSceneParam._m0[78u].x)) + _3073;
        _3150 = (exp2(_3327 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3311 * cbSceneParam._m0[78u].y)) * _3301.y) / cbSceneParam._m0[78u].y)) + _3074;
        _3152 = (exp2(_3327 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3311 * cbSceneParam._m0[78u].z)) * _3301.z) / cbSceneParam._m0[78u].z)) + _3075;
        _3154 = _3310 * _3076;
    }
    else
    {
        _3148 = _3073;
        _3150 = _3074;
        _3152 = _3075;
        _3154 = _3076;
    }
    float _3166 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3167 = _3166 == 3.0;
    float _3168 = log2(_3154);
    float _3175 = exp2(_3168 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4942 : (isnan(_4942) ? 1.0 : min(_4942, 1.0))) * (_3018 + ((isnan(0.0) ? _1718 : (isnan(_1718) ? 0.0 : max(_1718, 0.0))) * _987))) + ((_3024 + ((isnan(0.0) ? _2011 : (isnan(_2011) ? 0.0 : max(_2011, 0.0))) * _1797)) * cbPerFrame._m0[3u].x));
    float _3176 = exp2(_3168 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4953 : (isnan(_4953) ? 1.0 : min(_4953, 1.0))) * (_3020 + ((isnan(0.0) ? _1721 : (isnan(_1721) ? 0.0 : max(_1721, 0.0))) * _987))) + ((_3026 + ((isnan(0.0) ? _2014 : (isnan(_2014) ? 0.0 : max(_2014, 0.0))) * _1797)) * cbPerFrame._m0[3u].x));
    float _3177 = exp2(_3168 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4964 : (isnan(_4964) ? 1.0 : min(_4964, 1.0))) * (_3022 + ((isnan(0.0) ? _1724 : (isnan(_1724) ? 0.0 : max(_1724, 0.0))) * _987))) + ((_3028 + ((isnan(0.0) ? _2017 : (isnan(_2017) ? 0.0 : max(_2017, 0.0))) * _1797)) * cbPerFrame._m0[3u].x));
    float _3186 = (_3166 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3186 * (_3167 ? _3175 : (_3175 + (cbSceneParam._m0[72u].w * _3148)));
    SV_Target.y = _3186 * (_3167 ? _3176 : (_3176 + (cbSceneParam._m0[72u].w * _3150)));
    SV_Target.z = _3186 * (_3167 ? _3177 : (_3177 + (cbSceneParam._m0[72u].w * _3152)));
    SV_Target.w = cbInstanceData._m0[_3048].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3048].w;
}


