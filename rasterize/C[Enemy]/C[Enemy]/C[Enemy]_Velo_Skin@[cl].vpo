#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out vec4 TEXCOORD_10;
layout(location = 7) out vec4 TEXCOORD_11;
layout(location = 8) out vec3 TEXCOORD_12;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    TEXCOORD_10.z = 0.0;
    TEXCOORD_10.w = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    TEXCOORD_11.w = 0.0;
    TEXCOORD_12.x = 0.0;
    TEXCOORD_12.y = 0.0;
    TEXCOORD_12.z = 0.0;
    float _209 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _211 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _212 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _221 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _222 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _223 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _233 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _235 = texelFetch(g_InstanceIndexBuffer, int(_233));
    uint _236 = _235.x;
    precise float _237 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _242 = isnan(_237) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _237 : max(0.001000000047497451305389404296875, _237));
    precise float _244 = BLENDWEIGHT.x / _242;
    precise float _245 = BLENDWEIGHT.y / _242;
    precise float _246 = BLENDWEIGHT.z / _242;
    precise float _247 = BLENDWEIGHT.w / _242;
    uvec4 _254 = floatBitsToUint(cbInstanceData._m0[(_236 * 13u) + 4u]);
    uint _255 = _254.x;
    uint _257 = (_255 + uint(float(BLENDINDICES.x))) * 3u;
    uint _264 = _257 + 1u;
    uint _271 = _257 + 2u;
    precise float _278 = _244 * cbObjMatrix._m0[_257].x;
    precise float _279 = _244 * cbObjMatrix._m0[_264].x;
    precise float _280 = _244 * cbObjMatrix._m0[_271].x;
    precise float _281 = _244 * cbObjMatrix._m0[_257].y;
    precise float _282 = _244 * cbObjMatrix._m0[_264].y;
    precise float _283 = _244 * cbObjMatrix._m0[_271].y;
    precise float _284 = _244 * cbObjMatrix._m0[_257].z;
    precise float _285 = _244 * cbObjMatrix._m0[_264].z;
    precise float _286 = _244 * cbObjMatrix._m0[_271].z;
    precise float _287 = _244 * cbObjMatrix._m0[_257].w;
    precise float _288 = _244 * cbObjMatrix._m0[_264].w;
    precise float _289 = _244 * cbObjMatrix._m0[_271].w;
    uint _292 = (_255 + uint(float(BLENDINDICES.y))) * 3u;
    uint _299 = _292 + 1u;
    uint _306 = _292 + 2u;
    precise float _313 = _245 * cbObjMatrix._m0[_292].x;
    precise float _314 = _245 * cbObjMatrix._m0[_299].x;
    precise float _315 = _245 * cbObjMatrix._m0[_306].x;
    precise float _316 = _245 * cbObjMatrix._m0[_292].y;
    precise float _317 = _245 * cbObjMatrix._m0[_299].y;
    precise float _318 = _245 * cbObjMatrix._m0[_306].y;
    precise float _319 = _245 * cbObjMatrix._m0[_292].z;
    precise float _320 = _245 * cbObjMatrix._m0[_299].z;
    precise float _321 = _245 * cbObjMatrix._m0[_306].z;
    precise float _322 = _245 * cbObjMatrix._m0[_292].w;
    precise float _323 = _245 * cbObjMatrix._m0[_299].w;
    precise float _324 = _245 * cbObjMatrix._m0[_306].w;
    precise float _325 = _278 + _313;
    precise float _326 = _279 + _314;
    precise float _327 = _280 + _315;
    precise float _328 = _281 + _316;
    precise float _329 = _282 + _317;
    precise float _330 = _283 + _318;
    precise float _331 = _284 + _319;
    precise float _332 = _285 + _320;
    precise float _333 = _286 + _321;
    precise float _334 = _287 + _322;
    precise float _335 = _288 + _323;
    precise float _336 = _289 + _324;
    uint _339 = (_255 + uint(float(BLENDINDICES.z))) * 3u;
    uint _346 = _339 + 1u;
    uint _353 = _339 + 2u;
    precise float _360 = _246 * cbObjMatrix._m0[_339].x;
    precise float _361 = _246 * cbObjMatrix._m0[_346].x;
    precise float _362 = _246 * cbObjMatrix._m0[_353].x;
    precise float _363 = _246 * cbObjMatrix._m0[_339].y;
    precise float _364 = _246 * cbObjMatrix._m0[_346].y;
    precise float _365 = _246 * cbObjMatrix._m0[_353].y;
    precise float _366 = _246 * cbObjMatrix._m0[_339].z;
    precise float _367 = _246 * cbObjMatrix._m0[_346].z;
    precise float _368 = _246 * cbObjMatrix._m0[_353].z;
    precise float _369 = _246 * cbObjMatrix._m0[_339].w;
    precise float _370 = _246 * cbObjMatrix._m0[_346].w;
    precise float _371 = _246 * cbObjMatrix._m0[_353].w;
    precise float _372 = _325 + _360;
    precise float _373 = _326 + _361;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    precise float _383 = _336 + _371;
    uint _386 = (_255 + uint(float(BLENDINDICES.w))) * 3u;
    uint _393 = _386 + 1u;
    uint _400 = _386 + 2u;
    precise float _407 = _247 * cbObjMatrix._m0[_386].x;
    precise float _408 = _247 * cbObjMatrix._m0[_393].x;
    precise float _409 = _247 * cbObjMatrix._m0[_400].x;
    precise float _410 = _247 * cbObjMatrix._m0[_386].y;
    precise float _411 = _247 * cbObjMatrix._m0[_393].y;
    precise float _412 = _247 * cbObjMatrix._m0[_400].y;
    precise float _413 = _247 * cbObjMatrix._m0[_386].z;
    precise float _414 = _247 * cbObjMatrix._m0[_393].z;
    precise float _415 = _247 * cbObjMatrix._m0[_400].z;
    precise float _416 = _247 * cbObjMatrix._m0[_386].w;
    precise float _417 = _247 * cbObjMatrix._m0[_393].w;
    precise float _418 = _247 * cbObjMatrix._m0[_400].w;
    precise float _419 = _372 + _407;
    precise float _420 = _373 + _408;
    precise float _421 = _374 + _409;
    precise float _422 = _375 + _410;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    precise float _426 = _379 + _414;
    precise float _427 = _380 + _415;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    precise float _430 = _383 + _418;
    precise float _431 = POSITION.x * _419;
    precise float _432 = POSITION.y * _422;
    precise float _433 = _432 + _431;
    precise float _434 = POSITION.z * _425;
    precise float _435 = _434 + _433;
    precise float _436 = 1.0 * _428;
    precise float _437 = _436 + _435;
    precise float _438 = POSITION.x * _420;
    precise float _439 = POSITION.y * _423;
    precise float _440 = _439 + _438;
    precise float _441 = POSITION.z * _426;
    precise float _442 = _441 + _440;
    precise float _443 = 1.0 * _429;
    precise float _444 = _443 + _442;
    precise float _445 = POSITION.x * _421;
    precise float _446 = POSITION.y * _424;
    precise float _447 = _446 + _445;
    precise float _448 = POSITION.z * _427;
    precise float _449 = _448 + _447;
    precise float _450 = 1.0 * _430;
    precise float _451 = _450 + _449;
    float _626 = (((((cbPrevObjMatrix._m0[_292].w * _245) + (cbPrevObjMatrix._m0[_257].w * _244)) + (cbPrevObjMatrix._m0[_339].w * _246)) + (cbPrevObjMatrix._m0[_386].w * _247)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_292].z * _245) + (cbPrevObjMatrix._m0[_257].z * _244)) + (cbPrevObjMatrix._m0[_339].z * _246)) + (cbPrevObjMatrix._m0[_386].z * _247), fma(POSITION.y, (((cbPrevObjMatrix._m0[_292].y * _245) + (cbPrevObjMatrix._m0[_257].y * _244)) + (cbPrevObjMatrix._m0[_339].y * _246)) + (cbPrevObjMatrix._m0[_386].y * _247), ((((cbPrevObjMatrix._m0[_292].x * _245) + (cbPrevObjMatrix._m0[_257].x * _244)) + (cbPrevObjMatrix._m0[_339].x * _246)) + (cbPrevObjMatrix._m0[_386].x * _247)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _627 = (((((cbPrevObjMatrix._m0[_299].w * _245) + (cbPrevObjMatrix._m0[_264].w * _244)) + (cbPrevObjMatrix._m0[_346].w * _246)) + (cbPrevObjMatrix._m0[_393].w * _247)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_299].z * _245) + (cbPrevObjMatrix._m0[_264].z * _244)) + (cbPrevObjMatrix._m0[_346].z * _246)) + (cbPrevObjMatrix._m0[_393].z * _247), fma(POSITION.y, (((cbPrevObjMatrix._m0[_299].y * _245) + (cbPrevObjMatrix._m0[_264].y * _244)) + (cbPrevObjMatrix._m0[_346].y * _246)) + (cbPrevObjMatrix._m0[_393].y * _247), ((((cbPrevObjMatrix._m0[_299].x * _245) + (cbPrevObjMatrix._m0[_264].x * _244)) + (cbPrevObjMatrix._m0[_346].x * _246)) + (cbPrevObjMatrix._m0[_393].x * _247)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _628 = (((((cbPrevObjMatrix._m0[_306].w * _245) + (cbPrevObjMatrix._m0[_271].w * _244)) + (cbPrevObjMatrix._m0[_353].w * _246)) + (cbPrevObjMatrix._m0[_400].w * _247)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_306].z * _245) + (cbPrevObjMatrix._m0[_271].z * _244)) + (cbPrevObjMatrix._m0[_353].z * _246)) + (cbPrevObjMatrix._m0[_400].z * _247), fma(POSITION.y, (((cbPrevObjMatrix._m0[_306].y * _245) + (cbPrevObjMatrix._m0[_271].y * _244)) + (cbPrevObjMatrix._m0[_353].y * _246)) + (cbPrevObjMatrix._m0[_400].y * _247), ((((cbPrevObjMatrix._m0[_306].x * _245) + (cbPrevObjMatrix._m0[_271].x * _244)) + (cbPrevObjMatrix._m0[_353].x * _246)) + (cbPrevObjMatrix._m0[_400].x * _247)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _675 = fma(_212, _425, fma(_211, _422, _419 * _209));
    float _678 = fma(_212, _426, fma(_211, _423, _420 * _209));
    float _681 = fma(_212, _427, fma(_211, _424, _421 * _209));
    precise float _697 = _437 - cbSceneParam._m0[3u].x;
    precise float _698 = _444 - cbSceneParam._m0[3u].y;
    precise float _699 = _451 - cbSceneParam._m0[3u].z;
    precise float _727 = _697 * cbSceneParam._m0[24u].x;
    precise float _728 = _698 * cbSceneParam._m0[24u].y;
    precise float _729 = _728 + _727;
    precise float _730 = _699 * cbSceneParam._m0[24u].z;
    precise float _731 = _730 + _729;
    precise float _732 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _733 = _732 + _731;
    precise float _734 = _697 * cbSceneParam._m0[25u].x;
    precise float _735 = _698 * cbSceneParam._m0[25u].y;
    precise float _736 = _735 + _734;
    precise float _737 = _699 * cbSceneParam._m0[25u].z;
    precise float _738 = _737 + _736;
    precise float _739 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _740 = _739 + _738;
    precise float _741 = _697 * cbSceneParam._m0[26u].x;
    precise float _742 = _698 * cbSceneParam._m0[26u].y;
    precise float _743 = _742 + _741;
    precise float _744 = _699 * cbSceneParam._m0[26u].z;
    precise float _745 = _744 + _743;
    precise float _746 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _747 = _746 + _745;
    precise float _748 = _697 * cbSceneParam._m0[27u].x;
    precise float _749 = _698 * cbSceneParam._m0[27u].y;
    precise float _750 = _749 + _748;
    precise float _751 = _699 * cbSceneParam._m0[27u].z;
    precise float _752 = _751 + _750;
    precise float _753 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _754 = _753 + _752;
    gl_Position.x = _733;
    gl_Position.y = _740;
    gl_Position.z = _747;
    gl_Position.w = _754;
    POSITION_1.x = _733;
    POSITION_1.y = _740;
    POSITION_1.z = _747;
    POSITION_1.w = _754;
    NORMAL_1.x = _675;
    NORMAL_1.y = _678;
    NORMAL_1.z = _681;
    NORMAL_1.w = float(_236);
    TANGENT_1.x = fma(_223, _425, fma(_222, _422, _419 * _221));
    TANGENT_1.y = fma(_223, _426, fma(_222, _423, _420 * _221));
    TANGENT_1.z = fma(_223, _427, fma(_222, _424, _421 * _221));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
    TEXCOORD_10.x = _733;
    TEXCOORD_10.y = _740;
    TEXCOORD_10.z = _747;
    TEXCOORD_10.w = _754;
    TEXCOORD_11.x = fma(_628, cbSceneParam._m0[29u].z, fma(_627, cbSceneParam._m0[29u].y, _626 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_11.y = fma(_628, cbSceneParam._m0[30u].z, fma(_627, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _626)) + cbSceneParam._m0[30u].w;
    TEXCOORD_11.z = fma(_628, cbSceneParam._m0[31u].z, fma(_627, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _626)) + cbSceneParam._m0[31u].w;
    TEXCOORD_11.w = fma(_628, cbSceneParam._m0[32u].z, fma(_627, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _626)) + cbSceneParam._m0[32u].w;
    TEXCOORD_12.x = _675;
    TEXCOORD_12.y = _678;
    TEXCOORD_12.z = _681;
}


