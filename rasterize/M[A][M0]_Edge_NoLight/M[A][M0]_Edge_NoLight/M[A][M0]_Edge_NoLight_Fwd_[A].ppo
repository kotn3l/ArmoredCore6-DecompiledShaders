#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_Edge_NoLight_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _557;
float _558;
float _559;
float _560;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _122 = texture(sampler2D(M_A_M0_Edge_NoLight_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _128 = _122.w;
    float _129 = _122.x * cbMtdParam._m0[9u].x;
    float _130 = _122.y * cbMtdParam._m0[9u].y;
    float _131 = _122.z * cbMtdParam._m0[9u].z;
    float _151 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _193 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _203 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _193);
    float _204 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _193);
    float _205 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _193);
    vec4 _210 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _212 = _210.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _294 = sqrt(((_203 * _203) + (_204 * _204)) + (_205 * _205));
        float _301 = (cbMatDynParam._m0[5u].x * _294) + cbMatDynParam._m0[5u].y;
        float _584 = isnan(0.0) ? _301 : (isnan(_301) ? 0.0 : max(_301, 0.0));
        float _303 = isnan(1.0) ? _584 : (isnan(_584) ? 1.0 : min(_584, 1.0));
        float _307 = (cbMatDynParam._m0[5u].z * _294) + cbMatDynParam._m0[5u].w;
        float _595 = isnan(0.0) ? _307 : (isnan(_307) ? 0.0 : max(_307, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _595 : (isnan(_595) ? 1.0 : min(_595, 1.0))) - _303)) + _303) < ((_212 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _238 = uint(roundEven(NORMAL.w)) * 13u;
    uint _240 = _238 + 9u;
    uint _241 = _240 + uint(cbMatDynParam._m0[0u].w);
    float _247 = (cbMtdParam._m0[0u].x * (isnan(0.0) ? _129 : (isnan(_129) ? 0.0 : max(_129, 0.0)))) * cbInstanceData._m0[_241].x;
    float _248 = (cbMtdParam._m0[0u].y * (isnan(0.0) ? _130 : (isnan(_130) ? 0.0 : max(_130, 0.0)))) * cbInstanceData._m0[_241].y;
    float _249 = (cbMtdParam._m0[0u].z * (isnan(0.0) ? _131 : (isnan(_131) ? 0.0 : max(_131, 0.0)))) * cbInstanceData._m0[_241].z;
    uint _250 = _238 + 6u;
    float _259 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _260 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _275 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_259, _260, (log2((isnan(cbSceneParam._m0[77u].w) ? _151 : (isnan(_151) ? cbSceneParam._m0[77u].w : min(_151, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _277 = _275.x;
    float _278 = _275.y;
    float _279 = _275.z;
    float _280 = _275.w;
    float _363;
    float _365;
    float _367;
    float _369;
    if (_151 > cbSceneParam._m0[78u].w)
    {
        float _324 = isnan(_151) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _151 : min(cbSceneParam._m0[80u].w, _151));
        float _325 = _324 / _151;
        float _336 = _325 * _203;
        float _337 = _204 * _325;
        float _338 = (-0.0) - _337;
        float _340 = _325 * _205;
        float _342 = (cbSceneParam._m0[77u].w * _338) / _324;
        float _343 = _342 + cbSceneParam._m0[79u].w;
        float _344 = cbSceneParam._m0[79u].w - _337;
        float _350 = sqrt(((_336 * _336) + (_337 * _337)) + (_340 * _340));
        float _353 = (1.0 - (cbSceneParam._m0[77u].w / _324)) * _350;
        float _359 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _361 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _485;
        if (abs((_338 - _342) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _485 = ((((_343 > 0.0) ? exp2(_359 * _343) : (2.0 - exp2(_361 * _343))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _353;
        }
        else
        {
            float _440 = 1.0 / cbSceneParam._m0[80u].x;
            float _441 = isnan(_344) ? _343 : (isnan(_343) ? _344 : max(_343, _344));
            float _442 = isnan(_344) ? _343 : (isnan(_343) ? _344 : min(_343, _344));
            float _451 = isnan(0.0) ? _441 : (isnan(_441) ? 0.0 : min(_441, 0.0));
            float _452 = isnan(0.0) ? _442 : (isnan(_442) ? 0.0 : min(_442, 0.0));
            _485 = ((abs(_350 / _338) * cbSceneParam._m0[80u].y) * ((((_451 - _452) * 2.0) - ((exp2(_359 * (isnan(0.0) ? _441 : (isnan(_441) ? 0.0 : max(_441, 0.0)))) - exp2(_359 * (isnan(0.0) ? _442 : (isnan(_442) ? 0.0 : max(_442, 0.0))))) * _440)) - ((exp2(_361 * _451) - exp2(_361 * _452)) * _440))) + (_353 * cbSceneParam._m0[80u].z);
        }
        vec4 _487 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_259, _260, 1.0), 0.0);
        float _496 = exp2((_485 * (-1.44269502162933349609375)) * (1.0 - _487.w));
        float _497 = log2(_496);
        float _513 = log2(_280);
        _363 = (exp2(_513 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_497 * cbSceneParam._m0[78u].x)) * _487.x) / cbSceneParam._m0[78u].x)) + _277;
        _365 = (exp2(_513 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_497 * cbSceneParam._m0[78u].y)) * _487.y) / cbSceneParam._m0[78u].y)) + _278;
        _367 = (exp2(_513 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_497 * cbSceneParam._m0[78u].z)) * _487.z) / cbSceneParam._m0[78u].z)) + _279;
        _369 = _496 * _280;
    }
    else
    {
        _363 = _277;
        _365 = _278;
        _367 = _279;
        _369 = _280;
    }
    bool _523;
    vec4 _379;
    vec4 _403;
    float _405;
    float _410;
    float _411;
    float _412;
    float _413;
    bool _424;
    for (;;)
    {
        _379 = cbMatDynParam._m0[0u];
        float _381 = roundEven(_379.y);
        bool _382 = _381 == 3.0;
        float _384 = log2(_369);
        float _391 = _247 * exp2(_384 * cbSceneParam._m0[78u].x);
        float _392 = _248 * exp2(_384 * cbSceneParam._m0[78u].y);
        float _393 = _249 * exp2(_384 * cbSceneParam._m0[78u].z);
        float _400 = _212 + (-0.5);
        _403 = cbMtdParam._m0[1u];
        _405 = _403.y * _400;
        float _409 = (_381 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _410 = _409 * (_382 ? _391 : (_391 + (cbSceneParam._m0[72u].w * _363)));
        _411 = _409 * (_382 ? _392 : (_392 + (cbSceneParam._m0[72u].w * _365)));
        _412 = _409 * (_382 ? _393 : (_393 + (cbSceneParam._m0[72u].w * _367)));
        _413 = _400 * 0.999000012874603271484375;
        _424 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_424)
        {
            if ((cbInstanceData._m0[_238 + 7u].x + _413) < 0.5)
            {
                _523 = true;
                break;
            }
        }
        uint _477 = _240 + uint(_379.w);
        if ((cbInstanceData._m0[_477].w < 1.0) && ((cbInstanceData._m0[_477].w + _413) < 0.5))
        {
            _523 = true;
            break;
        }
        if ((_405 + _128) < _403.x)
        {
            _523 = true;
            break;
        }
        _523 = false;
        break;
    }
    float _528;
    if (_523)
    {
        discard_state = true;
        _528 = 0.0;
    }
    else
    {
        _528 = cbInstanceData._m0[_250].w;
    }
    SV_Target.x = _410;
    SV_Target.y = _411;
    SV_Target.z = _412;
    SV_Target.w = _528;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_250].w;
    discard_exit();
}


