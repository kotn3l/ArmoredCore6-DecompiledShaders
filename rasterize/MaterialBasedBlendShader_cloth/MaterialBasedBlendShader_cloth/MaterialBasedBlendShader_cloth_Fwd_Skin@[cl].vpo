#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[24];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR;
layout(location = 7) in vec4 COLOR_1;
layout(location = 8) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out vec4 TEXCOORD_4;
layout(location = 6) out float TEXCOORD_8;

void main()
{
    uint _78 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_8 = 0.0;
    float _195 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _197 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _198 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _205 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _206 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _207 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _447;
    float _448;
    float _449;
    float _450;
    float _451;
    float _452;
    float _453;
    float _454;
    float _455;
    float _456;
    float _457;
    float _458;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _231 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _78;
        precise float _235 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _240 = isnan(_235) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _235 : max(0.001000000047497451305389404296875, _235));
        precise float _242 = BLENDWEIGHT.x / _240;
        precise float _243 = BLENDWEIGHT.y / _240;
        precise float _244 = BLENDWEIGHT.z / _240;
        precise float _245 = BLENDWEIGHT.w / _240;
        uvec4 _252 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_231)).x * 13u) + 4u]);
        uint _253 = _252.x;
        uint _255 = (_253 + uint(float(BLENDINDICES.x))) * 3u;
        uint _262 = _255 + 1u;
        uint _269 = _255 + 2u;
        precise float _276 = _242 * cbObjMatrix._m0[_255].x;
        precise float _277 = _242 * cbObjMatrix._m0[_262].x;
        precise float _278 = _242 * cbObjMatrix._m0[_269].x;
        precise float _279 = _242 * cbObjMatrix._m0[_255].y;
        precise float _280 = _242 * cbObjMatrix._m0[_262].y;
        precise float _281 = _242 * cbObjMatrix._m0[_269].y;
        precise float _282 = _242 * cbObjMatrix._m0[_255].z;
        precise float _283 = _242 * cbObjMatrix._m0[_262].z;
        precise float _284 = _242 * cbObjMatrix._m0[_269].z;
        precise float _285 = _242 * cbObjMatrix._m0[_255].w;
        precise float _286 = _242 * cbObjMatrix._m0[_262].w;
        precise float _287 = _242 * cbObjMatrix._m0[_269].w;
        uint _290 = (_253 + uint(float(BLENDINDICES.y))) * 3u;
        uint _297 = _290 + 1u;
        uint _304 = _290 + 2u;
        precise float _311 = _243 * cbObjMatrix._m0[_290].x;
        precise float _312 = _243 * cbObjMatrix._m0[_297].x;
        precise float _313 = _243 * cbObjMatrix._m0[_304].x;
        precise float _314 = _243 * cbObjMatrix._m0[_290].y;
        precise float _315 = _243 * cbObjMatrix._m0[_297].y;
        precise float _316 = _243 * cbObjMatrix._m0[_304].y;
        precise float _317 = _243 * cbObjMatrix._m0[_290].z;
        precise float _318 = _243 * cbObjMatrix._m0[_297].z;
        precise float _319 = _243 * cbObjMatrix._m0[_304].z;
        precise float _320 = _243 * cbObjMatrix._m0[_290].w;
        precise float _321 = _243 * cbObjMatrix._m0[_297].w;
        precise float _322 = _243 * cbObjMatrix._m0[_304].w;
        precise float _323 = _276 + _311;
        precise float _324 = _277 + _312;
        precise float _325 = _278 + _313;
        precise float _326 = _279 + _314;
        precise float _327 = _280 + _315;
        precise float _328 = _281 + _316;
        precise float _329 = _282 + _317;
        precise float _330 = _283 + _318;
        precise float _331 = _284 + _319;
        precise float _332 = _285 + _320;
        precise float _333 = _286 + _321;
        precise float _334 = _287 + _322;
        uint _337 = (_253 + uint(float(BLENDINDICES.z))) * 3u;
        uint _344 = _337 + 1u;
        uint _351 = _337 + 2u;
        precise float _358 = _244 * cbObjMatrix._m0[_337].x;
        precise float _359 = _244 * cbObjMatrix._m0[_344].x;
        precise float _360 = _244 * cbObjMatrix._m0[_351].x;
        precise float _361 = _244 * cbObjMatrix._m0[_337].y;
        precise float _362 = _244 * cbObjMatrix._m0[_344].y;
        precise float _363 = _244 * cbObjMatrix._m0[_351].y;
        precise float _364 = _244 * cbObjMatrix._m0[_337].z;
        precise float _365 = _244 * cbObjMatrix._m0[_344].z;
        precise float _366 = _244 * cbObjMatrix._m0[_351].z;
        precise float _367 = _244 * cbObjMatrix._m0[_337].w;
        precise float _368 = _244 * cbObjMatrix._m0[_344].w;
        precise float _369 = _244 * cbObjMatrix._m0[_351].w;
        precise float _370 = _323 + _358;
        precise float _371 = _324 + _359;
        precise float _372 = _325 + _360;
        precise float _373 = _326 + _361;
        precise float _374 = _327 + _362;
        precise float _375 = _328 + _363;
        precise float _376 = _329 + _364;
        precise float _377 = _330 + _365;
        precise float _378 = _331 + _366;
        precise float _379 = _332 + _367;
        precise float _380 = _333 + _368;
        precise float _381 = _334 + _369;
        uint _384 = (_253 + uint(float(BLENDINDICES.w))) * 3u;
        uint _391 = _384 + 1u;
        uint _398 = _384 + 2u;
        precise float _405 = _245 * cbObjMatrix._m0[_384].x;
        precise float _406 = _245 * cbObjMatrix._m0[_391].x;
        precise float _407 = _245 * cbObjMatrix._m0[_398].x;
        precise float _408 = _245 * cbObjMatrix._m0[_384].y;
        precise float _409 = _245 * cbObjMatrix._m0[_391].y;
        precise float _410 = _245 * cbObjMatrix._m0[_398].y;
        precise float _411 = _245 * cbObjMatrix._m0[_384].z;
        precise float _412 = _245 * cbObjMatrix._m0[_391].z;
        precise float _413 = _245 * cbObjMatrix._m0[_398].z;
        precise float _414 = _245 * cbObjMatrix._m0[_384].w;
        precise float _415 = _245 * cbObjMatrix._m0[_391].w;
        precise float _416 = _245 * cbObjMatrix._m0[_398].w;
        precise float _417 = _370 + _405;
        precise float _418 = _371 + _406;
        precise float _419 = _372 + _407;
        precise float _420 = _373 + _408;
        precise float _421 = _374 + _409;
        precise float _422 = _375 + _410;
        precise float _423 = _376 + _411;
        precise float _424 = _377 + _412;
        precise float _425 = _378 + _413;
        precise float _426 = _379 + _414;
        precise float _427 = _380 + _415;
        precise float _428 = _381 + _416;
        _447 = _417;
        _448 = _420;
        _449 = _423;
        _450 = _426;
        _451 = _418;
        _452 = _421;
        _453 = _424;
        _454 = _427;
        _455 = _419;
        _456 = _422;
        _457 = _425;
        _458 = _428;
    }
    else
    {
        _447 = cbvModelParam._m0[0u].x;
        _448 = cbvModelParam._m0[0u].y;
        _449 = cbvModelParam._m0[0u].z;
        _450 = cbvModelParam._m0[0u].w;
        _451 = cbvModelParam._m0[1u].x;
        _452 = cbvModelParam._m0[1u].y;
        _453 = cbvModelParam._m0[1u].z;
        _454 = cbvModelParam._m0[1u].w;
        _455 = cbvModelParam._m0[2u].x;
        _456 = cbvModelParam._m0[2u].y;
        _457 = cbvModelParam._m0[2u].z;
        _458 = cbvModelParam._m0[2u].w;
    }
    precise float _459 = POSITION.x * _447;
    precise float _460 = POSITION.y * _448;
    precise float _461 = _460 + _459;
    precise float _462 = POSITION.z * _449;
    precise float _463 = _462 + _461;
    precise float _464 = 1.0 * _450;
    precise float _465 = _464 + _463;
    precise float _466 = POSITION.x * _451;
    precise float _467 = POSITION.y * _452;
    precise float _468 = _467 + _466;
    precise float _469 = POSITION.z * _453;
    precise float _470 = _469 + _468;
    precise float _471 = 1.0 * _454;
    precise float _472 = _471 + _470;
    precise float _473 = POSITION.x * _455;
    precise float _474 = POSITION.y * _456;
    precise float _475 = _474 + _473;
    precise float _476 = POSITION.z * _457;
    precise float _477 = _476 + _475;
    precise float _478 = 1.0 * _458;
    precise float _479 = _478 + _477;
    uint _493 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _78;
    precise float _512 = _465 - cbSceneParam._m0[3u].x;
    precise float _513 = _472 - cbSceneParam._m0[3u].y;
    precise float _514 = _479 - cbSceneParam._m0[3u].z;
    precise float _541 = _512 * cbSceneParam._m0[24u].x;
    precise float _542 = _513 * cbSceneParam._m0[24u].y;
    precise float _543 = _542 + _541;
    precise float _544 = _514 * cbSceneParam._m0[24u].z;
    precise float _545 = _544 + _543;
    precise float _546 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _547 = _546 + _545;
    precise float _548 = _512 * cbSceneParam._m0[25u].x;
    precise float _549 = _513 * cbSceneParam._m0[25u].y;
    precise float _550 = _549 + _548;
    precise float _551 = _514 * cbSceneParam._m0[25u].z;
    precise float _552 = _551 + _550;
    precise float _553 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _554 = _553 + _552;
    precise float _555 = _512 * cbSceneParam._m0[26u].x;
    precise float _556 = _513 * cbSceneParam._m0[26u].y;
    precise float _557 = _556 + _555;
    precise float _558 = _514 * cbSceneParam._m0[26u].z;
    precise float _559 = _558 + _557;
    precise float _560 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _561 = _560 + _559;
    precise float _562 = _512 * cbSceneParam._m0[27u].x;
    precise float _563 = _513 * cbSceneParam._m0[27u].y;
    precise float _564 = _563 + _562;
    precise float _565 = _514 * cbSceneParam._m0[27u].z;
    precise float _566 = _565 + _564;
    precise float _567 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _568 = _567 + _566;
    gl_Position.x = _547;
    gl_Position.y = _554;
    gl_Position.z = _561;
    gl_Position.w = _568;
    POSITION_1.x = _547;
    POSITION_1.y = _554;
    POSITION_1.z = _561;
    POSITION_1.w = _568;
    NORMAL_1.x = fma(_198, _449, fma(_197, _448, _447 * _195));
    NORMAL_1.y = fma(_198, _453, fma(_197, _452, _451 * _195));
    NORMAL_1.z = fma(_198, _457, fma(_197, _456, _455 * _195));
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_493)).x);
    TANGENT_1.x = fma(_207, _449, fma(_206, _448, _447 * _205));
    TANGENT_1.y = fma(_207, _453, fma(_206, _452, _451 * _205));
    TANGENT_1.z = fma(_207, _457, fma(_206, _456, _455 * _205));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = COLOR.x;
    TEXCOORD_1.y = COLOR.y;
    TEXCOORD_1.z = COLOR.z;
    TEXCOORD_1.w = COLOR.w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_4.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_4.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_8 = COLOR_1.x;
}


