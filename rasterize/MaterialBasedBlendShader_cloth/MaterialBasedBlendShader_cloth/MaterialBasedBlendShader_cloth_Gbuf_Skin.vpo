#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[24];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR;
layout(location = 7) in vec4 COLOR_1;
layout(location = 8) in ivec4 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out vec4 TEXCOORD_4;
layout(location = 5) out float TEXCOORD_8;
layout(location = 5, component = 1) out float TEXCOORD_14;

void main()
{
    uint _82 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_14 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _196 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _198 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _199 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _206 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _207 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _208 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _448;
    float _449;
    float _450;
    float _451;
    float _452;
    float _453;
    float _454;
    float _455;
    float _456;
    float _457;
    float _458;
    float _459;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _232 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _82;
        precise float _236 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _241 = isnan(_236) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _236 : max(0.001000000047497451305389404296875, _236));
        precise float _243 = BLENDWEIGHT.x / _241;
        precise float _244 = BLENDWEIGHT.y / _241;
        precise float _245 = BLENDWEIGHT.z / _241;
        precise float _246 = BLENDWEIGHT.w / _241;
        uvec4 _253 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_232)).x * 13u) + 4u]);
        uint _254 = _253.x;
        uint _256 = (_254 + uint(float(BLENDINDICES.x))) * 3u;
        uint _263 = _256 + 1u;
        uint _270 = _256 + 2u;
        precise float _277 = _243 * cbObjMatrix._m0[_256].x;
        precise float _278 = _243 * cbObjMatrix._m0[_263].x;
        precise float _279 = _243 * cbObjMatrix._m0[_270].x;
        precise float _280 = _243 * cbObjMatrix._m0[_256].y;
        precise float _281 = _243 * cbObjMatrix._m0[_263].y;
        precise float _282 = _243 * cbObjMatrix._m0[_270].y;
        precise float _283 = _243 * cbObjMatrix._m0[_256].z;
        precise float _284 = _243 * cbObjMatrix._m0[_263].z;
        precise float _285 = _243 * cbObjMatrix._m0[_270].z;
        precise float _286 = _243 * cbObjMatrix._m0[_256].w;
        precise float _287 = _243 * cbObjMatrix._m0[_263].w;
        precise float _288 = _243 * cbObjMatrix._m0[_270].w;
        uint _291 = (_254 + uint(float(BLENDINDICES.y))) * 3u;
        uint _298 = _291 + 1u;
        uint _305 = _291 + 2u;
        precise float _312 = _244 * cbObjMatrix._m0[_291].x;
        precise float _313 = _244 * cbObjMatrix._m0[_298].x;
        precise float _314 = _244 * cbObjMatrix._m0[_305].x;
        precise float _315 = _244 * cbObjMatrix._m0[_291].y;
        precise float _316 = _244 * cbObjMatrix._m0[_298].y;
        precise float _317 = _244 * cbObjMatrix._m0[_305].y;
        precise float _318 = _244 * cbObjMatrix._m0[_291].z;
        precise float _319 = _244 * cbObjMatrix._m0[_298].z;
        precise float _320 = _244 * cbObjMatrix._m0[_305].z;
        precise float _321 = _244 * cbObjMatrix._m0[_291].w;
        precise float _322 = _244 * cbObjMatrix._m0[_298].w;
        precise float _323 = _244 * cbObjMatrix._m0[_305].w;
        precise float _324 = _277 + _312;
        precise float _325 = _278 + _313;
        precise float _326 = _279 + _314;
        precise float _327 = _280 + _315;
        precise float _328 = _281 + _316;
        precise float _329 = _282 + _317;
        precise float _330 = _283 + _318;
        precise float _331 = _284 + _319;
        precise float _332 = _285 + _320;
        precise float _333 = _286 + _321;
        precise float _334 = _287 + _322;
        precise float _335 = _288 + _323;
        uint _338 = (_254 + uint(float(BLENDINDICES.z))) * 3u;
        uint _345 = _338 + 1u;
        uint _352 = _338 + 2u;
        precise float _359 = _245 * cbObjMatrix._m0[_338].x;
        precise float _360 = _245 * cbObjMatrix._m0[_345].x;
        precise float _361 = _245 * cbObjMatrix._m0[_352].x;
        precise float _362 = _245 * cbObjMatrix._m0[_338].y;
        precise float _363 = _245 * cbObjMatrix._m0[_345].y;
        precise float _364 = _245 * cbObjMatrix._m0[_352].y;
        precise float _365 = _245 * cbObjMatrix._m0[_338].z;
        precise float _366 = _245 * cbObjMatrix._m0[_345].z;
        precise float _367 = _245 * cbObjMatrix._m0[_352].z;
        precise float _368 = _245 * cbObjMatrix._m0[_338].w;
        precise float _369 = _245 * cbObjMatrix._m0[_345].w;
        precise float _370 = _245 * cbObjMatrix._m0[_352].w;
        precise float _371 = _324 + _359;
        precise float _372 = _325 + _360;
        precise float _373 = _326 + _361;
        precise float _374 = _327 + _362;
        precise float _375 = _328 + _363;
        precise float _376 = _329 + _364;
        precise float _377 = _330 + _365;
        precise float _378 = _331 + _366;
        precise float _379 = _332 + _367;
        precise float _380 = _333 + _368;
        precise float _381 = _334 + _369;
        precise float _382 = _335 + _370;
        uint _385 = (_254 + uint(float(BLENDINDICES.w))) * 3u;
        uint _392 = _385 + 1u;
        uint _399 = _385 + 2u;
        precise float _406 = _246 * cbObjMatrix._m0[_385].x;
        precise float _407 = _246 * cbObjMatrix._m0[_392].x;
        precise float _408 = _246 * cbObjMatrix._m0[_399].x;
        precise float _409 = _246 * cbObjMatrix._m0[_385].y;
        precise float _410 = _246 * cbObjMatrix._m0[_392].y;
        precise float _411 = _246 * cbObjMatrix._m0[_399].y;
        precise float _412 = _246 * cbObjMatrix._m0[_385].z;
        precise float _413 = _246 * cbObjMatrix._m0[_392].z;
        precise float _414 = _246 * cbObjMatrix._m0[_399].z;
        precise float _415 = _246 * cbObjMatrix._m0[_385].w;
        precise float _416 = _246 * cbObjMatrix._m0[_392].w;
        precise float _417 = _246 * cbObjMatrix._m0[_399].w;
        precise float _418 = _371 + _406;
        precise float _419 = _372 + _407;
        precise float _420 = _373 + _408;
        precise float _421 = _374 + _409;
        precise float _422 = _375 + _410;
        precise float _423 = _376 + _411;
        precise float _424 = _377 + _412;
        precise float _425 = _378 + _413;
        precise float _426 = _379 + _414;
        precise float _427 = _380 + _415;
        precise float _428 = _381 + _416;
        precise float _429 = _382 + _417;
        _448 = _418;
        _449 = _421;
        _450 = _424;
        _451 = _427;
        _452 = _419;
        _453 = _422;
        _454 = _425;
        _455 = _428;
        _456 = _420;
        _457 = _423;
        _458 = _426;
        _459 = _429;
    }
    else
    {
        _448 = cbvModelParam._m0[0u].x;
        _449 = cbvModelParam._m0[0u].y;
        _450 = cbvModelParam._m0[0u].z;
        _451 = cbvModelParam._m0[0u].w;
        _452 = cbvModelParam._m0[1u].x;
        _453 = cbvModelParam._m0[1u].y;
        _454 = cbvModelParam._m0[1u].z;
        _455 = cbvModelParam._m0[1u].w;
        _456 = cbvModelParam._m0[2u].x;
        _457 = cbvModelParam._m0[2u].y;
        _458 = cbvModelParam._m0[2u].z;
        _459 = cbvModelParam._m0[2u].w;
    }
    precise float _460 = POSITION.x * _448;
    precise float _461 = POSITION.y * _449;
    precise float _462 = _461 + _460;
    precise float _463 = POSITION.z * _450;
    precise float _464 = _463 + _462;
    precise float _465 = 1.0 * _451;
    precise float _466 = _465 + _464;
    precise float _467 = POSITION.x * _452;
    precise float _468 = POSITION.y * _453;
    precise float _469 = _468 + _467;
    precise float _470 = POSITION.z * _454;
    precise float _471 = _470 + _469;
    precise float _472 = 1.0 * _455;
    precise float _473 = _472 + _471;
    precise float _474 = POSITION.x * _456;
    precise float _475 = POSITION.y * _457;
    precise float _476 = _475 + _474;
    precise float _477 = POSITION.z * _458;
    precise float _478 = _477 + _476;
    precise float _479 = 1.0 * _459;
    precise float _480 = _479 + _478;
    float _486 = cbSceneParam._m0[3u].x - _466;
    float _487 = cbSceneParam._m0[3u].y - _473;
    float _488 = cbSceneParam._m0[3u].z - _480;
    uint _508 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _82;
    uvec4 _510 = texelFetch(g_InstanceIndexBuffer, int(_508));
    uint _511 = _510.x;
    precise float _522 = _466 - cbSceneParam._m0[3u].x;
    precise float _523 = _473 - cbSceneParam._m0[3u].y;
    precise float _524 = _480 - cbSceneParam._m0[3u].z;
    precise float _551 = _522 * cbSceneParam._m0[24u].x;
    precise float _552 = _523 * cbSceneParam._m0[24u].y;
    precise float _553 = _552 + _551;
    precise float _554 = _524 * cbSceneParam._m0[24u].z;
    precise float _555 = _554 + _553;
    precise float _556 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _557 = _556 + _555;
    precise float _558 = _522 * cbSceneParam._m0[25u].x;
    precise float _559 = _523 * cbSceneParam._m0[25u].y;
    precise float _560 = _559 + _558;
    precise float _561 = _524 * cbSceneParam._m0[25u].z;
    precise float _562 = _561 + _560;
    precise float _563 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _564 = _563 + _562;
    precise float _565 = _522 * cbSceneParam._m0[26u].x;
    precise float _566 = _523 * cbSceneParam._m0[26u].y;
    precise float _567 = _566 + _565;
    precise float _568 = _524 * cbSceneParam._m0[26u].z;
    precise float _569 = _568 + _567;
    precise float _570 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _571 = _570 + _569;
    precise float _572 = _522 * cbSceneParam._m0[27u].x;
    precise float _573 = _523 * cbSceneParam._m0[27u].y;
    precise float _574 = _573 + _572;
    precise float _575 = _524 * cbSceneParam._m0[27u].z;
    precise float _576 = _575 + _574;
    precise float _577 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _578 = _577 + _576;
    gl_Position.x = _557;
    gl_Position.y = _564;
    gl_Position.z = _571;
    gl_Position.w = _578;
    NORMAL_1.x = fma(_199, _450, fma(_198, _449, _448 * _196));
    NORMAL_1.y = fma(_199, _454, fma(_198, _453, _452 * _196));
    NORMAL_1.z = fma(_199, _458, fma(_198, _457, _456 * _196));
    NORMAL_1.w = float(_511);
    TANGENT_1.x = fma(_208, _450, fma(_207, _449, _448 * _206));
    TANGENT_1.y = fma(_208, _454, fma(_207, _453, _452 * _206));
    TANGENT_1.z = fma(_208, _458, fma(_207, _457, _456 * _206));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = COLOR.x;
    TEXCOORD_1.y = COLOR.y;
    TEXCOORD_1.z = COLOR.z;
    TEXCOORD_1.w = COLOR.w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_4.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_4.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_8 = COLOR_1.x;
    TEXCOORD_14 = sqrt(((_486 * _486) + (_487 * _487)) + (_488 * _488));
    gl_ClipDistance[0u] = dot(vec4(_557, _564, _571, _578), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_557, _564, _571, _578), vec4(cbInstanceData._m0[(_511 * 13u) + 3u]));
}


