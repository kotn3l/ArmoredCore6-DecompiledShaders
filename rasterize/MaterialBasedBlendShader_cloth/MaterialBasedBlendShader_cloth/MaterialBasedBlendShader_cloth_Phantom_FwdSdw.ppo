#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[9];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[24];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_5;
layout(set = 0, binding = 11) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_6;
layout(set = 0, binding = 12) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_7;
layout(set = 0, binding = 13) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_8;
layout(set = 0, binding = 14) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_0;
layout(set = 0, binding = 3) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_11;
layout(set = 0, binding = 5) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_15;
layout(set = 0, binding = 6) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_16;
layout(set = 0, binding = 7) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_3;
layout(set = 0, binding = 9) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 6) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1306;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _217 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _218 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _219 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _225 = inversesqrt(dot(vec3(_217, _218, _219), vec3(_217, _218, _219)));
    float _232 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _233 = _232 * NORMAL.x;
    float _234 = _232 * NORMAL.y;
    float _235 = _232 * NORMAL.z;
    float _239 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _247;
    float _248;
    float _249;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _247 = (-0.0) - _233;
        _248 = (-0.0) - _234;
        _249 = (-0.0) - _235;
    }
    else
    {
        _247 = _233;
        _248 = _234;
        _249 = _235;
    }
    vec4 _279 = texture(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[4u].w));
    vec4 _307 = texture(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[13u].w));
    vec4 _333 = texture(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[0u].w));
    float _338 = _333.x * cbMatDynParam._m0[17u].x;
    float _339 = _333.y * cbMatDynParam._m0[17u].y;
    float _340 = _333.z * cbMatDynParam._m0[17u].z;
    vec4 _359 = texture(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[7u].w));
    vec4 _378 = texture(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[2u].w));
    float _389 = (cbMatDynParam._m0[21u].y * TEXCOORD.w) + 1.0;
    float _391 = (0.5 - ((cbMatDynParam._m0[21u].x * 0.5) * (_378.x + 0.00999999977648258209228515625))) * _389;
    float _3998 = isnan(0.0) ? _391 : (isnan(_391) ? 0.0 : max(_391, 0.0));
    float _392 = isnan(1.0) ? _3998 : (isnan(_3998) ? 1.0 : min(_3998, 1.0));
    float _399 = (_392 * ((_359.x * cbMatDynParam._m0[18u].x) - _338)) + _338;
    float _400 = (_392 * ((_359.y * cbMatDynParam._m0[18u].y) - _339)) + _339;
    float _401 = (_392 * ((_359.z * cbMatDynParam._m0[18u].z) - _340)) + _340;
    float _406 = (0.5 - ((cbMatDynParam._m0[22u].z * 0.5) * (_378.y + 0.00999999977648258209228515625))) * _389;
    float _4009 = isnan(0.0) ? _406 : (isnan(_406) ? 0.0 : max(_406, 0.0));
    float _407 = isnan(1.0) ? _4009 : (isnan(_4009) ? 1.0 : min(_4009, 1.0));
    float _414 = (((_307.x * cbMatDynParam._m0[19u].x) - _399) * _407) + _399;
    float _415 = (((_307.y * cbMatDynParam._m0[19u].y) - _400) * _407) + _400;
    float _416 = (((_307.z * cbMatDynParam._m0[19u].z) - _401) * _407) + _401;
    float _421 = (0.5 - ((cbMatDynParam._m0[22u].w * 0.5) * (_378.z + 0.00999999977648258209228515625))) * _389;
    float _4020 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
    float _422 = isnan(1.0) ? _4020 : (isnan(_4020) ? 1.0 : min(_4020, 1.0));
    float _429 = (((_279.x * cbMatDynParam._m0[20u].x) - _414) * _422) + _414;
    float _430 = (((_279.y * cbMatDynParam._m0[20u].y) - _415) * _422) + _415;
    float _431 = (((_279.z * cbMatDynParam._m0[20u].z) - _416) * _422) + _416;
    vec4 _443 = texture(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_4, SS_SpecularMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[9u].w));
    float _445 = _443.x;
    float _446 = _443.y;
    float _447 = _443.z;
    vec4 _460 = texture(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_9, SS_SpecularMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[14u].w));
    float _471 = ((_460.x - _445) * _392) + _445;
    float _472 = ((_460.y - _446) * _392) + _446;
    float _473 = ((_460.z - _447) * _392) + _447;
    vec4 _486 = texture(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_3, SS_SpecularMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[8u].w));
    float _497 = ((_486.x - _471) * _407) + _471;
    float _498 = ((_486.y - _472) * _407) + _472;
    float _499 = ((_486.z - _473) * _407) + _473;
    vec4 _511 = texture(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_10, SS_SpecularMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[3u].w));
    float _522 = ((_511.x - _497) * _422) + _497;
    float _523 = ((_511.y - _498) * _422) + _498;
    float _524 = ((_511.z - _499) * _422) + _499;
    vec4 _540 = texture(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[6u].w));
    vec4 _559 = texture(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[5u].w));
    vec4 _578 = texture(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[10u].w));
    float _580 = _578.x;
    float _581 = _578.y;
    float _583 = _578.z * cbMatDynParam._m0[22u].x;
    vec4 _597 = texture(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[11u].w));
    float _605 = (((_597.z * cbMatDynParam._m0[21u].w) - _583) * _392) + _583;
    float _608 = (((_559.z * cbMatDynParam._m0[21u].z) - _605) * _407) + _605;
    float _611 = (((_540.z * cbMatDynParam._m0[23u].x) - _608) * _422) + _608;
    vec4 _624 = texture(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[12u].w));
    float _638 = (_392 * (_597.x - _580)) + _580;
    float _639 = (_392 * (_597.y - _581)) + _581;
    float _644 = ((_559.x - _638) * _407) + _638;
    float _645 = ((_559.y - _639) * _407) + _639;
    float _654 = ((((_540.x - _644) * _422) + _644) * 2.0) + (-1.0);
    float _655 = ((((_540.y - _645) * _422) + _645) * 2.0) + (-1.0);
    float _656 = dot(vec2(_654, _655), vec2(_654, _655));
    float _4031 = isnan(0.0) ? _656 : (isnan(_656) ? 0.0 : max(_656, 0.0));
    float _661 = sqrt(1.0 - (isnan(1.0) ? _4031 : (isnan(_4031) ? 1.0 : min(_4031, 1.0))));
    float _665 = _654 + (cbMatDynParam._m0[22u].y * ((_624.x * 2.0) + (-1.0)));
    float _666 = _655 + (cbMatDynParam._m0[22u].y * ((_624.y * 2.0) + (-1.0)));
    float _669 = fma(_661, _247, fma(_666, _239 * TANGENT.x, (_225 * _217) * _665));
    float _672 = fma(_661, _248, fma(_666, _239 * TANGENT.y, (_225 * _218) * _665));
    float _675 = fma(_661, _249, fma(_666, _239 * TANGENT.z, (_225 * _219) * _665));
    float _679 = inversesqrt(dot(vec3(_669, _672, _675), vec3(_669, _672, _675)));
    float _680 = _679 * _669;
    float _681 = _679 * _672;
    float _682 = _679 * _675;
    float _4042 = isnan(0.0) ? _429 : (isnan(_429) ? 0.0 : max(_429, 0.0));
    float _4053 = isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : max(_430, 0.0));
    float _4064 = isnan(0.0) ? _431 : (isnan(_431) ? 0.0 : max(_431, 0.0));
    float _4075 = isnan(0.0) ? _522 : (isnan(_522) ? 0.0 : max(_522, 0.0));
    float _686 = isnan(1.0) ? _4075 : (isnan(_4075) ? 1.0 : min(_4075, 1.0));
    float _4086 = isnan(0.0) ? _523 : (isnan(_523) ? 0.0 : max(_523, 0.0));
    float _687 = isnan(1.0) ? _4086 : (isnan(_4086) ? 1.0 : min(_4086, 1.0));
    float _4097 = isnan(0.0) ? _524 : (isnan(_524) ? 0.0 : max(_524, 0.0));
    float _688 = isnan(1.0) ? _4097 : (isnan(_4097) ? 1.0 : min(_4097, 1.0));
    float _4108 = isnan(0.0) ? _611 : (isnan(_611) ? 0.0 : max(_611, 0.0));
    float _689 = isnan(1.0) ? _4108 : (isnan(_4108) ? 1.0 : min(_4108, 1.0));
    float _705 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _745 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _755 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _745);
    float _756 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _745);
    float _757 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _745);
    float _761 = inversesqrt(dot(vec3(_755, _756, _757), vec3(_755, _756, _757)));
    float _762 = _755 * _761;
    float _763 = _756 * _761;
    float _764 = _757 * _761;
    float _770 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _771 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _773 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD_4.z, TEXCOORD_4.w));
    float _775 = _773.w;
    float _793 = fma(_682, cbSceneParam._m0[5u].z, fma(_681, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _680));
    float _796 = fma(_682, cbSceneParam._m0[6u].z, fma(_681, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _680));
    float _799 = fma(_682, cbSceneParam._m0[7u].z, fma(_681, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _680));
    vec4 _801 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.z, TEXCOORD_4.w));
    float _803 = _801.x;
    float _805 = _801.w;
    float _806 = _803 * _803;
    float _826 = (((_806 - _686) + (_805 * _686)) * cbMtdParam._m0[3u].x) + _686;
    float _827 = (((_806 - _687) + (_805 * _687)) * cbMtdParam._m0[3u].x) + _687;
    float _828 = (((_806 - _688) + (_805 * _688)) * cbMtdParam._m0[3u].x) + _688;
    float _829 = (((_801.y - _689) + (_805 * _689)) * cbMtdParam._m0[3u].x) + _689;
    vec4 _830 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD_4.z, TEXCOORD_4.w));
    float _846 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(_826, _827, _828), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _830.z;
    float _855 = (((cbMatDynParam._m0[16u].x - _829) * cbMatDynParam._m0[16u].z) * _846) + _829;
    uint _868 = uint(roundEven(NORMAL.w)) * 13u;
    uint _870 = (_868 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _876 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4042 : (isnan(_4042) ? 1.0 : min(_4042, 1.0)))) * cbInstanceData._m0[_870].x;
    float _877 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4053 : (isnan(_4053) ? 1.0 : min(_4053, 1.0)))) * cbInstanceData._m0[_870].y;
    float _878 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4064 : (isnan(_4064) ? 1.0 : min(_4064, 1.0)))) * cbInstanceData._m0[_870].z;
    float _4119 = isnan(0.0) ? _876 : (isnan(_876) ? 0.0 : max(_876, 0.0));
    float _879 = isnan(1.0) ? _4119 : (isnan(_4119) ? 1.0 : min(_4119, 1.0));
    float _4130 = isnan(0.0) ? _877 : (isnan(_877) ? 0.0 : max(_877, 0.0));
    float _880 = isnan(1.0) ? _4130 : (isnan(_4130) ? 1.0 : min(_4130, 1.0));
    float _4141 = isnan(0.0) ? _878 : (isnan(_878) ? 0.0 : max(_878, 0.0));
    float _881 = isnan(1.0) ? _4141 : (isnan(_4141) ? 1.0 : min(_4141, 1.0));
    vec4 _888 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD_4.z, TEXCOORD_4.w));
    float _902 = ((((_879 * _775) - _879) + _888.x) * cbMtdParam._m0[3u].x) + _879;
    float _903 = ((((_880 * _775) - _880) + _888.y) * cbMtdParam._m0[3u].x) + _880;
    float _904 = ((((_881 * _775) - _881) + _888.z) * cbMtdParam._m0[3u].x) + _881;
    float _908 = cbMatDynParam._m0[13u].w * _846;
    vec4 _929 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _770, cbSceneParam._m0[86u].y * _771));
    float _932 = _929.x * TEXCOORD_8;
    float _933 = dot(vec3(_680, _681, _682), vec3(_762, _763, _764));
    float _936 = _933 * 2.0;
    float _940 = (_936 * _680) - _762;
    float _941 = (_936 * _681) - _763;
    float _942 = (_936 * _682) - _764;
    float _946 = abs(dot(vec3(_762, _763, _764), vec3(_680, _681, _682)));
    float _4152 = isnan(0.0) ? _946 : (isnan(_946) ? 0.0 : max(_946, 0.0));
    float _948 = sqrt(_855);
    float _961 = exp2((_948 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4152 : (isnan(_4152) ? 1.0 : min(_4152, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_948 * 3.0));
    float _967 = (1.0 - _961) * ((_948 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _968 = _961 * _948;
    float _996 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1000 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1004 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1305;
    float _1307;
    float _1308;
    float _1309;
    float _1310;
    float _1311;
    float _1312;
    float _1313;
    float _1314;
    float _1315;
    float _1316;
    float _1317;
    float _1318;
    float _1319;
    float _1320;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1031 = fma(_1004, cbModelParam._m0[26u].z, fma(_1000, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _996));
        float _1035 = fma(_1004, cbModelParam._m0[27u].z, fma(_1000, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _996));
        float _1039 = fma(_1004, cbModelParam._m0[28u].z, fma(_1000, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _996));
        float _1063 = _996 + _680;
        float _1064 = _1000 + _681;
        float _1065 = _1004 + _682;
        float _1075 = fma(_1065, cbModelParam._m0[26u].z, fma(_1064, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1063)) - _1031;
        float _1076 = fma(_1065, cbModelParam._m0[27u].z, fma(_1064, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1063)) - _1035;
        float _1077 = fma(_1065, cbModelParam._m0[28u].z, fma(_1064, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1063)) - _1039;
        float _1081 = inversesqrt(dot(vec3(_1075, _1076, _1077), vec3(_1075, _1076, _1077)));
        float _1094 = ((_1081 * _1075) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1031 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1095 = ((_1081 * _1076) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1035 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1096 = ((_1081 * _1077) / cbModelParam._m0[34u].z) + ((((((_1039 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1099 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1094, _1095, _1096), 0.0);
        vec4 _1106 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1094, _1095, _1096), 0.0);
        vec4 _1113 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1094, _1095, _1096), 0.0);
        vec4 _1120 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1094, _1095, _1096), 0.0);
        float _1133 = exp2((_1099.w + (-0.5)) * 20.0) * 2.0;
        float _1134 = _1133 * (_1099.x + (-0.5));
        float _1135 = _1133 * (_1099.y + (-0.5));
        float _1136 = _1133 * (_1099.z + (-0.5));
        float _1143 = exp2((_1106.w + (-0.5)) * 20.0) * 2.0;
        float _1144 = _1143 * (_1106.x + (-0.5));
        float _1145 = _1143 * (_1106.y + (-0.5));
        float _1146 = _1143 * (_1106.z + (-0.5));
        float _1153 = exp2((_1113.w + (-0.5)) * 20.0) * 2.0;
        float _1154 = _1153 * (_1113.x + (-0.5));
        float _1155 = _1153 * (_1113.y + (-0.5));
        float _1156 = _1153 * (_1113.z + (-0.5));
        float _1163 = exp2((_1120.w + (-0.5)) * 20.0) * 2.0;
        float _1164 = _1163 * (_1120.x + (-0.5));
        float _1165 = _1163 * (_1120.y + (-0.5));
        float _1166 = _1163 * (_1120.z + (-0.5));
        float _1167 = isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0));
        float _1168 = isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0));
        float _1169 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
        float _1170 = _1134 * 0.5;
        float _1171 = _1144 * 0.5;
        float _1172 = _1154 * 0.5;
        float _1173 = dot(vec3(_1170, _1171, _1172), vec3(_1170, _1171, _1172));
        float _1178 = (_1173 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1173);
        float _1187 = (dot(vec3(_680, _681, _682), vec3(_1178 * _1170, _1178 * _1171, _1178 * _1172)) + 1.0) * 0.5;
        float _4178 = isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0));
        float _1197 = sqrt(((_1171 * _1171) + (_1170 * _1170)) + (_1172 * _1172)) / (_1167 + 9.9999997473787516355514526367188e-06);
        float _4189 = isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0));
        float _1198 = isnan(1.0) ? _4189 : (isnan(_4189) ? 1.0 : min(_4189, 1.0));
        float _1199 = _1198 * 2.0;
        float _1203 = (1.0 - _1198) / (_1198 + 1.0);
        float _4200 = isnan(0.0) ? _1203 : (isnan(_1203) ? 0.0 : max(_1203, 0.0));
        float _1204 = isnan(1.0) ? _4200 : (isnan(_4200) ? 1.0 : min(_4200, 1.0));
        float _1213 = ((((1.0 - _1204) * (_1199 + 2.0)) * exp2(log2(isnan(1.0) ? _4178 : (isnan(_4178) ? 1.0 : min(_4178, 1.0))) * (_1199 + 1.0))) + _1204) * _1167;
        float _1214 = _1135 * 0.5;
        float _1215 = _1145 * 0.5;
        float _1216 = _1155 * 0.5;
        float _1217 = dot(vec3(_1214, _1215, _1216), vec3(_1214, _1215, _1216));
        float _1222 = (_1217 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1217);
        float _1230 = (dot(vec3(_680, _681, _682), vec3(_1222 * _1214, _1222 * _1215, _1222 * _1216)) + 1.0) * 0.5;
        float _4211 = isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0));
        float _1239 = sqrt(((_1215 * _1215) + (_1214 * _1214)) + (_1216 * _1216)) / (_1168 + 9.9999997473787516355514526367188e-06);
        float _4222 = isnan(0.0) ? _1239 : (isnan(_1239) ? 0.0 : max(_1239, 0.0));
        float _1240 = isnan(1.0) ? _4222 : (isnan(_4222) ? 1.0 : min(_4222, 1.0));
        float _1241 = _1240 * 2.0;
        float _1245 = (1.0 - _1240) / (_1240 + 1.0);
        float _4233 = isnan(0.0) ? _1245 : (isnan(_1245) ? 0.0 : max(_1245, 0.0));
        float _1246 = isnan(1.0) ? _4233 : (isnan(_4233) ? 1.0 : min(_4233, 1.0));
        float _1255 = ((((1.0 - _1246) * (_1241 + 2.0)) * exp2(log2(isnan(1.0) ? _4211 : (isnan(_4211) ? 1.0 : min(_4211, 1.0))) * (_1241 + 1.0))) + _1246) * _1168;
        float _1256 = _1136 * 0.5;
        float _1257 = _1146 * 0.5;
        float _1258 = _1156 * 0.5;
        float _1259 = dot(vec3(_1256, _1257, _1258), vec3(_1256, _1257, _1258));
        float _1264 = (_1259 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1259);
        float _1272 = (dot(vec3(_680, _681, _682), vec3(_1264 * _1256, _1264 * _1257, _1264 * _1258)) + 1.0) * 0.5;
        float _4244 = isnan(0.0) ? _1272 : (isnan(_1272) ? 0.0 : max(_1272, 0.0));
        float _1281 = sqrt(((_1257 * _1257) + (_1256 * _1256)) + (_1258 * _1258)) / (_1169 + 9.9999997473787516355514526367188e-06);
        float _4255 = isnan(0.0) ? _1281 : (isnan(_1281) ? 0.0 : max(_1281, 0.0));
        float _1282 = isnan(1.0) ? _4255 : (isnan(_4255) ? 1.0 : min(_4255, 1.0));
        float _1283 = _1282 * 2.0;
        float _1287 = (1.0 - _1282) / (_1282 + 1.0);
        float _4266 = isnan(0.0) ? _1287 : (isnan(_1287) ? 0.0 : max(_1287, 0.0));
        float _1288 = isnan(1.0) ? _4266 : (isnan(_4266) ? 1.0 : min(_4266, 1.0));
        float _1297 = ((((1.0 - _1288) * (_1283 + 2.0)) * exp2(log2(isnan(1.0) ? _4244 : (isnan(_4244) ? 1.0 : min(_4244, 1.0))) * (_1283 + 1.0))) + _1288) * _1169;
        _1305 = _1136;
        _1307 = _1135;
        _1308 = _1134;
        _1309 = _1146;
        _1310 = _1145;
        _1311 = _1144;
        _1312 = _1156;
        _1313 = _1155;
        _1314 = _1154;
        _1315 = _1169;
        _1316 = _1168;
        _1317 = _1167;
        _1318 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1213 : (isnan(_1213) ? 0.0 : max(_1213, 0.0)));
        _1319 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1255 : (isnan(_1255) ? 0.0 : max(_1255, 0.0)));
        _1320 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1297 : (isnan(_1297) ? 0.0 : max(_1297, 0.0)));
    }
    else
    {
        _1305 = _1306;
        _1307 = _1306;
        _1308 = _1306;
        _1309 = _1306;
        _1310 = _1306;
        _1311 = _1306;
        _1312 = _1306;
        _1313 = _1306;
        _1314 = _1306;
        _1315 = _1306;
        _1316 = _1306;
        _1317 = _1306;
        _1318 = 0.0;
        _1319 = 0.0;
        _1320 = 0.0;
    }
    float _1615;
    float _1616;
    float _1617;
    float _1618;
    float _1619;
    float _1620;
    float _1621;
    float _1622;
    float _1623;
    float _1624;
    float _1625;
    float _1626;
    float _1627;
    float _1628;
    float _1629;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1346 = fma(_1004, cbModelParam._m0[30u].z, fma(_1000, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _996));
        float _1350 = fma(_1004, cbModelParam._m0[31u].z, fma(_1000, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _996));
        float _1354 = fma(_1004, cbModelParam._m0[32u].z, fma(_1000, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _996));
        float _1377 = _996 + _680;
        float _1378 = _1000 + _681;
        float _1379 = _1004 + _682;
        float _1389 = fma(_1379, cbModelParam._m0[30u].z, fma(_1378, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1377)) - _1346;
        float _1390 = fma(_1379, cbModelParam._m0[31u].z, fma(_1378, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1377)) - _1350;
        float _1391 = fma(_1379, cbModelParam._m0[32u].z, fma(_1378, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1377)) - _1354;
        float _1395 = inversesqrt(dot(vec3(_1389, _1390, _1391), vec3(_1389, _1390, _1391)));
        float _1408 = ((_1395 * _1389) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1346 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1409 = ((_1395 * _1390) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1350 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1410 = ((_1395 * _1391) / cbModelParam._m0[35u].z) + ((((((_1354 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1412 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1408, _1409, _1410), 0.0);
        vec4 _1419 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1408, _1409, _1410), 0.0);
        vec4 _1426 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1408, _1409, _1410), 0.0);
        vec4 _1433 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1408, _1409, _1410), 0.0);
        float _1445 = exp2((_1412.w + (-0.5)) * 20.0) * 2.0;
        float _1446 = _1445 * (_1412.x + (-0.5));
        float _1447 = _1445 * (_1412.y + (-0.5));
        float _1448 = _1445 * (_1412.z + (-0.5));
        float _1455 = exp2((_1419.w + (-0.5)) * 20.0) * 2.0;
        float _1456 = _1455 * (_1419.x + (-0.5));
        float _1457 = _1455 * (_1419.y + (-0.5));
        float _1458 = _1455 * (_1419.z + (-0.5));
        float _1465 = exp2((_1426.w + (-0.5)) * 20.0) * 2.0;
        float _1466 = _1465 * (_1426.x + (-0.5));
        float _1467 = _1465 * (_1426.y + (-0.5));
        float _1468 = _1465 * (_1426.z + (-0.5));
        float _1475 = exp2((_1433.w + (-0.5)) * 20.0) * 2.0;
        float _1476 = _1475 * (_1433.x + (-0.5));
        float _1477 = _1475 * (_1433.y + (-0.5));
        float _1478 = _1475 * (_1433.z + (-0.5));
        float _1479 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
        float _1480 = isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0));
        float _1481 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
        float _1482 = _1446 * 0.5;
        float _1483 = _1456 * 0.5;
        float _1484 = _1466 * 0.5;
        float _1485 = dot(vec3(_1482, _1483, _1484), vec3(_1482, _1483, _1484));
        float _1490 = (_1485 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1485);
        float _1498 = (dot(vec3(_680, _681, _682), vec3(_1490 * _1482, _1490 * _1483, _1490 * _1484)) + 1.0) * 0.5;
        float _4307 = isnan(0.0) ? _1498 : (isnan(_1498) ? 0.0 : max(_1498, 0.0));
        float _1507 = sqrt(((_1483 * _1483) + (_1482 * _1482)) + (_1484 * _1484)) / (_1479 + 9.9999997473787516355514526367188e-06);
        float _4318 = isnan(0.0) ? _1507 : (isnan(_1507) ? 0.0 : max(_1507, 0.0));
        float _1508 = isnan(1.0) ? _4318 : (isnan(_4318) ? 1.0 : min(_4318, 1.0));
        float _1509 = _1508 * 2.0;
        float _1513 = (1.0 - _1508) / (_1508 + 1.0);
        float _4329 = isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0));
        float _1514 = isnan(1.0) ? _4329 : (isnan(_4329) ? 1.0 : min(_4329, 1.0));
        float _1523 = ((((1.0 - _1514) * (_1509 + 2.0)) * exp2(log2(isnan(1.0) ? _4307 : (isnan(_4307) ? 1.0 : min(_4307, 1.0))) * (_1509 + 1.0))) + _1514) * _1479;
        float _1524 = _1447 * 0.5;
        float _1525 = _1457 * 0.5;
        float _1526 = _1467 * 0.5;
        float _1527 = dot(vec3(_1524, _1525, _1526), vec3(_1524, _1525, _1526));
        float _1532 = (_1527 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1527);
        float _1540 = (dot(vec3(_680, _681, _682), vec3(_1532 * _1524, _1532 * _1525, _1532 * _1526)) + 1.0) * 0.5;
        float _4340 = isnan(0.0) ? _1540 : (isnan(_1540) ? 0.0 : max(_1540, 0.0));
        float _1549 = sqrt(((_1525 * _1525) + (_1524 * _1524)) + (_1526 * _1526)) / (_1480 + 9.9999997473787516355514526367188e-06);
        float _4351 = isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0));
        float _1550 = isnan(1.0) ? _4351 : (isnan(_4351) ? 1.0 : min(_4351, 1.0));
        float _1551 = _1550 * 2.0;
        float _1555 = (1.0 - _1550) / (_1550 + 1.0);
        float _4362 = isnan(0.0) ? _1555 : (isnan(_1555) ? 0.0 : max(_1555, 0.0));
        float _1556 = isnan(1.0) ? _4362 : (isnan(_4362) ? 1.0 : min(_4362, 1.0));
        float _1565 = ((((1.0 - _1556) * (_1551 + 2.0)) * exp2(log2(isnan(1.0) ? _4340 : (isnan(_4340) ? 1.0 : min(_4340, 1.0))) * (_1551 + 1.0))) + _1556) * _1480;
        float _1566 = _1448 * 0.5;
        float _1567 = _1458 * 0.5;
        float _1568 = _1468 * 0.5;
        float _1569 = dot(vec3(_1566, _1567, _1568), vec3(_1566, _1567, _1568));
        float _1574 = (_1569 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1569);
        float _1582 = (dot(vec3(_680, _681, _682), vec3(_1574 * _1566, _1574 * _1567, _1574 * _1568)) + 1.0) * 0.5;
        float _4373 = isnan(0.0) ? _1582 : (isnan(_1582) ? 0.0 : max(_1582, 0.0));
        float _1591 = sqrt(((_1567 * _1567) + (_1566 * _1566)) + (_1568 * _1568)) / (_1481 + 9.9999997473787516355514526367188e-06);
        float _4384 = isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0));
        float _1592 = isnan(1.0) ? _4384 : (isnan(_4384) ? 1.0 : min(_4384, 1.0));
        float _1593 = _1592 * 2.0;
        float _1597 = (1.0 - _1592) / (_1592 + 1.0);
        float _4395 = isnan(0.0) ? _1597 : (isnan(_1597) ? 0.0 : max(_1597, 0.0));
        float _1598 = isnan(1.0) ? _4395 : (isnan(_4395) ? 1.0 : min(_4395, 1.0));
        float _1607 = ((((1.0 - _1598) * (_1593 + 2.0)) * exp2(log2(isnan(1.0) ? _4373 : (isnan(_4373) ? 1.0 : min(_4373, 1.0))) * (_1593 + 1.0))) + _1598) * _1481;
        _1615 = _1448;
        _1616 = _1447;
        _1617 = _1446;
        _1618 = _1458;
        _1619 = _1457;
        _1620 = _1456;
        _1621 = _1468;
        _1622 = _1467;
        _1623 = _1466;
        _1624 = _1481;
        _1625 = _1480;
        _1626 = _1479;
        _1627 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0)));
        _1628 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0)));
        _1629 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0)));
    }
    else
    {
        _1615 = _1306;
        _1616 = _1306;
        _1617 = _1306;
        _1618 = _1306;
        _1619 = _1306;
        _1620 = _1306;
        _1621 = _1306;
        _1622 = _1306;
        _1623 = _1306;
        _1624 = _1306;
        _1625 = _1306;
        _1626 = _1306;
        _1627 = 0.0;
        _1628 = 0.0;
        _1629 = 0.0;
    }
    float _1639 = (cbModelParam._m0[1u].x * (_1627 - _1318)) + _1318;
    float _1640 = (cbModelParam._m0[1u].x * (_1628 - _1319)) + _1319;
    float _1641 = (cbModelParam._m0[1u].x * (_1629 - _1320)) + _1320;
    float _1662 = fma(_1641, cbSceneParam._m0[89u].z, fma(_1640, cbSceneParam._m0[89u].y, _1639 * cbSceneParam._m0[89u].x));
    float _1665 = fma(_1641, cbSceneParam._m0[90u].z, fma(_1640, cbSceneParam._m0[90u].y, _1639 * cbSceneParam._m0[90u].x));
    float _1668 = fma(_1641, cbSceneParam._m0[91u].z, fma(_1640, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1639));
    float _1683 = _940 * 0.5;
    float _1684 = _941 * 0.5;
    float _1685 = _942 * 0.5;
    float _1686 = dot(vec4(_1683, _1684, _1685, 1.0), vec4(_1617, _1620, _1623, _1626));
    float _1689 = dot(vec4(_1683, _1684, _1685, 1.0), vec4(_1616, _1619, _1622, _1625));
    float _1692 = dot(vec4(_1683, _1684, _1685, 1.0), vec4(_1615, _1618, _1621, _1624));
    float _1723;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1699 = dot(vec4(_1683, _1684, _1685, 1.0), vec4(_1305, _1309, _1312, _1315));
        float _1703 = dot(vec4(_1683, _1684, _1685, 1.0), vec4(_1307, _1310, _1313, _1316));
        float _1707 = dot(vec4(_1683, _1684, _1685, 1.0), vec4(_1308, _1311, _1314, _1317));
        float _1714 = dot(vec4(cbModelParam._m0[39u]), vec4(_1683, _1684, _1685, 1.0));
        _1723 = dot(vec3(isnan(0.0) ? _1707 : (isnan(_1707) ? 0.0 : max(_1707, 0.0)), isnan(0.0) ? _1703 : (isnan(_1703) ? 0.0 : max(_1703, 0.0)), isnan(0.0) ? _1699 : (isnan(_1699) ? 0.0 : max(_1699, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1714) ? 0.0 : (isnan(0.0) ? _1714 : max(0.0, _1714))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1723 = 1.0;
    }
    float _1734;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1725 = dot(vec4(cbModelParam._m0[40u]), vec4(_1683, _1684, _1685, 1.0));
        _1734 = dot(vec3(isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0)), isnan(0.0) ? _1689 : (isnan(_1689) ? 0.0 : max(_1689, 0.0)), isnan(0.0) ? _1692 : (isnan(_1692) ? 0.0 : max(_1692, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1725) ? 0.0 : (isnan(0.0) ? _1725 : max(0.0, _1725))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1734 = 1.0;
    }
    float _1738 = (_1734 * cbModelParam._m0[1u].x) + (_1723 * (1.0 - cbModelParam._m0[1u].x));
    float _1748 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _855);
    float _1749 = isnan(_1748) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1748 : min(cbModelParam._m0[25u].z, _1748));
    float _1830;
    float _1832;
    float _1834;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1797 = fma(_1004, cbModelParam._m0[13u].z, fma(_1000, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _996)) + cbModelParam._m0[13u].w;
        float _1801 = fma(_1004, cbModelParam._m0[14u].z, fma(_1000, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _996)) + cbModelParam._m0[14u].w;
        float _1805 = fma(_1004, cbModelParam._m0[15u].z, fma(_1000, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _996)) + cbModelParam._m0[15u].w;
        float _1808 = fma(_942, cbModelParam._m0[13u].z, fma(_941, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _940));
        float _1811 = fma(_942, cbModelParam._m0[14u].z, fma(_941, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _940));
        float _1814 = fma(_942, cbModelParam._m0[15u].z, fma(_941, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _940));
        float _1842;
        if (_1808 > 0.0)
        {
            _1842 = abs((1.0 - _1797) / _1808);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1808 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1797 + 1.0) / _1808);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1842 = frontier_phi_16_14_ladder;
        }
        float _2013;
        if (_1811 > 0.0)
        {
            _2013 = abs((1.0 - _1801) / _1811);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1811 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1801 + 1.0) / _1811);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2013 = frontier_phi_25_21_ladder;
        }
        float _2308;
        if (_1814 > 0.0)
        {
            _2308 = abs((1.0 - _1805) / _1814);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1814 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1805 + 1.0) / _1814);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2308 = frontier_phi_37_32_ladder;
        }
        float _2310 = isnan(_2013) ? _1842 : (isnan(_1842) ? _2013 : min(_1842, _2013));
        float _2311 = isnan(_2308) ? _2310 : (isnan(_2310) ? _2308 : min(_2310, _2308));
        float _2315 = (_2311 * _1808) + _1797;
        float _2316 = (_2311 * _1811) + _1801;
        float _2317 = (_2311 * _1814) + _1805;
        float _2318 = _2311 * 9.9999997473787516355514526367188e-05;
        float _2320 = (-1.0) - _2318;
        float _2322 = _2318 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2317 > _2322) || ((_2317 < _2320) || ((_2316 > _2322) || ((_2316 < _2320) || ((_2315 < _2320) || (_2315 > _2322))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2462 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2317, cbModelParam._m0[9u].z, fma(_2316, cbModelParam._m0[9u].y, _2315 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2317, cbModelParam._m0[10u].z, fma(_2316, cbModelParam._m0[10u].y, _2315 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2317, cbModelParam._m0[11u].z, fma(_2316, cbModelParam._m0[11u].y, _2315 * cbModelParam._m0[11u].x))), _1749);
            frontier_phi_15_37_ladder = _2462.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2462.x * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2462.z * cbModelParam._m0[1u].y;
        }
        _1830 = frontier_phi_15_37_ladder_1;
        _1832 = frontier_phi_15_37_ladder;
        _1834 = frontier_phi_15_37_ladder_2;
    }
    else
    {
        vec4 _1818 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_940, _941, _942), _1749);
        _1830 = _1818.x * cbModelParam._m0[1u].y;
        _1832 = _1818.y * cbModelParam._m0[1u].y;
        _1834 = _1818.z * cbModelParam._m0[1u].y;
    }
    float _1838 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _855);
    float _1839 = isnan(_1838) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1838 : min(cbModelParam._m0[25u].w, _1838));
    float _1928;
    float _1930;
    float _1932;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1892 = fma(_1004, cbModelParam._m0[21u].z, fma(_1000, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _996)) + cbModelParam._m0[21u].w;
        float _1896 = fma(_1004, cbModelParam._m0[22u].z, fma(_1000, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _996)) + cbModelParam._m0[22u].w;
        float _1900 = fma(_1004, cbModelParam._m0[23u].z, fma(_1000, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _996)) + cbModelParam._m0[23u].w;
        float _1903 = fma(_942, cbModelParam._m0[21u].z, fma(_941, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _940));
        float _1906 = fma(_942, cbModelParam._m0[22u].z, fma(_941, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _940));
        float _1909 = fma(_942, cbModelParam._m0[23u].z, fma(_941, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _940));
        float _2018;
        if (_1903 > 0.0)
        {
            _2018 = abs((1.0 - _1892) / _1903);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1903 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1892 + 1.0) / _1903);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _2018 = frontier_phi_27_23_ladder;
        }
        float _2335;
        if (_1906 > 0.0)
        {
            _2335 = abs((1.0 - _1896) / _1906);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1906 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1896 + 1.0) / _1906);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2335 = frontier_phi_39_34_ladder;
        }
        float _2672;
        if (_1909 > 0.0)
        {
            _2672 = abs((1.0 - _1900) / _1909);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1909 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1900 + 1.0) / _1909);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2672 = frontier_phi_49_46_ladder;
        }
        float _2674 = isnan(_2335) ? _2018 : (isnan(_2018) ? _2335 : min(_2018, _2335));
        float _2675 = isnan(_2672) ? _2674 : (isnan(_2674) ? _2672 : min(_2674, _2672));
        float _2679 = (_2675 * _1903) + _1892;
        float _2680 = (_2675 * _1906) + _1896;
        float _2681 = (_2675 * _1909) + _1900;
        float _2682 = _2675 * 9.9999997473787516355514526367188e-05;
        float _2683 = (-1.0) - _2682;
        float _2685 = _2682 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2681 > _2685) || ((_2681 < _2683) || ((_2680 > _2685) || ((_2680 < _2683) || ((_2679 < _2683) || (_2679 > _2685))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2803 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2681, cbModelParam._m0[17u].z, fma(_2680, cbModelParam._m0[17u].y, _2679 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2681, cbModelParam._m0[18u].z, fma(_2680, cbModelParam._m0[18u].y, _2679 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2681, cbModelParam._m0[19u].z, fma(_2680, cbModelParam._m0[19u].y, _2679 * cbModelParam._m0[19u].x))), _1839);
            frontier_phi_24_49_ladder = _2803.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2803.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2803.x * cbModelParam._m0[1u].z;
        }
        _1928 = frontier_phi_24_49_ladder_2;
        _1930 = frontier_phi_24_49_ladder_1;
        _1932 = frontier_phi_24_49_ladder;
    }
    else
    {
        vec4 _1912 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_940, _941, _942), _1839);
        _1928 = _1912.x * cbModelParam._m0[1u].z;
        _1930 = _1912.y * cbModelParam._m0[1u].z;
        _1932 = _1912.z * cbModelParam._m0[1u].z;
    }
    float _1945 = (((_967 * _826) + _968) * _932) * ((cbModelParam._m0[1u].w * (_1928 - _1830)) + _1830);
    float _1947 = (((_967 * _827) + _968) * _932) * ((cbModelParam._m0[1u].w * (_1930 - _1832)) + _1832);
    float _1949 = (((_967 * _828) + _968) * _932) * ((cbModelParam._m0[1u].w * (_1932 - _1834)) + _1834);
    float _1952 = fma(_1949, cbSceneParam._m0[89u].z, fma(_1947, cbSceneParam._m0[89u].y, _1945 * cbSceneParam._m0[89u].x));
    float _1955 = fma(_1949, cbSceneParam._m0[90u].z, fma(_1947, cbSceneParam._m0[90u].y, _1945 * cbSceneParam._m0[90u].x));
    float _1958 = fma(_1949, cbSceneParam._m0[91u].z, fma(_1947, cbSceneParam._m0[91u].y, _1945 * cbSceneParam._m0[91u].x));
    float _1992 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1996 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2000 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2004 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2005 = _1992 / _2004;
    float _2006 = _1996 / _2004;
    float _2007 = _2000 / _2004;
    float _2154;
    float _2155;
    float _2156;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2034 = ((uint(_2007 > cbSceneParam._m0[59u].y) + uint(_2007 > cbSceneParam._m0[59u].x)) + uint(_2007 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2035 = _2034 + 43u;
        uint _2043 = _2034 + 44u;
        uint _2051 = _2034 + 45u;
        uint _2059 = _2034 + 46u;
        float _2070 = fma(_2004, cbSceneParam._m0[_2035].w, fma(_2000, cbSceneParam._m0[_2035].z, fma(_1996, cbSceneParam._m0[_2035].y, _1992 * cbSceneParam._m0[_2035].x)));
        float _2074 = fma(_2004, cbSceneParam._m0[_2043].w, fma(_2000, cbSceneParam._m0[_2043].z, fma(_1996, cbSceneParam._m0[_2043].y, _1992 * cbSceneParam._m0[_2043].x)));
        float _2082 = fma(_2004, cbSceneParam._m0[_2059].w, fma(_2000, cbSceneParam._m0[_2059].z, fma(_1996, cbSceneParam._m0[_2059].y, _1992 * cbSceneParam._m0[_2059].x)));
        float _2087 = cbSceneParam._m0[33u].z * _2082;
        float _2089 = cbSceneParam._m0[33u].w * _2082;
        float _2092 = fma(_2004, cbSceneParam._m0[_2051].w, fma(_2000, cbSceneParam._m0[_2051].z, fma(_1996, cbSceneParam._m0[_2051].y, _1992 * cbSceneParam._m0[_2051].x))) / _2082;
        float _2140 = (cbSceneParam._m0[33u].x - sqrt(((_2006 * _2006) + (_2005 * _2005)) + (_2007 * _2007))) * cbSceneParam._m0[33u].y;
        float _4521 = isnan(0.0) ? _2140 : (isnan(_2140) ? 0.0 : max(_2140, 0.0));
        float _2147 = (isnan(1.0) ? _4521 : (isnan(_4521) ? 1.0 : min(_4521, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2087 + _2070) / _2082, (_2089 + _2074) / _2082), _2092), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2089 + _2070) / _2082, (_2074 - _2087) / _2082), _2092), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2070 - _2087) / _2082, (_2074 - _2089) / _2082), _2092), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2070 - _2089) / _2082, (_2087 + _2074) / _2082), _2092), 0.0)).x), vec4(0.25)));
        _2154 = 1.0 - (_2147 * cbSceneParam._m0[34u].x);
        _2155 = 1.0 - (_2147 * cbSceneParam._m0[34u].y);
        _2156 = 1.0 - (_2147 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2154 = 1.0;
        _2155 = 1.0;
        _2156 = 1.0;
    }
    float _2220;
    float _2222;
    float _2224;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2208 = fma(_2004, cbSceneParam._m0[63u].w, fma(_2000, cbSceneParam._m0[63u].z, fma(_1996, cbSceneParam._m0[63u].y, _1992 * cbSceneParam._m0[63u].x)));
        float _2209 = fma(_2004, cbSceneParam._m0[60u].w, fma(_2000, cbSceneParam._m0[60u].z, fma(_1996, cbSceneParam._m0[60u].y, _1992 * cbSceneParam._m0[60u].x))) / _2208;
        float _2210 = fma(_2004, cbSceneParam._m0[61u].w, fma(_2000, cbSceneParam._m0[61u].z, fma(_1996, cbSceneParam._m0[61u].y, _1992 * cbSceneParam._m0[61u].x))) / _2208;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_2209 >= cbSceneParam._m0[64u].x) && (_2210 >= cbSceneParam._m0[64u].y)) && (_2209 <= cbSceneParam._m0[64u].z)) && (_2210 <= cbSceneParam._m0[64u].w))
        {
            float _2348 = fma(_2004, cbSceneParam._m0[62u].w, fma(_2000, cbSceneParam._m0[62u].z, fma(_1996, cbSceneParam._m0[62u].y, _1992 * cbSceneParam._m0[62u].x))) / _2208;
            float _2352 = isnan(cbSceneParam._m0[41u].w) ? _2348 : (isnan(_2348) ? cbSceneParam._m0[41u].w : max(_2348, cbSceneParam._m0[41u].w));
            float _2395 = (cbSceneParam._m0[33u].x - sqrt(((_2006 * _2006) + (_2005 * _2005)) + (_2007 * _2007))) * cbSceneParam._m0[33u].y;
            float _4537 = isnan(0.0) ? _2395 : (isnan(_2395) ? 0.0 : max(_2395, 0.0));
            float _2402 = (isnan(1.0) ? _4537 : (isnan(_4537) ? 1.0 : min(_4537, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2209, cbSceneParam._m0[33u].w + _2210), _2352), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2209, _2210 - cbSceneParam._m0[33u].z), _2352), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2209 - cbSceneParam._m0[33u].z, _2210 - cbSceneParam._m0[33u].w), _2352), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2209 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2210), _2352), 0.0)).x), vec4(0.25)));
            float _2406 = 1.0 - (_2402 * cbSceneParam._m0[34u].x);
            float _2407 = 1.0 - (_2402 * cbSceneParam._m0[34u].y);
            float _2408 = 1.0 - (_2402 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2407) ? _2155 : (isnan(_2155) ? _2407 : min(_2155, _2407));
            frontier_phi_36_35_ladder_1 = isnan(_2408) ? _2156 : (isnan(_2156) ? _2408 : min(_2156, _2408));
            frontier_phi_36_35_ladder_2 = isnan(_2406) ? _2154 : (isnan(_2154) ? _2406 : min(_2154, _2406));
        }
        else
        {
            frontier_phi_36_35_ladder = _2155;
            frontier_phi_36_35_ladder_1 = _2156;
            frontier_phi_36_35_ladder_2 = _2154;
        }
        _2220 = frontier_phi_36_35_ladder_2;
        _2222 = frontier_phi_36_35_ladder;
        _2224 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _2220 = _2154;
        _2222 = _2155;
        _2224 = _2156;
    }
    uvec4 _2229 = floatBitsToUint(cbInstanceData._m0[_868 + 5u]);
    uint _2231 = _2229.x * 14u;
    uint _2232 = _2231 + 13u;
    float _2239 = _932 + (-1.0);
    float _2244 = (cbLight._m0[_2232].x * _2239) + 1.0;
    float _2245 = (cbLight._m0[_2232].y * _2239) + 1.0;
    float _2246 = (cbLight._m0[_2232].z * _2239) + 1.0;
    float _2247 = (cbLight._m0[_2232].w * _2239) + 1.0;
    uint _2248 = _2231 + 5u;
    float _2254 = isnan(1.0) ? _2245 : (isnan(_2245) ? 1.0 : min(_2245, 1.0));
    uint _2258 = _2231 + 4u;
    float _2267 = isnan(1.0) ? _2244 : (isnan(_2244) ? 1.0 : min(_2244, 1.0));
    uint _2271 = _2231 | 1u;
    float _2282 = dot(vec3(cbLight._m0[_2231].xyz), vec3(_680, _681, _682));
    float _2285 = dot(vec3(cbLight._m0[_2271].xyz), vec3(_680, _681, _682));
    float _4573 = isnan(0.0) ? _2282 : (isnan(_2282) ? 0.0 : max(_2282, 0.0));
    float _4584 = isnan(0.0) ? _2285 : (isnan(_2285) ? 0.0 : max(_2285, 0.0));
    float _2290 = (isnan(1.0) ? _4573 : (isnan(_4573) ? 1.0 : min(_4573, 1.0))) * 0.3183098733425140380859375;
    float _2292 = (isnan(1.0) ? _4584 : (isnan(_4584) ? 1.0 : min(_4584, 1.0))) * 0.3183098733425140380859375;
    float _2299 = ((cbLight._m0[_2248].x * _2254) * _2292) + (((cbLight._m0[_2258].x * _2220) * _2267) * _2290);
    float _2300 = ((_2254 * cbLight._m0[_2248].y) * _2292) + (((cbLight._m0[_2258].y * _2222) * _2267) * _2290);
    float _2301 = ((_2254 * cbLight._m0[_2248].z) * _2292) + (((cbLight._m0[_2258].z * _2224) * _2267) * _2290);
    uvec4 _2305 = floatBitsToUint(cbLight._m0[_2231 + 12u]);
    bool _2307 = _2305.x == 0u;
    float _2409;
    float _2411;
    float _2413;
    if (_2307)
    {
        _2409 = _2299;
        _2411 = _2300;
        _2413 = _2301;
    }
    else
    {
        uint _2417 = _2231 + 6u;
        float _2433 = (dot(vec3(cbLight._m0[_2231 + 2u].xyz), vec3(_680, _681, _682)) * 0.5) + 0.5;
        float _2434 = _2433 * _2433;
        float _4595 = isnan(0.0) ? _2434 : (isnan(_2434) ? 0.0 : max(_2434, 0.0));
        float _2435 = isnan(1.0) ? _4595 : (isnan(_4595) ? 1.0 : min(_4595, 1.0));
        float _2436 = isnan(1.0) ? _2246 : (isnan(_2246) ? 1.0 : min(_2246, 1.0));
        _2409 = (((cbLight._m0[_2417].x * 0.3183098733425140380859375) * _2435) * _2436) + _2299;
        _2411 = (((cbLight._m0[_2417].y * 0.3183098733425140380859375) * _2435) * _2436) + _2300;
        _2413 = (((cbLight._m0[_2417].z * 0.3183098733425140380859375) * _2435) * _2436) + _2301;
    }
    bool _2416 = _2305.y == 0u;
    float _2471;
    float _2473;
    float _2475;
    if (_2416)
    {
        _2471 = _2409;
        _2473 = _2411;
        _2475 = _2413;
    }
    else
    {
        uint _2643 = _2231 + 7u;
        float _2659 = (dot(vec3(cbLight._m0[_2231 + 3u].xyz), vec3(_680, _681, _682)) * 0.5) + 0.5;
        float _2660 = _2659 * _2659;
        float _4611 = isnan(0.0) ? _2660 : (isnan(_2660) ? 0.0 : max(_2660, 0.0));
        float _2661 = isnan(1.0) ? _4611 : (isnan(_4611) ? 1.0 : min(_4611, 1.0));
        float _2662 = isnan(1.0) ? _2247 : (isnan(_2247) ? 1.0 : min(_2247, 1.0));
        _2471 = (((cbLight._m0[_2643].x * 0.3183098733425140380859375) * _2661) * _2662) + _2409;
        _2473 = (((cbLight._m0[_2643].y * 0.3183098733425140380859375) * _2661) * _2662) + _2411;
        _2475 = (((cbLight._m0[_2643].z * 0.3183098733425140380859375) * _2661) * _2662) + _2413;
    }
    uint _2478 = _2231 + 8u;
    float _2491 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2231].w)) * _855) * 0.949999988079071044921875);
    float _2492 = _2491 * _2491;
    float _2493 = cbLight._m0[_2231].x + _762;
    float _2494 = cbLight._m0[_2231].y + _763;
    float _2495 = cbLight._m0[_2231].z + _764;
    float _2499 = inversesqrt(dot(vec3(_2493, _2494, _2495), vec3(_2493, _2494, _2495)));
    float _2500 = _2499 * _2493;
    float _2501 = _2499 * _2494;
    float _2502 = _2499 * _2495;
    float _2503 = dot(vec3(_680, _681, _682), vec3(cbLight._m0[_2231].xyz));
    float _4627 = isnan(0.0) ? _2503 : (isnan(_2503) ? 0.0 : max(_2503, 0.0));
    float _2506 = isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0));
    float _4638 = isnan(0.0) ? _933 : (isnan(_933) ? 0.0 : max(_933, 0.0));
    float _2507 = isnan(1.0) ? _4638 : (isnan(_4638) ? 1.0 : min(_4638, 1.0));
    float _2508 = dot(vec3(_680, _681, _682), vec3(_2500, _2501, _2502));
    float _4649 = isnan(0.0) ? _2508 : (isnan(_2508) ? 0.0 : max(_2508, 0.0));
    float _2511 = isnan(1.0) ? _4649 : (isnan(_4649) ? 1.0 : min(_4649, 1.0));
    float _2512 = dot(vec3(cbLight._m0[_2231].xyz), vec3(_2500, _2501, _2502));
    float _4660 = isnan(0.0) ? _2512 : (isnan(_2512) ? 0.0 : max(_2512, 0.0));
    float _2516 = _2492 * _2492;
    float _2520 = ((_2511 * _2511) * (_2516 + (-1.0))) + 1.0;
    float _2528 = exp2(log2(1.0 - (isnan(1.0) ? _4660 : (isnan(_4660) ? 1.0 : min(_4660, 1.0)))) * 5.0);
    float _2529 = 1.0 - _826;
    float _2530 = 1.0 - _827;
    float _2531 = 1.0 - _828;
    float _2538 = 1.0 - _2492;
    float _2549 = (0.5 / (((_2507 * ((_2506 * _2538) + _2492)) + 9.9999999392252902907785028219223e-09) + (((_2507 * _2538) + _2492) * _2506))) * _2506;
    float _4671 = isnan(0.0) ? _2549 : (isnan(_2549) ? 0.0 : max(_2549, 0.0));
    float _2551 = (isnan(1.0) ? _4671 : (isnan(_4671) ? 1.0 : min(_4671, 1.0))) * (_2516 / ((_2520 * _2520) * 3.141590118408203125));
    uint _2565 = _2231 + 9u;
    float _2576 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2271].w)) * _855) * 0.949999988079071044921875);
    float _2577 = _2576 * _2576;
    float _2578 = cbLight._m0[_2271].x + _762;
    float _2579 = cbLight._m0[_2271].y + _763;
    float _2580 = cbLight._m0[_2271].z + _764;
    float _2584 = inversesqrt(dot(vec3(_2578, _2579, _2580), vec3(_2578, _2579, _2580)));
    float _2585 = _2584 * _2578;
    float _2586 = _2584 * _2579;
    float _2587 = _2584 * _2580;
    float _2588 = dot(vec3(_680, _681, _682), vec3(cbLight._m0[_2271].xyz));
    float _4682 = isnan(0.0) ? _2588 : (isnan(_2588) ? 0.0 : max(_2588, 0.0));
    float _2591 = isnan(1.0) ? _4682 : (isnan(_4682) ? 1.0 : min(_4682, 1.0));
    float _2592 = dot(vec3(_680, _681, _682), vec3(_2585, _2586, _2587));
    float _4693 = isnan(0.0) ? _2592 : (isnan(_2592) ? 0.0 : max(_2592, 0.0));
    float _2595 = isnan(1.0) ? _4693 : (isnan(_4693) ? 1.0 : min(_4693, 1.0));
    float _2596 = dot(vec3(cbLight._m0[_2271].xyz), vec3(_2585, _2586, _2587));
    float _4704 = isnan(0.0) ? _2596 : (isnan(_2596) ? 0.0 : max(_2596, 0.0));
    float _2600 = _2577 * _2577;
    float _2604 = ((_2595 * _2595) * (_2600 + (-1.0))) + 1.0;
    float _2611 = exp2(log2(1.0 - (isnan(1.0) ? _4704 : (isnan(_4704) ? 1.0 : min(_4704, 1.0)))) * 5.0);
    float _2618 = 1.0 - _2577;
    float _2628 = (0.5 / (((_2507 * ((_2591 * _2618) + _2577)) + 9.9999999392252902907785028219223e-09) + (((_2507 * _2618) + _2577) * _2591))) * _2591;
    float _4715 = isnan(0.0) ? _2628 : (isnan(_2628) ? 0.0 : max(_2628, 0.0));
    float _2630 = (isnan(1.0) ? _4715 : (isnan(_4715) ? 1.0 : min(_4715, 1.0))) * (_2600 / ((_2604 * _2604) * 3.141590118408203125));
    float _2640 = (((((_2611 * _2529) + _826) * cbLight._m0[_2565].x) * _2630) * _2254) + ((((cbLight._m0[_2478].x * _2220) * ((_2528 * _2529) + _826)) * _2551) * _2267);
    float _2641 = (((((_2611 * _2530) + _827) * cbLight._m0[_2565].y) * _2630) * _2254) + ((((cbLight._m0[_2478].y * _2222) * ((_2528 * _2530) + _827)) * _2551) * _2267);
    float _2642 = (((((_2611 * _2531) + _828) * cbLight._m0[_2565].z) * _2630) * _2254) + ((((cbLight._m0[_2478].z * _2224) * ((_2528 * _2531) + _828)) * _2551) * _2267);
    float _2698;
    float _2700;
    float _2702;
    if (_2307)
    {
        _2698 = _2640;
        _2700 = _2641;
        _2702 = _2642;
    }
    else
    {
        uint _2704 = _2231 + 2u;
        uint _2708 = _2231 + 10u;
        float _2722 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2704].w)) * _855) * 0.949999988079071044921875);
        float _2723 = _2722 * _2722;
        float _2724 = cbLight._m0[_2704].x + _762;
        float _2725 = cbLight._m0[_2704].y + _763;
        float _2726 = cbLight._m0[_2704].z + _764;
        float _2730 = inversesqrt(dot(vec3(_2724, _2725, _2726), vec3(_2724, _2725, _2726)));
        float _2731 = _2730 * _2724;
        float _2732 = _2730 * _2725;
        float _2733 = _2730 * _2726;
        float _2734 = dot(vec3(_680, _681, _682), vec3(cbLight._m0[_2704].xyz));
        float _4726 = isnan(0.0) ? _2734 : (isnan(_2734) ? 0.0 : max(_2734, 0.0));
        float _2737 = isnan(1.0) ? _4726 : (isnan(_4726) ? 1.0 : min(_4726, 1.0));
        float _2738 = dot(vec3(_680, _681, _682), vec3(_2731, _2732, _2733));
        float _4737 = isnan(0.0) ? _2738 : (isnan(_2738) ? 0.0 : max(_2738, 0.0));
        float _2741 = isnan(1.0) ? _4737 : (isnan(_4737) ? 1.0 : min(_4737, 1.0));
        float _2742 = dot(vec3(cbLight._m0[_2704].xyz), vec3(_2731, _2732, _2733));
        float _4748 = isnan(0.0) ? _2742 : (isnan(_2742) ? 0.0 : max(_2742, 0.0));
        float _2746 = _2723 * _2723;
        float _2750 = ((_2741 * _2741) * (_2746 + (-1.0))) + 1.0;
        float _2757 = exp2(log2(1.0 - (isnan(1.0) ? _4748 : (isnan(_4748) ? 1.0 : min(_4748, 1.0)))) * 5.0);
        float _2764 = 1.0 - _2723;
        float _2774 = (0.5 / (((_2507 * ((_2737 * _2764) + _2723)) + 9.9999999392252902907785028219223e-09) + (((_2507 * _2764) + _2723) * _2737))) * _2737;
        float _4759 = isnan(0.0) ? _2774 : (isnan(_2774) ? 0.0 : max(_2774, 0.0));
        float _2776 = (isnan(1.0) ? _4759 : (isnan(_4759) ? 1.0 : min(_4759, 1.0))) * (_2746 / ((_2750 * _2750) * 3.141590118408203125));
        float _2777 = isnan(1.0) ? _2246 : (isnan(_2246) ? 1.0 : min(_2246, 1.0));
        _2698 = (((((_2757 * _2529) + _826) * cbLight._m0[_2708].x) * _2776) * _2777) + _2640;
        _2700 = (((((_2757 * _2530) + _827) * cbLight._m0[_2708].y) * _2776) * _2777) + _2641;
        _2702 = (((((_2757 * _2531) + _828) * cbLight._m0[_2708].z) * _2776) * _2777) + _2642;
    }
    float _2808;
    float _2810;
    float _2812;
    if (_2416)
    {
        _2808 = _2698;
        _2810 = _2700;
        _2812 = _2702;
    }
    else
    {
        uint _2819 = _2231 + 3u;
        uint _2823 = _2231 + 11u;
        float _2837 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2819].w)) * _855) * 0.949999988079071044921875);
        float _2838 = _2837 * _2837;
        float _2839 = cbLight._m0[_2819].x + _762;
        float _2840 = cbLight._m0[_2819].y + _763;
        float _2841 = cbLight._m0[_2819].z + _764;
        float _2845 = inversesqrt(dot(vec3(_2839, _2840, _2841), vec3(_2839, _2840, _2841)));
        float _2846 = _2845 * _2839;
        float _2847 = _2845 * _2840;
        float _2848 = _2845 * _2841;
        float _2849 = dot(vec3(_680, _681, _682), vec3(cbLight._m0[_2819].xyz));
        float _4775 = isnan(0.0) ? _2849 : (isnan(_2849) ? 0.0 : max(_2849, 0.0));
        float _2852 = isnan(1.0) ? _4775 : (isnan(_4775) ? 1.0 : min(_4775, 1.0));
        float _2853 = dot(vec3(_680, _681, _682), vec3(_2846, _2847, _2848));
        float _4786 = isnan(0.0) ? _2853 : (isnan(_2853) ? 0.0 : max(_2853, 0.0));
        float _2856 = isnan(1.0) ? _4786 : (isnan(_4786) ? 1.0 : min(_4786, 1.0));
        float _2857 = dot(vec3(cbLight._m0[_2819].xyz), vec3(_2846, _2847, _2848));
        float _4797 = isnan(0.0) ? _2857 : (isnan(_2857) ? 0.0 : max(_2857, 0.0));
        float _2861 = _2838 * _2838;
        float _2865 = ((_2856 * _2856) * (_2861 + (-1.0))) + 1.0;
        float _2872 = exp2(log2(1.0 - (isnan(1.0) ? _4797 : (isnan(_4797) ? 1.0 : min(_4797, 1.0)))) * 5.0);
        float _2879 = 1.0 - _2838;
        float _2889 = (0.5 / (((_2507 * ((_2852 * _2879) + _2838)) + 9.9999999392252902907785028219223e-09) + (((_2507 * _2879) + _2838) * _2852))) * _2852;
        float _4808 = isnan(0.0) ? _2889 : (isnan(_2889) ? 0.0 : max(_2889, 0.0));
        float _2891 = (isnan(1.0) ? _4808 : (isnan(_4808) ? 1.0 : min(_4808, 1.0))) * (_2861 / ((_2865 * _2865) * 3.141590118408203125));
        float _2892 = isnan(1.0) ? _2247 : (isnan(_2247) ? 1.0 : min(_2247, 1.0));
        _2808 = (((((_2872 * _2529) + _826) * cbLight._m0[_2823].x) * _2891) * _2892) + _2698;
        _2810 = (((((_2872 * _2530) + _827) * cbLight._m0[_2823].y) * _2891) * _2892) + _2700;
        _2812 = (((((_2872 * _2531) + _828) * cbLight._m0[_2823].z) * _2891) * _2892) + _2702;
    }
    float _2957;
    float _2959;
    float _2961;
    float _2963;
    float _2965;
    float _2967;
    if (_2229.y == 0u)
    {
        uvec4 _2913 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2914 = _2913.x;
        uint _2925 = uint((float(_2913.y) * floor(float(uint(cbSceneParam._m0[85u].y * _771) / _2914))) + floor(float(uint(cbSceneParam._m0[85u].x * _770) / _2914)));
        float _2935 = (log2(_2007 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2936 = isnan(0.0) ? _2935 : (isnan(_2935) ? 0.0 : max(_2935, 0.0));
        uint _2939 = uint(isnan(14.0) ? _2936 : (isnan(_2936) ? 14.0 : min(_2936, 14.0)));
        uvec4 _2944 = texelFetch(g_lightClusterGridBuffer, int(((_2939 << 2u) + (_2925 << 6u)) >> 2u));
        uint _2945 = _2944.x;
        uint _2946 = _2913.z;
        float _3111;
        float _3113;
        float _3115;
        float _3117;
        float _3119;
        float _3121;
        if (((((1u << ((_2946 >> 4u) & 15u)) + 4294967295u) & _2945) == 0u) || ((_2946 & 240u) == 0u))
        {
            _3111 = 0.0;
            _3113 = 0.0;
            _3115 = 0.0;
            _3117 = 0.0;
            _3119 = 0.0;
            _3121 = 0.0;
        }
        else
        {
            float _3112;
            float _3114;
            float _3116;
            float _3118;
            float _3120;
            float _3122;
            float _3255 = 0.0;
            float _3256 = 0.0;
            float _3257 = 0.0;
            float _3258 = 0.0;
            float _3259 = 0.0;
            float _3260 = 0.0;
            uint _3261 = 0u;
            uint _3270;
            bool _3271;
            for (;;)
            {
                _3270 = texelFetch(g_lightClassification, int((((_2939 << 5u) + (_2925 << 9u)) + (_3261 << 2u)) >> 2u)).x;
                _3271 = _3270 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_3271)
                {
                    frontier_phi_68_pred = _3260;
                    frontier_phi_68_pred_1 = _3259;
                    frontier_phi_68_pred_2 = _3258;
                    frontier_phi_68_pred_3 = _3256;
                    frontier_phi_68_pred_4 = _3255;
                    frontier_phi_68_pred_5 = _3257;
                }
                else
                {
                    float _3379;
                    float _3380;
                    float _3381;
                    float _3382;
                    float _3383;
                    float _3384;
                    uint _3385;
                    _3379 = _3255;
                    _3380 = _3256;
                    _3381 = _3257;
                    _3382 = _3258;
                    _3383 = _3259;
                    _3384 = _3260;
                    _3385 = _3270;
                    float _3311;
                    float _3312;
                    float _3313;
                    float _3314;
                    float _3315;
                    float _3316;
                    for (;;)
                    {
                        uint _3389 = uint(findLSB(_3385)) + (_3261 << 5u);
                        uint _3386 = (_3385 + 4294967295u) & _3385;
                        uint _3391 = _3389 * 48u;
                        vec4 _3405 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3391)).x, texelFetch(g_PointLightRenderingBuffer, int(_3391 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3391 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3391 + 3u)).x));
                        uint _3411 = (_3389 * 48u) + 4u;
                        vec4 _3424 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3411)).x, texelFetch(g_PointLightRenderingBuffer, int(_3411 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3411 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3411 + 3u)).x));
                        uint _3430 = (_3389 * 48u) + 8u;
                        vec3 _3441 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3430)).x, texelFetch(g_PointLightRenderingBuffer, int(_3430 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3430 + 2u)).x));
                        float _3445 = _3405.x - _2005;
                        float _3446 = _3405.y - _2006;
                        float _3447 = _3405.z - _2007;
                        float _3448 = dot(vec3(_3445, _3446, _3447), vec3(_3445, _3446, _3447));
                        float _3451 = inversesqrt(_3448);
                        float _3452 = _3451 * _3445;
                        float _3453 = _3451 * _3446;
                        float _3454 = _3451 * _3447;
                        float _3455 = dot(vec3(_793, _796, _799), vec3(_3452, _3453, _3454));
                        float _3460 = 1.0 - (_3448 * _3405.w);
                        float _4834 = isnan(0.0) ? _3460 : (isnan(_3460) ? 0.0 : max(_3460, 0.0));
                        float _3461 = isnan(1.0) ? _4834 : (isnan(_4834) ? 1.0 : min(_4834, 1.0));
                        float _3462 = sqrt(_3448) * _3424.w;
                        float _3465 = 1.39999997615814208984375 / (_3462 + 1.39999997615814208984375);
                        float _3466 = _3465 * _3465;
                        float _3469 = ((1.0 - _3466) * _3455) + _3466;
                        float _3472 = _3462 * _3462;
                        float _3475 = ((isnan(0.0) ? _3469 : (isnan(_3469) ? 0.0 : max(_3469, 0.0))) * _3461) / ((_3472 * 0.699999988079071044921875) + 1.0);
                        float _3479 = (-0.0) - _2005;
                        float _3480 = (-0.0) - _2006;
                        float _3481 = (-0.0) - _2007;
                        float _3485 = inversesqrt(dot(vec3(_3479, _3480, _3481), vec3(_3479, _3480, _3481)));
                        float _3486 = _3485 * _3479;
                        float _3487 = _3485 * _3480;
                        float _3488 = _3485 * _3481;
                        float _3495 = exp2(log2(1.0 / ((_3472 * 3.5) + 5.0)) * 0.25);
                        float _3496 = 1.0 - _948;
                        float _3503 = sqrt(1.0 - ((1.0 - (_3496 * _3496)) * (1.0 - (_3495 * _3495))));
                        float _3504 = _3503 * _3503;
                        float _3505 = _3504 * _3504;
                        float _3506 = _3486 + _3452;
                        float _3507 = _3487 + _3453;
                        float _3508 = _3488 + _3454;
                        float _3512 = inversesqrt(dot(vec3(_3506, _3507, _3508), vec3(_3506, _3507, _3508)));
                        float _3516 = dot(vec3(_793, _796, _799), vec3(_3486, _3487, _3488));
                        float _4850 = isnan(0.0) ? _3516 : (isnan(_3516) ? 0.0 : max(_3516, 0.0));
                        float _3519 = isnan(1.0) ? _4850 : (isnan(_4850) ? 1.0 : min(_4850, 1.0));
                        float _3520 = dot(vec3(_793, _796, _799), vec3(_3512 * _3506, _3512 * _3507, _3512 * _3508));
                        float _4861 = isnan(0.0) ? _3520 : (isnan(_3520) ? 0.0 : max(_3520, 0.0));
                        float _3523 = isnan(1.0) ? _4861 : (isnan(_4861) ? 1.0 : min(_4861, 1.0));
                        float _3527 = ((_3523 * _3523) * (_3505 + (-1.0))) + 1.0;
                        float _3528 = _3465 * _3504;
                        float _3529 = _3528 * _3528;
                        float _3532 = ((1.0 - _3529) * _3455) + _3529;
                        float _4872 = isnan(0.0) ? _3532 : (isnan(_3532) ? 0.0 : max(_3532, 0.0));
                        float _3533 = isnan(1.0) ? _4872 : (isnan(_4872) ? 1.0 : min(_4872, 1.0));
                        float _3534 = 1.0 - _3504;
                        float _3544 = (0.5 / (((_3533 * ((_3519 * _3534) + _3504)) + 9.9999999392252902907785028219223e-09) + (((_3533 * _3534) + _3504) * _3519))) * _3533;
                        float _4883 = isnan(0.0) ? _3544 : (isnan(_3544) ? 0.0 : max(_3544, 0.0));
                        float _3555 = (((_3505 * 3.1415927410125732421875) * (isnan(1.0) ? _4883 : (isnan(_4883) ? 1.0 : min(_4883, 1.0)))) / ((_3527 * _3527) * ((_3472 * 2.1991131305694580078125) + 3.141590118408203125))) * _3461;
                        _3314 = (_3475 * _3424.x) + _3382;
                        _3315 = (_3475 * _3424.y) + _3383;
                        _3316 = (_3475 * _3424.z) + _3384;
                        _3311 = (_3555 * _3441.x) + _3379;
                        _3312 = (_3555 * _3441.y) + _3380;
                        _3313 = (_3555 * _3441.z) + _3381;
                        if (_3386 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3379 = _3311;
                            _3380 = _3312;
                            _3381 = _3313;
                            _3382 = _3314;
                            _3383 = _3315;
                            _3384 = _3316;
                            _3385 = _3386;
                        }
                    }
                    frontier_phi_68_pred = _3316;
                    frontier_phi_68_pred_1 = _3315;
                    frontier_phi_68_pred_2 = _3314;
                    frontier_phi_68_pred_3 = _3312;
                    frontier_phi_68_pred_4 = _3311;
                    frontier_phi_68_pred_5 = _3313;
                }
                _3122 = frontier_phi_68_pred;
                _3120 = frontier_phi_68_pred_1;
                _3118 = frontier_phi_68_pred_2;
                _3114 = frontier_phi_68_pred_3;
                _3112 = frontier_phi_68_pred_4;
                _3116 = frontier_phi_68_pred_5;
                uint _3262 = _3261 + 1u;
                if (_3262 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3255 = _3112;
                    _3256 = _3114;
                    _3257 = _3116;
                    _3258 = _3118;
                    _3259 = _3120;
                    _3260 = _3122;
                    _3261 = _3262;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3111 = _3112;
            _3113 = _3114;
            _3115 = _3116;
            _3117 = _3118;
            _3119 = _3120;
            _3121 = _3122;
        }
        uvec4 _3125 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3126 = _3125.z;
        uint _3128 = (_3126 >> 8u) & 15u;
        float _3223;
        float _3225;
        float _3227;
        float _3229;
        float _3231;
        float _3233;
        if (((4294967295u << _3128) & _2945) == 0u)
        {
            _3223 = _3111;
            _3225 = _3113;
            _3227 = _3115;
            _3229 = _3117;
            _3231 = _3119;
            _3233 = _3121;
        }
        else
        {
            float _3248 = inversesqrt(dot(vec3(_2005, _2006, _2007), vec3(_2005, _2006, _2007)));
            float _3249 = _3248 * _2005;
            float _3250 = _3248 * _2006;
            float _3251 = _3248 * _2007;
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            float frontier_phi_62_63_ladder_3;
            float frontier_phi_62_63_ladder_4;
            float frontier_phi_62_63_ladder_5;
            if (_3128 < ((_3126 >> 12u) & 15u))
            {
                float _3224;
                float _3226;
                float _3228;
                float _3230;
                float _3232;
                float _3234;
                float _3362 = _3111;
                float _3363 = _3113;
                float _3364 = _3115;
                float _3365 = _3117;
                float _3366 = _3119;
                float _3367 = _3121;
                uint _3368 = _3128;
                uint _3377;
                bool _3378;
                for (;;)
                {
                    _3377 = texelFetch(g_lightClassification, int((((_2939 << 5u) + (_2925 << 9u)) + (_3368 << 2u)) >> 2u)).x;
                    _3378 = _3377 == 0u;
                    float frontier_phi_74_pred;
                    float frontier_phi_74_pred_1;
                    float frontier_phi_74_pred_2;
                    float frontier_phi_74_pred_3;
                    float frontier_phi_74_pred_4;
                    float frontier_phi_74_pred_5;
                    if (_3378)
                    {
                        frontier_phi_74_pred = _3364;
                        frontier_phi_74_pred_1 = _3363;
                        frontier_phi_74_pred_2 = _3362;
                        frontier_phi_74_pred_3 = _3367;
                        frontier_phi_74_pred_4 = _3366;
                        frontier_phi_74_pred_5 = _3365;
                    }
                    else
                    {
                        float _3560;
                        float _3561;
                        float _3562;
                        float _3563;
                        float _3564;
                        float _3565;
                        float _3853;
                        float _3854;
                        float _3855;
                        float _3856;
                        float _3857;
                        float _3858;
                        float _3573 = _3362;
                        float _3574 = _3363;
                        float _3575 = _3364;
                        float _3576 = _3365;
                        float _3577 = _3366;
                        float _3578 = _3367;
                        uint _3579 = _3377;
                        uint _3580;
                        vec4 _3605;
                        float _3606;
                        vec4 _3621;
                        vec3 _3633;
                        vec4 _3648;
                        vec4 _3663;
                        float _3709;
                        bool _3710;
                        for (;;)
                        {
                            uint _3590 = ((_3368 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3579));
                            _3580 = (_3579 + 4294967295u) & _3579;
                            uint _3592 = _3590 * 40u;
                            _3605 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3592)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3592 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3592 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3592 + 3u)).x));
                            _3606 = _3605.w;
                            uint _3608 = (_3590 * 40u) + 4u;
                            _3621 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3608)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3608 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3608 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3608 + 3u)).x));
                            uint _3623 = (_3590 * 40u) + 8u;
                            _3633 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3623)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3623 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3623 + 2u)).x));
                            uint _3635 = (_3590 * 40u) + 16u;
                            _3648 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3635)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3635 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3635 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3635 + 3u)).x));
                            uint _3650 = (_3590 * 40u) + 20u;
                            _3663 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3650)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3650 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3650 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3650 + 3u)).x));
                            uint _3665 = (_3590 * 40u) + 24u;
                            vec4 _3678 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3665)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3665 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3665 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3665 + 3u)).x));
                            uint _3684 = (_3590 * 40u) + 28u;
                            vec4 _3697 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3684)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3684 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3684 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3684 + 3u)).x));
                            _3709 = fma(_2007, _3697.z, fma(_2006, _3697.y, _3697.x * _2005)) + _3697.w;
                            _3710 = !((fma(_2007, _3678.z, fma(_2006, _3678.y, _3678.x * _2005)) + _3678.w) <= 0.0);
                            float frontier_phi_80_pred;
                            float frontier_phi_80_pred_1;
                            float frontier_phi_80_pred_2;
                            float frontier_phi_80_pred_3;
                            float frontier_phi_80_pred_4;
                            float frontier_phi_80_pred_5;
                            if (_3710)
                            {
                                float _3737 = _3605.x - _2005;
                                float _3738 = _3605.y - _2006;
                                float _3739 = _3605.z - _2007;
                                float _3740 = dot(vec3(_3737, _3738, _3739), vec3(_3737, _3738, _3739));
                                float _3743 = inversesqrt(_3740);
                                float _3744 = _3743 * _3737;
                                float _3745 = _3743 * _3738;
                                float _3746 = _3743 * _3739;
                                float _3750 = 1.0 - (_3740 / (_3606 * _3606));
                                float _4894 = isnan(0.0) ? _3750 : (isnan(_3750) ? 0.0 : max(_3750, 0.0));
                                float _3751 = isnan(1.0) ? _4894 : (isnan(_4894) ? 1.0 : min(_4894, 1.0));
                                float _3755 = sqrt(_3740) * _3621.w;
                                float _3757 = 1.39999997615814208984375 / (_3755 + 1.39999997615814208984375);
                                float _3758 = _3757 * _3757;
                                float _3761 = ((1.0 - _3758) * dot(vec3(_3744, _3745, _3746), vec3(_793, _796, _799))) + _3758;
                                float _3764 = _3755 * _3755;
                                float _3768 = (fma(_2007, _3648.z, fma(_2006, _3648.y, _3648.x * _2005)) + _3648.w) / _3709;
                                float _3769 = (fma(_2007, _3663.z, fma(_2006, _3663.y, _3663.x * _2005)) + _3663.w) / _3709;
                                float _3773 = 1.0 - dot(vec2(_3768, _3769), vec2(_3768, _3769));
                                float _4910 = isnan(0.0) ? _3773 : (isnan(_3773) ? 0.0 : max(_3773, 0.0));
                                float _3774 = isnan(1.0) ? _4910 : (isnan(_4910) ? 1.0 : min(_4910, 1.0));
                                float _3775 = _3774 * (((isnan(0.0) ? _3761 : (isnan(_3761) ? 0.0 : max(_3761, 0.0))) * _3751) / ((_3764 * 0.699999988079071044921875) + 1.0));
                                float _3787 = exp2(log2(1.0 / ((_3764 * 3.5) + 5.0)) * 0.25);
                                float _3788 = 1.0 - _948;
                                float _3795 = sqrt(1.0 - ((1.0 - (_3788 * _3788)) * (1.0 - (_3787 * _3787))));
                                float _3796 = _3795 * _3795;
                                float _3797 = _3796 * _3796;
                                float _3798 = _3744 - _3249;
                                float _3799 = _3745 - _3250;
                                float _3800 = _3746 - _3251;
                                float _3804 = inversesqrt(dot(vec3(_3798, _3799, _3800), vec3(_3798, _3799, _3800)));
                                float _3808 = dot(vec3(_793, _796, _799), vec3((-0.0) - _3249, (-0.0) - _3250, (-0.0) - _3251));
                                float _4921 = isnan(0.0) ? _3808 : (isnan(_3808) ? 0.0 : max(_3808, 0.0));
                                float _3811 = isnan(1.0) ? _4921 : (isnan(_4921) ? 1.0 : min(_4921, 1.0));
                                float _3812 = dot(vec3(_793, _796, _799), vec3(_3804 * _3798, _3804 * _3799, _3804 * _3800));
                                float _4932 = isnan(0.0) ? _3812 : (isnan(_3812) ? 0.0 : max(_3812, 0.0));
                                float _3815 = isnan(1.0) ? _4932 : (isnan(_4932) ? 1.0 : min(_4932, 1.0));
                                float _3819 = ((_3815 * _3815) * (_3797 + (-1.0))) + 1.0;
                                float _3820 = _3757 * _3796;
                                float _3821 = _3820 * _3820;
                                float _3827 = ((1.0 - _3821) * dot(vec3(_793, _796, _799), vec3(_3744, _3745, _3746))) + _3821;
                                float _4943 = isnan(0.0) ? _3827 : (isnan(_3827) ? 0.0 : max(_3827, 0.0));
                                float _3828 = isnan(1.0) ? _4943 : (isnan(_4943) ? 1.0 : min(_4943, 1.0));
                                float _3829 = 1.0 - _3796;
                                float _3839 = (0.5 / (((_3828 * ((_3811 * _3829) + _3796)) + 9.9999999392252902907785028219223e-09) + (((_3828 * _3829) + _3796) * _3811))) * _3828;
                                float _4954 = isnan(0.0) ? _3839 : (isnan(_3839) ? 0.0 : max(_3839, 0.0));
                                float _3849 = (_3774 * _3751) * (((_3797 * 3.1415927410125732421875) * (isnan(1.0) ? _4954 : (isnan(_4954) ? 1.0 : min(_4954, 1.0)))) / ((_3819 * _3819) * ((_3764 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_80_pred = _3849 * _3633.z;
                                frontier_phi_80_pred_1 = _3849 * _3633.y;
                                frontier_phi_80_pred_2 = _3849 * _3633.x;
                                frontier_phi_80_pred_3 = _3775 * _3621.z;
                                frontier_phi_80_pred_4 = _3775 * _3621.y;
                                frontier_phi_80_pred_5 = _3775 * _3621.x;
                            }
                            else
                            {
                                frontier_phi_80_pred = 0.0;
                                frontier_phi_80_pred_1 = 0.0;
                                frontier_phi_80_pred_2 = 0.0;
                                frontier_phi_80_pred_3 = 0.0;
                                frontier_phi_80_pred_4 = 0.0;
                                frontier_phi_80_pred_5 = 0.0;
                            }
                            _3855 = frontier_phi_80_pred;
                            _3854 = frontier_phi_80_pred_1;
                            _3853 = frontier_phi_80_pred_2;
                            _3858 = frontier_phi_80_pred_3;
                            _3857 = frontier_phi_80_pred_4;
                            _3856 = frontier_phi_80_pred_5;
                            _3563 = _3856 + _3576;
                            _3564 = _3857 + _3577;
                            _3565 = _3858 + _3578;
                            _3560 = _3853 + _3573;
                            _3561 = _3854 + _3574;
                            _3562 = _3855 + _3575;
                            if (_3580 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3573 = _3560;
                                _3574 = _3561;
                                _3575 = _3562;
                                _3576 = _3563;
                                _3577 = _3564;
                                _3578 = _3565;
                                _3579 = _3580;
                                continue;
                            }
                        }
                        frontier_phi_74_pred = _3562;
                        frontier_phi_74_pred_1 = _3561;
                        frontier_phi_74_pred_2 = _3560;
                        frontier_phi_74_pred_3 = _3565;
                        frontier_phi_74_pred_4 = _3564;
                        frontier_phi_74_pred_5 = _3563;
                    }
                    _3228 = frontier_phi_74_pred;
                    _3226 = frontier_phi_74_pred_1;
                    _3224 = frontier_phi_74_pred_2;
                    _3234 = frontier_phi_74_pred_3;
                    _3232 = frontier_phi_74_pred_4;
                    _3230 = frontier_phi_74_pred_5;
                    uint _3369 = _3368 + 1u;
                    if (_3369 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3362 = _3224;
                        _3363 = _3226;
                        _3364 = _3228;
                        _3365 = _3230;
                        _3366 = _3232;
                        _3367 = _3234;
                        _3368 = _3369;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _3232;
                frontier_phi_62_63_ladder_1 = _3230;
                frontier_phi_62_63_ladder_2 = _3228;
                frontier_phi_62_63_ladder_3 = _3234;
                frontier_phi_62_63_ladder_4 = _3226;
                frontier_phi_62_63_ladder_5 = _3224;
            }
            else
            {
                frontier_phi_62_63_ladder = _3119;
                frontier_phi_62_63_ladder_1 = _3117;
                frontier_phi_62_63_ladder_2 = _3115;
                frontier_phi_62_63_ladder_3 = _3121;
                frontier_phi_62_63_ladder_4 = _3113;
                frontier_phi_62_63_ladder_5 = _3111;
            }
            _3223 = frontier_phi_62_63_ladder_5;
            _3225 = frontier_phi_62_63_ladder_4;
            _3227 = frontier_phi_62_63_ladder_2;
            _3229 = frontier_phi_62_63_ladder_1;
            _3231 = frontier_phi_62_63_ladder;
            _3233 = frontier_phi_62_63_ladder_3;
        }
        float _3238 = isnan(1.0) ? _932 : (isnan(_932) ? 1.0 : min(_932, 1.0));
        _2957 = (_3238 * _3229) + _2471;
        _2959 = (_3238 * _3231) + _2473;
        _2961 = (_3238 * _3233) + _2475;
        _2963 = ((_3223 * _826) * _3238) + _2808;
        _2965 = ((_3225 * _827) * _3238) + _2810;
        _2967 = ((_3227 * _828) * _3238) + _2812;
    }
    else
    {
        _2957 = _2471;
        _2959 = _2473;
        _2961 = _2475;
        _2963 = _2808;
        _2965 = _2810;
        _2967 = _2812;
    }
    float _2977 = ((((cbMatDynParam._m0[13u].x - _902) * _908) + _902) * _2529) * cbMatDynParam._m0[9u].x;
    float _2978 = ((((cbMatDynParam._m0[13u].y - _903) * _908) + _903) * _2530) * cbMatDynParam._m0[9u].y;
    float _2979 = ((((cbMatDynParam._m0[13u].z - _904) * _908) + _904) * _2531) * cbMatDynParam._m0[9u].z;
    float _2990 = dot(vec3(_680, _681, _682), vec3(0.0, -1.0, 0.0));
    float _4970 = isnan(0.0) ? _2990 : (isnan(_2990) ? 0.0 : max(_2990, 0.0));
    float _2993 = isnan(1.0) ? _4970 : (isnan(_4970) ? 1.0 : min(_4970, 1.0));
    float _2997 = dot(vec3(_940, _941, _942), vec3(0.0, -1.0, 0.0));
    float _4981 = isnan(0.0) ? _2997 : (isnan(_2997) ? 0.0 : max(_2997, 0.0));
    float _3003 = exp2(log2(isnan(1.0) ? _4981 : (isnan(_4981) ? 1.0 : min(_4981, 1.0))) * 4.0);
    float _4992 = isnan(0.0) ? _2977 : (isnan(_2977) ? 0.0 : max(_2977, 0.0));
    float _5003 = isnan(0.0) ? _2978 : (isnan(_2978) ? 0.0 : max(_2978, 0.0));
    float _5014 = isnan(0.0) ? _2979 : (isnan(_2979) ? 0.0 : max(_2979, 0.0));
    float _3047 = abs(exp2(log2(_933) * cbMatDynParam._m0[12u].x));
    float _3048 = isnan(0.100000001490116119384765625) ? _3047 : (isnan(_3047) ? 0.100000001490116119384765625 : max(_3047, 0.100000001490116119384765625));
    float _3054 = ((isnan(0.699999988079071044921875) ? _3048 : (isnan(_3048) ? 0.699999988079071044921875 : min(_3048, 0.699999988079071044921875))) + (-0.100000001490116119384765625)) * 1.66666662693023681640625;
    float _3064 = ((((cbMatDynParam._m0[10u].x * cbPerFrame._m0[3u].x) * ((_2963 + ((isnan(0.0) ? _1952 : (isnan(_1952) ? 0.0 : max(_1952, 0.0))) * _1738)) + (_3003 * cbMatDynParam._m0[11u].x))) + ((isnan(1.0) ? _4992 : (isnan(_4992) ? 1.0 : min(_4992, 1.0))) * ((_2957 + ((isnan(0.0) ? _1662 : (isnan(_1662) ? 0.0 : max(_1662, 0.0))) * _932)) + (_2993 * cbMatDynParam._m0[11u].x)))) + cbMatDynParam._m0[7u].x) + (_3054 * (cbMatDynParam._m0[8u].x - cbMatDynParam._m0[7u].x));
    float _3067 = ((((cbMatDynParam._m0[10u].y * cbPerFrame._m0[3u].x) * ((_2965 + ((isnan(0.0) ? _1955 : (isnan(_1955) ? 0.0 : max(_1955, 0.0))) * _1738)) + (_3003 * cbMatDynParam._m0[11u].y))) + ((isnan(1.0) ? _5003 : (isnan(_5003) ? 1.0 : min(_5003, 1.0))) * ((_2959 + ((isnan(0.0) ? _1665 : (isnan(_1665) ? 0.0 : max(_1665, 0.0))) * _932)) + (_2993 * cbMatDynParam._m0[11u].y)))) + cbMatDynParam._m0[7u].y) + (_3054 * (cbMatDynParam._m0[8u].y - cbMatDynParam._m0[7u].y));
    float _3070 = ((((cbMatDynParam._m0[10u].z * cbPerFrame._m0[3u].x) * ((_2967 + ((isnan(0.0) ? _1958 : (isnan(_1958) ? 0.0 : max(_1958, 0.0))) * _1738)) + (_3003 * cbMatDynParam._m0[11u].z))) + ((isnan(1.0) ? _5014 : (isnan(_5014) ? 1.0 : min(_5014, 1.0))) * ((_2961 + ((isnan(0.0) ? _1668 : (isnan(_1668) ? 0.0 : max(_1668, 0.0))) * _932)) + (_2993 * cbMatDynParam._m0[11u].z)))) + cbMatDynParam._m0[7u].z) + (_3054 * (cbMatDynParam._m0[8u].z - cbMatDynParam._m0[7u].z));
    uint _3074 = _868 + 6u;
    float _3082 = _770 / cbSceneParam._m0[86u].x;
    float _3083 = _771 / cbSceneParam._m0[86u].y;
    vec4 _3097 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3082, _3083, (log2((isnan(cbSceneParam._m0[77u].w) ? _705 : (isnan(_705) ? cbSceneParam._m0[77u].w : min(_705, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3099 = _3097.x;
    float _3100 = _3097.y;
    float _3101 = _3097.z;
    float _3102 = _3097.w;
    float _3173;
    float _3175;
    float _3177;
    float _3179;
    if (_705 > cbSceneParam._m0[78u].w)
    {
        float _3136 = isnan(_705) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _705 : min(cbSceneParam._m0[80u].w, _705));
        float _3137 = _3136 / _705;
        float _3148 = _3137 * _755;
        float _3149 = _756 * _3137;
        float _3150 = (-0.0) - _3149;
        float _3151 = _3137 * _757;
        float _3153 = (cbSceneParam._m0[77u].w * _3150) / _3136;
        float _3154 = _3153 + cbSceneParam._m0[79u].w;
        float _3155 = cbSceneParam._m0[79u].w - _3149;
        float _3161 = sqrt(((_3148 * _3148) + (_3149 * _3149)) + (_3151 * _3151));
        float _3164 = (1.0 - (cbSceneParam._m0[77u].w / _3136)) * _3161;
        float _3169 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3171 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3324;
        if (abs((_3150 - _3153) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3324 = ((((_3154 > 0.0) ? exp2(_3169 * _3154) : (2.0 - exp2(_3171 * _3154))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3164;
        }
        else
        {
            float _3284 = 1.0 / cbSceneParam._m0[80u].x;
            float _3285 = isnan(_3155) ? _3154 : (isnan(_3154) ? _3155 : max(_3154, _3155));
            float _3286 = isnan(_3155) ? _3154 : (isnan(_3154) ? _3155 : min(_3154, _3155));
            float _3295 = isnan(0.0) ? _3285 : (isnan(_3285) ? 0.0 : min(_3285, 0.0));
            float _3296 = isnan(0.0) ? _3286 : (isnan(_3286) ? 0.0 : min(_3286, 0.0));
            _3324 = ((abs(_3161 / _3150) * cbSceneParam._m0[80u].y) * ((((_3295 - _3296) * 2.0) - ((exp2(_3169 * (isnan(0.0) ? _3285 : (isnan(_3285) ? 0.0 : max(_3285, 0.0)))) - exp2(_3169 * (isnan(0.0) ? _3286 : (isnan(_3286) ? 0.0 : max(_3286, 0.0))))) * _3284)) - ((exp2(_3171 * _3295) - exp2(_3171 * _3296)) * _3284))) + (_3164 * cbSceneParam._m0[80u].z);
        }
        vec4 _3326 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3082, _3083, 1.0), 0.0);
        float _3335 = exp2((_3324 * (-1.44269502162933349609375)) * (1.0 - _3326.w));
        float _3336 = log2(_3335);
        float _3352 = log2(_3102);
        _3173 = (exp2(_3352 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3336 * cbSceneParam._m0[78u].x)) * _3326.x) / cbSceneParam._m0[78u].x)) + _3099;
        _3175 = (exp2(_3352 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3336 * cbSceneParam._m0[78u].y)) * _3326.y) / cbSceneParam._m0[78u].y)) + _3100;
        _3177 = (exp2(_3352 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3336 * cbSceneParam._m0[78u].z)) * _3326.z) / cbSceneParam._m0[78u].z)) + _3101;
        _3179 = _3335 * _3102;
    }
    else
    {
        _3173 = _3099;
        _3175 = _3100;
        _3177 = _3101;
        _3179 = _3102;
    }
    float _3191 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3192 = _3191 == 3.0;
    float _3193 = log2(_3179);
    float _3200 = exp2(_3193 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _3064 : (isnan(_3064) ? 0.0 : max(_3064, 0.0)));
    float _3201 = exp2(_3193 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _3067 : (isnan(_3067) ? 0.0 : max(_3067, 0.0)));
    float _3202 = exp2(_3193 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _3070 : (isnan(_3070) ? 0.0 : max(_3070, 0.0)));
    float _3211 = (_3191 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3211 * (_3192 ? _3200 : (_3200 + (cbSceneParam._m0[72u].w * _3173)));
    SV_Target.y = _3211 * (_3192 ? _3201 : (_3201 + (cbSceneParam._m0[72u].w * _3175)));
    SV_Target.z = _3211 * (_3192 ? _3202 : (_3202 + (cbSceneParam._m0[72u].w * _3177)));
    SV_Target.w = cbInstanceData._m0[_3074].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3074].w;
}


