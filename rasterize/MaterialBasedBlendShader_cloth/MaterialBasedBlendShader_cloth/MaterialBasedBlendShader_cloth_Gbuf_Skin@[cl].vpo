#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[24];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR;
layout(location = 7) in vec4 COLOR_1;
layout(location = 8) in ivec4 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out vec4 TEXCOORD_4;
layout(location = 5) out float TEXCOORD_8;
layout(location = 5, component = 1) out float TEXCOORD_14;

void main()
{
    uint _78 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_14 = 0.0;
    float _191 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _193 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _194 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _201 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _202 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _203 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _443;
    float _444;
    float _445;
    float _446;
    float _447;
    float _448;
    float _449;
    float _450;
    float _451;
    float _452;
    float _453;
    float _454;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _227 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _78;
        precise float _231 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _236 = isnan(_231) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _231 : max(0.001000000047497451305389404296875, _231));
        precise float _238 = BLENDWEIGHT.x / _236;
        precise float _239 = BLENDWEIGHT.y / _236;
        precise float _240 = BLENDWEIGHT.z / _236;
        precise float _241 = BLENDWEIGHT.w / _236;
        uvec4 _248 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_227)).x * 13u) + 4u]);
        uint _249 = _248.x;
        uint _251 = (_249 + uint(float(BLENDINDICES.x))) * 3u;
        uint _258 = _251 + 1u;
        uint _265 = _251 + 2u;
        precise float _272 = _238 * cbObjMatrix._m0[_251].x;
        precise float _273 = _238 * cbObjMatrix._m0[_258].x;
        precise float _274 = _238 * cbObjMatrix._m0[_265].x;
        precise float _275 = _238 * cbObjMatrix._m0[_251].y;
        precise float _276 = _238 * cbObjMatrix._m0[_258].y;
        precise float _277 = _238 * cbObjMatrix._m0[_265].y;
        precise float _278 = _238 * cbObjMatrix._m0[_251].z;
        precise float _279 = _238 * cbObjMatrix._m0[_258].z;
        precise float _280 = _238 * cbObjMatrix._m0[_265].z;
        precise float _281 = _238 * cbObjMatrix._m0[_251].w;
        precise float _282 = _238 * cbObjMatrix._m0[_258].w;
        precise float _283 = _238 * cbObjMatrix._m0[_265].w;
        uint _286 = (_249 + uint(float(BLENDINDICES.y))) * 3u;
        uint _293 = _286 + 1u;
        uint _300 = _286 + 2u;
        precise float _307 = _239 * cbObjMatrix._m0[_286].x;
        precise float _308 = _239 * cbObjMatrix._m0[_293].x;
        precise float _309 = _239 * cbObjMatrix._m0[_300].x;
        precise float _310 = _239 * cbObjMatrix._m0[_286].y;
        precise float _311 = _239 * cbObjMatrix._m0[_293].y;
        precise float _312 = _239 * cbObjMatrix._m0[_300].y;
        precise float _313 = _239 * cbObjMatrix._m0[_286].z;
        precise float _314 = _239 * cbObjMatrix._m0[_293].z;
        precise float _315 = _239 * cbObjMatrix._m0[_300].z;
        precise float _316 = _239 * cbObjMatrix._m0[_286].w;
        precise float _317 = _239 * cbObjMatrix._m0[_293].w;
        precise float _318 = _239 * cbObjMatrix._m0[_300].w;
        precise float _319 = _272 + _307;
        precise float _320 = _273 + _308;
        precise float _321 = _274 + _309;
        precise float _322 = _275 + _310;
        precise float _323 = _276 + _311;
        precise float _324 = _277 + _312;
        precise float _325 = _278 + _313;
        precise float _326 = _279 + _314;
        precise float _327 = _280 + _315;
        precise float _328 = _281 + _316;
        precise float _329 = _282 + _317;
        precise float _330 = _283 + _318;
        uint _333 = (_249 + uint(float(BLENDINDICES.z))) * 3u;
        uint _340 = _333 + 1u;
        uint _347 = _333 + 2u;
        precise float _354 = _240 * cbObjMatrix._m0[_333].x;
        precise float _355 = _240 * cbObjMatrix._m0[_340].x;
        precise float _356 = _240 * cbObjMatrix._m0[_347].x;
        precise float _357 = _240 * cbObjMatrix._m0[_333].y;
        precise float _358 = _240 * cbObjMatrix._m0[_340].y;
        precise float _359 = _240 * cbObjMatrix._m0[_347].y;
        precise float _360 = _240 * cbObjMatrix._m0[_333].z;
        precise float _361 = _240 * cbObjMatrix._m0[_340].z;
        precise float _362 = _240 * cbObjMatrix._m0[_347].z;
        precise float _363 = _240 * cbObjMatrix._m0[_333].w;
        precise float _364 = _240 * cbObjMatrix._m0[_340].w;
        precise float _365 = _240 * cbObjMatrix._m0[_347].w;
        precise float _366 = _319 + _354;
        precise float _367 = _320 + _355;
        precise float _368 = _321 + _356;
        precise float _369 = _322 + _357;
        precise float _370 = _323 + _358;
        precise float _371 = _324 + _359;
        precise float _372 = _325 + _360;
        precise float _373 = _326 + _361;
        precise float _374 = _327 + _362;
        precise float _375 = _328 + _363;
        precise float _376 = _329 + _364;
        precise float _377 = _330 + _365;
        uint _380 = (_249 + uint(float(BLENDINDICES.w))) * 3u;
        uint _387 = _380 + 1u;
        uint _394 = _380 + 2u;
        precise float _401 = _241 * cbObjMatrix._m0[_380].x;
        precise float _402 = _241 * cbObjMatrix._m0[_387].x;
        precise float _403 = _241 * cbObjMatrix._m0[_394].x;
        precise float _404 = _241 * cbObjMatrix._m0[_380].y;
        precise float _405 = _241 * cbObjMatrix._m0[_387].y;
        precise float _406 = _241 * cbObjMatrix._m0[_394].y;
        precise float _407 = _241 * cbObjMatrix._m0[_380].z;
        precise float _408 = _241 * cbObjMatrix._m0[_387].z;
        precise float _409 = _241 * cbObjMatrix._m0[_394].z;
        precise float _410 = _241 * cbObjMatrix._m0[_380].w;
        precise float _411 = _241 * cbObjMatrix._m0[_387].w;
        precise float _412 = _241 * cbObjMatrix._m0[_394].w;
        precise float _413 = _366 + _401;
        precise float _414 = _367 + _402;
        precise float _415 = _368 + _403;
        precise float _416 = _369 + _404;
        precise float _417 = _370 + _405;
        precise float _418 = _371 + _406;
        precise float _419 = _372 + _407;
        precise float _420 = _373 + _408;
        precise float _421 = _374 + _409;
        precise float _422 = _375 + _410;
        precise float _423 = _376 + _411;
        precise float _424 = _377 + _412;
        _443 = _413;
        _444 = _416;
        _445 = _419;
        _446 = _422;
        _447 = _414;
        _448 = _417;
        _449 = _420;
        _450 = _423;
        _451 = _415;
        _452 = _418;
        _453 = _421;
        _454 = _424;
    }
    else
    {
        _443 = cbvModelParam._m0[0u].x;
        _444 = cbvModelParam._m0[0u].y;
        _445 = cbvModelParam._m0[0u].z;
        _446 = cbvModelParam._m0[0u].w;
        _447 = cbvModelParam._m0[1u].x;
        _448 = cbvModelParam._m0[1u].y;
        _449 = cbvModelParam._m0[1u].z;
        _450 = cbvModelParam._m0[1u].w;
        _451 = cbvModelParam._m0[2u].x;
        _452 = cbvModelParam._m0[2u].y;
        _453 = cbvModelParam._m0[2u].z;
        _454 = cbvModelParam._m0[2u].w;
    }
    precise float _455 = POSITION.x * _443;
    precise float _456 = POSITION.y * _444;
    precise float _457 = _456 + _455;
    precise float _458 = POSITION.z * _445;
    precise float _459 = _458 + _457;
    precise float _460 = 1.0 * _446;
    precise float _461 = _460 + _459;
    precise float _462 = POSITION.x * _447;
    precise float _463 = POSITION.y * _448;
    precise float _464 = _463 + _462;
    precise float _465 = POSITION.z * _449;
    precise float _466 = _465 + _464;
    precise float _467 = 1.0 * _450;
    precise float _468 = _467 + _466;
    precise float _469 = POSITION.x * _451;
    precise float _470 = POSITION.y * _452;
    precise float _471 = _470 + _469;
    precise float _472 = POSITION.z * _453;
    precise float _473 = _472 + _471;
    precise float _474 = 1.0 * _454;
    precise float _475 = _474 + _473;
    float _481 = cbSceneParam._m0[3u].x - _461;
    float _482 = cbSceneParam._m0[3u].y - _468;
    float _483 = cbSceneParam._m0[3u].z - _475;
    uint _503 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _78;
    precise float _517 = _461 - cbSceneParam._m0[3u].x;
    precise float _518 = _468 - cbSceneParam._m0[3u].y;
    precise float _519 = _475 - cbSceneParam._m0[3u].z;
    precise float _546 = _517 * cbSceneParam._m0[24u].x;
    precise float _547 = _518 * cbSceneParam._m0[24u].y;
    precise float _548 = _547 + _546;
    precise float _549 = _519 * cbSceneParam._m0[24u].z;
    precise float _550 = _549 + _548;
    precise float _551 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _552 = _551 + _550;
    precise float _553 = _517 * cbSceneParam._m0[25u].x;
    precise float _554 = _518 * cbSceneParam._m0[25u].y;
    precise float _555 = _554 + _553;
    precise float _556 = _519 * cbSceneParam._m0[25u].z;
    precise float _557 = _556 + _555;
    precise float _558 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _559 = _558 + _557;
    precise float _560 = _517 * cbSceneParam._m0[26u].x;
    precise float _561 = _518 * cbSceneParam._m0[26u].y;
    precise float _562 = _561 + _560;
    precise float _563 = _519 * cbSceneParam._m0[26u].z;
    precise float _564 = _563 + _562;
    precise float _565 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _566 = _565 + _564;
    precise float _567 = _517 * cbSceneParam._m0[27u].x;
    precise float _568 = _518 * cbSceneParam._m0[27u].y;
    precise float _569 = _568 + _567;
    precise float _570 = _519 * cbSceneParam._m0[27u].z;
    precise float _571 = _570 + _569;
    precise float _572 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _573 = _572 + _571;
    gl_Position.x = _552;
    gl_Position.y = _559;
    gl_Position.z = _566;
    gl_Position.w = _573;
    NORMAL_1.x = fma(_194, _445, fma(_193, _444, _443 * _191));
    NORMAL_1.y = fma(_194, _449, fma(_193, _448, _447 * _191));
    NORMAL_1.z = fma(_194, _453, fma(_193, _452, _451 * _191));
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_503)).x);
    TANGENT_1.x = fma(_203, _445, fma(_202, _444, _443 * _201));
    TANGENT_1.y = fma(_203, _449, fma(_202, _448, _447 * _201));
    TANGENT_1.z = fma(_203, _453, fma(_202, _452, _451 * _201));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = COLOR.x;
    TEXCOORD_1.y = COLOR.y;
    TEXCOORD_1.z = COLOR.z;
    TEXCOORD_1.w = COLOR.w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_4.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_4.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_8 = COLOR_1.x;
    TEXCOORD_14 = sqrt(((_481 * _481) + (_482 * _482)) + (_483 * _483));
}


