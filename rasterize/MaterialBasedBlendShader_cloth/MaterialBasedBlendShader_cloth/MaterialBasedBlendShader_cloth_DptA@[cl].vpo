#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[24];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in vec4 COLOR;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out vec4 TEXCOORD_4;
layout(location = 5) out float TEXCOORD_8;
layout(location = 5, component = 1) out vec2 TEXCOORD_10;
layout(location = 5, component = 3) out float TEXCOORD_14;

void main()
{
    uint _79 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    TEXCOORD_14 = 0.0;
    float _186 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _188 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _189 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _196 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _197 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _198 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _265;
    float _266;
    float _267;
    float _268;
    float _269;
    float _270;
    float _271;
    float _272;
    float _273;
    float _274;
    float _275;
    float _276;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _213 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _79;
        uint _226 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_213)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
        uint _233 = _226 + 1u;
        uint _240 = _226 + 2u;
        _265 = cbObjMatrix._m0[_226].x;
        _266 = cbObjMatrix._m0[_226].y;
        _267 = cbObjMatrix._m0[_226].z;
        _268 = cbObjMatrix._m0[_226].w;
        _269 = cbObjMatrix._m0[_233].x;
        _270 = cbObjMatrix._m0[_233].y;
        _271 = cbObjMatrix._m0[_233].z;
        _272 = cbObjMatrix._m0[_233].w;
        _273 = cbObjMatrix._m0[_240].x;
        _274 = cbObjMatrix._m0[_240].y;
        _275 = cbObjMatrix._m0[_240].z;
        _276 = cbObjMatrix._m0[_240].w;
    }
    else
    {
        _265 = cbvModelParam._m0[0u].x;
        _266 = cbvModelParam._m0[0u].y;
        _267 = cbvModelParam._m0[0u].z;
        _268 = cbvModelParam._m0[0u].w;
        _269 = cbvModelParam._m0[1u].x;
        _270 = cbvModelParam._m0[1u].y;
        _271 = cbvModelParam._m0[1u].z;
        _272 = cbvModelParam._m0[1u].w;
        _273 = cbvModelParam._m0[2u].x;
        _274 = cbvModelParam._m0[2u].y;
        _275 = cbvModelParam._m0[2u].z;
        _276 = cbvModelParam._m0[2u].w;
    }
    precise float _277 = POSITION.x * _265;
    precise float _278 = POSITION.y * _266;
    precise float _279 = _278 + _277;
    precise float _280 = POSITION.z * _267;
    precise float _281 = _280 + _279;
    precise float _282 = 1.0 * _268;
    precise float _284 = _282 + _281;
    precise float _285 = POSITION.x * _269;
    precise float _286 = POSITION.y * _270;
    precise float _287 = _286 + _285;
    precise float _288 = POSITION.z * _271;
    precise float _289 = _288 + _287;
    precise float _290 = 1.0 * _272;
    precise float _291 = _290 + _289;
    precise float _292 = POSITION.x * _273;
    precise float _293 = POSITION.y * _274;
    precise float _294 = _293 + _292;
    precise float _295 = POSITION.z * _275;
    precise float _296 = _295 + _294;
    precise float _297 = 1.0 * _276;
    precise float _298 = _297 + _296;
    float _304 = cbSceneParam._m0[3u].x - _284;
    float _305 = cbSceneParam._m0[3u].y - _291;
    float _306 = cbSceneParam._m0[3u].z - _298;
    uint _327 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _79;
    precise float _341 = _284 - cbSceneParam._m0[3u].x;
    precise float _342 = _291 - cbSceneParam._m0[3u].y;
    precise float _343 = _298 - cbSceneParam._m0[3u].z;
    precise float _370 = _341 * cbSceneParam._m0[24u].x;
    precise float _371 = _342 * cbSceneParam._m0[24u].y;
    precise float _372 = _371 + _370;
    precise float _373 = _343 * cbSceneParam._m0[24u].z;
    precise float _374 = _373 + _372;
    precise float _375 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _376 = _375 + _374;
    precise float _377 = _341 * cbSceneParam._m0[25u].x;
    precise float _378 = _342 * cbSceneParam._m0[25u].y;
    precise float _379 = _378 + _377;
    precise float _380 = _343 * cbSceneParam._m0[25u].z;
    precise float _381 = _380 + _379;
    precise float _382 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _383 = _382 + _381;
    precise float _384 = _341 * cbSceneParam._m0[26u].x;
    precise float _385 = _342 * cbSceneParam._m0[26u].y;
    precise float _386 = _385 + _384;
    precise float _387 = _343 * cbSceneParam._m0[26u].z;
    precise float _388 = _387 + _386;
    precise float _389 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _390 = _389 + _388;
    precise float _391 = _341 * cbSceneParam._m0[27u].x;
    precise float _392 = _342 * cbSceneParam._m0[27u].y;
    precise float _393 = _392 + _391;
    precise float _394 = _343 * cbSceneParam._m0[27u].z;
    precise float _395 = _394 + _393;
    precise float _396 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _397 = _396 + _395;
    gl_Position.x = _376;
    gl_Position.y = _383;
    gl_Position.z = _390;
    gl_Position.w = _397;
    NORMAL_1.x = fma(_189, _267, fma(_188, _266, _265 * _186));
    NORMAL_1.y = fma(_189, _271, fma(_188, _270, _269 * _186));
    NORMAL_1.z = fma(_189, _275, fma(_188, _274, _273 * _186));
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_327)).x);
    TANGENT_1.x = fma(_198, _267, fma(_197, _266, _265 * _196));
    TANGENT_1.y = fma(_198, _271, fma(_197, _270, _269 * _196));
    TANGENT_1.z = fma(_198, _275, fma(_197, _274, _273 * _196));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = COLOR.x;
    TEXCOORD_1.y = COLOR.y;
    TEXCOORD_1.z = COLOR.z;
    TEXCOORD_1.w = COLOR.w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_4.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_4.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_8 = COLOR_1.x;
    TEXCOORD_10.x = _390;
    TEXCOORD_10.y = _397;
    TEXCOORD_14 = sqrt(((_304 * _304) + (_305 * _305)) + (_306 * _306));
}


