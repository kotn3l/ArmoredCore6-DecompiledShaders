#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[9];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[24];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D MaterialBasedBlendShader_snp_0_Texture2D_12;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 6) in float TEXCOORD_8;
layout(location = 7) in vec4 TEXCOORD_11;
layout(location = 8) in vec4 TEXCOORD_12;
layout(location = 6, component = 1) in vec3 TEXCOORD_13;
layout(location = 0) out vec4 SV_Target;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    vec4 _120 = texture(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _135 = texture(sampler2D(MaterialBasedBlendShader_snp_0_Texture2D_12, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[1u].w));
    float _138 = _135.x * _120.w;
    uint _141 = uint(roundEven(NORMAL.w));
    float _155 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? TEXCOORD_11.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * TEXCOORD_11.z));
    float _198 = fma(TEXCOORD_11.w, cbSceneParam._m0[11u].w, fma(TEXCOORD_11.z, cbSceneParam._m0[11u].z, fma(TEXCOORD_11.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * TEXCOORD_11.x)));
    float _208 = cbSceneParam._m0[71u].x - (fma(TEXCOORD_11.w, cbSceneParam._m0[8u].w, fma(TEXCOORD_11.z, cbSceneParam._m0[8u].z, fma(TEXCOORD_11.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * TEXCOORD_11.x))) / _198);
    float _209 = cbSceneParam._m0[71u].y - (fma(TEXCOORD_11.w, cbSceneParam._m0[9u].w, fma(TEXCOORD_11.z, cbSceneParam._m0[9u].z, fma(TEXCOORD_11.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * TEXCOORD_11.x))) / _198);
    float _210 = cbSceneParam._m0[71u].z - (fma(TEXCOORD_11.w, cbSceneParam._m0[10u].w, fma(TEXCOORD_11.z, cbSceneParam._m0[10u].z, fma(TEXCOORD_11.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * TEXCOORD_11.x))) / _198);
    vec4 _215 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _217 = _215.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _253 = sqrt(((_208 * _208) + (_209 * _209)) + (_210 * _210));
        float _260 = (cbMatDynParam._m0[5u].x * _253) + cbMatDynParam._m0[5u].y;
        float _349 = isnan(0.0) ? _260 : (isnan(_260) ? 0.0 : max(_260, 0.0));
        float _262 = isnan(1.0) ? _349 : (isnan(_349) ? 1.0 : min(_349, 1.0));
        float _266 = (cbMatDynParam._m0[5u].z * _253) + cbMatDynParam._m0[5u].w;
        float _360 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _360 : (isnan(_360) ? 1.0 : min(_360, 1.0))) - _262)) + _262) < ((_217 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _299;
    float _228;
    float _229;
    vec4 _233;
    float _235;
    float _236;
    bool _247;
    for (;;)
    {
        _228 = (TEXCOORD_11.x / TEXCOORD_11.w) - (TEXCOORD_12.x / TEXCOORD_12.w);
        _229 = (TEXCOORD_11.y / TEXCOORD_11.w) - (TEXCOORD_12.y / TEXCOORD_12.w);
        float _230 = _217 + (-0.5);
        _233 = cbMtdParam._m0[1u];
        _235 = _233.y * _230;
        _236 = _230 * 0.999000012874603271484375;
        _247 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_247)
        {
            if ((cbInstanceData._m0[(_141 * 13u) + 7u].x + _236) < 0.5)
            {
                _299 = true;
                break;
            }
        }
        if ((cbInstanceData._m0[6u].w < 1.0) && ((cbInstanceData._m0[6u].w + _236) < 0.5))
        {
            _299 = true;
            break;
        }
        if ((_235 + _138) < _233.x)
        {
            _299 = true;
            break;
        }
        _299 = false;
        break;
    }
    if (_299)
    {
        discard_state = true;
    }
    SV_Target.x = ((cbModelParam._m0[0u].x * _228) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.y = ((cbModelParam._m0[0u].y * _229) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.z = _155 / (_155 + 10.0);
    SV_Target.w = 1.0;
    discard_exit();
}


