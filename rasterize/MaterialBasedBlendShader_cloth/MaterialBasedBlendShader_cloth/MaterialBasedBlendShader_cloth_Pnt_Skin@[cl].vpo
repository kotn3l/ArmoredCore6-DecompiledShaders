#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[24];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR;
layout(location = 7) in vec4 COLOR_1;
layout(location = 8) in ivec4 TEXCOORD;
layout(location = 1) out vec4 TEXCOORD_1;
layout(location = 2) out vec4 TEXCOORD_1_1;

void main()
{
    uint _72 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_1_1.x = 0.0;
    TEXCOORD_1_1.y = 0.0;
    TEXCOORD_1_1.z = 0.0;
    TEXCOORD_1_1.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _121 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _123 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _124 = _121 + 0.0;
    precise float _125 = _123 + 0.0;
    float _133 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _135 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _136 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _377;
    float _378;
    float _379;
    float _380;
    float _381;
    float _382;
    float _383;
    float _384;
    float _385;
    float _386;
    float _387;
    float _388;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _160 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _72;
        precise float _164 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _169 = isnan(_164) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _164 : max(0.001000000047497451305389404296875, _164));
        precise float _171 = BLENDWEIGHT.x / _169;
        precise float _172 = BLENDWEIGHT.y / _169;
        precise float _173 = BLENDWEIGHT.z / _169;
        precise float _174 = BLENDWEIGHT.w / _169;
        uvec4 _182 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_160)).x * 13u) + 4u]);
        uint _183 = _182.x;
        uint _185 = (_183 + uint(float(BLENDINDICES.x))) * 3u;
        uint _192 = _185 + 1u;
        uint _199 = _185 + 2u;
        precise float _206 = _171 * cbObjMatrix._m0[_185].x;
        precise float _207 = _171 * cbObjMatrix._m0[_192].x;
        precise float _208 = _171 * cbObjMatrix._m0[_199].x;
        precise float _209 = _171 * cbObjMatrix._m0[_185].y;
        precise float _210 = _171 * cbObjMatrix._m0[_192].y;
        precise float _211 = _171 * cbObjMatrix._m0[_199].y;
        precise float _212 = _171 * cbObjMatrix._m0[_185].z;
        precise float _213 = _171 * cbObjMatrix._m0[_192].z;
        precise float _214 = _171 * cbObjMatrix._m0[_199].z;
        precise float _215 = _171 * cbObjMatrix._m0[_185].w;
        precise float _216 = _171 * cbObjMatrix._m0[_192].w;
        precise float _217 = _171 * cbObjMatrix._m0[_199].w;
        uint _220 = (_183 + uint(float(BLENDINDICES.y))) * 3u;
        uint _227 = _220 + 1u;
        uint _234 = _220 + 2u;
        precise float _241 = _172 * cbObjMatrix._m0[_220].x;
        precise float _242 = _172 * cbObjMatrix._m0[_227].x;
        precise float _243 = _172 * cbObjMatrix._m0[_234].x;
        precise float _244 = _172 * cbObjMatrix._m0[_220].y;
        precise float _245 = _172 * cbObjMatrix._m0[_227].y;
        precise float _246 = _172 * cbObjMatrix._m0[_234].y;
        precise float _247 = _172 * cbObjMatrix._m0[_220].z;
        precise float _248 = _172 * cbObjMatrix._m0[_227].z;
        precise float _249 = _172 * cbObjMatrix._m0[_234].z;
        precise float _250 = _172 * cbObjMatrix._m0[_220].w;
        precise float _251 = _172 * cbObjMatrix._m0[_227].w;
        precise float _252 = _172 * cbObjMatrix._m0[_234].w;
        precise float _253 = _206 + _241;
        precise float _254 = _207 + _242;
        precise float _255 = _208 + _243;
        precise float _256 = _209 + _244;
        precise float _257 = _210 + _245;
        precise float _258 = _211 + _246;
        precise float _259 = _212 + _247;
        precise float _260 = _213 + _248;
        precise float _261 = _214 + _249;
        precise float _262 = _215 + _250;
        precise float _263 = _216 + _251;
        precise float _264 = _217 + _252;
        uint _267 = (_183 + uint(float(BLENDINDICES.z))) * 3u;
        uint _274 = _267 + 1u;
        uint _281 = _267 + 2u;
        precise float _288 = _173 * cbObjMatrix._m0[_267].x;
        precise float _289 = _173 * cbObjMatrix._m0[_274].x;
        precise float _290 = _173 * cbObjMatrix._m0[_281].x;
        precise float _291 = _173 * cbObjMatrix._m0[_267].y;
        precise float _292 = _173 * cbObjMatrix._m0[_274].y;
        precise float _293 = _173 * cbObjMatrix._m0[_281].y;
        precise float _294 = _173 * cbObjMatrix._m0[_267].z;
        precise float _295 = _173 * cbObjMatrix._m0[_274].z;
        precise float _296 = _173 * cbObjMatrix._m0[_281].z;
        precise float _297 = _173 * cbObjMatrix._m0[_267].w;
        precise float _298 = _173 * cbObjMatrix._m0[_274].w;
        precise float _299 = _173 * cbObjMatrix._m0[_281].w;
        precise float _300 = _253 + _288;
        precise float _301 = _254 + _289;
        precise float _302 = _255 + _290;
        precise float _303 = _256 + _291;
        precise float _304 = _257 + _292;
        precise float _305 = _258 + _293;
        precise float _306 = _259 + _294;
        precise float _307 = _260 + _295;
        precise float _308 = _261 + _296;
        precise float _309 = _262 + _297;
        precise float _310 = _263 + _298;
        precise float _311 = _264 + _299;
        uint _314 = (_183 + uint(float(BLENDINDICES.w))) * 3u;
        uint _321 = _314 + 1u;
        uint _328 = _314 + 2u;
        precise float _335 = _174 * cbObjMatrix._m0[_314].x;
        precise float _336 = _174 * cbObjMatrix._m0[_321].x;
        precise float _337 = _174 * cbObjMatrix._m0[_328].x;
        precise float _338 = _174 * cbObjMatrix._m0[_314].y;
        precise float _339 = _174 * cbObjMatrix._m0[_321].y;
        precise float _340 = _174 * cbObjMatrix._m0[_328].y;
        precise float _341 = _174 * cbObjMatrix._m0[_314].z;
        precise float _342 = _174 * cbObjMatrix._m0[_321].z;
        precise float _343 = _174 * cbObjMatrix._m0[_328].z;
        precise float _344 = _174 * cbObjMatrix._m0[_314].w;
        precise float _345 = _174 * cbObjMatrix._m0[_321].w;
        precise float _346 = _174 * cbObjMatrix._m0[_328].w;
        precise float _347 = _300 + _335;
        precise float _348 = _301 + _336;
        precise float _349 = _302 + _337;
        precise float _350 = _303 + _338;
        precise float _351 = _304 + _339;
        precise float _352 = _305 + _340;
        precise float _353 = _306 + _341;
        precise float _354 = _307 + _342;
        precise float _355 = _308 + _343;
        precise float _356 = _309 + _344;
        precise float _357 = _310 + _345;
        precise float _358 = _311 + _346;
        _377 = _347;
        _378 = _350;
        _379 = _353;
        _380 = _356;
        _381 = _348;
        _382 = _351;
        _383 = _354;
        _384 = _357;
        _385 = _349;
        _386 = _352;
        _387 = _355;
        _388 = _358;
    }
    else
    {
        _377 = cbvModelParam._m0[0u].x;
        _378 = cbvModelParam._m0[0u].y;
        _379 = cbvModelParam._m0[0u].z;
        _380 = cbvModelParam._m0[0u].w;
        _381 = cbvModelParam._m0[1u].x;
        _382 = cbvModelParam._m0[1u].y;
        _383 = cbvModelParam._m0[1u].z;
        _384 = cbvModelParam._m0[1u].w;
        _385 = cbvModelParam._m0[2u].x;
        _386 = cbvModelParam._m0[2u].y;
        _387 = cbvModelParam._m0[2u].z;
        _388 = cbvModelParam._m0[2u].w;
    }
    precise float _389 = POSITION.x * _377;
    precise float _390 = POSITION.y * _378;
    precise float _391 = _390 + _389;
    precise float _392 = POSITION.z * _379;
    precise float _393 = _392 + _391;
    precise float _394 = 1.0 * _380;
    precise float _395 = _394 + _393;
    precise float _396 = POSITION.x * _381;
    precise float _397 = POSITION.y * _382;
    precise float _398 = _397 + _396;
    precise float _399 = POSITION.z * _383;
    precise float _400 = _399 + _398;
    precise float _401 = 1.0 * _384;
    precise float _402 = _401 + _400;
    precise float _403 = POSITION.x * _385;
    precise float _404 = POSITION.y * _386;
    precise float _405 = _404 + _403;
    precise float _406 = POSITION.z * _387;
    precise float _407 = _406 + _405;
    precise float _408 = 1.0 * _388;
    precise float _409 = _408 + _407;
    uint _423 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _72;
    precise float _433 = _395 - cbSceneParam._m0[3u].x;
    precise float _434 = _402 - cbSceneParam._m0[3u].y;
    precise float _435 = _409 - cbSceneParam._m0[3u].z;
    precise float _462 = _433 * cbSceneParam._m0[24u].x;
    precise float _463 = _434 * cbSceneParam._m0[24u].y;
    precise float _464 = _463 + _462;
    precise float _465 = _435 * cbSceneParam._m0[24u].z;
    precise float _466 = _465 + _464;
    precise float _467 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _468 = _467 + _466;
    precise float _469 = _433 * cbSceneParam._m0[25u].x;
    precise float _470 = _434 * cbSceneParam._m0[25u].y;
    precise float _471 = _470 + _469;
    precise float _472 = _435 * cbSceneParam._m0[25u].z;
    precise float _473 = _472 + _471;
    precise float _474 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _475 = _474 + _473;
    precise float _476 = _433 * cbSceneParam._m0[26u].x;
    precise float _477 = _434 * cbSceneParam._m0[26u].y;
    precise float _478 = _477 + _476;
    precise float _479 = _435 * cbSceneParam._m0[26u].z;
    precise float _480 = _479 + _478;
    precise float _481 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _482 = _481 + _480;
    precise float _483 = _433 * cbSceneParam._m0[27u].x;
    precise float _484 = _434 * cbSceneParam._m0[27u].y;
    precise float _485 = _484 + _483;
    precise float _486 = _435 * cbSceneParam._m0[27u].z;
    precise float _487 = _486 + _485;
    precise float _488 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _489 = _488 + _487;
    precise float _490 = _124 * 2.0;
    precise float _492 = _125 * 2.0;
    precise float _493 = _490 + (-1.0);
    precise float _495 = 1.0 - _492;
    precise float _496 = _493 * _489;
    precise float _497 = _495 * _489;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_1_1.x = 0.0;
    TEXCOORD_1_1.y = 0.0;
    TEXCOORD_1_1.z = 0.0;
    TEXCOORD_1_1.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    gl_Position.x = _496;
    gl_Position.y = _497;
    gl_Position.z = _482;
    gl_Position.w = _489;
    TEXCOORD_1.x = _468;
    TEXCOORD_1.y = _475;
    TEXCOORD_1.z = _482;
    TEXCOORD_1.w = _489;
    TEXCOORD_1_1.x = fma(_136, _379, fma(_135, _378, _377 * _133));
    TEXCOORD_1_1.y = fma(_136, _383, fma(_135, _382, _381 * _133));
    TEXCOORD_1_1.z = fma(_136, _387, fma(_135, _386, _385 * _133));
    TEXCOORD_1_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_423)).x);
}


