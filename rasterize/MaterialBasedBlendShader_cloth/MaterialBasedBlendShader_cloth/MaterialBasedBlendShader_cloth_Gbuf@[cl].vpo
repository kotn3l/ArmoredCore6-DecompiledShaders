#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[24];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in vec4 COLOR;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out vec4 TEXCOORD_4;
layout(location = 5) out float TEXCOORD_8;
layout(location = 5, component = 1) out float TEXCOORD_14;

void main()
{
    uint _76 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_14 = 0.0;
    float _181 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _183 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _184 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _191 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _192 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _193 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _260;
    float _261;
    float _262;
    float _263;
    float _264;
    float _265;
    float _266;
    float _267;
    float _268;
    float _269;
    float _270;
    float _271;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _208 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _76;
        uint _221 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_208)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
        uint _228 = _221 + 1u;
        uint _235 = _221 + 2u;
        _260 = cbObjMatrix._m0[_221].x;
        _261 = cbObjMatrix._m0[_221].y;
        _262 = cbObjMatrix._m0[_221].z;
        _263 = cbObjMatrix._m0[_221].w;
        _264 = cbObjMatrix._m0[_228].x;
        _265 = cbObjMatrix._m0[_228].y;
        _266 = cbObjMatrix._m0[_228].z;
        _267 = cbObjMatrix._m0[_228].w;
        _268 = cbObjMatrix._m0[_235].x;
        _269 = cbObjMatrix._m0[_235].y;
        _270 = cbObjMatrix._m0[_235].z;
        _271 = cbObjMatrix._m0[_235].w;
    }
    else
    {
        _260 = cbvModelParam._m0[0u].x;
        _261 = cbvModelParam._m0[0u].y;
        _262 = cbvModelParam._m0[0u].z;
        _263 = cbvModelParam._m0[0u].w;
        _264 = cbvModelParam._m0[1u].x;
        _265 = cbvModelParam._m0[1u].y;
        _266 = cbvModelParam._m0[1u].z;
        _267 = cbvModelParam._m0[1u].w;
        _268 = cbvModelParam._m0[2u].x;
        _269 = cbvModelParam._m0[2u].y;
        _270 = cbvModelParam._m0[2u].z;
        _271 = cbvModelParam._m0[2u].w;
    }
    precise float _272 = POSITION.x * _260;
    precise float _273 = POSITION.y * _261;
    precise float _274 = _273 + _272;
    precise float _275 = POSITION.z * _262;
    precise float _276 = _275 + _274;
    precise float _277 = 1.0 * _263;
    precise float _279 = _277 + _276;
    precise float _280 = POSITION.x * _264;
    precise float _281 = POSITION.y * _265;
    precise float _282 = _281 + _280;
    precise float _283 = POSITION.z * _266;
    precise float _284 = _283 + _282;
    precise float _285 = 1.0 * _267;
    precise float _286 = _285 + _284;
    precise float _287 = POSITION.x * _268;
    precise float _288 = POSITION.y * _269;
    precise float _289 = _288 + _287;
    precise float _290 = POSITION.z * _270;
    precise float _291 = _290 + _289;
    precise float _292 = 1.0 * _271;
    precise float _293 = _292 + _291;
    float _299 = cbSceneParam._m0[3u].x - _279;
    float _300 = cbSceneParam._m0[3u].y - _286;
    float _301 = cbSceneParam._m0[3u].z - _293;
    uint _322 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _76;
    precise float _336 = _279 - cbSceneParam._m0[3u].x;
    precise float _337 = _286 - cbSceneParam._m0[3u].y;
    precise float _338 = _293 - cbSceneParam._m0[3u].z;
    precise float _365 = _336 * cbSceneParam._m0[24u].x;
    precise float _366 = _337 * cbSceneParam._m0[24u].y;
    precise float _367 = _366 + _365;
    precise float _368 = _338 * cbSceneParam._m0[24u].z;
    precise float _369 = _368 + _367;
    precise float _370 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _371 = _370 + _369;
    precise float _372 = _336 * cbSceneParam._m0[25u].x;
    precise float _373 = _337 * cbSceneParam._m0[25u].y;
    precise float _374 = _373 + _372;
    precise float _375 = _338 * cbSceneParam._m0[25u].z;
    precise float _376 = _375 + _374;
    precise float _377 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _378 = _377 + _376;
    precise float _379 = _336 * cbSceneParam._m0[26u].x;
    precise float _380 = _337 * cbSceneParam._m0[26u].y;
    precise float _381 = _380 + _379;
    precise float _382 = _338 * cbSceneParam._m0[26u].z;
    precise float _383 = _382 + _381;
    precise float _384 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _385 = _384 + _383;
    precise float _386 = _336 * cbSceneParam._m0[27u].x;
    precise float _387 = _337 * cbSceneParam._m0[27u].y;
    precise float _388 = _387 + _386;
    precise float _389 = _338 * cbSceneParam._m0[27u].z;
    precise float _390 = _389 + _388;
    precise float _391 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _392 = _391 + _390;
    gl_Position.x = _371;
    gl_Position.y = _378;
    gl_Position.z = _385;
    gl_Position.w = _392;
    NORMAL_1.x = fma(_184, _262, fma(_183, _261, _260 * _181));
    NORMAL_1.y = fma(_184, _266, fma(_183, _265, _264 * _181));
    NORMAL_1.z = fma(_184, _270, fma(_183, _269, _268 * _181));
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_322)).x);
    TANGENT_1.x = fma(_193, _262, fma(_192, _261, _260 * _191));
    TANGENT_1.y = fma(_193, _266, fma(_192, _265, _264 * _191));
    TANGENT_1.z = fma(_193, _270, fma(_192, _269, _268 * _191));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = COLOR.x;
    TEXCOORD_1.y = COLOR.y;
    TEXCOORD_1.z = COLOR.z;
    TEXCOORD_1.w = COLOR.w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_4.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_4.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_8 = COLOR_1.x;
    TEXCOORD_14 = sqrt(((_299 * _299) + (_300 * _300)) + (_301 * _301));
}


