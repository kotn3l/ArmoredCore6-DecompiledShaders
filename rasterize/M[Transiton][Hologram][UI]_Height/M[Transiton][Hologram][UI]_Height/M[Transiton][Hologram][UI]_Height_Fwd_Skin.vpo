#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[21];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 3) uniform texture2D M_Transiton_Hologram_UI_Height_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec4 TEXCOORD_5;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _190 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _192 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _193 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _194 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _199 = _190 * cbTexScroll._m0[0u].x;
    precise float _200 = _192 * cbTexScroll._m0[0u].y;
    precise float _203 = _199 + cbTexScroll._m0[0u].z;
    precise float _204 = _200 + cbTexScroll._m0[0u].w;
    precise float _218 = float(NORMAL.x) + (-127.0);
    precise float _220 = float(NORMAL.y) + (-127.0);
    precise float _221 = float(NORMAL.z) + (-127.0);
    precise float _222 = _218 * 0.0078740157186985015869140625;
    precise float _224 = _220 * 0.0078740157186985015869140625;
    precise float _225 = _221 * 0.0078740157186985015869140625;
    float _234 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _235 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _236 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _248 = _222 * cbMtdParam._m0[20u].x;
    precise float _249 = _224 * cbMtdParam._m0[20u].y;
    precise float _250 = _225 * cbMtdParam._m0[20u].z;
    precise float _256 = cbPerFrame._m0[22u].x * cbMtdParam._m0[17u].x;
    precise float _257 = cbPerFrame._m0[22u].x * cbMtdParam._m0[17u].y;
    precise float _258 = _203 + _256;
    precise float _259 = _204 + _257;
    precise float _266 = _258 * cbTextureTilingScale._m0[3u].x;
    precise float _267 = cbTextureTilingScale._m0[3u].y * _259;
    precise float _268 = cbTextureTilingScale._m0[3u].z + _266;
    precise float _269 = cbTextureTilingScale._m0[3u].w + _267;
    vec4 _272 = textureLod(sampler2D(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_2, SS_DiffuseMap), vec2(_268, _269), 0.0);
    float _275 = _272.x;
    precise float _276 = _248 * _275;
    precise float _277 = _249 * _275;
    precise float _278 = _250 * _275;
    precise float _279 = _248 + _276;
    precise float _280 = _249 + _277;
    precise float _281 = _250 + _278;
    precise float _282 = _248 * 0.0;
    precise float _283 = _249 * 0.0;
    precise float _284 = _250 * 0.0;
    precise float _285 = _282 + _279;
    precise float _286 = _283 + _280;
    precise float _287 = _284 + _281;
    precise float _288 = POSITION.x + _285;
    precise float _289 = POSITION.y + _286;
    precise float _290 = POSITION.z + _287;
    uint _295 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _297 = texelFetch(g_InstanceIndexBuffer, int(_295));
    uint _298 = _297.x;
    precise float _299 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _304 = isnan(_299) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _299 : max(0.001000000047497451305389404296875, _299));
    precise float _306 = BLENDWEIGHT.x / _304;
    precise float _307 = BLENDWEIGHT.y / _304;
    precise float _308 = BLENDWEIGHT.z / _304;
    precise float _309 = BLENDWEIGHT.w / _304;
    uint _311 = _298 * 13u;
    uvec4 _316 = floatBitsToUint(cbInstanceData._m0[_311 + 4u]);
    uint _317 = _316.x;
    uint _319 = (_317 + uint(float(BLENDINDICES.x))) * 3u;
    uint _326 = _319 + 1u;
    uint _333 = _319 + 2u;
    precise float _340 = _306 * cbObjMatrix._m0[_319].x;
    precise float _341 = _306 * cbObjMatrix._m0[_326].x;
    precise float _342 = _306 * cbObjMatrix._m0[_333].x;
    precise float _343 = _306 * cbObjMatrix._m0[_319].y;
    precise float _344 = _306 * cbObjMatrix._m0[_326].y;
    precise float _345 = _306 * cbObjMatrix._m0[_333].y;
    precise float _346 = _306 * cbObjMatrix._m0[_319].z;
    precise float _347 = _306 * cbObjMatrix._m0[_326].z;
    precise float _348 = _306 * cbObjMatrix._m0[_333].z;
    precise float _349 = _306 * cbObjMatrix._m0[_319].w;
    precise float _350 = _306 * cbObjMatrix._m0[_326].w;
    precise float _351 = _306 * cbObjMatrix._m0[_333].w;
    uint _354 = (_317 + uint(float(BLENDINDICES.y))) * 3u;
    uint _361 = _354 + 1u;
    uint _368 = _354 + 2u;
    precise float _375 = _307 * cbObjMatrix._m0[_354].x;
    precise float _376 = _307 * cbObjMatrix._m0[_361].x;
    precise float _377 = _307 * cbObjMatrix._m0[_368].x;
    precise float _378 = _307 * cbObjMatrix._m0[_354].y;
    precise float _379 = _307 * cbObjMatrix._m0[_361].y;
    precise float _380 = _307 * cbObjMatrix._m0[_368].y;
    precise float _381 = _307 * cbObjMatrix._m0[_354].z;
    precise float _382 = _307 * cbObjMatrix._m0[_361].z;
    precise float _383 = _307 * cbObjMatrix._m0[_368].z;
    precise float _384 = _307 * cbObjMatrix._m0[_354].w;
    precise float _385 = _307 * cbObjMatrix._m0[_361].w;
    precise float _386 = _307 * cbObjMatrix._m0[_368].w;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    uint _401 = (_317 + uint(float(BLENDINDICES.z))) * 3u;
    uint _408 = _401 + 1u;
    uint _415 = _401 + 2u;
    precise float _422 = _308 * cbObjMatrix._m0[_401].x;
    precise float _423 = _308 * cbObjMatrix._m0[_408].x;
    precise float _424 = _308 * cbObjMatrix._m0[_415].x;
    precise float _425 = _308 * cbObjMatrix._m0[_401].y;
    precise float _426 = _308 * cbObjMatrix._m0[_408].y;
    precise float _427 = _308 * cbObjMatrix._m0[_415].y;
    precise float _428 = _308 * cbObjMatrix._m0[_401].z;
    precise float _429 = _308 * cbObjMatrix._m0[_408].z;
    precise float _430 = _308 * cbObjMatrix._m0[_415].z;
    precise float _431 = _308 * cbObjMatrix._m0[_401].w;
    precise float _432 = _308 * cbObjMatrix._m0[_408].w;
    precise float _433 = _308 * cbObjMatrix._m0[_415].w;
    precise float _434 = _387 + _422;
    precise float _435 = _388 + _423;
    precise float _436 = _389 + _424;
    precise float _437 = _390 + _425;
    precise float _438 = _391 + _426;
    precise float _439 = _392 + _427;
    precise float _440 = _393 + _428;
    precise float _441 = _394 + _429;
    precise float _442 = _395 + _430;
    precise float _443 = _396 + _431;
    precise float _444 = _397 + _432;
    precise float _445 = _398 + _433;
    uint _448 = (_317 + uint(float(BLENDINDICES.w))) * 3u;
    uint _455 = _448 + 1u;
    uint _462 = _448 + 2u;
    precise float _469 = _309 * cbObjMatrix._m0[_448].x;
    precise float _470 = _309 * cbObjMatrix._m0[_455].x;
    precise float _471 = _309 * cbObjMatrix._m0[_462].x;
    precise float _472 = _309 * cbObjMatrix._m0[_448].y;
    precise float _473 = _309 * cbObjMatrix._m0[_455].y;
    precise float _474 = _309 * cbObjMatrix._m0[_462].y;
    precise float _475 = _309 * cbObjMatrix._m0[_448].z;
    precise float _476 = _309 * cbObjMatrix._m0[_455].z;
    precise float _477 = _309 * cbObjMatrix._m0[_462].z;
    precise float _478 = _309 * cbObjMatrix._m0[_448].w;
    precise float _479 = _309 * cbObjMatrix._m0[_455].w;
    precise float _480 = _309 * cbObjMatrix._m0[_462].w;
    precise float _481 = _434 + _469;
    precise float _482 = _435 + _470;
    precise float _483 = _436 + _471;
    precise float _484 = _437 + _472;
    precise float _485 = _438 + _473;
    precise float _486 = _439 + _474;
    precise float _487 = _440 + _475;
    precise float _488 = _441 + _476;
    precise float _489 = _442 + _477;
    precise float _490 = _443 + _478;
    precise float _491 = _444 + _479;
    precise float _492 = _445 + _480;
    precise float _493 = _288 * _481;
    precise float _494 = _289 * _484;
    precise float _495 = _494 + _493;
    precise float _496 = _290 * _487;
    precise float _497 = _496 + _495;
    precise float _498 = 1.0 * _490;
    precise float _499 = _498 + _497;
    precise float _500 = _288 * _482;
    precise float _501 = _289 * _485;
    precise float _502 = _501 + _500;
    precise float _503 = _290 * _488;
    precise float _504 = _503 + _502;
    precise float _505 = 1.0 * _491;
    precise float _506 = _505 + _504;
    precise float _507 = _288 * _483;
    precise float _508 = _289 * _486;
    precise float _509 = _508 + _507;
    precise float _510 = _290 * _489;
    precise float _511 = _510 + _509;
    precise float _512 = 1.0 * _492;
    precise float _513 = _512 + _511;
    precise float _533 = _499 + 0.0;
    precise float _534 = _506 + 0.0;
    precise float _535 = _513 + 0.0;
    precise float _541 = _533 - cbSceneParam._m0[3u].x;
    precise float _542 = _534 - cbSceneParam._m0[3u].y;
    precise float _543 = _535 - cbSceneParam._m0[3u].z;
    precise float _570 = _541 * cbSceneParam._m0[24u].x;
    precise float _571 = _542 * cbSceneParam._m0[24u].y;
    precise float _572 = _571 + _570;
    precise float _573 = _543 * cbSceneParam._m0[24u].z;
    precise float _574 = _573 + _572;
    precise float _575 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _576 = _575 + _574;
    precise float _577 = _541 * cbSceneParam._m0[25u].x;
    precise float _578 = _542 * cbSceneParam._m0[25u].y;
    precise float _579 = _578 + _577;
    precise float _580 = _543 * cbSceneParam._m0[25u].z;
    precise float _581 = _580 + _579;
    precise float _582 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _583 = _582 + _581;
    precise float _584 = _541 * cbSceneParam._m0[26u].x;
    precise float _585 = _542 * cbSceneParam._m0[26u].y;
    precise float _586 = _585 + _584;
    precise float _587 = _543 * cbSceneParam._m0[26u].z;
    precise float _588 = _587 + _586;
    precise float _589 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _590 = _589 + _588;
    precise float _591 = _541 * cbSceneParam._m0[27u].x;
    precise float _592 = _542 * cbSceneParam._m0[27u].y;
    precise float _593 = _592 + _591;
    precise float _594 = _543 * cbSceneParam._m0[27u].z;
    precise float _595 = _594 + _593;
    precise float _596 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _597 = _596 + _595;
    gl_Position.x = _576;
    gl_Position.y = _583;
    gl_Position.z = _590;
    gl_Position.w = _597;
    POSITION_1.x = _576;
    POSITION_1.y = _583;
    POSITION_1.z = _590;
    POSITION_1.w = _597;
    NORMAL_1.x = fma(_225, _487, fma(_224, _484, _481 * _222));
    NORMAL_1.y = fma(_225, _488, fma(_224, _485, _482 * _222));
    NORMAL_1.z = fma(_225, _489, fma(_224, _486, _483 * _222));
    NORMAL_1.w = float(_298);
    TANGENT_1.x = fma(_236, _487, fma(_235, _484, _481 * _234));
    TANGENT_1.y = fma(_236, _488, fma(_235, _485, _482 * _234));
    TANGENT_1.z = fma(_236, _489, fma(_235, _486, _483 * _234));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = _203;
    TEXCOORD_2.y = _204;
    TEXCOORD_2.z = (cbTexScroll._m0[1u].x * _193) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = (cbTexScroll._m0[1u].y * _194) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
    gl_ClipDistance[0u] = dot(vec4(_576, _583, _590, _597), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_576, _583, _590, _597), vec4(cbInstanceData._m0[_311 + 3u]));
}


