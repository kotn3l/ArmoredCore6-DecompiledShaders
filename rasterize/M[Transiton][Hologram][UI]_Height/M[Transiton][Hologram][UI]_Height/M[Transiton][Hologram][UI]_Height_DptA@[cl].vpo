#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[21];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 3) uniform texture2D M_Transiton_Hologram_UI_Height_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out vec2 TEXCOORD_9;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    precise float _174 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _176 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _177 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _178 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _183 = _174 * cbTexScroll._m0[0u].x;
    precise float _184 = _176 * cbTexScroll._m0[0u].y;
    precise float _187 = _183 + cbTexScroll._m0[0u].z;
    precise float _188 = _184 + cbTexScroll._m0[0u].w;
    precise float _202 = float(NORMAL.x) + (-127.0);
    precise float _204 = float(NORMAL.y) + (-127.0);
    precise float _205 = float(NORMAL.z) + (-127.0);
    precise float _206 = _202 * 0.0078740157186985015869140625;
    precise float _208 = _204 * 0.0078740157186985015869140625;
    precise float _209 = _205 * 0.0078740157186985015869140625;
    float _219 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _220 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _221 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _229 = _206 * cbMtdParam._m0[20u].x;
    precise float _230 = _208 * cbMtdParam._m0[20u].y;
    precise float _231 = _209 * cbMtdParam._m0[20u].z;
    precise float _237 = cbPerFrame._m0[22u].x * cbMtdParam._m0[17u].x;
    precise float _238 = cbPerFrame._m0[22u].x * cbMtdParam._m0[17u].y;
    precise float _239 = _187 + _237;
    precise float _240 = _188 + _238;
    precise float _247 = _239 * cbTextureTilingScale._m0[3u].x;
    precise float _248 = cbTextureTilingScale._m0[3u].y * _240;
    precise float _249 = cbTextureTilingScale._m0[3u].z + _247;
    precise float _250 = cbTextureTilingScale._m0[3u].w + _248;
    vec4 _253 = textureLod(sampler2D(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_2, SS_DiffuseMap), vec2(_249, _250), 0.0);
    float _255 = _253.x;
    precise float _256 = _229 * _255;
    precise float _257 = _230 * _255;
    precise float _258 = _231 * _255;
    precise float _259 = _229 + _256;
    precise float _260 = _230 + _257;
    precise float _261 = _231 + _258;
    precise float _262 = _229 * 0.0;
    precise float _263 = _230 * 0.0;
    precise float _264 = _231 * 0.0;
    precise float _265 = _262 + _259;
    precise float _266 = _263 + _260;
    precise float _267 = _264 + _261;
    precise float _268 = POSITION.x + _265;
    precise float _269 = POSITION.y + _266;
    precise float _270 = POSITION.z + _267;
    uint _275 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _277 = texelFetch(g_InstanceIndexBuffer, int(_275));
    uint _278 = _277.x;
    uint _288 = (floatBitsToUint(cbInstanceData._m0[(_278 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _295 = _288 + 1u;
    uint _302 = _288 + 2u;
    precise float _309 = _268 * cbObjMatrix._m0[_288].x;
    precise float _310 = _269 * cbObjMatrix._m0[_288].y;
    precise float _311 = _310 + _309;
    precise float _312 = _270 * cbObjMatrix._m0[_288].z;
    precise float _313 = _312 + _311;
    precise float _314 = 1.0 * cbObjMatrix._m0[_288].w;
    precise float _316 = _314 + _313;
    precise float _317 = _268 * cbObjMatrix._m0[_295].x;
    precise float _318 = _269 * cbObjMatrix._m0[_295].y;
    precise float _319 = _318 + _317;
    precise float _320 = _270 * cbObjMatrix._m0[_295].z;
    precise float _321 = _320 + _319;
    precise float _322 = 1.0 * cbObjMatrix._m0[_295].w;
    precise float _323 = _322 + _321;
    precise float _324 = _268 * cbObjMatrix._m0[_302].x;
    precise float _325 = _269 * cbObjMatrix._m0[_302].y;
    precise float _326 = _325 + _324;
    precise float _327 = _270 * cbObjMatrix._m0[_302].z;
    precise float _328 = _327 + _326;
    precise float _329 = 1.0 * cbObjMatrix._m0[_302].w;
    precise float _330 = _329 + _328;
    precise float _351 = _316 + 0.0;
    precise float _352 = _323 + 0.0;
    precise float _353 = _330 + 0.0;
    precise float _359 = _351 - cbSceneParam._m0[3u].x;
    precise float _360 = _352 - cbSceneParam._m0[3u].y;
    precise float _361 = _353 - cbSceneParam._m0[3u].z;
    precise float _388 = _359 * cbSceneParam._m0[24u].x;
    precise float _389 = _360 * cbSceneParam._m0[24u].y;
    precise float _390 = _389 + _388;
    precise float _391 = _361 * cbSceneParam._m0[24u].z;
    precise float _392 = _391 + _390;
    precise float _393 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _394 = _393 + _392;
    precise float _395 = _359 * cbSceneParam._m0[25u].x;
    precise float _396 = _360 * cbSceneParam._m0[25u].y;
    precise float _397 = _396 + _395;
    precise float _398 = _361 * cbSceneParam._m0[25u].z;
    precise float _399 = _398 + _397;
    precise float _400 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _401 = _400 + _399;
    precise float _402 = _359 * cbSceneParam._m0[26u].x;
    precise float _403 = _360 * cbSceneParam._m0[26u].y;
    precise float _404 = _403 + _402;
    precise float _405 = _361 * cbSceneParam._m0[26u].z;
    precise float _406 = _405 + _404;
    precise float _407 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _408 = _407 + _406;
    precise float _409 = _359 * cbSceneParam._m0[27u].x;
    precise float _410 = _360 * cbSceneParam._m0[27u].y;
    precise float _411 = _410 + _409;
    precise float _412 = _361 * cbSceneParam._m0[27u].z;
    precise float _413 = _412 + _411;
    precise float _414 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _415 = _414 + _413;
    gl_Position.x = _394;
    gl_Position.y = _401;
    gl_Position.z = _408;
    gl_Position.w = _415;
    POSITION_1.x = _394;
    POSITION_1.y = _401;
    POSITION_1.z = _408;
    POSITION_1.w = _415;
    NORMAL_1.x = fma(_209, cbObjMatrix._m0[_288].z, fma(_208, cbObjMatrix._m0[_288].y, cbObjMatrix._m0[_288].x * _206));
    NORMAL_1.y = fma(_209, cbObjMatrix._m0[_295].z, fma(_208, cbObjMatrix._m0[_295].y, cbObjMatrix._m0[_295].x * _206));
    NORMAL_1.z = fma(_209, cbObjMatrix._m0[_302].z, fma(_208, cbObjMatrix._m0[_302].y, cbObjMatrix._m0[_302].x * _206));
    NORMAL_1.w = float(_278);
    TANGENT_1.x = fma(_221, cbObjMatrix._m0[_288].z, fma(_220, cbObjMatrix._m0[_288].y, cbObjMatrix._m0[_288].x * _219));
    TANGENT_1.y = fma(_221, cbObjMatrix._m0[_295].z, fma(_220, cbObjMatrix._m0[_295].y, cbObjMatrix._m0[_295].x * _219));
    TANGENT_1.z = fma(_221, cbObjMatrix._m0[_302].z, fma(_220, cbObjMatrix._m0[_302].y, cbObjMatrix._m0[_302].x * _219));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = _187;
    TEXCOORD_2.y = _188;
    TEXCOORD_2.z = (cbTexScroll._m0[1u].x * _177) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = (cbTexScroll._m0[1u].y * _178) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
    TEXCOORD_9.x = _408;
    TEXCOORD_9.y = _415;
}


