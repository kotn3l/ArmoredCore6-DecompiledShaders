#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[21];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 3) uniform texture2D M_Transiton_Hologram_UI_Height_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec4 TEXCOORD_5;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    precise float _185 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _187 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _188 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _189 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _194 = _185 * cbTexScroll._m0[0u].x;
    precise float _195 = _187 * cbTexScroll._m0[0u].y;
    precise float _198 = _194 + cbTexScroll._m0[0u].z;
    precise float _199 = _195 + cbTexScroll._m0[0u].w;
    precise float _213 = float(NORMAL.x) + (-127.0);
    precise float _215 = float(NORMAL.y) + (-127.0);
    precise float _216 = float(NORMAL.z) + (-127.0);
    precise float _217 = _213 * 0.0078740157186985015869140625;
    precise float _219 = _215 * 0.0078740157186985015869140625;
    precise float _220 = _216 * 0.0078740157186985015869140625;
    float _229 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _230 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _231 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _243 = _217 * cbMtdParam._m0[20u].x;
    precise float _244 = _219 * cbMtdParam._m0[20u].y;
    precise float _245 = _220 * cbMtdParam._m0[20u].z;
    precise float _251 = cbPerFrame._m0[22u].x * cbMtdParam._m0[17u].x;
    precise float _252 = cbPerFrame._m0[22u].x * cbMtdParam._m0[17u].y;
    precise float _253 = _198 + _251;
    precise float _254 = _199 + _252;
    precise float _261 = _253 * cbTextureTilingScale._m0[3u].x;
    precise float _262 = cbTextureTilingScale._m0[3u].y * _254;
    precise float _263 = cbTextureTilingScale._m0[3u].z + _261;
    precise float _264 = cbTextureTilingScale._m0[3u].w + _262;
    vec4 _267 = textureLod(sampler2D(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_2, SS_DiffuseMap), vec2(_263, _264), 0.0);
    float _270 = _267.x;
    precise float _271 = _243 * _270;
    precise float _272 = _244 * _270;
    precise float _273 = _245 * _270;
    precise float _274 = _243 + _271;
    precise float _275 = _244 + _272;
    precise float _276 = _245 + _273;
    precise float _277 = _243 * 0.0;
    precise float _278 = _244 * 0.0;
    precise float _279 = _245 * 0.0;
    precise float _280 = _277 + _274;
    precise float _281 = _278 + _275;
    precise float _282 = _279 + _276;
    precise float _283 = POSITION.x + _280;
    precise float _284 = POSITION.y + _281;
    precise float _285 = POSITION.z + _282;
    uint _290 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _292 = texelFetch(g_InstanceIndexBuffer, int(_290));
    uint _293 = _292.x;
    precise float _294 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _299 = isnan(_294) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _294 : max(0.001000000047497451305389404296875, _294));
    precise float _301 = BLENDWEIGHT.x / _299;
    precise float _302 = BLENDWEIGHT.y / _299;
    precise float _303 = BLENDWEIGHT.z / _299;
    precise float _304 = BLENDWEIGHT.w / _299;
    uvec4 _311 = floatBitsToUint(cbInstanceData._m0[(_293 * 13u) + 4u]);
    uint _312 = _311.x;
    uint _314 = (_312 + uint(float(BLENDINDICES.x))) * 3u;
    uint _321 = _314 + 1u;
    uint _328 = _314 + 2u;
    precise float _335 = _301 * cbObjMatrix._m0[_314].x;
    precise float _336 = _301 * cbObjMatrix._m0[_321].x;
    precise float _337 = _301 * cbObjMatrix._m0[_328].x;
    precise float _338 = _301 * cbObjMatrix._m0[_314].y;
    precise float _339 = _301 * cbObjMatrix._m0[_321].y;
    precise float _340 = _301 * cbObjMatrix._m0[_328].y;
    precise float _341 = _301 * cbObjMatrix._m0[_314].z;
    precise float _342 = _301 * cbObjMatrix._m0[_321].z;
    precise float _343 = _301 * cbObjMatrix._m0[_328].z;
    precise float _344 = _301 * cbObjMatrix._m0[_314].w;
    precise float _345 = _301 * cbObjMatrix._m0[_321].w;
    precise float _346 = _301 * cbObjMatrix._m0[_328].w;
    uint _349 = (_312 + uint(float(BLENDINDICES.y))) * 3u;
    uint _356 = _349 + 1u;
    uint _363 = _349 + 2u;
    precise float _370 = _302 * cbObjMatrix._m0[_349].x;
    precise float _371 = _302 * cbObjMatrix._m0[_356].x;
    precise float _372 = _302 * cbObjMatrix._m0[_363].x;
    precise float _373 = _302 * cbObjMatrix._m0[_349].y;
    precise float _374 = _302 * cbObjMatrix._m0[_356].y;
    precise float _375 = _302 * cbObjMatrix._m0[_363].y;
    precise float _376 = _302 * cbObjMatrix._m0[_349].z;
    precise float _377 = _302 * cbObjMatrix._m0[_356].z;
    precise float _378 = _302 * cbObjMatrix._m0[_363].z;
    precise float _379 = _302 * cbObjMatrix._m0[_349].w;
    precise float _380 = _302 * cbObjMatrix._m0[_356].w;
    precise float _381 = _302 * cbObjMatrix._m0[_363].w;
    precise float _382 = _335 + _370;
    precise float _383 = _336 + _371;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    uint _396 = (_312 + uint(float(BLENDINDICES.z))) * 3u;
    uint _403 = _396 + 1u;
    uint _410 = _396 + 2u;
    precise float _417 = _303 * cbObjMatrix._m0[_396].x;
    precise float _418 = _303 * cbObjMatrix._m0[_403].x;
    precise float _419 = _303 * cbObjMatrix._m0[_410].x;
    precise float _420 = _303 * cbObjMatrix._m0[_396].y;
    precise float _421 = _303 * cbObjMatrix._m0[_403].y;
    precise float _422 = _303 * cbObjMatrix._m0[_410].y;
    precise float _423 = _303 * cbObjMatrix._m0[_396].z;
    precise float _424 = _303 * cbObjMatrix._m0[_403].z;
    precise float _425 = _303 * cbObjMatrix._m0[_410].z;
    precise float _426 = _303 * cbObjMatrix._m0[_396].w;
    precise float _427 = _303 * cbObjMatrix._m0[_403].w;
    precise float _428 = _303 * cbObjMatrix._m0[_410].w;
    precise float _429 = _382 + _417;
    precise float _430 = _383 + _418;
    precise float _431 = _384 + _419;
    precise float _432 = _385 + _420;
    precise float _433 = _386 + _421;
    precise float _434 = _387 + _422;
    precise float _435 = _388 + _423;
    precise float _436 = _389 + _424;
    precise float _437 = _390 + _425;
    precise float _438 = _391 + _426;
    precise float _439 = _392 + _427;
    precise float _440 = _393 + _428;
    uint _443 = (_312 + uint(float(BLENDINDICES.w))) * 3u;
    uint _450 = _443 + 1u;
    uint _457 = _443 + 2u;
    precise float _464 = _304 * cbObjMatrix._m0[_443].x;
    precise float _465 = _304 * cbObjMatrix._m0[_450].x;
    precise float _466 = _304 * cbObjMatrix._m0[_457].x;
    precise float _467 = _304 * cbObjMatrix._m0[_443].y;
    precise float _468 = _304 * cbObjMatrix._m0[_450].y;
    precise float _469 = _304 * cbObjMatrix._m0[_457].y;
    precise float _470 = _304 * cbObjMatrix._m0[_443].z;
    precise float _471 = _304 * cbObjMatrix._m0[_450].z;
    precise float _472 = _304 * cbObjMatrix._m0[_457].z;
    precise float _473 = _304 * cbObjMatrix._m0[_443].w;
    precise float _474 = _304 * cbObjMatrix._m0[_450].w;
    precise float _475 = _304 * cbObjMatrix._m0[_457].w;
    precise float _476 = _429 + _464;
    precise float _477 = _430 + _465;
    precise float _478 = _431 + _466;
    precise float _479 = _432 + _467;
    precise float _480 = _433 + _468;
    precise float _481 = _434 + _469;
    precise float _482 = _435 + _470;
    precise float _483 = _436 + _471;
    precise float _484 = _437 + _472;
    precise float _485 = _438 + _473;
    precise float _486 = _439 + _474;
    precise float _487 = _440 + _475;
    precise float _488 = _283 * _476;
    precise float _489 = _284 * _479;
    precise float _490 = _489 + _488;
    precise float _491 = _285 * _482;
    precise float _492 = _491 + _490;
    precise float _493 = 1.0 * _485;
    precise float _494 = _493 + _492;
    precise float _495 = _283 * _477;
    precise float _496 = _284 * _480;
    precise float _497 = _496 + _495;
    precise float _498 = _285 * _483;
    precise float _499 = _498 + _497;
    precise float _500 = 1.0 * _486;
    precise float _501 = _500 + _499;
    precise float _502 = _283 * _478;
    precise float _503 = _284 * _481;
    precise float _504 = _503 + _502;
    precise float _505 = _285 * _484;
    precise float _506 = _505 + _504;
    precise float _507 = 1.0 * _487;
    precise float _508 = _507 + _506;
    precise float _528 = _494 + 0.0;
    precise float _529 = _501 + 0.0;
    precise float _530 = _508 + 0.0;
    precise float _536 = _528 - cbSceneParam._m0[3u].x;
    precise float _537 = _529 - cbSceneParam._m0[3u].y;
    precise float _538 = _530 - cbSceneParam._m0[3u].z;
    precise float _565 = _536 * cbSceneParam._m0[24u].x;
    precise float _566 = _537 * cbSceneParam._m0[24u].y;
    precise float _567 = _566 + _565;
    precise float _568 = _538 * cbSceneParam._m0[24u].z;
    precise float _569 = _568 + _567;
    precise float _570 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _571 = _570 + _569;
    precise float _572 = _536 * cbSceneParam._m0[25u].x;
    precise float _573 = _537 * cbSceneParam._m0[25u].y;
    precise float _574 = _573 + _572;
    precise float _575 = _538 * cbSceneParam._m0[25u].z;
    precise float _576 = _575 + _574;
    precise float _577 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _578 = _577 + _576;
    precise float _579 = _536 * cbSceneParam._m0[26u].x;
    precise float _580 = _537 * cbSceneParam._m0[26u].y;
    precise float _581 = _580 + _579;
    precise float _582 = _538 * cbSceneParam._m0[26u].z;
    precise float _583 = _582 + _581;
    precise float _584 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _585 = _584 + _583;
    precise float _586 = _536 * cbSceneParam._m0[27u].x;
    precise float _587 = _537 * cbSceneParam._m0[27u].y;
    precise float _588 = _587 + _586;
    precise float _589 = _538 * cbSceneParam._m0[27u].z;
    precise float _590 = _589 + _588;
    precise float _591 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _592 = _591 + _590;
    gl_Position.x = _571;
    gl_Position.y = _578;
    gl_Position.z = _585;
    gl_Position.w = _592;
    POSITION_1.x = _571;
    POSITION_1.y = _578;
    POSITION_1.z = _585;
    POSITION_1.w = _592;
    NORMAL_1.x = fma(_220, _482, fma(_219, _479, _476 * _217));
    NORMAL_1.y = fma(_220, _483, fma(_219, _480, _477 * _217));
    NORMAL_1.z = fma(_220, _484, fma(_219, _481, _478 * _217));
    NORMAL_1.w = float(_293);
    TANGENT_1.x = fma(_231, _482, fma(_230, _479, _476 * _229));
    TANGENT_1.y = fma(_231, _483, fma(_230, _480, _477 * _229));
    TANGENT_1.z = fma(_231, _484, fma(_230, _481, _478 * _229));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = _198;
    TEXCOORD_2.y = _199;
    TEXCOORD_2.z = (cbTexScroll._m0[1u].x * _188) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = (cbTexScroll._m0[1u].y * _189) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
}


