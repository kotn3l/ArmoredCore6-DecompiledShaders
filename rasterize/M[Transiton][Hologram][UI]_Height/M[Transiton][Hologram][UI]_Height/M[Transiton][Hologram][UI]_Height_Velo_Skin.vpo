#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[21];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 3) uniform texture2D M_Transiton_Hologram_UI_Height_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out vec4 TEXCOORD_10;
layout(location = 7) out vec4 TEXCOORD_11;
layout(location = 8) out vec3 TEXCOORD_12;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    TEXCOORD_10.z = 0.0;
    TEXCOORD_10.w = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    TEXCOORD_11.w = 0.0;
    TEXCOORD_12.x = 0.0;
    TEXCOORD_12.y = 0.0;
    TEXCOORD_12.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _209 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _211 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _212 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _213 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _218 = _209 * cbTexScroll._m0[0u].x;
    precise float _219 = _211 * cbTexScroll._m0[0u].y;
    precise float _222 = _218 + cbTexScroll._m0[0u].z;
    precise float _223 = _219 + cbTexScroll._m0[0u].w;
    precise float _237 = float(NORMAL.x) + (-127.0);
    precise float _239 = float(NORMAL.y) + (-127.0);
    precise float _240 = float(NORMAL.z) + (-127.0);
    precise float _241 = _237 * 0.0078740157186985015869140625;
    precise float _243 = _239 * 0.0078740157186985015869140625;
    precise float _244 = _240 * 0.0078740157186985015869140625;
    float _253 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _254 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _255 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _267 = _241 * cbMtdParam._m0[20u].x;
    precise float _268 = _243 * cbMtdParam._m0[20u].y;
    precise float _269 = _244 * cbMtdParam._m0[20u].z;
    precise float _275 = cbPerFrame._m0[22u].x * cbMtdParam._m0[17u].x;
    precise float _276 = cbPerFrame._m0[22u].x * cbMtdParam._m0[17u].y;
    precise float _277 = _222 + _275;
    precise float _278 = _223 + _276;
    precise float _285 = _277 * cbTextureTilingScale._m0[3u].x;
    precise float _286 = cbTextureTilingScale._m0[3u].y * _278;
    precise float _287 = cbTextureTilingScale._m0[3u].z + _285;
    precise float _288 = cbTextureTilingScale._m0[3u].w + _286;
    vec4 _291 = textureLod(sampler2D(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_2, SS_DiffuseMap), vec2(_287, _288), 0.0);
    float _294 = _291.x;
    precise float _295 = _267 * _294;
    precise float _296 = _268 * _294;
    precise float _297 = _269 * _294;
    precise float _298 = _267 + _295;
    precise float _299 = _268 + _296;
    precise float _300 = _269 + _297;
    precise float _301 = _267 * 0.0;
    precise float _302 = _268 * 0.0;
    precise float _303 = _269 * 0.0;
    precise float _304 = _301 + _298;
    precise float _305 = _302 + _299;
    precise float _306 = _303 + _300;
    precise float _307 = POSITION.x + _304;
    precise float _308 = POSITION.y + _305;
    precise float _309 = POSITION.z + _306;
    uint _314 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _316 = texelFetch(g_InstanceIndexBuffer, int(_314));
    uint _317 = _316.x;
    precise float _318 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _323 = isnan(_318) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _318 : max(0.001000000047497451305389404296875, _318));
    precise float _325 = BLENDWEIGHT.x / _323;
    precise float _326 = BLENDWEIGHT.y / _323;
    precise float _327 = BLENDWEIGHT.z / _323;
    precise float _328 = BLENDWEIGHT.w / _323;
    uint _330 = _317 * 13u;
    uvec4 _335 = floatBitsToUint(cbInstanceData._m0[_330 + 4u]);
    uint _336 = _335.x;
    uint _338 = (_336 + uint(float(BLENDINDICES.x))) * 3u;
    uint _345 = _338 + 1u;
    uint _352 = _338 + 2u;
    precise float _359 = _325 * cbObjMatrix._m0[_338].x;
    precise float _360 = _325 * cbObjMatrix._m0[_345].x;
    precise float _361 = _325 * cbObjMatrix._m0[_352].x;
    precise float _362 = _325 * cbObjMatrix._m0[_338].y;
    precise float _363 = _325 * cbObjMatrix._m0[_345].y;
    precise float _364 = _325 * cbObjMatrix._m0[_352].y;
    precise float _365 = _325 * cbObjMatrix._m0[_338].z;
    precise float _366 = _325 * cbObjMatrix._m0[_345].z;
    precise float _367 = _325 * cbObjMatrix._m0[_352].z;
    precise float _368 = _325 * cbObjMatrix._m0[_338].w;
    precise float _369 = _325 * cbObjMatrix._m0[_345].w;
    precise float _370 = _325 * cbObjMatrix._m0[_352].w;
    uint _373 = (_336 + uint(float(BLENDINDICES.y))) * 3u;
    uint _380 = _373 + 1u;
    uint _387 = _373 + 2u;
    precise float _394 = _326 * cbObjMatrix._m0[_373].x;
    precise float _395 = _326 * cbObjMatrix._m0[_380].x;
    precise float _396 = _326 * cbObjMatrix._m0[_387].x;
    precise float _397 = _326 * cbObjMatrix._m0[_373].y;
    precise float _398 = _326 * cbObjMatrix._m0[_380].y;
    precise float _399 = _326 * cbObjMatrix._m0[_387].y;
    precise float _400 = _326 * cbObjMatrix._m0[_373].z;
    precise float _401 = _326 * cbObjMatrix._m0[_380].z;
    precise float _402 = _326 * cbObjMatrix._m0[_387].z;
    precise float _403 = _326 * cbObjMatrix._m0[_373].w;
    precise float _404 = _326 * cbObjMatrix._m0[_380].w;
    precise float _405 = _326 * cbObjMatrix._m0[_387].w;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    precise float _413 = _366 + _401;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    uint _420 = (_336 + uint(float(BLENDINDICES.z))) * 3u;
    uint _427 = _420 + 1u;
    uint _434 = _420 + 2u;
    precise float _441 = _327 * cbObjMatrix._m0[_420].x;
    precise float _442 = _327 * cbObjMatrix._m0[_427].x;
    precise float _443 = _327 * cbObjMatrix._m0[_434].x;
    precise float _444 = _327 * cbObjMatrix._m0[_420].y;
    precise float _445 = _327 * cbObjMatrix._m0[_427].y;
    precise float _446 = _327 * cbObjMatrix._m0[_434].y;
    precise float _447 = _327 * cbObjMatrix._m0[_420].z;
    precise float _448 = _327 * cbObjMatrix._m0[_427].z;
    precise float _449 = _327 * cbObjMatrix._m0[_434].z;
    precise float _450 = _327 * cbObjMatrix._m0[_420].w;
    precise float _451 = _327 * cbObjMatrix._m0[_427].w;
    precise float _452 = _327 * cbObjMatrix._m0[_434].w;
    precise float _453 = _406 + _441;
    precise float _454 = _407 + _442;
    precise float _455 = _408 + _443;
    precise float _456 = _409 + _444;
    precise float _457 = _410 + _445;
    precise float _458 = _411 + _446;
    precise float _459 = _412 + _447;
    precise float _460 = _413 + _448;
    precise float _461 = _414 + _449;
    precise float _462 = _415 + _450;
    precise float _463 = _416 + _451;
    precise float _464 = _417 + _452;
    uint _467 = (_336 + uint(float(BLENDINDICES.w))) * 3u;
    uint _474 = _467 + 1u;
    uint _481 = _467 + 2u;
    precise float _488 = _328 * cbObjMatrix._m0[_467].x;
    precise float _489 = _328 * cbObjMatrix._m0[_474].x;
    precise float _490 = _328 * cbObjMatrix._m0[_481].x;
    precise float _491 = _328 * cbObjMatrix._m0[_467].y;
    precise float _492 = _328 * cbObjMatrix._m0[_474].y;
    precise float _493 = _328 * cbObjMatrix._m0[_481].y;
    precise float _494 = _328 * cbObjMatrix._m0[_467].z;
    precise float _495 = _328 * cbObjMatrix._m0[_474].z;
    precise float _496 = _328 * cbObjMatrix._m0[_481].z;
    precise float _497 = _328 * cbObjMatrix._m0[_467].w;
    precise float _498 = _328 * cbObjMatrix._m0[_474].w;
    precise float _499 = _328 * cbObjMatrix._m0[_481].w;
    precise float _500 = _453 + _488;
    precise float _501 = _454 + _489;
    precise float _502 = _455 + _490;
    precise float _503 = _456 + _491;
    precise float _504 = _457 + _492;
    precise float _505 = _458 + _493;
    precise float _506 = _459 + _494;
    precise float _507 = _460 + _495;
    precise float _508 = _461 + _496;
    precise float _509 = _462 + _497;
    precise float _510 = _463 + _498;
    precise float _511 = _464 + _499;
    precise float _512 = _307 * _500;
    precise float _513 = _308 * _503;
    precise float _514 = _513 + _512;
    precise float _515 = _309 * _506;
    precise float _516 = _515 + _514;
    precise float _517 = 1.0 * _509;
    precise float _518 = _517 + _516;
    precise float _519 = _307 * _501;
    precise float _520 = _308 * _504;
    precise float _521 = _520 + _519;
    precise float _522 = _309 * _507;
    precise float _523 = _522 + _521;
    precise float _524 = 1.0 * _510;
    precise float _525 = _524 + _523;
    precise float _526 = _307 * _502;
    precise float _527 = _308 * _505;
    precise float _528 = _527 + _526;
    precise float _529 = _309 * _508;
    precise float _530 = _529 + _528;
    precise float _531 = 1.0 * _511;
    precise float _532 = _531 + _530;
    float _703 = fma(_244, _506, fma(_243, _503, _500 * _241));
    float _706 = fma(_244, _507, fma(_243, _504, _501 * _241));
    float _709 = fma(_244, _508, fma(_243, _505, _502 * _241));
    precise float _720 = _518 + 0.0;
    precise float _721 = _525 + 0.0;
    precise float _722 = _532 + 0.0;
    float _729 = (((((cbPrevObjMatrix._m0[_373].w * _326) + (cbPrevObjMatrix._m0[_338].w * _325)) + (cbPrevObjMatrix._m0[_420].w * _327)) + (cbPrevObjMatrix._m0[_467].w * _328)) + fma(_309, (((cbPrevObjMatrix._m0[_373].z * _326) + (cbPrevObjMatrix._m0[_338].z * _325)) + (cbPrevObjMatrix._m0[_420].z * _327)) + (cbPrevObjMatrix._m0[_467].z * _328), fma(_308, (((cbPrevObjMatrix._m0[_373].y * _326) + (cbPrevObjMatrix._m0[_338].y * _325)) + (cbPrevObjMatrix._m0[_420].y * _327)) + (cbPrevObjMatrix._m0[_467].y * _328), ((((cbPrevObjMatrix._m0[_373].x * _326) + (cbPrevObjMatrix._m0[_338].x * _325)) + (cbPrevObjMatrix._m0[_420].x * _327)) + (cbPrevObjMatrix._m0[_467].x * _328)) * _307))) - cbSceneParam._m0[28u].x;
    float _730 = (((((cbPrevObjMatrix._m0[_380].w * _326) + (cbPrevObjMatrix._m0[_345].w * _325)) + (cbPrevObjMatrix._m0[_427].w * _327)) + (cbPrevObjMatrix._m0[_474].w * _328)) + fma(_309, (((cbPrevObjMatrix._m0[_380].z * _326) + (cbPrevObjMatrix._m0[_345].z * _325)) + (cbPrevObjMatrix._m0[_427].z * _327)) + (cbPrevObjMatrix._m0[_474].z * _328), fma(_308, (((cbPrevObjMatrix._m0[_380].y * _326) + (cbPrevObjMatrix._m0[_345].y * _325)) + (cbPrevObjMatrix._m0[_427].y * _327)) + (cbPrevObjMatrix._m0[_474].y * _328), ((((cbPrevObjMatrix._m0[_380].x * _326) + (cbPrevObjMatrix._m0[_345].x * _325)) + (cbPrevObjMatrix._m0[_427].x * _327)) + (cbPrevObjMatrix._m0[_474].x * _328)) * _307))) - cbSceneParam._m0[28u].y;
    float _731 = (((((cbPrevObjMatrix._m0[_387].w * _326) + (cbPrevObjMatrix._m0[_352].w * _325)) + (cbPrevObjMatrix._m0[_434].w * _327)) + (cbPrevObjMatrix._m0[_481].w * _328)) + fma(_309, (((cbPrevObjMatrix._m0[_387].z * _326) + (cbPrevObjMatrix._m0[_352].z * _325)) + (cbPrevObjMatrix._m0[_434].z * _327)) + (cbPrevObjMatrix._m0[_481].z * _328), fma(_308, (((cbPrevObjMatrix._m0[_387].y * _326) + (cbPrevObjMatrix._m0[_352].y * _325)) + (cbPrevObjMatrix._m0[_434].y * _327)) + (cbPrevObjMatrix._m0[_481].y * _328), ((((cbPrevObjMatrix._m0[_387].x * _326) + (cbPrevObjMatrix._m0[_352].x * _325)) + (cbPrevObjMatrix._m0[_434].x * _327)) + (cbPrevObjMatrix._m0[_481].x * _328)) * _307))) - cbSceneParam._m0[28u].z;
    precise float _781 = _720 - cbSceneParam._m0[3u].x;
    precise float _782 = _721 - cbSceneParam._m0[3u].y;
    precise float _783 = _722 - cbSceneParam._m0[3u].z;
    precise float _810 = _781 * cbSceneParam._m0[24u].x;
    precise float _811 = _782 * cbSceneParam._m0[24u].y;
    precise float _812 = _811 + _810;
    precise float _813 = _783 * cbSceneParam._m0[24u].z;
    precise float _814 = _813 + _812;
    precise float _815 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _816 = _815 + _814;
    precise float _817 = _781 * cbSceneParam._m0[25u].x;
    precise float _818 = _782 * cbSceneParam._m0[25u].y;
    precise float _819 = _818 + _817;
    precise float _820 = _783 * cbSceneParam._m0[25u].z;
    precise float _821 = _820 + _819;
    precise float _822 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _823 = _822 + _821;
    precise float _824 = _781 * cbSceneParam._m0[26u].x;
    precise float _825 = _782 * cbSceneParam._m0[26u].y;
    precise float _826 = _825 + _824;
    precise float _827 = _783 * cbSceneParam._m0[26u].z;
    precise float _828 = _827 + _826;
    precise float _829 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _830 = _829 + _828;
    precise float _831 = _781 * cbSceneParam._m0[27u].x;
    precise float _832 = _782 * cbSceneParam._m0[27u].y;
    precise float _833 = _832 + _831;
    precise float _834 = _783 * cbSceneParam._m0[27u].z;
    precise float _835 = _834 + _833;
    precise float _836 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _837 = _836 + _835;
    gl_Position.x = _816;
    gl_Position.y = _823;
    gl_Position.z = _830;
    gl_Position.w = _837;
    POSITION_1.x = _816;
    POSITION_1.y = _823;
    POSITION_1.z = _830;
    POSITION_1.w = _837;
    NORMAL_1.x = _703;
    NORMAL_1.y = _706;
    NORMAL_1.z = _709;
    NORMAL_1.w = float(_317);
    TANGENT_1.x = fma(_255, _506, fma(_254, _503, _500 * _253));
    TANGENT_1.y = fma(_255, _507, fma(_254, _504, _501 * _253));
    TANGENT_1.z = fma(_255, _508, fma(_254, _505, _502 * _253));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = _222;
    TEXCOORD_2.y = _223;
    TEXCOORD_2.z = (cbTexScroll._m0[1u].x * _212) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = (cbTexScroll._m0[1u].y * _213) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
    TEXCOORD_10.x = _816;
    TEXCOORD_10.y = _823;
    TEXCOORD_10.z = _830;
    TEXCOORD_10.w = _837;
    TEXCOORD_11.x = fma(_731, cbSceneParam._m0[29u].z, fma(_730, cbSceneParam._m0[29u].y, _729 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_11.y = fma(_731, cbSceneParam._m0[30u].z, fma(_730, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _729)) + cbSceneParam._m0[30u].w;
    TEXCOORD_11.z = fma(_731, cbSceneParam._m0[31u].z, fma(_730, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _729)) + cbSceneParam._m0[31u].w;
    TEXCOORD_11.w = fma(_731, cbSceneParam._m0[32u].z, fma(_730, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _729)) + cbSceneParam._m0[32u].w;
    TEXCOORD_12.x = _703;
    TEXCOORD_12.y = _706;
    TEXCOORD_12.z = _709;
    gl_ClipDistance[0u] = dot(vec4(_816, _823, _830, _837), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_816, _823, _830, _837), vec4(cbInstanceData._m0[_330 + 3u]));
}


