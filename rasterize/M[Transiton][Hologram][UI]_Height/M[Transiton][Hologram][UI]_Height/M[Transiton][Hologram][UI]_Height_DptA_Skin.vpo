#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[21];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 3) uniform texture2D M_Transiton_Hologram_UI_Height_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out vec2 TEXCOORD_9;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _195 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _197 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _198 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _199 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _204 = _195 * cbTexScroll._m0[0u].x;
    precise float _205 = _197 * cbTexScroll._m0[0u].y;
    precise float _208 = _204 + cbTexScroll._m0[0u].z;
    precise float _209 = _205 + cbTexScroll._m0[0u].w;
    precise float _223 = float(NORMAL.x) + (-127.0);
    precise float _225 = float(NORMAL.y) + (-127.0);
    precise float _226 = float(NORMAL.z) + (-127.0);
    precise float _227 = _223 * 0.0078740157186985015869140625;
    precise float _229 = _225 * 0.0078740157186985015869140625;
    precise float _230 = _226 * 0.0078740157186985015869140625;
    float _239 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _240 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _241 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _253 = _227 * cbMtdParam._m0[20u].x;
    precise float _254 = _229 * cbMtdParam._m0[20u].y;
    precise float _255 = _230 * cbMtdParam._m0[20u].z;
    precise float _261 = cbPerFrame._m0[22u].x * cbMtdParam._m0[17u].x;
    precise float _262 = cbPerFrame._m0[22u].x * cbMtdParam._m0[17u].y;
    precise float _263 = _208 + _261;
    precise float _264 = _209 + _262;
    precise float _271 = _263 * cbTextureTilingScale._m0[3u].x;
    precise float _272 = cbTextureTilingScale._m0[3u].y * _264;
    precise float _273 = cbTextureTilingScale._m0[3u].z + _271;
    precise float _274 = cbTextureTilingScale._m0[3u].w + _272;
    vec4 _277 = textureLod(sampler2D(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_2, SS_DiffuseMap), vec2(_273, _274), 0.0);
    float _279 = _277.x;
    precise float _280 = _253 * _279;
    precise float _281 = _254 * _279;
    precise float _282 = _255 * _279;
    precise float _283 = _253 + _280;
    precise float _284 = _254 + _281;
    precise float _285 = _255 + _282;
    precise float _286 = _253 * 0.0;
    precise float _287 = _254 * 0.0;
    precise float _288 = _255 * 0.0;
    precise float _289 = _286 + _283;
    precise float _290 = _287 + _284;
    precise float _291 = _288 + _285;
    precise float _292 = POSITION.x + _289;
    precise float _293 = POSITION.y + _290;
    precise float _294 = POSITION.z + _291;
    uint _299 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _301 = texelFetch(g_InstanceIndexBuffer, int(_299));
    uint _302 = _301.x;
    precise float _303 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _308 = isnan(_303) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _303 : max(0.001000000047497451305389404296875, _303));
    precise float _310 = BLENDWEIGHT.x / _308;
    precise float _311 = BLENDWEIGHT.y / _308;
    precise float _312 = BLENDWEIGHT.z / _308;
    precise float _313 = BLENDWEIGHT.w / _308;
    uint _315 = _302 * 13u;
    uvec4 _320 = floatBitsToUint(cbInstanceData._m0[_315 + 4u]);
    uint _321 = _320.x;
    uint _323 = (_321 + uint(float(BLENDINDICES.x))) * 3u;
    uint _330 = _323 + 1u;
    uint _337 = _323 + 2u;
    precise float _344 = _310 * cbObjMatrix._m0[_323].x;
    precise float _345 = _310 * cbObjMatrix._m0[_330].x;
    precise float _346 = _310 * cbObjMatrix._m0[_337].x;
    precise float _347 = _310 * cbObjMatrix._m0[_323].y;
    precise float _348 = _310 * cbObjMatrix._m0[_330].y;
    precise float _349 = _310 * cbObjMatrix._m0[_337].y;
    precise float _350 = _310 * cbObjMatrix._m0[_323].z;
    precise float _351 = _310 * cbObjMatrix._m0[_330].z;
    precise float _352 = _310 * cbObjMatrix._m0[_337].z;
    precise float _353 = _310 * cbObjMatrix._m0[_323].w;
    precise float _354 = _310 * cbObjMatrix._m0[_330].w;
    precise float _355 = _310 * cbObjMatrix._m0[_337].w;
    uint _358 = (_321 + uint(float(BLENDINDICES.y))) * 3u;
    uint _365 = _358 + 1u;
    uint _372 = _358 + 2u;
    precise float _379 = _311 * cbObjMatrix._m0[_358].x;
    precise float _380 = _311 * cbObjMatrix._m0[_365].x;
    precise float _381 = _311 * cbObjMatrix._m0[_372].x;
    precise float _382 = _311 * cbObjMatrix._m0[_358].y;
    precise float _383 = _311 * cbObjMatrix._m0[_365].y;
    precise float _384 = _311 * cbObjMatrix._m0[_372].y;
    precise float _385 = _311 * cbObjMatrix._m0[_358].z;
    precise float _386 = _311 * cbObjMatrix._m0[_365].z;
    precise float _387 = _311 * cbObjMatrix._m0[_372].z;
    precise float _388 = _311 * cbObjMatrix._m0[_358].w;
    precise float _389 = _311 * cbObjMatrix._m0[_365].w;
    precise float _390 = _311 * cbObjMatrix._m0[_372].w;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    uint _405 = (_321 + uint(float(BLENDINDICES.z))) * 3u;
    uint _412 = _405 + 1u;
    uint _419 = _405 + 2u;
    precise float _426 = _312 * cbObjMatrix._m0[_405].x;
    precise float _427 = _312 * cbObjMatrix._m0[_412].x;
    precise float _428 = _312 * cbObjMatrix._m0[_419].x;
    precise float _429 = _312 * cbObjMatrix._m0[_405].y;
    precise float _430 = _312 * cbObjMatrix._m0[_412].y;
    precise float _431 = _312 * cbObjMatrix._m0[_419].y;
    precise float _432 = _312 * cbObjMatrix._m0[_405].z;
    precise float _433 = _312 * cbObjMatrix._m0[_412].z;
    precise float _434 = _312 * cbObjMatrix._m0[_419].z;
    precise float _435 = _312 * cbObjMatrix._m0[_405].w;
    precise float _436 = _312 * cbObjMatrix._m0[_412].w;
    precise float _437 = _312 * cbObjMatrix._m0[_419].w;
    precise float _438 = _391 + _426;
    precise float _439 = _392 + _427;
    precise float _440 = _393 + _428;
    precise float _441 = _394 + _429;
    precise float _442 = _395 + _430;
    precise float _443 = _396 + _431;
    precise float _444 = _397 + _432;
    precise float _445 = _398 + _433;
    precise float _446 = _399 + _434;
    precise float _447 = _400 + _435;
    precise float _448 = _401 + _436;
    precise float _449 = _402 + _437;
    uint _452 = (_321 + uint(float(BLENDINDICES.w))) * 3u;
    uint _459 = _452 + 1u;
    uint _466 = _452 + 2u;
    precise float _473 = _313 * cbObjMatrix._m0[_452].x;
    precise float _474 = _313 * cbObjMatrix._m0[_459].x;
    precise float _475 = _313 * cbObjMatrix._m0[_466].x;
    precise float _476 = _313 * cbObjMatrix._m0[_452].y;
    precise float _477 = _313 * cbObjMatrix._m0[_459].y;
    precise float _478 = _313 * cbObjMatrix._m0[_466].y;
    precise float _479 = _313 * cbObjMatrix._m0[_452].z;
    precise float _480 = _313 * cbObjMatrix._m0[_459].z;
    precise float _481 = _313 * cbObjMatrix._m0[_466].z;
    precise float _482 = _313 * cbObjMatrix._m0[_452].w;
    precise float _483 = _313 * cbObjMatrix._m0[_459].w;
    precise float _484 = _313 * cbObjMatrix._m0[_466].w;
    precise float _485 = _438 + _473;
    precise float _486 = _439 + _474;
    precise float _487 = _440 + _475;
    precise float _488 = _441 + _476;
    precise float _489 = _442 + _477;
    precise float _490 = _443 + _478;
    precise float _491 = _444 + _479;
    precise float _492 = _445 + _480;
    precise float _493 = _446 + _481;
    precise float _494 = _447 + _482;
    precise float _495 = _448 + _483;
    precise float _496 = _449 + _484;
    precise float _497 = _292 * _485;
    precise float _498 = _293 * _488;
    precise float _499 = _498 + _497;
    precise float _500 = _294 * _491;
    precise float _501 = _500 + _499;
    precise float _502 = 1.0 * _494;
    precise float _503 = _502 + _501;
    precise float _504 = _292 * _486;
    precise float _505 = _293 * _489;
    precise float _506 = _505 + _504;
    precise float _507 = _294 * _492;
    precise float _508 = _507 + _506;
    precise float _509 = 1.0 * _495;
    precise float _510 = _509 + _508;
    precise float _511 = _292 * _487;
    precise float _512 = _293 * _490;
    precise float _513 = _512 + _511;
    precise float _514 = _294 * _493;
    precise float _515 = _514 + _513;
    precise float _516 = 1.0 * _496;
    precise float _517 = _516 + _515;
    precise float _537 = _503 + 0.0;
    precise float _538 = _510 + 0.0;
    precise float _539 = _517 + 0.0;
    precise float _545 = _537 - cbSceneParam._m0[3u].x;
    precise float _546 = _538 - cbSceneParam._m0[3u].y;
    precise float _547 = _539 - cbSceneParam._m0[3u].z;
    precise float _574 = _545 * cbSceneParam._m0[24u].x;
    precise float _575 = _546 * cbSceneParam._m0[24u].y;
    precise float _576 = _575 + _574;
    precise float _577 = _547 * cbSceneParam._m0[24u].z;
    precise float _578 = _577 + _576;
    precise float _579 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _580 = _579 + _578;
    precise float _581 = _545 * cbSceneParam._m0[25u].x;
    precise float _582 = _546 * cbSceneParam._m0[25u].y;
    precise float _583 = _582 + _581;
    precise float _584 = _547 * cbSceneParam._m0[25u].z;
    precise float _585 = _584 + _583;
    precise float _586 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _587 = _586 + _585;
    precise float _588 = _545 * cbSceneParam._m0[26u].x;
    precise float _589 = _546 * cbSceneParam._m0[26u].y;
    precise float _590 = _589 + _588;
    precise float _591 = _547 * cbSceneParam._m0[26u].z;
    precise float _592 = _591 + _590;
    precise float _593 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _594 = _593 + _592;
    precise float _595 = _545 * cbSceneParam._m0[27u].x;
    precise float _596 = _546 * cbSceneParam._m0[27u].y;
    precise float _597 = _596 + _595;
    precise float _598 = _547 * cbSceneParam._m0[27u].z;
    precise float _599 = _598 + _597;
    precise float _600 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _601 = _600 + _599;
    gl_Position.x = _580;
    gl_Position.y = _587;
    gl_Position.z = _594;
    gl_Position.w = _601;
    POSITION_1.x = _580;
    POSITION_1.y = _587;
    POSITION_1.z = _594;
    POSITION_1.w = _601;
    NORMAL_1.x = fma(_230, _491, fma(_229, _488, _485 * _227));
    NORMAL_1.y = fma(_230, _492, fma(_229, _489, _486 * _227));
    NORMAL_1.z = fma(_230, _493, fma(_229, _490, _487 * _227));
    NORMAL_1.w = float(_302);
    TANGENT_1.x = fma(_241, _491, fma(_240, _488, _485 * _239));
    TANGENT_1.y = fma(_241, _492, fma(_240, _489, _486 * _239));
    TANGENT_1.z = fma(_241, _493, fma(_240, _490, _487 * _239));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = _208;
    TEXCOORD_2.y = _209;
    TEXCOORD_2.z = (cbTexScroll._m0[1u].x * _198) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = (cbTexScroll._m0[1u].y * _199) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
    TEXCOORD_9.x = _594;
    TEXCOORD_9.y = _601;
    gl_ClipDistance[0u] = dot(vec4(_580, _587, _594, _601), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_580, _587, _594, _601), vec4(cbInstanceData._m0[_315 + 3u]));
}


