#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[21];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 3) uniform texture2D M_Transiton_Hologram_UI_Height_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _141 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _143 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _148 = _141 * cbTexScroll._m0[0u].x;
    precise float _149 = _143 * cbTexScroll._m0[0u].y;
    precise float _152 = _148 + cbTexScroll._m0[0u].z;
    precise float _153 = _149 + cbTexScroll._m0[0u].w;
    precise float _157 = float(NORMAL.x) + (-127.0);
    precise float _159 = float(NORMAL.y) + (-127.0);
    precise float _160 = float(NORMAL.z) + (-127.0);
    precise float _161 = _157 * 0.0078740157186985015869140625;
    precise float _163 = _159 * 0.0078740157186985015869140625;
    precise float _164 = _160 * 0.0078740157186985015869140625;
    precise float _175 = _161 * cbMtdParam._m0[20u].x;
    precise float _176 = _163 * cbMtdParam._m0[20u].y;
    precise float _177 = _164 * cbMtdParam._m0[20u].z;
    precise float _183 = cbPerFrame._m0[22u].x * cbMtdParam._m0[17u].x;
    precise float _184 = cbPerFrame._m0[22u].x * cbMtdParam._m0[17u].y;
    precise float _185 = _152 + _183;
    precise float _186 = _153 + _184;
    precise float _193 = _185 * cbTextureTilingScale._m0[3u].x;
    precise float _194 = cbTextureTilingScale._m0[3u].y * _186;
    precise float _195 = cbTextureTilingScale._m0[3u].z + _193;
    precise float _196 = cbTextureTilingScale._m0[3u].w + _194;
    vec4 _199 = textureLod(sampler2D(M_Transiton_Hologram_UI_Height_snp_0_Texture2D_2, SS_DiffuseMap), vec2(_195, _196), 0.0);
    float _202 = _199.x;
    precise float _203 = _175 * _202;
    precise float _204 = _176 * _202;
    precise float _205 = _177 * _202;
    precise float _206 = _175 + _203;
    precise float _207 = _176 + _204;
    precise float _208 = _177 + _205;
    precise float _209 = _175 * 0.0;
    precise float _210 = _176 * 0.0;
    precise float _211 = _177 * 0.0;
    precise float _212 = _209 + _206;
    precise float _213 = _210 + _207;
    precise float _214 = _211 + _208;
    precise float _215 = POSITION.x + _212;
    precise float _216 = POSITION.y + _213;
    precise float _217 = POSITION.z + _214;
    uint _222 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    precise float _226 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _231 = isnan(_226) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _226 : max(0.001000000047497451305389404296875, _226));
    precise float _233 = BLENDWEIGHT.x / _231;
    precise float _234 = BLENDWEIGHT.y / _231;
    precise float _235 = BLENDWEIGHT.z / _231;
    precise float _236 = BLENDWEIGHT.w / _231;
    uint _238 = texelFetch(g_InstanceIndexBuffer, int(_222)).x * 13u;
    uvec4 _243 = floatBitsToUint(cbInstanceData._m0[_238 + 4u]);
    uint _244 = _243.x;
    uint _246 = (_244 + uint(float(BLENDINDICES.x))) * 3u;
    uint _253 = _246 + 1u;
    uint _260 = _246 + 2u;
    precise float _267 = _233 * cbObjMatrix._m0[_246].x;
    precise float _268 = _233 * cbObjMatrix._m0[_253].x;
    precise float _269 = _233 * cbObjMatrix._m0[_260].x;
    precise float _270 = _233 * cbObjMatrix._m0[_246].y;
    precise float _271 = _233 * cbObjMatrix._m0[_253].y;
    precise float _272 = _233 * cbObjMatrix._m0[_260].y;
    precise float _273 = _233 * cbObjMatrix._m0[_246].z;
    precise float _274 = _233 * cbObjMatrix._m0[_253].z;
    precise float _275 = _233 * cbObjMatrix._m0[_260].z;
    precise float _276 = _233 * cbObjMatrix._m0[_246].w;
    precise float _277 = _233 * cbObjMatrix._m0[_253].w;
    precise float _278 = _233 * cbObjMatrix._m0[_260].w;
    uint _281 = (_244 + uint(float(BLENDINDICES.y))) * 3u;
    uint _288 = _281 + 1u;
    uint _295 = _281 + 2u;
    precise float _302 = _234 * cbObjMatrix._m0[_281].x;
    precise float _303 = _234 * cbObjMatrix._m0[_288].x;
    precise float _304 = _234 * cbObjMatrix._m0[_295].x;
    precise float _305 = _234 * cbObjMatrix._m0[_281].y;
    precise float _306 = _234 * cbObjMatrix._m0[_288].y;
    precise float _307 = _234 * cbObjMatrix._m0[_295].y;
    precise float _308 = _234 * cbObjMatrix._m0[_281].z;
    precise float _309 = _234 * cbObjMatrix._m0[_288].z;
    precise float _310 = _234 * cbObjMatrix._m0[_295].z;
    precise float _311 = _234 * cbObjMatrix._m0[_281].w;
    precise float _312 = _234 * cbObjMatrix._m0[_288].w;
    precise float _313 = _234 * cbObjMatrix._m0[_295].w;
    precise float _314 = _267 + _302;
    precise float _315 = _268 + _303;
    precise float _316 = _269 + _304;
    precise float _317 = _270 + _305;
    precise float _318 = _271 + _306;
    precise float _319 = _272 + _307;
    precise float _320 = _273 + _308;
    precise float _321 = _274 + _309;
    precise float _322 = _275 + _310;
    precise float _323 = _276 + _311;
    precise float _324 = _277 + _312;
    precise float _325 = _278 + _313;
    uint _328 = (_244 + uint(float(BLENDINDICES.z))) * 3u;
    uint _335 = _328 + 1u;
    uint _342 = _328 + 2u;
    precise float _349 = _235 * cbObjMatrix._m0[_328].x;
    precise float _350 = _235 * cbObjMatrix._m0[_335].x;
    precise float _351 = _235 * cbObjMatrix._m0[_342].x;
    precise float _352 = _235 * cbObjMatrix._m0[_328].y;
    precise float _353 = _235 * cbObjMatrix._m0[_335].y;
    precise float _354 = _235 * cbObjMatrix._m0[_342].y;
    precise float _355 = _235 * cbObjMatrix._m0[_328].z;
    precise float _356 = _235 * cbObjMatrix._m0[_335].z;
    precise float _357 = _235 * cbObjMatrix._m0[_342].z;
    precise float _358 = _235 * cbObjMatrix._m0[_328].w;
    precise float _359 = _235 * cbObjMatrix._m0[_335].w;
    precise float _360 = _235 * cbObjMatrix._m0[_342].w;
    precise float _361 = _314 + _349;
    precise float _362 = _315 + _350;
    precise float _363 = _316 + _351;
    precise float _364 = _317 + _352;
    precise float _365 = _318 + _353;
    precise float _366 = _319 + _354;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    precise float _371 = _324 + _359;
    precise float _372 = _325 + _360;
    uint _375 = (_244 + uint(float(BLENDINDICES.w))) * 3u;
    uint _382 = _375 + 1u;
    uint _389 = _375 + 2u;
    precise float _396 = _236 * cbObjMatrix._m0[_375].x;
    precise float _397 = _236 * cbObjMatrix._m0[_382].x;
    precise float _398 = _236 * cbObjMatrix._m0[_389].x;
    precise float _399 = _236 * cbObjMatrix._m0[_375].y;
    precise float _400 = _236 * cbObjMatrix._m0[_382].y;
    precise float _401 = _236 * cbObjMatrix._m0[_389].y;
    precise float _402 = _236 * cbObjMatrix._m0[_375].z;
    precise float _403 = _236 * cbObjMatrix._m0[_382].z;
    precise float _404 = _236 * cbObjMatrix._m0[_389].z;
    precise float _405 = _236 * cbObjMatrix._m0[_375].w;
    precise float _406 = _236 * cbObjMatrix._m0[_382].w;
    precise float _407 = _236 * cbObjMatrix._m0[_389].w;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    precise float _413 = _366 + _401;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    precise float _418 = _371 + _406;
    precise float _419 = _372 + _407;
    precise float _420 = _215 * _408;
    precise float _421 = _216 * _411;
    precise float _422 = _421 + _420;
    precise float _423 = _217 * _414;
    precise float _424 = _423 + _422;
    precise float _425 = 1.0 * _417;
    precise float _426 = _425 + _424;
    precise float _427 = _215 * _409;
    precise float _428 = _216 * _412;
    precise float _429 = _428 + _427;
    precise float _430 = _217 * _415;
    precise float _431 = _430 + _429;
    precise float _432 = 1.0 * _418;
    precise float _433 = _432 + _431;
    precise float _434 = _215 * _410;
    precise float _435 = _216 * _413;
    precise float _436 = _435 + _434;
    precise float _437 = _217 * _416;
    precise float _438 = _437 + _436;
    precise float _439 = 1.0 * _419;
    precise float _440 = _439 + _438;
    precise float _441 = _426 + 0.0;
    precise float _442 = _433 + 0.0;
    precise float _443 = _440 + 0.0;
    precise float _449 = _441 - cbSceneParam._m0[3u].x;
    precise float _450 = _442 - cbSceneParam._m0[3u].y;
    precise float _451 = _443 - cbSceneParam._m0[3u].z;
    precise float _478 = _449 * cbSceneParam._m0[24u].x;
    precise float _479 = _450 * cbSceneParam._m0[24u].y;
    precise float _480 = _479 + _478;
    precise float _481 = _451 * cbSceneParam._m0[24u].z;
    precise float _482 = _481 + _480;
    precise float _483 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _484 = _483 + _482;
    precise float _485 = _449 * cbSceneParam._m0[25u].x;
    precise float _486 = _450 * cbSceneParam._m0[25u].y;
    precise float _487 = _486 + _485;
    precise float _488 = _451 * cbSceneParam._m0[25u].z;
    precise float _489 = _488 + _487;
    precise float _490 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _491 = _490 + _489;
    precise float _492 = _449 * cbSceneParam._m0[26u].x;
    precise float _493 = _450 * cbSceneParam._m0[26u].y;
    precise float _494 = _493 + _492;
    precise float _495 = _451 * cbSceneParam._m0[26u].z;
    precise float _496 = _495 + _494;
    precise float _497 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _498 = _497 + _496;
    precise float _499 = _449 * cbSceneParam._m0[27u].x;
    precise float _500 = _450 * cbSceneParam._m0[27u].y;
    precise float _501 = _500 + _499;
    precise float _502 = _451 * cbSceneParam._m0[27u].z;
    precise float _503 = _502 + _501;
    precise float _504 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _505 = _504 + _503;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    gl_Position.x = _484;
    gl_Position.y = _491;
    gl_Position.z = _498;
    gl_Position.w = _505;
    gl_ClipDistance[0u] = dot(vec4(_484, _491, _498, _505), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_484, _491, _498, _505), vec4(cbInstanceData._m0[_238 + 3u]));
}


