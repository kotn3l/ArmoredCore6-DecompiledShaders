#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_POM_M1_AO_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_POM_M1_AO_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_POM_M1_AO_snp_0_Texture2D_3;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_POM_M1_AO_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _151 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _152 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _153 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _158 = inversesqrt(dot(vec3(_151, _152, _153), vec3(_151, _152, _153)));
    float _159 = _158 * _151;
    float _160 = _158 * _152;
    float _161 = _158 * _153;
    float _165 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _166 = _165 * NORMAL.x;
    float _167 = _165 * NORMAL.y;
    float _168 = _165 * NORMAL.z;
    float _172 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _173 = _172 * TANGENT.x;
    float _174 = _172 * TANGENT.y;
    float _175 = _172 * TANGENT.z;
    float _180;
    float _181;
    float _182;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _180 = (-0.0) - _166;
        _181 = (-0.0) - _167;
        _182 = (-0.0) - _168;
    }
    else
    {
        _180 = _166;
        _181 = _167;
        _182 = _168;
    }
    float _226 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _236 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _226);
    float _237 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _226);
    float _238 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _226);
    float _247 = dot(vec3(_236, _237, _238), vec3(_159, _160, _161));
    float _250 = dot(vec3(_236, _237, _238), vec3(_173, _174, _175));
    float _253 = dot(vec3(_236, _237, _238), vec3(_180, _181, _182));
    float _259 = inversesqrt(dot(vec3(_247, _250, _253), vec3(_247, _250, _253)));
    vec4 _272 = texture(sampler2D(M_AMSN_POM_M1_AO_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _283 = dot(vec4(_272), vec4(1.0, 0.0, 0.0, 0.0)) + (-0.5);
    float _291 = (((cbMtdParam._m0[10u].y * _247) * _259) * _283) + TEXCOORD.x;
    float _292 = (((_250 * cbMtdParam._m0[10u].y) * _259) * _283) + TEXCOORD.y;
    vec4 _304 = texture(sampler2D(M_AMSN_POM_M1_AO_snp_0_Texture2D_4, SS_DiffuseMap), vec2((_291 * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (_292 * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _309 = _304.x * cbMtdParam._m0[9u].x;
    float _310 = _304.y * cbMtdParam._m0[9u].y;
    float _311 = _304.z * cbMtdParam._m0[9u].z;
    vec4 _323 = texture(sampler2D(M_AMSN_POM_M1_AO_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _325 = _323.x;
    vec4 _337 = texture(sampler2D(M_AMSN_POM_M1_AO_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _291) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _292) + cbTextureTilingScale._m0[1u].w));
    float _341 = _337.z;
    float _346 = (_337.x * 2.0) + (-1.0);
    float _348 = (_337.y * 2.0) + (-1.0);
    float _349 = dot(vec2(_346, _348), vec2(_346, _348));
    float _569 = isnan(0.0) ? _349 : (isnan(_349) ? 0.0 : max(_349, 0.0));
    float _354 = sqrt(1.0 - (isnan(1.0) ? _569 : (isnan(_569) ? 1.0 : min(_569, 1.0))));
    float _357 = fma(_354, _180, fma(_348, _173, _346 * _159));
    float _360 = fma(_354, _181, fma(_348, _174, _346 * _160));
    float _363 = fma(_354, _182, fma(_348, _175, _346 * _161));
    float _367 = inversesqrt(dot(vec3(_357, _360, _363), vec3(_357, _360, _363)));
    float _368 = _367 * _357;
    float _369 = _367 * _360;
    float _370 = _367 * _363;
    float _372 = cbMtdParam._m0[10u].x + _337.w;
    float _376 = inversesqrt(dot(vec3(_368, _369, _370), vec3(_368, _369, _370)));
    float _580 = isnan(0.0) ? _341 : (isnan(_341) ? 0.0 : max(_341, 0.0));
    float _591 = isnan(0.0) ? _372 : (isnan(_372) ? 0.0 : max(_372, 0.0));
    float _378 = isnan(1.0) ? _591 : (isnan(_591) ? 1.0 : min(_591, 1.0));
    float _602 = isnan(0.0) ? _309 : (isnan(_309) ? 0.0 : max(_309, 0.0));
    float _379 = isnan(1.0) ? _602 : (isnan(_602) ? 1.0 : min(_602, 1.0));
    float _613 = isnan(0.0) ? _310 : (isnan(_310) ? 0.0 : max(_310, 0.0));
    float _380 = isnan(1.0) ? _613 : (isnan(_613) ? 1.0 : min(_613, 1.0));
    float _624 = isnan(0.0) ? _311 : (isnan(_311) ? 0.0 : max(_311, 0.0));
    float _381 = isnan(1.0) ? _624 : (isnan(_624) ? 1.0 : min(_624, 1.0));
    float _635 = isnan(0.0) ? _325 : (isnan(_325) ? 0.0 : max(_325, 0.0));
    uint _384 = uint(roundEven(NORMAL.w));
    vec4 _389 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _391 = _389.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _453 = sqrt(((_236 * _236) + (_237 * _237)) + (_238 * _238));
        float _460 = (cbMatDynParam._m0[5u].x * _453) + cbMatDynParam._m0[5u].y;
        float _646 = isnan(0.0) ? _460 : (isnan(_460) ? 0.0 : max(_460, 0.0));
        float _461 = isnan(1.0) ? _646 : (isnan(_646) ? 1.0 : min(_646, 1.0));
        float _465 = (cbMatDynParam._m0[5u].z * _453) + cbMatDynParam._m0[5u].w;
        float _657 = isnan(0.0) ? _465 : (isnan(_465) ? 0.0 : max(_465, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _657 : (isnan(_657) ? 1.0 : min(_657, 1.0))) - _461)) + _461) < ((_391 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _494;
    uint _411;
    vec4 _416;
    float _423;
    float _424;
    float _425;
    float _426;
    float _430;
    vec4 _433;
    float _435;
    float _436;
    bool _447;
    for (;;)
    {
        _411 = _384 * 13u;
        _416 = cbInstanceData._m0[(_411 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _420 = (cbMtdParam._m0[0u].x * _379) * _416.x;
        float _421 = (cbMtdParam._m0[0u].y * _380) * _416.y;
        float _422 = (cbMtdParam._m0[0u].z * _381) * _416.z;
        float _668 = isnan(0.0) ? _420 : (isnan(_420) ? 0.0 : max(_420, 0.0));
        _423 = isnan(1.0) ? _668 : (isnan(_668) ? 1.0 : min(_668, 1.0));
        float _679 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
        _424 = isnan(1.0) ? _679 : (isnan(_679) ? 1.0 : min(_679, 1.0));
        float _690 = isnan(0.0) ? _422 : (isnan(_422) ? 0.0 : max(_422, 0.0));
        _425 = isnan(1.0) ? _690 : (isnan(_690) ? 1.0 : min(_690, 1.0));
        _426 = _378 * TEXCOORD.z;
        _430 = cbInstanceData._m0[_411 + 6u].w;
        float _431 = _391 + (-0.5);
        _433 = cbMtdParam._m0[1u];
        _435 = _433.y * _431;
        _436 = _431 * 0.999000012874603271484375;
        _447 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_447)
        {
            if ((cbInstanceData._m0[_411 + 7u].x + _436) < 0.5)
            {
                _494 = true;
                break;
            }
        }
        if ((_416.w < 1.0) && ((_416.w + _436) < 0.5))
        {
            _494 = true;
            break;
        }
        if ((_435 + 1.0) < _433.x)
        {
            _494 = true;
            break;
        }
        _494 = false;
        break;
    }
    if (_494)
    {
        discard_state = true;
    }
    bool _520 = cbMtdParam._m0[1u].z != 0.0;
    float _521 = _520 ? _430 : 0.0;
    SV_Target.x = ((_368 * 0.5) * _376) + 0.500488758087158203125;
    SV_Target.y = ((_369 * 0.5) * _376) + 0.500488758087158203125;
    SV_Target.z = ((_370 * 0.5) * _376) + 0.500488758087158203125;
    SV_Target.w = _521;
    SV_Target_1.x = isnan(1.0) ? _635 : (isnan(_635) ? 1.0 : min(_635, 1.0));
    SV_Target_1.y = isnan(1.0) ? _580 : (isnan(_580) ? 1.0 : min(_580, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _520 ? _430 : _426;
    SV_Target_2.x = _423;
    SV_Target_2.y = _424;
    SV_Target_2.z = _425;
    SV_Target_2.w = _520 ? _430 : (float(floatBitsToUint(cbInstanceData._m0[_411 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _521;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _521;
    discard_exit();
}


