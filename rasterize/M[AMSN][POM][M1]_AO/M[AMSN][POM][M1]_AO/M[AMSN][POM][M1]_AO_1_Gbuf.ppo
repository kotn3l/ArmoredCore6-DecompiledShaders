#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 1) uniform texture2D M_AMSN_POM_M1_AO_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_POM_M1_AO_snp_0_Texture2D_3;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_POM_M1_AO_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _136 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _137 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _138 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _143 = inversesqrt(dot(vec3(_136, _137, _138), vec3(_136, _137, _138)));
    float _144 = _143 * _136;
    float _145 = _143 * _137;
    float _146 = _143 * _138;
    float _150 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _151 = _150 * NORMAL.x;
    float _152 = _150 * NORMAL.y;
    float _153 = _150 * NORMAL.z;
    float _157 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _158 = _157 * TANGENT.x;
    float _159 = _157 * TANGENT.y;
    float _160 = _157 * TANGENT.z;
    float _165;
    float _166;
    float _167;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _165 = (-0.0) - _151;
        _166 = (-0.0) - _152;
        _167 = (-0.0) - _153;
    }
    else
    {
        _165 = _151;
        _166 = _152;
        _167 = _153;
    }
    float _211 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _221 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _211);
    float _222 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _211);
    float _223 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _211);
    float _232 = dot(vec3(_221, _222, _223), vec3(_144, _145, _146));
    float _235 = dot(vec3(_221, _222, _223), vec3(_158, _159, _160));
    float _238 = dot(vec3(_221, _222, _223), vec3(_165, _166, _167));
    float _244 = inversesqrt(dot(vec3(_232, _235, _238), vec3(_232, _235, _238)));
    float _268 = dot(vec4(texture(sampler2D(M_AMSN_POM_M1_AO_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w))), vec4(1.0, 0.0, 0.0, 0.0)) + (-0.5);
    float _276 = (((cbMtdParam._m0[10u].y * _232) * _244) * _268) + TEXCOORD.x;
    float _277 = (((_235 * cbMtdParam._m0[10u].y) * _244) * _268) + TEXCOORD.y;
    vec4 _289 = texture(sampler2D(M_AMSN_POM_M1_AO_snp_0_Texture2D_4, SS_DiffuseMap), vec2((_276 * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (_277 * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _294 = _289.x * cbMtdParam._m0[9u].x;
    float _295 = _289.y * cbMtdParam._m0[9u].y;
    float _296 = _289.z * cbMtdParam._m0[9u].z;
    vec4 _308 = texture(sampler2D(M_AMSN_POM_M1_AO_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _276) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _277) + cbTextureTilingScale._m0[1u].w));
    float _312 = _308.z;
    float _317 = (_308.x * 2.0) + (-1.0);
    float _319 = (_308.y * 2.0) + (-1.0);
    float _320 = dot(vec2(_317, _319), vec2(_317, _319));
    float _440 = isnan(0.0) ? _320 : (isnan(_320) ? 0.0 : max(_320, 0.0));
    float _325 = sqrt(1.0 - (isnan(1.0) ? _440 : (isnan(_440) ? 1.0 : min(_440, 1.0))));
    float _328 = fma(_325, _165, fma(_319, _158, _317 * _144));
    float _331 = fma(_325, _166, fma(_319, _159, _317 * _145));
    float _334 = fma(_325, _167, fma(_319, _160, _317 * _146));
    float _338 = inversesqrt(dot(vec3(_328, _331, _334), vec3(_328, _331, _334)));
    float _339 = _338 * _328;
    float _340 = _338 * _331;
    float _341 = _338 * _334;
    float _343 = cbMtdParam._m0[10u].x + _308.w;
    float _347 = inversesqrt(dot(vec3(_339, _340, _341), vec3(_339, _340, _341)));
    float _451 = isnan(0.0) ? _312 : (isnan(_312) ? 0.0 : max(_312, 0.0));
    float _462 = isnan(0.0) ? _343 : (isnan(_343) ? 0.0 : max(_343, 0.0));
    float _473 = isnan(0.0) ? _294 : (isnan(_294) ? 0.0 : max(_294, 0.0));
    float _484 = isnan(0.0) ? _295 : (isnan(_295) ? 0.0 : max(_295, 0.0));
    float _495 = isnan(0.0) ? _296 : (isnan(_296) ? 0.0 : max(_296, 0.0));
    uint _367 = uint(roundEven(NORMAL.w)) * 13u;
    uint _370 = (_367 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _376 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _473 : (isnan(_473) ? 1.0 : min(_473, 1.0)))) * cbInstanceData._m0[_370].x;
    float _377 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _484 : (isnan(_484) ? 1.0 : min(_484, 1.0)))) * cbInstanceData._m0[_370].y;
    float _378 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _495 : (isnan(_495) ? 1.0 : min(_495, 1.0)))) * cbInstanceData._m0[_370].z;
    float _506 = isnan(0.0) ? _376 : (isnan(_376) ? 0.0 : max(_376, 0.0));
    float _517 = isnan(0.0) ? _377 : (isnan(_377) ? 0.0 : max(_377, 0.0));
    float _528 = isnan(0.0) ? _378 : (isnan(_378) ? 0.0 : max(_378, 0.0));
    uint _383 = _367 + 6u;
    bool _412 = cbMtdParam._m0[1u].z != 0.0;
    float _413 = _412 ? cbInstanceData._m0[_383].w : 0.0;
    SV_Target.x = ((_339 * 0.5) * _347) + 0.500488758087158203125;
    SV_Target.y = ((_340 * 0.5) * _347) + 0.500488758087158203125;
    SV_Target.z = ((_341 * 0.5) * _347) + 0.500488758087158203125;
    SV_Target.w = _413;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _451 : (isnan(_451) ? 1.0 : min(_451, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _412 ? cbInstanceData._m0[_383].w : ((isnan(1.0) ? _462 : (isnan(_462) ? 1.0 : min(_462, 1.0))) * TEXCOORD.z);
    SV_Target_2.x = isnan(1.0) ? _506 : (isnan(_506) ? 1.0 : min(_506, 1.0));
    SV_Target_2.y = isnan(1.0) ? _517 : (isnan(_517) ? 1.0 : min(_517, 1.0));
    SV_Target_2.z = isnan(1.0) ? _528 : (isnan(_528) ? 1.0 : min(_528, 1.0));
    SV_Target_2.w = _412 ? cbInstanceData._m0[_383].w : (float(floatBitsToUint(cbInstanceData._m0[_367 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _413;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _413;
}


