#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D S_A_Emissive_Glow_Addition_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D S_A_Emissive_Glow_Addition_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _125 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _126 = _125 * NORMAL.x;
    float _127 = _125 * NORMAL.y;
    float _128 = _125 * NORMAL.z;
    float _133;
    float _134;
    float _135;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _133 = (-0.0) - _126;
        _134 = (-0.0) - _127;
        _135 = (-0.0) - _128;
    }
    else
    {
        _133 = _126;
        _134 = _127;
        _135 = _128;
    }
    vec4 _149 = texture(sampler2D(S_A_Emissive_Glow_Addition_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _152 = _149.x;
    float _153 = _149.y;
    float _154 = _149.z;
    vec4 _170 = texture(sampler2D(S_A_Emissive_Glow_Addition_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _175 = _170.x * cbMtdParam._m0[9u].x;
    float _176 = _170.y * cbMtdParam._m0[9u].x;
    float _177 = _170.z * cbMtdParam._m0[9u].x;
    float _181 = inversesqrt(dot(vec3(_133, _134, _135), vec3(_133, _134, _135)));
    float _382 = isnan(0.0) ? _152 : (isnan(_152) ? 0.0 : max(_152, 0.0));
    float _183 = isnan(1.0) ? _382 : (isnan(_382) ? 1.0 : min(_382, 1.0));
    float _393 = isnan(0.0) ? _153 : (isnan(_153) ? 0.0 : max(_153, 0.0));
    float _184 = isnan(1.0) ? _393 : (isnan(_393) ? 1.0 : min(_393, 1.0));
    float _404 = isnan(0.0) ? _154 : (isnan(_154) ? 0.0 : max(_154, 0.0));
    float _185 = isnan(1.0) ? _404 : (isnan(_404) ? 1.0 : min(_404, 1.0));
    uint _187 = uint(roundEven(NORMAL.w));
    vec4 _192 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _194 = _192.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _263 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _415 = isnan(0.0) ? _263 : (isnan(_263) ? 0.0 : max(_263, 0.0));
        float _264 = isnan(1.0) ? _415 : (isnan(_415) ? 1.0 : min(_415, 1.0));
        float _268 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _426 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _426 : (isnan(_426) ? 1.0 : min(_426, 1.0))) - _264)) + _264) < ((_194 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _297;
    uint _214;
    vec4 _219;
    float _226;
    float _227;
    float _228;
    float _229;
    float _230;
    float _231;
    float _234;
    float _238;
    vec4 _242;
    float _244;
    float _245;
    bool _256;
    for (;;)
    {
        _214 = _187 * 13u;
        _219 = cbInstanceData._m0[(_214 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _223 = (cbMtdParam._m0[0u].x * _183) * _219.x;
        float _224 = (cbMtdParam._m0[0u].y * _184) * _219.y;
        float _225 = (cbMtdParam._m0[0u].z * _185) * _219.z;
        float _437 = isnan(0.0) ? _223 : (isnan(_223) ? 0.0 : max(_223, 0.0));
        _226 = isnan(1.0) ? _437 : (isnan(_437) ? 1.0 : min(_437, 1.0));
        float _448 = isnan(0.0) ? _224 : (isnan(_224) ? 0.0 : max(_224, 0.0));
        _227 = isnan(1.0) ? _448 : (isnan(_448) ? 1.0 : min(_448, 1.0));
        float _459 = isnan(0.0) ? _225 : (isnan(_225) ? 0.0 : max(_225, 0.0));
        _228 = isnan(1.0) ? _459 : (isnan(_459) ? 1.0 : min(_459, 1.0));
        _229 = _175 * _219.x;
        _230 = _176 * _219.y;
        _231 = _177 * _219.z;
        _234 = cbMtdParam._m0[2u].w;
        _238 = cbInstanceData._m0[_214 + 6u].w;
        float _239 = _194 + (-0.5);
        _242 = cbMtdParam._m0[1u];
        _244 = _242.y * _239;
        _245 = _239 * 0.999000012874603271484375;
        _256 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_256)
        {
            if ((cbInstanceData._m0[_214 + 7u].x + _245) < 0.5)
            {
                _297 = true;
                break;
            }
        }
        if ((_219.w < 1.0) && ((_219.w + _245) < 0.5))
        {
            _297 = true;
            break;
        }
        if ((_244 + 1.0) < _242.x)
        {
            _297 = true;
            break;
        }
        _297 = false;
        break;
    }
    if (_297)
    {
        discard_state = true;
    }
    float _331;
    float _332;
    float _333;
    float _334;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _331 = _238;
        _332 = _238;
        _333 = _238;
        _334 = _238;
    }
    else
    {
        _331 = _234;
        _332 = 0.0;
        _333 = float(floatBitsToUint(cbInstanceData._m0[_214 + 5u]).x) * 0.0039215688593685626983642578125;
        _334 = TEXCOORD.z;
    }
    SV_Target.x = ((_133 * 0.5) * _181) + 0.500488758087158203125;
    SV_Target.y = ((_134 * 0.5) * _181) + 0.500488758087158203125;
    SV_Target.z = ((_135 * 0.5) * _181) + 0.500488758087158203125;
    SV_Target.w = _332;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _334;
    SV_Target_2.x = _226;
    SV_Target_2.y = _227;
    SV_Target_2.z = _228;
    SV_Target_2.w = _333;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _332;
    SV_Target_4.x = _229 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _230 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _231 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _331;
    discard_exit();
}


