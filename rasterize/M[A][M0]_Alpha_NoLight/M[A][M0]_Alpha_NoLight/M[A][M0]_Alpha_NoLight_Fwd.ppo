#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_Alpha_NoLight_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _113 = texture(sampler2D(M_A_M0_Alpha_NoLight_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _120 = _113.x * cbMtdParam._m0[9u].x;
    float _121 = _113.y * cbMtdParam._m0[9u].y;
    float _122 = _113.z * cbMtdParam._m0[9u].z;
    float _123 = _113.w * TEXCOORD_1.z;
    float _452 = isnan(0.0) ? _123 : (isnan(_123) ? 0.0 : max(_123, 0.0));
    float _145 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _163 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _186 = uint(roundEven(NORMAL.w)) * 13u;
    uint _189 = (_186 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _203 = cbInstanceData._m0[_186 + 6u].w * (isnan(1.0) ? _452 : (isnan(_452) ? 1.0 : min(_452, 1.0)));
    float _209 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _210 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _225 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_209, _210, (log2((isnan(cbSceneParam._m0[77u].w) ? _145 : (isnan(_145) ? cbSceneParam._m0[77u].w : min(_145, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _228 = _225.x;
    float _229 = _225.y;
    float _230 = _225.z;
    float _231 = _225.w;
    float _316;
    float _318;
    float _320;
    float _322;
    if (_145 > cbSceneParam._m0[78u].w)
    {
        float _277 = isnan(_145) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _145 : min(cbSceneParam._m0[80u].w, _145));
        float _278 = _277 / _145;
        float _289 = _278 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _163));
        float _290 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _163)) * _278;
        float _291 = (-0.0) - _290;
        float _293 = _278 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _163));
        float _295 = (cbSceneParam._m0[77u].w * _291) / _277;
        float _296 = _295 + cbSceneParam._m0[79u].w;
        float _297 = cbSceneParam._m0[79u].w - _290;
        float _303 = sqrt(((_289 * _289) + (_290 * _290)) + (_293 * _293));
        float _306 = (1.0 - (cbSceneParam._m0[77u].w / _277)) * _303;
        float _312 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _314 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _407;
        if (abs((_291 - _295) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _407 = ((((_296 > 0.0) ? exp2(_312 * _296) : (2.0 - exp2(_314 * _296))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _306;
        }
        else
        {
            float _380 = 1.0 / cbSceneParam._m0[80u].x;
            float _381 = isnan(_297) ? _296 : (isnan(_296) ? _297 : max(_296, _297));
            float _382 = isnan(_297) ? _296 : (isnan(_296) ? _297 : min(_296, _297));
            float _391 = isnan(0.0) ? _381 : (isnan(_381) ? 0.0 : min(_381, 0.0));
            float _392 = isnan(0.0) ? _382 : (isnan(_382) ? 0.0 : min(_382, 0.0));
            _407 = ((abs(_303 / _291) * cbSceneParam._m0[80u].y) * ((((_391 - _392) * 2.0) - ((exp2(_312 * (isnan(0.0) ? _381 : (isnan(_381) ? 0.0 : max(_381, 0.0)))) - exp2(_312 * (isnan(0.0) ? _382 : (isnan(_382) ? 0.0 : max(_382, 0.0))))) * _380)) - ((exp2(_314 * _391) - exp2(_314 * _392)) * _380))) + (_306 * cbSceneParam._m0[80u].z);
        }
        vec4 _409 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_209, _210, 1.0), 0.0);
        float _418 = exp2((_407 * (-1.44269502162933349609375)) * (1.0 - _409.w));
        float _419 = log2(_418);
        float _435 = log2(_231);
        _316 = (exp2(_435 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_419 * cbSceneParam._m0[78u].x)) * _409.x) / cbSceneParam._m0[78u].x)) + _228;
        _318 = (exp2(_435 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_419 * cbSceneParam._m0[78u].y)) * _409.y) / cbSceneParam._m0[78u].y)) + _229;
        _320 = (exp2(_435 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_419 * cbSceneParam._m0[78u].z)) * _409.z) / cbSceneParam._m0[78u].z)) + _230;
        _322 = _418 * _231;
    }
    else
    {
        _316 = _228;
        _318 = _229;
        _320 = _230;
        _322 = _231;
    }
    float _334 = roundEven(cbMatDynParam._m0[0u].y);
    bool _335 = _334 == 3.0;
    float _337 = log2(_322);
    float _344 = ((cbMtdParam._m0[0u].x * (isnan(0.0) ? _120 : (isnan(_120) ? 0.0 : max(_120, 0.0)))) * cbInstanceData._m0[_189].x) * exp2(_337 * cbSceneParam._m0[78u].x);
    float _345 = ((cbMtdParam._m0[0u].y * (isnan(0.0) ? _121 : (isnan(_121) ? 0.0 : max(_121, 0.0)))) * cbInstanceData._m0[_189].y) * exp2(_337 * cbSceneParam._m0[78u].y);
    float _346 = ((cbMtdParam._m0[0u].z * (isnan(0.0) ? _122 : (isnan(_122) ? 0.0 : max(_122, 0.0)))) * cbInstanceData._m0[_189].z) * exp2(_337 * cbSceneParam._m0[78u].z);
    float _356 = (_334 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _356 * (_335 ? _344 : (_344 + (cbSceneParam._m0[72u].w * _316)));
    SV_Target.y = _356 * (_335 ? _345 : (_345 + (cbSceneParam._m0[72u].w * _318)));
    SV_Target.z = _356 * (_335 ? _346 : (_346 + (cbSceneParam._m0[72u].w * _320)));
    SV_Target.w = _203;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _203;
}


