#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Alpha_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Alpha_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

float _388;
float _389;
float _390;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _131 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _132 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _133 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _139 = inversesqrt(dot(vec3(_131, _132, _133), vec3(_131, _132, _133)));
    float _140 = _139 * _131;
    float _141 = _139 * _132;
    float _142 = _139 * _133;
    float _146 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _147 = _146 * NORMAL.x;
    float _148 = _146 * NORMAL.y;
    float _149 = _146 * NORMAL.z;
    float _153 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _154 = _153 * TANGENT.x;
    float _155 = _153 * TANGENT.y;
    float _156 = _153 * TANGENT.z;
    float _161;
    float _162;
    float _163;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _161 = (-0.0) - _147;
        _162 = (-0.0) - _148;
        _163 = (-0.0) - _149;
    }
    else
    {
        _161 = _147;
        _162 = _148;
        _163 = _149;
    }
    bool _321;
    float _189;
    float _229;
    float _232;
    float _235;
    float _239;
    float _241;
    float _245;
    uint _267;
    vec4 _272;
    float _279;
    float _280;
    float _281;
    float _288;
    vec4 _292;
    float _294;
    float _295;
    bool _307;
    for (;;)
    {
        vec4 _183 = texture(sampler2D(M_AMSN_V_Alpha_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
        _189 = _183.w;
        float _190 = _183.x * cbMtdParam._m0[9u].x;
        float _191 = _183.y * cbMtdParam._m0[9u].y;
        float _192 = _183.z * cbMtdParam._m0[9u].z;
        float _193 = _189 * TEXCOORD_1.z;
        vec4 _209 = texture(sampler2D(M_AMSN_V_Alpha_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[1u].w));
        float _213 = _209.z;
        float _217 = (_209.x * 2.0) + (-1.0);
        float _219 = (_209.y * 2.0) + (-1.0);
        float _220 = dot(vec2(_217, _219), vec2(_217, _219));
        float _399 = isnan(0.0) ? _220 : (isnan(_220) ? 0.0 : max(_220, 0.0));
        float _226 = sqrt(1.0 - (isnan(1.0) ? _399 : (isnan(_399) ? 1.0 : min(_399, 1.0))));
        _229 = fma(_226, _161, fma(_219, _154, _140 * _217));
        _232 = fma(_226, _162, fma(_219, _155, _141 * _217));
        _235 = fma(_226, _163, fma(_219, _156, _142 * _217));
        _239 = inversesqrt(dot(vec3(_229, _232, _235), vec3(_229, _232, _235)));
        float _410 = isnan(0.0) ? _193 : (isnan(_193) ? 0.0 : max(_193, 0.0));
        float _240 = isnan(1.0) ? _410 : (isnan(_410) ? 1.0 : min(_410, 1.0));
        float _421 = isnan(0.0) ? _213 : (isnan(_213) ? 0.0 : max(_213, 0.0));
        _241 = isnan(1.0) ? _421 : (isnan(_421) ? 1.0 : min(_421, 1.0));
        float _432 = isnan(0.0) ? _190 : (isnan(_190) ? 0.0 : max(_190, 0.0));
        float _443 = isnan(0.0) ? _191 : (isnan(_191) ? 0.0 : max(_191, 0.0));
        float _454 = isnan(0.0) ? _192 : (isnan(_192) ? 0.0 : max(_192, 0.0));
        float _465 = isnan(0.0) ? cbMtdParam._m0[10u].x : (isnan(cbMtdParam._m0[10u].x) ? 0.0 : max(cbMtdParam._m0[10u].x, 0.0));
        _245 = isnan(1.0) ? _465 : (isnan(_465) ? 1.0 : min(_465, 1.0));
        _267 = uint(roundEven(NORMAL.w)) * 13u;
        _272 = cbInstanceData._m0[(_267 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _276 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _432 : (isnan(_432) ? 1.0 : min(_432, 1.0)))) * _272.x;
        float _277 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _443 : (isnan(_443) ? 1.0 : min(_443, 1.0)))) * _272.y;
        float _278 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _454 : (isnan(_454) ? 1.0 : min(_454, 1.0)))) * _272.z;
        float _476 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
        _279 = isnan(1.0) ? _476 : (isnan(_476) ? 1.0 : min(_476, 1.0));
        float _487 = isnan(0.0) ? _277 : (isnan(_277) ? 0.0 : max(_277, 0.0));
        _280 = isnan(1.0) ? _487 : (isnan(_487) ? 1.0 : min(_487, 1.0));
        float _498 = isnan(0.0) ? _278 : (isnan(_278) ? 0.0 : max(_278, 0.0));
        _281 = isnan(1.0) ? _498 : (isnan(_498) ? 1.0 : min(_498, 1.0));
        float _509 = isnan(0.0) ? _240 : (isnan(_240) ? 0.0 : max(_240, 0.0));
        _288 = cbInstanceData._m0[_267 + 6u].w * (isnan(1.0) ? _509 : (isnan(_509) ? 1.0 : min(_509, 1.0)));
        float _289 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125)).w + (-0.5);
        _292 = cbMtdParam._m0[1u];
        _294 = _292.y * _289;
        _295 = _289 * 0.999000012874603271484375;
        _307 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_307)
        {
            if ((cbInstanceData._m0[_267 + 7u].x + _295) < 0.5)
            {
                _321 = true;
                break;
            }
        }
        if ((_272.w < 1.0) && ((_272.w + _295) < 0.5))
        {
            _321 = true;
            break;
        }
        if ((_294 + _189) < _292.x)
        {
            _321 = true;
            break;
        }
        _321 = false;
        break;
    }
    if (_321)
    {
        discard_state = true;
    }
    bool _351 = cbMtdParam._m0[1u].z != 0.0;
    float _352 = _351 ? _288 : 0.0;
    SV_Target.x = ((_229 * 0.5) * _239) + 0.500488758087158203125;
    SV_Target.y = ((_232 * 0.5) * _239) + 0.500488758087158203125;
    SV_Target.z = ((_235 * 0.5) * _239) + 0.500488758087158203125;
    SV_Target.w = _352;
    SV_Target_1.x = _245;
    SV_Target_1.y = _241;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _351 ? _288 : TEXCOORD_1.w;
    SV_Target_2.x = _279;
    SV_Target_2.y = _280;
    SV_Target_2.z = _281;
    SV_Target_2.w = _351 ? _288 : (float(floatBitsToUint(cbInstanceData._m0[_267 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _352;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _352;
    discard_exit();
}


