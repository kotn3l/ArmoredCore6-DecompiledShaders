#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[17];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 2) uniform texture2D M_Water_test_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out float TEXCOORD_2;
layout(location = 3, component = 1) out float TEXCOORD_1_1;
layout(location = 4) out vec4 TEXCOORD_3;
layout(location = 3, component = 2) out vec2 TEXCOORD_7;
layout(location = 5) out float TEXCOORD_11;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2 = 0.0;
    TEXCOORD_1_1 = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_11 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _164 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _166 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _171 = _164 * cbTexScroll._m0[0u].x;
    precise float _172 = _166 * cbTexScroll._m0[0u].y;
    precise float _175 = _171 + cbTexScroll._m0[0u].z;
    precise float _176 = _172 + cbTexScroll._m0[0u].w;
    precise float _180 = float(NORMAL.x) + (-127.0);
    precise float _182 = float(NORMAL.y) + (-127.0);
    precise float _183 = float(NORMAL.z) + (-127.0);
    precise float _184 = _180 * 0.0078740157186985015869140625;
    precise float _186 = _182 * 0.0078740157186985015869140625;
    precise float _187 = _183 * 0.0078740157186985015869140625;
    float _197 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _198 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _199 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _201 = POSITION.x + 0.0;
    precise float _202 = POSITION.y + 0.0;
    precise float _203 = POSITION.z + 0.0;
    uint _208 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _210 = texelFetch(g_InstanceIndexBuffer, int(_208));
    uint _211 = _210.x;
    uint _213 = _211 * 13u;
    uint _221 = (floatBitsToUint(cbInstanceData._m0[_213 + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _228 = _221 + 1u;
    uint _235 = _221 + 2u;
    precise float _242 = _201 * cbObjMatrix._m0[_221].x;
    precise float _243 = _202 * cbObjMatrix._m0[_221].y;
    precise float _244 = _243 + _242;
    precise float _245 = _203 * cbObjMatrix._m0[_221].z;
    precise float _246 = _245 + _244;
    precise float _247 = 1.0 * cbObjMatrix._m0[_221].w;
    precise float _249 = _247 + _246;
    precise float _250 = _201 * cbObjMatrix._m0[_228].x;
    precise float _251 = _202 * cbObjMatrix._m0[_228].y;
    precise float _252 = _251 + _250;
    precise float _253 = _203 * cbObjMatrix._m0[_228].z;
    precise float _254 = _253 + _252;
    precise float _255 = 1.0 * cbObjMatrix._m0[_228].w;
    precise float _256 = _255 + _254;
    precise float _257 = _201 * cbObjMatrix._m0[_235].x;
    precise float _258 = _202 * cbObjMatrix._m0[_235].y;
    precise float _259 = _258 + _257;
    precise float _260 = _203 * cbObjMatrix._m0[_235].z;
    precise float _261 = _260 + _259;
    precise float _262 = 1.0 * cbObjMatrix._m0[_235].w;
    precise float _263 = _262 + _261;
    float _269 = cbSceneParam._m0[3u].x - _249;
    float _270 = cbSceneParam._m0[3u].y - _256;
    float _271 = cbSceneParam._m0[3u].z - _263;
    precise float _279 = _184 * cbObjMatrix._m0[_221].x;
    precise float _280 = _186 * cbObjMatrix._m0[_221].y;
    precise float _281 = _280 + _279;
    precise float _282 = _187 * cbObjMatrix._m0[_221].z;
    precise float _283 = _282 + _281;
    precise float _284 = _184 * cbObjMatrix._m0[_228].x;
    precise float _285 = _186 * cbObjMatrix._m0[_228].y;
    precise float _286 = _285 + _284;
    precise float _287 = _187 * cbObjMatrix._m0[_228].z;
    precise float _288 = _287 + _286;
    precise float _289 = _184 * cbObjMatrix._m0[_235].x;
    precise float _290 = _186 * cbObjMatrix._m0[_235].y;
    precise float _291 = _290 + _289;
    precise float _292 = _187 * cbObjMatrix._m0[_235].z;
    precise float _293 = _292 + _291;
    precise float _308 = cbPerFrame._m0[22u].x * cbMtdParam._m0[11u].w;
    precise float _314 = _308 * cbMtdParam._m0[14u].z;
    precise float _315 = _308 * cbMtdParam._m0[14u].w;
    precise float _316 = _175 + _314;
    precise float _317 = _176 + _315;
    precise float _324 = _316 * cbTextureTilingScale._m0[2u].x;
    precise float _325 = cbTextureTilingScale._m0[2u].y * _317;
    precise float _326 = cbTextureTilingScale._m0[2u].z + _324;
    precise float _327 = cbTextureTilingScale._m0[2u].w + _325;
    vec4 _330 = textureLod(sampler2D(M_Water_test_snp_0_Texture2D_2, SS_WrapLinear), vec2(_326, _327), 0.0);
    float _332 = _330.x;
    precise float _339 = _283 * cbMtdParam._m0[16u].x;
    precise float _340 = _288 * cbMtdParam._m0[16u].y;
    precise float _341 = _293 * cbMtdParam._m0[16u].z;
    precise float _342 = _332 * _339;
    precise float _343 = _332 * _340;
    precise float _344 = _332 * _341;
    precise float _345 = _249 + _342;
    precise float _346 = _256 + _343;
    precise float _347 = _263 + _344;
    precise float _348 = _345 - cbSceneParam._m0[3u].x;
    precise float _349 = _346 - cbSceneParam._m0[3u].y;
    precise float _350 = _347 - cbSceneParam._m0[3u].z;
    precise float _377 = _348 * cbSceneParam._m0[24u].x;
    precise float _378 = _349 * cbSceneParam._m0[24u].y;
    precise float _379 = _378 + _377;
    precise float _380 = _350 * cbSceneParam._m0[24u].z;
    precise float _381 = _380 + _379;
    precise float _382 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _383 = _382 + _381;
    precise float _384 = _348 * cbSceneParam._m0[25u].x;
    precise float _385 = _349 * cbSceneParam._m0[25u].y;
    precise float _386 = _385 + _384;
    precise float _387 = _350 * cbSceneParam._m0[25u].z;
    precise float _388 = _387 + _386;
    precise float _389 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _390 = _389 + _388;
    precise float _391 = _348 * cbSceneParam._m0[26u].x;
    precise float _392 = _349 * cbSceneParam._m0[26u].y;
    precise float _393 = _392 + _391;
    precise float _394 = _350 * cbSceneParam._m0[26u].z;
    precise float _395 = _394 + _393;
    precise float _396 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _397 = _396 + _395;
    precise float _398 = _348 * cbSceneParam._m0[27u].x;
    precise float _399 = _349 * cbSceneParam._m0[27u].y;
    precise float _400 = _399 + _398;
    precise float _401 = _350 * cbSceneParam._m0[27u].z;
    precise float _402 = _401 + _400;
    precise float _403 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _404 = _403 + _402;
    gl_Position.x = _383;
    gl_Position.y = _390;
    gl_Position.z = _397;
    gl_Position.w = _404;
    NORMAL_1.x = _283;
    NORMAL_1.y = _288;
    NORMAL_1.z = _293;
    NORMAL_1.w = float(_211);
    TANGENT_1.x = fma(_199, cbObjMatrix._m0[_221].z, fma(_198, cbObjMatrix._m0[_221].y, cbObjMatrix._m0[_221].x * _197));
    TANGENT_1.y = fma(_199, cbObjMatrix._m0[_228].z, fma(_198, cbObjMatrix._m0[_228].y, cbObjMatrix._m0[_228].x * _197));
    TANGENT_1.z = fma(_199, cbObjMatrix._m0[_235].z, fma(_198, cbObjMatrix._m0[_235].y, cbObjMatrix._m0[_235].x * _197));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2 = _175;
    TEXCOORD_1_1 = _176;
    TEXCOORD_3.x = TEXCOORD_1.x;
    TEXCOORD_3.y = TEXCOORD_1.y;
    TEXCOORD_3.z = TEXCOORD_1.z;
    TEXCOORD_3.w = COLOR_1.x;
    TEXCOORD_7.x = _397;
    TEXCOORD_7.y = _404;
    TEXCOORD_11 = sqrt(((_269 * _269) + (_270 * _270)) + (_271 * _271));
    gl_ClipDistance[0u] = dot(vec4(_383, _390, _397, _404), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_383, _390, _397, _404), vec4(cbInstanceData._m0[_213 + 3u]));
}


