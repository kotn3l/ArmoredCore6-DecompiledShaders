#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[17];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 2) uniform texture2D M_Water_test_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out float TEXCOORD_2;
layout(location = 3, component = 1) out float TEXCOORD_1_1;
layout(location = 4) out vec4 TEXCOORD_3;
layout(location = 3, component = 2) out float TEXCOORD_11;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2 = 0.0;
    TEXCOORD_1_1 = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_11 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _159 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _161 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _166 = _159 * cbTexScroll._m0[0u].x;
    precise float _167 = _161 * cbTexScroll._m0[0u].y;
    precise float _170 = _166 + cbTexScroll._m0[0u].z;
    precise float _171 = _167 + cbTexScroll._m0[0u].w;
    precise float _175 = float(NORMAL.x) + (-127.0);
    precise float _177 = float(NORMAL.y) + (-127.0);
    precise float _178 = float(NORMAL.z) + (-127.0);
    precise float _179 = _175 * 0.0078740157186985015869140625;
    precise float _181 = _177 * 0.0078740157186985015869140625;
    precise float _182 = _178 * 0.0078740157186985015869140625;
    float _192 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _193 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _194 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _196 = POSITION.x + 0.0;
    precise float _197 = POSITION.y + 0.0;
    precise float _198 = POSITION.z + 0.0;
    uint _203 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _205 = texelFetch(g_InstanceIndexBuffer, int(_203));
    uint _206 = _205.x;
    uint _208 = _206 * 13u;
    uint _216 = (floatBitsToUint(cbInstanceData._m0[_208 + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _223 = _216 + 1u;
    uint _230 = _216 + 2u;
    precise float _237 = _196 * cbObjMatrix._m0[_216].x;
    precise float _238 = _197 * cbObjMatrix._m0[_216].y;
    precise float _239 = _238 + _237;
    precise float _240 = _198 * cbObjMatrix._m0[_216].z;
    precise float _241 = _240 + _239;
    precise float _242 = 1.0 * cbObjMatrix._m0[_216].w;
    precise float _244 = _242 + _241;
    precise float _245 = _196 * cbObjMatrix._m0[_223].x;
    precise float _246 = _197 * cbObjMatrix._m0[_223].y;
    precise float _247 = _246 + _245;
    precise float _248 = _198 * cbObjMatrix._m0[_223].z;
    precise float _249 = _248 + _247;
    precise float _250 = 1.0 * cbObjMatrix._m0[_223].w;
    precise float _251 = _250 + _249;
    precise float _252 = _196 * cbObjMatrix._m0[_230].x;
    precise float _253 = _197 * cbObjMatrix._m0[_230].y;
    precise float _254 = _253 + _252;
    precise float _255 = _198 * cbObjMatrix._m0[_230].z;
    precise float _256 = _255 + _254;
    precise float _257 = 1.0 * cbObjMatrix._m0[_230].w;
    precise float _258 = _257 + _256;
    float _264 = cbSceneParam._m0[3u].x - _244;
    float _265 = cbSceneParam._m0[3u].y - _251;
    float _266 = cbSceneParam._m0[3u].z - _258;
    precise float _274 = _179 * cbObjMatrix._m0[_216].x;
    precise float _275 = _181 * cbObjMatrix._m0[_216].y;
    precise float _276 = _275 + _274;
    precise float _277 = _182 * cbObjMatrix._m0[_216].z;
    precise float _278 = _277 + _276;
    precise float _279 = _179 * cbObjMatrix._m0[_223].x;
    precise float _280 = _181 * cbObjMatrix._m0[_223].y;
    precise float _281 = _280 + _279;
    precise float _282 = _182 * cbObjMatrix._m0[_223].z;
    precise float _283 = _282 + _281;
    precise float _284 = _179 * cbObjMatrix._m0[_230].x;
    precise float _285 = _181 * cbObjMatrix._m0[_230].y;
    precise float _286 = _285 + _284;
    precise float _287 = _182 * cbObjMatrix._m0[_230].z;
    precise float _288 = _287 + _286;
    precise float _303 = cbPerFrame._m0[22u].x * cbMtdParam._m0[11u].w;
    precise float _309 = _303 * cbMtdParam._m0[14u].z;
    precise float _310 = _303 * cbMtdParam._m0[14u].w;
    precise float _311 = _170 + _309;
    precise float _312 = _171 + _310;
    precise float _319 = _311 * cbTextureTilingScale._m0[2u].x;
    precise float _320 = cbTextureTilingScale._m0[2u].y * _312;
    precise float _321 = cbTextureTilingScale._m0[2u].z + _319;
    precise float _322 = cbTextureTilingScale._m0[2u].w + _320;
    vec4 _325 = textureLod(sampler2D(M_Water_test_snp_0_Texture2D_2, SS_WrapLinear), vec2(_321, _322), 0.0);
    float _328 = _325.x;
    precise float _335 = _278 * cbMtdParam._m0[16u].x;
    precise float _336 = _283 * cbMtdParam._m0[16u].y;
    precise float _337 = _288 * cbMtdParam._m0[16u].z;
    precise float _338 = _328 * _335;
    precise float _339 = _328 * _336;
    precise float _340 = _328 * _337;
    precise float _341 = _244 + _338;
    precise float _342 = _251 + _339;
    precise float _343 = _258 + _340;
    precise float _344 = _341 - cbSceneParam._m0[3u].x;
    precise float _345 = _342 - cbSceneParam._m0[3u].y;
    precise float _346 = _343 - cbSceneParam._m0[3u].z;
    precise float _373 = _344 * cbSceneParam._m0[24u].x;
    precise float _374 = _345 * cbSceneParam._m0[24u].y;
    precise float _375 = _374 + _373;
    precise float _376 = _346 * cbSceneParam._m0[24u].z;
    precise float _377 = _376 + _375;
    precise float _378 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _379 = _378 + _377;
    precise float _380 = _344 * cbSceneParam._m0[25u].x;
    precise float _381 = _345 * cbSceneParam._m0[25u].y;
    precise float _382 = _381 + _380;
    precise float _383 = _346 * cbSceneParam._m0[25u].z;
    precise float _384 = _383 + _382;
    precise float _385 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _386 = _385 + _384;
    precise float _387 = _344 * cbSceneParam._m0[26u].x;
    precise float _388 = _345 * cbSceneParam._m0[26u].y;
    precise float _389 = _388 + _387;
    precise float _390 = _346 * cbSceneParam._m0[26u].z;
    precise float _391 = _390 + _389;
    precise float _392 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _393 = _392 + _391;
    precise float _394 = _344 * cbSceneParam._m0[27u].x;
    precise float _395 = _345 * cbSceneParam._m0[27u].y;
    precise float _396 = _395 + _394;
    precise float _397 = _346 * cbSceneParam._m0[27u].z;
    precise float _398 = _397 + _396;
    precise float _399 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _400 = _399 + _398;
    gl_Position.x = _379;
    gl_Position.y = _386;
    gl_Position.z = _393;
    gl_Position.w = _400;
    NORMAL_1.x = _278;
    NORMAL_1.y = _283;
    NORMAL_1.z = _288;
    NORMAL_1.w = float(_206);
    TANGENT_1.x = fma(_194, cbObjMatrix._m0[_216].z, fma(_193, cbObjMatrix._m0[_216].y, cbObjMatrix._m0[_216].x * _192));
    TANGENT_1.y = fma(_194, cbObjMatrix._m0[_223].z, fma(_193, cbObjMatrix._m0[_223].y, cbObjMatrix._m0[_223].x * _192));
    TANGENT_1.z = fma(_194, cbObjMatrix._m0[_230].z, fma(_193, cbObjMatrix._m0[_230].y, cbObjMatrix._m0[_230].x * _192));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2 = _170;
    TEXCOORD_1_1 = _171;
    TEXCOORD_3.x = TEXCOORD_1.x;
    TEXCOORD_3.y = TEXCOORD_1.y;
    TEXCOORD_3.z = TEXCOORD_1.z;
    TEXCOORD_3.w = COLOR_1.x;
    TEXCOORD_11 = sqrt(((_264 * _264) + (_265 * _265)) + (_266 * _266));
    gl_ClipDistance[0u] = dot(vec4(_379, _386, _393, _400), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_379, _386, _393, _400), vec4(cbInstanceData._m0[_208 + 3u]));
}


