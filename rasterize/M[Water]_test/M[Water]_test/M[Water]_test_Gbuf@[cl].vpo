#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[17];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 2) uniform texture2D M_Water_test_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out float TEXCOORD_2;
layout(location = 3, component = 1) out float TEXCOORD_1_1;
layout(location = 4) out vec4 TEXCOORD_3;
layout(location = 3, component = 2) out float TEXCOORD_11;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2 = 0.0;
    TEXCOORD_1_1 = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_11 = 0.0;
    precise float _154 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _156 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _161 = _154 * cbTexScroll._m0[0u].x;
    precise float _162 = _156 * cbTexScroll._m0[0u].y;
    precise float _165 = _161 + cbTexScroll._m0[0u].z;
    precise float _166 = _162 + cbTexScroll._m0[0u].w;
    precise float _170 = float(NORMAL.x) + (-127.0);
    precise float _172 = float(NORMAL.y) + (-127.0);
    precise float _173 = float(NORMAL.z) + (-127.0);
    precise float _174 = _170 * 0.0078740157186985015869140625;
    precise float _176 = _172 * 0.0078740157186985015869140625;
    precise float _177 = _173 * 0.0078740157186985015869140625;
    float _187 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _188 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _189 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _191 = POSITION.x + 0.0;
    precise float _192 = POSITION.y + 0.0;
    precise float _193 = POSITION.z + 0.0;
    uint _198 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _200 = texelFetch(g_InstanceIndexBuffer, int(_198));
    uint _201 = _200.x;
    uint _211 = (floatBitsToUint(cbInstanceData._m0[(_201 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _218 = _211 + 1u;
    uint _225 = _211 + 2u;
    precise float _232 = _191 * cbObjMatrix._m0[_211].x;
    precise float _233 = _192 * cbObjMatrix._m0[_211].y;
    precise float _234 = _233 + _232;
    precise float _235 = _193 * cbObjMatrix._m0[_211].z;
    precise float _236 = _235 + _234;
    precise float _237 = 1.0 * cbObjMatrix._m0[_211].w;
    precise float _239 = _237 + _236;
    precise float _240 = _191 * cbObjMatrix._m0[_218].x;
    precise float _241 = _192 * cbObjMatrix._m0[_218].y;
    precise float _242 = _241 + _240;
    precise float _243 = _193 * cbObjMatrix._m0[_218].z;
    precise float _244 = _243 + _242;
    precise float _245 = 1.0 * cbObjMatrix._m0[_218].w;
    precise float _246 = _245 + _244;
    precise float _247 = _191 * cbObjMatrix._m0[_225].x;
    precise float _248 = _192 * cbObjMatrix._m0[_225].y;
    precise float _249 = _248 + _247;
    precise float _250 = _193 * cbObjMatrix._m0[_225].z;
    precise float _251 = _250 + _249;
    precise float _252 = 1.0 * cbObjMatrix._m0[_225].w;
    precise float _253 = _252 + _251;
    float _259 = cbSceneParam._m0[3u].x - _239;
    float _260 = cbSceneParam._m0[3u].y - _246;
    float _261 = cbSceneParam._m0[3u].z - _253;
    precise float _269 = _174 * cbObjMatrix._m0[_211].x;
    precise float _270 = _176 * cbObjMatrix._m0[_211].y;
    precise float _271 = _270 + _269;
    precise float _272 = _177 * cbObjMatrix._m0[_211].z;
    precise float _273 = _272 + _271;
    precise float _274 = _174 * cbObjMatrix._m0[_218].x;
    precise float _275 = _176 * cbObjMatrix._m0[_218].y;
    precise float _276 = _275 + _274;
    precise float _277 = _177 * cbObjMatrix._m0[_218].z;
    precise float _278 = _277 + _276;
    precise float _279 = _174 * cbObjMatrix._m0[_225].x;
    precise float _280 = _176 * cbObjMatrix._m0[_225].y;
    precise float _281 = _280 + _279;
    precise float _282 = _177 * cbObjMatrix._m0[_225].z;
    precise float _283 = _282 + _281;
    precise float _298 = cbPerFrame._m0[22u].x * cbMtdParam._m0[11u].w;
    precise float _304 = _298 * cbMtdParam._m0[14u].z;
    precise float _305 = _298 * cbMtdParam._m0[14u].w;
    precise float _306 = _165 + _304;
    precise float _307 = _166 + _305;
    precise float _314 = _306 * cbTextureTilingScale._m0[2u].x;
    precise float _315 = cbTextureTilingScale._m0[2u].y * _307;
    precise float _316 = cbTextureTilingScale._m0[2u].z + _314;
    precise float _317 = cbTextureTilingScale._m0[2u].w + _315;
    vec4 _320 = textureLod(sampler2D(M_Water_test_snp_0_Texture2D_2, SS_WrapLinear), vec2(_316, _317), 0.0);
    float _323 = _320.x;
    precise float _330 = _273 * cbMtdParam._m0[16u].x;
    precise float _331 = _278 * cbMtdParam._m0[16u].y;
    precise float _332 = _283 * cbMtdParam._m0[16u].z;
    precise float _333 = _323 * _330;
    precise float _334 = _323 * _331;
    precise float _335 = _323 * _332;
    precise float _336 = _239 + _333;
    precise float _337 = _246 + _334;
    precise float _338 = _253 + _335;
    precise float _339 = _336 - cbSceneParam._m0[3u].x;
    precise float _340 = _337 - cbSceneParam._m0[3u].y;
    precise float _341 = _338 - cbSceneParam._m0[3u].z;
    precise float _368 = _339 * cbSceneParam._m0[24u].x;
    precise float _369 = _340 * cbSceneParam._m0[24u].y;
    precise float _370 = _369 + _368;
    precise float _371 = _341 * cbSceneParam._m0[24u].z;
    precise float _372 = _371 + _370;
    precise float _373 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _374 = _373 + _372;
    precise float _375 = _339 * cbSceneParam._m0[25u].x;
    precise float _376 = _340 * cbSceneParam._m0[25u].y;
    precise float _377 = _376 + _375;
    precise float _378 = _341 * cbSceneParam._m0[25u].z;
    precise float _379 = _378 + _377;
    precise float _380 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _381 = _380 + _379;
    precise float _382 = _339 * cbSceneParam._m0[26u].x;
    precise float _383 = _340 * cbSceneParam._m0[26u].y;
    precise float _384 = _383 + _382;
    precise float _385 = _341 * cbSceneParam._m0[26u].z;
    precise float _386 = _385 + _384;
    precise float _387 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _388 = _387 + _386;
    precise float _389 = _339 * cbSceneParam._m0[27u].x;
    precise float _390 = _340 * cbSceneParam._m0[27u].y;
    precise float _391 = _390 + _389;
    precise float _392 = _341 * cbSceneParam._m0[27u].z;
    precise float _393 = _392 + _391;
    precise float _394 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _395 = _394 + _393;
    gl_Position.x = _374;
    gl_Position.y = _381;
    gl_Position.z = _388;
    gl_Position.w = _395;
    NORMAL_1.x = _273;
    NORMAL_1.y = _278;
    NORMAL_1.z = _283;
    NORMAL_1.w = float(_201);
    TANGENT_1.x = fma(_189, cbObjMatrix._m0[_211].z, fma(_188, cbObjMatrix._m0[_211].y, cbObjMatrix._m0[_211].x * _187));
    TANGENT_1.y = fma(_189, cbObjMatrix._m0[_218].z, fma(_188, cbObjMatrix._m0[_218].y, cbObjMatrix._m0[_218].x * _187));
    TANGENT_1.z = fma(_189, cbObjMatrix._m0[_225].z, fma(_188, cbObjMatrix._m0[_225].y, cbObjMatrix._m0[_225].x * _187));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2 = _165;
    TEXCOORD_1_1 = _166;
    TEXCOORD_3.x = TEXCOORD_1.x;
    TEXCOORD_3.y = TEXCOORD_1.y;
    TEXCOORD_3.z = TEXCOORD_1.z;
    TEXCOORD_3.w = COLOR_1.x;
    TEXCOORD_11 = sqrt(((_259 * _259) + (_260 * _260)) + (_261 * _261));
}


