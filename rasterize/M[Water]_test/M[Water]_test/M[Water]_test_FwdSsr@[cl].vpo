#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[17];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 2) uniform texture2D M_Water_test_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out float TEXCOORD_2;
layout(location = 4, component = 1) out float TEXCOORD_1_1;
layout(location = 5) out vec4 TEXCOORD_3;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2 = 0.0;
    TEXCOORD_1_1 = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    precise float _158 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _160 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _165 = _158 * cbTexScroll._m0[0u].x;
    precise float _166 = _160 * cbTexScroll._m0[0u].y;
    precise float _169 = _165 + cbTexScroll._m0[0u].z;
    precise float _170 = _166 + cbTexScroll._m0[0u].w;
    precise float _174 = float(NORMAL.x) + (-127.0);
    precise float _176 = float(NORMAL.y) + (-127.0);
    precise float _177 = float(NORMAL.z) + (-127.0);
    precise float _178 = _174 * 0.0078740157186985015869140625;
    precise float _180 = _176 * 0.0078740157186985015869140625;
    precise float _181 = _177 * 0.0078740157186985015869140625;
    float _191 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _192 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _193 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _195 = POSITION.x + 0.0;
    precise float _196 = POSITION.y + 0.0;
    precise float _197 = POSITION.z + 0.0;
    uint _202 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _204 = texelFetch(g_InstanceIndexBuffer, int(_202));
    uint _205 = _204.x;
    uint _215 = (floatBitsToUint(cbInstanceData._m0[(_205 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _222 = _215 + 1u;
    uint _229 = _215 + 2u;
    precise float _236 = _195 * cbObjMatrix._m0[_215].x;
    precise float _237 = _196 * cbObjMatrix._m0[_215].y;
    precise float _238 = _237 + _236;
    precise float _239 = _197 * cbObjMatrix._m0[_215].z;
    precise float _240 = _239 + _238;
    precise float _241 = 1.0 * cbObjMatrix._m0[_215].w;
    precise float _243 = _241 + _240;
    precise float _244 = _195 * cbObjMatrix._m0[_222].x;
    precise float _245 = _196 * cbObjMatrix._m0[_222].y;
    precise float _246 = _245 + _244;
    precise float _247 = _197 * cbObjMatrix._m0[_222].z;
    precise float _248 = _247 + _246;
    precise float _249 = 1.0 * cbObjMatrix._m0[_222].w;
    precise float _250 = _249 + _248;
    precise float _251 = _195 * cbObjMatrix._m0[_229].x;
    precise float _252 = _196 * cbObjMatrix._m0[_229].y;
    precise float _253 = _252 + _251;
    precise float _254 = _197 * cbObjMatrix._m0[_229].z;
    precise float _255 = _254 + _253;
    precise float _256 = 1.0 * cbObjMatrix._m0[_229].w;
    precise float _257 = _256 + _255;
    precise float _258 = _178 * cbObjMatrix._m0[_215].x;
    precise float _259 = _180 * cbObjMatrix._m0[_215].y;
    precise float _260 = _259 + _258;
    precise float _261 = _181 * cbObjMatrix._m0[_215].z;
    precise float _262 = _261 + _260;
    precise float _263 = _178 * cbObjMatrix._m0[_222].x;
    precise float _264 = _180 * cbObjMatrix._m0[_222].y;
    precise float _265 = _264 + _263;
    precise float _266 = _181 * cbObjMatrix._m0[_222].z;
    precise float _267 = _266 + _265;
    precise float _268 = _178 * cbObjMatrix._m0[_229].x;
    precise float _269 = _180 * cbObjMatrix._m0[_229].y;
    precise float _270 = _269 + _268;
    precise float _271 = _181 * cbObjMatrix._m0[_229].z;
    precise float _272 = _271 + _270;
    precise float _288 = cbPerFrame._m0[22u].x * cbMtdParam._m0[11u].w;
    precise float _294 = _288 * cbMtdParam._m0[14u].z;
    precise float _295 = _288 * cbMtdParam._m0[14u].w;
    precise float _296 = _169 + _294;
    precise float _297 = _170 + _295;
    precise float _304 = _296 * cbTextureTilingScale._m0[2u].x;
    precise float _305 = cbTextureTilingScale._m0[2u].y * _297;
    precise float _306 = cbTextureTilingScale._m0[2u].z + _304;
    precise float _307 = cbTextureTilingScale._m0[2u].w + _305;
    vec4 _310 = textureLod(sampler2D(M_Water_test_snp_0_Texture2D_2, SS_WrapLinear), vec2(_306, _307), 0.0);
    float _313 = _310.x;
    precise float _320 = _262 * cbMtdParam._m0[16u].x;
    precise float _321 = _267 * cbMtdParam._m0[16u].y;
    precise float _322 = _272 * cbMtdParam._m0[16u].z;
    precise float _323 = _313 * _320;
    precise float _324 = _313 * _321;
    precise float _325 = _313 * _322;
    precise float _326 = _243 + _323;
    precise float _327 = _250 + _324;
    precise float _328 = _257 + _325;
    precise float _334 = _326 - cbSceneParam._m0[3u].x;
    precise float _335 = _327 - cbSceneParam._m0[3u].y;
    precise float _336 = _328 - cbSceneParam._m0[3u].z;
    precise float _363 = _334 * cbSceneParam._m0[24u].x;
    precise float _364 = _335 * cbSceneParam._m0[24u].y;
    precise float _365 = _364 + _363;
    precise float _366 = _336 * cbSceneParam._m0[24u].z;
    precise float _367 = _366 + _365;
    precise float _368 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _369 = _368 + _367;
    precise float _370 = _334 * cbSceneParam._m0[25u].x;
    precise float _371 = _335 * cbSceneParam._m0[25u].y;
    precise float _372 = _371 + _370;
    precise float _373 = _336 * cbSceneParam._m0[25u].z;
    precise float _374 = _373 + _372;
    precise float _375 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _376 = _375 + _374;
    precise float _377 = _334 * cbSceneParam._m0[26u].x;
    precise float _378 = _335 * cbSceneParam._m0[26u].y;
    precise float _379 = _378 + _377;
    precise float _380 = _336 * cbSceneParam._m0[26u].z;
    precise float _381 = _380 + _379;
    precise float _382 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _383 = _382 + _381;
    precise float _384 = _334 * cbSceneParam._m0[27u].x;
    precise float _385 = _335 * cbSceneParam._m0[27u].y;
    precise float _386 = _385 + _384;
    precise float _387 = _336 * cbSceneParam._m0[27u].z;
    precise float _388 = _387 + _386;
    precise float _389 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _390 = _389 + _388;
    gl_Position.x = _369;
    gl_Position.y = _376;
    gl_Position.z = _383;
    gl_Position.w = _390;
    POSITION_1.x = _369;
    POSITION_1.y = _376;
    POSITION_1.z = _383;
    POSITION_1.w = _390;
    NORMAL_1.x = _262;
    NORMAL_1.y = _267;
    NORMAL_1.z = _272;
    NORMAL_1.w = float(_205);
    TANGENT_1.x = fma(_193, cbObjMatrix._m0[_215].z, fma(_192, cbObjMatrix._m0[_215].y, cbObjMatrix._m0[_215].x * _191));
    TANGENT_1.y = fma(_193, cbObjMatrix._m0[_222].z, fma(_192, cbObjMatrix._m0[_222].y, cbObjMatrix._m0[_222].x * _191));
    TANGENT_1.z = fma(_193, cbObjMatrix._m0[_229].z, fma(_192, cbObjMatrix._m0[_229].y, cbObjMatrix._m0[_229].x * _191));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2 = _169;
    TEXCOORD_1_1 = _170;
    TEXCOORD_3.x = TEXCOORD_1.x;
    TEXCOORD_3.y = TEXCOORD_1.y;
    TEXCOORD_3.z = TEXCOORD_1.z;
    TEXCOORD_3.w = COLOR_1.x;
}


