#version 460

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec4 TEXCOORD;
layout(location = 5) in ivec2 TEXCOORD_1;
layout(location = 1) out vec4 COLOR;
layout(location = 2) out vec3 TEXCOORD_2;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    precise float _88 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _90 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _91 = _88 + 0.0;
    precise float _92 = _90 + 0.0;
    uint _99 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uint _113 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_99)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _120 = _113 + 1u;
    uint _127 = _113 + 2u;
    precise float _134 = POSITION.x * cbObjMatrix._m0[_113].x;
    precise float _135 = POSITION.y * cbObjMatrix._m0[_113].y;
    precise float _136 = _135 + _134;
    precise float _137 = POSITION.z * cbObjMatrix._m0[_113].z;
    precise float _138 = _137 + _136;
    precise float _139 = 1.0 * cbObjMatrix._m0[_113].w;
    precise float _141 = _139 + _138;
    precise float _142 = POSITION.x * cbObjMatrix._m0[_120].x;
    precise float _143 = POSITION.y * cbObjMatrix._m0[_120].y;
    precise float _144 = _143 + _142;
    precise float _145 = POSITION.z * cbObjMatrix._m0[_120].z;
    precise float _146 = _145 + _144;
    precise float _147 = 1.0 * cbObjMatrix._m0[_120].w;
    precise float _148 = _147 + _146;
    precise float _149 = POSITION.x * cbObjMatrix._m0[_127].x;
    precise float _150 = POSITION.y * cbObjMatrix._m0[_127].y;
    precise float _151 = _150 + _149;
    precise float _152 = POSITION.z * cbObjMatrix._m0[_127].z;
    precise float _153 = _152 + _151;
    precise float _154 = 1.0 * cbObjMatrix._m0[_127].w;
    precise float _155 = _154 + _153;
    precise float _156 = _91 * 2.0;
    precise float _158 = _92 * 2.0;
    precise float _159 = _156 + (-1.0);
    precise float _161 = 1.0 - _158;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    gl_Position.x = _159;
    gl_Position.y = _161;
    gl_Position.z = 0.0;
    gl_Position.w = 1.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_2.x = _141;
    TEXCOORD_2.y = _148;
    TEXCOORD_2.z = _155;
}


