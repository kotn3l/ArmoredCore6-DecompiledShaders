#version 460

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in ivec2 TEXCOORD_1;
layout(location = 1) out vec4 COLOR;
layout(location = 2) out vec3 TEXCOORD_2;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    precise float _104 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _106 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _107 = _104 + 0.0;
    precise float _108 = _106 + 0.0;
    uint _118 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    precise float _122 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _127 = isnan(_122) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _122 : max(0.001000000047497451305389404296875, _122));
    precise float _129 = BLENDWEIGHT.x / _127;
    precise float _130 = BLENDWEIGHT.y / _127;
    precise float _131 = BLENDWEIGHT.z / _127;
    precise float _132 = BLENDWEIGHT.w / _127;
    uvec4 _140 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_118)).x * 13u) + 4u]);
    uint _141 = _140.x;
    uint _143 = (_141 + uint(float(BLENDINDICES.x))) * 3u;
    uint _150 = _143 + 1u;
    uint _157 = _143 + 2u;
    precise float _164 = _129 * cbObjMatrix._m0[_143].x;
    precise float _165 = _129 * cbObjMatrix._m0[_150].x;
    precise float _166 = _129 * cbObjMatrix._m0[_157].x;
    precise float _167 = _129 * cbObjMatrix._m0[_143].y;
    precise float _168 = _129 * cbObjMatrix._m0[_150].y;
    precise float _169 = _129 * cbObjMatrix._m0[_157].y;
    precise float _170 = _129 * cbObjMatrix._m0[_143].z;
    precise float _171 = _129 * cbObjMatrix._m0[_150].z;
    precise float _172 = _129 * cbObjMatrix._m0[_157].z;
    precise float _173 = _129 * cbObjMatrix._m0[_143].w;
    precise float _174 = _129 * cbObjMatrix._m0[_150].w;
    precise float _175 = _129 * cbObjMatrix._m0[_157].w;
    uint _178 = (_141 + uint(float(BLENDINDICES.y))) * 3u;
    uint _185 = _178 + 1u;
    uint _192 = _178 + 2u;
    precise float _199 = _130 * cbObjMatrix._m0[_178].x;
    precise float _200 = _130 * cbObjMatrix._m0[_185].x;
    precise float _201 = _130 * cbObjMatrix._m0[_192].x;
    precise float _202 = _130 * cbObjMatrix._m0[_178].y;
    precise float _203 = _130 * cbObjMatrix._m0[_185].y;
    precise float _204 = _130 * cbObjMatrix._m0[_192].y;
    precise float _205 = _130 * cbObjMatrix._m0[_178].z;
    precise float _206 = _130 * cbObjMatrix._m0[_185].z;
    precise float _207 = _130 * cbObjMatrix._m0[_192].z;
    precise float _208 = _130 * cbObjMatrix._m0[_178].w;
    precise float _209 = _130 * cbObjMatrix._m0[_185].w;
    precise float _210 = _130 * cbObjMatrix._m0[_192].w;
    precise float _211 = _164 + _199;
    precise float _212 = _165 + _200;
    precise float _213 = _166 + _201;
    precise float _214 = _167 + _202;
    precise float _215 = _168 + _203;
    precise float _216 = _169 + _204;
    precise float _217 = _170 + _205;
    precise float _218 = _171 + _206;
    precise float _219 = _172 + _207;
    precise float _220 = _173 + _208;
    precise float _221 = _174 + _209;
    precise float _222 = _175 + _210;
    uint _225 = (_141 + uint(float(BLENDINDICES.z))) * 3u;
    uint _232 = _225 + 1u;
    uint _239 = _225 + 2u;
    precise float _246 = _131 * cbObjMatrix._m0[_225].x;
    precise float _247 = _131 * cbObjMatrix._m0[_232].x;
    precise float _248 = _131 * cbObjMatrix._m0[_239].x;
    precise float _249 = _131 * cbObjMatrix._m0[_225].y;
    precise float _250 = _131 * cbObjMatrix._m0[_232].y;
    precise float _251 = _131 * cbObjMatrix._m0[_239].y;
    precise float _252 = _131 * cbObjMatrix._m0[_225].z;
    precise float _253 = _131 * cbObjMatrix._m0[_232].z;
    precise float _254 = _131 * cbObjMatrix._m0[_239].z;
    precise float _255 = _131 * cbObjMatrix._m0[_225].w;
    precise float _256 = _131 * cbObjMatrix._m0[_232].w;
    precise float _257 = _131 * cbObjMatrix._m0[_239].w;
    precise float _258 = _211 + _246;
    precise float _259 = _212 + _247;
    precise float _260 = _213 + _248;
    precise float _261 = _214 + _249;
    precise float _262 = _215 + _250;
    precise float _263 = _216 + _251;
    precise float _264 = _217 + _252;
    precise float _265 = _218 + _253;
    precise float _266 = _219 + _254;
    precise float _267 = _220 + _255;
    precise float _268 = _221 + _256;
    precise float _269 = _222 + _257;
    uint _272 = (_141 + uint(float(BLENDINDICES.w))) * 3u;
    uint _279 = _272 + 1u;
    uint _286 = _272 + 2u;
    precise float _293 = _132 * cbObjMatrix._m0[_272].x;
    precise float _294 = _132 * cbObjMatrix._m0[_279].x;
    precise float _295 = _132 * cbObjMatrix._m0[_286].x;
    precise float _296 = _132 * cbObjMatrix._m0[_272].y;
    precise float _297 = _132 * cbObjMatrix._m0[_279].y;
    precise float _298 = _132 * cbObjMatrix._m0[_286].y;
    precise float _299 = _132 * cbObjMatrix._m0[_272].z;
    precise float _300 = _132 * cbObjMatrix._m0[_279].z;
    precise float _301 = _132 * cbObjMatrix._m0[_286].z;
    precise float _302 = _132 * cbObjMatrix._m0[_272].w;
    precise float _303 = _132 * cbObjMatrix._m0[_279].w;
    precise float _304 = _132 * cbObjMatrix._m0[_286].w;
    precise float _305 = _258 + _293;
    precise float _306 = _259 + _294;
    precise float _307 = _260 + _295;
    precise float _308 = _261 + _296;
    precise float _309 = _262 + _297;
    precise float _310 = _263 + _298;
    precise float _311 = _264 + _299;
    precise float _312 = _265 + _300;
    precise float _313 = _266 + _301;
    precise float _314 = _267 + _302;
    precise float _315 = _268 + _303;
    precise float _316 = _269 + _304;
    precise float _317 = POSITION.x * _305;
    precise float _318 = POSITION.y * _308;
    precise float _319 = _318 + _317;
    precise float _320 = POSITION.z * _311;
    precise float _321 = _320 + _319;
    precise float _322 = 1.0 * _314;
    precise float _323 = _322 + _321;
    precise float _324 = POSITION.x * _306;
    precise float _325 = POSITION.y * _309;
    precise float _326 = _325 + _324;
    precise float _327 = POSITION.z * _312;
    precise float _328 = _327 + _326;
    precise float _329 = 1.0 * _315;
    precise float _330 = _329 + _328;
    precise float _331 = POSITION.x * _307;
    precise float _332 = POSITION.y * _310;
    precise float _333 = _332 + _331;
    precise float _334 = POSITION.z * _313;
    precise float _335 = _334 + _333;
    precise float _336 = 1.0 * _316;
    precise float _337 = _336 + _335;
    precise float _338 = _107 * 2.0;
    precise float _340 = _108 * 2.0;
    precise float _341 = _338 + (-1.0);
    precise float _343 = 1.0 - _340;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    gl_Position.x = _341;
    gl_Position.y = _343;
    gl_Position.z = 0.0;
    gl_Position.w = 1.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_2.x = _323;
    TEXCOORD_2.y = _330;
    TEXCOORD_2.z = _337;
}


