#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in ivec2 TEXCOORD_1;
layout(location = 1) out vec4 TEXCOORD_2;
layout(location = 2) out vec4 TEXCOORD_1_1;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_1_1.x = 0.0;
    TEXCOORD_1_1.y = 0.0;
    TEXCOORD_1_1.z = 0.0;
    TEXCOORD_1_1.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _120 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _122 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _123 = _120 + 0.0;
    precise float _124 = _122 + 0.0;
    float _132 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _134 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _135 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _145 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _147 = texelFetch(g_InstanceIndexBuffer, int(_145));
    uint _148 = _147.x;
    precise float _149 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _154 = isnan(_149) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _149 : max(0.001000000047497451305389404296875, _149));
    precise float _156 = BLENDWEIGHT.x / _154;
    precise float _157 = BLENDWEIGHT.y / _154;
    precise float _158 = BLENDWEIGHT.z / _154;
    precise float _159 = BLENDWEIGHT.w / _154;
    uvec4 _167 = floatBitsToUint(cbInstanceData._m0[(_148 * 13u) + 4u]);
    uint _168 = _167.x;
    uint _170 = (_168 + uint(float(BLENDINDICES.x))) * 3u;
    uint _177 = _170 + 1u;
    uint _184 = _170 + 2u;
    precise float _191 = _156 * cbObjMatrix._m0[_170].x;
    precise float _192 = _156 * cbObjMatrix._m0[_177].x;
    precise float _193 = _156 * cbObjMatrix._m0[_184].x;
    precise float _194 = _156 * cbObjMatrix._m0[_170].y;
    precise float _195 = _156 * cbObjMatrix._m0[_177].y;
    precise float _196 = _156 * cbObjMatrix._m0[_184].y;
    precise float _197 = _156 * cbObjMatrix._m0[_170].z;
    precise float _198 = _156 * cbObjMatrix._m0[_177].z;
    precise float _199 = _156 * cbObjMatrix._m0[_184].z;
    precise float _200 = _156 * cbObjMatrix._m0[_170].w;
    precise float _201 = _156 * cbObjMatrix._m0[_177].w;
    precise float _202 = _156 * cbObjMatrix._m0[_184].w;
    uint _205 = (_168 + uint(float(BLENDINDICES.y))) * 3u;
    uint _212 = _205 + 1u;
    uint _219 = _205 + 2u;
    precise float _226 = _157 * cbObjMatrix._m0[_205].x;
    precise float _227 = _157 * cbObjMatrix._m0[_212].x;
    precise float _228 = _157 * cbObjMatrix._m0[_219].x;
    precise float _229 = _157 * cbObjMatrix._m0[_205].y;
    precise float _230 = _157 * cbObjMatrix._m0[_212].y;
    precise float _231 = _157 * cbObjMatrix._m0[_219].y;
    precise float _232 = _157 * cbObjMatrix._m0[_205].z;
    precise float _233 = _157 * cbObjMatrix._m0[_212].z;
    precise float _234 = _157 * cbObjMatrix._m0[_219].z;
    precise float _235 = _157 * cbObjMatrix._m0[_205].w;
    precise float _236 = _157 * cbObjMatrix._m0[_212].w;
    precise float _237 = _157 * cbObjMatrix._m0[_219].w;
    precise float _238 = _191 + _226;
    precise float _239 = _192 + _227;
    precise float _240 = _193 + _228;
    precise float _241 = _194 + _229;
    precise float _242 = _195 + _230;
    precise float _243 = _196 + _231;
    precise float _244 = _197 + _232;
    precise float _245 = _198 + _233;
    precise float _246 = _199 + _234;
    precise float _247 = _200 + _235;
    precise float _248 = _201 + _236;
    precise float _249 = _202 + _237;
    uint _252 = (_168 + uint(float(BLENDINDICES.z))) * 3u;
    uint _259 = _252 + 1u;
    uint _266 = _252 + 2u;
    precise float _273 = _158 * cbObjMatrix._m0[_252].x;
    precise float _274 = _158 * cbObjMatrix._m0[_259].x;
    precise float _275 = _158 * cbObjMatrix._m0[_266].x;
    precise float _276 = _158 * cbObjMatrix._m0[_252].y;
    precise float _277 = _158 * cbObjMatrix._m0[_259].y;
    precise float _278 = _158 * cbObjMatrix._m0[_266].y;
    precise float _279 = _158 * cbObjMatrix._m0[_252].z;
    precise float _280 = _158 * cbObjMatrix._m0[_259].z;
    precise float _281 = _158 * cbObjMatrix._m0[_266].z;
    precise float _282 = _158 * cbObjMatrix._m0[_252].w;
    precise float _283 = _158 * cbObjMatrix._m0[_259].w;
    precise float _284 = _158 * cbObjMatrix._m0[_266].w;
    precise float _285 = _238 + _273;
    precise float _286 = _239 + _274;
    precise float _287 = _240 + _275;
    precise float _288 = _241 + _276;
    precise float _289 = _242 + _277;
    precise float _290 = _243 + _278;
    precise float _291 = _244 + _279;
    precise float _292 = _245 + _280;
    precise float _293 = _246 + _281;
    precise float _294 = _247 + _282;
    precise float _295 = _248 + _283;
    precise float _296 = _249 + _284;
    uint _299 = (_168 + uint(float(BLENDINDICES.w))) * 3u;
    uint _306 = _299 + 1u;
    uint _313 = _299 + 2u;
    precise float _320 = _159 * cbObjMatrix._m0[_299].x;
    precise float _321 = _159 * cbObjMatrix._m0[_306].x;
    precise float _322 = _159 * cbObjMatrix._m0[_313].x;
    precise float _323 = _159 * cbObjMatrix._m0[_299].y;
    precise float _324 = _159 * cbObjMatrix._m0[_306].y;
    precise float _325 = _159 * cbObjMatrix._m0[_313].y;
    precise float _326 = _159 * cbObjMatrix._m0[_299].z;
    precise float _327 = _159 * cbObjMatrix._m0[_306].z;
    precise float _328 = _159 * cbObjMatrix._m0[_313].z;
    precise float _329 = _159 * cbObjMatrix._m0[_299].w;
    precise float _330 = _159 * cbObjMatrix._m0[_306].w;
    precise float _331 = _159 * cbObjMatrix._m0[_313].w;
    precise float _332 = _285 + _320;
    precise float _333 = _286 + _321;
    precise float _334 = _287 + _322;
    precise float _335 = _288 + _323;
    precise float _336 = _289 + _324;
    precise float _337 = _290 + _325;
    precise float _338 = _291 + _326;
    precise float _339 = _292 + _327;
    precise float _340 = _293 + _328;
    precise float _341 = _294 + _329;
    precise float _342 = _295 + _330;
    precise float _343 = _296 + _331;
    precise float _344 = POSITION.x * _332;
    precise float _345 = POSITION.y * _335;
    precise float _346 = _345 + _344;
    precise float _347 = POSITION.z * _338;
    precise float _348 = _347 + _346;
    precise float _349 = 1.0 * _341;
    precise float _350 = _349 + _348;
    precise float _351 = POSITION.x * _333;
    precise float _352 = POSITION.y * _336;
    precise float _353 = _352 + _351;
    precise float _354 = POSITION.z * _339;
    precise float _355 = _354 + _353;
    precise float _356 = 1.0 * _342;
    precise float _357 = _356 + _355;
    precise float _358 = POSITION.x * _334;
    precise float _359 = POSITION.y * _337;
    precise float _360 = _359 + _358;
    precise float _361 = POSITION.z * _340;
    precise float _362 = _361 + _360;
    precise float _363 = 1.0 * _343;
    precise float _364 = _363 + _362;
    precise float _380 = _350 - cbSceneParam._m0[3u].x;
    precise float _381 = _357 - cbSceneParam._m0[3u].y;
    precise float _382 = _364 - cbSceneParam._m0[3u].z;
    precise float _410 = _380 * cbSceneParam._m0[24u].x;
    precise float _411 = _381 * cbSceneParam._m0[24u].y;
    precise float _412 = _411 + _410;
    precise float _413 = _382 * cbSceneParam._m0[24u].z;
    precise float _414 = _413 + _412;
    precise float _415 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _416 = _415 + _414;
    precise float _417 = _380 * cbSceneParam._m0[25u].x;
    precise float _418 = _381 * cbSceneParam._m0[25u].y;
    precise float _419 = _418 + _417;
    precise float _420 = _382 * cbSceneParam._m0[25u].z;
    precise float _421 = _420 + _419;
    precise float _422 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _423 = _422 + _421;
    precise float _424 = _380 * cbSceneParam._m0[26u].x;
    precise float _425 = _381 * cbSceneParam._m0[26u].y;
    precise float _426 = _425 + _424;
    precise float _427 = _382 * cbSceneParam._m0[26u].z;
    precise float _428 = _427 + _426;
    precise float _429 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _430 = _429 + _428;
    precise float _431 = _380 * cbSceneParam._m0[27u].x;
    precise float _432 = _381 * cbSceneParam._m0[27u].y;
    precise float _433 = _432 + _431;
    precise float _434 = _382 * cbSceneParam._m0[27u].z;
    precise float _435 = _434 + _433;
    precise float _436 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _437 = _436 + _435;
    precise float _438 = _123 * 2.0;
    precise float _440 = _124 * 2.0;
    precise float _441 = _438 + (-1.0);
    precise float _443 = 1.0 - _440;
    precise float _444 = _441 * _437;
    precise float _445 = _443 * _437;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_1_1.x = 0.0;
    TEXCOORD_1_1.y = 0.0;
    TEXCOORD_1_1.z = 0.0;
    TEXCOORD_1_1.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    gl_Position.x = _444;
    gl_Position.y = _445;
    gl_Position.z = _430;
    gl_Position.w = _437;
    TEXCOORD_2.x = _416;
    TEXCOORD_2.y = _423;
    TEXCOORD_2.z = _430;
    TEXCOORD_2.w = _437;
    TEXCOORD_1_1.x = fma(_135, _338, fma(_134, _335, _332 * _132));
    TEXCOORD_1_1.y = fma(_135, _339, fma(_134, _336, _333 * _132));
    TEXCOORD_1_1.z = fma(_135, _340, fma(_134, _337, _334 * _132));
    TEXCOORD_1_1.w = float(_148);
}


