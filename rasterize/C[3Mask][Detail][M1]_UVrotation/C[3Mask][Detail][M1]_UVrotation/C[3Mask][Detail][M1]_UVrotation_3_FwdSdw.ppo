#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_19;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_2;
layout(set = 0, binding = 12) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_20;
layout(set = 0, binding = 13) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_3;
layout(set = 0, binding = 14) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_5;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_6;
layout(set = 0, binding = 17) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_8;
layout(set = 0, binding = 18) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_17;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_18;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1293;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _215 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _216 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _217 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _223 = inversesqrt(dot(vec3(_215, _216, _217), vec3(_215, _216, _217)));
    float _230 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _237 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _260 = sin(cbMtdParam._m0[18u].x);
    float _261 = cos(cbMtdParam._m0[18u].x);
    float _262 = TEXCOORD.x - cbMtdParam._m0[17u].w;
    float _263 = TEXCOORD.y - cbMtdParam._m0[17u].w;
    float _271 = (cbMtdParam._m0[17u].w + cbMtdParam._m0[19u].y) + fma(_263, (-0.0) - _260, _261 * _262);
    float _273 = (cbMtdParam._m0[17u].w + cbMtdParam._m0[19u].z) + fma(_263, _261, _262 * _260);
    vec4 _286 = texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _271) + cbTextureTilingScale._m0[1u].z, (_273 * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _292 = _286.x * cbMtdParam._m0[10u].x;
    float _293 = _286.y * cbMtdParam._m0[10u].y;
    float _294 = _286.z * cbMtdParam._m0[10u].z;
    vec4 _312 = texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    vec4 _331 = texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _356 = cbMtdParam._m0[19u].x * texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w)).x;
    float _367 = ((cbMtdParam._m0[15u].x * (-1.39999997615814208984375)) * (((1.0 - _331.x) * 2.0) - _356)) + 1.0;
    float _3905 = isnan(0.0) ? _367 : (isnan(_367) ? 0.0 : max(_367, 0.0));
    float _368 = isnan(1.0) ? _3905 : (isnan(_3905) ? 1.0 : min(_3905, 1.0));
    float _375 = (_368 * ((_312.x * cbMtdParam._m0[11u].x) - _292)) + _292;
    float _376 = (_368 * ((_312.y * cbMtdParam._m0[11u].y) - _293)) + _293;
    float _377 = (_368 * ((_312.z * cbMtdParam._m0[11u].z) - _294)) + _294;
    vec4 _395 = texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w));
    float _408 = (((((1.0 - _331.y) * 2.0) - _356) * (-1.39999997615814208984375)) * cbMtdParam._m0[18u].z) + 1.0;
    float _3916 = isnan(0.0) ? _408 : (isnan(_408) ? 0.0 : max(_408, 0.0));
    float _409 = isnan(1.0) ? _3916 : (isnan(_3916) ? 1.0 : min(_3916, 1.0));
    float _416 = (((_395.x * cbMtdParam._m0[12u].x) - _375) * _409) + _375;
    float _417 = (_409 * ((_395.y * cbMtdParam._m0[12u].y) - _376)) + _376;
    float _418 = (_409 * ((_395.z * cbMtdParam._m0[12u].z) - _377)) + _377;
    vec4 _435 = texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _448 = (((((1.0 - _331.z) * 2.0) - _356) * (-1.39999997615814208984375)) * cbMtdParam._m0[18u].w) + 1.0;
    float _3927 = isnan(0.0) ? _448 : (isnan(_448) ? 0.0 : max(_448, 0.0));
    float _449 = isnan(1.0) ? _3927 : (isnan(_3927) ? 1.0 : min(_3927, 1.0));
    float _456 = (((_435.x * cbMtdParam._m0[13u].x) - _416) * _449) + _416;
    float _457 = (_449 * ((_435.y * cbMtdParam._m0[13u].y) - _417)) + _417;
    float _458 = (_449 * ((_435.z * cbMtdParam._m0[13u].z) - _418)) + _418;
    vec4 _478 = texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_20, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.z) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.w) + cbTextureTilingScale._m0[12u].w));
    float _507 = (TEXCOORD_5.x - ((cbMtdParam._m0[15u].w * (1.0 - TEXCOORD_5.x)) * (texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[18u].x * TEXCOORD.z) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD.w) + cbTextureTilingScale._m0[18u].w)).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[15u].z + 1.0);
    float _3938 = isnan(0.0) ? _507 : (isnan(_507) ? 0.0 : max(_507, 0.0));
    float _508 = isnan(1.0) ? _3938 : (isnan(_3938) ? 1.0 : min(_3938, 1.0));
    float _515 = (_508 * ((_478.x * cbMtdParam._m0[14u].x) - _456)) + _456;
    float _516 = (_508 * ((_478.y * cbMtdParam._m0[14u].y) - _457)) + _457;
    float _517 = (_508 * ((_478.z * cbMtdParam._m0[14u].z) - _458)) + _458;
    vec4 _530 = texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * _271) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _273) + cbTextureTilingScale._m0[5u].w));
    float _532 = _530.x;
    float _550 = ((texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w)).x - _532) * _368) + _532;
    float _568 = ((texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w)).x - _550) * _409) + _550;
    float _585 = ((texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x - _568) * _449) + _568;
    float _589 = (_585 - (_585 * TEXCOORD_5.x)) * cbMtdParam._m0[18u].y;
    vec4 _602 = texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    vec4 _624 = texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * _271) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _273) + cbTextureTilingScale._m0[14u].w));
    float _626 = _624.x;
    float _627 = _624.y;
    float _630 = cbMtdParam._m0[17u].y * _624.z;
    vec4 _642 = texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.x) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.y) + cbTextureTilingScale._m0[15u].w));
    float _651 = (((cbMtdParam._m0[17u].x * _642.z) - _630) * _368) + _630;
    vec4 _664 = texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _676 = (((cbMtdParam._m0[16u].w * _664.z) - _651) * _409) + _651;
    vec4 _689 = texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _698 = (((cbMtdParam._m0[16u].z * _689.z) - _676) * _449) + _676;
    float _703 = ((cbMtdParam._m0[16u].x * TEXCOORD_5.x) * ((_602.z * cbMtdParam._m0[17u].z) - _698)) + _698;
    float _708 = ((_642.x - _626) * _368) + _626;
    float _709 = ((_642.y - _627) * _368) + _627;
    float _714 = ((_664.x - _708) * _409) + _708;
    float _715 = ((_664.y - _709) * _409) + _709;
    float _724 = ((((_689.x - _714) * _449) + _714) * 2.0) + (-1.0);
    float _725 = ((((_689.y - _715) * _449) + _715) * 2.0) + (-1.0);
    float _726 = dot(vec2(_724, _725), vec2(_724, _725));
    float _3949 = isnan(0.0) ? _726 : (isnan(_726) ? 0.0 : max(_726, 0.0));
    float _731 = sqrt(1.0 - (isnan(1.0) ? _3949 : (isnan(_3949) ? 1.0 : min(_3949, 1.0))));
    float _737 = ((((_602.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[15u].y) + _724;
    float _738 = ((((_602.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[15u].y) + _725;
    float _741 = fma(_731, _230 * NORMAL.x, fma(_738, _237 * TANGENT.x, (_223 * _215) * _737));
    float _744 = fma(_731, _230 * NORMAL.y, fma(_738, _237 * TANGENT.y, (_223 * _216) * _737));
    float _747 = fma(_731, _230 * NORMAL.z, fma(_738, _237 * TANGENT.z, (_223 * _217) * _737));
    float _751 = inversesqrt(dot(vec3(_741, _744, _747), vec3(_741, _744, _747)));
    float _752 = _751 * _741;
    float _753 = _751 * _744;
    float _754 = _751 * _747;
    float _3960 = isnan(0.0) ? _703 : (isnan(_703) ? 0.0 : max(_703, 0.0));
    float _755 = isnan(1.0) ? _3960 : (isnan(_3960) ? 1.0 : min(_3960, 1.0));
    float _3971 = isnan(0.0) ? _515 : (isnan(_515) ? 0.0 : max(_515, 0.0));
    float _3982 = isnan(0.0) ? _516 : (isnan(_516) ? 0.0 : max(_516, 0.0));
    float _3993 = isnan(0.0) ? _517 : (isnan(_517) ? 0.0 : max(_517, 0.0));
    float _4004 = isnan(0.0) ? _589 : (isnan(_589) ? 0.0 : max(_589, 0.0));
    float _759 = isnan(1.0) ? _4004 : (isnan(_4004) ? 1.0 : min(_4004, 1.0));
    float _775 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _815 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _825 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _815);
    float _826 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _815);
    float _827 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _815);
    float _831 = inversesqrt(dot(vec3(_825, _826, _827), vec3(_825, _826, _827)));
    float _832 = _825 * _831;
    float _833 = _826 * _831;
    float _834 = _827 * _831;
    float _840 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _841 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _859 = fma(_754, cbSceneParam._m0[5u].z, fma(_753, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _752));
    float _862 = fma(_754, cbSceneParam._m0[6u].z, fma(_753, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _752));
    float _865 = fma(_754, cbSceneParam._m0[7u].z, fma(_753, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _752));
    uint _878 = uint(roundEven(NORMAL.w)) * 13u;
    uint _880 = (_878 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _886 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3971 : (isnan(_3971) ? 1.0 : min(_3971, 1.0)))) * cbInstanceData._m0[_880].x;
    float _887 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3982 : (isnan(_3982) ? 1.0 : min(_3982, 1.0)))) * cbInstanceData._m0[_880].y;
    float _888 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3993 : (isnan(_3993) ? 1.0 : min(_3993, 1.0)))) * cbInstanceData._m0[_880].z;
    float _4015 = isnan(0.0) ? _886 : (isnan(_886) ? 0.0 : max(_886, 0.0));
    float _889 = isnan(1.0) ? _4015 : (isnan(_4015) ? 1.0 : min(_4015, 1.0));
    float _4026 = isnan(0.0) ? _887 : (isnan(_887) ? 0.0 : max(_887, 0.0));
    float _890 = isnan(1.0) ? _4026 : (isnan(_4026) ? 1.0 : min(_4026, 1.0));
    float _4037 = isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0));
    float _891 = isnan(1.0) ? _4037 : (isnan(_4037) ? 1.0 : min(_4037, 1.0));
    float _892 = 1.0 - _759;
    float _893 = _889 * _892;
    float _894 = _890 * _892;
    float _895 = _891 * _892;
    float _900 = (_889 + (-0.039999999105930328369140625)) * _759;
    float _901 = (_890 + (-0.039999999105930328369140625)) * _759;
    float _902 = (_891 + (-0.039999999105930328369140625)) * _759;
    float _903 = _900 + 0.039999999105930328369140625;
    float _905 = _901 + 0.039999999105930328369140625;
    float _906 = _902 + 0.039999999105930328369140625;
    vec4 _915 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _840, cbSceneParam._m0[86u].y * _841));
    float _918 = _915.x * TEXCOORD_5.w;
    float _919 = dot(vec3(_752, _753, _754), vec3(_832, _833, _834));
    float _922 = _919 * 2.0;
    float _926 = (_922 * _752) - _832;
    float _927 = (_922 * _753) - _833;
    float _928 = (_922 * _754) - _834;
    float _932 = abs(dot(vec3(_832, _833, _834), vec3(_752, _753, _754)));
    float _4048 = isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0));
    float _934 = sqrt(_755);
    float _947 = exp2((_934 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4048 : (isnan(_4048) ? 1.0 : min(_4048, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_934 * 3.0));
    float _953 = (1.0 - _947) * ((_934 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _954 = _947 * _934;
    float _982 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _986 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _990 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1292;
    float _1294;
    float _1295;
    float _1296;
    float _1297;
    float _1298;
    float _1299;
    float _1300;
    float _1301;
    float _1302;
    float _1303;
    float _1304;
    float _1305;
    float _1306;
    float _1307;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1017 = fma(_990, cbModelParam._m0[26u].z, fma(_986, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _982));
        float _1021 = fma(_990, cbModelParam._m0[27u].z, fma(_986, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _982));
        float _1025 = fma(_990, cbModelParam._m0[28u].z, fma(_986, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _982));
        float _1050 = _982 + _752;
        float _1051 = _986 + _753;
        float _1052 = _990 + _754;
        float _1062 = fma(_1052, cbModelParam._m0[26u].z, fma(_1051, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1050)) - _1017;
        float _1063 = fma(_1052, cbModelParam._m0[27u].z, fma(_1051, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1050)) - _1021;
        float _1064 = fma(_1052, cbModelParam._m0[28u].z, fma(_1051, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1050)) - _1025;
        float _1068 = inversesqrt(dot(vec3(_1062, _1063, _1064), vec3(_1062, _1063, _1064)));
        float _1081 = ((_1068 * _1062) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1017 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1082 = ((_1068 * _1063) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1021 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1083 = ((_1068 * _1064) / cbModelParam._m0[34u].z) + ((((((_1025 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1086 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1081, _1082, _1083), 0.0);
        vec4 _1093 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1081, _1082, _1083), 0.0);
        vec4 _1100 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1081, _1082, _1083), 0.0);
        vec4 _1107 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1081, _1082, _1083), 0.0);
        float _1120 = exp2((_1086.w + (-0.5)) * 20.0) * 2.0;
        float _1121 = _1120 * (_1086.x + (-0.5));
        float _1122 = _1120 * (_1086.y + (-0.5));
        float _1123 = _1120 * (_1086.z + (-0.5));
        float _1130 = exp2((_1093.w + (-0.5)) * 20.0) * 2.0;
        float _1131 = _1130 * (_1093.x + (-0.5));
        float _1132 = _1130 * (_1093.y + (-0.5));
        float _1133 = _1130 * (_1093.z + (-0.5));
        float _1140 = exp2((_1100.w + (-0.5)) * 20.0) * 2.0;
        float _1141 = _1140 * (_1100.x + (-0.5));
        float _1142 = _1140 * (_1100.y + (-0.5));
        float _1143 = _1140 * (_1100.z + (-0.5));
        float _1150 = exp2((_1107.w + (-0.5)) * 20.0) * 2.0;
        float _1151 = _1150 * (_1107.x + (-0.5));
        float _1152 = _1150 * (_1107.y + (-0.5));
        float _1153 = _1150 * (_1107.z + (-0.5));
        float _1154 = isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0));
        float _1155 = isnan(0.0) ? _1152 : (isnan(_1152) ? 0.0 : max(_1152, 0.0));
        float _1156 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
        float _1157 = _1121 * 0.5;
        float _1158 = _1131 * 0.5;
        float _1159 = _1141 * 0.5;
        float _1160 = dot(vec3(_1157, _1158, _1159), vec3(_1157, _1158, _1159));
        float _1165 = (_1160 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1160);
        float _1174 = (dot(vec3(_752, _753, _754), vec3(_1165 * _1157, _1165 * _1158, _1165 * _1159)) + 1.0) * 0.5;
        float _4074 = isnan(0.0) ? _1174 : (isnan(_1174) ? 0.0 : max(_1174, 0.0));
        float _1184 = sqrt(((_1158 * _1158) + (_1157 * _1157)) + (_1159 * _1159)) / (_1154 + 9.9999997473787516355514526367188e-06);
        float _4085 = isnan(0.0) ? _1184 : (isnan(_1184) ? 0.0 : max(_1184, 0.0));
        float _1185 = isnan(1.0) ? _4085 : (isnan(_4085) ? 1.0 : min(_4085, 1.0));
        float _1186 = _1185 * 2.0;
        float _1190 = (1.0 - _1185) / (_1185 + 1.0);
        float _4096 = isnan(0.0) ? _1190 : (isnan(_1190) ? 0.0 : max(_1190, 0.0));
        float _1191 = isnan(1.0) ? _4096 : (isnan(_4096) ? 1.0 : min(_4096, 1.0));
        float _1200 = ((((1.0 - _1191) * (_1186 + 2.0)) * exp2(log2(isnan(1.0) ? _4074 : (isnan(_4074) ? 1.0 : min(_4074, 1.0))) * (_1186 + 1.0))) + _1191) * _1154;
        float _1201 = _1122 * 0.5;
        float _1202 = _1132 * 0.5;
        float _1203 = _1142 * 0.5;
        float _1204 = dot(vec3(_1201, _1202, _1203), vec3(_1201, _1202, _1203));
        float _1209 = (_1204 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1204);
        float _1217 = (dot(vec3(_752, _753, _754), vec3(_1209 * _1201, _1209 * _1202, _1209 * _1203)) + 1.0) * 0.5;
        float _4107 = isnan(0.0) ? _1217 : (isnan(_1217) ? 0.0 : max(_1217, 0.0));
        float _1226 = sqrt(((_1202 * _1202) + (_1201 * _1201)) + (_1203 * _1203)) / (_1155 + 9.9999997473787516355514526367188e-06);
        float _4118 = isnan(0.0) ? _1226 : (isnan(_1226) ? 0.0 : max(_1226, 0.0));
        float _1227 = isnan(1.0) ? _4118 : (isnan(_4118) ? 1.0 : min(_4118, 1.0));
        float _1228 = _1227 * 2.0;
        float _1232 = (1.0 - _1227) / (_1227 + 1.0);
        float _4129 = isnan(0.0) ? _1232 : (isnan(_1232) ? 0.0 : max(_1232, 0.0));
        float _1233 = isnan(1.0) ? _4129 : (isnan(_4129) ? 1.0 : min(_4129, 1.0));
        float _1242 = ((((1.0 - _1233) * (_1228 + 2.0)) * exp2(log2(isnan(1.0) ? _4107 : (isnan(_4107) ? 1.0 : min(_4107, 1.0))) * (_1228 + 1.0))) + _1233) * _1155;
        float _1243 = _1123 * 0.5;
        float _1244 = _1133 * 0.5;
        float _1245 = _1143 * 0.5;
        float _1246 = dot(vec3(_1243, _1244, _1245), vec3(_1243, _1244, _1245));
        float _1251 = (_1246 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1246);
        float _1259 = (dot(vec3(_752, _753, _754), vec3(_1251 * _1243, _1251 * _1244, _1251 * _1245)) + 1.0) * 0.5;
        float _4140 = isnan(0.0) ? _1259 : (isnan(_1259) ? 0.0 : max(_1259, 0.0));
        float _1268 = sqrt(((_1244 * _1244) + (_1243 * _1243)) + (_1245 * _1245)) / (_1156 + 9.9999997473787516355514526367188e-06);
        float _4151 = isnan(0.0) ? _1268 : (isnan(_1268) ? 0.0 : max(_1268, 0.0));
        float _1269 = isnan(1.0) ? _4151 : (isnan(_4151) ? 1.0 : min(_4151, 1.0));
        float _1270 = _1269 * 2.0;
        float _1274 = (1.0 - _1269) / (_1269 + 1.0);
        float _4162 = isnan(0.0) ? _1274 : (isnan(_1274) ? 0.0 : max(_1274, 0.0));
        float _1275 = isnan(1.0) ? _4162 : (isnan(_4162) ? 1.0 : min(_4162, 1.0));
        float _1284 = ((((1.0 - _1275) * (_1270 + 2.0)) * exp2(log2(isnan(1.0) ? _4140 : (isnan(_4140) ? 1.0 : min(_4140, 1.0))) * (_1270 + 1.0))) + _1275) * _1156;
        _1292 = _1123;
        _1294 = _1122;
        _1295 = _1121;
        _1296 = _1133;
        _1297 = _1132;
        _1298 = _1131;
        _1299 = _1143;
        _1300 = _1142;
        _1301 = _1141;
        _1302 = _1156;
        _1303 = _1155;
        _1304 = _1154;
        _1305 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1200 : (isnan(_1200) ? 0.0 : max(_1200, 0.0)));
        _1306 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1242 : (isnan(_1242) ? 0.0 : max(_1242, 0.0)));
        _1307 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1284 : (isnan(_1284) ? 0.0 : max(_1284, 0.0)));
    }
    else
    {
        _1292 = _1293;
        _1294 = _1293;
        _1295 = _1293;
        _1296 = _1293;
        _1297 = _1293;
        _1298 = _1293;
        _1299 = _1293;
        _1300 = _1293;
        _1301 = _1293;
        _1302 = _1293;
        _1303 = _1293;
        _1304 = _1293;
        _1305 = 0.0;
        _1306 = 0.0;
        _1307 = 0.0;
    }
    float _1602;
    float _1603;
    float _1604;
    float _1605;
    float _1606;
    float _1607;
    float _1608;
    float _1609;
    float _1610;
    float _1611;
    float _1612;
    float _1613;
    float _1614;
    float _1615;
    float _1616;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1333 = fma(_990, cbModelParam._m0[30u].z, fma(_986, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _982));
        float _1337 = fma(_990, cbModelParam._m0[31u].z, fma(_986, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _982));
        float _1341 = fma(_990, cbModelParam._m0[32u].z, fma(_986, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _982));
        float _1364 = _982 + _752;
        float _1365 = _986 + _753;
        float _1366 = _990 + _754;
        float _1376 = fma(_1366, cbModelParam._m0[30u].z, fma(_1365, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1364)) - _1333;
        float _1377 = fma(_1366, cbModelParam._m0[31u].z, fma(_1365, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1364)) - _1337;
        float _1378 = fma(_1366, cbModelParam._m0[32u].z, fma(_1365, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1364)) - _1341;
        float _1382 = inversesqrt(dot(vec3(_1376, _1377, _1378), vec3(_1376, _1377, _1378)));
        float _1395 = ((_1382 * _1376) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1333 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1396 = ((_1382 * _1377) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1337 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1397 = ((_1382 * _1378) / cbModelParam._m0[35u].z) + ((((((_1341 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1399 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1395, _1396, _1397), 0.0);
        vec4 _1406 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1395, _1396, _1397), 0.0);
        vec4 _1413 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1395, _1396, _1397), 0.0);
        vec4 _1420 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1395, _1396, _1397), 0.0);
        float _1432 = exp2((_1399.w + (-0.5)) * 20.0) * 2.0;
        float _1433 = _1432 * (_1399.x + (-0.5));
        float _1434 = _1432 * (_1399.y + (-0.5));
        float _1435 = _1432 * (_1399.z + (-0.5));
        float _1442 = exp2((_1406.w + (-0.5)) * 20.0) * 2.0;
        float _1443 = _1442 * (_1406.x + (-0.5));
        float _1444 = _1442 * (_1406.y + (-0.5));
        float _1445 = _1442 * (_1406.z + (-0.5));
        float _1452 = exp2((_1413.w + (-0.5)) * 20.0) * 2.0;
        float _1453 = _1452 * (_1413.x + (-0.5));
        float _1454 = _1452 * (_1413.y + (-0.5));
        float _1455 = _1452 * (_1413.z + (-0.5));
        float _1462 = exp2((_1420.w + (-0.5)) * 20.0) * 2.0;
        float _1463 = _1462 * (_1420.x + (-0.5));
        float _1464 = _1462 * (_1420.y + (-0.5));
        float _1465 = _1462 * (_1420.z + (-0.5));
        float _1466 = isnan(0.0) ? _1463 : (isnan(_1463) ? 0.0 : max(_1463, 0.0));
        float _1467 = isnan(0.0) ? _1464 : (isnan(_1464) ? 0.0 : max(_1464, 0.0));
        float _1468 = isnan(0.0) ? _1465 : (isnan(_1465) ? 0.0 : max(_1465, 0.0));
        float _1469 = _1433 * 0.5;
        float _1470 = _1443 * 0.5;
        float _1471 = _1453 * 0.5;
        float _1472 = dot(vec3(_1469, _1470, _1471), vec3(_1469, _1470, _1471));
        float _1477 = (_1472 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1472);
        float _1485 = (dot(vec3(_752, _753, _754), vec3(_1477 * _1469, _1477 * _1470, _1477 * _1471)) + 1.0) * 0.5;
        float _4203 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
        float _1494 = sqrt(((_1470 * _1470) + (_1469 * _1469)) + (_1471 * _1471)) / (_1466 + 9.9999997473787516355514526367188e-06);
        float _4214 = isnan(0.0) ? _1494 : (isnan(_1494) ? 0.0 : max(_1494, 0.0));
        float _1495 = isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0));
        float _1496 = _1495 * 2.0;
        float _1500 = (1.0 - _1495) / (_1495 + 1.0);
        float _4225 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
        float _1501 = isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0));
        float _1510 = ((((1.0 - _1501) * (_1496 + 2.0)) * exp2(log2(isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0))) * (_1496 + 1.0))) + _1501) * _1466;
        float _1511 = _1434 * 0.5;
        float _1512 = _1444 * 0.5;
        float _1513 = _1454 * 0.5;
        float _1514 = dot(vec3(_1511, _1512, _1513), vec3(_1511, _1512, _1513));
        float _1519 = (_1514 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1514);
        float _1527 = (dot(vec3(_752, _753, _754), vec3(_1519 * _1511, _1519 * _1512, _1519 * _1513)) + 1.0) * 0.5;
        float _4236 = isnan(0.0) ? _1527 : (isnan(_1527) ? 0.0 : max(_1527, 0.0));
        float _1536 = sqrt(((_1512 * _1512) + (_1511 * _1511)) + (_1513 * _1513)) / (_1467 + 9.9999997473787516355514526367188e-06);
        float _4247 = isnan(0.0) ? _1536 : (isnan(_1536) ? 0.0 : max(_1536, 0.0));
        float _1537 = isnan(1.0) ? _4247 : (isnan(_4247) ? 1.0 : min(_4247, 1.0));
        float _1538 = _1537 * 2.0;
        float _1542 = (1.0 - _1537) / (_1537 + 1.0);
        float _4258 = isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0));
        float _1543 = isnan(1.0) ? _4258 : (isnan(_4258) ? 1.0 : min(_4258, 1.0));
        float _1552 = ((((1.0 - _1543) * (_1538 + 2.0)) * exp2(log2(isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0))) * (_1538 + 1.0))) + _1543) * _1467;
        float _1553 = _1435 * 0.5;
        float _1554 = _1445 * 0.5;
        float _1555 = _1455 * 0.5;
        float _1556 = dot(vec3(_1553, _1554, _1555), vec3(_1553, _1554, _1555));
        float _1561 = (_1556 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1556);
        float _1569 = (dot(vec3(_752, _753, _754), vec3(_1561 * _1553, _1561 * _1554, _1561 * _1555)) + 1.0) * 0.5;
        float _4269 = isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0));
        float _1578 = sqrt(((_1554 * _1554) + (_1553 * _1553)) + (_1555 * _1555)) / (_1468 + 9.9999997473787516355514526367188e-06);
        float _4280 = isnan(0.0) ? _1578 : (isnan(_1578) ? 0.0 : max(_1578, 0.0));
        float _1579 = isnan(1.0) ? _4280 : (isnan(_4280) ? 1.0 : min(_4280, 1.0));
        float _1580 = _1579 * 2.0;
        float _1584 = (1.0 - _1579) / (_1579 + 1.0);
        float _4291 = isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0));
        float _1585 = isnan(1.0) ? _4291 : (isnan(_4291) ? 1.0 : min(_4291, 1.0));
        float _1594 = ((((1.0 - _1585) * (_1580 + 2.0)) * exp2(log2(isnan(1.0) ? _4269 : (isnan(_4269) ? 1.0 : min(_4269, 1.0))) * (_1580 + 1.0))) + _1585) * _1468;
        _1602 = _1435;
        _1603 = _1434;
        _1604 = _1433;
        _1605 = _1445;
        _1606 = _1444;
        _1607 = _1443;
        _1608 = _1455;
        _1609 = _1454;
        _1610 = _1453;
        _1611 = _1468;
        _1612 = _1467;
        _1613 = _1466;
        _1614 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0)));
        _1615 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1552 : (isnan(_1552) ? 0.0 : max(_1552, 0.0)));
        _1616 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0)));
    }
    else
    {
        _1602 = _1293;
        _1603 = _1293;
        _1604 = _1293;
        _1605 = _1293;
        _1606 = _1293;
        _1607 = _1293;
        _1608 = _1293;
        _1609 = _1293;
        _1610 = _1293;
        _1611 = _1293;
        _1612 = _1293;
        _1613 = _1293;
        _1614 = 0.0;
        _1615 = 0.0;
        _1616 = 0.0;
    }
    float _1626 = (cbModelParam._m0[1u].x * (_1614 - _1305)) + _1305;
    float _1627 = (cbModelParam._m0[1u].x * (_1615 - _1306)) + _1306;
    float _1628 = (cbModelParam._m0[1u].x * (_1616 - _1307)) + _1307;
    float _1649 = fma(_1628, cbSceneParam._m0[89u].z, fma(_1627, cbSceneParam._m0[89u].y, _1626 * cbSceneParam._m0[89u].x));
    float _1652 = fma(_1628, cbSceneParam._m0[90u].z, fma(_1627, cbSceneParam._m0[90u].y, _1626 * cbSceneParam._m0[90u].x));
    float _1655 = fma(_1628, cbSceneParam._m0[91u].z, fma(_1627, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1626));
    float _1670 = _926 * 0.5;
    float _1671 = _927 * 0.5;
    float _1672 = _928 * 0.5;
    float _1673 = dot(vec4(_1670, _1671, _1672, 1.0), vec4(_1604, _1607, _1610, _1613));
    float _1676 = dot(vec4(_1670, _1671, _1672, 1.0), vec4(_1603, _1606, _1609, _1612));
    float _1679 = dot(vec4(_1670, _1671, _1672, 1.0), vec4(_1602, _1605, _1608, _1611));
    float _1713;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1686 = dot(vec4(_1670, _1671, _1672, 1.0), vec4(_1292, _1296, _1299, _1302));
        float _1690 = dot(vec4(_1670, _1671, _1672, 1.0), vec4(_1294, _1297, _1300, _1303));
        float _1694 = dot(vec4(_1670, _1671, _1672, 1.0), vec4(_1295, _1298, _1301, _1304));
        float _1701 = dot(vec4(cbModelParam._m0[39u]), vec4(_1670, _1671, _1672, 1.0));
        _1713 = dot(vec3(isnan(0.0) ? _1694 : (isnan(_1694) ? 0.0 : max(_1694, 0.0)), isnan(0.0) ? _1690 : (isnan(_1690) ? 0.0 : max(_1690, 0.0)), isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1701) ? 0.0 : (isnan(0.0) ? _1701 : max(0.0, _1701))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1713 = 1.0;
    }
    float _1724;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1715 = dot(vec4(cbModelParam._m0[40u]), vec4(_1670, _1671, _1672, 1.0));
        _1724 = dot(vec3(isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0)), isnan(0.0) ? _1676 : (isnan(_1676) ? 0.0 : max(_1676, 0.0)), isnan(0.0) ? _1679 : (isnan(_1679) ? 0.0 : max(_1679, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1715) ? 0.0 : (isnan(0.0) ? _1715 : max(0.0, _1715))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1724 = 1.0;
    }
    float _1728 = (_1724 * cbModelParam._m0[1u].x) + (_1713 * (1.0 - cbModelParam._m0[1u].x));
    float _1738 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _755);
    float _1739 = isnan(_1738) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1738 : min(cbModelParam._m0[25u].z, _1738));
    float _1819;
    float _1821;
    float _1823;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1786 = fma(_990, cbModelParam._m0[13u].z, fma(_986, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _982)) + cbModelParam._m0[13u].w;
        float _1790 = fma(_990, cbModelParam._m0[14u].z, fma(_986, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _982)) + cbModelParam._m0[14u].w;
        float _1794 = fma(_990, cbModelParam._m0[15u].z, fma(_986, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _982)) + cbModelParam._m0[15u].w;
        float _1797 = fma(_928, cbModelParam._m0[13u].z, fma(_927, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _926));
        float _1800 = fma(_928, cbModelParam._m0[14u].z, fma(_927, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _926));
        float _1803 = fma(_928, cbModelParam._m0[15u].z, fma(_927, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _926));
        float _1831;
        if (_1797 > 0.0)
        {
            _1831 = abs((1.0 - _1786) / _1797);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1797 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1786 + 1.0) / _1797);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1831 = frontier_phi_14_12_ladder;
        }
        float _2004;
        if (_1800 > 0.0)
        {
            _2004 = abs((1.0 - _1790) / _1800);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1800 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1790 + 1.0) / _1800);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2004 = frontier_phi_23_19_ladder;
        }
        float _2300;
        if (_1803 > 0.0)
        {
            _2300 = abs((1.0 - _1794) / _1803);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1803 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1794 + 1.0) / _1803);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2300 = frontier_phi_35_30_ladder;
        }
        float _2302 = isnan(_2004) ? _1831 : (isnan(_1831) ? _2004 : min(_1831, _2004));
        float _2303 = isnan(_2300) ? _2302 : (isnan(_2302) ? _2300 : min(_2302, _2300));
        float _2307 = (_2303 * _1797) + _1786;
        float _2308 = (_2303 * _1800) + _1790;
        float _2309 = (_2303 * _1803) + _1794;
        float _2310 = _2303 * 9.9999997473787516355514526367188e-05;
        float _2312 = (-1.0) - _2310;
        float _2314 = _2310 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2309 > _2314) || ((_2309 < _2312) || ((_2308 > _2314) || ((_2308 < _2312) || ((_2307 < _2312) || (_2307 > _2314))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2454 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2309, cbModelParam._m0[9u].z, fma(_2308, cbModelParam._m0[9u].y, _2307 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2309, cbModelParam._m0[10u].z, fma(_2308, cbModelParam._m0[10u].y, _2307 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2309, cbModelParam._m0[11u].z, fma(_2308, cbModelParam._m0[11u].y, _2307 * cbModelParam._m0[11u].x))), _1739);
            frontier_phi_13_35_ladder = _2454.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2454.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2454.x * cbModelParam._m0[1u].y;
        }
        _1819 = frontier_phi_13_35_ladder_2;
        _1821 = frontier_phi_13_35_ladder_1;
        _1823 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1807 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_926, _927, _928), _1739);
        _1819 = _1807.x * cbModelParam._m0[1u].y;
        _1821 = _1807.y * cbModelParam._m0[1u].y;
        _1823 = _1807.z * cbModelParam._m0[1u].y;
    }
    float _1827 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _755);
    float _1828 = isnan(_1827) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1827 : min(cbModelParam._m0[25u].w, _1827));
    float _1919;
    float _1921;
    float _1923;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1883 = fma(_990, cbModelParam._m0[21u].z, fma(_986, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _982)) + cbModelParam._m0[21u].w;
        float _1887 = fma(_990, cbModelParam._m0[22u].z, fma(_986, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _982)) + cbModelParam._m0[22u].w;
        float _1891 = fma(_990, cbModelParam._m0[23u].z, fma(_986, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _982)) + cbModelParam._m0[23u].w;
        float _1894 = fma(_928, cbModelParam._m0[21u].z, fma(_927, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _926));
        float _1897 = fma(_928, cbModelParam._m0[22u].z, fma(_927, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _926));
        float _1900 = fma(_928, cbModelParam._m0[23u].z, fma(_927, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _926));
        float _2009;
        if (_1894 > 0.0)
        {
            _2009 = abs((1.0 - _1883) / _1894);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1894 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1883 + 1.0) / _1894);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2009 = frontier_phi_25_21_ladder;
        }
        float _2327;
        if (_1897 > 0.0)
        {
            _2327 = abs((1.0 - _1887) / _1897);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1897 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1887 + 1.0) / _1897);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2327 = frontier_phi_37_32_ladder;
        }
        float _2665;
        if (_1900 > 0.0)
        {
            _2665 = abs((1.0 - _1891) / _1900);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1900 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1891 + 1.0) / _1900);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2665 = frontier_phi_47_44_ladder;
        }
        float _2667 = isnan(_2327) ? _2009 : (isnan(_2009) ? _2327 : min(_2009, _2327));
        float _2668 = isnan(_2665) ? _2667 : (isnan(_2667) ? _2665 : min(_2667, _2665));
        float _2672 = (_2668 * _1894) + _1883;
        float _2673 = (_2668 * _1897) + _1887;
        float _2674 = (_2668 * _1900) + _1891;
        float _2675 = _2668 * 9.9999997473787516355514526367188e-05;
        float _2676 = (-1.0) - _2675;
        float _2678 = _2675 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2674 > _2678) || ((_2674 < _2676) || ((_2673 > _2678) || ((_2673 < _2676) || ((_2672 < _2676) || (_2672 > _2678))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2796 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2674, cbModelParam._m0[17u].z, fma(_2673, cbModelParam._m0[17u].y, _2672 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2674, cbModelParam._m0[18u].z, fma(_2673, cbModelParam._m0[18u].y, _2672 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2674, cbModelParam._m0[19u].z, fma(_2673, cbModelParam._m0[19u].y, _2672 * cbModelParam._m0[19u].x))), _1828);
            frontier_phi_22_47_ladder = _2796.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2796.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2796.x * cbModelParam._m0[1u].z;
        }
        _1919 = frontier_phi_22_47_ladder_2;
        _1921 = frontier_phi_22_47_ladder_1;
        _1923 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1903 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_926, _927, _928), _1828);
        _1919 = _1903.x * cbModelParam._m0[1u].z;
        _1921 = _1903.y * cbModelParam._m0[1u].z;
        _1923 = _1903.z * cbModelParam._m0[1u].z;
    }
    float _1936 = (((_953 * _903) + _954) * _918) * ((cbModelParam._m0[1u].w * (_1919 - _1819)) + _1819);
    float _1938 = (((_953 * _905) + _954) * _918) * ((cbModelParam._m0[1u].w * (_1921 - _1821)) + _1821);
    float _1940 = (((_953 * _906) + _954) * _918) * ((cbModelParam._m0[1u].w * (_1923 - _1823)) + _1823);
    float _1943 = fma(_1940, cbSceneParam._m0[89u].z, fma(_1938, cbSceneParam._m0[89u].y, _1936 * cbSceneParam._m0[89u].x));
    float _1946 = fma(_1940, cbSceneParam._m0[90u].z, fma(_1938, cbSceneParam._m0[90u].y, _1936 * cbSceneParam._m0[90u].x));
    float _1949 = fma(_1940, cbSceneParam._m0[91u].z, fma(_1938, cbSceneParam._m0[91u].y, _1936 * cbSceneParam._m0[91u].x));
    float _1983 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1987 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1991 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1995 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1996 = _1983 / _1995;
    float _1997 = _1987 / _1995;
    float _1998 = _1991 / _1995;
    float _2145;
    float _2146;
    float _2147;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2025 = ((uint(_1998 > cbSceneParam._m0[59u].y) + uint(_1998 > cbSceneParam._m0[59u].x)) + uint(_1998 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2026 = _2025 + 43u;
        uint _2034 = _2025 + 44u;
        uint _2042 = _2025 + 45u;
        uint _2050 = _2025 + 46u;
        float _2061 = fma(_1995, cbSceneParam._m0[_2026].w, fma(_1991, cbSceneParam._m0[_2026].z, fma(_1987, cbSceneParam._m0[_2026].y, _1983 * cbSceneParam._m0[_2026].x)));
        float _2065 = fma(_1995, cbSceneParam._m0[_2034].w, fma(_1991, cbSceneParam._m0[_2034].z, fma(_1987, cbSceneParam._m0[_2034].y, _1983 * cbSceneParam._m0[_2034].x)));
        float _2073 = fma(_1995, cbSceneParam._m0[_2050].w, fma(_1991, cbSceneParam._m0[_2050].z, fma(_1987, cbSceneParam._m0[_2050].y, _1983 * cbSceneParam._m0[_2050].x)));
        float _2078 = cbSceneParam._m0[33u].z * _2073;
        float _2080 = cbSceneParam._m0[33u].w * _2073;
        float _2083 = fma(_1995, cbSceneParam._m0[_2042].w, fma(_1991, cbSceneParam._m0[_2042].z, fma(_1987, cbSceneParam._m0[_2042].y, _1983 * cbSceneParam._m0[_2042].x))) / _2073;
        float _2131 = (cbSceneParam._m0[33u].x - sqrt(((_1997 * _1997) + (_1996 * _1996)) + (_1998 * _1998))) * cbSceneParam._m0[33u].y;
        float _4417 = isnan(0.0) ? _2131 : (isnan(_2131) ? 0.0 : max(_2131, 0.0));
        float _2138 = (isnan(1.0) ? _4417 : (isnan(_4417) ? 1.0 : min(_4417, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2078 + _2061) / _2073, (_2080 + _2065) / _2073), _2083), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2080 + _2061) / _2073, (_2065 - _2078) / _2073), _2083), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2061 - _2078) / _2073, (_2065 - _2080) / _2073), _2083), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2061 - _2080) / _2073, (_2078 + _2065) / _2073), _2083), 0.0)).x), vec4(0.25)));
        _2145 = 1.0 - (_2138 * cbSceneParam._m0[34u].x);
        _2146 = 1.0 - (_2138 * cbSceneParam._m0[34u].y);
        _2147 = 1.0 - (_2138 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2145 = 1.0;
        _2146 = 1.0;
        _2147 = 1.0;
    }
    float _2211;
    float _2213;
    float _2215;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2199 = fma(_1995, cbSceneParam._m0[63u].w, fma(_1991, cbSceneParam._m0[63u].z, fma(_1987, cbSceneParam._m0[63u].y, _1983 * cbSceneParam._m0[63u].x)));
        float _2200 = fma(_1995, cbSceneParam._m0[60u].w, fma(_1991, cbSceneParam._m0[60u].z, fma(_1987, cbSceneParam._m0[60u].y, _1983 * cbSceneParam._m0[60u].x))) / _2199;
        float _2201 = fma(_1995, cbSceneParam._m0[61u].w, fma(_1991, cbSceneParam._m0[61u].z, fma(_1987, cbSceneParam._m0[61u].y, _1983 * cbSceneParam._m0[61u].x))) / _2199;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2200 >= cbSceneParam._m0[64u].x) && (_2201 >= cbSceneParam._m0[64u].y)) && (_2200 <= cbSceneParam._m0[64u].z)) && (_2201 <= cbSceneParam._m0[64u].w))
        {
            float _2340 = fma(_1995, cbSceneParam._m0[62u].w, fma(_1991, cbSceneParam._m0[62u].z, fma(_1987, cbSceneParam._m0[62u].y, _1983 * cbSceneParam._m0[62u].x))) / _2199;
            float _2344 = isnan(cbSceneParam._m0[41u].w) ? _2340 : (isnan(_2340) ? cbSceneParam._m0[41u].w : max(_2340, cbSceneParam._m0[41u].w));
            float _2387 = (cbSceneParam._m0[33u].x - sqrt(((_1997 * _1997) + (_1996 * _1996)) + (_1998 * _1998))) * cbSceneParam._m0[33u].y;
            float _4433 = isnan(0.0) ? _2387 : (isnan(_2387) ? 0.0 : max(_2387, 0.0));
            float _2394 = (isnan(1.0) ? _4433 : (isnan(_4433) ? 1.0 : min(_4433, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2200, cbSceneParam._m0[33u].w + _2201), _2344), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2200, _2201 - cbSceneParam._m0[33u].z), _2344), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2200 - cbSceneParam._m0[33u].z, _2201 - cbSceneParam._m0[33u].w), _2344), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2200 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2201), _2344), 0.0)).x), vec4(0.25)));
            float _2398 = 1.0 - (_2394 * cbSceneParam._m0[34u].x);
            float _2399 = 1.0 - (_2394 * cbSceneParam._m0[34u].y);
            float _2400 = 1.0 - (_2394 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2400) ? _2147 : (isnan(_2147) ? _2400 : min(_2147, _2400));
            frontier_phi_34_33_ladder_1 = isnan(_2399) ? _2146 : (isnan(_2146) ? _2399 : min(_2146, _2399));
            frontier_phi_34_33_ladder_2 = isnan(_2398) ? _2145 : (isnan(_2145) ? _2398 : min(_2145, _2398));
        }
        else
        {
            frontier_phi_34_33_ladder = _2147;
            frontier_phi_34_33_ladder_1 = _2146;
            frontier_phi_34_33_ladder_2 = _2145;
        }
        _2211 = frontier_phi_34_33_ladder_2;
        _2213 = frontier_phi_34_33_ladder_1;
        _2215 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2211 = _2145;
        _2213 = _2146;
        _2215 = _2147;
    }
    uvec4 _2220 = floatBitsToUint(cbInstanceData._m0[_878 + 5u]);
    uint _2222 = _2220.x * 14u;
    uint _2223 = _2222 + 13u;
    float _2230 = _918 + (-1.0);
    float _2235 = (cbLight._m0[_2223].x * _2230) + 1.0;
    float _2236 = (cbLight._m0[_2223].y * _2230) + 1.0;
    float _2237 = (cbLight._m0[_2223].z * _2230) + 1.0;
    float _2238 = (cbLight._m0[_2223].w * _2230) + 1.0;
    uint _2239 = _2222 + 5u;
    float _2245 = isnan(1.0) ? _2236 : (isnan(_2236) ? 1.0 : min(_2236, 1.0));
    uint _2249 = _2222 + 4u;
    float _2259 = isnan(1.0) ? _2235 : (isnan(_2235) ? 1.0 : min(_2235, 1.0));
    uint _2263 = _2222 | 1u;
    float _2274 = dot(vec3(cbLight._m0[_2222].xyz), vec3(_752, _753, _754));
    float _2277 = dot(vec3(cbLight._m0[_2263].xyz), vec3(_752, _753, _754));
    float _4469 = isnan(0.0) ? _2274 : (isnan(_2274) ? 0.0 : max(_2274, 0.0));
    float _4480 = isnan(0.0) ? _2277 : (isnan(_2277) ? 0.0 : max(_2277, 0.0));
    float _2282 = (isnan(1.0) ? _4469 : (isnan(_4469) ? 1.0 : min(_4469, 1.0))) * 0.3183098733425140380859375;
    float _2284 = (isnan(1.0) ? _4480 : (isnan(_4480) ? 1.0 : min(_4480, 1.0))) * 0.3183098733425140380859375;
    float _2291 = ((cbLight._m0[_2239].x * _2245) * _2284) + (((cbLight._m0[_2249].x * _2211) * _2259) * _2282);
    float _2292 = ((_2245 * cbLight._m0[_2239].y) * _2284) + (((cbLight._m0[_2249].y * _2213) * _2259) * _2282);
    float _2293 = ((_2245 * cbLight._m0[_2239].z) * _2284) + (((cbLight._m0[_2249].z * _2215) * _2259) * _2282);
    uvec4 _2297 = floatBitsToUint(cbLight._m0[_2222 + 12u]);
    bool _2299 = _2297.x == 0u;
    float _2401;
    float _2403;
    float _2405;
    if (_2299)
    {
        _2401 = _2291;
        _2403 = _2292;
        _2405 = _2293;
    }
    else
    {
        uint _2409 = _2222 + 6u;
        float _2425 = (dot(vec3(cbLight._m0[_2222 + 2u].xyz), vec3(_752, _753, _754)) * 0.5) + 0.5;
        float _2426 = _2425 * _2425;
        float _4491 = isnan(0.0) ? _2426 : (isnan(_2426) ? 0.0 : max(_2426, 0.0));
        float _2427 = isnan(1.0) ? _4491 : (isnan(_4491) ? 1.0 : min(_4491, 1.0));
        float _2428 = isnan(1.0) ? _2237 : (isnan(_2237) ? 1.0 : min(_2237, 1.0));
        _2401 = (((cbLight._m0[_2409].x * 0.3183098733425140380859375) * _2427) * _2428) + _2291;
        _2403 = (((cbLight._m0[_2409].y * 0.3183098733425140380859375) * _2427) * _2428) + _2292;
        _2405 = (((cbLight._m0[_2409].z * 0.3183098733425140380859375) * _2427) * _2428) + _2293;
    }
    bool _2408 = _2297.y == 0u;
    float _2463;
    float _2465;
    float _2467;
    if (_2408)
    {
        _2463 = _2401;
        _2465 = _2403;
        _2467 = _2405;
    }
    else
    {
        uint _2636 = _2222 + 7u;
        float _2652 = (dot(vec3(cbLight._m0[_2222 + 3u].xyz), vec3(_752, _753, _754)) * 0.5) + 0.5;
        float _2653 = _2652 * _2652;
        float _4507 = isnan(0.0) ? _2653 : (isnan(_2653) ? 0.0 : max(_2653, 0.0));
        float _2654 = isnan(1.0) ? _4507 : (isnan(_4507) ? 1.0 : min(_4507, 1.0));
        float _2655 = isnan(1.0) ? _2238 : (isnan(_2238) ? 1.0 : min(_2238, 1.0));
        _2463 = (((cbLight._m0[_2636].x * 0.3183098733425140380859375) * _2654) * _2655) + _2401;
        _2465 = (((cbLight._m0[_2636].y * 0.3183098733425140380859375) * _2654) * _2655) + _2403;
        _2467 = (((cbLight._m0[_2636].z * 0.3183098733425140380859375) * _2654) * _2655) + _2405;
    }
    uint _2470 = _2222 + 8u;
    float _2483 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2222].w)) * _755) * 0.949999988079071044921875);
    float _2484 = _2483 * _2483;
    float _2485 = cbLight._m0[_2222].x + _832;
    float _2486 = cbLight._m0[_2222].y + _833;
    float _2487 = cbLight._m0[_2222].z + _834;
    float _2491 = inversesqrt(dot(vec3(_2485, _2486, _2487), vec3(_2485, _2486, _2487)));
    float _2492 = _2491 * _2485;
    float _2493 = _2491 * _2486;
    float _2494 = _2491 * _2487;
    float _2495 = dot(vec3(_752, _753, _754), vec3(cbLight._m0[_2222].xyz));
    float _4523 = isnan(0.0) ? _2495 : (isnan(_2495) ? 0.0 : max(_2495, 0.0));
    float _2498 = isnan(1.0) ? _4523 : (isnan(_4523) ? 1.0 : min(_4523, 1.0));
    float _4534 = isnan(0.0) ? _919 : (isnan(_919) ? 0.0 : max(_919, 0.0));
    float _2499 = isnan(1.0) ? _4534 : (isnan(_4534) ? 1.0 : min(_4534, 1.0));
    float _2500 = dot(vec3(_752, _753, _754), vec3(_2492, _2493, _2494));
    float _4545 = isnan(0.0) ? _2500 : (isnan(_2500) ? 0.0 : max(_2500, 0.0));
    float _2503 = isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0));
    float _2504 = dot(vec3(cbLight._m0[_2222].xyz), vec3(_2492, _2493, _2494));
    float _4556 = isnan(0.0) ? _2504 : (isnan(_2504) ? 0.0 : max(_2504, 0.0));
    float _2508 = _2484 * _2484;
    float _2512 = ((_2503 * _2503) * (_2508 + (-1.0))) + 1.0;
    float _2520 = exp2(log2(1.0 - (isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0)))) * 5.0);
    float _2521 = 0.959999978542327880859375 - _900;
    float _2523 = 0.959999978542327880859375 - _901;
    float _2524 = 0.959999978542327880859375 - _902;
    float _2531 = 1.0 - _2484;
    float _2542 = (0.5 / (((_2499 * ((_2498 * _2531) + _2484)) + 9.9999999392252902907785028219223e-09) + (((_2499 * _2531) + _2484) * _2498))) * _2498;
    float _4567 = isnan(0.0) ? _2542 : (isnan(_2542) ? 0.0 : max(_2542, 0.0));
    float _2544 = (isnan(1.0) ? _4567 : (isnan(_4567) ? 1.0 : min(_4567, 1.0))) * (_2508 / ((_2512 * _2512) * 3.141590118408203125));
    uint _2558 = _2222 + 9u;
    float _2569 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2263].w)) * _755) * 0.949999988079071044921875);
    float _2570 = _2569 * _2569;
    float _2571 = cbLight._m0[_2263].x + _832;
    float _2572 = cbLight._m0[_2263].y + _833;
    float _2573 = cbLight._m0[_2263].z + _834;
    float _2577 = inversesqrt(dot(vec3(_2571, _2572, _2573), vec3(_2571, _2572, _2573)));
    float _2578 = _2577 * _2571;
    float _2579 = _2577 * _2572;
    float _2580 = _2577 * _2573;
    float _2581 = dot(vec3(_752, _753, _754), vec3(cbLight._m0[_2263].xyz));
    float _4578 = isnan(0.0) ? _2581 : (isnan(_2581) ? 0.0 : max(_2581, 0.0));
    float _2584 = isnan(1.0) ? _4578 : (isnan(_4578) ? 1.0 : min(_4578, 1.0));
    float _2585 = dot(vec3(_752, _753, _754), vec3(_2578, _2579, _2580));
    float _4589 = isnan(0.0) ? _2585 : (isnan(_2585) ? 0.0 : max(_2585, 0.0));
    float _2588 = isnan(1.0) ? _4589 : (isnan(_4589) ? 1.0 : min(_4589, 1.0));
    float _2589 = dot(vec3(cbLight._m0[_2263].xyz), vec3(_2578, _2579, _2580));
    float _4600 = isnan(0.0) ? _2589 : (isnan(_2589) ? 0.0 : max(_2589, 0.0));
    float _2593 = _2570 * _2570;
    float _2597 = ((_2588 * _2588) * (_2593 + (-1.0))) + 1.0;
    float _2604 = exp2(log2(1.0 - (isnan(1.0) ? _4600 : (isnan(_4600) ? 1.0 : min(_4600, 1.0)))) * 5.0);
    float _2611 = 1.0 - _2570;
    float _2621 = (0.5 / (((_2499 * ((_2584 * _2611) + _2570)) + 9.9999999392252902907785028219223e-09) + (((_2499 * _2611) + _2570) * _2584))) * _2584;
    float _4611 = isnan(0.0) ? _2621 : (isnan(_2621) ? 0.0 : max(_2621, 0.0));
    float _2623 = (isnan(1.0) ? _4611 : (isnan(_4611) ? 1.0 : min(_4611, 1.0))) * (_2593 / ((_2597 * _2597) * 3.141590118408203125));
    float _2633 = (((((_2604 * _2521) + _903) * cbLight._m0[_2558].x) * _2623) * _2245) + ((((cbLight._m0[_2470].x * _2211) * ((_2520 * _2521) + _903)) * _2544) * _2259);
    float _2634 = (((((_2604 * _2523) + _905) * cbLight._m0[_2558].y) * _2623) * _2245) + ((((cbLight._m0[_2470].y * _2213) * ((_2520 * _2523) + _905)) * _2544) * _2259);
    float _2635 = (((((_2604 * _2524) + _906) * cbLight._m0[_2558].z) * _2623) * _2245) + ((((cbLight._m0[_2470].z * _2215) * ((_2520 * _2524) + _906)) * _2544) * _2259);
    float _2691;
    float _2693;
    float _2695;
    if (_2299)
    {
        _2691 = _2633;
        _2693 = _2634;
        _2695 = _2635;
    }
    else
    {
        uint _2697 = _2222 + 2u;
        uint _2701 = _2222 + 10u;
        float _2715 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2697].w)) * _755) * 0.949999988079071044921875);
        float _2716 = _2715 * _2715;
        float _2717 = cbLight._m0[_2697].x + _832;
        float _2718 = cbLight._m0[_2697].y + _833;
        float _2719 = cbLight._m0[_2697].z + _834;
        float _2723 = inversesqrt(dot(vec3(_2717, _2718, _2719), vec3(_2717, _2718, _2719)));
        float _2724 = _2723 * _2717;
        float _2725 = _2723 * _2718;
        float _2726 = _2723 * _2719;
        float _2727 = dot(vec3(_752, _753, _754), vec3(cbLight._m0[_2697].xyz));
        float _4622 = isnan(0.0) ? _2727 : (isnan(_2727) ? 0.0 : max(_2727, 0.0));
        float _2730 = isnan(1.0) ? _4622 : (isnan(_4622) ? 1.0 : min(_4622, 1.0));
        float _2731 = dot(vec3(_752, _753, _754), vec3(_2724, _2725, _2726));
        float _4633 = isnan(0.0) ? _2731 : (isnan(_2731) ? 0.0 : max(_2731, 0.0));
        float _2734 = isnan(1.0) ? _4633 : (isnan(_4633) ? 1.0 : min(_4633, 1.0));
        float _2735 = dot(vec3(cbLight._m0[_2697].xyz), vec3(_2724, _2725, _2726));
        float _4644 = isnan(0.0) ? _2735 : (isnan(_2735) ? 0.0 : max(_2735, 0.0));
        float _2739 = _2716 * _2716;
        float _2743 = ((_2734 * _2734) * (_2739 + (-1.0))) + 1.0;
        float _2750 = exp2(log2(1.0 - (isnan(1.0) ? _4644 : (isnan(_4644) ? 1.0 : min(_4644, 1.0)))) * 5.0);
        float _2757 = 1.0 - _2716;
        float _2767 = (0.5 / (((_2499 * ((_2730 * _2757) + _2716)) + 9.9999999392252902907785028219223e-09) + (((_2499 * _2757) + _2716) * _2730))) * _2730;
        float _4655 = isnan(0.0) ? _2767 : (isnan(_2767) ? 0.0 : max(_2767, 0.0));
        float _2769 = (isnan(1.0) ? _4655 : (isnan(_4655) ? 1.0 : min(_4655, 1.0))) * (_2739 / ((_2743 * _2743) * 3.141590118408203125));
        float _2770 = isnan(1.0) ? _2237 : (isnan(_2237) ? 1.0 : min(_2237, 1.0));
        _2691 = (((((_2750 * _2521) + _903) * cbLight._m0[_2701].x) * _2769) * _2770) + _2633;
        _2693 = (((((_2750 * _2523) + _905) * cbLight._m0[_2701].y) * _2769) * _2770) + _2634;
        _2695 = (((((_2750 * _2524) + _906) * cbLight._m0[_2701].z) * _2769) * _2770) + _2635;
    }
    float _2801;
    float _2803;
    float _2805;
    if (_2408)
    {
        _2801 = _2691;
        _2803 = _2693;
        _2805 = _2695;
    }
    else
    {
        uint _2812 = _2222 + 3u;
        uint _2816 = _2222 + 11u;
        float _2830 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2812].w)) * _755) * 0.949999988079071044921875);
        float _2831 = _2830 * _2830;
        float _2832 = cbLight._m0[_2812].x + _832;
        float _2833 = cbLight._m0[_2812].y + _833;
        float _2834 = cbLight._m0[_2812].z + _834;
        float _2838 = inversesqrt(dot(vec3(_2832, _2833, _2834), vec3(_2832, _2833, _2834)));
        float _2839 = _2838 * _2832;
        float _2840 = _2838 * _2833;
        float _2841 = _2838 * _2834;
        float _2842 = dot(vec3(_752, _753, _754), vec3(cbLight._m0[_2812].xyz));
        float _4671 = isnan(0.0) ? _2842 : (isnan(_2842) ? 0.0 : max(_2842, 0.0));
        float _2845 = isnan(1.0) ? _4671 : (isnan(_4671) ? 1.0 : min(_4671, 1.0));
        float _2846 = dot(vec3(_752, _753, _754), vec3(_2839, _2840, _2841));
        float _4682 = isnan(0.0) ? _2846 : (isnan(_2846) ? 0.0 : max(_2846, 0.0));
        float _2849 = isnan(1.0) ? _4682 : (isnan(_4682) ? 1.0 : min(_4682, 1.0));
        float _2850 = dot(vec3(cbLight._m0[_2812].xyz), vec3(_2839, _2840, _2841));
        float _4693 = isnan(0.0) ? _2850 : (isnan(_2850) ? 0.0 : max(_2850, 0.0));
        float _2854 = _2831 * _2831;
        float _2858 = ((_2849 * _2849) * (_2854 + (-1.0))) + 1.0;
        float _2865 = exp2(log2(1.0 - (isnan(1.0) ? _4693 : (isnan(_4693) ? 1.0 : min(_4693, 1.0)))) * 5.0);
        float _2872 = 1.0 - _2831;
        float _2882 = (0.5 / (((_2499 * ((_2845 * _2872) + _2831)) + 9.9999999392252902907785028219223e-09) + (((_2499 * _2872) + _2831) * _2845))) * _2845;
        float _4704 = isnan(0.0) ? _2882 : (isnan(_2882) ? 0.0 : max(_2882, 0.0));
        float _2884 = (isnan(1.0) ? _4704 : (isnan(_4704) ? 1.0 : min(_4704, 1.0))) * (_2854 / ((_2858 * _2858) * 3.141590118408203125));
        float _2885 = isnan(1.0) ? _2238 : (isnan(_2238) ? 1.0 : min(_2238, 1.0));
        _2801 = (((((_2865 * _2521) + _903) * cbLight._m0[_2816].x) * _2884) * _2885) + _2691;
        _2803 = (((((_2865 * _2523) + _905) * cbLight._m0[_2816].y) * _2884) * _2885) + _2693;
        _2805 = (((((_2865 * _2524) + _906) * cbLight._m0[_2816].z) * _2884) * _2885) + _2695;
    }
    float _2951;
    float _2953;
    float _2955;
    float _2957;
    float _2959;
    float _2961;
    if (_2220.y == 0u)
    {
        uvec4 _2906 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2907 = _2906.x;
        uint _2918 = uint((float(_2906.y) * floor(float(uint(cbSceneParam._m0[85u].y * _841) / _2907))) + floor(float(uint(cbSceneParam._m0[85u].x * _840) / _2907)));
        float _2928 = (log2(_1998 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2929 = isnan(0.0) ? _2928 : (isnan(_2928) ? 0.0 : max(_2928, 0.0));
        uint _2932 = uint(isnan(14.0) ? _2929 : (isnan(_2929) ? 14.0 : min(_2929, 14.0)));
        uvec4 _2937 = texelFetch(g_lightClusterGridBuffer, int(((_2932 << 2u) + (_2918 << 6u)) >> 2u));
        uint _2938 = _2937.x;
        uint _2939 = _2906.z;
        float _3018;
        float _3020;
        float _3022;
        float _3024;
        float _3026;
        float _3028;
        if (((((1u << ((_2939 >> 4u) & 15u)) + 4294967295u) & _2938) == 0u) || ((_2939 & 240u) == 0u))
        {
            _3018 = 0.0;
            _3020 = 0.0;
            _3022 = 0.0;
            _3024 = 0.0;
            _3026 = 0.0;
            _3028 = 0.0;
        }
        else
        {
            float _3019;
            float _3021;
            float _3023;
            float _3025;
            float _3027;
            float _3029;
            float _3162 = 0.0;
            float _3163 = 0.0;
            float _3164 = 0.0;
            float _3165 = 0.0;
            float _3166 = 0.0;
            float _3167 = 0.0;
            uint _3168 = 0u;
            uint _3177;
            bool _3178;
            for (;;)
            {
                _3177 = texelFetch(g_lightClassification, int((((_2932 << 5u) + (_2918 << 9u)) + (_3168 << 2u)) >> 2u)).x;
                _3178 = _3177 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3178)
                {
                    frontier_phi_66_pred = _3167;
                    frontier_phi_66_pred_1 = _3166;
                    frontier_phi_66_pred_2 = _3165;
                    frontier_phi_66_pred_3 = _3164;
                    frontier_phi_66_pred_4 = _3163;
                    frontier_phi_66_pred_5 = _3162;
                }
                else
                {
                    float _3286;
                    float _3287;
                    float _3288;
                    float _3289;
                    float _3290;
                    float _3291;
                    uint _3292;
                    _3286 = _3162;
                    _3287 = _3163;
                    _3288 = _3164;
                    _3289 = _3165;
                    _3290 = _3166;
                    _3291 = _3167;
                    _3292 = _3177;
                    float _3218;
                    float _3219;
                    float _3220;
                    float _3221;
                    float _3222;
                    float _3223;
                    for (;;)
                    {
                        uint _3296 = uint(findLSB(_3292)) + (_3168 << 5u);
                        uint _3293 = (_3292 + 4294967295u) & _3292;
                        uint _3298 = _3296 * 48u;
                        vec4 _3312 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3298)).x, texelFetch(g_PointLightRenderingBuffer, int(_3298 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3298 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3298 + 3u)).x));
                        uint _3318 = (_3296 * 48u) + 4u;
                        vec4 _3331 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3318)).x, texelFetch(g_PointLightRenderingBuffer, int(_3318 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3318 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3318 + 3u)).x));
                        uint _3337 = (_3296 * 48u) + 8u;
                        vec3 _3348 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3337)).x, texelFetch(g_PointLightRenderingBuffer, int(_3337 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3337 + 2u)).x));
                        float _3352 = _3312.x - _1996;
                        float _3353 = _3312.y - _1997;
                        float _3354 = _3312.z - _1998;
                        float _3355 = dot(vec3(_3352, _3353, _3354), vec3(_3352, _3353, _3354));
                        float _3358 = inversesqrt(_3355);
                        float _3359 = _3358 * _3352;
                        float _3360 = _3358 * _3353;
                        float _3361 = _3358 * _3354;
                        float _3362 = dot(vec3(_859, _862, _865), vec3(_3359, _3360, _3361));
                        float _3367 = 1.0 - (_3355 * _3312.w);
                        float _4730 = isnan(0.0) ? _3367 : (isnan(_3367) ? 0.0 : max(_3367, 0.0));
                        float _3368 = isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0));
                        float _3369 = sqrt(_3355) * _3331.w;
                        float _3372 = 1.39999997615814208984375 / (_3369 + 1.39999997615814208984375);
                        float _3373 = _3372 * _3372;
                        float _3376 = ((1.0 - _3373) * _3362) + _3373;
                        float _3379 = _3369 * _3369;
                        float _3383 = ((isnan(0.0) ? _3376 : (isnan(_3376) ? 0.0 : max(_3376, 0.0))) * _3368) / ((_3379 * 0.699999988079071044921875) + 1.0);
                        float _3387 = (-0.0) - _1996;
                        float _3388 = (-0.0) - _1997;
                        float _3389 = (-0.0) - _1998;
                        float _3393 = inversesqrt(dot(vec3(_3387, _3388, _3389), vec3(_3387, _3388, _3389)));
                        float _3394 = _3393 * _3387;
                        float _3395 = _3393 * _3388;
                        float _3396 = _3393 * _3389;
                        float _3403 = exp2(log2(1.0 / ((_3379 * 3.5) + 5.0)) * 0.25);
                        float _3404 = 1.0 - _934;
                        float _3411 = sqrt(1.0 - ((1.0 - (_3404 * _3404)) * (1.0 - (_3403 * _3403))));
                        float _3412 = _3411 * _3411;
                        float _3413 = _3412 * _3412;
                        float _3414 = _3394 + _3359;
                        float _3415 = _3395 + _3360;
                        float _3416 = _3396 + _3361;
                        float _3420 = inversesqrt(dot(vec3(_3414, _3415, _3416), vec3(_3414, _3415, _3416)));
                        float _3424 = dot(vec3(_859, _862, _865), vec3(_3394, _3395, _3396));
                        float _4746 = isnan(0.0) ? _3424 : (isnan(_3424) ? 0.0 : max(_3424, 0.0));
                        float _3427 = isnan(1.0) ? _4746 : (isnan(_4746) ? 1.0 : min(_4746, 1.0));
                        float _3428 = dot(vec3(_859, _862, _865), vec3(_3420 * _3414, _3420 * _3415, _3420 * _3416));
                        float _4757 = isnan(0.0) ? _3428 : (isnan(_3428) ? 0.0 : max(_3428, 0.0));
                        float _3431 = isnan(1.0) ? _4757 : (isnan(_4757) ? 1.0 : min(_4757, 1.0));
                        float _3435 = ((_3431 * _3431) * (_3413 + (-1.0))) + 1.0;
                        float _3436 = _3372 * _3412;
                        float _3437 = _3436 * _3436;
                        float _3440 = ((1.0 - _3437) * _3362) + _3437;
                        float _4768 = isnan(0.0) ? _3440 : (isnan(_3440) ? 0.0 : max(_3440, 0.0));
                        float _3441 = isnan(1.0) ? _4768 : (isnan(_4768) ? 1.0 : min(_4768, 1.0));
                        float _3442 = 1.0 - _3412;
                        float _3452 = (0.5 / (((_3441 * ((_3427 * _3442) + _3412)) + 9.9999999392252902907785028219223e-09) + (((_3441 * _3442) + _3412) * _3427))) * _3441;
                        float _4779 = isnan(0.0) ? _3452 : (isnan(_3452) ? 0.0 : max(_3452, 0.0));
                        float _3463 = (((_3413 * 3.1415927410125732421875) * (isnan(1.0) ? _4779 : (isnan(_4779) ? 1.0 : min(_4779, 1.0)))) / ((_3435 * _3435) * ((_3379 * 2.1991131305694580078125) + 3.141590118408203125))) * _3368;
                        _3221 = (_3383 * _3331.x) + _3289;
                        _3222 = (_3383 * _3331.y) + _3290;
                        _3223 = (_3383 * _3331.z) + _3291;
                        _3218 = (_3463 * _3348.x) + _3286;
                        _3219 = (_3463 * _3348.y) + _3287;
                        _3220 = (_3463 * _3348.z) + _3288;
                        if (_3293 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3286 = _3218;
                            _3287 = _3219;
                            _3288 = _3220;
                            _3289 = _3221;
                            _3290 = _3222;
                            _3291 = _3223;
                            _3292 = _3293;
                        }
                    }
                    frontier_phi_66_pred = _3223;
                    frontier_phi_66_pred_1 = _3222;
                    frontier_phi_66_pred_2 = _3221;
                    frontier_phi_66_pred_3 = _3220;
                    frontier_phi_66_pred_4 = _3219;
                    frontier_phi_66_pred_5 = _3218;
                }
                _3029 = frontier_phi_66_pred;
                _3027 = frontier_phi_66_pred_1;
                _3025 = frontier_phi_66_pred_2;
                _3023 = frontier_phi_66_pred_3;
                _3021 = frontier_phi_66_pred_4;
                _3019 = frontier_phi_66_pred_5;
                uint _3169 = _3168 + 1u;
                if (_3169 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3162 = _3019;
                    _3163 = _3021;
                    _3164 = _3023;
                    _3165 = _3025;
                    _3166 = _3027;
                    _3167 = _3029;
                    _3168 = _3169;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3018 = _3019;
            _3020 = _3021;
            _3022 = _3023;
            _3024 = _3025;
            _3026 = _3027;
            _3028 = _3029;
        }
        uvec4 _3032 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3033 = _3032.z;
        uint _3035 = (_3033 >> 8u) & 15u;
        float _3130;
        float _3132;
        float _3134;
        float _3136;
        float _3138;
        float _3140;
        if (((4294967295u << _3035) & _2938) == 0u)
        {
            _3130 = _3018;
            _3132 = _3020;
            _3134 = _3022;
            _3136 = _3024;
            _3138 = _3026;
            _3140 = _3028;
        }
        else
        {
            float _3155 = inversesqrt(dot(vec3(_1996, _1997, _1998), vec3(_1996, _1997, _1998)));
            float _3156 = _3155 * _1996;
            float _3157 = _3155 * _1997;
            float _3158 = _3155 * _1998;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3035 < ((_3033 >> 12u) & 15u))
            {
                float _3131;
                float _3133;
                float _3135;
                float _3137;
                float _3139;
                float _3141;
                float _3269 = _3018;
                float _3270 = _3020;
                float _3271 = _3022;
                float _3272 = _3024;
                float _3273 = _3026;
                float _3274 = _3028;
                uint _3275 = _3035;
                uint _3284;
                bool _3285;
                for (;;)
                {
                    _3284 = texelFetch(g_lightClassification, int((((_2932 << 5u) + (_2918 << 9u)) + (_3275 << 2u)) >> 2u)).x;
                    _3285 = _3284 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3285)
                    {
                        frontier_phi_72_pred = _3274;
                        frontier_phi_72_pred_1 = _3273;
                        frontier_phi_72_pred_2 = _3272;
                        frontier_phi_72_pred_3 = _3271;
                        frontier_phi_72_pred_4 = _3270;
                        frontier_phi_72_pred_5 = _3269;
                    }
                    else
                    {
                        float _3468;
                        float _3469;
                        float _3470;
                        float _3471;
                        float _3472;
                        float _3473;
                        float _3762;
                        float _3763;
                        float _3764;
                        float _3765;
                        float _3766;
                        float _3767;
                        float _3481 = _3269;
                        float _3482 = _3270;
                        float _3483 = _3271;
                        float _3484 = _3272;
                        float _3485 = _3273;
                        float _3486 = _3274;
                        uint _3487 = _3284;
                        uint _3488;
                        vec4 _3513;
                        float _3514;
                        vec4 _3529;
                        vec3 _3541;
                        vec4 _3556;
                        vec4 _3571;
                        float _3618;
                        bool _3619;
                        for (;;)
                        {
                            uint _3498 = ((_3275 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3487));
                            _3488 = (_3487 + 4294967295u) & _3487;
                            uint _3500 = _3498 * 40u;
                            _3513 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3500)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3500 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3500 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3500 + 3u)).x));
                            _3514 = _3513.w;
                            uint _3516 = (_3498 * 40u) + 4u;
                            _3529 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3516)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3516 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3516 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3516 + 3u)).x));
                            uint _3531 = (_3498 * 40u) + 8u;
                            _3541 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3531)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3531 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3531 + 2u)).x));
                            uint _3543 = (_3498 * 40u) + 16u;
                            _3556 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3543)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3543 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3543 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3543 + 3u)).x));
                            uint _3558 = (_3498 * 40u) + 20u;
                            _3571 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3558)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3558 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3558 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3558 + 3u)).x));
                            uint _3574 = (_3498 * 40u) + 24u;
                            vec4 _3587 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3574)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3574 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3574 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3574 + 3u)).x));
                            uint _3593 = (_3498 * 40u) + 28u;
                            vec4 _3606 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3593)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3593 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3593 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3593 + 3u)).x));
                            _3618 = fma(_1998, _3606.z, fma(_1997, _3606.y, _3606.x * _1996)) + _3606.w;
                            _3619 = !((fma(_1998, _3587.z, fma(_1997, _3587.y, _3587.x * _1996)) + _3587.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3619)
                            {
                                float _3646 = _3513.x - _1996;
                                float _3647 = _3513.y - _1997;
                                float _3648 = _3513.z - _1998;
                                float _3649 = dot(vec3(_3646, _3647, _3648), vec3(_3646, _3647, _3648));
                                float _3652 = inversesqrt(_3649);
                                float _3653 = _3652 * _3646;
                                float _3654 = _3652 * _3647;
                                float _3655 = _3652 * _3648;
                                float _3659 = 1.0 - (_3649 / (_3514 * _3514));
                                float _4790 = isnan(0.0) ? _3659 : (isnan(_3659) ? 0.0 : max(_3659, 0.0));
                                float _3660 = isnan(1.0) ? _4790 : (isnan(_4790) ? 1.0 : min(_4790, 1.0));
                                float _3664 = sqrt(_3649) * _3529.w;
                                float _3666 = 1.39999997615814208984375 / (_3664 + 1.39999997615814208984375);
                                float _3667 = _3666 * _3666;
                                float _3670 = ((1.0 - _3667) * dot(vec3(_3653, _3654, _3655), vec3(_859, _862, _865))) + _3667;
                                float _3673 = _3664 * _3664;
                                float _3677 = (fma(_1998, _3556.z, fma(_1997, _3556.y, _3556.x * _1996)) + _3556.w) / _3618;
                                float _3678 = (fma(_1998, _3571.z, fma(_1997, _3571.y, _3571.x * _1996)) + _3571.w) / _3618;
                                float _3682 = 1.0 - dot(vec2(_3677, _3678), vec2(_3677, _3678));
                                float _4806 = isnan(0.0) ? _3682 : (isnan(_3682) ? 0.0 : max(_3682, 0.0));
                                float _3683 = isnan(1.0) ? _4806 : (isnan(_4806) ? 1.0 : min(_4806, 1.0));
                                float _3684 = _3683 * (((isnan(0.0) ? _3670 : (isnan(_3670) ? 0.0 : max(_3670, 0.0))) * _3660) / ((_3673 * 0.699999988079071044921875) + 1.0));
                                float _3696 = exp2(log2(1.0 / ((_3673 * 3.5) + 5.0)) * 0.25);
                                float _3697 = 1.0 - _934;
                                float _3704 = sqrt(1.0 - ((1.0 - (_3697 * _3697)) * (1.0 - (_3696 * _3696))));
                                float _3705 = _3704 * _3704;
                                float _3706 = _3705 * _3705;
                                float _3707 = _3653 - _3156;
                                float _3708 = _3654 - _3157;
                                float _3709 = _3655 - _3158;
                                float _3713 = inversesqrt(dot(vec3(_3707, _3708, _3709), vec3(_3707, _3708, _3709)));
                                float _3717 = dot(vec3(_859, _862, _865), vec3((-0.0) - _3156, (-0.0) - _3157, (-0.0) - _3158));
                                float _4817 = isnan(0.0) ? _3717 : (isnan(_3717) ? 0.0 : max(_3717, 0.0));
                                float _3720 = isnan(1.0) ? _4817 : (isnan(_4817) ? 1.0 : min(_4817, 1.0));
                                float _3721 = dot(vec3(_859, _862, _865), vec3(_3713 * _3707, _3713 * _3708, _3713 * _3709));
                                float _4828 = isnan(0.0) ? _3721 : (isnan(_3721) ? 0.0 : max(_3721, 0.0));
                                float _3724 = isnan(1.0) ? _4828 : (isnan(_4828) ? 1.0 : min(_4828, 1.0));
                                float _3728 = ((_3724 * _3724) * (_3706 + (-1.0))) + 1.0;
                                float _3729 = _3666 * _3705;
                                float _3730 = _3729 * _3729;
                                float _3736 = ((1.0 - _3730) * dot(vec3(_859, _862, _865), vec3(_3653, _3654, _3655))) + _3730;
                                float _4839 = isnan(0.0) ? _3736 : (isnan(_3736) ? 0.0 : max(_3736, 0.0));
                                float _3737 = isnan(1.0) ? _4839 : (isnan(_4839) ? 1.0 : min(_4839, 1.0));
                                float _3738 = 1.0 - _3705;
                                float _3748 = (0.5 / (((_3737 * ((_3720 * _3738) + _3705)) + 9.9999999392252902907785028219223e-09) + (((_3737 * _3738) + _3705) * _3720))) * _3737;
                                float _4850 = isnan(0.0) ? _3748 : (isnan(_3748) ? 0.0 : max(_3748, 0.0));
                                float _3758 = (_3683 * _3660) * (((_3706 * 3.1415927410125732421875) * (isnan(1.0) ? _4850 : (isnan(_4850) ? 1.0 : min(_4850, 1.0)))) / ((_3728 * _3728) * ((_3673 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3684 * _3529.y;
                                frontier_phi_78_pred_1 = _3684 * _3529.x;
                                frontier_phi_78_pred_2 = _3758 * _3541.z;
                                frontier_phi_78_pred_3 = _3758 * _3541.y;
                                frontier_phi_78_pred_4 = _3758 * _3541.x;
                                frontier_phi_78_pred_5 = _3684 * _3529.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3766 = frontier_phi_78_pred;
                            _3765 = frontier_phi_78_pred_1;
                            _3764 = frontier_phi_78_pred_2;
                            _3763 = frontier_phi_78_pred_3;
                            _3762 = frontier_phi_78_pred_4;
                            _3767 = frontier_phi_78_pred_5;
                            _3471 = _3765 + _3484;
                            _3472 = _3766 + _3485;
                            _3473 = _3767 + _3486;
                            _3468 = _3762 + _3481;
                            _3469 = _3763 + _3482;
                            _3470 = _3764 + _3483;
                            if (_3488 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3481 = _3468;
                                _3482 = _3469;
                                _3483 = _3470;
                                _3484 = _3471;
                                _3485 = _3472;
                                _3486 = _3473;
                                _3487 = _3488;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3473;
                        frontier_phi_72_pred_1 = _3472;
                        frontier_phi_72_pred_2 = _3471;
                        frontier_phi_72_pred_3 = _3470;
                        frontier_phi_72_pred_4 = _3469;
                        frontier_phi_72_pred_5 = _3468;
                    }
                    _3141 = frontier_phi_72_pred;
                    _3139 = frontier_phi_72_pred_1;
                    _3137 = frontier_phi_72_pred_2;
                    _3135 = frontier_phi_72_pred_3;
                    _3133 = frontier_phi_72_pred_4;
                    _3131 = frontier_phi_72_pred_5;
                    uint _3276 = _3275 + 1u;
                    if (_3276 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3269 = _3131;
                        _3270 = _3133;
                        _3271 = _3135;
                        _3272 = _3137;
                        _3273 = _3139;
                        _3274 = _3141;
                        _3275 = _3276;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3141;
                frontier_phi_60_61_ladder_1 = _3139;
                frontier_phi_60_61_ladder_2 = _3135;
                frontier_phi_60_61_ladder_3 = _3133;
                frontier_phi_60_61_ladder_4 = _3131;
                frontier_phi_60_61_ladder_5 = _3137;
            }
            else
            {
                frontier_phi_60_61_ladder = _3028;
                frontier_phi_60_61_ladder_1 = _3026;
                frontier_phi_60_61_ladder_2 = _3022;
                frontier_phi_60_61_ladder_3 = _3020;
                frontier_phi_60_61_ladder_4 = _3018;
                frontier_phi_60_61_ladder_5 = _3024;
            }
            _3130 = frontier_phi_60_61_ladder_4;
            _3132 = frontier_phi_60_61_ladder_3;
            _3134 = frontier_phi_60_61_ladder_2;
            _3136 = frontier_phi_60_61_ladder_5;
            _3138 = frontier_phi_60_61_ladder_1;
            _3140 = frontier_phi_60_61_ladder;
        }
        float _3145 = isnan(1.0) ? _918 : (isnan(_918) ? 1.0 : min(_918, 1.0));
        _2951 = (_3145 * _3136) + _2463;
        _2953 = (_3145 * _3138) + _2465;
        _2955 = (_3145 * _3140) + _2467;
        _2957 = ((_3130 * _903) * _3145) + _2801;
        _2959 = ((_3132 * _905) * _3145) + _2803;
        _2961 = ((_3134 * _906) * _3145) + _2805;
    }
    else
    {
        _2951 = _2463;
        _2953 = _2465;
        _2955 = _2467;
        _2957 = _2801;
        _2959 = _2803;
        _2961 = _2805;
    }
    float _4866 = isnan(0.0) ? _893 : (isnan(_893) ? 0.0 : max(_893, 0.0));
    float _4877 = isnan(0.0) ? _894 : (isnan(_894) ? 0.0 : max(_894, 0.0));
    float _4888 = isnan(0.0) ? _895 : (isnan(_895) ? 0.0 : max(_895, 0.0));
    uint _2981 = _878 + 6u;
    float _2989 = _840 / cbSceneParam._m0[86u].x;
    float _2990 = _841 / cbSceneParam._m0[86u].y;
    vec4 _3004 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2989, _2990, (log2((isnan(cbSceneParam._m0[77u].w) ? _775 : (isnan(_775) ? cbSceneParam._m0[77u].w : min(_775, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3006 = _3004.x;
    float _3007 = _3004.y;
    float _3008 = _3004.z;
    float _3009 = _3004.w;
    float _3080;
    float _3082;
    float _3084;
    float _3086;
    if (_775 > cbSceneParam._m0[78u].w)
    {
        float _3043 = isnan(_775) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _775 : min(cbSceneParam._m0[80u].w, _775));
        float _3044 = _3043 / _775;
        float _3055 = _3044 * _825;
        float _3056 = _826 * _3044;
        float _3057 = (-0.0) - _3056;
        float _3058 = _3044 * _827;
        float _3060 = (cbSceneParam._m0[77u].w * _3057) / _3043;
        float _3061 = _3060 + cbSceneParam._m0[79u].w;
        float _3062 = cbSceneParam._m0[79u].w - _3056;
        float _3068 = sqrt(((_3055 * _3055) + (_3056 * _3056)) + (_3058 * _3058));
        float _3071 = (1.0 - (cbSceneParam._m0[77u].w / _3043)) * _3068;
        float _3076 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3078 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3231;
        if (abs((_3057 - _3060) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3231 = ((((_3061 > 0.0) ? exp2(_3076 * _3061) : (2.0 - exp2(_3078 * _3061))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3071;
        }
        else
        {
            float _3191 = 1.0 / cbSceneParam._m0[80u].x;
            float _3192 = isnan(_3062) ? _3061 : (isnan(_3061) ? _3062 : max(_3061, _3062));
            float _3193 = isnan(_3062) ? _3061 : (isnan(_3061) ? _3062 : min(_3061, _3062));
            float _3202 = isnan(0.0) ? _3192 : (isnan(_3192) ? 0.0 : min(_3192, 0.0));
            float _3203 = isnan(0.0) ? _3193 : (isnan(_3193) ? 0.0 : min(_3193, 0.0));
            _3231 = ((abs(_3068 / _3057) * cbSceneParam._m0[80u].y) * ((((_3202 - _3203) * 2.0) - ((exp2(_3076 * (isnan(0.0) ? _3192 : (isnan(_3192) ? 0.0 : max(_3192, 0.0)))) - exp2(_3076 * (isnan(0.0) ? _3193 : (isnan(_3193) ? 0.0 : max(_3193, 0.0))))) * _3191)) - ((exp2(_3078 * _3202) - exp2(_3078 * _3203)) * _3191))) + (_3071 * cbSceneParam._m0[80u].z);
        }
        vec4 _3233 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2989, _2990, 1.0), 0.0);
        float _3242 = exp2((_3231 * (-1.44269502162933349609375)) * (1.0 - _3233.w));
        float _3243 = log2(_3242);
        float _3259 = log2(_3009);
        _3080 = (exp2(_3259 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3243 * cbSceneParam._m0[78u].x)) * _3233.x) / cbSceneParam._m0[78u].x)) + _3006;
        _3082 = (exp2(_3259 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3243 * cbSceneParam._m0[78u].y)) * _3233.y) / cbSceneParam._m0[78u].y)) + _3007;
        _3084 = (exp2(_3259 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3243 * cbSceneParam._m0[78u].z)) * _3233.z) / cbSceneParam._m0[78u].z)) + _3008;
        _3086 = _3242 * _3009;
    }
    else
    {
        _3080 = _3006;
        _3082 = _3007;
        _3084 = _3008;
        _3086 = _3009;
    }
    float _3098 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3099 = _3098 == 3.0;
    float _3100 = log2(_3086);
    float _3107 = exp2(_3100 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4866 : (isnan(_4866) ? 1.0 : min(_4866, 1.0))) * (_2951 + ((isnan(0.0) ? _1649 : (isnan(_1649) ? 0.0 : max(_1649, 0.0))) * _918))) + ((_2957 + ((isnan(0.0) ? _1943 : (isnan(_1943) ? 0.0 : max(_1943, 0.0))) * _1728)) * cbPerFrame._m0[3u].x));
    float _3108 = exp2(_3100 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4877 : (isnan(_4877) ? 1.0 : min(_4877, 1.0))) * (_2953 + ((isnan(0.0) ? _1652 : (isnan(_1652) ? 0.0 : max(_1652, 0.0))) * _918))) + ((_2959 + ((isnan(0.0) ? _1946 : (isnan(_1946) ? 0.0 : max(_1946, 0.0))) * _1728)) * cbPerFrame._m0[3u].x));
    float _3109 = exp2(_3100 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4888 : (isnan(_4888) ? 1.0 : min(_4888, 1.0))) * (_2955 + ((isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0))) * _918))) + ((_2961 + ((isnan(0.0) ? _1949 : (isnan(_1949) ? 0.0 : max(_1949, 0.0))) * _1728)) * cbPerFrame._m0[3u].x));
    float _3118 = (_3098 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3118 * (_3099 ? _3107 : (_3107 + (cbSceneParam._m0[72u].w * _3080)));
    SV_Target.y = _3118 * (_3099 ? _3108 : (_3108 + (cbSceneParam._m0[72u].w * _3082)));
    SV_Target.z = _3118 * (_3099 ? _3109 : (_3109 + (cbSceneParam._m0[72u].w * _3084)));
    SV_Target.w = cbInstanceData._m0[_2981].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2981].w;
}


