#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[20];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_19;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_3;
layout(set = 0, binding = 14) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_5;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_6;
layout(set = 0, binding = 17) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_11;
layout(set = 0, binding = 5) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_17;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_18;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1185;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _201 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _202 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _203 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _209 = inversesqrt(dot(vec3(_201, _202, _203), vec3(_201, _202, _203)));
    float _216 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _223 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _246 = sin(cbMtdParam._m0[18u].x);
    float _247 = cos(cbMtdParam._m0[18u].x);
    float _248 = TEXCOORD.x - cbMtdParam._m0[17u].w;
    float _249 = TEXCOORD.y - cbMtdParam._m0[17u].w;
    float _257 = (cbMtdParam._m0[17u].w + cbMtdParam._m0[19u].y) + fma(_249, (-0.0) - _246, _247 * _248);
    float _259 = (cbMtdParam._m0[17u].w + cbMtdParam._m0[19u].z) + fma(_249, _247, _248 * _246);
    vec4 _272 = texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _257) + cbTextureTilingScale._m0[1u].z, (_259 * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _278 = _272.x * cbMtdParam._m0[10u].x;
    float _279 = _272.y * cbMtdParam._m0[10u].y;
    float _280 = _272.z * cbMtdParam._m0[10u].z;
    vec4 _298 = texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    vec4 _317 = texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _342 = cbMtdParam._m0[19u].x * texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w)).x;
    float _353 = ((cbMtdParam._m0[15u].x * (-1.39999997615814208984375)) * (((1.0 - _317.x) * 2.0) - _342)) + 1.0;
    float _3797 = isnan(0.0) ? _353 : (isnan(_353) ? 0.0 : max(_353, 0.0));
    float _354 = isnan(1.0) ? _3797 : (isnan(_3797) ? 1.0 : min(_3797, 1.0));
    float _361 = (_354 * ((_298.x * cbMtdParam._m0[11u].x) - _278)) + _278;
    float _362 = (_354 * ((_298.y * cbMtdParam._m0[11u].y) - _279)) + _279;
    float _363 = (_354 * ((_298.z * cbMtdParam._m0[11u].z) - _280)) + _280;
    vec4 _381 = texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w));
    float _394 = (((((1.0 - _317.y) * 2.0) - _342) * (-1.39999997615814208984375)) * cbMtdParam._m0[18u].z) + 1.0;
    float _3808 = isnan(0.0) ? _394 : (isnan(_394) ? 0.0 : max(_394, 0.0));
    float _395 = isnan(1.0) ? _3808 : (isnan(_3808) ? 1.0 : min(_3808, 1.0));
    float _402 = (((_381.x * cbMtdParam._m0[12u].x) - _361) * _395) + _361;
    float _403 = (_395 * ((_381.y * cbMtdParam._m0[12u].y) - _362)) + _362;
    float _404 = (_395 * ((_381.z * cbMtdParam._m0[12u].z) - _363)) + _363;
    vec4 _421 = texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _434 = (((((1.0 - _317.z) * 2.0) - _342) * (-1.39999997615814208984375)) * cbMtdParam._m0[18u].w) + 1.0;
    float _3819 = isnan(0.0) ? _434 : (isnan(_434) ? 0.0 : max(_434, 0.0));
    float _435 = isnan(1.0) ? _3819 : (isnan(_3819) ? 1.0 : min(_3819, 1.0));
    float _442 = (((_421.x * cbMtdParam._m0[13u].x) - _402) * _435) + _402;
    float _443 = (_435 * ((_421.y * cbMtdParam._m0[13u].y) - _403)) + _403;
    float _444 = (_435 * ((_421.z * cbMtdParam._m0[13u].z) - _404)) + _404;
    vec4 _457 = texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * _257) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _259) + cbTextureTilingScale._m0[5u].w));
    float _459 = _457.x;
    float _477 = ((texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w)).x - _459) * _354) + _459;
    float _495 = ((texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w)).x - _477) * _395) + _477;
    float _514 = (((texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x - _495) * _435) + _495) * cbMtdParam._m0[18u].y;
    vec4 _527 = texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * _257) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _259) + cbTextureTilingScale._m0[14u].w));
    float _529 = _527.x;
    float _530 = _527.y;
    float _533 = cbMtdParam._m0[17u].y * _527.z;
    vec4 _545 = texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.x) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.y) + cbTextureTilingScale._m0[15u].w));
    float _554 = (((cbMtdParam._m0[17u].x * _545.z) - _533) * _354) + _533;
    vec4 _567 = texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _579 = (((cbMtdParam._m0[16u].w * _567.z) - _554) * _395) + _554;
    vec4 _592 = texture(sampler2D(C_3Mask_Detail_M1_UVrotation_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _601 = (((cbMtdParam._m0[16u].z * _592.z) - _579) * _435) + _579;
    float _606 = ((_545.x - _529) * _354) + _529;
    float _607 = ((_545.y - _530) * _354) + _530;
    float _612 = ((_567.x - _606) * _395) + _606;
    float _613 = ((_567.y - _607) * _395) + _607;
    float _622 = ((((_592.x - _612) * _435) + _612) * 2.0) + (-1.0);
    float _624 = ((((_592.y - _613) * _435) + _613) * 2.0) + (-1.0);
    float _625 = dot(vec2(_622, _624), vec2(_622, _624));
    float _3830 = isnan(0.0) ? _625 : (isnan(_625) ? 0.0 : max(_625, 0.0));
    float _630 = sqrt(1.0 - (isnan(1.0) ? _3830 : (isnan(_3830) ? 1.0 : min(_3830, 1.0))));
    float _633 = fma(_630, _216 * NORMAL.x, fma(_624, _223 * TANGENT.x, (_209 * _201) * _622));
    float _636 = fma(_630, _216 * NORMAL.y, fma(_624, _223 * TANGENT.y, (_209 * _202) * _622));
    float _639 = fma(_630, _216 * NORMAL.z, fma(_624, _223 * TANGENT.z, (_209 * _203) * _622));
    float _643 = inversesqrt(dot(vec3(_633, _636, _639), vec3(_633, _636, _639)));
    float _644 = _643 * _633;
    float _645 = _643 * _636;
    float _646 = _643 * _639;
    float _3841 = isnan(0.0) ? _601 : (isnan(_601) ? 0.0 : max(_601, 0.0));
    float _647 = isnan(1.0) ? _3841 : (isnan(_3841) ? 1.0 : min(_3841, 1.0));
    float _3852 = isnan(0.0) ? _442 : (isnan(_442) ? 0.0 : max(_442, 0.0));
    float _3863 = isnan(0.0) ? _443 : (isnan(_443) ? 0.0 : max(_443, 0.0));
    float _3874 = isnan(0.0) ? _444 : (isnan(_444) ? 0.0 : max(_444, 0.0));
    float _3885 = isnan(0.0) ? _514 : (isnan(_514) ? 0.0 : max(_514, 0.0));
    float _651 = isnan(1.0) ? _3885 : (isnan(_3885) ? 1.0 : min(_3885, 1.0));
    float _667 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _707 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _717 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _707);
    float _718 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _707);
    float _719 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _707);
    float _723 = inversesqrt(dot(vec3(_717, _718, _719), vec3(_717, _718, _719)));
    float _724 = _717 * _723;
    float _725 = _718 * _723;
    float _726 = _719 * _723;
    float _732 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _733 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _751 = fma(_646, cbSceneParam._m0[5u].z, fma(_645, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _644));
    float _754 = fma(_646, cbSceneParam._m0[6u].z, fma(_645, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _644));
    float _757 = fma(_646, cbSceneParam._m0[7u].z, fma(_645, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _644));
    uint _770 = uint(roundEven(NORMAL.w)) * 13u;
    uint _772 = (_770 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _778 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3852 : (isnan(_3852) ? 1.0 : min(_3852, 1.0)))) * cbInstanceData._m0[_772].x;
    float _779 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3863 : (isnan(_3863) ? 1.0 : min(_3863, 1.0)))) * cbInstanceData._m0[_772].y;
    float _780 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3874 : (isnan(_3874) ? 1.0 : min(_3874, 1.0)))) * cbInstanceData._m0[_772].z;
    float _3896 = isnan(0.0) ? _778 : (isnan(_778) ? 0.0 : max(_778, 0.0));
    float _781 = isnan(1.0) ? _3896 : (isnan(_3896) ? 1.0 : min(_3896, 1.0));
    float _3907 = isnan(0.0) ? _779 : (isnan(_779) ? 0.0 : max(_779, 0.0));
    float _782 = isnan(1.0) ? _3907 : (isnan(_3907) ? 1.0 : min(_3907, 1.0));
    float _3918 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
    float _783 = isnan(1.0) ? _3918 : (isnan(_3918) ? 1.0 : min(_3918, 1.0));
    float _784 = 1.0 - _651;
    float _785 = _781 * _784;
    float _786 = _782 * _784;
    float _787 = _783 * _784;
    float _792 = (_781 + (-0.039999999105930328369140625)) * _651;
    float _793 = (_782 + (-0.039999999105930328369140625)) * _651;
    float _794 = (_783 + (-0.039999999105930328369140625)) * _651;
    float _795 = _792 + 0.039999999105930328369140625;
    float _797 = _793 + 0.039999999105930328369140625;
    float _798 = _794 + 0.039999999105930328369140625;
    vec4 _807 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _732, cbSceneParam._m0[86u].y * _733));
    float _810 = _807.x * TEXCOORD_5.w;
    float _811 = dot(vec3(_644, _645, _646), vec3(_724, _725, _726));
    float _814 = _811 * 2.0;
    float _818 = (_814 * _644) - _724;
    float _819 = (_814 * _645) - _725;
    float _820 = (_814 * _646) - _726;
    float _824 = abs(dot(vec3(_724, _725, _726), vec3(_644, _645, _646)));
    float _3929 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
    float _826 = sqrt(_647);
    float _839 = exp2((_826 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3929 : (isnan(_3929) ? 1.0 : min(_3929, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_826 * 3.0));
    float _845 = (1.0 - _839) * ((_826 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _846 = _839 * _826;
    float _874 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _878 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _882 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1184;
    float _1186;
    float _1187;
    float _1188;
    float _1189;
    float _1190;
    float _1191;
    float _1192;
    float _1193;
    float _1194;
    float _1195;
    float _1196;
    float _1197;
    float _1198;
    float _1199;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _909 = fma(_882, cbModelParam._m0[26u].z, fma(_878, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _874));
        float _913 = fma(_882, cbModelParam._m0[27u].z, fma(_878, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _874));
        float _917 = fma(_882, cbModelParam._m0[28u].z, fma(_878, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _874));
        float _942 = _874 + _644;
        float _943 = _878 + _645;
        float _944 = _882 + _646;
        float _954 = fma(_944, cbModelParam._m0[26u].z, fma(_943, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _942)) - _909;
        float _955 = fma(_944, cbModelParam._m0[27u].z, fma(_943, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _942)) - _913;
        float _956 = fma(_944, cbModelParam._m0[28u].z, fma(_943, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _942)) - _917;
        float _960 = inversesqrt(dot(vec3(_954, _955, _956), vec3(_954, _955, _956)));
        float _973 = ((_960 * _954) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_909 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _974 = ((_960 * _955) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_913 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _975 = ((_960 * _956) / cbModelParam._m0[34u].z) + ((((((_917 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _978 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_973, _974, _975), 0.0);
        vec4 _985 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_973, _974, _975), 0.0);
        vec4 _992 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_973, _974, _975), 0.0);
        vec4 _999 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_973, _974, _975), 0.0);
        float _1012 = exp2((_978.w + (-0.5)) * 20.0) * 2.0;
        float _1013 = _1012 * (_978.x + (-0.5));
        float _1014 = _1012 * (_978.y + (-0.5));
        float _1015 = _1012 * (_978.z + (-0.5));
        float _1022 = exp2((_985.w + (-0.5)) * 20.0) * 2.0;
        float _1023 = _1022 * (_985.x + (-0.5));
        float _1024 = _1022 * (_985.y + (-0.5));
        float _1025 = _1022 * (_985.z + (-0.5));
        float _1032 = exp2((_992.w + (-0.5)) * 20.0) * 2.0;
        float _1033 = _1032 * (_992.x + (-0.5));
        float _1034 = _1032 * (_992.y + (-0.5));
        float _1035 = _1032 * (_992.z + (-0.5));
        float _1042 = exp2((_999.w + (-0.5)) * 20.0) * 2.0;
        float _1043 = _1042 * (_999.x + (-0.5));
        float _1044 = _1042 * (_999.y + (-0.5));
        float _1045 = _1042 * (_999.z + (-0.5));
        float _1046 = isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0));
        float _1047 = isnan(0.0) ? _1044 : (isnan(_1044) ? 0.0 : max(_1044, 0.0));
        float _1048 = isnan(0.0) ? _1045 : (isnan(_1045) ? 0.0 : max(_1045, 0.0));
        float _1049 = _1013 * 0.5;
        float _1050 = _1023 * 0.5;
        float _1051 = _1033 * 0.5;
        float _1052 = dot(vec3(_1049, _1050, _1051), vec3(_1049, _1050, _1051));
        float _1057 = (_1052 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1052);
        float _1066 = (dot(vec3(_644, _645, _646), vec3(_1057 * _1049, _1057 * _1050, _1057 * _1051)) + 1.0) * 0.5;
        float _3955 = isnan(0.0) ? _1066 : (isnan(_1066) ? 0.0 : max(_1066, 0.0));
        float _1076 = sqrt(((_1050 * _1050) + (_1049 * _1049)) + (_1051 * _1051)) / (_1046 + 9.9999997473787516355514526367188e-06);
        float _3966 = isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : max(_1076, 0.0));
        float _1077 = isnan(1.0) ? _3966 : (isnan(_3966) ? 1.0 : min(_3966, 1.0));
        float _1078 = _1077 * 2.0;
        float _1082 = (1.0 - _1077) / (_1077 + 1.0);
        float _3977 = isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0));
        float _1083 = isnan(1.0) ? _3977 : (isnan(_3977) ? 1.0 : min(_3977, 1.0));
        float _1092 = ((((1.0 - _1083) * (_1078 + 2.0)) * exp2(log2(isnan(1.0) ? _3955 : (isnan(_3955) ? 1.0 : min(_3955, 1.0))) * (_1078 + 1.0))) + _1083) * _1046;
        float _1093 = _1014 * 0.5;
        float _1094 = _1024 * 0.5;
        float _1095 = _1034 * 0.5;
        float _1096 = dot(vec3(_1093, _1094, _1095), vec3(_1093, _1094, _1095));
        float _1101 = (_1096 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1096);
        float _1109 = (dot(vec3(_644, _645, _646), vec3(_1101 * _1093, _1101 * _1094, _1101 * _1095)) + 1.0) * 0.5;
        float _3988 = isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0));
        float _1118 = sqrt(((_1094 * _1094) + (_1093 * _1093)) + (_1095 * _1095)) / (_1047 + 9.9999997473787516355514526367188e-06);
        float _3999 = isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0));
        float _1119 = isnan(1.0) ? _3999 : (isnan(_3999) ? 1.0 : min(_3999, 1.0));
        float _1120 = _1119 * 2.0;
        float _1124 = (1.0 - _1119) / (_1119 + 1.0);
        float _4010 = isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0));
        float _1125 = isnan(1.0) ? _4010 : (isnan(_4010) ? 1.0 : min(_4010, 1.0));
        float _1134 = ((((1.0 - _1125) * (_1120 + 2.0)) * exp2(log2(isnan(1.0) ? _3988 : (isnan(_3988) ? 1.0 : min(_3988, 1.0))) * (_1120 + 1.0))) + _1125) * _1047;
        float _1135 = _1015 * 0.5;
        float _1136 = _1025 * 0.5;
        float _1137 = _1035 * 0.5;
        float _1138 = dot(vec3(_1135, _1136, _1137), vec3(_1135, _1136, _1137));
        float _1143 = (_1138 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1138);
        float _1151 = (dot(vec3(_644, _645, _646), vec3(_1143 * _1135, _1143 * _1136, _1143 * _1137)) + 1.0) * 0.5;
        float _4021 = isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0));
        float _1160 = sqrt(((_1136 * _1136) + (_1135 * _1135)) + (_1137 * _1137)) / (_1048 + 9.9999997473787516355514526367188e-06);
        float _4032 = isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0));
        float _1161 = isnan(1.0) ? _4032 : (isnan(_4032) ? 1.0 : min(_4032, 1.0));
        float _1162 = _1161 * 2.0;
        float _1166 = (1.0 - _1161) / (_1161 + 1.0);
        float _4043 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
        float _1167 = isnan(1.0) ? _4043 : (isnan(_4043) ? 1.0 : min(_4043, 1.0));
        float _1176 = ((((1.0 - _1167) * (_1162 + 2.0)) * exp2(log2(isnan(1.0) ? _4021 : (isnan(_4021) ? 1.0 : min(_4021, 1.0))) * (_1162 + 1.0))) + _1167) * _1048;
        _1184 = _1015;
        _1186 = _1014;
        _1187 = _1013;
        _1188 = _1025;
        _1189 = _1024;
        _1190 = _1023;
        _1191 = _1035;
        _1192 = _1034;
        _1193 = _1033;
        _1194 = _1048;
        _1195 = _1047;
        _1196 = _1046;
        _1197 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1092 : (isnan(_1092) ? 0.0 : max(_1092, 0.0)));
        _1198 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1134 : (isnan(_1134) ? 0.0 : max(_1134, 0.0)));
        _1199 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1176 : (isnan(_1176) ? 0.0 : max(_1176, 0.0)));
    }
    else
    {
        _1184 = _1185;
        _1186 = _1185;
        _1187 = _1185;
        _1188 = _1185;
        _1189 = _1185;
        _1190 = _1185;
        _1191 = _1185;
        _1192 = _1185;
        _1193 = _1185;
        _1194 = _1185;
        _1195 = _1185;
        _1196 = _1185;
        _1197 = 0.0;
        _1198 = 0.0;
        _1199 = 0.0;
    }
    float _1494;
    float _1495;
    float _1496;
    float _1497;
    float _1498;
    float _1499;
    float _1500;
    float _1501;
    float _1502;
    float _1503;
    float _1504;
    float _1505;
    float _1506;
    float _1507;
    float _1508;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1225 = fma(_882, cbModelParam._m0[30u].z, fma(_878, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _874));
        float _1229 = fma(_882, cbModelParam._m0[31u].z, fma(_878, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _874));
        float _1233 = fma(_882, cbModelParam._m0[32u].z, fma(_878, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _874));
        float _1256 = _874 + _644;
        float _1257 = _878 + _645;
        float _1258 = _882 + _646;
        float _1268 = fma(_1258, cbModelParam._m0[30u].z, fma(_1257, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1256)) - _1225;
        float _1269 = fma(_1258, cbModelParam._m0[31u].z, fma(_1257, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1256)) - _1229;
        float _1270 = fma(_1258, cbModelParam._m0[32u].z, fma(_1257, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1256)) - _1233;
        float _1274 = inversesqrt(dot(vec3(_1268, _1269, _1270), vec3(_1268, _1269, _1270)));
        float _1287 = ((_1274 * _1268) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1225 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1288 = ((_1274 * _1269) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1229 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1289 = ((_1274 * _1270) / cbModelParam._m0[35u].z) + ((((((_1233 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1291 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1287, _1288, _1289), 0.0);
        vec4 _1298 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1287, _1288, _1289), 0.0);
        vec4 _1305 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1287, _1288, _1289), 0.0);
        vec4 _1312 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1287, _1288, _1289), 0.0);
        float _1324 = exp2((_1291.w + (-0.5)) * 20.0) * 2.0;
        float _1325 = _1324 * (_1291.x + (-0.5));
        float _1326 = _1324 * (_1291.y + (-0.5));
        float _1327 = _1324 * (_1291.z + (-0.5));
        float _1334 = exp2((_1298.w + (-0.5)) * 20.0) * 2.0;
        float _1335 = _1334 * (_1298.x + (-0.5));
        float _1336 = _1334 * (_1298.y + (-0.5));
        float _1337 = _1334 * (_1298.z + (-0.5));
        float _1344 = exp2((_1305.w + (-0.5)) * 20.0) * 2.0;
        float _1345 = _1344 * (_1305.x + (-0.5));
        float _1346 = _1344 * (_1305.y + (-0.5));
        float _1347 = _1344 * (_1305.z + (-0.5));
        float _1354 = exp2((_1312.w + (-0.5)) * 20.0) * 2.0;
        float _1355 = _1354 * (_1312.x + (-0.5));
        float _1356 = _1354 * (_1312.y + (-0.5));
        float _1357 = _1354 * (_1312.z + (-0.5));
        float _1358 = isnan(0.0) ? _1355 : (isnan(_1355) ? 0.0 : max(_1355, 0.0));
        float _1359 = isnan(0.0) ? _1356 : (isnan(_1356) ? 0.0 : max(_1356, 0.0));
        float _1360 = isnan(0.0) ? _1357 : (isnan(_1357) ? 0.0 : max(_1357, 0.0));
        float _1361 = _1325 * 0.5;
        float _1362 = _1335 * 0.5;
        float _1363 = _1345 * 0.5;
        float _1364 = dot(vec3(_1361, _1362, _1363), vec3(_1361, _1362, _1363));
        float _1369 = (_1364 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1364);
        float _1377 = (dot(vec3(_644, _645, _646), vec3(_1369 * _1361, _1369 * _1362, _1369 * _1363)) + 1.0) * 0.5;
        float _4084 = isnan(0.0) ? _1377 : (isnan(_1377) ? 0.0 : max(_1377, 0.0));
        float _1386 = sqrt(((_1362 * _1362) + (_1361 * _1361)) + (_1363 * _1363)) / (_1358 + 9.9999997473787516355514526367188e-06);
        float _4095 = isnan(0.0) ? _1386 : (isnan(_1386) ? 0.0 : max(_1386, 0.0));
        float _1387 = isnan(1.0) ? _4095 : (isnan(_4095) ? 1.0 : min(_4095, 1.0));
        float _1388 = _1387 * 2.0;
        float _1392 = (1.0 - _1387) / (_1387 + 1.0);
        float _4106 = isnan(0.0) ? _1392 : (isnan(_1392) ? 0.0 : max(_1392, 0.0));
        float _1393 = isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0));
        float _1402 = ((((1.0 - _1393) * (_1388 + 2.0)) * exp2(log2(isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0))) * (_1388 + 1.0))) + _1393) * _1358;
        float _1403 = _1326 * 0.5;
        float _1404 = _1336 * 0.5;
        float _1405 = _1346 * 0.5;
        float _1406 = dot(vec3(_1403, _1404, _1405), vec3(_1403, _1404, _1405));
        float _1411 = (_1406 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1406);
        float _1419 = (dot(vec3(_644, _645, _646), vec3(_1411 * _1403, _1411 * _1404, _1411 * _1405)) + 1.0) * 0.5;
        float _4117 = isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0));
        float _1428 = sqrt(((_1404 * _1404) + (_1403 * _1403)) + (_1405 * _1405)) / (_1359 + 9.9999997473787516355514526367188e-06);
        float _4128 = isnan(0.0) ? _1428 : (isnan(_1428) ? 0.0 : max(_1428, 0.0));
        float _1429 = isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0));
        float _1430 = _1429 * 2.0;
        float _1434 = (1.0 - _1429) / (_1429 + 1.0);
        float _4139 = isnan(0.0) ? _1434 : (isnan(_1434) ? 0.0 : max(_1434, 0.0));
        float _1435 = isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0));
        float _1444 = ((((1.0 - _1435) * (_1430 + 2.0)) * exp2(log2(isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0))) * (_1430 + 1.0))) + _1435) * _1359;
        float _1445 = _1327 * 0.5;
        float _1446 = _1337 * 0.5;
        float _1447 = _1347 * 0.5;
        float _1448 = dot(vec3(_1445, _1446, _1447), vec3(_1445, _1446, _1447));
        float _1453 = (_1448 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1448);
        float _1461 = (dot(vec3(_644, _645, _646), vec3(_1453 * _1445, _1453 * _1446, _1453 * _1447)) + 1.0) * 0.5;
        float _4150 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0));
        float _1470 = sqrt(((_1446 * _1446) + (_1445 * _1445)) + (_1447 * _1447)) / (_1360 + 9.9999997473787516355514526367188e-06);
        float _4161 = isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0));
        float _1471 = isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0));
        float _1472 = _1471 * 2.0;
        float _1476 = (1.0 - _1471) / (_1471 + 1.0);
        float _4172 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
        float _1477 = isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0));
        float _1486 = ((((1.0 - _1477) * (_1472 + 2.0)) * exp2(log2(isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0))) * (_1472 + 1.0))) + _1477) * _1360;
        _1494 = _1327;
        _1495 = _1326;
        _1496 = _1325;
        _1497 = _1337;
        _1498 = _1336;
        _1499 = _1335;
        _1500 = _1347;
        _1501 = _1346;
        _1502 = _1345;
        _1503 = _1360;
        _1504 = _1359;
        _1505 = _1358;
        _1506 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0)));
        _1507 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0)));
        _1508 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0)));
    }
    else
    {
        _1494 = _1185;
        _1495 = _1185;
        _1496 = _1185;
        _1497 = _1185;
        _1498 = _1185;
        _1499 = _1185;
        _1500 = _1185;
        _1501 = _1185;
        _1502 = _1185;
        _1503 = _1185;
        _1504 = _1185;
        _1505 = _1185;
        _1506 = 0.0;
        _1507 = 0.0;
        _1508 = 0.0;
    }
    float _1518 = (cbModelParam._m0[1u].x * (_1506 - _1197)) + _1197;
    float _1519 = (cbModelParam._m0[1u].x * (_1507 - _1198)) + _1198;
    float _1520 = (cbModelParam._m0[1u].x * (_1508 - _1199)) + _1199;
    float _1541 = fma(_1520, cbSceneParam._m0[89u].z, fma(_1519, cbSceneParam._m0[89u].y, _1518 * cbSceneParam._m0[89u].x));
    float _1544 = fma(_1520, cbSceneParam._m0[90u].z, fma(_1519, cbSceneParam._m0[90u].y, _1518 * cbSceneParam._m0[90u].x));
    float _1547 = fma(_1520, cbSceneParam._m0[91u].z, fma(_1519, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1518));
    float _1562 = _818 * 0.5;
    float _1563 = _819 * 0.5;
    float _1564 = _820 * 0.5;
    float _1565 = dot(vec4(_1562, _1563, _1564, 1.0), vec4(_1496, _1499, _1502, _1505));
    float _1568 = dot(vec4(_1562, _1563, _1564, 1.0), vec4(_1495, _1498, _1501, _1504));
    float _1571 = dot(vec4(_1562, _1563, _1564, 1.0), vec4(_1494, _1497, _1500, _1503));
    float _1605;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1578 = dot(vec4(_1562, _1563, _1564, 1.0), vec4(_1184, _1188, _1191, _1194));
        float _1582 = dot(vec4(_1562, _1563, _1564, 1.0), vec4(_1186, _1189, _1192, _1195));
        float _1586 = dot(vec4(_1562, _1563, _1564, 1.0), vec4(_1187, _1190, _1193, _1196));
        float _1593 = dot(vec4(cbModelParam._m0[39u]), vec4(_1562, _1563, _1564, 1.0));
        _1605 = dot(vec3(isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0)), isnan(0.0) ? _1582 : (isnan(_1582) ? 0.0 : max(_1582, 0.0)), isnan(0.0) ? _1578 : (isnan(_1578) ? 0.0 : max(_1578, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1593) ? 0.0 : (isnan(0.0) ? _1593 : max(0.0, _1593))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1605 = 1.0;
    }
    float _1616;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1607 = dot(vec4(cbModelParam._m0[40u]), vec4(_1562, _1563, _1564, 1.0));
        _1616 = dot(vec3(isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0)), isnan(0.0) ? _1568 : (isnan(_1568) ? 0.0 : max(_1568, 0.0)), isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1607) ? 0.0 : (isnan(0.0) ? _1607 : max(0.0, _1607))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1616 = 1.0;
    }
    float _1620 = (_1616 * cbModelParam._m0[1u].x) + (_1605 * (1.0 - cbModelParam._m0[1u].x));
    float _1630 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _647);
    float _1631 = isnan(_1630) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1630 : min(cbModelParam._m0[25u].z, _1630));
    float _1711;
    float _1713;
    float _1715;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1678 = fma(_882, cbModelParam._m0[13u].z, fma(_878, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _874)) + cbModelParam._m0[13u].w;
        float _1682 = fma(_882, cbModelParam._m0[14u].z, fma(_878, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _874)) + cbModelParam._m0[14u].w;
        float _1686 = fma(_882, cbModelParam._m0[15u].z, fma(_878, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _874)) + cbModelParam._m0[15u].w;
        float _1689 = fma(_820, cbModelParam._m0[13u].z, fma(_819, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _818));
        float _1692 = fma(_820, cbModelParam._m0[14u].z, fma(_819, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _818));
        float _1695 = fma(_820, cbModelParam._m0[15u].z, fma(_819, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _818));
        float _1723;
        if (_1689 > 0.0)
        {
            _1723 = abs((1.0 - _1678) / _1689);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1689 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1678 + 1.0) / _1689);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1723 = frontier_phi_14_12_ladder;
        }
        float _1896;
        if (_1692 > 0.0)
        {
            _1896 = abs((1.0 - _1682) / _1692);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1692 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1682 + 1.0) / _1692);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1896 = frontier_phi_23_19_ladder;
        }
        float _2192;
        if (_1695 > 0.0)
        {
            _2192 = abs((1.0 - _1686) / _1695);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1695 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1686 + 1.0) / _1695);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2192 = frontier_phi_35_30_ladder;
        }
        float _2194 = isnan(_1896) ? _1723 : (isnan(_1723) ? _1896 : min(_1723, _1896));
        float _2195 = isnan(_2192) ? _2194 : (isnan(_2194) ? _2192 : min(_2194, _2192));
        float _2199 = (_2195 * _1689) + _1678;
        float _2200 = (_2195 * _1692) + _1682;
        float _2201 = (_2195 * _1695) + _1686;
        float _2202 = _2195 * 9.9999997473787516355514526367188e-05;
        float _2204 = (-1.0) - _2202;
        float _2206 = _2202 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2201 > _2206) || ((_2201 < _2204) || ((_2200 > _2206) || ((_2200 < _2204) || ((_2199 < _2204) || (_2199 > _2206))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2346 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2201, cbModelParam._m0[9u].z, fma(_2200, cbModelParam._m0[9u].y, _2199 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2201, cbModelParam._m0[10u].z, fma(_2200, cbModelParam._m0[10u].y, _2199 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2201, cbModelParam._m0[11u].z, fma(_2200, cbModelParam._m0[11u].y, _2199 * cbModelParam._m0[11u].x))), _1631);
            frontier_phi_13_35_ladder = _2346.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2346.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2346.x * cbModelParam._m0[1u].y;
        }
        _1711 = frontier_phi_13_35_ladder_2;
        _1713 = frontier_phi_13_35_ladder_1;
        _1715 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1699 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_818, _819, _820), _1631);
        _1711 = _1699.x * cbModelParam._m0[1u].y;
        _1713 = _1699.y * cbModelParam._m0[1u].y;
        _1715 = _1699.z * cbModelParam._m0[1u].y;
    }
    float _1719 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _647);
    float _1720 = isnan(_1719) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1719 : min(cbModelParam._m0[25u].w, _1719));
    float _1811;
    float _1813;
    float _1815;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1775 = fma(_882, cbModelParam._m0[21u].z, fma(_878, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _874)) + cbModelParam._m0[21u].w;
        float _1779 = fma(_882, cbModelParam._m0[22u].z, fma(_878, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _874)) + cbModelParam._m0[22u].w;
        float _1783 = fma(_882, cbModelParam._m0[23u].z, fma(_878, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _874)) + cbModelParam._m0[23u].w;
        float _1786 = fma(_820, cbModelParam._m0[21u].z, fma(_819, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _818));
        float _1789 = fma(_820, cbModelParam._m0[22u].z, fma(_819, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _818));
        float _1792 = fma(_820, cbModelParam._m0[23u].z, fma(_819, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _818));
        float _1901;
        if (_1786 > 0.0)
        {
            _1901 = abs((1.0 - _1775) / _1786);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1786 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1775 + 1.0) / _1786);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1901 = frontier_phi_25_21_ladder;
        }
        float _2219;
        if (_1789 > 0.0)
        {
            _2219 = abs((1.0 - _1779) / _1789);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1789 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1779 + 1.0) / _1789);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2219 = frontier_phi_37_32_ladder;
        }
        float _2557;
        if (_1792 > 0.0)
        {
            _2557 = abs((1.0 - _1783) / _1792);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1792 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1783 + 1.0) / _1792);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2557 = frontier_phi_47_44_ladder;
        }
        float _2559 = isnan(_2219) ? _1901 : (isnan(_1901) ? _2219 : min(_1901, _2219));
        float _2560 = isnan(_2557) ? _2559 : (isnan(_2559) ? _2557 : min(_2559, _2557));
        float _2564 = (_2560 * _1786) + _1775;
        float _2565 = (_2560 * _1789) + _1779;
        float _2566 = (_2560 * _1792) + _1783;
        float _2567 = _2560 * 9.9999997473787516355514526367188e-05;
        float _2568 = (-1.0) - _2567;
        float _2570 = _2567 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2566 > _2570) || ((_2566 < _2568) || ((_2565 > _2570) || ((_2565 < _2568) || ((_2564 < _2568) || (_2564 > _2570))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2688 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2566, cbModelParam._m0[17u].z, fma(_2565, cbModelParam._m0[17u].y, _2564 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2566, cbModelParam._m0[18u].z, fma(_2565, cbModelParam._m0[18u].y, _2564 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2566, cbModelParam._m0[19u].z, fma(_2565, cbModelParam._m0[19u].y, _2564 * cbModelParam._m0[19u].x))), _1720);
            frontier_phi_22_47_ladder = _2688.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2688.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2688.x * cbModelParam._m0[1u].z;
        }
        _1811 = frontier_phi_22_47_ladder_2;
        _1813 = frontier_phi_22_47_ladder_1;
        _1815 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1795 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_818, _819, _820), _1720);
        _1811 = _1795.x * cbModelParam._m0[1u].z;
        _1813 = _1795.y * cbModelParam._m0[1u].z;
        _1815 = _1795.z * cbModelParam._m0[1u].z;
    }
    float _1828 = (((_845 * _795) + _846) * _810) * ((cbModelParam._m0[1u].w * (_1811 - _1711)) + _1711);
    float _1830 = (((_845 * _797) + _846) * _810) * ((cbModelParam._m0[1u].w * (_1813 - _1713)) + _1713);
    float _1832 = (((_845 * _798) + _846) * _810) * ((cbModelParam._m0[1u].w * (_1815 - _1715)) + _1715);
    float _1835 = fma(_1832, cbSceneParam._m0[89u].z, fma(_1830, cbSceneParam._m0[89u].y, _1828 * cbSceneParam._m0[89u].x));
    float _1838 = fma(_1832, cbSceneParam._m0[90u].z, fma(_1830, cbSceneParam._m0[90u].y, _1828 * cbSceneParam._m0[90u].x));
    float _1841 = fma(_1832, cbSceneParam._m0[91u].z, fma(_1830, cbSceneParam._m0[91u].y, _1828 * cbSceneParam._m0[91u].x));
    float _1875 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1879 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1883 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1887 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1888 = _1875 / _1887;
    float _1889 = _1879 / _1887;
    float _1890 = _1883 / _1887;
    float _2037;
    float _2038;
    float _2039;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1917 = ((uint(_1890 > cbSceneParam._m0[59u].y) + uint(_1890 > cbSceneParam._m0[59u].x)) + uint(_1890 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1918 = _1917 + 43u;
        uint _1926 = _1917 + 44u;
        uint _1934 = _1917 + 45u;
        uint _1942 = _1917 + 46u;
        float _1953 = fma(_1887, cbSceneParam._m0[_1918].w, fma(_1883, cbSceneParam._m0[_1918].z, fma(_1879, cbSceneParam._m0[_1918].y, _1875 * cbSceneParam._m0[_1918].x)));
        float _1957 = fma(_1887, cbSceneParam._m0[_1926].w, fma(_1883, cbSceneParam._m0[_1926].z, fma(_1879, cbSceneParam._m0[_1926].y, _1875 * cbSceneParam._m0[_1926].x)));
        float _1965 = fma(_1887, cbSceneParam._m0[_1942].w, fma(_1883, cbSceneParam._m0[_1942].z, fma(_1879, cbSceneParam._m0[_1942].y, _1875 * cbSceneParam._m0[_1942].x)));
        float _1970 = cbSceneParam._m0[33u].z * _1965;
        float _1972 = cbSceneParam._m0[33u].w * _1965;
        float _1975 = fma(_1887, cbSceneParam._m0[_1934].w, fma(_1883, cbSceneParam._m0[_1934].z, fma(_1879, cbSceneParam._m0[_1934].y, _1875 * cbSceneParam._m0[_1934].x))) / _1965;
        float _2023 = (cbSceneParam._m0[33u].x - sqrt(((_1889 * _1889) + (_1888 * _1888)) + (_1890 * _1890))) * cbSceneParam._m0[33u].y;
        float _4298 = isnan(0.0) ? _2023 : (isnan(_2023) ? 0.0 : max(_2023, 0.0));
        float _2030 = (isnan(1.0) ? _4298 : (isnan(_4298) ? 1.0 : min(_4298, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1970 + _1953) / _1965, (_1972 + _1957) / _1965), _1975), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1972 + _1953) / _1965, (_1957 - _1970) / _1965), _1975), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1953 - _1970) / _1965, (_1957 - _1972) / _1965), _1975), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1953 - _1972) / _1965, (_1970 + _1957) / _1965), _1975), 0.0)).x), vec4(0.25)));
        _2037 = 1.0 - (_2030 * cbSceneParam._m0[34u].x);
        _2038 = 1.0 - (_2030 * cbSceneParam._m0[34u].y);
        _2039 = 1.0 - (_2030 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2037 = 1.0;
        _2038 = 1.0;
        _2039 = 1.0;
    }
    float _2103;
    float _2105;
    float _2107;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2091 = fma(_1887, cbSceneParam._m0[63u].w, fma(_1883, cbSceneParam._m0[63u].z, fma(_1879, cbSceneParam._m0[63u].y, _1875 * cbSceneParam._m0[63u].x)));
        float _2092 = fma(_1887, cbSceneParam._m0[60u].w, fma(_1883, cbSceneParam._m0[60u].z, fma(_1879, cbSceneParam._m0[60u].y, _1875 * cbSceneParam._m0[60u].x))) / _2091;
        float _2093 = fma(_1887, cbSceneParam._m0[61u].w, fma(_1883, cbSceneParam._m0[61u].z, fma(_1879, cbSceneParam._m0[61u].y, _1875 * cbSceneParam._m0[61u].x))) / _2091;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2092 >= cbSceneParam._m0[64u].x) && (_2093 >= cbSceneParam._m0[64u].y)) && (_2092 <= cbSceneParam._m0[64u].z)) && (_2093 <= cbSceneParam._m0[64u].w))
        {
            float _2232 = fma(_1887, cbSceneParam._m0[62u].w, fma(_1883, cbSceneParam._m0[62u].z, fma(_1879, cbSceneParam._m0[62u].y, _1875 * cbSceneParam._m0[62u].x))) / _2091;
            float _2236 = isnan(cbSceneParam._m0[41u].w) ? _2232 : (isnan(_2232) ? cbSceneParam._m0[41u].w : max(_2232, cbSceneParam._m0[41u].w));
            float _2279 = (cbSceneParam._m0[33u].x - sqrt(((_1889 * _1889) + (_1888 * _1888)) + (_1890 * _1890))) * cbSceneParam._m0[33u].y;
            float _4314 = isnan(0.0) ? _2279 : (isnan(_2279) ? 0.0 : max(_2279, 0.0));
            float _2286 = (isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2092, cbSceneParam._m0[33u].w + _2093), _2236), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2092, _2093 - cbSceneParam._m0[33u].z), _2236), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2092 - cbSceneParam._m0[33u].z, _2093 - cbSceneParam._m0[33u].w), _2236), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2092 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2093), _2236), 0.0)).x), vec4(0.25)));
            float _2290 = 1.0 - (_2286 * cbSceneParam._m0[34u].x);
            float _2291 = 1.0 - (_2286 * cbSceneParam._m0[34u].y);
            float _2292 = 1.0 - (_2286 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2292) ? _2039 : (isnan(_2039) ? _2292 : min(_2039, _2292));
            frontier_phi_34_33_ladder_1 = isnan(_2291) ? _2038 : (isnan(_2038) ? _2291 : min(_2038, _2291));
            frontier_phi_34_33_ladder_2 = isnan(_2290) ? _2037 : (isnan(_2037) ? _2290 : min(_2037, _2290));
        }
        else
        {
            frontier_phi_34_33_ladder = _2039;
            frontier_phi_34_33_ladder_1 = _2038;
            frontier_phi_34_33_ladder_2 = _2037;
        }
        _2103 = frontier_phi_34_33_ladder_2;
        _2105 = frontier_phi_34_33_ladder_1;
        _2107 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2103 = _2037;
        _2105 = _2038;
        _2107 = _2039;
    }
    uvec4 _2112 = floatBitsToUint(cbInstanceData._m0[_770 + 5u]);
    uint _2114 = _2112.x * 14u;
    uint _2115 = _2114 + 13u;
    float _2122 = _810 + (-1.0);
    float _2127 = (cbLight._m0[_2115].x * _2122) + 1.0;
    float _2128 = (cbLight._m0[_2115].y * _2122) + 1.0;
    float _2129 = (cbLight._m0[_2115].z * _2122) + 1.0;
    float _2130 = (cbLight._m0[_2115].w * _2122) + 1.0;
    uint _2131 = _2114 + 5u;
    float _2137 = isnan(1.0) ? _2128 : (isnan(_2128) ? 1.0 : min(_2128, 1.0));
    uint _2141 = _2114 + 4u;
    float _2151 = isnan(1.0) ? _2127 : (isnan(_2127) ? 1.0 : min(_2127, 1.0));
    uint _2155 = _2114 | 1u;
    float _2166 = dot(vec3(cbLight._m0[_2114].xyz), vec3(_644, _645, _646));
    float _2169 = dot(vec3(cbLight._m0[_2155].xyz), vec3(_644, _645, _646));
    float _4350 = isnan(0.0) ? _2166 : (isnan(_2166) ? 0.0 : max(_2166, 0.0));
    float _4361 = isnan(0.0) ? _2169 : (isnan(_2169) ? 0.0 : max(_2169, 0.0));
    float _2174 = (isnan(1.0) ? _4350 : (isnan(_4350) ? 1.0 : min(_4350, 1.0))) * 0.3183098733425140380859375;
    float _2176 = (isnan(1.0) ? _4361 : (isnan(_4361) ? 1.0 : min(_4361, 1.0))) * 0.3183098733425140380859375;
    float _2183 = ((cbLight._m0[_2131].x * _2137) * _2176) + (((cbLight._m0[_2141].x * _2103) * _2151) * _2174);
    float _2184 = ((_2137 * cbLight._m0[_2131].y) * _2176) + (((cbLight._m0[_2141].y * _2105) * _2151) * _2174);
    float _2185 = ((_2137 * cbLight._m0[_2131].z) * _2176) + (((cbLight._m0[_2141].z * _2107) * _2151) * _2174);
    uvec4 _2189 = floatBitsToUint(cbLight._m0[_2114 + 12u]);
    bool _2191 = _2189.x == 0u;
    float _2293;
    float _2295;
    float _2297;
    if (_2191)
    {
        _2293 = _2183;
        _2295 = _2184;
        _2297 = _2185;
    }
    else
    {
        uint _2301 = _2114 + 6u;
        float _2317 = (dot(vec3(cbLight._m0[_2114 + 2u].xyz), vec3(_644, _645, _646)) * 0.5) + 0.5;
        float _2318 = _2317 * _2317;
        float _4372 = isnan(0.0) ? _2318 : (isnan(_2318) ? 0.0 : max(_2318, 0.0));
        float _2319 = isnan(1.0) ? _4372 : (isnan(_4372) ? 1.0 : min(_4372, 1.0));
        float _2320 = isnan(1.0) ? _2129 : (isnan(_2129) ? 1.0 : min(_2129, 1.0));
        _2293 = (((cbLight._m0[_2301].x * 0.3183098733425140380859375) * _2319) * _2320) + _2183;
        _2295 = (((cbLight._m0[_2301].y * 0.3183098733425140380859375) * _2319) * _2320) + _2184;
        _2297 = (((cbLight._m0[_2301].z * 0.3183098733425140380859375) * _2319) * _2320) + _2185;
    }
    bool _2300 = _2189.y == 0u;
    float _2355;
    float _2357;
    float _2359;
    if (_2300)
    {
        _2355 = _2293;
        _2357 = _2295;
        _2359 = _2297;
    }
    else
    {
        uint _2528 = _2114 + 7u;
        float _2544 = (dot(vec3(cbLight._m0[_2114 + 3u].xyz), vec3(_644, _645, _646)) * 0.5) + 0.5;
        float _2545 = _2544 * _2544;
        float _4388 = isnan(0.0) ? _2545 : (isnan(_2545) ? 0.0 : max(_2545, 0.0));
        float _2546 = isnan(1.0) ? _4388 : (isnan(_4388) ? 1.0 : min(_4388, 1.0));
        float _2547 = isnan(1.0) ? _2130 : (isnan(_2130) ? 1.0 : min(_2130, 1.0));
        _2355 = (((cbLight._m0[_2528].x * 0.3183098733425140380859375) * _2546) * _2547) + _2293;
        _2357 = (((cbLight._m0[_2528].y * 0.3183098733425140380859375) * _2546) * _2547) + _2295;
        _2359 = (((cbLight._m0[_2528].z * 0.3183098733425140380859375) * _2546) * _2547) + _2297;
    }
    uint _2362 = _2114 + 8u;
    float _2375 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2114].w)) * _647) * 0.949999988079071044921875);
    float _2376 = _2375 * _2375;
    float _2377 = cbLight._m0[_2114].x + _724;
    float _2378 = cbLight._m0[_2114].y + _725;
    float _2379 = cbLight._m0[_2114].z + _726;
    float _2383 = inversesqrt(dot(vec3(_2377, _2378, _2379), vec3(_2377, _2378, _2379)));
    float _2384 = _2383 * _2377;
    float _2385 = _2383 * _2378;
    float _2386 = _2383 * _2379;
    float _2387 = dot(vec3(_644, _645, _646), vec3(cbLight._m0[_2114].xyz));
    float _4404 = isnan(0.0) ? _2387 : (isnan(_2387) ? 0.0 : max(_2387, 0.0));
    float _2390 = isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0));
    float _4415 = isnan(0.0) ? _811 : (isnan(_811) ? 0.0 : max(_811, 0.0));
    float _2391 = isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0));
    float _2392 = dot(vec3(_644, _645, _646), vec3(_2384, _2385, _2386));
    float _4426 = isnan(0.0) ? _2392 : (isnan(_2392) ? 0.0 : max(_2392, 0.0));
    float _2395 = isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0));
    float _2396 = dot(vec3(cbLight._m0[_2114].xyz), vec3(_2384, _2385, _2386));
    float _4437 = isnan(0.0) ? _2396 : (isnan(_2396) ? 0.0 : max(_2396, 0.0));
    float _2400 = _2376 * _2376;
    float _2404 = ((_2395 * _2395) * (_2400 + (-1.0))) + 1.0;
    float _2412 = exp2(log2(1.0 - (isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0)))) * 5.0);
    float _2413 = 0.959999978542327880859375 - _792;
    float _2415 = 0.959999978542327880859375 - _793;
    float _2416 = 0.959999978542327880859375 - _794;
    float _2423 = 1.0 - _2376;
    float _2434 = (0.5 / (((_2391 * ((_2390 * _2423) + _2376)) + 9.9999999392252902907785028219223e-09) + (((_2391 * _2423) + _2376) * _2390))) * _2390;
    float _4448 = isnan(0.0) ? _2434 : (isnan(_2434) ? 0.0 : max(_2434, 0.0));
    float _2436 = (isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0))) * (_2400 / ((_2404 * _2404) * 3.141590118408203125));
    uint _2450 = _2114 + 9u;
    float _2461 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2155].w)) * _647) * 0.949999988079071044921875);
    float _2462 = _2461 * _2461;
    float _2463 = cbLight._m0[_2155].x + _724;
    float _2464 = cbLight._m0[_2155].y + _725;
    float _2465 = cbLight._m0[_2155].z + _726;
    float _2469 = inversesqrt(dot(vec3(_2463, _2464, _2465), vec3(_2463, _2464, _2465)));
    float _2470 = _2469 * _2463;
    float _2471 = _2469 * _2464;
    float _2472 = _2469 * _2465;
    float _2473 = dot(vec3(_644, _645, _646), vec3(cbLight._m0[_2155].xyz));
    float _4459 = isnan(0.0) ? _2473 : (isnan(_2473) ? 0.0 : max(_2473, 0.0));
    float _2476 = isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0));
    float _2477 = dot(vec3(_644, _645, _646), vec3(_2470, _2471, _2472));
    float _4470 = isnan(0.0) ? _2477 : (isnan(_2477) ? 0.0 : max(_2477, 0.0));
    float _2480 = isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0));
    float _2481 = dot(vec3(cbLight._m0[_2155].xyz), vec3(_2470, _2471, _2472));
    float _4481 = isnan(0.0) ? _2481 : (isnan(_2481) ? 0.0 : max(_2481, 0.0));
    float _2485 = _2462 * _2462;
    float _2489 = ((_2480 * _2480) * (_2485 + (-1.0))) + 1.0;
    float _2496 = exp2(log2(1.0 - (isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0)))) * 5.0);
    float _2503 = 1.0 - _2462;
    float _2513 = (0.5 / (((_2391 * ((_2476 * _2503) + _2462)) + 9.9999999392252902907785028219223e-09) + (((_2391 * _2503) + _2462) * _2476))) * _2476;
    float _4492 = isnan(0.0) ? _2513 : (isnan(_2513) ? 0.0 : max(_2513, 0.0));
    float _2515 = (isnan(1.0) ? _4492 : (isnan(_4492) ? 1.0 : min(_4492, 1.0))) * (_2485 / ((_2489 * _2489) * 3.141590118408203125));
    float _2525 = (((((_2496 * _2413) + _795) * cbLight._m0[_2450].x) * _2515) * _2137) + ((((cbLight._m0[_2362].x * _2103) * ((_2412 * _2413) + _795)) * _2436) * _2151);
    float _2526 = (((((_2496 * _2415) + _797) * cbLight._m0[_2450].y) * _2515) * _2137) + ((((cbLight._m0[_2362].y * _2105) * ((_2412 * _2415) + _797)) * _2436) * _2151);
    float _2527 = (((((_2496 * _2416) + _798) * cbLight._m0[_2450].z) * _2515) * _2137) + ((((cbLight._m0[_2362].z * _2107) * ((_2412 * _2416) + _798)) * _2436) * _2151);
    float _2583;
    float _2585;
    float _2587;
    if (_2191)
    {
        _2583 = _2525;
        _2585 = _2526;
        _2587 = _2527;
    }
    else
    {
        uint _2589 = _2114 + 2u;
        uint _2593 = _2114 + 10u;
        float _2607 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2589].w)) * _647) * 0.949999988079071044921875);
        float _2608 = _2607 * _2607;
        float _2609 = cbLight._m0[_2589].x + _724;
        float _2610 = cbLight._m0[_2589].y + _725;
        float _2611 = cbLight._m0[_2589].z + _726;
        float _2615 = inversesqrt(dot(vec3(_2609, _2610, _2611), vec3(_2609, _2610, _2611)));
        float _2616 = _2615 * _2609;
        float _2617 = _2615 * _2610;
        float _2618 = _2615 * _2611;
        float _2619 = dot(vec3(_644, _645, _646), vec3(cbLight._m0[_2589].xyz));
        float _4503 = isnan(0.0) ? _2619 : (isnan(_2619) ? 0.0 : max(_2619, 0.0));
        float _2622 = isnan(1.0) ? _4503 : (isnan(_4503) ? 1.0 : min(_4503, 1.0));
        float _2623 = dot(vec3(_644, _645, _646), vec3(_2616, _2617, _2618));
        float _4514 = isnan(0.0) ? _2623 : (isnan(_2623) ? 0.0 : max(_2623, 0.0));
        float _2626 = isnan(1.0) ? _4514 : (isnan(_4514) ? 1.0 : min(_4514, 1.0));
        float _2627 = dot(vec3(cbLight._m0[_2589].xyz), vec3(_2616, _2617, _2618));
        float _4525 = isnan(0.0) ? _2627 : (isnan(_2627) ? 0.0 : max(_2627, 0.0));
        float _2631 = _2608 * _2608;
        float _2635 = ((_2626 * _2626) * (_2631 + (-1.0))) + 1.0;
        float _2642 = exp2(log2(1.0 - (isnan(1.0) ? _4525 : (isnan(_4525) ? 1.0 : min(_4525, 1.0)))) * 5.0);
        float _2649 = 1.0 - _2608;
        float _2659 = (0.5 / (((_2391 * ((_2622 * _2649) + _2608)) + 9.9999999392252902907785028219223e-09) + (((_2391 * _2649) + _2608) * _2622))) * _2622;
        float _4536 = isnan(0.0) ? _2659 : (isnan(_2659) ? 0.0 : max(_2659, 0.0));
        float _2661 = (isnan(1.0) ? _4536 : (isnan(_4536) ? 1.0 : min(_4536, 1.0))) * (_2631 / ((_2635 * _2635) * 3.141590118408203125));
        float _2662 = isnan(1.0) ? _2129 : (isnan(_2129) ? 1.0 : min(_2129, 1.0));
        _2583 = (((((_2642 * _2413) + _795) * cbLight._m0[_2593].x) * _2661) * _2662) + _2525;
        _2585 = (((((_2642 * _2415) + _797) * cbLight._m0[_2593].y) * _2661) * _2662) + _2526;
        _2587 = (((((_2642 * _2416) + _798) * cbLight._m0[_2593].z) * _2661) * _2662) + _2527;
    }
    float _2693;
    float _2695;
    float _2697;
    if (_2300)
    {
        _2693 = _2583;
        _2695 = _2585;
        _2697 = _2587;
    }
    else
    {
        uint _2704 = _2114 + 3u;
        uint _2708 = _2114 + 11u;
        float _2722 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2704].w)) * _647) * 0.949999988079071044921875);
        float _2723 = _2722 * _2722;
        float _2724 = cbLight._m0[_2704].x + _724;
        float _2725 = cbLight._m0[_2704].y + _725;
        float _2726 = cbLight._m0[_2704].z + _726;
        float _2730 = inversesqrt(dot(vec3(_2724, _2725, _2726), vec3(_2724, _2725, _2726)));
        float _2731 = _2730 * _2724;
        float _2732 = _2730 * _2725;
        float _2733 = _2730 * _2726;
        float _2734 = dot(vec3(_644, _645, _646), vec3(cbLight._m0[_2704].xyz));
        float _4552 = isnan(0.0) ? _2734 : (isnan(_2734) ? 0.0 : max(_2734, 0.0));
        float _2737 = isnan(1.0) ? _4552 : (isnan(_4552) ? 1.0 : min(_4552, 1.0));
        float _2738 = dot(vec3(_644, _645, _646), vec3(_2731, _2732, _2733));
        float _4563 = isnan(0.0) ? _2738 : (isnan(_2738) ? 0.0 : max(_2738, 0.0));
        float _2741 = isnan(1.0) ? _4563 : (isnan(_4563) ? 1.0 : min(_4563, 1.0));
        float _2742 = dot(vec3(cbLight._m0[_2704].xyz), vec3(_2731, _2732, _2733));
        float _4574 = isnan(0.0) ? _2742 : (isnan(_2742) ? 0.0 : max(_2742, 0.0));
        float _2746 = _2723 * _2723;
        float _2750 = ((_2741 * _2741) * (_2746 + (-1.0))) + 1.0;
        float _2757 = exp2(log2(1.0 - (isnan(1.0) ? _4574 : (isnan(_4574) ? 1.0 : min(_4574, 1.0)))) * 5.0);
        float _2764 = 1.0 - _2723;
        float _2774 = (0.5 / (((_2391 * ((_2737 * _2764) + _2723)) + 9.9999999392252902907785028219223e-09) + (((_2391 * _2764) + _2723) * _2737))) * _2737;
        float _4585 = isnan(0.0) ? _2774 : (isnan(_2774) ? 0.0 : max(_2774, 0.0));
        float _2776 = (isnan(1.0) ? _4585 : (isnan(_4585) ? 1.0 : min(_4585, 1.0))) * (_2746 / ((_2750 * _2750) * 3.141590118408203125));
        float _2777 = isnan(1.0) ? _2130 : (isnan(_2130) ? 1.0 : min(_2130, 1.0));
        _2693 = (((((_2757 * _2413) + _795) * cbLight._m0[_2708].x) * _2776) * _2777) + _2583;
        _2695 = (((((_2757 * _2415) + _797) * cbLight._m0[_2708].y) * _2776) * _2777) + _2585;
        _2697 = (((((_2757 * _2416) + _798) * cbLight._m0[_2708].z) * _2776) * _2777) + _2587;
    }
    float _2843;
    float _2845;
    float _2847;
    float _2849;
    float _2851;
    float _2853;
    if (_2112.y == 0u)
    {
        uvec4 _2798 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2799 = _2798.x;
        uint _2810 = uint((float(_2798.y) * floor(float(uint(cbSceneParam._m0[85u].y * _733) / _2799))) + floor(float(uint(cbSceneParam._m0[85u].x * _732) / _2799)));
        float _2820 = (log2(_1890 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2821 = isnan(0.0) ? _2820 : (isnan(_2820) ? 0.0 : max(_2820, 0.0));
        uint _2824 = uint(isnan(14.0) ? _2821 : (isnan(_2821) ? 14.0 : min(_2821, 14.0)));
        uvec4 _2829 = texelFetch(g_lightClusterGridBuffer, int(((_2824 << 2u) + (_2810 << 6u)) >> 2u));
        uint _2830 = _2829.x;
        uint _2831 = _2798.z;
        float _2910;
        float _2912;
        float _2914;
        float _2916;
        float _2918;
        float _2920;
        if (((((1u << ((_2831 >> 4u) & 15u)) + 4294967295u) & _2830) == 0u) || ((_2831 & 240u) == 0u))
        {
            _2910 = 0.0;
            _2912 = 0.0;
            _2914 = 0.0;
            _2916 = 0.0;
            _2918 = 0.0;
            _2920 = 0.0;
        }
        else
        {
            float _2911;
            float _2913;
            float _2915;
            float _2917;
            float _2919;
            float _2921;
            float _3054 = 0.0;
            float _3055 = 0.0;
            float _3056 = 0.0;
            float _3057 = 0.0;
            float _3058 = 0.0;
            float _3059 = 0.0;
            uint _3060 = 0u;
            uint _3069;
            bool _3070;
            for (;;)
            {
                _3069 = texelFetch(g_lightClassification, int((((_2824 << 5u) + (_2810 << 9u)) + (_3060 << 2u)) >> 2u)).x;
                _3070 = _3069 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3070)
                {
                    frontier_phi_66_pred = _3059;
                    frontier_phi_66_pred_1 = _3058;
                    frontier_phi_66_pred_2 = _3057;
                    frontier_phi_66_pred_3 = _3056;
                    frontier_phi_66_pred_4 = _3055;
                    frontier_phi_66_pred_5 = _3054;
                }
                else
                {
                    float _3178;
                    float _3179;
                    float _3180;
                    float _3181;
                    float _3182;
                    float _3183;
                    uint _3184;
                    _3178 = _3054;
                    _3179 = _3055;
                    _3180 = _3056;
                    _3181 = _3057;
                    _3182 = _3058;
                    _3183 = _3059;
                    _3184 = _3069;
                    float _3110;
                    float _3111;
                    float _3112;
                    float _3113;
                    float _3114;
                    float _3115;
                    for (;;)
                    {
                        uint _3188 = uint(findLSB(_3184)) + (_3060 << 5u);
                        uint _3185 = (_3184 + 4294967295u) & _3184;
                        uint _3190 = _3188 * 48u;
                        vec4 _3204 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3190)).x, texelFetch(g_PointLightRenderingBuffer, int(_3190 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3190 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3190 + 3u)).x));
                        uint _3210 = (_3188 * 48u) + 4u;
                        vec4 _3223 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3210)).x, texelFetch(g_PointLightRenderingBuffer, int(_3210 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3210 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3210 + 3u)).x));
                        uint _3229 = (_3188 * 48u) + 8u;
                        vec3 _3240 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3229)).x, texelFetch(g_PointLightRenderingBuffer, int(_3229 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3229 + 2u)).x));
                        float _3244 = _3204.x - _1888;
                        float _3245 = _3204.y - _1889;
                        float _3246 = _3204.z - _1890;
                        float _3247 = dot(vec3(_3244, _3245, _3246), vec3(_3244, _3245, _3246));
                        float _3250 = inversesqrt(_3247);
                        float _3251 = _3250 * _3244;
                        float _3252 = _3250 * _3245;
                        float _3253 = _3250 * _3246;
                        float _3254 = dot(vec3(_751, _754, _757), vec3(_3251, _3252, _3253));
                        float _3259 = 1.0 - (_3247 * _3204.w);
                        float _4611 = isnan(0.0) ? _3259 : (isnan(_3259) ? 0.0 : max(_3259, 0.0));
                        float _3260 = isnan(1.0) ? _4611 : (isnan(_4611) ? 1.0 : min(_4611, 1.0));
                        float _3261 = sqrt(_3247) * _3223.w;
                        float _3264 = 1.39999997615814208984375 / (_3261 + 1.39999997615814208984375);
                        float _3265 = _3264 * _3264;
                        float _3268 = ((1.0 - _3265) * _3254) + _3265;
                        float _3271 = _3261 * _3261;
                        float _3275 = ((isnan(0.0) ? _3268 : (isnan(_3268) ? 0.0 : max(_3268, 0.0))) * _3260) / ((_3271 * 0.699999988079071044921875) + 1.0);
                        float _3279 = (-0.0) - _1888;
                        float _3280 = (-0.0) - _1889;
                        float _3281 = (-0.0) - _1890;
                        float _3285 = inversesqrt(dot(vec3(_3279, _3280, _3281), vec3(_3279, _3280, _3281)));
                        float _3286 = _3285 * _3279;
                        float _3287 = _3285 * _3280;
                        float _3288 = _3285 * _3281;
                        float _3295 = exp2(log2(1.0 / ((_3271 * 3.5) + 5.0)) * 0.25);
                        float _3296 = 1.0 - _826;
                        float _3303 = sqrt(1.0 - ((1.0 - (_3296 * _3296)) * (1.0 - (_3295 * _3295))));
                        float _3304 = _3303 * _3303;
                        float _3305 = _3304 * _3304;
                        float _3306 = _3286 + _3251;
                        float _3307 = _3287 + _3252;
                        float _3308 = _3288 + _3253;
                        float _3312 = inversesqrt(dot(vec3(_3306, _3307, _3308), vec3(_3306, _3307, _3308)));
                        float _3316 = dot(vec3(_751, _754, _757), vec3(_3286, _3287, _3288));
                        float _4627 = isnan(0.0) ? _3316 : (isnan(_3316) ? 0.0 : max(_3316, 0.0));
                        float _3319 = isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0));
                        float _3320 = dot(vec3(_751, _754, _757), vec3(_3312 * _3306, _3312 * _3307, _3312 * _3308));
                        float _4638 = isnan(0.0) ? _3320 : (isnan(_3320) ? 0.0 : max(_3320, 0.0));
                        float _3323 = isnan(1.0) ? _4638 : (isnan(_4638) ? 1.0 : min(_4638, 1.0));
                        float _3327 = ((_3323 * _3323) * (_3305 + (-1.0))) + 1.0;
                        float _3328 = _3264 * _3304;
                        float _3329 = _3328 * _3328;
                        float _3332 = ((1.0 - _3329) * _3254) + _3329;
                        float _4649 = isnan(0.0) ? _3332 : (isnan(_3332) ? 0.0 : max(_3332, 0.0));
                        float _3333 = isnan(1.0) ? _4649 : (isnan(_4649) ? 1.0 : min(_4649, 1.0));
                        float _3334 = 1.0 - _3304;
                        float _3344 = (0.5 / (((_3333 * ((_3319 * _3334) + _3304)) + 9.9999999392252902907785028219223e-09) + (((_3333 * _3334) + _3304) * _3319))) * _3333;
                        float _4660 = isnan(0.0) ? _3344 : (isnan(_3344) ? 0.0 : max(_3344, 0.0));
                        float _3355 = (((_3305 * 3.1415927410125732421875) * (isnan(1.0) ? _4660 : (isnan(_4660) ? 1.0 : min(_4660, 1.0)))) / ((_3327 * _3327) * ((_3271 * 2.1991131305694580078125) + 3.141590118408203125))) * _3260;
                        _3113 = (_3275 * _3223.x) + _3181;
                        _3114 = (_3275 * _3223.y) + _3182;
                        _3115 = (_3275 * _3223.z) + _3183;
                        _3110 = (_3355 * _3240.x) + _3178;
                        _3111 = (_3355 * _3240.y) + _3179;
                        _3112 = (_3355 * _3240.z) + _3180;
                        if (_3185 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3178 = _3110;
                            _3179 = _3111;
                            _3180 = _3112;
                            _3181 = _3113;
                            _3182 = _3114;
                            _3183 = _3115;
                            _3184 = _3185;
                        }
                    }
                    frontier_phi_66_pred = _3115;
                    frontier_phi_66_pred_1 = _3114;
                    frontier_phi_66_pred_2 = _3113;
                    frontier_phi_66_pred_3 = _3112;
                    frontier_phi_66_pred_4 = _3111;
                    frontier_phi_66_pred_5 = _3110;
                }
                _2921 = frontier_phi_66_pred;
                _2919 = frontier_phi_66_pred_1;
                _2917 = frontier_phi_66_pred_2;
                _2915 = frontier_phi_66_pred_3;
                _2913 = frontier_phi_66_pred_4;
                _2911 = frontier_phi_66_pred_5;
                uint _3061 = _3060 + 1u;
                if (_3061 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3054 = _2911;
                    _3055 = _2913;
                    _3056 = _2915;
                    _3057 = _2917;
                    _3058 = _2919;
                    _3059 = _2921;
                    _3060 = _3061;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2910 = _2911;
            _2912 = _2913;
            _2914 = _2915;
            _2916 = _2917;
            _2918 = _2919;
            _2920 = _2921;
        }
        uvec4 _2924 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2925 = _2924.z;
        uint _2927 = (_2925 >> 8u) & 15u;
        float _3022;
        float _3024;
        float _3026;
        float _3028;
        float _3030;
        float _3032;
        if (((4294967295u << _2927) & _2830) == 0u)
        {
            _3022 = _2910;
            _3024 = _2912;
            _3026 = _2914;
            _3028 = _2916;
            _3030 = _2918;
            _3032 = _2920;
        }
        else
        {
            float _3047 = inversesqrt(dot(vec3(_1888, _1889, _1890), vec3(_1888, _1889, _1890)));
            float _3048 = _3047 * _1888;
            float _3049 = _3047 * _1889;
            float _3050 = _3047 * _1890;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2927 < ((_2925 >> 12u) & 15u))
            {
                float _3023;
                float _3025;
                float _3027;
                float _3029;
                float _3031;
                float _3033;
                float _3161 = _2910;
                float _3162 = _2912;
                float _3163 = _2914;
                float _3164 = _2916;
                float _3165 = _2918;
                float _3166 = _2920;
                uint _3167 = _2927;
                uint _3176;
                bool _3177;
                for (;;)
                {
                    _3176 = texelFetch(g_lightClassification, int((((_2824 << 5u) + (_2810 << 9u)) + (_3167 << 2u)) >> 2u)).x;
                    _3177 = _3176 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3177)
                    {
                        frontier_phi_72_pred = _3166;
                        frontier_phi_72_pred_1 = _3165;
                        frontier_phi_72_pred_2 = _3164;
                        frontier_phi_72_pred_3 = _3163;
                        frontier_phi_72_pred_4 = _3162;
                        frontier_phi_72_pred_5 = _3161;
                    }
                    else
                    {
                        float _3360;
                        float _3361;
                        float _3362;
                        float _3363;
                        float _3364;
                        float _3365;
                        float _3654;
                        float _3655;
                        float _3656;
                        float _3657;
                        float _3658;
                        float _3659;
                        float _3373 = _3161;
                        float _3374 = _3162;
                        float _3375 = _3163;
                        float _3376 = _3164;
                        float _3377 = _3165;
                        float _3378 = _3166;
                        uint _3379 = _3176;
                        uint _3380;
                        vec4 _3405;
                        float _3406;
                        vec4 _3421;
                        vec3 _3433;
                        vec4 _3448;
                        vec4 _3463;
                        float _3510;
                        bool _3511;
                        for (;;)
                        {
                            uint _3390 = ((_3167 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3379));
                            _3380 = (_3379 + 4294967295u) & _3379;
                            uint _3392 = _3390 * 40u;
                            _3405 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3392)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3392 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3392 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3392 + 3u)).x));
                            _3406 = _3405.w;
                            uint _3408 = (_3390 * 40u) + 4u;
                            _3421 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3408)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3408 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3408 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3408 + 3u)).x));
                            uint _3423 = (_3390 * 40u) + 8u;
                            _3433 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3423)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3423 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3423 + 2u)).x));
                            uint _3435 = (_3390 * 40u) + 16u;
                            _3448 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3435)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3435 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3435 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3435 + 3u)).x));
                            uint _3450 = (_3390 * 40u) + 20u;
                            _3463 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3450)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3450 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3450 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3450 + 3u)).x));
                            uint _3466 = (_3390 * 40u) + 24u;
                            vec4 _3479 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3466)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3466 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3466 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3466 + 3u)).x));
                            uint _3485 = (_3390 * 40u) + 28u;
                            vec4 _3498 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3485)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3485 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3485 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3485 + 3u)).x));
                            _3510 = fma(_1890, _3498.z, fma(_1889, _3498.y, _3498.x * _1888)) + _3498.w;
                            _3511 = !((fma(_1890, _3479.z, fma(_1889, _3479.y, _3479.x * _1888)) + _3479.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3511)
                            {
                                float _3538 = _3405.x - _1888;
                                float _3539 = _3405.y - _1889;
                                float _3540 = _3405.z - _1890;
                                float _3541 = dot(vec3(_3538, _3539, _3540), vec3(_3538, _3539, _3540));
                                float _3544 = inversesqrt(_3541);
                                float _3545 = _3544 * _3538;
                                float _3546 = _3544 * _3539;
                                float _3547 = _3544 * _3540;
                                float _3551 = 1.0 - (_3541 / (_3406 * _3406));
                                float _4671 = isnan(0.0) ? _3551 : (isnan(_3551) ? 0.0 : max(_3551, 0.0));
                                float _3552 = isnan(1.0) ? _4671 : (isnan(_4671) ? 1.0 : min(_4671, 1.0));
                                float _3556 = sqrt(_3541) * _3421.w;
                                float _3558 = 1.39999997615814208984375 / (_3556 + 1.39999997615814208984375);
                                float _3559 = _3558 * _3558;
                                float _3562 = ((1.0 - _3559) * dot(vec3(_3545, _3546, _3547), vec3(_751, _754, _757))) + _3559;
                                float _3565 = _3556 * _3556;
                                float _3569 = (fma(_1890, _3448.z, fma(_1889, _3448.y, _3448.x * _1888)) + _3448.w) / _3510;
                                float _3570 = (fma(_1890, _3463.z, fma(_1889, _3463.y, _3463.x * _1888)) + _3463.w) / _3510;
                                float _3574 = 1.0 - dot(vec2(_3569, _3570), vec2(_3569, _3570));
                                float _4687 = isnan(0.0) ? _3574 : (isnan(_3574) ? 0.0 : max(_3574, 0.0));
                                float _3575 = isnan(1.0) ? _4687 : (isnan(_4687) ? 1.0 : min(_4687, 1.0));
                                float _3576 = _3575 * (((isnan(0.0) ? _3562 : (isnan(_3562) ? 0.0 : max(_3562, 0.0))) * _3552) / ((_3565 * 0.699999988079071044921875) + 1.0));
                                float _3588 = exp2(log2(1.0 / ((_3565 * 3.5) + 5.0)) * 0.25);
                                float _3589 = 1.0 - _826;
                                float _3596 = sqrt(1.0 - ((1.0 - (_3589 * _3589)) * (1.0 - (_3588 * _3588))));
                                float _3597 = _3596 * _3596;
                                float _3598 = _3597 * _3597;
                                float _3599 = _3545 - _3048;
                                float _3600 = _3546 - _3049;
                                float _3601 = _3547 - _3050;
                                float _3605 = inversesqrt(dot(vec3(_3599, _3600, _3601), vec3(_3599, _3600, _3601)));
                                float _3609 = dot(vec3(_751, _754, _757), vec3((-0.0) - _3048, (-0.0) - _3049, (-0.0) - _3050));
                                float _4698 = isnan(0.0) ? _3609 : (isnan(_3609) ? 0.0 : max(_3609, 0.0));
                                float _3612 = isnan(1.0) ? _4698 : (isnan(_4698) ? 1.0 : min(_4698, 1.0));
                                float _3613 = dot(vec3(_751, _754, _757), vec3(_3605 * _3599, _3605 * _3600, _3605 * _3601));
                                float _4709 = isnan(0.0) ? _3613 : (isnan(_3613) ? 0.0 : max(_3613, 0.0));
                                float _3616 = isnan(1.0) ? _4709 : (isnan(_4709) ? 1.0 : min(_4709, 1.0));
                                float _3620 = ((_3616 * _3616) * (_3598 + (-1.0))) + 1.0;
                                float _3621 = _3558 * _3597;
                                float _3622 = _3621 * _3621;
                                float _3628 = ((1.0 - _3622) * dot(vec3(_751, _754, _757), vec3(_3545, _3546, _3547))) + _3622;
                                float _4720 = isnan(0.0) ? _3628 : (isnan(_3628) ? 0.0 : max(_3628, 0.0));
                                float _3629 = isnan(1.0) ? _4720 : (isnan(_4720) ? 1.0 : min(_4720, 1.0));
                                float _3630 = 1.0 - _3597;
                                float _3640 = (0.5 / (((_3629 * ((_3612 * _3630) + _3597)) + 9.9999999392252902907785028219223e-09) + (((_3629 * _3630) + _3597) * _3612))) * _3629;
                                float _4731 = isnan(0.0) ? _3640 : (isnan(_3640) ? 0.0 : max(_3640, 0.0));
                                float _3650 = (_3575 * _3552) * (((_3598 * 3.1415927410125732421875) * (isnan(1.0) ? _4731 : (isnan(_4731) ? 1.0 : min(_4731, 1.0)))) / ((_3620 * _3620) * ((_3565 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3576 * _3421.y;
                                frontier_phi_78_pred_1 = _3576 * _3421.x;
                                frontier_phi_78_pred_2 = _3650 * _3433.z;
                                frontier_phi_78_pred_3 = _3650 * _3433.y;
                                frontier_phi_78_pred_4 = _3650 * _3433.x;
                                frontier_phi_78_pred_5 = _3576 * _3421.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3658 = frontier_phi_78_pred;
                            _3657 = frontier_phi_78_pred_1;
                            _3656 = frontier_phi_78_pred_2;
                            _3655 = frontier_phi_78_pred_3;
                            _3654 = frontier_phi_78_pred_4;
                            _3659 = frontier_phi_78_pred_5;
                            _3363 = _3657 + _3376;
                            _3364 = _3658 + _3377;
                            _3365 = _3659 + _3378;
                            _3360 = _3654 + _3373;
                            _3361 = _3655 + _3374;
                            _3362 = _3656 + _3375;
                            if (_3380 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3373 = _3360;
                                _3374 = _3361;
                                _3375 = _3362;
                                _3376 = _3363;
                                _3377 = _3364;
                                _3378 = _3365;
                                _3379 = _3380;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3365;
                        frontier_phi_72_pred_1 = _3364;
                        frontier_phi_72_pred_2 = _3363;
                        frontier_phi_72_pred_3 = _3362;
                        frontier_phi_72_pred_4 = _3361;
                        frontier_phi_72_pred_5 = _3360;
                    }
                    _3033 = frontier_phi_72_pred;
                    _3031 = frontier_phi_72_pred_1;
                    _3029 = frontier_phi_72_pred_2;
                    _3027 = frontier_phi_72_pred_3;
                    _3025 = frontier_phi_72_pred_4;
                    _3023 = frontier_phi_72_pred_5;
                    uint _3168 = _3167 + 1u;
                    if (_3168 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3161 = _3023;
                        _3162 = _3025;
                        _3163 = _3027;
                        _3164 = _3029;
                        _3165 = _3031;
                        _3166 = _3033;
                        _3167 = _3168;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3033;
                frontier_phi_60_61_ladder_1 = _3031;
                frontier_phi_60_61_ladder_2 = _3027;
                frontier_phi_60_61_ladder_3 = _3025;
                frontier_phi_60_61_ladder_4 = _3023;
                frontier_phi_60_61_ladder_5 = _3029;
            }
            else
            {
                frontier_phi_60_61_ladder = _2920;
                frontier_phi_60_61_ladder_1 = _2918;
                frontier_phi_60_61_ladder_2 = _2914;
                frontier_phi_60_61_ladder_3 = _2912;
                frontier_phi_60_61_ladder_4 = _2910;
                frontier_phi_60_61_ladder_5 = _2916;
            }
            _3022 = frontier_phi_60_61_ladder_4;
            _3024 = frontier_phi_60_61_ladder_3;
            _3026 = frontier_phi_60_61_ladder_2;
            _3028 = frontier_phi_60_61_ladder_5;
            _3030 = frontier_phi_60_61_ladder_1;
            _3032 = frontier_phi_60_61_ladder;
        }
        float _3037 = isnan(1.0) ? _810 : (isnan(_810) ? 1.0 : min(_810, 1.0));
        _2843 = (_3037 * _3028) + _2355;
        _2845 = (_3037 * _3030) + _2357;
        _2847 = (_3037 * _3032) + _2359;
        _2849 = ((_3022 * _795) * _3037) + _2693;
        _2851 = ((_3024 * _797) * _3037) + _2695;
        _2853 = ((_3026 * _798) * _3037) + _2697;
    }
    else
    {
        _2843 = _2355;
        _2845 = _2357;
        _2847 = _2359;
        _2849 = _2693;
        _2851 = _2695;
        _2853 = _2697;
    }
    float _4747 = isnan(0.0) ? _785 : (isnan(_785) ? 0.0 : max(_785, 0.0));
    float _4758 = isnan(0.0) ? _786 : (isnan(_786) ? 0.0 : max(_786, 0.0));
    float _4769 = isnan(0.0) ? _787 : (isnan(_787) ? 0.0 : max(_787, 0.0));
    uint _2873 = _770 + 6u;
    float _2881 = _732 / cbSceneParam._m0[86u].x;
    float _2882 = _733 / cbSceneParam._m0[86u].y;
    vec4 _2896 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2881, _2882, (log2((isnan(cbSceneParam._m0[77u].w) ? _667 : (isnan(_667) ? cbSceneParam._m0[77u].w : min(_667, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2898 = _2896.x;
    float _2899 = _2896.y;
    float _2900 = _2896.z;
    float _2901 = _2896.w;
    float _2972;
    float _2974;
    float _2976;
    float _2978;
    if (_667 > cbSceneParam._m0[78u].w)
    {
        float _2935 = isnan(_667) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _667 : min(cbSceneParam._m0[80u].w, _667));
        float _2936 = _2935 / _667;
        float _2947 = _2936 * _717;
        float _2948 = _718 * _2936;
        float _2949 = (-0.0) - _2948;
        float _2950 = _2936 * _719;
        float _2952 = (cbSceneParam._m0[77u].w * _2949) / _2935;
        float _2953 = _2952 + cbSceneParam._m0[79u].w;
        float _2954 = cbSceneParam._m0[79u].w - _2948;
        float _2960 = sqrt(((_2947 * _2947) + (_2948 * _2948)) + (_2950 * _2950));
        float _2963 = (1.0 - (cbSceneParam._m0[77u].w / _2935)) * _2960;
        float _2968 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2970 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3123;
        if (abs((_2949 - _2952) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3123 = ((((_2953 > 0.0) ? exp2(_2968 * _2953) : (2.0 - exp2(_2970 * _2953))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2963;
        }
        else
        {
            float _3083 = 1.0 / cbSceneParam._m0[80u].x;
            float _3084 = isnan(_2954) ? _2953 : (isnan(_2953) ? _2954 : max(_2953, _2954));
            float _3085 = isnan(_2954) ? _2953 : (isnan(_2953) ? _2954 : min(_2953, _2954));
            float _3094 = isnan(0.0) ? _3084 : (isnan(_3084) ? 0.0 : min(_3084, 0.0));
            float _3095 = isnan(0.0) ? _3085 : (isnan(_3085) ? 0.0 : min(_3085, 0.0));
            _3123 = ((abs(_2960 / _2949) * cbSceneParam._m0[80u].y) * ((((_3094 - _3095) * 2.0) - ((exp2(_2968 * (isnan(0.0) ? _3084 : (isnan(_3084) ? 0.0 : max(_3084, 0.0)))) - exp2(_2968 * (isnan(0.0) ? _3085 : (isnan(_3085) ? 0.0 : max(_3085, 0.0))))) * _3083)) - ((exp2(_2970 * _3094) - exp2(_2970 * _3095)) * _3083))) + (_2963 * cbSceneParam._m0[80u].z);
        }
        vec4 _3125 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2881, _2882, 1.0), 0.0);
        float _3134 = exp2((_3123 * (-1.44269502162933349609375)) * (1.0 - _3125.w));
        float _3135 = log2(_3134);
        float _3151 = log2(_2901);
        _2972 = (exp2(_3151 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3135 * cbSceneParam._m0[78u].x)) * _3125.x) / cbSceneParam._m0[78u].x)) + _2898;
        _2974 = (exp2(_3151 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3135 * cbSceneParam._m0[78u].y)) * _3125.y) / cbSceneParam._m0[78u].y)) + _2899;
        _2976 = (exp2(_3151 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3135 * cbSceneParam._m0[78u].z)) * _3125.z) / cbSceneParam._m0[78u].z)) + _2900;
        _2978 = _3134 * _2901;
    }
    else
    {
        _2972 = _2898;
        _2974 = _2899;
        _2976 = _2900;
        _2978 = _2901;
    }
    float _2990 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2991 = _2990 == 3.0;
    float _2992 = log2(_2978);
    float _2999 = exp2(_2992 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4747 : (isnan(_4747) ? 1.0 : min(_4747, 1.0))) * (_2843 + ((isnan(0.0) ? _1541 : (isnan(_1541) ? 0.0 : max(_1541, 0.0))) * _810))) + ((_2849 + ((isnan(0.0) ? _1835 : (isnan(_1835) ? 0.0 : max(_1835, 0.0))) * _1620)) * cbPerFrame._m0[3u].x));
    float _3000 = exp2(_2992 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4758 : (isnan(_4758) ? 1.0 : min(_4758, 1.0))) * (_2845 + ((isnan(0.0) ? _1544 : (isnan(_1544) ? 0.0 : max(_1544, 0.0))) * _810))) + ((_2851 + ((isnan(0.0) ? _1838 : (isnan(_1838) ? 0.0 : max(_1838, 0.0))) * _1620)) * cbPerFrame._m0[3u].x));
    float _3001 = exp2(_2992 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4769 : (isnan(_4769) ? 1.0 : min(_4769, 1.0))) * (_2847 + ((isnan(0.0) ? _1547 : (isnan(_1547) ? 0.0 : max(_1547, 0.0))) * _810))) + ((_2853 + ((isnan(0.0) ? _1841 : (isnan(_1841) ? 0.0 : max(_1841, 0.0))) * _1620)) * cbPerFrame._m0[3u].x));
    float _3010 = (_2990 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3010 * (_2991 ? _2999 : (_2999 + (cbSceneParam._m0[72u].w * _2972)));
    SV_Target.y = _3010 * (_2991 ? _3000 : (_3000 + (cbSceneParam._m0[72u].w * _2974)));
    SV_Target.z = _3010 * (_2991 ? _3001 : (_3001 + (cbSceneParam._m0[72u].w * _2976)));
    SV_Target.w = cbInstanceData._m0[_2873].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2873].w;
}


