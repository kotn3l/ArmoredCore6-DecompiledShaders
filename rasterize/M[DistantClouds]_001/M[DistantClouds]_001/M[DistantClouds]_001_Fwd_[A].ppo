#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[22];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D M_DistantClouds_001_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_DistantClouds_001_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1106;
float _1107;
float _1108;
float _1109;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _139 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _140 = _139 * NORMAL.x;
    float _141 = _139 * NORMAL.y;
    float _142 = _139 * NORMAL.z;
    float _147;
    float _148;
    float _149;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _147 = (-0.0) - _140;
        _148 = (-0.0) - _141;
        _149 = (-0.0) - _142;
    }
    else
    {
        _147 = _140;
        _148 = _141;
        _149 = _142;
    }
    float _195 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _205 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _195);
    float _206 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _195);
    float _207 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _195);
    float _234 = cbMtdParam._m0[14u].w * cbPerFrame._m0[22u].x;
    vec4 _253 = texture(sampler2D(M_DistantClouds_001_snp_0_Texture2D_1, SS_WrapLinear), vec2(((cbTextureTilingScale._m0[0u].x * cbMtdParam._m0[20u].x) * ((_234 * cbMtdParam._m0[19u].z) + TEXCOORD.x)) + cbTextureTilingScale._m0[0u].z, ((cbTextureTilingScale._m0[0u].y * cbMtdParam._m0[20u].y) * ((_234 * cbMtdParam._m0[19u].w) + TEXCOORD.y)) + cbTextureTilingScale._m0[0u].w));
    float _256 = _253.x;
    vec4 _285 = texture(sampler2D(M_DistantClouds_001_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((((_256 * cbMtdParam._m0[19u].x) + TEXCOORD.x) + (cbMtdParam._m0[18u].z * _234)) + cbMtdParam._m0[18u].x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((((_256 * cbMtdParam._m0[19u].y) + TEXCOORD.y) + (cbMtdParam._m0[18u].w * _234)) + cbMtdParam._m0[18u].y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _304 = cbMtdParam._m0[15u].w - cbMtdParam._m0[15u].z;
    float _306 = (sqrt(((_205 * _205) + (_206 * _206)) + (_207 * _207)) - cbMtdParam._m0[15u].z) / (isnan(0.0) ? _304 : (isnan(_304) ? 0.0 : max(_304, 0.0)));
    float _1123 = isnan(0.0) ? _306 : (isnan(_306) ? 0.0 : max(_306, 0.0));
    vec4 _319 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _321 = _319.x;
    bool _327 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _343 = ((_327 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _321)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _321))) - POSITION_1.w) / cbMtdParam._m0[15u].y;
    float _1134 = isnan(0.0) ? _343 : (isnan(_343) ? 0.0 : max(_343, 0.0));
    float _345 = ((_285.w * cbMtdParam._m0[13u].z) * (isnan(1.0) ? _1123 : (isnan(_1123) ? 1.0 : min(_1123, 1.0)))) * (isnan(1.0) ? _1134 : (isnan(_1134) ? 1.0 : min(_1134, 1.0)));
    float _355 = inversesqrt(dot(vec3(_205, _206, _207), vec3(_205, _206, _207)));
    float _356 = _355 * _205;
    float _357 = _355 * _206;
    float _358 = _355 * _207;
    float _362 = dot(vec4(_356, _357, _358, 0.0), vec4(_147, _148, _149, 0.0)) - cbMtdParam._m0[15u].x;
    float _1145 = isnan(0.0) ? _362 : (isnan(_362) ? 0.0 : max(_362, 0.0));
    float _372 = (floatBitsToUint(cbMtdParam._m0[9u]).x != 0u) ? (_345 - (exp2(log2(1.0 - (isnan(1.0) ? _1145 : (isnan(_1145) ? 1.0 : min(_1145, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].y : (isnan(cbMtdParam._m0[14u].y) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].y, 0.001000000047497451305389404296875)))) * _345)) : _345;
    float _1161 = isnan(0.0) ? _372 : (isnan(_372) ? 0.0 : max(_372, 0.0));
    float _377 = cbMtdParam._m0[13u].w * (isnan(1.0) ? _1161 : (isnan(_1161) ? 1.0 : min(_1161, 1.0)));
    float _403 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _407 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _411 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _415 = inversesqrt(dot(vec3(_403, _407, _411), vec3(_403, _407, _411)));
    float _416 = _415 * _403;
    float _417 = _415 * _407;
    float _418 = _415 * _411;
    bool _423 = floatBitsToUint(cbMtdParam._m0[9u]).y != 0u;
    float _435 = inversesqrt(dot(vec3(cbMtdParam._m0[20u].zw, cbMtdParam._m0[21u].x), vec3(cbMtdParam._m0[20u].zw, cbMtdParam._m0[21u].x)));
    uint _439 = uint(roundEven(NORMAL.w)) * 13u;
    uint _446 = floatBitsToUint(cbInstanceData._m0[_439 + 5u]).x * 14u;
    float _452 = _423 ? cbLight._m0[_446].x : (_435 * cbMtdParam._m0[20u].z);
    float _453 = _423 ? cbLight._m0[_446].y : (_435 * cbMtdParam._m0[20u].w);
    float _454 = _423 ? cbLight._m0[_446].z : (_435 * cbMtdParam._m0[21u].x);
    float _458 = inversesqrt(dot(vec3(_452, _453, _454), vec3(_452, _453, _454)));
    float _459 = _452 * _458;
    float _460 = _453 * _458;
    float _461 = _454 * _458;
    float _462 = dot(vec4(_416, _417, _418, 0.0), vec4(_459, _460, _461, 0.0));
    float _1172 = isnan(0.0) ? _462 : (isnan(_462) ? 0.0 : max(_462, 0.0));
    float _465 = isnan(1.0) ? _1172 : (isnan(_1172) ? 1.0 : min(_1172, 1.0));
    float _467 = 1.0 - (_465 * _465);
    float _469 = (-0.0) - (_467 - cbMtdParam._m0[16u].w);
    float _470 = isnan(0.0) ? _469 : (isnan(_469) ? 0.0 : max(_469, 0.0));
    float _490 = (-0.0) - (_467 - cbMtdParam._m0[17u].y);
    float _491 = isnan(0.0) ? _490 : (isnan(_490) ? 0.0 : max(_490, 0.0));
    float _529 = dot(vec3(cbSceneParam._m0[84u].xyz), vec3((-0.0) - _356, (-0.0) - _357, (-0.0) - _358)) * 0.5;
    float _531 = _529 + 0.5;
    float _541 = 0.5 - _529;
    float _558 = (((cbSceneParam._m0[83u].x * _541) + (cbSceneParam._m0[82u].x * _531)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].x;
    float _559 = (((cbSceneParam._m0[83u].y * _541) + (cbSceneParam._m0[82u].y * _531)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].y;
    float _560 = (((cbSceneParam._m0[83u].z * _541) + (cbSceneParam._m0[82u].z * _531)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].z;
    float _567 = ((_558 - cbMtdParam._m0[12u].z) * cbMtdParam._m0[16u].z) + cbMtdParam._m0[12u].z;
    float _568 = ((_559 - cbMtdParam._m0[12u].w) * cbMtdParam._m0[16u].z) + cbMtdParam._m0[12u].w;
    float _569 = ((_560 - cbMtdParam._m0[13u].x) * cbMtdParam._m0[16u].z) + cbMtdParam._m0[13u].x;
    float _585 = inversesqrt(dot(vec3(_459, _460, _461), vec3(_459, _460, _461)));
    float _600 = (0.9700000286102294921875 - exp2(log2((dot(vec4(_416, _417, _418, 0.0), vec4(_585 * _459, _585 * _460, _585 * _461, 0.0)) + 1.0) * 0.5) * 0.017999999225139617919921875)) * (-5.0);
    float _1203 = isnan(0.0) ? _600 : (isnan(_600) ? 0.0 : max(_600, 0.0));
    float _602 = isnan(1.0) ? _1203 : (isnan(_1203) ? 1.0 : min(_1203, 1.0));
    float _608 = exp2(log2(_602 * 6.5) * 7.0);
    float _1214 = isnan(0.0) ? _608 : (isnan(_608) ? 0.0 : max(_608, 0.0));
    float _610 = (isnan(1.0) ? _1214 : (isnan(_1214) ? 1.0 : min(_1214, 1.0))) + _602;
    float _1225 = isnan(0.0) ? _610 : (isnan(_610) ? 0.0 : max(_610, 0.0));
    float _611 = isnan(1.0) ? _1225 : (isnan(_1225) ? 1.0 : min(_1225, 1.0));
    float _621 = ((_611 * ((((_558 - cbMtdParam._m0[11u].z) * cbMtdParam._m0[16u].z) + cbMtdParam._m0[11u].z) - _567)) + _567) * _285.x;
    float _622 = ((_611 * ((((_559 - cbMtdParam._m0[11u].w) * cbMtdParam._m0[16u].z) + cbMtdParam._m0[11u].w) - _568)) + _568) * _285.y;
    float _623 = ((_611 * ((((_560 - cbMtdParam._m0[12u].x) * cbMtdParam._m0[16u].z) + cbMtdParam._m0[12u].x) - _569)) + _569) * _285.z;
    float _624 = isnan(_622) ? _621 : (isnan(_621) ? _622 : max(_621, _622));
    float _625 = isnan(_623) ? _624 : (isnan(_624) ? _623 : max(_624, _623));
    float _628;
    float _630;
    if (_625 < 1.1920928955078125e-07)
    {
        _628 = 0.0;
        _630 = 0.0;
    }
    else
    {
        float _655 = isnan(_622) ? _621 : (isnan(_621) ? _622 : min(_621, _622));
        float _657 = _625 - (isnan(_623) ? _655 : (isnan(_655) ? _623 : min(_655, _623)));
        float _631 = _657 / _625;
        float frontier_phi_3_4_ladder;
        float frontier_phi_3_4_ladder_1;
        if (_657 < 1.1920928955078125e-07)
        {
            frontier_phi_3_4_ladder = 0.0;
            frontier_phi_3_4_ladder_1 = _631;
        }
        else
        {
            float _984;
            if (_625 == _621)
            {
                _984 = ((_622 - _623) / _657) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_18_12_ladder;
                if (_625 == _622)
                {
                    frontier_phi_18_12_ladder = (((_623 - _621) / _657) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_18_12_ladder = (((_621 - _622) / _657) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _984 = frontier_phi_18_12_ladder;
            }
            float _989 = (_984 < 0.0) ? (_984 + 1.0) : _984;
            precise float _629 = (_989 - floor(_989)) * 6.0;
            frontier_phi_3_4_ladder = _629;
            frontier_phi_3_4_ladder_1 = _631;
        }
        _628 = frontier_phi_3_4_ladder;
        _630 = frontier_phi_3_4_ladder_1;
    }
    float _633 = cbMtdParam._m0[17u].x + _625;
    float _1256 = isnan(0.0) ? _633 : (isnan(_633) ? 0.0 : max(_633, 0.0));
    float _634 = isnan(1.0) ? _1256 : (isnan(_1256) ? 1.0 : min(_1256, 1.0));
    float _636 = cbMtdParam._m0[17u].z + _630;
    float _1267 = isnan(0.0) ? _636 : (isnan(_636) ? 0.0 : max(_636, 0.0));
    float _637 = isnan(1.0) ? _1267 : (isnan(_1267) ? 1.0 : min(_1267, 1.0));
    uint _639 = uint(int(floor(_628)));
    float _641 = _628 - float(int(_639));
    float _643 = (1.0 - _637) * _634;
    float _646 = (1.0 - (_641 * _637)) * _634;
    float _650 = (1.0 - ((1.0 - _641) * _637)) * _634;
    float _659;
    float _661;
    float _662;
    if ((_639 == 0u) || (_639 == 6u))
    {
        _659 = _634;
        _661 = _650;
        _662 = _643;
    }
    else
    {
        float frontier_phi_5_6_ladder;
        float frontier_phi_5_6_ladder_1;
        float frontier_phi_5_6_ladder_2;
        if (_639 == 1u)
        {
            frontier_phi_5_6_ladder = _646;
            frontier_phi_5_6_ladder_1 = _634;
            frontier_phi_5_6_ladder_2 = _643;
        }
        else
        {
            float frontier_phi_5_6_ladder_10_ladder;
            float frontier_phi_5_6_ladder_10_ladder_1;
            float frontier_phi_5_6_ladder_10_ladder_2;
            if (_639 == 2u)
            {
                frontier_phi_5_6_ladder_10_ladder = _643;
                frontier_phi_5_6_ladder_10_ladder_1 = _634;
                frontier_phi_5_6_ladder_10_ladder_2 = _650;
            }
            else
            {
                float frontier_phi_5_6_ladder_10_ladder_17_ladder;
                float frontier_phi_5_6_ladder_10_ladder_17_ladder_1;
                float frontier_phi_5_6_ladder_10_ladder_17_ladder_2;
                if (_639 == 3u)
                {
                    frontier_phi_5_6_ladder_10_ladder_17_ladder = _643;
                    frontier_phi_5_6_ladder_10_ladder_17_ladder_1 = _646;
                    frontier_phi_5_6_ladder_10_ladder_17_ladder_2 = _634;
                }
                else
                {
                    bool _1045 = _639 == 4u;
                    frontier_phi_5_6_ladder_10_ladder_17_ladder = _1045 ? _650 : _634;
                    frontier_phi_5_6_ladder_10_ladder_17_ladder_1 = _643;
                    frontier_phi_5_6_ladder_10_ladder_17_ladder_2 = _1045 ? _634 : _646;
                }
                frontier_phi_5_6_ladder_10_ladder = frontier_phi_5_6_ladder_10_ladder_17_ladder;
                frontier_phi_5_6_ladder_10_ladder_1 = frontier_phi_5_6_ladder_10_ladder_17_ladder_1;
                frontier_phi_5_6_ladder_10_ladder_2 = frontier_phi_5_6_ladder_10_ladder_17_ladder_2;
            }
            frontier_phi_5_6_ladder = frontier_phi_5_6_ladder_10_ladder;
            frontier_phi_5_6_ladder_1 = frontier_phi_5_6_ladder_10_ladder_1;
            frontier_phi_5_6_ladder_2 = frontier_phi_5_6_ladder_10_ladder_2;
        }
        _659 = frontier_phi_5_6_ladder;
        _661 = frontier_phi_5_6_ladder_1;
        _662 = frontier_phi_5_6_ladder_2;
    }
    float _671 = exp2(log2(_659) * cbMtdParam._m0[17u].w);
    float _672 = exp2(log2(_661) * cbMtdParam._m0[17u].w);
    float _673 = exp2(log2(_662) * cbMtdParam._m0[17u].w);
    float _683 = inversesqrt(dot(vec3(cbMtdParam._m0[21u].yzw), vec3(cbMtdParam._m0[21u].yzw)));
    float _691 = (dot(vec4(_416, _417, _418, 0.0), vec4(_683 * cbMtdParam._m0[21u].y, _683 * cbMtdParam._m0[21u].z, _683 * cbMtdParam._m0[21u].w, 0.0)) + 1.0) * 0.5;
    float _1278 = isnan(0.0) ? _691 : (isnan(_691) ? 0.0 : max(_691, 0.0));
    float _698 = cbMtdParam._m0[14u].x * exp2(log2(isnan(1.0) ? _1278 : (isnan(_1278) ? 1.0 : min(_1278, 1.0))) * cbMtdParam._m0[14u].z);
    float _1289 = isnan(0.0) ? _698 : (isnan(_698) ? 0.0 : max(_698, 0.0));
    float _699 = isnan(1.0) ? _1289 : (isnan(_1289) ? 1.0 : min(_1289, 1.0));
    float _706 = (cbMtdParam._m0[16u].x * exp2(log2(isnan(64.0) ? _491 : (isnan(_491) ? 64.0 : min(_491, 64.0))) * 2.599999904632568359375)) + (cbMtdParam._m0[16u].y * exp2(log2(isnan(64.0) ? _470 : (isnan(_470) ? 64.0 : min(_470, 64.0))) * 1.64999997615814208984375));
    float _709 = ((_699 * ((_671 * cbMtdParam._m0[9u].z) - _671)) + _671) + (_706 * cbMtdParam._m0[10u].z);
    float _712 = ((_699 * ((_672 * cbMtdParam._m0[9u].w) - _672)) + _672) + (_706 * cbMtdParam._m0[10u].w);
    float _715 = ((_699 * ((_673 * cbMtdParam._m0[10u].x) - _673)) + _673) + (_706 * cbMtdParam._m0[11u].x);
    float _1315 = isnan(0.0) ? _377 : (isnan(_377) ? 0.0 : max(_377, 0.0));
    float _723 = _327 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _733 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _740 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _742 = _740.w;
    uint _753 = _439 + 9u;
    uint _754 = _753 + uint(cbMatDynParam._m0[0u].w);
    float _760 = cbInstanceData._m0[_754].x * (isnan(4.0) ? _709 : (isnan(_709) ? 4.0 : min(_709, 4.0)));
    float _761 = cbInstanceData._m0[_754].y * (isnan(4.0) ? _712 : (isnan(_712) ? 4.0 : min(_712, 4.0)));
    float _762 = cbInstanceData._m0[_754].z * (isnan(4.0) ? _715 : (isnan(_715) ? 4.0 : min(_715, 4.0)));
    float _763 = isnan(0.0) ? _760 : (isnan(_760) ? 0.0 : max(_760, 0.0));
    float _764 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
    float _765 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
    float _770 = cbInstanceData._m0[_439 + 6u].w * (isnan(1.0) ? _1315 : (isnan(_1315) ? 1.0 : min(_1315, 1.0)));
    float _776 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _777 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _792 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_776, _777, (log2((isnan(cbSceneParam._m0[77u].w) ? _723 : (isnan(_723) ? cbSceneParam._m0[77u].w : min(_723, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _794 = _792.x;
    float _795 = _792.y;
    float _796 = _792.z;
    float _797 = _792.w;
    float _859;
    float _861;
    float _863;
    float _865;
    if (_723 > cbSceneParam._m0[78u].w)
    {
        float _821 = isnan(_723) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _723 : min(cbSceneParam._m0[80u].w, _723));
        float _822 = _821 / _723;
        float _833 = _822 * (cbSceneParam._m0[71u].x - (_403 / _733));
        float _834 = (cbSceneParam._m0[71u].y - (_407 / _733)) * _822;
        float _835 = (-0.0) - _834;
        float _836 = _822 * (cbSceneParam._m0[71u].z - (_411 / _733));
        float _838 = (cbSceneParam._m0[77u].w * _835) / _821;
        float _839 = _838 + cbSceneParam._m0[79u].w;
        float _840 = cbSceneParam._m0[79u].w - _834;
        float _846 = sqrt(((_833 * _833) + (_834 * _834)) + (_836 * _836));
        float _849 = (1.0 - (cbSceneParam._m0[77u].w / _821)) * _846;
        float _855 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _857 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1001;
        if (abs((_835 - _838) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1001 = ((((_839 > 0.0) ? exp2(_855 * _839) : (2.0 - exp2(_857 * _839))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _849;
        }
        else
        {
            float _939 = 1.0 / cbSceneParam._m0[80u].x;
            float _940 = isnan(_840) ? _839 : (isnan(_839) ? _840 : max(_839, _840));
            float _941 = isnan(_840) ? _839 : (isnan(_839) ? _840 : min(_839, _840));
            float _950 = isnan(0.0) ? _940 : (isnan(_940) ? 0.0 : min(_940, 0.0));
            float _951 = isnan(0.0) ? _941 : (isnan(_941) ? 0.0 : min(_941, 0.0));
            _1001 = ((abs(_846 / _835) * cbSceneParam._m0[80u].y) * ((((_950 - _951) * 2.0) - ((exp2(_855 * (isnan(0.0) ? _940 : (isnan(_940) ? 0.0 : max(_940, 0.0)))) - exp2(_855 * (isnan(0.0) ? _941 : (isnan(_941) ? 0.0 : max(_941, 0.0))))) * _939)) - ((exp2(_857 * _950) - exp2(_857 * _951)) * _939))) + (_849 * cbSceneParam._m0[80u].z);
        }
        vec4 _1003 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_776, _777, 1.0), 0.0);
        float _1012 = exp2((_1001 * (-1.44269502162933349609375)) * (1.0 - _1003.w));
        float _1013 = log2(_1012);
        float _1029 = log2(_797);
        _859 = (exp2(_1029 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1013 * cbSceneParam._m0[78u].x)) * _1003.x) / cbSceneParam._m0[78u].x)) + _794;
        _861 = (exp2(_1029 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1013 * cbSceneParam._m0[78u].y)) * _1003.y) / cbSceneParam._m0[78u].y)) + _795;
        _863 = (exp2(_1029 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1013 * cbSceneParam._m0[78u].z)) * _1003.z) / cbSceneParam._m0[78u].z)) + _796;
        _865 = _1012 * _797;
    }
    else
    {
        _859 = _794;
        _861 = _795;
        _863 = _796;
        _865 = _797;
    }
    bool _1039;
    vec4 _875;
    vec4 _899;
    float _901;
    float _906;
    float _907;
    float _908;
    float _909;
    bool _920;
    for (;;)
    {
        _875 = cbMatDynParam._m0[0u];
        float _877 = roundEven(_875.y);
        bool _878 = _877 == 3.0;
        float _880 = log2(_865);
        float _887 = exp2(_880 * cbSceneParam._m0[78u].x) * _763;
        float _888 = exp2(_880 * cbSceneParam._m0[78u].y) * _764;
        float _889 = exp2(_880 * cbSceneParam._m0[78u].z) * _765;
        float _896 = _742 + (-0.5);
        _899 = cbMtdParam._m0[1u];
        _901 = _899.y * _896;
        float _905 = (_877 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _906 = _905 * (_878 ? _887 : (_887 + (cbSceneParam._m0[72u].w * _859)));
        _907 = _905 * (_878 ? _888 : (_888 + (cbSceneParam._m0[72u].w * _861)));
        _908 = _905 * (_878 ? _889 : (_889 + (cbSceneParam._m0[72u].w * _863)));
        _909 = _896 * 0.999000012874603271484375;
        _920 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_920)
        {
            if ((cbInstanceData._m0[_439 + 7u].x + _909) < 0.5)
            {
                _1039 = true;
                break;
            }
        }
        uint _975 = _753 + uint(_875.w);
        if ((cbInstanceData._m0[_975].w < 1.0) && ((cbInstanceData._m0[_975].w + _909) < 0.5))
        {
            _1039 = true;
            break;
        }
        if ((_901 + 1.0) < _899.x)
        {
            _1039 = true;
            break;
        }
        _1039 = false;
        break;
    }
    float _1049;
    if (_1039)
    {
        discard_state = true;
        _1049 = 0.0;
    }
    else
    {
        _1049 = _770;
    }
    SV_Target.x = _906;
    SV_Target.y = _907;
    SV_Target.z = _908;
    SV_Target.w = _1049;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _770;
    discard_exit();
}


