#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D M_LightShaft_001_snp_0_Texture2D_1;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _774;
float _775;
float _776;
float _777;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _118 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _166 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _176 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _166);
    float _177 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _166);
    float _178 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _166);
    bool _184 = floatBitsToUint(cbMtdParam._m0[9u]).x != 0u;
    vec4 _197 = texture(sampler2D(M_LightShaft_001_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _201 = _197.x * TEXCOORD_1.z;
    float _213 = inversesqrt(dot(vec3(_176, _177, _178), vec3(_176, _177, _178)));
    float _214 = _176 * _213;
    float _217 = _177 * _213;
    float _219 = _178 * _213;
    float _236 = dot(vec3(cbSceneParam._m0[84u].xyz), vec3((-0.0) - _214, (-0.0) - _217, (-0.0) - _219)) * 0.5;
    float _238 = _236 + 0.5;
    float _248 = 0.5 - _236;
    float _277 = _201 * ((((cbSceneParam._m0[81u].x - cbMtdParam._m0[9u].y) + (((cbSceneParam._m0[83u].x * _248) + (cbSceneParam._m0[82u].x * _238)) * 0.15915493667125701904296875)) * cbMtdParam._m0[11u].z) + cbMtdParam._m0[9u].y);
    float _278 = _201 * ((((cbSceneParam._m0[81u].y - cbMtdParam._m0[9u].z) + (((cbSceneParam._m0[83u].y * _248) + (cbSceneParam._m0[82u].y * _238)) * 0.15915493667125701904296875)) * cbMtdParam._m0[11u].z) + cbMtdParam._m0[9u].z);
    float _279 = _201 * ((((cbSceneParam._m0[81u].z - cbMtdParam._m0[9u].w) + (((cbSceneParam._m0[83u].z * _248) + (cbSceneParam._m0[82u].z * _238)) * 0.15915493667125701904296875)) * cbMtdParam._m0[11u].z) + cbMtdParam._m0[9u].w);
    float _285 = dot(vec4(_214, _217, _219, 0.0), vec4(_118 * NORMAL.x, _118 * NORMAL.y, _118 * NORMAL.z, 0.0)) - cbMtdParam._m0[11u].y;
    float _786 = isnan(0.0) ? _285 : (isnan(_285) ? 0.0 : max(_285, 0.0));
    float _293 = exp2(log2(1.0 - (isnan(1.0) ? _786 : (isnan(_786) ? 1.0 : min(_786, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[11u].x : (isnan(cbMtdParam._m0[11u].x) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[11u].x, 0.001000000047497451305389404296875))));
    float _300 = _184 ? (_277 - (_293 * _277)) : _277;
    float _314 = cbMtdParam._m0[10u].y - cbMtdParam._m0[10u].w;
    float _316 = (sqrt(((_176 * _176) + (_177 * _177)) + (_178 * _178)) - cbMtdParam._m0[10u].w) / (isnan(0.0) ? _314 : (isnan(_314) ? 0.0 : max(_314, 0.0)));
    float _807 = isnan(0.0) ? _316 : (isnan(_316) ? 0.0 : max(_316, 0.0));
    vec4 _327 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _329 = _327.x;
    bool _335 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _351 = ((_335 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _329)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _329))) - POSITION_1.w) / cbMtdParam._m0[10u].z;
    float _818 = isnan(0.0) ? _351 : (isnan(_351) ? 0.0 : max(_351, 0.0));
    float _354 = ((isnan(1.0) ? _807 : (isnan(_807) ? 1.0 : min(_807, 1.0))) * _300) * (isnan(1.0) ? _818 : (isnan(_818) ? 1.0 : min(_818, 1.0)));
    float _829 = isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0));
    float _360 = _335 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _400 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _409 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _400);
    float _410 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _400);
    float _411 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _400);
    vec4 _416 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _418 = _416.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _505 = sqrt(((_409 * _409) + (_410 * _410)) + (_411 * _411));
        float _512 = (cbMatDynParam._m0[5u].x * _505) + cbMatDynParam._m0[5u].y;
        float _840 = isnan(0.0) ? _512 : (isnan(_512) ? 0.0 : max(_512, 0.0));
        float _513 = isnan(1.0) ? _840 : (isnan(_840) ? 1.0 : min(_840, 1.0));
        float _517 = (cbMatDynParam._m0[5u].z * _505) + cbMatDynParam._m0[5u].w;
        float _851 = isnan(0.0) ? _517 : (isnan(_517) ? 0.0 : max(_517, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _851 : (isnan(_851) ? 1.0 : min(_851, 1.0))) - _513)) + _513) < ((_418 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _435 = uint(roundEven(NORMAL.w)) * 13u;
    uint _437 = _435 + 9u;
    uint _438 = _437 + uint(cbMatDynParam._m0[0u].w);
    float _444 = cbInstanceData._m0[_438].x * _300;
    float _445 = cbInstanceData._m0[_438].y * (_184 ? (_278 - (_293 * _278)) : _278);
    float _446 = cbInstanceData._m0[_438].z * (_184 ? (_279 - (_293 * _279)) : _279);
    float _447 = isnan(0.0) ? _444 : (isnan(_444) ? 0.0 : max(_444, 0.0));
    float _448 = isnan(0.0) ? _445 : (isnan(_445) ? 0.0 : max(_445, 0.0));
    float _449 = isnan(0.0) ? _446 : (isnan(_446) ? 0.0 : max(_446, 0.0));
    float _455 = cbMtdParam._m0[2u].x * _444;
    float _456 = cbMtdParam._m0[2u].y * _445;
    float _457 = cbMtdParam._m0[2u].z * _446;
    float _877 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _459 = isnan(1.0) ? _877 : (isnan(_877) ? 1.0 : min(_877, 1.0));
    float _464 = cbInstanceData._m0[_435 + 6u].w * (isnan(1.0) ? _829 : (isnan(_829) ? 1.0 : min(_829, 1.0)));
    float _470 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _471 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _486 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_470, _471, (log2((isnan(cbSceneParam._m0[77u].w) ? _360 : (isnan(_360) ? cbSceneParam._m0[77u].w : min(_360, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _488 = _486.x;
    float _489 = _486.y;
    float _490 = _486.z;
    float _491 = _486.w;
    float _572;
    float _574;
    float _576;
    float _578;
    if (_360 > cbSceneParam._m0[78u].w)
    {
        float _534 = isnan(_360) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _360 : min(cbSceneParam._m0[80u].w, _360));
        float _535 = _534 / _360;
        float _546 = _535 * _409;
        float _547 = _410 * _535;
        float _548 = (-0.0) - _547;
        float _549 = _535 * _411;
        float _551 = (cbSceneParam._m0[77u].w * _548) / _534;
        float _552 = _551 + cbSceneParam._m0[79u].w;
        float _553 = cbSceneParam._m0[79u].w - _547;
        float _559 = sqrt(((_546 * _546) + (_547 * _547)) + (_549 * _549));
        float _562 = (1.0 - (cbSceneParam._m0[77u].w / _534)) * _559;
        float _568 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _570 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _702;
        if (abs((_548 - _551) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _702 = ((((_552 > 0.0) ? exp2(_568 * _552) : (2.0 - exp2(_570 * _552))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _562;
        }
        else
        {
            float _658 = 1.0 / cbSceneParam._m0[80u].x;
            float _659 = isnan(_553) ? _552 : (isnan(_552) ? _553 : max(_552, _553));
            float _660 = isnan(_553) ? _552 : (isnan(_552) ? _553 : min(_552, _553));
            float _669 = isnan(0.0) ? _659 : (isnan(_659) ? 0.0 : min(_659, 0.0));
            float _670 = isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : min(_660, 0.0));
            _702 = ((abs(_559 / _548) * cbSceneParam._m0[80u].y) * ((((_669 - _670) * 2.0) - ((exp2(_568 * (isnan(0.0) ? _659 : (isnan(_659) ? 0.0 : max(_659, 0.0)))) - exp2(_568 * (isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : max(_660, 0.0))))) * _658)) - ((exp2(_570 * _669) - exp2(_570 * _670)) * _658))) + (_562 * cbSceneParam._m0[80u].z);
        }
        vec4 _704 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_470, _471, 1.0), 0.0);
        float _713 = exp2((_702 * (-1.44269502162933349609375)) * (1.0 - _704.w));
        float _714 = log2(_713);
        float _730 = log2(_491);
        _572 = (exp2(_730 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_714 * cbSceneParam._m0[78u].x)) * _704.x) / cbSceneParam._m0[78u].x)) + _488;
        _574 = (exp2(_730 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_714 * cbSceneParam._m0[78u].y)) * _704.y) / cbSceneParam._m0[78u].y)) + _489;
        _576 = (exp2(_730 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_714 * cbSceneParam._m0[78u].z)) * _704.z) / cbSceneParam._m0[78u].z)) + _490;
        _578 = _713 * _491;
    }
    else
    {
        _572 = _488;
        _574 = _489;
        _576 = _490;
        _578 = _491;
    }
    bool _740;
    vec4 _588;
    vec4 _612;
    float _614;
    float _619;
    float _620;
    float _621;
    float _624;
    float _627;
    float _630;
    float _631;
    bool _642;
    for (;;)
    {
        _588 = cbMatDynParam._m0[0u];
        float _590 = roundEven(_588.y);
        bool _591 = _590 == 3.0;
        float _593 = log2(_578);
        float _597 = exp2(_593 * cbSceneParam._m0[78u].x);
        float _598 = exp2(_593 * cbSceneParam._m0[78u].y);
        float _599 = exp2(_593 * cbSceneParam._m0[78u].z);
        float _600 = _597 * _447;
        float _601 = _598 * _448;
        float _602 = _599 * _449;
        float _609 = _418 + (-0.5);
        _612 = cbMtdParam._m0[1u];
        _614 = _612.y * _609;
        float _618 = (_590 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _619 = _618 * (_591 ? _600 : (_600 + (cbSceneParam._m0[72u].w * _572)));
        _620 = _618 * (_591 ? _601 : (_601 + (cbSceneParam._m0[72u].w * _574)));
        _621 = _618 * (_591 ? _602 : (_602 + (cbSceneParam._m0[72u].w * _576)));
        _624 = ((_455 * _459) * _597) * _618;
        _627 = ((_456 * _459) * _598) * _618;
        _630 = ((_457 * _459) * _599) * _618;
        _631 = _609 * 0.999000012874603271484375;
        _642 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_642)
        {
            if ((cbInstanceData._m0[_435 + 7u].x + _631) < 0.5)
            {
                _740 = true;
                break;
            }
        }
        uint _694 = _437 + uint(_588.w);
        if ((cbInstanceData._m0[_694].w < 1.0) && ((cbInstanceData._m0[_694].w + _631) < 0.5))
        {
            _740 = true;
            break;
        }
        if ((_614 + 1.0) < _612.x)
        {
            _740 = true;
            break;
        }
        _740 = false;
        break;
    }
    float _745;
    if (_740)
    {
        discard_state = true;
        _745 = 0.0;
    }
    else
    {
        _745 = _464;
    }
    SV_Target.x = _619;
    SV_Target.y = _620;
    SV_Target.z = _621;
    SV_Target.w = _745;
    SV_Target_1.x = _624;
    SV_Target_1.y = _627;
    SV_Target_1.z = _630;
    SV_Target_1.w = _464;
    discard_exit();
}


