#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[17];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_6;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_7;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_13;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_16;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_4;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 11) uniform sampler SS_ClampAniso;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1292;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _209 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _210 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _211 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _217 = inversesqrt(dot(vec3(_209, _210, _211), vec3(_209, _210, _211)));
    float _218 = _217 * _209;
    float _219 = _217 * _210;
    float _220 = _217 * _211;
    float _224 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _225 = _224 * NORMAL.x;
    float _226 = _224 * NORMAL.y;
    float _227 = _224 * NORMAL.z;
    float _231 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _232 = _231 * TANGENT.x;
    float _233 = _231 * TANGENT.y;
    float _234 = _231 * TANGENT.z;
    float _239;
    float _240;
    float _241;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _239 = (-0.0) - _225;
        _240 = (-0.0) - _226;
        _241 = (-0.0) - _227;
    }
    else
    {
        _239 = _225;
        _240 = _226;
        _241 = _227;
    }
    vec4 _267 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_1) + cbTextureTilingScale._m0[3u].w));
    float _270 = _267.x;
    float _271 = _267.y;
    float _272 = _267.z;
    float _287 = (POSITION_1.w - cbMtdParam._m0[16u].x) * (1.0 / cbMtdParam._m0[14u].y);
    float _3886 = isnan(0.0) ? _287 : (isnan(_287) ? 0.0 : max(_287, 0.0));
    float _288 = isnan(1.0) ? _3886 : (isnan(_3886) ? 1.0 : min(_3886, 1.0));
    vec4 _300 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1) + cbTextureTilingScale._m0[1u].w));
    float _302 = _300.x;
    float _303 = _300.y;
    float _304 = _300.z;
    float _311 = (((_270 * cbMtdParam._m0[13u].x) - _302) * _288) + _302;
    float _312 = (((_271 * cbMtdParam._m0[13u].y) - _303) * _288) + _303;
    float _313 = (((_272 * cbMtdParam._m0[13u].z) - _304) * _288) + _304;
    vec4 _335 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_1) + cbTextureTilingScale._m0[6u].w));
    float _337 = _335.x;
    float _338 = _335.y;
    float _339 = _335.z;
    vec4 _357 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_0, SS_ClampAniso), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _387 = cbMtdParam._m0[15u].w * texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD_1) + cbTextureTilingScale._m0[7u].w)).x;
    float _395 = ((cbMtdParam._m0[14u].x * (-1.39999997615814208984375)) * ((((1.0 - TEXCOORD_3.x) - _357.x) * 2.0) - _387)) + 1.0;
    float _3897 = isnan(0.0) ? _395 : (isnan(_395) ? 0.0 : max(_395, 0.0));
    float _396 = isnan(1.0) ? _3897 : (isnan(_3897) ? 1.0 : min(_3897, 1.0));
    float _406 = (_396 * ((_337 - _311) + (((cbMtdParam._m0[11u].x * _270) - _337) * _288))) + _311;
    float _407 = (_396 * ((_338 - _312) + (((cbMtdParam._m0[11u].y * _271) - _338) * _288))) + _312;
    float _408 = (_396 * ((_339 - _313) + (((cbMtdParam._m0[11u].z * _272) - _339) * _288))) + _313;
    vec4 _430 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD_1) + cbTextureTilingScale._m0[12u].w));
    float _432 = _430.x;
    float _433 = _430.y;
    float _434 = _430.z;
    float _446 = ((((((1.0 - TEXCOORD_3.y) - _357.y) * 2.0) - _387) * (-1.39999997615814208984375)) * cbMtdParam._m0[15u].x) + 1.0;
    float _3908 = isnan(0.0) ? _446 : (isnan(_446) ? 0.0 : max(_446, 0.0));
    float _447 = isnan(1.0) ? _3908 : (isnan(_3908) ? 1.0 : min(_3908, 1.0));
    float _457 = (((_432 - _406) + (((cbMtdParam._m0[10u].x * _270) - _432) * _288)) * _447) + _406;
    float _458 = (((_433 - _407) + (((cbMtdParam._m0[10u].y * _271) - _433) * _288)) * _447) + _407;
    float _459 = (_447 * ((_434 - _408) + (((cbMtdParam._m0[10u].z * _272) - _434) * _288))) + _408;
    vec4 _479 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1) + cbTextureTilingScale._m0[2u].w));
    float _481 = _479.x;
    float _482 = _479.y;
    float _483 = _479.z;
    float _495 = ((((((1.0 - TEXCOORD_3.z) - _357.z) * 2.0) - _387) * (-1.39999997615814208984375)) * cbMtdParam._m0[15u].y) + 1.0;
    float _3919 = isnan(0.0) ? _495 : (isnan(_495) ? 0.0 : max(_495, 0.0));
    float _496 = isnan(1.0) ? _3919 : (isnan(_3919) ? 1.0 : min(_3919, 1.0));
    float _506 = (((_481 - _457) + (((cbMtdParam._m0[12u].x * _270) - _481) * _288)) * _496) + _457;
    float _507 = (((_482 - _458) + (((cbMtdParam._m0[12u].y * _271) - _482) * _288)) * _496) + _458;
    float _508 = (_496 * ((_483 - _459) + (((cbMtdParam._m0[12u].z * _272) - _483) * _288))) + _459;
    vec4 _523 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD_1) + cbTextureTilingScale._m0[5u].w));
    float _525 = _523.x;
    float _526 = _523.y;
    float _527 = _523.z;
    vec4 _539 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD_1) + cbTextureTilingScale._m0[11u].w));
    float _541 = _539.x;
    float _542 = _539.y;
    float _543 = _539.z;
    vec4 _565 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD_1) + cbTextureTilingScale._m0[4u].w));
    float _567 = _565.x;
    float _568 = _565.y;
    float _569 = _565.z;
    vec4 _590 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD_1) + cbTextureTilingScale._m0[10u].w));
    float _592 = _590.x;
    float _593 = _590.y;
    float _594 = _590.z;
    vec4 _615 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD_1) + cbTextureTilingScale._m0[9u].w));
    float _617 = _615.x;
    float _618 = _615.y;
    float _619 = _615.z;
    float _626 = ((_541 - _617) * _288) + _617;
    float _627 = ((_542 - _618) * _288) + _618;
    float _628 = ((_543 - _619) * _288) + _619;
    float _635 = (((((_541 - _592) * _288) + _592) - _626) * _396) + _626;
    float _636 = (((((_542 - _593) * _288) + _593) - _627) * _396) + _627;
    float _637 = (((((_543 - _594) * _288) + _594) - _628) * _396) + _628;
    float _644 = (((((_541 - _567) * _288) + _567) - _635) * _447) + _635;
    float _645 = (((((_542 - _568) * _288) + _568) - _636) * _447) + _636;
    float _646 = (((((_543 - _569) * _288) + _569) - _637) * _447) + _637;
    float _658 = (((((((_541 - _525) * _288) + _525) - _644) * _496) + _644) * 2.0) + (-1.0);
    float _660 = (((((((_542 - _526) * _288) + _526) - _645) * _496) + _645) * 2.0) + (-1.0);
    float _661 = dot(vec2(_658, _660), vec2(_658, _660));
    float _3930 = isnan(0.0) ? _661 : (isnan(_661) ? 0.0 : max(_661, 0.0));
    float _666 = sqrt(1.0 - (isnan(1.0) ? _3930 : (isnan(_3930) ? 1.0 : min(_3930, 1.0))));
    float _669 = fma(_666, _239, fma(_660, _232, _658 * _218));
    float _672 = fma(_666, _240, fma(_660, _233, _658 * _219));
    float _675 = fma(_666, _241, fma(_660, _234, _658 * _220));
    float _684 = exp2(log2(inversesqrt(dot(vec3(_669, _672, _675), vec3(_669, _672, _675))) * _672) * cbMtdParam._m0[15u].z) * cbMtdParam._m0[14u].z;
    float _3941 = isnan(0.0) ? _684 : (isnan(_684) ? 0.0 : max(_684, 0.0));
    float _685 = isnan(1.0) ? _3941 : (isnan(_3941) ? 1.0 : min(_3941, 1.0));
    float _3952 = isnan(0.0) ? _685 : (isnan(_685) ? 0.0 : max(_685, 0.0));
    float _686 = isnan(1.0) ? _3952 : (isnan(_3952) ? 1.0 : min(_3952, 1.0));
    float _688 = 3.0 - (_686 * 2.0);
    float _693 = _686 * _686;
    float _700 = ((_693 * (cbMtdParam._m0[9u].x - _506)) * _688) + _506;
    float _701 = ((_693 * (cbMtdParam._m0[9u].y - _507)) * _688) + _507;
    float _702 = ((_693 * (cbMtdParam._m0[9u].z - _508)) * _688) + _508;
    float _704 = ((((((_543 - _527) * _288) + _527) - _646) * _496) + _646) + cbMtdParam._m0[14u].w;
    float _717 = (((cbMtdParam._m0[16u].y * _658) - _658) * _288) + _658;
    float _718 = (((cbMtdParam._m0[16u].z * _660) - _660) * _288) + _660;
    float _719 = (((cbMtdParam._m0[16u].w * _666) - _666) * _288) + _666;
    vec4 _732 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_Snow_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD_1) + cbTextureTilingScale._m0[8u].w));
    float _738 = (_732.x * 2.0) + (-1.0);
    float _739 = (_732.y * 2.0) + (-1.0);
    float _740 = dot(vec2(_738, _739), vec2(_738, _739));
    float _3963 = isnan(0.0) ? _740 : (isnan(_740) ? 0.0 : max(_740, 0.0));
    float _755 = ((_693 * (_738 - _717)) * _688) + _717;
    float _756 = ((_693 * (_739 - _718)) * _688) + _718;
    float _757 = ((_693 * (sqrt(1.0 - (isnan(1.0) ? _3963 : (isnan(_3963) ? 1.0 : min(_3963, 1.0)))) - _719)) * _688) + _719;
    float _760 = fma(_757, _239, fma(_756, _232, _755 * _218));
    float _763 = fma(_757, _240, fma(_756, _233, _755 * _219));
    float _766 = fma(_757, _241, fma(_756, _234, _755 * _220));
    float _770 = inversesqrt(dot(vec3(_760, _763, _766), vec3(_760, _763, _766)));
    float _771 = _770 * _760;
    float _772 = _770 * _763;
    float _773 = _770 * _766;
    float _3974 = isnan(0.0) ? _704 : (isnan(_704) ? 0.0 : max(_704, 0.0));
    float _774 = isnan(1.0) ? _3974 : (isnan(_3974) ? 1.0 : min(_3974, 1.0));
    float _3985 = isnan(0.0) ? _700 : (isnan(_700) ? 0.0 : max(_700, 0.0));
    float _3996 = isnan(0.0) ? _701 : (isnan(_701) ? 0.0 : max(_701, 0.0));
    float _4007 = isnan(0.0) ? _702 : (isnan(_702) ? 0.0 : max(_702, 0.0));
    float _793 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _833 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _843 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _833);
    float _844 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _833);
    float _845 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _833);
    float _849 = inversesqrt(dot(vec3(_843, _844, _845), vec3(_843, _844, _845)));
    float _850 = _843 * _849;
    float _851 = _844 * _849;
    float _852 = _845 * _849;
    float _858 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _859 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _877 = fma(_773, cbSceneParam._m0[5u].z, fma(_772, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _771));
    float _880 = fma(_773, cbSceneParam._m0[6u].z, fma(_772, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _771));
    float _883 = fma(_773, cbSceneParam._m0[7u].z, fma(_772, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _771));
    uint _896 = uint(roundEven(NORMAL.w)) * 13u;
    uint _898 = (_896 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _904 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3985 : (isnan(_3985) ? 1.0 : min(_3985, 1.0)))) * cbInstanceData._m0[_898].x;
    float _905 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3996 : (isnan(_3996) ? 1.0 : min(_3996, 1.0)))) * cbInstanceData._m0[_898].y;
    float _906 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4007 : (isnan(_4007) ? 1.0 : min(_4007, 1.0)))) * cbInstanceData._m0[_898].z;
    float _4018 = isnan(0.0) ? _904 : (isnan(_904) ? 0.0 : max(_904, 0.0));
    float _907 = isnan(1.0) ? _4018 : (isnan(_4018) ? 1.0 : min(_4018, 1.0));
    float _4029 = isnan(0.0) ? _905 : (isnan(_905) ? 0.0 : max(_905, 0.0));
    float _908 = isnan(1.0) ? _4029 : (isnan(_4029) ? 1.0 : min(_4029, 1.0));
    float _4040 = isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0));
    float _909 = isnan(1.0) ? _4040 : (isnan(_4040) ? 1.0 : min(_4040, 1.0));
    vec4 _918 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _858, cbSceneParam._m0[86u].y * _859));
    float _921 = _918.x * TEXCOORD_3.w;
    float _922 = dot(vec3(_771, _772, _773), vec3(_850, _851, _852));
    float _925 = _922 * 2.0;
    float _929 = (_925 * _771) - _850;
    float _930 = (_925 * _772) - _851;
    float _931 = (_925 * _773) - _852;
    float _935 = abs(dot(vec3(_850, _851, _852), vec3(_771, _772, _773)));
    float _4051 = isnan(0.0) ? _935 : (isnan(_935) ? 0.0 : max(_935, 0.0));
    float _937 = sqrt(_774);
    float _949 = exp2((_937 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_937 * 3.0));
    float _981 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _985 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _989 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1291;
    float _1293;
    float _1294;
    float _1295;
    float _1296;
    float _1297;
    float _1298;
    float _1299;
    float _1300;
    float _1301;
    float _1302;
    float _1303;
    float _1304;
    float _1305;
    float _1306;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1016 = fma(_989, cbModelParam._m0[26u].z, fma(_985, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _981));
        float _1020 = fma(_989, cbModelParam._m0[27u].z, fma(_985, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _981));
        float _1024 = fma(_989, cbModelParam._m0[28u].z, fma(_985, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _981));
        float _1049 = _981 + _771;
        float _1050 = _985 + _772;
        float _1051 = _989 + _773;
        float _1061 = fma(_1051, cbModelParam._m0[26u].z, fma(_1050, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1049)) - _1016;
        float _1062 = fma(_1051, cbModelParam._m0[27u].z, fma(_1050, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1049)) - _1020;
        float _1063 = fma(_1051, cbModelParam._m0[28u].z, fma(_1050, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1049)) - _1024;
        float _1067 = inversesqrt(dot(vec3(_1061, _1062, _1063), vec3(_1061, _1062, _1063)));
        float _1080 = ((_1067 * _1061) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1016 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1081 = ((_1067 * _1062) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1020 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1082 = ((_1067 * _1063) / cbModelParam._m0[34u].z) + ((((((_1024 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1085 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1080, _1081, _1082), 0.0);
        vec4 _1092 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1080, _1081, _1082), 0.0);
        vec4 _1099 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1080, _1081, _1082), 0.0);
        vec4 _1106 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1080, _1081, _1082), 0.0);
        float _1119 = exp2((_1085.w + (-0.5)) * 20.0) * 2.0;
        float _1120 = _1119 * (_1085.x + (-0.5));
        float _1121 = _1119 * (_1085.y + (-0.5));
        float _1122 = _1119 * (_1085.z + (-0.5));
        float _1129 = exp2((_1092.w + (-0.5)) * 20.0) * 2.0;
        float _1130 = _1129 * (_1092.x + (-0.5));
        float _1131 = _1129 * (_1092.y + (-0.5));
        float _1132 = _1129 * (_1092.z + (-0.5));
        float _1139 = exp2((_1099.w + (-0.5)) * 20.0) * 2.0;
        float _1140 = _1139 * (_1099.x + (-0.5));
        float _1141 = _1139 * (_1099.y + (-0.5));
        float _1142 = _1139 * (_1099.z + (-0.5));
        float _1149 = exp2((_1106.w + (-0.5)) * 20.0) * 2.0;
        float _1150 = _1149 * (_1106.x + (-0.5));
        float _1151 = _1149 * (_1106.y + (-0.5));
        float _1152 = _1149 * (_1106.z + (-0.5));
        float _1153 = isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0));
        float _1154 = isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0));
        float _1155 = isnan(0.0) ? _1152 : (isnan(_1152) ? 0.0 : max(_1152, 0.0));
        float _1156 = _1120 * 0.5;
        float _1157 = _1130 * 0.5;
        float _1158 = _1140 * 0.5;
        float _1159 = dot(vec3(_1156, _1157, _1158), vec3(_1156, _1157, _1158));
        float _1164 = (_1159 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1159);
        float _1173 = (dot(vec3(_771, _772, _773), vec3(_1164 * _1156, _1164 * _1157, _1164 * _1158)) + 1.0) * 0.5;
        float _4077 = isnan(0.0) ? _1173 : (isnan(_1173) ? 0.0 : max(_1173, 0.0));
        float _1183 = sqrt(((_1157 * _1157) + (_1156 * _1156)) + (_1158 * _1158)) / (_1153 + 9.9999997473787516355514526367188e-06);
        float _4088 = isnan(0.0) ? _1183 : (isnan(_1183) ? 0.0 : max(_1183, 0.0));
        float _1184 = isnan(1.0) ? _4088 : (isnan(_4088) ? 1.0 : min(_4088, 1.0));
        float _1185 = _1184 * 2.0;
        float _1189 = (1.0 - _1184) / (_1184 + 1.0);
        float _4099 = isnan(0.0) ? _1189 : (isnan(_1189) ? 0.0 : max(_1189, 0.0));
        float _1190 = isnan(1.0) ? _4099 : (isnan(_4099) ? 1.0 : min(_4099, 1.0));
        float _1199 = ((((1.0 - _1190) * (_1185 + 2.0)) * exp2(log2(isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0))) * (_1185 + 1.0))) + _1190) * _1153;
        float _1200 = _1121 * 0.5;
        float _1201 = _1131 * 0.5;
        float _1202 = _1141 * 0.5;
        float _1203 = dot(vec3(_1200, _1201, _1202), vec3(_1200, _1201, _1202));
        float _1208 = (_1203 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1203);
        float _1216 = (dot(vec3(_771, _772, _773), vec3(_1208 * _1200, _1208 * _1201, _1208 * _1202)) + 1.0) * 0.5;
        float _4110 = isnan(0.0) ? _1216 : (isnan(_1216) ? 0.0 : max(_1216, 0.0));
        float _1225 = sqrt(((_1201 * _1201) + (_1200 * _1200)) + (_1202 * _1202)) / (_1154 + 9.9999997473787516355514526367188e-06);
        float _4121 = isnan(0.0) ? _1225 : (isnan(_1225) ? 0.0 : max(_1225, 0.0));
        float _1226 = isnan(1.0) ? _4121 : (isnan(_4121) ? 1.0 : min(_4121, 1.0));
        float _1227 = _1226 * 2.0;
        float _1231 = (1.0 - _1226) / (_1226 + 1.0);
        float _4132 = isnan(0.0) ? _1231 : (isnan(_1231) ? 0.0 : max(_1231, 0.0));
        float _1232 = isnan(1.0) ? _4132 : (isnan(_4132) ? 1.0 : min(_4132, 1.0));
        float _1241 = ((((1.0 - _1232) * (_1227 + 2.0)) * exp2(log2(isnan(1.0) ? _4110 : (isnan(_4110) ? 1.0 : min(_4110, 1.0))) * (_1227 + 1.0))) + _1232) * _1154;
        float _1242 = _1122 * 0.5;
        float _1243 = _1132 * 0.5;
        float _1244 = _1142 * 0.5;
        float _1245 = dot(vec3(_1242, _1243, _1244), vec3(_1242, _1243, _1244));
        float _1250 = (_1245 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1245);
        float _1258 = (dot(vec3(_771, _772, _773), vec3(_1250 * _1242, _1250 * _1243, _1250 * _1244)) + 1.0) * 0.5;
        float _4143 = isnan(0.0) ? _1258 : (isnan(_1258) ? 0.0 : max(_1258, 0.0));
        float _1267 = sqrt(((_1243 * _1243) + (_1242 * _1242)) + (_1244 * _1244)) / (_1155 + 9.9999997473787516355514526367188e-06);
        float _4154 = isnan(0.0) ? _1267 : (isnan(_1267) ? 0.0 : max(_1267, 0.0));
        float _1268 = isnan(1.0) ? _4154 : (isnan(_4154) ? 1.0 : min(_4154, 1.0));
        float _1269 = _1268 * 2.0;
        float _1273 = (1.0 - _1268) / (_1268 + 1.0);
        float _4165 = isnan(0.0) ? _1273 : (isnan(_1273) ? 0.0 : max(_1273, 0.0));
        float _1274 = isnan(1.0) ? _4165 : (isnan(_4165) ? 1.0 : min(_4165, 1.0));
        float _1283 = ((((1.0 - _1274) * (_1269 + 2.0)) * exp2(log2(isnan(1.0) ? _4143 : (isnan(_4143) ? 1.0 : min(_4143, 1.0))) * (_1269 + 1.0))) + _1274) * _1155;
        _1291 = _1122;
        _1293 = _1121;
        _1294 = _1120;
        _1295 = _1132;
        _1296 = _1131;
        _1297 = _1130;
        _1298 = _1142;
        _1299 = _1141;
        _1300 = _1140;
        _1301 = _1155;
        _1302 = _1154;
        _1303 = _1153;
        _1304 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0)));
        _1305 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1241 : (isnan(_1241) ? 0.0 : max(_1241, 0.0)));
        _1306 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1283 : (isnan(_1283) ? 0.0 : max(_1283, 0.0)));
    }
    else
    {
        _1291 = _1292;
        _1293 = _1292;
        _1294 = _1292;
        _1295 = _1292;
        _1296 = _1292;
        _1297 = _1292;
        _1298 = _1292;
        _1299 = _1292;
        _1300 = _1292;
        _1301 = _1292;
        _1302 = _1292;
        _1303 = _1292;
        _1304 = 0.0;
        _1305 = 0.0;
        _1306 = 0.0;
    }
    float _1601;
    float _1602;
    float _1603;
    float _1604;
    float _1605;
    float _1606;
    float _1607;
    float _1608;
    float _1609;
    float _1610;
    float _1611;
    float _1612;
    float _1613;
    float _1614;
    float _1615;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1332 = fma(_989, cbModelParam._m0[30u].z, fma(_985, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _981));
        float _1336 = fma(_989, cbModelParam._m0[31u].z, fma(_985, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _981));
        float _1340 = fma(_989, cbModelParam._m0[32u].z, fma(_985, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _981));
        float _1363 = _981 + _771;
        float _1364 = _985 + _772;
        float _1365 = _989 + _773;
        float _1375 = fma(_1365, cbModelParam._m0[30u].z, fma(_1364, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1363)) - _1332;
        float _1376 = fma(_1365, cbModelParam._m0[31u].z, fma(_1364, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1363)) - _1336;
        float _1377 = fma(_1365, cbModelParam._m0[32u].z, fma(_1364, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1363)) - _1340;
        float _1381 = inversesqrt(dot(vec3(_1375, _1376, _1377), vec3(_1375, _1376, _1377)));
        float _1394 = ((_1381 * _1375) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1332 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1395 = ((_1381 * _1376) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1336 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1396 = ((_1381 * _1377) / cbModelParam._m0[35u].z) + ((((((_1340 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1398 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1394, _1395, _1396), 0.0);
        vec4 _1405 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1394, _1395, _1396), 0.0);
        vec4 _1412 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1394, _1395, _1396), 0.0);
        vec4 _1419 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1394, _1395, _1396), 0.0);
        float _1431 = exp2((_1398.w + (-0.5)) * 20.0) * 2.0;
        float _1432 = _1431 * (_1398.x + (-0.5));
        float _1433 = _1431 * (_1398.y + (-0.5));
        float _1434 = _1431 * (_1398.z + (-0.5));
        float _1441 = exp2((_1405.w + (-0.5)) * 20.0) * 2.0;
        float _1442 = _1441 * (_1405.x + (-0.5));
        float _1443 = _1441 * (_1405.y + (-0.5));
        float _1444 = _1441 * (_1405.z + (-0.5));
        float _1451 = exp2((_1412.w + (-0.5)) * 20.0) * 2.0;
        float _1452 = _1451 * (_1412.x + (-0.5));
        float _1453 = _1451 * (_1412.y + (-0.5));
        float _1454 = _1451 * (_1412.z + (-0.5));
        float _1461 = exp2((_1419.w + (-0.5)) * 20.0) * 2.0;
        float _1462 = _1461 * (_1419.x + (-0.5));
        float _1463 = _1461 * (_1419.y + (-0.5));
        float _1464 = _1461 * (_1419.z + (-0.5));
        float _1465 = isnan(0.0) ? _1462 : (isnan(_1462) ? 0.0 : max(_1462, 0.0));
        float _1466 = isnan(0.0) ? _1463 : (isnan(_1463) ? 0.0 : max(_1463, 0.0));
        float _1467 = isnan(0.0) ? _1464 : (isnan(_1464) ? 0.0 : max(_1464, 0.0));
        float _1468 = _1432 * 0.5;
        float _1469 = _1442 * 0.5;
        float _1470 = _1452 * 0.5;
        float _1471 = dot(vec3(_1468, _1469, _1470), vec3(_1468, _1469, _1470));
        float _1476 = (_1471 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1471);
        float _1484 = (dot(vec3(_771, _772, _773), vec3(_1476 * _1468, _1476 * _1469, _1476 * _1470)) + 1.0) * 0.5;
        float _4206 = isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0));
        float _1493 = sqrt(((_1469 * _1469) + (_1468 * _1468)) + (_1470 * _1470)) / (_1465 + 9.9999997473787516355514526367188e-06);
        float _4217 = isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0));
        float _1494 = isnan(1.0) ? _4217 : (isnan(_4217) ? 1.0 : min(_4217, 1.0));
        float _1495 = _1494 * 2.0;
        float _1499 = (1.0 - _1494) / (_1494 + 1.0);
        float _4228 = isnan(0.0) ? _1499 : (isnan(_1499) ? 0.0 : max(_1499, 0.0));
        float _1500 = isnan(1.0) ? _4228 : (isnan(_4228) ? 1.0 : min(_4228, 1.0));
        float _1509 = ((((1.0 - _1500) * (_1495 + 2.0)) * exp2(log2(isnan(1.0) ? _4206 : (isnan(_4206) ? 1.0 : min(_4206, 1.0))) * (_1495 + 1.0))) + _1500) * _1465;
        float _1510 = _1433 * 0.5;
        float _1511 = _1443 * 0.5;
        float _1512 = _1453 * 0.5;
        float _1513 = dot(vec3(_1510, _1511, _1512), vec3(_1510, _1511, _1512));
        float _1518 = (_1513 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1513);
        float _1526 = (dot(vec3(_771, _772, _773), vec3(_1518 * _1510, _1518 * _1511, _1518 * _1512)) + 1.0) * 0.5;
        float _4239 = isnan(0.0) ? _1526 : (isnan(_1526) ? 0.0 : max(_1526, 0.0));
        float _1535 = sqrt(((_1511 * _1511) + (_1510 * _1510)) + (_1512 * _1512)) / (_1466 + 9.9999997473787516355514526367188e-06);
        float _4250 = isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0));
        float _1536 = isnan(1.0) ? _4250 : (isnan(_4250) ? 1.0 : min(_4250, 1.0));
        float _1537 = _1536 * 2.0;
        float _1541 = (1.0 - _1536) / (_1536 + 1.0);
        float _4261 = isnan(0.0) ? _1541 : (isnan(_1541) ? 0.0 : max(_1541, 0.0));
        float _1542 = isnan(1.0) ? _4261 : (isnan(_4261) ? 1.0 : min(_4261, 1.0));
        float _1551 = ((((1.0 - _1542) * (_1537 + 2.0)) * exp2(log2(isnan(1.0) ? _4239 : (isnan(_4239) ? 1.0 : min(_4239, 1.0))) * (_1537 + 1.0))) + _1542) * _1466;
        float _1552 = _1434 * 0.5;
        float _1553 = _1444 * 0.5;
        float _1554 = _1454 * 0.5;
        float _1555 = dot(vec3(_1552, _1553, _1554), vec3(_1552, _1553, _1554));
        float _1560 = (_1555 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1555);
        float _1568 = (dot(vec3(_771, _772, _773), vec3(_1560 * _1552, _1560 * _1553, _1560 * _1554)) + 1.0) * 0.5;
        float _4272 = isnan(0.0) ? _1568 : (isnan(_1568) ? 0.0 : max(_1568, 0.0));
        float _1577 = sqrt(((_1553 * _1553) + (_1552 * _1552)) + (_1554 * _1554)) / (_1467 + 9.9999997473787516355514526367188e-06);
        float _4283 = isnan(0.0) ? _1577 : (isnan(_1577) ? 0.0 : max(_1577, 0.0));
        float _1578 = isnan(1.0) ? _4283 : (isnan(_4283) ? 1.0 : min(_4283, 1.0));
        float _1579 = _1578 * 2.0;
        float _1583 = (1.0 - _1578) / (_1578 + 1.0);
        float _4294 = isnan(0.0) ? _1583 : (isnan(_1583) ? 0.0 : max(_1583, 0.0));
        float _1584 = isnan(1.0) ? _4294 : (isnan(_4294) ? 1.0 : min(_4294, 1.0));
        float _1593 = ((((1.0 - _1584) * (_1579 + 2.0)) * exp2(log2(isnan(1.0) ? _4272 : (isnan(_4272) ? 1.0 : min(_4272, 1.0))) * (_1579 + 1.0))) + _1584) * _1467;
        _1601 = _1434;
        _1602 = _1433;
        _1603 = _1432;
        _1604 = _1444;
        _1605 = _1443;
        _1606 = _1442;
        _1607 = _1454;
        _1608 = _1453;
        _1609 = _1452;
        _1610 = _1467;
        _1611 = _1466;
        _1612 = _1465;
        _1613 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1509 : (isnan(_1509) ? 0.0 : max(_1509, 0.0)));
        _1614 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0)));
        _1615 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : max(_1593, 0.0)));
    }
    else
    {
        _1601 = _1292;
        _1602 = _1292;
        _1603 = _1292;
        _1604 = _1292;
        _1605 = _1292;
        _1606 = _1292;
        _1607 = _1292;
        _1608 = _1292;
        _1609 = _1292;
        _1610 = _1292;
        _1611 = _1292;
        _1612 = _1292;
        _1613 = 0.0;
        _1614 = 0.0;
        _1615 = 0.0;
    }
    float _1625 = (cbModelParam._m0[1u].x * (_1613 - _1304)) + _1304;
    float _1626 = (cbModelParam._m0[1u].x * (_1614 - _1305)) + _1305;
    float _1627 = (cbModelParam._m0[1u].x * (_1615 - _1306)) + _1306;
    float _1648 = fma(_1627, cbSceneParam._m0[89u].z, fma(_1626, cbSceneParam._m0[89u].y, _1625 * cbSceneParam._m0[89u].x));
    float _1651 = fma(_1627, cbSceneParam._m0[90u].z, fma(_1626, cbSceneParam._m0[90u].y, _1625 * cbSceneParam._m0[90u].x));
    float _1654 = fma(_1627, cbSceneParam._m0[91u].z, fma(_1626, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1625));
    float _1669 = _929 * 0.5;
    float _1670 = _930 * 0.5;
    float _1671 = _931 * 0.5;
    float _1672 = dot(vec4(_1669, _1670, _1671, 1.0), vec4(_1603, _1606, _1609, _1612));
    float _1675 = dot(vec4(_1669, _1670, _1671, 1.0), vec4(_1602, _1605, _1608, _1611));
    float _1678 = dot(vec4(_1669, _1670, _1671, 1.0), vec4(_1601, _1604, _1607, _1610));
    float _1712;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1685 = dot(vec4(_1669, _1670, _1671, 1.0), vec4(_1291, _1295, _1298, _1301));
        float _1689 = dot(vec4(_1669, _1670, _1671, 1.0), vec4(_1293, _1296, _1299, _1302));
        float _1693 = dot(vec4(_1669, _1670, _1671, 1.0), vec4(_1294, _1297, _1300, _1303));
        float _1700 = dot(vec4(cbModelParam._m0[39u]), vec4(_1669, _1670, _1671, 1.0));
        _1712 = dot(vec3(isnan(0.0) ? _1693 : (isnan(_1693) ? 0.0 : max(_1693, 0.0)), isnan(0.0) ? _1689 : (isnan(_1689) ? 0.0 : max(_1689, 0.0)), isnan(0.0) ? _1685 : (isnan(_1685) ? 0.0 : max(_1685, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1700) ? 0.0 : (isnan(0.0) ? _1700 : max(0.0, _1700))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1712 = 1.0;
    }
    float _1723;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1714 = dot(vec4(cbModelParam._m0[40u]), vec4(_1669, _1670, _1671, 1.0));
        _1723 = dot(vec3(isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0)), isnan(0.0) ? _1675 : (isnan(_1675) ? 0.0 : max(_1675, 0.0)), isnan(0.0) ? _1678 : (isnan(_1678) ? 0.0 : max(_1678, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1714) ? 0.0 : (isnan(0.0) ? _1714 : max(0.0, _1714))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1723 = 1.0;
    }
    float _1727 = (_1723 * cbModelParam._m0[1u].x) + (_1712 * (1.0 - cbModelParam._m0[1u].x));
    float _1737 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _774);
    float _1738 = isnan(_1737) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1737 : min(cbModelParam._m0[25u].z, _1737));
    float _1818;
    float _1820;
    float _1822;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1785 = fma(_989, cbModelParam._m0[13u].z, fma(_985, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _981)) + cbModelParam._m0[13u].w;
        float _1789 = fma(_989, cbModelParam._m0[14u].z, fma(_985, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _981)) + cbModelParam._m0[14u].w;
        float _1793 = fma(_989, cbModelParam._m0[15u].z, fma(_985, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _981)) + cbModelParam._m0[15u].w;
        float _1796 = fma(_931, cbModelParam._m0[13u].z, fma(_930, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _929));
        float _1799 = fma(_931, cbModelParam._m0[14u].z, fma(_930, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _929));
        float _1802 = fma(_931, cbModelParam._m0[15u].z, fma(_930, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _929));
        float _1830;
        if (_1796 > 0.0)
        {
            _1830 = abs((1.0 - _1785) / _1796);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1796 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1785 + 1.0) / _1796);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1830 = frontier_phi_16_14_ladder;
        }
        float _2003;
        if (_1799 > 0.0)
        {
            _2003 = abs((1.0 - _1789) / _1799);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1799 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1789 + 1.0) / _1799);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2003 = frontier_phi_25_21_ladder;
        }
        float _2298;
        if (_1802 > 0.0)
        {
            _2298 = abs((1.0 - _1793) / _1802);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1802 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1793 + 1.0) / _1802);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2298 = frontier_phi_37_32_ladder;
        }
        float _2300 = isnan(_2003) ? _1830 : (isnan(_1830) ? _2003 : min(_1830, _2003));
        float _2301 = isnan(_2298) ? _2300 : (isnan(_2300) ? _2298 : min(_2300, _2298));
        float _2305 = (_2301 * _1796) + _1785;
        float _2306 = (_2301 * _1799) + _1789;
        float _2307 = (_2301 * _1802) + _1793;
        float _2308 = _2301 * 9.9999997473787516355514526367188e-05;
        float _2310 = (-1.0) - _2308;
        float _2312 = _2308 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2307 > _2312) || ((_2307 < _2310) || ((_2306 > _2312) || ((_2306 < _2310) || ((_2305 < _2310) || (_2305 > _2312))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2452 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2307, cbModelParam._m0[9u].z, fma(_2306, cbModelParam._m0[9u].y, _2305 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2307, cbModelParam._m0[10u].z, fma(_2306, cbModelParam._m0[10u].y, _2305 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2307, cbModelParam._m0[11u].z, fma(_2306, cbModelParam._m0[11u].y, _2305 * cbModelParam._m0[11u].x))), _1738);
            frontier_phi_15_37_ladder = _2452.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2452.x * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2452.z * cbModelParam._m0[1u].y;
        }
        _1818 = frontier_phi_15_37_ladder_1;
        _1820 = frontier_phi_15_37_ladder;
        _1822 = frontier_phi_15_37_ladder_2;
    }
    else
    {
        vec4 _1806 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_929, _930, _931), _1738);
        _1818 = _1806.x * cbModelParam._m0[1u].y;
        _1820 = _1806.y * cbModelParam._m0[1u].y;
        _1822 = _1806.z * cbModelParam._m0[1u].y;
    }
    float _1826 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _774);
    float _1827 = isnan(_1826) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1826 : min(cbModelParam._m0[25u].w, _1826));
    float _1920;
    float _1922;
    float _1924;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1884 = fma(_989, cbModelParam._m0[21u].z, fma(_985, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _981)) + cbModelParam._m0[21u].w;
        float _1888 = fma(_989, cbModelParam._m0[22u].z, fma(_985, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _981)) + cbModelParam._m0[22u].w;
        float _1892 = fma(_989, cbModelParam._m0[23u].z, fma(_985, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _981)) + cbModelParam._m0[23u].w;
        float _1895 = fma(_931, cbModelParam._m0[21u].z, fma(_930, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _929));
        float _1898 = fma(_931, cbModelParam._m0[22u].z, fma(_930, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _929));
        float _1901 = fma(_931, cbModelParam._m0[23u].z, fma(_930, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _929));
        float _2008;
        if (_1895 > 0.0)
        {
            _2008 = abs((1.0 - _1884) / _1895);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1895 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1884 + 1.0) / _1895);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _2008 = frontier_phi_27_23_ladder;
        }
        float _2325;
        if (_1898 > 0.0)
        {
            _2325 = abs((1.0 - _1888) / _1898);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1898 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1888 + 1.0) / _1898);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2325 = frontier_phi_39_34_ladder;
        }
        float _2652;
        if (_1901 > 0.0)
        {
            _2652 = abs((1.0 - _1892) / _1901);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1901 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1892 + 1.0) / _1901);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2652 = frontier_phi_49_46_ladder;
        }
        float _2654 = isnan(_2325) ? _2008 : (isnan(_2008) ? _2325 : min(_2008, _2325));
        float _2655 = isnan(_2652) ? _2654 : (isnan(_2654) ? _2652 : min(_2654, _2652));
        float _2659 = (_2655 * _1895) + _1884;
        float _2660 = (_2655 * _1898) + _1888;
        float _2661 = (_2655 * _1901) + _1892;
        float _2662 = _2655 * 9.9999997473787516355514526367188e-05;
        float _2663 = (-1.0) - _2662;
        float _2665 = _2662 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2661 > _2665) || ((_2661 < _2663) || ((_2660 > _2665) || ((_2660 < _2663) || ((_2659 < _2663) || (_2659 > _2665))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2779 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2661, cbModelParam._m0[17u].z, fma(_2660, cbModelParam._m0[17u].y, _2659 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2661, cbModelParam._m0[18u].z, fma(_2660, cbModelParam._m0[18u].y, _2659 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2661, cbModelParam._m0[19u].z, fma(_2660, cbModelParam._m0[19u].y, _2659 * cbModelParam._m0[19u].x))), _1827);
            frontier_phi_24_49_ladder = _2779.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2779.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2779.x * cbModelParam._m0[1u].z;
        }
        _1920 = frontier_phi_24_49_ladder_2;
        _1922 = frontier_phi_24_49_ladder_1;
        _1924 = frontier_phi_24_49_ladder;
    }
    else
    {
        vec4 _1904 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_929, _930, _931), _1827);
        _1920 = _1904.x * cbModelParam._m0[1u].z;
        _1922 = _1904.y * cbModelParam._m0[1u].z;
        _1924 = _1904.z * cbModelParam._m0[1u].z;
    }
    float _1936 = ((((1.0 - _949) * ((_937 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_949 * _937)) * _921;
    float _1937 = _1936 * ((cbModelParam._m0[1u].w * (_1920 - _1818)) + _1818);
    float _1938 = _1936 * ((cbModelParam._m0[1u].w * (_1922 - _1820)) + _1820);
    float _1939 = _1936 * ((cbModelParam._m0[1u].w * (_1924 - _1822)) + _1822);
    float _1942 = fma(_1939, cbSceneParam._m0[89u].z, fma(_1938, cbSceneParam._m0[89u].y, _1937 * cbSceneParam._m0[89u].x));
    float _1945 = fma(_1939, cbSceneParam._m0[90u].z, fma(_1938, cbSceneParam._m0[90u].y, _1937 * cbSceneParam._m0[90u].x));
    float _1948 = fma(_1939, cbSceneParam._m0[91u].z, fma(_1938, cbSceneParam._m0[91u].y, _1937 * cbSceneParam._m0[91u].x));
    float _1982 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1986 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1990 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1994 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1995 = _1982 / _1994;
    float _1996 = _1986 / _1994;
    float _1997 = _1990 / _1994;
    float _2144;
    float _2145;
    float _2146;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2024 = ((uint(_1997 > cbSceneParam._m0[59u].y) + uint(_1997 > cbSceneParam._m0[59u].x)) + uint(_1997 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2025 = _2024 + 43u;
        uint _2033 = _2024 + 44u;
        uint _2041 = _2024 + 45u;
        uint _2049 = _2024 + 46u;
        float _2060 = fma(_1994, cbSceneParam._m0[_2025].w, fma(_1990, cbSceneParam._m0[_2025].z, fma(_1986, cbSceneParam._m0[_2025].y, _1982 * cbSceneParam._m0[_2025].x)));
        float _2064 = fma(_1994, cbSceneParam._m0[_2033].w, fma(_1990, cbSceneParam._m0[_2033].z, fma(_1986, cbSceneParam._m0[_2033].y, _1982 * cbSceneParam._m0[_2033].x)));
        float _2072 = fma(_1994, cbSceneParam._m0[_2049].w, fma(_1990, cbSceneParam._m0[_2049].z, fma(_1986, cbSceneParam._m0[_2049].y, _1982 * cbSceneParam._m0[_2049].x)));
        float _2077 = cbSceneParam._m0[33u].z * _2072;
        float _2079 = cbSceneParam._m0[33u].w * _2072;
        float _2082 = fma(_1994, cbSceneParam._m0[_2041].w, fma(_1990, cbSceneParam._m0[_2041].z, fma(_1986, cbSceneParam._m0[_2041].y, _1982 * cbSceneParam._m0[_2041].x))) / _2072;
        float _2130 = (cbSceneParam._m0[33u].x - sqrt(((_1996 * _1996) + (_1995 * _1995)) + (_1997 * _1997))) * cbSceneParam._m0[33u].y;
        float _4420 = isnan(0.0) ? _2130 : (isnan(_2130) ? 0.0 : max(_2130, 0.0));
        float _2137 = (isnan(1.0) ? _4420 : (isnan(_4420) ? 1.0 : min(_4420, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2077 + _2060) / _2072, (_2079 + _2064) / _2072), _2082), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2079 + _2060) / _2072, (_2064 - _2077) / _2072), _2082), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2060 - _2077) / _2072, (_2064 - _2079) / _2072), _2082), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2060 - _2079) / _2072, (_2077 + _2064) / _2072), _2082), 0.0)).x), vec4(0.25)));
        _2144 = 1.0 - (_2137 * cbSceneParam._m0[34u].x);
        _2145 = 1.0 - (_2137 * cbSceneParam._m0[34u].y);
        _2146 = 1.0 - (_2137 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2144 = 1.0;
        _2145 = 1.0;
        _2146 = 1.0;
    }
    float _2210;
    float _2212;
    float _2214;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2198 = fma(_1994, cbSceneParam._m0[63u].w, fma(_1990, cbSceneParam._m0[63u].z, fma(_1986, cbSceneParam._m0[63u].y, _1982 * cbSceneParam._m0[63u].x)));
        float _2199 = fma(_1994, cbSceneParam._m0[60u].w, fma(_1990, cbSceneParam._m0[60u].z, fma(_1986, cbSceneParam._m0[60u].y, _1982 * cbSceneParam._m0[60u].x))) / _2198;
        float _2200 = fma(_1994, cbSceneParam._m0[61u].w, fma(_1990, cbSceneParam._m0[61u].z, fma(_1986, cbSceneParam._m0[61u].y, _1982 * cbSceneParam._m0[61u].x))) / _2198;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_2199 >= cbSceneParam._m0[64u].x) && (_2200 >= cbSceneParam._m0[64u].y)) && (_2199 <= cbSceneParam._m0[64u].z)) && (_2200 <= cbSceneParam._m0[64u].w))
        {
            float _2338 = fma(_1994, cbSceneParam._m0[62u].w, fma(_1990, cbSceneParam._m0[62u].z, fma(_1986, cbSceneParam._m0[62u].y, _1982 * cbSceneParam._m0[62u].x))) / _2198;
            float _2342 = isnan(cbSceneParam._m0[41u].w) ? _2338 : (isnan(_2338) ? cbSceneParam._m0[41u].w : max(_2338, cbSceneParam._m0[41u].w));
            float _2385 = (cbSceneParam._m0[33u].x - sqrt(((_1996 * _1996) + (_1995 * _1995)) + (_1997 * _1997))) * cbSceneParam._m0[33u].y;
            float _4436 = isnan(0.0) ? _2385 : (isnan(_2385) ? 0.0 : max(_2385, 0.0));
            float _2392 = (isnan(1.0) ? _4436 : (isnan(_4436) ? 1.0 : min(_4436, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2199, cbSceneParam._m0[33u].w + _2200), _2342), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2199, _2200 - cbSceneParam._m0[33u].z), _2342), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2199 - cbSceneParam._m0[33u].z, _2200 - cbSceneParam._m0[33u].w), _2342), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2199 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2200), _2342), 0.0)).x), vec4(0.25)));
            float _2396 = 1.0 - (_2392 * cbSceneParam._m0[34u].x);
            float _2397 = 1.0 - (_2392 * cbSceneParam._m0[34u].y);
            float _2398 = 1.0 - (_2392 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2397) ? _2145 : (isnan(_2145) ? _2397 : min(_2145, _2397));
            frontier_phi_36_35_ladder_1 = isnan(_2398) ? _2146 : (isnan(_2146) ? _2398 : min(_2146, _2398));
            frontier_phi_36_35_ladder_2 = isnan(_2396) ? _2144 : (isnan(_2144) ? _2396 : min(_2144, _2396));
        }
        else
        {
            frontier_phi_36_35_ladder = _2145;
            frontier_phi_36_35_ladder_1 = _2146;
            frontier_phi_36_35_ladder_2 = _2144;
        }
        _2210 = frontier_phi_36_35_ladder_2;
        _2212 = frontier_phi_36_35_ladder;
        _2214 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _2210 = _2144;
        _2212 = _2145;
        _2214 = _2146;
    }
    uvec4 _2219 = floatBitsToUint(cbInstanceData._m0[_896 + 5u]);
    uint _2221 = _2219.x * 14u;
    uint _2222 = _2221 + 13u;
    float _2229 = _921 + (-1.0);
    float _2234 = (cbLight._m0[_2222].x * _2229) + 1.0;
    float _2235 = (cbLight._m0[_2222].y * _2229) + 1.0;
    float _2236 = (cbLight._m0[_2222].z * _2229) + 1.0;
    float _2237 = (cbLight._m0[_2222].w * _2229) + 1.0;
    uint _2238 = _2221 + 5u;
    float _2244 = isnan(1.0) ? _2235 : (isnan(_2235) ? 1.0 : min(_2235, 1.0));
    uint _2248 = _2221 + 4u;
    float _2257 = isnan(1.0) ? _2234 : (isnan(_2234) ? 1.0 : min(_2234, 1.0));
    uint _2261 = _2221 | 1u;
    float _2272 = dot(vec3(cbLight._m0[_2221].xyz), vec3(_771, _772, _773));
    float _2275 = dot(vec3(cbLight._m0[_2261].xyz), vec3(_771, _772, _773));
    float _4472 = isnan(0.0) ? _2272 : (isnan(_2272) ? 0.0 : max(_2272, 0.0));
    float _4483 = isnan(0.0) ? _2275 : (isnan(_2275) ? 0.0 : max(_2275, 0.0));
    float _2280 = (isnan(1.0) ? _4472 : (isnan(_4472) ? 1.0 : min(_4472, 1.0))) * 0.3183098733425140380859375;
    float _2282 = (isnan(1.0) ? _4483 : (isnan(_4483) ? 1.0 : min(_4483, 1.0))) * 0.3183098733425140380859375;
    float _2289 = ((cbLight._m0[_2238].x * _2244) * _2282) + (((cbLight._m0[_2248].x * _2210) * _2257) * _2280);
    float _2290 = ((_2244 * cbLight._m0[_2238].y) * _2282) + (((cbLight._m0[_2248].y * _2212) * _2257) * _2280);
    float _2291 = ((_2244 * cbLight._m0[_2238].z) * _2282) + (((cbLight._m0[_2248].z * _2214) * _2257) * _2280);
    uvec4 _2295 = floatBitsToUint(cbLight._m0[_2221 + 12u]);
    bool _2297 = _2295.x == 0u;
    float _2399;
    float _2401;
    float _2403;
    if (_2297)
    {
        _2399 = _2289;
        _2401 = _2290;
        _2403 = _2291;
    }
    else
    {
        uint _2407 = _2221 + 6u;
        float _2423 = (dot(vec3(cbLight._m0[_2221 + 2u].xyz), vec3(_771, _772, _773)) * 0.5) + 0.5;
        float _2424 = _2423 * _2423;
        float _4494 = isnan(0.0) ? _2424 : (isnan(_2424) ? 0.0 : max(_2424, 0.0));
        float _2425 = isnan(1.0) ? _4494 : (isnan(_4494) ? 1.0 : min(_4494, 1.0));
        float _2426 = isnan(1.0) ? _2236 : (isnan(_2236) ? 1.0 : min(_2236, 1.0));
        _2399 = (((cbLight._m0[_2407].x * 0.3183098733425140380859375) * _2425) * _2426) + _2289;
        _2401 = (((cbLight._m0[_2407].y * 0.3183098733425140380859375) * _2425) * _2426) + _2290;
        _2403 = (((cbLight._m0[_2407].z * 0.3183098733425140380859375) * _2425) * _2426) + _2291;
    }
    bool _2406 = _2295.y == 0u;
    float _2461;
    float _2463;
    float _2465;
    if (_2406)
    {
        _2461 = _2399;
        _2463 = _2401;
        _2465 = _2403;
    }
    else
    {
        uint _2623 = _2221 + 7u;
        float _2639 = (dot(vec3(cbLight._m0[_2221 + 3u].xyz), vec3(_771, _772, _773)) * 0.5) + 0.5;
        float _2640 = _2639 * _2639;
        float _4510 = isnan(0.0) ? _2640 : (isnan(_2640) ? 0.0 : max(_2640, 0.0));
        float _2641 = isnan(1.0) ? _4510 : (isnan(_4510) ? 1.0 : min(_4510, 1.0));
        float _2642 = isnan(1.0) ? _2237 : (isnan(_2237) ? 1.0 : min(_2237, 1.0));
        _2461 = (((cbLight._m0[_2623].x * 0.3183098733425140380859375) * _2641) * _2642) + _2399;
        _2463 = (((cbLight._m0[_2623].y * 0.3183098733425140380859375) * _2641) * _2642) + _2401;
        _2465 = (((cbLight._m0[_2623].z * 0.3183098733425140380859375) * _2641) * _2642) + _2403;
    }
    uint _2468 = _2221 + 8u;
    float _2481 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2221].w)) * _774) * 0.949999988079071044921875);
    float _2482 = _2481 * _2481;
    float _2483 = cbLight._m0[_2221].x + _850;
    float _2484 = cbLight._m0[_2221].y + _851;
    float _2485 = cbLight._m0[_2221].z + _852;
    float _2489 = inversesqrt(dot(vec3(_2483, _2484, _2485), vec3(_2483, _2484, _2485)));
    float _2490 = _2489 * _2483;
    float _2491 = _2489 * _2484;
    float _2492 = _2489 * _2485;
    float _2493 = dot(vec3(_771, _772, _773), vec3(cbLight._m0[_2221].xyz));
    float _4526 = isnan(0.0) ? _2493 : (isnan(_2493) ? 0.0 : max(_2493, 0.0));
    float _2496 = isnan(1.0) ? _4526 : (isnan(_4526) ? 1.0 : min(_4526, 1.0));
    float _4537 = isnan(0.0) ? _922 : (isnan(_922) ? 0.0 : max(_922, 0.0));
    float _2497 = isnan(1.0) ? _4537 : (isnan(_4537) ? 1.0 : min(_4537, 1.0));
    float _2498 = dot(vec3(_771, _772, _773), vec3(_2490, _2491, _2492));
    float _4548 = isnan(0.0) ? _2498 : (isnan(_2498) ? 0.0 : max(_2498, 0.0));
    float _2501 = isnan(1.0) ? _4548 : (isnan(_4548) ? 1.0 : min(_4548, 1.0));
    float _2502 = dot(vec3(cbLight._m0[_2221].xyz), vec3(_2490, _2491, _2492));
    float _4559 = isnan(0.0) ? _2502 : (isnan(_2502) ? 0.0 : max(_2502, 0.0));
    float _2506 = _2482 * _2482;
    float _2510 = ((_2501 * _2501) * (_2506 + (-1.0))) + 1.0;
    float _2521 = (exp2(log2(1.0 - (isnan(1.0) ? _4559 : (isnan(_4559) ? 1.0 : min(_4559, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2522 = 1.0 - _2482;
    float _2533 = (0.5 / (((_2497 * ((_2496 * _2522) + _2482)) + 9.9999999392252902907785028219223e-09) + (((_2497 * _2522) + _2482) * _2496))) * _2496;
    float _4570 = isnan(0.0) ? _2533 : (isnan(_2533) ? 0.0 : max(_2533, 0.0));
    float _2535 = (isnan(1.0) ? _4570 : (isnan(_4570) ? 1.0 : min(_4570, 1.0))) * (_2506 / ((_2510 * _2510) * 3.141590118408203125));
    uint _2549 = _2221 + 9u;
    float _2560 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2261].w)) * _774) * 0.949999988079071044921875);
    float _2561 = _2560 * _2560;
    float _2562 = cbLight._m0[_2261].x + _850;
    float _2563 = cbLight._m0[_2261].y + _851;
    float _2564 = cbLight._m0[_2261].z + _852;
    float _2568 = inversesqrt(dot(vec3(_2562, _2563, _2564), vec3(_2562, _2563, _2564)));
    float _2569 = _2568 * _2562;
    float _2570 = _2568 * _2563;
    float _2571 = _2568 * _2564;
    float _2572 = dot(vec3(_771, _772, _773), vec3(cbLight._m0[_2261].xyz));
    float _4581 = isnan(0.0) ? _2572 : (isnan(_2572) ? 0.0 : max(_2572, 0.0));
    float _2575 = isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0));
    float _2576 = dot(vec3(_771, _772, _773), vec3(_2569, _2570, _2571));
    float _4592 = isnan(0.0) ? _2576 : (isnan(_2576) ? 0.0 : max(_2576, 0.0));
    float _2579 = isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0));
    float _2580 = dot(vec3(cbLight._m0[_2261].xyz), vec3(_2569, _2570, _2571));
    float _4603 = isnan(0.0) ? _2580 : (isnan(_2580) ? 0.0 : max(_2580, 0.0));
    float _2584 = _2561 * _2561;
    float _2588 = ((_2579 * _2579) * (_2584 + (-1.0))) + 1.0;
    float _2597 = (exp2(log2(1.0 - (isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2598 = 1.0 - _2561;
    float _2608 = (0.5 / (((_2497 * ((_2575 * _2598) + _2561)) + 9.9999999392252902907785028219223e-09) + (((_2497 * _2598) + _2561) * _2575))) * _2575;
    float _4614 = isnan(0.0) ? _2608 : (isnan(_2608) ? 0.0 : max(_2608, 0.0));
    float _2610 = (isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0))) * (_2584 / ((_2588 * _2588) * 3.141590118408203125));
    float _2620 = (((_2597 * cbLight._m0[_2549].x) * _2610) * _2244) + ((((cbLight._m0[_2468].x * _2210) * _2521) * _2535) * _2257);
    float _2621 = (((_2597 * cbLight._m0[_2549].y) * _2610) * _2244) + ((((cbLight._m0[_2468].y * _2212) * _2521) * _2535) * _2257);
    float _2622 = (((_2597 * cbLight._m0[_2549].z) * _2610) * _2244) + ((((cbLight._m0[_2468].z * _2214) * _2521) * _2535) * _2257);
    float _2678;
    float _2680;
    float _2682;
    if (_2297)
    {
        _2678 = _2620;
        _2680 = _2621;
        _2682 = _2622;
    }
    else
    {
        uint _2684 = _2221 + 2u;
        uint _2688 = _2221 + 10u;
        float _2702 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2684].w)) * _774) * 0.949999988079071044921875);
        float _2703 = _2702 * _2702;
        float _2704 = cbLight._m0[_2684].x + _850;
        float _2705 = cbLight._m0[_2684].y + _851;
        float _2706 = cbLight._m0[_2684].z + _852;
        float _2710 = inversesqrt(dot(vec3(_2704, _2705, _2706), vec3(_2704, _2705, _2706)));
        float _2711 = _2710 * _2704;
        float _2712 = _2710 * _2705;
        float _2713 = _2710 * _2706;
        float _2714 = dot(vec3(_771, _772, _773), vec3(cbLight._m0[_2684].xyz));
        float _4625 = isnan(0.0) ? _2714 : (isnan(_2714) ? 0.0 : max(_2714, 0.0));
        float _2717 = isnan(1.0) ? _4625 : (isnan(_4625) ? 1.0 : min(_4625, 1.0));
        float _2718 = dot(vec3(_771, _772, _773), vec3(_2711, _2712, _2713));
        float _4636 = isnan(0.0) ? _2718 : (isnan(_2718) ? 0.0 : max(_2718, 0.0));
        float _2721 = isnan(1.0) ? _4636 : (isnan(_4636) ? 1.0 : min(_4636, 1.0));
        float _2722 = dot(vec3(cbLight._m0[_2684].xyz), vec3(_2711, _2712, _2713));
        float _4647 = isnan(0.0) ? _2722 : (isnan(_2722) ? 0.0 : max(_2722, 0.0));
        float _2726 = _2703 * _2703;
        float _2730 = ((_2721 * _2721) * (_2726 + (-1.0))) + 1.0;
        float _2739 = (exp2(log2(1.0 - (isnan(1.0) ? _4647 : (isnan(_4647) ? 1.0 : min(_4647, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2740 = 1.0 - _2703;
        float _2750 = (0.5 / (((_2497 * ((_2717 * _2740) + _2703)) + 9.9999999392252902907785028219223e-09) + (((_2497 * _2740) + _2703) * _2717))) * _2717;
        float _4658 = isnan(0.0) ? _2750 : (isnan(_2750) ? 0.0 : max(_2750, 0.0));
        float _2752 = (isnan(1.0) ? _4658 : (isnan(_4658) ? 1.0 : min(_4658, 1.0))) * (_2726 / ((_2730 * _2730) * 3.141590118408203125));
        float _2753 = isnan(1.0) ? _2236 : (isnan(_2236) ? 1.0 : min(_2236, 1.0));
        _2678 = (((_2739 * cbLight._m0[_2688].x) * _2752) * _2753) + _2620;
        _2680 = (((_2739 * cbLight._m0[_2688].y) * _2752) * _2753) + _2621;
        _2682 = (((_2739 * cbLight._m0[_2688].z) * _2752) * _2753) + _2622;
    }
    float _2784;
    float _2786;
    float _2788;
    if (_2406)
    {
        _2784 = _2678;
        _2786 = _2680;
        _2788 = _2682;
    }
    else
    {
        uint _2795 = _2221 + 3u;
        uint _2799 = _2221 + 11u;
        float _2813 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2795].w)) * _774) * 0.949999988079071044921875);
        float _2814 = _2813 * _2813;
        float _2815 = cbLight._m0[_2795].x + _850;
        float _2816 = cbLight._m0[_2795].y + _851;
        float _2817 = cbLight._m0[_2795].z + _852;
        float _2821 = inversesqrt(dot(vec3(_2815, _2816, _2817), vec3(_2815, _2816, _2817)));
        float _2822 = _2821 * _2815;
        float _2823 = _2821 * _2816;
        float _2824 = _2821 * _2817;
        float _2825 = dot(vec3(_771, _772, _773), vec3(cbLight._m0[_2795].xyz));
        float _4674 = isnan(0.0) ? _2825 : (isnan(_2825) ? 0.0 : max(_2825, 0.0));
        float _2828 = isnan(1.0) ? _4674 : (isnan(_4674) ? 1.0 : min(_4674, 1.0));
        float _2829 = dot(vec3(_771, _772, _773), vec3(_2822, _2823, _2824));
        float _4685 = isnan(0.0) ? _2829 : (isnan(_2829) ? 0.0 : max(_2829, 0.0));
        float _2832 = isnan(1.0) ? _4685 : (isnan(_4685) ? 1.0 : min(_4685, 1.0));
        float _2833 = dot(vec3(cbLight._m0[_2795].xyz), vec3(_2822, _2823, _2824));
        float _4696 = isnan(0.0) ? _2833 : (isnan(_2833) ? 0.0 : max(_2833, 0.0));
        float _2837 = _2814 * _2814;
        float _2841 = ((_2832 * _2832) * (_2837 + (-1.0))) + 1.0;
        float _2850 = (exp2(log2(1.0 - (isnan(1.0) ? _4696 : (isnan(_4696) ? 1.0 : min(_4696, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2851 = 1.0 - _2814;
        float _2861 = (0.5 / (((_2497 * ((_2828 * _2851) + _2814)) + 9.9999999392252902907785028219223e-09) + (((_2497 * _2851) + _2814) * _2828))) * _2828;
        float _4707 = isnan(0.0) ? _2861 : (isnan(_2861) ? 0.0 : max(_2861, 0.0));
        float _2863 = (isnan(1.0) ? _4707 : (isnan(_4707) ? 1.0 : min(_4707, 1.0))) * (_2837 / ((_2841 * _2841) * 3.141590118408203125));
        float _2864 = isnan(1.0) ? _2237 : (isnan(_2237) ? 1.0 : min(_2237, 1.0));
        _2784 = (((_2850 * cbLight._m0[_2799].x) * _2863) * _2864) + _2678;
        _2786 = (((_2850 * cbLight._m0[_2799].y) * _2863) * _2864) + _2680;
        _2788 = (((_2850 * cbLight._m0[_2799].z) * _2863) * _2864) + _2682;
    }
    float _2929;
    float _2931;
    float _2933;
    float _2935;
    float _2937;
    float _2939;
    if (_2219.y == 0u)
    {
        uvec4 _2885 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2886 = _2885.x;
        uint _2897 = uint((float(_2885.y) * floor(float(uint(cbSceneParam._m0[85u].y * _859) / _2886))) + floor(float(uint(cbSceneParam._m0[85u].x * _858) / _2886)));
        float _2907 = (log2(_1997 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2908 = isnan(0.0) ? _2907 : (isnan(_2907) ? 0.0 : max(_2907, 0.0));
        uint _2911 = uint(isnan(14.0) ? _2908 : (isnan(_2908) ? 14.0 : min(_2908, 14.0)));
        uvec4 _2916 = texelFetch(g_lightClusterGridBuffer, int(((_2911 << 2u) + (_2897 << 6u)) >> 2u));
        uint _2917 = _2916.x;
        uint _2918 = _2885.z;
        float _2996;
        float _2998;
        float _3000;
        float _3002;
        float _3004;
        float _3006;
        if (((((1u << ((_2918 >> 4u) & 15u)) + 4294967295u) & _2917) == 0u) || ((_2918 & 240u) == 0u))
        {
            _2996 = 0.0;
            _2998 = 0.0;
            _3000 = 0.0;
            _3002 = 0.0;
            _3004 = 0.0;
            _3006 = 0.0;
        }
        else
        {
            float _2997;
            float _2999;
            float _3001;
            float _3003;
            float _3005;
            float _3007;
            float _3140 = 0.0;
            float _3141 = 0.0;
            float _3142 = 0.0;
            float _3143 = 0.0;
            float _3144 = 0.0;
            float _3145 = 0.0;
            uint _3146 = 0u;
            uint _3155;
            bool _3156;
            for (;;)
            {
                _3155 = texelFetch(g_lightClassification, int((((_2911 << 5u) + (_2897 << 9u)) + (_3146 << 2u)) >> 2u)).x;
                _3156 = _3155 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_3156)
                {
                    frontier_phi_68_pred = _3145;
                    frontier_phi_68_pred_1 = _3144;
                    frontier_phi_68_pred_2 = _3143;
                    frontier_phi_68_pred_3 = _3141;
                    frontier_phi_68_pred_4 = _3140;
                    frontier_phi_68_pred_5 = _3142;
                }
                else
                {
                    float _3264;
                    float _3265;
                    float _3266;
                    float _3267;
                    float _3268;
                    float _3269;
                    uint _3270;
                    _3264 = _3140;
                    _3265 = _3141;
                    _3266 = _3142;
                    _3267 = _3143;
                    _3268 = _3144;
                    _3269 = _3145;
                    _3270 = _3155;
                    float _3196;
                    float _3197;
                    float _3198;
                    float _3199;
                    float _3200;
                    float _3201;
                    for (;;)
                    {
                        uint _3274 = uint(findLSB(_3270)) + (_3146 << 5u);
                        uint _3271 = (_3270 + 4294967295u) & _3270;
                        uint _3276 = _3274 * 48u;
                        vec4 _3290 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3276)).x, texelFetch(g_PointLightRenderingBuffer, int(_3276 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3276 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3276 + 3u)).x));
                        uint _3296 = (_3274 * 48u) + 4u;
                        vec4 _3309 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3296)).x, texelFetch(g_PointLightRenderingBuffer, int(_3296 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3296 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3296 + 3u)).x));
                        uint _3315 = (_3274 * 48u) + 8u;
                        vec3 _3326 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3315)).x, texelFetch(g_PointLightRenderingBuffer, int(_3315 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3315 + 2u)).x));
                        float _3330 = _3290.x - _1995;
                        float _3331 = _3290.y - _1996;
                        float _3332 = _3290.z - _1997;
                        float _3333 = dot(vec3(_3330, _3331, _3332), vec3(_3330, _3331, _3332));
                        float _3336 = inversesqrt(_3333);
                        float _3337 = _3336 * _3330;
                        float _3338 = _3336 * _3331;
                        float _3339 = _3336 * _3332;
                        float _3340 = dot(vec3(_877, _880, _883), vec3(_3337, _3338, _3339));
                        float _3345 = 1.0 - (_3333 * _3290.w);
                        float _4733 = isnan(0.0) ? _3345 : (isnan(_3345) ? 0.0 : max(_3345, 0.0));
                        float _3346 = isnan(1.0) ? _4733 : (isnan(_4733) ? 1.0 : min(_4733, 1.0));
                        float _3347 = sqrt(_3333) * _3309.w;
                        float _3350 = 1.39999997615814208984375 / (_3347 + 1.39999997615814208984375);
                        float _3351 = _3350 * _3350;
                        float _3354 = ((1.0 - _3351) * _3340) + _3351;
                        float _3357 = _3347 * _3347;
                        float _3361 = ((isnan(0.0) ? _3354 : (isnan(_3354) ? 0.0 : max(_3354, 0.0))) * _3346) / ((_3357 * 0.699999988079071044921875) + 1.0);
                        float _3365 = (-0.0) - _1995;
                        float _3366 = (-0.0) - _1996;
                        float _3367 = (-0.0) - _1997;
                        float _3371 = inversesqrt(dot(vec3(_3365, _3366, _3367), vec3(_3365, _3366, _3367)));
                        float _3372 = _3371 * _3365;
                        float _3373 = _3371 * _3366;
                        float _3374 = _3371 * _3367;
                        float _3381 = exp2(log2(1.0 / ((_3357 * 3.5) + 5.0)) * 0.25);
                        float _3382 = 1.0 - _937;
                        float _3389 = sqrt(1.0 - ((1.0 - (_3382 * _3382)) * (1.0 - (_3381 * _3381))));
                        float _3390 = _3389 * _3389;
                        float _3391 = _3390 * _3390;
                        float _3392 = _3372 + _3337;
                        float _3393 = _3373 + _3338;
                        float _3394 = _3374 + _3339;
                        float _3398 = inversesqrt(dot(vec3(_3392, _3393, _3394), vec3(_3392, _3393, _3394)));
                        float _3402 = dot(vec3(_877, _880, _883), vec3(_3372, _3373, _3374));
                        float _4749 = isnan(0.0) ? _3402 : (isnan(_3402) ? 0.0 : max(_3402, 0.0));
                        float _3405 = isnan(1.0) ? _4749 : (isnan(_4749) ? 1.0 : min(_4749, 1.0));
                        float _3406 = dot(vec3(_877, _880, _883), vec3(_3398 * _3392, _3398 * _3393, _3398 * _3394));
                        float _4760 = isnan(0.0) ? _3406 : (isnan(_3406) ? 0.0 : max(_3406, 0.0));
                        float _3409 = isnan(1.0) ? _4760 : (isnan(_4760) ? 1.0 : min(_4760, 1.0));
                        float _3413 = ((_3409 * _3409) * (_3391 + (-1.0))) + 1.0;
                        float _3414 = _3350 * _3390;
                        float _3415 = _3414 * _3414;
                        float _3418 = ((1.0 - _3415) * _3340) + _3415;
                        float _4771 = isnan(0.0) ? _3418 : (isnan(_3418) ? 0.0 : max(_3418, 0.0));
                        float _3419 = isnan(1.0) ? _4771 : (isnan(_4771) ? 1.0 : min(_4771, 1.0));
                        float _3420 = 1.0 - _3390;
                        float _3430 = (0.5 / (((_3419 * ((_3405 * _3420) + _3390)) + 9.9999999392252902907785028219223e-09) + (((_3419 * _3420) + _3390) * _3405))) * _3419;
                        float _4782 = isnan(0.0) ? _3430 : (isnan(_3430) ? 0.0 : max(_3430, 0.0));
                        float _3441 = (((_3391 * 3.1415927410125732421875) * (isnan(1.0) ? _4782 : (isnan(_4782) ? 1.0 : min(_4782, 1.0)))) / ((_3413 * _3413) * ((_3357 * 2.1991131305694580078125) + 3.141590118408203125))) * _3346;
                        _3199 = (_3361 * _3309.x) + _3267;
                        _3200 = (_3361 * _3309.y) + _3268;
                        _3201 = (_3361 * _3309.z) + _3269;
                        _3196 = (_3441 * _3326.x) + _3264;
                        _3197 = (_3441 * _3326.y) + _3265;
                        _3198 = (_3441 * _3326.z) + _3266;
                        if (_3271 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3264 = _3196;
                            _3265 = _3197;
                            _3266 = _3198;
                            _3267 = _3199;
                            _3268 = _3200;
                            _3269 = _3201;
                            _3270 = _3271;
                        }
                    }
                    frontier_phi_68_pred = _3201;
                    frontier_phi_68_pred_1 = _3200;
                    frontier_phi_68_pred_2 = _3199;
                    frontier_phi_68_pred_3 = _3197;
                    frontier_phi_68_pred_4 = _3196;
                    frontier_phi_68_pred_5 = _3198;
                }
                _3007 = frontier_phi_68_pred;
                _3005 = frontier_phi_68_pred_1;
                _3003 = frontier_phi_68_pred_2;
                _2999 = frontier_phi_68_pred_3;
                _2997 = frontier_phi_68_pred_4;
                _3001 = frontier_phi_68_pred_5;
                uint _3147 = _3146 + 1u;
                if (_3147 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3140 = _2997;
                    _3141 = _2999;
                    _3142 = _3001;
                    _3143 = _3003;
                    _3144 = _3005;
                    _3145 = _3007;
                    _3146 = _3147;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2996 = _2997;
            _2998 = _2999;
            _3000 = _3001;
            _3002 = _3003;
            _3004 = _3005;
            _3006 = _3007;
        }
        uvec4 _3010 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3011 = _3010.z;
        uint _3013 = (_3011 >> 8u) & 15u;
        float _3108;
        float _3110;
        float _3112;
        float _3114;
        float _3116;
        float _3118;
        if (((4294967295u << _3013) & _2917) == 0u)
        {
            _3108 = _2996;
            _3110 = _2998;
            _3112 = _3000;
            _3114 = _3002;
            _3116 = _3004;
            _3118 = _3006;
        }
        else
        {
            float _3133 = inversesqrt(dot(vec3(_1995, _1996, _1997), vec3(_1995, _1996, _1997)));
            float _3134 = _3133 * _1995;
            float _3135 = _3133 * _1996;
            float _3136 = _3133 * _1997;
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            float frontier_phi_62_63_ladder_3;
            float frontier_phi_62_63_ladder_4;
            float frontier_phi_62_63_ladder_5;
            if (_3013 < ((_3011 >> 12u) & 15u))
            {
                float _3109;
                float _3111;
                float _3113;
                float _3115;
                float _3117;
                float _3119;
                float _3247 = _2996;
                float _3248 = _2998;
                float _3249 = _3000;
                float _3250 = _3002;
                float _3251 = _3004;
                float _3252 = _3006;
                uint _3253 = _3013;
                uint _3262;
                bool _3263;
                for (;;)
                {
                    _3262 = texelFetch(g_lightClassification, int((((_2911 << 5u) + (_2897 << 9u)) + (_3253 << 2u)) >> 2u)).x;
                    _3263 = _3262 == 0u;
                    float frontier_phi_74_pred;
                    float frontier_phi_74_pred_1;
                    float frontier_phi_74_pred_2;
                    float frontier_phi_74_pred_3;
                    float frontier_phi_74_pred_4;
                    float frontier_phi_74_pred_5;
                    if (_3263)
                    {
                        frontier_phi_74_pred = _3249;
                        frontier_phi_74_pred_1 = _3248;
                        frontier_phi_74_pred_2 = _3247;
                        frontier_phi_74_pred_3 = _3252;
                        frontier_phi_74_pred_4 = _3251;
                        frontier_phi_74_pred_5 = _3250;
                    }
                    else
                    {
                        float _3446;
                        float _3447;
                        float _3448;
                        float _3449;
                        float _3450;
                        float _3451;
                        float _3741;
                        float _3742;
                        float _3743;
                        float _3744;
                        float _3745;
                        float _3746;
                        float _3459 = _3247;
                        float _3460 = _3248;
                        float _3461 = _3249;
                        float _3462 = _3250;
                        float _3463 = _3251;
                        float _3464 = _3252;
                        uint _3465 = _3262;
                        uint _3466;
                        vec4 _3491;
                        float _3492;
                        vec4 _3507;
                        vec3 _3519;
                        vec4 _3534;
                        vec4 _3550;
                        float _3597;
                        bool _3598;
                        for (;;)
                        {
                            uint _3476 = ((_3253 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3465));
                            _3466 = (_3465 + 4294967295u) & _3465;
                            uint _3478 = _3476 * 40u;
                            _3491 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3478)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3478 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3478 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3478 + 3u)).x));
                            _3492 = _3491.w;
                            uint _3494 = (_3476 * 40u) + 4u;
                            _3507 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3494)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3494 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3494 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3494 + 3u)).x));
                            uint _3509 = (_3476 * 40u) + 8u;
                            _3519 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3509)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3509 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3509 + 2u)).x));
                            uint _3521 = (_3476 * 40u) + 16u;
                            _3534 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3521)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3521 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3521 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3521 + 3u)).x));
                            uint _3537 = (_3476 * 40u) + 20u;
                            _3550 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3537)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3537 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3537 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3537 + 3u)).x));
                            uint _3553 = (_3476 * 40u) + 24u;
                            vec4 _3566 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3553)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3553 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3553 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3553 + 3u)).x));
                            uint _3572 = (_3476 * 40u) + 28u;
                            vec4 _3585 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3572)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3572 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3572 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3572 + 3u)).x));
                            _3597 = fma(_1997, _3585.z, fma(_1996, _3585.y, _3585.x * _1995)) + _3585.w;
                            _3598 = !((fma(_1997, _3566.z, fma(_1996, _3566.y, _3566.x * _1995)) + _3566.w) <= 0.0);
                            float frontier_phi_80_pred;
                            float frontier_phi_80_pred_1;
                            float frontier_phi_80_pred_2;
                            float frontier_phi_80_pred_3;
                            float frontier_phi_80_pred_4;
                            float frontier_phi_80_pred_5;
                            if (_3598)
                            {
                                float _3625 = _3491.x - _1995;
                                float _3626 = _3491.y - _1996;
                                float _3627 = _3491.z - _1997;
                                float _3628 = dot(vec3(_3625, _3626, _3627), vec3(_3625, _3626, _3627));
                                float _3631 = inversesqrt(_3628);
                                float _3632 = _3631 * _3625;
                                float _3633 = _3631 * _3626;
                                float _3634 = _3631 * _3627;
                                float _3638 = 1.0 - (_3628 / (_3492 * _3492));
                                float _4793 = isnan(0.0) ? _3638 : (isnan(_3638) ? 0.0 : max(_3638, 0.0));
                                float _3639 = isnan(1.0) ? _4793 : (isnan(_4793) ? 1.0 : min(_4793, 1.0));
                                float _3643 = sqrt(_3628) * _3507.w;
                                float _3645 = 1.39999997615814208984375 / (_3643 + 1.39999997615814208984375);
                                float _3646 = _3645 * _3645;
                                float _3649 = ((1.0 - _3646) * dot(vec3(_3632, _3633, _3634), vec3(_877, _880, _883))) + _3646;
                                float _3652 = _3643 * _3643;
                                float _3656 = (fma(_1997, _3534.z, fma(_1996, _3534.y, _3534.x * _1995)) + _3534.w) / _3597;
                                float _3657 = (fma(_1997, _3550.z, fma(_1996, _3550.y, _3550.x * _1995)) + _3550.w) / _3597;
                                float _3661 = 1.0 - dot(vec2(_3656, _3657), vec2(_3656, _3657));
                                float _4809 = isnan(0.0) ? _3661 : (isnan(_3661) ? 0.0 : max(_3661, 0.0));
                                float _3662 = isnan(1.0) ? _4809 : (isnan(_4809) ? 1.0 : min(_4809, 1.0));
                                float _3663 = _3662 * (((isnan(0.0) ? _3649 : (isnan(_3649) ? 0.0 : max(_3649, 0.0))) * _3639) / ((_3652 * 0.699999988079071044921875) + 1.0));
                                float _3675 = exp2(log2(1.0 / ((_3652 * 3.5) + 5.0)) * 0.25);
                                float _3676 = 1.0 - _937;
                                float _3683 = sqrt(1.0 - ((1.0 - (_3676 * _3676)) * (1.0 - (_3675 * _3675))));
                                float _3684 = _3683 * _3683;
                                float _3685 = _3684 * _3684;
                                float _3686 = _3632 - _3134;
                                float _3687 = _3633 - _3135;
                                float _3688 = _3634 - _3136;
                                float _3692 = inversesqrt(dot(vec3(_3686, _3687, _3688), vec3(_3686, _3687, _3688)));
                                float _3696 = dot(vec3(_877, _880, _883), vec3((-0.0) - _3134, (-0.0) - _3135, (-0.0) - _3136));
                                float _4820 = isnan(0.0) ? _3696 : (isnan(_3696) ? 0.0 : max(_3696, 0.0));
                                float _3699 = isnan(1.0) ? _4820 : (isnan(_4820) ? 1.0 : min(_4820, 1.0));
                                float _3700 = dot(vec3(_877, _880, _883), vec3(_3692 * _3686, _3692 * _3687, _3692 * _3688));
                                float _4831 = isnan(0.0) ? _3700 : (isnan(_3700) ? 0.0 : max(_3700, 0.0));
                                float _3703 = isnan(1.0) ? _4831 : (isnan(_4831) ? 1.0 : min(_4831, 1.0));
                                float _3707 = ((_3703 * _3703) * (_3685 + (-1.0))) + 1.0;
                                float _3708 = _3645 * _3684;
                                float _3709 = _3708 * _3708;
                                float _3715 = ((1.0 - _3709) * dot(vec3(_877, _880, _883), vec3(_3632, _3633, _3634))) + _3709;
                                float _4842 = isnan(0.0) ? _3715 : (isnan(_3715) ? 0.0 : max(_3715, 0.0));
                                float _3716 = isnan(1.0) ? _4842 : (isnan(_4842) ? 1.0 : min(_4842, 1.0));
                                float _3717 = 1.0 - _3684;
                                float _3727 = (0.5 / (((_3716 * ((_3699 * _3717) + _3684)) + 9.9999999392252902907785028219223e-09) + (((_3716 * _3717) + _3684) * _3699))) * _3716;
                                float _4853 = isnan(0.0) ? _3727 : (isnan(_3727) ? 0.0 : max(_3727, 0.0));
                                float _3737 = (_3662 * _3639) * (((_3685 * 3.1415927410125732421875) * (isnan(1.0) ? _4853 : (isnan(_4853) ? 1.0 : min(_4853, 1.0)))) / ((_3707 * _3707) * ((_3652 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_80_pred = _3737 * _3519.z;
                                frontier_phi_80_pred_1 = _3737 * _3519.y;
                                frontier_phi_80_pred_2 = _3737 * _3519.x;
                                frontier_phi_80_pred_3 = _3663 * _3507.z;
                                frontier_phi_80_pred_4 = _3663 * _3507.y;
                                frontier_phi_80_pred_5 = _3663 * _3507.x;
                            }
                            else
                            {
                                frontier_phi_80_pred = 0.0;
                                frontier_phi_80_pred_1 = 0.0;
                                frontier_phi_80_pred_2 = 0.0;
                                frontier_phi_80_pred_3 = 0.0;
                                frontier_phi_80_pred_4 = 0.0;
                                frontier_phi_80_pred_5 = 0.0;
                            }
                            _3743 = frontier_phi_80_pred;
                            _3742 = frontier_phi_80_pred_1;
                            _3741 = frontier_phi_80_pred_2;
                            _3746 = frontier_phi_80_pred_3;
                            _3745 = frontier_phi_80_pred_4;
                            _3744 = frontier_phi_80_pred_5;
                            _3449 = _3744 + _3462;
                            _3450 = _3745 + _3463;
                            _3451 = _3746 + _3464;
                            _3446 = _3741 + _3459;
                            _3447 = _3742 + _3460;
                            _3448 = _3743 + _3461;
                            if (_3466 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3459 = _3446;
                                _3460 = _3447;
                                _3461 = _3448;
                                _3462 = _3449;
                                _3463 = _3450;
                                _3464 = _3451;
                                _3465 = _3466;
                                continue;
                            }
                        }
                        frontier_phi_74_pred = _3448;
                        frontier_phi_74_pred_1 = _3447;
                        frontier_phi_74_pred_2 = _3446;
                        frontier_phi_74_pred_3 = _3451;
                        frontier_phi_74_pred_4 = _3450;
                        frontier_phi_74_pred_5 = _3449;
                    }
                    _3113 = frontier_phi_74_pred;
                    _3111 = frontier_phi_74_pred_1;
                    _3109 = frontier_phi_74_pred_2;
                    _3119 = frontier_phi_74_pred_3;
                    _3117 = frontier_phi_74_pred_4;
                    _3115 = frontier_phi_74_pred_5;
                    uint _3254 = _3253 + 1u;
                    if (_3254 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3247 = _3109;
                        _3248 = _3111;
                        _3249 = _3113;
                        _3250 = _3115;
                        _3251 = _3117;
                        _3252 = _3119;
                        _3253 = _3254;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _3117;
                frontier_phi_62_63_ladder_1 = _3115;
                frontier_phi_62_63_ladder_2 = _3113;
                frontier_phi_62_63_ladder_3 = _3119;
                frontier_phi_62_63_ladder_4 = _3111;
                frontier_phi_62_63_ladder_5 = _3109;
            }
            else
            {
                frontier_phi_62_63_ladder = _3004;
                frontier_phi_62_63_ladder_1 = _3002;
                frontier_phi_62_63_ladder_2 = _3000;
                frontier_phi_62_63_ladder_3 = _3006;
                frontier_phi_62_63_ladder_4 = _2998;
                frontier_phi_62_63_ladder_5 = _2996;
            }
            _3108 = frontier_phi_62_63_ladder_5;
            _3110 = frontier_phi_62_63_ladder_4;
            _3112 = frontier_phi_62_63_ladder_2;
            _3114 = frontier_phi_62_63_ladder_1;
            _3116 = frontier_phi_62_63_ladder;
            _3118 = frontier_phi_62_63_ladder_3;
        }
        float _3123 = isnan(1.0) ? _921 : (isnan(_921) ? 1.0 : min(_921, 1.0));
        _2929 = (_3123 * _3114) + _2461;
        _2931 = (_3123 * _3116) + _2463;
        _2933 = (_3123 * _3118) + _2465;
        _2935 = ((_3108 * 0.039999999105930328369140625) * _3123) + _2784;
        _2937 = ((_3110 * 0.039999999105930328369140625) * _3123) + _2786;
        _2939 = ((_3112 * 0.039999999105930328369140625) * _3123) + _2788;
    }
    else
    {
        _2929 = _2461;
        _2931 = _2463;
        _2933 = _2465;
        _2935 = _2784;
        _2937 = _2786;
        _2939 = _2788;
    }
    float _4869 = isnan(0.0) ? _907 : (isnan(_907) ? 0.0 : max(_907, 0.0));
    float _4880 = isnan(0.0) ? _908 : (isnan(_908) ? 0.0 : max(_908, 0.0));
    float _4891 = isnan(0.0) ? _909 : (isnan(_909) ? 0.0 : max(_909, 0.0));
    uint _2959 = _896 + 6u;
    float _2967 = _858 / cbSceneParam._m0[86u].x;
    float _2968 = _859 / cbSceneParam._m0[86u].y;
    vec4 _2982 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2967, _2968, (log2((isnan(cbSceneParam._m0[77u].w) ? _793 : (isnan(_793) ? cbSceneParam._m0[77u].w : min(_793, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2984 = _2982.x;
    float _2985 = _2982.y;
    float _2986 = _2982.z;
    float _2987 = _2982.w;
    float _3058;
    float _3060;
    float _3062;
    float _3064;
    if (_793 > cbSceneParam._m0[78u].w)
    {
        float _3021 = isnan(_793) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _793 : min(cbSceneParam._m0[80u].w, _793));
        float _3022 = _3021 / _793;
        float _3033 = _3022 * _843;
        float _3034 = _844 * _3022;
        float _3035 = (-0.0) - _3034;
        float _3036 = _3022 * _845;
        float _3038 = (cbSceneParam._m0[77u].w * _3035) / _3021;
        float _3039 = _3038 + cbSceneParam._m0[79u].w;
        float _3040 = cbSceneParam._m0[79u].w - _3034;
        float _3046 = sqrt(((_3033 * _3033) + (_3034 * _3034)) + (_3036 * _3036));
        float _3049 = (1.0 - (cbSceneParam._m0[77u].w / _3021)) * _3046;
        float _3054 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3056 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3209;
        if (abs((_3035 - _3038) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3209 = ((((_3039 > 0.0) ? exp2(_3054 * _3039) : (2.0 - exp2(_3056 * _3039))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3049;
        }
        else
        {
            float _3169 = 1.0 / cbSceneParam._m0[80u].x;
            float _3170 = isnan(_3040) ? _3039 : (isnan(_3039) ? _3040 : max(_3039, _3040));
            float _3171 = isnan(_3040) ? _3039 : (isnan(_3039) ? _3040 : min(_3039, _3040));
            float _3180 = isnan(0.0) ? _3170 : (isnan(_3170) ? 0.0 : min(_3170, 0.0));
            float _3181 = isnan(0.0) ? _3171 : (isnan(_3171) ? 0.0 : min(_3171, 0.0));
            _3209 = ((abs(_3046 / _3035) * cbSceneParam._m0[80u].y) * ((((_3180 - _3181) * 2.0) - ((exp2(_3054 * (isnan(0.0) ? _3170 : (isnan(_3170) ? 0.0 : max(_3170, 0.0)))) - exp2(_3054 * (isnan(0.0) ? _3171 : (isnan(_3171) ? 0.0 : max(_3171, 0.0))))) * _3169)) - ((exp2(_3056 * _3180) - exp2(_3056 * _3181)) * _3169))) + (_3049 * cbSceneParam._m0[80u].z);
        }
        vec4 _3211 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2967, _2968, 1.0), 0.0);
        float _3220 = exp2((_3209 * (-1.44269502162933349609375)) * (1.0 - _3211.w));
        float _3221 = log2(_3220);
        float _3237 = log2(_2987);
        _3058 = (exp2(_3237 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3221 * cbSceneParam._m0[78u].x)) * _3211.x) / cbSceneParam._m0[78u].x)) + _2984;
        _3060 = (exp2(_3237 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3221 * cbSceneParam._m0[78u].y)) * _3211.y) / cbSceneParam._m0[78u].y)) + _2985;
        _3062 = (exp2(_3237 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3221 * cbSceneParam._m0[78u].z)) * _3211.z) / cbSceneParam._m0[78u].z)) + _2986;
        _3064 = _3220 * _2987;
    }
    else
    {
        _3058 = _2984;
        _3060 = _2985;
        _3062 = _2986;
        _3064 = _2987;
    }
    float _3076 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3077 = _3076 == 3.0;
    float _3078 = log2(_3064);
    float _3085 = exp2(_3078 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4869 : (isnan(_4869) ? 1.0 : min(_4869, 1.0))) * (_2929 + ((isnan(0.0) ? _1648 : (isnan(_1648) ? 0.0 : max(_1648, 0.0))) * _921))) + ((_2935 + ((isnan(0.0) ? _1942 : (isnan(_1942) ? 0.0 : max(_1942, 0.0))) * _1727)) * cbPerFrame._m0[3u].x));
    float _3086 = exp2(_3078 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4880 : (isnan(_4880) ? 1.0 : min(_4880, 1.0))) * (_2931 + ((isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0))) * _921))) + ((_2937 + ((isnan(0.0) ? _1945 : (isnan(_1945) ? 0.0 : max(_1945, 0.0))) * _1727)) * cbPerFrame._m0[3u].x));
    float _3087 = exp2(_3078 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4891 : (isnan(_4891) ? 1.0 : min(_4891, 1.0))) * (_2933 + ((isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0))) * _921))) + ((_2939 + ((isnan(0.0) ? _1948 : (isnan(_1948) ? 0.0 : max(_1948, 0.0))) * _1727)) * cbPerFrame._m0[3u].x));
    float _3096 = (_3076 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3096 * (_3077 ? _3085 : (_3085 + (cbSceneParam._m0[72u].w * _3058)));
    SV_Target.y = _3096 * (_3077 ? _3086 : (_3086 + (cbSceneParam._m0[72u].w * _3060)));
    SV_Target.z = _3096 * (_3077 ? _3087 : (_3087 + (cbSceneParam._m0[72u].w * _3062)));
    SV_Target.w = cbInstanceData._m0[_2959].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2959].w;
}


