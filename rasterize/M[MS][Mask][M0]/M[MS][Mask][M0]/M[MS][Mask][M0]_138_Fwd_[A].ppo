#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1597;
float _3953;
float _3954;
float _3955;
float _3956;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _246 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _247 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _248 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _254 = inversesqrt(dot(vec3(_246, _247, _248), vec3(_246, _247, _248)));
    float _261 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _268 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _280 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _282 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _283 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3965 = isnan(0.0) ? _280 : (isnan(_280) ? 0.0 : max(_280, 0.0));
    float _3976 = isnan(0.0) ? _282 : (isnan(_282) ? 0.0 : max(_282, 0.0));
    float _3987 = isnan(0.0) ? _283 : (isnan(_283) ? 0.0 : max(_283, 0.0));
    uint _293 = uint(roundEven(NORMAL.w)) * 13u;
    uint _298 = _293 + 1u;
    uint _302 = _293 + 2u;
    float _311 = sqrt(((cbInstanceData._m0[_298].x * cbInstanceData._m0[_298].x) + (cbInstanceData._m0[_293].x * cbInstanceData._m0[_293].x)) + (cbInstanceData._m0[_302].x * cbInstanceData._m0[_302].x));
    float _312 = _311 * TEXCOORD.z;
    float _313 = _311 * TEXCOORD.w;
    vec4 _326 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _312) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _313) + cbTextureTilingScale._m0[13u].w));
    vec4 _350 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _355 = _350.x * cbMtdParam._m0[11u].x;
    float _356 = _350.y * cbMtdParam._m0[11u].y;
    float _357 = _350.z * cbMtdParam._m0[11u].z;
    vec4 _376 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _312) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _313) + cbTextureTilingScale._m0[5u].w));
    vec4 _395 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _433 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _435 = _433.x;
    float _447 = dot(vec4(_435, _433.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _464 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _395.x) * 2.0) - ((((_435 - _447) * cbMtdParam._m0[24u].z) + _447) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3998 = isnan(0.0) ? _464 : (isnan(_464) ? 0.0 : max(_464, 0.0));
    float _465 = isnan(1.0) ? _3998 : (isnan(_3998) ? 1.0 : min(_3998, 1.0));
    float _472 = (_465 * ((_376.x * cbMtdParam._m0[12u].x) - _355)) + _355;
    float _473 = (_465 * ((_376.y * cbMtdParam._m0[12u].y) - _356)) + _356;
    float _474 = (_465 * ((_376.z * cbMtdParam._m0[12u].z) - _357)) + _357;
    vec4 _491 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _312) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _313) + cbTextureTilingScale._m0[3u].w));
    vec4 _511 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _513 = _511.x;
    float _523 = dot(vec4(_513, _511.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _537 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _395.y) * 2.0) - ((((_513 - _523) * cbMtdParam._m0[24u].z) + _523) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4009 = isnan(0.0) ? _537 : (isnan(_537) ? 0.0 : max(_537, 0.0));
    float _538 = isnan(1.0) ? _4009 : (isnan(_4009) ? 1.0 : min(_4009, 1.0));
    float _545 = (_538 * ((_491.x * cbMtdParam._m0[13u].x) - _472)) + _472;
    float _546 = (_538 * ((_491.y * cbMtdParam._m0[13u].y) - _473)) + _473;
    float _547 = (_538 * ((_491.z * cbMtdParam._m0[13u].z) - _474)) + _474;
    vec4 _565 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _312) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _313) + cbTextureTilingScale._m0[24u].w));
    vec4 _582 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _584 = _582.x;
    float _594 = dot(vec4(_584, _582.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _606 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _395.z) * 2.0) - ((((_584 - _594) * cbMtdParam._m0[24u].z) + _594) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4020 = isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : max(_606, 0.0));
    float _607 = isnan(1.0) ? _4020 : (isnan(_4020) ? 1.0 : min(_4020, 1.0));
    float _614 = (_607 * ((_565.x * cbMtdParam._m0[14u].x) - _545)) + _545;
    float _615 = (_607 * ((_565.y * cbMtdParam._m0[14u].y) - _546)) + _546;
    float _616 = (_607 * ((_565.z * cbMtdParam._m0[14u].z) - _547)) + _547;
    float _620 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _326.x) * _614;
    float _623 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _326.y) * _615;
    float _626 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _326.z) * _616;
    float _633 = ((_614 - _620) * (isnan(1.0) ? _3965 : (isnan(_3965) ? 1.0 : min(_3965, 1.0)))) + _620;
    float _634 = ((_615 - _623) * (isnan(1.0) ? _3976 : (isnan(_3976) ? 1.0 : min(_3976, 1.0)))) + _623;
    float _635 = ((_616 - _626) * (isnan(1.0) ? _3987 : (isnan(_3987) ? 1.0 : min(_3987, 1.0)))) + _626;
    vec4 _653 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _312) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _313) + cbTextureTilingScale._m0[14u].w));
    vec4 _672 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _312) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _313) + cbTextureTilingScale._m0[20u].w));
    vec4 _695 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _312) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _313) + cbTextureTilingScale._m0[4u].w));
    vec4 _712 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _714 = _712.x;
    float _715 = _712.y;
    float _716 = _712.z;
    float _723 = ((_695.x - _714) * _465) + _714;
    float _724 = ((_695.y - _715) * _465) + _715;
    float _725 = ((_695.z - _716) * _465) + _716;
    vec4 _737 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _312) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _313) + cbTextureTilingScale._m0[2u].w));
    float _748 = ((_737.x - _723) * _538) + _723;
    float _749 = ((_737.y - _724) * _538) + _724;
    float _750 = ((_737.z - _725) * _538) + _725;
    vec4 _762 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _312) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _313) + cbTextureTilingScale._m0[23u].w));
    float _775 = ((_762.z - _750) * _607) + _750;
    float _778 = ((((_762.x - _748) * _607) + _748) * 2.0) + (-1.0);
    float _779 = ((((_762.y - _749) * _607) + _749) * 2.0) + (-1.0);
    float _780 = dot(vec2(_778, _779), vec2(_778, _779));
    float _4031 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
    float _785 = sqrt(1.0 - (isnan(1.0) ? _4031 : (isnan(_4031) ? 1.0 : min(_4031, 1.0))));
    vec4 _799 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _824 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _312) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _313) + cbTextureTilingScale._m0[11u].w));
    float _826 = _824.x;
    float _827 = 1.0 - _826;
    float _833 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _836 = ((isnan(0.0) ? _833 : (isnan(_833) ? 0.0 : min(_833, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _845 = (_836 - ((((((_826 - _827) * cbMtdParam._m0[24u].w) + _827) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _836))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4052 = isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0));
    float _846 = isnan(1.0) ? _4052 : (isnan(_4052) ? 1.0 : min(_4052, 1.0));
    float _853 = (_846 * ((_653.x * cbMtdParam._m0[18u].x) - _633)) + _633;
    float _854 = (_846 * ((_653.y * cbMtdParam._m0[18u].y) - _634)) + _634;
    float _855 = (_846 * ((_653.z * cbMtdParam._m0[18u].z) - _635)) + _635;
    vec4 _867 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _312) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _313) + cbTextureTilingScale._m0[19u].w));
    float _869 = _867.x;
    float _870 = 1.0 - _869;
    float _897 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_869 - _870) * cbMtdParam._m0[24u].y) + _870) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4063 = isnan(0.0) ? _897 : (isnan(_897) ? 0.0 : max(_897, 0.0));
    float _898 = isnan(1.0) ? _4063 : (isnan(_4063) ? 1.0 : min(_4063, 1.0));
    float _906 = ((((cbMtdParam._m0[10u].x - _853) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _898) + _853;
    float _907 = ((((cbMtdParam._m0[10u].y - _854) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _898) + _854;
    float _908 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _855)) * _898) + _855;
    float _913 = (((_672.z - _775) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _775;
    float _917 = ((_799.z - _913) * cbMtdParam._m0[19u].w) + _913;
    vec4 _931 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _312) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _313) + cbTextureTilingScale._m0[15u].w));
    float _938 = (_931.x * 2.0) + (-1.0);
    float _939 = (_931.y * 2.0) + (-1.0);
    float _940 = dot(vec2(_938, _939), vec2(_938, _939));
    float _4074 = isnan(0.0) ? _940 : (isnan(_940) ? 0.0 : max(_940, 0.0));
    float _948 = (_846 * (_931.z - _917)) + _917;
    float _951 = ((cbMtdParam._m0[23u].y - _948) * _898) + _948;
    vec4 _970 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _312) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _313) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _976 = (_970.x * 2.0) + (-1.0);
    float _977 = (_970.y * 2.0) + (-1.0);
    float _978 = dot(vec2(_976, _977), vec2(_976, _977));
    float _4085 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
    float _992 = (_778 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_672.x * 2.0) + (-1.0)))) + (((_799.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _993 = (_779 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_672.y * 2.0) + (-1.0)))) + (((_799.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _1005 = (((_938 - _992) + (cbMtdParam._m0[21u].x * _992)) * _846) + _992;
    float _1006 = (((_939 - _993) + (cbMtdParam._m0[21u].x * _993)) * _846) + _993;
    float _1007 = (_846 * (sqrt(1.0 - (isnan(1.0) ? _4074 : (isnan(_4074) ? 1.0 : min(_4074, 1.0)))) - _785)) + _785;
    float _1018 = (((_976 - _1005) + (_1005 * cbMtdParam._m0[22u].z)) * _898) + _1005;
    float _1019 = (((_977 - _1006) + (_1006 * cbMtdParam._m0[22u].z)) * _898) + _1006;
    float _1020 = ((sqrt(1.0 - (isnan(1.0) ? _4085 : (isnan(_4085) ? 1.0 : min(_4085, 1.0)))) - _1007) * _898) + _1007;
    float _1022 = cbMtdParam._m0[22u].x + _799.w;
    float _1025 = fma(_1020, _261 * NORMAL.x, fma(_1019, _268 * TANGENT.x, (_254 * _246) * _1018));
    float _1028 = fma(_1020, _261 * NORMAL.y, fma(_1019, _268 * TANGENT.y, (_254 * _247) * _1018));
    float _1031 = fma(_1020, _261 * NORMAL.z, fma(_1019, _268 * TANGENT.z, (_254 * _248) * _1018));
    float _1035 = inversesqrt(dot(vec3(_1025, _1028, _1031), vec3(_1025, _1028, _1031)));
    float _1036 = _1035 * _1025;
    float _1037 = _1035 * _1028;
    float _1038 = _1035 * _1031;
    float _4096 = isnan(0.0) ? _951 : (isnan(_951) ? 0.0 : max(_951, 0.0));
    float _1039 = isnan(1.0) ? _4096 : (isnan(_4096) ? 1.0 : min(_4096, 1.0));
    float _4107 = isnan(0.0) ? _1022 : (isnan(_1022) ? 0.0 : max(_1022, 0.0));
    float _4118 = isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0));
    float _4129 = isnan(0.0) ? _907 : (isnan(_907) ? 0.0 : max(_907, 0.0));
    float _4140 = isnan(0.0) ? _908 : (isnan(_908) ? 0.0 : max(_908, 0.0));
    float _1057 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1098 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1108 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1098);
    float _1109 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1098);
    float _1110 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1098);
    float _1114 = inversesqrt(dot(vec3(_1108, _1109, _1110), vec3(_1108, _1109, _1110)));
    float _1115 = _1108 * _1114;
    float _1116 = _1109 * _1114;
    float _1117 = _1110 * _1114;
    vec4 _1122 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1124 = _1122.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1278 = sqrt(((_1108 * _1108) + (_1109 * _1109)) + (_1110 * _1110));
        float _1284 = (cbMatDynParam._m0[5u].x * _1278) + cbMatDynParam._m0[5u].y;
        float _4151 = isnan(0.0) ? _1284 : (isnan(_1284) ? 0.0 : max(_1284, 0.0));
        float _1285 = isnan(1.0) ? _4151 : (isnan(_4151) ? 1.0 : min(_4151, 1.0));
        float _1289 = (cbMatDynParam._m0[5u].z * _1278) + cbMatDynParam._m0[5u].w;
        float _4162 = isnan(0.0) ? _1289 : (isnan(_1289) ? 0.0 : max(_1289, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4162 : (isnan(_4162) ? 1.0 : min(_4162, 1.0))) - _1285)) + _1285) < ((_1124 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1135 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1136 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1154 = fma(_1038, cbSceneParam._m0[5u].z, fma(_1037, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1036));
    float _1157 = fma(_1038, cbSceneParam._m0[6u].z, fma(_1037, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1036));
    float _1160 = fma(_1038, cbSceneParam._m0[7u].z, fma(_1037, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1036));
    uint _1173 = _293 + 9u;
    uint _1174 = _1173 + uint(cbMatDynParam._m0[0u].w);
    float _1180 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4118 : (isnan(_4118) ? 1.0 : min(_4118, 1.0)))) * cbInstanceData._m0[_1174].x;
    float _1181 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4129 : (isnan(_4129) ? 1.0 : min(_4129, 1.0)))) * cbInstanceData._m0[_1174].y;
    float _1182 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4140 : (isnan(_4140) ? 1.0 : min(_4140, 1.0)))) * cbInstanceData._m0[_1174].z;
    float _4173 = isnan(0.0) ? _1180 : (isnan(_1180) ? 0.0 : max(_1180, 0.0));
    float _1183 = isnan(1.0) ? _4173 : (isnan(_4173) ? 1.0 : min(_4173, 1.0));
    float _4184 = isnan(0.0) ? _1181 : (isnan(_1181) ? 0.0 : max(_1181, 0.0));
    float _1184 = isnan(1.0) ? _4184 : (isnan(_4184) ? 1.0 : min(_4184, 1.0));
    float _4195 = isnan(0.0) ? _1182 : (isnan(_1182) ? 0.0 : max(_1182, 0.0));
    float _1185 = isnan(1.0) ? _4195 : (isnan(_4195) ? 1.0 : min(_4195, 1.0));
    vec4 _1194 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1135, cbSceneParam._m0[86u].y * _1136));
    float _1198 = ((isnan(1.0) ? _4107 : (isnan(_4107) ? 1.0 : min(_4107, 1.0))) * TEXCOORD_5.w) * _1194.x;
    float _1199 = dot(vec3(_1036, _1037, _1038), vec3(_1115, _1116, _1117));
    float _1202 = _1199 * 2.0;
    float _1206 = (_1202 * _1036) - _1115;
    float _1207 = (_1202 * _1037) - _1116;
    float _1208 = (_1202 * _1038) - _1117;
    float _1212 = abs(dot(vec3(_1115, _1116, _1117), vec3(_1036, _1037, _1038)));
    float _4206 = isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0));
    float _1214 = sqrt(_1039);
    float _1227 = exp2((_1214 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4206 : (isnan(_4206) ? 1.0 : min(_4206, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1214 * 3.0));
    float _1259 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1263 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1267 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1596;
    float _1598;
    float _1599;
    float _1600;
    float _1601;
    float _1602;
    float _1603;
    float _1604;
    float _1605;
    float _1606;
    float _1607;
    float _1608;
    float _1609;
    float _1610;
    float _1611;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1321 = fma(_1267, cbModelParam._m0[26u].z, fma(_1263, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1259));
        float _1325 = fma(_1267, cbModelParam._m0[27u].z, fma(_1263, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1259));
        float _1329 = fma(_1267, cbModelParam._m0[28u].z, fma(_1263, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1259));
        float _1354 = _1259 + _1036;
        float _1355 = _1263 + _1037;
        float _1356 = _1267 + _1038;
        float _1366 = fma(_1356, cbModelParam._m0[26u].z, fma(_1355, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1354)) - _1321;
        float _1367 = fma(_1356, cbModelParam._m0[27u].z, fma(_1355, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1354)) - _1325;
        float _1368 = fma(_1356, cbModelParam._m0[28u].z, fma(_1355, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1354)) - _1329;
        float _1372 = inversesqrt(dot(vec3(_1366, _1367, _1368), vec3(_1366, _1367, _1368)));
        float _1385 = ((_1372 * _1366) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1321 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1386 = ((_1372 * _1367) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1325 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1387 = ((_1372 * _1368) / cbModelParam._m0[34u].z) + ((((((_1329 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1390 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1385, _1386, _1387), 0.0);
        vec4 _1397 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1385, _1386, _1387), 0.0);
        vec4 _1404 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1385, _1386, _1387), 0.0);
        vec4 _1411 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1385, _1386, _1387), 0.0);
        float _1424 = exp2((_1390.w + (-0.5)) * 20.0) * 2.0;
        float _1425 = _1424 * (_1390.x + (-0.5));
        float _1426 = _1424 * (_1390.y + (-0.5));
        float _1427 = _1424 * (_1390.z + (-0.5));
        float _1434 = exp2((_1397.w + (-0.5)) * 20.0) * 2.0;
        float _1435 = _1434 * (_1397.x + (-0.5));
        float _1436 = _1434 * (_1397.y + (-0.5));
        float _1437 = _1434 * (_1397.z + (-0.5));
        float _1444 = exp2((_1404.w + (-0.5)) * 20.0) * 2.0;
        float _1445 = _1444 * (_1404.x + (-0.5));
        float _1446 = _1444 * (_1404.y + (-0.5));
        float _1447 = _1444 * (_1404.z + (-0.5));
        float _1454 = exp2((_1411.w + (-0.5)) * 20.0) * 2.0;
        float _1455 = _1454 * (_1411.x + (-0.5));
        float _1456 = _1454 * (_1411.y + (-0.5));
        float _1457 = _1454 * (_1411.z + (-0.5));
        float _1458 = isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0));
        float _1459 = isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0));
        float _1460 = isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0));
        float _1461 = _1425 * 0.5;
        float _1462 = _1435 * 0.5;
        float _1463 = _1445 * 0.5;
        float _1464 = dot(vec3(_1461, _1462, _1463), vec3(_1461, _1462, _1463));
        float _1469 = (_1464 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1464);
        float _1478 = (dot(vec3(_1036, _1037, _1038), vec3(_1469 * _1461, _1469 * _1462, _1469 * _1463)) + 1.0) * 0.5;
        float _4232 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
        float _1488 = sqrt(((_1462 * _1462) + (_1461 * _1461)) + (_1463 * _1463)) / (_1458 + 9.9999997473787516355514526367188e-06);
        float _4243 = isnan(0.0) ? _1488 : (isnan(_1488) ? 0.0 : max(_1488, 0.0));
        float _1489 = isnan(1.0) ? _4243 : (isnan(_4243) ? 1.0 : min(_4243, 1.0));
        float _1490 = _1489 * 2.0;
        float _1494 = (1.0 - _1489) / (_1489 + 1.0);
        float _4254 = isnan(0.0) ? _1494 : (isnan(_1494) ? 0.0 : max(_1494, 0.0));
        float _1495 = isnan(1.0) ? _4254 : (isnan(_4254) ? 1.0 : min(_4254, 1.0));
        float _1504 = ((((1.0 - _1495) * (_1490 + 2.0)) * exp2(log2(isnan(1.0) ? _4232 : (isnan(_4232) ? 1.0 : min(_4232, 1.0))) * (_1490 + 1.0))) + _1495) * _1458;
        float _1505 = _1426 * 0.5;
        float _1506 = _1436 * 0.5;
        float _1507 = _1446 * 0.5;
        float _1508 = dot(vec3(_1505, _1506, _1507), vec3(_1505, _1506, _1507));
        float _1513 = (_1508 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1508);
        float _1521 = (dot(vec3(_1036, _1037, _1038), vec3(_1513 * _1505, _1513 * _1506, _1513 * _1507)) + 1.0) * 0.5;
        float _4265 = isnan(0.0) ? _1521 : (isnan(_1521) ? 0.0 : max(_1521, 0.0));
        float _1530 = sqrt(((_1506 * _1506) + (_1505 * _1505)) + (_1507 * _1507)) / (_1459 + 9.9999997473787516355514526367188e-06);
        float _4276 = isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0));
        float _1531 = isnan(1.0) ? _4276 : (isnan(_4276) ? 1.0 : min(_4276, 1.0));
        float _1532 = _1531 * 2.0;
        float _1536 = (1.0 - _1531) / (_1531 + 1.0);
        float _4287 = isnan(0.0) ? _1536 : (isnan(_1536) ? 0.0 : max(_1536, 0.0));
        float _1537 = isnan(1.0) ? _4287 : (isnan(_4287) ? 1.0 : min(_4287, 1.0));
        float _1546 = ((((1.0 - _1537) * (_1532 + 2.0)) * exp2(log2(isnan(1.0) ? _4265 : (isnan(_4265) ? 1.0 : min(_4265, 1.0))) * (_1532 + 1.0))) + _1537) * _1459;
        float _1547 = _1427 * 0.5;
        float _1548 = _1437 * 0.5;
        float _1549 = _1447 * 0.5;
        float _1550 = dot(vec3(_1547, _1548, _1549), vec3(_1547, _1548, _1549));
        float _1555 = (_1550 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1550);
        float _1563 = (dot(vec3(_1036, _1037, _1038), vec3(_1555 * _1547, _1555 * _1548, _1555 * _1549)) + 1.0) * 0.5;
        float _4298 = isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0));
        float _1572 = sqrt(((_1548 * _1548) + (_1547 * _1547)) + (_1549 * _1549)) / (_1460 + 9.9999997473787516355514526367188e-06);
        float _4309 = isnan(0.0) ? _1572 : (isnan(_1572) ? 0.0 : max(_1572, 0.0));
        float _1573 = isnan(1.0) ? _4309 : (isnan(_4309) ? 1.0 : min(_4309, 1.0));
        float _1574 = _1573 * 2.0;
        float _1578 = (1.0 - _1573) / (_1573 + 1.0);
        float _4320 = isnan(0.0) ? _1578 : (isnan(_1578) ? 0.0 : max(_1578, 0.0));
        float _1579 = isnan(1.0) ? _4320 : (isnan(_4320) ? 1.0 : min(_4320, 1.0));
        float _1588 = ((((1.0 - _1579) * (_1574 + 2.0)) * exp2(log2(isnan(1.0) ? _4298 : (isnan(_4298) ? 1.0 : min(_4298, 1.0))) * (_1574 + 1.0))) + _1579) * _1460;
        _1596 = _1427;
        _1598 = _1426;
        _1599 = _1425;
        _1600 = _1437;
        _1601 = _1436;
        _1602 = _1435;
        _1603 = _1447;
        _1604 = _1446;
        _1605 = _1445;
        _1606 = _1460;
        _1607 = _1459;
        _1608 = _1458;
        _1609 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1504 : (isnan(_1504) ? 0.0 : max(_1504, 0.0)));
        _1610 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1546 : (isnan(_1546) ? 0.0 : max(_1546, 0.0)));
        _1611 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1588 : (isnan(_1588) ? 0.0 : max(_1588, 0.0)));
    }
    else
    {
        _1596 = _1597;
        _1598 = _1597;
        _1599 = _1597;
        _1600 = _1597;
        _1601 = _1597;
        _1602 = _1597;
        _1603 = _1597;
        _1604 = _1597;
        _1605 = _1597;
        _1606 = _1597;
        _1607 = _1597;
        _1608 = _1597;
        _1609 = 0.0;
        _1610 = 0.0;
        _1611 = 0.0;
    }
    float _1906;
    float _1907;
    float _1908;
    float _1909;
    float _1910;
    float _1911;
    float _1912;
    float _1913;
    float _1914;
    float _1915;
    float _1916;
    float _1917;
    float _1918;
    float _1919;
    float _1920;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1637 = fma(_1267, cbModelParam._m0[30u].z, fma(_1263, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1259));
        float _1641 = fma(_1267, cbModelParam._m0[31u].z, fma(_1263, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1259));
        float _1645 = fma(_1267, cbModelParam._m0[32u].z, fma(_1263, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1259));
        float _1668 = _1259 + _1036;
        float _1669 = _1263 + _1037;
        float _1670 = _1267 + _1038;
        float _1680 = fma(_1670, cbModelParam._m0[30u].z, fma(_1669, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1668)) - _1637;
        float _1681 = fma(_1670, cbModelParam._m0[31u].z, fma(_1669, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1668)) - _1641;
        float _1682 = fma(_1670, cbModelParam._m0[32u].z, fma(_1669, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1668)) - _1645;
        float _1686 = inversesqrt(dot(vec3(_1680, _1681, _1682), vec3(_1680, _1681, _1682)));
        float _1699 = ((_1686 * _1680) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1637 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1700 = ((_1686 * _1681) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1641 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1701 = ((_1686 * _1682) / cbModelParam._m0[35u].z) + ((((((_1645 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1703 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1699, _1700, _1701), 0.0);
        vec4 _1710 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1699, _1700, _1701), 0.0);
        vec4 _1717 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1699, _1700, _1701), 0.0);
        vec4 _1724 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1699, _1700, _1701), 0.0);
        float _1736 = exp2((_1703.w + (-0.5)) * 20.0) * 2.0;
        float _1737 = _1736 * (_1703.x + (-0.5));
        float _1738 = _1736 * (_1703.y + (-0.5));
        float _1739 = _1736 * (_1703.z + (-0.5));
        float _1746 = exp2((_1710.w + (-0.5)) * 20.0) * 2.0;
        float _1747 = _1746 * (_1710.x + (-0.5));
        float _1748 = _1746 * (_1710.y + (-0.5));
        float _1749 = _1746 * (_1710.z + (-0.5));
        float _1756 = exp2((_1717.w + (-0.5)) * 20.0) * 2.0;
        float _1757 = _1756 * (_1717.x + (-0.5));
        float _1758 = _1756 * (_1717.y + (-0.5));
        float _1759 = _1756 * (_1717.z + (-0.5));
        float _1766 = exp2((_1724.w + (-0.5)) * 20.0) * 2.0;
        float _1767 = _1766 * (_1724.x + (-0.5));
        float _1768 = _1766 * (_1724.y + (-0.5));
        float _1769 = _1766 * (_1724.z + (-0.5));
        float _1770 = isnan(0.0) ? _1767 : (isnan(_1767) ? 0.0 : max(_1767, 0.0));
        float _1771 = isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0));
        float _1772 = isnan(0.0) ? _1769 : (isnan(_1769) ? 0.0 : max(_1769, 0.0));
        float _1773 = _1737 * 0.5;
        float _1774 = _1747 * 0.5;
        float _1775 = _1757 * 0.5;
        float _1776 = dot(vec3(_1773, _1774, _1775), vec3(_1773, _1774, _1775));
        float _1781 = (_1776 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1776);
        float _1789 = (dot(vec3(_1036, _1037, _1038), vec3(_1781 * _1773, _1781 * _1774, _1781 * _1775)) + 1.0) * 0.5;
        float _4361 = isnan(0.0) ? _1789 : (isnan(_1789) ? 0.0 : max(_1789, 0.0));
        float _1798 = sqrt(((_1774 * _1774) + (_1773 * _1773)) + (_1775 * _1775)) / (_1770 + 9.9999997473787516355514526367188e-06);
        float _4372 = isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0));
        float _1799 = isnan(1.0) ? _4372 : (isnan(_4372) ? 1.0 : min(_4372, 1.0));
        float _1800 = _1799 * 2.0;
        float _1804 = (1.0 - _1799) / (_1799 + 1.0);
        float _4383 = isnan(0.0) ? _1804 : (isnan(_1804) ? 0.0 : max(_1804, 0.0));
        float _1805 = isnan(1.0) ? _4383 : (isnan(_4383) ? 1.0 : min(_4383, 1.0));
        float _1814 = ((((1.0 - _1805) * (_1800 + 2.0)) * exp2(log2(isnan(1.0) ? _4361 : (isnan(_4361) ? 1.0 : min(_4361, 1.0))) * (_1800 + 1.0))) + _1805) * _1770;
        float _1815 = _1738 * 0.5;
        float _1816 = _1748 * 0.5;
        float _1817 = _1758 * 0.5;
        float _1818 = dot(vec3(_1815, _1816, _1817), vec3(_1815, _1816, _1817));
        float _1823 = (_1818 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1818);
        float _1831 = (dot(vec3(_1036, _1037, _1038), vec3(_1823 * _1815, _1823 * _1816, _1823 * _1817)) + 1.0) * 0.5;
        float _4394 = isnan(0.0) ? _1831 : (isnan(_1831) ? 0.0 : max(_1831, 0.0));
        float _1840 = sqrt(((_1816 * _1816) + (_1815 * _1815)) + (_1817 * _1817)) / (_1771 + 9.9999997473787516355514526367188e-06);
        float _4405 = isnan(0.0) ? _1840 : (isnan(_1840) ? 0.0 : max(_1840, 0.0));
        float _1841 = isnan(1.0) ? _4405 : (isnan(_4405) ? 1.0 : min(_4405, 1.0));
        float _1842 = _1841 * 2.0;
        float _1846 = (1.0 - _1841) / (_1841 + 1.0);
        float _4416 = isnan(0.0) ? _1846 : (isnan(_1846) ? 0.0 : max(_1846, 0.0));
        float _1847 = isnan(1.0) ? _4416 : (isnan(_4416) ? 1.0 : min(_4416, 1.0));
        float _1856 = ((((1.0 - _1847) * (_1842 + 2.0)) * exp2(log2(isnan(1.0) ? _4394 : (isnan(_4394) ? 1.0 : min(_4394, 1.0))) * (_1842 + 1.0))) + _1847) * _1771;
        float _1857 = _1739 * 0.5;
        float _1858 = _1749 * 0.5;
        float _1859 = _1759 * 0.5;
        float _1860 = dot(vec3(_1857, _1858, _1859), vec3(_1857, _1858, _1859));
        float _1865 = (_1860 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1860);
        float _1873 = (dot(vec3(_1036, _1037, _1038), vec3(_1865 * _1857, _1865 * _1858, _1865 * _1859)) + 1.0) * 0.5;
        float _4427 = isnan(0.0) ? _1873 : (isnan(_1873) ? 0.0 : max(_1873, 0.0));
        float _1882 = sqrt(((_1858 * _1858) + (_1857 * _1857)) + (_1859 * _1859)) / (_1772 + 9.9999997473787516355514526367188e-06);
        float _4438 = isnan(0.0) ? _1882 : (isnan(_1882) ? 0.0 : max(_1882, 0.0));
        float _1883 = isnan(1.0) ? _4438 : (isnan(_4438) ? 1.0 : min(_4438, 1.0));
        float _1884 = _1883 * 2.0;
        float _1888 = (1.0 - _1883) / (_1883 + 1.0);
        float _4449 = isnan(0.0) ? _1888 : (isnan(_1888) ? 0.0 : max(_1888, 0.0));
        float _1889 = isnan(1.0) ? _4449 : (isnan(_4449) ? 1.0 : min(_4449, 1.0));
        float _1898 = ((((1.0 - _1889) * (_1884 + 2.0)) * exp2(log2(isnan(1.0) ? _4427 : (isnan(_4427) ? 1.0 : min(_4427, 1.0))) * (_1884 + 1.0))) + _1889) * _1772;
        _1906 = _1739;
        _1907 = _1738;
        _1908 = _1737;
        _1909 = _1749;
        _1910 = _1748;
        _1911 = _1747;
        _1912 = _1759;
        _1913 = _1758;
        _1914 = _1757;
        _1915 = _1772;
        _1916 = _1771;
        _1917 = _1770;
        _1918 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1814 : (isnan(_1814) ? 0.0 : max(_1814, 0.0)));
        _1919 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1856 : (isnan(_1856) ? 0.0 : max(_1856, 0.0)));
        _1920 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1898 : (isnan(_1898) ? 0.0 : max(_1898, 0.0)));
    }
    else
    {
        _1906 = _1597;
        _1907 = _1597;
        _1908 = _1597;
        _1909 = _1597;
        _1910 = _1597;
        _1911 = _1597;
        _1912 = _1597;
        _1913 = _1597;
        _1914 = _1597;
        _1915 = _1597;
        _1916 = _1597;
        _1917 = _1597;
        _1918 = 0.0;
        _1919 = 0.0;
        _1920 = 0.0;
    }
    float _1930 = (cbModelParam._m0[1u].x * (_1918 - _1609)) + _1609;
    float _1931 = (cbModelParam._m0[1u].x * (_1919 - _1610)) + _1610;
    float _1932 = (cbModelParam._m0[1u].x * (_1920 - _1611)) + _1611;
    float _1953 = fma(_1932, cbSceneParam._m0[89u].z, fma(_1931, cbSceneParam._m0[89u].y, _1930 * cbSceneParam._m0[89u].x));
    float _1956 = fma(_1932, cbSceneParam._m0[90u].z, fma(_1931, cbSceneParam._m0[90u].y, _1930 * cbSceneParam._m0[90u].x));
    float _1959 = fma(_1932, cbSceneParam._m0[91u].z, fma(_1931, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1930));
    float _1974 = _1206 * 0.5;
    float _1975 = _1207 * 0.5;
    float _1976 = _1208 * 0.5;
    float _1977 = dot(vec4(_1974, _1975, _1976, 1.0), vec4(_1908, _1911, _1914, _1917));
    float _1980 = dot(vec4(_1974, _1975, _1976, 1.0), vec4(_1907, _1910, _1913, _1916));
    float _1983 = dot(vec4(_1974, _1975, _1976, 1.0), vec4(_1906, _1909, _1912, _1915));
    float _2017;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1990 = dot(vec4(_1974, _1975, _1976, 1.0), vec4(_1596, _1600, _1603, _1606));
        float _1994 = dot(vec4(_1974, _1975, _1976, 1.0), vec4(_1598, _1601, _1604, _1607));
        float _1998 = dot(vec4(_1974, _1975, _1976, 1.0), vec4(_1599, _1602, _1605, _1608));
        float _2005 = dot(vec4(cbModelParam._m0[39u]), vec4(_1974, _1975, _1976, 1.0));
        _2017 = dot(vec3(isnan(0.0) ? _1998 : (isnan(_1998) ? 0.0 : max(_1998, 0.0)), isnan(0.0) ? _1994 : (isnan(_1994) ? 0.0 : max(_1994, 0.0)), isnan(0.0) ? _1990 : (isnan(_1990) ? 0.0 : max(_1990, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2005) ? 0.0 : (isnan(0.0) ? _2005 : max(0.0, _2005))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2017 = 1.0;
    }
    float _2028;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2019 = dot(vec4(cbModelParam._m0[40u]), vec4(_1974, _1975, _1976, 1.0));
        _2028 = dot(vec3(isnan(0.0) ? _1977 : (isnan(_1977) ? 0.0 : max(_1977, 0.0)), isnan(0.0) ? _1980 : (isnan(_1980) ? 0.0 : max(_1980, 0.0)), isnan(0.0) ? _1983 : (isnan(_1983) ? 0.0 : max(_1983, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2019) ? 0.0 : (isnan(0.0) ? _2019 : max(0.0, _2019))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2028 = 1.0;
    }
    float _2032 = (_2028 * cbModelParam._m0[1u].x) + (_2017 * (1.0 - cbModelParam._m0[1u].x));
    float _2042 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1039);
    float _2043 = isnan(_2042) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2042 : min(cbModelParam._m0[25u].z, _2042));
    float _2123;
    float _2125;
    float _2127;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2090 = fma(_1267, cbModelParam._m0[13u].z, fma(_1263, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1259)) + cbModelParam._m0[13u].w;
        float _2094 = fma(_1267, cbModelParam._m0[14u].z, fma(_1263, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1259)) + cbModelParam._m0[14u].w;
        float _2098 = fma(_1267, cbModelParam._m0[15u].z, fma(_1263, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1259)) + cbModelParam._m0[15u].w;
        float _2101 = fma(_1208, cbModelParam._m0[13u].z, fma(_1207, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1206));
        float _2104 = fma(_1208, cbModelParam._m0[14u].z, fma(_1207, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1206));
        float _2107 = fma(_1208, cbModelParam._m0[15u].z, fma(_1207, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1206));
        float _2135;
        if (_2101 > 0.0)
        {
            _2135 = abs((1.0 - _2090) / _2101);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_2101 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_2090 + 1.0) / _2101);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _2135 = frontier_phi_17_15_ladder;
        }
        float _2335;
        if (_2104 > 0.0)
        {
            _2335 = abs((1.0 - _2094) / _2104);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_2104 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_2094 + 1.0) / _2104);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2335 = frontier_phi_26_22_ladder;
        }
        float _2578;
        if (_2107 > 0.0)
        {
            _2578 = abs((1.0 - _2098) / _2107);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_2107 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_2098 + 1.0) / _2107);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2578 = frontier_phi_38_33_ladder;
        }
        float _2580 = isnan(_2335) ? _2135 : (isnan(_2135) ? _2335 : min(_2135, _2335));
        float _2581 = isnan(_2578) ? _2580 : (isnan(_2580) ? _2578 : min(_2580, _2578));
        float _2585 = (_2581 * _2101) + _2090;
        float _2586 = (_2581 * _2104) + _2094;
        float _2587 = (_2581 * _2107) + _2098;
        float _2588 = _2581 * 9.9999997473787516355514526367188e-05;
        float _2590 = (-1.0) - _2588;
        float _2592 = _2588 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2587 > _2592) || ((_2587 < _2590) || ((_2586 > _2592) || ((_2586 < _2590) || ((_2585 < _2590) || (_2585 > _2592))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2711 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2587, cbModelParam._m0[9u].z, fma(_2586, cbModelParam._m0[9u].y, _2585 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2587, cbModelParam._m0[10u].z, fma(_2586, cbModelParam._m0[10u].y, _2585 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2587, cbModelParam._m0[11u].z, fma(_2586, cbModelParam._m0[11u].y, _2585 * cbModelParam._m0[11u].x))), _2043);
            frontier_phi_16_38_ladder = _2711.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2711.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2711.x * cbModelParam._m0[1u].y;
        }
        _2123 = frontier_phi_16_38_ladder_2;
        _2125 = frontier_phi_16_38_ladder_1;
        _2127 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _2111 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1206, _1207, _1208), _2043);
        _2123 = _2111.x * cbModelParam._m0[1u].y;
        _2125 = _2111.y * cbModelParam._m0[1u].y;
        _2127 = _2111.z * cbModelParam._m0[1u].y;
    }
    float _2131 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1039);
    float _2132 = isnan(_2131) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2131 : min(cbModelParam._m0[25u].w, _2131));
    float _2221;
    float _2223;
    float _2225;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2185 = fma(_1267, cbModelParam._m0[21u].z, fma(_1263, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1259)) + cbModelParam._m0[21u].w;
        float _2189 = fma(_1267, cbModelParam._m0[22u].z, fma(_1263, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1259)) + cbModelParam._m0[22u].w;
        float _2193 = fma(_1267, cbModelParam._m0[23u].z, fma(_1263, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1259)) + cbModelParam._m0[23u].w;
        float _2196 = fma(_1208, cbModelParam._m0[21u].z, fma(_1207, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1206));
        float _2199 = fma(_1208, cbModelParam._m0[22u].z, fma(_1207, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1206));
        float _2202 = fma(_1208, cbModelParam._m0[23u].z, fma(_1207, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1206));
        float _2340;
        if (_2196 > 0.0)
        {
            _2340 = abs((1.0 - _2185) / _2196);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2196 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2185 + 1.0) / _2196);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2340 = frontier_phi_28_24_ladder;
        }
        float _2605;
        if (_2199 > 0.0)
        {
            _2605 = abs((1.0 - _2189) / _2199);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2199 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2189 + 1.0) / _2199);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2605 = frontier_phi_40_35_ladder;
        }
        float _2810;
        if (_2202 > 0.0)
        {
            _2810 = abs((1.0 - _2193) / _2202);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_2202 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_2193 + 1.0) / _2202);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2810 = frontier_phi_49_46_ladder;
        }
        float _2812 = isnan(_2605) ? _2340 : (isnan(_2340) ? _2605 : min(_2340, _2605));
        float _2813 = isnan(_2810) ? _2812 : (isnan(_2812) ? _2810 : min(_2812, _2810));
        float _2817 = (_2813 * _2196) + _2185;
        float _2818 = (_2813 * _2199) + _2189;
        float _2819 = (_2813 * _2202) + _2193;
        float _2820 = _2813 * 9.9999997473787516355514526367188e-05;
        float _2821 = (-1.0) - _2820;
        float _2823 = _2820 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_2819 > _2823) || ((_2819 < _2821) || ((_2818 > _2823) || ((_2818 < _2821) || ((_2817 < _2821) || (_2817 > _2823))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3018 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2819, cbModelParam._m0[17u].z, fma(_2818, cbModelParam._m0[17u].y, _2817 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2819, cbModelParam._m0[18u].z, fma(_2818, cbModelParam._m0[18u].y, _2817 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2819, cbModelParam._m0[19u].z, fma(_2818, cbModelParam._m0[19u].y, _2817 * cbModelParam._m0[19u].x))), _2132);
            frontier_phi_25_49_ladder = _3018.z * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_1 = _3018.y * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_2 = _3018.x * cbModelParam._m0[1u].z;
        }
        _2221 = frontier_phi_25_49_ladder_2;
        _2223 = frontier_phi_25_49_ladder_1;
        _2225 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _2205 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1206, _1207, _1208), _2132);
        _2221 = _2205.x * cbModelParam._m0[1u].z;
        _2223 = _2205.y * cbModelParam._m0[1u].z;
        _2225 = _2205.z * cbModelParam._m0[1u].z;
    }
    float _2237 = ((((1.0 - _1227) * ((_1214 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1227 * _1214)) * _1198;
    float _2238 = _2237 * ((cbModelParam._m0[1u].w * (_2221 - _2123)) + _2123);
    float _2239 = _2237 * ((cbModelParam._m0[1u].w * (_2223 - _2125)) + _2125);
    float _2240 = _2237 * ((cbModelParam._m0[1u].w * (_2225 - _2127)) + _2127);
    float _2243 = fma(_2240, cbSceneParam._m0[89u].z, fma(_2239, cbSceneParam._m0[89u].y, _2238 * cbSceneParam._m0[89u].x));
    float _2246 = fma(_2240, cbSceneParam._m0[90u].z, fma(_2239, cbSceneParam._m0[90u].y, _2238 * cbSceneParam._m0[90u].x));
    float _2249 = fma(_2240, cbSceneParam._m0[91u].z, fma(_2239, cbSceneParam._m0[91u].y, _2238 * cbSceneParam._m0[91u].x));
    uvec4 _2259 = floatBitsToUint(cbInstanceData._m0[_293 + 5u]);
    uint _2261 = _2259.x * 14u;
    uint _2262 = _2261 + 13u;
    float _2269 = _1198 + (-1.0);
    float _2274 = (cbLight._m0[_2262].x * _2269) + 1.0;
    float _2275 = (cbLight._m0[_2262].y * _2269) + 1.0;
    float _2276 = (cbLight._m0[_2262].z * _2269) + 1.0;
    float _2277 = (cbLight._m0[_2262].w * _2269) + 1.0;
    uint _2278 = _2261 + 5u;
    float _2284 = isnan(1.0) ? _2275 : (isnan(_2275) ? 1.0 : min(_2275, 1.0));
    uint _2288 = _2261 + 4u;
    float _2294 = isnan(1.0) ? _2274 : (isnan(_2274) ? 1.0 : min(_2274, 1.0));
    uint _2298 = _2261 | 1u;
    float _2309 = dot(vec3(cbLight._m0[_2261].xyz), vec3(_1036, _1037, _1038));
    float _2312 = dot(vec3(cbLight._m0[_2298].xyz), vec3(_1036, _1037, _1038));
    float _4585 = isnan(0.0) ? _2309 : (isnan(_2309) ? 0.0 : max(_2309, 0.0));
    float _4596 = isnan(0.0) ? _2312 : (isnan(_2312) ? 0.0 : max(_2312, 0.0));
    float _2317 = (isnan(1.0) ? _4585 : (isnan(_4585) ? 1.0 : min(_4585, 1.0))) * 0.3183098733425140380859375;
    float _2319 = (isnan(1.0) ? _4596 : (isnan(_4596) ? 1.0 : min(_4596, 1.0))) * 0.3183098733425140380859375;
    float _2326 = ((cbLight._m0[_2278].x * _2284) * _2319) + ((cbLight._m0[_2288].x * _2294) * _2317);
    float _2327 = ((_2284 * cbLight._m0[_2278].y) * _2319) + ((_2294 * cbLight._m0[_2288].y) * _2317);
    float _2328 = ((_2284 * cbLight._m0[_2278].z) * _2319) + ((_2294 * cbLight._m0[_2288].z) * _2317);
    uvec4 _2332 = floatBitsToUint(cbLight._m0[_2261 + 12u]);
    bool _2334 = _2332.x == 0u;
    float _2345;
    float _2347;
    float _2349;
    if (_2334)
    {
        _2345 = _2326;
        _2347 = _2327;
        _2349 = _2328;
    }
    else
    {
        uint _2353 = _2261 + 6u;
        float _2369 = (dot(vec3(cbLight._m0[_2261 + 2u].xyz), vec3(_1036, _1037, _1038)) * 0.5) + 0.5;
        float _2370 = _2369 * _2369;
        float _4607 = isnan(0.0) ? _2370 : (isnan(_2370) ? 0.0 : max(_2370, 0.0));
        float _2371 = isnan(1.0) ? _4607 : (isnan(_4607) ? 1.0 : min(_4607, 1.0));
        float _2372 = isnan(1.0) ? _2276 : (isnan(_2276) ? 1.0 : min(_2276, 1.0));
        _2345 = (((cbLight._m0[_2353].x * 0.3183098733425140380859375) * _2371) * _2372) + _2326;
        _2347 = (((cbLight._m0[_2353].y * 0.3183098733425140380859375) * _2371) * _2372) + _2327;
        _2349 = (((cbLight._m0[_2353].z * 0.3183098733425140380859375) * _2371) * _2372) + _2328;
    }
    bool _2352 = _2332.y == 0u;
    float _2390;
    float _2392;
    float _2394;
    if (_2352)
    {
        _2390 = _2345;
        _2392 = _2347;
        _2394 = _2349;
    }
    else
    {
        uint _2549 = _2261 + 7u;
        float _2565 = (dot(vec3(cbLight._m0[_2261 + 3u].xyz), vec3(_1036, _1037, _1038)) * 0.5) + 0.5;
        float _2566 = _2565 * _2565;
        float _4623 = isnan(0.0) ? _2566 : (isnan(_2566) ? 0.0 : max(_2566, 0.0));
        float _2567 = isnan(1.0) ? _4623 : (isnan(_4623) ? 1.0 : min(_4623, 1.0));
        float _2568 = isnan(1.0) ? _2277 : (isnan(_2277) ? 1.0 : min(_2277, 1.0));
        _2390 = (((cbLight._m0[_2549].x * 0.3183098733425140380859375) * _2567) * _2568) + _2345;
        _2392 = (((cbLight._m0[_2549].y * 0.3183098733425140380859375) * _2567) * _2568) + _2347;
        _2394 = (((cbLight._m0[_2549].z * 0.3183098733425140380859375) * _2567) * _2568) + _2349;
    }
    uint _2397 = _2261 + 8u;
    float _2410 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2261].w)) * _1039) * 0.949999988079071044921875);
    float _2411 = _2410 * _2410;
    float _2412 = cbLight._m0[_2261].x + _1115;
    float _2413 = cbLight._m0[_2261].y + _1116;
    float _2414 = cbLight._m0[_2261].z + _1117;
    float _2418 = inversesqrt(dot(vec3(_2412, _2413, _2414), vec3(_2412, _2413, _2414)));
    float _2419 = _2418 * _2412;
    float _2420 = _2418 * _2413;
    float _2421 = _2418 * _2414;
    float _2422 = dot(vec3(_1036, _1037, _1038), vec3(cbLight._m0[_2261].xyz));
    float _4639 = isnan(0.0) ? _2422 : (isnan(_2422) ? 0.0 : max(_2422, 0.0));
    float _2425 = isnan(1.0) ? _4639 : (isnan(_4639) ? 1.0 : min(_4639, 1.0));
    float _4650 = isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0));
    float _2426 = isnan(1.0) ? _4650 : (isnan(_4650) ? 1.0 : min(_4650, 1.0));
    float _2427 = dot(vec3(_1036, _1037, _1038), vec3(_2419, _2420, _2421));
    float _4661 = isnan(0.0) ? _2427 : (isnan(_2427) ? 0.0 : max(_2427, 0.0));
    float _2430 = isnan(1.0) ? _4661 : (isnan(_4661) ? 1.0 : min(_4661, 1.0));
    float _2431 = dot(vec3(cbLight._m0[_2261].xyz), vec3(_2419, _2420, _2421));
    float _4672 = isnan(0.0) ? _2431 : (isnan(_2431) ? 0.0 : max(_2431, 0.0));
    float _2435 = _2411 * _2411;
    float _2439 = ((_2430 * _2430) * (_2435 + (-1.0))) + 1.0;
    float _2450 = (exp2(log2(1.0 - (isnan(1.0) ? _4672 : (isnan(_4672) ? 1.0 : min(_4672, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2451 = 1.0 - _2411;
    float _2462 = (0.5 / (((_2426 * ((_2425 * _2451) + _2411)) + 9.9999999392252902907785028219223e-09) + (((_2426 * _2451) + _2411) * _2425))) * _2425;
    float _4683 = isnan(0.0) ? _2462 : (isnan(_2462) ? 0.0 : max(_2462, 0.0));
    float _2464 = (isnan(1.0) ? _4683 : (isnan(_4683) ? 1.0 : min(_4683, 1.0))) * (_2435 / ((_2439 * _2439) * 3.141590118408203125));
    uint _2475 = _2261 + 9u;
    float _2486 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2298].w)) * _1039) * 0.949999988079071044921875);
    float _2487 = _2486 * _2486;
    float _2488 = cbLight._m0[_2298].x + _1115;
    float _2489 = cbLight._m0[_2298].y + _1116;
    float _2490 = cbLight._m0[_2298].z + _1117;
    float _2494 = inversesqrt(dot(vec3(_2488, _2489, _2490), vec3(_2488, _2489, _2490)));
    float _2495 = _2494 * _2488;
    float _2496 = _2494 * _2489;
    float _2497 = _2494 * _2490;
    float _2498 = dot(vec3(_1036, _1037, _1038), vec3(cbLight._m0[_2298].xyz));
    float _4694 = isnan(0.0) ? _2498 : (isnan(_2498) ? 0.0 : max(_2498, 0.0));
    float _2501 = isnan(1.0) ? _4694 : (isnan(_4694) ? 1.0 : min(_4694, 1.0));
    float _2502 = dot(vec3(_1036, _1037, _1038), vec3(_2495, _2496, _2497));
    float _4705 = isnan(0.0) ? _2502 : (isnan(_2502) ? 0.0 : max(_2502, 0.0));
    float _2505 = isnan(1.0) ? _4705 : (isnan(_4705) ? 1.0 : min(_4705, 1.0));
    float _2506 = dot(vec3(cbLight._m0[_2298].xyz), vec3(_2495, _2496, _2497));
    float _4716 = isnan(0.0) ? _2506 : (isnan(_2506) ? 0.0 : max(_2506, 0.0));
    float _2510 = _2487 * _2487;
    float _2514 = ((_2505 * _2505) * (_2510 + (-1.0))) + 1.0;
    float _2523 = (exp2(log2(1.0 - (isnan(1.0) ? _4716 : (isnan(_4716) ? 1.0 : min(_4716, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2524 = 1.0 - _2487;
    float _2534 = (0.5 / (((_2426 * ((_2501 * _2524) + _2487)) + 9.9999999392252902907785028219223e-09) + (((_2426 * _2524) + _2487) * _2501))) * _2501;
    float _4727 = isnan(0.0) ? _2534 : (isnan(_2534) ? 0.0 : max(_2534, 0.0));
    float _2536 = (isnan(1.0) ? _4727 : (isnan(_4727) ? 1.0 : min(_4727, 1.0))) * (_2510 / ((_2514 * _2514) * 3.141590118408203125));
    float _2546 = (((_2523 * cbLight._m0[_2475].x) * _2536) * _2284) + (((_2450 * cbLight._m0[_2397].x) * _2464) * _2294);
    float _2547 = (((_2523 * cbLight._m0[_2475].y) * _2536) * _2284) + (((_2450 * cbLight._m0[_2397].y) * _2464) * _2294);
    float _2548 = (((_2523 * cbLight._m0[_2475].z) * _2536) * _2284) + (((_2450 * cbLight._m0[_2397].z) * _2464) * _2294);
    float _2610;
    float _2612;
    float _2614;
    if (_2334)
    {
        _2610 = _2546;
        _2612 = _2547;
        _2614 = _2548;
    }
    else
    {
        uint _2616 = _2261 + 2u;
        uint _2620 = _2261 + 10u;
        float _2634 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2616].w)) * _1039) * 0.949999988079071044921875);
        float _2635 = _2634 * _2634;
        float _2636 = cbLight._m0[_2616].x + _1115;
        float _2637 = cbLight._m0[_2616].y + _1116;
        float _2638 = cbLight._m0[_2616].z + _1117;
        float _2642 = inversesqrt(dot(vec3(_2636, _2637, _2638), vec3(_2636, _2637, _2638)));
        float _2643 = _2642 * _2636;
        float _2644 = _2642 * _2637;
        float _2645 = _2642 * _2638;
        float _2646 = dot(vec3(_1036, _1037, _1038), vec3(cbLight._m0[_2616].xyz));
        float _4738 = isnan(0.0) ? _2646 : (isnan(_2646) ? 0.0 : max(_2646, 0.0));
        float _2649 = isnan(1.0) ? _4738 : (isnan(_4738) ? 1.0 : min(_4738, 1.0));
        float _2650 = dot(vec3(_1036, _1037, _1038), vec3(_2643, _2644, _2645));
        float _4749 = isnan(0.0) ? _2650 : (isnan(_2650) ? 0.0 : max(_2650, 0.0));
        float _2653 = isnan(1.0) ? _4749 : (isnan(_4749) ? 1.0 : min(_4749, 1.0));
        float _2654 = dot(vec3(cbLight._m0[_2616].xyz), vec3(_2643, _2644, _2645));
        float _4760 = isnan(0.0) ? _2654 : (isnan(_2654) ? 0.0 : max(_2654, 0.0));
        float _2658 = _2635 * _2635;
        float _2662 = ((_2653 * _2653) * (_2658 + (-1.0))) + 1.0;
        float _2671 = (exp2(log2(1.0 - (isnan(1.0) ? _4760 : (isnan(_4760) ? 1.0 : min(_4760, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2672 = 1.0 - _2635;
        float _2682 = (0.5 / (((_2426 * ((_2649 * _2672) + _2635)) + 9.9999999392252902907785028219223e-09) + (((_2426 * _2672) + _2635) * _2649))) * _2649;
        float _4771 = isnan(0.0) ? _2682 : (isnan(_2682) ? 0.0 : max(_2682, 0.0));
        float _2684 = (isnan(1.0) ? _4771 : (isnan(_4771) ? 1.0 : min(_4771, 1.0))) * (_2658 / ((_2662 * _2662) * 3.141590118408203125));
        float _2685 = isnan(1.0) ? _2276 : (isnan(_2276) ? 1.0 : min(_2276, 1.0));
        _2610 = (((_2671 * cbLight._m0[_2620].x) * _2684) * _2685) + _2546;
        _2612 = (((_2671 * cbLight._m0[_2620].y) * _2684) * _2685) + _2547;
        _2614 = (((_2671 * cbLight._m0[_2620].z) * _2684) * _2685) + _2548;
    }
    float _2720;
    float _2722;
    float _2724;
    if (_2352)
    {
        _2720 = _2610;
        _2722 = _2612;
        _2724 = _2614;
    }
    else
    {
        uint _2731 = _2261 + 3u;
        uint _2735 = _2261 + 11u;
        float _2749 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2731].w)) * _1039) * 0.949999988079071044921875);
        float _2750 = _2749 * _2749;
        float _2751 = cbLight._m0[_2731].x + _1115;
        float _2752 = cbLight._m0[_2731].y + _1116;
        float _2753 = cbLight._m0[_2731].z + _1117;
        float _2757 = inversesqrt(dot(vec3(_2751, _2752, _2753), vec3(_2751, _2752, _2753)));
        float _2758 = _2757 * _2751;
        float _2759 = _2757 * _2752;
        float _2760 = _2757 * _2753;
        float _2761 = dot(vec3(_1036, _1037, _1038), vec3(cbLight._m0[_2731].xyz));
        float _4787 = isnan(0.0) ? _2761 : (isnan(_2761) ? 0.0 : max(_2761, 0.0));
        float _2764 = isnan(1.0) ? _4787 : (isnan(_4787) ? 1.0 : min(_4787, 1.0));
        float _2765 = dot(vec3(_1036, _1037, _1038), vec3(_2758, _2759, _2760));
        float _4798 = isnan(0.0) ? _2765 : (isnan(_2765) ? 0.0 : max(_2765, 0.0));
        float _2768 = isnan(1.0) ? _4798 : (isnan(_4798) ? 1.0 : min(_4798, 1.0));
        float _2769 = dot(vec3(cbLight._m0[_2731].xyz), vec3(_2758, _2759, _2760));
        float _4809 = isnan(0.0) ? _2769 : (isnan(_2769) ? 0.0 : max(_2769, 0.0));
        float _2773 = _2750 * _2750;
        float _2777 = ((_2768 * _2768) * (_2773 + (-1.0))) + 1.0;
        float _2786 = (exp2(log2(1.0 - (isnan(1.0) ? _4809 : (isnan(_4809) ? 1.0 : min(_4809, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2787 = 1.0 - _2750;
        float _2797 = (0.5 / (((_2426 * ((_2764 * _2787) + _2750)) + 9.9999999392252902907785028219223e-09) + (((_2426 * _2787) + _2750) * _2764))) * _2764;
        float _4820 = isnan(0.0) ? _2797 : (isnan(_2797) ? 0.0 : max(_2797, 0.0));
        float _2799 = (isnan(1.0) ? _4820 : (isnan(_4820) ? 1.0 : min(_4820, 1.0))) * (_2773 / ((_2777 * _2777) * 3.141590118408203125));
        float _2800 = isnan(1.0) ? _2277 : (isnan(_2277) ? 1.0 : min(_2277, 1.0));
        _2720 = (((_2786 * cbLight._m0[_2735].x) * _2799) * _2800) + _2610;
        _2722 = (((_2786 * cbLight._m0[_2735].y) * _2799) * _2800) + _2612;
        _2724 = (((_2786 * cbLight._m0[_2735].z) * _2799) * _2800) + _2614;
    }
    float _2935;
    float _2937;
    float _2939;
    float _2941;
    float _2943;
    float _2945;
    if (_2259.y == 0u)
    {
        float _2875 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2876 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2875;
        float _2877 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2875;
        float _2878 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2875;
        uvec4 _2890 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2891 = _2890.x;
        uint _2902 = uint((float(_2890.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1136) / _2891))) + floor(float(uint(cbSceneParam._m0[85u].x * _1135) / _2891)));
        float _2912 = (log2(_2878 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2913 = isnan(0.0) ? _2912 : (isnan(_2912) ? 0.0 : max(_2912, 0.0));
        uint _2916 = uint(isnan(14.0) ? _2913 : (isnan(_2913) ? 14.0 : min(_2913, 14.0)));
        uvec4 _2921 = texelFetch(g_lightClusterGridBuffer, int(((_2916 << 2u) + (_2902 << 6u)) >> 2u));
        uint _2922 = _2921.x;
        uint _2923 = _2890.z;
        float _3023;
        float _3025;
        float _3027;
        float _3029;
        float _3031;
        float _3033;
        if (((((1u << ((_2923 >> 4u) & 15u)) + 4294967295u) & _2922) == 0u) || ((_2923 & 240u) == 0u))
        {
            _3023 = 0.0;
            _3025 = 0.0;
            _3027 = 0.0;
            _3029 = 0.0;
            _3031 = 0.0;
            _3033 = 0.0;
        }
        else
        {
            float _3024;
            float _3026;
            float _3028;
            float _3030;
            float _3032;
            float _3034;
            float _3176 = 0.0;
            float _3177 = 0.0;
            float _3178 = 0.0;
            float _3179 = 0.0;
            float _3180 = 0.0;
            float _3181 = 0.0;
            uint _3182 = 0u;
            uint _3191;
            bool _3192;
            for (;;)
            {
                _3191 = texelFetch(g_lightClassification, int((((_2916 << 5u) + (_2902 << 9u)) + (_3182 << 2u)) >> 2u)).x;
                _3192 = _3191 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3192)
                {
                    frontier_phi_66_pred = _3176;
                    frontier_phi_66_pred_1 = _3181;
                    frontier_phi_66_pred_2 = _3180;
                    frontier_phi_66_pred_3 = _3179;
                    frontier_phi_66_pred_4 = _3178;
                    frontier_phi_66_pred_5 = _3177;
                }
                else
                {
                    float _3321;
                    float _3322;
                    float _3323;
                    float _3324;
                    float _3325;
                    float _3326;
                    uint _3327;
                    _3321 = _3176;
                    _3322 = _3177;
                    _3323 = _3178;
                    _3324 = _3179;
                    _3325 = _3180;
                    _3326 = _3181;
                    _3327 = _3191;
                    float _3248;
                    float _3249;
                    float _3250;
                    float _3251;
                    float _3252;
                    float _3253;
                    for (;;)
                    {
                        uint _3331 = uint(findLSB(_3327)) + (_3182 << 5u);
                        uint _3328 = (_3327 + 4294967295u) & _3327;
                        uint _3333 = _3331 * 48u;
                        vec4 _3347 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3333)).x, texelFetch(g_PointLightRenderingBuffer, int(_3333 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3333 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3333 + 3u)).x));
                        uint _3353 = (_3331 * 48u) + 4u;
                        vec4 _3366 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3353)).x, texelFetch(g_PointLightRenderingBuffer, int(_3353 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3353 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3353 + 3u)).x));
                        uint _3372 = (_3331 * 48u) + 8u;
                        vec3 _3383 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3372)).x, texelFetch(g_PointLightRenderingBuffer, int(_3372 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3372 + 2u)).x));
                        float _3387 = _3347.x - _2876;
                        float _3388 = _3347.y - _2877;
                        float _3389 = _3347.z - _2878;
                        float _3390 = dot(vec3(_3387, _3388, _3389), vec3(_3387, _3388, _3389));
                        float _3393 = inversesqrt(_3390);
                        float _3394 = _3393 * _3387;
                        float _3395 = _3393 * _3388;
                        float _3396 = _3393 * _3389;
                        float _3397 = dot(vec3(_1154, _1157, _1160), vec3(_3394, _3395, _3396));
                        float _3402 = 1.0 - (_3390 * _3347.w);
                        float _4846 = isnan(0.0) ? _3402 : (isnan(_3402) ? 0.0 : max(_3402, 0.0));
                        float _3403 = isnan(1.0) ? _4846 : (isnan(_4846) ? 1.0 : min(_4846, 1.0));
                        float _3404 = sqrt(_3390) * _3366.w;
                        float _3407 = 1.39999997615814208984375 / (_3404 + 1.39999997615814208984375);
                        float _3408 = _3407 * _3407;
                        float _3411 = ((1.0 - _3408) * _3397) + _3408;
                        float _3414 = _3404 * _3404;
                        float _3418 = ((isnan(0.0) ? _3411 : (isnan(_3411) ? 0.0 : max(_3411, 0.0))) * _3403) / ((_3414 * 0.699999988079071044921875) + 1.0);
                        float _3422 = (-0.0) - _2876;
                        float _3423 = (-0.0) - _2877;
                        float _3424 = (-0.0) - _2878;
                        float _3428 = inversesqrt(dot(vec3(_3422, _3423, _3424), vec3(_3422, _3423, _3424)));
                        float _3429 = _3428 * _3422;
                        float _3430 = _3428 * _3423;
                        float _3431 = _3428 * _3424;
                        float _3439 = exp2(log2(1.0 / ((_3414 * 3.5) + 5.0)) * 0.25);
                        float _3440 = 1.0 - _1214;
                        float _3447 = sqrt(1.0 - ((1.0 - (_3440 * _3440)) * (1.0 - (_3439 * _3439))));
                        float _3448 = _3447 * _3447;
                        float _3449 = _3448 * _3448;
                        float _3450 = _3429 + _3394;
                        float _3451 = _3430 + _3395;
                        float _3452 = _3431 + _3396;
                        float _3456 = inversesqrt(dot(vec3(_3450, _3451, _3452), vec3(_3450, _3451, _3452)));
                        float _3460 = dot(vec3(_1154, _1157, _1160), vec3(_3429, _3430, _3431));
                        float _4862 = isnan(0.0) ? _3460 : (isnan(_3460) ? 0.0 : max(_3460, 0.0));
                        float _3463 = isnan(1.0) ? _4862 : (isnan(_4862) ? 1.0 : min(_4862, 1.0));
                        float _3464 = dot(vec3(_1154, _1157, _1160), vec3(_3456 * _3450, _3456 * _3451, _3456 * _3452));
                        float _4873 = isnan(0.0) ? _3464 : (isnan(_3464) ? 0.0 : max(_3464, 0.0));
                        float _3467 = isnan(1.0) ? _4873 : (isnan(_4873) ? 1.0 : min(_4873, 1.0));
                        float _3471 = ((_3467 * _3467) * (_3449 + (-1.0))) + 1.0;
                        float _3472 = _3407 * _3448;
                        float _3473 = _3472 * _3472;
                        float _3476 = ((1.0 - _3473) * _3397) + _3473;
                        float _4884 = isnan(0.0) ? _3476 : (isnan(_3476) ? 0.0 : max(_3476, 0.0));
                        float _3477 = isnan(1.0) ? _4884 : (isnan(_4884) ? 1.0 : min(_4884, 1.0));
                        float _3478 = 1.0 - _3448;
                        float _3488 = (0.5 / (((_3477 * ((_3463 * _3478) + _3448)) + 9.9999999392252902907785028219223e-09) + (((_3477 * _3478) + _3448) * _3463))) * _3477;
                        float _4895 = isnan(0.0) ? _3488 : (isnan(_3488) ? 0.0 : max(_3488, 0.0));
                        float _3499 = (((_3449 * 3.1415927410125732421875) * (isnan(1.0) ? _4895 : (isnan(_4895) ? 1.0 : min(_4895, 1.0)))) / ((_3471 * _3471) * ((_3414 * 2.1991131305694580078125) + 3.141590118408203125))) * _3403;
                        _3251 = (_3418 * _3366.x) + _3324;
                        _3252 = (_3418 * _3366.y) + _3325;
                        _3253 = (_3418 * _3366.z) + _3326;
                        _3248 = (_3499 * _3383.x) + _3321;
                        _3249 = (_3499 * _3383.y) + _3322;
                        _3250 = (_3499 * _3383.z) + _3323;
                        if (_3328 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3321 = _3248;
                            _3322 = _3249;
                            _3323 = _3250;
                            _3324 = _3251;
                            _3325 = _3252;
                            _3326 = _3253;
                            _3327 = _3328;
                        }
                    }
                    frontier_phi_66_pred = _3248;
                    frontier_phi_66_pred_1 = _3253;
                    frontier_phi_66_pred_2 = _3252;
                    frontier_phi_66_pred_3 = _3251;
                    frontier_phi_66_pred_4 = _3250;
                    frontier_phi_66_pred_5 = _3249;
                }
                _3024 = frontier_phi_66_pred;
                _3034 = frontier_phi_66_pred_1;
                _3032 = frontier_phi_66_pred_2;
                _3030 = frontier_phi_66_pred_3;
                _3028 = frontier_phi_66_pred_4;
                _3026 = frontier_phi_66_pred_5;
                uint _3183 = _3182 + 1u;
                if (_3183 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3176 = _3024;
                    _3177 = _3026;
                    _3178 = _3028;
                    _3179 = _3030;
                    _3180 = _3032;
                    _3181 = _3034;
                    _3182 = _3183;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3023 = _3024;
            _3025 = _3026;
            _3027 = _3028;
            _3029 = _3030;
            _3031 = _3032;
            _3033 = _3034;
        }
        uvec4 _3037 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3038 = _3037.z;
        uint _3040 = (_3038 >> 8u) & 15u;
        float _3144;
        float _3146;
        float _3148;
        float _3150;
        float _3152;
        float _3154;
        if (((4294967295u << _3040) & _2922) == 0u)
        {
            _3144 = _3023;
            _3146 = _3025;
            _3148 = _3027;
            _3150 = _3029;
            _3152 = _3031;
            _3154 = _3033;
        }
        else
        {
            float _3169 = inversesqrt(dot(vec3(_2876, _2877, _2878), vec3(_2876, _2877, _2878)));
            float _3170 = _3169 * _2876;
            float _3171 = _3169 * _2877;
            float _3172 = _3169 * _2878;
            float frontier_phi_58_59_ladder;
            float frontier_phi_58_59_ladder_1;
            float frontier_phi_58_59_ladder_2;
            float frontier_phi_58_59_ladder_3;
            float frontier_phi_58_59_ladder_4;
            float frontier_phi_58_59_ladder_5;
            if (_3040 < ((_3038 >> 12u) & 15u))
            {
                float _3145;
                float _3147;
                float _3149;
                float _3151;
                float _3153;
                float _3155;
                float _3304 = _3023;
                float _3305 = _3025;
                float _3306 = _3027;
                float _3307 = _3029;
                float _3308 = _3031;
                float _3309 = _3033;
                uint _3310 = _3040;
                uint _3319;
                bool _3320;
                for (;;)
                {
                    _3319 = texelFetch(g_lightClassification, int((((_2916 << 5u) + (_2902 << 9u)) + (_3310 << 2u)) >> 2u)).x;
                    _3320 = _3319 == 0u;
                    float frontier_phi_77_pred;
                    float frontier_phi_77_pred_1;
                    float frontier_phi_77_pred_2;
                    float frontier_phi_77_pred_3;
                    float frontier_phi_77_pred_4;
                    float frontier_phi_77_pred_5;
                    if (_3320)
                    {
                        frontier_phi_77_pred = _3309;
                        frontier_phi_77_pred_1 = _3308;
                        frontier_phi_77_pred_2 = _3307;
                        frontier_phi_77_pred_3 = _3306;
                        frontier_phi_77_pred_4 = _3305;
                        frontier_phi_77_pred_5 = _3304;
                    }
                    else
                    {
                        float _3513;
                        float _3514;
                        float _3515;
                        float _3516;
                        float _3517;
                        float _3518;
                        float _3806;
                        float _3807;
                        float _3808;
                        float _3809;
                        float _3810;
                        float _3811;
                        float _3526 = _3304;
                        float _3527 = _3305;
                        float _3528 = _3306;
                        float _3529 = _3307;
                        float _3530 = _3308;
                        float _3531 = _3309;
                        uint _3532 = _3319;
                        uint _3533;
                        vec4 _3558;
                        float _3559;
                        vec4 _3574;
                        vec3 _3586;
                        vec4 _3601;
                        vec4 _3616;
                        float _3662;
                        bool _3663;
                        for (;;)
                        {
                            uint _3543 = ((_3310 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3532));
                            _3533 = (_3532 + 4294967295u) & _3532;
                            uint _3545 = _3543 * 40u;
                            _3558 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3545)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3545 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3545 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3545 + 3u)).x));
                            _3559 = _3558.w;
                            uint _3561 = (_3543 * 40u) + 4u;
                            _3574 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3561)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3561 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3561 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3561 + 3u)).x));
                            uint _3576 = (_3543 * 40u) + 8u;
                            _3586 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3576)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3576 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3576 + 2u)).x));
                            uint _3588 = (_3543 * 40u) + 16u;
                            _3601 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3588)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3588 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3588 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3588 + 3u)).x));
                            uint _3603 = (_3543 * 40u) + 20u;
                            _3616 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3603)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3603 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3603 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3603 + 3u)).x));
                            uint _3618 = (_3543 * 40u) + 24u;
                            vec4 _3631 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3618)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3618 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3618 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3618 + 3u)).x));
                            uint _3637 = (_3543 * 40u) + 28u;
                            vec4 _3650 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3637)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3637 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3637 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3637 + 3u)).x));
                            _3662 = fma(_2878, _3650.z, fma(_2877, _3650.y, _3650.x * _2876)) + _3650.w;
                            _3663 = !((fma(_2878, _3631.z, fma(_2877, _3631.y, _3631.x * _2876)) + _3631.w) <= 0.0);
                            float frontier_phi_83_pred;
                            float frontier_phi_83_pred_1;
                            float frontier_phi_83_pred_2;
                            float frontier_phi_83_pred_3;
                            float frontier_phi_83_pred_4;
                            float frontier_phi_83_pred_5;
                            if (_3663)
                            {
                                float _3690 = _3558.x - _2876;
                                float _3691 = _3558.y - _2877;
                                float _3692 = _3558.z - _2878;
                                float _3693 = dot(vec3(_3690, _3691, _3692), vec3(_3690, _3691, _3692));
                                float _3696 = inversesqrt(_3693);
                                float _3697 = _3696 * _3690;
                                float _3698 = _3696 * _3691;
                                float _3699 = _3696 * _3692;
                                float _3703 = 1.0 - (_3693 / (_3559 * _3559));
                                float _4906 = isnan(0.0) ? _3703 : (isnan(_3703) ? 0.0 : max(_3703, 0.0));
                                float _3704 = isnan(1.0) ? _4906 : (isnan(_4906) ? 1.0 : min(_4906, 1.0));
                                float _3708 = sqrt(_3693) * _3574.w;
                                float _3710 = 1.39999997615814208984375 / (_3708 + 1.39999997615814208984375);
                                float _3711 = _3710 * _3710;
                                float _3714 = ((1.0 - _3711) * dot(vec3(_3697, _3698, _3699), vec3(_1154, _1157, _1160))) + _3711;
                                float _3717 = _3708 * _3708;
                                float _3721 = (fma(_2878, _3601.z, fma(_2877, _3601.y, _3601.x * _2876)) + _3601.w) / _3662;
                                float _3722 = (fma(_2878, _3616.z, fma(_2877, _3616.y, _3616.x * _2876)) + _3616.w) / _3662;
                                float _3726 = 1.0 - dot(vec2(_3721, _3722), vec2(_3721, _3722));
                                float _4922 = isnan(0.0) ? _3726 : (isnan(_3726) ? 0.0 : max(_3726, 0.0));
                                float _3727 = isnan(1.0) ? _4922 : (isnan(_4922) ? 1.0 : min(_4922, 1.0));
                                float _3728 = _3727 * (((isnan(0.0) ? _3714 : (isnan(_3714) ? 0.0 : max(_3714, 0.0))) * _3704) / ((_3717 * 0.699999988079071044921875) + 1.0));
                                float _3740 = exp2(log2(1.0 / ((_3717 * 3.5) + 5.0)) * 0.25);
                                float _3741 = 1.0 - _1214;
                                float _3748 = sqrt(1.0 - ((1.0 - (_3741 * _3741)) * (1.0 - (_3740 * _3740))));
                                float _3749 = _3748 * _3748;
                                float _3750 = _3749 * _3749;
                                float _3751 = _3697 - _3170;
                                float _3752 = _3698 - _3171;
                                float _3753 = _3699 - _3172;
                                float _3757 = inversesqrt(dot(vec3(_3751, _3752, _3753), vec3(_3751, _3752, _3753)));
                                float _3761 = dot(vec3(_1154, _1157, _1160), vec3((-0.0) - _3170, (-0.0) - _3171, (-0.0) - _3172));
                                float _4933 = isnan(0.0) ? _3761 : (isnan(_3761) ? 0.0 : max(_3761, 0.0));
                                float _3764 = isnan(1.0) ? _4933 : (isnan(_4933) ? 1.0 : min(_4933, 1.0));
                                float _3765 = dot(vec3(_1154, _1157, _1160), vec3(_3757 * _3751, _3757 * _3752, _3757 * _3753));
                                float _4944 = isnan(0.0) ? _3765 : (isnan(_3765) ? 0.0 : max(_3765, 0.0));
                                float _3768 = isnan(1.0) ? _4944 : (isnan(_4944) ? 1.0 : min(_4944, 1.0));
                                float _3772 = ((_3768 * _3768) * (_3750 + (-1.0))) + 1.0;
                                float _3773 = _3710 * _3749;
                                float _3774 = _3773 * _3773;
                                float _3780 = ((1.0 - _3774) * dot(vec3(_1154, _1157, _1160), vec3(_3697, _3698, _3699))) + _3774;
                                float _4955 = isnan(0.0) ? _3780 : (isnan(_3780) ? 0.0 : max(_3780, 0.0));
                                float _3781 = isnan(1.0) ? _4955 : (isnan(_4955) ? 1.0 : min(_4955, 1.0));
                                float _3782 = 1.0 - _3749;
                                float _3792 = (0.5 / (((_3781 * ((_3764 * _3782) + _3749)) + 9.9999999392252902907785028219223e-09) + (((_3781 * _3782) + _3749) * _3764))) * _3781;
                                float _4966 = isnan(0.0) ? _3792 : (isnan(_3792) ? 0.0 : max(_3792, 0.0));
                                float _3802 = (_3727 * _3704) * (((_3750 * 3.1415927410125732421875) * (isnan(1.0) ? _4966 : (isnan(_4966) ? 1.0 : min(_4966, 1.0)))) / ((_3772 * _3772) * ((_3717 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_83_pred = _3728 * _3574.y;
                                frontier_phi_83_pred_1 = _3728 * _3574.x;
                                frontier_phi_83_pred_2 = _3802 * _3586.z;
                                frontier_phi_83_pred_3 = _3802 * _3586.y;
                                frontier_phi_83_pred_4 = _3802 * _3586.x;
                                frontier_phi_83_pred_5 = _3728 * _3574.z;
                            }
                            else
                            {
                                frontier_phi_83_pred = 0.0;
                                frontier_phi_83_pred_1 = 0.0;
                                frontier_phi_83_pred_2 = 0.0;
                                frontier_phi_83_pred_3 = 0.0;
                                frontier_phi_83_pred_4 = 0.0;
                                frontier_phi_83_pred_5 = 0.0;
                            }
                            _3810 = frontier_phi_83_pred;
                            _3809 = frontier_phi_83_pred_1;
                            _3808 = frontier_phi_83_pred_2;
                            _3807 = frontier_phi_83_pred_3;
                            _3806 = frontier_phi_83_pred_4;
                            _3811 = frontier_phi_83_pred_5;
                            _3516 = _3809 + _3529;
                            _3517 = _3810 + _3530;
                            _3518 = _3811 + _3531;
                            _3513 = _3806 + _3526;
                            _3514 = _3807 + _3527;
                            _3515 = _3808 + _3528;
                            if (_3533 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3526 = _3513;
                                _3527 = _3514;
                                _3528 = _3515;
                                _3529 = _3516;
                                _3530 = _3517;
                                _3531 = _3518;
                                _3532 = _3533;
                                continue;
                            }
                        }
                        frontier_phi_77_pred = _3518;
                        frontier_phi_77_pred_1 = _3517;
                        frontier_phi_77_pred_2 = _3516;
                        frontier_phi_77_pred_3 = _3515;
                        frontier_phi_77_pred_4 = _3514;
                        frontier_phi_77_pred_5 = _3513;
                    }
                    _3155 = frontier_phi_77_pred;
                    _3153 = frontier_phi_77_pred_1;
                    _3151 = frontier_phi_77_pred_2;
                    _3149 = frontier_phi_77_pred_3;
                    _3147 = frontier_phi_77_pred_4;
                    _3145 = frontier_phi_77_pred_5;
                    uint _3311 = _3310 + 1u;
                    if (_3311 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3304 = _3145;
                        _3305 = _3147;
                        _3306 = _3149;
                        _3307 = _3151;
                        _3308 = _3153;
                        _3309 = _3155;
                        _3310 = _3311;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_58_59_ladder = _3149;
                frontier_phi_58_59_ladder_1 = _3155;
                frontier_phi_58_59_ladder_2 = _3153;
                frontier_phi_58_59_ladder_3 = _3151;
                frontier_phi_58_59_ladder_4 = _3147;
                frontier_phi_58_59_ladder_5 = _3145;
            }
            else
            {
                frontier_phi_58_59_ladder = _3027;
                frontier_phi_58_59_ladder_1 = _3033;
                frontier_phi_58_59_ladder_2 = _3031;
                frontier_phi_58_59_ladder_3 = _3029;
                frontier_phi_58_59_ladder_4 = _3025;
                frontier_phi_58_59_ladder_5 = _3023;
            }
            _3144 = frontier_phi_58_59_ladder_5;
            _3146 = frontier_phi_58_59_ladder_4;
            _3148 = frontier_phi_58_59_ladder;
            _3150 = frontier_phi_58_59_ladder_3;
            _3152 = frontier_phi_58_59_ladder_2;
            _3154 = frontier_phi_58_59_ladder_1;
        }
        float _3159 = isnan(1.0) ? _1198 : (isnan(_1198) ? 1.0 : min(_1198, 1.0));
        _2935 = (_3159 * _3150) + _2390;
        _2937 = (_3159 * _3152) + _2392;
        _2939 = (_3159 * _3154) + _2394;
        _2941 = ((_3144 * 0.039999999105930328369140625) * _3159) + _2720;
        _2943 = ((_3146 * 0.039999999105930328369140625) * _3159) + _2722;
        _2945 = ((_3148 * 0.039999999105930328369140625) * _3159) + _2724;
    }
    else
    {
        _2935 = _2390;
        _2937 = _2392;
        _2939 = _2394;
        _2941 = _2720;
        _2943 = _2722;
        _2945 = _2724;
    }
    float _4982 = isnan(0.0) ? _1183 : (isnan(_1183) ? 0.0 : max(_1183, 0.0));
    float _4993 = isnan(0.0) ? _1184 : (isnan(_1184) ? 0.0 : max(_1184, 0.0));
    float _5004 = isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0));
    float _2962 = ((isnan(1.0) ? _4982 : (isnan(_4982) ? 1.0 : min(_4982, 1.0))) * (_2935 + ((isnan(0.0) ? _1953 : (isnan(_1953) ? 0.0 : max(_1953, 0.0))) * _1198))) + ((_2941 + ((isnan(0.0) ? _2243 : (isnan(_2243) ? 0.0 : max(_2243, 0.0))) * _2032)) * cbPerFrame._m0[3u].x);
    float _2963 = ((isnan(1.0) ? _4993 : (isnan(_4993) ? 1.0 : min(_4993, 1.0))) * (_2937 + ((isnan(0.0) ? _1956 : (isnan(_1956) ? 0.0 : max(_1956, 0.0))) * _1198))) + ((_2943 + ((isnan(0.0) ? _2246 : (isnan(_2246) ? 0.0 : max(_2246, 0.0))) * _2032)) * cbPerFrame._m0[3u].x);
    float _2964 = ((isnan(1.0) ? _5004 : (isnan(_5004) ? 1.0 : min(_5004, 1.0))) * (_2939 + ((isnan(0.0) ? _1959 : (isnan(_1959) ? 0.0 : max(_1959, 0.0))) * _1198))) + ((_2945 + ((isnan(0.0) ? _2249 : (isnan(_2249) ? 0.0 : max(_2249, 0.0))) * _2032)) * cbPerFrame._m0[3u].x);
    uint _2965 = _293 + 6u;
    float _2973 = _1135 / cbSceneParam._m0[86u].x;
    float _2974 = _1136 / cbSceneParam._m0[86u].y;
    vec4 _2988 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2973, _2974, (log2((isnan(cbSceneParam._m0[77u].w) ? _1057 : (isnan(_1057) ? cbSceneParam._m0[77u].w : min(_1057, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2990 = _2988.x;
    float _2991 = _2988.y;
    float _2992 = _2988.z;
    float _2993 = _2988.w;
    float _3086;
    float _3088;
    float _3090;
    float _3092;
    if (_1057 > cbSceneParam._m0[78u].w)
    {
        float _3048 = isnan(_1057) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1057 : min(cbSceneParam._m0[80u].w, _1057));
        float _3049 = _3048 / _1057;
        float _3060 = _3049 * _1108;
        float _3061 = _1109 * _3049;
        float _3062 = (-0.0) - _3061;
        float _3064 = _3049 * _1110;
        float _3066 = (cbSceneParam._m0[77u].w * _3062) / _3048;
        float _3067 = _3066 + cbSceneParam._m0[79u].w;
        float _3068 = cbSceneParam._m0[79u].w - _3061;
        float _3074 = sqrt(((_3060 * _3060) + (_3061 * _3061)) + (_3064 * _3064));
        float _3077 = (1.0 - (cbSceneParam._m0[77u].w / _3048)) * _3074;
        float _3082 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3084 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3261;
        if (abs((_3062 - _3066) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3261 = ((((_3067 > 0.0) ? exp2(_3082 * _3067) : (2.0 - exp2(_3084 * _3067))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3077;
        }
        else
        {
            float _3205 = 1.0 / cbSceneParam._m0[80u].x;
            float _3206 = isnan(_3068) ? _3067 : (isnan(_3067) ? _3068 : max(_3067, _3068));
            float _3207 = isnan(_3068) ? _3067 : (isnan(_3067) ? _3068 : min(_3067, _3068));
            float _3216 = isnan(0.0) ? _3206 : (isnan(_3206) ? 0.0 : min(_3206, 0.0));
            float _3217 = isnan(0.0) ? _3207 : (isnan(_3207) ? 0.0 : min(_3207, 0.0));
            _3261 = ((abs(_3074 / _3062) * cbSceneParam._m0[80u].y) * ((((_3216 - _3217) * 2.0) - ((exp2(_3082 * (isnan(0.0) ? _3206 : (isnan(_3206) ? 0.0 : max(_3206, 0.0)))) - exp2(_3082 * (isnan(0.0) ? _3207 : (isnan(_3207) ? 0.0 : max(_3207, 0.0))))) * _3205)) - ((exp2(_3084 * _3216) - exp2(_3084 * _3217)) * _3205))) + (_3077 * cbSceneParam._m0[80u].z);
        }
        vec4 _3263 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2973, _2974, 1.0), 0.0);
        float _3272 = exp2((_3261 * (-1.44269502162933349609375)) * (1.0 - _3263.w));
        float _3273 = log2(_3272);
        float _3289 = log2(_2993);
        _3086 = (exp2(_3289 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3273 * cbSceneParam._m0[78u].x)) * _3263.x) / cbSceneParam._m0[78u].x)) + _2990;
        _3088 = (exp2(_3289 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3273 * cbSceneParam._m0[78u].y)) * _3263.y) / cbSceneParam._m0[78u].y)) + _2991;
        _3090 = (exp2(_3289 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3273 * cbSceneParam._m0[78u].z)) * _3263.z) / cbSceneParam._m0[78u].z)) + _2992;
        _3092 = _3272 * _2993;
    }
    else
    {
        _3086 = _2990;
        _3088 = _2991;
        _3090 = _2992;
        _3092 = _2993;
    }
    bool _3299;
    vec4 _3102;
    vec4 _3124;
    float _3126;
    float _3130;
    float _3131;
    float _3132;
    float _3133;
    bool _3143;
    for (;;)
    {
        _3102 = cbMatDynParam._m0[0u];
        float _3104 = roundEven(_3102.y);
        bool _3105 = _3104 == 3.0;
        float _3106 = log2(_3092);
        float _3113 = exp2(_3106 * cbSceneParam._m0[78u].x) * _2962;
        float _3114 = exp2(_3106 * cbSceneParam._m0[78u].y) * _2963;
        float _3115 = exp2(_3106 * cbSceneParam._m0[78u].z) * _2964;
        float _3122 = _1124 + (-0.5);
        _3124 = cbMtdParam._m0[1u];
        _3126 = _3124.y * _3122;
        float _3129 = (_3104 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3130 = _3129 * (_3105 ? _3113 : (_3113 + (cbSceneParam._m0[72u].w * _3086)));
        _3131 = _3129 * (_3105 ? _3114 : (_3114 + (cbSceneParam._m0[72u].w * _3088)));
        _3132 = _3129 * (_3105 ? _3115 : (_3115 + (cbSceneParam._m0[72u].w * _3090)));
        _3133 = _3122 * 0.999000012874603271484375;
        _3143 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3143)
        {
            if ((cbInstanceData._m0[_293 + 7u].x + _3133) < 0.5)
            {
                _3299 = true;
                break;
            }
        }
        uint _3240 = _1173 + uint(_3102.w);
        if ((cbInstanceData._m0[_3240].w < 1.0) && ((cbInstanceData._m0[_3240].w + _3133) < 0.5))
        {
            _3299 = true;
            break;
        }
        if ((_3126 + 1.0) < _3124.x)
        {
            _3299 = true;
            break;
        }
        _3299 = false;
        break;
    }
    float _3504;
    if (_3299)
    {
        discard_state = true;
        _3504 = 0.0;
    }
    else
    {
        _3504 = cbInstanceData._m0[_2965].w;
    }
    SV_Target.x = _3130;
    SV_Target.y = _3131;
    SV_Target.z = _3132;
    SV_Target.w = _3504;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2965].w;
    discard_exit();
}


