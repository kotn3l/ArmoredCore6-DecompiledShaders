#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _165 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _166 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _167 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _173 = inversesqrt(dot(vec3(_165, _166, _167), vec3(_165, _166, _167)));
    float _174 = _173 * _165;
    float _175 = _173 * _166;
    float _176 = _173 * _167;
    float _180 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _181 = _180 * NORMAL.x;
    float _182 = _180 * NORMAL.y;
    float _183 = _180 * NORMAL.z;
    float _187 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _188 = _187 * TANGENT.x;
    float _189 = _187 * TANGENT.y;
    float _190 = _187 * TANGENT.z;
    uint _193 = uint(roundEven(NORMAL.w)) * 13u;
    uint _198 = _193 + 1u;
    uint _202 = _193 + 2u;
    float _211 = sqrt(((cbInstanceData._m0[_198].x * cbInstanceData._m0[_198].x) + (cbInstanceData._m0[_193].x * cbInstanceData._m0[_193].x)) + (cbInstanceData._m0[_202].x * cbInstanceData._m0[_202].x));
    float _212 = _211 * TEXCOORD.z;
    float _213 = _211 * TEXCOORD.w;
    vec4 _233 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _239 = _233.x * cbMtdParam._m0[11u].x;
    float _240 = _233.y * cbMtdParam._m0[11u].y;
    float _241 = _233.z * cbMtdParam._m0[11u].z;
    vec4 _260 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _212) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _213) + cbTextureTilingScale._m0[5u].w));
    vec4 _313 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _315 = _313.x;
    float _328 = dot(vec4(_315, _313.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _345 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w)).x) * 2.0) - ((((_315 - _328) * cbMtdParam._m0[24u].z) + _328) * cbMtdParam._m0[23u].x))) + 1.0;
    float _789 = isnan(0.0) ? _345 : (isnan(_345) ? 0.0 : max(_345, 0.0));
    float _346 = isnan(1.0) ? _789 : (isnan(_789) ? 1.0 : min(_789, 1.0));
    float _353 = (_346 * ((_260.x * cbMtdParam._m0[12u].x) - _239)) + _239;
    float _354 = (_346 * ((_260.y * cbMtdParam._m0[12u].y) - _240)) + _240;
    float _355 = (_346 * ((_260.z * cbMtdParam._m0[12u].z) - _241)) + _241;
    vec4 _374 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _212) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _213) + cbTextureTilingScale._m0[14u].w));
    vec4 _394 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _212) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _213) + cbTextureTilingScale._m0[4u].w));
    vec4 _411 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _413 = _411.x;
    float _414 = _411.y;
    float _415 = _411.z;
    float _424 = ((_394.z - _415) * _346) + _415;
    float _427 = ((((_394.x - _413) * _346) + _413) * 2.0) + (-1.0);
    float _429 = ((((_394.y - _414) * _346) + _414) * 2.0) + (-1.0);
    float _430 = dot(vec2(_427, _429), vec2(_427, _429));
    float _800 = isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : max(_430, 0.0));
    float _435 = sqrt(1.0 - (isnan(1.0) ? _800 : (isnan(_800) ? 1.0 : min(_800, 1.0))));
    vec4 _451 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _463 = (((_451.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _427;
    float _464 = (((_451.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _429;
    float _467 = fma(_435, _181, fma(_464, _188, _463 * _174));
    float _470 = fma(_435, _182, fma(_464, _189, _463 * _175));
    float _473 = fma(_435, _183, fma(_464, _190, _463 * _176));
    float _477 = inversesqrt(dot(vec3(_467, _470, _473), vec3(_467, _470, _473)));
    vec4 _504 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _212) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _213) + cbTextureTilingScale._m0[11u].w));
    float _506 = _504.x;
    float _507 = 1.0 - _506;
    float _513 = (cbMtdParam._m0[19u].x + dot(vec4(_477 * _467, _477 * _470, _477 * _473, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_506 - _507) * cbMtdParam._m0[24u].w) + _507) * cbMtdParam._m0[21u].z);
    float _811 = isnan(0.0) ? _513 : (isnan(_513) ? 0.0 : max(_513, 0.0));
    float _514 = isnan(1.0) ? _811 : (isnan(_811) ? 1.0 : min(_811, 1.0));
    float _516 = (-0.0) - cbMtdParam._m0[24u].x;
    float _518 = isnan(0.0) ? _516 : (isnan(_516) ? 0.0 : max(_516, 0.0));
    float _519 = isnan(1.0) ? _518 : (isnan(_518) ? 1.0 : min(_518, 1.0));
    float _526 = _514 - ((_514 * TEXCOORD_8.x) * _519);
    float _527 = _514 - ((_514 * TEXCOORD_8.y) * _519);
    float _528 = _514 - ((_514 * TEXCOORD_8.z) * _519);
    float _535 = (_526 * ((_374.x * cbMtdParam._m0[18u].x) - _353)) + _353;
    float _536 = (_527 * ((_374.y * cbMtdParam._m0[18u].y) - _354)) + _354;
    float _537 = (_528 * ((_374.z * cbMtdParam._m0[18u].z) - _355)) + _355;
    vec4 _549 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _212) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _213) + cbTextureTilingScale._m0[19u].w));
    float _551 = _549.x;
    float _552 = 1.0 - _551;
    float _580 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_551 - _552) * cbMtdParam._m0[24u].y) + _552) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _832 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
    float _581 = isnan(1.0) ? _832 : (isnan(_832) ? 1.0 : min(_832, 1.0));
    float _589 = ((((cbMtdParam._m0[10u].x - _535) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _581) + _535;
    float _590 = ((((cbMtdParam._m0[10u].y - _536) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _581) + _536;
    float _591 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _537)) * _581) + _537;
    float _595 = (cbMtdParam._m0[19u].w * (_451.z - _424)) + _424;
    vec4 _609 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _212) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _213) + cbTextureTilingScale._m0[15u].w));
    float _616 = (_609.x * 2.0) + (-1.0);
    float _617 = (_609.y * 2.0) + (-1.0);
    float _618 = dot(vec2(_616, _617), vec2(_616, _617));
    float _843 = isnan(0.0) ? _618 : (isnan(_618) ? 0.0 : max(_618, 0.0));
    float _626 = ((_609.z - _595) * _526) + _595;
    float _629 = ((cbMtdParam._m0[23u].y - _626) * _581) + _626;
    vec4 _648 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _212) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _213) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _654 = (_648.x * 2.0) + (-1.0);
    float _655 = (_648.y * 2.0) + (-1.0);
    float _656 = dot(vec2(_654, _655), vec2(_654, _655));
    float _854 = isnan(0.0) ? _656 : (isnan(_656) ? 0.0 : max(_656, 0.0));
    float _671 = ((sqrt(1.0 - (isnan(1.0) ? _843 : (isnan(_843) ? 1.0 : min(_843, 1.0)))) - _435) * _528) + _435;
    float _674 = (((_616 - _463) * _526) + _463) + (cbMtdParam._m0[21u].x * _463);
    float _675 = (((_617 - _464) * _527) + _464) + (cbMtdParam._m0[21u].x * _464);
    float _686 = (((_654 - _674) + (_674 * cbMtdParam._m0[22u].z)) * _581) + _674;
    float _687 = (((_655 - _675) + (_675 * cbMtdParam._m0[22u].z)) * _581) + _675;
    float _688 = (_581 * (sqrt(1.0 - (isnan(1.0) ? _854 : (isnan(_854) ? 1.0 : min(_854, 1.0)))) - _671)) + _671;
    float _690 = cbMtdParam._m0[22u].x + _451.w;
    float _693 = fma(_688, _181, fma(_687, _188, _686 * _174));
    float _696 = fma(_688, _182, fma(_687, _189, _686 * _175));
    float _699 = fma(_688, _183, fma(_687, _190, _686 * _176));
    float _703 = inversesqrt(dot(vec3(_693, _696, _699), vec3(_693, _696, _699)));
    float _865 = isnan(0.0) ? _629 : (isnan(_629) ? 0.0 : max(_629, 0.0));
    float _876 = isnan(0.0) ? _690 : (isnan(_690) ? 0.0 : max(_690, 0.0));
    float _887 = isnan(0.0) ? _589 : (isnan(_589) ? 0.0 : max(_589, 0.0));
    float _898 = isnan(0.0) ? _590 : (isnan(_590) ? 0.0 : max(_590, 0.0));
    float _909 = isnan(0.0) ? _591 : (isnan(_591) ? 0.0 : max(_591, 0.0));
    uint _723 = (_193 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _729 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _887 : (isnan(_887) ? 1.0 : min(_887, 1.0)))) * cbInstanceData._m0[_723].x;
    float _730 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _898 : (isnan(_898) ? 1.0 : min(_898, 1.0)))) * cbInstanceData._m0[_723].y;
    float _731 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _909 : (isnan(_909) ? 1.0 : min(_909, 1.0)))) * cbInstanceData._m0[_723].z;
    float _920 = isnan(0.0) ? _729 : (isnan(_729) ? 0.0 : max(_729, 0.0));
    float _931 = isnan(0.0) ? _730 : (isnan(_730) ? 0.0 : max(_730, 0.0));
    float _942 = isnan(0.0) ? _731 : (isnan(_731) ? 0.0 : max(_731, 0.0));
    uint _736 = _193 + 6u;
    bool _763 = cbMtdParam._m0[1u].z != 0.0;
    float _764 = _763 ? cbInstanceData._m0[_736].w : 0.0;
    SV_Target.x = ((_693 * 0.5) * _703) + 0.500488758087158203125;
    SV_Target.y = ((_696 * 0.5) * _703) + 0.500488758087158203125;
    SV_Target.z = ((_699 * 0.5) * _703) + 0.500488758087158203125;
    SV_Target.w = _764;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _865 : (isnan(_865) ? 1.0 : min(_865, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _763 ? cbInstanceData._m0[_736].w : ((isnan(1.0) ? _876 : (isnan(_876) ? 1.0 : min(_876, 1.0))) * TEXCOORD_5.w);
    SV_Target_2.x = isnan(1.0) ? _920 : (isnan(_920) ? 1.0 : min(_920, 1.0));
    SV_Target_2.y = isnan(1.0) ? _931 : (isnan(_931) ? 1.0 : min(_931, 1.0));
    SV_Target_2.z = isnan(1.0) ? _942 : (isnan(_942) ? 1.0 : min(_942, 1.0));
    SV_Target_2.w = _763 ? cbInstanceData._m0[_736].w : (float(floatBitsToUint(cbInstanceData._m0[_193 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _764;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _764;
}


