#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1146;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _213 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _214 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _215 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _221 = inversesqrt(dot(vec3(_213, _214, _215), vec3(_213, _214, _215)));
    float _228 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _235 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _249 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _251 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _252 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3737 = isnan(0.0) ? _249 : (isnan(_249) ? 0.0 : max(_249, 0.0));
    float _3748 = isnan(0.0) ? _251 : (isnan(_251) ? 0.0 : max(_251, 0.0));
    float _3759 = isnan(0.0) ? _252 : (isnan(_252) ? 0.0 : max(_252, 0.0));
    uint _262 = uint(roundEven(NORMAL.w)) * 13u;
    uint _267 = _262 + 1u;
    uint _271 = _262 + 2u;
    float _280 = sqrt(((cbInstanceData._m0[_267].x * cbInstanceData._m0[_267].x) + (cbInstanceData._m0[_262].x * cbInstanceData._m0[_262].x)) + (cbInstanceData._m0[_271].x * cbInstanceData._m0[_271].x));
    float _281 = _280 * TEXCOORD.z;
    float _282 = _280 * TEXCOORD.w;
    vec4 _295 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _281) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _282) + cbTextureTilingScale._m0[13u].w));
    vec4 _318 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _344 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _349 = _344.x * cbMtdParam._m0[11u].x;
    float _350 = _344.y * cbMtdParam._m0[11u].y;
    float _351 = _344.z * cbMtdParam._m0[11u].z;
    vec4 _370 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _281) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _282) + cbTextureTilingScale._m0[5u].w));
    vec4 _421 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _423 = _421.x;
    float _435 = dot(vec4(_423, _421.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _452 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w)).x) * 2.0) - ((((_423 - _435) * cbMtdParam._m0[24u].z) + _435) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3770 = isnan(0.0) ? _452 : (isnan(_452) ? 0.0 : max(_452, 0.0));
    float _453 = isnan(1.0) ? _3770 : (isnan(_3770) ? 1.0 : min(_3770, 1.0));
    float _463 = (_318.x * cbMtdParam._m0[9u].x) * ((_453 * ((_370.x * cbMtdParam._m0[12u].x) - _349)) + _349);
    float _464 = (_318.y * cbMtdParam._m0[9u].y) * ((_453 * ((_370.y * cbMtdParam._m0[12u].y) - _350)) + _350);
    float _465 = (_318.z * cbMtdParam._m0[9u].z) * ((_453 * ((_370.z * cbMtdParam._m0[12u].z) - _351)) + _351);
    float _469 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _295.x) * _463;
    float _472 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _295.y) * _464;
    float _475 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _295.z) * _465;
    float _483 = (((_463 - _469) * (isnan(1.0) ? _3737 : (isnan(_3737) ? 1.0 : min(_3737, 1.0)))) + _469) * 4.55000019073486328125;
    float _485 = (((_464 - _472) * (isnan(1.0) ? _3748 : (isnan(_3748) ? 1.0 : min(_3748, 1.0)))) + _472) * 4.55000019073486328125;
    float _487 = (((_465 - _475) * (isnan(1.0) ? _3759 : (isnan(_3759) ? 1.0 : min(_3759, 1.0)))) + _475) * 4.55000019073486328125;
    vec4 _500 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _281) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _282) + cbTextureTilingScale._m0[20u].w));
    vec4 _525 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _281) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _282) + cbTextureTilingScale._m0[4u].w));
    vec4 _542 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _544 = _542.x;
    float _545 = _542.y;
    float _546 = _542.z;
    float _555 = ((_525.z - _546) * _453) + _546;
    float _558 = ((((_525.x - _544) * _453) + _544) * 2.0) + (-1.0);
    float _559 = ((((_525.y - _545) * _453) + _545) * 2.0) + (-1.0);
    float _560 = dot(vec2(_558, _559), vec2(_558, _559));
    float _3781 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
    float _565 = sqrt(1.0 - (isnan(1.0) ? _3781 : (isnan(_3781) ? 1.0 : min(_3781, 1.0))));
    vec4 _587 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _599 = (_558 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_500.x * 2.0) + (-1.0)))) + (((_587.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _600 = (_559 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_500.y * 2.0) + (-1.0)))) + (((_587.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _605 = (((_500.z - _555) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _555;
    float _609 = ((_587.z - _605) * cbMtdParam._m0[19u].w) + _605;
    float _611 = cbMtdParam._m0[22u].x + _587.w;
    float _614 = fma(_565, _228 * NORMAL.x, fma(_600, _235 * TANGENT.x, (_221 * _213) * _599));
    float _617 = fma(_565, _228 * NORMAL.y, fma(_600, _235 * TANGENT.y, (_221 * _214) * _599));
    float _620 = fma(_565, _228 * NORMAL.z, fma(_600, _235 * TANGENT.z, (_221 * _215) * _599));
    float _624 = inversesqrt(dot(vec3(_614, _617, _620), vec3(_614, _617, _620)));
    float _625 = _624 * _614;
    float _626 = _624 * _617;
    float _627 = _624 * _620;
    float _3792 = isnan(0.0) ? _609 : (isnan(_609) ? 0.0 : max(_609, 0.0));
    float _628 = isnan(1.0) ? _3792 : (isnan(_3792) ? 1.0 : min(_3792, 1.0));
    float _3803 = isnan(0.0) ? _611 : (isnan(_611) ? 0.0 : max(_611, 0.0));
    float _3814 = isnan(0.0) ? _483 : (isnan(_483) ? 0.0 : max(_483, 0.0));
    float _3825 = isnan(0.0) ? _485 : (isnan(_485) ? 0.0 : max(_485, 0.0));
    float _3836 = isnan(0.0) ? _487 : (isnan(_487) ? 0.0 : max(_487, 0.0));
    float _646 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _687 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _697 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _687);
    float _698 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _687);
    float _699 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _687);
    float _703 = inversesqrt(dot(vec3(_697, _698, _699), vec3(_697, _698, _699)));
    float _704 = _697 * _703;
    float _705 = _698 * _703;
    float _706 = _699 * _703;
    float _712 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _713 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _731 = fma(_627, cbSceneParam._m0[5u].z, fma(_626, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _625));
    float _734 = fma(_627, cbSceneParam._m0[6u].z, fma(_626, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _625));
    float _737 = fma(_627, cbSceneParam._m0[7u].z, fma(_626, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _625));
    uint _751 = (_262 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _757 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3814 : (isnan(_3814) ? 1.0 : min(_3814, 1.0)))) * cbInstanceData._m0[_751].x;
    float _758 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3825 : (isnan(_3825) ? 1.0 : min(_3825, 1.0)))) * cbInstanceData._m0[_751].y;
    float _759 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3836 : (isnan(_3836) ? 1.0 : min(_3836, 1.0)))) * cbInstanceData._m0[_751].z;
    float _3847 = isnan(0.0) ? _757 : (isnan(_757) ? 0.0 : max(_757, 0.0));
    float _760 = isnan(1.0) ? _3847 : (isnan(_3847) ? 1.0 : min(_3847, 1.0));
    float _3858 = isnan(0.0) ? _758 : (isnan(_758) ? 0.0 : max(_758, 0.0));
    float _761 = isnan(1.0) ? _3858 : (isnan(_3858) ? 1.0 : min(_3858, 1.0));
    float _3869 = isnan(0.0) ? _759 : (isnan(_759) ? 0.0 : max(_759, 0.0));
    float _762 = isnan(1.0) ? _3869 : (isnan(_3869) ? 1.0 : min(_3869, 1.0));
    vec4 _771 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _712, cbSceneParam._m0[86u].y * _713));
    float _775 = ((isnan(1.0) ? _3803 : (isnan(_3803) ? 1.0 : min(_3803, 1.0))) * TEXCOORD_5.w) * _771.x;
    float _776 = dot(vec3(_625, _626, _627), vec3(_704, _705, _706));
    float _779 = _776 * 2.0;
    float _783 = (_779 * _625) - _704;
    float _784 = (_779 * _626) - _705;
    float _785 = (_779 * _627) - _706;
    float _789 = abs(dot(vec3(_704, _705, _706), vec3(_625, _626, _627)));
    float _3880 = isnan(0.0) ? _789 : (isnan(_789) ? 0.0 : max(_789, 0.0));
    float _791 = sqrt(_628);
    float _804 = exp2((_791 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3880 : (isnan(_3880) ? 1.0 : min(_3880, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_791 * 3.0));
    float _836 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _840 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _844 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1145;
    float _1147;
    float _1148;
    float _1149;
    float _1150;
    float _1151;
    float _1152;
    float _1153;
    float _1154;
    float _1155;
    float _1156;
    float _1157;
    float _1158;
    float _1159;
    float _1160;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _870 = fma(_844, cbModelParam._m0[26u].z, fma(_840, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _836));
        float _874 = fma(_844, cbModelParam._m0[27u].z, fma(_840, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _836));
        float _878 = fma(_844, cbModelParam._m0[28u].z, fma(_840, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _836));
        float _903 = _836 + _625;
        float _904 = _840 + _626;
        float _905 = _844 + _627;
        float _915 = fma(_905, cbModelParam._m0[26u].z, fma(_904, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _903)) - _870;
        float _916 = fma(_905, cbModelParam._m0[27u].z, fma(_904, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _903)) - _874;
        float _917 = fma(_905, cbModelParam._m0[28u].z, fma(_904, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _903)) - _878;
        float _921 = inversesqrt(dot(vec3(_915, _916, _917), vec3(_915, _916, _917)));
        float _934 = ((_921 * _915) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_870 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _935 = ((_921 * _916) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_874 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _936 = ((_921 * _917) / cbModelParam._m0[34u].z) + ((((((_878 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _939 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_934, _935, _936), 0.0);
        vec4 _946 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_934, _935, _936), 0.0);
        vec4 _953 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_934, _935, _936), 0.0);
        vec4 _960 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_934, _935, _936), 0.0);
        float _973 = exp2((_939.w + (-0.5)) * 20.0) * 2.0;
        float _974 = _973 * (_939.x + (-0.5));
        float _975 = _973 * (_939.y + (-0.5));
        float _976 = _973 * (_939.z + (-0.5));
        float _983 = exp2((_946.w + (-0.5)) * 20.0) * 2.0;
        float _984 = _983 * (_946.x + (-0.5));
        float _985 = _983 * (_946.y + (-0.5));
        float _986 = _983 * (_946.z + (-0.5));
        float _993 = exp2((_953.w + (-0.5)) * 20.0) * 2.0;
        float _994 = _993 * (_953.x + (-0.5));
        float _995 = _993 * (_953.y + (-0.5));
        float _996 = _993 * (_953.z + (-0.5));
        float _1003 = exp2((_960.w + (-0.5)) * 20.0) * 2.0;
        float _1004 = _1003 * (_960.x + (-0.5));
        float _1005 = _1003 * (_960.y + (-0.5));
        float _1006 = _1003 * (_960.z + (-0.5));
        float _1007 = isnan(0.0) ? _1004 : (isnan(_1004) ? 0.0 : max(_1004, 0.0));
        float _1008 = isnan(0.0) ? _1005 : (isnan(_1005) ? 0.0 : max(_1005, 0.0));
        float _1009 = isnan(0.0) ? _1006 : (isnan(_1006) ? 0.0 : max(_1006, 0.0));
        float _1010 = _974 * 0.5;
        float _1011 = _984 * 0.5;
        float _1012 = _994 * 0.5;
        float _1013 = dot(vec3(_1010, _1011, _1012), vec3(_1010, _1011, _1012));
        float _1018 = (_1013 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1013);
        float _1027 = (dot(vec3(_625, _626, _627), vec3(_1018 * _1010, _1018 * _1011, _1018 * _1012)) + 1.0) * 0.5;
        float _3906 = isnan(0.0) ? _1027 : (isnan(_1027) ? 0.0 : max(_1027, 0.0));
        float _1037 = sqrt(((_1011 * _1011) + (_1010 * _1010)) + (_1012 * _1012)) / (_1007 + 9.9999997473787516355514526367188e-06);
        float _3917 = isnan(0.0) ? _1037 : (isnan(_1037) ? 0.0 : max(_1037, 0.0));
        float _1038 = isnan(1.0) ? _3917 : (isnan(_3917) ? 1.0 : min(_3917, 1.0));
        float _1039 = _1038 * 2.0;
        float _1043 = (1.0 - _1038) / (_1038 + 1.0);
        float _3928 = isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0));
        float _1044 = isnan(1.0) ? _3928 : (isnan(_3928) ? 1.0 : min(_3928, 1.0));
        float _1053 = ((((1.0 - _1044) * (_1039 + 2.0)) * exp2(log2(isnan(1.0) ? _3906 : (isnan(_3906) ? 1.0 : min(_3906, 1.0))) * (_1039 + 1.0))) + _1044) * _1007;
        float _1054 = _975 * 0.5;
        float _1055 = _985 * 0.5;
        float _1056 = _995 * 0.5;
        float _1057 = dot(vec3(_1054, _1055, _1056), vec3(_1054, _1055, _1056));
        float _1062 = (_1057 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1057);
        float _1070 = (dot(vec3(_625, _626, _627), vec3(_1062 * _1054, _1062 * _1055, _1062 * _1056)) + 1.0) * 0.5;
        float _3939 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
        float _1079 = sqrt(((_1055 * _1055) + (_1054 * _1054)) + (_1056 * _1056)) / (_1008 + 9.9999997473787516355514526367188e-06);
        float _3950 = isnan(0.0) ? _1079 : (isnan(_1079) ? 0.0 : max(_1079, 0.0));
        float _1080 = isnan(1.0) ? _3950 : (isnan(_3950) ? 1.0 : min(_3950, 1.0));
        float _1081 = _1080 * 2.0;
        float _1085 = (1.0 - _1080) / (_1080 + 1.0);
        float _3961 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
        float _1086 = isnan(1.0) ? _3961 : (isnan(_3961) ? 1.0 : min(_3961, 1.0));
        float _1095 = ((((1.0 - _1086) * (_1081 + 2.0)) * exp2(log2(isnan(1.0) ? _3939 : (isnan(_3939) ? 1.0 : min(_3939, 1.0))) * (_1081 + 1.0))) + _1086) * _1008;
        float _1096 = _976 * 0.5;
        float _1097 = _986 * 0.5;
        float _1098 = _996 * 0.5;
        float _1099 = dot(vec3(_1096, _1097, _1098), vec3(_1096, _1097, _1098));
        float _1104 = (_1099 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1099);
        float _1112 = (dot(vec3(_625, _626, _627), vec3(_1104 * _1096, _1104 * _1097, _1104 * _1098)) + 1.0) * 0.5;
        float _3972 = isnan(0.0) ? _1112 : (isnan(_1112) ? 0.0 : max(_1112, 0.0));
        float _1121 = sqrt(((_1097 * _1097) + (_1096 * _1096)) + (_1098 * _1098)) / (_1009 + 9.9999997473787516355514526367188e-06);
        float _3983 = isnan(0.0) ? _1121 : (isnan(_1121) ? 0.0 : max(_1121, 0.0));
        float _1122 = isnan(1.0) ? _3983 : (isnan(_3983) ? 1.0 : min(_3983, 1.0));
        float _1123 = _1122 * 2.0;
        float _1127 = (1.0 - _1122) / (_1122 + 1.0);
        float _3994 = isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0));
        float _1128 = isnan(1.0) ? _3994 : (isnan(_3994) ? 1.0 : min(_3994, 1.0));
        float _1137 = ((((1.0 - _1128) * (_1123 + 2.0)) * exp2(log2(isnan(1.0) ? _3972 : (isnan(_3972) ? 1.0 : min(_3972, 1.0))) * (_1123 + 1.0))) + _1128) * _1009;
        _1145 = _976;
        _1147 = _975;
        _1148 = _974;
        _1149 = _986;
        _1150 = _985;
        _1151 = _984;
        _1152 = _996;
        _1153 = _995;
        _1154 = _994;
        _1155 = _1009;
        _1156 = _1008;
        _1157 = _1007;
        _1158 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1053 : (isnan(_1053) ? 0.0 : max(_1053, 0.0)));
        _1159 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1095 : (isnan(_1095) ? 0.0 : max(_1095, 0.0)));
        _1160 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1137 : (isnan(_1137) ? 0.0 : max(_1137, 0.0)));
    }
    else
    {
        _1145 = _1146;
        _1147 = _1146;
        _1148 = _1146;
        _1149 = _1146;
        _1150 = _1146;
        _1151 = _1146;
        _1152 = _1146;
        _1153 = _1146;
        _1154 = _1146;
        _1155 = _1146;
        _1156 = _1146;
        _1157 = _1146;
        _1158 = 0.0;
        _1159 = 0.0;
        _1160 = 0.0;
    }
    float _1454;
    float _1455;
    float _1456;
    float _1457;
    float _1458;
    float _1459;
    float _1460;
    float _1461;
    float _1462;
    float _1463;
    float _1464;
    float _1465;
    float _1466;
    float _1467;
    float _1468;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1185 = fma(_844, cbModelParam._m0[30u].z, fma(_840, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _836));
        float _1189 = fma(_844, cbModelParam._m0[31u].z, fma(_840, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _836));
        float _1193 = fma(_844, cbModelParam._m0[32u].z, fma(_840, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _836));
        float _1216 = _836 + _625;
        float _1217 = _840 + _626;
        float _1218 = _844 + _627;
        float _1228 = fma(_1218, cbModelParam._m0[30u].z, fma(_1217, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1216)) - _1185;
        float _1229 = fma(_1218, cbModelParam._m0[31u].z, fma(_1217, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1216)) - _1189;
        float _1230 = fma(_1218, cbModelParam._m0[32u].z, fma(_1217, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1216)) - _1193;
        float _1234 = inversesqrt(dot(vec3(_1228, _1229, _1230), vec3(_1228, _1229, _1230)));
        float _1247 = ((_1234 * _1228) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1185 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1248 = ((_1234 * _1229) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1189 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1249 = ((_1234 * _1230) / cbModelParam._m0[35u].z) + ((((((_1193 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1251 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1247, _1248, _1249), 0.0);
        vec4 _1258 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1247, _1248, _1249), 0.0);
        vec4 _1265 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1247, _1248, _1249), 0.0);
        vec4 _1272 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1247, _1248, _1249), 0.0);
        float _1284 = exp2((_1251.w + (-0.5)) * 20.0) * 2.0;
        float _1285 = _1284 * (_1251.x + (-0.5));
        float _1286 = _1284 * (_1251.y + (-0.5));
        float _1287 = _1284 * (_1251.z + (-0.5));
        float _1294 = exp2((_1258.w + (-0.5)) * 20.0) * 2.0;
        float _1295 = _1294 * (_1258.x + (-0.5));
        float _1296 = _1294 * (_1258.y + (-0.5));
        float _1297 = _1294 * (_1258.z + (-0.5));
        float _1304 = exp2((_1265.w + (-0.5)) * 20.0) * 2.0;
        float _1305 = _1304 * (_1265.x + (-0.5));
        float _1306 = _1304 * (_1265.y + (-0.5));
        float _1307 = _1304 * (_1265.z + (-0.5));
        float _1314 = exp2((_1272.w + (-0.5)) * 20.0) * 2.0;
        float _1315 = _1314 * (_1272.x + (-0.5));
        float _1316 = _1314 * (_1272.y + (-0.5));
        float _1317 = _1314 * (_1272.z + (-0.5));
        float _1318 = isnan(0.0) ? _1315 : (isnan(_1315) ? 0.0 : max(_1315, 0.0));
        float _1319 = isnan(0.0) ? _1316 : (isnan(_1316) ? 0.0 : max(_1316, 0.0));
        float _1320 = isnan(0.0) ? _1317 : (isnan(_1317) ? 0.0 : max(_1317, 0.0));
        float _1321 = _1285 * 0.5;
        float _1322 = _1295 * 0.5;
        float _1323 = _1305 * 0.5;
        float _1324 = dot(vec3(_1321, _1322, _1323), vec3(_1321, _1322, _1323));
        float _1329 = (_1324 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1324);
        float _1337 = (dot(vec3(_625, _626, _627), vec3(_1329 * _1321, _1329 * _1322, _1329 * _1323)) + 1.0) * 0.5;
        float _4035 = isnan(0.0) ? _1337 : (isnan(_1337) ? 0.0 : max(_1337, 0.0));
        float _1346 = sqrt(((_1322 * _1322) + (_1321 * _1321)) + (_1323 * _1323)) / (_1318 + 9.9999997473787516355514526367188e-06);
        float _4046 = isnan(0.0) ? _1346 : (isnan(_1346) ? 0.0 : max(_1346, 0.0));
        float _1347 = isnan(1.0) ? _4046 : (isnan(_4046) ? 1.0 : min(_4046, 1.0));
        float _1348 = _1347 * 2.0;
        float _1352 = (1.0 - _1347) / (_1347 + 1.0);
        float _4057 = isnan(0.0) ? _1352 : (isnan(_1352) ? 0.0 : max(_1352, 0.0));
        float _1353 = isnan(1.0) ? _4057 : (isnan(_4057) ? 1.0 : min(_4057, 1.0));
        float _1362 = ((((1.0 - _1353) * (_1348 + 2.0)) * exp2(log2(isnan(1.0) ? _4035 : (isnan(_4035) ? 1.0 : min(_4035, 1.0))) * (_1348 + 1.0))) + _1353) * _1318;
        float _1363 = _1286 * 0.5;
        float _1364 = _1296 * 0.5;
        float _1365 = _1306 * 0.5;
        float _1366 = dot(vec3(_1363, _1364, _1365), vec3(_1363, _1364, _1365));
        float _1371 = (_1366 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1366);
        float _1379 = (dot(vec3(_625, _626, _627), vec3(_1371 * _1363, _1371 * _1364, _1371 * _1365)) + 1.0) * 0.5;
        float _4068 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1388 = sqrt(((_1364 * _1364) + (_1363 * _1363)) + (_1365 * _1365)) / (_1319 + 9.9999997473787516355514526367188e-06);
        float _4079 = isnan(0.0) ? _1388 : (isnan(_1388) ? 0.0 : max(_1388, 0.0));
        float _1389 = isnan(1.0) ? _4079 : (isnan(_4079) ? 1.0 : min(_4079, 1.0));
        float _1390 = _1389 * 2.0;
        float _1394 = (1.0 - _1389) / (_1389 + 1.0);
        float _4090 = isnan(0.0) ? _1394 : (isnan(_1394) ? 0.0 : max(_1394, 0.0));
        float _1395 = isnan(1.0) ? _4090 : (isnan(_4090) ? 1.0 : min(_4090, 1.0));
        float _1404 = ((((1.0 - _1395) * (_1390 + 2.0)) * exp2(log2(isnan(1.0) ? _4068 : (isnan(_4068) ? 1.0 : min(_4068, 1.0))) * (_1390 + 1.0))) + _1395) * _1319;
        float _1405 = _1287 * 0.5;
        float _1406 = _1297 * 0.5;
        float _1407 = _1307 * 0.5;
        float _1408 = dot(vec3(_1405, _1406, _1407), vec3(_1405, _1406, _1407));
        float _1413 = (_1408 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1408);
        float _1421 = (dot(vec3(_625, _626, _627), vec3(_1413 * _1405, _1413 * _1406, _1413 * _1407)) + 1.0) * 0.5;
        float _4101 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
        float _1430 = sqrt(((_1406 * _1406) + (_1405 * _1405)) + (_1407 * _1407)) / (_1320 + 9.9999997473787516355514526367188e-06);
        float _4112 = isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0));
        float _1431 = isnan(1.0) ? _4112 : (isnan(_4112) ? 1.0 : min(_4112, 1.0));
        float _1432 = _1431 * 2.0;
        float _1436 = (1.0 - _1431) / (_1431 + 1.0);
        float _4123 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
        float _1437 = isnan(1.0) ? _4123 : (isnan(_4123) ? 1.0 : min(_4123, 1.0));
        float _1446 = ((((1.0 - _1437) * (_1432 + 2.0)) * exp2(log2(isnan(1.0) ? _4101 : (isnan(_4101) ? 1.0 : min(_4101, 1.0))) * (_1432 + 1.0))) + _1437) * _1320;
        _1454 = _1287;
        _1455 = _1286;
        _1456 = _1285;
        _1457 = _1297;
        _1458 = _1296;
        _1459 = _1295;
        _1460 = _1307;
        _1461 = _1306;
        _1462 = _1305;
        _1463 = _1320;
        _1464 = _1319;
        _1465 = _1318;
        _1466 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1362 : (isnan(_1362) ? 0.0 : max(_1362, 0.0)));
        _1467 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0)));
        _1468 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0)));
    }
    else
    {
        _1454 = _1146;
        _1455 = _1146;
        _1456 = _1146;
        _1457 = _1146;
        _1458 = _1146;
        _1459 = _1146;
        _1460 = _1146;
        _1461 = _1146;
        _1462 = _1146;
        _1463 = _1146;
        _1464 = _1146;
        _1465 = _1146;
        _1466 = 0.0;
        _1467 = 0.0;
        _1468 = 0.0;
    }
    float _1478 = (cbModelParam._m0[1u].x * (_1466 - _1158)) + _1158;
    float _1479 = (cbModelParam._m0[1u].x * (_1467 - _1159)) + _1159;
    float _1480 = (cbModelParam._m0[1u].x * (_1468 - _1160)) + _1160;
    float _1501 = fma(_1480, cbSceneParam._m0[89u].z, fma(_1479, cbSceneParam._m0[89u].y, _1478 * cbSceneParam._m0[89u].x));
    float _1504 = fma(_1480, cbSceneParam._m0[90u].z, fma(_1479, cbSceneParam._m0[90u].y, _1478 * cbSceneParam._m0[90u].x));
    float _1507 = fma(_1480, cbSceneParam._m0[91u].z, fma(_1479, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1478));
    float _1522 = _783 * 0.5;
    float _1523 = _784 * 0.5;
    float _1524 = _785 * 0.5;
    float _1525 = dot(vec4(_1522, _1523, _1524, 1.0), vec4(_1456, _1459, _1462, _1465));
    float _1528 = dot(vec4(_1522, _1523, _1524, 1.0), vec4(_1455, _1458, _1461, _1464));
    float _1531 = dot(vec4(_1522, _1523, _1524, 1.0), vec4(_1454, _1457, _1460, _1463));
    float _1565;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1538 = dot(vec4(_1522, _1523, _1524, 1.0), vec4(_1145, _1149, _1152, _1155));
        float _1542 = dot(vec4(_1522, _1523, _1524, 1.0), vec4(_1147, _1150, _1153, _1156));
        float _1546 = dot(vec4(_1522, _1523, _1524, 1.0), vec4(_1148, _1151, _1154, _1157));
        float _1553 = dot(vec4(cbModelParam._m0[39u]), vec4(_1522, _1523, _1524, 1.0));
        _1565 = dot(vec3(isnan(0.0) ? _1546 : (isnan(_1546) ? 0.0 : max(_1546, 0.0)), isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0)), isnan(0.0) ? _1538 : (isnan(_1538) ? 0.0 : max(_1538, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1553) ? 0.0 : (isnan(0.0) ? _1553 : max(0.0, _1553))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1565 = 1.0;
    }
    float _1576;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1567 = dot(vec4(cbModelParam._m0[40u]), vec4(_1522, _1523, _1524, 1.0));
        _1576 = dot(vec3(isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0)), isnan(0.0) ? _1528 : (isnan(_1528) ? 0.0 : max(_1528, 0.0)), isnan(0.0) ? _1531 : (isnan(_1531) ? 0.0 : max(_1531, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1567) ? 0.0 : (isnan(0.0) ? _1567 : max(0.0, _1567))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1576 = 1.0;
    }
    float _1580 = (_1576 * cbModelParam._m0[1u].x) + (_1565 * (1.0 - cbModelParam._m0[1u].x));
    float _1590 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _628);
    float _1591 = isnan(_1590) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1590 : min(cbModelParam._m0[25u].z, _1590));
    float _1673;
    float _1675;
    float _1677;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1640 = fma(_844, cbModelParam._m0[13u].z, fma(_840, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _836)) + cbModelParam._m0[13u].w;
        float _1644 = fma(_844, cbModelParam._m0[14u].z, fma(_840, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _836)) + cbModelParam._m0[14u].w;
        float _1648 = fma(_844, cbModelParam._m0[15u].z, fma(_840, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _836)) + cbModelParam._m0[15u].w;
        float _1651 = fma(_785, cbModelParam._m0[13u].z, fma(_784, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _783));
        float _1654 = fma(_785, cbModelParam._m0[14u].z, fma(_784, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _783));
        float _1657 = fma(_785, cbModelParam._m0[15u].z, fma(_784, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _783));
        float _1685;
        if (_1651 > 0.0)
        {
            _1685 = abs((1.0 - _1640) / _1651);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1651 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1640 + 1.0) / _1651);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1685 = frontier_phi_14_12_ladder;
        }
        float _1856;
        if (_1654 > 0.0)
        {
            _1856 = abs((1.0 - _1644) / _1654);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1654 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1644 + 1.0) / _1654);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1856 = frontier_phi_23_19_ladder;
        }
        float _2151;
        if (_1657 > 0.0)
        {
            _2151 = abs((1.0 - _1648) / _1657);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1657 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1648 + 1.0) / _1657);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2151 = frontier_phi_35_30_ladder;
        }
        float _2153 = isnan(_1856) ? _1685 : (isnan(_1685) ? _1856 : min(_1685, _1856));
        float _2154 = isnan(_2151) ? _2153 : (isnan(_2153) ? _2151 : min(_2153, _2151));
        float _2158 = (_2154 * _1651) + _1640;
        float _2159 = (_2154 * _1654) + _1644;
        float _2160 = (_2154 * _1657) + _1648;
        float _2161 = _2154 * 9.9999997473787516355514526367188e-05;
        float _2163 = (-1.0) - _2161;
        float _2165 = _2161 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2160 > _2165) || ((_2160 < _2163) || ((_2159 > _2165) || ((_2159 < _2163) || ((_2158 < _2163) || (_2158 > _2165))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2305 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2160, cbModelParam._m0[9u].z, fma(_2159, cbModelParam._m0[9u].y, _2158 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2160, cbModelParam._m0[10u].z, fma(_2159, cbModelParam._m0[10u].y, _2158 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2160, cbModelParam._m0[11u].z, fma(_2159, cbModelParam._m0[11u].y, _2158 * cbModelParam._m0[11u].x))), _1591);
            frontier_phi_13_35_ladder = _2305.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2305.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2305.x * cbModelParam._m0[1u].y;
        }
        _1673 = frontier_phi_13_35_ladder_2;
        _1675 = frontier_phi_13_35_ladder_1;
        _1677 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1661 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_783, _784, _785), _1591);
        _1673 = _1661.x * cbModelParam._m0[1u].y;
        _1675 = _1661.y * cbModelParam._m0[1u].y;
        _1677 = _1661.z * cbModelParam._m0[1u].y;
    }
    float _1681 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _628);
    float _1682 = isnan(_1681) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1681 : min(cbModelParam._m0[25u].w, _1681));
    float _1773;
    float _1775;
    float _1777;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1737 = fma(_844, cbModelParam._m0[21u].z, fma(_840, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _836)) + cbModelParam._m0[21u].w;
        float _1741 = fma(_844, cbModelParam._m0[22u].z, fma(_840, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _836)) + cbModelParam._m0[22u].w;
        float _1745 = fma(_844, cbModelParam._m0[23u].z, fma(_840, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _836)) + cbModelParam._m0[23u].w;
        float _1748 = fma(_785, cbModelParam._m0[21u].z, fma(_784, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _783));
        float _1751 = fma(_785, cbModelParam._m0[22u].z, fma(_784, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _783));
        float _1754 = fma(_785, cbModelParam._m0[23u].z, fma(_784, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _783));
        float _1861;
        if (_1748 > 0.0)
        {
            _1861 = abs((1.0 - _1737) / _1748);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1748 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1737 + 1.0) / _1748);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1861 = frontier_phi_25_21_ladder;
        }
        float _2178;
        if (_1751 > 0.0)
        {
            _2178 = abs((1.0 - _1741) / _1751);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1751 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1741 + 1.0) / _1751);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2178 = frontier_phi_37_32_ladder;
        }
        float _2505;
        if (_1754 > 0.0)
        {
            _2505 = abs((1.0 - _1745) / _1754);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1754 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1745 + 1.0) / _1754);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2505 = frontier_phi_47_44_ladder;
        }
        float _2507 = isnan(_2178) ? _1861 : (isnan(_1861) ? _2178 : min(_1861, _2178));
        float _2508 = isnan(_2505) ? _2507 : (isnan(_2507) ? _2505 : min(_2507, _2505));
        float _2512 = (_2508 * _1748) + _1737;
        float _2513 = (_2508 * _1751) + _1741;
        float _2514 = (_2508 * _1754) + _1745;
        float _2515 = _2508 * 9.9999997473787516355514526367188e-05;
        float _2516 = (-1.0) - _2515;
        float _2518 = _2515 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2514 > _2518) || ((_2514 < _2516) || ((_2513 > _2518) || ((_2513 < _2516) || ((_2512 < _2516) || (_2512 > _2518))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2632 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2514, cbModelParam._m0[17u].z, fma(_2513, cbModelParam._m0[17u].y, _2512 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2514, cbModelParam._m0[18u].z, fma(_2513, cbModelParam._m0[18u].y, _2512 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2514, cbModelParam._m0[19u].z, fma(_2513, cbModelParam._m0[19u].y, _2512 * cbModelParam._m0[19u].x))), _1682);
            frontier_phi_22_47_ladder = _2632.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2632.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2632.x * cbModelParam._m0[1u].z;
        }
        _1773 = frontier_phi_22_47_ladder_2;
        _1775 = frontier_phi_22_47_ladder_1;
        _1777 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1757 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_783, _784, _785), _1682);
        _1773 = _1757.x * cbModelParam._m0[1u].z;
        _1775 = _1757.y * cbModelParam._m0[1u].z;
        _1777 = _1757.z * cbModelParam._m0[1u].z;
    }
    float _1789 = ((((1.0 - _804) * ((_791 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_804 * _791)) * _775;
    float _1790 = _1789 * ((cbModelParam._m0[1u].w * (_1773 - _1673)) + _1673);
    float _1791 = _1789 * ((cbModelParam._m0[1u].w * (_1775 - _1675)) + _1675);
    float _1792 = _1789 * ((cbModelParam._m0[1u].w * (_1777 - _1677)) + _1677);
    float _1795 = fma(_1792, cbSceneParam._m0[89u].z, fma(_1791, cbSceneParam._m0[89u].y, _1790 * cbSceneParam._m0[89u].x));
    float _1798 = fma(_1792, cbSceneParam._m0[90u].z, fma(_1791, cbSceneParam._m0[90u].y, _1790 * cbSceneParam._m0[90u].x));
    float _1801 = fma(_1792, cbSceneParam._m0[91u].z, fma(_1791, cbSceneParam._m0[91u].y, _1790 * cbSceneParam._m0[91u].x));
    float _1835 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1839 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1843 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1847 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1848 = _1835 / _1847;
    float _1849 = _1839 / _1847;
    float _1850 = _1843 / _1847;
    float _1997;
    float _1998;
    float _1999;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1877 = ((uint(_1850 > cbSceneParam._m0[59u].y) + uint(_1850 > cbSceneParam._m0[59u].x)) + uint(_1850 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1878 = _1877 + 43u;
        uint _1886 = _1877 + 44u;
        uint _1894 = _1877 + 45u;
        uint _1902 = _1877 + 46u;
        float _1913 = fma(_1847, cbSceneParam._m0[_1878].w, fma(_1843, cbSceneParam._m0[_1878].z, fma(_1839, cbSceneParam._m0[_1878].y, _1835 * cbSceneParam._m0[_1878].x)));
        float _1917 = fma(_1847, cbSceneParam._m0[_1886].w, fma(_1843, cbSceneParam._m0[_1886].z, fma(_1839, cbSceneParam._m0[_1886].y, _1835 * cbSceneParam._m0[_1886].x)));
        float _1925 = fma(_1847, cbSceneParam._m0[_1902].w, fma(_1843, cbSceneParam._m0[_1902].z, fma(_1839, cbSceneParam._m0[_1902].y, _1835 * cbSceneParam._m0[_1902].x)));
        float _1930 = cbSceneParam._m0[33u].z * _1925;
        float _1932 = cbSceneParam._m0[33u].w * _1925;
        float _1935 = fma(_1847, cbSceneParam._m0[_1894].w, fma(_1843, cbSceneParam._m0[_1894].z, fma(_1839, cbSceneParam._m0[_1894].y, _1835 * cbSceneParam._m0[_1894].x))) / _1925;
        float _1983 = (cbSceneParam._m0[33u].x - sqrt(((_1849 * _1849) + (_1848 * _1848)) + (_1850 * _1850))) * cbSceneParam._m0[33u].y;
        float _4249 = isnan(0.0) ? _1983 : (isnan(_1983) ? 0.0 : max(_1983, 0.0));
        float _1990 = (isnan(1.0) ? _4249 : (isnan(_4249) ? 1.0 : min(_4249, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1930 + _1913) / _1925, (_1932 + _1917) / _1925), _1935), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1932 + _1913) / _1925, (_1917 - _1930) / _1925), _1935), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1913 - _1930) / _1925, (_1917 - _1932) / _1925), _1935), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1913 - _1932) / _1925, (_1930 + _1917) / _1925), _1935), 0.0)).x), vec4(0.25)));
        _1997 = 1.0 - (_1990 * cbSceneParam._m0[34u].x);
        _1998 = 1.0 - (_1990 * cbSceneParam._m0[34u].y);
        _1999 = 1.0 - (_1990 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1997 = 1.0;
        _1998 = 1.0;
        _1999 = 1.0;
    }
    float _2063;
    float _2065;
    float _2067;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2051 = fma(_1847, cbSceneParam._m0[63u].w, fma(_1843, cbSceneParam._m0[63u].z, fma(_1839, cbSceneParam._m0[63u].y, _1835 * cbSceneParam._m0[63u].x)));
        float _2052 = fma(_1847, cbSceneParam._m0[60u].w, fma(_1843, cbSceneParam._m0[60u].z, fma(_1839, cbSceneParam._m0[60u].y, _1835 * cbSceneParam._m0[60u].x))) / _2051;
        float _2053 = fma(_1847, cbSceneParam._m0[61u].w, fma(_1843, cbSceneParam._m0[61u].z, fma(_1839, cbSceneParam._m0[61u].y, _1835 * cbSceneParam._m0[61u].x))) / _2051;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2052 >= cbSceneParam._m0[64u].x) && (_2053 >= cbSceneParam._m0[64u].y)) && (_2052 <= cbSceneParam._m0[64u].z)) && (_2053 <= cbSceneParam._m0[64u].w))
        {
            float _2191 = fma(_1847, cbSceneParam._m0[62u].w, fma(_1843, cbSceneParam._m0[62u].z, fma(_1839, cbSceneParam._m0[62u].y, _1835 * cbSceneParam._m0[62u].x))) / _2051;
            float _2195 = isnan(cbSceneParam._m0[41u].w) ? _2191 : (isnan(_2191) ? cbSceneParam._m0[41u].w : max(_2191, cbSceneParam._m0[41u].w));
            float _2238 = (cbSceneParam._m0[33u].x - sqrt(((_1849 * _1849) + (_1848 * _1848)) + (_1850 * _1850))) * cbSceneParam._m0[33u].y;
            float _4265 = isnan(0.0) ? _2238 : (isnan(_2238) ? 0.0 : max(_2238, 0.0));
            float _2245 = (isnan(1.0) ? _4265 : (isnan(_4265) ? 1.0 : min(_4265, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2052, cbSceneParam._m0[33u].w + _2053), _2195), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2052, _2053 - cbSceneParam._m0[33u].z), _2195), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2052 - cbSceneParam._m0[33u].z, _2053 - cbSceneParam._m0[33u].w), _2195), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2052 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2053), _2195), 0.0)).x), vec4(0.25)));
            float _2249 = 1.0 - (_2245 * cbSceneParam._m0[34u].x);
            float _2250 = 1.0 - (_2245 * cbSceneParam._m0[34u].y);
            float _2251 = 1.0 - (_2245 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2251) ? _1999 : (isnan(_1999) ? _2251 : min(_1999, _2251));
            frontier_phi_34_33_ladder_1 = isnan(_2250) ? _1998 : (isnan(_1998) ? _2250 : min(_1998, _2250));
            frontier_phi_34_33_ladder_2 = isnan(_2249) ? _1997 : (isnan(_1997) ? _2249 : min(_1997, _2249));
        }
        else
        {
            frontier_phi_34_33_ladder = _1999;
            frontier_phi_34_33_ladder_1 = _1998;
            frontier_phi_34_33_ladder_2 = _1997;
        }
        _2063 = frontier_phi_34_33_ladder_2;
        _2065 = frontier_phi_34_33_ladder_1;
        _2067 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2063 = _1997;
        _2065 = _1998;
        _2067 = _1999;
    }
    uvec4 _2072 = floatBitsToUint(cbInstanceData._m0[_262 + 5u]);
    uint _2074 = _2072.x * 14u;
    uint _2075 = _2074 + 13u;
    float _2082 = _775 + (-1.0);
    float _2087 = (cbLight._m0[_2075].x * _2082) + 1.0;
    float _2088 = (cbLight._m0[_2075].y * _2082) + 1.0;
    float _2089 = (cbLight._m0[_2075].z * _2082) + 1.0;
    float _2090 = (cbLight._m0[_2075].w * _2082) + 1.0;
    uint _2091 = _2074 + 5u;
    float _2097 = isnan(1.0) ? _2088 : (isnan(_2088) ? 1.0 : min(_2088, 1.0));
    uint _2101 = _2074 + 4u;
    float _2110 = isnan(1.0) ? _2087 : (isnan(_2087) ? 1.0 : min(_2087, 1.0));
    uint _2114 = _2074 | 1u;
    float _2125 = dot(vec3(cbLight._m0[_2074].xyz), vec3(_625, _626, _627));
    float _2128 = dot(vec3(cbLight._m0[_2114].xyz), vec3(_625, _626, _627));
    float _4301 = isnan(0.0) ? _2125 : (isnan(_2125) ? 0.0 : max(_2125, 0.0));
    float _4312 = isnan(0.0) ? _2128 : (isnan(_2128) ? 0.0 : max(_2128, 0.0));
    float _2133 = (isnan(1.0) ? _4301 : (isnan(_4301) ? 1.0 : min(_4301, 1.0))) * 0.3183098733425140380859375;
    float _2135 = (isnan(1.0) ? _4312 : (isnan(_4312) ? 1.0 : min(_4312, 1.0))) * 0.3183098733425140380859375;
    float _2142 = ((cbLight._m0[_2091].x * _2097) * _2135) + (((cbLight._m0[_2101].x * _2063) * _2110) * _2133);
    float _2143 = ((_2097 * cbLight._m0[_2091].y) * _2135) + (((cbLight._m0[_2101].y * _2065) * _2110) * _2133);
    float _2144 = ((_2097 * cbLight._m0[_2091].z) * _2135) + (((cbLight._m0[_2101].z * _2067) * _2110) * _2133);
    uvec4 _2148 = floatBitsToUint(cbLight._m0[_2074 + 12u]);
    bool _2150 = _2148.x == 0u;
    float _2252;
    float _2254;
    float _2256;
    if (_2150)
    {
        _2252 = _2142;
        _2254 = _2143;
        _2256 = _2144;
    }
    else
    {
        uint _2260 = _2074 + 6u;
        float _2276 = (dot(vec3(cbLight._m0[_2074 + 2u].xyz), vec3(_625, _626, _627)) * 0.5) + 0.5;
        float _2277 = _2276 * _2276;
        float _4323 = isnan(0.0) ? _2277 : (isnan(_2277) ? 0.0 : max(_2277, 0.0));
        float _2278 = isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0));
        float _2279 = isnan(1.0) ? _2089 : (isnan(_2089) ? 1.0 : min(_2089, 1.0));
        _2252 = (((cbLight._m0[_2260].x * 0.3183098733425140380859375) * _2278) * _2279) + _2142;
        _2254 = (((cbLight._m0[_2260].y * 0.3183098733425140380859375) * _2278) * _2279) + _2143;
        _2256 = (((cbLight._m0[_2260].z * 0.3183098733425140380859375) * _2278) * _2279) + _2144;
    }
    bool _2259 = _2148.y == 0u;
    float _2314;
    float _2316;
    float _2318;
    if (_2259)
    {
        _2314 = _2252;
        _2316 = _2254;
        _2318 = _2256;
    }
    else
    {
        uint _2476 = _2074 + 7u;
        float _2492 = (dot(vec3(cbLight._m0[_2074 + 3u].xyz), vec3(_625, _626, _627)) * 0.5) + 0.5;
        float _2493 = _2492 * _2492;
        float _4339 = isnan(0.0) ? _2493 : (isnan(_2493) ? 0.0 : max(_2493, 0.0));
        float _2494 = isnan(1.0) ? _4339 : (isnan(_4339) ? 1.0 : min(_4339, 1.0));
        float _2495 = isnan(1.0) ? _2090 : (isnan(_2090) ? 1.0 : min(_2090, 1.0));
        _2314 = (((cbLight._m0[_2476].x * 0.3183098733425140380859375) * _2494) * _2495) + _2252;
        _2316 = (((cbLight._m0[_2476].y * 0.3183098733425140380859375) * _2494) * _2495) + _2254;
        _2318 = (((cbLight._m0[_2476].z * 0.3183098733425140380859375) * _2494) * _2495) + _2256;
    }
    uint _2321 = _2074 + 8u;
    float _2334 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2074].w)) * _628) * 0.949999988079071044921875);
    float _2335 = _2334 * _2334;
    float _2336 = cbLight._m0[_2074].x + _704;
    float _2337 = cbLight._m0[_2074].y + _705;
    float _2338 = cbLight._m0[_2074].z + _706;
    float _2342 = inversesqrt(dot(vec3(_2336, _2337, _2338), vec3(_2336, _2337, _2338)));
    float _2343 = _2342 * _2336;
    float _2344 = _2342 * _2337;
    float _2345 = _2342 * _2338;
    float _2346 = dot(vec3(_625, _626, _627), vec3(cbLight._m0[_2074].xyz));
    float _4355 = isnan(0.0) ? _2346 : (isnan(_2346) ? 0.0 : max(_2346, 0.0));
    float _2349 = isnan(1.0) ? _4355 : (isnan(_4355) ? 1.0 : min(_4355, 1.0));
    float _4366 = isnan(0.0) ? _776 : (isnan(_776) ? 0.0 : max(_776, 0.0));
    float _2350 = isnan(1.0) ? _4366 : (isnan(_4366) ? 1.0 : min(_4366, 1.0));
    float _2351 = dot(vec3(_625, _626, _627), vec3(_2343, _2344, _2345));
    float _4377 = isnan(0.0) ? _2351 : (isnan(_2351) ? 0.0 : max(_2351, 0.0));
    float _2354 = isnan(1.0) ? _4377 : (isnan(_4377) ? 1.0 : min(_4377, 1.0));
    float _2355 = dot(vec3(cbLight._m0[_2074].xyz), vec3(_2343, _2344, _2345));
    float _4388 = isnan(0.0) ? _2355 : (isnan(_2355) ? 0.0 : max(_2355, 0.0));
    float _2359 = _2335 * _2335;
    float _2363 = ((_2354 * _2354) * (_2359 + (-1.0))) + 1.0;
    float _2374 = (exp2(log2(1.0 - (isnan(1.0) ? _4388 : (isnan(_4388) ? 1.0 : min(_4388, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2375 = 1.0 - _2335;
    float _2386 = (0.5 / (((_2350 * ((_2349 * _2375) + _2335)) + 9.9999999392252902907785028219223e-09) + (((_2350 * _2375) + _2335) * _2349))) * _2349;
    float _4399 = isnan(0.0) ? _2386 : (isnan(_2386) ? 0.0 : max(_2386, 0.0));
    float _2388 = (isnan(1.0) ? _4399 : (isnan(_4399) ? 1.0 : min(_4399, 1.0))) * (_2359 / ((_2363 * _2363) * 3.141590118408203125));
    uint _2402 = _2074 + 9u;
    float _2413 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2114].w)) * _628) * 0.949999988079071044921875);
    float _2414 = _2413 * _2413;
    float _2415 = cbLight._m0[_2114].x + _704;
    float _2416 = cbLight._m0[_2114].y + _705;
    float _2417 = cbLight._m0[_2114].z + _706;
    float _2421 = inversesqrt(dot(vec3(_2415, _2416, _2417), vec3(_2415, _2416, _2417)));
    float _2422 = _2421 * _2415;
    float _2423 = _2421 * _2416;
    float _2424 = _2421 * _2417;
    float _2425 = dot(vec3(_625, _626, _627), vec3(cbLight._m0[_2114].xyz));
    float _4410 = isnan(0.0) ? _2425 : (isnan(_2425) ? 0.0 : max(_2425, 0.0));
    float _2428 = isnan(1.0) ? _4410 : (isnan(_4410) ? 1.0 : min(_4410, 1.0));
    float _2429 = dot(vec3(_625, _626, _627), vec3(_2422, _2423, _2424));
    float _4421 = isnan(0.0) ? _2429 : (isnan(_2429) ? 0.0 : max(_2429, 0.0));
    float _2432 = isnan(1.0) ? _4421 : (isnan(_4421) ? 1.0 : min(_4421, 1.0));
    float _2433 = dot(vec3(cbLight._m0[_2114].xyz), vec3(_2422, _2423, _2424));
    float _4432 = isnan(0.0) ? _2433 : (isnan(_2433) ? 0.0 : max(_2433, 0.0));
    float _2437 = _2414 * _2414;
    float _2441 = ((_2432 * _2432) * (_2437 + (-1.0))) + 1.0;
    float _2450 = (exp2(log2(1.0 - (isnan(1.0) ? _4432 : (isnan(_4432) ? 1.0 : min(_4432, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2451 = 1.0 - _2414;
    float _2461 = (0.5 / (((_2350 * ((_2428 * _2451) + _2414)) + 9.9999999392252902907785028219223e-09) + (((_2350 * _2451) + _2414) * _2428))) * _2428;
    float _4443 = isnan(0.0) ? _2461 : (isnan(_2461) ? 0.0 : max(_2461, 0.0));
    float _2463 = (isnan(1.0) ? _4443 : (isnan(_4443) ? 1.0 : min(_4443, 1.0))) * (_2437 / ((_2441 * _2441) * 3.141590118408203125));
    float _2473 = (((_2450 * cbLight._m0[_2402].x) * _2463) * _2097) + ((((cbLight._m0[_2321].x * _2063) * _2374) * _2388) * _2110);
    float _2474 = (((_2450 * cbLight._m0[_2402].y) * _2463) * _2097) + ((((cbLight._m0[_2321].y * _2065) * _2374) * _2388) * _2110);
    float _2475 = (((_2450 * cbLight._m0[_2402].z) * _2463) * _2097) + ((((cbLight._m0[_2321].z * _2067) * _2374) * _2388) * _2110);
    float _2531;
    float _2533;
    float _2535;
    if (_2150)
    {
        _2531 = _2473;
        _2533 = _2474;
        _2535 = _2475;
    }
    else
    {
        uint _2537 = _2074 + 2u;
        uint _2541 = _2074 + 10u;
        float _2555 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2537].w)) * _628) * 0.949999988079071044921875);
        float _2556 = _2555 * _2555;
        float _2557 = cbLight._m0[_2537].x + _704;
        float _2558 = cbLight._m0[_2537].y + _705;
        float _2559 = cbLight._m0[_2537].z + _706;
        float _2563 = inversesqrt(dot(vec3(_2557, _2558, _2559), vec3(_2557, _2558, _2559)));
        float _2564 = _2563 * _2557;
        float _2565 = _2563 * _2558;
        float _2566 = _2563 * _2559;
        float _2567 = dot(vec3(_625, _626, _627), vec3(cbLight._m0[_2537].xyz));
        float _4454 = isnan(0.0) ? _2567 : (isnan(_2567) ? 0.0 : max(_2567, 0.0));
        float _2570 = isnan(1.0) ? _4454 : (isnan(_4454) ? 1.0 : min(_4454, 1.0));
        float _2571 = dot(vec3(_625, _626, _627), vec3(_2564, _2565, _2566));
        float _4465 = isnan(0.0) ? _2571 : (isnan(_2571) ? 0.0 : max(_2571, 0.0));
        float _2574 = isnan(1.0) ? _4465 : (isnan(_4465) ? 1.0 : min(_4465, 1.0));
        float _2575 = dot(vec3(cbLight._m0[_2537].xyz), vec3(_2564, _2565, _2566));
        float _4476 = isnan(0.0) ? _2575 : (isnan(_2575) ? 0.0 : max(_2575, 0.0));
        float _2579 = _2556 * _2556;
        float _2583 = ((_2574 * _2574) * (_2579 + (-1.0))) + 1.0;
        float _2592 = (exp2(log2(1.0 - (isnan(1.0) ? _4476 : (isnan(_4476) ? 1.0 : min(_4476, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2593 = 1.0 - _2556;
        float _2603 = (0.5 / (((_2350 * ((_2570 * _2593) + _2556)) + 9.9999999392252902907785028219223e-09) + (((_2350 * _2593) + _2556) * _2570))) * _2570;
        float _4487 = isnan(0.0) ? _2603 : (isnan(_2603) ? 0.0 : max(_2603, 0.0));
        float _2605 = (isnan(1.0) ? _4487 : (isnan(_4487) ? 1.0 : min(_4487, 1.0))) * (_2579 / ((_2583 * _2583) * 3.141590118408203125));
        float _2606 = isnan(1.0) ? _2089 : (isnan(_2089) ? 1.0 : min(_2089, 1.0));
        _2531 = (((_2592 * cbLight._m0[_2541].x) * _2605) * _2606) + _2473;
        _2533 = (((_2592 * cbLight._m0[_2541].y) * _2605) * _2606) + _2474;
        _2535 = (((_2592 * cbLight._m0[_2541].z) * _2605) * _2606) + _2475;
    }
    float _2637;
    float _2639;
    float _2641;
    if (_2259)
    {
        _2637 = _2531;
        _2639 = _2533;
        _2641 = _2535;
    }
    else
    {
        uint _2648 = _2074 + 3u;
        uint _2652 = _2074 + 11u;
        float _2666 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2648].w)) * _628) * 0.949999988079071044921875);
        float _2667 = _2666 * _2666;
        float _2668 = cbLight._m0[_2648].x + _704;
        float _2669 = cbLight._m0[_2648].y + _705;
        float _2670 = cbLight._m0[_2648].z + _706;
        float _2674 = inversesqrt(dot(vec3(_2668, _2669, _2670), vec3(_2668, _2669, _2670)));
        float _2675 = _2674 * _2668;
        float _2676 = _2674 * _2669;
        float _2677 = _2674 * _2670;
        float _2678 = dot(vec3(_625, _626, _627), vec3(cbLight._m0[_2648].xyz));
        float _4503 = isnan(0.0) ? _2678 : (isnan(_2678) ? 0.0 : max(_2678, 0.0));
        float _2681 = isnan(1.0) ? _4503 : (isnan(_4503) ? 1.0 : min(_4503, 1.0));
        float _2682 = dot(vec3(_625, _626, _627), vec3(_2675, _2676, _2677));
        float _4514 = isnan(0.0) ? _2682 : (isnan(_2682) ? 0.0 : max(_2682, 0.0));
        float _2685 = isnan(1.0) ? _4514 : (isnan(_4514) ? 1.0 : min(_4514, 1.0));
        float _2686 = dot(vec3(cbLight._m0[_2648].xyz), vec3(_2675, _2676, _2677));
        float _4525 = isnan(0.0) ? _2686 : (isnan(_2686) ? 0.0 : max(_2686, 0.0));
        float _2690 = _2667 * _2667;
        float _2694 = ((_2685 * _2685) * (_2690 + (-1.0))) + 1.0;
        float _2703 = (exp2(log2(1.0 - (isnan(1.0) ? _4525 : (isnan(_4525) ? 1.0 : min(_4525, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2704 = 1.0 - _2667;
        float _2714 = (0.5 / (((_2350 * ((_2681 * _2704) + _2667)) + 9.9999999392252902907785028219223e-09) + (((_2350 * _2704) + _2667) * _2681))) * _2681;
        float _4536 = isnan(0.0) ? _2714 : (isnan(_2714) ? 0.0 : max(_2714, 0.0));
        float _2716 = (isnan(1.0) ? _4536 : (isnan(_4536) ? 1.0 : min(_4536, 1.0))) * (_2690 / ((_2694 * _2694) * 3.141590118408203125));
        float _2717 = isnan(1.0) ? _2090 : (isnan(_2090) ? 1.0 : min(_2090, 1.0));
        _2637 = (((_2703 * cbLight._m0[_2652].x) * _2716) * _2717) + _2531;
        _2639 = (((_2703 * cbLight._m0[_2652].y) * _2716) * _2717) + _2533;
        _2641 = (((_2703 * cbLight._m0[_2652].z) * _2716) * _2717) + _2535;
    }
    float _2783;
    float _2785;
    float _2787;
    float _2789;
    float _2791;
    float _2793;
    if (_2072.y == 0u)
    {
        uvec4 _2738 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2739 = _2738.x;
        uint _2750 = uint((float(_2738.y) * floor(float(uint(cbSceneParam._m0[85u].y * _713) / _2739))) + floor(float(uint(cbSceneParam._m0[85u].x * _712) / _2739)));
        float _2760 = (log2(_1850 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2761 = isnan(0.0) ? _2760 : (isnan(_2760) ? 0.0 : max(_2760, 0.0));
        uint _2764 = uint(isnan(14.0) ? _2761 : (isnan(_2761) ? 14.0 : min(_2761, 14.0)));
        uvec4 _2769 = texelFetch(g_lightClusterGridBuffer, int(((_2764 << 2u) + (_2750 << 6u)) >> 2u));
        uint _2770 = _2769.x;
        uint _2771 = _2738.z;
        float _2850;
        float _2852;
        float _2854;
        float _2856;
        float _2858;
        float _2860;
        if (((((1u << ((_2771 >> 4u) & 15u)) + 4294967295u) & _2770) == 0u) || ((_2771 & 240u) == 0u))
        {
            _2850 = 0.0;
            _2852 = 0.0;
            _2854 = 0.0;
            _2856 = 0.0;
            _2858 = 0.0;
            _2860 = 0.0;
        }
        else
        {
            float _2851;
            float _2853;
            float _2855;
            float _2857;
            float _2859;
            float _2861;
            float _2995 = 0.0;
            float _2996 = 0.0;
            float _2997 = 0.0;
            float _2998 = 0.0;
            float _2999 = 0.0;
            float _3000 = 0.0;
            uint _3001 = 0u;
            uint _3010;
            bool _3011;
            for (;;)
            {
                _3010 = texelFetch(g_lightClassification, int((((_2764 << 5u) + (_2750 << 9u)) + (_3001 << 2u)) >> 2u)).x;
                _3011 = _3010 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3011)
                {
                    frontier_phi_66_pred = _3000;
                    frontier_phi_66_pred_1 = _2999;
                    frontier_phi_66_pred_2 = _2998;
                    frontier_phi_66_pred_3 = _2997;
                    frontier_phi_66_pred_4 = _2996;
                    frontier_phi_66_pred_5 = _2995;
                }
                else
                {
                    float _3119;
                    float _3120;
                    float _3121;
                    float _3122;
                    float _3123;
                    float _3124;
                    uint _3125;
                    _3119 = _2995;
                    _3120 = _2996;
                    _3121 = _2997;
                    _3122 = _2998;
                    _3123 = _2999;
                    _3124 = _3000;
                    _3125 = _3010;
                    float _3051;
                    float _3052;
                    float _3053;
                    float _3054;
                    float _3055;
                    float _3056;
                    for (;;)
                    {
                        uint _3129 = uint(findLSB(_3125)) + (_3001 << 5u);
                        uint _3126 = (_3125 + 4294967295u) & _3125;
                        uint _3131 = _3129 * 48u;
                        vec4 _3145 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3131)).x, texelFetch(g_PointLightRenderingBuffer, int(_3131 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3131 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3131 + 3u)).x));
                        uint _3151 = (_3129 * 48u) + 4u;
                        vec4 _3164 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3151)).x, texelFetch(g_PointLightRenderingBuffer, int(_3151 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3151 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3151 + 3u)).x));
                        uint _3170 = (_3129 * 48u) + 8u;
                        vec3 _3181 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3170)).x, texelFetch(g_PointLightRenderingBuffer, int(_3170 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3170 + 2u)).x));
                        float _3185 = _3145.x - _1848;
                        float _3186 = _3145.y - _1849;
                        float _3187 = _3145.z - _1850;
                        float _3188 = dot(vec3(_3185, _3186, _3187), vec3(_3185, _3186, _3187));
                        float _3191 = inversesqrt(_3188);
                        float _3192 = _3191 * _3185;
                        float _3193 = _3191 * _3186;
                        float _3194 = _3191 * _3187;
                        float _3195 = dot(vec3(_731, _734, _737), vec3(_3192, _3193, _3194));
                        float _3200 = 1.0 - (_3188 * _3145.w);
                        float _4562 = isnan(0.0) ? _3200 : (isnan(_3200) ? 0.0 : max(_3200, 0.0));
                        float _3201 = isnan(1.0) ? _4562 : (isnan(_4562) ? 1.0 : min(_4562, 1.0));
                        float _3202 = sqrt(_3188) * _3164.w;
                        float _3205 = 1.39999997615814208984375 / (_3202 + 1.39999997615814208984375);
                        float _3206 = _3205 * _3205;
                        float _3209 = ((1.0 - _3206) * _3195) + _3206;
                        float _3212 = _3202 * _3202;
                        float _3216 = ((isnan(0.0) ? _3209 : (isnan(_3209) ? 0.0 : max(_3209, 0.0))) * _3201) / ((_3212 * 0.699999988079071044921875) + 1.0);
                        float _3220 = (-0.0) - _1848;
                        float _3221 = (-0.0) - _1849;
                        float _3222 = (-0.0) - _1850;
                        float _3226 = inversesqrt(dot(vec3(_3220, _3221, _3222), vec3(_3220, _3221, _3222)));
                        float _3227 = _3226 * _3220;
                        float _3228 = _3226 * _3221;
                        float _3229 = _3226 * _3222;
                        float _3236 = exp2(log2(1.0 / ((_3212 * 3.5) + 5.0)) * 0.25);
                        float _3237 = 1.0 - _791;
                        float _3244 = sqrt(1.0 - ((1.0 - (_3237 * _3237)) * (1.0 - (_3236 * _3236))));
                        float _3245 = _3244 * _3244;
                        float _3246 = _3245 * _3245;
                        float _3247 = _3227 + _3192;
                        float _3248 = _3228 + _3193;
                        float _3249 = _3229 + _3194;
                        float _3253 = inversesqrt(dot(vec3(_3247, _3248, _3249), vec3(_3247, _3248, _3249)));
                        float _3257 = dot(vec3(_731, _734, _737), vec3(_3227, _3228, _3229));
                        float _4578 = isnan(0.0) ? _3257 : (isnan(_3257) ? 0.0 : max(_3257, 0.0));
                        float _3260 = isnan(1.0) ? _4578 : (isnan(_4578) ? 1.0 : min(_4578, 1.0));
                        float _3261 = dot(vec3(_731, _734, _737), vec3(_3253 * _3247, _3253 * _3248, _3253 * _3249));
                        float _4589 = isnan(0.0) ? _3261 : (isnan(_3261) ? 0.0 : max(_3261, 0.0));
                        float _3264 = isnan(1.0) ? _4589 : (isnan(_4589) ? 1.0 : min(_4589, 1.0));
                        float _3268 = ((_3264 * _3264) * (_3246 + (-1.0))) + 1.0;
                        float _3269 = _3205 * _3245;
                        float _3270 = _3269 * _3269;
                        float _3273 = ((1.0 - _3270) * _3195) + _3270;
                        float _4600 = isnan(0.0) ? _3273 : (isnan(_3273) ? 0.0 : max(_3273, 0.0));
                        float _3274 = isnan(1.0) ? _4600 : (isnan(_4600) ? 1.0 : min(_4600, 1.0));
                        float _3275 = 1.0 - _3245;
                        float _3285 = (0.5 / (((_3274 * ((_3260 * _3275) + _3245)) + 9.9999999392252902907785028219223e-09) + (((_3274 * _3275) + _3245) * _3260))) * _3274;
                        float _4611 = isnan(0.0) ? _3285 : (isnan(_3285) ? 0.0 : max(_3285, 0.0));
                        float _3296 = (((_3246 * 3.1415927410125732421875) * (isnan(1.0) ? _4611 : (isnan(_4611) ? 1.0 : min(_4611, 1.0)))) / ((_3268 * _3268) * ((_3212 * 2.1991131305694580078125) + 3.141590118408203125))) * _3201;
                        _3054 = (_3216 * _3164.x) + _3122;
                        _3055 = (_3216 * _3164.y) + _3123;
                        _3056 = (_3216 * _3164.z) + _3124;
                        _3051 = (_3296 * _3181.x) + _3119;
                        _3052 = (_3296 * _3181.y) + _3120;
                        _3053 = (_3296 * _3181.z) + _3121;
                        if (_3126 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3119 = _3051;
                            _3120 = _3052;
                            _3121 = _3053;
                            _3122 = _3054;
                            _3123 = _3055;
                            _3124 = _3056;
                            _3125 = _3126;
                        }
                    }
                    frontier_phi_66_pred = _3056;
                    frontier_phi_66_pred_1 = _3055;
                    frontier_phi_66_pred_2 = _3054;
                    frontier_phi_66_pred_3 = _3053;
                    frontier_phi_66_pred_4 = _3052;
                    frontier_phi_66_pred_5 = _3051;
                }
                _2861 = frontier_phi_66_pred;
                _2859 = frontier_phi_66_pred_1;
                _2857 = frontier_phi_66_pred_2;
                _2855 = frontier_phi_66_pred_3;
                _2853 = frontier_phi_66_pred_4;
                _2851 = frontier_phi_66_pred_5;
                uint _3002 = _3001 + 1u;
                if (_3002 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2995 = _2851;
                    _2996 = _2853;
                    _2997 = _2855;
                    _2998 = _2857;
                    _2999 = _2859;
                    _3000 = _2861;
                    _3001 = _3002;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2850 = _2851;
            _2852 = _2853;
            _2854 = _2855;
            _2856 = _2857;
            _2858 = _2859;
            _2860 = _2861;
        }
        uvec4 _2864 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2865 = _2864.z;
        uint _2867 = (_2865 >> 8u) & 15u;
        float _2963;
        float _2965;
        float _2967;
        float _2969;
        float _2971;
        float _2973;
        if (((4294967295u << _2867) & _2770) == 0u)
        {
            _2963 = _2850;
            _2965 = _2852;
            _2967 = _2854;
            _2969 = _2856;
            _2971 = _2858;
            _2973 = _2860;
        }
        else
        {
            float _2988 = inversesqrt(dot(vec3(_1848, _1849, _1850), vec3(_1848, _1849, _1850)));
            float _2989 = _2988 * _1848;
            float _2990 = _2988 * _1849;
            float _2991 = _2988 * _1850;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2867 < ((_2865 >> 12u) & 15u))
            {
                float _2964;
                float _2966;
                float _2968;
                float _2970;
                float _2972;
                float _2974;
                float _3102 = _2850;
                float _3103 = _2852;
                float _3104 = _2854;
                float _3105 = _2856;
                float _3106 = _2858;
                float _3107 = _2860;
                uint _3108 = _2867;
                uint _3117;
                bool _3118;
                for (;;)
                {
                    _3117 = texelFetch(g_lightClassification, int((((_2764 << 5u) + (_2750 << 9u)) + (_3108 << 2u)) >> 2u)).x;
                    _3118 = _3117 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3118)
                    {
                        frontier_phi_72_pred = _3107;
                        frontier_phi_72_pred_1 = _3106;
                        frontier_phi_72_pred_2 = _3105;
                        frontier_phi_72_pred_3 = _3104;
                        frontier_phi_72_pred_4 = _3103;
                        frontier_phi_72_pred_5 = _3102;
                    }
                    else
                    {
                        float _3301;
                        float _3302;
                        float _3303;
                        float _3304;
                        float _3305;
                        float _3306;
                        float _3594;
                        float _3595;
                        float _3596;
                        float _3597;
                        float _3598;
                        float _3599;
                        float _3314 = _3102;
                        float _3315 = _3103;
                        float _3316 = _3104;
                        float _3317 = _3105;
                        float _3318 = _3106;
                        float _3319 = _3107;
                        uint _3320 = _3117;
                        uint _3321;
                        vec4 _3346;
                        float _3347;
                        vec4 _3362;
                        vec3 _3374;
                        vec4 _3389;
                        vec4 _3404;
                        float _3450;
                        bool _3451;
                        for (;;)
                        {
                            uint _3331 = ((_3108 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3320));
                            _3321 = (_3320 + 4294967295u) & _3320;
                            uint _3333 = _3331 * 40u;
                            _3346 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3333)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3333 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3333 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3333 + 3u)).x));
                            _3347 = _3346.w;
                            uint _3349 = (_3331 * 40u) + 4u;
                            _3362 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3349)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3349 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3349 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3349 + 3u)).x));
                            uint _3364 = (_3331 * 40u) + 8u;
                            _3374 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3364)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3364 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3364 + 2u)).x));
                            uint _3376 = (_3331 * 40u) + 16u;
                            _3389 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3376)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3376 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3376 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3376 + 3u)).x));
                            uint _3391 = (_3331 * 40u) + 20u;
                            _3404 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3391)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3391 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3391 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3391 + 3u)).x));
                            uint _3406 = (_3331 * 40u) + 24u;
                            vec4 _3419 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3406)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3406 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3406 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3406 + 3u)).x));
                            uint _3425 = (_3331 * 40u) + 28u;
                            vec4 _3438 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3425)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3425 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3425 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3425 + 3u)).x));
                            _3450 = fma(_1850, _3438.z, fma(_1849, _3438.y, _3438.x * _1848)) + _3438.w;
                            _3451 = !((fma(_1850, _3419.z, fma(_1849, _3419.y, _3419.x * _1848)) + _3419.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3451)
                            {
                                float _3478 = _3346.x - _1848;
                                float _3479 = _3346.y - _1849;
                                float _3480 = _3346.z - _1850;
                                float _3481 = dot(vec3(_3478, _3479, _3480), vec3(_3478, _3479, _3480));
                                float _3484 = inversesqrt(_3481);
                                float _3485 = _3484 * _3478;
                                float _3486 = _3484 * _3479;
                                float _3487 = _3484 * _3480;
                                float _3491 = 1.0 - (_3481 / (_3347 * _3347));
                                float _4622 = isnan(0.0) ? _3491 : (isnan(_3491) ? 0.0 : max(_3491, 0.0));
                                float _3492 = isnan(1.0) ? _4622 : (isnan(_4622) ? 1.0 : min(_4622, 1.0));
                                float _3496 = sqrt(_3481) * _3362.w;
                                float _3498 = 1.39999997615814208984375 / (_3496 + 1.39999997615814208984375);
                                float _3499 = _3498 * _3498;
                                float _3502 = ((1.0 - _3499) * dot(vec3(_3485, _3486, _3487), vec3(_731, _734, _737))) + _3499;
                                float _3505 = _3496 * _3496;
                                float _3509 = (fma(_1850, _3389.z, fma(_1849, _3389.y, _3389.x * _1848)) + _3389.w) / _3450;
                                float _3510 = (fma(_1850, _3404.z, fma(_1849, _3404.y, _3404.x * _1848)) + _3404.w) / _3450;
                                float _3514 = 1.0 - dot(vec2(_3509, _3510), vec2(_3509, _3510));
                                float _4638 = isnan(0.0) ? _3514 : (isnan(_3514) ? 0.0 : max(_3514, 0.0));
                                float _3515 = isnan(1.0) ? _4638 : (isnan(_4638) ? 1.0 : min(_4638, 1.0));
                                float _3516 = _3515 * (((isnan(0.0) ? _3502 : (isnan(_3502) ? 0.0 : max(_3502, 0.0))) * _3492) / ((_3505 * 0.699999988079071044921875) + 1.0));
                                float _3528 = exp2(log2(1.0 / ((_3505 * 3.5) + 5.0)) * 0.25);
                                float _3529 = 1.0 - _791;
                                float _3536 = sqrt(1.0 - ((1.0 - (_3529 * _3529)) * (1.0 - (_3528 * _3528))));
                                float _3537 = _3536 * _3536;
                                float _3538 = _3537 * _3537;
                                float _3539 = _3485 - _2989;
                                float _3540 = _3486 - _2990;
                                float _3541 = _3487 - _2991;
                                float _3545 = inversesqrt(dot(vec3(_3539, _3540, _3541), vec3(_3539, _3540, _3541)));
                                float _3549 = dot(vec3(_731, _734, _737), vec3((-0.0) - _2989, (-0.0) - _2990, (-0.0) - _2991));
                                float _4649 = isnan(0.0) ? _3549 : (isnan(_3549) ? 0.0 : max(_3549, 0.0));
                                float _3552 = isnan(1.0) ? _4649 : (isnan(_4649) ? 1.0 : min(_4649, 1.0));
                                float _3553 = dot(vec3(_731, _734, _737), vec3(_3545 * _3539, _3545 * _3540, _3545 * _3541));
                                float _4660 = isnan(0.0) ? _3553 : (isnan(_3553) ? 0.0 : max(_3553, 0.0));
                                float _3556 = isnan(1.0) ? _4660 : (isnan(_4660) ? 1.0 : min(_4660, 1.0));
                                float _3560 = ((_3556 * _3556) * (_3538 + (-1.0))) + 1.0;
                                float _3561 = _3498 * _3537;
                                float _3562 = _3561 * _3561;
                                float _3568 = ((1.0 - _3562) * dot(vec3(_731, _734, _737), vec3(_3485, _3486, _3487))) + _3562;
                                float _4671 = isnan(0.0) ? _3568 : (isnan(_3568) ? 0.0 : max(_3568, 0.0));
                                float _3569 = isnan(1.0) ? _4671 : (isnan(_4671) ? 1.0 : min(_4671, 1.0));
                                float _3570 = 1.0 - _3537;
                                float _3580 = (0.5 / (((_3569 * ((_3552 * _3570) + _3537)) + 9.9999999392252902907785028219223e-09) + (((_3569 * _3570) + _3537) * _3552))) * _3569;
                                float _4682 = isnan(0.0) ? _3580 : (isnan(_3580) ? 0.0 : max(_3580, 0.0));
                                float _3590 = (_3515 * _3492) * (((_3538 * 3.1415927410125732421875) * (isnan(1.0) ? _4682 : (isnan(_4682) ? 1.0 : min(_4682, 1.0)))) / ((_3560 * _3560) * ((_3505 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3516 * _3362.y;
                                frontier_phi_78_pred_1 = _3516 * _3362.x;
                                frontier_phi_78_pred_2 = _3590 * _3374.z;
                                frontier_phi_78_pred_3 = _3590 * _3374.y;
                                frontier_phi_78_pred_4 = _3590 * _3374.x;
                                frontier_phi_78_pred_5 = _3516 * _3362.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3598 = frontier_phi_78_pred;
                            _3597 = frontier_phi_78_pred_1;
                            _3596 = frontier_phi_78_pred_2;
                            _3595 = frontier_phi_78_pred_3;
                            _3594 = frontier_phi_78_pred_4;
                            _3599 = frontier_phi_78_pred_5;
                            _3304 = _3597 + _3317;
                            _3305 = _3598 + _3318;
                            _3306 = _3599 + _3319;
                            _3301 = _3594 + _3314;
                            _3302 = _3595 + _3315;
                            _3303 = _3596 + _3316;
                            if (_3321 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3314 = _3301;
                                _3315 = _3302;
                                _3316 = _3303;
                                _3317 = _3304;
                                _3318 = _3305;
                                _3319 = _3306;
                                _3320 = _3321;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3306;
                        frontier_phi_72_pred_1 = _3305;
                        frontier_phi_72_pred_2 = _3304;
                        frontier_phi_72_pred_3 = _3303;
                        frontier_phi_72_pred_4 = _3302;
                        frontier_phi_72_pred_5 = _3301;
                    }
                    _2974 = frontier_phi_72_pred;
                    _2972 = frontier_phi_72_pred_1;
                    _2970 = frontier_phi_72_pred_2;
                    _2968 = frontier_phi_72_pred_3;
                    _2966 = frontier_phi_72_pred_4;
                    _2964 = frontier_phi_72_pred_5;
                    uint _3109 = _3108 + 1u;
                    if (_3109 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3102 = _2964;
                        _3103 = _2966;
                        _3104 = _2968;
                        _3105 = _2970;
                        _3106 = _2972;
                        _3107 = _2974;
                        _3108 = _3109;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _2974;
                frontier_phi_60_61_ladder_1 = _2972;
                frontier_phi_60_61_ladder_2 = _2968;
                frontier_phi_60_61_ladder_3 = _2966;
                frontier_phi_60_61_ladder_4 = _2964;
                frontier_phi_60_61_ladder_5 = _2970;
            }
            else
            {
                frontier_phi_60_61_ladder = _2860;
                frontier_phi_60_61_ladder_1 = _2858;
                frontier_phi_60_61_ladder_2 = _2854;
                frontier_phi_60_61_ladder_3 = _2852;
                frontier_phi_60_61_ladder_4 = _2850;
                frontier_phi_60_61_ladder_5 = _2856;
            }
            _2963 = frontier_phi_60_61_ladder_4;
            _2965 = frontier_phi_60_61_ladder_3;
            _2967 = frontier_phi_60_61_ladder_2;
            _2969 = frontier_phi_60_61_ladder_5;
            _2971 = frontier_phi_60_61_ladder_1;
            _2973 = frontier_phi_60_61_ladder;
        }
        float _2978 = isnan(1.0) ? _775 : (isnan(_775) ? 1.0 : min(_775, 1.0));
        _2783 = (_2978 * _2969) + _2314;
        _2785 = (_2978 * _2971) + _2316;
        _2787 = (_2978 * _2973) + _2318;
        _2789 = ((_2963 * 0.039999999105930328369140625) * _2978) + _2637;
        _2791 = ((_2965 * 0.039999999105930328369140625) * _2978) + _2639;
        _2793 = ((_2967 * 0.039999999105930328369140625) * _2978) + _2641;
    }
    else
    {
        _2783 = _2314;
        _2785 = _2316;
        _2787 = _2318;
        _2789 = _2637;
        _2791 = _2639;
        _2793 = _2641;
    }
    float _4698 = isnan(0.0) ? _760 : (isnan(_760) ? 0.0 : max(_760, 0.0));
    float _4709 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
    float _4720 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
    uint _2813 = _262 + 6u;
    float _2821 = _712 / cbSceneParam._m0[86u].x;
    float _2822 = _713 / cbSceneParam._m0[86u].y;
    vec4 _2836 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2821, _2822, (log2((isnan(cbSceneParam._m0[77u].w) ? _646 : (isnan(_646) ? cbSceneParam._m0[77u].w : min(_646, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2838 = _2836.x;
    float _2839 = _2836.y;
    float _2840 = _2836.z;
    float _2841 = _2836.w;
    float _2913;
    float _2915;
    float _2917;
    float _2919;
    if (_646 > cbSceneParam._m0[78u].w)
    {
        float _2875 = isnan(_646) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _646 : min(cbSceneParam._m0[80u].w, _646));
        float _2876 = _2875 / _646;
        float _2887 = _2876 * _697;
        float _2888 = _698 * _2876;
        float _2889 = (-0.0) - _2888;
        float _2891 = _2876 * _699;
        float _2893 = (cbSceneParam._m0[77u].w * _2889) / _2875;
        float _2894 = _2893 + cbSceneParam._m0[79u].w;
        float _2895 = cbSceneParam._m0[79u].w - _2888;
        float _2901 = sqrt(((_2887 * _2887) + (_2888 * _2888)) + (_2891 * _2891));
        float _2904 = (1.0 - (cbSceneParam._m0[77u].w / _2875)) * _2901;
        float _2909 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2911 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3064;
        if (abs((_2889 - _2893) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3064 = ((((_2894 > 0.0) ? exp2(_2909 * _2894) : (2.0 - exp2(_2911 * _2894))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2904;
        }
        else
        {
            float _3024 = 1.0 / cbSceneParam._m0[80u].x;
            float _3025 = isnan(_2895) ? _2894 : (isnan(_2894) ? _2895 : max(_2894, _2895));
            float _3026 = isnan(_2895) ? _2894 : (isnan(_2894) ? _2895 : min(_2894, _2895));
            float _3035 = isnan(0.0) ? _3025 : (isnan(_3025) ? 0.0 : min(_3025, 0.0));
            float _3036 = isnan(0.0) ? _3026 : (isnan(_3026) ? 0.0 : min(_3026, 0.0));
            _3064 = ((abs(_2901 / _2889) * cbSceneParam._m0[80u].y) * ((((_3035 - _3036) * 2.0) - ((exp2(_2909 * (isnan(0.0) ? _3025 : (isnan(_3025) ? 0.0 : max(_3025, 0.0)))) - exp2(_2909 * (isnan(0.0) ? _3026 : (isnan(_3026) ? 0.0 : max(_3026, 0.0))))) * _3024)) - ((exp2(_2911 * _3035) - exp2(_2911 * _3036)) * _3024))) + (_2904 * cbSceneParam._m0[80u].z);
        }
        vec4 _3066 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2821, _2822, 1.0), 0.0);
        float _3075 = exp2((_3064 * (-1.44269502162933349609375)) * (1.0 - _3066.w));
        float _3076 = log2(_3075);
        float _3092 = log2(_2841);
        _2913 = (exp2(_3092 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3076 * cbSceneParam._m0[78u].x)) * _3066.x) / cbSceneParam._m0[78u].x)) + _2838;
        _2915 = (exp2(_3092 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3076 * cbSceneParam._m0[78u].y)) * _3066.y) / cbSceneParam._m0[78u].y)) + _2839;
        _2917 = (exp2(_3092 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3076 * cbSceneParam._m0[78u].z)) * _3066.z) / cbSceneParam._m0[78u].z)) + _2840;
        _2919 = _3075 * _2841;
    }
    else
    {
        _2913 = _2838;
        _2915 = _2839;
        _2917 = _2840;
        _2919 = _2841;
    }
    float _2931 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2932 = _2931 == 3.0;
    float _2933 = log2(_2919);
    float _2940 = exp2(_2933 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4698 : (isnan(_4698) ? 1.0 : min(_4698, 1.0))) * (_2783 + ((isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0))) * _775))) + ((_2789 + ((isnan(0.0) ? _1795 : (isnan(_1795) ? 0.0 : max(_1795, 0.0))) * _1580)) * cbPerFrame._m0[3u].x));
    float _2941 = exp2(_2933 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4709 : (isnan(_4709) ? 1.0 : min(_4709, 1.0))) * (_2785 + ((isnan(0.0) ? _1504 : (isnan(_1504) ? 0.0 : max(_1504, 0.0))) * _775))) + ((_2791 + ((isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0))) * _1580)) * cbPerFrame._m0[3u].x));
    float _2942 = exp2(_2933 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4720 : (isnan(_4720) ? 1.0 : min(_4720, 1.0))) * (_2787 + ((isnan(0.0) ? _1507 : (isnan(_1507) ? 0.0 : max(_1507, 0.0))) * _775))) + ((_2793 + ((isnan(0.0) ? _1801 : (isnan(_1801) ? 0.0 : max(_1801, 0.0))) * _1580)) * cbPerFrame._m0[3u].x));
    float _2951 = (_2931 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2951 * (_2932 ? _2940 : (_2940 + (cbSceneParam._m0[72u].w * _2913)));
    SV_Target.y = _2951 * (_2932 ? _2941 : (_2941 + (cbSceneParam._m0[72u].w * _2915)));
    SV_Target.z = _2951 * (_2932 ? _2942 : (_2942 + (cbSceneParam._m0[72u].w * _2917)));
    SV_Target.w = cbInstanceData._m0[_2813].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2813].w;
}


