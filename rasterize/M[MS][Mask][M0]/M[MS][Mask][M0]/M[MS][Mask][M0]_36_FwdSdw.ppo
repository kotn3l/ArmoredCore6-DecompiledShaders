#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1255;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _223 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _224 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _225 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _231 = inversesqrt(dot(vec3(_223, _224, _225), vec3(_223, _224, _225)));
    float _238 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _245 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _251 = uint(roundEven(NORMAL.w)) * 13u;
    uint _256 = _251 + 1u;
    uint _260 = _251 + 2u;
    float _269 = sqrt(((cbInstanceData._m0[_256].x * cbInstanceData._m0[_256].x) + (cbInstanceData._m0[_251].x * cbInstanceData._m0[_251].x)) + (cbInstanceData._m0[_260].x * cbInstanceData._m0[_260].x));
    float _270 = _269 * TEXCOORD.z;
    float _271 = _269 * TEXCOORD.w;
    vec4 _291 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _297 = _291.x * cbMtdParam._m0[11u].x;
    float _298 = _291.y * cbMtdParam._m0[11u].y;
    float _299 = _291.z * cbMtdParam._m0[11u].z;
    vec4 _318 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _270) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _271) + cbTextureTilingScale._m0[5u].w));
    vec4 _371 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _373 = _371.x;
    float _385 = dot(vec4(_373, _371.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _402 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w)).x) * 2.0) - ((((_373 - _385) * cbMtdParam._m0[24u].z) + _385) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3843 = isnan(0.0) ? _402 : (isnan(_402) ? 0.0 : max(_402, 0.0));
    float _403 = isnan(1.0) ? _3843 : (isnan(_3843) ? 1.0 : min(_3843, 1.0));
    float _410 = (_403 * ((_318.x * cbMtdParam._m0[12u].x) - _297)) + _297;
    float _411 = (_403 * ((_318.y * cbMtdParam._m0[12u].y) - _298)) + _298;
    float _412 = (_403 * ((_318.z * cbMtdParam._m0[12u].z) - _299)) + _299;
    vec4 _431 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _270) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _271) + cbTextureTilingScale._m0[14u].w));
    vec4 _451 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _270) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _271) + cbTextureTilingScale._m0[4u].w));
    vec4 _468 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _470 = _468.x;
    float _471 = _468.y;
    float _472 = _468.z;
    float _481 = ((_451.z - _472) * _403) + _472;
    float _484 = ((((_451.x - _470) * _403) + _470) * 2.0) + (-1.0);
    float _486 = ((((_451.y - _471) * _403) + _471) * 2.0) + (-1.0);
    float _487 = dot(vec2(_484, _486), vec2(_484, _486));
    float _3854 = isnan(0.0) ? _487 : (isnan(_487) ? 0.0 : max(_487, 0.0));
    float _492 = sqrt(1.0 - (isnan(1.0) ? _3854 : (isnan(_3854) ? 1.0 : min(_3854, 1.0))));
    vec4 _508 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _533 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _270) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _271) + cbTextureTilingScale._m0[11u].w));
    float _535 = _533.x;
    float _536 = 1.0 - _535;
    float _542 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _545 = ((isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : min(_542, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _554 = (_545 - ((((((_535 - _536) * cbMtdParam._m0[24u].w) + _536) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _545))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3875 = isnan(0.0) ? _554 : (isnan(_554) ? 0.0 : max(_554, 0.0));
    float _555 = isnan(1.0) ? _3875 : (isnan(_3875) ? 1.0 : min(_3875, 1.0));
    float _562 = (_555 * ((_431.x * cbMtdParam._m0[18u].x) - _410)) + _410;
    float _563 = (_555 * ((_431.y * cbMtdParam._m0[18u].y) - _411)) + _411;
    float _564 = (_555 * ((_431.z * cbMtdParam._m0[18u].z) - _412)) + _412;
    vec4 _576 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _270) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _271) + cbTextureTilingScale._m0[19u].w));
    float _578 = _576.x;
    float _579 = 1.0 - _578;
    float _606 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_578 - _579) * cbMtdParam._m0[24u].y) + _579) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3886 = isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : max(_606, 0.0));
    float _607 = isnan(1.0) ? _3886 : (isnan(_3886) ? 1.0 : min(_3886, 1.0));
    float _615 = ((((cbMtdParam._m0[10u].x - _562) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _607) + _562;
    float _616 = ((((cbMtdParam._m0[10u].y - _563) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _607) + _563;
    float _617 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _564)) * _607) + _564;
    float _621 = (cbMtdParam._m0[19u].w * (_508.z - _481)) + _481;
    vec4 _635 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _270) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _271) + cbTextureTilingScale._m0[15u].w));
    float _642 = (_635.x * 2.0) + (-1.0);
    float _643 = (_635.y * 2.0) + (-1.0);
    float _644 = dot(vec2(_642, _643), vec2(_642, _643));
    float _3897 = isnan(0.0) ? _644 : (isnan(_644) ? 0.0 : max(_644, 0.0));
    float _652 = (_555 * (_635.z - _621)) + _621;
    float _655 = ((cbMtdParam._m0[23u].y - _652) * _607) + _652;
    vec4 _674 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _270) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _271) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _680 = (_674.x * 2.0) + (-1.0);
    float _681 = (_674.y * 2.0) + (-1.0);
    float _682 = dot(vec2(_680, _681), vec2(_680, _681));
    float _3908 = isnan(0.0) ? _682 : (isnan(_682) ? 0.0 : max(_682, 0.0));
    float _690 = (((_508.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _484;
    float _691 = (((_508.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _486;
    float _703 = (((_642 - _690) + (cbMtdParam._m0[21u].x * _690)) * _555) + _690;
    float _704 = (((_643 - _691) + (cbMtdParam._m0[21u].x * _691)) * _555) + _691;
    float _705 = (_555 * (sqrt(1.0 - (isnan(1.0) ? _3897 : (isnan(_3897) ? 1.0 : min(_3897, 1.0)))) - _492)) + _492;
    float _716 = (((_680 - _703) + (_703 * cbMtdParam._m0[22u].z)) * _607) + _703;
    float _717 = (((_681 - _704) + (_704 * cbMtdParam._m0[22u].z)) * _607) + _704;
    float _718 = ((sqrt(1.0 - (isnan(1.0) ? _3908 : (isnan(_3908) ? 1.0 : min(_3908, 1.0)))) - _705) * _607) + _705;
    float _720 = cbMtdParam._m0[22u].x + _508.w;
    float _723 = fma(_718, _238 * NORMAL.x, fma(_717, _245 * TANGENT.x, (_231 * _223) * _716));
    float _726 = fma(_718, _238 * NORMAL.y, fma(_717, _245 * TANGENT.y, (_231 * _224) * _716));
    float _729 = fma(_718, _238 * NORMAL.z, fma(_717, _245 * TANGENT.z, (_231 * _225) * _716));
    float _733 = inversesqrt(dot(vec3(_723, _726, _729), vec3(_723, _726, _729)));
    float _734 = _733 * _723;
    float _735 = _733 * _726;
    float _736 = _733 * _729;
    float _3919 = isnan(0.0) ? _655 : (isnan(_655) ? 0.0 : max(_655, 0.0));
    float _737 = isnan(1.0) ? _3919 : (isnan(_3919) ? 1.0 : min(_3919, 1.0));
    float _3930 = isnan(0.0) ? _720 : (isnan(_720) ? 0.0 : max(_720, 0.0));
    float _3941 = isnan(0.0) ? _615 : (isnan(_615) ? 0.0 : max(_615, 0.0));
    float _3952 = isnan(0.0) ? _616 : (isnan(_616) ? 0.0 : max(_616, 0.0));
    float _3963 = isnan(0.0) ? _617 : (isnan(_617) ? 0.0 : max(_617, 0.0));
    float _755 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _796 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _806 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _796);
    float _807 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _796);
    float _808 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _796);
    float _812 = inversesqrt(dot(vec3(_806, _807, _808), vec3(_806, _807, _808)));
    float _813 = _806 * _812;
    float _814 = _807 * _812;
    float _815 = _808 * _812;
    float _821 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _822 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _840 = fma(_736, cbSceneParam._m0[5u].z, fma(_735, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _734));
    float _843 = fma(_736, cbSceneParam._m0[6u].z, fma(_735, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _734));
    float _846 = fma(_736, cbSceneParam._m0[7u].z, fma(_735, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _734));
    uint _860 = (_251 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _866 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3941 : (isnan(_3941) ? 1.0 : min(_3941, 1.0)))) * cbInstanceData._m0[_860].x;
    float _867 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3952 : (isnan(_3952) ? 1.0 : min(_3952, 1.0)))) * cbInstanceData._m0[_860].y;
    float _868 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3963 : (isnan(_3963) ? 1.0 : min(_3963, 1.0)))) * cbInstanceData._m0[_860].z;
    float _3974 = isnan(0.0) ? _866 : (isnan(_866) ? 0.0 : max(_866, 0.0));
    float _869 = isnan(1.0) ? _3974 : (isnan(_3974) ? 1.0 : min(_3974, 1.0));
    float _3985 = isnan(0.0) ? _867 : (isnan(_867) ? 0.0 : max(_867, 0.0));
    float _870 = isnan(1.0) ? _3985 : (isnan(_3985) ? 1.0 : min(_3985, 1.0));
    float _3996 = isnan(0.0) ? _868 : (isnan(_868) ? 0.0 : max(_868, 0.0));
    float _871 = isnan(1.0) ? _3996 : (isnan(_3996) ? 1.0 : min(_3996, 1.0));
    vec4 _880 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _821, cbSceneParam._m0[86u].y * _822));
    float _884 = ((isnan(1.0) ? _3930 : (isnan(_3930) ? 1.0 : min(_3930, 1.0))) * TEXCOORD_5.w) * _880.x;
    float _885 = dot(vec3(_734, _735, _736), vec3(_813, _814, _815));
    float _888 = _885 * 2.0;
    float _892 = (_888 * _734) - _813;
    float _893 = (_888 * _735) - _814;
    float _894 = (_888 * _736) - _815;
    float _898 = abs(dot(vec3(_813, _814, _815), vec3(_734, _735, _736)));
    float _4007 = isnan(0.0) ? _898 : (isnan(_898) ? 0.0 : max(_898, 0.0));
    float _900 = sqrt(_737);
    float _913 = exp2((_900 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4007 : (isnan(_4007) ? 1.0 : min(_4007, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_900 * 3.0));
    float _945 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _949 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _953 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1254;
    float _1256;
    float _1257;
    float _1258;
    float _1259;
    float _1260;
    float _1261;
    float _1262;
    float _1263;
    float _1264;
    float _1265;
    float _1266;
    float _1267;
    float _1268;
    float _1269;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _979 = fma(_953, cbModelParam._m0[26u].z, fma(_949, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _945));
        float _983 = fma(_953, cbModelParam._m0[27u].z, fma(_949, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _945));
        float _987 = fma(_953, cbModelParam._m0[28u].z, fma(_949, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _945));
        float _1012 = _945 + _734;
        float _1013 = _949 + _735;
        float _1014 = _953 + _736;
        float _1024 = fma(_1014, cbModelParam._m0[26u].z, fma(_1013, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1012)) - _979;
        float _1025 = fma(_1014, cbModelParam._m0[27u].z, fma(_1013, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1012)) - _983;
        float _1026 = fma(_1014, cbModelParam._m0[28u].z, fma(_1013, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1012)) - _987;
        float _1030 = inversesqrt(dot(vec3(_1024, _1025, _1026), vec3(_1024, _1025, _1026)));
        float _1043 = ((_1030 * _1024) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_979 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1044 = ((_1030 * _1025) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_983 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1045 = ((_1030 * _1026) / cbModelParam._m0[34u].z) + ((((((_987 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1048 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1043, _1044, _1045), 0.0);
        vec4 _1055 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1043, _1044, _1045), 0.0);
        vec4 _1062 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1043, _1044, _1045), 0.0);
        vec4 _1069 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1043, _1044, _1045), 0.0);
        float _1082 = exp2((_1048.w + (-0.5)) * 20.0) * 2.0;
        float _1083 = _1082 * (_1048.x + (-0.5));
        float _1084 = _1082 * (_1048.y + (-0.5));
        float _1085 = _1082 * (_1048.z + (-0.5));
        float _1092 = exp2((_1055.w + (-0.5)) * 20.0) * 2.0;
        float _1093 = _1092 * (_1055.x + (-0.5));
        float _1094 = _1092 * (_1055.y + (-0.5));
        float _1095 = _1092 * (_1055.z + (-0.5));
        float _1102 = exp2((_1062.w + (-0.5)) * 20.0) * 2.0;
        float _1103 = _1102 * (_1062.x + (-0.5));
        float _1104 = _1102 * (_1062.y + (-0.5));
        float _1105 = _1102 * (_1062.z + (-0.5));
        float _1112 = exp2((_1069.w + (-0.5)) * 20.0) * 2.0;
        float _1113 = _1112 * (_1069.x + (-0.5));
        float _1114 = _1112 * (_1069.y + (-0.5));
        float _1115 = _1112 * (_1069.z + (-0.5));
        float _1116 = isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0));
        float _1117 = isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0));
        float _1118 = isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0));
        float _1119 = _1083 * 0.5;
        float _1120 = _1093 * 0.5;
        float _1121 = _1103 * 0.5;
        float _1122 = dot(vec3(_1119, _1120, _1121), vec3(_1119, _1120, _1121));
        float _1127 = (_1122 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1122);
        float _1136 = (dot(vec3(_734, _735, _736), vec3(_1127 * _1119, _1127 * _1120, _1127 * _1121)) + 1.0) * 0.5;
        float _4033 = isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0));
        float _1146 = sqrt(((_1120 * _1120) + (_1119 * _1119)) + (_1121 * _1121)) / (_1116 + 9.9999997473787516355514526367188e-06);
        float _4044 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
        float _1147 = isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0));
        float _1148 = _1147 * 2.0;
        float _1152 = (1.0 - _1147) / (_1147 + 1.0);
        float _4055 = isnan(0.0) ? _1152 : (isnan(_1152) ? 0.0 : max(_1152, 0.0));
        float _1153 = isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0));
        float _1162 = ((((1.0 - _1153) * (_1148 + 2.0)) * exp2(log2(isnan(1.0) ? _4033 : (isnan(_4033) ? 1.0 : min(_4033, 1.0))) * (_1148 + 1.0))) + _1153) * _1116;
        float _1163 = _1084 * 0.5;
        float _1164 = _1094 * 0.5;
        float _1165 = _1104 * 0.5;
        float _1166 = dot(vec3(_1163, _1164, _1165), vec3(_1163, _1164, _1165));
        float _1171 = (_1166 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1166);
        float _1179 = (dot(vec3(_734, _735, _736), vec3(_1171 * _1163, _1171 * _1164, _1171 * _1165)) + 1.0) * 0.5;
        float _4066 = isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0));
        float _1188 = sqrt(((_1164 * _1164) + (_1163 * _1163)) + (_1165 * _1165)) / (_1117 + 9.9999997473787516355514526367188e-06);
        float _4077 = isnan(0.0) ? _1188 : (isnan(_1188) ? 0.0 : max(_1188, 0.0));
        float _1189 = isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0));
        float _1190 = _1189 * 2.0;
        float _1194 = (1.0 - _1189) / (_1189 + 1.0);
        float _4088 = isnan(0.0) ? _1194 : (isnan(_1194) ? 0.0 : max(_1194, 0.0));
        float _1195 = isnan(1.0) ? _4088 : (isnan(_4088) ? 1.0 : min(_4088, 1.0));
        float _1204 = ((((1.0 - _1195) * (_1190 + 2.0)) * exp2(log2(isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0))) * (_1190 + 1.0))) + _1195) * _1117;
        float _1205 = _1085 * 0.5;
        float _1206 = _1095 * 0.5;
        float _1207 = _1105 * 0.5;
        float _1208 = dot(vec3(_1205, _1206, _1207), vec3(_1205, _1206, _1207));
        float _1213 = (_1208 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1208);
        float _1221 = (dot(vec3(_734, _735, _736), vec3(_1213 * _1205, _1213 * _1206, _1213 * _1207)) + 1.0) * 0.5;
        float _4099 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
        float _1230 = sqrt(((_1206 * _1206) + (_1205 * _1205)) + (_1207 * _1207)) / (_1118 + 9.9999997473787516355514526367188e-06);
        float _4110 = isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0));
        float _1231 = isnan(1.0) ? _4110 : (isnan(_4110) ? 1.0 : min(_4110, 1.0));
        float _1232 = _1231 * 2.0;
        float _1236 = (1.0 - _1231) / (_1231 + 1.0);
        float _4121 = isnan(0.0) ? _1236 : (isnan(_1236) ? 0.0 : max(_1236, 0.0));
        float _1237 = isnan(1.0) ? _4121 : (isnan(_4121) ? 1.0 : min(_4121, 1.0));
        float _1246 = ((((1.0 - _1237) * (_1232 + 2.0)) * exp2(log2(isnan(1.0) ? _4099 : (isnan(_4099) ? 1.0 : min(_4099, 1.0))) * (_1232 + 1.0))) + _1237) * _1118;
        _1254 = _1085;
        _1256 = _1084;
        _1257 = _1083;
        _1258 = _1095;
        _1259 = _1094;
        _1260 = _1093;
        _1261 = _1105;
        _1262 = _1104;
        _1263 = _1103;
        _1264 = _1118;
        _1265 = _1117;
        _1266 = _1116;
        _1267 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0)));
        _1268 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1204 : (isnan(_1204) ? 0.0 : max(_1204, 0.0)));
        _1269 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1246 : (isnan(_1246) ? 0.0 : max(_1246, 0.0)));
    }
    else
    {
        _1254 = _1255;
        _1256 = _1255;
        _1257 = _1255;
        _1258 = _1255;
        _1259 = _1255;
        _1260 = _1255;
        _1261 = _1255;
        _1262 = _1255;
        _1263 = _1255;
        _1264 = _1255;
        _1265 = _1255;
        _1266 = _1255;
        _1267 = 0.0;
        _1268 = 0.0;
        _1269 = 0.0;
    }
    float _1563;
    float _1564;
    float _1565;
    float _1566;
    float _1567;
    float _1568;
    float _1569;
    float _1570;
    float _1571;
    float _1572;
    float _1573;
    float _1574;
    float _1575;
    float _1576;
    float _1577;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1294 = fma(_953, cbModelParam._m0[30u].z, fma(_949, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _945));
        float _1298 = fma(_953, cbModelParam._m0[31u].z, fma(_949, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _945));
        float _1302 = fma(_953, cbModelParam._m0[32u].z, fma(_949, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _945));
        float _1325 = _945 + _734;
        float _1326 = _949 + _735;
        float _1327 = _953 + _736;
        float _1337 = fma(_1327, cbModelParam._m0[30u].z, fma(_1326, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1325)) - _1294;
        float _1338 = fma(_1327, cbModelParam._m0[31u].z, fma(_1326, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1325)) - _1298;
        float _1339 = fma(_1327, cbModelParam._m0[32u].z, fma(_1326, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1325)) - _1302;
        float _1343 = inversesqrt(dot(vec3(_1337, _1338, _1339), vec3(_1337, _1338, _1339)));
        float _1356 = ((_1343 * _1337) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1294 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1357 = ((_1343 * _1338) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1298 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1358 = ((_1343 * _1339) / cbModelParam._m0[35u].z) + ((((((_1302 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1360 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1356, _1357, _1358), 0.0);
        vec4 _1367 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1356, _1357, _1358), 0.0);
        vec4 _1374 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1356, _1357, _1358), 0.0);
        vec4 _1381 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1356, _1357, _1358), 0.0);
        float _1393 = exp2((_1360.w + (-0.5)) * 20.0) * 2.0;
        float _1394 = _1393 * (_1360.x + (-0.5));
        float _1395 = _1393 * (_1360.y + (-0.5));
        float _1396 = _1393 * (_1360.z + (-0.5));
        float _1403 = exp2((_1367.w + (-0.5)) * 20.0) * 2.0;
        float _1404 = _1403 * (_1367.x + (-0.5));
        float _1405 = _1403 * (_1367.y + (-0.5));
        float _1406 = _1403 * (_1367.z + (-0.5));
        float _1413 = exp2((_1374.w + (-0.5)) * 20.0) * 2.0;
        float _1414 = _1413 * (_1374.x + (-0.5));
        float _1415 = _1413 * (_1374.y + (-0.5));
        float _1416 = _1413 * (_1374.z + (-0.5));
        float _1423 = exp2((_1381.w + (-0.5)) * 20.0) * 2.0;
        float _1424 = _1423 * (_1381.x + (-0.5));
        float _1425 = _1423 * (_1381.y + (-0.5));
        float _1426 = _1423 * (_1381.z + (-0.5));
        float _1427 = isnan(0.0) ? _1424 : (isnan(_1424) ? 0.0 : max(_1424, 0.0));
        float _1428 = isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0));
        float _1429 = isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0));
        float _1430 = _1394 * 0.5;
        float _1431 = _1404 * 0.5;
        float _1432 = _1414 * 0.5;
        float _1433 = dot(vec3(_1430, _1431, _1432), vec3(_1430, _1431, _1432));
        float _1438 = (_1433 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1433);
        float _1446 = (dot(vec3(_734, _735, _736), vec3(_1438 * _1430, _1438 * _1431, _1438 * _1432)) + 1.0) * 0.5;
        float _4162 = isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0));
        float _1455 = sqrt(((_1431 * _1431) + (_1430 * _1430)) + (_1432 * _1432)) / (_1427 + 9.9999997473787516355514526367188e-06);
        float _4173 = isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0));
        float _1456 = isnan(1.0) ? _4173 : (isnan(_4173) ? 1.0 : min(_4173, 1.0));
        float _1457 = _1456 * 2.0;
        float _1461 = (1.0 - _1456) / (_1456 + 1.0);
        float _4184 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0));
        float _1462 = isnan(1.0) ? _4184 : (isnan(_4184) ? 1.0 : min(_4184, 1.0));
        float _1471 = ((((1.0 - _1462) * (_1457 + 2.0)) * exp2(log2(isnan(1.0) ? _4162 : (isnan(_4162) ? 1.0 : min(_4162, 1.0))) * (_1457 + 1.0))) + _1462) * _1427;
        float _1472 = _1395 * 0.5;
        float _1473 = _1405 * 0.5;
        float _1474 = _1415 * 0.5;
        float _1475 = dot(vec3(_1472, _1473, _1474), vec3(_1472, _1473, _1474));
        float _1480 = (_1475 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1475);
        float _1488 = (dot(vec3(_734, _735, _736), vec3(_1480 * _1472, _1480 * _1473, _1480 * _1474)) + 1.0) * 0.5;
        float _4195 = isnan(0.0) ? _1488 : (isnan(_1488) ? 0.0 : max(_1488, 0.0));
        float _1497 = sqrt(((_1473 * _1473) + (_1472 * _1472)) + (_1474 * _1474)) / (_1428 + 9.9999997473787516355514526367188e-06);
        float _4206 = isnan(0.0) ? _1497 : (isnan(_1497) ? 0.0 : max(_1497, 0.0));
        float _1498 = isnan(1.0) ? _4206 : (isnan(_4206) ? 1.0 : min(_4206, 1.0));
        float _1499 = _1498 * 2.0;
        float _1503 = (1.0 - _1498) / (_1498 + 1.0);
        float _4217 = isnan(0.0) ? _1503 : (isnan(_1503) ? 0.0 : max(_1503, 0.0));
        float _1504 = isnan(1.0) ? _4217 : (isnan(_4217) ? 1.0 : min(_4217, 1.0));
        float _1513 = ((((1.0 - _1504) * (_1499 + 2.0)) * exp2(log2(isnan(1.0) ? _4195 : (isnan(_4195) ? 1.0 : min(_4195, 1.0))) * (_1499 + 1.0))) + _1504) * _1428;
        float _1514 = _1396 * 0.5;
        float _1515 = _1406 * 0.5;
        float _1516 = _1416 * 0.5;
        float _1517 = dot(vec3(_1514, _1515, _1516), vec3(_1514, _1515, _1516));
        float _1522 = (_1517 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1517);
        float _1530 = (dot(vec3(_734, _735, _736), vec3(_1522 * _1514, _1522 * _1515, _1522 * _1516)) + 1.0) * 0.5;
        float _4228 = isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0));
        float _1539 = sqrt(((_1515 * _1515) + (_1514 * _1514)) + (_1516 * _1516)) / (_1429 + 9.9999997473787516355514526367188e-06);
        float _4239 = isnan(0.0) ? _1539 : (isnan(_1539) ? 0.0 : max(_1539, 0.0));
        float _1540 = isnan(1.0) ? _4239 : (isnan(_4239) ? 1.0 : min(_4239, 1.0));
        float _1541 = _1540 * 2.0;
        float _1545 = (1.0 - _1540) / (_1540 + 1.0);
        float _4250 = isnan(0.0) ? _1545 : (isnan(_1545) ? 0.0 : max(_1545, 0.0));
        float _1546 = isnan(1.0) ? _4250 : (isnan(_4250) ? 1.0 : min(_4250, 1.0));
        float _1555 = ((((1.0 - _1546) * (_1541 + 2.0)) * exp2(log2(isnan(1.0) ? _4228 : (isnan(_4228) ? 1.0 : min(_4228, 1.0))) * (_1541 + 1.0))) + _1546) * _1429;
        _1563 = _1396;
        _1564 = _1395;
        _1565 = _1394;
        _1566 = _1406;
        _1567 = _1405;
        _1568 = _1404;
        _1569 = _1416;
        _1570 = _1415;
        _1571 = _1414;
        _1572 = _1429;
        _1573 = _1428;
        _1574 = _1427;
        _1575 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1471 : (isnan(_1471) ? 0.0 : max(_1471, 0.0)));
        _1576 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0)));
        _1577 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1555 : (isnan(_1555) ? 0.0 : max(_1555, 0.0)));
    }
    else
    {
        _1563 = _1255;
        _1564 = _1255;
        _1565 = _1255;
        _1566 = _1255;
        _1567 = _1255;
        _1568 = _1255;
        _1569 = _1255;
        _1570 = _1255;
        _1571 = _1255;
        _1572 = _1255;
        _1573 = _1255;
        _1574 = _1255;
        _1575 = 0.0;
        _1576 = 0.0;
        _1577 = 0.0;
    }
    float _1587 = (cbModelParam._m0[1u].x * (_1575 - _1267)) + _1267;
    float _1588 = (cbModelParam._m0[1u].x * (_1576 - _1268)) + _1268;
    float _1589 = (cbModelParam._m0[1u].x * (_1577 - _1269)) + _1269;
    float _1610 = fma(_1589, cbSceneParam._m0[89u].z, fma(_1588, cbSceneParam._m0[89u].y, _1587 * cbSceneParam._m0[89u].x));
    float _1613 = fma(_1589, cbSceneParam._m0[90u].z, fma(_1588, cbSceneParam._m0[90u].y, _1587 * cbSceneParam._m0[90u].x));
    float _1616 = fma(_1589, cbSceneParam._m0[91u].z, fma(_1588, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1587));
    float _1631 = _892 * 0.5;
    float _1632 = _893 * 0.5;
    float _1633 = _894 * 0.5;
    float _1634 = dot(vec4(_1631, _1632, _1633, 1.0), vec4(_1565, _1568, _1571, _1574));
    float _1637 = dot(vec4(_1631, _1632, _1633, 1.0), vec4(_1564, _1567, _1570, _1573));
    float _1640 = dot(vec4(_1631, _1632, _1633, 1.0), vec4(_1563, _1566, _1569, _1572));
    float _1674;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1647 = dot(vec4(_1631, _1632, _1633, 1.0), vec4(_1254, _1258, _1261, _1264));
        float _1651 = dot(vec4(_1631, _1632, _1633, 1.0), vec4(_1256, _1259, _1262, _1265));
        float _1655 = dot(vec4(_1631, _1632, _1633, 1.0), vec4(_1257, _1260, _1263, _1266));
        float _1662 = dot(vec4(cbModelParam._m0[39u]), vec4(_1631, _1632, _1633, 1.0));
        _1674 = dot(vec3(isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0)), isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0)), isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1662) ? 0.0 : (isnan(0.0) ? _1662 : max(0.0, _1662))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1674 = 1.0;
    }
    float _1685;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1676 = dot(vec4(cbModelParam._m0[40u]), vec4(_1631, _1632, _1633, 1.0));
        _1685 = dot(vec3(isnan(0.0) ? _1634 : (isnan(_1634) ? 0.0 : max(_1634, 0.0)), isnan(0.0) ? _1637 : (isnan(_1637) ? 0.0 : max(_1637, 0.0)), isnan(0.0) ? _1640 : (isnan(_1640) ? 0.0 : max(_1640, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1676) ? 0.0 : (isnan(0.0) ? _1676 : max(0.0, _1676))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1685 = 1.0;
    }
    float _1689 = (_1685 * cbModelParam._m0[1u].x) + (_1674 * (1.0 - cbModelParam._m0[1u].x));
    float _1699 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _737);
    float _1700 = isnan(_1699) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1699 : min(cbModelParam._m0[25u].z, _1699));
    float _1780;
    float _1782;
    float _1784;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1747 = fma(_953, cbModelParam._m0[13u].z, fma(_949, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _945)) + cbModelParam._m0[13u].w;
        float _1751 = fma(_953, cbModelParam._m0[14u].z, fma(_949, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _945)) + cbModelParam._m0[14u].w;
        float _1755 = fma(_953, cbModelParam._m0[15u].z, fma(_949, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _945)) + cbModelParam._m0[15u].w;
        float _1758 = fma(_894, cbModelParam._m0[13u].z, fma(_893, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _892));
        float _1761 = fma(_894, cbModelParam._m0[14u].z, fma(_893, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _892));
        float _1764 = fma(_894, cbModelParam._m0[15u].z, fma(_893, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _892));
        float _1792;
        if (_1758 > 0.0)
        {
            _1792 = abs((1.0 - _1747) / _1758);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1758 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1747 + 1.0) / _1758);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1792 = frontier_phi_14_12_ladder;
        }
        float _1961;
        if (_1761 > 0.0)
        {
            _1961 = abs((1.0 - _1751) / _1761);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1761 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1751 + 1.0) / _1761);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1961 = frontier_phi_23_19_ladder;
        }
        float _2256;
        if (_1764 > 0.0)
        {
            _2256 = abs((1.0 - _1755) / _1764);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1764 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1755 + 1.0) / _1764);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2256 = frontier_phi_35_30_ladder;
        }
        float _2258 = isnan(_1961) ? _1792 : (isnan(_1792) ? _1961 : min(_1792, _1961));
        float _2259 = isnan(_2256) ? _2258 : (isnan(_2258) ? _2256 : min(_2258, _2256));
        float _2263 = (_2259 * _1758) + _1747;
        float _2264 = (_2259 * _1761) + _1751;
        float _2265 = (_2259 * _1764) + _1755;
        float _2266 = _2259 * 9.9999997473787516355514526367188e-05;
        float _2268 = (-1.0) - _2266;
        float _2270 = _2266 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2265 > _2270) || ((_2265 < _2268) || ((_2264 > _2270) || ((_2264 < _2268) || ((_2263 < _2268) || (_2263 > _2270))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2410 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2265, cbModelParam._m0[9u].z, fma(_2264, cbModelParam._m0[9u].y, _2263 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2265, cbModelParam._m0[10u].z, fma(_2264, cbModelParam._m0[10u].y, _2263 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2265, cbModelParam._m0[11u].z, fma(_2264, cbModelParam._m0[11u].y, _2263 * cbModelParam._m0[11u].x))), _1700);
            frontier_phi_13_35_ladder = _2410.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2410.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2410.x * cbModelParam._m0[1u].y;
        }
        _1780 = frontier_phi_13_35_ladder_2;
        _1782 = frontier_phi_13_35_ladder_1;
        _1784 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1768 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_892, _893, _894), _1700);
        _1780 = _1768.x * cbModelParam._m0[1u].y;
        _1782 = _1768.y * cbModelParam._m0[1u].y;
        _1784 = _1768.z * cbModelParam._m0[1u].y;
    }
    float _1788 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _737);
    float _1789 = isnan(_1788) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1788 : min(cbModelParam._m0[25u].w, _1788));
    float _1878;
    float _1880;
    float _1882;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1842 = fma(_953, cbModelParam._m0[21u].z, fma(_949, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _945)) + cbModelParam._m0[21u].w;
        float _1846 = fma(_953, cbModelParam._m0[22u].z, fma(_949, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _945)) + cbModelParam._m0[22u].w;
        float _1850 = fma(_953, cbModelParam._m0[23u].z, fma(_949, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _945)) + cbModelParam._m0[23u].w;
        float _1853 = fma(_894, cbModelParam._m0[21u].z, fma(_893, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _892));
        float _1856 = fma(_894, cbModelParam._m0[22u].z, fma(_893, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _892));
        float _1859 = fma(_894, cbModelParam._m0[23u].z, fma(_893, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _892));
        float _1966;
        if (_1853 > 0.0)
        {
            _1966 = abs((1.0 - _1842) / _1853);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1853 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1842 + 1.0) / _1853);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1966 = frontier_phi_25_21_ladder;
        }
        float _2283;
        if (_1856 > 0.0)
        {
            _2283 = abs((1.0 - _1846) / _1856);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1856 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1846 + 1.0) / _1856);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2283 = frontier_phi_37_32_ladder;
        }
        float _2610;
        if (_1859 > 0.0)
        {
            _2610 = abs((1.0 - _1850) / _1859);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1859 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1850 + 1.0) / _1859);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2610 = frontier_phi_47_44_ladder;
        }
        float _2612 = isnan(_2283) ? _1966 : (isnan(_1966) ? _2283 : min(_1966, _2283));
        float _2613 = isnan(_2610) ? _2612 : (isnan(_2612) ? _2610 : min(_2612, _2610));
        float _2617 = (_2613 * _1853) + _1842;
        float _2618 = (_2613 * _1856) + _1846;
        float _2619 = (_2613 * _1859) + _1850;
        float _2620 = _2613 * 9.9999997473787516355514526367188e-05;
        float _2621 = (-1.0) - _2620;
        float _2623 = _2620 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2619 > _2623) || ((_2619 < _2621) || ((_2618 > _2623) || ((_2618 < _2621) || ((_2617 < _2621) || (_2617 > _2623))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2737 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2619, cbModelParam._m0[17u].z, fma(_2618, cbModelParam._m0[17u].y, _2617 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2619, cbModelParam._m0[18u].z, fma(_2618, cbModelParam._m0[18u].y, _2617 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2619, cbModelParam._m0[19u].z, fma(_2618, cbModelParam._m0[19u].y, _2617 * cbModelParam._m0[19u].x))), _1789);
            frontier_phi_22_47_ladder = _2737.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2737.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2737.x * cbModelParam._m0[1u].z;
        }
        _1878 = frontier_phi_22_47_ladder_2;
        _1880 = frontier_phi_22_47_ladder_1;
        _1882 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1862 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_892, _893, _894), _1789);
        _1878 = _1862.x * cbModelParam._m0[1u].z;
        _1880 = _1862.y * cbModelParam._m0[1u].z;
        _1882 = _1862.z * cbModelParam._m0[1u].z;
    }
    float _1894 = ((((1.0 - _913) * ((_900 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_913 * _900)) * _884;
    float _1895 = _1894 * ((cbModelParam._m0[1u].w * (_1878 - _1780)) + _1780);
    float _1896 = _1894 * ((cbModelParam._m0[1u].w * (_1880 - _1782)) + _1782);
    float _1897 = _1894 * ((cbModelParam._m0[1u].w * (_1882 - _1784)) + _1784);
    float _1900 = fma(_1897, cbSceneParam._m0[89u].z, fma(_1896, cbSceneParam._m0[89u].y, _1895 * cbSceneParam._m0[89u].x));
    float _1903 = fma(_1897, cbSceneParam._m0[90u].z, fma(_1896, cbSceneParam._m0[90u].y, _1895 * cbSceneParam._m0[90u].x));
    float _1906 = fma(_1897, cbSceneParam._m0[91u].z, fma(_1896, cbSceneParam._m0[91u].y, _1895 * cbSceneParam._m0[91u].x));
    float _1940 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1944 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1948 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1952 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1953 = _1940 / _1952;
    float _1954 = _1944 / _1952;
    float _1955 = _1948 / _1952;
    float _2102;
    float _2103;
    float _2104;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1982 = ((uint(_1955 > cbSceneParam._m0[59u].y) + uint(_1955 > cbSceneParam._m0[59u].x)) + uint(_1955 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1983 = _1982 + 43u;
        uint _1991 = _1982 + 44u;
        uint _1999 = _1982 + 45u;
        uint _2007 = _1982 + 46u;
        float _2018 = fma(_1952, cbSceneParam._m0[_1983].w, fma(_1948, cbSceneParam._m0[_1983].z, fma(_1944, cbSceneParam._m0[_1983].y, _1940 * cbSceneParam._m0[_1983].x)));
        float _2022 = fma(_1952, cbSceneParam._m0[_1991].w, fma(_1948, cbSceneParam._m0[_1991].z, fma(_1944, cbSceneParam._m0[_1991].y, _1940 * cbSceneParam._m0[_1991].x)));
        float _2030 = fma(_1952, cbSceneParam._m0[_2007].w, fma(_1948, cbSceneParam._m0[_2007].z, fma(_1944, cbSceneParam._m0[_2007].y, _1940 * cbSceneParam._m0[_2007].x)));
        float _2035 = cbSceneParam._m0[33u].z * _2030;
        float _2037 = cbSceneParam._m0[33u].w * _2030;
        float _2040 = fma(_1952, cbSceneParam._m0[_1999].w, fma(_1948, cbSceneParam._m0[_1999].z, fma(_1944, cbSceneParam._m0[_1999].y, _1940 * cbSceneParam._m0[_1999].x))) / _2030;
        float _2088 = (cbSceneParam._m0[33u].x - sqrt(((_1954 * _1954) + (_1953 * _1953)) + (_1955 * _1955))) * cbSceneParam._m0[33u].y;
        float _4376 = isnan(0.0) ? _2088 : (isnan(_2088) ? 0.0 : max(_2088, 0.0));
        float _2095 = (isnan(1.0) ? _4376 : (isnan(_4376) ? 1.0 : min(_4376, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2035 + _2018) / _2030, (_2037 + _2022) / _2030), _2040), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2037 + _2018) / _2030, (_2022 - _2035) / _2030), _2040), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2018 - _2035) / _2030, (_2022 - _2037) / _2030), _2040), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2018 - _2037) / _2030, (_2035 + _2022) / _2030), _2040), 0.0)).x), vec4(0.25)));
        _2102 = 1.0 - (_2095 * cbSceneParam._m0[34u].x);
        _2103 = 1.0 - (_2095 * cbSceneParam._m0[34u].y);
        _2104 = 1.0 - (_2095 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2102 = 1.0;
        _2103 = 1.0;
        _2104 = 1.0;
    }
    float _2168;
    float _2170;
    float _2172;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2156 = fma(_1952, cbSceneParam._m0[63u].w, fma(_1948, cbSceneParam._m0[63u].z, fma(_1944, cbSceneParam._m0[63u].y, _1940 * cbSceneParam._m0[63u].x)));
        float _2157 = fma(_1952, cbSceneParam._m0[60u].w, fma(_1948, cbSceneParam._m0[60u].z, fma(_1944, cbSceneParam._m0[60u].y, _1940 * cbSceneParam._m0[60u].x))) / _2156;
        float _2158 = fma(_1952, cbSceneParam._m0[61u].w, fma(_1948, cbSceneParam._m0[61u].z, fma(_1944, cbSceneParam._m0[61u].y, _1940 * cbSceneParam._m0[61u].x))) / _2156;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2157 >= cbSceneParam._m0[64u].x) && (_2158 >= cbSceneParam._m0[64u].y)) && (_2157 <= cbSceneParam._m0[64u].z)) && (_2158 <= cbSceneParam._m0[64u].w))
        {
            float _2296 = fma(_1952, cbSceneParam._m0[62u].w, fma(_1948, cbSceneParam._m0[62u].z, fma(_1944, cbSceneParam._m0[62u].y, _1940 * cbSceneParam._m0[62u].x))) / _2156;
            float _2300 = isnan(cbSceneParam._m0[41u].w) ? _2296 : (isnan(_2296) ? cbSceneParam._m0[41u].w : max(_2296, cbSceneParam._m0[41u].w));
            float _2343 = (cbSceneParam._m0[33u].x - sqrt(((_1954 * _1954) + (_1953 * _1953)) + (_1955 * _1955))) * cbSceneParam._m0[33u].y;
            float _4392 = isnan(0.0) ? _2343 : (isnan(_2343) ? 0.0 : max(_2343, 0.0));
            float _2350 = (isnan(1.0) ? _4392 : (isnan(_4392) ? 1.0 : min(_4392, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2157, cbSceneParam._m0[33u].w + _2158), _2300), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2157, _2158 - cbSceneParam._m0[33u].z), _2300), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2157 - cbSceneParam._m0[33u].z, _2158 - cbSceneParam._m0[33u].w), _2300), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2157 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2158), _2300), 0.0)).x), vec4(0.25)));
            float _2354 = 1.0 - (_2350 * cbSceneParam._m0[34u].x);
            float _2355 = 1.0 - (_2350 * cbSceneParam._m0[34u].y);
            float _2356 = 1.0 - (_2350 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2356) ? _2104 : (isnan(_2104) ? _2356 : min(_2104, _2356));
            frontier_phi_34_33_ladder_1 = isnan(_2355) ? _2103 : (isnan(_2103) ? _2355 : min(_2103, _2355));
            frontier_phi_34_33_ladder_2 = isnan(_2354) ? _2102 : (isnan(_2102) ? _2354 : min(_2102, _2354));
        }
        else
        {
            frontier_phi_34_33_ladder = _2104;
            frontier_phi_34_33_ladder_1 = _2103;
            frontier_phi_34_33_ladder_2 = _2102;
        }
        _2168 = frontier_phi_34_33_ladder_2;
        _2170 = frontier_phi_34_33_ladder_1;
        _2172 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2168 = _2102;
        _2170 = _2103;
        _2172 = _2104;
    }
    uvec4 _2177 = floatBitsToUint(cbInstanceData._m0[_251 + 5u]);
    uint _2179 = _2177.x * 14u;
    uint _2180 = _2179 + 13u;
    float _2187 = _884 + (-1.0);
    float _2192 = (cbLight._m0[_2180].x * _2187) + 1.0;
    float _2193 = (cbLight._m0[_2180].y * _2187) + 1.0;
    float _2194 = (cbLight._m0[_2180].z * _2187) + 1.0;
    float _2195 = (cbLight._m0[_2180].w * _2187) + 1.0;
    uint _2196 = _2179 + 5u;
    float _2202 = isnan(1.0) ? _2193 : (isnan(_2193) ? 1.0 : min(_2193, 1.0));
    uint _2206 = _2179 + 4u;
    float _2215 = isnan(1.0) ? _2192 : (isnan(_2192) ? 1.0 : min(_2192, 1.0));
    uint _2219 = _2179 | 1u;
    float _2230 = dot(vec3(cbLight._m0[_2179].xyz), vec3(_734, _735, _736));
    float _2233 = dot(vec3(cbLight._m0[_2219].xyz), vec3(_734, _735, _736));
    float _4428 = isnan(0.0) ? _2230 : (isnan(_2230) ? 0.0 : max(_2230, 0.0));
    float _4439 = isnan(0.0) ? _2233 : (isnan(_2233) ? 0.0 : max(_2233, 0.0));
    float _2238 = (isnan(1.0) ? _4428 : (isnan(_4428) ? 1.0 : min(_4428, 1.0))) * 0.3183098733425140380859375;
    float _2240 = (isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0))) * 0.3183098733425140380859375;
    float _2247 = ((cbLight._m0[_2196].x * _2202) * _2240) + (((cbLight._m0[_2206].x * _2168) * _2215) * _2238);
    float _2248 = ((_2202 * cbLight._m0[_2196].y) * _2240) + (((cbLight._m0[_2206].y * _2170) * _2215) * _2238);
    float _2249 = ((_2202 * cbLight._m0[_2196].z) * _2240) + (((cbLight._m0[_2206].z * _2172) * _2215) * _2238);
    uvec4 _2253 = floatBitsToUint(cbLight._m0[_2179 + 12u]);
    bool _2255 = _2253.x == 0u;
    float _2357;
    float _2359;
    float _2361;
    if (_2255)
    {
        _2357 = _2247;
        _2359 = _2248;
        _2361 = _2249;
    }
    else
    {
        uint _2365 = _2179 + 6u;
        float _2381 = (dot(vec3(cbLight._m0[_2179 + 2u].xyz), vec3(_734, _735, _736)) * 0.5) + 0.5;
        float _2382 = _2381 * _2381;
        float _4450 = isnan(0.0) ? _2382 : (isnan(_2382) ? 0.0 : max(_2382, 0.0));
        float _2383 = isnan(1.0) ? _4450 : (isnan(_4450) ? 1.0 : min(_4450, 1.0));
        float _2384 = isnan(1.0) ? _2194 : (isnan(_2194) ? 1.0 : min(_2194, 1.0));
        _2357 = (((cbLight._m0[_2365].x * 0.3183098733425140380859375) * _2383) * _2384) + _2247;
        _2359 = (((cbLight._m0[_2365].y * 0.3183098733425140380859375) * _2383) * _2384) + _2248;
        _2361 = (((cbLight._m0[_2365].z * 0.3183098733425140380859375) * _2383) * _2384) + _2249;
    }
    bool _2364 = _2253.y == 0u;
    float _2419;
    float _2421;
    float _2423;
    if (_2364)
    {
        _2419 = _2357;
        _2421 = _2359;
        _2423 = _2361;
    }
    else
    {
        uint _2581 = _2179 + 7u;
        float _2597 = (dot(vec3(cbLight._m0[_2179 + 3u].xyz), vec3(_734, _735, _736)) * 0.5) + 0.5;
        float _2598 = _2597 * _2597;
        float _4466 = isnan(0.0) ? _2598 : (isnan(_2598) ? 0.0 : max(_2598, 0.0));
        float _2599 = isnan(1.0) ? _4466 : (isnan(_4466) ? 1.0 : min(_4466, 1.0));
        float _2600 = isnan(1.0) ? _2195 : (isnan(_2195) ? 1.0 : min(_2195, 1.0));
        _2419 = (((cbLight._m0[_2581].x * 0.3183098733425140380859375) * _2599) * _2600) + _2357;
        _2421 = (((cbLight._m0[_2581].y * 0.3183098733425140380859375) * _2599) * _2600) + _2359;
        _2423 = (((cbLight._m0[_2581].z * 0.3183098733425140380859375) * _2599) * _2600) + _2361;
    }
    uint _2426 = _2179 + 8u;
    float _2439 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2179].w)) * _737) * 0.949999988079071044921875);
    float _2440 = _2439 * _2439;
    float _2441 = cbLight._m0[_2179].x + _813;
    float _2442 = cbLight._m0[_2179].y + _814;
    float _2443 = cbLight._m0[_2179].z + _815;
    float _2447 = inversesqrt(dot(vec3(_2441, _2442, _2443), vec3(_2441, _2442, _2443)));
    float _2448 = _2447 * _2441;
    float _2449 = _2447 * _2442;
    float _2450 = _2447 * _2443;
    float _2451 = dot(vec3(_734, _735, _736), vec3(cbLight._m0[_2179].xyz));
    float _4482 = isnan(0.0) ? _2451 : (isnan(_2451) ? 0.0 : max(_2451, 0.0));
    float _2454 = isnan(1.0) ? _4482 : (isnan(_4482) ? 1.0 : min(_4482, 1.0));
    float _4493 = isnan(0.0) ? _885 : (isnan(_885) ? 0.0 : max(_885, 0.0));
    float _2455 = isnan(1.0) ? _4493 : (isnan(_4493) ? 1.0 : min(_4493, 1.0));
    float _2456 = dot(vec3(_734, _735, _736), vec3(_2448, _2449, _2450));
    float _4504 = isnan(0.0) ? _2456 : (isnan(_2456) ? 0.0 : max(_2456, 0.0));
    float _2459 = isnan(1.0) ? _4504 : (isnan(_4504) ? 1.0 : min(_4504, 1.0));
    float _2460 = dot(vec3(cbLight._m0[_2179].xyz), vec3(_2448, _2449, _2450));
    float _4515 = isnan(0.0) ? _2460 : (isnan(_2460) ? 0.0 : max(_2460, 0.0));
    float _2464 = _2440 * _2440;
    float _2468 = ((_2459 * _2459) * (_2464 + (-1.0))) + 1.0;
    float _2479 = (exp2(log2(1.0 - (isnan(1.0) ? _4515 : (isnan(_4515) ? 1.0 : min(_4515, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2480 = 1.0 - _2440;
    float _2491 = (0.5 / (((_2455 * ((_2454 * _2480) + _2440)) + 9.9999999392252902907785028219223e-09) + (((_2455 * _2480) + _2440) * _2454))) * _2454;
    float _4526 = isnan(0.0) ? _2491 : (isnan(_2491) ? 0.0 : max(_2491, 0.0));
    float _2493 = (isnan(1.0) ? _4526 : (isnan(_4526) ? 1.0 : min(_4526, 1.0))) * (_2464 / ((_2468 * _2468) * 3.141590118408203125));
    uint _2507 = _2179 + 9u;
    float _2518 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2219].w)) * _737) * 0.949999988079071044921875);
    float _2519 = _2518 * _2518;
    float _2520 = cbLight._m0[_2219].x + _813;
    float _2521 = cbLight._m0[_2219].y + _814;
    float _2522 = cbLight._m0[_2219].z + _815;
    float _2526 = inversesqrt(dot(vec3(_2520, _2521, _2522), vec3(_2520, _2521, _2522)));
    float _2527 = _2526 * _2520;
    float _2528 = _2526 * _2521;
    float _2529 = _2526 * _2522;
    float _2530 = dot(vec3(_734, _735, _736), vec3(cbLight._m0[_2219].xyz));
    float _4537 = isnan(0.0) ? _2530 : (isnan(_2530) ? 0.0 : max(_2530, 0.0));
    float _2533 = isnan(1.0) ? _4537 : (isnan(_4537) ? 1.0 : min(_4537, 1.0));
    float _2534 = dot(vec3(_734, _735, _736), vec3(_2527, _2528, _2529));
    float _4548 = isnan(0.0) ? _2534 : (isnan(_2534) ? 0.0 : max(_2534, 0.0));
    float _2537 = isnan(1.0) ? _4548 : (isnan(_4548) ? 1.0 : min(_4548, 1.0));
    float _2538 = dot(vec3(cbLight._m0[_2219].xyz), vec3(_2527, _2528, _2529));
    float _4559 = isnan(0.0) ? _2538 : (isnan(_2538) ? 0.0 : max(_2538, 0.0));
    float _2542 = _2519 * _2519;
    float _2546 = ((_2537 * _2537) * (_2542 + (-1.0))) + 1.0;
    float _2555 = (exp2(log2(1.0 - (isnan(1.0) ? _4559 : (isnan(_4559) ? 1.0 : min(_4559, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2556 = 1.0 - _2519;
    float _2566 = (0.5 / (((_2455 * ((_2533 * _2556) + _2519)) + 9.9999999392252902907785028219223e-09) + (((_2455 * _2556) + _2519) * _2533))) * _2533;
    float _4570 = isnan(0.0) ? _2566 : (isnan(_2566) ? 0.0 : max(_2566, 0.0));
    float _2568 = (isnan(1.0) ? _4570 : (isnan(_4570) ? 1.0 : min(_4570, 1.0))) * (_2542 / ((_2546 * _2546) * 3.141590118408203125));
    float _2578 = (((_2555 * cbLight._m0[_2507].x) * _2568) * _2202) + ((((cbLight._m0[_2426].x * _2168) * _2479) * _2493) * _2215);
    float _2579 = (((_2555 * cbLight._m0[_2507].y) * _2568) * _2202) + ((((cbLight._m0[_2426].y * _2170) * _2479) * _2493) * _2215);
    float _2580 = (((_2555 * cbLight._m0[_2507].z) * _2568) * _2202) + ((((cbLight._m0[_2426].z * _2172) * _2479) * _2493) * _2215);
    float _2636;
    float _2638;
    float _2640;
    if (_2255)
    {
        _2636 = _2578;
        _2638 = _2579;
        _2640 = _2580;
    }
    else
    {
        uint _2642 = _2179 + 2u;
        uint _2646 = _2179 + 10u;
        float _2660 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2642].w)) * _737) * 0.949999988079071044921875);
        float _2661 = _2660 * _2660;
        float _2662 = cbLight._m0[_2642].x + _813;
        float _2663 = cbLight._m0[_2642].y + _814;
        float _2664 = cbLight._m0[_2642].z + _815;
        float _2668 = inversesqrt(dot(vec3(_2662, _2663, _2664), vec3(_2662, _2663, _2664)));
        float _2669 = _2668 * _2662;
        float _2670 = _2668 * _2663;
        float _2671 = _2668 * _2664;
        float _2672 = dot(vec3(_734, _735, _736), vec3(cbLight._m0[_2642].xyz));
        float _4581 = isnan(0.0) ? _2672 : (isnan(_2672) ? 0.0 : max(_2672, 0.0));
        float _2675 = isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0));
        float _2676 = dot(vec3(_734, _735, _736), vec3(_2669, _2670, _2671));
        float _4592 = isnan(0.0) ? _2676 : (isnan(_2676) ? 0.0 : max(_2676, 0.0));
        float _2679 = isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0));
        float _2680 = dot(vec3(cbLight._m0[_2642].xyz), vec3(_2669, _2670, _2671));
        float _4603 = isnan(0.0) ? _2680 : (isnan(_2680) ? 0.0 : max(_2680, 0.0));
        float _2684 = _2661 * _2661;
        float _2688 = ((_2679 * _2679) * (_2684 + (-1.0))) + 1.0;
        float _2697 = (exp2(log2(1.0 - (isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2698 = 1.0 - _2661;
        float _2708 = (0.5 / (((_2455 * ((_2675 * _2698) + _2661)) + 9.9999999392252902907785028219223e-09) + (((_2455 * _2698) + _2661) * _2675))) * _2675;
        float _4614 = isnan(0.0) ? _2708 : (isnan(_2708) ? 0.0 : max(_2708, 0.0));
        float _2710 = (isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0))) * (_2684 / ((_2688 * _2688) * 3.141590118408203125));
        float _2711 = isnan(1.0) ? _2194 : (isnan(_2194) ? 1.0 : min(_2194, 1.0));
        _2636 = (((_2697 * cbLight._m0[_2646].x) * _2710) * _2711) + _2578;
        _2638 = (((_2697 * cbLight._m0[_2646].y) * _2710) * _2711) + _2579;
        _2640 = (((_2697 * cbLight._m0[_2646].z) * _2710) * _2711) + _2580;
    }
    float _2742;
    float _2744;
    float _2746;
    if (_2364)
    {
        _2742 = _2636;
        _2744 = _2638;
        _2746 = _2640;
    }
    else
    {
        uint _2753 = _2179 + 3u;
        uint _2757 = _2179 + 11u;
        float _2771 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2753].w)) * _737) * 0.949999988079071044921875);
        float _2772 = _2771 * _2771;
        float _2773 = cbLight._m0[_2753].x + _813;
        float _2774 = cbLight._m0[_2753].y + _814;
        float _2775 = cbLight._m0[_2753].z + _815;
        float _2779 = inversesqrt(dot(vec3(_2773, _2774, _2775), vec3(_2773, _2774, _2775)));
        float _2780 = _2779 * _2773;
        float _2781 = _2779 * _2774;
        float _2782 = _2779 * _2775;
        float _2783 = dot(vec3(_734, _735, _736), vec3(cbLight._m0[_2753].xyz));
        float _4630 = isnan(0.0) ? _2783 : (isnan(_2783) ? 0.0 : max(_2783, 0.0));
        float _2786 = isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0));
        float _2787 = dot(vec3(_734, _735, _736), vec3(_2780, _2781, _2782));
        float _4641 = isnan(0.0) ? _2787 : (isnan(_2787) ? 0.0 : max(_2787, 0.0));
        float _2790 = isnan(1.0) ? _4641 : (isnan(_4641) ? 1.0 : min(_4641, 1.0));
        float _2791 = dot(vec3(cbLight._m0[_2753].xyz), vec3(_2780, _2781, _2782));
        float _4652 = isnan(0.0) ? _2791 : (isnan(_2791) ? 0.0 : max(_2791, 0.0));
        float _2795 = _2772 * _2772;
        float _2799 = ((_2790 * _2790) * (_2795 + (-1.0))) + 1.0;
        float _2808 = (exp2(log2(1.0 - (isnan(1.0) ? _4652 : (isnan(_4652) ? 1.0 : min(_4652, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2809 = 1.0 - _2772;
        float _2819 = (0.5 / (((_2455 * ((_2786 * _2809) + _2772)) + 9.9999999392252902907785028219223e-09) + (((_2455 * _2809) + _2772) * _2786))) * _2786;
        float _4663 = isnan(0.0) ? _2819 : (isnan(_2819) ? 0.0 : max(_2819, 0.0));
        float _2821 = (isnan(1.0) ? _4663 : (isnan(_4663) ? 1.0 : min(_4663, 1.0))) * (_2795 / ((_2799 * _2799) * 3.141590118408203125));
        float _2822 = isnan(1.0) ? _2195 : (isnan(_2195) ? 1.0 : min(_2195, 1.0));
        _2742 = (((_2808 * cbLight._m0[_2757].x) * _2821) * _2822) + _2636;
        _2744 = (((_2808 * cbLight._m0[_2757].y) * _2821) * _2822) + _2638;
        _2746 = (((_2808 * cbLight._m0[_2757].z) * _2821) * _2822) + _2640;
    }
    float _2888;
    float _2890;
    float _2892;
    float _2894;
    float _2896;
    float _2898;
    if (_2177.y == 0u)
    {
        uvec4 _2843 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2844 = _2843.x;
        uint _2855 = uint((float(_2843.y) * floor(float(uint(cbSceneParam._m0[85u].y * _822) / _2844))) + floor(float(uint(cbSceneParam._m0[85u].x * _821) / _2844)));
        float _2865 = (log2(_1955 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2866 = isnan(0.0) ? _2865 : (isnan(_2865) ? 0.0 : max(_2865, 0.0));
        uint _2869 = uint(isnan(14.0) ? _2866 : (isnan(_2866) ? 14.0 : min(_2866, 14.0)));
        uvec4 _2874 = texelFetch(g_lightClusterGridBuffer, int(((_2869 << 2u) + (_2855 << 6u)) >> 2u));
        uint _2875 = _2874.x;
        uint _2876 = _2843.z;
        float _2955;
        float _2957;
        float _2959;
        float _2961;
        float _2963;
        float _2965;
        if (((((1u << ((_2876 >> 4u) & 15u)) + 4294967295u) & _2875) == 0u) || ((_2876 & 240u) == 0u))
        {
            _2955 = 0.0;
            _2957 = 0.0;
            _2959 = 0.0;
            _2961 = 0.0;
            _2963 = 0.0;
            _2965 = 0.0;
        }
        else
        {
            float _2956;
            float _2958;
            float _2960;
            float _2962;
            float _2964;
            float _2966;
            float _3100 = 0.0;
            float _3101 = 0.0;
            float _3102 = 0.0;
            float _3103 = 0.0;
            float _3104 = 0.0;
            float _3105 = 0.0;
            uint _3106 = 0u;
            uint _3115;
            bool _3116;
            for (;;)
            {
                _3115 = texelFetch(g_lightClassification, int((((_2869 << 5u) + (_2855 << 9u)) + (_3106 << 2u)) >> 2u)).x;
                _3116 = _3115 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3116)
                {
                    frontier_phi_66_pred = _3105;
                    frontier_phi_66_pred_1 = _3104;
                    frontier_phi_66_pred_2 = _3103;
                    frontier_phi_66_pred_3 = _3102;
                    frontier_phi_66_pred_4 = _3101;
                    frontier_phi_66_pred_5 = _3100;
                }
                else
                {
                    float _3224;
                    float _3225;
                    float _3226;
                    float _3227;
                    float _3228;
                    float _3229;
                    uint _3230;
                    _3224 = _3100;
                    _3225 = _3101;
                    _3226 = _3102;
                    _3227 = _3103;
                    _3228 = _3104;
                    _3229 = _3105;
                    _3230 = _3115;
                    float _3156;
                    float _3157;
                    float _3158;
                    float _3159;
                    float _3160;
                    float _3161;
                    for (;;)
                    {
                        uint _3234 = uint(findLSB(_3230)) + (_3106 << 5u);
                        uint _3231 = (_3230 + 4294967295u) & _3230;
                        uint _3236 = _3234 * 48u;
                        vec4 _3250 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3236)).x, texelFetch(g_PointLightRenderingBuffer, int(_3236 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3236 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3236 + 3u)).x));
                        uint _3256 = (_3234 * 48u) + 4u;
                        vec4 _3269 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3256)).x, texelFetch(g_PointLightRenderingBuffer, int(_3256 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3256 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3256 + 3u)).x));
                        uint _3275 = (_3234 * 48u) + 8u;
                        vec3 _3286 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3275)).x, texelFetch(g_PointLightRenderingBuffer, int(_3275 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3275 + 2u)).x));
                        float _3290 = _3250.x - _1953;
                        float _3291 = _3250.y - _1954;
                        float _3292 = _3250.z - _1955;
                        float _3293 = dot(vec3(_3290, _3291, _3292), vec3(_3290, _3291, _3292));
                        float _3296 = inversesqrt(_3293);
                        float _3297 = _3296 * _3290;
                        float _3298 = _3296 * _3291;
                        float _3299 = _3296 * _3292;
                        float _3300 = dot(vec3(_840, _843, _846), vec3(_3297, _3298, _3299));
                        float _3305 = 1.0 - (_3293 * _3250.w);
                        float _4689 = isnan(0.0) ? _3305 : (isnan(_3305) ? 0.0 : max(_3305, 0.0));
                        float _3306 = isnan(1.0) ? _4689 : (isnan(_4689) ? 1.0 : min(_4689, 1.0));
                        float _3307 = sqrt(_3293) * _3269.w;
                        float _3310 = 1.39999997615814208984375 / (_3307 + 1.39999997615814208984375);
                        float _3311 = _3310 * _3310;
                        float _3314 = ((1.0 - _3311) * _3300) + _3311;
                        float _3317 = _3307 * _3307;
                        float _3321 = ((isnan(0.0) ? _3314 : (isnan(_3314) ? 0.0 : max(_3314, 0.0))) * _3306) / ((_3317 * 0.699999988079071044921875) + 1.0);
                        float _3325 = (-0.0) - _1953;
                        float _3326 = (-0.0) - _1954;
                        float _3327 = (-0.0) - _1955;
                        float _3331 = inversesqrt(dot(vec3(_3325, _3326, _3327), vec3(_3325, _3326, _3327)));
                        float _3332 = _3331 * _3325;
                        float _3333 = _3331 * _3326;
                        float _3334 = _3331 * _3327;
                        float _3341 = exp2(log2(1.0 / ((_3317 * 3.5) + 5.0)) * 0.25);
                        float _3342 = 1.0 - _900;
                        float _3349 = sqrt(1.0 - ((1.0 - (_3342 * _3342)) * (1.0 - (_3341 * _3341))));
                        float _3350 = _3349 * _3349;
                        float _3351 = _3350 * _3350;
                        float _3352 = _3332 + _3297;
                        float _3353 = _3333 + _3298;
                        float _3354 = _3334 + _3299;
                        float _3358 = inversesqrt(dot(vec3(_3352, _3353, _3354), vec3(_3352, _3353, _3354)));
                        float _3362 = dot(vec3(_840, _843, _846), vec3(_3332, _3333, _3334));
                        float _4705 = isnan(0.0) ? _3362 : (isnan(_3362) ? 0.0 : max(_3362, 0.0));
                        float _3365 = isnan(1.0) ? _4705 : (isnan(_4705) ? 1.0 : min(_4705, 1.0));
                        float _3366 = dot(vec3(_840, _843, _846), vec3(_3358 * _3352, _3358 * _3353, _3358 * _3354));
                        float _4716 = isnan(0.0) ? _3366 : (isnan(_3366) ? 0.0 : max(_3366, 0.0));
                        float _3369 = isnan(1.0) ? _4716 : (isnan(_4716) ? 1.0 : min(_4716, 1.0));
                        float _3373 = ((_3369 * _3369) * (_3351 + (-1.0))) + 1.0;
                        float _3374 = _3310 * _3350;
                        float _3375 = _3374 * _3374;
                        float _3378 = ((1.0 - _3375) * _3300) + _3375;
                        float _4727 = isnan(0.0) ? _3378 : (isnan(_3378) ? 0.0 : max(_3378, 0.0));
                        float _3379 = isnan(1.0) ? _4727 : (isnan(_4727) ? 1.0 : min(_4727, 1.0));
                        float _3380 = 1.0 - _3350;
                        float _3390 = (0.5 / (((_3379 * ((_3365 * _3380) + _3350)) + 9.9999999392252902907785028219223e-09) + (((_3379 * _3380) + _3350) * _3365))) * _3379;
                        float _4738 = isnan(0.0) ? _3390 : (isnan(_3390) ? 0.0 : max(_3390, 0.0));
                        float _3401 = (((_3351 * 3.1415927410125732421875) * (isnan(1.0) ? _4738 : (isnan(_4738) ? 1.0 : min(_4738, 1.0)))) / ((_3373 * _3373) * ((_3317 * 2.1991131305694580078125) + 3.141590118408203125))) * _3306;
                        _3159 = (_3321 * _3269.x) + _3227;
                        _3160 = (_3321 * _3269.y) + _3228;
                        _3161 = (_3321 * _3269.z) + _3229;
                        _3156 = (_3401 * _3286.x) + _3224;
                        _3157 = (_3401 * _3286.y) + _3225;
                        _3158 = (_3401 * _3286.z) + _3226;
                        if (_3231 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3224 = _3156;
                            _3225 = _3157;
                            _3226 = _3158;
                            _3227 = _3159;
                            _3228 = _3160;
                            _3229 = _3161;
                            _3230 = _3231;
                        }
                    }
                    frontier_phi_66_pred = _3161;
                    frontier_phi_66_pred_1 = _3160;
                    frontier_phi_66_pred_2 = _3159;
                    frontier_phi_66_pred_3 = _3158;
                    frontier_phi_66_pred_4 = _3157;
                    frontier_phi_66_pred_5 = _3156;
                }
                _2966 = frontier_phi_66_pred;
                _2964 = frontier_phi_66_pred_1;
                _2962 = frontier_phi_66_pred_2;
                _2960 = frontier_phi_66_pred_3;
                _2958 = frontier_phi_66_pred_4;
                _2956 = frontier_phi_66_pred_5;
                uint _3107 = _3106 + 1u;
                if (_3107 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3100 = _2956;
                    _3101 = _2958;
                    _3102 = _2960;
                    _3103 = _2962;
                    _3104 = _2964;
                    _3105 = _2966;
                    _3106 = _3107;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2955 = _2956;
            _2957 = _2958;
            _2959 = _2960;
            _2961 = _2962;
            _2963 = _2964;
            _2965 = _2966;
        }
        uvec4 _2969 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2970 = _2969.z;
        uint _2972 = (_2970 >> 8u) & 15u;
        float _3068;
        float _3070;
        float _3072;
        float _3074;
        float _3076;
        float _3078;
        if (((4294967295u << _2972) & _2875) == 0u)
        {
            _3068 = _2955;
            _3070 = _2957;
            _3072 = _2959;
            _3074 = _2961;
            _3076 = _2963;
            _3078 = _2965;
        }
        else
        {
            float _3093 = inversesqrt(dot(vec3(_1953, _1954, _1955), vec3(_1953, _1954, _1955)));
            float _3094 = _3093 * _1953;
            float _3095 = _3093 * _1954;
            float _3096 = _3093 * _1955;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2972 < ((_2970 >> 12u) & 15u))
            {
                float _3069;
                float _3071;
                float _3073;
                float _3075;
                float _3077;
                float _3079;
                float _3207 = _2955;
                float _3208 = _2957;
                float _3209 = _2959;
                float _3210 = _2961;
                float _3211 = _2963;
                float _3212 = _2965;
                uint _3213 = _2972;
                uint _3222;
                bool _3223;
                for (;;)
                {
                    _3222 = texelFetch(g_lightClassification, int((((_2869 << 5u) + (_2855 << 9u)) + (_3213 << 2u)) >> 2u)).x;
                    _3223 = _3222 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3223)
                    {
                        frontier_phi_72_pred = _3212;
                        frontier_phi_72_pred_1 = _3211;
                        frontier_phi_72_pred_2 = _3210;
                        frontier_phi_72_pred_3 = _3209;
                        frontier_phi_72_pred_4 = _3208;
                        frontier_phi_72_pred_5 = _3207;
                    }
                    else
                    {
                        float _3406;
                        float _3407;
                        float _3408;
                        float _3409;
                        float _3410;
                        float _3411;
                        float _3700;
                        float _3701;
                        float _3702;
                        float _3703;
                        float _3704;
                        float _3705;
                        float _3419 = _3207;
                        float _3420 = _3208;
                        float _3421 = _3209;
                        float _3422 = _3210;
                        float _3423 = _3211;
                        float _3424 = _3212;
                        uint _3425 = _3222;
                        uint _3426;
                        vec4 _3451;
                        float _3452;
                        vec4 _3467;
                        vec3 _3479;
                        vec4 _3494;
                        vec4 _3510;
                        float _3556;
                        bool _3557;
                        for (;;)
                        {
                            uint _3436 = ((_3213 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3425));
                            _3426 = (_3425 + 4294967295u) & _3425;
                            uint _3438 = _3436 * 40u;
                            _3451 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3438)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3438 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3438 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3438 + 3u)).x));
                            _3452 = _3451.w;
                            uint _3454 = (_3436 * 40u) + 4u;
                            _3467 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3454)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3454 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3454 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3454 + 3u)).x));
                            uint _3469 = (_3436 * 40u) + 8u;
                            _3479 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3469)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3469 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3469 + 2u)).x));
                            uint _3481 = (_3436 * 40u) + 16u;
                            _3494 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3481)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3481 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3481 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3481 + 3u)).x));
                            uint _3497 = (_3436 * 40u) + 20u;
                            _3510 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3497)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3497 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3497 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3497 + 3u)).x));
                            uint _3512 = (_3436 * 40u) + 24u;
                            vec4 _3525 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3512)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3512 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3512 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3512 + 3u)).x));
                            uint _3531 = (_3436 * 40u) + 28u;
                            vec4 _3544 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3531)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3531 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3531 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3531 + 3u)).x));
                            _3556 = fma(_1955, _3544.z, fma(_1954, _3544.y, _3544.x * _1953)) + _3544.w;
                            _3557 = !((fma(_1955, _3525.z, fma(_1954, _3525.y, _3525.x * _1953)) + _3525.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3557)
                            {
                                float _3584 = _3451.x - _1953;
                                float _3585 = _3451.y - _1954;
                                float _3586 = _3451.z - _1955;
                                float _3587 = dot(vec3(_3584, _3585, _3586), vec3(_3584, _3585, _3586));
                                float _3590 = inversesqrt(_3587);
                                float _3591 = _3590 * _3584;
                                float _3592 = _3590 * _3585;
                                float _3593 = _3590 * _3586;
                                float _3597 = 1.0 - (_3587 / (_3452 * _3452));
                                float _4749 = isnan(0.0) ? _3597 : (isnan(_3597) ? 0.0 : max(_3597, 0.0));
                                float _3598 = isnan(1.0) ? _4749 : (isnan(_4749) ? 1.0 : min(_4749, 1.0));
                                float _3602 = sqrt(_3587) * _3467.w;
                                float _3604 = 1.39999997615814208984375 / (_3602 + 1.39999997615814208984375);
                                float _3605 = _3604 * _3604;
                                float _3608 = ((1.0 - _3605) * dot(vec3(_3591, _3592, _3593), vec3(_840, _843, _846))) + _3605;
                                float _3611 = _3602 * _3602;
                                float _3615 = (fma(_1955, _3494.z, fma(_1954, _3494.y, _3494.x * _1953)) + _3494.w) / _3556;
                                float _3616 = (fma(_1955, _3510.z, fma(_1954, _3510.y, _3510.x * _1953)) + _3510.w) / _3556;
                                float _3620 = 1.0 - dot(vec2(_3615, _3616), vec2(_3615, _3616));
                                float _4765 = isnan(0.0) ? _3620 : (isnan(_3620) ? 0.0 : max(_3620, 0.0));
                                float _3621 = isnan(1.0) ? _4765 : (isnan(_4765) ? 1.0 : min(_4765, 1.0));
                                float _3622 = _3621 * (((isnan(0.0) ? _3608 : (isnan(_3608) ? 0.0 : max(_3608, 0.0))) * _3598) / ((_3611 * 0.699999988079071044921875) + 1.0));
                                float _3634 = exp2(log2(1.0 / ((_3611 * 3.5) + 5.0)) * 0.25);
                                float _3635 = 1.0 - _900;
                                float _3642 = sqrt(1.0 - ((1.0 - (_3635 * _3635)) * (1.0 - (_3634 * _3634))));
                                float _3643 = _3642 * _3642;
                                float _3644 = _3643 * _3643;
                                float _3645 = _3591 - _3094;
                                float _3646 = _3592 - _3095;
                                float _3647 = _3593 - _3096;
                                float _3651 = inversesqrt(dot(vec3(_3645, _3646, _3647), vec3(_3645, _3646, _3647)));
                                float _3655 = dot(vec3(_840, _843, _846), vec3((-0.0) - _3094, (-0.0) - _3095, (-0.0) - _3096));
                                float _4776 = isnan(0.0) ? _3655 : (isnan(_3655) ? 0.0 : max(_3655, 0.0));
                                float _3658 = isnan(1.0) ? _4776 : (isnan(_4776) ? 1.0 : min(_4776, 1.0));
                                float _3659 = dot(vec3(_840, _843, _846), vec3(_3651 * _3645, _3651 * _3646, _3651 * _3647));
                                float _4787 = isnan(0.0) ? _3659 : (isnan(_3659) ? 0.0 : max(_3659, 0.0));
                                float _3662 = isnan(1.0) ? _4787 : (isnan(_4787) ? 1.0 : min(_4787, 1.0));
                                float _3666 = ((_3662 * _3662) * (_3644 + (-1.0))) + 1.0;
                                float _3667 = _3604 * _3643;
                                float _3668 = _3667 * _3667;
                                float _3674 = ((1.0 - _3668) * dot(vec3(_840, _843, _846), vec3(_3591, _3592, _3593))) + _3668;
                                float _4798 = isnan(0.0) ? _3674 : (isnan(_3674) ? 0.0 : max(_3674, 0.0));
                                float _3675 = isnan(1.0) ? _4798 : (isnan(_4798) ? 1.0 : min(_4798, 1.0));
                                float _3676 = 1.0 - _3643;
                                float _3686 = (0.5 / (((_3675 * ((_3658 * _3676) + _3643)) + 9.9999999392252902907785028219223e-09) + (((_3675 * _3676) + _3643) * _3658))) * _3675;
                                float _4809 = isnan(0.0) ? _3686 : (isnan(_3686) ? 0.0 : max(_3686, 0.0));
                                float _3696 = (_3621 * _3598) * (((_3644 * 3.1415927410125732421875) * (isnan(1.0) ? _4809 : (isnan(_4809) ? 1.0 : min(_4809, 1.0)))) / ((_3666 * _3666) * ((_3611 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3622 * _3467.y;
                                frontier_phi_78_pred_1 = _3622 * _3467.x;
                                frontier_phi_78_pred_2 = _3696 * _3479.z;
                                frontier_phi_78_pred_3 = _3696 * _3479.y;
                                frontier_phi_78_pred_4 = _3696 * _3479.x;
                                frontier_phi_78_pred_5 = _3622 * _3467.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3704 = frontier_phi_78_pred;
                            _3703 = frontier_phi_78_pred_1;
                            _3702 = frontier_phi_78_pred_2;
                            _3701 = frontier_phi_78_pred_3;
                            _3700 = frontier_phi_78_pred_4;
                            _3705 = frontier_phi_78_pred_5;
                            _3409 = _3703 + _3422;
                            _3410 = _3704 + _3423;
                            _3411 = _3705 + _3424;
                            _3406 = _3700 + _3419;
                            _3407 = _3701 + _3420;
                            _3408 = _3702 + _3421;
                            if (_3426 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3419 = _3406;
                                _3420 = _3407;
                                _3421 = _3408;
                                _3422 = _3409;
                                _3423 = _3410;
                                _3424 = _3411;
                                _3425 = _3426;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3411;
                        frontier_phi_72_pred_1 = _3410;
                        frontier_phi_72_pred_2 = _3409;
                        frontier_phi_72_pred_3 = _3408;
                        frontier_phi_72_pred_4 = _3407;
                        frontier_phi_72_pred_5 = _3406;
                    }
                    _3079 = frontier_phi_72_pred;
                    _3077 = frontier_phi_72_pred_1;
                    _3075 = frontier_phi_72_pred_2;
                    _3073 = frontier_phi_72_pred_3;
                    _3071 = frontier_phi_72_pred_4;
                    _3069 = frontier_phi_72_pred_5;
                    uint _3214 = _3213 + 1u;
                    if (_3214 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3207 = _3069;
                        _3208 = _3071;
                        _3209 = _3073;
                        _3210 = _3075;
                        _3211 = _3077;
                        _3212 = _3079;
                        _3213 = _3214;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3079;
                frontier_phi_60_61_ladder_1 = _3077;
                frontier_phi_60_61_ladder_2 = _3073;
                frontier_phi_60_61_ladder_3 = _3071;
                frontier_phi_60_61_ladder_4 = _3069;
                frontier_phi_60_61_ladder_5 = _3075;
            }
            else
            {
                frontier_phi_60_61_ladder = _2965;
                frontier_phi_60_61_ladder_1 = _2963;
                frontier_phi_60_61_ladder_2 = _2959;
                frontier_phi_60_61_ladder_3 = _2957;
                frontier_phi_60_61_ladder_4 = _2955;
                frontier_phi_60_61_ladder_5 = _2961;
            }
            _3068 = frontier_phi_60_61_ladder_4;
            _3070 = frontier_phi_60_61_ladder_3;
            _3072 = frontier_phi_60_61_ladder_2;
            _3074 = frontier_phi_60_61_ladder_5;
            _3076 = frontier_phi_60_61_ladder_1;
            _3078 = frontier_phi_60_61_ladder;
        }
        float _3083 = isnan(1.0) ? _884 : (isnan(_884) ? 1.0 : min(_884, 1.0));
        _2888 = (_3083 * _3074) + _2419;
        _2890 = (_3083 * _3076) + _2421;
        _2892 = (_3083 * _3078) + _2423;
        _2894 = ((_3068 * 0.039999999105930328369140625) * _3083) + _2742;
        _2896 = ((_3070 * 0.039999999105930328369140625) * _3083) + _2744;
        _2898 = ((_3072 * 0.039999999105930328369140625) * _3083) + _2746;
    }
    else
    {
        _2888 = _2419;
        _2890 = _2421;
        _2892 = _2423;
        _2894 = _2742;
        _2896 = _2744;
        _2898 = _2746;
    }
    float _4825 = isnan(0.0) ? _869 : (isnan(_869) ? 0.0 : max(_869, 0.0));
    float _4836 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
    float _4847 = isnan(0.0) ? _871 : (isnan(_871) ? 0.0 : max(_871, 0.0));
    uint _2918 = _251 + 6u;
    float _2926 = _821 / cbSceneParam._m0[86u].x;
    float _2927 = _822 / cbSceneParam._m0[86u].y;
    vec4 _2941 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2926, _2927, (log2((isnan(cbSceneParam._m0[77u].w) ? _755 : (isnan(_755) ? cbSceneParam._m0[77u].w : min(_755, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2943 = _2941.x;
    float _2944 = _2941.y;
    float _2945 = _2941.z;
    float _2946 = _2941.w;
    float _3018;
    float _3020;
    float _3022;
    float _3024;
    if (_755 > cbSceneParam._m0[78u].w)
    {
        float _2980 = isnan(_755) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _755 : min(cbSceneParam._m0[80u].w, _755));
        float _2981 = _2980 / _755;
        float _2992 = _2981 * _806;
        float _2993 = _807 * _2981;
        float _2994 = (-0.0) - _2993;
        float _2996 = _2981 * _808;
        float _2998 = (cbSceneParam._m0[77u].w * _2994) / _2980;
        float _2999 = _2998 + cbSceneParam._m0[79u].w;
        float _3000 = cbSceneParam._m0[79u].w - _2993;
        float _3006 = sqrt(((_2992 * _2992) + (_2993 * _2993)) + (_2996 * _2996));
        float _3009 = (1.0 - (cbSceneParam._m0[77u].w / _2980)) * _3006;
        float _3014 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3016 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3169;
        if (abs((_2994 - _2998) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3169 = ((((_2999 > 0.0) ? exp2(_3014 * _2999) : (2.0 - exp2(_3016 * _2999))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3009;
        }
        else
        {
            float _3129 = 1.0 / cbSceneParam._m0[80u].x;
            float _3130 = isnan(_3000) ? _2999 : (isnan(_2999) ? _3000 : max(_2999, _3000));
            float _3131 = isnan(_3000) ? _2999 : (isnan(_2999) ? _3000 : min(_2999, _3000));
            float _3140 = isnan(0.0) ? _3130 : (isnan(_3130) ? 0.0 : min(_3130, 0.0));
            float _3141 = isnan(0.0) ? _3131 : (isnan(_3131) ? 0.0 : min(_3131, 0.0));
            _3169 = ((abs(_3006 / _2994) * cbSceneParam._m0[80u].y) * ((((_3140 - _3141) * 2.0) - ((exp2(_3014 * (isnan(0.0) ? _3130 : (isnan(_3130) ? 0.0 : max(_3130, 0.0)))) - exp2(_3014 * (isnan(0.0) ? _3131 : (isnan(_3131) ? 0.0 : max(_3131, 0.0))))) * _3129)) - ((exp2(_3016 * _3140) - exp2(_3016 * _3141)) * _3129))) + (_3009 * cbSceneParam._m0[80u].z);
        }
        vec4 _3171 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2926, _2927, 1.0), 0.0);
        float _3180 = exp2((_3169 * (-1.44269502162933349609375)) * (1.0 - _3171.w));
        float _3181 = log2(_3180);
        float _3197 = log2(_2946);
        _3018 = (exp2(_3197 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3181 * cbSceneParam._m0[78u].x)) * _3171.x) / cbSceneParam._m0[78u].x)) + _2943;
        _3020 = (exp2(_3197 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3181 * cbSceneParam._m0[78u].y)) * _3171.y) / cbSceneParam._m0[78u].y)) + _2944;
        _3022 = (exp2(_3197 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3181 * cbSceneParam._m0[78u].z)) * _3171.z) / cbSceneParam._m0[78u].z)) + _2945;
        _3024 = _3180 * _2946;
    }
    else
    {
        _3018 = _2943;
        _3020 = _2944;
        _3022 = _2945;
        _3024 = _2946;
    }
    float _3036 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3037 = _3036 == 3.0;
    float _3038 = log2(_3024);
    float _3045 = exp2(_3038 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4825 : (isnan(_4825) ? 1.0 : min(_4825, 1.0))) * (_2888 + ((isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0))) * _884))) + ((_2894 + ((isnan(0.0) ? _1900 : (isnan(_1900) ? 0.0 : max(_1900, 0.0))) * _1689)) * cbPerFrame._m0[3u].x));
    float _3046 = exp2(_3038 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4836 : (isnan(_4836) ? 1.0 : min(_4836, 1.0))) * (_2890 + ((isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0))) * _884))) + ((_2896 + ((isnan(0.0) ? _1903 : (isnan(_1903) ? 0.0 : max(_1903, 0.0))) * _1689)) * cbPerFrame._m0[3u].x));
    float _3047 = exp2(_3038 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4847 : (isnan(_4847) ? 1.0 : min(_4847, 1.0))) * (_2892 + ((isnan(0.0) ? _1616 : (isnan(_1616) ? 0.0 : max(_1616, 0.0))) * _884))) + ((_2898 + ((isnan(0.0) ? _1906 : (isnan(_1906) ? 0.0 : max(_1906, 0.0))) * _1689)) * cbPerFrame._m0[3u].x));
    float _3056 = (_3036 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3056 * (_3037 ? _3045 : (_3045 + (cbSceneParam._m0[72u].w * _3018)));
    SV_Target.y = _3056 * (_3037 ? _3046 : (_3046 + (cbSceneParam._m0[72u].w * _3020)));
    SV_Target.z = _3056 * (_3037 ? _3047 : (_3047 + (cbSceneParam._m0[72u].w * _3022)));
    SV_Target.w = cbInstanceData._m0[_2918].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2918].w;
}


