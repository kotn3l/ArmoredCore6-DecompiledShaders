#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1464;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _240 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _241 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _242 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _248 = inversesqrt(dot(vec3(_240, _241, _242), vec3(_240, _241, _242)));
    float _255 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _262 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _274 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _276 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _277 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4052 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _4063 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
    float _4074 = isnan(0.0) ? _277 : (isnan(_277) ? 0.0 : max(_277, 0.0));
    uint _287 = uint(roundEven(NORMAL.w)) * 13u;
    uint _292 = _287 + 1u;
    uint _296 = _287 + 2u;
    float _305 = sqrt(((cbInstanceData._m0[_292].x * cbInstanceData._m0[_292].x) + (cbInstanceData._m0[_287].x * cbInstanceData._m0[_287].x)) + (cbInstanceData._m0[_296].x * cbInstanceData._m0[_296].x));
    float _306 = _305 * TEXCOORD.z;
    float _307 = _305 * TEXCOORD.w;
    vec4 _320 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _306) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _307) + cbTextureTilingScale._m0[13u].w));
    vec4 _343 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _369 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _374 = _369.x * cbMtdParam._m0[11u].x;
    float _375 = _369.y * cbMtdParam._m0[11u].y;
    float _376 = _369.z * cbMtdParam._m0[11u].z;
    vec4 _395 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _306) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _307) + cbTextureTilingScale._m0[5u].w));
    vec4 _414 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _449 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _451 = _449.x;
    float _463 = dot(vec4(_451, _449.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _480 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _414.x) * 2.0) - ((((_451 - _463) * cbMtdParam._m0[24u].z) + _463) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4085 = isnan(0.0) ? _480 : (isnan(_480) ? 0.0 : max(_480, 0.0));
    float _481 = isnan(1.0) ? _4085 : (isnan(_4085) ? 1.0 : min(_4085, 1.0));
    float _488 = (_481 * ((_395.x * cbMtdParam._m0[12u].x) - _374)) + _374;
    float _489 = (_481 * ((_395.y * cbMtdParam._m0[12u].y) - _375)) + _375;
    float _490 = (_481 * ((_395.z * cbMtdParam._m0[12u].z) - _376)) + _376;
    vec4 _507 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _306) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _307) + cbTextureTilingScale._m0[3u].w));
    vec4 _527 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _529 = _527.x;
    float _539 = dot(vec4(_529, _527.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _553 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _414.y) * 2.0) - ((((_529 - _539) * cbMtdParam._m0[24u].z) + _539) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4096 = isnan(0.0) ? _553 : (isnan(_553) ? 0.0 : max(_553, 0.0));
    float _554 = isnan(1.0) ? _4096 : (isnan(_4096) ? 1.0 : min(_4096, 1.0));
    float _564 = (_343.x * cbMtdParam._m0[9u].x) * ((_554 * ((_507.x * cbMtdParam._m0[13u].x) - _488)) + _488);
    float _565 = (_343.y * cbMtdParam._m0[9u].y) * ((_554 * ((_507.y * cbMtdParam._m0[13u].y) - _489)) + _489);
    float _566 = (_343.z * cbMtdParam._m0[9u].z) * ((_554 * ((_507.z * cbMtdParam._m0[13u].z) - _490)) + _490);
    float _570 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _320.x) * _564;
    float _573 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _320.y) * _565;
    float _576 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _320.z) * _566;
    float _584 = (((_564 - _570) * (isnan(1.0) ? _4052 : (isnan(_4052) ? 1.0 : min(_4052, 1.0)))) + _570) * 4.55000019073486328125;
    float _586 = (((_565 - _573) * (isnan(1.0) ? _4063 : (isnan(_4063) ? 1.0 : min(_4063, 1.0)))) + _573) * 4.55000019073486328125;
    float _588 = (((_566 - _576) * (isnan(1.0) ? _4074 : (isnan(_4074) ? 1.0 : min(_4074, 1.0)))) + _576) * 4.55000019073486328125;
    vec4 _605 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _306) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _307) + cbTextureTilingScale._m0[20u].w));
    vec4 _628 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _306) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _307) + cbTextureTilingScale._m0[4u].w));
    vec4 _645 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _647 = _645.x;
    float _648 = _645.y;
    float _649 = _645.z;
    float _656 = ((_628.x - _647) * _481) + _647;
    float _657 = ((_628.y - _648) * _481) + _648;
    float _658 = ((_628.z - _649) * _481) + _649;
    vec4 _670 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _306) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _307) + cbTextureTilingScale._m0[2u].w));
    float _683 = ((_670.z - _658) * _554) + _658;
    float _686 = ((((_670.x - _656) * _554) + _656) * 2.0) + (-1.0);
    float _687 = ((((_670.y - _657) * _554) + _657) * 2.0) + (-1.0);
    float _688 = dot(vec2(_686, _687), vec2(_686, _687));
    float _4107 = isnan(0.0) ? _688 : (isnan(_688) ? 0.0 : max(_688, 0.0));
    float _693 = sqrt(1.0 - (isnan(1.0) ? _4107 : (isnan(_4107) ? 1.0 : min(_4107, 1.0))));
    vec4 _707 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _732 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _306) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _307) + cbTextureTilingScale._m0[11u].w));
    float _734 = _732.x;
    float _735 = 1.0 - _734;
    float _741 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _744 = ((isnan(0.0) ? _741 : (isnan(_741) ? 0.0 : min(_741, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _753 = (_744 - ((((((_734 - _735) * cbMtdParam._m0[24u].w) + _735) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _744))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4128 = isnan(0.0) ? _753 : (isnan(_753) ? 0.0 : max(_753, 0.0));
    float _754 = isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0));
    float _761 = (_754 * (cbMtdParam._m0[17u].x - _584)) + _584;
    float _762 = (_754 * (cbMtdParam._m0[17u].y - _586)) + _586;
    float _763 = (_754 * (cbMtdParam._m0[17u].z - _588)) + _588;
    vec4 _775 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _306) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _307) + cbTextureTilingScale._m0[19u].w));
    float _777 = _775.x;
    float _778 = 1.0 - _777;
    float _803 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_777 - _778) * cbMtdParam._m0[24u].y) + _778) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4139 = isnan(0.0) ? _803 : (isnan(_803) ? 0.0 : max(_803, 0.0));
    float _804 = isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0));
    float _812 = ((((cbMtdParam._m0[10u].x - _761) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _804) + _761;
    float _813 = ((((cbMtdParam._m0[10u].y - _762) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _804) + _762;
    float _814 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _763)) * _804) + _763;
    float _819 = (((_605.z - _683) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _683;
    float _823 = ((_707.z - _819) * cbMtdParam._m0[19u].w) + _819;
    vec4 _837 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _306) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _307) + cbTextureTilingScale._m0[15u].w));
    float _844 = (_837.x * 2.0) + (-1.0);
    float _845 = (_837.y * 2.0) + (-1.0);
    float _846 = dot(vec2(_844, _845), vec2(_844, _845));
    float _4150 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _854 = (_754 * (_837.z - _823)) + _823;
    float _857 = ((cbMtdParam._m0[23u].y - _854) * _804) + _854;
    vec4 _878 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _306) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _307) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _884 = (_878.x * 2.0) + (-1.0);
    float _885 = (_878.y * 2.0) + (-1.0);
    float _886 = dot(vec2(_884, _885), vec2(_884, _885));
    float _4161 = isnan(0.0) ? _886 : (isnan(_886) ? 0.0 : max(_886, 0.0));
    float _900 = (_686 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_605.x * 2.0) + (-1.0)))) + (((_707.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _901 = (_687 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_605.y * 2.0) + (-1.0)))) + (((_707.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _913 = (((_844 - _900) + (cbMtdParam._m0[21u].x * _900)) * _754) + _900;
    float _914 = (((_845 - _901) + (cbMtdParam._m0[21u].x * _901)) * _754) + _901;
    float _915 = (_754 * (sqrt(1.0 - (isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0)))) - _693)) + _693;
    float _926 = (((_884 - _913) + (_913 * cbMtdParam._m0[22u].z)) * _804) + _913;
    float _927 = (((_885 - _914) + (_914 * cbMtdParam._m0[22u].z)) * _804) + _914;
    float _928 = ((sqrt(1.0 - (isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0)))) - _915) * _804) + _915;
    float _930 = cbMtdParam._m0[22u].x + _707.w;
    float _933 = fma(_928, _255 * NORMAL.x, fma(_927, _262 * TANGENT.x, (_248 * _240) * _926));
    float _936 = fma(_928, _255 * NORMAL.y, fma(_927, _262 * TANGENT.y, (_248 * _241) * _926));
    float _939 = fma(_928, _255 * NORMAL.z, fma(_927, _262 * TANGENT.z, (_248 * _242) * _926));
    float _943 = inversesqrt(dot(vec3(_933, _936, _939), vec3(_933, _936, _939)));
    float _944 = _943 * _933;
    float _945 = _943 * _936;
    float _946 = _943 * _939;
    float _4172 = isnan(0.0) ? _857 : (isnan(_857) ? 0.0 : max(_857, 0.0));
    float _947 = isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0));
    float _4183 = isnan(0.0) ? _930 : (isnan(_930) ? 0.0 : max(_930, 0.0));
    float _4194 = isnan(0.0) ? _812 : (isnan(_812) ? 0.0 : max(_812, 0.0));
    float _4205 = isnan(0.0) ? _813 : (isnan(_813) ? 0.0 : max(_813, 0.0));
    float _4216 = isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0));
    float _965 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1005 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1015 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1005);
    float _1016 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1005);
    float _1017 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1005);
    float _1021 = inversesqrt(dot(vec3(_1015, _1016, _1017), vec3(_1015, _1016, _1017)));
    float _1022 = _1015 * _1021;
    float _1023 = _1016 * _1021;
    float _1024 = _1017 * _1021;
    float _1030 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1031 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1049 = fma(_946, cbSceneParam._m0[5u].z, fma(_945, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _944));
    float _1052 = fma(_946, cbSceneParam._m0[6u].z, fma(_945, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _944));
    float _1055 = fma(_946, cbSceneParam._m0[7u].z, fma(_945, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _944));
    uint _1069 = (_287 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1075 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0)))) * cbInstanceData._m0[_1069].x;
    float _1076 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0)))) * cbInstanceData._m0[_1069].y;
    float _1077 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0)))) * cbInstanceData._m0[_1069].z;
    float _4227 = isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : max(_1075, 0.0));
    float _1078 = isnan(1.0) ? _4227 : (isnan(_4227) ? 1.0 : min(_4227, 1.0));
    float _4238 = isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : max(_1076, 0.0));
    float _1079 = isnan(1.0) ? _4238 : (isnan(_4238) ? 1.0 : min(_4238, 1.0));
    float _4249 = isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0));
    float _1080 = isnan(1.0) ? _4249 : (isnan(_4249) ? 1.0 : min(_4249, 1.0));
    vec4 _1089 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1030, cbSceneParam._m0[86u].y * _1031));
    float _1093 = ((isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0))) * TEXCOORD_5.w) * _1089.x;
    float _1094 = dot(vec3(_944, _945, _946), vec3(_1022, _1023, _1024));
    float _1097 = _1094 * 2.0;
    float _1101 = (_1097 * _944) - _1022;
    float _1102 = (_1097 * _945) - _1023;
    float _1103 = (_1097 * _946) - _1024;
    float _1107 = abs(dot(vec3(_1022, _1023, _1024), vec3(_944, _945, _946)));
    float _4260 = isnan(0.0) ? _1107 : (isnan(_1107) ? 0.0 : max(_1107, 0.0));
    float _1109 = sqrt(_947);
    float _1122 = exp2((_1109 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4260 : (isnan(_4260) ? 1.0 : min(_4260, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1109 * 3.0));
    float _1154 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1158 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1162 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1463;
    float _1465;
    float _1466;
    float _1467;
    float _1468;
    float _1469;
    float _1470;
    float _1471;
    float _1472;
    float _1473;
    float _1474;
    float _1475;
    float _1476;
    float _1477;
    float _1478;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1188 = fma(_1162, cbModelParam._m0[26u].z, fma(_1158, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1154));
        float _1192 = fma(_1162, cbModelParam._m0[27u].z, fma(_1158, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1154));
        float _1196 = fma(_1162, cbModelParam._m0[28u].z, fma(_1158, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1154));
        float _1221 = _1154 + _944;
        float _1222 = _1158 + _945;
        float _1223 = _1162 + _946;
        float _1233 = fma(_1223, cbModelParam._m0[26u].z, fma(_1222, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1221)) - _1188;
        float _1234 = fma(_1223, cbModelParam._m0[27u].z, fma(_1222, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1221)) - _1192;
        float _1235 = fma(_1223, cbModelParam._m0[28u].z, fma(_1222, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1221)) - _1196;
        float _1239 = inversesqrt(dot(vec3(_1233, _1234, _1235), vec3(_1233, _1234, _1235)));
        float _1252 = ((_1239 * _1233) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1188 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1253 = ((_1239 * _1234) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1192 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1254 = ((_1239 * _1235) / cbModelParam._m0[34u].z) + ((((((_1196 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1257 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1252, _1253, _1254), 0.0);
        vec4 _1264 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1252, _1253, _1254), 0.0);
        vec4 _1271 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1252, _1253, _1254), 0.0);
        vec4 _1278 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1252, _1253, _1254), 0.0);
        float _1291 = exp2((_1257.w + (-0.5)) * 20.0) * 2.0;
        float _1292 = _1291 * (_1257.x + (-0.5));
        float _1293 = _1291 * (_1257.y + (-0.5));
        float _1294 = _1291 * (_1257.z + (-0.5));
        float _1301 = exp2((_1264.w + (-0.5)) * 20.0) * 2.0;
        float _1302 = _1301 * (_1264.x + (-0.5));
        float _1303 = _1301 * (_1264.y + (-0.5));
        float _1304 = _1301 * (_1264.z + (-0.5));
        float _1311 = exp2((_1271.w + (-0.5)) * 20.0) * 2.0;
        float _1312 = _1311 * (_1271.x + (-0.5));
        float _1313 = _1311 * (_1271.y + (-0.5));
        float _1314 = _1311 * (_1271.z + (-0.5));
        float _1321 = exp2((_1278.w + (-0.5)) * 20.0) * 2.0;
        float _1322 = _1321 * (_1278.x + (-0.5));
        float _1323 = _1321 * (_1278.y + (-0.5));
        float _1324 = _1321 * (_1278.z + (-0.5));
        float _1325 = isnan(0.0) ? _1322 : (isnan(_1322) ? 0.0 : max(_1322, 0.0));
        float _1326 = isnan(0.0) ? _1323 : (isnan(_1323) ? 0.0 : max(_1323, 0.0));
        float _1327 = isnan(0.0) ? _1324 : (isnan(_1324) ? 0.0 : max(_1324, 0.0));
        float _1328 = _1292 * 0.5;
        float _1329 = _1302 * 0.5;
        float _1330 = _1312 * 0.5;
        float _1331 = dot(vec3(_1328, _1329, _1330), vec3(_1328, _1329, _1330));
        float _1336 = (_1331 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1331);
        float _1345 = (dot(vec3(_944, _945, _946), vec3(_1336 * _1328, _1336 * _1329, _1336 * _1330)) + 1.0) * 0.5;
        float _4286 = isnan(0.0) ? _1345 : (isnan(_1345) ? 0.0 : max(_1345, 0.0));
        float _1355 = sqrt(((_1329 * _1329) + (_1328 * _1328)) + (_1330 * _1330)) / (_1325 + 9.9999997473787516355514526367188e-06);
        float _4297 = isnan(0.0) ? _1355 : (isnan(_1355) ? 0.0 : max(_1355, 0.0));
        float _1356 = isnan(1.0) ? _4297 : (isnan(_4297) ? 1.0 : min(_4297, 1.0));
        float _1357 = _1356 * 2.0;
        float _1361 = (1.0 - _1356) / (_1356 + 1.0);
        float _4308 = isnan(0.0) ? _1361 : (isnan(_1361) ? 0.0 : max(_1361, 0.0));
        float _1362 = isnan(1.0) ? _4308 : (isnan(_4308) ? 1.0 : min(_4308, 1.0));
        float _1371 = ((((1.0 - _1362) * (_1357 + 2.0)) * exp2(log2(isnan(1.0) ? _4286 : (isnan(_4286) ? 1.0 : min(_4286, 1.0))) * (_1357 + 1.0))) + _1362) * _1325;
        float _1372 = _1293 * 0.5;
        float _1373 = _1303 * 0.5;
        float _1374 = _1313 * 0.5;
        float _1375 = dot(vec3(_1372, _1373, _1374), vec3(_1372, _1373, _1374));
        float _1380 = (_1375 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1375);
        float _1388 = (dot(vec3(_944, _945, _946), vec3(_1380 * _1372, _1380 * _1373, _1380 * _1374)) + 1.0) * 0.5;
        float _4319 = isnan(0.0) ? _1388 : (isnan(_1388) ? 0.0 : max(_1388, 0.0));
        float _1397 = sqrt(((_1373 * _1373) + (_1372 * _1372)) + (_1374 * _1374)) / (_1326 + 9.9999997473787516355514526367188e-06);
        float _4330 = isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0));
        float _1398 = isnan(1.0) ? _4330 : (isnan(_4330) ? 1.0 : min(_4330, 1.0));
        float _1399 = _1398 * 2.0;
        float _1403 = (1.0 - _1398) / (_1398 + 1.0);
        float _4341 = isnan(0.0) ? _1403 : (isnan(_1403) ? 0.0 : max(_1403, 0.0));
        float _1404 = isnan(1.0) ? _4341 : (isnan(_4341) ? 1.0 : min(_4341, 1.0));
        float _1413 = ((((1.0 - _1404) * (_1399 + 2.0)) * exp2(log2(isnan(1.0) ? _4319 : (isnan(_4319) ? 1.0 : min(_4319, 1.0))) * (_1399 + 1.0))) + _1404) * _1326;
        float _1414 = _1294 * 0.5;
        float _1415 = _1304 * 0.5;
        float _1416 = _1314 * 0.5;
        float _1417 = dot(vec3(_1414, _1415, _1416), vec3(_1414, _1415, _1416));
        float _1422 = (_1417 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1417);
        float _1430 = (dot(vec3(_944, _945, _946), vec3(_1422 * _1414, _1422 * _1415, _1422 * _1416)) + 1.0) * 0.5;
        float _4352 = isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0));
        float _1439 = sqrt(((_1415 * _1415) + (_1414 * _1414)) + (_1416 * _1416)) / (_1327 + 9.9999997473787516355514526367188e-06);
        float _4363 = isnan(0.0) ? _1439 : (isnan(_1439) ? 0.0 : max(_1439, 0.0));
        float _1440 = isnan(1.0) ? _4363 : (isnan(_4363) ? 1.0 : min(_4363, 1.0));
        float _1441 = _1440 * 2.0;
        float _1445 = (1.0 - _1440) / (_1440 + 1.0);
        float _4374 = isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0));
        float _1446 = isnan(1.0) ? _4374 : (isnan(_4374) ? 1.0 : min(_4374, 1.0));
        float _1455 = ((((1.0 - _1446) * (_1441 + 2.0)) * exp2(log2(isnan(1.0) ? _4352 : (isnan(_4352) ? 1.0 : min(_4352, 1.0))) * (_1441 + 1.0))) + _1446) * _1327;
        _1463 = _1294;
        _1465 = _1293;
        _1466 = _1292;
        _1467 = _1304;
        _1468 = _1303;
        _1469 = _1302;
        _1470 = _1314;
        _1471 = _1313;
        _1472 = _1312;
        _1473 = _1327;
        _1474 = _1326;
        _1475 = _1325;
        _1476 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1371 : (isnan(_1371) ? 0.0 : max(_1371, 0.0)));
        _1477 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1413 : (isnan(_1413) ? 0.0 : max(_1413, 0.0)));
        _1478 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0)));
    }
    else
    {
        _1463 = _1464;
        _1465 = _1464;
        _1466 = _1464;
        _1467 = _1464;
        _1468 = _1464;
        _1469 = _1464;
        _1470 = _1464;
        _1471 = _1464;
        _1472 = _1464;
        _1473 = _1464;
        _1474 = _1464;
        _1475 = _1464;
        _1476 = 0.0;
        _1477 = 0.0;
        _1478 = 0.0;
    }
    float _1771;
    float _1772;
    float _1773;
    float _1774;
    float _1775;
    float _1776;
    float _1777;
    float _1778;
    float _1779;
    float _1780;
    float _1781;
    float _1782;
    float _1783;
    float _1784;
    float _1785;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1502 = fma(_1162, cbModelParam._m0[30u].z, fma(_1158, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1154));
        float _1506 = fma(_1162, cbModelParam._m0[31u].z, fma(_1158, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1154));
        float _1510 = fma(_1162, cbModelParam._m0[32u].z, fma(_1158, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1154));
        float _1533 = _1154 + _944;
        float _1534 = _1158 + _945;
        float _1535 = _1162 + _946;
        float _1545 = fma(_1535, cbModelParam._m0[30u].z, fma(_1534, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1533)) - _1502;
        float _1546 = fma(_1535, cbModelParam._m0[31u].z, fma(_1534, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1533)) - _1506;
        float _1547 = fma(_1535, cbModelParam._m0[32u].z, fma(_1534, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1533)) - _1510;
        float _1551 = inversesqrt(dot(vec3(_1545, _1546, _1547), vec3(_1545, _1546, _1547)));
        float _1564 = ((_1551 * _1545) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1502 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1565 = ((_1551 * _1546) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1506 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1566 = ((_1551 * _1547) / cbModelParam._m0[35u].z) + ((((((_1510 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1568 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1564, _1565, _1566), 0.0);
        vec4 _1575 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1564, _1565, _1566), 0.0);
        vec4 _1582 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1564, _1565, _1566), 0.0);
        vec4 _1589 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1564, _1565, _1566), 0.0);
        float _1601 = exp2((_1568.w + (-0.5)) * 20.0) * 2.0;
        float _1602 = _1601 * (_1568.x + (-0.5));
        float _1603 = _1601 * (_1568.y + (-0.5));
        float _1604 = _1601 * (_1568.z + (-0.5));
        float _1611 = exp2((_1575.w + (-0.5)) * 20.0) * 2.0;
        float _1612 = _1611 * (_1575.x + (-0.5));
        float _1613 = _1611 * (_1575.y + (-0.5));
        float _1614 = _1611 * (_1575.z + (-0.5));
        float _1621 = exp2((_1582.w + (-0.5)) * 20.0) * 2.0;
        float _1622 = _1621 * (_1582.x + (-0.5));
        float _1623 = _1621 * (_1582.y + (-0.5));
        float _1624 = _1621 * (_1582.z + (-0.5));
        float _1631 = exp2((_1589.w + (-0.5)) * 20.0) * 2.0;
        float _1632 = _1631 * (_1589.x + (-0.5));
        float _1633 = _1631 * (_1589.y + (-0.5));
        float _1634 = _1631 * (_1589.z + (-0.5));
        float _1635 = isnan(0.0) ? _1632 : (isnan(_1632) ? 0.0 : max(_1632, 0.0));
        float _1636 = isnan(0.0) ? _1633 : (isnan(_1633) ? 0.0 : max(_1633, 0.0));
        float _1637 = isnan(0.0) ? _1634 : (isnan(_1634) ? 0.0 : max(_1634, 0.0));
        float _1638 = _1602 * 0.5;
        float _1639 = _1612 * 0.5;
        float _1640 = _1622 * 0.5;
        float _1641 = dot(vec3(_1638, _1639, _1640), vec3(_1638, _1639, _1640));
        float _1646 = (_1641 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1641);
        float _1654 = (dot(vec3(_944, _945, _946), vec3(_1646 * _1638, _1646 * _1639, _1646 * _1640)) + 1.0) * 0.5;
        float _4415 = isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0));
        float _1663 = sqrt(((_1639 * _1639) + (_1638 * _1638)) + (_1640 * _1640)) / (_1635 + 9.9999997473787516355514526367188e-06);
        float _4426 = isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0));
        float _1664 = isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0));
        float _1665 = _1664 * 2.0;
        float _1669 = (1.0 - _1664) / (_1664 + 1.0);
        float _4437 = isnan(0.0) ? _1669 : (isnan(_1669) ? 0.0 : max(_1669, 0.0));
        float _1670 = isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0));
        float _1679 = ((((1.0 - _1670) * (_1665 + 2.0)) * exp2(log2(isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0))) * (_1665 + 1.0))) + _1670) * _1635;
        float _1680 = _1603 * 0.5;
        float _1681 = _1613 * 0.5;
        float _1682 = _1623 * 0.5;
        float _1683 = dot(vec3(_1680, _1681, _1682), vec3(_1680, _1681, _1682));
        float _1688 = (_1683 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1683);
        float _1696 = (dot(vec3(_944, _945, _946), vec3(_1688 * _1680, _1688 * _1681, _1688 * _1682)) + 1.0) * 0.5;
        float _4448 = isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0));
        float _1705 = sqrt(((_1681 * _1681) + (_1680 * _1680)) + (_1682 * _1682)) / (_1636 + 9.9999997473787516355514526367188e-06);
        float _4459 = isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0));
        float _1706 = isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0));
        float _1707 = _1706 * 2.0;
        float _1711 = (1.0 - _1706) / (_1706 + 1.0);
        float _4470 = isnan(0.0) ? _1711 : (isnan(_1711) ? 0.0 : max(_1711, 0.0));
        float _1712 = isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0));
        float _1721 = ((((1.0 - _1712) * (_1707 + 2.0)) * exp2(log2(isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0))) * (_1707 + 1.0))) + _1712) * _1636;
        float _1722 = _1604 * 0.5;
        float _1723 = _1614 * 0.5;
        float _1724 = _1624 * 0.5;
        float _1725 = dot(vec3(_1722, _1723, _1724), vec3(_1722, _1723, _1724));
        float _1730 = (_1725 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1725);
        float _1738 = (dot(vec3(_944, _945, _946), vec3(_1730 * _1722, _1730 * _1723, _1730 * _1724)) + 1.0) * 0.5;
        float _4481 = isnan(0.0) ? _1738 : (isnan(_1738) ? 0.0 : max(_1738, 0.0));
        float _1747 = sqrt(((_1723 * _1723) + (_1722 * _1722)) + (_1724 * _1724)) / (_1637 + 9.9999997473787516355514526367188e-06);
        float _4492 = isnan(0.0) ? _1747 : (isnan(_1747) ? 0.0 : max(_1747, 0.0));
        float _1748 = isnan(1.0) ? _4492 : (isnan(_4492) ? 1.0 : min(_4492, 1.0));
        float _1749 = _1748 * 2.0;
        float _1753 = (1.0 - _1748) / (_1748 + 1.0);
        float _4503 = isnan(0.0) ? _1753 : (isnan(_1753) ? 0.0 : max(_1753, 0.0));
        float _1754 = isnan(1.0) ? _4503 : (isnan(_4503) ? 1.0 : min(_4503, 1.0));
        float _1763 = ((((1.0 - _1754) * (_1749 + 2.0)) * exp2(log2(isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0))) * (_1749 + 1.0))) + _1754) * _1637;
        _1771 = _1604;
        _1772 = _1603;
        _1773 = _1602;
        _1774 = _1614;
        _1775 = _1613;
        _1776 = _1612;
        _1777 = _1624;
        _1778 = _1623;
        _1779 = _1622;
        _1780 = _1637;
        _1781 = _1636;
        _1782 = _1635;
        _1783 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1679 : (isnan(_1679) ? 0.0 : max(_1679, 0.0)));
        _1784 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1721 : (isnan(_1721) ? 0.0 : max(_1721, 0.0)));
        _1785 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1763 : (isnan(_1763) ? 0.0 : max(_1763, 0.0)));
    }
    else
    {
        _1771 = _1464;
        _1772 = _1464;
        _1773 = _1464;
        _1774 = _1464;
        _1775 = _1464;
        _1776 = _1464;
        _1777 = _1464;
        _1778 = _1464;
        _1779 = _1464;
        _1780 = _1464;
        _1781 = _1464;
        _1782 = _1464;
        _1783 = 0.0;
        _1784 = 0.0;
        _1785 = 0.0;
    }
    float _1795 = (cbModelParam._m0[1u].x * (_1783 - _1476)) + _1476;
    float _1796 = (cbModelParam._m0[1u].x * (_1784 - _1477)) + _1477;
    float _1797 = (cbModelParam._m0[1u].x * (_1785 - _1478)) + _1478;
    float _1818 = fma(_1797, cbSceneParam._m0[89u].z, fma(_1796, cbSceneParam._m0[89u].y, _1795 * cbSceneParam._m0[89u].x));
    float _1821 = fma(_1797, cbSceneParam._m0[90u].z, fma(_1796, cbSceneParam._m0[90u].y, _1795 * cbSceneParam._m0[90u].x));
    float _1824 = fma(_1797, cbSceneParam._m0[91u].z, fma(_1796, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1795));
    float _1839 = _1101 * 0.5;
    float _1840 = _1102 * 0.5;
    float _1841 = _1103 * 0.5;
    float _1842 = dot(vec4(_1839, _1840, _1841, 1.0), vec4(_1773, _1776, _1779, _1782));
    float _1845 = dot(vec4(_1839, _1840, _1841, 1.0), vec4(_1772, _1775, _1778, _1781));
    float _1848 = dot(vec4(_1839, _1840, _1841, 1.0), vec4(_1771, _1774, _1777, _1780));
    float _1882;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1855 = dot(vec4(_1839, _1840, _1841, 1.0), vec4(_1463, _1467, _1470, _1473));
        float _1859 = dot(vec4(_1839, _1840, _1841, 1.0), vec4(_1465, _1468, _1471, _1474));
        float _1863 = dot(vec4(_1839, _1840, _1841, 1.0), vec4(_1466, _1469, _1472, _1475));
        float _1870 = dot(vec4(cbModelParam._m0[39u]), vec4(_1839, _1840, _1841, 1.0));
        _1882 = dot(vec3(isnan(0.0) ? _1863 : (isnan(_1863) ? 0.0 : max(_1863, 0.0)), isnan(0.0) ? _1859 : (isnan(_1859) ? 0.0 : max(_1859, 0.0)), isnan(0.0) ? _1855 : (isnan(_1855) ? 0.0 : max(_1855, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1870) ? 0.0 : (isnan(0.0) ? _1870 : max(0.0, _1870))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1882 = 1.0;
    }
    float _1893;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1884 = dot(vec4(cbModelParam._m0[40u]), vec4(_1839, _1840, _1841, 1.0));
        _1893 = dot(vec3(isnan(0.0) ? _1842 : (isnan(_1842) ? 0.0 : max(_1842, 0.0)), isnan(0.0) ? _1845 : (isnan(_1845) ? 0.0 : max(_1845, 0.0)), isnan(0.0) ? _1848 : (isnan(_1848) ? 0.0 : max(_1848, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1884) ? 0.0 : (isnan(0.0) ? _1884 : max(0.0, _1884))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1893 = 1.0;
    }
    float _1897 = (_1893 * cbModelParam._m0[1u].x) + (_1882 * (1.0 - cbModelParam._m0[1u].x));
    float _1907 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _947);
    float _1908 = isnan(_1907) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1907 : min(cbModelParam._m0[25u].z, _1907));
    float _1989;
    float _1991;
    float _1993;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1956 = fma(_1162, cbModelParam._m0[13u].z, fma(_1158, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1154)) + cbModelParam._m0[13u].w;
        float _1960 = fma(_1162, cbModelParam._m0[14u].z, fma(_1158, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1154)) + cbModelParam._m0[14u].w;
        float _1964 = fma(_1162, cbModelParam._m0[15u].z, fma(_1158, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1154)) + cbModelParam._m0[15u].w;
        float _1967 = fma(_1103, cbModelParam._m0[13u].z, fma(_1102, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1101));
        float _1970 = fma(_1103, cbModelParam._m0[14u].z, fma(_1102, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1101));
        float _1973 = fma(_1103, cbModelParam._m0[15u].z, fma(_1102, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1101));
        float _2001;
        if (_1967 > 0.0)
        {
            _2001 = abs((1.0 - _1956) / _1967);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1967 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1956 + 1.0) / _1967);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2001 = frontier_phi_14_12_ladder;
        }
        float _2171;
        if (_1970 > 0.0)
        {
            _2171 = abs((1.0 - _1960) / _1970);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1970 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1960 + 1.0) / _1970);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2171 = frontier_phi_23_19_ladder;
        }
        float _2466;
        if (_1973 > 0.0)
        {
            _2466 = abs((1.0 - _1964) / _1973);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1973 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1964 + 1.0) / _1973);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2466 = frontier_phi_35_30_ladder;
        }
        float _2468 = isnan(_2171) ? _2001 : (isnan(_2001) ? _2171 : min(_2001, _2171));
        float _2469 = isnan(_2466) ? _2468 : (isnan(_2468) ? _2466 : min(_2468, _2466));
        float _2473 = (_2469 * _1967) + _1956;
        float _2474 = (_2469 * _1970) + _1960;
        float _2475 = (_2469 * _1973) + _1964;
        float _2476 = _2469 * 9.9999997473787516355514526367188e-05;
        float _2478 = (-1.0) - _2476;
        float _2480 = _2476 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2475 > _2480) || ((_2475 < _2478) || ((_2474 > _2480) || ((_2474 < _2478) || ((_2473 < _2478) || (_2473 > _2480))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2620 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2475, cbModelParam._m0[9u].z, fma(_2474, cbModelParam._m0[9u].y, _2473 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2475, cbModelParam._m0[10u].z, fma(_2474, cbModelParam._m0[10u].y, _2473 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2475, cbModelParam._m0[11u].z, fma(_2474, cbModelParam._m0[11u].y, _2473 * cbModelParam._m0[11u].x))), _1908);
            frontier_phi_13_35_ladder = _2620.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2620.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2620.x * cbModelParam._m0[1u].y;
        }
        _1989 = frontier_phi_13_35_ladder_2;
        _1991 = frontier_phi_13_35_ladder_1;
        _1993 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1977 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1101, _1102, _1103), _1908);
        _1989 = _1977.x * cbModelParam._m0[1u].y;
        _1991 = _1977.y * cbModelParam._m0[1u].y;
        _1993 = _1977.z * cbModelParam._m0[1u].y;
    }
    float _1997 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _947);
    float _1998 = isnan(_1997) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1997 : min(cbModelParam._m0[25u].w, _1997));
    float _2088;
    float _2090;
    float _2092;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2052 = fma(_1162, cbModelParam._m0[21u].z, fma(_1158, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1154)) + cbModelParam._m0[21u].w;
        float _2056 = fma(_1162, cbModelParam._m0[22u].z, fma(_1158, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1154)) + cbModelParam._m0[22u].w;
        float _2060 = fma(_1162, cbModelParam._m0[23u].z, fma(_1158, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1154)) + cbModelParam._m0[23u].w;
        float _2063 = fma(_1103, cbModelParam._m0[21u].z, fma(_1102, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1101));
        float _2066 = fma(_1103, cbModelParam._m0[22u].z, fma(_1102, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1101));
        float _2069 = fma(_1103, cbModelParam._m0[23u].z, fma(_1102, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1101));
        float _2176;
        if (_2063 > 0.0)
        {
            _2176 = abs((1.0 - _2052) / _2063);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2063 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2052 + 1.0) / _2063);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2176 = frontier_phi_25_21_ladder;
        }
        float _2493;
        if (_2066 > 0.0)
        {
            _2493 = abs((1.0 - _2056) / _2066);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2066 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2056 + 1.0) / _2066);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2493 = frontier_phi_37_32_ladder;
        }
        float _2820;
        if (_2069 > 0.0)
        {
            _2820 = abs((1.0 - _2060) / _2069);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2069 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2060 + 1.0) / _2069);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2820 = frontier_phi_47_44_ladder;
        }
        float _2822 = isnan(_2493) ? _2176 : (isnan(_2176) ? _2493 : min(_2176, _2493));
        float _2823 = isnan(_2820) ? _2822 : (isnan(_2822) ? _2820 : min(_2822, _2820));
        float _2827 = (_2823 * _2063) + _2052;
        float _2828 = (_2823 * _2066) + _2056;
        float _2829 = (_2823 * _2069) + _2060;
        float _2830 = _2823 * 9.9999997473787516355514526367188e-05;
        float _2831 = (-1.0) - _2830;
        float _2833 = _2830 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2829 > _2833) || ((_2829 < _2831) || ((_2828 > _2833) || ((_2828 < _2831) || ((_2827 < _2831) || (_2827 > _2833))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2947 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2829, cbModelParam._m0[17u].z, fma(_2828, cbModelParam._m0[17u].y, _2827 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2829, cbModelParam._m0[18u].z, fma(_2828, cbModelParam._m0[18u].y, _2827 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2829, cbModelParam._m0[19u].z, fma(_2828, cbModelParam._m0[19u].y, _2827 * cbModelParam._m0[19u].x))), _1998);
            frontier_phi_22_47_ladder = _2947.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2947.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2947.x * cbModelParam._m0[1u].z;
        }
        _2088 = frontier_phi_22_47_ladder_2;
        _2090 = frontier_phi_22_47_ladder_1;
        _2092 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2072 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1101, _1102, _1103), _1998);
        _2088 = _2072.x * cbModelParam._m0[1u].z;
        _2090 = _2072.y * cbModelParam._m0[1u].z;
        _2092 = _2072.z * cbModelParam._m0[1u].z;
    }
    float _2104 = ((((1.0 - _1122) * ((_1109 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1122 * _1109)) * _1093;
    float _2105 = _2104 * ((cbModelParam._m0[1u].w * (_2088 - _1989)) + _1989);
    float _2106 = _2104 * ((cbModelParam._m0[1u].w * (_2090 - _1991)) + _1991);
    float _2107 = _2104 * ((cbModelParam._m0[1u].w * (_2092 - _1993)) + _1993);
    float _2110 = fma(_2107, cbSceneParam._m0[89u].z, fma(_2106, cbSceneParam._m0[89u].y, _2105 * cbSceneParam._m0[89u].x));
    float _2113 = fma(_2107, cbSceneParam._m0[90u].z, fma(_2106, cbSceneParam._m0[90u].y, _2105 * cbSceneParam._m0[90u].x));
    float _2116 = fma(_2107, cbSceneParam._m0[91u].z, fma(_2106, cbSceneParam._m0[91u].y, _2105 * cbSceneParam._m0[91u].x));
    float _2150 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2154 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2158 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2162 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2163 = _2150 / _2162;
    float _2164 = _2154 / _2162;
    float _2165 = _2158 / _2162;
    float _2312;
    float _2313;
    float _2314;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2192 = ((uint(_2165 > cbSceneParam._m0[59u].y) + uint(_2165 > cbSceneParam._m0[59u].x)) + uint(_2165 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2193 = _2192 + 43u;
        uint _2201 = _2192 + 44u;
        uint _2209 = _2192 + 45u;
        uint _2217 = _2192 + 46u;
        float _2228 = fma(_2162, cbSceneParam._m0[_2193].w, fma(_2158, cbSceneParam._m0[_2193].z, fma(_2154, cbSceneParam._m0[_2193].y, _2150 * cbSceneParam._m0[_2193].x)));
        float _2232 = fma(_2162, cbSceneParam._m0[_2201].w, fma(_2158, cbSceneParam._m0[_2201].z, fma(_2154, cbSceneParam._m0[_2201].y, _2150 * cbSceneParam._m0[_2201].x)));
        float _2240 = fma(_2162, cbSceneParam._m0[_2217].w, fma(_2158, cbSceneParam._m0[_2217].z, fma(_2154, cbSceneParam._m0[_2217].y, _2150 * cbSceneParam._m0[_2217].x)));
        float _2245 = cbSceneParam._m0[33u].z * _2240;
        float _2247 = cbSceneParam._m0[33u].w * _2240;
        float _2250 = fma(_2162, cbSceneParam._m0[_2209].w, fma(_2158, cbSceneParam._m0[_2209].z, fma(_2154, cbSceneParam._m0[_2209].y, _2150 * cbSceneParam._m0[_2209].x))) / _2240;
        float _2298 = (cbSceneParam._m0[33u].x - sqrt(((_2164 * _2164) + (_2163 * _2163)) + (_2165 * _2165))) * cbSceneParam._m0[33u].y;
        float _4629 = isnan(0.0) ? _2298 : (isnan(_2298) ? 0.0 : max(_2298, 0.0));
        float _2305 = (isnan(1.0) ? _4629 : (isnan(_4629) ? 1.0 : min(_4629, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2245 + _2228) / _2240, (_2247 + _2232) / _2240), _2250), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2247 + _2228) / _2240, (_2232 - _2245) / _2240), _2250), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2228 - _2245) / _2240, (_2232 - _2247) / _2240), _2250), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2228 - _2247) / _2240, (_2245 + _2232) / _2240), _2250), 0.0)).x), vec4(0.25)));
        _2312 = 1.0 - (_2305 * cbSceneParam._m0[34u].x);
        _2313 = 1.0 - (_2305 * cbSceneParam._m0[34u].y);
        _2314 = 1.0 - (_2305 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2312 = 1.0;
        _2313 = 1.0;
        _2314 = 1.0;
    }
    float _2378;
    float _2380;
    float _2382;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2366 = fma(_2162, cbSceneParam._m0[63u].w, fma(_2158, cbSceneParam._m0[63u].z, fma(_2154, cbSceneParam._m0[63u].y, _2150 * cbSceneParam._m0[63u].x)));
        float _2367 = fma(_2162, cbSceneParam._m0[60u].w, fma(_2158, cbSceneParam._m0[60u].z, fma(_2154, cbSceneParam._m0[60u].y, _2150 * cbSceneParam._m0[60u].x))) / _2366;
        float _2368 = fma(_2162, cbSceneParam._m0[61u].w, fma(_2158, cbSceneParam._m0[61u].z, fma(_2154, cbSceneParam._m0[61u].y, _2150 * cbSceneParam._m0[61u].x))) / _2366;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2367 >= cbSceneParam._m0[64u].x) && (_2368 >= cbSceneParam._m0[64u].y)) && (_2367 <= cbSceneParam._m0[64u].z)) && (_2368 <= cbSceneParam._m0[64u].w))
        {
            float _2506 = fma(_2162, cbSceneParam._m0[62u].w, fma(_2158, cbSceneParam._m0[62u].z, fma(_2154, cbSceneParam._m0[62u].y, _2150 * cbSceneParam._m0[62u].x))) / _2366;
            float _2510 = isnan(cbSceneParam._m0[41u].w) ? _2506 : (isnan(_2506) ? cbSceneParam._m0[41u].w : max(_2506, cbSceneParam._m0[41u].w));
            float _2553 = (cbSceneParam._m0[33u].x - sqrt(((_2164 * _2164) + (_2163 * _2163)) + (_2165 * _2165))) * cbSceneParam._m0[33u].y;
            float _4645 = isnan(0.0) ? _2553 : (isnan(_2553) ? 0.0 : max(_2553, 0.0));
            float _2560 = (isnan(1.0) ? _4645 : (isnan(_4645) ? 1.0 : min(_4645, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2367, cbSceneParam._m0[33u].w + _2368), _2510), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2367, _2368 - cbSceneParam._m0[33u].z), _2510), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2367 - cbSceneParam._m0[33u].z, _2368 - cbSceneParam._m0[33u].w), _2510), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2367 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2368), _2510), 0.0)).x), vec4(0.25)));
            float _2564 = 1.0 - (_2560 * cbSceneParam._m0[34u].x);
            float _2565 = 1.0 - (_2560 * cbSceneParam._m0[34u].y);
            float _2566 = 1.0 - (_2560 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2566) ? _2314 : (isnan(_2314) ? _2566 : min(_2314, _2566));
            frontier_phi_34_33_ladder_1 = isnan(_2565) ? _2313 : (isnan(_2313) ? _2565 : min(_2313, _2565));
            frontier_phi_34_33_ladder_2 = isnan(_2564) ? _2312 : (isnan(_2312) ? _2564 : min(_2312, _2564));
        }
        else
        {
            frontier_phi_34_33_ladder = _2314;
            frontier_phi_34_33_ladder_1 = _2313;
            frontier_phi_34_33_ladder_2 = _2312;
        }
        _2378 = frontier_phi_34_33_ladder_2;
        _2380 = frontier_phi_34_33_ladder_1;
        _2382 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2378 = _2312;
        _2380 = _2313;
        _2382 = _2314;
    }
    uvec4 _2387 = floatBitsToUint(cbInstanceData._m0[_287 + 5u]);
    uint _2389 = _2387.x * 14u;
    uint _2390 = _2389 + 13u;
    float _2397 = _1093 + (-1.0);
    float _2402 = (cbLight._m0[_2390].x * _2397) + 1.0;
    float _2403 = (cbLight._m0[_2390].y * _2397) + 1.0;
    float _2404 = (cbLight._m0[_2390].z * _2397) + 1.0;
    float _2405 = (cbLight._m0[_2390].w * _2397) + 1.0;
    uint _2406 = _2389 + 5u;
    float _2412 = isnan(1.0) ? _2403 : (isnan(_2403) ? 1.0 : min(_2403, 1.0));
    uint _2416 = _2389 + 4u;
    float _2425 = isnan(1.0) ? _2402 : (isnan(_2402) ? 1.0 : min(_2402, 1.0));
    uint _2429 = _2389 | 1u;
    float _2440 = dot(vec3(cbLight._m0[_2389].xyz), vec3(_944, _945, _946));
    float _2443 = dot(vec3(cbLight._m0[_2429].xyz), vec3(_944, _945, _946));
    float _4681 = isnan(0.0) ? _2440 : (isnan(_2440) ? 0.0 : max(_2440, 0.0));
    float _4692 = isnan(0.0) ? _2443 : (isnan(_2443) ? 0.0 : max(_2443, 0.0));
    float _2448 = (isnan(1.0) ? _4681 : (isnan(_4681) ? 1.0 : min(_4681, 1.0))) * 0.3183098733425140380859375;
    float _2450 = (isnan(1.0) ? _4692 : (isnan(_4692) ? 1.0 : min(_4692, 1.0))) * 0.3183098733425140380859375;
    float _2457 = ((cbLight._m0[_2406].x * _2412) * _2450) + (((cbLight._m0[_2416].x * _2378) * _2425) * _2448);
    float _2458 = ((_2412 * cbLight._m0[_2406].y) * _2450) + (((cbLight._m0[_2416].y * _2380) * _2425) * _2448);
    float _2459 = ((_2412 * cbLight._m0[_2406].z) * _2450) + (((cbLight._m0[_2416].z * _2382) * _2425) * _2448);
    uvec4 _2463 = floatBitsToUint(cbLight._m0[_2389 + 12u]);
    bool _2465 = _2463.x == 0u;
    float _2567;
    float _2569;
    float _2571;
    if (_2465)
    {
        _2567 = _2457;
        _2569 = _2458;
        _2571 = _2459;
    }
    else
    {
        uint _2575 = _2389 + 6u;
        float _2591 = (dot(vec3(cbLight._m0[_2389 + 2u].xyz), vec3(_944, _945, _946)) * 0.5) + 0.5;
        float _2592 = _2591 * _2591;
        float _4703 = isnan(0.0) ? _2592 : (isnan(_2592) ? 0.0 : max(_2592, 0.0));
        float _2593 = isnan(1.0) ? _4703 : (isnan(_4703) ? 1.0 : min(_4703, 1.0));
        float _2594 = isnan(1.0) ? _2404 : (isnan(_2404) ? 1.0 : min(_2404, 1.0));
        _2567 = (((cbLight._m0[_2575].x * 0.3183098733425140380859375) * _2593) * _2594) + _2457;
        _2569 = (((cbLight._m0[_2575].y * 0.3183098733425140380859375) * _2593) * _2594) + _2458;
        _2571 = (((cbLight._m0[_2575].z * 0.3183098733425140380859375) * _2593) * _2594) + _2459;
    }
    bool _2574 = _2463.y == 0u;
    float _2629;
    float _2631;
    float _2633;
    if (_2574)
    {
        _2629 = _2567;
        _2631 = _2569;
        _2633 = _2571;
    }
    else
    {
        uint _2791 = _2389 + 7u;
        float _2807 = (dot(vec3(cbLight._m0[_2389 + 3u].xyz), vec3(_944, _945, _946)) * 0.5) + 0.5;
        float _2808 = _2807 * _2807;
        float _4719 = isnan(0.0) ? _2808 : (isnan(_2808) ? 0.0 : max(_2808, 0.0));
        float _2809 = isnan(1.0) ? _4719 : (isnan(_4719) ? 1.0 : min(_4719, 1.0));
        float _2810 = isnan(1.0) ? _2405 : (isnan(_2405) ? 1.0 : min(_2405, 1.0));
        _2629 = (((cbLight._m0[_2791].x * 0.3183098733425140380859375) * _2809) * _2810) + _2567;
        _2631 = (((cbLight._m0[_2791].y * 0.3183098733425140380859375) * _2809) * _2810) + _2569;
        _2633 = (((cbLight._m0[_2791].z * 0.3183098733425140380859375) * _2809) * _2810) + _2571;
    }
    uint _2636 = _2389 + 8u;
    float _2649 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2389].w)) * _947) * 0.949999988079071044921875);
    float _2650 = _2649 * _2649;
    float _2651 = cbLight._m0[_2389].x + _1022;
    float _2652 = cbLight._m0[_2389].y + _1023;
    float _2653 = cbLight._m0[_2389].z + _1024;
    float _2657 = inversesqrt(dot(vec3(_2651, _2652, _2653), vec3(_2651, _2652, _2653)));
    float _2658 = _2657 * _2651;
    float _2659 = _2657 * _2652;
    float _2660 = _2657 * _2653;
    float _2661 = dot(vec3(_944, _945, _946), vec3(cbLight._m0[_2389].xyz));
    float _4735 = isnan(0.0) ? _2661 : (isnan(_2661) ? 0.0 : max(_2661, 0.0));
    float _2664 = isnan(1.0) ? _4735 : (isnan(_4735) ? 1.0 : min(_4735, 1.0));
    float _4746 = isnan(0.0) ? _1094 : (isnan(_1094) ? 0.0 : max(_1094, 0.0));
    float _2665 = isnan(1.0) ? _4746 : (isnan(_4746) ? 1.0 : min(_4746, 1.0));
    float _2666 = dot(vec3(_944, _945, _946), vec3(_2658, _2659, _2660));
    float _4757 = isnan(0.0) ? _2666 : (isnan(_2666) ? 0.0 : max(_2666, 0.0));
    float _2669 = isnan(1.0) ? _4757 : (isnan(_4757) ? 1.0 : min(_4757, 1.0));
    float _2670 = dot(vec3(cbLight._m0[_2389].xyz), vec3(_2658, _2659, _2660));
    float _4768 = isnan(0.0) ? _2670 : (isnan(_2670) ? 0.0 : max(_2670, 0.0));
    float _2674 = _2650 * _2650;
    float _2678 = ((_2669 * _2669) * (_2674 + (-1.0))) + 1.0;
    float _2689 = (exp2(log2(1.0 - (isnan(1.0) ? _4768 : (isnan(_4768) ? 1.0 : min(_4768, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2690 = 1.0 - _2650;
    float _2701 = (0.5 / (((_2665 * ((_2664 * _2690) + _2650)) + 9.9999999392252902907785028219223e-09) + (((_2665 * _2690) + _2650) * _2664))) * _2664;
    float _4779 = isnan(0.0) ? _2701 : (isnan(_2701) ? 0.0 : max(_2701, 0.0));
    float _2703 = (isnan(1.0) ? _4779 : (isnan(_4779) ? 1.0 : min(_4779, 1.0))) * (_2674 / ((_2678 * _2678) * 3.141590118408203125));
    uint _2717 = _2389 + 9u;
    float _2728 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2429].w)) * _947) * 0.949999988079071044921875);
    float _2729 = _2728 * _2728;
    float _2730 = cbLight._m0[_2429].x + _1022;
    float _2731 = cbLight._m0[_2429].y + _1023;
    float _2732 = cbLight._m0[_2429].z + _1024;
    float _2736 = inversesqrt(dot(vec3(_2730, _2731, _2732), vec3(_2730, _2731, _2732)));
    float _2737 = _2736 * _2730;
    float _2738 = _2736 * _2731;
    float _2739 = _2736 * _2732;
    float _2740 = dot(vec3(_944, _945, _946), vec3(cbLight._m0[_2429].xyz));
    float _4790 = isnan(0.0) ? _2740 : (isnan(_2740) ? 0.0 : max(_2740, 0.0));
    float _2743 = isnan(1.0) ? _4790 : (isnan(_4790) ? 1.0 : min(_4790, 1.0));
    float _2744 = dot(vec3(_944, _945, _946), vec3(_2737, _2738, _2739));
    float _4801 = isnan(0.0) ? _2744 : (isnan(_2744) ? 0.0 : max(_2744, 0.0));
    float _2747 = isnan(1.0) ? _4801 : (isnan(_4801) ? 1.0 : min(_4801, 1.0));
    float _2748 = dot(vec3(cbLight._m0[_2429].xyz), vec3(_2737, _2738, _2739));
    float _4812 = isnan(0.0) ? _2748 : (isnan(_2748) ? 0.0 : max(_2748, 0.0));
    float _2752 = _2729 * _2729;
    float _2756 = ((_2747 * _2747) * (_2752 + (-1.0))) + 1.0;
    float _2765 = (exp2(log2(1.0 - (isnan(1.0) ? _4812 : (isnan(_4812) ? 1.0 : min(_4812, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2766 = 1.0 - _2729;
    float _2776 = (0.5 / (((_2665 * ((_2743 * _2766) + _2729)) + 9.9999999392252902907785028219223e-09) + (((_2665 * _2766) + _2729) * _2743))) * _2743;
    float _4823 = isnan(0.0) ? _2776 : (isnan(_2776) ? 0.0 : max(_2776, 0.0));
    float _2778 = (isnan(1.0) ? _4823 : (isnan(_4823) ? 1.0 : min(_4823, 1.0))) * (_2752 / ((_2756 * _2756) * 3.141590118408203125));
    float _2788 = (((_2765 * cbLight._m0[_2717].x) * _2778) * _2412) + ((((cbLight._m0[_2636].x * _2378) * _2689) * _2703) * _2425);
    float _2789 = (((_2765 * cbLight._m0[_2717].y) * _2778) * _2412) + ((((cbLight._m0[_2636].y * _2380) * _2689) * _2703) * _2425);
    float _2790 = (((_2765 * cbLight._m0[_2717].z) * _2778) * _2412) + ((((cbLight._m0[_2636].z * _2382) * _2689) * _2703) * _2425);
    float _2846;
    float _2848;
    float _2850;
    if (_2465)
    {
        _2846 = _2788;
        _2848 = _2789;
        _2850 = _2790;
    }
    else
    {
        uint _2852 = _2389 + 2u;
        uint _2856 = _2389 + 10u;
        float _2870 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2852].w)) * _947) * 0.949999988079071044921875);
        float _2871 = _2870 * _2870;
        float _2872 = cbLight._m0[_2852].x + _1022;
        float _2873 = cbLight._m0[_2852].y + _1023;
        float _2874 = cbLight._m0[_2852].z + _1024;
        float _2878 = inversesqrt(dot(vec3(_2872, _2873, _2874), vec3(_2872, _2873, _2874)));
        float _2879 = _2878 * _2872;
        float _2880 = _2878 * _2873;
        float _2881 = _2878 * _2874;
        float _2882 = dot(vec3(_944, _945, _946), vec3(cbLight._m0[_2852].xyz));
        float _4834 = isnan(0.0) ? _2882 : (isnan(_2882) ? 0.0 : max(_2882, 0.0));
        float _2885 = isnan(1.0) ? _4834 : (isnan(_4834) ? 1.0 : min(_4834, 1.0));
        float _2886 = dot(vec3(_944, _945, _946), vec3(_2879, _2880, _2881));
        float _4845 = isnan(0.0) ? _2886 : (isnan(_2886) ? 0.0 : max(_2886, 0.0));
        float _2889 = isnan(1.0) ? _4845 : (isnan(_4845) ? 1.0 : min(_4845, 1.0));
        float _2890 = dot(vec3(cbLight._m0[_2852].xyz), vec3(_2879, _2880, _2881));
        float _4856 = isnan(0.0) ? _2890 : (isnan(_2890) ? 0.0 : max(_2890, 0.0));
        float _2894 = _2871 * _2871;
        float _2898 = ((_2889 * _2889) * (_2894 + (-1.0))) + 1.0;
        float _2907 = (exp2(log2(1.0 - (isnan(1.0) ? _4856 : (isnan(_4856) ? 1.0 : min(_4856, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2908 = 1.0 - _2871;
        float _2918 = (0.5 / (((_2665 * ((_2885 * _2908) + _2871)) + 9.9999999392252902907785028219223e-09) + (((_2665 * _2908) + _2871) * _2885))) * _2885;
        float _4867 = isnan(0.0) ? _2918 : (isnan(_2918) ? 0.0 : max(_2918, 0.0));
        float _2920 = (isnan(1.0) ? _4867 : (isnan(_4867) ? 1.0 : min(_4867, 1.0))) * (_2894 / ((_2898 * _2898) * 3.141590118408203125));
        float _2921 = isnan(1.0) ? _2404 : (isnan(_2404) ? 1.0 : min(_2404, 1.0));
        _2846 = (((_2907 * cbLight._m0[_2856].x) * _2920) * _2921) + _2788;
        _2848 = (((_2907 * cbLight._m0[_2856].y) * _2920) * _2921) + _2789;
        _2850 = (((_2907 * cbLight._m0[_2856].z) * _2920) * _2921) + _2790;
    }
    float _2952;
    float _2954;
    float _2956;
    if (_2574)
    {
        _2952 = _2846;
        _2954 = _2848;
        _2956 = _2850;
    }
    else
    {
        uint _2963 = _2389 + 3u;
        uint _2967 = _2389 + 11u;
        float _2981 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2963].w)) * _947) * 0.949999988079071044921875);
        float _2982 = _2981 * _2981;
        float _2983 = cbLight._m0[_2963].x + _1022;
        float _2984 = cbLight._m0[_2963].y + _1023;
        float _2985 = cbLight._m0[_2963].z + _1024;
        float _2989 = inversesqrt(dot(vec3(_2983, _2984, _2985), vec3(_2983, _2984, _2985)));
        float _2990 = _2989 * _2983;
        float _2991 = _2989 * _2984;
        float _2992 = _2989 * _2985;
        float _2993 = dot(vec3(_944, _945, _946), vec3(cbLight._m0[_2963].xyz));
        float _4883 = isnan(0.0) ? _2993 : (isnan(_2993) ? 0.0 : max(_2993, 0.0));
        float _2996 = isnan(1.0) ? _4883 : (isnan(_4883) ? 1.0 : min(_4883, 1.0));
        float _2997 = dot(vec3(_944, _945, _946), vec3(_2990, _2991, _2992));
        float _4894 = isnan(0.0) ? _2997 : (isnan(_2997) ? 0.0 : max(_2997, 0.0));
        float _3000 = isnan(1.0) ? _4894 : (isnan(_4894) ? 1.0 : min(_4894, 1.0));
        float _3001 = dot(vec3(cbLight._m0[_2963].xyz), vec3(_2990, _2991, _2992));
        float _4905 = isnan(0.0) ? _3001 : (isnan(_3001) ? 0.0 : max(_3001, 0.0));
        float _3005 = _2982 * _2982;
        float _3009 = ((_3000 * _3000) * (_3005 + (-1.0))) + 1.0;
        float _3018 = (exp2(log2(1.0 - (isnan(1.0) ? _4905 : (isnan(_4905) ? 1.0 : min(_4905, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3019 = 1.0 - _2982;
        float _3029 = (0.5 / (((_2665 * ((_2996 * _3019) + _2982)) + 9.9999999392252902907785028219223e-09) + (((_2665 * _3019) + _2982) * _2996))) * _2996;
        float _4916 = isnan(0.0) ? _3029 : (isnan(_3029) ? 0.0 : max(_3029, 0.0));
        float _3031 = (isnan(1.0) ? _4916 : (isnan(_4916) ? 1.0 : min(_4916, 1.0))) * (_3005 / ((_3009 * _3009) * 3.141590118408203125));
        float _3032 = isnan(1.0) ? _2405 : (isnan(_2405) ? 1.0 : min(_2405, 1.0));
        _2952 = (((_3018 * cbLight._m0[_2967].x) * _3031) * _3032) + _2846;
        _2954 = (((_3018 * cbLight._m0[_2967].y) * _3031) * _3032) + _2848;
        _2956 = (((_3018 * cbLight._m0[_2967].z) * _3031) * _3032) + _2850;
    }
    float _3098;
    float _3100;
    float _3102;
    float _3104;
    float _3106;
    float _3108;
    if (_2387.y == 0u)
    {
        uvec4 _3053 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3054 = _3053.x;
        uint _3065 = uint((float(_3053.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1031) / _3054))) + floor(float(uint(cbSceneParam._m0[85u].x * _1030) / _3054)));
        float _3075 = (log2(_2165 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3076 = isnan(0.0) ? _3075 : (isnan(_3075) ? 0.0 : max(_3075, 0.0));
        uint _3079 = uint(isnan(14.0) ? _3076 : (isnan(_3076) ? 14.0 : min(_3076, 14.0)));
        uvec4 _3084 = texelFetch(g_lightClusterGridBuffer, int(((_3079 << 2u) + (_3065 << 6u)) >> 2u));
        uint _3085 = _3084.x;
        uint _3086 = _3053.z;
        float _3165;
        float _3167;
        float _3169;
        float _3171;
        float _3173;
        float _3175;
        if (((((1u << ((_3086 >> 4u) & 15u)) + 4294967295u) & _3085) == 0u) || ((_3086 & 240u) == 0u))
        {
            _3165 = 0.0;
            _3167 = 0.0;
            _3169 = 0.0;
            _3171 = 0.0;
            _3173 = 0.0;
            _3175 = 0.0;
        }
        else
        {
            float _3166;
            float _3168;
            float _3170;
            float _3172;
            float _3174;
            float _3176;
            float _3310 = 0.0;
            float _3311 = 0.0;
            float _3312 = 0.0;
            float _3313 = 0.0;
            float _3314 = 0.0;
            float _3315 = 0.0;
            uint _3316 = 0u;
            uint _3325;
            bool _3326;
            for (;;)
            {
                _3325 = texelFetch(g_lightClassification, int((((_3079 << 5u) + (_3065 << 9u)) + (_3316 << 2u)) >> 2u)).x;
                _3326 = _3325 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3326)
                {
                    frontier_phi_66_pred = _3315;
                    frontier_phi_66_pred_1 = _3314;
                    frontier_phi_66_pred_2 = _3313;
                    frontier_phi_66_pred_3 = _3312;
                    frontier_phi_66_pred_4 = _3311;
                    frontier_phi_66_pred_5 = _3310;
                }
                else
                {
                    float _3434;
                    float _3435;
                    float _3436;
                    float _3437;
                    float _3438;
                    float _3439;
                    uint _3440;
                    _3434 = _3310;
                    _3435 = _3311;
                    _3436 = _3312;
                    _3437 = _3313;
                    _3438 = _3314;
                    _3439 = _3315;
                    _3440 = _3325;
                    float _3366;
                    float _3367;
                    float _3368;
                    float _3369;
                    float _3370;
                    float _3371;
                    for (;;)
                    {
                        uint _3444 = uint(findLSB(_3440)) + (_3316 << 5u);
                        uint _3441 = (_3440 + 4294967295u) & _3440;
                        uint _3446 = _3444 * 48u;
                        vec4 _3460 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3446)).x, texelFetch(g_PointLightRenderingBuffer, int(_3446 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3446 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3446 + 3u)).x));
                        uint _3466 = (_3444 * 48u) + 4u;
                        vec4 _3479 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3466)).x, texelFetch(g_PointLightRenderingBuffer, int(_3466 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3466 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3466 + 3u)).x));
                        uint _3485 = (_3444 * 48u) + 8u;
                        vec3 _3496 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3485)).x, texelFetch(g_PointLightRenderingBuffer, int(_3485 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3485 + 2u)).x));
                        float _3500 = _3460.x - _2163;
                        float _3501 = _3460.y - _2164;
                        float _3502 = _3460.z - _2165;
                        float _3503 = dot(vec3(_3500, _3501, _3502), vec3(_3500, _3501, _3502));
                        float _3506 = inversesqrt(_3503);
                        float _3507 = _3506 * _3500;
                        float _3508 = _3506 * _3501;
                        float _3509 = _3506 * _3502;
                        float _3510 = dot(vec3(_1049, _1052, _1055), vec3(_3507, _3508, _3509));
                        float _3515 = 1.0 - (_3503 * _3460.w);
                        float _4942 = isnan(0.0) ? _3515 : (isnan(_3515) ? 0.0 : max(_3515, 0.0));
                        float _3516 = isnan(1.0) ? _4942 : (isnan(_4942) ? 1.0 : min(_4942, 1.0));
                        float _3517 = sqrt(_3503) * _3479.w;
                        float _3520 = 1.39999997615814208984375 / (_3517 + 1.39999997615814208984375);
                        float _3521 = _3520 * _3520;
                        float _3524 = ((1.0 - _3521) * _3510) + _3521;
                        float _3527 = _3517 * _3517;
                        float _3531 = ((isnan(0.0) ? _3524 : (isnan(_3524) ? 0.0 : max(_3524, 0.0))) * _3516) / ((_3527 * 0.699999988079071044921875) + 1.0);
                        float _3535 = (-0.0) - _2163;
                        float _3536 = (-0.0) - _2164;
                        float _3537 = (-0.0) - _2165;
                        float _3541 = inversesqrt(dot(vec3(_3535, _3536, _3537), vec3(_3535, _3536, _3537)));
                        float _3542 = _3541 * _3535;
                        float _3543 = _3541 * _3536;
                        float _3544 = _3541 * _3537;
                        float _3551 = exp2(log2(1.0 / ((_3527 * 3.5) + 5.0)) * 0.25);
                        float _3552 = 1.0 - _1109;
                        float _3559 = sqrt(1.0 - ((1.0 - (_3552 * _3552)) * (1.0 - (_3551 * _3551))));
                        float _3560 = _3559 * _3559;
                        float _3561 = _3560 * _3560;
                        float _3562 = _3542 + _3507;
                        float _3563 = _3543 + _3508;
                        float _3564 = _3544 + _3509;
                        float _3568 = inversesqrt(dot(vec3(_3562, _3563, _3564), vec3(_3562, _3563, _3564)));
                        float _3572 = dot(vec3(_1049, _1052, _1055), vec3(_3542, _3543, _3544));
                        float _4958 = isnan(0.0) ? _3572 : (isnan(_3572) ? 0.0 : max(_3572, 0.0));
                        float _3575 = isnan(1.0) ? _4958 : (isnan(_4958) ? 1.0 : min(_4958, 1.0));
                        float _3576 = dot(vec3(_1049, _1052, _1055), vec3(_3568 * _3562, _3568 * _3563, _3568 * _3564));
                        float _4969 = isnan(0.0) ? _3576 : (isnan(_3576) ? 0.0 : max(_3576, 0.0));
                        float _3579 = isnan(1.0) ? _4969 : (isnan(_4969) ? 1.0 : min(_4969, 1.0));
                        float _3583 = ((_3579 * _3579) * (_3561 + (-1.0))) + 1.0;
                        float _3584 = _3520 * _3560;
                        float _3585 = _3584 * _3584;
                        float _3588 = ((1.0 - _3585) * _3510) + _3585;
                        float _4980 = isnan(0.0) ? _3588 : (isnan(_3588) ? 0.0 : max(_3588, 0.0));
                        float _3589 = isnan(1.0) ? _4980 : (isnan(_4980) ? 1.0 : min(_4980, 1.0));
                        float _3590 = 1.0 - _3560;
                        float _3600 = (0.5 / (((_3589 * ((_3575 * _3590) + _3560)) + 9.9999999392252902907785028219223e-09) + (((_3589 * _3590) + _3560) * _3575))) * _3589;
                        float _4991 = isnan(0.0) ? _3600 : (isnan(_3600) ? 0.0 : max(_3600, 0.0));
                        float _3611 = (((_3561 * 3.1415927410125732421875) * (isnan(1.0) ? _4991 : (isnan(_4991) ? 1.0 : min(_4991, 1.0)))) / ((_3583 * _3583) * ((_3527 * 2.1991131305694580078125) + 3.141590118408203125))) * _3516;
                        _3369 = (_3531 * _3479.x) + _3437;
                        _3370 = (_3531 * _3479.y) + _3438;
                        _3371 = (_3531 * _3479.z) + _3439;
                        _3366 = (_3611 * _3496.x) + _3434;
                        _3367 = (_3611 * _3496.y) + _3435;
                        _3368 = (_3611 * _3496.z) + _3436;
                        if (_3441 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3434 = _3366;
                            _3435 = _3367;
                            _3436 = _3368;
                            _3437 = _3369;
                            _3438 = _3370;
                            _3439 = _3371;
                            _3440 = _3441;
                        }
                    }
                    frontier_phi_66_pred = _3371;
                    frontier_phi_66_pred_1 = _3370;
                    frontier_phi_66_pred_2 = _3369;
                    frontier_phi_66_pred_3 = _3368;
                    frontier_phi_66_pred_4 = _3367;
                    frontier_phi_66_pred_5 = _3366;
                }
                _3176 = frontier_phi_66_pred;
                _3174 = frontier_phi_66_pred_1;
                _3172 = frontier_phi_66_pred_2;
                _3170 = frontier_phi_66_pred_3;
                _3168 = frontier_phi_66_pred_4;
                _3166 = frontier_phi_66_pred_5;
                uint _3317 = _3316 + 1u;
                if (_3317 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3310 = _3166;
                    _3311 = _3168;
                    _3312 = _3170;
                    _3313 = _3172;
                    _3314 = _3174;
                    _3315 = _3176;
                    _3316 = _3317;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3165 = _3166;
            _3167 = _3168;
            _3169 = _3170;
            _3171 = _3172;
            _3173 = _3174;
            _3175 = _3176;
        }
        uvec4 _3179 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3180 = _3179.z;
        uint _3182 = (_3180 >> 8u) & 15u;
        float _3278;
        float _3280;
        float _3282;
        float _3284;
        float _3286;
        float _3288;
        if (((4294967295u << _3182) & _3085) == 0u)
        {
            _3278 = _3165;
            _3280 = _3167;
            _3282 = _3169;
            _3284 = _3171;
            _3286 = _3173;
            _3288 = _3175;
        }
        else
        {
            float _3303 = inversesqrt(dot(vec3(_2163, _2164, _2165), vec3(_2163, _2164, _2165)));
            float _3304 = _3303 * _2163;
            float _3305 = _3303 * _2164;
            float _3306 = _3303 * _2165;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3182 < ((_3180 >> 12u) & 15u))
            {
                float _3279;
                float _3281;
                float _3283;
                float _3285;
                float _3287;
                float _3289;
                float _3417 = _3165;
                float _3418 = _3167;
                float _3419 = _3169;
                float _3420 = _3171;
                float _3421 = _3173;
                float _3422 = _3175;
                uint _3423 = _3182;
                uint _3432;
                bool _3433;
                for (;;)
                {
                    _3432 = texelFetch(g_lightClassification, int((((_3079 << 5u) + (_3065 << 9u)) + (_3423 << 2u)) >> 2u)).x;
                    _3433 = _3432 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3433)
                    {
                        frontier_phi_72_pred = _3422;
                        frontier_phi_72_pred_1 = _3421;
                        frontier_phi_72_pred_2 = _3420;
                        frontier_phi_72_pred_3 = _3419;
                        frontier_phi_72_pred_4 = _3418;
                        frontier_phi_72_pred_5 = _3417;
                    }
                    else
                    {
                        float _3616;
                        float _3617;
                        float _3618;
                        float _3619;
                        float _3620;
                        float _3621;
                        float _3909;
                        float _3910;
                        float _3911;
                        float _3912;
                        float _3913;
                        float _3914;
                        float _3629 = _3417;
                        float _3630 = _3418;
                        float _3631 = _3419;
                        float _3632 = _3420;
                        float _3633 = _3421;
                        float _3634 = _3422;
                        uint _3635 = _3432;
                        uint _3636;
                        vec4 _3661;
                        float _3662;
                        vec4 _3677;
                        vec3 _3689;
                        vec4 _3704;
                        vec4 _3719;
                        float _3765;
                        bool _3766;
                        for (;;)
                        {
                            uint _3646 = ((_3423 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3635));
                            _3636 = (_3635 + 4294967295u) & _3635;
                            uint _3648 = _3646 * 40u;
                            _3661 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3648)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3648 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3648 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3648 + 3u)).x));
                            _3662 = _3661.w;
                            uint _3664 = (_3646 * 40u) + 4u;
                            _3677 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3664)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3664 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3664 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3664 + 3u)).x));
                            uint _3679 = (_3646 * 40u) + 8u;
                            _3689 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3679)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3679 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3679 + 2u)).x));
                            uint _3691 = (_3646 * 40u) + 16u;
                            _3704 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3691)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3691 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3691 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3691 + 3u)).x));
                            uint _3706 = (_3646 * 40u) + 20u;
                            _3719 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3706)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3706 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3706 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3706 + 3u)).x));
                            uint _3721 = (_3646 * 40u) + 24u;
                            vec4 _3734 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3721)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3721 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3721 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3721 + 3u)).x));
                            uint _3740 = (_3646 * 40u) + 28u;
                            vec4 _3753 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3740)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3740 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3740 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3740 + 3u)).x));
                            _3765 = fma(_2165, _3753.z, fma(_2164, _3753.y, _3753.x * _2163)) + _3753.w;
                            _3766 = !((fma(_2165, _3734.z, fma(_2164, _3734.y, _3734.x * _2163)) + _3734.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3766)
                            {
                                float _3793 = _3661.x - _2163;
                                float _3794 = _3661.y - _2164;
                                float _3795 = _3661.z - _2165;
                                float _3796 = dot(vec3(_3793, _3794, _3795), vec3(_3793, _3794, _3795));
                                float _3799 = inversesqrt(_3796);
                                float _3800 = _3799 * _3793;
                                float _3801 = _3799 * _3794;
                                float _3802 = _3799 * _3795;
                                float _3806 = 1.0 - (_3796 / (_3662 * _3662));
                                float _5002 = isnan(0.0) ? _3806 : (isnan(_3806) ? 0.0 : max(_3806, 0.0));
                                float _3807 = isnan(1.0) ? _5002 : (isnan(_5002) ? 1.0 : min(_5002, 1.0));
                                float _3811 = sqrt(_3796) * _3677.w;
                                float _3813 = 1.39999997615814208984375 / (_3811 + 1.39999997615814208984375);
                                float _3814 = _3813 * _3813;
                                float _3817 = ((1.0 - _3814) * dot(vec3(_3800, _3801, _3802), vec3(_1049, _1052, _1055))) + _3814;
                                float _3820 = _3811 * _3811;
                                float _3824 = (fma(_2165, _3704.z, fma(_2164, _3704.y, _3704.x * _2163)) + _3704.w) / _3765;
                                float _3825 = (fma(_2165, _3719.z, fma(_2164, _3719.y, _3719.x * _2163)) + _3719.w) / _3765;
                                float _3829 = 1.0 - dot(vec2(_3824, _3825), vec2(_3824, _3825));
                                float _5018 = isnan(0.0) ? _3829 : (isnan(_3829) ? 0.0 : max(_3829, 0.0));
                                float _3830 = isnan(1.0) ? _5018 : (isnan(_5018) ? 1.0 : min(_5018, 1.0));
                                float _3831 = _3830 * (((isnan(0.0) ? _3817 : (isnan(_3817) ? 0.0 : max(_3817, 0.0))) * _3807) / ((_3820 * 0.699999988079071044921875) + 1.0));
                                float _3843 = exp2(log2(1.0 / ((_3820 * 3.5) + 5.0)) * 0.25);
                                float _3844 = 1.0 - _1109;
                                float _3851 = sqrt(1.0 - ((1.0 - (_3844 * _3844)) * (1.0 - (_3843 * _3843))));
                                float _3852 = _3851 * _3851;
                                float _3853 = _3852 * _3852;
                                float _3854 = _3800 - _3304;
                                float _3855 = _3801 - _3305;
                                float _3856 = _3802 - _3306;
                                float _3860 = inversesqrt(dot(vec3(_3854, _3855, _3856), vec3(_3854, _3855, _3856)));
                                float _3864 = dot(vec3(_1049, _1052, _1055), vec3((-0.0) - _3304, (-0.0) - _3305, (-0.0) - _3306));
                                float _5029 = isnan(0.0) ? _3864 : (isnan(_3864) ? 0.0 : max(_3864, 0.0));
                                float _3867 = isnan(1.0) ? _5029 : (isnan(_5029) ? 1.0 : min(_5029, 1.0));
                                float _3868 = dot(vec3(_1049, _1052, _1055), vec3(_3860 * _3854, _3860 * _3855, _3860 * _3856));
                                float _5040 = isnan(0.0) ? _3868 : (isnan(_3868) ? 0.0 : max(_3868, 0.0));
                                float _3871 = isnan(1.0) ? _5040 : (isnan(_5040) ? 1.0 : min(_5040, 1.0));
                                float _3875 = ((_3871 * _3871) * (_3853 + (-1.0))) + 1.0;
                                float _3876 = _3813 * _3852;
                                float _3877 = _3876 * _3876;
                                float _3883 = ((1.0 - _3877) * dot(vec3(_1049, _1052, _1055), vec3(_3800, _3801, _3802))) + _3877;
                                float _5051 = isnan(0.0) ? _3883 : (isnan(_3883) ? 0.0 : max(_3883, 0.0));
                                float _3884 = isnan(1.0) ? _5051 : (isnan(_5051) ? 1.0 : min(_5051, 1.0));
                                float _3885 = 1.0 - _3852;
                                float _3895 = (0.5 / (((_3884 * ((_3867 * _3885) + _3852)) + 9.9999999392252902907785028219223e-09) + (((_3884 * _3885) + _3852) * _3867))) * _3884;
                                float _5062 = isnan(0.0) ? _3895 : (isnan(_3895) ? 0.0 : max(_3895, 0.0));
                                float _3905 = (_3830 * _3807) * (((_3853 * 3.1415927410125732421875) * (isnan(1.0) ? _5062 : (isnan(_5062) ? 1.0 : min(_5062, 1.0)))) / ((_3875 * _3875) * ((_3820 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3831 * _3677.y;
                                frontier_phi_78_pred_1 = _3831 * _3677.x;
                                frontier_phi_78_pred_2 = _3905 * _3689.z;
                                frontier_phi_78_pred_3 = _3905 * _3689.y;
                                frontier_phi_78_pred_4 = _3905 * _3689.x;
                                frontier_phi_78_pred_5 = _3831 * _3677.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3913 = frontier_phi_78_pred;
                            _3912 = frontier_phi_78_pred_1;
                            _3911 = frontier_phi_78_pred_2;
                            _3910 = frontier_phi_78_pred_3;
                            _3909 = frontier_phi_78_pred_4;
                            _3914 = frontier_phi_78_pred_5;
                            _3619 = _3912 + _3632;
                            _3620 = _3913 + _3633;
                            _3621 = _3914 + _3634;
                            _3616 = _3909 + _3629;
                            _3617 = _3910 + _3630;
                            _3618 = _3911 + _3631;
                            if (_3636 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3629 = _3616;
                                _3630 = _3617;
                                _3631 = _3618;
                                _3632 = _3619;
                                _3633 = _3620;
                                _3634 = _3621;
                                _3635 = _3636;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3621;
                        frontier_phi_72_pred_1 = _3620;
                        frontier_phi_72_pred_2 = _3619;
                        frontier_phi_72_pred_3 = _3618;
                        frontier_phi_72_pred_4 = _3617;
                        frontier_phi_72_pred_5 = _3616;
                    }
                    _3289 = frontier_phi_72_pred;
                    _3287 = frontier_phi_72_pred_1;
                    _3285 = frontier_phi_72_pred_2;
                    _3283 = frontier_phi_72_pred_3;
                    _3281 = frontier_phi_72_pred_4;
                    _3279 = frontier_phi_72_pred_5;
                    uint _3424 = _3423 + 1u;
                    if (_3424 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3417 = _3279;
                        _3418 = _3281;
                        _3419 = _3283;
                        _3420 = _3285;
                        _3421 = _3287;
                        _3422 = _3289;
                        _3423 = _3424;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3289;
                frontier_phi_60_61_ladder_1 = _3287;
                frontier_phi_60_61_ladder_2 = _3283;
                frontier_phi_60_61_ladder_3 = _3281;
                frontier_phi_60_61_ladder_4 = _3279;
                frontier_phi_60_61_ladder_5 = _3285;
            }
            else
            {
                frontier_phi_60_61_ladder = _3175;
                frontier_phi_60_61_ladder_1 = _3173;
                frontier_phi_60_61_ladder_2 = _3169;
                frontier_phi_60_61_ladder_3 = _3167;
                frontier_phi_60_61_ladder_4 = _3165;
                frontier_phi_60_61_ladder_5 = _3171;
            }
            _3278 = frontier_phi_60_61_ladder_4;
            _3280 = frontier_phi_60_61_ladder_3;
            _3282 = frontier_phi_60_61_ladder_2;
            _3284 = frontier_phi_60_61_ladder_5;
            _3286 = frontier_phi_60_61_ladder_1;
            _3288 = frontier_phi_60_61_ladder;
        }
        float _3293 = isnan(1.0) ? _1093 : (isnan(_1093) ? 1.0 : min(_1093, 1.0));
        _3098 = (_3293 * _3284) + _2629;
        _3100 = (_3293 * _3286) + _2631;
        _3102 = (_3293 * _3288) + _2633;
        _3104 = ((_3278 * 0.039999999105930328369140625) * _3293) + _2952;
        _3106 = ((_3280 * 0.039999999105930328369140625) * _3293) + _2954;
        _3108 = ((_3282 * 0.039999999105930328369140625) * _3293) + _2956;
    }
    else
    {
        _3098 = _2629;
        _3100 = _2631;
        _3102 = _2633;
        _3104 = _2952;
        _3106 = _2954;
        _3108 = _2956;
    }
    float _5078 = isnan(0.0) ? _1078 : (isnan(_1078) ? 0.0 : max(_1078, 0.0));
    float _5089 = isnan(0.0) ? _1079 : (isnan(_1079) ? 0.0 : max(_1079, 0.0));
    float _5100 = isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0));
    uint _3128 = _287 + 6u;
    float _3136 = _1030 / cbSceneParam._m0[86u].x;
    float _3137 = _1031 / cbSceneParam._m0[86u].y;
    vec4 _3151 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3136, _3137, (log2((isnan(cbSceneParam._m0[77u].w) ? _965 : (isnan(_965) ? cbSceneParam._m0[77u].w : min(_965, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3153 = _3151.x;
    float _3154 = _3151.y;
    float _3155 = _3151.z;
    float _3156 = _3151.w;
    float _3228;
    float _3230;
    float _3232;
    float _3234;
    if (_965 > cbSceneParam._m0[78u].w)
    {
        float _3190 = isnan(_965) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _965 : min(cbSceneParam._m0[80u].w, _965));
        float _3191 = _3190 / _965;
        float _3202 = _3191 * _1015;
        float _3203 = _1016 * _3191;
        float _3204 = (-0.0) - _3203;
        float _3206 = _3191 * _1017;
        float _3208 = (cbSceneParam._m0[77u].w * _3204) / _3190;
        float _3209 = _3208 + cbSceneParam._m0[79u].w;
        float _3210 = cbSceneParam._m0[79u].w - _3203;
        float _3216 = sqrt(((_3202 * _3202) + (_3203 * _3203)) + (_3206 * _3206));
        float _3219 = (1.0 - (cbSceneParam._m0[77u].w / _3190)) * _3216;
        float _3224 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3226 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3379;
        if (abs((_3204 - _3208) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3379 = ((((_3209 > 0.0) ? exp2(_3224 * _3209) : (2.0 - exp2(_3226 * _3209))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3219;
        }
        else
        {
            float _3339 = 1.0 / cbSceneParam._m0[80u].x;
            float _3340 = isnan(_3210) ? _3209 : (isnan(_3209) ? _3210 : max(_3209, _3210));
            float _3341 = isnan(_3210) ? _3209 : (isnan(_3209) ? _3210 : min(_3209, _3210));
            float _3350 = isnan(0.0) ? _3340 : (isnan(_3340) ? 0.0 : min(_3340, 0.0));
            float _3351 = isnan(0.0) ? _3341 : (isnan(_3341) ? 0.0 : min(_3341, 0.0));
            _3379 = ((abs(_3216 / _3204) * cbSceneParam._m0[80u].y) * ((((_3350 - _3351) * 2.0) - ((exp2(_3224 * (isnan(0.0) ? _3340 : (isnan(_3340) ? 0.0 : max(_3340, 0.0)))) - exp2(_3224 * (isnan(0.0) ? _3341 : (isnan(_3341) ? 0.0 : max(_3341, 0.0))))) * _3339)) - ((exp2(_3226 * _3350) - exp2(_3226 * _3351)) * _3339))) + (_3219 * cbSceneParam._m0[80u].z);
        }
        vec4 _3381 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3136, _3137, 1.0), 0.0);
        float _3390 = exp2((_3379 * (-1.44269502162933349609375)) * (1.0 - _3381.w));
        float _3391 = log2(_3390);
        float _3407 = log2(_3156);
        _3228 = (exp2(_3407 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3391 * cbSceneParam._m0[78u].x)) * _3381.x) / cbSceneParam._m0[78u].x)) + _3153;
        _3230 = (exp2(_3407 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3391 * cbSceneParam._m0[78u].y)) * _3381.y) / cbSceneParam._m0[78u].y)) + _3154;
        _3232 = (exp2(_3407 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3391 * cbSceneParam._m0[78u].z)) * _3381.z) / cbSceneParam._m0[78u].z)) + _3155;
        _3234 = _3390 * _3156;
    }
    else
    {
        _3228 = _3153;
        _3230 = _3154;
        _3232 = _3155;
        _3234 = _3156;
    }
    float _3246 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3247 = _3246 == 3.0;
    float _3248 = log2(_3234);
    float _3255 = exp2(_3248 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5078 : (isnan(_5078) ? 1.0 : min(_5078, 1.0))) * (_3098 + ((isnan(0.0) ? _1818 : (isnan(_1818) ? 0.0 : max(_1818, 0.0))) * _1093))) + ((_3104 + ((isnan(0.0) ? _2110 : (isnan(_2110) ? 0.0 : max(_2110, 0.0))) * _1897)) * cbPerFrame._m0[3u].x));
    float _3256 = exp2(_3248 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5089 : (isnan(_5089) ? 1.0 : min(_5089, 1.0))) * (_3100 + ((isnan(0.0) ? _1821 : (isnan(_1821) ? 0.0 : max(_1821, 0.0))) * _1093))) + ((_3106 + ((isnan(0.0) ? _2113 : (isnan(_2113) ? 0.0 : max(_2113, 0.0))) * _1897)) * cbPerFrame._m0[3u].x));
    float _3257 = exp2(_3248 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5100 : (isnan(_5100) ? 1.0 : min(_5100, 1.0))) * (_3102 + ((isnan(0.0) ? _1824 : (isnan(_1824) ? 0.0 : max(_1824, 0.0))) * _1093))) + ((_3108 + ((isnan(0.0) ? _2116 : (isnan(_2116) ? 0.0 : max(_2116, 0.0))) * _1897)) * cbPerFrame._m0[3u].x));
    float _3266 = (_3246 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3266 * (_3247 ? _3255 : (_3255 + (cbSceneParam._m0[72u].w * _3228)));
    SV_Target.y = _3266 * (_3247 ? _3256 : (_3256 + (cbSceneParam._m0[72u].w * _3230)));
    SV_Target.z = _3266 * (_3247 ? _3257 : (_3257 + (cbSceneParam._m0[72u].w * _3232)));
    SV_Target.w = cbInstanceData._m0[_3128].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3128].w;
}


