#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1516;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _231 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _232 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _233 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _239 = inversesqrt(dot(vec3(_231, _232, _233), vec3(_231, _232, _233)));
    float _240 = _239 * _231;
    float _241 = _239 * _232;
    float _242 = _239 * _233;
    float _246 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _247 = _246 * NORMAL.x;
    float _248 = _246 * NORMAL.y;
    float _249 = _246 * NORMAL.z;
    float _253 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _254 = _253 * TANGENT.x;
    float _255 = _253 * TANGENT.y;
    float _256 = _253 * TANGENT.z;
    uint _259 = uint(roundEven(NORMAL.w)) * 13u;
    uint _264 = _259 + 1u;
    uint _268 = _259 + 2u;
    float _277 = sqrt(((cbInstanceData._m0[_264].x * cbInstanceData._m0[_264].x) + (cbInstanceData._m0[_259].x * cbInstanceData._m0[_259].x)) + (cbInstanceData._m0[_268].x * cbInstanceData._m0[_268].x));
    float _278 = _277 * TEXCOORD.z;
    float _279 = _277 * TEXCOORD.w;
    vec4 _298 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _322 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _327 = _322.x * cbMtdParam._m0[11u].x;
    float _328 = _322.y * cbMtdParam._m0[11u].y;
    float _329 = _322.z * cbMtdParam._m0[11u].z;
    vec4 _348 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _278) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _279) + cbTextureTilingScale._m0[5u].w));
    vec4 _367 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _407 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _409 = _407.x;
    float _421 = dot(vec4(_409, _407.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _438 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _367.x) * 2.0) - ((((_409 - _421) * cbMtdParam._m0[24u].z) + _421) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3817 = isnan(0.0) ? _438 : (isnan(_438) ? 0.0 : max(_438, 0.0));
    float _439 = isnan(1.0) ? _3817 : (isnan(_3817) ? 1.0 : min(_3817, 1.0));
    float _446 = (_439 * ((_348.x * cbMtdParam._m0[12u].x) - _327)) + _327;
    float _447 = (_439 * ((_348.y * cbMtdParam._m0[12u].y) - _328)) + _328;
    float _448 = (_439 * ((_348.z * cbMtdParam._m0[12u].z) - _329)) + _329;
    vec4 _465 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _278) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _279) + cbTextureTilingScale._m0[3u].w));
    vec4 _485 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _487 = _485.x;
    float _497 = dot(vec4(_487, _485.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _511 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _367.y) * 2.0) - ((((_487 - _497) * cbMtdParam._m0[24u].z) + _497) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3828 = isnan(0.0) ? _511 : (isnan(_511) ? 0.0 : max(_511, 0.0));
    float _512 = isnan(1.0) ? _3828 : (isnan(_3828) ? 1.0 : min(_3828, 1.0));
    float _519 = (_512 * ((_465.x * cbMtdParam._m0[13u].x) - _446)) + _446;
    float _520 = (_512 * ((_465.y * cbMtdParam._m0[13u].y) - _447)) + _447;
    float _521 = (_512 * ((_465.z * cbMtdParam._m0[13u].z) - _448)) + _448;
    vec4 _539 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _278) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _279) + cbTextureTilingScale._m0[24u].w));
    vec4 _556 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _558 = _556.x;
    float _568 = dot(vec4(_558, _556.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _580 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _367.z) * 2.0) - ((((_558 - _568) * cbMtdParam._m0[24u].z) + _568) * cbMtdParam._m0[20u].z))) + 1.0;
    float _3839 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
    float _581 = isnan(1.0) ? _3839 : (isnan(_3839) ? 1.0 : min(_3839, 1.0));
    float _594 = ((cbMtdParam._m0[9u].x * 4.55000019073486328125) * _298.x) * ((_581 * ((_539.x * cbMtdParam._m0[14u].x) - _519)) + _519);
    float _597 = ((cbMtdParam._m0[9u].y * 4.55000019073486328125) * _298.y) * ((_581 * ((_539.y * cbMtdParam._m0[14u].y) - _520)) + _520);
    float _600 = ((cbMtdParam._m0[9u].z * 4.55000019073486328125) * _298.z) * ((_581 * ((_539.z * cbMtdParam._m0[14u].z) - _521)) + _521);
    vec4 _618 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _278) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _279) + cbTextureTilingScale._m0[14u].w));
    vec4 _638 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _278) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _279) + cbTextureTilingScale._m0[4u].w));
    vec4 _655 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _657 = _655.x;
    float _658 = _655.y;
    float _659 = _655.z;
    float _666 = ((_638.x - _657) * _439) + _657;
    float _667 = ((_638.y - _658) * _439) + _658;
    float _668 = ((_638.z - _659) * _439) + _659;
    vec4 _680 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _278) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _279) + cbTextureTilingScale._m0[2u].w));
    float _691 = ((_680.x - _666) * _512) + _666;
    float _692 = ((_680.y - _667) * _512) + _667;
    float _693 = ((_680.z - _668) * _512) + _668;
    vec4 _705 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _278) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _279) + cbTextureTilingScale._m0[23u].w));
    float _718 = ((_705.z - _693) * _581) + _693;
    float _721 = ((((_705.x - _691) * _581) + _691) * 2.0) + (-1.0);
    float _723 = ((((_705.y - _692) * _581) + _692) * 2.0) + (-1.0);
    float _724 = dot(vec2(_721, _723), vec2(_721, _723));
    float _3850 = isnan(0.0) ? _724 : (isnan(_724) ? 0.0 : max(_724, 0.0));
    float _729 = sqrt(1.0 - (isnan(1.0) ? _3850 : (isnan(_3850) ? 1.0 : min(_3850, 1.0))));
    vec4 _743 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _755 = (((_743.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _721;
    float _756 = (((_743.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _723;
    float _759 = fma(_729, _247, fma(_756, _254, _755 * _240));
    float _762 = fma(_729, _248, fma(_756, _255, _755 * _241));
    float _765 = fma(_729, _249, fma(_756, _256, _755 * _242));
    float _769 = inversesqrt(dot(vec3(_759, _762, _765), vec3(_759, _762, _765)));
    vec4 _796 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _278) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _279) + cbTextureTilingScale._m0[11u].w));
    float _798 = _796.x;
    float _799 = 1.0 - _798;
    float _805 = (cbMtdParam._m0[19u].x + dot(vec4(_769 * _759, _769 * _762, _769 * _765, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_798 - _799) * cbMtdParam._m0[24u].w) + _799) * cbMtdParam._m0[21u].z);
    float _3861 = isnan(0.0) ? _805 : (isnan(_805) ? 0.0 : max(_805, 0.0));
    float _806 = isnan(1.0) ? _3861 : (isnan(_3861) ? 1.0 : min(_3861, 1.0));
    float _808 = (-0.0) - cbMtdParam._m0[24u].x;
    float _810 = isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0));
    float _811 = isnan(1.0) ? _810 : (isnan(_810) ? 1.0 : min(_810, 1.0));
    float _818 = _806 - ((_806 * TEXCOORD_8.x) * _811);
    float _819 = _806 - ((_806 * TEXCOORD_8.y) * _811);
    float _820 = _806 - ((_806 * TEXCOORD_8.z) * _811);
    float _827 = (_818 * ((_618.x * cbMtdParam._m0[18u].x) - _594)) + _594;
    float _828 = (_819 * ((_618.y * cbMtdParam._m0[18u].y) - _597)) + _597;
    float _829 = (_820 * ((_618.z * cbMtdParam._m0[18u].z) - _600)) + _600;
    vec4 _841 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _278) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _279) + cbTextureTilingScale._m0[19u].w));
    float _843 = _841.x;
    float _844 = 1.0 - _843;
    float _872 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_843 - _844) * cbMtdParam._m0[24u].y) + _844) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3882 = isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : max(_872, 0.0));
    float _873 = isnan(1.0) ? _3882 : (isnan(_3882) ? 1.0 : min(_3882, 1.0));
    float _881 = ((((cbMtdParam._m0[10u].x - _827) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _873) + _827;
    float _882 = ((((cbMtdParam._m0[10u].y - _828) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _873) + _828;
    float _883 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _829)) * _873) + _829;
    float _887 = (cbMtdParam._m0[19u].w * (_743.z - _718)) + _718;
    vec4 _901 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _278) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _279) + cbTextureTilingScale._m0[15u].w));
    float _908 = (_901.x * 2.0) + (-1.0);
    float _909 = (_901.y * 2.0) + (-1.0);
    float _910 = dot(vec2(_908, _909), vec2(_908, _909));
    float _3893 = isnan(0.0) ? _910 : (isnan(_910) ? 0.0 : max(_910, 0.0));
    float _918 = ((_901.z - _887) * _818) + _887;
    float _921 = ((cbMtdParam._m0[23u].y - _918) * _873) + _918;
    vec4 _940 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _278) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _279) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _946 = (_940.x * 2.0) + (-1.0);
    float _947 = (_940.y * 2.0) + (-1.0);
    float _948 = dot(vec2(_946, _947), vec2(_946, _947));
    float _3904 = isnan(0.0) ? _948 : (isnan(_948) ? 0.0 : max(_948, 0.0));
    float _963 = ((sqrt(1.0 - (isnan(1.0) ? _3893 : (isnan(_3893) ? 1.0 : min(_3893, 1.0)))) - _729) * _820) + _729;
    float _966 = (((_908 - _755) * _818) + _755) + (cbMtdParam._m0[21u].x * _755);
    float _967 = (((_909 - _756) * _819) + _756) + (cbMtdParam._m0[21u].x * _756);
    float _978 = (((_946 - _966) + (_966 * cbMtdParam._m0[22u].z)) * _873) + _966;
    float _979 = (((_947 - _967) + (_967 * cbMtdParam._m0[22u].z)) * _873) + _967;
    float _980 = (_873 * (sqrt(1.0 - (isnan(1.0) ? _3904 : (isnan(_3904) ? 1.0 : min(_3904, 1.0)))) - _963)) + _963;
    float _982 = cbMtdParam._m0[22u].x + _743.w;
    float _985 = fma(_980, _247, fma(_979, _254, _978 * _240));
    float _988 = fma(_980, _248, fma(_979, _255, _978 * _241));
    float _991 = fma(_980, _249, fma(_979, _256, _978 * _242));
    float _995 = inversesqrt(dot(vec3(_985, _988, _991), vec3(_985, _988, _991)));
    float _996 = _995 * _985;
    float _997 = _995 * _988;
    float _998 = _995 * _991;
    float _3915 = isnan(0.0) ? _921 : (isnan(_921) ? 0.0 : max(_921, 0.0));
    float _999 = isnan(1.0) ? _3915 : (isnan(_3915) ? 1.0 : min(_3915, 1.0));
    float _3926 = isnan(0.0) ? _982 : (isnan(_982) ? 0.0 : max(_982, 0.0));
    float _3937 = isnan(0.0) ? _881 : (isnan(_881) ? 0.0 : max(_881, 0.0));
    float _3948 = isnan(0.0) ? _882 : (isnan(_882) ? 0.0 : max(_882, 0.0));
    float _3959 = isnan(0.0) ? _883 : (isnan(_883) ? 0.0 : max(_883, 0.0));
    float _1017 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1057 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1067 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1057);
    float _1068 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1057);
    float _1069 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1057);
    float _1073 = inversesqrt(dot(vec3(_1067, _1068, _1069), vec3(_1067, _1068, _1069)));
    float _1074 = _1067 * _1073;
    float _1075 = _1068 * _1073;
    float _1076 = _1069 * _1073;
    float _1082 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1083 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1101 = fma(_998, cbSceneParam._m0[5u].z, fma(_997, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _996));
    float _1104 = fma(_998, cbSceneParam._m0[6u].z, fma(_997, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _996));
    float _1107 = fma(_998, cbSceneParam._m0[7u].z, fma(_997, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _996));
    uint _1121 = (_259 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1127 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3937 : (isnan(_3937) ? 1.0 : min(_3937, 1.0)))) * cbInstanceData._m0[_1121].x;
    float _1128 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3948 : (isnan(_3948) ? 1.0 : min(_3948, 1.0)))) * cbInstanceData._m0[_1121].y;
    float _1129 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3959 : (isnan(_3959) ? 1.0 : min(_3959, 1.0)))) * cbInstanceData._m0[_1121].z;
    float _3970 = isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0));
    float _1130 = isnan(1.0) ? _3970 : (isnan(_3970) ? 1.0 : min(_3970, 1.0));
    float _3981 = isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0));
    float _1131 = isnan(1.0) ? _3981 : (isnan(_3981) ? 1.0 : min(_3981, 1.0));
    float _3992 = isnan(0.0) ? _1129 : (isnan(_1129) ? 0.0 : max(_1129, 0.0));
    float _1132 = isnan(1.0) ? _3992 : (isnan(_3992) ? 1.0 : min(_3992, 1.0));
    vec4 _1141 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1082, cbSceneParam._m0[86u].y * _1083));
    float _1145 = ((isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0))) * TEXCOORD_5.w) * _1141.x;
    float _1146 = dot(vec3(_996, _997, _998), vec3(_1074, _1075, _1076));
    float _1149 = _1146 * 2.0;
    float _1153 = (_1149 * _996) - _1074;
    float _1154 = (_1149 * _997) - _1075;
    float _1155 = (_1149 * _998) - _1076;
    float _1159 = abs(dot(vec3(_1074, _1075, _1076), vec3(_996, _997, _998)));
    float _4003 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
    float _1161 = sqrt(_999);
    float _1174 = exp2((_1161 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4003 : (isnan(_4003) ? 1.0 : min(_4003, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1161 * 3.0));
    float _1206 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1210 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1214 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1515;
    float _1517;
    float _1518;
    float _1519;
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    float _1526;
    float _1527;
    float _1528;
    float _1529;
    float _1530;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1240 = fma(_1214, cbModelParam._m0[26u].z, fma(_1210, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1206));
        float _1244 = fma(_1214, cbModelParam._m0[27u].z, fma(_1210, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1206));
        float _1248 = fma(_1214, cbModelParam._m0[28u].z, fma(_1210, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1206));
        float _1273 = _1206 + _996;
        float _1274 = _1210 + _997;
        float _1275 = _1214 + _998;
        float _1285 = fma(_1275, cbModelParam._m0[26u].z, fma(_1274, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1273)) - _1240;
        float _1286 = fma(_1275, cbModelParam._m0[27u].z, fma(_1274, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1273)) - _1244;
        float _1287 = fma(_1275, cbModelParam._m0[28u].z, fma(_1274, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1273)) - _1248;
        float _1291 = inversesqrt(dot(vec3(_1285, _1286, _1287), vec3(_1285, _1286, _1287)));
        float _1304 = ((_1291 * _1285) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1240 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1305 = ((_1291 * _1286) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1244 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1306 = ((_1291 * _1287) / cbModelParam._m0[34u].z) + ((((((_1248 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1309 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1304, _1305, _1306), 0.0);
        vec4 _1316 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1304, _1305, _1306), 0.0);
        vec4 _1323 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1304, _1305, _1306), 0.0);
        vec4 _1330 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1304, _1305, _1306), 0.0);
        float _1343 = exp2((_1309.w + (-0.5)) * 20.0) * 2.0;
        float _1344 = _1343 * (_1309.x + (-0.5));
        float _1345 = _1343 * (_1309.y + (-0.5));
        float _1346 = _1343 * (_1309.z + (-0.5));
        float _1353 = exp2((_1316.w + (-0.5)) * 20.0) * 2.0;
        float _1354 = _1353 * (_1316.x + (-0.5));
        float _1355 = _1353 * (_1316.y + (-0.5));
        float _1356 = _1353 * (_1316.z + (-0.5));
        float _1363 = exp2((_1323.w + (-0.5)) * 20.0) * 2.0;
        float _1364 = _1363 * (_1323.x + (-0.5));
        float _1365 = _1363 * (_1323.y + (-0.5));
        float _1366 = _1363 * (_1323.z + (-0.5));
        float _1373 = exp2((_1330.w + (-0.5)) * 20.0) * 2.0;
        float _1374 = _1373 * (_1330.x + (-0.5));
        float _1375 = _1373 * (_1330.y + (-0.5));
        float _1376 = _1373 * (_1330.z + (-0.5));
        float _1377 = isnan(0.0) ? _1374 : (isnan(_1374) ? 0.0 : max(_1374, 0.0));
        float _1378 = isnan(0.0) ? _1375 : (isnan(_1375) ? 0.0 : max(_1375, 0.0));
        float _1379 = isnan(0.0) ? _1376 : (isnan(_1376) ? 0.0 : max(_1376, 0.0));
        float _1380 = _1344 * 0.5;
        float _1381 = _1354 * 0.5;
        float _1382 = _1364 * 0.5;
        float _1383 = dot(vec3(_1380, _1381, _1382), vec3(_1380, _1381, _1382));
        float _1388 = (_1383 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1383);
        float _1397 = (dot(vec3(_996, _997, _998), vec3(_1388 * _1380, _1388 * _1381, _1388 * _1382)) + 1.0) * 0.5;
        float _4029 = isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0));
        float _1407 = sqrt(((_1381 * _1381) + (_1380 * _1380)) + (_1382 * _1382)) / (_1377 + 9.9999997473787516355514526367188e-06);
        float _4040 = isnan(0.0) ? _1407 : (isnan(_1407) ? 0.0 : max(_1407, 0.0));
        float _1408 = isnan(1.0) ? _4040 : (isnan(_4040) ? 1.0 : min(_4040, 1.0));
        float _1409 = _1408 * 2.0;
        float _1413 = (1.0 - _1408) / (_1408 + 1.0);
        float _4051 = isnan(0.0) ? _1413 : (isnan(_1413) ? 0.0 : max(_1413, 0.0));
        float _1414 = isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0));
        float _1423 = ((((1.0 - _1414) * (_1409 + 2.0)) * exp2(log2(isnan(1.0) ? _4029 : (isnan(_4029) ? 1.0 : min(_4029, 1.0))) * (_1409 + 1.0))) + _1414) * _1377;
        float _1424 = _1345 * 0.5;
        float _1425 = _1355 * 0.5;
        float _1426 = _1365 * 0.5;
        float _1427 = dot(vec3(_1424, _1425, _1426), vec3(_1424, _1425, _1426));
        float _1432 = (_1427 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1427);
        float _1440 = (dot(vec3(_996, _997, _998), vec3(_1432 * _1424, _1432 * _1425, _1432 * _1426)) + 1.0) * 0.5;
        float _4062 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
        float _1449 = sqrt(((_1425 * _1425) + (_1424 * _1424)) + (_1426 * _1426)) / (_1378 + 9.9999997473787516355514526367188e-06);
        float _4073 = isnan(0.0) ? _1449 : (isnan(_1449) ? 0.0 : max(_1449, 0.0));
        float _1450 = isnan(1.0) ? _4073 : (isnan(_4073) ? 1.0 : min(_4073, 1.0));
        float _1451 = _1450 * 2.0;
        float _1455 = (1.0 - _1450) / (_1450 + 1.0);
        float _4084 = isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0));
        float _1456 = isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0));
        float _1465 = ((((1.0 - _1456) * (_1451 + 2.0)) * exp2(log2(isnan(1.0) ? _4062 : (isnan(_4062) ? 1.0 : min(_4062, 1.0))) * (_1451 + 1.0))) + _1456) * _1378;
        float _1466 = _1346 * 0.5;
        float _1467 = _1356 * 0.5;
        float _1468 = _1366 * 0.5;
        float _1469 = dot(vec3(_1466, _1467, _1468), vec3(_1466, _1467, _1468));
        float _1474 = (_1469 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1469);
        float _1482 = (dot(vec3(_996, _997, _998), vec3(_1474 * _1466, _1474 * _1467, _1474 * _1468)) + 1.0) * 0.5;
        float _4095 = isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0));
        float _1491 = sqrt(((_1467 * _1467) + (_1466 * _1466)) + (_1468 * _1468)) / (_1379 + 9.9999997473787516355514526367188e-06);
        float _4106 = isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0));
        float _1492 = isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0));
        float _1493 = _1492 * 2.0;
        float _1497 = (1.0 - _1492) / (_1492 + 1.0);
        float _4117 = isnan(0.0) ? _1497 : (isnan(_1497) ? 0.0 : max(_1497, 0.0));
        float _1498 = isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0));
        float _1507 = ((((1.0 - _1498) * (_1493 + 2.0)) * exp2(log2(isnan(1.0) ? _4095 : (isnan(_4095) ? 1.0 : min(_4095, 1.0))) * (_1493 + 1.0))) + _1498) * _1379;
        _1515 = _1346;
        _1517 = _1345;
        _1518 = _1344;
        _1519 = _1356;
        _1520 = _1355;
        _1521 = _1354;
        _1522 = _1366;
        _1523 = _1365;
        _1524 = _1364;
        _1525 = _1379;
        _1526 = _1378;
        _1527 = _1377;
        _1528 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1423 : (isnan(_1423) ? 0.0 : max(_1423, 0.0)));
        _1529 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1465 : (isnan(_1465) ? 0.0 : max(_1465, 0.0)));
        _1530 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1507 : (isnan(_1507) ? 0.0 : max(_1507, 0.0)));
    }
    else
    {
        _1515 = _1516;
        _1517 = _1516;
        _1518 = _1516;
        _1519 = _1516;
        _1520 = _1516;
        _1521 = _1516;
        _1522 = _1516;
        _1523 = _1516;
        _1524 = _1516;
        _1525 = _1516;
        _1526 = _1516;
        _1527 = _1516;
        _1528 = 0.0;
        _1529 = 0.0;
        _1530 = 0.0;
    }
    float _1822;
    float _1823;
    float _1824;
    float _1825;
    float _1826;
    float _1827;
    float _1828;
    float _1829;
    float _1830;
    float _1831;
    float _1832;
    float _1833;
    float _1834;
    float _1835;
    float _1836;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1553 = fma(_1214, cbModelParam._m0[30u].z, fma(_1210, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1206));
        float _1557 = fma(_1214, cbModelParam._m0[31u].z, fma(_1210, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1206));
        float _1561 = fma(_1214, cbModelParam._m0[32u].z, fma(_1210, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1206));
        float _1584 = _1206 + _996;
        float _1585 = _1210 + _997;
        float _1586 = _1214 + _998;
        float _1596 = fma(_1586, cbModelParam._m0[30u].z, fma(_1585, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1584)) - _1553;
        float _1597 = fma(_1586, cbModelParam._m0[31u].z, fma(_1585, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1584)) - _1557;
        float _1598 = fma(_1586, cbModelParam._m0[32u].z, fma(_1585, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1584)) - _1561;
        float _1602 = inversesqrt(dot(vec3(_1596, _1597, _1598), vec3(_1596, _1597, _1598)));
        float _1615 = ((_1602 * _1596) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1553 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1616 = ((_1602 * _1597) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1557 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1617 = ((_1602 * _1598) / cbModelParam._m0[35u].z) + ((((((_1561 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1619 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1615, _1616, _1617), 0.0);
        vec4 _1626 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1615, _1616, _1617), 0.0);
        vec4 _1633 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1615, _1616, _1617), 0.0);
        vec4 _1640 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1615, _1616, _1617), 0.0);
        float _1652 = exp2((_1619.w + (-0.5)) * 20.0) * 2.0;
        float _1653 = _1652 * (_1619.x + (-0.5));
        float _1654 = _1652 * (_1619.y + (-0.5));
        float _1655 = _1652 * (_1619.z + (-0.5));
        float _1662 = exp2((_1626.w + (-0.5)) * 20.0) * 2.0;
        float _1663 = _1662 * (_1626.x + (-0.5));
        float _1664 = _1662 * (_1626.y + (-0.5));
        float _1665 = _1662 * (_1626.z + (-0.5));
        float _1672 = exp2((_1633.w + (-0.5)) * 20.0) * 2.0;
        float _1673 = _1672 * (_1633.x + (-0.5));
        float _1674 = _1672 * (_1633.y + (-0.5));
        float _1675 = _1672 * (_1633.z + (-0.5));
        float _1682 = exp2((_1640.w + (-0.5)) * 20.0) * 2.0;
        float _1683 = _1682 * (_1640.x + (-0.5));
        float _1684 = _1682 * (_1640.y + (-0.5));
        float _1685 = _1682 * (_1640.z + (-0.5));
        float _1686 = isnan(0.0) ? _1683 : (isnan(_1683) ? 0.0 : max(_1683, 0.0));
        float _1687 = isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0));
        float _1688 = isnan(0.0) ? _1685 : (isnan(_1685) ? 0.0 : max(_1685, 0.0));
        float _1689 = _1653 * 0.5;
        float _1690 = _1663 * 0.5;
        float _1691 = _1673 * 0.5;
        float _1692 = dot(vec3(_1689, _1690, _1691), vec3(_1689, _1690, _1691));
        float _1697 = (_1692 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1692);
        float _1705 = (dot(vec3(_996, _997, _998), vec3(_1697 * _1689, _1697 * _1690, _1697 * _1691)) + 1.0) * 0.5;
        float _4158 = isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0));
        float _1714 = sqrt(((_1690 * _1690) + (_1689 * _1689)) + (_1691 * _1691)) / (_1686 + 9.9999997473787516355514526367188e-06);
        float _4169 = isnan(0.0) ? _1714 : (isnan(_1714) ? 0.0 : max(_1714, 0.0));
        float _1715 = isnan(1.0) ? _4169 : (isnan(_4169) ? 1.0 : min(_4169, 1.0));
        float _1716 = _1715 * 2.0;
        float _1720 = (1.0 - _1715) / (_1715 + 1.0);
        float _4180 = isnan(0.0) ? _1720 : (isnan(_1720) ? 0.0 : max(_1720, 0.0));
        float _1721 = isnan(1.0) ? _4180 : (isnan(_4180) ? 1.0 : min(_4180, 1.0));
        float _1730 = ((((1.0 - _1721) * (_1716 + 2.0)) * exp2(log2(isnan(1.0) ? _4158 : (isnan(_4158) ? 1.0 : min(_4158, 1.0))) * (_1716 + 1.0))) + _1721) * _1686;
        float _1731 = _1654 * 0.5;
        float _1732 = _1664 * 0.5;
        float _1733 = _1674 * 0.5;
        float _1734 = dot(vec3(_1731, _1732, _1733), vec3(_1731, _1732, _1733));
        float _1739 = (_1734 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1734);
        float _1747 = (dot(vec3(_996, _997, _998), vec3(_1739 * _1731, _1739 * _1732, _1739 * _1733)) + 1.0) * 0.5;
        float _4191 = isnan(0.0) ? _1747 : (isnan(_1747) ? 0.0 : max(_1747, 0.0));
        float _1756 = sqrt(((_1732 * _1732) + (_1731 * _1731)) + (_1733 * _1733)) / (_1687 + 9.9999997473787516355514526367188e-06);
        float _4202 = isnan(0.0) ? _1756 : (isnan(_1756) ? 0.0 : max(_1756, 0.0));
        float _1757 = isnan(1.0) ? _4202 : (isnan(_4202) ? 1.0 : min(_4202, 1.0));
        float _1758 = _1757 * 2.0;
        float _1762 = (1.0 - _1757) / (_1757 + 1.0);
        float _4213 = isnan(0.0) ? _1762 : (isnan(_1762) ? 0.0 : max(_1762, 0.0));
        float _1763 = isnan(1.0) ? _4213 : (isnan(_4213) ? 1.0 : min(_4213, 1.0));
        float _1772 = ((((1.0 - _1763) * (_1758 + 2.0)) * exp2(log2(isnan(1.0) ? _4191 : (isnan(_4191) ? 1.0 : min(_4191, 1.0))) * (_1758 + 1.0))) + _1763) * _1687;
        float _1773 = _1655 * 0.5;
        float _1774 = _1665 * 0.5;
        float _1775 = _1675 * 0.5;
        float _1776 = dot(vec3(_1773, _1774, _1775), vec3(_1773, _1774, _1775));
        float _1781 = (_1776 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1776);
        float _1789 = (dot(vec3(_996, _997, _998), vec3(_1781 * _1773, _1781 * _1774, _1781 * _1775)) + 1.0) * 0.5;
        float _4224 = isnan(0.0) ? _1789 : (isnan(_1789) ? 0.0 : max(_1789, 0.0));
        float _1798 = sqrt(((_1774 * _1774) + (_1773 * _1773)) + (_1775 * _1775)) / (_1688 + 9.9999997473787516355514526367188e-06);
        float _4235 = isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0));
        float _1799 = isnan(1.0) ? _4235 : (isnan(_4235) ? 1.0 : min(_4235, 1.0));
        float _1800 = _1799 * 2.0;
        float _1804 = (1.0 - _1799) / (_1799 + 1.0);
        float _4246 = isnan(0.0) ? _1804 : (isnan(_1804) ? 0.0 : max(_1804, 0.0));
        float _1805 = isnan(1.0) ? _4246 : (isnan(_4246) ? 1.0 : min(_4246, 1.0));
        float _1814 = ((((1.0 - _1805) * (_1800 + 2.0)) * exp2(log2(isnan(1.0) ? _4224 : (isnan(_4224) ? 1.0 : min(_4224, 1.0))) * (_1800 + 1.0))) + _1805) * _1688;
        _1822 = _1655;
        _1823 = _1654;
        _1824 = _1653;
        _1825 = _1665;
        _1826 = _1664;
        _1827 = _1663;
        _1828 = _1675;
        _1829 = _1674;
        _1830 = _1673;
        _1831 = _1688;
        _1832 = _1687;
        _1833 = _1686;
        _1834 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1730 : (isnan(_1730) ? 0.0 : max(_1730, 0.0)));
        _1835 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1772 : (isnan(_1772) ? 0.0 : max(_1772, 0.0)));
        _1836 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1814 : (isnan(_1814) ? 0.0 : max(_1814, 0.0)));
    }
    else
    {
        _1822 = _1516;
        _1823 = _1516;
        _1824 = _1516;
        _1825 = _1516;
        _1826 = _1516;
        _1827 = _1516;
        _1828 = _1516;
        _1829 = _1516;
        _1830 = _1516;
        _1831 = _1516;
        _1832 = _1516;
        _1833 = _1516;
        _1834 = 0.0;
        _1835 = 0.0;
        _1836 = 0.0;
    }
    float _1846 = (cbModelParam._m0[1u].x * (_1834 - _1528)) + _1528;
    float _1847 = (cbModelParam._m0[1u].x * (_1835 - _1529)) + _1529;
    float _1848 = (cbModelParam._m0[1u].x * (_1836 - _1530)) + _1530;
    float _1869 = fma(_1848, cbSceneParam._m0[89u].z, fma(_1847, cbSceneParam._m0[89u].y, _1846 * cbSceneParam._m0[89u].x));
    float _1872 = fma(_1848, cbSceneParam._m0[90u].z, fma(_1847, cbSceneParam._m0[90u].y, _1846 * cbSceneParam._m0[90u].x));
    float _1875 = fma(_1848, cbSceneParam._m0[91u].z, fma(_1847, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1846));
    float _1890 = _1153 * 0.5;
    float _1891 = _1154 * 0.5;
    float _1892 = _1155 * 0.5;
    float _1893 = dot(vec4(_1890, _1891, _1892, 1.0), vec4(_1824, _1827, _1830, _1833));
    float _1896 = dot(vec4(_1890, _1891, _1892, 1.0), vec4(_1823, _1826, _1829, _1832));
    float _1899 = dot(vec4(_1890, _1891, _1892, 1.0), vec4(_1822, _1825, _1828, _1831));
    float _1933;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1906 = dot(vec4(_1890, _1891, _1892, 1.0), vec4(_1515, _1519, _1522, _1525));
        float _1910 = dot(vec4(_1890, _1891, _1892, 1.0), vec4(_1517, _1520, _1523, _1526));
        float _1914 = dot(vec4(_1890, _1891, _1892, 1.0), vec4(_1518, _1521, _1524, _1527));
        float _1921 = dot(vec4(cbModelParam._m0[39u]), vec4(_1890, _1891, _1892, 1.0));
        _1933 = dot(vec3(isnan(0.0) ? _1914 : (isnan(_1914) ? 0.0 : max(_1914, 0.0)), isnan(0.0) ? _1910 : (isnan(_1910) ? 0.0 : max(_1910, 0.0)), isnan(0.0) ? _1906 : (isnan(_1906) ? 0.0 : max(_1906, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1921) ? 0.0 : (isnan(0.0) ? _1921 : max(0.0, _1921))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1933 = 1.0;
    }
    float _1944;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1935 = dot(vec4(cbModelParam._m0[40u]), vec4(_1890, _1891, _1892, 1.0));
        _1944 = dot(vec3(isnan(0.0) ? _1893 : (isnan(_1893) ? 0.0 : max(_1893, 0.0)), isnan(0.0) ? _1896 : (isnan(_1896) ? 0.0 : max(_1896, 0.0)), isnan(0.0) ? _1899 : (isnan(_1899) ? 0.0 : max(_1899, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1935) ? 0.0 : (isnan(0.0) ? _1935 : max(0.0, _1935))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1944 = 1.0;
    }
    float _1948 = (_1944 * cbModelParam._m0[1u].x) + (_1933 * (1.0 - cbModelParam._m0[1u].x));
    float _1958 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _999);
    float _1959 = isnan(_1958) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1958 : min(cbModelParam._m0[25u].z, _1958));
    float _2039;
    float _2041;
    float _2043;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2006 = fma(_1214, cbModelParam._m0[13u].z, fma(_1210, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1206)) + cbModelParam._m0[13u].w;
        float _2010 = fma(_1214, cbModelParam._m0[14u].z, fma(_1210, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1206)) + cbModelParam._m0[14u].w;
        float _2014 = fma(_1214, cbModelParam._m0[15u].z, fma(_1210, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1206)) + cbModelParam._m0[15u].w;
        float _2017 = fma(_1155, cbModelParam._m0[13u].z, fma(_1154, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1153));
        float _2020 = fma(_1155, cbModelParam._m0[14u].z, fma(_1154, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1153));
        float _2023 = fma(_1155, cbModelParam._m0[15u].z, fma(_1154, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1153));
        float _2051;
        if (_2017 > 0.0)
        {
            _2051 = abs((1.0 - _2006) / _2017);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2017 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2006 + 1.0) / _2017);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2051 = frontier_phi_14_12_ladder;
        }
        float _2251;
        if (_2020 > 0.0)
        {
            _2251 = abs((1.0 - _2010) / _2020);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2020 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2010 + 1.0) / _2020);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2251 = frontier_phi_23_19_ladder;
        }
        float _2494;
        if (_2023 > 0.0)
        {
            _2494 = abs((1.0 - _2014) / _2023);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2023 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2014 + 1.0) / _2023);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2494 = frontier_phi_35_30_ladder;
        }
        float _2496 = isnan(_2251) ? _2051 : (isnan(_2051) ? _2251 : min(_2051, _2251));
        float _2497 = isnan(_2494) ? _2496 : (isnan(_2496) ? _2494 : min(_2496, _2494));
        float _2501 = (_2497 * _2017) + _2006;
        float _2502 = (_2497 * _2020) + _2010;
        float _2503 = (_2497 * _2023) + _2014;
        float _2504 = _2497 * 9.9999997473787516355514526367188e-05;
        float _2506 = (-1.0) - _2504;
        float _2508 = _2504 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2503 > _2508) || ((_2503 < _2506) || ((_2502 > _2508) || ((_2502 < _2506) || ((_2501 < _2506) || (_2501 > _2508))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2627 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2503, cbModelParam._m0[9u].z, fma(_2502, cbModelParam._m0[9u].y, _2501 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2503, cbModelParam._m0[10u].z, fma(_2502, cbModelParam._m0[10u].y, _2501 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2503, cbModelParam._m0[11u].z, fma(_2502, cbModelParam._m0[11u].y, _2501 * cbModelParam._m0[11u].x))), _1959);
            frontier_phi_13_35_ladder = _2627.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2627.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2627.x * cbModelParam._m0[1u].y;
        }
        _2039 = frontier_phi_13_35_ladder_2;
        _2041 = frontier_phi_13_35_ladder_1;
        _2043 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2027 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1153, _1154, _1155), _1959);
        _2039 = _2027.x * cbModelParam._m0[1u].y;
        _2041 = _2027.y * cbModelParam._m0[1u].y;
        _2043 = _2027.z * cbModelParam._m0[1u].y;
    }
    float _2047 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _999);
    float _2048 = isnan(_2047) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2047 : min(cbModelParam._m0[25u].w, _2047));
    float _2137;
    float _2139;
    float _2141;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2101 = fma(_1214, cbModelParam._m0[21u].z, fma(_1210, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1206)) + cbModelParam._m0[21u].w;
        float _2105 = fma(_1214, cbModelParam._m0[22u].z, fma(_1210, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1206)) + cbModelParam._m0[22u].w;
        float _2109 = fma(_1214, cbModelParam._m0[23u].z, fma(_1210, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1206)) + cbModelParam._m0[23u].w;
        float _2112 = fma(_1155, cbModelParam._m0[21u].z, fma(_1154, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1153));
        float _2115 = fma(_1155, cbModelParam._m0[22u].z, fma(_1154, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1153));
        float _2118 = fma(_1155, cbModelParam._m0[23u].z, fma(_1154, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1153));
        float _2256;
        if (_2112 > 0.0)
        {
            _2256 = abs((1.0 - _2101) / _2112);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2112 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2101 + 1.0) / _2112);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2256 = frontier_phi_25_21_ladder;
        }
        float _2521;
        if (_2115 > 0.0)
        {
            _2521 = abs((1.0 - _2105) / _2115);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2115 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2105 + 1.0) / _2115);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2521 = frontier_phi_37_32_ladder;
        }
        float _2726;
        if (_2118 > 0.0)
        {
            _2726 = abs((1.0 - _2109) / _2118);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2118 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2109 + 1.0) / _2118);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2726 = frontier_phi_46_43_ladder;
        }
        float _2728 = isnan(_2521) ? _2256 : (isnan(_2256) ? _2521 : min(_2256, _2521));
        float _2729 = isnan(_2726) ? _2728 : (isnan(_2728) ? _2726 : min(_2728, _2726));
        float _2733 = (_2729 * _2112) + _2101;
        float _2734 = (_2729 * _2115) + _2105;
        float _2735 = (_2729 * _2118) + _2109;
        float _2736 = _2729 * 9.9999997473787516355514526367188e-05;
        float _2737 = (-1.0) - _2736;
        float _2739 = _2736 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2735 > _2739) || ((_2735 < _2737) || ((_2734 > _2739) || ((_2734 < _2737) || ((_2733 < _2737) || (_2733 > _2739))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2934 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2735, cbModelParam._m0[17u].z, fma(_2734, cbModelParam._m0[17u].y, _2733 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2735, cbModelParam._m0[18u].z, fma(_2734, cbModelParam._m0[18u].y, _2733 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2735, cbModelParam._m0[19u].z, fma(_2734, cbModelParam._m0[19u].y, _2733 * cbModelParam._m0[19u].x))), _2048);
            frontier_phi_22_46_ladder = _2934.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2934.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2934.x * cbModelParam._m0[1u].z;
        }
        _2137 = frontier_phi_22_46_ladder_2;
        _2139 = frontier_phi_22_46_ladder_1;
        _2141 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2121 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1153, _1154, _1155), _2048);
        _2137 = _2121.x * cbModelParam._m0[1u].z;
        _2139 = _2121.y * cbModelParam._m0[1u].z;
        _2141 = _2121.z * cbModelParam._m0[1u].z;
    }
    float _2153 = ((((1.0 - _1174) * ((_1161 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1174 * _1161)) * _1145;
    float _2154 = _2153 * ((cbModelParam._m0[1u].w * (_2137 - _2039)) + _2039);
    float _2155 = _2153 * ((cbModelParam._m0[1u].w * (_2139 - _2041)) + _2041);
    float _2156 = _2153 * ((cbModelParam._m0[1u].w * (_2141 - _2043)) + _2043);
    float _2159 = fma(_2156, cbSceneParam._m0[89u].z, fma(_2155, cbSceneParam._m0[89u].y, _2154 * cbSceneParam._m0[89u].x));
    float _2162 = fma(_2156, cbSceneParam._m0[90u].z, fma(_2155, cbSceneParam._m0[90u].y, _2154 * cbSceneParam._m0[90u].x));
    float _2165 = fma(_2156, cbSceneParam._m0[91u].z, fma(_2155, cbSceneParam._m0[91u].y, _2154 * cbSceneParam._m0[91u].x));
    uvec4 _2175 = floatBitsToUint(cbInstanceData._m0[_259 + 5u]);
    uint _2177 = _2175.x * 14u;
    uint _2178 = _2177 + 13u;
    float _2185 = _1145 + (-1.0);
    float _2190 = (cbLight._m0[_2178].x * _2185) + 1.0;
    float _2191 = (cbLight._m0[_2178].y * _2185) + 1.0;
    float _2192 = (cbLight._m0[_2178].z * _2185) + 1.0;
    float _2193 = (cbLight._m0[_2178].w * _2185) + 1.0;
    uint _2194 = _2177 + 5u;
    float _2200 = isnan(1.0) ? _2191 : (isnan(_2191) ? 1.0 : min(_2191, 1.0));
    uint _2204 = _2177 + 4u;
    float _2210 = isnan(1.0) ? _2190 : (isnan(_2190) ? 1.0 : min(_2190, 1.0));
    uint _2214 = _2177 | 1u;
    float _2225 = dot(vec3(cbLight._m0[_2177].xyz), vec3(_996, _997, _998));
    float _2228 = dot(vec3(cbLight._m0[_2214].xyz), vec3(_996, _997, _998));
    float _4382 = isnan(0.0) ? _2225 : (isnan(_2225) ? 0.0 : max(_2225, 0.0));
    float _4393 = isnan(0.0) ? _2228 : (isnan(_2228) ? 0.0 : max(_2228, 0.0));
    float _2233 = (isnan(1.0) ? _4382 : (isnan(_4382) ? 1.0 : min(_4382, 1.0))) * 0.3183098733425140380859375;
    float _2235 = (isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0))) * 0.3183098733425140380859375;
    float _2242 = ((cbLight._m0[_2194].x * _2200) * _2235) + ((cbLight._m0[_2204].x * _2210) * _2233);
    float _2243 = ((_2200 * cbLight._m0[_2194].y) * _2235) + ((_2210 * cbLight._m0[_2204].y) * _2233);
    float _2244 = ((_2200 * cbLight._m0[_2194].z) * _2235) + ((_2210 * cbLight._m0[_2204].z) * _2233);
    uvec4 _2248 = floatBitsToUint(cbLight._m0[_2177 + 12u]);
    bool _2250 = _2248.x == 0u;
    float _2261;
    float _2263;
    float _2265;
    if (_2250)
    {
        _2261 = _2242;
        _2263 = _2243;
        _2265 = _2244;
    }
    else
    {
        uint _2269 = _2177 + 6u;
        float _2285 = (dot(vec3(cbLight._m0[_2177 + 2u].xyz), vec3(_996, _997, _998)) * 0.5) + 0.5;
        float _2286 = _2285 * _2285;
        float _4404 = isnan(0.0) ? _2286 : (isnan(_2286) ? 0.0 : max(_2286, 0.0));
        float _2287 = isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0));
        float _2288 = isnan(1.0) ? _2192 : (isnan(_2192) ? 1.0 : min(_2192, 1.0));
        _2261 = (((cbLight._m0[_2269].x * 0.3183098733425140380859375) * _2287) * _2288) + _2242;
        _2263 = (((cbLight._m0[_2269].y * 0.3183098733425140380859375) * _2287) * _2288) + _2243;
        _2265 = (((cbLight._m0[_2269].z * 0.3183098733425140380859375) * _2287) * _2288) + _2244;
    }
    bool _2268 = _2248.y == 0u;
    float _2306;
    float _2308;
    float _2310;
    if (_2268)
    {
        _2306 = _2261;
        _2308 = _2263;
        _2310 = _2265;
    }
    else
    {
        uint _2465 = _2177 + 7u;
        float _2481 = (dot(vec3(cbLight._m0[_2177 + 3u].xyz), vec3(_996, _997, _998)) * 0.5) + 0.5;
        float _2482 = _2481 * _2481;
        float _4420 = isnan(0.0) ? _2482 : (isnan(_2482) ? 0.0 : max(_2482, 0.0));
        float _2483 = isnan(1.0) ? _4420 : (isnan(_4420) ? 1.0 : min(_4420, 1.0));
        float _2484 = isnan(1.0) ? _2193 : (isnan(_2193) ? 1.0 : min(_2193, 1.0));
        _2306 = (((cbLight._m0[_2465].x * 0.3183098733425140380859375) * _2483) * _2484) + _2261;
        _2308 = (((cbLight._m0[_2465].y * 0.3183098733425140380859375) * _2483) * _2484) + _2263;
        _2310 = (((cbLight._m0[_2465].z * 0.3183098733425140380859375) * _2483) * _2484) + _2265;
    }
    uint _2313 = _2177 + 8u;
    float _2326 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2177].w)) * _999) * 0.949999988079071044921875);
    float _2327 = _2326 * _2326;
    float _2328 = cbLight._m0[_2177].x + _1074;
    float _2329 = cbLight._m0[_2177].y + _1075;
    float _2330 = cbLight._m0[_2177].z + _1076;
    float _2334 = inversesqrt(dot(vec3(_2328, _2329, _2330), vec3(_2328, _2329, _2330)));
    float _2335 = _2334 * _2328;
    float _2336 = _2334 * _2329;
    float _2337 = _2334 * _2330;
    float _2338 = dot(vec3(_996, _997, _998), vec3(cbLight._m0[_2177].xyz));
    float _4436 = isnan(0.0) ? _2338 : (isnan(_2338) ? 0.0 : max(_2338, 0.0));
    float _2341 = isnan(1.0) ? _4436 : (isnan(_4436) ? 1.0 : min(_4436, 1.0));
    float _4447 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
    float _2342 = isnan(1.0) ? _4447 : (isnan(_4447) ? 1.0 : min(_4447, 1.0));
    float _2343 = dot(vec3(_996, _997, _998), vec3(_2335, _2336, _2337));
    float _4458 = isnan(0.0) ? _2343 : (isnan(_2343) ? 0.0 : max(_2343, 0.0));
    float _2346 = isnan(1.0) ? _4458 : (isnan(_4458) ? 1.0 : min(_4458, 1.0));
    float _2347 = dot(vec3(cbLight._m0[_2177].xyz), vec3(_2335, _2336, _2337));
    float _4469 = isnan(0.0) ? _2347 : (isnan(_2347) ? 0.0 : max(_2347, 0.0));
    float _2351 = _2327 * _2327;
    float _2355 = ((_2346 * _2346) * (_2351 + (-1.0))) + 1.0;
    float _2366 = (exp2(log2(1.0 - (isnan(1.0) ? _4469 : (isnan(_4469) ? 1.0 : min(_4469, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2367 = 1.0 - _2327;
    float _2378 = (0.5 / (((_2342 * ((_2341 * _2367) + _2327)) + 9.9999999392252902907785028219223e-09) + (((_2342 * _2367) + _2327) * _2341))) * _2341;
    float _4480 = isnan(0.0) ? _2378 : (isnan(_2378) ? 0.0 : max(_2378, 0.0));
    float _2380 = (isnan(1.0) ? _4480 : (isnan(_4480) ? 1.0 : min(_4480, 1.0))) * (_2351 / ((_2355 * _2355) * 3.141590118408203125));
    uint _2391 = _2177 + 9u;
    float _2402 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2214].w)) * _999) * 0.949999988079071044921875);
    float _2403 = _2402 * _2402;
    float _2404 = cbLight._m0[_2214].x + _1074;
    float _2405 = cbLight._m0[_2214].y + _1075;
    float _2406 = cbLight._m0[_2214].z + _1076;
    float _2410 = inversesqrt(dot(vec3(_2404, _2405, _2406), vec3(_2404, _2405, _2406)));
    float _2411 = _2410 * _2404;
    float _2412 = _2410 * _2405;
    float _2413 = _2410 * _2406;
    float _2414 = dot(vec3(_996, _997, _998), vec3(cbLight._m0[_2214].xyz));
    float _4491 = isnan(0.0) ? _2414 : (isnan(_2414) ? 0.0 : max(_2414, 0.0));
    float _2417 = isnan(1.0) ? _4491 : (isnan(_4491) ? 1.0 : min(_4491, 1.0));
    float _2418 = dot(vec3(_996, _997, _998), vec3(_2411, _2412, _2413));
    float _4502 = isnan(0.0) ? _2418 : (isnan(_2418) ? 0.0 : max(_2418, 0.0));
    float _2421 = isnan(1.0) ? _4502 : (isnan(_4502) ? 1.0 : min(_4502, 1.0));
    float _2422 = dot(vec3(cbLight._m0[_2214].xyz), vec3(_2411, _2412, _2413));
    float _4513 = isnan(0.0) ? _2422 : (isnan(_2422) ? 0.0 : max(_2422, 0.0));
    float _2426 = _2403 * _2403;
    float _2430 = ((_2421 * _2421) * (_2426 + (-1.0))) + 1.0;
    float _2439 = (exp2(log2(1.0 - (isnan(1.0) ? _4513 : (isnan(_4513) ? 1.0 : min(_4513, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2440 = 1.0 - _2403;
    float _2450 = (0.5 / (((_2342 * ((_2417 * _2440) + _2403)) + 9.9999999392252902907785028219223e-09) + (((_2342 * _2440) + _2403) * _2417))) * _2417;
    float _4524 = isnan(0.0) ? _2450 : (isnan(_2450) ? 0.0 : max(_2450, 0.0));
    float _2452 = (isnan(1.0) ? _4524 : (isnan(_4524) ? 1.0 : min(_4524, 1.0))) * (_2426 / ((_2430 * _2430) * 3.141590118408203125));
    float _2462 = (((_2439 * cbLight._m0[_2391].x) * _2452) * _2200) + (((_2366 * cbLight._m0[_2313].x) * _2380) * _2210);
    float _2463 = (((_2439 * cbLight._m0[_2391].y) * _2452) * _2200) + (((_2366 * cbLight._m0[_2313].y) * _2380) * _2210);
    float _2464 = (((_2439 * cbLight._m0[_2391].z) * _2452) * _2200) + (((_2366 * cbLight._m0[_2313].z) * _2380) * _2210);
    float _2526;
    float _2528;
    float _2530;
    if (_2250)
    {
        _2526 = _2462;
        _2528 = _2463;
        _2530 = _2464;
    }
    else
    {
        uint _2532 = _2177 + 2u;
        uint _2536 = _2177 + 10u;
        float _2550 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2532].w)) * _999) * 0.949999988079071044921875);
        float _2551 = _2550 * _2550;
        float _2552 = cbLight._m0[_2532].x + _1074;
        float _2553 = cbLight._m0[_2532].y + _1075;
        float _2554 = cbLight._m0[_2532].z + _1076;
        float _2558 = inversesqrt(dot(vec3(_2552, _2553, _2554), vec3(_2552, _2553, _2554)));
        float _2559 = _2558 * _2552;
        float _2560 = _2558 * _2553;
        float _2561 = _2558 * _2554;
        float _2562 = dot(vec3(_996, _997, _998), vec3(cbLight._m0[_2532].xyz));
        float _4535 = isnan(0.0) ? _2562 : (isnan(_2562) ? 0.0 : max(_2562, 0.0));
        float _2565 = isnan(1.0) ? _4535 : (isnan(_4535) ? 1.0 : min(_4535, 1.0));
        float _2566 = dot(vec3(_996, _997, _998), vec3(_2559, _2560, _2561));
        float _4546 = isnan(0.0) ? _2566 : (isnan(_2566) ? 0.0 : max(_2566, 0.0));
        float _2569 = isnan(1.0) ? _4546 : (isnan(_4546) ? 1.0 : min(_4546, 1.0));
        float _2570 = dot(vec3(cbLight._m0[_2532].xyz), vec3(_2559, _2560, _2561));
        float _4557 = isnan(0.0) ? _2570 : (isnan(_2570) ? 0.0 : max(_2570, 0.0));
        float _2574 = _2551 * _2551;
        float _2578 = ((_2569 * _2569) * (_2574 + (-1.0))) + 1.0;
        float _2587 = (exp2(log2(1.0 - (isnan(1.0) ? _4557 : (isnan(_4557) ? 1.0 : min(_4557, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2588 = 1.0 - _2551;
        float _2598 = (0.5 / (((_2342 * ((_2565 * _2588) + _2551)) + 9.9999999392252902907785028219223e-09) + (((_2342 * _2588) + _2551) * _2565))) * _2565;
        float _4568 = isnan(0.0) ? _2598 : (isnan(_2598) ? 0.0 : max(_2598, 0.0));
        float _2600 = (isnan(1.0) ? _4568 : (isnan(_4568) ? 1.0 : min(_4568, 1.0))) * (_2574 / ((_2578 * _2578) * 3.141590118408203125));
        float _2601 = isnan(1.0) ? _2192 : (isnan(_2192) ? 1.0 : min(_2192, 1.0));
        _2526 = (((_2587 * cbLight._m0[_2536].x) * _2600) * _2601) + _2462;
        _2528 = (((_2587 * cbLight._m0[_2536].y) * _2600) * _2601) + _2463;
        _2530 = (((_2587 * cbLight._m0[_2536].z) * _2600) * _2601) + _2464;
    }
    float _2636;
    float _2638;
    float _2640;
    if (_2268)
    {
        _2636 = _2526;
        _2638 = _2528;
        _2640 = _2530;
    }
    else
    {
        uint _2647 = _2177 + 3u;
        uint _2651 = _2177 + 11u;
        float _2665 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2647].w)) * _999) * 0.949999988079071044921875);
        float _2666 = _2665 * _2665;
        float _2667 = cbLight._m0[_2647].x + _1074;
        float _2668 = cbLight._m0[_2647].y + _1075;
        float _2669 = cbLight._m0[_2647].z + _1076;
        float _2673 = inversesqrt(dot(vec3(_2667, _2668, _2669), vec3(_2667, _2668, _2669)));
        float _2674 = _2673 * _2667;
        float _2675 = _2673 * _2668;
        float _2676 = _2673 * _2669;
        float _2677 = dot(vec3(_996, _997, _998), vec3(cbLight._m0[_2647].xyz));
        float _4584 = isnan(0.0) ? _2677 : (isnan(_2677) ? 0.0 : max(_2677, 0.0));
        float _2680 = isnan(1.0) ? _4584 : (isnan(_4584) ? 1.0 : min(_4584, 1.0));
        float _2681 = dot(vec3(_996, _997, _998), vec3(_2674, _2675, _2676));
        float _4595 = isnan(0.0) ? _2681 : (isnan(_2681) ? 0.0 : max(_2681, 0.0));
        float _2684 = isnan(1.0) ? _4595 : (isnan(_4595) ? 1.0 : min(_4595, 1.0));
        float _2685 = dot(vec3(cbLight._m0[_2647].xyz), vec3(_2674, _2675, _2676));
        float _4606 = isnan(0.0) ? _2685 : (isnan(_2685) ? 0.0 : max(_2685, 0.0));
        float _2689 = _2666 * _2666;
        float _2693 = ((_2684 * _2684) * (_2689 + (-1.0))) + 1.0;
        float _2702 = (exp2(log2(1.0 - (isnan(1.0) ? _4606 : (isnan(_4606) ? 1.0 : min(_4606, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2703 = 1.0 - _2666;
        float _2713 = (0.5 / (((_2342 * ((_2680 * _2703) + _2666)) + 9.9999999392252902907785028219223e-09) + (((_2342 * _2703) + _2666) * _2680))) * _2680;
        float _4617 = isnan(0.0) ? _2713 : (isnan(_2713) ? 0.0 : max(_2713, 0.0));
        float _2715 = (isnan(1.0) ? _4617 : (isnan(_4617) ? 1.0 : min(_4617, 1.0))) * (_2689 / ((_2693 * _2693) * 3.141590118408203125));
        float _2716 = isnan(1.0) ? _2193 : (isnan(_2193) ? 1.0 : min(_2193, 1.0));
        _2636 = (((_2702 * cbLight._m0[_2651].x) * _2715) * _2716) + _2526;
        _2638 = (((_2702 * cbLight._m0[_2651].y) * _2715) * _2716) + _2528;
        _2640 = (((_2702 * cbLight._m0[_2651].z) * _2715) * _2716) + _2530;
    }
    float _2851;
    float _2853;
    float _2855;
    float _2857;
    float _2859;
    float _2861;
    if (_2175.y == 0u)
    {
        float _2791 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2792 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2791;
        float _2793 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2791;
        float _2794 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2791;
        uvec4 _2806 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2807 = _2806.x;
        uint _2818 = uint((float(_2806.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1083) / _2807))) + floor(float(uint(cbSceneParam._m0[85u].x * _1082) / _2807)));
        float _2828 = (log2(_2794 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2829 = isnan(0.0) ? _2828 : (isnan(_2828) ? 0.0 : max(_2828, 0.0));
        uint _2832 = uint(isnan(14.0) ? _2829 : (isnan(_2829) ? 14.0 : min(_2829, 14.0)));
        uvec4 _2837 = texelFetch(g_lightClusterGridBuffer, int(((_2832 << 2u) + (_2818 << 6u)) >> 2u));
        uint _2838 = _2837.x;
        uint _2839 = _2806.z;
        float _2939;
        float _2941;
        float _2943;
        float _2945;
        float _2947;
        float _2949;
        if (((((1u << ((_2839 >> 4u) & 15u)) + 4294967295u) & _2838) == 0u) || ((_2839 & 240u) == 0u))
        {
            _2939 = 0.0;
            _2941 = 0.0;
            _2943 = 0.0;
            _2945 = 0.0;
            _2947 = 0.0;
            _2949 = 0.0;
        }
        else
        {
            float _2940;
            float _2942;
            float _2944;
            float _2946;
            float _2948;
            float _2950;
            float _3083 = 0.0;
            float _3084 = 0.0;
            float _3085 = 0.0;
            float _3086 = 0.0;
            float _3087 = 0.0;
            float _3088 = 0.0;
            uint _3089 = 0u;
            uint _3098;
            bool _3099;
            for (;;)
            {
                _3098 = texelFetch(g_lightClassification, int((((_2832 << 5u) + (_2818 << 9u)) + (_3089 << 2u)) >> 2u)).x;
                _3099 = _3098 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3099)
                {
                    frontier_phi_61_pred = _3083;
                    frontier_phi_61_pred_1 = _3088;
                    frontier_phi_61_pred_2 = _3087;
                    frontier_phi_61_pred_3 = _3086;
                    frontier_phi_61_pred_4 = _3085;
                    frontier_phi_61_pred_5 = _3084;
                }
                else
                {
                    float _3207;
                    float _3208;
                    float _3209;
                    float _3210;
                    float _3211;
                    float _3212;
                    uint _3213;
                    _3207 = _3083;
                    _3208 = _3084;
                    _3209 = _3085;
                    _3210 = _3086;
                    _3211 = _3087;
                    _3212 = _3088;
                    _3213 = _3098;
                    float _3139;
                    float _3140;
                    float _3141;
                    float _3142;
                    float _3143;
                    float _3144;
                    for (;;)
                    {
                        uint _3217 = uint(findLSB(_3213)) + (_3089 << 5u);
                        uint _3214 = (_3213 + 4294967295u) & _3213;
                        uint _3219 = _3217 * 48u;
                        vec4 _3233 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3219)).x, texelFetch(g_PointLightRenderingBuffer, int(_3219 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3219 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3219 + 3u)).x));
                        uint _3239 = (_3217 * 48u) + 4u;
                        vec4 _3252 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3239)).x, texelFetch(g_PointLightRenderingBuffer, int(_3239 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3239 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3239 + 3u)).x));
                        uint _3258 = (_3217 * 48u) + 8u;
                        vec3 _3269 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3258)).x, texelFetch(g_PointLightRenderingBuffer, int(_3258 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3258 + 2u)).x));
                        float _3273 = _3233.x - _2792;
                        float _3274 = _3233.y - _2793;
                        float _3275 = _3233.z - _2794;
                        float _3276 = dot(vec3(_3273, _3274, _3275), vec3(_3273, _3274, _3275));
                        float _3279 = inversesqrt(_3276);
                        float _3280 = _3279 * _3273;
                        float _3281 = _3279 * _3274;
                        float _3282 = _3279 * _3275;
                        float _3283 = dot(vec3(_1101, _1104, _1107), vec3(_3280, _3281, _3282));
                        float _3288 = 1.0 - (_3276 * _3233.w);
                        float _4643 = isnan(0.0) ? _3288 : (isnan(_3288) ? 0.0 : max(_3288, 0.0));
                        float _3289 = isnan(1.0) ? _4643 : (isnan(_4643) ? 1.0 : min(_4643, 1.0));
                        float _3290 = sqrt(_3276) * _3252.w;
                        float _3293 = 1.39999997615814208984375 / (_3290 + 1.39999997615814208984375);
                        float _3294 = _3293 * _3293;
                        float _3297 = ((1.0 - _3294) * _3283) + _3294;
                        float _3300 = _3290 * _3290;
                        float _3304 = ((isnan(0.0) ? _3297 : (isnan(_3297) ? 0.0 : max(_3297, 0.0))) * _3289) / ((_3300 * 0.699999988079071044921875) + 1.0);
                        float _3308 = (-0.0) - _2792;
                        float _3309 = (-0.0) - _2793;
                        float _3310 = (-0.0) - _2794;
                        float _3314 = inversesqrt(dot(vec3(_3308, _3309, _3310), vec3(_3308, _3309, _3310)));
                        float _3315 = _3314 * _3308;
                        float _3316 = _3314 * _3309;
                        float _3317 = _3314 * _3310;
                        float _3325 = exp2(log2(1.0 / ((_3300 * 3.5) + 5.0)) * 0.25);
                        float _3326 = 1.0 - _1161;
                        float _3333 = sqrt(1.0 - ((1.0 - (_3326 * _3326)) * (1.0 - (_3325 * _3325))));
                        float _3334 = _3333 * _3333;
                        float _3335 = _3334 * _3334;
                        float _3336 = _3315 + _3280;
                        float _3337 = _3316 + _3281;
                        float _3338 = _3317 + _3282;
                        float _3342 = inversesqrt(dot(vec3(_3336, _3337, _3338), vec3(_3336, _3337, _3338)));
                        float _3346 = dot(vec3(_1101, _1104, _1107), vec3(_3315, _3316, _3317));
                        float _4659 = isnan(0.0) ? _3346 : (isnan(_3346) ? 0.0 : max(_3346, 0.0));
                        float _3349 = isnan(1.0) ? _4659 : (isnan(_4659) ? 1.0 : min(_4659, 1.0));
                        float _3350 = dot(vec3(_1101, _1104, _1107), vec3(_3342 * _3336, _3342 * _3337, _3342 * _3338));
                        float _4670 = isnan(0.0) ? _3350 : (isnan(_3350) ? 0.0 : max(_3350, 0.0));
                        float _3353 = isnan(1.0) ? _4670 : (isnan(_4670) ? 1.0 : min(_4670, 1.0));
                        float _3357 = ((_3353 * _3353) * (_3335 + (-1.0))) + 1.0;
                        float _3358 = _3293 * _3334;
                        float _3359 = _3358 * _3358;
                        float _3362 = ((1.0 - _3359) * _3283) + _3359;
                        float _4681 = isnan(0.0) ? _3362 : (isnan(_3362) ? 0.0 : max(_3362, 0.0));
                        float _3363 = isnan(1.0) ? _4681 : (isnan(_4681) ? 1.0 : min(_4681, 1.0));
                        float _3364 = 1.0 - _3334;
                        float _3374 = (0.5 / (((_3363 * ((_3349 * _3364) + _3334)) + 9.9999999392252902907785028219223e-09) + (((_3363 * _3364) + _3334) * _3349))) * _3363;
                        float _4692 = isnan(0.0) ? _3374 : (isnan(_3374) ? 0.0 : max(_3374, 0.0));
                        float _3385 = (((_3335 * 3.1415927410125732421875) * (isnan(1.0) ? _4692 : (isnan(_4692) ? 1.0 : min(_4692, 1.0)))) / ((_3357 * _3357) * ((_3300 * 2.1991131305694580078125) + 3.141590118408203125))) * _3289;
                        _3142 = (_3304 * _3252.x) + _3210;
                        _3143 = (_3304 * _3252.y) + _3211;
                        _3144 = (_3304 * _3252.z) + _3212;
                        _3139 = (_3385 * _3269.x) + _3207;
                        _3140 = (_3385 * _3269.y) + _3208;
                        _3141 = (_3385 * _3269.z) + _3209;
                        if (_3214 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3207 = _3139;
                            _3208 = _3140;
                            _3209 = _3141;
                            _3210 = _3142;
                            _3211 = _3143;
                            _3212 = _3144;
                            _3213 = _3214;
                        }
                    }
                    frontier_phi_61_pred = _3139;
                    frontier_phi_61_pred_1 = _3144;
                    frontier_phi_61_pred_2 = _3143;
                    frontier_phi_61_pred_3 = _3142;
                    frontier_phi_61_pred_4 = _3141;
                    frontier_phi_61_pred_5 = _3140;
                }
                _2940 = frontier_phi_61_pred;
                _2950 = frontier_phi_61_pred_1;
                _2948 = frontier_phi_61_pred_2;
                _2946 = frontier_phi_61_pred_3;
                _2944 = frontier_phi_61_pred_4;
                _2942 = frontier_phi_61_pred_5;
                uint _3090 = _3089 + 1u;
                if (_3090 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3083 = _2940;
                    _3084 = _2942;
                    _3085 = _2944;
                    _3086 = _2946;
                    _3087 = _2948;
                    _3088 = _2950;
                    _3089 = _3090;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2939 = _2940;
            _2941 = _2942;
            _2943 = _2944;
            _2945 = _2946;
            _2947 = _2948;
            _2949 = _2950;
        }
        uvec4 _2953 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2954 = _2953.z;
        uint _2956 = (_2954 >> 8u) & 15u;
        float _3051;
        float _3053;
        float _3055;
        float _3057;
        float _3059;
        float _3061;
        if (((4294967295u << _2956) & _2838) == 0u)
        {
            _3051 = _2939;
            _3053 = _2941;
            _3055 = _2943;
            _3057 = _2945;
            _3059 = _2947;
            _3061 = _2949;
        }
        else
        {
            float _3076 = inversesqrt(dot(vec3(_2792, _2793, _2794), vec3(_2792, _2793, _2794)));
            float _3077 = _3076 * _2792;
            float _3078 = _3076 * _2793;
            float _3079 = _3076 * _2794;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2956 < ((_2954 >> 12u) & 15u))
            {
                float _3052;
                float _3054;
                float _3056;
                float _3058;
                float _3060;
                float _3062;
                float _3190 = _2939;
                float _3191 = _2941;
                float _3192 = _2943;
                float _3193 = _2945;
                float _3194 = _2947;
                float _3195 = _2949;
                uint _3196 = _2956;
                uint _3205;
                bool _3206;
                for (;;)
                {
                    _3205 = texelFetch(g_lightClassification, int((((_2832 << 5u) + (_2818 << 9u)) + (_3196 << 2u)) >> 2u)).x;
                    _3206 = _3205 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3206)
                    {
                        frontier_phi_67_pred = _3193;
                        frontier_phi_67_pred_1 = _3194;
                        frontier_phi_67_pred_2 = _3195;
                        frontier_phi_67_pred_3 = _3192;
                        frontier_phi_67_pred_4 = _3191;
                        frontier_phi_67_pred_5 = _3190;
                    }
                    else
                    {
                        float _3390;
                        float _3391;
                        float _3392;
                        float _3393;
                        float _3394;
                        float _3395;
                        float _3683;
                        float _3684;
                        float _3685;
                        float _3686;
                        float _3687;
                        float _3688;
                        float _3403 = _3190;
                        float _3404 = _3191;
                        float _3405 = _3192;
                        float _3406 = _3193;
                        float _3407 = _3194;
                        float _3408 = _3195;
                        uint _3409 = _3205;
                        uint _3410;
                        vec4 _3435;
                        float _3436;
                        vec4 _3451;
                        vec3 _3463;
                        vec4 _3478;
                        vec4 _3493;
                        float _3539;
                        bool _3540;
                        for (;;)
                        {
                            uint _3420 = ((_3196 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3409));
                            _3410 = (_3409 + 4294967295u) & _3409;
                            uint _3422 = _3420 * 40u;
                            _3435 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3422)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3422 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3422 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3422 + 3u)).x));
                            _3436 = _3435.w;
                            uint _3438 = (_3420 * 40u) + 4u;
                            _3451 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3438)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3438 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3438 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3438 + 3u)).x));
                            uint _3453 = (_3420 * 40u) + 8u;
                            _3463 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3453)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3453 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3453 + 2u)).x));
                            uint _3465 = (_3420 * 40u) + 16u;
                            _3478 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3465)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3465 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3465 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3465 + 3u)).x));
                            uint _3480 = (_3420 * 40u) + 20u;
                            _3493 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3480)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3480 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3480 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3480 + 3u)).x));
                            uint _3495 = (_3420 * 40u) + 24u;
                            vec4 _3508 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3495)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3495 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3495 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3495 + 3u)).x));
                            uint _3514 = (_3420 * 40u) + 28u;
                            vec4 _3527 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3514)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3514 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3514 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3514 + 3u)).x));
                            _3539 = fma(_2794, _3527.z, fma(_2793, _3527.y, _3527.x * _2792)) + _3527.w;
                            _3540 = !((fma(_2794, _3508.z, fma(_2793, _3508.y, _3508.x * _2792)) + _3508.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3540)
                            {
                                float _3567 = _3435.x - _2792;
                                float _3568 = _3435.y - _2793;
                                float _3569 = _3435.z - _2794;
                                float _3570 = dot(vec3(_3567, _3568, _3569), vec3(_3567, _3568, _3569));
                                float _3573 = inversesqrt(_3570);
                                float _3574 = _3573 * _3567;
                                float _3575 = _3573 * _3568;
                                float _3576 = _3573 * _3569;
                                float _3580 = 1.0 - (_3570 / (_3436 * _3436));
                                float _4703 = isnan(0.0) ? _3580 : (isnan(_3580) ? 0.0 : max(_3580, 0.0));
                                float _3581 = isnan(1.0) ? _4703 : (isnan(_4703) ? 1.0 : min(_4703, 1.0));
                                float _3585 = sqrt(_3570) * _3451.w;
                                float _3587 = 1.39999997615814208984375 / (_3585 + 1.39999997615814208984375);
                                float _3588 = _3587 * _3587;
                                float _3591 = ((1.0 - _3588) * dot(vec3(_3574, _3575, _3576), vec3(_1101, _1104, _1107))) + _3588;
                                float _3594 = _3585 * _3585;
                                float _3598 = (fma(_2794, _3478.z, fma(_2793, _3478.y, _3478.x * _2792)) + _3478.w) / _3539;
                                float _3599 = (fma(_2794, _3493.z, fma(_2793, _3493.y, _3493.x * _2792)) + _3493.w) / _3539;
                                float _3603 = 1.0 - dot(vec2(_3598, _3599), vec2(_3598, _3599));
                                float _4719 = isnan(0.0) ? _3603 : (isnan(_3603) ? 0.0 : max(_3603, 0.0));
                                float _3604 = isnan(1.0) ? _4719 : (isnan(_4719) ? 1.0 : min(_4719, 1.0));
                                float _3605 = _3604 * (((isnan(0.0) ? _3591 : (isnan(_3591) ? 0.0 : max(_3591, 0.0))) * _3581) / ((_3594 * 0.699999988079071044921875) + 1.0));
                                float _3617 = exp2(log2(1.0 / ((_3594 * 3.5) + 5.0)) * 0.25);
                                float _3618 = 1.0 - _1161;
                                float _3625 = sqrt(1.0 - ((1.0 - (_3618 * _3618)) * (1.0 - (_3617 * _3617))));
                                float _3626 = _3625 * _3625;
                                float _3627 = _3626 * _3626;
                                float _3628 = _3574 - _3077;
                                float _3629 = _3575 - _3078;
                                float _3630 = _3576 - _3079;
                                float _3634 = inversesqrt(dot(vec3(_3628, _3629, _3630), vec3(_3628, _3629, _3630)));
                                float _3638 = dot(vec3(_1101, _1104, _1107), vec3((-0.0) - _3077, (-0.0) - _3078, (-0.0) - _3079));
                                float _4730 = isnan(0.0) ? _3638 : (isnan(_3638) ? 0.0 : max(_3638, 0.0));
                                float _3641 = isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0));
                                float _3642 = dot(vec3(_1101, _1104, _1107), vec3(_3634 * _3628, _3634 * _3629, _3634 * _3630));
                                float _4741 = isnan(0.0) ? _3642 : (isnan(_3642) ? 0.0 : max(_3642, 0.0));
                                float _3645 = isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0));
                                float _3649 = ((_3645 * _3645) * (_3627 + (-1.0))) + 1.0;
                                float _3650 = _3587 * _3626;
                                float _3651 = _3650 * _3650;
                                float _3657 = ((1.0 - _3651) * dot(vec3(_1101, _1104, _1107), vec3(_3574, _3575, _3576))) + _3651;
                                float _4752 = isnan(0.0) ? _3657 : (isnan(_3657) ? 0.0 : max(_3657, 0.0));
                                float _3658 = isnan(1.0) ? _4752 : (isnan(_4752) ? 1.0 : min(_4752, 1.0));
                                float _3659 = 1.0 - _3626;
                                float _3669 = (0.5 / (((_3658 * ((_3641 * _3659) + _3626)) + 9.9999999392252902907785028219223e-09) + (((_3658 * _3659) + _3626) * _3641))) * _3658;
                                float _4763 = isnan(0.0) ? _3669 : (isnan(_3669) ? 0.0 : max(_3669, 0.0));
                                float _3679 = (_3604 * _3581) * (((_3627 * 3.1415927410125732421875) * (isnan(1.0) ? _4763 : (isnan(_4763) ? 1.0 : min(_4763, 1.0)))) / ((_3649 * _3649) * ((_3594 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3679 * _3463.x;
                                frontier_phi_73_pred_1 = _3679 * _3463.y;
                                frontier_phi_73_pred_2 = _3605 * _3451.z;
                                frontier_phi_73_pred_3 = _3605 * _3451.y;
                                frontier_phi_73_pred_4 = _3605 * _3451.x;
                                frontier_phi_73_pred_5 = _3679 * _3463.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3683 = frontier_phi_73_pred;
                            _3684 = frontier_phi_73_pred_1;
                            _3688 = frontier_phi_73_pred_2;
                            _3687 = frontier_phi_73_pred_3;
                            _3686 = frontier_phi_73_pred_4;
                            _3685 = frontier_phi_73_pred_5;
                            _3393 = _3686 + _3406;
                            _3394 = _3687 + _3407;
                            _3395 = _3688 + _3408;
                            _3390 = _3683 + _3403;
                            _3391 = _3684 + _3404;
                            _3392 = _3685 + _3405;
                            if (_3410 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3403 = _3390;
                                _3404 = _3391;
                                _3405 = _3392;
                                _3406 = _3393;
                                _3407 = _3394;
                                _3408 = _3395;
                                _3409 = _3410;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3393;
                        frontier_phi_67_pred_1 = _3394;
                        frontier_phi_67_pred_2 = _3395;
                        frontier_phi_67_pred_3 = _3392;
                        frontier_phi_67_pred_4 = _3391;
                        frontier_phi_67_pred_5 = _3390;
                    }
                    _3058 = frontier_phi_67_pred;
                    _3060 = frontier_phi_67_pred_1;
                    _3062 = frontier_phi_67_pred_2;
                    _3056 = frontier_phi_67_pred_3;
                    _3054 = frontier_phi_67_pred_4;
                    _3052 = frontier_phi_67_pred_5;
                    uint _3197 = _3196 + 1u;
                    if (_3197 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3190 = _3052;
                        _3191 = _3054;
                        _3192 = _3056;
                        _3193 = _3058;
                        _3194 = _3060;
                        _3195 = _3062;
                        _3196 = _3197;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3060;
                frontier_phi_55_56_ladder_1 = _3062;
                frontier_phi_55_56_ladder_2 = _3058;
                frontier_phi_55_56_ladder_3 = _3056;
                frontier_phi_55_56_ladder_4 = _3054;
                frontier_phi_55_56_ladder_5 = _3052;
            }
            else
            {
                frontier_phi_55_56_ladder = _2947;
                frontier_phi_55_56_ladder_1 = _2949;
                frontier_phi_55_56_ladder_2 = _2945;
                frontier_phi_55_56_ladder_3 = _2943;
                frontier_phi_55_56_ladder_4 = _2941;
                frontier_phi_55_56_ladder_5 = _2939;
            }
            _3051 = frontier_phi_55_56_ladder_5;
            _3053 = frontier_phi_55_56_ladder_4;
            _3055 = frontier_phi_55_56_ladder_3;
            _3057 = frontier_phi_55_56_ladder_2;
            _3059 = frontier_phi_55_56_ladder;
            _3061 = frontier_phi_55_56_ladder_1;
        }
        float _3066 = isnan(1.0) ? _1145 : (isnan(_1145) ? 1.0 : min(_1145, 1.0));
        _2851 = (_3066 * _3057) + _2306;
        _2853 = (_3066 * _3059) + _2308;
        _2855 = (_3066 * _3061) + _2310;
        _2857 = ((_3051 * 0.039999999105930328369140625) * _3066) + _2636;
        _2859 = ((_3053 * 0.039999999105930328369140625) * _3066) + _2638;
        _2861 = ((_3055 * 0.039999999105930328369140625) * _3066) + _2640;
    }
    else
    {
        _2851 = _2306;
        _2853 = _2308;
        _2855 = _2310;
        _2857 = _2636;
        _2859 = _2638;
        _2861 = _2640;
    }
    float _4779 = isnan(0.0) ? _1130 : (isnan(_1130) ? 0.0 : max(_1130, 0.0));
    float _4790 = isnan(0.0) ? _1131 : (isnan(_1131) ? 0.0 : max(_1131, 0.0));
    float _4801 = isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0));
    uint _2881 = _259 + 6u;
    float _2889 = _1082 / cbSceneParam._m0[86u].x;
    float _2890 = _1083 / cbSceneParam._m0[86u].y;
    vec4 _2904 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2889, _2890, (log2((isnan(cbSceneParam._m0[77u].w) ? _1017 : (isnan(_1017) ? cbSceneParam._m0[77u].w : min(_1017, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2906 = _2904.x;
    float _2907 = _2904.y;
    float _2908 = _2904.z;
    float _2909 = _2904.w;
    float _3001;
    float _3003;
    float _3005;
    float _3007;
    if (_1017 > cbSceneParam._m0[78u].w)
    {
        float _2964 = isnan(_1017) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1017 : min(cbSceneParam._m0[80u].w, _1017));
        float _2965 = _2964 / _1017;
        float _2976 = _2965 * _1067;
        float _2977 = _1068 * _2965;
        float _2978 = (-0.0) - _2977;
        float _2979 = _2965 * _1069;
        float _2981 = (cbSceneParam._m0[77u].w * _2978) / _2964;
        float _2982 = _2981 + cbSceneParam._m0[79u].w;
        float _2983 = cbSceneParam._m0[79u].w - _2977;
        float _2989 = sqrt(((_2976 * _2976) + (_2977 * _2977)) + (_2979 * _2979));
        float _2992 = (1.0 - (cbSceneParam._m0[77u].w / _2964)) * _2989;
        float _2997 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2999 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3152;
        if (abs((_2978 - _2981) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3152 = ((((_2982 > 0.0) ? exp2(_2997 * _2982) : (2.0 - exp2(_2999 * _2982))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2992;
        }
        else
        {
            float _3112 = 1.0 / cbSceneParam._m0[80u].x;
            float _3113 = isnan(_2983) ? _2982 : (isnan(_2982) ? _2983 : max(_2982, _2983));
            float _3114 = isnan(_2983) ? _2982 : (isnan(_2982) ? _2983 : min(_2982, _2983));
            float _3123 = isnan(0.0) ? _3113 : (isnan(_3113) ? 0.0 : min(_3113, 0.0));
            float _3124 = isnan(0.0) ? _3114 : (isnan(_3114) ? 0.0 : min(_3114, 0.0));
            _3152 = ((abs(_2989 / _2978) * cbSceneParam._m0[80u].y) * ((((_3123 - _3124) * 2.0) - ((exp2(_2997 * (isnan(0.0) ? _3113 : (isnan(_3113) ? 0.0 : max(_3113, 0.0)))) - exp2(_2997 * (isnan(0.0) ? _3114 : (isnan(_3114) ? 0.0 : max(_3114, 0.0))))) * _3112)) - ((exp2(_2999 * _3123) - exp2(_2999 * _3124)) * _3112))) + (_2992 * cbSceneParam._m0[80u].z);
        }
        vec4 _3154 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2889, _2890, 1.0), 0.0);
        float _3163 = exp2((_3152 * (-1.44269502162933349609375)) * (1.0 - _3154.w));
        float _3164 = log2(_3163);
        float _3180 = log2(_2909);
        _3001 = (exp2(_3180 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3164 * cbSceneParam._m0[78u].x)) * _3154.x) / cbSceneParam._m0[78u].x)) + _2906;
        _3003 = (exp2(_3180 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3164 * cbSceneParam._m0[78u].y)) * _3154.y) / cbSceneParam._m0[78u].y)) + _2907;
        _3005 = (exp2(_3180 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3164 * cbSceneParam._m0[78u].z)) * _3154.z) / cbSceneParam._m0[78u].z)) + _2908;
        _3007 = _3163 * _2909;
    }
    else
    {
        _3001 = _2906;
        _3003 = _2907;
        _3005 = _2908;
        _3007 = _2909;
    }
    float _3019 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3020 = _3019 == 3.0;
    float _3021 = log2(_3007);
    float _3028 = exp2(_3021 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4779 : (isnan(_4779) ? 1.0 : min(_4779, 1.0))) * (_2851 + ((isnan(0.0) ? _1869 : (isnan(_1869) ? 0.0 : max(_1869, 0.0))) * _1145))) + ((_2857 + ((isnan(0.0) ? _2159 : (isnan(_2159) ? 0.0 : max(_2159, 0.0))) * _1948)) * cbPerFrame._m0[3u].x));
    float _3029 = exp2(_3021 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4790 : (isnan(_4790) ? 1.0 : min(_4790, 1.0))) * (_2853 + ((isnan(0.0) ? _1872 : (isnan(_1872) ? 0.0 : max(_1872, 0.0))) * _1145))) + ((_2859 + ((isnan(0.0) ? _2162 : (isnan(_2162) ? 0.0 : max(_2162, 0.0))) * _1948)) * cbPerFrame._m0[3u].x));
    float _3030 = exp2(_3021 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4801 : (isnan(_4801) ? 1.0 : min(_4801, 1.0))) * (_2855 + ((isnan(0.0) ? _1875 : (isnan(_1875) ? 0.0 : max(_1875, 0.0))) * _1145))) + ((_2861 + ((isnan(0.0) ? _2165 : (isnan(_2165) ? 0.0 : max(_2165, 0.0))) * _1948)) * cbPerFrame._m0[3u].x));
    float _3039 = (_3019 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3039 * (_3020 ? _3028 : (_3028 + (cbSceneParam._m0[72u].w * _3001)));
    SV_Target.y = _3039 * (_3020 ? _3029 : (_3029 + (cbSceneParam._m0[72u].w * _3003)));
    SV_Target.z = _3039 * (_3020 ? _3030 : (_3030 + (cbSceneParam._m0[72u].w * _3005)));
    SV_Target.w = cbInstanceData._m0[_2881].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2881].w;
}


