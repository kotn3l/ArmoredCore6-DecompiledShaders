#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1469;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _231 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _232 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _233 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _239 = inversesqrt(dot(vec3(_231, _232, _233), vec3(_231, _232, _233)));
    float _246 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _253 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _259 = uint(roundEven(NORMAL.w)) * 13u;
    uint _264 = _259 + 1u;
    uint _268 = _259 + 2u;
    float _277 = sqrt(((cbInstanceData._m0[_264].x * cbInstanceData._m0[_264].x) + (cbInstanceData._m0[_259].x * cbInstanceData._m0[_259].x)) + (cbInstanceData._m0[_268].x * cbInstanceData._m0[_268].x));
    float _278 = _277 * TEXCOORD.z;
    float _279 = _277 * TEXCOORD.w;
    vec4 _298 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _322 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _327 = _322.x * cbMtdParam._m0[11u].x;
    float _328 = _322.y * cbMtdParam._m0[11u].y;
    float _329 = _322.z * cbMtdParam._m0[11u].z;
    vec4 _348 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _278) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _279) + cbTextureTilingScale._m0[5u].w));
    vec4 _367 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _407 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _409 = _407.x;
    float _421 = dot(vec4(_409, _407.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _438 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _367.x) * 2.0) - ((((_409 - _421) * cbMtdParam._m0[24u].z) + _421) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3772 = isnan(0.0) ? _438 : (isnan(_438) ? 0.0 : max(_438, 0.0));
    float _439 = isnan(1.0) ? _3772 : (isnan(_3772) ? 1.0 : min(_3772, 1.0));
    float _446 = (_439 * ((_348.x * cbMtdParam._m0[12u].x) - _327)) + _327;
    float _447 = (_439 * ((_348.y * cbMtdParam._m0[12u].y) - _328)) + _328;
    float _448 = (_439 * ((_348.z * cbMtdParam._m0[12u].z) - _329)) + _329;
    vec4 _465 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _278) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _279) + cbTextureTilingScale._m0[3u].w));
    vec4 _485 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _487 = _485.x;
    float _497 = dot(vec4(_487, _485.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _511 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _367.y) * 2.0) - ((((_487 - _497) * cbMtdParam._m0[24u].z) + _497) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3783 = isnan(0.0) ? _511 : (isnan(_511) ? 0.0 : max(_511, 0.0));
    float _512 = isnan(1.0) ? _3783 : (isnan(_3783) ? 1.0 : min(_3783, 1.0));
    float _519 = (_512 * ((_465.x * cbMtdParam._m0[13u].x) - _446)) + _446;
    float _520 = (_512 * ((_465.y * cbMtdParam._m0[13u].y) - _447)) + _447;
    float _521 = (_512 * ((_465.z * cbMtdParam._m0[13u].z) - _448)) + _448;
    vec4 _539 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _278) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _279) + cbTextureTilingScale._m0[24u].w));
    vec4 _556 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _558 = _556.x;
    float _568 = dot(vec4(_558, _556.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _580 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _367.z) * 2.0) - ((((_558 - _568) * cbMtdParam._m0[24u].z) + _568) * cbMtdParam._m0[20u].z))) + 1.0;
    float _3794 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
    float _581 = isnan(1.0) ? _3794 : (isnan(_3794) ? 1.0 : min(_3794, 1.0));
    float _594 = ((cbMtdParam._m0[9u].x * 4.55000019073486328125) * _298.x) * ((_581 * ((_539.x * cbMtdParam._m0[14u].x) - _519)) + _519);
    float _597 = ((cbMtdParam._m0[9u].y * 4.55000019073486328125) * _298.y) * ((_581 * ((_539.y * cbMtdParam._m0[14u].y) - _520)) + _520);
    float _600 = ((cbMtdParam._m0[9u].z * 4.55000019073486328125) * _298.z) * ((_581 * ((_539.z * cbMtdParam._m0[14u].z) - _521)) + _521);
    vec4 _618 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _278) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _279) + cbTextureTilingScale._m0[4u].w));
    vec4 _635 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _637 = _635.x;
    float _638 = _635.y;
    float _639 = _635.z;
    float _646 = ((_618.x - _637) * _439) + _637;
    float _647 = ((_618.y - _638) * _439) + _638;
    float _648 = ((_618.z - _639) * _439) + _639;
    vec4 _660 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _278) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _279) + cbTextureTilingScale._m0[2u].w));
    float _671 = ((_660.x - _646) * _512) + _646;
    float _672 = ((_660.y - _647) * _512) + _647;
    float _673 = ((_660.z - _648) * _512) + _648;
    vec4 _685 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _278) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _279) + cbTextureTilingScale._m0[23u].w));
    float _698 = ((_685.z - _673) * _581) + _673;
    float _701 = ((((_685.x - _671) * _581) + _671) * 2.0) + (-1.0);
    float _703 = ((((_685.y - _672) * _581) + _672) * 2.0) + (-1.0);
    float _704 = dot(vec2(_701, _703), vec2(_701, _703));
    float _3805 = isnan(0.0) ? _704 : (isnan(_704) ? 0.0 : max(_704, 0.0));
    float _709 = sqrt(1.0 - (isnan(1.0) ? _3805 : (isnan(_3805) ? 1.0 : min(_3805, 1.0))));
    vec4 _723 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _748 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _278) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _279) + cbTextureTilingScale._m0[11u].w));
    float _750 = _748.x;
    float _751 = 1.0 - _750;
    float _757 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _760 = ((isnan(0.0) ? _757 : (isnan(_757) ? 0.0 : min(_757, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _769 = (_760 - ((((((_750 - _751) * cbMtdParam._m0[24u].w) + _751) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _760))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3826 = isnan(0.0) ? _769 : (isnan(_769) ? 0.0 : max(_769, 0.0));
    float _770 = isnan(1.0) ? _3826 : (isnan(_3826) ? 1.0 : min(_3826, 1.0));
    float _777 = (_770 * (cbMtdParam._m0[17u].x - _594)) + _594;
    float _778 = (_770 * (cbMtdParam._m0[17u].y - _597)) + _597;
    float _779 = (_770 * (cbMtdParam._m0[17u].z - _600)) + _600;
    vec4 _791 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _278) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _279) + cbTextureTilingScale._m0[19u].w));
    float _793 = _791.x;
    float _794 = 1.0 - _793;
    float _821 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_793 - _794) * cbMtdParam._m0[24u].y) + _794) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3837 = isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : max(_821, 0.0));
    float _822 = isnan(1.0) ? _3837 : (isnan(_3837) ? 1.0 : min(_3837, 1.0));
    float _830 = ((((cbMtdParam._m0[10u].x - _777) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _822) + _777;
    float _831 = ((((cbMtdParam._m0[10u].y - _778) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _822) + _778;
    float _832 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _779)) * _822) + _779;
    float _836 = (cbMtdParam._m0[19u].w * (_723.z - _698)) + _698;
    vec4 _850 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _278) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _279) + cbTextureTilingScale._m0[15u].w));
    float _857 = (_850.x * 2.0) + (-1.0);
    float _858 = (_850.y * 2.0) + (-1.0);
    float _859 = dot(vec2(_857, _858), vec2(_857, _858));
    float _3848 = isnan(0.0) ? _859 : (isnan(_859) ? 0.0 : max(_859, 0.0));
    float _867 = (_770 * (_850.z - _836)) + _836;
    float _870 = ((cbMtdParam._m0[23u].y - _867) * _822) + _867;
    vec4 _889 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _278) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _279) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _895 = (_889.x * 2.0) + (-1.0);
    float _896 = (_889.y * 2.0) + (-1.0);
    float _897 = dot(vec2(_895, _896), vec2(_895, _896));
    float _3859 = isnan(0.0) ? _897 : (isnan(_897) ? 0.0 : max(_897, 0.0));
    float _905 = (((_723.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _701;
    float _906 = (((_723.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _703;
    float _918 = (((_857 - _905) + (cbMtdParam._m0[21u].x * _905)) * _770) + _905;
    float _919 = (((_858 - _906) + (cbMtdParam._m0[21u].x * _906)) * _770) + _906;
    float _920 = (_770 * (sqrt(1.0 - (isnan(1.0) ? _3848 : (isnan(_3848) ? 1.0 : min(_3848, 1.0)))) - _709)) + _709;
    float _931 = (((_895 - _918) + (_918 * cbMtdParam._m0[22u].z)) * _822) + _918;
    float _932 = (((_896 - _919) + (_919 * cbMtdParam._m0[22u].z)) * _822) + _919;
    float _933 = ((sqrt(1.0 - (isnan(1.0) ? _3859 : (isnan(_3859) ? 1.0 : min(_3859, 1.0)))) - _920) * _822) + _920;
    float _935 = cbMtdParam._m0[22u].x + _723.w;
    float _938 = fma(_933, _246 * NORMAL.x, fma(_932, _253 * TANGENT.x, (_239 * _231) * _931));
    float _941 = fma(_933, _246 * NORMAL.y, fma(_932, _253 * TANGENT.y, (_239 * _232) * _931));
    float _944 = fma(_933, _246 * NORMAL.z, fma(_932, _253 * TANGENT.z, (_239 * _233) * _931));
    float _948 = inversesqrt(dot(vec3(_938, _941, _944), vec3(_938, _941, _944)));
    float _949 = _948 * _938;
    float _950 = _948 * _941;
    float _951 = _948 * _944;
    float _3870 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
    float _952 = isnan(1.0) ? _3870 : (isnan(_3870) ? 1.0 : min(_3870, 1.0));
    float _3881 = isnan(0.0) ? _935 : (isnan(_935) ? 0.0 : max(_935, 0.0));
    float _3892 = isnan(0.0) ? _830 : (isnan(_830) ? 0.0 : max(_830, 0.0));
    float _3903 = isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0));
    float _3914 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
    float _970 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1010 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1020 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1010);
    float _1021 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1010);
    float _1022 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1010);
    float _1026 = inversesqrt(dot(vec3(_1020, _1021, _1022), vec3(_1020, _1021, _1022)));
    float _1027 = _1020 * _1026;
    float _1028 = _1021 * _1026;
    float _1029 = _1022 * _1026;
    float _1035 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1036 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1054 = fma(_951, cbSceneParam._m0[5u].z, fma(_950, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _949));
    float _1057 = fma(_951, cbSceneParam._m0[6u].z, fma(_950, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _949));
    float _1060 = fma(_951, cbSceneParam._m0[7u].z, fma(_950, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _949));
    uint _1074 = (_259 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1080 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3892 : (isnan(_3892) ? 1.0 : min(_3892, 1.0)))) * cbInstanceData._m0[_1074].x;
    float _1081 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3903 : (isnan(_3903) ? 1.0 : min(_3903, 1.0)))) * cbInstanceData._m0[_1074].y;
    float _1082 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3914 : (isnan(_3914) ? 1.0 : min(_3914, 1.0)))) * cbInstanceData._m0[_1074].z;
    float _3925 = isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0));
    float _1083 = isnan(1.0) ? _3925 : (isnan(_3925) ? 1.0 : min(_3925, 1.0));
    float _3936 = isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0));
    float _1084 = isnan(1.0) ? _3936 : (isnan(_3936) ? 1.0 : min(_3936, 1.0));
    float _3947 = isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0));
    float _1085 = isnan(1.0) ? _3947 : (isnan(_3947) ? 1.0 : min(_3947, 1.0));
    vec4 _1094 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1035, cbSceneParam._m0[86u].y * _1036));
    float _1098 = ((isnan(1.0) ? _3881 : (isnan(_3881) ? 1.0 : min(_3881, 1.0))) * TEXCOORD_5.w) * _1094.x;
    float _1099 = dot(vec3(_949, _950, _951), vec3(_1027, _1028, _1029));
    float _1102 = _1099 * 2.0;
    float _1106 = (_1102 * _949) - _1027;
    float _1107 = (_1102 * _950) - _1028;
    float _1108 = (_1102 * _951) - _1029;
    float _1112 = abs(dot(vec3(_1027, _1028, _1029), vec3(_949, _950, _951)));
    float _3958 = isnan(0.0) ? _1112 : (isnan(_1112) ? 0.0 : max(_1112, 0.0));
    float _1114 = sqrt(_952);
    float _1127 = exp2((_1114 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3958 : (isnan(_3958) ? 1.0 : min(_3958, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1114 * 3.0));
    float _1159 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1163 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1167 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1468;
    float _1470;
    float _1471;
    float _1472;
    float _1473;
    float _1474;
    float _1475;
    float _1476;
    float _1477;
    float _1478;
    float _1479;
    float _1480;
    float _1481;
    float _1482;
    float _1483;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1193 = fma(_1167, cbModelParam._m0[26u].z, fma(_1163, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1159));
        float _1197 = fma(_1167, cbModelParam._m0[27u].z, fma(_1163, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1159));
        float _1201 = fma(_1167, cbModelParam._m0[28u].z, fma(_1163, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1159));
        float _1226 = _1159 + _949;
        float _1227 = _1163 + _950;
        float _1228 = _1167 + _951;
        float _1238 = fma(_1228, cbModelParam._m0[26u].z, fma(_1227, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1226)) - _1193;
        float _1239 = fma(_1228, cbModelParam._m0[27u].z, fma(_1227, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1226)) - _1197;
        float _1240 = fma(_1228, cbModelParam._m0[28u].z, fma(_1227, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1226)) - _1201;
        float _1244 = inversesqrt(dot(vec3(_1238, _1239, _1240), vec3(_1238, _1239, _1240)));
        float _1257 = ((_1244 * _1238) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1193 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1258 = ((_1244 * _1239) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1197 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1259 = ((_1244 * _1240) / cbModelParam._m0[34u].z) + ((((((_1201 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1262 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1257, _1258, _1259), 0.0);
        vec4 _1269 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1257, _1258, _1259), 0.0);
        vec4 _1276 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1257, _1258, _1259), 0.0);
        vec4 _1283 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1257, _1258, _1259), 0.0);
        float _1296 = exp2((_1262.w + (-0.5)) * 20.0) * 2.0;
        float _1297 = _1296 * (_1262.x + (-0.5));
        float _1298 = _1296 * (_1262.y + (-0.5));
        float _1299 = _1296 * (_1262.z + (-0.5));
        float _1306 = exp2((_1269.w + (-0.5)) * 20.0) * 2.0;
        float _1307 = _1306 * (_1269.x + (-0.5));
        float _1308 = _1306 * (_1269.y + (-0.5));
        float _1309 = _1306 * (_1269.z + (-0.5));
        float _1316 = exp2((_1276.w + (-0.5)) * 20.0) * 2.0;
        float _1317 = _1316 * (_1276.x + (-0.5));
        float _1318 = _1316 * (_1276.y + (-0.5));
        float _1319 = _1316 * (_1276.z + (-0.5));
        float _1326 = exp2((_1283.w + (-0.5)) * 20.0) * 2.0;
        float _1327 = _1326 * (_1283.x + (-0.5));
        float _1328 = _1326 * (_1283.y + (-0.5));
        float _1329 = _1326 * (_1283.z + (-0.5));
        float _1330 = isnan(0.0) ? _1327 : (isnan(_1327) ? 0.0 : max(_1327, 0.0));
        float _1331 = isnan(0.0) ? _1328 : (isnan(_1328) ? 0.0 : max(_1328, 0.0));
        float _1332 = isnan(0.0) ? _1329 : (isnan(_1329) ? 0.0 : max(_1329, 0.0));
        float _1333 = _1297 * 0.5;
        float _1334 = _1307 * 0.5;
        float _1335 = _1317 * 0.5;
        float _1336 = dot(vec3(_1333, _1334, _1335), vec3(_1333, _1334, _1335));
        float _1341 = (_1336 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1336);
        float _1350 = (dot(vec3(_949, _950, _951), vec3(_1341 * _1333, _1341 * _1334, _1341 * _1335)) + 1.0) * 0.5;
        float _3984 = isnan(0.0) ? _1350 : (isnan(_1350) ? 0.0 : max(_1350, 0.0));
        float _1360 = sqrt(((_1334 * _1334) + (_1333 * _1333)) + (_1335 * _1335)) / (_1330 + 9.9999997473787516355514526367188e-06);
        float _3995 = isnan(0.0) ? _1360 : (isnan(_1360) ? 0.0 : max(_1360, 0.0));
        float _1361 = isnan(1.0) ? _3995 : (isnan(_3995) ? 1.0 : min(_3995, 1.0));
        float _1362 = _1361 * 2.0;
        float _1366 = (1.0 - _1361) / (_1361 + 1.0);
        float _4006 = isnan(0.0) ? _1366 : (isnan(_1366) ? 0.0 : max(_1366, 0.0));
        float _1367 = isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0));
        float _1376 = ((((1.0 - _1367) * (_1362 + 2.0)) * exp2(log2(isnan(1.0) ? _3984 : (isnan(_3984) ? 1.0 : min(_3984, 1.0))) * (_1362 + 1.0))) + _1367) * _1330;
        float _1377 = _1298 * 0.5;
        float _1378 = _1308 * 0.5;
        float _1379 = _1318 * 0.5;
        float _1380 = dot(vec3(_1377, _1378, _1379), vec3(_1377, _1378, _1379));
        float _1385 = (_1380 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1380);
        float _1393 = (dot(vec3(_949, _950, _951), vec3(_1385 * _1377, _1385 * _1378, _1385 * _1379)) + 1.0) * 0.5;
        float _4017 = isnan(0.0) ? _1393 : (isnan(_1393) ? 0.0 : max(_1393, 0.0));
        float _1402 = sqrt(((_1378 * _1378) + (_1377 * _1377)) + (_1379 * _1379)) / (_1331 + 9.9999997473787516355514526367188e-06);
        float _4028 = isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0));
        float _1403 = isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0));
        float _1404 = _1403 * 2.0;
        float _1408 = (1.0 - _1403) / (_1403 + 1.0);
        float _4039 = isnan(0.0) ? _1408 : (isnan(_1408) ? 0.0 : max(_1408, 0.0));
        float _1409 = isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0));
        float _1418 = ((((1.0 - _1409) * (_1404 + 2.0)) * exp2(log2(isnan(1.0) ? _4017 : (isnan(_4017) ? 1.0 : min(_4017, 1.0))) * (_1404 + 1.0))) + _1409) * _1331;
        float _1419 = _1299 * 0.5;
        float _1420 = _1309 * 0.5;
        float _1421 = _1319 * 0.5;
        float _1422 = dot(vec3(_1419, _1420, _1421), vec3(_1419, _1420, _1421));
        float _1427 = (_1422 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1422);
        float _1435 = (dot(vec3(_949, _950, _951), vec3(_1427 * _1419, _1427 * _1420, _1427 * _1421)) + 1.0) * 0.5;
        float _4050 = isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0));
        float _1444 = sqrt(((_1420 * _1420) + (_1419 * _1419)) + (_1421 * _1421)) / (_1332 + 9.9999997473787516355514526367188e-06);
        float _4061 = isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0));
        float _1445 = isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0));
        float _1446 = _1445 * 2.0;
        float _1450 = (1.0 - _1445) / (_1445 + 1.0);
        float _4072 = isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0));
        float _1451 = isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0));
        float _1460 = ((((1.0 - _1451) * (_1446 + 2.0)) * exp2(log2(isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0))) * (_1446 + 1.0))) + _1451) * _1332;
        _1468 = _1299;
        _1470 = _1298;
        _1471 = _1297;
        _1472 = _1309;
        _1473 = _1308;
        _1474 = _1307;
        _1475 = _1319;
        _1476 = _1318;
        _1477 = _1317;
        _1478 = _1332;
        _1479 = _1331;
        _1480 = _1330;
        _1481 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1376 : (isnan(_1376) ? 0.0 : max(_1376, 0.0)));
        _1482 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1418 : (isnan(_1418) ? 0.0 : max(_1418, 0.0)));
        _1483 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0)));
    }
    else
    {
        _1468 = _1469;
        _1470 = _1469;
        _1471 = _1469;
        _1472 = _1469;
        _1473 = _1469;
        _1474 = _1469;
        _1475 = _1469;
        _1476 = _1469;
        _1477 = _1469;
        _1478 = _1469;
        _1479 = _1469;
        _1480 = _1469;
        _1481 = 0.0;
        _1482 = 0.0;
        _1483 = 0.0;
    }
    float _1775;
    float _1776;
    float _1777;
    float _1778;
    float _1779;
    float _1780;
    float _1781;
    float _1782;
    float _1783;
    float _1784;
    float _1785;
    float _1786;
    float _1787;
    float _1788;
    float _1789;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1506 = fma(_1167, cbModelParam._m0[30u].z, fma(_1163, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1159));
        float _1510 = fma(_1167, cbModelParam._m0[31u].z, fma(_1163, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1159));
        float _1514 = fma(_1167, cbModelParam._m0[32u].z, fma(_1163, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1159));
        float _1537 = _1159 + _949;
        float _1538 = _1163 + _950;
        float _1539 = _1167 + _951;
        float _1549 = fma(_1539, cbModelParam._m0[30u].z, fma(_1538, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1537)) - _1506;
        float _1550 = fma(_1539, cbModelParam._m0[31u].z, fma(_1538, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1537)) - _1510;
        float _1551 = fma(_1539, cbModelParam._m0[32u].z, fma(_1538, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1537)) - _1514;
        float _1555 = inversesqrt(dot(vec3(_1549, _1550, _1551), vec3(_1549, _1550, _1551)));
        float _1568 = ((_1555 * _1549) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1506 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1569 = ((_1555 * _1550) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1510 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1570 = ((_1555 * _1551) / cbModelParam._m0[35u].z) + ((((((_1514 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1572 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1568, _1569, _1570), 0.0);
        vec4 _1579 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1568, _1569, _1570), 0.0);
        vec4 _1586 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1568, _1569, _1570), 0.0);
        vec4 _1593 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1568, _1569, _1570), 0.0);
        float _1605 = exp2((_1572.w + (-0.5)) * 20.0) * 2.0;
        float _1606 = _1605 * (_1572.x + (-0.5));
        float _1607 = _1605 * (_1572.y + (-0.5));
        float _1608 = _1605 * (_1572.z + (-0.5));
        float _1615 = exp2((_1579.w + (-0.5)) * 20.0) * 2.0;
        float _1616 = _1615 * (_1579.x + (-0.5));
        float _1617 = _1615 * (_1579.y + (-0.5));
        float _1618 = _1615 * (_1579.z + (-0.5));
        float _1625 = exp2((_1586.w + (-0.5)) * 20.0) * 2.0;
        float _1626 = _1625 * (_1586.x + (-0.5));
        float _1627 = _1625 * (_1586.y + (-0.5));
        float _1628 = _1625 * (_1586.z + (-0.5));
        float _1635 = exp2((_1593.w + (-0.5)) * 20.0) * 2.0;
        float _1636 = _1635 * (_1593.x + (-0.5));
        float _1637 = _1635 * (_1593.y + (-0.5));
        float _1638 = _1635 * (_1593.z + (-0.5));
        float _1639 = isnan(0.0) ? _1636 : (isnan(_1636) ? 0.0 : max(_1636, 0.0));
        float _1640 = isnan(0.0) ? _1637 : (isnan(_1637) ? 0.0 : max(_1637, 0.0));
        float _1641 = isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0));
        float _1642 = _1606 * 0.5;
        float _1643 = _1616 * 0.5;
        float _1644 = _1626 * 0.5;
        float _1645 = dot(vec3(_1642, _1643, _1644), vec3(_1642, _1643, _1644));
        float _1650 = (_1645 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1645);
        float _1658 = (dot(vec3(_949, _950, _951), vec3(_1650 * _1642, _1650 * _1643, _1650 * _1644)) + 1.0) * 0.5;
        float _4113 = isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0));
        float _1667 = sqrt(((_1643 * _1643) + (_1642 * _1642)) + (_1644 * _1644)) / (_1639 + 9.9999997473787516355514526367188e-06);
        float _4124 = isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0));
        float _1668 = isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0));
        float _1669 = _1668 * 2.0;
        float _1673 = (1.0 - _1668) / (_1668 + 1.0);
        float _4135 = isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0));
        float _1674 = isnan(1.0) ? _4135 : (isnan(_4135) ? 1.0 : min(_4135, 1.0));
        float _1683 = ((((1.0 - _1674) * (_1669 + 2.0)) * exp2(log2(isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0))) * (_1669 + 1.0))) + _1674) * _1639;
        float _1684 = _1607 * 0.5;
        float _1685 = _1617 * 0.5;
        float _1686 = _1627 * 0.5;
        float _1687 = dot(vec3(_1684, _1685, _1686), vec3(_1684, _1685, _1686));
        float _1692 = (_1687 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1687);
        float _1700 = (dot(vec3(_949, _950, _951), vec3(_1692 * _1684, _1692 * _1685, _1692 * _1686)) + 1.0) * 0.5;
        float _4146 = isnan(0.0) ? _1700 : (isnan(_1700) ? 0.0 : max(_1700, 0.0));
        float _1709 = sqrt(((_1685 * _1685) + (_1684 * _1684)) + (_1686 * _1686)) / (_1640 + 9.9999997473787516355514526367188e-06);
        float _4157 = isnan(0.0) ? _1709 : (isnan(_1709) ? 0.0 : max(_1709, 0.0));
        float _1710 = isnan(1.0) ? _4157 : (isnan(_4157) ? 1.0 : min(_4157, 1.0));
        float _1711 = _1710 * 2.0;
        float _1715 = (1.0 - _1710) / (_1710 + 1.0);
        float _4168 = isnan(0.0) ? _1715 : (isnan(_1715) ? 0.0 : max(_1715, 0.0));
        float _1716 = isnan(1.0) ? _4168 : (isnan(_4168) ? 1.0 : min(_4168, 1.0));
        float _1725 = ((((1.0 - _1716) * (_1711 + 2.0)) * exp2(log2(isnan(1.0) ? _4146 : (isnan(_4146) ? 1.0 : min(_4146, 1.0))) * (_1711 + 1.0))) + _1716) * _1640;
        float _1726 = _1608 * 0.5;
        float _1727 = _1618 * 0.5;
        float _1728 = _1628 * 0.5;
        float _1729 = dot(vec3(_1726, _1727, _1728), vec3(_1726, _1727, _1728));
        float _1734 = (_1729 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1729);
        float _1742 = (dot(vec3(_949, _950, _951), vec3(_1734 * _1726, _1734 * _1727, _1734 * _1728)) + 1.0) * 0.5;
        float _4179 = isnan(0.0) ? _1742 : (isnan(_1742) ? 0.0 : max(_1742, 0.0));
        float _1751 = sqrt(((_1727 * _1727) + (_1726 * _1726)) + (_1728 * _1728)) / (_1641 + 9.9999997473787516355514526367188e-06);
        float _4190 = isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0));
        float _1752 = isnan(1.0) ? _4190 : (isnan(_4190) ? 1.0 : min(_4190, 1.0));
        float _1753 = _1752 * 2.0;
        float _1757 = (1.0 - _1752) / (_1752 + 1.0);
        float _4201 = isnan(0.0) ? _1757 : (isnan(_1757) ? 0.0 : max(_1757, 0.0));
        float _1758 = isnan(1.0) ? _4201 : (isnan(_4201) ? 1.0 : min(_4201, 1.0));
        float _1767 = ((((1.0 - _1758) * (_1753 + 2.0)) * exp2(log2(isnan(1.0) ? _4179 : (isnan(_4179) ? 1.0 : min(_4179, 1.0))) * (_1753 + 1.0))) + _1758) * _1641;
        _1775 = _1608;
        _1776 = _1607;
        _1777 = _1606;
        _1778 = _1618;
        _1779 = _1617;
        _1780 = _1616;
        _1781 = _1628;
        _1782 = _1627;
        _1783 = _1626;
        _1784 = _1641;
        _1785 = _1640;
        _1786 = _1639;
        _1787 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1683 : (isnan(_1683) ? 0.0 : max(_1683, 0.0)));
        _1788 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1725 : (isnan(_1725) ? 0.0 : max(_1725, 0.0)));
        _1789 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1767 : (isnan(_1767) ? 0.0 : max(_1767, 0.0)));
    }
    else
    {
        _1775 = _1469;
        _1776 = _1469;
        _1777 = _1469;
        _1778 = _1469;
        _1779 = _1469;
        _1780 = _1469;
        _1781 = _1469;
        _1782 = _1469;
        _1783 = _1469;
        _1784 = _1469;
        _1785 = _1469;
        _1786 = _1469;
        _1787 = 0.0;
        _1788 = 0.0;
        _1789 = 0.0;
    }
    float _1799 = (cbModelParam._m0[1u].x * (_1787 - _1481)) + _1481;
    float _1800 = (cbModelParam._m0[1u].x * (_1788 - _1482)) + _1482;
    float _1801 = (cbModelParam._m0[1u].x * (_1789 - _1483)) + _1483;
    float _1822 = fma(_1801, cbSceneParam._m0[89u].z, fma(_1800, cbSceneParam._m0[89u].y, _1799 * cbSceneParam._m0[89u].x));
    float _1825 = fma(_1801, cbSceneParam._m0[90u].z, fma(_1800, cbSceneParam._m0[90u].y, _1799 * cbSceneParam._m0[90u].x));
    float _1828 = fma(_1801, cbSceneParam._m0[91u].z, fma(_1800, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1799));
    float _1843 = _1106 * 0.5;
    float _1844 = _1107 * 0.5;
    float _1845 = _1108 * 0.5;
    float _1846 = dot(vec4(_1843, _1844, _1845, 1.0), vec4(_1777, _1780, _1783, _1786));
    float _1849 = dot(vec4(_1843, _1844, _1845, 1.0), vec4(_1776, _1779, _1782, _1785));
    float _1852 = dot(vec4(_1843, _1844, _1845, 1.0), vec4(_1775, _1778, _1781, _1784));
    float _1886;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1859 = dot(vec4(_1843, _1844, _1845, 1.0), vec4(_1468, _1472, _1475, _1478));
        float _1863 = dot(vec4(_1843, _1844, _1845, 1.0), vec4(_1470, _1473, _1476, _1479));
        float _1867 = dot(vec4(_1843, _1844, _1845, 1.0), vec4(_1471, _1474, _1477, _1480));
        float _1874 = dot(vec4(cbModelParam._m0[39u]), vec4(_1843, _1844, _1845, 1.0));
        _1886 = dot(vec3(isnan(0.0) ? _1867 : (isnan(_1867) ? 0.0 : max(_1867, 0.0)), isnan(0.0) ? _1863 : (isnan(_1863) ? 0.0 : max(_1863, 0.0)), isnan(0.0) ? _1859 : (isnan(_1859) ? 0.0 : max(_1859, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1874) ? 0.0 : (isnan(0.0) ? _1874 : max(0.0, _1874))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1886 = 1.0;
    }
    float _1897;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1888 = dot(vec4(cbModelParam._m0[40u]), vec4(_1843, _1844, _1845, 1.0));
        _1897 = dot(vec3(isnan(0.0) ? _1846 : (isnan(_1846) ? 0.0 : max(_1846, 0.0)), isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0)), isnan(0.0) ? _1852 : (isnan(_1852) ? 0.0 : max(_1852, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1888) ? 0.0 : (isnan(0.0) ? _1888 : max(0.0, _1888))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1897 = 1.0;
    }
    float _1901 = (_1897 * cbModelParam._m0[1u].x) + (_1886 * (1.0 - cbModelParam._m0[1u].x));
    float _1911 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _952);
    float _1912 = isnan(_1911) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1911 : min(cbModelParam._m0[25u].z, _1911));
    float _1992;
    float _1994;
    float _1996;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1959 = fma(_1167, cbModelParam._m0[13u].z, fma(_1163, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1159)) + cbModelParam._m0[13u].w;
        float _1963 = fma(_1167, cbModelParam._m0[14u].z, fma(_1163, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1159)) + cbModelParam._m0[14u].w;
        float _1967 = fma(_1167, cbModelParam._m0[15u].z, fma(_1163, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1159)) + cbModelParam._m0[15u].w;
        float _1970 = fma(_1108, cbModelParam._m0[13u].z, fma(_1107, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1106));
        float _1973 = fma(_1108, cbModelParam._m0[14u].z, fma(_1107, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1106));
        float _1976 = fma(_1108, cbModelParam._m0[15u].z, fma(_1107, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1106));
        float _2004;
        if (_1970 > 0.0)
        {
            _2004 = abs((1.0 - _1959) / _1970);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1970 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1959 + 1.0) / _1970);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2004 = frontier_phi_14_12_ladder;
        }
        float _2205;
        if (_1973 > 0.0)
        {
            _2205 = abs((1.0 - _1963) / _1973);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1973 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1963 + 1.0) / _1973);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2205 = frontier_phi_23_19_ladder;
        }
        float _2448;
        if (_1976 > 0.0)
        {
            _2448 = abs((1.0 - _1967) / _1976);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1976 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1967 + 1.0) / _1976);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2448 = frontier_phi_35_30_ladder;
        }
        float _2450 = isnan(_2205) ? _2004 : (isnan(_2004) ? _2205 : min(_2004, _2205));
        float _2451 = isnan(_2448) ? _2450 : (isnan(_2450) ? _2448 : min(_2450, _2448));
        float _2455 = (_2451 * _1970) + _1959;
        float _2456 = (_2451 * _1973) + _1963;
        float _2457 = (_2451 * _1976) + _1967;
        float _2458 = _2451 * 9.9999997473787516355514526367188e-05;
        float _2460 = (-1.0) - _2458;
        float _2462 = _2458 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2457 > _2462) || ((_2457 < _2460) || ((_2456 > _2462) || ((_2456 < _2460) || ((_2455 < _2460) || (_2455 > _2462))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2581 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2457, cbModelParam._m0[9u].z, fma(_2456, cbModelParam._m0[9u].y, _2455 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2457, cbModelParam._m0[10u].z, fma(_2456, cbModelParam._m0[10u].y, _2455 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2457, cbModelParam._m0[11u].z, fma(_2456, cbModelParam._m0[11u].y, _2455 * cbModelParam._m0[11u].x))), _1912);
            frontier_phi_13_35_ladder = _2581.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2581.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2581.x * cbModelParam._m0[1u].y;
        }
        _1992 = frontier_phi_13_35_ladder_2;
        _1994 = frontier_phi_13_35_ladder_1;
        _1996 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1980 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1106, _1107, _1108), _1912);
        _1992 = _1980.x * cbModelParam._m0[1u].y;
        _1994 = _1980.y * cbModelParam._m0[1u].y;
        _1996 = _1980.z * cbModelParam._m0[1u].y;
    }
    float _2000 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _952);
    float _2001 = isnan(_2000) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2000 : min(cbModelParam._m0[25u].w, _2000));
    float _2091;
    float _2093;
    float _2095;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2055 = fma(_1167, cbModelParam._m0[21u].z, fma(_1163, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1159)) + cbModelParam._m0[21u].w;
        float _2059 = fma(_1167, cbModelParam._m0[22u].z, fma(_1163, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1159)) + cbModelParam._m0[22u].w;
        float _2063 = fma(_1167, cbModelParam._m0[23u].z, fma(_1163, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1159)) + cbModelParam._m0[23u].w;
        float _2066 = fma(_1108, cbModelParam._m0[21u].z, fma(_1107, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1106));
        float _2069 = fma(_1108, cbModelParam._m0[22u].z, fma(_1107, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1106));
        float _2072 = fma(_1108, cbModelParam._m0[23u].z, fma(_1107, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1106));
        float _2210;
        if (_2066 > 0.0)
        {
            _2210 = abs((1.0 - _2055) / _2066);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2066 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2055 + 1.0) / _2066);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2210 = frontier_phi_25_21_ladder;
        }
        float _2475;
        if (_2069 > 0.0)
        {
            _2475 = abs((1.0 - _2059) / _2069);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2069 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2059 + 1.0) / _2069);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2475 = frontier_phi_37_32_ladder;
        }
        float _2680;
        if (_2072 > 0.0)
        {
            _2680 = abs((1.0 - _2063) / _2072);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2072 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2063 + 1.0) / _2072);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2680 = frontier_phi_46_43_ladder;
        }
        float _2682 = isnan(_2475) ? _2210 : (isnan(_2210) ? _2475 : min(_2210, _2475));
        float _2683 = isnan(_2680) ? _2682 : (isnan(_2682) ? _2680 : min(_2682, _2680));
        float _2687 = (_2683 * _2066) + _2055;
        float _2688 = (_2683 * _2069) + _2059;
        float _2689 = (_2683 * _2072) + _2063;
        float _2690 = _2683 * 9.9999997473787516355514526367188e-05;
        float _2691 = (-1.0) - _2690;
        float _2693 = _2690 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2689 > _2693) || ((_2689 < _2691) || ((_2688 > _2693) || ((_2688 < _2691) || ((_2687 < _2691) || (_2687 > _2693))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2888 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2689, cbModelParam._m0[17u].z, fma(_2688, cbModelParam._m0[17u].y, _2687 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2689, cbModelParam._m0[18u].z, fma(_2688, cbModelParam._m0[18u].y, _2687 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2689, cbModelParam._m0[19u].z, fma(_2688, cbModelParam._m0[19u].y, _2687 * cbModelParam._m0[19u].x))), _2001);
            frontier_phi_22_46_ladder = _2888.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2888.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2888.x * cbModelParam._m0[1u].z;
        }
        _2091 = frontier_phi_22_46_ladder_2;
        _2093 = frontier_phi_22_46_ladder_1;
        _2095 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2075 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1106, _1107, _1108), _2001);
        _2091 = _2075.x * cbModelParam._m0[1u].z;
        _2093 = _2075.y * cbModelParam._m0[1u].z;
        _2095 = _2075.z * cbModelParam._m0[1u].z;
    }
    float _2107 = ((((1.0 - _1127) * ((_1114 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1127 * _1114)) * _1098;
    float _2108 = _2107 * ((cbModelParam._m0[1u].w * (_2091 - _1992)) + _1992);
    float _2109 = _2107 * ((cbModelParam._m0[1u].w * (_2093 - _1994)) + _1994);
    float _2110 = _2107 * ((cbModelParam._m0[1u].w * (_2095 - _1996)) + _1996);
    float _2113 = fma(_2110, cbSceneParam._m0[89u].z, fma(_2109, cbSceneParam._m0[89u].y, _2108 * cbSceneParam._m0[89u].x));
    float _2116 = fma(_2110, cbSceneParam._m0[90u].z, fma(_2109, cbSceneParam._m0[90u].y, _2108 * cbSceneParam._m0[90u].x));
    float _2119 = fma(_2110, cbSceneParam._m0[91u].z, fma(_2109, cbSceneParam._m0[91u].y, _2108 * cbSceneParam._m0[91u].x));
    uvec4 _2129 = floatBitsToUint(cbInstanceData._m0[_259 + 5u]);
    uint _2131 = _2129.x * 14u;
    uint _2132 = _2131 + 13u;
    float _2139 = _1098 + (-1.0);
    float _2144 = (cbLight._m0[_2132].x * _2139) + 1.0;
    float _2145 = (cbLight._m0[_2132].y * _2139) + 1.0;
    float _2146 = (cbLight._m0[_2132].z * _2139) + 1.0;
    float _2147 = (cbLight._m0[_2132].w * _2139) + 1.0;
    uint _2148 = _2131 + 5u;
    float _2154 = isnan(1.0) ? _2145 : (isnan(_2145) ? 1.0 : min(_2145, 1.0));
    uint _2158 = _2131 + 4u;
    float _2164 = isnan(1.0) ? _2144 : (isnan(_2144) ? 1.0 : min(_2144, 1.0));
    uint _2168 = _2131 | 1u;
    float _2179 = dot(vec3(cbLight._m0[_2131].xyz), vec3(_949, _950, _951));
    float _2182 = dot(vec3(cbLight._m0[_2168].xyz), vec3(_949, _950, _951));
    float _4337 = isnan(0.0) ? _2179 : (isnan(_2179) ? 0.0 : max(_2179, 0.0));
    float _4348 = isnan(0.0) ? _2182 : (isnan(_2182) ? 0.0 : max(_2182, 0.0));
    float _2187 = (isnan(1.0) ? _4337 : (isnan(_4337) ? 1.0 : min(_4337, 1.0))) * 0.3183098733425140380859375;
    float _2189 = (isnan(1.0) ? _4348 : (isnan(_4348) ? 1.0 : min(_4348, 1.0))) * 0.3183098733425140380859375;
    float _2196 = ((cbLight._m0[_2148].x * _2154) * _2189) + ((cbLight._m0[_2158].x * _2164) * _2187);
    float _2197 = ((_2154 * cbLight._m0[_2148].y) * _2189) + ((_2164 * cbLight._m0[_2158].y) * _2187);
    float _2198 = ((_2154 * cbLight._m0[_2148].z) * _2189) + ((_2164 * cbLight._m0[_2158].z) * _2187);
    uvec4 _2202 = floatBitsToUint(cbLight._m0[_2131 + 12u]);
    bool _2204 = _2202.x == 0u;
    float _2215;
    float _2217;
    float _2219;
    if (_2204)
    {
        _2215 = _2196;
        _2217 = _2197;
        _2219 = _2198;
    }
    else
    {
        uint _2223 = _2131 + 6u;
        float _2239 = (dot(vec3(cbLight._m0[_2131 + 2u].xyz), vec3(_949, _950, _951)) * 0.5) + 0.5;
        float _2240 = _2239 * _2239;
        float _4359 = isnan(0.0) ? _2240 : (isnan(_2240) ? 0.0 : max(_2240, 0.0));
        float _2241 = isnan(1.0) ? _4359 : (isnan(_4359) ? 1.0 : min(_4359, 1.0));
        float _2242 = isnan(1.0) ? _2146 : (isnan(_2146) ? 1.0 : min(_2146, 1.0));
        _2215 = (((cbLight._m0[_2223].x * 0.3183098733425140380859375) * _2241) * _2242) + _2196;
        _2217 = (((cbLight._m0[_2223].y * 0.3183098733425140380859375) * _2241) * _2242) + _2197;
        _2219 = (((cbLight._m0[_2223].z * 0.3183098733425140380859375) * _2241) * _2242) + _2198;
    }
    bool _2222 = _2202.y == 0u;
    float _2260;
    float _2262;
    float _2264;
    if (_2222)
    {
        _2260 = _2215;
        _2262 = _2217;
        _2264 = _2219;
    }
    else
    {
        uint _2419 = _2131 + 7u;
        float _2435 = (dot(vec3(cbLight._m0[_2131 + 3u].xyz), vec3(_949, _950, _951)) * 0.5) + 0.5;
        float _2436 = _2435 * _2435;
        float _4375 = isnan(0.0) ? _2436 : (isnan(_2436) ? 0.0 : max(_2436, 0.0));
        float _2437 = isnan(1.0) ? _4375 : (isnan(_4375) ? 1.0 : min(_4375, 1.0));
        float _2438 = isnan(1.0) ? _2147 : (isnan(_2147) ? 1.0 : min(_2147, 1.0));
        _2260 = (((cbLight._m0[_2419].x * 0.3183098733425140380859375) * _2437) * _2438) + _2215;
        _2262 = (((cbLight._m0[_2419].y * 0.3183098733425140380859375) * _2437) * _2438) + _2217;
        _2264 = (((cbLight._m0[_2419].z * 0.3183098733425140380859375) * _2437) * _2438) + _2219;
    }
    uint _2267 = _2131 + 8u;
    float _2280 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2131].w)) * _952) * 0.949999988079071044921875);
    float _2281 = _2280 * _2280;
    float _2282 = cbLight._m0[_2131].x + _1027;
    float _2283 = cbLight._m0[_2131].y + _1028;
    float _2284 = cbLight._m0[_2131].z + _1029;
    float _2288 = inversesqrt(dot(vec3(_2282, _2283, _2284), vec3(_2282, _2283, _2284)));
    float _2289 = _2288 * _2282;
    float _2290 = _2288 * _2283;
    float _2291 = _2288 * _2284;
    float _2292 = dot(vec3(_949, _950, _951), vec3(cbLight._m0[_2131].xyz));
    float _4391 = isnan(0.0) ? _2292 : (isnan(_2292) ? 0.0 : max(_2292, 0.0));
    float _2295 = isnan(1.0) ? _4391 : (isnan(_4391) ? 1.0 : min(_4391, 1.0));
    float _4402 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
    float _2296 = isnan(1.0) ? _4402 : (isnan(_4402) ? 1.0 : min(_4402, 1.0));
    float _2297 = dot(vec3(_949, _950, _951), vec3(_2289, _2290, _2291));
    float _4413 = isnan(0.0) ? _2297 : (isnan(_2297) ? 0.0 : max(_2297, 0.0));
    float _2300 = isnan(1.0) ? _4413 : (isnan(_4413) ? 1.0 : min(_4413, 1.0));
    float _2301 = dot(vec3(cbLight._m0[_2131].xyz), vec3(_2289, _2290, _2291));
    float _4424 = isnan(0.0) ? _2301 : (isnan(_2301) ? 0.0 : max(_2301, 0.0));
    float _2305 = _2281 * _2281;
    float _2309 = ((_2300 * _2300) * (_2305 + (-1.0))) + 1.0;
    float _2320 = (exp2(log2(1.0 - (isnan(1.0) ? _4424 : (isnan(_4424) ? 1.0 : min(_4424, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2321 = 1.0 - _2281;
    float _2332 = (0.5 / (((_2296 * ((_2295 * _2321) + _2281)) + 9.9999999392252902907785028219223e-09) + (((_2296 * _2321) + _2281) * _2295))) * _2295;
    float _4435 = isnan(0.0) ? _2332 : (isnan(_2332) ? 0.0 : max(_2332, 0.0));
    float _2334 = (isnan(1.0) ? _4435 : (isnan(_4435) ? 1.0 : min(_4435, 1.0))) * (_2305 / ((_2309 * _2309) * 3.141590118408203125));
    uint _2345 = _2131 + 9u;
    float _2356 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2168].w)) * _952) * 0.949999988079071044921875);
    float _2357 = _2356 * _2356;
    float _2358 = cbLight._m0[_2168].x + _1027;
    float _2359 = cbLight._m0[_2168].y + _1028;
    float _2360 = cbLight._m0[_2168].z + _1029;
    float _2364 = inversesqrt(dot(vec3(_2358, _2359, _2360), vec3(_2358, _2359, _2360)));
    float _2365 = _2364 * _2358;
    float _2366 = _2364 * _2359;
    float _2367 = _2364 * _2360;
    float _2368 = dot(vec3(_949, _950, _951), vec3(cbLight._m0[_2168].xyz));
    float _4446 = isnan(0.0) ? _2368 : (isnan(_2368) ? 0.0 : max(_2368, 0.0));
    float _2371 = isnan(1.0) ? _4446 : (isnan(_4446) ? 1.0 : min(_4446, 1.0));
    float _2372 = dot(vec3(_949, _950, _951), vec3(_2365, _2366, _2367));
    float _4457 = isnan(0.0) ? _2372 : (isnan(_2372) ? 0.0 : max(_2372, 0.0));
    float _2375 = isnan(1.0) ? _4457 : (isnan(_4457) ? 1.0 : min(_4457, 1.0));
    float _2376 = dot(vec3(cbLight._m0[_2168].xyz), vec3(_2365, _2366, _2367));
    float _4468 = isnan(0.0) ? _2376 : (isnan(_2376) ? 0.0 : max(_2376, 0.0));
    float _2380 = _2357 * _2357;
    float _2384 = ((_2375 * _2375) * (_2380 + (-1.0))) + 1.0;
    float _2393 = (exp2(log2(1.0 - (isnan(1.0) ? _4468 : (isnan(_4468) ? 1.0 : min(_4468, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2394 = 1.0 - _2357;
    float _2404 = (0.5 / (((_2296 * ((_2371 * _2394) + _2357)) + 9.9999999392252902907785028219223e-09) + (((_2296 * _2394) + _2357) * _2371))) * _2371;
    float _4479 = isnan(0.0) ? _2404 : (isnan(_2404) ? 0.0 : max(_2404, 0.0));
    float _2406 = (isnan(1.0) ? _4479 : (isnan(_4479) ? 1.0 : min(_4479, 1.0))) * (_2380 / ((_2384 * _2384) * 3.141590118408203125));
    float _2416 = (((_2393 * cbLight._m0[_2345].x) * _2406) * _2154) + (((_2320 * cbLight._m0[_2267].x) * _2334) * _2164);
    float _2417 = (((_2393 * cbLight._m0[_2345].y) * _2406) * _2154) + (((_2320 * cbLight._m0[_2267].y) * _2334) * _2164);
    float _2418 = (((_2393 * cbLight._m0[_2345].z) * _2406) * _2154) + (((_2320 * cbLight._m0[_2267].z) * _2334) * _2164);
    float _2480;
    float _2482;
    float _2484;
    if (_2204)
    {
        _2480 = _2416;
        _2482 = _2417;
        _2484 = _2418;
    }
    else
    {
        uint _2486 = _2131 + 2u;
        uint _2490 = _2131 + 10u;
        float _2504 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2486].w)) * _952) * 0.949999988079071044921875);
        float _2505 = _2504 * _2504;
        float _2506 = cbLight._m0[_2486].x + _1027;
        float _2507 = cbLight._m0[_2486].y + _1028;
        float _2508 = cbLight._m0[_2486].z + _1029;
        float _2512 = inversesqrt(dot(vec3(_2506, _2507, _2508), vec3(_2506, _2507, _2508)));
        float _2513 = _2512 * _2506;
        float _2514 = _2512 * _2507;
        float _2515 = _2512 * _2508;
        float _2516 = dot(vec3(_949, _950, _951), vec3(cbLight._m0[_2486].xyz));
        float _4490 = isnan(0.0) ? _2516 : (isnan(_2516) ? 0.0 : max(_2516, 0.0));
        float _2519 = isnan(1.0) ? _4490 : (isnan(_4490) ? 1.0 : min(_4490, 1.0));
        float _2520 = dot(vec3(_949, _950, _951), vec3(_2513, _2514, _2515));
        float _4501 = isnan(0.0) ? _2520 : (isnan(_2520) ? 0.0 : max(_2520, 0.0));
        float _2523 = isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0));
        float _2524 = dot(vec3(cbLight._m0[_2486].xyz), vec3(_2513, _2514, _2515));
        float _4512 = isnan(0.0) ? _2524 : (isnan(_2524) ? 0.0 : max(_2524, 0.0));
        float _2528 = _2505 * _2505;
        float _2532 = ((_2523 * _2523) * (_2528 + (-1.0))) + 1.0;
        float _2541 = (exp2(log2(1.0 - (isnan(1.0) ? _4512 : (isnan(_4512) ? 1.0 : min(_4512, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2542 = 1.0 - _2505;
        float _2552 = (0.5 / (((_2296 * ((_2519 * _2542) + _2505)) + 9.9999999392252902907785028219223e-09) + (((_2296 * _2542) + _2505) * _2519))) * _2519;
        float _4523 = isnan(0.0) ? _2552 : (isnan(_2552) ? 0.0 : max(_2552, 0.0));
        float _2554 = (isnan(1.0) ? _4523 : (isnan(_4523) ? 1.0 : min(_4523, 1.0))) * (_2528 / ((_2532 * _2532) * 3.141590118408203125));
        float _2555 = isnan(1.0) ? _2146 : (isnan(_2146) ? 1.0 : min(_2146, 1.0));
        _2480 = (((_2541 * cbLight._m0[_2490].x) * _2554) * _2555) + _2416;
        _2482 = (((_2541 * cbLight._m0[_2490].y) * _2554) * _2555) + _2417;
        _2484 = (((_2541 * cbLight._m0[_2490].z) * _2554) * _2555) + _2418;
    }
    float _2590;
    float _2592;
    float _2594;
    if (_2222)
    {
        _2590 = _2480;
        _2592 = _2482;
        _2594 = _2484;
    }
    else
    {
        uint _2601 = _2131 + 3u;
        uint _2605 = _2131 + 11u;
        float _2619 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2601].w)) * _952) * 0.949999988079071044921875);
        float _2620 = _2619 * _2619;
        float _2621 = cbLight._m0[_2601].x + _1027;
        float _2622 = cbLight._m0[_2601].y + _1028;
        float _2623 = cbLight._m0[_2601].z + _1029;
        float _2627 = inversesqrt(dot(vec3(_2621, _2622, _2623), vec3(_2621, _2622, _2623)));
        float _2628 = _2627 * _2621;
        float _2629 = _2627 * _2622;
        float _2630 = _2627 * _2623;
        float _2631 = dot(vec3(_949, _950, _951), vec3(cbLight._m0[_2601].xyz));
        float _4539 = isnan(0.0) ? _2631 : (isnan(_2631) ? 0.0 : max(_2631, 0.0));
        float _2634 = isnan(1.0) ? _4539 : (isnan(_4539) ? 1.0 : min(_4539, 1.0));
        float _2635 = dot(vec3(_949, _950, _951), vec3(_2628, _2629, _2630));
        float _4550 = isnan(0.0) ? _2635 : (isnan(_2635) ? 0.0 : max(_2635, 0.0));
        float _2638 = isnan(1.0) ? _4550 : (isnan(_4550) ? 1.0 : min(_4550, 1.0));
        float _2639 = dot(vec3(cbLight._m0[_2601].xyz), vec3(_2628, _2629, _2630));
        float _4561 = isnan(0.0) ? _2639 : (isnan(_2639) ? 0.0 : max(_2639, 0.0));
        float _2643 = _2620 * _2620;
        float _2647 = ((_2638 * _2638) * (_2643 + (-1.0))) + 1.0;
        float _2656 = (exp2(log2(1.0 - (isnan(1.0) ? _4561 : (isnan(_4561) ? 1.0 : min(_4561, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2657 = 1.0 - _2620;
        float _2667 = (0.5 / (((_2296 * ((_2634 * _2657) + _2620)) + 9.9999999392252902907785028219223e-09) + (((_2296 * _2657) + _2620) * _2634))) * _2634;
        float _4572 = isnan(0.0) ? _2667 : (isnan(_2667) ? 0.0 : max(_2667, 0.0));
        float _2669 = (isnan(1.0) ? _4572 : (isnan(_4572) ? 1.0 : min(_4572, 1.0))) * (_2643 / ((_2647 * _2647) * 3.141590118408203125));
        float _2670 = isnan(1.0) ? _2147 : (isnan(_2147) ? 1.0 : min(_2147, 1.0));
        _2590 = (((_2656 * cbLight._m0[_2605].x) * _2669) * _2670) + _2480;
        _2592 = (((_2656 * cbLight._m0[_2605].y) * _2669) * _2670) + _2482;
        _2594 = (((_2656 * cbLight._m0[_2605].z) * _2669) * _2670) + _2484;
    }
    float _2805;
    float _2807;
    float _2809;
    float _2811;
    float _2813;
    float _2815;
    if (_2129.y == 0u)
    {
        float _2745 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2746 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2745;
        float _2747 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2745;
        float _2748 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2745;
        uvec4 _2760 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2761 = _2760.x;
        uint _2772 = uint((float(_2760.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1036) / _2761))) + floor(float(uint(cbSceneParam._m0[85u].x * _1035) / _2761)));
        float _2782 = (log2(_2748 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2783 = isnan(0.0) ? _2782 : (isnan(_2782) ? 0.0 : max(_2782, 0.0));
        uint _2786 = uint(isnan(14.0) ? _2783 : (isnan(_2783) ? 14.0 : min(_2783, 14.0)));
        uvec4 _2791 = texelFetch(g_lightClusterGridBuffer, int(((_2786 << 2u) + (_2772 << 6u)) >> 2u));
        uint _2792 = _2791.x;
        uint _2793 = _2760.z;
        float _2893;
        float _2895;
        float _2897;
        float _2899;
        float _2901;
        float _2903;
        if (((((1u << ((_2793 >> 4u) & 15u)) + 4294967295u) & _2792) == 0u) || ((_2793 & 240u) == 0u))
        {
            _2893 = 0.0;
            _2895 = 0.0;
            _2897 = 0.0;
            _2899 = 0.0;
            _2901 = 0.0;
            _2903 = 0.0;
        }
        else
        {
            float _2894;
            float _2896;
            float _2898;
            float _2900;
            float _2902;
            float _2904;
            float _3038 = 0.0;
            float _3039 = 0.0;
            float _3040 = 0.0;
            float _3041 = 0.0;
            float _3042 = 0.0;
            float _3043 = 0.0;
            uint _3044 = 0u;
            uint _3053;
            bool _3054;
            for (;;)
            {
                _3053 = texelFetch(g_lightClassification, int((((_2786 << 5u) + (_2772 << 9u)) + (_3044 << 2u)) >> 2u)).x;
                _3054 = _3053 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3054)
                {
                    frontier_phi_61_pred = _3038;
                    frontier_phi_61_pred_1 = _3043;
                    frontier_phi_61_pred_2 = _3042;
                    frontier_phi_61_pred_3 = _3041;
                    frontier_phi_61_pred_4 = _3040;
                    frontier_phi_61_pred_5 = _3039;
                }
                else
                {
                    float _3162;
                    float _3163;
                    float _3164;
                    float _3165;
                    float _3166;
                    float _3167;
                    uint _3168;
                    _3162 = _3038;
                    _3163 = _3039;
                    _3164 = _3040;
                    _3165 = _3041;
                    _3166 = _3042;
                    _3167 = _3043;
                    _3168 = _3053;
                    float _3094;
                    float _3095;
                    float _3096;
                    float _3097;
                    float _3098;
                    float _3099;
                    for (;;)
                    {
                        uint _3172 = uint(findLSB(_3168)) + (_3044 << 5u);
                        uint _3169 = (_3168 + 4294967295u) & _3168;
                        uint _3174 = _3172 * 48u;
                        vec4 _3188 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3174)).x, texelFetch(g_PointLightRenderingBuffer, int(_3174 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3174 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3174 + 3u)).x));
                        uint _3194 = (_3172 * 48u) + 4u;
                        vec4 _3207 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3194)).x, texelFetch(g_PointLightRenderingBuffer, int(_3194 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3194 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3194 + 3u)).x));
                        uint _3213 = (_3172 * 48u) + 8u;
                        vec3 _3224 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3213)).x, texelFetch(g_PointLightRenderingBuffer, int(_3213 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3213 + 2u)).x));
                        float _3228 = _3188.x - _2746;
                        float _3229 = _3188.y - _2747;
                        float _3230 = _3188.z - _2748;
                        float _3231 = dot(vec3(_3228, _3229, _3230), vec3(_3228, _3229, _3230));
                        float _3234 = inversesqrt(_3231);
                        float _3235 = _3234 * _3228;
                        float _3236 = _3234 * _3229;
                        float _3237 = _3234 * _3230;
                        float _3238 = dot(vec3(_1054, _1057, _1060), vec3(_3235, _3236, _3237));
                        float _3243 = 1.0 - (_3231 * _3188.w);
                        float _4598 = isnan(0.0) ? _3243 : (isnan(_3243) ? 0.0 : max(_3243, 0.0));
                        float _3244 = isnan(1.0) ? _4598 : (isnan(_4598) ? 1.0 : min(_4598, 1.0));
                        float _3245 = sqrt(_3231) * _3207.w;
                        float _3248 = 1.39999997615814208984375 / (_3245 + 1.39999997615814208984375);
                        float _3249 = _3248 * _3248;
                        float _3252 = ((1.0 - _3249) * _3238) + _3249;
                        float _3255 = _3245 * _3245;
                        float _3259 = ((isnan(0.0) ? _3252 : (isnan(_3252) ? 0.0 : max(_3252, 0.0))) * _3244) / ((_3255 * 0.699999988079071044921875) + 1.0);
                        float _3263 = (-0.0) - _2746;
                        float _3264 = (-0.0) - _2747;
                        float _3265 = (-0.0) - _2748;
                        float _3269 = inversesqrt(dot(vec3(_3263, _3264, _3265), vec3(_3263, _3264, _3265)));
                        float _3270 = _3269 * _3263;
                        float _3271 = _3269 * _3264;
                        float _3272 = _3269 * _3265;
                        float _3280 = exp2(log2(1.0 / ((_3255 * 3.5) + 5.0)) * 0.25);
                        float _3281 = 1.0 - _1114;
                        float _3288 = sqrt(1.0 - ((1.0 - (_3281 * _3281)) * (1.0 - (_3280 * _3280))));
                        float _3289 = _3288 * _3288;
                        float _3290 = _3289 * _3289;
                        float _3291 = _3270 + _3235;
                        float _3292 = _3271 + _3236;
                        float _3293 = _3272 + _3237;
                        float _3297 = inversesqrt(dot(vec3(_3291, _3292, _3293), vec3(_3291, _3292, _3293)));
                        float _3301 = dot(vec3(_1054, _1057, _1060), vec3(_3270, _3271, _3272));
                        float _4614 = isnan(0.0) ? _3301 : (isnan(_3301) ? 0.0 : max(_3301, 0.0));
                        float _3304 = isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0));
                        float _3305 = dot(vec3(_1054, _1057, _1060), vec3(_3297 * _3291, _3297 * _3292, _3297 * _3293));
                        float _4625 = isnan(0.0) ? _3305 : (isnan(_3305) ? 0.0 : max(_3305, 0.0));
                        float _3308 = isnan(1.0) ? _4625 : (isnan(_4625) ? 1.0 : min(_4625, 1.0));
                        float _3312 = ((_3308 * _3308) * (_3290 + (-1.0))) + 1.0;
                        float _3313 = _3248 * _3289;
                        float _3314 = _3313 * _3313;
                        float _3317 = ((1.0 - _3314) * _3238) + _3314;
                        float _4636 = isnan(0.0) ? _3317 : (isnan(_3317) ? 0.0 : max(_3317, 0.0));
                        float _3318 = isnan(1.0) ? _4636 : (isnan(_4636) ? 1.0 : min(_4636, 1.0));
                        float _3319 = 1.0 - _3289;
                        float _3329 = (0.5 / (((_3318 * ((_3304 * _3319) + _3289)) + 9.9999999392252902907785028219223e-09) + (((_3318 * _3319) + _3289) * _3304))) * _3318;
                        float _4647 = isnan(0.0) ? _3329 : (isnan(_3329) ? 0.0 : max(_3329, 0.0));
                        float _3340 = (((_3290 * 3.1415927410125732421875) * (isnan(1.0) ? _4647 : (isnan(_4647) ? 1.0 : min(_4647, 1.0)))) / ((_3312 * _3312) * ((_3255 * 2.1991131305694580078125) + 3.141590118408203125))) * _3244;
                        _3097 = (_3259 * _3207.x) + _3165;
                        _3098 = (_3259 * _3207.y) + _3166;
                        _3099 = (_3259 * _3207.z) + _3167;
                        _3094 = (_3340 * _3224.x) + _3162;
                        _3095 = (_3340 * _3224.y) + _3163;
                        _3096 = (_3340 * _3224.z) + _3164;
                        if (_3169 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3162 = _3094;
                            _3163 = _3095;
                            _3164 = _3096;
                            _3165 = _3097;
                            _3166 = _3098;
                            _3167 = _3099;
                            _3168 = _3169;
                        }
                    }
                    frontier_phi_61_pred = _3094;
                    frontier_phi_61_pred_1 = _3099;
                    frontier_phi_61_pred_2 = _3098;
                    frontier_phi_61_pred_3 = _3097;
                    frontier_phi_61_pred_4 = _3096;
                    frontier_phi_61_pred_5 = _3095;
                }
                _2894 = frontier_phi_61_pred;
                _2904 = frontier_phi_61_pred_1;
                _2902 = frontier_phi_61_pred_2;
                _2900 = frontier_phi_61_pred_3;
                _2898 = frontier_phi_61_pred_4;
                _2896 = frontier_phi_61_pred_5;
                uint _3045 = _3044 + 1u;
                if (_3045 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3038 = _2894;
                    _3039 = _2896;
                    _3040 = _2898;
                    _3041 = _2900;
                    _3042 = _2902;
                    _3043 = _2904;
                    _3044 = _3045;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2893 = _2894;
            _2895 = _2896;
            _2897 = _2898;
            _2899 = _2900;
            _2901 = _2902;
            _2903 = _2904;
        }
        uvec4 _2907 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2908 = _2907.z;
        uint _2910 = (_2908 >> 8u) & 15u;
        float _3006;
        float _3008;
        float _3010;
        float _3012;
        float _3014;
        float _3016;
        if (((4294967295u << _2910) & _2792) == 0u)
        {
            _3006 = _2893;
            _3008 = _2895;
            _3010 = _2897;
            _3012 = _2899;
            _3014 = _2901;
            _3016 = _2903;
        }
        else
        {
            float _3031 = inversesqrt(dot(vec3(_2746, _2747, _2748), vec3(_2746, _2747, _2748)));
            float _3032 = _3031 * _2746;
            float _3033 = _3031 * _2747;
            float _3034 = _3031 * _2748;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2910 < ((_2908 >> 12u) & 15u))
            {
                float _3007;
                float _3009;
                float _3011;
                float _3013;
                float _3015;
                float _3017;
                float _3145 = _2893;
                float _3146 = _2895;
                float _3147 = _2897;
                float _3148 = _2899;
                float _3149 = _2901;
                float _3150 = _2903;
                uint _3151 = _2910;
                uint _3160;
                bool _3161;
                for (;;)
                {
                    _3160 = texelFetch(g_lightClassification, int((((_2786 << 5u) + (_2772 << 9u)) + (_3151 << 2u)) >> 2u)).x;
                    _3161 = _3160 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3161)
                    {
                        frontier_phi_67_pred = _3148;
                        frontier_phi_67_pred_1 = _3149;
                        frontier_phi_67_pred_2 = _3150;
                        frontier_phi_67_pred_3 = _3147;
                        frontier_phi_67_pred_4 = _3146;
                        frontier_phi_67_pred_5 = _3145;
                    }
                    else
                    {
                        float _3345;
                        float _3346;
                        float _3347;
                        float _3348;
                        float _3349;
                        float _3350;
                        float _3638;
                        float _3639;
                        float _3640;
                        float _3641;
                        float _3642;
                        float _3643;
                        float _3358 = _3145;
                        float _3359 = _3146;
                        float _3360 = _3147;
                        float _3361 = _3148;
                        float _3362 = _3149;
                        float _3363 = _3150;
                        uint _3364 = _3160;
                        uint _3365;
                        vec4 _3390;
                        float _3391;
                        vec4 _3406;
                        vec3 _3418;
                        vec4 _3433;
                        vec4 _3448;
                        float _3494;
                        bool _3495;
                        for (;;)
                        {
                            uint _3375 = ((_3151 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3364));
                            _3365 = (_3364 + 4294967295u) & _3364;
                            uint _3377 = _3375 * 40u;
                            _3390 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3377)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3377 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3377 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3377 + 3u)).x));
                            _3391 = _3390.w;
                            uint _3393 = (_3375 * 40u) + 4u;
                            _3406 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3393)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3393 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3393 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3393 + 3u)).x));
                            uint _3408 = (_3375 * 40u) + 8u;
                            _3418 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3408)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3408 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3408 + 2u)).x));
                            uint _3420 = (_3375 * 40u) + 16u;
                            _3433 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3420)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3420 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3420 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3420 + 3u)).x));
                            uint _3435 = (_3375 * 40u) + 20u;
                            _3448 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3435)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3435 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3435 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3435 + 3u)).x));
                            uint _3450 = (_3375 * 40u) + 24u;
                            vec4 _3463 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3450)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3450 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3450 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3450 + 3u)).x));
                            uint _3469 = (_3375 * 40u) + 28u;
                            vec4 _3482 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3469)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3469 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3469 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3469 + 3u)).x));
                            _3494 = fma(_2748, _3482.z, fma(_2747, _3482.y, _3482.x * _2746)) + _3482.w;
                            _3495 = !((fma(_2748, _3463.z, fma(_2747, _3463.y, _3463.x * _2746)) + _3463.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3495)
                            {
                                float _3522 = _3390.x - _2746;
                                float _3523 = _3390.y - _2747;
                                float _3524 = _3390.z - _2748;
                                float _3525 = dot(vec3(_3522, _3523, _3524), vec3(_3522, _3523, _3524));
                                float _3528 = inversesqrt(_3525);
                                float _3529 = _3528 * _3522;
                                float _3530 = _3528 * _3523;
                                float _3531 = _3528 * _3524;
                                float _3535 = 1.0 - (_3525 / (_3391 * _3391));
                                float _4658 = isnan(0.0) ? _3535 : (isnan(_3535) ? 0.0 : max(_3535, 0.0));
                                float _3536 = isnan(1.0) ? _4658 : (isnan(_4658) ? 1.0 : min(_4658, 1.0));
                                float _3540 = sqrt(_3525) * _3406.w;
                                float _3542 = 1.39999997615814208984375 / (_3540 + 1.39999997615814208984375);
                                float _3543 = _3542 * _3542;
                                float _3546 = ((1.0 - _3543) * dot(vec3(_3529, _3530, _3531), vec3(_1054, _1057, _1060))) + _3543;
                                float _3549 = _3540 * _3540;
                                float _3553 = (fma(_2748, _3433.z, fma(_2747, _3433.y, _3433.x * _2746)) + _3433.w) / _3494;
                                float _3554 = (fma(_2748, _3448.z, fma(_2747, _3448.y, _3448.x * _2746)) + _3448.w) / _3494;
                                float _3558 = 1.0 - dot(vec2(_3553, _3554), vec2(_3553, _3554));
                                float _4674 = isnan(0.0) ? _3558 : (isnan(_3558) ? 0.0 : max(_3558, 0.0));
                                float _3559 = isnan(1.0) ? _4674 : (isnan(_4674) ? 1.0 : min(_4674, 1.0));
                                float _3560 = _3559 * (((isnan(0.0) ? _3546 : (isnan(_3546) ? 0.0 : max(_3546, 0.0))) * _3536) / ((_3549 * 0.699999988079071044921875) + 1.0));
                                float _3572 = exp2(log2(1.0 / ((_3549 * 3.5) + 5.0)) * 0.25);
                                float _3573 = 1.0 - _1114;
                                float _3580 = sqrt(1.0 - ((1.0 - (_3573 * _3573)) * (1.0 - (_3572 * _3572))));
                                float _3581 = _3580 * _3580;
                                float _3582 = _3581 * _3581;
                                float _3583 = _3529 - _3032;
                                float _3584 = _3530 - _3033;
                                float _3585 = _3531 - _3034;
                                float _3589 = inversesqrt(dot(vec3(_3583, _3584, _3585), vec3(_3583, _3584, _3585)));
                                float _3593 = dot(vec3(_1054, _1057, _1060), vec3((-0.0) - _3032, (-0.0) - _3033, (-0.0) - _3034));
                                float _4685 = isnan(0.0) ? _3593 : (isnan(_3593) ? 0.0 : max(_3593, 0.0));
                                float _3596 = isnan(1.0) ? _4685 : (isnan(_4685) ? 1.0 : min(_4685, 1.0));
                                float _3597 = dot(vec3(_1054, _1057, _1060), vec3(_3589 * _3583, _3589 * _3584, _3589 * _3585));
                                float _4696 = isnan(0.0) ? _3597 : (isnan(_3597) ? 0.0 : max(_3597, 0.0));
                                float _3600 = isnan(1.0) ? _4696 : (isnan(_4696) ? 1.0 : min(_4696, 1.0));
                                float _3604 = ((_3600 * _3600) * (_3582 + (-1.0))) + 1.0;
                                float _3605 = _3542 * _3581;
                                float _3606 = _3605 * _3605;
                                float _3612 = ((1.0 - _3606) * dot(vec3(_1054, _1057, _1060), vec3(_3529, _3530, _3531))) + _3606;
                                float _4707 = isnan(0.0) ? _3612 : (isnan(_3612) ? 0.0 : max(_3612, 0.0));
                                float _3613 = isnan(1.0) ? _4707 : (isnan(_4707) ? 1.0 : min(_4707, 1.0));
                                float _3614 = 1.0 - _3581;
                                float _3624 = (0.5 / (((_3613 * ((_3596 * _3614) + _3581)) + 9.9999999392252902907785028219223e-09) + (((_3613 * _3614) + _3581) * _3596))) * _3613;
                                float _4718 = isnan(0.0) ? _3624 : (isnan(_3624) ? 0.0 : max(_3624, 0.0));
                                float _3634 = (_3559 * _3536) * (((_3582 * 3.1415927410125732421875) * (isnan(1.0) ? _4718 : (isnan(_4718) ? 1.0 : min(_4718, 1.0)))) / ((_3604 * _3604) * ((_3549 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3634 * _3418.x;
                                frontier_phi_73_pred_1 = _3634 * _3418.y;
                                frontier_phi_73_pred_2 = _3560 * _3406.z;
                                frontier_phi_73_pred_3 = _3560 * _3406.y;
                                frontier_phi_73_pred_4 = _3560 * _3406.x;
                                frontier_phi_73_pred_5 = _3634 * _3418.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3638 = frontier_phi_73_pred;
                            _3639 = frontier_phi_73_pred_1;
                            _3643 = frontier_phi_73_pred_2;
                            _3642 = frontier_phi_73_pred_3;
                            _3641 = frontier_phi_73_pred_4;
                            _3640 = frontier_phi_73_pred_5;
                            _3348 = _3641 + _3361;
                            _3349 = _3642 + _3362;
                            _3350 = _3643 + _3363;
                            _3345 = _3638 + _3358;
                            _3346 = _3639 + _3359;
                            _3347 = _3640 + _3360;
                            if (_3365 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3358 = _3345;
                                _3359 = _3346;
                                _3360 = _3347;
                                _3361 = _3348;
                                _3362 = _3349;
                                _3363 = _3350;
                                _3364 = _3365;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3348;
                        frontier_phi_67_pred_1 = _3349;
                        frontier_phi_67_pred_2 = _3350;
                        frontier_phi_67_pred_3 = _3347;
                        frontier_phi_67_pred_4 = _3346;
                        frontier_phi_67_pred_5 = _3345;
                    }
                    _3013 = frontier_phi_67_pred;
                    _3015 = frontier_phi_67_pred_1;
                    _3017 = frontier_phi_67_pred_2;
                    _3011 = frontier_phi_67_pred_3;
                    _3009 = frontier_phi_67_pred_4;
                    _3007 = frontier_phi_67_pred_5;
                    uint _3152 = _3151 + 1u;
                    if (_3152 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3145 = _3007;
                        _3146 = _3009;
                        _3147 = _3011;
                        _3148 = _3013;
                        _3149 = _3015;
                        _3150 = _3017;
                        _3151 = _3152;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3015;
                frontier_phi_55_56_ladder_1 = _3017;
                frontier_phi_55_56_ladder_2 = _3013;
                frontier_phi_55_56_ladder_3 = _3011;
                frontier_phi_55_56_ladder_4 = _3009;
                frontier_phi_55_56_ladder_5 = _3007;
            }
            else
            {
                frontier_phi_55_56_ladder = _2901;
                frontier_phi_55_56_ladder_1 = _2903;
                frontier_phi_55_56_ladder_2 = _2899;
                frontier_phi_55_56_ladder_3 = _2897;
                frontier_phi_55_56_ladder_4 = _2895;
                frontier_phi_55_56_ladder_5 = _2893;
            }
            _3006 = frontier_phi_55_56_ladder_5;
            _3008 = frontier_phi_55_56_ladder_4;
            _3010 = frontier_phi_55_56_ladder_3;
            _3012 = frontier_phi_55_56_ladder_2;
            _3014 = frontier_phi_55_56_ladder;
            _3016 = frontier_phi_55_56_ladder_1;
        }
        float _3021 = isnan(1.0) ? _1098 : (isnan(_1098) ? 1.0 : min(_1098, 1.0));
        _2805 = (_3021 * _3012) + _2260;
        _2807 = (_3021 * _3014) + _2262;
        _2809 = (_3021 * _3016) + _2264;
        _2811 = ((_3006 * 0.039999999105930328369140625) * _3021) + _2590;
        _2813 = ((_3008 * 0.039999999105930328369140625) * _3021) + _2592;
        _2815 = ((_3010 * 0.039999999105930328369140625) * _3021) + _2594;
    }
    else
    {
        _2805 = _2260;
        _2807 = _2262;
        _2809 = _2264;
        _2811 = _2590;
        _2813 = _2592;
        _2815 = _2594;
    }
    float _4734 = isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0));
    float _4745 = isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0));
    float _4756 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
    uint _2835 = _259 + 6u;
    float _2843 = _1035 / cbSceneParam._m0[86u].x;
    float _2844 = _1036 / cbSceneParam._m0[86u].y;
    vec4 _2858 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2843, _2844, (log2((isnan(cbSceneParam._m0[77u].w) ? _970 : (isnan(_970) ? cbSceneParam._m0[77u].w : min(_970, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2860 = _2858.x;
    float _2861 = _2858.y;
    float _2862 = _2858.z;
    float _2863 = _2858.w;
    float _2956;
    float _2958;
    float _2960;
    float _2962;
    if (_970 > cbSceneParam._m0[78u].w)
    {
        float _2918 = isnan(_970) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _970 : min(cbSceneParam._m0[80u].w, _970));
        float _2919 = _2918 / _970;
        float _2930 = _2919 * _1020;
        float _2931 = _1021 * _2919;
        float _2932 = (-0.0) - _2931;
        float _2934 = _2919 * _1022;
        float _2936 = (cbSceneParam._m0[77u].w * _2932) / _2918;
        float _2937 = _2936 + cbSceneParam._m0[79u].w;
        float _2938 = cbSceneParam._m0[79u].w - _2931;
        float _2944 = sqrt(((_2930 * _2930) + (_2931 * _2931)) + (_2934 * _2934));
        float _2947 = (1.0 - (cbSceneParam._m0[77u].w / _2918)) * _2944;
        float _2952 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2954 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3107;
        if (abs((_2932 - _2936) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3107 = ((((_2937 > 0.0) ? exp2(_2952 * _2937) : (2.0 - exp2(_2954 * _2937))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2947;
        }
        else
        {
            float _3067 = 1.0 / cbSceneParam._m0[80u].x;
            float _3068 = isnan(_2938) ? _2937 : (isnan(_2937) ? _2938 : max(_2937, _2938));
            float _3069 = isnan(_2938) ? _2937 : (isnan(_2937) ? _2938 : min(_2937, _2938));
            float _3078 = isnan(0.0) ? _3068 : (isnan(_3068) ? 0.0 : min(_3068, 0.0));
            float _3079 = isnan(0.0) ? _3069 : (isnan(_3069) ? 0.0 : min(_3069, 0.0));
            _3107 = ((abs(_2944 / _2932) * cbSceneParam._m0[80u].y) * ((((_3078 - _3079) * 2.0) - ((exp2(_2952 * (isnan(0.0) ? _3068 : (isnan(_3068) ? 0.0 : max(_3068, 0.0)))) - exp2(_2952 * (isnan(0.0) ? _3069 : (isnan(_3069) ? 0.0 : max(_3069, 0.0))))) * _3067)) - ((exp2(_2954 * _3078) - exp2(_2954 * _3079)) * _3067))) + (_2947 * cbSceneParam._m0[80u].z);
        }
        vec4 _3109 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2843, _2844, 1.0), 0.0);
        float _3118 = exp2((_3107 * (-1.44269502162933349609375)) * (1.0 - _3109.w));
        float _3119 = log2(_3118);
        float _3135 = log2(_2863);
        _2956 = (exp2(_3135 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3119 * cbSceneParam._m0[78u].x)) * _3109.x) / cbSceneParam._m0[78u].x)) + _2860;
        _2958 = (exp2(_3135 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3119 * cbSceneParam._m0[78u].y)) * _3109.y) / cbSceneParam._m0[78u].y)) + _2861;
        _2960 = (exp2(_3135 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3119 * cbSceneParam._m0[78u].z)) * _3109.z) / cbSceneParam._m0[78u].z)) + _2862;
        _2962 = _3118 * _2863;
    }
    else
    {
        _2956 = _2860;
        _2958 = _2861;
        _2960 = _2862;
        _2962 = _2863;
    }
    float _2974 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2975 = _2974 == 3.0;
    float _2976 = log2(_2962);
    float _2983 = exp2(_2976 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4734 : (isnan(_4734) ? 1.0 : min(_4734, 1.0))) * (_2805 + ((isnan(0.0) ? _1822 : (isnan(_1822) ? 0.0 : max(_1822, 0.0))) * _1098))) + ((_2811 + ((isnan(0.0) ? _2113 : (isnan(_2113) ? 0.0 : max(_2113, 0.0))) * _1901)) * cbPerFrame._m0[3u].x));
    float _2984 = exp2(_2976 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4745 : (isnan(_4745) ? 1.0 : min(_4745, 1.0))) * (_2807 + ((isnan(0.0) ? _1825 : (isnan(_1825) ? 0.0 : max(_1825, 0.0))) * _1098))) + ((_2813 + ((isnan(0.0) ? _2116 : (isnan(_2116) ? 0.0 : max(_2116, 0.0))) * _1901)) * cbPerFrame._m0[3u].x));
    float _2985 = exp2(_2976 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4756 : (isnan(_4756) ? 1.0 : min(_4756, 1.0))) * (_2809 + ((isnan(0.0) ? _1828 : (isnan(_1828) ? 0.0 : max(_1828, 0.0))) * _1098))) + ((_2815 + ((isnan(0.0) ? _2119 : (isnan(_2119) ? 0.0 : max(_2119, 0.0))) * _1901)) * cbPerFrame._m0[3u].x));
    float _2994 = (_2974 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2994 * (_2975 ? _2983 : (_2983 + (cbSceneParam._m0[72u].w * _2956)));
    SV_Target.y = _2994 * (_2975 ? _2984 : (_2984 + (cbSceneParam._m0[72u].w * _2958)));
    SV_Target.z = _2994 * (_2975 ? _2985 : (_2985 + (cbSceneParam._m0[72u].w * _2960)));
    SV_Target.w = cbInstanceData._m0[_2835].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2835].w;
}


