#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1455;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _240 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _241 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _242 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _248 = inversesqrt(dot(vec3(_240, _241, _242), vec3(_240, _241, _242)));
    float _255 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _262 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _274 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _276 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _277 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4041 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _4052 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
    float _4063 = isnan(0.0) ? _277 : (isnan(_277) ? 0.0 : max(_277, 0.0));
    uint _287 = uint(roundEven(NORMAL.w)) * 13u;
    uint _292 = _287 + 1u;
    uint _296 = _287 + 2u;
    float _305 = sqrt(((cbInstanceData._m0[_292].x * cbInstanceData._m0[_292].x) + (cbInstanceData._m0[_287].x * cbInstanceData._m0[_287].x)) + (cbInstanceData._m0[_296].x * cbInstanceData._m0[_296].x));
    float _306 = _305 * TEXCOORD.z;
    float _307 = _305 * TEXCOORD.w;
    vec4 _320 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _306) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _307) + cbTextureTilingScale._m0[13u].w));
    vec4 _344 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _349 = _344.x * cbMtdParam._m0[11u].x;
    float _350 = _344.y * cbMtdParam._m0[11u].y;
    float _351 = _344.z * cbMtdParam._m0[11u].z;
    vec4 _370 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _306) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _307) + cbTextureTilingScale._m0[5u].w));
    vec4 _389 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _424 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _426 = _424.x;
    float _438 = dot(vec4(_426, _424.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _455 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _389.x) * 2.0) - ((((_426 - _438) * cbMtdParam._m0[24u].z) + _438) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4074 = isnan(0.0) ? _455 : (isnan(_455) ? 0.0 : max(_455, 0.0));
    float _456 = isnan(1.0) ? _4074 : (isnan(_4074) ? 1.0 : min(_4074, 1.0));
    float _463 = (_456 * ((_370.x * cbMtdParam._m0[12u].x) - _349)) + _349;
    float _464 = (_456 * ((_370.y * cbMtdParam._m0[12u].y) - _350)) + _350;
    float _465 = (_456 * ((_370.z * cbMtdParam._m0[12u].z) - _351)) + _351;
    vec4 _482 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _306) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _307) + cbTextureTilingScale._m0[3u].w));
    vec4 _502 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _504 = _502.x;
    float _514 = dot(vec4(_504, _502.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _528 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _389.y) * 2.0) - ((((_504 - _514) * cbMtdParam._m0[24u].z) + _514) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4085 = isnan(0.0) ? _528 : (isnan(_528) ? 0.0 : max(_528, 0.0));
    float _529 = isnan(1.0) ? _4085 : (isnan(_4085) ? 1.0 : min(_4085, 1.0));
    float _536 = (_529 * ((_482.x * cbMtdParam._m0[13u].x) - _463)) + _463;
    float _537 = (_529 * ((_482.y * cbMtdParam._m0[13u].y) - _464)) + _464;
    float _538 = (_529 * ((_482.z * cbMtdParam._m0[13u].z) - _465)) + _465;
    float _542 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _320.x) * _536;
    float _545 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _320.y) * _537;
    float _548 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _320.z) * _538;
    float _555 = ((_536 - _542) * (isnan(1.0) ? _4041 : (isnan(_4041) ? 1.0 : min(_4041, 1.0)))) + _542;
    float _556 = ((_537 - _545) * (isnan(1.0) ? _4052 : (isnan(_4052) ? 1.0 : min(_4052, 1.0)))) + _545;
    float _557 = ((_538 - _548) * (isnan(1.0) ? _4063 : (isnan(_4063) ? 1.0 : min(_4063, 1.0)))) + _548;
    vec4 _576 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _306) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _307) + cbTextureTilingScale._m0[14u].w));
    vec4 _595 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _306) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _307) + cbTextureTilingScale._m0[20u].w));
    vec4 _618 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _306) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _307) + cbTextureTilingScale._m0[4u].w));
    vec4 _635 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _637 = _635.x;
    float _638 = _635.y;
    float _639 = _635.z;
    float _646 = ((_618.x - _637) * _456) + _637;
    float _647 = ((_618.y - _638) * _456) + _638;
    float _648 = ((_618.z - _639) * _456) + _639;
    vec4 _660 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _306) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _307) + cbTextureTilingScale._m0[2u].w));
    float _673 = ((_660.z - _648) * _529) + _648;
    float _676 = ((((_660.x - _646) * _529) + _646) * 2.0) + (-1.0);
    float _677 = ((((_660.y - _647) * _529) + _647) * 2.0) + (-1.0);
    float _678 = dot(vec2(_676, _677), vec2(_676, _677));
    float _4096 = isnan(0.0) ? _678 : (isnan(_678) ? 0.0 : max(_678, 0.0));
    float _683 = sqrt(1.0 - (isnan(1.0) ? _4096 : (isnan(_4096) ? 1.0 : min(_4096, 1.0))));
    vec4 _697 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _722 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _306) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _307) + cbTextureTilingScale._m0[11u].w));
    float _724 = _722.x;
    float _725 = 1.0 - _724;
    float _731 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _734 = ((isnan(0.0) ? _731 : (isnan(_731) ? 0.0 : min(_731, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _743 = (_734 - ((((((_724 - _725) * cbMtdParam._m0[24u].w) + _725) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _734))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4117 = isnan(0.0) ? _743 : (isnan(_743) ? 0.0 : max(_743, 0.0));
    float _744 = isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0));
    float _751 = (_744 * ((_576.x * cbMtdParam._m0[18u].x) - _555)) + _555;
    float _752 = (_744 * ((_576.y * cbMtdParam._m0[18u].y) - _556)) + _556;
    float _753 = (_744 * ((_576.z * cbMtdParam._m0[18u].z) - _557)) + _557;
    vec4 _765 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _306) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _307) + cbTextureTilingScale._m0[19u].w));
    float _767 = _765.x;
    float _768 = 1.0 - _767;
    float _793 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_767 - _768) * cbMtdParam._m0[24u].y) + _768) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4128 = isnan(0.0) ? _793 : (isnan(_793) ? 0.0 : max(_793, 0.0));
    float _794 = isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0));
    float _802 = ((((cbMtdParam._m0[10u].x - _751) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _794) + _751;
    float _803 = ((((cbMtdParam._m0[10u].y - _752) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _794) + _752;
    float _804 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _753)) * _794) + _753;
    float _809 = (((_595.z - _673) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _673;
    float _813 = ((_697.z - _809) * cbMtdParam._m0[19u].w) + _809;
    vec4 _827 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _306) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _307) + cbTextureTilingScale._m0[15u].w));
    float _834 = (_827.x * 2.0) + (-1.0);
    float _835 = (_827.y * 2.0) + (-1.0);
    float _836 = dot(vec2(_834, _835), vec2(_834, _835));
    float _4139 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
    float _844 = (_744 * (_827.z - _813)) + _813;
    float _847 = ((cbMtdParam._m0[23u].y - _844) * _794) + _844;
    vec4 _868 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _306) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _307) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _874 = (_868.x * 2.0) + (-1.0);
    float _875 = (_868.y * 2.0) + (-1.0);
    float _876 = dot(vec2(_874, _875), vec2(_874, _875));
    float _4150 = isnan(0.0) ? _876 : (isnan(_876) ? 0.0 : max(_876, 0.0));
    float _890 = (_676 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_595.x * 2.0) + (-1.0)))) + (((_697.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _891 = (_677 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_595.y * 2.0) + (-1.0)))) + (((_697.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _903 = (((_834 - _890) + (cbMtdParam._m0[21u].x * _890)) * _744) + _890;
    float _904 = (((_835 - _891) + (cbMtdParam._m0[21u].x * _891)) * _744) + _891;
    float _905 = (_744 * (sqrt(1.0 - (isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0)))) - _683)) + _683;
    float _916 = (((_874 - _903) + (_903 * cbMtdParam._m0[22u].z)) * _794) + _903;
    float _917 = (((_875 - _904) + (_904 * cbMtdParam._m0[22u].z)) * _794) + _904;
    float _918 = ((sqrt(1.0 - (isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0)))) - _905) * _794) + _905;
    float _920 = cbMtdParam._m0[22u].x + _697.w;
    float _923 = fma(_918, _255 * NORMAL.x, fma(_917, _262 * TANGENT.x, (_248 * _240) * _916));
    float _926 = fma(_918, _255 * NORMAL.y, fma(_917, _262 * TANGENT.y, (_248 * _241) * _916));
    float _929 = fma(_918, _255 * NORMAL.z, fma(_917, _262 * TANGENT.z, (_248 * _242) * _916));
    float _933 = inversesqrt(dot(vec3(_923, _926, _929), vec3(_923, _926, _929)));
    float _934 = _933 * _923;
    float _935 = _933 * _926;
    float _936 = _933 * _929;
    float _4161 = isnan(0.0) ? _847 : (isnan(_847) ? 0.0 : max(_847, 0.0));
    float _937 = isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0));
    float _4172 = isnan(0.0) ? _920 : (isnan(_920) ? 0.0 : max(_920, 0.0));
    float _4183 = isnan(0.0) ? _802 : (isnan(_802) ? 0.0 : max(_802, 0.0));
    float _4194 = isnan(0.0) ? _803 : (isnan(_803) ? 0.0 : max(_803, 0.0));
    float _4205 = isnan(0.0) ? _804 : (isnan(_804) ? 0.0 : max(_804, 0.0));
    float _955 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _996 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1006 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _996);
    float _1007 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _996);
    float _1008 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _996);
    float _1012 = inversesqrt(dot(vec3(_1006, _1007, _1008), vec3(_1006, _1007, _1008)));
    float _1013 = _1006 * _1012;
    float _1014 = _1007 * _1012;
    float _1015 = _1008 * _1012;
    float _1021 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1022 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1040 = fma(_936, cbSceneParam._m0[5u].z, fma(_935, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _934));
    float _1043 = fma(_936, cbSceneParam._m0[6u].z, fma(_935, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _934));
    float _1046 = fma(_936, cbSceneParam._m0[7u].z, fma(_935, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _934));
    uint _1060 = (_287 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1066 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0)))) * cbInstanceData._m0[_1060].x;
    float _1067 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0)))) * cbInstanceData._m0[_1060].y;
    float _1068 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0)))) * cbInstanceData._m0[_1060].z;
    float _4216 = isnan(0.0) ? _1066 : (isnan(_1066) ? 0.0 : max(_1066, 0.0));
    float _1069 = isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0));
    float _4227 = isnan(0.0) ? _1067 : (isnan(_1067) ? 0.0 : max(_1067, 0.0));
    float _1070 = isnan(1.0) ? _4227 : (isnan(_4227) ? 1.0 : min(_4227, 1.0));
    float _4238 = isnan(0.0) ? _1068 : (isnan(_1068) ? 0.0 : max(_1068, 0.0));
    float _1071 = isnan(1.0) ? _4238 : (isnan(_4238) ? 1.0 : min(_4238, 1.0));
    vec4 _1080 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1021, cbSceneParam._m0[86u].y * _1022));
    float _1084 = ((isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0))) * TEXCOORD_5.w) * _1080.x;
    float _1085 = dot(vec3(_934, _935, _936), vec3(_1013, _1014, _1015));
    float _1088 = _1085 * 2.0;
    float _1092 = (_1088 * _934) - _1013;
    float _1093 = (_1088 * _935) - _1014;
    float _1094 = (_1088 * _936) - _1015;
    float _1098 = abs(dot(vec3(_1013, _1014, _1015), vec3(_934, _935, _936)));
    float _4249 = isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0));
    float _1100 = sqrt(_937);
    float _1113 = exp2((_1100 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4249 : (isnan(_4249) ? 1.0 : min(_4249, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1100 * 3.0));
    float _1145 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1149 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1153 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1454;
    float _1456;
    float _1457;
    float _1458;
    float _1459;
    float _1460;
    float _1461;
    float _1462;
    float _1463;
    float _1464;
    float _1465;
    float _1466;
    float _1467;
    float _1468;
    float _1469;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1179 = fma(_1153, cbModelParam._m0[26u].z, fma(_1149, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1145));
        float _1183 = fma(_1153, cbModelParam._m0[27u].z, fma(_1149, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1145));
        float _1187 = fma(_1153, cbModelParam._m0[28u].z, fma(_1149, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1145));
        float _1212 = _1145 + _934;
        float _1213 = _1149 + _935;
        float _1214 = _1153 + _936;
        float _1224 = fma(_1214, cbModelParam._m0[26u].z, fma(_1213, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1212)) - _1179;
        float _1225 = fma(_1214, cbModelParam._m0[27u].z, fma(_1213, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1212)) - _1183;
        float _1226 = fma(_1214, cbModelParam._m0[28u].z, fma(_1213, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1212)) - _1187;
        float _1230 = inversesqrt(dot(vec3(_1224, _1225, _1226), vec3(_1224, _1225, _1226)));
        float _1243 = ((_1230 * _1224) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1179 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1244 = ((_1230 * _1225) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1183 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1245 = ((_1230 * _1226) / cbModelParam._m0[34u].z) + ((((((_1187 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1248 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1243, _1244, _1245), 0.0);
        vec4 _1255 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1243, _1244, _1245), 0.0);
        vec4 _1262 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1243, _1244, _1245), 0.0);
        vec4 _1269 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1243, _1244, _1245), 0.0);
        float _1282 = exp2((_1248.w + (-0.5)) * 20.0) * 2.0;
        float _1283 = _1282 * (_1248.x + (-0.5));
        float _1284 = _1282 * (_1248.y + (-0.5));
        float _1285 = _1282 * (_1248.z + (-0.5));
        float _1292 = exp2((_1255.w + (-0.5)) * 20.0) * 2.0;
        float _1293 = _1292 * (_1255.x + (-0.5));
        float _1294 = _1292 * (_1255.y + (-0.5));
        float _1295 = _1292 * (_1255.z + (-0.5));
        float _1302 = exp2((_1262.w + (-0.5)) * 20.0) * 2.0;
        float _1303 = _1302 * (_1262.x + (-0.5));
        float _1304 = _1302 * (_1262.y + (-0.5));
        float _1305 = _1302 * (_1262.z + (-0.5));
        float _1312 = exp2((_1269.w + (-0.5)) * 20.0) * 2.0;
        float _1313 = _1312 * (_1269.x + (-0.5));
        float _1314 = _1312 * (_1269.y + (-0.5));
        float _1315 = _1312 * (_1269.z + (-0.5));
        float _1316 = isnan(0.0) ? _1313 : (isnan(_1313) ? 0.0 : max(_1313, 0.0));
        float _1317 = isnan(0.0) ? _1314 : (isnan(_1314) ? 0.0 : max(_1314, 0.0));
        float _1318 = isnan(0.0) ? _1315 : (isnan(_1315) ? 0.0 : max(_1315, 0.0));
        float _1319 = _1283 * 0.5;
        float _1320 = _1293 * 0.5;
        float _1321 = _1303 * 0.5;
        float _1322 = dot(vec3(_1319, _1320, _1321), vec3(_1319, _1320, _1321));
        float _1327 = (_1322 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1322);
        float _1336 = (dot(vec3(_934, _935, _936), vec3(_1327 * _1319, _1327 * _1320, _1327 * _1321)) + 1.0) * 0.5;
        float _4275 = isnan(0.0) ? _1336 : (isnan(_1336) ? 0.0 : max(_1336, 0.0));
        float _1346 = sqrt(((_1320 * _1320) + (_1319 * _1319)) + (_1321 * _1321)) / (_1316 + 9.9999997473787516355514526367188e-06);
        float _4286 = isnan(0.0) ? _1346 : (isnan(_1346) ? 0.0 : max(_1346, 0.0));
        float _1347 = isnan(1.0) ? _4286 : (isnan(_4286) ? 1.0 : min(_4286, 1.0));
        float _1348 = _1347 * 2.0;
        float _1352 = (1.0 - _1347) / (_1347 + 1.0);
        float _4297 = isnan(0.0) ? _1352 : (isnan(_1352) ? 0.0 : max(_1352, 0.0));
        float _1353 = isnan(1.0) ? _4297 : (isnan(_4297) ? 1.0 : min(_4297, 1.0));
        float _1362 = ((((1.0 - _1353) * (_1348 + 2.0)) * exp2(log2(isnan(1.0) ? _4275 : (isnan(_4275) ? 1.0 : min(_4275, 1.0))) * (_1348 + 1.0))) + _1353) * _1316;
        float _1363 = _1284 * 0.5;
        float _1364 = _1294 * 0.5;
        float _1365 = _1304 * 0.5;
        float _1366 = dot(vec3(_1363, _1364, _1365), vec3(_1363, _1364, _1365));
        float _1371 = (_1366 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1366);
        float _1379 = (dot(vec3(_934, _935, _936), vec3(_1371 * _1363, _1371 * _1364, _1371 * _1365)) + 1.0) * 0.5;
        float _4308 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1388 = sqrt(((_1364 * _1364) + (_1363 * _1363)) + (_1365 * _1365)) / (_1317 + 9.9999997473787516355514526367188e-06);
        float _4319 = isnan(0.0) ? _1388 : (isnan(_1388) ? 0.0 : max(_1388, 0.0));
        float _1389 = isnan(1.0) ? _4319 : (isnan(_4319) ? 1.0 : min(_4319, 1.0));
        float _1390 = _1389 * 2.0;
        float _1394 = (1.0 - _1389) / (_1389 + 1.0);
        float _4330 = isnan(0.0) ? _1394 : (isnan(_1394) ? 0.0 : max(_1394, 0.0));
        float _1395 = isnan(1.0) ? _4330 : (isnan(_4330) ? 1.0 : min(_4330, 1.0));
        float _1404 = ((((1.0 - _1395) * (_1390 + 2.0)) * exp2(log2(isnan(1.0) ? _4308 : (isnan(_4308) ? 1.0 : min(_4308, 1.0))) * (_1390 + 1.0))) + _1395) * _1317;
        float _1405 = _1285 * 0.5;
        float _1406 = _1295 * 0.5;
        float _1407 = _1305 * 0.5;
        float _1408 = dot(vec3(_1405, _1406, _1407), vec3(_1405, _1406, _1407));
        float _1413 = (_1408 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1408);
        float _1421 = (dot(vec3(_934, _935, _936), vec3(_1413 * _1405, _1413 * _1406, _1413 * _1407)) + 1.0) * 0.5;
        float _4341 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
        float _1430 = sqrt(((_1406 * _1406) + (_1405 * _1405)) + (_1407 * _1407)) / (_1318 + 9.9999997473787516355514526367188e-06);
        float _4352 = isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0));
        float _1431 = isnan(1.0) ? _4352 : (isnan(_4352) ? 1.0 : min(_4352, 1.0));
        float _1432 = _1431 * 2.0;
        float _1436 = (1.0 - _1431) / (_1431 + 1.0);
        float _4363 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
        float _1437 = isnan(1.0) ? _4363 : (isnan(_4363) ? 1.0 : min(_4363, 1.0));
        float _1446 = ((((1.0 - _1437) * (_1432 + 2.0)) * exp2(log2(isnan(1.0) ? _4341 : (isnan(_4341) ? 1.0 : min(_4341, 1.0))) * (_1432 + 1.0))) + _1437) * _1318;
        _1454 = _1285;
        _1456 = _1284;
        _1457 = _1283;
        _1458 = _1295;
        _1459 = _1294;
        _1460 = _1293;
        _1461 = _1305;
        _1462 = _1304;
        _1463 = _1303;
        _1464 = _1318;
        _1465 = _1317;
        _1466 = _1316;
        _1467 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1362 : (isnan(_1362) ? 0.0 : max(_1362, 0.0)));
        _1468 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0)));
        _1469 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0)));
    }
    else
    {
        _1454 = _1455;
        _1456 = _1455;
        _1457 = _1455;
        _1458 = _1455;
        _1459 = _1455;
        _1460 = _1455;
        _1461 = _1455;
        _1462 = _1455;
        _1463 = _1455;
        _1464 = _1455;
        _1465 = _1455;
        _1466 = _1455;
        _1467 = 0.0;
        _1468 = 0.0;
        _1469 = 0.0;
    }
    float _1762;
    float _1763;
    float _1764;
    float _1765;
    float _1766;
    float _1767;
    float _1768;
    float _1769;
    float _1770;
    float _1771;
    float _1772;
    float _1773;
    float _1774;
    float _1775;
    float _1776;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1493 = fma(_1153, cbModelParam._m0[30u].z, fma(_1149, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1145));
        float _1497 = fma(_1153, cbModelParam._m0[31u].z, fma(_1149, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1145));
        float _1501 = fma(_1153, cbModelParam._m0[32u].z, fma(_1149, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1145));
        float _1524 = _1145 + _934;
        float _1525 = _1149 + _935;
        float _1526 = _1153 + _936;
        float _1536 = fma(_1526, cbModelParam._m0[30u].z, fma(_1525, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1524)) - _1493;
        float _1537 = fma(_1526, cbModelParam._m0[31u].z, fma(_1525, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1524)) - _1497;
        float _1538 = fma(_1526, cbModelParam._m0[32u].z, fma(_1525, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1524)) - _1501;
        float _1542 = inversesqrt(dot(vec3(_1536, _1537, _1538), vec3(_1536, _1537, _1538)));
        float _1555 = ((_1542 * _1536) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1493 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1556 = ((_1542 * _1537) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1497 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1557 = ((_1542 * _1538) / cbModelParam._m0[35u].z) + ((((((_1501 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1559 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1555, _1556, _1557), 0.0);
        vec4 _1566 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1555, _1556, _1557), 0.0);
        vec4 _1573 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1555, _1556, _1557), 0.0);
        vec4 _1580 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1555, _1556, _1557), 0.0);
        float _1592 = exp2((_1559.w + (-0.5)) * 20.0) * 2.0;
        float _1593 = _1592 * (_1559.x + (-0.5));
        float _1594 = _1592 * (_1559.y + (-0.5));
        float _1595 = _1592 * (_1559.z + (-0.5));
        float _1602 = exp2((_1566.w + (-0.5)) * 20.0) * 2.0;
        float _1603 = _1602 * (_1566.x + (-0.5));
        float _1604 = _1602 * (_1566.y + (-0.5));
        float _1605 = _1602 * (_1566.z + (-0.5));
        float _1612 = exp2((_1573.w + (-0.5)) * 20.0) * 2.0;
        float _1613 = _1612 * (_1573.x + (-0.5));
        float _1614 = _1612 * (_1573.y + (-0.5));
        float _1615 = _1612 * (_1573.z + (-0.5));
        float _1622 = exp2((_1580.w + (-0.5)) * 20.0) * 2.0;
        float _1623 = _1622 * (_1580.x + (-0.5));
        float _1624 = _1622 * (_1580.y + (-0.5));
        float _1625 = _1622 * (_1580.z + (-0.5));
        float _1626 = isnan(0.0) ? _1623 : (isnan(_1623) ? 0.0 : max(_1623, 0.0));
        float _1627 = isnan(0.0) ? _1624 : (isnan(_1624) ? 0.0 : max(_1624, 0.0));
        float _1628 = isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0));
        float _1629 = _1593 * 0.5;
        float _1630 = _1603 * 0.5;
        float _1631 = _1613 * 0.5;
        float _1632 = dot(vec3(_1629, _1630, _1631), vec3(_1629, _1630, _1631));
        float _1637 = (_1632 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1632);
        float _1645 = (dot(vec3(_934, _935, _936), vec3(_1637 * _1629, _1637 * _1630, _1637 * _1631)) + 1.0) * 0.5;
        float _4404 = isnan(0.0) ? _1645 : (isnan(_1645) ? 0.0 : max(_1645, 0.0));
        float _1654 = sqrt(((_1630 * _1630) + (_1629 * _1629)) + (_1631 * _1631)) / (_1626 + 9.9999997473787516355514526367188e-06);
        float _4415 = isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0));
        float _1655 = isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0));
        float _1656 = _1655 * 2.0;
        float _1660 = (1.0 - _1655) / (_1655 + 1.0);
        float _4426 = isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0));
        float _1661 = isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0));
        float _1670 = ((((1.0 - _1661) * (_1656 + 2.0)) * exp2(log2(isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0))) * (_1656 + 1.0))) + _1661) * _1626;
        float _1671 = _1594 * 0.5;
        float _1672 = _1604 * 0.5;
        float _1673 = _1614 * 0.5;
        float _1674 = dot(vec3(_1671, _1672, _1673), vec3(_1671, _1672, _1673));
        float _1679 = (_1674 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1674);
        float _1687 = (dot(vec3(_934, _935, _936), vec3(_1679 * _1671, _1679 * _1672, _1679 * _1673)) + 1.0) * 0.5;
        float _4437 = isnan(0.0) ? _1687 : (isnan(_1687) ? 0.0 : max(_1687, 0.0));
        float _1696 = sqrt(((_1672 * _1672) + (_1671 * _1671)) + (_1673 * _1673)) / (_1627 + 9.9999997473787516355514526367188e-06);
        float _4448 = isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0));
        float _1697 = isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0));
        float _1698 = _1697 * 2.0;
        float _1702 = (1.0 - _1697) / (_1697 + 1.0);
        float _4459 = isnan(0.0) ? _1702 : (isnan(_1702) ? 0.0 : max(_1702, 0.0));
        float _1703 = isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0));
        float _1712 = ((((1.0 - _1703) * (_1698 + 2.0)) * exp2(log2(isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0))) * (_1698 + 1.0))) + _1703) * _1627;
        float _1713 = _1595 * 0.5;
        float _1714 = _1605 * 0.5;
        float _1715 = _1615 * 0.5;
        float _1716 = dot(vec3(_1713, _1714, _1715), vec3(_1713, _1714, _1715));
        float _1721 = (_1716 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1716);
        float _1729 = (dot(vec3(_934, _935, _936), vec3(_1721 * _1713, _1721 * _1714, _1721 * _1715)) + 1.0) * 0.5;
        float _4470 = isnan(0.0) ? _1729 : (isnan(_1729) ? 0.0 : max(_1729, 0.0));
        float _1738 = sqrt(((_1714 * _1714) + (_1713 * _1713)) + (_1715 * _1715)) / (_1628 + 9.9999997473787516355514526367188e-06);
        float _4481 = isnan(0.0) ? _1738 : (isnan(_1738) ? 0.0 : max(_1738, 0.0));
        float _1739 = isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0));
        float _1740 = _1739 * 2.0;
        float _1744 = (1.0 - _1739) / (_1739 + 1.0);
        float _4492 = isnan(0.0) ? _1744 : (isnan(_1744) ? 0.0 : max(_1744, 0.0));
        float _1745 = isnan(1.0) ? _4492 : (isnan(_4492) ? 1.0 : min(_4492, 1.0));
        float _1754 = ((((1.0 - _1745) * (_1740 + 2.0)) * exp2(log2(isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0))) * (_1740 + 1.0))) + _1745) * _1628;
        _1762 = _1595;
        _1763 = _1594;
        _1764 = _1593;
        _1765 = _1605;
        _1766 = _1604;
        _1767 = _1603;
        _1768 = _1615;
        _1769 = _1614;
        _1770 = _1613;
        _1771 = _1628;
        _1772 = _1627;
        _1773 = _1626;
        _1774 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0)));
        _1775 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1712 : (isnan(_1712) ? 0.0 : max(_1712, 0.0)));
        _1776 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0)));
    }
    else
    {
        _1762 = _1455;
        _1763 = _1455;
        _1764 = _1455;
        _1765 = _1455;
        _1766 = _1455;
        _1767 = _1455;
        _1768 = _1455;
        _1769 = _1455;
        _1770 = _1455;
        _1771 = _1455;
        _1772 = _1455;
        _1773 = _1455;
        _1774 = 0.0;
        _1775 = 0.0;
        _1776 = 0.0;
    }
    float _1786 = (cbModelParam._m0[1u].x * (_1774 - _1467)) + _1467;
    float _1787 = (cbModelParam._m0[1u].x * (_1775 - _1468)) + _1468;
    float _1788 = (cbModelParam._m0[1u].x * (_1776 - _1469)) + _1469;
    float _1809 = fma(_1788, cbSceneParam._m0[89u].z, fma(_1787, cbSceneParam._m0[89u].y, _1786 * cbSceneParam._m0[89u].x));
    float _1812 = fma(_1788, cbSceneParam._m0[90u].z, fma(_1787, cbSceneParam._m0[90u].y, _1786 * cbSceneParam._m0[90u].x));
    float _1815 = fma(_1788, cbSceneParam._m0[91u].z, fma(_1787, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1786));
    float _1830 = _1092 * 0.5;
    float _1831 = _1093 * 0.5;
    float _1832 = _1094 * 0.5;
    float _1833 = dot(vec4(_1830, _1831, _1832, 1.0), vec4(_1764, _1767, _1770, _1773));
    float _1836 = dot(vec4(_1830, _1831, _1832, 1.0), vec4(_1763, _1766, _1769, _1772));
    float _1839 = dot(vec4(_1830, _1831, _1832, 1.0), vec4(_1762, _1765, _1768, _1771));
    float _1873;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1846 = dot(vec4(_1830, _1831, _1832, 1.0), vec4(_1454, _1458, _1461, _1464));
        float _1850 = dot(vec4(_1830, _1831, _1832, 1.0), vec4(_1456, _1459, _1462, _1465));
        float _1854 = dot(vec4(_1830, _1831, _1832, 1.0), vec4(_1457, _1460, _1463, _1466));
        float _1861 = dot(vec4(cbModelParam._m0[39u]), vec4(_1830, _1831, _1832, 1.0));
        _1873 = dot(vec3(isnan(0.0) ? _1854 : (isnan(_1854) ? 0.0 : max(_1854, 0.0)), isnan(0.0) ? _1850 : (isnan(_1850) ? 0.0 : max(_1850, 0.0)), isnan(0.0) ? _1846 : (isnan(_1846) ? 0.0 : max(_1846, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1861) ? 0.0 : (isnan(0.0) ? _1861 : max(0.0, _1861))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1873 = 1.0;
    }
    float _1884;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1875 = dot(vec4(cbModelParam._m0[40u]), vec4(_1830, _1831, _1832, 1.0));
        _1884 = dot(vec3(isnan(0.0) ? _1833 : (isnan(_1833) ? 0.0 : max(_1833, 0.0)), isnan(0.0) ? _1836 : (isnan(_1836) ? 0.0 : max(_1836, 0.0)), isnan(0.0) ? _1839 : (isnan(_1839) ? 0.0 : max(_1839, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1875) ? 0.0 : (isnan(0.0) ? _1875 : max(0.0, _1875))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1884 = 1.0;
    }
    float _1888 = (_1884 * cbModelParam._m0[1u].x) + (_1873 * (1.0 - cbModelParam._m0[1u].x));
    float _1898 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _937);
    float _1899 = isnan(_1898) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1898 : min(cbModelParam._m0[25u].z, _1898));
    float _1979;
    float _1981;
    float _1983;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1946 = fma(_1153, cbModelParam._m0[13u].z, fma(_1149, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1145)) + cbModelParam._m0[13u].w;
        float _1950 = fma(_1153, cbModelParam._m0[14u].z, fma(_1149, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1145)) + cbModelParam._m0[14u].w;
        float _1954 = fma(_1153, cbModelParam._m0[15u].z, fma(_1149, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1145)) + cbModelParam._m0[15u].w;
        float _1957 = fma(_1094, cbModelParam._m0[13u].z, fma(_1093, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1092));
        float _1960 = fma(_1094, cbModelParam._m0[14u].z, fma(_1093, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1092));
        float _1963 = fma(_1094, cbModelParam._m0[15u].z, fma(_1093, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1092));
        float _1991;
        if (_1957 > 0.0)
        {
            _1991 = abs((1.0 - _1946) / _1957);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1957 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1946 + 1.0) / _1957);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1991 = frontier_phi_14_12_ladder;
        }
        float _2160;
        if (_1960 > 0.0)
        {
            _2160 = abs((1.0 - _1950) / _1960);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1960 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1950 + 1.0) / _1960);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2160 = frontier_phi_23_19_ladder;
        }
        float _2455;
        if (_1963 > 0.0)
        {
            _2455 = abs((1.0 - _1954) / _1963);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1963 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1954 + 1.0) / _1963);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2455 = frontier_phi_35_30_ladder;
        }
        float _2457 = isnan(_2160) ? _1991 : (isnan(_1991) ? _2160 : min(_1991, _2160));
        float _2458 = isnan(_2455) ? _2457 : (isnan(_2457) ? _2455 : min(_2457, _2455));
        float _2462 = (_2458 * _1957) + _1946;
        float _2463 = (_2458 * _1960) + _1950;
        float _2464 = (_2458 * _1963) + _1954;
        float _2465 = _2458 * 9.9999997473787516355514526367188e-05;
        float _2467 = (-1.0) - _2465;
        float _2469 = _2465 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2464 > _2469) || ((_2464 < _2467) || ((_2463 > _2469) || ((_2463 < _2467) || ((_2462 < _2467) || (_2462 > _2469))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2609 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2464, cbModelParam._m0[9u].z, fma(_2463, cbModelParam._m0[9u].y, _2462 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2464, cbModelParam._m0[10u].z, fma(_2463, cbModelParam._m0[10u].y, _2462 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2464, cbModelParam._m0[11u].z, fma(_2463, cbModelParam._m0[11u].y, _2462 * cbModelParam._m0[11u].x))), _1899);
            frontier_phi_13_35_ladder = _2609.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2609.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2609.x * cbModelParam._m0[1u].y;
        }
        _1979 = frontier_phi_13_35_ladder_2;
        _1981 = frontier_phi_13_35_ladder_1;
        _1983 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1967 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1092, _1093, _1094), _1899);
        _1979 = _1967.x * cbModelParam._m0[1u].y;
        _1981 = _1967.y * cbModelParam._m0[1u].y;
        _1983 = _1967.z * cbModelParam._m0[1u].y;
    }
    float _1987 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _937);
    float _1988 = isnan(_1987) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1987 : min(cbModelParam._m0[25u].w, _1987));
    float _2077;
    float _2079;
    float _2081;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2041 = fma(_1153, cbModelParam._m0[21u].z, fma(_1149, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1145)) + cbModelParam._m0[21u].w;
        float _2045 = fma(_1153, cbModelParam._m0[22u].z, fma(_1149, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1145)) + cbModelParam._m0[22u].w;
        float _2049 = fma(_1153, cbModelParam._m0[23u].z, fma(_1149, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1145)) + cbModelParam._m0[23u].w;
        float _2052 = fma(_1094, cbModelParam._m0[21u].z, fma(_1093, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1092));
        float _2055 = fma(_1094, cbModelParam._m0[22u].z, fma(_1093, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1092));
        float _2058 = fma(_1094, cbModelParam._m0[23u].z, fma(_1093, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1092));
        float _2165;
        if (_2052 > 0.0)
        {
            _2165 = abs((1.0 - _2041) / _2052);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2052 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2041 + 1.0) / _2052);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2165 = frontier_phi_25_21_ladder;
        }
        float _2482;
        if (_2055 > 0.0)
        {
            _2482 = abs((1.0 - _2045) / _2055);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2055 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2045 + 1.0) / _2055);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2482 = frontier_phi_37_32_ladder;
        }
        float _2809;
        if (_2058 > 0.0)
        {
            _2809 = abs((1.0 - _2049) / _2058);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2058 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2049 + 1.0) / _2058);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2809 = frontier_phi_47_44_ladder;
        }
        float _2811 = isnan(_2482) ? _2165 : (isnan(_2165) ? _2482 : min(_2165, _2482));
        float _2812 = isnan(_2809) ? _2811 : (isnan(_2811) ? _2809 : min(_2811, _2809));
        float _2816 = (_2812 * _2052) + _2041;
        float _2817 = (_2812 * _2055) + _2045;
        float _2818 = (_2812 * _2058) + _2049;
        float _2819 = _2812 * 9.9999997473787516355514526367188e-05;
        float _2820 = (-1.0) - _2819;
        float _2822 = _2819 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2818 > _2822) || ((_2818 < _2820) || ((_2817 > _2822) || ((_2817 < _2820) || ((_2816 < _2820) || (_2816 > _2822))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2936 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2818, cbModelParam._m0[17u].z, fma(_2817, cbModelParam._m0[17u].y, _2816 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2818, cbModelParam._m0[18u].z, fma(_2817, cbModelParam._m0[18u].y, _2816 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2818, cbModelParam._m0[19u].z, fma(_2817, cbModelParam._m0[19u].y, _2816 * cbModelParam._m0[19u].x))), _1988);
            frontier_phi_22_47_ladder = _2936.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2936.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2936.x * cbModelParam._m0[1u].z;
        }
        _2077 = frontier_phi_22_47_ladder_2;
        _2079 = frontier_phi_22_47_ladder_1;
        _2081 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2061 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1092, _1093, _1094), _1988);
        _2077 = _2061.x * cbModelParam._m0[1u].z;
        _2079 = _2061.y * cbModelParam._m0[1u].z;
        _2081 = _2061.z * cbModelParam._m0[1u].z;
    }
    float _2093 = ((((1.0 - _1113) * ((_1100 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1113 * _1100)) * _1084;
    float _2094 = _2093 * ((cbModelParam._m0[1u].w * (_2077 - _1979)) + _1979);
    float _2095 = _2093 * ((cbModelParam._m0[1u].w * (_2079 - _1981)) + _1981);
    float _2096 = _2093 * ((cbModelParam._m0[1u].w * (_2081 - _1983)) + _1983);
    float _2099 = fma(_2096, cbSceneParam._m0[89u].z, fma(_2095, cbSceneParam._m0[89u].y, _2094 * cbSceneParam._m0[89u].x));
    float _2102 = fma(_2096, cbSceneParam._m0[90u].z, fma(_2095, cbSceneParam._m0[90u].y, _2094 * cbSceneParam._m0[90u].x));
    float _2105 = fma(_2096, cbSceneParam._m0[91u].z, fma(_2095, cbSceneParam._m0[91u].y, _2094 * cbSceneParam._m0[91u].x));
    float _2139 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2143 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2147 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2151 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2152 = _2139 / _2151;
    float _2153 = _2143 / _2151;
    float _2154 = _2147 / _2151;
    float _2301;
    float _2302;
    float _2303;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2181 = ((uint(_2154 > cbSceneParam._m0[59u].y) + uint(_2154 > cbSceneParam._m0[59u].x)) + uint(_2154 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2182 = _2181 + 43u;
        uint _2190 = _2181 + 44u;
        uint _2198 = _2181 + 45u;
        uint _2206 = _2181 + 46u;
        float _2217 = fma(_2151, cbSceneParam._m0[_2182].w, fma(_2147, cbSceneParam._m0[_2182].z, fma(_2143, cbSceneParam._m0[_2182].y, _2139 * cbSceneParam._m0[_2182].x)));
        float _2221 = fma(_2151, cbSceneParam._m0[_2190].w, fma(_2147, cbSceneParam._m0[_2190].z, fma(_2143, cbSceneParam._m0[_2190].y, _2139 * cbSceneParam._m0[_2190].x)));
        float _2229 = fma(_2151, cbSceneParam._m0[_2206].w, fma(_2147, cbSceneParam._m0[_2206].z, fma(_2143, cbSceneParam._m0[_2206].y, _2139 * cbSceneParam._m0[_2206].x)));
        float _2234 = cbSceneParam._m0[33u].z * _2229;
        float _2236 = cbSceneParam._m0[33u].w * _2229;
        float _2239 = fma(_2151, cbSceneParam._m0[_2198].w, fma(_2147, cbSceneParam._m0[_2198].z, fma(_2143, cbSceneParam._m0[_2198].y, _2139 * cbSceneParam._m0[_2198].x))) / _2229;
        float _2287 = (cbSceneParam._m0[33u].x - sqrt(((_2153 * _2153) + (_2152 * _2152)) + (_2154 * _2154))) * cbSceneParam._m0[33u].y;
        float _4618 = isnan(0.0) ? _2287 : (isnan(_2287) ? 0.0 : max(_2287, 0.0));
        float _2294 = (isnan(1.0) ? _4618 : (isnan(_4618) ? 1.0 : min(_4618, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2234 + _2217) / _2229, (_2236 + _2221) / _2229), _2239), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2236 + _2217) / _2229, (_2221 - _2234) / _2229), _2239), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2217 - _2234) / _2229, (_2221 - _2236) / _2229), _2239), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2217 - _2236) / _2229, (_2234 + _2221) / _2229), _2239), 0.0)).x), vec4(0.25)));
        _2301 = 1.0 - (_2294 * cbSceneParam._m0[34u].x);
        _2302 = 1.0 - (_2294 * cbSceneParam._m0[34u].y);
        _2303 = 1.0 - (_2294 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2301 = 1.0;
        _2302 = 1.0;
        _2303 = 1.0;
    }
    float _2367;
    float _2369;
    float _2371;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2355 = fma(_2151, cbSceneParam._m0[63u].w, fma(_2147, cbSceneParam._m0[63u].z, fma(_2143, cbSceneParam._m0[63u].y, _2139 * cbSceneParam._m0[63u].x)));
        float _2356 = fma(_2151, cbSceneParam._m0[60u].w, fma(_2147, cbSceneParam._m0[60u].z, fma(_2143, cbSceneParam._m0[60u].y, _2139 * cbSceneParam._m0[60u].x))) / _2355;
        float _2357 = fma(_2151, cbSceneParam._m0[61u].w, fma(_2147, cbSceneParam._m0[61u].z, fma(_2143, cbSceneParam._m0[61u].y, _2139 * cbSceneParam._m0[61u].x))) / _2355;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2356 >= cbSceneParam._m0[64u].x) && (_2357 >= cbSceneParam._m0[64u].y)) && (_2356 <= cbSceneParam._m0[64u].z)) && (_2357 <= cbSceneParam._m0[64u].w))
        {
            float _2495 = fma(_2151, cbSceneParam._m0[62u].w, fma(_2147, cbSceneParam._m0[62u].z, fma(_2143, cbSceneParam._m0[62u].y, _2139 * cbSceneParam._m0[62u].x))) / _2355;
            float _2499 = isnan(cbSceneParam._m0[41u].w) ? _2495 : (isnan(_2495) ? cbSceneParam._m0[41u].w : max(_2495, cbSceneParam._m0[41u].w));
            float _2542 = (cbSceneParam._m0[33u].x - sqrt(((_2153 * _2153) + (_2152 * _2152)) + (_2154 * _2154))) * cbSceneParam._m0[33u].y;
            float _4634 = isnan(0.0) ? _2542 : (isnan(_2542) ? 0.0 : max(_2542, 0.0));
            float _2549 = (isnan(1.0) ? _4634 : (isnan(_4634) ? 1.0 : min(_4634, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2356, cbSceneParam._m0[33u].w + _2357), _2499), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2356, _2357 - cbSceneParam._m0[33u].z), _2499), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2356 - cbSceneParam._m0[33u].z, _2357 - cbSceneParam._m0[33u].w), _2499), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2356 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2357), _2499), 0.0)).x), vec4(0.25)));
            float _2553 = 1.0 - (_2549 * cbSceneParam._m0[34u].x);
            float _2554 = 1.0 - (_2549 * cbSceneParam._m0[34u].y);
            float _2555 = 1.0 - (_2549 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2555) ? _2303 : (isnan(_2303) ? _2555 : min(_2303, _2555));
            frontier_phi_34_33_ladder_1 = isnan(_2554) ? _2302 : (isnan(_2302) ? _2554 : min(_2302, _2554));
            frontier_phi_34_33_ladder_2 = isnan(_2553) ? _2301 : (isnan(_2301) ? _2553 : min(_2301, _2553));
        }
        else
        {
            frontier_phi_34_33_ladder = _2303;
            frontier_phi_34_33_ladder_1 = _2302;
            frontier_phi_34_33_ladder_2 = _2301;
        }
        _2367 = frontier_phi_34_33_ladder_2;
        _2369 = frontier_phi_34_33_ladder_1;
        _2371 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2367 = _2301;
        _2369 = _2302;
        _2371 = _2303;
    }
    uvec4 _2376 = floatBitsToUint(cbInstanceData._m0[_287 + 5u]);
    uint _2378 = _2376.x * 14u;
    uint _2379 = _2378 + 13u;
    float _2386 = _1084 + (-1.0);
    float _2391 = (cbLight._m0[_2379].x * _2386) + 1.0;
    float _2392 = (cbLight._m0[_2379].y * _2386) + 1.0;
    float _2393 = (cbLight._m0[_2379].z * _2386) + 1.0;
    float _2394 = (cbLight._m0[_2379].w * _2386) + 1.0;
    uint _2395 = _2378 + 5u;
    float _2401 = isnan(1.0) ? _2392 : (isnan(_2392) ? 1.0 : min(_2392, 1.0));
    uint _2405 = _2378 + 4u;
    float _2414 = isnan(1.0) ? _2391 : (isnan(_2391) ? 1.0 : min(_2391, 1.0));
    uint _2418 = _2378 | 1u;
    float _2429 = dot(vec3(cbLight._m0[_2378].xyz), vec3(_934, _935, _936));
    float _2432 = dot(vec3(cbLight._m0[_2418].xyz), vec3(_934, _935, _936));
    float _4670 = isnan(0.0) ? _2429 : (isnan(_2429) ? 0.0 : max(_2429, 0.0));
    float _4681 = isnan(0.0) ? _2432 : (isnan(_2432) ? 0.0 : max(_2432, 0.0));
    float _2437 = (isnan(1.0) ? _4670 : (isnan(_4670) ? 1.0 : min(_4670, 1.0))) * 0.3183098733425140380859375;
    float _2439 = (isnan(1.0) ? _4681 : (isnan(_4681) ? 1.0 : min(_4681, 1.0))) * 0.3183098733425140380859375;
    float _2446 = ((cbLight._m0[_2395].x * _2401) * _2439) + (((cbLight._m0[_2405].x * _2367) * _2414) * _2437);
    float _2447 = ((_2401 * cbLight._m0[_2395].y) * _2439) + (((cbLight._m0[_2405].y * _2369) * _2414) * _2437);
    float _2448 = ((_2401 * cbLight._m0[_2395].z) * _2439) + (((cbLight._m0[_2405].z * _2371) * _2414) * _2437);
    uvec4 _2452 = floatBitsToUint(cbLight._m0[_2378 + 12u]);
    bool _2454 = _2452.x == 0u;
    float _2556;
    float _2558;
    float _2560;
    if (_2454)
    {
        _2556 = _2446;
        _2558 = _2447;
        _2560 = _2448;
    }
    else
    {
        uint _2564 = _2378 + 6u;
        float _2580 = (dot(vec3(cbLight._m0[_2378 + 2u].xyz), vec3(_934, _935, _936)) * 0.5) + 0.5;
        float _2581 = _2580 * _2580;
        float _4692 = isnan(0.0) ? _2581 : (isnan(_2581) ? 0.0 : max(_2581, 0.0));
        float _2582 = isnan(1.0) ? _4692 : (isnan(_4692) ? 1.0 : min(_4692, 1.0));
        float _2583 = isnan(1.0) ? _2393 : (isnan(_2393) ? 1.0 : min(_2393, 1.0));
        _2556 = (((cbLight._m0[_2564].x * 0.3183098733425140380859375) * _2582) * _2583) + _2446;
        _2558 = (((cbLight._m0[_2564].y * 0.3183098733425140380859375) * _2582) * _2583) + _2447;
        _2560 = (((cbLight._m0[_2564].z * 0.3183098733425140380859375) * _2582) * _2583) + _2448;
    }
    bool _2563 = _2452.y == 0u;
    float _2618;
    float _2620;
    float _2622;
    if (_2563)
    {
        _2618 = _2556;
        _2620 = _2558;
        _2622 = _2560;
    }
    else
    {
        uint _2780 = _2378 + 7u;
        float _2796 = (dot(vec3(cbLight._m0[_2378 + 3u].xyz), vec3(_934, _935, _936)) * 0.5) + 0.5;
        float _2797 = _2796 * _2796;
        float _4708 = isnan(0.0) ? _2797 : (isnan(_2797) ? 0.0 : max(_2797, 0.0));
        float _2798 = isnan(1.0) ? _4708 : (isnan(_4708) ? 1.0 : min(_4708, 1.0));
        float _2799 = isnan(1.0) ? _2394 : (isnan(_2394) ? 1.0 : min(_2394, 1.0));
        _2618 = (((cbLight._m0[_2780].x * 0.3183098733425140380859375) * _2798) * _2799) + _2556;
        _2620 = (((cbLight._m0[_2780].y * 0.3183098733425140380859375) * _2798) * _2799) + _2558;
        _2622 = (((cbLight._m0[_2780].z * 0.3183098733425140380859375) * _2798) * _2799) + _2560;
    }
    uint _2625 = _2378 + 8u;
    float _2638 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2378].w)) * _937) * 0.949999988079071044921875);
    float _2639 = _2638 * _2638;
    float _2640 = cbLight._m0[_2378].x + _1013;
    float _2641 = cbLight._m0[_2378].y + _1014;
    float _2642 = cbLight._m0[_2378].z + _1015;
    float _2646 = inversesqrt(dot(vec3(_2640, _2641, _2642), vec3(_2640, _2641, _2642)));
    float _2647 = _2646 * _2640;
    float _2648 = _2646 * _2641;
    float _2649 = _2646 * _2642;
    float _2650 = dot(vec3(_934, _935, _936), vec3(cbLight._m0[_2378].xyz));
    float _4724 = isnan(0.0) ? _2650 : (isnan(_2650) ? 0.0 : max(_2650, 0.0));
    float _2653 = isnan(1.0) ? _4724 : (isnan(_4724) ? 1.0 : min(_4724, 1.0));
    float _4735 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
    float _2654 = isnan(1.0) ? _4735 : (isnan(_4735) ? 1.0 : min(_4735, 1.0));
    float _2655 = dot(vec3(_934, _935, _936), vec3(_2647, _2648, _2649));
    float _4746 = isnan(0.0) ? _2655 : (isnan(_2655) ? 0.0 : max(_2655, 0.0));
    float _2658 = isnan(1.0) ? _4746 : (isnan(_4746) ? 1.0 : min(_4746, 1.0));
    float _2659 = dot(vec3(cbLight._m0[_2378].xyz), vec3(_2647, _2648, _2649));
    float _4757 = isnan(0.0) ? _2659 : (isnan(_2659) ? 0.0 : max(_2659, 0.0));
    float _2663 = _2639 * _2639;
    float _2667 = ((_2658 * _2658) * (_2663 + (-1.0))) + 1.0;
    float _2678 = (exp2(log2(1.0 - (isnan(1.0) ? _4757 : (isnan(_4757) ? 1.0 : min(_4757, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2679 = 1.0 - _2639;
    float _2690 = (0.5 / (((_2654 * ((_2653 * _2679) + _2639)) + 9.9999999392252902907785028219223e-09) + (((_2654 * _2679) + _2639) * _2653))) * _2653;
    float _4768 = isnan(0.0) ? _2690 : (isnan(_2690) ? 0.0 : max(_2690, 0.0));
    float _2692 = (isnan(1.0) ? _4768 : (isnan(_4768) ? 1.0 : min(_4768, 1.0))) * (_2663 / ((_2667 * _2667) * 3.141590118408203125));
    uint _2706 = _2378 + 9u;
    float _2717 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2418].w)) * _937) * 0.949999988079071044921875);
    float _2718 = _2717 * _2717;
    float _2719 = cbLight._m0[_2418].x + _1013;
    float _2720 = cbLight._m0[_2418].y + _1014;
    float _2721 = cbLight._m0[_2418].z + _1015;
    float _2725 = inversesqrt(dot(vec3(_2719, _2720, _2721), vec3(_2719, _2720, _2721)));
    float _2726 = _2725 * _2719;
    float _2727 = _2725 * _2720;
    float _2728 = _2725 * _2721;
    float _2729 = dot(vec3(_934, _935, _936), vec3(cbLight._m0[_2418].xyz));
    float _4779 = isnan(0.0) ? _2729 : (isnan(_2729) ? 0.0 : max(_2729, 0.0));
    float _2732 = isnan(1.0) ? _4779 : (isnan(_4779) ? 1.0 : min(_4779, 1.0));
    float _2733 = dot(vec3(_934, _935, _936), vec3(_2726, _2727, _2728));
    float _4790 = isnan(0.0) ? _2733 : (isnan(_2733) ? 0.0 : max(_2733, 0.0));
    float _2736 = isnan(1.0) ? _4790 : (isnan(_4790) ? 1.0 : min(_4790, 1.0));
    float _2737 = dot(vec3(cbLight._m0[_2418].xyz), vec3(_2726, _2727, _2728));
    float _4801 = isnan(0.0) ? _2737 : (isnan(_2737) ? 0.0 : max(_2737, 0.0));
    float _2741 = _2718 * _2718;
    float _2745 = ((_2736 * _2736) * (_2741 + (-1.0))) + 1.0;
    float _2754 = (exp2(log2(1.0 - (isnan(1.0) ? _4801 : (isnan(_4801) ? 1.0 : min(_4801, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2755 = 1.0 - _2718;
    float _2765 = (0.5 / (((_2654 * ((_2732 * _2755) + _2718)) + 9.9999999392252902907785028219223e-09) + (((_2654 * _2755) + _2718) * _2732))) * _2732;
    float _4812 = isnan(0.0) ? _2765 : (isnan(_2765) ? 0.0 : max(_2765, 0.0));
    float _2767 = (isnan(1.0) ? _4812 : (isnan(_4812) ? 1.0 : min(_4812, 1.0))) * (_2741 / ((_2745 * _2745) * 3.141590118408203125));
    float _2777 = (((_2754 * cbLight._m0[_2706].x) * _2767) * _2401) + ((((cbLight._m0[_2625].x * _2367) * _2678) * _2692) * _2414);
    float _2778 = (((_2754 * cbLight._m0[_2706].y) * _2767) * _2401) + ((((cbLight._m0[_2625].y * _2369) * _2678) * _2692) * _2414);
    float _2779 = (((_2754 * cbLight._m0[_2706].z) * _2767) * _2401) + ((((cbLight._m0[_2625].z * _2371) * _2678) * _2692) * _2414);
    float _2835;
    float _2837;
    float _2839;
    if (_2454)
    {
        _2835 = _2777;
        _2837 = _2778;
        _2839 = _2779;
    }
    else
    {
        uint _2841 = _2378 + 2u;
        uint _2845 = _2378 + 10u;
        float _2859 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2841].w)) * _937) * 0.949999988079071044921875);
        float _2860 = _2859 * _2859;
        float _2861 = cbLight._m0[_2841].x + _1013;
        float _2862 = cbLight._m0[_2841].y + _1014;
        float _2863 = cbLight._m0[_2841].z + _1015;
        float _2867 = inversesqrt(dot(vec3(_2861, _2862, _2863), vec3(_2861, _2862, _2863)));
        float _2868 = _2867 * _2861;
        float _2869 = _2867 * _2862;
        float _2870 = _2867 * _2863;
        float _2871 = dot(vec3(_934, _935, _936), vec3(cbLight._m0[_2841].xyz));
        float _4823 = isnan(0.0) ? _2871 : (isnan(_2871) ? 0.0 : max(_2871, 0.0));
        float _2874 = isnan(1.0) ? _4823 : (isnan(_4823) ? 1.0 : min(_4823, 1.0));
        float _2875 = dot(vec3(_934, _935, _936), vec3(_2868, _2869, _2870));
        float _4834 = isnan(0.0) ? _2875 : (isnan(_2875) ? 0.0 : max(_2875, 0.0));
        float _2878 = isnan(1.0) ? _4834 : (isnan(_4834) ? 1.0 : min(_4834, 1.0));
        float _2879 = dot(vec3(cbLight._m0[_2841].xyz), vec3(_2868, _2869, _2870));
        float _4845 = isnan(0.0) ? _2879 : (isnan(_2879) ? 0.0 : max(_2879, 0.0));
        float _2883 = _2860 * _2860;
        float _2887 = ((_2878 * _2878) * (_2883 + (-1.0))) + 1.0;
        float _2896 = (exp2(log2(1.0 - (isnan(1.0) ? _4845 : (isnan(_4845) ? 1.0 : min(_4845, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2897 = 1.0 - _2860;
        float _2907 = (0.5 / (((_2654 * ((_2874 * _2897) + _2860)) + 9.9999999392252902907785028219223e-09) + (((_2654 * _2897) + _2860) * _2874))) * _2874;
        float _4856 = isnan(0.0) ? _2907 : (isnan(_2907) ? 0.0 : max(_2907, 0.0));
        float _2909 = (isnan(1.0) ? _4856 : (isnan(_4856) ? 1.0 : min(_4856, 1.0))) * (_2883 / ((_2887 * _2887) * 3.141590118408203125));
        float _2910 = isnan(1.0) ? _2393 : (isnan(_2393) ? 1.0 : min(_2393, 1.0));
        _2835 = (((_2896 * cbLight._m0[_2845].x) * _2909) * _2910) + _2777;
        _2837 = (((_2896 * cbLight._m0[_2845].y) * _2909) * _2910) + _2778;
        _2839 = (((_2896 * cbLight._m0[_2845].z) * _2909) * _2910) + _2779;
    }
    float _2941;
    float _2943;
    float _2945;
    if (_2563)
    {
        _2941 = _2835;
        _2943 = _2837;
        _2945 = _2839;
    }
    else
    {
        uint _2952 = _2378 + 3u;
        uint _2956 = _2378 + 11u;
        float _2970 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2952].w)) * _937) * 0.949999988079071044921875);
        float _2971 = _2970 * _2970;
        float _2972 = cbLight._m0[_2952].x + _1013;
        float _2973 = cbLight._m0[_2952].y + _1014;
        float _2974 = cbLight._m0[_2952].z + _1015;
        float _2978 = inversesqrt(dot(vec3(_2972, _2973, _2974), vec3(_2972, _2973, _2974)));
        float _2979 = _2978 * _2972;
        float _2980 = _2978 * _2973;
        float _2981 = _2978 * _2974;
        float _2982 = dot(vec3(_934, _935, _936), vec3(cbLight._m0[_2952].xyz));
        float _4872 = isnan(0.0) ? _2982 : (isnan(_2982) ? 0.0 : max(_2982, 0.0));
        float _2985 = isnan(1.0) ? _4872 : (isnan(_4872) ? 1.0 : min(_4872, 1.0));
        float _2986 = dot(vec3(_934, _935, _936), vec3(_2979, _2980, _2981));
        float _4883 = isnan(0.0) ? _2986 : (isnan(_2986) ? 0.0 : max(_2986, 0.0));
        float _2989 = isnan(1.0) ? _4883 : (isnan(_4883) ? 1.0 : min(_4883, 1.0));
        float _2990 = dot(vec3(cbLight._m0[_2952].xyz), vec3(_2979, _2980, _2981));
        float _4894 = isnan(0.0) ? _2990 : (isnan(_2990) ? 0.0 : max(_2990, 0.0));
        float _2994 = _2971 * _2971;
        float _2998 = ((_2989 * _2989) * (_2994 + (-1.0))) + 1.0;
        float _3007 = (exp2(log2(1.0 - (isnan(1.0) ? _4894 : (isnan(_4894) ? 1.0 : min(_4894, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3008 = 1.0 - _2971;
        float _3018 = (0.5 / (((_2654 * ((_2985 * _3008) + _2971)) + 9.9999999392252902907785028219223e-09) + (((_2654 * _3008) + _2971) * _2985))) * _2985;
        float _4905 = isnan(0.0) ? _3018 : (isnan(_3018) ? 0.0 : max(_3018, 0.0));
        float _3020 = (isnan(1.0) ? _4905 : (isnan(_4905) ? 1.0 : min(_4905, 1.0))) * (_2994 / ((_2998 * _2998) * 3.141590118408203125));
        float _3021 = isnan(1.0) ? _2394 : (isnan(_2394) ? 1.0 : min(_2394, 1.0));
        _2941 = (((_3007 * cbLight._m0[_2956].x) * _3020) * _3021) + _2835;
        _2943 = (((_3007 * cbLight._m0[_2956].y) * _3020) * _3021) + _2837;
        _2945 = (((_3007 * cbLight._m0[_2956].z) * _3020) * _3021) + _2839;
    }
    float _3087;
    float _3089;
    float _3091;
    float _3093;
    float _3095;
    float _3097;
    if (_2376.y == 0u)
    {
        uvec4 _3042 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3043 = _3042.x;
        uint _3054 = uint((float(_3042.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1022) / _3043))) + floor(float(uint(cbSceneParam._m0[85u].x * _1021) / _3043)));
        float _3064 = (log2(_2154 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3065 = isnan(0.0) ? _3064 : (isnan(_3064) ? 0.0 : max(_3064, 0.0));
        uint _3068 = uint(isnan(14.0) ? _3065 : (isnan(_3065) ? 14.0 : min(_3065, 14.0)));
        uvec4 _3073 = texelFetch(g_lightClusterGridBuffer, int(((_3068 << 2u) + (_3054 << 6u)) >> 2u));
        uint _3074 = _3073.x;
        uint _3075 = _3042.z;
        float _3154;
        float _3156;
        float _3158;
        float _3160;
        float _3162;
        float _3164;
        if (((((1u << ((_3075 >> 4u) & 15u)) + 4294967295u) & _3074) == 0u) || ((_3075 & 240u) == 0u))
        {
            _3154 = 0.0;
            _3156 = 0.0;
            _3158 = 0.0;
            _3160 = 0.0;
            _3162 = 0.0;
            _3164 = 0.0;
        }
        else
        {
            float _3155;
            float _3157;
            float _3159;
            float _3161;
            float _3163;
            float _3165;
            float _3299 = 0.0;
            float _3300 = 0.0;
            float _3301 = 0.0;
            float _3302 = 0.0;
            float _3303 = 0.0;
            float _3304 = 0.0;
            uint _3305 = 0u;
            uint _3314;
            bool _3315;
            for (;;)
            {
                _3314 = texelFetch(g_lightClassification, int((((_3068 << 5u) + (_3054 << 9u)) + (_3305 << 2u)) >> 2u)).x;
                _3315 = _3314 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3315)
                {
                    frontier_phi_66_pred = _3304;
                    frontier_phi_66_pred_1 = _3303;
                    frontier_phi_66_pred_2 = _3302;
                    frontier_phi_66_pred_3 = _3301;
                    frontier_phi_66_pred_4 = _3300;
                    frontier_phi_66_pred_5 = _3299;
                }
                else
                {
                    float _3423;
                    float _3424;
                    float _3425;
                    float _3426;
                    float _3427;
                    float _3428;
                    uint _3429;
                    _3423 = _3299;
                    _3424 = _3300;
                    _3425 = _3301;
                    _3426 = _3302;
                    _3427 = _3303;
                    _3428 = _3304;
                    _3429 = _3314;
                    float _3355;
                    float _3356;
                    float _3357;
                    float _3358;
                    float _3359;
                    float _3360;
                    for (;;)
                    {
                        uint _3433 = uint(findLSB(_3429)) + (_3305 << 5u);
                        uint _3430 = (_3429 + 4294967295u) & _3429;
                        uint _3435 = _3433 * 48u;
                        vec4 _3449 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3435)).x, texelFetch(g_PointLightRenderingBuffer, int(_3435 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3435 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3435 + 3u)).x));
                        uint _3455 = (_3433 * 48u) + 4u;
                        vec4 _3468 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3455)).x, texelFetch(g_PointLightRenderingBuffer, int(_3455 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3455 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3455 + 3u)).x));
                        uint _3474 = (_3433 * 48u) + 8u;
                        vec3 _3485 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3474)).x, texelFetch(g_PointLightRenderingBuffer, int(_3474 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3474 + 2u)).x));
                        float _3489 = _3449.x - _2152;
                        float _3490 = _3449.y - _2153;
                        float _3491 = _3449.z - _2154;
                        float _3492 = dot(vec3(_3489, _3490, _3491), vec3(_3489, _3490, _3491));
                        float _3495 = inversesqrt(_3492);
                        float _3496 = _3495 * _3489;
                        float _3497 = _3495 * _3490;
                        float _3498 = _3495 * _3491;
                        float _3499 = dot(vec3(_1040, _1043, _1046), vec3(_3496, _3497, _3498));
                        float _3504 = 1.0 - (_3492 * _3449.w);
                        float _4931 = isnan(0.0) ? _3504 : (isnan(_3504) ? 0.0 : max(_3504, 0.0));
                        float _3505 = isnan(1.0) ? _4931 : (isnan(_4931) ? 1.0 : min(_4931, 1.0));
                        float _3506 = sqrt(_3492) * _3468.w;
                        float _3509 = 1.39999997615814208984375 / (_3506 + 1.39999997615814208984375);
                        float _3510 = _3509 * _3509;
                        float _3513 = ((1.0 - _3510) * _3499) + _3510;
                        float _3516 = _3506 * _3506;
                        float _3520 = ((isnan(0.0) ? _3513 : (isnan(_3513) ? 0.0 : max(_3513, 0.0))) * _3505) / ((_3516 * 0.699999988079071044921875) + 1.0);
                        float _3524 = (-0.0) - _2152;
                        float _3525 = (-0.0) - _2153;
                        float _3526 = (-0.0) - _2154;
                        float _3530 = inversesqrt(dot(vec3(_3524, _3525, _3526), vec3(_3524, _3525, _3526)));
                        float _3531 = _3530 * _3524;
                        float _3532 = _3530 * _3525;
                        float _3533 = _3530 * _3526;
                        float _3540 = exp2(log2(1.0 / ((_3516 * 3.5) + 5.0)) * 0.25);
                        float _3541 = 1.0 - _1100;
                        float _3548 = sqrt(1.0 - ((1.0 - (_3541 * _3541)) * (1.0 - (_3540 * _3540))));
                        float _3549 = _3548 * _3548;
                        float _3550 = _3549 * _3549;
                        float _3551 = _3531 + _3496;
                        float _3552 = _3532 + _3497;
                        float _3553 = _3533 + _3498;
                        float _3557 = inversesqrt(dot(vec3(_3551, _3552, _3553), vec3(_3551, _3552, _3553)));
                        float _3561 = dot(vec3(_1040, _1043, _1046), vec3(_3531, _3532, _3533));
                        float _4947 = isnan(0.0) ? _3561 : (isnan(_3561) ? 0.0 : max(_3561, 0.0));
                        float _3564 = isnan(1.0) ? _4947 : (isnan(_4947) ? 1.0 : min(_4947, 1.0));
                        float _3565 = dot(vec3(_1040, _1043, _1046), vec3(_3557 * _3551, _3557 * _3552, _3557 * _3553));
                        float _4958 = isnan(0.0) ? _3565 : (isnan(_3565) ? 0.0 : max(_3565, 0.0));
                        float _3568 = isnan(1.0) ? _4958 : (isnan(_4958) ? 1.0 : min(_4958, 1.0));
                        float _3572 = ((_3568 * _3568) * (_3550 + (-1.0))) + 1.0;
                        float _3573 = _3509 * _3549;
                        float _3574 = _3573 * _3573;
                        float _3577 = ((1.0 - _3574) * _3499) + _3574;
                        float _4969 = isnan(0.0) ? _3577 : (isnan(_3577) ? 0.0 : max(_3577, 0.0));
                        float _3578 = isnan(1.0) ? _4969 : (isnan(_4969) ? 1.0 : min(_4969, 1.0));
                        float _3579 = 1.0 - _3549;
                        float _3589 = (0.5 / (((_3578 * ((_3564 * _3579) + _3549)) + 9.9999999392252902907785028219223e-09) + (((_3578 * _3579) + _3549) * _3564))) * _3578;
                        float _4980 = isnan(0.0) ? _3589 : (isnan(_3589) ? 0.0 : max(_3589, 0.0));
                        float _3600 = (((_3550 * 3.1415927410125732421875) * (isnan(1.0) ? _4980 : (isnan(_4980) ? 1.0 : min(_4980, 1.0)))) / ((_3572 * _3572) * ((_3516 * 2.1991131305694580078125) + 3.141590118408203125))) * _3505;
                        _3358 = (_3520 * _3468.x) + _3426;
                        _3359 = (_3520 * _3468.y) + _3427;
                        _3360 = (_3520 * _3468.z) + _3428;
                        _3355 = (_3600 * _3485.x) + _3423;
                        _3356 = (_3600 * _3485.y) + _3424;
                        _3357 = (_3600 * _3485.z) + _3425;
                        if (_3430 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3423 = _3355;
                            _3424 = _3356;
                            _3425 = _3357;
                            _3426 = _3358;
                            _3427 = _3359;
                            _3428 = _3360;
                            _3429 = _3430;
                        }
                    }
                    frontier_phi_66_pred = _3360;
                    frontier_phi_66_pred_1 = _3359;
                    frontier_phi_66_pred_2 = _3358;
                    frontier_phi_66_pred_3 = _3357;
                    frontier_phi_66_pred_4 = _3356;
                    frontier_phi_66_pred_5 = _3355;
                }
                _3165 = frontier_phi_66_pred;
                _3163 = frontier_phi_66_pred_1;
                _3161 = frontier_phi_66_pred_2;
                _3159 = frontier_phi_66_pred_3;
                _3157 = frontier_phi_66_pred_4;
                _3155 = frontier_phi_66_pred_5;
                uint _3306 = _3305 + 1u;
                if (_3306 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3299 = _3155;
                    _3300 = _3157;
                    _3301 = _3159;
                    _3302 = _3161;
                    _3303 = _3163;
                    _3304 = _3165;
                    _3305 = _3306;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3154 = _3155;
            _3156 = _3157;
            _3158 = _3159;
            _3160 = _3161;
            _3162 = _3163;
            _3164 = _3165;
        }
        uvec4 _3168 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3169 = _3168.z;
        uint _3171 = (_3169 >> 8u) & 15u;
        float _3267;
        float _3269;
        float _3271;
        float _3273;
        float _3275;
        float _3277;
        if (((4294967295u << _3171) & _3074) == 0u)
        {
            _3267 = _3154;
            _3269 = _3156;
            _3271 = _3158;
            _3273 = _3160;
            _3275 = _3162;
            _3277 = _3164;
        }
        else
        {
            float _3292 = inversesqrt(dot(vec3(_2152, _2153, _2154), vec3(_2152, _2153, _2154)));
            float _3293 = _3292 * _2152;
            float _3294 = _3292 * _2153;
            float _3295 = _3292 * _2154;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3171 < ((_3169 >> 12u) & 15u))
            {
                float _3268;
                float _3270;
                float _3272;
                float _3274;
                float _3276;
                float _3278;
                float _3406 = _3154;
                float _3407 = _3156;
                float _3408 = _3158;
                float _3409 = _3160;
                float _3410 = _3162;
                float _3411 = _3164;
                uint _3412 = _3171;
                uint _3421;
                bool _3422;
                for (;;)
                {
                    _3421 = texelFetch(g_lightClassification, int((((_3068 << 5u) + (_3054 << 9u)) + (_3412 << 2u)) >> 2u)).x;
                    _3422 = _3421 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3422)
                    {
                        frontier_phi_72_pred = _3411;
                        frontier_phi_72_pred_1 = _3410;
                        frontier_phi_72_pred_2 = _3409;
                        frontier_phi_72_pred_3 = _3408;
                        frontier_phi_72_pred_4 = _3407;
                        frontier_phi_72_pred_5 = _3406;
                    }
                    else
                    {
                        float _3605;
                        float _3606;
                        float _3607;
                        float _3608;
                        float _3609;
                        float _3610;
                        float _3898;
                        float _3899;
                        float _3900;
                        float _3901;
                        float _3902;
                        float _3903;
                        float _3618 = _3406;
                        float _3619 = _3407;
                        float _3620 = _3408;
                        float _3621 = _3409;
                        float _3622 = _3410;
                        float _3623 = _3411;
                        uint _3624 = _3421;
                        uint _3625;
                        vec4 _3650;
                        float _3651;
                        vec4 _3666;
                        vec3 _3678;
                        vec4 _3693;
                        vec4 _3708;
                        float _3754;
                        bool _3755;
                        for (;;)
                        {
                            uint _3635 = ((_3412 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3624));
                            _3625 = (_3624 + 4294967295u) & _3624;
                            uint _3637 = _3635 * 40u;
                            _3650 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3637)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3637 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3637 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3637 + 3u)).x));
                            _3651 = _3650.w;
                            uint _3653 = (_3635 * 40u) + 4u;
                            _3666 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3653)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3653 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3653 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3653 + 3u)).x));
                            uint _3668 = (_3635 * 40u) + 8u;
                            _3678 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3668)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3668 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3668 + 2u)).x));
                            uint _3680 = (_3635 * 40u) + 16u;
                            _3693 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3680)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3680 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3680 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3680 + 3u)).x));
                            uint _3695 = (_3635 * 40u) + 20u;
                            _3708 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3695)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3695 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3695 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3695 + 3u)).x));
                            uint _3710 = (_3635 * 40u) + 24u;
                            vec4 _3723 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3710)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3710 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3710 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3710 + 3u)).x));
                            uint _3729 = (_3635 * 40u) + 28u;
                            vec4 _3742 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3729)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3729 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3729 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3729 + 3u)).x));
                            _3754 = fma(_2154, _3742.z, fma(_2153, _3742.y, _3742.x * _2152)) + _3742.w;
                            _3755 = !((fma(_2154, _3723.z, fma(_2153, _3723.y, _3723.x * _2152)) + _3723.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3755)
                            {
                                float _3782 = _3650.x - _2152;
                                float _3783 = _3650.y - _2153;
                                float _3784 = _3650.z - _2154;
                                float _3785 = dot(vec3(_3782, _3783, _3784), vec3(_3782, _3783, _3784));
                                float _3788 = inversesqrt(_3785);
                                float _3789 = _3788 * _3782;
                                float _3790 = _3788 * _3783;
                                float _3791 = _3788 * _3784;
                                float _3795 = 1.0 - (_3785 / (_3651 * _3651));
                                float _4991 = isnan(0.0) ? _3795 : (isnan(_3795) ? 0.0 : max(_3795, 0.0));
                                float _3796 = isnan(1.0) ? _4991 : (isnan(_4991) ? 1.0 : min(_4991, 1.0));
                                float _3800 = sqrt(_3785) * _3666.w;
                                float _3802 = 1.39999997615814208984375 / (_3800 + 1.39999997615814208984375);
                                float _3803 = _3802 * _3802;
                                float _3806 = ((1.0 - _3803) * dot(vec3(_3789, _3790, _3791), vec3(_1040, _1043, _1046))) + _3803;
                                float _3809 = _3800 * _3800;
                                float _3813 = (fma(_2154, _3693.z, fma(_2153, _3693.y, _3693.x * _2152)) + _3693.w) / _3754;
                                float _3814 = (fma(_2154, _3708.z, fma(_2153, _3708.y, _3708.x * _2152)) + _3708.w) / _3754;
                                float _3818 = 1.0 - dot(vec2(_3813, _3814), vec2(_3813, _3814));
                                float _5007 = isnan(0.0) ? _3818 : (isnan(_3818) ? 0.0 : max(_3818, 0.0));
                                float _3819 = isnan(1.0) ? _5007 : (isnan(_5007) ? 1.0 : min(_5007, 1.0));
                                float _3820 = _3819 * (((isnan(0.0) ? _3806 : (isnan(_3806) ? 0.0 : max(_3806, 0.0))) * _3796) / ((_3809 * 0.699999988079071044921875) + 1.0));
                                float _3832 = exp2(log2(1.0 / ((_3809 * 3.5) + 5.0)) * 0.25);
                                float _3833 = 1.0 - _1100;
                                float _3840 = sqrt(1.0 - ((1.0 - (_3833 * _3833)) * (1.0 - (_3832 * _3832))));
                                float _3841 = _3840 * _3840;
                                float _3842 = _3841 * _3841;
                                float _3843 = _3789 - _3293;
                                float _3844 = _3790 - _3294;
                                float _3845 = _3791 - _3295;
                                float _3849 = inversesqrt(dot(vec3(_3843, _3844, _3845), vec3(_3843, _3844, _3845)));
                                float _3853 = dot(vec3(_1040, _1043, _1046), vec3((-0.0) - _3293, (-0.0) - _3294, (-0.0) - _3295));
                                float _5018 = isnan(0.0) ? _3853 : (isnan(_3853) ? 0.0 : max(_3853, 0.0));
                                float _3856 = isnan(1.0) ? _5018 : (isnan(_5018) ? 1.0 : min(_5018, 1.0));
                                float _3857 = dot(vec3(_1040, _1043, _1046), vec3(_3849 * _3843, _3849 * _3844, _3849 * _3845));
                                float _5029 = isnan(0.0) ? _3857 : (isnan(_3857) ? 0.0 : max(_3857, 0.0));
                                float _3860 = isnan(1.0) ? _5029 : (isnan(_5029) ? 1.0 : min(_5029, 1.0));
                                float _3864 = ((_3860 * _3860) * (_3842 + (-1.0))) + 1.0;
                                float _3865 = _3802 * _3841;
                                float _3866 = _3865 * _3865;
                                float _3872 = ((1.0 - _3866) * dot(vec3(_1040, _1043, _1046), vec3(_3789, _3790, _3791))) + _3866;
                                float _5040 = isnan(0.0) ? _3872 : (isnan(_3872) ? 0.0 : max(_3872, 0.0));
                                float _3873 = isnan(1.0) ? _5040 : (isnan(_5040) ? 1.0 : min(_5040, 1.0));
                                float _3874 = 1.0 - _3841;
                                float _3884 = (0.5 / (((_3873 * ((_3856 * _3874) + _3841)) + 9.9999999392252902907785028219223e-09) + (((_3873 * _3874) + _3841) * _3856))) * _3873;
                                float _5051 = isnan(0.0) ? _3884 : (isnan(_3884) ? 0.0 : max(_3884, 0.0));
                                float _3894 = (_3819 * _3796) * (((_3842 * 3.1415927410125732421875) * (isnan(1.0) ? _5051 : (isnan(_5051) ? 1.0 : min(_5051, 1.0)))) / ((_3864 * _3864) * ((_3809 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3820 * _3666.y;
                                frontier_phi_78_pred_1 = _3820 * _3666.x;
                                frontier_phi_78_pred_2 = _3894 * _3678.z;
                                frontier_phi_78_pred_3 = _3894 * _3678.y;
                                frontier_phi_78_pred_4 = _3894 * _3678.x;
                                frontier_phi_78_pred_5 = _3820 * _3666.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3902 = frontier_phi_78_pred;
                            _3901 = frontier_phi_78_pred_1;
                            _3900 = frontier_phi_78_pred_2;
                            _3899 = frontier_phi_78_pred_3;
                            _3898 = frontier_phi_78_pred_4;
                            _3903 = frontier_phi_78_pred_5;
                            _3608 = _3901 + _3621;
                            _3609 = _3902 + _3622;
                            _3610 = _3903 + _3623;
                            _3605 = _3898 + _3618;
                            _3606 = _3899 + _3619;
                            _3607 = _3900 + _3620;
                            if (_3625 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3618 = _3605;
                                _3619 = _3606;
                                _3620 = _3607;
                                _3621 = _3608;
                                _3622 = _3609;
                                _3623 = _3610;
                                _3624 = _3625;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3610;
                        frontier_phi_72_pred_1 = _3609;
                        frontier_phi_72_pred_2 = _3608;
                        frontier_phi_72_pred_3 = _3607;
                        frontier_phi_72_pred_4 = _3606;
                        frontier_phi_72_pred_5 = _3605;
                    }
                    _3278 = frontier_phi_72_pred;
                    _3276 = frontier_phi_72_pred_1;
                    _3274 = frontier_phi_72_pred_2;
                    _3272 = frontier_phi_72_pred_3;
                    _3270 = frontier_phi_72_pred_4;
                    _3268 = frontier_phi_72_pred_5;
                    uint _3413 = _3412 + 1u;
                    if (_3413 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3406 = _3268;
                        _3407 = _3270;
                        _3408 = _3272;
                        _3409 = _3274;
                        _3410 = _3276;
                        _3411 = _3278;
                        _3412 = _3413;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3278;
                frontier_phi_60_61_ladder_1 = _3276;
                frontier_phi_60_61_ladder_2 = _3272;
                frontier_phi_60_61_ladder_3 = _3270;
                frontier_phi_60_61_ladder_4 = _3268;
                frontier_phi_60_61_ladder_5 = _3274;
            }
            else
            {
                frontier_phi_60_61_ladder = _3164;
                frontier_phi_60_61_ladder_1 = _3162;
                frontier_phi_60_61_ladder_2 = _3158;
                frontier_phi_60_61_ladder_3 = _3156;
                frontier_phi_60_61_ladder_4 = _3154;
                frontier_phi_60_61_ladder_5 = _3160;
            }
            _3267 = frontier_phi_60_61_ladder_4;
            _3269 = frontier_phi_60_61_ladder_3;
            _3271 = frontier_phi_60_61_ladder_2;
            _3273 = frontier_phi_60_61_ladder_5;
            _3275 = frontier_phi_60_61_ladder_1;
            _3277 = frontier_phi_60_61_ladder;
        }
        float _3282 = isnan(1.0) ? _1084 : (isnan(_1084) ? 1.0 : min(_1084, 1.0));
        _3087 = (_3282 * _3273) + _2618;
        _3089 = (_3282 * _3275) + _2620;
        _3091 = (_3282 * _3277) + _2622;
        _3093 = ((_3267 * 0.039999999105930328369140625) * _3282) + _2941;
        _3095 = ((_3269 * 0.039999999105930328369140625) * _3282) + _2943;
        _3097 = ((_3271 * 0.039999999105930328369140625) * _3282) + _2945;
    }
    else
    {
        _3087 = _2618;
        _3089 = _2620;
        _3091 = _2622;
        _3093 = _2941;
        _3095 = _2943;
        _3097 = _2945;
    }
    float _5067 = isnan(0.0) ? _1069 : (isnan(_1069) ? 0.0 : max(_1069, 0.0));
    float _5078 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
    float _5089 = isnan(0.0) ? _1071 : (isnan(_1071) ? 0.0 : max(_1071, 0.0));
    uint _3117 = _287 + 6u;
    float _3125 = _1021 / cbSceneParam._m0[86u].x;
    float _3126 = _1022 / cbSceneParam._m0[86u].y;
    vec4 _3140 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3125, _3126, (log2((isnan(cbSceneParam._m0[77u].w) ? _955 : (isnan(_955) ? cbSceneParam._m0[77u].w : min(_955, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3142 = _3140.x;
    float _3143 = _3140.y;
    float _3144 = _3140.z;
    float _3145 = _3140.w;
    float _3217;
    float _3219;
    float _3221;
    float _3223;
    if (_955 > cbSceneParam._m0[78u].w)
    {
        float _3179 = isnan(_955) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _955 : min(cbSceneParam._m0[80u].w, _955));
        float _3180 = _3179 / _955;
        float _3191 = _3180 * _1006;
        float _3192 = _1007 * _3180;
        float _3193 = (-0.0) - _3192;
        float _3195 = _3180 * _1008;
        float _3197 = (cbSceneParam._m0[77u].w * _3193) / _3179;
        float _3198 = _3197 + cbSceneParam._m0[79u].w;
        float _3199 = cbSceneParam._m0[79u].w - _3192;
        float _3205 = sqrt(((_3191 * _3191) + (_3192 * _3192)) + (_3195 * _3195));
        float _3208 = (1.0 - (cbSceneParam._m0[77u].w / _3179)) * _3205;
        float _3213 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3215 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3368;
        if (abs((_3193 - _3197) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3368 = ((((_3198 > 0.0) ? exp2(_3213 * _3198) : (2.0 - exp2(_3215 * _3198))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3208;
        }
        else
        {
            float _3328 = 1.0 / cbSceneParam._m0[80u].x;
            float _3329 = isnan(_3199) ? _3198 : (isnan(_3198) ? _3199 : max(_3198, _3199));
            float _3330 = isnan(_3199) ? _3198 : (isnan(_3198) ? _3199 : min(_3198, _3199));
            float _3339 = isnan(0.0) ? _3329 : (isnan(_3329) ? 0.0 : min(_3329, 0.0));
            float _3340 = isnan(0.0) ? _3330 : (isnan(_3330) ? 0.0 : min(_3330, 0.0));
            _3368 = ((abs(_3205 / _3193) * cbSceneParam._m0[80u].y) * ((((_3339 - _3340) * 2.0) - ((exp2(_3213 * (isnan(0.0) ? _3329 : (isnan(_3329) ? 0.0 : max(_3329, 0.0)))) - exp2(_3213 * (isnan(0.0) ? _3330 : (isnan(_3330) ? 0.0 : max(_3330, 0.0))))) * _3328)) - ((exp2(_3215 * _3339) - exp2(_3215 * _3340)) * _3328))) + (_3208 * cbSceneParam._m0[80u].z);
        }
        vec4 _3370 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3125, _3126, 1.0), 0.0);
        float _3379 = exp2((_3368 * (-1.44269502162933349609375)) * (1.0 - _3370.w));
        float _3380 = log2(_3379);
        float _3396 = log2(_3145);
        _3217 = (exp2(_3396 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3380 * cbSceneParam._m0[78u].x)) * _3370.x) / cbSceneParam._m0[78u].x)) + _3142;
        _3219 = (exp2(_3396 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3380 * cbSceneParam._m0[78u].y)) * _3370.y) / cbSceneParam._m0[78u].y)) + _3143;
        _3221 = (exp2(_3396 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3380 * cbSceneParam._m0[78u].z)) * _3370.z) / cbSceneParam._m0[78u].z)) + _3144;
        _3223 = _3379 * _3145;
    }
    else
    {
        _3217 = _3142;
        _3219 = _3143;
        _3221 = _3144;
        _3223 = _3145;
    }
    float _3235 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3236 = _3235 == 3.0;
    float _3237 = log2(_3223);
    float _3244 = exp2(_3237 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5067 : (isnan(_5067) ? 1.0 : min(_5067, 1.0))) * (_3087 + ((isnan(0.0) ? _1809 : (isnan(_1809) ? 0.0 : max(_1809, 0.0))) * _1084))) + ((_3093 + ((isnan(0.0) ? _2099 : (isnan(_2099) ? 0.0 : max(_2099, 0.0))) * _1888)) * cbPerFrame._m0[3u].x));
    float _3245 = exp2(_3237 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5078 : (isnan(_5078) ? 1.0 : min(_5078, 1.0))) * (_3089 + ((isnan(0.0) ? _1812 : (isnan(_1812) ? 0.0 : max(_1812, 0.0))) * _1084))) + ((_3095 + ((isnan(0.0) ? _2102 : (isnan(_2102) ? 0.0 : max(_2102, 0.0))) * _1888)) * cbPerFrame._m0[3u].x));
    float _3246 = exp2(_3237 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5089 : (isnan(_5089) ? 1.0 : min(_5089, 1.0))) * (_3091 + ((isnan(0.0) ? _1815 : (isnan(_1815) ? 0.0 : max(_1815, 0.0))) * _1084))) + ((_3097 + ((isnan(0.0) ? _2105 : (isnan(_2105) ? 0.0 : max(_2105, 0.0))) * _1888)) * cbPerFrame._m0[3u].x));
    float _3255 = (_3235 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3255 * (_3236 ? _3244 : (_3244 + (cbSceneParam._m0[72u].w * _3217)));
    SV_Target.y = _3255 * (_3236 ? _3245 : (_3245 + (cbSceneParam._m0[72u].w * _3219)));
    SV_Target.z = _3255 * (_3236 ? _3246 : (_3246 + (cbSceneParam._m0[72u].w * _3221)));
    SV_Target.w = cbInstanceData._m0[_3117].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3117].w;
}


