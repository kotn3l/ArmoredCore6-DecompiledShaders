#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1255;
float _3898;
float _3899;
float _3900;
float _3901;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _221 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _222 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _223 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _229 = inversesqrt(dot(vec3(_221, _222, _223), vec3(_221, _222, _223)));
    float _236 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _243 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _257 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _259 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _260 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3910 = isnan(0.0) ? _257 : (isnan(_257) ? 0.0 : max(_257, 0.0));
    float _3921 = isnan(0.0) ? _259 : (isnan(_259) ? 0.0 : max(_259, 0.0));
    float _3932 = isnan(0.0) ? _260 : (isnan(_260) ? 0.0 : max(_260, 0.0));
    uint _270 = uint(roundEven(NORMAL.w)) * 13u;
    uint _275 = _270 + 1u;
    uint _279 = _270 + 2u;
    float _288 = sqrt(((cbInstanceData._m0[_275].x * cbInstanceData._m0[_275].x) + (cbInstanceData._m0[_270].x * cbInstanceData._m0[_270].x)) + (cbInstanceData._m0[_279].x * cbInstanceData._m0[_279].x));
    float _289 = _288 * TEXCOORD.z;
    float _290 = _288 * TEXCOORD.w;
    vec4 _303 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _289) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _290) + cbTextureTilingScale._m0[13u].w));
    vec4 _327 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _332 = _327.x * cbMtdParam._m0[11u].x;
    float _333 = _327.y * cbMtdParam._m0[11u].y;
    float _334 = _327.z * cbMtdParam._m0[11u].z;
    vec4 _353 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _289) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _290) + cbTextureTilingScale._m0[5u].w));
    vec4 _404 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _406 = _404.x;
    float _418 = dot(vec4(_406, _404.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _435 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w)).x) * 2.0) - ((((_406 - _418) * cbMtdParam._m0[24u].z) + _418) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3943 = isnan(0.0) ? _435 : (isnan(_435) ? 0.0 : max(_435, 0.0));
    float _436 = isnan(1.0) ? _3943 : (isnan(_3943) ? 1.0 : min(_3943, 1.0));
    float _443 = (_436 * ((_353.x * cbMtdParam._m0[12u].x) - _332)) + _332;
    float _444 = (_436 * ((_353.y * cbMtdParam._m0[12u].y) - _333)) + _333;
    float _445 = (_436 * ((_353.z * cbMtdParam._m0[12u].z) - _334)) + _334;
    float _449 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _303.x) * _443;
    float _452 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _303.y) * _444;
    float _455 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _303.z) * _445;
    float _462 = ((_443 - _449) * (isnan(1.0) ? _3910 : (isnan(_3910) ? 1.0 : min(_3910, 1.0)))) + _449;
    float _463 = ((_444 - _452) * (isnan(1.0) ? _3921 : (isnan(_3921) ? 1.0 : min(_3921, 1.0)))) + _452;
    float _464 = ((_445 - _455) * (isnan(1.0) ? _3932 : (isnan(_3932) ? 1.0 : min(_3932, 1.0)))) + _455;
    vec4 _482 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _289) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _290) + cbTextureTilingScale._m0[20u].w));
    vec4 _507 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _289) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _290) + cbTextureTilingScale._m0[4u].w));
    vec4 _524 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _526 = _524.x;
    float _527 = _524.y;
    float _528 = _524.z;
    float _537 = ((_507.z - _528) * _436) + _528;
    float _540 = ((((_507.x - _526) * _436) + _526) * 2.0) + (-1.0);
    float _541 = ((((_507.y - _527) * _436) + _527) * 2.0) + (-1.0);
    float _542 = dot(vec2(_540, _541), vec2(_540, _541));
    float _3954 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0));
    float _547 = sqrt(1.0 - (isnan(1.0) ? _3954 : (isnan(_3954) ? 1.0 : min(_3954, 1.0))));
    vec4 _563 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _588 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _289) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _290) + cbTextureTilingScale._m0[11u].w));
    float _590 = _588.x;
    float _591 = 1.0 - _590;
    float _604 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_590 - _591) * cbMtdParam._m0[24u].w) + _591) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3965 = isnan(0.0) ? _604 : (isnan(_604) ? 0.0 : max(_604, 0.0));
    float _605 = isnan(1.0) ? _3965 : (isnan(_3965) ? 1.0 : min(_3965, 1.0));
    float _612 = (_605 * (cbMtdParam._m0[17u].x - _462)) + _462;
    float _613 = (_605 * (cbMtdParam._m0[17u].y - _463)) + _463;
    float _614 = (_605 * (cbMtdParam._m0[17u].z - _464)) + _464;
    float _619 = (((_482.z - _537) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _537;
    float _623 = ((_563.z - _619) * cbMtdParam._m0[19u].w) + _619;
    vec4 _636 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _289) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _290) + cbTextureTilingScale._m0[15u].w));
    float _643 = (_636.x * 2.0) + (-1.0);
    float _644 = (_636.y * 2.0) + (-1.0);
    float _645 = dot(vec2(_643, _644), vec2(_643, _644));
    float _3976 = isnan(0.0) ? _645 : (isnan(_645) ? 0.0 : max(_645, 0.0));
    float _653 = (_605 * (_636.z - _623)) + _623;
    float _662 = (_540 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_482.x * 2.0) + (-1.0)))) + (((_563.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _663 = (_541 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_482.y * 2.0) + (-1.0)))) + (((_563.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _675 = (((_643 - _662) + (cbMtdParam._m0[21u].x * _662)) * _605) + _662;
    float _676 = (((_644 - _663) + (cbMtdParam._m0[21u].x * _663)) * _605) + _663;
    float _677 = (_605 * (sqrt(1.0 - (isnan(1.0) ? _3976 : (isnan(_3976) ? 1.0 : min(_3976, 1.0)))) - _547)) + _547;
    float _679 = cbMtdParam._m0[22u].x + _563.w;
    float _682 = fma(_677, _236 * NORMAL.x, fma(_676, _243 * TANGENT.x, (_229 * _221) * _675));
    float _685 = fma(_677, _236 * NORMAL.y, fma(_676, _243 * TANGENT.y, (_229 * _222) * _675));
    float _688 = fma(_677, _236 * NORMAL.z, fma(_676, _243 * TANGENT.z, (_229 * _223) * _675));
    float _692 = inversesqrt(dot(vec3(_682, _685, _688), vec3(_682, _685, _688)));
    float _693 = _692 * _682;
    float _694 = _692 * _685;
    float _695 = _692 * _688;
    float _3987 = isnan(0.0) ? _653 : (isnan(_653) ? 0.0 : max(_653, 0.0));
    float _696 = isnan(1.0) ? _3987 : (isnan(_3987) ? 1.0 : min(_3987, 1.0));
    float _3998 = isnan(0.0) ? _679 : (isnan(_679) ? 0.0 : max(_679, 0.0));
    float _4009 = isnan(0.0) ? _612 : (isnan(_612) ? 0.0 : max(_612, 0.0));
    float _4020 = isnan(0.0) ? _613 : (isnan(_613) ? 0.0 : max(_613, 0.0));
    float _4031 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _714 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _756 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _766 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _756);
    float _767 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _756);
    float _768 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _756);
    float _772 = inversesqrt(dot(vec3(_766, _767, _768), vec3(_766, _767, _768)));
    float _773 = _766 * _772;
    float _774 = _767 * _772;
    float _775 = _768 * _772;
    vec4 _780 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _782 = _780.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _936 = sqrt(((_766 * _766) + (_767 * _767)) + (_768 * _768));
        float _942 = (cbMatDynParam._m0[5u].x * _936) + cbMatDynParam._m0[5u].y;
        float _4042 = isnan(0.0) ? _942 : (isnan(_942) ? 0.0 : max(_942, 0.0));
        float _943 = isnan(1.0) ? _4042 : (isnan(_4042) ? 1.0 : min(_4042, 1.0));
        float _947 = (cbMatDynParam._m0[5u].z * _936) + cbMatDynParam._m0[5u].w;
        float _4053 = isnan(0.0) ? _947 : (isnan(_947) ? 0.0 : max(_947, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4053 : (isnan(_4053) ? 1.0 : min(_4053, 1.0))) - _943)) + _943) < ((_782 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _793 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _794 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _812 = fma(_695, cbSceneParam._m0[5u].z, fma(_694, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _693));
    float _815 = fma(_695, cbSceneParam._m0[6u].z, fma(_694, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _693));
    float _818 = fma(_695, cbSceneParam._m0[7u].z, fma(_694, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _693));
    uint _831 = _270 + 9u;
    uint _832 = _831 + uint(cbMatDynParam._m0[0u].w);
    float _838 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4009 : (isnan(_4009) ? 1.0 : min(_4009, 1.0)))) * cbInstanceData._m0[_832].x;
    float _839 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4020 : (isnan(_4020) ? 1.0 : min(_4020, 1.0)))) * cbInstanceData._m0[_832].y;
    float _840 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4031 : (isnan(_4031) ? 1.0 : min(_4031, 1.0)))) * cbInstanceData._m0[_832].z;
    float _4064 = isnan(0.0) ? _838 : (isnan(_838) ? 0.0 : max(_838, 0.0));
    float _841 = isnan(1.0) ? _4064 : (isnan(_4064) ? 1.0 : min(_4064, 1.0));
    float _4075 = isnan(0.0) ? _839 : (isnan(_839) ? 0.0 : max(_839, 0.0));
    float _842 = isnan(1.0) ? _4075 : (isnan(_4075) ? 1.0 : min(_4075, 1.0));
    float _4086 = isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : max(_840, 0.0));
    float _843 = isnan(1.0) ? _4086 : (isnan(_4086) ? 1.0 : min(_4086, 1.0));
    vec4 _852 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _793, cbSceneParam._m0[86u].y * _794));
    float _856 = ((isnan(1.0) ? _3998 : (isnan(_3998) ? 1.0 : min(_3998, 1.0))) * TEXCOORD_5.w) * _852.x;
    float _857 = dot(vec3(_693, _694, _695), vec3(_773, _774, _775));
    float _860 = _857 * 2.0;
    float _864 = (_860 * _693) - _773;
    float _865 = (_860 * _694) - _774;
    float _866 = (_860 * _695) - _775;
    float _870 = abs(dot(vec3(_773, _774, _775), vec3(_693, _694, _695)));
    float _4097 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
    float _872 = sqrt(_696);
    float _885 = exp2((_872 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4097 : (isnan(_4097) ? 1.0 : min(_4097, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_872 * 3.0));
    float _917 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _921 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _925 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1254;
    float _1256;
    float _1257;
    float _1258;
    float _1259;
    float _1260;
    float _1261;
    float _1262;
    float _1263;
    float _1264;
    float _1265;
    float _1266;
    float _1267;
    float _1268;
    float _1269;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _979 = fma(_925, cbModelParam._m0[26u].z, fma(_921, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _917));
        float _983 = fma(_925, cbModelParam._m0[27u].z, fma(_921, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _917));
        float _987 = fma(_925, cbModelParam._m0[28u].z, fma(_921, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _917));
        float _1012 = _917 + _693;
        float _1013 = _921 + _694;
        float _1014 = _925 + _695;
        float _1024 = fma(_1014, cbModelParam._m0[26u].z, fma(_1013, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1012)) - _979;
        float _1025 = fma(_1014, cbModelParam._m0[27u].z, fma(_1013, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1012)) - _983;
        float _1026 = fma(_1014, cbModelParam._m0[28u].z, fma(_1013, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1012)) - _987;
        float _1030 = inversesqrt(dot(vec3(_1024, _1025, _1026), vec3(_1024, _1025, _1026)));
        float _1043 = ((_1030 * _1024) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_979 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1044 = ((_1030 * _1025) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_983 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1045 = ((_1030 * _1026) / cbModelParam._m0[34u].z) + ((((((_987 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1048 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1043, _1044, _1045), 0.0);
        vec4 _1055 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1043, _1044, _1045), 0.0);
        vec4 _1062 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1043, _1044, _1045), 0.0);
        vec4 _1069 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1043, _1044, _1045), 0.0);
        float _1082 = exp2((_1048.w + (-0.5)) * 20.0) * 2.0;
        float _1083 = _1082 * (_1048.x + (-0.5));
        float _1084 = _1082 * (_1048.y + (-0.5));
        float _1085 = _1082 * (_1048.z + (-0.5));
        float _1092 = exp2((_1055.w + (-0.5)) * 20.0) * 2.0;
        float _1093 = _1092 * (_1055.x + (-0.5));
        float _1094 = _1092 * (_1055.y + (-0.5));
        float _1095 = _1092 * (_1055.z + (-0.5));
        float _1102 = exp2((_1062.w + (-0.5)) * 20.0) * 2.0;
        float _1103 = _1102 * (_1062.x + (-0.5));
        float _1104 = _1102 * (_1062.y + (-0.5));
        float _1105 = _1102 * (_1062.z + (-0.5));
        float _1112 = exp2((_1069.w + (-0.5)) * 20.0) * 2.0;
        float _1113 = _1112 * (_1069.x + (-0.5));
        float _1114 = _1112 * (_1069.y + (-0.5));
        float _1115 = _1112 * (_1069.z + (-0.5));
        float _1116 = isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0));
        float _1117 = isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0));
        float _1118 = isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0));
        float _1119 = _1083 * 0.5;
        float _1120 = _1093 * 0.5;
        float _1121 = _1103 * 0.5;
        float _1122 = dot(vec3(_1119, _1120, _1121), vec3(_1119, _1120, _1121));
        float _1127 = (_1122 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1122);
        float _1136 = (dot(vec3(_693, _694, _695), vec3(_1127 * _1119, _1127 * _1120, _1127 * _1121)) + 1.0) * 0.5;
        float _4123 = isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0));
        float _1146 = sqrt(((_1120 * _1120) + (_1119 * _1119)) + (_1121 * _1121)) / (_1116 + 9.9999997473787516355514526367188e-06);
        float _4134 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
        float _1147 = isnan(1.0) ? _4134 : (isnan(_4134) ? 1.0 : min(_4134, 1.0));
        float _1148 = _1147 * 2.0;
        float _1152 = (1.0 - _1147) / (_1147 + 1.0);
        float _4145 = isnan(0.0) ? _1152 : (isnan(_1152) ? 0.0 : max(_1152, 0.0));
        float _1153 = isnan(1.0) ? _4145 : (isnan(_4145) ? 1.0 : min(_4145, 1.0));
        float _1162 = ((((1.0 - _1153) * (_1148 + 2.0)) * exp2(log2(isnan(1.0) ? _4123 : (isnan(_4123) ? 1.0 : min(_4123, 1.0))) * (_1148 + 1.0))) + _1153) * _1116;
        float _1163 = _1084 * 0.5;
        float _1164 = _1094 * 0.5;
        float _1165 = _1104 * 0.5;
        float _1166 = dot(vec3(_1163, _1164, _1165), vec3(_1163, _1164, _1165));
        float _1171 = (_1166 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1166);
        float _1179 = (dot(vec3(_693, _694, _695), vec3(_1171 * _1163, _1171 * _1164, _1171 * _1165)) + 1.0) * 0.5;
        float _4156 = isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0));
        float _1188 = sqrt(((_1164 * _1164) + (_1163 * _1163)) + (_1165 * _1165)) / (_1117 + 9.9999997473787516355514526367188e-06);
        float _4167 = isnan(0.0) ? _1188 : (isnan(_1188) ? 0.0 : max(_1188, 0.0));
        float _1189 = isnan(1.0) ? _4167 : (isnan(_4167) ? 1.0 : min(_4167, 1.0));
        float _1190 = _1189 * 2.0;
        float _1194 = (1.0 - _1189) / (_1189 + 1.0);
        float _4178 = isnan(0.0) ? _1194 : (isnan(_1194) ? 0.0 : max(_1194, 0.0));
        float _1195 = isnan(1.0) ? _4178 : (isnan(_4178) ? 1.0 : min(_4178, 1.0));
        float _1204 = ((((1.0 - _1195) * (_1190 + 2.0)) * exp2(log2(isnan(1.0) ? _4156 : (isnan(_4156) ? 1.0 : min(_4156, 1.0))) * (_1190 + 1.0))) + _1195) * _1117;
        float _1205 = _1085 * 0.5;
        float _1206 = _1095 * 0.5;
        float _1207 = _1105 * 0.5;
        float _1208 = dot(vec3(_1205, _1206, _1207), vec3(_1205, _1206, _1207));
        float _1213 = (_1208 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1208);
        float _1221 = (dot(vec3(_693, _694, _695), vec3(_1213 * _1205, _1213 * _1206, _1213 * _1207)) + 1.0) * 0.5;
        float _4189 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
        float _1230 = sqrt(((_1206 * _1206) + (_1205 * _1205)) + (_1207 * _1207)) / (_1118 + 9.9999997473787516355514526367188e-06);
        float _4200 = isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0));
        float _1231 = isnan(1.0) ? _4200 : (isnan(_4200) ? 1.0 : min(_4200, 1.0));
        float _1232 = _1231 * 2.0;
        float _1236 = (1.0 - _1231) / (_1231 + 1.0);
        float _4211 = isnan(0.0) ? _1236 : (isnan(_1236) ? 0.0 : max(_1236, 0.0));
        float _1237 = isnan(1.0) ? _4211 : (isnan(_4211) ? 1.0 : min(_4211, 1.0));
        float _1246 = ((((1.0 - _1237) * (_1232 + 2.0)) * exp2(log2(isnan(1.0) ? _4189 : (isnan(_4189) ? 1.0 : min(_4189, 1.0))) * (_1232 + 1.0))) + _1237) * _1118;
        _1254 = _1085;
        _1256 = _1084;
        _1257 = _1083;
        _1258 = _1095;
        _1259 = _1094;
        _1260 = _1093;
        _1261 = _1105;
        _1262 = _1104;
        _1263 = _1103;
        _1264 = _1118;
        _1265 = _1117;
        _1266 = _1116;
        _1267 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0)));
        _1268 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1204 : (isnan(_1204) ? 0.0 : max(_1204, 0.0)));
        _1269 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1246 : (isnan(_1246) ? 0.0 : max(_1246, 0.0)));
    }
    else
    {
        _1254 = _1255;
        _1256 = _1255;
        _1257 = _1255;
        _1258 = _1255;
        _1259 = _1255;
        _1260 = _1255;
        _1261 = _1255;
        _1262 = _1255;
        _1263 = _1255;
        _1264 = _1255;
        _1265 = _1255;
        _1266 = _1255;
        _1267 = 0.0;
        _1268 = 0.0;
        _1269 = 0.0;
    }
    float _1566;
    float _1567;
    float _1568;
    float _1569;
    float _1570;
    float _1571;
    float _1572;
    float _1573;
    float _1574;
    float _1575;
    float _1576;
    float _1577;
    float _1578;
    float _1579;
    float _1580;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1297 = fma(_925, cbModelParam._m0[30u].z, fma(_921, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _917));
        float _1301 = fma(_925, cbModelParam._m0[31u].z, fma(_921, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _917));
        float _1305 = fma(_925, cbModelParam._m0[32u].z, fma(_921, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _917));
        float _1328 = _917 + _693;
        float _1329 = _921 + _694;
        float _1330 = _925 + _695;
        float _1340 = fma(_1330, cbModelParam._m0[30u].z, fma(_1329, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1328)) - _1297;
        float _1341 = fma(_1330, cbModelParam._m0[31u].z, fma(_1329, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1328)) - _1301;
        float _1342 = fma(_1330, cbModelParam._m0[32u].z, fma(_1329, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1328)) - _1305;
        float _1346 = inversesqrt(dot(vec3(_1340, _1341, _1342), vec3(_1340, _1341, _1342)));
        float _1359 = ((_1346 * _1340) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1297 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1360 = ((_1346 * _1341) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1301 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1361 = ((_1346 * _1342) / cbModelParam._m0[35u].z) + ((((((_1305 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1363 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1359, _1360, _1361), 0.0);
        vec4 _1370 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1359, _1360, _1361), 0.0);
        vec4 _1377 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1359, _1360, _1361), 0.0);
        vec4 _1384 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1359, _1360, _1361), 0.0);
        float _1396 = exp2((_1363.w + (-0.5)) * 20.0) * 2.0;
        float _1397 = _1396 * (_1363.x + (-0.5));
        float _1398 = _1396 * (_1363.y + (-0.5));
        float _1399 = _1396 * (_1363.z + (-0.5));
        float _1406 = exp2((_1370.w + (-0.5)) * 20.0) * 2.0;
        float _1407 = _1406 * (_1370.x + (-0.5));
        float _1408 = _1406 * (_1370.y + (-0.5));
        float _1409 = _1406 * (_1370.z + (-0.5));
        float _1416 = exp2((_1377.w + (-0.5)) * 20.0) * 2.0;
        float _1417 = _1416 * (_1377.x + (-0.5));
        float _1418 = _1416 * (_1377.y + (-0.5));
        float _1419 = _1416 * (_1377.z + (-0.5));
        float _1426 = exp2((_1384.w + (-0.5)) * 20.0) * 2.0;
        float _1427 = _1426 * (_1384.x + (-0.5));
        float _1428 = _1426 * (_1384.y + (-0.5));
        float _1429 = _1426 * (_1384.z + (-0.5));
        float _1430 = isnan(0.0) ? _1427 : (isnan(_1427) ? 0.0 : max(_1427, 0.0));
        float _1431 = isnan(0.0) ? _1428 : (isnan(_1428) ? 0.0 : max(_1428, 0.0));
        float _1432 = isnan(0.0) ? _1429 : (isnan(_1429) ? 0.0 : max(_1429, 0.0));
        float _1433 = _1397 * 0.5;
        float _1434 = _1407 * 0.5;
        float _1435 = _1417 * 0.5;
        float _1436 = dot(vec3(_1433, _1434, _1435), vec3(_1433, _1434, _1435));
        float _1441 = (_1436 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1436);
        float _1449 = (dot(vec3(_693, _694, _695), vec3(_1441 * _1433, _1441 * _1434, _1441 * _1435)) + 1.0) * 0.5;
        float _4252 = isnan(0.0) ? _1449 : (isnan(_1449) ? 0.0 : max(_1449, 0.0));
        float _1458 = sqrt(((_1434 * _1434) + (_1433 * _1433)) + (_1435 * _1435)) / (_1430 + 9.9999997473787516355514526367188e-06);
        float _4263 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
        float _1459 = isnan(1.0) ? _4263 : (isnan(_4263) ? 1.0 : min(_4263, 1.0));
        float _1460 = _1459 * 2.0;
        float _1464 = (1.0 - _1459) / (_1459 + 1.0);
        float _4274 = isnan(0.0) ? _1464 : (isnan(_1464) ? 0.0 : max(_1464, 0.0));
        float _1465 = isnan(1.0) ? _4274 : (isnan(_4274) ? 1.0 : min(_4274, 1.0));
        float _1474 = ((((1.0 - _1465) * (_1460 + 2.0)) * exp2(log2(isnan(1.0) ? _4252 : (isnan(_4252) ? 1.0 : min(_4252, 1.0))) * (_1460 + 1.0))) + _1465) * _1430;
        float _1475 = _1398 * 0.5;
        float _1476 = _1408 * 0.5;
        float _1477 = _1418 * 0.5;
        float _1478 = dot(vec3(_1475, _1476, _1477), vec3(_1475, _1476, _1477));
        float _1483 = (_1478 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1478);
        float _1491 = (dot(vec3(_693, _694, _695), vec3(_1483 * _1475, _1483 * _1476, _1483 * _1477)) + 1.0) * 0.5;
        float _4285 = isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0));
        float _1500 = sqrt(((_1476 * _1476) + (_1475 * _1475)) + (_1477 * _1477)) / (_1431 + 9.9999997473787516355514526367188e-06);
        float _4296 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
        float _1501 = isnan(1.0) ? _4296 : (isnan(_4296) ? 1.0 : min(_4296, 1.0));
        float _1502 = _1501 * 2.0;
        float _1506 = (1.0 - _1501) / (_1501 + 1.0);
        float _4307 = isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0));
        float _1507 = isnan(1.0) ? _4307 : (isnan(_4307) ? 1.0 : min(_4307, 1.0));
        float _1516 = ((((1.0 - _1507) * (_1502 + 2.0)) * exp2(log2(isnan(1.0) ? _4285 : (isnan(_4285) ? 1.0 : min(_4285, 1.0))) * (_1502 + 1.0))) + _1507) * _1431;
        float _1517 = _1399 * 0.5;
        float _1518 = _1409 * 0.5;
        float _1519 = _1419 * 0.5;
        float _1520 = dot(vec3(_1517, _1518, _1519), vec3(_1517, _1518, _1519));
        float _1525 = (_1520 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1520);
        float _1533 = (dot(vec3(_693, _694, _695), vec3(_1525 * _1517, _1525 * _1518, _1525 * _1519)) + 1.0) * 0.5;
        float _4318 = isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0));
        float _1542 = sqrt(((_1518 * _1518) + (_1517 * _1517)) + (_1519 * _1519)) / (_1432 + 9.9999997473787516355514526367188e-06);
        float _4329 = isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0));
        float _1543 = isnan(1.0) ? _4329 : (isnan(_4329) ? 1.0 : min(_4329, 1.0));
        float _1544 = _1543 * 2.0;
        float _1548 = (1.0 - _1543) / (_1543 + 1.0);
        float _4340 = isnan(0.0) ? _1548 : (isnan(_1548) ? 0.0 : max(_1548, 0.0));
        float _1549 = isnan(1.0) ? _4340 : (isnan(_4340) ? 1.0 : min(_4340, 1.0));
        float _1558 = ((((1.0 - _1549) * (_1544 + 2.0)) * exp2(log2(isnan(1.0) ? _4318 : (isnan(_4318) ? 1.0 : min(_4318, 1.0))) * (_1544 + 1.0))) + _1549) * _1432;
        _1566 = _1399;
        _1567 = _1398;
        _1568 = _1397;
        _1569 = _1409;
        _1570 = _1408;
        _1571 = _1407;
        _1572 = _1419;
        _1573 = _1418;
        _1574 = _1417;
        _1575 = _1432;
        _1576 = _1431;
        _1577 = _1430;
        _1578 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0)));
        _1579 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1516 : (isnan(_1516) ? 0.0 : max(_1516, 0.0)));
        _1580 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0)));
    }
    else
    {
        _1566 = _1255;
        _1567 = _1255;
        _1568 = _1255;
        _1569 = _1255;
        _1570 = _1255;
        _1571 = _1255;
        _1572 = _1255;
        _1573 = _1255;
        _1574 = _1255;
        _1575 = _1255;
        _1576 = _1255;
        _1577 = _1255;
        _1578 = 0.0;
        _1579 = 0.0;
        _1580 = 0.0;
    }
    float _1590 = (cbModelParam._m0[1u].x * (_1578 - _1267)) + _1267;
    float _1591 = (cbModelParam._m0[1u].x * (_1579 - _1268)) + _1268;
    float _1592 = (cbModelParam._m0[1u].x * (_1580 - _1269)) + _1269;
    float _1613 = fma(_1592, cbSceneParam._m0[89u].z, fma(_1591, cbSceneParam._m0[89u].y, _1590 * cbSceneParam._m0[89u].x));
    float _1616 = fma(_1592, cbSceneParam._m0[90u].z, fma(_1591, cbSceneParam._m0[90u].y, _1590 * cbSceneParam._m0[90u].x));
    float _1619 = fma(_1592, cbSceneParam._m0[91u].z, fma(_1591, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1590));
    float _1634 = _864 * 0.5;
    float _1635 = _865 * 0.5;
    float _1636 = _866 * 0.5;
    float _1637 = dot(vec4(_1634, _1635, _1636, 1.0), vec4(_1568, _1571, _1574, _1577));
    float _1640 = dot(vec4(_1634, _1635, _1636, 1.0), vec4(_1567, _1570, _1573, _1576));
    float _1643 = dot(vec4(_1634, _1635, _1636, 1.0), vec4(_1566, _1569, _1572, _1575));
    float _1677;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1650 = dot(vec4(_1634, _1635, _1636, 1.0), vec4(_1254, _1258, _1261, _1264));
        float _1654 = dot(vec4(_1634, _1635, _1636, 1.0), vec4(_1256, _1259, _1262, _1265));
        float _1658 = dot(vec4(_1634, _1635, _1636, 1.0), vec4(_1257, _1260, _1263, _1266));
        float _1665 = dot(vec4(cbModelParam._m0[39u]), vec4(_1634, _1635, _1636, 1.0));
        _1677 = dot(vec3(isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0)), isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0)), isnan(0.0) ? _1650 : (isnan(_1650) ? 0.0 : max(_1650, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1665) ? 0.0 : (isnan(0.0) ? _1665 : max(0.0, _1665))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1677 = 1.0;
    }
    float _1688;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1679 = dot(vec4(cbModelParam._m0[40u]), vec4(_1634, _1635, _1636, 1.0));
        _1688 = dot(vec3(isnan(0.0) ? _1637 : (isnan(_1637) ? 0.0 : max(_1637, 0.0)), isnan(0.0) ? _1640 : (isnan(_1640) ? 0.0 : max(_1640, 0.0)), isnan(0.0) ? _1643 : (isnan(_1643) ? 0.0 : max(_1643, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1679) ? 0.0 : (isnan(0.0) ? _1679 : max(0.0, _1679))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1688 = 1.0;
    }
    float _1692 = (_1688 * cbModelParam._m0[1u].x) + (_1677 * (1.0 - cbModelParam._m0[1u].x));
    float _1702 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _696);
    float _1703 = isnan(_1702) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1702 : min(cbModelParam._m0[25u].z, _1702));
    float _1784;
    float _1786;
    float _1788;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1751 = fma(_925, cbModelParam._m0[13u].z, fma(_921, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _917)) + cbModelParam._m0[13u].w;
        float _1755 = fma(_925, cbModelParam._m0[14u].z, fma(_921, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _917)) + cbModelParam._m0[14u].w;
        float _1759 = fma(_925, cbModelParam._m0[15u].z, fma(_921, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _917)) + cbModelParam._m0[15u].w;
        float _1762 = fma(_866, cbModelParam._m0[13u].z, fma(_865, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _864));
        float _1765 = fma(_866, cbModelParam._m0[14u].z, fma(_865, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _864));
        float _1768 = fma(_866, cbModelParam._m0[15u].z, fma(_865, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _864));
        float _1796;
        if (_1762 > 0.0)
        {
            _1796 = abs((1.0 - _1751) / _1762);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1762 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1751 + 1.0) / _1762);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1796 = frontier_phi_17_15_ladder;
        }
        float _1966;
        if (_1765 > 0.0)
        {
            _1966 = abs((1.0 - _1755) / _1765);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1765 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1755 + 1.0) / _1765);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _1966 = frontier_phi_26_22_ladder;
        }
        float _2261;
        if (_1768 > 0.0)
        {
            _2261 = abs((1.0 - _1759) / _1768);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1768 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1759 + 1.0) / _1768);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2261 = frontier_phi_38_33_ladder;
        }
        float _2263 = isnan(_1966) ? _1796 : (isnan(_1796) ? _1966 : min(_1796, _1966));
        float _2264 = isnan(_2261) ? _2263 : (isnan(_2263) ? _2261 : min(_2263, _2261));
        float _2268 = (_2264 * _1762) + _1751;
        float _2269 = (_2264 * _1765) + _1755;
        float _2270 = (_2264 * _1768) + _1759;
        float _2271 = _2264 * 9.9999997473787516355514526367188e-05;
        float _2273 = (-1.0) - _2271;
        float _2275 = _2271 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2270 > _2275) || ((_2270 < _2273) || ((_2269 > _2275) || ((_2269 < _2273) || ((_2268 < _2273) || (_2268 > _2275))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2415 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2270, cbModelParam._m0[9u].z, fma(_2269, cbModelParam._m0[9u].y, _2268 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2270, cbModelParam._m0[10u].z, fma(_2269, cbModelParam._m0[10u].y, _2268 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2270, cbModelParam._m0[11u].z, fma(_2269, cbModelParam._m0[11u].y, _2268 * cbModelParam._m0[11u].x))), _1703);
            frontier_phi_16_38_ladder = _2415.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2415.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2415.x * cbModelParam._m0[1u].y;
        }
        _1784 = frontier_phi_16_38_ladder_2;
        _1786 = frontier_phi_16_38_ladder_1;
        _1788 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1772 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_864, _865, _866), _1703);
        _1784 = _1772.x * cbModelParam._m0[1u].y;
        _1786 = _1772.y * cbModelParam._m0[1u].y;
        _1788 = _1772.z * cbModelParam._m0[1u].y;
    }
    float _1792 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _696);
    float _1793 = isnan(_1792) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1792 : min(cbModelParam._m0[25u].w, _1792));
    float _1883;
    float _1885;
    float _1887;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1847 = fma(_925, cbModelParam._m0[21u].z, fma(_921, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _917)) + cbModelParam._m0[21u].w;
        float _1851 = fma(_925, cbModelParam._m0[22u].z, fma(_921, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _917)) + cbModelParam._m0[22u].w;
        float _1855 = fma(_925, cbModelParam._m0[23u].z, fma(_921, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _917)) + cbModelParam._m0[23u].w;
        float _1858 = fma(_866, cbModelParam._m0[21u].z, fma(_865, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _864));
        float _1861 = fma(_866, cbModelParam._m0[22u].z, fma(_865, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _864));
        float _1864 = fma(_866, cbModelParam._m0[23u].z, fma(_865, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _864));
        float _1971;
        if (_1858 > 0.0)
        {
            _1971 = abs((1.0 - _1847) / _1858);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1858 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1847 + 1.0) / _1858);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1971 = frontier_phi_28_24_ladder;
        }
        float _2288;
        if (_1861 > 0.0)
        {
            _2288 = abs((1.0 - _1851) / _1861);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1861 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1851 + 1.0) / _1861);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2288 = frontier_phi_40_35_ladder;
        }
        float _2615;
        if (_1864 > 0.0)
        {
            _2615 = abs((1.0 - _1855) / _1864);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_1864 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_1855 + 1.0) / _1864);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2615 = frontier_phi_50_47_ladder;
        }
        float _2617 = isnan(_2288) ? _1971 : (isnan(_1971) ? _2288 : min(_1971, _2288));
        float _2618 = isnan(_2615) ? _2617 : (isnan(_2617) ? _2615 : min(_2617, _2615));
        float _2622 = (_2618 * _1858) + _1847;
        float _2623 = (_2618 * _1861) + _1851;
        float _2624 = (_2618 * _1864) + _1855;
        float _2625 = _2618 * 9.9999997473787516355514526367188e-05;
        float _2626 = (-1.0) - _2625;
        float _2628 = _2625 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2624 > _2628) || ((_2624 < _2626) || ((_2623 > _2628) || ((_2623 < _2626) || ((_2622 < _2626) || (_2622 > _2628))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2742 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2624, cbModelParam._m0[17u].z, fma(_2623, cbModelParam._m0[17u].y, _2622 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2624, cbModelParam._m0[18u].z, fma(_2623, cbModelParam._m0[18u].y, _2622 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2624, cbModelParam._m0[19u].z, fma(_2623, cbModelParam._m0[19u].y, _2622 * cbModelParam._m0[19u].x))), _1793);
            frontier_phi_25_50_ladder = _2742.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2742.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2742.x * cbModelParam._m0[1u].z;
        }
        _1883 = frontier_phi_25_50_ladder_2;
        _1885 = frontier_phi_25_50_ladder_1;
        _1887 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _1867 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_864, _865, _866), _1793);
        _1883 = _1867.x * cbModelParam._m0[1u].z;
        _1885 = _1867.y * cbModelParam._m0[1u].z;
        _1887 = _1867.z * cbModelParam._m0[1u].z;
    }
    float _1899 = ((((1.0 - _885) * ((_872 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_885 * _872)) * _856;
    float _1900 = _1899 * ((cbModelParam._m0[1u].w * (_1883 - _1784)) + _1784);
    float _1901 = _1899 * ((cbModelParam._m0[1u].w * (_1885 - _1786)) + _1786);
    float _1902 = _1899 * ((cbModelParam._m0[1u].w * (_1887 - _1788)) + _1788);
    float _1905 = fma(_1902, cbSceneParam._m0[89u].z, fma(_1901, cbSceneParam._m0[89u].y, _1900 * cbSceneParam._m0[89u].x));
    float _1908 = fma(_1902, cbSceneParam._m0[90u].z, fma(_1901, cbSceneParam._m0[90u].y, _1900 * cbSceneParam._m0[90u].x));
    float _1911 = fma(_1902, cbSceneParam._m0[91u].z, fma(_1901, cbSceneParam._m0[91u].y, _1900 * cbSceneParam._m0[91u].x));
    float _1945 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1949 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1953 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1957 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1958 = _1945 / _1957;
    float _1959 = _1949 / _1957;
    float _1960 = _1953 / _1957;
    float _2107;
    float _2108;
    float _2109;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1987 = ((uint(_1960 > cbSceneParam._m0[59u].y) + uint(_1960 > cbSceneParam._m0[59u].x)) + uint(_1960 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1988 = _1987 + 43u;
        uint _1996 = _1987 + 44u;
        uint _2004 = _1987 + 45u;
        uint _2012 = _1987 + 46u;
        float _2023 = fma(_1957, cbSceneParam._m0[_1988].w, fma(_1953, cbSceneParam._m0[_1988].z, fma(_1949, cbSceneParam._m0[_1988].y, _1945 * cbSceneParam._m0[_1988].x)));
        float _2027 = fma(_1957, cbSceneParam._m0[_1996].w, fma(_1953, cbSceneParam._m0[_1996].z, fma(_1949, cbSceneParam._m0[_1996].y, _1945 * cbSceneParam._m0[_1996].x)));
        float _2035 = fma(_1957, cbSceneParam._m0[_2012].w, fma(_1953, cbSceneParam._m0[_2012].z, fma(_1949, cbSceneParam._m0[_2012].y, _1945 * cbSceneParam._m0[_2012].x)));
        float _2040 = cbSceneParam._m0[33u].z * _2035;
        float _2042 = cbSceneParam._m0[33u].w * _2035;
        float _2045 = fma(_1957, cbSceneParam._m0[_2004].w, fma(_1953, cbSceneParam._m0[_2004].z, fma(_1949, cbSceneParam._m0[_2004].y, _1945 * cbSceneParam._m0[_2004].x))) / _2035;
        float _2093 = (cbSceneParam._m0[33u].x - sqrt(((_1959 * _1959) + (_1958 * _1958)) + (_1960 * _1960))) * cbSceneParam._m0[33u].y;
        float _4466 = isnan(0.0) ? _2093 : (isnan(_2093) ? 0.0 : max(_2093, 0.0));
        float _2100 = (isnan(1.0) ? _4466 : (isnan(_4466) ? 1.0 : min(_4466, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2040 + _2023) / _2035, (_2042 + _2027) / _2035), _2045), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2042 + _2023) / _2035, (_2027 - _2040) / _2035), _2045), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2023 - _2040) / _2035, (_2027 - _2042) / _2035), _2045), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2023 - _2042) / _2035, (_2040 + _2027) / _2035), _2045), 0.0)).x), vec4(0.25)));
        _2107 = 1.0 - (_2100 * cbSceneParam._m0[34u].x);
        _2108 = 1.0 - (_2100 * cbSceneParam._m0[34u].y);
        _2109 = 1.0 - (_2100 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2107 = 1.0;
        _2108 = 1.0;
        _2109 = 1.0;
    }
    float _2173;
    float _2175;
    float _2177;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2161 = fma(_1957, cbSceneParam._m0[63u].w, fma(_1953, cbSceneParam._m0[63u].z, fma(_1949, cbSceneParam._m0[63u].y, _1945 * cbSceneParam._m0[63u].x)));
        float _2162 = fma(_1957, cbSceneParam._m0[60u].w, fma(_1953, cbSceneParam._m0[60u].z, fma(_1949, cbSceneParam._m0[60u].y, _1945 * cbSceneParam._m0[60u].x))) / _2161;
        float _2163 = fma(_1957, cbSceneParam._m0[61u].w, fma(_1953, cbSceneParam._m0[61u].z, fma(_1949, cbSceneParam._m0[61u].y, _1945 * cbSceneParam._m0[61u].x))) / _2161;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2162 >= cbSceneParam._m0[64u].x) && (_2163 >= cbSceneParam._m0[64u].y)) && (_2162 <= cbSceneParam._m0[64u].z)) && (_2163 <= cbSceneParam._m0[64u].w))
        {
            float _2301 = fma(_1957, cbSceneParam._m0[62u].w, fma(_1953, cbSceneParam._m0[62u].z, fma(_1949, cbSceneParam._m0[62u].y, _1945 * cbSceneParam._m0[62u].x))) / _2161;
            float _2305 = isnan(cbSceneParam._m0[41u].w) ? _2301 : (isnan(_2301) ? cbSceneParam._m0[41u].w : max(_2301, cbSceneParam._m0[41u].w));
            float _2348 = (cbSceneParam._m0[33u].x - sqrt(((_1959 * _1959) + (_1958 * _1958)) + (_1960 * _1960))) * cbSceneParam._m0[33u].y;
            float _4482 = isnan(0.0) ? _2348 : (isnan(_2348) ? 0.0 : max(_2348, 0.0));
            float _2355 = (isnan(1.0) ? _4482 : (isnan(_4482) ? 1.0 : min(_4482, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2162, cbSceneParam._m0[33u].w + _2163), _2305), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2162, _2163 - cbSceneParam._m0[33u].z), _2305), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2162 - cbSceneParam._m0[33u].z, _2163 - cbSceneParam._m0[33u].w), _2305), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2162 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2163), _2305), 0.0)).x), vec4(0.25)));
            float _2359 = 1.0 - (_2355 * cbSceneParam._m0[34u].x);
            float _2360 = 1.0 - (_2355 * cbSceneParam._m0[34u].y);
            float _2361 = 1.0 - (_2355 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2361) ? _2109 : (isnan(_2109) ? _2361 : min(_2109, _2361));
            frontier_phi_37_36_ladder_1 = isnan(_2360) ? _2108 : (isnan(_2108) ? _2360 : min(_2108, _2360));
            frontier_phi_37_36_ladder_2 = isnan(_2359) ? _2107 : (isnan(_2107) ? _2359 : min(_2107, _2359));
        }
        else
        {
            frontier_phi_37_36_ladder = _2109;
            frontier_phi_37_36_ladder_1 = _2108;
            frontier_phi_37_36_ladder_2 = _2107;
        }
        _2173 = frontier_phi_37_36_ladder_2;
        _2175 = frontier_phi_37_36_ladder_1;
        _2177 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2173 = _2107;
        _2175 = _2108;
        _2177 = _2109;
    }
    uvec4 _2182 = floatBitsToUint(cbInstanceData._m0[_270 + 5u]);
    uint _2184 = _2182.x * 14u;
    uint _2185 = _2184 + 13u;
    float _2192 = _856 + (-1.0);
    float _2197 = (cbLight._m0[_2185].x * _2192) + 1.0;
    float _2198 = (cbLight._m0[_2185].y * _2192) + 1.0;
    float _2199 = (cbLight._m0[_2185].z * _2192) + 1.0;
    float _2200 = (cbLight._m0[_2185].w * _2192) + 1.0;
    uint _2201 = _2184 + 5u;
    float _2207 = isnan(1.0) ? _2198 : (isnan(_2198) ? 1.0 : min(_2198, 1.0));
    uint _2211 = _2184 + 4u;
    float _2220 = isnan(1.0) ? _2197 : (isnan(_2197) ? 1.0 : min(_2197, 1.0));
    uint _2224 = _2184 | 1u;
    float _2235 = dot(vec3(cbLight._m0[_2184].xyz), vec3(_693, _694, _695));
    float _2238 = dot(vec3(cbLight._m0[_2224].xyz), vec3(_693, _694, _695));
    float _4518 = isnan(0.0) ? _2235 : (isnan(_2235) ? 0.0 : max(_2235, 0.0));
    float _4529 = isnan(0.0) ? _2238 : (isnan(_2238) ? 0.0 : max(_2238, 0.0));
    float _2243 = (isnan(1.0) ? _4518 : (isnan(_4518) ? 1.0 : min(_4518, 1.0))) * 0.3183098733425140380859375;
    float _2245 = (isnan(1.0) ? _4529 : (isnan(_4529) ? 1.0 : min(_4529, 1.0))) * 0.3183098733425140380859375;
    float _2252 = ((cbLight._m0[_2201].x * _2207) * _2245) + (((cbLight._m0[_2211].x * _2173) * _2220) * _2243);
    float _2253 = ((_2207 * cbLight._m0[_2201].y) * _2245) + (((cbLight._m0[_2211].y * _2175) * _2220) * _2243);
    float _2254 = ((_2207 * cbLight._m0[_2201].z) * _2245) + (((cbLight._m0[_2211].z * _2177) * _2220) * _2243);
    uvec4 _2258 = floatBitsToUint(cbLight._m0[_2184 + 12u]);
    bool _2260 = _2258.x == 0u;
    float _2362;
    float _2364;
    float _2366;
    if (_2260)
    {
        _2362 = _2252;
        _2364 = _2253;
        _2366 = _2254;
    }
    else
    {
        uint _2370 = _2184 + 6u;
        float _2386 = (dot(vec3(cbLight._m0[_2184 + 2u].xyz), vec3(_693, _694, _695)) * 0.5) + 0.5;
        float _2387 = _2386 * _2386;
        float _4540 = isnan(0.0) ? _2387 : (isnan(_2387) ? 0.0 : max(_2387, 0.0));
        float _2388 = isnan(1.0) ? _4540 : (isnan(_4540) ? 1.0 : min(_4540, 1.0));
        float _2389 = isnan(1.0) ? _2199 : (isnan(_2199) ? 1.0 : min(_2199, 1.0));
        _2362 = (((cbLight._m0[_2370].x * 0.3183098733425140380859375) * _2388) * _2389) + _2252;
        _2364 = (((cbLight._m0[_2370].y * 0.3183098733425140380859375) * _2388) * _2389) + _2253;
        _2366 = (((cbLight._m0[_2370].z * 0.3183098733425140380859375) * _2388) * _2389) + _2254;
    }
    bool _2369 = _2258.y == 0u;
    float _2424;
    float _2426;
    float _2428;
    if (_2369)
    {
        _2424 = _2362;
        _2426 = _2364;
        _2428 = _2366;
    }
    else
    {
        uint _2586 = _2184 + 7u;
        float _2602 = (dot(vec3(cbLight._m0[_2184 + 3u].xyz), vec3(_693, _694, _695)) * 0.5) + 0.5;
        float _2603 = _2602 * _2602;
        float _4556 = isnan(0.0) ? _2603 : (isnan(_2603) ? 0.0 : max(_2603, 0.0));
        float _2604 = isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0));
        float _2605 = isnan(1.0) ? _2200 : (isnan(_2200) ? 1.0 : min(_2200, 1.0));
        _2424 = (((cbLight._m0[_2586].x * 0.3183098733425140380859375) * _2604) * _2605) + _2362;
        _2426 = (((cbLight._m0[_2586].y * 0.3183098733425140380859375) * _2604) * _2605) + _2364;
        _2428 = (((cbLight._m0[_2586].z * 0.3183098733425140380859375) * _2604) * _2605) + _2366;
    }
    uint _2431 = _2184 + 8u;
    float _2444 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2184].w)) * _696) * 0.949999988079071044921875);
    float _2445 = _2444 * _2444;
    float _2446 = cbLight._m0[_2184].x + _773;
    float _2447 = cbLight._m0[_2184].y + _774;
    float _2448 = cbLight._m0[_2184].z + _775;
    float _2452 = inversesqrt(dot(vec3(_2446, _2447, _2448), vec3(_2446, _2447, _2448)));
    float _2453 = _2452 * _2446;
    float _2454 = _2452 * _2447;
    float _2455 = _2452 * _2448;
    float _2456 = dot(vec3(_693, _694, _695), vec3(cbLight._m0[_2184].xyz));
    float _4572 = isnan(0.0) ? _2456 : (isnan(_2456) ? 0.0 : max(_2456, 0.0));
    float _2459 = isnan(1.0) ? _4572 : (isnan(_4572) ? 1.0 : min(_4572, 1.0));
    float _4583 = isnan(0.0) ? _857 : (isnan(_857) ? 0.0 : max(_857, 0.0));
    float _2460 = isnan(1.0) ? _4583 : (isnan(_4583) ? 1.0 : min(_4583, 1.0));
    float _2461 = dot(vec3(_693, _694, _695), vec3(_2453, _2454, _2455));
    float _4594 = isnan(0.0) ? _2461 : (isnan(_2461) ? 0.0 : max(_2461, 0.0));
    float _2464 = isnan(1.0) ? _4594 : (isnan(_4594) ? 1.0 : min(_4594, 1.0));
    float _2465 = dot(vec3(cbLight._m0[_2184].xyz), vec3(_2453, _2454, _2455));
    float _4605 = isnan(0.0) ? _2465 : (isnan(_2465) ? 0.0 : max(_2465, 0.0));
    float _2469 = _2445 * _2445;
    float _2473 = ((_2464 * _2464) * (_2469 + (-1.0))) + 1.0;
    float _2484 = (exp2(log2(1.0 - (isnan(1.0) ? _4605 : (isnan(_4605) ? 1.0 : min(_4605, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2485 = 1.0 - _2445;
    float _2496 = (0.5 / (((_2460 * ((_2459 * _2485) + _2445)) + 9.9999999392252902907785028219223e-09) + (((_2460 * _2485) + _2445) * _2459))) * _2459;
    float _4616 = isnan(0.0) ? _2496 : (isnan(_2496) ? 0.0 : max(_2496, 0.0));
    float _2498 = (isnan(1.0) ? _4616 : (isnan(_4616) ? 1.0 : min(_4616, 1.0))) * (_2469 / ((_2473 * _2473) * 3.141590118408203125));
    uint _2512 = _2184 + 9u;
    float _2523 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2224].w)) * _696) * 0.949999988079071044921875);
    float _2524 = _2523 * _2523;
    float _2525 = cbLight._m0[_2224].x + _773;
    float _2526 = cbLight._m0[_2224].y + _774;
    float _2527 = cbLight._m0[_2224].z + _775;
    float _2531 = inversesqrt(dot(vec3(_2525, _2526, _2527), vec3(_2525, _2526, _2527)));
    float _2532 = _2531 * _2525;
    float _2533 = _2531 * _2526;
    float _2534 = _2531 * _2527;
    float _2535 = dot(vec3(_693, _694, _695), vec3(cbLight._m0[_2224].xyz));
    float _4627 = isnan(0.0) ? _2535 : (isnan(_2535) ? 0.0 : max(_2535, 0.0));
    float _2538 = isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0));
    float _2539 = dot(vec3(_693, _694, _695), vec3(_2532, _2533, _2534));
    float _4638 = isnan(0.0) ? _2539 : (isnan(_2539) ? 0.0 : max(_2539, 0.0));
    float _2542 = isnan(1.0) ? _4638 : (isnan(_4638) ? 1.0 : min(_4638, 1.0));
    float _2543 = dot(vec3(cbLight._m0[_2224].xyz), vec3(_2532, _2533, _2534));
    float _4649 = isnan(0.0) ? _2543 : (isnan(_2543) ? 0.0 : max(_2543, 0.0));
    float _2547 = _2524 * _2524;
    float _2551 = ((_2542 * _2542) * (_2547 + (-1.0))) + 1.0;
    float _2560 = (exp2(log2(1.0 - (isnan(1.0) ? _4649 : (isnan(_4649) ? 1.0 : min(_4649, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2561 = 1.0 - _2524;
    float _2571 = (0.5 / (((_2460 * ((_2538 * _2561) + _2524)) + 9.9999999392252902907785028219223e-09) + (((_2460 * _2561) + _2524) * _2538))) * _2538;
    float _4660 = isnan(0.0) ? _2571 : (isnan(_2571) ? 0.0 : max(_2571, 0.0));
    float _2573 = (isnan(1.0) ? _4660 : (isnan(_4660) ? 1.0 : min(_4660, 1.0))) * (_2547 / ((_2551 * _2551) * 3.141590118408203125));
    float _2583 = (((_2560 * cbLight._m0[_2512].x) * _2573) * _2207) + ((((cbLight._m0[_2431].x * _2173) * _2484) * _2498) * _2220);
    float _2584 = (((_2560 * cbLight._m0[_2512].y) * _2573) * _2207) + ((((cbLight._m0[_2431].y * _2175) * _2484) * _2498) * _2220);
    float _2585 = (((_2560 * cbLight._m0[_2512].z) * _2573) * _2207) + ((((cbLight._m0[_2431].z * _2177) * _2484) * _2498) * _2220);
    float _2641;
    float _2643;
    float _2645;
    if (_2260)
    {
        _2641 = _2583;
        _2643 = _2584;
        _2645 = _2585;
    }
    else
    {
        uint _2647 = _2184 + 2u;
        uint _2651 = _2184 + 10u;
        float _2665 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2647].w)) * _696) * 0.949999988079071044921875);
        float _2666 = _2665 * _2665;
        float _2667 = cbLight._m0[_2647].x + _773;
        float _2668 = cbLight._m0[_2647].y + _774;
        float _2669 = cbLight._m0[_2647].z + _775;
        float _2673 = inversesqrt(dot(vec3(_2667, _2668, _2669), vec3(_2667, _2668, _2669)));
        float _2674 = _2673 * _2667;
        float _2675 = _2673 * _2668;
        float _2676 = _2673 * _2669;
        float _2677 = dot(vec3(_693, _694, _695), vec3(cbLight._m0[_2647].xyz));
        float _4671 = isnan(0.0) ? _2677 : (isnan(_2677) ? 0.0 : max(_2677, 0.0));
        float _2680 = isnan(1.0) ? _4671 : (isnan(_4671) ? 1.0 : min(_4671, 1.0));
        float _2681 = dot(vec3(_693, _694, _695), vec3(_2674, _2675, _2676));
        float _4682 = isnan(0.0) ? _2681 : (isnan(_2681) ? 0.0 : max(_2681, 0.0));
        float _2684 = isnan(1.0) ? _4682 : (isnan(_4682) ? 1.0 : min(_4682, 1.0));
        float _2685 = dot(vec3(cbLight._m0[_2647].xyz), vec3(_2674, _2675, _2676));
        float _4693 = isnan(0.0) ? _2685 : (isnan(_2685) ? 0.0 : max(_2685, 0.0));
        float _2689 = _2666 * _2666;
        float _2693 = ((_2684 * _2684) * (_2689 + (-1.0))) + 1.0;
        float _2702 = (exp2(log2(1.0 - (isnan(1.0) ? _4693 : (isnan(_4693) ? 1.0 : min(_4693, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2703 = 1.0 - _2666;
        float _2713 = (0.5 / (((_2460 * ((_2680 * _2703) + _2666)) + 9.9999999392252902907785028219223e-09) + (((_2460 * _2703) + _2666) * _2680))) * _2680;
        float _4704 = isnan(0.0) ? _2713 : (isnan(_2713) ? 0.0 : max(_2713, 0.0));
        float _2715 = (isnan(1.0) ? _4704 : (isnan(_4704) ? 1.0 : min(_4704, 1.0))) * (_2689 / ((_2693 * _2693) * 3.141590118408203125));
        float _2716 = isnan(1.0) ? _2199 : (isnan(_2199) ? 1.0 : min(_2199, 1.0));
        _2641 = (((_2702 * cbLight._m0[_2651].x) * _2715) * _2716) + _2583;
        _2643 = (((_2702 * cbLight._m0[_2651].y) * _2715) * _2716) + _2584;
        _2645 = (((_2702 * cbLight._m0[_2651].z) * _2715) * _2716) + _2585;
    }
    float _2747;
    float _2749;
    float _2751;
    if (_2369)
    {
        _2747 = _2641;
        _2749 = _2643;
        _2751 = _2645;
    }
    else
    {
        uint _2758 = _2184 + 3u;
        uint _2762 = _2184 + 11u;
        float _2776 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2758].w)) * _696) * 0.949999988079071044921875);
        float _2777 = _2776 * _2776;
        float _2778 = cbLight._m0[_2758].x + _773;
        float _2779 = cbLight._m0[_2758].y + _774;
        float _2780 = cbLight._m0[_2758].z + _775;
        float _2784 = inversesqrt(dot(vec3(_2778, _2779, _2780), vec3(_2778, _2779, _2780)));
        float _2785 = _2784 * _2778;
        float _2786 = _2784 * _2779;
        float _2787 = _2784 * _2780;
        float _2788 = dot(vec3(_693, _694, _695), vec3(cbLight._m0[_2758].xyz));
        float _4720 = isnan(0.0) ? _2788 : (isnan(_2788) ? 0.0 : max(_2788, 0.0));
        float _2791 = isnan(1.0) ? _4720 : (isnan(_4720) ? 1.0 : min(_4720, 1.0));
        float _2792 = dot(vec3(_693, _694, _695), vec3(_2785, _2786, _2787));
        float _4731 = isnan(0.0) ? _2792 : (isnan(_2792) ? 0.0 : max(_2792, 0.0));
        float _2795 = isnan(1.0) ? _4731 : (isnan(_4731) ? 1.0 : min(_4731, 1.0));
        float _2796 = dot(vec3(cbLight._m0[_2758].xyz), vec3(_2785, _2786, _2787));
        float _4742 = isnan(0.0) ? _2796 : (isnan(_2796) ? 0.0 : max(_2796, 0.0));
        float _2800 = _2777 * _2777;
        float _2804 = ((_2795 * _2795) * (_2800 + (-1.0))) + 1.0;
        float _2813 = (exp2(log2(1.0 - (isnan(1.0) ? _4742 : (isnan(_4742) ? 1.0 : min(_4742, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2814 = 1.0 - _2777;
        float _2824 = (0.5 / (((_2460 * ((_2791 * _2814) + _2777)) + 9.9999999392252902907785028219223e-09) + (((_2460 * _2814) + _2777) * _2791))) * _2791;
        float _4753 = isnan(0.0) ? _2824 : (isnan(_2824) ? 0.0 : max(_2824, 0.0));
        float _2826 = (isnan(1.0) ? _4753 : (isnan(_4753) ? 1.0 : min(_4753, 1.0))) * (_2800 / ((_2804 * _2804) * 3.141590118408203125));
        float _2827 = isnan(1.0) ? _2200 : (isnan(_2200) ? 1.0 : min(_2200, 1.0));
        _2747 = (((_2813 * cbLight._m0[_2762].x) * _2826) * _2827) + _2641;
        _2749 = (((_2813 * cbLight._m0[_2762].y) * _2826) * _2827) + _2643;
        _2751 = (((_2813 * cbLight._m0[_2762].z) * _2826) * _2827) + _2645;
    }
    float _2893;
    float _2895;
    float _2897;
    float _2899;
    float _2901;
    float _2903;
    if (_2182.y == 0u)
    {
        uvec4 _2848 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2849 = _2848.x;
        uint _2860 = uint((float(_2848.y) * floor(float(uint(cbSceneParam._m0[85u].y * _794) / _2849))) + floor(float(uint(cbSceneParam._m0[85u].x * _793) / _2849)));
        float _2870 = (log2(_1960 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2871 = isnan(0.0) ? _2870 : (isnan(_2870) ? 0.0 : max(_2870, 0.0));
        uint _2874 = uint(isnan(14.0) ? _2871 : (isnan(_2871) ? 14.0 : min(_2871, 14.0)));
        uvec4 _2879 = texelFetch(g_lightClusterGridBuffer, int(((_2874 << 2u) + (_2860 << 6u)) >> 2u));
        uint _2880 = _2879.x;
        uint _2881 = _2848.z;
        float _2960;
        float _2962;
        float _2964;
        float _2966;
        float _2968;
        float _2970;
        if (((((1u << ((_2881 >> 4u) & 15u)) + 4294967295u) & _2880) == 0u) || ((_2881 & 240u) == 0u))
        {
            _2960 = 0.0;
            _2962 = 0.0;
            _2964 = 0.0;
            _2966 = 0.0;
            _2968 = 0.0;
            _2970 = 0.0;
        }
        else
        {
            float _2961;
            float _2963;
            float _2965;
            float _2967;
            float _2969;
            float _2971;
            float _3113 = 0.0;
            float _3114 = 0.0;
            float _3115 = 0.0;
            float _3116 = 0.0;
            float _3117 = 0.0;
            float _3118 = 0.0;
            uint _3119 = 0u;
            uint _3128;
            bool _3129;
            for (;;)
            {
                _3128 = texelFetch(g_lightClassification, int((((_2874 << 5u) + (_2860 << 9u)) + (_3119 << 2u)) >> 2u)).x;
                _3129 = _3128 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3129)
                {
                    frontier_phi_71_pred = _3118;
                    frontier_phi_71_pred_1 = _3117;
                    frontier_phi_71_pred_2 = _3116;
                    frontier_phi_71_pred_3 = _3115;
                    frontier_phi_71_pred_4 = _3114;
                    frontier_phi_71_pred_5 = _3113;
                }
                else
                {
                    float _3258;
                    float _3259;
                    float _3260;
                    float _3261;
                    float _3262;
                    float _3263;
                    uint _3264;
                    _3258 = _3113;
                    _3259 = _3114;
                    _3260 = _3115;
                    _3261 = _3116;
                    _3262 = _3117;
                    _3263 = _3118;
                    _3264 = _3128;
                    float _3185;
                    float _3186;
                    float _3187;
                    float _3188;
                    float _3189;
                    float _3190;
                    for (;;)
                    {
                        uint _3268 = uint(findLSB(_3264)) + (_3119 << 5u);
                        uint _3265 = (_3264 + 4294967295u) & _3264;
                        uint _3270 = _3268 * 48u;
                        vec4 _3284 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3270)).x, texelFetch(g_PointLightRenderingBuffer, int(_3270 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3270 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3270 + 3u)).x));
                        uint _3290 = (_3268 * 48u) + 4u;
                        vec4 _3303 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3290)).x, texelFetch(g_PointLightRenderingBuffer, int(_3290 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3290 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3290 + 3u)).x));
                        uint _3309 = (_3268 * 48u) + 8u;
                        vec3 _3320 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3309)).x, texelFetch(g_PointLightRenderingBuffer, int(_3309 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3309 + 2u)).x));
                        float _3324 = _3284.x - _1958;
                        float _3325 = _3284.y - _1959;
                        float _3326 = _3284.z - _1960;
                        float _3327 = dot(vec3(_3324, _3325, _3326), vec3(_3324, _3325, _3326));
                        float _3330 = inversesqrt(_3327);
                        float _3331 = _3330 * _3324;
                        float _3332 = _3330 * _3325;
                        float _3333 = _3330 * _3326;
                        float _3334 = dot(vec3(_812, _815, _818), vec3(_3331, _3332, _3333));
                        float _3339 = 1.0 - (_3327 * _3284.w);
                        float _4779 = isnan(0.0) ? _3339 : (isnan(_3339) ? 0.0 : max(_3339, 0.0));
                        float _3340 = isnan(1.0) ? _4779 : (isnan(_4779) ? 1.0 : min(_4779, 1.0));
                        float _3341 = sqrt(_3327) * _3303.w;
                        float _3344 = 1.39999997615814208984375 / (_3341 + 1.39999997615814208984375);
                        float _3345 = _3344 * _3344;
                        float _3348 = ((1.0 - _3345) * _3334) + _3345;
                        float _3351 = _3341 * _3341;
                        float _3355 = ((isnan(0.0) ? _3348 : (isnan(_3348) ? 0.0 : max(_3348, 0.0))) * _3340) / ((_3351 * 0.699999988079071044921875) + 1.0);
                        float _3359 = (-0.0) - _1958;
                        float _3360 = (-0.0) - _1959;
                        float _3361 = (-0.0) - _1960;
                        float _3365 = inversesqrt(dot(vec3(_3359, _3360, _3361), vec3(_3359, _3360, _3361)));
                        float _3366 = _3365 * _3359;
                        float _3367 = _3365 * _3360;
                        float _3368 = _3365 * _3361;
                        float _3375 = exp2(log2(1.0 / ((_3351 * 3.5) + 5.0)) * 0.25);
                        float _3376 = 1.0 - _872;
                        float _3383 = sqrt(1.0 - ((1.0 - (_3376 * _3376)) * (1.0 - (_3375 * _3375))));
                        float _3384 = _3383 * _3383;
                        float _3385 = _3384 * _3384;
                        float _3386 = _3366 + _3331;
                        float _3387 = _3367 + _3332;
                        float _3388 = _3368 + _3333;
                        float _3392 = inversesqrt(dot(vec3(_3386, _3387, _3388), vec3(_3386, _3387, _3388)));
                        float _3396 = dot(vec3(_812, _815, _818), vec3(_3366, _3367, _3368));
                        float _4795 = isnan(0.0) ? _3396 : (isnan(_3396) ? 0.0 : max(_3396, 0.0));
                        float _3399 = isnan(1.0) ? _4795 : (isnan(_4795) ? 1.0 : min(_4795, 1.0));
                        float _3400 = dot(vec3(_812, _815, _818), vec3(_3392 * _3386, _3392 * _3387, _3392 * _3388));
                        float _4806 = isnan(0.0) ? _3400 : (isnan(_3400) ? 0.0 : max(_3400, 0.0));
                        float _3403 = isnan(1.0) ? _4806 : (isnan(_4806) ? 1.0 : min(_4806, 1.0));
                        float _3407 = ((_3403 * _3403) * (_3385 + (-1.0))) + 1.0;
                        float _3408 = _3344 * _3384;
                        float _3409 = _3408 * _3408;
                        float _3412 = ((1.0 - _3409) * _3334) + _3409;
                        float _4817 = isnan(0.0) ? _3412 : (isnan(_3412) ? 0.0 : max(_3412, 0.0));
                        float _3413 = isnan(1.0) ? _4817 : (isnan(_4817) ? 1.0 : min(_4817, 1.0));
                        float _3414 = 1.0 - _3384;
                        float _3424 = (0.5 / (((_3413 * ((_3399 * _3414) + _3384)) + 9.9999999392252902907785028219223e-09) + (((_3413 * _3414) + _3384) * _3399))) * _3413;
                        float _4828 = isnan(0.0) ? _3424 : (isnan(_3424) ? 0.0 : max(_3424, 0.0));
                        float _3435 = (((_3385 * 3.1415927410125732421875) * (isnan(1.0) ? _4828 : (isnan(_4828) ? 1.0 : min(_4828, 1.0)))) / ((_3407 * _3407) * ((_3351 * 2.1991131305694580078125) + 3.141590118408203125))) * _3340;
                        _3188 = (_3355 * _3303.x) + _3261;
                        _3189 = (_3355 * _3303.y) + _3262;
                        _3190 = (_3355 * _3303.z) + _3263;
                        _3185 = (_3435 * _3320.x) + _3258;
                        _3186 = (_3435 * _3320.y) + _3259;
                        _3187 = (_3435 * _3320.z) + _3260;
                        if (_3265 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3258 = _3185;
                            _3259 = _3186;
                            _3260 = _3187;
                            _3261 = _3188;
                            _3262 = _3189;
                            _3263 = _3190;
                            _3264 = _3265;
                        }
                    }
                    frontier_phi_71_pred = _3190;
                    frontier_phi_71_pred_1 = _3189;
                    frontier_phi_71_pred_2 = _3188;
                    frontier_phi_71_pred_3 = _3187;
                    frontier_phi_71_pred_4 = _3186;
                    frontier_phi_71_pred_5 = _3185;
                }
                _2971 = frontier_phi_71_pred;
                _2969 = frontier_phi_71_pred_1;
                _2967 = frontier_phi_71_pred_2;
                _2965 = frontier_phi_71_pred_3;
                _2963 = frontier_phi_71_pred_4;
                _2961 = frontier_phi_71_pred_5;
                uint _3120 = _3119 + 1u;
                if (_3120 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3113 = _2961;
                    _3114 = _2963;
                    _3115 = _2965;
                    _3116 = _2967;
                    _3117 = _2969;
                    _3118 = _2971;
                    _3119 = _3120;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2960 = _2961;
            _2962 = _2963;
            _2964 = _2965;
            _2966 = _2967;
            _2968 = _2969;
            _2970 = _2971;
        }
        uvec4 _2974 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2975 = _2974.z;
        uint _2977 = (_2975 >> 8u) & 15u;
        float _3081;
        float _3083;
        float _3085;
        float _3087;
        float _3089;
        float _3091;
        if (((4294967295u << _2977) & _2880) == 0u)
        {
            _3081 = _2960;
            _3083 = _2962;
            _3085 = _2964;
            _3087 = _2966;
            _3089 = _2968;
            _3091 = _2970;
        }
        else
        {
            float _3106 = inversesqrt(dot(vec3(_1958, _1959, _1960), vec3(_1958, _1959, _1960)));
            float _3107 = _3106 * _1958;
            float _3108 = _3106 * _1959;
            float _3109 = _3106 * _1960;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_2977 < ((_2975 >> 12u) & 15u))
            {
                float _3082;
                float _3084;
                float _3086;
                float _3088;
                float _3090;
                float _3092;
                float _3241 = _2960;
                float _3242 = _2962;
                float _3243 = _2964;
                float _3244 = _2966;
                float _3245 = _2968;
                float _3246 = _2970;
                uint _3247 = _2977;
                uint _3256;
                bool _3257;
                for (;;)
                {
                    _3256 = texelFetch(g_lightClassification, int((((_2874 << 5u) + (_2860 << 9u)) + (_3247 << 2u)) >> 2u)).x;
                    _3257 = _3256 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3257)
                    {
                        frontier_phi_82_pred = _3246;
                        frontier_phi_82_pred_1 = _3245;
                        frontier_phi_82_pred_2 = _3244;
                        frontier_phi_82_pred_3 = _3243;
                        frontier_phi_82_pred_4 = _3242;
                        frontier_phi_82_pred_5 = _3241;
                    }
                    else
                    {
                        float _3449;
                        float _3450;
                        float _3451;
                        float _3452;
                        float _3453;
                        float _3454;
                        float _3742;
                        float _3743;
                        float _3744;
                        float _3745;
                        float _3746;
                        float _3747;
                        float _3462 = _3241;
                        float _3463 = _3242;
                        float _3464 = _3243;
                        float _3465 = _3244;
                        float _3466 = _3245;
                        float _3467 = _3246;
                        uint _3468 = _3256;
                        uint _3469;
                        vec4 _3494;
                        float _3495;
                        vec4 _3510;
                        vec3 _3522;
                        vec4 _3537;
                        vec4 _3552;
                        float _3598;
                        bool _3599;
                        for (;;)
                        {
                            uint _3479 = ((_3247 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3468));
                            _3469 = (_3468 + 4294967295u) & _3468;
                            uint _3481 = _3479 * 40u;
                            _3494 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3481)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3481 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3481 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3481 + 3u)).x));
                            _3495 = _3494.w;
                            uint _3497 = (_3479 * 40u) + 4u;
                            _3510 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3497)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3497 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3497 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3497 + 3u)).x));
                            uint _3512 = (_3479 * 40u) + 8u;
                            _3522 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3512)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3512 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3512 + 2u)).x));
                            uint _3524 = (_3479 * 40u) + 16u;
                            _3537 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3524)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3524 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3524 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3524 + 3u)).x));
                            uint _3539 = (_3479 * 40u) + 20u;
                            _3552 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3539)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3539 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3539 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3539 + 3u)).x));
                            uint _3554 = (_3479 * 40u) + 24u;
                            vec4 _3567 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3554)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 3u)).x));
                            uint _3573 = (_3479 * 40u) + 28u;
                            vec4 _3586 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3573)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3573 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3573 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3573 + 3u)).x));
                            _3598 = fma(_1960, _3586.z, fma(_1959, _3586.y, _3586.x * _1958)) + _3586.w;
                            _3599 = !((fma(_1960, _3567.z, fma(_1959, _3567.y, _3567.x * _1958)) + _3567.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3599)
                            {
                                float _3626 = _3494.x - _1958;
                                float _3627 = _3494.y - _1959;
                                float _3628 = _3494.z - _1960;
                                float _3629 = dot(vec3(_3626, _3627, _3628), vec3(_3626, _3627, _3628));
                                float _3632 = inversesqrt(_3629);
                                float _3633 = _3632 * _3626;
                                float _3634 = _3632 * _3627;
                                float _3635 = _3632 * _3628;
                                float _3639 = 1.0 - (_3629 / (_3495 * _3495));
                                float _4839 = isnan(0.0) ? _3639 : (isnan(_3639) ? 0.0 : max(_3639, 0.0));
                                float _3640 = isnan(1.0) ? _4839 : (isnan(_4839) ? 1.0 : min(_4839, 1.0));
                                float _3644 = sqrt(_3629) * _3510.w;
                                float _3646 = 1.39999997615814208984375 / (_3644 + 1.39999997615814208984375);
                                float _3647 = _3646 * _3646;
                                float _3650 = ((1.0 - _3647) * dot(vec3(_3633, _3634, _3635), vec3(_812, _815, _818))) + _3647;
                                float _3653 = _3644 * _3644;
                                float _3657 = (fma(_1960, _3537.z, fma(_1959, _3537.y, _3537.x * _1958)) + _3537.w) / _3598;
                                float _3658 = (fma(_1960, _3552.z, fma(_1959, _3552.y, _3552.x * _1958)) + _3552.w) / _3598;
                                float _3662 = 1.0 - dot(vec2(_3657, _3658), vec2(_3657, _3658));
                                float _4855 = isnan(0.0) ? _3662 : (isnan(_3662) ? 0.0 : max(_3662, 0.0));
                                float _3663 = isnan(1.0) ? _4855 : (isnan(_4855) ? 1.0 : min(_4855, 1.0));
                                float _3664 = _3663 * (((isnan(0.0) ? _3650 : (isnan(_3650) ? 0.0 : max(_3650, 0.0))) * _3640) / ((_3653 * 0.699999988079071044921875) + 1.0));
                                float _3676 = exp2(log2(1.0 / ((_3653 * 3.5) + 5.0)) * 0.25);
                                float _3677 = 1.0 - _872;
                                float _3684 = sqrt(1.0 - ((1.0 - (_3677 * _3677)) * (1.0 - (_3676 * _3676))));
                                float _3685 = _3684 * _3684;
                                float _3686 = _3685 * _3685;
                                float _3687 = _3633 - _3107;
                                float _3688 = _3634 - _3108;
                                float _3689 = _3635 - _3109;
                                float _3693 = inversesqrt(dot(vec3(_3687, _3688, _3689), vec3(_3687, _3688, _3689)));
                                float _3697 = dot(vec3(_812, _815, _818), vec3((-0.0) - _3107, (-0.0) - _3108, (-0.0) - _3109));
                                float _4866 = isnan(0.0) ? _3697 : (isnan(_3697) ? 0.0 : max(_3697, 0.0));
                                float _3700 = isnan(1.0) ? _4866 : (isnan(_4866) ? 1.0 : min(_4866, 1.0));
                                float _3701 = dot(vec3(_812, _815, _818), vec3(_3693 * _3687, _3693 * _3688, _3693 * _3689));
                                float _4877 = isnan(0.0) ? _3701 : (isnan(_3701) ? 0.0 : max(_3701, 0.0));
                                float _3704 = isnan(1.0) ? _4877 : (isnan(_4877) ? 1.0 : min(_4877, 1.0));
                                float _3708 = ((_3704 * _3704) * (_3686 + (-1.0))) + 1.0;
                                float _3709 = _3646 * _3685;
                                float _3710 = _3709 * _3709;
                                float _3716 = ((1.0 - _3710) * dot(vec3(_812, _815, _818), vec3(_3633, _3634, _3635))) + _3710;
                                float _4888 = isnan(0.0) ? _3716 : (isnan(_3716) ? 0.0 : max(_3716, 0.0));
                                float _3717 = isnan(1.0) ? _4888 : (isnan(_4888) ? 1.0 : min(_4888, 1.0));
                                float _3718 = 1.0 - _3685;
                                float _3728 = (0.5 / (((_3717 * ((_3700 * _3718) + _3685)) + 9.9999999392252902907785028219223e-09) + (((_3717 * _3718) + _3685) * _3700))) * _3717;
                                float _4899 = isnan(0.0) ? _3728 : (isnan(_3728) ? 0.0 : max(_3728, 0.0));
                                float _3738 = (_3663 * _3640) * (((_3686 * 3.1415927410125732421875) * (isnan(1.0) ? _4899 : (isnan(_4899) ? 1.0 : min(_4899, 1.0)))) / ((_3708 * _3708) * ((_3653 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3664 * _3510.z;
                                frontier_phi_88_pred_1 = _3664 * _3510.y;
                                frontier_phi_88_pred_2 = _3664 * _3510.x;
                                frontier_phi_88_pred_3 = _3738 * _3522.z;
                                frontier_phi_88_pred_4 = _3738 * _3522.y;
                                frontier_phi_88_pred_5 = _3738 * _3522.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3747 = frontier_phi_88_pred;
                            _3746 = frontier_phi_88_pred_1;
                            _3745 = frontier_phi_88_pred_2;
                            _3744 = frontier_phi_88_pred_3;
                            _3743 = frontier_phi_88_pred_4;
                            _3742 = frontier_phi_88_pred_5;
                            _3452 = _3745 + _3465;
                            _3453 = _3746 + _3466;
                            _3454 = _3747 + _3467;
                            _3449 = _3742 + _3462;
                            _3450 = _3743 + _3463;
                            _3451 = _3744 + _3464;
                            if (_3469 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3462 = _3449;
                                _3463 = _3450;
                                _3464 = _3451;
                                _3465 = _3452;
                                _3466 = _3453;
                                _3467 = _3454;
                                _3468 = _3469;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3454;
                        frontier_phi_82_pred_1 = _3453;
                        frontier_phi_82_pred_2 = _3452;
                        frontier_phi_82_pred_3 = _3451;
                        frontier_phi_82_pred_4 = _3450;
                        frontier_phi_82_pred_5 = _3449;
                    }
                    _3092 = frontier_phi_82_pred;
                    _3090 = frontier_phi_82_pred_1;
                    _3088 = frontier_phi_82_pred_2;
                    _3086 = frontier_phi_82_pred_3;
                    _3084 = frontier_phi_82_pred_4;
                    _3082 = frontier_phi_82_pred_5;
                    uint _3248 = _3247 + 1u;
                    if (_3248 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3241 = _3082;
                        _3242 = _3084;
                        _3243 = _3086;
                        _3244 = _3088;
                        _3245 = _3090;
                        _3246 = _3092;
                        _3247 = _3248;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3088;
                frontier_phi_63_64_ladder_1 = _3092;
                frontier_phi_63_64_ladder_2 = _3090;
                frontier_phi_63_64_ladder_3 = _3086;
                frontier_phi_63_64_ladder_4 = _3084;
                frontier_phi_63_64_ladder_5 = _3082;
            }
            else
            {
                frontier_phi_63_64_ladder = _2966;
                frontier_phi_63_64_ladder_1 = _2970;
                frontier_phi_63_64_ladder_2 = _2968;
                frontier_phi_63_64_ladder_3 = _2964;
                frontier_phi_63_64_ladder_4 = _2962;
                frontier_phi_63_64_ladder_5 = _2960;
            }
            _3081 = frontier_phi_63_64_ladder_5;
            _3083 = frontier_phi_63_64_ladder_4;
            _3085 = frontier_phi_63_64_ladder_3;
            _3087 = frontier_phi_63_64_ladder;
            _3089 = frontier_phi_63_64_ladder_2;
            _3091 = frontier_phi_63_64_ladder_1;
        }
        float _3096 = isnan(1.0) ? _856 : (isnan(_856) ? 1.0 : min(_856, 1.0));
        _2893 = (_3096 * _3087) + _2424;
        _2895 = (_3096 * _3089) + _2426;
        _2897 = (_3096 * _3091) + _2428;
        _2899 = ((_3081 * 0.039999999105930328369140625) * _3096) + _2747;
        _2901 = ((_3083 * 0.039999999105930328369140625) * _3096) + _2749;
        _2903 = ((_3085 * 0.039999999105930328369140625) * _3096) + _2751;
    }
    else
    {
        _2893 = _2424;
        _2895 = _2426;
        _2897 = _2428;
        _2899 = _2747;
        _2901 = _2749;
        _2903 = _2751;
    }
    float _4915 = isnan(0.0) ? _841 : (isnan(_841) ? 0.0 : max(_841, 0.0));
    float _4926 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
    float _4937 = isnan(0.0) ? _843 : (isnan(_843) ? 0.0 : max(_843, 0.0));
    float _2920 = ((isnan(1.0) ? _4915 : (isnan(_4915) ? 1.0 : min(_4915, 1.0))) * (_2893 + ((isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0))) * _856))) + ((_2899 + ((isnan(0.0) ? _1905 : (isnan(_1905) ? 0.0 : max(_1905, 0.0))) * _1692)) * cbPerFrame._m0[3u].x);
    float _2921 = ((isnan(1.0) ? _4926 : (isnan(_4926) ? 1.0 : min(_4926, 1.0))) * (_2895 + ((isnan(0.0) ? _1616 : (isnan(_1616) ? 0.0 : max(_1616, 0.0))) * _856))) + ((_2901 + ((isnan(0.0) ? _1908 : (isnan(_1908) ? 0.0 : max(_1908, 0.0))) * _1692)) * cbPerFrame._m0[3u].x);
    float _2922 = ((isnan(1.0) ? _4937 : (isnan(_4937) ? 1.0 : min(_4937, 1.0))) * (_2897 + ((isnan(0.0) ? _1619 : (isnan(_1619) ? 0.0 : max(_1619, 0.0))) * _856))) + ((_2903 + ((isnan(0.0) ? _1911 : (isnan(_1911) ? 0.0 : max(_1911, 0.0))) * _1692)) * cbPerFrame._m0[3u].x);
    uint _2923 = _270 + 6u;
    float _2931 = _793 / cbSceneParam._m0[86u].x;
    float _2932 = _794 / cbSceneParam._m0[86u].y;
    vec4 _2946 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2931, _2932, (log2((isnan(cbSceneParam._m0[77u].w) ? _714 : (isnan(_714) ? cbSceneParam._m0[77u].w : min(_714, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2948 = _2946.x;
    float _2949 = _2946.y;
    float _2950 = _2946.z;
    float _2951 = _2946.w;
    float _3023;
    float _3025;
    float _3027;
    float _3029;
    if (_714 > cbSceneParam._m0[78u].w)
    {
        float _2985 = isnan(_714) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _714 : min(cbSceneParam._m0[80u].w, _714));
        float _2986 = _2985 / _714;
        float _2997 = _2986 * _766;
        float _2998 = _767 * _2986;
        float _2999 = (-0.0) - _2998;
        float _3001 = _2986 * _768;
        float _3003 = (cbSceneParam._m0[77u].w * _2999) / _2985;
        float _3004 = _3003 + cbSceneParam._m0[79u].w;
        float _3005 = cbSceneParam._m0[79u].w - _2998;
        float _3011 = sqrt(((_2997 * _2997) + (_2998 * _2998)) + (_3001 * _3001));
        float _3014 = (1.0 - (cbSceneParam._m0[77u].w / _2985)) * _3011;
        float _3019 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3021 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3198;
        if (abs((_2999 - _3003) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3198 = ((((_3004 > 0.0) ? exp2(_3019 * _3004) : (2.0 - exp2(_3021 * _3004))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3014;
        }
        else
        {
            float _3142 = 1.0 / cbSceneParam._m0[80u].x;
            float _3143 = isnan(_3005) ? _3004 : (isnan(_3004) ? _3005 : max(_3004, _3005));
            float _3144 = isnan(_3005) ? _3004 : (isnan(_3004) ? _3005 : min(_3004, _3005));
            float _3153 = isnan(0.0) ? _3143 : (isnan(_3143) ? 0.0 : min(_3143, 0.0));
            float _3154 = isnan(0.0) ? _3144 : (isnan(_3144) ? 0.0 : min(_3144, 0.0));
            _3198 = ((abs(_3011 / _2999) * cbSceneParam._m0[80u].y) * ((((_3153 - _3154) * 2.0) - ((exp2(_3019 * (isnan(0.0) ? _3143 : (isnan(_3143) ? 0.0 : max(_3143, 0.0)))) - exp2(_3019 * (isnan(0.0) ? _3144 : (isnan(_3144) ? 0.0 : max(_3144, 0.0))))) * _3142)) - ((exp2(_3021 * _3153) - exp2(_3021 * _3154)) * _3142))) + (_3014 * cbSceneParam._m0[80u].z);
        }
        vec4 _3200 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2931, _2932, 1.0), 0.0);
        float _3209 = exp2((_3198 * (-1.44269502162933349609375)) * (1.0 - _3200.w));
        float _3210 = log2(_3209);
        float _3226 = log2(_2951);
        _3023 = (exp2(_3226 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3210 * cbSceneParam._m0[78u].x)) * _3200.x) / cbSceneParam._m0[78u].x)) + _2948;
        _3025 = (exp2(_3226 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3210 * cbSceneParam._m0[78u].y)) * _3200.y) / cbSceneParam._m0[78u].y)) + _2949;
        _3027 = (exp2(_3226 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3210 * cbSceneParam._m0[78u].z)) * _3200.z) / cbSceneParam._m0[78u].z)) + _2950;
        _3029 = _3209 * _2951;
    }
    else
    {
        _3023 = _2948;
        _3025 = _2949;
        _3027 = _2950;
        _3029 = _2951;
    }
    bool _3236;
    vec4 _3039;
    vec4 _3061;
    float _3063;
    float _3067;
    float _3068;
    float _3069;
    float _3070;
    bool _3080;
    for (;;)
    {
        _3039 = cbMatDynParam._m0[0u];
        float _3041 = roundEven(_3039.y);
        bool _3042 = _3041 == 3.0;
        float _3043 = log2(_3029);
        float _3050 = exp2(_3043 * cbSceneParam._m0[78u].x) * _2920;
        float _3051 = exp2(_3043 * cbSceneParam._m0[78u].y) * _2921;
        float _3052 = exp2(_3043 * cbSceneParam._m0[78u].z) * _2922;
        float _3059 = _782 + (-0.5);
        _3061 = cbMtdParam._m0[1u];
        _3063 = _3061.y * _3059;
        float _3066 = (_3041 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3067 = _3066 * (_3042 ? _3050 : (_3050 + (cbSceneParam._m0[72u].w * _3023)));
        _3068 = _3066 * (_3042 ? _3051 : (_3051 + (cbSceneParam._m0[72u].w * _3025)));
        _3069 = _3066 * (_3042 ? _3052 : (_3052 + (cbSceneParam._m0[72u].w * _3027)));
        _3070 = _3059 * 0.999000012874603271484375;
        _3080 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3080)
        {
            if ((cbInstanceData._m0[_270 + 7u].x + _3070) < 0.5)
            {
                _3236 = true;
                break;
            }
        }
        uint _3177 = _831 + uint(_3039.w);
        if ((cbInstanceData._m0[_3177].w < 1.0) && ((cbInstanceData._m0[_3177].w + _3070) < 0.5))
        {
            _3236 = true;
            break;
        }
        if ((_3063 + 1.0) < _3061.x)
        {
            _3236 = true;
            break;
        }
        _3236 = false;
        break;
    }
    float _3440;
    if (_3236)
    {
        discard_state = true;
        _3440 = 0.0;
    }
    else
    {
        _3440 = cbInstanceData._m0[_2923].w;
    }
    SV_Target.x = _3067;
    SV_Target.y = _3068;
    SV_Target.z = _3069;
    SV_Target.w = _3440;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2923].w;
    discard_exit();
}


