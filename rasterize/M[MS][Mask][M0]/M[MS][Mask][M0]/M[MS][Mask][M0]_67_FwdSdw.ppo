#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1370;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _229 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _230 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _231 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _237 = inversesqrt(dot(vec3(_229, _230, _231), vec3(_229, _230, _231)));
    float _244 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _251 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _257 = uint(roundEven(NORMAL.w)) * 13u;
    uint _262 = _257 + 1u;
    uint _266 = _257 + 2u;
    float _275 = sqrt(((cbInstanceData._m0[_262].x * cbInstanceData._m0[_262].x) + (cbInstanceData._m0[_257].x * cbInstanceData._m0[_257].x)) + (cbInstanceData._m0[_266].x * cbInstanceData._m0[_266].x));
    float _276 = _275 * TEXCOORD.z;
    float _277 = _275 * TEXCOORD.w;
    vec4 _296 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _320 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _325 = _320.x * cbMtdParam._m0[11u].x;
    float _326 = _320.y * cbMtdParam._m0[11u].y;
    float _327 = _320.z * cbMtdParam._m0[11u].z;
    vec4 _346 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _276) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _277) + cbTextureTilingScale._m0[5u].w));
    vec4 _365 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _402 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _404 = _402.x;
    float _416 = dot(vec4(_404, _402.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _433 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _365.x) * 2.0) - ((((_404 - _416) * cbMtdParam._m0[24u].z) + _416) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3958 = isnan(0.0) ? _433 : (isnan(_433) ? 0.0 : max(_433, 0.0));
    float _434 = isnan(1.0) ? _3958 : (isnan(_3958) ? 1.0 : min(_3958, 1.0));
    float _441 = (_434 * ((_346.x * cbMtdParam._m0[12u].x) - _325)) + _325;
    float _442 = (_434 * ((_346.y * cbMtdParam._m0[12u].y) - _326)) + _326;
    float _443 = (_434 * ((_346.z * cbMtdParam._m0[12u].z) - _327)) + _327;
    vec4 _460 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _276) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _277) + cbTextureTilingScale._m0[3u].w));
    vec4 _480 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _482 = _480.x;
    float _492 = dot(vec4(_482, _480.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _506 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _365.y) * 2.0) - ((((_482 - _492) * cbMtdParam._m0[24u].z) + _492) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3969 = isnan(0.0) ? _506 : (isnan(_506) ? 0.0 : max(_506, 0.0));
    float _507 = isnan(1.0) ? _3969 : (isnan(_3969) ? 1.0 : min(_3969, 1.0));
    float _520 = ((cbMtdParam._m0[9u].x * 4.55000019073486328125) * _296.x) * ((_507 * ((_460.x * cbMtdParam._m0[13u].x) - _441)) + _441);
    float _523 = ((cbMtdParam._m0[9u].y * 4.55000019073486328125) * _296.y) * ((_507 * ((_460.y * cbMtdParam._m0[13u].y) - _442)) + _442);
    float _526 = ((cbMtdParam._m0[9u].z * 4.55000019073486328125) * _296.z) * ((_507 * ((_460.z * cbMtdParam._m0[13u].z) - _443)) + _443);
    vec4 _544 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _276) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _277) + cbTextureTilingScale._m0[4u].w));
    vec4 _561 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _563 = _561.x;
    float _564 = _561.y;
    float _565 = _561.z;
    float _572 = ((_544.x - _563) * _434) + _563;
    float _573 = ((_544.y - _564) * _434) + _564;
    float _574 = ((_544.z - _565) * _434) + _565;
    vec4 _586 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _276) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _277) + cbTextureTilingScale._m0[2u].w));
    float _599 = ((_586.z - _574) * _507) + _574;
    float _602 = ((((_586.x - _572) * _507) + _572) * 2.0) + (-1.0);
    float _604 = ((((_586.y - _573) * _507) + _573) * 2.0) + (-1.0);
    float _605 = dot(vec2(_602, _604), vec2(_602, _604));
    float _3980 = isnan(0.0) ? _605 : (isnan(_605) ? 0.0 : max(_605, 0.0));
    float _610 = sqrt(1.0 - (isnan(1.0) ? _3980 : (isnan(_3980) ? 1.0 : min(_3980, 1.0))));
    vec4 _624 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _649 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _276) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _277) + cbTextureTilingScale._m0[11u].w));
    float _651 = _649.x;
    float _652 = 1.0 - _651;
    float _658 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _661 = ((isnan(0.0) ? _658 : (isnan(_658) ? 0.0 : min(_658, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _670 = (_661 - ((((((_651 - _652) * cbMtdParam._m0[24u].w) + _652) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _661))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4001 = isnan(0.0) ? _670 : (isnan(_670) ? 0.0 : max(_670, 0.0));
    float _671 = isnan(1.0) ? _4001 : (isnan(_4001) ? 1.0 : min(_4001, 1.0));
    float _678 = (_671 * (cbMtdParam._m0[17u].x - _520)) + _520;
    float _679 = (_671 * (cbMtdParam._m0[17u].y - _523)) + _523;
    float _680 = (_671 * (cbMtdParam._m0[17u].z - _526)) + _526;
    vec4 _692 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _276) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _277) + cbTextureTilingScale._m0[19u].w));
    float _694 = _692.x;
    float _695 = 1.0 - _694;
    float _722 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_694 - _695) * cbMtdParam._m0[24u].y) + _695) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4012 = isnan(0.0) ? _722 : (isnan(_722) ? 0.0 : max(_722, 0.0));
    float _723 = isnan(1.0) ? _4012 : (isnan(_4012) ? 1.0 : min(_4012, 1.0));
    float _731 = ((((cbMtdParam._m0[10u].x - _678) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _723) + _678;
    float _732 = ((((cbMtdParam._m0[10u].y - _679) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _723) + _679;
    float _733 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _680)) * _723) + _680;
    float _737 = (cbMtdParam._m0[19u].w * (_624.z - _599)) + _599;
    vec4 _751 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _276) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _277) + cbTextureTilingScale._m0[15u].w));
    float _758 = (_751.x * 2.0) + (-1.0);
    float _759 = (_751.y * 2.0) + (-1.0);
    float _760 = dot(vec2(_758, _759), vec2(_758, _759));
    float _4023 = isnan(0.0) ? _760 : (isnan(_760) ? 0.0 : max(_760, 0.0));
    float _768 = (_671 * (_751.z - _737)) + _737;
    float _771 = ((cbMtdParam._m0[23u].y - _768) * _723) + _768;
    vec4 _790 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _276) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _277) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _796 = (_790.x * 2.0) + (-1.0);
    float _797 = (_790.y * 2.0) + (-1.0);
    float _798 = dot(vec2(_796, _797), vec2(_796, _797));
    float _4034 = isnan(0.0) ? _798 : (isnan(_798) ? 0.0 : max(_798, 0.0));
    float _806 = (((_624.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _602;
    float _807 = (((_624.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _604;
    float _819 = (((_758 - _806) + (cbMtdParam._m0[21u].x * _806)) * _671) + _806;
    float _820 = (((_759 - _807) + (cbMtdParam._m0[21u].x * _807)) * _671) + _807;
    float _821 = (_671 * (sqrt(1.0 - (isnan(1.0) ? _4023 : (isnan(_4023) ? 1.0 : min(_4023, 1.0)))) - _610)) + _610;
    float _832 = (((_796 - _819) + (_819 * cbMtdParam._m0[22u].z)) * _723) + _819;
    float _833 = (((_797 - _820) + (_820 * cbMtdParam._m0[22u].z)) * _723) + _820;
    float _834 = ((sqrt(1.0 - (isnan(1.0) ? _4034 : (isnan(_4034) ? 1.0 : min(_4034, 1.0)))) - _821) * _723) + _821;
    float _836 = cbMtdParam._m0[22u].x + _624.w;
    float _839 = fma(_834, _244 * NORMAL.x, fma(_833, _251 * TANGENT.x, (_237 * _229) * _832));
    float _842 = fma(_834, _244 * NORMAL.y, fma(_833, _251 * TANGENT.y, (_237 * _230) * _832));
    float _845 = fma(_834, _244 * NORMAL.z, fma(_833, _251 * TANGENT.z, (_237 * _231) * _832));
    float _849 = inversesqrt(dot(vec3(_839, _842, _845), vec3(_839, _842, _845)));
    float _850 = _849 * _839;
    float _851 = _849 * _842;
    float _852 = _849 * _845;
    float _4045 = isnan(0.0) ? _771 : (isnan(_771) ? 0.0 : max(_771, 0.0));
    float _853 = isnan(1.0) ? _4045 : (isnan(_4045) ? 1.0 : min(_4045, 1.0));
    float _4056 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
    float _4067 = isnan(0.0) ? _731 : (isnan(_731) ? 0.0 : max(_731, 0.0));
    float _4078 = isnan(0.0) ? _732 : (isnan(_732) ? 0.0 : max(_732, 0.0));
    float _4089 = isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0));
    float _871 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _911 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _921 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _911);
    float _922 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _911);
    float _923 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _911);
    float _927 = inversesqrt(dot(vec3(_921, _922, _923), vec3(_921, _922, _923)));
    float _928 = _921 * _927;
    float _929 = _922 * _927;
    float _930 = _923 * _927;
    float _936 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _937 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _955 = fma(_852, cbSceneParam._m0[5u].z, fma(_851, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _850));
    float _958 = fma(_852, cbSceneParam._m0[6u].z, fma(_851, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _850));
    float _961 = fma(_852, cbSceneParam._m0[7u].z, fma(_851, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _850));
    uint _975 = (_257 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _981 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4067 : (isnan(_4067) ? 1.0 : min(_4067, 1.0)))) * cbInstanceData._m0[_975].x;
    float _982 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4078 : (isnan(_4078) ? 1.0 : min(_4078, 1.0)))) * cbInstanceData._m0[_975].y;
    float _983 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4089 : (isnan(_4089) ? 1.0 : min(_4089, 1.0)))) * cbInstanceData._m0[_975].z;
    float _4100 = isnan(0.0) ? _981 : (isnan(_981) ? 0.0 : max(_981, 0.0));
    float _984 = isnan(1.0) ? _4100 : (isnan(_4100) ? 1.0 : min(_4100, 1.0));
    float _4111 = isnan(0.0) ? _982 : (isnan(_982) ? 0.0 : max(_982, 0.0));
    float _985 = isnan(1.0) ? _4111 : (isnan(_4111) ? 1.0 : min(_4111, 1.0));
    float _4122 = isnan(0.0) ? _983 : (isnan(_983) ? 0.0 : max(_983, 0.0));
    float _986 = isnan(1.0) ? _4122 : (isnan(_4122) ? 1.0 : min(_4122, 1.0));
    vec4 _995 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _936, cbSceneParam._m0[86u].y * _937));
    float _999 = ((isnan(1.0) ? _4056 : (isnan(_4056) ? 1.0 : min(_4056, 1.0))) * TEXCOORD_5.w) * _995.x;
    float _1000 = dot(vec3(_850, _851, _852), vec3(_928, _929, _930));
    float _1003 = _1000 * 2.0;
    float _1007 = (_1003 * _850) - _928;
    float _1008 = (_1003 * _851) - _929;
    float _1009 = (_1003 * _852) - _930;
    float _1013 = abs(dot(vec3(_928, _929, _930), vec3(_850, _851, _852)));
    float _4133 = isnan(0.0) ? _1013 : (isnan(_1013) ? 0.0 : max(_1013, 0.0));
    float _1015 = sqrt(_853);
    float _1028 = exp2((_1015 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4133 : (isnan(_4133) ? 1.0 : min(_4133, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1015 * 3.0));
    float _1060 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1064 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1068 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1369;
    float _1371;
    float _1372;
    float _1373;
    float _1374;
    float _1375;
    float _1376;
    float _1377;
    float _1378;
    float _1379;
    float _1380;
    float _1381;
    float _1382;
    float _1383;
    float _1384;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1094 = fma(_1068, cbModelParam._m0[26u].z, fma(_1064, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1060));
        float _1098 = fma(_1068, cbModelParam._m0[27u].z, fma(_1064, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1060));
        float _1102 = fma(_1068, cbModelParam._m0[28u].z, fma(_1064, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1060));
        float _1127 = _1060 + _850;
        float _1128 = _1064 + _851;
        float _1129 = _1068 + _852;
        float _1139 = fma(_1129, cbModelParam._m0[26u].z, fma(_1128, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1127)) - _1094;
        float _1140 = fma(_1129, cbModelParam._m0[27u].z, fma(_1128, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1127)) - _1098;
        float _1141 = fma(_1129, cbModelParam._m0[28u].z, fma(_1128, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1127)) - _1102;
        float _1145 = inversesqrt(dot(vec3(_1139, _1140, _1141), vec3(_1139, _1140, _1141)));
        float _1158 = ((_1145 * _1139) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1094 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1159 = ((_1145 * _1140) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1098 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1160 = ((_1145 * _1141) / cbModelParam._m0[34u].z) + ((((((_1102 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1163 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1158, _1159, _1160), 0.0);
        vec4 _1170 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1158, _1159, _1160), 0.0);
        vec4 _1177 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1158, _1159, _1160), 0.0);
        vec4 _1184 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1158, _1159, _1160), 0.0);
        float _1197 = exp2((_1163.w + (-0.5)) * 20.0) * 2.0;
        float _1198 = _1197 * (_1163.x + (-0.5));
        float _1199 = _1197 * (_1163.y + (-0.5));
        float _1200 = _1197 * (_1163.z + (-0.5));
        float _1207 = exp2((_1170.w + (-0.5)) * 20.0) * 2.0;
        float _1208 = _1207 * (_1170.x + (-0.5));
        float _1209 = _1207 * (_1170.y + (-0.5));
        float _1210 = _1207 * (_1170.z + (-0.5));
        float _1217 = exp2((_1177.w + (-0.5)) * 20.0) * 2.0;
        float _1218 = _1217 * (_1177.x + (-0.5));
        float _1219 = _1217 * (_1177.y + (-0.5));
        float _1220 = _1217 * (_1177.z + (-0.5));
        float _1227 = exp2((_1184.w + (-0.5)) * 20.0) * 2.0;
        float _1228 = _1227 * (_1184.x + (-0.5));
        float _1229 = _1227 * (_1184.y + (-0.5));
        float _1230 = _1227 * (_1184.z + (-0.5));
        float _1231 = isnan(0.0) ? _1228 : (isnan(_1228) ? 0.0 : max(_1228, 0.0));
        float _1232 = isnan(0.0) ? _1229 : (isnan(_1229) ? 0.0 : max(_1229, 0.0));
        float _1233 = isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0));
        float _1234 = _1198 * 0.5;
        float _1235 = _1208 * 0.5;
        float _1236 = _1218 * 0.5;
        float _1237 = dot(vec3(_1234, _1235, _1236), vec3(_1234, _1235, _1236));
        float _1242 = (_1237 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1237);
        float _1251 = (dot(vec3(_850, _851, _852), vec3(_1242 * _1234, _1242 * _1235, _1242 * _1236)) + 1.0) * 0.5;
        float _4159 = isnan(0.0) ? _1251 : (isnan(_1251) ? 0.0 : max(_1251, 0.0));
        float _1261 = sqrt(((_1235 * _1235) + (_1234 * _1234)) + (_1236 * _1236)) / (_1231 + 9.9999997473787516355514526367188e-06);
        float _4170 = isnan(0.0) ? _1261 : (isnan(_1261) ? 0.0 : max(_1261, 0.0));
        float _1262 = isnan(1.0) ? _4170 : (isnan(_4170) ? 1.0 : min(_4170, 1.0));
        float _1263 = _1262 * 2.0;
        float _1267 = (1.0 - _1262) / (_1262 + 1.0);
        float _4181 = isnan(0.0) ? _1267 : (isnan(_1267) ? 0.0 : max(_1267, 0.0));
        float _1268 = isnan(1.0) ? _4181 : (isnan(_4181) ? 1.0 : min(_4181, 1.0));
        float _1277 = ((((1.0 - _1268) * (_1263 + 2.0)) * exp2(log2(isnan(1.0) ? _4159 : (isnan(_4159) ? 1.0 : min(_4159, 1.0))) * (_1263 + 1.0))) + _1268) * _1231;
        float _1278 = _1199 * 0.5;
        float _1279 = _1209 * 0.5;
        float _1280 = _1219 * 0.5;
        float _1281 = dot(vec3(_1278, _1279, _1280), vec3(_1278, _1279, _1280));
        float _1286 = (_1281 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1281);
        float _1294 = (dot(vec3(_850, _851, _852), vec3(_1286 * _1278, _1286 * _1279, _1286 * _1280)) + 1.0) * 0.5;
        float _4192 = isnan(0.0) ? _1294 : (isnan(_1294) ? 0.0 : max(_1294, 0.0));
        float _1303 = sqrt(((_1279 * _1279) + (_1278 * _1278)) + (_1280 * _1280)) / (_1232 + 9.9999997473787516355514526367188e-06);
        float _4203 = isnan(0.0) ? _1303 : (isnan(_1303) ? 0.0 : max(_1303, 0.0));
        float _1304 = isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0));
        float _1305 = _1304 * 2.0;
        float _1309 = (1.0 - _1304) / (_1304 + 1.0);
        float _4214 = isnan(0.0) ? _1309 : (isnan(_1309) ? 0.0 : max(_1309, 0.0));
        float _1310 = isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0));
        float _1319 = ((((1.0 - _1310) * (_1305 + 2.0)) * exp2(log2(isnan(1.0) ? _4192 : (isnan(_4192) ? 1.0 : min(_4192, 1.0))) * (_1305 + 1.0))) + _1310) * _1232;
        float _1320 = _1200 * 0.5;
        float _1321 = _1210 * 0.5;
        float _1322 = _1220 * 0.5;
        float _1323 = dot(vec3(_1320, _1321, _1322), vec3(_1320, _1321, _1322));
        float _1328 = (_1323 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1323);
        float _1336 = (dot(vec3(_850, _851, _852), vec3(_1328 * _1320, _1328 * _1321, _1328 * _1322)) + 1.0) * 0.5;
        float _4225 = isnan(0.0) ? _1336 : (isnan(_1336) ? 0.0 : max(_1336, 0.0));
        float _1345 = sqrt(((_1321 * _1321) + (_1320 * _1320)) + (_1322 * _1322)) / (_1233 + 9.9999997473787516355514526367188e-06);
        float _4236 = isnan(0.0) ? _1345 : (isnan(_1345) ? 0.0 : max(_1345, 0.0));
        float _1346 = isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0));
        float _1347 = _1346 * 2.0;
        float _1351 = (1.0 - _1346) / (_1346 + 1.0);
        float _4247 = isnan(0.0) ? _1351 : (isnan(_1351) ? 0.0 : max(_1351, 0.0));
        float _1352 = isnan(1.0) ? _4247 : (isnan(_4247) ? 1.0 : min(_4247, 1.0));
        float _1361 = ((((1.0 - _1352) * (_1347 + 2.0)) * exp2(log2(isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0))) * (_1347 + 1.0))) + _1352) * _1233;
        _1369 = _1200;
        _1371 = _1199;
        _1372 = _1198;
        _1373 = _1210;
        _1374 = _1209;
        _1375 = _1208;
        _1376 = _1220;
        _1377 = _1219;
        _1378 = _1218;
        _1379 = _1233;
        _1380 = _1232;
        _1381 = _1231;
        _1382 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1277 : (isnan(_1277) ? 0.0 : max(_1277, 0.0)));
        _1383 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1319 : (isnan(_1319) ? 0.0 : max(_1319, 0.0)));
        _1384 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1361 : (isnan(_1361) ? 0.0 : max(_1361, 0.0)));
    }
    else
    {
        _1369 = _1370;
        _1371 = _1370;
        _1372 = _1370;
        _1373 = _1370;
        _1374 = _1370;
        _1375 = _1370;
        _1376 = _1370;
        _1377 = _1370;
        _1378 = _1370;
        _1379 = _1370;
        _1380 = _1370;
        _1381 = _1370;
        _1382 = 0.0;
        _1383 = 0.0;
        _1384 = 0.0;
    }
    float _1677;
    float _1678;
    float _1679;
    float _1680;
    float _1681;
    float _1682;
    float _1683;
    float _1684;
    float _1685;
    float _1686;
    float _1687;
    float _1688;
    float _1689;
    float _1690;
    float _1691;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1408 = fma(_1068, cbModelParam._m0[30u].z, fma(_1064, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1060));
        float _1412 = fma(_1068, cbModelParam._m0[31u].z, fma(_1064, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1060));
        float _1416 = fma(_1068, cbModelParam._m0[32u].z, fma(_1064, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1060));
        float _1439 = _1060 + _850;
        float _1440 = _1064 + _851;
        float _1441 = _1068 + _852;
        float _1451 = fma(_1441, cbModelParam._m0[30u].z, fma(_1440, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1439)) - _1408;
        float _1452 = fma(_1441, cbModelParam._m0[31u].z, fma(_1440, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1439)) - _1412;
        float _1453 = fma(_1441, cbModelParam._m0[32u].z, fma(_1440, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1439)) - _1416;
        float _1457 = inversesqrt(dot(vec3(_1451, _1452, _1453), vec3(_1451, _1452, _1453)));
        float _1470 = ((_1457 * _1451) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1408 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1471 = ((_1457 * _1452) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1412 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1472 = ((_1457 * _1453) / cbModelParam._m0[35u].z) + ((((((_1416 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1474 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1470, _1471, _1472), 0.0);
        vec4 _1481 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1470, _1471, _1472), 0.0);
        vec4 _1488 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1470, _1471, _1472), 0.0);
        vec4 _1495 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1470, _1471, _1472), 0.0);
        float _1507 = exp2((_1474.w + (-0.5)) * 20.0) * 2.0;
        float _1508 = _1507 * (_1474.x + (-0.5));
        float _1509 = _1507 * (_1474.y + (-0.5));
        float _1510 = _1507 * (_1474.z + (-0.5));
        float _1517 = exp2((_1481.w + (-0.5)) * 20.0) * 2.0;
        float _1518 = _1517 * (_1481.x + (-0.5));
        float _1519 = _1517 * (_1481.y + (-0.5));
        float _1520 = _1517 * (_1481.z + (-0.5));
        float _1527 = exp2((_1488.w + (-0.5)) * 20.0) * 2.0;
        float _1528 = _1527 * (_1488.x + (-0.5));
        float _1529 = _1527 * (_1488.y + (-0.5));
        float _1530 = _1527 * (_1488.z + (-0.5));
        float _1537 = exp2((_1495.w + (-0.5)) * 20.0) * 2.0;
        float _1538 = _1537 * (_1495.x + (-0.5));
        float _1539 = _1537 * (_1495.y + (-0.5));
        float _1540 = _1537 * (_1495.z + (-0.5));
        float _1541 = isnan(0.0) ? _1538 : (isnan(_1538) ? 0.0 : max(_1538, 0.0));
        float _1542 = isnan(0.0) ? _1539 : (isnan(_1539) ? 0.0 : max(_1539, 0.0));
        float _1543 = isnan(0.0) ? _1540 : (isnan(_1540) ? 0.0 : max(_1540, 0.0));
        float _1544 = _1508 * 0.5;
        float _1545 = _1518 * 0.5;
        float _1546 = _1528 * 0.5;
        float _1547 = dot(vec3(_1544, _1545, _1546), vec3(_1544, _1545, _1546));
        float _1552 = (_1547 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1547);
        float _1560 = (dot(vec3(_850, _851, _852), vec3(_1552 * _1544, _1552 * _1545, _1552 * _1546)) + 1.0) * 0.5;
        float _4288 = isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0));
        float _1569 = sqrt(((_1545 * _1545) + (_1544 * _1544)) + (_1546 * _1546)) / (_1541 + 9.9999997473787516355514526367188e-06);
        float _4299 = isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0));
        float _1570 = isnan(1.0) ? _4299 : (isnan(_4299) ? 1.0 : min(_4299, 1.0));
        float _1571 = _1570 * 2.0;
        float _1575 = (1.0 - _1570) / (_1570 + 1.0);
        float _4310 = isnan(0.0) ? _1575 : (isnan(_1575) ? 0.0 : max(_1575, 0.0));
        float _1576 = isnan(1.0) ? _4310 : (isnan(_4310) ? 1.0 : min(_4310, 1.0));
        float _1585 = ((((1.0 - _1576) * (_1571 + 2.0)) * exp2(log2(isnan(1.0) ? _4288 : (isnan(_4288) ? 1.0 : min(_4288, 1.0))) * (_1571 + 1.0))) + _1576) * _1541;
        float _1586 = _1509 * 0.5;
        float _1587 = _1519 * 0.5;
        float _1588 = _1529 * 0.5;
        float _1589 = dot(vec3(_1586, _1587, _1588), vec3(_1586, _1587, _1588));
        float _1594 = (_1589 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1589);
        float _1602 = (dot(vec3(_850, _851, _852), vec3(_1594 * _1586, _1594 * _1587, _1594 * _1588)) + 1.0) * 0.5;
        float _4321 = isnan(0.0) ? _1602 : (isnan(_1602) ? 0.0 : max(_1602, 0.0));
        float _1611 = sqrt(((_1587 * _1587) + (_1586 * _1586)) + (_1588 * _1588)) / (_1542 + 9.9999997473787516355514526367188e-06);
        float _4332 = isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0));
        float _1612 = isnan(1.0) ? _4332 : (isnan(_4332) ? 1.0 : min(_4332, 1.0));
        float _1613 = _1612 * 2.0;
        float _1617 = (1.0 - _1612) / (_1612 + 1.0);
        float _4343 = isnan(0.0) ? _1617 : (isnan(_1617) ? 0.0 : max(_1617, 0.0));
        float _1618 = isnan(1.0) ? _4343 : (isnan(_4343) ? 1.0 : min(_4343, 1.0));
        float _1627 = ((((1.0 - _1618) * (_1613 + 2.0)) * exp2(log2(isnan(1.0) ? _4321 : (isnan(_4321) ? 1.0 : min(_4321, 1.0))) * (_1613 + 1.0))) + _1618) * _1542;
        float _1628 = _1510 * 0.5;
        float _1629 = _1520 * 0.5;
        float _1630 = _1530 * 0.5;
        float _1631 = dot(vec3(_1628, _1629, _1630), vec3(_1628, _1629, _1630));
        float _1636 = (_1631 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1631);
        float _1644 = (dot(vec3(_850, _851, _852), vec3(_1636 * _1628, _1636 * _1629, _1636 * _1630)) + 1.0) * 0.5;
        float _4354 = isnan(0.0) ? _1644 : (isnan(_1644) ? 0.0 : max(_1644, 0.0));
        float _1653 = sqrt(((_1629 * _1629) + (_1628 * _1628)) + (_1630 * _1630)) / (_1543 + 9.9999997473787516355514526367188e-06);
        float _4365 = isnan(0.0) ? _1653 : (isnan(_1653) ? 0.0 : max(_1653, 0.0));
        float _1654 = isnan(1.0) ? _4365 : (isnan(_4365) ? 1.0 : min(_4365, 1.0));
        float _1655 = _1654 * 2.0;
        float _1659 = (1.0 - _1654) / (_1654 + 1.0);
        float _4376 = isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0));
        float _1660 = isnan(1.0) ? _4376 : (isnan(_4376) ? 1.0 : min(_4376, 1.0));
        float _1669 = ((((1.0 - _1660) * (_1655 + 2.0)) * exp2(log2(isnan(1.0) ? _4354 : (isnan(_4354) ? 1.0 : min(_4354, 1.0))) * (_1655 + 1.0))) + _1660) * _1543;
        _1677 = _1510;
        _1678 = _1509;
        _1679 = _1508;
        _1680 = _1520;
        _1681 = _1519;
        _1682 = _1518;
        _1683 = _1530;
        _1684 = _1529;
        _1685 = _1528;
        _1686 = _1543;
        _1687 = _1542;
        _1688 = _1541;
        _1689 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1585 : (isnan(_1585) ? 0.0 : max(_1585, 0.0)));
        _1690 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1627 : (isnan(_1627) ? 0.0 : max(_1627, 0.0)));
        _1691 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1669 : (isnan(_1669) ? 0.0 : max(_1669, 0.0)));
    }
    else
    {
        _1677 = _1370;
        _1678 = _1370;
        _1679 = _1370;
        _1680 = _1370;
        _1681 = _1370;
        _1682 = _1370;
        _1683 = _1370;
        _1684 = _1370;
        _1685 = _1370;
        _1686 = _1370;
        _1687 = _1370;
        _1688 = _1370;
        _1689 = 0.0;
        _1690 = 0.0;
        _1691 = 0.0;
    }
    float _1701 = (cbModelParam._m0[1u].x * (_1689 - _1382)) + _1382;
    float _1702 = (cbModelParam._m0[1u].x * (_1690 - _1383)) + _1383;
    float _1703 = (cbModelParam._m0[1u].x * (_1691 - _1384)) + _1384;
    float _1724 = fma(_1703, cbSceneParam._m0[89u].z, fma(_1702, cbSceneParam._m0[89u].y, _1701 * cbSceneParam._m0[89u].x));
    float _1727 = fma(_1703, cbSceneParam._m0[90u].z, fma(_1702, cbSceneParam._m0[90u].y, _1701 * cbSceneParam._m0[90u].x));
    float _1730 = fma(_1703, cbSceneParam._m0[91u].z, fma(_1702, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1701));
    float _1745 = _1007 * 0.5;
    float _1746 = _1008 * 0.5;
    float _1747 = _1009 * 0.5;
    float _1748 = dot(vec4(_1745, _1746, _1747, 1.0), vec4(_1679, _1682, _1685, _1688));
    float _1751 = dot(vec4(_1745, _1746, _1747, 1.0), vec4(_1678, _1681, _1684, _1687));
    float _1754 = dot(vec4(_1745, _1746, _1747, 1.0), vec4(_1677, _1680, _1683, _1686));
    float _1788;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1761 = dot(vec4(_1745, _1746, _1747, 1.0), vec4(_1369, _1373, _1376, _1379));
        float _1765 = dot(vec4(_1745, _1746, _1747, 1.0), vec4(_1371, _1374, _1377, _1380));
        float _1769 = dot(vec4(_1745, _1746, _1747, 1.0), vec4(_1372, _1375, _1378, _1381));
        float _1776 = dot(vec4(cbModelParam._m0[39u]), vec4(_1745, _1746, _1747, 1.0));
        _1788 = dot(vec3(isnan(0.0) ? _1769 : (isnan(_1769) ? 0.0 : max(_1769, 0.0)), isnan(0.0) ? _1765 : (isnan(_1765) ? 0.0 : max(_1765, 0.0)), isnan(0.0) ? _1761 : (isnan(_1761) ? 0.0 : max(_1761, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1776) ? 0.0 : (isnan(0.0) ? _1776 : max(0.0, _1776))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1788 = 1.0;
    }
    float _1799;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1790 = dot(vec4(cbModelParam._m0[40u]), vec4(_1745, _1746, _1747, 1.0));
        _1799 = dot(vec3(isnan(0.0) ? _1748 : (isnan(_1748) ? 0.0 : max(_1748, 0.0)), isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0)), isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1790) ? 0.0 : (isnan(0.0) ? _1790 : max(0.0, _1790))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1799 = 1.0;
    }
    float _1803 = (_1799 * cbModelParam._m0[1u].x) + (_1788 * (1.0 - cbModelParam._m0[1u].x));
    float _1813 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _853);
    float _1814 = isnan(_1813) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1813 : min(cbModelParam._m0[25u].z, _1813));
    float _1895;
    float _1897;
    float _1899;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1862 = fma(_1068, cbModelParam._m0[13u].z, fma(_1064, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1060)) + cbModelParam._m0[13u].w;
        float _1866 = fma(_1068, cbModelParam._m0[14u].z, fma(_1064, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1060)) + cbModelParam._m0[14u].w;
        float _1870 = fma(_1068, cbModelParam._m0[15u].z, fma(_1064, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1060)) + cbModelParam._m0[15u].w;
        float _1873 = fma(_1009, cbModelParam._m0[13u].z, fma(_1008, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1007));
        float _1876 = fma(_1009, cbModelParam._m0[14u].z, fma(_1008, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1007));
        float _1879 = fma(_1009, cbModelParam._m0[15u].z, fma(_1008, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1007));
        float _1907;
        if (_1873 > 0.0)
        {
            _1907 = abs((1.0 - _1862) / _1873);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1873 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1862 + 1.0) / _1873);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1907 = frontier_phi_14_12_ladder;
        }
        float _2077;
        if (_1876 > 0.0)
        {
            _2077 = abs((1.0 - _1866) / _1876);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1876 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1866 + 1.0) / _1876);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2077 = frontier_phi_23_19_ladder;
        }
        float _2372;
        if (_1879 > 0.0)
        {
            _2372 = abs((1.0 - _1870) / _1879);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1879 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1870 + 1.0) / _1879);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2372 = frontier_phi_35_30_ladder;
        }
        float _2374 = isnan(_2077) ? _1907 : (isnan(_1907) ? _2077 : min(_1907, _2077));
        float _2375 = isnan(_2372) ? _2374 : (isnan(_2374) ? _2372 : min(_2374, _2372));
        float _2379 = (_2375 * _1873) + _1862;
        float _2380 = (_2375 * _1876) + _1866;
        float _2381 = (_2375 * _1879) + _1870;
        float _2382 = _2375 * 9.9999997473787516355514526367188e-05;
        float _2384 = (-1.0) - _2382;
        float _2386 = _2382 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2381 > _2386) || ((_2381 < _2384) || ((_2380 > _2386) || ((_2380 < _2384) || ((_2379 < _2384) || (_2379 > _2386))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2526 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2381, cbModelParam._m0[9u].z, fma(_2380, cbModelParam._m0[9u].y, _2379 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2381, cbModelParam._m0[10u].z, fma(_2380, cbModelParam._m0[10u].y, _2379 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2381, cbModelParam._m0[11u].z, fma(_2380, cbModelParam._m0[11u].y, _2379 * cbModelParam._m0[11u].x))), _1814);
            frontier_phi_13_35_ladder = _2526.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2526.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2526.x * cbModelParam._m0[1u].y;
        }
        _1895 = frontier_phi_13_35_ladder_2;
        _1897 = frontier_phi_13_35_ladder_1;
        _1899 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1883 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1007, _1008, _1009), _1814);
        _1895 = _1883.x * cbModelParam._m0[1u].y;
        _1897 = _1883.y * cbModelParam._m0[1u].y;
        _1899 = _1883.z * cbModelParam._m0[1u].y;
    }
    float _1903 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _853);
    float _1904 = isnan(_1903) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1903 : min(cbModelParam._m0[25u].w, _1903));
    float _1994;
    float _1996;
    float _1998;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1958 = fma(_1068, cbModelParam._m0[21u].z, fma(_1064, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1060)) + cbModelParam._m0[21u].w;
        float _1962 = fma(_1068, cbModelParam._m0[22u].z, fma(_1064, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1060)) + cbModelParam._m0[22u].w;
        float _1966 = fma(_1068, cbModelParam._m0[23u].z, fma(_1064, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1060)) + cbModelParam._m0[23u].w;
        float _1969 = fma(_1009, cbModelParam._m0[21u].z, fma(_1008, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1007));
        float _1972 = fma(_1009, cbModelParam._m0[22u].z, fma(_1008, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1007));
        float _1975 = fma(_1009, cbModelParam._m0[23u].z, fma(_1008, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1007));
        float _2082;
        if (_1969 > 0.0)
        {
            _2082 = abs((1.0 - _1958) / _1969);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1969 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1958 + 1.0) / _1969);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2082 = frontier_phi_25_21_ladder;
        }
        float _2399;
        if (_1972 > 0.0)
        {
            _2399 = abs((1.0 - _1962) / _1972);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1972 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1962 + 1.0) / _1972);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2399 = frontier_phi_37_32_ladder;
        }
        float _2726;
        if (_1975 > 0.0)
        {
            _2726 = abs((1.0 - _1966) / _1975);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1975 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1966 + 1.0) / _1975);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2726 = frontier_phi_47_44_ladder;
        }
        float _2728 = isnan(_2399) ? _2082 : (isnan(_2082) ? _2399 : min(_2082, _2399));
        float _2729 = isnan(_2726) ? _2728 : (isnan(_2728) ? _2726 : min(_2728, _2726));
        float _2733 = (_2729 * _1969) + _1958;
        float _2734 = (_2729 * _1972) + _1962;
        float _2735 = (_2729 * _1975) + _1966;
        float _2736 = _2729 * 9.9999997473787516355514526367188e-05;
        float _2737 = (-1.0) - _2736;
        float _2739 = _2736 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2735 > _2739) || ((_2735 < _2737) || ((_2734 > _2739) || ((_2734 < _2737) || ((_2733 < _2737) || (_2733 > _2739))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2853 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2735, cbModelParam._m0[17u].z, fma(_2734, cbModelParam._m0[17u].y, _2733 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2735, cbModelParam._m0[18u].z, fma(_2734, cbModelParam._m0[18u].y, _2733 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2735, cbModelParam._m0[19u].z, fma(_2734, cbModelParam._m0[19u].y, _2733 * cbModelParam._m0[19u].x))), _1904);
            frontier_phi_22_47_ladder = _2853.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2853.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2853.x * cbModelParam._m0[1u].z;
        }
        _1994 = frontier_phi_22_47_ladder_2;
        _1996 = frontier_phi_22_47_ladder_1;
        _1998 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1978 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1007, _1008, _1009), _1904);
        _1994 = _1978.x * cbModelParam._m0[1u].z;
        _1996 = _1978.y * cbModelParam._m0[1u].z;
        _1998 = _1978.z * cbModelParam._m0[1u].z;
    }
    float _2010 = ((((1.0 - _1028) * ((_1015 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1028 * _1015)) * _999;
    float _2011 = _2010 * ((cbModelParam._m0[1u].w * (_1994 - _1895)) + _1895);
    float _2012 = _2010 * ((cbModelParam._m0[1u].w * (_1996 - _1897)) + _1897);
    float _2013 = _2010 * ((cbModelParam._m0[1u].w * (_1998 - _1899)) + _1899);
    float _2016 = fma(_2013, cbSceneParam._m0[89u].z, fma(_2012, cbSceneParam._m0[89u].y, _2011 * cbSceneParam._m0[89u].x));
    float _2019 = fma(_2013, cbSceneParam._m0[90u].z, fma(_2012, cbSceneParam._m0[90u].y, _2011 * cbSceneParam._m0[90u].x));
    float _2022 = fma(_2013, cbSceneParam._m0[91u].z, fma(_2012, cbSceneParam._m0[91u].y, _2011 * cbSceneParam._m0[91u].x));
    float _2056 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2060 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2064 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2068 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2069 = _2056 / _2068;
    float _2070 = _2060 / _2068;
    float _2071 = _2064 / _2068;
    float _2218;
    float _2219;
    float _2220;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2098 = ((uint(_2071 > cbSceneParam._m0[59u].y) + uint(_2071 > cbSceneParam._m0[59u].x)) + uint(_2071 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2099 = _2098 + 43u;
        uint _2107 = _2098 + 44u;
        uint _2115 = _2098 + 45u;
        uint _2123 = _2098 + 46u;
        float _2134 = fma(_2068, cbSceneParam._m0[_2099].w, fma(_2064, cbSceneParam._m0[_2099].z, fma(_2060, cbSceneParam._m0[_2099].y, _2056 * cbSceneParam._m0[_2099].x)));
        float _2138 = fma(_2068, cbSceneParam._m0[_2107].w, fma(_2064, cbSceneParam._m0[_2107].z, fma(_2060, cbSceneParam._m0[_2107].y, _2056 * cbSceneParam._m0[_2107].x)));
        float _2146 = fma(_2068, cbSceneParam._m0[_2123].w, fma(_2064, cbSceneParam._m0[_2123].z, fma(_2060, cbSceneParam._m0[_2123].y, _2056 * cbSceneParam._m0[_2123].x)));
        float _2151 = cbSceneParam._m0[33u].z * _2146;
        float _2153 = cbSceneParam._m0[33u].w * _2146;
        float _2156 = fma(_2068, cbSceneParam._m0[_2115].w, fma(_2064, cbSceneParam._m0[_2115].z, fma(_2060, cbSceneParam._m0[_2115].y, _2056 * cbSceneParam._m0[_2115].x))) / _2146;
        float _2204 = (cbSceneParam._m0[33u].x - sqrt(((_2070 * _2070) + (_2069 * _2069)) + (_2071 * _2071))) * cbSceneParam._m0[33u].y;
        float _4502 = isnan(0.0) ? _2204 : (isnan(_2204) ? 0.0 : max(_2204, 0.0));
        float _2211 = (isnan(1.0) ? _4502 : (isnan(_4502) ? 1.0 : min(_4502, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2151 + _2134) / _2146, (_2153 + _2138) / _2146), _2156), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2153 + _2134) / _2146, (_2138 - _2151) / _2146), _2156), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2134 - _2151) / _2146, (_2138 - _2153) / _2146), _2156), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2134 - _2153) / _2146, (_2151 + _2138) / _2146), _2156), 0.0)).x), vec4(0.25)));
        _2218 = 1.0 - (_2211 * cbSceneParam._m0[34u].x);
        _2219 = 1.0 - (_2211 * cbSceneParam._m0[34u].y);
        _2220 = 1.0 - (_2211 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2218 = 1.0;
        _2219 = 1.0;
        _2220 = 1.0;
    }
    float _2284;
    float _2286;
    float _2288;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2272 = fma(_2068, cbSceneParam._m0[63u].w, fma(_2064, cbSceneParam._m0[63u].z, fma(_2060, cbSceneParam._m0[63u].y, _2056 * cbSceneParam._m0[63u].x)));
        float _2273 = fma(_2068, cbSceneParam._m0[60u].w, fma(_2064, cbSceneParam._m0[60u].z, fma(_2060, cbSceneParam._m0[60u].y, _2056 * cbSceneParam._m0[60u].x))) / _2272;
        float _2274 = fma(_2068, cbSceneParam._m0[61u].w, fma(_2064, cbSceneParam._m0[61u].z, fma(_2060, cbSceneParam._m0[61u].y, _2056 * cbSceneParam._m0[61u].x))) / _2272;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2273 >= cbSceneParam._m0[64u].x) && (_2274 >= cbSceneParam._m0[64u].y)) && (_2273 <= cbSceneParam._m0[64u].z)) && (_2274 <= cbSceneParam._m0[64u].w))
        {
            float _2412 = fma(_2068, cbSceneParam._m0[62u].w, fma(_2064, cbSceneParam._m0[62u].z, fma(_2060, cbSceneParam._m0[62u].y, _2056 * cbSceneParam._m0[62u].x))) / _2272;
            float _2416 = isnan(cbSceneParam._m0[41u].w) ? _2412 : (isnan(_2412) ? cbSceneParam._m0[41u].w : max(_2412, cbSceneParam._m0[41u].w));
            float _2459 = (cbSceneParam._m0[33u].x - sqrt(((_2070 * _2070) + (_2069 * _2069)) + (_2071 * _2071))) * cbSceneParam._m0[33u].y;
            float _4518 = isnan(0.0) ? _2459 : (isnan(_2459) ? 0.0 : max(_2459, 0.0));
            float _2466 = (isnan(1.0) ? _4518 : (isnan(_4518) ? 1.0 : min(_4518, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2273, cbSceneParam._m0[33u].w + _2274), _2416), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2273, _2274 - cbSceneParam._m0[33u].z), _2416), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2273 - cbSceneParam._m0[33u].z, _2274 - cbSceneParam._m0[33u].w), _2416), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2273 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2274), _2416), 0.0)).x), vec4(0.25)));
            float _2470 = 1.0 - (_2466 * cbSceneParam._m0[34u].x);
            float _2471 = 1.0 - (_2466 * cbSceneParam._m0[34u].y);
            float _2472 = 1.0 - (_2466 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2472) ? _2220 : (isnan(_2220) ? _2472 : min(_2220, _2472));
            frontier_phi_34_33_ladder_1 = isnan(_2471) ? _2219 : (isnan(_2219) ? _2471 : min(_2219, _2471));
            frontier_phi_34_33_ladder_2 = isnan(_2470) ? _2218 : (isnan(_2218) ? _2470 : min(_2218, _2470));
        }
        else
        {
            frontier_phi_34_33_ladder = _2220;
            frontier_phi_34_33_ladder_1 = _2219;
            frontier_phi_34_33_ladder_2 = _2218;
        }
        _2284 = frontier_phi_34_33_ladder_2;
        _2286 = frontier_phi_34_33_ladder_1;
        _2288 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2284 = _2218;
        _2286 = _2219;
        _2288 = _2220;
    }
    uvec4 _2293 = floatBitsToUint(cbInstanceData._m0[_257 + 5u]);
    uint _2295 = _2293.x * 14u;
    uint _2296 = _2295 + 13u;
    float _2303 = _999 + (-1.0);
    float _2308 = (cbLight._m0[_2296].x * _2303) + 1.0;
    float _2309 = (cbLight._m0[_2296].y * _2303) + 1.0;
    float _2310 = (cbLight._m0[_2296].z * _2303) + 1.0;
    float _2311 = (cbLight._m0[_2296].w * _2303) + 1.0;
    uint _2312 = _2295 + 5u;
    float _2318 = isnan(1.0) ? _2309 : (isnan(_2309) ? 1.0 : min(_2309, 1.0));
    uint _2322 = _2295 + 4u;
    float _2331 = isnan(1.0) ? _2308 : (isnan(_2308) ? 1.0 : min(_2308, 1.0));
    uint _2335 = _2295 | 1u;
    float _2346 = dot(vec3(cbLight._m0[_2295].xyz), vec3(_850, _851, _852));
    float _2349 = dot(vec3(cbLight._m0[_2335].xyz), vec3(_850, _851, _852));
    float _4554 = isnan(0.0) ? _2346 : (isnan(_2346) ? 0.0 : max(_2346, 0.0));
    float _4565 = isnan(0.0) ? _2349 : (isnan(_2349) ? 0.0 : max(_2349, 0.0));
    float _2354 = (isnan(1.0) ? _4554 : (isnan(_4554) ? 1.0 : min(_4554, 1.0))) * 0.3183098733425140380859375;
    float _2356 = (isnan(1.0) ? _4565 : (isnan(_4565) ? 1.0 : min(_4565, 1.0))) * 0.3183098733425140380859375;
    float _2363 = ((cbLight._m0[_2312].x * _2318) * _2356) + (((cbLight._m0[_2322].x * _2284) * _2331) * _2354);
    float _2364 = ((_2318 * cbLight._m0[_2312].y) * _2356) + (((cbLight._m0[_2322].y * _2286) * _2331) * _2354);
    float _2365 = ((_2318 * cbLight._m0[_2312].z) * _2356) + (((cbLight._m0[_2322].z * _2288) * _2331) * _2354);
    uvec4 _2369 = floatBitsToUint(cbLight._m0[_2295 + 12u]);
    bool _2371 = _2369.x == 0u;
    float _2473;
    float _2475;
    float _2477;
    if (_2371)
    {
        _2473 = _2363;
        _2475 = _2364;
        _2477 = _2365;
    }
    else
    {
        uint _2481 = _2295 + 6u;
        float _2497 = (dot(vec3(cbLight._m0[_2295 + 2u].xyz), vec3(_850, _851, _852)) * 0.5) + 0.5;
        float _2498 = _2497 * _2497;
        float _4576 = isnan(0.0) ? _2498 : (isnan(_2498) ? 0.0 : max(_2498, 0.0));
        float _2499 = isnan(1.0) ? _4576 : (isnan(_4576) ? 1.0 : min(_4576, 1.0));
        float _2500 = isnan(1.0) ? _2310 : (isnan(_2310) ? 1.0 : min(_2310, 1.0));
        _2473 = (((cbLight._m0[_2481].x * 0.3183098733425140380859375) * _2499) * _2500) + _2363;
        _2475 = (((cbLight._m0[_2481].y * 0.3183098733425140380859375) * _2499) * _2500) + _2364;
        _2477 = (((cbLight._m0[_2481].z * 0.3183098733425140380859375) * _2499) * _2500) + _2365;
    }
    bool _2480 = _2369.y == 0u;
    float _2535;
    float _2537;
    float _2539;
    if (_2480)
    {
        _2535 = _2473;
        _2537 = _2475;
        _2539 = _2477;
    }
    else
    {
        uint _2697 = _2295 + 7u;
        float _2713 = (dot(vec3(cbLight._m0[_2295 + 3u].xyz), vec3(_850, _851, _852)) * 0.5) + 0.5;
        float _2714 = _2713 * _2713;
        float _4592 = isnan(0.0) ? _2714 : (isnan(_2714) ? 0.0 : max(_2714, 0.0));
        float _2715 = isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0));
        float _2716 = isnan(1.0) ? _2311 : (isnan(_2311) ? 1.0 : min(_2311, 1.0));
        _2535 = (((cbLight._m0[_2697].x * 0.3183098733425140380859375) * _2715) * _2716) + _2473;
        _2537 = (((cbLight._m0[_2697].y * 0.3183098733425140380859375) * _2715) * _2716) + _2475;
        _2539 = (((cbLight._m0[_2697].z * 0.3183098733425140380859375) * _2715) * _2716) + _2477;
    }
    uint _2542 = _2295 + 8u;
    float _2555 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2295].w)) * _853) * 0.949999988079071044921875);
    float _2556 = _2555 * _2555;
    float _2557 = cbLight._m0[_2295].x + _928;
    float _2558 = cbLight._m0[_2295].y + _929;
    float _2559 = cbLight._m0[_2295].z + _930;
    float _2563 = inversesqrt(dot(vec3(_2557, _2558, _2559), vec3(_2557, _2558, _2559)));
    float _2564 = _2563 * _2557;
    float _2565 = _2563 * _2558;
    float _2566 = _2563 * _2559;
    float _2567 = dot(vec3(_850, _851, _852), vec3(cbLight._m0[_2295].xyz));
    float _4608 = isnan(0.0) ? _2567 : (isnan(_2567) ? 0.0 : max(_2567, 0.0));
    float _2570 = isnan(1.0) ? _4608 : (isnan(_4608) ? 1.0 : min(_4608, 1.0));
    float _4619 = isnan(0.0) ? _1000 : (isnan(_1000) ? 0.0 : max(_1000, 0.0));
    float _2571 = isnan(1.0) ? _4619 : (isnan(_4619) ? 1.0 : min(_4619, 1.0));
    float _2572 = dot(vec3(_850, _851, _852), vec3(_2564, _2565, _2566));
    float _4630 = isnan(0.0) ? _2572 : (isnan(_2572) ? 0.0 : max(_2572, 0.0));
    float _2575 = isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0));
    float _2576 = dot(vec3(cbLight._m0[_2295].xyz), vec3(_2564, _2565, _2566));
    float _4641 = isnan(0.0) ? _2576 : (isnan(_2576) ? 0.0 : max(_2576, 0.0));
    float _2580 = _2556 * _2556;
    float _2584 = ((_2575 * _2575) * (_2580 + (-1.0))) + 1.0;
    float _2595 = (exp2(log2(1.0 - (isnan(1.0) ? _4641 : (isnan(_4641) ? 1.0 : min(_4641, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2596 = 1.0 - _2556;
    float _2607 = (0.5 / (((_2571 * ((_2570 * _2596) + _2556)) + 9.9999999392252902907785028219223e-09) + (((_2571 * _2596) + _2556) * _2570))) * _2570;
    float _4652 = isnan(0.0) ? _2607 : (isnan(_2607) ? 0.0 : max(_2607, 0.0));
    float _2609 = (isnan(1.0) ? _4652 : (isnan(_4652) ? 1.0 : min(_4652, 1.0))) * (_2580 / ((_2584 * _2584) * 3.141590118408203125));
    uint _2623 = _2295 + 9u;
    float _2634 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2335].w)) * _853) * 0.949999988079071044921875);
    float _2635 = _2634 * _2634;
    float _2636 = cbLight._m0[_2335].x + _928;
    float _2637 = cbLight._m0[_2335].y + _929;
    float _2638 = cbLight._m0[_2335].z + _930;
    float _2642 = inversesqrt(dot(vec3(_2636, _2637, _2638), vec3(_2636, _2637, _2638)));
    float _2643 = _2642 * _2636;
    float _2644 = _2642 * _2637;
    float _2645 = _2642 * _2638;
    float _2646 = dot(vec3(_850, _851, _852), vec3(cbLight._m0[_2335].xyz));
    float _4663 = isnan(0.0) ? _2646 : (isnan(_2646) ? 0.0 : max(_2646, 0.0));
    float _2649 = isnan(1.0) ? _4663 : (isnan(_4663) ? 1.0 : min(_4663, 1.0));
    float _2650 = dot(vec3(_850, _851, _852), vec3(_2643, _2644, _2645));
    float _4674 = isnan(0.0) ? _2650 : (isnan(_2650) ? 0.0 : max(_2650, 0.0));
    float _2653 = isnan(1.0) ? _4674 : (isnan(_4674) ? 1.0 : min(_4674, 1.0));
    float _2654 = dot(vec3(cbLight._m0[_2335].xyz), vec3(_2643, _2644, _2645));
    float _4685 = isnan(0.0) ? _2654 : (isnan(_2654) ? 0.0 : max(_2654, 0.0));
    float _2658 = _2635 * _2635;
    float _2662 = ((_2653 * _2653) * (_2658 + (-1.0))) + 1.0;
    float _2671 = (exp2(log2(1.0 - (isnan(1.0) ? _4685 : (isnan(_4685) ? 1.0 : min(_4685, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2672 = 1.0 - _2635;
    float _2682 = (0.5 / (((_2571 * ((_2649 * _2672) + _2635)) + 9.9999999392252902907785028219223e-09) + (((_2571 * _2672) + _2635) * _2649))) * _2649;
    float _4696 = isnan(0.0) ? _2682 : (isnan(_2682) ? 0.0 : max(_2682, 0.0));
    float _2684 = (isnan(1.0) ? _4696 : (isnan(_4696) ? 1.0 : min(_4696, 1.0))) * (_2658 / ((_2662 * _2662) * 3.141590118408203125));
    float _2694 = (((_2671 * cbLight._m0[_2623].x) * _2684) * _2318) + ((((cbLight._m0[_2542].x * _2284) * _2595) * _2609) * _2331);
    float _2695 = (((_2671 * cbLight._m0[_2623].y) * _2684) * _2318) + ((((cbLight._m0[_2542].y * _2286) * _2595) * _2609) * _2331);
    float _2696 = (((_2671 * cbLight._m0[_2623].z) * _2684) * _2318) + ((((cbLight._m0[_2542].z * _2288) * _2595) * _2609) * _2331);
    float _2752;
    float _2754;
    float _2756;
    if (_2371)
    {
        _2752 = _2694;
        _2754 = _2695;
        _2756 = _2696;
    }
    else
    {
        uint _2758 = _2295 + 2u;
        uint _2762 = _2295 + 10u;
        float _2776 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2758].w)) * _853) * 0.949999988079071044921875);
        float _2777 = _2776 * _2776;
        float _2778 = cbLight._m0[_2758].x + _928;
        float _2779 = cbLight._m0[_2758].y + _929;
        float _2780 = cbLight._m0[_2758].z + _930;
        float _2784 = inversesqrt(dot(vec3(_2778, _2779, _2780), vec3(_2778, _2779, _2780)));
        float _2785 = _2784 * _2778;
        float _2786 = _2784 * _2779;
        float _2787 = _2784 * _2780;
        float _2788 = dot(vec3(_850, _851, _852), vec3(cbLight._m0[_2758].xyz));
        float _4707 = isnan(0.0) ? _2788 : (isnan(_2788) ? 0.0 : max(_2788, 0.0));
        float _2791 = isnan(1.0) ? _4707 : (isnan(_4707) ? 1.0 : min(_4707, 1.0));
        float _2792 = dot(vec3(_850, _851, _852), vec3(_2785, _2786, _2787));
        float _4718 = isnan(0.0) ? _2792 : (isnan(_2792) ? 0.0 : max(_2792, 0.0));
        float _2795 = isnan(1.0) ? _4718 : (isnan(_4718) ? 1.0 : min(_4718, 1.0));
        float _2796 = dot(vec3(cbLight._m0[_2758].xyz), vec3(_2785, _2786, _2787));
        float _4729 = isnan(0.0) ? _2796 : (isnan(_2796) ? 0.0 : max(_2796, 0.0));
        float _2800 = _2777 * _2777;
        float _2804 = ((_2795 * _2795) * (_2800 + (-1.0))) + 1.0;
        float _2813 = (exp2(log2(1.0 - (isnan(1.0) ? _4729 : (isnan(_4729) ? 1.0 : min(_4729, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2814 = 1.0 - _2777;
        float _2824 = (0.5 / (((_2571 * ((_2791 * _2814) + _2777)) + 9.9999999392252902907785028219223e-09) + (((_2571 * _2814) + _2777) * _2791))) * _2791;
        float _4740 = isnan(0.0) ? _2824 : (isnan(_2824) ? 0.0 : max(_2824, 0.0));
        float _2826 = (isnan(1.0) ? _4740 : (isnan(_4740) ? 1.0 : min(_4740, 1.0))) * (_2800 / ((_2804 * _2804) * 3.141590118408203125));
        float _2827 = isnan(1.0) ? _2310 : (isnan(_2310) ? 1.0 : min(_2310, 1.0));
        _2752 = (((_2813 * cbLight._m0[_2762].x) * _2826) * _2827) + _2694;
        _2754 = (((_2813 * cbLight._m0[_2762].y) * _2826) * _2827) + _2695;
        _2756 = (((_2813 * cbLight._m0[_2762].z) * _2826) * _2827) + _2696;
    }
    float _2858;
    float _2860;
    float _2862;
    if (_2480)
    {
        _2858 = _2752;
        _2860 = _2754;
        _2862 = _2756;
    }
    else
    {
        uint _2869 = _2295 + 3u;
        uint _2873 = _2295 + 11u;
        float _2887 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2869].w)) * _853) * 0.949999988079071044921875);
        float _2888 = _2887 * _2887;
        float _2889 = cbLight._m0[_2869].x + _928;
        float _2890 = cbLight._m0[_2869].y + _929;
        float _2891 = cbLight._m0[_2869].z + _930;
        float _2895 = inversesqrt(dot(vec3(_2889, _2890, _2891), vec3(_2889, _2890, _2891)));
        float _2896 = _2895 * _2889;
        float _2897 = _2895 * _2890;
        float _2898 = _2895 * _2891;
        float _2899 = dot(vec3(_850, _851, _852), vec3(cbLight._m0[_2869].xyz));
        float _4756 = isnan(0.0) ? _2899 : (isnan(_2899) ? 0.0 : max(_2899, 0.0));
        float _2902 = isnan(1.0) ? _4756 : (isnan(_4756) ? 1.0 : min(_4756, 1.0));
        float _2903 = dot(vec3(_850, _851, _852), vec3(_2896, _2897, _2898));
        float _4767 = isnan(0.0) ? _2903 : (isnan(_2903) ? 0.0 : max(_2903, 0.0));
        float _2906 = isnan(1.0) ? _4767 : (isnan(_4767) ? 1.0 : min(_4767, 1.0));
        float _2907 = dot(vec3(cbLight._m0[_2869].xyz), vec3(_2896, _2897, _2898));
        float _4778 = isnan(0.0) ? _2907 : (isnan(_2907) ? 0.0 : max(_2907, 0.0));
        float _2911 = _2888 * _2888;
        float _2915 = ((_2906 * _2906) * (_2911 + (-1.0))) + 1.0;
        float _2924 = (exp2(log2(1.0 - (isnan(1.0) ? _4778 : (isnan(_4778) ? 1.0 : min(_4778, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2925 = 1.0 - _2888;
        float _2935 = (0.5 / (((_2571 * ((_2902 * _2925) + _2888)) + 9.9999999392252902907785028219223e-09) + (((_2571 * _2925) + _2888) * _2902))) * _2902;
        float _4789 = isnan(0.0) ? _2935 : (isnan(_2935) ? 0.0 : max(_2935, 0.0));
        float _2937 = (isnan(1.0) ? _4789 : (isnan(_4789) ? 1.0 : min(_4789, 1.0))) * (_2911 / ((_2915 * _2915) * 3.141590118408203125));
        float _2938 = isnan(1.0) ? _2311 : (isnan(_2311) ? 1.0 : min(_2311, 1.0));
        _2858 = (((_2924 * cbLight._m0[_2873].x) * _2937) * _2938) + _2752;
        _2860 = (((_2924 * cbLight._m0[_2873].y) * _2937) * _2938) + _2754;
        _2862 = (((_2924 * cbLight._m0[_2873].z) * _2937) * _2938) + _2756;
    }
    float _3004;
    float _3006;
    float _3008;
    float _3010;
    float _3012;
    float _3014;
    if (_2293.y == 0u)
    {
        uvec4 _2959 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2960 = _2959.x;
        uint _2971 = uint((float(_2959.y) * floor(float(uint(cbSceneParam._m0[85u].y * _937) / _2960))) + floor(float(uint(cbSceneParam._m0[85u].x * _936) / _2960)));
        float _2981 = (log2(_2071 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2982 = isnan(0.0) ? _2981 : (isnan(_2981) ? 0.0 : max(_2981, 0.0));
        uint _2985 = uint(isnan(14.0) ? _2982 : (isnan(_2982) ? 14.0 : min(_2982, 14.0)));
        uvec4 _2990 = texelFetch(g_lightClusterGridBuffer, int(((_2985 << 2u) + (_2971 << 6u)) >> 2u));
        uint _2991 = _2990.x;
        uint _2992 = _2959.z;
        float _3071;
        float _3073;
        float _3075;
        float _3077;
        float _3079;
        float _3081;
        if (((((1u << ((_2992 >> 4u) & 15u)) + 4294967295u) & _2991) == 0u) || ((_2992 & 240u) == 0u))
        {
            _3071 = 0.0;
            _3073 = 0.0;
            _3075 = 0.0;
            _3077 = 0.0;
            _3079 = 0.0;
            _3081 = 0.0;
        }
        else
        {
            float _3072;
            float _3074;
            float _3076;
            float _3078;
            float _3080;
            float _3082;
            float _3216 = 0.0;
            float _3217 = 0.0;
            float _3218 = 0.0;
            float _3219 = 0.0;
            float _3220 = 0.0;
            float _3221 = 0.0;
            uint _3222 = 0u;
            uint _3231;
            bool _3232;
            for (;;)
            {
                _3231 = texelFetch(g_lightClassification, int((((_2985 << 5u) + (_2971 << 9u)) + (_3222 << 2u)) >> 2u)).x;
                _3232 = _3231 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3232)
                {
                    frontier_phi_66_pred = _3221;
                    frontier_phi_66_pred_1 = _3220;
                    frontier_phi_66_pred_2 = _3219;
                    frontier_phi_66_pred_3 = _3218;
                    frontier_phi_66_pred_4 = _3217;
                    frontier_phi_66_pred_5 = _3216;
                }
                else
                {
                    float _3340;
                    float _3341;
                    float _3342;
                    float _3343;
                    float _3344;
                    float _3345;
                    uint _3346;
                    _3340 = _3216;
                    _3341 = _3217;
                    _3342 = _3218;
                    _3343 = _3219;
                    _3344 = _3220;
                    _3345 = _3221;
                    _3346 = _3231;
                    float _3272;
                    float _3273;
                    float _3274;
                    float _3275;
                    float _3276;
                    float _3277;
                    for (;;)
                    {
                        uint _3350 = uint(findLSB(_3346)) + (_3222 << 5u);
                        uint _3347 = (_3346 + 4294967295u) & _3346;
                        uint _3352 = _3350 * 48u;
                        vec4 _3366 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3352)).x, texelFetch(g_PointLightRenderingBuffer, int(_3352 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3352 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3352 + 3u)).x));
                        uint _3372 = (_3350 * 48u) + 4u;
                        vec4 _3385 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3372)).x, texelFetch(g_PointLightRenderingBuffer, int(_3372 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3372 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3372 + 3u)).x));
                        uint _3391 = (_3350 * 48u) + 8u;
                        vec3 _3402 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3391)).x, texelFetch(g_PointLightRenderingBuffer, int(_3391 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3391 + 2u)).x));
                        float _3406 = _3366.x - _2069;
                        float _3407 = _3366.y - _2070;
                        float _3408 = _3366.z - _2071;
                        float _3409 = dot(vec3(_3406, _3407, _3408), vec3(_3406, _3407, _3408));
                        float _3412 = inversesqrt(_3409);
                        float _3413 = _3412 * _3406;
                        float _3414 = _3412 * _3407;
                        float _3415 = _3412 * _3408;
                        float _3416 = dot(vec3(_955, _958, _961), vec3(_3413, _3414, _3415));
                        float _3421 = 1.0 - (_3409 * _3366.w);
                        float _4815 = isnan(0.0) ? _3421 : (isnan(_3421) ? 0.0 : max(_3421, 0.0));
                        float _3422 = isnan(1.0) ? _4815 : (isnan(_4815) ? 1.0 : min(_4815, 1.0));
                        float _3423 = sqrt(_3409) * _3385.w;
                        float _3426 = 1.39999997615814208984375 / (_3423 + 1.39999997615814208984375);
                        float _3427 = _3426 * _3426;
                        float _3430 = ((1.0 - _3427) * _3416) + _3427;
                        float _3433 = _3423 * _3423;
                        float _3437 = ((isnan(0.0) ? _3430 : (isnan(_3430) ? 0.0 : max(_3430, 0.0))) * _3422) / ((_3433 * 0.699999988079071044921875) + 1.0);
                        float _3441 = (-0.0) - _2069;
                        float _3442 = (-0.0) - _2070;
                        float _3443 = (-0.0) - _2071;
                        float _3447 = inversesqrt(dot(vec3(_3441, _3442, _3443), vec3(_3441, _3442, _3443)));
                        float _3448 = _3447 * _3441;
                        float _3449 = _3447 * _3442;
                        float _3450 = _3447 * _3443;
                        float _3457 = exp2(log2(1.0 / ((_3433 * 3.5) + 5.0)) * 0.25);
                        float _3458 = 1.0 - _1015;
                        float _3465 = sqrt(1.0 - ((1.0 - (_3458 * _3458)) * (1.0 - (_3457 * _3457))));
                        float _3466 = _3465 * _3465;
                        float _3467 = _3466 * _3466;
                        float _3468 = _3448 + _3413;
                        float _3469 = _3449 + _3414;
                        float _3470 = _3450 + _3415;
                        float _3474 = inversesqrt(dot(vec3(_3468, _3469, _3470), vec3(_3468, _3469, _3470)));
                        float _3478 = dot(vec3(_955, _958, _961), vec3(_3448, _3449, _3450));
                        float _4831 = isnan(0.0) ? _3478 : (isnan(_3478) ? 0.0 : max(_3478, 0.0));
                        float _3481 = isnan(1.0) ? _4831 : (isnan(_4831) ? 1.0 : min(_4831, 1.0));
                        float _3482 = dot(vec3(_955, _958, _961), vec3(_3474 * _3468, _3474 * _3469, _3474 * _3470));
                        float _4842 = isnan(0.0) ? _3482 : (isnan(_3482) ? 0.0 : max(_3482, 0.0));
                        float _3485 = isnan(1.0) ? _4842 : (isnan(_4842) ? 1.0 : min(_4842, 1.0));
                        float _3489 = ((_3485 * _3485) * (_3467 + (-1.0))) + 1.0;
                        float _3490 = _3426 * _3466;
                        float _3491 = _3490 * _3490;
                        float _3494 = ((1.0 - _3491) * _3416) + _3491;
                        float _4853 = isnan(0.0) ? _3494 : (isnan(_3494) ? 0.0 : max(_3494, 0.0));
                        float _3495 = isnan(1.0) ? _4853 : (isnan(_4853) ? 1.0 : min(_4853, 1.0));
                        float _3496 = 1.0 - _3466;
                        float _3506 = (0.5 / (((_3495 * ((_3481 * _3496) + _3466)) + 9.9999999392252902907785028219223e-09) + (((_3495 * _3496) + _3466) * _3481))) * _3495;
                        float _4864 = isnan(0.0) ? _3506 : (isnan(_3506) ? 0.0 : max(_3506, 0.0));
                        float _3517 = (((_3467 * 3.1415927410125732421875) * (isnan(1.0) ? _4864 : (isnan(_4864) ? 1.0 : min(_4864, 1.0)))) / ((_3489 * _3489) * ((_3433 * 2.1991131305694580078125) + 3.141590118408203125))) * _3422;
                        _3275 = (_3437 * _3385.x) + _3343;
                        _3276 = (_3437 * _3385.y) + _3344;
                        _3277 = (_3437 * _3385.z) + _3345;
                        _3272 = (_3517 * _3402.x) + _3340;
                        _3273 = (_3517 * _3402.y) + _3341;
                        _3274 = (_3517 * _3402.z) + _3342;
                        if (_3347 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3340 = _3272;
                            _3341 = _3273;
                            _3342 = _3274;
                            _3343 = _3275;
                            _3344 = _3276;
                            _3345 = _3277;
                            _3346 = _3347;
                        }
                    }
                    frontier_phi_66_pred = _3277;
                    frontier_phi_66_pred_1 = _3276;
                    frontier_phi_66_pred_2 = _3275;
                    frontier_phi_66_pred_3 = _3274;
                    frontier_phi_66_pred_4 = _3273;
                    frontier_phi_66_pred_5 = _3272;
                }
                _3082 = frontier_phi_66_pred;
                _3080 = frontier_phi_66_pred_1;
                _3078 = frontier_phi_66_pred_2;
                _3076 = frontier_phi_66_pred_3;
                _3074 = frontier_phi_66_pred_4;
                _3072 = frontier_phi_66_pred_5;
                uint _3223 = _3222 + 1u;
                if (_3223 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3216 = _3072;
                    _3217 = _3074;
                    _3218 = _3076;
                    _3219 = _3078;
                    _3220 = _3080;
                    _3221 = _3082;
                    _3222 = _3223;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3071 = _3072;
            _3073 = _3074;
            _3075 = _3076;
            _3077 = _3078;
            _3079 = _3080;
            _3081 = _3082;
        }
        uvec4 _3085 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3086 = _3085.z;
        uint _3088 = (_3086 >> 8u) & 15u;
        float _3184;
        float _3186;
        float _3188;
        float _3190;
        float _3192;
        float _3194;
        if (((4294967295u << _3088) & _2991) == 0u)
        {
            _3184 = _3071;
            _3186 = _3073;
            _3188 = _3075;
            _3190 = _3077;
            _3192 = _3079;
            _3194 = _3081;
        }
        else
        {
            float _3209 = inversesqrt(dot(vec3(_2069, _2070, _2071), vec3(_2069, _2070, _2071)));
            float _3210 = _3209 * _2069;
            float _3211 = _3209 * _2070;
            float _3212 = _3209 * _2071;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3088 < ((_3086 >> 12u) & 15u))
            {
                float _3185;
                float _3187;
                float _3189;
                float _3191;
                float _3193;
                float _3195;
                float _3323 = _3071;
                float _3324 = _3073;
                float _3325 = _3075;
                float _3326 = _3077;
                float _3327 = _3079;
                float _3328 = _3081;
                uint _3329 = _3088;
                uint _3338;
                bool _3339;
                for (;;)
                {
                    _3338 = texelFetch(g_lightClassification, int((((_2985 << 5u) + (_2971 << 9u)) + (_3329 << 2u)) >> 2u)).x;
                    _3339 = _3338 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3339)
                    {
                        frontier_phi_72_pred = _3328;
                        frontier_phi_72_pred_1 = _3327;
                        frontier_phi_72_pred_2 = _3326;
                        frontier_phi_72_pred_3 = _3325;
                        frontier_phi_72_pred_4 = _3324;
                        frontier_phi_72_pred_5 = _3323;
                    }
                    else
                    {
                        float _3522;
                        float _3523;
                        float _3524;
                        float _3525;
                        float _3526;
                        float _3527;
                        float _3815;
                        float _3816;
                        float _3817;
                        float _3818;
                        float _3819;
                        float _3820;
                        float _3535 = _3323;
                        float _3536 = _3324;
                        float _3537 = _3325;
                        float _3538 = _3326;
                        float _3539 = _3327;
                        float _3540 = _3328;
                        uint _3541 = _3338;
                        uint _3542;
                        vec4 _3567;
                        float _3568;
                        vec4 _3583;
                        vec3 _3595;
                        vec4 _3610;
                        vec4 _3625;
                        float _3671;
                        bool _3672;
                        for (;;)
                        {
                            uint _3552 = ((_3329 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3541));
                            _3542 = (_3541 + 4294967295u) & _3541;
                            uint _3554 = _3552 * 40u;
                            _3567 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3554)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 3u)).x));
                            _3568 = _3567.w;
                            uint _3570 = (_3552 * 40u) + 4u;
                            _3583 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3570)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3570 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3570 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3570 + 3u)).x));
                            uint _3585 = (_3552 * 40u) + 8u;
                            _3595 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3585)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3585 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3585 + 2u)).x));
                            uint _3597 = (_3552 * 40u) + 16u;
                            _3610 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3597)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3597 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3597 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3597 + 3u)).x));
                            uint _3612 = (_3552 * 40u) + 20u;
                            _3625 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3612)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3612 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3612 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3612 + 3u)).x));
                            uint _3627 = (_3552 * 40u) + 24u;
                            vec4 _3640 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3627)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3627 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3627 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3627 + 3u)).x));
                            uint _3646 = (_3552 * 40u) + 28u;
                            vec4 _3659 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3646)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3646 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3646 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3646 + 3u)).x));
                            _3671 = fma(_2071, _3659.z, fma(_2070, _3659.y, _3659.x * _2069)) + _3659.w;
                            _3672 = !((fma(_2071, _3640.z, fma(_2070, _3640.y, _3640.x * _2069)) + _3640.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3672)
                            {
                                float _3699 = _3567.x - _2069;
                                float _3700 = _3567.y - _2070;
                                float _3701 = _3567.z - _2071;
                                float _3702 = dot(vec3(_3699, _3700, _3701), vec3(_3699, _3700, _3701));
                                float _3705 = inversesqrt(_3702);
                                float _3706 = _3705 * _3699;
                                float _3707 = _3705 * _3700;
                                float _3708 = _3705 * _3701;
                                float _3712 = 1.0 - (_3702 / (_3568 * _3568));
                                float _4875 = isnan(0.0) ? _3712 : (isnan(_3712) ? 0.0 : max(_3712, 0.0));
                                float _3713 = isnan(1.0) ? _4875 : (isnan(_4875) ? 1.0 : min(_4875, 1.0));
                                float _3717 = sqrt(_3702) * _3583.w;
                                float _3719 = 1.39999997615814208984375 / (_3717 + 1.39999997615814208984375);
                                float _3720 = _3719 * _3719;
                                float _3723 = ((1.0 - _3720) * dot(vec3(_3706, _3707, _3708), vec3(_955, _958, _961))) + _3720;
                                float _3726 = _3717 * _3717;
                                float _3730 = (fma(_2071, _3610.z, fma(_2070, _3610.y, _3610.x * _2069)) + _3610.w) / _3671;
                                float _3731 = (fma(_2071, _3625.z, fma(_2070, _3625.y, _3625.x * _2069)) + _3625.w) / _3671;
                                float _3735 = 1.0 - dot(vec2(_3730, _3731), vec2(_3730, _3731));
                                float _4891 = isnan(0.0) ? _3735 : (isnan(_3735) ? 0.0 : max(_3735, 0.0));
                                float _3736 = isnan(1.0) ? _4891 : (isnan(_4891) ? 1.0 : min(_4891, 1.0));
                                float _3737 = _3736 * (((isnan(0.0) ? _3723 : (isnan(_3723) ? 0.0 : max(_3723, 0.0))) * _3713) / ((_3726 * 0.699999988079071044921875) + 1.0));
                                float _3749 = exp2(log2(1.0 / ((_3726 * 3.5) + 5.0)) * 0.25);
                                float _3750 = 1.0 - _1015;
                                float _3757 = sqrt(1.0 - ((1.0 - (_3750 * _3750)) * (1.0 - (_3749 * _3749))));
                                float _3758 = _3757 * _3757;
                                float _3759 = _3758 * _3758;
                                float _3760 = _3706 - _3210;
                                float _3761 = _3707 - _3211;
                                float _3762 = _3708 - _3212;
                                float _3766 = inversesqrt(dot(vec3(_3760, _3761, _3762), vec3(_3760, _3761, _3762)));
                                float _3770 = dot(vec3(_955, _958, _961), vec3((-0.0) - _3210, (-0.0) - _3211, (-0.0) - _3212));
                                float _4902 = isnan(0.0) ? _3770 : (isnan(_3770) ? 0.0 : max(_3770, 0.0));
                                float _3773 = isnan(1.0) ? _4902 : (isnan(_4902) ? 1.0 : min(_4902, 1.0));
                                float _3774 = dot(vec3(_955, _958, _961), vec3(_3766 * _3760, _3766 * _3761, _3766 * _3762));
                                float _4913 = isnan(0.0) ? _3774 : (isnan(_3774) ? 0.0 : max(_3774, 0.0));
                                float _3777 = isnan(1.0) ? _4913 : (isnan(_4913) ? 1.0 : min(_4913, 1.0));
                                float _3781 = ((_3777 * _3777) * (_3759 + (-1.0))) + 1.0;
                                float _3782 = _3719 * _3758;
                                float _3783 = _3782 * _3782;
                                float _3789 = ((1.0 - _3783) * dot(vec3(_955, _958, _961), vec3(_3706, _3707, _3708))) + _3783;
                                float _4924 = isnan(0.0) ? _3789 : (isnan(_3789) ? 0.0 : max(_3789, 0.0));
                                float _3790 = isnan(1.0) ? _4924 : (isnan(_4924) ? 1.0 : min(_4924, 1.0));
                                float _3791 = 1.0 - _3758;
                                float _3801 = (0.5 / (((_3790 * ((_3773 * _3791) + _3758)) + 9.9999999392252902907785028219223e-09) + (((_3790 * _3791) + _3758) * _3773))) * _3790;
                                float _4935 = isnan(0.0) ? _3801 : (isnan(_3801) ? 0.0 : max(_3801, 0.0));
                                float _3811 = (_3736 * _3713) * (((_3759 * 3.1415927410125732421875) * (isnan(1.0) ? _4935 : (isnan(_4935) ? 1.0 : min(_4935, 1.0)))) / ((_3781 * _3781) * ((_3726 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3737 * _3583.y;
                                frontier_phi_78_pred_1 = _3737 * _3583.x;
                                frontier_phi_78_pred_2 = _3811 * _3595.z;
                                frontier_phi_78_pred_3 = _3811 * _3595.y;
                                frontier_phi_78_pred_4 = _3811 * _3595.x;
                                frontier_phi_78_pred_5 = _3737 * _3583.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3819 = frontier_phi_78_pred;
                            _3818 = frontier_phi_78_pred_1;
                            _3817 = frontier_phi_78_pred_2;
                            _3816 = frontier_phi_78_pred_3;
                            _3815 = frontier_phi_78_pred_4;
                            _3820 = frontier_phi_78_pred_5;
                            _3525 = _3818 + _3538;
                            _3526 = _3819 + _3539;
                            _3527 = _3820 + _3540;
                            _3522 = _3815 + _3535;
                            _3523 = _3816 + _3536;
                            _3524 = _3817 + _3537;
                            if (_3542 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3535 = _3522;
                                _3536 = _3523;
                                _3537 = _3524;
                                _3538 = _3525;
                                _3539 = _3526;
                                _3540 = _3527;
                                _3541 = _3542;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3527;
                        frontier_phi_72_pred_1 = _3526;
                        frontier_phi_72_pred_2 = _3525;
                        frontier_phi_72_pred_3 = _3524;
                        frontier_phi_72_pred_4 = _3523;
                        frontier_phi_72_pred_5 = _3522;
                    }
                    _3195 = frontier_phi_72_pred;
                    _3193 = frontier_phi_72_pred_1;
                    _3191 = frontier_phi_72_pred_2;
                    _3189 = frontier_phi_72_pred_3;
                    _3187 = frontier_phi_72_pred_4;
                    _3185 = frontier_phi_72_pred_5;
                    uint _3330 = _3329 + 1u;
                    if (_3330 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3323 = _3185;
                        _3324 = _3187;
                        _3325 = _3189;
                        _3326 = _3191;
                        _3327 = _3193;
                        _3328 = _3195;
                        _3329 = _3330;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3195;
                frontier_phi_60_61_ladder_1 = _3193;
                frontier_phi_60_61_ladder_2 = _3189;
                frontier_phi_60_61_ladder_3 = _3187;
                frontier_phi_60_61_ladder_4 = _3185;
                frontier_phi_60_61_ladder_5 = _3191;
            }
            else
            {
                frontier_phi_60_61_ladder = _3081;
                frontier_phi_60_61_ladder_1 = _3079;
                frontier_phi_60_61_ladder_2 = _3075;
                frontier_phi_60_61_ladder_3 = _3073;
                frontier_phi_60_61_ladder_4 = _3071;
                frontier_phi_60_61_ladder_5 = _3077;
            }
            _3184 = frontier_phi_60_61_ladder_4;
            _3186 = frontier_phi_60_61_ladder_3;
            _3188 = frontier_phi_60_61_ladder_2;
            _3190 = frontier_phi_60_61_ladder_5;
            _3192 = frontier_phi_60_61_ladder_1;
            _3194 = frontier_phi_60_61_ladder;
        }
        float _3199 = isnan(1.0) ? _999 : (isnan(_999) ? 1.0 : min(_999, 1.0));
        _3004 = (_3199 * _3190) + _2535;
        _3006 = (_3199 * _3192) + _2537;
        _3008 = (_3199 * _3194) + _2539;
        _3010 = ((_3184 * 0.039999999105930328369140625) * _3199) + _2858;
        _3012 = ((_3186 * 0.039999999105930328369140625) * _3199) + _2860;
        _3014 = ((_3188 * 0.039999999105930328369140625) * _3199) + _2862;
    }
    else
    {
        _3004 = _2535;
        _3006 = _2537;
        _3008 = _2539;
        _3010 = _2858;
        _3012 = _2860;
        _3014 = _2862;
    }
    float _4951 = isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0));
    float _4962 = isnan(0.0) ? _985 : (isnan(_985) ? 0.0 : max(_985, 0.0));
    float _4973 = isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0));
    uint _3034 = _257 + 6u;
    float _3042 = _936 / cbSceneParam._m0[86u].x;
    float _3043 = _937 / cbSceneParam._m0[86u].y;
    vec4 _3057 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3042, _3043, (log2((isnan(cbSceneParam._m0[77u].w) ? _871 : (isnan(_871) ? cbSceneParam._m0[77u].w : min(_871, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3059 = _3057.x;
    float _3060 = _3057.y;
    float _3061 = _3057.z;
    float _3062 = _3057.w;
    float _3134;
    float _3136;
    float _3138;
    float _3140;
    if (_871 > cbSceneParam._m0[78u].w)
    {
        float _3096 = isnan(_871) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _871 : min(cbSceneParam._m0[80u].w, _871));
        float _3097 = _3096 / _871;
        float _3108 = _3097 * _921;
        float _3109 = _922 * _3097;
        float _3110 = (-0.0) - _3109;
        float _3112 = _3097 * _923;
        float _3114 = (cbSceneParam._m0[77u].w * _3110) / _3096;
        float _3115 = _3114 + cbSceneParam._m0[79u].w;
        float _3116 = cbSceneParam._m0[79u].w - _3109;
        float _3122 = sqrt(((_3108 * _3108) + (_3109 * _3109)) + (_3112 * _3112));
        float _3125 = (1.0 - (cbSceneParam._m0[77u].w / _3096)) * _3122;
        float _3130 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3132 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3285;
        if (abs((_3110 - _3114) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3285 = ((((_3115 > 0.0) ? exp2(_3130 * _3115) : (2.0 - exp2(_3132 * _3115))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3125;
        }
        else
        {
            float _3245 = 1.0 / cbSceneParam._m0[80u].x;
            float _3246 = isnan(_3116) ? _3115 : (isnan(_3115) ? _3116 : max(_3115, _3116));
            float _3247 = isnan(_3116) ? _3115 : (isnan(_3115) ? _3116 : min(_3115, _3116));
            float _3256 = isnan(0.0) ? _3246 : (isnan(_3246) ? 0.0 : min(_3246, 0.0));
            float _3257 = isnan(0.0) ? _3247 : (isnan(_3247) ? 0.0 : min(_3247, 0.0));
            _3285 = ((abs(_3122 / _3110) * cbSceneParam._m0[80u].y) * ((((_3256 - _3257) * 2.0) - ((exp2(_3130 * (isnan(0.0) ? _3246 : (isnan(_3246) ? 0.0 : max(_3246, 0.0)))) - exp2(_3130 * (isnan(0.0) ? _3247 : (isnan(_3247) ? 0.0 : max(_3247, 0.0))))) * _3245)) - ((exp2(_3132 * _3256) - exp2(_3132 * _3257)) * _3245))) + (_3125 * cbSceneParam._m0[80u].z);
        }
        vec4 _3287 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3042, _3043, 1.0), 0.0);
        float _3296 = exp2((_3285 * (-1.44269502162933349609375)) * (1.0 - _3287.w));
        float _3297 = log2(_3296);
        float _3313 = log2(_3062);
        _3134 = (exp2(_3313 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3297 * cbSceneParam._m0[78u].x)) * _3287.x) / cbSceneParam._m0[78u].x)) + _3059;
        _3136 = (exp2(_3313 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3297 * cbSceneParam._m0[78u].y)) * _3287.y) / cbSceneParam._m0[78u].y)) + _3060;
        _3138 = (exp2(_3313 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3297 * cbSceneParam._m0[78u].z)) * _3287.z) / cbSceneParam._m0[78u].z)) + _3061;
        _3140 = _3296 * _3062;
    }
    else
    {
        _3134 = _3059;
        _3136 = _3060;
        _3138 = _3061;
        _3140 = _3062;
    }
    float _3152 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3153 = _3152 == 3.0;
    float _3154 = log2(_3140);
    float _3161 = exp2(_3154 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4951 : (isnan(_4951) ? 1.0 : min(_4951, 1.0))) * (_3004 + ((isnan(0.0) ? _1724 : (isnan(_1724) ? 0.0 : max(_1724, 0.0))) * _999))) + ((_3010 + ((isnan(0.0) ? _2016 : (isnan(_2016) ? 0.0 : max(_2016, 0.0))) * _1803)) * cbPerFrame._m0[3u].x));
    float _3162 = exp2(_3154 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4962 : (isnan(_4962) ? 1.0 : min(_4962, 1.0))) * (_3006 + ((isnan(0.0) ? _1727 : (isnan(_1727) ? 0.0 : max(_1727, 0.0))) * _999))) + ((_3012 + ((isnan(0.0) ? _2019 : (isnan(_2019) ? 0.0 : max(_2019, 0.0))) * _1803)) * cbPerFrame._m0[3u].x));
    float _3163 = exp2(_3154 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4973 : (isnan(_4973) ? 1.0 : min(_4973, 1.0))) * (_3008 + ((isnan(0.0) ? _1730 : (isnan(_1730) ? 0.0 : max(_1730, 0.0))) * _999))) + ((_3014 + ((isnan(0.0) ? _2022 : (isnan(_2022) ? 0.0 : max(_2022, 0.0))) * _1803)) * cbPerFrame._m0[3u].x));
    float _3172 = (_3152 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3172 * (_3153 ? _3161 : (_3161 + (cbSceneParam._m0[72u].w * _3134)));
    SV_Target.y = _3172 * (_3153 ? _3162 : (_3162 + (cbSceneParam._m0[72u].w * _3136)));
    SV_Target.z = _3172 * (_3153 ? _3163 : (_3163 + (cbSceneParam._m0[72u].w * _3138)));
    SV_Target.w = cbInstanceData._m0[_3034].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3034].w;
}


