#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _186 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _187 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _188 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _194 = inversesqrt(dot(vec3(_186, _187, _188), vec3(_186, _187, _188)));
    float _195 = _194 * _186;
    float _196 = _194 * _187;
    float _197 = _194 * _188;
    float _201 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _202 = _201 * NORMAL.x;
    float _203 = _201 * NORMAL.y;
    float _204 = _201 * NORMAL.z;
    float _208 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _209 = _208 * TANGENT.x;
    float _210 = _208 * TANGENT.y;
    float _211 = _208 * TANGENT.z;
    float _222 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _224 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _225 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _1010 = isnan(0.0) ? _222 : (isnan(_222) ? 0.0 : max(_222, 0.0));
    float _1021 = isnan(0.0) ? _224 : (isnan(_224) ? 0.0 : max(_224, 0.0));
    float _1032 = isnan(0.0) ? _225 : (isnan(_225) ? 0.0 : max(_225, 0.0));
    uint _235 = uint(roundEven(NORMAL.w)) * 13u;
    uint _240 = _235 + 1u;
    uint _244 = _235 + 2u;
    float _253 = sqrt(((cbInstanceData._m0[_240].x * cbInstanceData._m0[_240].x) + (cbInstanceData._m0[_235].x * cbInstanceData._m0[_235].x)) + (cbInstanceData._m0[_244].x * cbInstanceData._m0[_244].x));
    float _254 = _253 * TEXCOORD.z;
    float _255 = _253 * TEXCOORD.w;
    vec4 _268 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _254) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _255) + cbTextureTilingScale._m0[13u].w));
    vec4 _292 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _297 = _292.x * cbMtdParam._m0[11u].x;
    float _298 = _292.y * cbMtdParam._m0[11u].y;
    float _299 = _292.z * cbMtdParam._m0[11u].z;
    vec4 _318 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _254) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _255) + cbTextureTilingScale._m0[5u].w));
    vec4 _337 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _373 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _375 = _373.x;
    float _388 = dot(vec4(_375, _373.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _405 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _337.x) * 2.0) - ((((_375 - _388) * cbMtdParam._m0[24u].z) + _388) * cbMtdParam._m0[23u].x))) + 1.0;
    float _1043 = isnan(0.0) ? _405 : (isnan(_405) ? 0.0 : max(_405, 0.0));
    float _406 = isnan(1.0) ? _1043 : (isnan(_1043) ? 1.0 : min(_1043, 1.0));
    float _413 = (_406 * ((_318.x * cbMtdParam._m0[12u].x) - _297)) + _297;
    float _414 = (_406 * ((_318.y * cbMtdParam._m0[12u].y) - _298)) + _298;
    float _415 = (_406 * ((_318.z * cbMtdParam._m0[12u].z) - _299)) + _299;
    vec4 _432 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _254) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _255) + cbTextureTilingScale._m0[3u].w));
    vec4 _452 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _454 = _452.x;
    float _464 = dot(vec4(_454, _452.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _478 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _337.y) * 2.0) - ((((_454 - _464) * cbMtdParam._m0[24u].z) + _464) * cbMtdParam._m0[20u].w))) + 1.0;
    float _1054 = isnan(0.0) ? _478 : (isnan(_478) ? 0.0 : max(_478, 0.0));
    float _479 = isnan(1.0) ? _1054 : (isnan(_1054) ? 1.0 : min(_1054, 1.0));
    float _486 = (_479 * ((_432.x * cbMtdParam._m0[13u].x) - _413)) + _413;
    float _487 = (_479 * ((_432.y * cbMtdParam._m0[13u].y) - _414)) + _414;
    float _488 = (_479 * ((_432.z * cbMtdParam._m0[13u].z) - _415)) + _415;
    float _492 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _268.x) * _486;
    float _495 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _268.y) * _487;
    float _498 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _268.z) * _488;
    float _505 = ((_486 - _492) * (isnan(1.0) ? _1010 : (isnan(_1010) ? 1.0 : min(_1010, 1.0)))) + _492;
    float _506 = ((_487 - _495) * (isnan(1.0) ? _1021 : (isnan(_1021) ? 1.0 : min(_1021, 1.0)))) + _495;
    float _507 = ((_488 - _498) * (isnan(1.0) ? _1032 : (isnan(_1032) ? 1.0 : min(_1032, 1.0)))) + _498;
    vec4 _524 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _254) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _255) + cbTextureTilingScale._m0[20u].w));
    vec4 _549 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _254) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _255) + cbTextureTilingScale._m0[4u].w));
    vec4 _566 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _568 = _566.x;
    float _569 = _566.y;
    float _570 = _566.z;
    float _577 = ((_549.x - _568) * _406) + _568;
    float _578 = ((_549.y - _569) * _406) + _569;
    float _579 = ((_549.z - _570) * _406) + _570;
    vec4 _591 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _254) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _255) + cbTextureTilingScale._m0[2u].w));
    float _604 = ((_591.z - _579) * _479) + _579;
    float _607 = ((((_591.x - _577) * _479) + _577) * 2.0) + (-1.0);
    float _608 = ((((_591.y - _578) * _479) + _578) * 2.0) + (-1.0);
    float _609 = dot(vec2(_607, _608), vec2(_607, _608));
    float _1065 = isnan(0.0) ? _609 : (isnan(_609) ? 0.0 : max(_609, 0.0));
    float _614 = sqrt(1.0 - (isnan(1.0) ? _1065 : (isnan(_1065) ? 1.0 : min(_1065, 1.0))));
    vec4 _632 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _644 = (_607 + ((((_524.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x)) + (((_632.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _645 = (_608 + ((((_524.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x)) + (((_632.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _648 = fma(_614, _202, fma(_645, _209, _644 * _195));
    float _651 = fma(_614, _203, fma(_645, _210, _644 * _196));
    float _654 = fma(_614, _204, fma(_645, _211, _644 * _197));
    float _658 = inversesqrt(dot(vec3(_648, _651, _654), vec3(_648, _651, _654)));
    vec4 _685 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _254) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _255) + cbTextureTilingScale._m0[11u].w));
    float _687 = _685.x;
    float _688 = 1.0 - _687;
    float _694 = (cbMtdParam._m0[19u].x + dot(vec4(_658 * _648, _658 * _651, _658 * _654, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_687 - _688) * cbMtdParam._m0[24u].w) + _688) * cbMtdParam._m0[21u].z);
    float _1076 = isnan(0.0) ? _694 : (isnan(_694) ? 0.0 : max(_694, 0.0));
    float _695 = isnan(1.0) ? _1076 : (isnan(_1076) ? 1.0 : min(_1076, 1.0));
    float _702 = (_695 * (cbMtdParam._m0[17u].x - _505)) + _505;
    float _703 = (_695 * (cbMtdParam._m0[17u].y - _506)) + _506;
    float _704 = (_695 * (cbMtdParam._m0[17u].z - _507)) + _507;
    float _709 = (((_524.z - _604) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _604;
    float _713 = ((_632.z - _709) * cbMtdParam._m0[19u].w) + _709;
    vec4 _726 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _254) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _255) + cbTextureTilingScale._m0[15u].w));
    float _733 = (_726.x * 2.0) + (-1.0);
    float _734 = (_726.y * 2.0) + (-1.0);
    float _735 = dot(vec2(_733, _734), vec2(_733, _734));
    float _1087 = isnan(0.0) ? _735 : (isnan(_735) ? 0.0 : max(_735, 0.0));
    float _743 = ((_726.z - _713) * _695) + _713;
    float _753 = ((sqrt(1.0 - (isnan(1.0) ? _1087 : (isnan(_1087) ? 1.0 : min(_1087, 1.0)))) - _614) * _695) + _614;
    float _756 = (((_733 - _644) * _695) + _644) + (cbMtdParam._m0[21u].x * _644);
    float _757 = (((_734 - _645) * _695) + _645) + (cbMtdParam._m0[21u].x * _645);
    float _759 = cbMtdParam._m0[22u].x + _632.w;
    float _762 = fma(_753, _202, fma(_757, _209, _756 * _195));
    float _765 = fma(_753, _203, fma(_757, _210, _756 * _196));
    float _768 = fma(_753, _204, fma(_757, _211, _756 * _197));
    float _772 = inversesqrt(dot(vec3(_762, _765, _768), vec3(_762, _765, _768)));
    float _1098 = isnan(0.0) ? _743 : (isnan(_743) ? 0.0 : max(_743, 0.0));
    float _1109 = isnan(0.0) ? _759 : (isnan(_759) ? 0.0 : max(_759, 0.0));
    float _774 = isnan(1.0) ? _1109 : (isnan(_1109) ? 1.0 : min(_1109, 1.0));
    float _1120 = isnan(0.0) ? _702 : (isnan(_702) ? 0.0 : max(_702, 0.0));
    float _775 = isnan(1.0) ? _1120 : (isnan(_1120) ? 1.0 : min(_1120, 1.0));
    float _1131 = isnan(0.0) ? _703 : (isnan(_703) ? 0.0 : max(_703, 0.0));
    float _776 = isnan(1.0) ? _1131 : (isnan(_1131) ? 1.0 : min(_1131, 1.0));
    float _1142 = isnan(0.0) ? _704 : (isnan(_704) ? 0.0 : max(_704, 0.0));
    float _777 = isnan(1.0) ? _1142 : (isnan(_1142) ? 1.0 : min(_1142, 1.0));
    float _819 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _829 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _819);
    float _830 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _819);
    float _831 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _819);
    vec4 _836 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _838 = _836.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _898 = sqrt(((_829 * _829) + (_830 * _830)) + (_831 * _831));
        float _904 = (cbMatDynParam._m0[5u].x * _898) + cbMatDynParam._m0[5u].y;
        float _1153 = isnan(0.0) ? _904 : (isnan(_904) ? 0.0 : max(_904, 0.0));
        float _905 = isnan(1.0) ? _1153 : (isnan(_1153) ? 1.0 : min(_1153, 1.0));
        float _909 = (cbMatDynParam._m0[5u].z * _898) + cbMatDynParam._m0[5u].w;
        float _1164 = isnan(0.0) ? _909 : (isnan(_909) ? 0.0 : max(_909, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1164 : (isnan(_1164) ? 1.0 : min(_1164, 1.0))) - _905)) + _905) < ((_838 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _937;
    vec4 _860;
    float _867;
    float _868;
    float _869;
    float _870;
    float _874;
    vec4 _878;
    float _880;
    float _881;
    bool _892;
    for (;;)
    {
        _860 = cbInstanceData._m0[(_235 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _864 = (cbMtdParam._m0[0u].x * _775) * _860.x;
        float _865 = (cbMtdParam._m0[0u].y * _776) * _860.y;
        float _866 = (cbMtdParam._m0[0u].z * _777) * _860.z;
        float _1175 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
        _867 = isnan(1.0) ? _1175 : (isnan(_1175) ? 1.0 : min(_1175, 1.0));
        float _1186 = isnan(0.0) ? _865 : (isnan(_865) ? 0.0 : max(_865, 0.0));
        _868 = isnan(1.0) ? _1186 : (isnan(_1186) ? 1.0 : min(_1186, 1.0));
        float _1197 = isnan(0.0) ? _866 : (isnan(_866) ? 0.0 : max(_866, 0.0));
        _869 = isnan(1.0) ? _1197 : (isnan(_1197) ? 1.0 : min(_1197, 1.0));
        _870 = _774 * TEXCOORD_5.w;
        _874 = cbInstanceData._m0[_235 + 6u].w;
        float _875 = _838 + (-0.5);
        _878 = cbMtdParam._m0[1u];
        _880 = _878.y * _875;
        _881 = _875 * 0.999000012874603271484375;
        _892 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_892)
        {
            if ((cbInstanceData._m0[_235 + 7u].x + _881) < 0.5)
            {
                _937 = true;
                break;
            }
        }
        if ((_860.w < 1.0) && ((_860.w + _881) < 0.5))
        {
            _937 = true;
            break;
        }
        if ((_880 + 1.0) < _878.x)
        {
            _937 = true;
            break;
        }
        _937 = false;
        break;
    }
    if (_937)
    {
        discard_state = true;
    }
    bool _963 = cbMtdParam._m0[1u].z != 0.0;
    float _964 = _963 ? _874 : 0.0;
    SV_Target.x = ((_762 * 0.5) * _772) + 0.500488758087158203125;
    SV_Target.y = ((_765 * 0.5) * _772) + 0.500488758087158203125;
    SV_Target.z = ((_768 * 0.5) * _772) + 0.500488758087158203125;
    SV_Target.w = _964;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _1098 : (isnan(_1098) ? 1.0 : min(_1098, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _963 ? _874 : _870;
    SV_Target_2.x = _867;
    SV_Target_2.y = _868;
    SV_Target_2.z = _869;
    SV_Target_2.w = _963 ? _874 : (float(floatBitsToUint(cbInstanceData._m0[_235 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _964;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _964;
    discard_exit();
}


