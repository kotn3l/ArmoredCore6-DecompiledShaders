#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1472;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _233 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _234 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _235 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _241 = inversesqrt(dot(vec3(_233, _234, _235), vec3(_233, _234, _235)));
    float _248 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _255 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _269 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _271 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _272 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4057 = isnan(0.0) ? _269 : (isnan(_269) ? 0.0 : max(_269, 0.0));
    float _4068 = isnan(0.0) ? _271 : (isnan(_271) ? 0.0 : max(_271, 0.0));
    float _4079 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    uint _282 = uint(roundEven(NORMAL.w)) * 13u;
    uint _287 = _282 + 1u;
    uint _291 = _282 + 2u;
    float _300 = sqrt(((cbInstanceData._m0[_287].x * cbInstanceData._m0[_287].x) + (cbInstanceData._m0[_282].x * cbInstanceData._m0[_282].x)) + (cbInstanceData._m0[_291].x * cbInstanceData._m0[_291].x));
    float _301 = _300 * TEXCOORD.z;
    float _302 = _300 * TEXCOORD.w;
    vec4 _315 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _301) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _302) + cbTextureTilingScale._m0[13u].w));
    vec4 _338 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _364 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _369 = _364.x * cbMtdParam._m0[11u].x;
    float _370 = _364.y * cbMtdParam._m0[11u].y;
    float _371 = _364.z * cbMtdParam._m0[11u].z;
    vec4 _390 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _301) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _302) + cbTextureTilingScale._m0[5u].w));
    vec4 _409 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _447 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _449 = _447.x;
    float _461 = dot(vec4(_449, _447.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _478 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _409.x) * 2.0) - ((((_449 - _461) * cbMtdParam._m0[24u].z) + _461) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4090 = isnan(0.0) ? _478 : (isnan(_478) ? 0.0 : max(_478, 0.0));
    float _479 = isnan(1.0) ? _4090 : (isnan(_4090) ? 1.0 : min(_4090, 1.0));
    float _486 = (_479 * ((_390.x * cbMtdParam._m0[12u].x) - _369)) + _369;
    float _487 = (_479 * ((_390.y * cbMtdParam._m0[12u].y) - _370)) + _370;
    float _488 = (_479 * ((_390.z * cbMtdParam._m0[12u].z) - _371)) + _371;
    vec4 _505 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _301) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _302) + cbTextureTilingScale._m0[3u].w));
    vec4 _525 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _527 = _525.x;
    float _537 = dot(vec4(_527, _525.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _551 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _409.y) * 2.0) - ((((_527 - _537) * cbMtdParam._m0[24u].z) + _537) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4101 = isnan(0.0) ? _551 : (isnan(_551) ? 0.0 : max(_551, 0.0));
    float _552 = isnan(1.0) ? _4101 : (isnan(_4101) ? 1.0 : min(_4101, 1.0));
    float _559 = (_552 * ((_505.x * cbMtdParam._m0[13u].x) - _486)) + _486;
    float _560 = (_552 * ((_505.y * cbMtdParam._m0[13u].y) - _487)) + _487;
    float _561 = (_552 * ((_505.z * cbMtdParam._m0[13u].z) - _488)) + _488;
    vec4 _579 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _301) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _302) + cbTextureTilingScale._m0[24u].w));
    vec4 _596 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _598 = _596.x;
    float _608 = dot(vec4(_598, _596.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _620 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _409.z) * 2.0) - ((((_598 - _608) * cbMtdParam._m0[24u].z) + _608) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4112 = isnan(0.0) ? _620 : (isnan(_620) ? 0.0 : max(_620, 0.0));
    float _621 = isnan(1.0) ? _4112 : (isnan(_4112) ? 1.0 : min(_4112, 1.0));
    float _631 = (_338.x * cbMtdParam._m0[9u].x) * ((_621 * ((_579.x * cbMtdParam._m0[14u].x) - _559)) + _559);
    float _632 = (_338.y * cbMtdParam._m0[9u].y) * ((_621 * ((_579.y * cbMtdParam._m0[14u].y) - _560)) + _560);
    float _633 = (_338.z * cbMtdParam._m0[9u].z) * ((_621 * ((_579.z * cbMtdParam._m0[14u].z) - _561)) + _561);
    float _637 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _315.x) * _631;
    float _640 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _315.y) * _632;
    float _643 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _315.z) * _633;
    float _651 = (((_631 - _637) * (isnan(1.0) ? _4057 : (isnan(_4057) ? 1.0 : min(_4057, 1.0)))) + _637) * 4.55000019073486328125;
    float _653 = (((_632 - _640) * (isnan(1.0) ? _4068 : (isnan(_4068) ? 1.0 : min(_4068, 1.0)))) + _640) * 4.55000019073486328125;
    float _655 = (((_633 - _643) * (isnan(1.0) ? _4079 : (isnan(_4079) ? 1.0 : min(_4079, 1.0)))) + _643) * 4.55000019073486328125;
    vec4 _673 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _301) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _302) + cbTextureTilingScale._m0[14u].w));
    vec4 _692 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _301) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _302) + cbTextureTilingScale._m0[20u].w));
    vec4 _715 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _301) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _302) + cbTextureTilingScale._m0[4u].w));
    vec4 _732 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _734 = _732.x;
    float _735 = _732.y;
    float _736 = _732.z;
    float _743 = ((_715.x - _734) * _479) + _734;
    float _744 = ((_715.y - _735) * _479) + _735;
    float _745 = ((_715.z - _736) * _479) + _736;
    vec4 _757 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _301) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _302) + cbTextureTilingScale._m0[2u].w));
    float _768 = ((_757.x - _743) * _552) + _743;
    float _769 = ((_757.y - _744) * _552) + _744;
    float _770 = ((_757.z - _745) * _552) + _745;
    vec4 _782 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _301) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _302) + cbTextureTilingScale._m0[23u].w));
    float _795 = ((_782.z - _770) * _621) + _770;
    float _798 = ((((_782.x - _768) * _621) + _768) * 2.0) + (-1.0);
    float _799 = ((((_782.y - _769) * _621) + _769) * 2.0) + (-1.0);
    float _800 = dot(vec2(_798, _799), vec2(_798, _799));
    float _4123 = isnan(0.0) ? _800 : (isnan(_800) ? 0.0 : max(_800, 0.0));
    float _805 = sqrt(1.0 - (isnan(1.0) ? _4123 : (isnan(_4123) ? 1.0 : min(_4123, 1.0))));
    vec4 _819 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _844 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _301) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _302) + cbTextureTilingScale._m0[11u].w));
    float _846 = _844.x;
    float _847 = 1.0 - _846;
    float _860 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_846 - _847) * cbMtdParam._m0[24u].w) + _847) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4134 = isnan(0.0) ? _860 : (isnan(_860) ? 0.0 : max(_860, 0.0));
    float _861 = isnan(1.0) ? _4134 : (isnan(_4134) ? 1.0 : min(_4134, 1.0));
    float _868 = (_861 * ((_673.x * cbMtdParam._m0[18u].x) - _651)) + _651;
    float _869 = (_861 * ((_673.y * cbMtdParam._m0[18u].y) - _653)) + _653;
    float _870 = (_861 * ((_673.z * cbMtdParam._m0[18u].z) - _655)) + _655;
    float _875 = (((_692.z - _795) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _795;
    float _879 = ((_819.z - _875) * cbMtdParam._m0[19u].w) + _875;
    vec4 _892 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _301) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _302) + cbTextureTilingScale._m0[15u].w));
    float _899 = (_892.x * 2.0) + (-1.0);
    float _900 = (_892.y * 2.0) + (-1.0);
    float _901 = dot(vec2(_899, _900), vec2(_899, _900));
    float _4145 = isnan(0.0) ? _901 : (isnan(_901) ? 0.0 : max(_901, 0.0));
    float _909 = (_861 * (_892.z - _879)) + _879;
    float _918 = (_798 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_692.x * 2.0) + (-1.0)))) + (((_819.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _919 = (_799 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_692.y * 2.0) + (-1.0)))) + (((_819.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _931 = (((_899 - _918) + (cbMtdParam._m0[21u].x * _918)) * _861) + _918;
    float _932 = (((_900 - _919) + (cbMtdParam._m0[21u].x * _919)) * _861) + _919;
    float _933 = (_861 * (sqrt(1.0 - (isnan(1.0) ? _4145 : (isnan(_4145) ? 1.0 : min(_4145, 1.0)))) - _805)) + _805;
    float _937 = cbMtdParam._m0[22u].x + _819.w;
    float _940 = fma(_933, _248 * NORMAL.x, fma(_932, _255 * TANGENT.x, (_241 * _233) * _931));
    float _943 = fma(_933, _248 * NORMAL.y, fma(_932, _255 * TANGENT.y, (_241 * _234) * _931));
    float _946 = fma(_933, _248 * NORMAL.z, fma(_932, _255 * TANGENT.z, (_241 * _235) * _931));
    float _950 = inversesqrt(dot(vec3(_940, _943, _946), vec3(_940, _943, _946)));
    float _951 = _950 * _940;
    float _952 = _950 * _943;
    float _953 = _950 * _946;
    float _4156 = isnan(0.0) ? _909 : (isnan(_909) ? 0.0 : max(_909, 0.0));
    float _954 = isnan(1.0) ? _4156 : (isnan(_4156) ? 1.0 : min(_4156, 1.0));
    float _4167 = isnan(0.0) ? _937 : (isnan(_937) ? 0.0 : max(_937, 0.0));
    float _4178 = isnan(0.0) ? _868 : (isnan(_868) ? 0.0 : max(_868, 0.0));
    float _4189 = isnan(0.0) ? _869 : (isnan(_869) ? 0.0 : max(_869, 0.0));
    float _4200 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
    float _972 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1013 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1023 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1013);
    float _1024 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1013);
    float _1025 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1013);
    float _1029 = inversesqrt(dot(vec3(_1023, _1024, _1025), vec3(_1023, _1024, _1025)));
    float _1030 = _1023 * _1029;
    float _1031 = _1024 * _1029;
    float _1032 = _1025 * _1029;
    float _1038 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1039 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1057 = fma(_953, cbSceneParam._m0[5u].z, fma(_952, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _951));
    float _1060 = fma(_953, cbSceneParam._m0[6u].z, fma(_952, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _951));
    float _1063 = fma(_953, cbSceneParam._m0[7u].z, fma(_952, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _951));
    uint _1077 = (_282 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1083 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4178 : (isnan(_4178) ? 1.0 : min(_4178, 1.0)))) * cbInstanceData._m0[_1077].x;
    float _1084 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4189 : (isnan(_4189) ? 1.0 : min(_4189, 1.0)))) * cbInstanceData._m0[_1077].y;
    float _1085 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4200 : (isnan(_4200) ? 1.0 : min(_4200, 1.0)))) * cbInstanceData._m0[_1077].z;
    float _4211 = isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0));
    float _1086 = isnan(1.0) ? _4211 : (isnan(_4211) ? 1.0 : min(_4211, 1.0));
    float _4222 = isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0));
    float _1087 = isnan(1.0) ? _4222 : (isnan(_4222) ? 1.0 : min(_4222, 1.0));
    float _4233 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
    float _1088 = isnan(1.0) ? _4233 : (isnan(_4233) ? 1.0 : min(_4233, 1.0));
    vec4 _1097 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1038, cbSceneParam._m0[86u].y * _1039));
    float _1101 = ((isnan(1.0) ? _4167 : (isnan(_4167) ? 1.0 : min(_4167, 1.0))) * TEXCOORD_5.w) * _1097.x;
    float _1102 = dot(vec3(_951, _952, _953), vec3(_1030, _1031, _1032));
    float _1105 = _1102 * 2.0;
    float _1109 = (_1105 * _951) - _1030;
    float _1110 = (_1105 * _952) - _1031;
    float _1111 = (_1105 * _953) - _1032;
    float _1115 = abs(dot(vec3(_1030, _1031, _1032), vec3(_951, _952, _953)));
    float _4244 = isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0));
    float _1117 = sqrt(_954);
    float _1130 = exp2((_1117 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4244 : (isnan(_4244) ? 1.0 : min(_4244, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1117 * 3.0));
    float _1162 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1166 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1170 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1471;
    float _1473;
    float _1474;
    float _1475;
    float _1476;
    float _1477;
    float _1478;
    float _1479;
    float _1480;
    float _1481;
    float _1482;
    float _1483;
    float _1484;
    float _1485;
    float _1486;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1196 = fma(_1170, cbModelParam._m0[26u].z, fma(_1166, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1162));
        float _1200 = fma(_1170, cbModelParam._m0[27u].z, fma(_1166, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1162));
        float _1204 = fma(_1170, cbModelParam._m0[28u].z, fma(_1166, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1162));
        float _1229 = _1162 + _951;
        float _1230 = _1166 + _952;
        float _1231 = _1170 + _953;
        float _1241 = fma(_1231, cbModelParam._m0[26u].z, fma(_1230, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1229)) - _1196;
        float _1242 = fma(_1231, cbModelParam._m0[27u].z, fma(_1230, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1229)) - _1200;
        float _1243 = fma(_1231, cbModelParam._m0[28u].z, fma(_1230, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1229)) - _1204;
        float _1247 = inversesqrt(dot(vec3(_1241, _1242, _1243), vec3(_1241, _1242, _1243)));
        float _1260 = ((_1247 * _1241) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1196 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1261 = ((_1247 * _1242) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1200 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1262 = ((_1247 * _1243) / cbModelParam._m0[34u].z) + ((((((_1204 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1265 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1260, _1261, _1262), 0.0);
        vec4 _1272 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1260, _1261, _1262), 0.0);
        vec4 _1279 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1260, _1261, _1262), 0.0);
        vec4 _1286 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1260, _1261, _1262), 0.0);
        float _1299 = exp2((_1265.w + (-0.5)) * 20.0) * 2.0;
        float _1300 = _1299 * (_1265.x + (-0.5));
        float _1301 = _1299 * (_1265.y + (-0.5));
        float _1302 = _1299 * (_1265.z + (-0.5));
        float _1309 = exp2((_1272.w + (-0.5)) * 20.0) * 2.0;
        float _1310 = _1309 * (_1272.x + (-0.5));
        float _1311 = _1309 * (_1272.y + (-0.5));
        float _1312 = _1309 * (_1272.z + (-0.5));
        float _1319 = exp2((_1279.w + (-0.5)) * 20.0) * 2.0;
        float _1320 = _1319 * (_1279.x + (-0.5));
        float _1321 = _1319 * (_1279.y + (-0.5));
        float _1322 = _1319 * (_1279.z + (-0.5));
        float _1329 = exp2((_1286.w + (-0.5)) * 20.0) * 2.0;
        float _1330 = _1329 * (_1286.x + (-0.5));
        float _1331 = _1329 * (_1286.y + (-0.5));
        float _1332 = _1329 * (_1286.z + (-0.5));
        float _1333 = isnan(0.0) ? _1330 : (isnan(_1330) ? 0.0 : max(_1330, 0.0));
        float _1334 = isnan(0.0) ? _1331 : (isnan(_1331) ? 0.0 : max(_1331, 0.0));
        float _1335 = isnan(0.0) ? _1332 : (isnan(_1332) ? 0.0 : max(_1332, 0.0));
        float _1336 = _1300 * 0.5;
        float _1337 = _1310 * 0.5;
        float _1338 = _1320 * 0.5;
        float _1339 = dot(vec3(_1336, _1337, _1338), vec3(_1336, _1337, _1338));
        float _1344 = (_1339 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1339);
        float _1353 = (dot(vec3(_951, _952, _953), vec3(_1344 * _1336, _1344 * _1337, _1344 * _1338)) + 1.0) * 0.5;
        float _4270 = isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0));
        float _1363 = sqrt(((_1337 * _1337) + (_1336 * _1336)) + (_1338 * _1338)) / (_1333 + 9.9999997473787516355514526367188e-06);
        float _4281 = isnan(0.0) ? _1363 : (isnan(_1363) ? 0.0 : max(_1363, 0.0));
        float _1364 = isnan(1.0) ? _4281 : (isnan(_4281) ? 1.0 : min(_4281, 1.0));
        float _1365 = _1364 * 2.0;
        float _1369 = (1.0 - _1364) / (_1364 + 1.0);
        float _4292 = isnan(0.0) ? _1369 : (isnan(_1369) ? 0.0 : max(_1369, 0.0));
        float _1370 = isnan(1.0) ? _4292 : (isnan(_4292) ? 1.0 : min(_4292, 1.0));
        float _1379 = ((((1.0 - _1370) * (_1365 + 2.0)) * exp2(log2(isnan(1.0) ? _4270 : (isnan(_4270) ? 1.0 : min(_4270, 1.0))) * (_1365 + 1.0))) + _1370) * _1333;
        float _1380 = _1301 * 0.5;
        float _1381 = _1311 * 0.5;
        float _1382 = _1321 * 0.5;
        float _1383 = dot(vec3(_1380, _1381, _1382), vec3(_1380, _1381, _1382));
        float _1388 = (_1383 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1383);
        float _1396 = (dot(vec3(_951, _952, _953), vec3(_1388 * _1380, _1388 * _1381, _1388 * _1382)) + 1.0) * 0.5;
        float _4303 = isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0));
        float _1405 = sqrt(((_1381 * _1381) + (_1380 * _1380)) + (_1382 * _1382)) / (_1334 + 9.9999997473787516355514526367188e-06);
        float _4314 = isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0));
        float _1406 = isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0));
        float _1407 = _1406 * 2.0;
        float _1411 = (1.0 - _1406) / (_1406 + 1.0);
        float _4325 = isnan(0.0) ? _1411 : (isnan(_1411) ? 0.0 : max(_1411, 0.0));
        float _1412 = isnan(1.0) ? _4325 : (isnan(_4325) ? 1.0 : min(_4325, 1.0));
        float _1421 = ((((1.0 - _1412) * (_1407 + 2.0)) * exp2(log2(isnan(1.0) ? _4303 : (isnan(_4303) ? 1.0 : min(_4303, 1.0))) * (_1407 + 1.0))) + _1412) * _1334;
        float _1422 = _1302 * 0.5;
        float _1423 = _1312 * 0.5;
        float _1424 = _1322 * 0.5;
        float _1425 = dot(vec3(_1422, _1423, _1424), vec3(_1422, _1423, _1424));
        float _1430 = (_1425 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1425);
        float _1438 = (dot(vec3(_951, _952, _953), vec3(_1430 * _1422, _1430 * _1423, _1430 * _1424)) + 1.0) * 0.5;
        float _4336 = isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0));
        float _1447 = sqrt(((_1423 * _1423) + (_1422 * _1422)) + (_1424 * _1424)) / (_1335 + 9.9999997473787516355514526367188e-06);
        float _4347 = isnan(0.0) ? _1447 : (isnan(_1447) ? 0.0 : max(_1447, 0.0));
        float _1448 = isnan(1.0) ? _4347 : (isnan(_4347) ? 1.0 : min(_4347, 1.0));
        float _1449 = _1448 * 2.0;
        float _1453 = (1.0 - _1448) / (_1448 + 1.0);
        float _4358 = isnan(0.0) ? _1453 : (isnan(_1453) ? 0.0 : max(_1453, 0.0));
        float _1454 = isnan(1.0) ? _4358 : (isnan(_4358) ? 1.0 : min(_4358, 1.0));
        float _1463 = ((((1.0 - _1454) * (_1449 + 2.0)) * exp2(log2(isnan(1.0) ? _4336 : (isnan(_4336) ? 1.0 : min(_4336, 1.0))) * (_1449 + 1.0))) + _1454) * _1335;
        _1471 = _1302;
        _1473 = _1301;
        _1474 = _1300;
        _1475 = _1312;
        _1476 = _1311;
        _1477 = _1310;
        _1478 = _1322;
        _1479 = _1321;
        _1480 = _1320;
        _1481 = _1335;
        _1482 = _1334;
        _1483 = _1333;
        _1484 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0)));
        _1485 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0)));
        _1486 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1463 : (isnan(_1463) ? 0.0 : max(_1463, 0.0)));
    }
    else
    {
        _1471 = _1472;
        _1473 = _1472;
        _1474 = _1472;
        _1475 = _1472;
        _1476 = _1472;
        _1477 = _1472;
        _1478 = _1472;
        _1479 = _1472;
        _1480 = _1472;
        _1481 = _1472;
        _1482 = _1472;
        _1483 = _1472;
        _1484 = 0.0;
        _1485 = 0.0;
        _1486 = 0.0;
    }
    float _1778;
    float _1779;
    float _1780;
    float _1781;
    float _1782;
    float _1783;
    float _1784;
    float _1785;
    float _1786;
    float _1787;
    float _1788;
    float _1789;
    float _1790;
    float _1791;
    float _1792;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1509 = fma(_1170, cbModelParam._m0[30u].z, fma(_1166, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1162));
        float _1513 = fma(_1170, cbModelParam._m0[31u].z, fma(_1166, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1162));
        float _1517 = fma(_1170, cbModelParam._m0[32u].z, fma(_1166, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1162));
        float _1540 = _1162 + _951;
        float _1541 = _1166 + _952;
        float _1542 = _1170 + _953;
        float _1552 = fma(_1542, cbModelParam._m0[30u].z, fma(_1541, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1540)) - _1509;
        float _1553 = fma(_1542, cbModelParam._m0[31u].z, fma(_1541, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1540)) - _1513;
        float _1554 = fma(_1542, cbModelParam._m0[32u].z, fma(_1541, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1540)) - _1517;
        float _1558 = inversesqrt(dot(vec3(_1552, _1553, _1554), vec3(_1552, _1553, _1554)));
        float _1571 = ((_1558 * _1552) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1509 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1572 = ((_1558 * _1553) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1513 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1573 = ((_1558 * _1554) / cbModelParam._m0[35u].z) + ((((((_1517 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1575 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1571, _1572, _1573), 0.0);
        vec4 _1582 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1571, _1572, _1573), 0.0);
        vec4 _1589 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1571, _1572, _1573), 0.0);
        vec4 _1596 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1571, _1572, _1573), 0.0);
        float _1608 = exp2((_1575.w + (-0.5)) * 20.0) * 2.0;
        float _1609 = _1608 * (_1575.x + (-0.5));
        float _1610 = _1608 * (_1575.y + (-0.5));
        float _1611 = _1608 * (_1575.z + (-0.5));
        float _1618 = exp2((_1582.w + (-0.5)) * 20.0) * 2.0;
        float _1619 = _1618 * (_1582.x + (-0.5));
        float _1620 = _1618 * (_1582.y + (-0.5));
        float _1621 = _1618 * (_1582.z + (-0.5));
        float _1628 = exp2((_1589.w + (-0.5)) * 20.0) * 2.0;
        float _1629 = _1628 * (_1589.x + (-0.5));
        float _1630 = _1628 * (_1589.y + (-0.5));
        float _1631 = _1628 * (_1589.z + (-0.5));
        float _1638 = exp2((_1596.w + (-0.5)) * 20.0) * 2.0;
        float _1639 = _1638 * (_1596.x + (-0.5));
        float _1640 = _1638 * (_1596.y + (-0.5));
        float _1641 = _1638 * (_1596.z + (-0.5));
        float _1642 = isnan(0.0) ? _1639 : (isnan(_1639) ? 0.0 : max(_1639, 0.0));
        float _1643 = isnan(0.0) ? _1640 : (isnan(_1640) ? 0.0 : max(_1640, 0.0));
        float _1644 = isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0));
        float _1645 = _1609 * 0.5;
        float _1646 = _1619 * 0.5;
        float _1647 = _1629 * 0.5;
        float _1648 = dot(vec3(_1645, _1646, _1647), vec3(_1645, _1646, _1647));
        float _1653 = (_1648 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1648);
        float _1661 = (dot(vec3(_951, _952, _953), vec3(_1653 * _1645, _1653 * _1646, _1653 * _1647)) + 1.0) * 0.5;
        float _4399 = isnan(0.0) ? _1661 : (isnan(_1661) ? 0.0 : max(_1661, 0.0));
        float _1670 = sqrt(((_1646 * _1646) + (_1645 * _1645)) + (_1647 * _1647)) / (_1642 + 9.9999997473787516355514526367188e-06);
        float _4410 = isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0));
        float _1671 = isnan(1.0) ? _4410 : (isnan(_4410) ? 1.0 : min(_4410, 1.0));
        float _1672 = _1671 * 2.0;
        float _1676 = (1.0 - _1671) / (_1671 + 1.0);
        float _4421 = isnan(0.0) ? _1676 : (isnan(_1676) ? 0.0 : max(_1676, 0.0));
        float _1677 = isnan(1.0) ? _4421 : (isnan(_4421) ? 1.0 : min(_4421, 1.0));
        float _1686 = ((((1.0 - _1677) * (_1672 + 2.0)) * exp2(log2(isnan(1.0) ? _4399 : (isnan(_4399) ? 1.0 : min(_4399, 1.0))) * (_1672 + 1.0))) + _1677) * _1642;
        float _1687 = _1610 * 0.5;
        float _1688 = _1620 * 0.5;
        float _1689 = _1630 * 0.5;
        float _1690 = dot(vec3(_1687, _1688, _1689), vec3(_1687, _1688, _1689));
        float _1695 = (_1690 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1690);
        float _1703 = (dot(vec3(_951, _952, _953), vec3(_1695 * _1687, _1695 * _1688, _1695 * _1689)) + 1.0) * 0.5;
        float _4432 = isnan(0.0) ? _1703 : (isnan(_1703) ? 0.0 : max(_1703, 0.0));
        float _1712 = sqrt(((_1688 * _1688) + (_1687 * _1687)) + (_1689 * _1689)) / (_1643 + 9.9999997473787516355514526367188e-06);
        float _4443 = isnan(0.0) ? _1712 : (isnan(_1712) ? 0.0 : max(_1712, 0.0));
        float _1713 = isnan(1.0) ? _4443 : (isnan(_4443) ? 1.0 : min(_4443, 1.0));
        float _1714 = _1713 * 2.0;
        float _1718 = (1.0 - _1713) / (_1713 + 1.0);
        float _4454 = isnan(0.0) ? _1718 : (isnan(_1718) ? 0.0 : max(_1718, 0.0));
        float _1719 = isnan(1.0) ? _4454 : (isnan(_4454) ? 1.0 : min(_4454, 1.0));
        float _1728 = ((((1.0 - _1719) * (_1714 + 2.0)) * exp2(log2(isnan(1.0) ? _4432 : (isnan(_4432) ? 1.0 : min(_4432, 1.0))) * (_1714 + 1.0))) + _1719) * _1643;
        float _1729 = _1611 * 0.5;
        float _1730 = _1621 * 0.5;
        float _1731 = _1631 * 0.5;
        float _1732 = dot(vec3(_1729, _1730, _1731), vec3(_1729, _1730, _1731));
        float _1737 = (_1732 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1732);
        float _1745 = (dot(vec3(_951, _952, _953), vec3(_1737 * _1729, _1737 * _1730, _1737 * _1731)) + 1.0) * 0.5;
        float _4465 = isnan(0.0) ? _1745 : (isnan(_1745) ? 0.0 : max(_1745, 0.0));
        float _1754 = sqrt(((_1730 * _1730) + (_1729 * _1729)) + (_1731 * _1731)) / (_1644 + 9.9999997473787516355514526367188e-06);
        float _4476 = isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0));
        float _1755 = isnan(1.0) ? _4476 : (isnan(_4476) ? 1.0 : min(_4476, 1.0));
        float _1756 = _1755 * 2.0;
        float _1760 = (1.0 - _1755) / (_1755 + 1.0);
        float _4487 = isnan(0.0) ? _1760 : (isnan(_1760) ? 0.0 : max(_1760, 0.0));
        float _1761 = isnan(1.0) ? _4487 : (isnan(_4487) ? 1.0 : min(_4487, 1.0));
        float _1770 = ((((1.0 - _1761) * (_1756 + 2.0)) * exp2(log2(isnan(1.0) ? _4465 : (isnan(_4465) ? 1.0 : min(_4465, 1.0))) * (_1756 + 1.0))) + _1761) * _1644;
        _1778 = _1611;
        _1779 = _1610;
        _1780 = _1609;
        _1781 = _1621;
        _1782 = _1620;
        _1783 = _1619;
        _1784 = _1631;
        _1785 = _1630;
        _1786 = _1629;
        _1787 = _1644;
        _1788 = _1643;
        _1789 = _1642;
        _1790 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0)));
        _1791 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1728 : (isnan(_1728) ? 0.0 : max(_1728, 0.0)));
        _1792 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1770 : (isnan(_1770) ? 0.0 : max(_1770, 0.0)));
    }
    else
    {
        _1778 = _1472;
        _1779 = _1472;
        _1780 = _1472;
        _1781 = _1472;
        _1782 = _1472;
        _1783 = _1472;
        _1784 = _1472;
        _1785 = _1472;
        _1786 = _1472;
        _1787 = _1472;
        _1788 = _1472;
        _1789 = _1472;
        _1790 = 0.0;
        _1791 = 0.0;
        _1792 = 0.0;
    }
    float _1802 = (cbModelParam._m0[1u].x * (_1790 - _1484)) + _1484;
    float _1803 = (cbModelParam._m0[1u].x * (_1791 - _1485)) + _1485;
    float _1804 = (cbModelParam._m0[1u].x * (_1792 - _1486)) + _1486;
    float _1825 = fma(_1804, cbSceneParam._m0[89u].z, fma(_1803, cbSceneParam._m0[89u].y, _1802 * cbSceneParam._m0[89u].x));
    float _1828 = fma(_1804, cbSceneParam._m0[90u].z, fma(_1803, cbSceneParam._m0[90u].y, _1802 * cbSceneParam._m0[90u].x));
    float _1831 = fma(_1804, cbSceneParam._m0[91u].z, fma(_1803, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1802));
    float _1846 = _1109 * 0.5;
    float _1847 = _1110 * 0.5;
    float _1848 = _1111 * 0.5;
    float _1849 = dot(vec4(_1846, _1847, _1848, 1.0), vec4(_1780, _1783, _1786, _1789));
    float _1852 = dot(vec4(_1846, _1847, _1848, 1.0), vec4(_1779, _1782, _1785, _1788));
    float _1855 = dot(vec4(_1846, _1847, _1848, 1.0), vec4(_1778, _1781, _1784, _1787));
    float _1889;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1862 = dot(vec4(_1846, _1847, _1848, 1.0), vec4(_1471, _1475, _1478, _1481));
        float _1866 = dot(vec4(_1846, _1847, _1848, 1.0), vec4(_1473, _1476, _1479, _1482));
        float _1870 = dot(vec4(_1846, _1847, _1848, 1.0), vec4(_1474, _1477, _1480, _1483));
        float _1877 = dot(vec4(cbModelParam._m0[39u]), vec4(_1846, _1847, _1848, 1.0));
        _1889 = dot(vec3(isnan(0.0) ? _1870 : (isnan(_1870) ? 0.0 : max(_1870, 0.0)), isnan(0.0) ? _1866 : (isnan(_1866) ? 0.0 : max(_1866, 0.0)), isnan(0.0) ? _1862 : (isnan(_1862) ? 0.0 : max(_1862, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1877) ? 0.0 : (isnan(0.0) ? _1877 : max(0.0, _1877))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1889 = 1.0;
    }
    float _1900;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1891 = dot(vec4(cbModelParam._m0[40u]), vec4(_1846, _1847, _1848, 1.0));
        _1900 = dot(vec3(isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0)), isnan(0.0) ? _1852 : (isnan(_1852) ? 0.0 : max(_1852, 0.0)), isnan(0.0) ? _1855 : (isnan(_1855) ? 0.0 : max(_1855, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1891) ? 0.0 : (isnan(0.0) ? _1891 : max(0.0, _1891))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1900 = 1.0;
    }
    float _1904 = (_1900 * cbModelParam._m0[1u].x) + (_1889 * (1.0 - cbModelParam._m0[1u].x));
    float _1914 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _954);
    float _1915 = isnan(_1914) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1914 : min(cbModelParam._m0[25u].z, _1914));
    float _1995;
    float _1997;
    float _1999;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1962 = fma(_1170, cbModelParam._m0[13u].z, fma(_1166, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1162)) + cbModelParam._m0[13u].w;
        float _1966 = fma(_1170, cbModelParam._m0[14u].z, fma(_1166, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1162)) + cbModelParam._m0[14u].w;
        float _1970 = fma(_1170, cbModelParam._m0[15u].z, fma(_1166, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1162)) + cbModelParam._m0[15u].w;
        float _1973 = fma(_1111, cbModelParam._m0[13u].z, fma(_1110, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1109));
        float _1976 = fma(_1111, cbModelParam._m0[14u].z, fma(_1110, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1109));
        float _1979 = fma(_1111, cbModelParam._m0[15u].z, fma(_1110, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1109));
        float _2007;
        if (_1973 > 0.0)
        {
            _2007 = abs((1.0 - _1962) / _1973);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1973 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1962 + 1.0) / _1973);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2007 = frontier_phi_14_12_ladder;
        }
        float _2176;
        if (_1976 > 0.0)
        {
            _2176 = abs((1.0 - _1966) / _1976);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1976 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1966 + 1.0) / _1976);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2176 = frontier_phi_23_19_ladder;
        }
        float _2471;
        if (_1979 > 0.0)
        {
            _2471 = abs((1.0 - _1970) / _1979);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1979 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1970 + 1.0) / _1979);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2471 = frontier_phi_35_30_ladder;
        }
        float _2473 = isnan(_2176) ? _2007 : (isnan(_2007) ? _2176 : min(_2007, _2176));
        float _2474 = isnan(_2471) ? _2473 : (isnan(_2473) ? _2471 : min(_2473, _2471));
        float _2478 = (_2474 * _1973) + _1962;
        float _2479 = (_2474 * _1976) + _1966;
        float _2480 = (_2474 * _1979) + _1970;
        float _2481 = _2474 * 9.9999997473787516355514526367188e-05;
        float _2483 = (-1.0) - _2481;
        float _2485 = _2481 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2480 > _2485) || ((_2480 < _2483) || ((_2479 > _2485) || ((_2479 < _2483) || ((_2478 < _2483) || (_2478 > _2485))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2625 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2480, cbModelParam._m0[9u].z, fma(_2479, cbModelParam._m0[9u].y, _2478 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2480, cbModelParam._m0[10u].z, fma(_2479, cbModelParam._m0[10u].y, _2478 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2480, cbModelParam._m0[11u].z, fma(_2479, cbModelParam._m0[11u].y, _2478 * cbModelParam._m0[11u].x))), _1915);
            frontier_phi_13_35_ladder = _2625.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2625.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2625.x * cbModelParam._m0[1u].y;
        }
        _1995 = frontier_phi_13_35_ladder_2;
        _1997 = frontier_phi_13_35_ladder_1;
        _1999 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1983 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1109, _1110, _1111), _1915);
        _1995 = _1983.x * cbModelParam._m0[1u].y;
        _1997 = _1983.y * cbModelParam._m0[1u].y;
        _1999 = _1983.z * cbModelParam._m0[1u].y;
    }
    float _2003 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _954);
    float _2004 = isnan(_2003) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2003 : min(cbModelParam._m0[25u].w, _2003));
    float _2093;
    float _2095;
    float _2097;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2057 = fma(_1170, cbModelParam._m0[21u].z, fma(_1166, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1162)) + cbModelParam._m0[21u].w;
        float _2061 = fma(_1170, cbModelParam._m0[22u].z, fma(_1166, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1162)) + cbModelParam._m0[22u].w;
        float _2065 = fma(_1170, cbModelParam._m0[23u].z, fma(_1166, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1162)) + cbModelParam._m0[23u].w;
        float _2068 = fma(_1111, cbModelParam._m0[21u].z, fma(_1110, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1109));
        float _2071 = fma(_1111, cbModelParam._m0[22u].z, fma(_1110, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1109));
        float _2074 = fma(_1111, cbModelParam._m0[23u].z, fma(_1110, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1109));
        float _2181;
        if (_2068 > 0.0)
        {
            _2181 = abs((1.0 - _2057) / _2068);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2068 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2057 + 1.0) / _2068);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2181 = frontier_phi_25_21_ladder;
        }
        float _2498;
        if (_2071 > 0.0)
        {
            _2498 = abs((1.0 - _2061) / _2071);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2071 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2061 + 1.0) / _2071);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2498 = frontier_phi_37_32_ladder;
        }
        float _2825;
        if (_2074 > 0.0)
        {
            _2825 = abs((1.0 - _2065) / _2074);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2074 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2065 + 1.0) / _2074);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2825 = frontier_phi_47_44_ladder;
        }
        float _2827 = isnan(_2498) ? _2181 : (isnan(_2181) ? _2498 : min(_2181, _2498));
        float _2828 = isnan(_2825) ? _2827 : (isnan(_2827) ? _2825 : min(_2827, _2825));
        float _2832 = (_2828 * _2068) + _2057;
        float _2833 = (_2828 * _2071) + _2061;
        float _2834 = (_2828 * _2074) + _2065;
        float _2835 = _2828 * 9.9999997473787516355514526367188e-05;
        float _2836 = (-1.0) - _2835;
        float _2838 = _2835 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2834 > _2838) || ((_2834 < _2836) || ((_2833 > _2838) || ((_2833 < _2836) || ((_2832 < _2836) || (_2832 > _2838))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2952 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2834, cbModelParam._m0[17u].z, fma(_2833, cbModelParam._m0[17u].y, _2832 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2834, cbModelParam._m0[18u].z, fma(_2833, cbModelParam._m0[18u].y, _2832 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2834, cbModelParam._m0[19u].z, fma(_2833, cbModelParam._m0[19u].y, _2832 * cbModelParam._m0[19u].x))), _2004);
            frontier_phi_22_47_ladder = _2952.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2952.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2952.x * cbModelParam._m0[1u].z;
        }
        _2093 = frontier_phi_22_47_ladder_2;
        _2095 = frontier_phi_22_47_ladder_1;
        _2097 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2077 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1109, _1110, _1111), _2004);
        _2093 = _2077.x * cbModelParam._m0[1u].z;
        _2095 = _2077.y * cbModelParam._m0[1u].z;
        _2097 = _2077.z * cbModelParam._m0[1u].z;
    }
    float _2109 = ((((1.0 - _1130) * ((_1117 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1130 * _1117)) * _1101;
    float _2110 = _2109 * ((cbModelParam._m0[1u].w * (_2093 - _1995)) + _1995);
    float _2111 = _2109 * ((cbModelParam._m0[1u].w * (_2095 - _1997)) + _1997);
    float _2112 = _2109 * ((cbModelParam._m0[1u].w * (_2097 - _1999)) + _1999);
    float _2115 = fma(_2112, cbSceneParam._m0[89u].z, fma(_2111, cbSceneParam._m0[89u].y, _2110 * cbSceneParam._m0[89u].x));
    float _2118 = fma(_2112, cbSceneParam._m0[90u].z, fma(_2111, cbSceneParam._m0[90u].y, _2110 * cbSceneParam._m0[90u].x));
    float _2121 = fma(_2112, cbSceneParam._m0[91u].z, fma(_2111, cbSceneParam._m0[91u].y, _2110 * cbSceneParam._m0[91u].x));
    float _2155 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2159 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2163 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2167 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2168 = _2155 / _2167;
    float _2169 = _2159 / _2167;
    float _2170 = _2163 / _2167;
    float _2317;
    float _2318;
    float _2319;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2197 = ((uint(_2170 > cbSceneParam._m0[59u].y) + uint(_2170 > cbSceneParam._m0[59u].x)) + uint(_2170 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2198 = _2197 + 43u;
        uint _2206 = _2197 + 44u;
        uint _2214 = _2197 + 45u;
        uint _2222 = _2197 + 46u;
        float _2233 = fma(_2167, cbSceneParam._m0[_2198].w, fma(_2163, cbSceneParam._m0[_2198].z, fma(_2159, cbSceneParam._m0[_2198].y, _2155 * cbSceneParam._m0[_2198].x)));
        float _2237 = fma(_2167, cbSceneParam._m0[_2206].w, fma(_2163, cbSceneParam._m0[_2206].z, fma(_2159, cbSceneParam._m0[_2206].y, _2155 * cbSceneParam._m0[_2206].x)));
        float _2245 = fma(_2167, cbSceneParam._m0[_2222].w, fma(_2163, cbSceneParam._m0[_2222].z, fma(_2159, cbSceneParam._m0[_2222].y, _2155 * cbSceneParam._m0[_2222].x)));
        float _2250 = cbSceneParam._m0[33u].z * _2245;
        float _2252 = cbSceneParam._m0[33u].w * _2245;
        float _2255 = fma(_2167, cbSceneParam._m0[_2214].w, fma(_2163, cbSceneParam._m0[_2214].z, fma(_2159, cbSceneParam._m0[_2214].y, _2155 * cbSceneParam._m0[_2214].x))) / _2245;
        float _2303 = (cbSceneParam._m0[33u].x - sqrt(((_2169 * _2169) + (_2168 * _2168)) + (_2170 * _2170))) * cbSceneParam._m0[33u].y;
        float _4613 = isnan(0.0) ? _2303 : (isnan(_2303) ? 0.0 : max(_2303, 0.0));
        float _2310 = (isnan(1.0) ? _4613 : (isnan(_4613) ? 1.0 : min(_4613, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2250 + _2233) / _2245, (_2252 + _2237) / _2245), _2255), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2252 + _2233) / _2245, (_2237 - _2250) / _2245), _2255), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2233 - _2250) / _2245, (_2237 - _2252) / _2245), _2255), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2233 - _2252) / _2245, (_2250 + _2237) / _2245), _2255), 0.0)).x), vec4(0.25)));
        _2317 = 1.0 - (_2310 * cbSceneParam._m0[34u].x);
        _2318 = 1.0 - (_2310 * cbSceneParam._m0[34u].y);
        _2319 = 1.0 - (_2310 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2317 = 1.0;
        _2318 = 1.0;
        _2319 = 1.0;
    }
    float _2383;
    float _2385;
    float _2387;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2371 = fma(_2167, cbSceneParam._m0[63u].w, fma(_2163, cbSceneParam._m0[63u].z, fma(_2159, cbSceneParam._m0[63u].y, _2155 * cbSceneParam._m0[63u].x)));
        float _2372 = fma(_2167, cbSceneParam._m0[60u].w, fma(_2163, cbSceneParam._m0[60u].z, fma(_2159, cbSceneParam._m0[60u].y, _2155 * cbSceneParam._m0[60u].x))) / _2371;
        float _2373 = fma(_2167, cbSceneParam._m0[61u].w, fma(_2163, cbSceneParam._m0[61u].z, fma(_2159, cbSceneParam._m0[61u].y, _2155 * cbSceneParam._m0[61u].x))) / _2371;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2372 >= cbSceneParam._m0[64u].x) && (_2373 >= cbSceneParam._m0[64u].y)) && (_2372 <= cbSceneParam._m0[64u].z)) && (_2373 <= cbSceneParam._m0[64u].w))
        {
            float _2511 = fma(_2167, cbSceneParam._m0[62u].w, fma(_2163, cbSceneParam._m0[62u].z, fma(_2159, cbSceneParam._m0[62u].y, _2155 * cbSceneParam._m0[62u].x))) / _2371;
            float _2515 = isnan(cbSceneParam._m0[41u].w) ? _2511 : (isnan(_2511) ? cbSceneParam._m0[41u].w : max(_2511, cbSceneParam._m0[41u].w));
            float _2558 = (cbSceneParam._m0[33u].x - sqrt(((_2169 * _2169) + (_2168 * _2168)) + (_2170 * _2170))) * cbSceneParam._m0[33u].y;
            float _4629 = isnan(0.0) ? _2558 : (isnan(_2558) ? 0.0 : max(_2558, 0.0));
            float _2565 = (isnan(1.0) ? _4629 : (isnan(_4629) ? 1.0 : min(_4629, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2372, cbSceneParam._m0[33u].w + _2373), _2515), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2372, _2373 - cbSceneParam._m0[33u].z), _2515), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2372 - cbSceneParam._m0[33u].z, _2373 - cbSceneParam._m0[33u].w), _2515), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2372 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2373), _2515), 0.0)).x), vec4(0.25)));
            float _2569 = 1.0 - (_2565 * cbSceneParam._m0[34u].x);
            float _2570 = 1.0 - (_2565 * cbSceneParam._m0[34u].y);
            float _2571 = 1.0 - (_2565 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2571) ? _2319 : (isnan(_2319) ? _2571 : min(_2319, _2571));
            frontier_phi_34_33_ladder_1 = isnan(_2570) ? _2318 : (isnan(_2318) ? _2570 : min(_2318, _2570));
            frontier_phi_34_33_ladder_2 = isnan(_2569) ? _2317 : (isnan(_2317) ? _2569 : min(_2317, _2569));
        }
        else
        {
            frontier_phi_34_33_ladder = _2319;
            frontier_phi_34_33_ladder_1 = _2318;
            frontier_phi_34_33_ladder_2 = _2317;
        }
        _2383 = frontier_phi_34_33_ladder_2;
        _2385 = frontier_phi_34_33_ladder_1;
        _2387 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2383 = _2317;
        _2385 = _2318;
        _2387 = _2319;
    }
    uvec4 _2392 = floatBitsToUint(cbInstanceData._m0[_282 + 5u]);
    uint _2394 = _2392.x * 14u;
    uint _2395 = _2394 + 13u;
    float _2402 = _1101 + (-1.0);
    float _2407 = (cbLight._m0[_2395].x * _2402) + 1.0;
    float _2408 = (cbLight._m0[_2395].y * _2402) + 1.0;
    float _2409 = (cbLight._m0[_2395].z * _2402) + 1.0;
    float _2410 = (cbLight._m0[_2395].w * _2402) + 1.0;
    uint _2411 = _2394 + 5u;
    float _2417 = isnan(1.0) ? _2408 : (isnan(_2408) ? 1.0 : min(_2408, 1.0));
    uint _2421 = _2394 + 4u;
    float _2430 = isnan(1.0) ? _2407 : (isnan(_2407) ? 1.0 : min(_2407, 1.0));
    uint _2434 = _2394 | 1u;
    float _2445 = dot(vec3(cbLight._m0[_2394].xyz), vec3(_951, _952, _953));
    float _2448 = dot(vec3(cbLight._m0[_2434].xyz), vec3(_951, _952, _953));
    float _4665 = isnan(0.0) ? _2445 : (isnan(_2445) ? 0.0 : max(_2445, 0.0));
    float _4676 = isnan(0.0) ? _2448 : (isnan(_2448) ? 0.0 : max(_2448, 0.0));
    float _2453 = (isnan(1.0) ? _4665 : (isnan(_4665) ? 1.0 : min(_4665, 1.0))) * 0.3183098733425140380859375;
    float _2455 = (isnan(1.0) ? _4676 : (isnan(_4676) ? 1.0 : min(_4676, 1.0))) * 0.3183098733425140380859375;
    float _2462 = ((cbLight._m0[_2411].x * _2417) * _2455) + (((cbLight._m0[_2421].x * _2383) * _2430) * _2453);
    float _2463 = ((_2417 * cbLight._m0[_2411].y) * _2455) + (((cbLight._m0[_2421].y * _2385) * _2430) * _2453);
    float _2464 = ((_2417 * cbLight._m0[_2411].z) * _2455) + (((cbLight._m0[_2421].z * _2387) * _2430) * _2453);
    uvec4 _2468 = floatBitsToUint(cbLight._m0[_2394 + 12u]);
    bool _2470 = _2468.x == 0u;
    float _2572;
    float _2574;
    float _2576;
    if (_2470)
    {
        _2572 = _2462;
        _2574 = _2463;
        _2576 = _2464;
    }
    else
    {
        uint _2580 = _2394 + 6u;
        float _2596 = (dot(vec3(cbLight._m0[_2394 + 2u].xyz), vec3(_951, _952, _953)) * 0.5) + 0.5;
        float _2597 = _2596 * _2596;
        float _4687 = isnan(0.0) ? _2597 : (isnan(_2597) ? 0.0 : max(_2597, 0.0));
        float _2598 = isnan(1.0) ? _4687 : (isnan(_4687) ? 1.0 : min(_4687, 1.0));
        float _2599 = isnan(1.0) ? _2409 : (isnan(_2409) ? 1.0 : min(_2409, 1.0));
        _2572 = (((cbLight._m0[_2580].x * 0.3183098733425140380859375) * _2598) * _2599) + _2462;
        _2574 = (((cbLight._m0[_2580].y * 0.3183098733425140380859375) * _2598) * _2599) + _2463;
        _2576 = (((cbLight._m0[_2580].z * 0.3183098733425140380859375) * _2598) * _2599) + _2464;
    }
    bool _2579 = _2468.y == 0u;
    float _2634;
    float _2636;
    float _2638;
    if (_2579)
    {
        _2634 = _2572;
        _2636 = _2574;
        _2638 = _2576;
    }
    else
    {
        uint _2796 = _2394 + 7u;
        float _2812 = (dot(vec3(cbLight._m0[_2394 + 3u].xyz), vec3(_951, _952, _953)) * 0.5) + 0.5;
        float _2813 = _2812 * _2812;
        float _4703 = isnan(0.0) ? _2813 : (isnan(_2813) ? 0.0 : max(_2813, 0.0));
        float _2814 = isnan(1.0) ? _4703 : (isnan(_4703) ? 1.0 : min(_4703, 1.0));
        float _2815 = isnan(1.0) ? _2410 : (isnan(_2410) ? 1.0 : min(_2410, 1.0));
        _2634 = (((cbLight._m0[_2796].x * 0.3183098733425140380859375) * _2814) * _2815) + _2572;
        _2636 = (((cbLight._m0[_2796].y * 0.3183098733425140380859375) * _2814) * _2815) + _2574;
        _2638 = (((cbLight._m0[_2796].z * 0.3183098733425140380859375) * _2814) * _2815) + _2576;
    }
    uint _2641 = _2394 + 8u;
    float _2654 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2394].w)) * _954) * 0.949999988079071044921875);
    float _2655 = _2654 * _2654;
    float _2656 = cbLight._m0[_2394].x + _1030;
    float _2657 = cbLight._m0[_2394].y + _1031;
    float _2658 = cbLight._m0[_2394].z + _1032;
    float _2662 = inversesqrt(dot(vec3(_2656, _2657, _2658), vec3(_2656, _2657, _2658)));
    float _2663 = _2662 * _2656;
    float _2664 = _2662 * _2657;
    float _2665 = _2662 * _2658;
    float _2666 = dot(vec3(_951, _952, _953), vec3(cbLight._m0[_2394].xyz));
    float _4719 = isnan(0.0) ? _2666 : (isnan(_2666) ? 0.0 : max(_2666, 0.0));
    float _2669 = isnan(1.0) ? _4719 : (isnan(_4719) ? 1.0 : min(_4719, 1.0));
    float _4730 = isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0));
    float _2670 = isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0));
    float _2671 = dot(vec3(_951, _952, _953), vec3(_2663, _2664, _2665));
    float _4741 = isnan(0.0) ? _2671 : (isnan(_2671) ? 0.0 : max(_2671, 0.0));
    float _2674 = isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0));
    float _2675 = dot(vec3(cbLight._m0[_2394].xyz), vec3(_2663, _2664, _2665));
    float _4752 = isnan(0.0) ? _2675 : (isnan(_2675) ? 0.0 : max(_2675, 0.0));
    float _2679 = _2655 * _2655;
    float _2683 = ((_2674 * _2674) * (_2679 + (-1.0))) + 1.0;
    float _2694 = (exp2(log2(1.0 - (isnan(1.0) ? _4752 : (isnan(_4752) ? 1.0 : min(_4752, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2695 = 1.0 - _2655;
    float _2706 = (0.5 / (((_2670 * ((_2669 * _2695) + _2655)) + 9.9999999392252902907785028219223e-09) + (((_2670 * _2695) + _2655) * _2669))) * _2669;
    float _4763 = isnan(0.0) ? _2706 : (isnan(_2706) ? 0.0 : max(_2706, 0.0));
    float _2708 = (isnan(1.0) ? _4763 : (isnan(_4763) ? 1.0 : min(_4763, 1.0))) * (_2679 / ((_2683 * _2683) * 3.141590118408203125));
    uint _2722 = _2394 + 9u;
    float _2733 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2434].w)) * _954) * 0.949999988079071044921875);
    float _2734 = _2733 * _2733;
    float _2735 = cbLight._m0[_2434].x + _1030;
    float _2736 = cbLight._m0[_2434].y + _1031;
    float _2737 = cbLight._m0[_2434].z + _1032;
    float _2741 = inversesqrt(dot(vec3(_2735, _2736, _2737), vec3(_2735, _2736, _2737)));
    float _2742 = _2741 * _2735;
    float _2743 = _2741 * _2736;
    float _2744 = _2741 * _2737;
    float _2745 = dot(vec3(_951, _952, _953), vec3(cbLight._m0[_2434].xyz));
    float _4774 = isnan(0.0) ? _2745 : (isnan(_2745) ? 0.0 : max(_2745, 0.0));
    float _2748 = isnan(1.0) ? _4774 : (isnan(_4774) ? 1.0 : min(_4774, 1.0));
    float _2749 = dot(vec3(_951, _952, _953), vec3(_2742, _2743, _2744));
    float _4785 = isnan(0.0) ? _2749 : (isnan(_2749) ? 0.0 : max(_2749, 0.0));
    float _2752 = isnan(1.0) ? _4785 : (isnan(_4785) ? 1.0 : min(_4785, 1.0));
    float _2753 = dot(vec3(cbLight._m0[_2434].xyz), vec3(_2742, _2743, _2744));
    float _4796 = isnan(0.0) ? _2753 : (isnan(_2753) ? 0.0 : max(_2753, 0.0));
    float _2757 = _2734 * _2734;
    float _2761 = ((_2752 * _2752) * (_2757 + (-1.0))) + 1.0;
    float _2770 = (exp2(log2(1.0 - (isnan(1.0) ? _4796 : (isnan(_4796) ? 1.0 : min(_4796, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2771 = 1.0 - _2734;
    float _2781 = (0.5 / (((_2670 * ((_2748 * _2771) + _2734)) + 9.9999999392252902907785028219223e-09) + (((_2670 * _2771) + _2734) * _2748))) * _2748;
    float _4807 = isnan(0.0) ? _2781 : (isnan(_2781) ? 0.0 : max(_2781, 0.0));
    float _2783 = (isnan(1.0) ? _4807 : (isnan(_4807) ? 1.0 : min(_4807, 1.0))) * (_2757 / ((_2761 * _2761) * 3.141590118408203125));
    float _2793 = (((_2770 * cbLight._m0[_2722].x) * _2783) * _2417) + ((((cbLight._m0[_2641].x * _2383) * _2694) * _2708) * _2430);
    float _2794 = (((_2770 * cbLight._m0[_2722].y) * _2783) * _2417) + ((((cbLight._m0[_2641].y * _2385) * _2694) * _2708) * _2430);
    float _2795 = (((_2770 * cbLight._m0[_2722].z) * _2783) * _2417) + ((((cbLight._m0[_2641].z * _2387) * _2694) * _2708) * _2430);
    float _2851;
    float _2853;
    float _2855;
    if (_2470)
    {
        _2851 = _2793;
        _2853 = _2794;
        _2855 = _2795;
    }
    else
    {
        uint _2857 = _2394 + 2u;
        uint _2861 = _2394 + 10u;
        float _2875 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2857].w)) * _954) * 0.949999988079071044921875);
        float _2876 = _2875 * _2875;
        float _2877 = cbLight._m0[_2857].x + _1030;
        float _2878 = cbLight._m0[_2857].y + _1031;
        float _2879 = cbLight._m0[_2857].z + _1032;
        float _2883 = inversesqrt(dot(vec3(_2877, _2878, _2879), vec3(_2877, _2878, _2879)));
        float _2884 = _2883 * _2877;
        float _2885 = _2883 * _2878;
        float _2886 = _2883 * _2879;
        float _2887 = dot(vec3(_951, _952, _953), vec3(cbLight._m0[_2857].xyz));
        float _4818 = isnan(0.0) ? _2887 : (isnan(_2887) ? 0.0 : max(_2887, 0.0));
        float _2890 = isnan(1.0) ? _4818 : (isnan(_4818) ? 1.0 : min(_4818, 1.0));
        float _2891 = dot(vec3(_951, _952, _953), vec3(_2884, _2885, _2886));
        float _4829 = isnan(0.0) ? _2891 : (isnan(_2891) ? 0.0 : max(_2891, 0.0));
        float _2894 = isnan(1.0) ? _4829 : (isnan(_4829) ? 1.0 : min(_4829, 1.0));
        float _2895 = dot(vec3(cbLight._m0[_2857].xyz), vec3(_2884, _2885, _2886));
        float _4840 = isnan(0.0) ? _2895 : (isnan(_2895) ? 0.0 : max(_2895, 0.0));
        float _2899 = _2876 * _2876;
        float _2903 = ((_2894 * _2894) * (_2899 + (-1.0))) + 1.0;
        float _2912 = (exp2(log2(1.0 - (isnan(1.0) ? _4840 : (isnan(_4840) ? 1.0 : min(_4840, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2913 = 1.0 - _2876;
        float _2923 = (0.5 / (((_2670 * ((_2890 * _2913) + _2876)) + 9.9999999392252902907785028219223e-09) + (((_2670 * _2913) + _2876) * _2890))) * _2890;
        float _4851 = isnan(0.0) ? _2923 : (isnan(_2923) ? 0.0 : max(_2923, 0.0));
        float _2925 = (isnan(1.0) ? _4851 : (isnan(_4851) ? 1.0 : min(_4851, 1.0))) * (_2899 / ((_2903 * _2903) * 3.141590118408203125));
        float _2926 = isnan(1.0) ? _2409 : (isnan(_2409) ? 1.0 : min(_2409, 1.0));
        _2851 = (((_2912 * cbLight._m0[_2861].x) * _2925) * _2926) + _2793;
        _2853 = (((_2912 * cbLight._m0[_2861].y) * _2925) * _2926) + _2794;
        _2855 = (((_2912 * cbLight._m0[_2861].z) * _2925) * _2926) + _2795;
    }
    float _2957;
    float _2959;
    float _2961;
    if (_2579)
    {
        _2957 = _2851;
        _2959 = _2853;
        _2961 = _2855;
    }
    else
    {
        uint _2968 = _2394 + 3u;
        uint _2972 = _2394 + 11u;
        float _2986 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2968].w)) * _954) * 0.949999988079071044921875);
        float _2987 = _2986 * _2986;
        float _2988 = cbLight._m0[_2968].x + _1030;
        float _2989 = cbLight._m0[_2968].y + _1031;
        float _2990 = cbLight._m0[_2968].z + _1032;
        float _2994 = inversesqrt(dot(vec3(_2988, _2989, _2990), vec3(_2988, _2989, _2990)));
        float _2995 = _2994 * _2988;
        float _2996 = _2994 * _2989;
        float _2997 = _2994 * _2990;
        float _2998 = dot(vec3(_951, _952, _953), vec3(cbLight._m0[_2968].xyz));
        float _4867 = isnan(0.0) ? _2998 : (isnan(_2998) ? 0.0 : max(_2998, 0.0));
        float _3001 = isnan(1.0) ? _4867 : (isnan(_4867) ? 1.0 : min(_4867, 1.0));
        float _3002 = dot(vec3(_951, _952, _953), vec3(_2995, _2996, _2997));
        float _4878 = isnan(0.0) ? _3002 : (isnan(_3002) ? 0.0 : max(_3002, 0.0));
        float _3005 = isnan(1.0) ? _4878 : (isnan(_4878) ? 1.0 : min(_4878, 1.0));
        float _3006 = dot(vec3(cbLight._m0[_2968].xyz), vec3(_2995, _2996, _2997));
        float _4889 = isnan(0.0) ? _3006 : (isnan(_3006) ? 0.0 : max(_3006, 0.0));
        float _3010 = _2987 * _2987;
        float _3014 = ((_3005 * _3005) * (_3010 + (-1.0))) + 1.0;
        float _3023 = (exp2(log2(1.0 - (isnan(1.0) ? _4889 : (isnan(_4889) ? 1.0 : min(_4889, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3024 = 1.0 - _2987;
        float _3034 = (0.5 / (((_2670 * ((_3001 * _3024) + _2987)) + 9.9999999392252902907785028219223e-09) + (((_2670 * _3024) + _2987) * _3001))) * _3001;
        float _4900 = isnan(0.0) ? _3034 : (isnan(_3034) ? 0.0 : max(_3034, 0.0));
        float _3036 = (isnan(1.0) ? _4900 : (isnan(_4900) ? 1.0 : min(_4900, 1.0))) * (_3010 / ((_3014 * _3014) * 3.141590118408203125));
        float _3037 = isnan(1.0) ? _2410 : (isnan(_2410) ? 1.0 : min(_2410, 1.0));
        _2957 = (((_3023 * cbLight._m0[_2972].x) * _3036) * _3037) + _2851;
        _2959 = (((_3023 * cbLight._m0[_2972].y) * _3036) * _3037) + _2853;
        _2961 = (((_3023 * cbLight._m0[_2972].z) * _3036) * _3037) + _2855;
    }
    float _3103;
    float _3105;
    float _3107;
    float _3109;
    float _3111;
    float _3113;
    if (_2392.y == 0u)
    {
        uvec4 _3058 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3059 = _3058.x;
        uint _3070 = uint((float(_3058.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1039) / _3059))) + floor(float(uint(cbSceneParam._m0[85u].x * _1038) / _3059)));
        float _3080 = (log2(_2170 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3081 = isnan(0.0) ? _3080 : (isnan(_3080) ? 0.0 : max(_3080, 0.0));
        uint _3084 = uint(isnan(14.0) ? _3081 : (isnan(_3081) ? 14.0 : min(_3081, 14.0)));
        uvec4 _3089 = texelFetch(g_lightClusterGridBuffer, int(((_3084 << 2u) + (_3070 << 6u)) >> 2u));
        uint _3090 = _3089.x;
        uint _3091 = _3058.z;
        float _3170;
        float _3172;
        float _3174;
        float _3176;
        float _3178;
        float _3180;
        if (((((1u << ((_3091 >> 4u) & 15u)) + 4294967295u) & _3090) == 0u) || ((_3091 & 240u) == 0u))
        {
            _3170 = 0.0;
            _3172 = 0.0;
            _3174 = 0.0;
            _3176 = 0.0;
            _3178 = 0.0;
            _3180 = 0.0;
        }
        else
        {
            float _3171;
            float _3173;
            float _3175;
            float _3177;
            float _3179;
            float _3181;
            float _3315 = 0.0;
            float _3316 = 0.0;
            float _3317 = 0.0;
            float _3318 = 0.0;
            float _3319 = 0.0;
            float _3320 = 0.0;
            uint _3321 = 0u;
            uint _3330;
            bool _3331;
            for (;;)
            {
                _3330 = texelFetch(g_lightClassification, int((((_3084 << 5u) + (_3070 << 9u)) + (_3321 << 2u)) >> 2u)).x;
                _3331 = _3330 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3331)
                {
                    frontier_phi_66_pred = _3320;
                    frontier_phi_66_pred_1 = _3319;
                    frontier_phi_66_pred_2 = _3318;
                    frontier_phi_66_pred_3 = _3317;
                    frontier_phi_66_pred_4 = _3316;
                    frontier_phi_66_pred_5 = _3315;
                }
                else
                {
                    float _3439;
                    float _3440;
                    float _3441;
                    float _3442;
                    float _3443;
                    float _3444;
                    uint _3445;
                    _3439 = _3315;
                    _3440 = _3316;
                    _3441 = _3317;
                    _3442 = _3318;
                    _3443 = _3319;
                    _3444 = _3320;
                    _3445 = _3330;
                    float _3371;
                    float _3372;
                    float _3373;
                    float _3374;
                    float _3375;
                    float _3376;
                    for (;;)
                    {
                        uint _3449 = uint(findLSB(_3445)) + (_3321 << 5u);
                        uint _3446 = (_3445 + 4294967295u) & _3445;
                        uint _3451 = _3449 * 48u;
                        vec4 _3465 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3451)).x, texelFetch(g_PointLightRenderingBuffer, int(_3451 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3451 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3451 + 3u)).x));
                        uint _3471 = (_3449 * 48u) + 4u;
                        vec4 _3484 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3471)).x, texelFetch(g_PointLightRenderingBuffer, int(_3471 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3471 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3471 + 3u)).x));
                        uint _3490 = (_3449 * 48u) + 8u;
                        vec3 _3501 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3490)).x, texelFetch(g_PointLightRenderingBuffer, int(_3490 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3490 + 2u)).x));
                        float _3505 = _3465.x - _2168;
                        float _3506 = _3465.y - _2169;
                        float _3507 = _3465.z - _2170;
                        float _3508 = dot(vec3(_3505, _3506, _3507), vec3(_3505, _3506, _3507));
                        float _3511 = inversesqrt(_3508);
                        float _3512 = _3511 * _3505;
                        float _3513 = _3511 * _3506;
                        float _3514 = _3511 * _3507;
                        float _3515 = dot(vec3(_1057, _1060, _1063), vec3(_3512, _3513, _3514));
                        float _3520 = 1.0 - (_3508 * _3465.w);
                        float _4926 = isnan(0.0) ? _3520 : (isnan(_3520) ? 0.0 : max(_3520, 0.0));
                        float _3521 = isnan(1.0) ? _4926 : (isnan(_4926) ? 1.0 : min(_4926, 1.0));
                        float _3522 = sqrt(_3508) * _3484.w;
                        float _3525 = 1.39999997615814208984375 / (_3522 + 1.39999997615814208984375);
                        float _3526 = _3525 * _3525;
                        float _3529 = ((1.0 - _3526) * _3515) + _3526;
                        float _3532 = _3522 * _3522;
                        float _3536 = ((isnan(0.0) ? _3529 : (isnan(_3529) ? 0.0 : max(_3529, 0.0))) * _3521) / ((_3532 * 0.699999988079071044921875) + 1.0);
                        float _3540 = (-0.0) - _2168;
                        float _3541 = (-0.0) - _2169;
                        float _3542 = (-0.0) - _2170;
                        float _3546 = inversesqrt(dot(vec3(_3540, _3541, _3542), vec3(_3540, _3541, _3542)));
                        float _3547 = _3546 * _3540;
                        float _3548 = _3546 * _3541;
                        float _3549 = _3546 * _3542;
                        float _3556 = exp2(log2(1.0 / ((_3532 * 3.5) + 5.0)) * 0.25);
                        float _3557 = 1.0 - _1117;
                        float _3564 = sqrt(1.0 - ((1.0 - (_3557 * _3557)) * (1.0 - (_3556 * _3556))));
                        float _3565 = _3564 * _3564;
                        float _3566 = _3565 * _3565;
                        float _3567 = _3547 + _3512;
                        float _3568 = _3548 + _3513;
                        float _3569 = _3549 + _3514;
                        float _3573 = inversesqrt(dot(vec3(_3567, _3568, _3569), vec3(_3567, _3568, _3569)));
                        float _3577 = dot(vec3(_1057, _1060, _1063), vec3(_3547, _3548, _3549));
                        float _4942 = isnan(0.0) ? _3577 : (isnan(_3577) ? 0.0 : max(_3577, 0.0));
                        float _3580 = isnan(1.0) ? _4942 : (isnan(_4942) ? 1.0 : min(_4942, 1.0));
                        float _3581 = dot(vec3(_1057, _1060, _1063), vec3(_3573 * _3567, _3573 * _3568, _3573 * _3569));
                        float _4953 = isnan(0.0) ? _3581 : (isnan(_3581) ? 0.0 : max(_3581, 0.0));
                        float _3584 = isnan(1.0) ? _4953 : (isnan(_4953) ? 1.0 : min(_4953, 1.0));
                        float _3588 = ((_3584 * _3584) * (_3566 + (-1.0))) + 1.0;
                        float _3589 = _3525 * _3565;
                        float _3590 = _3589 * _3589;
                        float _3593 = ((1.0 - _3590) * _3515) + _3590;
                        float _4964 = isnan(0.0) ? _3593 : (isnan(_3593) ? 0.0 : max(_3593, 0.0));
                        float _3594 = isnan(1.0) ? _4964 : (isnan(_4964) ? 1.0 : min(_4964, 1.0));
                        float _3595 = 1.0 - _3565;
                        float _3605 = (0.5 / (((_3594 * ((_3580 * _3595) + _3565)) + 9.9999999392252902907785028219223e-09) + (((_3594 * _3595) + _3565) * _3580))) * _3594;
                        float _4975 = isnan(0.0) ? _3605 : (isnan(_3605) ? 0.0 : max(_3605, 0.0));
                        float _3616 = (((_3566 * 3.1415927410125732421875) * (isnan(1.0) ? _4975 : (isnan(_4975) ? 1.0 : min(_4975, 1.0)))) / ((_3588 * _3588) * ((_3532 * 2.1991131305694580078125) + 3.141590118408203125))) * _3521;
                        _3374 = (_3536 * _3484.x) + _3442;
                        _3375 = (_3536 * _3484.y) + _3443;
                        _3376 = (_3536 * _3484.z) + _3444;
                        _3371 = (_3616 * _3501.x) + _3439;
                        _3372 = (_3616 * _3501.y) + _3440;
                        _3373 = (_3616 * _3501.z) + _3441;
                        if (_3446 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3439 = _3371;
                            _3440 = _3372;
                            _3441 = _3373;
                            _3442 = _3374;
                            _3443 = _3375;
                            _3444 = _3376;
                            _3445 = _3446;
                        }
                    }
                    frontier_phi_66_pred = _3376;
                    frontier_phi_66_pred_1 = _3375;
                    frontier_phi_66_pred_2 = _3374;
                    frontier_phi_66_pred_3 = _3373;
                    frontier_phi_66_pred_4 = _3372;
                    frontier_phi_66_pred_5 = _3371;
                }
                _3181 = frontier_phi_66_pred;
                _3179 = frontier_phi_66_pred_1;
                _3177 = frontier_phi_66_pred_2;
                _3175 = frontier_phi_66_pred_3;
                _3173 = frontier_phi_66_pred_4;
                _3171 = frontier_phi_66_pred_5;
                uint _3322 = _3321 + 1u;
                if (_3322 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3315 = _3171;
                    _3316 = _3173;
                    _3317 = _3175;
                    _3318 = _3177;
                    _3319 = _3179;
                    _3320 = _3181;
                    _3321 = _3322;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3170 = _3171;
            _3172 = _3173;
            _3174 = _3175;
            _3176 = _3177;
            _3178 = _3179;
            _3180 = _3181;
        }
        uvec4 _3184 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3185 = _3184.z;
        uint _3187 = (_3185 >> 8u) & 15u;
        float _3283;
        float _3285;
        float _3287;
        float _3289;
        float _3291;
        float _3293;
        if (((4294967295u << _3187) & _3090) == 0u)
        {
            _3283 = _3170;
            _3285 = _3172;
            _3287 = _3174;
            _3289 = _3176;
            _3291 = _3178;
            _3293 = _3180;
        }
        else
        {
            float _3308 = inversesqrt(dot(vec3(_2168, _2169, _2170), vec3(_2168, _2169, _2170)));
            float _3309 = _3308 * _2168;
            float _3310 = _3308 * _2169;
            float _3311 = _3308 * _2170;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3187 < ((_3185 >> 12u) & 15u))
            {
                float _3284;
                float _3286;
                float _3288;
                float _3290;
                float _3292;
                float _3294;
                float _3422 = _3170;
                float _3423 = _3172;
                float _3424 = _3174;
                float _3425 = _3176;
                float _3426 = _3178;
                float _3427 = _3180;
                uint _3428 = _3187;
                uint _3437;
                bool _3438;
                for (;;)
                {
                    _3437 = texelFetch(g_lightClassification, int((((_3084 << 5u) + (_3070 << 9u)) + (_3428 << 2u)) >> 2u)).x;
                    _3438 = _3437 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3438)
                    {
                        frontier_phi_72_pred = _3427;
                        frontier_phi_72_pred_1 = _3426;
                        frontier_phi_72_pred_2 = _3425;
                        frontier_phi_72_pred_3 = _3424;
                        frontier_phi_72_pred_4 = _3423;
                        frontier_phi_72_pred_5 = _3422;
                    }
                    else
                    {
                        float _3621;
                        float _3622;
                        float _3623;
                        float _3624;
                        float _3625;
                        float _3626;
                        float _3914;
                        float _3915;
                        float _3916;
                        float _3917;
                        float _3918;
                        float _3919;
                        float _3634 = _3422;
                        float _3635 = _3423;
                        float _3636 = _3424;
                        float _3637 = _3425;
                        float _3638 = _3426;
                        float _3639 = _3427;
                        uint _3640 = _3437;
                        uint _3641;
                        vec4 _3666;
                        float _3667;
                        vec4 _3682;
                        vec3 _3694;
                        vec4 _3709;
                        vec4 _3724;
                        float _3770;
                        bool _3771;
                        for (;;)
                        {
                            uint _3651 = ((_3428 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3640));
                            _3641 = (_3640 + 4294967295u) & _3640;
                            uint _3653 = _3651 * 40u;
                            _3666 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3653)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3653 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3653 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3653 + 3u)).x));
                            _3667 = _3666.w;
                            uint _3669 = (_3651 * 40u) + 4u;
                            _3682 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3669)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3669 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3669 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3669 + 3u)).x));
                            uint _3684 = (_3651 * 40u) + 8u;
                            _3694 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3684)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3684 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3684 + 2u)).x));
                            uint _3696 = (_3651 * 40u) + 16u;
                            _3709 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3696)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3696 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3696 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3696 + 3u)).x));
                            uint _3711 = (_3651 * 40u) + 20u;
                            _3724 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3711)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3711 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3711 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3711 + 3u)).x));
                            uint _3726 = (_3651 * 40u) + 24u;
                            vec4 _3739 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3726)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3726 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3726 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3726 + 3u)).x));
                            uint _3745 = (_3651 * 40u) + 28u;
                            vec4 _3758 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3745)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3745 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3745 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3745 + 3u)).x));
                            _3770 = fma(_2170, _3758.z, fma(_2169, _3758.y, _3758.x * _2168)) + _3758.w;
                            _3771 = !((fma(_2170, _3739.z, fma(_2169, _3739.y, _3739.x * _2168)) + _3739.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3771)
                            {
                                float _3798 = _3666.x - _2168;
                                float _3799 = _3666.y - _2169;
                                float _3800 = _3666.z - _2170;
                                float _3801 = dot(vec3(_3798, _3799, _3800), vec3(_3798, _3799, _3800));
                                float _3804 = inversesqrt(_3801);
                                float _3805 = _3804 * _3798;
                                float _3806 = _3804 * _3799;
                                float _3807 = _3804 * _3800;
                                float _3811 = 1.0 - (_3801 / (_3667 * _3667));
                                float _4986 = isnan(0.0) ? _3811 : (isnan(_3811) ? 0.0 : max(_3811, 0.0));
                                float _3812 = isnan(1.0) ? _4986 : (isnan(_4986) ? 1.0 : min(_4986, 1.0));
                                float _3816 = sqrt(_3801) * _3682.w;
                                float _3818 = 1.39999997615814208984375 / (_3816 + 1.39999997615814208984375);
                                float _3819 = _3818 * _3818;
                                float _3822 = ((1.0 - _3819) * dot(vec3(_3805, _3806, _3807), vec3(_1057, _1060, _1063))) + _3819;
                                float _3825 = _3816 * _3816;
                                float _3829 = (fma(_2170, _3709.z, fma(_2169, _3709.y, _3709.x * _2168)) + _3709.w) / _3770;
                                float _3830 = (fma(_2170, _3724.z, fma(_2169, _3724.y, _3724.x * _2168)) + _3724.w) / _3770;
                                float _3834 = 1.0 - dot(vec2(_3829, _3830), vec2(_3829, _3830));
                                float _5002 = isnan(0.0) ? _3834 : (isnan(_3834) ? 0.0 : max(_3834, 0.0));
                                float _3835 = isnan(1.0) ? _5002 : (isnan(_5002) ? 1.0 : min(_5002, 1.0));
                                float _3836 = _3835 * (((isnan(0.0) ? _3822 : (isnan(_3822) ? 0.0 : max(_3822, 0.0))) * _3812) / ((_3825 * 0.699999988079071044921875) + 1.0));
                                float _3848 = exp2(log2(1.0 / ((_3825 * 3.5) + 5.0)) * 0.25);
                                float _3849 = 1.0 - _1117;
                                float _3856 = sqrt(1.0 - ((1.0 - (_3849 * _3849)) * (1.0 - (_3848 * _3848))));
                                float _3857 = _3856 * _3856;
                                float _3858 = _3857 * _3857;
                                float _3859 = _3805 - _3309;
                                float _3860 = _3806 - _3310;
                                float _3861 = _3807 - _3311;
                                float _3865 = inversesqrt(dot(vec3(_3859, _3860, _3861), vec3(_3859, _3860, _3861)));
                                float _3869 = dot(vec3(_1057, _1060, _1063), vec3((-0.0) - _3309, (-0.0) - _3310, (-0.0) - _3311));
                                float _5013 = isnan(0.0) ? _3869 : (isnan(_3869) ? 0.0 : max(_3869, 0.0));
                                float _3872 = isnan(1.0) ? _5013 : (isnan(_5013) ? 1.0 : min(_5013, 1.0));
                                float _3873 = dot(vec3(_1057, _1060, _1063), vec3(_3865 * _3859, _3865 * _3860, _3865 * _3861));
                                float _5024 = isnan(0.0) ? _3873 : (isnan(_3873) ? 0.0 : max(_3873, 0.0));
                                float _3876 = isnan(1.0) ? _5024 : (isnan(_5024) ? 1.0 : min(_5024, 1.0));
                                float _3880 = ((_3876 * _3876) * (_3858 + (-1.0))) + 1.0;
                                float _3881 = _3818 * _3857;
                                float _3882 = _3881 * _3881;
                                float _3888 = ((1.0 - _3882) * dot(vec3(_1057, _1060, _1063), vec3(_3805, _3806, _3807))) + _3882;
                                float _5035 = isnan(0.0) ? _3888 : (isnan(_3888) ? 0.0 : max(_3888, 0.0));
                                float _3889 = isnan(1.0) ? _5035 : (isnan(_5035) ? 1.0 : min(_5035, 1.0));
                                float _3890 = 1.0 - _3857;
                                float _3900 = (0.5 / (((_3889 * ((_3872 * _3890) + _3857)) + 9.9999999392252902907785028219223e-09) + (((_3889 * _3890) + _3857) * _3872))) * _3889;
                                float _5046 = isnan(0.0) ? _3900 : (isnan(_3900) ? 0.0 : max(_3900, 0.0));
                                float _3910 = (_3835 * _3812) * (((_3858 * 3.1415927410125732421875) * (isnan(1.0) ? _5046 : (isnan(_5046) ? 1.0 : min(_5046, 1.0)))) / ((_3880 * _3880) * ((_3825 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3836 * _3682.y;
                                frontier_phi_78_pred_1 = _3836 * _3682.x;
                                frontier_phi_78_pred_2 = _3910 * _3694.z;
                                frontier_phi_78_pred_3 = _3910 * _3694.y;
                                frontier_phi_78_pred_4 = _3910 * _3694.x;
                                frontier_phi_78_pred_5 = _3836 * _3682.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3918 = frontier_phi_78_pred;
                            _3917 = frontier_phi_78_pred_1;
                            _3916 = frontier_phi_78_pred_2;
                            _3915 = frontier_phi_78_pred_3;
                            _3914 = frontier_phi_78_pred_4;
                            _3919 = frontier_phi_78_pred_5;
                            _3624 = _3917 + _3637;
                            _3625 = _3918 + _3638;
                            _3626 = _3919 + _3639;
                            _3621 = _3914 + _3634;
                            _3622 = _3915 + _3635;
                            _3623 = _3916 + _3636;
                            if (_3641 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3634 = _3621;
                                _3635 = _3622;
                                _3636 = _3623;
                                _3637 = _3624;
                                _3638 = _3625;
                                _3639 = _3626;
                                _3640 = _3641;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3626;
                        frontier_phi_72_pred_1 = _3625;
                        frontier_phi_72_pred_2 = _3624;
                        frontier_phi_72_pred_3 = _3623;
                        frontier_phi_72_pred_4 = _3622;
                        frontier_phi_72_pred_5 = _3621;
                    }
                    _3294 = frontier_phi_72_pred;
                    _3292 = frontier_phi_72_pred_1;
                    _3290 = frontier_phi_72_pred_2;
                    _3288 = frontier_phi_72_pred_3;
                    _3286 = frontier_phi_72_pred_4;
                    _3284 = frontier_phi_72_pred_5;
                    uint _3429 = _3428 + 1u;
                    if (_3429 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3422 = _3284;
                        _3423 = _3286;
                        _3424 = _3288;
                        _3425 = _3290;
                        _3426 = _3292;
                        _3427 = _3294;
                        _3428 = _3429;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3294;
                frontier_phi_60_61_ladder_1 = _3292;
                frontier_phi_60_61_ladder_2 = _3288;
                frontier_phi_60_61_ladder_3 = _3286;
                frontier_phi_60_61_ladder_4 = _3284;
                frontier_phi_60_61_ladder_5 = _3290;
            }
            else
            {
                frontier_phi_60_61_ladder = _3180;
                frontier_phi_60_61_ladder_1 = _3178;
                frontier_phi_60_61_ladder_2 = _3174;
                frontier_phi_60_61_ladder_3 = _3172;
                frontier_phi_60_61_ladder_4 = _3170;
                frontier_phi_60_61_ladder_5 = _3176;
            }
            _3283 = frontier_phi_60_61_ladder_4;
            _3285 = frontier_phi_60_61_ladder_3;
            _3287 = frontier_phi_60_61_ladder_2;
            _3289 = frontier_phi_60_61_ladder_5;
            _3291 = frontier_phi_60_61_ladder_1;
            _3293 = frontier_phi_60_61_ladder;
        }
        float _3298 = isnan(1.0) ? _1101 : (isnan(_1101) ? 1.0 : min(_1101, 1.0));
        _3103 = (_3298 * _3289) + _2634;
        _3105 = (_3298 * _3291) + _2636;
        _3107 = (_3298 * _3293) + _2638;
        _3109 = ((_3283 * 0.039999999105930328369140625) * _3298) + _2957;
        _3111 = ((_3285 * 0.039999999105930328369140625) * _3298) + _2959;
        _3113 = ((_3287 * 0.039999999105930328369140625) * _3298) + _2961;
    }
    else
    {
        _3103 = _2634;
        _3105 = _2636;
        _3107 = _2638;
        _3109 = _2957;
        _3111 = _2959;
        _3113 = _2961;
    }
    float _5062 = isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0));
    float _5073 = isnan(0.0) ? _1087 : (isnan(_1087) ? 0.0 : max(_1087, 0.0));
    float _5084 = isnan(0.0) ? _1088 : (isnan(_1088) ? 0.0 : max(_1088, 0.0));
    uint _3133 = _282 + 6u;
    float _3141 = _1038 / cbSceneParam._m0[86u].x;
    float _3142 = _1039 / cbSceneParam._m0[86u].y;
    vec4 _3156 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3141, _3142, (log2((isnan(cbSceneParam._m0[77u].w) ? _972 : (isnan(_972) ? cbSceneParam._m0[77u].w : min(_972, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3158 = _3156.x;
    float _3159 = _3156.y;
    float _3160 = _3156.z;
    float _3161 = _3156.w;
    float _3233;
    float _3235;
    float _3237;
    float _3239;
    if (_972 > cbSceneParam._m0[78u].w)
    {
        float _3195 = isnan(_972) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _972 : min(cbSceneParam._m0[80u].w, _972));
        float _3196 = _3195 / _972;
        float _3207 = _3196 * _1023;
        float _3208 = _1024 * _3196;
        float _3209 = (-0.0) - _3208;
        float _3211 = _3196 * _1025;
        float _3213 = (cbSceneParam._m0[77u].w * _3209) / _3195;
        float _3214 = _3213 + cbSceneParam._m0[79u].w;
        float _3215 = cbSceneParam._m0[79u].w - _3208;
        float _3221 = sqrt(((_3207 * _3207) + (_3208 * _3208)) + (_3211 * _3211));
        float _3224 = (1.0 - (cbSceneParam._m0[77u].w / _3195)) * _3221;
        float _3229 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3231 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3384;
        if (abs((_3209 - _3213) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3384 = ((((_3214 > 0.0) ? exp2(_3229 * _3214) : (2.0 - exp2(_3231 * _3214))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3224;
        }
        else
        {
            float _3344 = 1.0 / cbSceneParam._m0[80u].x;
            float _3345 = isnan(_3215) ? _3214 : (isnan(_3214) ? _3215 : max(_3214, _3215));
            float _3346 = isnan(_3215) ? _3214 : (isnan(_3214) ? _3215 : min(_3214, _3215));
            float _3355 = isnan(0.0) ? _3345 : (isnan(_3345) ? 0.0 : min(_3345, 0.0));
            float _3356 = isnan(0.0) ? _3346 : (isnan(_3346) ? 0.0 : min(_3346, 0.0));
            _3384 = ((abs(_3221 / _3209) * cbSceneParam._m0[80u].y) * ((((_3355 - _3356) * 2.0) - ((exp2(_3229 * (isnan(0.0) ? _3345 : (isnan(_3345) ? 0.0 : max(_3345, 0.0)))) - exp2(_3229 * (isnan(0.0) ? _3346 : (isnan(_3346) ? 0.0 : max(_3346, 0.0))))) * _3344)) - ((exp2(_3231 * _3355) - exp2(_3231 * _3356)) * _3344))) + (_3224 * cbSceneParam._m0[80u].z);
        }
        vec4 _3386 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3141, _3142, 1.0), 0.0);
        float _3395 = exp2((_3384 * (-1.44269502162933349609375)) * (1.0 - _3386.w));
        float _3396 = log2(_3395);
        float _3412 = log2(_3161);
        _3233 = (exp2(_3412 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3396 * cbSceneParam._m0[78u].x)) * _3386.x) / cbSceneParam._m0[78u].x)) + _3158;
        _3235 = (exp2(_3412 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3396 * cbSceneParam._m0[78u].y)) * _3386.y) / cbSceneParam._m0[78u].y)) + _3159;
        _3237 = (exp2(_3412 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3396 * cbSceneParam._m0[78u].z)) * _3386.z) / cbSceneParam._m0[78u].z)) + _3160;
        _3239 = _3395 * _3161;
    }
    else
    {
        _3233 = _3158;
        _3235 = _3159;
        _3237 = _3160;
        _3239 = _3161;
    }
    float _3251 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3252 = _3251 == 3.0;
    float _3253 = log2(_3239);
    float _3260 = exp2(_3253 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5062 : (isnan(_5062) ? 1.0 : min(_5062, 1.0))) * (_3103 + ((isnan(0.0) ? _1825 : (isnan(_1825) ? 0.0 : max(_1825, 0.0))) * _1101))) + ((_3109 + ((isnan(0.0) ? _2115 : (isnan(_2115) ? 0.0 : max(_2115, 0.0))) * _1904)) * cbPerFrame._m0[3u].x));
    float _3261 = exp2(_3253 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5073 : (isnan(_5073) ? 1.0 : min(_5073, 1.0))) * (_3105 + ((isnan(0.0) ? _1828 : (isnan(_1828) ? 0.0 : max(_1828, 0.0))) * _1101))) + ((_3111 + ((isnan(0.0) ? _2118 : (isnan(_2118) ? 0.0 : max(_2118, 0.0))) * _1904)) * cbPerFrame._m0[3u].x));
    float _3262 = exp2(_3253 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5084 : (isnan(_5084) ? 1.0 : min(_5084, 1.0))) * (_3107 + ((isnan(0.0) ? _1831 : (isnan(_1831) ? 0.0 : max(_1831, 0.0))) * _1101))) + ((_3113 + ((isnan(0.0) ? _2121 : (isnan(_2121) ? 0.0 : max(_2121, 0.0))) * _1904)) * cbPerFrame._m0[3u].x));
    float _3271 = (_3251 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3271 * (_3252 ? _3260 : (_3260 + (cbSceneParam._m0[72u].w * _3233)));
    SV_Target.y = _3271 * (_3252 ? _3261 : (_3261 + (cbSceneParam._m0[72u].w * _3235)));
    SV_Target.z = _3271 * (_3252 ? _3262 : (_3262 + (cbSceneParam._m0[72u].w * _3237)));
    SV_Target.w = cbInstanceData._m0[_3133].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3133].w;
}


