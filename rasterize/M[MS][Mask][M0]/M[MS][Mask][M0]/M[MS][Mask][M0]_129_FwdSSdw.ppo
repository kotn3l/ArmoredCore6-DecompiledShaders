#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1609;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _242 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _243 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _244 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _250 = inversesqrt(dot(vec3(_242, _243, _244), vec3(_242, _243, _244)));
    float _251 = _250 * _242;
    float _252 = _250 * _243;
    float _253 = _250 * _244;
    float _257 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _258 = _257 * NORMAL.x;
    float _259 = _257 * NORMAL.y;
    float _260 = _257 * NORMAL.z;
    float _264 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _265 = _264 * TANGENT.x;
    float _266 = _264 * TANGENT.y;
    float _267 = _264 * TANGENT.z;
    float _276 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _278 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _279 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3935 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
    float _3946 = isnan(0.0) ? _278 : (isnan(_278) ? 0.0 : max(_278, 0.0));
    float _3957 = isnan(0.0) ? _279 : (isnan(_279) ? 0.0 : max(_279, 0.0));
    uint _289 = uint(roundEven(NORMAL.w)) * 13u;
    uint _294 = _289 + 1u;
    uint _298 = _289 + 2u;
    float _307 = sqrt(((cbInstanceData._m0[_294].x * cbInstanceData._m0[_294].x) + (cbInstanceData._m0[_289].x * cbInstanceData._m0[_289].x)) + (cbInstanceData._m0[_298].x * cbInstanceData._m0[_298].x));
    float _308 = _307 * TEXCOORD.z;
    float _309 = _307 * TEXCOORD.w;
    vec4 _322 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _308) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _309) + cbTextureTilingScale._m0[13u].w));
    vec4 _345 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _371 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _376 = _371.x * cbMtdParam._m0[11u].x;
    float _377 = _371.y * cbMtdParam._m0[11u].y;
    float _378 = _371.z * cbMtdParam._m0[11u].z;
    vec4 _397 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _308) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _309) + cbTextureTilingScale._m0[5u].w));
    vec4 _416 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _454 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _456 = _454.x;
    float _468 = dot(vec4(_456, _454.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _485 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _416.x) * 2.0) - ((((_456 - _468) * cbMtdParam._m0[24u].z) + _468) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3968 = isnan(0.0) ? _485 : (isnan(_485) ? 0.0 : max(_485, 0.0));
    float _486 = isnan(1.0) ? _3968 : (isnan(_3968) ? 1.0 : min(_3968, 1.0));
    float _493 = (_486 * ((_397.x * cbMtdParam._m0[12u].x) - _376)) + _376;
    float _494 = (_486 * ((_397.y * cbMtdParam._m0[12u].y) - _377)) + _377;
    float _495 = (_486 * ((_397.z * cbMtdParam._m0[12u].z) - _378)) + _378;
    vec4 _512 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _308) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _309) + cbTextureTilingScale._m0[3u].w));
    vec4 _532 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _534 = _532.x;
    float _544 = dot(vec4(_534, _532.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _558 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _416.y) * 2.0) - ((((_534 - _544) * cbMtdParam._m0[24u].z) + _544) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3979 = isnan(0.0) ? _558 : (isnan(_558) ? 0.0 : max(_558, 0.0));
    float _559 = isnan(1.0) ? _3979 : (isnan(_3979) ? 1.0 : min(_3979, 1.0));
    float _566 = (_559 * ((_512.x * cbMtdParam._m0[13u].x) - _493)) + _493;
    float _567 = (_559 * ((_512.y * cbMtdParam._m0[13u].y) - _494)) + _494;
    float _568 = (_559 * ((_512.z * cbMtdParam._m0[13u].z) - _495)) + _495;
    vec4 _586 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _308) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _309) + cbTextureTilingScale._m0[24u].w));
    vec4 _603 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _605 = _603.x;
    float _615 = dot(vec4(_605, _603.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _627 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _416.z) * 2.0) - ((((_605 - _615) * cbMtdParam._m0[24u].z) + _615) * cbMtdParam._m0[20u].z))) + 1.0;
    float _3990 = isnan(0.0) ? _627 : (isnan(_627) ? 0.0 : max(_627, 0.0));
    float _628 = isnan(1.0) ? _3990 : (isnan(_3990) ? 1.0 : min(_3990, 1.0));
    float _638 = (_345.x * cbMtdParam._m0[9u].x) * ((_628 * ((_586.x * cbMtdParam._m0[14u].x) - _566)) + _566);
    float _639 = (_345.y * cbMtdParam._m0[9u].y) * ((_628 * ((_586.y * cbMtdParam._m0[14u].y) - _567)) + _567);
    float _640 = (_345.z * cbMtdParam._m0[9u].z) * ((_628 * ((_586.z * cbMtdParam._m0[14u].z) - _568)) + _568);
    float _644 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _322.x) * _638;
    float _647 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _322.y) * _639;
    float _650 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _322.z) * _640;
    float _658 = (((_638 - _644) * (isnan(1.0) ? _3935 : (isnan(_3935) ? 1.0 : min(_3935, 1.0)))) + _644) * 4.55000019073486328125;
    float _660 = (((_639 - _647) * (isnan(1.0) ? _3946 : (isnan(_3946) ? 1.0 : min(_3946, 1.0)))) + _647) * 4.55000019073486328125;
    float _662 = (((_640 - _650) * (isnan(1.0) ? _3957 : (isnan(_3957) ? 1.0 : min(_3957, 1.0)))) + _650) * 4.55000019073486328125;
    vec4 _679 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _308) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _309) + cbTextureTilingScale._m0[20u].w));
    vec4 _704 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _308) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _309) + cbTextureTilingScale._m0[4u].w));
    vec4 _721 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _723 = _721.x;
    float _724 = _721.y;
    float _725 = _721.z;
    float _732 = ((_704.x - _723) * _486) + _723;
    float _733 = ((_704.y - _724) * _486) + _724;
    float _734 = ((_704.z - _725) * _486) + _725;
    vec4 _746 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _308) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _309) + cbTextureTilingScale._m0[2u].w));
    float _757 = ((_746.x - _732) * _559) + _732;
    float _758 = ((_746.y - _733) * _559) + _733;
    float _759 = ((_746.z - _734) * _559) + _734;
    vec4 _771 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _308) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _309) + cbTextureTilingScale._m0[23u].w));
    float _784 = ((_771.z - _759) * _628) + _759;
    float _787 = ((((_771.x - _757) * _628) + _757) * 2.0) + (-1.0);
    float _788 = ((((_771.y - _758) * _628) + _758) * 2.0) + (-1.0);
    float _789 = dot(vec2(_787, _788), vec2(_787, _788));
    float _4001 = isnan(0.0) ? _789 : (isnan(_789) ? 0.0 : max(_789, 0.0));
    float _794 = sqrt(1.0 - (isnan(1.0) ? _4001 : (isnan(_4001) ? 1.0 : min(_4001, 1.0))));
    vec4 _812 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _824 = (_787 + ((((_679.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x)) + (((_812.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _825 = (_788 + ((((_679.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x)) + (((_812.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _828 = fma(_794, _258, fma(_825, _265, _824 * _251));
    float _831 = fma(_794, _259, fma(_825, _266, _824 * _252));
    float _834 = fma(_794, _260, fma(_825, _267, _824 * _253));
    float _838 = inversesqrt(dot(vec3(_828, _831, _834), vec3(_828, _831, _834)));
    vec4 _865 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _308) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _309) + cbTextureTilingScale._m0[11u].w));
    float _867 = _865.x;
    float _868 = 1.0 - _867;
    float _874 = (cbMtdParam._m0[19u].x + dot(vec4(_838 * _828, _838 * _831, _838 * _834, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_867 - _868) * cbMtdParam._m0[24u].w) + _868) * cbMtdParam._m0[21u].z);
    float _4012 = isnan(0.0) ? _874 : (isnan(_874) ? 0.0 : max(_874, 0.0));
    float _875 = isnan(1.0) ? _4012 : (isnan(_4012) ? 1.0 : min(_4012, 1.0));
    float _877 = (-0.0) - cbMtdParam._m0[24u].x;
    float _879 = isnan(0.0) ? _877 : (isnan(_877) ? 0.0 : max(_877, 0.0));
    float _880 = isnan(1.0) ? _879 : (isnan(_879) ? 1.0 : min(_879, 1.0));
    float _887 = _875 - ((_875 * TEXCOORD_8.x) * _880);
    float _888 = _875 - ((_875 * TEXCOORD_8.y) * _880);
    float _889 = _875 - ((_875 * TEXCOORD_8.z) * _880);
    float _896 = (_887 * (cbMtdParam._m0[17u].x - _658)) + _658;
    float _897 = (_888 * (cbMtdParam._m0[17u].y - _660)) + _660;
    float _898 = (_889 * (cbMtdParam._m0[17u].z - _662)) + _662;
    float _913 = sqrt(((cbInstanceData._m0[_294].x * cbInstanceData._m0[_294].x) + (cbInstanceData._m0[_289].x * cbInstanceData._m0[_289].x)) + (cbInstanceData._m0[_298].x * cbInstanceData._m0[_298].x));
    float _914 = _913 * TEXCOORD.z;
    float _915 = _913 * TEXCOORD.w;
    vec4 _927 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _914) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _915) + cbTextureTilingScale._m0[19u].w));
    float _929 = _927.x;
    float _930 = 1.0 - _929;
    float _958 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_929 - _930) * cbMtdParam._m0[24u].y) + _930) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4033 = isnan(0.0) ? _958 : (isnan(_958) ? 0.0 : max(_958, 0.0));
    float _959 = isnan(1.0) ? _4033 : (isnan(_4033) ? 1.0 : min(_4033, 1.0));
    float _967 = ((((cbMtdParam._m0[10u].x - _896) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _959) + _896;
    float _968 = ((((cbMtdParam._m0[10u].y - _897) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _959) + _897;
    float _969 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _898)) * _959) + _898;
    float _974 = (((_679.z - _784) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _784;
    float _978 = ((_812.z - _974) * cbMtdParam._m0[19u].w) + _974;
    vec4 _992 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _308) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _309) + cbTextureTilingScale._m0[15u].w));
    float _999 = (_992.x * 2.0) + (-1.0);
    float _1000 = (_992.y * 2.0) + (-1.0);
    float _1001 = dot(vec2(_999, _1000), vec2(_999, _1000));
    float _4044 = isnan(0.0) ? _1001 : (isnan(_1001) ? 0.0 : max(_1001, 0.0));
    float _1009 = ((_992.z - _978) * _887) + _978;
    float _1012 = ((cbMtdParam._m0[23u].y - _1009) * _959) + _1009;
    vec4 _1033 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _914) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _915) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _1039 = (_1033.x * 2.0) + (-1.0);
    float _1040 = (_1033.y * 2.0) + (-1.0);
    float _1041 = dot(vec2(_1039, _1040), vec2(_1039, _1040));
    float _4055 = isnan(0.0) ? _1041 : (isnan(_1041) ? 0.0 : max(_1041, 0.0));
    float _1056 = ((sqrt(1.0 - (isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0)))) - _794) * _889) + _794;
    float _1059 = (((_999 - _824) * _887) + _824) + (cbMtdParam._m0[21u].x * _824);
    float _1060 = (((_1000 - _825) * _888) + _825) + (cbMtdParam._m0[21u].x * _825);
    float _1071 = (((_1039 - _1059) + (_1059 * cbMtdParam._m0[22u].z)) * _959) + _1059;
    float _1072 = (((_1040 - _1060) + (_1060 * cbMtdParam._m0[22u].z)) * _959) + _1060;
    float _1073 = (_959 * (sqrt(1.0 - (isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0)))) - _1056)) + _1056;
    float _1075 = cbMtdParam._m0[22u].x + _812.w;
    float _1078 = fma(_1073, _258, fma(_1072, _265, _1071 * _251));
    float _1081 = fma(_1073, _259, fma(_1072, _266, _1071 * _252));
    float _1084 = fma(_1073, _260, fma(_1072, _267, _1071 * _253));
    float _1088 = inversesqrt(dot(vec3(_1078, _1081, _1084), vec3(_1078, _1081, _1084)));
    float _1089 = _1088 * _1078;
    float _1090 = _1088 * _1081;
    float _1091 = _1088 * _1084;
    float _4066 = isnan(0.0) ? _1012 : (isnan(_1012) ? 0.0 : max(_1012, 0.0));
    float _1092 = isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0));
    float _4077 = isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : max(_1075, 0.0));
    float _4088 = isnan(0.0) ? _967 : (isnan(_967) ? 0.0 : max(_967, 0.0));
    float _4099 = isnan(0.0) ? _968 : (isnan(_968) ? 0.0 : max(_968, 0.0));
    float _4110 = isnan(0.0) ? _969 : (isnan(_969) ? 0.0 : max(_969, 0.0));
    float _1110 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1150 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1160 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1150);
    float _1161 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1150);
    float _1162 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1150);
    float _1166 = inversesqrt(dot(vec3(_1160, _1161, _1162), vec3(_1160, _1161, _1162)));
    float _1167 = _1160 * _1166;
    float _1168 = _1161 * _1166;
    float _1169 = _1162 * _1166;
    float _1175 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1176 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1194 = fma(_1091, cbSceneParam._m0[5u].z, fma(_1090, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1089));
    float _1197 = fma(_1091, cbSceneParam._m0[6u].z, fma(_1090, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1089));
    float _1200 = fma(_1091, cbSceneParam._m0[7u].z, fma(_1090, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1089));
    uint _1214 = (_289 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1220 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4088 : (isnan(_4088) ? 1.0 : min(_4088, 1.0)))) * cbInstanceData._m0[_1214].x;
    float _1221 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4099 : (isnan(_4099) ? 1.0 : min(_4099, 1.0)))) * cbInstanceData._m0[_1214].y;
    float _1222 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4110 : (isnan(_4110) ? 1.0 : min(_4110, 1.0)))) * cbInstanceData._m0[_1214].z;
    float _4121 = isnan(0.0) ? _1220 : (isnan(_1220) ? 0.0 : max(_1220, 0.0));
    float _1223 = isnan(1.0) ? _4121 : (isnan(_4121) ? 1.0 : min(_4121, 1.0));
    float _4132 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
    float _1224 = isnan(1.0) ? _4132 : (isnan(_4132) ? 1.0 : min(_4132, 1.0));
    float _4143 = isnan(0.0) ? _1222 : (isnan(_1222) ? 0.0 : max(_1222, 0.0));
    float _1225 = isnan(1.0) ? _4143 : (isnan(_4143) ? 1.0 : min(_4143, 1.0));
    vec4 _1234 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1175, cbSceneParam._m0[86u].y * _1176));
    float _1238 = ((isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0))) * TEXCOORD_5.w) * _1234.x;
    float _1239 = dot(vec3(_1089, _1090, _1091), vec3(_1167, _1168, _1169));
    float _1242 = _1239 * 2.0;
    float _1246 = (_1242 * _1089) - _1167;
    float _1247 = (_1242 * _1090) - _1168;
    float _1248 = (_1242 * _1091) - _1169;
    float _1252 = abs(dot(vec3(_1167, _1168, _1169), vec3(_1089, _1090, _1091)));
    float _4154 = isnan(0.0) ? _1252 : (isnan(_1252) ? 0.0 : max(_1252, 0.0));
    float _1254 = sqrt(_1092);
    float _1267 = exp2((_1254 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4154 : (isnan(_4154) ? 1.0 : min(_4154, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1254 * 3.0));
    float _1299 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1303 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1307 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1608;
    float _1610;
    float _1611;
    float _1612;
    float _1613;
    float _1614;
    float _1615;
    float _1616;
    float _1617;
    float _1618;
    float _1619;
    float _1620;
    float _1621;
    float _1622;
    float _1623;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1333 = fma(_1307, cbModelParam._m0[26u].z, fma(_1303, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1299));
        float _1337 = fma(_1307, cbModelParam._m0[27u].z, fma(_1303, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1299));
        float _1341 = fma(_1307, cbModelParam._m0[28u].z, fma(_1303, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1299));
        float _1366 = _1299 + _1089;
        float _1367 = _1303 + _1090;
        float _1368 = _1307 + _1091;
        float _1378 = fma(_1368, cbModelParam._m0[26u].z, fma(_1367, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1366)) - _1333;
        float _1379 = fma(_1368, cbModelParam._m0[27u].z, fma(_1367, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1366)) - _1337;
        float _1380 = fma(_1368, cbModelParam._m0[28u].z, fma(_1367, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1366)) - _1341;
        float _1384 = inversesqrt(dot(vec3(_1378, _1379, _1380), vec3(_1378, _1379, _1380)));
        float _1397 = ((_1384 * _1378) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1333 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1398 = ((_1384 * _1379) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1337 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1399 = ((_1384 * _1380) / cbModelParam._m0[34u].z) + ((((((_1341 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1402 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1397, _1398, _1399), 0.0);
        vec4 _1409 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1397, _1398, _1399), 0.0);
        vec4 _1416 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1397, _1398, _1399), 0.0);
        vec4 _1423 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1397, _1398, _1399), 0.0);
        float _1436 = exp2((_1402.w + (-0.5)) * 20.0) * 2.0;
        float _1437 = _1436 * (_1402.x + (-0.5));
        float _1438 = _1436 * (_1402.y + (-0.5));
        float _1439 = _1436 * (_1402.z + (-0.5));
        float _1446 = exp2((_1409.w + (-0.5)) * 20.0) * 2.0;
        float _1447 = _1446 * (_1409.x + (-0.5));
        float _1448 = _1446 * (_1409.y + (-0.5));
        float _1449 = _1446 * (_1409.z + (-0.5));
        float _1456 = exp2((_1416.w + (-0.5)) * 20.0) * 2.0;
        float _1457 = _1456 * (_1416.x + (-0.5));
        float _1458 = _1456 * (_1416.y + (-0.5));
        float _1459 = _1456 * (_1416.z + (-0.5));
        float _1466 = exp2((_1423.w + (-0.5)) * 20.0) * 2.0;
        float _1467 = _1466 * (_1423.x + (-0.5));
        float _1468 = _1466 * (_1423.y + (-0.5));
        float _1469 = _1466 * (_1423.z + (-0.5));
        float _1470 = isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0));
        float _1471 = isnan(0.0) ? _1468 : (isnan(_1468) ? 0.0 : max(_1468, 0.0));
        float _1472 = isnan(0.0) ? _1469 : (isnan(_1469) ? 0.0 : max(_1469, 0.0));
        float _1473 = _1437 * 0.5;
        float _1474 = _1447 * 0.5;
        float _1475 = _1457 * 0.5;
        float _1476 = dot(vec3(_1473, _1474, _1475), vec3(_1473, _1474, _1475));
        float _1481 = (_1476 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1476);
        float _1490 = (dot(vec3(_1089, _1090, _1091), vec3(_1481 * _1473, _1481 * _1474, _1481 * _1475)) + 1.0) * 0.5;
        float _4180 = isnan(0.0) ? _1490 : (isnan(_1490) ? 0.0 : max(_1490, 0.0));
        float _1500 = sqrt(((_1474 * _1474) + (_1473 * _1473)) + (_1475 * _1475)) / (_1470 + 9.9999997473787516355514526367188e-06);
        float _4191 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
        float _1501 = isnan(1.0) ? _4191 : (isnan(_4191) ? 1.0 : min(_4191, 1.0));
        float _1502 = _1501 * 2.0;
        float _1506 = (1.0 - _1501) / (_1501 + 1.0);
        float _4202 = isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0));
        float _1507 = isnan(1.0) ? _4202 : (isnan(_4202) ? 1.0 : min(_4202, 1.0));
        float _1516 = ((((1.0 - _1507) * (_1502 + 2.0)) * exp2(log2(isnan(1.0) ? _4180 : (isnan(_4180) ? 1.0 : min(_4180, 1.0))) * (_1502 + 1.0))) + _1507) * _1470;
        float _1517 = _1438 * 0.5;
        float _1518 = _1448 * 0.5;
        float _1519 = _1458 * 0.5;
        float _1520 = dot(vec3(_1517, _1518, _1519), vec3(_1517, _1518, _1519));
        float _1525 = (_1520 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1520);
        float _1533 = (dot(vec3(_1089, _1090, _1091), vec3(_1525 * _1517, _1525 * _1518, _1525 * _1519)) + 1.0) * 0.5;
        float _4213 = isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0));
        float _1542 = sqrt(((_1518 * _1518) + (_1517 * _1517)) + (_1519 * _1519)) / (_1471 + 9.9999997473787516355514526367188e-06);
        float _4224 = isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0));
        float _1543 = isnan(1.0) ? _4224 : (isnan(_4224) ? 1.0 : min(_4224, 1.0));
        float _1544 = _1543 * 2.0;
        float _1548 = (1.0 - _1543) / (_1543 + 1.0);
        float _4235 = isnan(0.0) ? _1548 : (isnan(_1548) ? 0.0 : max(_1548, 0.0));
        float _1549 = isnan(1.0) ? _4235 : (isnan(_4235) ? 1.0 : min(_4235, 1.0));
        float _1558 = ((((1.0 - _1549) * (_1544 + 2.0)) * exp2(log2(isnan(1.0) ? _4213 : (isnan(_4213) ? 1.0 : min(_4213, 1.0))) * (_1544 + 1.0))) + _1549) * _1471;
        float _1559 = _1439 * 0.5;
        float _1560 = _1449 * 0.5;
        float _1561 = _1459 * 0.5;
        float _1562 = dot(vec3(_1559, _1560, _1561), vec3(_1559, _1560, _1561));
        float _1567 = (_1562 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1562);
        float _1575 = (dot(vec3(_1089, _1090, _1091), vec3(_1567 * _1559, _1567 * _1560, _1567 * _1561)) + 1.0) * 0.5;
        float _4246 = isnan(0.0) ? _1575 : (isnan(_1575) ? 0.0 : max(_1575, 0.0));
        float _1584 = sqrt(((_1560 * _1560) + (_1559 * _1559)) + (_1561 * _1561)) / (_1472 + 9.9999997473787516355514526367188e-06);
        float _4257 = isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0));
        float _1585 = isnan(1.0) ? _4257 : (isnan(_4257) ? 1.0 : min(_4257, 1.0));
        float _1586 = _1585 * 2.0;
        float _1590 = (1.0 - _1585) / (_1585 + 1.0);
        float _4268 = isnan(0.0) ? _1590 : (isnan(_1590) ? 0.0 : max(_1590, 0.0));
        float _1591 = isnan(1.0) ? _4268 : (isnan(_4268) ? 1.0 : min(_4268, 1.0));
        float _1600 = ((((1.0 - _1591) * (_1586 + 2.0)) * exp2(log2(isnan(1.0) ? _4246 : (isnan(_4246) ? 1.0 : min(_4246, 1.0))) * (_1586 + 1.0))) + _1591) * _1472;
        _1608 = _1439;
        _1610 = _1438;
        _1611 = _1437;
        _1612 = _1449;
        _1613 = _1448;
        _1614 = _1447;
        _1615 = _1459;
        _1616 = _1458;
        _1617 = _1457;
        _1618 = _1472;
        _1619 = _1471;
        _1620 = _1470;
        _1621 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1516 : (isnan(_1516) ? 0.0 : max(_1516, 0.0)));
        _1622 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0)));
        _1623 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1600 : (isnan(_1600) ? 0.0 : max(_1600, 0.0)));
    }
    else
    {
        _1608 = _1609;
        _1610 = _1609;
        _1611 = _1609;
        _1612 = _1609;
        _1613 = _1609;
        _1614 = _1609;
        _1615 = _1609;
        _1616 = _1609;
        _1617 = _1609;
        _1618 = _1609;
        _1619 = _1609;
        _1620 = _1609;
        _1621 = 0.0;
        _1622 = 0.0;
        _1623 = 0.0;
    }
    float _1915;
    float _1916;
    float _1917;
    float _1918;
    float _1919;
    float _1920;
    float _1921;
    float _1922;
    float _1923;
    float _1924;
    float _1925;
    float _1926;
    float _1927;
    float _1928;
    float _1929;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1646 = fma(_1307, cbModelParam._m0[30u].z, fma(_1303, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1299));
        float _1650 = fma(_1307, cbModelParam._m0[31u].z, fma(_1303, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1299));
        float _1654 = fma(_1307, cbModelParam._m0[32u].z, fma(_1303, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1299));
        float _1677 = _1299 + _1089;
        float _1678 = _1303 + _1090;
        float _1679 = _1307 + _1091;
        float _1689 = fma(_1679, cbModelParam._m0[30u].z, fma(_1678, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1677)) - _1646;
        float _1690 = fma(_1679, cbModelParam._m0[31u].z, fma(_1678, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1677)) - _1650;
        float _1691 = fma(_1679, cbModelParam._m0[32u].z, fma(_1678, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1677)) - _1654;
        float _1695 = inversesqrt(dot(vec3(_1689, _1690, _1691), vec3(_1689, _1690, _1691)));
        float _1708 = ((_1695 * _1689) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1646 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1709 = ((_1695 * _1690) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1650 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1710 = ((_1695 * _1691) / cbModelParam._m0[35u].z) + ((((((_1654 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1712 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1708, _1709, _1710), 0.0);
        vec4 _1719 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1708, _1709, _1710), 0.0);
        vec4 _1726 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1708, _1709, _1710), 0.0);
        vec4 _1733 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1708, _1709, _1710), 0.0);
        float _1745 = exp2((_1712.w + (-0.5)) * 20.0) * 2.0;
        float _1746 = _1745 * (_1712.x + (-0.5));
        float _1747 = _1745 * (_1712.y + (-0.5));
        float _1748 = _1745 * (_1712.z + (-0.5));
        float _1755 = exp2((_1719.w + (-0.5)) * 20.0) * 2.0;
        float _1756 = _1755 * (_1719.x + (-0.5));
        float _1757 = _1755 * (_1719.y + (-0.5));
        float _1758 = _1755 * (_1719.z + (-0.5));
        float _1765 = exp2((_1726.w + (-0.5)) * 20.0) * 2.0;
        float _1766 = _1765 * (_1726.x + (-0.5));
        float _1767 = _1765 * (_1726.y + (-0.5));
        float _1768 = _1765 * (_1726.z + (-0.5));
        float _1775 = exp2((_1733.w + (-0.5)) * 20.0) * 2.0;
        float _1776 = _1775 * (_1733.x + (-0.5));
        float _1777 = _1775 * (_1733.y + (-0.5));
        float _1778 = _1775 * (_1733.z + (-0.5));
        float _1779 = isnan(0.0) ? _1776 : (isnan(_1776) ? 0.0 : max(_1776, 0.0));
        float _1780 = isnan(0.0) ? _1777 : (isnan(_1777) ? 0.0 : max(_1777, 0.0));
        float _1781 = isnan(0.0) ? _1778 : (isnan(_1778) ? 0.0 : max(_1778, 0.0));
        float _1782 = _1746 * 0.5;
        float _1783 = _1756 * 0.5;
        float _1784 = _1766 * 0.5;
        float _1785 = dot(vec3(_1782, _1783, _1784), vec3(_1782, _1783, _1784));
        float _1790 = (_1785 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1785);
        float _1798 = (dot(vec3(_1089, _1090, _1091), vec3(_1790 * _1782, _1790 * _1783, _1790 * _1784)) + 1.0) * 0.5;
        float _4309 = isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0));
        float _1807 = sqrt(((_1783 * _1783) + (_1782 * _1782)) + (_1784 * _1784)) / (_1779 + 9.9999997473787516355514526367188e-06);
        float _4320 = isnan(0.0) ? _1807 : (isnan(_1807) ? 0.0 : max(_1807, 0.0));
        float _1808 = isnan(1.0) ? _4320 : (isnan(_4320) ? 1.0 : min(_4320, 1.0));
        float _1809 = _1808 * 2.0;
        float _1813 = (1.0 - _1808) / (_1808 + 1.0);
        float _4331 = isnan(0.0) ? _1813 : (isnan(_1813) ? 0.0 : max(_1813, 0.0));
        float _1814 = isnan(1.0) ? _4331 : (isnan(_4331) ? 1.0 : min(_4331, 1.0));
        float _1823 = ((((1.0 - _1814) * (_1809 + 2.0)) * exp2(log2(isnan(1.0) ? _4309 : (isnan(_4309) ? 1.0 : min(_4309, 1.0))) * (_1809 + 1.0))) + _1814) * _1779;
        float _1824 = _1747 * 0.5;
        float _1825 = _1757 * 0.5;
        float _1826 = _1767 * 0.5;
        float _1827 = dot(vec3(_1824, _1825, _1826), vec3(_1824, _1825, _1826));
        float _1832 = (_1827 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1827);
        float _1840 = (dot(vec3(_1089, _1090, _1091), vec3(_1832 * _1824, _1832 * _1825, _1832 * _1826)) + 1.0) * 0.5;
        float _4342 = isnan(0.0) ? _1840 : (isnan(_1840) ? 0.0 : max(_1840, 0.0));
        float _1849 = sqrt(((_1825 * _1825) + (_1824 * _1824)) + (_1826 * _1826)) / (_1780 + 9.9999997473787516355514526367188e-06);
        float _4353 = isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0));
        float _1850 = isnan(1.0) ? _4353 : (isnan(_4353) ? 1.0 : min(_4353, 1.0));
        float _1851 = _1850 * 2.0;
        float _1855 = (1.0 - _1850) / (_1850 + 1.0);
        float _4364 = isnan(0.0) ? _1855 : (isnan(_1855) ? 0.0 : max(_1855, 0.0));
        float _1856 = isnan(1.0) ? _4364 : (isnan(_4364) ? 1.0 : min(_4364, 1.0));
        float _1865 = ((((1.0 - _1856) * (_1851 + 2.0)) * exp2(log2(isnan(1.0) ? _4342 : (isnan(_4342) ? 1.0 : min(_4342, 1.0))) * (_1851 + 1.0))) + _1856) * _1780;
        float _1866 = _1748 * 0.5;
        float _1867 = _1758 * 0.5;
        float _1868 = _1768 * 0.5;
        float _1869 = dot(vec3(_1866, _1867, _1868), vec3(_1866, _1867, _1868));
        float _1874 = (_1869 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1869);
        float _1882 = (dot(vec3(_1089, _1090, _1091), vec3(_1874 * _1866, _1874 * _1867, _1874 * _1868)) + 1.0) * 0.5;
        float _4375 = isnan(0.0) ? _1882 : (isnan(_1882) ? 0.0 : max(_1882, 0.0));
        float _1891 = sqrt(((_1867 * _1867) + (_1866 * _1866)) + (_1868 * _1868)) / (_1781 + 9.9999997473787516355514526367188e-06);
        float _4386 = isnan(0.0) ? _1891 : (isnan(_1891) ? 0.0 : max(_1891, 0.0));
        float _1892 = isnan(1.0) ? _4386 : (isnan(_4386) ? 1.0 : min(_4386, 1.0));
        float _1893 = _1892 * 2.0;
        float _1897 = (1.0 - _1892) / (_1892 + 1.0);
        float _4397 = isnan(0.0) ? _1897 : (isnan(_1897) ? 0.0 : max(_1897, 0.0));
        float _1898 = isnan(1.0) ? _4397 : (isnan(_4397) ? 1.0 : min(_4397, 1.0));
        float _1907 = ((((1.0 - _1898) * (_1893 + 2.0)) * exp2(log2(isnan(1.0) ? _4375 : (isnan(_4375) ? 1.0 : min(_4375, 1.0))) * (_1893 + 1.0))) + _1898) * _1781;
        _1915 = _1748;
        _1916 = _1747;
        _1917 = _1746;
        _1918 = _1758;
        _1919 = _1757;
        _1920 = _1756;
        _1921 = _1768;
        _1922 = _1767;
        _1923 = _1766;
        _1924 = _1781;
        _1925 = _1780;
        _1926 = _1779;
        _1927 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1823 : (isnan(_1823) ? 0.0 : max(_1823, 0.0)));
        _1928 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1865 : (isnan(_1865) ? 0.0 : max(_1865, 0.0)));
        _1929 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1907 : (isnan(_1907) ? 0.0 : max(_1907, 0.0)));
    }
    else
    {
        _1915 = _1609;
        _1916 = _1609;
        _1917 = _1609;
        _1918 = _1609;
        _1919 = _1609;
        _1920 = _1609;
        _1921 = _1609;
        _1922 = _1609;
        _1923 = _1609;
        _1924 = _1609;
        _1925 = _1609;
        _1926 = _1609;
        _1927 = 0.0;
        _1928 = 0.0;
        _1929 = 0.0;
    }
    float _1939 = (cbModelParam._m0[1u].x * (_1927 - _1621)) + _1621;
    float _1940 = (cbModelParam._m0[1u].x * (_1928 - _1622)) + _1622;
    float _1941 = (cbModelParam._m0[1u].x * (_1929 - _1623)) + _1623;
    float _1962 = fma(_1941, cbSceneParam._m0[89u].z, fma(_1940, cbSceneParam._m0[89u].y, _1939 * cbSceneParam._m0[89u].x));
    float _1965 = fma(_1941, cbSceneParam._m0[90u].z, fma(_1940, cbSceneParam._m0[90u].y, _1939 * cbSceneParam._m0[90u].x));
    float _1968 = fma(_1941, cbSceneParam._m0[91u].z, fma(_1940, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1939));
    float _1983 = _1246 * 0.5;
    float _1984 = _1247 * 0.5;
    float _1985 = _1248 * 0.5;
    float _1986 = dot(vec4(_1983, _1984, _1985, 1.0), vec4(_1917, _1920, _1923, _1926));
    float _1989 = dot(vec4(_1983, _1984, _1985, 1.0), vec4(_1916, _1919, _1922, _1925));
    float _1992 = dot(vec4(_1983, _1984, _1985, 1.0), vec4(_1915, _1918, _1921, _1924));
    float _2026;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1999 = dot(vec4(_1983, _1984, _1985, 1.0), vec4(_1608, _1612, _1615, _1618));
        float _2003 = dot(vec4(_1983, _1984, _1985, 1.0), vec4(_1610, _1613, _1616, _1619));
        float _2007 = dot(vec4(_1983, _1984, _1985, 1.0), vec4(_1611, _1614, _1617, _1620));
        float _2014 = dot(vec4(cbModelParam._m0[39u]), vec4(_1983, _1984, _1985, 1.0));
        _2026 = dot(vec3(isnan(0.0) ? _2007 : (isnan(_2007) ? 0.0 : max(_2007, 0.0)), isnan(0.0) ? _2003 : (isnan(_2003) ? 0.0 : max(_2003, 0.0)), isnan(0.0) ? _1999 : (isnan(_1999) ? 0.0 : max(_1999, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2014) ? 0.0 : (isnan(0.0) ? _2014 : max(0.0, _2014))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2026 = 1.0;
    }
    float _2037;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2028 = dot(vec4(cbModelParam._m0[40u]), vec4(_1983, _1984, _1985, 1.0));
        _2037 = dot(vec3(isnan(0.0) ? _1986 : (isnan(_1986) ? 0.0 : max(_1986, 0.0)), isnan(0.0) ? _1989 : (isnan(_1989) ? 0.0 : max(_1989, 0.0)), isnan(0.0) ? _1992 : (isnan(_1992) ? 0.0 : max(_1992, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2028) ? 0.0 : (isnan(0.0) ? _2028 : max(0.0, _2028))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2037 = 1.0;
    }
    float _2041 = (_2037 * cbModelParam._m0[1u].x) + (_2026 * (1.0 - cbModelParam._m0[1u].x));
    float _2051 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1092);
    float _2052 = isnan(_2051) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2051 : min(cbModelParam._m0[25u].z, _2051));
    float _2132;
    float _2134;
    float _2136;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2099 = fma(_1307, cbModelParam._m0[13u].z, fma(_1303, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1299)) + cbModelParam._m0[13u].w;
        float _2103 = fma(_1307, cbModelParam._m0[14u].z, fma(_1303, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1299)) + cbModelParam._m0[14u].w;
        float _2107 = fma(_1307, cbModelParam._m0[15u].z, fma(_1303, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1299)) + cbModelParam._m0[15u].w;
        float _2110 = fma(_1248, cbModelParam._m0[13u].z, fma(_1247, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1246));
        float _2113 = fma(_1248, cbModelParam._m0[14u].z, fma(_1247, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1246));
        float _2116 = fma(_1248, cbModelParam._m0[15u].z, fma(_1247, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1246));
        float _2144;
        if (_2110 > 0.0)
        {
            _2144 = abs((1.0 - _2099) / _2110);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2110 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2099 + 1.0) / _2110);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2144 = frontier_phi_14_12_ladder;
        }
        float _2366;
        if (_2113 > 0.0)
        {
            _2366 = abs((1.0 - _2103) / _2113);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2113 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2103 + 1.0) / _2113);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2366 = frontier_phi_23_19_ladder;
        }
        float _2612;
        if (_2116 > 0.0)
        {
            _2612 = abs((1.0 - _2107) / _2116);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2116 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2107 + 1.0) / _2116);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2612 = frontier_phi_35_30_ladder;
        }
        float _2614 = isnan(_2366) ? _2144 : (isnan(_2144) ? _2366 : min(_2144, _2366));
        float _2615 = isnan(_2612) ? _2614 : (isnan(_2614) ? _2612 : min(_2614, _2612));
        float _2619 = (_2615 * _2110) + _2099;
        float _2620 = (_2615 * _2113) + _2103;
        float _2621 = (_2615 * _2116) + _2107;
        float _2622 = _2615 * 9.9999997473787516355514526367188e-05;
        float _2624 = (-1.0) - _2622;
        float _2626 = _2622 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2621 > _2626) || ((_2621 < _2624) || ((_2620 > _2626) || ((_2620 < _2624) || ((_2619 < _2624) || (_2619 > _2626))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2745 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2621, cbModelParam._m0[9u].z, fma(_2620, cbModelParam._m0[9u].y, _2619 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2621, cbModelParam._m0[10u].z, fma(_2620, cbModelParam._m0[10u].y, _2619 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2621, cbModelParam._m0[11u].z, fma(_2620, cbModelParam._m0[11u].y, _2619 * cbModelParam._m0[11u].x))), _2052);
            frontier_phi_13_35_ladder = _2745.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2745.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2745.x * cbModelParam._m0[1u].y;
        }
        _2132 = frontier_phi_13_35_ladder_2;
        _2134 = frontier_phi_13_35_ladder_1;
        _2136 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2120 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1246, _1247, _1248), _2052);
        _2132 = _2120.x * cbModelParam._m0[1u].y;
        _2134 = _2120.y * cbModelParam._m0[1u].y;
        _2136 = _2120.z * cbModelParam._m0[1u].y;
    }
    float _2140 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1092);
    float _2141 = isnan(_2140) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2140 : min(cbModelParam._m0[25u].w, _2140));
    float _2231;
    float _2233;
    float _2235;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2195 = fma(_1307, cbModelParam._m0[21u].z, fma(_1303, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1299)) + cbModelParam._m0[21u].w;
        float _2199 = fma(_1307, cbModelParam._m0[22u].z, fma(_1303, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1299)) + cbModelParam._m0[22u].w;
        float _2203 = fma(_1307, cbModelParam._m0[23u].z, fma(_1303, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1299)) + cbModelParam._m0[23u].w;
        float _2206 = fma(_1248, cbModelParam._m0[21u].z, fma(_1247, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1246));
        float _2209 = fma(_1248, cbModelParam._m0[22u].z, fma(_1247, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1246));
        float _2212 = fma(_1248, cbModelParam._m0[23u].z, fma(_1247, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1246));
        float _2371;
        if (_2206 > 0.0)
        {
            _2371 = abs((1.0 - _2195) / _2206);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2206 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2195 + 1.0) / _2206);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2371 = frontier_phi_25_21_ladder;
        }
        float _2639;
        if (_2209 > 0.0)
        {
            _2639 = abs((1.0 - _2199) / _2209);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2209 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2199 + 1.0) / _2209);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2639 = frontier_phi_37_32_ladder;
        }
        float _2844;
        if (_2212 > 0.0)
        {
            _2844 = abs((1.0 - _2203) / _2212);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2212 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2203 + 1.0) / _2212);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2844 = frontier_phi_46_43_ladder;
        }
        float _2846 = isnan(_2639) ? _2371 : (isnan(_2371) ? _2639 : min(_2371, _2639));
        float _2847 = isnan(_2844) ? _2846 : (isnan(_2846) ? _2844 : min(_2846, _2844));
        float _2851 = (_2847 * _2206) + _2195;
        float _2852 = (_2847 * _2209) + _2199;
        float _2853 = (_2847 * _2212) + _2203;
        float _2854 = _2847 * 9.9999997473787516355514526367188e-05;
        float _2855 = (-1.0) - _2854;
        float _2857 = _2854 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2853 > _2857) || ((_2853 < _2855) || ((_2852 > _2857) || ((_2852 < _2855) || ((_2851 < _2855) || (_2851 > _2857))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3052 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2853, cbModelParam._m0[17u].z, fma(_2852, cbModelParam._m0[17u].y, _2851 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2853, cbModelParam._m0[18u].z, fma(_2852, cbModelParam._m0[18u].y, _2851 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2853, cbModelParam._m0[19u].z, fma(_2852, cbModelParam._m0[19u].y, _2851 * cbModelParam._m0[19u].x))), _2141);
            frontier_phi_22_46_ladder = _3052.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _3052.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _3052.x * cbModelParam._m0[1u].z;
        }
        _2231 = frontier_phi_22_46_ladder_2;
        _2233 = frontier_phi_22_46_ladder_1;
        _2235 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2215 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1246, _1247, _1248), _2141);
        _2231 = _2215.x * cbModelParam._m0[1u].z;
        _2233 = _2215.y * cbModelParam._m0[1u].z;
        _2235 = _2215.z * cbModelParam._m0[1u].z;
    }
    float _2247 = ((((1.0 - _1267) * ((_1254 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1267 * _1254)) * _1238;
    float _2248 = _2247 * ((cbModelParam._m0[1u].w * (_2231 - _2132)) + _2132);
    float _2249 = _2247 * ((cbModelParam._m0[1u].w * (_2233 - _2134)) + _2134);
    float _2250 = _2247 * ((cbModelParam._m0[1u].w * (_2235 - _2136)) + _2136);
    float _2253 = fma(_2250, cbSceneParam._m0[89u].z, fma(_2249, cbSceneParam._m0[89u].y, _2248 * cbSceneParam._m0[89u].x));
    float _2256 = fma(_2250, cbSceneParam._m0[90u].z, fma(_2249, cbSceneParam._m0[90u].y, _2248 * cbSceneParam._m0[90u].x));
    float _2259 = fma(_2250, cbSceneParam._m0[91u].z, fma(_2249, cbSceneParam._m0[91u].y, _2248 * cbSceneParam._m0[91u].x));
    vec4 _2267 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1175, _1176));
    float _2269 = _2267.w;
    float _2281 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2269);
    float _2282 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2269);
    float _2283 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2269);
    uvec4 _2287 = floatBitsToUint(cbInstanceData._m0[_289 + 5u]);
    uint _2289 = _2287.x * 14u;
    uint _2290 = _2289 + 13u;
    float _2297 = _1238 + (-1.0);
    float _2302 = (cbLight._m0[_2290].x * _2297) + 1.0;
    float _2303 = (cbLight._m0[_2290].y * _2297) + 1.0;
    float _2304 = (cbLight._m0[_2290].z * _2297) + 1.0;
    float _2305 = (cbLight._m0[_2290].w * _2297) + 1.0;
    uint _2306 = _2289 + 5u;
    float _2312 = isnan(1.0) ? _2303 : (isnan(_2303) ? 1.0 : min(_2303, 1.0));
    uint _2316 = _2289 + 4u;
    float _2325 = isnan(1.0) ? _2302 : (isnan(_2302) ? 1.0 : min(_2302, 1.0));
    uint _2329 = _2289 | 1u;
    float _2340 = dot(vec3(cbLight._m0[_2289].xyz), vec3(_1089, _1090, _1091));
    float _2343 = dot(vec3(cbLight._m0[_2329].xyz), vec3(_1089, _1090, _1091));
    float _4533 = isnan(0.0) ? _2340 : (isnan(_2340) ? 0.0 : max(_2340, 0.0));
    float _4544 = isnan(0.0) ? _2343 : (isnan(_2343) ? 0.0 : max(_2343, 0.0));
    float _2348 = (isnan(1.0) ? _4533 : (isnan(_4533) ? 1.0 : min(_4533, 1.0))) * 0.3183098733425140380859375;
    float _2350 = (isnan(1.0) ? _4544 : (isnan(_4544) ? 1.0 : min(_4544, 1.0))) * 0.3183098733425140380859375;
    float _2357 = ((cbLight._m0[_2306].x * _2312) * _2350) + (((cbLight._m0[_2316].x * _2281) * _2325) * _2348);
    float _2358 = ((_2312 * cbLight._m0[_2306].y) * _2350) + (((cbLight._m0[_2316].y * _2282) * _2325) * _2348);
    float _2359 = ((_2312 * cbLight._m0[_2306].z) * _2350) + (((cbLight._m0[_2316].z * _2283) * _2325) * _2348);
    uvec4 _2363 = floatBitsToUint(cbLight._m0[_2289 + 12u]);
    bool _2365 = _2363.x == 0u;
    float _2376;
    float _2378;
    float _2380;
    if (_2365)
    {
        _2376 = _2357;
        _2378 = _2358;
        _2380 = _2359;
    }
    else
    {
        uint _2384 = _2289 + 6u;
        float _2400 = (dot(vec3(cbLight._m0[_2289 + 2u].xyz), vec3(_1089, _1090, _1091)) * 0.5) + 0.5;
        float _2401 = _2400 * _2400;
        float _4555 = isnan(0.0) ? _2401 : (isnan(_2401) ? 0.0 : max(_2401, 0.0));
        float _2402 = isnan(1.0) ? _4555 : (isnan(_4555) ? 1.0 : min(_4555, 1.0));
        float _2403 = isnan(1.0) ? _2304 : (isnan(_2304) ? 1.0 : min(_2304, 1.0));
        _2376 = (((cbLight._m0[_2384].x * 0.3183098733425140380859375) * _2402) * _2403) + _2357;
        _2378 = (((cbLight._m0[_2384].y * 0.3183098733425140380859375) * _2402) * _2403) + _2358;
        _2380 = (((cbLight._m0[_2384].z * 0.3183098733425140380859375) * _2402) * _2403) + _2359;
    }
    bool _2383 = _2363.y == 0u;
    float _2421;
    float _2423;
    float _2425;
    if (_2383)
    {
        _2421 = _2376;
        _2423 = _2378;
        _2425 = _2380;
    }
    else
    {
        uint _2583 = _2289 + 7u;
        float _2599 = (dot(vec3(cbLight._m0[_2289 + 3u].xyz), vec3(_1089, _1090, _1091)) * 0.5) + 0.5;
        float _2600 = _2599 * _2599;
        float _4571 = isnan(0.0) ? _2600 : (isnan(_2600) ? 0.0 : max(_2600, 0.0));
        float _2601 = isnan(1.0) ? _4571 : (isnan(_4571) ? 1.0 : min(_4571, 1.0));
        float _2602 = isnan(1.0) ? _2305 : (isnan(_2305) ? 1.0 : min(_2305, 1.0));
        _2421 = (((cbLight._m0[_2583].x * 0.3183098733425140380859375) * _2601) * _2602) + _2376;
        _2423 = (((cbLight._m0[_2583].y * 0.3183098733425140380859375) * _2601) * _2602) + _2378;
        _2425 = (((cbLight._m0[_2583].z * 0.3183098733425140380859375) * _2601) * _2602) + _2380;
    }
    uint _2428 = _2289 + 8u;
    float _2441 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2289].w)) * _1092) * 0.949999988079071044921875);
    float _2442 = _2441 * _2441;
    float _2443 = cbLight._m0[_2289].x + _1167;
    float _2444 = cbLight._m0[_2289].y + _1168;
    float _2445 = cbLight._m0[_2289].z + _1169;
    float _2449 = inversesqrt(dot(vec3(_2443, _2444, _2445), vec3(_2443, _2444, _2445)));
    float _2450 = _2449 * _2443;
    float _2451 = _2449 * _2444;
    float _2452 = _2449 * _2445;
    float _2453 = dot(vec3(_1089, _1090, _1091), vec3(cbLight._m0[_2289].xyz));
    float _4587 = isnan(0.0) ? _2453 : (isnan(_2453) ? 0.0 : max(_2453, 0.0));
    float _2456 = isnan(1.0) ? _4587 : (isnan(_4587) ? 1.0 : min(_4587, 1.0));
    float _4598 = isnan(0.0) ? _1239 : (isnan(_1239) ? 0.0 : max(_1239, 0.0));
    float _2457 = isnan(1.0) ? _4598 : (isnan(_4598) ? 1.0 : min(_4598, 1.0));
    float _2458 = dot(vec3(_1089, _1090, _1091), vec3(_2450, _2451, _2452));
    float _4609 = isnan(0.0) ? _2458 : (isnan(_2458) ? 0.0 : max(_2458, 0.0));
    float _2461 = isnan(1.0) ? _4609 : (isnan(_4609) ? 1.0 : min(_4609, 1.0));
    float _2462 = dot(vec3(cbLight._m0[_2289].xyz), vec3(_2450, _2451, _2452));
    float _4620 = isnan(0.0) ? _2462 : (isnan(_2462) ? 0.0 : max(_2462, 0.0));
    float _2466 = _2442 * _2442;
    float _2470 = ((_2461 * _2461) * (_2466 + (-1.0))) + 1.0;
    float _2481 = (exp2(log2(1.0 - (isnan(1.0) ? _4620 : (isnan(_4620) ? 1.0 : min(_4620, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2482 = 1.0 - _2442;
    float _2493 = (0.5 / (((_2457 * ((_2456 * _2482) + _2442)) + 9.9999999392252902907785028219223e-09) + (((_2457 * _2482) + _2442) * _2456))) * _2456;
    float _4631 = isnan(0.0) ? _2493 : (isnan(_2493) ? 0.0 : max(_2493, 0.0));
    float _2495 = (isnan(1.0) ? _4631 : (isnan(_4631) ? 1.0 : min(_4631, 1.0))) * (_2466 / ((_2470 * _2470) * 3.141590118408203125));
    uint _2509 = _2289 + 9u;
    float _2520 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2329].w)) * _1092) * 0.949999988079071044921875);
    float _2521 = _2520 * _2520;
    float _2522 = cbLight._m0[_2329].x + _1167;
    float _2523 = cbLight._m0[_2329].y + _1168;
    float _2524 = cbLight._m0[_2329].z + _1169;
    float _2528 = inversesqrt(dot(vec3(_2522, _2523, _2524), vec3(_2522, _2523, _2524)));
    float _2529 = _2528 * _2522;
    float _2530 = _2528 * _2523;
    float _2531 = _2528 * _2524;
    float _2532 = dot(vec3(_1089, _1090, _1091), vec3(cbLight._m0[_2329].xyz));
    float _4642 = isnan(0.0) ? _2532 : (isnan(_2532) ? 0.0 : max(_2532, 0.0));
    float _2535 = isnan(1.0) ? _4642 : (isnan(_4642) ? 1.0 : min(_4642, 1.0));
    float _2536 = dot(vec3(_1089, _1090, _1091), vec3(_2529, _2530, _2531));
    float _4653 = isnan(0.0) ? _2536 : (isnan(_2536) ? 0.0 : max(_2536, 0.0));
    float _2539 = isnan(1.0) ? _4653 : (isnan(_4653) ? 1.0 : min(_4653, 1.0));
    float _2540 = dot(vec3(cbLight._m0[_2329].xyz), vec3(_2529, _2530, _2531));
    float _4664 = isnan(0.0) ? _2540 : (isnan(_2540) ? 0.0 : max(_2540, 0.0));
    float _2544 = _2521 * _2521;
    float _2548 = ((_2539 * _2539) * (_2544 + (-1.0))) + 1.0;
    float _2557 = (exp2(log2(1.0 - (isnan(1.0) ? _4664 : (isnan(_4664) ? 1.0 : min(_4664, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2558 = 1.0 - _2521;
    float _2568 = (0.5 / (((_2457 * ((_2535 * _2558) + _2521)) + 9.9999999392252902907785028219223e-09) + (((_2457 * _2558) + _2521) * _2535))) * _2535;
    float _4675 = isnan(0.0) ? _2568 : (isnan(_2568) ? 0.0 : max(_2568, 0.0));
    float _2570 = (isnan(1.0) ? _4675 : (isnan(_4675) ? 1.0 : min(_4675, 1.0))) * (_2544 / ((_2548 * _2548) * 3.141590118408203125));
    float _2580 = (((_2557 * cbLight._m0[_2509].x) * _2570) * _2312) + ((((cbLight._m0[_2428].x * _2281) * _2481) * _2495) * _2325);
    float _2581 = (((_2557 * cbLight._m0[_2509].y) * _2570) * _2312) + ((((cbLight._m0[_2428].y * _2282) * _2481) * _2495) * _2325);
    float _2582 = (((_2557 * cbLight._m0[_2509].z) * _2570) * _2312) + ((((cbLight._m0[_2428].z * _2283) * _2481) * _2495) * _2325);
    float _2644;
    float _2646;
    float _2648;
    if (_2365)
    {
        _2644 = _2580;
        _2646 = _2581;
        _2648 = _2582;
    }
    else
    {
        uint _2650 = _2289 + 2u;
        uint _2654 = _2289 + 10u;
        float _2668 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2650].w)) * _1092) * 0.949999988079071044921875);
        float _2669 = _2668 * _2668;
        float _2670 = cbLight._m0[_2650].x + _1167;
        float _2671 = cbLight._m0[_2650].y + _1168;
        float _2672 = cbLight._m0[_2650].z + _1169;
        float _2676 = inversesqrt(dot(vec3(_2670, _2671, _2672), vec3(_2670, _2671, _2672)));
        float _2677 = _2676 * _2670;
        float _2678 = _2676 * _2671;
        float _2679 = _2676 * _2672;
        float _2680 = dot(vec3(_1089, _1090, _1091), vec3(cbLight._m0[_2650].xyz));
        float _4686 = isnan(0.0) ? _2680 : (isnan(_2680) ? 0.0 : max(_2680, 0.0));
        float _2683 = isnan(1.0) ? _4686 : (isnan(_4686) ? 1.0 : min(_4686, 1.0));
        float _2684 = dot(vec3(_1089, _1090, _1091), vec3(_2677, _2678, _2679));
        float _4697 = isnan(0.0) ? _2684 : (isnan(_2684) ? 0.0 : max(_2684, 0.0));
        float _2687 = isnan(1.0) ? _4697 : (isnan(_4697) ? 1.0 : min(_4697, 1.0));
        float _2688 = dot(vec3(cbLight._m0[_2650].xyz), vec3(_2677, _2678, _2679));
        float _4708 = isnan(0.0) ? _2688 : (isnan(_2688) ? 0.0 : max(_2688, 0.0));
        float _2692 = _2669 * _2669;
        float _2696 = ((_2687 * _2687) * (_2692 + (-1.0))) + 1.0;
        float _2705 = (exp2(log2(1.0 - (isnan(1.0) ? _4708 : (isnan(_4708) ? 1.0 : min(_4708, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2706 = 1.0 - _2669;
        float _2716 = (0.5 / (((_2457 * ((_2683 * _2706) + _2669)) + 9.9999999392252902907785028219223e-09) + (((_2457 * _2706) + _2669) * _2683))) * _2683;
        float _4719 = isnan(0.0) ? _2716 : (isnan(_2716) ? 0.0 : max(_2716, 0.0));
        float _2718 = (isnan(1.0) ? _4719 : (isnan(_4719) ? 1.0 : min(_4719, 1.0))) * (_2692 / ((_2696 * _2696) * 3.141590118408203125));
        float _2719 = isnan(1.0) ? _2304 : (isnan(_2304) ? 1.0 : min(_2304, 1.0));
        _2644 = (((_2705 * cbLight._m0[_2654].x) * _2718) * _2719) + _2580;
        _2646 = (((_2705 * cbLight._m0[_2654].y) * _2718) * _2719) + _2581;
        _2648 = (((_2705 * cbLight._m0[_2654].z) * _2718) * _2719) + _2582;
    }
    float _2754;
    float _2756;
    float _2758;
    if (_2383)
    {
        _2754 = _2644;
        _2756 = _2646;
        _2758 = _2648;
    }
    else
    {
        uint _2765 = _2289 + 3u;
        uint _2769 = _2289 + 11u;
        float _2783 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2765].w)) * _1092) * 0.949999988079071044921875);
        float _2784 = _2783 * _2783;
        float _2785 = cbLight._m0[_2765].x + _1167;
        float _2786 = cbLight._m0[_2765].y + _1168;
        float _2787 = cbLight._m0[_2765].z + _1169;
        float _2791 = inversesqrt(dot(vec3(_2785, _2786, _2787), vec3(_2785, _2786, _2787)));
        float _2792 = _2791 * _2785;
        float _2793 = _2791 * _2786;
        float _2794 = _2791 * _2787;
        float _2795 = dot(vec3(_1089, _1090, _1091), vec3(cbLight._m0[_2765].xyz));
        float _4735 = isnan(0.0) ? _2795 : (isnan(_2795) ? 0.0 : max(_2795, 0.0));
        float _2798 = isnan(1.0) ? _4735 : (isnan(_4735) ? 1.0 : min(_4735, 1.0));
        float _2799 = dot(vec3(_1089, _1090, _1091), vec3(_2792, _2793, _2794));
        float _4746 = isnan(0.0) ? _2799 : (isnan(_2799) ? 0.0 : max(_2799, 0.0));
        float _2802 = isnan(1.0) ? _4746 : (isnan(_4746) ? 1.0 : min(_4746, 1.0));
        float _2803 = dot(vec3(cbLight._m0[_2765].xyz), vec3(_2792, _2793, _2794));
        float _4757 = isnan(0.0) ? _2803 : (isnan(_2803) ? 0.0 : max(_2803, 0.0));
        float _2807 = _2784 * _2784;
        float _2811 = ((_2802 * _2802) * (_2807 + (-1.0))) + 1.0;
        float _2820 = (exp2(log2(1.0 - (isnan(1.0) ? _4757 : (isnan(_4757) ? 1.0 : min(_4757, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2821 = 1.0 - _2784;
        float _2831 = (0.5 / (((_2457 * ((_2798 * _2821) + _2784)) + 9.9999999392252902907785028219223e-09) + (((_2457 * _2821) + _2784) * _2798))) * _2798;
        float _4768 = isnan(0.0) ? _2831 : (isnan(_2831) ? 0.0 : max(_2831, 0.0));
        float _2833 = (isnan(1.0) ? _4768 : (isnan(_4768) ? 1.0 : min(_4768, 1.0))) * (_2807 / ((_2811 * _2811) * 3.141590118408203125));
        float _2834 = isnan(1.0) ? _2305 : (isnan(_2305) ? 1.0 : min(_2305, 1.0));
        _2754 = (((_2820 * cbLight._m0[_2769].x) * _2833) * _2834) + _2644;
        _2756 = (((_2820 * cbLight._m0[_2769].y) * _2833) * _2834) + _2646;
        _2758 = (((_2820 * cbLight._m0[_2769].z) * _2833) * _2834) + _2648;
    }
    float _2969;
    float _2971;
    float _2973;
    float _2975;
    float _2977;
    float _2979;
    if (_2287.y == 0u)
    {
        float _2909 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2910 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2909;
        float _2911 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2909;
        float _2912 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2909;
        uvec4 _2924 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2925 = _2924.x;
        uint _2936 = uint((float(_2924.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1176) / _2925))) + floor(float(uint(cbSceneParam._m0[85u].x * _1175) / _2925)));
        float _2946 = (log2(_2912 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2947 = isnan(0.0) ? _2946 : (isnan(_2946) ? 0.0 : max(_2946, 0.0));
        uint _2950 = uint(isnan(14.0) ? _2947 : (isnan(_2947) ? 14.0 : min(_2947, 14.0)));
        uvec4 _2955 = texelFetch(g_lightClusterGridBuffer, int(((_2950 << 2u) + (_2936 << 6u)) >> 2u));
        uint _2956 = _2955.x;
        uint _2957 = _2924.z;
        float _3057;
        float _3059;
        float _3061;
        float _3063;
        float _3065;
        float _3067;
        if (((((1u << ((_2957 >> 4u) & 15u)) + 4294967295u) & _2956) == 0u) || ((_2957 & 240u) == 0u))
        {
            _3057 = 0.0;
            _3059 = 0.0;
            _3061 = 0.0;
            _3063 = 0.0;
            _3065 = 0.0;
            _3067 = 0.0;
        }
        else
        {
            float _3058;
            float _3060;
            float _3062;
            float _3064;
            float _3066;
            float _3068;
            float _3201 = 0.0;
            float _3202 = 0.0;
            float _3203 = 0.0;
            float _3204 = 0.0;
            float _3205 = 0.0;
            float _3206 = 0.0;
            uint _3207 = 0u;
            uint _3216;
            bool _3217;
            for (;;)
            {
                _3216 = texelFetch(g_lightClassification, int((((_2950 << 5u) + (_2936 << 9u)) + (_3207 << 2u)) >> 2u)).x;
                _3217 = _3216 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3217)
                {
                    frontier_phi_61_pred = _3201;
                    frontier_phi_61_pred_1 = _3206;
                    frontier_phi_61_pred_2 = _3205;
                    frontier_phi_61_pred_3 = _3204;
                    frontier_phi_61_pred_4 = _3203;
                    frontier_phi_61_pred_5 = _3202;
                }
                else
                {
                    float _3325;
                    float _3326;
                    float _3327;
                    float _3328;
                    float _3329;
                    float _3330;
                    uint _3331;
                    _3325 = _3201;
                    _3326 = _3202;
                    _3327 = _3203;
                    _3328 = _3204;
                    _3329 = _3205;
                    _3330 = _3206;
                    _3331 = _3216;
                    float _3257;
                    float _3258;
                    float _3259;
                    float _3260;
                    float _3261;
                    float _3262;
                    for (;;)
                    {
                        uint _3335 = uint(findLSB(_3331)) + (_3207 << 5u);
                        uint _3332 = (_3331 + 4294967295u) & _3331;
                        uint _3337 = _3335 * 48u;
                        vec4 _3351 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3337)).x, texelFetch(g_PointLightRenderingBuffer, int(_3337 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3337 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3337 + 3u)).x));
                        uint _3357 = (_3335 * 48u) + 4u;
                        vec4 _3370 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3357)).x, texelFetch(g_PointLightRenderingBuffer, int(_3357 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3357 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3357 + 3u)).x));
                        uint _3376 = (_3335 * 48u) + 8u;
                        vec3 _3387 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3376)).x, texelFetch(g_PointLightRenderingBuffer, int(_3376 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3376 + 2u)).x));
                        float _3391 = _3351.x - _2910;
                        float _3392 = _3351.y - _2911;
                        float _3393 = _3351.z - _2912;
                        float _3394 = dot(vec3(_3391, _3392, _3393), vec3(_3391, _3392, _3393));
                        float _3397 = inversesqrt(_3394);
                        float _3398 = _3397 * _3391;
                        float _3399 = _3397 * _3392;
                        float _3400 = _3397 * _3393;
                        float _3401 = dot(vec3(_1194, _1197, _1200), vec3(_3398, _3399, _3400));
                        float _3406 = 1.0 - (_3394 * _3351.w);
                        float _4794 = isnan(0.0) ? _3406 : (isnan(_3406) ? 0.0 : max(_3406, 0.0));
                        float _3407 = isnan(1.0) ? _4794 : (isnan(_4794) ? 1.0 : min(_4794, 1.0));
                        float _3408 = sqrt(_3394) * _3370.w;
                        float _3411 = 1.39999997615814208984375 / (_3408 + 1.39999997615814208984375);
                        float _3412 = _3411 * _3411;
                        float _3415 = ((1.0 - _3412) * _3401) + _3412;
                        float _3418 = _3408 * _3408;
                        float _3422 = ((isnan(0.0) ? _3415 : (isnan(_3415) ? 0.0 : max(_3415, 0.0))) * _3407) / ((_3418 * 0.699999988079071044921875) + 1.0);
                        float _3426 = (-0.0) - _2910;
                        float _3427 = (-0.0) - _2911;
                        float _3428 = (-0.0) - _2912;
                        float _3432 = inversesqrt(dot(vec3(_3426, _3427, _3428), vec3(_3426, _3427, _3428)));
                        float _3433 = _3432 * _3426;
                        float _3434 = _3432 * _3427;
                        float _3435 = _3432 * _3428;
                        float _3443 = exp2(log2(1.0 / ((_3418 * 3.5) + 5.0)) * 0.25);
                        float _3444 = 1.0 - _1254;
                        float _3451 = sqrt(1.0 - ((1.0 - (_3444 * _3444)) * (1.0 - (_3443 * _3443))));
                        float _3452 = _3451 * _3451;
                        float _3453 = _3452 * _3452;
                        float _3454 = _3433 + _3398;
                        float _3455 = _3434 + _3399;
                        float _3456 = _3435 + _3400;
                        float _3460 = inversesqrt(dot(vec3(_3454, _3455, _3456), vec3(_3454, _3455, _3456)));
                        float _3464 = dot(vec3(_1194, _1197, _1200), vec3(_3433, _3434, _3435));
                        float _4810 = isnan(0.0) ? _3464 : (isnan(_3464) ? 0.0 : max(_3464, 0.0));
                        float _3467 = isnan(1.0) ? _4810 : (isnan(_4810) ? 1.0 : min(_4810, 1.0));
                        float _3468 = dot(vec3(_1194, _1197, _1200), vec3(_3460 * _3454, _3460 * _3455, _3460 * _3456));
                        float _4821 = isnan(0.0) ? _3468 : (isnan(_3468) ? 0.0 : max(_3468, 0.0));
                        float _3471 = isnan(1.0) ? _4821 : (isnan(_4821) ? 1.0 : min(_4821, 1.0));
                        float _3475 = ((_3471 * _3471) * (_3453 + (-1.0))) + 1.0;
                        float _3476 = _3411 * _3452;
                        float _3477 = _3476 * _3476;
                        float _3480 = ((1.0 - _3477) * _3401) + _3477;
                        float _4832 = isnan(0.0) ? _3480 : (isnan(_3480) ? 0.0 : max(_3480, 0.0));
                        float _3481 = isnan(1.0) ? _4832 : (isnan(_4832) ? 1.0 : min(_4832, 1.0));
                        float _3482 = 1.0 - _3452;
                        float _3492 = (0.5 / (((_3481 * ((_3467 * _3482) + _3452)) + 9.9999999392252902907785028219223e-09) + (((_3481 * _3482) + _3452) * _3467))) * _3481;
                        float _4843 = isnan(0.0) ? _3492 : (isnan(_3492) ? 0.0 : max(_3492, 0.0));
                        float _3503 = (((_3453 * 3.1415927410125732421875) * (isnan(1.0) ? _4843 : (isnan(_4843) ? 1.0 : min(_4843, 1.0)))) / ((_3475 * _3475) * ((_3418 * 2.1991131305694580078125) + 3.141590118408203125))) * _3407;
                        _3260 = (_3422 * _3370.x) + _3328;
                        _3261 = (_3422 * _3370.y) + _3329;
                        _3262 = (_3422 * _3370.z) + _3330;
                        _3257 = (_3503 * _3387.x) + _3325;
                        _3258 = (_3503 * _3387.y) + _3326;
                        _3259 = (_3503 * _3387.z) + _3327;
                        if (_3332 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3325 = _3257;
                            _3326 = _3258;
                            _3327 = _3259;
                            _3328 = _3260;
                            _3329 = _3261;
                            _3330 = _3262;
                            _3331 = _3332;
                        }
                    }
                    frontier_phi_61_pred = _3257;
                    frontier_phi_61_pred_1 = _3262;
                    frontier_phi_61_pred_2 = _3261;
                    frontier_phi_61_pred_3 = _3260;
                    frontier_phi_61_pred_4 = _3259;
                    frontier_phi_61_pred_5 = _3258;
                }
                _3058 = frontier_phi_61_pred;
                _3068 = frontier_phi_61_pred_1;
                _3066 = frontier_phi_61_pred_2;
                _3064 = frontier_phi_61_pred_3;
                _3062 = frontier_phi_61_pred_4;
                _3060 = frontier_phi_61_pred_5;
                uint _3208 = _3207 + 1u;
                if (_3208 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3201 = _3058;
                    _3202 = _3060;
                    _3203 = _3062;
                    _3204 = _3064;
                    _3205 = _3066;
                    _3206 = _3068;
                    _3207 = _3208;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3057 = _3058;
            _3059 = _3060;
            _3061 = _3062;
            _3063 = _3064;
            _3065 = _3066;
            _3067 = _3068;
        }
        uvec4 _3071 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3072 = _3071.z;
        uint _3074 = (_3072 >> 8u) & 15u;
        float _3169;
        float _3171;
        float _3173;
        float _3175;
        float _3177;
        float _3179;
        if (((4294967295u << _3074) & _2956) == 0u)
        {
            _3169 = _3057;
            _3171 = _3059;
            _3173 = _3061;
            _3175 = _3063;
            _3177 = _3065;
            _3179 = _3067;
        }
        else
        {
            float _3194 = inversesqrt(dot(vec3(_2910, _2911, _2912), vec3(_2910, _2911, _2912)));
            float _3195 = _3194 * _2910;
            float _3196 = _3194 * _2911;
            float _3197 = _3194 * _2912;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_3074 < ((_3072 >> 12u) & 15u))
            {
                float _3170;
                float _3172;
                float _3174;
                float _3176;
                float _3178;
                float _3180;
                float _3308 = _3057;
                float _3309 = _3059;
                float _3310 = _3061;
                float _3311 = _3063;
                float _3312 = _3065;
                float _3313 = _3067;
                uint _3314 = _3074;
                uint _3323;
                bool _3324;
                for (;;)
                {
                    _3323 = texelFetch(g_lightClassification, int((((_2950 << 5u) + (_2936 << 9u)) + (_3314 << 2u)) >> 2u)).x;
                    _3324 = _3323 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3324)
                    {
                        frontier_phi_67_pred = _3311;
                        frontier_phi_67_pred_1 = _3312;
                        frontier_phi_67_pred_2 = _3313;
                        frontier_phi_67_pred_3 = _3310;
                        frontier_phi_67_pred_4 = _3309;
                        frontier_phi_67_pred_5 = _3308;
                    }
                    else
                    {
                        float _3508;
                        float _3509;
                        float _3510;
                        float _3511;
                        float _3512;
                        float _3513;
                        float _3801;
                        float _3802;
                        float _3803;
                        float _3804;
                        float _3805;
                        float _3806;
                        float _3521 = _3308;
                        float _3522 = _3309;
                        float _3523 = _3310;
                        float _3524 = _3311;
                        float _3525 = _3312;
                        float _3526 = _3313;
                        uint _3527 = _3323;
                        uint _3528;
                        vec4 _3553;
                        float _3554;
                        vec4 _3569;
                        vec3 _3581;
                        vec4 _3596;
                        vec4 _3611;
                        float _3657;
                        bool _3658;
                        for (;;)
                        {
                            uint _3538 = ((_3314 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3527));
                            _3528 = (_3527 + 4294967295u) & _3527;
                            uint _3540 = _3538 * 40u;
                            _3553 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3540)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3540 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3540 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3540 + 3u)).x));
                            _3554 = _3553.w;
                            uint _3556 = (_3538 * 40u) + 4u;
                            _3569 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3556)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3556 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3556 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3556 + 3u)).x));
                            uint _3571 = (_3538 * 40u) + 8u;
                            _3581 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3571)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3571 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3571 + 2u)).x));
                            uint _3583 = (_3538 * 40u) + 16u;
                            _3596 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3583)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3583 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3583 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3583 + 3u)).x));
                            uint _3598 = (_3538 * 40u) + 20u;
                            _3611 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3598)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3598 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3598 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3598 + 3u)).x));
                            uint _3613 = (_3538 * 40u) + 24u;
                            vec4 _3626 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3613)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3613 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3613 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3613 + 3u)).x));
                            uint _3632 = (_3538 * 40u) + 28u;
                            vec4 _3645 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3632)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3632 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3632 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3632 + 3u)).x));
                            _3657 = fma(_2912, _3645.z, fma(_2911, _3645.y, _3645.x * _2910)) + _3645.w;
                            _3658 = !((fma(_2912, _3626.z, fma(_2911, _3626.y, _3626.x * _2910)) + _3626.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3658)
                            {
                                float _3685 = _3553.x - _2910;
                                float _3686 = _3553.y - _2911;
                                float _3687 = _3553.z - _2912;
                                float _3688 = dot(vec3(_3685, _3686, _3687), vec3(_3685, _3686, _3687));
                                float _3691 = inversesqrt(_3688);
                                float _3692 = _3691 * _3685;
                                float _3693 = _3691 * _3686;
                                float _3694 = _3691 * _3687;
                                float _3698 = 1.0 - (_3688 / (_3554 * _3554));
                                float _4854 = isnan(0.0) ? _3698 : (isnan(_3698) ? 0.0 : max(_3698, 0.0));
                                float _3699 = isnan(1.0) ? _4854 : (isnan(_4854) ? 1.0 : min(_4854, 1.0));
                                float _3703 = sqrt(_3688) * _3569.w;
                                float _3705 = 1.39999997615814208984375 / (_3703 + 1.39999997615814208984375);
                                float _3706 = _3705 * _3705;
                                float _3709 = ((1.0 - _3706) * dot(vec3(_3692, _3693, _3694), vec3(_1194, _1197, _1200))) + _3706;
                                float _3712 = _3703 * _3703;
                                float _3716 = (fma(_2912, _3596.z, fma(_2911, _3596.y, _3596.x * _2910)) + _3596.w) / _3657;
                                float _3717 = (fma(_2912, _3611.z, fma(_2911, _3611.y, _3611.x * _2910)) + _3611.w) / _3657;
                                float _3721 = 1.0 - dot(vec2(_3716, _3717), vec2(_3716, _3717));
                                float _4870 = isnan(0.0) ? _3721 : (isnan(_3721) ? 0.0 : max(_3721, 0.0));
                                float _3722 = isnan(1.0) ? _4870 : (isnan(_4870) ? 1.0 : min(_4870, 1.0));
                                float _3723 = _3722 * (((isnan(0.0) ? _3709 : (isnan(_3709) ? 0.0 : max(_3709, 0.0))) * _3699) / ((_3712 * 0.699999988079071044921875) + 1.0));
                                float _3735 = exp2(log2(1.0 / ((_3712 * 3.5) + 5.0)) * 0.25);
                                float _3736 = 1.0 - _1254;
                                float _3743 = sqrt(1.0 - ((1.0 - (_3736 * _3736)) * (1.0 - (_3735 * _3735))));
                                float _3744 = _3743 * _3743;
                                float _3745 = _3744 * _3744;
                                float _3746 = _3692 - _3195;
                                float _3747 = _3693 - _3196;
                                float _3748 = _3694 - _3197;
                                float _3752 = inversesqrt(dot(vec3(_3746, _3747, _3748), vec3(_3746, _3747, _3748)));
                                float _3756 = dot(vec3(_1194, _1197, _1200), vec3((-0.0) - _3195, (-0.0) - _3196, (-0.0) - _3197));
                                float _4881 = isnan(0.0) ? _3756 : (isnan(_3756) ? 0.0 : max(_3756, 0.0));
                                float _3759 = isnan(1.0) ? _4881 : (isnan(_4881) ? 1.0 : min(_4881, 1.0));
                                float _3760 = dot(vec3(_1194, _1197, _1200), vec3(_3752 * _3746, _3752 * _3747, _3752 * _3748));
                                float _4892 = isnan(0.0) ? _3760 : (isnan(_3760) ? 0.0 : max(_3760, 0.0));
                                float _3763 = isnan(1.0) ? _4892 : (isnan(_4892) ? 1.0 : min(_4892, 1.0));
                                float _3767 = ((_3763 * _3763) * (_3745 + (-1.0))) + 1.0;
                                float _3768 = _3705 * _3744;
                                float _3769 = _3768 * _3768;
                                float _3775 = ((1.0 - _3769) * dot(vec3(_1194, _1197, _1200), vec3(_3692, _3693, _3694))) + _3769;
                                float _4903 = isnan(0.0) ? _3775 : (isnan(_3775) ? 0.0 : max(_3775, 0.0));
                                float _3776 = isnan(1.0) ? _4903 : (isnan(_4903) ? 1.0 : min(_4903, 1.0));
                                float _3777 = 1.0 - _3744;
                                float _3787 = (0.5 / (((_3776 * ((_3759 * _3777) + _3744)) + 9.9999999392252902907785028219223e-09) + (((_3776 * _3777) + _3744) * _3759))) * _3776;
                                float _4914 = isnan(0.0) ? _3787 : (isnan(_3787) ? 0.0 : max(_3787, 0.0));
                                float _3797 = (_3722 * _3699) * (((_3745 * 3.1415927410125732421875) * (isnan(1.0) ? _4914 : (isnan(_4914) ? 1.0 : min(_4914, 1.0)))) / ((_3767 * _3767) * ((_3712 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3797 * _3581.x;
                                frontier_phi_73_pred_1 = _3797 * _3581.y;
                                frontier_phi_73_pred_2 = _3723 * _3569.z;
                                frontier_phi_73_pred_3 = _3723 * _3569.y;
                                frontier_phi_73_pred_4 = _3723 * _3569.x;
                                frontier_phi_73_pred_5 = _3797 * _3581.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3801 = frontier_phi_73_pred;
                            _3802 = frontier_phi_73_pred_1;
                            _3806 = frontier_phi_73_pred_2;
                            _3805 = frontier_phi_73_pred_3;
                            _3804 = frontier_phi_73_pred_4;
                            _3803 = frontier_phi_73_pred_5;
                            _3511 = _3804 + _3524;
                            _3512 = _3805 + _3525;
                            _3513 = _3806 + _3526;
                            _3508 = _3801 + _3521;
                            _3509 = _3802 + _3522;
                            _3510 = _3803 + _3523;
                            if (_3528 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3521 = _3508;
                                _3522 = _3509;
                                _3523 = _3510;
                                _3524 = _3511;
                                _3525 = _3512;
                                _3526 = _3513;
                                _3527 = _3528;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3511;
                        frontier_phi_67_pred_1 = _3512;
                        frontier_phi_67_pred_2 = _3513;
                        frontier_phi_67_pred_3 = _3510;
                        frontier_phi_67_pred_4 = _3509;
                        frontier_phi_67_pred_5 = _3508;
                    }
                    _3176 = frontier_phi_67_pred;
                    _3178 = frontier_phi_67_pred_1;
                    _3180 = frontier_phi_67_pred_2;
                    _3174 = frontier_phi_67_pred_3;
                    _3172 = frontier_phi_67_pred_4;
                    _3170 = frontier_phi_67_pred_5;
                    uint _3315 = _3314 + 1u;
                    if (_3315 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3308 = _3170;
                        _3309 = _3172;
                        _3310 = _3174;
                        _3311 = _3176;
                        _3312 = _3178;
                        _3313 = _3180;
                        _3314 = _3315;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3178;
                frontier_phi_55_56_ladder_1 = _3180;
                frontier_phi_55_56_ladder_2 = _3176;
                frontier_phi_55_56_ladder_3 = _3174;
                frontier_phi_55_56_ladder_4 = _3172;
                frontier_phi_55_56_ladder_5 = _3170;
            }
            else
            {
                frontier_phi_55_56_ladder = _3065;
                frontier_phi_55_56_ladder_1 = _3067;
                frontier_phi_55_56_ladder_2 = _3063;
                frontier_phi_55_56_ladder_3 = _3061;
                frontier_phi_55_56_ladder_4 = _3059;
                frontier_phi_55_56_ladder_5 = _3057;
            }
            _3169 = frontier_phi_55_56_ladder_5;
            _3171 = frontier_phi_55_56_ladder_4;
            _3173 = frontier_phi_55_56_ladder_3;
            _3175 = frontier_phi_55_56_ladder_2;
            _3177 = frontier_phi_55_56_ladder;
            _3179 = frontier_phi_55_56_ladder_1;
        }
        float _3184 = isnan(1.0) ? _1238 : (isnan(_1238) ? 1.0 : min(_1238, 1.0));
        _2969 = (_3184 * _3175) + _2421;
        _2971 = (_3184 * _3177) + _2423;
        _2973 = (_3184 * _3179) + _2425;
        _2975 = ((_3169 * 0.039999999105930328369140625) * _3184) + _2754;
        _2977 = ((_3171 * 0.039999999105930328369140625) * _3184) + _2756;
        _2979 = ((_3173 * 0.039999999105930328369140625) * _3184) + _2758;
    }
    else
    {
        _2969 = _2421;
        _2971 = _2423;
        _2973 = _2425;
        _2975 = _2754;
        _2977 = _2756;
        _2979 = _2758;
    }
    float _4930 = isnan(0.0) ? _1223 : (isnan(_1223) ? 0.0 : max(_1223, 0.0));
    float _4941 = isnan(0.0) ? _1224 : (isnan(_1224) ? 0.0 : max(_1224, 0.0));
    float _4952 = isnan(0.0) ? _1225 : (isnan(_1225) ? 0.0 : max(_1225, 0.0));
    uint _2999 = _289 + 6u;
    float _3007 = _1175 / cbSceneParam._m0[86u].x;
    float _3008 = _1176 / cbSceneParam._m0[86u].y;
    vec4 _3022 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3007, _3008, (log2((isnan(cbSceneParam._m0[77u].w) ? _1110 : (isnan(_1110) ? cbSceneParam._m0[77u].w : min(_1110, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3024 = _3022.x;
    float _3025 = _3022.y;
    float _3026 = _3022.z;
    float _3027 = _3022.w;
    float _3119;
    float _3121;
    float _3123;
    float _3125;
    if (_1110 > cbSceneParam._m0[78u].w)
    {
        float _3082 = isnan(_1110) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1110 : min(cbSceneParam._m0[80u].w, _1110));
        float _3083 = _3082 / _1110;
        float _3094 = _3083 * _1160;
        float _3095 = _1161 * _3083;
        float _3096 = (-0.0) - _3095;
        float _3097 = _3083 * _1162;
        float _3099 = (cbSceneParam._m0[77u].w * _3096) / _3082;
        float _3100 = _3099 + cbSceneParam._m0[79u].w;
        float _3101 = cbSceneParam._m0[79u].w - _3095;
        float _3107 = sqrt(((_3094 * _3094) + (_3095 * _3095)) + (_3097 * _3097));
        float _3110 = (1.0 - (cbSceneParam._m0[77u].w / _3082)) * _3107;
        float _3115 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3117 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3270;
        if (abs((_3096 - _3099) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3270 = ((((_3100 > 0.0) ? exp2(_3115 * _3100) : (2.0 - exp2(_3117 * _3100))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3110;
        }
        else
        {
            float _3230 = 1.0 / cbSceneParam._m0[80u].x;
            float _3231 = isnan(_3101) ? _3100 : (isnan(_3100) ? _3101 : max(_3100, _3101));
            float _3232 = isnan(_3101) ? _3100 : (isnan(_3100) ? _3101 : min(_3100, _3101));
            float _3241 = isnan(0.0) ? _3231 : (isnan(_3231) ? 0.0 : min(_3231, 0.0));
            float _3242 = isnan(0.0) ? _3232 : (isnan(_3232) ? 0.0 : min(_3232, 0.0));
            _3270 = ((abs(_3107 / _3096) * cbSceneParam._m0[80u].y) * ((((_3241 - _3242) * 2.0) - ((exp2(_3115 * (isnan(0.0) ? _3231 : (isnan(_3231) ? 0.0 : max(_3231, 0.0)))) - exp2(_3115 * (isnan(0.0) ? _3232 : (isnan(_3232) ? 0.0 : max(_3232, 0.0))))) * _3230)) - ((exp2(_3117 * _3241) - exp2(_3117 * _3242)) * _3230))) + (_3110 * cbSceneParam._m0[80u].z);
        }
        vec4 _3272 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3007, _3008, 1.0), 0.0);
        float _3281 = exp2((_3270 * (-1.44269502162933349609375)) * (1.0 - _3272.w));
        float _3282 = log2(_3281);
        float _3298 = log2(_3027);
        _3119 = (exp2(_3298 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3282 * cbSceneParam._m0[78u].x)) * _3272.x) / cbSceneParam._m0[78u].x)) + _3024;
        _3121 = (exp2(_3298 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3282 * cbSceneParam._m0[78u].y)) * _3272.y) / cbSceneParam._m0[78u].y)) + _3025;
        _3123 = (exp2(_3298 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3282 * cbSceneParam._m0[78u].z)) * _3272.z) / cbSceneParam._m0[78u].z)) + _3026;
        _3125 = _3281 * _3027;
    }
    else
    {
        _3119 = _3024;
        _3121 = _3025;
        _3123 = _3026;
        _3125 = _3027;
    }
    float _3137 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3138 = _3137 == 3.0;
    float _3139 = log2(_3125);
    float _3146 = exp2(_3139 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4930 : (isnan(_4930) ? 1.0 : min(_4930, 1.0))) * (_2969 + ((isnan(0.0) ? _1962 : (isnan(_1962) ? 0.0 : max(_1962, 0.0))) * _1238))) + ((_2975 + ((isnan(0.0) ? _2253 : (isnan(_2253) ? 0.0 : max(_2253, 0.0))) * _2041)) * cbPerFrame._m0[3u].x));
    float _3147 = exp2(_3139 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4941 : (isnan(_4941) ? 1.0 : min(_4941, 1.0))) * (_2971 + ((isnan(0.0) ? _1965 : (isnan(_1965) ? 0.0 : max(_1965, 0.0))) * _1238))) + ((_2977 + ((isnan(0.0) ? _2256 : (isnan(_2256) ? 0.0 : max(_2256, 0.0))) * _2041)) * cbPerFrame._m0[3u].x));
    float _3148 = exp2(_3139 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4952 : (isnan(_4952) ? 1.0 : min(_4952, 1.0))) * (_2973 + ((isnan(0.0) ? _1968 : (isnan(_1968) ? 0.0 : max(_1968, 0.0))) * _1238))) + ((_2979 + ((isnan(0.0) ? _2259 : (isnan(_2259) ? 0.0 : max(_2259, 0.0))) * _2041)) * cbPerFrame._m0[3u].x));
    float _3157 = (_3137 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3157 * (_3138 ? _3146 : (_3146 + (cbSceneParam._m0[72u].w * _3119)));
    SV_Target.y = _3157 * (_3138 ? _3147 : (_3147 + (cbSceneParam._m0[72u].w * _3121)));
    SV_Target.z = _3157 * (_3138 ? _3148 : (_3148 + (cbSceneParam._m0[72u].w * _3123)));
    SV_Target.w = cbInstanceData._m0[_2999].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2999].w;
}


