#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _184 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _185 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _186 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _192 = inversesqrt(dot(vec3(_184, _185, _186), vec3(_184, _185, _186)));
    float _199 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _206 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _220 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _222 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _223 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _915 = isnan(0.0) ? _220 : (isnan(_220) ? 0.0 : max(_220, 0.0));
    float _926 = isnan(0.0) ? _222 : (isnan(_222) ? 0.0 : max(_222, 0.0));
    float _937 = isnan(0.0) ? _223 : (isnan(_223) ? 0.0 : max(_223, 0.0));
    uint _233 = uint(roundEven(NORMAL.w)) * 13u;
    uint _238 = _233 + 1u;
    uint _242 = _233 + 2u;
    float _251 = sqrt(((cbInstanceData._m0[_238].x * cbInstanceData._m0[_238].x) + (cbInstanceData._m0[_233].x * cbInstanceData._m0[_233].x)) + (cbInstanceData._m0[_242].x * cbInstanceData._m0[_242].x));
    float _252 = _251 * TEXCOORD.z;
    float _253 = _251 * TEXCOORD.w;
    vec4 _266 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _252) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _253) + cbTextureTilingScale._m0[13u].w));
    vec4 _290 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _295 = _290.x * cbMtdParam._m0[11u].x;
    float _296 = _290.y * cbMtdParam._m0[11u].y;
    float _297 = _290.z * cbMtdParam._m0[11u].z;
    vec4 _316 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _252) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _253) + cbTextureTilingScale._m0[5u].w));
    vec4 _368 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _370 = _368.x;
    float _383 = dot(vec4(_370, _368.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _400 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w)).x) * 2.0) - ((((_370 - _383) * cbMtdParam._m0[24u].z) + _383) * cbMtdParam._m0[23u].x))) + 1.0;
    float _948 = isnan(0.0) ? _400 : (isnan(_400) ? 0.0 : max(_400, 0.0));
    float _401 = isnan(1.0) ? _948 : (isnan(_948) ? 1.0 : min(_948, 1.0));
    float _408 = (_401 * ((_316.x * cbMtdParam._m0[12u].x) - _295)) + _295;
    float _409 = (_401 * ((_316.y * cbMtdParam._m0[12u].y) - _296)) + _296;
    float _410 = (_401 * ((_316.z * cbMtdParam._m0[12u].z) - _297)) + _297;
    float _414 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _266.x) * _408;
    float _417 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _266.y) * _409;
    float _420 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _266.z) * _410;
    float _427 = ((_408 - _414) * (isnan(1.0) ? _915 : (isnan(_915) ? 1.0 : min(_915, 1.0)))) + _414;
    float _428 = ((_409 - _417) * (isnan(1.0) ? _926 : (isnan(_926) ? 1.0 : min(_926, 1.0)))) + _417;
    float _429 = ((_410 - _420) * (isnan(1.0) ? _937 : (isnan(_937) ? 1.0 : min(_937, 1.0)))) + _420;
    vec4 _448 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _252) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _253) + cbTextureTilingScale._m0[14u].w));
    vec4 _468 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _252) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _253) + cbTextureTilingScale._m0[20u].w));
    vec4 _493 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _252) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _253) + cbTextureTilingScale._m0[4u].w));
    vec4 _510 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _512 = _510.x;
    float _513 = _510.y;
    float _514 = _510.z;
    float _523 = ((_493.z - _514) * _401) + _514;
    float _526 = ((((_493.x - _512) * _401) + _512) * 2.0) + (-1.0);
    float _527 = ((((_493.y - _513) * _401) + _513) * 2.0) + (-1.0);
    float _528 = dot(vec2(_526, _527), vec2(_526, _527));
    float _959 = isnan(0.0) ? _528 : (isnan(_528) ? 0.0 : max(_528, 0.0));
    float _533 = sqrt(1.0 - (isnan(1.0) ? _959 : (isnan(_959) ? 1.0 : min(_959, 1.0))));
    vec4 _549 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _574 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _252) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _253) + cbTextureTilingScale._m0[11u].w));
    float _576 = _574.x;
    float _577 = 1.0 - _576;
    float _590 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_576 - _577) * cbMtdParam._m0[24u].w) + _577) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _970 = isnan(0.0) ? _590 : (isnan(_590) ? 0.0 : max(_590, 0.0));
    float _591 = isnan(1.0) ? _970 : (isnan(_970) ? 1.0 : min(_970, 1.0));
    float _598 = (_591 * ((_448.x * cbMtdParam._m0[18u].x) - _427)) + _427;
    float _599 = (_591 * ((_448.y * cbMtdParam._m0[18u].y) - _428)) + _428;
    float _600 = (_591 * ((_448.z * cbMtdParam._m0[18u].z) - _429)) + _429;
    float _605 = (((_468.z - _523) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _523;
    float _609 = ((_549.z - _605) * cbMtdParam._m0[19u].w) + _605;
    vec4 _622 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _252) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _253) + cbTextureTilingScale._m0[15u].w));
    float _629 = (_622.x * 2.0) + (-1.0);
    float _630 = (_622.y * 2.0) + (-1.0);
    float _631 = dot(vec2(_629, _630), vec2(_629, _630));
    float _981 = isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : max(_631, 0.0));
    float _639 = (_591 * (_622.z - _609)) + _609;
    float _648 = (_526 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_468.x * 2.0) + (-1.0)))) + (((_549.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _649 = (_527 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_468.y * 2.0) + (-1.0)))) + (((_549.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _661 = (((_629 - _648) + (cbMtdParam._m0[21u].x * _648)) * _591) + _648;
    float _662 = (((_630 - _649) + (cbMtdParam._m0[21u].x * _649)) * _591) + _649;
    float _663 = (_591 * (sqrt(1.0 - (isnan(1.0) ? _981 : (isnan(_981) ? 1.0 : min(_981, 1.0)))) - _533)) + _533;
    float _665 = cbMtdParam._m0[22u].x + _549.w;
    float _668 = fma(_663, _199 * NORMAL.x, fma(_662, _206 * TANGENT.x, (_192 * _184) * _661));
    float _671 = fma(_663, _199 * NORMAL.y, fma(_662, _206 * TANGENT.y, (_192 * _185) * _661));
    float _674 = fma(_663, _199 * NORMAL.z, fma(_662, _206 * TANGENT.z, (_192 * _186) * _661));
    float _678 = inversesqrt(dot(vec3(_668, _671, _674), vec3(_668, _671, _674)));
    float _992 = isnan(0.0) ? _639 : (isnan(_639) ? 0.0 : max(_639, 0.0));
    float _1003 = isnan(0.0) ? _665 : (isnan(_665) ? 0.0 : max(_665, 0.0));
    float _680 = isnan(1.0) ? _1003 : (isnan(_1003) ? 1.0 : min(_1003, 1.0));
    float _1014 = isnan(0.0) ? _598 : (isnan(_598) ? 0.0 : max(_598, 0.0));
    float _681 = isnan(1.0) ? _1014 : (isnan(_1014) ? 1.0 : min(_1014, 1.0));
    float _1025 = isnan(0.0) ? _599 : (isnan(_599) ? 0.0 : max(_599, 0.0));
    float _682 = isnan(1.0) ? _1025 : (isnan(_1025) ? 1.0 : min(_1025, 1.0));
    float _1036 = isnan(0.0) ? _600 : (isnan(_600) ? 0.0 : max(_600, 0.0));
    float _683 = isnan(1.0) ? _1036 : (isnan(_1036) ? 1.0 : min(_1036, 1.0));
    float _725 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _735 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _725);
    float _736 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _725);
    float _737 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _725);
    vec4 _742 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _744 = _742.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _804 = sqrt(((_735 * _735) + (_736 * _736)) + (_737 * _737));
        float _810 = (cbMatDynParam._m0[5u].x * _804) + cbMatDynParam._m0[5u].y;
        float _1047 = isnan(0.0) ? _810 : (isnan(_810) ? 0.0 : max(_810, 0.0));
        float _811 = isnan(1.0) ? _1047 : (isnan(_1047) ? 1.0 : min(_1047, 1.0));
        float _815 = (cbMatDynParam._m0[5u].z * _804) + cbMatDynParam._m0[5u].w;
        float _1058 = isnan(0.0) ? _815 : (isnan(_815) ? 0.0 : max(_815, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1058 : (isnan(_1058) ? 1.0 : min(_1058, 1.0))) - _811)) + _811) < ((_744 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _842;
    vec4 _766;
    float _773;
    float _774;
    float _775;
    float _776;
    float _780;
    vec4 _784;
    float _786;
    float _787;
    bool _798;
    for (;;)
    {
        _766 = cbInstanceData._m0[(_233 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _770 = (cbMtdParam._m0[0u].x * _681) * _766.x;
        float _771 = (cbMtdParam._m0[0u].y * _682) * _766.y;
        float _772 = (cbMtdParam._m0[0u].z * _683) * _766.z;
        float _1069 = isnan(0.0) ? _770 : (isnan(_770) ? 0.0 : max(_770, 0.0));
        _773 = isnan(1.0) ? _1069 : (isnan(_1069) ? 1.0 : min(_1069, 1.0));
        float _1080 = isnan(0.0) ? _771 : (isnan(_771) ? 0.0 : max(_771, 0.0));
        _774 = isnan(1.0) ? _1080 : (isnan(_1080) ? 1.0 : min(_1080, 1.0));
        float _1091 = isnan(0.0) ? _772 : (isnan(_772) ? 0.0 : max(_772, 0.0));
        _775 = isnan(1.0) ? _1091 : (isnan(_1091) ? 1.0 : min(_1091, 1.0));
        _776 = _680 * TEXCOORD_5.w;
        _780 = cbInstanceData._m0[_233 + 6u].w;
        float _781 = _744 + (-0.5);
        _784 = cbMtdParam._m0[1u];
        _786 = _784.y * _781;
        _787 = _781 * 0.999000012874603271484375;
        _798 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_798)
        {
            if ((cbInstanceData._m0[_233 + 7u].x + _787) < 0.5)
            {
                _842 = true;
                break;
            }
        }
        if ((_766.w < 1.0) && ((_766.w + _787) < 0.5))
        {
            _842 = true;
            break;
        }
        if ((_786 + 1.0) < _784.x)
        {
            _842 = true;
            break;
        }
        _842 = false;
        break;
    }
    if (_842)
    {
        discard_state = true;
    }
    bool _868 = cbMtdParam._m0[1u].z != 0.0;
    float _869 = _868 ? _780 : 0.0;
    SV_Target.x = ((_668 * 0.5) * _678) + 0.500488758087158203125;
    SV_Target.y = ((_671 * 0.5) * _678) + 0.500488758087158203125;
    SV_Target.z = ((_674 * 0.5) * _678) + 0.500488758087158203125;
    SV_Target.w = _869;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _992 : (isnan(_992) ? 1.0 : min(_992, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _868 ? _780 : _776;
    SV_Target_2.x = _773;
    SV_Target_2.y = _774;
    SV_Target_2.z = _775;
    SV_Target_2.w = _868 ? _780 : (float(floatBitsToUint(cbInstanceData._m0[_233 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _869;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _869;
    discard_exit();
}


