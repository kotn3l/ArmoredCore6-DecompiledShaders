#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1457;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _236 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _237 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _238 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _244 = inversesqrt(dot(vec3(_236, _237, _238), vec3(_236, _237, _238)));
    float _245 = _244 * _236;
    float _246 = _244 * _237;
    float _247 = _244 * _238;
    float _251 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _252 = _251 * NORMAL.x;
    float _253 = _251 * NORMAL.y;
    float _254 = _251 * NORMAL.z;
    float _258 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _259 = _258 * TANGENT.x;
    float _260 = _258 * TANGENT.y;
    float _261 = _258 * TANGENT.z;
    float _270 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _272 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _273 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4044 = isnan(0.0) ? _270 : (isnan(_270) ? 0.0 : max(_270, 0.0));
    float _4055 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    float _4066 = isnan(0.0) ? _273 : (isnan(_273) ? 0.0 : max(_273, 0.0));
    uint _283 = uint(roundEven(NORMAL.w)) * 13u;
    uint _288 = _283 + 1u;
    uint _292 = _283 + 2u;
    float _301 = sqrt(((cbInstanceData._m0[_288].x * cbInstanceData._m0[_288].x) + (cbInstanceData._m0[_283].x * cbInstanceData._m0[_283].x)) + (cbInstanceData._m0[_292].x * cbInstanceData._m0[_292].x));
    float _302 = _301 * TEXCOORD.z;
    float _303 = _301 * TEXCOORD.w;
    vec4 _316 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _302) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _303) + cbTextureTilingScale._m0[13u].w));
    vec4 _340 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _345 = _340.x * cbMtdParam._m0[11u].x;
    float _346 = _340.y * cbMtdParam._m0[11u].y;
    float _347 = _340.z * cbMtdParam._m0[11u].z;
    vec4 _366 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _302) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _303) + cbTextureTilingScale._m0[5u].w));
    vec4 _385 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _420 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _422 = _420.x;
    float _434 = dot(vec4(_422, _420.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _451 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _385.x) * 2.0) - ((((_422 - _434) * cbMtdParam._m0[24u].z) + _434) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4077 = isnan(0.0) ? _451 : (isnan(_451) ? 0.0 : max(_451, 0.0));
    float _452 = isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0));
    float _459 = (_452 * ((_366.x * cbMtdParam._m0[12u].x) - _345)) + _345;
    float _460 = (_452 * ((_366.y * cbMtdParam._m0[12u].y) - _346)) + _346;
    float _461 = (_452 * ((_366.z * cbMtdParam._m0[12u].z) - _347)) + _347;
    vec4 _478 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _302) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _303) + cbTextureTilingScale._m0[3u].w));
    vec4 _498 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _500 = _498.x;
    float _510 = dot(vec4(_500, _498.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _524 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _385.y) * 2.0) - ((((_500 - _510) * cbMtdParam._m0[24u].z) + _510) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4088 = isnan(0.0) ? _524 : (isnan(_524) ? 0.0 : max(_524, 0.0));
    float _525 = isnan(1.0) ? _4088 : (isnan(_4088) ? 1.0 : min(_4088, 1.0));
    float _532 = (_525 * ((_478.x * cbMtdParam._m0[13u].x) - _459)) + _459;
    float _533 = (_525 * ((_478.y * cbMtdParam._m0[13u].y) - _460)) + _460;
    float _534 = (_525 * ((_478.z * cbMtdParam._m0[13u].z) - _461)) + _461;
    float _538 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _316.x) * _532;
    float _541 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _316.y) * _533;
    float _544 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _316.z) * _534;
    float _551 = ((_532 - _538) * (isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0)))) + _538;
    float _552 = ((_533 - _541) * (isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0)))) + _541;
    float _553 = ((_534 - _544) * (isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0)))) + _544;
    vec4 _570 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _302) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _303) + cbTextureTilingScale._m0[20u].w));
    vec4 _595 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _302) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _303) + cbTextureTilingScale._m0[4u].w));
    vec4 _612 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _614 = _612.x;
    float _615 = _612.y;
    float _616 = _612.z;
    float _623 = ((_595.x - _614) * _452) + _614;
    float _624 = ((_595.y - _615) * _452) + _615;
    float _625 = ((_595.z - _616) * _452) + _616;
    vec4 _637 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _302) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _303) + cbTextureTilingScale._m0[2u].w));
    float _650 = ((_637.z - _625) * _525) + _625;
    float _653 = ((((_637.x - _623) * _525) + _623) * 2.0) + (-1.0);
    float _654 = ((((_637.y - _624) * _525) + _624) * 2.0) + (-1.0);
    float _655 = dot(vec2(_653, _654), vec2(_653, _654));
    float _4099 = isnan(0.0) ? _655 : (isnan(_655) ? 0.0 : max(_655, 0.0));
    float _660 = sqrt(1.0 - (isnan(1.0) ? _4099 : (isnan(_4099) ? 1.0 : min(_4099, 1.0))));
    vec4 _678 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _690 = (_653 + ((((_570.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x)) + (((_678.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _691 = (_654 + ((((_570.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x)) + (((_678.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _694 = fma(_660, _252, fma(_691, _259, _690 * _245));
    float _697 = fma(_660, _253, fma(_691, _260, _690 * _246));
    float _700 = fma(_660, _254, fma(_691, _261, _690 * _247));
    float _704 = inversesqrt(dot(vec3(_694, _697, _700), vec3(_694, _697, _700)));
    vec4 _731 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _302) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _303) + cbTextureTilingScale._m0[11u].w));
    float _733 = _731.x;
    float _734 = 1.0 - _733;
    float _740 = (cbMtdParam._m0[19u].x + dot(vec4(_704 * _694, _704 * _697, _704 * _700, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_733 - _734) * cbMtdParam._m0[24u].w) + _734) * cbMtdParam._m0[21u].z);
    float _4110 = isnan(0.0) ? _740 : (isnan(_740) ? 0.0 : max(_740, 0.0));
    float _741 = isnan(1.0) ? _4110 : (isnan(_4110) ? 1.0 : min(_4110, 1.0));
    float _743 = (-0.0) - cbMtdParam._m0[24u].x;
    float _745 = isnan(0.0) ? _743 : (isnan(_743) ? 0.0 : max(_743, 0.0));
    float _746 = isnan(1.0) ? _745 : (isnan(_745) ? 1.0 : min(_745, 1.0));
    float _753 = _741 - ((_741 * TEXCOORD_8.x) * _746);
    float _754 = _741 - ((_741 * TEXCOORD_8.y) * _746);
    float _755 = _741 - ((_741 * TEXCOORD_8.z) * _746);
    float _762 = (_753 * (cbMtdParam._m0[17u].x - _551)) + _551;
    float _763 = (_754 * (cbMtdParam._m0[17u].y - _552)) + _552;
    float _764 = (_755 * (cbMtdParam._m0[17u].z - _553)) + _553;
    vec4 _776 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _302) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _303) + cbTextureTilingScale._m0[19u].w));
    float _778 = _776.x;
    float _779 = 1.0 - _778;
    float _805 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_778 - _779) * cbMtdParam._m0[24u].y) + _779) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4131 = isnan(0.0) ? _805 : (isnan(_805) ? 0.0 : max(_805, 0.0));
    float _806 = isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0));
    float _814 = ((((cbMtdParam._m0[10u].x - _762) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _806) + _762;
    float _815 = ((((cbMtdParam._m0[10u].y - _763) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _806) + _763;
    float _816 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _764)) * _806) + _764;
    float _821 = (((_570.z - _650) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _650;
    float _825 = ((_678.z - _821) * cbMtdParam._m0[19u].w) + _821;
    vec4 _839 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _302) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _303) + cbTextureTilingScale._m0[15u].w));
    float _846 = (_839.x * 2.0) + (-1.0);
    float _847 = (_839.y * 2.0) + (-1.0);
    float _848 = dot(vec2(_846, _847), vec2(_846, _847));
    float _4142 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
    float _856 = ((_839.z - _825) * _753) + _825;
    float _859 = ((cbMtdParam._m0[23u].y - _856) * _806) + _856;
    vec4 _880 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _302) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _303) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _886 = (_880.x * 2.0) + (-1.0);
    float _887 = (_880.y * 2.0) + (-1.0);
    float _888 = dot(vec2(_886, _887), vec2(_886, _887));
    float _4153 = isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0));
    float _903 = ((sqrt(1.0 - (isnan(1.0) ? _4142 : (isnan(_4142) ? 1.0 : min(_4142, 1.0)))) - _660) * _755) + _660;
    float _906 = (((_846 - _690) * _753) + _690) + (cbMtdParam._m0[21u].x * _690);
    float _907 = (((_847 - _691) * _754) + _691) + (cbMtdParam._m0[21u].x * _691);
    float _918 = (((_886 - _906) + (_906 * cbMtdParam._m0[22u].z)) * _806) + _906;
    float _919 = (((_887 - _907) + (_907 * cbMtdParam._m0[22u].z)) * _806) + _907;
    float _920 = (_806 * (sqrt(1.0 - (isnan(1.0) ? _4153 : (isnan(_4153) ? 1.0 : min(_4153, 1.0)))) - _903)) + _903;
    float _922 = cbMtdParam._m0[22u].x + _678.w;
    float _925 = fma(_920, _252, fma(_919, _259, _918 * _245));
    float _928 = fma(_920, _253, fma(_919, _260, _918 * _246));
    float _931 = fma(_920, _254, fma(_919, _261, _918 * _247));
    float _935 = inversesqrt(dot(vec3(_925, _928, _931), vec3(_925, _928, _931)));
    float _936 = _935 * _925;
    float _937 = _935 * _928;
    float _938 = _935 * _931;
    float _4164 = isnan(0.0) ? _859 : (isnan(_859) ? 0.0 : max(_859, 0.0));
    float _939 = isnan(1.0) ? _4164 : (isnan(_4164) ? 1.0 : min(_4164, 1.0));
    float _4175 = isnan(0.0) ? _922 : (isnan(_922) ? 0.0 : max(_922, 0.0));
    float _4186 = isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0));
    float _4197 = isnan(0.0) ? _815 : (isnan(_815) ? 0.0 : max(_815, 0.0));
    float _4208 = isnan(0.0) ? _816 : (isnan(_816) ? 0.0 : max(_816, 0.0));
    float _957 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _998 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1008 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _998);
    float _1009 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _998);
    float _1010 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _998);
    float _1014 = inversesqrt(dot(vec3(_1008, _1009, _1010), vec3(_1008, _1009, _1010)));
    float _1015 = _1008 * _1014;
    float _1016 = _1009 * _1014;
    float _1017 = _1010 * _1014;
    float _1023 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1024 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1042 = fma(_938, cbSceneParam._m0[5u].z, fma(_937, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _936));
    float _1045 = fma(_938, cbSceneParam._m0[6u].z, fma(_937, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _936));
    float _1048 = fma(_938, cbSceneParam._m0[7u].z, fma(_937, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _936));
    uint _1062 = (_283 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1068 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4186 : (isnan(_4186) ? 1.0 : min(_4186, 1.0)))) * cbInstanceData._m0[_1062].x;
    float _1069 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4197 : (isnan(_4197) ? 1.0 : min(_4197, 1.0)))) * cbInstanceData._m0[_1062].y;
    float _1070 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4208 : (isnan(_4208) ? 1.0 : min(_4208, 1.0)))) * cbInstanceData._m0[_1062].z;
    float _4219 = isnan(0.0) ? _1068 : (isnan(_1068) ? 0.0 : max(_1068, 0.0));
    float _1071 = isnan(1.0) ? _4219 : (isnan(_4219) ? 1.0 : min(_4219, 1.0));
    float _4230 = isnan(0.0) ? _1069 : (isnan(_1069) ? 0.0 : max(_1069, 0.0));
    float _1072 = isnan(1.0) ? _4230 : (isnan(_4230) ? 1.0 : min(_4230, 1.0));
    float _4241 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
    float _1073 = isnan(1.0) ? _4241 : (isnan(_4241) ? 1.0 : min(_4241, 1.0));
    vec4 _1082 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1023, cbSceneParam._m0[86u].y * _1024));
    float _1086 = ((isnan(1.0) ? _4175 : (isnan(_4175) ? 1.0 : min(_4175, 1.0))) * TEXCOORD_5.w) * _1082.x;
    float _1087 = dot(vec3(_936, _937, _938), vec3(_1015, _1016, _1017));
    float _1090 = _1087 * 2.0;
    float _1094 = (_1090 * _936) - _1015;
    float _1095 = (_1090 * _937) - _1016;
    float _1096 = (_1090 * _938) - _1017;
    float _1100 = abs(dot(vec3(_1015, _1016, _1017), vec3(_936, _937, _938)));
    float _4252 = isnan(0.0) ? _1100 : (isnan(_1100) ? 0.0 : max(_1100, 0.0));
    float _1102 = sqrt(_939);
    float _1115 = exp2((_1102 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4252 : (isnan(_4252) ? 1.0 : min(_4252, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1102 * 3.0));
    float _1147 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1151 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1155 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1456;
    float _1458;
    float _1459;
    float _1460;
    float _1461;
    float _1462;
    float _1463;
    float _1464;
    float _1465;
    float _1466;
    float _1467;
    float _1468;
    float _1469;
    float _1470;
    float _1471;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1181 = fma(_1155, cbModelParam._m0[26u].z, fma(_1151, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1147));
        float _1185 = fma(_1155, cbModelParam._m0[27u].z, fma(_1151, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1147));
        float _1189 = fma(_1155, cbModelParam._m0[28u].z, fma(_1151, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1147));
        float _1214 = _1147 + _936;
        float _1215 = _1151 + _937;
        float _1216 = _1155 + _938;
        float _1226 = fma(_1216, cbModelParam._m0[26u].z, fma(_1215, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1214)) - _1181;
        float _1227 = fma(_1216, cbModelParam._m0[27u].z, fma(_1215, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1214)) - _1185;
        float _1228 = fma(_1216, cbModelParam._m0[28u].z, fma(_1215, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1214)) - _1189;
        float _1232 = inversesqrt(dot(vec3(_1226, _1227, _1228), vec3(_1226, _1227, _1228)));
        float _1245 = ((_1232 * _1226) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1181 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1246 = ((_1232 * _1227) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1185 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1247 = ((_1232 * _1228) / cbModelParam._m0[34u].z) + ((((((_1189 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1250 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1245, _1246, _1247), 0.0);
        vec4 _1257 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1245, _1246, _1247), 0.0);
        vec4 _1264 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1245, _1246, _1247), 0.0);
        vec4 _1271 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1245, _1246, _1247), 0.0);
        float _1284 = exp2((_1250.w + (-0.5)) * 20.0) * 2.0;
        float _1285 = _1284 * (_1250.x + (-0.5));
        float _1286 = _1284 * (_1250.y + (-0.5));
        float _1287 = _1284 * (_1250.z + (-0.5));
        float _1294 = exp2((_1257.w + (-0.5)) * 20.0) * 2.0;
        float _1295 = _1294 * (_1257.x + (-0.5));
        float _1296 = _1294 * (_1257.y + (-0.5));
        float _1297 = _1294 * (_1257.z + (-0.5));
        float _1304 = exp2((_1264.w + (-0.5)) * 20.0) * 2.0;
        float _1305 = _1304 * (_1264.x + (-0.5));
        float _1306 = _1304 * (_1264.y + (-0.5));
        float _1307 = _1304 * (_1264.z + (-0.5));
        float _1314 = exp2((_1271.w + (-0.5)) * 20.0) * 2.0;
        float _1315 = _1314 * (_1271.x + (-0.5));
        float _1316 = _1314 * (_1271.y + (-0.5));
        float _1317 = _1314 * (_1271.z + (-0.5));
        float _1318 = isnan(0.0) ? _1315 : (isnan(_1315) ? 0.0 : max(_1315, 0.0));
        float _1319 = isnan(0.0) ? _1316 : (isnan(_1316) ? 0.0 : max(_1316, 0.0));
        float _1320 = isnan(0.0) ? _1317 : (isnan(_1317) ? 0.0 : max(_1317, 0.0));
        float _1321 = _1285 * 0.5;
        float _1322 = _1295 * 0.5;
        float _1323 = _1305 * 0.5;
        float _1324 = dot(vec3(_1321, _1322, _1323), vec3(_1321, _1322, _1323));
        float _1329 = (_1324 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1324);
        float _1338 = (dot(vec3(_936, _937, _938), vec3(_1329 * _1321, _1329 * _1322, _1329 * _1323)) + 1.0) * 0.5;
        float _4278 = isnan(0.0) ? _1338 : (isnan(_1338) ? 0.0 : max(_1338, 0.0));
        float _1348 = sqrt(((_1322 * _1322) + (_1321 * _1321)) + (_1323 * _1323)) / (_1318 + 9.9999997473787516355514526367188e-06);
        float _4289 = isnan(0.0) ? _1348 : (isnan(_1348) ? 0.0 : max(_1348, 0.0));
        float _1349 = isnan(1.0) ? _4289 : (isnan(_4289) ? 1.0 : min(_4289, 1.0));
        float _1350 = _1349 * 2.0;
        float _1354 = (1.0 - _1349) / (_1349 + 1.0);
        float _4300 = isnan(0.0) ? _1354 : (isnan(_1354) ? 0.0 : max(_1354, 0.0));
        float _1355 = isnan(1.0) ? _4300 : (isnan(_4300) ? 1.0 : min(_4300, 1.0));
        float _1364 = ((((1.0 - _1355) * (_1350 + 2.0)) * exp2(log2(isnan(1.0) ? _4278 : (isnan(_4278) ? 1.0 : min(_4278, 1.0))) * (_1350 + 1.0))) + _1355) * _1318;
        float _1365 = _1286 * 0.5;
        float _1366 = _1296 * 0.5;
        float _1367 = _1306 * 0.5;
        float _1368 = dot(vec3(_1365, _1366, _1367), vec3(_1365, _1366, _1367));
        float _1373 = (_1368 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1368);
        float _1381 = (dot(vec3(_936, _937, _938), vec3(_1373 * _1365, _1373 * _1366, _1373 * _1367)) + 1.0) * 0.5;
        float _4311 = isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0));
        float _1390 = sqrt(((_1366 * _1366) + (_1365 * _1365)) + (_1367 * _1367)) / (_1319 + 9.9999997473787516355514526367188e-06);
        float _4322 = isnan(0.0) ? _1390 : (isnan(_1390) ? 0.0 : max(_1390, 0.0));
        float _1391 = isnan(1.0) ? _4322 : (isnan(_4322) ? 1.0 : min(_4322, 1.0));
        float _1392 = _1391 * 2.0;
        float _1396 = (1.0 - _1391) / (_1391 + 1.0);
        float _4333 = isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0));
        float _1397 = isnan(1.0) ? _4333 : (isnan(_4333) ? 1.0 : min(_4333, 1.0));
        float _1406 = ((((1.0 - _1397) * (_1392 + 2.0)) * exp2(log2(isnan(1.0) ? _4311 : (isnan(_4311) ? 1.0 : min(_4311, 1.0))) * (_1392 + 1.0))) + _1397) * _1319;
        float _1407 = _1287 * 0.5;
        float _1408 = _1297 * 0.5;
        float _1409 = _1307 * 0.5;
        float _1410 = dot(vec3(_1407, _1408, _1409), vec3(_1407, _1408, _1409));
        float _1415 = (_1410 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1410);
        float _1423 = (dot(vec3(_936, _937, _938), vec3(_1415 * _1407, _1415 * _1408, _1415 * _1409)) + 1.0) * 0.5;
        float _4344 = isnan(0.0) ? _1423 : (isnan(_1423) ? 0.0 : max(_1423, 0.0));
        float _1432 = sqrt(((_1408 * _1408) + (_1407 * _1407)) + (_1409 * _1409)) / (_1320 + 9.9999997473787516355514526367188e-06);
        float _4355 = isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0));
        float _1433 = isnan(1.0) ? _4355 : (isnan(_4355) ? 1.0 : min(_4355, 1.0));
        float _1434 = _1433 * 2.0;
        float _1438 = (1.0 - _1433) / (_1433 + 1.0);
        float _4366 = isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0));
        float _1439 = isnan(1.0) ? _4366 : (isnan(_4366) ? 1.0 : min(_4366, 1.0));
        float _1448 = ((((1.0 - _1439) * (_1434 + 2.0)) * exp2(log2(isnan(1.0) ? _4344 : (isnan(_4344) ? 1.0 : min(_4344, 1.0))) * (_1434 + 1.0))) + _1439) * _1320;
        _1456 = _1287;
        _1458 = _1286;
        _1459 = _1285;
        _1460 = _1297;
        _1461 = _1296;
        _1462 = _1295;
        _1463 = _1307;
        _1464 = _1306;
        _1465 = _1305;
        _1466 = _1320;
        _1467 = _1319;
        _1468 = _1318;
        _1469 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : max(_1364, 0.0)));
        _1470 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1406 : (isnan(_1406) ? 0.0 : max(_1406, 0.0)));
        _1471 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1448 : (isnan(_1448) ? 0.0 : max(_1448, 0.0)));
    }
    else
    {
        _1456 = _1457;
        _1458 = _1457;
        _1459 = _1457;
        _1460 = _1457;
        _1461 = _1457;
        _1462 = _1457;
        _1463 = _1457;
        _1464 = _1457;
        _1465 = _1457;
        _1466 = _1457;
        _1467 = _1457;
        _1468 = _1457;
        _1469 = 0.0;
        _1470 = 0.0;
        _1471 = 0.0;
    }
    float _1764;
    float _1765;
    float _1766;
    float _1767;
    float _1768;
    float _1769;
    float _1770;
    float _1771;
    float _1772;
    float _1773;
    float _1774;
    float _1775;
    float _1776;
    float _1777;
    float _1778;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1495 = fma(_1155, cbModelParam._m0[30u].z, fma(_1151, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1147));
        float _1499 = fma(_1155, cbModelParam._m0[31u].z, fma(_1151, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1147));
        float _1503 = fma(_1155, cbModelParam._m0[32u].z, fma(_1151, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1147));
        float _1526 = _1147 + _936;
        float _1527 = _1151 + _937;
        float _1528 = _1155 + _938;
        float _1538 = fma(_1528, cbModelParam._m0[30u].z, fma(_1527, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1526)) - _1495;
        float _1539 = fma(_1528, cbModelParam._m0[31u].z, fma(_1527, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1526)) - _1499;
        float _1540 = fma(_1528, cbModelParam._m0[32u].z, fma(_1527, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1526)) - _1503;
        float _1544 = inversesqrt(dot(vec3(_1538, _1539, _1540), vec3(_1538, _1539, _1540)));
        float _1557 = ((_1544 * _1538) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1495 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1558 = ((_1544 * _1539) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1499 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1559 = ((_1544 * _1540) / cbModelParam._m0[35u].z) + ((((((_1503 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1561 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1557, _1558, _1559), 0.0);
        vec4 _1568 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1557, _1558, _1559), 0.0);
        vec4 _1575 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1557, _1558, _1559), 0.0);
        vec4 _1582 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1557, _1558, _1559), 0.0);
        float _1594 = exp2((_1561.w + (-0.5)) * 20.0) * 2.0;
        float _1595 = _1594 * (_1561.x + (-0.5));
        float _1596 = _1594 * (_1561.y + (-0.5));
        float _1597 = _1594 * (_1561.z + (-0.5));
        float _1604 = exp2((_1568.w + (-0.5)) * 20.0) * 2.0;
        float _1605 = _1604 * (_1568.x + (-0.5));
        float _1606 = _1604 * (_1568.y + (-0.5));
        float _1607 = _1604 * (_1568.z + (-0.5));
        float _1614 = exp2((_1575.w + (-0.5)) * 20.0) * 2.0;
        float _1615 = _1614 * (_1575.x + (-0.5));
        float _1616 = _1614 * (_1575.y + (-0.5));
        float _1617 = _1614 * (_1575.z + (-0.5));
        float _1624 = exp2((_1582.w + (-0.5)) * 20.0) * 2.0;
        float _1625 = _1624 * (_1582.x + (-0.5));
        float _1626 = _1624 * (_1582.y + (-0.5));
        float _1627 = _1624 * (_1582.z + (-0.5));
        float _1628 = isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0));
        float _1629 = isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0));
        float _1630 = isnan(0.0) ? _1627 : (isnan(_1627) ? 0.0 : max(_1627, 0.0));
        float _1631 = _1595 * 0.5;
        float _1632 = _1605 * 0.5;
        float _1633 = _1615 * 0.5;
        float _1634 = dot(vec3(_1631, _1632, _1633), vec3(_1631, _1632, _1633));
        float _1639 = (_1634 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1634);
        float _1647 = (dot(vec3(_936, _937, _938), vec3(_1639 * _1631, _1639 * _1632, _1639 * _1633)) + 1.0) * 0.5;
        float _4407 = isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0));
        float _1656 = sqrt(((_1632 * _1632) + (_1631 * _1631)) + (_1633 * _1633)) / (_1628 + 9.9999997473787516355514526367188e-06);
        float _4418 = isnan(0.0) ? _1656 : (isnan(_1656) ? 0.0 : max(_1656, 0.0));
        float _1657 = isnan(1.0) ? _4418 : (isnan(_4418) ? 1.0 : min(_4418, 1.0));
        float _1658 = _1657 * 2.0;
        float _1662 = (1.0 - _1657) / (_1657 + 1.0);
        float _4429 = isnan(0.0) ? _1662 : (isnan(_1662) ? 0.0 : max(_1662, 0.0));
        float _1663 = isnan(1.0) ? _4429 : (isnan(_4429) ? 1.0 : min(_4429, 1.0));
        float _1672 = ((((1.0 - _1663) * (_1658 + 2.0)) * exp2(log2(isnan(1.0) ? _4407 : (isnan(_4407) ? 1.0 : min(_4407, 1.0))) * (_1658 + 1.0))) + _1663) * _1628;
        float _1673 = _1596 * 0.5;
        float _1674 = _1606 * 0.5;
        float _1675 = _1616 * 0.5;
        float _1676 = dot(vec3(_1673, _1674, _1675), vec3(_1673, _1674, _1675));
        float _1681 = (_1676 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1676);
        float _1689 = (dot(vec3(_936, _937, _938), vec3(_1681 * _1673, _1681 * _1674, _1681 * _1675)) + 1.0) * 0.5;
        float _4440 = isnan(0.0) ? _1689 : (isnan(_1689) ? 0.0 : max(_1689, 0.0));
        float _1698 = sqrt(((_1674 * _1674) + (_1673 * _1673)) + (_1675 * _1675)) / (_1629 + 9.9999997473787516355514526367188e-06);
        float _4451 = isnan(0.0) ? _1698 : (isnan(_1698) ? 0.0 : max(_1698, 0.0));
        float _1699 = isnan(1.0) ? _4451 : (isnan(_4451) ? 1.0 : min(_4451, 1.0));
        float _1700 = _1699 * 2.0;
        float _1704 = (1.0 - _1699) / (_1699 + 1.0);
        float _4462 = isnan(0.0) ? _1704 : (isnan(_1704) ? 0.0 : max(_1704, 0.0));
        float _1705 = isnan(1.0) ? _4462 : (isnan(_4462) ? 1.0 : min(_4462, 1.0));
        float _1714 = ((((1.0 - _1705) * (_1700 + 2.0)) * exp2(log2(isnan(1.0) ? _4440 : (isnan(_4440) ? 1.0 : min(_4440, 1.0))) * (_1700 + 1.0))) + _1705) * _1629;
        float _1715 = _1597 * 0.5;
        float _1716 = _1607 * 0.5;
        float _1717 = _1617 * 0.5;
        float _1718 = dot(vec3(_1715, _1716, _1717), vec3(_1715, _1716, _1717));
        float _1723 = (_1718 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1718);
        float _1731 = (dot(vec3(_936, _937, _938), vec3(_1723 * _1715, _1723 * _1716, _1723 * _1717)) + 1.0) * 0.5;
        float _4473 = isnan(0.0) ? _1731 : (isnan(_1731) ? 0.0 : max(_1731, 0.0));
        float _1740 = sqrt(((_1716 * _1716) + (_1715 * _1715)) + (_1717 * _1717)) / (_1630 + 9.9999997473787516355514526367188e-06);
        float _4484 = isnan(0.0) ? _1740 : (isnan(_1740) ? 0.0 : max(_1740, 0.0));
        float _1741 = isnan(1.0) ? _4484 : (isnan(_4484) ? 1.0 : min(_4484, 1.0));
        float _1742 = _1741 * 2.0;
        float _1746 = (1.0 - _1741) / (_1741 + 1.0);
        float _4495 = isnan(0.0) ? _1746 : (isnan(_1746) ? 0.0 : max(_1746, 0.0));
        float _1747 = isnan(1.0) ? _4495 : (isnan(_4495) ? 1.0 : min(_4495, 1.0));
        float _1756 = ((((1.0 - _1747) * (_1742 + 2.0)) * exp2(log2(isnan(1.0) ? _4473 : (isnan(_4473) ? 1.0 : min(_4473, 1.0))) * (_1742 + 1.0))) + _1747) * _1630;
        _1764 = _1597;
        _1765 = _1596;
        _1766 = _1595;
        _1767 = _1607;
        _1768 = _1606;
        _1769 = _1605;
        _1770 = _1617;
        _1771 = _1616;
        _1772 = _1615;
        _1773 = _1630;
        _1774 = _1629;
        _1775 = _1628;
        _1776 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0)));
        _1777 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1714 : (isnan(_1714) ? 0.0 : max(_1714, 0.0)));
        _1778 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1756 : (isnan(_1756) ? 0.0 : max(_1756, 0.0)));
    }
    else
    {
        _1764 = _1457;
        _1765 = _1457;
        _1766 = _1457;
        _1767 = _1457;
        _1768 = _1457;
        _1769 = _1457;
        _1770 = _1457;
        _1771 = _1457;
        _1772 = _1457;
        _1773 = _1457;
        _1774 = _1457;
        _1775 = _1457;
        _1776 = 0.0;
        _1777 = 0.0;
        _1778 = 0.0;
    }
    float _1788 = (cbModelParam._m0[1u].x * (_1776 - _1469)) + _1469;
    float _1789 = (cbModelParam._m0[1u].x * (_1777 - _1470)) + _1470;
    float _1790 = (cbModelParam._m0[1u].x * (_1778 - _1471)) + _1471;
    float _1811 = fma(_1790, cbSceneParam._m0[89u].z, fma(_1789, cbSceneParam._m0[89u].y, _1788 * cbSceneParam._m0[89u].x));
    float _1814 = fma(_1790, cbSceneParam._m0[90u].z, fma(_1789, cbSceneParam._m0[90u].y, _1788 * cbSceneParam._m0[90u].x));
    float _1817 = fma(_1790, cbSceneParam._m0[91u].z, fma(_1789, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1788));
    float _1832 = _1094 * 0.5;
    float _1833 = _1095 * 0.5;
    float _1834 = _1096 * 0.5;
    float _1835 = dot(vec4(_1832, _1833, _1834, 1.0), vec4(_1766, _1769, _1772, _1775));
    float _1838 = dot(vec4(_1832, _1833, _1834, 1.0), vec4(_1765, _1768, _1771, _1774));
    float _1841 = dot(vec4(_1832, _1833, _1834, 1.0), vec4(_1764, _1767, _1770, _1773));
    float _1875;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1848 = dot(vec4(_1832, _1833, _1834, 1.0), vec4(_1456, _1460, _1463, _1466));
        float _1852 = dot(vec4(_1832, _1833, _1834, 1.0), vec4(_1458, _1461, _1464, _1467));
        float _1856 = dot(vec4(_1832, _1833, _1834, 1.0), vec4(_1459, _1462, _1465, _1468));
        float _1863 = dot(vec4(cbModelParam._m0[39u]), vec4(_1832, _1833, _1834, 1.0));
        _1875 = dot(vec3(isnan(0.0) ? _1856 : (isnan(_1856) ? 0.0 : max(_1856, 0.0)), isnan(0.0) ? _1852 : (isnan(_1852) ? 0.0 : max(_1852, 0.0)), isnan(0.0) ? _1848 : (isnan(_1848) ? 0.0 : max(_1848, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1863) ? 0.0 : (isnan(0.0) ? _1863 : max(0.0, _1863))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1875 = 1.0;
    }
    float _1886;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1877 = dot(vec4(cbModelParam._m0[40u]), vec4(_1832, _1833, _1834, 1.0));
        _1886 = dot(vec3(isnan(0.0) ? _1835 : (isnan(_1835) ? 0.0 : max(_1835, 0.0)), isnan(0.0) ? _1838 : (isnan(_1838) ? 0.0 : max(_1838, 0.0)), isnan(0.0) ? _1841 : (isnan(_1841) ? 0.0 : max(_1841, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1877) ? 0.0 : (isnan(0.0) ? _1877 : max(0.0, _1877))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1886 = 1.0;
    }
    float _1890 = (_1886 * cbModelParam._m0[1u].x) + (_1875 * (1.0 - cbModelParam._m0[1u].x));
    float _1900 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _939);
    float _1901 = isnan(_1900) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1900 : min(cbModelParam._m0[25u].z, _1900));
    float _1982;
    float _1984;
    float _1986;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1949 = fma(_1155, cbModelParam._m0[13u].z, fma(_1151, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1147)) + cbModelParam._m0[13u].w;
        float _1953 = fma(_1155, cbModelParam._m0[14u].z, fma(_1151, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1147)) + cbModelParam._m0[14u].w;
        float _1957 = fma(_1155, cbModelParam._m0[15u].z, fma(_1151, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1147)) + cbModelParam._m0[15u].w;
        float _1960 = fma(_1096, cbModelParam._m0[13u].z, fma(_1095, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1094));
        float _1963 = fma(_1096, cbModelParam._m0[14u].z, fma(_1095, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1094));
        float _1966 = fma(_1096, cbModelParam._m0[15u].z, fma(_1095, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1094));
        float _1994;
        if (_1960 > 0.0)
        {
            _1994 = abs((1.0 - _1949) / _1960);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1960 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1949 + 1.0) / _1960);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1994 = frontier_phi_14_12_ladder;
        }
        float _2164;
        if (_1963 > 0.0)
        {
            _2164 = abs((1.0 - _1953) / _1963);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1963 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1953 + 1.0) / _1963);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2164 = frontier_phi_23_19_ladder;
        }
        float _2459;
        if (_1966 > 0.0)
        {
            _2459 = abs((1.0 - _1957) / _1966);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1966 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1957 + 1.0) / _1966);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2459 = frontier_phi_35_30_ladder;
        }
        float _2461 = isnan(_2164) ? _1994 : (isnan(_1994) ? _2164 : min(_1994, _2164));
        float _2462 = isnan(_2459) ? _2461 : (isnan(_2461) ? _2459 : min(_2461, _2459));
        float _2466 = (_2462 * _1960) + _1949;
        float _2467 = (_2462 * _1963) + _1953;
        float _2468 = (_2462 * _1966) + _1957;
        float _2469 = _2462 * 9.9999997473787516355514526367188e-05;
        float _2471 = (-1.0) - _2469;
        float _2473 = _2469 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2468 > _2473) || ((_2468 < _2471) || ((_2467 > _2473) || ((_2467 < _2471) || ((_2466 < _2471) || (_2466 > _2473))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2613 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2468, cbModelParam._m0[9u].z, fma(_2467, cbModelParam._m0[9u].y, _2466 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2468, cbModelParam._m0[10u].z, fma(_2467, cbModelParam._m0[10u].y, _2466 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2468, cbModelParam._m0[11u].z, fma(_2467, cbModelParam._m0[11u].y, _2466 * cbModelParam._m0[11u].x))), _1901);
            frontier_phi_13_35_ladder = _2613.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2613.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2613.x * cbModelParam._m0[1u].y;
        }
        _1982 = frontier_phi_13_35_ladder_2;
        _1984 = frontier_phi_13_35_ladder_1;
        _1986 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1970 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1094, _1095, _1096), _1901);
        _1982 = _1970.x * cbModelParam._m0[1u].y;
        _1984 = _1970.y * cbModelParam._m0[1u].y;
        _1986 = _1970.z * cbModelParam._m0[1u].y;
    }
    float _1990 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _939);
    float _1991 = isnan(_1990) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1990 : min(cbModelParam._m0[25u].w, _1990));
    float _2081;
    float _2083;
    float _2085;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2045 = fma(_1155, cbModelParam._m0[21u].z, fma(_1151, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1147)) + cbModelParam._m0[21u].w;
        float _2049 = fma(_1155, cbModelParam._m0[22u].z, fma(_1151, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1147)) + cbModelParam._m0[22u].w;
        float _2053 = fma(_1155, cbModelParam._m0[23u].z, fma(_1151, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1147)) + cbModelParam._m0[23u].w;
        float _2056 = fma(_1096, cbModelParam._m0[21u].z, fma(_1095, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1094));
        float _2059 = fma(_1096, cbModelParam._m0[22u].z, fma(_1095, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1094));
        float _2062 = fma(_1096, cbModelParam._m0[23u].z, fma(_1095, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1094));
        float _2169;
        if (_2056 > 0.0)
        {
            _2169 = abs((1.0 - _2045) / _2056);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2056 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2045 + 1.0) / _2056);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2169 = frontier_phi_25_21_ladder;
        }
        float _2486;
        if (_2059 > 0.0)
        {
            _2486 = abs((1.0 - _2049) / _2059);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2059 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2049 + 1.0) / _2059);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2486 = frontier_phi_37_32_ladder;
        }
        float _2813;
        if (_2062 > 0.0)
        {
            _2813 = abs((1.0 - _2053) / _2062);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2062 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2053 + 1.0) / _2062);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2813 = frontier_phi_47_44_ladder;
        }
        float _2815 = isnan(_2486) ? _2169 : (isnan(_2169) ? _2486 : min(_2169, _2486));
        float _2816 = isnan(_2813) ? _2815 : (isnan(_2815) ? _2813 : min(_2815, _2813));
        float _2820 = (_2816 * _2056) + _2045;
        float _2821 = (_2816 * _2059) + _2049;
        float _2822 = (_2816 * _2062) + _2053;
        float _2823 = _2816 * 9.9999997473787516355514526367188e-05;
        float _2824 = (-1.0) - _2823;
        float _2826 = _2823 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2822 > _2826) || ((_2822 < _2824) || ((_2821 > _2826) || ((_2821 < _2824) || ((_2820 < _2824) || (_2820 > _2826))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2940 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2822, cbModelParam._m0[17u].z, fma(_2821, cbModelParam._m0[17u].y, _2820 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2822, cbModelParam._m0[18u].z, fma(_2821, cbModelParam._m0[18u].y, _2820 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2822, cbModelParam._m0[19u].z, fma(_2821, cbModelParam._m0[19u].y, _2820 * cbModelParam._m0[19u].x))), _1991);
            frontier_phi_22_47_ladder = _2940.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2940.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2940.x * cbModelParam._m0[1u].z;
        }
        _2081 = frontier_phi_22_47_ladder_2;
        _2083 = frontier_phi_22_47_ladder_1;
        _2085 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2065 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1094, _1095, _1096), _1991);
        _2081 = _2065.x * cbModelParam._m0[1u].z;
        _2083 = _2065.y * cbModelParam._m0[1u].z;
        _2085 = _2065.z * cbModelParam._m0[1u].z;
    }
    float _2097 = ((((1.0 - _1115) * ((_1102 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1115 * _1102)) * _1086;
    float _2098 = _2097 * ((cbModelParam._m0[1u].w * (_2081 - _1982)) + _1982);
    float _2099 = _2097 * ((cbModelParam._m0[1u].w * (_2083 - _1984)) + _1984);
    float _2100 = _2097 * ((cbModelParam._m0[1u].w * (_2085 - _1986)) + _1986);
    float _2103 = fma(_2100, cbSceneParam._m0[89u].z, fma(_2099, cbSceneParam._m0[89u].y, _2098 * cbSceneParam._m0[89u].x));
    float _2106 = fma(_2100, cbSceneParam._m0[90u].z, fma(_2099, cbSceneParam._m0[90u].y, _2098 * cbSceneParam._m0[90u].x));
    float _2109 = fma(_2100, cbSceneParam._m0[91u].z, fma(_2099, cbSceneParam._m0[91u].y, _2098 * cbSceneParam._m0[91u].x));
    float _2143 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2147 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2151 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2155 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2156 = _2143 / _2155;
    float _2157 = _2147 / _2155;
    float _2158 = _2151 / _2155;
    float _2305;
    float _2306;
    float _2307;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2185 = ((uint(_2158 > cbSceneParam._m0[59u].y) + uint(_2158 > cbSceneParam._m0[59u].x)) + uint(_2158 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2186 = _2185 + 43u;
        uint _2194 = _2185 + 44u;
        uint _2202 = _2185 + 45u;
        uint _2210 = _2185 + 46u;
        float _2221 = fma(_2155, cbSceneParam._m0[_2186].w, fma(_2151, cbSceneParam._m0[_2186].z, fma(_2147, cbSceneParam._m0[_2186].y, _2143 * cbSceneParam._m0[_2186].x)));
        float _2225 = fma(_2155, cbSceneParam._m0[_2194].w, fma(_2151, cbSceneParam._m0[_2194].z, fma(_2147, cbSceneParam._m0[_2194].y, _2143 * cbSceneParam._m0[_2194].x)));
        float _2233 = fma(_2155, cbSceneParam._m0[_2210].w, fma(_2151, cbSceneParam._m0[_2210].z, fma(_2147, cbSceneParam._m0[_2210].y, _2143 * cbSceneParam._m0[_2210].x)));
        float _2238 = cbSceneParam._m0[33u].z * _2233;
        float _2240 = cbSceneParam._m0[33u].w * _2233;
        float _2243 = fma(_2155, cbSceneParam._m0[_2202].w, fma(_2151, cbSceneParam._m0[_2202].z, fma(_2147, cbSceneParam._m0[_2202].y, _2143 * cbSceneParam._m0[_2202].x))) / _2233;
        float _2291 = (cbSceneParam._m0[33u].x - sqrt(((_2157 * _2157) + (_2156 * _2156)) + (_2158 * _2158))) * cbSceneParam._m0[33u].y;
        float _4621 = isnan(0.0) ? _2291 : (isnan(_2291) ? 0.0 : max(_2291, 0.0));
        float _2298 = (isnan(1.0) ? _4621 : (isnan(_4621) ? 1.0 : min(_4621, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2238 + _2221) / _2233, (_2240 + _2225) / _2233), _2243), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2240 + _2221) / _2233, (_2225 - _2238) / _2233), _2243), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2221 - _2238) / _2233, (_2225 - _2240) / _2233), _2243), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2221 - _2240) / _2233, (_2238 + _2225) / _2233), _2243), 0.0)).x), vec4(0.25)));
        _2305 = 1.0 - (_2298 * cbSceneParam._m0[34u].x);
        _2306 = 1.0 - (_2298 * cbSceneParam._m0[34u].y);
        _2307 = 1.0 - (_2298 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2305 = 1.0;
        _2306 = 1.0;
        _2307 = 1.0;
    }
    float _2371;
    float _2373;
    float _2375;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2359 = fma(_2155, cbSceneParam._m0[63u].w, fma(_2151, cbSceneParam._m0[63u].z, fma(_2147, cbSceneParam._m0[63u].y, _2143 * cbSceneParam._m0[63u].x)));
        float _2360 = fma(_2155, cbSceneParam._m0[60u].w, fma(_2151, cbSceneParam._m0[60u].z, fma(_2147, cbSceneParam._m0[60u].y, _2143 * cbSceneParam._m0[60u].x))) / _2359;
        float _2361 = fma(_2155, cbSceneParam._m0[61u].w, fma(_2151, cbSceneParam._m0[61u].z, fma(_2147, cbSceneParam._m0[61u].y, _2143 * cbSceneParam._m0[61u].x))) / _2359;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2360 >= cbSceneParam._m0[64u].x) && (_2361 >= cbSceneParam._m0[64u].y)) && (_2360 <= cbSceneParam._m0[64u].z)) && (_2361 <= cbSceneParam._m0[64u].w))
        {
            float _2499 = fma(_2155, cbSceneParam._m0[62u].w, fma(_2151, cbSceneParam._m0[62u].z, fma(_2147, cbSceneParam._m0[62u].y, _2143 * cbSceneParam._m0[62u].x))) / _2359;
            float _2503 = isnan(cbSceneParam._m0[41u].w) ? _2499 : (isnan(_2499) ? cbSceneParam._m0[41u].w : max(_2499, cbSceneParam._m0[41u].w));
            float _2546 = (cbSceneParam._m0[33u].x - sqrt(((_2157 * _2157) + (_2156 * _2156)) + (_2158 * _2158))) * cbSceneParam._m0[33u].y;
            float _4637 = isnan(0.0) ? _2546 : (isnan(_2546) ? 0.0 : max(_2546, 0.0));
            float _2553 = (isnan(1.0) ? _4637 : (isnan(_4637) ? 1.0 : min(_4637, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2360, cbSceneParam._m0[33u].w + _2361), _2503), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2360, _2361 - cbSceneParam._m0[33u].z), _2503), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2360 - cbSceneParam._m0[33u].z, _2361 - cbSceneParam._m0[33u].w), _2503), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2360 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2361), _2503), 0.0)).x), vec4(0.25)));
            float _2557 = 1.0 - (_2553 * cbSceneParam._m0[34u].x);
            float _2558 = 1.0 - (_2553 * cbSceneParam._m0[34u].y);
            float _2559 = 1.0 - (_2553 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2559) ? _2307 : (isnan(_2307) ? _2559 : min(_2307, _2559));
            frontier_phi_34_33_ladder_1 = isnan(_2558) ? _2306 : (isnan(_2306) ? _2558 : min(_2306, _2558));
            frontier_phi_34_33_ladder_2 = isnan(_2557) ? _2305 : (isnan(_2305) ? _2557 : min(_2305, _2557));
        }
        else
        {
            frontier_phi_34_33_ladder = _2307;
            frontier_phi_34_33_ladder_1 = _2306;
            frontier_phi_34_33_ladder_2 = _2305;
        }
        _2371 = frontier_phi_34_33_ladder_2;
        _2373 = frontier_phi_34_33_ladder_1;
        _2375 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2371 = _2305;
        _2373 = _2306;
        _2375 = _2307;
    }
    uvec4 _2380 = floatBitsToUint(cbInstanceData._m0[_283 + 5u]);
    uint _2382 = _2380.x * 14u;
    uint _2383 = _2382 + 13u;
    float _2390 = _1086 + (-1.0);
    float _2395 = (cbLight._m0[_2383].x * _2390) + 1.0;
    float _2396 = (cbLight._m0[_2383].y * _2390) + 1.0;
    float _2397 = (cbLight._m0[_2383].z * _2390) + 1.0;
    float _2398 = (cbLight._m0[_2383].w * _2390) + 1.0;
    uint _2399 = _2382 + 5u;
    float _2405 = isnan(1.0) ? _2396 : (isnan(_2396) ? 1.0 : min(_2396, 1.0));
    uint _2409 = _2382 + 4u;
    float _2418 = isnan(1.0) ? _2395 : (isnan(_2395) ? 1.0 : min(_2395, 1.0));
    uint _2422 = _2382 | 1u;
    float _2433 = dot(vec3(cbLight._m0[_2382].xyz), vec3(_936, _937, _938));
    float _2436 = dot(vec3(cbLight._m0[_2422].xyz), vec3(_936, _937, _938));
    float _4673 = isnan(0.0) ? _2433 : (isnan(_2433) ? 0.0 : max(_2433, 0.0));
    float _4684 = isnan(0.0) ? _2436 : (isnan(_2436) ? 0.0 : max(_2436, 0.0));
    float _2441 = (isnan(1.0) ? _4673 : (isnan(_4673) ? 1.0 : min(_4673, 1.0))) * 0.3183098733425140380859375;
    float _2443 = (isnan(1.0) ? _4684 : (isnan(_4684) ? 1.0 : min(_4684, 1.0))) * 0.3183098733425140380859375;
    float _2450 = ((cbLight._m0[_2399].x * _2405) * _2443) + (((cbLight._m0[_2409].x * _2371) * _2418) * _2441);
    float _2451 = ((_2405 * cbLight._m0[_2399].y) * _2443) + (((cbLight._m0[_2409].y * _2373) * _2418) * _2441);
    float _2452 = ((_2405 * cbLight._m0[_2399].z) * _2443) + (((cbLight._m0[_2409].z * _2375) * _2418) * _2441);
    uvec4 _2456 = floatBitsToUint(cbLight._m0[_2382 + 12u]);
    bool _2458 = _2456.x == 0u;
    float _2560;
    float _2562;
    float _2564;
    if (_2458)
    {
        _2560 = _2450;
        _2562 = _2451;
        _2564 = _2452;
    }
    else
    {
        uint _2568 = _2382 + 6u;
        float _2584 = (dot(vec3(cbLight._m0[_2382 + 2u].xyz), vec3(_936, _937, _938)) * 0.5) + 0.5;
        float _2585 = _2584 * _2584;
        float _4695 = isnan(0.0) ? _2585 : (isnan(_2585) ? 0.0 : max(_2585, 0.0));
        float _2586 = isnan(1.0) ? _4695 : (isnan(_4695) ? 1.0 : min(_4695, 1.0));
        float _2587 = isnan(1.0) ? _2397 : (isnan(_2397) ? 1.0 : min(_2397, 1.0));
        _2560 = (((cbLight._m0[_2568].x * 0.3183098733425140380859375) * _2586) * _2587) + _2450;
        _2562 = (((cbLight._m0[_2568].y * 0.3183098733425140380859375) * _2586) * _2587) + _2451;
        _2564 = (((cbLight._m0[_2568].z * 0.3183098733425140380859375) * _2586) * _2587) + _2452;
    }
    bool _2567 = _2456.y == 0u;
    float _2622;
    float _2624;
    float _2626;
    if (_2567)
    {
        _2622 = _2560;
        _2624 = _2562;
        _2626 = _2564;
    }
    else
    {
        uint _2784 = _2382 + 7u;
        float _2800 = (dot(vec3(cbLight._m0[_2382 + 3u].xyz), vec3(_936, _937, _938)) * 0.5) + 0.5;
        float _2801 = _2800 * _2800;
        float _4711 = isnan(0.0) ? _2801 : (isnan(_2801) ? 0.0 : max(_2801, 0.0));
        float _2802 = isnan(1.0) ? _4711 : (isnan(_4711) ? 1.0 : min(_4711, 1.0));
        float _2803 = isnan(1.0) ? _2398 : (isnan(_2398) ? 1.0 : min(_2398, 1.0));
        _2622 = (((cbLight._m0[_2784].x * 0.3183098733425140380859375) * _2802) * _2803) + _2560;
        _2624 = (((cbLight._m0[_2784].y * 0.3183098733425140380859375) * _2802) * _2803) + _2562;
        _2626 = (((cbLight._m0[_2784].z * 0.3183098733425140380859375) * _2802) * _2803) + _2564;
    }
    uint _2629 = _2382 + 8u;
    float _2642 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2382].w)) * _939) * 0.949999988079071044921875);
    float _2643 = _2642 * _2642;
    float _2644 = cbLight._m0[_2382].x + _1015;
    float _2645 = cbLight._m0[_2382].y + _1016;
    float _2646 = cbLight._m0[_2382].z + _1017;
    float _2650 = inversesqrt(dot(vec3(_2644, _2645, _2646), vec3(_2644, _2645, _2646)));
    float _2651 = _2650 * _2644;
    float _2652 = _2650 * _2645;
    float _2653 = _2650 * _2646;
    float _2654 = dot(vec3(_936, _937, _938), vec3(cbLight._m0[_2382].xyz));
    float _4727 = isnan(0.0) ? _2654 : (isnan(_2654) ? 0.0 : max(_2654, 0.0));
    float _2657 = isnan(1.0) ? _4727 : (isnan(_4727) ? 1.0 : min(_4727, 1.0));
    float _4738 = isnan(0.0) ? _1087 : (isnan(_1087) ? 0.0 : max(_1087, 0.0));
    float _2658 = isnan(1.0) ? _4738 : (isnan(_4738) ? 1.0 : min(_4738, 1.0));
    float _2659 = dot(vec3(_936, _937, _938), vec3(_2651, _2652, _2653));
    float _4749 = isnan(0.0) ? _2659 : (isnan(_2659) ? 0.0 : max(_2659, 0.0));
    float _2662 = isnan(1.0) ? _4749 : (isnan(_4749) ? 1.0 : min(_4749, 1.0));
    float _2663 = dot(vec3(cbLight._m0[_2382].xyz), vec3(_2651, _2652, _2653));
    float _4760 = isnan(0.0) ? _2663 : (isnan(_2663) ? 0.0 : max(_2663, 0.0));
    float _2667 = _2643 * _2643;
    float _2671 = ((_2662 * _2662) * (_2667 + (-1.0))) + 1.0;
    float _2682 = (exp2(log2(1.0 - (isnan(1.0) ? _4760 : (isnan(_4760) ? 1.0 : min(_4760, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2683 = 1.0 - _2643;
    float _2694 = (0.5 / (((_2658 * ((_2657 * _2683) + _2643)) + 9.9999999392252902907785028219223e-09) + (((_2658 * _2683) + _2643) * _2657))) * _2657;
    float _4771 = isnan(0.0) ? _2694 : (isnan(_2694) ? 0.0 : max(_2694, 0.0));
    float _2696 = (isnan(1.0) ? _4771 : (isnan(_4771) ? 1.0 : min(_4771, 1.0))) * (_2667 / ((_2671 * _2671) * 3.141590118408203125));
    uint _2710 = _2382 + 9u;
    float _2721 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2422].w)) * _939) * 0.949999988079071044921875);
    float _2722 = _2721 * _2721;
    float _2723 = cbLight._m0[_2422].x + _1015;
    float _2724 = cbLight._m0[_2422].y + _1016;
    float _2725 = cbLight._m0[_2422].z + _1017;
    float _2729 = inversesqrt(dot(vec3(_2723, _2724, _2725), vec3(_2723, _2724, _2725)));
    float _2730 = _2729 * _2723;
    float _2731 = _2729 * _2724;
    float _2732 = _2729 * _2725;
    float _2733 = dot(vec3(_936, _937, _938), vec3(cbLight._m0[_2422].xyz));
    float _4782 = isnan(0.0) ? _2733 : (isnan(_2733) ? 0.0 : max(_2733, 0.0));
    float _2736 = isnan(1.0) ? _4782 : (isnan(_4782) ? 1.0 : min(_4782, 1.0));
    float _2737 = dot(vec3(_936, _937, _938), vec3(_2730, _2731, _2732));
    float _4793 = isnan(0.0) ? _2737 : (isnan(_2737) ? 0.0 : max(_2737, 0.0));
    float _2740 = isnan(1.0) ? _4793 : (isnan(_4793) ? 1.0 : min(_4793, 1.0));
    float _2741 = dot(vec3(cbLight._m0[_2422].xyz), vec3(_2730, _2731, _2732));
    float _4804 = isnan(0.0) ? _2741 : (isnan(_2741) ? 0.0 : max(_2741, 0.0));
    float _2745 = _2722 * _2722;
    float _2749 = ((_2740 * _2740) * (_2745 + (-1.0))) + 1.0;
    float _2758 = (exp2(log2(1.0 - (isnan(1.0) ? _4804 : (isnan(_4804) ? 1.0 : min(_4804, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2759 = 1.0 - _2722;
    float _2769 = (0.5 / (((_2658 * ((_2736 * _2759) + _2722)) + 9.9999999392252902907785028219223e-09) + (((_2658 * _2759) + _2722) * _2736))) * _2736;
    float _4815 = isnan(0.0) ? _2769 : (isnan(_2769) ? 0.0 : max(_2769, 0.0));
    float _2771 = (isnan(1.0) ? _4815 : (isnan(_4815) ? 1.0 : min(_4815, 1.0))) * (_2745 / ((_2749 * _2749) * 3.141590118408203125));
    float _2781 = (((_2758 * cbLight._m0[_2710].x) * _2771) * _2405) + ((((cbLight._m0[_2629].x * _2371) * _2682) * _2696) * _2418);
    float _2782 = (((_2758 * cbLight._m0[_2710].y) * _2771) * _2405) + ((((cbLight._m0[_2629].y * _2373) * _2682) * _2696) * _2418);
    float _2783 = (((_2758 * cbLight._m0[_2710].z) * _2771) * _2405) + ((((cbLight._m0[_2629].z * _2375) * _2682) * _2696) * _2418);
    float _2839;
    float _2841;
    float _2843;
    if (_2458)
    {
        _2839 = _2781;
        _2841 = _2782;
        _2843 = _2783;
    }
    else
    {
        uint _2845 = _2382 + 2u;
        uint _2849 = _2382 + 10u;
        float _2863 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2845].w)) * _939) * 0.949999988079071044921875);
        float _2864 = _2863 * _2863;
        float _2865 = cbLight._m0[_2845].x + _1015;
        float _2866 = cbLight._m0[_2845].y + _1016;
        float _2867 = cbLight._m0[_2845].z + _1017;
        float _2871 = inversesqrt(dot(vec3(_2865, _2866, _2867), vec3(_2865, _2866, _2867)));
        float _2872 = _2871 * _2865;
        float _2873 = _2871 * _2866;
        float _2874 = _2871 * _2867;
        float _2875 = dot(vec3(_936, _937, _938), vec3(cbLight._m0[_2845].xyz));
        float _4826 = isnan(0.0) ? _2875 : (isnan(_2875) ? 0.0 : max(_2875, 0.0));
        float _2878 = isnan(1.0) ? _4826 : (isnan(_4826) ? 1.0 : min(_4826, 1.0));
        float _2879 = dot(vec3(_936, _937, _938), vec3(_2872, _2873, _2874));
        float _4837 = isnan(0.0) ? _2879 : (isnan(_2879) ? 0.0 : max(_2879, 0.0));
        float _2882 = isnan(1.0) ? _4837 : (isnan(_4837) ? 1.0 : min(_4837, 1.0));
        float _2883 = dot(vec3(cbLight._m0[_2845].xyz), vec3(_2872, _2873, _2874));
        float _4848 = isnan(0.0) ? _2883 : (isnan(_2883) ? 0.0 : max(_2883, 0.0));
        float _2887 = _2864 * _2864;
        float _2891 = ((_2882 * _2882) * (_2887 + (-1.0))) + 1.0;
        float _2900 = (exp2(log2(1.0 - (isnan(1.0) ? _4848 : (isnan(_4848) ? 1.0 : min(_4848, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2901 = 1.0 - _2864;
        float _2911 = (0.5 / (((_2658 * ((_2878 * _2901) + _2864)) + 9.9999999392252902907785028219223e-09) + (((_2658 * _2901) + _2864) * _2878))) * _2878;
        float _4859 = isnan(0.0) ? _2911 : (isnan(_2911) ? 0.0 : max(_2911, 0.0));
        float _2913 = (isnan(1.0) ? _4859 : (isnan(_4859) ? 1.0 : min(_4859, 1.0))) * (_2887 / ((_2891 * _2891) * 3.141590118408203125));
        float _2914 = isnan(1.0) ? _2397 : (isnan(_2397) ? 1.0 : min(_2397, 1.0));
        _2839 = (((_2900 * cbLight._m0[_2849].x) * _2913) * _2914) + _2781;
        _2841 = (((_2900 * cbLight._m0[_2849].y) * _2913) * _2914) + _2782;
        _2843 = (((_2900 * cbLight._m0[_2849].z) * _2913) * _2914) + _2783;
    }
    float _2945;
    float _2947;
    float _2949;
    if (_2567)
    {
        _2945 = _2839;
        _2947 = _2841;
        _2949 = _2843;
    }
    else
    {
        uint _2956 = _2382 + 3u;
        uint _2960 = _2382 + 11u;
        float _2974 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2956].w)) * _939) * 0.949999988079071044921875);
        float _2975 = _2974 * _2974;
        float _2976 = cbLight._m0[_2956].x + _1015;
        float _2977 = cbLight._m0[_2956].y + _1016;
        float _2978 = cbLight._m0[_2956].z + _1017;
        float _2982 = inversesqrt(dot(vec3(_2976, _2977, _2978), vec3(_2976, _2977, _2978)));
        float _2983 = _2982 * _2976;
        float _2984 = _2982 * _2977;
        float _2985 = _2982 * _2978;
        float _2986 = dot(vec3(_936, _937, _938), vec3(cbLight._m0[_2956].xyz));
        float _4875 = isnan(0.0) ? _2986 : (isnan(_2986) ? 0.0 : max(_2986, 0.0));
        float _2989 = isnan(1.0) ? _4875 : (isnan(_4875) ? 1.0 : min(_4875, 1.0));
        float _2990 = dot(vec3(_936, _937, _938), vec3(_2983, _2984, _2985));
        float _4886 = isnan(0.0) ? _2990 : (isnan(_2990) ? 0.0 : max(_2990, 0.0));
        float _2993 = isnan(1.0) ? _4886 : (isnan(_4886) ? 1.0 : min(_4886, 1.0));
        float _2994 = dot(vec3(cbLight._m0[_2956].xyz), vec3(_2983, _2984, _2985));
        float _4897 = isnan(0.0) ? _2994 : (isnan(_2994) ? 0.0 : max(_2994, 0.0));
        float _2998 = _2975 * _2975;
        float _3002 = ((_2993 * _2993) * (_2998 + (-1.0))) + 1.0;
        float _3011 = (exp2(log2(1.0 - (isnan(1.0) ? _4897 : (isnan(_4897) ? 1.0 : min(_4897, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3012 = 1.0 - _2975;
        float _3022 = (0.5 / (((_2658 * ((_2989 * _3012) + _2975)) + 9.9999999392252902907785028219223e-09) + (((_2658 * _3012) + _2975) * _2989))) * _2989;
        float _4908 = isnan(0.0) ? _3022 : (isnan(_3022) ? 0.0 : max(_3022, 0.0));
        float _3024 = (isnan(1.0) ? _4908 : (isnan(_4908) ? 1.0 : min(_4908, 1.0))) * (_2998 / ((_3002 * _3002) * 3.141590118408203125));
        float _3025 = isnan(1.0) ? _2398 : (isnan(_2398) ? 1.0 : min(_2398, 1.0));
        _2945 = (((_3011 * cbLight._m0[_2960].x) * _3024) * _3025) + _2839;
        _2947 = (((_3011 * cbLight._m0[_2960].y) * _3024) * _3025) + _2841;
        _2949 = (((_3011 * cbLight._m0[_2960].z) * _3024) * _3025) + _2843;
    }
    float _3091;
    float _3093;
    float _3095;
    float _3097;
    float _3099;
    float _3101;
    if (_2380.y == 0u)
    {
        uvec4 _3046 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3047 = _3046.x;
        uint _3058 = uint((float(_3046.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1024) / _3047))) + floor(float(uint(cbSceneParam._m0[85u].x * _1023) / _3047)));
        float _3068 = (log2(_2158 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3069 = isnan(0.0) ? _3068 : (isnan(_3068) ? 0.0 : max(_3068, 0.0));
        uint _3072 = uint(isnan(14.0) ? _3069 : (isnan(_3069) ? 14.0 : min(_3069, 14.0)));
        uvec4 _3077 = texelFetch(g_lightClusterGridBuffer, int(((_3072 << 2u) + (_3058 << 6u)) >> 2u));
        uint _3078 = _3077.x;
        uint _3079 = _3046.z;
        float _3158;
        float _3160;
        float _3162;
        float _3164;
        float _3166;
        float _3168;
        if (((((1u << ((_3079 >> 4u) & 15u)) + 4294967295u) & _3078) == 0u) || ((_3079 & 240u) == 0u))
        {
            _3158 = 0.0;
            _3160 = 0.0;
            _3162 = 0.0;
            _3164 = 0.0;
            _3166 = 0.0;
            _3168 = 0.0;
        }
        else
        {
            float _3159;
            float _3161;
            float _3163;
            float _3165;
            float _3167;
            float _3169;
            float _3302 = 0.0;
            float _3303 = 0.0;
            float _3304 = 0.0;
            float _3305 = 0.0;
            float _3306 = 0.0;
            float _3307 = 0.0;
            uint _3308 = 0u;
            uint _3317;
            bool _3318;
            for (;;)
            {
                _3317 = texelFetch(g_lightClassification, int((((_3072 << 5u) + (_3058 << 9u)) + (_3308 << 2u)) >> 2u)).x;
                _3318 = _3317 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3318)
                {
                    frontier_phi_66_pred = _3307;
                    frontier_phi_66_pred_1 = _3306;
                    frontier_phi_66_pred_2 = _3305;
                    frontier_phi_66_pred_3 = _3304;
                    frontier_phi_66_pred_4 = _3303;
                    frontier_phi_66_pred_5 = _3302;
                }
                else
                {
                    float _3426;
                    float _3427;
                    float _3428;
                    float _3429;
                    float _3430;
                    float _3431;
                    uint _3432;
                    _3426 = _3302;
                    _3427 = _3303;
                    _3428 = _3304;
                    _3429 = _3305;
                    _3430 = _3306;
                    _3431 = _3307;
                    _3432 = _3317;
                    float _3358;
                    float _3359;
                    float _3360;
                    float _3361;
                    float _3362;
                    float _3363;
                    for (;;)
                    {
                        uint _3436 = uint(findLSB(_3432)) + (_3308 << 5u);
                        uint _3433 = (_3432 + 4294967295u) & _3432;
                        uint _3438 = _3436 * 48u;
                        vec4 _3452 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3438)).x, texelFetch(g_PointLightRenderingBuffer, int(_3438 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3438 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3438 + 3u)).x));
                        uint _3458 = (_3436 * 48u) + 4u;
                        vec4 _3471 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3458)).x, texelFetch(g_PointLightRenderingBuffer, int(_3458 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3458 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3458 + 3u)).x));
                        uint _3477 = (_3436 * 48u) + 8u;
                        vec3 _3488 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3477)).x, texelFetch(g_PointLightRenderingBuffer, int(_3477 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3477 + 2u)).x));
                        float _3492 = _3452.x - _2156;
                        float _3493 = _3452.y - _2157;
                        float _3494 = _3452.z - _2158;
                        float _3495 = dot(vec3(_3492, _3493, _3494), vec3(_3492, _3493, _3494));
                        float _3498 = inversesqrt(_3495);
                        float _3499 = _3498 * _3492;
                        float _3500 = _3498 * _3493;
                        float _3501 = _3498 * _3494;
                        float _3502 = dot(vec3(_1042, _1045, _1048), vec3(_3499, _3500, _3501));
                        float _3507 = 1.0 - (_3495 * _3452.w);
                        float _4934 = isnan(0.0) ? _3507 : (isnan(_3507) ? 0.0 : max(_3507, 0.0));
                        float _3508 = isnan(1.0) ? _4934 : (isnan(_4934) ? 1.0 : min(_4934, 1.0));
                        float _3509 = sqrt(_3495) * _3471.w;
                        float _3512 = 1.39999997615814208984375 / (_3509 + 1.39999997615814208984375);
                        float _3513 = _3512 * _3512;
                        float _3516 = ((1.0 - _3513) * _3502) + _3513;
                        float _3519 = _3509 * _3509;
                        float _3523 = ((isnan(0.0) ? _3516 : (isnan(_3516) ? 0.0 : max(_3516, 0.0))) * _3508) / ((_3519 * 0.699999988079071044921875) + 1.0);
                        float _3527 = (-0.0) - _2156;
                        float _3528 = (-0.0) - _2157;
                        float _3529 = (-0.0) - _2158;
                        float _3533 = inversesqrt(dot(vec3(_3527, _3528, _3529), vec3(_3527, _3528, _3529)));
                        float _3534 = _3533 * _3527;
                        float _3535 = _3533 * _3528;
                        float _3536 = _3533 * _3529;
                        float _3543 = exp2(log2(1.0 / ((_3519 * 3.5) + 5.0)) * 0.25);
                        float _3544 = 1.0 - _1102;
                        float _3551 = sqrt(1.0 - ((1.0 - (_3544 * _3544)) * (1.0 - (_3543 * _3543))));
                        float _3552 = _3551 * _3551;
                        float _3553 = _3552 * _3552;
                        float _3554 = _3534 + _3499;
                        float _3555 = _3535 + _3500;
                        float _3556 = _3536 + _3501;
                        float _3560 = inversesqrt(dot(vec3(_3554, _3555, _3556), vec3(_3554, _3555, _3556)));
                        float _3564 = dot(vec3(_1042, _1045, _1048), vec3(_3534, _3535, _3536));
                        float _4950 = isnan(0.0) ? _3564 : (isnan(_3564) ? 0.0 : max(_3564, 0.0));
                        float _3567 = isnan(1.0) ? _4950 : (isnan(_4950) ? 1.0 : min(_4950, 1.0));
                        float _3568 = dot(vec3(_1042, _1045, _1048), vec3(_3560 * _3554, _3560 * _3555, _3560 * _3556));
                        float _4961 = isnan(0.0) ? _3568 : (isnan(_3568) ? 0.0 : max(_3568, 0.0));
                        float _3571 = isnan(1.0) ? _4961 : (isnan(_4961) ? 1.0 : min(_4961, 1.0));
                        float _3575 = ((_3571 * _3571) * (_3553 + (-1.0))) + 1.0;
                        float _3576 = _3512 * _3552;
                        float _3577 = _3576 * _3576;
                        float _3580 = ((1.0 - _3577) * _3502) + _3577;
                        float _4972 = isnan(0.0) ? _3580 : (isnan(_3580) ? 0.0 : max(_3580, 0.0));
                        float _3581 = isnan(1.0) ? _4972 : (isnan(_4972) ? 1.0 : min(_4972, 1.0));
                        float _3582 = 1.0 - _3552;
                        float _3592 = (0.5 / (((_3581 * ((_3567 * _3582) + _3552)) + 9.9999999392252902907785028219223e-09) + (((_3581 * _3582) + _3552) * _3567))) * _3581;
                        float _4983 = isnan(0.0) ? _3592 : (isnan(_3592) ? 0.0 : max(_3592, 0.0));
                        float _3603 = (((_3553 * 3.1415927410125732421875) * (isnan(1.0) ? _4983 : (isnan(_4983) ? 1.0 : min(_4983, 1.0)))) / ((_3575 * _3575) * ((_3519 * 2.1991131305694580078125) + 3.141590118408203125))) * _3508;
                        _3361 = (_3523 * _3471.x) + _3429;
                        _3362 = (_3523 * _3471.y) + _3430;
                        _3363 = (_3523 * _3471.z) + _3431;
                        _3358 = (_3603 * _3488.x) + _3426;
                        _3359 = (_3603 * _3488.y) + _3427;
                        _3360 = (_3603 * _3488.z) + _3428;
                        if (_3433 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3426 = _3358;
                            _3427 = _3359;
                            _3428 = _3360;
                            _3429 = _3361;
                            _3430 = _3362;
                            _3431 = _3363;
                            _3432 = _3433;
                        }
                    }
                    frontier_phi_66_pred = _3363;
                    frontier_phi_66_pred_1 = _3362;
                    frontier_phi_66_pred_2 = _3361;
                    frontier_phi_66_pred_3 = _3360;
                    frontier_phi_66_pred_4 = _3359;
                    frontier_phi_66_pred_5 = _3358;
                }
                _3169 = frontier_phi_66_pred;
                _3167 = frontier_phi_66_pred_1;
                _3165 = frontier_phi_66_pred_2;
                _3163 = frontier_phi_66_pred_3;
                _3161 = frontier_phi_66_pred_4;
                _3159 = frontier_phi_66_pred_5;
                uint _3309 = _3308 + 1u;
                if (_3309 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3302 = _3159;
                    _3303 = _3161;
                    _3304 = _3163;
                    _3305 = _3165;
                    _3306 = _3167;
                    _3307 = _3169;
                    _3308 = _3309;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3158 = _3159;
            _3160 = _3161;
            _3162 = _3163;
            _3164 = _3165;
            _3166 = _3167;
            _3168 = _3169;
        }
        uvec4 _3172 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3173 = _3172.z;
        uint _3175 = (_3173 >> 8u) & 15u;
        float _3270;
        float _3272;
        float _3274;
        float _3276;
        float _3278;
        float _3280;
        if (((4294967295u << _3175) & _3078) == 0u)
        {
            _3270 = _3158;
            _3272 = _3160;
            _3274 = _3162;
            _3276 = _3164;
            _3278 = _3166;
            _3280 = _3168;
        }
        else
        {
            float _3295 = inversesqrt(dot(vec3(_2156, _2157, _2158), vec3(_2156, _2157, _2158)));
            float _3296 = _3295 * _2156;
            float _3297 = _3295 * _2157;
            float _3298 = _3295 * _2158;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3175 < ((_3173 >> 12u) & 15u))
            {
                float _3271;
                float _3273;
                float _3275;
                float _3277;
                float _3279;
                float _3281;
                float _3409 = _3158;
                float _3410 = _3160;
                float _3411 = _3162;
                float _3412 = _3164;
                float _3413 = _3166;
                float _3414 = _3168;
                uint _3415 = _3175;
                uint _3424;
                bool _3425;
                for (;;)
                {
                    _3424 = texelFetch(g_lightClassification, int((((_3072 << 5u) + (_3058 << 9u)) + (_3415 << 2u)) >> 2u)).x;
                    _3425 = _3424 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3425)
                    {
                        frontier_phi_72_pred = _3414;
                        frontier_phi_72_pred_1 = _3413;
                        frontier_phi_72_pred_2 = _3412;
                        frontier_phi_72_pred_3 = _3411;
                        frontier_phi_72_pred_4 = _3410;
                        frontier_phi_72_pred_5 = _3409;
                    }
                    else
                    {
                        float _3608;
                        float _3609;
                        float _3610;
                        float _3611;
                        float _3612;
                        float _3613;
                        float _3901;
                        float _3902;
                        float _3903;
                        float _3904;
                        float _3905;
                        float _3906;
                        float _3621 = _3409;
                        float _3622 = _3410;
                        float _3623 = _3411;
                        float _3624 = _3412;
                        float _3625 = _3413;
                        float _3626 = _3414;
                        uint _3627 = _3424;
                        uint _3628;
                        vec4 _3653;
                        float _3654;
                        vec4 _3669;
                        vec3 _3681;
                        vec4 _3696;
                        vec4 _3711;
                        float _3757;
                        bool _3758;
                        for (;;)
                        {
                            uint _3638 = ((_3415 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3627));
                            _3628 = (_3627 + 4294967295u) & _3627;
                            uint _3640 = _3638 * 40u;
                            _3653 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3640)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3640 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3640 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3640 + 3u)).x));
                            _3654 = _3653.w;
                            uint _3656 = (_3638 * 40u) + 4u;
                            _3669 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3656)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3656 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3656 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3656 + 3u)).x));
                            uint _3671 = (_3638 * 40u) + 8u;
                            _3681 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3671)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3671 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3671 + 2u)).x));
                            uint _3683 = (_3638 * 40u) + 16u;
                            _3696 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3683)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3683 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3683 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3683 + 3u)).x));
                            uint _3698 = (_3638 * 40u) + 20u;
                            _3711 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3698)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3698 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3698 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3698 + 3u)).x));
                            uint _3713 = (_3638 * 40u) + 24u;
                            vec4 _3726 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3713)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3713 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3713 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3713 + 3u)).x));
                            uint _3732 = (_3638 * 40u) + 28u;
                            vec4 _3745 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3732)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3732 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3732 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3732 + 3u)).x));
                            _3757 = fma(_2158, _3745.z, fma(_2157, _3745.y, _3745.x * _2156)) + _3745.w;
                            _3758 = !((fma(_2158, _3726.z, fma(_2157, _3726.y, _3726.x * _2156)) + _3726.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3758)
                            {
                                float _3785 = _3653.x - _2156;
                                float _3786 = _3653.y - _2157;
                                float _3787 = _3653.z - _2158;
                                float _3788 = dot(vec3(_3785, _3786, _3787), vec3(_3785, _3786, _3787));
                                float _3791 = inversesqrt(_3788);
                                float _3792 = _3791 * _3785;
                                float _3793 = _3791 * _3786;
                                float _3794 = _3791 * _3787;
                                float _3798 = 1.0 - (_3788 / (_3654 * _3654));
                                float _4994 = isnan(0.0) ? _3798 : (isnan(_3798) ? 0.0 : max(_3798, 0.0));
                                float _3799 = isnan(1.0) ? _4994 : (isnan(_4994) ? 1.0 : min(_4994, 1.0));
                                float _3803 = sqrt(_3788) * _3669.w;
                                float _3805 = 1.39999997615814208984375 / (_3803 + 1.39999997615814208984375);
                                float _3806 = _3805 * _3805;
                                float _3809 = ((1.0 - _3806) * dot(vec3(_3792, _3793, _3794), vec3(_1042, _1045, _1048))) + _3806;
                                float _3812 = _3803 * _3803;
                                float _3816 = (fma(_2158, _3696.z, fma(_2157, _3696.y, _3696.x * _2156)) + _3696.w) / _3757;
                                float _3817 = (fma(_2158, _3711.z, fma(_2157, _3711.y, _3711.x * _2156)) + _3711.w) / _3757;
                                float _3821 = 1.0 - dot(vec2(_3816, _3817), vec2(_3816, _3817));
                                float _5010 = isnan(0.0) ? _3821 : (isnan(_3821) ? 0.0 : max(_3821, 0.0));
                                float _3822 = isnan(1.0) ? _5010 : (isnan(_5010) ? 1.0 : min(_5010, 1.0));
                                float _3823 = _3822 * (((isnan(0.0) ? _3809 : (isnan(_3809) ? 0.0 : max(_3809, 0.0))) * _3799) / ((_3812 * 0.699999988079071044921875) + 1.0));
                                float _3835 = exp2(log2(1.0 / ((_3812 * 3.5) + 5.0)) * 0.25);
                                float _3836 = 1.0 - _1102;
                                float _3843 = sqrt(1.0 - ((1.0 - (_3836 * _3836)) * (1.0 - (_3835 * _3835))));
                                float _3844 = _3843 * _3843;
                                float _3845 = _3844 * _3844;
                                float _3846 = _3792 - _3296;
                                float _3847 = _3793 - _3297;
                                float _3848 = _3794 - _3298;
                                float _3852 = inversesqrt(dot(vec3(_3846, _3847, _3848), vec3(_3846, _3847, _3848)));
                                float _3856 = dot(vec3(_1042, _1045, _1048), vec3((-0.0) - _3296, (-0.0) - _3297, (-0.0) - _3298));
                                float _5021 = isnan(0.0) ? _3856 : (isnan(_3856) ? 0.0 : max(_3856, 0.0));
                                float _3859 = isnan(1.0) ? _5021 : (isnan(_5021) ? 1.0 : min(_5021, 1.0));
                                float _3860 = dot(vec3(_1042, _1045, _1048), vec3(_3852 * _3846, _3852 * _3847, _3852 * _3848));
                                float _5032 = isnan(0.0) ? _3860 : (isnan(_3860) ? 0.0 : max(_3860, 0.0));
                                float _3863 = isnan(1.0) ? _5032 : (isnan(_5032) ? 1.0 : min(_5032, 1.0));
                                float _3867 = ((_3863 * _3863) * (_3845 + (-1.0))) + 1.0;
                                float _3868 = _3805 * _3844;
                                float _3869 = _3868 * _3868;
                                float _3875 = ((1.0 - _3869) * dot(vec3(_1042, _1045, _1048), vec3(_3792, _3793, _3794))) + _3869;
                                float _5043 = isnan(0.0) ? _3875 : (isnan(_3875) ? 0.0 : max(_3875, 0.0));
                                float _3876 = isnan(1.0) ? _5043 : (isnan(_5043) ? 1.0 : min(_5043, 1.0));
                                float _3877 = 1.0 - _3844;
                                float _3887 = (0.5 / (((_3876 * ((_3859 * _3877) + _3844)) + 9.9999999392252902907785028219223e-09) + (((_3876 * _3877) + _3844) * _3859))) * _3876;
                                float _5054 = isnan(0.0) ? _3887 : (isnan(_3887) ? 0.0 : max(_3887, 0.0));
                                float _3897 = (_3822 * _3799) * (((_3845 * 3.1415927410125732421875) * (isnan(1.0) ? _5054 : (isnan(_5054) ? 1.0 : min(_5054, 1.0)))) / ((_3867 * _3867) * ((_3812 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3823 * _3669.y;
                                frontier_phi_78_pred_1 = _3823 * _3669.x;
                                frontier_phi_78_pred_2 = _3897 * _3681.z;
                                frontier_phi_78_pred_3 = _3897 * _3681.y;
                                frontier_phi_78_pred_4 = _3897 * _3681.x;
                                frontier_phi_78_pred_5 = _3823 * _3669.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3905 = frontier_phi_78_pred;
                            _3904 = frontier_phi_78_pred_1;
                            _3903 = frontier_phi_78_pred_2;
                            _3902 = frontier_phi_78_pred_3;
                            _3901 = frontier_phi_78_pred_4;
                            _3906 = frontier_phi_78_pred_5;
                            _3611 = _3904 + _3624;
                            _3612 = _3905 + _3625;
                            _3613 = _3906 + _3626;
                            _3608 = _3901 + _3621;
                            _3609 = _3902 + _3622;
                            _3610 = _3903 + _3623;
                            if (_3628 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3621 = _3608;
                                _3622 = _3609;
                                _3623 = _3610;
                                _3624 = _3611;
                                _3625 = _3612;
                                _3626 = _3613;
                                _3627 = _3628;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3613;
                        frontier_phi_72_pred_1 = _3612;
                        frontier_phi_72_pred_2 = _3611;
                        frontier_phi_72_pred_3 = _3610;
                        frontier_phi_72_pred_4 = _3609;
                        frontier_phi_72_pred_5 = _3608;
                    }
                    _3281 = frontier_phi_72_pred;
                    _3279 = frontier_phi_72_pred_1;
                    _3277 = frontier_phi_72_pred_2;
                    _3275 = frontier_phi_72_pred_3;
                    _3273 = frontier_phi_72_pred_4;
                    _3271 = frontier_phi_72_pred_5;
                    uint _3416 = _3415 + 1u;
                    if (_3416 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3409 = _3271;
                        _3410 = _3273;
                        _3411 = _3275;
                        _3412 = _3277;
                        _3413 = _3279;
                        _3414 = _3281;
                        _3415 = _3416;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3281;
                frontier_phi_60_61_ladder_1 = _3279;
                frontier_phi_60_61_ladder_2 = _3275;
                frontier_phi_60_61_ladder_3 = _3273;
                frontier_phi_60_61_ladder_4 = _3271;
                frontier_phi_60_61_ladder_5 = _3277;
            }
            else
            {
                frontier_phi_60_61_ladder = _3168;
                frontier_phi_60_61_ladder_1 = _3166;
                frontier_phi_60_61_ladder_2 = _3162;
                frontier_phi_60_61_ladder_3 = _3160;
                frontier_phi_60_61_ladder_4 = _3158;
                frontier_phi_60_61_ladder_5 = _3164;
            }
            _3270 = frontier_phi_60_61_ladder_4;
            _3272 = frontier_phi_60_61_ladder_3;
            _3274 = frontier_phi_60_61_ladder_2;
            _3276 = frontier_phi_60_61_ladder_5;
            _3278 = frontier_phi_60_61_ladder_1;
            _3280 = frontier_phi_60_61_ladder;
        }
        float _3285 = isnan(1.0) ? _1086 : (isnan(_1086) ? 1.0 : min(_1086, 1.0));
        _3091 = (_3285 * _3276) + _2622;
        _3093 = (_3285 * _3278) + _2624;
        _3095 = (_3285 * _3280) + _2626;
        _3097 = ((_3270 * 0.039999999105930328369140625) * _3285) + _2945;
        _3099 = ((_3272 * 0.039999999105930328369140625) * _3285) + _2947;
        _3101 = ((_3274 * 0.039999999105930328369140625) * _3285) + _2949;
    }
    else
    {
        _3091 = _2622;
        _3093 = _2624;
        _3095 = _2626;
        _3097 = _2945;
        _3099 = _2947;
        _3101 = _2949;
    }
    float _5070 = isnan(0.0) ? _1071 : (isnan(_1071) ? 0.0 : max(_1071, 0.0));
    float _5081 = isnan(0.0) ? _1072 : (isnan(_1072) ? 0.0 : max(_1072, 0.0));
    float _5092 = isnan(0.0) ? _1073 : (isnan(_1073) ? 0.0 : max(_1073, 0.0));
    uint _3121 = _283 + 6u;
    float _3129 = _1023 / cbSceneParam._m0[86u].x;
    float _3130 = _1024 / cbSceneParam._m0[86u].y;
    vec4 _3144 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3129, _3130, (log2((isnan(cbSceneParam._m0[77u].w) ? _957 : (isnan(_957) ? cbSceneParam._m0[77u].w : min(_957, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3146 = _3144.x;
    float _3147 = _3144.y;
    float _3148 = _3144.z;
    float _3149 = _3144.w;
    float _3220;
    float _3222;
    float _3224;
    float _3226;
    if (_957 > cbSceneParam._m0[78u].w)
    {
        float _3183 = isnan(_957) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _957 : min(cbSceneParam._m0[80u].w, _957));
        float _3184 = _3183 / _957;
        float _3195 = _3184 * _1008;
        float _3196 = _1009 * _3184;
        float _3197 = (-0.0) - _3196;
        float _3198 = _3184 * _1010;
        float _3200 = (cbSceneParam._m0[77u].w * _3197) / _3183;
        float _3201 = _3200 + cbSceneParam._m0[79u].w;
        float _3202 = cbSceneParam._m0[79u].w - _3196;
        float _3208 = sqrt(((_3195 * _3195) + (_3196 * _3196)) + (_3198 * _3198));
        float _3211 = (1.0 - (cbSceneParam._m0[77u].w / _3183)) * _3208;
        float _3216 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3218 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3371;
        if (abs((_3197 - _3200) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3371 = ((((_3201 > 0.0) ? exp2(_3216 * _3201) : (2.0 - exp2(_3218 * _3201))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3211;
        }
        else
        {
            float _3331 = 1.0 / cbSceneParam._m0[80u].x;
            float _3332 = isnan(_3202) ? _3201 : (isnan(_3201) ? _3202 : max(_3201, _3202));
            float _3333 = isnan(_3202) ? _3201 : (isnan(_3201) ? _3202 : min(_3201, _3202));
            float _3342 = isnan(0.0) ? _3332 : (isnan(_3332) ? 0.0 : min(_3332, 0.0));
            float _3343 = isnan(0.0) ? _3333 : (isnan(_3333) ? 0.0 : min(_3333, 0.0));
            _3371 = ((abs(_3208 / _3197) * cbSceneParam._m0[80u].y) * ((((_3342 - _3343) * 2.0) - ((exp2(_3216 * (isnan(0.0) ? _3332 : (isnan(_3332) ? 0.0 : max(_3332, 0.0)))) - exp2(_3216 * (isnan(0.0) ? _3333 : (isnan(_3333) ? 0.0 : max(_3333, 0.0))))) * _3331)) - ((exp2(_3218 * _3342) - exp2(_3218 * _3343)) * _3331))) + (_3211 * cbSceneParam._m0[80u].z);
        }
        vec4 _3373 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3129, _3130, 1.0), 0.0);
        float _3382 = exp2((_3371 * (-1.44269502162933349609375)) * (1.0 - _3373.w));
        float _3383 = log2(_3382);
        float _3399 = log2(_3149);
        _3220 = (exp2(_3399 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3383 * cbSceneParam._m0[78u].x)) * _3373.x) / cbSceneParam._m0[78u].x)) + _3146;
        _3222 = (exp2(_3399 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3383 * cbSceneParam._m0[78u].y)) * _3373.y) / cbSceneParam._m0[78u].y)) + _3147;
        _3224 = (exp2(_3399 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3383 * cbSceneParam._m0[78u].z)) * _3373.z) / cbSceneParam._m0[78u].z)) + _3148;
        _3226 = _3382 * _3149;
    }
    else
    {
        _3220 = _3146;
        _3222 = _3147;
        _3224 = _3148;
        _3226 = _3149;
    }
    float _3238 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3239 = _3238 == 3.0;
    float _3240 = log2(_3226);
    float _3247 = exp2(_3240 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5070 : (isnan(_5070) ? 1.0 : min(_5070, 1.0))) * (_3091 + ((isnan(0.0) ? _1811 : (isnan(_1811) ? 0.0 : max(_1811, 0.0))) * _1086))) + ((_3097 + ((isnan(0.0) ? _2103 : (isnan(_2103) ? 0.0 : max(_2103, 0.0))) * _1890)) * cbPerFrame._m0[3u].x));
    float _3248 = exp2(_3240 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5081 : (isnan(_5081) ? 1.0 : min(_5081, 1.0))) * (_3093 + ((isnan(0.0) ? _1814 : (isnan(_1814) ? 0.0 : max(_1814, 0.0))) * _1086))) + ((_3099 + ((isnan(0.0) ? _2106 : (isnan(_2106) ? 0.0 : max(_2106, 0.0))) * _1890)) * cbPerFrame._m0[3u].x));
    float _3249 = exp2(_3240 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5092 : (isnan(_5092) ? 1.0 : min(_5092, 1.0))) * (_3095 + ((isnan(0.0) ? _1817 : (isnan(_1817) ? 0.0 : max(_1817, 0.0))) * _1086))) + ((_3101 + ((isnan(0.0) ? _2109 : (isnan(_2109) ? 0.0 : max(_2109, 0.0))) * _1890)) * cbPerFrame._m0[3u].x));
    float _3258 = (_3238 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3258 * (_3239 ? _3247 : (_3247 + (cbSceneParam._m0[72u].w * _3220)));
    SV_Target.y = _3258 * (_3239 ? _3248 : (_3248 + (cbSceneParam._m0[72u].w * _3222)));
    SV_Target.z = _3258 * (_3239 ? _3249 : (_3249 + (cbSceneParam._m0[72u].w * _3224)));
    SV_Target.w = cbInstanceData._m0[_3121].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3121].w;
}


