#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1498;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _233 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _234 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _235 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _241 = inversesqrt(dot(vec3(_233, _234, _235), vec3(_233, _234, _235)));
    float _242 = _241 * _233;
    float _243 = _241 * _234;
    float _244 = _241 * _235;
    float _248 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _249 = _248 * NORMAL.x;
    float _250 = _248 * NORMAL.y;
    float _251 = _248 * NORMAL.z;
    float _255 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _256 = _255 * TANGENT.x;
    float _257 = _255 * TANGENT.y;
    float _258 = _255 * TANGENT.z;
    uint _261 = uint(roundEven(NORMAL.w)) * 13u;
    uint _266 = _261 + 1u;
    uint _270 = _261 + 2u;
    float _279 = sqrt(((cbInstanceData._m0[_266].x * cbInstanceData._m0[_266].x) + (cbInstanceData._m0[_261].x * cbInstanceData._m0[_261].x)) + (cbInstanceData._m0[_270].x * cbInstanceData._m0[_270].x));
    float _280 = _279 * TEXCOORD.z;
    float _281 = _279 * TEXCOORD.w;
    vec4 _300 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _324 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _329 = _324.x * cbMtdParam._m0[11u].x;
    float _330 = _324.y * cbMtdParam._m0[11u].y;
    float _331 = _324.z * cbMtdParam._m0[11u].z;
    vec4 _350 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _280) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _281) + cbTextureTilingScale._m0[5u].w));
    vec4 _369 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _409 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _411 = _409.x;
    float _423 = dot(vec4(_411, _409.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _440 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _369.x) * 2.0) - ((((_411 - _423) * cbMtdParam._m0[24u].z) + _423) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4083 = isnan(0.0) ? _440 : (isnan(_440) ? 0.0 : max(_440, 0.0));
    float _441 = isnan(1.0) ? _4083 : (isnan(_4083) ? 1.0 : min(_4083, 1.0));
    float _448 = (_441 * ((_350.x * cbMtdParam._m0[12u].x) - _329)) + _329;
    float _449 = (_441 * ((_350.y * cbMtdParam._m0[12u].y) - _330)) + _330;
    float _450 = (_441 * ((_350.z * cbMtdParam._m0[12u].z) - _331)) + _331;
    vec4 _467 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _280) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _281) + cbTextureTilingScale._m0[3u].w));
    vec4 _487 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _489 = _487.x;
    float _499 = dot(vec4(_489, _487.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _513 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _369.y) * 2.0) - ((((_489 - _499) * cbMtdParam._m0[24u].z) + _499) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4094 = isnan(0.0) ? _513 : (isnan(_513) ? 0.0 : max(_513, 0.0));
    float _514 = isnan(1.0) ? _4094 : (isnan(_4094) ? 1.0 : min(_4094, 1.0));
    float _521 = (_514 * ((_467.x * cbMtdParam._m0[13u].x) - _448)) + _448;
    float _522 = (_514 * ((_467.y * cbMtdParam._m0[13u].y) - _449)) + _449;
    float _523 = (_514 * ((_467.z * cbMtdParam._m0[13u].z) - _450)) + _450;
    vec4 _541 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _280) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _281) + cbTextureTilingScale._m0[24u].w));
    vec4 _558 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _560 = _558.x;
    float _570 = dot(vec4(_560, _558.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _582 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _369.z) * 2.0) - ((((_560 - _570) * cbMtdParam._m0[24u].z) + _570) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4105 = isnan(0.0) ? _582 : (isnan(_582) ? 0.0 : max(_582, 0.0));
    float _583 = isnan(1.0) ? _4105 : (isnan(_4105) ? 1.0 : min(_4105, 1.0));
    float _596 = ((cbMtdParam._m0[9u].x * 4.55000019073486328125) * _300.x) * ((_583 * ((_541.x * cbMtdParam._m0[14u].x) - _521)) + _521);
    float _599 = ((cbMtdParam._m0[9u].y * 4.55000019073486328125) * _300.y) * ((_583 * ((_541.y * cbMtdParam._m0[14u].y) - _522)) + _522);
    float _602 = ((cbMtdParam._m0[9u].z * 4.55000019073486328125) * _300.z) * ((_583 * ((_541.z * cbMtdParam._m0[14u].z) - _523)) + _523);
    vec4 _620 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _280) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _281) + cbTextureTilingScale._m0[4u].w));
    vec4 _637 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _639 = _637.x;
    float _640 = _637.y;
    float _641 = _637.z;
    float _648 = ((_620.x - _639) * _441) + _639;
    float _649 = ((_620.y - _640) * _441) + _640;
    float _650 = ((_620.z - _641) * _441) + _641;
    vec4 _662 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _280) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _281) + cbTextureTilingScale._m0[2u].w));
    float _673 = ((_662.x - _648) * _514) + _648;
    float _674 = ((_662.y - _649) * _514) + _649;
    float _675 = ((_662.z - _650) * _514) + _650;
    vec4 _687 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _280) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _281) + cbTextureTilingScale._m0[23u].w));
    float _700 = ((_687.z - _675) * _583) + _675;
    float _703 = ((((_687.x - _673) * _583) + _673) * 2.0) + (-1.0);
    float _705 = ((((_687.y - _674) * _583) + _674) * 2.0) + (-1.0);
    float _706 = dot(vec2(_703, _705), vec2(_703, _705));
    float _4116 = isnan(0.0) ? _706 : (isnan(_706) ? 0.0 : max(_706, 0.0));
    float _711 = sqrt(1.0 - (isnan(1.0) ? _4116 : (isnan(_4116) ? 1.0 : min(_4116, 1.0))));
    vec4 _725 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _737 = (((_725.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _703;
    float _738 = (((_725.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _705;
    float _741 = fma(_711, _249, fma(_738, _256, _737 * _242));
    float _744 = fma(_711, _250, fma(_738, _257, _737 * _243));
    float _747 = fma(_711, _251, fma(_738, _258, _737 * _244));
    float _751 = inversesqrt(dot(vec3(_741, _744, _747), vec3(_741, _744, _747)));
    vec4 _778 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _280) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _281) + cbTextureTilingScale._m0[11u].w));
    float _780 = _778.x;
    float _781 = 1.0 - _780;
    float _787 = (cbMtdParam._m0[19u].x + dot(vec4(_751 * _741, _751 * _744, _751 * _747, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_780 - _781) * cbMtdParam._m0[24u].w) + _781) * cbMtdParam._m0[21u].z);
    float _4127 = isnan(0.0) ? _787 : (isnan(_787) ? 0.0 : max(_787, 0.0));
    float _788 = isnan(1.0) ? _4127 : (isnan(_4127) ? 1.0 : min(_4127, 1.0));
    float _790 = (-0.0) - cbMtdParam._m0[24u].x;
    float _792 = isnan(0.0) ? _790 : (isnan(_790) ? 0.0 : max(_790, 0.0));
    float _793 = isnan(1.0) ? _792 : (isnan(_792) ? 1.0 : min(_792, 1.0));
    float _800 = _788 - ((_788 * TEXCOORD_8.x) * _793);
    float _801 = _788 - ((_788 * TEXCOORD_8.y) * _793);
    float _802 = _788 - ((_788 * TEXCOORD_8.z) * _793);
    float _809 = (_800 * (cbMtdParam._m0[17u].x - _596)) + _596;
    float _810 = (_801 * (cbMtdParam._m0[17u].y - _599)) + _599;
    float _811 = (_802 * (cbMtdParam._m0[17u].z - _602)) + _602;
    vec4 _823 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _280) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _281) + cbTextureTilingScale._m0[19u].w));
    float _825 = _823.x;
    float _826 = 1.0 - _825;
    float _854 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_825 - _826) * cbMtdParam._m0[24u].y) + _826) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4148 = isnan(0.0) ? _854 : (isnan(_854) ? 0.0 : max(_854, 0.0));
    float _855 = isnan(1.0) ? _4148 : (isnan(_4148) ? 1.0 : min(_4148, 1.0));
    float _863 = ((((cbMtdParam._m0[10u].x - _809) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _855) + _809;
    float _864 = ((((cbMtdParam._m0[10u].y - _810) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _855) + _810;
    float _865 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _811)) * _855) + _811;
    float _869 = (cbMtdParam._m0[19u].w * (_725.z - _700)) + _700;
    vec4 _883 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _280) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _281) + cbTextureTilingScale._m0[15u].w));
    float _890 = (_883.x * 2.0) + (-1.0);
    float _891 = (_883.y * 2.0) + (-1.0);
    float _892 = dot(vec2(_890, _891), vec2(_890, _891));
    float _4159 = isnan(0.0) ? _892 : (isnan(_892) ? 0.0 : max(_892, 0.0));
    float _900 = ((_883.z - _869) * _800) + _869;
    float _903 = ((cbMtdParam._m0[23u].y - _900) * _855) + _900;
    vec4 _922 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _280) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _281) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _928 = (_922.x * 2.0) + (-1.0);
    float _929 = (_922.y * 2.0) + (-1.0);
    float _930 = dot(vec2(_928, _929), vec2(_928, _929));
    float _4170 = isnan(0.0) ? _930 : (isnan(_930) ? 0.0 : max(_930, 0.0));
    float _945 = ((sqrt(1.0 - (isnan(1.0) ? _4159 : (isnan(_4159) ? 1.0 : min(_4159, 1.0)))) - _711) * _802) + _711;
    float _948 = (((_890 - _737) * _800) + _737) + (cbMtdParam._m0[21u].x * _737);
    float _949 = (((_891 - _738) * _801) + _738) + (cbMtdParam._m0[21u].x * _738);
    float _960 = (((_928 - _948) + (_948 * cbMtdParam._m0[22u].z)) * _855) + _948;
    float _961 = (((_929 - _949) + (_949 * cbMtdParam._m0[22u].z)) * _855) + _949;
    float _962 = (_855 * (sqrt(1.0 - (isnan(1.0) ? _4170 : (isnan(_4170) ? 1.0 : min(_4170, 1.0)))) - _945)) + _945;
    float _964 = cbMtdParam._m0[22u].x + _725.w;
    float _967 = fma(_962, _249, fma(_961, _256, _960 * _242));
    float _970 = fma(_962, _250, fma(_961, _257, _960 * _243));
    float _973 = fma(_962, _251, fma(_961, _258, _960 * _244));
    float _977 = inversesqrt(dot(vec3(_967, _970, _973), vec3(_967, _970, _973)));
    float _978 = _977 * _967;
    float _979 = _977 * _970;
    float _980 = _977 * _973;
    float _4181 = isnan(0.0) ? _903 : (isnan(_903) ? 0.0 : max(_903, 0.0));
    float _981 = isnan(1.0) ? _4181 : (isnan(_4181) ? 1.0 : min(_4181, 1.0));
    float _4192 = isnan(0.0) ? _964 : (isnan(_964) ? 0.0 : max(_964, 0.0));
    float _4203 = isnan(0.0) ? _863 : (isnan(_863) ? 0.0 : max(_863, 0.0));
    float _4214 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
    float _4225 = isnan(0.0) ? _865 : (isnan(_865) ? 0.0 : max(_865, 0.0));
    float _999 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1039 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1049 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1039);
    float _1050 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1039);
    float _1051 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1039);
    float _1055 = inversesqrt(dot(vec3(_1049, _1050, _1051), vec3(_1049, _1050, _1051)));
    float _1056 = _1049 * _1055;
    float _1057 = _1050 * _1055;
    float _1058 = _1051 * _1055;
    float _1064 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1065 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1083 = fma(_980, cbSceneParam._m0[5u].z, fma(_979, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _978));
    float _1086 = fma(_980, cbSceneParam._m0[6u].z, fma(_979, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _978));
    float _1089 = fma(_980, cbSceneParam._m0[7u].z, fma(_979, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _978));
    uint _1103 = (_261 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1109 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0)))) * cbInstanceData._m0[_1103].x;
    float _1110 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0)))) * cbInstanceData._m0[_1103].y;
    float _1111 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0)))) * cbInstanceData._m0[_1103].z;
    float _4236 = isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0));
    float _1112 = isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0));
    float _4247 = isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0));
    float _1113 = isnan(1.0) ? _4247 : (isnan(_4247) ? 1.0 : min(_4247, 1.0));
    float _4258 = isnan(0.0) ? _1111 : (isnan(_1111) ? 0.0 : max(_1111, 0.0));
    float _1114 = isnan(1.0) ? _4258 : (isnan(_4258) ? 1.0 : min(_4258, 1.0));
    vec4 _1123 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1064, cbSceneParam._m0[86u].y * _1065));
    float _1127 = ((isnan(1.0) ? _4192 : (isnan(_4192) ? 1.0 : min(_4192, 1.0))) * TEXCOORD_5.w) * _1123.x;
    float _1128 = dot(vec3(_978, _979, _980), vec3(_1056, _1057, _1058));
    float _1131 = _1128 * 2.0;
    float _1135 = (_1131 * _978) - _1056;
    float _1136 = (_1131 * _979) - _1057;
    float _1137 = (_1131 * _980) - _1058;
    float _1141 = abs(dot(vec3(_1056, _1057, _1058), vec3(_978, _979, _980)));
    float _4269 = isnan(0.0) ? _1141 : (isnan(_1141) ? 0.0 : max(_1141, 0.0));
    float _1143 = sqrt(_981);
    float _1156 = exp2((_1143 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4269 : (isnan(_4269) ? 1.0 : min(_4269, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1143 * 3.0));
    float _1188 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1192 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1196 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1497;
    float _1499;
    float _1500;
    float _1501;
    float _1502;
    float _1503;
    float _1504;
    float _1505;
    float _1506;
    float _1507;
    float _1508;
    float _1509;
    float _1510;
    float _1511;
    float _1512;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1222 = fma(_1196, cbModelParam._m0[26u].z, fma(_1192, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1188));
        float _1226 = fma(_1196, cbModelParam._m0[27u].z, fma(_1192, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1188));
        float _1230 = fma(_1196, cbModelParam._m0[28u].z, fma(_1192, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1188));
        float _1255 = _1188 + _978;
        float _1256 = _1192 + _979;
        float _1257 = _1196 + _980;
        float _1267 = fma(_1257, cbModelParam._m0[26u].z, fma(_1256, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1255)) - _1222;
        float _1268 = fma(_1257, cbModelParam._m0[27u].z, fma(_1256, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1255)) - _1226;
        float _1269 = fma(_1257, cbModelParam._m0[28u].z, fma(_1256, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1255)) - _1230;
        float _1273 = inversesqrt(dot(vec3(_1267, _1268, _1269), vec3(_1267, _1268, _1269)));
        float _1286 = ((_1273 * _1267) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1222 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1287 = ((_1273 * _1268) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1226 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1288 = ((_1273 * _1269) / cbModelParam._m0[34u].z) + ((((((_1230 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1291 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1286, _1287, _1288), 0.0);
        vec4 _1298 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1286, _1287, _1288), 0.0);
        vec4 _1305 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1286, _1287, _1288), 0.0);
        vec4 _1312 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1286, _1287, _1288), 0.0);
        float _1325 = exp2((_1291.w + (-0.5)) * 20.0) * 2.0;
        float _1326 = _1325 * (_1291.x + (-0.5));
        float _1327 = _1325 * (_1291.y + (-0.5));
        float _1328 = _1325 * (_1291.z + (-0.5));
        float _1335 = exp2((_1298.w + (-0.5)) * 20.0) * 2.0;
        float _1336 = _1335 * (_1298.x + (-0.5));
        float _1337 = _1335 * (_1298.y + (-0.5));
        float _1338 = _1335 * (_1298.z + (-0.5));
        float _1345 = exp2((_1305.w + (-0.5)) * 20.0) * 2.0;
        float _1346 = _1345 * (_1305.x + (-0.5));
        float _1347 = _1345 * (_1305.y + (-0.5));
        float _1348 = _1345 * (_1305.z + (-0.5));
        float _1355 = exp2((_1312.w + (-0.5)) * 20.0) * 2.0;
        float _1356 = _1355 * (_1312.x + (-0.5));
        float _1357 = _1355 * (_1312.y + (-0.5));
        float _1358 = _1355 * (_1312.z + (-0.5));
        float _1359 = isnan(0.0) ? _1356 : (isnan(_1356) ? 0.0 : max(_1356, 0.0));
        float _1360 = isnan(0.0) ? _1357 : (isnan(_1357) ? 0.0 : max(_1357, 0.0));
        float _1361 = isnan(0.0) ? _1358 : (isnan(_1358) ? 0.0 : max(_1358, 0.0));
        float _1362 = _1326 * 0.5;
        float _1363 = _1336 * 0.5;
        float _1364 = _1346 * 0.5;
        float _1365 = dot(vec3(_1362, _1363, _1364), vec3(_1362, _1363, _1364));
        float _1370 = (_1365 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1365);
        float _1379 = (dot(vec3(_978, _979, _980), vec3(_1370 * _1362, _1370 * _1363, _1370 * _1364)) + 1.0) * 0.5;
        float _4295 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1389 = sqrt(((_1363 * _1363) + (_1362 * _1362)) + (_1364 * _1364)) / (_1359 + 9.9999997473787516355514526367188e-06);
        float _4306 = isnan(0.0) ? _1389 : (isnan(_1389) ? 0.0 : max(_1389, 0.0));
        float _1390 = isnan(1.0) ? _4306 : (isnan(_4306) ? 1.0 : min(_4306, 1.0));
        float _1391 = _1390 * 2.0;
        float _1395 = (1.0 - _1390) / (_1390 + 1.0);
        float _4317 = isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0));
        float _1396 = isnan(1.0) ? _4317 : (isnan(_4317) ? 1.0 : min(_4317, 1.0));
        float _1405 = ((((1.0 - _1396) * (_1391 + 2.0)) * exp2(log2(isnan(1.0) ? _4295 : (isnan(_4295) ? 1.0 : min(_4295, 1.0))) * (_1391 + 1.0))) + _1396) * _1359;
        float _1406 = _1327 * 0.5;
        float _1407 = _1337 * 0.5;
        float _1408 = _1347 * 0.5;
        float _1409 = dot(vec3(_1406, _1407, _1408), vec3(_1406, _1407, _1408));
        float _1414 = (_1409 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1409);
        float _1422 = (dot(vec3(_978, _979, _980), vec3(_1414 * _1406, _1414 * _1407, _1414 * _1408)) + 1.0) * 0.5;
        float _4328 = isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0));
        float _1431 = sqrt(((_1407 * _1407) + (_1406 * _1406)) + (_1408 * _1408)) / (_1360 + 9.9999997473787516355514526367188e-06);
        float _4339 = isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : max(_1431, 0.0));
        float _1432 = isnan(1.0) ? _4339 : (isnan(_4339) ? 1.0 : min(_4339, 1.0));
        float _1433 = _1432 * 2.0;
        float _1437 = (1.0 - _1432) / (_1432 + 1.0);
        float _4350 = isnan(0.0) ? _1437 : (isnan(_1437) ? 0.0 : max(_1437, 0.0));
        float _1438 = isnan(1.0) ? _4350 : (isnan(_4350) ? 1.0 : min(_4350, 1.0));
        float _1447 = ((((1.0 - _1438) * (_1433 + 2.0)) * exp2(log2(isnan(1.0) ? _4328 : (isnan(_4328) ? 1.0 : min(_4328, 1.0))) * (_1433 + 1.0))) + _1438) * _1360;
        float _1448 = _1328 * 0.5;
        float _1449 = _1338 * 0.5;
        float _1450 = _1348 * 0.5;
        float _1451 = dot(vec3(_1448, _1449, _1450), vec3(_1448, _1449, _1450));
        float _1456 = (_1451 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1451);
        float _1464 = (dot(vec3(_978, _979, _980), vec3(_1456 * _1448, _1456 * _1449, _1456 * _1450)) + 1.0) * 0.5;
        float _4361 = isnan(0.0) ? _1464 : (isnan(_1464) ? 0.0 : max(_1464, 0.0));
        float _1473 = sqrt(((_1449 * _1449) + (_1448 * _1448)) + (_1450 * _1450)) / (_1361 + 9.9999997473787516355514526367188e-06);
        float _4372 = isnan(0.0) ? _1473 : (isnan(_1473) ? 0.0 : max(_1473, 0.0));
        float _1474 = isnan(1.0) ? _4372 : (isnan(_4372) ? 1.0 : min(_4372, 1.0));
        float _1475 = _1474 * 2.0;
        float _1479 = (1.0 - _1474) / (_1474 + 1.0);
        float _4383 = isnan(0.0) ? _1479 : (isnan(_1479) ? 0.0 : max(_1479, 0.0));
        float _1480 = isnan(1.0) ? _4383 : (isnan(_4383) ? 1.0 : min(_4383, 1.0));
        float _1489 = ((((1.0 - _1480) * (_1475 + 2.0)) * exp2(log2(isnan(1.0) ? _4361 : (isnan(_4361) ? 1.0 : min(_4361, 1.0))) * (_1475 + 1.0))) + _1480) * _1361;
        _1497 = _1328;
        _1499 = _1327;
        _1500 = _1326;
        _1501 = _1338;
        _1502 = _1337;
        _1503 = _1336;
        _1504 = _1348;
        _1505 = _1347;
        _1506 = _1346;
        _1507 = _1361;
        _1508 = _1360;
        _1509 = _1359;
        _1510 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0)));
        _1511 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1447 : (isnan(_1447) ? 0.0 : max(_1447, 0.0)));
        _1512 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1489 : (isnan(_1489) ? 0.0 : max(_1489, 0.0)));
    }
    else
    {
        _1497 = _1498;
        _1499 = _1498;
        _1500 = _1498;
        _1501 = _1498;
        _1502 = _1498;
        _1503 = _1498;
        _1504 = _1498;
        _1505 = _1498;
        _1506 = _1498;
        _1507 = _1498;
        _1508 = _1498;
        _1509 = _1498;
        _1510 = 0.0;
        _1511 = 0.0;
        _1512 = 0.0;
    }
    float _1804;
    float _1805;
    float _1806;
    float _1807;
    float _1808;
    float _1809;
    float _1810;
    float _1811;
    float _1812;
    float _1813;
    float _1814;
    float _1815;
    float _1816;
    float _1817;
    float _1818;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1535 = fma(_1196, cbModelParam._m0[30u].z, fma(_1192, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1188));
        float _1539 = fma(_1196, cbModelParam._m0[31u].z, fma(_1192, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1188));
        float _1543 = fma(_1196, cbModelParam._m0[32u].z, fma(_1192, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1188));
        float _1566 = _1188 + _978;
        float _1567 = _1192 + _979;
        float _1568 = _1196 + _980;
        float _1578 = fma(_1568, cbModelParam._m0[30u].z, fma(_1567, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1566)) - _1535;
        float _1579 = fma(_1568, cbModelParam._m0[31u].z, fma(_1567, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1566)) - _1539;
        float _1580 = fma(_1568, cbModelParam._m0[32u].z, fma(_1567, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1566)) - _1543;
        float _1584 = inversesqrt(dot(vec3(_1578, _1579, _1580), vec3(_1578, _1579, _1580)));
        float _1597 = ((_1584 * _1578) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1535 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1598 = ((_1584 * _1579) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1539 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1599 = ((_1584 * _1580) / cbModelParam._m0[35u].z) + ((((((_1543 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1601 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1597, _1598, _1599), 0.0);
        vec4 _1608 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1597, _1598, _1599), 0.0);
        vec4 _1615 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1597, _1598, _1599), 0.0);
        vec4 _1622 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1597, _1598, _1599), 0.0);
        float _1634 = exp2((_1601.w + (-0.5)) * 20.0) * 2.0;
        float _1635 = _1634 * (_1601.x + (-0.5));
        float _1636 = _1634 * (_1601.y + (-0.5));
        float _1637 = _1634 * (_1601.z + (-0.5));
        float _1644 = exp2((_1608.w + (-0.5)) * 20.0) * 2.0;
        float _1645 = _1644 * (_1608.x + (-0.5));
        float _1646 = _1644 * (_1608.y + (-0.5));
        float _1647 = _1644 * (_1608.z + (-0.5));
        float _1654 = exp2((_1615.w + (-0.5)) * 20.0) * 2.0;
        float _1655 = _1654 * (_1615.x + (-0.5));
        float _1656 = _1654 * (_1615.y + (-0.5));
        float _1657 = _1654 * (_1615.z + (-0.5));
        float _1664 = exp2((_1622.w + (-0.5)) * 20.0) * 2.0;
        float _1665 = _1664 * (_1622.x + (-0.5));
        float _1666 = _1664 * (_1622.y + (-0.5));
        float _1667 = _1664 * (_1622.z + (-0.5));
        float _1668 = isnan(0.0) ? _1665 : (isnan(_1665) ? 0.0 : max(_1665, 0.0));
        float _1669 = isnan(0.0) ? _1666 : (isnan(_1666) ? 0.0 : max(_1666, 0.0));
        float _1670 = isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0));
        float _1671 = _1635 * 0.5;
        float _1672 = _1645 * 0.5;
        float _1673 = _1655 * 0.5;
        float _1674 = dot(vec3(_1671, _1672, _1673), vec3(_1671, _1672, _1673));
        float _1679 = (_1674 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1674);
        float _1687 = (dot(vec3(_978, _979, _980), vec3(_1679 * _1671, _1679 * _1672, _1679 * _1673)) + 1.0) * 0.5;
        float _4424 = isnan(0.0) ? _1687 : (isnan(_1687) ? 0.0 : max(_1687, 0.0));
        float _1696 = sqrt(((_1672 * _1672) + (_1671 * _1671)) + (_1673 * _1673)) / (_1668 + 9.9999997473787516355514526367188e-06);
        float _4435 = isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0));
        float _1697 = isnan(1.0) ? _4435 : (isnan(_4435) ? 1.0 : min(_4435, 1.0));
        float _1698 = _1697 * 2.0;
        float _1702 = (1.0 - _1697) / (_1697 + 1.0);
        float _4446 = isnan(0.0) ? _1702 : (isnan(_1702) ? 0.0 : max(_1702, 0.0));
        float _1703 = isnan(1.0) ? _4446 : (isnan(_4446) ? 1.0 : min(_4446, 1.0));
        float _1712 = ((((1.0 - _1703) * (_1698 + 2.0)) * exp2(log2(isnan(1.0) ? _4424 : (isnan(_4424) ? 1.0 : min(_4424, 1.0))) * (_1698 + 1.0))) + _1703) * _1668;
        float _1713 = _1636 * 0.5;
        float _1714 = _1646 * 0.5;
        float _1715 = _1656 * 0.5;
        float _1716 = dot(vec3(_1713, _1714, _1715), vec3(_1713, _1714, _1715));
        float _1721 = (_1716 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1716);
        float _1729 = (dot(vec3(_978, _979, _980), vec3(_1721 * _1713, _1721 * _1714, _1721 * _1715)) + 1.0) * 0.5;
        float _4457 = isnan(0.0) ? _1729 : (isnan(_1729) ? 0.0 : max(_1729, 0.0));
        float _1738 = sqrt(((_1714 * _1714) + (_1713 * _1713)) + (_1715 * _1715)) / (_1669 + 9.9999997473787516355514526367188e-06);
        float _4468 = isnan(0.0) ? _1738 : (isnan(_1738) ? 0.0 : max(_1738, 0.0));
        float _1739 = isnan(1.0) ? _4468 : (isnan(_4468) ? 1.0 : min(_4468, 1.0));
        float _1740 = _1739 * 2.0;
        float _1744 = (1.0 - _1739) / (_1739 + 1.0);
        float _4479 = isnan(0.0) ? _1744 : (isnan(_1744) ? 0.0 : max(_1744, 0.0));
        float _1745 = isnan(1.0) ? _4479 : (isnan(_4479) ? 1.0 : min(_4479, 1.0));
        float _1754 = ((((1.0 - _1745) * (_1740 + 2.0)) * exp2(log2(isnan(1.0) ? _4457 : (isnan(_4457) ? 1.0 : min(_4457, 1.0))) * (_1740 + 1.0))) + _1745) * _1669;
        float _1755 = _1637 * 0.5;
        float _1756 = _1647 * 0.5;
        float _1757 = _1657 * 0.5;
        float _1758 = dot(vec3(_1755, _1756, _1757), vec3(_1755, _1756, _1757));
        float _1763 = (_1758 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1758);
        float _1771 = (dot(vec3(_978, _979, _980), vec3(_1763 * _1755, _1763 * _1756, _1763 * _1757)) + 1.0) * 0.5;
        float _4490 = isnan(0.0) ? _1771 : (isnan(_1771) ? 0.0 : max(_1771, 0.0));
        float _1780 = sqrt(((_1756 * _1756) + (_1755 * _1755)) + (_1757 * _1757)) / (_1670 + 9.9999997473787516355514526367188e-06);
        float _4501 = isnan(0.0) ? _1780 : (isnan(_1780) ? 0.0 : max(_1780, 0.0));
        float _1781 = isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0));
        float _1782 = _1781 * 2.0;
        float _1786 = (1.0 - _1781) / (_1781 + 1.0);
        float _4512 = isnan(0.0) ? _1786 : (isnan(_1786) ? 0.0 : max(_1786, 0.0));
        float _1787 = isnan(1.0) ? _4512 : (isnan(_4512) ? 1.0 : min(_4512, 1.0));
        float _1796 = ((((1.0 - _1787) * (_1782 + 2.0)) * exp2(log2(isnan(1.0) ? _4490 : (isnan(_4490) ? 1.0 : min(_4490, 1.0))) * (_1782 + 1.0))) + _1787) * _1670;
        _1804 = _1637;
        _1805 = _1636;
        _1806 = _1635;
        _1807 = _1647;
        _1808 = _1646;
        _1809 = _1645;
        _1810 = _1657;
        _1811 = _1656;
        _1812 = _1655;
        _1813 = _1670;
        _1814 = _1669;
        _1815 = _1668;
        _1816 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1712 : (isnan(_1712) ? 0.0 : max(_1712, 0.0)));
        _1817 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0)));
        _1818 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1796 : (isnan(_1796) ? 0.0 : max(_1796, 0.0)));
    }
    else
    {
        _1804 = _1498;
        _1805 = _1498;
        _1806 = _1498;
        _1807 = _1498;
        _1808 = _1498;
        _1809 = _1498;
        _1810 = _1498;
        _1811 = _1498;
        _1812 = _1498;
        _1813 = _1498;
        _1814 = _1498;
        _1815 = _1498;
        _1816 = 0.0;
        _1817 = 0.0;
        _1818 = 0.0;
    }
    float _1828 = (cbModelParam._m0[1u].x * (_1816 - _1510)) + _1510;
    float _1829 = (cbModelParam._m0[1u].x * (_1817 - _1511)) + _1511;
    float _1830 = (cbModelParam._m0[1u].x * (_1818 - _1512)) + _1512;
    float _1851 = fma(_1830, cbSceneParam._m0[89u].z, fma(_1829, cbSceneParam._m0[89u].y, _1828 * cbSceneParam._m0[89u].x));
    float _1854 = fma(_1830, cbSceneParam._m0[90u].z, fma(_1829, cbSceneParam._m0[90u].y, _1828 * cbSceneParam._m0[90u].x));
    float _1857 = fma(_1830, cbSceneParam._m0[91u].z, fma(_1829, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1828));
    float _1872 = _1135 * 0.5;
    float _1873 = _1136 * 0.5;
    float _1874 = _1137 * 0.5;
    float _1875 = dot(vec4(_1872, _1873, _1874, 1.0), vec4(_1806, _1809, _1812, _1815));
    float _1878 = dot(vec4(_1872, _1873, _1874, 1.0), vec4(_1805, _1808, _1811, _1814));
    float _1881 = dot(vec4(_1872, _1873, _1874, 1.0), vec4(_1804, _1807, _1810, _1813));
    float _1915;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1888 = dot(vec4(_1872, _1873, _1874, 1.0), vec4(_1497, _1501, _1504, _1507));
        float _1892 = dot(vec4(_1872, _1873, _1874, 1.0), vec4(_1499, _1502, _1505, _1508));
        float _1896 = dot(vec4(_1872, _1873, _1874, 1.0), vec4(_1500, _1503, _1506, _1509));
        float _1903 = dot(vec4(cbModelParam._m0[39u]), vec4(_1872, _1873, _1874, 1.0));
        _1915 = dot(vec3(isnan(0.0) ? _1896 : (isnan(_1896) ? 0.0 : max(_1896, 0.0)), isnan(0.0) ? _1892 : (isnan(_1892) ? 0.0 : max(_1892, 0.0)), isnan(0.0) ? _1888 : (isnan(_1888) ? 0.0 : max(_1888, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1903) ? 0.0 : (isnan(0.0) ? _1903 : max(0.0, _1903))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1915 = 1.0;
    }
    float _1926;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1917 = dot(vec4(cbModelParam._m0[40u]), vec4(_1872, _1873, _1874, 1.0));
        _1926 = dot(vec3(isnan(0.0) ? _1875 : (isnan(_1875) ? 0.0 : max(_1875, 0.0)), isnan(0.0) ? _1878 : (isnan(_1878) ? 0.0 : max(_1878, 0.0)), isnan(0.0) ? _1881 : (isnan(_1881) ? 0.0 : max(_1881, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1917) ? 0.0 : (isnan(0.0) ? _1917 : max(0.0, _1917))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1926 = 1.0;
    }
    float _1930 = (_1926 * cbModelParam._m0[1u].x) + (_1915 * (1.0 - cbModelParam._m0[1u].x));
    float _1940 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _981);
    float _1941 = isnan(_1940) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1940 : min(cbModelParam._m0[25u].z, _1940));
    float _2021;
    float _2023;
    float _2025;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1988 = fma(_1196, cbModelParam._m0[13u].z, fma(_1192, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1188)) + cbModelParam._m0[13u].w;
        float _1992 = fma(_1196, cbModelParam._m0[14u].z, fma(_1192, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1188)) + cbModelParam._m0[14u].w;
        float _1996 = fma(_1196, cbModelParam._m0[15u].z, fma(_1192, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1188)) + cbModelParam._m0[15u].w;
        float _1999 = fma(_1137, cbModelParam._m0[13u].z, fma(_1136, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1135));
        float _2002 = fma(_1137, cbModelParam._m0[14u].z, fma(_1136, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1135));
        float _2005 = fma(_1137, cbModelParam._m0[15u].z, fma(_1136, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1135));
        float _2033;
        if (_1999 > 0.0)
        {
            _2033 = abs((1.0 - _1988) / _1999);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1999 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1988 + 1.0) / _1999);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2033 = frontier_phi_14_12_ladder;
        }
        float _2203;
        if (_2002 > 0.0)
        {
            _2203 = abs((1.0 - _1992) / _2002);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2002 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1992 + 1.0) / _2002);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2203 = frontier_phi_23_19_ladder;
        }
        float _2498;
        if (_2005 > 0.0)
        {
            _2498 = abs((1.0 - _1996) / _2005);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2005 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1996 + 1.0) / _2005);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2498 = frontier_phi_35_30_ladder;
        }
        float _2500 = isnan(_2203) ? _2033 : (isnan(_2033) ? _2203 : min(_2033, _2203));
        float _2501 = isnan(_2498) ? _2500 : (isnan(_2500) ? _2498 : min(_2500, _2498));
        float _2505 = (_2501 * _1999) + _1988;
        float _2506 = (_2501 * _2002) + _1992;
        float _2507 = (_2501 * _2005) + _1996;
        float _2508 = _2501 * 9.9999997473787516355514526367188e-05;
        float _2510 = (-1.0) - _2508;
        float _2512 = _2508 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2507 > _2512) || ((_2507 < _2510) || ((_2506 > _2512) || ((_2506 < _2510) || ((_2505 < _2510) || (_2505 > _2512))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2652 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2507, cbModelParam._m0[9u].z, fma(_2506, cbModelParam._m0[9u].y, _2505 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2507, cbModelParam._m0[10u].z, fma(_2506, cbModelParam._m0[10u].y, _2505 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2507, cbModelParam._m0[11u].z, fma(_2506, cbModelParam._m0[11u].y, _2505 * cbModelParam._m0[11u].x))), _1941);
            frontier_phi_13_35_ladder = _2652.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2652.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2652.x * cbModelParam._m0[1u].y;
        }
        _2021 = frontier_phi_13_35_ladder_2;
        _2023 = frontier_phi_13_35_ladder_1;
        _2025 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2009 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1135, _1136, _1137), _1941);
        _2021 = _2009.x * cbModelParam._m0[1u].y;
        _2023 = _2009.y * cbModelParam._m0[1u].y;
        _2025 = _2009.z * cbModelParam._m0[1u].y;
    }
    float _2029 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _981);
    float _2030 = isnan(_2029) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2029 : min(cbModelParam._m0[25u].w, _2029));
    float _2120;
    float _2122;
    float _2124;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2084 = fma(_1196, cbModelParam._m0[21u].z, fma(_1192, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1188)) + cbModelParam._m0[21u].w;
        float _2088 = fma(_1196, cbModelParam._m0[22u].z, fma(_1192, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1188)) + cbModelParam._m0[22u].w;
        float _2092 = fma(_1196, cbModelParam._m0[23u].z, fma(_1192, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1188)) + cbModelParam._m0[23u].w;
        float _2095 = fma(_1137, cbModelParam._m0[21u].z, fma(_1136, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1135));
        float _2098 = fma(_1137, cbModelParam._m0[22u].z, fma(_1136, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1135));
        float _2101 = fma(_1137, cbModelParam._m0[23u].z, fma(_1136, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1135));
        float _2208;
        if (_2095 > 0.0)
        {
            _2208 = abs((1.0 - _2084) / _2095);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2095 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2084 + 1.0) / _2095);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2208 = frontier_phi_25_21_ladder;
        }
        float _2525;
        if (_2098 > 0.0)
        {
            _2525 = abs((1.0 - _2088) / _2098);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2098 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2088 + 1.0) / _2098);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2525 = frontier_phi_37_32_ladder;
        }
        float _2852;
        if (_2101 > 0.0)
        {
            _2852 = abs((1.0 - _2092) / _2101);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2101 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2092 + 1.0) / _2101);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2852 = frontier_phi_47_44_ladder;
        }
        float _2854 = isnan(_2525) ? _2208 : (isnan(_2208) ? _2525 : min(_2208, _2525));
        float _2855 = isnan(_2852) ? _2854 : (isnan(_2854) ? _2852 : min(_2854, _2852));
        float _2859 = (_2855 * _2095) + _2084;
        float _2860 = (_2855 * _2098) + _2088;
        float _2861 = (_2855 * _2101) + _2092;
        float _2862 = _2855 * 9.9999997473787516355514526367188e-05;
        float _2863 = (-1.0) - _2862;
        float _2865 = _2862 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2861 > _2865) || ((_2861 < _2863) || ((_2860 > _2865) || ((_2860 < _2863) || ((_2859 < _2863) || (_2859 > _2865))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2979 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2861, cbModelParam._m0[17u].z, fma(_2860, cbModelParam._m0[17u].y, _2859 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2861, cbModelParam._m0[18u].z, fma(_2860, cbModelParam._m0[18u].y, _2859 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2861, cbModelParam._m0[19u].z, fma(_2860, cbModelParam._m0[19u].y, _2859 * cbModelParam._m0[19u].x))), _2030);
            frontier_phi_22_47_ladder = _2979.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2979.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2979.x * cbModelParam._m0[1u].z;
        }
        _2120 = frontier_phi_22_47_ladder_2;
        _2122 = frontier_phi_22_47_ladder_1;
        _2124 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2104 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1135, _1136, _1137), _2030);
        _2120 = _2104.x * cbModelParam._m0[1u].z;
        _2122 = _2104.y * cbModelParam._m0[1u].z;
        _2124 = _2104.z * cbModelParam._m0[1u].z;
    }
    float _2136 = ((((1.0 - _1156) * ((_1143 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1156 * _1143)) * _1127;
    float _2137 = _2136 * ((cbModelParam._m0[1u].w * (_2120 - _2021)) + _2021);
    float _2138 = _2136 * ((cbModelParam._m0[1u].w * (_2122 - _2023)) + _2023);
    float _2139 = _2136 * ((cbModelParam._m0[1u].w * (_2124 - _2025)) + _2025);
    float _2142 = fma(_2139, cbSceneParam._m0[89u].z, fma(_2138, cbSceneParam._m0[89u].y, _2137 * cbSceneParam._m0[89u].x));
    float _2145 = fma(_2139, cbSceneParam._m0[90u].z, fma(_2138, cbSceneParam._m0[90u].y, _2137 * cbSceneParam._m0[90u].x));
    float _2148 = fma(_2139, cbSceneParam._m0[91u].z, fma(_2138, cbSceneParam._m0[91u].y, _2137 * cbSceneParam._m0[91u].x));
    float _2182 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2186 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2190 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2194 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2195 = _2182 / _2194;
    float _2196 = _2186 / _2194;
    float _2197 = _2190 / _2194;
    float _2344;
    float _2345;
    float _2346;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2224 = ((uint(_2197 > cbSceneParam._m0[59u].y) + uint(_2197 > cbSceneParam._m0[59u].x)) + uint(_2197 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2225 = _2224 + 43u;
        uint _2233 = _2224 + 44u;
        uint _2241 = _2224 + 45u;
        uint _2249 = _2224 + 46u;
        float _2260 = fma(_2194, cbSceneParam._m0[_2225].w, fma(_2190, cbSceneParam._m0[_2225].z, fma(_2186, cbSceneParam._m0[_2225].y, _2182 * cbSceneParam._m0[_2225].x)));
        float _2264 = fma(_2194, cbSceneParam._m0[_2233].w, fma(_2190, cbSceneParam._m0[_2233].z, fma(_2186, cbSceneParam._m0[_2233].y, _2182 * cbSceneParam._m0[_2233].x)));
        float _2272 = fma(_2194, cbSceneParam._m0[_2249].w, fma(_2190, cbSceneParam._m0[_2249].z, fma(_2186, cbSceneParam._m0[_2249].y, _2182 * cbSceneParam._m0[_2249].x)));
        float _2277 = cbSceneParam._m0[33u].z * _2272;
        float _2279 = cbSceneParam._m0[33u].w * _2272;
        float _2282 = fma(_2194, cbSceneParam._m0[_2241].w, fma(_2190, cbSceneParam._m0[_2241].z, fma(_2186, cbSceneParam._m0[_2241].y, _2182 * cbSceneParam._m0[_2241].x))) / _2272;
        float _2330 = (cbSceneParam._m0[33u].x - sqrt(((_2196 * _2196) + (_2195 * _2195)) + (_2197 * _2197))) * cbSceneParam._m0[33u].y;
        float _4638 = isnan(0.0) ? _2330 : (isnan(_2330) ? 0.0 : max(_2330, 0.0));
        float _2337 = (isnan(1.0) ? _4638 : (isnan(_4638) ? 1.0 : min(_4638, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2277 + _2260) / _2272, (_2279 + _2264) / _2272), _2282), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2279 + _2260) / _2272, (_2264 - _2277) / _2272), _2282), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2260 - _2277) / _2272, (_2264 - _2279) / _2272), _2282), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2260 - _2279) / _2272, (_2277 + _2264) / _2272), _2282), 0.0)).x), vec4(0.25)));
        _2344 = 1.0 - (_2337 * cbSceneParam._m0[34u].x);
        _2345 = 1.0 - (_2337 * cbSceneParam._m0[34u].y);
        _2346 = 1.0 - (_2337 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2344 = 1.0;
        _2345 = 1.0;
        _2346 = 1.0;
    }
    float _2410;
    float _2412;
    float _2414;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2398 = fma(_2194, cbSceneParam._m0[63u].w, fma(_2190, cbSceneParam._m0[63u].z, fma(_2186, cbSceneParam._m0[63u].y, _2182 * cbSceneParam._m0[63u].x)));
        float _2399 = fma(_2194, cbSceneParam._m0[60u].w, fma(_2190, cbSceneParam._m0[60u].z, fma(_2186, cbSceneParam._m0[60u].y, _2182 * cbSceneParam._m0[60u].x))) / _2398;
        float _2400 = fma(_2194, cbSceneParam._m0[61u].w, fma(_2190, cbSceneParam._m0[61u].z, fma(_2186, cbSceneParam._m0[61u].y, _2182 * cbSceneParam._m0[61u].x))) / _2398;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2399 >= cbSceneParam._m0[64u].x) && (_2400 >= cbSceneParam._m0[64u].y)) && (_2399 <= cbSceneParam._m0[64u].z)) && (_2400 <= cbSceneParam._m0[64u].w))
        {
            float _2538 = fma(_2194, cbSceneParam._m0[62u].w, fma(_2190, cbSceneParam._m0[62u].z, fma(_2186, cbSceneParam._m0[62u].y, _2182 * cbSceneParam._m0[62u].x))) / _2398;
            float _2542 = isnan(cbSceneParam._m0[41u].w) ? _2538 : (isnan(_2538) ? cbSceneParam._m0[41u].w : max(_2538, cbSceneParam._m0[41u].w));
            float _2585 = (cbSceneParam._m0[33u].x - sqrt(((_2196 * _2196) + (_2195 * _2195)) + (_2197 * _2197))) * cbSceneParam._m0[33u].y;
            float _4654 = isnan(0.0) ? _2585 : (isnan(_2585) ? 0.0 : max(_2585, 0.0));
            float _2592 = (isnan(1.0) ? _4654 : (isnan(_4654) ? 1.0 : min(_4654, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2399, cbSceneParam._m0[33u].w + _2400), _2542), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2399, _2400 - cbSceneParam._m0[33u].z), _2542), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2399 - cbSceneParam._m0[33u].z, _2400 - cbSceneParam._m0[33u].w), _2542), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2399 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2400), _2542), 0.0)).x), vec4(0.25)));
            float _2596 = 1.0 - (_2592 * cbSceneParam._m0[34u].x);
            float _2597 = 1.0 - (_2592 * cbSceneParam._m0[34u].y);
            float _2598 = 1.0 - (_2592 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2598) ? _2346 : (isnan(_2346) ? _2598 : min(_2346, _2598));
            frontier_phi_34_33_ladder_1 = isnan(_2597) ? _2345 : (isnan(_2345) ? _2597 : min(_2345, _2597));
            frontier_phi_34_33_ladder_2 = isnan(_2596) ? _2344 : (isnan(_2344) ? _2596 : min(_2344, _2596));
        }
        else
        {
            frontier_phi_34_33_ladder = _2346;
            frontier_phi_34_33_ladder_1 = _2345;
            frontier_phi_34_33_ladder_2 = _2344;
        }
        _2410 = frontier_phi_34_33_ladder_2;
        _2412 = frontier_phi_34_33_ladder_1;
        _2414 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2410 = _2344;
        _2412 = _2345;
        _2414 = _2346;
    }
    uvec4 _2419 = floatBitsToUint(cbInstanceData._m0[_261 + 5u]);
    uint _2421 = _2419.x * 14u;
    uint _2422 = _2421 + 13u;
    float _2429 = _1127 + (-1.0);
    float _2434 = (cbLight._m0[_2422].x * _2429) + 1.0;
    float _2435 = (cbLight._m0[_2422].y * _2429) + 1.0;
    float _2436 = (cbLight._m0[_2422].z * _2429) + 1.0;
    float _2437 = (cbLight._m0[_2422].w * _2429) + 1.0;
    uint _2438 = _2421 + 5u;
    float _2444 = isnan(1.0) ? _2435 : (isnan(_2435) ? 1.0 : min(_2435, 1.0));
    uint _2448 = _2421 + 4u;
    float _2457 = isnan(1.0) ? _2434 : (isnan(_2434) ? 1.0 : min(_2434, 1.0));
    uint _2461 = _2421 | 1u;
    float _2472 = dot(vec3(cbLight._m0[_2421].xyz), vec3(_978, _979, _980));
    float _2475 = dot(vec3(cbLight._m0[_2461].xyz), vec3(_978, _979, _980));
    float _4690 = isnan(0.0) ? _2472 : (isnan(_2472) ? 0.0 : max(_2472, 0.0));
    float _4701 = isnan(0.0) ? _2475 : (isnan(_2475) ? 0.0 : max(_2475, 0.0));
    float _2480 = (isnan(1.0) ? _4690 : (isnan(_4690) ? 1.0 : min(_4690, 1.0))) * 0.3183098733425140380859375;
    float _2482 = (isnan(1.0) ? _4701 : (isnan(_4701) ? 1.0 : min(_4701, 1.0))) * 0.3183098733425140380859375;
    float _2489 = ((cbLight._m0[_2438].x * _2444) * _2482) + (((cbLight._m0[_2448].x * _2410) * _2457) * _2480);
    float _2490 = ((_2444 * cbLight._m0[_2438].y) * _2482) + (((cbLight._m0[_2448].y * _2412) * _2457) * _2480);
    float _2491 = ((_2444 * cbLight._m0[_2438].z) * _2482) + (((cbLight._m0[_2448].z * _2414) * _2457) * _2480);
    uvec4 _2495 = floatBitsToUint(cbLight._m0[_2421 + 12u]);
    bool _2497 = _2495.x == 0u;
    float _2599;
    float _2601;
    float _2603;
    if (_2497)
    {
        _2599 = _2489;
        _2601 = _2490;
        _2603 = _2491;
    }
    else
    {
        uint _2607 = _2421 + 6u;
        float _2623 = (dot(vec3(cbLight._m0[_2421 + 2u].xyz), vec3(_978, _979, _980)) * 0.5) + 0.5;
        float _2624 = _2623 * _2623;
        float _4712 = isnan(0.0) ? _2624 : (isnan(_2624) ? 0.0 : max(_2624, 0.0));
        float _2625 = isnan(1.0) ? _4712 : (isnan(_4712) ? 1.0 : min(_4712, 1.0));
        float _2626 = isnan(1.0) ? _2436 : (isnan(_2436) ? 1.0 : min(_2436, 1.0));
        _2599 = (((cbLight._m0[_2607].x * 0.3183098733425140380859375) * _2625) * _2626) + _2489;
        _2601 = (((cbLight._m0[_2607].y * 0.3183098733425140380859375) * _2625) * _2626) + _2490;
        _2603 = (((cbLight._m0[_2607].z * 0.3183098733425140380859375) * _2625) * _2626) + _2491;
    }
    bool _2606 = _2495.y == 0u;
    float _2661;
    float _2663;
    float _2665;
    if (_2606)
    {
        _2661 = _2599;
        _2663 = _2601;
        _2665 = _2603;
    }
    else
    {
        uint _2823 = _2421 + 7u;
        float _2839 = (dot(vec3(cbLight._m0[_2421 + 3u].xyz), vec3(_978, _979, _980)) * 0.5) + 0.5;
        float _2840 = _2839 * _2839;
        float _4728 = isnan(0.0) ? _2840 : (isnan(_2840) ? 0.0 : max(_2840, 0.0));
        float _2841 = isnan(1.0) ? _4728 : (isnan(_4728) ? 1.0 : min(_4728, 1.0));
        float _2842 = isnan(1.0) ? _2437 : (isnan(_2437) ? 1.0 : min(_2437, 1.0));
        _2661 = (((cbLight._m0[_2823].x * 0.3183098733425140380859375) * _2841) * _2842) + _2599;
        _2663 = (((cbLight._m0[_2823].y * 0.3183098733425140380859375) * _2841) * _2842) + _2601;
        _2665 = (((cbLight._m0[_2823].z * 0.3183098733425140380859375) * _2841) * _2842) + _2603;
    }
    uint _2668 = _2421 + 8u;
    float _2681 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2421].w)) * _981) * 0.949999988079071044921875);
    float _2682 = _2681 * _2681;
    float _2683 = cbLight._m0[_2421].x + _1056;
    float _2684 = cbLight._m0[_2421].y + _1057;
    float _2685 = cbLight._m0[_2421].z + _1058;
    float _2689 = inversesqrt(dot(vec3(_2683, _2684, _2685), vec3(_2683, _2684, _2685)));
    float _2690 = _2689 * _2683;
    float _2691 = _2689 * _2684;
    float _2692 = _2689 * _2685;
    float _2693 = dot(vec3(_978, _979, _980), vec3(cbLight._m0[_2421].xyz));
    float _4744 = isnan(0.0) ? _2693 : (isnan(_2693) ? 0.0 : max(_2693, 0.0));
    float _2696 = isnan(1.0) ? _4744 : (isnan(_4744) ? 1.0 : min(_4744, 1.0));
    float _4755 = isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0));
    float _2697 = isnan(1.0) ? _4755 : (isnan(_4755) ? 1.0 : min(_4755, 1.0));
    float _2698 = dot(vec3(_978, _979, _980), vec3(_2690, _2691, _2692));
    float _4766 = isnan(0.0) ? _2698 : (isnan(_2698) ? 0.0 : max(_2698, 0.0));
    float _2701 = isnan(1.0) ? _4766 : (isnan(_4766) ? 1.0 : min(_4766, 1.0));
    float _2702 = dot(vec3(cbLight._m0[_2421].xyz), vec3(_2690, _2691, _2692));
    float _4777 = isnan(0.0) ? _2702 : (isnan(_2702) ? 0.0 : max(_2702, 0.0));
    float _2706 = _2682 * _2682;
    float _2710 = ((_2701 * _2701) * (_2706 + (-1.0))) + 1.0;
    float _2721 = (exp2(log2(1.0 - (isnan(1.0) ? _4777 : (isnan(_4777) ? 1.0 : min(_4777, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2722 = 1.0 - _2682;
    float _2733 = (0.5 / (((_2697 * ((_2696 * _2722) + _2682)) + 9.9999999392252902907785028219223e-09) + (((_2697 * _2722) + _2682) * _2696))) * _2696;
    float _4788 = isnan(0.0) ? _2733 : (isnan(_2733) ? 0.0 : max(_2733, 0.0));
    float _2735 = (isnan(1.0) ? _4788 : (isnan(_4788) ? 1.0 : min(_4788, 1.0))) * (_2706 / ((_2710 * _2710) * 3.141590118408203125));
    uint _2749 = _2421 + 9u;
    float _2760 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2461].w)) * _981) * 0.949999988079071044921875);
    float _2761 = _2760 * _2760;
    float _2762 = cbLight._m0[_2461].x + _1056;
    float _2763 = cbLight._m0[_2461].y + _1057;
    float _2764 = cbLight._m0[_2461].z + _1058;
    float _2768 = inversesqrt(dot(vec3(_2762, _2763, _2764), vec3(_2762, _2763, _2764)));
    float _2769 = _2768 * _2762;
    float _2770 = _2768 * _2763;
    float _2771 = _2768 * _2764;
    float _2772 = dot(vec3(_978, _979, _980), vec3(cbLight._m0[_2461].xyz));
    float _4799 = isnan(0.0) ? _2772 : (isnan(_2772) ? 0.0 : max(_2772, 0.0));
    float _2775 = isnan(1.0) ? _4799 : (isnan(_4799) ? 1.0 : min(_4799, 1.0));
    float _2776 = dot(vec3(_978, _979, _980), vec3(_2769, _2770, _2771));
    float _4810 = isnan(0.0) ? _2776 : (isnan(_2776) ? 0.0 : max(_2776, 0.0));
    float _2779 = isnan(1.0) ? _4810 : (isnan(_4810) ? 1.0 : min(_4810, 1.0));
    float _2780 = dot(vec3(cbLight._m0[_2461].xyz), vec3(_2769, _2770, _2771));
    float _4821 = isnan(0.0) ? _2780 : (isnan(_2780) ? 0.0 : max(_2780, 0.0));
    float _2784 = _2761 * _2761;
    float _2788 = ((_2779 * _2779) * (_2784 + (-1.0))) + 1.0;
    float _2797 = (exp2(log2(1.0 - (isnan(1.0) ? _4821 : (isnan(_4821) ? 1.0 : min(_4821, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2798 = 1.0 - _2761;
    float _2808 = (0.5 / (((_2697 * ((_2775 * _2798) + _2761)) + 9.9999999392252902907785028219223e-09) + (((_2697 * _2798) + _2761) * _2775))) * _2775;
    float _4832 = isnan(0.0) ? _2808 : (isnan(_2808) ? 0.0 : max(_2808, 0.0));
    float _2810 = (isnan(1.0) ? _4832 : (isnan(_4832) ? 1.0 : min(_4832, 1.0))) * (_2784 / ((_2788 * _2788) * 3.141590118408203125));
    float _2820 = (((_2797 * cbLight._m0[_2749].x) * _2810) * _2444) + ((((cbLight._m0[_2668].x * _2410) * _2721) * _2735) * _2457);
    float _2821 = (((_2797 * cbLight._m0[_2749].y) * _2810) * _2444) + ((((cbLight._m0[_2668].y * _2412) * _2721) * _2735) * _2457);
    float _2822 = (((_2797 * cbLight._m0[_2749].z) * _2810) * _2444) + ((((cbLight._m0[_2668].z * _2414) * _2721) * _2735) * _2457);
    float _2878;
    float _2880;
    float _2882;
    if (_2497)
    {
        _2878 = _2820;
        _2880 = _2821;
        _2882 = _2822;
    }
    else
    {
        uint _2884 = _2421 + 2u;
        uint _2888 = _2421 + 10u;
        float _2902 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2884].w)) * _981) * 0.949999988079071044921875);
        float _2903 = _2902 * _2902;
        float _2904 = cbLight._m0[_2884].x + _1056;
        float _2905 = cbLight._m0[_2884].y + _1057;
        float _2906 = cbLight._m0[_2884].z + _1058;
        float _2910 = inversesqrt(dot(vec3(_2904, _2905, _2906), vec3(_2904, _2905, _2906)));
        float _2911 = _2910 * _2904;
        float _2912 = _2910 * _2905;
        float _2913 = _2910 * _2906;
        float _2914 = dot(vec3(_978, _979, _980), vec3(cbLight._m0[_2884].xyz));
        float _4843 = isnan(0.0) ? _2914 : (isnan(_2914) ? 0.0 : max(_2914, 0.0));
        float _2917 = isnan(1.0) ? _4843 : (isnan(_4843) ? 1.0 : min(_4843, 1.0));
        float _2918 = dot(vec3(_978, _979, _980), vec3(_2911, _2912, _2913));
        float _4854 = isnan(0.0) ? _2918 : (isnan(_2918) ? 0.0 : max(_2918, 0.0));
        float _2921 = isnan(1.0) ? _4854 : (isnan(_4854) ? 1.0 : min(_4854, 1.0));
        float _2922 = dot(vec3(cbLight._m0[_2884].xyz), vec3(_2911, _2912, _2913));
        float _4865 = isnan(0.0) ? _2922 : (isnan(_2922) ? 0.0 : max(_2922, 0.0));
        float _2926 = _2903 * _2903;
        float _2930 = ((_2921 * _2921) * (_2926 + (-1.0))) + 1.0;
        float _2939 = (exp2(log2(1.0 - (isnan(1.0) ? _4865 : (isnan(_4865) ? 1.0 : min(_4865, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2940 = 1.0 - _2903;
        float _2950 = (0.5 / (((_2697 * ((_2917 * _2940) + _2903)) + 9.9999999392252902907785028219223e-09) + (((_2697 * _2940) + _2903) * _2917))) * _2917;
        float _4876 = isnan(0.0) ? _2950 : (isnan(_2950) ? 0.0 : max(_2950, 0.0));
        float _2952 = (isnan(1.0) ? _4876 : (isnan(_4876) ? 1.0 : min(_4876, 1.0))) * (_2926 / ((_2930 * _2930) * 3.141590118408203125));
        float _2953 = isnan(1.0) ? _2436 : (isnan(_2436) ? 1.0 : min(_2436, 1.0));
        _2878 = (((_2939 * cbLight._m0[_2888].x) * _2952) * _2953) + _2820;
        _2880 = (((_2939 * cbLight._m0[_2888].y) * _2952) * _2953) + _2821;
        _2882 = (((_2939 * cbLight._m0[_2888].z) * _2952) * _2953) + _2822;
    }
    float _2984;
    float _2986;
    float _2988;
    if (_2606)
    {
        _2984 = _2878;
        _2986 = _2880;
        _2988 = _2882;
    }
    else
    {
        uint _2995 = _2421 + 3u;
        uint _2999 = _2421 + 11u;
        float _3013 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2995].w)) * _981) * 0.949999988079071044921875);
        float _3014 = _3013 * _3013;
        float _3015 = cbLight._m0[_2995].x + _1056;
        float _3016 = cbLight._m0[_2995].y + _1057;
        float _3017 = cbLight._m0[_2995].z + _1058;
        float _3021 = inversesqrt(dot(vec3(_3015, _3016, _3017), vec3(_3015, _3016, _3017)));
        float _3022 = _3021 * _3015;
        float _3023 = _3021 * _3016;
        float _3024 = _3021 * _3017;
        float _3025 = dot(vec3(_978, _979, _980), vec3(cbLight._m0[_2995].xyz));
        float _4892 = isnan(0.0) ? _3025 : (isnan(_3025) ? 0.0 : max(_3025, 0.0));
        float _3028 = isnan(1.0) ? _4892 : (isnan(_4892) ? 1.0 : min(_4892, 1.0));
        float _3029 = dot(vec3(_978, _979, _980), vec3(_3022, _3023, _3024));
        float _4903 = isnan(0.0) ? _3029 : (isnan(_3029) ? 0.0 : max(_3029, 0.0));
        float _3032 = isnan(1.0) ? _4903 : (isnan(_4903) ? 1.0 : min(_4903, 1.0));
        float _3033 = dot(vec3(cbLight._m0[_2995].xyz), vec3(_3022, _3023, _3024));
        float _4914 = isnan(0.0) ? _3033 : (isnan(_3033) ? 0.0 : max(_3033, 0.0));
        float _3037 = _3014 * _3014;
        float _3041 = ((_3032 * _3032) * (_3037 + (-1.0))) + 1.0;
        float _3050 = (exp2(log2(1.0 - (isnan(1.0) ? _4914 : (isnan(_4914) ? 1.0 : min(_4914, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3051 = 1.0 - _3014;
        float _3061 = (0.5 / (((_2697 * ((_3028 * _3051) + _3014)) + 9.9999999392252902907785028219223e-09) + (((_2697 * _3051) + _3014) * _3028))) * _3028;
        float _4925 = isnan(0.0) ? _3061 : (isnan(_3061) ? 0.0 : max(_3061, 0.0));
        float _3063 = (isnan(1.0) ? _4925 : (isnan(_4925) ? 1.0 : min(_4925, 1.0))) * (_3037 / ((_3041 * _3041) * 3.141590118408203125));
        float _3064 = isnan(1.0) ? _2437 : (isnan(_2437) ? 1.0 : min(_2437, 1.0));
        _2984 = (((_3050 * cbLight._m0[_2999].x) * _3063) * _3064) + _2878;
        _2986 = (((_3050 * cbLight._m0[_2999].y) * _3063) * _3064) + _2880;
        _2988 = (((_3050 * cbLight._m0[_2999].z) * _3063) * _3064) + _2882;
    }
    float _3130;
    float _3132;
    float _3134;
    float _3136;
    float _3138;
    float _3140;
    if (_2419.y == 0u)
    {
        uvec4 _3085 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3086 = _3085.x;
        uint _3097 = uint((float(_3085.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1065) / _3086))) + floor(float(uint(cbSceneParam._m0[85u].x * _1064) / _3086)));
        float _3107 = (log2(_2197 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3108 = isnan(0.0) ? _3107 : (isnan(_3107) ? 0.0 : max(_3107, 0.0));
        uint _3111 = uint(isnan(14.0) ? _3108 : (isnan(_3108) ? 14.0 : min(_3108, 14.0)));
        uvec4 _3116 = texelFetch(g_lightClusterGridBuffer, int(((_3111 << 2u) + (_3097 << 6u)) >> 2u));
        uint _3117 = _3116.x;
        uint _3118 = _3085.z;
        float _3197;
        float _3199;
        float _3201;
        float _3203;
        float _3205;
        float _3207;
        if (((((1u << ((_3118 >> 4u) & 15u)) + 4294967295u) & _3117) == 0u) || ((_3118 & 240u) == 0u))
        {
            _3197 = 0.0;
            _3199 = 0.0;
            _3201 = 0.0;
            _3203 = 0.0;
            _3205 = 0.0;
            _3207 = 0.0;
        }
        else
        {
            float _3198;
            float _3200;
            float _3202;
            float _3204;
            float _3206;
            float _3208;
            float _3341 = 0.0;
            float _3342 = 0.0;
            float _3343 = 0.0;
            float _3344 = 0.0;
            float _3345 = 0.0;
            float _3346 = 0.0;
            uint _3347 = 0u;
            uint _3356;
            bool _3357;
            for (;;)
            {
                _3356 = texelFetch(g_lightClassification, int((((_3111 << 5u) + (_3097 << 9u)) + (_3347 << 2u)) >> 2u)).x;
                _3357 = _3356 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3357)
                {
                    frontier_phi_66_pred = _3346;
                    frontier_phi_66_pred_1 = _3345;
                    frontier_phi_66_pred_2 = _3344;
                    frontier_phi_66_pred_3 = _3343;
                    frontier_phi_66_pred_4 = _3342;
                    frontier_phi_66_pred_5 = _3341;
                }
                else
                {
                    float _3465;
                    float _3466;
                    float _3467;
                    float _3468;
                    float _3469;
                    float _3470;
                    uint _3471;
                    _3465 = _3341;
                    _3466 = _3342;
                    _3467 = _3343;
                    _3468 = _3344;
                    _3469 = _3345;
                    _3470 = _3346;
                    _3471 = _3356;
                    float _3397;
                    float _3398;
                    float _3399;
                    float _3400;
                    float _3401;
                    float _3402;
                    for (;;)
                    {
                        uint _3475 = uint(findLSB(_3471)) + (_3347 << 5u);
                        uint _3472 = (_3471 + 4294967295u) & _3471;
                        uint _3477 = _3475 * 48u;
                        vec4 _3491 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3477)).x, texelFetch(g_PointLightRenderingBuffer, int(_3477 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3477 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3477 + 3u)).x));
                        uint _3497 = (_3475 * 48u) + 4u;
                        vec4 _3510 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3497)).x, texelFetch(g_PointLightRenderingBuffer, int(_3497 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3497 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3497 + 3u)).x));
                        uint _3516 = (_3475 * 48u) + 8u;
                        vec3 _3527 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3516)).x, texelFetch(g_PointLightRenderingBuffer, int(_3516 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3516 + 2u)).x));
                        float _3531 = _3491.x - _2195;
                        float _3532 = _3491.y - _2196;
                        float _3533 = _3491.z - _2197;
                        float _3534 = dot(vec3(_3531, _3532, _3533), vec3(_3531, _3532, _3533));
                        float _3537 = inversesqrt(_3534);
                        float _3538 = _3537 * _3531;
                        float _3539 = _3537 * _3532;
                        float _3540 = _3537 * _3533;
                        float _3541 = dot(vec3(_1083, _1086, _1089), vec3(_3538, _3539, _3540));
                        float _3546 = 1.0 - (_3534 * _3491.w);
                        float _4951 = isnan(0.0) ? _3546 : (isnan(_3546) ? 0.0 : max(_3546, 0.0));
                        float _3547 = isnan(1.0) ? _4951 : (isnan(_4951) ? 1.0 : min(_4951, 1.0));
                        float _3548 = sqrt(_3534) * _3510.w;
                        float _3551 = 1.39999997615814208984375 / (_3548 + 1.39999997615814208984375);
                        float _3552 = _3551 * _3551;
                        float _3555 = ((1.0 - _3552) * _3541) + _3552;
                        float _3558 = _3548 * _3548;
                        float _3562 = ((isnan(0.0) ? _3555 : (isnan(_3555) ? 0.0 : max(_3555, 0.0))) * _3547) / ((_3558 * 0.699999988079071044921875) + 1.0);
                        float _3566 = (-0.0) - _2195;
                        float _3567 = (-0.0) - _2196;
                        float _3568 = (-0.0) - _2197;
                        float _3572 = inversesqrt(dot(vec3(_3566, _3567, _3568), vec3(_3566, _3567, _3568)));
                        float _3573 = _3572 * _3566;
                        float _3574 = _3572 * _3567;
                        float _3575 = _3572 * _3568;
                        float _3582 = exp2(log2(1.0 / ((_3558 * 3.5) + 5.0)) * 0.25);
                        float _3583 = 1.0 - _1143;
                        float _3590 = sqrt(1.0 - ((1.0 - (_3583 * _3583)) * (1.0 - (_3582 * _3582))));
                        float _3591 = _3590 * _3590;
                        float _3592 = _3591 * _3591;
                        float _3593 = _3573 + _3538;
                        float _3594 = _3574 + _3539;
                        float _3595 = _3575 + _3540;
                        float _3599 = inversesqrt(dot(vec3(_3593, _3594, _3595), vec3(_3593, _3594, _3595)));
                        float _3603 = dot(vec3(_1083, _1086, _1089), vec3(_3573, _3574, _3575));
                        float _4967 = isnan(0.0) ? _3603 : (isnan(_3603) ? 0.0 : max(_3603, 0.0));
                        float _3606 = isnan(1.0) ? _4967 : (isnan(_4967) ? 1.0 : min(_4967, 1.0));
                        float _3607 = dot(vec3(_1083, _1086, _1089), vec3(_3599 * _3593, _3599 * _3594, _3599 * _3595));
                        float _4978 = isnan(0.0) ? _3607 : (isnan(_3607) ? 0.0 : max(_3607, 0.0));
                        float _3610 = isnan(1.0) ? _4978 : (isnan(_4978) ? 1.0 : min(_4978, 1.0));
                        float _3614 = ((_3610 * _3610) * (_3592 + (-1.0))) + 1.0;
                        float _3615 = _3551 * _3591;
                        float _3616 = _3615 * _3615;
                        float _3619 = ((1.0 - _3616) * _3541) + _3616;
                        float _4989 = isnan(0.0) ? _3619 : (isnan(_3619) ? 0.0 : max(_3619, 0.0));
                        float _3620 = isnan(1.0) ? _4989 : (isnan(_4989) ? 1.0 : min(_4989, 1.0));
                        float _3621 = 1.0 - _3591;
                        float _3631 = (0.5 / (((_3620 * ((_3606 * _3621) + _3591)) + 9.9999999392252902907785028219223e-09) + (((_3620 * _3621) + _3591) * _3606))) * _3620;
                        float _5000 = isnan(0.0) ? _3631 : (isnan(_3631) ? 0.0 : max(_3631, 0.0));
                        float _3642 = (((_3592 * 3.1415927410125732421875) * (isnan(1.0) ? _5000 : (isnan(_5000) ? 1.0 : min(_5000, 1.0)))) / ((_3614 * _3614) * ((_3558 * 2.1991131305694580078125) + 3.141590118408203125))) * _3547;
                        _3400 = (_3562 * _3510.x) + _3468;
                        _3401 = (_3562 * _3510.y) + _3469;
                        _3402 = (_3562 * _3510.z) + _3470;
                        _3397 = (_3642 * _3527.x) + _3465;
                        _3398 = (_3642 * _3527.y) + _3466;
                        _3399 = (_3642 * _3527.z) + _3467;
                        if (_3472 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3465 = _3397;
                            _3466 = _3398;
                            _3467 = _3399;
                            _3468 = _3400;
                            _3469 = _3401;
                            _3470 = _3402;
                            _3471 = _3472;
                        }
                    }
                    frontier_phi_66_pred = _3402;
                    frontier_phi_66_pred_1 = _3401;
                    frontier_phi_66_pred_2 = _3400;
                    frontier_phi_66_pred_3 = _3399;
                    frontier_phi_66_pred_4 = _3398;
                    frontier_phi_66_pred_5 = _3397;
                }
                _3208 = frontier_phi_66_pred;
                _3206 = frontier_phi_66_pred_1;
                _3204 = frontier_phi_66_pred_2;
                _3202 = frontier_phi_66_pred_3;
                _3200 = frontier_phi_66_pred_4;
                _3198 = frontier_phi_66_pred_5;
                uint _3348 = _3347 + 1u;
                if (_3348 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3341 = _3198;
                    _3342 = _3200;
                    _3343 = _3202;
                    _3344 = _3204;
                    _3345 = _3206;
                    _3346 = _3208;
                    _3347 = _3348;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3197 = _3198;
            _3199 = _3200;
            _3201 = _3202;
            _3203 = _3204;
            _3205 = _3206;
            _3207 = _3208;
        }
        uvec4 _3211 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3212 = _3211.z;
        uint _3214 = (_3212 >> 8u) & 15u;
        float _3309;
        float _3311;
        float _3313;
        float _3315;
        float _3317;
        float _3319;
        if (((4294967295u << _3214) & _3117) == 0u)
        {
            _3309 = _3197;
            _3311 = _3199;
            _3313 = _3201;
            _3315 = _3203;
            _3317 = _3205;
            _3319 = _3207;
        }
        else
        {
            float _3334 = inversesqrt(dot(vec3(_2195, _2196, _2197), vec3(_2195, _2196, _2197)));
            float _3335 = _3334 * _2195;
            float _3336 = _3334 * _2196;
            float _3337 = _3334 * _2197;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3214 < ((_3212 >> 12u) & 15u))
            {
                float _3310;
                float _3312;
                float _3314;
                float _3316;
                float _3318;
                float _3320;
                float _3448 = _3197;
                float _3449 = _3199;
                float _3450 = _3201;
                float _3451 = _3203;
                float _3452 = _3205;
                float _3453 = _3207;
                uint _3454 = _3214;
                uint _3463;
                bool _3464;
                for (;;)
                {
                    _3463 = texelFetch(g_lightClassification, int((((_3111 << 5u) + (_3097 << 9u)) + (_3454 << 2u)) >> 2u)).x;
                    _3464 = _3463 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3464)
                    {
                        frontier_phi_72_pred = _3453;
                        frontier_phi_72_pred_1 = _3452;
                        frontier_phi_72_pred_2 = _3451;
                        frontier_phi_72_pred_3 = _3450;
                        frontier_phi_72_pred_4 = _3449;
                        frontier_phi_72_pred_5 = _3448;
                    }
                    else
                    {
                        float _3647;
                        float _3648;
                        float _3649;
                        float _3650;
                        float _3651;
                        float _3652;
                        float _3940;
                        float _3941;
                        float _3942;
                        float _3943;
                        float _3944;
                        float _3945;
                        float _3660 = _3448;
                        float _3661 = _3449;
                        float _3662 = _3450;
                        float _3663 = _3451;
                        float _3664 = _3452;
                        float _3665 = _3453;
                        uint _3666 = _3463;
                        uint _3667;
                        vec4 _3692;
                        float _3693;
                        vec4 _3708;
                        vec3 _3720;
                        vec4 _3735;
                        vec4 _3750;
                        float _3796;
                        bool _3797;
                        for (;;)
                        {
                            uint _3677 = ((_3454 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3666));
                            _3667 = (_3666 + 4294967295u) & _3666;
                            uint _3679 = _3677 * 40u;
                            _3692 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3679)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3679 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3679 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3679 + 3u)).x));
                            _3693 = _3692.w;
                            uint _3695 = (_3677 * 40u) + 4u;
                            _3708 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3695)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3695 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3695 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3695 + 3u)).x));
                            uint _3710 = (_3677 * 40u) + 8u;
                            _3720 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3710)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3710 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3710 + 2u)).x));
                            uint _3722 = (_3677 * 40u) + 16u;
                            _3735 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3722)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3722 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3722 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3722 + 3u)).x));
                            uint _3737 = (_3677 * 40u) + 20u;
                            _3750 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3737)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3737 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3737 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3737 + 3u)).x));
                            uint _3752 = (_3677 * 40u) + 24u;
                            vec4 _3765 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3752)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3752 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3752 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3752 + 3u)).x));
                            uint _3771 = (_3677 * 40u) + 28u;
                            vec4 _3784 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3771)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3771 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3771 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3771 + 3u)).x));
                            _3796 = fma(_2197, _3784.z, fma(_2196, _3784.y, _3784.x * _2195)) + _3784.w;
                            _3797 = !((fma(_2197, _3765.z, fma(_2196, _3765.y, _3765.x * _2195)) + _3765.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3797)
                            {
                                float _3824 = _3692.x - _2195;
                                float _3825 = _3692.y - _2196;
                                float _3826 = _3692.z - _2197;
                                float _3827 = dot(vec3(_3824, _3825, _3826), vec3(_3824, _3825, _3826));
                                float _3830 = inversesqrt(_3827);
                                float _3831 = _3830 * _3824;
                                float _3832 = _3830 * _3825;
                                float _3833 = _3830 * _3826;
                                float _3837 = 1.0 - (_3827 / (_3693 * _3693));
                                float _5011 = isnan(0.0) ? _3837 : (isnan(_3837) ? 0.0 : max(_3837, 0.0));
                                float _3838 = isnan(1.0) ? _5011 : (isnan(_5011) ? 1.0 : min(_5011, 1.0));
                                float _3842 = sqrt(_3827) * _3708.w;
                                float _3844 = 1.39999997615814208984375 / (_3842 + 1.39999997615814208984375);
                                float _3845 = _3844 * _3844;
                                float _3848 = ((1.0 - _3845) * dot(vec3(_3831, _3832, _3833), vec3(_1083, _1086, _1089))) + _3845;
                                float _3851 = _3842 * _3842;
                                float _3855 = (fma(_2197, _3735.z, fma(_2196, _3735.y, _3735.x * _2195)) + _3735.w) / _3796;
                                float _3856 = (fma(_2197, _3750.z, fma(_2196, _3750.y, _3750.x * _2195)) + _3750.w) / _3796;
                                float _3860 = 1.0 - dot(vec2(_3855, _3856), vec2(_3855, _3856));
                                float _5027 = isnan(0.0) ? _3860 : (isnan(_3860) ? 0.0 : max(_3860, 0.0));
                                float _3861 = isnan(1.0) ? _5027 : (isnan(_5027) ? 1.0 : min(_5027, 1.0));
                                float _3862 = _3861 * (((isnan(0.0) ? _3848 : (isnan(_3848) ? 0.0 : max(_3848, 0.0))) * _3838) / ((_3851 * 0.699999988079071044921875) + 1.0));
                                float _3874 = exp2(log2(1.0 / ((_3851 * 3.5) + 5.0)) * 0.25);
                                float _3875 = 1.0 - _1143;
                                float _3882 = sqrt(1.0 - ((1.0 - (_3875 * _3875)) * (1.0 - (_3874 * _3874))));
                                float _3883 = _3882 * _3882;
                                float _3884 = _3883 * _3883;
                                float _3885 = _3831 - _3335;
                                float _3886 = _3832 - _3336;
                                float _3887 = _3833 - _3337;
                                float _3891 = inversesqrt(dot(vec3(_3885, _3886, _3887), vec3(_3885, _3886, _3887)));
                                float _3895 = dot(vec3(_1083, _1086, _1089), vec3((-0.0) - _3335, (-0.0) - _3336, (-0.0) - _3337));
                                float _5038 = isnan(0.0) ? _3895 : (isnan(_3895) ? 0.0 : max(_3895, 0.0));
                                float _3898 = isnan(1.0) ? _5038 : (isnan(_5038) ? 1.0 : min(_5038, 1.0));
                                float _3899 = dot(vec3(_1083, _1086, _1089), vec3(_3891 * _3885, _3891 * _3886, _3891 * _3887));
                                float _5049 = isnan(0.0) ? _3899 : (isnan(_3899) ? 0.0 : max(_3899, 0.0));
                                float _3902 = isnan(1.0) ? _5049 : (isnan(_5049) ? 1.0 : min(_5049, 1.0));
                                float _3906 = ((_3902 * _3902) * (_3884 + (-1.0))) + 1.0;
                                float _3907 = _3844 * _3883;
                                float _3908 = _3907 * _3907;
                                float _3914 = ((1.0 - _3908) * dot(vec3(_1083, _1086, _1089), vec3(_3831, _3832, _3833))) + _3908;
                                float _5060 = isnan(0.0) ? _3914 : (isnan(_3914) ? 0.0 : max(_3914, 0.0));
                                float _3915 = isnan(1.0) ? _5060 : (isnan(_5060) ? 1.0 : min(_5060, 1.0));
                                float _3916 = 1.0 - _3883;
                                float _3926 = (0.5 / (((_3915 * ((_3898 * _3916) + _3883)) + 9.9999999392252902907785028219223e-09) + (((_3915 * _3916) + _3883) * _3898))) * _3915;
                                float _5071 = isnan(0.0) ? _3926 : (isnan(_3926) ? 0.0 : max(_3926, 0.0));
                                float _3936 = (_3861 * _3838) * (((_3884 * 3.1415927410125732421875) * (isnan(1.0) ? _5071 : (isnan(_5071) ? 1.0 : min(_5071, 1.0)))) / ((_3906 * _3906) * ((_3851 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3862 * _3708.y;
                                frontier_phi_78_pred_1 = _3862 * _3708.x;
                                frontier_phi_78_pred_2 = _3936 * _3720.z;
                                frontier_phi_78_pred_3 = _3936 * _3720.y;
                                frontier_phi_78_pred_4 = _3936 * _3720.x;
                                frontier_phi_78_pred_5 = _3862 * _3708.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3944 = frontier_phi_78_pred;
                            _3943 = frontier_phi_78_pred_1;
                            _3942 = frontier_phi_78_pred_2;
                            _3941 = frontier_phi_78_pred_3;
                            _3940 = frontier_phi_78_pred_4;
                            _3945 = frontier_phi_78_pred_5;
                            _3650 = _3943 + _3663;
                            _3651 = _3944 + _3664;
                            _3652 = _3945 + _3665;
                            _3647 = _3940 + _3660;
                            _3648 = _3941 + _3661;
                            _3649 = _3942 + _3662;
                            if (_3667 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3660 = _3647;
                                _3661 = _3648;
                                _3662 = _3649;
                                _3663 = _3650;
                                _3664 = _3651;
                                _3665 = _3652;
                                _3666 = _3667;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3652;
                        frontier_phi_72_pred_1 = _3651;
                        frontier_phi_72_pred_2 = _3650;
                        frontier_phi_72_pred_3 = _3649;
                        frontier_phi_72_pred_4 = _3648;
                        frontier_phi_72_pred_5 = _3647;
                    }
                    _3320 = frontier_phi_72_pred;
                    _3318 = frontier_phi_72_pred_1;
                    _3316 = frontier_phi_72_pred_2;
                    _3314 = frontier_phi_72_pred_3;
                    _3312 = frontier_phi_72_pred_4;
                    _3310 = frontier_phi_72_pred_5;
                    uint _3455 = _3454 + 1u;
                    if (_3455 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3448 = _3310;
                        _3449 = _3312;
                        _3450 = _3314;
                        _3451 = _3316;
                        _3452 = _3318;
                        _3453 = _3320;
                        _3454 = _3455;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3320;
                frontier_phi_60_61_ladder_1 = _3318;
                frontier_phi_60_61_ladder_2 = _3314;
                frontier_phi_60_61_ladder_3 = _3312;
                frontier_phi_60_61_ladder_4 = _3310;
                frontier_phi_60_61_ladder_5 = _3316;
            }
            else
            {
                frontier_phi_60_61_ladder = _3207;
                frontier_phi_60_61_ladder_1 = _3205;
                frontier_phi_60_61_ladder_2 = _3201;
                frontier_phi_60_61_ladder_3 = _3199;
                frontier_phi_60_61_ladder_4 = _3197;
                frontier_phi_60_61_ladder_5 = _3203;
            }
            _3309 = frontier_phi_60_61_ladder_4;
            _3311 = frontier_phi_60_61_ladder_3;
            _3313 = frontier_phi_60_61_ladder_2;
            _3315 = frontier_phi_60_61_ladder_5;
            _3317 = frontier_phi_60_61_ladder_1;
            _3319 = frontier_phi_60_61_ladder;
        }
        float _3324 = isnan(1.0) ? _1127 : (isnan(_1127) ? 1.0 : min(_1127, 1.0));
        _3130 = (_3324 * _3315) + _2661;
        _3132 = (_3324 * _3317) + _2663;
        _3134 = (_3324 * _3319) + _2665;
        _3136 = ((_3309 * 0.039999999105930328369140625) * _3324) + _2984;
        _3138 = ((_3311 * 0.039999999105930328369140625) * _3324) + _2986;
        _3140 = ((_3313 * 0.039999999105930328369140625) * _3324) + _2988;
    }
    else
    {
        _3130 = _2661;
        _3132 = _2663;
        _3134 = _2665;
        _3136 = _2984;
        _3138 = _2986;
        _3140 = _2988;
    }
    float _5087 = isnan(0.0) ? _1112 : (isnan(_1112) ? 0.0 : max(_1112, 0.0));
    float _5098 = isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0));
    float _5109 = isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0));
    uint _3160 = _261 + 6u;
    float _3168 = _1064 / cbSceneParam._m0[86u].x;
    float _3169 = _1065 / cbSceneParam._m0[86u].y;
    vec4 _3183 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3168, _3169, (log2((isnan(cbSceneParam._m0[77u].w) ? _999 : (isnan(_999) ? cbSceneParam._m0[77u].w : min(_999, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3185 = _3183.x;
    float _3186 = _3183.y;
    float _3187 = _3183.z;
    float _3188 = _3183.w;
    float _3259;
    float _3261;
    float _3263;
    float _3265;
    if (_999 > cbSceneParam._m0[78u].w)
    {
        float _3222 = isnan(_999) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _999 : min(cbSceneParam._m0[80u].w, _999));
        float _3223 = _3222 / _999;
        float _3234 = _3223 * _1049;
        float _3235 = _1050 * _3223;
        float _3236 = (-0.0) - _3235;
        float _3237 = _3223 * _1051;
        float _3239 = (cbSceneParam._m0[77u].w * _3236) / _3222;
        float _3240 = _3239 + cbSceneParam._m0[79u].w;
        float _3241 = cbSceneParam._m0[79u].w - _3235;
        float _3247 = sqrt(((_3234 * _3234) + (_3235 * _3235)) + (_3237 * _3237));
        float _3250 = (1.0 - (cbSceneParam._m0[77u].w / _3222)) * _3247;
        float _3255 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3257 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3410;
        if (abs((_3236 - _3239) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3410 = ((((_3240 > 0.0) ? exp2(_3255 * _3240) : (2.0 - exp2(_3257 * _3240))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3250;
        }
        else
        {
            float _3370 = 1.0 / cbSceneParam._m0[80u].x;
            float _3371 = isnan(_3241) ? _3240 : (isnan(_3240) ? _3241 : max(_3240, _3241));
            float _3372 = isnan(_3241) ? _3240 : (isnan(_3240) ? _3241 : min(_3240, _3241));
            float _3381 = isnan(0.0) ? _3371 : (isnan(_3371) ? 0.0 : min(_3371, 0.0));
            float _3382 = isnan(0.0) ? _3372 : (isnan(_3372) ? 0.0 : min(_3372, 0.0));
            _3410 = ((abs(_3247 / _3236) * cbSceneParam._m0[80u].y) * ((((_3381 - _3382) * 2.0) - ((exp2(_3255 * (isnan(0.0) ? _3371 : (isnan(_3371) ? 0.0 : max(_3371, 0.0)))) - exp2(_3255 * (isnan(0.0) ? _3372 : (isnan(_3372) ? 0.0 : max(_3372, 0.0))))) * _3370)) - ((exp2(_3257 * _3381) - exp2(_3257 * _3382)) * _3370))) + (_3250 * cbSceneParam._m0[80u].z);
        }
        vec4 _3412 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3168, _3169, 1.0), 0.0);
        float _3421 = exp2((_3410 * (-1.44269502162933349609375)) * (1.0 - _3412.w));
        float _3422 = log2(_3421);
        float _3438 = log2(_3188);
        _3259 = (exp2(_3438 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3422 * cbSceneParam._m0[78u].x)) * _3412.x) / cbSceneParam._m0[78u].x)) + _3185;
        _3261 = (exp2(_3438 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3422 * cbSceneParam._m0[78u].y)) * _3412.y) / cbSceneParam._m0[78u].y)) + _3186;
        _3263 = (exp2(_3438 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3422 * cbSceneParam._m0[78u].z)) * _3412.z) / cbSceneParam._m0[78u].z)) + _3187;
        _3265 = _3421 * _3188;
    }
    else
    {
        _3259 = _3185;
        _3261 = _3186;
        _3263 = _3187;
        _3265 = _3188;
    }
    float _3277 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3278 = _3277 == 3.0;
    float _3279 = log2(_3265);
    float _3286 = exp2(_3279 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5087 : (isnan(_5087) ? 1.0 : min(_5087, 1.0))) * (_3130 + ((isnan(0.0) ? _1851 : (isnan(_1851) ? 0.0 : max(_1851, 0.0))) * _1127))) + ((_3136 + ((isnan(0.0) ? _2142 : (isnan(_2142) ? 0.0 : max(_2142, 0.0))) * _1930)) * cbPerFrame._m0[3u].x));
    float _3287 = exp2(_3279 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5098 : (isnan(_5098) ? 1.0 : min(_5098, 1.0))) * (_3132 + ((isnan(0.0) ? _1854 : (isnan(_1854) ? 0.0 : max(_1854, 0.0))) * _1127))) + ((_3138 + ((isnan(0.0) ? _2145 : (isnan(_2145) ? 0.0 : max(_2145, 0.0))) * _1930)) * cbPerFrame._m0[3u].x));
    float _3288 = exp2(_3279 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5109 : (isnan(_5109) ? 1.0 : min(_5109, 1.0))) * (_3134 + ((isnan(0.0) ? _1857 : (isnan(_1857) ? 0.0 : max(_1857, 0.0))) * _1127))) + ((_3140 + ((isnan(0.0) ? _2148 : (isnan(_2148) ? 0.0 : max(_2148, 0.0))) * _1930)) * cbPerFrame._m0[3u].x));
    float _3297 = (_3277 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3297 * (_3278 ? _3286 : (_3286 + (cbSceneParam._m0[72u].w * _3259)));
    SV_Target.y = _3297 * (_3278 ? _3287 : (_3287 + (cbSceneParam._m0[72u].w * _3261)));
    SV_Target.z = _3297 * (_3278 ? _3288 : (_3288 + (cbSceneParam._m0[72u].w * _3263)));
    SV_Target.w = cbInstanceData._m0[_3160].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3160].w;
}


