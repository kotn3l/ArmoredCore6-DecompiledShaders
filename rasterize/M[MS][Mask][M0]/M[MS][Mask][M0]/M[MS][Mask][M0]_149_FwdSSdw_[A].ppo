#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1677;
float _4056;
float _4057;
float _4058;
float _4059;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _248 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _249 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _250 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _256 = inversesqrt(dot(vec3(_248, _249, _250), vec3(_248, _249, _250)));
    float _257 = _256 * _248;
    float _258 = _256 * _249;
    float _259 = _256 * _250;
    float _263 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _264 = _263 * NORMAL.x;
    float _265 = _263 * NORMAL.y;
    float _266 = _263 * NORMAL.z;
    float _270 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _271 = _270 * TANGENT.x;
    float _272 = _270 * TANGENT.y;
    float _273 = _270 * TANGENT.z;
    float _282 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _284 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _285 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4068 = isnan(0.0) ? _282 : (isnan(_282) ? 0.0 : max(_282, 0.0));
    float _4079 = isnan(0.0) ? _284 : (isnan(_284) ? 0.0 : max(_284, 0.0));
    float _4090 = isnan(0.0) ? _285 : (isnan(_285) ? 0.0 : max(_285, 0.0));
    uint _295 = uint(roundEven(NORMAL.w)) * 13u;
    uint _300 = _295 + 1u;
    uint _304 = _295 + 2u;
    float _313 = sqrt(((cbInstanceData._m0[_300].x * cbInstanceData._m0[_300].x) + (cbInstanceData._m0[_295].x * cbInstanceData._m0[_295].x)) + (cbInstanceData._m0[_304].x * cbInstanceData._m0[_304].x));
    float _314 = _313 * TEXCOORD.z;
    float _315 = _313 * TEXCOORD.w;
    vec4 _328 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _314) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _315) + cbTextureTilingScale._m0[13u].w));
    vec4 _351 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _377 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _382 = _377.x * cbMtdParam._m0[11u].x;
    float _383 = _377.y * cbMtdParam._m0[11u].y;
    float _384 = _377.z * cbMtdParam._m0[11u].z;
    vec4 _403 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _314) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _315) + cbTextureTilingScale._m0[5u].w));
    vec4 _422 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _460 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _462 = _460.x;
    float _474 = dot(vec4(_462, _460.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _491 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _422.x) * 2.0) - ((((_462 - _474) * cbMtdParam._m0[24u].z) + _474) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4101 = isnan(0.0) ? _491 : (isnan(_491) ? 0.0 : max(_491, 0.0));
    float _492 = isnan(1.0) ? _4101 : (isnan(_4101) ? 1.0 : min(_4101, 1.0));
    float _499 = (_492 * ((_403.x * cbMtdParam._m0[12u].x) - _382)) + _382;
    float _500 = (_492 * ((_403.y * cbMtdParam._m0[12u].y) - _383)) + _383;
    float _501 = (_492 * ((_403.z * cbMtdParam._m0[12u].z) - _384)) + _384;
    vec4 _518 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _314) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _315) + cbTextureTilingScale._m0[3u].w));
    vec4 _538 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _540 = _538.x;
    float _550 = dot(vec4(_540, _538.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _564 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _422.y) * 2.0) - ((((_540 - _550) * cbMtdParam._m0[24u].z) + _550) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4112 = isnan(0.0) ? _564 : (isnan(_564) ? 0.0 : max(_564, 0.0));
    float _565 = isnan(1.0) ? _4112 : (isnan(_4112) ? 1.0 : min(_4112, 1.0));
    float _572 = (_565 * ((_518.x * cbMtdParam._m0[13u].x) - _499)) + _499;
    float _573 = (_565 * ((_518.y * cbMtdParam._m0[13u].y) - _500)) + _500;
    float _574 = (_565 * ((_518.z * cbMtdParam._m0[13u].z) - _501)) + _501;
    vec4 _592 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _314) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _315) + cbTextureTilingScale._m0[24u].w));
    vec4 _609 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _611 = _609.x;
    float _621 = dot(vec4(_611, _609.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _633 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _422.z) * 2.0) - ((((_611 - _621) * cbMtdParam._m0[24u].z) + _621) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4123 = isnan(0.0) ? _633 : (isnan(_633) ? 0.0 : max(_633, 0.0));
    float _634 = isnan(1.0) ? _4123 : (isnan(_4123) ? 1.0 : min(_4123, 1.0));
    float _644 = (_351.x * cbMtdParam._m0[9u].x) * ((_634 * ((_592.x * cbMtdParam._m0[14u].x) - _572)) + _572);
    float _645 = (_351.y * cbMtdParam._m0[9u].y) * ((_634 * ((_592.y * cbMtdParam._m0[14u].y) - _573)) + _573);
    float _646 = (_351.z * cbMtdParam._m0[9u].z) * ((_634 * ((_592.z * cbMtdParam._m0[14u].z) - _574)) + _574);
    float _650 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _328.x) * _644;
    float _653 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _328.y) * _645;
    float _656 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _328.z) * _646;
    float _664 = (((_644 - _650) * (isnan(1.0) ? _4068 : (isnan(_4068) ? 1.0 : min(_4068, 1.0)))) + _650) * 4.55000019073486328125;
    float _666 = (((_645 - _653) * (isnan(1.0) ? _4079 : (isnan(_4079) ? 1.0 : min(_4079, 1.0)))) + _653) * 4.55000019073486328125;
    float _668 = (((_646 - _656) * (isnan(1.0) ? _4090 : (isnan(_4090) ? 1.0 : min(_4090, 1.0)))) + _656) * 4.55000019073486328125;
    vec4 _686 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _314) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _315) + cbTextureTilingScale._m0[14u].w));
    vec4 _705 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _314) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _315) + cbTextureTilingScale._m0[20u].w));
    vec4 _730 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _314) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _315) + cbTextureTilingScale._m0[4u].w));
    vec4 _747 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _749 = _747.x;
    float _750 = _747.y;
    float _751 = _747.z;
    float _758 = ((_730.x - _749) * _492) + _749;
    float _759 = ((_730.y - _750) * _492) + _750;
    float _760 = ((_730.z - _751) * _492) + _751;
    vec4 _772 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _314) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _315) + cbTextureTilingScale._m0[2u].w));
    float _783 = ((_772.x - _758) * _565) + _758;
    float _784 = ((_772.y - _759) * _565) + _759;
    float _785 = ((_772.z - _760) * _565) + _760;
    vec4 _797 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _314) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _315) + cbTextureTilingScale._m0[23u].w));
    float _810 = ((_797.z - _785) * _634) + _785;
    float _813 = ((((_797.x - _783) * _634) + _783) * 2.0) + (-1.0);
    float _814 = ((((_797.y - _784) * _634) + _784) * 2.0) + (-1.0);
    float _815 = dot(vec2(_813, _814), vec2(_813, _814));
    float _4134 = isnan(0.0) ? _815 : (isnan(_815) ? 0.0 : max(_815, 0.0));
    float _820 = sqrt(1.0 - (isnan(1.0) ? _4134 : (isnan(_4134) ? 1.0 : min(_4134, 1.0))));
    vec4 _838 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _850 = (_813 + ((((_705.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x)) + (((_838.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _851 = (_814 + ((((_705.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x)) + (((_838.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _854 = fma(_820, _264, fma(_851, _271, _850 * _257));
    float _857 = fma(_820, _265, fma(_851, _272, _850 * _258));
    float _860 = fma(_820, _266, fma(_851, _273, _850 * _259));
    float _864 = inversesqrt(dot(vec3(_854, _857, _860), vec3(_854, _857, _860)));
    vec4 _891 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _314) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _315) + cbTextureTilingScale._m0[11u].w));
    float _893 = _891.x;
    float _894 = 1.0 - _893;
    float _900 = (cbMtdParam._m0[19u].x + dot(vec4(_864 * _854, _864 * _857, _864 * _860, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_893 - _894) * cbMtdParam._m0[24u].w) + _894) * cbMtdParam._m0[21u].z);
    float _4145 = isnan(0.0) ? _900 : (isnan(_900) ? 0.0 : max(_900, 0.0));
    float _901 = isnan(1.0) ? _4145 : (isnan(_4145) ? 1.0 : min(_4145, 1.0));
    float _903 = (-0.0) - cbMtdParam._m0[24u].x;
    float _905 = isnan(0.0) ? _903 : (isnan(_903) ? 0.0 : max(_903, 0.0));
    float _906 = isnan(1.0) ? _905 : (isnan(_905) ? 1.0 : min(_905, 1.0));
    float _913 = _901 - ((_901 * TEXCOORD_8.x) * _906);
    float _914 = _901 - ((_901 * TEXCOORD_8.y) * _906);
    float _915 = _901 - ((_901 * TEXCOORD_8.z) * _906);
    float _922 = (_913 * ((_686.x * cbMtdParam._m0[18u].x) - _664)) + _664;
    float _923 = (_914 * ((_686.y * cbMtdParam._m0[18u].y) - _666)) + _666;
    float _924 = (_915 * ((_686.z * cbMtdParam._m0[18u].z) - _668)) + _668;
    float _939 = sqrt(((cbInstanceData._m0[_300].x * cbInstanceData._m0[_300].x) + (cbInstanceData._m0[_295].x * cbInstanceData._m0[_295].x)) + (cbInstanceData._m0[_304].x * cbInstanceData._m0[_304].x));
    float _940 = _939 * TEXCOORD.z;
    float _941 = _939 * TEXCOORD.w;
    vec4 _953 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _940) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _941) + cbTextureTilingScale._m0[19u].w));
    float _955 = _953.x;
    float _956 = 1.0 - _955;
    float _984 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_955 - _956) * cbMtdParam._m0[24u].y) + _956) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4166 = isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0));
    float _985 = isnan(1.0) ? _4166 : (isnan(_4166) ? 1.0 : min(_4166, 1.0));
    float _993 = ((((cbMtdParam._m0[10u].x - _922) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _985) + _922;
    float _994 = ((((cbMtdParam._m0[10u].y - _923) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _985) + _923;
    float _995 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _924)) * _985) + _924;
    float _1000 = (((_705.z - _810) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _810;
    float _1004 = ((_838.z - _1000) * cbMtdParam._m0[19u].w) + _1000;
    vec4 _1020 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _314) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _315) + cbTextureTilingScale._m0[15u].w));
    float _1027 = (_1020.x * 2.0) + (-1.0);
    float _1028 = (_1020.y * 2.0) + (-1.0);
    float _1029 = dot(vec2(_1027, _1028), vec2(_1027, _1028));
    float _4177 = isnan(0.0) ? _1029 : (isnan(_1029) ? 0.0 : max(_1029, 0.0));
    float _1037 = ((_1020.z - _1004) * _913) + _1004;
    float _1040 = ((cbMtdParam._m0[23u].y - _1037) * _985) + _1037;
    vec4 _1061 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _940) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _941) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _1067 = (_1061.x * 2.0) + (-1.0);
    float _1068 = (_1061.y * 2.0) + (-1.0);
    float _1069 = dot(vec2(_1067, _1068), vec2(_1067, _1068));
    float _4188 = isnan(0.0) ? _1069 : (isnan(_1069) ? 0.0 : max(_1069, 0.0));
    float _1084 = ((sqrt(1.0 - (isnan(1.0) ? _4177 : (isnan(_4177) ? 1.0 : min(_4177, 1.0)))) - _820) * _915) + _820;
    float _1087 = (((_1027 - _850) * _913) + _850) + (cbMtdParam._m0[21u].x * _850);
    float _1088 = (((_1028 - _851) * _914) + _851) + (cbMtdParam._m0[21u].x * _851);
    float _1099 = (((_1067 - _1087) + (_1087 * cbMtdParam._m0[22u].z)) * _985) + _1087;
    float _1100 = (((_1068 - _1088) + (_1088 * cbMtdParam._m0[22u].z)) * _985) + _1088;
    float _1101 = (_985 * (sqrt(1.0 - (isnan(1.0) ? _4188 : (isnan(_4188) ? 1.0 : min(_4188, 1.0)))) - _1084)) + _1084;
    float _1103 = cbMtdParam._m0[22u].x + _838.w;
    float _1106 = fma(_1101, _264, fma(_1100, _271, _1099 * _257));
    float _1109 = fma(_1101, _265, fma(_1100, _272, _1099 * _258));
    float _1112 = fma(_1101, _266, fma(_1100, _273, _1099 * _259));
    float _1116 = inversesqrt(dot(vec3(_1106, _1109, _1112), vec3(_1106, _1109, _1112)));
    float _1117 = _1116 * _1106;
    float _1118 = _1116 * _1109;
    float _1119 = _1116 * _1112;
    float _4199 = isnan(0.0) ? _1040 : (isnan(_1040) ? 0.0 : max(_1040, 0.0));
    float _1120 = isnan(1.0) ? _4199 : (isnan(_4199) ? 1.0 : min(_4199, 1.0));
    float _4210 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
    float _4221 = isnan(0.0) ? _993 : (isnan(_993) ? 0.0 : max(_993, 0.0));
    float _4232 = isnan(0.0) ? _994 : (isnan(_994) ? 0.0 : max(_994, 0.0));
    float _4243 = isnan(0.0) ? _995 : (isnan(_995) ? 0.0 : max(_995, 0.0));
    float _1138 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1178 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1188 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1178);
    float _1189 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1178);
    float _1190 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1178);
    float _1194 = inversesqrt(dot(vec3(_1188, _1189, _1190), vec3(_1188, _1189, _1190)));
    float _1195 = _1188 * _1194;
    float _1196 = _1189 * _1194;
    float _1197 = _1190 * _1194;
    vec4 _1202 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1204 = _1202.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1358 = sqrt(((_1188 * _1188) + (_1189 * _1189)) + (_1190 * _1190));
        float _1364 = (cbMatDynParam._m0[5u].x * _1358) + cbMatDynParam._m0[5u].y;
        float _4254 = isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : max(_1364, 0.0));
        float _1365 = isnan(1.0) ? _4254 : (isnan(_4254) ? 1.0 : min(_4254, 1.0));
        float _1369 = (cbMatDynParam._m0[5u].z * _1358) + cbMatDynParam._m0[5u].w;
        float _4265 = isnan(0.0) ? _1369 : (isnan(_1369) ? 0.0 : max(_1369, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4265 : (isnan(_4265) ? 1.0 : min(_4265, 1.0))) - _1365)) + _1365) < ((_1204 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1215 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1216 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1234 = fma(_1119, cbSceneParam._m0[5u].z, fma(_1118, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1117));
    float _1237 = fma(_1119, cbSceneParam._m0[6u].z, fma(_1118, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1117));
    float _1240 = fma(_1119, cbSceneParam._m0[7u].z, fma(_1118, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1117));
    uint _1253 = _295 + 9u;
    uint _1254 = _1253 + uint(cbMatDynParam._m0[0u].w);
    float _1260 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4221 : (isnan(_4221) ? 1.0 : min(_4221, 1.0)))) * cbInstanceData._m0[_1254].x;
    float _1261 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4232 : (isnan(_4232) ? 1.0 : min(_4232, 1.0)))) * cbInstanceData._m0[_1254].y;
    float _1262 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4243 : (isnan(_4243) ? 1.0 : min(_4243, 1.0)))) * cbInstanceData._m0[_1254].z;
    float _4276 = isnan(0.0) ? _1260 : (isnan(_1260) ? 0.0 : max(_1260, 0.0));
    float _1263 = isnan(1.0) ? _4276 : (isnan(_4276) ? 1.0 : min(_4276, 1.0));
    float _4287 = isnan(0.0) ? _1261 : (isnan(_1261) ? 0.0 : max(_1261, 0.0));
    float _1264 = isnan(1.0) ? _4287 : (isnan(_4287) ? 1.0 : min(_4287, 1.0));
    float _4298 = isnan(0.0) ? _1262 : (isnan(_1262) ? 0.0 : max(_1262, 0.0));
    float _1265 = isnan(1.0) ? _4298 : (isnan(_4298) ? 1.0 : min(_4298, 1.0));
    vec4 _1274 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1215, cbSceneParam._m0[86u].y * _1216));
    float _1278 = ((isnan(1.0) ? _4210 : (isnan(_4210) ? 1.0 : min(_4210, 1.0))) * TEXCOORD_5.w) * _1274.x;
    float _1279 = dot(vec3(_1117, _1118, _1119), vec3(_1195, _1196, _1197));
    float _1282 = _1279 * 2.0;
    float _1286 = (_1282 * _1117) - _1195;
    float _1287 = (_1282 * _1118) - _1196;
    float _1288 = (_1282 * _1119) - _1197;
    float _1292 = abs(dot(vec3(_1195, _1196, _1197), vec3(_1117, _1118, _1119)));
    float _4309 = isnan(0.0) ? _1292 : (isnan(_1292) ? 0.0 : max(_1292, 0.0));
    float _1294 = sqrt(_1120);
    float _1307 = exp2((_1294 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4309 : (isnan(_4309) ? 1.0 : min(_4309, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1294 * 3.0));
    float _1339 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1343 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1347 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1676;
    float _1678;
    float _1679;
    float _1680;
    float _1681;
    float _1682;
    float _1683;
    float _1684;
    float _1685;
    float _1686;
    float _1687;
    float _1688;
    float _1689;
    float _1690;
    float _1691;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1401 = fma(_1347, cbModelParam._m0[26u].z, fma(_1343, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1339));
        float _1405 = fma(_1347, cbModelParam._m0[27u].z, fma(_1343, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1339));
        float _1409 = fma(_1347, cbModelParam._m0[28u].z, fma(_1343, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1339));
        float _1434 = _1339 + _1117;
        float _1435 = _1343 + _1118;
        float _1436 = _1347 + _1119;
        float _1446 = fma(_1436, cbModelParam._m0[26u].z, fma(_1435, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1434)) - _1401;
        float _1447 = fma(_1436, cbModelParam._m0[27u].z, fma(_1435, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1434)) - _1405;
        float _1448 = fma(_1436, cbModelParam._m0[28u].z, fma(_1435, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1434)) - _1409;
        float _1452 = inversesqrt(dot(vec3(_1446, _1447, _1448), vec3(_1446, _1447, _1448)));
        float _1465 = ((_1452 * _1446) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1401 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1466 = ((_1452 * _1447) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1405 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1467 = ((_1452 * _1448) / cbModelParam._m0[34u].z) + ((((((_1409 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1470 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1465, _1466, _1467), 0.0);
        vec4 _1477 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1465, _1466, _1467), 0.0);
        vec4 _1484 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1465, _1466, _1467), 0.0);
        vec4 _1491 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1465, _1466, _1467), 0.0);
        float _1504 = exp2((_1470.w + (-0.5)) * 20.0) * 2.0;
        float _1505 = _1504 * (_1470.x + (-0.5));
        float _1506 = _1504 * (_1470.y + (-0.5));
        float _1507 = _1504 * (_1470.z + (-0.5));
        float _1514 = exp2((_1477.w + (-0.5)) * 20.0) * 2.0;
        float _1515 = _1514 * (_1477.x + (-0.5));
        float _1516 = _1514 * (_1477.y + (-0.5));
        float _1517 = _1514 * (_1477.z + (-0.5));
        float _1524 = exp2((_1484.w + (-0.5)) * 20.0) * 2.0;
        float _1525 = _1524 * (_1484.x + (-0.5));
        float _1526 = _1524 * (_1484.y + (-0.5));
        float _1527 = _1524 * (_1484.z + (-0.5));
        float _1534 = exp2((_1491.w + (-0.5)) * 20.0) * 2.0;
        float _1535 = _1534 * (_1491.x + (-0.5));
        float _1536 = _1534 * (_1491.y + (-0.5));
        float _1537 = _1534 * (_1491.z + (-0.5));
        float _1538 = isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0));
        float _1539 = isnan(0.0) ? _1536 : (isnan(_1536) ? 0.0 : max(_1536, 0.0));
        float _1540 = isnan(0.0) ? _1537 : (isnan(_1537) ? 0.0 : max(_1537, 0.0));
        float _1541 = _1505 * 0.5;
        float _1542 = _1515 * 0.5;
        float _1543 = _1525 * 0.5;
        float _1544 = dot(vec3(_1541, _1542, _1543), vec3(_1541, _1542, _1543));
        float _1549 = (_1544 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1544);
        float _1558 = (dot(vec3(_1117, _1118, _1119), vec3(_1549 * _1541, _1549 * _1542, _1549 * _1543)) + 1.0) * 0.5;
        float _4335 = isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0));
        float _1568 = sqrt(((_1542 * _1542) + (_1541 * _1541)) + (_1543 * _1543)) / (_1538 + 9.9999997473787516355514526367188e-06);
        float _4346 = isnan(0.0) ? _1568 : (isnan(_1568) ? 0.0 : max(_1568, 0.0));
        float _1569 = isnan(1.0) ? _4346 : (isnan(_4346) ? 1.0 : min(_4346, 1.0));
        float _1570 = _1569 * 2.0;
        float _1574 = (1.0 - _1569) / (_1569 + 1.0);
        float _4357 = isnan(0.0) ? _1574 : (isnan(_1574) ? 0.0 : max(_1574, 0.0));
        float _1575 = isnan(1.0) ? _4357 : (isnan(_4357) ? 1.0 : min(_4357, 1.0));
        float _1584 = ((((1.0 - _1575) * (_1570 + 2.0)) * exp2(log2(isnan(1.0) ? _4335 : (isnan(_4335) ? 1.0 : min(_4335, 1.0))) * (_1570 + 1.0))) + _1575) * _1538;
        float _1585 = _1506 * 0.5;
        float _1586 = _1516 * 0.5;
        float _1587 = _1526 * 0.5;
        float _1588 = dot(vec3(_1585, _1586, _1587), vec3(_1585, _1586, _1587));
        float _1593 = (_1588 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1588);
        float _1601 = (dot(vec3(_1117, _1118, _1119), vec3(_1593 * _1585, _1593 * _1586, _1593 * _1587)) + 1.0) * 0.5;
        float _4368 = isnan(0.0) ? _1601 : (isnan(_1601) ? 0.0 : max(_1601, 0.0));
        float _1610 = sqrt(((_1586 * _1586) + (_1585 * _1585)) + (_1587 * _1587)) / (_1539 + 9.9999997473787516355514526367188e-06);
        float _4379 = isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0));
        float _1611 = isnan(1.0) ? _4379 : (isnan(_4379) ? 1.0 : min(_4379, 1.0));
        float _1612 = _1611 * 2.0;
        float _1616 = (1.0 - _1611) / (_1611 + 1.0);
        float _4390 = isnan(0.0) ? _1616 : (isnan(_1616) ? 0.0 : max(_1616, 0.0));
        float _1617 = isnan(1.0) ? _4390 : (isnan(_4390) ? 1.0 : min(_4390, 1.0));
        float _1626 = ((((1.0 - _1617) * (_1612 + 2.0)) * exp2(log2(isnan(1.0) ? _4368 : (isnan(_4368) ? 1.0 : min(_4368, 1.0))) * (_1612 + 1.0))) + _1617) * _1539;
        float _1627 = _1507 * 0.5;
        float _1628 = _1517 * 0.5;
        float _1629 = _1527 * 0.5;
        float _1630 = dot(vec3(_1627, _1628, _1629), vec3(_1627, _1628, _1629));
        float _1635 = (_1630 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1630);
        float _1643 = (dot(vec3(_1117, _1118, _1119), vec3(_1635 * _1627, _1635 * _1628, _1635 * _1629)) + 1.0) * 0.5;
        float _4401 = isnan(0.0) ? _1643 : (isnan(_1643) ? 0.0 : max(_1643, 0.0));
        float _1652 = sqrt(((_1628 * _1628) + (_1627 * _1627)) + (_1629 * _1629)) / (_1540 + 9.9999997473787516355514526367188e-06);
        float _4412 = isnan(0.0) ? _1652 : (isnan(_1652) ? 0.0 : max(_1652, 0.0));
        float _1653 = isnan(1.0) ? _4412 : (isnan(_4412) ? 1.0 : min(_4412, 1.0));
        float _1654 = _1653 * 2.0;
        float _1658 = (1.0 - _1653) / (_1653 + 1.0);
        float _4423 = isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0));
        float _1659 = isnan(1.0) ? _4423 : (isnan(_4423) ? 1.0 : min(_4423, 1.0));
        float _1668 = ((((1.0 - _1659) * (_1654 + 2.0)) * exp2(log2(isnan(1.0) ? _4401 : (isnan(_4401) ? 1.0 : min(_4401, 1.0))) * (_1654 + 1.0))) + _1659) * _1540;
        _1676 = _1507;
        _1678 = _1506;
        _1679 = _1505;
        _1680 = _1517;
        _1681 = _1516;
        _1682 = _1515;
        _1683 = _1527;
        _1684 = _1526;
        _1685 = _1525;
        _1686 = _1540;
        _1687 = _1539;
        _1688 = _1538;
        _1689 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0)));
        _1690 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0)));
        _1691 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1668 : (isnan(_1668) ? 0.0 : max(_1668, 0.0)));
    }
    else
    {
        _1676 = _1677;
        _1678 = _1677;
        _1679 = _1677;
        _1680 = _1677;
        _1681 = _1677;
        _1682 = _1677;
        _1683 = _1677;
        _1684 = _1677;
        _1685 = _1677;
        _1686 = _1677;
        _1687 = _1677;
        _1688 = _1677;
        _1689 = 0.0;
        _1690 = 0.0;
        _1691 = 0.0;
    }
    float _1986;
    float _1987;
    float _1988;
    float _1989;
    float _1990;
    float _1991;
    float _1992;
    float _1993;
    float _1994;
    float _1995;
    float _1996;
    float _1997;
    float _1998;
    float _1999;
    float _2000;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1717 = fma(_1347, cbModelParam._m0[30u].z, fma(_1343, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1339));
        float _1721 = fma(_1347, cbModelParam._m0[31u].z, fma(_1343, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1339));
        float _1725 = fma(_1347, cbModelParam._m0[32u].z, fma(_1343, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1339));
        float _1748 = _1339 + _1117;
        float _1749 = _1343 + _1118;
        float _1750 = _1347 + _1119;
        float _1760 = fma(_1750, cbModelParam._m0[30u].z, fma(_1749, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1748)) - _1717;
        float _1761 = fma(_1750, cbModelParam._m0[31u].z, fma(_1749, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1748)) - _1721;
        float _1762 = fma(_1750, cbModelParam._m0[32u].z, fma(_1749, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1748)) - _1725;
        float _1766 = inversesqrt(dot(vec3(_1760, _1761, _1762), vec3(_1760, _1761, _1762)));
        float _1779 = ((_1766 * _1760) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1717 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1780 = ((_1766 * _1761) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1721 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1781 = ((_1766 * _1762) / cbModelParam._m0[35u].z) + ((((((_1725 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1783 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1779, _1780, _1781), 0.0);
        vec4 _1790 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1779, _1780, _1781), 0.0);
        vec4 _1797 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1779, _1780, _1781), 0.0);
        vec4 _1804 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1779, _1780, _1781), 0.0);
        float _1816 = exp2((_1783.w + (-0.5)) * 20.0) * 2.0;
        float _1817 = _1816 * (_1783.x + (-0.5));
        float _1818 = _1816 * (_1783.y + (-0.5));
        float _1819 = _1816 * (_1783.z + (-0.5));
        float _1826 = exp2((_1790.w + (-0.5)) * 20.0) * 2.0;
        float _1827 = _1826 * (_1790.x + (-0.5));
        float _1828 = _1826 * (_1790.y + (-0.5));
        float _1829 = _1826 * (_1790.z + (-0.5));
        float _1836 = exp2((_1797.w + (-0.5)) * 20.0) * 2.0;
        float _1837 = _1836 * (_1797.x + (-0.5));
        float _1838 = _1836 * (_1797.y + (-0.5));
        float _1839 = _1836 * (_1797.z + (-0.5));
        float _1846 = exp2((_1804.w + (-0.5)) * 20.0) * 2.0;
        float _1847 = _1846 * (_1804.x + (-0.5));
        float _1848 = _1846 * (_1804.y + (-0.5));
        float _1849 = _1846 * (_1804.z + (-0.5));
        float _1850 = isnan(0.0) ? _1847 : (isnan(_1847) ? 0.0 : max(_1847, 0.0));
        float _1851 = isnan(0.0) ? _1848 : (isnan(_1848) ? 0.0 : max(_1848, 0.0));
        float _1852 = isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0));
        float _1853 = _1817 * 0.5;
        float _1854 = _1827 * 0.5;
        float _1855 = _1837 * 0.5;
        float _1856 = dot(vec3(_1853, _1854, _1855), vec3(_1853, _1854, _1855));
        float _1861 = (_1856 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1856);
        float _1869 = (dot(vec3(_1117, _1118, _1119), vec3(_1861 * _1853, _1861 * _1854, _1861 * _1855)) + 1.0) * 0.5;
        float _4464 = isnan(0.0) ? _1869 : (isnan(_1869) ? 0.0 : max(_1869, 0.0));
        float _1878 = sqrt(((_1854 * _1854) + (_1853 * _1853)) + (_1855 * _1855)) / (_1850 + 9.9999997473787516355514526367188e-06);
        float _4475 = isnan(0.0) ? _1878 : (isnan(_1878) ? 0.0 : max(_1878, 0.0));
        float _1879 = isnan(1.0) ? _4475 : (isnan(_4475) ? 1.0 : min(_4475, 1.0));
        float _1880 = _1879 * 2.0;
        float _1884 = (1.0 - _1879) / (_1879 + 1.0);
        float _4486 = isnan(0.0) ? _1884 : (isnan(_1884) ? 0.0 : max(_1884, 0.0));
        float _1885 = isnan(1.0) ? _4486 : (isnan(_4486) ? 1.0 : min(_4486, 1.0));
        float _1894 = ((((1.0 - _1885) * (_1880 + 2.0)) * exp2(log2(isnan(1.0) ? _4464 : (isnan(_4464) ? 1.0 : min(_4464, 1.0))) * (_1880 + 1.0))) + _1885) * _1850;
        float _1895 = _1818 * 0.5;
        float _1896 = _1828 * 0.5;
        float _1897 = _1838 * 0.5;
        float _1898 = dot(vec3(_1895, _1896, _1897), vec3(_1895, _1896, _1897));
        float _1903 = (_1898 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1898);
        float _1911 = (dot(vec3(_1117, _1118, _1119), vec3(_1903 * _1895, _1903 * _1896, _1903 * _1897)) + 1.0) * 0.5;
        float _4497 = isnan(0.0) ? _1911 : (isnan(_1911) ? 0.0 : max(_1911, 0.0));
        float _1920 = sqrt(((_1896 * _1896) + (_1895 * _1895)) + (_1897 * _1897)) / (_1851 + 9.9999997473787516355514526367188e-06);
        float _4508 = isnan(0.0) ? _1920 : (isnan(_1920) ? 0.0 : max(_1920, 0.0));
        float _1921 = isnan(1.0) ? _4508 : (isnan(_4508) ? 1.0 : min(_4508, 1.0));
        float _1922 = _1921 * 2.0;
        float _1926 = (1.0 - _1921) / (_1921 + 1.0);
        float _4519 = isnan(0.0) ? _1926 : (isnan(_1926) ? 0.0 : max(_1926, 0.0));
        float _1927 = isnan(1.0) ? _4519 : (isnan(_4519) ? 1.0 : min(_4519, 1.0));
        float _1936 = ((((1.0 - _1927) * (_1922 + 2.0)) * exp2(log2(isnan(1.0) ? _4497 : (isnan(_4497) ? 1.0 : min(_4497, 1.0))) * (_1922 + 1.0))) + _1927) * _1851;
        float _1937 = _1819 * 0.5;
        float _1938 = _1829 * 0.5;
        float _1939 = _1839 * 0.5;
        float _1940 = dot(vec3(_1937, _1938, _1939), vec3(_1937, _1938, _1939));
        float _1945 = (_1940 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1940);
        float _1953 = (dot(vec3(_1117, _1118, _1119), vec3(_1945 * _1937, _1945 * _1938, _1945 * _1939)) + 1.0) * 0.5;
        float _4530 = isnan(0.0) ? _1953 : (isnan(_1953) ? 0.0 : max(_1953, 0.0));
        float _1962 = sqrt(((_1938 * _1938) + (_1937 * _1937)) + (_1939 * _1939)) / (_1852 + 9.9999997473787516355514526367188e-06);
        float _4541 = isnan(0.0) ? _1962 : (isnan(_1962) ? 0.0 : max(_1962, 0.0));
        float _1963 = isnan(1.0) ? _4541 : (isnan(_4541) ? 1.0 : min(_4541, 1.0));
        float _1964 = _1963 * 2.0;
        float _1968 = (1.0 - _1963) / (_1963 + 1.0);
        float _4552 = isnan(0.0) ? _1968 : (isnan(_1968) ? 0.0 : max(_1968, 0.0));
        float _1969 = isnan(1.0) ? _4552 : (isnan(_4552) ? 1.0 : min(_4552, 1.0));
        float _1978 = ((((1.0 - _1969) * (_1964 + 2.0)) * exp2(log2(isnan(1.0) ? _4530 : (isnan(_4530) ? 1.0 : min(_4530, 1.0))) * (_1964 + 1.0))) + _1969) * _1852;
        _1986 = _1819;
        _1987 = _1818;
        _1988 = _1817;
        _1989 = _1829;
        _1990 = _1828;
        _1991 = _1827;
        _1992 = _1839;
        _1993 = _1838;
        _1994 = _1837;
        _1995 = _1852;
        _1996 = _1851;
        _1997 = _1850;
        _1998 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1894 : (isnan(_1894) ? 0.0 : max(_1894, 0.0)));
        _1999 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1936 : (isnan(_1936) ? 0.0 : max(_1936, 0.0)));
        _2000 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1978 : (isnan(_1978) ? 0.0 : max(_1978, 0.0)));
    }
    else
    {
        _1986 = _1677;
        _1987 = _1677;
        _1988 = _1677;
        _1989 = _1677;
        _1990 = _1677;
        _1991 = _1677;
        _1992 = _1677;
        _1993 = _1677;
        _1994 = _1677;
        _1995 = _1677;
        _1996 = _1677;
        _1997 = _1677;
        _1998 = 0.0;
        _1999 = 0.0;
        _2000 = 0.0;
    }
    float _2010 = (cbModelParam._m0[1u].x * (_1998 - _1689)) + _1689;
    float _2011 = (cbModelParam._m0[1u].x * (_1999 - _1690)) + _1690;
    float _2012 = (cbModelParam._m0[1u].x * (_2000 - _1691)) + _1691;
    float _2033 = fma(_2012, cbSceneParam._m0[89u].z, fma(_2011, cbSceneParam._m0[89u].y, _2010 * cbSceneParam._m0[89u].x));
    float _2036 = fma(_2012, cbSceneParam._m0[90u].z, fma(_2011, cbSceneParam._m0[90u].y, _2010 * cbSceneParam._m0[90u].x));
    float _2039 = fma(_2012, cbSceneParam._m0[91u].z, fma(_2011, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2010));
    float _2054 = _1286 * 0.5;
    float _2055 = _1287 * 0.5;
    float _2056 = _1288 * 0.5;
    float _2057 = dot(vec4(_2054, _2055, _2056, 1.0), vec4(_1988, _1991, _1994, _1997));
    float _2060 = dot(vec4(_2054, _2055, _2056, 1.0), vec4(_1987, _1990, _1993, _1996));
    float _2063 = dot(vec4(_2054, _2055, _2056, 1.0), vec4(_1986, _1989, _1992, _1995));
    float _2097;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2070 = dot(vec4(_2054, _2055, _2056, 1.0), vec4(_1676, _1680, _1683, _1686));
        float _2074 = dot(vec4(_2054, _2055, _2056, 1.0), vec4(_1678, _1681, _1684, _1687));
        float _2078 = dot(vec4(_2054, _2055, _2056, 1.0), vec4(_1679, _1682, _1685, _1688));
        float _2085 = dot(vec4(cbModelParam._m0[39u]), vec4(_2054, _2055, _2056, 1.0));
        _2097 = dot(vec3(isnan(0.0) ? _2078 : (isnan(_2078) ? 0.0 : max(_2078, 0.0)), isnan(0.0) ? _2074 : (isnan(_2074) ? 0.0 : max(_2074, 0.0)), isnan(0.0) ? _2070 : (isnan(_2070) ? 0.0 : max(_2070, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2085) ? 0.0 : (isnan(0.0) ? _2085 : max(0.0, _2085))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2097 = 1.0;
    }
    float _2108;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2099 = dot(vec4(cbModelParam._m0[40u]), vec4(_2054, _2055, _2056, 1.0));
        _2108 = dot(vec3(isnan(0.0) ? _2057 : (isnan(_2057) ? 0.0 : max(_2057, 0.0)), isnan(0.0) ? _2060 : (isnan(_2060) ? 0.0 : max(_2060, 0.0)), isnan(0.0) ? _2063 : (isnan(_2063) ? 0.0 : max(_2063, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2099) ? 0.0 : (isnan(0.0) ? _2099 : max(0.0, _2099))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2108 = 1.0;
    }
    float _2112 = (_2108 * cbModelParam._m0[1u].x) + (_2097 * (1.0 - cbModelParam._m0[1u].x));
    float _2122 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1120);
    float _2123 = isnan(_2122) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2122 : min(cbModelParam._m0[25u].z, _2122));
    float _2203;
    float _2205;
    float _2207;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2170 = fma(_1347, cbModelParam._m0[13u].z, fma(_1343, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1339)) + cbModelParam._m0[13u].w;
        float _2174 = fma(_1347, cbModelParam._m0[14u].z, fma(_1343, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1339)) + cbModelParam._m0[14u].w;
        float _2178 = fma(_1347, cbModelParam._m0[15u].z, fma(_1343, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1339)) + cbModelParam._m0[15u].w;
        float _2181 = fma(_1288, cbModelParam._m0[13u].z, fma(_1287, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1286));
        float _2184 = fma(_1288, cbModelParam._m0[14u].z, fma(_1287, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1286));
        float _2187 = fma(_1288, cbModelParam._m0[15u].z, fma(_1287, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1286));
        float _2215;
        if (_2181 > 0.0)
        {
            _2215 = abs((1.0 - _2170) / _2181);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_2181 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_2170 + 1.0) / _2181);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _2215 = frontier_phi_17_15_ladder;
        }
        float _2436;
        if (_2184 > 0.0)
        {
            _2436 = abs((1.0 - _2174) / _2184);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_2184 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_2174 + 1.0) / _2184);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2436 = frontier_phi_26_22_ladder;
        }
        float _2682;
        if (_2187 > 0.0)
        {
            _2682 = abs((1.0 - _2178) / _2187);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_2187 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_2178 + 1.0) / _2187);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2682 = frontier_phi_38_33_ladder;
        }
        float _2684 = isnan(_2436) ? _2215 : (isnan(_2215) ? _2436 : min(_2215, _2436));
        float _2685 = isnan(_2682) ? _2684 : (isnan(_2684) ? _2682 : min(_2684, _2682));
        float _2689 = (_2685 * _2181) + _2170;
        float _2690 = (_2685 * _2184) + _2174;
        float _2691 = (_2685 * _2187) + _2178;
        float _2692 = _2685 * 9.9999997473787516355514526367188e-05;
        float _2694 = (-1.0) - _2692;
        float _2696 = _2692 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2691 > _2696) || ((_2691 < _2694) || ((_2690 > _2696) || ((_2690 < _2694) || ((_2689 < _2694) || (_2689 > _2696))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2815 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2691, cbModelParam._m0[9u].z, fma(_2690, cbModelParam._m0[9u].y, _2689 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2691, cbModelParam._m0[10u].z, fma(_2690, cbModelParam._m0[10u].y, _2689 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2691, cbModelParam._m0[11u].z, fma(_2690, cbModelParam._m0[11u].y, _2689 * cbModelParam._m0[11u].x))), _2123);
            frontier_phi_16_38_ladder = _2815.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2815.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2815.x * cbModelParam._m0[1u].y;
        }
        _2203 = frontier_phi_16_38_ladder_2;
        _2205 = frontier_phi_16_38_ladder_1;
        _2207 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _2191 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1286, _1287, _1288), _2123);
        _2203 = _2191.x * cbModelParam._m0[1u].y;
        _2205 = _2191.y * cbModelParam._m0[1u].y;
        _2207 = _2191.z * cbModelParam._m0[1u].y;
    }
    float _2211 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1120);
    float _2212 = isnan(_2211) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2211 : min(cbModelParam._m0[25u].w, _2211));
    float _2301;
    float _2303;
    float _2305;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2265 = fma(_1347, cbModelParam._m0[21u].z, fma(_1343, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1339)) + cbModelParam._m0[21u].w;
        float _2269 = fma(_1347, cbModelParam._m0[22u].z, fma(_1343, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1339)) + cbModelParam._m0[22u].w;
        float _2273 = fma(_1347, cbModelParam._m0[23u].z, fma(_1343, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1339)) + cbModelParam._m0[23u].w;
        float _2276 = fma(_1288, cbModelParam._m0[21u].z, fma(_1287, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1286));
        float _2279 = fma(_1288, cbModelParam._m0[22u].z, fma(_1287, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1286));
        float _2282 = fma(_1288, cbModelParam._m0[23u].z, fma(_1287, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1286));
        float _2441;
        if (_2276 > 0.0)
        {
            _2441 = abs((1.0 - _2265) / _2276);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2276 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2265 + 1.0) / _2276);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2441 = frontier_phi_28_24_ladder;
        }
        float _2709;
        if (_2279 > 0.0)
        {
            _2709 = abs((1.0 - _2269) / _2279);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2279 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2269 + 1.0) / _2279);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2709 = frontier_phi_40_35_ladder;
        }
        float _2914;
        if (_2282 > 0.0)
        {
            _2914 = abs((1.0 - _2273) / _2282);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_2282 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_2273 + 1.0) / _2282);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2914 = frontier_phi_49_46_ladder;
        }
        float _2916 = isnan(_2709) ? _2441 : (isnan(_2441) ? _2709 : min(_2441, _2709));
        float _2917 = isnan(_2914) ? _2916 : (isnan(_2916) ? _2914 : min(_2916, _2914));
        float _2921 = (_2917 * _2276) + _2265;
        float _2922 = (_2917 * _2279) + _2269;
        float _2923 = (_2917 * _2282) + _2273;
        float _2924 = _2917 * 9.9999997473787516355514526367188e-05;
        float _2925 = (-1.0) - _2924;
        float _2927 = _2924 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_2923 > _2927) || ((_2923 < _2925) || ((_2922 > _2927) || ((_2922 < _2925) || ((_2921 < _2925) || (_2921 > _2927))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3122 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2923, cbModelParam._m0[17u].z, fma(_2922, cbModelParam._m0[17u].y, _2921 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2923, cbModelParam._m0[18u].z, fma(_2922, cbModelParam._m0[18u].y, _2921 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2923, cbModelParam._m0[19u].z, fma(_2922, cbModelParam._m0[19u].y, _2921 * cbModelParam._m0[19u].x))), _2212);
            frontier_phi_25_49_ladder = _3122.z * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_1 = _3122.y * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_2 = _3122.x * cbModelParam._m0[1u].z;
        }
        _2301 = frontier_phi_25_49_ladder_2;
        _2303 = frontier_phi_25_49_ladder_1;
        _2305 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _2285 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1286, _1287, _1288), _2212);
        _2301 = _2285.x * cbModelParam._m0[1u].z;
        _2303 = _2285.y * cbModelParam._m0[1u].z;
        _2305 = _2285.z * cbModelParam._m0[1u].z;
    }
    float _2317 = ((((1.0 - _1307) * ((_1294 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1307 * _1294)) * _1278;
    float _2318 = _2317 * ((cbModelParam._m0[1u].w * (_2301 - _2203)) + _2203);
    float _2319 = _2317 * ((cbModelParam._m0[1u].w * (_2303 - _2205)) + _2205);
    float _2320 = _2317 * ((cbModelParam._m0[1u].w * (_2305 - _2207)) + _2207);
    float _2323 = fma(_2320, cbSceneParam._m0[89u].z, fma(_2319, cbSceneParam._m0[89u].y, _2318 * cbSceneParam._m0[89u].x));
    float _2326 = fma(_2320, cbSceneParam._m0[90u].z, fma(_2319, cbSceneParam._m0[90u].y, _2318 * cbSceneParam._m0[90u].x));
    float _2329 = fma(_2320, cbSceneParam._m0[91u].z, fma(_2319, cbSceneParam._m0[91u].y, _2318 * cbSceneParam._m0[91u].x));
    vec4 _2337 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1215, _1216));
    float _2339 = _2337.w;
    float _2351 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2339);
    float _2352 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2339);
    float _2353 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2339);
    uvec4 _2357 = floatBitsToUint(cbInstanceData._m0[_295 + 5u]);
    uint _2359 = _2357.x * 14u;
    uint _2360 = _2359 + 13u;
    float _2367 = _1278 + (-1.0);
    float _2372 = (cbLight._m0[_2360].x * _2367) + 1.0;
    float _2373 = (cbLight._m0[_2360].y * _2367) + 1.0;
    float _2374 = (cbLight._m0[_2360].z * _2367) + 1.0;
    float _2375 = (cbLight._m0[_2360].w * _2367) + 1.0;
    uint _2376 = _2359 + 5u;
    float _2382 = isnan(1.0) ? _2373 : (isnan(_2373) ? 1.0 : min(_2373, 1.0));
    uint _2386 = _2359 + 4u;
    float _2395 = isnan(1.0) ? _2372 : (isnan(_2372) ? 1.0 : min(_2372, 1.0));
    uint _2399 = _2359 | 1u;
    float _2410 = dot(vec3(cbLight._m0[_2359].xyz), vec3(_1117, _1118, _1119));
    float _2413 = dot(vec3(cbLight._m0[_2399].xyz), vec3(_1117, _1118, _1119));
    float _4688 = isnan(0.0) ? _2410 : (isnan(_2410) ? 0.0 : max(_2410, 0.0));
    float _4699 = isnan(0.0) ? _2413 : (isnan(_2413) ? 0.0 : max(_2413, 0.0));
    float _2418 = (isnan(1.0) ? _4688 : (isnan(_4688) ? 1.0 : min(_4688, 1.0))) * 0.3183098733425140380859375;
    float _2420 = (isnan(1.0) ? _4699 : (isnan(_4699) ? 1.0 : min(_4699, 1.0))) * 0.3183098733425140380859375;
    float _2427 = ((cbLight._m0[_2376].x * _2382) * _2420) + (((cbLight._m0[_2386].x * _2351) * _2395) * _2418);
    float _2428 = ((_2382 * cbLight._m0[_2376].y) * _2420) + (((cbLight._m0[_2386].y * _2352) * _2395) * _2418);
    float _2429 = ((_2382 * cbLight._m0[_2376].z) * _2420) + (((cbLight._m0[_2386].z * _2353) * _2395) * _2418);
    uvec4 _2433 = floatBitsToUint(cbLight._m0[_2359 + 12u]);
    bool _2435 = _2433.x == 0u;
    float _2446;
    float _2448;
    float _2450;
    if (_2435)
    {
        _2446 = _2427;
        _2448 = _2428;
        _2450 = _2429;
    }
    else
    {
        uint _2454 = _2359 + 6u;
        float _2470 = (dot(vec3(cbLight._m0[_2359 + 2u].xyz), vec3(_1117, _1118, _1119)) * 0.5) + 0.5;
        float _2471 = _2470 * _2470;
        float _4710 = isnan(0.0) ? _2471 : (isnan(_2471) ? 0.0 : max(_2471, 0.0));
        float _2472 = isnan(1.0) ? _4710 : (isnan(_4710) ? 1.0 : min(_4710, 1.0));
        float _2473 = isnan(1.0) ? _2374 : (isnan(_2374) ? 1.0 : min(_2374, 1.0));
        _2446 = (((cbLight._m0[_2454].x * 0.3183098733425140380859375) * _2472) * _2473) + _2427;
        _2448 = (((cbLight._m0[_2454].y * 0.3183098733425140380859375) * _2472) * _2473) + _2428;
        _2450 = (((cbLight._m0[_2454].z * 0.3183098733425140380859375) * _2472) * _2473) + _2429;
    }
    bool _2453 = _2433.y == 0u;
    float _2491;
    float _2493;
    float _2495;
    if (_2453)
    {
        _2491 = _2446;
        _2493 = _2448;
        _2495 = _2450;
    }
    else
    {
        uint _2653 = _2359 + 7u;
        float _2669 = (dot(vec3(cbLight._m0[_2359 + 3u].xyz), vec3(_1117, _1118, _1119)) * 0.5) + 0.5;
        float _2670 = _2669 * _2669;
        float _4726 = isnan(0.0) ? _2670 : (isnan(_2670) ? 0.0 : max(_2670, 0.0));
        float _2671 = isnan(1.0) ? _4726 : (isnan(_4726) ? 1.0 : min(_4726, 1.0));
        float _2672 = isnan(1.0) ? _2375 : (isnan(_2375) ? 1.0 : min(_2375, 1.0));
        _2491 = (((cbLight._m0[_2653].x * 0.3183098733425140380859375) * _2671) * _2672) + _2446;
        _2493 = (((cbLight._m0[_2653].y * 0.3183098733425140380859375) * _2671) * _2672) + _2448;
        _2495 = (((cbLight._m0[_2653].z * 0.3183098733425140380859375) * _2671) * _2672) + _2450;
    }
    uint _2498 = _2359 + 8u;
    float _2511 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2359].w)) * _1120) * 0.949999988079071044921875);
    float _2512 = _2511 * _2511;
    float _2513 = cbLight._m0[_2359].x + _1195;
    float _2514 = cbLight._m0[_2359].y + _1196;
    float _2515 = cbLight._m0[_2359].z + _1197;
    float _2519 = inversesqrt(dot(vec3(_2513, _2514, _2515), vec3(_2513, _2514, _2515)));
    float _2520 = _2519 * _2513;
    float _2521 = _2519 * _2514;
    float _2522 = _2519 * _2515;
    float _2523 = dot(vec3(_1117, _1118, _1119), vec3(cbLight._m0[_2359].xyz));
    float _4742 = isnan(0.0) ? _2523 : (isnan(_2523) ? 0.0 : max(_2523, 0.0));
    float _2526 = isnan(1.0) ? _4742 : (isnan(_4742) ? 1.0 : min(_4742, 1.0));
    float _4753 = isnan(0.0) ? _1279 : (isnan(_1279) ? 0.0 : max(_1279, 0.0));
    float _2527 = isnan(1.0) ? _4753 : (isnan(_4753) ? 1.0 : min(_4753, 1.0));
    float _2528 = dot(vec3(_1117, _1118, _1119), vec3(_2520, _2521, _2522));
    float _4764 = isnan(0.0) ? _2528 : (isnan(_2528) ? 0.0 : max(_2528, 0.0));
    float _2531 = isnan(1.0) ? _4764 : (isnan(_4764) ? 1.0 : min(_4764, 1.0));
    float _2532 = dot(vec3(cbLight._m0[_2359].xyz), vec3(_2520, _2521, _2522));
    float _4775 = isnan(0.0) ? _2532 : (isnan(_2532) ? 0.0 : max(_2532, 0.0));
    float _2536 = _2512 * _2512;
    float _2540 = ((_2531 * _2531) * (_2536 + (-1.0))) + 1.0;
    float _2551 = (exp2(log2(1.0 - (isnan(1.0) ? _4775 : (isnan(_4775) ? 1.0 : min(_4775, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2552 = 1.0 - _2512;
    float _2563 = (0.5 / (((_2527 * ((_2526 * _2552) + _2512)) + 9.9999999392252902907785028219223e-09) + (((_2527 * _2552) + _2512) * _2526))) * _2526;
    float _4786 = isnan(0.0) ? _2563 : (isnan(_2563) ? 0.0 : max(_2563, 0.0));
    float _2565 = (isnan(1.0) ? _4786 : (isnan(_4786) ? 1.0 : min(_4786, 1.0))) * (_2536 / ((_2540 * _2540) * 3.141590118408203125));
    uint _2579 = _2359 + 9u;
    float _2590 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2399].w)) * _1120) * 0.949999988079071044921875);
    float _2591 = _2590 * _2590;
    float _2592 = cbLight._m0[_2399].x + _1195;
    float _2593 = cbLight._m0[_2399].y + _1196;
    float _2594 = cbLight._m0[_2399].z + _1197;
    float _2598 = inversesqrt(dot(vec3(_2592, _2593, _2594), vec3(_2592, _2593, _2594)));
    float _2599 = _2598 * _2592;
    float _2600 = _2598 * _2593;
    float _2601 = _2598 * _2594;
    float _2602 = dot(vec3(_1117, _1118, _1119), vec3(cbLight._m0[_2399].xyz));
    float _4797 = isnan(0.0) ? _2602 : (isnan(_2602) ? 0.0 : max(_2602, 0.0));
    float _2605 = isnan(1.0) ? _4797 : (isnan(_4797) ? 1.0 : min(_4797, 1.0));
    float _2606 = dot(vec3(_1117, _1118, _1119), vec3(_2599, _2600, _2601));
    float _4808 = isnan(0.0) ? _2606 : (isnan(_2606) ? 0.0 : max(_2606, 0.0));
    float _2609 = isnan(1.0) ? _4808 : (isnan(_4808) ? 1.0 : min(_4808, 1.0));
    float _2610 = dot(vec3(cbLight._m0[_2399].xyz), vec3(_2599, _2600, _2601));
    float _4819 = isnan(0.0) ? _2610 : (isnan(_2610) ? 0.0 : max(_2610, 0.0));
    float _2614 = _2591 * _2591;
    float _2618 = ((_2609 * _2609) * (_2614 + (-1.0))) + 1.0;
    float _2627 = (exp2(log2(1.0 - (isnan(1.0) ? _4819 : (isnan(_4819) ? 1.0 : min(_4819, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2628 = 1.0 - _2591;
    float _2638 = (0.5 / (((_2527 * ((_2605 * _2628) + _2591)) + 9.9999999392252902907785028219223e-09) + (((_2527 * _2628) + _2591) * _2605))) * _2605;
    float _4830 = isnan(0.0) ? _2638 : (isnan(_2638) ? 0.0 : max(_2638, 0.0));
    float _2640 = (isnan(1.0) ? _4830 : (isnan(_4830) ? 1.0 : min(_4830, 1.0))) * (_2614 / ((_2618 * _2618) * 3.141590118408203125));
    float _2650 = (((_2627 * cbLight._m0[_2579].x) * _2640) * _2382) + ((((cbLight._m0[_2498].x * _2351) * _2551) * _2565) * _2395);
    float _2651 = (((_2627 * cbLight._m0[_2579].y) * _2640) * _2382) + ((((cbLight._m0[_2498].y * _2352) * _2551) * _2565) * _2395);
    float _2652 = (((_2627 * cbLight._m0[_2579].z) * _2640) * _2382) + ((((cbLight._m0[_2498].z * _2353) * _2551) * _2565) * _2395);
    float _2714;
    float _2716;
    float _2718;
    if (_2435)
    {
        _2714 = _2650;
        _2716 = _2651;
        _2718 = _2652;
    }
    else
    {
        uint _2720 = _2359 + 2u;
        uint _2724 = _2359 + 10u;
        float _2738 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2720].w)) * _1120) * 0.949999988079071044921875);
        float _2739 = _2738 * _2738;
        float _2740 = cbLight._m0[_2720].x + _1195;
        float _2741 = cbLight._m0[_2720].y + _1196;
        float _2742 = cbLight._m0[_2720].z + _1197;
        float _2746 = inversesqrt(dot(vec3(_2740, _2741, _2742), vec3(_2740, _2741, _2742)));
        float _2747 = _2746 * _2740;
        float _2748 = _2746 * _2741;
        float _2749 = _2746 * _2742;
        float _2750 = dot(vec3(_1117, _1118, _1119), vec3(cbLight._m0[_2720].xyz));
        float _4841 = isnan(0.0) ? _2750 : (isnan(_2750) ? 0.0 : max(_2750, 0.0));
        float _2753 = isnan(1.0) ? _4841 : (isnan(_4841) ? 1.0 : min(_4841, 1.0));
        float _2754 = dot(vec3(_1117, _1118, _1119), vec3(_2747, _2748, _2749));
        float _4852 = isnan(0.0) ? _2754 : (isnan(_2754) ? 0.0 : max(_2754, 0.0));
        float _2757 = isnan(1.0) ? _4852 : (isnan(_4852) ? 1.0 : min(_4852, 1.0));
        float _2758 = dot(vec3(cbLight._m0[_2720].xyz), vec3(_2747, _2748, _2749));
        float _4863 = isnan(0.0) ? _2758 : (isnan(_2758) ? 0.0 : max(_2758, 0.0));
        float _2762 = _2739 * _2739;
        float _2766 = ((_2757 * _2757) * (_2762 + (-1.0))) + 1.0;
        float _2775 = (exp2(log2(1.0 - (isnan(1.0) ? _4863 : (isnan(_4863) ? 1.0 : min(_4863, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2776 = 1.0 - _2739;
        float _2786 = (0.5 / (((_2527 * ((_2753 * _2776) + _2739)) + 9.9999999392252902907785028219223e-09) + (((_2527 * _2776) + _2739) * _2753))) * _2753;
        float _4874 = isnan(0.0) ? _2786 : (isnan(_2786) ? 0.0 : max(_2786, 0.0));
        float _2788 = (isnan(1.0) ? _4874 : (isnan(_4874) ? 1.0 : min(_4874, 1.0))) * (_2762 / ((_2766 * _2766) * 3.141590118408203125));
        float _2789 = isnan(1.0) ? _2374 : (isnan(_2374) ? 1.0 : min(_2374, 1.0));
        _2714 = (((_2775 * cbLight._m0[_2724].x) * _2788) * _2789) + _2650;
        _2716 = (((_2775 * cbLight._m0[_2724].y) * _2788) * _2789) + _2651;
        _2718 = (((_2775 * cbLight._m0[_2724].z) * _2788) * _2789) + _2652;
    }
    float _2824;
    float _2826;
    float _2828;
    if (_2453)
    {
        _2824 = _2714;
        _2826 = _2716;
        _2828 = _2718;
    }
    else
    {
        uint _2835 = _2359 + 3u;
        uint _2839 = _2359 + 11u;
        float _2853 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2835].w)) * _1120) * 0.949999988079071044921875);
        float _2854 = _2853 * _2853;
        float _2855 = cbLight._m0[_2835].x + _1195;
        float _2856 = cbLight._m0[_2835].y + _1196;
        float _2857 = cbLight._m0[_2835].z + _1197;
        float _2861 = inversesqrt(dot(vec3(_2855, _2856, _2857), vec3(_2855, _2856, _2857)));
        float _2862 = _2861 * _2855;
        float _2863 = _2861 * _2856;
        float _2864 = _2861 * _2857;
        float _2865 = dot(vec3(_1117, _1118, _1119), vec3(cbLight._m0[_2835].xyz));
        float _4890 = isnan(0.0) ? _2865 : (isnan(_2865) ? 0.0 : max(_2865, 0.0));
        float _2868 = isnan(1.0) ? _4890 : (isnan(_4890) ? 1.0 : min(_4890, 1.0));
        float _2869 = dot(vec3(_1117, _1118, _1119), vec3(_2862, _2863, _2864));
        float _4901 = isnan(0.0) ? _2869 : (isnan(_2869) ? 0.0 : max(_2869, 0.0));
        float _2872 = isnan(1.0) ? _4901 : (isnan(_4901) ? 1.0 : min(_4901, 1.0));
        float _2873 = dot(vec3(cbLight._m0[_2835].xyz), vec3(_2862, _2863, _2864));
        float _4912 = isnan(0.0) ? _2873 : (isnan(_2873) ? 0.0 : max(_2873, 0.0));
        float _2877 = _2854 * _2854;
        float _2881 = ((_2872 * _2872) * (_2877 + (-1.0))) + 1.0;
        float _2890 = (exp2(log2(1.0 - (isnan(1.0) ? _4912 : (isnan(_4912) ? 1.0 : min(_4912, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2891 = 1.0 - _2854;
        float _2901 = (0.5 / (((_2527 * ((_2868 * _2891) + _2854)) + 9.9999999392252902907785028219223e-09) + (((_2527 * _2891) + _2854) * _2868))) * _2868;
        float _4923 = isnan(0.0) ? _2901 : (isnan(_2901) ? 0.0 : max(_2901, 0.0));
        float _2903 = (isnan(1.0) ? _4923 : (isnan(_4923) ? 1.0 : min(_4923, 1.0))) * (_2877 / ((_2881 * _2881) * 3.141590118408203125));
        float _2904 = isnan(1.0) ? _2375 : (isnan(_2375) ? 1.0 : min(_2375, 1.0));
        _2824 = (((_2890 * cbLight._m0[_2839].x) * _2903) * _2904) + _2714;
        _2826 = (((_2890 * cbLight._m0[_2839].y) * _2903) * _2904) + _2716;
        _2828 = (((_2890 * cbLight._m0[_2839].z) * _2903) * _2904) + _2718;
    }
    float _3039;
    float _3041;
    float _3043;
    float _3045;
    float _3047;
    float _3049;
    if (_2357.y == 0u)
    {
        float _2979 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2980 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2979;
        float _2981 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2979;
        float _2982 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2979;
        uvec4 _2994 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2995 = _2994.x;
        uint _3006 = uint((float(_2994.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1216) / _2995))) + floor(float(uint(cbSceneParam._m0[85u].x * _1215) / _2995)));
        float _3016 = (log2(_2982 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3017 = isnan(0.0) ? _3016 : (isnan(_3016) ? 0.0 : max(_3016, 0.0));
        uint _3020 = uint(isnan(14.0) ? _3017 : (isnan(_3017) ? 14.0 : min(_3017, 14.0)));
        uvec4 _3025 = texelFetch(g_lightClusterGridBuffer, int(((_3020 << 2u) + (_3006 << 6u)) >> 2u));
        uint _3026 = _3025.x;
        uint _3027 = _2994.z;
        float _3127;
        float _3129;
        float _3131;
        float _3133;
        float _3135;
        float _3137;
        if (((((1u << ((_3027 >> 4u) & 15u)) + 4294967295u) & _3026) == 0u) || ((_3027 & 240u) == 0u))
        {
            _3127 = 0.0;
            _3129 = 0.0;
            _3131 = 0.0;
            _3133 = 0.0;
            _3135 = 0.0;
            _3137 = 0.0;
        }
        else
        {
            float _3128;
            float _3130;
            float _3132;
            float _3134;
            float _3136;
            float _3138;
            float _3279 = 0.0;
            float _3280 = 0.0;
            float _3281 = 0.0;
            float _3282 = 0.0;
            float _3283 = 0.0;
            float _3284 = 0.0;
            uint _3285 = 0u;
            uint _3294;
            bool _3295;
            for (;;)
            {
                _3294 = texelFetch(g_lightClassification, int((((_3020 << 5u) + (_3006 << 9u)) + (_3285 << 2u)) >> 2u)).x;
                _3295 = _3294 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3295)
                {
                    frontier_phi_66_pred = _3279;
                    frontier_phi_66_pred_1 = _3284;
                    frontier_phi_66_pred_2 = _3283;
                    frontier_phi_66_pred_3 = _3282;
                    frontier_phi_66_pred_4 = _3281;
                    frontier_phi_66_pred_5 = _3280;
                }
                else
                {
                    float _3424;
                    float _3425;
                    float _3426;
                    float _3427;
                    float _3428;
                    float _3429;
                    uint _3430;
                    _3424 = _3279;
                    _3425 = _3280;
                    _3426 = _3281;
                    _3427 = _3282;
                    _3428 = _3283;
                    _3429 = _3284;
                    _3430 = _3294;
                    float _3351;
                    float _3352;
                    float _3353;
                    float _3354;
                    float _3355;
                    float _3356;
                    for (;;)
                    {
                        uint _3434 = uint(findLSB(_3430)) + (_3285 << 5u);
                        uint _3431 = (_3430 + 4294967295u) & _3430;
                        uint _3436 = _3434 * 48u;
                        vec4 _3450 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3436)).x, texelFetch(g_PointLightRenderingBuffer, int(_3436 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3436 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3436 + 3u)).x));
                        uint _3456 = (_3434 * 48u) + 4u;
                        vec4 _3469 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3456)).x, texelFetch(g_PointLightRenderingBuffer, int(_3456 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3456 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3456 + 3u)).x));
                        uint _3475 = (_3434 * 48u) + 8u;
                        vec3 _3486 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3475)).x, texelFetch(g_PointLightRenderingBuffer, int(_3475 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3475 + 2u)).x));
                        float _3490 = _3450.x - _2980;
                        float _3491 = _3450.y - _2981;
                        float _3492 = _3450.z - _2982;
                        float _3493 = dot(vec3(_3490, _3491, _3492), vec3(_3490, _3491, _3492));
                        float _3496 = inversesqrt(_3493);
                        float _3497 = _3496 * _3490;
                        float _3498 = _3496 * _3491;
                        float _3499 = _3496 * _3492;
                        float _3500 = dot(vec3(_1234, _1237, _1240), vec3(_3497, _3498, _3499));
                        float _3505 = 1.0 - (_3493 * _3450.w);
                        float _4949 = isnan(0.0) ? _3505 : (isnan(_3505) ? 0.0 : max(_3505, 0.0));
                        float _3506 = isnan(1.0) ? _4949 : (isnan(_4949) ? 1.0 : min(_4949, 1.0));
                        float _3507 = sqrt(_3493) * _3469.w;
                        float _3510 = 1.39999997615814208984375 / (_3507 + 1.39999997615814208984375);
                        float _3511 = _3510 * _3510;
                        float _3514 = ((1.0 - _3511) * _3500) + _3511;
                        float _3517 = _3507 * _3507;
                        float _3521 = ((isnan(0.0) ? _3514 : (isnan(_3514) ? 0.0 : max(_3514, 0.0))) * _3506) / ((_3517 * 0.699999988079071044921875) + 1.0);
                        float _3525 = (-0.0) - _2980;
                        float _3526 = (-0.0) - _2981;
                        float _3527 = (-0.0) - _2982;
                        float _3531 = inversesqrt(dot(vec3(_3525, _3526, _3527), vec3(_3525, _3526, _3527)));
                        float _3532 = _3531 * _3525;
                        float _3533 = _3531 * _3526;
                        float _3534 = _3531 * _3527;
                        float _3542 = exp2(log2(1.0 / ((_3517 * 3.5) + 5.0)) * 0.25);
                        float _3543 = 1.0 - _1294;
                        float _3550 = sqrt(1.0 - ((1.0 - (_3543 * _3543)) * (1.0 - (_3542 * _3542))));
                        float _3551 = _3550 * _3550;
                        float _3552 = _3551 * _3551;
                        float _3553 = _3532 + _3497;
                        float _3554 = _3533 + _3498;
                        float _3555 = _3534 + _3499;
                        float _3559 = inversesqrt(dot(vec3(_3553, _3554, _3555), vec3(_3553, _3554, _3555)));
                        float _3563 = dot(vec3(_1234, _1237, _1240), vec3(_3532, _3533, _3534));
                        float _4965 = isnan(0.0) ? _3563 : (isnan(_3563) ? 0.0 : max(_3563, 0.0));
                        float _3566 = isnan(1.0) ? _4965 : (isnan(_4965) ? 1.0 : min(_4965, 1.0));
                        float _3567 = dot(vec3(_1234, _1237, _1240), vec3(_3559 * _3553, _3559 * _3554, _3559 * _3555));
                        float _4976 = isnan(0.0) ? _3567 : (isnan(_3567) ? 0.0 : max(_3567, 0.0));
                        float _3570 = isnan(1.0) ? _4976 : (isnan(_4976) ? 1.0 : min(_4976, 1.0));
                        float _3574 = ((_3570 * _3570) * (_3552 + (-1.0))) + 1.0;
                        float _3575 = _3510 * _3551;
                        float _3576 = _3575 * _3575;
                        float _3579 = ((1.0 - _3576) * _3500) + _3576;
                        float _4987 = isnan(0.0) ? _3579 : (isnan(_3579) ? 0.0 : max(_3579, 0.0));
                        float _3580 = isnan(1.0) ? _4987 : (isnan(_4987) ? 1.0 : min(_4987, 1.0));
                        float _3581 = 1.0 - _3551;
                        float _3591 = (0.5 / (((_3580 * ((_3566 * _3581) + _3551)) + 9.9999999392252902907785028219223e-09) + (((_3580 * _3581) + _3551) * _3566))) * _3580;
                        float _4998 = isnan(0.0) ? _3591 : (isnan(_3591) ? 0.0 : max(_3591, 0.0));
                        float _3602 = (((_3552 * 3.1415927410125732421875) * (isnan(1.0) ? _4998 : (isnan(_4998) ? 1.0 : min(_4998, 1.0)))) / ((_3574 * _3574) * ((_3517 * 2.1991131305694580078125) + 3.141590118408203125))) * _3506;
                        _3354 = (_3521 * _3469.x) + _3427;
                        _3355 = (_3521 * _3469.y) + _3428;
                        _3356 = (_3521 * _3469.z) + _3429;
                        _3351 = (_3602 * _3486.x) + _3424;
                        _3352 = (_3602 * _3486.y) + _3425;
                        _3353 = (_3602 * _3486.z) + _3426;
                        if (_3431 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3424 = _3351;
                            _3425 = _3352;
                            _3426 = _3353;
                            _3427 = _3354;
                            _3428 = _3355;
                            _3429 = _3356;
                            _3430 = _3431;
                        }
                    }
                    frontier_phi_66_pred = _3351;
                    frontier_phi_66_pred_1 = _3356;
                    frontier_phi_66_pred_2 = _3355;
                    frontier_phi_66_pred_3 = _3354;
                    frontier_phi_66_pred_4 = _3353;
                    frontier_phi_66_pred_5 = _3352;
                }
                _3128 = frontier_phi_66_pred;
                _3138 = frontier_phi_66_pred_1;
                _3136 = frontier_phi_66_pred_2;
                _3134 = frontier_phi_66_pred_3;
                _3132 = frontier_phi_66_pred_4;
                _3130 = frontier_phi_66_pred_5;
                uint _3286 = _3285 + 1u;
                if (_3286 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3279 = _3128;
                    _3280 = _3130;
                    _3281 = _3132;
                    _3282 = _3134;
                    _3283 = _3136;
                    _3284 = _3138;
                    _3285 = _3286;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3127 = _3128;
            _3129 = _3130;
            _3131 = _3132;
            _3133 = _3134;
            _3135 = _3136;
            _3137 = _3138;
        }
        uvec4 _3141 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3142 = _3141.z;
        uint _3144 = (_3142 >> 8u) & 15u;
        float _3247;
        float _3249;
        float _3251;
        float _3253;
        float _3255;
        float _3257;
        if (((4294967295u << _3144) & _3026) == 0u)
        {
            _3247 = _3127;
            _3249 = _3129;
            _3251 = _3131;
            _3253 = _3133;
            _3255 = _3135;
            _3257 = _3137;
        }
        else
        {
            float _3272 = inversesqrt(dot(vec3(_2980, _2981, _2982), vec3(_2980, _2981, _2982)));
            float _3273 = _3272 * _2980;
            float _3274 = _3272 * _2981;
            float _3275 = _3272 * _2982;
            float frontier_phi_58_59_ladder;
            float frontier_phi_58_59_ladder_1;
            float frontier_phi_58_59_ladder_2;
            float frontier_phi_58_59_ladder_3;
            float frontier_phi_58_59_ladder_4;
            float frontier_phi_58_59_ladder_5;
            if (_3144 < ((_3142 >> 12u) & 15u))
            {
                float _3248;
                float _3250;
                float _3252;
                float _3254;
                float _3256;
                float _3258;
                float _3407 = _3127;
                float _3408 = _3129;
                float _3409 = _3131;
                float _3410 = _3133;
                float _3411 = _3135;
                float _3412 = _3137;
                uint _3413 = _3144;
                uint _3422;
                bool _3423;
                for (;;)
                {
                    _3422 = texelFetch(g_lightClassification, int((((_3020 << 5u) + (_3006 << 9u)) + (_3413 << 2u)) >> 2u)).x;
                    _3423 = _3422 == 0u;
                    float frontier_phi_77_pred;
                    float frontier_phi_77_pred_1;
                    float frontier_phi_77_pred_2;
                    float frontier_phi_77_pred_3;
                    float frontier_phi_77_pred_4;
                    float frontier_phi_77_pred_5;
                    if (_3423)
                    {
                        frontier_phi_77_pred = _3412;
                        frontier_phi_77_pred_1 = _3411;
                        frontier_phi_77_pred_2 = _3410;
                        frontier_phi_77_pred_3 = _3409;
                        frontier_phi_77_pred_4 = _3408;
                        frontier_phi_77_pred_5 = _3407;
                    }
                    else
                    {
                        float _3616;
                        float _3617;
                        float _3618;
                        float _3619;
                        float _3620;
                        float _3621;
                        float _3909;
                        float _3910;
                        float _3911;
                        float _3912;
                        float _3913;
                        float _3914;
                        float _3629 = _3407;
                        float _3630 = _3408;
                        float _3631 = _3409;
                        float _3632 = _3410;
                        float _3633 = _3411;
                        float _3634 = _3412;
                        uint _3635 = _3422;
                        uint _3636;
                        vec4 _3661;
                        float _3662;
                        vec4 _3677;
                        vec3 _3689;
                        vec4 _3704;
                        vec4 _3719;
                        float _3765;
                        bool _3766;
                        for (;;)
                        {
                            uint _3646 = ((_3413 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3635));
                            _3636 = (_3635 + 4294967295u) & _3635;
                            uint _3648 = _3646 * 40u;
                            _3661 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3648)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3648 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3648 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3648 + 3u)).x));
                            _3662 = _3661.w;
                            uint _3664 = (_3646 * 40u) + 4u;
                            _3677 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3664)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3664 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3664 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3664 + 3u)).x));
                            uint _3679 = (_3646 * 40u) + 8u;
                            _3689 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3679)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3679 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3679 + 2u)).x));
                            uint _3691 = (_3646 * 40u) + 16u;
                            _3704 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3691)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3691 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3691 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3691 + 3u)).x));
                            uint _3706 = (_3646 * 40u) + 20u;
                            _3719 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3706)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3706 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3706 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3706 + 3u)).x));
                            uint _3721 = (_3646 * 40u) + 24u;
                            vec4 _3734 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3721)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3721 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3721 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3721 + 3u)).x));
                            uint _3740 = (_3646 * 40u) + 28u;
                            vec4 _3753 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3740)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3740 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3740 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3740 + 3u)).x));
                            _3765 = fma(_2982, _3753.z, fma(_2981, _3753.y, _3753.x * _2980)) + _3753.w;
                            _3766 = !((fma(_2982, _3734.z, fma(_2981, _3734.y, _3734.x * _2980)) + _3734.w) <= 0.0);
                            float frontier_phi_83_pred;
                            float frontier_phi_83_pred_1;
                            float frontier_phi_83_pred_2;
                            float frontier_phi_83_pred_3;
                            float frontier_phi_83_pred_4;
                            float frontier_phi_83_pred_5;
                            if (_3766)
                            {
                                float _3793 = _3661.x - _2980;
                                float _3794 = _3661.y - _2981;
                                float _3795 = _3661.z - _2982;
                                float _3796 = dot(vec3(_3793, _3794, _3795), vec3(_3793, _3794, _3795));
                                float _3799 = inversesqrt(_3796);
                                float _3800 = _3799 * _3793;
                                float _3801 = _3799 * _3794;
                                float _3802 = _3799 * _3795;
                                float _3806 = 1.0 - (_3796 / (_3662 * _3662));
                                float _5009 = isnan(0.0) ? _3806 : (isnan(_3806) ? 0.0 : max(_3806, 0.0));
                                float _3807 = isnan(1.0) ? _5009 : (isnan(_5009) ? 1.0 : min(_5009, 1.0));
                                float _3811 = sqrt(_3796) * _3677.w;
                                float _3813 = 1.39999997615814208984375 / (_3811 + 1.39999997615814208984375);
                                float _3814 = _3813 * _3813;
                                float _3817 = ((1.0 - _3814) * dot(vec3(_3800, _3801, _3802), vec3(_1234, _1237, _1240))) + _3814;
                                float _3820 = _3811 * _3811;
                                float _3824 = (fma(_2982, _3704.z, fma(_2981, _3704.y, _3704.x * _2980)) + _3704.w) / _3765;
                                float _3825 = (fma(_2982, _3719.z, fma(_2981, _3719.y, _3719.x * _2980)) + _3719.w) / _3765;
                                float _3829 = 1.0 - dot(vec2(_3824, _3825), vec2(_3824, _3825));
                                float _5025 = isnan(0.0) ? _3829 : (isnan(_3829) ? 0.0 : max(_3829, 0.0));
                                float _3830 = isnan(1.0) ? _5025 : (isnan(_5025) ? 1.0 : min(_5025, 1.0));
                                float _3831 = _3830 * (((isnan(0.0) ? _3817 : (isnan(_3817) ? 0.0 : max(_3817, 0.0))) * _3807) / ((_3820 * 0.699999988079071044921875) + 1.0));
                                float _3843 = exp2(log2(1.0 / ((_3820 * 3.5) + 5.0)) * 0.25);
                                float _3844 = 1.0 - _1294;
                                float _3851 = sqrt(1.0 - ((1.0 - (_3844 * _3844)) * (1.0 - (_3843 * _3843))));
                                float _3852 = _3851 * _3851;
                                float _3853 = _3852 * _3852;
                                float _3854 = _3800 - _3273;
                                float _3855 = _3801 - _3274;
                                float _3856 = _3802 - _3275;
                                float _3860 = inversesqrt(dot(vec3(_3854, _3855, _3856), vec3(_3854, _3855, _3856)));
                                float _3864 = dot(vec3(_1234, _1237, _1240), vec3((-0.0) - _3273, (-0.0) - _3274, (-0.0) - _3275));
                                float _5036 = isnan(0.0) ? _3864 : (isnan(_3864) ? 0.0 : max(_3864, 0.0));
                                float _3867 = isnan(1.0) ? _5036 : (isnan(_5036) ? 1.0 : min(_5036, 1.0));
                                float _3868 = dot(vec3(_1234, _1237, _1240), vec3(_3860 * _3854, _3860 * _3855, _3860 * _3856));
                                float _5047 = isnan(0.0) ? _3868 : (isnan(_3868) ? 0.0 : max(_3868, 0.0));
                                float _3871 = isnan(1.0) ? _5047 : (isnan(_5047) ? 1.0 : min(_5047, 1.0));
                                float _3875 = ((_3871 * _3871) * (_3853 + (-1.0))) + 1.0;
                                float _3876 = _3813 * _3852;
                                float _3877 = _3876 * _3876;
                                float _3883 = ((1.0 - _3877) * dot(vec3(_1234, _1237, _1240), vec3(_3800, _3801, _3802))) + _3877;
                                float _5058 = isnan(0.0) ? _3883 : (isnan(_3883) ? 0.0 : max(_3883, 0.0));
                                float _3884 = isnan(1.0) ? _5058 : (isnan(_5058) ? 1.0 : min(_5058, 1.0));
                                float _3885 = 1.0 - _3852;
                                float _3895 = (0.5 / (((_3884 * ((_3867 * _3885) + _3852)) + 9.9999999392252902907785028219223e-09) + (((_3884 * _3885) + _3852) * _3867))) * _3884;
                                float _5069 = isnan(0.0) ? _3895 : (isnan(_3895) ? 0.0 : max(_3895, 0.0));
                                float _3905 = (_3830 * _3807) * (((_3853 * 3.1415927410125732421875) * (isnan(1.0) ? _5069 : (isnan(_5069) ? 1.0 : min(_5069, 1.0)))) / ((_3875 * _3875) * ((_3820 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_83_pred = _3831 * _3677.y;
                                frontier_phi_83_pred_1 = _3831 * _3677.x;
                                frontier_phi_83_pred_2 = _3905 * _3689.z;
                                frontier_phi_83_pred_3 = _3905 * _3689.y;
                                frontier_phi_83_pred_4 = _3905 * _3689.x;
                                frontier_phi_83_pred_5 = _3831 * _3677.z;
                            }
                            else
                            {
                                frontier_phi_83_pred = 0.0;
                                frontier_phi_83_pred_1 = 0.0;
                                frontier_phi_83_pred_2 = 0.0;
                                frontier_phi_83_pred_3 = 0.0;
                                frontier_phi_83_pred_4 = 0.0;
                                frontier_phi_83_pred_5 = 0.0;
                            }
                            _3913 = frontier_phi_83_pred;
                            _3912 = frontier_phi_83_pred_1;
                            _3911 = frontier_phi_83_pred_2;
                            _3910 = frontier_phi_83_pred_3;
                            _3909 = frontier_phi_83_pred_4;
                            _3914 = frontier_phi_83_pred_5;
                            _3619 = _3912 + _3632;
                            _3620 = _3913 + _3633;
                            _3621 = _3914 + _3634;
                            _3616 = _3909 + _3629;
                            _3617 = _3910 + _3630;
                            _3618 = _3911 + _3631;
                            if (_3636 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3629 = _3616;
                                _3630 = _3617;
                                _3631 = _3618;
                                _3632 = _3619;
                                _3633 = _3620;
                                _3634 = _3621;
                                _3635 = _3636;
                                continue;
                            }
                        }
                        frontier_phi_77_pred = _3621;
                        frontier_phi_77_pred_1 = _3620;
                        frontier_phi_77_pred_2 = _3619;
                        frontier_phi_77_pred_3 = _3618;
                        frontier_phi_77_pred_4 = _3617;
                        frontier_phi_77_pred_5 = _3616;
                    }
                    _3258 = frontier_phi_77_pred;
                    _3256 = frontier_phi_77_pred_1;
                    _3254 = frontier_phi_77_pred_2;
                    _3252 = frontier_phi_77_pred_3;
                    _3250 = frontier_phi_77_pred_4;
                    _3248 = frontier_phi_77_pred_5;
                    uint _3414 = _3413 + 1u;
                    if (_3414 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3407 = _3248;
                        _3408 = _3250;
                        _3409 = _3252;
                        _3410 = _3254;
                        _3411 = _3256;
                        _3412 = _3258;
                        _3413 = _3414;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_58_59_ladder = _3252;
                frontier_phi_58_59_ladder_1 = _3258;
                frontier_phi_58_59_ladder_2 = _3256;
                frontier_phi_58_59_ladder_3 = _3254;
                frontier_phi_58_59_ladder_4 = _3250;
                frontier_phi_58_59_ladder_5 = _3248;
            }
            else
            {
                frontier_phi_58_59_ladder = _3131;
                frontier_phi_58_59_ladder_1 = _3137;
                frontier_phi_58_59_ladder_2 = _3135;
                frontier_phi_58_59_ladder_3 = _3133;
                frontier_phi_58_59_ladder_4 = _3129;
                frontier_phi_58_59_ladder_5 = _3127;
            }
            _3247 = frontier_phi_58_59_ladder_5;
            _3249 = frontier_phi_58_59_ladder_4;
            _3251 = frontier_phi_58_59_ladder;
            _3253 = frontier_phi_58_59_ladder_3;
            _3255 = frontier_phi_58_59_ladder_2;
            _3257 = frontier_phi_58_59_ladder_1;
        }
        float _3262 = isnan(1.0) ? _1278 : (isnan(_1278) ? 1.0 : min(_1278, 1.0));
        _3039 = (_3262 * _3253) + _2491;
        _3041 = (_3262 * _3255) + _2493;
        _3043 = (_3262 * _3257) + _2495;
        _3045 = ((_3247 * 0.039999999105930328369140625) * _3262) + _2824;
        _3047 = ((_3249 * 0.039999999105930328369140625) * _3262) + _2826;
        _3049 = ((_3251 * 0.039999999105930328369140625) * _3262) + _2828;
    }
    else
    {
        _3039 = _2491;
        _3041 = _2493;
        _3043 = _2495;
        _3045 = _2824;
        _3047 = _2826;
        _3049 = _2828;
    }
    float _5085 = isnan(0.0) ? _1263 : (isnan(_1263) ? 0.0 : max(_1263, 0.0));
    float _5096 = isnan(0.0) ? _1264 : (isnan(_1264) ? 0.0 : max(_1264, 0.0));
    float _5107 = isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0));
    float _3066 = ((isnan(1.0) ? _5085 : (isnan(_5085) ? 1.0 : min(_5085, 1.0))) * (_3039 + ((isnan(0.0) ? _2033 : (isnan(_2033) ? 0.0 : max(_2033, 0.0))) * _1278))) + ((_3045 + ((isnan(0.0) ? _2323 : (isnan(_2323) ? 0.0 : max(_2323, 0.0))) * _2112)) * cbPerFrame._m0[3u].x);
    float _3067 = ((isnan(1.0) ? _5096 : (isnan(_5096) ? 1.0 : min(_5096, 1.0))) * (_3041 + ((isnan(0.0) ? _2036 : (isnan(_2036) ? 0.0 : max(_2036, 0.0))) * _1278))) + ((_3047 + ((isnan(0.0) ? _2326 : (isnan(_2326) ? 0.0 : max(_2326, 0.0))) * _2112)) * cbPerFrame._m0[3u].x);
    float _3068 = ((isnan(1.0) ? _5107 : (isnan(_5107) ? 1.0 : min(_5107, 1.0))) * (_3043 + ((isnan(0.0) ? _2039 : (isnan(_2039) ? 0.0 : max(_2039, 0.0))) * _1278))) + ((_3049 + ((isnan(0.0) ? _2329 : (isnan(_2329) ? 0.0 : max(_2329, 0.0))) * _2112)) * cbPerFrame._m0[3u].x);
    uint _3069 = _295 + 6u;
    float _3077 = _1215 / cbSceneParam._m0[86u].x;
    float _3078 = _1216 / cbSceneParam._m0[86u].y;
    vec4 _3092 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3077, _3078, (log2((isnan(cbSceneParam._m0[77u].w) ? _1138 : (isnan(_1138) ? cbSceneParam._m0[77u].w : min(_1138, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3094 = _3092.x;
    float _3095 = _3092.y;
    float _3096 = _3092.z;
    float _3097 = _3092.w;
    float _3189;
    float _3191;
    float _3193;
    float _3195;
    if (_1138 > cbSceneParam._m0[78u].w)
    {
        float _3152 = isnan(_1138) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1138 : min(cbSceneParam._m0[80u].w, _1138));
        float _3153 = _3152 / _1138;
        float _3164 = _3153 * _1188;
        float _3165 = _1189 * _3153;
        float _3166 = (-0.0) - _3165;
        float _3167 = _3153 * _1190;
        float _3169 = (cbSceneParam._m0[77u].w * _3166) / _3152;
        float _3170 = _3169 + cbSceneParam._m0[79u].w;
        float _3171 = cbSceneParam._m0[79u].w - _3165;
        float _3177 = sqrt(((_3164 * _3164) + (_3165 * _3165)) + (_3167 * _3167));
        float _3180 = (1.0 - (cbSceneParam._m0[77u].w / _3152)) * _3177;
        float _3185 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3187 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3364;
        if (abs((_3166 - _3169) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3364 = ((((_3170 > 0.0) ? exp2(_3185 * _3170) : (2.0 - exp2(_3187 * _3170))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3180;
        }
        else
        {
            float _3308 = 1.0 / cbSceneParam._m0[80u].x;
            float _3309 = isnan(_3171) ? _3170 : (isnan(_3170) ? _3171 : max(_3170, _3171));
            float _3310 = isnan(_3171) ? _3170 : (isnan(_3170) ? _3171 : min(_3170, _3171));
            float _3319 = isnan(0.0) ? _3309 : (isnan(_3309) ? 0.0 : min(_3309, 0.0));
            float _3320 = isnan(0.0) ? _3310 : (isnan(_3310) ? 0.0 : min(_3310, 0.0));
            _3364 = ((abs(_3177 / _3166) * cbSceneParam._m0[80u].y) * ((((_3319 - _3320) * 2.0) - ((exp2(_3185 * (isnan(0.0) ? _3309 : (isnan(_3309) ? 0.0 : max(_3309, 0.0)))) - exp2(_3185 * (isnan(0.0) ? _3310 : (isnan(_3310) ? 0.0 : max(_3310, 0.0))))) * _3308)) - ((exp2(_3187 * _3319) - exp2(_3187 * _3320)) * _3308))) + (_3180 * cbSceneParam._m0[80u].z);
        }
        vec4 _3366 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3077, _3078, 1.0), 0.0);
        float _3375 = exp2((_3364 * (-1.44269502162933349609375)) * (1.0 - _3366.w));
        float _3376 = log2(_3375);
        float _3392 = log2(_3097);
        _3189 = (exp2(_3392 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3376 * cbSceneParam._m0[78u].x)) * _3366.x) / cbSceneParam._m0[78u].x)) + _3094;
        _3191 = (exp2(_3392 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3376 * cbSceneParam._m0[78u].y)) * _3366.y) / cbSceneParam._m0[78u].y)) + _3095;
        _3193 = (exp2(_3392 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3376 * cbSceneParam._m0[78u].z)) * _3366.z) / cbSceneParam._m0[78u].z)) + _3096;
        _3195 = _3375 * _3097;
    }
    else
    {
        _3189 = _3094;
        _3191 = _3095;
        _3193 = _3096;
        _3195 = _3097;
    }
    bool _3402;
    vec4 _3205;
    vec4 _3227;
    float _3229;
    float _3233;
    float _3234;
    float _3235;
    float _3236;
    bool _3246;
    for (;;)
    {
        _3205 = cbMatDynParam._m0[0u];
        float _3207 = roundEven(_3205.y);
        bool _3208 = _3207 == 3.0;
        float _3209 = log2(_3195);
        float _3216 = exp2(_3209 * cbSceneParam._m0[78u].x) * _3066;
        float _3217 = exp2(_3209 * cbSceneParam._m0[78u].y) * _3067;
        float _3218 = exp2(_3209 * cbSceneParam._m0[78u].z) * _3068;
        float _3225 = _1204 + (-0.5);
        _3227 = cbMtdParam._m0[1u];
        _3229 = _3227.y * _3225;
        float _3232 = (_3207 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3233 = _3232 * (_3208 ? _3216 : (_3216 + (cbSceneParam._m0[72u].w * _3189)));
        _3234 = _3232 * (_3208 ? _3217 : (_3217 + (cbSceneParam._m0[72u].w * _3191)));
        _3235 = _3232 * (_3208 ? _3218 : (_3218 + (cbSceneParam._m0[72u].w * _3193)));
        _3236 = _3225 * 0.999000012874603271484375;
        _3246 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3246)
        {
            if ((cbInstanceData._m0[_295 + 7u].x + _3236) < 0.5)
            {
                _3402 = true;
                break;
            }
        }
        uint _3343 = _1253 + uint(_3205.w);
        if ((cbInstanceData._m0[_3343].w < 1.0) && ((cbInstanceData._m0[_3343].w + _3236) < 0.5))
        {
            _3402 = true;
            break;
        }
        if ((_3229 + 1.0) < _3227.x)
        {
            _3402 = true;
            break;
        }
        _3402 = false;
        break;
    }
    float _3607;
    if (_3402)
    {
        discard_state = true;
        _3607 = 0.0;
    }
    else
    {
        _3607 = cbInstanceData._m0[_3069].w;
    }
    SV_Target.x = _3233;
    SV_Target.y = _3234;
    SV_Target.z = _3235;
    SV_Target.w = _3607;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3069].w;
    discard_exit();
}


