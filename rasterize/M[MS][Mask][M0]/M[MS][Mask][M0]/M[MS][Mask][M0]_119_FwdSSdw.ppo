#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1582;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _244 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _245 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _246 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _252 = inversesqrt(dot(vec3(_244, _245, _246), vec3(_244, _245, _246)));
    float _259 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _266 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _278 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _280 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _281 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3909 = isnan(0.0) ? _278 : (isnan(_278) ? 0.0 : max(_278, 0.0));
    float _3920 = isnan(0.0) ? _280 : (isnan(_280) ? 0.0 : max(_280, 0.0));
    float _3931 = isnan(0.0) ? _281 : (isnan(_281) ? 0.0 : max(_281, 0.0));
    uint _291 = uint(roundEven(NORMAL.w)) * 13u;
    uint _296 = _291 + 1u;
    uint _300 = _291 + 2u;
    float _309 = sqrt(((cbInstanceData._m0[_296].x * cbInstanceData._m0[_296].x) + (cbInstanceData._m0[_291].x * cbInstanceData._m0[_291].x)) + (cbInstanceData._m0[_300].x * cbInstanceData._m0[_300].x));
    float _310 = _309 * TEXCOORD.z;
    float _311 = _309 * TEXCOORD.w;
    vec4 _324 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _310) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _311) + cbTextureTilingScale._m0[13u].w));
    vec4 _347 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _373 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _378 = _373.x * cbMtdParam._m0[11u].x;
    float _379 = _373.y * cbMtdParam._m0[11u].y;
    float _380 = _373.z * cbMtdParam._m0[11u].z;
    vec4 _399 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _310) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _311) + cbTextureTilingScale._m0[5u].w));
    vec4 _418 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _456 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _458 = _456.x;
    float _470 = dot(vec4(_458, _456.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _487 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _418.x) * 2.0) - ((((_458 - _470) * cbMtdParam._m0[24u].z) + _470) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3942 = isnan(0.0) ? _487 : (isnan(_487) ? 0.0 : max(_487, 0.0));
    float _488 = isnan(1.0) ? _3942 : (isnan(_3942) ? 1.0 : min(_3942, 1.0));
    float _495 = (_488 * ((_399.x * cbMtdParam._m0[12u].x) - _378)) + _378;
    float _496 = (_488 * ((_399.y * cbMtdParam._m0[12u].y) - _379)) + _379;
    float _497 = (_488 * ((_399.z * cbMtdParam._m0[12u].z) - _380)) + _380;
    vec4 _514 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _310) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _311) + cbTextureTilingScale._m0[3u].w));
    vec4 _534 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _536 = _534.x;
    float _546 = dot(vec4(_536, _534.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _560 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _418.y) * 2.0) - ((((_536 - _546) * cbMtdParam._m0[24u].z) + _546) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3953 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
    float _561 = isnan(1.0) ? _3953 : (isnan(_3953) ? 1.0 : min(_3953, 1.0));
    float _568 = (_561 * ((_514.x * cbMtdParam._m0[13u].x) - _495)) + _495;
    float _569 = (_561 * ((_514.y * cbMtdParam._m0[13u].y) - _496)) + _496;
    float _570 = (_561 * ((_514.z * cbMtdParam._m0[13u].z) - _497)) + _497;
    vec4 _588 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _310) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _311) + cbTextureTilingScale._m0[24u].w));
    vec4 _605 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _607 = _605.x;
    float _617 = dot(vec4(_607, _605.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _629 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _418.z) * 2.0) - ((((_607 - _617) * cbMtdParam._m0[24u].z) + _617) * cbMtdParam._m0[20u].z))) + 1.0;
    float _3964 = isnan(0.0) ? _629 : (isnan(_629) ? 0.0 : max(_629, 0.0));
    float _630 = isnan(1.0) ? _3964 : (isnan(_3964) ? 1.0 : min(_3964, 1.0));
    float _640 = (_347.x * cbMtdParam._m0[9u].x) * ((_630 * ((_588.x * cbMtdParam._m0[14u].x) - _568)) + _568);
    float _641 = (_347.y * cbMtdParam._m0[9u].y) * ((_630 * ((_588.y * cbMtdParam._m0[14u].y) - _569)) + _569);
    float _642 = (_347.z * cbMtdParam._m0[9u].z) * ((_630 * ((_588.z * cbMtdParam._m0[14u].z) - _570)) + _570);
    float _646 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _324.x) * _640;
    float _649 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _324.y) * _641;
    float _652 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _324.z) * _642;
    float _660 = (((_640 - _646) * (isnan(1.0) ? _3909 : (isnan(_3909) ? 1.0 : min(_3909, 1.0)))) + _646) * 4.55000019073486328125;
    float _662 = (((_641 - _649) * (isnan(1.0) ? _3920 : (isnan(_3920) ? 1.0 : min(_3920, 1.0)))) + _649) * 4.55000019073486328125;
    float _664 = (((_642 - _652) * (isnan(1.0) ? _3931 : (isnan(_3931) ? 1.0 : min(_3931, 1.0)))) + _652) * 4.55000019073486328125;
    vec4 _681 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _310) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _311) + cbTextureTilingScale._m0[20u].w));
    vec4 _704 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _310) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _311) + cbTextureTilingScale._m0[4u].w));
    vec4 _721 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _723 = _721.x;
    float _724 = _721.y;
    float _725 = _721.z;
    float _732 = ((_704.x - _723) * _488) + _723;
    float _733 = ((_704.y - _724) * _488) + _724;
    float _734 = ((_704.z - _725) * _488) + _725;
    vec4 _746 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _310) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _311) + cbTextureTilingScale._m0[2u].w));
    float _757 = ((_746.x - _732) * _561) + _732;
    float _758 = ((_746.y - _733) * _561) + _733;
    float _759 = ((_746.z - _734) * _561) + _734;
    vec4 _771 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _310) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _311) + cbTextureTilingScale._m0[23u].w));
    float _784 = ((_771.z - _759) * _630) + _759;
    float _787 = ((((_771.x - _757) * _630) + _757) * 2.0) + (-1.0);
    float _788 = ((((_771.y - _758) * _630) + _758) * 2.0) + (-1.0);
    float _789 = dot(vec2(_787, _788), vec2(_787, _788));
    float _3975 = isnan(0.0) ? _789 : (isnan(_789) ? 0.0 : max(_789, 0.0));
    float _794 = sqrt(1.0 - (isnan(1.0) ? _3975 : (isnan(_3975) ? 1.0 : min(_3975, 1.0))));
    vec4 _808 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _833 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _310) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _311) + cbTextureTilingScale._m0[11u].w));
    float _835 = _833.x;
    float _836 = 1.0 - _835;
    float _842 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _845 = ((isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : min(_842, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _854 = (_845 - ((((((_835 - _836) * cbMtdParam._m0[24u].w) + _836) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _845))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3996 = isnan(0.0) ? _854 : (isnan(_854) ? 0.0 : max(_854, 0.0));
    float _855 = isnan(1.0) ? _3996 : (isnan(_3996) ? 1.0 : min(_3996, 1.0));
    float _862 = (_855 * (cbMtdParam._m0[17u].x - _660)) + _660;
    float _863 = (_855 * (cbMtdParam._m0[17u].y - _662)) + _662;
    float _864 = (_855 * (cbMtdParam._m0[17u].z - _664)) + _664;
    float _879 = sqrt(((cbInstanceData._m0[_296].x * cbInstanceData._m0[_296].x) + (cbInstanceData._m0[_291].x * cbInstanceData._m0[_291].x)) + (cbInstanceData._m0[_300].x * cbInstanceData._m0[_300].x));
    float _880 = _879 * TEXCOORD.z;
    float _881 = _879 * TEXCOORD.w;
    vec4 _893 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _880) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _881) + cbTextureTilingScale._m0[19u].w));
    float _895 = _893.x;
    float _896 = 1.0 - _895;
    float _923 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_895 - _896) * cbMtdParam._m0[24u].y) + _896) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4007 = isnan(0.0) ? _923 : (isnan(_923) ? 0.0 : max(_923, 0.0));
    float _924 = isnan(1.0) ? _4007 : (isnan(_4007) ? 1.0 : min(_4007, 1.0));
    float _932 = ((((cbMtdParam._m0[10u].x - _862) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _924) + _862;
    float _933 = ((((cbMtdParam._m0[10u].y - _863) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _924) + _863;
    float _934 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _864)) * _924) + _864;
    float _939 = (((_681.z - _784) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _784;
    float _943 = ((_808.z - _939) * cbMtdParam._m0[19u].w) + _939;
    vec4 _957 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _310) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _311) + cbTextureTilingScale._m0[15u].w));
    float _964 = (_957.x * 2.0) + (-1.0);
    float _965 = (_957.y * 2.0) + (-1.0);
    float _966 = dot(vec2(_964, _965), vec2(_964, _965));
    float _4018 = isnan(0.0) ? _966 : (isnan(_966) ? 0.0 : max(_966, 0.0));
    float _974 = (_855 * (_957.z - _943)) + _943;
    float _977 = ((cbMtdParam._m0[23u].y - _974) * _924) + _974;
    vec4 _996 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _880) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _881) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _1002 = (_996.x * 2.0) + (-1.0);
    float _1003 = (_996.y * 2.0) + (-1.0);
    float _1004 = dot(vec2(_1002, _1003), vec2(_1002, _1003));
    float _4029 = isnan(0.0) ? _1004 : (isnan(_1004) ? 0.0 : max(_1004, 0.0));
    float _1018 = (_787 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_681.x * 2.0) + (-1.0)))) + (((_808.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _1019 = (_788 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_681.y * 2.0) + (-1.0)))) + (((_808.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _1031 = (((_964 - _1018) + (cbMtdParam._m0[21u].x * _1018)) * _855) + _1018;
    float _1032 = (((_965 - _1019) + (cbMtdParam._m0[21u].x * _1019)) * _855) + _1019;
    float _1033 = (_855 * (sqrt(1.0 - (isnan(1.0) ? _4018 : (isnan(_4018) ? 1.0 : min(_4018, 1.0)))) - _794)) + _794;
    float _1044 = (((_1002 - _1031) + (_1031 * cbMtdParam._m0[22u].z)) * _924) + _1031;
    float _1045 = (((_1003 - _1032) + (_1032 * cbMtdParam._m0[22u].z)) * _924) + _1032;
    float _1046 = ((sqrt(1.0 - (isnan(1.0) ? _4029 : (isnan(_4029) ? 1.0 : min(_4029, 1.0)))) - _1033) * _924) + _1033;
    float _1048 = cbMtdParam._m0[22u].x + _808.w;
    float _1051 = fma(_1046, _259 * NORMAL.x, fma(_1045, _266 * TANGENT.x, (_252 * _244) * _1044));
    float _1054 = fma(_1046, _259 * NORMAL.y, fma(_1045, _266 * TANGENT.y, (_252 * _245) * _1044));
    float _1057 = fma(_1046, _259 * NORMAL.z, fma(_1045, _266 * TANGENT.z, (_252 * _246) * _1044));
    float _1061 = inversesqrt(dot(vec3(_1051, _1054, _1057), vec3(_1051, _1054, _1057)));
    float _1062 = _1061 * _1051;
    float _1063 = _1061 * _1054;
    float _1064 = _1061 * _1057;
    float _4040 = isnan(0.0) ? _977 : (isnan(_977) ? 0.0 : max(_977, 0.0));
    float _1065 = isnan(1.0) ? _4040 : (isnan(_4040) ? 1.0 : min(_4040, 1.0));
    float _4051 = isnan(0.0) ? _1048 : (isnan(_1048) ? 0.0 : max(_1048, 0.0));
    float _4062 = isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0));
    float _4073 = isnan(0.0) ? _933 : (isnan(_933) ? 0.0 : max(_933, 0.0));
    float _4084 = isnan(0.0) ? _934 : (isnan(_934) ? 0.0 : max(_934, 0.0));
    float _1083 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1123 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1133 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1123);
    float _1134 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1123);
    float _1135 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1123);
    float _1139 = inversesqrt(dot(vec3(_1133, _1134, _1135), vec3(_1133, _1134, _1135)));
    float _1140 = _1133 * _1139;
    float _1141 = _1134 * _1139;
    float _1142 = _1135 * _1139;
    float _1148 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1149 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1167 = fma(_1064, cbSceneParam._m0[5u].z, fma(_1063, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1062));
    float _1170 = fma(_1064, cbSceneParam._m0[6u].z, fma(_1063, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1062));
    float _1173 = fma(_1064, cbSceneParam._m0[7u].z, fma(_1063, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1062));
    uint _1187 = (_291 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1193 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4062 : (isnan(_4062) ? 1.0 : min(_4062, 1.0)))) * cbInstanceData._m0[_1187].x;
    float _1194 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4073 : (isnan(_4073) ? 1.0 : min(_4073, 1.0)))) * cbInstanceData._m0[_1187].y;
    float _1195 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0)))) * cbInstanceData._m0[_1187].z;
    float _4095 = isnan(0.0) ? _1193 : (isnan(_1193) ? 0.0 : max(_1193, 0.0));
    float _1196 = isnan(1.0) ? _4095 : (isnan(_4095) ? 1.0 : min(_4095, 1.0));
    float _4106 = isnan(0.0) ? _1194 : (isnan(_1194) ? 0.0 : max(_1194, 0.0));
    float _1197 = isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0));
    float _4117 = isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0));
    float _1198 = isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0));
    vec4 _1207 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1148, cbSceneParam._m0[86u].y * _1149));
    float _1211 = ((isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0))) * TEXCOORD_5.w) * _1207.x;
    float _1212 = dot(vec3(_1062, _1063, _1064), vec3(_1140, _1141, _1142));
    float _1215 = _1212 * 2.0;
    float _1219 = (_1215 * _1062) - _1140;
    float _1220 = (_1215 * _1063) - _1141;
    float _1221 = (_1215 * _1064) - _1142;
    float _1225 = abs(dot(vec3(_1140, _1141, _1142), vec3(_1062, _1063, _1064)));
    float _4128 = isnan(0.0) ? _1225 : (isnan(_1225) ? 0.0 : max(_1225, 0.0));
    float _1227 = sqrt(_1065);
    float _1240 = exp2((_1227 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1227 * 3.0));
    float _1272 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1276 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1280 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1581;
    float _1583;
    float _1584;
    float _1585;
    float _1586;
    float _1587;
    float _1588;
    float _1589;
    float _1590;
    float _1591;
    float _1592;
    float _1593;
    float _1594;
    float _1595;
    float _1596;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1306 = fma(_1280, cbModelParam._m0[26u].z, fma(_1276, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1272));
        float _1310 = fma(_1280, cbModelParam._m0[27u].z, fma(_1276, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1272));
        float _1314 = fma(_1280, cbModelParam._m0[28u].z, fma(_1276, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1272));
        float _1339 = _1272 + _1062;
        float _1340 = _1276 + _1063;
        float _1341 = _1280 + _1064;
        float _1351 = fma(_1341, cbModelParam._m0[26u].z, fma(_1340, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1339)) - _1306;
        float _1352 = fma(_1341, cbModelParam._m0[27u].z, fma(_1340, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1339)) - _1310;
        float _1353 = fma(_1341, cbModelParam._m0[28u].z, fma(_1340, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1339)) - _1314;
        float _1357 = inversesqrt(dot(vec3(_1351, _1352, _1353), vec3(_1351, _1352, _1353)));
        float _1370 = ((_1357 * _1351) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1306 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1371 = ((_1357 * _1352) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1310 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1372 = ((_1357 * _1353) / cbModelParam._m0[34u].z) + ((((((_1314 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1375 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1370, _1371, _1372), 0.0);
        vec4 _1382 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1370, _1371, _1372), 0.0);
        vec4 _1389 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1370, _1371, _1372), 0.0);
        vec4 _1396 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1370, _1371, _1372), 0.0);
        float _1409 = exp2((_1375.w + (-0.5)) * 20.0) * 2.0;
        float _1410 = _1409 * (_1375.x + (-0.5));
        float _1411 = _1409 * (_1375.y + (-0.5));
        float _1412 = _1409 * (_1375.z + (-0.5));
        float _1419 = exp2((_1382.w + (-0.5)) * 20.0) * 2.0;
        float _1420 = _1419 * (_1382.x + (-0.5));
        float _1421 = _1419 * (_1382.y + (-0.5));
        float _1422 = _1419 * (_1382.z + (-0.5));
        float _1429 = exp2((_1389.w + (-0.5)) * 20.0) * 2.0;
        float _1430 = _1429 * (_1389.x + (-0.5));
        float _1431 = _1429 * (_1389.y + (-0.5));
        float _1432 = _1429 * (_1389.z + (-0.5));
        float _1439 = exp2((_1396.w + (-0.5)) * 20.0) * 2.0;
        float _1440 = _1439 * (_1396.x + (-0.5));
        float _1441 = _1439 * (_1396.y + (-0.5));
        float _1442 = _1439 * (_1396.z + (-0.5));
        float _1443 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
        float _1444 = isnan(0.0) ? _1441 : (isnan(_1441) ? 0.0 : max(_1441, 0.0));
        float _1445 = isnan(0.0) ? _1442 : (isnan(_1442) ? 0.0 : max(_1442, 0.0));
        float _1446 = _1410 * 0.5;
        float _1447 = _1420 * 0.5;
        float _1448 = _1430 * 0.5;
        float _1449 = dot(vec3(_1446, _1447, _1448), vec3(_1446, _1447, _1448));
        float _1454 = (_1449 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1449);
        float _1463 = (dot(vec3(_1062, _1063, _1064), vec3(_1454 * _1446, _1454 * _1447, _1454 * _1448)) + 1.0) * 0.5;
        float _4154 = isnan(0.0) ? _1463 : (isnan(_1463) ? 0.0 : max(_1463, 0.0));
        float _1473 = sqrt(((_1447 * _1447) + (_1446 * _1446)) + (_1448 * _1448)) / (_1443 + 9.9999997473787516355514526367188e-06);
        float _4165 = isnan(0.0) ? _1473 : (isnan(_1473) ? 0.0 : max(_1473, 0.0));
        float _1474 = isnan(1.0) ? _4165 : (isnan(_4165) ? 1.0 : min(_4165, 1.0));
        float _1475 = _1474 * 2.0;
        float _1479 = (1.0 - _1474) / (_1474 + 1.0);
        float _4176 = isnan(0.0) ? _1479 : (isnan(_1479) ? 0.0 : max(_1479, 0.0));
        float _1480 = isnan(1.0) ? _4176 : (isnan(_4176) ? 1.0 : min(_4176, 1.0));
        float _1489 = ((((1.0 - _1480) * (_1475 + 2.0)) * exp2(log2(isnan(1.0) ? _4154 : (isnan(_4154) ? 1.0 : min(_4154, 1.0))) * (_1475 + 1.0))) + _1480) * _1443;
        float _1490 = _1411 * 0.5;
        float _1491 = _1421 * 0.5;
        float _1492 = _1431 * 0.5;
        float _1493 = dot(vec3(_1490, _1491, _1492), vec3(_1490, _1491, _1492));
        float _1498 = (_1493 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1493);
        float _1506 = (dot(vec3(_1062, _1063, _1064), vec3(_1498 * _1490, _1498 * _1491, _1498 * _1492)) + 1.0) * 0.5;
        float _4187 = isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0));
        float _1515 = sqrt(((_1491 * _1491) + (_1490 * _1490)) + (_1492 * _1492)) / (_1444 + 9.9999997473787516355514526367188e-06);
        float _4198 = isnan(0.0) ? _1515 : (isnan(_1515) ? 0.0 : max(_1515, 0.0));
        float _1516 = isnan(1.0) ? _4198 : (isnan(_4198) ? 1.0 : min(_4198, 1.0));
        float _1517 = _1516 * 2.0;
        float _1521 = (1.0 - _1516) / (_1516 + 1.0);
        float _4209 = isnan(0.0) ? _1521 : (isnan(_1521) ? 0.0 : max(_1521, 0.0));
        float _1522 = isnan(1.0) ? _4209 : (isnan(_4209) ? 1.0 : min(_4209, 1.0));
        float _1531 = ((((1.0 - _1522) * (_1517 + 2.0)) * exp2(log2(isnan(1.0) ? _4187 : (isnan(_4187) ? 1.0 : min(_4187, 1.0))) * (_1517 + 1.0))) + _1522) * _1444;
        float _1532 = _1412 * 0.5;
        float _1533 = _1422 * 0.5;
        float _1534 = _1432 * 0.5;
        float _1535 = dot(vec3(_1532, _1533, _1534), vec3(_1532, _1533, _1534));
        float _1540 = (_1535 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1535);
        float _1548 = (dot(vec3(_1062, _1063, _1064), vec3(_1540 * _1532, _1540 * _1533, _1540 * _1534)) + 1.0) * 0.5;
        float _4220 = isnan(0.0) ? _1548 : (isnan(_1548) ? 0.0 : max(_1548, 0.0));
        float _1557 = sqrt(((_1533 * _1533) + (_1532 * _1532)) + (_1534 * _1534)) / (_1445 + 9.9999997473787516355514526367188e-06);
        float _4231 = isnan(0.0) ? _1557 : (isnan(_1557) ? 0.0 : max(_1557, 0.0));
        float _1558 = isnan(1.0) ? _4231 : (isnan(_4231) ? 1.0 : min(_4231, 1.0));
        float _1559 = _1558 * 2.0;
        float _1563 = (1.0 - _1558) / (_1558 + 1.0);
        float _4242 = isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0));
        float _1564 = isnan(1.0) ? _4242 : (isnan(_4242) ? 1.0 : min(_4242, 1.0));
        float _1573 = ((((1.0 - _1564) * (_1559 + 2.0)) * exp2(log2(isnan(1.0) ? _4220 : (isnan(_4220) ? 1.0 : min(_4220, 1.0))) * (_1559 + 1.0))) + _1564) * _1445;
        _1581 = _1412;
        _1583 = _1411;
        _1584 = _1410;
        _1585 = _1422;
        _1586 = _1421;
        _1587 = _1420;
        _1588 = _1432;
        _1589 = _1431;
        _1590 = _1430;
        _1591 = _1445;
        _1592 = _1444;
        _1593 = _1443;
        _1594 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1489 : (isnan(_1489) ? 0.0 : max(_1489, 0.0)));
        _1595 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1531 : (isnan(_1531) ? 0.0 : max(_1531, 0.0)));
        _1596 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1573 : (isnan(_1573) ? 0.0 : max(_1573, 0.0)));
    }
    else
    {
        _1581 = _1582;
        _1583 = _1582;
        _1584 = _1582;
        _1585 = _1582;
        _1586 = _1582;
        _1587 = _1582;
        _1588 = _1582;
        _1589 = _1582;
        _1590 = _1582;
        _1591 = _1582;
        _1592 = _1582;
        _1593 = _1582;
        _1594 = 0.0;
        _1595 = 0.0;
        _1596 = 0.0;
    }
    float _1888;
    float _1889;
    float _1890;
    float _1891;
    float _1892;
    float _1893;
    float _1894;
    float _1895;
    float _1896;
    float _1897;
    float _1898;
    float _1899;
    float _1900;
    float _1901;
    float _1902;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1619 = fma(_1280, cbModelParam._m0[30u].z, fma(_1276, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1272));
        float _1623 = fma(_1280, cbModelParam._m0[31u].z, fma(_1276, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1272));
        float _1627 = fma(_1280, cbModelParam._m0[32u].z, fma(_1276, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1272));
        float _1650 = _1272 + _1062;
        float _1651 = _1276 + _1063;
        float _1652 = _1280 + _1064;
        float _1662 = fma(_1652, cbModelParam._m0[30u].z, fma(_1651, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1650)) - _1619;
        float _1663 = fma(_1652, cbModelParam._m0[31u].z, fma(_1651, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1650)) - _1623;
        float _1664 = fma(_1652, cbModelParam._m0[32u].z, fma(_1651, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1650)) - _1627;
        float _1668 = inversesqrt(dot(vec3(_1662, _1663, _1664), vec3(_1662, _1663, _1664)));
        float _1681 = ((_1668 * _1662) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1619 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1682 = ((_1668 * _1663) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1623 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1683 = ((_1668 * _1664) / cbModelParam._m0[35u].z) + ((((((_1627 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1685 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1681, _1682, _1683), 0.0);
        vec4 _1692 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1681, _1682, _1683), 0.0);
        vec4 _1699 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1681, _1682, _1683), 0.0);
        vec4 _1706 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1681, _1682, _1683), 0.0);
        float _1718 = exp2((_1685.w + (-0.5)) * 20.0) * 2.0;
        float _1719 = _1718 * (_1685.x + (-0.5));
        float _1720 = _1718 * (_1685.y + (-0.5));
        float _1721 = _1718 * (_1685.z + (-0.5));
        float _1728 = exp2((_1692.w + (-0.5)) * 20.0) * 2.0;
        float _1729 = _1728 * (_1692.x + (-0.5));
        float _1730 = _1728 * (_1692.y + (-0.5));
        float _1731 = _1728 * (_1692.z + (-0.5));
        float _1738 = exp2((_1699.w + (-0.5)) * 20.0) * 2.0;
        float _1739 = _1738 * (_1699.x + (-0.5));
        float _1740 = _1738 * (_1699.y + (-0.5));
        float _1741 = _1738 * (_1699.z + (-0.5));
        float _1748 = exp2((_1706.w + (-0.5)) * 20.0) * 2.0;
        float _1749 = _1748 * (_1706.x + (-0.5));
        float _1750 = _1748 * (_1706.y + (-0.5));
        float _1751 = _1748 * (_1706.z + (-0.5));
        float _1752 = isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0));
        float _1753 = isnan(0.0) ? _1750 : (isnan(_1750) ? 0.0 : max(_1750, 0.0));
        float _1754 = isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0));
        float _1755 = _1719 * 0.5;
        float _1756 = _1729 * 0.5;
        float _1757 = _1739 * 0.5;
        float _1758 = dot(vec3(_1755, _1756, _1757), vec3(_1755, _1756, _1757));
        float _1763 = (_1758 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1758);
        float _1771 = (dot(vec3(_1062, _1063, _1064), vec3(_1763 * _1755, _1763 * _1756, _1763 * _1757)) + 1.0) * 0.5;
        float _4283 = isnan(0.0) ? _1771 : (isnan(_1771) ? 0.0 : max(_1771, 0.0));
        float _1780 = sqrt(((_1756 * _1756) + (_1755 * _1755)) + (_1757 * _1757)) / (_1752 + 9.9999997473787516355514526367188e-06);
        float _4294 = isnan(0.0) ? _1780 : (isnan(_1780) ? 0.0 : max(_1780, 0.0));
        float _1781 = isnan(1.0) ? _4294 : (isnan(_4294) ? 1.0 : min(_4294, 1.0));
        float _1782 = _1781 * 2.0;
        float _1786 = (1.0 - _1781) / (_1781 + 1.0);
        float _4305 = isnan(0.0) ? _1786 : (isnan(_1786) ? 0.0 : max(_1786, 0.0));
        float _1787 = isnan(1.0) ? _4305 : (isnan(_4305) ? 1.0 : min(_4305, 1.0));
        float _1796 = ((((1.0 - _1787) * (_1782 + 2.0)) * exp2(log2(isnan(1.0) ? _4283 : (isnan(_4283) ? 1.0 : min(_4283, 1.0))) * (_1782 + 1.0))) + _1787) * _1752;
        float _1797 = _1720 * 0.5;
        float _1798 = _1730 * 0.5;
        float _1799 = _1740 * 0.5;
        float _1800 = dot(vec3(_1797, _1798, _1799), vec3(_1797, _1798, _1799));
        float _1805 = (_1800 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1800);
        float _1813 = (dot(vec3(_1062, _1063, _1064), vec3(_1805 * _1797, _1805 * _1798, _1805 * _1799)) + 1.0) * 0.5;
        float _4316 = isnan(0.0) ? _1813 : (isnan(_1813) ? 0.0 : max(_1813, 0.0));
        float _1822 = sqrt(((_1798 * _1798) + (_1797 * _1797)) + (_1799 * _1799)) / (_1753 + 9.9999997473787516355514526367188e-06);
        float _4327 = isnan(0.0) ? _1822 : (isnan(_1822) ? 0.0 : max(_1822, 0.0));
        float _1823 = isnan(1.0) ? _4327 : (isnan(_4327) ? 1.0 : min(_4327, 1.0));
        float _1824 = _1823 * 2.0;
        float _1828 = (1.0 - _1823) / (_1823 + 1.0);
        float _4338 = isnan(0.0) ? _1828 : (isnan(_1828) ? 0.0 : max(_1828, 0.0));
        float _1829 = isnan(1.0) ? _4338 : (isnan(_4338) ? 1.0 : min(_4338, 1.0));
        float _1838 = ((((1.0 - _1829) * (_1824 + 2.0)) * exp2(log2(isnan(1.0) ? _4316 : (isnan(_4316) ? 1.0 : min(_4316, 1.0))) * (_1824 + 1.0))) + _1829) * _1753;
        float _1839 = _1721 * 0.5;
        float _1840 = _1731 * 0.5;
        float _1841 = _1741 * 0.5;
        float _1842 = dot(vec3(_1839, _1840, _1841), vec3(_1839, _1840, _1841));
        float _1847 = (_1842 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1842);
        float _1855 = (dot(vec3(_1062, _1063, _1064), vec3(_1847 * _1839, _1847 * _1840, _1847 * _1841)) + 1.0) * 0.5;
        float _4349 = isnan(0.0) ? _1855 : (isnan(_1855) ? 0.0 : max(_1855, 0.0));
        float _1864 = sqrt(((_1840 * _1840) + (_1839 * _1839)) + (_1841 * _1841)) / (_1754 + 9.9999997473787516355514526367188e-06);
        float _4360 = isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0));
        float _1865 = isnan(1.0) ? _4360 : (isnan(_4360) ? 1.0 : min(_4360, 1.0));
        float _1866 = _1865 * 2.0;
        float _1870 = (1.0 - _1865) / (_1865 + 1.0);
        float _4371 = isnan(0.0) ? _1870 : (isnan(_1870) ? 0.0 : max(_1870, 0.0));
        float _1871 = isnan(1.0) ? _4371 : (isnan(_4371) ? 1.0 : min(_4371, 1.0));
        float _1880 = ((((1.0 - _1871) * (_1866 + 2.0)) * exp2(log2(isnan(1.0) ? _4349 : (isnan(_4349) ? 1.0 : min(_4349, 1.0))) * (_1866 + 1.0))) + _1871) * _1754;
        _1888 = _1721;
        _1889 = _1720;
        _1890 = _1719;
        _1891 = _1731;
        _1892 = _1730;
        _1893 = _1729;
        _1894 = _1741;
        _1895 = _1740;
        _1896 = _1739;
        _1897 = _1754;
        _1898 = _1753;
        _1899 = _1752;
        _1900 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1796 : (isnan(_1796) ? 0.0 : max(_1796, 0.0)));
        _1901 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1838 : (isnan(_1838) ? 0.0 : max(_1838, 0.0)));
        _1902 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1880 : (isnan(_1880) ? 0.0 : max(_1880, 0.0)));
    }
    else
    {
        _1888 = _1582;
        _1889 = _1582;
        _1890 = _1582;
        _1891 = _1582;
        _1892 = _1582;
        _1893 = _1582;
        _1894 = _1582;
        _1895 = _1582;
        _1896 = _1582;
        _1897 = _1582;
        _1898 = _1582;
        _1899 = _1582;
        _1900 = 0.0;
        _1901 = 0.0;
        _1902 = 0.0;
    }
    float _1912 = (cbModelParam._m0[1u].x * (_1900 - _1594)) + _1594;
    float _1913 = (cbModelParam._m0[1u].x * (_1901 - _1595)) + _1595;
    float _1914 = (cbModelParam._m0[1u].x * (_1902 - _1596)) + _1596;
    float _1935 = fma(_1914, cbSceneParam._m0[89u].z, fma(_1913, cbSceneParam._m0[89u].y, _1912 * cbSceneParam._m0[89u].x));
    float _1938 = fma(_1914, cbSceneParam._m0[90u].z, fma(_1913, cbSceneParam._m0[90u].y, _1912 * cbSceneParam._m0[90u].x));
    float _1941 = fma(_1914, cbSceneParam._m0[91u].z, fma(_1913, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1912));
    float _1956 = _1219 * 0.5;
    float _1957 = _1220 * 0.5;
    float _1958 = _1221 * 0.5;
    float _1959 = dot(vec4(_1956, _1957, _1958, 1.0), vec4(_1890, _1893, _1896, _1899));
    float _1962 = dot(vec4(_1956, _1957, _1958, 1.0), vec4(_1889, _1892, _1895, _1898));
    float _1965 = dot(vec4(_1956, _1957, _1958, 1.0), vec4(_1888, _1891, _1894, _1897));
    float _1999;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1972 = dot(vec4(_1956, _1957, _1958, 1.0), vec4(_1581, _1585, _1588, _1591));
        float _1976 = dot(vec4(_1956, _1957, _1958, 1.0), vec4(_1583, _1586, _1589, _1592));
        float _1980 = dot(vec4(_1956, _1957, _1958, 1.0), vec4(_1584, _1587, _1590, _1593));
        float _1987 = dot(vec4(cbModelParam._m0[39u]), vec4(_1956, _1957, _1958, 1.0));
        _1999 = dot(vec3(isnan(0.0) ? _1980 : (isnan(_1980) ? 0.0 : max(_1980, 0.0)), isnan(0.0) ? _1976 : (isnan(_1976) ? 0.0 : max(_1976, 0.0)), isnan(0.0) ? _1972 : (isnan(_1972) ? 0.0 : max(_1972, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1987) ? 0.0 : (isnan(0.0) ? _1987 : max(0.0, _1987))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1999 = 1.0;
    }
    float _2010;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2001 = dot(vec4(cbModelParam._m0[40u]), vec4(_1956, _1957, _1958, 1.0));
        _2010 = dot(vec3(isnan(0.0) ? _1959 : (isnan(_1959) ? 0.0 : max(_1959, 0.0)), isnan(0.0) ? _1962 : (isnan(_1962) ? 0.0 : max(_1962, 0.0)), isnan(0.0) ? _1965 : (isnan(_1965) ? 0.0 : max(_1965, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2001) ? 0.0 : (isnan(0.0) ? _2001 : max(0.0, _2001))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2010 = 1.0;
    }
    float _2014 = (_2010 * cbModelParam._m0[1u].x) + (_1999 * (1.0 - cbModelParam._m0[1u].x));
    float _2024 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1065);
    float _2025 = isnan(_2024) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2024 : min(cbModelParam._m0[25u].z, _2024));
    float _2105;
    float _2107;
    float _2109;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2072 = fma(_1280, cbModelParam._m0[13u].z, fma(_1276, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1272)) + cbModelParam._m0[13u].w;
        float _2076 = fma(_1280, cbModelParam._m0[14u].z, fma(_1276, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1272)) + cbModelParam._m0[14u].w;
        float _2080 = fma(_1280, cbModelParam._m0[15u].z, fma(_1276, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1272)) + cbModelParam._m0[15u].w;
        float _2083 = fma(_1221, cbModelParam._m0[13u].z, fma(_1220, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1219));
        float _2086 = fma(_1221, cbModelParam._m0[14u].z, fma(_1220, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1219));
        float _2089 = fma(_1221, cbModelParam._m0[15u].z, fma(_1220, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1219));
        float _2117;
        if (_2083 > 0.0)
        {
            _2117 = abs((1.0 - _2072) / _2083);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2083 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2072 + 1.0) / _2083);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2117 = frontier_phi_14_12_ladder;
        }
        float _2339;
        if (_2086 > 0.0)
        {
            _2339 = abs((1.0 - _2076) / _2086);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2086 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2076 + 1.0) / _2086);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2339 = frontier_phi_23_19_ladder;
        }
        float _2585;
        if (_2089 > 0.0)
        {
            _2585 = abs((1.0 - _2080) / _2089);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2089 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2080 + 1.0) / _2089);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2585 = frontier_phi_35_30_ladder;
        }
        float _2587 = isnan(_2339) ? _2117 : (isnan(_2117) ? _2339 : min(_2117, _2339));
        float _2588 = isnan(_2585) ? _2587 : (isnan(_2587) ? _2585 : min(_2587, _2585));
        float _2592 = (_2588 * _2083) + _2072;
        float _2593 = (_2588 * _2086) + _2076;
        float _2594 = (_2588 * _2089) + _2080;
        float _2595 = _2588 * 9.9999997473787516355514526367188e-05;
        float _2597 = (-1.0) - _2595;
        float _2599 = _2595 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2594 > _2599) || ((_2594 < _2597) || ((_2593 > _2599) || ((_2593 < _2597) || ((_2592 < _2597) || (_2592 > _2599))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2718 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2594, cbModelParam._m0[9u].z, fma(_2593, cbModelParam._m0[9u].y, _2592 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2594, cbModelParam._m0[10u].z, fma(_2593, cbModelParam._m0[10u].y, _2592 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2594, cbModelParam._m0[11u].z, fma(_2593, cbModelParam._m0[11u].y, _2592 * cbModelParam._m0[11u].x))), _2025);
            frontier_phi_13_35_ladder = _2718.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2718.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2718.x * cbModelParam._m0[1u].y;
        }
        _2105 = frontier_phi_13_35_ladder_2;
        _2107 = frontier_phi_13_35_ladder_1;
        _2109 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2093 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1219, _1220, _1221), _2025);
        _2105 = _2093.x * cbModelParam._m0[1u].y;
        _2107 = _2093.y * cbModelParam._m0[1u].y;
        _2109 = _2093.z * cbModelParam._m0[1u].y;
    }
    float _2113 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1065);
    float _2114 = isnan(_2113) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2113 : min(cbModelParam._m0[25u].w, _2113));
    float _2204;
    float _2206;
    float _2208;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2168 = fma(_1280, cbModelParam._m0[21u].z, fma(_1276, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1272)) + cbModelParam._m0[21u].w;
        float _2172 = fma(_1280, cbModelParam._m0[22u].z, fma(_1276, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1272)) + cbModelParam._m0[22u].w;
        float _2176 = fma(_1280, cbModelParam._m0[23u].z, fma(_1276, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1272)) + cbModelParam._m0[23u].w;
        float _2179 = fma(_1221, cbModelParam._m0[21u].z, fma(_1220, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1219));
        float _2182 = fma(_1221, cbModelParam._m0[22u].z, fma(_1220, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1219));
        float _2185 = fma(_1221, cbModelParam._m0[23u].z, fma(_1220, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1219));
        float _2344;
        if (_2179 > 0.0)
        {
            _2344 = abs((1.0 - _2168) / _2179);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2179 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2168 + 1.0) / _2179);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2344 = frontier_phi_25_21_ladder;
        }
        float _2612;
        if (_2182 > 0.0)
        {
            _2612 = abs((1.0 - _2172) / _2182);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2182 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2172 + 1.0) / _2182);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2612 = frontier_phi_37_32_ladder;
        }
        float _2817;
        if (_2185 > 0.0)
        {
            _2817 = abs((1.0 - _2176) / _2185);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2185 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2176 + 1.0) / _2185);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2817 = frontier_phi_46_43_ladder;
        }
        float _2819 = isnan(_2612) ? _2344 : (isnan(_2344) ? _2612 : min(_2344, _2612));
        float _2820 = isnan(_2817) ? _2819 : (isnan(_2819) ? _2817 : min(_2819, _2817));
        float _2824 = (_2820 * _2179) + _2168;
        float _2825 = (_2820 * _2182) + _2172;
        float _2826 = (_2820 * _2185) + _2176;
        float _2827 = _2820 * 9.9999997473787516355514526367188e-05;
        float _2828 = (-1.0) - _2827;
        float _2830 = _2827 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2826 > _2830) || ((_2826 < _2828) || ((_2825 > _2830) || ((_2825 < _2828) || ((_2824 < _2828) || (_2824 > _2830))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3025 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2826, cbModelParam._m0[17u].z, fma(_2825, cbModelParam._m0[17u].y, _2824 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2826, cbModelParam._m0[18u].z, fma(_2825, cbModelParam._m0[18u].y, _2824 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2826, cbModelParam._m0[19u].z, fma(_2825, cbModelParam._m0[19u].y, _2824 * cbModelParam._m0[19u].x))), _2114);
            frontier_phi_22_46_ladder = _3025.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _3025.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _3025.x * cbModelParam._m0[1u].z;
        }
        _2204 = frontier_phi_22_46_ladder_2;
        _2206 = frontier_phi_22_46_ladder_1;
        _2208 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2188 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1219, _1220, _1221), _2114);
        _2204 = _2188.x * cbModelParam._m0[1u].z;
        _2206 = _2188.y * cbModelParam._m0[1u].z;
        _2208 = _2188.z * cbModelParam._m0[1u].z;
    }
    float _2220 = ((((1.0 - _1240) * ((_1227 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1240 * _1227)) * _1211;
    float _2221 = _2220 * ((cbModelParam._m0[1u].w * (_2204 - _2105)) + _2105);
    float _2222 = _2220 * ((cbModelParam._m0[1u].w * (_2206 - _2107)) + _2107);
    float _2223 = _2220 * ((cbModelParam._m0[1u].w * (_2208 - _2109)) + _2109);
    float _2226 = fma(_2223, cbSceneParam._m0[89u].z, fma(_2222, cbSceneParam._m0[89u].y, _2221 * cbSceneParam._m0[89u].x));
    float _2229 = fma(_2223, cbSceneParam._m0[90u].z, fma(_2222, cbSceneParam._m0[90u].y, _2221 * cbSceneParam._m0[90u].x));
    float _2232 = fma(_2223, cbSceneParam._m0[91u].z, fma(_2222, cbSceneParam._m0[91u].y, _2221 * cbSceneParam._m0[91u].x));
    vec4 _2240 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1148, _1149));
    float _2242 = _2240.w;
    float _2254 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2242);
    float _2255 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2242);
    float _2256 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2242);
    uvec4 _2260 = floatBitsToUint(cbInstanceData._m0[_291 + 5u]);
    uint _2262 = _2260.x * 14u;
    uint _2263 = _2262 + 13u;
    float _2270 = _1211 + (-1.0);
    float _2275 = (cbLight._m0[_2263].x * _2270) + 1.0;
    float _2276 = (cbLight._m0[_2263].y * _2270) + 1.0;
    float _2277 = (cbLight._m0[_2263].z * _2270) + 1.0;
    float _2278 = (cbLight._m0[_2263].w * _2270) + 1.0;
    uint _2279 = _2262 + 5u;
    float _2285 = isnan(1.0) ? _2276 : (isnan(_2276) ? 1.0 : min(_2276, 1.0));
    uint _2289 = _2262 + 4u;
    float _2298 = isnan(1.0) ? _2275 : (isnan(_2275) ? 1.0 : min(_2275, 1.0));
    uint _2302 = _2262 | 1u;
    float _2313 = dot(vec3(cbLight._m0[_2262].xyz), vec3(_1062, _1063, _1064));
    float _2316 = dot(vec3(cbLight._m0[_2302].xyz), vec3(_1062, _1063, _1064));
    float _4507 = isnan(0.0) ? _2313 : (isnan(_2313) ? 0.0 : max(_2313, 0.0));
    float _4518 = isnan(0.0) ? _2316 : (isnan(_2316) ? 0.0 : max(_2316, 0.0));
    float _2321 = (isnan(1.0) ? _4507 : (isnan(_4507) ? 1.0 : min(_4507, 1.0))) * 0.3183098733425140380859375;
    float _2323 = (isnan(1.0) ? _4518 : (isnan(_4518) ? 1.0 : min(_4518, 1.0))) * 0.3183098733425140380859375;
    float _2330 = ((cbLight._m0[_2279].x * _2285) * _2323) + (((cbLight._m0[_2289].x * _2254) * _2298) * _2321);
    float _2331 = ((_2285 * cbLight._m0[_2279].y) * _2323) + (((cbLight._m0[_2289].y * _2255) * _2298) * _2321);
    float _2332 = ((_2285 * cbLight._m0[_2279].z) * _2323) + (((cbLight._m0[_2289].z * _2256) * _2298) * _2321);
    uvec4 _2336 = floatBitsToUint(cbLight._m0[_2262 + 12u]);
    bool _2338 = _2336.x == 0u;
    float _2349;
    float _2351;
    float _2353;
    if (_2338)
    {
        _2349 = _2330;
        _2351 = _2331;
        _2353 = _2332;
    }
    else
    {
        uint _2357 = _2262 + 6u;
        float _2373 = (dot(vec3(cbLight._m0[_2262 + 2u].xyz), vec3(_1062, _1063, _1064)) * 0.5) + 0.5;
        float _2374 = _2373 * _2373;
        float _4529 = isnan(0.0) ? _2374 : (isnan(_2374) ? 0.0 : max(_2374, 0.0));
        float _2375 = isnan(1.0) ? _4529 : (isnan(_4529) ? 1.0 : min(_4529, 1.0));
        float _2376 = isnan(1.0) ? _2277 : (isnan(_2277) ? 1.0 : min(_2277, 1.0));
        _2349 = (((cbLight._m0[_2357].x * 0.3183098733425140380859375) * _2375) * _2376) + _2330;
        _2351 = (((cbLight._m0[_2357].y * 0.3183098733425140380859375) * _2375) * _2376) + _2331;
        _2353 = (((cbLight._m0[_2357].z * 0.3183098733425140380859375) * _2375) * _2376) + _2332;
    }
    bool _2356 = _2336.y == 0u;
    float _2394;
    float _2396;
    float _2398;
    if (_2356)
    {
        _2394 = _2349;
        _2396 = _2351;
        _2398 = _2353;
    }
    else
    {
        uint _2556 = _2262 + 7u;
        float _2572 = (dot(vec3(cbLight._m0[_2262 + 3u].xyz), vec3(_1062, _1063, _1064)) * 0.5) + 0.5;
        float _2573 = _2572 * _2572;
        float _4545 = isnan(0.0) ? _2573 : (isnan(_2573) ? 0.0 : max(_2573, 0.0));
        float _2574 = isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0));
        float _2575 = isnan(1.0) ? _2278 : (isnan(_2278) ? 1.0 : min(_2278, 1.0));
        _2394 = (((cbLight._m0[_2556].x * 0.3183098733425140380859375) * _2574) * _2575) + _2349;
        _2396 = (((cbLight._m0[_2556].y * 0.3183098733425140380859375) * _2574) * _2575) + _2351;
        _2398 = (((cbLight._m0[_2556].z * 0.3183098733425140380859375) * _2574) * _2575) + _2353;
    }
    uint _2401 = _2262 + 8u;
    float _2414 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2262].w)) * _1065) * 0.949999988079071044921875);
    float _2415 = _2414 * _2414;
    float _2416 = cbLight._m0[_2262].x + _1140;
    float _2417 = cbLight._m0[_2262].y + _1141;
    float _2418 = cbLight._m0[_2262].z + _1142;
    float _2422 = inversesqrt(dot(vec3(_2416, _2417, _2418), vec3(_2416, _2417, _2418)));
    float _2423 = _2422 * _2416;
    float _2424 = _2422 * _2417;
    float _2425 = _2422 * _2418;
    float _2426 = dot(vec3(_1062, _1063, _1064), vec3(cbLight._m0[_2262].xyz));
    float _4561 = isnan(0.0) ? _2426 : (isnan(_2426) ? 0.0 : max(_2426, 0.0));
    float _2429 = isnan(1.0) ? _4561 : (isnan(_4561) ? 1.0 : min(_4561, 1.0));
    float _4572 = isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0));
    float _2430 = isnan(1.0) ? _4572 : (isnan(_4572) ? 1.0 : min(_4572, 1.0));
    float _2431 = dot(vec3(_1062, _1063, _1064), vec3(_2423, _2424, _2425));
    float _4583 = isnan(0.0) ? _2431 : (isnan(_2431) ? 0.0 : max(_2431, 0.0));
    float _2434 = isnan(1.0) ? _4583 : (isnan(_4583) ? 1.0 : min(_4583, 1.0));
    float _2435 = dot(vec3(cbLight._m0[_2262].xyz), vec3(_2423, _2424, _2425));
    float _4594 = isnan(0.0) ? _2435 : (isnan(_2435) ? 0.0 : max(_2435, 0.0));
    float _2439 = _2415 * _2415;
    float _2443 = ((_2434 * _2434) * (_2439 + (-1.0))) + 1.0;
    float _2454 = (exp2(log2(1.0 - (isnan(1.0) ? _4594 : (isnan(_4594) ? 1.0 : min(_4594, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2455 = 1.0 - _2415;
    float _2466 = (0.5 / (((_2430 * ((_2429 * _2455) + _2415)) + 9.9999999392252902907785028219223e-09) + (((_2430 * _2455) + _2415) * _2429))) * _2429;
    float _4605 = isnan(0.0) ? _2466 : (isnan(_2466) ? 0.0 : max(_2466, 0.0));
    float _2468 = (isnan(1.0) ? _4605 : (isnan(_4605) ? 1.0 : min(_4605, 1.0))) * (_2439 / ((_2443 * _2443) * 3.141590118408203125));
    uint _2482 = _2262 + 9u;
    float _2493 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2302].w)) * _1065) * 0.949999988079071044921875);
    float _2494 = _2493 * _2493;
    float _2495 = cbLight._m0[_2302].x + _1140;
    float _2496 = cbLight._m0[_2302].y + _1141;
    float _2497 = cbLight._m0[_2302].z + _1142;
    float _2501 = inversesqrt(dot(vec3(_2495, _2496, _2497), vec3(_2495, _2496, _2497)));
    float _2502 = _2501 * _2495;
    float _2503 = _2501 * _2496;
    float _2504 = _2501 * _2497;
    float _2505 = dot(vec3(_1062, _1063, _1064), vec3(cbLight._m0[_2302].xyz));
    float _4616 = isnan(0.0) ? _2505 : (isnan(_2505) ? 0.0 : max(_2505, 0.0));
    float _2508 = isnan(1.0) ? _4616 : (isnan(_4616) ? 1.0 : min(_4616, 1.0));
    float _2509 = dot(vec3(_1062, _1063, _1064), vec3(_2502, _2503, _2504));
    float _4627 = isnan(0.0) ? _2509 : (isnan(_2509) ? 0.0 : max(_2509, 0.0));
    float _2512 = isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0));
    float _2513 = dot(vec3(cbLight._m0[_2302].xyz), vec3(_2502, _2503, _2504));
    float _4638 = isnan(0.0) ? _2513 : (isnan(_2513) ? 0.0 : max(_2513, 0.0));
    float _2517 = _2494 * _2494;
    float _2521 = ((_2512 * _2512) * (_2517 + (-1.0))) + 1.0;
    float _2530 = (exp2(log2(1.0 - (isnan(1.0) ? _4638 : (isnan(_4638) ? 1.0 : min(_4638, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2531 = 1.0 - _2494;
    float _2541 = (0.5 / (((_2430 * ((_2508 * _2531) + _2494)) + 9.9999999392252902907785028219223e-09) + (((_2430 * _2531) + _2494) * _2508))) * _2508;
    float _4649 = isnan(0.0) ? _2541 : (isnan(_2541) ? 0.0 : max(_2541, 0.0));
    float _2543 = (isnan(1.0) ? _4649 : (isnan(_4649) ? 1.0 : min(_4649, 1.0))) * (_2517 / ((_2521 * _2521) * 3.141590118408203125));
    float _2553 = (((_2530 * cbLight._m0[_2482].x) * _2543) * _2285) + ((((cbLight._m0[_2401].x * _2254) * _2454) * _2468) * _2298);
    float _2554 = (((_2530 * cbLight._m0[_2482].y) * _2543) * _2285) + ((((cbLight._m0[_2401].y * _2255) * _2454) * _2468) * _2298);
    float _2555 = (((_2530 * cbLight._m0[_2482].z) * _2543) * _2285) + ((((cbLight._m0[_2401].z * _2256) * _2454) * _2468) * _2298);
    float _2617;
    float _2619;
    float _2621;
    if (_2338)
    {
        _2617 = _2553;
        _2619 = _2554;
        _2621 = _2555;
    }
    else
    {
        uint _2623 = _2262 + 2u;
        uint _2627 = _2262 + 10u;
        float _2641 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2623].w)) * _1065) * 0.949999988079071044921875);
        float _2642 = _2641 * _2641;
        float _2643 = cbLight._m0[_2623].x + _1140;
        float _2644 = cbLight._m0[_2623].y + _1141;
        float _2645 = cbLight._m0[_2623].z + _1142;
        float _2649 = inversesqrt(dot(vec3(_2643, _2644, _2645), vec3(_2643, _2644, _2645)));
        float _2650 = _2649 * _2643;
        float _2651 = _2649 * _2644;
        float _2652 = _2649 * _2645;
        float _2653 = dot(vec3(_1062, _1063, _1064), vec3(cbLight._m0[_2623].xyz));
        float _4660 = isnan(0.0) ? _2653 : (isnan(_2653) ? 0.0 : max(_2653, 0.0));
        float _2656 = isnan(1.0) ? _4660 : (isnan(_4660) ? 1.0 : min(_4660, 1.0));
        float _2657 = dot(vec3(_1062, _1063, _1064), vec3(_2650, _2651, _2652));
        float _4671 = isnan(0.0) ? _2657 : (isnan(_2657) ? 0.0 : max(_2657, 0.0));
        float _2660 = isnan(1.0) ? _4671 : (isnan(_4671) ? 1.0 : min(_4671, 1.0));
        float _2661 = dot(vec3(cbLight._m0[_2623].xyz), vec3(_2650, _2651, _2652));
        float _4682 = isnan(0.0) ? _2661 : (isnan(_2661) ? 0.0 : max(_2661, 0.0));
        float _2665 = _2642 * _2642;
        float _2669 = ((_2660 * _2660) * (_2665 + (-1.0))) + 1.0;
        float _2678 = (exp2(log2(1.0 - (isnan(1.0) ? _4682 : (isnan(_4682) ? 1.0 : min(_4682, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2679 = 1.0 - _2642;
        float _2689 = (0.5 / (((_2430 * ((_2656 * _2679) + _2642)) + 9.9999999392252902907785028219223e-09) + (((_2430 * _2679) + _2642) * _2656))) * _2656;
        float _4693 = isnan(0.0) ? _2689 : (isnan(_2689) ? 0.0 : max(_2689, 0.0));
        float _2691 = (isnan(1.0) ? _4693 : (isnan(_4693) ? 1.0 : min(_4693, 1.0))) * (_2665 / ((_2669 * _2669) * 3.141590118408203125));
        float _2692 = isnan(1.0) ? _2277 : (isnan(_2277) ? 1.0 : min(_2277, 1.0));
        _2617 = (((_2678 * cbLight._m0[_2627].x) * _2691) * _2692) + _2553;
        _2619 = (((_2678 * cbLight._m0[_2627].y) * _2691) * _2692) + _2554;
        _2621 = (((_2678 * cbLight._m0[_2627].z) * _2691) * _2692) + _2555;
    }
    float _2727;
    float _2729;
    float _2731;
    if (_2356)
    {
        _2727 = _2617;
        _2729 = _2619;
        _2731 = _2621;
    }
    else
    {
        uint _2738 = _2262 + 3u;
        uint _2742 = _2262 + 11u;
        float _2756 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2738].w)) * _1065) * 0.949999988079071044921875);
        float _2757 = _2756 * _2756;
        float _2758 = cbLight._m0[_2738].x + _1140;
        float _2759 = cbLight._m0[_2738].y + _1141;
        float _2760 = cbLight._m0[_2738].z + _1142;
        float _2764 = inversesqrt(dot(vec3(_2758, _2759, _2760), vec3(_2758, _2759, _2760)));
        float _2765 = _2764 * _2758;
        float _2766 = _2764 * _2759;
        float _2767 = _2764 * _2760;
        float _2768 = dot(vec3(_1062, _1063, _1064), vec3(cbLight._m0[_2738].xyz));
        float _4709 = isnan(0.0) ? _2768 : (isnan(_2768) ? 0.0 : max(_2768, 0.0));
        float _2771 = isnan(1.0) ? _4709 : (isnan(_4709) ? 1.0 : min(_4709, 1.0));
        float _2772 = dot(vec3(_1062, _1063, _1064), vec3(_2765, _2766, _2767));
        float _4720 = isnan(0.0) ? _2772 : (isnan(_2772) ? 0.0 : max(_2772, 0.0));
        float _2775 = isnan(1.0) ? _4720 : (isnan(_4720) ? 1.0 : min(_4720, 1.0));
        float _2776 = dot(vec3(cbLight._m0[_2738].xyz), vec3(_2765, _2766, _2767));
        float _4731 = isnan(0.0) ? _2776 : (isnan(_2776) ? 0.0 : max(_2776, 0.0));
        float _2780 = _2757 * _2757;
        float _2784 = ((_2775 * _2775) * (_2780 + (-1.0))) + 1.0;
        float _2793 = (exp2(log2(1.0 - (isnan(1.0) ? _4731 : (isnan(_4731) ? 1.0 : min(_4731, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2794 = 1.0 - _2757;
        float _2804 = (0.5 / (((_2430 * ((_2771 * _2794) + _2757)) + 9.9999999392252902907785028219223e-09) + (((_2430 * _2794) + _2757) * _2771))) * _2771;
        float _4742 = isnan(0.0) ? _2804 : (isnan(_2804) ? 0.0 : max(_2804, 0.0));
        float _2806 = (isnan(1.0) ? _4742 : (isnan(_4742) ? 1.0 : min(_4742, 1.0))) * (_2780 / ((_2784 * _2784) * 3.141590118408203125));
        float _2807 = isnan(1.0) ? _2278 : (isnan(_2278) ? 1.0 : min(_2278, 1.0));
        _2727 = (((_2793 * cbLight._m0[_2742].x) * _2806) * _2807) + _2617;
        _2729 = (((_2793 * cbLight._m0[_2742].y) * _2806) * _2807) + _2619;
        _2731 = (((_2793 * cbLight._m0[_2742].z) * _2806) * _2807) + _2621;
    }
    float _2942;
    float _2944;
    float _2946;
    float _2948;
    float _2950;
    float _2952;
    if (_2260.y == 0u)
    {
        float _2882 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2883 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2882;
        float _2884 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2882;
        float _2885 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2882;
        uvec4 _2897 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2898 = _2897.x;
        uint _2909 = uint((float(_2897.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1149) / _2898))) + floor(float(uint(cbSceneParam._m0[85u].x * _1148) / _2898)));
        float _2919 = (log2(_2885 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2920 = isnan(0.0) ? _2919 : (isnan(_2919) ? 0.0 : max(_2919, 0.0));
        uint _2923 = uint(isnan(14.0) ? _2920 : (isnan(_2920) ? 14.0 : min(_2920, 14.0)));
        uvec4 _2928 = texelFetch(g_lightClusterGridBuffer, int(((_2923 << 2u) + (_2909 << 6u)) >> 2u));
        uint _2929 = _2928.x;
        uint _2930 = _2897.z;
        float _3030;
        float _3032;
        float _3034;
        float _3036;
        float _3038;
        float _3040;
        if (((((1u << ((_2930 >> 4u) & 15u)) + 4294967295u) & _2929) == 0u) || ((_2930 & 240u) == 0u))
        {
            _3030 = 0.0;
            _3032 = 0.0;
            _3034 = 0.0;
            _3036 = 0.0;
            _3038 = 0.0;
            _3040 = 0.0;
        }
        else
        {
            float _3031;
            float _3033;
            float _3035;
            float _3037;
            float _3039;
            float _3041;
            float _3175 = 0.0;
            float _3176 = 0.0;
            float _3177 = 0.0;
            float _3178 = 0.0;
            float _3179 = 0.0;
            float _3180 = 0.0;
            uint _3181 = 0u;
            uint _3190;
            bool _3191;
            for (;;)
            {
                _3190 = texelFetch(g_lightClassification, int((((_2923 << 5u) + (_2909 << 9u)) + (_3181 << 2u)) >> 2u)).x;
                _3191 = _3190 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3191)
                {
                    frontier_phi_61_pred = _3175;
                    frontier_phi_61_pred_1 = _3180;
                    frontier_phi_61_pred_2 = _3179;
                    frontier_phi_61_pred_3 = _3178;
                    frontier_phi_61_pred_4 = _3177;
                    frontier_phi_61_pred_5 = _3176;
                }
                else
                {
                    float _3299;
                    float _3300;
                    float _3301;
                    float _3302;
                    float _3303;
                    float _3304;
                    uint _3305;
                    _3299 = _3175;
                    _3300 = _3176;
                    _3301 = _3177;
                    _3302 = _3178;
                    _3303 = _3179;
                    _3304 = _3180;
                    _3305 = _3190;
                    float _3231;
                    float _3232;
                    float _3233;
                    float _3234;
                    float _3235;
                    float _3236;
                    for (;;)
                    {
                        uint _3309 = uint(findLSB(_3305)) + (_3181 << 5u);
                        uint _3306 = (_3305 + 4294967295u) & _3305;
                        uint _3311 = _3309 * 48u;
                        vec4 _3325 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3311)).x, texelFetch(g_PointLightRenderingBuffer, int(_3311 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3311 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3311 + 3u)).x));
                        uint _3331 = (_3309 * 48u) + 4u;
                        vec4 _3344 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3331)).x, texelFetch(g_PointLightRenderingBuffer, int(_3331 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3331 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3331 + 3u)).x));
                        uint _3350 = (_3309 * 48u) + 8u;
                        vec3 _3361 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3350)).x, texelFetch(g_PointLightRenderingBuffer, int(_3350 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3350 + 2u)).x));
                        float _3365 = _3325.x - _2883;
                        float _3366 = _3325.y - _2884;
                        float _3367 = _3325.z - _2885;
                        float _3368 = dot(vec3(_3365, _3366, _3367), vec3(_3365, _3366, _3367));
                        float _3371 = inversesqrt(_3368);
                        float _3372 = _3371 * _3365;
                        float _3373 = _3371 * _3366;
                        float _3374 = _3371 * _3367;
                        float _3375 = dot(vec3(_1167, _1170, _1173), vec3(_3372, _3373, _3374));
                        float _3380 = 1.0 - (_3368 * _3325.w);
                        float _4768 = isnan(0.0) ? _3380 : (isnan(_3380) ? 0.0 : max(_3380, 0.0));
                        float _3381 = isnan(1.0) ? _4768 : (isnan(_4768) ? 1.0 : min(_4768, 1.0));
                        float _3382 = sqrt(_3368) * _3344.w;
                        float _3385 = 1.39999997615814208984375 / (_3382 + 1.39999997615814208984375);
                        float _3386 = _3385 * _3385;
                        float _3389 = ((1.0 - _3386) * _3375) + _3386;
                        float _3392 = _3382 * _3382;
                        float _3396 = ((isnan(0.0) ? _3389 : (isnan(_3389) ? 0.0 : max(_3389, 0.0))) * _3381) / ((_3392 * 0.699999988079071044921875) + 1.0);
                        float _3400 = (-0.0) - _2883;
                        float _3401 = (-0.0) - _2884;
                        float _3402 = (-0.0) - _2885;
                        float _3406 = inversesqrt(dot(vec3(_3400, _3401, _3402), vec3(_3400, _3401, _3402)));
                        float _3407 = _3406 * _3400;
                        float _3408 = _3406 * _3401;
                        float _3409 = _3406 * _3402;
                        float _3417 = exp2(log2(1.0 / ((_3392 * 3.5) + 5.0)) * 0.25);
                        float _3418 = 1.0 - _1227;
                        float _3425 = sqrt(1.0 - ((1.0 - (_3418 * _3418)) * (1.0 - (_3417 * _3417))));
                        float _3426 = _3425 * _3425;
                        float _3427 = _3426 * _3426;
                        float _3428 = _3407 + _3372;
                        float _3429 = _3408 + _3373;
                        float _3430 = _3409 + _3374;
                        float _3434 = inversesqrt(dot(vec3(_3428, _3429, _3430), vec3(_3428, _3429, _3430)));
                        float _3438 = dot(vec3(_1167, _1170, _1173), vec3(_3407, _3408, _3409));
                        float _4784 = isnan(0.0) ? _3438 : (isnan(_3438) ? 0.0 : max(_3438, 0.0));
                        float _3441 = isnan(1.0) ? _4784 : (isnan(_4784) ? 1.0 : min(_4784, 1.0));
                        float _3442 = dot(vec3(_1167, _1170, _1173), vec3(_3434 * _3428, _3434 * _3429, _3434 * _3430));
                        float _4795 = isnan(0.0) ? _3442 : (isnan(_3442) ? 0.0 : max(_3442, 0.0));
                        float _3445 = isnan(1.0) ? _4795 : (isnan(_4795) ? 1.0 : min(_4795, 1.0));
                        float _3449 = ((_3445 * _3445) * (_3427 + (-1.0))) + 1.0;
                        float _3450 = _3385 * _3426;
                        float _3451 = _3450 * _3450;
                        float _3454 = ((1.0 - _3451) * _3375) + _3451;
                        float _4806 = isnan(0.0) ? _3454 : (isnan(_3454) ? 0.0 : max(_3454, 0.0));
                        float _3455 = isnan(1.0) ? _4806 : (isnan(_4806) ? 1.0 : min(_4806, 1.0));
                        float _3456 = 1.0 - _3426;
                        float _3466 = (0.5 / (((_3455 * ((_3441 * _3456) + _3426)) + 9.9999999392252902907785028219223e-09) + (((_3455 * _3456) + _3426) * _3441))) * _3455;
                        float _4817 = isnan(0.0) ? _3466 : (isnan(_3466) ? 0.0 : max(_3466, 0.0));
                        float _3477 = (((_3427 * 3.1415927410125732421875) * (isnan(1.0) ? _4817 : (isnan(_4817) ? 1.0 : min(_4817, 1.0)))) / ((_3449 * _3449) * ((_3392 * 2.1991131305694580078125) + 3.141590118408203125))) * _3381;
                        _3234 = (_3396 * _3344.x) + _3302;
                        _3235 = (_3396 * _3344.y) + _3303;
                        _3236 = (_3396 * _3344.z) + _3304;
                        _3231 = (_3477 * _3361.x) + _3299;
                        _3232 = (_3477 * _3361.y) + _3300;
                        _3233 = (_3477 * _3361.z) + _3301;
                        if (_3306 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3299 = _3231;
                            _3300 = _3232;
                            _3301 = _3233;
                            _3302 = _3234;
                            _3303 = _3235;
                            _3304 = _3236;
                            _3305 = _3306;
                        }
                    }
                    frontier_phi_61_pred = _3231;
                    frontier_phi_61_pred_1 = _3236;
                    frontier_phi_61_pred_2 = _3235;
                    frontier_phi_61_pred_3 = _3234;
                    frontier_phi_61_pred_4 = _3233;
                    frontier_phi_61_pred_5 = _3232;
                }
                _3031 = frontier_phi_61_pred;
                _3041 = frontier_phi_61_pred_1;
                _3039 = frontier_phi_61_pred_2;
                _3037 = frontier_phi_61_pred_3;
                _3035 = frontier_phi_61_pred_4;
                _3033 = frontier_phi_61_pred_5;
                uint _3182 = _3181 + 1u;
                if (_3182 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3175 = _3031;
                    _3176 = _3033;
                    _3177 = _3035;
                    _3178 = _3037;
                    _3179 = _3039;
                    _3180 = _3041;
                    _3181 = _3182;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3030 = _3031;
            _3032 = _3033;
            _3034 = _3035;
            _3036 = _3037;
            _3038 = _3039;
            _3040 = _3041;
        }
        uvec4 _3044 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3045 = _3044.z;
        uint _3047 = (_3045 >> 8u) & 15u;
        float _3143;
        float _3145;
        float _3147;
        float _3149;
        float _3151;
        float _3153;
        if (((4294967295u << _3047) & _2929) == 0u)
        {
            _3143 = _3030;
            _3145 = _3032;
            _3147 = _3034;
            _3149 = _3036;
            _3151 = _3038;
            _3153 = _3040;
        }
        else
        {
            float _3168 = inversesqrt(dot(vec3(_2883, _2884, _2885), vec3(_2883, _2884, _2885)));
            float _3169 = _3168 * _2883;
            float _3170 = _3168 * _2884;
            float _3171 = _3168 * _2885;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_3047 < ((_3045 >> 12u) & 15u))
            {
                float _3144;
                float _3146;
                float _3148;
                float _3150;
                float _3152;
                float _3154;
                float _3282 = _3030;
                float _3283 = _3032;
                float _3284 = _3034;
                float _3285 = _3036;
                float _3286 = _3038;
                float _3287 = _3040;
                uint _3288 = _3047;
                uint _3297;
                bool _3298;
                for (;;)
                {
                    _3297 = texelFetch(g_lightClassification, int((((_2923 << 5u) + (_2909 << 9u)) + (_3288 << 2u)) >> 2u)).x;
                    _3298 = _3297 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3298)
                    {
                        frontier_phi_67_pred = _3285;
                        frontier_phi_67_pred_1 = _3286;
                        frontier_phi_67_pred_2 = _3287;
                        frontier_phi_67_pred_3 = _3284;
                        frontier_phi_67_pred_4 = _3283;
                        frontier_phi_67_pred_5 = _3282;
                    }
                    else
                    {
                        float _3482;
                        float _3483;
                        float _3484;
                        float _3485;
                        float _3486;
                        float _3487;
                        float _3775;
                        float _3776;
                        float _3777;
                        float _3778;
                        float _3779;
                        float _3780;
                        float _3495 = _3282;
                        float _3496 = _3283;
                        float _3497 = _3284;
                        float _3498 = _3285;
                        float _3499 = _3286;
                        float _3500 = _3287;
                        uint _3501 = _3297;
                        uint _3502;
                        vec4 _3527;
                        float _3528;
                        vec4 _3543;
                        vec3 _3555;
                        vec4 _3570;
                        vec4 _3585;
                        float _3631;
                        bool _3632;
                        for (;;)
                        {
                            uint _3512 = ((_3288 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3501));
                            _3502 = (_3501 + 4294967295u) & _3501;
                            uint _3514 = _3512 * 40u;
                            _3527 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3514)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3514 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3514 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3514 + 3u)).x));
                            _3528 = _3527.w;
                            uint _3530 = (_3512 * 40u) + 4u;
                            _3543 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3530)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3530 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3530 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3530 + 3u)).x));
                            uint _3545 = (_3512 * 40u) + 8u;
                            _3555 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3545)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3545 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3545 + 2u)).x));
                            uint _3557 = (_3512 * 40u) + 16u;
                            _3570 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3557)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3557 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3557 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3557 + 3u)).x));
                            uint _3572 = (_3512 * 40u) + 20u;
                            _3585 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3572)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3572 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3572 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3572 + 3u)).x));
                            uint _3587 = (_3512 * 40u) + 24u;
                            vec4 _3600 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3587)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3587 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3587 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3587 + 3u)).x));
                            uint _3606 = (_3512 * 40u) + 28u;
                            vec4 _3619 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3606)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3606 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3606 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3606 + 3u)).x));
                            _3631 = fma(_2885, _3619.z, fma(_2884, _3619.y, _3619.x * _2883)) + _3619.w;
                            _3632 = !((fma(_2885, _3600.z, fma(_2884, _3600.y, _3600.x * _2883)) + _3600.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3632)
                            {
                                float _3659 = _3527.x - _2883;
                                float _3660 = _3527.y - _2884;
                                float _3661 = _3527.z - _2885;
                                float _3662 = dot(vec3(_3659, _3660, _3661), vec3(_3659, _3660, _3661));
                                float _3665 = inversesqrt(_3662);
                                float _3666 = _3665 * _3659;
                                float _3667 = _3665 * _3660;
                                float _3668 = _3665 * _3661;
                                float _3672 = 1.0 - (_3662 / (_3528 * _3528));
                                float _4828 = isnan(0.0) ? _3672 : (isnan(_3672) ? 0.0 : max(_3672, 0.0));
                                float _3673 = isnan(1.0) ? _4828 : (isnan(_4828) ? 1.0 : min(_4828, 1.0));
                                float _3677 = sqrt(_3662) * _3543.w;
                                float _3679 = 1.39999997615814208984375 / (_3677 + 1.39999997615814208984375);
                                float _3680 = _3679 * _3679;
                                float _3683 = ((1.0 - _3680) * dot(vec3(_3666, _3667, _3668), vec3(_1167, _1170, _1173))) + _3680;
                                float _3686 = _3677 * _3677;
                                float _3690 = (fma(_2885, _3570.z, fma(_2884, _3570.y, _3570.x * _2883)) + _3570.w) / _3631;
                                float _3691 = (fma(_2885, _3585.z, fma(_2884, _3585.y, _3585.x * _2883)) + _3585.w) / _3631;
                                float _3695 = 1.0 - dot(vec2(_3690, _3691), vec2(_3690, _3691));
                                float _4844 = isnan(0.0) ? _3695 : (isnan(_3695) ? 0.0 : max(_3695, 0.0));
                                float _3696 = isnan(1.0) ? _4844 : (isnan(_4844) ? 1.0 : min(_4844, 1.0));
                                float _3697 = _3696 * (((isnan(0.0) ? _3683 : (isnan(_3683) ? 0.0 : max(_3683, 0.0))) * _3673) / ((_3686 * 0.699999988079071044921875) + 1.0));
                                float _3709 = exp2(log2(1.0 / ((_3686 * 3.5) + 5.0)) * 0.25);
                                float _3710 = 1.0 - _1227;
                                float _3717 = sqrt(1.0 - ((1.0 - (_3710 * _3710)) * (1.0 - (_3709 * _3709))));
                                float _3718 = _3717 * _3717;
                                float _3719 = _3718 * _3718;
                                float _3720 = _3666 - _3169;
                                float _3721 = _3667 - _3170;
                                float _3722 = _3668 - _3171;
                                float _3726 = inversesqrt(dot(vec3(_3720, _3721, _3722), vec3(_3720, _3721, _3722)));
                                float _3730 = dot(vec3(_1167, _1170, _1173), vec3((-0.0) - _3169, (-0.0) - _3170, (-0.0) - _3171));
                                float _4855 = isnan(0.0) ? _3730 : (isnan(_3730) ? 0.0 : max(_3730, 0.0));
                                float _3733 = isnan(1.0) ? _4855 : (isnan(_4855) ? 1.0 : min(_4855, 1.0));
                                float _3734 = dot(vec3(_1167, _1170, _1173), vec3(_3726 * _3720, _3726 * _3721, _3726 * _3722));
                                float _4866 = isnan(0.0) ? _3734 : (isnan(_3734) ? 0.0 : max(_3734, 0.0));
                                float _3737 = isnan(1.0) ? _4866 : (isnan(_4866) ? 1.0 : min(_4866, 1.0));
                                float _3741 = ((_3737 * _3737) * (_3719 + (-1.0))) + 1.0;
                                float _3742 = _3679 * _3718;
                                float _3743 = _3742 * _3742;
                                float _3749 = ((1.0 - _3743) * dot(vec3(_1167, _1170, _1173), vec3(_3666, _3667, _3668))) + _3743;
                                float _4877 = isnan(0.0) ? _3749 : (isnan(_3749) ? 0.0 : max(_3749, 0.0));
                                float _3750 = isnan(1.0) ? _4877 : (isnan(_4877) ? 1.0 : min(_4877, 1.0));
                                float _3751 = 1.0 - _3718;
                                float _3761 = (0.5 / (((_3750 * ((_3733 * _3751) + _3718)) + 9.9999999392252902907785028219223e-09) + (((_3750 * _3751) + _3718) * _3733))) * _3750;
                                float _4888 = isnan(0.0) ? _3761 : (isnan(_3761) ? 0.0 : max(_3761, 0.0));
                                float _3771 = (_3696 * _3673) * (((_3719 * 3.1415927410125732421875) * (isnan(1.0) ? _4888 : (isnan(_4888) ? 1.0 : min(_4888, 1.0)))) / ((_3741 * _3741) * ((_3686 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3771 * _3555.x;
                                frontier_phi_73_pred_1 = _3771 * _3555.y;
                                frontier_phi_73_pred_2 = _3697 * _3543.z;
                                frontier_phi_73_pred_3 = _3697 * _3543.y;
                                frontier_phi_73_pred_4 = _3697 * _3543.x;
                                frontier_phi_73_pred_5 = _3771 * _3555.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3775 = frontier_phi_73_pred;
                            _3776 = frontier_phi_73_pred_1;
                            _3780 = frontier_phi_73_pred_2;
                            _3779 = frontier_phi_73_pred_3;
                            _3778 = frontier_phi_73_pred_4;
                            _3777 = frontier_phi_73_pred_5;
                            _3485 = _3778 + _3498;
                            _3486 = _3779 + _3499;
                            _3487 = _3780 + _3500;
                            _3482 = _3775 + _3495;
                            _3483 = _3776 + _3496;
                            _3484 = _3777 + _3497;
                            if (_3502 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3495 = _3482;
                                _3496 = _3483;
                                _3497 = _3484;
                                _3498 = _3485;
                                _3499 = _3486;
                                _3500 = _3487;
                                _3501 = _3502;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3485;
                        frontier_phi_67_pred_1 = _3486;
                        frontier_phi_67_pred_2 = _3487;
                        frontier_phi_67_pred_3 = _3484;
                        frontier_phi_67_pred_4 = _3483;
                        frontier_phi_67_pred_5 = _3482;
                    }
                    _3150 = frontier_phi_67_pred;
                    _3152 = frontier_phi_67_pred_1;
                    _3154 = frontier_phi_67_pred_2;
                    _3148 = frontier_phi_67_pred_3;
                    _3146 = frontier_phi_67_pred_4;
                    _3144 = frontier_phi_67_pred_5;
                    uint _3289 = _3288 + 1u;
                    if (_3289 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3282 = _3144;
                        _3283 = _3146;
                        _3284 = _3148;
                        _3285 = _3150;
                        _3286 = _3152;
                        _3287 = _3154;
                        _3288 = _3289;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3152;
                frontier_phi_55_56_ladder_1 = _3154;
                frontier_phi_55_56_ladder_2 = _3150;
                frontier_phi_55_56_ladder_3 = _3148;
                frontier_phi_55_56_ladder_4 = _3146;
                frontier_phi_55_56_ladder_5 = _3144;
            }
            else
            {
                frontier_phi_55_56_ladder = _3038;
                frontier_phi_55_56_ladder_1 = _3040;
                frontier_phi_55_56_ladder_2 = _3036;
                frontier_phi_55_56_ladder_3 = _3034;
                frontier_phi_55_56_ladder_4 = _3032;
                frontier_phi_55_56_ladder_5 = _3030;
            }
            _3143 = frontier_phi_55_56_ladder_5;
            _3145 = frontier_phi_55_56_ladder_4;
            _3147 = frontier_phi_55_56_ladder_3;
            _3149 = frontier_phi_55_56_ladder_2;
            _3151 = frontier_phi_55_56_ladder;
            _3153 = frontier_phi_55_56_ladder_1;
        }
        float _3158 = isnan(1.0) ? _1211 : (isnan(_1211) ? 1.0 : min(_1211, 1.0));
        _2942 = (_3158 * _3149) + _2394;
        _2944 = (_3158 * _3151) + _2396;
        _2946 = (_3158 * _3153) + _2398;
        _2948 = ((_3143 * 0.039999999105930328369140625) * _3158) + _2727;
        _2950 = ((_3145 * 0.039999999105930328369140625) * _3158) + _2729;
        _2952 = ((_3147 * 0.039999999105930328369140625) * _3158) + _2731;
    }
    else
    {
        _2942 = _2394;
        _2944 = _2396;
        _2946 = _2398;
        _2948 = _2727;
        _2950 = _2729;
        _2952 = _2731;
    }
    float _4904 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
    float _4915 = isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0));
    float _4926 = isnan(0.0) ? _1198 : (isnan(_1198) ? 0.0 : max(_1198, 0.0));
    uint _2972 = _291 + 6u;
    float _2980 = _1148 / cbSceneParam._m0[86u].x;
    float _2981 = _1149 / cbSceneParam._m0[86u].y;
    vec4 _2995 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2980, _2981, (log2((isnan(cbSceneParam._m0[77u].w) ? _1083 : (isnan(_1083) ? cbSceneParam._m0[77u].w : min(_1083, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2997 = _2995.x;
    float _2998 = _2995.y;
    float _2999 = _2995.z;
    float _3000 = _2995.w;
    float _3093;
    float _3095;
    float _3097;
    float _3099;
    if (_1083 > cbSceneParam._m0[78u].w)
    {
        float _3055 = isnan(_1083) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1083 : min(cbSceneParam._m0[80u].w, _1083));
        float _3056 = _3055 / _1083;
        float _3067 = _3056 * _1133;
        float _3068 = _1134 * _3056;
        float _3069 = (-0.0) - _3068;
        float _3071 = _3056 * _1135;
        float _3073 = (cbSceneParam._m0[77u].w * _3069) / _3055;
        float _3074 = _3073 + cbSceneParam._m0[79u].w;
        float _3075 = cbSceneParam._m0[79u].w - _3068;
        float _3081 = sqrt(((_3067 * _3067) + (_3068 * _3068)) + (_3071 * _3071));
        float _3084 = (1.0 - (cbSceneParam._m0[77u].w / _3055)) * _3081;
        float _3089 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3091 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3244;
        if (abs((_3069 - _3073) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3244 = ((((_3074 > 0.0) ? exp2(_3089 * _3074) : (2.0 - exp2(_3091 * _3074))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3084;
        }
        else
        {
            float _3204 = 1.0 / cbSceneParam._m0[80u].x;
            float _3205 = isnan(_3075) ? _3074 : (isnan(_3074) ? _3075 : max(_3074, _3075));
            float _3206 = isnan(_3075) ? _3074 : (isnan(_3074) ? _3075 : min(_3074, _3075));
            float _3215 = isnan(0.0) ? _3205 : (isnan(_3205) ? 0.0 : min(_3205, 0.0));
            float _3216 = isnan(0.0) ? _3206 : (isnan(_3206) ? 0.0 : min(_3206, 0.0));
            _3244 = ((abs(_3081 / _3069) * cbSceneParam._m0[80u].y) * ((((_3215 - _3216) * 2.0) - ((exp2(_3089 * (isnan(0.0) ? _3205 : (isnan(_3205) ? 0.0 : max(_3205, 0.0)))) - exp2(_3089 * (isnan(0.0) ? _3206 : (isnan(_3206) ? 0.0 : max(_3206, 0.0))))) * _3204)) - ((exp2(_3091 * _3215) - exp2(_3091 * _3216)) * _3204))) + (_3084 * cbSceneParam._m0[80u].z);
        }
        vec4 _3246 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2980, _2981, 1.0), 0.0);
        float _3255 = exp2((_3244 * (-1.44269502162933349609375)) * (1.0 - _3246.w));
        float _3256 = log2(_3255);
        float _3272 = log2(_3000);
        _3093 = (exp2(_3272 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3256 * cbSceneParam._m0[78u].x)) * _3246.x) / cbSceneParam._m0[78u].x)) + _2997;
        _3095 = (exp2(_3272 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3256 * cbSceneParam._m0[78u].y)) * _3246.y) / cbSceneParam._m0[78u].y)) + _2998;
        _3097 = (exp2(_3272 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3256 * cbSceneParam._m0[78u].z)) * _3246.z) / cbSceneParam._m0[78u].z)) + _2999;
        _3099 = _3255 * _3000;
    }
    else
    {
        _3093 = _2997;
        _3095 = _2998;
        _3097 = _2999;
        _3099 = _3000;
    }
    float _3111 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3112 = _3111 == 3.0;
    float _3113 = log2(_3099);
    float _3120 = exp2(_3113 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4904 : (isnan(_4904) ? 1.0 : min(_4904, 1.0))) * (_2942 + ((isnan(0.0) ? _1935 : (isnan(_1935) ? 0.0 : max(_1935, 0.0))) * _1211))) + ((_2948 + ((isnan(0.0) ? _2226 : (isnan(_2226) ? 0.0 : max(_2226, 0.0))) * _2014)) * cbPerFrame._m0[3u].x));
    float _3121 = exp2(_3113 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4915 : (isnan(_4915) ? 1.0 : min(_4915, 1.0))) * (_2944 + ((isnan(0.0) ? _1938 : (isnan(_1938) ? 0.0 : max(_1938, 0.0))) * _1211))) + ((_2950 + ((isnan(0.0) ? _2229 : (isnan(_2229) ? 0.0 : max(_2229, 0.0))) * _2014)) * cbPerFrame._m0[3u].x));
    float _3122 = exp2(_3113 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4926 : (isnan(_4926) ? 1.0 : min(_4926, 1.0))) * (_2946 + ((isnan(0.0) ? _1941 : (isnan(_1941) ? 0.0 : max(_1941, 0.0))) * _1211))) + ((_2952 + ((isnan(0.0) ? _2232 : (isnan(_2232) ? 0.0 : max(_2232, 0.0))) * _2014)) * cbPerFrame._m0[3u].x));
    float _3131 = (_3111 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3131 * (_3112 ? _3120 : (_3120 + (cbSceneParam._m0[72u].w * _3093)));
    SV_Target.y = _3131 * (_3112 ? _3121 : (_3121 + (cbSceneParam._m0[72u].w * _3095)));
    SV_Target.z = _3131 * (_3112 ? _3122 : (_3122 + (cbSceneParam._m0[72u].w * _3097)));
    SV_Target.w = cbInstanceData._m0[_2972].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2972].w;
}


