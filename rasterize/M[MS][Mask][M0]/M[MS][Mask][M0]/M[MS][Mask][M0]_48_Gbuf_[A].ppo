#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _202 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _203 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _204 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _210 = inversesqrt(dot(vec3(_202, _203, _204), vec3(_202, _203, _204)));
    float _211 = _210 * _202;
    float _212 = _210 * _203;
    float _213 = _210 * _204;
    float _217 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _218 = _217 * NORMAL.x;
    float _219 = _217 * NORMAL.y;
    float _220 = _217 * NORMAL.z;
    float _224 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _225 = _224 * TANGENT.x;
    float _226 = _224 * TANGENT.y;
    float _227 = _224 * TANGENT.z;
    float _236 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _238 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _239 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _1063 = isnan(0.0) ? _236 : (isnan(_236) ? 0.0 : max(_236, 0.0));
    float _1074 = isnan(0.0) ? _238 : (isnan(_238) ? 0.0 : max(_238, 0.0));
    float _1085 = isnan(0.0) ? _239 : (isnan(_239) ? 0.0 : max(_239, 0.0));
    uint _249 = uint(roundEven(NORMAL.w)) * 13u;
    uint _254 = _249 + 1u;
    uint _258 = _249 + 2u;
    float _267 = sqrt(((cbInstanceData._m0[_254].x * cbInstanceData._m0[_254].x) + (cbInstanceData._m0[_249].x * cbInstanceData._m0[_249].x)) + (cbInstanceData._m0[_258].x * cbInstanceData._m0[_258].x));
    float _268 = _267 * TEXCOORD.z;
    float _269 = _267 * TEXCOORD.w;
    vec4 _282 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _268) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _269) + cbTextureTilingScale._m0[13u].w));
    vec4 _306 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _311 = _306.x * cbMtdParam._m0[11u].x;
    float _312 = _306.y * cbMtdParam._m0[11u].y;
    float _313 = _306.z * cbMtdParam._m0[11u].z;
    vec4 _332 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _268) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _269) + cbTextureTilingScale._m0[5u].w));
    vec4 _383 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _385 = _383.x;
    float _398 = dot(vec4(_385, _383.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _415 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w)).x) * 2.0) - ((((_385 - _398) * cbMtdParam._m0[24u].z) + _398) * cbMtdParam._m0[23u].x))) + 1.0;
    float _1096 = isnan(0.0) ? _415 : (isnan(_415) ? 0.0 : max(_415, 0.0));
    float _416 = isnan(1.0) ? _1096 : (isnan(_1096) ? 1.0 : min(_1096, 1.0));
    float _423 = (_416 * ((_332.x * cbMtdParam._m0[12u].x) - _311)) + _311;
    float _424 = (_416 * ((_332.y * cbMtdParam._m0[12u].y) - _312)) + _312;
    float _425 = (_416 * ((_332.z * cbMtdParam._m0[12u].z) - _313)) + _313;
    float _429 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _282.x) * _423;
    float _432 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _282.y) * _424;
    float _435 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _282.z) * _425;
    float _442 = ((_423 - _429) * (isnan(1.0) ? _1063 : (isnan(_1063) ? 1.0 : min(_1063, 1.0)))) + _429;
    float _443 = ((_424 - _432) * (isnan(1.0) ? _1074 : (isnan(_1074) ? 1.0 : min(_1074, 1.0)))) + _432;
    float _444 = ((_425 - _435) * (isnan(1.0) ? _1085 : (isnan(_1085) ? 1.0 : min(_1085, 1.0)))) + _435;
    vec4 _463 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _268) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _269) + cbTextureTilingScale._m0[14u].w));
    vec4 _483 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _268) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _269) + cbTextureTilingScale._m0[20u].w));
    vec4 _510 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _268) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _269) + cbTextureTilingScale._m0[4u].w));
    vec4 _527 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _529 = _527.x;
    float _530 = _527.y;
    float _531 = _527.z;
    float _540 = ((_510.z - _531) * _416) + _531;
    float _543 = ((((_510.x - _529) * _416) + _529) * 2.0) + (-1.0);
    float _544 = ((((_510.y - _530) * _416) + _530) * 2.0) + (-1.0);
    float _545 = dot(vec2(_543, _544), vec2(_543, _544));
    float _1107 = isnan(0.0) ? _545 : (isnan(_545) ? 0.0 : max(_545, 0.0));
    float _550 = sqrt(1.0 - (isnan(1.0) ? _1107 : (isnan(_1107) ? 1.0 : min(_1107, 1.0))));
    vec4 _570 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _582 = (_543 + ((((_483.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x)) + (((_570.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _583 = (_544 + ((((_483.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x)) + (((_570.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _586 = fma(_550, _218, fma(_583, _225, _582 * _211));
    float _589 = fma(_550, _219, fma(_583, _226, _582 * _212));
    float _592 = fma(_550, _220, fma(_583, _227, _582 * _213));
    float _596 = inversesqrt(dot(vec3(_586, _589, _592), vec3(_586, _589, _592)));
    vec4 _623 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _268) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _269) + cbTextureTilingScale._m0[11u].w));
    float _625 = _623.x;
    float _626 = 1.0 - _625;
    float _632 = (cbMtdParam._m0[19u].x + dot(vec4(_596 * _586, _596 * _589, _596 * _592, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_625 - _626) * cbMtdParam._m0[24u].w) + _626) * cbMtdParam._m0[21u].z);
    float _1118 = isnan(0.0) ? _632 : (isnan(_632) ? 0.0 : max(_632, 0.0));
    float _633 = isnan(1.0) ? _1118 : (isnan(_1118) ? 1.0 : min(_1118, 1.0));
    float _635 = (-0.0) - cbMtdParam._m0[24u].x;
    float _637 = isnan(0.0) ? _635 : (isnan(_635) ? 0.0 : max(_635, 0.0));
    float _638 = isnan(1.0) ? _637 : (isnan(_637) ? 1.0 : min(_637, 1.0));
    float _645 = _633 - ((_633 * TEXCOORD_8.x) * _638);
    float _646 = _633 - ((_633 * TEXCOORD_8.y) * _638);
    float _647 = _633 - ((_633 * TEXCOORD_8.z) * _638);
    float _654 = (_645 * ((_463.x * cbMtdParam._m0[18u].x) - _442)) + _442;
    float _655 = (_646 * ((_463.y * cbMtdParam._m0[18u].y) - _443)) + _443;
    float _656 = (_647 * ((_463.z * cbMtdParam._m0[18u].z) - _444)) + _444;
    vec4 _668 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _268) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _269) + cbTextureTilingScale._m0[19u].w));
    float _670 = _668.x;
    float _671 = 1.0 - _670;
    float _697 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_670 - _671) * cbMtdParam._m0[24u].y) + _671) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _1139 = isnan(0.0) ? _697 : (isnan(_697) ? 0.0 : max(_697, 0.0));
    float _698 = isnan(1.0) ? _1139 : (isnan(_1139) ? 1.0 : min(_1139, 1.0));
    float _706 = ((((cbMtdParam._m0[10u].x - _654) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _698) + _654;
    float _707 = ((((cbMtdParam._m0[10u].y - _655) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _698) + _655;
    float _708 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _656)) * _698) + _656;
    float _713 = (((_483.z - _540) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _540;
    float _717 = ((_570.z - _713) * cbMtdParam._m0[19u].w) + _713;
    vec4 _731 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _268) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _269) + cbTextureTilingScale._m0[15u].w));
    float _738 = (_731.x * 2.0) + (-1.0);
    float _739 = (_731.y * 2.0) + (-1.0);
    float _740 = dot(vec2(_738, _739), vec2(_738, _739));
    float _1150 = isnan(0.0) ? _740 : (isnan(_740) ? 0.0 : max(_740, 0.0));
    float _748 = ((_731.z - _717) * _645) + _717;
    float _751 = ((cbMtdParam._m0[23u].y - _748) * _698) + _748;
    vec4 _770 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _268) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _269) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _776 = (_770.x * 2.0) + (-1.0);
    float _777 = (_770.y * 2.0) + (-1.0);
    float _778 = dot(vec2(_776, _777), vec2(_776, _777));
    float _1161 = isnan(0.0) ? _778 : (isnan(_778) ? 0.0 : max(_778, 0.0));
    float _793 = ((sqrt(1.0 - (isnan(1.0) ? _1150 : (isnan(_1150) ? 1.0 : min(_1150, 1.0)))) - _550) * _647) + _550;
    float _796 = (((_738 - _582) * _645) + _582) + (cbMtdParam._m0[21u].x * _582);
    float _797 = (((_739 - _583) * _646) + _583) + (cbMtdParam._m0[21u].x * _583);
    float _808 = (((_776 - _796) + (_796 * cbMtdParam._m0[22u].z)) * _698) + _796;
    float _809 = (((_777 - _797) + (_797 * cbMtdParam._m0[22u].z)) * _698) + _797;
    float _810 = (_698 * (sqrt(1.0 - (isnan(1.0) ? _1161 : (isnan(_1161) ? 1.0 : min(_1161, 1.0)))) - _793)) + _793;
    float _814 = cbMtdParam._m0[22u].x + _570.w;
    float _817 = fma(_810, _218, fma(_809, _225, _808 * _211));
    float _820 = fma(_810, _219, fma(_809, _226, _808 * _212));
    float _823 = fma(_810, _220, fma(_809, _227, _808 * _213));
    float _827 = inversesqrt(dot(vec3(_817, _820, _823), vec3(_817, _820, _823)));
    float _1172 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
    float _1183 = isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0));
    float _829 = isnan(1.0) ? _1183 : (isnan(_1183) ? 1.0 : min(_1183, 1.0));
    float _1194 = isnan(0.0) ? _706 : (isnan(_706) ? 0.0 : max(_706, 0.0));
    float _830 = isnan(1.0) ? _1194 : (isnan(_1194) ? 1.0 : min(_1194, 1.0));
    float _1205 = isnan(0.0) ? _707 : (isnan(_707) ? 0.0 : max(_707, 0.0));
    float _831 = isnan(1.0) ? _1205 : (isnan(_1205) ? 1.0 : min(_1205, 1.0));
    float _1216 = isnan(0.0) ? _708 : (isnan(_708) ? 0.0 : max(_708, 0.0));
    float _832 = isnan(1.0) ? _1216 : (isnan(_1216) ? 1.0 : min(_1216, 1.0));
    float _873 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _883 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _873);
    float _884 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _873);
    float _885 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _873);
    vec4 _890 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _892 = _890.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _952 = sqrt(((_883 * _883) + (_884 * _884)) + (_885 * _885));
        float _958 = (cbMatDynParam._m0[5u].x * _952) + cbMatDynParam._m0[5u].y;
        float _1227 = isnan(0.0) ? _958 : (isnan(_958) ? 0.0 : max(_958, 0.0));
        float _959 = isnan(1.0) ? _1227 : (isnan(_1227) ? 1.0 : min(_1227, 1.0));
        float _963 = (cbMatDynParam._m0[5u].z * _952) + cbMatDynParam._m0[5u].w;
        float _1238 = isnan(0.0) ? _963 : (isnan(_963) ? 0.0 : max(_963, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1238 : (isnan(_1238) ? 1.0 : min(_1238, 1.0))) - _959)) + _959) < ((_892 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _990;
    vec4 _914;
    float _921;
    float _922;
    float _923;
    float _924;
    float _928;
    vec4 _932;
    float _934;
    float _935;
    bool _946;
    for (;;)
    {
        _914 = cbInstanceData._m0[(_249 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _918 = (cbMtdParam._m0[0u].x * _830) * _914.x;
        float _919 = (cbMtdParam._m0[0u].y * _831) * _914.y;
        float _920 = (cbMtdParam._m0[0u].z * _832) * _914.z;
        float _1249 = isnan(0.0) ? _918 : (isnan(_918) ? 0.0 : max(_918, 0.0));
        _921 = isnan(1.0) ? _1249 : (isnan(_1249) ? 1.0 : min(_1249, 1.0));
        float _1260 = isnan(0.0) ? _919 : (isnan(_919) ? 0.0 : max(_919, 0.0));
        _922 = isnan(1.0) ? _1260 : (isnan(_1260) ? 1.0 : min(_1260, 1.0));
        float _1271 = isnan(0.0) ? _920 : (isnan(_920) ? 0.0 : max(_920, 0.0));
        _923 = isnan(1.0) ? _1271 : (isnan(_1271) ? 1.0 : min(_1271, 1.0));
        _924 = _829 * TEXCOORD_5.w;
        _928 = cbInstanceData._m0[_249 + 6u].w;
        float _929 = _892 + (-0.5);
        _932 = cbMtdParam._m0[1u];
        _934 = _932.y * _929;
        _935 = _929 * 0.999000012874603271484375;
        _946 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_946)
        {
            if ((cbInstanceData._m0[_249 + 7u].x + _935) < 0.5)
            {
                _990 = true;
                break;
            }
        }
        if ((_914.w < 1.0) && ((_914.w + _935) < 0.5))
        {
            _990 = true;
            break;
        }
        if ((_934 + 1.0) < _932.x)
        {
            _990 = true;
            break;
        }
        _990 = false;
        break;
    }
    if (_990)
    {
        discard_state = true;
    }
    bool _1016 = cbMtdParam._m0[1u].z != 0.0;
    float _1017 = _1016 ? _928 : 0.0;
    SV_Target.x = ((_817 * 0.5) * _827) + 0.500488758087158203125;
    SV_Target.y = ((_820 * 0.5) * _827) + 0.500488758087158203125;
    SV_Target.z = ((_823 * 0.5) * _827) + 0.500488758087158203125;
    SV_Target.w = _1017;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _1172 : (isnan(_1172) ? 1.0 : min(_1172, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _1016 ? _928 : _924;
    SV_Target_2.x = _921;
    SV_Target_2.y = _922;
    SV_Target_2.z = _923;
    SV_Target_2.w = _1016 ? _928 : (float(floatBitsToUint(cbInstanceData._m0[_249 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _1017;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _1017;
    discard_exit();
}


