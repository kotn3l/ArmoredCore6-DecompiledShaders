#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1603;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _244 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _245 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _246 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _252 = inversesqrt(dot(vec3(_244, _245, _246), vec3(_244, _245, _246)));
    float _253 = _252 * _244;
    float _254 = _252 * _245;
    float _255 = _252 * _246;
    float _259 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _260 = _259 * NORMAL.x;
    float _261 = _259 * NORMAL.y;
    float _262 = _259 * NORMAL.z;
    float _266 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _267 = _266 * TANGENT.x;
    float _268 = _266 * TANGENT.y;
    float _269 = _266 * TANGENT.z;
    float _278 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _280 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _281 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4187 = isnan(0.0) ? _278 : (isnan(_278) ? 0.0 : max(_278, 0.0));
    float _4198 = isnan(0.0) ? _280 : (isnan(_280) ? 0.0 : max(_280, 0.0));
    float _4209 = isnan(0.0) ? _281 : (isnan(_281) ? 0.0 : max(_281, 0.0));
    uint _291 = uint(roundEven(NORMAL.w)) * 13u;
    uint _296 = _291 + 1u;
    uint _300 = _291 + 2u;
    float _309 = sqrt(((cbInstanceData._m0[_296].x * cbInstanceData._m0[_296].x) + (cbInstanceData._m0[_291].x * cbInstanceData._m0[_291].x)) + (cbInstanceData._m0[_300].x * cbInstanceData._m0[_300].x));
    float _310 = _309 * TEXCOORD.z;
    float _311 = _309 * TEXCOORD.w;
    vec4 _324 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _310) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _311) + cbTextureTilingScale._m0[13u].w));
    vec4 _348 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _353 = _348.x * cbMtdParam._m0[11u].x;
    float _354 = _348.y * cbMtdParam._m0[11u].y;
    float _355 = _348.z * cbMtdParam._m0[11u].z;
    vec4 _374 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _310) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _311) + cbTextureTilingScale._m0[5u].w));
    vec4 _393 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _431 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _433 = _431.x;
    float _445 = dot(vec4(_433, _431.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _462 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _393.x) * 2.0) - ((((_433 - _445) * cbMtdParam._m0[24u].z) + _445) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4220 = isnan(0.0) ? _462 : (isnan(_462) ? 0.0 : max(_462, 0.0));
    float _463 = isnan(1.0) ? _4220 : (isnan(_4220) ? 1.0 : min(_4220, 1.0));
    float _470 = (_463 * ((_374.x * cbMtdParam._m0[12u].x) - _353)) + _353;
    float _471 = (_463 * ((_374.y * cbMtdParam._m0[12u].y) - _354)) + _354;
    float _472 = (_463 * ((_374.z * cbMtdParam._m0[12u].z) - _355)) + _355;
    vec4 _489 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _310) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _311) + cbTextureTilingScale._m0[3u].w));
    vec4 _509 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _511 = _509.x;
    float _521 = dot(vec4(_511, _509.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _535 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _393.y) * 2.0) - ((((_511 - _521) * cbMtdParam._m0[24u].z) + _521) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4231 = isnan(0.0) ? _535 : (isnan(_535) ? 0.0 : max(_535, 0.0));
    float _536 = isnan(1.0) ? _4231 : (isnan(_4231) ? 1.0 : min(_4231, 1.0));
    float _543 = (_536 * ((_489.x * cbMtdParam._m0[13u].x) - _470)) + _470;
    float _544 = (_536 * ((_489.y * cbMtdParam._m0[13u].y) - _471)) + _471;
    float _545 = (_536 * ((_489.z * cbMtdParam._m0[13u].z) - _472)) + _472;
    vec4 _563 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _310) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _311) + cbTextureTilingScale._m0[24u].w));
    vec4 _580 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _582 = _580.x;
    float _592 = dot(vec4(_582, _580.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _604 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _393.z) * 2.0) - ((((_582 - _592) * cbMtdParam._m0[24u].z) + _592) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4242 = isnan(0.0) ? _604 : (isnan(_604) ? 0.0 : max(_604, 0.0));
    float _605 = isnan(1.0) ? _4242 : (isnan(_4242) ? 1.0 : min(_4242, 1.0));
    float _612 = (_605 * ((_563.x * cbMtdParam._m0[14u].x) - _543)) + _543;
    float _613 = (_605 * ((_563.y * cbMtdParam._m0[14u].y) - _544)) + _544;
    float _614 = (_605 * ((_563.z * cbMtdParam._m0[14u].z) - _545)) + _545;
    float _618 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _324.x) * _612;
    float _621 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _324.y) * _613;
    float _624 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _324.z) * _614;
    float _631 = ((_612 - _618) * (isnan(1.0) ? _4187 : (isnan(_4187) ? 1.0 : min(_4187, 1.0)))) + _618;
    float _632 = ((_613 - _621) * (isnan(1.0) ? _4198 : (isnan(_4198) ? 1.0 : min(_4198, 1.0)))) + _621;
    float _633 = ((_614 - _624) * (isnan(1.0) ? _4209 : (isnan(_4209) ? 1.0 : min(_4209, 1.0)))) + _624;
    vec4 _651 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _310) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _311) + cbTextureTilingScale._m0[14u].w));
    vec4 _670 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _310) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _311) + cbTextureTilingScale._m0[20u].w));
    vec4 _695 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _310) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _311) + cbTextureTilingScale._m0[4u].w));
    vec4 _712 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _714 = _712.x;
    float _715 = _712.y;
    float _716 = _712.z;
    float _723 = ((_695.x - _714) * _463) + _714;
    float _724 = ((_695.y - _715) * _463) + _715;
    float _725 = ((_695.z - _716) * _463) + _716;
    vec4 _737 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _310) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _311) + cbTextureTilingScale._m0[2u].w));
    float _748 = ((_737.x - _723) * _536) + _723;
    float _749 = ((_737.y - _724) * _536) + _724;
    float _750 = ((_737.z - _725) * _536) + _725;
    vec4 _762 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _310) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _311) + cbTextureTilingScale._m0[23u].w));
    float _775 = ((_762.z - _750) * _605) + _750;
    float _778 = ((((_762.x - _748) * _605) + _748) * 2.0) + (-1.0);
    float _779 = ((((_762.y - _749) * _605) + _749) * 2.0) + (-1.0);
    float _780 = dot(vec2(_778, _779), vec2(_778, _779));
    float _4253 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
    float _785 = sqrt(1.0 - (isnan(1.0) ? _4253 : (isnan(_4253) ? 1.0 : min(_4253, 1.0))));
    vec4 _803 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _815 = (_778 + ((((_670.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x)) + (((_803.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _816 = (_779 + ((((_670.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x)) + (((_803.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _819 = fma(_785, _260, fma(_816, _267, _815 * _253));
    float _822 = fma(_785, _261, fma(_816, _268, _815 * _254));
    float _825 = fma(_785, _262, fma(_816, _269, _815 * _255));
    float _829 = inversesqrt(dot(vec3(_819, _822, _825), vec3(_819, _822, _825)));
    vec4 _856 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _310) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _311) + cbTextureTilingScale._m0[11u].w));
    float _858 = _856.x;
    float _859 = 1.0 - _858;
    float _865 = (cbMtdParam._m0[19u].x + dot(vec4(_829 * _819, _829 * _822, _829 * _825, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_858 - _859) * cbMtdParam._m0[24u].w) + _859) * cbMtdParam._m0[21u].z);
    float _4264 = isnan(0.0) ? _865 : (isnan(_865) ? 0.0 : max(_865, 0.0));
    float _866 = isnan(1.0) ? _4264 : (isnan(_4264) ? 1.0 : min(_4264, 1.0));
    float _868 = (-0.0) - cbMtdParam._m0[24u].x;
    float _870 = isnan(0.0) ? _868 : (isnan(_868) ? 0.0 : max(_868, 0.0));
    float _871 = isnan(1.0) ? _870 : (isnan(_870) ? 1.0 : min(_870, 1.0));
    float _878 = _866 - ((_866 * TEXCOORD_8.x) * _871);
    float _879 = _866 - ((_866 * TEXCOORD_8.y) * _871);
    float _880 = _866 - ((_866 * TEXCOORD_8.z) * _871);
    float _887 = (_878 * ((_651.x * cbMtdParam._m0[18u].x) - _631)) + _631;
    float _888 = (_879 * ((_651.y * cbMtdParam._m0[18u].y) - _632)) + _632;
    float _889 = (_880 * ((_651.z * cbMtdParam._m0[18u].z) - _633)) + _633;
    float _904 = sqrt(((cbInstanceData._m0[_296].x * cbInstanceData._m0[_296].x) + (cbInstanceData._m0[_291].x * cbInstanceData._m0[_291].x)) + (cbInstanceData._m0[_300].x * cbInstanceData._m0[_300].x));
    float _905 = _904 * TEXCOORD.z;
    float _906 = _904 * TEXCOORD.w;
    vec4 _918 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _905) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _906) + cbTextureTilingScale._m0[19u].w));
    float _920 = _918.x;
    float _921 = 1.0 - _920;
    float _949 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_920 - _921) * cbMtdParam._m0[24u].y) + _921) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4285 = isnan(0.0) ? _949 : (isnan(_949) ? 0.0 : max(_949, 0.0));
    float _950 = isnan(1.0) ? _4285 : (isnan(_4285) ? 1.0 : min(_4285, 1.0));
    float _958 = ((((cbMtdParam._m0[10u].x - _887) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _950) + _887;
    float _959 = ((((cbMtdParam._m0[10u].y - _888) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _950) + _888;
    float _960 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _889)) * _950) + _889;
    float _965 = (((_670.z - _775) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _775;
    float _969 = ((_803.z - _965) * cbMtdParam._m0[19u].w) + _965;
    vec4 _985 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _310) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _311) + cbTextureTilingScale._m0[15u].w));
    float _992 = (_985.x * 2.0) + (-1.0);
    float _993 = (_985.y * 2.0) + (-1.0);
    float _994 = dot(vec2(_992, _993), vec2(_992, _993));
    float _4296 = isnan(0.0) ? _994 : (isnan(_994) ? 0.0 : max(_994, 0.0));
    float _1002 = ((_985.z - _969) * _878) + _969;
    float _1005 = ((cbMtdParam._m0[23u].y - _1002) * _950) + _1002;
    vec4 _1026 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _905) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _906) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _1032 = (_1026.x * 2.0) + (-1.0);
    float _1033 = (_1026.y * 2.0) + (-1.0);
    float _1034 = dot(vec2(_1032, _1033), vec2(_1032, _1033));
    float _4307 = isnan(0.0) ? _1034 : (isnan(_1034) ? 0.0 : max(_1034, 0.0));
    float _1049 = ((sqrt(1.0 - (isnan(1.0) ? _4296 : (isnan(_4296) ? 1.0 : min(_4296, 1.0)))) - _785) * _880) + _785;
    float _1052 = (((_992 - _815) * _878) + _815) + (cbMtdParam._m0[21u].x * _815);
    float _1053 = (((_993 - _816) * _879) + _816) + (cbMtdParam._m0[21u].x * _816);
    float _1064 = (((_1032 - _1052) + (_1052 * cbMtdParam._m0[22u].z)) * _950) + _1052;
    float _1065 = (((_1033 - _1053) + (_1053 * cbMtdParam._m0[22u].z)) * _950) + _1053;
    float _1066 = (_950 * (sqrt(1.0 - (isnan(1.0) ? _4307 : (isnan(_4307) ? 1.0 : min(_4307, 1.0)))) - _1049)) + _1049;
    float _1068 = cbMtdParam._m0[22u].x + _803.w;
    float _1071 = fma(_1066, _260, fma(_1065, _267, _1064 * _253));
    float _1074 = fma(_1066, _261, fma(_1065, _268, _1064 * _254));
    float _1077 = fma(_1066, _262, fma(_1065, _269, _1064 * _255));
    float _1081 = inversesqrt(dot(vec3(_1071, _1074, _1077), vec3(_1071, _1074, _1077)));
    float _1082 = _1081 * _1071;
    float _1083 = _1081 * _1074;
    float _1084 = _1081 * _1077;
    float _4318 = isnan(0.0) ? _1005 : (isnan(_1005) ? 0.0 : max(_1005, 0.0));
    float _1085 = isnan(1.0) ? _4318 : (isnan(_4318) ? 1.0 : min(_4318, 1.0));
    float _4329 = isnan(0.0) ? _1068 : (isnan(_1068) ? 0.0 : max(_1068, 0.0));
    float _4340 = isnan(0.0) ? _958 : (isnan(_958) ? 0.0 : max(_958, 0.0));
    float _4351 = isnan(0.0) ? _959 : (isnan(_959) ? 0.0 : max(_959, 0.0));
    float _4362 = isnan(0.0) ? _960 : (isnan(_960) ? 0.0 : max(_960, 0.0));
    float _1103 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1144 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1154 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1144);
    float _1155 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1144);
    float _1156 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1144);
    float _1160 = inversesqrt(dot(vec3(_1154, _1155, _1156), vec3(_1154, _1155, _1156)));
    float _1161 = _1154 * _1160;
    float _1162 = _1155 * _1160;
    float _1163 = _1156 * _1160;
    float _1169 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1170 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1188 = fma(_1084, cbSceneParam._m0[5u].z, fma(_1083, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1082));
    float _1191 = fma(_1084, cbSceneParam._m0[6u].z, fma(_1083, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1082));
    float _1194 = fma(_1084, cbSceneParam._m0[7u].z, fma(_1083, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1082));
    uint _1208 = (_291 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1214 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4340 : (isnan(_4340) ? 1.0 : min(_4340, 1.0)))) * cbInstanceData._m0[_1208].x;
    float _1215 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4351 : (isnan(_4351) ? 1.0 : min(_4351, 1.0)))) * cbInstanceData._m0[_1208].y;
    float _1216 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4362 : (isnan(_4362) ? 1.0 : min(_4362, 1.0)))) * cbInstanceData._m0[_1208].z;
    float _4373 = isnan(0.0) ? _1214 : (isnan(_1214) ? 0.0 : max(_1214, 0.0));
    float _1217 = isnan(1.0) ? _4373 : (isnan(_4373) ? 1.0 : min(_4373, 1.0));
    float _4384 = isnan(0.0) ? _1215 : (isnan(_1215) ? 0.0 : max(_1215, 0.0));
    float _1218 = isnan(1.0) ? _4384 : (isnan(_4384) ? 1.0 : min(_4384, 1.0));
    float _4395 = isnan(0.0) ? _1216 : (isnan(_1216) ? 0.0 : max(_1216, 0.0));
    float _1219 = isnan(1.0) ? _4395 : (isnan(_4395) ? 1.0 : min(_4395, 1.0));
    vec4 _1228 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1169, cbSceneParam._m0[86u].y * _1170));
    float _1232 = ((isnan(1.0) ? _4329 : (isnan(_4329) ? 1.0 : min(_4329, 1.0))) * TEXCOORD_5.w) * _1228.x;
    float _1233 = dot(vec3(_1082, _1083, _1084), vec3(_1161, _1162, _1163));
    float _1236 = _1233 * 2.0;
    float _1240 = (_1236 * _1082) - _1161;
    float _1241 = (_1236 * _1083) - _1162;
    float _1242 = (_1236 * _1084) - _1163;
    float _1246 = abs(dot(vec3(_1161, _1162, _1163), vec3(_1082, _1083, _1084)));
    float _4406 = isnan(0.0) ? _1246 : (isnan(_1246) ? 0.0 : max(_1246, 0.0));
    float _1248 = sqrt(_1085);
    float _1261 = exp2((_1248 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4406 : (isnan(_4406) ? 1.0 : min(_4406, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1248 * 3.0));
    float _1293 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1297 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1301 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1602;
    float _1604;
    float _1605;
    float _1606;
    float _1607;
    float _1608;
    float _1609;
    float _1610;
    float _1611;
    float _1612;
    float _1613;
    float _1614;
    float _1615;
    float _1616;
    float _1617;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1327 = fma(_1301, cbModelParam._m0[26u].z, fma(_1297, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1293));
        float _1331 = fma(_1301, cbModelParam._m0[27u].z, fma(_1297, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1293));
        float _1335 = fma(_1301, cbModelParam._m0[28u].z, fma(_1297, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1293));
        float _1360 = _1293 + _1082;
        float _1361 = _1297 + _1083;
        float _1362 = _1301 + _1084;
        float _1372 = fma(_1362, cbModelParam._m0[26u].z, fma(_1361, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1360)) - _1327;
        float _1373 = fma(_1362, cbModelParam._m0[27u].z, fma(_1361, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1360)) - _1331;
        float _1374 = fma(_1362, cbModelParam._m0[28u].z, fma(_1361, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1360)) - _1335;
        float _1378 = inversesqrt(dot(vec3(_1372, _1373, _1374), vec3(_1372, _1373, _1374)));
        float _1391 = ((_1378 * _1372) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1327 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1392 = ((_1378 * _1373) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1331 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1393 = ((_1378 * _1374) / cbModelParam._m0[34u].z) + ((((((_1335 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1396 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1391, _1392, _1393), 0.0);
        vec4 _1403 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1391, _1392, _1393), 0.0);
        vec4 _1410 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1391, _1392, _1393), 0.0);
        vec4 _1417 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1391, _1392, _1393), 0.0);
        float _1430 = exp2((_1396.w + (-0.5)) * 20.0) * 2.0;
        float _1431 = _1430 * (_1396.x + (-0.5));
        float _1432 = _1430 * (_1396.y + (-0.5));
        float _1433 = _1430 * (_1396.z + (-0.5));
        float _1440 = exp2((_1403.w + (-0.5)) * 20.0) * 2.0;
        float _1441 = _1440 * (_1403.x + (-0.5));
        float _1442 = _1440 * (_1403.y + (-0.5));
        float _1443 = _1440 * (_1403.z + (-0.5));
        float _1450 = exp2((_1410.w + (-0.5)) * 20.0) * 2.0;
        float _1451 = _1450 * (_1410.x + (-0.5));
        float _1452 = _1450 * (_1410.y + (-0.5));
        float _1453 = _1450 * (_1410.z + (-0.5));
        float _1460 = exp2((_1417.w + (-0.5)) * 20.0) * 2.0;
        float _1461 = _1460 * (_1417.x + (-0.5));
        float _1462 = _1460 * (_1417.y + (-0.5));
        float _1463 = _1460 * (_1417.z + (-0.5));
        float _1464 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0));
        float _1465 = isnan(0.0) ? _1462 : (isnan(_1462) ? 0.0 : max(_1462, 0.0));
        float _1466 = isnan(0.0) ? _1463 : (isnan(_1463) ? 0.0 : max(_1463, 0.0));
        float _1467 = _1431 * 0.5;
        float _1468 = _1441 * 0.5;
        float _1469 = _1451 * 0.5;
        float _1470 = dot(vec3(_1467, _1468, _1469), vec3(_1467, _1468, _1469));
        float _1475 = (_1470 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1470);
        float _1484 = (dot(vec3(_1082, _1083, _1084), vec3(_1475 * _1467, _1475 * _1468, _1475 * _1469)) + 1.0) * 0.5;
        float _4432 = isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0));
        float _1494 = sqrt(((_1468 * _1468) + (_1467 * _1467)) + (_1469 * _1469)) / (_1464 + 9.9999997473787516355514526367188e-06);
        float _4443 = isnan(0.0) ? _1494 : (isnan(_1494) ? 0.0 : max(_1494, 0.0));
        float _1495 = isnan(1.0) ? _4443 : (isnan(_4443) ? 1.0 : min(_4443, 1.0));
        float _1496 = _1495 * 2.0;
        float _1500 = (1.0 - _1495) / (_1495 + 1.0);
        float _4454 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
        float _1501 = isnan(1.0) ? _4454 : (isnan(_4454) ? 1.0 : min(_4454, 1.0));
        float _1510 = ((((1.0 - _1501) * (_1496 + 2.0)) * exp2(log2(isnan(1.0) ? _4432 : (isnan(_4432) ? 1.0 : min(_4432, 1.0))) * (_1496 + 1.0))) + _1501) * _1464;
        float _1511 = _1432 * 0.5;
        float _1512 = _1442 * 0.5;
        float _1513 = _1452 * 0.5;
        float _1514 = dot(vec3(_1511, _1512, _1513), vec3(_1511, _1512, _1513));
        float _1519 = (_1514 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1514);
        float _1527 = (dot(vec3(_1082, _1083, _1084), vec3(_1519 * _1511, _1519 * _1512, _1519 * _1513)) + 1.0) * 0.5;
        float _4465 = isnan(0.0) ? _1527 : (isnan(_1527) ? 0.0 : max(_1527, 0.0));
        float _1536 = sqrt(((_1512 * _1512) + (_1511 * _1511)) + (_1513 * _1513)) / (_1465 + 9.9999997473787516355514526367188e-06);
        float _4476 = isnan(0.0) ? _1536 : (isnan(_1536) ? 0.0 : max(_1536, 0.0));
        float _1537 = isnan(1.0) ? _4476 : (isnan(_4476) ? 1.0 : min(_4476, 1.0));
        float _1538 = _1537 * 2.0;
        float _1542 = (1.0 - _1537) / (_1537 + 1.0);
        float _4487 = isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0));
        float _1543 = isnan(1.0) ? _4487 : (isnan(_4487) ? 1.0 : min(_4487, 1.0));
        float _1552 = ((((1.0 - _1543) * (_1538 + 2.0)) * exp2(log2(isnan(1.0) ? _4465 : (isnan(_4465) ? 1.0 : min(_4465, 1.0))) * (_1538 + 1.0))) + _1543) * _1465;
        float _1553 = _1433 * 0.5;
        float _1554 = _1443 * 0.5;
        float _1555 = _1453 * 0.5;
        float _1556 = dot(vec3(_1553, _1554, _1555), vec3(_1553, _1554, _1555));
        float _1561 = (_1556 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1556);
        float _1569 = (dot(vec3(_1082, _1083, _1084), vec3(_1561 * _1553, _1561 * _1554, _1561 * _1555)) + 1.0) * 0.5;
        float _4498 = isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0));
        float _1578 = sqrt(((_1554 * _1554) + (_1553 * _1553)) + (_1555 * _1555)) / (_1466 + 9.9999997473787516355514526367188e-06);
        float _4509 = isnan(0.0) ? _1578 : (isnan(_1578) ? 0.0 : max(_1578, 0.0));
        float _1579 = isnan(1.0) ? _4509 : (isnan(_4509) ? 1.0 : min(_4509, 1.0));
        float _1580 = _1579 * 2.0;
        float _1584 = (1.0 - _1579) / (_1579 + 1.0);
        float _4520 = isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0));
        float _1585 = isnan(1.0) ? _4520 : (isnan(_4520) ? 1.0 : min(_4520, 1.0));
        float _1594 = ((((1.0 - _1585) * (_1580 + 2.0)) * exp2(log2(isnan(1.0) ? _4498 : (isnan(_4498) ? 1.0 : min(_4498, 1.0))) * (_1580 + 1.0))) + _1585) * _1466;
        _1602 = _1433;
        _1604 = _1432;
        _1605 = _1431;
        _1606 = _1443;
        _1607 = _1442;
        _1608 = _1441;
        _1609 = _1453;
        _1610 = _1452;
        _1611 = _1451;
        _1612 = _1466;
        _1613 = _1465;
        _1614 = _1464;
        _1615 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0)));
        _1616 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1552 : (isnan(_1552) ? 0.0 : max(_1552, 0.0)));
        _1617 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0)));
    }
    else
    {
        _1602 = _1603;
        _1604 = _1603;
        _1605 = _1603;
        _1606 = _1603;
        _1607 = _1603;
        _1608 = _1603;
        _1609 = _1603;
        _1610 = _1603;
        _1611 = _1603;
        _1612 = _1603;
        _1613 = _1603;
        _1614 = _1603;
        _1615 = 0.0;
        _1616 = 0.0;
        _1617 = 0.0;
    }
    float _1909;
    float _1910;
    float _1911;
    float _1912;
    float _1913;
    float _1914;
    float _1915;
    float _1916;
    float _1917;
    float _1918;
    float _1919;
    float _1920;
    float _1921;
    float _1922;
    float _1923;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1640 = fma(_1301, cbModelParam._m0[30u].z, fma(_1297, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1293));
        float _1644 = fma(_1301, cbModelParam._m0[31u].z, fma(_1297, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1293));
        float _1648 = fma(_1301, cbModelParam._m0[32u].z, fma(_1297, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1293));
        float _1671 = _1293 + _1082;
        float _1672 = _1297 + _1083;
        float _1673 = _1301 + _1084;
        float _1683 = fma(_1673, cbModelParam._m0[30u].z, fma(_1672, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1671)) - _1640;
        float _1684 = fma(_1673, cbModelParam._m0[31u].z, fma(_1672, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1671)) - _1644;
        float _1685 = fma(_1673, cbModelParam._m0[32u].z, fma(_1672, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1671)) - _1648;
        float _1689 = inversesqrt(dot(vec3(_1683, _1684, _1685), vec3(_1683, _1684, _1685)));
        float _1702 = ((_1689 * _1683) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1640 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1703 = ((_1689 * _1684) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1644 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1704 = ((_1689 * _1685) / cbModelParam._m0[35u].z) + ((((((_1648 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1706 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1702, _1703, _1704), 0.0);
        vec4 _1713 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1702, _1703, _1704), 0.0);
        vec4 _1720 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1702, _1703, _1704), 0.0);
        vec4 _1727 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1702, _1703, _1704), 0.0);
        float _1739 = exp2((_1706.w + (-0.5)) * 20.0) * 2.0;
        float _1740 = _1739 * (_1706.x + (-0.5));
        float _1741 = _1739 * (_1706.y + (-0.5));
        float _1742 = _1739 * (_1706.z + (-0.5));
        float _1749 = exp2((_1713.w + (-0.5)) * 20.0) * 2.0;
        float _1750 = _1749 * (_1713.x + (-0.5));
        float _1751 = _1749 * (_1713.y + (-0.5));
        float _1752 = _1749 * (_1713.z + (-0.5));
        float _1759 = exp2((_1720.w + (-0.5)) * 20.0) * 2.0;
        float _1760 = _1759 * (_1720.x + (-0.5));
        float _1761 = _1759 * (_1720.y + (-0.5));
        float _1762 = _1759 * (_1720.z + (-0.5));
        float _1769 = exp2((_1727.w + (-0.5)) * 20.0) * 2.0;
        float _1770 = _1769 * (_1727.x + (-0.5));
        float _1771 = _1769 * (_1727.y + (-0.5));
        float _1772 = _1769 * (_1727.z + (-0.5));
        float _1773 = isnan(0.0) ? _1770 : (isnan(_1770) ? 0.0 : max(_1770, 0.0));
        float _1774 = isnan(0.0) ? _1771 : (isnan(_1771) ? 0.0 : max(_1771, 0.0));
        float _1775 = isnan(0.0) ? _1772 : (isnan(_1772) ? 0.0 : max(_1772, 0.0));
        float _1776 = _1740 * 0.5;
        float _1777 = _1750 * 0.5;
        float _1778 = _1760 * 0.5;
        float _1779 = dot(vec3(_1776, _1777, _1778), vec3(_1776, _1777, _1778));
        float _1784 = (_1779 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1779);
        float _1792 = (dot(vec3(_1082, _1083, _1084), vec3(_1784 * _1776, _1784 * _1777, _1784 * _1778)) + 1.0) * 0.5;
        float _4561 = isnan(0.0) ? _1792 : (isnan(_1792) ? 0.0 : max(_1792, 0.0));
        float _1801 = sqrt(((_1777 * _1777) + (_1776 * _1776)) + (_1778 * _1778)) / (_1773 + 9.9999997473787516355514526367188e-06);
        float _4572 = isnan(0.0) ? _1801 : (isnan(_1801) ? 0.0 : max(_1801, 0.0));
        float _1802 = isnan(1.0) ? _4572 : (isnan(_4572) ? 1.0 : min(_4572, 1.0));
        float _1803 = _1802 * 2.0;
        float _1807 = (1.0 - _1802) / (_1802 + 1.0);
        float _4583 = isnan(0.0) ? _1807 : (isnan(_1807) ? 0.0 : max(_1807, 0.0));
        float _1808 = isnan(1.0) ? _4583 : (isnan(_4583) ? 1.0 : min(_4583, 1.0));
        float _1817 = ((((1.0 - _1808) * (_1803 + 2.0)) * exp2(log2(isnan(1.0) ? _4561 : (isnan(_4561) ? 1.0 : min(_4561, 1.0))) * (_1803 + 1.0))) + _1808) * _1773;
        float _1818 = _1741 * 0.5;
        float _1819 = _1751 * 0.5;
        float _1820 = _1761 * 0.5;
        float _1821 = dot(vec3(_1818, _1819, _1820), vec3(_1818, _1819, _1820));
        float _1826 = (_1821 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1821);
        float _1834 = (dot(vec3(_1082, _1083, _1084), vec3(_1826 * _1818, _1826 * _1819, _1826 * _1820)) + 1.0) * 0.5;
        float _4594 = isnan(0.0) ? _1834 : (isnan(_1834) ? 0.0 : max(_1834, 0.0));
        float _1843 = sqrt(((_1819 * _1819) + (_1818 * _1818)) + (_1820 * _1820)) / (_1774 + 9.9999997473787516355514526367188e-06);
        float _4605 = isnan(0.0) ? _1843 : (isnan(_1843) ? 0.0 : max(_1843, 0.0));
        float _1844 = isnan(1.0) ? _4605 : (isnan(_4605) ? 1.0 : min(_4605, 1.0));
        float _1845 = _1844 * 2.0;
        float _1849 = (1.0 - _1844) / (_1844 + 1.0);
        float _4616 = isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0));
        float _1850 = isnan(1.0) ? _4616 : (isnan(_4616) ? 1.0 : min(_4616, 1.0));
        float _1859 = ((((1.0 - _1850) * (_1845 + 2.0)) * exp2(log2(isnan(1.0) ? _4594 : (isnan(_4594) ? 1.0 : min(_4594, 1.0))) * (_1845 + 1.0))) + _1850) * _1774;
        float _1860 = _1742 * 0.5;
        float _1861 = _1752 * 0.5;
        float _1862 = _1762 * 0.5;
        float _1863 = dot(vec3(_1860, _1861, _1862), vec3(_1860, _1861, _1862));
        float _1868 = (_1863 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1863);
        float _1876 = (dot(vec3(_1082, _1083, _1084), vec3(_1868 * _1860, _1868 * _1861, _1868 * _1862)) + 1.0) * 0.5;
        float _4627 = isnan(0.0) ? _1876 : (isnan(_1876) ? 0.0 : max(_1876, 0.0));
        float _1885 = sqrt(((_1861 * _1861) + (_1860 * _1860)) + (_1862 * _1862)) / (_1775 + 9.9999997473787516355514526367188e-06);
        float _4638 = isnan(0.0) ? _1885 : (isnan(_1885) ? 0.0 : max(_1885, 0.0));
        float _1886 = isnan(1.0) ? _4638 : (isnan(_4638) ? 1.0 : min(_4638, 1.0));
        float _1887 = _1886 * 2.0;
        float _1891 = (1.0 - _1886) / (_1886 + 1.0);
        float _4649 = isnan(0.0) ? _1891 : (isnan(_1891) ? 0.0 : max(_1891, 0.0));
        float _1892 = isnan(1.0) ? _4649 : (isnan(_4649) ? 1.0 : min(_4649, 1.0));
        float _1901 = ((((1.0 - _1892) * (_1887 + 2.0)) * exp2(log2(isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0))) * (_1887 + 1.0))) + _1892) * _1775;
        _1909 = _1742;
        _1910 = _1741;
        _1911 = _1740;
        _1912 = _1752;
        _1913 = _1751;
        _1914 = _1750;
        _1915 = _1762;
        _1916 = _1761;
        _1917 = _1760;
        _1918 = _1775;
        _1919 = _1774;
        _1920 = _1773;
        _1921 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1817 : (isnan(_1817) ? 0.0 : max(_1817, 0.0)));
        _1922 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1859 : (isnan(_1859) ? 0.0 : max(_1859, 0.0)));
        _1923 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1901 : (isnan(_1901) ? 0.0 : max(_1901, 0.0)));
    }
    else
    {
        _1909 = _1603;
        _1910 = _1603;
        _1911 = _1603;
        _1912 = _1603;
        _1913 = _1603;
        _1914 = _1603;
        _1915 = _1603;
        _1916 = _1603;
        _1917 = _1603;
        _1918 = _1603;
        _1919 = _1603;
        _1920 = _1603;
        _1921 = 0.0;
        _1922 = 0.0;
        _1923 = 0.0;
    }
    float _1933 = (cbModelParam._m0[1u].x * (_1921 - _1615)) + _1615;
    float _1934 = (cbModelParam._m0[1u].x * (_1922 - _1616)) + _1616;
    float _1935 = (cbModelParam._m0[1u].x * (_1923 - _1617)) + _1617;
    float _1956 = fma(_1935, cbSceneParam._m0[89u].z, fma(_1934, cbSceneParam._m0[89u].y, _1933 * cbSceneParam._m0[89u].x));
    float _1959 = fma(_1935, cbSceneParam._m0[90u].z, fma(_1934, cbSceneParam._m0[90u].y, _1933 * cbSceneParam._m0[90u].x));
    float _1962 = fma(_1935, cbSceneParam._m0[91u].z, fma(_1934, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1933));
    float _1977 = _1240 * 0.5;
    float _1978 = _1241 * 0.5;
    float _1979 = _1242 * 0.5;
    float _1980 = dot(vec4(_1977, _1978, _1979, 1.0), vec4(_1911, _1914, _1917, _1920));
    float _1983 = dot(vec4(_1977, _1978, _1979, 1.0), vec4(_1910, _1913, _1916, _1919));
    float _1986 = dot(vec4(_1977, _1978, _1979, 1.0), vec4(_1909, _1912, _1915, _1918));
    float _2020;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1993 = dot(vec4(_1977, _1978, _1979, 1.0), vec4(_1602, _1606, _1609, _1612));
        float _1997 = dot(vec4(_1977, _1978, _1979, 1.0), vec4(_1604, _1607, _1610, _1613));
        float _2001 = dot(vec4(_1977, _1978, _1979, 1.0), vec4(_1605, _1608, _1611, _1614));
        float _2008 = dot(vec4(cbModelParam._m0[39u]), vec4(_1977, _1978, _1979, 1.0));
        _2020 = dot(vec3(isnan(0.0) ? _2001 : (isnan(_2001) ? 0.0 : max(_2001, 0.0)), isnan(0.0) ? _1997 : (isnan(_1997) ? 0.0 : max(_1997, 0.0)), isnan(0.0) ? _1993 : (isnan(_1993) ? 0.0 : max(_1993, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2008) ? 0.0 : (isnan(0.0) ? _2008 : max(0.0, _2008))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2020 = 1.0;
    }
    float _2031;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2022 = dot(vec4(cbModelParam._m0[40u]), vec4(_1977, _1978, _1979, 1.0));
        _2031 = dot(vec3(isnan(0.0) ? _1980 : (isnan(_1980) ? 0.0 : max(_1980, 0.0)), isnan(0.0) ? _1983 : (isnan(_1983) ? 0.0 : max(_1983, 0.0)), isnan(0.0) ? _1986 : (isnan(_1986) ? 0.0 : max(_1986, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2022) ? 0.0 : (isnan(0.0) ? _2022 : max(0.0, _2022))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2031 = 1.0;
    }
    float _2035 = (_2031 * cbModelParam._m0[1u].x) + (_2020 * (1.0 - cbModelParam._m0[1u].x));
    float _2045 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1085);
    float _2046 = isnan(_2045) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2045 : min(cbModelParam._m0[25u].z, _2045));
    float _2126;
    float _2128;
    float _2130;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2093 = fma(_1301, cbModelParam._m0[13u].z, fma(_1297, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1293)) + cbModelParam._m0[13u].w;
        float _2097 = fma(_1301, cbModelParam._m0[14u].z, fma(_1297, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1293)) + cbModelParam._m0[14u].w;
        float _2101 = fma(_1301, cbModelParam._m0[15u].z, fma(_1297, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1293)) + cbModelParam._m0[15u].w;
        float _2104 = fma(_1242, cbModelParam._m0[13u].z, fma(_1241, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1240));
        float _2107 = fma(_1242, cbModelParam._m0[14u].z, fma(_1241, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1240));
        float _2110 = fma(_1242, cbModelParam._m0[15u].z, fma(_1241, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1240));
        float _2138;
        if (_2104 > 0.0)
        {
            _2138 = abs((1.0 - _2093) / _2104);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2104 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2093 + 1.0) / _2104);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2138 = frontier_phi_14_12_ladder;
        }
        float _2307;
        if (_2107 > 0.0)
        {
            _2307 = abs((1.0 - _2097) / _2107);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2107 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2097 + 1.0) / _2107);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2307 = frontier_phi_23_19_ladder;
        }
        float _2602;
        if (_2110 > 0.0)
        {
            _2602 = abs((1.0 - _2101) / _2110);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2110 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2101 + 1.0) / _2110);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2602 = frontier_phi_35_30_ladder;
        }
        float _2604 = isnan(_2307) ? _2138 : (isnan(_2138) ? _2307 : min(_2138, _2307));
        float _2605 = isnan(_2602) ? _2604 : (isnan(_2604) ? _2602 : min(_2604, _2602));
        float _2609 = (_2605 * _2104) + _2093;
        float _2610 = (_2605 * _2107) + _2097;
        float _2611 = (_2605 * _2110) + _2101;
        float _2612 = _2605 * 9.9999997473787516355514526367188e-05;
        float _2614 = (-1.0) - _2612;
        float _2616 = _2612 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2611 > _2616) || ((_2611 < _2614) || ((_2610 > _2616) || ((_2610 < _2614) || ((_2609 < _2614) || (_2609 > _2616))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2756 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2611, cbModelParam._m0[9u].z, fma(_2610, cbModelParam._m0[9u].y, _2609 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2611, cbModelParam._m0[10u].z, fma(_2610, cbModelParam._m0[10u].y, _2609 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2611, cbModelParam._m0[11u].z, fma(_2610, cbModelParam._m0[11u].y, _2609 * cbModelParam._m0[11u].x))), _2046);
            frontier_phi_13_35_ladder = _2756.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2756.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2756.x * cbModelParam._m0[1u].y;
        }
        _2126 = frontier_phi_13_35_ladder_2;
        _2128 = frontier_phi_13_35_ladder_1;
        _2130 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2114 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1240, _1241, _1242), _2046);
        _2126 = _2114.x * cbModelParam._m0[1u].y;
        _2128 = _2114.y * cbModelParam._m0[1u].y;
        _2130 = _2114.z * cbModelParam._m0[1u].y;
    }
    float _2134 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1085);
    float _2135 = isnan(_2134) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2134 : min(cbModelParam._m0[25u].w, _2134));
    float _2224;
    float _2226;
    float _2228;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2188 = fma(_1301, cbModelParam._m0[21u].z, fma(_1297, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1293)) + cbModelParam._m0[21u].w;
        float _2192 = fma(_1301, cbModelParam._m0[22u].z, fma(_1297, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1293)) + cbModelParam._m0[22u].w;
        float _2196 = fma(_1301, cbModelParam._m0[23u].z, fma(_1297, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1293)) + cbModelParam._m0[23u].w;
        float _2199 = fma(_1242, cbModelParam._m0[21u].z, fma(_1241, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1240));
        float _2202 = fma(_1242, cbModelParam._m0[22u].z, fma(_1241, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1240));
        float _2205 = fma(_1242, cbModelParam._m0[23u].z, fma(_1241, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1240));
        float _2312;
        if (_2199 > 0.0)
        {
            _2312 = abs((1.0 - _2188) / _2199);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2199 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2188 + 1.0) / _2199);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2312 = frontier_phi_25_21_ladder;
        }
        float _2629;
        if (_2202 > 0.0)
        {
            _2629 = abs((1.0 - _2192) / _2202);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2202 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2192 + 1.0) / _2202);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2629 = frontier_phi_37_32_ladder;
        }
        float _2956;
        if (_2205 > 0.0)
        {
            _2956 = abs((1.0 - _2196) / _2205);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2205 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2196 + 1.0) / _2205);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2956 = frontier_phi_47_44_ladder;
        }
        float _2958 = isnan(_2629) ? _2312 : (isnan(_2312) ? _2629 : min(_2312, _2629));
        float _2959 = isnan(_2956) ? _2958 : (isnan(_2958) ? _2956 : min(_2958, _2956));
        float _2963 = (_2959 * _2199) + _2188;
        float _2964 = (_2959 * _2202) + _2192;
        float _2965 = (_2959 * _2205) + _2196;
        float _2966 = _2959 * 9.9999997473787516355514526367188e-05;
        float _2967 = (-1.0) - _2966;
        float _2969 = _2966 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2965 > _2969) || ((_2965 < _2967) || ((_2964 > _2969) || ((_2964 < _2967) || ((_2963 < _2967) || (_2963 > _2969))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3083 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2965, cbModelParam._m0[17u].z, fma(_2964, cbModelParam._m0[17u].y, _2963 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2965, cbModelParam._m0[18u].z, fma(_2964, cbModelParam._m0[18u].y, _2963 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2965, cbModelParam._m0[19u].z, fma(_2964, cbModelParam._m0[19u].y, _2963 * cbModelParam._m0[19u].x))), _2135);
            frontier_phi_22_47_ladder = _3083.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _3083.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _3083.x * cbModelParam._m0[1u].z;
        }
        _2224 = frontier_phi_22_47_ladder_2;
        _2226 = frontier_phi_22_47_ladder_1;
        _2228 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2208 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1240, _1241, _1242), _2135);
        _2224 = _2208.x * cbModelParam._m0[1u].z;
        _2226 = _2208.y * cbModelParam._m0[1u].z;
        _2228 = _2208.z * cbModelParam._m0[1u].z;
    }
    float _2240 = ((((1.0 - _1261) * ((_1248 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1261 * _1248)) * _1232;
    float _2241 = _2240 * ((cbModelParam._m0[1u].w * (_2224 - _2126)) + _2126);
    float _2242 = _2240 * ((cbModelParam._m0[1u].w * (_2226 - _2128)) + _2128);
    float _2243 = _2240 * ((cbModelParam._m0[1u].w * (_2228 - _2130)) + _2130);
    float _2246 = fma(_2243, cbSceneParam._m0[89u].z, fma(_2242, cbSceneParam._m0[89u].y, _2241 * cbSceneParam._m0[89u].x));
    float _2249 = fma(_2243, cbSceneParam._m0[90u].z, fma(_2242, cbSceneParam._m0[90u].y, _2241 * cbSceneParam._m0[90u].x));
    float _2252 = fma(_2243, cbSceneParam._m0[91u].z, fma(_2242, cbSceneParam._m0[91u].y, _2241 * cbSceneParam._m0[91u].x));
    float _2286 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2290 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2294 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2298 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2299 = _2286 / _2298;
    float _2300 = _2290 / _2298;
    float _2301 = _2294 / _2298;
    float _2448;
    float _2449;
    float _2450;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2328 = ((uint(_2301 > cbSceneParam._m0[59u].y) + uint(_2301 > cbSceneParam._m0[59u].x)) + uint(_2301 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2329 = _2328 + 43u;
        uint _2337 = _2328 + 44u;
        uint _2345 = _2328 + 45u;
        uint _2353 = _2328 + 46u;
        float _2364 = fma(_2298, cbSceneParam._m0[_2329].w, fma(_2294, cbSceneParam._m0[_2329].z, fma(_2290, cbSceneParam._m0[_2329].y, _2286 * cbSceneParam._m0[_2329].x)));
        float _2368 = fma(_2298, cbSceneParam._m0[_2337].w, fma(_2294, cbSceneParam._m0[_2337].z, fma(_2290, cbSceneParam._m0[_2337].y, _2286 * cbSceneParam._m0[_2337].x)));
        float _2376 = fma(_2298, cbSceneParam._m0[_2353].w, fma(_2294, cbSceneParam._m0[_2353].z, fma(_2290, cbSceneParam._m0[_2353].y, _2286 * cbSceneParam._m0[_2353].x)));
        float _2381 = cbSceneParam._m0[33u].z * _2376;
        float _2383 = cbSceneParam._m0[33u].w * _2376;
        float _2386 = fma(_2298, cbSceneParam._m0[_2345].w, fma(_2294, cbSceneParam._m0[_2345].z, fma(_2290, cbSceneParam._m0[_2345].y, _2286 * cbSceneParam._m0[_2345].x))) / _2376;
        float _2434 = (cbSceneParam._m0[33u].x - sqrt(((_2300 * _2300) + (_2299 * _2299)) + (_2301 * _2301))) * cbSceneParam._m0[33u].y;
        float _4775 = isnan(0.0) ? _2434 : (isnan(_2434) ? 0.0 : max(_2434, 0.0));
        float _2441 = (isnan(1.0) ? _4775 : (isnan(_4775) ? 1.0 : min(_4775, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2381 + _2364) / _2376, (_2383 + _2368) / _2376), _2386), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2383 + _2364) / _2376, (_2368 - _2381) / _2376), _2386), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2364 - _2381) / _2376, (_2368 - _2383) / _2376), _2386), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2364 - _2383) / _2376, (_2381 + _2368) / _2376), _2386), 0.0)).x), vec4(0.25)));
        _2448 = 1.0 - (_2441 * cbSceneParam._m0[34u].x);
        _2449 = 1.0 - (_2441 * cbSceneParam._m0[34u].y);
        _2450 = 1.0 - (_2441 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2448 = 1.0;
        _2449 = 1.0;
        _2450 = 1.0;
    }
    float _2514;
    float _2516;
    float _2518;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2502 = fma(_2298, cbSceneParam._m0[63u].w, fma(_2294, cbSceneParam._m0[63u].z, fma(_2290, cbSceneParam._m0[63u].y, _2286 * cbSceneParam._m0[63u].x)));
        float _2503 = fma(_2298, cbSceneParam._m0[60u].w, fma(_2294, cbSceneParam._m0[60u].z, fma(_2290, cbSceneParam._m0[60u].y, _2286 * cbSceneParam._m0[60u].x))) / _2502;
        float _2504 = fma(_2298, cbSceneParam._m0[61u].w, fma(_2294, cbSceneParam._m0[61u].z, fma(_2290, cbSceneParam._m0[61u].y, _2286 * cbSceneParam._m0[61u].x))) / _2502;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2503 >= cbSceneParam._m0[64u].x) && (_2504 >= cbSceneParam._m0[64u].y)) && (_2503 <= cbSceneParam._m0[64u].z)) && (_2504 <= cbSceneParam._m0[64u].w))
        {
            float _2642 = fma(_2298, cbSceneParam._m0[62u].w, fma(_2294, cbSceneParam._m0[62u].z, fma(_2290, cbSceneParam._m0[62u].y, _2286 * cbSceneParam._m0[62u].x))) / _2502;
            float _2646 = isnan(cbSceneParam._m0[41u].w) ? _2642 : (isnan(_2642) ? cbSceneParam._m0[41u].w : max(_2642, cbSceneParam._m0[41u].w));
            float _2689 = (cbSceneParam._m0[33u].x - sqrt(((_2300 * _2300) + (_2299 * _2299)) + (_2301 * _2301))) * cbSceneParam._m0[33u].y;
            float _4791 = isnan(0.0) ? _2689 : (isnan(_2689) ? 0.0 : max(_2689, 0.0));
            float _2696 = (isnan(1.0) ? _4791 : (isnan(_4791) ? 1.0 : min(_4791, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2503, cbSceneParam._m0[33u].w + _2504), _2646), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2503, _2504 - cbSceneParam._m0[33u].z), _2646), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2503 - cbSceneParam._m0[33u].z, _2504 - cbSceneParam._m0[33u].w), _2646), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2503 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2504), _2646), 0.0)).x), vec4(0.25)));
            float _2700 = 1.0 - (_2696 * cbSceneParam._m0[34u].x);
            float _2701 = 1.0 - (_2696 * cbSceneParam._m0[34u].y);
            float _2702 = 1.0 - (_2696 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2702) ? _2450 : (isnan(_2450) ? _2702 : min(_2450, _2702));
            frontier_phi_34_33_ladder_1 = isnan(_2701) ? _2449 : (isnan(_2449) ? _2701 : min(_2449, _2701));
            frontier_phi_34_33_ladder_2 = isnan(_2700) ? _2448 : (isnan(_2448) ? _2700 : min(_2448, _2700));
        }
        else
        {
            frontier_phi_34_33_ladder = _2450;
            frontier_phi_34_33_ladder_1 = _2449;
            frontier_phi_34_33_ladder_2 = _2448;
        }
        _2514 = frontier_phi_34_33_ladder_2;
        _2516 = frontier_phi_34_33_ladder_1;
        _2518 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2514 = _2448;
        _2516 = _2449;
        _2518 = _2450;
    }
    uvec4 _2523 = floatBitsToUint(cbInstanceData._m0[_291 + 5u]);
    uint _2525 = _2523.x * 14u;
    uint _2526 = _2525 + 13u;
    float _2533 = _1232 + (-1.0);
    float _2538 = (cbLight._m0[_2526].x * _2533) + 1.0;
    float _2539 = (cbLight._m0[_2526].y * _2533) + 1.0;
    float _2540 = (cbLight._m0[_2526].z * _2533) + 1.0;
    float _2541 = (cbLight._m0[_2526].w * _2533) + 1.0;
    uint _2542 = _2525 + 5u;
    float _2548 = isnan(1.0) ? _2539 : (isnan(_2539) ? 1.0 : min(_2539, 1.0));
    uint _2552 = _2525 + 4u;
    float _2561 = isnan(1.0) ? _2538 : (isnan(_2538) ? 1.0 : min(_2538, 1.0));
    uint _2565 = _2525 | 1u;
    float _2576 = dot(vec3(cbLight._m0[_2525].xyz), vec3(_1082, _1083, _1084));
    float _2579 = dot(vec3(cbLight._m0[_2565].xyz), vec3(_1082, _1083, _1084));
    float _4827 = isnan(0.0) ? _2576 : (isnan(_2576) ? 0.0 : max(_2576, 0.0));
    float _4838 = isnan(0.0) ? _2579 : (isnan(_2579) ? 0.0 : max(_2579, 0.0));
    float _2584 = (isnan(1.0) ? _4827 : (isnan(_4827) ? 1.0 : min(_4827, 1.0))) * 0.3183098733425140380859375;
    float _2586 = (isnan(1.0) ? _4838 : (isnan(_4838) ? 1.0 : min(_4838, 1.0))) * 0.3183098733425140380859375;
    float _2593 = ((cbLight._m0[_2542].x * _2548) * _2586) + (((cbLight._m0[_2552].x * _2514) * _2561) * _2584);
    float _2594 = ((_2548 * cbLight._m0[_2542].y) * _2586) + (((cbLight._m0[_2552].y * _2516) * _2561) * _2584);
    float _2595 = ((_2548 * cbLight._m0[_2542].z) * _2586) + (((cbLight._m0[_2552].z * _2518) * _2561) * _2584);
    uvec4 _2599 = floatBitsToUint(cbLight._m0[_2525 + 12u]);
    bool _2601 = _2599.x == 0u;
    float _2703;
    float _2705;
    float _2707;
    if (_2601)
    {
        _2703 = _2593;
        _2705 = _2594;
        _2707 = _2595;
    }
    else
    {
        uint _2711 = _2525 + 6u;
        float _2727 = (dot(vec3(cbLight._m0[_2525 + 2u].xyz), vec3(_1082, _1083, _1084)) * 0.5) + 0.5;
        float _2728 = _2727 * _2727;
        float _4849 = isnan(0.0) ? _2728 : (isnan(_2728) ? 0.0 : max(_2728, 0.0));
        float _2729 = isnan(1.0) ? _4849 : (isnan(_4849) ? 1.0 : min(_4849, 1.0));
        float _2730 = isnan(1.0) ? _2540 : (isnan(_2540) ? 1.0 : min(_2540, 1.0));
        _2703 = (((cbLight._m0[_2711].x * 0.3183098733425140380859375) * _2729) * _2730) + _2593;
        _2705 = (((cbLight._m0[_2711].y * 0.3183098733425140380859375) * _2729) * _2730) + _2594;
        _2707 = (((cbLight._m0[_2711].z * 0.3183098733425140380859375) * _2729) * _2730) + _2595;
    }
    bool _2710 = _2599.y == 0u;
    float _2765;
    float _2767;
    float _2769;
    if (_2710)
    {
        _2765 = _2703;
        _2767 = _2705;
        _2769 = _2707;
    }
    else
    {
        uint _2927 = _2525 + 7u;
        float _2943 = (dot(vec3(cbLight._m0[_2525 + 3u].xyz), vec3(_1082, _1083, _1084)) * 0.5) + 0.5;
        float _2944 = _2943 * _2943;
        float _4865 = isnan(0.0) ? _2944 : (isnan(_2944) ? 0.0 : max(_2944, 0.0));
        float _2945 = isnan(1.0) ? _4865 : (isnan(_4865) ? 1.0 : min(_4865, 1.0));
        float _2946 = isnan(1.0) ? _2541 : (isnan(_2541) ? 1.0 : min(_2541, 1.0));
        _2765 = (((cbLight._m0[_2927].x * 0.3183098733425140380859375) * _2945) * _2946) + _2703;
        _2767 = (((cbLight._m0[_2927].y * 0.3183098733425140380859375) * _2945) * _2946) + _2705;
        _2769 = (((cbLight._m0[_2927].z * 0.3183098733425140380859375) * _2945) * _2946) + _2707;
    }
    uint _2772 = _2525 + 8u;
    float _2785 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2525].w)) * _1085) * 0.949999988079071044921875);
    float _2786 = _2785 * _2785;
    float _2787 = cbLight._m0[_2525].x + _1161;
    float _2788 = cbLight._m0[_2525].y + _1162;
    float _2789 = cbLight._m0[_2525].z + _1163;
    float _2793 = inversesqrt(dot(vec3(_2787, _2788, _2789), vec3(_2787, _2788, _2789)));
    float _2794 = _2793 * _2787;
    float _2795 = _2793 * _2788;
    float _2796 = _2793 * _2789;
    float _2797 = dot(vec3(_1082, _1083, _1084), vec3(cbLight._m0[_2525].xyz));
    float _4881 = isnan(0.0) ? _2797 : (isnan(_2797) ? 0.0 : max(_2797, 0.0));
    float _2800 = isnan(1.0) ? _4881 : (isnan(_4881) ? 1.0 : min(_4881, 1.0));
    float _4892 = isnan(0.0) ? _1233 : (isnan(_1233) ? 0.0 : max(_1233, 0.0));
    float _2801 = isnan(1.0) ? _4892 : (isnan(_4892) ? 1.0 : min(_4892, 1.0));
    float _2802 = dot(vec3(_1082, _1083, _1084), vec3(_2794, _2795, _2796));
    float _4903 = isnan(0.0) ? _2802 : (isnan(_2802) ? 0.0 : max(_2802, 0.0));
    float _2805 = isnan(1.0) ? _4903 : (isnan(_4903) ? 1.0 : min(_4903, 1.0));
    float _2806 = dot(vec3(cbLight._m0[_2525].xyz), vec3(_2794, _2795, _2796));
    float _4914 = isnan(0.0) ? _2806 : (isnan(_2806) ? 0.0 : max(_2806, 0.0));
    float _2810 = _2786 * _2786;
    float _2814 = ((_2805 * _2805) * (_2810 + (-1.0))) + 1.0;
    float _2825 = (exp2(log2(1.0 - (isnan(1.0) ? _4914 : (isnan(_4914) ? 1.0 : min(_4914, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2826 = 1.0 - _2786;
    float _2837 = (0.5 / (((_2801 * ((_2800 * _2826) + _2786)) + 9.9999999392252902907785028219223e-09) + (((_2801 * _2826) + _2786) * _2800))) * _2800;
    float _4925 = isnan(0.0) ? _2837 : (isnan(_2837) ? 0.0 : max(_2837, 0.0));
    float _2839 = (isnan(1.0) ? _4925 : (isnan(_4925) ? 1.0 : min(_4925, 1.0))) * (_2810 / ((_2814 * _2814) * 3.141590118408203125));
    uint _2853 = _2525 + 9u;
    float _2864 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2565].w)) * _1085) * 0.949999988079071044921875);
    float _2865 = _2864 * _2864;
    float _2866 = cbLight._m0[_2565].x + _1161;
    float _2867 = cbLight._m0[_2565].y + _1162;
    float _2868 = cbLight._m0[_2565].z + _1163;
    float _2872 = inversesqrt(dot(vec3(_2866, _2867, _2868), vec3(_2866, _2867, _2868)));
    float _2873 = _2872 * _2866;
    float _2874 = _2872 * _2867;
    float _2875 = _2872 * _2868;
    float _2876 = dot(vec3(_1082, _1083, _1084), vec3(cbLight._m0[_2565].xyz));
    float _4936 = isnan(0.0) ? _2876 : (isnan(_2876) ? 0.0 : max(_2876, 0.0));
    float _2879 = isnan(1.0) ? _4936 : (isnan(_4936) ? 1.0 : min(_4936, 1.0));
    float _2880 = dot(vec3(_1082, _1083, _1084), vec3(_2873, _2874, _2875));
    float _4947 = isnan(0.0) ? _2880 : (isnan(_2880) ? 0.0 : max(_2880, 0.0));
    float _2883 = isnan(1.0) ? _4947 : (isnan(_4947) ? 1.0 : min(_4947, 1.0));
    float _2884 = dot(vec3(cbLight._m0[_2565].xyz), vec3(_2873, _2874, _2875));
    float _4958 = isnan(0.0) ? _2884 : (isnan(_2884) ? 0.0 : max(_2884, 0.0));
    float _2888 = _2865 * _2865;
    float _2892 = ((_2883 * _2883) * (_2888 + (-1.0))) + 1.0;
    float _2901 = (exp2(log2(1.0 - (isnan(1.0) ? _4958 : (isnan(_4958) ? 1.0 : min(_4958, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2902 = 1.0 - _2865;
    float _2912 = (0.5 / (((_2801 * ((_2879 * _2902) + _2865)) + 9.9999999392252902907785028219223e-09) + (((_2801 * _2902) + _2865) * _2879))) * _2879;
    float _4969 = isnan(0.0) ? _2912 : (isnan(_2912) ? 0.0 : max(_2912, 0.0));
    float _2914 = (isnan(1.0) ? _4969 : (isnan(_4969) ? 1.0 : min(_4969, 1.0))) * (_2888 / ((_2892 * _2892) * 3.141590118408203125));
    float _2924 = (((_2901 * cbLight._m0[_2853].x) * _2914) * _2548) + ((((cbLight._m0[_2772].x * _2514) * _2825) * _2839) * _2561);
    float _2925 = (((_2901 * cbLight._m0[_2853].y) * _2914) * _2548) + ((((cbLight._m0[_2772].y * _2516) * _2825) * _2839) * _2561);
    float _2926 = (((_2901 * cbLight._m0[_2853].z) * _2914) * _2548) + ((((cbLight._m0[_2772].z * _2518) * _2825) * _2839) * _2561);
    float _2982;
    float _2984;
    float _2986;
    if (_2601)
    {
        _2982 = _2924;
        _2984 = _2925;
        _2986 = _2926;
    }
    else
    {
        uint _2988 = _2525 + 2u;
        uint _2992 = _2525 + 10u;
        float _3006 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2988].w)) * _1085) * 0.949999988079071044921875);
        float _3007 = _3006 * _3006;
        float _3008 = cbLight._m0[_2988].x + _1161;
        float _3009 = cbLight._m0[_2988].y + _1162;
        float _3010 = cbLight._m0[_2988].z + _1163;
        float _3014 = inversesqrt(dot(vec3(_3008, _3009, _3010), vec3(_3008, _3009, _3010)));
        float _3015 = _3014 * _3008;
        float _3016 = _3014 * _3009;
        float _3017 = _3014 * _3010;
        float _3018 = dot(vec3(_1082, _1083, _1084), vec3(cbLight._m0[_2988].xyz));
        float _4980 = isnan(0.0) ? _3018 : (isnan(_3018) ? 0.0 : max(_3018, 0.0));
        float _3021 = isnan(1.0) ? _4980 : (isnan(_4980) ? 1.0 : min(_4980, 1.0));
        float _3022 = dot(vec3(_1082, _1083, _1084), vec3(_3015, _3016, _3017));
        float _4991 = isnan(0.0) ? _3022 : (isnan(_3022) ? 0.0 : max(_3022, 0.0));
        float _3025 = isnan(1.0) ? _4991 : (isnan(_4991) ? 1.0 : min(_4991, 1.0));
        float _3026 = dot(vec3(cbLight._m0[_2988].xyz), vec3(_3015, _3016, _3017));
        float _5002 = isnan(0.0) ? _3026 : (isnan(_3026) ? 0.0 : max(_3026, 0.0));
        float _3030 = _3007 * _3007;
        float _3034 = ((_3025 * _3025) * (_3030 + (-1.0))) + 1.0;
        float _3043 = (exp2(log2(1.0 - (isnan(1.0) ? _5002 : (isnan(_5002) ? 1.0 : min(_5002, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3044 = 1.0 - _3007;
        float _3054 = (0.5 / (((_2801 * ((_3021 * _3044) + _3007)) + 9.9999999392252902907785028219223e-09) + (((_2801 * _3044) + _3007) * _3021))) * _3021;
        float _5013 = isnan(0.0) ? _3054 : (isnan(_3054) ? 0.0 : max(_3054, 0.0));
        float _3056 = (isnan(1.0) ? _5013 : (isnan(_5013) ? 1.0 : min(_5013, 1.0))) * (_3030 / ((_3034 * _3034) * 3.141590118408203125));
        float _3057 = isnan(1.0) ? _2540 : (isnan(_2540) ? 1.0 : min(_2540, 1.0));
        _2982 = (((_3043 * cbLight._m0[_2992].x) * _3056) * _3057) + _2924;
        _2984 = (((_3043 * cbLight._m0[_2992].y) * _3056) * _3057) + _2925;
        _2986 = (((_3043 * cbLight._m0[_2992].z) * _3056) * _3057) + _2926;
    }
    float _3088;
    float _3090;
    float _3092;
    if (_2710)
    {
        _3088 = _2982;
        _3090 = _2984;
        _3092 = _2986;
    }
    else
    {
        uint _3099 = _2525 + 3u;
        uint _3103 = _2525 + 11u;
        float _3117 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3099].w)) * _1085) * 0.949999988079071044921875);
        float _3118 = _3117 * _3117;
        float _3119 = cbLight._m0[_3099].x + _1161;
        float _3120 = cbLight._m0[_3099].y + _1162;
        float _3121 = cbLight._m0[_3099].z + _1163;
        float _3125 = inversesqrt(dot(vec3(_3119, _3120, _3121), vec3(_3119, _3120, _3121)));
        float _3126 = _3125 * _3119;
        float _3127 = _3125 * _3120;
        float _3128 = _3125 * _3121;
        float _3129 = dot(vec3(_1082, _1083, _1084), vec3(cbLight._m0[_3099].xyz));
        float _5029 = isnan(0.0) ? _3129 : (isnan(_3129) ? 0.0 : max(_3129, 0.0));
        float _3132 = isnan(1.0) ? _5029 : (isnan(_5029) ? 1.0 : min(_5029, 1.0));
        float _3133 = dot(vec3(_1082, _1083, _1084), vec3(_3126, _3127, _3128));
        float _5040 = isnan(0.0) ? _3133 : (isnan(_3133) ? 0.0 : max(_3133, 0.0));
        float _3136 = isnan(1.0) ? _5040 : (isnan(_5040) ? 1.0 : min(_5040, 1.0));
        float _3137 = dot(vec3(cbLight._m0[_3099].xyz), vec3(_3126, _3127, _3128));
        float _5051 = isnan(0.0) ? _3137 : (isnan(_3137) ? 0.0 : max(_3137, 0.0));
        float _3141 = _3118 * _3118;
        float _3145 = ((_3136 * _3136) * (_3141 + (-1.0))) + 1.0;
        float _3154 = (exp2(log2(1.0 - (isnan(1.0) ? _5051 : (isnan(_5051) ? 1.0 : min(_5051, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3155 = 1.0 - _3118;
        float _3165 = (0.5 / (((_2801 * ((_3132 * _3155) + _3118)) + 9.9999999392252902907785028219223e-09) + (((_2801 * _3155) + _3118) * _3132))) * _3132;
        float _5062 = isnan(0.0) ? _3165 : (isnan(_3165) ? 0.0 : max(_3165, 0.0));
        float _3167 = (isnan(1.0) ? _5062 : (isnan(_5062) ? 1.0 : min(_5062, 1.0))) * (_3141 / ((_3145 * _3145) * 3.141590118408203125));
        float _3168 = isnan(1.0) ? _2541 : (isnan(_2541) ? 1.0 : min(_2541, 1.0));
        _3088 = (((_3154 * cbLight._m0[_3103].x) * _3167) * _3168) + _2982;
        _3090 = (((_3154 * cbLight._m0[_3103].y) * _3167) * _3168) + _2984;
        _3092 = (((_3154 * cbLight._m0[_3103].z) * _3167) * _3168) + _2986;
    }
    float _3234;
    float _3236;
    float _3238;
    float _3240;
    float _3242;
    float _3244;
    if (_2523.y == 0u)
    {
        uvec4 _3189 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3190 = _3189.x;
        uint _3201 = uint((float(_3189.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1170) / _3190))) + floor(float(uint(cbSceneParam._m0[85u].x * _1169) / _3190)));
        float _3211 = (log2(_2301 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3212 = isnan(0.0) ? _3211 : (isnan(_3211) ? 0.0 : max(_3211, 0.0));
        uint _3215 = uint(isnan(14.0) ? _3212 : (isnan(_3212) ? 14.0 : min(_3212, 14.0)));
        uvec4 _3220 = texelFetch(g_lightClusterGridBuffer, int(((_3215 << 2u) + (_3201 << 6u)) >> 2u));
        uint _3221 = _3220.x;
        uint _3222 = _3189.z;
        float _3301;
        float _3303;
        float _3305;
        float _3307;
        float _3309;
        float _3311;
        if (((((1u << ((_3222 >> 4u) & 15u)) + 4294967295u) & _3221) == 0u) || ((_3222 & 240u) == 0u))
        {
            _3301 = 0.0;
            _3303 = 0.0;
            _3305 = 0.0;
            _3307 = 0.0;
            _3309 = 0.0;
            _3311 = 0.0;
        }
        else
        {
            float _3302;
            float _3304;
            float _3306;
            float _3308;
            float _3310;
            float _3312;
            float _3445 = 0.0;
            float _3446 = 0.0;
            float _3447 = 0.0;
            float _3448 = 0.0;
            float _3449 = 0.0;
            float _3450 = 0.0;
            uint _3451 = 0u;
            uint _3460;
            bool _3461;
            for (;;)
            {
                _3460 = texelFetch(g_lightClassification, int((((_3215 << 5u) + (_3201 << 9u)) + (_3451 << 2u)) >> 2u)).x;
                _3461 = _3460 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3461)
                {
                    frontier_phi_66_pred = _3450;
                    frontier_phi_66_pred_1 = _3449;
                    frontier_phi_66_pred_2 = _3448;
                    frontier_phi_66_pred_3 = _3447;
                    frontier_phi_66_pred_4 = _3446;
                    frontier_phi_66_pred_5 = _3445;
                }
                else
                {
                    float _3569;
                    float _3570;
                    float _3571;
                    float _3572;
                    float _3573;
                    float _3574;
                    uint _3575;
                    _3569 = _3445;
                    _3570 = _3446;
                    _3571 = _3447;
                    _3572 = _3448;
                    _3573 = _3449;
                    _3574 = _3450;
                    _3575 = _3460;
                    float _3501;
                    float _3502;
                    float _3503;
                    float _3504;
                    float _3505;
                    float _3506;
                    for (;;)
                    {
                        uint _3579 = uint(findLSB(_3575)) + (_3451 << 5u);
                        uint _3576 = (_3575 + 4294967295u) & _3575;
                        uint _3581 = _3579 * 48u;
                        vec4 _3595 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3581)).x, texelFetch(g_PointLightRenderingBuffer, int(_3581 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3581 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3581 + 3u)).x));
                        uint _3601 = (_3579 * 48u) + 4u;
                        vec4 _3614 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3601)).x, texelFetch(g_PointLightRenderingBuffer, int(_3601 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3601 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3601 + 3u)).x));
                        uint _3620 = (_3579 * 48u) + 8u;
                        vec3 _3631 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3620)).x, texelFetch(g_PointLightRenderingBuffer, int(_3620 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3620 + 2u)).x));
                        float _3635 = _3595.x - _2299;
                        float _3636 = _3595.y - _2300;
                        float _3637 = _3595.z - _2301;
                        float _3638 = dot(vec3(_3635, _3636, _3637), vec3(_3635, _3636, _3637));
                        float _3641 = inversesqrt(_3638);
                        float _3642 = _3641 * _3635;
                        float _3643 = _3641 * _3636;
                        float _3644 = _3641 * _3637;
                        float _3645 = dot(vec3(_1188, _1191, _1194), vec3(_3642, _3643, _3644));
                        float _3650 = 1.0 - (_3638 * _3595.w);
                        float _5088 = isnan(0.0) ? _3650 : (isnan(_3650) ? 0.0 : max(_3650, 0.0));
                        float _3651 = isnan(1.0) ? _5088 : (isnan(_5088) ? 1.0 : min(_5088, 1.0));
                        float _3652 = sqrt(_3638) * _3614.w;
                        float _3655 = 1.39999997615814208984375 / (_3652 + 1.39999997615814208984375);
                        float _3656 = _3655 * _3655;
                        float _3659 = ((1.0 - _3656) * _3645) + _3656;
                        float _3662 = _3652 * _3652;
                        float _3666 = ((isnan(0.0) ? _3659 : (isnan(_3659) ? 0.0 : max(_3659, 0.0))) * _3651) / ((_3662 * 0.699999988079071044921875) + 1.0);
                        float _3670 = (-0.0) - _2299;
                        float _3671 = (-0.0) - _2300;
                        float _3672 = (-0.0) - _2301;
                        float _3676 = inversesqrt(dot(vec3(_3670, _3671, _3672), vec3(_3670, _3671, _3672)));
                        float _3677 = _3676 * _3670;
                        float _3678 = _3676 * _3671;
                        float _3679 = _3676 * _3672;
                        float _3686 = exp2(log2(1.0 / ((_3662 * 3.5) + 5.0)) * 0.25);
                        float _3687 = 1.0 - _1248;
                        float _3694 = sqrt(1.0 - ((1.0 - (_3687 * _3687)) * (1.0 - (_3686 * _3686))));
                        float _3695 = _3694 * _3694;
                        float _3696 = _3695 * _3695;
                        float _3697 = _3677 + _3642;
                        float _3698 = _3678 + _3643;
                        float _3699 = _3679 + _3644;
                        float _3703 = inversesqrt(dot(vec3(_3697, _3698, _3699), vec3(_3697, _3698, _3699)));
                        float _3707 = dot(vec3(_1188, _1191, _1194), vec3(_3677, _3678, _3679));
                        float _5104 = isnan(0.0) ? _3707 : (isnan(_3707) ? 0.0 : max(_3707, 0.0));
                        float _3710 = isnan(1.0) ? _5104 : (isnan(_5104) ? 1.0 : min(_5104, 1.0));
                        float _3711 = dot(vec3(_1188, _1191, _1194), vec3(_3703 * _3697, _3703 * _3698, _3703 * _3699));
                        float _5115 = isnan(0.0) ? _3711 : (isnan(_3711) ? 0.0 : max(_3711, 0.0));
                        float _3714 = isnan(1.0) ? _5115 : (isnan(_5115) ? 1.0 : min(_5115, 1.0));
                        float _3718 = ((_3714 * _3714) * (_3696 + (-1.0))) + 1.0;
                        float _3719 = _3655 * _3695;
                        float _3720 = _3719 * _3719;
                        float _3723 = ((1.0 - _3720) * _3645) + _3720;
                        float _5126 = isnan(0.0) ? _3723 : (isnan(_3723) ? 0.0 : max(_3723, 0.0));
                        float _3724 = isnan(1.0) ? _5126 : (isnan(_5126) ? 1.0 : min(_5126, 1.0));
                        float _3725 = 1.0 - _3695;
                        float _3735 = (0.5 / (((_3724 * ((_3710 * _3725) + _3695)) + 9.9999999392252902907785028219223e-09) + (((_3724 * _3725) + _3695) * _3710))) * _3724;
                        float _5137 = isnan(0.0) ? _3735 : (isnan(_3735) ? 0.0 : max(_3735, 0.0));
                        float _3746 = (((_3696 * 3.1415927410125732421875) * (isnan(1.0) ? _5137 : (isnan(_5137) ? 1.0 : min(_5137, 1.0)))) / ((_3718 * _3718) * ((_3662 * 2.1991131305694580078125) + 3.141590118408203125))) * _3651;
                        _3504 = (_3666 * _3614.x) + _3572;
                        _3505 = (_3666 * _3614.y) + _3573;
                        _3506 = (_3666 * _3614.z) + _3574;
                        _3501 = (_3746 * _3631.x) + _3569;
                        _3502 = (_3746 * _3631.y) + _3570;
                        _3503 = (_3746 * _3631.z) + _3571;
                        if (_3576 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3569 = _3501;
                            _3570 = _3502;
                            _3571 = _3503;
                            _3572 = _3504;
                            _3573 = _3505;
                            _3574 = _3506;
                            _3575 = _3576;
                        }
                    }
                    frontier_phi_66_pred = _3506;
                    frontier_phi_66_pred_1 = _3505;
                    frontier_phi_66_pred_2 = _3504;
                    frontier_phi_66_pred_3 = _3503;
                    frontier_phi_66_pred_4 = _3502;
                    frontier_phi_66_pred_5 = _3501;
                }
                _3312 = frontier_phi_66_pred;
                _3310 = frontier_phi_66_pred_1;
                _3308 = frontier_phi_66_pred_2;
                _3306 = frontier_phi_66_pred_3;
                _3304 = frontier_phi_66_pred_4;
                _3302 = frontier_phi_66_pred_5;
                uint _3452 = _3451 + 1u;
                if (_3452 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3445 = _3302;
                    _3446 = _3304;
                    _3447 = _3306;
                    _3448 = _3308;
                    _3449 = _3310;
                    _3450 = _3312;
                    _3451 = _3452;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3301 = _3302;
            _3303 = _3304;
            _3305 = _3306;
            _3307 = _3308;
            _3309 = _3310;
            _3311 = _3312;
        }
        uvec4 _3315 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3316 = _3315.z;
        uint _3318 = (_3316 >> 8u) & 15u;
        float _3413;
        float _3415;
        float _3417;
        float _3419;
        float _3421;
        float _3423;
        if (((4294967295u << _3318) & _3221) == 0u)
        {
            _3413 = _3301;
            _3415 = _3303;
            _3417 = _3305;
            _3419 = _3307;
            _3421 = _3309;
            _3423 = _3311;
        }
        else
        {
            float _3438 = inversesqrt(dot(vec3(_2299, _2300, _2301), vec3(_2299, _2300, _2301)));
            float _3439 = _3438 * _2299;
            float _3440 = _3438 * _2300;
            float _3441 = _3438 * _2301;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3318 < ((_3316 >> 12u) & 15u))
            {
                float _3414;
                float _3416;
                float _3418;
                float _3420;
                float _3422;
                float _3424;
                float _3552 = _3301;
                float _3553 = _3303;
                float _3554 = _3305;
                float _3555 = _3307;
                float _3556 = _3309;
                float _3557 = _3311;
                uint _3558 = _3318;
                uint _3567;
                bool _3568;
                for (;;)
                {
                    _3567 = texelFetch(g_lightClassification, int((((_3215 << 5u) + (_3201 << 9u)) + (_3558 << 2u)) >> 2u)).x;
                    _3568 = _3567 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3568)
                    {
                        frontier_phi_72_pred = _3557;
                        frontier_phi_72_pred_1 = _3556;
                        frontier_phi_72_pred_2 = _3555;
                        frontier_phi_72_pred_3 = _3554;
                        frontier_phi_72_pred_4 = _3553;
                        frontier_phi_72_pred_5 = _3552;
                    }
                    else
                    {
                        float _3751;
                        float _3752;
                        float _3753;
                        float _3754;
                        float _3755;
                        float _3756;
                        float _4044;
                        float _4045;
                        float _4046;
                        float _4047;
                        float _4048;
                        float _4049;
                        float _3764 = _3552;
                        float _3765 = _3553;
                        float _3766 = _3554;
                        float _3767 = _3555;
                        float _3768 = _3556;
                        float _3769 = _3557;
                        uint _3770 = _3567;
                        uint _3771;
                        vec4 _3796;
                        float _3797;
                        vec4 _3812;
                        vec3 _3824;
                        vec4 _3839;
                        vec4 _3854;
                        float _3900;
                        bool _3901;
                        for (;;)
                        {
                            uint _3781 = ((_3558 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3770));
                            _3771 = (_3770 + 4294967295u) & _3770;
                            uint _3783 = _3781 * 40u;
                            _3796 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3783)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3783 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3783 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3783 + 3u)).x));
                            _3797 = _3796.w;
                            uint _3799 = (_3781 * 40u) + 4u;
                            _3812 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3799)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3799 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3799 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3799 + 3u)).x));
                            uint _3814 = (_3781 * 40u) + 8u;
                            _3824 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3814)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3814 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3814 + 2u)).x));
                            uint _3826 = (_3781 * 40u) + 16u;
                            _3839 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3826)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3826 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3826 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3826 + 3u)).x));
                            uint _3841 = (_3781 * 40u) + 20u;
                            _3854 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3841)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3841 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3841 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3841 + 3u)).x));
                            uint _3856 = (_3781 * 40u) + 24u;
                            vec4 _3869 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3856)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3856 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3856 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3856 + 3u)).x));
                            uint _3875 = (_3781 * 40u) + 28u;
                            vec4 _3888 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3875)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3875 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3875 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3875 + 3u)).x));
                            _3900 = fma(_2301, _3888.z, fma(_2300, _3888.y, _3888.x * _2299)) + _3888.w;
                            _3901 = !((fma(_2301, _3869.z, fma(_2300, _3869.y, _3869.x * _2299)) + _3869.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3901)
                            {
                                float _3928 = _3796.x - _2299;
                                float _3929 = _3796.y - _2300;
                                float _3930 = _3796.z - _2301;
                                float _3931 = dot(vec3(_3928, _3929, _3930), vec3(_3928, _3929, _3930));
                                float _3934 = inversesqrt(_3931);
                                float _3935 = _3934 * _3928;
                                float _3936 = _3934 * _3929;
                                float _3937 = _3934 * _3930;
                                float _3941 = 1.0 - (_3931 / (_3797 * _3797));
                                float _5148 = isnan(0.0) ? _3941 : (isnan(_3941) ? 0.0 : max(_3941, 0.0));
                                float _3942 = isnan(1.0) ? _5148 : (isnan(_5148) ? 1.0 : min(_5148, 1.0));
                                float _3946 = sqrt(_3931) * _3812.w;
                                float _3948 = 1.39999997615814208984375 / (_3946 + 1.39999997615814208984375);
                                float _3949 = _3948 * _3948;
                                float _3952 = ((1.0 - _3949) * dot(vec3(_3935, _3936, _3937), vec3(_1188, _1191, _1194))) + _3949;
                                float _3955 = _3946 * _3946;
                                float _3959 = (fma(_2301, _3839.z, fma(_2300, _3839.y, _3839.x * _2299)) + _3839.w) / _3900;
                                float _3960 = (fma(_2301, _3854.z, fma(_2300, _3854.y, _3854.x * _2299)) + _3854.w) / _3900;
                                float _3964 = 1.0 - dot(vec2(_3959, _3960), vec2(_3959, _3960));
                                float _5164 = isnan(0.0) ? _3964 : (isnan(_3964) ? 0.0 : max(_3964, 0.0));
                                float _3965 = isnan(1.0) ? _5164 : (isnan(_5164) ? 1.0 : min(_5164, 1.0));
                                float _3966 = _3965 * (((isnan(0.0) ? _3952 : (isnan(_3952) ? 0.0 : max(_3952, 0.0))) * _3942) / ((_3955 * 0.699999988079071044921875) + 1.0));
                                float _3978 = exp2(log2(1.0 / ((_3955 * 3.5) + 5.0)) * 0.25);
                                float _3979 = 1.0 - _1248;
                                float _3986 = sqrt(1.0 - ((1.0 - (_3979 * _3979)) * (1.0 - (_3978 * _3978))));
                                float _3987 = _3986 * _3986;
                                float _3988 = _3987 * _3987;
                                float _3989 = _3935 - _3439;
                                float _3990 = _3936 - _3440;
                                float _3991 = _3937 - _3441;
                                float _3995 = inversesqrt(dot(vec3(_3989, _3990, _3991), vec3(_3989, _3990, _3991)));
                                float _3999 = dot(vec3(_1188, _1191, _1194), vec3((-0.0) - _3439, (-0.0) - _3440, (-0.0) - _3441));
                                float _5175 = isnan(0.0) ? _3999 : (isnan(_3999) ? 0.0 : max(_3999, 0.0));
                                float _4002 = isnan(1.0) ? _5175 : (isnan(_5175) ? 1.0 : min(_5175, 1.0));
                                float _4003 = dot(vec3(_1188, _1191, _1194), vec3(_3995 * _3989, _3995 * _3990, _3995 * _3991));
                                float _5186 = isnan(0.0) ? _4003 : (isnan(_4003) ? 0.0 : max(_4003, 0.0));
                                float _4006 = isnan(1.0) ? _5186 : (isnan(_5186) ? 1.0 : min(_5186, 1.0));
                                float _4010 = ((_4006 * _4006) * (_3988 + (-1.0))) + 1.0;
                                float _4011 = _3948 * _3987;
                                float _4012 = _4011 * _4011;
                                float _4018 = ((1.0 - _4012) * dot(vec3(_1188, _1191, _1194), vec3(_3935, _3936, _3937))) + _4012;
                                float _5197 = isnan(0.0) ? _4018 : (isnan(_4018) ? 0.0 : max(_4018, 0.0));
                                float _4019 = isnan(1.0) ? _5197 : (isnan(_5197) ? 1.0 : min(_5197, 1.0));
                                float _4020 = 1.0 - _3987;
                                float _4030 = (0.5 / (((_4019 * ((_4002 * _4020) + _3987)) + 9.9999999392252902907785028219223e-09) + (((_4019 * _4020) + _3987) * _4002))) * _4019;
                                float _5208 = isnan(0.0) ? _4030 : (isnan(_4030) ? 0.0 : max(_4030, 0.0));
                                float _4040 = (_3965 * _3942) * (((_3988 * 3.1415927410125732421875) * (isnan(1.0) ? _5208 : (isnan(_5208) ? 1.0 : min(_5208, 1.0)))) / ((_4010 * _4010) * ((_3955 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3966 * _3812.y;
                                frontier_phi_78_pred_1 = _3966 * _3812.x;
                                frontier_phi_78_pred_2 = _4040 * _3824.z;
                                frontier_phi_78_pred_3 = _4040 * _3824.y;
                                frontier_phi_78_pred_4 = _4040 * _3824.x;
                                frontier_phi_78_pred_5 = _3966 * _3812.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _4048 = frontier_phi_78_pred;
                            _4047 = frontier_phi_78_pred_1;
                            _4046 = frontier_phi_78_pred_2;
                            _4045 = frontier_phi_78_pred_3;
                            _4044 = frontier_phi_78_pred_4;
                            _4049 = frontier_phi_78_pred_5;
                            _3754 = _4047 + _3767;
                            _3755 = _4048 + _3768;
                            _3756 = _4049 + _3769;
                            _3751 = _4044 + _3764;
                            _3752 = _4045 + _3765;
                            _3753 = _4046 + _3766;
                            if (_3771 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3764 = _3751;
                                _3765 = _3752;
                                _3766 = _3753;
                                _3767 = _3754;
                                _3768 = _3755;
                                _3769 = _3756;
                                _3770 = _3771;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3756;
                        frontier_phi_72_pred_1 = _3755;
                        frontier_phi_72_pred_2 = _3754;
                        frontier_phi_72_pred_3 = _3753;
                        frontier_phi_72_pred_4 = _3752;
                        frontier_phi_72_pred_5 = _3751;
                    }
                    _3424 = frontier_phi_72_pred;
                    _3422 = frontier_phi_72_pred_1;
                    _3420 = frontier_phi_72_pred_2;
                    _3418 = frontier_phi_72_pred_3;
                    _3416 = frontier_phi_72_pred_4;
                    _3414 = frontier_phi_72_pred_5;
                    uint _3559 = _3558 + 1u;
                    if (_3559 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3552 = _3414;
                        _3553 = _3416;
                        _3554 = _3418;
                        _3555 = _3420;
                        _3556 = _3422;
                        _3557 = _3424;
                        _3558 = _3559;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3424;
                frontier_phi_60_61_ladder_1 = _3422;
                frontier_phi_60_61_ladder_2 = _3418;
                frontier_phi_60_61_ladder_3 = _3416;
                frontier_phi_60_61_ladder_4 = _3414;
                frontier_phi_60_61_ladder_5 = _3420;
            }
            else
            {
                frontier_phi_60_61_ladder = _3311;
                frontier_phi_60_61_ladder_1 = _3309;
                frontier_phi_60_61_ladder_2 = _3305;
                frontier_phi_60_61_ladder_3 = _3303;
                frontier_phi_60_61_ladder_4 = _3301;
                frontier_phi_60_61_ladder_5 = _3307;
            }
            _3413 = frontier_phi_60_61_ladder_4;
            _3415 = frontier_phi_60_61_ladder_3;
            _3417 = frontier_phi_60_61_ladder_2;
            _3419 = frontier_phi_60_61_ladder_5;
            _3421 = frontier_phi_60_61_ladder_1;
            _3423 = frontier_phi_60_61_ladder;
        }
        float _3428 = isnan(1.0) ? _1232 : (isnan(_1232) ? 1.0 : min(_1232, 1.0));
        _3234 = (_3428 * _3419) + _2765;
        _3236 = (_3428 * _3421) + _2767;
        _3238 = (_3428 * _3423) + _2769;
        _3240 = ((_3413 * 0.039999999105930328369140625) * _3428) + _3088;
        _3242 = ((_3415 * 0.039999999105930328369140625) * _3428) + _3090;
        _3244 = ((_3417 * 0.039999999105930328369140625) * _3428) + _3092;
    }
    else
    {
        _3234 = _2765;
        _3236 = _2767;
        _3238 = _2769;
        _3240 = _3088;
        _3242 = _3090;
        _3244 = _3092;
    }
    float _5224 = isnan(0.0) ? _1217 : (isnan(_1217) ? 0.0 : max(_1217, 0.0));
    float _5235 = isnan(0.0) ? _1218 : (isnan(_1218) ? 0.0 : max(_1218, 0.0));
    float _5246 = isnan(0.0) ? _1219 : (isnan(_1219) ? 0.0 : max(_1219, 0.0));
    uint _3264 = _291 + 6u;
    float _3272 = _1169 / cbSceneParam._m0[86u].x;
    float _3273 = _1170 / cbSceneParam._m0[86u].y;
    vec4 _3287 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3272, _3273, (log2((isnan(cbSceneParam._m0[77u].w) ? _1103 : (isnan(_1103) ? cbSceneParam._m0[77u].w : min(_1103, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3289 = _3287.x;
    float _3290 = _3287.y;
    float _3291 = _3287.z;
    float _3292 = _3287.w;
    float _3363;
    float _3365;
    float _3367;
    float _3369;
    if (_1103 > cbSceneParam._m0[78u].w)
    {
        float _3326 = isnan(_1103) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1103 : min(cbSceneParam._m0[80u].w, _1103));
        float _3327 = _3326 / _1103;
        float _3338 = _3327 * _1154;
        float _3339 = _1155 * _3327;
        float _3340 = (-0.0) - _3339;
        float _3341 = _3327 * _1156;
        float _3343 = (cbSceneParam._m0[77u].w * _3340) / _3326;
        float _3344 = _3343 + cbSceneParam._m0[79u].w;
        float _3345 = cbSceneParam._m0[79u].w - _3339;
        float _3351 = sqrt(((_3338 * _3338) + (_3339 * _3339)) + (_3341 * _3341));
        float _3354 = (1.0 - (cbSceneParam._m0[77u].w / _3326)) * _3351;
        float _3359 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3361 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3514;
        if (abs((_3340 - _3343) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3514 = ((((_3344 > 0.0) ? exp2(_3359 * _3344) : (2.0 - exp2(_3361 * _3344))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3354;
        }
        else
        {
            float _3474 = 1.0 / cbSceneParam._m0[80u].x;
            float _3475 = isnan(_3345) ? _3344 : (isnan(_3344) ? _3345 : max(_3344, _3345));
            float _3476 = isnan(_3345) ? _3344 : (isnan(_3344) ? _3345 : min(_3344, _3345));
            float _3485 = isnan(0.0) ? _3475 : (isnan(_3475) ? 0.0 : min(_3475, 0.0));
            float _3486 = isnan(0.0) ? _3476 : (isnan(_3476) ? 0.0 : min(_3476, 0.0));
            _3514 = ((abs(_3351 / _3340) * cbSceneParam._m0[80u].y) * ((((_3485 - _3486) * 2.0) - ((exp2(_3359 * (isnan(0.0) ? _3475 : (isnan(_3475) ? 0.0 : max(_3475, 0.0)))) - exp2(_3359 * (isnan(0.0) ? _3476 : (isnan(_3476) ? 0.0 : max(_3476, 0.0))))) * _3474)) - ((exp2(_3361 * _3485) - exp2(_3361 * _3486)) * _3474))) + (_3354 * cbSceneParam._m0[80u].z);
        }
        vec4 _3516 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3272, _3273, 1.0), 0.0);
        float _3525 = exp2((_3514 * (-1.44269502162933349609375)) * (1.0 - _3516.w));
        float _3526 = log2(_3525);
        float _3542 = log2(_3292);
        _3363 = (exp2(_3542 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3526 * cbSceneParam._m0[78u].x)) * _3516.x) / cbSceneParam._m0[78u].x)) + _3289;
        _3365 = (exp2(_3542 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3526 * cbSceneParam._m0[78u].y)) * _3516.y) / cbSceneParam._m0[78u].y)) + _3290;
        _3367 = (exp2(_3542 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3526 * cbSceneParam._m0[78u].z)) * _3516.z) / cbSceneParam._m0[78u].z)) + _3291;
        _3369 = _3525 * _3292;
    }
    else
    {
        _3363 = _3289;
        _3365 = _3290;
        _3367 = _3291;
        _3369 = _3292;
    }
    float _3381 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3382 = _3381 == 3.0;
    float _3383 = log2(_3369);
    float _3390 = exp2(_3383 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5224 : (isnan(_5224) ? 1.0 : min(_5224, 1.0))) * (_3234 + ((isnan(0.0) ? _1956 : (isnan(_1956) ? 0.0 : max(_1956, 0.0))) * _1232))) + ((_3240 + ((isnan(0.0) ? _2246 : (isnan(_2246) ? 0.0 : max(_2246, 0.0))) * _2035)) * cbPerFrame._m0[3u].x));
    float _3391 = exp2(_3383 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5235 : (isnan(_5235) ? 1.0 : min(_5235, 1.0))) * (_3236 + ((isnan(0.0) ? _1959 : (isnan(_1959) ? 0.0 : max(_1959, 0.0))) * _1232))) + ((_3242 + ((isnan(0.0) ? _2249 : (isnan(_2249) ? 0.0 : max(_2249, 0.0))) * _2035)) * cbPerFrame._m0[3u].x));
    float _3392 = exp2(_3383 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5246 : (isnan(_5246) ? 1.0 : min(_5246, 1.0))) * (_3238 + ((isnan(0.0) ? _1962 : (isnan(_1962) ? 0.0 : max(_1962, 0.0))) * _1232))) + ((_3244 + ((isnan(0.0) ? _2252 : (isnan(_2252) ? 0.0 : max(_2252, 0.0))) * _2035)) * cbPerFrame._m0[3u].x));
    float _3401 = (_3381 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3401 * (_3382 ? _3390 : (_3390 + (cbSceneParam._m0[72u].w * _3363)));
    SV_Target.y = _3401 * (_3382 ? _3391 : (_3391 + (cbSceneParam._m0[72u].w * _3365)));
    SV_Target.z = _3401 * (_3382 ? _3392 : (_3392 + (cbSceneParam._m0[72u].w * _3367)));
    SV_Target.w = cbInstanceData._m0[_3264].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3264].w;
}


