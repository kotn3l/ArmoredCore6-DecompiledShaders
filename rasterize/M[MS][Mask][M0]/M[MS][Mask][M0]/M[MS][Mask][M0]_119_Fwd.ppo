#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1580;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _242 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _243 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _244 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _250 = inversesqrt(dot(vec3(_242, _243, _244), vec3(_242, _243, _244)));
    float _257 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _264 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _276 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _278 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _279 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3883 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
    float _3894 = isnan(0.0) ? _278 : (isnan(_278) ? 0.0 : max(_278, 0.0));
    float _3905 = isnan(0.0) ? _279 : (isnan(_279) ? 0.0 : max(_279, 0.0));
    uint _289 = uint(roundEven(NORMAL.w)) * 13u;
    uint _294 = _289 + 1u;
    uint _298 = _289 + 2u;
    float _307 = sqrt(((cbInstanceData._m0[_294].x * cbInstanceData._m0[_294].x) + (cbInstanceData._m0[_289].x * cbInstanceData._m0[_289].x)) + (cbInstanceData._m0[_298].x * cbInstanceData._m0[_298].x));
    float _308 = _307 * TEXCOORD.z;
    float _309 = _307 * TEXCOORD.w;
    vec4 _322 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _308) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _309) + cbTextureTilingScale._m0[13u].w));
    vec4 _345 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _371 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _376 = _371.x * cbMtdParam._m0[11u].x;
    float _377 = _371.y * cbMtdParam._m0[11u].y;
    float _378 = _371.z * cbMtdParam._m0[11u].z;
    vec4 _397 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _308) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _309) + cbTextureTilingScale._m0[5u].w));
    vec4 _416 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _454 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _456 = _454.x;
    float _468 = dot(vec4(_456, _454.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _485 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _416.x) * 2.0) - ((((_456 - _468) * cbMtdParam._m0[24u].z) + _468) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3916 = isnan(0.0) ? _485 : (isnan(_485) ? 0.0 : max(_485, 0.0));
    float _486 = isnan(1.0) ? _3916 : (isnan(_3916) ? 1.0 : min(_3916, 1.0));
    float _493 = (_486 * ((_397.x * cbMtdParam._m0[12u].x) - _376)) + _376;
    float _494 = (_486 * ((_397.y * cbMtdParam._m0[12u].y) - _377)) + _377;
    float _495 = (_486 * ((_397.z * cbMtdParam._m0[12u].z) - _378)) + _378;
    vec4 _512 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _308) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _309) + cbTextureTilingScale._m0[3u].w));
    vec4 _532 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _534 = _532.x;
    float _544 = dot(vec4(_534, _532.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _558 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _416.y) * 2.0) - ((((_534 - _544) * cbMtdParam._m0[24u].z) + _544) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3927 = isnan(0.0) ? _558 : (isnan(_558) ? 0.0 : max(_558, 0.0));
    float _559 = isnan(1.0) ? _3927 : (isnan(_3927) ? 1.0 : min(_3927, 1.0));
    float _566 = (_559 * ((_512.x * cbMtdParam._m0[13u].x) - _493)) + _493;
    float _567 = (_559 * ((_512.y * cbMtdParam._m0[13u].y) - _494)) + _494;
    float _568 = (_559 * ((_512.z * cbMtdParam._m0[13u].z) - _495)) + _495;
    vec4 _586 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _308) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _309) + cbTextureTilingScale._m0[24u].w));
    vec4 _603 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _605 = _603.x;
    float _615 = dot(vec4(_605, _603.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _627 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _416.z) * 2.0) - ((((_605 - _615) * cbMtdParam._m0[24u].z) + _615) * cbMtdParam._m0[20u].z))) + 1.0;
    float _3938 = isnan(0.0) ? _627 : (isnan(_627) ? 0.0 : max(_627, 0.0));
    float _628 = isnan(1.0) ? _3938 : (isnan(_3938) ? 1.0 : min(_3938, 1.0));
    float _638 = (_345.x * cbMtdParam._m0[9u].x) * ((_628 * ((_586.x * cbMtdParam._m0[14u].x) - _566)) + _566);
    float _639 = (_345.y * cbMtdParam._m0[9u].y) * ((_628 * ((_586.y * cbMtdParam._m0[14u].y) - _567)) + _567);
    float _640 = (_345.z * cbMtdParam._m0[9u].z) * ((_628 * ((_586.z * cbMtdParam._m0[14u].z) - _568)) + _568);
    float _644 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _322.x) * _638;
    float _647 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _322.y) * _639;
    float _650 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _322.z) * _640;
    float _658 = (((_638 - _644) * (isnan(1.0) ? _3883 : (isnan(_3883) ? 1.0 : min(_3883, 1.0)))) + _644) * 4.55000019073486328125;
    float _660 = (((_639 - _647) * (isnan(1.0) ? _3894 : (isnan(_3894) ? 1.0 : min(_3894, 1.0)))) + _647) * 4.55000019073486328125;
    float _662 = (((_640 - _650) * (isnan(1.0) ? _3905 : (isnan(_3905) ? 1.0 : min(_3905, 1.0)))) + _650) * 4.55000019073486328125;
    vec4 _679 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _308) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _309) + cbTextureTilingScale._m0[20u].w));
    vec4 _702 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _308) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _309) + cbTextureTilingScale._m0[4u].w));
    vec4 _719 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _721 = _719.x;
    float _722 = _719.y;
    float _723 = _719.z;
    float _730 = ((_702.x - _721) * _486) + _721;
    float _731 = ((_702.y - _722) * _486) + _722;
    float _732 = ((_702.z - _723) * _486) + _723;
    vec4 _744 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _308) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _309) + cbTextureTilingScale._m0[2u].w));
    float _755 = ((_744.x - _730) * _559) + _730;
    float _756 = ((_744.y - _731) * _559) + _731;
    float _757 = ((_744.z - _732) * _559) + _732;
    vec4 _769 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _308) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _309) + cbTextureTilingScale._m0[23u].w));
    float _782 = ((_769.z - _757) * _628) + _757;
    float _785 = ((((_769.x - _755) * _628) + _755) * 2.0) + (-1.0);
    float _786 = ((((_769.y - _756) * _628) + _756) * 2.0) + (-1.0);
    float _787 = dot(vec2(_785, _786), vec2(_785, _786));
    float _3949 = isnan(0.0) ? _787 : (isnan(_787) ? 0.0 : max(_787, 0.0));
    float _792 = sqrt(1.0 - (isnan(1.0) ? _3949 : (isnan(_3949) ? 1.0 : min(_3949, 1.0))));
    vec4 _806 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _831 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _308) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _309) + cbTextureTilingScale._m0[11u].w));
    float _833 = _831.x;
    float _834 = 1.0 - _833;
    float _840 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _843 = ((isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : min(_840, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _852 = (_843 - ((((((_833 - _834) * cbMtdParam._m0[24u].w) + _834) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _843))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3970 = isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0));
    float _853 = isnan(1.0) ? _3970 : (isnan(_3970) ? 1.0 : min(_3970, 1.0));
    float _860 = (_853 * (cbMtdParam._m0[17u].x - _658)) + _658;
    float _861 = (_853 * (cbMtdParam._m0[17u].y - _660)) + _660;
    float _862 = (_853 * (cbMtdParam._m0[17u].z - _662)) + _662;
    float _877 = sqrt(((cbInstanceData._m0[_294].x * cbInstanceData._m0[_294].x) + (cbInstanceData._m0[_289].x * cbInstanceData._m0[_289].x)) + (cbInstanceData._m0[_298].x * cbInstanceData._m0[_298].x));
    float _878 = _877 * TEXCOORD.z;
    float _879 = _877 * TEXCOORD.w;
    vec4 _891 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _878) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _879) + cbTextureTilingScale._m0[19u].w));
    float _893 = _891.x;
    float _894 = 1.0 - _893;
    float _921 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_893 - _894) * cbMtdParam._m0[24u].y) + _894) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3981 = isnan(0.0) ? _921 : (isnan(_921) ? 0.0 : max(_921, 0.0));
    float _922 = isnan(1.0) ? _3981 : (isnan(_3981) ? 1.0 : min(_3981, 1.0));
    float _930 = ((((cbMtdParam._m0[10u].x - _860) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _922) + _860;
    float _931 = ((((cbMtdParam._m0[10u].y - _861) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _922) + _861;
    float _932 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _862)) * _922) + _862;
    float _937 = (((_679.z - _782) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _782;
    float _941 = ((_806.z - _937) * cbMtdParam._m0[19u].w) + _937;
    vec4 _955 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _308) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _309) + cbTextureTilingScale._m0[15u].w));
    float _962 = (_955.x * 2.0) + (-1.0);
    float _963 = (_955.y * 2.0) + (-1.0);
    float _964 = dot(vec2(_962, _963), vec2(_962, _963));
    float _3992 = isnan(0.0) ? _964 : (isnan(_964) ? 0.0 : max(_964, 0.0));
    float _972 = (_853 * (_955.z - _941)) + _941;
    float _975 = ((cbMtdParam._m0[23u].y - _972) * _922) + _972;
    vec4 _994 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _878) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _879) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _1000 = (_994.x * 2.0) + (-1.0);
    float _1001 = (_994.y * 2.0) + (-1.0);
    float _1002 = dot(vec2(_1000, _1001), vec2(_1000, _1001));
    float _4003 = isnan(0.0) ? _1002 : (isnan(_1002) ? 0.0 : max(_1002, 0.0));
    float _1016 = (_785 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_679.x * 2.0) + (-1.0)))) + (((_806.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _1017 = (_786 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_679.y * 2.0) + (-1.0)))) + (((_806.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _1029 = (((_962 - _1016) + (cbMtdParam._m0[21u].x * _1016)) * _853) + _1016;
    float _1030 = (((_963 - _1017) + (cbMtdParam._m0[21u].x * _1017)) * _853) + _1017;
    float _1031 = (_853 * (sqrt(1.0 - (isnan(1.0) ? _3992 : (isnan(_3992) ? 1.0 : min(_3992, 1.0)))) - _792)) + _792;
    float _1042 = (((_1000 - _1029) + (_1029 * cbMtdParam._m0[22u].z)) * _922) + _1029;
    float _1043 = (((_1001 - _1030) + (_1030 * cbMtdParam._m0[22u].z)) * _922) + _1030;
    float _1044 = ((sqrt(1.0 - (isnan(1.0) ? _4003 : (isnan(_4003) ? 1.0 : min(_4003, 1.0)))) - _1031) * _922) + _1031;
    float _1046 = cbMtdParam._m0[22u].x + _806.w;
    float _1049 = fma(_1044, _257 * NORMAL.x, fma(_1043, _264 * TANGENT.x, (_250 * _242) * _1042));
    float _1052 = fma(_1044, _257 * NORMAL.y, fma(_1043, _264 * TANGENT.y, (_250 * _243) * _1042));
    float _1055 = fma(_1044, _257 * NORMAL.z, fma(_1043, _264 * TANGENT.z, (_250 * _244) * _1042));
    float _1059 = inversesqrt(dot(vec3(_1049, _1052, _1055), vec3(_1049, _1052, _1055)));
    float _1060 = _1059 * _1049;
    float _1061 = _1059 * _1052;
    float _1062 = _1059 * _1055;
    float _4014 = isnan(0.0) ? _975 : (isnan(_975) ? 0.0 : max(_975, 0.0));
    float _1063 = isnan(1.0) ? _4014 : (isnan(_4014) ? 1.0 : min(_4014, 1.0));
    float _4025 = isnan(0.0) ? _1046 : (isnan(_1046) ? 0.0 : max(_1046, 0.0));
    float _4036 = isnan(0.0) ? _930 : (isnan(_930) ? 0.0 : max(_930, 0.0));
    float _4047 = isnan(0.0) ? _931 : (isnan(_931) ? 0.0 : max(_931, 0.0));
    float _4058 = isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0));
    float _1081 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1121 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1131 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1121);
    float _1132 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1121);
    float _1133 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1121);
    float _1137 = inversesqrt(dot(vec3(_1131, _1132, _1133), vec3(_1131, _1132, _1133)));
    float _1138 = _1131 * _1137;
    float _1139 = _1132 * _1137;
    float _1140 = _1133 * _1137;
    float _1146 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1147 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1165 = fma(_1062, cbSceneParam._m0[5u].z, fma(_1061, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1060));
    float _1168 = fma(_1062, cbSceneParam._m0[6u].z, fma(_1061, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1060));
    float _1171 = fma(_1062, cbSceneParam._m0[7u].z, fma(_1061, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1060));
    uint _1185 = (_289 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1191 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4036 : (isnan(_4036) ? 1.0 : min(_4036, 1.0)))) * cbInstanceData._m0[_1185].x;
    float _1192 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4047 : (isnan(_4047) ? 1.0 : min(_4047, 1.0)))) * cbInstanceData._m0[_1185].y;
    float _1193 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4058 : (isnan(_4058) ? 1.0 : min(_4058, 1.0)))) * cbInstanceData._m0[_1185].z;
    float _4069 = isnan(0.0) ? _1191 : (isnan(_1191) ? 0.0 : max(_1191, 0.0));
    float _1194 = isnan(1.0) ? _4069 : (isnan(_4069) ? 1.0 : min(_4069, 1.0));
    float _4080 = isnan(0.0) ? _1192 : (isnan(_1192) ? 0.0 : max(_1192, 0.0));
    float _1195 = isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0));
    float _4091 = isnan(0.0) ? _1193 : (isnan(_1193) ? 0.0 : max(_1193, 0.0));
    float _1196 = isnan(1.0) ? _4091 : (isnan(_4091) ? 1.0 : min(_4091, 1.0));
    vec4 _1205 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1146, cbSceneParam._m0[86u].y * _1147));
    float _1209 = ((isnan(1.0) ? _4025 : (isnan(_4025) ? 1.0 : min(_4025, 1.0))) * TEXCOORD_5.w) * _1205.x;
    float _1210 = dot(vec3(_1060, _1061, _1062), vec3(_1138, _1139, _1140));
    float _1213 = _1210 * 2.0;
    float _1217 = (_1213 * _1060) - _1138;
    float _1218 = (_1213 * _1061) - _1139;
    float _1219 = (_1213 * _1062) - _1140;
    float _1223 = abs(dot(vec3(_1138, _1139, _1140), vec3(_1060, _1061, _1062)));
    float _4102 = isnan(0.0) ? _1223 : (isnan(_1223) ? 0.0 : max(_1223, 0.0));
    float _1225 = sqrt(_1063);
    float _1238 = exp2((_1225 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1225 * 3.0));
    float _1270 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1274 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1278 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1579;
    float _1581;
    float _1582;
    float _1583;
    float _1584;
    float _1585;
    float _1586;
    float _1587;
    float _1588;
    float _1589;
    float _1590;
    float _1591;
    float _1592;
    float _1593;
    float _1594;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1304 = fma(_1278, cbModelParam._m0[26u].z, fma(_1274, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1270));
        float _1308 = fma(_1278, cbModelParam._m0[27u].z, fma(_1274, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1270));
        float _1312 = fma(_1278, cbModelParam._m0[28u].z, fma(_1274, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1270));
        float _1337 = _1270 + _1060;
        float _1338 = _1274 + _1061;
        float _1339 = _1278 + _1062;
        float _1349 = fma(_1339, cbModelParam._m0[26u].z, fma(_1338, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1337)) - _1304;
        float _1350 = fma(_1339, cbModelParam._m0[27u].z, fma(_1338, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1337)) - _1308;
        float _1351 = fma(_1339, cbModelParam._m0[28u].z, fma(_1338, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1337)) - _1312;
        float _1355 = inversesqrt(dot(vec3(_1349, _1350, _1351), vec3(_1349, _1350, _1351)));
        float _1368 = ((_1355 * _1349) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1304 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1369 = ((_1355 * _1350) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1308 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1370 = ((_1355 * _1351) / cbModelParam._m0[34u].z) + ((((((_1312 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1373 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1368, _1369, _1370), 0.0);
        vec4 _1380 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1368, _1369, _1370), 0.0);
        vec4 _1387 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1368, _1369, _1370), 0.0);
        vec4 _1394 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1368, _1369, _1370), 0.0);
        float _1407 = exp2((_1373.w + (-0.5)) * 20.0) * 2.0;
        float _1408 = _1407 * (_1373.x + (-0.5));
        float _1409 = _1407 * (_1373.y + (-0.5));
        float _1410 = _1407 * (_1373.z + (-0.5));
        float _1417 = exp2((_1380.w + (-0.5)) * 20.0) * 2.0;
        float _1418 = _1417 * (_1380.x + (-0.5));
        float _1419 = _1417 * (_1380.y + (-0.5));
        float _1420 = _1417 * (_1380.z + (-0.5));
        float _1427 = exp2((_1387.w + (-0.5)) * 20.0) * 2.0;
        float _1428 = _1427 * (_1387.x + (-0.5));
        float _1429 = _1427 * (_1387.y + (-0.5));
        float _1430 = _1427 * (_1387.z + (-0.5));
        float _1437 = exp2((_1394.w + (-0.5)) * 20.0) * 2.0;
        float _1438 = _1437 * (_1394.x + (-0.5));
        float _1439 = _1437 * (_1394.y + (-0.5));
        float _1440 = _1437 * (_1394.z + (-0.5));
        float _1441 = isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0));
        float _1442 = isnan(0.0) ? _1439 : (isnan(_1439) ? 0.0 : max(_1439, 0.0));
        float _1443 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
        float _1444 = _1408 * 0.5;
        float _1445 = _1418 * 0.5;
        float _1446 = _1428 * 0.5;
        float _1447 = dot(vec3(_1444, _1445, _1446), vec3(_1444, _1445, _1446));
        float _1452 = (_1447 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1447);
        float _1461 = (dot(vec3(_1060, _1061, _1062), vec3(_1452 * _1444, _1452 * _1445, _1452 * _1446)) + 1.0) * 0.5;
        float _4128 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0));
        float _1471 = sqrt(((_1445 * _1445) + (_1444 * _1444)) + (_1446 * _1446)) / (_1441 + 9.9999997473787516355514526367188e-06);
        float _4139 = isnan(0.0) ? _1471 : (isnan(_1471) ? 0.0 : max(_1471, 0.0));
        float _1472 = isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0));
        float _1473 = _1472 * 2.0;
        float _1477 = (1.0 - _1472) / (_1472 + 1.0);
        float _4150 = isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0));
        float _1478 = isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0));
        float _1487 = ((((1.0 - _1478) * (_1473 + 2.0)) * exp2(log2(isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0))) * (_1473 + 1.0))) + _1478) * _1441;
        float _1488 = _1409 * 0.5;
        float _1489 = _1419 * 0.5;
        float _1490 = _1429 * 0.5;
        float _1491 = dot(vec3(_1488, _1489, _1490), vec3(_1488, _1489, _1490));
        float _1496 = (_1491 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1491);
        float _1504 = (dot(vec3(_1060, _1061, _1062), vec3(_1496 * _1488, _1496 * _1489, _1496 * _1490)) + 1.0) * 0.5;
        float _4161 = isnan(0.0) ? _1504 : (isnan(_1504) ? 0.0 : max(_1504, 0.0));
        float _1513 = sqrt(((_1489 * _1489) + (_1488 * _1488)) + (_1490 * _1490)) / (_1442 + 9.9999997473787516355514526367188e-06);
        float _4172 = isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0));
        float _1514 = isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0));
        float _1515 = _1514 * 2.0;
        float _1519 = (1.0 - _1514) / (_1514 + 1.0);
        float _4183 = isnan(0.0) ? _1519 : (isnan(_1519) ? 0.0 : max(_1519, 0.0));
        float _1520 = isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0));
        float _1529 = ((((1.0 - _1520) * (_1515 + 2.0)) * exp2(log2(isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0))) * (_1515 + 1.0))) + _1520) * _1442;
        float _1530 = _1410 * 0.5;
        float _1531 = _1420 * 0.5;
        float _1532 = _1430 * 0.5;
        float _1533 = dot(vec3(_1530, _1531, _1532), vec3(_1530, _1531, _1532));
        float _1538 = (_1533 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1533);
        float _1546 = (dot(vec3(_1060, _1061, _1062), vec3(_1538 * _1530, _1538 * _1531, _1538 * _1532)) + 1.0) * 0.5;
        float _4194 = isnan(0.0) ? _1546 : (isnan(_1546) ? 0.0 : max(_1546, 0.0));
        float _1555 = sqrt(((_1531 * _1531) + (_1530 * _1530)) + (_1532 * _1532)) / (_1443 + 9.9999997473787516355514526367188e-06);
        float _4205 = isnan(0.0) ? _1555 : (isnan(_1555) ? 0.0 : max(_1555, 0.0));
        float _1556 = isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0));
        float _1557 = _1556 * 2.0;
        float _1561 = (1.0 - _1556) / (_1556 + 1.0);
        float _4216 = isnan(0.0) ? _1561 : (isnan(_1561) ? 0.0 : max(_1561, 0.0));
        float _1562 = isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0));
        float _1571 = ((((1.0 - _1562) * (_1557 + 2.0)) * exp2(log2(isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0))) * (_1557 + 1.0))) + _1562) * _1443;
        _1579 = _1410;
        _1581 = _1409;
        _1582 = _1408;
        _1583 = _1420;
        _1584 = _1419;
        _1585 = _1418;
        _1586 = _1430;
        _1587 = _1429;
        _1588 = _1428;
        _1589 = _1443;
        _1590 = _1442;
        _1591 = _1441;
        _1592 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0)));
        _1593 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0)));
        _1594 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0)));
    }
    else
    {
        _1579 = _1580;
        _1581 = _1580;
        _1582 = _1580;
        _1583 = _1580;
        _1584 = _1580;
        _1585 = _1580;
        _1586 = _1580;
        _1587 = _1580;
        _1588 = _1580;
        _1589 = _1580;
        _1590 = _1580;
        _1591 = _1580;
        _1592 = 0.0;
        _1593 = 0.0;
        _1594 = 0.0;
    }
    float _1886;
    float _1887;
    float _1888;
    float _1889;
    float _1890;
    float _1891;
    float _1892;
    float _1893;
    float _1894;
    float _1895;
    float _1896;
    float _1897;
    float _1898;
    float _1899;
    float _1900;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1617 = fma(_1278, cbModelParam._m0[30u].z, fma(_1274, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1270));
        float _1621 = fma(_1278, cbModelParam._m0[31u].z, fma(_1274, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1270));
        float _1625 = fma(_1278, cbModelParam._m0[32u].z, fma(_1274, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1270));
        float _1648 = _1270 + _1060;
        float _1649 = _1274 + _1061;
        float _1650 = _1278 + _1062;
        float _1660 = fma(_1650, cbModelParam._m0[30u].z, fma(_1649, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1648)) - _1617;
        float _1661 = fma(_1650, cbModelParam._m0[31u].z, fma(_1649, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1648)) - _1621;
        float _1662 = fma(_1650, cbModelParam._m0[32u].z, fma(_1649, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1648)) - _1625;
        float _1666 = inversesqrt(dot(vec3(_1660, _1661, _1662), vec3(_1660, _1661, _1662)));
        float _1679 = ((_1666 * _1660) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1617 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1680 = ((_1666 * _1661) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1621 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1681 = ((_1666 * _1662) / cbModelParam._m0[35u].z) + ((((((_1625 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1683 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1679, _1680, _1681), 0.0);
        vec4 _1690 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1679, _1680, _1681), 0.0);
        vec4 _1697 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1679, _1680, _1681), 0.0);
        vec4 _1704 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1679, _1680, _1681), 0.0);
        float _1716 = exp2((_1683.w + (-0.5)) * 20.0) * 2.0;
        float _1717 = _1716 * (_1683.x + (-0.5));
        float _1718 = _1716 * (_1683.y + (-0.5));
        float _1719 = _1716 * (_1683.z + (-0.5));
        float _1726 = exp2((_1690.w + (-0.5)) * 20.0) * 2.0;
        float _1727 = _1726 * (_1690.x + (-0.5));
        float _1728 = _1726 * (_1690.y + (-0.5));
        float _1729 = _1726 * (_1690.z + (-0.5));
        float _1736 = exp2((_1697.w + (-0.5)) * 20.0) * 2.0;
        float _1737 = _1736 * (_1697.x + (-0.5));
        float _1738 = _1736 * (_1697.y + (-0.5));
        float _1739 = _1736 * (_1697.z + (-0.5));
        float _1746 = exp2((_1704.w + (-0.5)) * 20.0) * 2.0;
        float _1747 = _1746 * (_1704.x + (-0.5));
        float _1748 = _1746 * (_1704.y + (-0.5));
        float _1749 = _1746 * (_1704.z + (-0.5));
        float _1750 = isnan(0.0) ? _1747 : (isnan(_1747) ? 0.0 : max(_1747, 0.0));
        float _1751 = isnan(0.0) ? _1748 : (isnan(_1748) ? 0.0 : max(_1748, 0.0));
        float _1752 = isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0));
        float _1753 = _1717 * 0.5;
        float _1754 = _1727 * 0.5;
        float _1755 = _1737 * 0.5;
        float _1756 = dot(vec3(_1753, _1754, _1755), vec3(_1753, _1754, _1755));
        float _1761 = (_1756 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1756);
        float _1769 = (dot(vec3(_1060, _1061, _1062), vec3(_1761 * _1753, _1761 * _1754, _1761 * _1755)) + 1.0) * 0.5;
        float _4257 = isnan(0.0) ? _1769 : (isnan(_1769) ? 0.0 : max(_1769, 0.0));
        float _1778 = sqrt(((_1754 * _1754) + (_1753 * _1753)) + (_1755 * _1755)) / (_1750 + 9.9999997473787516355514526367188e-06);
        float _4268 = isnan(0.0) ? _1778 : (isnan(_1778) ? 0.0 : max(_1778, 0.0));
        float _1779 = isnan(1.0) ? _4268 : (isnan(_4268) ? 1.0 : min(_4268, 1.0));
        float _1780 = _1779 * 2.0;
        float _1784 = (1.0 - _1779) / (_1779 + 1.0);
        float _4279 = isnan(0.0) ? _1784 : (isnan(_1784) ? 0.0 : max(_1784, 0.0));
        float _1785 = isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0));
        float _1794 = ((((1.0 - _1785) * (_1780 + 2.0)) * exp2(log2(isnan(1.0) ? _4257 : (isnan(_4257) ? 1.0 : min(_4257, 1.0))) * (_1780 + 1.0))) + _1785) * _1750;
        float _1795 = _1718 * 0.5;
        float _1796 = _1728 * 0.5;
        float _1797 = _1738 * 0.5;
        float _1798 = dot(vec3(_1795, _1796, _1797), vec3(_1795, _1796, _1797));
        float _1803 = (_1798 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1798);
        float _1811 = (dot(vec3(_1060, _1061, _1062), vec3(_1803 * _1795, _1803 * _1796, _1803 * _1797)) + 1.0) * 0.5;
        float _4290 = isnan(0.0) ? _1811 : (isnan(_1811) ? 0.0 : max(_1811, 0.0));
        float _1820 = sqrt(((_1796 * _1796) + (_1795 * _1795)) + (_1797 * _1797)) / (_1751 + 9.9999997473787516355514526367188e-06);
        float _4301 = isnan(0.0) ? _1820 : (isnan(_1820) ? 0.0 : max(_1820, 0.0));
        float _1821 = isnan(1.0) ? _4301 : (isnan(_4301) ? 1.0 : min(_4301, 1.0));
        float _1822 = _1821 * 2.0;
        float _1826 = (1.0 - _1821) / (_1821 + 1.0);
        float _4312 = isnan(0.0) ? _1826 : (isnan(_1826) ? 0.0 : max(_1826, 0.0));
        float _1827 = isnan(1.0) ? _4312 : (isnan(_4312) ? 1.0 : min(_4312, 1.0));
        float _1836 = ((((1.0 - _1827) * (_1822 + 2.0)) * exp2(log2(isnan(1.0) ? _4290 : (isnan(_4290) ? 1.0 : min(_4290, 1.0))) * (_1822 + 1.0))) + _1827) * _1751;
        float _1837 = _1719 * 0.5;
        float _1838 = _1729 * 0.5;
        float _1839 = _1739 * 0.5;
        float _1840 = dot(vec3(_1837, _1838, _1839), vec3(_1837, _1838, _1839));
        float _1845 = (_1840 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1840);
        float _1853 = (dot(vec3(_1060, _1061, _1062), vec3(_1845 * _1837, _1845 * _1838, _1845 * _1839)) + 1.0) * 0.5;
        float _4323 = isnan(0.0) ? _1853 : (isnan(_1853) ? 0.0 : max(_1853, 0.0));
        float _1862 = sqrt(((_1838 * _1838) + (_1837 * _1837)) + (_1839 * _1839)) / (_1752 + 9.9999997473787516355514526367188e-06);
        float _4334 = isnan(0.0) ? _1862 : (isnan(_1862) ? 0.0 : max(_1862, 0.0));
        float _1863 = isnan(1.0) ? _4334 : (isnan(_4334) ? 1.0 : min(_4334, 1.0));
        float _1864 = _1863 * 2.0;
        float _1868 = (1.0 - _1863) / (_1863 + 1.0);
        float _4345 = isnan(0.0) ? _1868 : (isnan(_1868) ? 0.0 : max(_1868, 0.0));
        float _1869 = isnan(1.0) ? _4345 : (isnan(_4345) ? 1.0 : min(_4345, 1.0));
        float _1878 = ((((1.0 - _1869) * (_1864 + 2.0)) * exp2(log2(isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0))) * (_1864 + 1.0))) + _1869) * _1752;
        _1886 = _1719;
        _1887 = _1718;
        _1888 = _1717;
        _1889 = _1729;
        _1890 = _1728;
        _1891 = _1727;
        _1892 = _1739;
        _1893 = _1738;
        _1894 = _1737;
        _1895 = _1752;
        _1896 = _1751;
        _1897 = _1750;
        _1898 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1794 : (isnan(_1794) ? 0.0 : max(_1794, 0.0)));
        _1899 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1836 : (isnan(_1836) ? 0.0 : max(_1836, 0.0)));
        _1900 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1878 : (isnan(_1878) ? 0.0 : max(_1878, 0.0)));
    }
    else
    {
        _1886 = _1580;
        _1887 = _1580;
        _1888 = _1580;
        _1889 = _1580;
        _1890 = _1580;
        _1891 = _1580;
        _1892 = _1580;
        _1893 = _1580;
        _1894 = _1580;
        _1895 = _1580;
        _1896 = _1580;
        _1897 = _1580;
        _1898 = 0.0;
        _1899 = 0.0;
        _1900 = 0.0;
    }
    float _1910 = (cbModelParam._m0[1u].x * (_1898 - _1592)) + _1592;
    float _1911 = (cbModelParam._m0[1u].x * (_1899 - _1593)) + _1593;
    float _1912 = (cbModelParam._m0[1u].x * (_1900 - _1594)) + _1594;
    float _1933 = fma(_1912, cbSceneParam._m0[89u].z, fma(_1911, cbSceneParam._m0[89u].y, _1910 * cbSceneParam._m0[89u].x));
    float _1936 = fma(_1912, cbSceneParam._m0[90u].z, fma(_1911, cbSceneParam._m0[90u].y, _1910 * cbSceneParam._m0[90u].x));
    float _1939 = fma(_1912, cbSceneParam._m0[91u].z, fma(_1911, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1910));
    float _1954 = _1217 * 0.5;
    float _1955 = _1218 * 0.5;
    float _1956 = _1219 * 0.5;
    float _1957 = dot(vec4(_1954, _1955, _1956, 1.0), vec4(_1888, _1891, _1894, _1897));
    float _1960 = dot(vec4(_1954, _1955, _1956, 1.0), vec4(_1887, _1890, _1893, _1896));
    float _1963 = dot(vec4(_1954, _1955, _1956, 1.0), vec4(_1886, _1889, _1892, _1895));
    float _1997;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1970 = dot(vec4(_1954, _1955, _1956, 1.0), vec4(_1579, _1583, _1586, _1589));
        float _1974 = dot(vec4(_1954, _1955, _1956, 1.0), vec4(_1581, _1584, _1587, _1590));
        float _1978 = dot(vec4(_1954, _1955, _1956, 1.0), vec4(_1582, _1585, _1588, _1591));
        float _1985 = dot(vec4(cbModelParam._m0[39u]), vec4(_1954, _1955, _1956, 1.0));
        _1997 = dot(vec3(isnan(0.0) ? _1978 : (isnan(_1978) ? 0.0 : max(_1978, 0.0)), isnan(0.0) ? _1974 : (isnan(_1974) ? 0.0 : max(_1974, 0.0)), isnan(0.0) ? _1970 : (isnan(_1970) ? 0.0 : max(_1970, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1985) ? 0.0 : (isnan(0.0) ? _1985 : max(0.0, _1985))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1997 = 1.0;
    }
    float _2008;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1999 = dot(vec4(cbModelParam._m0[40u]), vec4(_1954, _1955, _1956, 1.0));
        _2008 = dot(vec3(isnan(0.0) ? _1957 : (isnan(_1957) ? 0.0 : max(_1957, 0.0)), isnan(0.0) ? _1960 : (isnan(_1960) ? 0.0 : max(_1960, 0.0)), isnan(0.0) ? _1963 : (isnan(_1963) ? 0.0 : max(_1963, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1999) ? 0.0 : (isnan(0.0) ? _1999 : max(0.0, _1999))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2008 = 1.0;
    }
    float _2012 = (_2008 * cbModelParam._m0[1u].x) + (_1997 * (1.0 - cbModelParam._m0[1u].x));
    float _2022 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1063);
    float _2023 = isnan(_2022) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2022 : min(cbModelParam._m0[25u].z, _2022));
    float _2103;
    float _2105;
    float _2107;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2070 = fma(_1278, cbModelParam._m0[13u].z, fma(_1274, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1270)) + cbModelParam._m0[13u].w;
        float _2074 = fma(_1278, cbModelParam._m0[14u].z, fma(_1274, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1270)) + cbModelParam._m0[14u].w;
        float _2078 = fma(_1278, cbModelParam._m0[15u].z, fma(_1274, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1270)) + cbModelParam._m0[15u].w;
        float _2081 = fma(_1219, cbModelParam._m0[13u].z, fma(_1218, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1217));
        float _2084 = fma(_1219, cbModelParam._m0[14u].z, fma(_1218, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1217));
        float _2087 = fma(_1219, cbModelParam._m0[15u].z, fma(_1218, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1217));
        float _2115;
        if (_2081 > 0.0)
        {
            _2115 = abs((1.0 - _2070) / _2081);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2081 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2070 + 1.0) / _2081);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2115 = frontier_phi_14_12_ladder;
        }
        float _2316;
        if (_2084 > 0.0)
        {
            _2316 = abs((1.0 - _2074) / _2084);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2084 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2074 + 1.0) / _2084);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2316 = frontier_phi_23_19_ladder;
        }
        float _2559;
        if (_2087 > 0.0)
        {
            _2559 = abs((1.0 - _2078) / _2087);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2087 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2078 + 1.0) / _2087);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2559 = frontier_phi_35_30_ladder;
        }
        float _2561 = isnan(_2316) ? _2115 : (isnan(_2115) ? _2316 : min(_2115, _2316));
        float _2562 = isnan(_2559) ? _2561 : (isnan(_2561) ? _2559 : min(_2561, _2559));
        float _2566 = (_2562 * _2081) + _2070;
        float _2567 = (_2562 * _2084) + _2074;
        float _2568 = (_2562 * _2087) + _2078;
        float _2569 = _2562 * 9.9999997473787516355514526367188e-05;
        float _2571 = (-1.0) - _2569;
        float _2573 = _2569 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2568 > _2573) || ((_2568 < _2571) || ((_2567 > _2573) || ((_2567 < _2571) || ((_2566 < _2571) || (_2566 > _2573))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2692 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2568, cbModelParam._m0[9u].z, fma(_2567, cbModelParam._m0[9u].y, _2566 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2568, cbModelParam._m0[10u].z, fma(_2567, cbModelParam._m0[10u].y, _2566 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2568, cbModelParam._m0[11u].z, fma(_2567, cbModelParam._m0[11u].y, _2566 * cbModelParam._m0[11u].x))), _2023);
            frontier_phi_13_35_ladder = _2692.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2692.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2692.x * cbModelParam._m0[1u].y;
        }
        _2103 = frontier_phi_13_35_ladder_2;
        _2105 = frontier_phi_13_35_ladder_1;
        _2107 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2091 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1217, _1218, _1219), _2023);
        _2103 = _2091.x * cbModelParam._m0[1u].y;
        _2105 = _2091.y * cbModelParam._m0[1u].y;
        _2107 = _2091.z * cbModelParam._m0[1u].y;
    }
    float _2111 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1063);
    float _2112 = isnan(_2111) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2111 : min(cbModelParam._m0[25u].w, _2111));
    float _2202;
    float _2204;
    float _2206;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2166 = fma(_1278, cbModelParam._m0[21u].z, fma(_1274, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1270)) + cbModelParam._m0[21u].w;
        float _2170 = fma(_1278, cbModelParam._m0[22u].z, fma(_1274, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1270)) + cbModelParam._m0[22u].w;
        float _2174 = fma(_1278, cbModelParam._m0[23u].z, fma(_1274, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1270)) + cbModelParam._m0[23u].w;
        float _2177 = fma(_1219, cbModelParam._m0[21u].z, fma(_1218, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1217));
        float _2180 = fma(_1219, cbModelParam._m0[22u].z, fma(_1218, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1217));
        float _2183 = fma(_1219, cbModelParam._m0[23u].z, fma(_1218, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1217));
        float _2321;
        if (_2177 > 0.0)
        {
            _2321 = abs((1.0 - _2166) / _2177);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2177 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2166 + 1.0) / _2177);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2321 = frontier_phi_25_21_ladder;
        }
        float _2586;
        if (_2180 > 0.0)
        {
            _2586 = abs((1.0 - _2170) / _2180);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2180 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2170 + 1.0) / _2180);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2586 = frontier_phi_37_32_ladder;
        }
        float _2791;
        if (_2183 > 0.0)
        {
            _2791 = abs((1.0 - _2174) / _2183);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2183 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2174 + 1.0) / _2183);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2791 = frontier_phi_46_43_ladder;
        }
        float _2793 = isnan(_2586) ? _2321 : (isnan(_2321) ? _2586 : min(_2321, _2586));
        float _2794 = isnan(_2791) ? _2793 : (isnan(_2793) ? _2791 : min(_2793, _2791));
        float _2798 = (_2794 * _2177) + _2166;
        float _2799 = (_2794 * _2180) + _2170;
        float _2800 = (_2794 * _2183) + _2174;
        float _2801 = _2794 * 9.9999997473787516355514526367188e-05;
        float _2802 = (-1.0) - _2801;
        float _2804 = _2801 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2800 > _2804) || ((_2800 < _2802) || ((_2799 > _2804) || ((_2799 < _2802) || ((_2798 < _2802) || (_2798 > _2804))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2999 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2800, cbModelParam._m0[17u].z, fma(_2799, cbModelParam._m0[17u].y, _2798 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2800, cbModelParam._m0[18u].z, fma(_2799, cbModelParam._m0[18u].y, _2798 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2800, cbModelParam._m0[19u].z, fma(_2799, cbModelParam._m0[19u].y, _2798 * cbModelParam._m0[19u].x))), _2112);
            frontier_phi_22_46_ladder = _2999.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2999.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2999.x * cbModelParam._m0[1u].z;
        }
        _2202 = frontier_phi_22_46_ladder_2;
        _2204 = frontier_phi_22_46_ladder_1;
        _2206 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2186 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1217, _1218, _1219), _2112);
        _2202 = _2186.x * cbModelParam._m0[1u].z;
        _2204 = _2186.y * cbModelParam._m0[1u].z;
        _2206 = _2186.z * cbModelParam._m0[1u].z;
    }
    float _2218 = ((((1.0 - _1238) * ((_1225 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1238 * _1225)) * _1209;
    float _2219 = _2218 * ((cbModelParam._m0[1u].w * (_2202 - _2103)) + _2103);
    float _2220 = _2218 * ((cbModelParam._m0[1u].w * (_2204 - _2105)) + _2105);
    float _2221 = _2218 * ((cbModelParam._m0[1u].w * (_2206 - _2107)) + _2107);
    float _2224 = fma(_2221, cbSceneParam._m0[89u].z, fma(_2220, cbSceneParam._m0[89u].y, _2219 * cbSceneParam._m0[89u].x));
    float _2227 = fma(_2221, cbSceneParam._m0[90u].z, fma(_2220, cbSceneParam._m0[90u].y, _2219 * cbSceneParam._m0[90u].x));
    float _2230 = fma(_2221, cbSceneParam._m0[91u].z, fma(_2220, cbSceneParam._m0[91u].y, _2219 * cbSceneParam._m0[91u].x));
    uvec4 _2240 = floatBitsToUint(cbInstanceData._m0[_289 + 5u]);
    uint _2242 = _2240.x * 14u;
    uint _2243 = _2242 + 13u;
    float _2250 = _1209 + (-1.0);
    float _2255 = (cbLight._m0[_2243].x * _2250) + 1.0;
    float _2256 = (cbLight._m0[_2243].y * _2250) + 1.0;
    float _2257 = (cbLight._m0[_2243].z * _2250) + 1.0;
    float _2258 = (cbLight._m0[_2243].w * _2250) + 1.0;
    uint _2259 = _2242 + 5u;
    float _2265 = isnan(1.0) ? _2256 : (isnan(_2256) ? 1.0 : min(_2256, 1.0));
    uint _2269 = _2242 + 4u;
    float _2275 = isnan(1.0) ? _2255 : (isnan(_2255) ? 1.0 : min(_2255, 1.0));
    uint _2279 = _2242 | 1u;
    float _2290 = dot(vec3(cbLight._m0[_2242].xyz), vec3(_1060, _1061, _1062));
    float _2293 = dot(vec3(cbLight._m0[_2279].xyz), vec3(_1060, _1061, _1062));
    float _4481 = isnan(0.0) ? _2290 : (isnan(_2290) ? 0.0 : max(_2290, 0.0));
    float _4492 = isnan(0.0) ? _2293 : (isnan(_2293) ? 0.0 : max(_2293, 0.0));
    float _2298 = (isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0))) * 0.3183098733425140380859375;
    float _2300 = (isnan(1.0) ? _4492 : (isnan(_4492) ? 1.0 : min(_4492, 1.0))) * 0.3183098733425140380859375;
    float _2307 = ((cbLight._m0[_2259].x * _2265) * _2300) + ((cbLight._m0[_2269].x * _2275) * _2298);
    float _2308 = ((_2265 * cbLight._m0[_2259].y) * _2300) + ((_2275 * cbLight._m0[_2269].y) * _2298);
    float _2309 = ((_2265 * cbLight._m0[_2259].z) * _2300) + ((_2275 * cbLight._m0[_2269].z) * _2298);
    uvec4 _2313 = floatBitsToUint(cbLight._m0[_2242 + 12u]);
    bool _2315 = _2313.x == 0u;
    float _2326;
    float _2328;
    float _2330;
    if (_2315)
    {
        _2326 = _2307;
        _2328 = _2308;
        _2330 = _2309;
    }
    else
    {
        uint _2334 = _2242 + 6u;
        float _2350 = (dot(vec3(cbLight._m0[_2242 + 2u].xyz), vec3(_1060, _1061, _1062)) * 0.5) + 0.5;
        float _2351 = _2350 * _2350;
        float _4503 = isnan(0.0) ? _2351 : (isnan(_2351) ? 0.0 : max(_2351, 0.0));
        float _2352 = isnan(1.0) ? _4503 : (isnan(_4503) ? 1.0 : min(_4503, 1.0));
        float _2353 = isnan(1.0) ? _2257 : (isnan(_2257) ? 1.0 : min(_2257, 1.0));
        _2326 = (((cbLight._m0[_2334].x * 0.3183098733425140380859375) * _2352) * _2353) + _2307;
        _2328 = (((cbLight._m0[_2334].y * 0.3183098733425140380859375) * _2352) * _2353) + _2308;
        _2330 = (((cbLight._m0[_2334].z * 0.3183098733425140380859375) * _2352) * _2353) + _2309;
    }
    bool _2333 = _2313.y == 0u;
    float _2371;
    float _2373;
    float _2375;
    if (_2333)
    {
        _2371 = _2326;
        _2373 = _2328;
        _2375 = _2330;
    }
    else
    {
        uint _2530 = _2242 + 7u;
        float _2546 = (dot(vec3(cbLight._m0[_2242 + 3u].xyz), vec3(_1060, _1061, _1062)) * 0.5) + 0.5;
        float _2547 = _2546 * _2546;
        float _4519 = isnan(0.0) ? _2547 : (isnan(_2547) ? 0.0 : max(_2547, 0.0));
        float _2548 = isnan(1.0) ? _4519 : (isnan(_4519) ? 1.0 : min(_4519, 1.0));
        float _2549 = isnan(1.0) ? _2258 : (isnan(_2258) ? 1.0 : min(_2258, 1.0));
        _2371 = (((cbLight._m0[_2530].x * 0.3183098733425140380859375) * _2548) * _2549) + _2326;
        _2373 = (((cbLight._m0[_2530].y * 0.3183098733425140380859375) * _2548) * _2549) + _2328;
        _2375 = (((cbLight._m0[_2530].z * 0.3183098733425140380859375) * _2548) * _2549) + _2330;
    }
    uint _2378 = _2242 + 8u;
    float _2391 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2242].w)) * _1063) * 0.949999988079071044921875);
    float _2392 = _2391 * _2391;
    float _2393 = cbLight._m0[_2242].x + _1138;
    float _2394 = cbLight._m0[_2242].y + _1139;
    float _2395 = cbLight._m0[_2242].z + _1140;
    float _2399 = inversesqrt(dot(vec3(_2393, _2394, _2395), vec3(_2393, _2394, _2395)));
    float _2400 = _2399 * _2393;
    float _2401 = _2399 * _2394;
    float _2402 = _2399 * _2395;
    float _2403 = dot(vec3(_1060, _1061, _1062), vec3(cbLight._m0[_2242].xyz));
    float _4535 = isnan(0.0) ? _2403 : (isnan(_2403) ? 0.0 : max(_2403, 0.0));
    float _2406 = isnan(1.0) ? _4535 : (isnan(_4535) ? 1.0 : min(_4535, 1.0));
    float _4546 = isnan(0.0) ? _1210 : (isnan(_1210) ? 0.0 : max(_1210, 0.0));
    float _2407 = isnan(1.0) ? _4546 : (isnan(_4546) ? 1.0 : min(_4546, 1.0));
    float _2408 = dot(vec3(_1060, _1061, _1062), vec3(_2400, _2401, _2402));
    float _4557 = isnan(0.0) ? _2408 : (isnan(_2408) ? 0.0 : max(_2408, 0.0));
    float _2411 = isnan(1.0) ? _4557 : (isnan(_4557) ? 1.0 : min(_4557, 1.0));
    float _2412 = dot(vec3(cbLight._m0[_2242].xyz), vec3(_2400, _2401, _2402));
    float _4568 = isnan(0.0) ? _2412 : (isnan(_2412) ? 0.0 : max(_2412, 0.0));
    float _2416 = _2392 * _2392;
    float _2420 = ((_2411 * _2411) * (_2416 + (-1.0))) + 1.0;
    float _2431 = (exp2(log2(1.0 - (isnan(1.0) ? _4568 : (isnan(_4568) ? 1.0 : min(_4568, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2432 = 1.0 - _2392;
    float _2443 = (0.5 / (((_2407 * ((_2406 * _2432) + _2392)) + 9.9999999392252902907785028219223e-09) + (((_2407 * _2432) + _2392) * _2406))) * _2406;
    float _4579 = isnan(0.0) ? _2443 : (isnan(_2443) ? 0.0 : max(_2443, 0.0));
    float _2445 = (isnan(1.0) ? _4579 : (isnan(_4579) ? 1.0 : min(_4579, 1.0))) * (_2416 / ((_2420 * _2420) * 3.141590118408203125));
    uint _2456 = _2242 + 9u;
    float _2467 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2279].w)) * _1063) * 0.949999988079071044921875);
    float _2468 = _2467 * _2467;
    float _2469 = cbLight._m0[_2279].x + _1138;
    float _2470 = cbLight._m0[_2279].y + _1139;
    float _2471 = cbLight._m0[_2279].z + _1140;
    float _2475 = inversesqrt(dot(vec3(_2469, _2470, _2471), vec3(_2469, _2470, _2471)));
    float _2476 = _2475 * _2469;
    float _2477 = _2475 * _2470;
    float _2478 = _2475 * _2471;
    float _2479 = dot(vec3(_1060, _1061, _1062), vec3(cbLight._m0[_2279].xyz));
    float _4590 = isnan(0.0) ? _2479 : (isnan(_2479) ? 0.0 : max(_2479, 0.0));
    float _2482 = isnan(1.0) ? _4590 : (isnan(_4590) ? 1.0 : min(_4590, 1.0));
    float _2483 = dot(vec3(_1060, _1061, _1062), vec3(_2476, _2477, _2478));
    float _4601 = isnan(0.0) ? _2483 : (isnan(_2483) ? 0.0 : max(_2483, 0.0));
    float _2486 = isnan(1.0) ? _4601 : (isnan(_4601) ? 1.0 : min(_4601, 1.0));
    float _2487 = dot(vec3(cbLight._m0[_2279].xyz), vec3(_2476, _2477, _2478));
    float _4612 = isnan(0.0) ? _2487 : (isnan(_2487) ? 0.0 : max(_2487, 0.0));
    float _2491 = _2468 * _2468;
    float _2495 = ((_2486 * _2486) * (_2491 + (-1.0))) + 1.0;
    float _2504 = (exp2(log2(1.0 - (isnan(1.0) ? _4612 : (isnan(_4612) ? 1.0 : min(_4612, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2505 = 1.0 - _2468;
    float _2515 = (0.5 / (((_2407 * ((_2482 * _2505) + _2468)) + 9.9999999392252902907785028219223e-09) + (((_2407 * _2505) + _2468) * _2482))) * _2482;
    float _4623 = isnan(0.0) ? _2515 : (isnan(_2515) ? 0.0 : max(_2515, 0.0));
    float _2517 = (isnan(1.0) ? _4623 : (isnan(_4623) ? 1.0 : min(_4623, 1.0))) * (_2491 / ((_2495 * _2495) * 3.141590118408203125));
    float _2527 = (((_2504 * cbLight._m0[_2456].x) * _2517) * _2265) + (((_2431 * cbLight._m0[_2378].x) * _2445) * _2275);
    float _2528 = (((_2504 * cbLight._m0[_2456].y) * _2517) * _2265) + (((_2431 * cbLight._m0[_2378].y) * _2445) * _2275);
    float _2529 = (((_2504 * cbLight._m0[_2456].z) * _2517) * _2265) + (((_2431 * cbLight._m0[_2378].z) * _2445) * _2275);
    float _2591;
    float _2593;
    float _2595;
    if (_2315)
    {
        _2591 = _2527;
        _2593 = _2528;
        _2595 = _2529;
    }
    else
    {
        uint _2597 = _2242 + 2u;
        uint _2601 = _2242 + 10u;
        float _2615 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2597].w)) * _1063) * 0.949999988079071044921875);
        float _2616 = _2615 * _2615;
        float _2617 = cbLight._m0[_2597].x + _1138;
        float _2618 = cbLight._m0[_2597].y + _1139;
        float _2619 = cbLight._m0[_2597].z + _1140;
        float _2623 = inversesqrt(dot(vec3(_2617, _2618, _2619), vec3(_2617, _2618, _2619)));
        float _2624 = _2623 * _2617;
        float _2625 = _2623 * _2618;
        float _2626 = _2623 * _2619;
        float _2627 = dot(vec3(_1060, _1061, _1062), vec3(cbLight._m0[_2597].xyz));
        float _4634 = isnan(0.0) ? _2627 : (isnan(_2627) ? 0.0 : max(_2627, 0.0));
        float _2630 = isnan(1.0) ? _4634 : (isnan(_4634) ? 1.0 : min(_4634, 1.0));
        float _2631 = dot(vec3(_1060, _1061, _1062), vec3(_2624, _2625, _2626));
        float _4645 = isnan(0.0) ? _2631 : (isnan(_2631) ? 0.0 : max(_2631, 0.0));
        float _2634 = isnan(1.0) ? _4645 : (isnan(_4645) ? 1.0 : min(_4645, 1.0));
        float _2635 = dot(vec3(cbLight._m0[_2597].xyz), vec3(_2624, _2625, _2626));
        float _4656 = isnan(0.0) ? _2635 : (isnan(_2635) ? 0.0 : max(_2635, 0.0));
        float _2639 = _2616 * _2616;
        float _2643 = ((_2634 * _2634) * (_2639 + (-1.0))) + 1.0;
        float _2652 = (exp2(log2(1.0 - (isnan(1.0) ? _4656 : (isnan(_4656) ? 1.0 : min(_4656, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2653 = 1.0 - _2616;
        float _2663 = (0.5 / (((_2407 * ((_2630 * _2653) + _2616)) + 9.9999999392252902907785028219223e-09) + (((_2407 * _2653) + _2616) * _2630))) * _2630;
        float _4667 = isnan(0.0) ? _2663 : (isnan(_2663) ? 0.0 : max(_2663, 0.0));
        float _2665 = (isnan(1.0) ? _4667 : (isnan(_4667) ? 1.0 : min(_4667, 1.0))) * (_2639 / ((_2643 * _2643) * 3.141590118408203125));
        float _2666 = isnan(1.0) ? _2257 : (isnan(_2257) ? 1.0 : min(_2257, 1.0));
        _2591 = (((_2652 * cbLight._m0[_2601].x) * _2665) * _2666) + _2527;
        _2593 = (((_2652 * cbLight._m0[_2601].y) * _2665) * _2666) + _2528;
        _2595 = (((_2652 * cbLight._m0[_2601].z) * _2665) * _2666) + _2529;
    }
    float _2701;
    float _2703;
    float _2705;
    if (_2333)
    {
        _2701 = _2591;
        _2703 = _2593;
        _2705 = _2595;
    }
    else
    {
        uint _2712 = _2242 + 3u;
        uint _2716 = _2242 + 11u;
        float _2730 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2712].w)) * _1063) * 0.949999988079071044921875);
        float _2731 = _2730 * _2730;
        float _2732 = cbLight._m0[_2712].x + _1138;
        float _2733 = cbLight._m0[_2712].y + _1139;
        float _2734 = cbLight._m0[_2712].z + _1140;
        float _2738 = inversesqrt(dot(vec3(_2732, _2733, _2734), vec3(_2732, _2733, _2734)));
        float _2739 = _2738 * _2732;
        float _2740 = _2738 * _2733;
        float _2741 = _2738 * _2734;
        float _2742 = dot(vec3(_1060, _1061, _1062), vec3(cbLight._m0[_2712].xyz));
        float _4683 = isnan(0.0) ? _2742 : (isnan(_2742) ? 0.0 : max(_2742, 0.0));
        float _2745 = isnan(1.0) ? _4683 : (isnan(_4683) ? 1.0 : min(_4683, 1.0));
        float _2746 = dot(vec3(_1060, _1061, _1062), vec3(_2739, _2740, _2741));
        float _4694 = isnan(0.0) ? _2746 : (isnan(_2746) ? 0.0 : max(_2746, 0.0));
        float _2749 = isnan(1.0) ? _4694 : (isnan(_4694) ? 1.0 : min(_4694, 1.0));
        float _2750 = dot(vec3(cbLight._m0[_2712].xyz), vec3(_2739, _2740, _2741));
        float _4705 = isnan(0.0) ? _2750 : (isnan(_2750) ? 0.0 : max(_2750, 0.0));
        float _2754 = _2731 * _2731;
        float _2758 = ((_2749 * _2749) * (_2754 + (-1.0))) + 1.0;
        float _2767 = (exp2(log2(1.0 - (isnan(1.0) ? _4705 : (isnan(_4705) ? 1.0 : min(_4705, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2768 = 1.0 - _2731;
        float _2778 = (0.5 / (((_2407 * ((_2745 * _2768) + _2731)) + 9.9999999392252902907785028219223e-09) + (((_2407 * _2768) + _2731) * _2745))) * _2745;
        float _4716 = isnan(0.0) ? _2778 : (isnan(_2778) ? 0.0 : max(_2778, 0.0));
        float _2780 = (isnan(1.0) ? _4716 : (isnan(_4716) ? 1.0 : min(_4716, 1.0))) * (_2754 / ((_2758 * _2758) * 3.141590118408203125));
        float _2781 = isnan(1.0) ? _2258 : (isnan(_2258) ? 1.0 : min(_2258, 1.0));
        _2701 = (((_2767 * cbLight._m0[_2716].x) * _2780) * _2781) + _2591;
        _2703 = (((_2767 * cbLight._m0[_2716].y) * _2780) * _2781) + _2593;
        _2705 = (((_2767 * cbLight._m0[_2716].z) * _2780) * _2781) + _2595;
    }
    float _2916;
    float _2918;
    float _2920;
    float _2922;
    float _2924;
    float _2926;
    if (_2240.y == 0u)
    {
        float _2856 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2857 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2856;
        float _2858 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2856;
        float _2859 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2856;
        uvec4 _2871 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2872 = _2871.x;
        uint _2883 = uint((float(_2871.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1147) / _2872))) + floor(float(uint(cbSceneParam._m0[85u].x * _1146) / _2872)));
        float _2893 = (log2(_2859 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2894 = isnan(0.0) ? _2893 : (isnan(_2893) ? 0.0 : max(_2893, 0.0));
        uint _2897 = uint(isnan(14.0) ? _2894 : (isnan(_2894) ? 14.0 : min(_2894, 14.0)));
        uvec4 _2902 = texelFetch(g_lightClusterGridBuffer, int(((_2897 << 2u) + (_2883 << 6u)) >> 2u));
        uint _2903 = _2902.x;
        uint _2904 = _2871.z;
        float _3004;
        float _3006;
        float _3008;
        float _3010;
        float _3012;
        float _3014;
        if (((((1u << ((_2904 >> 4u) & 15u)) + 4294967295u) & _2903) == 0u) || ((_2904 & 240u) == 0u))
        {
            _3004 = 0.0;
            _3006 = 0.0;
            _3008 = 0.0;
            _3010 = 0.0;
            _3012 = 0.0;
            _3014 = 0.0;
        }
        else
        {
            float _3005;
            float _3007;
            float _3009;
            float _3011;
            float _3013;
            float _3015;
            float _3149 = 0.0;
            float _3150 = 0.0;
            float _3151 = 0.0;
            float _3152 = 0.0;
            float _3153 = 0.0;
            float _3154 = 0.0;
            uint _3155 = 0u;
            uint _3164;
            bool _3165;
            for (;;)
            {
                _3164 = texelFetch(g_lightClassification, int((((_2897 << 5u) + (_2883 << 9u)) + (_3155 << 2u)) >> 2u)).x;
                _3165 = _3164 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3165)
                {
                    frontier_phi_61_pred = _3149;
                    frontier_phi_61_pred_1 = _3154;
                    frontier_phi_61_pred_2 = _3153;
                    frontier_phi_61_pred_3 = _3152;
                    frontier_phi_61_pred_4 = _3151;
                    frontier_phi_61_pred_5 = _3150;
                }
                else
                {
                    float _3273;
                    float _3274;
                    float _3275;
                    float _3276;
                    float _3277;
                    float _3278;
                    uint _3279;
                    _3273 = _3149;
                    _3274 = _3150;
                    _3275 = _3151;
                    _3276 = _3152;
                    _3277 = _3153;
                    _3278 = _3154;
                    _3279 = _3164;
                    float _3205;
                    float _3206;
                    float _3207;
                    float _3208;
                    float _3209;
                    float _3210;
                    for (;;)
                    {
                        uint _3283 = uint(findLSB(_3279)) + (_3155 << 5u);
                        uint _3280 = (_3279 + 4294967295u) & _3279;
                        uint _3285 = _3283 * 48u;
                        vec4 _3299 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3285)).x, texelFetch(g_PointLightRenderingBuffer, int(_3285 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3285 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3285 + 3u)).x));
                        uint _3305 = (_3283 * 48u) + 4u;
                        vec4 _3318 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3305)).x, texelFetch(g_PointLightRenderingBuffer, int(_3305 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3305 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3305 + 3u)).x));
                        uint _3324 = (_3283 * 48u) + 8u;
                        vec3 _3335 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3324)).x, texelFetch(g_PointLightRenderingBuffer, int(_3324 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3324 + 2u)).x));
                        float _3339 = _3299.x - _2857;
                        float _3340 = _3299.y - _2858;
                        float _3341 = _3299.z - _2859;
                        float _3342 = dot(vec3(_3339, _3340, _3341), vec3(_3339, _3340, _3341));
                        float _3345 = inversesqrt(_3342);
                        float _3346 = _3345 * _3339;
                        float _3347 = _3345 * _3340;
                        float _3348 = _3345 * _3341;
                        float _3349 = dot(vec3(_1165, _1168, _1171), vec3(_3346, _3347, _3348));
                        float _3354 = 1.0 - (_3342 * _3299.w);
                        float _4742 = isnan(0.0) ? _3354 : (isnan(_3354) ? 0.0 : max(_3354, 0.0));
                        float _3355 = isnan(1.0) ? _4742 : (isnan(_4742) ? 1.0 : min(_4742, 1.0));
                        float _3356 = sqrt(_3342) * _3318.w;
                        float _3359 = 1.39999997615814208984375 / (_3356 + 1.39999997615814208984375);
                        float _3360 = _3359 * _3359;
                        float _3363 = ((1.0 - _3360) * _3349) + _3360;
                        float _3366 = _3356 * _3356;
                        float _3370 = ((isnan(0.0) ? _3363 : (isnan(_3363) ? 0.0 : max(_3363, 0.0))) * _3355) / ((_3366 * 0.699999988079071044921875) + 1.0);
                        float _3374 = (-0.0) - _2857;
                        float _3375 = (-0.0) - _2858;
                        float _3376 = (-0.0) - _2859;
                        float _3380 = inversesqrt(dot(vec3(_3374, _3375, _3376), vec3(_3374, _3375, _3376)));
                        float _3381 = _3380 * _3374;
                        float _3382 = _3380 * _3375;
                        float _3383 = _3380 * _3376;
                        float _3391 = exp2(log2(1.0 / ((_3366 * 3.5) + 5.0)) * 0.25);
                        float _3392 = 1.0 - _1225;
                        float _3399 = sqrt(1.0 - ((1.0 - (_3392 * _3392)) * (1.0 - (_3391 * _3391))));
                        float _3400 = _3399 * _3399;
                        float _3401 = _3400 * _3400;
                        float _3402 = _3381 + _3346;
                        float _3403 = _3382 + _3347;
                        float _3404 = _3383 + _3348;
                        float _3408 = inversesqrt(dot(vec3(_3402, _3403, _3404), vec3(_3402, _3403, _3404)));
                        float _3412 = dot(vec3(_1165, _1168, _1171), vec3(_3381, _3382, _3383));
                        float _4758 = isnan(0.0) ? _3412 : (isnan(_3412) ? 0.0 : max(_3412, 0.0));
                        float _3415 = isnan(1.0) ? _4758 : (isnan(_4758) ? 1.0 : min(_4758, 1.0));
                        float _3416 = dot(vec3(_1165, _1168, _1171), vec3(_3408 * _3402, _3408 * _3403, _3408 * _3404));
                        float _4769 = isnan(0.0) ? _3416 : (isnan(_3416) ? 0.0 : max(_3416, 0.0));
                        float _3419 = isnan(1.0) ? _4769 : (isnan(_4769) ? 1.0 : min(_4769, 1.0));
                        float _3423 = ((_3419 * _3419) * (_3401 + (-1.0))) + 1.0;
                        float _3424 = _3359 * _3400;
                        float _3425 = _3424 * _3424;
                        float _3428 = ((1.0 - _3425) * _3349) + _3425;
                        float _4780 = isnan(0.0) ? _3428 : (isnan(_3428) ? 0.0 : max(_3428, 0.0));
                        float _3429 = isnan(1.0) ? _4780 : (isnan(_4780) ? 1.0 : min(_4780, 1.0));
                        float _3430 = 1.0 - _3400;
                        float _3440 = (0.5 / (((_3429 * ((_3415 * _3430) + _3400)) + 9.9999999392252902907785028219223e-09) + (((_3429 * _3430) + _3400) * _3415))) * _3429;
                        float _4791 = isnan(0.0) ? _3440 : (isnan(_3440) ? 0.0 : max(_3440, 0.0));
                        float _3451 = (((_3401 * 3.1415927410125732421875) * (isnan(1.0) ? _4791 : (isnan(_4791) ? 1.0 : min(_4791, 1.0)))) / ((_3423 * _3423) * ((_3366 * 2.1991131305694580078125) + 3.141590118408203125))) * _3355;
                        _3208 = (_3370 * _3318.x) + _3276;
                        _3209 = (_3370 * _3318.y) + _3277;
                        _3210 = (_3370 * _3318.z) + _3278;
                        _3205 = (_3451 * _3335.x) + _3273;
                        _3206 = (_3451 * _3335.y) + _3274;
                        _3207 = (_3451 * _3335.z) + _3275;
                        if (_3280 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3273 = _3205;
                            _3274 = _3206;
                            _3275 = _3207;
                            _3276 = _3208;
                            _3277 = _3209;
                            _3278 = _3210;
                            _3279 = _3280;
                        }
                    }
                    frontier_phi_61_pred = _3205;
                    frontier_phi_61_pred_1 = _3210;
                    frontier_phi_61_pred_2 = _3209;
                    frontier_phi_61_pred_3 = _3208;
                    frontier_phi_61_pred_4 = _3207;
                    frontier_phi_61_pred_5 = _3206;
                }
                _3005 = frontier_phi_61_pred;
                _3015 = frontier_phi_61_pred_1;
                _3013 = frontier_phi_61_pred_2;
                _3011 = frontier_phi_61_pred_3;
                _3009 = frontier_phi_61_pred_4;
                _3007 = frontier_phi_61_pred_5;
                uint _3156 = _3155 + 1u;
                if (_3156 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3149 = _3005;
                    _3150 = _3007;
                    _3151 = _3009;
                    _3152 = _3011;
                    _3153 = _3013;
                    _3154 = _3015;
                    _3155 = _3156;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3004 = _3005;
            _3006 = _3007;
            _3008 = _3009;
            _3010 = _3011;
            _3012 = _3013;
            _3014 = _3015;
        }
        uvec4 _3018 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3019 = _3018.z;
        uint _3021 = (_3019 >> 8u) & 15u;
        float _3117;
        float _3119;
        float _3121;
        float _3123;
        float _3125;
        float _3127;
        if (((4294967295u << _3021) & _2903) == 0u)
        {
            _3117 = _3004;
            _3119 = _3006;
            _3121 = _3008;
            _3123 = _3010;
            _3125 = _3012;
            _3127 = _3014;
        }
        else
        {
            float _3142 = inversesqrt(dot(vec3(_2857, _2858, _2859), vec3(_2857, _2858, _2859)));
            float _3143 = _3142 * _2857;
            float _3144 = _3142 * _2858;
            float _3145 = _3142 * _2859;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_3021 < ((_3019 >> 12u) & 15u))
            {
                float _3118;
                float _3120;
                float _3122;
                float _3124;
                float _3126;
                float _3128;
                float _3256 = _3004;
                float _3257 = _3006;
                float _3258 = _3008;
                float _3259 = _3010;
                float _3260 = _3012;
                float _3261 = _3014;
                uint _3262 = _3021;
                uint _3271;
                bool _3272;
                for (;;)
                {
                    _3271 = texelFetch(g_lightClassification, int((((_2897 << 5u) + (_2883 << 9u)) + (_3262 << 2u)) >> 2u)).x;
                    _3272 = _3271 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3272)
                    {
                        frontier_phi_67_pred = _3259;
                        frontier_phi_67_pred_1 = _3260;
                        frontier_phi_67_pred_2 = _3261;
                        frontier_phi_67_pred_3 = _3258;
                        frontier_phi_67_pred_4 = _3257;
                        frontier_phi_67_pred_5 = _3256;
                    }
                    else
                    {
                        float _3456;
                        float _3457;
                        float _3458;
                        float _3459;
                        float _3460;
                        float _3461;
                        float _3749;
                        float _3750;
                        float _3751;
                        float _3752;
                        float _3753;
                        float _3754;
                        float _3469 = _3256;
                        float _3470 = _3257;
                        float _3471 = _3258;
                        float _3472 = _3259;
                        float _3473 = _3260;
                        float _3474 = _3261;
                        uint _3475 = _3271;
                        uint _3476;
                        vec4 _3501;
                        float _3502;
                        vec4 _3517;
                        vec3 _3529;
                        vec4 _3544;
                        vec4 _3559;
                        float _3605;
                        bool _3606;
                        for (;;)
                        {
                            uint _3486 = ((_3262 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3475));
                            _3476 = (_3475 + 4294967295u) & _3475;
                            uint _3488 = _3486 * 40u;
                            _3501 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3488)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3488 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3488 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3488 + 3u)).x));
                            _3502 = _3501.w;
                            uint _3504 = (_3486 * 40u) + 4u;
                            _3517 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3504)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3504 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3504 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3504 + 3u)).x));
                            uint _3519 = (_3486 * 40u) + 8u;
                            _3529 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3519)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3519 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3519 + 2u)).x));
                            uint _3531 = (_3486 * 40u) + 16u;
                            _3544 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3531)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3531 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3531 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3531 + 3u)).x));
                            uint _3546 = (_3486 * 40u) + 20u;
                            _3559 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3546)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3546 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3546 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3546 + 3u)).x));
                            uint _3561 = (_3486 * 40u) + 24u;
                            vec4 _3574 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3561)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3561 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3561 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3561 + 3u)).x));
                            uint _3580 = (_3486 * 40u) + 28u;
                            vec4 _3593 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3580)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3580 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3580 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3580 + 3u)).x));
                            _3605 = fma(_2859, _3593.z, fma(_2858, _3593.y, _3593.x * _2857)) + _3593.w;
                            _3606 = !((fma(_2859, _3574.z, fma(_2858, _3574.y, _3574.x * _2857)) + _3574.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3606)
                            {
                                float _3633 = _3501.x - _2857;
                                float _3634 = _3501.y - _2858;
                                float _3635 = _3501.z - _2859;
                                float _3636 = dot(vec3(_3633, _3634, _3635), vec3(_3633, _3634, _3635));
                                float _3639 = inversesqrt(_3636);
                                float _3640 = _3639 * _3633;
                                float _3641 = _3639 * _3634;
                                float _3642 = _3639 * _3635;
                                float _3646 = 1.0 - (_3636 / (_3502 * _3502));
                                float _4802 = isnan(0.0) ? _3646 : (isnan(_3646) ? 0.0 : max(_3646, 0.0));
                                float _3647 = isnan(1.0) ? _4802 : (isnan(_4802) ? 1.0 : min(_4802, 1.0));
                                float _3651 = sqrt(_3636) * _3517.w;
                                float _3653 = 1.39999997615814208984375 / (_3651 + 1.39999997615814208984375);
                                float _3654 = _3653 * _3653;
                                float _3657 = ((1.0 - _3654) * dot(vec3(_3640, _3641, _3642), vec3(_1165, _1168, _1171))) + _3654;
                                float _3660 = _3651 * _3651;
                                float _3664 = (fma(_2859, _3544.z, fma(_2858, _3544.y, _3544.x * _2857)) + _3544.w) / _3605;
                                float _3665 = (fma(_2859, _3559.z, fma(_2858, _3559.y, _3559.x * _2857)) + _3559.w) / _3605;
                                float _3669 = 1.0 - dot(vec2(_3664, _3665), vec2(_3664, _3665));
                                float _4818 = isnan(0.0) ? _3669 : (isnan(_3669) ? 0.0 : max(_3669, 0.0));
                                float _3670 = isnan(1.0) ? _4818 : (isnan(_4818) ? 1.0 : min(_4818, 1.0));
                                float _3671 = _3670 * (((isnan(0.0) ? _3657 : (isnan(_3657) ? 0.0 : max(_3657, 0.0))) * _3647) / ((_3660 * 0.699999988079071044921875) + 1.0));
                                float _3683 = exp2(log2(1.0 / ((_3660 * 3.5) + 5.0)) * 0.25);
                                float _3684 = 1.0 - _1225;
                                float _3691 = sqrt(1.0 - ((1.0 - (_3684 * _3684)) * (1.0 - (_3683 * _3683))));
                                float _3692 = _3691 * _3691;
                                float _3693 = _3692 * _3692;
                                float _3694 = _3640 - _3143;
                                float _3695 = _3641 - _3144;
                                float _3696 = _3642 - _3145;
                                float _3700 = inversesqrt(dot(vec3(_3694, _3695, _3696), vec3(_3694, _3695, _3696)));
                                float _3704 = dot(vec3(_1165, _1168, _1171), vec3((-0.0) - _3143, (-0.0) - _3144, (-0.0) - _3145));
                                float _4829 = isnan(0.0) ? _3704 : (isnan(_3704) ? 0.0 : max(_3704, 0.0));
                                float _3707 = isnan(1.0) ? _4829 : (isnan(_4829) ? 1.0 : min(_4829, 1.0));
                                float _3708 = dot(vec3(_1165, _1168, _1171), vec3(_3700 * _3694, _3700 * _3695, _3700 * _3696));
                                float _4840 = isnan(0.0) ? _3708 : (isnan(_3708) ? 0.0 : max(_3708, 0.0));
                                float _3711 = isnan(1.0) ? _4840 : (isnan(_4840) ? 1.0 : min(_4840, 1.0));
                                float _3715 = ((_3711 * _3711) * (_3693 + (-1.0))) + 1.0;
                                float _3716 = _3653 * _3692;
                                float _3717 = _3716 * _3716;
                                float _3723 = ((1.0 - _3717) * dot(vec3(_1165, _1168, _1171), vec3(_3640, _3641, _3642))) + _3717;
                                float _4851 = isnan(0.0) ? _3723 : (isnan(_3723) ? 0.0 : max(_3723, 0.0));
                                float _3724 = isnan(1.0) ? _4851 : (isnan(_4851) ? 1.0 : min(_4851, 1.0));
                                float _3725 = 1.0 - _3692;
                                float _3735 = (0.5 / (((_3724 * ((_3707 * _3725) + _3692)) + 9.9999999392252902907785028219223e-09) + (((_3724 * _3725) + _3692) * _3707))) * _3724;
                                float _4862 = isnan(0.0) ? _3735 : (isnan(_3735) ? 0.0 : max(_3735, 0.0));
                                float _3745 = (_3670 * _3647) * (((_3693 * 3.1415927410125732421875) * (isnan(1.0) ? _4862 : (isnan(_4862) ? 1.0 : min(_4862, 1.0)))) / ((_3715 * _3715) * ((_3660 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3745 * _3529.x;
                                frontier_phi_73_pred_1 = _3745 * _3529.y;
                                frontier_phi_73_pred_2 = _3671 * _3517.z;
                                frontier_phi_73_pred_3 = _3671 * _3517.y;
                                frontier_phi_73_pred_4 = _3671 * _3517.x;
                                frontier_phi_73_pred_5 = _3745 * _3529.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3749 = frontier_phi_73_pred;
                            _3750 = frontier_phi_73_pred_1;
                            _3754 = frontier_phi_73_pred_2;
                            _3753 = frontier_phi_73_pred_3;
                            _3752 = frontier_phi_73_pred_4;
                            _3751 = frontier_phi_73_pred_5;
                            _3459 = _3752 + _3472;
                            _3460 = _3753 + _3473;
                            _3461 = _3754 + _3474;
                            _3456 = _3749 + _3469;
                            _3457 = _3750 + _3470;
                            _3458 = _3751 + _3471;
                            if (_3476 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3469 = _3456;
                                _3470 = _3457;
                                _3471 = _3458;
                                _3472 = _3459;
                                _3473 = _3460;
                                _3474 = _3461;
                                _3475 = _3476;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3459;
                        frontier_phi_67_pred_1 = _3460;
                        frontier_phi_67_pred_2 = _3461;
                        frontier_phi_67_pred_3 = _3458;
                        frontier_phi_67_pred_4 = _3457;
                        frontier_phi_67_pred_5 = _3456;
                    }
                    _3124 = frontier_phi_67_pred;
                    _3126 = frontier_phi_67_pred_1;
                    _3128 = frontier_phi_67_pred_2;
                    _3122 = frontier_phi_67_pred_3;
                    _3120 = frontier_phi_67_pred_4;
                    _3118 = frontier_phi_67_pred_5;
                    uint _3263 = _3262 + 1u;
                    if (_3263 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3256 = _3118;
                        _3257 = _3120;
                        _3258 = _3122;
                        _3259 = _3124;
                        _3260 = _3126;
                        _3261 = _3128;
                        _3262 = _3263;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3126;
                frontier_phi_55_56_ladder_1 = _3128;
                frontier_phi_55_56_ladder_2 = _3124;
                frontier_phi_55_56_ladder_3 = _3122;
                frontier_phi_55_56_ladder_4 = _3120;
                frontier_phi_55_56_ladder_5 = _3118;
            }
            else
            {
                frontier_phi_55_56_ladder = _3012;
                frontier_phi_55_56_ladder_1 = _3014;
                frontier_phi_55_56_ladder_2 = _3010;
                frontier_phi_55_56_ladder_3 = _3008;
                frontier_phi_55_56_ladder_4 = _3006;
                frontier_phi_55_56_ladder_5 = _3004;
            }
            _3117 = frontier_phi_55_56_ladder_5;
            _3119 = frontier_phi_55_56_ladder_4;
            _3121 = frontier_phi_55_56_ladder_3;
            _3123 = frontier_phi_55_56_ladder_2;
            _3125 = frontier_phi_55_56_ladder;
            _3127 = frontier_phi_55_56_ladder_1;
        }
        float _3132 = isnan(1.0) ? _1209 : (isnan(_1209) ? 1.0 : min(_1209, 1.0));
        _2916 = (_3132 * _3123) + _2371;
        _2918 = (_3132 * _3125) + _2373;
        _2920 = (_3132 * _3127) + _2375;
        _2922 = ((_3117 * 0.039999999105930328369140625) * _3132) + _2701;
        _2924 = ((_3119 * 0.039999999105930328369140625) * _3132) + _2703;
        _2926 = ((_3121 * 0.039999999105930328369140625) * _3132) + _2705;
    }
    else
    {
        _2916 = _2371;
        _2918 = _2373;
        _2920 = _2375;
        _2922 = _2701;
        _2924 = _2703;
        _2926 = _2705;
    }
    float _4878 = isnan(0.0) ? _1194 : (isnan(_1194) ? 0.0 : max(_1194, 0.0));
    float _4889 = isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0));
    float _4900 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
    uint _2946 = _289 + 6u;
    float _2954 = _1146 / cbSceneParam._m0[86u].x;
    float _2955 = _1147 / cbSceneParam._m0[86u].y;
    vec4 _2969 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2954, _2955, (log2((isnan(cbSceneParam._m0[77u].w) ? _1081 : (isnan(_1081) ? cbSceneParam._m0[77u].w : min(_1081, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2971 = _2969.x;
    float _2972 = _2969.y;
    float _2973 = _2969.z;
    float _2974 = _2969.w;
    float _3067;
    float _3069;
    float _3071;
    float _3073;
    if (_1081 > cbSceneParam._m0[78u].w)
    {
        float _3029 = isnan(_1081) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1081 : min(cbSceneParam._m0[80u].w, _1081));
        float _3030 = _3029 / _1081;
        float _3041 = _3030 * _1131;
        float _3042 = _1132 * _3030;
        float _3043 = (-0.0) - _3042;
        float _3045 = _3030 * _1133;
        float _3047 = (cbSceneParam._m0[77u].w * _3043) / _3029;
        float _3048 = _3047 + cbSceneParam._m0[79u].w;
        float _3049 = cbSceneParam._m0[79u].w - _3042;
        float _3055 = sqrt(((_3041 * _3041) + (_3042 * _3042)) + (_3045 * _3045));
        float _3058 = (1.0 - (cbSceneParam._m0[77u].w / _3029)) * _3055;
        float _3063 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3065 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3218;
        if (abs((_3043 - _3047) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3218 = ((((_3048 > 0.0) ? exp2(_3063 * _3048) : (2.0 - exp2(_3065 * _3048))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3058;
        }
        else
        {
            float _3178 = 1.0 / cbSceneParam._m0[80u].x;
            float _3179 = isnan(_3049) ? _3048 : (isnan(_3048) ? _3049 : max(_3048, _3049));
            float _3180 = isnan(_3049) ? _3048 : (isnan(_3048) ? _3049 : min(_3048, _3049));
            float _3189 = isnan(0.0) ? _3179 : (isnan(_3179) ? 0.0 : min(_3179, 0.0));
            float _3190 = isnan(0.0) ? _3180 : (isnan(_3180) ? 0.0 : min(_3180, 0.0));
            _3218 = ((abs(_3055 / _3043) * cbSceneParam._m0[80u].y) * ((((_3189 - _3190) * 2.0) - ((exp2(_3063 * (isnan(0.0) ? _3179 : (isnan(_3179) ? 0.0 : max(_3179, 0.0)))) - exp2(_3063 * (isnan(0.0) ? _3180 : (isnan(_3180) ? 0.0 : max(_3180, 0.0))))) * _3178)) - ((exp2(_3065 * _3189) - exp2(_3065 * _3190)) * _3178))) + (_3058 * cbSceneParam._m0[80u].z);
        }
        vec4 _3220 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2954, _2955, 1.0), 0.0);
        float _3229 = exp2((_3218 * (-1.44269502162933349609375)) * (1.0 - _3220.w));
        float _3230 = log2(_3229);
        float _3246 = log2(_2974);
        _3067 = (exp2(_3246 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3230 * cbSceneParam._m0[78u].x)) * _3220.x) / cbSceneParam._m0[78u].x)) + _2971;
        _3069 = (exp2(_3246 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3230 * cbSceneParam._m0[78u].y)) * _3220.y) / cbSceneParam._m0[78u].y)) + _2972;
        _3071 = (exp2(_3246 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3230 * cbSceneParam._m0[78u].z)) * _3220.z) / cbSceneParam._m0[78u].z)) + _2973;
        _3073 = _3229 * _2974;
    }
    else
    {
        _3067 = _2971;
        _3069 = _2972;
        _3071 = _2973;
        _3073 = _2974;
    }
    float _3085 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3086 = _3085 == 3.0;
    float _3087 = log2(_3073);
    float _3094 = exp2(_3087 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4878 : (isnan(_4878) ? 1.0 : min(_4878, 1.0))) * (_2916 + ((isnan(0.0) ? _1933 : (isnan(_1933) ? 0.0 : max(_1933, 0.0))) * _1209))) + ((_2922 + ((isnan(0.0) ? _2224 : (isnan(_2224) ? 0.0 : max(_2224, 0.0))) * _2012)) * cbPerFrame._m0[3u].x));
    float _3095 = exp2(_3087 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4889 : (isnan(_4889) ? 1.0 : min(_4889, 1.0))) * (_2918 + ((isnan(0.0) ? _1936 : (isnan(_1936) ? 0.0 : max(_1936, 0.0))) * _1209))) + ((_2924 + ((isnan(0.0) ? _2227 : (isnan(_2227) ? 0.0 : max(_2227, 0.0))) * _2012)) * cbPerFrame._m0[3u].x));
    float _3096 = exp2(_3087 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4900 : (isnan(_4900) ? 1.0 : min(_4900, 1.0))) * (_2920 + ((isnan(0.0) ? _1939 : (isnan(_1939) ? 0.0 : max(_1939, 0.0))) * _1209))) + ((_2926 + ((isnan(0.0) ? _2230 : (isnan(_2230) ? 0.0 : max(_2230, 0.0))) * _2012)) * cbPerFrame._m0[3u].x));
    float _3105 = (_3085 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3105 * (_3086 ? _3094 : (_3094 + (cbSceneParam._m0[72u].w * _3067)));
    SV_Target.y = _3105 * (_3086 ? _3095 : (_3095 + (cbSceneParam._m0[72u].w * _3069)));
    SV_Target.z = _3105 * (_3086 ? _3096 : (_3096 + (cbSceneParam._m0[72u].w * _3071)));
    SV_Target.w = cbInstanceData._m0[_2946].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2946].w;
}


