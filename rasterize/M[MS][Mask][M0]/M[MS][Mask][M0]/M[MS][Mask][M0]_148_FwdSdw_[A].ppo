#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1647;
float _4285;
float _4286;
float _4287;
float _4288;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _248 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _249 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _250 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _256 = inversesqrt(dot(vec3(_248, _249, _250), vec3(_248, _249, _250)));
    float _257 = _256 * _248;
    float _258 = _256 * _249;
    float _259 = _256 * _250;
    float _263 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _264 = _263 * NORMAL.x;
    float _265 = _263 * NORMAL.y;
    float _266 = _263 * NORMAL.z;
    float _270 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _271 = _270 * TANGENT.x;
    float _272 = _270 * TANGENT.y;
    float _273 = _270 * TANGENT.z;
    float _282 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _284 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _285 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4297 = isnan(0.0) ? _282 : (isnan(_282) ? 0.0 : max(_282, 0.0));
    float _4308 = isnan(0.0) ? _284 : (isnan(_284) ? 0.0 : max(_284, 0.0));
    float _4319 = isnan(0.0) ? _285 : (isnan(_285) ? 0.0 : max(_285, 0.0));
    uint _295 = uint(roundEven(NORMAL.w)) * 13u;
    uint _300 = _295 + 1u;
    uint _304 = _295 + 2u;
    float _313 = sqrt(((cbInstanceData._m0[_300].x * cbInstanceData._m0[_300].x) + (cbInstanceData._m0[_295].x * cbInstanceData._m0[_295].x)) + (cbInstanceData._m0[_304].x * cbInstanceData._m0[_304].x));
    float _314 = _313 * TEXCOORD.z;
    float _315 = _313 * TEXCOORD.w;
    vec4 _328 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _314) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _315) + cbTextureTilingScale._m0[13u].w));
    vec4 _352 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _357 = _352.x * cbMtdParam._m0[11u].x;
    float _358 = _352.y * cbMtdParam._m0[11u].y;
    float _359 = _352.z * cbMtdParam._m0[11u].z;
    vec4 _378 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _314) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _315) + cbTextureTilingScale._m0[5u].w));
    vec4 _397 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _435 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _437 = _435.x;
    float _449 = dot(vec4(_437, _435.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _466 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _397.x) * 2.0) - ((((_437 - _449) * cbMtdParam._m0[24u].z) + _449) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4330 = isnan(0.0) ? _466 : (isnan(_466) ? 0.0 : max(_466, 0.0));
    float _467 = isnan(1.0) ? _4330 : (isnan(_4330) ? 1.0 : min(_4330, 1.0));
    float _474 = (_467 * ((_378.x * cbMtdParam._m0[12u].x) - _357)) + _357;
    float _475 = (_467 * ((_378.y * cbMtdParam._m0[12u].y) - _358)) + _358;
    float _476 = (_467 * ((_378.z * cbMtdParam._m0[12u].z) - _359)) + _359;
    vec4 _493 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _314) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _315) + cbTextureTilingScale._m0[3u].w));
    vec4 _513 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _515 = _513.x;
    float _525 = dot(vec4(_515, _513.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _539 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _397.y) * 2.0) - ((((_515 - _525) * cbMtdParam._m0[24u].z) + _525) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4341 = isnan(0.0) ? _539 : (isnan(_539) ? 0.0 : max(_539, 0.0));
    float _540 = isnan(1.0) ? _4341 : (isnan(_4341) ? 1.0 : min(_4341, 1.0));
    float _547 = (_540 * ((_493.x * cbMtdParam._m0[13u].x) - _474)) + _474;
    float _548 = (_540 * ((_493.y * cbMtdParam._m0[13u].y) - _475)) + _475;
    float _549 = (_540 * ((_493.z * cbMtdParam._m0[13u].z) - _476)) + _476;
    vec4 _567 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _314) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _315) + cbTextureTilingScale._m0[24u].w));
    vec4 _584 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _586 = _584.x;
    float _596 = dot(vec4(_586, _584.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _608 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _397.z) * 2.0) - ((((_586 - _596) * cbMtdParam._m0[24u].z) + _596) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4352 = isnan(0.0) ? _608 : (isnan(_608) ? 0.0 : max(_608, 0.0));
    float _609 = isnan(1.0) ? _4352 : (isnan(_4352) ? 1.0 : min(_4352, 1.0));
    float _616 = (_609 * ((_567.x * cbMtdParam._m0[14u].x) - _547)) + _547;
    float _617 = (_609 * ((_567.y * cbMtdParam._m0[14u].y) - _548)) + _548;
    float _618 = (_609 * ((_567.z * cbMtdParam._m0[14u].z) - _549)) + _549;
    float _622 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _328.x) * _616;
    float _625 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _328.y) * _617;
    float _628 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _328.z) * _618;
    float _635 = ((_616 - _622) * (isnan(1.0) ? _4297 : (isnan(_4297) ? 1.0 : min(_4297, 1.0)))) + _622;
    float _636 = ((_617 - _625) * (isnan(1.0) ? _4308 : (isnan(_4308) ? 1.0 : min(_4308, 1.0)))) + _625;
    float _637 = ((_618 - _628) * (isnan(1.0) ? _4319 : (isnan(_4319) ? 1.0 : min(_4319, 1.0)))) + _628;
    vec4 _655 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _314) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _315) + cbTextureTilingScale._m0[14u].w));
    vec4 _674 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _314) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _315) + cbTextureTilingScale._m0[20u].w));
    vec4 _699 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _314) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _315) + cbTextureTilingScale._m0[4u].w));
    vec4 _716 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _718 = _716.x;
    float _719 = _716.y;
    float _720 = _716.z;
    float _727 = ((_699.x - _718) * _467) + _718;
    float _728 = ((_699.y - _719) * _467) + _719;
    float _729 = ((_699.z - _720) * _467) + _720;
    vec4 _741 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _314) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _315) + cbTextureTilingScale._m0[2u].w));
    float _752 = ((_741.x - _727) * _540) + _727;
    float _753 = ((_741.y - _728) * _540) + _728;
    float _754 = ((_741.z - _729) * _540) + _729;
    vec4 _766 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _314) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _315) + cbTextureTilingScale._m0[23u].w));
    float _779 = ((_766.z - _754) * _609) + _754;
    float _782 = ((((_766.x - _752) * _609) + _752) * 2.0) + (-1.0);
    float _783 = ((((_766.y - _753) * _609) + _753) * 2.0) + (-1.0);
    float _784 = dot(vec2(_782, _783), vec2(_782, _783));
    float _4363 = isnan(0.0) ? _784 : (isnan(_784) ? 0.0 : max(_784, 0.0));
    float _789 = sqrt(1.0 - (isnan(1.0) ? _4363 : (isnan(_4363) ? 1.0 : min(_4363, 1.0))));
    vec4 _807 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _819 = (_782 + ((((_674.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x)) + (((_807.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _820 = (_783 + ((((_674.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x)) + (((_807.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _823 = fma(_789, _264, fma(_820, _271, _819 * _257));
    float _826 = fma(_789, _265, fma(_820, _272, _819 * _258));
    float _829 = fma(_789, _266, fma(_820, _273, _819 * _259));
    float _833 = inversesqrt(dot(vec3(_823, _826, _829), vec3(_823, _826, _829)));
    vec4 _860 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _314) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _315) + cbTextureTilingScale._m0[11u].w));
    float _862 = _860.x;
    float _863 = 1.0 - _862;
    float _869 = (cbMtdParam._m0[19u].x + dot(vec4(_833 * _823, _833 * _826, _833 * _829, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_862 - _863) * cbMtdParam._m0[24u].w) + _863) * cbMtdParam._m0[21u].z);
    float _4374 = isnan(0.0) ? _869 : (isnan(_869) ? 0.0 : max(_869, 0.0));
    float _870 = isnan(1.0) ? _4374 : (isnan(_4374) ? 1.0 : min(_4374, 1.0));
    float _872 = (-0.0) - cbMtdParam._m0[24u].x;
    float _874 = isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : max(_872, 0.0));
    float _875 = isnan(1.0) ? _874 : (isnan(_874) ? 1.0 : min(_874, 1.0));
    float _882 = _870 - ((_870 * TEXCOORD_8.x) * _875);
    float _883 = _870 - ((_870 * TEXCOORD_8.y) * _875);
    float _884 = _870 - ((_870 * TEXCOORD_8.z) * _875);
    float _891 = (_882 * ((_655.x * cbMtdParam._m0[18u].x) - _635)) + _635;
    float _892 = (_883 * ((_655.y * cbMtdParam._m0[18u].y) - _636)) + _636;
    float _893 = (_884 * ((_655.z * cbMtdParam._m0[18u].z) - _637)) + _637;
    float _908 = sqrt(((cbInstanceData._m0[_300].x * cbInstanceData._m0[_300].x) + (cbInstanceData._m0[_295].x * cbInstanceData._m0[_295].x)) + (cbInstanceData._m0[_304].x * cbInstanceData._m0[_304].x));
    float _909 = _908 * TEXCOORD.z;
    float _910 = _908 * TEXCOORD.w;
    vec4 _922 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _909) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _910) + cbTextureTilingScale._m0[19u].w));
    float _924 = _922.x;
    float _925 = 1.0 - _924;
    float _953 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_924 - _925) * cbMtdParam._m0[24u].y) + _925) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4395 = isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0));
    float _954 = isnan(1.0) ? _4395 : (isnan(_4395) ? 1.0 : min(_4395, 1.0));
    float _962 = ((((cbMtdParam._m0[10u].x - _891) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _954) + _891;
    float _963 = ((((cbMtdParam._m0[10u].y - _892) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _954) + _892;
    float _964 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _893)) * _954) + _893;
    float _969 = (((_674.z - _779) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _779;
    float _973 = ((_807.z - _969) * cbMtdParam._m0[19u].w) + _969;
    vec4 _989 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _314) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _315) + cbTextureTilingScale._m0[15u].w));
    float _996 = (_989.x * 2.0) + (-1.0);
    float _997 = (_989.y * 2.0) + (-1.0);
    float _998 = dot(vec2(_996, _997), vec2(_996, _997));
    float _4406 = isnan(0.0) ? _998 : (isnan(_998) ? 0.0 : max(_998, 0.0));
    float _1006 = ((_989.z - _973) * _882) + _973;
    float _1009 = ((cbMtdParam._m0[23u].y - _1006) * _954) + _1006;
    vec4 _1030 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _909) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _910) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _1036 = (_1030.x * 2.0) + (-1.0);
    float _1037 = (_1030.y * 2.0) + (-1.0);
    float _1038 = dot(vec2(_1036, _1037), vec2(_1036, _1037));
    float _4417 = isnan(0.0) ? _1038 : (isnan(_1038) ? 0.0 : max(_1038, 0.0));
    float _1053 = ((sqrt(1.0 - (isnan(1.0) ? _4406 : (isnan(_4406) ? 1.0 : min(_4406, 1.0)))) - _789) * _884) + _789;
    float _1056 = (((_996 - _819) * _882) + _819) + (cbMtdParam._m0[21u].x * _819);
    float _1057 = (((_997 - _820) * _883) + _820) + (cbMtdParam._m0[21u].x * _820);
    float _1068 = (((_1036 - _1056) + (_1056 * cbMtdParam._m0[22u].z)) * _954) + _1056;
    float _1069 = (((_1037 - _1057) + (_1057 * cbMtdParam._m0[22u].z)) * _954) + _1057;
    float _1070 = (_954 * (sqrt(1.0 - (isnan(1.0) ? _4417 : (isnan(_4417) ? 1.0 : min(_4417, 1.0)))) - _1053)) + _1053;
    float _1072 = cbMtdParam._m0[22u].x + _807.w;
    float _1075 = fma(_1070, _264, fma(_1069, _271, _1068 * _257));
    float _1078 = fma(_1070, _265, fma(_1069, _272, _1068 * _258));
    float _1081 = fma(_1070, _266, fma(_1069, _273, _1068 * _259));
    float _1085 = inversesqrt(dot(vec3(_1075, _1078, _1081), vec3(_1075, _1078, _1081)));
    float _1086 = _1085 * _1075;
    float _1087 = _1085 * _1078;
    float _1088 = _1085 * _1081;
    float _4428 = isnan(0.0) ? _1009 : (isnan(_1009) ? 0.0 : max(_1009, 0.0));
    float _1089 = isnan(1.0) ? _4428 : (isnan(_4428) ? 1.0 : min(_4428, 1.0));
    float _4439 = isnan(0.0) ? _1072 : (isnan(_1072) ? 0.0 : max(_1072, 0.0));
    float _4450 = isnan(0.0) ? _962 : (isnan(_962) ? 0.0 : max(_962, 0.0));
    float _4461 = isnan(0.0) ? _963 : (isnan(_963) ? 0.0 : max(_963, 0.0));
    float _4472 = isnan(0.0) ? _964 : (isnan(_964) ? 0.0 : max(_964, 0.0));
    float _1107 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1148 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1158 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1148);
    float _1159 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1148);
    float _1160 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1148);
    float _1164 = inversesqrt(dot(vec3(_1158, _1159, _1160), vec3(_1158, _1159, _1160)));
    float _1165 = _1158 * _1164;
    float _1166 = _1159 * _1164;
    float _1167 = _1160 * _1164;
    vec4 _1172 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1174 = _1172.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1328 = sqrt(((_1158 * _1158) + (_1159 * _1159)) + (_1160 * _1160));
        float _1334 = (cbMatDynParam._m0[5u].x * _1328) + cbMatDynParam._m0[5u].y;
        float _4483 = isnan(0.0) ? _1334 : (isnan(_1334) ? 0.0 : max(_1334, 0.0));
        float _1335 = isnan(1.0) ? _4483 : (isnan(_4483) ? 1.0 : min(_4483, 1.0));
        float _1339 = (cbMatDynParam._m0[5u].z * _1328) + cbMatDynParam._m0[5u].w;
        float _4494 = isnan(0.0) ? _1339 : (isnan(_1339) ? 0.0 : max(_1339, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4494 : (isnan(_4494) ? 1.0 : min(_4494, 1.0))) - _1335)) + _1335) < ((_1174 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1185 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1186 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1204 = fma(_1088, cbSceneParam._m0[5u].z, fma(_1087, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1086));
    float _1207 = fma(_1088, cbSceneParam._m0[6u].z, fma(_1087, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1086));
    float _1210 = fma(_1088, cbSceneParam._m0[7u].z, fma(_1087, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1086));
    uint _1223 = _295 + 9u;
    uint _1224 = _1223 + uint(cbMatDynParam._m0[0u].w);
    float _1230 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4450 : (isnan(_4450) ? 1.0 : min(_4450, 1.0)))) * cbInstanceData._m0[_1224].x;
    float _1231 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4461 : (isnan(_4461) ? 1.0 : min(_4461, 1.0)))) * cbInstanceData._m0[_1224].y;
    float _1232 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4472 : (isnan(_4472) ? 1.0 : min(_4472, 1.0)))) * cbInstanceData._m0[_1224].z;
    float _4505 = isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0));
    float _1233 = isnan(1.0) ? _4505 : (isnan(_4505) ? 1.0 : min(_4505, 1.0));
    float _4516 = isnan(0.0) ? _1231 : (isnan(_1231) ? 0.0 : max(_1231, 0.0));
    float _1234 = isnan(1.0) ? _4516 : (isnan(_4516) ? 1.0 : min(_4516, 1.0));
    float _4527 = isnan(0.0) ? _1232 : (isnan(_1232) ? 0.0 : max(_1232, 0.0));
    float _1235 = isnan(1.0) ? _4527 : (isnan(_4527) ? 1.0 : min(_4527, 1.0));
    vec4 _1244 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1185, cbSceneParam._m0[86u].y * _1186));
    float _1248 = ((isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0))) * TEXCOORD_5.w) * _1244.x;
    float _1249 = dot(vec3(_1086, _1087, _1088), vec3(_1165, _1166, _1167));
    float _1252 = _1249 * 2.0;
    float _1256 = (_1252 * _1086) - _1165;
    float _1257 = (_1252 * _1087) - _1166;
    float _1258 = (_1252 * _1088) - _1167;
    float _1262 = abs(dot(vec3(_1165, _1166, _1167), vec3(_1086, _1087, _1088)));
    float _4538 = isnan(0.0) ? _1262 : (isnan(_1262) ? 0.0 : max(_1262, 0.0));
    float _1264 = sqrt(_1089);
    float _1277 = exp2((_1264 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4538 : (isnan(_4538) ? 1.0 : min(_4538, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1264 * 3.0));
    float _1309 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1313 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1317 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1646;
    float _1648;
    float _1649;
    float _1650;
    float _1651;
    float _1652;
    float _1653;
    float _1654;
    float _1655;
    float _1656;
    float _1657;
    float _1658;
    float _1659;
    float _1660;
    float _1661;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1371 = fma(_1317, cbModelParam._m0[26u].z, fma(_1313, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1309));
        float _1375 = fma(_1317, cbModelParam._m0[27u].z, fma(_1313, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1309));
        float _1379 = fma(_1317, cbModelParam._m0[28u].z, fma(_1313, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1309));
        float _1404 = _1309 + _1086;
        float _1405 = _1313 + _1087;
        float _1406 = _1317 + _1088;
        float _1416 = fma(_1406, cbModelParam._m0[26u].z, fma(_1405, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1404)) - _1371;
        float _1417 = fma(_1406, cbModelParam._m0[27u].z, fma(_1405, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1404)) - _1375;
        float _1418 = fma(_1406, cbModelParam._m0[28u].z, fma(_1405, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1404)) - _1379;
        float _1422 = inversesqrt(dot(vec3(_1416, _1417, _1418), vec3(_1416, _1417, _1418)));
        float _1435 = ((_1422 * _1416) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1371 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1436 = ((_1422 * _1417) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1375 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1437 = ((_1422 * _1418) / cbModelParam._m0[34u].z) + ((((((_1379 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1440 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1435, _1436, _1437), 0.0);
        vec4 _1447 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1435, _1436, _1437), 0.0);
        vec4 _1454 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1435, _1436, _1437), 0.0);
        vec4 _1461 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1435, _1436, _1437), 0.0);
        float _1474 = exp2((_1440.w + (-0.5)) * 20.0) * 2.0;
        float _1475 = _1474 * (_1440.x + (-0.5));
        float _1476 = _1474 * (_1440.y + (-0.5));
        float _1477 = _1474 * (_1440.z + (-0.5));
        float _1484 = exp2((_1447.w + (-0.5)) * 20.0) * 2.0;
        float _1485 = _1484 * (_1447.x + (-0.5));
        float _1486 = _1484 * (_1447.y + (-0.5));
        float _1487 = _1484 * (_1447.z + (-0.5));
        float _1494 = exp2((_1454.w + (-0.5)) * 20.0) * 2.0;
        float _1495 = _1494 * (_1454.x + (-0.5));
        float _1496 = _1494 * (_1454.y + (-0.5));
        float _1497 = _1494 * (_1454.z + (-0.5));
        float _1504 = exp2((_1461.w + (-0.5)) * 20.0) * 2.0;
        float _1505 = _1504 * (_1461.x + (-0.5));
        float _1506 = _1504 * (_1461.y + (-0.5));
        float _1507 = _1504 * (_1461.z + (-0.5));
        float _1508 = isnan(0.0) ? _1505 : (isnan(_1505) ? 0.0 : max(_1505, 0.0));
        float _1509 = isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0));
        float _1510 = isnan(0.0) ? _1507 : (isnan(_1507) ? 0.0 : max(_1507, 0.0));
        float _1511 = _1475 * 0.5;
        float _1512 = _1485 * 0.5;
        float _1513 = _1495 * 0.5;
        float _1514 = dot(vec3(_1511, _1512, _1513), vec3(_1511, _1512, _1513));
        float _1519 = (_1514 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1514);
        float _1528 = (dot(vec3(_1086, _1087, _1088), vec3(_1519 * _1511, _1519 * _1512, _1519 * _1513)) + 1.0) * 0.5;
        float _4564 = isnan(0.0) ? _1528 : (isnan(_1528) ? 0.0 : max(_1528, 0.0));
        float _1538 = sqrt(((_1512 * _1512) + (_1511 * _1511)) + (_1513 * _1513)) / (_1508 + 9.9999997473787516355514526367188e-06);
        float _4575 = isnan(0.0) ? _1538 : (isnan(_1538) ? 0.0 : max(_1538, 0.0));
        float _1539 = isnan(1.0) ? _4575 : (isnan(_4575) ? 1.0 : min(_4575, 1.0));
        float _1540 = _1539 * 2.0;
        float _1544 = (1.0 - _1539) / (_1539 + 1.0);
        float _4586 = isnan(0.0) ? _1544 : (isnan(_1544) ? 0.0 : max(_1544, 0.0));
        float _1545 = isnan(1.0) ? _4586 : (isnan(_4586) ? 1.0 : min(_4586, 1.0));
        float _1554 = ((((1.0 - _1545) * (_1540 + 2.0)) * exp2(log2(isnan(1.0) ? _4564 : (isnan(_4564) ? 1.0 : min(_4564, 1.0))) * (_1540 + 1.0))) + _1545) * _1508;
        float _1555 = _1476 * 0.5;
        float _1556 = _1486 * 0.5;
        float _1557 = _1496 * 0.5;
        float _1558 = dot(vec3(_1555, _1556, _1557), vec3(_1555, _1556, _1557));
        float _1563 = (_1558 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1558);
        float _1571 = (dot(vec3(_1086, _1087, _1088), vec3(_1563 * _1555, _1563 * _1556, _1563 * _1557)) + 1.0) * 0.5;
        float _4597 = isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0));
        float _1580 = sqrt(((_1556 * _1556) + (_1555 * _1555)) + (_1557 * _1557)) / (_1509 + 9.9999997473787516355514526367188e-06);
        float _4608 = isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0));
        float _1581 = isnan(1.0) ? _4608 : (isnan(_4608) ? 1.0 : min(_4608, 1.0));
        float _1582 = _1581 * 2.0;
        float _1586 = (1.0 - _1581) / (_1581 + 1.0);
        float _4619 = isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0));
        float _1587 = isnan(1.0) ? _4619 : (isnan(_4619) ? 1.0 : min(_4619, 1.0));
        float _1596 = ((((1.0 - _1587) * (_1582 + 2.0)) * exp2(log2(isnan(1.0) ? _4597 : (isnan(_4597) ? 1.0 : min(_4597, 1.0))) * (_1582 + 1.0))) + _1587) * _1509;
        float _1597 = _1477 * 0.5;
        float _1598 = _1487 * 0.5;
        float _1599 = _1497 * 0.5;
        float _1600 = dot(vec3(_1597, _1598, _1599), vec3(_1597, _1598, _1599));
        float _1605 = (_1600 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1600);
        float _1613 = (dot(vec3(_1086, _1087, _1088), vec3(_1605 * _1597, _1605 * _1598, _1605 * _1599)) + 1.0) * 0.5;
        float _4630 = isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0));
        float _1622 = sqrt(((_1598 * _1598) + (_1597 * _1597)) + (_1599 * _1599)) / (_1510 + 9.9999997473787516355514526367188e-06);
        float _4641 = isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0));
        float _1623 = isnan(1.0) ? _4641 : (isnan(_4641) ? 1.0 : min(_4641, 1.0));
        float _1624 = _1623 * 2.0;
        float _1628 = (1.0 - _1623) / (_1623 + 1.0);
        float _4652 = isnan(0.0) ? _1628 : (isnan(_1628) ? 0.0 : max(_1628, 0.0));
        float _1629 = isnan(1.0) ? _4652 : (isnan(_4652) ? 1.0 : min(_4652, 1.0));
        float _1638 = ((((1.0 - _1629) * (_1624 + 2.0)) * exp2(log2(isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0))) * (_1624 + 1.0))) + _1629) * _1510;
        _1646 = _1477;
        _1648 = _1476;
        _1649 = _1475;
        _1650 = _1487;
        _1651 = _1486;
        _1652 = _1485;
        _1653 = _1497;
        _1654 = _1496;
        _1655 = _1495;
        _1656 = _1510;
        _1657 = _1509;
        _1658 = _1508;
        _1659 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1554 : (isnan(_1554) ? 0.0 : max(_1554, 0.0)));
        _1660 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1596 : (isnan(_1596) ? 0.0 : max(_1596, 0.0)));
        _1661 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0)));
    }
    else
    {
        _1646 = _1647;
        _1648 = _1647;
        _1649 = _1647;
        _1650 = _1647;
        _1651 = _1647;
        _1652 = _1647;
        _1653 = _1647;
        _1654 = _1647;
        _1655 = _1647;
        _1656 = _1647;
        _1657 = _1647;
        _1658 = _1647;
        _1659 = 0.0;
        _1660 = 0.0;
        _1661 = 0.0;
    }
    float _1956;
    float _1957;
    float _1958;
    float _1959;
    float _1960;
    float _1961;
    float _1962;
    float _1963;
    float _1964;
    float _1965;
    float _1966;
    float _1967;
    float _1968;
    float _1969;
    float _1970;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1687 = fma(_1317, cbModelParam._m0[30u].z, fma(_1313, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1309));
        float _1691 = fma(_1317, cbModelParam._m0[31u].z, fma(_1313, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1309));
        float _1695 = fma(_1317, cbModelParam._m0[32u].z, fma(_1313, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1309));
        float _1718 = _1309 + _1086;
        float _1719 = _1313 + _1087;
        float _1720 = _1317 + _1088;
        float _1730 = fma(_1720, cbModelParam._m0[30u].z, fma(_1719, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1718)) - _1687;
        float _1731 = fma(_1720, cbModelParam._m0[31u].z, fma(_1719, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1718)) - _1691;
        float _1732 = fma(_1720, cbModelParam._m0[32u].z, fma(_1719, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1718)) - _1695;
        float _1736 = inversesqrt(dot(vec3(_1730, _1731, _1732), vec3(_1730, _1731, _1732)));
        float _1749 = ((_1736 * _1730) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1687 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1750 = ((_1736 * _1731) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1691 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1751 = ((_1736 * _1732) / cbModelParam._m0[35u].z) + ((((((_1695 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1753 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1749, _1750, _1751), 0.0);
        vec4 _1760 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1749, _1750, _1751), 0.0);
        vec4 _1767 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1749, _1750, _1751), 0.0);
        vec4 _1774 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1749, _1750, _1751), 0.0);
        float _1786 = exp2((_1753.w + (-0.5)) * 20.0) * 2.0;
        float _1787 = _1786 * (_1753.x + (-0.5));
        float _1788 = _1786 * (_1753.y + (-0.5));
        float _1789 = _1786 * (_1753.z + (-0.5));
        float _1796 = exp2((_1760.w + (-0.5)) * 20.0) * 2.0;
        float _1797 = _1796 * (_1760.x + (-0.5));
        float _1798 = _1796 * (_1760.y + (-0.5));
        float _1799 = _1796 * (_1760.z + (-0.5));
        float _1806 = exp2((_1767.w + (-0.5)) * 20.0) * 2.0;
        float _1807 = _1806 * (_1767.x + (-0.5));
        float _1808 = _1806 * (_1767.y + (-0.5));
        float _1809 = _1806 * (_1767.z + (-0.5));
        float _1816 = exp2((_1774.w + (-0.5)) * 20.0) * 2.0;
        float _1817 = _1816 * (_1774.x + (-0.5));
        float _1818 = _1816 * (_1774.y + (-0.5));
        float _1819 = _1816 * (_1774.z + (-0.5));
        float _1820 = isnan(0.0) ? _1817 : (isnan(_1817) ? 0.0 : max(_1817, 0.0));
        float _1821 = isnan(0.0) ? _1818 : (isnan(_1818) ? 0.0 : max(_1818, 0.0));
        float _1822 = isnan(0.0) ? _1819 : (isnan(_1819) ? 0.0 : max(_1819, 0.0));
        float _1823 = _1787 * 0.5;
        float _1824 = _1797 * 0.5;
        float _1825 = _1807 * 0.5;
        float _1826 = dot(vec3(_1823, _1824, _1825), vec3(_1823, _1824, _1825));
        float _1831 = (_1826 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1826);
        float _1839 = (dot(vec3(_1086, _1087, _1088), vec3(_1831 * _1823, _1831 * _1824, _1831 * _1825)) + 1.0) * 0.5;
        float _4693 = isnan(0.0) ? _1839 : (isnan(_1839) ? 0.0 : max(_1839, 0.0));
        float _1848 = sqrt(((_1824 * _1824) + (_1823 * _1823)) + (_1825 * _1825)) / (_1820 + 9.9999997473787516355514526367188e-06);
        float _4704 = isnan(0.0) ? _1848 : (isnan(_1848) ? 0.0 : max(_1848, 0.0));
        float _1849 = isnan(1.0) ? _4704 : (isnan(_4704) ? 1.0 : min(_4704, 1.0));
        float _1850 = _1849 * 2.0;
        float _1854 = (1.0 - _1849) / (_1849 + 1.0);
        float _4715 = isnan(0.0) ? _1854 : (isnan(_1854) ? 0.0 : max(_1854, 0.0));
        float _1855 = isnan(1.0) ? _4715 : (isnan(_4715) ? 1.0 : min(_4715, 1.0));
        float _1864 = ((((1.0 - _1855) * (_1850 + 2.0)) * exp2(log2(isnan(1.0) ? _4693 : (isnan(_4693) ? 1.0 : min(_4693, 1.0))) * (_1850 + 1.0))) + _1855) * _1820;
        float _1865 = _1788 * 0.5;
        float _1866 = _1798 * 0.5;
        float _1867 = _1808 * 0.5;
        float _1868 = dot(vec3(_1865, _1866, _1867), vec3(_1865, _1866, _1867));
        float _1873 = (_1868 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1868);
        float _1881 = (dot(vec3(_1086, _1087, _1088), vec3(_1873 * _1865, _1873 * _1866, _1873 * _1867)) + 1.0) * 0.5;
        float _4726 = isnan(0.0) ? _1881 : (isnan(_1881) ? 0.0 : max(_1881, 0.0));
        float _1890 = sqrt(((_1866 * _1866) + (_1865 * _1865)) + (_1867 * _1867)) / (_1821 + 9.9999997473787516355514526367188e-06);
        float _4737 = isnan(0.0) ? _1890 : (isnan(_1890) ? 0.0 : max(_1890, 0.0));
        float _1891 = isnan(1.0) ? _4737 : (isnan(_4737) ? 1.0 : min(_4737, 1.0));
        float _1892 = _1891 * 2.0;
        float _1896 = (1.0 - _1891) / (_1891 + 1.0);
        float _4748 = isnan(0.0) ? _1896 : (isnan(_1896) ? 0.0 : max(_1896, 0.0));
        float _1897 = isnan(1.0) ? _4748 : (isnan(_4748) ? 1.0 : min(_4748, 1.0));
        float _1906 = ((((1.0 - _1897) * (_1892 + 2.0)) * exp2(log2(isnan(1.0) ? _4726 : (isnan(_4726) ? 1.0 : min(_4726, 1.0))) * (_1892 + 1.0))) + _1897) * _1821;
        float _1907 = _1789 * 0.5;
        float _1908 = _1799 * 0.5;
        float _1909 = _1809 * 0.5;
        float _1910 = dot(vec3(_1907, _1908, _1909), vec3(_1907, _1908, _1909));
        float _1915 = (_1910 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1910);
        float _1923 = (dot(vec3(_1086, _1087, _1088), vec3(_1915 * _1907, _1915 * _1908, _1915 * _1909)) + 1.0) * 0.5;
        float _4759 = isnan(0.0) ? _1923 : (isnan(_1923) ? 0.0 : max(_1923, 0.0));
        float _1932 = sqrt(((_1908 * _1908) + (_1907 * _1907)) + (_1909 * _1909)) / (_1822 + 9.9999997473787516355514526367188e-06);
        float _4770 = isnan(0.0) ? _1932 : (isnan(_1932) ? 0.0 : max(_1932, 0.0));
        float _1933 = isnan(1.0) ? _4770 : (isnan(_4770) ? 1.0 : min(_4770, 1.0));
        float _1934 = _1933 * 2.0;
        float _1938 = (1.0 - _1933) / (_1933 + 1.0);
        float _4781 = isnan(0.0) ? _1938 : (isnan(_1938) ? 0.0 : max(_1938, 0.0));
        float _1939 = isnan(1.0) ? _4781 : (isnan(_4781) ? 1.0 : min(_4781, 1.0));
        float _1948 = ((((1.0 - _1939) * (_1934 + 2.0)) * exp2(log2(isnan(1.0) ? _4759 : (isnan(_4759) ? 1.0 : min(_4759, 1.0))) * (_1934 + 1.0))) + _1939) * _1822;
        _1956 = _1789;
        _1957 = _1788;
        _1958 = _1787;
        _1959 = _1799;
        _1960 = _1798;
        _1961 = _1797;
        _1962 = _1809;
        _1963 = _1808;
        _1964 = _1807;
        _1965 = _1822;
        _1966 = _1821;
        _1967 = _1820;
        _1968 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0)));
        _1969 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1906 : (isnan(_1906) ? 0.0 : max(_1906, 0.0)));
        _1970 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1948 : (isnan(_1948) ? 0.0 : max(_1948, 0.0)));
    }
    else
    {
        _1956 = _1647;
        _1957 = _1647;
        _1958 = _1647;
        _1959 = _1647;
        _1960 = _1647;
        _1961 = _1647;
        _1962 = _1647;
        _1963 = _1647;
        _1964 = _1647;
        _1965 = _1647;
        _1966 = _1647;
        _1967 = _1647;
        _1968 = 0.0;
        _1969 = 0.0;
        _1970 = 0.0;
    }
    float _1980 = (cbModelParam._m0[1u].x * (_1968 - _1659)) + _1659;
    float _1981 = (cbModelParam._m0[1u].x * (_1969 - _1660)) + _1660;
    float _1982 = (cbModelParam._m0[1u].x * (_1970 - _1661)) + _1661;
    float _2003 = fma(_1982, cbSceneParam._m0[89u].z, fma(_1981, cbSceneParam._m0[89u].y, _1980 * cbSceneParam._m0[89u].x));
    float _2006 = fma(_1982, cbSceneParam._m0[90u].z, fma(_1981, cbSceneParam._m0[90u].y, _1980 * cbSceneParam._m0[90u].x));
    float _2009 = fma(_1982, cbSceneParam._m0[91u].z, fma(_1981, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1980));
    float _2024 = _1256 * 0.5;
    float _2025 = _1257 * 0.5;
    float _2026 = _1258 * 0.5;
    float _2027 = dot(vec4(_2024, _2025, _2026, 1.0), vec4(_1958, _1961, _1964, _1967));
    float _2030 = dot(vec4(_2024, _2025, _2026, 1.0), vec4(_1957, _1960, _1963, _1966));
    float _2033 = dot(vec4(_2024, _2025, _2026, 1.0), vec4(_1956, _1959, _1962, _1965));
    float _2067;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2040 = dot(vec4(_2024, _2025, _2026, 1.0), vec4(_1646, _1650, _1653, _1656));
        float _2044 = dot(vec4(_2024, _2025, _2026, 1.0), vec4(_1648, _1651, _1654, _1657));
        float _2048 = dot(vec4(_2024, _2025, _2026, 1.0), vec4(_1649, _1652, _1655, _1658));
        float _2055 = dot(vec4(cbModelParam._m0[39u]), vec4(_2024, _2025, _2026, 1.0));
        _2067 = dot(vec3(isnan(0.0) ? _2048 : (isnan(_2048) ? 0.0 : max(_2048, 0.0)), isnan(0.0) ? _2044 : (isnan(_2044) ? 0.0 : max(_2044, 0.0)), isnan(0.0) ? _2040 : (isnan(_2040) ? 0.0 : max(_2040, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2055) ? 0.0 : (isnan(0.0) ? _2055 : max(0.0, _2055))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2067 = 1.0;
    }
    float _2078;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2069 = dot(vec4(cbModelParam._m0[40u]), vec4(_2024, _2025, _2026, 1.0));
        _2078 = dot(vec3(isnan(0.0) ? _2027 : (isnan(_2027) ? 0.0 : max(_2027, 0.0)), isnan(0.0) ? _2030 : (isnan(_2030) ? 0.0 : max(_2030, 0.0)), isnan(0.0) ? _2033 : (isnan(_2033) ? 0.0 : max(_2033, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2069) ? 0.0 : (isnan(0.0) ? _2069 : max(0.0, _2069))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2078 = 1.0;
    }
    float _2082 = (_2078 * cbModelParam._m0[1u].x) + (_2067 * (1.0 - cbModelParam._m0[1u].x));
    float _2092 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1089);
    float _2093 = isnan(_2092) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2092 : min(cbModelParam._m0[25u].z, _2092));
    float _2173;
    float _2175;
    float _2177;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2140 = fma(_1317, cbModelParam._m0[13u].z, fma(_1313, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1309)) + cbModelParam._m0[13u].w;
        float _2144 = fma(_1317, cbModelParam._m0[14u].z, fma(_1313, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1309)) + cbModelParam._m0[14u].w;
        float _2148 = fma(_1317, cbModelParam._m0[15u].z, fma(_1313, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1309)) + cbModelParam._m0[15u].w;
        float _2151 = fma(_1258, cbModelParam._m0[13u].z, fma(_1257, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1256));
        float _2154 = fma(_1258, cbModelParam._m0[14u].z, fma(_1257, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1256));
        float _2157 = fma(_1258, cbModelParam._m0[15u].z, fma(_1257, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1256));
        float _2185;
        if (_2151 > 0.0)
        {
            _2185 = abs((1.0 - _2140) / _2151);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_2151 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_2140 + 1.0) / _2151);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _2185 = frontier_phi_17_15_ladder;
        }
        float _2354;
        if (_2154 > 0.0)
        {
            _2354 = abs((1.0 - _2144) / _2154);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_2154 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_2144 + 1.0) / _2154);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2354 = frontier_phi_26_22_ladder;
        }
        float _2649;
        if (_2157 > 0.0)
        {
            _2649 = abs((1.0 - _2148) / _2157);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_2157 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_2148 + 1.0) / _2157);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2649 = frontier_phi_38_33_ladder;
        }
        float _2651 = isnan(_2354) ? _2185 : (isnan(_2185) ? _2354 : min(_2185, _2354));
        float _2652 = isnan(_2649) ? _2651 : (isnan(_2651) ? _2649 : min(_2651, _2649));
        float _2656 = (_2652 * _2151) + _2140;
        float _2657 = (_2652 * _2154) + _2144;
        float _2658 = (_2652 * _2157) + _2148;
        float _2659 = _2652 * 9.9999997473787516355514526367188e-05;
        float _2661 = (-1.0) - _2659;
        float _2663 = _2659 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2658 > _2663) || ((_2658 < _2661) || ((_2657 > _2663) || ((_2657 < _2661) || ((_2656 < _2661) || (_2656 > _2663))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2803 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2658, cbModelParam._m0[9u].z, fma(_2657, cbModelParam._m0[9u].y, _2656 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2658, cbModelParam._m0[10u].z, fma(_2657, cbModelParam._m0[10u].y, _2656 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2658, cbModelParam._m0[11u].z, fma(_2657, cbModelParam._m0[11u].y, _2656 * cbModelParam._m0[11u].x))), _2093);
            frontier_phi_16_38_ladder = _2803.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2803.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2803.x * cbModelParam._m0[1u].y;
        }
        _2173 = frontier_phi_16_38_ladder_2;
        _2175 = frontier_phi_16_38_ladder_1;
        _2177 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _2161 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1256, _1257, _1258), _2093);
        _2173 = _2161.x * cbModelParam._m0[1u].y;
        _2175 = _2161.y * cbModelParam._m0[1u].y;
        _2177 = _2161.z * cbModelParam._m0[1u].y;
    }
    float _2181 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1089);
    float _2182 = isnan(_2181) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2181 : min(cbModelParam._m0[25u].w, _2181));
    float _2271;
    float _2273;
    float _2275;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2235 = fma(_1317, cbModelParam._m0[21u].z, fma(_1313, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1309)) + cbModelParam._m0[21u].w;
        float _2239 = fma(_1317, cbModelParam._m0[22u].z, fma(_1313, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1309)) + cbModelParam._m0[22u].w;
        float _2243 = fma(_1317, cbModelParam._m0[23u].z, fma(_1313, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1309)) + cbModelParam._m0[23u].w;
        float _2246 = fma(_1258, cbModelParam._m0[21u].z, fma(_1257, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1256));
        float _2249 = fma(_1258, cbModelParam._m0[22u].z, fma(_1257, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1256));
        float _2252 = fma(_1258, cbModelParam._m0[23u].z, fma(_1257, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1256));
        float _2359;
        if (_2246 > 0.0)
        {
            _2359 = abs((1.0 - _2235) / _2246);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2246 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2235 + 1.0) / _2246);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2359 = frontier_phi_28_24_ladder;
        }
        float _2676;
        if (_2249 > 0.0)
        {
            _2676 = abs((1.0 - _2239) / _2249);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2249 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2239 + 1.0) / _2249);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2676 = frontier_phi_40_35_ladder;
        }
        float _3003;
        if (_2252 > 0.0)
        {
            _3003 = abs((1.0 - _2243) / _2252);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_2252 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_2243 + 1.0) / _2252);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _3003 = frontier_phi_50_47_ladder;
        }
        float _3005 = isnan(_2676) ? _2359 : (isnan(_2359) ? _2676 : min(_2359, _2676));
        float _3006 = isnan(_3003) ? _3005 : (isnan(_3005) ? _3003 : min(_3005, _3003));
        float _3010 = (_3006 * _2246) + _2235;
        float _3011 = (_3006 * _2249) + _2239;
        float _3012 = (_3006 * _2252) + _2243;
        float _3013 = _3006 * 9.9999997473787516355514526367188e-05;
        float _3014 = (-1.0) - _3013;
        float _3016 = _3013 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_3012 > _3016) || ((_3012 < _3014) || ((_3011 > _3016) || ((_3011 < _3014) || ((_3010 < _3014) || (_3010 > _3016))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3130 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3012, cbModelParam._m0[17u].z, fma(_3011, cbModelParam._m0[17u].y, _3010 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3012, cbModelParam._m0[18u].z, fma(_3011, cbModelParam._m0[18u].y, _3010 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3012, cbModelParam._m0[19u].z, fma(_3011, cbModelParam._m0[19u].y, _3010 * cbModelParam._m0[19u].x))), _2182);
            frontier_phi_25_50_ladder = _3130.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _3130.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _3130.x * cbModelParam._m0[1u].z;
        }
        _2271 = frontier_phi_25_50_ladder_2;
        _2273 = frontier_phi_25_50_ladder_1;
        _2275 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _2255 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1256, _1257, _1258), _2182);
        _2271 = _2255.x * cbModelParam._m0[1u].z;
        _2273 = _2255.y * cbModelParam._m0[1u].z;
        _2275 = _2255.z * cbModelParam._m0[1u].z;
    }
    float _2287 = ((((1.0 - _1277) * ((_1264 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1277 * _1264)) * _1248;
    float _2288 = _2287 * ((cbModelParam._m0[1u].w * (_2271 - _2173)) + _2173);
    float _2289 = _2287 * ((cbModelParam._m0[1u].w * (_2273 - _2175)) + _2175);
    float _2290 = _2287 * ((cbModelParam._m0[1u].w * (_2275 - _2177)) + _2177);
    float _2293 = fma(_2290, cbSceneParam._m0[89u].z, fma(_2289, cbSceneParam._m0[89u].y, _2288 * cbSceneParam._m0[89u].x));
    float _2296 = fma(_2290, cbSceneParam._m0[90u].z, fma(_2289, cbSceneParam._m0[90u].y, _2288 * cbSceneParam._m0[90u].x));
    float _2299 = fma(_2290, cbSceneParam._m0[91u].z, fma(_2289, cbSceneParam._m0[91u].y, _2288 * cbSceneParam._m0[91u].x));
    float _2333 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2337 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2341 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2345 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2346 = _2333 / _2345;
    float _2347 = _2337 / _2345;
    float _2348 = _2341 / _2345;
    float _2495;
    float _2496;
    float _2497;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2375 = ((uint(_2348 > cbSceneParam._m0[59u].y) + uint(_2348 > cbSceneParam._m0[59u].x)) + uint(_2348 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2376 = _2375 + 43u;
        uint _2384 = _2375 + 44u;
        uint _2392 = _2375 + 45u;
        uint _2400 = _2375 + 46u;
        float _2411 = fma(_2345, cbSceneParam._m0[_2376].w, fma(_2341, cbSceneParam._m0[_2376].z, fma(_2337, cbSceneParam._m0[_2376].y, _2333 * cbSceneParam._m0[_2376].x)));
        float _2415 = fma(_2345, cbSceneParam._m0[_2384].w, fma(_2341, cbSceneParam._m0[_2384].z, fma(_2337, cbSceneParam._m0[_2384].y, _2333 * cbSceneParam._m0[_2384].x)));
        float _2423 = fma(_2345, cbSceneParam._m0[_2400].w, fma(_2341, cbSceneParam._m0[_2400].z, fma(_2337, cbSceneParam._m0[_2400].y, _2333 * cbSceneParam._m0[_2400].x)));
        float _2428 = cbSceneParam._m0[33u].z * _2423;
        float _2430 = cbSceneParam._m0[33u].w * _2423;
        float _2433 = fma(_2345, cbSceneParam._m0[_2392].w, fma(_2341, cbSceneParam._m0[_2392].z, fma(_2337, cbSceneParam._m0[_2392].y, _2333 * cbSceneParam._m0[_2392].x))) / _2423;
        float _2481 = (cbSceneParam._m0[33u].x - sqrt(((_2347 * _2347) + (_2346 * _2346)) + (_2348 * _2348))) * cbSceneParam._m0[33u].y;
        float _4907 = isnan(0.0) ? _2481 : (isnan(_2481) ? 0.0 : max(_2481, 0.0));
        float _2488 = (isnan(1.0) ? _4907 : (isnan(_4907) ? 1.0 : min(_4907, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2428 + _2411) / _2423, (_2430 + _2415) / _2423), _2433), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2430 + _2411) / _2423, (_2415 - _2428) / _2423), _2433), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2411 - _2428) / _2423, (_2415 - _2430) / _2423), _2433), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2411 - _2430) / _2423, (_2428 + _2415) / _2423), _2433), 0.0)).x), vec4(0.25)));
        _2495 = 1.0 - (_2488 * cbSceneParam._m0[34u].x);
        _2496 = 1.0 - (_2488 * cbSceneParam._m0[34u].y);
        _2497 = 1.0 - (_2488 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2495 = 1.0;
        _2496 = 1.0;
        _2497 = 1.0;
    }
    float _2561;
    float _2563;
    float _2565;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2549 = fma(_2345, cbSceneParam._m0[63u].w, fma(_2341, cbSceneParam._m0[63u].z, fma(_2337, cbSceneParam._m0[63u].y, _2333 * cbSceneParam._m0[63u].x)));
        float _2550 = fma(_2345, cbSceneParam._m0[60u].w, fma(_2341, cbSceneParam._m0[60u].z, fma(_2337, cbSceneParam._m0[60u].y, _2333 * cbSceneParam._m0[60u].x))) / _2549;
        float _2551 = fma(_2345, cbSceneParam._m0[61u].w, fma(_2341, cbSceneParam._m0[61u].z, fma(_2337, cbSceneParam._m0[61u].y, _2333 * cbSceneParam._m0[61u].x))) / _2549;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2550 >= cbSceneParam._m0[64u].x) && (_2551 >= cbSceneParam._m0[64u].y)) && (_2550 <= cbSceneParam._m0[64u].z)) && (_2551 <= cbSceneParam._m0[64u].w))
        {
            float _2689 = fma(_2345, cbSceneParam._m0[62u].w, fma(_2341, cbSceneParam._m0[62u].z, fma(_2337, cbSceneParam._m0[62u].y, _2333 * cbSceneParam._m0[62u].x))) / _2549;
            float _2693 = isnan(cbSceneParam._m0[41u].w) ? _2689 : (isnan(_2689) ? cbSceneParam._m0[41u].w : max(_2689, cbSceneParam._m0[41u].w));
            float _2736 = (cbSceneParam._m0[33u].x - sqrt(((_2347 * _2347) + (_2346 * _2346)) + (_2348 * _2348))) * cbSceneParam._m0[33u].y;
            float _4923 = isnan(0.0) ? _2736 : (isnan(_2736) ? 0.0 : max(_2736, 0.0));
            float _2743 = (isnan(1.0) ? _4923 : (isnan(_4923) ? 1.0 : min(_4923, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2550, cbSceneParam._m0[33u].w + _2551), _2693), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2550, _2551 - cbSceneParam._m0[33u].z), _2693), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2550 - cbSceneParam._m0[33u].z, _2551 - cbSceneParam._m0[33u].w), _2693), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2550 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2551), _2693), 0.0)).x), vec4(0.25)));
            float _2747 = 1.0 - (_2743 * cbSceneParam._m0[34u].x);
            float _2748 = 1.0 - (_2743 * cbSceneParam._m0[34u].y);
            float _2749 = 1.0 - (_2743 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2749) ? _2497 : (isnan(_2497) ? _2749 : min(_2497, _2749));
            frontier_phi_37_36_ladder_1 = isnan(_2748) ? _2496 : (isnan(_2496) ? _2748 : min(_2496, _2748));
            frontier_phi_37_36_ladder_2 = isnan(_2747) ? _2495 : (isnan(_2495) ? _2747 : min(_2495, _2747));
        }
        else
        {
            frontier_phi_37_36_ladder = _2497;
            frontier_phi_37_36_ladder_1 = _2496;
            frontier_phi_37_36_ladder_2 = _2495;
        }
        _2561 = frontier_phi_37_36_ladder_2;
        _2563 = frontier_phi_37_36_ladder_1;
        _2565 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2561 = _2495;
        _2563 = _2496;
        _2565 = _2497;
    }
    uvec4 _2570 = floatBitsToUint(cbInstanceData._m0[_295 + 5u]);
    uint _2572 = _2570.x * 14u;
    uint _2573 = _2572 + 13u;
    float _2580 = _1248 + (-1.0);
    float _2585 = (cbLight._m0[_2573].x * _2580) + 1.0;
    float _2586 = (cbLight._m0[_2573].y * _2580) + 1.0;
    float _2587 = (cbLight._m0[_2573].z * _2580) + 1.0;
    float _2588 = (cbLight._m0[_2573].w * _2580) + 1.0;
    uint _2589 = _2572 + 5u;
    float _2595 = isnan(1.0) ? _2586 : (isnan(_2586) ? 1.0 : min(_2586, 1.0));
    uint _2599 = _2572 + 4u;
    float _2608 = isnan(1.0) ? _2585 : (isnan(_2585) ? 1.0 : min(_2585, 1.0));
    uint _2612 = _2572 | 1u;
    float _2623 = dot(vec3(cbLight._m0[_2572].xyz), vec3(_1086, _1087, _1088));
    float _2626 = dot(vec3(cbLight._m0[_2612].xyz), vec3(_1086, _1087, _1088));
    float _4959 = isnan(0.0) ? _2623 : (isnan(_2623) ? 0.0 : max(_2623, 0.0));
    float _4970 = isnan(0.0) ? _2626 : (isnan(_2626) ? 0.0 : max(_2626, 0.0));
    float _2631 = (isnan(1.0) ? _4959 : (isnan(_4959) ? 1.0 : min(_4959, 1.0))) * 0.3183098733425140380859375;
    float _2633 = (isnan(1.0) ? _4970 : (isnan(_4970) ? 1.0 : min(_4970, 1.0))) * 0.3183098733425140380859375;
    float _2640 = ((cbLight._m0[_2589].x * _2595) * _2633) + (((cbLight._m0[_2599].x * _2561) * _2608) * _2631);
    float _2641 = ((_2595 * cbLight._m0[_2589].y) * _2633) + (((cbLight._m0[_2599].y * _2563) * _2608) * _2631);
    float _2642 = ((_2595 * cbLight._m0[_2589].z) * _2633) + (((cbLight._m0[_2599].z * _2565) * _2608) * _2631);
    uvec4 _2646 = floatBitsToUint(cbLight._m0[_2572 + 12u]);
    bool _2648 = _2646.x == 0u;
    float _2750;
    float _2752;
    float _2754;
    if (_2648)
    {
        _2750 = _2640;
        _2752 = _2641;
        _2754 = _2642;
    }
    else
    {
        uint _2758 = _2572 + 6u;
        float _2774 = (dot(vec3(cbLight._m0[_2572 + 2u].xyz), vec3(_1086, _1087, _1088)) * 0.5) + 0.5;
        float _2775 = _2774 * _2774;
        float _4981 = isnan(0.0) ? _2775 : (isnan(_2775) ? 0.0 : max(_2775, 0.0));
        float _2776 = isnan(1.0) ? _4981 : (isnan(_4981) ? 1.0 : min(_4981, 1.0));
        float _2777 = isnan(1.0) ? _2587 : (isnan(_2587) ? 1.0 : min(_2587, 1.0));
        _2750 = (((cbLight._m0[_2758].x * 0.3183098733425140380859375) * _2776) * _2777) + _2640;
        _2752 = (((cbLight._m0[_2758].y * 0.3183098733425140380859375) * _2776) * _2777) + _2641;
        _2754 = (((cbLight._m0[_2758].z * 0.3183098733425140380859375) * _2776) * _2777) + _2642;
    }
    bool _2757 = _2646.y == 0u;
    float _2812;
    float _2814;
    float _2816;
    if (_2757)
    {
        _2812 = _2750;
        _2814 = _2752;
        _2816 = _2754;
    }
    else
    {
        uint _2974 = _2572 + 7u;
        float _2990 = (dot(vec3(cbLight._m0[_2572 + 3u].xyz), vec3(_1086, _1087, _1088)) * 0.5) + 0.5;
        float _2991 = _2990 * _2990;
        float _4997 = isnan(0.0) ? _2991 : (isnan(_2991) ? 0.0 : max(_2991, 0.0));
        float _2992 = isnan(1.0) ? _4997 : (isnan(_4997) ? 1.0 : min(_4997, 1.0));
        float _2993 = isnan(1.0) ? _2588 : (isnan(_2588) ? 1.0 : min(_2588, 1.0));
        _2812 = (((cbLight._m0[_2974].x * 0.3183098733425140380859375) * _2992) * _2993) + _2750;
        _2814 = (((cbLight._m0[_2974].y * 0.3183098733425140380859375) * _2992) * _2993) + _2752;
        _2816 = (((cbLight._m0[_2974].z * 0.3183098733425140380859375) * _2992) * _2993) + _2754;
    }
    uint _2819 = _2572 + 8u;
    float _2832 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2572].w)) * _1089) * 0.949999988079071044921875);
    float _2833 = _2832 * _2832;
    float _2834 = cbLight._m0[_2572].x + _1165;
    float _2835 = cbLight._m0[_2572].y + _1166;
    float _2836 = cbLight._m0[_2572].z + _1167;
    float _2840 = inversesqrt(dot(vec3(_2834, _2835, _2836), vec3(_2834, _2835, _2836)));
    float _2841 = _2840 * _2834;
    float _2842 = _2840 * _2835;
    float _2843 = _2840 * _2836;
    float _2844 = dot(vec3(_1086, _1087, _1088), vec3(cbLight._m0[_2572].xyz));
    float _5013 = isnan(0.0) ? _2844 : (isnan(_2844) ? 0.0 : max(_2844, 0.0));
    float _2847 = isnan(1.0) ? _5013 : (isnan(_5013) ? 1.0 : min(_5013, 1.0));
    float _5024 = isnan(0.0) ? _1249 : (isnan(_1249) ? 0.0 : max(_1249, 0.0));
    float _2848 = isnan(1.0) ? _5024 : (isnan(_5024) ? 1.0 : min(_5024, 1.0));
    float _2849 = dot(vec3(_1086, _1087, _1088), vec3(_2841, _2842, _2843));
    float _5035 = isnan(0.0) ? _2849 : (isnan(_2849) ? 0.0 : max(_2849, 0.0));
    float _2852 = isnan(1.0) ? _5035 : (isnan(_5035) ? 1.0 : min(_5035, 1.0));
    float _2853 = dot(vec3(cbLight._m0[_2572].xyz), vec3(_2841, _2842, _2843));
    float _5046 = isnan(0.0) ? _2853 : (isnan(_2853) ? 0.0 : max(_2853, 0.0));
    float _2857 = _2833 * _2833;
    float _2861 = ((_2852 * _2852) * (_2857 + (-1.0))) + 1.0;
    float _2872 = (exp2(log2(1.0 - (isnan(1.0) ? _5046 : (isnan(_5046) ? 1.0 : min(_5046, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2873 = 1.0 - _2833;
    float _2884 = (0.5 / (((_2848 * ((_2847 * _2873) + _2833)) + 9.9999999392252902907785028219223e-09) + (((_2848 * _2873) + _2833) * _2847))) * _2847;
    float _5057 = isnan(0.0) ? _2884 : (isnan(_2884) ? 0.0 : max(_2884, 0.0));
    float _2886 = (isnan(1.0) ? _5057 : (isnan(_5057) ? 1.0 : min(_5057, 1.0))) * (_2857 / ((_2861 * _2861) * 3.141590118408203125));
    uint _2900 = _2572 + 9u;
    float _2911 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2612].w)) * _1089) * 0.949999988079071044921875);
    float _2912 = _2911 * _2911;
    float _2913 = cbLight._m0[_2612].x + _1165;
    float _2914 = cbLight._m0[_2612].y + _1166;
    float _2915 = cbLight._m0[_2612].z + _1167;
    float _2919 = inversesqrt(dot(vec3(_2913, _2914, _2915), vec3(_2913, _2914, _2915)));
    float _2920 = _2919 * _2913;
    float _2921 = _2919 * _2914;
    float _2922 = _2919 * _2915;
    float _2923 = dot(vec3(_1086, _1087, _1088), vec3(cbLight._m0[_2612].xyz));
    float _5068 = isnan(0.0) ? _2923 : (isnan(_2923) ? 0.0 : max(_2923, 0.0));
    float _2926 = isnan(1.0) ? _5068 : (isnan(_5068) ? 1.0 : min(_5068, 1.0));
    float _2927 = dot(vec3(_1086, _1087, _1088), vec3(_2920, _2921, _2922));
    float _5079 = isnan(0.0) ? _2927 : (isnan(_2927) ? 0.0 : max(_2927, 0.0));
    float _2930 = isnan(1.0) ? _5079 : (isnan(_5079) ? 1.0 : min(_5079, 1.0));
    float _2931 = dot(vec3(cbLight._m0[_2612].xyz), vec3(_2920, _2921, _2922));
    float _5090 = isnan(0.0) ? _2931 : (isnan(_2931) ? 0.0 : max(_2931, 0.0));
    float _2935 = _2912 * _2912;
    float _2939 = ((_2930 * _2930) * (_2935 + (-1.0))) + 1.0;
    float _2948 = (exp2(log2(1.0 - (isnan(1.0) ? _5090 : (isnan(_5090) ? 1.0 : min(_5090, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2949 = 1.0 - _2912;
    float _2959 = (0.5 / (((_2848 * ((_2926 * _2949) + _2912)) + 9.9999999392252902907785028219223e-09) + (((_2848 * _2949) + _2912) * _2926))) * _2926;
    float _5101 = isnan(0.0) ? _2959 : (isnan(_2959) ? 0.0 : max(_2959, 0.0));
    float _2961 = (isnan(1.0) ? _5101 : (isnan(_5101) ? 1.0 : min(_5101, 1.0))) * (_2935 / ((_2939 * _2939) * 3.141590118408203125));
    float _2971 = (((_2948 * cbLight._m0[_2900].x) * _2961) * _2595) + ((((cbLight._m0[_2819].x * _2561) * _2872) * _2886) * _2608);
    float _2972 = (((_2948 * cbLight._m0[_2900].y) * _2961) * _2595) + ((((cbLight._m0[_2819].y * _2563) * _2872) * _2886) * _2608);
    float _2973 = (((_2948 * cbLight._m0[_2900].z) * _2961) * _2595) + ((((cbLight._m0[_2819].z * _2565) * _2872) * _2886) * _2608);
    float _3029;
    float _3031;
    float _3033;
    if (_2648)
    {
        _3029 = _2971;
        _3031 = _2972;
        _3033 = _2973;
    }
    else
    {
        uint _3035 = _2572 + 2u;
        uint _3039 = _2572 + 10u;
        float _3053 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3035].w)) * _1089) * 0.949999988079071044921875);
        float _3054 = _3053 * _3053;
        float _3055 = cbLight._m0[_3035].x + _1165;
        float _3056 = cbLight._m0[_3035].y + _1166;
        float _3057 = cbLight._m0[_3035].z + _1167;
        float _3061 = inversesqrt(dot(vec3(_3055, _3056, _3057), vec3(_3055, _3056, _3057)));
        float _3062 = _3061 * _3055;
        float _3063 = _3061 * _3056;
        float _3064 = _3061 * _3057;
        float _3065 = dot(vec3(_1086, _1087, _1088), vec3(cbLight._m0[_3035].xyz));
        float _5112 = isnan(0.0) ? _3065 : (isnan(_3065) ? 0.0 : max(_3065, 0.0));
        float _3068 = isnan(1.0) ? _5112 : (isnan(_5112) ? 1.0 : min(_5112, 1.0));
        float _3069 = dot(vec3(_1086, _1087, _1088), vec3(_3062, _3063, _3064));
        float _5123 = isnan(0.0) ? _3069 : (isnan(_3069) ? 0.0 : max(_3069, 0.0));
        float _3072 = isnan(1.0) ? _5123 : (isnan(_5123) ? 1.0 : min(_5123, 1.0));
        float _3073 = dot(vec3(cbLight._m0[_3035].xyz), vec3(_3062, _3063, _3064));
        float _5134 = isnan(0.0) ? _3073 : (isnan(_3073) ? 0.0 : max(_3073, 0.0));
        float _3077 = _3054 * _3054;
        float _3081 = ((_3072 * _3072) * (_3077 + (-1.0))) + 1.0;
        float _3090 = (exp2(log2(1.0 - (isnan(1.0) ? _5134 : (isnan(_5134) ? 1.0 : min(_5134, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3091 = 1.0 - _3054;
        float _3101 = (0.5 / (((_2848 * ((_3068 * _3091) + _3054)) + 9.9999999392252902907785028219223e-09) + (((_2848 * _3091) + _3054) * _3068))) * _3068;
        float _5145 = isnan(0.0) ? _3101 : (isnan(_3101) ? 0.0 : max(_3101, 0.0));
        float _3103 = (isnan(1.0) ? _5145 : (isnan(_5145) ? 1.0 : min(_5145, 1.0))) * (_3077 / ((_3081 * _3081) * 3.141590118408203125));
        float _3104 = isnan(1.0) ? _2587 : (isnan(_2587) ? 1.0 : min(_2587, 1.0));
        _3029 = (((_3090 * cbLight._m0[_3039].x) * _3103) * _3104) + _2971;
        _3031 = (((_3090 * cbLight._m0[_3039].y) * _3103) * _3104) + _2972;
        _3033 = (((_3090 * cbLight._m0[_3039].z) * _3103) * _3104) + _2973;
    }
    float _3135;
    float _3137;
    float _3139;
    if (_2757)
    {
        _3135 = _3029;
        _3137 = _3031;
        _3139 = _3033;
    }
    else
    {
        uint _3146 = _2572 + 3u;
        uint _3150 = _2572 + 11u;
        float _3164 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3146].w)) * _1089) * 0.949999988079071044921875);
        float _3165 = _3164 * _3164;
        float _3166 = cbLight._m0[_3146].x + _1165;
        float _3167 = cbLight._m0[_3146].y + _1166;
        float _3168 = cbLight._m0[_3146].z + _1167;
        float _3172 = inversesqrt(dot(vec3(_3166, _3167, _3168), vec3(_3166, _3167, _3168)));
        float _3173 = _3172 * _3166;
        float _3174 = _3172 * _3167;
        float _3175 = _3172 * _3168;
        float _3176 = dot(vec3(_1086, _1087, _1088), vec3(cbLight._m0[_3146].xyz));
        float _5161 = isnan(0.0) ? _3176 : (isnan(_3176) ? 0.0 : max(_3176, 0.0));
        float _3179 = isnan(1.0) ? _5161 : (isnan(_5161) ? 1.0 : min(_5161, 1.0));
        float _3180 = dot(vec3(_1086, _1087, _1088), vec3(_3173, _3174, _3175));
        float _5172 = isnan(0.0) ? _3180 : (isnan(_3180) ? 0.0 : max(_3180, 0.0));
        float _3183 = isnan(1.0) ? _5172 : (isnan(_5172) ? 1.0 : min(_5172, 1.0));
        float _3184 = dot(vec3(cbLight._m0[_3146].xyz), vec3(_3173, _3174, _3175));
        float _5183 = isnan(0.0) ? _3184 : (isnan(_3184) ? 0.0 : max(_3184, 0.0));
        float _3188 = _3165 * _3165;
        float _3192 = ((_3183 * _3183) * (_3188 + (-1.0))) + 1.0;
        float _3201 = (exp2(log2(1.0 - (isnan(1.0) ? _5183 : (isnan(_5183) ? 1.0 : min(_5183, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3202 = 1.0 - _3165;
        float _3212 = (0.5 / (((_2848 * ((_3179 * _3202) + _3165)) + 9.9999999392252902907785028219223e-09) + (((_2848 * _3202) + _3165) * _3179))) * _3179;
        float _5194 = isnan(0.0) ? _3212 : (isnan(_3212) ? 0.0 : max(_3212, 0.0));
        float _3214 = (isnan(1.0) ? _5194 : (isnan(_5194) ? 1.0 : min(_5194, 1.0))) * (_3188 / ((_3192 * _3192) * 3.141590118408203125));
        float _3215 = isnan(1.0) ? _2588 : (isnan(_2588) ? 1.0 : min(_2588, 1.0));
        _3135 = (((_3201 * cbLight._m0[_3150].x) * _3214) * _3215) + _3029;
        _3137 = (((_3201 * cbLight._m0[_3150].y) * _3214) * _3215) + _3031;
        _3139 = (((_3201 * cbLight._m0[_3150].z) * _3214) * _3215) + _3033;
    }
    float _3281;
    float _3283;
    float _3285;
    float _3287;
    float _3289;
    float _3291;
    if (_2570.y == 0u)
    {
        uvec4 _3236 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3237 = _3236.x;
        uint _3248 = uint((float(_3236.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1186) / _3237))) + floor(float(uint(cbSceneParam._m0[85u].x * _1185) / _3237)));
        float _3258 = (log2(_2348 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3259 = isnan(0.0) ? _3258 : (isnan(_3258) ? 0.0 : max(_3258, 0.0));
        uint _3262 = uint(isnan(14.0) ? _3259 : (isnan(_3259) ? 14.0 : min(_3259, 14.0)));
        uvec4 _3267 = texelFetch(g_lightClusterGridBuffer, int(((_3262 << 2u) + (_3248 << 6u)) >> 2u));
        uint _3268 = _3267.x;
        uint _3269 = _3236.z;
        float _3348;
        float _3350;
        float _3352;
        float _3354;
        float _3356;
        float _3358;
        if (((((1u << ((_3269 >> 4u) & 15u)) + 4294967295u) & _3268) == 0u) || ((_3269 & 240u) == 0u))
        {
            _3348 = 0.0;
            _3350 = 0.0;
            _3352 = 0.0;
            _3354 = 0.0;
            _3356 = 0.0;
            _3358 = 0.0;
        }
        else
        {
            float _3349;
            float _3351;
            float _3353;
            float _3355;
            float _3357;
            float _3359;
            float _3500 = 0.0;
            float _3501 = 0.0;
            float _3502 = 0.0;
            float _3503 = 0.0;
            float _3504 = 0.0;
            float _3505 = 0.0;
            uint _3506 = 0u;
            uint _3515;
            bool _3516;
            for (;;)
            {
                _3515 = texelFetch(g_lightClassification, int((((_3262 << 5u) + (_3248 << 9u)) + (_3506 << 2u)) >> 2u)).x;
                _3516 = _3515 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3516)
                {
                    frontier_phi_71_pred = _3505;
                    frontier_phi_71_pred_1 = _3504;
                    frontier_phi_71_pred_2 = _3503;
                    frontier_phi_71_pred_3 = _3502;
                    frontier_phi_71_pred_4 = _3501;
                    frontier_phi_71_pred_5 = _3500;
                }
                else
                {
                    float _3645;
                    float _3646;
                    float _3647;
                    float _3648;
                    float _3649;
                    float _3650;
                    uint _3651;
                    _3645 = _3500;
                    _3646 = _3501;
                    _3647 = _3502;
                    _3648 = _3503;
                    _3649 = _3504;
                    _3650 = _3505;
                    _3651 = _3515;
                    float _3572;
                    float _3573;
                    float _3574;
                    float _3575;
                    float _3576;
                    float _3577;
                    for (;;)
                    {
                        uint _3655 = uint(findLSB(_3651)) + (_3506 << 5u);
                        uint _3652 = (_3651 + 4294967295u) & _3651;
                        uint _3657 = _3655 * 48u;
                        vec4 _3671 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3657)).x, texelFetch(g_PointLightRenderingBuffer, int(_3657 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3657 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3657 + 3u)).x));
                        uint _3677 = (_3655 * 48u) + 4u;
                        vec4 _3690 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3677)).x, texelFetch(g_PointLightRenderingBuffer, int(_3677 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3677 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3677 + 3u)).x));
                        uint _3696 = (_3655 * 48u) + 8u;
                        vec3 _3707 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3696)).x, texelFetch(g_PointLightRenderingBuffer, int(_3696 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3696 + 2u)).x));
                        float _3711 = _3671.x - _2346;
                        float _3712 = _3671.y - _2347;
                        float _3713 = _3671.z - _2348;
                        float _3714 = dot(vec3(_3711, _3712, _3713), vec3(_3711, _3712, _3713));
                        float _3717 = inversesqrt(_3714);
                        float _3718 = _3717 * _3711;
                        float _3719 = _3717 * _3712;
                        float _3720 = _3717 * _3713;
                        float _3721 = dot(vec3(_1204, _1207, _1210), vec3(_3718, _3719, _3720));
                        float _3726 = 1.0 - (_3714 * _3671.w);
                        float _5220 = isnan(0.0) ? _3726 : (isnan(_3726) ? 0.0 : max(_3726, 0.0));
                        float _3727 = isnan(1.0) ? _5220 : (isnan(_5220) ? 1.0 : min(_5220, 1.0));
                        float _3728 = sqrt(_3714) * _3690.w;
                        float _3731 = 1.39999997615814208984375 / (_3728 + 1.39999997615814208984375);
                        float _3732 = _3731 * _3731;
                        float _3735 = ((1.0 - _3732) * _3721) + _3732;
                        float _3738 = _3728 * _3728;
                        float _3742 = ((isnan(0.0) ? _3735 : (isnan(_3735) ? 0.0 : max(_3735, 0.0))) * _3727) / ((_3738 * 0.699999988079071044921875) + 1.0);
                        float _3746 = (-0.0) - _2346;
                        float _3747 = (-0.0) - _2347;
                        float _3748 = (-0.0) - _2348;
                        float _3752 = inversesqrt(dot(vec3(_3746, _3747, _3748), vec3(_3746, _3747, _3748)));
                        float _3753 = _3752 * _3746;
                        float _3754 = _3752 * _3747;
                        float _3755 = _3752 * _3748;
                        float _3762 = exp2(log2(1.0 / ((_3738 * 3.5) + 5.0)) * 0.25);
                        float _3763 = 1.0 - _1264;
                        float _3770 = sqrt(1.0 - ((1.0 - (_3763 * _3763)) * (1.0 - (_3762 * _3762))));
                        float _3771 = _3770 * _3770;
                        float _3772 = _3771 * _3771;
                        float _3773 = _3753 + _3718;
                        float _3774 = _3754 + _3719;
                        float _3775 = _3755 + _3720;
                        float _3779 = inversesqrt(dot(vec3(_3773, _3774, _3775), vec3(_3773, _3774, _3775)));
                        float _3783 = dot(vec3(_1204, _1207, _1210), vec3(_3753, _3754, _3755));
                        float _5236 = isnan(0.0) ? _3783 : (isnan(_3783) ? 0.0 : max(_3783, 0.0));
                        float _3786 = isnan(1.0) ? _5236 : (isnan(_5236) ? 1.0 : min(_5236, 1.0));
                        float _3787 = dot(vec3(_1204, _1207, _1210), vec3(_3779 * _3773, _3779 * _3774, _3779 * _3775));
                        float _5247 = isnan(0.0) ? _3787 : (isnan(_3787) ? 0.0 : max(_3787, 0.0));
                        float _3790 = isnan(1.0) ? _5247 : (isnan(_5247) ? 1.0 : min(_5247, 1.0));
                        float _3794 = ((_3790 * _3790) * (_3772 + (-1.0))) + 1.0;
                        float _3795 = _3731 * _3771;
                        float _3796 = _3795 * _3795;
                        float _3799 = ((1.0 - _3796) * _3721) + _3796;
                        float _5258 = isnan(0.0) ? _3799 : (isnan(_3799) ? 0.0 : max(_3799, 0.0));
                        float _3800 = isnan(1.0) ? _5258 : (isnan(_5258) ? 1.0 : min(_5258, 1.0));
                        float _3801 = 1.0 - _3771;
                        float _3811 = (0.5 / (((_3800 * ((_3786 * _3801) + _3771)) + 9.9999999392252902907785028219223e-09) + (((_3800 * _3801) + _3771) * _3786))) * _3800;
                        float _5269 = isnan(0.0) ? _3811 : (isnan(_3811) ? 0.0 : max(_3811, 0.0));
                        float _3822 = (((_3772 * 3.1415927410125732421875) * (isnan(1.0) ? _5269 : (isnan(_5269) ? 1.0 : min(_5269, 1.0)))) / ((_3794 * _3794) * ((_3738 * 2.1991131305694580078125) + 3.141590118408203125))) * _3727;
                        _3575 = (_3742 * _3690.x) + _3648;
                        _3576 = (_3742 * _3690.y) + _3649;
                        _3577 = (_3742 * _3690.z) + _3650;
                        _3572 = (_3822 * _3707.x) + _3645;
                        _3573 = (_3822 * _3707.y) + _3646;
                        _3574 = (_3822 * _3707.z) + _3647;
                        if (_3652 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3645 = _3572;
                            _3646 = _3573;
                            _3647 = _3574;
                            _3648 = _3575;
                            _3649 = _3576;
                            _3650 = _3577;
                            _3651 = _3652;
                        }
                    }
                    frontier_phi_71_pred = _3577;
                    frontier_phi_71_pred_1 = _3576;
                    frontier_phi_71_pred_2 = _3575;
                    frontier_phi_71_pred_3 = _3574;
                    frontier_phi_71_pred_4 = _3573;
                    frontier_phi_71_pred_5 = _3572;
                }
                _3359 = frontier_phi_71_pred;
                _3357 = frontier_phi_71_pred_1;
                _3355 = frontier_phi_71_pred_2;
                _3353 = frontier_phi_71_pred_3;
                _3351 = frontier_phi_71_pred_4;
                _3349 = frontier_phi_71_pred_5;
                uint _3507 = _3506 + 1u;
                if (_3507 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3500 = _3349;
                    _3501 = _3351;
                    _3502 = _3353;
                    _3503 = _3355;
                    _3504 = _3357;
                    _3505 = _3359;
                    _3506 = _3507;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3348 = _3349;
            _3350 = _3351;
            _3352 = _3353;
            _3354 = _3355;
            _3356 = _3357;
            _3358 = _3359;
        }
        uvec4 _3362 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3363 = _3362.z;
        uint _3365 = (_3363 >> 8u) & 15u;
        float _3468;
        float _3470;
        float _3472;
        float _3474;
        float _3476;
        float _3478;
        if (((4294967295u << _3365) & _3268) == 0u)
        {
            _3468 = _3348;
            _3470 = _3350;
            _3472 = _3352;
            _3474 = _3354;
            _3476 = _3356;
            _3478 = _3358;
        }
        else
        {
            float _3493 = inversesqrt(dot(vec3(_2346, _2347, _2348), vec3(_2346, _2347, _2348)));
            float _3494 = _3493 * _2346;
            float _3495 = _3493 * _2347;
            float _3496 = _3493 * _2348;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3365 < ((_3363 >> 12u) & 15u))
            {
                float _3469;
                float _3471;
                float _3473;
                float _3475;
                float _3477;
                float _3479;
                float _3628 = _3348;
                float _3629 = _3350;
                float _3630 = _3352;
                float _3631 = _3354;
                float _3632 = _3356;
                float _3633 = _3358;
                uint _3634 = _3365;
                uint _3643;
                bool _3644;
                for (;;)
                {
                    _3643 = texelFetch(g_lightClassification, int((((_3262 << 5u) + (_3248 << 9u)) + (_3634 << 2u)) >> 2u)).x;
                    _3644 = _3643 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3644)
                    {
                        frontier_phi_82_pred = _3633;
                        frontier_phi_82_pred_1 = _3632;
                        frontier_phi_82_pred_2 = _3631;
                        frontier_phi_82_pred_3 = _3630;
                        frontier_phi_82_pred_4 = _3629;
                        frontier_phi_82_pred_5 = _3628;
                    }
                    else
                    {
                        float _3836;
                        float _3837;
                        float _3838;
                        float _3839;
                        float _3840;
                        float _3841;
                        float _4129;
                        float _4130;
                        float _4131;
                        float _4132;
                        float _4133;
                        float _4134;
                        float _3849 = _3628;
                        float _3850 = _3629;
                        float _3851 = _3630;
                        float _3852 = _3631;
                        float _3853 = _3632;
                        float _3854 = _3633;
                        uint _3855 = _3643;
                        uint _3856;
                        vec4 _3881;
                        float _3882;
                        vec4 _3897;
                        vec3 _3909;
                        vec4 _3924;
                        vec4 _3939;
                        float _3985;
                        bool _3986;
                        for (;;)
                        {
                            uint _3866 = ((_3634 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3855));
                            _3856 = (_3855 + 4294967295u) & _3855;
                            uint _3868 = _3866 * 40u;
                            _3881 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3868)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3868 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3868 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3868 + 3u)).x));
                            _3882 = _3881.w;
                            uint _3884 = (_3866 * 40u) + 4u;
                            _3897 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3884)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3884 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3884 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3884 + 3u)).x));
                            uint _3899 = (_3866 * 40u) + 8u;
                            _3909 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3899)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3899 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3899 + 2u)).x));
                            uint _3911 = (_3866 * 40u) + 16u;
                            _3924 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3911)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3911 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3911 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3911 + 3u)).x));
                            uint _3926 = (_3866 * 40u) + 20u;
                            _3939 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3926)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3926 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3926 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3926 + 3u)).x));
                            uint _3941 = (_3866 * 40u) + 24u;
                            vec4 _3954 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3941)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3941 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3941 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3941 + 3u)).x));
                            uint _3960 = (_3866 * 40u) + 28u;
                            vec4 _3973 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3960)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3960 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3960 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3960 + 3u)).x));
                            _3985 = fma(_2348, _3973.z, fma(_2347, _3973.y, _3973.x * _2346)) + _3973.w;
                            _3986 = !((fma(_2348, _3954.z, fma(_2347, _3954.y, _3954.x * _2346)) + _3954.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3986)
                            {
                                float _4013 = _3881.x - _2346;
                                float _4014 = _3881.y - _2347;
                                float _4015 = _3881.z - _2348;
                                float _4016 = dot(vec3(_4013, _4014, _4015), vec3(_4013, _4014, _4015));
                                float _4019 = inversesqrt(_4016);
                                float _4020 = _4019 * _4013;
                                float _4021 = _4019 * _4014;
                                float _4022 = _4019 * _4015;
                                float _4026 = 1.0 - (_4016 / (_3882 * _3882));
                                float _5280 = isnan(0.0) ? _4026 : (isnan(_4026) ? 0.0 : max(_4026, 0.0));
                                float _4027 = isnan(1.0) ? _5280 : (isnan(_5280) ? 1.0 : min(_5280, 1.0));
                                float _4031 = sqrt(_4016) * _3897.w;
                                float _4033 = 1.39999997615814208984375 / (_4031 + 1.39999997615814208984375);
                                float _4034 = _4033 * _4033;
                                float _4037 = ((1.0 - _4034) * dot(vec3(_4020, _4021, _4022), vec3(_1204, _1207, _1210))) + _4034;
                                float _4040 = _4031 * _4031;
                                float _4044 = (fma(_2348, _3924.z, fma(_2347, _3924.y, _3924.x * _2346)) + _3924.w) / _3985;
                                float _4045 = (fma(_2348, _3939.z, fma(_2347, _3939.y, _3939.x * _2346)) + _3939.w) / _3985;
                                float _4049 = 1.0 - dot(vec2(_4044, _4045), vec2(_4044, _4045));
                                float _5296 = isnan(0.0) ? _4049 : (isnan(_4049) ? 0.0 : max(_4049, 0.0));
                                float _4050 = isnan(1.0) ? _5296 : (isnan(_5296) ? 1.0 : min(_5296, 1.0));
                                float _4051 = _4050 * (((isnan(0.0) ? _4037 : (isnan(_4037) ? 0.0 : max(_4037, 0.0))) * _4027) / ((_4040 * 0.699999988079071044921875) + 1.0));
                                float _4063 = exp2(log2(1.0 / ((_4040 * 3.5) + 5.0)) * 0.25);
                                float _4064 = 1.0 - _1264;
                                float _4071 = sqrt(1.0 - ((1.0 - (_4064 * _4064)) * (1.0 - (_4063 * _4063))));
                                float _4072 = _4071 * _4071;
                                float _4073 = _4072 * _4072;
                                float _4074 = _4020 - _3494;
                                float _4075 = _4021 - _3495;
                                float _4076 = _4022 - _3496;
                                float _4080 = inversesqrt(dot(vec3(_4074, _4075, _4076), vec3(_4074, _4075, _4076)));
                                float _4084 = dot(vec3(_1204, _1207, _1210), vec3((-0.0) - _3494, (-0.0) - _3495, (-0.0) - _3496));
                                float _5307 = isnan(0.0) ? _4084 : (isnan(_4084) ? 0.0 : max(_4084, 0.0));
                                float _4087 = isnan(1.0) ? _5307 : (isnan(_5307) ? 1.0 : min(_5307, 1.0));
                                float _4088 = dot(vec3(_1204, _1207, _1210), vec3(_4080 * _4074, _4080 * _4075, _4080 * _4076));
                                float _5318 = isnan(0.0) ? _4088 : (isnan(_4088) ? 0.0 : max(_4088, 0.0));
                                float _4091 = isnan(1.0) ? _5318 : (isnan(_5318) ? 1.0 : min(_5318, 1.0));
                                float _4095 = ((_4091 * _4091) * (_4073 + (-1.0))) + 1.0;
                                float _4096 = _4033 * _4072;
                                float _4097 = _4096 * _4096;
                                float _4103 = ((1.0 - _4097) * dot(vec3(_1204, _1207, _1210), vec3(_4020, _4021, _4022))) + _4097;
                                float _5329 = isnan(0.0) ? _4103 : (isnan(_4103) ? 0.0 : max(_4103, 0.0));
                                float _4104 = isnan(1.0) ? _5329 : (isnan(_5329) ? 1.0 : min(_5329, 1.0));
                                float _4105 = 1.0 - _4072;
                                float _4115 = (0.5 / (((_4104 * ((_4087 * _4105) + _4072)) + 9.9999999392252902907785028219223e-09) + (((_4104 * _4105) + _4072) * _4087))) * _4104;
                                float _5340 = isnan(0.0) ? _4115 : (isnan(_4115) ? 0.0 : max(_4115, 0.0));
                                float _4125 = (_4050 * _4027) * (((_4073 * 3.1415927410125732421875) * (isnan(1.0) ? _5340 : (isnan(_5340) ? 1.0 : min(_5340, 1.0)))) / ((_4095 * _4095) * ((_4040 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _4051 * _3897.z;
                                frontier_phi_88_pred_1 = _4051 * _3897.y;
                                frontier_phi_88_pred_2 = _4051 * _3897.x;
                                frontier_phi_88_pred_3 = _4125 * _3909.z;
                                frontier_phi_88_pred_4 = _4125 * _3909.y;
                                frontier_phi_88_pred_5 = _4125 * _3909.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _4134 = frontier_phi_88_pred;
                            _4133 = frontier_phi_88_pred_1;
                            _4132 = frontier_phi_88_pred_2;
                            _4131 = frontier_phi_88_pred_3;
                            _4130 = frontier_phi_88_pred_4;
                            _4129 = frontier_phi_88_pred_5;
                            _3839 = _4132 + _3852;
                            _3840 = _4133 + _3853;
                            _3841 = _4134 + _3854;
                            _3836 = _4129 + _3849;
                            _3837 = _4130 + _3850;
                            _3838 = _4131 + _3851;
                            if (_3856 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3849 = _3836;
                                _3850 = _3837;
                                _3851 = _3838;
                                _3852 = _3839;
                                _3853 = _3840;
                                _3854 = _3841;
                                _3855 = _3856;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3841;
                        frontier_phi_82_pred_1 = _3840;
                        frontier_phi_82_pred_2 = _3839;
                        frontier_phi_82_pred_3 = _3838;
                        frontier_phi_82_pred_4 = _3837;
                        frontier_phi_82_pred_5 = _3836;
                    }
                    _3479 = frontier_phi_82_pred;
                    _3477 = frontier_phi_82_pred_1;
                    _3475 = frontier_phi_82_pred_2;
                    _3473 = frontier_phi_82_pred_3;
                    _3471 = frontier_phi_82_pred_4;
                    _3469 = frontier_phi_82_pred_5;
                    uint _3635 = _3634 + 1u;
                    if (_3635 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3628 = _3469;
                        _3629 = _3471;
                        _3630 = _3473;
                        _3631 = _3475;
                        _3632 = _3477;
                        _3633 = _3479;
                        _3634 = _3635;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3475;
                frontier_phi_63_64_ladder_1 = _3479;
                frontier_phi_63_64_ladder_2 = _3477;
                frontier_phi_63_64_ladder_3 = _3473;
                frontier_phi_63_64_ladder_4 = _3471;
                frontier_phi_63_64_ladder_5 = _3469;
            }
            else
            {
                frontier_phi_63_64_ladder = _3354;
                frontier_phi_63_64_ladder_1 = _3358;
                frontier_phi_63_64_ladder_2 = _3356;
                frontier_phi_63_64_ladder_3 = _3352;
                frontier_phi_63_64_ladder_4 = _3350;
                frontier_phi_63_64_ladder_5 = _3348;
            }
            _3468 = frontier_phi_63_64_ladder_5;
            _3470 = frontier_phi_63_64_ladder_4;
            _3472 = frontier_phi_63_64_ladder_3;
            _3474 = frontier_phi_63_64_ladder;
            _3476 = frontier_phi_63_64_ladder_2;
            _3478 = frontier_phi_63_64_ladder_1;
        }
        float _3483 = isnan(1.0) ? _1248 : (isnan(_1248) ? 1.0 : min(_1248, 1.0));
        _3281 = (_3483 * _3474) + _2812;
        _3283 = (_3483 * _3476) + _2814;
        _3285 = (_3483 * _3478) + _2816;
        _3287 = ((_3468 * 0.039999999105930328369140625) * _3483) + _3135;
        _3289 = ((_3470 * 0.039999999105930328369140625) * _3483) + _3137;
        _3291 = ((_3472 * 0.039999999105930328369140625) * _3483) + _3139;
    }
    else
    {
        _3281 = _2812;
        _3283 = _2814;
        _3285 = _2816;
        _3287 = _3135;
        _3289 = _3137;
        _3291 = _3139;
    }
    float _5356 = isnan(0.0) ? _1233 : (isnan(_1233) ? 0.0 : max(_1233, 0.0));
    float _5367 = isnan(0.0) ? _1234 : (isnan(_1234) ? 0.0 : max(_1234, 0.0));
    float _5378 = isnan(0.0) ? _1235 : (isnan(_1235) ? 0.0 : max(_1235, 0.0));
    float _3308 = ((isnan(1.0) ? _5356 : (isnan(_5356) ? 1.0 : min(_5356, 1.0))) * (_3281 + ((isnan(0.0) ? _2003 : (isnan(_2003) ? 0.0 : max(_2003, 0.0))) * _1248))) + ((_3287 + ((isnan(0.0) ? _2293 : (isnan(_2293) ? 0.0 : max(_2293, 0.0))) * _2082)) * cbPerFrame._m0[3u].x);
    float _3309 = ((isnan(1.0) ? _5367 : (isnan(_5367) ? 1.0 : min(_5367, 1.0))) * (_3283 + ((isnan(0.0) ? _2006 : (isnan(_2006) ? 0.0 : max(_2006, 0.0))) * _1248))) + ((_3289 + ((isnan(0.0) ? _2296 : (isnan(_2296) ? 0.0 : max(_2296, 0.0))) * _2082)) * cbPerFrame._m0[3u].x);
    float _3310 = ((isnan(1.0) ? _5378 : (isnan(_5378) ? 1.0 : min(_5378, 1.0))) * (_3285 + ((isnan(0.0) ? _2009 : (isnan(_2009) ? 0.0 : max(_2009, 0.0))) * _1248))) + ((_3291 + ((isnan(0.0) ? _2299 : (isnan(_2299) ? 0.0 : max(_2299, 0.0))) * _2082)) * cbPerFrame._m0[3u].x);
    uint _3311 = _295 + 6u;
    float _3319 = _1185 / cbSceneParam._m0[86u].x;
    float _3320 = _1186 / cbSceneParam._m0[86u].y;
    vec4 _3334 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3319, _3320, (log2((isnan(cbSceneParam._m0[77u].w) ? _1107 : (isnan(_1107) ? cbSceneParam._m0[77u].w : min(_1107, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3336 = _3334.x;
    float _3337 = _3334.y;
    float _3338 = _3334.z;
    float _3339 = _3334.w;
    float _3410;
    float _3412;
    float _3414;
    float _3416;
    if (_1107 > cbSceneParam._m0[78u].w)
    {
        float _3373 = isnan(_1107) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1107 : min(cbSceneParam._m0[80u].w, _1107));
        float _3374 = _3373 / _1107;
        float _3385 = _3374 * _1158;
        float _3386 = _1159 * _3374;
        float _3387 = (-0.0) - _3386;
        float _3388 = _3374 * _1160;
        float _3390 = (cbSceneParam._m0[77u].w * _3387) / _3373;
        float _3391 = _3390 + cbSceneParam._m0[79u].w;
        float _3392 = cbSceneParam._m0[79u].w - _3386;
        float _3398 = sqrt(((_3385 * _3385) + (_3386 * _3386)) + (_3388 * _3388));
        float _3401 = (1.0 - (cbSceneParam._m0[77u].w / _3373)) * _3398;
        float _3406 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3408 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3585;
        if (abs((_3387 - _3390) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3585 = ((((_3391 > 0.0) ? exp2(_3406 * _3391) : (2.0 - exp2(_3408 * _3391))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3401;
        }
        else
        {
            float _3529 = 1.0 / cbSceneParam._m0[80u].x;
            float _3530 = isnan(_3392) ? _3391 : (isnan(_3391) ? _3392 : max(_3391, _3392));
            float _3531 = isnan(_3392) ? _3391 : (isnan(_3391) ? _3392 : min(_3391, _3392));
            float _3540 = isnan(0.0) ? _3530 : (isnan(_3530) ? 0.0 : min(_3530, 0.0));
            float _3541 = isnan(0.0) ? _3531 : (isnan(_3531) ? 0.0 : min(_3531, 0.0));
            _3585 = ((abs(_3398 / _3387) * cbSceneParam._m0[80u].y) * ((((_3540 - _3541) * 2.0) - ((exp2(_3406 * (isnan(0.0) ? _3530 : (isnan(_3530) ? 0.0 : max(_3530, 0.0)))) - exp2(_3406 * (isnan(0.0) ? _3531 : (isnan(_3531) ? 0.0 : max(_3531, 0.0))))) * _3529)) - ((exp2(_3408 * _3540) - exp2(_3408 * _3541)) * _3529))) + (_3401 * cbSceneParam._m0[80u].z);
        }
        vec4 _3587 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3319, _3320, 1.0), 0.0);
        float _3596 = exp2((_3585 * (-1.44269502162933349609375)) * (1.0 - _3587.w));
        float _3597 = log2(_3596);
        float _3613 = log2(_3339);
        _3410 = (exp2(_3613 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3597 * cbSceneParam._m0[78u].x)) * _3587.x) / cbSceneParam._m0[78u].x)) + _3336;
        _3412 = (exp2(_3613 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3597 * cbSceneParam._m0[78u].y)) * _3587.y) / cbSceneParam._m0[78u].y)) + _3337;
        _3414 = (exp2(_3613 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3597 * cbSceneParam._m0[78u].z)) * _3587.z) / cbSceneParam._m0[78u].z)) + _3338;
        _3416 = _3596 * _3339;
    }
    else
    {
        _3410 = _3336;
        _3412 = _3337;
        _3414 = _3338;
        _3416 = _3339;
    }
    bool _3623;
    vec4 _3426;
    vec4 _3448;
    float _3450;
    float _3454;
    float _3455;
    float _3456;
    float _3457;
    bool _3467;
    for (;;)
    {
        _3426 = cbMatDynParam._m0[0u];
        float _3428 = roundEven(_3426.y);
        bool _3429 = _3428 == 3.0;
        float _3430 = log2(_3416);
        float _3437 = exp2(_3430 * cbSceneParam._m0[78u].x) * _3308;
        float _3438 = exp2(_3430 * cbSceneParam._m0[78u].y) * _3309;
        float _3439 = exp2(_3430 * cbSceneParam._m0[78u].z) * _3310;
        float _3446 = _1174 + (-0.5);
        _3448 = cbMtdParam._m0[1u];
        _3450 = _3448.y * _3446;
        float _3453 = (_3428 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3454 = _3453 * (_3429 ? _3437 : (_3437 + (cbSceneParam._m0[72u].w * _3410)));
        _3455 = _3453 * (_3429 ? _3438 : (_3438 + (cbSceneParam._m0[72u].w * _3412)));
        _3456 = _3453 * (_3429 ? _3439 : (_3439 + (cbSceneParam._m0[72u].w * _3414)));
        _3457 = _3446 * 0.999000012874603271484375;
        _3467 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3467)
        {
            if ((cbInstanceData._m0[_295 + 7u].x + _3457) < 0.5)
            {
                _3623 = true;
                break;
            }
        }
        uint _3564 = _1223 + uint(_3426.w);
        if ((cbInstanceData._m0[_3564].w < 1.0) && ((cbInstanceData._m0[_3564].w + _3457) < 0.5))
        {
            _3623 = true;
            break;
        }
        if ((_3450 + 1.0) < _3448.x)
        {
            _3623 = true;
            break;
        }
        _3623 = false;
        break;
    }
    float _3827;
    if (_3623)
    {
        discard_state = true;
        _3827 = 0.0;
    }
    else
    {
        _3827 = cbInstanceData._m0[_3311].w;
    }
    SV_Target.x = _3454;
    SV_Target.y = _3455;
    SV_Target.z = _3456;
    SV_Target.w = _3827;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3311].w;
    discard_exit();
}


