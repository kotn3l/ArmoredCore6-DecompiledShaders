#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1579;
float _4219;
float _4220;
float _4221;
float _4222;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _248 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _249 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _250 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _256 = inversesqrt(dot(vec3(_248, _249, _250), vec3(_248, _249, _250)));
    float _263 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _270 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _282 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _284 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _285 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4231 = isnan(0.0) ? _282 : (isnan(_282) ? 0.0 : max(_282, 0.0));
    float _4242 = isnan(0.0) ? _284 : (isnan(_284) ? 0.0 : max(_284, 0.0));
    float _4253 = isnan(0.0) ? _285 : (isnan(_285) ? 0.0 : max(_285, 0.0));
    uint _295 = uint(roundEven(NORMAL.w)) * 13u;
    uint _300 = _295 + 1u;
    uint _304 = _295 + 2u;
    float _313 = sqrt(((cbInstanceData._m0[_300].x * cbInstanceData._m0[_300].x) + (cbInstanceData._m0[_295].x * cbInstanceData._m0[_295].x)) + (cbInstanceData._m0[_304].x * cbInstanceData._m0[_304].x));
    float _314 = _313 * TEXCOORD.z;
    float _315 = _313 * TEXCOORD.w;
    vec4 _328 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _314) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _315) + cbTextureTilingScale._m0[13u].w));
    vec4 _352 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _357 = _352.x * cbMtdParam._m0[11u].x;
    float _358 = _352.y * cbMtdParam._m0[11u].y;
    float _359 = _352.z * cbMtdParam._m0[11u].z;
    vec4 _378 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _314) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _315) + cbTextureTilingScale._m0[5u].w));
    vec4 _397 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _435 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _437 = _435.x;
    float _449 = dot(vec4(_437, _435.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _466 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _397.x) * 2.0) - ((((_437 - _449) * cbMtdParam._m0[24u].z) + _449) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4264 = isnan(0.0) ? _466 : (isnan(_466) ? 0.0 : max(_466, 0.0));
    float _467 = isnan(1.0) ? _4264 : (isnan(_4264) ? 1.0 : min(_4264, 1.0));
    float _474 = (_467 * ((_378.x * cbMtdParam._m0[12u].x) - _357)) + _357;
    float _475 = (_467 * ((_378.y * cbMtdParam._m0[12u].y) - _358)) + _358;
    float _476 = (_467 * ((_378.z * cbMtdParam._m0[12u].z) - _359)) + _359;
    vec4 _493 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _314) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _315) + cbTextureTilingScale._m0[3u].w));
    vec4 _513 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _515 = _513.x;
    float _525 = dot(vec4(_515, _513.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _539 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _397.y) * 2.0) - ((((_515 - _525) * cbMtdParam._m0[24u].z) + _525) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4275 = isnan(0.0) ? _539 : (isnan(_539) ? 0.0 : max(_539, 0.0));
    float _540 = isnan(1.0) ? _4275 : (isnan(_4275) ? 1.0 : min(_4275, 1.0));
    float _547 = (_540 * ((_493.x * cbMtdParam._m0[13u].x) - _474)) + _474;
    float _548 = (_540 * ((_493.y * cbMtdParam._m0[13u].y) - _475)) + _475;
    float _549 = (_540 * ((_493.z * cbMtdParam._m0[13u].z) - _476)) + _476;
    vec4 _567 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _314) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _315) + cbTextureTilingScale._m0[24u].w));
    vec4 _584 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _586 = _584.x;
    float _596 = dot(vec4(_586, _584.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _608 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _397.z) * 2.0) - ((((_586 - _596) * cbMtdParam._m0[24u].z) + _596) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4286 = isnan(0.0) ? _608 : (isnan(_608) ? 0.0 : max(_608, 0.0));
    float _609 = isnan(1.0) ? _4286 : (isnan(_4286) ? 1.0 : min(_4286, 1.0));
    float _616 = (_609 * ((_567.x * cbMtdParam._m0[14u].x) - _547)) + _547;
    float _617 = (_609 * ((_567.y * cbMtdParam._m0[14u].y) - _548)) + _548;
    float _618 = (_609 * ((_567.z * cbMtdParam._m0[14u].z) - _549)) + _549;
    float _622 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _328.x) * _616;
    float _625 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _328.y) * _617;
    float _628 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _328.z) * _618;
    float _635 = ((_616 - _622) * (isnan(1.0) ? _4231 : (isnan(_4231) ? 1.0 : min(_4231, 1.0)))) + _622;
    float _636 = ((_617 - _625) * (isnan(1.0) ? _4242 : (isnan(_4242) ? 1.0 : min(_4242, 1.0)))) + _625;
    float _637 = ((_618 - _628) * (isnan(1.0) ? _4253 : (isnan(_4253) ? 1.0 : min(_4253, 1.0)))) + _628;
    vec4 _654 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _314) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _315) + cbTextureTilingScale._m0[20u].w));
    vec4 _677 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _314) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _315) + cbTextureTilingScale._m0[4u].w));
    vec4 _694 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _696 = _694.x;
    float _697 = _694.y;
    float _698 = _694.z;
    float _705 = ((_677.x - _696) * _467) + _696;
    float _706 = ((_677.y - _697) * _467) + _697;
    float _707 = ((_677.z - _698) * _467) + _698;
    vec4 _719 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _314) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _315) + cbTextureTilingScale._m0[2u].w));
    float _730 = ((_719.x - _705) * _540) + _705;
    float _731 = ((_719.y - _706) * _540) + _706;
    float _732 = ((_719.z - _707) * _540) + _707;
    vec4 _744 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _314) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _315) + cbTextureTilingScale._m0[23u].w));
    float _757 = ((_744.z - _732) * _609) + _732;
    float _760 = ((((_744.x - _730) * _609) + _730) * 2.0) + (-1.0);
    float _761 = ((((_744.y - _731) * _609) + _731) * 2.0) + (-1.0);
    float _762 = dot(vec2(_760, _761), vec2(_760, _761));
    float _4297 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
    float _767 = sqrt(1.0 - (isnan(1.0) ? _4297 : (isnan(_4297) ? 1.0 : min(_4297, 1.0))));
    vec4 _781 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _806 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _314) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _315) + cbTextureTilingScale._m0[11u].w));
    float _808 = _806.x;
    float _809 = 1.0 - _808;
    float _815 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _818 = ((isnan(0.0) ? _815 : (isnan(_815) ? 0.0 : min(_815, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _827 = (_818 - ((((((_808 - _809) * cbMtdParam._m0[24u].w) + _809) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _818))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4318 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    float _828 = isnan(1.0) ? _4318 : (isnan(_4318) ? 1.0 : min(_4318, 1.0));
    float _835 = (_828 * (cbMtdParam._m0[17u].x - _635)) + _635;
    float _836 = (_828 * (cbMtdParam._m0[17u].y - _636)) + _636;
    float _837 = (_828 * (cbMtdParam._m0[17u].z - _637)) + _637;
    vec4 _849 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _314) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _315) + cbTextureTilingScale._m0[19u].w));
    float _851 = _849.x;
    float _852 = 1.0 - _851;
    float _879 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_851 - _852) * cbMtdParam._m0[24u].y) + _852) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4329 = isnan(0.0) ? _879 : (isnan(_879) ? 0.0 : max(_879, 0.0));
    float _880 = isnan(1.0) ? _4329 : (isnan(_4329) ? 1.0 : min(_4329, 1.0));
    float _888 = ((((cbMtdParam._m0[10u].x - _835) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _880) + _835;
    float _889 = ((((cbMtdParam._m0[10u].y - _836) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _880) + _836;
    float _890 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _837)) * _880) + _837;
    float _895 = (((_654.z - _757) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _757;
    float _899 = ((_781.z - _895) * cbMtdParam._m0[19u].w) + _895;
    vec4 _913 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _314) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _315) + cbTextureTilingScale._m0[15u].w));
    float _920 = (_913.x * 2.0) + (-1.0);
    float _921 = (_913.y * 2.0) + (-1.0);
    float _922 = dot(vec2(_920, _921), vec2(_920, _921));
    float _4340 = isnan(0.0) ? _922 : (isnan(_922) ? 0.0 : max(_922, 0.0));
    float _930 = (_828 * (_913.z - _899)) + _899;
    float _933 = ((cbMtdParam._m0[23u].y - _930) * _880) + _930;
    vec4 _952 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _314) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _315) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _958 = (_952.x * 2.0) + (-1.0);
    float _959 = (_952.y * 2.0) + (-1.0);
    float _960 = dot(vec2(_958, _959), vec2(_958, _959));
    float _4351 = isnan(0.0) ? _960 : (isnan(_960) ? 0.0 : max(_960, 0.0));
    float _974 = (_760 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_654.x * 2.0) + (-1.0)))) + (((_781.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _975 = (_761 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_654.y * 2.0) + (-1.0)))) + (((_781.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _987 = (((_920 - _974) + (cbMtdParam._m0[21u].x * _974)) * _828) + _974;
    float _988 = (((_921 - _975) + (cbMtdParam._m0[21u].x * _975)) * _828) + _975;
    float _989 = (_828 * (sqrt(1.0 - (isnan(1.0) ? _4340 : (isnan(_4340) ? 1.0 : min(_4340, 1.0)))) - _767)) + _767;
    float _1000 = (((_958 - _987) + (_987 * cbMtdParam._m0[22u].z)) * _880) + _987;
    float _1001 = (((_959 - _988) + (_988 * cbMtdParam._m0[22u].z)) * _880) + _988;
    float _1002 = ((sqrt(1.0 - (isnan(1.0) ? _4351 : (isnan(_4351) ? 1.0 : min(_4351, 1.0)))) - _989) * _880) + _989;
    float _1004 = cbMtdParam._m0[22u].x + _781.w;
    float _1007 = fma(_1002, _263 * NORMAL.x, fma(_1001, _270 * TANGENT.x, (_256 * _248) * _1000));
    float _1010 = fma(_1002, _263 * NORMAL.y, fma(_1001, _270 * TANGENT.y, (_256 * _249) * _1000));
    float _1013 = fma(_1002, _263 * NORMAL.z, fma(_1001, _270 * TANGENT.z, (_256 * _250) * _1000));
    float _1017 = inversesqrt(dot(vec3(_1007, _1010, _1013), vec3(_1007, _1010, _1013)));
    float _1018 = _1017 * _1007;
    float _1019 = _1017 * _1010;
    float _1020 = _1017 * _1013;
    float _4362 = isnan(0.0) ? _933 : (isnan(_933) ? 0.0 : max(_933, 0.0));
    float _1021 = isnan(1.0) ? _4362 : (isnan(_4362) ? 1.0 : min(_4362, 1.0));
    float _4373 = isnan(0.0) ? _1004 : (isnan(_1004) ? 0.0 : max(_1004, 0.0));
    float _4384 = isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0));
    float _4395 = isnan(0.0) ? _889 : (isnan(_889) ? 0.0 : max(_889, 0.0));
    float _4406 = isnan(0.0) ? _890 : (isnan(_890) ? 0.0 : max(_890, 0.0));
    float _1039 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1080 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1090 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1080);
    float _1091 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1080);
    float _1092 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1080);
    float _1096 = inversesqrt(dot(vec3(_1090, _1091, _1092), vec3(_1090, _1091, _1092)));
    float _1097 = _1090 * _1096;
    float _1098 = _1091 * _1096;
    float _1099 = _1092 * _1096;
    vec4 _1104 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1106 = _1104.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1260 = sqrt(((_1090 * _1090) + (_1091 * _1091)) + (_1092 * _1092));
        float _1266 = (cbMatDynParam._m0[5u].x * _1260) + cbMatDynParam._m0[5u].y;
        float _4417 = isnan(0.0) ? _1266 : (isnan(_1266) ? 0.0 : max(_1266, 0.0));
        float _1267 = isnan(1.0) ? _4417 : (isnan(_4417) ? 1.0 : min(_4417, 1.0));
        float _1271 = (cbMatDynParam._m0[5u].z * _1260) + cbMatDynParam._m0[5u].w;
        float _4428 = isnan(0.0) ? _1271 : (isnan(_1271) ? 0.0 : max(_1271, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4428 : (isnan(_4428) ? 1.0 : min(_4428, 1.0))) - _1267)) + _1267) < ((_1106 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1117 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1118 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1136 = fma(_1020, cbSceneParam._m0[5u].z, fma(_1019, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1018));
    float _1139 = fma(_1020, cbSceneParam._m0[6u].z, fma(_1019, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1018));
    float _1142 = fma(_1020, cbSceneParam._m0[7u].z, fma(_1019, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1018));
    uint _1155 = _295 + 9u;
    uint _1156 = _1155 + uint(cbMatDynParam._m0[0u].w);
    float _1162 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4384 : (isnan(_4384) ? 1.0 : min(_4384, 1.0)))) * cbInstanceData._m0[_1156].x;
    float _1163 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4395 : (isnan(_4395) ? 1.0 : min(_4395, 1.0)))) * cbInstanceData._m0[_1156].y;
    float _1164 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4406 : (isnan(_4406) ? 1.0 : min(_4406, 1.0)))) * cbInstanceData._m0[_1156].z;
    float _4439 = isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0));
    float _1165 = isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0));
    float _4450 = isnan(0.0) ? _1163 : (isnan(_1163) ? 0.0 : max(_1163, 0.0));
    float _1166 = isnan(1.0) ? _4450 : (isnan(_4450) ? 1.0 : min(_4450, 1.0));
    float _4461 = isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0));
    float _1167 = isnan(1.0) ? _4461 : (isnan(_4461) ? 1.0 : min(_4461, 1.0));
    vec4 _1176 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1117, cbSceneParam._m0[86u].y * _1118));
    float _1180 = ((isnan(1.0) ? _4373 : (isnan(_4373) ? 1.0 : min(_4373, 1.0))) * TEXCOORD_5.w) * _1176.x;
    float _1181 = dot(vec3(_1018, _1019, _1020), vec3(_1097, _1098, _1099));
    float _1184 = _1181 * 2.0;
    float _1188 = (_1184 * _1018) - _1097;
    float _1189 = (_1184 * _1019) - _1098;
    float _1190 = (_1184 * _1020) - _1099;
    float _1194 = abs(dot(vec3(_1097, _1098, _1099), vec3(_1018, _1019, _1020)));
    float _4472 = isnan(0.0) ? _1194 : (isnan(_1194) ? 0.0 : max(_1194, 0.0));
    float _1196 = sqrt(_1021);
    float _1209 = exp2((_1196 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4472 : (isnan(_4472) ? 1.0 : min(_4472, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1196 * 3.0));
    float _1241 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1245 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1249 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1578;
    float _1580;
    float _1581;
    float _1582;
    float _1583;
    float _1584;
    float _1585;
    float _1586;
    float _1587;
    float _1588;
    float _1589;
    float _1590;
    float _1591;
    float _1592;
    float _1593;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1303 = fma(_1249, cbModelParam._m0[26u].z, fma(_1245, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1241));
        float _1307 = fma(_1249, cbModelParam._m0[27u].z, fma(_1245, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1241));
        float _1311 = fma(_1249, cbModelParam._m0[28u].z, fma(_1245, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1241));
        float _1336 = _1241 + _1018;
        float _1337 = _1245 + _1019;
        float _1338 = _1249 + _1020;
        float _1348 = fma(_1338, cbModelParam._m0[26u].z, fma(_1337, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1336)) - _1303;
        float _1349 = fma(_1338, cbModelParam._m0[27u].z, fma(_1337, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1336)) - _1307;
        float _1350 = fma(_1338, cbModelParam._m0[28u].z, fma(_1337, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1336)) - _1311;
        float _1354 = inversesqrt(dot(vec3(_1348, _1349, _1350), vec3(_1348, _1349, _1350)));
        float _1367 = ((_1354 * _1348) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1303 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1368 = ((_1354 * _1349) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1307 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1369 = ((_1354 * _1350) / cbModelParam._m0[34u].z) + ((((((_1311 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1372 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1367, _1368, _1369), 0.0);
        vec4 _1379 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1367, _1368, _1369), 0.0);
        vec4 _1386 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1367, _1368, _1369), 0.0);
        vec4 _1393 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1367, _1368, _1369), 0.0);
        float _1406 = exp2((_1372.w + (-0.5)) * 20.0) * 2.0;
        float _1407 = _1406 * (_1372.x + (-0.5));
        float _1408 = _1406 * (_1372.y + (-0.5));
        float _1409 = _1406 * (_1372.z + (-0.5));
        float _1416 = exp2((_1379.w + (-0.5)) * 20.0) * 2.0;
        float _1417 = _1416 * (_1379.x + (-0.5));
        float _1418 = _1416 * (_1379.y + (-0.5));
        float _1419 = _1416 * (_1379.z + (-0.5));
        float _1426 = exp2((_1386.w + (-0.5)) * 20.0) * 2.0;
        float _1427 = _1426 * (_1386.x + (-0.5));
        float _1428 = _1426 * (_1386.y + (-0.5));
        float _1429 = _1426 * (_1386.z + (-0.5));
        float _1436 = exp2((_1393.w + (-0.5)) * 20.0) * 2.0;
        float _1437 = _1436 * (_1393.x + (-0.5));
        float _1438 = _1436 * (_1393.y + (-0.5));
        float _1439 = _1436 * (_1393.z + (-0.5));
        float _1440 = isnan(0.0) ? _1437 : (isnan(_1437) ? 0.0 : max(_1437, 0.0));
        float _1441 = isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0));
        float _1442 = isnan(0.0) ? _1439 : (isnan(_1439) ? 0.0 : max(_1439, 0.0));
        float _1443 = _1407 * 0.5;
        float _1444 = _1417 * 0.5;
        float _1445 = _1427 * 0.5;
        float _1446 = dot(vec3(_1443, _1444, _1445), vec3(_1443, _1444, _1445));
        float _1451 = (_1446 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1446);
        float _1460 = (dot(vec3(_1018, _1019, _1020), vec3(_1451 * _1443, _1451 * _1444, _1451 * _1445)) + 1.0) * 0.5;
        float _4498 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
        float _1470 = sqrt(((_1444 * _1444) + (_1443 * _1443)) + (_1445 * _1445)) / (_1440 + 9.9999997473787516355514526367188e-06);
        float _4509 = isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0));
        float _1471 = isnan(1.0) ? _4509 : (isnan(_4509) ? 1.0 : min(_4509, 1.0));
        float _1472 = _1471 * 2.0;
        float _1476 = (1.0 - _1471) / (_1471 + 1.0);
        float _4520 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
        float _1477 = isnan(1.0) ? _4520 : (isnan(_4520) ? 1.0 : min(_4520, 1.0));
        float _1486 = ((((1.0 - _1477) * (_1472 + 2.0)) * exp2(log2(isnan(1.0) ? _4498 : (isnan(_4498) ? 1.0 : min(_4498, 1.0))) * (_1472 + 1.0))) + _1477) * _1440;
        float _1487 = _1408 * 0.5;
        float _1488 = _1418 * 0.5;
        float _1489 = _1428 * 0.5;
        float _1490 = dot(vec3(_1487, _1488, _1489), vec3(_1487, _1488, _1489));
        float _1495 = (_1490 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1490);
        float _1503 = (dot(vec3(_1018, _1019, _1020), vec3(_1495 * _1487, _1495 * _1488, _1495 * _1489)) + 1.0) * 0.5;
        float _4531 = isnan(0.0) ? _1503 : (isnan(_1503) ? 0.0 : max(_1503, 0.0));
        float _1512 = sqrt(((_1488 * _1488) + (_1487 * _1487)) + (_1489 * _1489)) / (_1441 + 9.9999997473787516355514526367188e-06);
        float _4542 = isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0));
        float _1513 = isnan(1.0) ? _4542 : (isnan(_4542) ? 1.0 : min(_4542, 1.0));
        float _1514 = _1513 * 2.0;
        float _1518 = (1.0 - _1513) / (_1513 + 1.0);
        float _4553 = isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0));
        float _1519 = isnan(1.0) ? _4553 : (isnan(_4553) ? 1.0 : min(_4553, 1.0));
        float _1528 = ((((1.0 - _1519) * (_1514 + 2.0)) * exp2(log2(isnan(1.0) ? _4531 : (isnan(_4531) ? 1.0 : min(_4531, 1.0))) * (_1514 + 1.0))) + _1519) * _1441;
        float _1529 = _1409 * 0.5;
        float _1530 = _1419 * 0.5;
        float _1531 = _1429 * 0.5;
        float _1532 = dot(vec3(_1529, _1530, _1531), vec3(_1529, _1530, _1531));
        float _1537 = (_1532 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1532);
        float _1545 = (dot(vec3(_1018, _1019, _1020), vec3(_1537 * _1529, _1537 * _1530, _1537 * _1531)) + 1.0) * 0.5;
        float _4564 = isnan(0.0) ? _1545 : (isnan(_1545) ? 0.0 : max(_1545, 0.0));
        float _1554 = sqrt(((_1530 * _1530) + (_1529 * _1529)) + (_1531 * _1531)) / (_1442 + 9.9999997473787516355514526367188e-06);
        float _4575 = isnan(0.0) ? _1554 : (isnan(_1554) ? 0.0 : max(_1554, 0.0));
        float _1555 = isnan(1.0) ? _4575 : (isnan(_4575) ? 1.0 : min(_4575, 1.0));
        float _1556 = _1555 * 2.0;
        float _1560 = (1.0 - _1555) / (_1555 + 1.0);
        float _4586 = isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0));
        float _1561 = isnan(1.0) ? _4586 : (isnan(_4586) ? 1.0 : min(_4586, 1.0));
        float _1570 = ((((1.0 - _1561) * (_1556 + 2.0)) * exp2(log2(isnan(1.0) ? _4564 : (isnan(_4564) ? 1.0 : min(_4564, 1.0))) * (_1556 + 1.0))) + _1561) * _1442;
        _1578 = _1409;
        _1580 = _1408;
        _1581 = _1407;
        _1582 = _1419;
        _1583 = _1418;
        _1584 = _1417;
        _1585 = _1429;
        _1586 = _1428;
        _1587 = _1427;
        _1588 = _1442;
        _1589 = _1441;
        _1590 = _1440;
        _1591 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0)));
        _1592 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1528 : (isnan(_1528) ? 0.0 : max(_1528, 0.0)));
        _1593 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1570 : (isnan(_1570) ? 0.0 : max(_1570, 0.0)));
    }
    else
    {
        _1578 = _1579;
        _1580 = _1579;
        _1581 = _1579;
        _1582 = _1579;
        _1583 = _1579;
        _1584 = _1579;
        _1585 = _1579;
        _1586 = _1579;
        _1587 = _1579;
        _1588 = _1579;
        _1589 = _1579;
        _1590 = _1579;
        _1591 = 0.0;
        _1592 = 0.0;
        _1593 = 0.0;
    }
    float _1888;
    float _1889;
    float _1890;
    float _1891;
    float _1892;
    float _1893;
    float _1894;
    float _1895;
    float _1896;
    float _1897;
    float _1898;
    float _1899;
    float _1900;
    float _1901;
    float _1902;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1619 = fma(_1249, cbModelParam._m0[30u].z, fma(_1245, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1241));
        float _1623 = fma(_1249, cbModelParam._m0[31u].z, fma(_1245, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1241));
        float _1627 = fma(_1249, cbModelParam._m0[32u].z, fma(_1245, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1241));
        float _1650 = _1241 + _1018;
        float _1651 = _1245 + _1019;
        float _1652 = _1249 + _1020;
        float _1662 = fma(_1652, cbModelParam._m0[30u].z, fma(_1651, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1650)) - _1619;
        float _1663 = fma(_1652, cbModelParam._m0[31u].z, fma(_1651, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1650)) - _1623;
        float _1664 = fma(_1652, cbModelParam._m0[32u].z, fma(_1651, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1650)) - _1627;
        float _1668 = inversesqrt(dot(vec3(_1662, _1663, _1664), vec3(_1662, _1663, _1664)));
        float _1681 = ((_1668 * _1662) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1619 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1682 = ((_1668 * _1663) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1623 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1683 = ((_1668 * _1664) / cbModelParam._m0[35u].z) + ((((((_1627 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1685 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1681, _1682, _1683), 0.0);
        vec4 _1692 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1681, _1682, _1683), 0.0);
        vec4 _1699 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1681, _1682, _1683), 0.0);
        vec4 _1706 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1681, _1682, _1683), 0.0);
        float _1718 = exp2((_1685.w + (-0.5)) * 20.0) * 2.0;
        float _1719 = _1718 * (_1685.x + (-0.5));
        float _1720 = _1718 * (_1685.y + (-0.5));
        float _1721 = _1718 * (_1685.z + (-0.5));
        float _1728 = exp2((_1692.w + (-0.5)) * 20.0) * 2.0;
        float _1729 = _1728 * (_1692.x + (-0.5));
        float _1730 = _1728 * (_1692.y + (-0.5));
        float _1731 = _1728 * (_1692.z + (-0.5));
        float _1738 = exp2((_1699.w + (-0.5)) * 20.0) * 2.0;
        float _1739 = _1738 * (_1699.x + (-0.5));
        float _1740 = _1738 * (_1699.y + (-0.5));
        float _1741 = _1738 * (_1699.z + (-0.5));
        float _1748 = exp2((_1706.w + (-0.5)) * 20.0) * 2.0;
        float _1749 = _1748 * (_1706.x + (-0.5));
        float _1750 = _1748 * (_1706.y + (-0.5));
        float _1751 = _1748 * (_1706.z + (-0.5));
        float _1752 = isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0));
        float _1753 = isnan(0.0) ? _1750 : (isnan(_1750) ? 0.0 : max(_1750, 0.0));
        float _1754 = isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0));
        float _1755 = _1719 * 0.5;
        float _1756 = _1729 * 0.5;
        float _1757 = _1739 * 0.5;
        float _1758 = dot(vec3(_1755, _1756, _1757), vec3(_1755, _1756, _1757));
        float _1763 = (_1758 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1758);
        float _1771 = (dot(vec3(_1018, _1019, _1020), vec3(_1763 * _1755, _1763 * _1756, _1763 * _1757)) + 1.0) * 0.5;
        float _4627 = isnan(0.0) ? _1771 : (isnan(_1771) ? 0.0 : max(_1771, 0.0));
        float _1780 = sqrt(((_1756 * _1756) + (_1755 * _1755)) + (_1757 * _1757)) / (_1752 + 9.9999997473787516355514526367188e-06);
        float _4638 = isnan(0.0) ? _1780 : (isnan(_1780) ? 0.0 : max(_1780, 0.0));
        float _1781 = isnan(1.0) ? _4638 : (isnan(_4638) ? 1.0 : min(_4638, 1.0));
        float _1782 = _1781 * 2.0;
        float _1786 = (1.0 - _1781) / (_1781 + 1.0);
        float _4649 = isnan(0.0) ? _1786 : (isnan(_1786) ? 0.0 : max(_1786, 0.0));
        float _1787 = isnan(1.0) ? _4649 : (isnan(_4649) ? 1.0 : min(_4649, 1.0));
        float _1796 = ((((1.0 - _1787) * (_1782 + 2.0)) * exp2(log2(isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0))) * (_1782 + 1.0))) + _1787) * _1752;
        float _1797 = _1720 * 0.5;
        float _1798 = _1730 * 0.5;
        float _1799 = _1740 * 0.5;
        float _1800 = dot(vec3(_1797, _1798, _1799), vec3(_1797, _1798, _1799));
        float _1805 = (_1800 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1800);
        float _1813 = (dot(vec3(_1018, _1019, _1020), vec3(_1805 * _1797, _1805 * _1798, _1805 * _1799)) + 1.0) * 0.5;
        float _4660 = isnan(0.0) ? _1813 : (isnan(_1813) ? 0.0 : max(_1813, 0.0));
        float _1822 = sqrt(((_1798 * _1798) + (_1797 * _1797)) + (_1799 * _1799)) / (_1753 + 9.9999997473787516355514526367188e-06);
        float _4671 = isnan(0.0) ? _1822 : (isnan(_1822) ? 0.0 : max(_1822, 0.0));
        float _1823 = isnan(1.0) ? _4671 : (isnan(_4671) ? 1.0 : min(_4671, 1.0));
        float _1824 = _1823 * 2.0;
        float _1828 = (1.0 - _1823) / (_1823 + 1.0);
        float _4682 = isnan(0.0) ? _1828 : (isnan(_1828) ? 0.0 : max(_1828, 0.0));
        float _1829 = isnan(1.0) ? _4682 : (isnan(_4682) ? 1.0 : min(_4682, 1.0));
        float _1838 = ((((1.0 - _1829) * (_1824 + 2.0)) * exp2(log2(isnan(1.0) ? _4660 : (isnan(_4660) ? 1.0 : min(_4660, 1.0))) * (_1824 + 1.0))) + _1829) * _1753;
        float _1839 = _1721 * 0.5;
        float _1840 = _1731 * 0.5;
        float _1841 = _1741 * 0.5;
        float _1842 = dot(vec3(_1839, _1840, _1841), vec3(_1839, _1840, _1841));
        float _1847 = (_1842 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1842);
        float _1855 = (dot(vec3(_1018, _1019, _1020), vec3(_1847 * _1839, _1847 * _1840, _1847 * _1841)) + 1.0) * 0.5;
        float _4693 = isnan(0.0) ? _1855 : (isnan(_1855) ? 0.0 : max(_1855, 0.0));
        float _1864 = sqrt(((_1840 * _1840) + (_1839 * _1839)) + (_1841 * _1841)) / (_1754 + 9.9999997473787516355514526367188e-06);
        float _4704 = isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0));
        float _1865 = isnan(1.0) ? _4704 : (isnan(_4704) ? 1.0 : min(_4704, 1.0));
        float _1866 = _1865 * 2.0;
        float _1870 = (1.0 - _1865) / (_1865 + 1.0);
        float _4715 = isnan(0.0) ? _1870 : (isnan(_1870) ? 0.0 : max(_1870, 0.0));
        float _1871 = isnan(1.0) ? _4715 : (isnan(_4715) ? 1.0 : min(_4715, 1.0));
        float _1880 = ((((1.0 - _1871) * (_1866 + 2.0)) * exp2(log2(isnan(1.0) ? _4693 : (isnan(_4693) ? 1.0 : min(_4693, 1.0))) * (_1866 + 1.0))) + _1871) * _1754;
        _1888 = _1721;
        _1889 = _1720;
        _1890 = _1719;
        _1891 = _1731;
        _1892 = _1730;
        _1893 = _1729;
        _1894 = _1741;
        _1895 = _1740;
        _1896 = _1739;
        _1897 = _1754;
        _1898 = _1753;
        _1899 = _1752;
        _1900 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1796 : (isnan(_1796) ? 0.0 : max(_1796, 0.0)));
        _1901 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1838 : (isnan(_1838) ? 0.0 : max(_1838, 0.0)));
        _1902 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1880 : (isnan(_1880) ? 0.0 : max(_1880, 0.0)));
    }
    else
    {
        _1888 = _1579;
        _1889 = _1579;
        _1890 = _1579;
        _1891 = _1579;
        _1892 = _1579;
        _1893 = _1579;
        _1894 = _1579;
        _1895 = _1579;
        _1896 = _1579;
        _1897 = _1579;
        _1898 = _1579;
        _1899 = _1579;
        _1900 = 0.0;
        _1901 = 0.0;
        _1902 = 0.0;
    }
    float _1912 = (cbModelParam._m0[1u].x * (_1900 - _1591)) + _1591;
    float _1913 = (cbModelParam._m0[1u].x * (_1901 - _1592)) + _1592;
    float _1914 = (cbModelParam._m0[1u].x * (_1902 - _1593)) + _1593;
    float _1935 = fma(_1914, cbSceneParam._m0[89u].z, fma(_1913, cbSceneParam._m0[89u].y, _1912 * cbSceneParam._m0[89u].x));
    float _1938 = fma(_1914, cbSceneParam._m0[90u].z, fma(_1913, cbSceneParam._m0[90u].y, _1912 * cbSceneParam._m0[90u].x));
    float _1941 = fma(_1914, cbSceneParam._m0[91u].z, fma(_1913, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1912));
    float _1956 = _1188 * 0.5;
    float _1957 = _1189 * 0.5;
    float _1958 = _1190 * 0.5;
    float _1959 = dot(vec4(_1956, _1957, _1958, 1.0), vec4(_1890, _1893, _1896, _1899));
    float _1962 = dot(vec4(_1956, _1957, _1958, 1.0), vec4(_1889, _1892, _1895, _1898));
    float _1965 = dot(vec4(_1956, _1957, _1958, 1.0), vec4(_1888, _1891, _1894, _1897));
    float _1999;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1972 = dot(vec4(_1956, _1957, _1958, 1.0), vec4(_1578, _1582, _1585, _1588));
        float _1976 = dot(vec4(_1956, _1957, _1958, 1.0), vec4(_1580, _1583, _1586, _1589));
        float _1980 = dot(vec4(_1956, _1957, _1958, 1.0), vec4(_1581, _1584, _1587, _1590));
        float _1987 = dot(vec4(cbModelParam._m0[39u]), vec4(_1956, _1957, _1958, 1.0));
        _1999 = dot(vec3(isnan(0.0) ? _1980 : (isnan(_1980) ? 0.0 : max(_1980, 0.0)), isnan(0.0) ? _1976 : (isnan(_1976) ? 0.0 : max(_1976, 0.0)), isnan(0.0) ? _1972 : (isnan(_1972) ? 0.0 : max(_1972, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1987) ? 0.0 : (isnan(0.0) ? _1987 : max(0.0, _1987))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1999 = 1.0;
    }
    float _2010;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2001 = dot(vec4(cbModelParam._m0[40u]), vec4(_1956, _1957, _1958, 1.0));
        _2010 = dot(vec3(isnan(0.0) ? _1959 : (isnan(_1959) ? 0.0 : max(_1959, 0.0)), isnan(0.0) ? _1962 : (isnan(_1962) ? 0.0 : max(_1962, 0.0)), isnan(0.0) ? _1965 : (isnan(_1965) ? 0.0 : max(_1965, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2001) ? 0.0 : (isnan(0.0) ? _2001 : max(0.0, _2001))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2010 = 1.0;
    }
    float _2014 = (_2010 * cbModelParam._m0[1u].x) + (_1999 * (1.0 - cbModelParam._m0[1u].x));
    float _2024 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1021);
    float _2025 = isnan(_2024) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2024 : min(cbModelParam._m0[25u].z, _2024));
    float _2105;
    float _2107;
    float _2109;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2072 = fma(_1249, cbModelParam._m0[13u].z, fma(_1245, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1241)) + cbModelParam._m0[13u].w;
        float _2076 = fma(_1249, cbModelParam._m0[14u].z, fma(_1245, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1241)) + cbModelParam._m0[14u].w;
        float _2080 = fma(_1249, cbModelParam._m0[15u].z, fma(_1245, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1241)) + cbModelParam._m0[15u].w;
        float _2083 = fma(_1190, cbModelParam._m0[13u].z, fma(_1189, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1188));
        float _2086 = fma(_1190, cbModelParam._m0[14u].z, fma(_1189, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1188));
        float _2089 = fma(_1190, cbModelParam._m0[15u].z, fma(_1189, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1188));
        float _2117;
        if (_2083 > 0.0)
        {
            _2117 = abs((1.0 - _2072) / _2083);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_2083 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_2072 + 1.0) / _2083);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _2117 = frontier_phi_17_15_ladder;
        }
        float _2287;
        if (_2086 > 0.0)
        {
            _2287 = abs((1.0 - _2076) / _2086);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_2086 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_2076 + 1.0) / _2086);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2287 = frontier_phi_26_22_ladder;
        }
        float _2582;
        if (_2089 > 0.0)
        {
            _2582 = abs((1.0 - _2080) / _2089);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_2089 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_2080 + 1.0) / _2089);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2582 = frontier_phi_38_33_ladder;
        }
        float _2584 = isnan(_2287) ? _2117 : (isnan(_2117) ? _2287 : min(_2117, _2287));
        float _2585 = isnan(_2582) ? _2584 : (isnan(_2584) ? _2582 : min(_2584, _2582));
        float _2589 = (_2585 * _2083) + _2072;
        float _2590 = (_2585 * _2086) + _2076;
        float _2591 = (_2585 * _2089) + _2080;
        float _2592 = _2585 * 9.9999997473787516355514526367188e-05;
        float _2594 = (-1.0) - _2592;
        float _2596 = _2592 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2591 > _2596) || ((_2591 < _2594) || ((_2590 > _2596) || ((_2590 < _2594) || ((_2589 < _2594) || (_2589 > _2596))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2736 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2591, cbModelParam._m0[9u].z, fma(_2590, cbModelParam._m0[9u].y, _2589 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2591, cbModelParam._m0[10u].z, fma(_2590, cbModelParam._m0[10u].y, _2589 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2591, cbModelParam._m0[11u].z, fma(_2590, cbModelParam._m0[11u].y, _2589 * cbModelParam._m0[11u].x))), _2025);
            frontier_phi_16_38_ladder = _2736.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2736.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2736.x * cbModelParam._m0[1u].y;
        }
        _2105 = frontier_phi_16_38_ladder_2;
        _2107 = frontier_phi_16_38_ladder_1;
        _2109 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _2093 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1188, _1189, _1190), _2025);
        _2105 = _2093.x * cbModelParam._m0[1u].y;
        _2107 = _2093.y * cbModelParam._m0[1u].y;
        _2109 = _2093.z * cbModelParam._m0[1u].y;
    }
    float _2113 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1021);
    float _2114 = isnan(_2113) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2113 : min(cbModelParam._m0[25u].w, _2113));
    float _2204;
    float _2206;
    float _2208;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2168 = fma(_1249, cbModelParam._m0[21u].z, fma(_1245, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1241)) + cbModelParam._m0[21u].w;
        float _2172 = fma(_1249, cbModelParam._m0[22u].z, fma(_1245, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1241)) + cbModelParam._m0[22u].w;
        float _2176 = fma(_1249, cbModelParam._m0[23u].z, fma(_1245, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1241)) + cbModelParam._m0[23u].w;
        float _2179 = fma(_1190, cbModelParam._m0[21u].z, fma(_1189, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1188));
        float _2182 = fma(_1190, cbModelParam._m0[22u].z, fma(_1189, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1188));
        float _2185 = fma(_1190, cbModelParam._m0[23u].z, fma(_1189, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1188));
        float _2292;
        if (_2179 > 0.0)
        {
            _2292 = abs((1.0 - _2168) / _2179);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2179 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2168 + 1.0) / _2179);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2292 = frontier_phi_28_24_ladder;
        }
        float _2609;
        if (_2182 > 0.0)
        {
            _2609 = abs((1.0 - _2172) / _2182);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2182 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2172 + 1.0) / _2182);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2609 = frontier_phi_40_35_ladder;
        }
        float _2936;
        if (_2185 > 0.0)
        {
            _2936 = abs((1.0 - _2176) / _2185);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_2185 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_2176 + 1.0) / _2185);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2936 = frontier_phi_50_47_ladder;
        }
        float _2938 = isnan(_2609) ? _2292 : (isnan(_2292) ? _2609 : min(_2292, _2609));
        float _2939 = isnan(_2936) ? _2938 : (isnan(_2938) ? _2936 : min(_2938, _2936));
        float _2943 = (_2939 * _2179) + _2168;
        float _2944 = (_2939 * _2182) + _2172;
        float _2945 = (_2939 * _2185) + _2176;
        float _2946 = _2939 * 9.9999997473787516355514526367188e-05;
        float _2947 = (-1.0) - _2946;
        float _2949 = _2946 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2945 > _2949) || ((_2945 < _2947) || ((_2944 > _2949) || ((_2944 < _2947) || ((_2943 < _2947) || (_2943 > _2949))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3063 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2945, cbModelParam._m0[17u].z, fma(_2944, cbModelParam._m0[17u].y, _2943 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2945, cbModelParam._m0[18u].z, fma(_2944, cbModelParam._m0[18u].y, _2943 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2945, cbModelParam._m0[19u].z, fma(_2944, cbModelParam._m0[19u].y, _2943 * cbModelParam._m0[19u].x))), _2114);
            frontier_phi_25_50_ladder = _3063.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _3063.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _3063.x * cbModelParam._m0[1u].z;
        }
        _2204 = frontier_phi_25_50_ladder_2;
        _2206 = frontier_phi_25_50_ladder_1;
        _2208 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _2188 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1188, _1189, _1190), _2114);
        _2204 = _2188.x * cbModelParam._m0[1u].z;
        _2206 = _2188.y * cbModelParam._m0[1u].z;
        _2208 = _2188.z * cbModelParam._m0[1u].z;
    }
    float _2220 = ((((1.0 - _1209) * ((_1196 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1209 * _1196)) * _1180;
    float _2221 = _2220 * ((cbModelParam._m0[1u].w * (_2204 - _2105)) + _2105);
    float _2222 = _2220 * ((cbModelParam._m0[1u].w * (_2206 - _2107)) + _2107);
    float _2223 = _2220 * ((cbModelParam._m0[1u].w * (_2208 - _2109)) + _2109);
    float _2226 = fma(_2223, cbSceneParam._m0[89u].z, fma(_2222, cbSceneParam._m0[89u].y, _2221 * cbSceneParam._m0[89u].x));
    float _2229 = fma(_2223, cbSceneParam._m0[90u].z, fma(_2222, cbSceneParam._m0[90u].y, _2221 * cbSceneParam._m0[90u].x));
    float _2232 = fma(_2223, cbSceneParam._m0[91u].z, fma(_2222, cbSceneParam._m0[91u].y, _2221 * cbSceneParam._m0[91u].x));
    float _2266 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2270 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2274 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2278 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2279 = _2266 / _2278;
    float _2280 = _2270 / _2278;
    float _2281 = _2274 / _2278;
    float _2428;
    float _2429;
    float _2430;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2308 = ((uint(_2281 > cbSceneParam._m0[59u].y) + uint(_2281 > cbSceneParam._m0[59u].x)) + uint(_2281 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2309 = _2308 + 43u;
        uint _2317 = _2308 + 44u;
        uint _2325 = _2308 + 45u;
        uint _2333 = _2308 + 46u;
        float _2344 = fma(_2278, cbSceneParam._m0[_2309].w, fma(_2274, cbSceneParam._m0[_2309].z, fma(_2270, cbSceneParam._m0[_2309].y, _2266 * cbSceneParam._m0[_2309].x)));
        float _2348 = fma(_2278, cbSceneParam._m0[_2317].w, fma(_2274, cbSceneParam._m0[_2317].z, fma(_2270, cbSceneParam._m0[_2317].y, _2266 * cbSceneParam._m0[_2317].x)));
        float _2356 = fma(_2278, cbSceneParam._m0[_2333].w, fma(_2274, cbSceneParam._m0[_2333].z, fma(_2270, cbSceneParam._m0[_2333].y, _2266 * cbSceneParam._m0[_2333].x)));
        float _2361 = cbSceneParam._m0[33u].z * _2356;
        float _2363 = cbSceneParam._m0[33u].w * _2356;
        float _2366 = fma(_2278, cbSceneParam._m0[_2325].w, fma(_2274, cbSceneParam._m0[_2325].z, fma(_2270, cbSceneParam._m0[_2325].y, _2266 * cbSceneParam._m0[_2325].x))) / _2356;
        float _2414 = (cbSceneParam._m0[33u].x - sqrt(((_2280 * _2280) + (_2279 * _2279)) + (_2281 * _2281))) * cbSceneParam._m0[33u].y;
        float _4841 = isnan(0.0) ? _2414 : (isnan(_2414) ? 0.0 : max(_2414, 0.0));
        float _2421 = (isnan(1.0) ? _4841 : (isnan(_4841) ? 1.0 : min(_4841, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2361 + _2344) / _2356, (_2363 + _2348) / _2356), _2366), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2363 + _2344) / _2356, (_2348 - _2361) / _2356), _2366), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2344 - _2361) / _2356, (_2348 - _2363) / _2356), _2366), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2344 - _2363) / _2356, (_2361 + _2348) / _2356), _2366), 0.0)).x), vec4(0.25)));
        _2428 = 1.0 - (_2421 * cbSceneParam._m0[34u].x);
        _2429 = 1.0 - (_2421 * cbSceneParam._m0[34u].y);
        _2430 = 1.0 - (_2421 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2428 = 1.0;
        _2429 = 1.0;
        _2430 = 1.0;
    }
    float _2494;
    float _2496;
    float _2498;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2482 = fma(_2278, cbSceneParam._m0[63u].w, fma(_2274, cbSceneParam._m0[63u].z, fma(_2270, cbSceneParam._m0[63u].y, _2266 * cbSceneParam._m0[63u].x)));
        float _2483 = fma(_2278, cbSceneParam._m0[60u].w, fma(_2274, cbSceneParam._m0[60u].z, fma(_2270, cbSceneParam._m0[60u].y, _2266 * cbSceneParam._m0[60u].x))) / _2482;
        float _2484 = fma(_2278, cbSceneParam._m0[61u].w, fma(_2274, cbSceneParam._m0[61u].z, fma(_2270, cbSceneParam._m0[61u].y, _2266 * cbSceneParam._m0[61u].x))) / _2482;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2483 >= cbSceneParam._m0[64u].x) && (_2484 >= cbSceneParam._m0[64u].y)) && (_2483 <= cbSceneParam._m0[64u].z)) && (_2484 <= cbSceneParam._m0[64u].w))
        {
            float _2622 = fma(_2278, cbSceneParam._m0[62u].w, fma(_2274, cbSceneParam._m0[62u].z, fma(_2270, cbSceneParam._m0[62u].y, _2266 * cbSceneParam._m0[62u].x))) / _2482;
            float _2626 = isnan(cbSceneParam._m0[41u].w) ? _2622 : (isnan(_2622) ? cbSceneParam._m0[41u].w : max(_2622, cbSceneParam._m0[41u].w));
            float _2669 = (cbSceneParam._m0[33u].x - sqrt(((_2280 * _2280) + (_2279 * _2279)) + (_2281 * _2281))) * cbSceneParam._m0[33u].y;
            float _4857 = isnan(0.0) ? _2669 : (isnan(_2669) ? 0.0 : max(_2669, 0.0));
            float _2676 = (isnan(1.0) ? _4857 : (isnan(_4857) ? 1.0 : min(_4857, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2483, cbSceneParam._m0[33u].w + _2484), _2626), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2483, _2484 - cbSceneParam._m0[33u].z), _2626), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2483 - cbSceneParam._m0[33u].z, _2484 - cbSceneParam._m0[33u].w), _2626), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2483 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2484), _2626), 0.0)).x), vec4(0.25)));
            float _2680 = 1.0 - (_2676 * cbSceneParam._m0[34u].x);
            float _2681 = 1.0 - (_2676 * cbSceneParam._m0[34u].y);
            float _2682 = 1.0 - (_2676 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2682) ? _2430 : (isnan(_2430) ? _2682 : min(_2430, _2682));
            frontier_phi_37_36_ladder_1 = isnan(_2681) ? _2429 : (isnan(_2429) ? _2681 : min(_2429, _2681));
            frontier_phi_37_36_ladder_2 = isnan(_2680) ? _2428 : (isnan(_2428) ? _2680 : min(_2428, _2680));
        }
        else
        {
            frontier_phi_37_36_ladder = _2430;
            frontier_phi_37_36_ladder_1 = _2429;
            frontier_phi_37_36_ladder_2 = _2428;
        }
        _2494 = frontier_phi_37_36_ladder_2;
        _2496 = frontier_phi_37_36_ladder_1;
        _2498 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2494 = _2428;
        _2496 = _2429;
        _2498 = _2430;
    }
    uvec4 _2503 = floatBitsToUint(cbInstanceData._m0[_295 + 5u]);
    uint _2505 = _2503.x * 14u;
    uint _2506 = _2505 + 13u;
    float _2513 = _1180 + (-1.0);
    float _2518 = (cbLight._m0[_2506].x * _2513) + 1.0;
    float _2519 = (cbLight._m0[_2506].y * _2513) + 1.0;
    float _2520 = (cbLight._m0[_2506].z * _2513) + 1.0;
    float _2521 = (cbLight._m0[_2506].w * _2513) + 1.0;
    uint _2522 = _2505 + 5u;
    float _2528 = isnan(1.0) ? _2519 : (isnan(_2519) ? 1.0 : min(_2519, 1.0));
    uint _2532 = _2505 + 4u;
    float _2541 = isnan(1.0) ? _2518 : (isnan(_2518) ? 1.0 : min(_2518, 1.0));
    uint _2545 = _2505 | 1u;
    float _2556 = dot(vec3(cbLight._m0[_2505].xyz), vec3(_1018, _1019, _1020));
    float _2559 = dot(vec3(cbLight._m0[_2545].xyz), vec3(_1018, _1019, _1020));
    float _4893 = isnan(0.0) ? _2556 : (isnan(_2556) ? 0.0 : max(_2556, 0.0));
    float _4904 = isnan(0.0) ? _2559 : (isnan(_2559) ? 0.0 : max(_2559, 0.0));
    float _2564 = (isnan(1.0) ? _4893 : (isnan(_4893) ? 1.0 : min(_4893, 1.0))) * 0.3183098733425140380859375;
    float _2566 = (isnan(1.0) ? _4904 : (isnan(_4904) ? 1.0 : min(_4904, 1.0))) * 0.3183098733425140380859375;
    float _2573 = ((cbLight._m0[_2522].x * _2528) * _2566) + (((cbLight._m0[_2532].x * _2494) * _2541) * _2564);
    float _2574 = ((_2528 * cbLight._m0[_2522].y) * _2566) + (((cbLight._m0[_2532].y * _2496) * _2541) * _2564);
    float _2575 = ((_2528 * cbLight._m0[_2522].z) * _2566) + (((cbLight._m0[_2532].z * _2498) * _2541) * _2564);
    uvec4 _2579 = floatBitsToUint(cbLight._m0[_2505 + 12u]);
    bool _2581 = _2579.x == 0u;
    float _2683;
    float _2685;
    float _2687;
    if (_2581)
    {
        _2683 = _2573;
        _2685 = _2574;
        _2687 = _2575;
    }
    else
    {
        uint _2691 = _2505 + 6u;
        float _2707 = (dot(vec3(cbLight._m0[_2505 + 2u].xyz), vec3(_1018, _1019, _1020)) * 0.5) + 0.5;
        float _2708 = _2707 * _2707;
        float _4915 = isnan(0.0) ? _2708 : (isnan(_2708) ? 0.0 : max(_2708, 0.0));
        float _2709 = isnan(1.0) ? _4915 : (isnan(_4915) ? 1.0 : min(_4915, 1.0));
        float _2710 = isnan(1.0) ? _2520 : (isnan(_2520) ? 1.0 : min(_2520, 1.0));
        _2683 = (((cbLight._m0[_2691].x * 0.3183098733425140380859375) * _2709) * _2710) + _2573;
        _2685 = (((cbLight._m0[_2691].y * 0.3183098733425140380859375) * _2709) * _2710) + _2574;
        _2687 = (((cbLight._m0[_2691].z * 0.3183098733425140380859375) * _2709) * _2710) + _2575;
    }
    bool _2690 = _2579.y == 0u;
    float _2745;
    float _2747;
    float _2749;
    if (_2690)
    {
        _2745 = _2683;
        _2747 = _2685;
        _2749 = _2687;
    }
    else
    {
        uint _2907 = _2505 + 7u;
        float _2923 = (dot(vec3(cbLight._m0[_2505 + 3u].xyz), vec3(_1018, _1019, _1020)) * 0.5) + 0.5;
        float _2924 = _2923 * _2923;
        float _4931 = isnan(0.0) ? _2924 : (isnan(_2924) ? 0.0 : max(_2924, 0.0));
        float _2925 = isnan(1.0) ? _4931 : (isnan(_4931) ? 1.0 : min(_4931, 1.0));
        float _2926 = isnan(1.0) ? _2521 : (isnan(_2521) ? 1.0 : min(_2521, 1.0));
        _2745 = (((cbLight._m0[_2907].x * 0.3183098733425140380859375) * _2925) * _2926) + _2683;
        _2747 = (((cbLight._m0[_2907].y * 0.3183098733425140380859375) * _2925) * _2926) + _2685;
        _2749 = (((cbLight._m0[_2907].z * 0.3183098733425140380859375) * _2925) * _2926) + _2687;
    }
    uint _2752 = _2505 + 8u;
    float _2765 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2505].w)) * _1021) * 0.949999988079071044921875);
    float _2766 = _2765 * _2765;
    float _2767 = cbLight._m0[_2505].x + _1097;
    float _2768 = cbLight._m0[_2505].y + _1098;
    float _2769 = cbLight._m0[_2505].z + _1099;
    float _2773 = inversesqrt(dot(vec3(_2767, _2768, _2769), vec3(_2767, _2768, _2769)));
    float _2774 = _2773 * _2767;
    float _2775 = _2773 * _2768;
    float _2776 = _2773 * _2769;
    float _2777 = dot(vec3(_1018, _1019, _1020), vec3(cbLight._m0[_2505].xyz));
    float _4947 = isnan(0.0) ? _2777 : (isnan(_2777) ? 0.0 : max(_2777, 0.0));
    float _2780 = isnan(1.0) ? _4947 : (isnan(_4947) ? 1.0 : min(_4947, 1.0));
    float _4958 = isnan(0.0) ? _1181 : (isnan(_1181) ? 0.0 : max(_1181, 0.0));
    float _2781 = isnan(1.0) ? _4958 : (isnan(_4958) ? 1.0 : min(_4958, 1.0));
    float _2782 = dot(vec3(_1018, _1019, _1020), vec3(_2774, _2775, _2776));
    float _4969 = isnan(0.0) ? _2782 : (isnan(_2782) ? 0.0 : max(_2782, 0.0));
    float _2785 = isnan(1.0) ? _4969 : (isnan(_4969) ? 1.0 : min(_4969, 1.0));
    float _2786 = dot(vec3(cbLight._m0[_2505].xyz), vec3(_2774, _2775, _2776));
    float _4980 = isnan(0.0) ? _2786 : (isnan(_2786) ? 0.0 : max(_2786, 0.0));
    float _2790 = _2766 * _2766;
    float _2794 = ((_2785 * _2785) * (_2790 + (-1.0))) + 1.0;
    float _2805 = (exp2(log2(1.0 - (isnan(1.0) ? _4980 : (isnan(_4980) ? 1.0 : min(_4980, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2806 = 1.0 - _2766;
    float _2817 = (0.5 / (((_2781 * ((_2780 * _2806) + _2766)) + 9.9999999392252902907785028219223e-09) + (((_2781 * _2806) + _2766) * _2780))) * _2780;
    float _4991 = isnan(0.0) ? _2817 : (isnan(_2817) ? 0.0 : max(_2817, 0.0));
    float _2819 = (isnan(1.0) ? _4991 : (isnan(_4991) ? 1.0 : min(_4991, 1.0))) * (_2790 / ((_2794 * _2794) * 3.141590118408203125));
    uint _2833 = _2505 + 9u;
    float _2844 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2545].w)) * _1021) * 0.949999988079071044921875);
    float _2845 = _2844 * _2844;
    float _2846 = cbLight._m0[_2545].x + _1097;
    float _2847 = cbLight._m0[_2545].y + _1098;
    float _2848 = cbLight._m0[_2545].z + _1099;
    float _2852 = inversesqrt(dot(vec3(_2846, _2847, _2848), vec3(_2846, _2847, _2848)));
    float _2853 = _2852 * _2846;
    float _2854 = _2852 * _2847;
    float _2855 = _2852 * _2848;
    float _2856 = dot(vec3(_1018, _1019, _1020), vec3(cbLight._m0[_2545].xyz));
    float _5002 = isnan(0.0) ? _2856 : (isnan(_2856) ? 0.0 : max(_2856, 0.0));
    float _2859 = isnan(1.0) ? _5002 : (isnan(_5002) ? 1.0 : min(_5002, 1.0));
    float _2860 = dot(vec3(_1018, _1019, _1020), vec3(_2853, _2854, _2855));
    float _5013 = isnan(0.0) ? _2860 : (isnan(_2860) ? 0.0 : max(_2860, 0.0));
    float _2863 = isnan(1.0) ? _5013 : (isnan(_5013) ? 1.0 : min(_5013, 1.0));
    float _2864 = dot(vec3(cbLight._m0[_2545].xyz), vec3(_2853, _2854, _2855));
    float _5024 = isnan(0.0) ? _2864 : (isnan(_2864) ? 0.0 : max(_2864, 0.0));
    float _2868 = _2845 * _2845;
    float _2872 = ((_2863 * _2863) * (_2868 + (-1.0))) + 1.0;
    float _2881 = (exp2(log2(1.0 - (isnan(1.0) ? _5024 : (isnan(_5024) ? 1.0 : min(_5024, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2882 = 1.0 - _2845;
    float _2892 = (0.5 / (((_2781 * ((_2859 * _2882) + _2845)) + 9.9999999392252902907785028219223e-09) + (((_2781 * _2882) + _2845) * _2859))) * _2859;
    float _5035 = isnan(0.0) ? _2892 : (isnan(_2892) ? 0.0 : max(_2892, 0.0));
    float _2894 = (isnan(1.0) ? _5035 : (isnan(_5035) ? 1.0 : min(_5035, 1.0))) * (_2868 / ((_2872 * _2872) * 3.141590118408203125));
    float _2904 = (((_2881 * cbLight._m0[_2833].x) * _2894) * _2528) + ((((cbLight._m0[_2752].x * _2494) * _2805) * _2819) * _2541);
    float _2905 = (((_2881 * cbLight._m0[_2833].y) * _2894) * _2528) + ((((cbLight._m0[_2752].y * _2496) * _2805) * _2819) * _2541);
    float _2906 = (((_2881 * cbLight._m0[_2833].z) * _2894) * _2528) + ((((cbLight._m0[_2752].z * _2498) * _2805) * _2819) * _2541);
    float _2962;
    float _2964;
    float _2966;
    if (_2581)
    {
        _2962 = _2904;
        _2964 = _2905;
        _2966 = _2906;
    }
    else
    {
        uint _2968 = _2505 + 2u;
        uint _2972 = _2505 + 10u;
        float _2986 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2968].w)) * _1021) * 0.949999988079071044921875);
        float _2987 = _2986 * _2986;
        float _2988 = cbLight._m0[_2968].x + _1097;
        float _2989 = cbLight._m0[_2968].y + _1098;
        float _2990 = cbLight._m0[_2968].z + _1099;
        float _2994 = inversesqrt(dot(vec3(_2988, _2989, _2990), vec3(_2988, _2989, _2990)));
        float _2995 = _2994 * _2988;
        float _2996 = _2994 * _2989;
        float _2997 = _2994 * _2990;
        float _2998 = dot(vec3(_1018, _1019, _1020), vec3(cbLight._m0[_2968].xyz));
        float _5046 = isnan(0.0) ? _2998 : (isnan(_2998) ? 0.0 : max(_2998, 0.0));
        float _3001 = isnan(1.0) ? _5046 : (isnan(_5046) ? 1.0 : min(_5046, 1.0));
        float _3002 = dot(vec3(_1018, _1019, _1020), vec3(_2995, _2996, _2997));
        float _5057 = isnan(0.0) ? _3002 : (isnan(_3002) ? 0.0 : max(_3002, 0.0));
        float _3005 = isnan(1.0) ? _5057 : (isnan(_5057) ? 1.0 : min(_5057, 1.0));
        float _3006 = dot(vec3(cbLight._m0[_2968].xyz), vec3(_2995, _2996, _2997));
        float _5068 = isnan(0.0) ? _3006 : (isnan(_3006) ? 0.0 : max(_3006, 0.0));
        float _3010 = _2987 * _2987;
        float _3014 = ((_3005 * _3005) * (_3010 + (-1.0))) + 1.0;
        float _3023 = (exp2(log2(1.0 - (isnan(1.0) ? _5068 : (isnan(_5068) ? 1.0 : min(_5068, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3024 = 1.0 - _2987;
        float _3034 = (0.5 / (((_2781 * ((_3001 * _3024) + _2987)) + 9.9999999392252902907785028219223e-09) + (((_2781 * _3024) + _2987) * _3001))) * _3001;
        float _5079 = isnan(0.0) ? _3034 : (isnan(_3034) ? 0.0 : max(_3034, 0.0));
        float _3036 = (isnan(1.0) ? _5079 : (isnan(_5079) ? 1.0 : min(_5079, 1.0))) * (_3010 / ((_3014 * _3014) * 3.141590118408203125));
        float _3037 = isnan(1.0) ? _2520 : (isnan(_2520) ? 1.0 : min(_2520, 1.0));
        _2962 = (((_3023 * cbLight._m0[_2972].x) * _3036) * _3037) + _2904;
        _2964 = (((_3023 * cbLight._m0[_2972].y) * _3036) * _3037) + _2905;
        _2966 = (((_3023 * cbLight._m0[_2972].z) * _3036) * _3037) + _2906;
    }
    float _3068;
    float _3070;
    float _3072;
    if (_2690)
    {
        _3068 = _2962;
        _3070 = _2964;
        _3072 = _2966;
    }
    else
    {
        uint _3079 = _2505 + 3u;
        uint _3083 = _2505 + 11u;
        float _3097 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3079].w)) * _1021) * 0.949999988079071044921875);
        float _3098 = _3097 * _3097;
        float _3099 = cbLight._m0[_3079].x + _1097;
        float _3100 = cbLight._m0[_3079].y + _1098;
        float _3101 = cbLight._m0[_3079].z + _1099;
        float _3105 = inversesqrt(dot(vec3(_3099, _3100, _3101), vec3(_3099, _3100, _3101)));
        float _3106 = _3105 * _3099;
        float _3107 = _3105 * _3100;
        float _3108 = _3105 * _3101;
        float _3109 = dot(vec3(_1018, _1019, _1020), vec3(cbLight._m0[_3079].xyz));
        float _5095 = isnan(0.0) ? _3109 : (isnan(_3109) ? 0.0 : max(_3109, 0.0));
        float _3112 = isnan(1.0) ? _5095 : (isnan(_5095) ? 1.0 : min(_5095, 1.0));
        float _3113 = dot(vec3(_1018, _1019, _1020), vec3(_3106, _3107, _3108));
        float _5106 = isnan(0.0) ? _3113 : (isnan(_3113) ? 0.0 : max(_3113, 0.0));
        float _3116 = isnan(1.0) ? _5106 : (isnan(_5106) ? 1.0 : min(_5106, 1.0));
        float _3117 = dot(vec3(cbLight._m0[_3079].xyz), vec3(_3106, _3107, _3108));
        float _5117 = isnan(0.0) ? _3117 : (isnan(_3117) ? 0.0 : max(_3117, 0.0));
        float _3121 = _3098 * _3098;
        float _3125 = ((_3116 * _3116) * (_3121 + (-1.0))) + 1.0;
        float _3134 = (exp2(log2(1.0 - (isnan(1.0) ? _5117 : (isnan(_5117) ? 1.0 : min(_5117, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3135 = 1.0 - _3098;
        float _3145 = (0.5 / (((_2781 * ((_3112 * _3135) + _3098)) + 9.9999999392252902907785028219223e-09) + (((_2781 * _3135) + _3098) * _3112))) * _3112;
        float _5128 = isnan(0.0) ? _3145 : (isnan(_3145) ? 0.0 : max(_3145, 0.0));
        float _3147 = (isnan(1.0) ? _5128 : (isnan(_5128) ? 1.0 : min(_5128, 1.0))) * (_3121 / ((_3125 * _3125) * 3.141590118408203125));
        float _3148 = isnan(1.0) ? _2521 : (isnan(_2521) ? 1.0 : min(_2521, 1.0));
        _3068 = (((_3134 * cbLight._m0[_3083].x) * _3147) * _3148) + _2962;
        _3070 = (((_3134 * cbLight._m0[_3083].y) * _3147) * _3148) + _2964;
        _3072 = (((_3134 * cbLight._m0[_3083].z) * _3147) * _3148) + _2966;
    }
    float _3214;
    float _3216;
    float _3218;
    float _3220;
    float _3222;
    float _3224;
    if (_2503.y == 0u)
    {
        uvec4 _3169 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3170 = _3169.x;
        uint _3181 = uint((float(_3169.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1118) / _3170))) + floor(float(uint(cbSceneParam._m0[85u].x * _1117) / _3170)));
        float _3191 = (log2(_2281 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3192 = isnan(0.0) ? _3191 : (isnan(_3191) ? 0.0 : max(_3191, 0.0));
        uint _3195 = uint(isnan(14.0) ? _3192 : (isnan(_3192) ? 14.0 : min(_3192, 14.0)));
        uvec4 _3200 = texelFetch(g_lightClusterGridBuffer, int(((_3195 << 2u) + (_3181 << 6u)) >> 2u));
        uint _3201 = _3200.x;
        uint _3202 = _3169.z;
        float _3281;
        float _3283;
        float _3285;
        float _3287;
        float _3289;
        float _3291;
        if (((((1u << ((_3202 >> 4u) & 15u)) + 4294967295u) & _3201) == 0u) || ((_3202 & 240u) == 0u))
        {
            _3281 = 0.0;
            _3283 = 0.0;
            _3285 = 0.0;
            _3287 = 0.0;
            _3289 = 0.0;
            _3291 = 0.0;
        }
        else
        {
            float _3282;
            float _3284;
            float _3286;
            float _3288;
            float _3290;
            float _3292;
            float _3434 = 0.0;
            float _3435 = 0.0;
            float _3436 = 0.0;
            float _3437 = 0.0;
            float _3438 = 0.0;
            float _3439 = 0.0;
            uint _3440 = 0u;
            uint _3449;
            bool _3450;
            for (;;)
            {
                _3449 = texelFetch(g_lightClassification, int((((_3195 << 5u) + (_3181 << 9u)) + (_3440 << 2u)) >> 2u)).x;
                _3450 = _3449 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3450)
                {
                    frontier_phi_71_pred = _3439;
                    frontier_phi_71_pred_1 = _3438;
                    frontier_phi_71_pred_2 = _3437;
                    frontier_phi_71_pred_3 = _3436;
                    frontier_phi_71_pred_4 = _3435;
                    frontier_phi_71_pred_5 = _3434;
                }
                else
                {
                    float _3579;
                    float _3580;
                    float _3581;
                    float _3582;
                    float _3583;
                    float _3584;
                    uint _3585;
                    _3579 = _3434;
                    _3580 = _3435;
                    _3581 = _3436;
                    _3582 = _3437;
                    _3583 = _3438;
                    _3584 = _3439;
                    _3585 = _3449;
                    float _3506;
                    float _3507;
                    float _3508;
                    float _3509;
                    float _3510;
                    float _3511;
                    for (;;)
                    {
                        uint _3589 = uint(findLSB(_3585)) + (_3440 << 5u);
                        uint _3586 = (_3585 + 4294967295u) & _3585;
                        uint _3591 = _3589 * 48u;
                        vec4 _3605 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3591)).x, texelFetch(g_PointLightRenderingBuffer, int(_3591 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3591 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3591 + 3u)).x));
                        uint _3611 = (_3589 * 48u) + 4u;
                        vec4 _3624 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3611)).x, texelFetch(g_PointLightRenderingBuffer, int(_3611 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3611 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3611 + 3u)).x));
                        uint _3630 = (_3589 * 48u) + 8u;
                        vec3 _3641 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3630)).x, texelFetch(g_PointLightRenderingBuffer, int(_3630 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3630 + 2u)).x));
                        float _3645 = _3605.x - _2279;
                        float _3646 = _3605.y - _2280;
                        float _3647 = _3605.z - _2281;
                        float _3648 = dot(vec3(_3645, _3646, _3647), vec3(_3645, _3646, _3647));
                        float _3651 = inversesqrt(_3648);
                        float _3652 = _3651 * _3645;
                        float _3653 = _3651 * _3646;
                        float _3654 = _3651 * _3647;
                        float _3655 = dot(vec3(_1136, _1139, _1142), vec3(_3652, _3653, _3654));
                        float _3660 = 1.0 - (_3648 * _3605.w);
                        float _5154 = isnan(0.0) ? _3660 : (isnan(_3660) ? 0.0 : max(_3660, 0.0));
                        float _3661 = isnan(1.0) ? _5154 : (isnan(_5154) ? 1.0 : min(_5154, 1.0));
                        float _3662 = sqrt(_3648) * _3624.w;
                        float _3665 = 1.39999997615814208984375 / (_3662 + 1.39999997615814208984375);
                        float _3666 = _3665 * _3665;
                        float _3669 = ((1.0 - _3666) * _3655) + _3666;
                        float _3672 = _3662 * _3662;
                        float _3676 = ((isnan(0.0) ? _3669 : (isnan(_3669) ? 0.0 : max(_3669, 0.0))) * _3661) / ((_3672 * 0.699999988079071044921875) + 1.0);
                        float _3680 = (-0.0) - _2279;
                        float _3681 = (-0.0) - _2280;
                        float _3682 = (-0.0) - _2281;
                        float _3686 = inversesqrt(dot(vec3(_3680, _3681, _3682), vec3(_3680, _3681, _3682)));
                        float _3687 = _3686 * _3680;
                        float _3688 = _3686 * _3681;
                        float _3689 = _3686 * _3682;
                        float _3696 = exp2(log2(1.0 / ((_3672 * 3.5) + 5.0)) * 0.25);
                        float _3697 = 1.0 - _1196;
                        float _3704 = sqrt(1.0 - ((1.0 - (_3697 * _3697)) * (1.0 - (_3696 * _3696))));
                        float _3705 = _3704 * _3704;
                        float _3706 = _3705 * _3705;
                        float _3707 = _3687 + _3652;
                        float _3708 = _3688 + _3653;
                        float _3709 = _3689 + _3654;
                        float _3713 = inversesqrt(dot(vec3(_3707, _3708, _3709), vec3(_3707, _3708, _3709)));
                        float _3717 = dot(vec3(_1136, _1139, _1142), vec3(_3687, _3688, _3689));
                        float _5170 = isnan(0.0) ? _3717 : (isnan(_3717) ? 0.0 : max(_3717, 0.0));
                        float _3720 = isnan(1.0) ? _5170 : (isnan(_5170) ? 1.0 : min(_5170, 1.0));
                        float _3721 = dot(vec3(_1136, _1139, _1142), vec3(_3713 * _3707, _3713 * _3708, _3713 * _3709));
                        float _5181 = isnan(0.0) ? _3721 : (isnan(_3721) ? 0.0 : max(_3721, 0.0));
                        float _3724 = isnan(1.0) ? _5181 : (isnan(_5181) ? 1.0 : min(_5181, 1.0));
                        float _3728 = ((_3724 * _3724) * (_3706 + (-1.0))) + 1.0;
                        float _3729 = _3665 * _3705;
                        float _3730 = _3729 * _3729;
                        float _3733 = ((1.0 - _3730) * _3655) + _3730;
                        float _5192 = isnan(0.0) ? _3733 : (isnan(_3733) ? 0.0 : max(_3733, 0.0));
                        float _3734 = isnan(1.0) ? _5192 : (isnan(_5192) ? 1.0 : min(_5192, 1.0));
                        float _3735 = 1.0 - _3705;
                        float _3745 = (0.5 / (((_3734 * ((_3720 * _3735) + _3705)) + 9.9999999392252902907785028219223e-09) + (((_3734 * _3735) + _3705) * _3720))) * _3734;
                        float _5203 = isnan(0.0) ? _3745 : (isnan(_3745) ? 0.0 : max(_3745, 0.0));
                        float _3756 = (((_3706 * 3.1415927410125732421875) * (isnan(1.0) ? _5203 : (isnan(_5203) ? 1.0 : min(_5203, 1.0)))) / ((_3728 * _3728) * ((_3672 * 2.1991131305694580078125) + 3.141590118408203125))) * _3661;
                        _3509 = (_3676 * _3624.x) + _3582;
                        _3510 = (_3676 * _3624.y) + _3583;
                        _3511 = (_3676 * _3624.z) + _3584;
                        _3506 = (_3756 * _3641.x) + _3579;
                        _3507 = (_3756 * _3641.y) + _3580;
                        _3508 = (_3756 * _3641.z) + _3581;
                        if (_3586 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3579 = _3506;
                            _3580 = _3507;
                            _3581 = _3508;
                            _3582 = _3509;
                            _3583 = _3510;
                            _3584 = _3511;
                            _3585 = _3586;
                        }
                    }
                    frontier_phi_71_pred = _3511;
                    frontier_phi_71_pred_1 = _3510;
                    frontier_phi_71_pred_2 = _3509;
                    frontier_phi_71_pred_3 = _3508;
                    frontier_phi_71_pred_4 = _3507;
                    frontier_phi_71_pred_5 = _3506;
                }
                _3292 = frontier_phi_71_pred;
                _3290 = frontier_phi_71_pred_1;
                _3288 = frontier_phi_71_pred_2;
                _3286 = frontier_phi_71_pred_3;
                _3284 = frontier_phi_71_pred_4;
                _3282 = frontier_phi_71_pred_5;
                uint _3441 = _3440 + 1u;
                if (_3441 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3434 = _3282;
                    _3435 = _3284;
                    _3436 = _3286;
                    _3437 = _3288;
                    _3438 = _3290;
                    _3439 = _3292;
                    _3440 = _3441;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3281 = _3282;
            _3283 = _3284;
            _3285 = _3286;
            _3287 = _3288;
            _3289 = _3290;
            _3291 = _3292;
        }
        uvec4 _3295 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3296 = _3295.z;
        uint _3298 = (_3296 >> 8u) & 15u;
        float _3402;
        float _3404;
        float _3406;
        float _3408;
        float _3410;
        float _3412;
        if (((4294967295u << _3298) & _3201) == 0u)
        {
            _3402 = _3281;
            _3404 = _3283;
            _3406 = _3285;
            _3408 = _3287;
            _3410 = _3289;
            _3412 = _3291;
        }
        else
        {
            float _3427 = inversesqrt(dot(vec3(_2279, _2280, _2281), vec3(_2279, _2280, _2281)));
            float _3428 = _3427 * _2279;
            float _3429 = _3427 * _2280;
            float _3430 = _3427 * _2281;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3298 < ((_3296 >> 12u) & 15u))
            {
                float _3403;
                float _3405;
                float _3407;
                float _3409;
                float _3411;
                float _3413;
                float _3562 = _3281;
                float _3563 = _3283;
                float _3564 = _3285;
                float _3565 = _3287;
                float _3566 = _3289;
                float _3567 = _3291;
                uint _3568 = _3298;
                uint _3577;
                bool _3578;
                for (;;)
                {
                    _3577 = texelFetch(g_lightClassification, int((((_3195 << 5u) + (_3181 << 9u)) + (_3568 << 2u)) >> 2u)).x;
                    _3578 = _3577 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3578)
                    {
                        frontier_phi_82_pred = _3567;
                        frontier_phi_82_pred_1 = _3566;
                        frontier_phi_82_pred_2 = _3565;
                        frontier_phi_82_pred_3 = _3564;
                        frontier_phi_82_pred_4 = _3563;
                        frontier_phi_82_pred_5 = _3562;
                    }
                    else
                    {
                        float _3770;
                        float _3771;
                        float _3772;
                        float _3773;
                        float _3774;
                        float _3775;
                        float _4063;
                        float _4064;
                        float _4065;
                        float _4066;
                        float _4067;
                        float _4068;
                        float _3783 = _3562;
                        float _3784 = _3563;
                        float _3785 = _3564;
                        float _3786 = _3565;
                        float _3787 = _3566;
                        float _3788 = _3567;
                        uint _3789 = _3577;
                        uint _3790;
                        vec4 _3815;
                        float _3816;
                        vec4 _3831;
                        vec3 _3843;
                        vec4 _3858;
                        vec4 _3873;
                        float _3919;
                        bool _3920;
                        for (;;)
                        {
                            uint _3800 = ((_3568 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3789));
                            _3790 = (_3789 + 4294967295u) & _3789;
                            uint _3802 = _3800 * 40u;
                            _3815 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3802)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3802 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3802 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3802 + 3u)).x));
                            _3816 = _3815.w;
                            uint _3818 = (_3800 * 40u) + 4u;
                            _3831 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3818)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3818 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3818 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3818 + 3u)).x));
                            uint _3833 = (_3800 * 40u) + 8u;
                            _3843 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3833)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3833 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3833 + 2u)).x));
                            uint _3845 = (_3800 * 40u) + 16u;
                            _3858 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3845)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3845 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3845 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3845 + 3u)).x));
                            uint _3860 = (_3800 * 40u) + 20u;
                            _3873 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3860)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3860 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3860 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3860 + 3u)).x));
                            uint _3875 = (_3800 * 40u) + 24u;
                            vec4 _3888 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3875)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3875 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3875 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3875 + 3u)).x));
                            uint _3894 = (_3800 * 40u) + 28u;
                            vec4 _3907 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3894)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3894 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3894 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3894 + 3u)).x));
                            _3919 = fma(_2281, _3907.z, fma(_2280, _3907.y, _3907.x * _2279)) + _3907.w;
                            _3920 = !((fma(_2281, _3888.z, fma(_2280, _3888.y, _3888.x * _2279)) + _3888.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3920)
                            {
                                float _3947 = _3815.x - _2279;
                                float _3948 = _3815.y - _2280;
                                float _3949 = _3815.z - _2281;
                                float _3950 = dot(vec3(_3947, _3948, _3949), vec3(_3947, _3948, _3949));
                                float _3953 = inversesqrt(_3950);
                                float _3954 = _3953 * _3947;
                                float _3955 = _3953 * _3948;
                                float _3956 = _3953 * _3949;
                                float _3960 = 1.0 - (_3950 / (_3816 * _3816));
                                float _5214 = isnan(0.0) ? _3960 : (isnan(_3960) ? 0.0 : max(_3960, 0.0));
                                float _3961 = isnan(1.0) ? _5214 : (isnan(_5214) ? 1.0 : min(_5214, 1.0));
                                float _3965 = sqrt(_3950) * _3831.w;
                                float _3967 = 1.39999997615814208984375 / (_3965 + 1.39999997615814208984375);
                                float _3968 = _3967 * _3967;
                                float _3971 = ((1.0 - _3968) * dot(vec3(_3954, _3955, _3956), vec3(_1136, _1139, _1142))) + _3968;
                                float _3974 = _3965 * _3965;
                                float _3978 = (fma(_2281, _3858.z, fma(_2280, _3858.y, _3858.x * _2279)) + _3858.w) / _3919;
                                float _3979 = (fma(_2281, _3873.z, fma(_2280, _3873.y, _3873.x * _2279)) + _3873.w) / _3919;
                                float _3983 = 1.0 - dot(vec2(_3978, _3979), vec2(_3978, _3979));
                                float _5230 = isnan(0.0) ? _3983 : (isnan(_3983) ? 0.0 : max(_3983, 0.0));
                                float _3984 = isnan(1.0) ? _5230 : (isnan(_5230) ? 1.0 : min(_5230, 1.0));
                                float _3985 = _3984 * (((isnan(0.0) ? _3971 : (isnan(_3971) ? 0.0 : max(_3971, 0.0))) * _3961) / ((_3974 * 0.699999988079071044921875) + 1.0));
                                float _3997 = exp2(log2(1.0 / ((_3974 * 3.5) + 5.0)) * 0.25);
                                float _3998 = 1.0 - _1196;
                                float _4005 = sqrt(1.0 - ((1.0 - (_3998 * _3998)) * (1.0 - (_3997 * _3997))));
                                float _4006 = _4005 * _4005;
                                float _4007 = _4006 * _4006;
                                float _4008 = _3954 - _3428;
                                float _4009 = _3955 - _3429;
                                float _4010 = _3956 - _3430;
                                float _4014 = inversesqrt(dot(vec3(_4008, _4009, _4010), vec3(_4008, _4009, _4010)));
                                float _4018 = dot(vec3(_1136, _1139, _1142), vec3((-0.0) - _3428, (-0.0) - _3429, (-0.0) - _3430));
                                float _5241 = isnan(0.0) ? _4018 : (isnan(_4018) ? 0.0 : max(_4018, 0.0));
                                float _4021 = isnan(1.0) ? _5241 : (isnan(_5241) ? 1.0 : min(_5241, 1.0));
                                float _4022 = dot(vec3(_1136, _1139, _1142), vec3(_4014 * _4008, _4014 * _4009, _4014 * _4010));
                                float _5252 = isnan(0.0) ? _4022 : (isnan(_4022) ? 0.0 : max(_4022, 0.0));
                                float _4025 = isnan(1.0) ? _5252 : (isnan(_5252) ? 1.0 : min(_5252, 1.0));
                                float _4029 = ((_4025 * _4025) * (_4007 + (-1.0))) + 1.0;
                                float _4030 = _3967 * _4006;
                                float _4031 = _4030 * _4030;
                                float _4037 = ((1.0 - _4031) * dot(vec3(_1136, _1139, _1142), vec3(_3954, _3955, _3956))) + _4031;
                                float _5263 = isnan(0.0) ? _4037 : (isnan(_4037) ? 0.0 : max(_4037, 0.0));
                                float _4038 = isnan(1.0) ? _5263 : (isnan(_5263) ? 1.0 : min(_5263, 1.0));
                                float _4039 = 1.0 - _4006;
                                float _4049 = (0.5 / (((_4038 * ((_4021 * _4039) + _4006)) + 9.9999999392252902907785028219223e-09) + (((_4038 * _4039) + _4006) * _4021))) * _4038;
                                float _5274 = isnan(0.0) ? _4049 : (isnan(_4049) ? 0.0 : max(_4049, 0.0));
                                float _4059 = (_3984 * _3961) * (((_4007 * 3.1415927410125732421875) * (isnan(1.0) ? _5274 : (isnan(_5274) ? 1.0 : min(_5274, 1.0)))) / ((_4029 * _4029) * ((_3974 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3985 * _3831.z;
                                frontier_phi_88_pred_1 = _3985 * _3831.y;
                                frontier_phi_88_pred_2 = _3985 * _3831.x;
                                frontier_phi_88_pred_3 = _4059 * _3843.z;
                                frontier_phi_88_pred_4 = _4059 * _3843.y;
                                frontier_phi_88_pred_5 = _4059 * _3843.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _4068 = frontier_phi_88_pred;
                            _4067 = frontier_phi_88_pred_1;
                            _4066 = frontier_phi_88_pred_2;
                            _4065 = frontier_phi_88_pred_3;
                            _4064 = frontier_phi_88_pred_4;
                            _4063 = frontier_phi_88_pred_5;
                            _3773 = _4066 + _3786;
                            _3774 = _4067 + _3787;
                            _3775 = _4068 + _3788;
                            _3770 = _4063 + _3783;
                            _3771 = _4064 + _3784;
                            _3772 = _4065 + _3785;
                            if (_3790 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3783 = _3770;
                                _3784 = _3771;
                                _3785 = _3772;
                                _3786 = _3773;
                                _3787 = _3774;
                                _3788 = _3775;
                                _3789 = _3790;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3775;
                        frontier_phi_82_pred_1 = _3774;
                        frontier_phi_82_pred_2 = _3773;
                        frontier_phi_82_pred_3 = _3772;
                        frontier_phi_82_pred_4 = _3771;
                        frontier_phi_82_pred_5 = _3770;
                    }
                    _3413 = frontier_phi_82_pred;
                    _3411 = frontier_phi_82_pred_1;
                    _3409 = frontier_phi_82_pred_2;
                    _3407 = frontier_phi_82_pred_3;
                    _3405 = frontier_phi_82_pred_4;
                    _3403 = frontier_phi_82_pred_5;
                    uint _3569 = _3568 + 1u;
                    if (_3569 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3562 = _3403;
                        _3563 = _3405;
                        _3564 = _3407;
                        _3565 = _3409;
                        _3566 = _3411;
                        _3567 = _3413;
                        _3568 = _3569;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3409;
                frontier_phi_63_64_ladder_1 = _3413;
                frontier_phi_63_64_ladder_2 = _3411;
                frontier_phi_63_64_ladder_3 = _3407;
                frontier_phi_63_64_ladder_4 = _3405;
                frontier_phi_63_64_ladder_5 = _3403;
            }
            else
            {
                frontier_phi_63_64_ladder = _3287;
                frontier_phi_63_64_ladder_1 = _3291;
                frontier_phi_63_64_ladder_2 = _3289;
                frontier_phi_63_64_ladder_3 = _3285;
                frontier_phi_63_64_ladder_4 = _3283;
                frontier_phi_63_64_ladder_5 = _3281;
            }
            _3402 = frontier_phi_63_64_ladder_5;
            _3404 = frontier_phi_63_64_ladder_4;
            _3406 = frontier_phi_63_64_ladder_3;
            _3408 = frontier_phi_63_64_ladder;
            _3410 = frontier_phi_63_64_ladder_2;
            _3412 = frontier_phi_63_64_ladder_1;
        }
        float _3417 = isnan(1.0) ? _1180 : (isnan(_1180) ? 1.0 : min(_1180, 1.0));
        _3214 = (_3417 * _3408) + _2745;
        _3216 = (_3417 * _3410) + _2747;
        _3218 = (_3417 * _3412) + _2749;
        _3220 = ((_3402 * 0.039999999105930328369140625) * _3417) + _3068;
        _3222 = ((_3404 * 0.039999999105930328369140625) * _3417) + _3070;
        _3224 = ((_3406 * 0.039999999105930328369140625) * _3417) + _3072;
    }
    else
    {
        _3214 = _2745;
        _3216 = _2747;
        _3218 = _2749;
        _3220 = _3068;
        _3222 = _3070;
        _3224 = _3072;
    }
    float _5290 = isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0));
    float _5301 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
    float _5312 = isnan(0.0) ? _1167 : (isnan(_1167) ? 0.0 : max(_1167, 0.0));
    float _3241 = ((isnan(1.0) ? _5290 : (isnan(_5290) ? 1.0 : min(_5290, 1.0))) * (_3214 + ((isnan(0.0) ? _1935 : (isnan(_1935) ? 0.0 : max(_1935, 0.0))) * _1180))) + ((_3220 + ((isnan(0.0) ? _2226 : (isnan(_2226) ? 0.0 : max(_2226, 0.0))) * _2014)) * cbPerFrame._m0[3u].x);
    float _3242 = ((isnan(1.0) ? _5301 : (isnan(_5301) ? 1.0 : min(_5301, 1.0))) * (_3216 + ((isnan(0.0) ? _1938 : (isnan(_1938) ? 0.0 : max(_1938, 0.0))) * _1180))) + ((_3222 + ((isnan(0.0) ? _2229 : (isnan(_2229) ? 0.0 : max(_2229, 0.0))) * _2014)) * cbPerFrame._m0[3u].x);
    float _3243 = ((isnan(1.0) ? _5312 : (isnan(_5312) ? 1.0 : min(_5312, 1.0))) * (_3218 + ((isnan(0.0) ? _1941 : (isnan(_1941) ? 0.0 : max(_1941, 0.0))) * _1180))) + ((_3224 + ((isnan(0.0) ? _2232 : (isnan(_2232) ? 0.0 : max(_2232, 0.0))) * _2014)) * cbPerFrame._m0[3u].x);
    uint _3244 = _295 + 6u;
    float _3252 = _1117 / cbSceneParam._m0[86u].x;
    float _3253 = _1118 / cbSceneParam._m0[86u].y;
    vec4 _3267 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3252, _3253, (log2((isnan(cbSceneParam._m0[77u].w) ? _1039 : (isnan(_1039) ? cbSceneParam._m0[77u].w : min(_1039, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3269 = _3267.x;
    float _3270 = _3267.y;
    float _3271 = _3267.z;
    float _3272 = _3267.w;
    float _3344;
    float _3346;
    float _3348;
    float _3350;
    if (_1039 > cbSceneParam._m0[78u].w)
    {
        float _3306 = isnan(_1039) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1039 : min(cbSceneParam._m0[80u].w, _1039));
        float _3307 = _3306 / _1039;
        float _3318 = _3307 * _1090;
        float _3319 = _1091 * _3307;
        float _3320 = (-0.0) - _3319;
        float _3322 = _3307 * _1092;
        float _3324 = (cbSceneParam._m0[77u].w * _3320) / _3306;
        float _3325 = _3324 + cbSceneParam._m0[79u].w;
        float _3326 = cbSceneParam._m0[79u].w - _3319;
        float _3332 = sqrt(((_3318 * _3318) + (_3319 * _3319)) + (_3322 * _3322));
        float _3335 = (1.0 - (cbSceneParam._m0[77u].w / _3306)) * _3332;
        float _3340 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3342 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3519;
        if (abs((_3320 - _3324) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3519 = ((((_3325 > 0.0) ? exp2(_3340 * _3325) : (2.0 - exp2(_3342 * _3325))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3335;
        }
        else
        {
            float _3463 = 1.0 / cbSceneParam._m0[80u].x;
            float _3464 = isnan(_3326) ? _3325 : (isnan(_3325) ? _3326 : max(_3325, _3326));
            float _3465 = isnan(_3326) ? _3325 : (isnan(_3325) ? _3326 : min(_3325, _3326));
            float _3474 = isnan(0.0) ? _3464 : (isnan(_3464) ? 0.0 : min(_3464, 0.0));
            float _3475 = isnan(0.0) ? _3465 : (isnan(_3465) ? 0.0 : min(_3465, 0.0));
            _3519 = ((abs(_3332 / _3320) * cbSceneParam._m0[80u].y) * ((((_3474 - _3475) * 2.0) - ((exp2(_3340 * (isnan(0.0) ? _3464 : (isnan(_3464) ? 0.0 : max(_3464, 0.0)))) - exp2(_3340 * (isnan(0.0) ? _3465 : (isnan(_3465) ? 0.0 : max(_3465, 0.0))))) * _3463)) - ((exp2(_3342 * _3474) - exp2(_3342 * _3475)) * _3463))) + (_3335 * cbSceneParam._m0[80u].z);
        }
        vec4 _3521 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3252, _3253, 1.0), 0.0);
        float _3530 = exp2((_3519 * (-1.44269502162933349609375)) * (1.0 - _3521.w));
        float _3531 = log2(_3530);
        float _3547 = log2(_3272);
        _3344 = (exp2(_3547 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3531 * cbSceneParam._m0[78u].x)) * _3521.x) / cbSceneParam._m0[78u].x)) + _3269;
        _3346 = (exp2(_3547 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3531 * cbSceneParam._m0[78u].y)) * _3521.y) / cbSceneParam._m0[78u].y)) + _3270;
        _3348 = (exp2(_3547 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3531 * cbSceneParam._m0[78u].z)) * _3521.z) / cbSceneParam._m0[78u].z)) + _3271;
        _3350 = _3530 * _3272;
    }
    else
    {
        _3344 = _3269;
        _3346 = _3270;
        _3348 = _3271;
        _3350 = _3272;
    }
    bool _3557;
    vec4 _3360;
    vec4 _3382;
    float _3384;
    float _3388;
    float _3389;
    float _3390;
    float _3391;
    bool _3401;
    for (;;)
    {
        _3360 = cbMatDynParam._m0[0u];
        float _3362 = roundEven(_3360.y);
        bool _3363 = _3362 == 3.0;
        float _3364 = log2(_3350);
        float _3371 = exp2(_3364 * cbSceneParam._m0[78u].x) * _3241;
        float _3372 = exp2(_3364 * cbSceneParam._m0[78u].y) * _3242;
        float _3373 = exp2(_3364 * cbSceneParam._m0[78u].z) * _3243;
        float _3380 = _1106 + (-0.5);
        _3382 = cbMtdParam._m0[1u];
        _3384 = _3382.y * _3380;
        float _3387 = (_3362 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3388 = _3387 * (_3363 ? _3371 : (_3371 + (cbSceneParam._m0[72u].w * _3344)));
        _3389 = _3387 * (_3363 ? _3372 : (_3372 + (cbSceneParam._m0[72u].w * _3346)));
        _3390 = _3387 * (_3363 ? _3373 : (_3373 + (cbSceneParam._m0[72u].w * _3348)));
        _3391 = _3380 * 0.999000012874603271484375;
        _3401 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3401)
        {
            if ((cbInstanceData._m0[_295 + 7u].x + _3391) < 0.5)
            {
                _3557 = true;
                break;
            }
        }
        uint _3498 = _1155 + uint(_3360.w);
        if ((cbInstanceData._m0[_3498].w < 1.0) && ((cbInstanceData._m0[_3498].w + _3391) < 0.5))
        {
            _3557 = true;
            break;
        }
        if ((_3384 + 1.0) < _3382.x)
        {
            _3557 = true;
            break;
        }
        _3557 = false;
        break;
    }
    float _3761;
    if (_3557)
    {
        discard_state = true;
        _3761 = 0.0;
    }
    else
    {
        _3761 = cbInstanceData._m0[_3244].w;
    }
    SV_Target.x = _3388;
    SV_Target.y = _3389;
    SV_Target.z = _3390;
    SV_Target.w = _3761;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3244].w;
    discard_exit();
}


