#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1489;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _238 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _239 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _240 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _246 = inversesqrt(dot(vec3(_238, _239, _240), vec3(_238, _239, _240)));
    float _247 = _246 * _238;
    float _248 = _246 * _239;
    float _249 = _246 * _240;
    float _253 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _254 = _253 * NORMAL.x;
    float _255 = _253 * NORMAL.y;
    float _256 = _253 * NORMAL.z;
    float _260 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _261 = _260 * TANGENT.x;
    float _262 = _260 * TANGENT.y;
    float _263 = _260 * TANGENT.z;
    float _272 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _274 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _275 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4076 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    float _4087 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _4098 = isnan(0.0) ? _275 : (isnan(_275) ? 0.0 : max(_275, 0.0));
    uint _285 = uint(roundEven(NORMAL.w)) * 13u;
    uint _290 = _285 + 1u;
    uint _294 = _285 + 2u;
    float _303 = sqrt(((cbInstanceData._m0[_290].x * cbInstanceData._m0[_290].x) + (cbInstanceData._m0[_285].x * cbInstanceData._m0[_285].x)) + (cbInstanceData._m0[_294].x * cbInstanceData._m0[_294].x));
    float _304 = _303 * TEXCOORD.z;
    float _305 = _303 * TEXCOORD.w;
    vec4 _318 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _304) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _305) + cbTextureTilingScale._m0[13u].w));
    vec4 _341 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _367 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _372 = _367.x * cbMtdParam._m0[11u].x;
    float _373 = _367.y * cbMtdParam._m0[11u].y;
    float _374 = _367.z * cbMtdParam._m0[11u].z;
    vec4 _393 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _304) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _305) + cbTextureTilingScale._m0[5u].w));
    vec4 _412 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _447 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _449 = _447.x;
    float _461 = dot(vec4(_449, _447.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _478 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _412.x) * 2.0) - ((((_449 - _461) * cbMtdParam._m0[24u].z) + _461) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4109 = isnan(0.0) ? _478 : (isnan(_478) ? 0.0 : max(_478, 0.0));
    float _479 = isnan(1.0) ? _4109 : (isnan(_4109) ? 1.0 : min(_4109, 1.0));
    float _486 = (_479 * ((_393.x * cbMtdParam._m0[12u].x) - _372)) + _372;
    float _487 = (_479 * ((_393.y * cbMtdParam._m0[12u].y) - _373)) + _373;
    float _488 = (_479 * ((_393.z * cbMtdParam._m0[12u].z) - _374)) + _374;
    vec4 _505 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _304) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _305) + cbTextureTilingScale._m0[3u].w));
    vec4 _525 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _527 = _525.x;
    float _537 = dot(vec4(_527, _525.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _551 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _412.y) * 2.0) - ((((_527 - _537) * cbMtdParam._m0[24u].z) + _537) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4120 = isnan(0.0) ? _551 : (isnan(_551) ? 0.0 : max(_551, 0.0));
    float _552 = isnan(1.0) ? _4120 : (isnan(_4120) ? 1.0 : min(_4120, 1.0));
    float _562 = (_341.x * cbMtdParam._m0[9u].x) * ((_552 * ((_505.x * cbMtdParam._m0[13u].x) - _486)) + _486);
    float _563 = (_341.y * cbMtdParam._m0[9u].y) * ((_552 * ((_505.y * cbMtdParam._m0[13u].y) - _487)) + _487);
    float _564 = (_341.z * cbMtdParam._m0[9u].z) * ((_552 * ((_505.z * cbMtdParam._m0[13u].z) - _488)) + _488);
    float _568 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _318.x) * _562;
    float _571 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _318.y) * _563;
    float _574 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _318.z) * _564;
    float _582 = (((_562 - _568) * (isnan(1.0) ? _4076 : (isnan(_4076) ? 1.0 : min(_4076, 1.0)))) + _568) * 4.55000019073486328125;
    float _584 = (((_563 - _571) * (isnan(1.0) ? _4087 : (isnan(_4087) ? 1.0 : min(_4087, 1.0)))) + _571) * 4.55000019073486328125;
    float _586 = (((_564 - _574) * (isnan(1.0) ? _4098 : (isnan(_4098) ? 1.0 : min(_4098, 1.0)))) + _574) * 4.55000019073486328125;
    vec4 _603 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _304) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _305) + cbTextureTilingScale._m0[20u].w));
    vec4 _628 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _304) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _305) + cbTextureTilingScale._m0[4u].w));
    vec4 _645 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _647 = _645.x;
    float _648 = _645.y;
    float _649 = _645.z;
    float _656 = ((_628.x - _647) * _479) + _647;
    float _657 = ((_628.y - _648) * _479) + _648;
    float _658 = ((_628.z - _649) * _479) + _649;
    vec4 _670 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _304) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _305) + cbTextureTilingScale._m0[2u].w));
    float _683 = ((_670.z - _658) * _552) + _658;
    float _686 = ((((_670.x - _656) * _552) + _656) * 2.0) + (-1.0);
    float _687 = ((((_670.y - _657) * _552) + _657) * 2.0) + (-1.0);
    float _688 = dot(vec2(_686, _687), vec2(_686, _687));
    float _4131 = isnan(0.0) ? _688 : (isnan(_688) ? 0.0 : max(_688, 0.0));
    float _693 = sqrt(1.0 - (isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0))));
    vec4 _711 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _723 = (_686 + ((((_603.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x)) + (((_711.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _724 = (_687 + ((((_603.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x)) + (((_711.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _727 = fma(_693, _254, fma(_724, _261, _723 * _247));
    float _730 = fma(_693, _255, fma(_724, _262, _723 * _248));
    float _733 = fma(_693, _256, fma(_724, _263, _723 * _249));
    float _737 = inversesqrt(dot(vec3(_727, _730, _733), vec3(_727, _730, _733)));
    vec4 _764 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _304) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _305) + cbTextureTilingScale._m0[11u].w));
    float _766 = _764.x;
    float _767 = 1.0 - _766;
    float _773 = (cbMtdParam._m0[19u].x + dot(vec4(_737 * _727, _737 * _730, _737 * _733, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_766 - _767) * cbMtdParam._m0[24u].w) + _767) * cbMtdParam._m0[21u].z);
    float _4142 = isnan(0.0) ? _773 : (isnan(_773) ? 0.0 : max(_773, 0.0));
    float _774 = isnan(1.0) ? _4142 : (isnan(_4142) ? 1.0 : min(_4142, 1.0));
    float _776 = (-0.0) - cbMtdParam._m0[24u].x;
    float _778 = isnan(0.0) ? _776 : (isnan(_776) ? 0.0 : max(_776, 0.0));
    float _779 = isnan(1.0) ? _778 : (isnan(_778) ? 1.0 : min(_778, 1.0));
    float _786 = _774 - ((_774 * TEXCOORD_8.x) * _779);
    float _787 = _774 - ((_774 * TEXCOORD_8.y) * _779);
    float _788 = _774 - ((_774 * TEXCOORD_8.z) * _779);
    float _795 = (_786 * (cbMtdParam._m0[17u].x - _582)) + _582;
    float _796 = (_787 * (cbMtdParam._m0[17u].y - _584)) + _584;
    float _797 = (_788 * (cbMtdParam._m0[17u].z - _586)) + _586;
    vec4 _809 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _304) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _305) + cbTextureTilingScale._m0[19u].w));
    float _811 = _809.x;
    float _812 = 1.0 - _811;
    float _838 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_811 - _812) * cbMtdParam._m0[24u].y) + _812) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4163 = isnan(0.0) ? _838 : (isnan(_838) ? 0.0 : max(_838, 0.0));
    float _839 = isnan(1.0) ? _4163 : (isnan(_4163) ? 1.0 : min(_4163, 1.0));
    float _847 = ((((cbMtdParam._m0[10u].x - _795) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _839) + _795;
    float _848 = ((((cbMtdParam._m0[10u].y - _796) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _839) + _796;
    float _849 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _797)) * _839) + _797;
    float _854 = (((_603.z - _683) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _683;
    float _858 = ((_711.z - _854) * cbMtdParam._m0[19u].w) + _854;
    vec4 _872 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _304) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _305) + cbTextureTilingScale._m0[15u].w));
    float _879 = (_872.x * 2.0) + (-1.0);
    float _880 = (_872.y * 2.0) + (-1.0);
    float _881 = dot(vec2(_879, _880), vec2(_879, _880));
    float _4174 = isnan(0.0) ? _881 : (isnan(_881) ? 0.0 : max(_881, 0.0));
    float _889 = ((_872.z - _858) * _786) + _858;
    float _892 = ((cbMtdParam._m0[23u].y - _889) * _839) + _889;
    vec4 _913 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _304) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _305) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _919 = (_913.x * 2.0) + (-1.0);
    float _920 = (_913.y * 2.0) + (-1.0);
    float _921 = dot(vec2(_919, _920), vec2(_919, _920));
    float _4185 = isnan(0.0) ? _921 : (isnan(_921) ? 0.0 : max(_921, 0.0));
    float _936 = ((sqrt(1.0 - (isnan(1.0) ? _4174 : (isnan(_4174) ? 1.0 : min(_4174, 1.0)))) - _693) * _788) + _693;
    float _939 = (((_879 - _723) * _786) + _723) + (cbMtdParam._m0[21u].x * _723);
    float _940 = (((_880 - _724) * _787) + _724) + (cbMtdParam._m0[21u].x * _724);
    float _951 = (((_919 - _939) + (_939 * cbMtdParam._m0[22u].z)) * _839) + _939;
    float _952 = (((_920 - _940) + (_940 * cbMtdParam._m0[22u].z)) * _839) + _940;
    float _953 = (_839 * (sqrt(1.0 - (isnan(1.0) ? _4185 : (isnan(_4185) ? 1.0 : min(_4185, 1.0)))) - _936)) + _936;
    float _955 = cbMtdParam._m0[22u].x + _711.w;
    float _958 = fma(_953, _254, fma(_952, _261, _951 * _247));
    float _961 = fma(_953, _255, fma(_952, _262, _951 * _248));
    float _964 = fma(_953, _256, fma(_952, _263, _951 * _249));
    float _968 = inversesqrt(dot(vec3(_958, _961, _964), vec3(_958, _961, _964)));
    float _969 = _968 * _958;
    float _970 = _968 * _961;
    float _971 = _968 * _964;
    float _4196 = isnan(0.0) ? _892 : (isnan(_892) ? 0.0 : max(_892, 0.0));
    float _972 = isnan(1.0) ? _4196 : (isnan(_4196) ? 1.0 : min(_4196, 1.0));
    float _4207 = isnan(0.0) ? _955 : (isnan(_955) ? 0.0 : max(_955, 0.0));
    float _4218 = isnan(0.0) ? _847 : (isnan(_847) ? 0.0 : max(_847, 0.0));
    float _4229 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
    float _4240 = isnan(0.0) ? _849 : (isnan(_849) ? 0.0 : max(_849, 0.0));
    float _990 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1030 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1040 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1030);
    float _1041 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1030);
    float _1042 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1030);
    float _1046 = inversesqrt(dot(vec3(_1040, _1041, _1042), vec3(_1040, _1041, _1042)));
    float _1047 = _1040 * _1046;
    float _1048 = _1041 * _1046;
    float _1049 = _1042 * _1046;
    float _1055 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1056 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1074 = fma(_971, cbSceneParam._m0[5u].z, fma(_970, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _969));
    float _1077 = fma(_971, cbSceneParam._m0[6u].z, fma(_970, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _969));
    float _1080 = fma(_971, cbSceneParam._m0[7u].z, fma(_970, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _969));
    uint _1094 = (_285 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1100 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4218 : (isnan(_4218) ? 1.0 : min(_4218, 1.0)))) * cbInstanceData._m0[_1094].x;
    float _1101 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4229 : (isnan(_4229) ? 1.0 : min(_4229, 1.0)))) * cbInstanceData._m0[_1094].y;
    float _1102 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4240 : (isnan(_4240) ? 1.0 : min(_4240, 1.0)))) * cbInstanceData._m0[_1094].z;
    float _4251 = isnan(0.0) ? _1100 : (isnan(_1100) ? 0.0 : max(_1100, 0.0));
    float _1103 = isnan(1.0) ? _4251 : (isnan(_4251) ? 1.0 : min(_4251, 1.0));
    float _4262 = isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0));
    float _1104 = isnan(1.0) ? _4262 : (isnan(_4262) ? 1.0 : min(_4262, 1.0));
    float _4273 = isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0));
    float _1105 = isnan(1.0) ? _4273 : (isnan(_4273) ? 1.0 : min(_4273, 1.0));
    vec4 _1114 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1055, cbSceneParam._m0[86u].y * _1056));
    float _1118 = ((isnan(1.0) ? _4207 : (isnan(_4207) ? 1.0 : min(_4207, 1.0))) * TEXCOORD_5.w) * _1114.x;
    float _1119 = dot(vec3(_969, _970, _971), vec3(_1047, _1048, _1049));
    float _1122 = _1119 * 2.0;
    float _1126 = (_1122 * _969) - _1047;
    float _1127 = (_1122 * _970) - _1048;
    float _1128 = (_1122 * _971) - _1049;
    float _1132 = abs(dot(vec3(_1047, _1048, _1049), vec3(_969, _970, _971)));
    float _4284 = isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0));
    float _1134 = sqrt(_972);
    float _1147 = exp2((_1134 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4284 : (isnan(_4284) ? 1.0 : min(_4284, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1134 * 3.0));
    float _1179 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1183 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1187 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1488;
    float _1490;
    float _1491;
    float _1492;
    float _1493;
    float _1494;
    float _1495;
    float _1496;
    float _1497;
    float _1498;
    float _1499;
    float _1500;
    float _1501;
    float _1502;
    float _1503;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1213 = fma(_1187, cbModelParam._m0[26u].z, fma(_1183, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1179));
        float _1217 = fma(_1187, cbModelParam._m0[27u].z, fma(_1183, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1179));
        float _1221 = fma(_1187, cbModelParam._m0[28u].z, fma(_1183, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1179));
        float _1246 = _1179 + _969;
        float _1247 = _1183 + _970;
        float _1248 = _1187 + _971;
        float _1258 = fma(_1248, cbModelParam._m0[26u].z, fma(_1247, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1246)) - _1213;
        float _1259 = fma(_1248, cbModelParam._m0[27u].z, fma(_1247, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1246)) - _1217;
        float _1260 = fma(_1248, cbModelParam._m0[28u].z, fma(_1247, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1246)) - _1221;
        float _1264 = inversesqrt(dot(vec3(_1258, _1259, _1260), vec3(_1258, _1259, _1260)));
        float _1277 = ((_1264 * _1258) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1213 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1278 = ((_1264 * _1259) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1217 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1279 = ((_1264 * _1260) / cbModelParam._m0[34u].z) + ((((((_1221 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1282 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1277, _1278, _1279), 0.0);
        vec4 _1289 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1277, _1278, _1279), 0.0);
        vec4 _1296 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1277, _1278, _1279), 0.0);
        vec4 _1303 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1277, _1278, _1279), 0.0);
        float _1316 = exp2((_1282.w + (-0.5)) * 20.0) * 2.0;
        float _1317 = _1316 * (_1282.x + (-0.5));
        float _1318 = _1316 * (_1282.y + (-0.5));
        float _1319 = _1316 * (_1282.z + (-0.5));
        float _1326 = exp2((_1289.w + (-0.5)) * 20.0) * 2.0;
        float _1327 = _1326 * (_1289.x + (-0.5));
        float _1328 = _1326 * (_1289.y + (-0.5));
        float _1329 = _1326 * (_1289.z + (-0.5));
        float _1336 = exp2((_1296.w + (-0.5)) * 20.0) * 2.0;
        float _1337 = _1336 * (_1296.x + (-0.5));
        float _1338 = _1336 * (_1296.y + (-0.5));
        float _1339 = _1336 * (_1296.z + (-0.5));
        float _1346 = exp2((_1303.w + (-0.5)) * 20.0) * 2.0;
        float _1347 = _1346 * (_1303.x + (-0.5));
        float _1348 = _1346 * (_1303.y + (-0.5));
        float _1349 = _1346 * (_1303.z + (-0.5));
        float _1350 = isnan(0.0) ? _1347 : (isnan(_1347) ? 0.0 : max(_1347, 0.0));
        float _1351 = isnan(0.0) ? _1348 : (isnan(_1348) ? 0.0 : max(_1348, 0.0));
        float _1352 = isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0));
        float _1353 = _1317 * 0.5;
        float _1354 = _1327 * 0.5;
        float _1355 = _1337 * 0.5;
        float _1356 = dot(vec3(_1353, _1354, _1355), vec3(_1353, _1354, _1355));
        float _1361 = (_1356 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1356);
        float _1370 = (dot(vec3(_969, _970, _971), vec3(_1361 * _1353, _1361 * _1354, _1361 * _1355)) + 1.0) * 0.5;
        float _4310 = isnan(0.0) ? _1370 : (isnan(_1370) ? 0.0 : max(_1370, 0.0));
        float _1380 = sqrt(((_1354 * _1354) + (_1353 * _1353)) + (_1355 * _1355)) / (_1350 + 9.9999997473787516355514526367188e-06);
        float _4321 = isnan(0.0) ? _1380 : (isnan(_1380) ? 0.0 : max(_1380, 0.0));
        float _1381 = isnan(1.0) ? _4321 : (isnan(_4321) ? 1.0 : min(_4321, 1.0));
        float _1382 = _1381 * 2.0;
        float _1386 = (1.0 - _1381) / (_1381 + 1.0);
        float _4332 = isnan(0.0) ? _1386 : (isnan(_1386) ? 0.0 : max(_1386, 0.0));
        float _1387 = isnan(1.0) ? _4332 : (isnan(_4332) ? 1.0 : min(_4332, 1.0));
        float _1396 = ((((1.0 - _1387) * (_1382 + 2.0)) * exp2(log2(isnan(1.0) ? _4310 : (isnan(_4310) ? 1.0 : min(_4310, 1.0))) * (_1382 + 1.0))) + _1387) * _1350;
        float _1397 = _1318 * 0.5;
        float _1398 = _1328 * 0.5;
        float _1399 = _1338 * 0.5;
        float _1400 = dot(vec3(_1397, _1398, _1399), vec3(_1397, _1398, _1399));
        float _1405 = (_1400 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1400);
        float _1413 = (dot(vec3(_969, _970, _971), vec3(_1405 * _1397, _1405 * _1398, _1405 * _1399)) + 1.0) * 0.5;
        float _4343 = isnan(0.0) ? _1413 : (isnan(_1413) ? 0.0 : max(_1413, 0.0));
        float _1422 = sqrt(((_1398 * _1398) + (_1397 * _1397)) + (_1399 * _1399)) / (_1351 + 9.9999997473787516355514526367188e-06);
        float _4354 = isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0));
        float _1423 = isnan(1.0) ? _4354 : (isnan(_4354) ? 1.0 : min(_4354, 1.0));
        float _1424 = _1423 * 2.0;
        float _1428 = (1.0 - _1423) / (_1423 + 1.0);
        float _4365 = isnan(0.0) ? _1428 : (isnan(_1428) ? 0.0 : max(_1428, 0.0));
        float _1429 = isnan(1.0) ? _4365 : (isnan(_4365) ? 1.0 : min(_4365, 1.0));
        float _1438 = ((((1.0 - _1429) * (_1424 + 2.0)) * exp2(log2(isnan(1.0) ? _4343 : (isnan(_4343) ? 1.0 : min(_4343, 1.0))) * (_1424 + 1.0))) + _1429) * _1351;
        float _1439 = _1319 * 0.5;
        float _1440 = _1329 * 0.5;
        float _1441 = _1339 * 0.5;
        float _1442 = dot(vec3(_1439, _1440, _1441), vec3(_1439, _1440, _1441));
        float _1447 = (_1442 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1442);
        float _1455 = (dot(vec3(_969, _970, _971), vec3(_1447 * _1439, _1447 * _1440, _1447 * _1441)) + 1.0) * 0.5;
        float _4376 = isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0));
        float _1464 = sqrt(((_1440 * _1440) + (_1439 * _1439)) + (_1441 * _1441)) / (_1352 + 9.9999997473787516355514526367188e-06);
        float _4387 = isnan(0.0) ? _1464 : (isnan(_1464) ? 0.0 : max(_1464, 0.0));
        float _1465 = isnan(1.0) ? _4387 : (isnan(_4387) ? 1.0 : min(_4387, 1.0));
        float _1466 = _1465 * 2.0;
        float _1470 = (1.0 - _1465) / (_1465 + 1.0);
        float _4398 = isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0));
        float _1471 = isnan(1.0) ? _4398 : (isnan(_4398) ? 1.0 : min(_4398, 1.0));
        float _1480 = ((((1.0 - _1471) * (_1466 + 2.0)) * exp2(log2(isnan(1.0) ? _4376 : (isnan(_4376) ? 1.0 : min(_4376, 1.0))) * (_1466 + 1.0))) + _1471) * _1352;
        _1488 = _1319;
        _1490 = _1318;
        _1491 = _1317;
        _1492 = _1329;
        _1493 = _1328;
        _1494 = _1327;
        _1495 = _1339;
        _1496 = _1338;
        _1497 = _1337;
        _1498 = _1352;
        _1499 = _1351;
        _1500 = _1350;
        _1501 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0)));
        _1502 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0)));
        _1503 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1480 : (isnan(_1480) ? 0.0 : max(_1480, 0.0)));
    }
    else
    {
        _1488 = _1489;
        _1490 = _1489;
        _1491 = _1489;
        _1492 = _1489;
        _1493 = _1489;
        _1494 = _1489;
        _1495 = _1489;
        _1496 = _1489;
        _1497 = _1489;
        _1498 = _1489;
        _1499 = _1489;
        _1500 = _1489;
        _1501 = 0.0;
        _1502 = 0.0;
        _1503 = 0.0;
    }
    float _1796;
    float _1797;
    float _1798;
    float _1799;
    float _1800;
    float _1801;
    float _1802;
    float _1803;
    float _1804;
    float _1805;
    float _1806;
    float _1807;
    float _1808;
    float _1809;
    float _1810;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1527 = fma(_1187, cbModelParam._m0[30u].z, fma(_1183, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1179));
        float _1531 = fma(_1187, cbModelParam._m0[31u].z, fma(_1183, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1179));
        float _1535 = fma(_1187, cbModelParam._m0[32u].z, fma(_1183, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1179));
        float _1558 = _1179 + _969;
        float _1559 = _1183 + _970;
        float _1560 = _1187 + _971;
        float _1570 = fma(_1560, cbModelParam._m0[30u].z, fma(_1559, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1558)) - _1527;
        float _1571 = fma(_1560, cbModelParam._m0[31u].z, fma(_1559, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1558)) - _1531;
        float _1572 = fma(_1560, cbModelParam._m0[32u].z, fma(_1559, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1558)) - _1535;
        float _1576 = inversesqrt(dot(vec3(_1570, _1571, _1572), vec3(_1570, _1571, _1572)));
        float _1589 = ((_1576 * _1570) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1527 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1590 = ((_1576 * _1571) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1531 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1591 = ((_1576 * _1572) / cbModelParam._m0[35u].z) + ((((((_1535 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1593 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1589, _1590, _1591), 0.0);
        vec4 _1600 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1589, _1590, _1591), 0.0);
        vec4 _1607 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1589, _1590, _1591), 0.0);
        vec4 _1614 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1589, _1590, _1591), 0.0);
        float _1626 = exp2((_1593.w + (-0.5)) * 20.0) * 2.0;
        float _1627 = _1626 * (_1593.x + (-0.5));
        float _1628 = _1626 * (_1593.y + (-0.5));
        float _1629 = _1626 * (_1593.z + (-0.5));
        float _1636 = exp2((_1600.w + (-0.5)) * 20.0) * 2.0;
        float _1637 = _1636 * (_1600.x + (-0.5));
        float _1638 = _1636 * (_1600.y + (-0.5));
        float _1639 = _1636 * (_1600.z + (-0.5));
        float _1646 = exp2((_1607.w + (-0.5)) * 20.0) * 2.0;
        float _1647 = _1646 * (_1607.x + (-0.5));
        float _1648 = _1646 * (_1607.y + (-0.5));
        float _1649 = _1646 * (_1607.z + (-0.5));
        float _1656 = exp2((_1614.w + (-0.5)) * 20.0) * 2.0;
        float _1657 = _1656 * (_1614.x + (-0.5));
        float _1658 = _1656 * (_1614.y + (-0.5));
        float _1659 = _1656 * (_1614.z + (-0.5));
        float _1660 = isnan(0.0) ? _1657 : (isnan(_1657) ? 0.0 : max(_1657, 0.0));
        float _1661 = isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0));
        float _1662 = isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0));
        float _1663 = _1627 * 0.5;
        float _1664 = _1637 * 0.5;
        float _1665 = _1647 * 0.5;
        float _1666 = dot(vec3(_1663, _1664, _1665), vec3(_1663, _1664, _1665));
        float _1671 = (_1666 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1666);
        float _1679 = (dot(vec3(_969, _970, _971), vec3(_1671 * _1663, _1671 * _1664, _1671 * _1665)) + 1.0) * 0.5;
        float _4439 = isnan(0.0) ? _1679 : (isnan(_1679) ? 0.0 : max(_1679, 0.0));
        float _1688 = sqrt(((_1664 * _1664) + (_1663 * _1663)) + (_1665 * _1665)) / (_1660 + 9.9999997473787516355514526367188e-06);
        float _4450 = isnan(0.0) ? _1688 : (isnan(_1688) ? 0.0 : max(_1688, 0.0));
        float _1689 = isnan(1.0) ? _4450 : (isnan(_4450) ? 1.0 : min(_4450, 1.0));
        float _1690 = _1689 * 2.0;
        float _1694 = (1.0 - _1689) / (_1689 + 1.0);
        float _4461 = isnan(0.0) ? _1694 : (isnan(_1694) ? 0.0 : max(_1694, 0.0));
        float _1695 = isnan(1.0) ? _4461 : (isnan(_4461) ? 1.0 : min(_4461, 1.0));
        float _1704 = ((((1.0 - _1695) * (_1690 + 2.0)) * exp2(log2(isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0))) * (_1690 + 1.0))) + _1695) * _1660;
        float _1705 = _1628 * 0.5;
        float _1706 = _1638 * 0.5;
        float _1707 = _1648 * 0.5;
        float _1708 = dot(vec3(_1705, _1706, _1707), vec3(_1705, _1706, _1707));
        float _1713 = (_1708 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1708);
        float _1721 = (dot(vec3(_969, _970, _971), vec3(_1713 * _1705, _1713 * _1706, _1713 * _1707)) + 1.0) * 0.5;
        float _4472 = isnan(0.0) ? _1721 : (isnan(_1721) ? 0.0 : max(_1721, 0.0));
        float _1730 = sqrt(((_1706 * _1706) + (_1705 * _1705)) + (_1707 * _1707)) / (_1661 + 9.9999997473787516355514526367188e-06);
        float _4483 = isnan(0.0) ? _1730 : (isnan(_1730) ? 0.0 : max(_1730, 0.0));
        float _1731 = isnan(1.0) ? _4483 : (isnan(_4483) ? 1.0 : min(_4483, 1.0));
        float _1732 = _1731 * 2.0;
        float _1736 = (1.0 - _1731) / (_1731 + 1.0);
        float _4494 = isnan(0.0) ? _1736 : (isnan(_1736) ? 0.0 : max(_1736, 0.0));
        float _1737 = isnan(1.0) ? _4494 : (isnan(_4494) ? 1.0 : min(_4494, 1.0));
        float _1746 = ((((1.0 - _1737) * (_1732 + 2.0)) * exp2(log2(isnan(1.0) ? _4472 : (isnan(_4472) ? 1.0 : min(_4472, 1.0))) * (_1732 + 1.0))) + _1737) * _1661;
        float _1747 = _1629 * 0.5;
        float _1748 = _1639 * 0.5;
        float _1749 = _1649 * 0.5;
        float _1750 = dot(vec3(_1747, _1748, _1749), vec3(_1747, _1748, _1749));
        float _1755 = (_1750 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1750);
        float _1763 = (dot(vec3(_969, _970, _971), vec3(_1755 * _1747, _1755 * _1748, _1755 * _1749)) + 1.0) * 0.5;
        float _4505 = isnan(0.0) ? _1763 : (isnan(_1763) ? 0.0 : max(_1763, 0.0));
        float _1772 = sqrt(((_1748 * _1748) + (_1747 * _1747)) + (_1749 * _1749)) / (_1662 + 9.9999997473787516355514526367188e-06);
        float _4516 = isnan(0.0) ? _1772 : (isnan(_1772) ? 0.0 : max(_1772, 0.0));
        float _1773 = isnan(1.0) ? _4516 : (isnan(_4516) ? 1.0 : min(_4516, 1.0));
        float _1774 = _1773 * 2.0;
        float _1778 = (1.0 - _1773) / (_1773 + 1.0);
        float _4527 = isnan(0.0) ? _1778 : (isnan(_1778) ? 0.0 : max(_1778, 0.0));
        float _1779 = isnan(1.0) ? _4527 : (isnan(_4527) ? 1.0 : min(_4527, 1.0));
        float _1788 = ((((1.0 - _1779) * (_1774 + 2.0)) * exp2(log2(isnan(1.0) ? _4505 : (isnan(_4505) ? 1.0 : min(_4505, 1.0))) * (_1774 + 1.0))) + _1779) * _1662;
        _1796 = _1629;
        _1797 = _1628;
        _1798 = _1627;
        _1799 = _1639;
        _1800 = _1638;
        _1801 = _1637;
        _1802 = _1649;
        _1803 = _1648;
        _1804 = _1647;
        _1805 = _1662;
        _1806 = _1661;
        _1807 = _1660;
        _1808 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1704 : (isnan(_1704) ? 0.0 : max(_1704, 0.0)));
        _1809 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1746 : (isnan(_1746) ? 0.0 : max(_1746, 0.0)));
        _1810 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1788 : (isnan(_1788) ? 0.0 : max(_1788, 0.0)));
    }
    else
    {
        _1796 = _1489;
        _1797 = _1489;
        _1798 = _1489;
        _1799 = _1489;
        _1800 = _1489;
        _1801 = _1489;
        _1802 = _1489;
        _1803 = _1489;
        _1804 = _1489;
        _1805 = _1489;
        _1806 = _1489;
        _1807 = _1489;
        _1808 = 0.0;
        _1809 = 0.0;
        _1810 = 0.0;
    }
    float _1820 = (cbModelParam._m0[1u].x * (_1808 - _1501)) + _1501;
    float _1821 = (cbModelParam._m0[1u].x * (_1809 - _1502)) + _1502;
    float _1822 = (cbModelParam._m0[1u].x * (_1810 - _1503)) + _1503;
    float _1843 = fma(_1822, cbSceneParam._m0[89u].z, fma(_1821, cbSceneParam._m0[89u].y, _1820 * cbSceneParam._m0[89u].x));
    float _1846 = fma(_1822, cbSceneParam._m0[90u].z, fma(_1821, cbSceneParam._m0[90u].y, _1820 * cbSceneParam._m0[90u].x));
    float _1849 = fma(_1822, cbSceneParam._m0[91u].z, fma(_1821, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1820));
    float _1864 = _1126 * 0.5;
    float _1865 = _1127 * 0.5;
    float _1866 = _1128 * 0.5;
    float _1867 = dot(vec4(_1864, _1865, _1866, 1.0), vec4(_1798, _1801, _1804, _1807));
    float _1870 = dot(vec4(_1864, _1865, _1866, 1.0), vec4(_1797, _1800, _1803, _1806));
    float _1873 = dot(vec4(_1864, _1865, _1866, 1.0), vec4(_1796, _1799, _1802, _1805));
    float _1907;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1880 = dot(vec4(_1864, _1865, _1866, 1.0), vec4(_1488, _1492, _1495, _1498));
        float _1884 = dot(vec4(_1864, _1865, _1866, 1.0), vec4(_1490, _1493, _1496, _1499));
        float _1888 = dot(vec4(_1864, _1865, _1866, 1.0), vec4(_1491, _1494, _1497, _1500));
        float _1895 = dot(vec4(cbModelParam._m0[39u]), vec4(_1864, _1865, _1866, 1.0));
        _1907 = dot(vec3(isnan(0.0) ? _1888 : (isnan(_1888) ? 0.0 : max(_1888, 0.0)), isnan(0.0) ? _1884 : (isnan(_1884) ? 0.0 : max(_1884, 0.0)), isnan(0.0) ? _1880 : (isnan(_1880) ? 0.0 : max(_1880, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1895) ? 0.0 : (isnan(0.0) ? _1895 : max(0.0, _1895))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1907 = 1.0;
    }
    float _1918;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1909 = dot(vec4(cbModelParam._m0[40u]), vec4(_1864, _1865, _1866, 1.0));
        _1918 = dot(vec3(isnan(0.0) ? _1867 : (isnan(_1867) ? 0.0 : max(_1867, 0.0)), isnan(0.0) ? _1870 : (isnan(_1870) ? 0.0 : max(_1870, 0.0)), isnan(0.0) ? _1873 : (isnan(_1873) ? 0.0 : max(_1873, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1909) ? 0.0 : (isnan(0.0) ? _1909 : max(0.0, _1909))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1918 = 1.0;
    }
    float _1922 = (_1918 * cbModelParam._m0[1u].x) + (_1907 * (1.0 - cbModelParam._m0[1u].x));
    float _1932 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _972);
    float _1933 = isnan(_1932) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1932 : min(cbModelParam._m0[25u].z, _1932));
    float _2014;
    float _2016;
    float _2018;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1981 = fma(_1187, cbModelParam._m0[13u].z, fma(_1183, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1179)) + cbModelParam._m0[13u].w;
        float _1985 = fma(_1187, cbModelParam._m0[14u].z, fma(_1183, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1179)) + cbModelParam._m0[14u].w;
        float _1989 = fma(_1187, cbModelParam._m0[15u].z, fma(_1183, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1179)) + cbModelParam._m0[15u].w;
        float _1992 = fma(_1128, cbModelParam._m0[13u].z, fma(_1127, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1126));
        float _1995 = fma(_1128, cbModelParam._m0[14u].z, fma(_1127, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1126));
        float _1998 = fma(_1128, cbModelParam._m0[15u].z, fma(_1127, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1126));
        float _2026;
        if (_1992 > 0.0)
        {
            _2026 = abs((1.0 - _1981) / _1992);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1992 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1981 + 1.0) / _1992);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2026 = frontier_phi_14_12_ladder;
        }
        float _2196;
        if (_1995 > 0.0)
        {
            _2196 = abs((1.0 - _1985) / _1995);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1995 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1985 + 1.0) / _1995);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2196 = frontier_phi_23_19_ladder;
        }
        float _2491;
        if (_1998 > 0.0)
        {
            _2491 = abs((1.0 - _1989) / _1998);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1998 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1989 + 1.0) / _1998);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2491 = frontier_phi_35_30_ladder;
        }
        float _2493 = isnan(_2196) ? _2026 : (isnan(_2026) ? _2196 : min(_2026, _2196));
        float _2494 = isnan(_2491) ? _2493 : (isnan(_2493) ? _2491 : min(_2493, _2491));
        float _2498 = (_2494 * _1992) + _1981;
        float _2499 = (_2494 * _1995) + _1985;
        float _2500 = (_2494 * _1998) + _1989;
        float _2501 = _2494 * 9.9999997473787516355514526367188e-05;
        float _2503 = (-1.0) - _2501;
        float _2505 = _2501 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2500 > _2505) || ((_2500 < _2503) || ((_2499 > _2505) || ((_2499 < _2503) || ((_2498 < _2503) || (_2498 > _2505))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2645 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2500, cbModelParam._m0[9u].z, fma(_2499, cbModelParam._m0[9u].y, _2498 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2500, cbModelParam._m0[10u].z, fma(_2499, cbModelParam._m0[10u].y, _2498 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2500, cbModelParam._m0[11u].z, fma(_2499, cbModelParam._m0[11u].y, _2498 * cbModelParam._m0[11u].x))), _1933);
            frontier_phi_13_35_ladder = _2645.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2645.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2645.x * cbModelParam._m0[1u].y;
        }
        _2014 = frontier_phi_13_35_ladder_2;
        _2016 = frontier_phi_13_35_ladder_1;
        _2018 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2002 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1126, _1127, _1128), _1933);
        _2014 = _2002.x * cbModelParam._m0[1u].y;
        _2016 = _2002.y * cbModelParam._m0[1u].y;
        _2018 = _2002.z * cbModelParam._m0[1u].y;
    }
    float _2022 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _972);
    float _2023 = isnan(_2022) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2022 : min(cbModelParam._m0[25u].w, _2022));
    float _2113;
    float _2115;
    float _2117;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2077 = fma(_1187, cbModelParam._m0[21u].z, fma(_1183, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1179)) + cbModelParam._m0[21u].w;
        float _2081 = fma(_1187, cbModelParam._m0[22u].z, fma(_1183, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1179)) + cbModelParam._m0[22u].w;
        float _2085 = fma(_1187, cbModelParam._m0[23u].z, fma(_1183, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1179)) + cbModelParam._m0[23u].w;
        float _2088 = fma(_1128, cbModelParam._m0[21u].z, fma(_1127, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1126));
        float _2091 = fma(_1128, cbModelParam._m0[22u].z, fma(_1127, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1126));
        float _2094 = fma(_1128, cbModelParam._m0[23u].z, fma(_1127, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1126));
        float _2201;
        if (_2088 > 0.0)
        {
            _2201 = abs((1.0 - _2077) / _2088);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2088 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2077 + 1.0) / _2088);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2201 = frontier_phi_25_21_ladder;
        }
        float _2518;
        if (_2091 > 0.0)
        {
            _2518 = abs((1.0 - _2081) / _2091);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2091 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2081 + 1.0) / _2091);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2518 = frontier_phi_37_32_ladder;
        }
        float _2845;
        if (_2094 > 0.0)
        {
            _2845 = abs((1.0 - _2085) / _2094);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2094 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2085 + 1.0) / _2094);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2845 = frontier_phi_47_44_ladder;
        }
        float _2847 = isnan(_2518) ? _2201 : (isnan(_2201) ? _2518 : min(_2201, _2518));
        float _2848 = isnan(_2845) ? _2847 : (isnan(_2847) ? _2845 : min(_2847, _2845));
        float _2852 = (_2848 * _2088) + _2077;
        float _2853 = (_2848 * _2091) + _2081;
        float _2854 = (_2848 * _2094) + _2085;
        float _2855 = _2848 * 9.9999997473787516355514526367188e-05;
        float _2856 = (-1.0) - _2855;
        float _2858 = _2855 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2854 > _2858) || ((_2854 < _2856) || ((_2853 > _2858) || ((_2853 < _2856) || ((_2852 < _2856) || (_2852 > _2858))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2972 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2854, cbModelParam._m0[17u].z, fma(_2853, cbModelParam._m0[17u].y, _2852 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2854, cbModelParam._m0[18u].z, fma(_2853, cbModelParam._m0[18u].y, _2852 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2854, cbModelParam._m0[19u].z, fma(_2853, cbModelParam._m0[19u].y, _2852 * cbModelParam._m0[19u].x))), _2023);
            frontier_phi_22_47_ladder = _2972.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2972.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2972.x * cbModelParam._m0[1u].z;
        }
        _2113 = frontier_phi_22_47_ladder_2;
        _2115 = frontier_phi_22_47_ladder_1;
        _2117 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2097 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1126, _1127, _1128), _2023);
        _2113 = _2097.x * cbModelParam._m0[1u].z;
        _2115 = _2097.y * cbModelParam._m0[1u].z;
        _2117 = _2097.z * cbModelParam._m0[1u].z;
    }
    float _2129 = ((((1.0 - _1147) * ((_1134 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1147 * _1134)) * _1118;
    float _2130 = _2129 * ((cbModelParam._m0[1u].w * (_2113 - _2014)) + _2014);
    float _2131 = _2129 * ((cbModelParam._m0[1u].w * (_2115 - _2016)) + _2016);
    float _2132 = _2129 * ((cbModelParam._m0[1u].w * (_2117 - _2018)) + _2018);
    float _2135 = fma(_2132, cbSceneParam._m0[89u].z, fma(_2131, cbSceneParam._m0[89u].y, _2130 * cbSceneParam._m0[89u].x));
    float _2138 = fma(_2132, cbSceneParam._m0[90u].z, fma(_2131, cbSceneParam._m0[90u].y, _2130 * cbSceneParam._m0[90u].x));
    float _2141 = fma(_2132, cbSceneParam._m0[91u].z, fma(_2131, cbSceneParam._m0[91u].y, _2130 * cbSceneParam._m0[91u].x));
    float _2175 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2179 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2183 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2187 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2188 = _2175 / _2187;
    float _2189 = _2179 / _2187;
    float _2190 = _2183 / _2187;
    float _2337;
    float _2338;
    float _2339;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2217 = ((uint(_2190 > cbSceneParam._m0[59u].y) + uint(_2190 > cbSceneParam._m0[59u].x)) + uint(_2190 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2218 = _2217 + 43u;
        uint _2226 = _2217 + 44u;
        uint _2234 = _2217 + 45u;
        uint _2242 = _2217 + 46u;
        float _2253 = fma(_2187, cbSceneParam._m0[_2218].w, fma(_2183, cbSceneParam._m0[_2218].z, fma(_2179, cbSceneParam._m0[_2218].y, _2175 * cbSceneParam._m0[_2218].x)));
        float _2257 = fma(_2187, cbSceneParam._m0[_2226].w, fma(_2183, cbSceneParam._m0[_2226].z, fma(_2179, cbSceneParam._m0[_2226].y, _2175 * cbSceneParam._m0[_2226].x)));
        float _2265 = fma(_2187, cbSceneParam._m0[_2242].w, fma(_2183, cbSceneParam._m0[_2242].z, fma(_2179, cbSceneParam._m0[_2242].y, _2175 * cbSceneParam._m0[_2242].x)));
        float _2270 = cbSceneParam._m0[33u].z * _2265;
        float _2272 = cbSceneParam._m0[33u].w * _2265;
        float _2275 = fma(_2187, cbSceneParam._m0[_2234].w, fma(_2183, cbSceneParam._m0[_2234].z, fma(_2179, cbSceneParam._m0[_2234].y, _2175 * cbSceneParam._m0[_2234].x))) / _2265;
        float _2323 = (cbSceneParam._m0[33u].x - sqrt(((_2189 * _2189) + (_2188 * _2188)) + (_2190 * _2190))) * cbSceneParam._m0[33u].y;
        float _4653 = isnan(0.0) ? _2323 : (isnan(_2323) ? 0.0 : max(_2323, 0.0));
        float _2330 = (isnan(1.0) ? _4653 : (isnan(_4653) ? 1.0 : min(_4653, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2270 + _2253) / _2265, (_2272 + _2257) / _2265), _2275), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2272 + _2253) / _2265, (_2257 - _2270) / _2265), _2275), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2253 - _2270) / _2265, (_2257 - _2272) / _2265), _2275), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2253 - _2272) / _2265, (_2270 + _2257) / _2265), _2275), 0.0)).x), vec4(0.25)));
        _2337 = 1.0 - (_2330 * cbSceneParam._m0[34u].x);
        _2338 = 1.0 - (_2330 * cbSceneParam._m0[34u].y);
        _2339 = 1.0 - (_2330 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2337 = 1.0;
        _2338 = 1.0;
        _2339 = 1.0;
    }
    float _2403;
    float _2405;
    float _2407;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2391 = fma(_2187, cbSceneParam._m0[63u].w, fma(_2183, cbSceneParam._m0[63u].z, fma(_2179, cbSceneParam._m0[63u].y, _2175 * cbSceneParam._m0[63u].x)));
        float _2392 = fma(_2187, cbSceneParam._m0[60u].w, fma(_2183, cbSceneParam._m0[60u].z, fma(_2179, cbSceneParam._m0[60u].y, _2175 * cbSceneParam._m0[60u].x))) / _2391;
        float _2393 = fma(_2187, cbSceneParam._m0[61u].w, fma(_2183, cbSceneParam._m0[61u].z, fma(_2179, cbSceneParam._m0[61u].y, _2175 * cbSceneParam._m0[61u].x))) / _2391;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2392 >= cbSceneParam._m0[64u].x) && (_2393 >= cbSceneParam._m0[64u].y)) && (_2392 <= cbSceneParam._m0[64u].z)) && (_2393 <= cbSceneParam._m0[64u].w))
        {
            float _2531 = fma(_2187, cbSceneParam._m0[62u].w, fma(_2183, cbSceneParam._m0[62u].z, fma(_2179, cbSceneParam._m0[62u].y, _2175 * cbSceneParam._m0[62u].x))) / _2391;
            float _2535 = isnan(cbSceneParam._m0[41u].w) ? _2531 : (isnan(_2531) ? cbSceneParam._m0[41u].w : max(_2531, cbSceneParam._m0[41u].w));
            float _2578 = (cbSceneParam._m0[33u].x - sqrt(((_2189 * _2189) + (_2188 * _2188)) + (_2190 * _2190))) * cbSceneParam._m0[33u].y;
            float _4669 = isnan(0.0) ? _2578 : (isnan(_2578) ? 0.0 : max(_2578, 0.0));
            float _2585 = (isnan(1.0) ? _4669 : (isnan(_4669) ? 1.0 : min(_4669, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2392, cbSceneParam._m0[33u].w + _2393), _2535), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2392, _2393 - cbSceneParam._m0[33u].z), _2535), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2392 - cbSceneParam._m0[33u].z, _2393 - cbSceneParam._m0[33u].w), _2535), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2392 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2393), _2535), 0.0)).x), vec4(0.25)));
            float _2589 = 1.0 - (_2585 * cbSceneParam._m0[34u].x);
            float _2590 = 1.0 - (_2585 * cbSceneParam._m0[34u].y);
            float _2591 = 1.0 - (_2585 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2591) ? _2339 : (isnan(_2339) ? _2591 : min(_2339, _2591));
            frontier_phi_34_33_ladder_1 = isnan(_2590) ? _2338 : (isnan(_2338) ? _2590 : min(_2338, _2590));
            frontier_phi_34_33_ladder_2 = isnan(_2589) ? _2337 : (isnan(_2337) ? _2589 : min(_2337, _2589));
        }
        else
        {
            frontier_phi_34_33_ladder = _2339;
            frontier_phi_34_33_ladder_1 = _2338;
            frontier_phi_34_33_ladder_2 = _2337;
        }
        _2403 = frontier_phi_34_33_ladder_2;
        _2405 = frontier_phi_34_33_ladder_1;
        _2407 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2403 = _2337;
        _2405 = _2338;
        _2407 = _2339;
    }
    uvec4 _2412 = floatBitsToUint(cbInstanceData._m0[_285 + 5u]);
    uint _2414 = _2412.x * 14u;
    uint _2415 = _2414 + 13u;
    float _2422 = _1118 + (-1.0);
    float _2427 = (cbLight._m0[_2415].x * _2422) + 1.0;
    float _2428 = (cbLight._m0[_2415].y * _2422) + 1.0;
    float _2429 = (cbLight._m0[_2415].z * _2422) + 1.0;
    float _2430 = (cbLight._m0[_2415].w * _2422) + 1.0;
    uint _2431 = _2414 + 5u;
    float _2437 = isnan(1.0) ? _2428 : (isnan(_2428) ? 1.0 : min(_2428, 1.0));
    uint _2441 = _2414 + 4u;
    float _2450 = isnan(1.0) ? _2427 : (isnan(_2427) ? 1.0 : min(_2427, 1.0));
    uint _2454 = _2414 | 1u;
    float _2465 = dot(vec3(cbLight._m0[_2414].xyz), vec3(_969, _970, _971));
    float _2468 = dot(vec3(cbLight._m0[_2454].xyz), vec3(_969, _970, _971));
    float _4705 = isnan(0.0) ? _2465 : (isnan(_2465) ? 0.0 : max(_2465, 0.0));
    float _4716 = isnan(0.0) ? _2468 : (isnan(_2468) ? 0.0 : max(_2468, 0.0));
    float _2473 = (isnan(1.0) ? _4705 : (isnan(_4705) ? 1.0 : min(_4705, 1.0))) * 0.3183098733425140380859375;
    float _2475 = (isnan(1.0) ? _4716 : (isnan(_4716) ? 1.0 : min(_4716, 1.0))) * 0.3183098733425140380859375;
    float _2482 = ((cbLight._m0[_2431].x * _2437) * _2475) + (((cbLight._m0[_2441].x * _2403) * _2450) * _2473);
    float _2483 = ((_2437 * cbLight._m0[_2431].y) * _2475) + (((cbLight._m0[_2441].y * _2405) * _2450) * _2473);
    float _2484 = ((_2437 * cbLight._m0[_2431].z) * _2475) + (((cbLight._m0[_2441].z * _2407) * _2450) * _2473);
    uvec4 _2488 = floatBitsToUint(cbLight._m0[_2414 + 12u]);
    bool _2490 = _2488.x == 0u;
    float _2592;
    float _2594;
    float _2596;
    if (_2490)
    {
        _2592 = _2482;
        _2594 = _2483;
        _2596 = _2484;
    }
    else
    {
        uint _2600 = _2414 + 6u;
        float _2616 = (dot(vec3(cbLight._m0[_2414 + 2u].xyz), vec3(_969, _970, _971)) * 0.5) + 0.5;
        float _2617 = _2616 * _2616;
        float _4727 = isnan(0.0) ? _2617 : (isnan(_2617) ? 0.0 : max(_2617, 0.0));
        float _2618 = isnan(1.0) ? _4727 : (isnan(_4727) ? 1.0 : min(_4727, 1.0));
        float _2619 = isnan(1.0) ? _2429 : (isnan(_2429) ? 1.0 : min(_2429, 1.0));
        _2592 = (((cbLight._m0[_2600].x * 0.3183098733425140380859375) * _2618) * _2619) + _2482;
        _2594 = (((cbLight._m0[_2600].y * 0.3183098733425140380859375) * _2618) * _2619) + _2483;
        _2596 = (((cbLight._m0[_2600].z * 0.3183098733425140380859375) * _2618) * _2619) + _2484;
    }
    bool _2599 = _2488.y == 0u;
    float _2654;
    float _2656;
    float _2658;
    if (_2599)
    {
        _2654 = _2592;
        _2656 = _2594;
        _2658 = _2596;
    }
    else
    {
        uint _2816 = _2414 + 7u;
        float _2832 = (dot(vec3(cbLight._m0[_2414 + 3u].xyz), vec3(_969, _970, _971)) * 0.5) + 0.5;
        float _2833 = _2832 * _2832;
        float _4743 = isnan(0.0) ? _2833 : (isnan(_2833) ? 0.0 : max(_2833, 0.0));
        float _2834 = isnan(1.0) ? _4743 : (isnan(_4743) ? 1.0 : min(_4743, 1.0));
        float _2835 = isnan(1.0) ? _2430 : (isnan(_2430) ? 1.0 : min(_2430, 1.0));
        _2654 = (((cbLight._m0[_2816].x * 0.3183098733425140380859375) * _2834) * _2835) + _2592;
        _2656 = (((cbLight._m0[_2816].y * 0.3183098733425140380859375) * _2834) * _2835) + _2594;
        _2658 = (((cbLight._m0[_2816].z * 0.3183098733425140380859375) * _2834) * _2835) + _2596;
    }
    uint _2661 = _2414 + 8u;
    float _2674 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2414].w)) * _972) * 0.949999988079071044921875);
    float _2675 = _2674 * _2674;
    float _2676 = cbLight._m0[_2414].x + _1047;
    float _2677 = cbLight._m0[_2414].y + _1048;
    float _2678 = cbLight._m0[_2414].z + _1049;
    float _2682 = inversesqrt(dot(vec3(_2676, _2677, _2678), vec3(_2676, _2677, _2678)));
    float _2683 = _2682 * _2676;
    float _2684 = _2682 * _2677;
    float _2685 = _2682 * _2678;
    float _2686 = dot(vec3(_969, _970, _971), vec3(cbLight._m0[_2414].xyz));
    float _4759 = isnan(0.0) ? _2686 : (isnan(_2686) ? 0.0 : max(_2686, 0.0));
    float _2689 = isnan(1.0) ? _4759 : (isnan(_4759) ? 1.0 : min(_4759, 1.0));
    float _4770 = isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0));
    float _2690 = isnan(1.0) ? _4770 : (isnan(_4770) ? 1.0 : min(_4770, 1.0));
    float _2691 = dot(vec3(_969, _970, _971), vec3(_2683, _2684, _2685));
    float _4781 = isnan(0.0) ? _2691 : (isnan(_2691) ? 0.0 : max(_2691, 0.0));
    float _2694 = isnan(1.0) ? _4781 : (isnan(_4781) ? 1.0 : min(_4781, 1.0));
    float _2695 = dot(vec3(cbLight._m0[_2414].xyz), vec3(_2683, _2684, _2685));
    float _4792 = isnan(0.0) ? _2695 : (isnan(_2695) ? 0.0 : max(_2695, 0.0));
    float _2699 = _2675 * _2675;
    float _2703 = ((_2694 * _2694) * (_2699 + (-1.0))) + 1.0;
    float _2714 = (exp2(log2(1.0 - (isnan(1.0) ? _4792 : (isnan(_4792) ? 1.0 : min(_4792, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2715 = 1.0 - _2675;
    float _2726 = (0.5 / (((_2690 * ((_2689 * _2715) + _2675)) + 9.9999999392252902907785028219223e-09) + (((_2690 * _2715) + _2675) * _2689))) * _2689;
    float _4803 = isnan(0.0) ? _2726 : (isnan(_2726) ? 0.0 : max(_2726, 0.0));
    float _2728 = (isnan(1.0) ? _4803 : (isnan(_4803) ? 1.0 : min(_4803, 1.0))) * (_2699 / ((_2703 * _2703) * 3.141590118408203125));
    uint _2742 = _2414 + 9u;
    float _2753 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2454].w)) * _972) * 0.949999988079071044921875);
    float _2754 = _2753 * _2753;
    float _2755 = cbLight._m0[_2454].x + _1047;
    float _2756 = cbLight._m0[_2454].y + _1048;
    float _2757 = cbLight._m0[_2454].z + _1049;
    float _2761 = inversesqrt(dot(vec3(_2755, _2756, _2757), vec3(_2755, _2756, _2757)));
    float _2762 = _2761 * _2755;
    float _2763 = _2761 * _2756;
    float _2764 = _2761 * _2757;
    float _2765 = dot(vec3(_969, _970, _971), vec3(cbLight._m0[_2454].xyz));
    float _4814 = isnan(0.0) ? _2765 : (isnan(_2765) ? 0.0 : max(_2765, 0.0));
    float _2768 = isnan(1.0) ? _4814 : (isnan(_4814) ? 1.0 : min(_4814, 1.0));
    float _2769 = dot(vec3(_969, _970, _971), vec3(_2762, _2763, _2764));
    float _4825 = isnan(0.0) ? _2769 : (isnan(_2769) ? 0.0 : max(_2769, 0.0));
    float _2772 = isnan(1.0) ? _4825 : (isnan(_4825) ? 1.0 : min(_4825, 1.0));
    float _2773 = dot(vec3(cbLight._m0[_2454].xyz), vec3(_2762, _2763, _2764));
    float _4836 = isnan(0.0) ? _2773 : (isnan(_2773) ? 0.0 : max(_2773, 0.0));
    float _2777 = _2754 * _2754;
    float _2781 = ((_2772 * _2772) * (_2777 + (-1.0))) + 1.0;
    float _2790 = (exp2(log2(1.0 - (isnan(1.0) ? _4836 : (isnan(_4836) ? 1.0 : min(_4836, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2791 = 1.0 - _2754;
    float _2801 = (0.5 / (((_2690 * ((_2768 * _2791) + _2754)) + 9.9999999392252902907785028219223e-09) + (((_2690 * _2791) + _2754) * _2768))) * _2768;
    float _4847 = isnan(0.0) ? _2801 : (isnan(_2801) ? 0.0 : max(_2801, 0.0));
    float _2803 = (isnan(1.0) ? _4847 : (isnan(_4847) ? 1.0 : min(_4847, 1.0))) * (_2777 / ((_2781 * _2781) * 3.141590118408203125));
    float _2813 = (((_2790 * cbLight._m0[_2742].x) * _2803) * _2437) + ((((cbLight._m0[_2661].x * _2403) * _2714) * _2728) * _2450);
    float _2814 = (((_2790 * cbLight._m0[_2742].y) * _2803) * _2437) + ((((cbLight._m0[_2661].y * _2405) * _2714) * _2728) * _2450);
    float _2815 = (((_2790 * cbLight._m0[_2742].z) * _2803) * _2437) + ((((cbLight._m0[_2661].z * _2407) * _2714) * _2728) * _2450);
    float _2871;
    float _2873;
    float _2875;
    if (_2490)
    {
        _2871 = _2813;
        _2873 = _2814;
        _2875 = _2815;
    }
    else
    {
        uint _2877 = _2414 + 2u;
        uint _2881 = _2414 + 10u;
        float _2895 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2877].w)) * _972) * 0.949999988079071044921875);
        float _2896 = _2895 * _2895;
        float _2897 = cbLight._m0[_2877].x + _1047;
        float _2898 = cbLight._m0[_2877].y + _1048;
        float _2899 = cbLight._m0[_2877].z + _1049;
        float _2903 = inversesqrt(dot(vec3(_2897, _2898, _2899), vec3(_2897, _2898, _2899)));
        float _2904 = _2903 * _2897;
        float _2905 = _2903 * _2898;
        float _2906 = _2903 * _2899;
        float _2907 = dot(vec3(_969, _970, _971), vec3(cbLight._m0[_2877].xyz));
        float _4858 = isnan(0.0) ? _2907 : (isnan(_2907) ? 0.0 : max(_2907, 0.0));
        float _2910 = isnan(1.0) ? _4858 : (isnan(_4858) ? 1.0 : min(_4858, 1.0));
        float _2911 = dot(vec3(_969, _970, _971), vec3(_2904, _2905, _2906));
        float _4869 = isnan(0.0) ? _2911 : (isnan(_2911) ? 0.0 : max(_2911, 0.0));
        float _2914 = isnan(1.0) ? _4869 : (isnan(_4869) ? 1.0 : min(_4869, 1.0));
        float _2915 = dot(vec3(cbLight._m0[_2877].xyz), vec3(_2904, _2905, _2906));
        float _4880 = isnan(0.0) ? _2915 : (isnan(_2915) ? 0.0 : max(_2915, 0.0));
        float _2919 = _2896 * _2896;
        float _2923 = ((_2914 * _2914) * (_2919 + (-1.0))) + 1.0;
        float _2932 = (exp2(log2(1.0 - (isnan(1.0) ? _4880 : (isnan(_4880) ? 1.0 : min(_4880, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2933 = 1.0 - _2896;
        float _2943 = (0.5 / (((_2690 * ((_2910 * _2933) + _2896)) + 9.9999999392252902907785028219223e-09) + (((_2690 * _2933) + _2896) * _2910))) * _2910;
        float _4891 = isnan(0.0) ? _2943 : (isnan(_2943) ? 0.0 : max(_2943, 0.0));
        float _2945 = (isnan(1.0) ? _4891 : (isnan(_4891) ? 1.0 : min(_4891, 1.0))) * (_2919 / ((_2923 * _2923) * 3.141590118408203125));
        float _2946 = isnan(1.0) ? _2429 : (isnan(_2429) ? 1.0 : min(_2429, 1.0));
        _2871 = (((_2932 * cbLight._m0[_2881].x) * _2945) * _2946) + _2813;
        _2873 = (((_2932 * cbLight._m0[_2881].y) * _2945) * _2946) + _2814;
        _2875 = (((_2932 * cbLight._m0[_2881].z) * _2945) * _2946) + _2815;
    }
    float _2977;
    float _2979;
    float _2981;
    if (_2599)
    {
        _2977 = _2871;
        _2979 = _2873;
        _2981 = _2875;
    }
    else
    {
        uint _2988 = _2414 + 3u;
        uint _2992 = _2414 + 11u;
        float _3006 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2988].w)) * _972) * 0.949999988079071044921875);
        float _3007 = _3006 * _3006;
        float _3008 = cbLight._m0[_2988].x + _1047;
        float _3009 = cbLight._m0[_2988].y + _1048;
        float _3010 = cbLight._m0[_2988].z + _1049;
        float _3014 = inversesqrt(dot(vec3(_3008, _3009, _3010), vec3(_3008, _3009, _3010)));
        float _3015 = _3014 * _3008;
        float _3016 = _3014 * _3009;
        float _3017 = _3014 * _3010;
        float _3018 = dot(vec3(_969, _970, _971), vec3(cbLight._m0[_2988].xyz));
        float _4907 = isnan(0.0) ? _3018 : (isnan(_3018) ? 0.0 : max(_3018, 0.0));
        float _3021 = isnan(1.0) ? _4907 : (isnan(_4907) ? 1.0 : min(_4907, 1.0));
        float _3022 = dot(vec3(_969, _970, _971), vec3(_3015, _3016, _3017));
        float _4918 = isnan(0.0) ? _3022 : (isnan(_3022) ? 0.0 : max(_3022, 0.0));
        float _3025 = isnan(1.0) ? _4918 : (isnan(_4918) ? 1.0 : min(_4918, 1.0));
        float _3026 = dot(vec3(cbLight._m0[_2988].xyz), vec3(_3015, _3016, _3017));
        float _4929 = isnan(0.0) ? _3026 : (isnan(_3026) ? 0.0 : max(_3026, 0.0));
        float _3030 = _3007 * _3007;
        float _3034 = ((_3025 * _3025) * (_3030 + (-1.0))) + 1.0;
        float _3043 = (exp2(log2(1.0 - (isnan(1.0) ? _4929 : (isnan(_4929) ? 1.0 : min(_4929, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3044 = 1.0 - _3007;
        float _3054 = (0.5 / (((_2690 * ((_3021 * _3044) + _3007)) + 9.9999999392252902907785028219223e-09) + (((_2690 * _3044) + _3007) * _3021))) * _3021;
        float _4940 = isnan(0.0) ? _3054 : (isnan(_3054) ? 0.0 : max(_3054, 0.0));
        float _3056 = (isnan(1.0) ? _4940 : (isnan(_4940) ? 1.0 : min(_4940, 1.0))) * (_3030 / ((_3034 * _3034) * 3.141590118408203125));
        float _3057 = isnan(1.0) ? _2430 : (isnan(_2430) ? 1.0 : min(_2430, 1.0));
        _2977 = (((_3043 * cbLight._m0[_2992].x) * _3056) * _3057) + _2871;
        _2979 = (((_3043 * cbLight._m0[_2992].y) * _3056) * _3057) + _2873;
        _2981 = (((_3043 * cbLight._m0[_2992].z) * _3056) * _3057) + _2875;
    }
    float _3123;
    float _3125;
    float _3127;
    float _3129;
    float _3131;
    float _3133;
    if (_2412.y == 0u)
    {
        uvec4 _3078 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3079 = _3078.x;
        uint _3090 = uint((float(_3078.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1056) / _3079))) + floor(float(uint(cbSceneParam._m0[85u].x * _1055) / _3079)));
        float _3100 = (log2(_2190 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3101 = isnan(0.0) ? _3100 : (isnan(_3100) ? 0.0 : max(_3100, 0.0));
        uint _3104 = uint(isnan(14.0) ? _3101 : (isnan(_3101) ? 14.0 : min(_3101, 14.0)));
        uvec4 _3109 = texelFetch(g_lightClusterGridBuffer, int(((_3104 << 2u) + (_3090 << 6u)) >> 2u));
        uint _3110 = _3109.x;
        uint _3111 = _3078.z;
        float _3190;
        float _3192;
        float _3194;
        float _3196;
        float _3198;
        float _3200;
        if (((((1u << ((_3111 >> 4u) & 15u)) + 4294967295u) & _3110) == 0u) || ((_3111 & 240u) == 0u))
        {
            _3190 = 0.0;
            _3192 = 0.0;
            _3194 = 0.0;
            _3196 = 0.0;
            _3198 = 0.0;
            _3200 = 0.0;
        }
        else
        {
            float _3191;
            float _3193;
            float _3195;
            float _3197;
            float _3199;
            float _3201;
            float _3334 = 0.0;
            float _3335 = 0.0;
            float _3336 = 0.0;
            float _3337 = 0.0;
            float _3338 = 0.0;
            float _3339 = 0.0;
            uint _3340 = 0u;
            uint _3349;
            bool _3350;
            for (;;)
            {
                _3349 = texelFetch(g_lightClassification, int((((_3104 << 5u) + (_3090 << 9u)) + (_3340 << 2u)) >> 2u)).x;
                _3350 = _3349 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3350)
                {
                    frontier_phi_66_pred = _3339;
                    frontier_phi_66_pred_1 = _3338;
                    frontier_phi_66_pred_2 = _3337;
                    frontier_phi_66_pred_3 = _3336;
                    frontier_phi_66_pred_4 = _3335;
                    frontier_phi_66_pred_5 = _3334;
                }
                else
                {
                    float _3458;
                    float _3459;
                    float _3460;
                    float _3461;
                    float _3462;
                    float _3463;
                    uint _3464;
                    _3458 = _3334;
                    _3459 = _3335;
                    _3460 = _3336;
                    _3461 = _3337;
                    _3462 = _3338;
                    _3463 = _3339;
                    _3464 = _3349;
                    float _3390;
                    float _3391;
                    float _3392;
                    float _3393;
                    float _3394;
                    float _3395;
                    for (;;)
                    {
                        uint _3468 = uint(findLSB(_3464)) + (_3340 << 5u);
                        uint _3465 = (_3464 + 4294967295u) & _3464;
                        uint _3470 = _3468 * 48u;
                        vec4 _3484 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3470)).x, texelFetch(g_PointLightRenderingBuffer, int(_3470 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3470 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3470 + 3u)).x));
                        uint _3490 = (_3468 * 48u) + 4u;
                        vec4 _3503 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3490)).x, texelFetch(g_PointLightRenderingBuffer, int(_3490 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3490 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3490 + 3u)).x));
                        uint _3509 = (_3468 * 48u) + 8u;
                        vec3 _3520 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3509)).x, texelFetch(g_PointLightRenderingBuffer, int(_3509 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3509 + 2u)).x));
                        float _3524 = _3484.x - _2188;
                        float _3525 = _3484.y - _2189;
                        float _3526 = _3484.z - _2190;
                        float _3527 = dot(vec3(_3524, _3525, _3526), vec3(_3524, _3525, _3526));
                        float _3530 = inversesqrt(_3527);
                        float _3531 = _3530 * _3524;
                        float _3532 = _3530 * _3525;
                        float _3533 = _3530 * _3526;
                        float _3534 = dot(vec3(_1074, _1077, _1080), vec3(_3531, _3532, _3533));
                        float _3539 = 1.0 - (_3527 * _3484.w);
                        float _4966 = isnan(0.0) ? _3539 : (isnan(_3539) ? 0.0 : max(_3539, 0.0));
                        float _3540 = isnan(1.0) ? _4966 : (isnan(_4966) ? 1.0 : min(_4966, 1.0));
                        float _3541 = sqrt(_3527) * _3503.w;
                        float _3544 = 1.39999997615814208984375 / (_3541 + 1.39999997615814208984375);
                        float _3545 = _3544 * _3544;
                        float _3548 = ((1.0 - _3545) * _3534) + _3545;
                        float _3551 = _3541 * _3541;
                        float _3555 = ((isnan(0.0) ? _3548 : (isnan(_3548) ? 0.0 : max(_3548, 0.0))) * _3540) / ((_3551 * 0.699999988079071044921875) + 1.0);
                        float _3559 = (-0.0) - _2188;
                        float _3560 = (-0.0) - _2189;
                        float _3561 = (-0.0) - _2190;
                        float _3565 = inversesqrt(dot(vec3(_3559, _3560, _3561), vec3(_3559, _3560, _3561)));
                        float _3566 = _3565 * _3559;
                        float _3567 = _3565 * _3560;
                        float _3568 = _3565 * _3561;
                        float _3575 = exp2(log2(1.0 / ((_3551 * 3.5) + 5.0)) * 0.25);
                        float _3576 = 1.0 - _1134;
                        float _3583 = sqrt(1.0 - ((1.0 - (_3576 * _3576)) * (1.0 - (_3575 * _3575))));
                        float _3584 = _3583 * _3583;
                        float _3585 = _3584 * _3584;
                        float _3586 = _3566 + _3531;
                        float _3587 = _3567 + _3532;
                        float _3588 = _3568 + _3533;
                        float _3592 = inversesqrt(dot(vec3(_3586, _3587, _3588), vec3(_3586, _3587, _3588)));
                        float _3596 = dot(vec3(_1074, _1077, _1080), vec3(_3566, _3567, _3568));
                        float _4982 = isnan(0.0) ? _3596 : (isnan(_3596) ? 0.0 : max(_3596, 0.0));
                        float _3599 = isnan(1.0) ? _4982 : (isnan(_4982) ? 1.0 : min(_4982, 1.0));
                        float _3600 = dot(vec3(_1074, _1077, _1080), vec3(_3592 * _3586, _3592 * _3587, _3592 * _3588));
                        float _4993 = isnan(0.0) ? _3600 : (isnan(_3600) ? 0.0 : max(_3600, 0.0));
                        float _3603 = isnan(1.0) ? _4993 : (isnan(_4993) ? 1.0 : min(_4993, 1.0));
                        float _3607 = ((_3603 * _3603) * (_3585 + (-1.0))) + 1.0;
                        float _3608 = _3544 * _3584;
                        float _3609 = _3608 * _3608;
                        float _3612 = ((1.0 - _3609) * _3534) + _3609;
                        float _5004 = isnan(0.0) ? _3612 : (isnan(_3612) ? 0.0 : max(_3612, 0.0));
                        float _3613 = isnan(1.0) ? _5004 : (isnan(_5004) ? 1.0 : min(_5004, 1.0));
                        float _3614 = 1.0 - _3584;
                        float _3624 = (0.5 / (((_3613 * ((_3599 * _3614) + _3584)) + 9.9999999392252902907785028219223e-09) + (((_3613 * _3614) + _3584) * _3599))) * _3613;
                        float _5015 = isnan(0.0) ? _3624 : (isnan(_3624) ? 0.0 : max(_3624, 0.0));
                        float _3635 = (((_3585 * 3.1415927410125732421875) * (isnan(1.0) ? _5015 : (isnan(_5015) ? 1.0 : min(_5015, 1.0)))) / ((_3607 * _3607) * ((_3551 * 2.1991131305694580078125) + 3.141590118408203125))) * _3540;
                        _3393 = (_3555 * _3503.x) + _3461;
                        _3394 = (_3555 * _3503.y) + _3462;
                        _3395 = (_3555 * _3503.z) + _3463;
                        _3390 = (_3635 * _3520.x) + _3458;
                        _3391 = (_3635 * _3520.y) + _3459;
                        _3392 = (_3635 * _3520.z) + _3460;
                        if (_3465 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3458 = _3390;
                            _3459 = _3391;
                            _3460 = _3392;
                            _3461 = _3393;
                            _3462 = _3394;
                            _3463 = _3395;
                            _3464 = _3465;
                        }
                    }
                    frontier_phi_66_pred = _3395;
                    frontier_phi_66_pred_1 = _3394;
                    frontier_phi_66_pred_2 = _3393;
                    frontier_phi_66_pred_3 = _3392;
                    frontier_phi_66_pred_4 = _3391;
                    frontier_phi_66_pred_5 = _3390;
                }
                _3201 = frontier_phi_66_pred;
                _3199 = frontier_phi_66_pred_1;
                _3197 = frontier_phi_66_pred_2;
                _3195 = frontier_phi_66_pred_3;
                _3193 = frontier_phi_66_pred_4;
                _3191 = frontier_phi_66_pred_5;
                uint _3341 = _3340 + 1u;
                if (_3341 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3334 = _3191;
                    _3335 = _3193;
                    _3336 = _3195;
                    _3337 = _3197;
                    _3338 = _3199;
                    _3339 = _3201;
                    _3340 = _3341;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3190 = _3191;
            _3192 = _3193;
            _3194 = _3195;
            _3196 = _3197;
            _3198 = _3199;
            _3200 = _3201;
        }
        uvec4 _3204 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3205 = _3204.z;
        uint _3207 = (_3205 >> 8u) & 15u;
        float _3302;
        float _3304;
        float _3306;
        float _3308;
        float _3310;
        float _3312;
        if (((4294967295u << _3207) & _3110) == 0u)
        {
            _3302 = _3190;
            _3304 = _3192;
            _3306 = _3194;
            _3308 = _3196;
            _3310 = _3198;
            _3312 = _3200;
        }
        else
        {
            float _3327 = inversesqrt(dot(vec3(_2188, _2189, _2190), vec3(_2188, _2189, _2190)));
            float _3328 = _3327 * _2188;
            float _3329 = _3327 * _2189;
            float _3330 = _3327 * _2190;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3207 < ((_3205 >> 12u) & 15u))
            {
                float _3303;
                float _3305;
                float _3307;
                float _3309;
                float _3311;
                float _3313;
                float _3441 = _3190;
                float _3442 = _3192;
                float _3443 = _3194;
                float _3444 = _3196;
                float _3445 = _3198;
                float _3446 = _3200;
                uint _3447 = _3207;
                uint _3456;
                bool _3457;
                for (;;)
                {
                    _3456 = texelFetch(g_lightClassification, int((((_3104 << 5u) + (_3090 << 9u)) + (_3447 << 2u)) >> 2u)).x;
                    _3457 = _3456 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3457)
                    {
                        frontier_phi_72_pred = _3446;
                        frontier_phi_72_pred_1 = _3445;
                        frontier_phi_72_pred_2 = _3444;
                        frontier_phi_72_pred_3 = _3443;
                        frontier_phi_72_pred_4 = _3442;
                        frontier_phi_72_pred_5 = _3441;
                    }
                    else
                    {
                        float _3640;
                        float _3641;
                        float _3642;
                        float _3643;
                        float _3644;
                        float _3645;
                        float _3933;
                        float _3934;
                        float _3935;
                        float _3936;
                        float _3937;
                        float _3938;
                        float _3653 = _3441;
                        float _3654 = _3442;
                        float _3655 = _3443;
                        float _3656 = _3444;
                        float _3657 = _3445;
                        float _3658 = _3446;
                        uint _3659 = _3456;
                        uint _3660;
                        vec4 _3685;
                        float _3686;
                        vec4 _3701;
                        vec3 _3713;
                        vec4 _3728;
                        vec4 _3743;
                        float _3789;
                        bool _3790;
                        for (;;)
                        {
                            uint _3670 = ((_3447 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3659));
                            _3660 = (_3659 + 4294967295u) & _3659;
                            uint _3672 = _3670 * 40u;
                            _3685 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3672)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3672 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3672 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3672 + 3u)).x));
                            _3686 = _3685.w;
                            uint _3688 = (_3670 * 40u) + 4u;
                            _3701 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3688)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3688 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3688 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3688 + 3u)).x));
                            uint _3703 = (_3670 * 40u) + 8u;
                            _3713 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3703)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3703 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3703 + 2u)).x));
                            uint _3715 = (_3670 * 40u) + 16u;
                            _3728 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3715)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3715 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3715 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3715 + 3u)).x));
                            uint _3730 = (_3670 * 40u) + 20u;
                            _3743 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3730)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3730 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3730 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3730 + 3u)).x));
                            uint _3745 = (_3670 * 40u) + 24u;
                            vec4 _3758 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3745)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3745 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3745 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3745 + 3u)).x));
                            uint _3764 = (_3670 * 40u) + 28u;
                            vec4 _3777 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3764)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3764 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3764 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3764 + 3u)).x));
                            _3789 = fma(_2190, _3777.z, fma(_2189, _3777.y, _3777.x * _2188)) + _3777.w;
                            _3790 = !((fma(_2190, _3758.z, fma(_2189, _3758.y, _3758.x * _2188)) + _3758.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3790)
                            {
                                float _3817 = _3685.x - _2188;
                                float _3818 = _3685.y - _2189;
                                float _3819 = _3685.z - _2190;
                                float _3820 = dot(vec3(_3817, _3818, _3819), vec3(_3817, _3818, _3819));
                                float _3823 = inversesqrt(_3820);
                                float _3824 = _3823 * _3817;
                                float _3825 = _3823 * _3818;
                                float _3826 = _3823 * _3819;
                                float _3830 = 1.0 - (_3820 / (_3686 * _3686));
                                float _5026 = isnan(0.0) ? _3830 : (isnan(_3830) ? 0.0 : max(_3830, 0.0));
                                float _3831 = isnan(1.0) ? _5026 : (isnan(_5026) ? 1.0 : min(_5026, 1.0));
                                float _3835 = sqrt(_3820) * _3701.w;
                                float _3837 = 1.39999997615814208984375 / (_3835 + 1.39999997615814208984375);
                                float _3838 = _3837 * _3837;
                                float _3841 = ((1.0 - _3838) * dot(vec3(_3824, _3825, _3826), vec3(_1074, _1077, _1080))) + _3838;
                                float _3844 = _3835 * _3835;
                                float _3848 = (fma(_2190, _3728.z, fma(_2189, _3728.y, _3728.x * _2188)) + _3728.w) / _3789;
                                float _3849 = (fma(_2190, _3743.z, fma(_2189, _3743.y, _3743.x * _2188)) + _3743.w) / _3789;
                                float _3853 = 1.0 - dot(vec2(_3848, _3849), vec2(_3848, _3849));
                                float _5042 = isnan(0.0) ? _3853 : (isnan(_3853) ? 0.0 : max(_3853, 0.0));
                                float _3854 = isnan(1.0) ? _5042 : (isnan(_5042) ? 1.0 : min(_5042, 1.0));
                                float _3855 = _3854 * (((isnan(0.0) ? _3841 : (isnan(_3841) ? 0.0 : max(_3841, 0.0))) * _3831) / ((_3844 * 0.699999988079071044921875) + 1.0));
                                float _3867 = exp2(log2(1.0 / ((_3844 * 3.5) + 5.0)) * 0.25);
                                float _3868 = 1.0 - _1134;
                                float _3875 = sqrt(1.0 - ((1.0 - (_3868 * _3868)) * (1.0 - (_3867 * _3867))));
                                float _3876 = _3875 * _3875;
                                float _3877 = _3876 * _3876;
                                float _3878 = _3824 - _3328;
                                float _3879 = _3825 - _3329;
                                float _3880 = _3826 - _3330;
                                float _3884 = inversesqrt(dot(vec3(_3878, _3879, _3880), vec3(_3878, _3879, _3880)));
                                float _3888 = dot(vec3(_1074, _1077, _1080), vec3((-0.0) - _3328, (-0.0) - _3329, (-0.0) - _3330));
                                float _5053 = isnan(0.0) ? _3888 : (isnan(_3888) ? 0.0 : max(_3888, 0.0));
                                float _3891 = isnan(1.0) ? _5053 : (isnan(_5053) ? 1.0 : min(_5053, 1.0));
                                float _3892 = dot(vec3(_1074, _1077, _1080), vec3(_3884 * _3878, _3884 * _3879, _3884 * _3880));
                                float _5064 = isnan(0.0) ? _3892 : (isnan(_3892) ? 0.0 : max(_3892, 0.0));
                                float _3895 = isnan(1.0) ? _5064 : (isnan(_5064) ? 1.0 : min(_5064, 1.0));
                                float _3899 = ((_3895 * _3895) * (_3877 + (-1.0))) + 1.0;
                                float _3900 = _3837 * _3876;
                                float _3901 = _3900 * _3900;
                                float _3907 = ((1.0 - _3901) * dot(vec3(_1074, _1077, _1080), vec3(_3824, _3825, _3826))) + _3901;
                                float _5075 = isnan(0.0) ? _3907 : (isnan(_3907) ? 0.0 : max(_3907, 0.0));
                                float _3908 = isnan(1.0) ? _5075 : (isnan(_5075) ? 1.0 : min(_5075, 1.0));
                                float _3909 = 1.0 - _3876;
                                float _3919 = (0.5 / (((_3908 * ((_3891 * _3909) + _3876)) + 9.9999999392252902907785028219223e-09) + (((_3908 * _3909) + _3876) * _3891))) * _3908;
                                float _5086 = isnan(0.0) ? _3919 : (isnan(_3919) ? 0.0 : max(_3919, 0.0));
                                float _3929 = (_3854 * _3831) * (((_3877 * 3.1415927410125732421875) * (isnan(1.0) ? _5086 : (isnan(_5086) ? 1.0 : min(_5086, 1.0)))) / ((_3899 * _3899) * ((_3844 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3855 * _3701.y;
                                frontier_phi_78_pred_1 = _3855 * _3701.x;
                                frontier_phi_78_pred_2 = _3929 * _3713.z;
                                frontier_phi_78_pred_3 = _3929 * _3713.y;
                                frontier_phi_78_pred_4 = _3929 * _3713.x;
                                frontier_phi_78_pred_5 = _3855 * _3701.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3937 = frontier_phi_78_pred;
                            _3936 = frontier_phi_78_pred_1;
                            _3935 = frontier_phi_78_pred_2;
                            _3934 = frontier_phi_78_pred_3;
                            _3933 = frontier_phi_78_pred_4;
                            _3938 = frontier_phi_78_pred_5;
                            _3643 = _3936 + _3656;
                            _3644 = _3937 + _3657;
                            _3645 = _3938 + _3658;
                            _3640 = _3933 + _3653;
                            _3641 = _3934 + _3654;
                            _3642 = _3935 + _3655;
                            if (_3660 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3653 = _3640;
                                _3654 = _3641;
                                _3655 = _3642;
                                _3656 = _3643;
                                _3657 = _3644;
                                _3658 = _3645;
                                _3659 = _3660;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3645;
                        frontier_phi_72_pred_1 = _3644;
                        frontier_phi_72_pred_2 = _3643;
                        frontier_phi_72_pred_3 = _3642;
                        frontier_phi_72_pred_4 = _3641;
                        frontier_phi_72_pred_5 = _3640;
                    }
                    _3313 = frontier_phi_72_pred;
                    _3311 = frontier_phi_72_pred_1;
                    _3309 = frontier_phi_72_pred_2;
                    _3307 = frontier_phi_72_pred_3;
                    _3305 = frontier_phi_72_pred_4;
                    _3303 = frontier_phi_72_pred_5;
                    uint _3448 = _3447 + 1u;
                    if (_3448 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3441 = _3303;
                        _3442 = _3305;
                        _3443 = _3307;
                        _3444 = _3309;
                        _3445 = _3311;
                        _3446 = _3313;
                        _3447 = _3448;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3313;
                frontier_phi_60_61_ladder_1 = _3311;
                frontier_phi_60_61_ladder_2 = _3307;
                frontier_phi_60_61_ladder_3 = _3305;
                frontier_phi_60_61_ladder_4 = _3303;
                frontier_phi_60_61_ladder_5 = _3309;
            }
            else
            {
                frontier_phi_60_61_ladder = _3200;
                frontier_phi_60_61_ladder_1 = _3198;
                frontier_phi_60_61_ladder_2 = _3194;
                frontier_phi_60_61_ladder_3 = _3192;
                frontier_phi_60_61_ladder_4 = _3190;
                frontier_phi_60_61_ladder_5 = _3196;
            }
            _3302 = frontier_phi_60_61_ladder_4;
            _3304 = frontier_phi_60_61_ladder_3;
            _3306 = frontier_phi_60_61_ladder_2;
            _3308 = frontier_phi_60_61_ladder_5;
            _3310 = frontier_phi_60_61_ladder_1;
            _3312 = frontier_phi_60_61_ladder;
        }
        float _3317 = isnan(1.0) ? _1118 : (isnan(_1118) ? 1.0 : min(_1118, 1.0));
        _3123 = (_3317 * _3308) + _2654;
        _3125 = (_3317 * _3310) + _2656;
        _3127 = (_3317 * _3312) + _2658;
        _3129 = ((_3302 * 0.039999999105930328369140625) * _3317) + _2977;
        _3131 = ((_3304 * 0.039999999105930328369140625) * _3317) + _2979;
        _3133 = ((_3306 * 0.039999999105930328369140625) * _3317) + _2981;
    }
    else
    {
        _3123 = _2654;
        _3125 = _2656;
        _3127 = _2658;
        _3129 = _2977;
        _3131 = _2979;
        _3133 = _2981;
    }
    float _5102 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
    float _5113 = isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0));
    float _5124 = isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0));
    uint _3153 = _285 + 6u;
    float _3161 = _1055 / cbSceneParam._m0[86u].x;
    float _3162 = _1056 / cbSceneParam._m0[86u].y;
    vec4 _3176 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3161, _3162, (log2((isnan(cbSceneParam._m0[77u].w) ? _990 : (isnan(_990) ? cbSceneParam._m0[77u].w : min(_990, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3178 = _3176.x;
    float _3179 = _3176.y;
    float _3180 = _3176.z;
    float _3181 = _3176.w;
    float _3252;
    float _3254;
    float _3256;
    float _3258;
    if (_990 > cbSceneParam._m0[78u].w)
    {
        float _3215 = isnan(_990) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _990 : min(cbSceneParam._m0[80u].w, _990));
        float _3216 = _3215 / _990;
        float _3227 = _3216 * _1040;
        float _3228 = _1041 * _3216;
        float _3229 = (-0.0) - _3228;
        float _3230 = _3216 * _1042;
        float _3232 = (cbSceneParam._m0[77u].w * _3229) / _3215;
        float _3233 = _3232 + cbSceneParam._m0[79u].w;
        float _3234 = cbSceneParam._m0[79u].w - _3228;
        float _3240 = sqrt(((_3227 * _3227) + (_3228 * _3228)) + (_3230 * _3230));
        float _3243 = (1.0 - (cbSceneParam._m0[77u].w / _3215)) * _3240;
        float _3248 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3250 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3403;
        if (abs((_3229 - _3232) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3403 = ((((_3233 > 0.0) ? exp2(_3248 * _3233) : (2.0 - exp2(_3250 * _3233))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3243;
        }
        else
        {
            float _3363 = 1.0 / cbSceneParam._m0[80u].x;
            float _3364 = isnan(_3234) ? _3233 : (isnan(_3233) ? _3234 : max(_3233, _3234));
            float _3365 = isnan(_3234) ? _3233 : (isnan(_3233) ? _3234 : min(_3233, _3234));
            float _3374 = isnan(0.0) ? _3364 : (isnan(_3364) ? 0.0 : min(_3364, 0.0));
            float _3375 = isnan(0.0) ? _3365 : (isnan(_3365) ? 0.0 : min(_3365, 0.0));
            _3403 = ((abs(_3240 / _3229) * cbSceneParam._m0[80u].y) * ((((_3374 - _3375) * 2.0) - ((exp2(_3248 * (isnan(0.0) ? _3364 : (isnan(_3364) ? 0.0 : max(_3364, 0.0)))) - exp2(_3248 * (isnan(0.0) ? _3365 : (isnan(_3365) ? 0.0 : max(_3365, 0.0))))) * _3363)) - ((exp2(_3250 * _3374) - exp2(_3250 * _3375)) * _3363))) + (_3243 * cbSceneParam._m0[80u].z);
        }
        vec4 _3405 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3161, _3162, 1.0), 0.0);
        float _3414 = exp2((_3403 * (-1.44269502162933349609375)) * (1.0 - _3405.w));
        float _3415 = log2(_3414);
        float _3431 = log2(_3181);
        _3252 = (exp2(_3431 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3415 * cbSceneParam._m0[78u].x)) * _3405.x) / cbSceneParam._m0[78u].x)) + _3178;
        _3254 = (exp2(_3431 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3415 * cbSceneParam._m0[78u].y)) * _3405.y) / cbSceneParam._m0[78u].y)) + _3179;
        _3256 = (exp2(_3431 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3415 * cbSceneParam._m0[78u].z)) * _3405.z) / cbSceneParam._m0[78u].z)) + _3180;
        _3258 = _3414 * _3181;
    }
    else
    {
        _3252 = _3178;
        _3254 = _3179;
        _3256 = _3180;
        _3258 = _3181;
    }
    float _3270 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3271 = _3270 == 3.0;
    float _3272 = log2(_3258);
    float _3279 = exp2(_3272 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5102 : (isnan(_5102) ? 1.0 : min(_5102, 1.0))) * (_3123 + ((isnan(0.0) ? _1843 : (isnan(_1843) ? 0.0 : max(_1843, 0.0))) * _1118))) + ((_3129 + ((isnan(0.0) ? _2135 : (isnan(_2135) ? 0.0 : max(_2135, 0.0))) * _1922)) * cbPerFrame._m0[3u].x));
    float _3280 = exp2(_3272 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5113 : (isnan(_5113) ? 1.0 : min(_5113, 1.0))) * (_3125 + ((isnan(0.0) ? _1846 : (isnan(_1846) ? 0.0 : max(_1846, 0.0))) * _1118))) + ((_3131 + ((isnan(0.0) ? _2138 : (isnan(_2138) ? 0.0 : max(_2138, 0.0))) * _1922)) * cbPerFrame._m0[3u].x));
    float _3281 = exp2(_3272 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5124 : (isnan(_5124) ? 1.0 : min(_5124, 1.0))) * (_3127 + ((isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0))) * _1118))) + ((_3133 + ((isnan(0.0) ? _2141 : (isnan(_2141) ? 0.0 : max(_2141, 0.0))) * _1922)) * cbPerFrame._m0[3u].x));
    float _3290 = (_3270 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3290 * (_3271 ? _3279 : (_3279 + (cbSceneParam._m0[72u].w * _3252)));
    SV_Target.y = _3290 * (_3271 ? _3280 : (_3280 + (cbSceneParam._m0[72u].w * _3254)));
    SV_Target.z = _3290 * (_3271 ? _3281 : (_3281 + (cbSceneParam._m0[72u].w * _3256)));
    SV_Target.w = cbInstanceData._m0[_3153].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3153].w;
}


