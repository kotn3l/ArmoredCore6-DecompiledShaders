#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1462;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _235 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _236 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _237 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _243 = inversesqrt(dot(vec3(_235, _236, _237), vec3(_235, _236, _237)));
    float _250 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _257 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _263 = uint(roundEven(NORMAL.w)) * 13u;
    uint _268 = _263 + 1u;
    uint _272 = _263 + 2u;
    float _281 = sqrt(((cbInstanceData._m0[_268].x * cbInstanceData._m0[_268].x) + (cbInstanceData._m0[_263].x * cbInstanceData._m0[_263].x)) + (cbInstanceData._m0[_272].x * cbInstanceData._m0[_272].x));
    float _282 = _281 * TEXCOORD.z;
    float _283 = _281 * TEXCOORD.w;
    vec4 _303 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _309 = _303.x * cbMtdParam._m0[11u].x;
    float _310 = _303.y * cbMtdParam._m0[11u].y;
    float _311 = _303.z * cbMtdParam._m0[11u].z;
    vec4 _330 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _282) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _283) + cbTextureTilingScale._m0[5u].w));
    vec4 _349 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _389 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _391 = _389.x;
    float _403 = dot(vec4(_391, _389.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _420 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _349.x) * 2.0) - ((((_391 - _403) * cbMtdParam._m0[24u].z) + _403) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4047 = isnan(0.0) ? _420 : (isnan(_420) ? 0.0 : max(_420, 0.0));
    float _421 = isnan(1.0) ? _4047 : (isnan(_4047) ? 1.0 : min(_4047, 1.0));
    float _428 = (_421 * ((_330.x * cbMtdParam._m0[12u].x) - _309)) + _309;
    float _429 = (_421 * ((_330.y * cbMtdParam._m0[12u].y) - _310)) + _310;
    float _430 = (_421 * ((_330.z * cbMtdParam._m0[12u].z) - _311)) + _311;
    vec4 _447 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _282) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _283) + cbTextureTilingScale._m0[3u].w));
    vec4 _467 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _469 = _467.x;
    float _479 = dot(vec4(_469, _467.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _493 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _349.y) * 2.0) - ((((_469 - _479) * cbMtdParam._m0[24u].z) + _479) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4058 = isnan(0.0) ? _493 : (isnan(_493) ? 0.0 : max(_493, 0.0));
    float _494 = isnan(1.0) ? _4058 : (isnan(_4058) ? 1.0 : min(_4058, 1.0));
    float _501 = (_494 * ((_447.x * cbMtdParam._m0[13u].x) - _428)) + _428;
    float _502 = (_494 * ((_447.y * cbMtdParam._m0[13u].y) - _429)) + _429;
    float _503 = (_494 * ((_447.z * cbMtdParam._m0[13u].z) - _430)) + _430;
    vec4 _521 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _282) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _283) + cbTextureTilingScale._m0[24u].w));
    vec4 _538 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _540 = _538.x;
    float _550 = dot(vec4(_540, _538.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _562 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _349.z) * 2.0) - ((((_540 - _550) * cbMtdParam._m0[24u].z) + _550) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4069 = isnan(0.0) ? _562 : (isnan(_562) ? 0.0 : max(_562, 0.0));
    float _563 = isnan(1.0) ? _4069 : (isnan(_4069) ? 1.0 : min(_4069, 1.0));
    float _570 = (_563 * ((_521.x * cbMtdParam._m0[14u].x) - _501)) + _501;
    float _571 = (_563 * ((_521.y * cbMtdParam._m0[14u].y) - _502)) + _502;
    float _572 = (_563 * ((_521.z * cbMtdParam._m0[14u].z) - _503)) + _503;
    vec4 _590 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _282) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _283) + cbTextureTilingScale._m0[14u].w));
    vec4 _610 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _282) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _283) + cbTextureTilingScale._m0[4u].w));
    vec4 _627 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _629 = _627.x;
    float _630 = _627.y;
    float _631 = _627.z;
    float _638 = ((_610.x - _629) * _421) + _629;
    float _639 = ((_610.y - _630) * _421) + _630;
    float _640 = ((_610.z - _631) * _421) + _631;
    vec4 _652 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _282) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _283) + cbTextureTilingScale._m0[2u].w));
    float _663 = ((_652.x - _638) * _494) + _638;
    float _664 = ((_652.y - _639) * _494) + _639;
    float _665 = ((_652.z - _640) * _494) + _640;
    vec4 _677 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _282) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _283) + cbTextureTilingScale._m0[23u].w));
    float _690 = ((_677.z - _665) * _563) + _665;
    float _693 = ((((_677.x - _663) * _563) + _663) * 2.0) + (-1.0);
    float _695 = ((((_677.y - _664) * _563) + _664) * 2.0) + (-1.0);
    float _696 = dot(vec2(_693, _695), vec2(_693, _695));
    float _4080 = isnan(0.0) ? _696 : (isnan(_696) ? 0.0 : max(_696, 0.0));
    float _701 = sqrt(1.0 - (isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0))));
    vec4 _715 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _740 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _282) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _283) + cbTextureTilingScale._m0[11u].w));
    float _742 = _740.x;
    float _743 = 1.0 - _742;
    float _749 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _752 = ((isnan(0.0) ? _749 : (isnan(_749) ? 0.0 : min(_749, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _761 = (_752 - ((((((_742 - _743) * cbMtdParam._m0[24u].w) + _743) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _752))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4101 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
    float _762 = isnan(1.0) ? _4101 : (isnan(_4101) ? 1.0 : min(_4101, 1.0));
    float _769 = (_762 * ((_590.x * cbMtdParam._m0[18u].x) - _570)) + _570;
    float _770 = (_762 * ((_590.y * cbMtdParam._m0[18u].y) - _571)) + _571;
    float _771 = (_762 * ((_590.z * cbMtdParam._m0[18u].z) - _572)) + _572;
    vec4 _783 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _282) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _283) + cbTextureTilingScale._m0[19u].w));
    float _785 = _783.x;
    float _786 = 1.0 - _785;
    float _813 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_785 - _786) * cbMtdParam._m0[24u].y) + _786) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4112 = isnan(0.0) ? _813 : (isnan(_813) ? 0.0 : max(_813, 0.0));
    float _814 = isnan(1.0) ? _4112 : (isnan(_4112) ? 1.0 : min(_4112, 1.0));
    float _822 = ((((cbMtdParam._m0[10u].x - _769) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _814) + _769;
    float _823 = ((((cbMtdParam._m0[10u].y - _770) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _814) + _770;
    float _824 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _771)) * _814) + _771;
    float _828 = (cbMtdParam._m0[19u].w * (_715.z - _690)) + _690;
    vec4 _842 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _282) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _283) + cbTextureTilingScale._m0[15u].w));
    float _849 = (_842.x * 2.0) + (-1.0);
    float _850 = (_842.y * 2.0) + (-1.0);
    float _851 = dot(vec2(_849, _850), vec2(_849, _850));
    float _4123 = isnan(0.0) ? _851 : (isnan(_851) ? 0.0 : max(_851, 0.0));
    float _859 = (_762 * (_842.z - _828)) + _828;
    float _862 = ((cbMtdParam._m0[23u].y - _859) * _814) + _859;
    vec4 _881 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _282) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _283) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _887 = (_881.x * 2.0) + (-1.0);
    float _888 = (_881.y * 2.0) + (-1.0);
    float _889 = dot(vec2(_887, _888), vec2(_887, _888));
    float _4134 = isnan(0.0) ? _889 : (isnan(_889) ? 0.0 : max(_889, 0.0));
    float _897 = (((_715.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _693;
    float _898 = (((_715.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _695;
    float _910 = (((_849 - _897) + (cbMtdParam._m0[21u].x * _897)) * _762) + _897;
    float _911 = (((_850 - _898) + (cbMtdParam._m0[21u].x * _898)) * _762) + _898;
    float _912 = (_762 * (sqrt(1.0 - (isnan(1.0) ? _4123 : (isnan(_4123) ? 1.0 : min(_4123, 1.0)))) - _701)) + _701;
    float _923 = (((_887 - _910) + (_910 * cbMtdParam._m0[22u].z)) * _814) + _910;
    float _924 = (((_888 - _911) + (_911 * cbMtdParam._m0[22u].z)) * _814) + _911;
    float _925 = ((sqrt(1.0 - (isnan(1.0) ? _4134 : (isnan(_4134) ? 1.0 : min(_4134, 1.0)))) - _912) * _814) + _912;
    float _927 = cbMtdParam._m0[22u].x + _715.w;
    float _930 = fma(_925, _250 * NORMAL.x, fma(_924, _257 * TANGENT.x, (_243 * _235) * _923));
    float _933 = fma(_925, _250 * NORMAL.y, fma(_924, _257 * TANGENT.y, (_243 * _236) * _923));
    float _936 = fma(_925, _250 * NORMAL.z, fma(_924, _257 * TANGENT.z, (_243 * _237) * _923));
    float _940 = inversesqrt(dot(vec3(_930, _933, _936), vec3(_930, _933, _936)));
    float _941 = _940 * _930;
    float _942 = _940 * _933;
    float _943 = _940 * _936;
    float _4145 = isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0));
    float _944 = isnan(1.0) ? _4145 : (isnan(_4145) ? 1.0 : min(_4145, 1.0));
    float _4156 = isnan(0.0) ? _927 : (isnan(_927) ? 0.0 : max(_927, 0.0));
    float _4167 = isnan(0.0) ? _822 : (isnan(_822) ? 0.0 : max(_822, 0.0));
    float _4178 = isnan(0.0) ? _823 : (isnan(_823) ? 0.0 : max(_823, 0.0));
    float _4189 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
    float _962 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1003 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1013 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1003);
    float _1014 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1003);
    float _1015 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1003);
    float _1019 = inversesqrt(dot(vec3(_1013, _1014, _1015), vec3(_1013, _1014, _1015)));
    float _1020 = _1013 * _1019;
    float _1021 = _1014 * _1019;
    float _1022 = _1015 * _1019;
    float _1028 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1029 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1047 = fma(_943, cbSceneParam._m0[5u].z, fma(_942, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _941));
    float _1050 = fma(_943, cbSceneParam._m0[6u].z, fma(_942, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _941));
    float _1053 = fma(_943, cbSceneParam._m0[7u].z, fma(_942, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _941));
    uint _1067 = (_263 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1073 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4167 : (isnan(_4167) ? 1.0 : min(_4167, 1.0)))) * cbInstanceData._m0[_1067].x;
    float _1074 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4178 : (isnan(_4178) ? 1.0 : min(_4178, 1.0)))) * cbInstanceData._m0[_1067].y;
    float _1075 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4189 : (isnan(_4189) ? 1.0 : min(_4189, 1.0)))) * cbInstanceData._m0[_1067].z;
    float _4200 = isnan(0.0) ? _1073 : (isnan(_1073) ? 0.0 : max(_1073, 0.0));
    float _1076 = isnan(1.0) ? _4200 : (isnan(_4200) ? 1.0 : min(_4200, 1.0));
    float _4211 = isnan(0.0) ? _1074 : (isnan(_1074) ? 0.0 : max(_1074, 0.0));
    float _1077 = isnan(1.0) ? _4211 : (isnan(_4211) ? 1.0 : min(_4211, 1.0));
    float _4222 = isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : max(_1075, 0.0));
    float _1078 = isnan(1.0) ? _4222 : (isnan(_4222) ? 1.0 : min(_4222, 1.0));
    vec4 _1087 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1028, cbSceneParam._m0[86u].y * _1029));
    float _1091 = ((isnan(1.0) ? _4156 : (isnan(_4156) ? 1.0 : min(_4156, 1.0))) * TEXCOORD_5.w) * _1087.x;
    float _1092 = dot(vec3(_941, _942, _943), vec3(_1020, _1021, _1022));
    float _1095 = _1092 * 2.0;
    float _1099 = (_1095 * _941) - _1020;
    float _1100 = (_1095 * _942) - _1021;
    float _1101 = (_1095 * _943) - _1022;
    float _1105 = abs(dot(vec3(_1020, _1021, _1022), vec3(_941, _942, _943)));
    float _4233 = isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0));
    float _1107 = sqrt(_944);
    float _1120 = exp2((_1107 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4233 : (isnan(_4233) ? 1.0 : min(_4233, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1107 * 3.0));
    float _1152 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1156 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1160 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1461;
    float _1463;
    float _1464;
    float _1465;
    float _1466;
    float _1467;
    float _1468;
    float _1469;
    float _1470;
    float _1471;
    float _1472;
    float _1473;
    float _1474;
    float _1475;
    float _1476;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1186 = fma(_1160, cbModelParam._m0[26u].z, fma(_1156, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1152));
        float _1190 = fma(_1160, cbModelParam._m0[27u].z, fma(_1156, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1152));
        float _1194 = fma(_1160, cbModelParam._m0[28u].z, fma(_1156, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1152));
        float _1219 = _1152 + _941;
        float _1220 = _1156 + _942;
        float _1221 = _1160 + _943;
        float _1231 = fma(_1221, cbModelParam._m0[26u].z, fma(_1220, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1219)) - _1186;
        float _1232 = fma(_1221, cbModelParam._m0[27u].z, fma(_1220, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1219)) - _1190;
        float _1233 = fma(_1221, cbModelParam._m0[28u].z, fma(_1220, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1219)) - _1194;
        float _1237 = inversesqrt(dot(vec3(_1231, _1232, _1233), vec3(_1231, _1232, _1233)));
        float _1250 = ((_1237 * _1231) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1186 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1251 = ((_1237 * _1232) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1190 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1252 = ((_1237 * _1233) / cbModelParam._m0[34u].z) + ((((((_1194 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1255 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1250, _1251, _1252), 0.0);
        vec4 _1262 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1250, _1251, _1252), 0.0);
        vec4 _1269 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1250, _1251, _1252), 0.0);
        vec4 _1276 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1250, _1251, _1252), 0.0);
        float _1289 = exp2((_1255.w + (-0.5)) * 20.0) * 2.0;
        float _1290 = _1289 * (_1255.x + (-0.5));
        float _1291 = _1289 * (_1255.y + (-0.5));
        float _1292 = _1289 * (_1255.z + (-0.5));
        float _1299 = exp2((_1262.w + (-0.5)) * 20.0) * 2.0;
        float _1300 = _1299 * (_1262.x + (-0.5));
        float _1301 = _1299 * (_1262.y + (-0.5));
        float _1302 = _1299 * (_1262.z + (-0.5));
        float _1309 = exp2((_1269.w + (-0.5)) * 20.0) * 2.0;
        float _1310 = _1309 * (_1269.x + (-0.5));
        float _1311 = _1309 * (_1269.y + (-0.5));
        float _1312 = _1309 * (_1269.z + (-0.5));
        float _1319 = exp2((_1276.w + (-0.5)) * 20.0) * 2.0;
        float _1320 = _1319 * (_1276.x + (-0.5));
        float _1321 = _1319 * (_1276.y + (-0.5));
        float _1322 = _1319 * (_1276.z + (-0.5));
        float _1323 = isnan(0.0) ? _1320 : (isnan(_1320) ? 0.0 : max(_1320, 0.0));
        float _1324 = isnan(0.0) ? _1321 : (isnan(_1321) ? 0.0 : max(_1321, 0.0));
        float _1325 = isnan(0.0) ? _1322 : (isnan(_1322) ? 0.0 : max(_1322, 0.0));
        float _1326 = _1290 * 0.5;
        float _1327 = _1300 * 0.5;
        float _1328 = _1310 * 0.5;
        float _1329 = dot(vec3(_1326, _1327, _1328), vec3(_1326, _1327, _1328));
        float _1334 = (_1329 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1329);
        float _1343 = (dot(vec3(_941, _942, _943), vec3(_1334 * _1326, _1334 * _1327, _1334 * _1328)) + 1.0) * 0.5;
        float _4259 = isnan(0.0) ? _1343 : (isnan(_1343) ? 0.0 : max(_1343, 0.0));
        float _1353 = sqrt(((_1327 * _1327) + (_1326 * _1326)) + (_1328 * _1328)) / (_1323 + 9.9999997473787516355514526367188e-06);
        float _4270 = isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0));
        float _1354 = isnan(1.0) ? _4270 : (isnan(_4270) ? 1.0 : min(_4270, 1.0));
        float _1355 = _1354 * 2.0;
        float _1359 = (1.0 - _1354) / (_1354 + 1.0);
        float _4281 = isnan(0.0) ? _1359 : (isnan(_1359) ? 0.0 : max(_1359, 0.0));
        float _1360 = isnan(1.0) ? _4281 : (isnan(_4281) ? 1.0 : min(_4281, 1.0));
        float _1369 = ((((1.0 - _1360) * (_1355 + 2.0)) * exp2(log2(isnan(1.0) ? _4259 : (isnan(_4259) ? 1.0 : min(_4259, 1.0))) * (_1355 + 1.0))) + _1360) * _1323;
        float _1370 = _1291 * 0.5;
        float _1371 = _1301 * 0.5;
        float _1372 = _1311 * 0.5;
        float _1373 = dot(vec3(_1370, _1371, _1372), vec3(_1370, _1371, _1372));
        float _1378 = (_1373 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1373);
        float _1386 = (dot(vec3(_941, _942, _943), vec3(_1378 * _1370, _1378 * _1371, _1378 * _1372)) + 1.0) * 0.5;
        float _4292 = isnan(0.0) ? _1386 : (isnan(_1386) ? 0.0 : max(_1386, 0.0));
        float _1395 = sqrt(((_1371 * _1371) + (_1370 * _1370)) + (_1372 * _1372)) / (_1324 + 9.9999997473787516355514526367188e-06);
        float _4303 = isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0));
        float _1396 = isnan(1.0) ? _4303 : (isnan(_4303) ? 1.0 : min(_4303, 1.0));
        float _1397 = _1396 * 2.0;
        float _1401 = (1.0 - _1396) / (_1396 + 1.0);
        float _4314 = isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0));
        float _1402 = isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0));
        float _1411 = ((((1.0 - _1402) * (_1397 + 2.0)) * exp2(log2(isnan(1.0) ? _4292 : (isnan(_4292) ? 1.0 : min(_4292, 1.0))) * (_1397 + 1.0))) + _1402) * _1324;
        float _1412 = _1292 * 0.5;
        float _1413 = _1302 * 0.5;
        float _1414 = _1312 * 0.5;
        float _1415 = dot(vec3(_1412, _1413, _1414), vec3(_1412, _1413, _1414));
        float _1420 = (_1415 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1415);
        float _1428 = (dot(vec3(_941, _942, _943), vec3(_1420 * _1412, _1420 * _1413, _1420 * _1414)) + 1.0) * 0.5;
        float _4325 = isnan(0.0) ? _1428 : (isnan(_1428) ? 0.0 : max(_1428, 0.0));
        float _1437 = sqrt(((_1413 * _1413) + (_1412 * _1412)) + (_1414 * _1414)) / (_1325 + 9.9999997473787516355514526367188e-06);
        float _4336 = isnan(0.0) ? _1437 : (isnan(_1437) ? 0.0 : max(_1437, 0.0));
        float _1438 = isnan(1.0) ? _4336 : (isnan(_4336) ? 1.0 : min(_4336, 1.0));
        float _1439 = _1438 * 2.0;
        float _1443 = (1.0 - _1438) / (_1438 + 1.0);
        float _4347 = isnan(0.0) ? _1443 : (isnan(_1443) ? 0.0 : max(_1443, 0.0));
        float _1444 = isnan(1.0) ? _4347 : (isnan(_4347) ? 1.0 : min(_4347, 1.0));
        float _1453 = ((((1.0 - _1444) * (_1439 + 2.0)) * exp2(log2(isnan(1.0) ? _4325 : (isnan(_4325) ? 1.0 : min(_4325, 1.0))) * (_1439 + 1.0))) + _1444) * _1325;
        _1461 = _1292;
        _1463 = _1291;
        _1464 = _1290;
        _1465 = _1302;
        _1466 = _1301;
        _1467 = _1300;
        _1468 = _1312;
        _1469 = _1311;
        _1470 = _1310;
        _1471 = _1325;
        _1472 = _1324;
        _1473 = _1323;
        _1474 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1369 : (isnan(_1369) ? 0.0 : max(_1369, 0.0)));
        _1475 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1411 : (isnan(_1411) ? 0.0 : max(_1411, 0.0)));
        _1476 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1453 : (isnan(_1453) ? 0.0 : max(_1453, 0.0)));
    }
    else
    {
        _1461 = _1462;
        _1463 = _1462;
        _1464 = _1462;
        _1465 = _1462;
        _1466 = _1462;
        _1467 = _1462;
        _1468 = _1462;
        _1469 = _1462;
        _1470 = _1462;
        _1471 = _1462;
        _1472 = _1462;
        _1473 = _1462;
        _1474 = 0.0;
        _1475 = 0.0;
        _1476 = 0.0;
    }
    float _1768;
    float _1769;
    float _1770;
    float _1771;
    float _1772;
    float _1773;
    float _1774;
    float _1775;
    float _1776;
    float _1777;
    float _1778;
    float _1779;
    float _1780;
    float _1781;
    float _1782;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1499 = fma(_1160, cbModelParam._m0[30u].z, fma(_1156, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1152));
        float _1503 = fma(_1160, cbModelParam._m0[31u].z, fma(_1156, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1152));
        float _1507 = fma(_1160, cbModelParam._m0[32u].z, fma(_1156, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1152));
        float _1530 = _1152 + _941;
        float _1531 = _1156 + _942;
        float _1532 = _1160 + _943;
        float _1542 = fma(_1532, cbModelParam._m0[30u].z, fma(_1531, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1530)) - _1499;
        float _1543 = fma(_1532, cbModelParam._m0[31u].z, fma(_1531, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1530)) - _1503;
        float _1544 = fma(_1532, cbModelParam._m0[32u].z, fma(_1531, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1530)) - _1507;
        float _1548 = inversesqrt(dot(vec3(_1542, _1543, _1544), vec3(_1542, _1543, _1544)));
        float _1561 = ((_1548 * _1542) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1499 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1562 = ((_1548 * _1543) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1503 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1563 = ((_1548 * _1544) / cbModelParam._m0[35u].z) + ((((((_1507 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1565 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1561, _1562, _1563), 0.0);
        vec4 _1572 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1561, _1562, _1563), 0.0);
        vec4 _1579 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1561, _1562, _1563), 0.0);
        vec4 _1586 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1561, _1562, _1563), 0.0);
        float _1598 = exp2((_1565.w + (-0.5)) * 20.0) * 2.0;
        float _1599 = _1598 * (_1565.x + (-0.5));
        float _1600 = _1598 * (_1565.y + (-0.5));
        float _1601 = _1598 * (_1565.z + (-0.5));
        float _1608 = exp2((_1572.w + (-0.5)) * 20.0) * 2.0;
        float _1609 = _1608 * (_1572.x + (-0.5));
        float _1610 = _1608 * (_1572.y + (-0.5));
        float _1611 = _1608 * (_1572.z + (-0.5));
        float _1618 = exp2((_1579.w + (-0.5)) * 20.0) * 2.0;
        float _1619 = _1618 * (_1579.x + (-0.5));
        float _1620 = _1618 * (_1579.y + (-0.5));
        float _1621 = _1618 * (_1579.z + (-0.5));
        float _1628 = exp2((_1586.w + (-0.5)) * 20.0) * 2.0;
        float _1629 = _1628 * (_1586.x + (-0.5));
        float _1630 = _1628 * (_1586.y + (-0.5));
        float _1631 = _1628 * (_1586.z + (-0.5));
        float _1632 = isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0));
        float _1633 = isnan(0.0) ? _1630 : (isnan(_1630) ? 0.0 : max(_1630, 0.0));
        float _1634 = isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0));
        float _1635 = _1599 * 0.5;
        float _1636 = _1609 * 0.5;
        float _1637 = _1619 * 0.5;
        float _1638 = dot(vec3(_1635, _1636, _1637), vec3(_1635, _1636, _1637));
        float _1643 = (_1638 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1638);
        float _1651 = (dot(vec3(_941, _942, _943), vec3(_1643 * _1635, _1643 * _1636, _1643 * _1637)) + 1.0) * 0.5;
        float _4388 = isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0));
        float _1660 = sqrt(((_1636 * _1636) + (_1635 * _1635)) + (_1637 * _1637)) / (_1632 + 9.9999997473787516355514526367188e-06);
        float _4399 = isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0));
        float _1661 = isnan(1.0) ? _4399 : (isnan(_4399) ? 1.0 : min(_4399, 1.0));
        float _1662 = _1661 * 2.0;
        float _1666 = (1.0 - _1661) / (_1661 + 1.0);
        float _4410 = isnan(0.0) ? _1666 : (isnan(_1666) ? 0.0 : max(_1666, 0.0));
        float _1667 = isnan(1.0) ? _4410 : (isnan(_4410) ? 1.0 : min(_4410, 1.0));
        float _1676 = ((((1.0 - _1667) * (_1662 + 2.0)) * exp2(log2(isnan(1.0) ? _4388 : (isnan(_4388) ? 1.0 : min(_4388, 1.0))) * (_1662 + 1.0))) + _1667) * _1632;
        float _1677 = _1600 * 0.5;
        float _1678 = _1610 * 0.5;
        float _1679 = _1620 * 0.5;
        float _1680 = dot(vec3(_1677, _1678, _1679), vec3(_1677, _1678, _1679));
        float _1685 = (_1680 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1680);
        float _1693 = (dot(vec3(_941, _942, _943), vec3(_1685 * _1677, _1685 * _1678, _1685 * _1679)) + 1.0) * 0.5;
        float _4421 = isnan(0.0) ? _1693 : (isnan(_1693) ? 0.0 : max(_1693, 0.0));
        float _1702 = sqrt(((_1678 * _1678) + (_1677 * _1677)) + (_1679 * _1679)) / (_1633 + 9.9999997473787516355514526367188e-06);
        float _4432 = isnan(0.0) ? _1702 : (isnan(_1702) ? 0.0 : max(_1702, 0.0));
        float _1703 = isnan(1.0) ? _4432 : (isnan(_4432) ? 1.0 : min(_4432, 1.0));
        float _1704 = _1703 * 2.0;
        float _1708 = (1.0 - _1703) / (_1703 + 1.0);
        float _4443 = isnan(0.0) ? _1708 : (isnan(_1708) ? 0.0 : max(_1708, 0.0));
        float _1709 = isnan(1.0) ? _4443 : (isnan(_4443) ? 1.0 : min(_4443, 1.0));
        float _1718 = ((((1.0 - _1709) * (_1704 + 2.0)) * exp2(log2(isnan(1.0) ? _4421 : (isnan(_4421) ? 1.0 : min(_4421, 1.0))) * (_1704 + 1.0))) + _1709) * _1633;
        float _1719 = _1601 * 0.5;
        float _1720 = _1611 * 0.5;
        float _1721 = _1621 * 0.5;
        float _1722 = dot(vec3(_1719, _1720, _1721), vec3(_1719, _1720, _1721));
        float _1727 = (_1722 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1722);
        float _1735 = (dot(vec3(_941, _942, _943), vec3(_1727 * _1719, _1727 * _1720, _1727 * _1721)) + 1.0) * 0.5;
        float _4454 = isnan(0.0) ? _1735 : (isnan(_1735) ? 0.0 : max(_1735, 0.0));
        float _1744 = sqrt(((_1720 * _1720) + (_1719 * _1719)) + (_1721 * _1721)) / (_1634 + 9.9999997473787516355514526367188e-06);
        float _4465 = isnan(0.0) ? _1744 : (isnan(_1744) ? 0.0 : max(_1744, 0.0));
        float _1745 = isnan(1.0) ? _4465 : (isnan(_4465) ? 1.0 : min(_4465, 1.0));
        float _1746 = _1745 * 2.0;
        float _1750 = (1.0 - _1745) / (_1745 + 1.0);
        float _4476 = isnan(0.0) ? _1750 : (isnan(_1750) ? 0.0 : max(_1750, 0.0));
        float _1751 = isnan(1.0) ? _4476 : (isnan(_4476) ? 1.0 : min(_4476, 1.0));
        float _1760 = ((((1.0 - _1751) * (_1746 + 2.0)) * exp2(log2(isnan(1.0) ? _4454 : (isnan(_4454) ? 1.0 : min(_4454, 1.0))) * (_1746 + 1.0))) + _1751) * _1634;
        _1768 = _1601;
        _1769 = _1600;
        _1770 = _1599;
        _1771 = _1611;
        _1772 = _1610;
        _1773 = _1609;
        _1774 = _1621;
        _1775 = _1620;
        _1776 = _1619;
        _1777 = _1634;
        _1778 = _1633;
        _1779 = _1632;
        _1780 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1676 : (isnan(_1676) ? 0.0 : max(_1676, 0.0)));
        _1781 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1718 : (isnan(_1718) ? 0.0 : max(_1718, 0.0)));
        _1782 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1760 : (isnan(_1760) ? 0.0 : max(_1760, 0.0)));
    }
    else
    {
        _1768 = _1462;
        _1769 = _1462;
        _1770 = _1462;
        _1771 = _1462;
        _1772 = _1462;
        _1773 = _1462;
        _1774 = _1462;
        _1775 = _1462;
        _1776 = _1462;
        _1777 = _1462;
        _1778 = _1462;
        _1779 = _1462;
        _1780 = 0.0;
        _1781 = 0.0;
        _1782 = 0.0;
    }
    float _1792 = (cbModelParam._m0[1u].x * (_1780 - _1474)) + _1474;
    float _1793 = (cbModelParam._m0[1u].x * (_1781 - _1475)) + _1475;
    float _1794 = (cbModelParam._m0[1u].x * (_1782 - _1476)) + _1476;
    float _1815 = fma(_1794, cbSceneParam._m0[89u].z, fma(_1793, cbSceneParam._m0[89u].y, _1792 * cbSceneParam._m0[89u].x));
    float _1818 = fma(_1794, cbSceneParam._m0[90u].z, fma(_1793, cbSceneParam._m0[90u].y, _1792 * cbSceneParam._m0[90u].x));
    float _1821 = fma(_1794, cbSceneParam._m0[91u].z, fma(_1793, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1792));
    float _1836 = _1099 * 0.5;
    float _1837 = _1100 * 0.5;
    float _1838 = _1101 * 0.5;
    float _1839 = dot(vec4(_1836, _1837, _1838, 1.0), vec4(_1770, _1773, _1776, _1779));
    float _1842 = dot(vec4(_1836, _1837, _1838, 1.0), vec4(_1769, _1772, _1775, _1778));
    float _1845 = dot(vec4(_1836, _1837, _1838, 1.0), vec4(_1768, _1771, _1774, _1777));
    float _1879;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1852 = dot(vec4(_1836, _1837, _1838, 1.0), vec4(_1461, _1465, _1468, _1471));
        float _1856 = dot(vec4(_1836, _1837, _1838, 1.0), vec4(_1463, _1466, _1469, _1472));
        float _1860 = dot(vec4(_1836, _1837, _1838, 1.0), vec4(_1464, _1467, _1470, _1473));
        float _1867 = dot(vec4(cbModelParam._m0[39u]), vec4(_1836, _1837, _1838, 1.0));
        _1879 = dot(vec3(isnan(0.0) ? _1860 : (isnan(_1860) ? 0.0 : max(_1860, 0.0)), isnan(0.0) ? _1856 : (isnan(_1856) ? 0.0 : max(_1856, 0.0)), isnan(0.0) ? _1852 : (isnan(_1852) ? 0.0 : max(_1852, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1867) ? 0.0 : (isnan(0.0) ? _1867 : max(0.0, _1867))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1879 = 1.0;
    }
    float _1890;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1881 = dot(vec4(cbModelParam._m0[40u]), vec4(_1836, _1837, _1838, 1.0));
        _1890 = dot(vec3(isnan(0.0) ? _1839 : (isnan(_1839) ? 0.0 : max(_1839, 0.0)), isnan(0.0) ? _1842 : (isnan(_1842) ? 0.0 : max(_1842, 0.0)), isnan(0.0) ? _1845 : (isnan(_1845) ? 0.0 : max(_1845, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1881) ? 0.0 : (isnan(0.0) ? _1881 : max(0.0, _1881))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1890 = 1.0;
    }
    float _1894 = (_1890 * cbModelParam._m0[1u].x) + (_1879 * (1.0 - cbModelParam._m0[1u].x));
    float _1904 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _944);
    float _1905 = isnan(_1904) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1904 : min(cbModelParam._m0[25u].z, _1904));
    float _1985;
    float _1987;
    float _1989;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1952 = fma(_1160, cbModelParam._m0[13u].z, fma(_1156, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1152)) + cbModelParam._m0[13u].w;
        float _1956 = fma(_1160, cbModelParam._m0[14u].z, fma(_1156, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1152)) + cbModelParam._m0[14u].w;
        float _1960 = fma(_1160, cbModelParam._m0[15u].z, fma(_1156, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1152)) + cbModelParam._m0[15u].w;
        float _1963 = fma(_1101, cbModelParam._m0[13u].z, fma(_1100, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1099));
        float _1966 = fma(_1101, cbModelParam._m0[14u].z, fma(_1100, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1099));
        float _1969 = fma(_1101, cbModelParam._m0[15u].z, fma(_1100, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1099));
        float _1997;
        if (_1963 > 0.0)
        {
            _1997 = abs((1.0 - _1952) / _1963);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1963 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1952 + 1.0) / _1963);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1997 = frontier_phi_14_12_ladder;
        }
        float _2166;
        if (_1966 > 0.0)
        {
            _2166 = abs((1.0 - _1956) / _1966);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1966 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1956 + 1.0) / _1966);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2166 = frontier_phi_23_19_ladder;
        }
        float _2461;
        if (_1969 > 0.0)
        {
            _2461 = abs((1.0 - _1960) / _1969);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1969 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1960 + 1.0) / _1969);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2461 = frontier_phi_35_30_ladder;
        }
        float _2463 = isnan(_2166) ? _1997 : (isnan(_1997) ? _2166 : min(_1997, _2166));
        float _2464 = isnan(_2461) ? _2463 : (isnan(_2463) ? _2461 : min(_2463, _2461));
        float _2468 = (_2464 * _1963) + _1952;
        float _2469 = (_2464 * _1966) + _1956;
        float _2470 = (_2464 * _1969) + _1960;
        float _2471 = _2464 * 9.9999997473787516355514526367188e-05;
        float _2473 = (-1.0) - _2471;
        float _2475 = _2471 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2470 > _2475) || ((_2470 < _2473) || ((_2469 > _2475) || ((_2469 < _2473) || ((_2468 < _2473) || (_2468 > _2475))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2615 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2470, cbModelParam._m0[9u].z, fma(_2469, cbModelParam._m0[9u].y, _2468 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2470, cbModelParam._m0[10u].z, fma(_2469, cbModelParam._m0[10u].y, _2468 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2470, cbModelParam._m0[11u].z, fma(_2469, cbModelParam._m0[11u].y, _2468 * cbModelParam._m0[11u].x))), _1905);
            frontier_phi_13_35_ladder = _2615.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2615.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2615.x * cbModelParam._m0[1u].y;
        }
        _1985 = frontier_phi_13_35_ladder_2;
        _1987 = frontier_phi_13_35_ladder_1;
        _1989 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1973 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1099, _1100, _1101), _1905);
        _1985 = _1973.x * cbModelParam._m0[1u].y;
        _1987 = _1973.y * cbModelParam._m0[1u].y;
        _1989 = _1973.z * cbModelParam._m0[1u].y;
    }
    float _1993 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _944);
    float _1994 = isnan(_1993) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1993 : min(cbModelParam._m0[25u].w, _1993));
    float _2083;
    float _2085;
    float _2087;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2047 = fma(_1160, cbModelParam._m0[21u].z, fma(_1156, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1152)) + cbModelParam._m0[21u].w;
        float _2051 = fma(_1160, cbModelParam._m0[22u].z, fma(_1156, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1152)) + cbModelParam._m0[22u].w;
        float _2055 = fma(_1160, cbModelParam._m0[23u].z, fma(_1156, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1152)) + cbModelParam._m0[23u].w;
        float _2058 = fma(_1101, cbModelParam._m0[21u].z, fma(_1100, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1099));
        float _2061 = fma(_1101, cbModelParam._m0[22u].z, fma(_1100, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1099));
        float _2064 = fma(_1101, cbModelParam._m0[23u].z, fma(_1100, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1099));
        float _2171;
        if (_2058 > 0.0)
        {
            _2171 = abs((1.0 - _2047) / _2058);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2058 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2047 + 1.0) / _2058);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2171 = frontier_phi_25_21_ladder;
        }
        float _2488;
        if (_2061 > 0.0)
        {
            _2488 = abs((1.0 - _2051) / _2061);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2061 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2051 + 1.0) / _2061);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2488 = frontier_phi_37_32_ladder;
        }
        float _2815;
        if (_2064 > 0.0)
        {
            _2815 = abs((1.0 - _2055) / _2064);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2064 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2055 + 1.0) / _2064);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2815 = frontier_phi_47_44_ladder;
        }
        float _2817 = isnan(_2488) ? _2171 : (isnan(_2171) ? _2488 : min(_2171, _2488));
        float _2818 = isnan(_2815) ? _2817 : (isnan(_2817) ? _2815 : min(_2817, _2815));
        float _2822 = (_2818 * _2058) + _2047;
        float _2823 = (_2818 * _2061) + _2051;
        float _2824 = (_2818 * _2064) + _2055;
        float _2825 = _2818 * 9.9999997473787516355514526367188e-05;
        float _2826 = (-1.0) - _2825;
        float _2828 = _2825 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2824 > _2828) || ((_2824 < _2826) || ((_2823 > _2828) || ((_2823 < _2826) || ((_2822 < _2826) || (_2822 > _2828))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2942 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2824, cbModelParam._m0[17u].z, fma(_2823, cbModelParam._m0[17u].y, _2822 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2824, cbModelParam._m0[18u].z, fma(_2823, cbModelParam._m0[18u].y, _2822 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2824, cbModelParam._m0[19u].z, fma(_2823, cbModelParam._m0[19u].y, _2822 * cbModelParam._m0[19u].x))), _1994);
            frontier_phi_22_47_ladder = _2942.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2942.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2942.x * cbModelParam._m0[1u].z;
        }
        _2083 = frontier_phi_22_47_ladder_2;
        _2085 = frontier_phi_22_47_ladder_1;
        _2087 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2067 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1099, _1100, _1101), _1994);
        _2083 = _2067.x * cbModelParam._m0[1u].z;
        _2085 = _2067.y * cbModelParam._m0[1u].z;
        _2087 = _2067.z * cbModelParam._m0[1u].z;
    }
    float _2099 = ((((1.0 - _1120) * ((_1107 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1120 * _1107)) * _1091;
    float _2100 = _2099 * ((cbModelParam._m0[1u].w * (_2083 - _1985)) + _1985);
    float _2101 = _2099 * ((cbModelParam._m0[1u].w * (_2085 - _1987)) + _1987);
    float _2102 = _2099 * ((cbModelParam._m0[1u].w * (_2087 - _1989)) + _1989);
    float _2105 = fma(_2102, cbSceneParam._m0[89u].z, fma(_2101, cbSceneParam._m0[89u].y, _2100 * cbSceneParam._m0[89u].x));
    float _2108 = fma(_2102, cbSceneParam._m0[90u].z, fma(_2101, cbSceneParam._m0[90u].y, _2100 * cbSceneParam._m0[90u].x));
    float _2111 = fma(_2102, cbSceneParam._m0[91u].z, fma(_2101, cbSceneParam._m0[91u].y, _2100 * cbSceneParam._m0[91u].x));
    float _2145 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2149 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2153 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2157 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2158 = _2145 / _2157;
    float _2159 = _2149 / _2157;
    float _2160 = _2153 / _2157;
    float _2307;
    float _2308;
    float _2309;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2187 = ((uint(_2160 > cbSceneParam._m0[59u].y) + uint(_2160 > cbSceneParam._m0[59u].x)) + uint(_2160 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2188 = _2187 + 43u;
        uint _2196 = _2187 + 44u;
        uint _2204 = _2187 + 45u;
        uint _2212 = _2187 + 46u;
        float _2223 = fma(_2157, cbSceneParam._m0[_2188].w, fma(_2153, cbSceneParam._m0[_2188].z, fma(_2149, cbSceneParam._m0[_2188].y, _2145 * cbSceneParam._m0[_2188].x)));
        float _2227 = fma(_2157, cbSceneParam._m0[_2196].w, fma(_2153, cbSceneParam._m0[_2196].z, fma(_2149, cbSceneParam._m0[_2196].y, _2145 * cbSceneParam._m0[_2196].x)));
        float _2235 = fma(_2157, cbSceneParam._m0[_2212].w, fma(_2153, cbSceneParam._m0[_2212].z, fma(_2149, cbSceneParam._m0[_2212].y, _2145 * cbSceneParam._m0[_2212].x)));
        float _2240 = cbSceneParam._m0[33u].z * _2235;
        float _2242 = cbSceneParam._m0[33u].w * _2235;
        float _2245 = fma(_2157, cbSceneParam._m0[_2204].w, fma(_2153, cbSceneParam._m0[_2204].z, fma(_2149, cbSceneParam._m0[_2204].y, _2145 * cbSceneParam._m0[_2204].x))) / _2235;
        float _2293 = (cbSceneParam._m0[33u].x - sqrt(((_2159 * _2159) + (_2158 * _2158)) + (_2160 * _2160))) * cbSceneParam._m0[33u].y;
        float _4602 = isnan(0.0) ? _2293 : (isnan(_2293) ? 0.0 : max(_2293, 0.0));
        float _2300 = (isnan(1.0) ? _4602 : (isnan(_4602) ? 1.0 : min(_4602, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2240 + _2223) / _2235, (_2242 + _2227) / _2235), _2245), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2242 + _2223) / _2235, (_2227 - _2240) / _2235), _2245), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2223 - _2240) / _2235, (_2227 - _2242) / _2235), _2245), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2223 - _2242) / _2235, (_2240 + _2227) / _2235), _2245), 0.0)).x), vec4(0.25)));
        _2307 = 1.0 - (_2300 * cbSceneParam._m0[34u].x);
        _2308 = 1.0 - (_2300 * cbSceneParam._m0[34u].y);
        _2309 = 1.0 - (_2300 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2307 = 1.0;
        _2308 = 1.0;
        _2309 = 1.0;
    }
    float _2373;
    float _2375;
    float _2377;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2361 = fma(_2157, cbSceneParam._m0[63u].w, fma(_2153, cbSceneParam._m0[63u].z, fma(_2149, cbSceneParam._m0[63u].y, _2145 * cbSceneParam._m0[63u].x)));
        float _2362 = fma(_2157, cbSceneParam._m0[60u].w, fma(_2153, cbSceneParam._m0[60u].z, fma(_2149, cbSceneParam._m0[60u].y, _2145 * cbSceneParam._m0[60u].x))) / _2361;
        float _2363 = fma(_2157, cbSceneParam._m0[61u].w, fma(_2153, cbSceneParam._m0[61u].z, fma(_2149, cbSceneParam._m0[61u].y, _2145 * cbSceneParam._m0[61u].x))) / _2361;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2362 >= cbSceneParam._m0[64u].x) && (_2363 >= cbSceneParam._m0[64u].y)) && (_2362 <= cbSceneParam._m0[64u].z)) && (_2363 <= cbSceneParam._m0[64u].w))
        {
            float _2501 = fma(_2157, cbSceneParam._m0[62u].w, fma(_2153, cbSceneParam._m0[62u].z, fma(_2149, cbSceneParam._m0[62u].y, _2145 * cbSceneParam._m0[62u].x))) / _2361;
            float _2505 = isnan(cbSceneParam._m0[41u].w) ? _2501 : (isnan(_2501) ? cbSceneParam._m0[41u].w : max(_2501, cbSceneParam._m0[41u].w));
            float _2548 = (cbSceneParam._m0[33u].x - sqrt(((_2159 * _2159) + (_2158 * _2158)) + (_2160 * _2160))) * cbSceneParam._m0[33u].y;
            float _4618 = isnan(0.0) ? _2548 : (isnan(_2548) ? 0.0 : max(_2548, 0.0));
            float _2555 = (isnan(1.0) ? _4618 : (isnan(_4618) ? 1.0 : min(_4618, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2362, cbSceneParam._m0[33u].w + _2363), _2505), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2362, _2363 - cbSceneParam._m0[33u].z), _2505), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2362 - cbSceneParam._m0[33u].z, _2363 - cbSceneParam._m0[33u].w), _2505), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2362 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2363), _2505), 0.0)).x), vec4(0.25)));
            float _2559 = 1.0 - (_2555 * cbSceneParam._m0[34u].x);
            float _2560 = 1.0 - (_2555 * cbSceneParam._m0[34u].y);
            float _2561 = 1.0 - (_2555 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2561) ? _2309 : (isnan(_2309) ? _2561 : min(_2309, _2561));
            frontier_phi_34_33_ladder_1 = isnan(_2560) ? _2308 : (isnan(_2308) ? _2560 : min(_2308, _2560));
            frontier_phi_34_33_ladder_2 = isnan(_2559) ? _2307 : (isnan(_2307) ? _2559 : min(_2307, _2559));
        }
        else
        {
            frontier_phi_34_33_ladder = _2309;
            frontier_phi_34_33_ladder_1 = _2308;
            frontier_phi_34_33_ladder_2 = _2307;
        }
        _2373 = frontier_phi_34_33_ladder_2;
        _2375 = frontier_phi_34_33_ladder_1;
        _2377 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2373 = _2307;
        _2375 = _2308;
        _2377 = _2309;
    }
    uvec4 _2382 = floatBitsToUint(cbInstanceData._m0[_263 + 5u]);
    uint _2384 = _2382.x * 14u;
    uint _2385 = _2384 + 13u;
    float _2392 = _1091 + (-1.0);
    float _2397 = (cbLight._m0[_2385].x * _2392) + 1.0;
    float _2398 = (cbLight._m0[_2385].y * _2392) + 1.0;
    float _2399 = (cbLight._m0[_2385].z * _2392) + 1.0;
    float _2400 = (cbLight._m0[_2385].w * _2392) + 1.0;
    uint _2401 = _2384 + 5u;
    float _2407 = isnan(1.0) ? _2398 : (isnan(_2398) ? 1.0 : min(_2398, 1.0));
    uint _2411 = _2384 + 4u;
    float _2420 = isnan(1.0) ? _2397 : (isnan(_2397) ? 1.0 : min(_2397, 1.0));
    uint _2424 = _2384 | 1u;
    float _2435 = dot(vec3(cbLight._m0[_2384].xyz), vec3(_941, _942, _943));
    float _2438 = dot(vec3(cbLight._m0[_2424].xyz), vec3(_941, _942, _943));
    float _4654 = isnan(0.0) ? _2435 : (isnan(_2435) ? 0.0 : max(_2435, 0.0));
    float _4665 = isnan(0.0) ? _2438 : (isnan(_2438) ? 0.0 : max(_2438, 0.0));
    float _2443 = (isnan(1.0) ? _4654 : (isnan(_4654) ? 1.0 : min(_4654, 1.0))) * 0.3183098733425140380859375;
    float _2445 = (isnan(1.0) ? _4665 : (isnan(_4665) ? 1.0 : min(_4665, 1.0))) * 0.3183098733425140380859375;
    float _2452 = ((cbLight._m0[_2401].x * _2407) * _2445) + (((cbLight._m0[_2411].x * _2373) * _2420) * _2443);
    float _2453 = ((_2407 * cbLight._m0[_2401].y) * _2445) + (((cbLight._m0[_2411].y * _2375) * _2420) * _2443);
    float _2454 = ((_2407 * cbLight._m0[_2401].z) * _2445) + (((cbLight._m0[_2411].z * _2377) * _2420) * _2443);
    uvec4 _2458 = floatBitsToUint(cbLight._m0[_2384 + 12u]);
    bool _2460 = _2458.x == 0u;
    float _2562;
    float _2564;
    float _2566;
    if (_2460)
    {
        _2562 = _2452;
        _2564 = _2453;
        _2566 = _2454;
    }
    else
    {
        uint _2570 = _2384 + 6u;
        float _2586 = (dot(vec3(cbLight._m0[_2384 + 2u].xyz), vec3(_941, _942, _943)) * 0.5) + 0.5;
        float _2587 = _2586 * _2586;
        float _4676 = isnan(0.0) ? _2587 : (isnan(_2587) ? 0.0 : max(_2587, 0.0));
        float _2588 = isnan(1.0) ? _4676 : (isnan(_4676) ? 1.0 : min(_4676, 1.0));
        float _2589 = isnan(1.0) ? _2399 : (isnan(_2399) ? 1.0 : min(_2399, 1.0));
        _2562 = (((cbLight._m0[_2570].x * 0.3183098733425140380859375) * _2588) * _2589) + _2452;
        _2564 = (((cbLight._m0[_2570].y * 0.3183098733425140380859375) * _2588) * _2589) + _2453;
        _2566 = (((cbLight._m0[_2570].z * 0.3183098733425140380859375) * _2588) * _2589) + _2454;
    }
    bool _2569 = _2458.y == 0u;
    float _2624;
    float _2626;
    float _2628;
    if (_2569)
    {
        _2624 = _2562;
        _2626 = _2564;
        _2628 = _2566;
    }
    else
    {
        uint _2786 = _2384 + 7u;
        float _2802 = (dot(vec3(cbLight._m0[_2384 + 3u].xyz), vec3(_941, _942, _943)) * 0.5) + 0.5;
        float _2803 = _2802 * _2802;
        float _4692 = isnan(0.0) ? _2803 : (isnan(_2803) ? 0.0 : max(_2803, 0.0));
        float _2804 = isnan(1.0) ? _4692 : (isnan(_4692) ? 1.0 : min(_4692, 1.0));
        float _2805 = isnan(1.0) ? _2400 : (isnan(_2400) ? 1.0 : min(_2400, 1.0));
        _2624 = (((cbLight._m0[_2786].x * 0.3183098733425140380859375) * _2804) * _2805) + _2562;
        _2626 = (((cbLight._m0[_2786].y * 0.3183098733425140380859375) * _2804) * _2805) + _2564;
        _2628 = (((cbLight._m0[_2786].z * 0.3183098733425140380859375) * _2804) * _2805) + _2566;
    }
    uint _2631 = _2384 + 8u;
    float _2644 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2384].w)) * _944) * 0.949999988079071044921875);
    float _2645 = _2644 * _2644;
    float _2646 = cbLight._m0[_2384].x + _1020;
    float _2647 = cbLight._m0[_2384].y + _1021;
    float _2648 = cbLight._m0[_2384].z + _1022;
    float _2652 = inversesqrt(dot(vec3(_2646, _2647, _2648), vec3(_2646, _2647, _2648)));
    float _2653 = _2652 * _2646;
    float _2654 = _2652 * _2647;
    float _2655 = _2652 * _2648;
    float _2656 = dot(vec3(_941, _942, _943), vec3(cbLight._m0[_2384].xyz));
    float _4708 = isnan(0.0) ? _2656 : (isnan(_2656) ? 0.0 : max(_2656, 0.0));
    float _2659 = isnan(1.0) ? _4708 : (isnan(_4708) ? 1.0 : min(_4708, 1.0));
    float _4719 = isnan(0.0) ? _1092 : (isnan(_1092) ? 0.0 : max(_1092, 0.0));
    float _2660 = isnan(1.0) ? _4719 : (isnan(_4719) ? 1.0 : min(_4719, 1.0));
    float _2661 = dot(vec3(_941, _942, _943), vec3(_2653, _2654, _2655));
    float _4730 = isnan(0.0) ? _2661 : (isnan(_2661) ? 0.0 : max(_2661, 0.0));
    float _2664 = isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0));
    float _2665 = dot(vec3(cbLight._m0[_2384].xyz), vec3(_2653, _2654, _2655));
    float _4741 = isnan(0.0) ? _2665 : (isnan(_2665) ? 0.0 : max(_2665, 0.0));
    float _2669 = _2645 * _2645;
    float _2673 = ((_2664 * _2664) * (_2669 + (-1.0))) + 1.0;
    float _2684 = (exp2(log2(1.0 - (isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2685 = 1.0 - _2645;
    float _2696 = (0.5 / (((_2660 * ((_2659 * _2685) + _2645)) + 9.9999999392252902907785028219223e-09) + (((_2660 * _2685) + _2645) * _2659))) * _2659;
    float _4752 = isnan(0.0) ? _2696 : (isnan(_2696) ? 0.0 : max(_2696, 0.0));
    float _2698 = (isnan(1.0) ? _4752 : (isnan(_4752) ? 1.0 : min(_4752, 1.0))) * (_2669 / ((_2673 * _2673) * 3.141590118408203125));
    uint _2712 = _2384 + 9u;
    float _2723 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2424].w)) * _944) * 0.949999988079071044921875);
    float _2724 = _2723 * _2723;
    float _2725 = cbLight._m0[_2424].x + _1020;
    float _2726 = cbLight._m0[_2424].y + _1021;
    float _2727 = cbLight._m0[_2424].z + _1022;
    float _2731 = inversesqrt(dot(vec3(_2725, _2726, _2727), vec3(_2725, _2726, _2727)));
    float _2732 = _2731 * _2725;
    float _2733 = _2731 * _2726;
    float _2734 = _2731 * _2727;
    float _2735 = dot(vec3(_941, _942, _943), vec3(cbLight._m0[_2424].xyz));
    float _4763 = isnan(0.0) ? _2735 : (isnan(_2735) ? 0.0 : max(_2735, 0.0));
    float _2738 = isnan(1.0) ? _4763 : (isnan(_4763) ? 1.0 : min(_4763, 1.0));
    float _2739 = dot(vec3(_941, _942, _943), vec3(_2732, _2733, _2734));
    float _4774 = isnan(0.0) ? _2739 : (isnan(_2739) ? 0.0 : max(_2739, 0.0));
    float _2742 = isnan(1.0) ? _4774 : (isnan(_4774) ? 1.0 : min(_4774, 1.0));
    float _2743 = dot(vec3(cbLight._m0[_2424].xyz), vec3(_2732, _2733, _2734));
    float _4785 = isnan(0.0) ? _2743 : (isnan(_2743) ? 0.0 : max(_2743, 0.0));
    float _2747 = _2724 * _2724;
    float _2751 = ((_2742 * _2742) * (_2747 + (-1.0))) + 1.0;
    float _2760 = (exp2(log2(1.0 - (isnan(1.0) ? _4785 : (isnan(_4785) ? 1.0 : min(_4785, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2761 = 1.0 - _2724;
    float _2771 = (0.5 / (((_2660 * ((_2738 * _2761) + _2724)) + 9.9999999392252902907785028219223e-09) + (((_2660 * _2761) + _2724) * _2738))) * _2738;
    float _4796 = isnan(0.0) ? _2771 : (isnan(_2771) ? 0.0 : max(_2771, 0.0));
    float _2773 = (isnan(1.0) ? _4796 : (isnan(_4796) ? 1.0 : min(_4796, 1.0))) * (_2747 / ((_2751 * _2751) * 3.141590118408203125));
    float _2783 = (((_2760 * cbLight._m0[_2712].x) * _2773) * _2407) + ((((cbLight._m0[_2631].x * _2373) * _2684) * _2698) * _2420);
    float _2784 = (((_2760 * cbLight._m0[_2712].y) * _2773) * _2407) + ((((cbLight._m0[_2631].y * _2375) * _2684) * _2698) * _2420);
    float _2785 = (((_2760 * cbLight._m0[_2712].z) * _2773) * _2407) + ((((cbLight._m0[_2631].z * _2377) * _2684) * _2698) * _2420);
    float _2841;
    float _2843;
    float _2845;
    if (_2460)
    {
        _2841 = _2783;
        _2843 = _2784;
        _2845 = _2785;
    }
    else
    {
        uint _2847 = _2384 + 2u;
        uint _2851 = _2384 + 10u;
        float _2865 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2847].w)) * _944) * 0.949999988079071044921875);
        float _2866 = _2865 * _2865;
        float _2867 = cbLight._m0[_2847].x + _1020;
        float _2868 = cbLight._m0[_2847].y + _1021;
        float _2869 = cbLight._m0[_2847].z + _1022;
        float _2873 = inversesqrt(dot(vec3(_2867, _2868, _2869), vec3(_2867, _2868, _2869)));
        float _2874 = _2873 * _2867;
        float _2875 = _2873 * _2868;
        float _2876 = _2873 * _2869;
        float _2877 = dot(vec3(_941, _942, _943), vec3(cbLight._m0[_2847].xyz));
        float _4807 = isnan(0.0) ? _2877 : (isnan(_2877) ? 0.0 : max(_2877, 0.0));
        float _2880 = isnan(1.0) ? _4807 : (isnan(_4807) ? 1.0 : min(_4807, 1.0));
        float _2881 = dot(vec3(_941, _942, _943), vec3(_2874, _2875, _2876));
        float _4818 = isnan(0.0) ? _2881 : (isnan(_2881) ? 0.0 : max(_2881, 0.0));
        float _2884 = isnan(1.0) ? _4818 : (isnan(_4818) ? 1.0 : min(_4818, 1.0));
        float _2885 = dot(vec3(cbLight._m0[_2847].xyz), vec3(_2874, _2875, _2876));
        float _4829 = isnan(0.0) ? _2885 : (isnan(_2885) ? 0.0 : max(_2885, 0.0));
        float _2889 = _2866 * _2866;
        float _2893 = ((_2884 * _2884) * (_2889 + (-1.0))) + 1.0;
        float _2902 = (exp2(log2(1.0 - (isnan(1.0) ? _4829 : (isnan(_4829) ? 1.0 : min(_4829, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2903 = 1.0 - _2866;
        float _2913 = (0.5 / (((_2660 * ((_2880 * _2903) + _2866)) + 9.9999999392252902907785028219223e-09) + (((_2660 * _2903) + _2866) * _2880))) * _2880;
        float _4840 = isnan(0.0) ? _2913 : (isnan(_2913) ? 0.0 : max(_2913, 0.0));
        float _2915 = (isnan(1.0) ? _4840 : (isnan(_4840) ? 1.0 : min(_4840, 1.0))) * (_2889 / ((_2893 * _2893) * 3.141590118408203125));
        float _2916 = isnan(1.0) ? _2399 : (isnan(_2399) ? 1.0 : min(_2399, 1.0));
        _2841 = (((_2902 * cbLight._m0[_2851].x) * _2915) * _2916) + _2783;
        _2843 = (((_2902 * cbLight._m0[_2851].y) * _2915) * _2916) + _2784;
        _2845 = (((_2902 * cbLight._m0[_2851].z) * _2915) * _2916) + _2785;
    }
    float _2947;
    float _2949;
    float _2951;
    if (_2569)
    {
        _2947 = _2841;
        _2949 = _2843;
        _2951 = _2845;
    }
    else
    {
        uint _2958 = _2384 + 3u;
        uint _2962 = _2384 + 11u;
        float _2976 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2958].w)) * _944) * 0.949999988079071044921875);
        float _2977 = _2976 * _2976;
        float _2978 = cbLight._m0[_2958].x + _1020;
        float _2979 = cbLight._m0[_2958].y + _1021;
        float _2980 = cbLight._m0[_2958].z + _1022;
        float _2984 = inversesqrt(dot(vec3(_2978, _2979, _2980), vec3(_2978, _2979, _2980)));
        float _2985 = _2984 * _2978;
        float _2986 = _2984 * _2979;
        float _2987 = _2984 * _2980;
        float _2988 = dot(vec3(_941, _942, _943), vec3(cbLight._m0[_2958].xyz));
        float _4856 = isnan(0.0) ? _2988 : (isnan(_2988) ? 0.0 : max(_2988, 0.0));
        float _2991 = isnan(1.0) ? _4856 : (isnan(_4856) ? 1.0 : min(_4856, 1.0));
        float _2992 = dot(vec3(_941, _942, _943), vec3(_2985, _2986, _2987));
        float _4867 = isnan(0.0) ? _2992 : (isnan(_2992) ? 0.0 : max(_2992, 0.0));
        float _2995 = isnan(1.0) ? _4867 : (isnan(_4867) ? 1.0 : min(_4867, 1.0));
        float _2996 = dot(vec3(cbLight._m0[_2958].xyz), vec3(_2985, _2986, _2987));
        float _4878 = isnan(0.0) ? _2996 : (isnan(_2996) ? 0.0 : max(_2996, 0.0));
        float _3000 = _2977 * _2977;
        float _3004 = ((_2995 * _2995) * (_3000 + (-1.0))) + 1.0;
        float _3013 = (exp2(log2(1.0 - (isnan(1.0) ? _4878 : (isnan(_4878) ? 1.0 : min(_4878, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3014 = 1.0 - _2977;
        float _3024 = (0.5 / (((_2660 * ((_2991 * _3014) + _2977)) + 9.9999999392252902907785028219223e-09) + (((_2660 * _3014) + _2977) * _2991))) * _2991;
        float _4889 = isnan(0.0) ? _3024 : (isnan(_3024) ? 0.0 : max(_3024, 0.0));
        float _3026 = (isnan(1.0) ? _4889 : (isnan(_4889) ? 1.0 : min(_4889, 1.0))) * (_3000 / ((_3004 * _3004) * 3.141590118408203125));
        float _3027 = isnan(1.0) ? _2400 : (isnan(_2400) ? 1.0 : min(_2400, 1.0));
        _2947 = (((_3013 * cbLight._m0[_2962].x) * _3026) * _3027) + _2841;
        _2949 = (((_3013 * cbLight._m0[_2962].y) * _3026) * _3027) + _2843;
        _2951 = (((_3013 * cbLight._m0[_2962].z) * _3026) * _3027) + _2845;
    }
    float _3093;
    float _3095;
    float _3097;
    float _3099;
    float _3101;
    float _3103;
    if (_2382.y == 0u)
    {
        uvec4 _3048 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3049 = _3048.x;
        uint _3060 = uint((float(_3048.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1029) / _3049))) + floor(float(uint(cbSceneParam._m0[85u].x * _1028) / _3049)));
        float _3070 = (log2(_2160 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3071 = isnan(0.0) ? _3070 : (isnan(_3070) ? 0.0 : max(_3070, 0.0));
        uint _3074 = uint(isnan(14.0) ? _3071 : (isnan(_3071) ? 14.0 : min(_3071, 14.0)));
        uvec4 _3079 = texelFetch(g_lightClusterGridBuffer, int(((_3074 << 2u) + (_3060 << 6u)) >> 2u));
        uint _3080 = _3079.x;
        uint _3081 = _3048.z;
        float _3160;
        float _3162;
        float _3164;
        float _3166;
        float _3168;
        float _3170;
        if (((((1u << ((_3081 >> 4u) & 15u)) + 4294967295u) & _3080) == 0u) || ((_3081 & 240u) == 0u))
        {
            _3160 = 0.0;
            _3162 = 0.0;
            _3164 = 0.0;
            _3166 = 0.0;
            _3168 = 0.0;
            _3170 = 0.0;
        }
        else
        {
            float _3161;
            float _3163;
            float _3165;
            float _3167;
            float _3169;
            float _3171;
            float _3305 = 0.0;
            float _3306 = 0.0;
            float _3307 = 0.0;
            float _3308 = 0.0;
            float _3309 = 0.0;
            float _3310 = 0.0;
            uint _3311 = 0u;
            uint _3320;
            bool _3321;
            for (;;)
            {
                _3320 = texelFetch(g_lightClassification, int((((_3074 << 5u) + (_3060 << 9u)) + (_3311 << 2u)) >> 2u)).x;
                _3321 = _3320 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3321)
                {
                    frontier_phi_66_pred = _3310;
                    frontier_phi_66_pred_1 = _3309;
                    frontier_phi_66_pred_2 = _3308;
                    frontier_phi_66_pred_3 = _3307;
                    frontier_phi_66_pred_4 = _3306;
                    frontier_phi_66_pred_5 = _3305;
                }
                else
                {
                    float _3429;
                    float _3430;
                    float _3431;
                    float _3432;
                    float _3433;
                    float _3434;
                    uint _3435;
                    _3429 = _3305;
                    _3430 = _3306;
                    _3431 = _3307;
                    _3432 = _3308;
                    _3433 = _3309;
                    _3434 = _3310;
                    _3435 = _3320;
                    float _3361;
                    float _3362;
                    float _3363;
                    float _3364;
                    float _3365;
                    float _3366;
                    for (;;)
                    {
                        uint _3439 = uint(findLSB(_3435)) + (_3311 << 5u);
                        uint _3436 = (_3435 + 4294967295u) & _3435;
                        uint _3441 = _3439 * 48u;
                        vec4 _3455 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3441)).x, texelFetch(g_PointLightRenderingBuffer, int(_3441 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3441 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3441 + 3u)).x));
                        uint _3461 = (_3439 * 48u) + 4u;
                        vec4 _3474 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3461)).x, texelFetch(g_PointLightRenderingBuffer, int(_3461 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3461 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3461 + 3u)).x));
                        uint _3480 = (_3439 * 48u) + 8u;
                        vec3 _3491 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3480)).x, texelFetch(g_PointLightRenderingBuffer, int(_3480 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3480 + 2u)).x));
                        float _3495 = _3455.x - _2158;
                        float _3496 = _3455.y - _2159;
                        float _3497 = _3455.z - _2160;
                        float _3498 = dot(vec3(_3495, _3496, _3497), vec3(_3495, _3496, _3497));
                        float _3501 = inversesqrt(_3498);
                        float _3502 = _3501 * _3495;
                        float _3503 = _3501 * _3496;
                        float _3504 = _3501 * _3497;
                        float _3505 = dot(vec3(_1047, _1050, _1053), vec3(_3502, _3503, _3504));
                        float _3510 = 1.0 - (_3498 * _3455.w);
                        float _4915 = isnan(0.0) ? _3510 : (isnan(_3510) ? 0.0 : max(_3510, 0.0));
                        float _3511 = isnan(1.0) ? _4915 : (isnan(_4915) ? 1.0 : min(_4915, 1.0));
                        float _3512 = sqrt(_3498) * _3474.w;
                        float _3515 = 1.39999997615814208984375 / (_3512 + 1.39999997615814208984375);
                        float _3516 = _3515 * _3515;
                        float _3519 = ((1.0 - _3516) * _3505) + _3516;
                        float _3522 = _3512 * _3512;
                        float _3526 = ((isnan(0.0) ? _3519 : (isnan(_3519) ? 0.0 : max(_3519, 0.0))) * _3511) / ((_3522 * 0.699999988079071044921875) + 1.0);
                        float _3530 = (-0.0) - _2158;
                        float _3531 = (-0.0) - _2159;
                        float _3532 = (-0.0) - _2160;
                        float _3536 = inversesqrt(dot(vec3(_3530, _3531, _3532), vec3(_3530, _3531, _3532)));
                        float _3537 = _3536 * _3530;
                        float _3538 = _3536 * _3531;
                        float _3539 = _3536 * _3532;
                        float _3546 = exp2(log2(1.0 / ((_3522 * 3.5) + 5.0)) * 0.25);
                        float _3547 = 1.0 - _1107;
                        float _3554 = sqrt(1.0 - ((1.0 - (_3547 * _3547)) * (1.0 - (_3546 * _3546))));
                        float _3555 = _3554 * _3554;
                        float _3556 = _3555 * _3555;
                        float _3557 = _3537 + _3502;
                        float _3558 = _3538 + _3503;
                        float _3559 = _3539 + _3504;
                        float _3563 = inversesqrt(dot(vec3(_3557, _3558, _3559), vec3(_3557, _3558, _3559)));
                        float _3567 = dot(vec3(_1047, _1050, _1053), vec3(_3537, _3538, _3539));
                        float _4931 = isnan(0.0) ? _3567 : (isnan(_3567) ? 0.0 : max(_3567, 0.0));
                        float _3570 = isnan(1.0) ? _4931 : (isnan(_4931) ? 1.0 : min(_4931, 1.0));
                        float _3571 = dot(vec3(_1047, _1050, _1053), vec3(_3563 * _3557, _3563 * _3558, _3563 * _3559));
                        float _4942 = isnan(0.0) ? _3571 : (isnan(_3571) ? 0.0 : max(_3571, 0.0));
                        float _3574 = isnan(1.0) ? _4942 : (isnan(_4942) ? 1.0 : min(_4942, 1.0));
                        float _3578 = ((_3574 * _3574) * (_3556 + (-1.0))) + 1.0;
                        float _3579 = _3515 * _3555;
                        float _3580 = _3579 * _3579;
                        float _3583 = ((1.0 - _3580) * _3505) + _3580;
                        float _4953 = isnan(0.0) ? _3583 : (isnan(_3583) ? 0.0 : max(_3583, 0.0));
                        float _3584 = isnan(1.0) ? _4953 : (isnan(_4953) ? 1.0 : min(_4953, 1.0));
                        float _3585 = 1.0 - _3555;
                        float _3595 = (0.5 / (((_3584 * ((_3570 * _3585) + _3555)) + 9.9999999392252902907785028219223e-09) + (((_3584 * _3585) + _3555) * _3570))) * _3584;
                        float _4964 = isnan(0.0) ? _3595 : (isnan(_3595) ? 0.0 : max(_3595, 0.0));
                        float _3606 = (((_3556 * 3.1415927410125732421875) * (isnan(1.0) ? _4964 : (isnan(_4964) ? 1.0 : min(_4964, 1.0)))) / ((_3578 * _3578) * ((_3522 * 2.1991131305694580078125) + 3.141590118408203125))) * _3511;
                        _3364 = (_3526 * _3474.x) + _3432;
                        _3365 = (_3526 * _3474.y) + _3433;
                        _3366 = (_3526 * _3474.z) + _3434;
                        _3361 = (_3606 * _3491.x) + _3429;
                        _3362 = (_3606 * _3491.y) + _3430;
                        _3363 = (_3606 * _3491.z) + _3431;
                        if (_3436 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3429 = _3361;
                            _3430 = _3362;
                            _3431 = _3363;
                            _3432 = _3364;
                            _3433 = _3365;
                            _3434 = _3366;
                            _3435 = _3436;
                        }
                    }
                    frontier_phi_66_pred = _3366;
                    frontier_phi_66_pred_1 = _3365;
                    frontier_phi_66_pred_2 = _3364;
                    frontier_phi_66_pred_3 = _3363;
                    frontier_phi_66_pred_4 = _3362;
                    frontier_phi_66_pred_5 = _3361;
                }
                _3171 = frontier_phi_66_pred;
                _3169 = frontier_phi_66_pred_1;
                _3167 = frontier_phi_66_pred_2;
                _3165 = frontier_phi_66_pred_3;
                _3163 = frontier_phi_66_pred_4;
                _3161 = frontier_phi_66_pred_5;
                uint _3312 = _3311 + 1u;
                if (_3312 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3305 = _3161;
                    _3306 = _3163;
                    _3307 = _3165;
                    _3308 = _3167;
                    _3309 = _3169;
                    _3310 = _3171;
                    _3311 = _3312;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3160 = _3161;
            _3162 = _3163;
            _3164 = _3165;
            _3166 = _3167;
            _3168 = _3169;
            _3170 = _3171;
        }
        uvec4 _3174 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3175 = _3174.z;
        uint _3177 = (_3175 >> 8u) & 15u;
        float _3273;
        float _3275;
        float _3277;
        float _3279;
        float _3281;
        float _3283;
        if (((4294967295u << _3177) & _3080) == 0u)
        {
            _3273 = _3160;
            _3275 = _3162;
            _3277 = _3164;
            _3279 = _3166;
            _3281 = _3168;
            _3283 = _3170;
        }
        else
        {
            float _3298 = inversesqrt(dot(vec3(_2158, _2159, _2160), vec3(_2158, _2159, _2160)));
            float _3299 = _3298 * _2158;
            float _3300 = _3298 * _2159;
            float _3301 = _3298 * _2160;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3177 < ((_3175 >> 12u) & 15u))
            {
                float _3274;
                float _3276;
                float _3278;
                float _3280;
                float _3282;
                float _3284;
                float _3412 = _3160;
                float _3413 = _3162;
                float _3414 = _3164;
                float _3415 = _3166;
                float _3416 = _3168;
                float _3417 = _3170;
                uint _3418 = _3177;
                uint _3427;
                bool _3428;
                for (;;)
                {
                    _3427 = texelFetch(g_lightClassification, int((((_3074 << 5u) + (_3060 << 9u)) + (_3418 << 2u)) >> 2u)).x;
                    _3428 = _3427 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3428)
                    {
                        frontier_phi_72_pred = _3417;
                        frontier_phi_72_pred_1 = _3416;
                        frontier_phi_72_pred_2 = _3415;
                        frontier_phi_72_pred_3 = _3414;
                        frontier_phi_72_pred_4 = _3413;
                        frontier_phi_72_pred_5 = _3412;
                    }
                    else
                    {
                        float _3611;
                        float _3612;
                        float _3613;
                        float _3614;
                        float _3615;
                        float _3616;
                        float _3904;
                        float _3905;
                        float _3906;
                        float _3907;
                        float _3908;
                        float _3909;
                        float _3624 = _3412;
                        float _3625 = _3413;
                        float _3626 = _3414;
                        float _3627 = _3415;
                        float _3628 = _3416;
                        float _3629 = _3417;
                        uint _3630 = _3427;
                        uint _3631;
                        vec4 _3656;
                        float _3657;
                        vec4 _3672;
                        vec3 _3684;
                        vec4 _3699;
                        vec4 _3714;
                        float _3760;
                        bool _3761;
                        for (;;)
                        {
                            uint _3641 = ((_3418 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3630));
                            _3631 = (_3630 + 4294967295u) & _3630;
                            uint _3643 = _3641 * 40u;
                            _3656 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3643)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3643 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3643 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3643 + 3u)).x));
                            _3657 = _3656.w;
                            uint _3659 = (_3641 * 40u) + 4u;
                            _3672 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3659)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3659 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3659 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3659 + 3u)).x));
                            uint _3674 = (_3641 * 40u) + 8u;
                            _3684 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3674)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3674 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3674 + 2u)).x));
                            uint _3686 = (_3641 * 40u) + 16u;
                            _3699 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3686)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3686 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3686 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3686 + 3u)).x));
                            uint _3701 = (_3641 * 40u) + 20u;
                            _3714 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3701)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3701 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3701 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3701 + 3u)).x));
                            uint _3716 = (_3641 * 40u) + 24u;
                            vec4 _3729 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3716)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3716 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3716 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3716 + 3u)).x));
                            uint _3735 = (_3641 * 40u) + 28u;
                            vec4 _3748 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3735)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3735 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3735 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3735 + 3u)).x));
                            _3760 = fma(_2160, _3748.z, fma(_2159, _3748.y, _3748.x * _2158)) + _3748.w;
                            _3761 = !((fma(_2160, _3729.z, fma(_2159, _3729.y, _3729.x * _2158)) + _3729.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3761)
                            {
                                float _3788 = _3656.x - _2158;
                                float _3789 = _3656.y - _2159;
                                float _3790 = _3656.z - _2160;
                                float _3791 = dot(vec3(_3788, _3789, _3790), vec3(_3788, _3789, _3790));
                                float _3794 = inversesqrt(_3791);
                                float _3795 = _3794 * _3788;
                                float _3796 = _3794 * _3789;
                                float _3797 = _3794 * _3790;
                                float _3801 = 1.0 - (_3791 / (_3657 * _3657));
                                float _4975 = isnan(0.0) ? _3801 : (isnan(_3801) ? 0.0 : max(_3801, 0.0));
                                float _3802 = isnan(1.0) ? _4975 : (isnan(_4975) ? 1.0 : min(_4975, 1.0));
                                float _3806 = sqrt(_3791) * _3672.w;
                                float _3808 = 1.39999997615814208984375 / (_3806 + 1.39999997615814208984375);
                                float _3809 = _3808 * _3808;
                                float _3812 = ((1.0 - _3809) * dot(vec3(_3795, _3796, _3797), vec3(_1047, _1050, _1053))) + _3809;
                                float _3815 = _3806 * _3806;
                                float _3819 = (fma(_2160, _3699.z, fma(_2159, _3699.y, _3699.x * _2158)) + _3699.w) / _3760;
                                float _3820 = (fma(_2160, _3714.z, fma(_2159, _3714.y, _3714.x * _2158)) + _3714.w) / _3760;
                                float _3824 = 1.0 - dot(vec2(_3819, _3820), vec2(_3819, _3820));
                                float _4991 = isnan(0.0) ? _3824 : (isnan(_3824) ? 0.0 : max(_3824, 0.0));
                                float _3825 = isnan(1.0) ? _4991 : (isnan(_4991) ? 1.0 : min(_4991, 1.0));
                                float _3826 = _3825 * (((isnan(0.0) ? _3812 : (isnan(_3812) ? 0.0 : max(_3812, 0.0))) * _3802) / ((_3815 * 0.699999988079071044921875) + 1.0));
                                float _3838 = exp2(log2(1.0 / ((_3815 * 3.5) + 5.0)) * 0.25);
                                float _3839 = 1.0 - _1107;
                                float _3846 = sqrt(1.0 - ((1.0 - (_3839 * _3839)) * (1.0 - (_3838 * _3838))));
                                float _3847 = _3846 * _3846;
                                float _3848 = _3847 * _3847;
                                float _3849 = _3795 - _3299;
                                float _3850 = _3796 - _3300;
                                float _3851 = _3797 - _3301;
                                float _3855 = inversesqrt(dot(vec3(_3849, _3850, _3851), vec3(_3849, _3850, _3851)));
                                float _3859 = dot(vec3(_1047, _1050, _1053), vec3((-0.0) - _3299, (-0.0) - _3300, (-0.0) - _3301));
                                float _5002 = isnan(0.0) ? _3859 : (isnan(_3859) ? 0.0 : max(_3859, 0.0));
                                float _3862 = isnan(1.0) ? _5002 : (isnan(_5002) ? 1.0 : min(_5002, 1.0));
                                float _3863 = dot(vec3(_1047, _1050, _1053), vec3(_3855 * _3849, _3855 * _3850, _3855 * _3851));
                                float _5013 = isnan(0.0) ? _3863 : (isnan(_3863) ? 0.0 : max(_3863, 0.0));
                                float _3866 = isnan(1.0) ? _5013 : (isnan(_5013) ? 1.0 : min(_5013, 1.0));
                                float _3870 = ((_3866 * _3866) * (_3848 + (-1.0))) + 1.0;
                                float _3871 = _3808 * _3847;
                                float _3872 = _3871 * _3871;
                                float _3878 = ((1.0 - _3872) * dot(vec3(_1047, _1050, _1053), vec3(_3795, _3796, _3797))) + _3872;
                                float _5024 = isnan(0.0) ? _3878 : (isnan(_3878) ? 0.0 : max(_3878, 0.0));
                                float _3879 = isnan(1.0) ? _5024 : (isnan(_5024) ? 1.0 : min(_5024, 1.0));
                                float _3880 = 1.0 - _3847;
                                float _3890 = (0.5 / (((_3879 * ((_3862 * _3880) + _3847)) + 9.9999999392252902907785028219223e-09) + (((_3879 * _3880) + _3847) * _3862))) * _3879;
                                float _5035 = isnan(0.0) ? _3890 : (isnan(_3890) ? 0.0 : max(_3890, 0.0));
                                float _3900 = (_3825 * _3802) * (((_3848 * 3.1415927410125732421875) * (isnan(1.0) ? _5035 : (isnan(_5035) ? 1.0 : min(_5035, 1.0)))) / ((_3870 * _3870) * ((_3815 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3826 * _3672.y;
                                frontier_phi_78_pred_1 = _3826 * _3672.x;
                                frontier_phi_78_pred_2 = _3900 * _3684.z;
                                frontier_phi_78_pred_3 = _3900 * _3684.y;
                                frontier_phi_78_pred_4 = _3900 * _3684.x;
                                frontier_phi_78_pred_5 = _3826 * _3672.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3908 = frontier_phi_78_pred;
                            _3907 = frontier_phi_78_pred_1;
                            _3906 = frontier_phi_78_pred_2;
                            _3905 = frontier_phi_78_pred_3;
                            _3904 = frontier_phi_78_pred_4;
                            _3909 = frontier_phi_78_pred_5;
                            _3614 = _3907 + _3627;
                            _3615 = _3908 + _3628;
                            _3616 = _3909 + _3629;
                            _3611 = _3904 + _3624;
                            _3612 = _3905 + _3625;
                            _3613 = _3906 + _3626;
                            if (_3631 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3624 = _3611;
                                _3625 = _3612;
                                _3626 = _3613;
                                _3627 = _3614;
                                _3628 = _3615;
                                _3629 = _3616;
                                _3630 = _3631;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3616;
                        frontier_phi_72_pred_1 = _3615;
                        frontier_phi_72_pred_2 = _3614;
                        frontier_phi_72_pred_3 = _3613;
                        frontier_phi_72_pred_4 = _3612;
                        frontier_phi_72_pred_5 = _3611;
                    }
                    _3284 = frontier_phi_72_pred;
                    _3282 = frontier_phi_72_pred_1;
                    _3280 = frontier_phi_72_pred_2;
                    _3278 = frontier_phi_72_pred_3;
                    _3276 = frontier_phi_72_pred_4;
                    _3274 = frontier_phi_72_pred_5;
                    uint _3419 = _3418 + 1u;
                    if (_3419 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3412 = _3274;
                        _3413 = _3276;
                        _3414 = _3278;
                        _3415 = _3280;
                        _3416 = _3282;
                        _3417 = _3284;
                        _3418 = _3419;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3284;
                frontier_phi_60_61_ladder_1 = _3282;
                frontier_phi_60_61_ladder_2 = _3278;
                frontier_phi_60_61_ladder_3 = _3276;
                frontier_phi_60_61_ladder_4 = _3274;
                frontier_phi_60_61_ladder_5 = _3280;
            }
            else
            {
                frontier_phi_60_61_ladder = _3170;
                frontier_phi_60_61_ladder_1 = _3168;
                frontier_phi_60_61_ladder_2 = _3164;
                frontier_phi_60_61_ladder_3 = _3162;
                frontier_phi_60_61_ladder_4 = _3160;
                frontier_phi_60_61_ladder_5 = _3166;
            }
            _3273 = frontier_phi_60_61_ladder_4;
            _3275 = frontier_phi_60_61_ladder_3;
            _3277 = frontier_phi_60_61_ladder_2;
            _3279 = frontier_phi_60_61_ladder_5;
            _3281 = frontier_phi_60_61_ladder_1;
            _3283 = frontier_phi_60_61_ladder;
        }
        float _3288 = isnan(1.0) ? _1091 : (isnan(_1091) ? 1.0 : min(_1091, 1.0));
        _3093 = (_3288 * _3279) + _2624;
        _3095 = (_3288 * _3281) + _2626;
        _3097 = (_3288 * _3283) + _2628;
        _3099 = ((_3273 * 0.039999999105930328369140625) * _3288) + _2947;
        _3101 = ((_3275 * 0.039999999105930328369140625) * _3288) + _2949;
        _3103 = ((_3277 * 0.039999999105930328369140625) * _3288) + _2951;
    }
    else
    {
        _3093 = _2624;
        _3095 = _2626;
        _3097 = _2628;
        _3099 = _2947;
        _3101 = _2949;
        _3103 = _2951;
    }
    float _5051 = isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : max(_1076, 0.0));
    float _5062 = isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0));
    float _5073 = isnan(0.0) ? _1078 : (isnan(_1078) ? 0.0 : max(_1078, 0.0));
    uint _3123 = _263 + 6u;
    float _3131 = _1028 / cbSceneParam._m0[86u].x;
    float _3132 = _1029 / cbSceneParam._m0[86u].y;
    vec4 _3146 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3131, _3132, (log2((isnan(cbSceneParam._m0[77u].w) ? _962 : (isnan(_962) ? cbSceneParam._m0[77u].w : min(_962, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3148 = _3146.x;
    float _3149 = _3146.y;
    float _3150 = _3146.z;
    float _3151 = _3146.w;
    float _3223;
    float _3225;
    float _3227;
    float _3229;
    if (_962 > cbSceneParam._m0[78u].w)
    {
        float _3185 = isnan(_962) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _962 : min(cbSceneParam._m0[80u].w, _962));
        float _3186 = _3185 / _962;
        float _3197 = _3186 * _1013;
        float _3198 = _1014 * _3186;
        float _3199 = (-0.0) - _3198;
        float _3201 = _3186 * _1015;
        float _3203 = (cbSceneParam._m0[77u].w * _3199) / _3185;
        float _3204 = _3203 + cbSceneParam._m0[79u].w;
        float _3205 = cbSceneParam._m0[79u].w - _3198;
        float _3211 = sqrt(((_3197 * _3197) + (_3198 * _3198)) + (_3201 * _3201));
        float _3214 = (1.0 - (cbSceneParam._m0[77u].w / _3185)) * _3211;
        float _3219 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3221 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3374;
        if (abs((_3199 - _3203) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3374 = ((((_3204 > 0.0) ? exp2(_3219 * _3204) : (2.0 - exp2(_3221 * _3204))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3214;
        }
        else
        {
            float _3334 = 1.0 / cbSceneParam._m0[80u].x;
            float _3335 = isnan(_3205) ? _3204 : (isnan(_3204) ? _3205 : max(_3204, _3205));
            float _3336 = isnan(_3205) ? _3204 : (isnan(_3204) ? _3205 : min(_3204, _3205));
            float _3345 = isnan(0.0) ? _3335 : (isnan(_3335) ? 0.0 : min(_3335, 0.0));
            float _3346 = isnan(0.0) ? _3336 : (isnan(_3336) ? 0.0 : min(_3336, 0.0));
            _3374 = ((abs(_3211 / _3199) * cbSceneParam._m0[80u].y) * ((((_3345 - _3346) * 2.0) - ((exp2(_3219 * (isnan(0.0) ? _3335 : (isnan(_3335) ? 0.0 : max(_3335, 0.0)))) - exp2(_3219 * (isnan(0.0) ? _3336 : (isnan(_3336) ? 0.0 : max(_3336, 0.0))))) * _3334)) - ((exp2(_3221 * _3345) - exp2(_3221 * _3346)) * _3334))) + (_3214 * cbSceneParam._m0[80u].z);
        }
        vec4 _3376 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3131, _3132, 1.0), 0.0);
        float _3385 = exp2((_3374 * (-1.44269502162933349609375)) * (1.0 - _3376.w));
        float _3386 = log2(_3385);
        float _3402 = log2(_3151);
        _3223 = (exp2(_3402 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3386 * cbSceneParam._m0[78u].x)) * _3376.x) / cbSceneParam._m0[78u].x)) + _3148;
        _3225 = (exp2(_3402 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3386 * cbSceneParam._m0[78u].y)) * _3376.y) / cbSceneParam._m0[78u].y)) + _3149;
        _3227 = (exp2(_3402 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3386 * cbSceneParam._m0[78u].z)) * _3376.z) / cbSceneParam._m0[78u].z)) + _3150;
        _3229 = _3385 * _3151;
    }
    else
    {
        _3223 = _3148;
        _3225 = _3149;
        _3227 = _3150;
        _3229 = _3151;
    }
    float _3241 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3242 = _3241 == 3.0;
    float _3243 = log2(_3229);
    float _3250 = exp2(_3243 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5051 : (isnan(_5051) ? 1.0 : min(_5051, 1.0))) * (_3093 + ((isnan(0.0) ? _1815 : (isnan(_1815) ? 0.0 : max(_1815, 0.0))) * _1091))) + ((_3099 + ((isnan(0.0) ? _2105 : (isnan(_2105) ? 0.0 : max(_2105, 0.0))) * _1894)) * cbPerFrame._m0[3u].x));
    float _3251 = exp2(_3243 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5062 : (isnan(_5062) ? 1.0 : min(_5062, 1.0))) * (_3095 + ((isnan(0.0) ? _1818 : (isnan(_1818) ? 0.0 : max(_1818, 0.0))) * _1091))) + ((_3101 + ((isnan(0.0) ? _2108 : (isnan(_2108) ? 0.0 : max(_2108, 0.0))) * _1894)) * cbPerFrame._m0[3u].x));
    float _3252 = exp2(_3243 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5073 : (isnan(_5073) ? 1.0 : min(_5073, 1.0))) * (_3097 + ((isnan(0.0) ? _1821 : (isnan(_1821) ? 0.0 : max(_1821, 0.0))) * _1091))) + ((_3103 + ((isnan(0.0) ? _2111 : (isnan(_2111) ? 0.0 : max(_2111, 0.0))) * _1894)) * cbPerFrame._m0[3u].x));
    float _3261 = (_3241 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3261 * (_3242 ? _3250 : (_3250 + (cbSceneParam._m0[72u].w * _3223)));
    SV_Target.y = _3261 * (_3242 ? _3251 : (_3251 + (cbSceneParam._m0[72u].w * _3225)));
    SV_Target.z = _3261 * (_3242 ? _3252 : (_3252 + (cbSceneParam._m0[72u].w * _3227)));
    SV_Target.w = cbInstanceData._m0[_3123].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3123].w;
}


