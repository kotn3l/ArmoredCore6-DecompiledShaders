#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1495;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _237 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _238 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _239 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _245 = inversesqrt(dot(vec3(_237, _238, _239), vec3(_237, _238, _239)));
    float _252 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _259 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _265 = uint(roundEven(NORMAL.w)) * 13u;
    uint _270 = _265 + 1u;
    uint _274 = _265 + 2u;
    float _283 = sqrt(((cbInstanceData._m0[_270].x * cbInstanceData._m0[_270].x) + (cbInstanceData._m0[_265].x * cbInstanceData._m0[_265].x)) + (cbInstanceData._m0[_274].x * cbInstanceData._m0[_274].x));
    float _284 = _283 * TEXCOORD.z;
    float _285 = _283 * TEXCOORD.w;
    vec4 _304 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _328 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _333 = _328.x * cbMtdParam._m0[11u].x;
    float _334 = _328.y * cbMtdParam._m0[11u].y;
    float _335 = _328.z * cbMtdParam._m0[11u].z;
    vec4 _354 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _284) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _285) + cbTextureTilingScale._m0[5u].w));
    vec4 _373 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _413 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _415 = _413.x;
    float _427 = dot(vec4(_415, _413.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _444 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _373.x) * 2.0) - ((((_415 - _427) * cbMtdParam._m0[24u].z) + _427) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4080 = isnan(0.0) ? _444 : (isnan(_444) ? 0.0 : max(_444, 0.0));
    float _445 = isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0));
    float _452 = (_445 * ((_354.x * cbMtdParam._m0[12u].x) - _333)) + _333;
    float _453 = (_445 * ((_354.y * cbMtdParam._m0[12u].y) - _334)) + _334;
    float _454 = (_445 * ((_354.z * cbMtdParam._m0[12u].z) - _335)) + _335;
    vec4 _471 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _284) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _285) + cbTextureTilingScale._m0[3u].w));
    vec4 _491 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _493 = _491.x;
    float _503 = dot(vec4(_493, _491.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _517 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _373.y) * 2.0) - ((((_493 - _503) * cbMtdParam._m0[24u].z) + _503) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4091 = isnan(0.0) ? _517 : (isnan(_517) ? 0.0 : max(_517, 0.0));
    float _518 = isnan(1.0) ? _4091 : (isnan(_4091) ? 1.0 : min(_4091, 1.0));
    float _525 = (_518 * ((_471.x * cbMtdParam._m0[13u].x) - _452)) + _452;
    float _526 = (_518 * ((_471.y * cbMtdParam._m0[13u].y) - _453)) + _453;
    float _527 = (_518 * ((_471.z * cbMtdParam._m0[13u].z) - _454)) + _454;
    vec4 _545 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _284) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _285) + cbTextureTilingScale._m0[24u].w));
    vec4 _562 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _564 = _562.x;
    float _574 = dot(vec4(_564, _562.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _586 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _373.z) * 2.0) - ((((_564 - _574) * cbMtdParam._m0[24u].z) + _574) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4102 = isnan(0.0) ? _586 : (isnan(_586) ? 0.0 : max(_586, 0.0));
    float _587 = isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0));
    float _600 = ((cbMtdParam._m0[9u].x * 4.55000019073486328125) * _304.x) * ((_587 * ((_545.x * cbMtdParam._m0[14u].x) - _525)) + _525);
    float _603 = ((cbMtdParam._m0[9u].y * 4.55000019073486328125) * _304.y) * ((_587 * ((_545.y * cbMtdParam._m0[14u].y) - _526)) + _526);
    float _606 = ((cbMtdParam._m0[9u].z * 4.55000019073486328125) * _304.z) * ((_587 * ((_545.z * cbMtdParam._m0[14u].z) - _527)) + _527);
    vec4 _624 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _284) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _285) + cbTextureTilingScale._m0[14u].w));
    vec4 _644 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _284) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _285) + cbTextureTilingScale._m0[4u].w));
    vec4 _661 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _663 = _661.x;
    float _664 = _661.y;
    float _665 = _661.z;
    float _672 = ((_644.x - _663) * _445) + _663;
    float _673 = ((_644.y - _664) * _445) + _664;
    float _674 = ((_644.z - _665) * _445) + _665;
    vec4 _686 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _284) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _285) + cbTextureTilingScale._m0[2u].w));
    float _697 = ((_686.x - _672) * _518) + _672;
    float _698 = ((_686.y - _673) * _518) + _673;
    float _699 = ((_686.z - _674) * _518) + _674;
    vec4 _711 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _284) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _285) + cbTextureTilingScale._m0[23u].w));
    float _724 = ((_711.z - _699) * _587) + _699;
    float _727 = ((((_711.x - _697) * _587) + _697) * 2.0) + (-1.0);
    float _729 = ((((_711.y - _698) * _587) + _698) * 2.0) + (-1.0);
    float _730 = dot(vec2(_727, _729), vec2(_727, _729));
    float _4113 = isnan(0.0) ? _730 : (isnan(_730) ? 0.0 : max(_730, 0.0));
    float _735 = sqrt(1.0 - (isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0))));
    vec4 _749 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _774 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _284) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _285) + cbTextureTilingScale._m0[11u].w));
    float _776 = _774.x;
    float _777 = 1.0 - _776;
    float _783 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _786 = ((isnan(0.0) ? _783 : (isnan(_783) ? 0.0 : min(_783, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _795 = (_786 - ((((((_776 - _777) * cbMtdParam._m0[24u].w) + _777) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _786))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4134 = isnan(0.0) ? _795 : (isnan(_795) ? 0.0 : max(_795, 0.0));
    float _796 = isnan(1.0) ? _4134 : (isnan(_4134) ? 1.0 : min(_4134, 1.0));
    float _803 = (_796 * ((_624.x * cbMtdParam._m0[18u].x) - _600)) + _600;
    float _804 = (_796 * ((_624.y * cbMtdParam._m0[18u].y) - _603)) + _603;
    float _805 = (_796 * ((_624.z * cbMtdParam._m0[18u].z) - _606)) + _606;
    vec4 _817 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _284) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _285) + cbTextureTilingScale._m0[19u].w));
    float _819 = _817.x;
    float _820 = 1.0 - _819;
    float _847 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_819 - _820) * cbMtdParam._m0[24u].y) + _820) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4145 = isnan(0.0) ? _847 : (isnan(_847) ? 0.0 : max(_847, 0.0));
    float _848 = isnan(1.0) ? _4145 : (isnan(_4145) ? 1.0 : min(_4145, 1.0));
    float _856 = ((((cbMtdParam._m0[10u].x - _803) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _848) + _803;
    float _857 = ((((cbMtdParam._m0[10u].y - _804) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _848) + _804;
    float _858 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _805)) * _848) + _805;
    float _862 = (cbMtdParam._m0[19u].w * (_749.z - _724)) + _724;
    vec4 _876 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _284) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _285) + cbTextureTilingScale._m0[15u].w));
    float _883 = (_876.x * 2.0) + (-1.0);
    float _884 = (_876.y * 2.0) + (-1.0);
    float _885 = dot(vec2(_883, _884), vec2(_883, _884));
    float _4156 = isnan(0.0) ? _885 : (isnan(_885) ? 0.0 : max(_885, 0.0));
    float _893 = (_796 * (_876.z - _862)) + _862;
    float _896 = ((cbMtdParam._m0[23u].y - _893) * _848) + _893;
    vec4 _915 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _284) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _285) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _921 = (_915.x * 2.0) + (-1.0);
    float _922 = (_915.y * 2.0) + (-1.0);
    float _923 = dot(vec2(_921, _922), vec2(_921, _922));
    float _4167 = isnan(0.0) ? _923 : (isnan(_923) ? 0.0 : max(_923, 0.0));
    float _931 = (((_749.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _727;
    float _932 = (((_749.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _729;
    float _944 = (((_883 - _931) + (cbMtdParam._m0[21u].x * _931)) * _796) + _931;
    float _945 = (((_884 - _932) + (cbMtdParam._m0[21u].x * _932)) * _796) + _932;
    float _946 = (_796 * (sqrt(1.0 - (isnan(1.0) ? _4156 : (isnan(_4156) ? 1.0 : min(_4156, 1.0)))) - _735)) + _735;
    float _957 = (((_921 - _944) + (_944 * cbMtdParam._m0[22u].z)) * _848) + _944;
    float _958 = (((_922 - _945) + (_945 * cbMtdParam._m0[22u].z)) * _848) + _945;
    float _959 = ((sqrt(1.0 - (isnan(1.0) ? _4167 : (isnan(_4167) ? 1.0 : min(_4167, 1.0)))) - _946) * _848) + _946;
    float _961 = cbMtdParam._m0[22u].x + _749.w;
    float _964 = fma(_959, _252 * NORMAL.x, fma(_958, _259 * TANGENT.x, (_245 * _237) * _957));
    float _967 = fma(_959, _252 * NORMAL.y, fma(_958, _259 * TANGENT.y, (_245 * _238) * _957));
    float _970 = fma(_959, _252 * NORMAL.z, fma(_958, _259 * TANGENT.z, (_245 * _239) * _957));
    float _974 = inversesqrt(dot(vec3(_964, _967, _970), vec3(_964, _967, _970)));
    float _975 = _974 * _964;
    float _976 = _974 * _967;
    float _977 = _974 * _970;
    float _4178 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
    float _978 = isnan(1.0) ? _4178 : (isnan(_4178) ? 1.0 : min(_4178, 1.0));
    float _4189 = isnan(0.0) ? _961 : (isnan(_961) ? 0.0 : max(_961, 0.0));
    float _4200 = isnan(0.0) ? _856 : (isnan(_856) ? 0.0 : max(_856, 0.0));
    float _4211 = isnan(0.0) ? _857 : (isnan(_857) ? 0.0 : max(_857, 0.0));
    float _4222 = isnan(0.0) ? _858 : (isnan(_858) ? 0.0 : max(_858, 0.0));
    float _996 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1036 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1046 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1036);
    float _1047 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1036);
    float _1048 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1036);
    float _1052 = inversesqrt(dot(vec3(_1046, _1047, _1048), vec3(_1046, _1047, _1048)));
    float _1053 = _1046 * _1052;
    float _1054 = _1047 * _1052;
    float _1055 = _1048 * _1052;
    float _1061 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1062 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1080 = fma(_977, cbSceneParam._m0[5u].z, fma(_976, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _975));
    float _1083 = fma(_977, cbSceneParam._m0[6u].z, fma(_976, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _975));
    float _1086 = fma(_977, cbSceneParam._m0[7u].z, fma(_976, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _975));
    uint _1100 = (_265 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1106 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4200 : (isnan(_4200) ? 1.0 : min(_4200, 1.0)))) * cbInstanceData._m0[_1100].x;
    float _1107 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4211 : (isnan(_4211) ? 1.0 : min(_4211, 1.0)))) * cbInstanceData._m0[_1100].y;
    float _1108 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4222 : (isnan(_4222) ? 1.0 : min(_4222, 1.0)))) * cbInstanceData._m0[_1100].z;
    float _4233 = isnan(0.0) ? _1106 : (isnan(_1106) ? 0.0 : max(_1106, 0.0));
    float _1109 = isnan(1.0) ? _4233 : (isnan(_4233) ? 1.0 : min(_4233, 1.0));
    float _4244 = isnan(0.0) ? _1107 : (isnan(_1107) ? 0.0 : max(_1107, 0.0));
    float _1110 = isnan(1.0) ? _4244 : (isnan(_4244) ? 1.0 : min(_4244, 1.0));
    float _4255 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
    float _1111 = isnan(1.0) ? _4255 : (isnan(_4255) ? 1.0 : min(_4255, 1.0));
    vec4 _1120 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1061, cbSceneParam._m0[86u].y * _1062));
    float _1124 = ((isnan(1.0) ? _4189 : (isnan(_4189) ? 1.0 : min(_4189, 1.0))) * TEXCOORD_5.w) * _1120.x;
    float _1125 = dot(vec3(_975, _976, _977), vec3(_1053, _1054, _1055));
    float _1128 = _1125 * 2.0;
    float _1132 = (_1128 * _975) - _1053;
    float _1133 = (_1128 * _976) - _1054;
    float _1134 = (_1128 * _977) - _1055;
    float _1138 = abs(dot(vec3(_1053, _1054, _1055), vec3(_975, _976, _977)));
    float _4266 = isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0));
    float _1140 = sqrt(_978);
    float _1153 = exp2((_1140 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4266 : (isnan(_4266) ? 1.0 : min(_4266, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1140 * 3.0));
    float _1185 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1189 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1193 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1494;
    float _1496;
    float _1497;
    float _1498;
    float _1499;
    float _1500;
    float _1501;
    float _1502;
    float _1503;
    float _1504;
    float _1505;
    float _1506;
    float _1507;
    float _1508;
    float _1509;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1219 = fma(_1193, cbModelParam._m0[26u].z, fma(_1189, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1185));
        float _1223 = fma(_1193, cbModelParam._m0[27u].z, fma(_1189, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1185));
        float _1227 = fma(_1193, cbModelParam._m0[28u].z, fma(_1189, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1185));
        float _1252 = _1185 + _975;
        float _1253 = _1189 + _976;
        float _1254 = _1193 + _977;
        float _1264 = fma(_1254, cbModelParam._m0[26u].z, fma(_1253, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1252)) - _1219;
        float _1265 = fma(_1254, cbModelParam._m0[27u].z, fma(_1253, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1252)) - _1223;
        float _1266 = fma(_1254, cbModelParam._m0[28u].z, fma(_1253, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1252)) - _1227;
        float _1270 = inversesqrt(dot(vec3(_1264, _1265, _1266), vec3(_1264, _1265, _1266)));
        float _1283 = ((_1270 * _1264) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1219 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1284 = ((_1270 * _1265) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1223 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1285 = ((_1270 * _1266) / cbModelParam._m0[34u].z) + ((((((_1227 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1288 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1283, _1284, _1285), 0.0);
        vec4 _1295 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1283, _1284, _1285), 0.0);
        vec4 _1302 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1283, _1284, _1285), 0.0);
        vec4 _1309 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1283, _1284, _1285), 0.0);
        float _1322 = exp2((_1288.w + (-0.5)) * 20.0) * 2.0;
        float _1323 = _1322 * (_1288.x + (-0.5));
        float _1324 = _1322 * (_1288.y + (-0.5));
        float _1325 = _1322 * (_1288.z + (-0.5));
        float _1332 = exp2((_1295.w + (-0.5)) * 20.0) * 2.0;
        float _1333 = _1332 * (_1295.x + (-0.5));
        float _1334 = _1332 * (_1295.y + (-0.5));
        float _1335 = _1332 * (_1295.z + (-0.5));
        float _1342 = exp2((_1302.w + (-0.5)) * 20.0) * 2.0;
        float _1343 = _1342 * (_1302.x + (-0.5));
        float _1344 = _1342 * (_1302.y + (-0.5));
        float _1345 = _1342 * (_1302.z + (-0.5));
        float _1352 = exp2((_1309.w + (-0.5)) * 20.0) * 2.0;
        float _1353 = _1352 * (_1309.x + (-0.5));
        float _1354 = _1352 * (_1309.y + (-0.5));
        float _1355 = _1352 * (_1309.z + (-0.5));
        float _1356 = isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0));
        float _1357 = isnan(0.0) ? _1354 : (isnan(_1354) ? 0.0 : max(_1354, 0.0));
        float _1358 = isnan(0.0) ? _1355 : (isnan(_1355) ? 0.0 : max(_1355, 0.0));
        float _1359 = _1323 * 0.5;
        float _1360 = _1333 * 0.5;
        float _1361 = _1343 * 0.5;
        float _1362 = dot(vec3(_1359, _1360, _1361), vec3(_1359, _1360, _1361));
        float _1367 = (_1362 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1362);
        float _1376 = (dot(vec3(_975, _976, _977), vec3(_1367 * _1359, _1367 * _1360, _1367 * _1361)) + 1.0) * 0.5;
        float _4292 = isnan(0.0) ? _1376 : (isnan(_1376) ? 0.0 : max(_1376, 0.0));
        float _1386 = sqrt(((_1360 * _1360) + (_1359 * _1359)) + (_1361 * _1361)) / (_1356 + 9.9999997473787516355514526367188e-06);
        float _4303 = isnan(0.0) ? _1386 : (isnan(_1386) ? 0.0 : max(_1386, 0.0));
        float _1387 = isnan(1.0) ? _4303 : (isnan(_4303) ? 1.0 : min(_4303, 1.0));
        float _1388 = _1387 * 2.0;
        float _1392 = (1.0 - _1387) / (_1387 + 1.0);
        float _4314 = isnan(0.0) ? _1392 : (isnan(_1392) ? 0.0 : max(_1392, 0.0));
        float _1393 = isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0));
        float _1402 = ((((1.0 - _1393) * (_1388 + 2.0)) * exp2(log2(isnan(1.0) ? _4292 : (isnan(_4292) ? 1.0 : min(_4292, 1.0))) * (_1388 + 1.0))) + _1393) * _1356;
        float _1403 = _1324 * 0.5;
        float _1404 = _1334 * 0.5;
        float _1405 = _1344 * 0.5;
        float _1406 = dot(vec3(_1403, _1404, _1405), vec3(_1403, _1404, _1405));
        float _1411 = (_1406 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1406);
        float _1419 = (dot(vec3(_975, _976, _977), vec3(_1411 * _1403, _1411 * _1404, _1411 * _1405)) + 1.0) * 0.5;
        float _4325 = isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0));
        float _1428 = sqrt(((_1404 * _1404) + (_1403 * _1403)) + (_1405 * _1405)) / (_1357 + 9.9999997473787516355514526367188e-06);
        float _4336 = isnan(0.0) ? _1428 : (isnan(_1428) ? 0.0 : max(_1428, 0.0));
        float _1429 = isnan(1.0) ? _4336 : (isnan(_4336) ? 1.0 : min(_4336, 1.0));
        float _1430 = _1429 * 2.0;
        float _1434 = (1.0 - _1429) / (_1429 + 1.0);
        float _4347 = isnan(0.0) ? _1434 : (isnan(_1434) ? 0.0 : max(_1434, 0.0));
        float _1435 = isnan(1.0) ? _4347 : (isnan(_4347) ? 1.0 : min(_4347, 1.0));
        float _1444 = ((((1.0 - _1435) * (_1430 + 2.0)) * exp2(log2(isnan(1.0) ? _4325 : (isnan(_4325) ? 1.0 : min(_4325, 1.0))) * (_1430 + 1.0))) + _1435) * _1357;
        float _1445 = _1325 * 0.5;
        float _1446 = _1335 * 0.5;
        float _1447 = _1345 * 0.5;
        float _1448 = dot(vec3(_1445, _1446, _1447), vec3(_1445, _1446, _1447));
        float _1453 = (_1448 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1448);
        float _1461 = (dot(vec3(_975, _976, _977), vec3(_1453 * _1445, _1453 * _1446, _1453 * _1447)) + 1.0) * 0.5;
        float _4358 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0));
        float _1470 = sqrt(((_1446 * _1446) + (_1445 * _1445)) + (_1447 * _1447)) / (_1358 + 9.9999997473787516355514526367188e-06);
        float _4369 = isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0));
        float _1471 = isnan(1.0) ? _4369 : (isnan(_4369) ? 1.0 : min(_4369, 1.0));
        float _1472 = _1471 * 2.0;
        float _1476 = (1.0 - _1471) / (_1471 + 1.0);
        float _4380 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
        float _1477 = isnan(1.0) ? _4380 : (isnan(_4380) ? 1.0 : min(_4380, 1.0));
        float _1486 = ((((1.0 - _1477) * (_1472 + 2.0)) * exp2(log2(isnan(1.0) ? _4358 : (isnan(_4358) ? 1.0 : min(_4358, 1.0))) * (_1472 + 1.0))) + _1477) * _1358;
        _1494 = _1325;
        _1496 = _1324;
        _1497 = _1323;
        _1498 = _1335;
        _1499 = _1334;
        _1500 = _1333;
        _1501 = _1345;
        _1502 = _1344;
        _1503 = _1343;
        _1504 = _1358;
        _1505 = _1357;
        _1506 = _1356;
        _1507 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0)));
        _1508 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0)));
        _1509 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0)));
    }
    else
    {
        _1494 = _1495;
        _1496 = _1495;
        _1497 = _1495;
        _1498 = _1495;
        _1499 = _1495;
        _1500 = _1495;
        _1501 = _1495;
        _1502 = _1495;
        _1503 = _1495;
        _1504 = _1495;
        _1505 = _1495;
        _1506 = _1495;
        _1507 = 0.0;
        _1508 = 0.0;
        _1509 = 0.0;
    }
    float _1801;
    float _1802;
    float _1803;
    float _1804;
    float _1805;
    float _1806;
    float _1807;
    float _1808;
    float _1809;
    float _1810;
    float _1811;
    float _1812;
    float _1813;
    float _1814;
    float _1815;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1532 = fma(_1193, cbModelParam._m0[30u].z, fma(_1189, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1185));
        float _1536 = fma(_1193, cbModelParam._m0[31u].z, fma(_1189, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1185));
        float _1540 = fma(_1193, cbModelParam._m0[32u].z, fma(_1189, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1185));
        float _1563 = _1185 + _975;
        float _1564 = _1189 + _976;
        float _1565 = _1193 + _977;
        float _1575 = fma(_1565, cbModelParam._m0[30u].z, fma(_1564, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1563)) - _1532;
        float _1576 = fma(_1565, cbModelParam._m0[31u].z, fma(_1564, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1563)) - _1536;
        float _1577 = fma(_1565, cbModelParam._m0[32u].z, fma(_1564, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1563)) - _1540;
        float _1581 = inversesqrt(dot(vec3(_1575, _1576, _1577), vec3(_1575, _1576, _1577)));
        float _1594 = ((_1581 * _1575) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1532 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1595 = ((_1581 * _1576) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1536 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1596 = ((_1581 * _1577) / cbModelParam._m0[35u].z) + ((((((_1540 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1598 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1594, _1595, _1596), 0.0);
        vec4 _1605 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1594, _1595, _1596), 0.0);
        vec4 _1612 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1594, _1595, _1596), 0.0);
        vec4 _1619 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1594, _1595, _1596), 0.0);
        float _1631 = exp2((_1598.w + (-0.5)) * 20.0) * 2.0;
        float _1632 = _1631 * (_1598.x + (-0.5));
        float _1633 = _1631 * (_1598.y + (-0.5));
        float _1634 = _1631 * (_1598.z + (-0.5));
        float _1641 = exp2((_1605.w + (-0.5)) * 20.0) * 2.0;
        float _1642 = _1641 * (_1605.x + (-0.5));
        float _1643 = _1641 * (_1605.y + (-0.5));
        float _1644 = _1641 * (_1605.z + (-0.5));
        float _1651 = exp2((_1612.w + (-0.5)) * 20.0) * 2.0;
        float _1652 = _1651 * (_1612.x + (-0.5));
        float _1653 = _1651 * (_1612.y + (-0.5));
        float _1654 = _1651 * (_1612.z + (-0.5));
        float _1661 = exp2((_1619.w + (-0.5)) * 20.0) * 2.0;
        float _1662 = _1661 * (_1619.x + (-0.5));
        float _1663 = _1661 * (_1619.y + (-0.5));
        float _1664 = _1661 * (_1619.z + (-0.5));
        float _1665 = isnan(0.0) ? _1662 : (isnan(_1662) ? 0.0 : max(_1662, 0.0));
        float _1666 = isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0));
        float _1667 = isnan(0.0) ? _1664 : (isnan(_1664) ? 0.0 : max(_1664, 0.0));
        float _1668 = _1632 * 0.5;
        float _1669 = _1642 * 0.5;
        float _1670 = _1652 * 0.5;
        float _1671 = dot(vec3(_1668, _1669, _1670), vec3(_1668, _1669, _1670));
        float _1676 = (_1671 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1671);
        float _1684 = (dot(vec3(_975, _976, _977), vec3(_1676 * _1668, _1676 * _1669, _1676 * _1670)) + 1.0) * 0.5;
        float _4421 = isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0));
        float _1693 = sqrt(((_1669 * _1669) + (_1668 * _1668)) + (_1670 * _1670)) / (_1665 + 9.9999997473787516355514526367188e-06);
        float _4432 = isnan(0.0) ? _1693 : (isnan(_1693) ? 0.0 : max(_1693, 0.0));
        float _1694 = isnan(1.0) ? _4432 : (isnan(_4432) ? 1.0 : min(_4432, 1.0));
        float _1695 = _1694 * 2.0;
        float _1699 = (1.0 - _1694) / (_1694 + 1.0);
        float _4443 = isnan(0.0) ? _1699 : (isnan(_1699) ? 0.0 : max(_1699, 0.0));
        float _1700 = isnan(1.0) ? _4443 : (isnan(_4443) ? 1.0 : min(_4443, 1.0));
        float _1709 = ((((1.0 - _1700) * (_1695 + 2.0)) * exp2(log2(isnan(1.0) ? _4421 : (isnan(_4421) ? 1.0 : min(_4421, 1.0))) * (_1695 + 1.0))) + _1700) * _1665;
        float _1710 = _1633 * 0.5;
        float _1711 = _1643 * 0.5;
        float _1712 = _1653 * 0.5;
        float _1713 = dot(vec3(_1710, _1711, _1712), vec3(_1710, _1711, _1712));
        float _1718 = (_1713 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1713);
        float _1726 = (dot(vec3(_975, _976, _977), vec3(_1718 * _1710, _1718 * _1711, _1718 * _1712)) + 1.0) * 0.5;
        float _4454 = isnan(0.0) ? _1726 : (isnan(_1726) ? 0.0 : max(_1726, 0.0));
        float _1735 = sqrt(((_1711 * _1711) + (_1710 * _1710)) + (_1712 * _1712)) / (_1666 + 9.9999997473787516355514526367188e-06);
        float _4465 = isnan(0.0) ? _1735 : (isnan(_1735) ? 0.0 : max(_1735, 0.0));
        float _1736 = isnan(1.0) ? _4465 : (isnan(_4465) ? 1.0 : min(_4465, 1.0));
        float _1737 = _1736 * 2.0;
        float _1741 = (1.0 - _1736) / (_1736 + 1.0);
        float _4476 = isnan(0.0) ? _1741 : (isnan(_1741) ? 0.0 : max(_1741, 0.0));
        float _1742 = isnan(1.0) ? _4476 : (isnan(_4476) ? 1.0 : min(_4476, 1.0));
        float _1751 = ((((1.0 - _1742) * (_1737 + 2.0)) * exp2(log2(isnan(1.0) ? _4454 : (isnan(_4454) ? 1.0 : min(_4454, 1.0))) * (_1737 + 1.0))) + _1742) * _1666;
        float _1752 = _1634 * 0.5;
        float _1753 = _1644 * 0.5;
        float _1754 = _1654 * 0.5;
        float _1755 = dot(vec3(_1752, _1753, _1754), vec3(_1752, _1753, _1754));
        float _1760 = (_1755 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1755);
        float _1768 = (dot(vec3(_975, _976, _977), vec3(_1760 * _1752, _1760 * _1753, _1760 * _1754)) + 1.0) * 0.5;
        float _4487 = isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0));
        float _1777 = sqrt(((_1753 * _1753) + (_1752 * _1752)) + (_1754 * _1754)) / (_1667 + 9.9999997473787516355514526367188e-06);
        float _4498 = isnan(0.0) ? _1777 : (isnan(_1777) ? 0.0 : max(_1777, 0.0));
        float _1778 = isnan(1.0) ? _4498 : (isnan(_4498) ? 1.0 : min(_4498, 1.0));
        float _1779 = _1778 * 2.0;
        float _1783 = (1.0 - _1778) / (_1778 + 1.0);
        float _4509 = isnan(0.0) ? _1783 : (isnan(_1783) ? 0.0 : max(_1783, 0.0));
        float _1784 = isnan(1.0) ? _4509 : (isnan(_4509) ? 1.0 : min(_4509, 1.0));
        float _1793 = ((((1.0 - _1784) * (_1779 + 2.0)) * exp2(log2(isnan(1.0) ? _4487 : (isnan(_4487) ? 1.0 : min(_4487, 1.0))) * (_1779 + 1.0))) + _1784) * _1667;
        _1801 = _1634;
        _1802 = _1633;
        _1803 = _1632;
        _1804 = _1644;
        _1805 = _1643;
        _1806 = _1642;
        _1807 = _1654;
        _1808 = _1653;
        _1809 = _1652;
        _1810 = _1667;
        _1811 = _1666;
        _1812 = _1665;
        _1813 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1709 : (isnan(_1709) ? 0.0 : max(_1709, 0.0)));
        _1814 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0)));
        _1815 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1793 : (isnan(_1793) ? 0.0 : max(_1793, 0.0)));
    }
    else
    {
        _1801 = _1495;
        _1802 = _1495;
        _1803 = _1495;
        _1804 = _1495;
        _1805 = _1495;
        _1806 = _1495;
        _1807 = _1495;
        _1808 = _1495;
        _1809 = _1495;
        _1810 = _1495;
        _1811 = _1495;
        _1812 = _1495;
        _1813 = 0.0;
        _1814 = 0.0;
        _1815 = 0.0;
    }
    float _1825 = (cbModelParam._m0[1u].x * (_1813 - _1507)) + _1507;
    float _1826 = (cbModelParam._m0[1u].x * (_1814 - _1508)) + _1508;
    float _1827 = (cbModelParam._m0[1u].x * (_1815 - _1509)) + _1509;
    float _1848 = fma(_1827, cbSceneParam._m0[89u].z, fma(_1826, cbSceneParam._m0[89u].y, _1825 * cbSceneParam._m0[89u].x));
    float _1851 = fma(_1827, cbSceneParam._m0[90u].z, fma(_1826, cbSceneParam._m0[90u].y, _1825 * cbSceneParam._m0[90u].x));
    float _1854 = fma(_1827, cbSceneParam._m0[91u].z, fma(_1826, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1825));
    float _1869 = _1132 * 0.5;
    float _1870 = _1133 * 0.5;
    float _1871 = _1134 * 0.5;
    float _1872 = dot(vec4(_1869, _1870, _1871, 1.0), vec4(_1803, _1806, _1809, _1812));
    float _1875 = dot(vec4(_1869, _1870, _1871, 1.0), vec4(_1802, _1805, _1808, _1811));
    float _1878 = dot(vec4(_1869, _1870, _1871, 1.0), vec4(_1801, _1804, _1807, _1810));
    float _1912;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1885 = dot(vec4(_1869, _1870, _1871, 1.0), vec4(_1494, _1498, _1501, _1504));
        float _1889 = dot(vec4(_1869, _1870, _1871, 1.0), vec4(_1496, _1499, _1502, _1505));
        float _1893 = dot(vec4(_1869, _1870, _1871, 1.0), vec4(_1497, _1500, _1503, _1506));
        float _1900 = dot(vec4(cbModelParam._m0[39u]), vec4(_1869, _1870, _1871, 1.0));
        _1912 = dot(vec3(isnan(0.0) ? _1893 : (isnan(_1893) ? 0.0 : max(_1893, 0.0)), isnan(0.0) ? _1889 : (isnan(_1889) ? 0.0 : max(_1889, 0.0)), isnan(0.0) ? _1885 : (isnan(_1885) ? 0.0 : max(_1885, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1900) ? 0.0 : (isnan(0.0) ? _1900 : max(0.0, _1900))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1912 = 1.0;
    }
    float _1923;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1914 = dot(vec4(cbModelParam._m0[40u]), vec4(_1869, _1870, _1871, 1.0));
        _1923 = dot(vec3(isnan(0.0) ? _1872 : (isnan(_1872) ? 0.0 : max(_1872, 0.0)), isnan(0.0) ? _1875 : (isnan(_1875) ? 0.0 : max(_1875, 0.0)), isnan(0.0) ? _1878 : (isnan(_1878) ? 0.0 : max(_1878, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1914) ? 0.0 : (isnan(0.0) ? _1914 : max(0.0, _1914))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1923 = 1.0;
    }
    float _1927 = (_1923 * cbModelParam._m0[1u].x) + (_1912 * (1.0 - cbModelParam._m0[1u].x));
    float _1937 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _978);
    float _1938 = isnan(_1937) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1937 : min(cbModelParam._m0[25u].z, _1937));
    float _2018;
    float _2020;
    float _2022;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1985 = fma(_1193, cbModelParam._m0[13u].z, fma(_1189, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1185)) + cbModelParam._m0[13u].w;
        float _1989 = fma(_1193, cbModelParam._m0[14u].z, fma(_1189, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1185)) + cbModelParam._m0[14u].w;
        float _1993 = fma(_1193, cbModelParam._m0[15u].z, fma(_1189, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1185)) + cbModelParam._m0[15u].w;
        float _1996 = fma(_1134, cbModelParam._m0[13u].z, fma(_1133, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1132));
        float _1999 = fma(_1134, cbModelParam._m0[14u].z, fma(_1133, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1132));
        float _2002 = fma(_1134, cbModelParam._m0[15u].z, fma(_1133, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1132));
        float _2030;
        if (_1996 > 0.0)
        {
            _2030 = abs((1.0 - _1985) / _1996);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1996 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1985 + 1.0) / _1996);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2030 = frontier_phi_14_12_ladder;
        }
        float _2199;
        if (_1999 > 0.0)
        {
            _2199 = abs((1.0 - _1989) / _1999);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1999 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1989 + 1.0) / _1999);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2199 = frontier_phi_23_19_ladder;
        }
        float _2494;
        if (_2002 > 0.0)
        {
            _2494 = abs((1.0 - _1993) / _2002);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2002 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1993 + 1.0) / _2002);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2494 = frontier_phi_35_30_ladder;
        }
        float _2496 = isnan(_2199) ? _2030 : (isnan(_2030) ? _2199 : min(_2030, _2199));
        float _2497 = isnan(_2494) ? _2496 : (isnan(_2496) ? _2494 : min(_2496, _2494));
        float _2501 = (_2497 * _1996) + _1985;
        float _2502 = (_2497 * _1999) + _1989;
        float _2503 = (_2497 * _2002) + _1993;
        float _2504 = _2497 * 9.9999997473787516355514526367188e-05;
        float _2506 = (-1.0) - _2504;
        float _2508 = _2504 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2503 > _2508) || ((_2503 < _2506) || ((_2502 > _2508) || ((_2502 < _2506) || ((_2501 < _2506) || (_2501 > _2508))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2648 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2503, cbModelParam._m0[9u].z, fma(_2502, cbModelParam._m0[9u].y, _2501 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2503, cbModelParam._m0[10u].z, fma(_2502, cbModelParam._m0[10u].y, _2501 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2503, cbModelParam._m0[11u].z, fma(_2502, cbModelParam._m0[11u].y, _2501 * cbModelParam._m0[11u].x))), _1938);
            frontier_phi_13_35_ladder = _2648.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2648.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2648.x * cbModelParam._m0[1u].y;
        }
        _2018 = frontier_phi_13_35_ladder_2;
        _2020 = frontier_phi_13_35_ladder_1;
        _2022 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2006 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1132, _1133, _1134), _1938);
        _2018 = _2006.x * cbModelParam._m0[1u].y;
        _2020 = _2006.y * cbModelParam._m0[1u].y;
        _2022 = _2006.z * cbModelParam._m0[1u].y;
    }
    float _2026 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _978);
    float _2027 = isnan(_2026) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2026 : min(cbModelParam._m0[25u].w, _2026));
    float _2116;
    float _2118;
    float _2120;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2080 = fma(_1193, cbModelParam._m0[21u].z, fma(_1189, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1185)) + cbModelParam._m0[21u].w;
        float _2084 = fma(_1193, cbModelParam._m0[22u].z, fma(_1189, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1185)) + cbModelParam._m0[22u].w;
        float _2088 = fma(_1193, cbModelParam._m0[23u].z, fma(_1189, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1185)) + cbModelParam._m0[23u].w;
        float _2091 = fma(_1134, cbModelParam._m0[21u].z, fma(_1133, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1132));
        float _2094 = fma(_1134, cbModelParam._m0[22u].z, fma(_1133, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1132));
        float _2097 = fma(_1134, cbModelParam._m0[23u].z, fma(_1133, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1132));
        float _2204;
        if (_2091 > 0.0)
        {
            _2204 = abs((1.0 - _2080) / _2091);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2091 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2080 + 1.0) / _2091);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2204 = frontier_phi_25_21_ladder;
        }
        float _2521;
        if (_2094 > 0.0)
        {
            _2521 = abs((1.0 - _2084) / _2094);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2094 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2084 + 1.0) / _2094);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2521 = frontier_phi_37_32_ladder;
        }
        float _2848;
        if (_2097 > 0.0)
        {
            _2848 = abs((1.0 - _2088) / _2097);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2097 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2088 + 1.0) / _2097);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2848 = frontier_phi_47_44_ladder;
        }
        float _2850 = isnan(_2521) ? _2204 : (isnan(_2204) ? _2521 : min(_2204, _2521));
        float _2851 = isnan(_2848) ? _2850 : (isnan(_2850) ? _2848 : min(_2850, _2848));
        float _2855 = (_2851 * _2091) + _2080;
        float _2856 = (_2851 * _2094) + _2084;
        float _2857 = (_2851 * _2097) + _2088;
        float _2858 = _2851 * 9.9999997473787516355514526367188e-05;
        float _2859 = (-1.0) - _2858;
        float _2861 = _2858 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2857 > _2861) || ((_2857 < _2859) || ((_2856 > _2861) || ((_2856 < _2859) || ((_2855 < _2859) || (_2855 > _2861))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2975 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2857, cbModelParam._m0[17u].z, fma(_2856, cbModelParam._m0[17u].y, _2855 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2857, cbModelParam._m0[18u].z, fma(_2856, cbModelParam._m0[18u].y, _2855 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2857, cbModelParam._m0[19u].z, fma(_2856, cbModelParam._m0[19u].y, _2855 * cbModelParam._m0[19u].x))), _2027);
            frontier_phi_22_47_ladder = _2975.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2975.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2975.x * cbModelParam._m0[1u].z;
        }
        _2116 = frontier_phi_22_47_ladder_2;
        _2118 = frontier_phi_22_47_ladder_1;
        _2120 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2100 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1132, _1133, _1134), _2027);
        _2116 = _2100.x * cbModelParam._m0[1u].z;
        _2118 = _2100.y * cbModelParam._m0[1u].z;
        _2120 = _2100.z * cbModelParam._m0[1u].z;
    }
    float _2132 = ((((1.0 - _1153) * ((_1140 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1153 * _1140)) * _1124;
    float _2133 = _2132 * ((cbModelParam._m0[1u].w * (_2116 - _2018)) + _2018);
    float _2134 = _2132 * ((cbModelParam._m0[1u].w * (_2118 - _2020)) + _2020);
    float _2135 = _2132 * ((cbModelParam._m0[1u].w * (_2120 - _2022)) + _2022);
    float _2138 = fma(_2135, cbSceneParam._m0[89u].z, fma(_2134, cbSceneParam._m0[89u].y, _2133 * cbSceneParam._m0[89u].x));
    float _2141 = fma(_2135, cbSceneParam._m0[90u].z, fma(_2134, cbSceneParam._m0[90u].y, _2133 * cbSceneParam._m0[90u].x));
    float _2144 = fma(_2135, cbSceneParam._m0[91u].z, fma(_2134, cbSceneParam._m0[91u].y, _2133 * cbSceneParam._m0[91u].x));
    float _2178 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2182 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2186 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2190 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2191 = _2178 / _2190;
    float _2192 = _2182 / _2190;
    float _2193 = _2186 / _2190;
    float _2340;
    float _2341;
    float _2342;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2220 = ((uint(_2193 > cbSceneParam._m0[59u].y) + uint(_2193 > cbSceneParam._m0[59u].x)) + uint(_2193 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2221 = _2220 + 43u;
        uint _2229 = _2220 + 44u;
        uint _2237 = _2220 + 45u;
        uint _2245 = _2220 + 46u;
        float _2256 = fma(_2190, cbSceneParam._m0[_2221].w, fma(_2186, cbSceneParam._m0[_2221].z, fma(_2182, cbSceneParam._m0[_2221].y, _2178 * cbSceneParam._m0[_2221].x)));
        float _2260 = fma(_2190, cbSceneParam._m0[_2229].w, fma(_2186, cbSceneParam._m0[_2229].z, fma(_2182, cbSceneParam._m0[_2229].y, _2178 * cbSceneParam._m0[_2229].x)));
        float _2268 = fma(_2190, cbSceneParam._m0[_2245].w, fma(_2186, cbSceneParam._m0[_2245].z, fma(_2182, cbSceneParam._m0[_2245].y, _2178 * cbSceneParam._m0[_2245].x)));
        float _2273 = cbSceneParam._m0[33u].z * _2268;
        float _2275 = cbSceneParam._m0[33u].w * _2268;
        float _2278 = fma(_2190, cbSceneParam._m0[_2237].w, fma(_2186, cbSceneParam._m0[_2237].z, fma(_2182, cbSceneParam._m0[_2237].y, _2178 * cbSceneParam._m0[_2237].x))) / _2268;
        float _2326 = (cbSceneParam._m0[33u].x - sqrt(((_2192 * _2192) + (_2191 * _2191)) + (_2193 * _2193))) * cbSceneParam._m0[33u].y;
        float _4635 = isnan(0.0) ? _2326 : (isnan(_2326) ? 0.0 : max(_2326, 0.0));
        float _2333 = (isnan(1.0) ? _4635 : (isnan(_4635) ? 1.0 : min(_4635, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2273 + _2256) / _2268, (_2275 + _2260) / _2268), _2278), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2275 + _2256) / _2268, (_2260 - _2273) / _2268), _2278), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2256 - _2273) / _2268, (_2260 - _2275) / _2268), _2278), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2256 - _2275) / _2268, (_2273 + _2260) / _2268), _2278), 0.0)).x), vec4(0.25)));
        _2340 = 1.0 - (_2333 * cbSceneParam._m0[34u].x);
        _2341 = 1.0 - (_2333 * cbSceneParam._m0[34u].y);
        _2342 = 1.0 - (_2333 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2340 = 1.0;
        _2341 = 1.0;
        _2342 = 1.0;
    }
    float _2406;
    float _2408;
    float _2410;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2394 = fma(_2190, cbSceneParam._m0[63u].w, fma(_2186, cbSceneParam._m0[63u].z, fma(_2182, cbSceneParam._m0[63u].y, _2178 * cbSceneParam._m0[63u].x)));
        float _2395 = fma(_2190, cbSceneParam._m0[60u].w, fma(_2186, cbSceneParam._m0[60u].z, fma(_2182, cbSceneParam._m0[60u].y, _2178 * cbSceneParam._m0[60u].x))) / _2394;
        float _2396 = fma(_2190, cbSceneParam._m0[61u].w, fma(_2186, cbSceneParam._m0[61u].z, fma(_2182, cbSceneParam._m0[61u].y, _2178 * cbSceneParam._m0[61u].x))) / _2394;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2395 >= cbSceneParam._m0[64u].x) && (_2396 >= cbSceneParam._m0[64u].y)) && (_2395 <= cbSceneParam._m0[64u].z)) && (_2396 <= cbSceneParam._m0[64u].w))
        {
            float _2534 = fma(_2190, cbSceneParam._m0[62u].w, fma(_2186, cbSceneParam._m0[62u].z, fma(_2182, cbSceneParam._m0[62u].y, _2178 * cbSceneParam._m0[62u].x))) / _2394;
            float _2538 = isnan(cbSceneParam._m0[41u].w) ? _2534 : (isnan(_2534) ? cbSceneParam._m0[41u].w : max(_2534, cbSceneParam._m0[41u].w));
            float _2581 = (cbSceneParam._m0[33u].x - sqrt(((_2192 * _2192) + (_2191 * _2191)) + (_2193 * _2193))) * cbSceneParam._m0[33u].y;
            float _4651 = isnan(0.0) ? _2581 : (isnan(_2581) ? 0.0 : max(_2581, 0.0));
            float _2588 = (isnan(1.0) ? _4651 : (isnan(_4651) ? 1.0 : min(_4651, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2395, cbSceneParam._m0[33u].w + _2396), _2538), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2395, _2396 - cbSceneParam._m0[33u].z), _2538), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2395 - cbSceneParam._m0[33u].z, _2396 - cbSceneParam._m0[33u].w), _2538), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2395 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2396), _2538), 0.0)).x), vec4(0.25)));
            float _2592 = 1.0 - (_2588 * cbSceneParam._m0[34u].x);
            float _2593 = 1.0 - (_2588 * cbSceneParam._m0[34u].y);
            float _2594 = 1.0 - (_2588 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2594) ? _2342 : (isnan(_2342) ? _2594 : min(_2342, _2594));
            frontier_phi_34_33_ladder_1 = isnan(_2593) ? _2341 : (isnan(_2341) ? _2593 : min(_2341, _2593));
            frontier_phi_34_33_ladder_2 = isnan(_2592) ? _2340 : (isnan(_2340) ? _2592 : min(_2340, _2592));
        }
        else
        {
            frontier_phi_34_33_ladder = _2342;
            frontier_phi_34_33_ladder_1 = _2341;
            frontier_phi_34_33_ladder_2 = _2340;
        }
        _2406 = frontier_phi_34_33_ladder_2;
        _2408 = frontier_phi_34_33_ladder_1;
        _2410 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2406 = _2340;
        _2408 = _2341;
        _2410 = _2342;
    }
    uvec4 _2415 = floatBitsToUint(cbInstanceData._m0[_265 + 5u]);
    uint _2417 = _2415.x * 14u;
    uint _2418 = _2417 + 13u;
    float _2425 = _1124 + (-1.0);
    float _2430 = (cbLight._m0[_2418].x * _2425) + 1.0;
    float _2431 = (cbLight._m0[_2418].y * _2425) + 1.0;
    float _2432 = (cbLight._m0[_2418].z * _2425) + 1.0;
    float _2433 = (cbLight._m0[_2418].w * _2425) + 1.0;
    uint _2434 = _2417 + 5u;
    float _2440 = isnan(1.0) ? _2431 : (isnan(_2431) ? 1.0 : min(_2431, 1.0));
    uint _2444 = _2417 + 4u;
    float _2453 = isnan(1.0) ? _2430 : (isnan(_2430) ? 1.0 : min(_2430, 1.0));
    uint _2457 = _2417 | 1u;
    float _2468 = dot(vec3(cbLight._m0[_2417].xyz), vec3(_975, _976, _977));
    float _2471 = dot(vec3(cbLight._m0[_2457].xyz), vec3(_975, _976, _977));
    float _4687 = isnan(0.0) ? _2468 : (isnan(_2468) ? 0.0 : max(_2468, 0.0));
    float _4698 = isnan(0.0) ? _2471 : (isnan(_2471) ? 0.0 : max(_2471, 0.0));
    float _2476 = (isnan(1.0) ? _4687 : (isnan(_4687) ? 1.0 : min(_4687, 1.0))) * 0.3183098733425140380859375;
    float _2478 = (isnan(1.0) ? _4698 : (isnan(_4698) ? 1.0 : min(_4698, 1.0))) * 0.3183098733425140380859375;
    float _2485 = ((cbLight._m0[_2434].x * _2440) * _2478) + (((cbLight._m0[_2444].x * _2406) * _2453) * _2476);
    float _2486 = ((_2440 * cbLight._m0[_2434].y) * _2478) + (((cbLight._m0[_2444].y * _2408) * _2453) * _2476);
    float _2487 = ((_2440 * cbLight._m0[_2434].z) * _2478) + (((cbLight._m0[_2444].z * _2410) * _2453) * _2476);
    uvec4 _2491 = floatBitsToUint(cbLight._m0[_2417 + 12u]);
    bool _2493 = _2491.x == 0u;
    float _2595;
    float _2597;
    float _2599;
    if (_2493)
    {
        _2595 = _2485;
        _2597 = _2486;
        _2599 = _2487;
    }
    else
    {
        uint _2603 = _2417 + 6u;
        float _2619 = (dot(vec3(cbLight._m0[_2417 + 2u].xyz), vec3(_975, _976, _977)) * 0.5) + 0.5;
        float _2620 = _2619 * _2619;
        float _4709 = isnan(0.0) ? _2620 : (isnan(_2620) ? 0.0 : max(_2620, 0.0));
        float _2621 = isnan(1.0) ? _4709 : (isnan(_4709) ? 1.0 : min(_4709, 1.0));
        float _2622 = isnan(1.0) ? _2432 : (isnan(_2432) ? 1.0 : min(_2432, 1.0));
        _2595 = (((cbLight._m0[_2603].x * 0.3183098733425140380859375) * _2621) * _2622) + _2485;
        _2597 = (((cbLight._m0[_2603].y * 0.3183098733425140380859375) * _2621) * _2622) + _2486;
        _2599 = (((cbLight._m0[_2603].z * 0.3183098733425140380859375) * _2621) * _2622) + _2487;
    }
    bool _2602 = _2491.y == 0u;
    float _2657;
    float _2659;
    float _2661;
    if (_2602)
    {
        _2657 = _2595;
        _2659 = _2597;
        _2661 = _2599;
    }
    else
    {
        uint _2819 = _2417 + 7u;
        float _2835 = (dot(vec3(cbLight._m0[_2417 + 3u].xyz), vec3(_975, _976, _977)) * 0.5) + 0.5;
        float _2836 = _2835 * _2835;
        float _4725 = isnan(0.0) ? _2836 : (isnan(_2836) ? 0.0 : max(_2836, 0.0));
        float _2837 = isnan(1.0) ? _4725 : (isnan(_4725) ? 1.0 : min(_4725, 1.0));
        float _2838 = isnan(1.0) ? _2433 : (isnan(_2433) ? 1.0 : min(_2433, 1.0));
        _2657 = (((cbLight._m0[_2819].x * 0.3183098733425140380859375) * _2837) * _2838) + _2595;
        _2659 = (((cbLight._m0[_2819].y * 0.3183098733425140380859375) * _2837) * _2838) + _2597;
        _2661 = (((cbLight._m0[_2819].z * 0.3183098733425140380859375) * _2837) * _2838) + _2599;
    }
    uint _2664 = _2417 + 8u;
    float _2677 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2417].w)) * _978) * 0.949999988079071044921875);
    float _2678 = _2677 * _2677;
    float _2679 = cbLight._m0[_2417].x + _1053;
    float _2680 = cbLight._m0[_2417].y + _1054;
    float _2681 = cbLight._m0[_2417].z + _1055;
    float _2685 = inversesqrt(dot(vec3(_2679, _2680, _2681), vec3(_2679, _2680, _2681)));
    float _2686 = _2685 * _2679;
    float _2687 = _2685 * _2680;
    float _2688 = _2685 * _2681;
    float _2689 = dot(vec3(_975, _976, _977), vec3(cbLight._m0[_2417].xyz));
    float _4741 = isnan(0.0) ? _2689 : (isnan(_2689) ? 0.0 : max(_2689, 0.0));
    float _2692 = isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0));
    float _4752 = isnan(0.0) ? _1125 : (isnan(_1125) ? 0.0 : max(_1125, 0.0));
    float _2693 = isnan(1.0) ? _4752 : (isnan(_4752) ? 1.0 : min(_4752, 1.0));
    float _2694 = dot(vec3(_975, _976, _977), vec3(_2686, _2687, _2688));
    float _4763 = isnan(0.0) ? _2694 : (isnan(_2694) ? 0.0 : max(_2694, 0.0));
    float _2697 = isnan(1.0) ? _4763 : (isnan(_4763) ? 1.0 : min(_4763, 1.0));
    float _2698 = dot(vec3(cbLight._m0[_2417].xyz), vec3(_2686, _2687, _2688));
    float _4774 = isnan(0.0) ? _2698 : (isnan(_2698) ? 0.0 : max(_2698, 0.0));
    float _2702 = _2678 * _2678;
    float _2706 = ((_2697 * _2697) * (_2702 + (-1.0))) + 1.0;
    float _2717 = (exp2(log2(1.0 - (isnan(1.0) ? _4774 : (isnan(_4774) ? 1.0 : min(_4774, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2718 = 1.0 - _2678;
    float _2729 = (0.5 / (((_2693 * ((_2692 * _2718) + _2678)) + 9.9999999392252902907785028219223e-09) + (((_2693 * _2718) + _2678) * _2692))) * _2692;
    float _4785 = isnan(0.0) ? _2729 : (isnan(_2729) ? 0.0 : max(_2729, 0.0));
    float _2731 = (isnan(1.0) ? _4785 : (isnan(_4785) ? 1.0 : min(_4785, 1.0))) * (_2702 / ((_2706 * _2706) * 3.141590118408203125));
    uint _2745 = _2417 + 9u;
    float _2756 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2457].w)) * _978) * 0.949999988079071044921875);
    float _2757 = _2756 * _2756;
    float _2758 = cbLight._m0[_2457].x + _1053;
    float _2759 = cbLight._m0[_2457].y + _1054;
    float _2760 = cbLight._m0[_2457].z + _1055;
    float _2764 = inversesqrt(dot(vec3(_2758, _2759, _2760), vec3(_2758, _2759, _2760)));
    float _2765 = _2764 * _2758;
    float _2766 = _2764 * _2759;
    float _2767 = _2764 * _2760;
    float _2768 = dot(vec3(_975, _976, _977), vec3(cbLight._m0[_2457].xyz));
    float _4796 = isnan(0.0) ? _2768 : (isnan(_2768) ? 0.0 : max(_2768, 0.0));
    float _2771 = isnan(1.0) ? _4796 : (isnan(_4796) ? 1.0 : min(_4796, 1.0));
    float _2772 = dot(vec3(_975, _976, _977), vec3(_2765, _2766, _2767));
    float _4807 = isnan(0.0) ? _2772 : (isnan(_2772) ? 0.0 : max(_2772, 0.0));
    float _2775 = isnan(1.0) ? _4807 : (isnan(_4807) ? 1.0 : min(_4807, 1.0));
    float _2776 = dot(vec3(cbLight._m0[_2457].xyz), vec3(_2765, _2766, _2767));
    float _4818 = isnan(0.0) ? _2776 : (isnan(_2776) ? 0.0 : max(_2776, 0.0));
    float _2780 = _2757 * _2757;
    float _2784 = ((_2775 * _2775) * (_2780 + (-1.0))) + 1.0;
    float _2793 = (exp2(log2(1.0 - (isnan(1.0) ? _4818 : (isnan(_4818) ? 1.0 : min(_4818, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2794 = 1.0 - _2757;
    float _2804 = (0.5 / (((_2693 * ((_2771 * _2794) + _2757)) + 9.9999999392252902907785028219223e-09) + (((_2693 * _2794) + _2757) * _2771))) * _2771;
    float _4829 = isnan(0.0) ? _2804 : (isnan(_2804) ? 0.0 : max(_2804, 0.0));
    float _2806 = (isnan(1.0) ? _4829 : (isnan(_4829) ? 1.0 : min(_4829, 1.0))) * (_2780 / ((_2784 * _2784) * 3.141590118408203125));
    float _2816 = (((_2793 * cbLight._m0[_2745].x) * _2806) * _2440) + ((((cbLight._m0[_2664].x * _2406) * _2717) * _2731) * _2453);
    float _2817 = (((_2793 * cbLight._m0[_2745].y) * _2806) * _2440) + ((((cbLight._m0[_2664].y * _2408) * _2717) * _2731) * _2453);
    float _2818 = (((_2793 * cbLight._m0[_2745].z) * _2806) * _2440) + ((((cbLight._m0[_2664].z * _2410) * _2717) * _2731) * _2453);
    float _2874;
    float _2876;
    float _2878;
    if (_2493)
    {
        _2874 = _2816;
        _2876 = _2817;
        _2878 = _2818;
    }
    else
    {
        uint _2880 = _2417 + 2u;
        uint _2884 = _2417 + 10u;
        float _2898 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2880].w)) * _978) * 0.949999988079071044921875);
        float _2899 = _2898 * _2898;
        float _2900 = cbLight._m0[_2880].x + _1053;
        float _2901 = cbLight._m0[_2880].y + _1054;
        float _2902 = cbLight._m0[_2880].z + _1055;
        float _2906 = inversesqrt(dot(vec3(_2900, _2901, _2902), vec3(_2900, _2901, _2902)));
        float _2907 = _2906 * _2900;
        float _2908 = _2906 * _2901;
        float _2909 = _2906 * _2902;
        float _2910 = dot(vec3(_975, _976, _977), vec3(cbLight._m0[_2880].xyz));
        float _4840 = isnan(0.0) ? _2910 : (isnan(_2910) ? 0.0 : max(_2910, 0.0));
        float _2913 = isnan(1.0) ? _4840 : (isnan(_4840) ? 1.0 : min(_4840, 1.0));
        float _2914 = dot(vec3(_975, _976, _977), vec3(_2907, _2908, _2909));
        float _4851 = isnan(0.0) ? _2914 : (isnan(_2914) ? 0.0 : max(_2914, 0.0));
        float _2917 = isnan(1.0) ? _4851 : (isnan(_4851) ? 1.0 : min(_4851, 1.0));
        float _2918 = dot(vec3(cbLight._m0[_2880].xyz), vec3(_2907, _2908, _2909));
        float _4862 = isnan(0.0) ? _2918 : (isnan(_2918) ? 0.0 : max(_2918, 0.0));
        float _2922 = _2899 * _2899;
        float _2926 = ((_2917 * _2917) * (_2922 + (-1.0))) + 1.0;
        float _2935 = (exp2(log2(1.0 - (isnan(1.0) ? _4862 : (isnan(_4862) ? 1.0 : min(_4862, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2936 = 1.0 - _2899;
        float _2946 = (0.5 / (((_2693 * ((_2913 * _2936) + _2899)) + 9.9999999392252902907785028219223e-09) + (((_2693 * _2936) + _2899) * _2913))) * _2913;
        float _4873 = isnan(0.0) ? _2946 : (isnan(_2946) ? 0.0 : max(_2946, 0.0));
        float _2948 = (isnan(1.0) ? _4873 : (isnan(_4873) ? 1.0 : min(_4873, 1.0))) * (_2922 / ((_2926 * _2926) * 3.141590118408203125));
        float _2949 = isnan(1.0) ? _2432 : (isnan(_2432) ? 1.0 : min(_2432, 1.0));
        _2874 = (((_2935 * cbLight._m0[_2884].x) * _2948) * _2949) + _2816;
        _2876 = (((_2935 * cbLight._m0[_2884].y) * _2948) * _2949) + _2817;
        _2878 = (((_2935 * cbLight._m0[_2884].z) * _2948) * _2949) + _2818;
    }
    float _2980;
    float _2982;
    float _2984;
    if (_2602)
    {
        _2980 = _2874;
        _2982 = _2876;
        _2984 = _2878;
    }
    else
    {
        uint _2991 = _2417 + 3u;
        uint _2995 = _2417 + 11u;
        float _3009 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2991].w)) * _978) * 0.949999988079071044921875);
        float _3010 = _3009 * _3009;
        float _3011 = cbLight._m0[_2991].x + _1053;
        float _3012 = cbLight._m0[_2991].y + _1054;
        float _3013 = cbLight._m0[_2991].z + _1055;
        float _3017 = inversesqrt(dot(vec3(_3011, _3012, _3013), vec3(_3011, _3012, _3013)));
        float _3018 = _3017 * _3011;
        float _3019 = _3017 * _3012;
        float _3020 = _3017 * _3013;
        float _3021 = dot(vec3(_975, _976, _977), vec3(cbLight._m0[_2991].xyz));
        float _4889 = isnan(0.0) ? _3021 : (isnan(_3021) ? 0.0 : max(_3021, 0.0));
        float _3024 = isnan(1.0) ? _4889 : (isnan(_4889) ? 1.0 : min(_4889, 1.0));
        float _3025 = dot(vec3(_975, _976, _977), vec3(_3018, _3019, _3020));
        float _4900 = isnan(0.0) ? _3025 : (isnan(_3025) ? 0.0 : max(_3025, 0.0));
        float _3028 = isnan(1.0) ? _4900 : (isnan(_4900) ? 1.0 : min(_4900, 1.0));
        float _3029 = dot(vec3(cbLight._m0[_2991].xyz), vec3(_3018, _3019, _3020));
        float _4911 = isnan(0.0) ? _3029 : (isnan(_3029) ? 0.0 : max(_3029, 0.0));
        float _3033 = _3010 * _3010;
        float _3037 = ((_3028 * _3028) * (_3033 + (-1.0))) + 1.0;
        float _3046 = (exp2(log2(1.0 - (isnan(1.0) ? _4911 : (isnan(_4911) ? 1.0 : min(_4911, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3047 = 1.0 - _3010;
        float _3057 = (0.5 / (((_2693 * ((_3024 * _3047) + _3010)) + 9.9999999392252902907785028219223e-09) + (((_2693 * _3047) + _3010) * _3024))) * _3024;
        float _4922 = isnan(0.0) ? _3057 : (isnan(_3057) ? 0.0 : max(_3057, 0.0));
        float _3059 = (isnan(1.0) ? _4922 : (isnan(_4922) ? 1.0 : min(_4922, 1.0))) * (_3033 / ((_3037 * _3037) * 3.141590118408203125));
        float _3060 = isnan(1.0) ? _2433 : (isnan(_2433) ? 1.0 : min(_2433, 1.0));
        _2980 = (((_3046 * cbLight._m0[_2995].x) * _3059) * _3060) + _2874;
        _2982 = (((_3046 * cbLight._m0[_2995].y) * _3059) * _3060) + _2876;
        _2984 = (((_3046 * cbLight._m0[_2995].z) * _3059) * _3060) + _2878;
    }
    float _3126;
    float _3128;
    float _3130;
    float _3132;
    float _3134;
    float _3136;
    if (_2415.y == 0u)
    {
        uvec4 _3081 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3082 = _3081.x;
        uint _3093 = uint((float(_3081.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1062) / _3082))) + floor(float(uint(cbSceneParam._m0[85u].x * _1061) / _3082)));
        float _3103 = (log2(_2193 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3104 = isnan(0.0) ? _3103 : (isnan(_3103) ? 0.0 : max(_3103, 0.0));
        uint _3107 = uint(isnan(14.0) ? _3104 : (isnan(_3104) ? 14.0 : min(_3104, 14.0)));
        uvec4 _3112 = texelFetch(g_lightClusterGridBuffer, int(((_3107 << 2u) + (_3093 << 6u)) >> 2u));
        uint _3113 = _3112.x;
        uint _3114 = _3081.z;
        float _3193;
        float _3195;
        float _3197;
        float _3199;
        float _3201;
        float _3203;
        if (((((1u << ((_3114 >> 4u) & 15u)) + 4294967295u) & _3113) == 0u) || ((_3114 & 240u) == 0u))
        {
            _3193 = 0.0;
            _3195 = 0.0;
            _3197 = 0.0;
            _3199 = 0.0;
            _3201 = 0.0;
            _3203 = 0.0;
        }
        else
        {
            float _3194;
            float _3196;
            float _3198;
            float _3200;
            float _3202;
            float _3204;
            float _3338 = 0.0;
            float _3339 = 0.0;
            float _3340 = 0.0;
            float _3341 = 0.0;
            float _3342 = 0.0;
            float _3343 = 0.0;
            uint _3344 = 0u;
            uint _3353;
            bool _3354;
            for (;;)
            {
                _3353 = texelFetch(g_lightClassification, int((((_3107 << 5u) + (_3093 << 9u)) + (_3344 << 2u)) >> 2u)).x;
                _3354 = _3353 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3354)
                {
                    frontier_phi_66_pred = _3343;
                    frontier_phi_66_pred_1 = _3342;
                    frontier_phi_66_pred_2 = _3341;
                    frontier_phi_66_pred_3 = _3340;
                    frontier_phi_66_pred_4 = _3339;
                    frontier_phi_66_pred_5 = _3338;
                }
                else
                {
                    float _3462;
                    float _3463;
                    float _3464;
                    float _3465;
                    float _3466;
                    float _3467;
                    uint _3468;
                    _3462 = _3338;
                    _3463 = _3339;
                    _3464 = _3340;
                    _3465 = _3341;
                    _3466 = _3342;
                    _3467 = _3343;
                    _3468 = _3353;
                    float _3394;
                    float _3395;
                    float _3396;
                    float _3397;
                    float _3398;
                    float _3399;
                    for (;;)
                    {
                        uint _3472 = uint(findLSB(_3468)) + (_3344 << 5u);
                        uint _3469 = (_3468 + 4294967295u) & _3468;
                        uint _3474 = _3472 * 48u;
                        vec4 _3488 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3474)).x, texelFetch(g_PointLightRenderingBuffer, int(_3474 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3474 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3474 + 3u)).x));
                        uint _3494 = (_3472 * 48u) + 4u;
                        vec4 _3507 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3494)).x, texelFetch(g_PointLightRenderingBuffer, int(_3494 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3494 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3494 + 3u)).x));
                        uint _3513 = (_3472 * 48u) + 8u;
                        vec3 _3524 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3513)).x, texelFetch(g_PointLightRenderingBuffer, int(_3513 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3513 + 2u)).x));
                        float _3528 = _3488.x - _2191;
                        float _3529 = _3488.y - _2192;
                        float _3530 = _3488.z - _2193;
                        float _3531 = dot(vec3(_3528, _3529, _3530), vec3(_3528, _3529, _3530));
                        float _3534 = inversesqrt(_3531);
                        float _3535 = _3534 * _3528;
                        float _3536 = _3534 * _3529;
                        float _3537 = _3534 * _3530;
                        float _3538 = dot(vec3(_1080, _1083, _1086), vec3(_3535, _3536, _3537));
                        float _3543 = 1.0 - (_3531 * _3488.w);
                        float _4948 = isnan(0.0) ? _3543 : (isnan(_3543) ? 0.0 : max(_3543, 0.0));
                        float _3544 = isnan(1.0) ? _4948 : (isnan(_4948) ? 1.0 : min(_4948, 1.0));
                        float _3545 = sqrt(_3531) * _3507.w;
                        float _3548 = 1.39999997615814208984375 / (_3545 + 1.39999997615814208984375);
                        float _3549 = _3548 * _3548;
                        float _3552 = ((1.0 - _3549) * _3538) + _3549;
                        float _3555 = _3545 * _3545;
                        float _3559 = ((isnan(0.0) ? _3552 : (isnan(_3552) ? 0.0 : max(_3552, 0.0))) * _3544) / ((_3555 * 0.699999988079071044921875) + 1.0);
                        float _3563 = (-0.0) - _2191;
                        float _3564 = (-0.0) - _2192;
                        float _3565 = (-0.0) - _2193;
                        float _3569 = inversesqrt(dot(vec3(_3563, _3564, _3565), vec3(_3563, _3564, _3565)));
                        float _3570 = _3569 * _3563;
                        float _3571 = _3569 * _3564;
                        float _3572 = _3569 * _3565;
                        float _3579 = exp2(log2(1.0 / ((_3555 * 3.5) + 5.0)) * 0.25);
                        float _3580 = 1.0 - _1140;
                        float _3587 = sqrt(1.0 - ((1.0 - (_3580 * _3580)) * (1.0 - (_3579 * _3579))));
                        float _3588 = _3587 * _3587;
                        float _3589 = _3588 * _3588;
                        float _3590 = _3570 + _3535;
                        float _3591 = _3571 + _3536;
                        float _3592 = _3572 + _3537;
                        float _3596 = inversesqrt(dot(vec3(_3590, _3591, _3592), vec3(_3590, _3591, _3592)));
                        float _3600 = dot(vec3(_1080, _1083, _1086), vec3(_3570, _3571, _3572));
                        float _4964 = isnan(0.0) ? _3600 : (isnan(_3600) ? 0.0 : max(_3600, 0.0));
                        float _3603 = isnan(1.0) ? _4964 : (isnan(_4964) ? 1.0 : min(_4964, 1.0));
                        float _3604 = dot(vec3(_1080, _1083, _1086), vec3(_3596 * _3590, _3596 * _3591, _3596 * _3592));
                        float _4975 = isnan(0.0) ? _3604 : (isnan(_3604) ? 0.0 : max(_3604, 0.0));
                        float _3607 = isnan(1.0) ? _4975 : (isnan(_4975) ? 1.0 : min(_4975, 1.0));
                        float _3611 = ((_3607 * _3607) * (_3589 + (-1.0))) + 1.0;
                        float _3612 = _3548 * _3588;
                        float _3613 = _3612 * _3612;
                        float _3616 = ((1.0 - _3613) * _3538) + _3613;
                        float _4986 = isnan(0.0) ? _3616 : (isnan(_3616) ? 0.0 : max(_3616, 0.0));
                        float _3617 = isnan(1.0) ? _4986 : (isnan(_4986) ? 1.0 : min(_4986, 1.0));
                        float _3618 = 1.0 - _3588;
                        float _3628 = (0.5 / (((_3617 * ((_3603 * _3618) + _3588)) + 9.9999999392252902907785028219223e-09) + (((_3617 * _3618) + _3588) * _3603))) * _3617;
                        float _4997 = isnan(0.0) ? _3628 : (isnan(_3628) ? 0.0 : max(_3628, 0.0));
                        float _3639 = (((_3589 * 3.1415927410125732421875) * (isnan(1.0) ? _4997 : (isnan(_4997) ? 1.0 : min(_4997, 1.0)))) / ((_3611 * _3611) * ((_3555 * 2.1991131305694580078125) + 3.141590118408203125))) * _3544;
                        _3397 = (_3559 * _3507.x) + _3465;
                        _3398 = (_3559 * _3507.y) + _3466;
                        _3399 = (_3559 * _3507.z) + _3467;
                        _3394 = (_3639 * _3524.x) + _3462;
                        _3395 = (_3639 * _3524.y) + _3463;
                        _3396 = (_3639 * _3524.z) + _3464;
                        if (_3469 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3462 = _3394;
                            _3463 = _3395;
                            _3464 = _3396;
                            _3465 = _3397;
                            _3466 = _3398;
                            _3467 = _3399;
                            _3468 = _3469;
                        }
                    }
                    frontier_phi_66_pred = _3399;
                    frontier_phi_66_pred_1 = _3398;
                    frontier_phi_66_pred_2 = _3397;
                    frontier_phi_66_pred_3 = _3396;
                    frontier_phi_66_pred_4 = _3395;
                    frontier_phi_66_pred_5 = _3394;
                }
                _3204 = frontier_phi_66_pred;
                _3202 = frontier_phi_66_pred_1;
                _3200 = frontier_phi_66_pred_2;
                _3198 = frontier_phi_66_pred_3;
                _3196 = frontier_phi_66_pred_4;
                _3194 = frontier_phi_66_pred_5;
                uint _3345 = _3344 + 1u;
                if (_3345 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3338 = _3194;
                    _3339 = _3196;
                    _3340 = _3198;
                    _3341 = _3200;
                    _3342 = _3202;
                    _3343 = _3204;
                    _3344 = _3345;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3193 = _3194;
            _3195 = _3196;
            _3197 = _3198;
            _3199 = _3200;
            _3201 = _3202;
            _3203 = _3204;
        }
        uvec4 _3207 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3208 = _3207.z;
        uint _3210 = (_3208 >> 8u) & 15u;
        float _3306;
        float _3308;
        float _3310;
        float _3312;
        float _3314;
        float _3316;
        if (((4294967295u << _3210) & _3113) == 0u)
        {
            _3306 = _3193;
            _3308 = _3195;
            _3310 = _3197;
            _3312 = _3199;
            _3314 = _3201;
            _3316 = _3203;
        }
        else
        {
            float _3331 = inversesqrt(dot(vec3(_2191, _2192, _2193), vec3(_2191, _2192, _2193)));
            float _3332 = _3331 * _2191;
            float _3333 = _3331 * _2192;
            float _3334 = _3331 * _2193;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3210 < ((_3208 >> 12u) & 15u))
            {
                float _3307;
                float _3309;
                float _3311;
                float _3313;
                float _3315;
                float _3317;
                float _3445 = _3193;
                float _3446 = _3195;
                float _3447 = _3197;
                float _3448 = _3199;
                float _3449 = _3201;
                float _3450 = _3203;
                uint _3451 = _3210;
                uint _3460;
                bool _3461;
                for (;;)
                {
                    _3460 = texelFetch(g_lightClassification, int((((_3107 << 5u) + (_3093 << 9u)) + (_3451 << 2u)) >> 2u)).x;
                    _3461 = _3460 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3461)
                    {
                        frontier_phi_72_pred = _3450;
                        frontier_phi_72_pred_1 = _3449;
                        frontier_phi_72_pred_2 = _3448;
                        frontier_phi_72_pred_3 = _3447;
                        frontier_phi_72_pred_4 = _3446;
                        frontier_phi_72_pred_5 = _3445;
                    }
                    else
                    {
                        float _3644;
                        float _3645;
                        float _3646;
                        float _3647;
                        float _3648;
                        float _3649;
                        float _3937;
                        float _3938;
                        float _3939;
                        float _3940;
                        float _3941;
                        float _3942;
                        float _3657 = _3445;
                        float _3658 = _3446;
                        float _3659 = _3447;
                        float _3660 = _3448;
                        float _3661 = _3449;
                        float _3662 = _3450;
                        uint _3663 = _3460;
                        uint _3664;
                        vec4 _3689;
                        float _3690;
                        vec4 _3705;
                        vec3 _3717;
                        vec4 _3732;
                        vec4 _3747;
                        float _3793;
                        bool _3794;
                        for (;;)
                        {
                            uint _3674 = ((_3451 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3663));
                            _3664 = (_3663 + 4294967295u) & _3663;
                            uint _3676 = _3674 * 40u;
                            _3689 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3676)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3676 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3676 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3676 + 3u)).x));
                            _3690 = _3689.w;
                            uint _3692 = (_3674 * 40u) + 4u;
                            _3705 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3692)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3692 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3692 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3692 + 3u)).x));
                            uint _3707 = (_3674 * 40u) + 8u;
                            _3717 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3707)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3707 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3707 + 2u)).x));
                            uint _3719 = (_3674 * 40u) + 16u;
                            _3732 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3719)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3719 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3719 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3719 + 3u)).x));
                            uint _3734 = (_3674 * 40u) + 20u;
                            _3747 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3734)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3734 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3734 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3734 + 3u)).x));
                            uint _3749 = (_3674 * 40u) + 24u;
                            vec4 _3762 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3749)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3749 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3749 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3749 + 3u)).x));
                            uint _3768 = (_3674 * 40u) + 28u;
                            vec4 _3781 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3768)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3768 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3768 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3768 + 3u)).x));
                            _3793 = fma(_2193, _3781.z, fma(_2192, _3781.y, _3781.x * _2191)) + _3781.w;
                            _3794 = !((fma(_2193, _3762.z, fma(_2192, _3762.y, _3762.x * _2191)) + _3762.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3794)
                            {
                                float _3821 = _3689.x - _2191;
                                float _3822 = _3689.y - _2192;
                                float _3823 = _3689.z - _2193;
                                float _3824 = dot(vec3(_3821, _3822, _3823), vec3(_3821, _3822, _3823));
                                float _3827 = inversesqrt(_3824);
                                float _3828 = _3827 * _3821;
                                float _3829 = _3827 * _3822;
                                float _3830 = _3827 * _3823;
                                float _3834 = 1.0 - (_3824 / (_3690 * _3690));
                                float _5008 = isnan(0.0) ? _3834 : (isnan(_3834) ? 0.0 : max(_3834, 0.0));
                                float _3835 = isnan(1.0) ? _5008 : (isnan(_5008) ? 1.0 : min(_5008, 1.0));
                                float _3839 = sqrt(_3824) * _3705.w;
                                float _3841 = 1.39999997615814208984375 / (_3839 + 1.39999997615814208984375);
                                float _3842 = _3841 * _3841;
                                float _3845 = ((1.0 - _3842) * dot(vec3(_3828, _3829, _3830), vec3(_1080, _1083, _1086))) + _3842;
                                float _3848 = _3839 * _3839;
                                float _3852 = (fma(_2193, _3732.z, fma(_2192, _3732.y, _3732.x * _2191)) + _3732.w) / _3793;
                                float _3853 = (fma(_2193, _3747.z, fma(_2192, _3747.y, _3747.x * _2191)) + _3747.w) / _3793;
                                float _3857 = 1.0 - dot(vec2(_3852, _3853), vec2(_3852, _3853));
                                float _5024 = isnan(0.0) ? _3857 : (isnan(_3857) ? 0.0 : max(_3857, 0.0));
                                float _3858 = isnan(1.0) ? _5024 : (isnan(_5024) ? 1.0 : min(_5024, 1.0));
                                float _3859 = _3858 * (((isnan(0.0) ? _3845 : (isnan(_3845) ? 0.0 : max(_3845, 0.0))) * _3835) / ((_3848 * 0.699999988079071044921875) + 1.0));
                                float _3871 = exp2(log2(1.0 / ((_3848 * 3.5) + 5.0)) * 0.25);
                                float _3872 = 1.0 - _1140;
                                float _3879 = sqrt(1.0 - ((1.0 - (_3872 * _3872)) * (1.0 - (_3871 * _3871))));
                                float _3880 = _3879 * _3879;
                                float _3881 = _3880 * _3880;
                                float _3882 = _3828 - _3332;
                                float _3883 = _3829 - _3333;
                                float _3884 = _3830 - _3334;
                                float _3888 = inversesqrt(dot(vec3(_3882, _3883, _3884), vec3(_3882, _3883, _3884)));
                                float _3892 = dot(vec3(_1080, _1083, _1086), vec3((-0.0) - _3332, (-0.0) - _3333, (-0.0) - _3334));
                                float _5035 = isnan(0.0) ? _3892 : (isnan(_3892) ? 0.0 : max(_3892, 0.0));
                                float _3895 = isnan(1.0) ? _5035 : (isnan(_5035) ? 1.0 : min(_5035, 1.0));
                                float _3896 = dot(vec3(_1080, _1083, _1086), vec3(_3888 * _3882, _3888 * _3883, _3888 * _3884));
                                float _5046 = isnan(0.0) ? _3896 : (isnan(_3896) ? 0.0 : max(_3896, 0.0));
                                float _3899 = isnan(1.0) ? _5046 : (isnan(_5046) ? 1.0 : min(_5046, 1.0));
                                float _3903 = ((_3899 * _3899) * (_3881 + (-1.0))) + 1.0;
                                float _3904 = _3841 * _3880;
                                float _3905 = _3904 * _3904;
                                float _3911 = ((1.0 - _3905) * dot(vec3(_1080, _1083, _1086), vec3(_3828, _3829, _3830))) + _3905;
                                float _5057 = isnan(0.0) ? _3911 : (isnan(_3911) ? 0.0 : max(_3911, 0.0));
                                float _3912 = isnan(1.0) ? _5057 : (isnan(_5057) ? 1.0 : min(_5057, 1.0));
                                float _3913 = 1.0 - _3880;
                                float _3923 = (0.5 / (((_3912 * ((_3895 * _3913) + _3880)) + 9.9999999392252902907785028219223e-09) + (((_3912 * _3913) + _3880) * _3895))) * _3912;
                                float _5068 = isnan(0.0) ? _3923 : (isnan(_3923) ? 0.0 : max(_3923, 0.0));
                                float _3933 = (_3858 * _3835) * (((_3881 * 3.1415927410125732421875) * (isnan(1.0) ? _5068 : (isnan(_5068) ? 1.0 : min(_5068, 1.0)))) / ((_3903 * _3903) * ((_3848 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3859 * _3705.y;
                                frontier_phi_78_pred_1 = _3859 * _3705.x;
                                frontier_phi_78_pred_2 = _3933 * _3717.z;
                                frontier_phi_78_pred_3 = _3933 * _3717.y;
                                frontier_phi_78_pred_4 = _3933 * _3717.x;
                                frontier_phi_78_pred_5 = _3859 * _3705.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3941 = frontier_phi_78_pred;
                            _3940 = frontier_phi_78_pred_1;
                            _3939 = frontier_phi_78_pred_2;
                            _3938 = frontier_phi_78_pred_3;
                            _3937 = frontier_phi_78_pred_4;
                            _3942 = frontier_phi_78_pred_5;
                            _3647 = _3940 + _3660;
                            _3648 = _3941 + _3661;
                            _3649 = _3942 + _3662;
                            _3644 = _3937 + _3657;
                            _3645 = _3938 + _3658;
                            _3646 = _3939 + _3659;
                            if (_3664 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3657 = _3644;
                                _3658 = _3645;
                                _3659 = _3646;
                                _3660 = _3647;
                                _3661 = _3648;
                                _3662 = _3649;
                                _3663 = _3664;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3649;
                        frontier_phi_72_pred_1 = _3648;
                        frontier_phi_72_pred_2 = _3647;
                        frontier_phi_72_pred_3 = _3646;
                        frontier_phi_72_pred_4 = _3645;
                        frontier_phi_72_pred_5 = _3644;
                    }
                    _3317 = frontier_phi_72_pred;
                    _3315 = frontier_phi_72_pred_1;
                    _3313 = frontier_phi_72_pred_2;
                    _3311 = frontier_phi_72_pred_3;
                    _3309 = frontier_phi_72_pred_4;
                    _3307 = frontier_phi_72_pred_5;
                    uint _3452 = _3451 + 1u;
                    if (_3452 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3445 = _3307;
                        _3446 = _3309;
                        _3447 = _3311;
                        _3448 = _3313;
                        _3449 = _3315;
                        _3450 = _3317;
                        _3451 = _3452;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3317;
                frontier_phi_60_61_ladder_1 = _3315;
                frontier_phi_60_61_ladder_2 = _3311;
                frontier_phi_60_61_ladder_3 = _3309;
                frontier_phi_60_61_ladder_4 = _3307;
                frontier_phi_60_61_ladder_5 = _3313;
            }
            else
            {
                frontier_phi_60_61_ladder = _3203;
                frontier_phi_60_61_ladder_1 = _3201;
                frontier_phi_60_61_ladder_2 = _3197;
                frontier_phi_60_61_ladder_3 = _3195;
                frontier_phi_60_61_ladder_4 = _3193;
                frontier_phi_60_61_ladder_5 = _3199;
            }
            _3306 = frontier_phi_60_61_ladder_4;
            _3308 = frontier_phi_60_61_ladder_3;
            _3310 = frontier_phi_60_61_ladder_2;
            _3312 = frontier_phi_60_61_ladder_5;
            _3314 = frontier_phi_60_61_ladder_1;
            _3316 = frontier_phi_60_61_ladder;
        }
        float _3321 = isnan(1.0) ? _1124 : (isnan(_1124) ? 1.0 : min(_1124, 1.0));
        _3126 = (_3321 * _3312) + _2657;
        _3128 = (_3321 * _3314) + _2659;
        _3130 = (_3321 * _3316) + _2661;
        _3132 = ((_3306 * 0.039999999105930328369140625) * _3321) + _2980;
        _3134 = ((_3308 * 0.039999999105930328369140625) * _3321) + _2982;
        _3136 = ((_3310 * 0.039999999105930328369140625) * _3321) + _2984;
    }
    else
    {
        _3126 = _2657;
        _3128 = _2659;
        _3130 = _2661;
        _3132 = _2980;
        _3134 = _2982;
        _3136 = _2984;
    }
    float _5084 = isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0));
    float _5095 = isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0));
    float _5106 = isnan(0.0) ? _1111 : (isnan(_1111) ? 0.0 : max(_1111, 0.0));
    uint _3156 = _265 + 6u;
    float _3164 = _1061 / cbSceneParam._m0[86u].x;
    float _3165 = _1062 / cbSceneParam._m0[86u].y;
    vec4 _3179 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3164, _3165, (log2((isnan(cbSceneParam._m0[77u].w) ? _996 : (isnan(_996) ? cbSceneParam._m0[77u].w : min(_996, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3181 = _3179.x;
    float _3182 = _3179.y;
    float _3183 = _3179.z;
    float _3184 = _3179.w;
    float _3256;
    float _3258;
    float _3260;
    float _3262;
    if (_996 > cbSceneParam._m0[78u].w)
    {
        float _3218 = isnan(_996) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _996 : min(cbSceneParam._m0[80u].w, _996));
        float _3219 = _3218 / _996;
        float _3230 = _3219 * _1046;
        float _3231 = _1047 * _3219;
        float _3232 = (-0.0) - _3231;
        float _3234 = _3219 * _1048;
        float _3236 = (cbSceneParam._m0[77u].w * _3232) / _3218;
        float _3237 = _3236 + cbSceneParam._m0[79u].w;
        float _3238 = cbSceneParam._m0[79u].w - _3231;
        float _3244 = sqrt(((_3230 * _3230) + (_3231 * _3231)) + (_3234 * _3234));
        float _3247 = (1.0 - (cbSceneParam._m0[77u].w / _3218)) * _3244;
        float _3252 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3254 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3407;
        if (abs((_3232 - _3236) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3407 = ((((_3237 > 0.0) ? exp2(_3252 * _3237) : (2.0 - exp2(_3254 * _3237))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3247;
        }
        else
        {
            float _3367 = 1.0 / cbSceneParam._m0[80u].x;
            float _3368 = isnan(_3238) ? _3237 : (isnan(_3237) ? _3238 : max(_3237, _3238));
            float _3369 = isnan(_3238) ? _3237 : (isnan(_3237) ? _3238 : min(_3237, _3238));
            float _3378 = isnan(0.0) ? _3368 : (isnan(_3368) ? 0.0 : min(_3368, 0.0));
            float _3379 = isnan(0.0) ? _3369 : (isnan(_3369) ? 0.0 : min(_3369, 0.0));
            _3407 = ((abs(_3244 / _3232) * cbSceneParam._m0[80u].y) * ((((_3378 - _3379) * 2.0) - ((exp2(_3252 * (isnan(0.0) ? _3368 : (isnan(_3368) ? 0.0 : max(_3368, 0.0)))) - exp2(_3252 * (isnan(0.0) ? _3369 : (isnan(_3369) ? 0.0 : max(_3369, 0.0))))) * _3367)) - ((exp2(_3254 * _3378) - exp2(_3254 * _3379)) * _3367))) + (_3247 * cbSceneParam._m0[80u].z);
        }
        vec4 _3409 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3164, _3165, 1.0), 0.0);
        float _3418 = exp2((_3407 * (-1.44269502162933349609375)) * (1.0 - _3409.w));
        float _3419 = log2(_3418);
        float _3435 = log2(_3184);
        _3256 = (exp2(_3435 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3419 * cbSceneParam._m0[78u].x)) * _3409.x) / cbSceneParam._m0[78u].x)) + _3181;
        _3258 = (exp2(_3435 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3419 * cbSceneParam._m0[78u].y)) * _3409.y) / cbSceneParam._m0[78u].y)) + _3182;
        _3260 = (exp2(_3435 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3419 * cbSceneParam._m0[78u].z)) * _3409.z) / cbSceneParam._m0[78u].z)) + _3183;
        _3262 = _3418 * _3184;
    }
    else
    {
        _3256 = _3181;
        _3258 = _3182;
        _3260 = _3183;
        _3262 = _3184;
    }
    float _3274 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3275 = _3274 == 3.0;
    float _3276 = log2(_3262);
    float _3283 = exp2(_3276 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5084 : (isnan(_5084) ? 1.0 : min(_5084, 1.0))) * (_3126 + ((isnan(0.0) ? _1848 : (isnan(_1848) ? 0.0 : max(_1848, 0.0))) * _1124))) + ((_3132 + ((isnan(0.0) ? _2138 : (isnan(_2138) ? 0.0 : max(_2138, 0.0))) * _1927)) * cbPerFrame._m0[3u].x));
    float _3284 = exp2(_3276 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5095 : (isnan(_5095) ? 1.0 : min(_5095, 1.0))) * (_3128 + ((isnan(0.0) ? _1851 : (isnan(_1851) ? 0.0 : max(_1851, 0.0))) * _1124))) + ((_3134 + ((isnan(0.0) ? _2141 : (isnan(_2141) ? 0.0 : max(_2141, 0.0))) * _1927)) * cbPerFrame._m0[3u].x));
    float _3285 = exp2(_3276 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5106 : (isnan(_5106) ? 1.0 : min(_5106, 1.0))) * (_3130 + ((isnan(0.0) ? _1854 : (isnan(_1854) ? 0.0 : max(_1854, 0.0))) * _1124))) + ((_3136 + ((isnan(0.0) ? _2144 : (isnan(_2144) ? 0.0 : max(_2144, 0.0))) * _1927)) * cbPerFrame._m0[3u].x));
    float _3294 = (_3274 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3294 * (_3275 ? _3283 : (_3283 + (cbSceneParam._m0[72u].w * _3256)));
    SV_Target.y = _3294 * (_3275 ? _3284 : (_3284 + (cbSceneParam._m0[72u].w * _3258)));
    SV_Target.z = _3294 * (_3275 ? _3285 : (_3285 + (cbSceneParam._m0[72u].w * _3260)));
    SV_Target.w = cbInstanceData._m0[_3156].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3156].w;
}


