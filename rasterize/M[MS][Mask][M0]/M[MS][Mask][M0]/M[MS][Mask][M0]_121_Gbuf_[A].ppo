#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _181 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _182 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _183 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _189 = inversesqrt(dot(vec3(_181, _182, _183), vec3(_181, _182, _183)));
    float _190 = _189 * _181;
    float _191 = _189 * _182;
    float _192 = _189 * _183;
    float _196 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _197 = _196 * NORMAL.x;
    float _198 = _196 * NORMAL.y;
    float _199 = _196 * NORMAL.z;
    float _203 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _204 = _203 * TANGENT.x;
    float _205 = _203 * TANGENT.y;
    float _206 = _203 * TANGENT.z;
    uint _209 = uint(roundEven(NORMAL.w)) * 13u;
    uint _215 = _209 + 1u;
    uint _219 = _209 + 2u;
    float _228 = sqrt(((cbInstanceData._m0[_215].x * cbInstanceData._m0[_215].x) + (cbInstanceData._m0[_209].x * cbInstanceData._m0[_209].x)) + (cbInstanceData._m0[_219].x * cbInstanceData._m0[_219].x));
    float _229 = _228 * TEXCOORD.z;
    float _230 = _228 * TEXCOORD.w;
    vec4 _250 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _256 = _250.x * cbMtdParam._m0[11u].x;
    float _257 = _250.y * cbMtdParam._m0[11u].y;
    float _258 = _250.z * cbMtdParam._m0[11u].z;
    vec4 _277 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _229) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _230) + cbTextureTilingScale._m0[5u].w));
    vec4 _297 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _338 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _340 = _338.x;
    float _353 = dot(vec4(_340, _338.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _370 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _297.x) * 2.0) - ((((_340 - _353) * cbMtdParam._m0[24u].z) + _353) * cbMtdParam._m0[23u].x))) + 1.0;
    float _1020 = isnan(0.0) ? _370 : (isnan(_370) ? 0.0 : max(_370, 0.0));
    float _371 = isnan(1.0) ? _1020 : (isnan(_1020) ? 1.0 : min(_1020, 1.0));
    float _378 = (_371 * ((_277.x * cbMtdParam._m0[12u].x) - _256)) + _256;
    float _379 = (_371 * ((_277.y * cbMtdParam._m0[12u].y) - _257)) + _257;
    float _380 = (_371 * ((_277.z * cbMtdParam._m0[12u].z) - _258)) + _258;
    vec4 _397 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _229) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _230) + cbTextureTilingScale._m0[3u].w));
    vec4 _417 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _419 = _417.x;
    float _429 = dot(vec4(_419, _417.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _443 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _297.y) * 2.0) - ((((_419 - _429) * cbMtdParam._m0[24u].z) + _429) * cbMtdParam._m0[20u].w))) + 1.0;
    float _1031 = isnan(0.0) ? _443 : (isnan(_443) ? 0.0 : max(_443, 0.0));
    float _444 = isnan(1.0) ? _1031 : (isnan(_1031) ? 1.0 : min(_1031, 1.0));
    float _451 = (_444 * ((_397.x * cbMtdParam._m0[13u].x) - _378)) + _378;
    float _452 = (_444 * ((_397.y * cbMtdParam._m0[13u].y) - _379)) + _379;
    float _453 = (_444 * ((_397.z * cbMtdParam._m0[13u].z) - _380)) + _380;
    vec4 _471 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _229) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _230) + cbTextureTilingScale._m0[24u].w));
    vec4 _488 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _490 = _488.x;
    float _500 = dot(vec4(_490, _488.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _512 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _297.z) * 2.0) - ((((_490 - _500) * cbMtdParam._m0[24u].z) + _500) * cbMtdParam._m0[20u].z))) + 1.0;
    float _1042 = isnan(0.0) ? _512 : (isnan(_512) ? 0.0 : max(_512, 0.0));
    float _513 = isnan(1.0) ? _1042 : (isnan(_1042) ? 1.0 : min(_1042, 1.0));
    float _520 = (_513 * ((_471.x * cbMtdParam._m0[14u].x) - _451)) + _451;
    float _521 = (_513 * ((_471.y * cbMtdParam._m0[14u].y) - _452)) + _452;
    float _522 = (_513 * ((_471.z * cbMtdParam._m0[14u].z) - _453)) + _453;
    vec4 _540 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _229) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _230) + cbTextureTilingScale._m0[4u].w));
    vec4 _557 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _559 = _557.x;
    float _560 = _557.y;
    float _561 = _557.z;
    float _568 = ((_540.x - _559) * _371) + _559;
    float _569 = ((_540.y - _560) * _371) + _560;
    float _570 = ((_540.z - _561) * _371) + _561;
    vec4 _582 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _229) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _230) + cbTextureTilingScale._m0[2u].w));
    float _593 = ((_582.x - _568) * _444) + _568;
    float _594 = ((_582.y - _569) * _444) + _569;
    float _595 = ((_582.z - _570) * _444) + _570;
    vec4 _607 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _229) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _230) + cbTextureTilingScale._m0[23u].w));
    float _620 = ((_607.z - _595) * _513) + _595;
    float _623 = ((((_607.x - _593) * _513) + _593) * 2.0) + (-1.0);
    float _625 = ((((_607.y - _594) * _513) + _594) * 2.0) + (-1.0);
    float _626 = dot(vec2(_623, _625), vec2(_623, _625));
    float _1053 = isnan(0.0) ? _626 : (isnan(_626) ? 0.0 : max(_626, 0.0));
    float _631 = sqrt(1.0 - (isnan(1.0) ? _1053 : (isnan(_1053) ? 1.0 : min(_1053, 1.0))));
    vec4 _645 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _657 = (((_645.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _623;
    float _658 = (((_645.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _625;
    float _661 = fma(_631, _197, fma(_658, _204, _657 * _190));
    float _664 = fma(_631, _198, fma(_658, _205, _657 * _191));
    float _667 = fma(_631, _199, fma(_658, _206, _657 * _192));
    float _671 = inversesqrt(dot(vec3(_661, _664, _667), vec3(_661, _664, _667)));
    vec4 _698 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _229) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _230) + cbTextureTilingScale._m0[11u].w));
    float _700 = _698.x;
    float _701 = 1.0 - _700;
    float _707 = (cbMtdParam._m0[19u].x + dot(vec4(_671 * _661, _671 * _664, _671 * _667, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_700 - _701) * cbMtdParam._m0[24u].w) + _701) * cbMtdParam._m0[21u].z);
    float _1064 = isnan(0.0) ? _707 : (isnan(_707) ? 0.0 : max(_707, 0.0));
    float _708 = isnan(1.0) ? _1064 : (isnan(_1064) ? 1.0 : min(_1064, 1.0));
    float _715 = (_708 * (cbMtdParam._m0[17u].x - _520)) + _520;
    float _716 = (_708 * (cbMtdParam._m0[17u].y - _521)) + _521;
    float _717 = (_708 * (cbMtdParam._m0[17u].z - _522)) + _522;
    float _721 = (cbMtdParam._m0[19u].w * (_645.z - _620)) + _620;
    vec4 _734 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _229) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _230) + cbTextureTilingScale._m0[15u].w));
    float _741 = (_734.x * 2.0) + (-1.0);
    float _742 = (_734.y * 2.0) + (-1.0);
    float _743 = dot(vec2(_741, _742), vec2(_741, _742));
    float _1075 = isnan(0.0) ? _743 : (isnan(_743) ? 0.0 : max(_743, 0.0));
    float _751 = ((_734.z - _721) * _708) + _721;
    float _761 = ((sqrt(1.0 - (isnan(1.0) ? _1075 : (isnan(_1075) ? 1.0 : min(_1075, 1.0)))) - _631) * _708) + _631;
    float _764 = (((_741 - _657) * _708) + _657) + (cbMtdParam._m0[21u].x * _657);
    float _765 = (((_742 - _658) * _708) + _658) + (cbMtdParam._m0[21u].x * _658);
    float _769 = cbMtdParam._m0[22u].x + _645.w;
    float _772 = fma(_761, _197, fma(_765, _204, _764 * _190));
    float _775 = fma(_761, _198, fma(_765, _205, _764 * _191));
    float _778 = fma(_761, _199, fma(_765, _206, _764 * _192));
    float _782 = inversesqrt(dot(vec3(_772, _775, _778), vec3(_772, _775, _778)));
    float _1086 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
    float _1097 = isnan(0.0) ? _769 : (isnan(_769) ? 0.0 : max(_769, 0.0));
    float _784 = isnan(1.0) ? _1097 : (isnan(_1097) ? 1.0 : min(_1097, 1.0));
    float _1108 = isnan(0.0) ? _715 : (isnan(_715) ? 0.0 : max(_715, 0.0));
    float _785 = isnan(1.0) ? _1108 : (isnan(_1108) ? 1.0 : min(_1108, 1.0));
    float _1119 = isnan(0.0) ? _716 : (isnan(_716) ? 0.0 : max(_716, 0.0));
    float _786 = isnan(1.0) ? _1119 : (isnan(_1119) ? 1.0 : min(_1119, 1.0));
    float _1130 = isnan(0.0) ? _717 : (isnan(_717) ? 0.0 : max(_717, 0.0));
    float _787 = isnan(1.0) ? _1130 : (isnan(_1130) ? 1.0 : min(_1130, 1.0));
    float _829 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _839 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _829);
    float _840 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _829);
    float _841 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _829);
    vec4 _846 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _848 = _846.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _908 = sqrt(((_839 * _839) + (_840 * _840)) + (_841 * _841));
        float _914 = (cbMatDynParam._m0[5u].x * _908) + cbMatDynParam._m0[5u].y;
        float _1141 = isnan(0.0) ? _914 : (isnan(_914) ? 0.0 : max(_914, 0.0));
        float _915 = isnan(1.0) ? _1141 : (isnan(_1141) ? 1.0 : min(_1141, 1.0));
        float _919 = (cbMatDynParam._m0[5u].z * _908) + cbMatDynParam._m0[5u].w;
        float _1152 = isnan(0.0) ? _919 : (isnan(_919) ? 0.0 : max(_919, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1152 : (isnan(_1152) ? 1.0 : min(_1152, 1.0))) - _915)) + _915) < ((_848 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _947;
    vec4 _870;
    float _877;
    float _878;
    float _879;
    float _880;
    float _884;
    vec4 _888;
    float _890;
    float _891;
    bool _902;
    for (;;)
    {
        _870 = cbInstanceData._m0[(_209 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _874 = (cbMtdParam._m0[0u].x * _785) * _870.x;
        float _875 = (cbMtdParam._m0[0u].y * _786) * _870.y;
        float _876 = (cbMtdParam._m0[0u].z * _787) * _870.z;
        float _1163 = isnan(0.0) ? _874 : (isnan(_874) ? 0.0 : max(_874, 0.0));
        _877 = isnan(1.0) ? _1163 : (isnan(_1163) ? 1.0 : min(_1163, 1.0));
        float _1174 = isnan(0.0) ? _875 : (isnan(_875) ? 0.0 : max(_875, 0.0));
        _878 = isnan(1.0) ? _1174 : (isnan(_1174) ? 1.0 : min(_1174, 1.0));
        float _1185 = isnan(0.0) ? _876 : (isnan(_876) ? 0.0 : max(_876, 0.0));
        _879 = isnan(1.0) ? _1185 : (isnan(_1185) ? 1.0 : min(_1185, 1.0));
        _880 = _784 * TEXCOORD_5.w;
        _884 = cbInstanceData._m0[_209 + 6u].w;
        float _885 = _848 + (-0.5);
        _888 = cbMtdParam._m0[1u];
        _890 = _888.y * _885;
        _891 = _885 * 0.999000012874603271484375;
        _902 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_902)
        {
            if ((cbInstanceData._m0[_209 + 7u].x + _891) < 0.5)
            {
                _947 = true;
                break;
            }
        }
        if ((_870.w < 1.0) && ((_870.w + _891) < 0.5))
        {
            _947 = true;
            break;
        }
        if ((_890 + 1.0) < _888.x)
        {
            _947 = true;
            break;
        }
        _947 = false;
        break;
    }
    if (_947)
    {
        discard_state = true;
    }
    bool _973 = cbMtdParam._m0[1u].z != 0.0;
    float _974 = _973 ? _884 : 0.0;
    SV_Target.x = ((_772 * 0.5) * _782) + 0.500488758087158203125;
    SV_Target.y = ((_775 * 0.5) * _782) + 0.500488758087158203125;
    SV_Target.z = ((_778 * 0.5) * _782) + 0.500488758087158203125;
    SV_Target.w = _974;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _1086 : (isnan(_1086) ? 1.0 : min(_1086, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _973 ? _884 : _880;
    SV_Target_2.x = _877;
    SV_Target_2.y = _878;
    SV_Target_2.z = _879;
    SV_Target_2.w = _973 ? _884 : (float(floatBitsToUint(cbInstanceData._m0[_209 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _974;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _974;
    discard_exit();
}


