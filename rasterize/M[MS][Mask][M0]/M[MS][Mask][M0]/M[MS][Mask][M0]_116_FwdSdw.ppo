#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1440;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _233 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _234 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _235 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _241 = inversesqrt(dot(vec3(_233, _234, _235), vec3(_233, _234, _235)));
    float _248 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _255 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _261 = uint(roundEven(NORMAL.w)) * 13u;
    uint _266 = _261 + 1u;
    uint _270 = _261 + 2u;
    float _279 = sqrt(((cbInstanceData._m0[_266].x * cbInstanceData._m0[_266].x) + (cbInstanceData._m0[_261].x * cbInstanceData._m0[_261].x)) + (cbInstanceData._m0[_270].x * cbInstanceData._m0[_270].x));
    float _280 = _279 * TEXCOORD.z;
    float _281 = _279 * TEXCOORD.w;
    vec4 _301 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _307 = _301.x * cbMtdParam._m0[11u].x;
    float _308 = _301.y * cbMtdParam._m0[11u].y;
    float _309 = _301.z * cbMtdParam._m0[11u].z;
    vec4 _328 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _280) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _281) + cbTextureTilingScale._m0[5u].w));
    vec4 _347 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _387 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _389 = _387.x;
    float _401 = dot(vec4(_389, _387.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _418 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _347.x) * 2.0) - ((((_389 - _401) * cbMtdParam._m0[24u].z) + _401) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4026 = isnan(0.0) ? _418 : (isnan(_418) ? 0.0 : max(_418, 0.0));
    float _419 = isnan(1.0) ? _4026 : (isnan(_4026) ? 1.0 : min(_4026, 1.0));
    float _426 = (_419 * ((_328.x * cbMtdParam._m0[12u].x) - _307)) + _307;
    float _427 = (_419 * ((_328.y * cbMtdParam._m0[12u].y) - _308)) + _308;
    float _428 = (_419 * ((_328.z * cbMtdParam._m0[12u].z) - _309)) + _309;
    vec4 _445 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _280) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _281) + cbTextureTilingScale._m0[3u].w));
    vec4 _465 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _467 = _465.x;
    float _477 = dot(vec4(_467, _465.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _491 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _347.y) * 2.0) - ((((_467 - _477) * cbMtdParam._m0[24u].z) + _477) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4037 = isnan(0.0) ? _491 : (isnan(_491) ? 0.0 : max(_491, 0.0));
    float _492 = isnan(1.0) ? _4037 : (isnan(_4037) ? 1.0 : min(_4037, 1.0));
    float _499 = (_492 * ((_445.x * cbMtdParam._m0[13u].x) - _426)) + _426;
    float _500 = (_492 * ((_445.y * cbMtdParam._m0[13u].y) - _427)) + _427;
    float _501 = (_492 * ((_445.z * cbMtdParam._m0[13u].z) - _428)) + _428;
    vec4 _519 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _280) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _281) + cbTextureTilingScale._m0[24u].w));
    vec4 _536 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _538 = _536.x;
    float _548 = dot(vec4(_538, _536.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _560 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _347.z) * 2.0) - ((((_538 - _548) * cbMtdParam._m0[24u].z) + _548) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4048 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
    float _561 = isnan(1.0) ? _4048 : (isnan(_4048) ? 1.0 : min(_4048, 1.0));
    float _568 = (_561 * ((_519.x * cbMtdParam._m0[14u].x) - _499)) + _499;
    float _569 = (_561 * ((_519.y * cbMtdParam._m0[14u].y) - _500)) + _500;
    float _570 = (_561 * ((_519.z * cbMtdParam._m0[14u].z) - _501)) + _501;
    vec4 _588 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _280) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _281) + cbTextureTilingScale._m0[4u].w));
    vec4 _605 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _607 = _605.x;
    float _608 = _605.y;
    float _609 = _605.z;
    float _616 = ((_588.x - _607) * _419) + _607;
    float _617 = ((_588.y - _608) * _419) + _608;
    float _618 = ((_588.z - _609) * _419) + _609;
    vec4 _630 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _280) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _281) + cbTextureTilingScale._m0[2u].w));
    float _641 = ((_630.x - _616) * _492) + _616;
    float _642 = ((_630.y - _617) * _492) + _617;
    float _643 = ((_630.z - _618) * _492) + _618;
    vec4 _655 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _280) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _281) + cbTextureTilingScale._m0[23u].w));
    float _668 = ((_655.z - _643) * _561) + _643;
    float _671 = ((((_655.x - _641) * _561) + _641) * 2.0) + (-1.0);
    float _673 = ((((_655.y - _642) * _561) + _642) * 2.0) + (-1.0);
    float _674 = dot(vec2(_671, _673), vec2(_671, _673));
    float _4059 = isnan(0.0) ? _674 : (isnan(_674) ? 0.0 : max(_674, 0.0));
    float _679 = sqrt(1.0 - (isnan(1.0) ? _4059 : (isnan(_4059) ? 1.0 : min(_4059, 1.0))));
    vec4 _693 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _718 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _280) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _281) + cbTextureTilingScale._m0[11u].w));
    float _720 = _718.x;
    float _721 = 1.0 - _720;
    float _727 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _730 = ((isnan(0.0) ? _727 : (isnan(_727) ? 0.0 : min(_727, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _739 = (_730 - ((((((_720 - _721) * cbMtdParam._m0[24u].w) + _721) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _730))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4080 = isnan(0.0) ? _739 : (isnan(_739) ? 0.0 : max(_739, 0.0));
    float _740 = isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0));
    float _747 = (_740 * (cbMtdParam._m0[17u].x - _568)) + _568;
    float _748 = (_740 * (cbMtdParam._m0[17u].y - _569)) + _569;
    float _749 = (_740 * (cbMtdParam._m0[17u].z - _570)) + _570;
    vec4 _761 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _280) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _281) + cbTextureTilingScale._m0[19u].w));
    float _763 = _761.x;
    float _764 = 1.0 - _763;
    float _791 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_763 - _764) * cbMtdParam._m0[24u].y) + _764) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4091 = isnan(0.0) ? _791 : (isnan(_791) ? 0.0 : max(_791, 0.0));
    float _792 = isnan(1.0) ? _4091 : (isnan(_4091) ? 1.0 : min(_4091, 1.0));
    float _800 = ((((cbMtdParam._m0[10u].x - _747) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _792) + _747;
    float _801 = ((((cbMtdParam._m0[10u].y - _748) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _792) + _748;
    float _802 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _749)) * _792) + _749;
    float _806 = (cbMtdParam._m0[19u].w * (_693.z - _668)) + _668;
    vec4 _820 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _280) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _281) + cbTextureTilingScale._m0[15u].w));
    float _827 = (_820.x * 2.0) + (-1.0);
    float _828 = (_820.y * 2.0) + (-1.0);
    float _829 = dot(vec2(_827, _828), vec2(_827, _828));
    float _4102 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
    float _837 = (_740 * (_820.z - _806)) + _806;
    float _840 = ((cbMtdParam._m0[23u].y - _837) * _792) + _837;
    vec4 _859 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _280) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _281) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _865 = (_859.x * 2.0) + (-1.0);
    float _866 = (_859.y * 2.0) + (-1.0);
    float _867 = dot(vec2(_865, _866), vec2(_865, _866));
    float _4113 = isnan(0.0) ? _867 : (isnan(_867) ? 0.0 : max(_867, 0.0));
    float _875 = (((_693.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _671;
    float _876 = (((_693.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _673;
    float _888 = (((_827 - _875) + (cbMtdParam._m0[21u].x * _875)) * _740) + _875;
    float _889 = (((_828 - _876) + (cbMtdParam._m0[21u].x * _876)) * _740) + _876;
    float _890 = (_740 * (sqrt(1.0 - (isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0)))) - _679)) + _679;
    float _901 = (((_865 - _888) + (_888 * cbMtdParam._m0[22u].z)) * _792) + _888;
    float _902 = (((_866 - _889) + (_889 * cbMtdParam._m0[22u].z)) * _792) + _889;
    float _903 = ((sqrt(1.0 - (isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0)))) - _890) * _792) + _890;
    float _905 = cbMtdParam._m0[22u].x + _693.w;
    float _908 = fma(_903, _248 * NORMAL.x, fma(_902, _255 * TANGENT.x, (_241 * _233) * _901));
    float _911 = fma(_903, _248 * NORMAL.y, fma(_902, _255 * TANGENT.y, (_241 * _234) * _901));
    float _914 = fma(_903, _248 * NORMAL.z, fma(_902, _255 * TANGENT.z, (_241 * _235) * _901));
    float _918 = inversesqrt(dot(vec3(_908, _911, _914), vec3(_908, _911, _914)));
    float _919 = _918 * _908;
    float _920 = _918 * _911;
    float _921 = _918 * _914;
    float _4124 = isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : max(_840, 0.0));
    float _922 = isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0));
    float _4135 = isnan(0.0) ? _905 : (isnan(_905) ? 0.0 : max(_905, 0.0));
    float _4146 = isnan(0.0) ? _800 : (isnan(_800) ? 0.0 : max(_800, 0.0));
    float _4157 = isnan(0.0) ? _801 : (isnan(_801) ? 0.0 : max(_801, 0.0));
    float _4168 = isnan(0.0) ? _802 : (isnan(_802) ? 0.0 : max(_802, 0.0));
    float _940 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _981 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _991 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _981);
    float _992 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _981);
    float _993 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _981);
    float _997 = inversesqrt(dot(vec3(_991, _992, _993), vec3(_991, _992, _993)));
    float _998 = _991 * _997;
    float _999 = _992 * _997;
    float _1000 = _993 * _997;
    float _1006 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1007 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1025 = fma(_921, cbSceneParam._m0[5u].z, fma(_920, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _919));
    float _1028 = fma(_921, cbSceneParam._m0[6u].z, fma(_920, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _919));
    float _1031 = fma(_921, cbSceneParam._m0[7u].z, fma(_920, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _919));
    uint _1045 = (_261 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1051 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4146 : (isnan(_4146) ? 1.0 : min(_4146, 1.0)))) * cbInstanceData._m0[_1045].x;
    float _1052 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4157 : (isnan(_4157) ? 1.0 : min(_4157, 1.0)))) * cbInstanceData._m0[_1045].y;
    float _1053 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4168 : (isnan(_4168) ? 1.0 : min(_4168, 1.0)))) * cbInstanceData._m0[_1045].z;
    float _4179 = isnan(0.0) ? _1051 : (isnan(_1051) ? 0.0 : max(_1051, 0.0));
    float _1054 = isnan(1.0) ? _4179 : (isnan(_4179) ? 1.0 : min(_4179, 1.0));
    float _4190 = isnan(0.0) ? _1052 : (isnan(_1052) ? 0.0 : max(_1052, 0.0));
    float _1055 = isnan(1.0) ? _4190 : (isnan(_4190) ? 1.0 : min(_4190, 1.0));
    float _4201 = isnan(0.0) ? _1053 : (isnan(_1053) ? 0.0 : max(_1053, 0.0));
    float _1056 = isnan(1.0) ? _4201 : (isnan(_4201) ? 1.0 : min(_4201, 1.0));
    vec4 _1065 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1006, cbSceneParam._m0[86u].y * _1007));
    float _1069 = ((isnan(1.0) ? _4135 : (isnan(_4135) ? 1.0 : min(_4135, 1.0))) * TEXCOORD_5.w) * _1065.x;
    float _1070 = dot(vec3(_919, _920, _921), vec3(_998, _999, _1000));
    float _1073 = _1070 * 2.0;
    float _1077 = (_1073 * _919) - _998;
    float _1078 = (_1073 * _920) - _999;
    float _1079 = (_1073 * _921) - _1000;
    float _1083 = abs(dot(vec3(_998, _999, _1000), vec3(_919, _920, _921)));
    float _4212 = isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0));
    float _1085 = sqrt(_922);
    float _1098 = exp2((_1085 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4212 : (isnan(_4212) ? 1.0 : min(_4212, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1085 * 3.0));
    float _1130 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1134 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1138 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1439;
    float _1441;
    float _1442;
    float _1443;
    float _1444;
    float _1445;
    float _1446;
    float _1447;
    float _1448;
    float _1449;
    float _1450;
    float _1451;
    float _1452;
    float _1453;
    float _1454;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1164 = fma(_1138, cbModelParam._m0[26u].z, fma(_1134, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1130));
        float _1168 = fma(_1138, cbModelParam._m0[27u].z, fma(_1134, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1130));
        float _1172 = fma(_1138, cbModelParam._m0[28u].z, fma(_1134, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1130));
        float _1197 = _1130 + _919;
        float _1198 = _1134 + _920;
        float _1199 = _1138 + _921;
        float _1209 = fma(_1199, cbModelParam._m0[26u].z, fma(_1198, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1197)) - _1164;
        float _1210 = fma(_1199, cbModelParam._m0[27u].z, fma(_1198, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1197)) - _1168;
        float _1211 = fma(_1199, cbModelParam._m0[28u].z, fma(_1198, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1197)) - _1172;
        float _1215 = inversesqrt(dot(vec3(_1209, _1210, _1211), vec3(_1209, _1210, _1211)));
        float _1228 = ((_1215 * _1209) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1164 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1229 = ((_1215 * _1210) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1168 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1230 = ((_1215 * _1211) / cbModelParam._m0[34u].z) + ((((((_1172 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1233 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1228, _1229, _1230), 0.0);
        vec4 _1240 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1228, _1229, _1230), 0.0);
        vec4 _1247 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1228, _1229, _1230), 0.0);
        vec4 _1254 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1228, _1229, _1230), 0.0);
        float _1267 = exp2((_1233.w + (-0.5)) * 20.0) * 2.0;
        float _1268 = _1267 * (_1233.x + (-0.5));
        float _1269 = _1267 * (_1233.y + (-0.5));
        float _1270 = _1267 * (_1233.z + (-0.5));
        float _1277 = exp2((_1240.w + (-0.5)) * 20.0) * 2.0;
        float _1278 = _1277 * (_1240.x + (-0.5));
        float _1279 = _1277 * (_1240.y + (-0.5));
        float _1280 = _1277 * (_1240.z + (-0.5));
        float _1287 = exp2((_1247.w + (-0.5)) * 20.0) * 2.0;
        float _1288 = _1287 * (_1247.x + (-0.5));
        float _1289 = _1287 * (_1247.y + (-0.5));
        float _1290 = _1287 * (_1247.z + (-0.5));
        float _1297 = exp2((_1254.w + (-0.5)) * 20.0) * 2.0;
        float _1298 = _1297 * (_1254.x + (-0.5));
        float _1299 = _1297 * (_1254.y + (-0.5));
        float _1300 = _1297 * (_1254.z + (-0.5));
        float _1301 = isnan(0.0) ? _1298 : (isnan(_1298) ? 0.0 : max(_1298, 0.0));
        float _1302 = isnan(0.0) ? _1299 : (isnan(_1299) ? 0.0 : max(_1299, 0.0));
        float _1303 = isnan(0.0) ? _1300 : (isnan(_1300) ? 0.0 : max(_1300, 0.0));
        float _1304 = _1268 * 0.5;
        float _1305 = _1278 * 0.5;
        float _1306 = _1288 * 0.5;
        float _1307 = dot(vec3(_1304, _1305, _1306), vec3(_1304, _1305, _1306));
        float _1312 = (_1307 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1307);
        float _1321 = (dot(vec3(_919, _920, _921), vec3(_1312 * _1304, _1312 * _1305, _1312 * _1306)) + 1.0) * 0.5;
        float _4238 = isnan(0.0) ? _1321 : (isnan(_1321) ? 0.0 : max(_1321, 0.0));
        float _1331 = sqrt(((_1305 * _1305) + (_1304 * _1304)) + (_1306 * _1306)) / (_1301 + 9.9999997473787516355514526367188e-06);
        float _4249 = isnan(0.0) ? _1331 : (isnan(_1331) ? 0.0 : max(_1331, 0.0));
        float _1332 = isnan(1.0) ? _4249 : (isnan(_4249) ? 1.0 : min(_4249, 1.0));
        float _1333 = _1332 * 2.0;
        float _1337 = (1.0 - _1332) / (_1332 + 1.0);
        float _4260 = isnan(0.0) ? _1337 : (isnan(_1337) ? 0.0 : max(_1337, 0.0));
        float _1338 = isnan(1.0) ? _4260 : (isnan(_4260) ? 1.0 : min(_4260, 1.0));
        float _1347 = ((((1.0 - _1338) * (_1333 + 2.0)) * exp2(log2(isnan(1.0) ? _4238 : (isnan(_4238) ? 1.0 : min(_4238, 1.0))) * (_1333 + 1.0))) + _1338) * _1301;
        float _1348 = _1269 * 0.5;
        float _1349 = _1279 * 0.5;
        float _1350 = _1289 * 0.5;
        float _1351 = dot(vec3(_1348, _1349, _1350), vec3(_1348, _1349, _1350));
        float _1356 = (_1351 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1351);
        float _1364 = (dot(vec3(_919, _920, _921), vec3(_1356 * _1348, _1356 * _1349, _1356 * _1350)) + 1.0) * 0.5;
        float _4271 = isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : max(_1364, 0.0));
        float _1373 = sqrt(((_1349 * _1349) + (_1348 * _1348)) + (_1350 * _1350)) / (_1302 + 9.9999997473787516355514526367188e-06);
        float _4282 = isnan(0.0) ? _1373 : (isnan(_1373) ? 0.0 : max(_1373, 0.0));
        float _1374 = isnan(1.0) ? _4282 : (isnan(_4282) ? 1.0 : min(_4282, 1.0));
        float _1375 = _1374 * 2.0;
        float _1379 = (1.0 - _1374) / (_1374 + 1.0);
        float _4293 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1380 = isnan(1.0) ? _4293 : (isnan(_4293) ? 1.0 : min(_4293, 1.0));
        float _1389 = ((((1.0 - _1380) * (_1375 + 2.0)) * exp2(log2(isnan(1.0) ? _4271 : (isnan(_4271) ? 1.0 : min(_4271, 1.0))) * (_1375 + 1.0))) + _1380) * _1302;
        float _1390 = _1270 * 0.5;
        float _1391 = _1280 * 0.5;
        float _1392 = _1290 * 0.5;
        float _1393 = dot(vec3(_1390, _1391, _1392), vec3(_1390, _1391, _1392));
        float _1398 = (_1393 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1393);
        float _1406 = (dot(vec3(_919, _920, _921), vec3(_1398 * _1390, _1398 * _1391, _1398 * _1392)) + 1.0) * 0.5;
        float _4304 = isnan(0.0) ? _1406 : (isnan(_1406) ? 0.0 : max(_1406, 0.0));
        float _1415 = sqrt(((_1391 * _1391) + (_1390 * _1390)) + (_1392 * _1392)) / (_1303 + 9.9999997473787516355514526367188e-06);
        float _4315 = isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0));
        float _1416 = isnan(1.0) ? _4315 : (isnan(_4315) ? 1.0 : min(_4315, 1.0));
        float _1417 = _1416 * 2.0;
        float _1421 = (1.0 - _1416) / (_1416 + 1.0);
        float _4326 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
        float _1422 = isnan(1.0) ? _4326 : (isnan(_4326) ? 1.0 : min(_4326, 1.0));
        float _1431 = ((((1.0 - _1422) * (_1417 + 2.0)) * exp2(log2(isnan(1.0) ? _4304 : (isnan(_4304) ? 1.0 : min(_4304, 1.0))) * (_1417 + 1.0))) + _1422) * _1303;
        _1439 = _1270;
        _1441 = _1269;
        _1442 = _1268;
        _1443 = _1280;
        _1444 = _1279;
        _1445 = _1278;
        _1446 = _1290;
        _1447 = _1289;
        _1448 = _1288;
        _1449 = _1303;
        _1450 = _1302;
        _1451 = _1301;
        _1452 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1347 : (isnan(_1347) ? 0.0 : max(_1347, 0.0)));
        _1453 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1389 : (isnan(_1389) ? 0.0 : max(_1389, 0.0)));
        _1454 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : max(_1431, 0.0)));
    }
    else
    {
        _1439 = _1440;
        _1441 = _1440;
        _1442 = _1440;
        _1443 = _1440;
        _1444 = _1440;
        _1445 = _1440;
        _1446 = _1440;
        _1447 = _1440;
        _1448 = _1440;
        _1449 = _1440;
        _1450 = _1440;
        _1451 = _1440;
        _1452 = 0.0;
        _1453 = 0.0;
        _1454 = 0.0;
    }
    float _1746;
    float _1747;
    float _1748;
    float _1749;
    float _1750;
    float _1751;
    float _1752;
    float _1753;
    float _1754;
    float _1755;
    float _1756;
    float _1757;
    float _1758;
    float _1759;
    float _1760;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1477 = fma(_1138, cbModelParam._m0[30u].z, fma(_1134, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1130));
        float _1481 = fma(_1138, cbModelParam._m0[31u].z, fma(_1134, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1130));
        float _1485 = fma(_1138, cbModelParam._m0[32u].z, fma(_1134, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1130));
        float _1508 = _1130 + _919;
        float _1509 = _1134 + _920;
        float _1510 = _1138 + _921;
        float _1520 = fma(_1510, cbModelParam._m0[30u].z, fma(_1509, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1508)) - _1477;
        float _1521 = fma(_1510, cbModelParam._m0[31u].z, fma(_1509, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1508)) - _1481;
        float _1522 = fma(_1510, cbModelParam._m0[32u].z, fma(_1509, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1508)) - _1485;
        float _1526 = inversesqrt(dot(vec3(_1520, _1521, _1522), vec3(_1520, _1521, _1522)));
        float _1539 = ((_1526 * _1520) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1477 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1540 = ((_1526 * _1521) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1481 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1541 = ((_1526 * _1522) / cbModelParam._m0[35u].z) + ((((((_1485 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1543 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1539, _1540, _1541), 0.0);
        vec4 _1550 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1539, _1540, _1541), 0.0);
        vec4 _1557 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1539, _1540, _1541), 0.0);
        vec4 _1564 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1539, _1540, _1541), 0.0);
        float _1576 = exp2((_1543.w + (-0.5)) * 20.0) * 2.0;
        float _1577 = _1576 * (_1543.x + (-0.5));
        float _1578 = _1576 * (_1543.y + (-0.5));
        float _1579 = _1576 * (_1543.z + (-0.5));
        float _1586 = exp2((_1550.w + (-0.5)) * 20.0) * 2.0;
        float _1587 = _1586 * (_1550.x + (-0.5));
        float _1588 = _1586 * (_1550.y + (-0.5));
        float _1589 = _1586 * (_1550.z + (-0.5));
        float _1596 = exp2((_1557.w + (-0.5)) * 20.0) * 2.0;
        float _1597 = _1596 * (_1557.x + (-0.5));
        float _1598 = _1596 * (_1557.y + (-0.5));
        float _1599 = _1596 * (_1557.z + (-0.5));
        float _1606 = exp2((_1564.w + (-0.5)) * 20.0) * 2.0;
        float _1607 = _1606 * (_1564.x + (-0.5));
        float _1608 = _1606 * (_1564.y + (-0.5));
        float _1609 = _1606 * (_1564.z + (-0.5));
        float _1610 = isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0));
        float _1611 = isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0));
        float _1612 = isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0));
        float _1613 = _1577 * 0.5;
        float _1614 = _1587 * 0.5;
        float _1615 = _1597 * 0.5;
        float _1616 = dot(vec3(_1613, _1614, _1615), vec3(_1613, _1614, _1615));
        float _1621 = (_1616 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1616);
        float _1629 = (dot(vec3(_919, _920, _921), vec3(_1621 * _1613, _1621 * _1614, _1621 * _1615)) + 1.0) * 0.5;
        float _4367 = isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0));
        float _1638 = sqrt(((_1614 * _1614) + (_1613 * _1613)) + (_1615 * _1615)) / (_1610 + 9.9999997473787516355514526367188e-06);
        float _4378 = isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0));
        float _1639 = isnan(1.0) ? _4378 : (isnan(_4378) ? 1.0 : min(_4378, 1.0));
        float _1640 = _1639 * 2.0;
        float _1644 = (1.0 - _1639) / (_1639 + 1.0);
        float _4389 = isnan(0.0) ? _1644 : (isnan(_1644) ? 0.0 : max(_1644, 0.0));
        float _1645 = isnan(1.0) ? _4389 : (isnan(_4389) ? 1.0 : min(_4389, 1.0));
        float _1654 = ((((1.0 - _1645) * (_1640 + 2.0)) * exp2(log2(isnan(1.0) ? _4367 : (isnan(_4367) ? 1.0 : min(_4367, 1.0))) * (_1640 + 1.0))) + _1645) * _1610;
        float _1655 = _1578 * 0.5;
        float _1656 = _1588 * 0.5;
        float _1657 = _1598 * 0.5;
        float _1658 = dot(vec3(_1655, _1656, _1657), vec3(_1655, _1656, _1657));
        float _1663 = (_1658 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1658);
        float _1671 = (dot(vec3(_919, _920, _921), vec3(_1663 * _1655, _1663 * _1656, _1663 * _1657)) + 1.0) * 0.5;
        float _4400 = isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0));
        float _1680 = sqrt(((_1656 * _1656) + (_1655 * _1655)) + (_1657 * _1657)) / (_1611 + 9.9999997473787516355514526367188e-06);
        float _4411 = isnan(0.0) ? _1680 : (isnan(_1680) ? 0.0 : max(_1680, 0.0));
        float _1681 = isnan(1.0) ? _4411 : (isnan(_4411) ? 1.0 : min(_4411, 1.0));
        float _1682 = _1681 * 2.0;
        float _1686 = (1.0 - _1681) / (_1681 + 1.0);
        float _4422 = isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0));
        float _1687 = isnan(1.0) ? _4422 : (isnan(_4422) ? 1.0 : min(_4422, 1.0));
        float _1696 = ((((1.0 - _1687) * (_1682 + 2.0)) * exp2(log2(isnan(1.0) ? _4400 : (isnan(_4400) ? 1.0 : min(_4400, 1.0))) * (_1682 + 1.0))) + _1687) * _1611;
        float _1697 = _1579 * 0.5;
        float _1698 = _1589 * 0.5;
        float _1699 = _1599 * 0.5;
        float _1700 = dot(vec3(_1697, _1698, _1699), vec3(_1697, _1698, _1699));
        float _1705 = (_1700 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1700);
        float _1713 = (dot(vec3(_919, _920, _921), vec3(_1705 * _1697, _1705 * _1698, _1705 * _1699)) + 1.0) * 0.5;
        float _4433 = isnan(0.0) ? _1713 : (isnan(_1713) ? 0.0 : max(_1713, 0.0));
        float _1722 = sqrt(((_1698 * _1698) + (_1697 * _1697)) + (_1699 * _1699)) / (_1612 + 9.9999997473787516355514526367188e-06);
        float _4444 = isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0));
        float _1723 = isnan(1.0) ? _4444 : (isnan(_4444) ? 1.0 : min(_4444, 1.0));
        float _1724 = _1723 * 2.0;
        float _1728 = (1.0 - _1723) / (_1723 + 1.0);
        float _4455 = isnan(0.0) ? _1728 : (isnan(_1728) ? 0.0 : max(_1728, 0.0));
        float _1729 = isnan(1.0) ? _4455 : (isnan(_4455) ? 1.0 : min(_4455, 1.0));
        float _1738 = ((((1.0 - _1729) * (_1724 + 2.0)) * exp2(log2(isnan(1.0) ? _4433 : (isnan(_4433) ? 1.0 : min(_4433, 1.0))) * (_1724 + 1.0))) + _1729) * _1612;
        _1746 = _1579;
        _1747 = _1578;
        _1748 = _1577;
        _1749 = _1589;
        _1750 = _1588;
        _1751 = _1587;
        _1752 = _1599;
        _1753 = _1598;
        _1754 = _1597;
        _1755 = _1612;
        _1756 = _1611;
        _1757 = _1610;
        _1758 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0)));
        _1759 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0)));
        _1760 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1738 : (isnan(_1738) ? 0.0 : max(_1738, 0.0)));
    }
    else
    {
        _1746 = _1440;
        _1747 = _1440;
        _1748 = _1440;
        _1749 = _1440;
        _1750 = _1440;
        _1751 = _1440;
        _1752 = _1440;
        _1753 = _1440;
        _1754 = _1440;
        _1755 = _1440;
        _1756 = _1440;
        _1757 = _1440;
        _1758 = 0.0;
        _1759 = 0.0;
        _1760 = 0.0;
    }
    float _1770 = (cbModelParam._m0[1u].x * (_1758 - _1452)) + _1452;
    float _1771 = (cbModelParam._m0[1u].x * (_1759 - _1453)) + _1453;
    float _1772 = (cbModelParam._m0[1u].x * (_1760 - _1454)) + _1454;
    float _1793 = fma(_1772, cbSceneParam._m0[89u].z, fma(_1771, cbSceneParam._m0[89u].y, _1770 * cbSceneParam._m0[89u].x));
    float _1796 = fma(_1772, cbSceneParam._m0[90u].z, fma(_1771, cbSceneParam._m0[90u].y, _1770 * cbSceneParam._m0[90u].x));
    float _1799 = fma(_1772, cbSceneParam._m0[91u].z, fma(_1771, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1770));
    float _1814 = _1077 * 0.5;
    float _1815 = _1078 * 0.5;
    float _1816 = _1079 * 0.5;
    float _1817 = dot(vec4(_1814, _1815, _1816, 1.0), vec4(_1748, _1751, _1754, _1757));
    float _1820 = dot(vec4(_1814, _1815, _1816, 1.0), vec4(_1747, _1750, _1753, _1756));
    float _1823 = dot(vec4(_1814, _1815, _1816, 1.0), vec4(_1746, _1749, _1752, _1755));
    float _1857;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1830 = dot(vec4(_1814, _1815, _1816, 1.0), vec4(_1439, _1443, _1446, _1449));
        float _1834 = dot(vec4(_1814, _1815, _1816, 1.0), vec4(_1441, _1444, _1447, _1450));
        float _1838 = dot(vec4(_1814, _1815, _1816, 1.0), vec4(_1442, _1445, _1448, _1451));
        float _1845 = dot(vec4(cbModelParam._m0[39u]), vec4(_1814, _1815, _1816, 1.0));
        _1857 = dot(vec3(isnan(0.0) ? _1838 : (isnan(_1838) ? 0.0 : max(_1838, 0.0)), isnan(0.0) ? _1834 : (isnan(_1834) ? 0.0 : max(_1834, 0.0)), isnan(0.0) ? _1830 : (isnan(_1830) ? 0.0 : max(_1830, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1845) ? 0.0 : (isnan(0.0) ? _1845 : max(0.0, _1845))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1857 = 1.0;
    }
    float _1868;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1859 = dot(vec4(cbModelParam._m0[40u]), vec4(_1814, _1815, _1816, 1.0));
        _1868 = dot(vec3(isnan(0.0) ? _1817 : (isnan(_1817) ? 0.0 : max(_1817, 0.0)), isnan(0.0) ? _1820 : (isnan(_1820) ? 0.0 : max(_1820, 0.0)), isnan(0.0) ? _1823 : (isnan(_1823) ? 0.0 : max(_1823, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1859) ? 0.0 : (isnan(0.0) ? _1859 : max(0.0, _1859))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1868 = 1.0;
    }
    float _1872 = (_1868 * cbModelParam._m0[1u].x) + (_1857 * (1.0 - cbModelParam._m0[1u].x));
    float _1882 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _922);
    float _1883 = isnan(_1882) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1882 : min(cbModelParam._m0[25u].z, _1882));
    float _1963;
    float _1965;
    float _1967;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1930 = fma(_1138, cbModelParam._m0[13u].z, fma(_1134, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1130)) + cbModelParam._m0[13u].w;
        float _1934 = fma(_1138, cbModelParam._m0[14u].z, fma(_1134, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1130)) + cbModelParam._m0[14u].w;
        float _1938 = fma(_1138, cbModelParam._m0[15u].z, fma(_1134, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1130)) + cbModelParam._m0[15u].w;
        float _1941 = fma(_1079, cbModelParam._m0[13u].z, fma(_1078, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1077));
        float _1944 = fma(_1079, cbModelParam._m0[14u].z, fma(_1078, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1077));
        float _1947 = fma(_1079, cbModelParam._m0[15u].z, fma(_1078, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1077));
        float _1975;
        if (_1941 > 0.0)
        {
            _1975 = abs((1.0 - _1930) / _1941);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1941 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1930 + 1.0) / _1941);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1975 = frontier_phi_14_12_ladder;
        }
        float _2145;
        if (_1944 > 0.0)
        {
            _2145 = abs((1.0 - _1934) / _1944);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1944 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1934 + 1.0) / _1944);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2145 = frontier_phi_23_19_ladder;
        }
        float _2440;
        if (_1947 > 0.0)
        {
            _2440 = abs((1.0 - _1938) / _1947);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1947 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1938 + 1.0) / _1947);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2440 = frontier_phi_35_30_ladder;
        }
        float _2442 = isnan(_2145) ? _1975 : (isnan(_1975) ? _2145 : min(_1975, _2145));
        float _2443 = isnan(_2440) ? _2442 : (isnan(_2442) ? _2440 : min(_2442, _2440));
        float _2447 = (_2443 * _1941) + _1930;
        float _2448 = (_2443 * _1944) + _1934;
        float _2449 = (_2443 * _1947) + _1938;
        float _2450 = _2443 * 9.9999997473787516355514526367188e-05;
        float _2452 = (-1.0) - _2450;
        float _2454 = _2450 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2449 > _2454) || ((_2449 < _2452) || ((_2448 > _2454) || ((_2448 < _2452) || ((_2447 < _2452) || (_2447 > _2454))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2594 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2449, cbModelParam._m0[9u].z, fma(_2448, cbModelParam._m0[9u].y, _2447 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2449, cbModelParam._m0[10u].z, fma(_2448, cbModelParam._m0[10u].y, _2447 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2449, cbModelParam._m0[11u].z, fma(_2448, cbModelParam._m0[11u].y, _2447 * cbModelParam._m0[11u].x))), _1883);
            frontier_phi_13_35_ladder = _2594.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2594.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2594.x * cbModelParam._m0[1u].y;
        }
        _1963 = frontier_phi_13_35_ladder_2;
        _1965 = frontier_phi_13_35_ladder_1;
        _1967 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1951 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1077, _1078, _1079), _1883);
        _1963 = _1951.x * cbModelParam._m0[1u].y;
        _1965 = _1951.y * cbModelParam._m0[1u].y;
        _1967 = _1951.z * cbModelParam._m0[1u].y;
    }
    float _1971 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _922);
    float _1972 = isnan(_1971) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1971 : min(cbModelParam._m0[25u].w, _1971));
    float _2062;
    float _2064;
    float _2066;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2026 = fma(_1138, cbModelParam._m0[21u].z, fma(_1134, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1130)) + cbModelParam._m0[21u].w;
        float _2030 = fma(_1138, cbModelParam._m0[22u].z, fma(_1134, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1130)) + cbModelParam._m0[22u].w;
        float _2034 = fma(_1138, cbModelParam._m0[23u].z, fma(_1134, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1130)) + cbModelParam._m0[23u].w;
        float _2037 = fma(_1079, cbModelParam._m0[21u].z, fma(_1078, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1077));
        float _2040 = fma(_1079, cbModelParam._m0[22u].z, fma(_1078, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1077));
        float _2043 = fma(_1079, cbModelParam._m0[23u].z, fma(_1078, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1077));
        float _2150;
        if (_2037 > 0.0)
        {
            _2150 = abs((1.0 - _2026) / _2037);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2037 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2026 + 1.0) / _2037);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2150 = frontier_phi_25_21_ladder;
        }
        float _2467;
        if (_2040 > 0.0)
        {
            _2467 = abs((1.0 - _2030) / _2040);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2040 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2030 + 1.0) / _2040);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2467 = frontier_phi_37_32_ladder;
        }
        float _2794;
        if (_2043 > 0.0)
        {
            _2794 = abs((1.0 - _2034) / _2043);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2043 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2034 + 1.0) / _2043);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2794 = frontier_phi_47_44_ladder;
        }
        float _2796 = isnan(_2467) ? _2150 : (isnan(_2150) ? _2467 : min(_2150, _2467));
        float _2797 = isnan(_2794) ? _2796 : (isnan(_2796) ? _2794 : min(_2796, _2794));
        float _2801 = (_2797 * _2037) + _2026;
        float _2802 = (_2797 * _2040) + _2030;
        float _2803 = (_2797 * _2043) + _2034;
        float _2804 = _2797 * 9.9999997473787516355514526367188e-05;
        float _2805 = (-1.0) - _2804;
        float _2807 = _2804 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2803 > _2807) || ((_2803 < _2805) || ((_2802 > _2807) || ((_2802 < _2805) || ((_2801 < _2805) || (_2801 > _2807))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2921 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2803, cbModelParam._m0[17u].z, fma(_2802, cbModelParam._m0[17u].y, _2801 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2803, cbModelParam._m0[18u].z, fma(_2802, cbModelParam._m0[18u].y, _2801 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2803, cbModelParam._m0[19u].z, fma(_2802, cbModelParam._m0[19u].y, _2801 * cbModelParam._m0[19u].x))), _1972);
            frontier_phi_22_47_ladder = _2921.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2921.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2921.x * cbModelParam._m0[1u].z;
        }
        _2062 = frontier_phi_22_47_ladder_2;
        _2064 = frontier_phi_22_47_ladder_1;
        _2066 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2046 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1077, _1078, _1079), _1972);
        _2062 = _2046.x * cbModelParam._m0[1u].z;
        _2064 = _2046.y * cbModelParam._m0[1u].z;
        _2066 = _2046.z * cbModelParam._m0[1u].z;
    }
    float _2078 = ((((1.0 - _1098) * ((_1085 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1098 * _1085)) * _1069;
    float _2079 = _2078 * ((cbModelParam._m0[1u].w * (_2062 - _1963)) + _1963);
    float _2080 = _2078 * ((cbModelParam._m0[1u].w * (_2064 - _1965)) + _1965);
    float _2081 = _2078 * ((cbModelParam._m0[1u].w * (_2066 - _1967)) + _1967);
    float _2084 = fma(_2081, cbSceneParam._m0[89u].z, fma(_2080, cbSceneParam._m0[89u].y, _2079 * cbSceneParam._m0[89u].x));
    float _2087 = fma(_2081, cbSceneParam._m0[90u].z, fma(_2080, cbSceneParam._m0[90u].y, _2079 * cbSceneParam._m0[90u].x));
    float _2090 = fma(_2081, cbSceneParam._m0[91u].z, fma(_2080, cbSceneParam._m0[91u].y, _2079 * cbSceneParam._m0[91u].x));
    float _2124 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2128 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2132 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2136 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2137 = _2124 / _2136;
    float _2138 = _2128 / _2136;
    float _2139 = _2132 / _2136;
    float _2286;
    float _2287;
    float _2288;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2166 = ((uint(_2139 > cbSceneParam._m0[59u].y) + uint(_2139 > cbSceneParam._m0[59u].x)) + uint(_2139 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2167 = _2166 + 43u;
        uint _2175 = _2166 + 44u;
        uint _2183 = _2166 + 45u;
        uint _2191 = _2166 + 46u;
        float _2202 = fma(_2136, cbSceneParam._m0[_2167].w, fma(_2132, cbSceneParam._m0[_2167].z, fma(_2128, cbSceneParam._m0[_2167].y, _2124 * cbSceneParam._m0[_2167].x)));
        float _2206 = fma(_2136, cbSceneParam._m0[_2175].w, fma(_2132, cbSceneParam._m0[_2175].z, fma(_2128, cbSceneParam._m0[_2175].y, _2124 * cbSceneParam._m0[_2175].x)));
        float _2214 = fma(_2136, cbSceneParam._m0[_2191].w, fma(_2132, cbSceneParam._m0[_2191].z, fma(_2128, cbSceneParam._m0[_2191].y, _2124 * cbSceneParam._m0[_2191].x)));
        float _2219 = cbSceneParam._m0[33u].z * _2214;
        float _2221 = cbSceneParam._m0[33u].w * _2214;
        float _2224 = fma(_2136, cbSceneParam._m0[_2183].w, fma(_2132, cbSceneParam._m0[_2183].z, fma(_2128, cbSceneParam._m0[_2183].y, _2124 * cbSceneParam._m0[_2183].x))) / _2214;
        float _2272 = (cbSceneParam._m0[33u].x - sqrt(((_2138 * _2138) + (_2137 * _2137)) + (_2139 * _2139))) * cbSceneParam._m0[33u].y;
        float _4581 = isnan(0.0) ? _2272 : (isnan(_2272) ? 0.0 : max(_2272, 0.0));
        float _2279 = (isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2219 + _2202) / _2214, (_2221 + _2206) / _2214), _2224), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2221 + _2202) / _2214, (_2206 - _2219) / _2214), _2224), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2202 - _2219) / _2214, (_2206 - _2221) / _2214), _2224), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2202 - _2221) / _2214, (_2219 + _2206) / _2214), _2224), 0.0)).x), vec4(0.25)));
        _2286 = 1.0 - (_2279 * cbSceneParam._m0[34u].x);
        _2287 = 1.0 - (_2279 * cbSceneParam._m0[34u].y);
        _2288 = 1.0 - (_2279 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2286 = 1.0;
        _2287 = 1.0;
        _2288 = 1.0;
    }
    float _2352;
    float _2354;
    float _2356;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2340 = fma(_2136, cbSceneParam._m0[63u].w, fma(_2132, cbSceneParam._m0[63u].z, fma(_2128, cbSceneParam._m0[63u].y, _2124 * cbSceneParam._m0[63u].x)));
        float _2341 = fma(_2136, cbSceneParam._m0[60u].w, fma(_2132, cbSceneParam._m0[60u].z, fma(_2128, cbSceneParam._m0[60u].y, _2124 * cbSceneParam._m0[60u].x))) / _2340;
        float _2342 = fma(_2136, cbSceneParam._m0[61u].w, fma(_2132, cbSceneParam._m0[61u].z, fma(_2128, cbSceneParam._m0[61u].y, _2124 * cbSceneParam._m0[61u].x))) / _2340;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2341 >= cbSceneParam._m0[64u].x) && (_2342 >= cbSceneParam._m0[64u].y)) && (_2341 <= cbSceneParam._m0[64u].z)) && (_2342 <= cbSceneParam._m0[64u].w))
        {
            float _2480 = fma(_2136, cbSceneParam._m0[62u].w, fma(_2132, cbSceneParam._m0[62u].z, fma(_2128, cbSceneParam._m0[62u].y, _2124 * cbSceneParam._m0[62u].x))) / _2340;
            float _2484 = isnan(cbSceneParam._m0[41u].w) ? _2480 : (isnan(_2480) ? cbSceneParam._m0[41u].w : max(_2480, cbSceneParam._m0[41u].w));
            float _2527 = (cbSceneParam._m0[33u].x - sqrt(((_2138 * _2138) + (_2137 * _2137)) + (_2139 * _2139))) * cbSceneParam._m0[33u].y;
            float _4597 = isnan(0.0) ? _2527 : (isnan(_2527) ? 0.0 : max(_2527, 0.0));
            float _2534 = (isnan(1.0) ? _4597 : (isnan(_4597) ? 1.0 : min(_4597, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2341, cbSceneParam._m0[33u].w + _2342), _2484), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2341, _2342 - cbSceneParam._m0[33u].z), _2484), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2341 - cbSceneParam._m0[33u].z, _2342 - cbSceneParam._m0[33u].w), _2484), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2341 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2342), _2484), 0.0)).x), vec4(0.25)));
            float _2538 = 1.0 - (_2534 * cbSceneParam._m0[34u].x);
            float _2539 = 1.0 - (_2534 * cbSceneParam._m0[34u].y);
            float _2540 = 1.0 - (_2534 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2540) ? _2288 : (isnan(_2288) ? _2540 : min(_2288, _2540));
            frontier_phi_34_33_ladder_1 = isnan(_2539) ? _2287 : (isnan(_2287) ? _2539 : min(_2287, _2539));
            frontier_phi_34_33_ladder_2 = isnan(_2538) ? _2286 : (isnan(_2286) ? _2538 : min(_2286, _2538));
        }
        else
        {
            frontier_phi_34_33_ladder = _2288;
            frontier_phi_34_33_ladder_1 = _2287;
            frontier_phi_34_33_ladder_2 = _2286;
        }
        _2352 = frontier_phi_34_33_ladder_2;
        _2354 = frontier_phi_34_33_ladder_1;
        _2356 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2352 = _2286;
        _2354 = _2287;
        _2356 = _2288;
    }
    uvec4 _2361 = floatBitsToUint(cbInstanceData._m0[_261 + 5u]);
    uint _2363 = _2361.x * 14u;
    uint _2364 = _2363 + 13u;
    float _2371 = _1069 + (-1.0);
    float _2376 = (cbLight._m0[_2364].x * _2371) + 1.0;
    float _2377 = (cbLight._m0[_2364].y * _2371) + 1.0;
    float _2378 = (cbLight._m0[_2364].z * _2371) + 1.0;
    float _2379 = (cbLight._m0[_2364].w * _2371) + 1.0;
    uint _2380 = _2363 + 5u;
    float _2386 = isnan(1.0) ? _2377 : (isnan(_2377) ? 1.0 : min(_2377, 1.0));
    uint _2390 = _2363 + 4u;
    float _2399 = isnan(1.0) ? _2376 : (isnan(_2376) ? 1.0 : min(_2376, 1.0));
    uint _2403 = _2363 | 1u;
    float _2414 = dot(vec3(cbLight._m0[_2363].xyz), vec3(_919, _920, _921));
    float _2417 = dot(vec3(cbLight._m0[_2403].xyz), vec3(_919, _920, _921));
    float _4633 = isnan(0.0) ? _2414 : (isnan(_2414) ? 0.0 : max(_2414, 0.0));
    float _4644 = isnan(0.0) ? _2417 : (isnan(_2417) ? 0.0 : max(_2417, 0.0));
    float _2422 = (isnan(1.0) ? _4633 : (isnan(_4633) ? 1.0 : min(_4633, 1.0))) * 0.3183098733425140380859375;
    float _2424 = (isnan(1.0) ? _4644 : (isnan(_4644) ? 1.0 : min(_4644, 1.0))) * 0.3183098733425140380859375;
    float _2431 = ((cbLight._m0[_2380].x * _2386) * _2424) + (((cbLight._m0[_2390].x * _2352) * _2399) * _2422);
    float _2432 = ((_2386 * cbLight._m0[_2380].y) * _2424) + (((cbLight._m0[_2390].y * _2354) * _2399) * _2422);
    float _2433 = ((_2386 * cbLight._m0[_2380].z) * _2424) + (((cbLight._m0[_2390].z * _2356) * _2399) * _2422);
    uvec4 _2437 = floatBitsToUint(cbLight._m0[_2363 + 12u]);
    bool _2439 = _2437.x == 0u;
    float _2541;
    float _2543;
    float _2545;
    if (_2439)
    {
        _2541 = _2431;
        _2543 = _2432;
        _2545 = _2433;
    }
    else
    {
        uint _2549 = _2363 + 6u;
        float _2565 = (dot(vec3(cbLight._m0[_2363 + 2u].xyz), vec3(_919, _920, _921)) * 0.5) + 0.5;
        float _2566 = _2565 * _2565;
        float _4655 = isnan(0.0) ? _2566 : (isnan(_2566) ? 0.0 : max(_2566, 0.0));
        float _2567 = isnan(1.0) ? _4655 : (isnan(_4655) ? 1.0 : min(_4655, 1.0));
        float _2568 = isnan(1.0) ? _2378 : (isnan(_2378) ? 1.0 : min(_2378, 1.0));
        _2541 = (((cbLight._m0[_2549].x * 0.3183098733425140380859375) * _2567) * _2568) + _2431;
        _2543 = (((cbLight._m0[_2549].y * 0.3183098733425140380859375) * _2567) * _2568) + _2432;
        _2545 = (((cbLight._m0[_2549].z * 0.3183098733425140380859375) * _2567) * _2568) + _2433;
    }
    bool _2548 = _2437.y == 0u;
    float _2603;
    float _2605;
    float _2607;
    if (_2548)
    {
        _2603 = _2541;
        _2605 = _2543;
        _2607 = _2545;
    }
    else
    {
        uint _2765 = _2363 + 7u;
        float _2781 = (dot(vec3(cbLight._m0[_2363 + 3u].xyz), vec3(_919, _920, _921)) * 0.5) + 0.5;
        float _2782 = _2781 * _2781;
        float _4671 = isnan(0.0) ? _2782 : (isnan(_2782) ? 0.0 : max(_2782, 0.0));
        float _2783 = isnan(1.0) ? _4671 : (isnan(_4671) ? 1.0 : min(_4671, 1.0));
        float _2784 = isnan(1.0) ? _2379 : (isnan(_2379) ? 1.0 : min(_2379, 1.0));
        _2603 = (((cbLight._m0[_2765].x * 0.3183098733425140380859375) * _2783) * _2784) + _2541;
        _2605 = (((cbLight._m0[_2765].y * 0.3183098733425140380859375) * _2783) * _2784) + _2543;
        _2607 = (((cbLight._m0[_2765].z * 0.3183098733425140380859375) * _2783) * _2784) + _2545;
    }
    uint _2610 = _2363 + 8u;
    float _2623 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2363].w)) * _922) * 0.949999988079071044921875);
    float _2624 = _2623 * _2623;
    float _2625 = cbLight._m0[_2363].x + _998;
    float _2626 = cbLight._m0[_2363].y + _999;
    float _2627 = cbLight._m0[_2363].z + _1000;
    float _2631 = inversesqrt(dot(vec3(_2625, _2626, _2627), vec3(_2625, _2626, _2627)));
    float _2632 = _2631 * _2625;
    float _2633 = _2631 * _2626;
    float _2634 = _2631 * _2627;
    float _2635 = dot(vec3(_919, _920, _921), vec3(cbLight._m0[_2363].xyz));
    float _4687 = isnan(0.0) ? _2635 : (isnan(_2635) ? 0.0 : max(_2635, 0.0));
    float _2638 = isnan(1.0) ? _4687 : (isnan(_4687) ? 1.0 : min(_4687, 1.0));
    float _4698 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
    float _2639 = isnan(1.0) ? _4698 : (isnan(_4698) ? 1.0 : min(_4698, 1.0));
    float _2640 = dot(vec3(_919, _920, _921), vec3(_2632, _2633, _2634));
    float _4709 = isnan(0.0) ? _2640 : (isnan(_2640) ? 0.0 : max(_2640, 0.0));
    float _2643 = isnan(1.0) ? _4709 : (isnan(_4709) ? 1.0 : min(_4709, 1.0));
    float _2644 = dot(vec3(cbLight._m0[_2363].xyz), vec3(_2632, _2633, _2634));
    float _4720 = isnan(0.0) ? _2644 : (isnan(_2644) ? 0.0 : max(_2644, 0.0));
    float _2648 = _2624 * _2624;
    float _2652 = ((_2643 * _2643) * (_2648 + (-1.0))) + 1.0;
    float _2663 = (exp2(log2(1.0 - (isnan(1.0) ? _4720 : (isnan(_4720) ? 1.0 : min(_4720, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2664 = 1.0 - _2624;
    float _2675 = (0.5 / (((_2639 * ((_2638 * _2664) + _2624)) + 9.9999999392252902907785028219223e-09) + (((_2639 * _2664) + _2624) * _2638))) * _2638;
    float _4731 = isnan(0.0) ? _2675 : (isnan(_2675) ? 0.0 : max(_2675, 0.0));
    float _2677 = (isnan(1.0) ? _4731 : (isnan(_4731) ? 1.0 : min(_4731, 1.0))) * (_2648 / ((_2652 * _2652) * 3.141590118408203125));
    uint _2691 = _2363 + 9u;
    float _2702 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2403].w)) * _922) * 0.949999988079071044921875);
    float _2703 = _2702 * _2702;
    float _2704 = cbLight._m0[_2403].x + _998;
    float _2705 = cbLight._m0[_2403].y + _999;
    float _2706 = cbLight._m0[_2403].z + _1000;
    float _2710 = inversesqrt(dot(vec3(_2704, _2705, _2706), vec3(_2704, _2705, _2706)));
    float _2711 = _2710 * _2704;
    float _2712 = _2710 * _2705;
    float _2713 = _2710 * _2706;
    float _2714 = dot(vec3(_919, _920, _921), vec3(cbLight._m0[_2403].xyz));
    float _4742 = isnan(0.0) ? _2714 : (isnan(_2714) ? 0.0 : max(_2714, 0.0));
    float _2717 = isnan(1.0) ? _4742 : (isnan(_4742) ? 1.0 : min(_4742, 1.0));
    float _2718 = dot(vec3(_919, _920, _921), vec3(_2711, _2712, _2713));
    float _4753 = isnan(0.0) ? _2718 : (isnan(_2718) ? 0.0 : max(_2718, 0.0));
    float _2721 = isnan(1.0) ? _4753 : (isnan(_4753) ? 1.0 : min(_4753, 1.0));
    float _2722 = dot(vec3(cbLight._m0[_2403].xyz), vec3(_2711, _2712, _2713));
    float _4764 = isnan(0.0) ? _2722 : (isnan(_2722) ? 0.0 : max(_2722, 0.0));
    float _2726 = _2703 * _2703;
    float _2730 = ((_2721 * _2721) * (_2726 + (-1.0))) + 1.0;
    float _2739 = (exp2(log2(1.0 - (isnan(1.0) ? _4764 : (isnan(_4764) ? 1.0 : min(_4764, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2740 = 1.0 - _2703;
    float _2750 = (0.5 / (((_2639 * ((_2717 * _2740) + _2703)) + 9.9999999392252902907785028219223e-09) + (((_2639 * _2740) + _2703) * _2717))) * _2717;
    float _4775 = isnan(0.0) ? _2750 : (isnan(_2750) ? 0.0 : max(_2750, 0.0));
    float _2752 = (isnan(1.0) ? _4775 : (isnan(_4775) ? 1.0 : min(_4775, 1.0))) * (_2726 / ((_2730 * _2730) * 3.141590118408203125));
    float _2762 = (((_2739 * cbLight._m0[_2691].x) * _2752) * _2386) + ((((cbLight._m0[_2610].x * _2352) * _2663) * _2677) * _2399);
    float _2763 = (((_2739 * cbLight._m0[_2691].y) * _2752) * _2386) + ((((cbLight._m0[_2610].y * _2354) * _2663) * _2677) * _2399);
    float _2764 = (((_2739 * cbLight._m0[_2691].z) * _2752) * _2386) + ((((cbLight._m0[_2610].z * _2356) * _2663) * _2677) * _2399);
    float _2820;
    float _2822;
    float _2824;
    if (_2439)
    {
        _2820 = _2762;
        _2822 = _2763;
        _2824 = _2764;
    }
    else
    {
        uint _2826 = _2363 + 2u;
        uint _2830 = _2363 + 10u;
        float _2844 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2826].w)) * _922) * 0.949999988079071044921875);
        float _2845 = _2844 * _2844;
        float _2846 = cbLight._m0[_2826].x + _998;
        float _2847 = cbLight._m0[_2826].y + _999;
        float _2848 = cbLight._m0[_2826].z + _1000;
        float _2852 = inversesqrt(dot(vec3(_2846, _2847, _2848), vec3(_2846, _2847, _2848)));
        float _2853 = _2852 * _2846;
        float _2854 = _2852 * _2847;
        float _2855 = _2852 * _2848;
        float _2856 = dot(vec3(_919, _920, _921), vec3(cbLight._m0[_2826].xyz));
        float _4786 = isnan(0.0) ? _2856 : (isnan(_2856) ? 0.0 : max(_2856, 0.0));
        float _2859 = isnan(1.0) ? _4786 : (isnan(_4786) ? 1.0 : min(_4786, 1.0));
        float _2860 = dot(vec3(_919, _920, _921), vec3(_2853, _2854, _2855));
        float _4797 = isnan(0.0) ? _2860 : (isnan(_2860) ? 0.0 : max(_2860, 0.0));
        float _2863 = isnan(1.0) ? _4797 : (isnan(_4797) ? 1.0 : min(_4797, 1.0));
        float _2864 = dot(vec3(cbLight._m0[_2826].xyz), vec3(_2853, _2854, _2855));
        float _4808 = isnan(0.0) ? _2864 : (isnan(_2864) ? 0.0 : max(_2864, 0.0));
        float _2868 = _2845 * _2845;
        float _2872 = ((_2863 * _2863) * (_2868 + (-1.0))) + 1.0;
        float _2881 = (exp2(log2(1.0 - (isnan(1.0) ? _4808 : (isnan(_4808) ? 1.0 : min(_4808, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2882 = 1.0 - _2845;
        float _2892 = (0.5 / (((_2639 * ((_2859 * _2882) + _2845)) + 9.9999999392252902907785028219223e-09) + (((_2639 * _2882) + _2845) * _2859))) * _2859;
        float _4819 = isnan(0.0) ? _2892 : (isnan(_2892) ? 0.0 : max(_2892, 0.0));
        float _2894 = (isnan(1.0) ? _4819 : (isnan(_4819) ? 1.0 : min(_4819, 1.0))) * (_2868 / ((_2872 * _2872) * 3.141590118408203125));
        float _2895 = isnan(1.0) ? _2378 : (isnan(_2378) ? 1.0 : min(_2378, 1.0));
        _2820 = (((_2881 * cbLight._m0[_2830].x) * _2894) * _2895) + _2762;
        _2822 = (((_2881 * cbLight._m0[_2830].y) * _2894) * _2895) + _2763;
        _2824 = (((_2881 * cbLight._m0[_2830].z) * _2894) * _2895) + _2764;
    }
    float _2926;
    float _2928;
    float _2930;
    if (_2548)
    {
        _2926 = _2820;
        _2928 = _2822;
        _2930 = _2824;
    }
    else
    {
        uint _2937 = _2363 + 3u;
        uint _2941 = _2363 + 11u;
        float _2955 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2937].w)) * _922) * 0.949999988079071044921875);
        float _2956 = _2955 * _2955;
        float _2957 = cbLight._m0[_2937].x + _998;
        float _2958 = cbLight._m0[_2937].y + _999;
        float _2959 = cbLight._m0[_2937].z + _1000;
        float _2963 = inversesqrt(dot(vec3(_2957, _2958, _2959), vec3(_2957, _2958, _2959)));
        float _2964 = _2963 * _2957;
        float _2965 = _2963 * _2958;
        float _2966 = _2963 * _2959;
        float _2967 = dot(vec3(_919, _920, _921), vec3(cbLight._m0[_2937].xyz));
        float _4835 = isnan(0.0) ? _2967 : (isnan(_2967) ? 0.0 : max(_2967, 0.0));
        float _2970 = isnan(1.0) ? _4835 : (isnan(_4835) ? 1.0 : min(_4835, 1.0));
        float _2971 = dot(vec3(_919, _920, _921), vec3(_2964, _2965, _2966));
        float _4846 = isnan(0.0) ? _2971 : (isnan(_2971) ? 0.0 : max(_2971, 0.0));
        float _2974 = isnan(1.0) ? _4846 : (isnan(_4846) ? 1.0 : min(_4846, 1.0));
        float _2975 = dot(vec3(cbLight._m0[_2937].xyz), vec3(_2964, _2965, _2966));
        float _4857 = isnan(0.0) ? _2975 : (isnan(_2975) ? 0.0 : max(_2975, 0.0));
        float _2979 = _2956 * _2956;
        float _2983 = ((_2974 * _2974) * (_2979 + (-1.0))) + 1.0;
        float _2992 = (exp2(log2(1.0 - (isnan(1.0) ? _4857 : (isnan(_4857) ? 1.0 : min(_4857, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2993 = 1.0 - _2956;
        float _3003 = (0.5 / (((_2639 * ((_2970 * _2993) + _2956)) + 9.9999999392252902907785028219223e-09) + (((_2639 * _2993) + _2956) * _2970))) * _2970;
        float _4868 = isnan(0.0) ? _3003 : (isnan(_3003) ? 0.0 : max(_3003, 0.0));
        float _3005 = (isnan(1.0) ? _4868 : (isnan(_4868) ? 1.0 : min(_4868, 1.0))) * (_2979 / ((_2983 * _2983) * 3.141590118408203125));
        float _3006 = isnan(1.0) ? _2379 : (isnan(_2379) ? 1.0 : min(_2379, 1.0));
        _2926 = (((_2992 * cbLight._m0[_2941].x) * _3005) * _3006) + _2820;
        _2928 = (((_2992 * cbLight._m0[_2941].y) * _3005) * _3006) + _2822;
        _2930 = (((_2992 * cbLight._m0[_2941].z) * _3005) * _3006) + _2824;
    }
    float _3072;
    float _3074;
    float _3076;
    float _3078;
    float _3080;
    float _3082;
    if (_2361.y == 0u)
    {
        uvec4 _3027 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3028 = _3027.x;
        uint _3039 = uint((float(_3027.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1007) / _3028))) + floor(float(uint(cbSceneParam._m0[85u].x * _1006) / _3028)));
        float _3049 = (log2(_2139 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3050 = isnan(0.0) ? _3049 : (isnan(_3049) ? 0.0 : max(_3049, 0.0));
        uint _3053 = uint(isnan(14.0) ? _3050 : (isnan(_3050) ? 14.0 : min(_3050, 14.0)));
        uvec4 _3058 = texelFetch(g_lightClusterGridBuffer, int(((_3053 << 2u) + (_3039 << 6u)) >> 2u));
        uint _3059 = _3058.x;
        uint _3060 = _3027.z;
        float _3139;
        float _3141;
        float _3143;
        float _3145;
        float _3147;
        float _3149;
        if (((((1u << ((_3060 >> 4u) & 15u)) + 4294967295u) & _3059) == 0u) || ((_3060 & 240u) == 0u))
        {
            _3139 = 0.0;
            _3141 = 0.0;
            _3143 = 0.0;
            _3145 = 0.0;
            _3147 = 0.0;
            _3149 = 0.0;
        }
        else
        {
            float _3140;
            float _3142;
            float _3144;
            float _3146;
            float _3148;
            float _3150;
            float _3284 = 0.0;
            float _3285 = 0.0;
            float _3286 = 0.0;
            float _3287 = 0.0;
            float _3288 = 0.0;
            float _3289 = 0.0;
            uint _3290 = 0u;
            uint _3299;
            bool _3300;
            for (;;)
            {
                _3299 = texelFetch(g_lightClassification, int((((_3053 << 5u) + (_3039 << 9u)) + (_3290 << 2u)) >> 2u)).x;
                _3300 = _3299 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3300)
                {
                    frontier_phi_66_pred = _3289;
                    frontier_phi_66_pred_1 = _3288;
                    frontier_phi_66_pred_2 = _3287;
                    frontier_phi_66_pred_3 = _3286;
                    frontier_phi_66_pred_4 = _3285;
                    frontier_phi_66_pred_5 = _3284;
                }
                else
                {
                    float _3408;
                    float _3409;
                    float _3410;
                    float _3411;
                    float _3412;
                    float _3413;
                    uint _3414;
                    _3408 = _3284;
                    _3409 = _3285;
                    _3410 = _3286;
                    _3411 = _3287;
                    _3412 = _3288;
                    _3413 = _3289;
                    _3414 = _3299;
                    float _3340;
                    float _3341;
                    float _3342;
                    float _3343;
                    float _3344;
                    float _3345;
                    for (;;)
                    {
                        uint _3418 = uint(findLSB(_3414)) + (_3290 << 5u);
                        uint _3415 = (_3414 + 4294967295u) & _3414;
                        uint _3420 = _3418 * 48u;
                        vec4 _3434 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3420)).x, texelFetch(g_PointLightRenderingBuffer, int(_3420 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3420 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3420 + 3u)).x));
                        uint _3440 = (_3418 * 48u) + 4u;
                        vec4 _3453 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3440)).x, texelFetch(g_PointLightRenderingBuffer, int(_3440 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3440 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3440 + 3u)).x));
                        uint _3459 = (_3418 * 48u) + 8u;
                        vec3 _3470 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3459)).x, texelFetch(g_PointLightRenderingBuffer, int(_3459 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3459 + 2u)).x));
                        float _3474 = _3434.x - _2137;
                        float _3475 = _3434.y - _2138;
                        float _3476 = _3434.z - _2139;
                        float _3477 = dot(vec3(_3474, _3475, _3476), vec3(_3474, _3475, _3476));
                        float _3480 = inversesqrt(_3477);
                        float _3481 = _3480 * _3474;
                        float _3482 = _3480 * _3475;
                        float _3483 = _3480 * _3476;
                        float _3484 = dot(vec3(_1025, _1028, _1031), vec3(_3481, _3482, _3483));
                        float _3489 = 1.0 - (_3477 * _3434.w);
                        float _4894 = isnan(0.0) ? _3489 : (isnan(_3489) ? 0.0 : max(_3489, 0.0));
                        float _3490 = isnan(1.0) ? _4894 : (isnan(_4894) ? 1.0 : min(_4894, 1.0));
                        float _3491 = sqrt(_3477) * _3453.w;
                        float _3494 = 1.39999997615814208984375 / (_3491 + 1.39999997615814208984375);
                        float _3495 = _3494 * _3494;
                        float _3498 = ((1.0 - _3495) * _3484) + _3495;
                        float _3501 = _3491 * _3491;
                        float _3505 = ((isnan(0.0) ? _3498 : (isnan(_3498) ? 0.0 : max(_3498, 0.0))) * _3490) / ((_3501 * 0.699999988079071044921875) + 1.0);
                        float _3509 = (-0.0) - _2137;
                        float _3510 = (-0.0) - _2138;
                        float _3511 = (-0.0) - _2139;
                        float _3515 = inversesqrt(dot(vec3(_3509, _3510, _3511), vec3(_3509, _3510, _3511)));
                        float _3516 = _3515 * _3509;
                        float _3517 = _3515 * _3510;
                        float _3518 = _3515 * _3511;
                        float _3525 = exp2(log2(1.0 / ((_3501 * 3.5) + 5.0)) * 0.25);
                        float _3526 = 1.0 - _1085;
                        float _3533 = sqrt(1.0 - ((1.0 - (_3526 * _3526)) * (1.0 - (_3525 * _3525))));
                        float _3534 = _3533 * _3533;
                        float _3535 = _3534 * _3534;
                        float _3536 = _3516 + _3481;
                        float _3537 = _3517 + _3482;
                        float _3538 = _3518 + _3483;
                        float _3542 = inversesqrt(dot(vec3(_3536, _3537, _3538), vec3(_3536, _3537, _3538)));
                        float _3546 = dot(vec3(_1025, _1028, _1031), vec3(_3516, _3517, _3518));
                        float _4910 = isnan(0.0) ? _3546 : (isnan(_3546) ? 0.0 : max(_3546, 0.0));
                        float _3549 = isnan(1.0) ? _4910 : (isnan(_4910) ? 1.0 : min(_4910, 1.0));
                        float _3550 = dot(vec3(_1025, _1028, _1031), vec3(_3542 * _3536, _3542 * _3537, _3542 * _3538));
                        float _4921 = isnan(0.0) ? _3550 : (isnan(_3550) ? 0.0 : max(_3550, 0.0));
                        float _3553 = isnan(1.0) ? _4921 : (isnan(_4921) ? 1.0 : min(_4921, 1.0));
                        float _3557 = ((_3553 * _3553) * (_3535 + (-1.0))) + 1.0;
                        float _3558 = _3494 * _3534;
                        float _3559 = _3558 * _3558;
                        float _3562 = ((1.0 - _3559) * _3484) + _3559;
                        float _4932 = isnan(0.0) ? _3562 : (isnan(_3562) ? 0.0 : max(_3562, 0.0));
                        float _3563 = isnan(1.0) ? _4932 : (isnan(_4932) ? 1.0 : min(_4932, 1.0));
                        float _3564 = 1.0 - _3534;
                        float _3574 = (0.5 / (((_3563 * ((_3549 * _3564) + _3534)) + 9.9999999392252902907785028219223e-09) + (((_3563 * _3564) + _3534) * _3549))) * _3563;
                        float _4943 = isnan(0.0) ? _3574 : (isnan(_3574) ? 0.0 : max(_3574, 0.0));
                        float _3585 = (((_3535 * 3.1415927410125732421875) * (isnan(1.0) ? _4943 : (isnan(_4943) ? 1.0 : min(_4943, 1.0)))) / ((_3557 * _3557) * ((_3501 * 2.1991131305694580078125) + 3.141590118408203125))) * _3490;
                        _3343 = (_3505 * _3453.x) + _3411;
                        _3344 = (_3505 * _3453.y) + _3412;
                        _3345 = (_3505 * _3453.z) + _3413;
                        _3340 = (_3585 * _3470.x) + _3408;
                        _3341 = (_3585 * _3470.y) + _3409;
                        _3342 = (_3585 * _3470.z) + _3410;
                        if (_3415 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3408 = _3340;
                            _3409 = _3341;
                            _3410 = _3342;
                            _3411 = _3343;
                            _3412 = _3344;
                            _3413 = _3345;
                            _3414 = _3415;
                        }
                    }
                    frontier_phi_66_pred = _3345;
                    frontier_phi_66_pred_1 = _3344;
                    frontier_phi_66_pred_2 = _3343;
                    frontier_phi_66_pred_3 = _3342;
                    frontier_phi_66_pred_4 = _3341;
                    frontier_phi_66_pred_5 = _3340;
                }
                _3150 = frontier_phi_66_pred;
                _3148 = frontier_phi_66_pred_1;
                _3146 = frontier_phi_66_pred_2;
                _3144 = frontier_phi_66_pred_3;
                _3142 = frontier_phi_66_pred_4;
                _3140 = frontier_phi_66_pred_5;
                uint _3291 = _3290 + 1u;
                if (_3291 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3284 = _3140;
                    _3285 = _3142;
                    _3286 = _3144;
                    _3287 = _3146;
                    _3288 = _3148;
                    _3289 = _3150;
                    _3290 = _3291;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3139 = _3140;
            _3141 = _3142;
            _3143 = _3144;
            _3145 = _3146;
            _3147 = _3148;
            _3149 = _3150;
        }
        uvec4 _3153 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3154 = _3153.z;
        uint _3156 = (_3154 >> 8u) & 15u;
        float _3252;
        float _3254;
        float _3256;
        float _3258;
        float _3260;
        float _3262;
        if (((4294967295u << _3156) & _3059) == 0u)
        {
            _3252 = _3139;
            _3254 = _3141;
            _3256 = _3143;
            _3258 = _3145;
            _3260 = _3147;
            _3262 = _3149;
        }
        else
        {
            float _3277 = inversesqrt(dot(vec3(_2137, _2138, _2139), vec3(_2137, _2138, _2139)));
            float _3278 = _3277 * _2137;
            float _3279 = _3277 * _2138;
            float _3280 = _3277 * _2139;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3156 < ((_3154 >> 12u) & 15u))
            {
                float _3253;
                float _3255;
                float _3257;
                float _3259;
                float _3261;
                float _3263;
                float _3391 = _3139;
                float _3392 = _3141;
                float _3393 = _3143;
                float _3394 = _3145;
                float _3395 = _3147;
                float _3396 = _3149;
                uint _3397 = _3156;
                uint _3406;
                bool _3407;
                for (;;)
                {
                    _3406 = texelFetch(g_lightClassification, int((((_3053 << 5u) + (_3039 << 9u)) + (_3397 << 2u)) >> 2u)).x;
                    _3407 = _3406 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3407)
                    {
                        frontier_phi_72_pred = _3396;
                        frontier_phi_72_pred_1 = _3395;
                        frontier_phi_72_pred_2 = _3394;
                        frontier_phi_72_pred_3 = _3393;
                        frontier_phi_72_pred_4 = _3392;
                        frontier_phi_72_pred_5 = _3391;
                    }
                    else
                    {
                        float _3590;
                        float _3591;
                        float _3592;
                        float _3593;
                        float _3594;
                        float _3595;
                        float _3883;
                        float _3884;
                        float _3885;
                        float _3886;
                        float _3887;
                        float _3888;
                        float _3603 = _3391;
                        float _3604 = _3392;
                        float _3605 = _3393;
                        float _3606 = _3394;
                        float _3607 = _3395;
                        float _3608 = _3396;
                        uint _3609 = _3406;
                        uint _3610;
                        vec4 _3635;
                        float _3636;
                        vec4 _3651;
                        vec3 _3663;
                        vec4 _3678;
                        vec4 _3693;
                        float _3739;
                        bool _3740;
                        for (;;)
                        {
                            uint _3620 = ((_3397 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3609));
                            _3610 = (_3609 + 4294967295u) & _3609;
                            uint _3622 = _3620 * 40u;
                            _3635 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3622)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3622 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3622 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3622 + 3u)).x));
                            _3636 = _3635.w;
                            uint _3638 = (_3620 * 40u) + 4u;
                            _3651 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3638)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3638 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3638 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3638 + 3u)).x));
                            uint _3653 = (_3620 * 40u) + 8u;
                            _3663 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3653)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3653 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3653 + 2u)).x));
                            uint _3665 = (_3620 * 40u) + 16u;
                            _3678 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3665)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3665 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3665 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3665 + 3u)).x));
                            uint _3680 = (_3620 * 40u) + 20u;
                            _3693 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3680)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3680 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3680 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3680 + 3u)).x));
                            uint _3695 = (_3620 * 40u) + 24u;
                            vec4 _3708 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3695)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3695 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3695 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3695 + 3u)).x));
                            uint _3714 = (_3620 * 40u) + 28u;
                            vec4 _3727 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3714)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3714 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3714 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3714 + 3u)).x));
                            _3739 = fma(_2139, _3727.z, fma(_2138, _3727.y, _3727.x * _2137)) + _3727.w;
                            _3740 = !((fma(_2139, _3708.z, fma(_2138, _3708.y, _3708.x * _2137)) + _3708.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3740)
                            {
                                float _3767 = _3635.x - _2137;
                                float _3768 = _3635.y - _2138;
                                float _3769 = _3635.z - _2139;
                                float _3770 = dot(vec3(_3767, _3768, _3769), vec3(_3767, _3768, _3769));
                                float _3773 = inversesqrt(_3770);
                                float _3774 = _3773 * _3767;
                                float _3775 = _3773 * _3768;
                                float _3776 = _3773 * _3769;
                                float _3780 = 1.0 - (_3770 / (_3636 * _3636));
                                float _4954 = isnan(0.0) ? _3780 : (isnan(_3780) ? 0.0 : max(_3780, 0.0));
                                float _3781 = isnan(1.0) ? _4954 : (isnan(_4954) ? 1.0 : min(_4954, 1.0));
                                float _3785 = sqrt(_3770) * _3651.w;
                                float _3787 = 1.39999997615814208984375 / (_3785 + 1.39999997615814208984375);
                                float _3788 = _3787 * _3787;
                                float _3791 = ((1.0 - _3788) * dot(vec3(_3774, _3775, _3776), vec3(_1025, _1028, _1031))) + _3788;
                                float _3794 = _3785 * _3785;
                                float _3798 = (fma(_2139, _3678.z, fma(_2138, _3678.y, _3678.x * _2137)) + _3678.w) / _3739;
                                float _3799 = (fma(_2139, _3693.z, fma(_2138, _3693.y, _3693.x * _2137)) + _3693.w) / _3739;
                                float _3803 = 1.0 - dot(vec2(_3798, _3799), vec2(_3798, _3799));
                                float _4970 = isnan(0.0) ? _3803 : (isnan(_3803) ? 0.0 : max(_3803, 0.0));
                                float _3804 = isnan(1.0) ? _4970 : (isnan(_4970) ? 1.0 : min(_4970, 1.0));
                                float _3805 = _3804 * (((isnan(0.0) ? _3791 : (isnan(_3791) ? 0.0 : max(_3791, 0.0))) * _3781) / ((_3794 * 0.699999988079071044921875) + 1.0));
                                float _3817 = exp2(log2(1.0 / ((_3794 * 3.5) + 5.0)) * 0.25);
                                float _3818 = 1.0 - _1085;
                                float _3825 = sqrt(1.0 - ((1.0 - (_3818 * _3818)) * (1.0 - (_3817 * _3817))));
                                float _3826 = _3825 * _3825;
                                float _3827 = _3826 * _3826;
                                float _3828 = _3774 - _3278;
                                float _3829 = _3775 - _3279;
                                float _3830 = _3776 - _3280;
                                float _3834 = inversesqrt(dot(vec3(_3828, _3829, _3830), vec3(_3828, _3829, _3830)));
                                float _3838 = dot(vec3(_1025, _1028, _1031), vec3((-0.0) - _3278, (-0.0) - _3279, (-0.0) - _3280));
                                float _4981 = isnan(0.0) ? _3838 : (isnan(_3838) ? 0.0 : max(_3838, 0.0));
                                float _3841 = isnan(1.0) ? _4981 : (isnan(_4981) ? 1.0 : min(_4981, 1.0));
                                float _3842 = dot(vec3(_1025, _1028, _1031), vec3(_3834 * _3828, _3834 * _3829, _3834 * _3830));
                                float _4992 = isnan(0.0) ? _3842 : (isnan(_3842) ? 0.0 : max(_3842, 0.0));
                                float _3845 = isnan(1.0) ? _4992 : (isnan(_4992) ? 1.0 : min(_4992, 1.0));
                                float _3849 = ((_3845 * _3845) * (_3827 + (-1.0))) + 1.0;
                                float _3850 = _3787 * _3826;
                                float _3851 = _3850 * _3850;
                                float _3857 = ((1.0 - _3851) * dot(vec3(_1025, _1028, _1031), vec3(_3774, _3775, _3776))) + _3851;
                                float _5003 = isnan(0.0) ? _3857 : (isnan(_3857) ? 0.0 : max(_3857, 0.0));
                                float _3858 = isnan(1.0) ? _5003 : (isnan(_5003) ? 1.0 : min(_5003, 1.0));
                                float _3859 = 1.0 - _3826;
                                float _3869 = (0.5 / (((_3858 * ((_3841 * _3859) + _3826)) + 9.9999999392252902907785028219223e-09) + (((_3858 * _3859) + _3826) * _3841))) * _3858;
                                float _5014 = isnan(0.0) ? _3869 : (isnan(_3869) ? 0.0 : max(_3869, 0.0));
                                float _3879 = (_3804 * _3781) * (((_3827 * 3.1415927410125732421875) * (isnan(1.0) ? _5014 : (isnan(_5014) ? 1.0 : min(_5014, 1.0)))) / ((_3849 * _3849) * ((_3794 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3805 * _3651.y;
                                frontier_phi_78_pred_1 = _3805 * _3651.x;
                                frontier_phi_78_pred_2 = _3879 * _3663.z;
                                frontier_phi_78_pred_3 = _3879 * _3663.y;
                                frontier_phi_78_pred_4 = _3879 * _3663.x;
                                frontier_phi_78_pred_5 = _3805 * _3651.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3887 = frontier_phi_78_pred;
                            _3886 = frontier_phi_78_pred_1;
                            _3885 = frontier_phi_78_pred_2;
                            _3884 = frontier_phi_78_pred_3;
                            _3883 = frontier_phi_78_pred_4;
                            _3888 = frontier_phi_78_pred_5;
                            _3593 = _3886 + _3606;
                            _3594 = _3887 + _3607;
                            _3595 = _3888 + _3608;
                            _3590 = _3883 + _3603;
                            _3591 = _3884 + _3604;
                            _3592 = _3885 + _3605;
                            if (_3610 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3603 = _3590;
                                _3604 = _3591;
                                _3605 = _3592;
                                _3606 = _3593;
                                _3607 = _3594;
                                _3608 = _3595;
                                _3609 = _3610;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3595;
                        frontier_phi_72_pred_1 = _3594;
                        frontier_phi_72_pred_2 = _3593;
                        frontier_phi_72_pred_3 = _3592;
                        frontier_phi_72_pred_4 = _3591;
                        frontier_phi_72_pred_5 = _3590;
                    }
                    _3263 = frontier_phi_72_pred;
                    _3261 = frontier_phi_72_pred_1;
                    _3259 = frontier_phi_72_pred_2;
                    _3257 = frontier_phi_72_pred_3;
                    _3255 = frontier_phi_72_pred_4;
                    _3253 = frontier_phi_72_pred_5;
                    uint _3398 = _3397 + 1u;
                    if (_3398 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3391 = _3253;
                        _3392 = _3255;
                        _3393 = _3257;
                        _3394 = _3259;
                        _3395 = _3261;
                        _3396 = _3263;
                        _3397 = _3398;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3263;
                frontier_phi_60_61_ladder_1 = _3261;
                frontier_phi_60_61_ladder_2 = _3257;
                frontier_phi_60_61_ladder_3 = _3255;
                frontier_phi_60_61_ladder_4 = _3253;
                frontier_phi_60_61_ladder_5 = _3259;
            }
            else
            {
                frontier_phi_60_61_ladder = _3149;
                frontier_phi_60_61_ladder_1 = _3147;
                frontier_phi_60_61_ladder_2 = _3143;
                frontier_phi_60_61_ladder_3 = _3141;
                frontier_phi_60_61_ladder_4 = _3139;
                frontier_phi_60_61_ladder_5 = _3145;
            }
            _3252 = frontier_phi_60_61_ladder_4;
            _3254 = frontier_phi_60_61_ladder_3;
            _3256 = frontier_phi_60_61_ladder_2;
            _3258 = frontier_phi_60_61_ladder_5;
            _3260 = frontier_phi_60_61_ladder_1;
            _3262 = frontier_phi_60_61_ladder;
        }
        float _3267 = isnan(1.0) ? _1069 : (isnan(_1069) ? 1.0 : min(_1069, 1.0));
        _3072 = (_3267 * _3258) + _2603;
        _3074 = (_3267 * _3260) + _2605;
        _3076 = (_3267 * _3262) + _2607;
        _3078 = ((_3252 * 0.039999999105930328369140625) * _3267) + _2926;
        _3080 = ((_3254 * 0.039999999105930328369140625) * _3267) + _2928;
        _3082 = ((_3256 * 0.039999999105930328369140625) * _3267) + _2930;
    }
    else
    {
        _3072 = _2603;
        _3074 = _2605;
        _3076 = _2607;
        _3078 = _2926;
        _3080 = _2928;
        _3082 = _2930;
    }
    float _5030 = isnan(0.0) ? _1054 : (isnan(_1054) ? 0.0 : max(_1054, 0.0));
    float _5041 = isnan(0.0) ? _1055 : (isnan(_1055) ? 0.0 : max(_1055, 0.0));
    float _5052 = isnan(0.0) ? _1056 : (isnan(_1056) ? 0.0 : max(_1056, 0.0));
    uint _3102 = _261 + 6u;
    float _3110 = _1006 / cbSceneParam._m0[86u].x;
    float _3111 = _1007 / cbSceneParam._m0[86u].y;
    vec4 _3125 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3110, _3111, (log2((isnan(cbSceneParam._m0[77u].w) ? _940 : (isnan(_940) ? cbSceneParam._m0[77u].w : min(_940, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3127 = _3125.x;
    float _3128 = _3125.y;
    float _3129 = _3125.z;
    float _3130 = _3125.w;
    float _3202;
    float _3204;
    float _3206;
    float _3208;
    if (_940 > cbSceneParam._m0[78u].w)
    {
        float _3164 = isnan(_940) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _940 : min(cbSceneParam._m0[80u].w, _940));
        float _3165 = _3164 / _940;
        float _3176 = _3165 * _991;
        float _3177 = _992 * _3165;
        float _3178 = (-0.0) - _3177;
        float _3180 = _3165 * _993;
        float _3182 = (cbSceneParam._m0[77u].w * _3178) / _3164;
        float _3183 = _3182 + cbSceneParam._m0[79u].w;
        float _3184 = cbSceneParam._m0[79u].w - _3177;
        float _3190 = sqrt(((_3176 * _3176) + (_3177 * _3177)) + (_3180 * _3180));
        float _3193 = (1.0 - (cbSceneParam._m0[77u].w / _3164)) * _3190;
        float _3198 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3200 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3353;
        if (abs((_3178 - _3182) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3353 = ((((_3183 > 0.0) ? exp2(_3198 * _3183) : (2.0 - exp2(_3200 * _3183))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3193;
        }
        else
        {
            float _3313 = 1.0 / cbSceneParam._m0[80u].x;
            float _3314 = isnan(_3184) ? _3183 : (isnan(_3183) ? _3184 : max(_3183, _3184));
            float _3315 = isnan(_3184) ? _3183 : (isnan(_3183) ? _3184 : min(_3183, _3184));
            float _3324 = isnan(0.0) ? _3314 : (isnan(_3314) ? 0.0 : min(_3314, 0.0));
            float _3325 = isnan(0.0) ? _3315 : (isnan(_3315) ? 0.0 : min(_3315, 0.0));
            _3353 = ((abs(_3190 / _3178) * cbSceneParam._m0[80u].y) * ((((_3324 - _3325) * 2.0) - ((exp2(_3198 * (isnan(0.0) ? _3314 : (isnan(_3314) ? 0.0 : max(_3314, 0.0)))) - exp2(_3198 * (isnan(0.0) ? _3315 : (isnan(_3315) ? 0.0 : max(_3315, 0.0))))) * _3313)) - ((exp2(_3200 * _3324) - exp2(_3200 * _3325)) * _3313))) + (_3193 * cbSceneParam._m0[80u].z);
        }
        vec4 _3355 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3110, _3111, 1.0), 0.0);
        float _3364 = exp2((_3353 * (-1.44269502162933349609375)) * (1.0 - _3355.w));
        float _3365 = log2(_3364);
        float _3381 = log2(_3130);
        _3202 = (exp2(_3381 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3365 * cbSceneParam._m0[78u].x)) * _3355.x) / cbSceneParam._m0[78u].x)) + _3127;
        _3204 = (exp2(_3381 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3365 * cbSceneParam._m0[78u].y)) * _3355.y) / cbSceneParam._m0[78u].y)) + _3128;
        _3206 = (exp2(_3381 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3365 * cbSceneParam._m0[78u].z)) * _3355.z) / cbSceneParam._m0[78u].z)) + _3129;
        _3208 = _3364 * _3130;
    }
    else
    {
        _3202 = _3127;
        _3204 = _3128;
        _3206 = _3129;
        _3208 = _3130;
    }
    float _3220 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3221 = _3220 == 3.0;
    float _3222 = log2(_3208);
    float _3229 = exp2(_3222 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5030 : (isnan(_5030) ? 1.0 : min(_5030, 1.0))) * (_3072 + ((isnan(0.0) ? _1793 : (isnan(_1793) ? 0.0 : max(_1793, 0.0))) * _1069))) + ((_3078 + ((isnan(0.0) ? _2084 : (isnan(_2084) ? 0.0 : max(_2084, 0.0))) * _1872)) * cbPerFrame._m0[3u].x));
    float _3230 = exp2(_3222 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5041 : (isnan(_5041) ? 1.0 : min(_5041, 1.0))) * (_3074 + ((isnan(0.0) ? _1796 : (isnan(_1796) ? 0.0 : max(_1796, 0.0))) * _1069))) + ((_3080 + ((isnan(0.0) ? _2087 : (isnan(_2087) ? 0.0 : max(_2087, 0.0))) * _1872)) * cbPerFrame._m0[3u].x));
    float _3231 = exp2(_3222 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5052 : (isnan(_5052) ? 1.0 : min(_5052, 1.0))) * (_3076 + ((isnan(0.0) ? _1799 : (isnan(_1799) ? 0.0 : max(_1799, 0.0))) * _1069))) + ((_3082 + ((isnan(0.0) ? _2090 : (isnan(_2090) ? 0.0 : max(_2090, 0.0))) * _1872)) * cbPerFrame._m0[3u].x));
    float _3240 = (_3220 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3240 * (_3221 ? _3229 : (_3229 + (cbSceneParam._m0[72u].w * _3202)));
    SV_Target.y = _3240 * (_3221 ? _3230 : (_3230 + (cbSceneParam._m0[72u].w * _3204)));
    SV_Target.z = _3240 * (_3221 ? _3231 : (_3231 + (cbSceneParam._m0[72u].w * _3206)));
    SV_Target.w = cbInstanceData._m0[_3102].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3102].w;
}


