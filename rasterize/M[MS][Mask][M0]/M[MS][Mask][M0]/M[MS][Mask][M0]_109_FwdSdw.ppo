#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1466;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _240 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _241 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _242 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _248 = inversesqrt(dot(vec3(_240, _241, _242), vec3(_240, _241, _242)));
    float _255 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _262 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _274 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _276 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _277 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4054 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _4065 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
    float _4076 = isnan(0.0) ? _277 : (isnan(_277) ? 0.0 : max(_277, 0.0));
    uint _287 = uint(roundEven(NORMAL.w)) * 13u;
    uint _292 = _287 + 1u;
    uint _296 = _287 + 2u;
    float _305 = sqrt(((cbInstanceData._m0[_292].x * cbInstanceData._m0[_292].x) + (cbInstanceData._m0[_287].x * cbInstanceData._m0[_287].x)) + (cbInstanceData._m0[_296].x * cbInstanceData._m0[_296].x));
    float _306 = _305 * TEXCOORD.z;
    float _307 = _305 * TEXCOORD.w;
    vec4 _320 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _306) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _307) + cbTextureTilingScale._m0[13u].w));
    vec4 _343 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _369 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _374 = _369.x * cbMtdParam._m0[11u].x;
    float _375 = _369.y * cbMtdParam._m0[11u].y;
    float _376 = _369.z * cbMtdParam._m0[11u].z;
    vec4 _395 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _306) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _307) + cbTextureTilingScale._m0[5u].w));
    vec4 _414 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _452 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _454 = _452.x;
    float _466 = dot(vec4(_454, _452.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _483 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _414.x) * 2.0) - ((((_454 - _466) * cbMtdParam._m0[24u].z) + _466) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4087 = isnan(0.0) ? _483 : (isnan(_483) ? 0.0 : max(_483, 0.0));
    float _484 = isnan(1.0) ? _4087 : (isnan(_4087) ? 1.0 : min(_4087, 1.0));
    float _491 = (_484 * ((_395.x * cbMtdParam._m0[12u].x) - _374)) + _374;
    float _492 = (_484 * ((_395.y * cbMtdParam._m0[12u].y) - _375)) + _375;
    float _493 = (_484 * ((_395.z * cbMtdParam._m0[12u].z) - _376)) + _376;
    vec4 _510 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _306) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _307) + cbTextureTilingScale._m0[3u].w));
    vec4 _530 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _532 = _530.x;
    float _542 = dot(vec4(_532, _530.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _556 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _414.y) * 2.0) - ((((_532 - _542) * cbMtdParam._m0[24u].z) + _542) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4098 = isnan(0.0) ? _556 : (isnan(_556) ? 0.0 : max(_556, 0.0));
    float _557 = isnan(1.0) ? _4098 : (isnan(_4098) ? 1.0 : min(_4098, 1.0));
    float _564 = (_557 * ((_510.x * cbMtdParam._m0[13u].x) - _491)) + _491;
    float _565 = (_557 * ((_510.y * cbMtdParam._m0[13u].y) - _492)) + _492;
    float _566 = (_557 * ((_510.z * cbMtdParam._m0[13u].z) - _493)) + _493;
    vec4 _584 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _306) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _307) + cbTextureTilingScale._m0[24u].w));
    vec4 _601 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _603 = _601.x;
    float _613 = dot(vec4(_603, _601.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _625 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _414.z) * 2.0) - ((((_603 - _613) * cbMtdParam._m0[24u].z) + _613) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4109 = isnan(0.0) ? _625 : (isnan(_625) ? 0.0 : max(_625, 0.0));
    float _626 = isnan(1.0) ? _4109 : (isnan(_4109) ? 1.0 : min(_4109, 1.0));
    float _636 = (_343.x * cbMtdParam._m0[9u].x) * ((_626 * ((_584.x * cbMtdParam._m0[14u].x) - _564)) + _564);
    float _637 = (_343.y * cbMtdParam._m0[9u].y) * ((_626 * ((_584.y * cbMtdParam._m0[14u].y) - _565)) + _565);
    float _638 = (_343.z * cbMtdParam._m0[9u].z) * ((_626 * ((_584.z * cbMtdParam._m0[14u].z) - _566)) + _566);
    float _642 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _320.x) * _636;
    float _645 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _320.y) * _637;
    float _648 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _320.z) * _638;
    float _656 = (((_636 - _642) * (isnan(1.0) ? _4054 : (isnan(_4054) ? 1.0 : min(_4054, 1.0)))) + _642) * 4.55000019073486328125;
    float _658 = (((_637 - _645) * (isnan(1.0) ? _4065 : (isnan(_4065) ? 1.0 : min(_4065, 1.0)))) + _645) * 4.55000019073486328125;
    float _660 = (((_638 - _648) * (isnan(1.0) ? _4076 : (isnan(_4076) ? 1.0 : min(_4076, 1.0)))) + _648) * 4.55000019073486328125;
    vec4 _672 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _306) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _307) + cbTextureTilingScale._m0[20u].w));
    vec4 _695 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _306) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _307) + cbTextureTilingScale._m0[4u].w));
    vec4 _712 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _714 = _712.x;
    float _715 = _712.y;
    float _716 = _712.z;
    float _723 = ((_695.x - _714) * _484) + _714;
    float _724 = ((_695.y - _715) * _484) + _715;
    float _725 = ((_695.z - _716) * _484) + _716;
    vec4 _737 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _306) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _307) + cbTextureTilingScale._m0[2u].w));
    float _748 = ((_737.x - _723) * _557) + _723;
    float _749 = ((_737.y - _724) * _557) + _724;
    float _750 = ((_737.z - _725) * _557) + _725;
    vec4 _762 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _306) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _307) + cbTextureTilingScale._m0[23u].w));
    float _775 = ((_762.z - _750) * _626) + _750;
    float _778 = ((((_762.x - _748) * _626) + _748) * 2.0) + (-1.0);
    float _779 = ((((_762.y - _749) * _626) + _749) * 2.0) + (-1.0);
    float _780 = dot(vec2(_778, _779), vec2(_778, _779));
    float _4120 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
    float _785 = sqrt(1.0 - (isnan(1.0) ? _4120 : (isnan(_4120) ? 1.0 : min(_4120, 1.0))));
    vec4 _805 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _817 = (_778 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_672.x * 2.0) + (-1.0)))) + (((_805.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _818 = (_779 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_672.y * 2.0) + (-1.0)))) + (((_805.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    vec4 _830 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _306) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _307) + cbTextureTilingScale._m0[19u].w));
    float _832 = _830.x;
    float _833 = 1.0 - _832;
    float _861 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_832 - _833) * cbMtdParam._m0[24u].y) + _833) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4131 = isnan(0.0) ? _861 : (isnan(_861) ? 0.0 : max(_861, 0.0));
    float _862 = isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0));
    float _870 = ((((cbMtdParam._m0[10u].x - _656) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _862) + _656;
    float _871 = ((((cbMtdParam._m0[10u].y - _658) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _862) + _658;
    float _872 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _660)) * _862) + _660;
    float _877 = (((_672.z - _775) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _775;
    float _881 = ((_805.z - _877) * cbMtdParam._m0[19u].w) + _877;
    float _885 = ((cbMtdParam._m0[23u].y - _881) * _862) + _881;
    vec4 _904 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _306) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _307) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _910 = (_904.x * 2.0) + (-1.0);
    float _911 = (_904.y * 2.0) + (-1.0);
    float _912 = dot(vec2(_910, _911), vec2(_910, _911));
    float _4142 = isnan(0.0) ? _912 : (isnan(_912) ? 0.0 : max(_912, 0.0));
    float _928 = (_862 * (((cbMtdParam._m0[22u].z * _817) - _817) + _910)) + _817;
    float _929 = (_862 * (((cbMtdParam._m0[22u].z * _818) - _818) + _911)) + _818;
    float _930 = (_862 * (sqrt(1.0 - (isnan(1.0) ? _4142 : (isnan(_4142) ? 1.0 : min(_4142, 1.0)))) - _785)) + _785;
    float _932 = cbMtdParam._m0[22u].x + _805.w;
    float _935 = fma(_930, _255 * NORMAL.x, fma(_929, _262 * TANGENT.x, (_248 * _240) * _928));
    float _938 = fma(_930, _255 * NORMAL.y, fma(_929, _262 * TANGENT.y, (_248 * _241) * _928));
    float _941 = fma(_930, _255 * NORMAL.z, fma(_929, _262 * TANGENT.z, (_248 * _242) * _928));
    float _945 = inversesqrt(dot(vec3(_935, _938, _941), vec3(_935, _938, _941)));
    float _946 = _945 * _935;
    float _947 = _945 * _938;
    float _948 = _945 * _941;
    float _4153 = isnan(0.0) ? _885 : (isnan(_885) ? 0.0 : max(_885, 0.0));
    float _949 = isnan(1.0) ? _4153 : (isnan(_4153) ? 1.0 : min(_4153, 1.0));
    float _4164 = isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0));
    float _4175 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
    float _4186 = isnan(0.0) ? _871 : (isnan(_871) ? 0.0 : max(_871, 0.0));
    float _4197 = isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : max(_872, 0.0));
    float _967 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1007 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1017 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1007);
    float _1018 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1007);
    float _1019 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1007);
    float _1023 = inversesqrt(dot(vec3(_1017, _1018, _1019), vec3(_1017, _1018, _1019)));
    float _1024 = _1017 * _1023;
    float _1025 = _1018 * _1023;
    float _1026 = _1019 * _1023;
    float _1032 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1033 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1051 = fma(_948, cbSceneParam._m0[5u].z, fma(_947, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _946));
    float _1054 = fma(_948, cbSceneParam._m0[6u].z, fma(_947, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _946));
    float _1057 = fma(_948, cbSceneParam._m0[7u].z, fma(_947, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _946));
    uint _1071 = (_287 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1077 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4175 : (isnan(_4175) ? 1.0 : min(_4175, 1.0)))) * cbInstanceData._m0[_1071].x;
    float _1078 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4186 : (isnan(_4186) ? 1.0 : min(_4186, 1.0)))) * cbInstanceData._m0[_1071].y;
    float _1079 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4197 : (isnan(_4197) ? 1.0 : min(_4197, 1.0)))) * cbInstanceData._m0[_1071].z;
    float _4208 = isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0));
    float _1080 = isnan(1.0) ? _4208 : (isnan(_4208) ? 1.0 : min(_4208, 1.0));
    float _4219 = isnan(0.0) ? _1078 : (isnan(_1078) ? 0.0 : max(_1078, 0.0));
    float _1081 = isnan(1.0) ? _4219 : (isnan(_4219) ? 1.0 : min(_4219, 1.0));
    float _4230 = isnan(0.0) ? _1079 : (isnan(_1079) ? 0.0 : max(_1079, 0.0));
    float _1082 = isnan(1.0) ? _4230 : (isnan(_4230) ? 1.0 : min(_4230, 1.0));
    vec4 _1091 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1032, cbSceneParam._m0[86u].y * _1033));
    float _1095 = ((isnan(1.0) ? _4164 : (isnan(_4164) ? 1.0 : min(_4164, 1.0))) * TEXCOORD_5.w) * _1091.x;
    float _1096 = dot(vec3(_946, _947, _948), vec3(_1024, _1025, _1026));
    float _1099 = _1096 * 2.0;
    float _1103 = (_1099 * _946) - _1024;
    float _1104 = (_1099 * _947) - _1025;
    float _1105 = (_1099 * _948) - _1026;
    float _1109 = abs(dot(vec3(_1024, _1025, _1026), vec3(_946, _947, _948)));
    float _4241 = isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0));
    float _1111 = sqrt(_949);
    float _1124 = exp2((_1111 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4241 : (isnan(_4241) ? 1.0 : min(_4241, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1111 * 3.0));
    float _1156 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1160 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1164 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1465;
    float _1467;
    float _1468;
    float _1469;
    float _1470;
    float _1471;
    float _1472;
    float _1473;
    float _1474;
    float _1475;
    float _1476;
    float _1477;
    float _1478;
    float _1479;
    float _1480;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1190 = fma(_1164, cbModelParam._m0[26u].z, fma(_1160, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1156));
        float _1194 = fma(_1164, cbModelParam._m0[27u].z, fma(_1160, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1156));
        float _1198 = fma(_1164, cbModelParam._m0[28u].z, fma(_1160, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1156));
        float _1223 = _1156 + _946;
        float _1224 = _1160 + _947;
        float _1225 = _1164 + _948;
        float _1235 = fma(_1225, cbModelParam._m0[26u].z, fma(_1224, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1223)) - _1190;
        float _1236 = fma(_1225, cbModelParam._m0[27u].z, fma(_1224, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1223)) - _1194;
        float _1237 = fma(_1225, cbModelParam._m0[28u].z, fma(_1224, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1223)) - _1198;
        float _1241 = inversesqrt(dot(vec3(_1235, _1236, _1237), vec3(_1235, _1236, _1237)));
        float _1254 = ((_1241 * _1235) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1190 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1255 = ((_1241 * _1236) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1194 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1256 = ((_1241 * _1237) / cbModelParam._m0[34u].z) + ((((((_1198 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1259 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1254, _1255, _1256), 0.0);
        vec4 _1266 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1254, _1255, _1256), 0.0);
        vec4 _1273 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1254, _1255, _1256), 0.0);
        vec4 _1280 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1254, _1255, _1256), 0.0);
        float _1293 = exp2((_1259.w + (-0.5)) * 20.0) * 2.0;
        float _1294 = _1293 * (_1259.x + (-0.5));
        float _1295 = _1293 * (_1259.y + (-0.5));
        float _1296 = _1293 * (_1259.z + (-0.5));
        float _1303 = exp2((_1266.w + (-0.5)) * 20.0) * 2.0;
        float _1304 = _1303 * (_1266.x + (-0.5));
        float _1305 = _1303 * (_1266.y + (-0.5));
        float _1306 = _1303 * (_1266.z + (-0.5));
        float _1313 = exp2((_1273.w + (-0.5)) * 20.0) * 2.0;
        float _1314 = _1313 * (_1273.x + (-0.5));
        float _1315 = _1313 * (_1273.y + (-0.5));
        float _1316 = _1313 * (_1273.z + (-0.5));
        float _1323 = exp2((_1280.w + (-0.5)) * 20.0) * 2.0;
        float _1324 = _1323 * (_1280.x + (-0.5));
        float _1325 = _1323 * (_1280.y + (-0.5));
        float _1326 = _1323 * (_1280.z + (-0.5));
        float _1327 = isnan(0.0) ? _1324 : (isnan(_1324) ? 0.0 : max(_1324, 0.0));
        float _1328 = isnan(0.0) ? _1325 : (isnan(_1325) ? 0.0 : max(_1325, 0.0));
        float _1329 = isnan(0.0) ? _1326 : (isnan(_1326) ? 0.0 : max(_1326, 0.0));
        float _1330 = _1294 * 0.5;
        float _1331 = _1304 * 0.5;
        float _1332 = _1314 * 0.5;
        float _1333 = dot(vec3(_1330, _1331, _1332), vec3(_1330, _1331, _1332));
        float _1338 = (_1333 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1333);
        float _1347 = (dot(vec3(_946, _947, _948), vec3(_1338 * _1330, _1338 * _1331, _1338 * _1332)) + 1.0) * 0.5;
        float _4267 = isnan(0.0) ? _1347 : (isnan(_1347) ? 0.0 : max(_1347, 0.0));
        float _1357 = sqrt(((_1331 * _1331) + (_1330 * _1330)) + (_1332 * _1332)) / (_1327 + 9.9999997473787516355514526367188e-06);
        float _4278 = isnan(0.0) ? _1357 : (isnan(_1357) ? 0.0 : max(_1357, 0.0));
        float _1358 = isnan(1.0) ? _4278 : (isnan(_4278) ? 1.0 : min(_4278, 1.0));
        float _1359 = _1358 * 2.0;
        float _1363 = (1.0 - _1358) / (_1358 + 1.0);
        float _4289 = isnan(0.0) ? _1363 : (isnan(_1363) ? 0.0 : max(_1363, 0.0));
        float _1364 = isnan(1.0) ? _4289 : (isnan(_4289) ? 1.0 : min(_4289, 1.0));
        float _1373 = ((((1.0 - _1364) * (_1359 + 2.0)) * exp2(log2(isnan(1.0) ? _4267 : (isnan(_4267) ? 1.0 : min(_4267, 1.0))) * (_1359 + 1.0))) + _1364) * _1327;
        float _1374 = _1295 * 0.5;
        float _1375 = _1305 * 0.5;
        float _1376 = _1315 * 0.5;
        float _1377 = dot(vec3(_1374, _1375, _1376), vec3(_1374, _1375, _1376));
        float _1382 = (_1377 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1377);
        float _1390 = (dot(vec3(_946, _947, _948), vec3(_1382 * _1374, _1382 * _1375, _1382 * _1376)) + 1.0) * 0.5;
        float _4300 = isnan(0.0) ? _1390 : (isnan(_1390) ? 0.0 : max(_1390, 0.0));
        float _1399 = sqrt(((_1375 * _1375) + (_1374 * _1374)) + (_1376 * _1376)) / (_1328 + 9.9999997473787516355514526367188e-06);
        float _4311 = isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0));
        float _1400 = isnan(1.0) ? _4311 : (isnan(_4311) ? 1.0 : min(_4311, 1.0));
        float _1401 = _1400 * 2.0;
        float _1405 = (1.0 - _1400) / (_1400 + 1.0);
        float _4322 = isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0));
        float _1406 = isnan(1.0) ? _4322 : (isnan(_4322) ? 1.0 : min(_4322, 1.0));
        float _1415 = ((((1.0 - _1406) * (_1401 + 2.0)) * exp2(log2(isnan(1.0) ? _4300 : (isnan(_4300) ? 1.0 : min(_4300, 1.0))) * (_1401 + 1.0))) + _1406) * _1328;
        float _1416 = _1296 * 0.5;
        float _1417 = _1306 * 0.5;
        float _1418 = _1316 * 0.5;
        float _1419 = dot(vec3(_1416, _1417, _1418), vec3(_1416, _1417, _1418));
        float _1424 = (_1419 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1419);
        float _1432 = (dot(vec3(_946, _947, _948), vec3(_1424 * _1416, _1424 * _1417, _1424 * _1418)) + 1.0) * 0.5;
        float _4333 = isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0));
        float _1441 = sqrt(((_1417 * _1417) + (_1416 * _1416)) + (_1418 * _1418)) / (_1329 + 9.9999997473787516355514526367188e-06);
        float _4344 = isnan(0.0) ? _1441 : (isnan(_1441) ? 0.0 : max(_1441, 0.0));
        float _1442 = isnan(1.0) ? _4344 : (isnan(_4344) ? 1.0 : min(_4344, 1.0));
        float _1443 = _1442 * 2.0;
        float _1447 = (1.0 - _1442) / (_1442 + 1.0);
        float _4355 = isnan(0.0) ? _1447 : (isnan(_1447) ? 0.0 : max(_1447, 0.0));
        float _1448 = isnan(1.0) ? _4355 : (isnan(_4355) ? 1.0 : min(_4355, 1.0));
        float _1457 = ((((1.0 - _1448) * (_1443 + 2.0)) * exp2(log2(isnan(1.0) ? _4333 : (isnan(_4333) ? 1.0 : min(_4333, 1.0))) * (_1443 + 1.0))) + _1448) * _1329;
        _1465 = _1296;
        _1467 = _1295;
        _1468 = _1294;
        _1469 = _1306;
        _1470 = _1305;
        _1471 = _1304;
        _1472 = _1316;
        _1473 = _1315;
        _1474 = _1314;
        _1475 = _1329;
        _1476 = _1328;
        _1477 = _1327;
        _1478 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1373 : (isnan(_1373) ? 0.0 : max(_1373, 0.0)));
        _1479 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0)));
        _1480 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0)));
    }
    else
    {
        _1465 = _1466;
        _1467 = _1466;
        _1468 = _1466;
        _1469 = _1466;
        _1470 = _1466;
        _1471 = _1466;
        _1472 = _1466;
        _1473 = _1466;
        _1474 = _1466;
        _1475 = _1466;
        _1476 = _1466;
        _1477 = _1466;
        _1478 = 0.0;
        _1479 = 0.0;
        _1480 = 0.0;
    }
    float _1772;
    float _1773;
    float _1774;
    float _1775;
    float _1776;
    float _1777;
    float _1778;
    float _1779;
    float _1780;
    float _1781;
    float _1782;
    float _1783;
    float _1784;
    float _1785;
    float _1786;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1503 = fma(_1164, cbModelParam._m0[30u].z, fma(_1160, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1156));
        float _1507 = fma(_1164, cbModelParam._m0[31u].z, fma(_1160, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1156));
        float _1511 = fma(_1164, cbModelParam._m0[32u].z, fma(_1160, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1156));
        float _1534 = _1156 + _946;
        float _1535 = _1160 + _947;
        float _1536 = _1164 + _948;
        float _1546 = fma(_1536, cbModelParam._m0[30u].z, fma(_1535, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1534)) - _1503;
        float _1547 = fma(_1536, cbModelParam._m0[31u].z, fma(_1535, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1534)) - _1507;
        float _1548 = fma(_1536, cbModelParam._m0[32u].z, fma(_1535, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1534)) - _1511;
        float _1552 = inversesqrt(dot(vec3(_1546, _1547, _1548), vec3(_1546, _1547, _1548)));
        float _1565 = ((_1552 * _1546) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1503 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1566 = ((_1552 * _1547) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1507 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1567 = ((_1552 * _1548) / cbModelParam._m0[35u].z) + ((((((_1511 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1569 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1565, _1566, _1567), 0.0);
        vec4 _1576 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1565, _1566, _1567), 0.0);
        vec4 _1583 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1565, _1566, _1567), 0.0);
        vec4 _1590 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1565, _1566, _1567), 0.0);
        float _1602 = exp2((_1569.w + (-0.5)) * 20.0) * 2.0;
        float _1603 = _1602 * (_1569.x + (-0.5));
        float _1604 = _1602 * (_1569.y + (-0.5));
        float _1605 = _1602 * (_1569.z + (-0.5));
        float _1612 = exp2((_1576.w + (-0.5)) * 20.0) * 2.0;
        float _1613 = _1612 * (_1576.x + (-0.5));
        float _1614 = _1612 * (_1576.y + (-0.5));
        float _1615 = _1612 * (_1576.z + (-0.5));
        float _1622 = exp2((_1583.w + (-0.5)) * 20.0) * 2.0;
        float _1623 = _1622 * (_1583.x + (-0.5));
        float _1624 = _1622 * (_1583.y + (-0.5));
        float _1625 = _1622 * (_1583.z + (-0.5));
        float _1632 = exp2((_1590.w + (-0.5)) * 20.0) * 2.0;
        float _1633 = _1632 * (_1590.x + (-0.5));
        float _1634 = _1632 * (_1590.y + (-0.5));
        float _1635 = _1632 * (_1590.z + (-0.5));
        float _1636 = isnan(0.0) ? _1633 : (isnan(_1633) ? 0.0 : max(_1633, 0.0));
        float _1637 = isnan(0.0) ? _1634 : (isnan(_1634) ? 0.0 : max(_1634, 0.0));
        float _1638 = isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0));
        float _1639 = _1603 * 0.5;
        float _1640 = _1613 * 0.5;
        float _1641 = _1623 * 0.5;
        float _1642 = dot(vec3(_1639, _1640, _1641), vec3(_1639, _1640, _1641));
        float _1647 = (_1642 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1642);
        float _1655 = (dot(vec3(_946, _947, _948), vec3(_1647 * _1639, _1647 * _1640, _1647 * _1641)) + 1.0) * 0.5;
        float _4396 = isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0));
        float _1664 = sqrt(((_1640 * _1640) + (_1639 * _1639)) + (_1641 * _1641)) / (_1636 + 9.9999997473787516355514526367188e-06);
        float _4407 = isnan(0.0) ? _1664 : (isnan(_1664) ? 0.0 : max(_1664, 0.0));
        float _1665 = isnan(1.0) ? _4407 : (isnan(_4407) ? 1.0 : min(_4407, 1.0));
        float _1666 = _1665 * 2.0;
        float _1670 = (1.0 - _1665) / (_1665 + 1.0);
        float _4418 = isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0));
        float _1671 = isnan(1.0) ? _4418 : (isnan(_4418) ? 1.0 : min(_4418, 1.0));
        float _1680 = ((((1.0 - _1671) * (_1666 + 2.0)) * exp2(log2(isnan(1.0) ? _4396 : (isnan(_4396) ? 1.0 : min(_4396, 1.0))) * (_1666 + 1.0))) + _1671) * _1636;
        float _1681 = _1604 * 0.5;
        float _1682 = _1614 * 0.5;
        float _1683 = _1624 * 0.5;
        float _1684 = dot(vec3(_1681, _1682, _1683), vec3(_1681, _1682, _1683));
        float _1689 = (_1684 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1684);
        float _1697 = (dot(vec3(_946, _947, _948), vec3(_1689 * _1681, _1689 * _1682, _1689 * _1683)) + 1.0) * 0.5;
        float _4429 = isnan(0.0) ? _1697 : (isnan(_1697) ? 0.0 : max(_1697, 0.0));
        float _1706 = sqrt(((_1682 * _1682) + (_1681 * _1681)) + (_1683 * _1683)) / (_1637 + 9.9999997473787516355514526367188e-06);
        float _4440 = isnan(0.0) ? _1706 : (isnan(_1706) ? 0.0 : max(_1706, 0.0));
        float _1707 = isnan(1.0) ? _4440 : (isnan(_4440) ? 1.0 : min(_4440, 1.0));
        float _1708 = _1707 * 2.0;
        float _1712 = (1.0 - _1707) / (_1707 + 1.0);
        float _4451 = isnan(0.0) ? _1712 : (isnan(_1712) ? 0.0 : max(_1712, 0.0));
        float _1713 = isnan(1.0) ? _4451 : (isnan(_4451) ? 1.0 : min(_4451, 1.0));
        float _1722 = ((((1.0 - _1713) * (_1708 + 2.0)) * exp2(log2(isnan(1.0) ? _4429 : (isnan(_4429) ? 1.0 : min(_4429, 1.0))) * (_1708 + 1.0))) + _1713) * _1637;
        float _1723 = _1605 * 0.5;
        float _1724 = _1615 * 0.5;
        float _1725 = _1625 * 0.5;
        float _1726 = dot(vec3(_1723, _1724, _1725), vec3(_1723, _1724, _1725));
        float _1731 = (_1726 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1726);
        float _1739 = (dot(vec3(_946, _947, _948), vec3(_1731 * _1723, _1731 * _1724, _1731 * _1725)) + 1.0) * 0.5;
        float _4462 = isnan(0.0) ? _1739 : (isnan(_1739) ? 0.0 : max(_1739, 0.0));
        float _1748 = sqrt(((_1724 * _1724) + (_1723 * _1723)) + (_1725 * _1725)) / (_1638 + 9.9999997473787516355514526367188e-06);
        float _4473 = isnan(0.0) ? _1748 : (isnan(_1748) ? 0.0 : max(_1748, 0.0));
        float _1749 = isnan(1.0) ? _4473 : (isnan(_4473) ? 1.0 : min(_4473, 1.0));
        float _1750 = _1749 * 2.0;
        float _1754 = (1.0 - _1749) / (_1749 + 1.0);
        float _4484 = isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0));
        float _1755 = isnan(1.0) ? _4484 : (isnan(_4484) ? 1.0 : min(_4484, 1.0));
        float _1764 = ((((1.0 - _1755) * (_1750 + 2.0)) * exp2(log2(isnan(1.0) ? _4462 : (isnan(_4462) ? 1.0 : min(_4462, 1.0))) * (_1750 + 1.0))) + _1755) * _1638;
        _1772 = _1605;
        _1773 = _1604;
        _1774 = _1603;
        _1775 = _1615;
        _1776 = _1614;
        _1777 = _1613;
        _1778 = _1625;
        _1779 = _1624;
        _1780 = _1623;
        _1781 = _1638;
        _1782 = _1637;
        _1783 = _1636;
        _1784 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1680 : (isnan(_1680) ? 0.0 : max(_1680, 0.0)));
        _1785 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0)));
        _1786 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1764 : (isnan(_1764) ? 0.0 : max(_1764, 0.0)));
    }
    else
    {
        _1772 = _1466;
        _1773 = _1466;
        _1774 = _1466;
        _1775 = _1466;
        _1776 = _1466;
        _1777 = _1466;
        _1778 = _1466;
        _1779 = _1466;
        _1780 = _1466;
        _1781 = _1466;
        _1782 = _1466;
        _1783 = _1466;
        _1784 = 0.0;
        _1785 = 0.0;
        _1786 = 0.0;
    }
    float _1796 = (cbModelParam._m0[1u].x * (_1784 - _1478)) + _1478;
    float _1797 = (cbModelParam._m0[1u].x * (_1785 - _1479)) + _1479;
    float _1798 = (cbModelParam._m0[1u].x * (_1786 - _1480)) + _1480;
    float _1819 = fma(_1798, cbSceneParam._m0[89u].z, fma(_1797, cbSceneParam._m0[89u].y, _1796 * cbSceneParam._m0[89u].x));
    float _1822 = fma(_1798, cbSceneParam._m0[90u].z, fma(_1797, cbSceneParam._m0[90u].y, _1796 * cbSceneParam._m0[90u].x));
    float _1825 = fma(_1798, cbSceneParam._m0[91u].z, fma(_1797, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1796));
    float _1840 = _1103 * 0.5;
    float _1841 = _1104 * 0.5;
    float _1842 = _1105 * 0.5;
    float _1843 = dot(vec4(_1840, _1841, _1842, 1.0), vec4(_1774, _1777, _1780, _1783));
    float _1846 = dot(vec4(_1840, _1841, _1842, 1.0), vec4(_1773, _1776, _1779, _1782));
    float _1849 = dot(vec4(_1840, _1841, _1842, 1.0), vec4(_1772, _1775, _1778, _1781));
    float _1883;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1856 = dot(vec4(_1840, _1841, _1842, 1.0), vec4(_1465, _1469, _1472, _1475));
        float _1860 = dot(vec4(_1840, _1841, _1842, 1.0), vec4(_1467, _1470, _1473, _1476));
        float _1864 = dot(vec4(_1840, _1841, _1842, 1.0), vec4(_1468, _1471, _1474, _1477));
        float _1871 = dot(vec4(cbModelParam._m0[39u]), vec4(_1840, _1841, _1842, 1.0));
        _1883 = dot(vec3(isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0)), isnan(0.0) ? _1860 : (isnan(_1860) ? 0.0 : max(_1860, 0.0)), isnan(0.0) ? _1856 : (isnan(_1856) ? 0.0 : max(_1856, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1871) ? 0.0 : (isnan(0.0) ? _1871 : max(0.0, _1871))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1883 = 1.0;
    }
    float _1894;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1885 = dot(vec4(cbModelParam._m0[40u]), vec4(_1840, _1841, _1842, 1.0));
        _1894 = dot(vec3(isnan(0.0) ? _1843 : (isnan(_1843) ? 0.0 : max(_1843, 0.0)), isnan(0.0) ? _1846 : (isnan(_1846) ? 0.0 : max(_1846, 0.0)), isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1885) ? 0.0 : (isnan(0.0) ? _1885 : max(0.0, _1885))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1894 = 1.0;
    }
    float _1898 = (_1894 * cbModelParam._m0[1u].x) + (_1883 * (1.0 - cbModelParam._m0[1u].x));
    float _1908 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _949);
    float _1909 = isnan(_1908) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1908 : min(cbModelParam._m0[25u].z, _1908));
    float _1990;
    float _1992;
    float _1994;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1957 = fma(_1164, cbModelParam._m0[13u].z, fma(_1160, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1156)) + cbModelParam._m0[13u].w;
        float _1961 = fma(_1164, cbModelParam._m0[14u].z, fma(_1160, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1156)) + cbModelParam._m0[14u].w;
        float _1965 = fma(_1164, cbModelParam._m0[15u].z, fma(_1160, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1156)) + cbModelParam._m0[15u].w;
        float _1968 = fma(_1105, cbModelParam._m0[13u].z, fma(_1104, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1103));
        float _1971 = fma(_1105, cbModelParam._m0[14u].z, fma(_1104, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1103));
        float _1974 = fma(_1105, cbModelParam._m0[15u].z, fma(_1104, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1103));
        float _2002;
        if (_1968 > 0.0)
        {
            _2002 = abs((1.0 - _1957) / _1968);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1968 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1957 + 1.0) / _1968);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2002 = frontier_phi_14_12_ladder;
        }
        float _2173;
        if (_1971 > 0.0)
        {
            _2173 = abs((1.0 - _1961) / _1971);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1971 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1961 + 1.0) / _1971);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2173 = frontier_phi_23_19_ladder;
        }
        float _2468;
        if (_1974 > 0.0)
        {
            _2468 = abs((1.0 - _1965) / _1974);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1974 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1965 + 1.0) / _1974);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2468 = frontier_phi_35_30_ladder;
        }
        float _2470 = isnan(_2173) ? _2002 : (isnan(_2002) ? _2173 : min(_2002, _2173));
        float _2471 = isnan(_2468) ? _2470 : (isnan(_2470) ? _2468 : min(_2470, _2468));
        float _2475 = (_2471 * _1968) + _1957;
        float _2476 = (_2471 * _1971) + _1961;
        float _2477 = (_2471 * _1974) + _1965;
        float _2478 = _2471 * 9.9999997473787516355514526367188e-05;
        float _2480 = (-1.0) - _2478;
        float _2482 = _2478 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2477 > _2482) || ((_2477 < _2480) || ((_2476 > _2482) || ((_2476 < _2480) || ((_2475 < _2480) || (_2475 > _2482))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2622 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2477, cbModelParam._m0[9u].z, fma(_2476, cbModelParam._m0[9u].y, _2475 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2477, cbModelParam._m0[10u].z, fma(_2476, cbModelParam._m0[10u].y, _2475 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2477, cbModelParam._m0[11u].z, fma(_2476, cbModelParam._m0[11u].y, _2475 * cbModelParam._m0[11u].x))), _1909);
            frontier_phi_13_35_ladder = _2622.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2622.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2622.x * cbModelParam._m0[1u].y;
        }
        _1990 = frontier_phi_13_35_ladder_2;
        _1992 = frontier_phi_13_35_ladder_1;
        _1994 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1978 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1103, _1104, _1105), _1909);
        _1990 = _1978.x * cbModelParam._m0[1u].y;
        _1992 = _1978.y * cbModelParam._m0[1u].y;
        _1994 = _1978.z * cbModelParam._m0[1u].y;
    }
    float _1998 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _949);
    float _1999 = isnan(_1998) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1998 : min(cbModelParam._m0[25u].w, _1998));
    float _2090;
    float _2092;
    float _2094;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2054 = fma(_1164, cbModelParam._m0[21u].z, fma(_1160, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1156)) + cbModelParam._m0[21u].w;
        float _2058 = fma(_1164, cbModelParam._m0[22u].z, fma(_1160, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1156)) + cbModelParam._m0[22u].w;
        float _2062 = fma(_1164, cbModelParam._m0[23u].z, fma(_1160, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1156)) + cbModelParam._m0[23u].w;
        float _2065 = fma(_1105, cbModelParam._m0[21u].z, fma(_1104, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1103));
        float _2068 = fma(_1105, cbModelParam._m0[22u].z, fma(_1104, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1103));
        float _2071 = fma(_1105, cbModelParam._m0[23u].z, fma(_1104, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1103));
        float _2178;
        if (_2065 > 0.0)
        {
            _2178 = abs((1.0 - _2054) / _2065);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2065 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2054 + 1.0) / _2065);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2178 = frontier_phi_25_21_ladder;
        }
        float _2495;
        if (_2068 > 0.0)
        {
            _2495 = abs((1.0 - _2058) / _2068);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2068 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2058 + 1.0) / _2068);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2495 = frontier_phi_37_32_ladder;
        }
        float _2822;
        if (_2071 > 0.0)
        {
            _2822 = abs((1.0 - _2062) / _2071);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2071 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2062 + 1.0) / _2071);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2822 = frontier_phi_47_44_ladder;
        }
        float _2824 = isnan(_2495) ? _2178 : (isnan(_2178) ? _2495 : min(_2178, _2495));
        float _2825 = isnan(_2822) ? _2824 : (isnan(_2824) ? _2822 : min(_2824, _2822));
        float _2829 = (_2825 * _2065) + _2054;
        float _2830 = (_2825 * _2068) + _2058;
        float _2831 = (_2825 * _2071) + _2062;
        float _2832 = _2825 * 9.9999997473787516355514526367188e-05;
        float _2833 = (-1.0) - _2832;
        float _2835 = _2832 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2831 > _2835) || ((_2831 < _2833) || ((_2830 > _2835) || ((_2830 < _2833) || ((_2829 < _2833) || (_2829 > _2835))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2949 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2831, cbModelParam._m0[17u].z, fma(_2830, cbModelParam._m0[17u].y, _2829 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2831, cbModelParam._m0[18u].z, fma(_2830, cbModelParam._m0[18u].y, _2829 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2831, cbModelParam._m0[19u].z, fma(_2830, cbModelParam._m0[19u].y, _2829 * cbModelParam._m0[19u].x))), _1999);
            frontier_phi_22_47_ladder = _2949.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2949.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2949.x * cbModelParam._m0[1u].z;
        }
        _2090 = frontier_phi_22_47_ladder_2;
        _2092 = frontier_phi_22_47_ladder_1;
        _2094 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2074 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1103, _1104, _1105), _1999);
        _2090 = _2074.x * cbModelParam._m0[1u].z;
        _2092 = _2074.y * cbModelParam._m0[1u].z;
        _2094 = _2074.z * cbModelParam._m0[1u].z;
    }
    float _2106 = ((((1.0 - _1124) * ((_1111 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1124 * _1111)) * _1095;
    float _2107 = _2106 * ((cbModelParam._m0[1u].w * (_2090 - _1990)) + _1990);
    float _2108 = _2106 * ((cbModelParam._m0[1u].w * (_2092 - _1992)) + _1992);
    float _2109 = _2106 * ((cbModelParam._m0[1u].w * (_2094 - _1994)) + _1994);
    float _2112 = fma(_2109, cbSceneParam._m0[89u].z, fma(_2108, cbSceneParam._m0[89u].y, _2107 * cbSceneParam._m0[89u].x));
    float _2115 = fma(_2109, cbSceneParam._m0[90u].z, fma(_2108, cbSceneParam._m0[90u].y, _2107 * cbSceneParam._m0[90u].x));
    float _2118 = fma(_2109, cbSceneParam._m0[91u].z, fma(_2108, cbSceneParam._m0[91u].y, _2107 * cbSceneParam._m0[91u].x));
    float _2152 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2156 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2160 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2164 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2165 = _2152 / _2164;
    float _2166 = _2156 / _2164;
    float _2167 = _2160 / _2164;
    float _2314;
    float _2315;
    float _2316;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2194 = ((uint(_2167 > cbSceneParam._m0[59u].y) + uint(_2167 > cbSceneParam._m0[59u].x)) + uint(_2167 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2195 = _2194 + 43u;
        uint _2203 = _2194 + 44u;
        uint _2211 = _2194 + 45u;
        uint _2219 = _2194 + 46u;
        float _2230 = fma(_2164, cbSceneParam._m0[_2195].w, fma(_2160, cbSceneParam._m0[_2195].z, fma(_2156, cbSceneParam._m0[_2195].y, _2152 * cbSceneParam._m0[_2195].x)));
        float _2234 = fma(_2164, cbSceneParam._m0[_2203].w, fma(_2160, cbSceneParam._m0[_2203].z, fma(_2156, cbSceneParam._m0[_2203].y, _2152 * cbSceneParam._m0[_2203].x)));
        float _2242 = fma(_2164, cbSceneParam._m0[_2219].w, fma(_2160, cbSceneParam._m0[_2219].z, fma(_2156, cbSceneParam._m0[_2219].y, _2152 * cbSceneParam._m0[_2219].x)));
        float _2247 = cbSceneParam._m0[33u].z * _2242;
        float _2249 = cbSceneParam._m0[33u].w * _2242;
        float _2252 = fma(_2164, cbSceneParam._m0[_2211].w, fma(_2160, cbSceneParam._m0[_2211].z, fma(_2156, cbSceneParam._m0[_2211].y, _2152 * cbSceneParam._m0[_2211].x))) / _2242;
        float _2300 = (cbSceneParam._m0[33u].x - sqrt(((_2166 * _2166) + (_2165 * _2165)) + (_2167 * _2167))) * cbSceneParam._m0[33u].y;
        float _4610 = isnan(0.0) ? _2300 : (isnan(_2300) ? 0.0 : max(_2300, 0.0));
        float _2307 = (isnan(1.0) ? _4610 : (isnan(_4610) ? 1.0 : min(_4610, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2247 + _2230) / _2242, (_2249 + _2234) / _2242), _2252), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2249 + _2230) / _2242, (_2234 - _2247) / _2242), _2252), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2230 - _2247) / _2242, (_2234 - _2249) / _2242), _2252), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2230 - _2249) / _2242, (_2247 + _2234) / _2242), _2252), 0.0)).x), vec4(0.25)));
        _2314 = 1.0 - (_2307 * cbSceneParam._m0[34u].x);
        _2315 = 1.0 - (_2307 * cbSceneParam._m0[34u].y);
        _2316 = 1.0 - (_2307 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2314 = 1.0;
        _2315 = 1.0;
        _2316 = 1.0;
    }
    float _2380;
    float _2382;
    float _2384;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2368 = fma(_2164, cbSceneParam._m0[63u].w, fma(_2160, cbSceneParam._m0[63u].z, fma(_2156, cbSceneParam._m0[63u].y, _2152 * cbSceneParam._m0[63u].x)));
        float _2369 = fma(_2164, cbSceneParam._m0[60u].w, fma(_2160, cbSceneParam._m0[60u].z, fma(_2156, cbSceneParam._m0[60u].y, _2152 * cbSceneParam._m0[60u].x))) / _2368;
        float _2370 = fma(_2164, cbSceneParam._m0[61u].w, fma(_2160, cbSceneParam._m0[61u].z, fma(_2156, cbSceneParam._m0[61u].y, _2152 * cbSceneParam._m0[61u].x))) / _2368;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2369 >= cbSceneParam._m0[64u].x) && (_2370 >= cbSceneParam._m0[64u].y)) && (_2369 <= cbSceneParam._m0[64u].z)) && (_2370 <= cbSceneParam._m0[64u].w))
        {
            float _2508 = fma(_2164, cbSceneParam._m0[62u].w, fma(_2160, cbSceneParam._m0[62u].z, fma(_2156, cbSceneParam._m0[62u].y, _2152 * cbSceneParam._m0[62u].x))) / _2368;
            float _2512 = isnan(cbSceneParam._m0[41u].w) ? _2508 : (isnan(_2508) ? cbSceneParam._m0[41u].w : max(_2508, cbSceneParam._m0[41u].w));
            float _2555 = (cbSceneParam._m0[33u].x - sqrt(((_2166 * _2166) + (_2165 * _2165)) + (_2167 * _2167))) * cbSceneParam._m0[33u].y;
            float _4626 = isnan(0.0) ? _2555 : (isnan(_2555) ? 0.0 : max(_2555, 0.0));
            float _2562 = (isnan(1.0) ? _4626 : (isnan(_4626) ? 1.0 : min(_4626, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2369, cbSceneParam._m0[33u].w + _2370), _2512), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2369, _2370 - cbSceneParam._m0[33u].z), _2512), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2369 - cbSceneParam._m0[33u].z, _2370 - cbSceneParam._m0[33u].w), _2512), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2369 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2370), _2512), 0.0)).x), vec4(0.25)));
            float _2566 = 1.0 - (_2562 * cbSceneParam._m0[34u].x);
            float _2567 = 1.0 - (_2562 * cbSceneParam._m0[34u].y);
            float _2568 = 1.0 - (_2562 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2568) ? _2316 : (isnan(_2316) ? _2568 : min(_2316, _2568));
            frontier_phi_34_33_ladder_1 = isnan(_2567) ? _2315 : (isnan(_2315) ? _2567 : min(_2315, _2567));
            frontier_phi_34_33_ladder_2 = isnan(_2566) ? _2314 : (isnan(_2314) ? _2566 : min(_2314, _2566));
        }
        else
        {
            frontier_phi_34_33_ladder = _2316;
            frontier_phi_34_33_ladder_1 = _2315;
            frontier_phi_34_33_ladder_2 = _2314;
        }
        _2380 = frontier_phi_34_33_ladder_2;
        _2382 = frontier_phi_34_33_ladder_1;
        _2384 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2380 = _2314;
        _2382 = _2315;
        _2384 = _2316;
    }
    uvec4 _2389 = floatBitsToUint(cbInstanceData._m0[_287 + 5u]);
    uint _2391 = _2389.x * 14u;
    uint _2392 = _2391 + 13u;
    float _2399 = _1095 + (-1.0);
    float _2404 = (cbLight._m0[_2392].x * _2399) + 1.0;
    float _2405 = (cbLight._m0[_2392].y * _2399) + 1.0;
    float _2406 = (cbLight._m0[_2392].z * _2399) + 1.0;
    float _2407 = (cbLight._m0[_2392].w * _2399) + 1.0;
    uint _2408 = _2391 + 5u;
    float _2414 = isnan(1.0) ? _2405 : (isnan(_2405) ? 1.0 : min(_2405, 1.0));
    uint _2418 = _2391 + 4u;
    float _2427 = isnan(1.0) ? _2404 : (isnan(_2404) ? 1.0 : min(_2404, 1.0));
    uint _2431 = _2391 | 1u;
    float _2442 = dot(vec3(cbLight._m0[_2391].xyz), vec3(_946, _947, _948));
    float _2445 = dot(vec3(cbLight._m0[_2431].xyz), vec3(_946, _947, _948));
    float _4662 = isnan(0.0) ? _2442 : (isnan(_2442) ? 0.0 : max(_2442, 0.0));
    float _4673 = isnan(0.0) ? _2445 : (isnan(_2445) ? 0.0 : max(_2445, 0.0));
    float _2450 = (isnan(1.0) ? _4662 : (isnan(_4662) ? 1.0 : min(_4662, 1.0))) * 0.3183098733425140380859375;
    float _2452 = (isnan(1.0) ? _4673 : (isnan(_4673) ? 1.0 : min(_4673, 1.0))) * 0.3183098733425140380859375;
    float _2459 = ((cbLight._m0[_2408].x * _2414) * _2452) + (((cbLight._m0[_2418].x * _2380) * _2427) * _2450);
    float _2460 = ((_2414 * cbLight._m0[_2408].y) * _2452) + (((cbLight._m0[_2418].y * _2382) * _2427) * _2450);
    float _2461 = ((_2414 * cbLight._m0[_2408].z) * _2452) + (((cbLight._m0[_2418].z * _2384) * _2427) * _2450);
    uvec4 _2465 = floatBitsToUint(cbLight._m0[_2391 + 12u]);
    bool _2467 = _2465.x == 0u;
    float _2569;
    float _2571;
    float _2573;
    if (_2467)
    {
        _2569 = _2459;
        _2571 = _2460;
        _2573 = _2461;
    }
    else
    {
        uint _2577 = _2391 + 6u;
        float _2593 = (dot(vec3(cbLight._m0[_2391 + 2u].xyz), vec3(_946, _947, _948)) * 0.5) + 0.5;
        float _2594 = _2593 * _2593;
        float _4684 = isnan(0.0) ? _2594 : (isnan(_2594) ? 0.0 : max(_2594, 0.0));
        float _2595 = isnan(1.0) ? _4684 : (isnan(_4684) ? 1.0 : min(_4684, 1.0));
        float _2596 = isnan(1.0) ? _2406 : (isnan(_2406) ? 1.0 : min(_2406, 1.0));
        _2569 = (((cbLight._m0[_2577].x * 0.3183098733425140380859375) * _2595) * _2596) + _2459;
        _2571 = (((cbLight._m0[_2577].y * 0.3183098733425140380859375) * _2595) * _2596) + _2460;
        _2573 = (((cbLight._m0[_2577].z * 0.3183098733425140380859375) * _2595) * _2596) + _2461;
    }
    bool _2576 = _2465.y == 0u;
    float _2631;
    float _2633;
    float _2635;
    if (_2576)
    {
        _2631 = _2569;
        _2633 = _2571;
        _2635 = _2573;
    }
    else
    {
        uint _2793 = _2391 + 7u;
        float _2809 = (dot(vec3(cbLight._m0[_2391 + 3u].xyz), vec3(_946, _947, _948)) * 0.5) + 0.5;
        float _2810 = _2809 * _2809;
        float _4700 = isnan(0.0) ? _2810 : (isnan(_2810) ? 0.0 : max(_2810, 0.0));
        float _2811 = isnan(1.0) ? _4700 : (isnan(_4700) ? 1.0 : min(_4700, 1.0));
        float _2812 = isnan(1.0) ? _2407 : (isnan(_2407) ? 1.0 : min(_2407, 1.0));
        _2631 = (((cbLight._m0[_2793].x * 0.3183098733425140380859375) * _2811) * _2812) + _2569;
        _2633 = (((cbLight._m0[_2793].y * 0.3183098733425140380859375) * _2811) * _2812) + _2571;
        _2635 = (((cbLight._m0[_2793].z * 0.3183098733425140380859375) * _2811) * _2812) + _2573;
    }
    uint _2638 = _2391 + 8u;
    float _2651 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2391].w)) * _949) * 0.949999988079071044921875);
    float _2652 = _2651 * _2651;
    float _2653 = cbLight._m0[_2391].x + _1024;
    float _2654 = cbLight._m0[_2391].y + _1025;
    float _2655 = cbLight._m0[_2391].z + _1026;
    float _2659 = inversesqrt(dot(vec3(_2653, _2654, _2655), vec3(_2653, _2654, _2655)));
    float _2660 = _2659 * _2653;
    float _2661 = _2659 * _2654;
    float _2662 = _2659 * _2655;
    float _2663 = dot(vec3(_946, _947, _948), vec3(cbLight._m0[_2391].xyz));
    float _4716 = isnan(0.0) ? _2663 : (isnan(_2663) ? 0.0 : max(_2663, 0.0));
    float _2666 = isnan(1.0) ? _4716 : (isnan(_4716) ? 1.0 : min(_4716, 1.0));
    float _4727 = isnan(0.0) ? _1096 : (isnan(_1096) ? 0.0 : max(_1096, 0.0));
    float _2667 = isnan(1.0) ? _4727 : (isnan(_4727) ? 1.0 : min(_4727, 1.0));
    float _2668 = dot(vec3(_946, _947, _948), vec3(_2660, _2661, _2662));
    float _4738 = isnan(0.0) ? _2668 : (isnan(_2668) ? 0.0 : max(_2668, 0.0));
    float _2671 = isnan(1.0) ? _4738 : (isnan(_4738) ? 1.0 : min(_4738, 1.0));
    float _2672 = dot(vec3(cbLight._m0[_2391].xyz), vec3(_2660, _2661, _2662));
    float _4749 = isnan(0.0) ? _2672 : (isnan(_2672) ? 0.0 : max(_2672, 0.0));
    float _2676 = _2652 * _2652;
    float _2680 = ((_2671 * _2671) * (_2676 + (-1.0))) + 1.0;
    float _2691 = (exp2(log2(1.0 - (isnan(1.0) ? _4749 : (isnan(_4749) ? 1.0 : min(_4749, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2692 = 1.0 - _2652;
    float _2703 = (0.5 / (((_2667 * ((_2666 * _2692) + _2652)) + 9.9999999392252902907785028219223e-09) + (((_2667 * _2692) + _2652) * _2666))) * _2666;
    float _4760 = isnan(0.0) ? _2703 : (isnan(_2703) ? 0.0 : max(_2703, 0.0));
    float _2705 = (isnan(1.0) ? _4760 : (isnan(_4760) ? 1.0 : min(_4760, 1.0))) * (_2676 / ((_2680 * _2680) * 3.141590118408203125));
    uint _2719 = _2391 + 9u;
    float _2730 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2431].w)) * _949) * 0.949999988079071044921875);
    float _2731 = _2730 * _2730;
    float _2732 = cbLight._m0[_2431].x + _1024;
    float _2733 = cbLight._m0[_2431].y + _1025;
    float _2734 = cbLight._m0[_2431].z + _1026;
    float _2738 = inversesqrt(dot(vec3(_2732, _2733, _2734), vec3(_2732, _2733, _2734)));
    float _2739 = _2738 * _2732;
    float _2740 = _2738 * _2733;
    float _2741 = _2738 * _2734;
    float _2742 = dot(vec3(_946, _947, _948), vec3(cbLight._m0[_2431].xyz));
    float _4771 = isnan(0.0) ? _2742 : (isnan(_2742) ? 0.0 : max(_2742, 0.0));
    float _2745 = isnan(1.0) ? _4771 : (isnan(_4771) ? 1.0 : min(_4771, 1.0));
    float _2746 = dot(vec3(_946, _947, _948), vec3(_2739, _2740, _2741));
    float _4782 = isnan(0.0) ? _2746 : (isnan(_2746) ? 0.0 : max(_2746, 0.0));
    float _2749 = isnan(1.0) ? _4782 : (isnan(_4782) ? 1.0 : min(_4782, 1.0));
    float _2750 = dot(vec3(cbLight._m0[_2431].xyz), vec3(_2739, _2740, _2741));
    float _4793 = isnan(0.0) ? _2750 : (isnan(_2750) ? 0.0 : max(_2750, 0.0));
    float _2754 = _2731 * _2731;
    float _2758 = ((_2749 * _2749) * (_2754 + (-1.0))) + 1.0;
    float _2767 = (exp2(log2(1.0 - (isnan(1.0) ? _4793 : (isnan(_4793) ? 1.0 : min(_4793, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2768 = 1.0 - _2731;
    float _2778 = (0.5 / (((_2667 * ((_2745 * _2768) + _2731)) + 9.9999999392252902907785028219223e-09) + (((_2667 * _2768) + _2731) * _2745))) * _2745;
    float _4804 = isnan(0.0) ? _2778 : (isnan(_2778) ? 0.0 : max(_2778, 0.0));
    float _2780 = (isnan(1.0) ? _4804 : (isnan(_4804) ? 1.0 : min(_4804, 1.0))) * (_2754 / ((_2758 * _2758) * 3.141590118408203125));
    float _2790 = (((_2767 * cbLight._m0[_2719].x) * _2780) * _2414) + ((((cbLight._m0[_2638].x * _2380) * _2691) * _2705) * _2427);
    float _2791 = (((_2767 * cbLight._m0[_2719].y) * _2780) * _2414) + ((((cbLight._m0[_2638].y * _2382) * _2691) * _2705) * _2427);
    float _2792 = (((_2767 * cbLight._m0[_2719].z) * _2780) * _2414) + ((((cbLight._m0[_2638].z * _2384) * _2691) * _2705) * _2427);
    float _2848;
    float _2850;
    float _2852;
    if (_2467)
    {
        _2848 = _2790;
        _2850 = _2791;
        _2852 = _2792;
    }
    else
    {
        uint _2854 = _2391 + 2u;
        uint _2858 = _2391 + 10u;
        float _2872 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2854].w)) * _949) * 0.949999988079071044921875);
        float _2873 = _2872 * _2872;
        float _2874 = cbLight._m0[_2854].x + _1024;
        float _2875 = cbLight._m0[_2854].y + _1025;
        float _2876 = cbLight._m0[_2854].z + _1026;
        float _2880 = inversesqrt(dot(vec3(_2874, _2875, _2876), vec3(_2874, _2875, _2876)));
        float _2881 = _2880 * _2874;
        float _2882 = _2880 * _2875;
        float _2883 = _2880 * _2876;
        float _2884 = dot(vec3(_946, _947, _948), vec3(cbLight._m0[_2854].xyz));
        float _4815 = isnan(0.0) ? _2884 : (isnan(_2884) ? 0.0 : max(_2884, 0.0));
        float _2887 = isnan(1.0) ? _4815 : (isnan(_4815) ? 1.0 : min(_4815, 1.0));
        float _2888 = dot(vec3(_946, _947, _948), vec3(_2881, _2882, _2883));
        float _4826 = isnan(0.0) ? _2888 : (isnan(_2888) ? 0.0 : max(_2888, 0.0));
        float _2891 = isnan(1.0) ? _4826 : (isnan(_4826) ? 1.0 : min(_4826, 1.0));
        float _2892 = dot(vec3(cbLight._m0[_2854].xyz), vec3(_2881, _2882, _2883));
        float _4837 = isnan(0.0) ? _2892 : (isnan(_2892) ? 0.0 : max(_2892, 0.0));
        float _2896 = _2873 * _2873;
        float _2900 = ((_2891 * _2891) * (_2896 + (-1.0))) + 1.0;
        float _2909 = (exp2(log2(1.0 - (isnan(1.0) ? _4837 : (isnan(_4837) ? 1.0 : min(_4837, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2910 = 1.0 - _2873;
        float _2920 = (0.5 / (((_2667 * ((_2887 * _2910) + _2873)) + 9.9999999392252902907785028219223e-09) + (((_2667 * _2910) + _2873) * _2887))) * _2887;
        float _4848 = isnan(0.0) ? _2920 : (isnan(_2920) ? 0.0 : max(_2920, 0.0));
        float _2922 = (isnan(1.0) ? _4848 : (isnan(_4848) ? 1.0 : min(_4848, 1.0))) * (_2896 / ((_2900 * _2900) * 3.141590118408203125));
        float _2923 = isnan(1.0) ? _2406 : (isnan(_2406) ? 1.0 : min(_2406, 1.0));
        _2848 = (((_2909 * cbLight._m0[_2858].x) * _2922) * _2923) + _2790;
        _2850 = (((_2909 * cbLight._m0[_2858].y) * _2922) * _2923) + _2791;
        _2852 = (((_2909 * cbLight._m0[_2858].z) * _2922) * _2923) + _2792;
    }
    float _2954;
    float _2956;
    float _2958;
    if (_2576)
    {
        _2954 = _2848;
        _2956 = _2850;
        _2958 = _2852;
    }
    else
    {
        uint _2965 = _2391 + 3u;
        uint _2969 = _2391 + 11u;
        float _2983 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2965].w)) * _949) * 0.949999988079071044921875);
        float _2984 = _2983 * _2983;
        float _2985 = cbLight._m0[_2965].x + _1024;
        float _2986 = cbLight._m0[_2965].y + _1025;
        float _2987 = cbLight._m0[_2965].z + _1026;
        float _2991 = inversesqrt(dot(vec3(_2985, _2986, _2987), vec3(_2985, _2986, _2987)));
        float _2992 = _2991 * _2985;
        float _2993 = _2991 * _2986;
        float _2994 = _2991 * _2987;
        float _2995 = dot(vec3(_946, _947, _948), vec3(cbLight._m0[_2965].xyz));
        float _4864 = isnan(0.0) ? _2995 : (isnan(_2995) ? 0.0 : max(_2995, 0.0));
        float _2998 = isnan(1.0) ? _4864 : (isnan(_4864) ? 1.0 : min(_4864, 1.0));
        float _2999 = dot(vec3(_946, _947, _948), vec3(_2992, _2993, _2994));
        float _4875 = isnan(0.0) ? _2999 : (isnan(_2999) ? 0.0 : max(_2999, 0.0));
        float _3002 = isnan(1.0) ? _4875 : (isnan(_4875) ? 1.0 : min(_4875, 1.0));
        float _3003 = dot(vec3(cbLight._m0[_2965].xyz), vec3(_2992, _2993, _2994));
        float _4886 = isnan(0.0) ? _3003 : (isnan(_3003) ? 0.0 : max(_3003, 0.0));
        float _3007 = _2984 * _2984;
        float _3011 = ((_3002 * _3002) * (_3007 + (-1.0))) + 1.0;
        float _3020 = (exp2(log2(1.0 - (isnan(1.0) ? _4886 : (isnan(_4886) ? 1.0 : min(_4886, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3021 = 1.0 - _2984;
        float _3031 = (0.5 / (((_2667 * ((_2998 * _3021) + _2984)) + 9.9999999392252902907785028219223e-09) + (((_2667 * _3021) + _2984) * _2998))) * _2998;
        float _4897 = isnan(0.0) ? _3031 : (isnan(_3031) ? 0.0 : max(_3031, 0.0));
        float _3033 = (isnan(1.0) ? _4897 : (isnan(_4897) ? 1.0 : min(_4897, 1.0))) * (_3007 / ((_3011 * _3011) * 3.141590118408203125));
        float _3034 = isnan(1.0) ? _2407 : (isnan(_2407) ? 1.0 : min(_2407, 1.0));
        _2954 = (((_3020 * cbLight._m0[_2969].x) * _3033) * _3034) + _2848;
        _2956 = (((_3020 * cbLight._m0[_2969].y) * _3033) * _3034) + _2850;
        _2958 = (((_3020 * cbLight._m0[_2969].z) * _3033) * _3034) + _2852;
    }
    float _3100;
    float _3102;
    float _3104;
    float _3106;
    float _3108;
    float _3110;
    if (_2389.y == 0u)
    {
        uvec4 _3055 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3056 = _3055.x;
        uint _3067 = uint((float(_3055.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1033) / _3056))) + floor(float(uint(cbSceneParam._m0[85u].x * _1032) / _3056)));
        float _3077 = (log2(_2167 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3078 = isnan(0.0) ? _3077 : (isnan(_3077) ? 0.0 : max(_3077, 0.0));
        uint _3081 = uint(isnan(14.0) ? _3078 : (isnan(_3078) ? 14.0 : min(_3078, 14.0)));
        uvec4 _3086 = texelFetch(g_lightClusterGridBuffer, int(((_3081 << 2u) + (_3067 << 6u)) >> 2u));
        uint _3087 = _3086.x;
        uint _3088 = _3055.z;
        float _3167;
        float _3169;
        float _3171;
        float _3173;
        float _3175;
        float _3177;
        if (((((1u << ((_3088 >> 4u) & 15u)) + 4294967295u) & _3087) == 0u) || ((_3088 & 240u) == 0u))
        {
            _3167 = 0.0;
            _3169 = 0.0;
            _3171 = 0.0;
            _3173 = 0.0;
            _3175 = 0.0;
            _3177 = 0.0;
        }
        else
        {
            float _3168;
            float _3170;
            float _3172;
            float _3174;
            float _3176;
            float _3178;
            float _3312 = 0.0;
            float _3313 = 0.0;
            float _3314 = 0.0;
            float _3315 = 0.0;
            float _3316 = 0.0;
            float _3317 = 0.0;
            uint _3318 = 0u;
            uint _3327;
            bool _3328;
            for (;;)
            {
                _3327 = texelFetch(g_lightClassification, int((((_3081 << 5u) + (_3067 << 9u)) + (_3318 << 2u)) >> 2u)).x;
                _3328 = _3327 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3328)
                {
                    frontier_phi_66_pred = _3317;
                    frontier_phi_66_pred_1 = _3316;
                    frontier_phi_66_pred_2 = _3315;
                    frontier_phi_66_pred_3 = _3314;
                    frontier_phi_66_pred_4 = _3313;
                    frontier_phi_66_pred_5 = _3312;
                }
                else
                {
                    float _3436;
                    float _3437;
                    float _3438;
                    float _3439;
                    float _3440;
                    float _3441;
                    uint _3442;
                    _3436 = _3312;
                    _3437 = _3313;
                    _3438 = _3314;
                    _3439 = _3315;
                    _3440 = _3316;
                    _3441 = _3317;
                    _3442 = _3327;
                    float _3368;
                    float _3369;
                    float _3370;
                    float _3371;
                    float _3372;
                    float _3373;
                    for (;;)
                    {
                        uint _3446 = uint(findLSB(_3442)) + (_3318 << 5u);
                        uint _3443 = (_3442 + 4294967295u) & _3442;
                        uint _3448 = _3446 * 48u;
                        vec4 _3462 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3448)).x, texelFetch(g_PointLightRenderingBuffer, int(_3448 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3448 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3448 + 3u)).x));
                        uint _3468 = (_3446 * 48u) + 4u;
                        vec4 _3481 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3468)).x, texelFetch(g_PointLightRenderingBuffer, int(_3468 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3468 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3468 + 3u)).x));
                        uint _3487 = (_3446 * 48u) + 8u;
                        vec3 _3498 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3487)).x, texelFetch(g_PointLightRenderingBuffer, int(_3487 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3487 + 2u)).x));
                        float _3502 = _3462.x - _2165;
                        float _3503 = _3462.y - _2166;
                        float _3504 = _3462.z - _2167;
                        float _3505 = dot(vec3(_3502, _3503, _3504), vec3(_3502, _3503, _3504));
                        float _3508 = inversesqrt(_3505);
                        float _3509 = _3508 * _3502;
                        float _3510 = _3508 * _3503;
                        float _3511 = _3508 * _3504;
                        float _3512 = dot(vec3(_1051, _1054, _1057), vec3(_3509, _3510, _3511));
                        float _3517 = 1.0 - (_3505 * _3462.w);
                        float _4923 = isnan(0.0) ? _3517 : (isnan(_3517) ? 0.0 : max(_3517, 0.0));
                        float _3518 = isnan(1.0) ? _4923 : (isnan(_4923) ? 1.0 : min(_4923, 1.0));
                        float _3519 = sqrt(_3505) * _3481.w;
                        float _3522 = 1.39999997615814208984375 / (_3519 + 1.39999997615814208984375);
                        float _3523 = _3522 * _3522;
                        float _3526 = ((1.0 - _3523) * _3512) + _3523;
                        float _3529 = _3519 * _3519;
                        float _3533 = ((isnan(0.0) ? _3526 : (isnan(_3526) ? 0.0 : max(_3526, 0.0))) * _3518) / ((_3529 * 0.699999988079071044921875) + 1.0);
                        float _3537 = (-0.0) - _2165;
                        float _3538 = (-0.0) - _2166;
                        float _3539 = (-0.0) - _2167;
                        float _3543 = inversesqrt(dot(vec3(_3537, _3538, _3539), vec3(_3537, _3538, _3539)));
                        float _3544 = _3543 * _3537;
                        float _3545 = _3543 * _3538;
                        float _3546 = _3543 * _3539;
                        float _3553 = exp2(log2(1.0 / ((_3529 * 3.5) + 5.0)) * 0.25);
                        float _3554 = 1.0 - _1111;
                        float _3561 = sqrt(1.0 - ((1.0 - (_3554 * _3554)) * (1.0 - (_3553 * _3553))));
                        float _3562 = _3561 * _3561;
                        float _3563 = _3562 * _3562;
                        float _3564 = _3544 + _3509;
                        float _3565 = _3545 + _3510;
                        float _3566 = _3546 + _3511;
                        float _3570 = inversesqrt(dot(vec3(_3564, _3565, _3566), vec3(_3564, _3565, _3566)));
                        float _3574 = dot(vec3(_1051, _1054, _1057), vec3(_3544, _3545, _3546));
                        float _4939 = isnan(0.0) ? _3574 : (isnan(_3574) ? 0.0 : max(_3574, 0.0));
                        float _3577 = isnan(1.0) ? _4939 : (isnan(_4939) ? 1.0 : min(_4939, 1.0));
                        float _3578 = dot(vec3(_1051, _1054, _1057), vec3(_3570 * _3564, _3570 * _3565, _3570 * _3566));
                        float _4950 = isnan(0.0) ? _3578 : (isnan(_3578) ? 0.0 : max(_3578, 0.0));
                        float _3581 = isnan(1.0) ? _4950 : (isnan(_4950) ? 1.0 : min(_4950, 1.0));
                        float _3585 = ((_3581 * _3581) * (_3563 + (-1.0))) + 1.0;
                        float _3586 = _3522 * _3562;
                        float _3587 = _3586 * _3586;
                        float _3590 = ((1.0 - _3587) * _3512) + _3587;
                        float _4961 = isnan(0.0) ? _3590 : (isnan(_3590) ? 0.0 : max(_3590, 0.0));
                        float _3591 = isnan(1.0) ? _4961 : (isnan(_4961) ? 1.0 : min(_4961, 1.0));
                        float _3592 = 1.0 - _3562;
                        float _3602 = (0.5 / (((_3591 * ((_3577 * _3592) + _3562)) + 9.9999999392252902907785028219223e-09) + (((_3591 * _3592) + _3562) * _3577))) * _3591;
                        float _4972 = isnan(0.0) ? _3602 : (isnan(_3602) ? 0.0 : max(_3602, 0.0));
                        float _3613 = (((_3563 * 3.1415927410125732421875) * (isnan(1.0) ? _4972 : (isnan(_4972) ? 1.0 : min(_4972, 1.0)))) / ((_3585 * _3585) * ((_3529 * 2.1991131305694580078125) + 3.141590118408203125))) * _3518;
                        _3371 = (_3533 * _3481.x) + _3439;
                        _3372 = (_3533 * _3481.y) + _3440;
                        _3373 = (_3533 * _3481.z) + _3441;
                        _3368 = (_3613 * _3498.x) + _3436;
                        _3369 = (_3613 * _3498.y) + _3437;
                        _3370 = (_3613 * _3498.z) + _3438;
                        if (_3443 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3436 = _3368;
                            _3437 = _3369;
                            _3438 = _3370;
                            _3439 = _3371;
                            _3440 = _3372;
                            _3441 = _3373;
                            _3442 = _3443;
                        }
                    }
                    frontier_phi_66_pred = _3373;
                    frontier_phi_66_pred_1 = _3372;
                    frontier_phi_66_pred_2 = _3371;
                    frontier_phi_66_pred_3 = _3370;
                    frontier_phi_66_pred_4 = _3369;
                    frontier_phi_66_pred_5 = _3368;
                }
                _3178 = frontier_phi_66_pred;
                _3176 = frontier_phi_66_pred_1;
                _3174 = frontier_phi_66_pred_2;
                _3172 = frontier_phi_66_pred_3;
                _3170 = frontier_phi_66_pred_4;
                _3168 = frontier_phi_66_pred_5;
                uint _3319 = _3318 + 1u;
                if (_3319 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3312 = _3168;
                    _3313 = _3170;
                    _3314 = _3172;
                    _3315 = _3174;
                    _3316 = _3176;
                    _3317 = _3178;
                    _3318 = _3319;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3167 = _3168;
            _3169 = _3170;
            _3171 = _3172;
            _3173 = _3174;
            _3175 = _3176;
            _3177 = _3178;
        }
        uvec4 _3181 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3182 = _3181.z;
        uint _3184 = (_3182 >> 8u) & 15u;
        float _3280;
        float _3282;
        float _3284;
        float _3286;
        float _3288;
        float _3290;
        if (((4294967295u << _3184) & _3087) == 0u)
        {
            _3280 = _3167;
            _3282 = _3169;
            _3284 = _3171;
            _3286 = _3173;
            _3288 = _3175;
            _3290 = _3177;
        }
        else
        {
            float _3305 = inversesqrt(dot(vec3(_2165, _2166, _2167), vec3(_2165, _2166, _2167)));
            float _3306 = _3305 * _2165;
            float _3307 = _3305 * _2166;
            float _3308 = _3305 * _2167;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3184 < ((_3182 >> 12u) & 15u))
            {
                float _3281;
                float _3283;
                float _3285;
                float _3287;
                float _3289;
                float _3291;
                float _3419 = _3167;
                float _3420 = _3169;
                float _3421 = _3171;
                float _3422 = _3173;
                float _3423 = _3175;
                float _3424 = _3177;
                uint _3425 = _3184;
                uint _3434;
                bool _3435;
                for (;;)
                {
                    _3434 = texelFetch(g_lightClassification, int((((_3081 << 5u) + (_3067 << 9u)) + (_3425 << 2u)) >> 2u)).x;
                    _3435 = _3434 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3435)
                    {
                        frontier_phi_72_pred = _3424;
                        frontier_phi_72_pred_1 = _3423;
                        frontier_phi_72_pred_2 = _3422;
                        frontier_phi_72_pred_3 = _3421;
                        frontier_phi_72_pred_4 = _3420;
                        frontier_phi_72_pred_5 = _3419;
                    }
                    else
                    {
                        float _3618;
                        float _3619;
                        float _3620;
                        float _3621;
                        float _3622;
                        float _3623;
                        float _3911;
                        float _3912;
                        float _3913;
                        float _3914;
                        float _3915;
                        float _3916;
                        float _3631 = _3419;
                        float _3632 = _3420;
                        float _3633 = _3421;
                        float _3634 = _3422;
                        float _3635 = _3423;
                        float _3636 = _3424;
                        uint _3637 = _3434;
                        uint _3638;
                        vec4 _3663;
                        float _3664;
                        vec4 _3679;
                        vec3 _3691;
                        vec4 _3706;
                        vec4 _3721;
                        float _3767;
                        bool _3768;
                        for (;;)
                        {
                            uint _3648 = ((_3425 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3637));
                            _3638 = (_3637 + 4294967295u) & _3637;
                            uint _3650 = _3648 * 40u;
                            _3663 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3650)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3650 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3650 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3650 + 3u)).x));
                            _3664 = _3663.w;
                            uint _3666 = (_3648 * 40u) + 4u;
                            _3679 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3666)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3666 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3666 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3666 + 3u)).x));
                            uint _3681 = (_3648 * 40u) + 8u;
                            _3691 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3681)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3681 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3681 + 2u)).x));
                            uint _3693 = (_3648 * 40u) + 16u;
                            _3706 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3693)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3693 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3693 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3693 + 3u)).x));
                            uint _3708 = (_3648 * 40u) + 20u;
                            _3721 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3708)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3708 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3708 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3708 + 3u)).x));
                            uint _3723 = (_3648 * 40u) + 24u;
                            vec4 _3736 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3723)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3723 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3723 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3723 + 3u)).x));
                            uint _3742 = (_3648 * 40u) + 28u;
                            vec4 _3755 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3742)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3742 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3742 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3742 + 3u)).x));
                            _3767 = fma(_2167, _3755.z, fma(_2166, _3755.y, _3755.x * _2165)) + _3755.w;
                            _3768 = !((fma(_2167, _3736.z, fma(_2166, _3736.y, _3736.x * _2165)) + _3736.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3768)
                            {
                                float _3795 = _3663.x - _2165;
                                float _3796 = _3663.y - _2166;
                                float _3797 = _3663.z - _2167;
                                float _3798 = dot(vec3(_3795, _3796, _3797), vec3(_3795, _3796, _3797));
                                float _3801 = inversesqrt(_3798);
                                float _3802 = _3801 * _3795;
                                float _3803 = _3801 * _3796;
                                float _3804 = _3801 * _3797;
                                float _3808 = 1.0 - (_3798 / (_3664 * _3664));
                                float _4983 = isnan(0.0) ? _3808 : (isnan(_3808) ? 0.0 : max(_3808, 0.0));
                                float _3809 = isnan(1.0) ? _4983 : (isnan(_4983) ? 1.0 : min(_4983, 1.0));
                                float _3813 = sqrt(_3798) * _3679.w;
                                float _3815 = 1.39999997615814208984375 / (_3813 + 1.39999997615814208984375);
                                float _3816 = _3815 * _3815;
                                float _3819 = ((1.0 - _3816) * dot(vec3(_3802, _3803, _3804), vec3(_1051, _1054, _1057))) + _3816;
                                float _3822 = _3813 * _3813;
                                float _3826 = (fma(_2167, _3706.z, fma(_2166, _3706.y, _3706.x * _2165)) + _3706.w) / _3767;
                                float _3827 = (fma(_2167, _3721.z, fma(_2166, _3721.y, _3721.x * _2165)) + _3721.w) / _3767;
                                float _3831 = 1.0 - dot(vec2(_3826, _3827), vec2(_3826, _3827));
                                float _4999 = isnan(0.0) ? _3831 : (isnan(_3831) ? 0.0 : max(_3831, 0.0));
                                float _3832 = isnan(1.0) ? _4999 : (isnan(_4999) ? 1.0 : min(_4999, 1.0));
                                float _3833 = _3832 * (((isnan(0.0) ? _3819 : (isnan(_3819) ? 0.0 : max(_3819, 0.0))) * _3809) / ((_3822 * 0.699999988079071044921875) + 1.0));
                                float _3845 = exp2(log2(1.0 / ((_3822 * 3.5) + 5.0)) * 0.25);
                                float _3846 = 1.0 - _1111;
                                float _3853 = sqrt(1.0 - ((1.0 - (_3846 * _3846)) * (1.0 - (_3845 * _3845))));
                                float _3854 = _3853 * _3853;
                                float _3855 = _3854 * _3854;
                                float _3856 = _3802 - _3306;
                                float _3857 = _3803 - _3307;
                                float _3858 = _3804 - _3308;
                                float _3862 = inversesqrt(dot(vec3(_3856, _3857, _3858), vec3(_3856, _3857, _3858)));
                                float _3866 = dot(vec3(_1051, _1054, _1057), vec3((-0.0) - _3306, (-0.0) - _3307, (-0.0) - _3308));
                                float _5010 = isnan(0.0) ? _3866 : (isnan(_3866) ? 0.0 : max(_3866, 0.0));
                                float _3869 = isnan(1.0) ? _5010 : (isnan(_5010) ? 1.0 : min(_5010, 1.0));
                                float _3870 = dot(vec3(_1051, _1054, _1057), vec3(_3862 * _3856, _3862 * _3857, _3862 * _3858));
                                float _5021 = isnan(0.0) ? _3870 : (isnan(_3870) ? 0.0 : max(_3870, 0.0));
                                float _3873 = isnan(1.0) ? _5021 : (isnan(_5021) ? 1.0 : min(_5021, 1.0));
                                float _3877 = ((_3873 * _3873) * (_3855 + (-1.0))) + 1.0;
                                float _3878 = _3815 * _3854;
                                float _3879 = _3878 * _3878;
                                float _3885 = ((1.0 - _3879) * dot(vec3(_1051, _1054, _1057), vec3(_3802, _3803, _3804))) + _3879;
                                float _5032 = isnan(0.0) ? _3885 : (isnan(_3885) ? 0.0 : max(_3885, 0.0));
                                float _3886 = isnan(1.0) ? _5032 : (isnan(_5032) ? 1.0 : min(_5032, 1.0));
                                float _3887 = 1.0 - _3854;
                                float _3897 = (0.5 / (((_3886 * ((_3869 * _3887) + _3854)) + 9.9999999392252902907785028219223e-09) + (((_3886 * _3887) + _3854) * _3869))) * _3886;
                                float _5043 = isnan(0.0) ? _3897 : (isnan(_3897) ? 0.0 : max(_3897, 0.0));
                                float _3907 = (_3832 * _3809) * (((_3855 * 3.1415927410125732421875) * (isnan(1.0) ? _5043 : (isnan(_5043) ? 1.0 : min(_5043, 1.0)))) / ((_3877 * _3877) * ((_3822 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3833 * _3679.y;
                                frontier_phi_78_pred_1 = _3833 * _3679.x;
                                frontier_phi_78_pred_2 = _3907 * _3691.z;
                                frontier_phi_78_pred_3 = _3907 * _3691.y;
                                frontier_phi_78_pred_4 = _3907 * _3691.x;
                                frontier_phi_78_pred_5 = _3833 * _3679.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3915 = frontier_phi_78_pred;
                            _3914 = frontier_phi_78_pred_1;
                            _3913 = frontier_phi_78_pred_2;
                            _3912 = frontier_phi_78_pred_3;
                            _3911 = frontier_phi_78_pred_4;
                            _3916 = frontier_phi_78_pred_5;
                            _3621 = _3914 + _3634;
                            _3622 = _3915 + _3635;
                            _3623 = _3916 + _3636;
                            _3618 = _3911 + _3631;
                            _3619 = _3912 + _3632;
                            _3620 = _3913 + _3633;
                            if (_3638 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3631 = _3618;
                                _3632 = _3619;
                                _3633 = _3620;
                                _3634 = _3621;
                                _3635 = _3622;
                                _3636 = _3623;
                                _3637 = _3638;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3623;
                        frontier_phi_72_pred_1 = _3622;
                        frontier_phi_72_pred_2 = _3621;
                        frontier_phi_72_pred_3 = _3620;
                        frontier_phi_72_pred_4 = _3619;
                        frontier_phi_72_pred_5 = _3618;
                    }
                    _3291 = frontier_phi_72_pred;
                    _3289 = frontier_phi_72_pred_1;
                    _3287 = frontier_phi_72_pred_2;
                    _3285 = frontier_phi_72_pred_3;
                    _3283 = frontier_phi_72_pred_4;
                    _3281 = frontier_phi_72_pred_5;
                    uint _3426 = _3425 + 1u;
                    if (_3426 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3419 = _3281;
                        _3420 = _3283;
                        _3421 = _3285;
                        _3422 = _3287;
                        _3423 = _3289;
                        _3424 = _3291;
                        _3425 = _3426;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3291;
                frontier_phi_60_61_ladder_1 = _3289;
                frontier_phi_60_61_ladder_2 = _3285;
                frontier_phi_60_61_ladder_3 = _3283;
                frontier_phi_60_61_ladder_4 = _3281;
                frontier_phi_60_61_ladder_5 = _3287;
            }
            else
            {
                frontier_phi_60_61_ladder = _3177;
                frontier_phi_60_61_ladder_1 = _3175;
                frontier_phi_60_61_ladder_2 = _3171;
                frontier_phi_60_61_ladder_3 = _3169;
                frontier_phi_60_61_ladder_4 = _3167;
                frontier_phi_60_61_ladder_5 = _3173;
            }
            _3280 = frontier_phi_60_61_ladder_4;
            _3282 = frontier_phi_60_61_ladder_3;
            _3284 = frontier_phi_60_61_ladder_2;
            _3286 = frontier_phi_60_61_ladder_5;
            _3288 = frontier_phi_60_61_ladder_1;
            _3290 = frontier_phi_60_61_ladder;
        }
        float _3295 = isnan(1.0) ? _1095 : (isnan(_1095) ? 1.0 : min(_1095, 1.0));
        _3100 = (_3295 * _3286) + _2631;
        _3102 = (_3295 * _3288) + _2633;
        _3104 = (_3295 * _3290) + _2635;
        _3106 = ((_3280 * 0.039999999105930328369140625) * _3295) + _2954;
        _3108 = ((_3282 * 0.039999999105930328369140625) * _3295) + _2956;
        _3110 = ((_3284 * 0.039999999105930328369140625) * _3295) + _2958;
    }
    else
    {
        _3100 = _2631;
        _3102 = _2633;
        _3104 = _2635;
        _3106 = _2954;
        _3108 = _2956;
        _3110 = _2958;
    }
    float _5059 = isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0));
    float _5070 = isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0));
    float _5081 = isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0));
    uint _3130 = _287 + 6u;
    float _3138 = _1032 / cbSceneParam._m0[86u].x;
    float _3139 = _1033 / cbSceneParam._m0[86u].y;
    vec4 _3153 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3138, _3139, (log2((isnan(cbSceneParam._m0[77u].w) ? _967 : (isnan(_967) ? cbSceneParam._m0[77u].w : min(_967, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3155 = _3153.x;
    float _3156 = _3153.y;
    float _3157 = _3153.z;
    float _3158 = _3153.w;
    float _3230;
    float _3232;
    float _3234;
    float _3236;
    if (_967 > cbSceneParam._m0[78u].w)
    {
        float _3192 = isnan(_967) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _967 : min(cbSceneParam._m0[80u].w, _967));
        float _3193 = _3192 / _967;
        float _3204 = _3193 * _1017;
        float _3205 = _1018 * _3193;
        float _3206 = (-0.0) - _3205;
        float _3208 = _3193 * _1019;
        float _3210 = (cbSceneParam._m0[77u].w * _3206) / _3192;
        float _3211 = _3210 + cbSceneParam._m0[79u].w;
        float _3212 = cbSceneParam._m0[79u].w - _3205;
        float _3218 = sqrt(((_3204 * _3204) + (_3205 * _3205)) + (_3208 * _3208));
        float _3221 = (1.0 - (cbSceneParam._m0[77u].w / _3192)) * _3218;
        float _3226 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3228 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3381;
        if (abs((_3206 - _3210) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3381 = ((((_3211 > 0.0) ? exp2(_3226 * _3211) : (2.0 - exp2(_3228 * _3211))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3221;
        }
        else
        {
            float _3341 = 1.0 / cbSceneParam._m0[80u].x;
            float _3342 = isnan(_3212) ? _3211 : (isnan(_3211) ? _3212 : max(_3211, _3212));
            float _3343 = isnan(_3212) ? _3211 : (isnan(_3211) ? _3212 : min(_3211, _3212));
            float _3352 = isnan(0.0) ? _3342 : (isnan(_3342) ? 0.0 : min(_3342, 0.0));
            float _3353 = isnan(0.0) ? _3343 : (isnan(_3343) ? 0.0 : min(_3343, 0.0));
            _3381 = ((abs(_3218 / _3206) * cbSceneParam._m0[80u].y) * ((((_3352 - _3353) * 2.0) - ((exp2(_3226 * (isnan(0.0) ? _3342 : (isnan(_3342) ? 0.0 : max(_3342, 0.0)))) - exp2(_3226 * (isnan(0.0) ? _3343 : (isnan(_3343) ? 0.0 : max(_3343, 0.0))))) * _3341)) - ((exp2(_3228 * _3352) - exp2(_3228 * _3353)) * _3341))) + (_3221 * cbSceneParam._m0[80u].z);
        }
        vec4 _3383 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3138, _3139, 1.0), 0.0);
        float _3392 = exp2((_3381 * (-1.44269502162933349609375)) * (1.0 - _3383.w));
        float _3393 = log2(_3392);
        float _3409 = log2(_3158);
        _3230 = (exp2(_3409 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3393 * cbSceneParam._m0[78u].x)) * _3383.x) / cbSceneParam._m0[78u].x)) + _3155;
        _3232 = (exp2(_3409 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3393 * cbSceneParam._m0[78u].y)) * _3383.y) / cbSceneParam._m0[78u].y)) + _3156;
        _3234 = (exp2(_3409 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3393 * cbSceneParam._m0[78u].z)) * _3383.z) / cbSceneParam._m0[78u].z)) + _3157;
        _3236 = _3392 * _3158;
    }
    else
    {
        _3230 = _3155;
        _3232 = _3156;
        _3234 = _3157;
        _3236 = _3158;
    }
    float _3248 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3249 = _3248 == 3.0;
    float _3250 = log2(_3236);
    float _3257 = exp2(_3250 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5059 : (isnan(_5059) ? 1.0 : min(_5059, 1.0))) * (_3100 + ((isnan(0.0) ? _1819 : (isnan(_1819) ? 0.0 : max(_1819, 0.0))) * _1095))) + ((_3106 + ((isnan(0.0) ? _2112 : (isnan(_2112) ? 0.0 : max(_2112, 0.0))) * _1898)) * cbPerFrame._m0[3u].x));
    float _3258 = exp2(_3250 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5070 : (isnan(_5070) ? 1.0 : min(_5070, 1.0))) * (_3102 + ((isnan(0.0) ? _1822 : (isnan(_1822) ? 0.0 : max(_1822, 0.0))) * _1095))) + ((_3108 + ((isnan(0.0) ? _2115 : (isnan(_2115) ? 0.0 : max(_2115, 0.0))) * _1898)) * cbPerFrame._m0[3u].x));
    float _3259 = exp2(_3250 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5081 : (isnan(_5081) ? 1.0 : min(_5081, 1.0))) * (_3104 + ((isnan(0.0) ? _1825 : (isnan(_1825) ? 0.0 : max(_1825, 0.0))) * _1095))) + ((_3110 + ((isnan(0.0) ? _2118 : (isnan(_2118) ? 0.0 : max(_2118, 0.0))) * _1898)) * cbPerFrame._m0[3u].x));
    float _3268 = (_3248 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3268 * (_3249 ? _3257 : (_3257 + (cbSceneParam._m0[72u].w * _3230)));
    SV_Target.y = _3268 * (_3249 ? _3258 : (_3258 + (cbSceneParam._m0[72u].w * _3232)));
    SV_Target.z = _3268 * (_3249 ? _3259 : (_3259 + (cbSceneParam._m0[72u].w * _3234)));
    SV_Target.w = cbInstanceData._m0[_3130].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3130].w;
}


