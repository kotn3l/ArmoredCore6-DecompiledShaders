#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1461;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _227 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _228 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _229 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _235 = inversesqrt(dot(vec3(_227, _228, _229), vec3(_227, _228, _229)));
    float _236 = _235 * _227;
    float _237 = _235 * _228;
    float _238 = _235 * _229;
    float _242 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _243 = _242 * NORMAL.x;
    float _244 = _242 * NORMAL.y;
    float _245 = _242 * NORMAL.z;
    float _249 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _250 = _249 * TANGENT.x;
    float _251 = _249 * TANGENT.y;
    float _252 = _249 * TANGENT.z;
    uint _255 = uint(roundEven(NORMAL.w)) * 13u;
    uint _260 = _255 + 1u;
    uint _264 = _255 + 2u;
    float _273 = sqrt(((cbInstanceData._m0[_260].x * cbInstanceData._m0[_260].x) + (cbInstanceData._m0[_255].x * cbInstanceData._m0[_255].x)) + (cbInstanceData._m0[_264].x * cbInstanceData._m0[_264].x));
    float _274 = _273 * TEXCOORD.z;
    float _275 = _273 * TEXCOORD.w;
    vec4 _295 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _301 = _295.x * cbMtdParam._m0[11u].x;
    float _302 = _295.y * cbMtdParam._m0[11u].y;
    float _303 = _295.z * cbMtdParam._m0[11u].z;
    vec4 _322 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _274) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _275) + cbTextureTilingScale._m0[5u].w));
    vec4 _341 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _381 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _383 = _381.x;
    float _395 = dot(vec4(_383, _381.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _412 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _341.x) * 2.0) - ((((_383 - _395) * cbMtdParam._m0[24u].z) + _395) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3763 = isnan(0.0) ? _412 : (isnan(_412) ? 0.0 : max(_412, 0.0));
    float _413 = isnan(1.0) ? _3763 : (isnan(_3763) ? 1.0 : min(_3763, 1.0));
    float _420 = (_413 * ((_322.x * cbMtdParam._m0[12u].x) - _301)) + _301;
    float _421 = (_413 * ((_322.y * cbMtdParam._m0[12u].y) - _302)) + _302;
    float _422 = (_413 * ((_322.z * cbMtdParam._m0[12u].z) - _303)) + _303;
    vec4 _439 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _274) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _275) + cbTextureTilingScale._m0[3u].w));
    vec4 _459 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _461 = _459.x;
    float _471 = dot(vec4(_461, _459.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _485 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _341.y) * 2.0) - ((((_461 - _471) * cbMtdParam._m0[24u].z) + _471) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3774 = isnan(0.0) ? _485 : (isnan(_485) ? 0.0 : max(_485, 0.0));
    float _486 = isnan(1.0) ? _3774 : (isnan(_3774) ? 1.0 : min(_3774, 1.0));
    float _493 = (_486 * ((_439.x * cbMtdParam._m0[13u].x) - _420)) + _420;
    float _494 = (_486 * ((_439.y * cbMtdParam._m0[13u].y) - _421)) + _421;
    float _495 = (_486 * ((_439.z * cbMtdParam._m0[13u].z) - _422)) + _422;
    vec4 _513 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _274) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _275) + cbTextureTilingScale._m0[24u].w));
    vec4 _530 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _532 = _530.x;
    float _542 = dot(vec4(_532, _530.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _554 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _341.z) * 2.0) - ((((_532 - _542) * cbMtdParam._m0[24u].z) + _542) * cbMtdParam._m0[20u].z))) + 1.0;
    float _3785 = isnan(0.0) ? _554 : (isnan(_554) ? 0.0 : max(_554, 0.0));
    float _555 = isnan(1.0) ? _3785 : (isnan(_3785) ? 1.0 : min(_3785, 1.0));
    float _562 = (_555 * ((_513.x * cbMtdParam._m0[14u].x) - _493)) + _493;
    float _563 = (_555 * ((_513.y * cbMtdParam._m0[14u].y) - _494)) + _494;
    float _564 = (_555 * ((_513.z * cbMtdParam._m0[14u].z) - _495)) + _495;
    vec4 _582 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _274) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _275) + cbTextureTilingScale._m0[4u].w));
    vec4 _599 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _601 = _599.x;
    float _602 = _599.y;
    float _603 = _599.z;
    float _610 = ((_582.x - _601) * _413) + _601;
    float _611 = ((_582.y - _602) * _413) + _602;
    float _612 = ((_582.z - _603) * _413) + _603;
    vec4 _624 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _274) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _275) + cbTextureTilingScale._m0[2u].w));
    float _635 = ((_624.x - _610) * _486) + _610;
    float _636 = ((_624.y - _611) * _486) + _611;
    float _637 = ((_624.z - _612) * _486) + _612;
    vec4 _649 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _274) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _275) + cbTextureTilingScale._m0[23u].w));
    float _662 = ((_649.z - _637) * _555) + _637;
    float _665 = ((((_649.x - _635) * _555) + _635) * 2.0) + (-1.0);
    float _667 = ((((_649.y - _636) * _555) + _636) * 2.0) + (-1.0);
    float _668 = dot(vec2(_665, _667), vec2(_665, _667));
    float _3796 = isnan(0.0) ? _668 : (isnan(_668) ? 0.0 : max(_668, 0.0));
    float _673 = sqrt(1.0 - (isnan(1.0) ? _3796 : (isnan(_3796) ? 1.0 : min(_3796, 1.0))));
    vec4 _687 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _699 = (((_687.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _665;
    float _700 = (((_687.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _667;
    float _703 = fma(_673, _243, fma(_700, _250, _699 * _236));
    float _706 = fma(_673, _244, fma(_700, _251, _699 * _237));
    float _709 = fma(_673, _245, fma(_700, _252, _699 * _238));
    float _713 = inversesqrt(dot(vec3(_703, _706, _709), vec3(_703, _706, _709)));
    vec4 _740 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _274) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _275) + cbTextureTilingScale._m0[11u].w));
    float _742 = _740.x;
    float _743 = 1.0 - _742;
    float _749 = (cbMtdParam._m0[19u].x + dot(vec4(_713 * _703, _713 * _706, _713 * _709, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_742 - _743) * cbMtdParam._m0[24u].w) + _743) * cbMtdParam._m0[21u].z);
    float _3807 = isnan(0.0) ? _749 : (isnan(_749) ? 0.0 : max(_749, 0.0));
    float _750 = isnan(1.0) ? _3807 : (isnan(_3807) ? 1.0 : min(_3807, 1.0));
    float _752 = (-0.0) - cbMtdParam._m0[24u].x;
    float _754 = isnan(0.0) ? _752 : (isnan(_752) ? 0.0 : max(_752, 0.0));
    float _755 = isnan(1.0) ? _754 : (isnan(_754) ? 1.0 : min(_754, 1.0));
    float _762 = _750 - ((_750 * TEXCOORD_8.x) * _755);
    float _763 = _750 - ((_750 * TEXCOORD_8.y) * _755);
    float _764 = _750 - ((_750 * TEXCOORD_8.z) * _755);
    float _771 = (_762 * (cbMtdParam._m0[17u].x - _562)) + _562;
    float _772 = (_763 * (cbMtdParam._m0[17u].y - _563)) + _563;
    float _773 = (_764 * (cbMtdParam._m0[17u].z - _564)) + _564;
    vec4 _785 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _274) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _275) + cbTextureTilingScale._m0[19u].w));
    float _787 = _785.x;
    float _788 = 1.0 - _787;
    float _816 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_787 - _788) * cbMtdParam._m0[24u].y) + _788) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3828 = isnan(0.0) ? _816 : (isnan(_816) ? 0.0 : max(_816, 0.0));
    float _817 = isnan(1.0) ? _3828 : (isnan(_3828) ? 1.0 : min(_3828, 1.0));
    float _825 = ((((cbMtdParam._m0[10u].x - _771) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _817) + _771;
    float _826 = ((((cbMtdParam._m0[10u].y - _772) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _817) + _772;
    float _827 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _773)) * _817) + _773;
    float _831 = (cbMtdParam._m0[19u].w * (_687.z - _662)) + _662;
    vec4 _845 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _274) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _275) + cbTextureTilingScale._m0[15u].w));
    float _852 = (_845.x * 2.0) + (-1.0);
    float _853 = (_845.y * 2.0) + (-1.0);
    float _854 = dot(vec2(_852, _853), vec2(_852, _853));
    float _3839 = isnan(0.0) ? _854 : (isnan(_854) ? 0.0 : max(_854, 0.0));
    float _862 = ((_845.z - _831) * _762) + _831;
    float _865 = ((cbMtdParam._m0[23u].y - _862) * _817) + _862;
    vec4 _884 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _274) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _275) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _890 = (_884.x * 2.0) + (-1.0);
    float _891 = (_884.y * 2.0) + (-1.0);
    float _892 = dot(vec2(_890, _891), vec2(_890, _891));
    float _3850 = isnan(0.0) ? _892 : (isnan(_892) ? 0.0 : max(_892, 0.0));
    float _907 = ((sqrt(1.0 - (isnan(1.0) ? _3839 : (isnan(_3839) ? 1.0 : min(_3839, 1.0)))) - _673) * _764) + _673;
    float _910 = (((_852 - _699) * _762) + _699) + (cbMtdParam._m0[21u].x * _699);
    float _911 = (((_853 - _700) * _763) + _700) + (cbMtdParam._m0[21u].x * _700);
    float _922 = (((_890 - _910) + (_910 * cbMtdParam._m0[22u].z)) * _817) + _910;
    float _923 = (((_891 - _911) + (_911 * cbMtdParam._m0[22u].z)) * _817) + _911;
    float _924 = (_817 * (sqrt(1.0 - (isnan(1.0) ? _3850 : (isnan(_3850) ? 1.0 : min(_3850, 1.0)))) - _907)) + _907;
    float _926 = cbMtdParam._m0[22u].x + _687.w;
    float _929 = fma(_924, _243, fma(_923, _250, _922 * _236));
    float _932 = fma(_924, _244, fma(_923, _251, _922 * _237));
    float _935 = fma(_924, _245, fma(_923, _252, _922 * _238));
    float _939 = inversesqrt(dot(vec3(_929, _932, _935), vec3(_929, _932, _935)));
    float _940 = _939 * _929;
    float _941 = _939 * _932;
    float _942 = _939 * _935;
    float _3861 = isnan(0.0) ? _865 : (isnan(_865) ? 0.0 : max(_865, 0.0));
    float _943 = isnan(1.0) ? _3861 : (isnan(_3861) ? 1.0 : min(_3861, 1.0));
    float _3872 = isnan(0.0) ? _926 : (isnan(_926) ? 0.0 : max(_926, 0.0));
    float _3883 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _3894 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
    float _3905 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    float _961 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1002 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1012 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1002);
    float _1013 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1002);
    float _1014 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1002);
    float _1018 = inversesqrt(dot(vec3(_1012, _1013, _1014), vec3(_1012, _1013, _1014)));
    float _1019 = _1012 * _1018;
    float _1020 = _1013 * _1018;
    float _1021 = _1014 * _1018;
    float _1027 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1028 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1046 = fma(_942, cbSceneParam._m0[5u].z, fma(_941, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _940));
    float _1049 = fma(_942, cbSceneParam._m0[6u].z, fma(_941, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _940));
    float _1052 = fma(_942, cbSceneParam._m0[7u].z, fma(_941, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _940));
    uint _1066 = (_255 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1072 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3883 : (isnan(_3883) ? 1.0 : min(_3883, 1.0)))) * cbInstanceData._m0[_1066].x;
    float _1073 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3894 : (isnan(_3894) ? 1.0 : min(_3894, 1.0)))) * cbInstanceData._m0[_1066].y;
    float _1074 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3905 : (isnan(_3905) ? 1.0 : min(_3905, 1.0)))) * cbInstanceData._m0[_1066].z;
    float _3916 = isnan(0.0) ? _1072 : (isnan(_1072) ? 0.0 : max(_1072, 0.0));
    float _1075 = isnan(1.0) ? _3916 : (isnan(_3916) ? 1.0 : min(_3916, 1.0));
    float _3927 = isnan(0.0) ? _1073 : (isnan(_1073) ? 0.0 : max(_1073, 0.0));
    float _1076 = isnan(1.0) ? _3927 : (isnan(_3927) ? 1.0 : min(_3927, 1.0));
    float _3938 = isnan(0.0) ? _1074 : (isnan(_1074) ? 0.0 : max(_1074, 0.0));
    float _1077 = isnan(1.0) ? _3938 : (isnan(_3938) ? 1.0 : min(_3938, 1.0));
    vec4 _1086 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1027, cbSceneParam._m0[86u].y * _1028));
    float _1090 = ((isnan(1.0) ? _3872 : (isnan(_3872) ? 1.0 : min(_3872, 1.0))) * TEXCOORD_5.w) * _1086.x;
    float _1091 = dot(vec3(_940, _941, _942), vec3(_1019, _1020, _1021));
    float _1094 = _1091 * 2.0;
    float _1098 = (_1094 * _940) - _1019;
    float _1099 = (_1094 * _941) - _1020;
    float _1100 = (_1094 * _942) - _1021;
    float _1104 = abs(dot(vec3(_1019, _1020, _1021), vec3(_940, _941, _942)));
    float _3949 = isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0));
    float _1106 = sqrt(_943);
    float _1119 = exp2((_1106 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3949 : (isnan(_3949) ? 1.0 : min(_3949, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1106 * 3.0));
    float _1151 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1155 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1159 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1460;
    float _1462;
    float _1463;
    float _1464;
    float _1465;
    float _1466;
    float _1467;
    float _1468;
    float _1469;
    float _1470;
    float _1471;
    float _1472;
    float _1473;
    float _1474;
    float _1475;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1185 = fma(_1159, cbModelParam._m0[26u].z, fma(_1155, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1151));
        float _1189 = fma(_1159, cbModelParam._m0[27u].z, fma(_1155, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1151));
        float _1193 = fma(_1159, cbModelParam._m0[28u].z, fma(_1155, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1151));
        float _1218 = _1151 + _940;
        float _1219 = _1155 + _941;
        float _1220 = _1159 + _942;
        float _1230 = fma(_1220, cbModelParam._m0[26u].z, fma(_1219, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1218)) - _1185;
        float _1231 = fma(_1220, cbModelParam._m0[27u].z, fma(_1219, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1218)) - _1189;
        float _1232 = fma(_1220, cbModelParam._m0[28u].z, fma(_1219, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1218)) - _1193;
        float _1236 = inversesqrt(dot(vec3(_1230, _1231, _1232), vec3(_1230, _1231, _1232)));
        float _1249 = ((_1236 * _1230) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1185 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1250 = ((_1236 * _1231) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1189 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1251 = ((_1236 * _1232) / cbModelParam._m0[34u].z) + ((((((_1193 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1254 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1249, _1250, _1251), 0.0);
        vec4 _1261 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1249, _1250, _1251), 0.0);
        vec4 _1268 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1249, _1250, _1251), 0.0);
        vec4 _1275 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1249, _1250, _1251), 0.0);
        float _1288 = exp2((_1254.w + (-0.5)) * 20.0) * 2.0;
        float _1289 = _1288 * (_1254.x + (-0.5));
        float _1290 = _1288 * (_1254.y + (-0.5));
        float _1291 = _1288 * (_1254.z + (-0.5));
        float _1298 = exp2((_1261.w + (-0.5)) * 20.0) * 2.0;
        float _1299 = _1298 * (_1261.x + (-0.5));
        float _1300 = _1298 * (_1261.y + (-0.5));
        float _1301 = _1298 * (_1261.z + (-0.5));
        float _1308 = exp2((_1268.w + (-0.5)) * 20.0) * 2.0;
        float _1309 = _1308 * (_1268.x + (-0.5));
        float _1310 = _1308 * (_1268.y + (-0.5));
        float _1311 = _1308 * (_1268.z + (-0.5));
        float _1318 = exp2((_1275.w + (-0.5)) * 20.0) * 2.0;
        float _1319 = _1318 * (_1275.x + (-0.5));
        float _1320 = _1318 * (_1275.y + (-0.5));
        float _1321 = _1318 * (_1275.z + (-0.5));
        float _1322 = isnan(0.0) ? _1319 : (isnan(_1319) ? 0.0 : max(_1319, 0.0));
        float _1323 = isnan(0.0) ? _1320 : (isnan(_1320) ? 0.0 : max(_1320, 0.0));
        float _1324 = isnan(0.0) ? _1321 : (isnan(_1321) ? 0.0 : max(_1321, 0.0));
        float _1325 = _1289 * 0.5;
        float _1326 = _1299 * 0.5;
        float _1327 = _1309 * 0.5;
        float _1328 = dot(vec3(_1325, _1326, _1327), vec3(_1325, _1326, _1327));
        float _1333 = (_1328 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1328);
        float _1342 = (dot(vec3(_940, _941, _942), vec3(_1333 * _1325, _1333 * _1326, _1333 * _1327)) + 1.0) * 0.5;
        float _3975 = isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0));
        float _1352 = sqrt(((_1326 * _1326) + (_1325 * _1325)) + (_1327 * _1327)) / (_1322 + 9.9999997473787516355514526367188e-06);
        float _3986 = isnan(0.0) ? _1352 : (isnan(_1352) ? 0.0 : max(_1352, 0.0));
        float _1353 = isnan(1.0) ? _3986 : (isnan(_3986) ? 1.0 : min(_3986, 1.0));
        float _1354 = _1353 * 2.0;
        float _1358 = (1.0 - _1353) / (_1353 + 1.0);
        float _3997 = isnan(0.0) ? _1358 : (isnan(_1358) ? 0.0 : max(_1358, 0.0));
        float _1359 = isnan(1.0) ? _3997 : (isnan(_3997) ? 1.0 : min(_3997, 1.0));
        float _1368 = ((((1.0 - _1359) * (_1354 + 2.0)) * exp2(log2(isnan(1.0) ? _3975 : (isnan(_3975) ? 1.0 : min(_3975, 1.0))) * (_1354 + 1.0))) + _1359) * _1322;
        float _1369 = _1290 * 0.5;
        float _1370 = _1300 * 0.5;
        float _1371 = _1310 * 0.5;
        float _1372 = dot(vec3(_1369, _1370, _1371), vec3(_1369, _1370, _1371));
        float _1377 = (_1372 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1372);
        float _1385 = (dot(vec3(_940, _941, _942), vec3(_1377 * _1369, _1377 * _1370, _1377 * _1371)) + 1.0) * 0.5;
        float _4008 = isnan(0.0) ? _1385 : (isnan(_1385) ? 0.0 : max(_1385, 0.0));
        float _1394 = sqrt(((_1370 * _1370) + (_1369 * _1369)) + (_1371 * _1371)) / (_1323 + 9.9999997473787516355514526367188e-06);
        float _4019 = isnan(0.0) ? _1394 : (isnan(_1394) ? 0.0 : max(_1394, 0.0));
        float _1395 = isnan(1.0) ? _4019 : (isnan(_4019) ? 1.0 : min(_4019, 1.0));
        float _1396 = _1395 * 2.0;
        float _1400 = (1.0 - _1395) / (_1395 + 1.0);
        float _4030 = isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0));
        float _1401 = isnan(1.0) ? _4030 : (isnan(_4030) ? 1.0 : min(_4030, 1.0));
        float _1410 = ((((1.0 - _1401) * (_1396 + 2.0)) * exp2(log2(isnan(1.0) ? _4008 : (isnan(_4008) ? 1.0 : min(_4008, 1.0))) * (_1396 + 1.0))) + _1401) * _1323;
        float _1411 = _1291 * 0.5;
        float _1412 = _1301 * 0.5;
        float _1413 = _1311 * 0.5;
        float _1414 = dot(vec3(_1411, _1412, _1413), vec3(_1411, _1412, _1413));
        float _1419 = (_1414 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1414);
        float _1427 = (dot(vec3(_940, _941, _942), vec3(_1419 * _1411, _1419 * _1412, _1419 * _1413)) + 1.0) * 0.5;
        float _4041 = isnan(0.0) ? _1427 : (isnan(_1427) ? 0.0 : max(_1427, 0.0));
        float _1436 = sqrt(((_1412 * _1412) + (_1411 * _1411)) + (_1413 * _1413)) / (_1324 + 9.9999997473787516355514526367188e-06);
        float _4052 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
        float _1437 = isnan(1.0) ? _4052 : (isnan(_4052) ? 1.0 : min(_4052, 1.0));
        float _1438 = _1437 * 2.0;
        float _1442 = (1.0 - _1437) / (_1437 + 1.0);
        float _4063 = isnan(0.0) ? _1442 : (isnan(_1442) ? 0.0 : max(_1442, 0.0));
        float _1443 = isnan(1.0) ? _4063 : (isnan(_4063) ? 1.0 : min(_4063, 1.0));
        float _1452 = ((((1.0 - _1443) * (_1438 + 2.0)) * exp2(log2(isnan(1.0) ? _4041 : (isnan(_4041) ? 1.0 : min(_4041, 1.0))) * (_1438 + 1.0))) + _1443) * _1324;
        _1460 = _1291;
        _1462 = _1290;
        _1463 = _1289;
        _1464 = _1301;
        _1465 = _1300;
        _1466 = _1299;
        _1467 = _1311;
        _1468 = _1310;
        _1469 = _1309;
        _1470 = _1324;
        _1471 = _1323;
        _1472 = _1322;
        _1473 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1368 : (isnan(_1368) ? 0.0 : max(_1368, 0.0)));
        _1474 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1410 : (isnan(_1410) ? 0.0 : max(_1410, 0.0)));
        _1475 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1452 : (isnan(_1452) ? 0.0 : max(_1452, 0.0)));
    }
    else
    {
        _1460 = _1461;
        _1462 = _1461;
        _1463 = _1461;
        _1464 = _1461;
        _1465 = _1461;
        _1466 = _1461;
        _1467 = _1461;
        _1468 = _1461;
        _1469 = _1461;
        _1470 = _1461;
        _1471 = _1461;
        _1472 = _1461;
        _1473 = 0.0;
        _1474 = 0.0;
        _1475 = 0.0;
    }
    float _1767;
    float _1768;
    float _1769;
    float _1770;
    float _1771;
    float _1772;
    float _1773;
    float _1774;
    float _1775;
    float _1776;
    float _1777;
    float _1778;
    float _1779;
    float _1780;
    float _1781;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1498 = fma(_1159, cbModelParam._m0[30u].z, fma(_1155, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1151));
        float _1502 = fma(_1159, cbModelParam._m0[31u].z, fma(_1155, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1151));
        float _1506 = fma(_1159, cbModelParam._m0[32u].z, fma(_1155, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1151));
        float _1529 = _1151 + _940;
        float _1530 = _1155 + _941;
        float _1531 = _1159 + _942;
        float _1541 = fma(_1531, cbModelParam._m0[30u].z, fma(_1530, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1529)) - _1498;
        float _1542 = fma(_1531, cbModelParam._m0[31u].z, fma(_1530, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1529)) - _1502;
        float _1543 = fma(_1531, cbModelParam._m0[32u].z, fma(_1530, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1529)) - _1506;
        float _1547 = inversesqrt(dot(vec3(_1541, _1542, _1543), vec3(_1541, _1542, _1543)));
        float _1560 = ((_1547 * _1541) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1498 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1561 = ((_1547 * _1542) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1502 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1562 = ((_1547 * _1543) / cbModelParam._m0[35u].z) + ((((((_1506 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1564 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1560, _1561, _1562), 0.0);
        vec4 _1571 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1560, _1561, _1562), 0.0);
        vec4 _1578 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1560, _1561, _1562), 0.0);
        vec4 _1585 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1560, _1561, _1562), 0.0);
        float _1597 = exp2((_1564.w + (-0.5)) * 20.0) * 2.0;
        float _1598 = _1597 * (_1564.x + (-0.5));
        float _1599 = _1597 * (_1564.y + (-0.5));
        float _1600 = _1597 * (_1564.z + (-0.5));
        float _1607 = exp2((_1571.w + (-0.5)) * 20.0) * 2.0;
        float _1608 = _1607 * (_1571.x + (-0.5));
        float _1609 = _1607 * (_1571.y + (-0.5));
        float _1610 = _1607 * (_1571.z + (-0.5));
        float _1617 = exp2((_1578.w + (-0.5)) * 20.0) * 2.0;
        float _1618 = _1617 * (_1578.x + (-0.5));
        float _1619 = _1617 * (_1578.y + (-0.5));
        float _1620 = _1617 * (_1578.z + (-0.5));
        float _1627 = exp2((_1585.w + (-0.5)) * 20.0) * 2.0;
        float _1628 = _1627 * (_1585.x + (-0.5));
        float _1629 = _1627 * (_1585.y + (-0.5));
        float _1630 = _1627 * (_1585.z + (-0.5));
        float _1631 = isnan(0.0) ? _1628 : (isnan(_1628) ? 0.0 : max(_1628, 0.0));
        float _1632 = isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0));
        float _1633 = isnan(0.0) ? _1630 : (isnan(_1630) ? 0.0 : max(_1630, 0.0));
        float _1634 = _1598 * 0.5;
        float _1635 = _1608 * 0.5;
        float _1636 = _1618 * 0.5;
        float _1637 = dot(vec3(_1634, _1635, _1636), vec3(_1634, _1635, _1636));
        float _1642 = (_1637 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1637);
        float _1650 = (dot(vec3(_940, _941, _942), vec3(_1642 * _1634, _1642 * _1635, _1642 * _1636)) + 1.0) * 0.5;
        float _4104 = isnan(0.0) ? _1650 : (isnan(_1650) ? 0.0 : max(_1650, 0.0));
        float _1659 = sqrt(((_1635 * _1635) + (_1634 * _1634)) + (_1636 * _1636)) / (_1631 + 9.9999997473787516355514526367188e-06);
        float _4115 = isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0));
        float _1660 = isnan(1.0) ? _4115 : (isnan(_4115) ? 1.0 : min(_4115, 1.0));
        float _1661 = _1660 * 2.0;
        float _1665 = (1.0 - _1660) / (_1660 + 1.0);
        float _4126 = isnan(0.0) ? _1665 : (isnan(_1665) ? 0.0 : max(_1665, 0.0));
        float _1666 = isnan(1.0) ? _4126 : (isnan(_4126) ? 1.0 : min(_4126, 1.0));
        float _1675 = ((((1.0 - _1666) * (_1661 + 2.0)) * exp2(log2(isnan(1.0) ? _4104 : (isnan(_4104) ? 1.0 : min(_4104, 1.0))) * (_1661 + 1.0))) + _1666) * _1631;
        float _1676 = _1599 * 0.5;
        float _1677 = _1609 * 0.5;
        float _1678 = _1619 * 0.5;
        float _1679 = dot(vec3(_1676, _1677, _1678), vec3(_1676, _1677, _1678));
        float _1684 = (_1679 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1679);
        float _1692 = (dot(vec3(_940, _941, _942), vec3(_1684 * _1676, _1684 * _1677, _1684 * _1678)) + 1.0) * 0.5;
        float _4137 = isnan(0.0) ? _1692 : (isnan(_1692) ? 0.0 : max(_1692, 0.0));
        float _1701 = sqrt(((_1677 * _1677) + (_1676 * _1676)) + (_1678 * _1678)) / (_1632 + 9.9999997473787516355514526367188e-06);
        float _4148 = isnan(0.0) ? _1701 : (isnan(_1701) ? 0.0 : max(_1701, 0.0));
        float _1702 = isnan(1.0) ? _4148 : (isnan(_4148) ? 1.0 : min(_4148, 1.0));
        float _1703 = _1702 * 2.0;
        float _1707 = (1.0 - _1702) / (_1702 + 1.0);
        float _4159 = isnan(0.0) ? _1707 : (isnan(_1707) ? 0.0 : max(_1707, 0.0));
        float _1708 = isnan(1.0) ? _4159 : (isnan(_4159) ? 1.0 : min(_4159, 1.0));
        float _1717 = ((((1.0 - _1708) * (_1703 + 2.0)) * exp2(log2(isnan(1.0) ? _4137 : (isnan(_4137) ? 1.0 : min(_4137, 1.0))) * (_1703 + 1.0))) + _1708) * _1632;
        float _1718 = _1600 * 0.5;
        float _1719 = _1610 * 0.5;
        float _1720 = _1620 * 0.5;
        float _1721 = dot(vec3(_1718, _1719, _1720), vec3(_1718, _1719, _1720));
        float _1726 = (_1721 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1721);
        float _1734 = (dot(vec3(_940, _941, _942), vec3(_1726 * _1718, _1726 * _1719, _1726 * _1720)) + 1.0) * 0.5;
        float _4170 = isnan(0.0) ? _1734 : (isnan(_1734) ? 0.0 : max(_1734, 0.0));
        float _1743 = sqrt(((_1719 * _1719) + (_1718 * _1718)) + (_1720 * _1720)) / (_1633 + 9.9999997473787516355514526367188e-06);
        float _4181 = isnan(0.0) ? _1743 : (isnan(_1743) ? 0.0 : max(_1743, 0.0));
        float _1744 = isnan(1.0) ? _4181 : (isnan(_4181) ? 1.0 : min(_4181, 1.0));
        float _1745 = _1744 * 2.0;
        float _1749 = (1.0 - _1744) / (_1744 + 1.0);
        float _4192 = isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0));
        float _1750 = isnan(1.0) ? _4192 : (isnan(_4192) ? 1.0 : min(_4192, 1.0));
        float _1759 = ((((1.0 - _1750) * (_1745 + 2.0)) * exp2(log2(isnan(1.0) ? _4170 : (isnan(_4170) ? 1.0 : min(_4170, 1.0))) * (_1745 + 1.0))) + _1750) * _1633;
        _1767 = _1600;
        _1768 = _1599;
        _1769 = _1598;
        _1770 = _1610;
        _1771 = _1609;
        _1772 = _1608;
        _1773 = _1620;
        _1774 = _1619;
        _1775 = _1618;
        _1776 = _1633;
        _1777 = _1632;
        _1778 = _1631;
        _1779 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1675 : (isnan(_1675) ? 0.0 : max(_1675, 0.0)));
        _1780 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1717 : (isnan(_1717) ? 0.0 : max(_1717, 0.0)));
        _1781 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1759 : (isnan(_1759) ? 0.0 : max(_1759, 0.0)));
    }
    else
    {
        _1767 = _1461;
        _1768 = _1461;
        _1769 = _1461;
        _1770 = _1461;
        _1771 = _1461;
        _1772 = _1461;
        _1773 = _1461;
        _1774 = _1461;
        _1775 = _1461;
        _1776 = _1461;
        _1777 = _1461;
        _1778 = _1461;
        _1779 = 0.0;
        _1780 = 0.0;
        _1781 = 0.0;
    }
    float _1791 = (cbModelParam._m0[1u].x * (_1779 - _1473)) + _1473;
    float _1792 = (cbModelParam._m0[1u].x * (_1780 - _1474)) + _1474;
    float _1793 = (cbModelParam._m0[1u].x * (_1781 - _1475)) + _1475;
    float _1814 = fma(_1793, cbSceneParam._m0[89u].z, fma(_1792, cbSceneParam._m0[89u].y, _1791 * cbSceneParam._m0[89u].x));
    float _1817 = fma(_1793, cbSceneParam._m0[90u].z, fma(_1792, cbSceneParam._m0[90u].y, _1791 * cbSceneParam._m0[90u].x));
    float _1820 = fma(_1793, cbSceneParam._m0[91u].z, fma(_1792, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1791));
    float _1835 = _1098 * 0.5;
    float _1836 = _1099 * 0.5;
    float _1837 = _1100 * 0.5;
    float _1838 = dot(vec4(_1835, _1836, _1837, 1.0), vec4(_1769, _1772, _1775, _1778));
    float _1841 = dot(vec4(_1835, _1836, _1837, 1.0), vec4(_1768, _1771, _1774, _1777));
    float _1844 = dot(vec4(_1835, _1836, _1837, 1.0), vec4(_1767, _1770, _1773, _1776));
    float _1878;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1851 = dot(vec4(_1835, _1836, _1837, 1.0), vec4(_1460, _1464, _1467, _1470));
        float _1855 = dot(vec4(_1835, _1836, _1837, 1.0), vec4(_1462, _1465, _1468, _1471));
        float _1859 = dot(vec4(_1835, _1836, _1837, 1.0), vec4(_1463, _1466, _1469, _1472));
        float _1866 = dot(vec4(cbModelParam._m0[39u]), vec4(_1835, _1836, _1837, 1.0));
        _1878 = dot(vec3(isnan(0.0) ? _1859 : (isnan(_1859) ? 0.0 : max(_1859, 0.0)), isnan(0.0) ? _1855 : (isnan(_1855) ? 0.0 : max(_1855, 0.0)), isnan(0.0) ? _1851 : (isnan(_1851) ? 0.0 : max(_1851, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1866) ? 0.0 : (isnan(0.0) ? _1866 : max(0.0, _1866))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1878 = 1.0;
    }
    float _1889;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1880 = dot(vec4(cbModelParam._m0[40u]), vec4(_1835, _1836, _1837, 1.0));
        _1889 = dot(vec3(isnan(0.0) ? _1838 : (isnan(_1838) ? 0.0 : max(_1838, 0.0)), isnan(0.0) ? _1841 : (isnan(_1841) ? 0.0 : max(_1841, 0.0)), isnan(0.0) ? _1844 : (isnan(_1844) ? 0.0 : max(_1844, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1880) ? 0.0 : (isnan(0.0) ? _1880 : max(0.0, _1880))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1889 = 1.0;
    }
    float _1893 = (_1889 * cbModelParam._m0[1u].x) + (_1878 * (1.0 - cbModelParam._m0[1u].x));
    float _1903 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _943);
    float _1904 = isnan(_1903) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1903 : min(cbModelParam._m0[25u].z, _1903));
    float _1984;
    float _1986;
    float _1988;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1951 = fma(_1159, cbModelParam._m0[13u].z, fma(_1155, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1151)) + cbModelParam._m0[13u].w;
        float _1955 = fma(_1159, cbModelParam._m0[14u].z, fma(_1155, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1151)) + cbModelParam._m0[14u].w;
        float _1959 = fma(_1159, cbModelParam._m0[15u].z, fma(_1155, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1151)) + cbModelParam._m0[15u].w;
        float _1962 = fma(_1100, cbModelParam._m0[13u].z, fma(_1099, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1098));
        float _1965 = fma(_1100, cbModelParam._m0[14u].z, fma(_1099, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1098));
        float _1968 = fma(_1100, cbModelParam._m0[15u].z, fma(_1099, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1098));
        float _1996;
        if (_1962 > 0.0)
        {
            _1996 = abs((1.0 - _1951) / _1962);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1962 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1951 + 1.0) / _1962);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1996 = frontier_phi_14_12_ladder;
        }
        float _2197;
        if (_1965 > 0.0)
        {
            _2197 = abs((1.0 - _1955) / _1965);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1965 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1955 + 1.0) / _1965);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2197 = frontier_phi_23_19_ladder;
        }
        float _2440;
        if (_1968 > 0.0)
        {
            _2440 = abs((1.0 - _1959) / _1968);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1968 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1959 + 1.0) / _1968);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2440 = frontier_phi_35_30_ladder;
        }
        float _2442 = isnan(_2197) ? _1996 : (isnan(_1996) ? _2197 : min(_1996, _2197));
        float _2443 = isnan(_2440) ? _2442 : (isnan(_2442) ? _2440 : min(_2442, _2440));
        float _2447 = (_2443 * _1962) + _1951;
        float _2448 = (_2443 * _1965) + _1955;
        float _2449 = (_2443 * _1968) + _1959;
        float _2450 = _2443 * 9.9999997473787516355514526367188e-05;
        float _2452 = (-1.0) - _2450;
        float _2454 = _2450 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2449 > _2454) || ((_2449 < _2452) || ((_2448 > _2454) || ((_2448 < _2452) || ((_2447 < _2452) || (_2447 > _2454))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2573 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2449, cbModelParam._m0[9u].z, fma(_2448, cbModelParam._m0[9u].y, _2447 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2449, cbModelParam._m0[10u].z, fma(_2448, cbModelParam._m0[10u].y, _2447 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2449, cbModelParam._m0[11u].z, fma(_2448, cbModelParam._m0[11u].y, _2447 * cbModelParam._m0[11u].x))), _1904);
            frontier_phi_13_35_ladder = _2573.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2573.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2573.x * cbModelParam._m0[1u].y;
        }
        _1984 = frontier_phi_13_35_ladder_2;
        _1986 = frontier_phi_13_35_ladder_1;
        _1988 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1972 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1098, _1099, _1100), _1904);
        _1984 = _1972.x * cbModelParam._m0[1u].y;
        _1986 = _1972.y * cbModelParam._m0[1u].y;
        _1988 = _1972.z * cbModelParam._m0[1u].y;
    }
    float _1992 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _943);
    float _1993 = isnan(_1992) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1992 : min(cbModelParam._m0[25u].w, _1992));
    float _2083;
    float _2085;
    float _2087;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2047 = fma(_1159, cbModelParam._m0[21u].z, fma(_1155, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1151)) + cbModelParam._m0[21u].w;
        float _2051 = fma(_1159, cbModelParam._m0[22u].z, fma(_1155, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1151)) + cbModelParam._m0[22u].w;
        float _2055 = fma(_1159, cbModelParam._m0[23u].z, fma(_1155, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1151)) + cbModelParam._m0[23u].w;
        float _2058 = fma(_1100, cbModelParam._m0[21u].z, fma(_1099, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1098));
        float _2061 = fma(_1100, cbModelParam._m0[22u].z, fma(_1099, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1098));
        float _2064 = fma(_1100, cbModelParam._m0[23u].z, fma(_1099, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1098));
        float _2202;
        if (_2058 > 0.0)
        {
            _2202 = abs((1.0 - _2047) / _2058);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2058 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2047 + 1.0) / _2058);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2202 = frontier_phi_25_21_ladder;
        }
        float _2467;
        if (_2061 > 0.0)
        {
            _2467 = abs((1.0 - _2051) / _2061);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2061 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2051 + 1.0) / _2061);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2467 = frontier_phi_37_32_ladder;
        }
        float _2672;
        if (_2064 > 0.0)
        {
            _2672 = abs((1.0 - _2055) / _2064);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2064 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2055 + 1.0) / _2064);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2672 = frontier_phi_46_43_ladder;
        }
        float _2674 = isnan(_2467) ? _2202 : (isnan(_2202) ? _2467 : min(_2202, _2467));
        float _2675 = isnan(_2672) ? _2674 : (isnan(_2674) ? _2672 : min(_2674, _2672));
        float _2679 = (_2675 * _2058) + _2047;
        float _2680 = (_2675 * _2061) + _2051;
        float _2681 = (_2675 * _2064) + _2055;
        float _2682 = _2675 * 9.9999997473787516355514526367188e-05;
        float _2683 = (-1.0) - _2682;
        float _2685 = _2682 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2681 > _2685) || ((_2681 < _2683) || ((_2680 > _2685) || ((_2680 < _2683) || ((_2679 < _2683) || (_2679 > _2685))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2880 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2681, cbModelParam._m0[17u].z, fma(_2680, cbModelParam._m0[17u].y, _2679 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2681, cbModelParam._m0[18u].z, fma(_2680, cbModelParam._m0[18u].y, _2679 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2681, cbModelParam._m0[19u].z, fma(_2680, cbModelParam._m0[19u].y, _2679 * cbModelParam._m0[19u].x))), _1993);
            frontier_phi_22_46_ladder = _2880.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2880.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2880.x * cbModelParam._m0[1u].z;
        }
        _2083 = frontier_phi_22_46_ladder_2;
        _2085 = frontier_phi_22_46_ladder_1;
        _2087 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2067 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1098, _1099, _1100), _1993);
        _2083 = _2067.x * cbModelParam._m0[1u].z;
        _2085 = _2067.y * cbModelParam._m0[1u].z;
        _2087 = _2067.z * cbModelParam._m0[1u].z;
    }
    float _2099 = ((((1.0 - _1119) * ((_1106 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1119 * _1106)) * _1090;
    float _2100 = _2099 * ((cbModelParam._m0[1u].w * (_2083 - _1984)) + _1984);
    float _2101 = _2099 * ((cbModelParam._m0[1u].w * (_2085 - _1986)) + _1986);
    float _2102 = _2099 * ((cbModelParam._m0[1u].w * (_2087 - _1988)) + _1988);
    float _2105 = fma(_2102, cbSceneParam._m0[89u].z, fma(_2101, cbSceneParam._m0[89u].y, _2100 * cbSceneParam._m0[89u].x));
    float _2108 = fma(_2102, cbSceneParam._m0[90u].z, fma(_2101, cbSceneParam._m0[90u].y, _2100 * cbSceneParam._m0[90u].x));
    float _2111 = fma(_2102, cbSceneParam._m0[91u].z, fma(_2101, cbSceneParam._m0[91u].y, _2100 * cbSceneParam._m0[91u].x));
    uvec4 _2121 = floatBitsToUint(cbInstanceData._m0[_255 + 5u]);
    uint _2123 = _2121.x * 14u;
    uint _2124 = _2123 + 13u;
    float _2131 = _1090 + (-1.0);
    float _2136 = (cbLight._m0[_2124].x * _2131) + 1.0;
    float _2137 = (cbLight._m0[_2124].y * _2131) + 1.0;
    float _2138 = (cbLight._m0[_2124].z * _2131) + 1.0;
    float _2139 = (cbLight._m0[_2124].w * _2131) + 1.0;
    uint _2140 = _2123 + 5u;
    float _2146 = isnan(1.0) ? _2137 : (isnan(_2137) ? 1.0 : min(_2137, 1.0));
    uint _2150 = _2123 + 4u;
    float _2156 = isnan(1.0) ? _2136 : (isnan(_2136) ? 1.0 : min(_2136, 1.0));
    uint _2160 = _2123 | 1u;
    float _2171 = dot(vec3(cbLight._m0[_2123].xyz), vec3(_940, _941, _942));
    float _2174 = dot(vec3(cbLight._m0[_2160].xyz), vec3(_940, _941, _942));
    float _4328 = isnan(0.0) ? _2171 : (isnan(_2171) ? 0.0 : max(_2171, 0.0));
    float _4339 = isnan(0.0) ? _2174 : (isnan(_2174) ? 0.0 : max(_2174, 0.0));
    float _2179 = (isnan(1.0) ? _4328 : (isnan(_4328) ? 1.0 : min(_4328, 1.0))) * 0.3183098733425140380859375;
    float _2181 = (isnan(1.0) ? _4339 : (isnan(_4339) ? 1.0 : min(_4339, 1.0))) * 0.3183098733425140380859375;
    float _2188 = ((cbLight._m0[_2140].x * _2146) * _2181) + ((cbLight._m0[_2150].x * _2156) * _2179);
    float _2189 = ((_2146 * cbLight._m0[_2140].y) * _2181) + ((_2156 * cbLight._m0[_2150].y) * _2179);
    float _2190 = ((_2146 * cbLight._m0[_2140].z) * _2181) + ((_2156 * cbLight._m0[_2150].z) * _2179);
    uvec4 _2194 = floatBitsToUint(cbLight._m0[_2123 + 12u]);
    bool _2196 = _2194.x == 0u;
    float _2207;
    float _2209;
    float _2211;
    if (_2196)
    {
        _2207 = _2188;
        _2209 = _2189;
        _2211 = _2190;
    }
    else
    {
        uint _2215 = _2123 + 6u;
        float _2231 = (dot(vec3(cbLight._m0[_2123 + 2u].xyz), vec3(_940, _941, _942)) * 0.5) + 0.5;
        float _2232 = _2231 * _2231;
        float _4350 = isnan(0.0) ? _2232 : (isnan(_2232) ? 0.0 : max(_2232, 0.0));
        float _2233 = isnan(1.0) ? _4350 : (isnan(_4350) ? 1.0 : min(_4350, 1.0));
        float _2234 = isnan(1.0) ? _2138 : (isnan(_2138) ? 1.0 : min(_2138, 1.0));
        _2207 = (((cbLight._m0[_2215].x * 0.3183098733425140380859375) * _2233) * _2234) + _2188;
        _2209 = (((cbLight._m0[_2215].y * 0.3183098733425140380859375) * _2233) * _2234) + _2189;
        _2211 = (((cbLight._m0[_2215].z * 0.3183098733425140380859375) * _2233) * _2234) + _2190;
    }
    bool _2214 = _2194.y == 0u;
    float _2252;
    float _2254;
    float _2256;
    if (_2214)
    {
        _2252 = _2207;
        _2254 = _2209;
        _2256 = _2211;
    }
    else
    {
        uint _2411 = _2123 + 7u;
        float _2427 = (dot(vec3(cbLight._m0[_2123 + 3u].xyz), vec3(_940, _941, _942)) * 0.5) + 0.5;
        float _2428 = _2427 * _2427;
        float _4366 = isnan(0.0) ? _2428 : (isnan(_2428) ? 0.0 : max(_2428, 0.0));
        float _2429 = isnan(1.0) ? _4366 : (isnan(_4366) ? 1.0 : min(_4366, 1.0));
        float _2430 = isnan(1.0) ? _2139 : (isnan(_2139) ? 1.0 : min(_2139, 1.0));
        _2252 = (((cbLight._m0[_2411].x * 0.3183098733425140380859375) * _2429) * _2430) + _2207;
        _2254 = (((cbLight._m0[_2411].y * 0.3183098733425140380859375) * _2429) * _2430) + _2209;
        _2256 = (((cbLight._m0[_2411].z * 0.3183098733425140380859375) * _2429) * _2430) + _2211;
    }
    uint _2259 = _2123 + 8u;
    float _2272 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2123].w)) * _943) * 0.949999988079071044921875);
    float _2273 = _2272 * _2272;
    float _2274 = cbLight._m0[_2123].x + _1019;
    float _2275 = cbLight._m0[_2123].y + _1020;
    float _2276 = cbLight._m0[_2123].z + _1021;
    float _2280 = inversesqrt(dot(vec3(_2274, _2275, _2276), vec3(_2274, _2275, _2276)));
    float _2281 = _2280 * _2274;
    float _2282 = _2280 * _2275;
    float _2283 = _2280 * _2276;
    float _2284 = dot(vec3(_940, _941, _942), vec3(cbLight._m0[_2123].xyz));
    float _4382 = isnan(0.0) ? _2284 : (isnan(_2284) ? 0.0 : max(_2284, 0.0));
    float _2287 = isnan(1.0) ? _4382 : (isnan(_4382) ? 1.0 : min(_4382, 1.0));
    float _4393 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
    float _2288 = isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0));
    float _2289 = dot(vec3(_940, _941, _942), vec3(_2281, _2282, _2283));
    float _4404 = isnan(0.0) ? _2289 : (isnan(_2289) ? 0.0 : max(_2289, 0.0));
    float _2292 = isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0));
    float _2293 = dot(vec3(cbLight._m0[_2123].xyz), vec3(_2281, _2282, _2283));
    float _4415 = isnan(0.0) ? _2293 : (isnan(_2293) ? 0.0 : max(_2293, 0.0));
    float _2297 = _2273 * _2273;
    float _2301 = ((_2292 * _2292) * (_2297 + (-1.0))) + 1.0;
    float _2312 = (exp2(log2(1.0 - (isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2313 = 1.0 - _2273;
    float _2324 = (0.5 / (((_2288 * ((_2287 * _2313) + _2273)) + 9.9999999392252902907785028219223e-09) + (((_2288 * _2313) + _2273) * _2287))) * _2287;
    float _4426 = isnan(0.0) ? _2324 : (isnan(_2324) ? 0.0 : max(_2324, 0.0));
    float _2326 = (isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0))) * (_2297 / ((_2301 * _2301) * 3.141590118408203125));
    uint _2337 = _2123 + 9u;
    float _2348 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2160].w)) * _943) * 0.949999988079071044921875);
    float _2349 = _2348 * _2348;
    float _2350 = cbLight._m0[_2160].x + _1019;
    float _2351 = cbLight._m0[_2160].y + _1020;
    float _2352 = cbLight._m0[_2160].z + _1021;
    float _2356 = inversesqrt(dot(vec3(_2350, _2351, _2352), vec3(_2350, _2351, _2352)));
    float _2357 = _2356 * _2350;
    float _2358 = _2356 * _2351;
    float _2359 = _2356 * _2352;
    float _2360 = dot(vec3(_940, _941, _942), vec3(cbLight._m0[_2160].xyz));
    float _4437 = isnan(0.0) ? _2360 : (isnan(_2360) ? 0.0 : max(_2360, 0.0));
    float _2363 = isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0));
    float _2364 = dot(vec3(_940, _941, _942), vec3(_2357, _2358, _2359));
    float _4448 = isnan(0.0) ? _2364 : (isnan(_2364) ? 0.0 : max(_2364, 0.0));
    float _2367 = isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0));
    float _2368 = dot(vec3(cbLight._m0[_2160].xyz), vec3(_2357, _2358, _2359));
    float _4459 = isnan(0.0) ? _2368 : (isnan(_2368) ? 0.0 : max(_2368, 0.0));
    float _2372 = _2349 * _2349;
    float _2376 = ((_2367 * _2367) * (_2372 + (-1.0))) + 1.0;
    float _2385 = (exp2(log2(1.0 - (isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2386 = 1.0 - _2349;
    float _2396 = (0.5 / (((_2288 * ((_2363 * _2386) + _2349)) + 9.9999999392252902907785028219223e-09) + (((_2288 * _2386) + _2349) * _2363))) * _2363;
    float _4470 = isnan(0.0) ? _2396 : (isnan(_2396) ? 0.0 : max(_2396, 0.0));
    float _2398 = (isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0))) * (_2372 / ((_2376 * _2376) * 3.141590118408203125));
    float _2408 = (((_2385 * cbLight._m0[_2337].x) * _2398) * _2146) + (((_2312 * cbLight._m0[_2259].x) * _2326) * _2156);
    float _2409 = (((_2385 * cbLight._m0[_2337].y) * _2398) * _2146) + (((_2312 * cbLight._m0[_2259].y) * _2326) * _2156);
    float _2410 = (((_2385 * cbLight._m0[_2337].z) * _2398) * _2146) + (((_2312 * cbLight._m0[_2259].z) * _2326) * _2156);
    float _2472;
    float _2474;
    float _2476;
    if (_2196)
    {
        _2472 = _2408;
        _2474 = _2409;
        _2476 = _2410;
    }
    else
    {
        uint _2478 = _2123 + 2u;
        uint _2482 = _2123 + 10u;
        float _2496 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2478].w)) * _943) * 0.949999988079071044921875);
        float _2497 = _2496 * _2496;
        float _2498 = cbLight._m0[_2478].x + _1019;
        float _2499 = cbLight._m0[_2478].y + _1020;
        float _2500 = cbLight._m0[_2478].z + _1021;
        float _2504 = inversesqrt(dot(vec3(_2498, _2499, _2500), vec3(_2498, _2499, _2500)));
        float _2505 = _2504 * _2498;
        float _2506 = _2504 * _2499;
        float _2507 = _2504 * _2500;
        float _2508 = dot(vec3(_940, _941, _942), vec3(cbLight._m0[_2478].xyz));
        float _4481 = isnan(0.0) ? _2508 : (isnan(_2508) ? 0.0 : max(_2508, 0.0));
        float _2511 = isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0));
        float _2512 = dot(vec3(_940, _941, _942), vec3(_2505, _2506, _2507));
        float _4492 = isnan(0.0) ? _2512 : (isnan(_2512) ? 0.0 : max(_2512, 0.0));
        float _2515 = isnan(1.0) ? _4492 : (isnan(_4492) ? 1.0 : min(_4492, 1.0));
        float _2516 = dot(vec3(cbLight._m0[_2478].xyz), vec3(_2505, _2506, _2507));
        float _4503 = isnan(0.0) ? _2516 : (isnan(_2516) ? 0.0 : max(_2516, 0.0));
        float _2520 = _2497 * _2497;
        float _2524 = ((_2515 * _2515) * (_2520 + (-1.0))) + 1.0;
        float _2533 = (exp2(log2(1.0 - (isnan(1.0) ? _4503 : (isnan(_4503) ? 1.0 : min(_4503, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2534 = 1.0 - _2497;
        float _2544 = (0.5 / (((_2288 * ((_2511 * _2534) + _2497)) + 9.9999999392252902907785028219223e-09) + (((_2288 * _2534) + _2497) * _2511))) * _2511;
        float _4514 = isnan(0.0) ? _2544 : (isnan(_2544) ? 0.0 : max(_2544, 0.0));
        float _2546 = (isnan(1.0) ? _4514 : (isnan(_4514) ? 1.0 : min(_4514, 1.0))) * (_2520 / ((_2524 * _2524) * 3.141590118408203125));
        float _2547 = isnan(1.0) ? _2138 : (isnan(_2138) ? 1.0 : min(_2138, 1.0));
        _2472 = (((_2533 * cbLight._m0[_2482].x) * _2546) * _2547) + _2408;
        _2474 = (((_2533 * cbLight._m0[_2482].y) * _2546) * _2547) + _2409;
        _2476 = (((_2533 * cbLight._m0[_2482].z) * _2546) * _2547) + _2410;
    }
    float _2582;
    float _2584;
    float _2586;
    if (_2214)
    {
        _2582 = _2472;
        _2584 = _2474;
        _2586 = _2476;
    }
    else
    {
        uint _2593 = _2123 + 3u;
        uint _2597 = _2123 + 11u;
        float _2611 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2593].w)) * _943) * 0.949999988079071044921875);
        float _2612 = _2611 * _2611;
        float _2613 = cbLight._m0[_2593].x + _1019;
        float _2614 = cbLight._m0[_2593].y + _1020;
        float _2615 = cbLight._m0[_2593].z + _1021;
        float _2619 = inversesqrt(dot(vec3(_2613, _2614, _2615), vec3(_2613, _2614, _2615)));
        float _2620 = _2619 * _2613;
        float _2621 = _2619 * _2614;
        float _2622 = _2619 * _2615;
        float _2623 = dot(vec3(_940, _941, _942), vec3(cbLight._m0[_2593].xyz));
        float _4530 = isnan(0.0) ? _2623 : (isnan(_2623) ? 0.0 : max(_2623, 0.0));
        float _2626 = isnan(1.0) ? _4530 : (isnan(_4530) ? 1.0 : min(_4530, 1.0));
        float _2627 = dot(vec3(_940, _941, _942), vec3(_2620, _2621, _2622));
        float _4541 = isnan(0.0) ? _2627 : (isnan(_2627) ? 0.0 : max(_2627, 0.0));
        float _2630 = isnan(1.0) ? _4541 : (isnan(_4541) ? 1.0 : min(_4541, 1.0));
        float _2631 = dot(vec3(cbLight._m0[_2593].xyz), vec3(_2620, _2621, _2622));
        float _4552 = isnan(0.0) ? _2631 : (isnan(_2631) ? 0.0 : max(_2631, 0.0));
        float _2635 = _2612 * _2612;
        float _2639 = ((_2630 * _2630) * (_2635 + (-1.0))) + 1.0;
        float _2648 = (exp2(log2(1.0 - (isnan(1.0) ? _4552 : (isnan(_4552) ? 1.0 : min(_4552, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2649 = 1.0 - _2612;
        float _2659 = (0.5 / (((_2288 * ((_2626 * _2649) + _2612)) + 9.9999999392252902907785028219223e-09) + (((_2288 * _2649) + _2612) * _2626))) * _2626;
        float _4563 = isnan(0.0) ? _2659 : (isnan(_2659) ? 0.0 : max(_2659, 0.0));
        float _2661 = (isnan(1.0) ? _4563 : (isnan(_4563) ? 1.0 : min(_4563, 1.0))) * (_2635 / ((_2639 * _2639) * 3.141590118408203125));
        float _2662 = isnan(1.0) ? _2139 : (isnan(_2139) ? 1.0 : min(_2139, 1.0));
        _2582 = (((_2648 * cbLight._m0[_2597].x) * _2661) * _2662) + _2472;
        _2584 = (((_2648 * cbLight._m0[_2597].y) * _2661) * _2662) + _2474;
        _2586 = (((_2648 * cbLight._m0[_2597].z) * _2661) * _2662) + _2476;
    }
    float _2797;
    float _2799;
    float _2801;
    float _2803;
    float _2805;
    float _2807;
    if (_2121.y == 0u)
    {
        float _2737 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2738 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2737;
        float _2739 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2737;
        float _2740 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2737;
        uvec4 _2752 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2753 = _2752.x;
        uint _2764 = uint((float(_2752.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1028) / _2753))) + floor(float(uint(cbSceneParam._m0[85u].x * _1027) / _2753)));
        float _2774 = (log2(_2740 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2775 = isnan(0.0) ? _2774 : (isnan(_2774) ? 0.0 : max(_2774, 0.0));
        uint _2778 = uint(isnan(14.0) ? _2775 : (isnan(_2775) ? 14.0 : min(_2775, 14.0)));
        uvec4 _2783 = texelFetch(g_lightClusterGridBuffer, int(((_2778 << 2u) + (_2764 << 6u)) >> 2u));
        uint _2784 = _2783.x;
        uint _2785 = _2752.z;
        float _2885;
        float _2887;
        float _2889;
        float _2891;
        float _2893;
        float _2895;
        if (((((1u << ((_2785 >> 4u) & 15u)) + 4294967295u) & _2784) == 0u) || ((_2785 & 240u) == 0u))
        {
            _2885 = 0.0;
            _2887 = 0.0;
            _2889 = 0.0;
            _2891 = 0.0;
            _2893 = 0.0;
            _2895 = 0.0;
        }
        else
        {
            float _2886;
            float _2888;
            float _2890;
            float _2892;
            float _2894;
            float _2896;
            float _3029 = 0.0;
            float _3030 = 0.0;
            float _3031 = 0.0;
            float _3032 = 0.0;
            float _3033 = 0.0;
            float _3034 = 0.0;
            uint _3035 = 0u;
            uint _3044;
            bool _3045;
            for (;;)
            {
                _3044 = texelFetch(g_lightClassification, int((((_2778 << 5u) + (_2764 << 9u)) + (_3035 << 2u)) >> 2u)).x;
                _3045 = _3044 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3045)
                {
                    frontier_phi_61_pred = _3029;
                    frontier_phi_61_pred_1 = _3034;
                    frontier_phi_61_pred_2 = _3033;
                    frontier_phi_61_pred_3 = _3032;
                    frontier_phi_61_pred_4 = _3031;
                    frontier_phi_61_pred_5 = _3030;
                }
                else
                {
                    float _3153;
                    float _3154;
                    float _3155;
                    float _3156;
                    float _3157;
                    float _3158;
                    uint _3159;
                    _3153 = _3029;
                    _3154 = _3030;
                    _3155 = _3031;
                    _3156 = _3032;
                    _3157 = _3033;
                    _3158 = _3034;
                    _3159 = _3044;
                    float _3085;
                    float _3086;
                    float _3087;
                    float _3088;
                    float _3089;
                    float _3090;
                    for (;;)
                    {
                        uint _3163 = uint(findLSB(_3159)) + (_3035 << 5u);
                        uint _3160 = (_3159 + 4294967295u) & _3159;
                        uint _3165 = _3163 * 48u;
                        vec4 _3179 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3165)).x, texelFetch(g_PointLightRenderingBuffer, int(_3165 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3165 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3165 + 3u)).x));
                        uint _3185 = (_3163 * 48u) + 4u;
                        vec4 _3198 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3185)).x, texelFetch(g_PointLightRenderingBuffer, int(_3185 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3185 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3185 + 3u)).x));
                        uint _3204 = (_3163 * 48u) + 8u;
                        vec3 _3215 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3204)).x, texelFetch(g_PointLightRenderingBuffer, int(_3204 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3204 + 2u)).x));
                        float _3219 = _3179.x - _2738;
                        float _3220 = _3179.y - _2739;
                        float _3221 = _3179.z - _2740;
                        float _3222 = dot(vec3(_3219, _3220, _3221), vec3(_3219, _3220, _3221));
                        float _3225 = inversesqrt(_3222);
                        float _3226 = _3225 * _3219;
                        float _3227 = _3225 * _3220;
                        float _3228 = _3225 * _3221;
                        float _3229 = dot(vec3(_1046, _1049, _1052), vec3(_3226, _3227, _3228));
                        float _3234 = 1.0 - (_3222 * _3179.w);
                        float _4589 = isnan(0.0) ? _3234 : (isnan(_3234) ? 0.0 : max(_3234, 0.0));
                        float _3235 = isnan(1.0) ? _4589 : (isnan(_4589) ? 1.0 : min(_4589, 1.0));
                        float _3236 = sqrt(_3222) * _3198.w;
                        float _3239 = 1.39999997615814208984375 / (_3236 + 1.39999997615814208984375);
                        float _3240 = _3239 * _3239;
                        float _3243 = ((1.0 - _3240) * _3229) + _3240;
                        float _3246 = _3236 * _3236;
                        float _3250 = ((isnan(0.0) ? _3243 : (isnan(_3243) ? 0.0 : max(_3243, 0.0))) * _3235) / ((_3246 * 0.699999988079071044921875) + 1.0);
                        float _3254 = (-0.0) - _2738;
                        float _3255 = (-0.0) - _2739;
                        float _3256 = (-0.0) - _2740;
                        float _3260 = inversesqrt(dot(vec3(_3254, _3255, _3256), vec3(_3254, _3255, _3256)));
                        float _3261 = _3260 * _3254;
                        float _3262 = _3260 * _3255;
                        float _3263 = _3260 * _3256;
                        float _3271 = exp2(log2(1.0 / ((_3246 * 3.5) + 5.0)) * 0.25);
                        float _3272 = 1.0 - _1106;
                        float _3279 = sqrt(1.0 - ((1.0 - (_3272 * _3272)) * (1.0 - (_3271 * _3271))));
                        float _3280 = _3279 * _3279;
                        float _3281 = _3280 * _3280;
                        float _3282 = _3261 + _3226;
                        float _3283 = _3262 + _3227;
                        float _3284 = _3263 + _3228;
                        float _3288 = inversesqrt(dot(vec3(_3282, _3283, _3284), vec3(_3282, _3283, _3284)));
                        float _3292 = dot(vec3(_1046, _1049, _1052), vec3(_3261, _3262, _3263));
                        float _4605 = isnan(0.0) ? _3292 : (isnan(_3292) ? 0.0 : max(_3292, 0.0));
                        float _3295 = isnan(1.0) ? _4605 : (isnan(_4605) ? 1.0 : min(_4605, 1.0));
                        float _3296 = dot(vec3(_1046, _1049, _1052), vec3(_3288 * _3282, _3288 * _3283, _3288 * _3284));
                        float _4616 = isnan(0.0) ? _3296 : (isnan(_3296) ? 0.0 : max(_3296, 0.0));
                        float _3299 = isnan(1.0) ? _4616 : (isnan(_4616) ? 1.0 : min(_4616, 1.0));
                        float _3303 = ((_3299 * _3299) * (_3281 + (-1.0))) + 1.0;
                        float _3304 = _3239 * _3280;
                        float _3305 = _3304 * _3304;
                        float _3308 = ((1.0 - _3305) * _3229) + _3305;
                        float _4627 = isnan(0.0) ? _3308 : (isnan(_3308) ? 0.0 : max(_3308, 0.0));
                        float _3309 = isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0));
                        float _3310 = 1.0 - _3280;
                        float _3320 = (0.5 / (((_3309 * ((_3295 * _3310) + _3280)) + 9.9999999392252902907785028219223e-09) + (((_3309 * _3310) + _3280) * _3295))) * _3309;
                        float _4638 = isnan(0.0) ? _3320 : (isnan(_3320) ? 0.0 : max(_3320, 0.0));
                        float _3331 = (((_3281 * 3.1415927410125732421875) * (isnan(1.0) ? _4638 : (isnan(_4638) ? 1.0 : min(_4638, 1.0)))) / ((_3303 * _3303) * ((_3246 * 2.1991131305694580078125) + 3.141590118408203125))) * _3235;
                        _3088 = (_3250 * _3198.x) + _3156;
                        _3089 = (_3250 * _3198.y) + _3157;
                        _3090 = (_3250 * _3198.z) + _3158;
                        _3085 = (_3331 * _3215.x) + _3153;
                        _3086 = (_3331 * _3215.y) + _3154;
                        _3087 = (_3331 * _3215.z) + _3155;
                        if (_3160 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3153 = _3085;
                            _3154 = _3086;
                            _3155 = _3087;
                            _3156 = _3088;
                            _3157 = _3089;
                            _3158 = _3090;
                            _3159 = _3160;
                        }
                    }
                    frontier_phi_61_pred = _3085;
                    frontier_phi_61_pred_1 = _3090;
                    frontier_phi_61_pred_2 = _3089;
                    frontier_phi_61_pred_3 = _3088;
                    frontier_phi_61_pred_4 = _3087;
                    frontier_phi_61_pred_5 = _3086;
                }
                _2886 = frontier_phi_61_pred;
                _2896 = frontier_phi_61_pred_1;
                _2894 = frontier_phi_61_pred_2;
                _2892 = frontier_phi_61_pred_3;
                _2890 = frontier_phi_61_pred_4;
                _2888 = frontier_phi_61_pred_5;
                uint _3036 = _3035 + 1u;
                if (_3036 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3029 = _2886;
                    _3030 = _2888;
                    _3031 = _2890;
                    _3032 = _2892;
                    _3033 = _2894;
                    _3034 = _2896;
                    _3035 = _3036;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2885 = _2886;
            _2887 = _2888;
            _2889 = _2890;
            _2891 = _2892;
            _2893 = _2894;
            _2895 = _2896;
        }
        uvec4 _2899 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2900 = _2899.z;
        uint _2902 = (_2900 >> 8u) & 15u;
        float _2997;
        float _2999;
        float _3001;
        float _3003;
        float _3005;
        float _3007;
        if (((4294967295u << _2902) & _2784) == 0u)
        {
            _2997 = _2885;
            _2999 = _2887;
            _3001 = _2889;
            _3003 = _2891;
            _3005 = _2893;
            _3007 = _2895;
        }
        else
        {
            float _3022 = inversesqrt(dot(vec3(_2738, _2739, _2740), vec3(_2738, _2739, _2740)));
            float _3023 = _3022 * _2738;
            float _3024 = _3022 * _2739;
            float _3025 = _3022 * _2740;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2902 < ((_2900 >> 12u) & 15u))
            {
                float _2998;
                float _3000;
                float _3002;
                float _3004;
                float _3006;
                float _3008;
                float _3136 = _2885;
                float _3137 = _2887;
                float _3138 = _2889;
                float _3139 = _2891;
                float _3140 = _2893;
                float _3141 = _2895;
                uint _3142 = _2902;
                uint _3151;
                bool _3152;
                for (;;)
                {
                    _3151 = texelFetch(g_lightClassification, int((((_2778 << 5u) + (_2764 << 9u)) + (_3142 << 2u)) >> 2u)).x;
                    _3152 = _3151 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3152)
                    {
                        frontier_phi_67_pred = _3139;
                        frontier_phi_67_pred_1 = _3140;
                        frontier_phi_67_pred_2 = _3141;
                        frontier_phi_67_pred_3 = _3138;
                        frontier_phi_67_pred_4 = _3137;
                        frontier_phi_67_pred_5 = _3136;
                    }
                    else
                    {
                        float _3336;
                        float _3337;
                        float _3338;
                        float _3339;
                        float _3340;
                        float _3341;
                        float _3629;
                        float _3630;
                        float _3631;
                        float _3632;
                        float _3633;
                        float _3634;
                        float _3349 = _3136;
                        float _3350 = _3137;
                        float _3351 = _3138;
                        float _3352 = _3139;
                        float _3353 = _3140;
                        float _3354 = _3141;
                        uint _3355 = _3151;
                        uint _3356;
                        vec4 _3381;
                        float _3382;
                        vec4 _3397;
                        vec3 _3409;
                        vec4 _3424;
                        vec4 _3439;
                        float _3485;
                        bool _3486;
                        for (;;)
                        {
                            uint _3366 = ((_3142 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3355));
                            _3356 = (_3355 + 4294967295u) & _3355;
                            uint _3368 = _3366 * 40u;
                            _3381 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3368)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3368 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3368 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3368 + 3u)).x));
                            _3382 = _3381.w;
                            uint _3384 = (_3366 * 40u) + 4u;
                            _3397 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3384)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3384 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3384 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3384 + 3u)).x));
                            uint _3399 = (_3366 * 40u) + 8u;
                            _3409 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3399)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3399 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3399 + 2u)).x));
                            uint _3411 = (_3366 * 40u) + 16u;
                            _3424 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3411)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3411 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3411 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3411 + 3u)).x));
                            uint _3426 = (_3366 * 40u) + 20u;
                            _3439 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3426)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3426 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3426 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3426 + 3u)).x));
                            uint _3441 = (_3366 * 40u) + 24u;
                            vec4 _3454 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3441)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3441 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3441 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3441 + 3u)).x));
                            uint _3460 = (_3366 * 40u) + 28u;
                            vec4 _3473 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3460)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3460 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3460 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3460 + 3u)).x));
                            _3485 = fma(_2740, _3473.z, fma(_2739, _3473.y, _3473.x * _2738)) + _3473.w;
                            _3486 = !((fma(_2740, _3454.z, fma(_2739, _3454.y, _3454.x * _2738)) + _3454.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3486)
                            {
                                float _3513 = _3381.x - _2738;
                                float _3514 = _3381.y - _2739;
                                float _3515 = _3381.z - _2740;
                                float _3516 = dot(vec3(_3513, _3514, _3515), vec3(_3513, _3514, _3515));
                                float _3519 = inversesqrt(_3516);
                                float _3520 = _3519 * _3513;
                                float _3521 = _3519 * _3514;
                                float _3522 = _3519 * _3515;
                                float _3526 = 1.0 - (_3516 / (_3382 * _3382));
                                float _4649 = isnan(0.0) ? _3526 : (isnan(_3526) ? 0.0 : max(_3526, 0.0));
                                float _3527 = isnan(1.0) ? _4649 : (isnan(_4649) ? 1.0 : min(_4649, 1.0));
                                float _3531 = sqrt(_3516) * _3397.w;
                                float _3533 = 1.39999997615814208984375 / (_3531 + 1.39999997615814208984375);
                                float _3534 = _3533 * _3533;
                                float _3537 = ((1.0 - _3534) * dot(vec3(_3520, _3521, _3522), vec3(_1046, _1049, _1052))) + _3534;
                                float _3540 = _3531 * _3531;
                                float _3544 = (fma(_2740, _3424.z, fma(_2739, _3424.y, _3424.x * _2738)) + _3424.w) / _3485;
                                float _3545 = (fma(_2740, _3439.z, fma(_2739, _3439.y, _3439.x * _2738)) + _3439.w) / _3485;
                                float _3549 = 1.0 - dot(vec2(_3544, _3545), vec2(_3544, _3545));
                                float _4665 = isnan(0.0) ? _3549 : (isnan(_3549) ? 0.0 : max(_3549, 0.0));
                                float _3550 = isnan(1.0) ? _4665 : (isnan(_4665) ? 1.0 : min(_4665, 1.0));
                                float _3551 = _3550 * (((isnan(0.0) ? _3537 : (isnan(_3537) ? 0.0 : max(_3537, 0.0))) * _3527) / ((_3540 * 0.699999988079071044921875) + 1.0));
                                float _3563 = exp2(log2(1.0 / ((_3540 * 3.5) + 5.0)) * 0.25);
                                float _3564 = 1.0 - _1106;
                                float _3571 = sqrt(1.0 - ((1.0 - (_3564 * _3564)) * (1.0 - (_3563 * _3563))));
                                float _3572 = _3571 * _3571;
                                float _3573 = _3572 * _3572;
                                float _3574 = _3520 - _3023;
                                float _3575 = _3521 - _3024;
                                float _3576 = _3522 - _3025;
                                float _3580 = inversesqrt(dot(vec3(_3574, _3575, _3576), vec3(_3574, _3575, _3576)));
                                float _3584 = dot(vec3(_1046, _1049, _1052), vec3((-0.0) - _3023, (-0.0) - _3024, (-0.0) - _3025));
                                float _4676 = isnan(0.0) ? _3584 : (isnan(_3584) ? 0.0 : max(_3584, 0.0));
                                float _3587 = isnan(1.0) ? _4676 : (isnan(_4676) ? 1.0 : min(_4676, 1.0));
                                float _3588 = dot(vec3(_1046, _1049, _1052), vec3(_3580 * _3574, _3580 * _3575, _3580 * _3576));
                                float _4687 = isnan(0.0) ? _3588 : (isnan(_3588) ? 0.0 : max(_3588, 0.0));
                                float _3591 = isnan(1.0) ? _4687 : (isnan(_4687) ? 1.0 : min(_4687, 1.0));
                                float _3595 = ((_3591 * _3591) * (_3573 + (-1.0))) + 1.0;
                                float _3596 = _3533 * _3572;
                                float _3597 = _3596 * _3596;
                                float _3603 = ((1.0 - _3597) * dot(vec3(_1046, _1049, _1052), vec3(_3520, _3521, _3522))) + _3597;
                                float _4698 = isnan(0.0) ? _3603 : (isnan(_3603) ? 0.0 : max(_3603, 0.0));
                                float _3604 = isnan(1.0) ? _4698 : (isnan(_4698) ? 1.0 : min(_4698, 1.0));
                                float _3605 = 1.0 - _3572;
                                float _3615 = (0.5 / (((_3604 * ((_3587 * _3605) + _3572)) + 9.9999999392252902907785028219223e-09) + (((_3604 * _3605) + _3572) * _3587))) * _3604;
                                float _4709 = isnan(0.0) ? _3615 : (isnan(_3615) ? 0.0 : max(_3615, 0.0));
                                float _3625 = (_3550 * _3527) * (((_3573 * 3.1415927410125732421875) * (isnan(1.0) ? _4709 : (isnan(_4709) ? 1.0 : min(_4709, 1.0)))) / ((_3595 * _3595) * ((_3540 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3625 * _3409.x;
                                frontier_phi_73_pred_1 = _3625 * _3409.y;
                                frontier_phi_73_pred_2 = _3551 * _3397.z;
                                frontier_phi_73_pred_3 = _3551 * _3397.y;
                                frontier_phi_73_pred_4 = _3551 * _3397.x;
                                frontier_phi_73_pred_5 = _3625 * _3409.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3629 = frontier_phi_73_pred;
                            _3630 = frontier_phi_73_pred_1;
                            _3634 = frontier_phi_73_pred_2;
                            _3633 = frontier_phi_73_pred_3;
                            _3632 = frontier_phi_73_pred_4;
                            _3631 = frontier_phi_73_pred_5;
                            _3339 = _3632 + _3352;
                            _3340 = _3633 + _3353;
                            _3341 = _3634 + _3354;
                            _3336 = _3629 + _3349;
                            _3337 = _3630 + _3350;
                            _3338 = _3631 + _3351;
                            if (_3356 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3349 = _3336;
                                _3350 = _3337;
                                _3351 = _3338;
                                _3352 = _3339;
                                _3353 = _3340;
                                _3354 = _3341;
                                _3355 = _3356;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3339;
                        frontier_phi_67_pred_1 = _3340;
                        frontier_phi_67_pred_2 = _3341;
                        frontier_phi_67_pred_3 = _3338;
                        frontier_phi_67_pred_4 = _3337;
                        frontier_phi_67_pred_5 = _3336;
                    }
                    _3004 = frontier_phi_67_pred;
                    _3006 = frontier_phi_67_pred_1;
                    _3008 = frontier_phi_67_pred_2;
                    _3002 = frontier_phi_67_pred_3;
                    _3000 = frontier_phi_67_pred_4;
                    _2998 = frontier_phi_67_pred_5;
                    uint _3143 = _3142 + 1u;
                    if (_3143 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3136 = _2998;
                        _3137 = _3000;
                        _3138 = _3002;
                        _3139 = _3004;
                        _3140 = _3006;
                        _3141 = _3008;
                        _3142 = _3143;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3006;
                frontier_phi_55_56_ladder_1 = _3008;
                frontier_phi_55_56_ladder_2 = _3004;
                frontier_phi_55_56_ladder_3 = _3002;
                frontier_phi_55_56_ladder_4 = _3000;
                frontier_phi_55_56_ladder_5 = _2998;
            }
            else
            {
                frontier_phi_55_56_ladder = _2893;
                frontier_phi_55_56_ladder_1 = _2895;
                frontier_phi_55_56_ladder_2 = _2891;
                frontier_phi_55_56_ladder_3 = _2889;
                frontier_phi_55_56_ladder_4 = _2887;
                frontier_phi_55_56_ladder_5 = _2885;
            }
            _2997 = frontier_phi_55_56_ladder_5;
            _2999 = frontier_phi_55_56_ladder_4;
            _3001 = frontier_phi_55_56_ladder_3;
            _3003 = frontier_phi_55_56_ladder_2;
            _3005 = frontier_phi_55_56_ladder;
            _3007 = frontier_phi_55_56_ladder_1;
        }
        float _3012 = isnan(1.0) ? _1090 : (isnan(_1090) ? 1.0 : min(_1090, 1.0));
        _2797 = (_3012 * _3003) + _2252;
        _2799 = (_3012 * _3005) + _2254;
        _2801 = (_3012 * _3007) + _2256;
        _2803 = ((_2997 * 0.039999999105930328369140625) * _3012) + _2582;
        _2805 = ((_2999 * 0.039999999105930328369140625) * _3012) + _2584;
        _2807 = ((_3001 * 0.039999999105930328369140625) * _3012) + _2586;
    }
    else
    {
        _2797 = _2252;
        _2799 = _2254;
        _2801 = _2256;
        _2803 = _2582;
        _2805 = _2584;
        _2807 = _2586;
    }
    float _4725 = isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : max(_1075, 0.0));
    float _4736 = isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : max(_1076, 0.0));
    float _4747 = isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0));
    uint _2827 = _255 + 6u;
    float _2835 = _1027 / cbSceneParam._m0[86u].x;
    float _2836 = _1028 / cbSceneParam._m0[86u].y;
    vec4 _2850 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2835, _2836, (log2((isnan(cbSceneParam._m0[77u].w) ? _961 : (isnan(_961) ? cbSceneParam._m0[77u].w : min(_961, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2852 = _2850.x;
    float _2853 = _2850.y;
    float _2854 = _2850.z;
    float _2855 = _2850.w;
    float _2947;
    float _2949;
    float _2951;
    float _2953;
    if (_961 > cbSceneParam._m0[78u].w)
    {
        float _2910 = isnan(_961) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _961 : min(cbSceneParam._m0[80u].w, _961));
        float _2911 = _2910 / _961;
        float _2922 = _2911 * _1012;
        float _2923 = _1013 * _2911;
        float _2924 = (-0.0) - _2923;
        float _2925 = _2911 * _1014;
        float _2927 = (cbSceneParam._m0[77u].w * _2924) / _2910;
        float _2928 = _2927 + cbSceneParam._m0[79u].w;
        float _2929 = cbSceneParam._m0[79u].w - _2923;
        float _2935 = sqrt(((_2922 * _2922) + (_2923 * _2923)) + (_2925 * _2925));
        float _2938 = (1.0 - (cbSceneParam._m0[77u].w / _2910)) * _2935;
        float _2943 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2945 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3098;
        if (abs((_2924 - _2927) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3098 = ((((_2928 > 0.0) ? exp2(_2943 * _2928) : (2.0 - exp2(_2945 * _2928))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2938;
        }
        else
        {
            float _3058 = 1.0 / cbSceneParam._m0[80u].x;
            float _3059 = isnan(_2929) ? _2928 : (isnan(_2928) ? _2929 : max(_2928, _2929));
            float _3060 = isnan(_2929) ? _2928 : (isnan(_2928) ? _2929 : min(_2928, _2929));
            float _3069 = isnan(0.0) ? _3059 : (isnan(_3059) ? 0.0 : min(_3059, 0.0));
            float _3070 = isnan(0.0) ? _3060 : (isnan(_3060) ? 0.0 : min(_3060, 0.0));
            _3098 = ((abs(_2935 / _2924) * cbSceneParam._m0[80u].y) * ((((_3069 - _3070) * 2.0) - ((exp2(_2943 * (isnan(0.0) ? _3059 : (isnan(_3059) ? 0.0 : max(_3059, 0.0)))) - exp2(_2943 * (isnan(0.0) ? _3060 : (isnan(_3060) ? 0.0 : max(_3060, 0.0))))) * _3058)) - ((exp2(_2945 * _3069) - exp2(_2945 * _3070)) * _3058))) + (_2938 * cbSceneParam._m0[80u].z);
        }
        vec4 _3100 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2835, _2836, 1.0), 0.0);
        float _3109 = exp2((_3098 * (-1.44269502162933349609375)) * (1.0 - _3100.w));
        float _3110 = log2(_3109);
        float _3126 = log2(_2855);
        _2947 = (exp2(_3126 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3110 * cbSceneParam._m0[78u].x)) * _3100.x) / cbSceneParam._m0[78u].x)) + _2852;
        _2949 = (exp2(_3126 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3110 * cbSceneParam._m0[78u].y)) * _3100.y) / cbSceneParam._m0[78u].y)) + _2853;
        _2951 = (exp2(_3126 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3110 * cbSceneParam._m0[78u].z)) * _3100.z) / cbSceneParam._m0[78u].z)) + _2854;
        _2953 = _3109 * _2855;
    }
    else
    {
        _2947 = _2852;
        _2949 = _2853;
        _2951 = _2854;
        _2953 = _2855;
    }
    float _2965 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2966 = _2965 == 3.0;
    float _2967 = log2(_2953);
    float _2974 = exp2(_2967 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4725 : (isnan(_4725) ? 1.0 : min(_4725, 1.0))) * (_2797 + ((isnan(0.0) ? _1814 : (isnan(_1814) ? 0.0 : max(_1814, 0.0))) * _1090))) + ((_2803 + ((isnan(0.0) ? _2105 : (isnan(_2105) ? 0.0 : max(_2105, 0.0))) * _1893)) * cbPerFrame._m0[3u].x));
    float _2975 = exp2(_2967 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4736 : (isnan(_4736) ? 1.0 : min(_4736, 1.0))) * (_2799 + ((isnan(0.0) ? _1817 : (isnan(_1817) ? 0.0 : max(_1817, 0.0))) * _1090))) + ((_2805 + ((isnan(0.0) ? _2108 : (isnan(_2108) ? 0.0 : max(_2108, 0.0))) * _1893)) * cbPerFrame._m0[3u].x));
    float _2976 = exp2(_2967 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4747 : (isnan(_4747) ? 1.0 : min(_4747, 1.0))) * (_2801 + ((isnan(0.0) ? _1820 : (isnan(_1820) ? 0.0 : max(_1820, 0.0))) * _1090))) + ((_2807 + ((isnan(0.0) ? _2111 : (isnan(_2111) ? 0.0 : max(_2111, 0.0))) * _1893)) * cbPerFrame._m0[3u].x));
    float _2985 = (_2965 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2985 * (_2966 ? _2974 : (_2974 + (cbSceneParam._m0[72u].w * _2947)));
    SV_Target.y = _2985 * (_2966 ? _2975 : (_2975 + (cbSceneParam._m0[72u].w * _2949)));
    SV_Target.z = _2985 * (_2966 ? _2976 : (_2976 + (cbSceneParam._m0[72u].w * _2951)));
    SV_Target.w = cbInstanceData._m0[_2827].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2827].w;
}


