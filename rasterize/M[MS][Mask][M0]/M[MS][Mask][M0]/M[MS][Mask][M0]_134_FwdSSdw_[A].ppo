#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1514;
float _3894;
float _3895;
float _3896;
float _3897;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _235 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _236 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _237 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _243 = inversesqrt(dot(vec3(_235, _236, _237), vec3(_235, _236, _237)));
    float _250 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _257 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _271 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _273 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _274 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3906 = isnan(0.0) ? _271 : (isnan(_271) ? 0.0 : max(_271, 0.0));
    float _3917 = isnan(0.0) ? _273 : (isnan(_273) ? 0.0 : max(_273, 0.0));
    float _3928 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    uint _284 = uint(roundEven(NORMAL.w)) * 13u;
    uint _289 = _284 + 1u;
    uint _293 = _284 + 2u;
    float _302 = sqrt(((cbInstanceData._m0[_289].x * cbInstanceData._m0[_289].x) + (cbInstanceData._m0[_284].x * cbInstanceData._m0[_284].x)) + (cbInstanceData._m0[_293].x * cbInstanceData._m0[_293].x));
    float _303 = _302 * TEXCOORD.z;
    float _304 = _302 * TEXCOORD.w;
    vec4 _317 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _303) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _304) + cbTextureTilingScale._m0[13u].w));
    vec4 _340 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _366 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _371 = _366.x * cbMtdParam._m0[11u].x;
    float _372 = _366.y * cbMtdParam._m0[11u].y;
    float _373 = _366.z * cbMtdParam._m0[11u].z;
    vec4 _392 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _303) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _304) + cbTextureTilingScale._m0[5u].w));
    vec4 _411 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _449 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _451 = _449.x;
    float _463 = dot(vec4(_451, _449.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _480 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _411.x) * 2.0) - ((((_451 - _463) * cbMtdParam._m0[24u].z) + _463) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3939 = isnan(0.0) ? _480 : (isnan(_480) ? 0.0 : max(_480, 0.0));
    float _481 = isnan(1.0) ? _3939 : (isnan(_3939) ? 1.0 : min(_3939, 1.0));
    float _488 = (_481 * ((_392.x * cbMtdParam._m0[12u].x) - _371)) + _371;
    float _489 = (_481 * ((_392.y * cbMtdParam._m0[12u].y) - _372)) + _372;
    float _490 = (_481 * ((_392.z * cbMtdParam._m0[12u].z) - _373)) + _373;
    vec4 _507 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _303) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _304) + cbTextureTilingScale._m0[3u].w));
    vec4 _527 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _529 = _527.x;
    float _539 = dot(vec4(_529, _527.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _553 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _411.y) * 2.0) - ((((_529 - _539) * cbMtdParam._m0[24u].z) + _539) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3950 = isnan(0.0) ? _553 : (isnan(_553) ? 0.0 : max(_553, 0.0));
    float _554 = isnan(1.0) ? _3950 : (isnan(_3950) ? 1.0 : min(_3950, 1.0));
    float _561 = (_554 * ((_507.x * cbMtdParam._m0[13u].x) - _488)) + _488;
    float _562 = (_554 * ((_507.y * cbMtdParam._m0[13u].y) - _489)) + _489;
    float _563 = (_554 * ((_507.z * cbMtdParam._m0[13u].z) - _490)) + _490;
    vec4 _581 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _303) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _304) + cbTextureTilingScale._m0[24u].w));
    vec4 _598 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _600 = _598.x;
    float _610 = dot(vec4(_600, _598.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _622 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _411.z) * 2.0) - ((((_600 - _610) * cbMtdParam._m0[24u].z) + _610) * cbMtdParam._m0[20u].z))) + 1.0;
    float _3961 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
    float _623 = isnan(1.0) ? _3961 : (isnan(_3961) ? 1.0 : min(_3961, 1.0));
    float _633 = (_340.x * cbMtdParam._m0[9u].x) * ((_623 * ((_581.x * cbMtdParam._m0[14u].x) - _561)) + _561);
    float _634 = (_340.y * cbMtdParam._m0[9u].y) * ((_623 * ((_581.y * cbMtdParam._m0[14u].y) - _562)) + _562);
    float _635 = (_340.z * cbMtdParam._m0[9u].z) * ((_623 * ((_581.z * cbMtdParam._m0[14u].z) - _563)) + _563);
    float _639 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _317.x) * _633;
    float _642 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _317.y) * _634;
    float _645 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _317.z) * _635;
    float _653 = (((_633 - _639) * (isnan(1.0) ? _3906 : (isnan(_3906) ? 1.0 : min(_3906, 1.0)))) + _639) * 4.55000019073486328125;
    float _655 = (((_634 - _642) * (isnan(1.0) ? _3917 : (isnan(_3917) ? 1.0 : min(_3917, 1.0)))) + _642) * 4.55000019073486328125;
    float _657 = (((_635 - _645) * (isnan(1.0) ? _3928 : (isnan(_3928) ? 1.0 : min(_3928, 1.0)))) + _645) * 4.55000019073486328125;
    vec4 _675 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _303) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _304) + cbTextureTilingScale._m0[14u].w));
    vec4 _694 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _303) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _304) + cbTextureTilingScale._m0[20u].w));
    vec4 _717 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _303) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _304) + cbTextureTilingScale._m0[4u].w));
    vec4 _734 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _736 = _734.x;
    float _737 = _734.y;
    float _738 = _734.z;
    float _745 = ((_717.x - _736) * _481) + _736;
    float _746 = ((_717.y - _737) * _481) + _737;
    float _747 = ((_717.z - _738) * _481) + _738;
    vec4 _759 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _303) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _304) + cbTextureTilingScale._m0[2u].w));
    float _770 = ((_759.x - _745) * _554) + _745;
    float _771 = ((_759.y - _746) * _554) + _746;
    float _772 = ((_759.z - _747) * _554) + _747;
    vec4 _784 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _303) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _304) + cbTextureTilingScale._m0[23u].w));
    float _797 = ((_784.z - _772) * _623) + _772;
    float _800 = ((((_784.x - _770) * _623) + _770) * 2.0) + (-1.0);
    float _801 = ((((_784.y - _771) * _623) + _771) * 2.0) + (-1.0);
    float _802 = dot(vec2(_800, _801), vec2(_800, _801));
    float _3972 = isnan(0.0) ? _802 : (isnan(_802) ? 0.0 : max(_802, 0.0));
    float _807 = sqrt(1.0 - (isnan(1.0) ? _3972 : (isnan(_3972) ? 1.0 : min(_3972, 1.0))));
    vec4 _821 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _846 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _303) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _304) + cbTextureTilingScale._m0[11u].w));
    float _848 = _846.x;
    float _849 = 1.0 - _848;
    float _862 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_848 - _849) * cbMtdParam._m0[24u].w) + _849) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3983 = isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0));
    float _863 = isnan(1.0) ? _3983 : (isnan(_3983) ? 1.0 : min(_3983, 1.0));
    float _870 = (_863 * ((_675.x * cbMtdParam._m0[18u].x) - _653)) + _653;
    float _871 = (_863 * ((_675.y * cbMtdParam._m0[18u].y) - _655)) + _655;
    float _872 = (_863 * ((_675.z * cbMtdParam._m0[18u].z) - _657)) + _657;
    float _877 = (((_694.z - _797) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _797;
    float _881 = ((_821.z - _877) * cbMtdParam._m0[19u].w) + _877;
    vec4 _894 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _303) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _304) + cbTextureTilingScale._m0[15u].w));
    float _901 = (_894.x * 2.0) + (-1.0);
    float _902 = (_894.y * 2.0) + (-1.0);
    float _903 = dot(vec2(_901, _902), vec2(_901, _902));
    float _3994 = isnan(0.0) ? _903 : (isnan(_903) ? 0.0 : max(_903, 0.0));
    float _911 = (_863 * (_894.z - _881)) + _881;
    float _920 = (_800 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_694.x * 2.0) + (-1.0)))) + (((_821.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _921 = (_801 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_694.y * 2.0) + (-1.0)))) + (((_821.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _933 = (((_901 - _920) + (cbMtdParam._m0[21u].x * _920)) * _863) + _920;
    float _934 = (((_902 - _921) + (cbMtdParam._m0[21u].x * _921)) * _863) + _921;
    float _935 = (_863 * (sqrt(1.0 - (isnan(1.0) ? _3994 : (isnan(_3994) ? 1.0 : min(_3994, 1.0)))) - _807)) + _807;
    float _939 = cbMtdParam._m0[22u].x + _821.w;
    float _942 = fma(_935, _250 * NORMAL.x, fma(_934, _257 * TANGENT.x, (_243 * _235) * _933));
    float _945 = fma(_935, _250 * NORMAL.y, fma(_934, _257 * TANGENT.y, (_243 * _236) * _933));
    float _948 = fma(_935, _250 * NORMAL.z, fma(_934, _257 * TANGENT.z, (_243 * _237) * _933));
    float _952 = inversesqrt(dot(vec3(_942, _945, _948), vec3(_942, _945, _948)));
    float _953 = _952 * _942;
    float _954 = _952 * _945;
    float _955 = _952 * _948;
    float _4005 = isnan(0.0) ? _911 : (isnan(_911) ? 0.0 : max(_911, 0.0));
    float _956 = isnan(1.0) ? _4005 : (isnan(_4005) ? 1.0 : min(_4005, 1.0));
    float _4016 = isnan(0.0) ? _939 : (isnan(_939) ? 0.0 : max(_939, 0.0));
    float _4027 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
    float _4038 = isnan(0.0) ? _871 : (isnan(_871) ? 0.0 : max(_871, 0.0));
    float _4049 = isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : max(_872, 0.0));
    float _974 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1015 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1025 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1015);
    float _1026 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1015);
    float _1027 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1015);
    float _1031 = inversesqrt(dot(vec3(_1025, _1026, _1027), vec3(_1025, _1026, _1027)));
    float _1032 = _1025 * _1031;
    float _1033 = _1026 * _1031;
    float _1034 = _1027 * _1031;
    vec4 _1039 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1041 = _1039.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1195 = sqrt(((_1025 * _1025) + (_1026 * _1026)) + (_1027 * _1027));
        float _1201 = (cbMatDynParam._m0[5u].x * _1195) + cbMatDynParam._m0[5u].y;
        float _4060 = isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0));
        float _1202 = isnan(1.0) ? _4060 : (isnan(_4060) ? 1.0 : min(_4060, 1.0));
        float _1206 = (cbMatDynParam._m0[5u].z * _1195) + cbMatDynParam._m0[5u].w;
        float _4071 = isnan(0.0) ? _1206 : (isnan(_1206) ? 0.0 : max(_1206, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4071 : (isnan(_4071) ? 1.0 : min(_4071, 1.0))) - _1202)) + _1202) < ((_1041 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1052 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1053 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1071 = fma(_955, cbSceneParam._m0[5u].z, fma(_954, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _953));
    float _1074 = fma(_955, cbSceneParam._m0[6u].z, fma(_954, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _953));
    float _1077 = fma(_955, cbSceneParam._m0[7u].z, fma(_954, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _953));
    uint _1090 = _284 + 9u;
    uint _1091 = _1090 + uint(cbMatDynParam._m0[0u].w);
    float _1097 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4027 : (isnan(_4027) ? 1.0 : min(_4027, 1.0)))) * cbInstanceData._m0[_1091].x;
    float _1098 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4038 : (isnan(_4038) ? 1.0 : min(_4038, 1.0)))) * cbInstanceData._m0[_1091].y;
    float _1099 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4049 : (isnan(_4049) ? 1.0 : min(_4049, 1.0)))) * cbInstanceData._m0[_1091].z;
    float _4082 = isnan(0.0) ? _1097 : (isnan(_1097) ? 0.0 : max(_1097, 0.0));
    float _1100 = isnan(1.0) ? _4082 : (isnan(_4082) ? 1.0 : min(_4082, 1.0));
    float _4093 = isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0));
    float _1101 = isnan(1.0) ? _4093 : (isnan(_4093) ? 1.0 : min(_4093, 1.0));
    float _4104 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
    float _1102 = isnan(1.0) ? _4104 : (isnan(_4104) ? 1.0 : min(_4104, 1.0));
    vec4 _1111 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1052, cbSceneParam._m0[86u].y * _1053));
    float _1115 = ((isnan(1.0) ? _4016 : (isnan(_4016) ? 1.0 : min(_4016, 1.0))) * TEXCOORD_5.w) * _1111.x;
    float _1116 = dot(vec3(_953, _954, _955), vec3(_1032, _1033, _1034));
    float _1119 = _1116 * 2.0;
    float _1123 = (_1119 * _953) - _1032;
    float _1124 = (_1119 * _954) - _1033;
    float _1125 = (_1119 * _955) - _1034;
    float _1129 = abs(dot(vec3(_1032, _1033, _1034), vec3(_953, _954, _955)));
    float _4115 = isnan(0.0) ? _1129 : (isnan(_1129) ? 0.0 : max(_1129, 0.0));
    float _1131 = sqrt(_956);
    float _1144 = exp2((_1131 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4115 : (isnan(_4115) ? 1.0 : min(_4115, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1131 * 3.0));
    float _1176 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1180 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1184 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1513;
    float _1515;
    float _1516;
    float _1517;
    float _1518;
    float _1519;
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    float _1526;
    float _1527;
    float _1528;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1238 = fma(_1184, cbModelParam._m0[26u].z, fma(_1180, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1176));
        float _1242 = fma(_1184, cbModelParam._m0[27u].z, fma(_1180, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1176));
        float _1246 = fma(_1184, cbModelParam._m0[28u].z, fma(_1180, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1176));
        float _1271 = _1176 + _953;
        float _1272 = _1180 + _954;
        float _1273 = _1184 + _955;
        float _1283 = fma(_1273, cbModelParam._m0[26u].z, fma(_1272, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1271)) - _1238;
        float _1284 = fma(_1273, cbModelParam._m0[27u].z, fma(_1272, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1271)) - _1242;
        float _1285 = fma(_1273, cbModelParam._m0[28u].z, fma(_1272, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1271)) - _1246;
        float _1289 = inversesqrt(dot(vec3(_1283, _1284, _1285), vec3(_1283, _1284, _1285)));
        float _1302 = ((_1289 * _1283) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1238 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1303 = ((_1289 * _1284) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1242 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1304 = ((_1289 * _1285) / cbModelParam._m0[34u].z) + ((((((_1246 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1307 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1302, _1303, _1304), 0.0);
        vec4 _1314 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1302, _1303, _1304), 0.0);
        vec4 _1321 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1302, _1303, _1304), 0.0);
        vec4 _1328 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1302, _1303, _1304), 0.0);
        float _1341 = exp2((_1307.w + (-0.5)) * 20.0) * 2.0;
        float _1342 = _1341 * (_1307.x + (-0.5));
        float _1343 = _1341 * (_1307.y + (-0.5));
        float _1344 = _1341 * (_1307.z + (-0.5));
        float _1351 = exp2((_1314.w + (-0.5)) * 20.0) * 2.0;
        float _1352 = _1351 * (_1314.x + (-0.5));
        float _1353 = _1351 * (_1314.y + (-0.5));
        float _1354 = _1351 * (_1314.z + (-0.5));
        float _1361 = exp2((_1321.w + (-0.5)) * 20.0) * 2.0;
        float _1362 = _1361 * (_1321.x + (-0.5));
        float _1363 = _1361 * (_1321.y + (-0.5));
        float _1364 = _1361 * (_1321.z + (-0.5));
        float _1371 = exp2((_1328.w + (-0.5)) * 20.0) * 2.0;
        float _1372 = _1371 * (_1328.x + (-0.5));
        float _1373 = _1371 * (_1328.y + (-0.5));
        float _1374 = _1371 * (_1328.z + (-0.5));
        float _1375 = isnan(0.0) ? _1372 : (isnan(_1372) ? 0.0 : max(_1372, 0.0));
        float _1376 = isnan(0.0) ? _1373 : (isnan(_1373) ? 0.0 : max(_1373, 0.0));
        float _1377 = isnan(0.0) ? _1374 : (isnan(_1374) ? 0.0 : max(_1374, 0.0));
        float _1378 = _1342 * 0.5;
        float _1379 = _1352 * 0.5;
        float _1380 = _1362 * 0.5;
        float _1381 = dot(vec3(_1378, _1379, _1380), vec3(_1378, _1379, _1380));
        float _1386 = (_1381 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1381);
        float _1395 = (dot(vec3(_953, _954, _955), vec3(_1386 * _1378, _1386 * _1379, _1386 * _1380)) + 1.0) * 0.5;
        float _4141 = isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0));
        float _1405 = sqrt(((_1379 * _1379) + (_1378 * _1378)) + (_1380 * _1380)) / (_1375 + 9.9999997473787516355514526367188e-06);
        float _4152 = isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0));
        float _1406 = isnan(1.0) ? _4152 : (isnan(_4152) ? 1.0 : min(_4152, 1.0));
        float _1407 = _1406 * 2.0;
        float _1411 = (1.0 - _1406) / (_1406 + 1.0);
        float _4163 = isnan(0.0) ? _1411 : (isnan(_1411) ? 0.0 : max(_1411, 0.0));
        float _1412 = isnan(1.0) ? _4163 : (isnan(_4163) ? 1.0 : min(_4163, 1.0));
        float _1421 = ((((1.0 - _1412) * (_1407 + 2.0)) * exp2(log2(isnan(1.0) ? _4141 : (isnan(_4141) ? 1.0 : min(_4141, 1.0))) * (_1407 + 1.0))) + _1412) * _1375;
        float _1422 = _1343 * 0.5;
        float _1423 = _1353 * 0.5;
        float _1424 = _1363 * 0.5;
        float _1425 = dot(vec3(_1422, _1423, _1424), vec3(_1422, _1423, _1424));
        float _1430 = (_1425 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1425);
        float _1438 = (dot(vec3(_953, _954, _955), vec3(_1430 * _1422, _1430 * _1423, _1430 * _1424)) + 1.0) * 0.5;
        float _4174 = isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0));
        float _1447 = sqrt(((_1423 * _1423) + (_1422 * _1422)) + (_1424 * _1424)) / (_1376 + 9.9999997473787516355514526367188e-06);
        float _4185 = isnan(0.0) ? _1447 : (isnan(_1447) ? 0.0 : max(_1447, 0.0));
        float _1448 = isnan(1.0) ? _4185 : (isnan(_4185) ? 1.0 : min(_4185, 1.0));
        float _1449 = _1448 * 2.0;
        float _1453 = (1.0 - _1448) / (_1448 + 1.0);
        float _4196 = isnan(0.0) ? _1453 : (isnan(_1453) ? 0.0 : max(_1453, 0.0));
        float _1454 = isnan(1.0) ? _4196 : (isnan(_4196) ? 1.0 : min(_4196, 1.0));
        float _1463 = ((((1.0 - _1454) * (_1449 + 2.0)) * exp2(log2(isnan(1.0) ? _4174 : (isnan(_4174) ? 1.0 : min(_4174, 1.0))) * (_1449 + 1.0))) + _1454) * _1376;
        float _1464 = _1344 * 0.5;
        float _1465 = _1354 * 0.5;
        float _1466 = _1364 * 0.5;
        float _1467 = dot(vec3(_1464, _1465, _1466), vec3(_1464, _1465, _1466));
        float _1472 = (_1467 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1467);
        float _1480 = (dot(vec3(_953, _954, _955), vec3(_1472 * _1464, _1472 * _1465, _1472 * _1466)) + 1.0) * 0.5;
        float _4207 = isnan(0.0) ? _1480 : (isnan(_1480) ? 0.0 : max(_1480, 0.0));
        float _1489 = sqrt(((_1465 * _1465) + (_1464 * _1464)) + (_1466 * _1466)) / (_1377 + 9.9999997473787516355514526367188e-06);
        float _4218 = isnan(0.0) ? _1489 : (isnan(_1489) ? 0.0 : max(_1489, 0.0));
        float _1490 = isnan(1.0) ? _4218 : (isnan(_4218) ? 1.0 : min(_4218, 1.0));
        float _1491 = _1490 * 2.0;
        float _1495 = (1.0 - _1490) / (_1490 + 1.0);
        float _4229 = isnan(0.0) ? _1495 : (isnan(_1495) ? 0.0 : max(_1495, 0.0));
        float _1496 = isnan(1.0) ? _4229 : (isnan(_4229) ? 1.0 : min(_4229, 1.0));
        float _1505 = ((((1.0 - _1496) * (_1491 + 2.0)) * exp2(log2(isnan(1.0) ? _4207 : (isnan(_4207) ? 1.0 : min(_4207, 1.0))) * (_1491 + 1.0))) + _1496) * _1377;
        _1513 = _1344;
        _1515 = _1343;
        _1516 = _1342;
        _1517 = _1354;
        _1518 = _1353;
        _1519 = _1352;
        _1520 = _1364;
        _1521 = _1363;
        _1522 = _1362;
        _1523 = _1377;
        _1524 = _1376;
        _1525 = _1375;
        _1526 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0)));
        _1527 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1463 : (isnan(_1463) ? 0.0 : max(_1463, 0.0)));
        _1528 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1505 : (isnan(_1505) ? 0.0 : max(_1505, 0.0)));
    }
    else
    {
        _1513 = _1514;
        _1515 = _1514;
        _1516 = _1514;
        _1517 = _1514;
        _1518 = _1514;
        _1519 = _1514;
        _1520 = _1514;
        _1521 = _1514;
        _1522 = _1514;
        _1523 = _1514;
        _1524 = _1514;
        _1525 = _1514;
        _1526 = 0.0;
        _1527 = 0.0;
        _1528 = 0.0;
    }
    float _1823;
    float _1824;
    float _1825;
    float _1826;
    float _1827;
    float _1828;
    float _1829;
    float _1830;
    float _1831;
    float _1832;
    float _1833;
    float _1834;
    float _1835;
    float _1836;
    float _1837;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1554 = fma(_1184, cbModelParam._m0[30u].z, fma(_1180, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1176));
        float _1558 = fma(_1184, cbModelParam._m0[31u].z, fma(_1180, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1176));
        float _1562 = fma(_1184, cbModelParam._m0[32u].z, fma(_1180, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1176));
        float _1585 = _1176 + _953;
        float _1586 = _1180 + _954;
        float _1587 = _1184 + _955;
        float _1597 = fma(_1587, cbModelParam._m0[30u].z, fma(_1586, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1585)) - _1554;
        float _1598 = fma(_1587, cbModelParam._m0[31u].z, fma(_1586, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1585)) - _1558;
        float _1599 = fma(_1587, cbModelParam._m0[32u].z, fma(_1586, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1585)) - _1562;
        float _1603 = inversesqrt(dot(vec3(_1597, _1598, _1599), vec3(_1597, _1598, _1599)));
        float _1616 = ((_1603 * _1597) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1554 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1617 = ((_1603 * _1598) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1558 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1618 = ((_1603 * _1599) / cbModelParam._m0[35u].z) + ((((((_1562 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1620 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1616, _1617, _1618), 0.0);
        vec4 _1627 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1616, _1617, _1618), 0.0);
        vec4 _1634 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1616, _1617, _1618), 0.0);
        vec4 _1641 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1616, _1617, _1618), 0.0);
        float _1653 = exp2((_1620.w + (-0.5)) * 20.0) * 2.0;
        float _1654 = _1653 * (_1620.x + (-0.5));
        float _1655 = _1653 * (_1620.y + (-0.5));
        float _1656 = _1653 * (_1620.z + (-0.5));
        float _1663 = exp2((_1627.w + (-0.5)) * 20.0) * 2.0;
        float _1664 = _1663 * (_1627.x + (-0.5));
        float _1665 = _1663 * (_1627.y + (-0.5));
        float _1666 = _1663 * (_1627.z + (-0.5));
        float _1673 = exp2((_1634.w + (-0.5)) * 20.0) * 2.0;
        float _1674 = _1673 * (_1634.x + (-0.5));
        float _1675 = _1673 * (_1634.y + (-0.5));
        float _1676 = _1673 * (_1634.z + (-0.5));
        float _1683 = exp2((_1641.w + (-0.5)) * 20.0) * 2.0;
        float _1684 = _1683 * (_1641.x + (-0.5));
        float _1685 = _1683 * (_1641.y + (-0.5));
        float _1686 = _1683 * (_1641.z + (-0.5));
        float _1687 = isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0));
        float _1688 = isnan(0.0) ? _1685 : (isnan(_1685) ? 0.0 : max(_1685, 0.0));
        float _1689 = isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0));
        float _1690 = _1654 * 0.5;
        float _1691 = _1664 * 0.5;
        float _1692 = _1674 * 0.5;
        float _1693 = dot(vec3(_1690, _1691, _1692), vec3(_1690, _1691, _1692));
        float _1698 = (_1693 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1693);
        float _1706 = (dot(vec3(_953, _954, _955), vec3(_1698 * _1690, _1698 * _1691, _1698 * _1692)) + 1.0) * 0.5;
        float _4270 = isnan(0.0) ? _1706 : (isnan(_1706) ? 0.0 : max(_1706, 0.0));
        float _1715 = sqrt(((_1691 * _1691) + (_1690 * _1690)) + (_1692 * _1692)) / (_1687 + 9.9999997473787516355514526367188e-06);
        float _4281 = isnan(0.0) ? _1715 : (isnan(_1715) ? 0.0 : max(_1715, 0.0));
        float _1716 = isnan(1.0) ? _4281 : (isnan(_4281) ? 1.0 : min(_4281, 1.0));
        float _1717 = _1716 * 2.0;
        float _1721 = (1.0 - _1716) / (_1716 + 1.0);
        float _4292 = isnan(0.0) ? _1721 : (isnan(_1721) ? 0.0 : max(_1721, 0.0));
        float _1722 = isnan(1.0) ? _4292 : (isnan(_4292) ? 1.0 : min(_4292, 1.0));
        float _1731 = ((((1.0 - _1722) * (_1717 + 2.0)) * exp2(log2(isnan(1.0) ? _4270 : (isnan(_4270) ? 1.0 : min(_4270, 1.0))) * (_1717 + 1.0))) + _1722) * _1687;
        float _1732 = _1655 * 0.5;
        float _1733 = _1665 * 0.5;
        float _1734 = _1675 * 0.5;
        float _1735 = dot(vec3(_1732, _1733, _1734), vec3(_1732, _1733, _1734));
        float _1740 = (_1735 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1735);
        float _1748 = (dot(vec3(_953, _954, _955), vec3(_1740 * _1732, _1740 * _1733, _1740 * _1734)) + 1.0) * 0.5;
        float _4303 = isnan(0.0) ? _1748 : (isnan(_1748) ? 0.0 : max(_1748, 0.0));
        float _1757 = sqrt(((_1733 * _1733) + (_1732 * _1732)) + (_1734 * _1734)) / (_1688 + 9.9999997473787516355514526367188e-06);
        float _4314 = isnan(0.0) ? _1757 : (isnan(_1757) ? 0.0 : max(_1757, 0.0));
        float _1758 = isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0));
        float _1759 = _1758 * 2.0;
        float _1763 = (1.0 - _1758) / (_1758 + 1.0);
        float _4325 = isnan(0.0) ? _1763 : (isnan(_1763) ? 0.0 : max(_1763, 0.0));
        float _1764 = isnan(1.0) ? _4325 : (isnan(_4325) ? 1.0 : min(_4325, 1.0));
        float _1773 = ((((1.0 - _1764) * (_1759 + 2.0)) * exp2(log2(isnan(1.0) ? _4303 : (isnan(_4303) ? 1.0 : min(_4303, 1.0))) * (_1759 + 1.0))) + _1764) * _1688;
        float _1774 = _1656 * 0.5;
        float _1775 = _1666 * 0.5;
        float _1776 = _1676 * 0.5;
        float _1777 = dot(vec3(_1774, _1775, _1776), vec3(_1774, _1775, _1776));
        float _1782 = (_1777 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1777);
        float _1790 = (dot(vec3(_953, _954, _955), vec3(_1782 * _1774, _1782 * _1775, _1782 * _1776)) + 1.0) * 0.5;
        float _4336 = isnan(0.0) ? _1790 : (isnan(_1790) ? 0.0 : max(_1790, 0.0));
        float _1799 = sqrt(((_1775 * _1775) + (_1774 * _1774)) + (_1776 * _1776)) / (_1689 + 9.9999997473787516355514526367188e-06);
        float _4347 = isnan(0.0) ? _1799 : (isnan(_1799) ? 0.0 : max(_1799, 0.0));
        float _1800 = isnan(1.0) ? _4347 : (isnan(_4347) ? 1.0 : min(_4347, 1.0));
        float _1801 = _1800 * 2.0;
        float _1805 = (1.0 - _1800) / (_1800 + 1.0);
        float _4358 = isnan(0.0) ? _1805 : (isnan(_1805) ? 0.0 : max(_1805, 0.0));
        float _1806 = isnan(1.0) ? _4358 : (isnan(_4358) ? 1.0 : min(_4358, 1.0));
        float _1815 = ((((1.0 - _1806) * (_1801 + 2.0)) * exp2(log2(isnan(1.0) ? _4336 : (isnan(_4336) ? 1.0 : min(_4336, 1.0))) * (_1801 + 1.0))) + _1806) * _1689;
        _1823 = _1656;
        _1824 = _1655;
        _1825 = _1654;
        _1826 = _1666;
        _1827 = _1665;
        _1828 = _1664;
        _1829 = _1676;
        _1830 = _1675;
        _1831 = _1674;
        _1832 = _1689;
        _1833 = _1688;
        _1834 = _1687;
        _1835 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1731 : (isnan(_1731) ? 0.0 : max(_1731, 0.0)));
        _1836 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1773 : (isnan(_1773) ? 0.0 : max(_1773, 0.0)));
        _1837 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1815 : (isnan(_1815) ? 0.0 : max(_1815, 0.0)));
    }
    else
    {
        _1823 = _1514;
        _1824 = _1514;
        _1825 = _1514;
        _1826 = _1514;
        _1827 = _1514;
        _1828 = _1514;
        _1829 = _1514;
        _1830 = _1514;
        _1831 = _1514;
        _1832 = _1514;
        _1833 = _1514;
        _1834 = _1514;
        _1835 = 0.0;
        _1836 = 0.0;
        _1837 = 0.0;
    }
    float _1847 = (cbModelParam._m0[1u].x * (_1835 - _1526)) + _1526;
    float _1848 = (cbModelParam._m0[1u].x * (_1836 - _1527)) + _1527;
    float _1849 = (cbModelParam._m0[1u].x * (_1837 - _1528)) + _1528;
    float _1870 = fma(_1849, cbSceneParam._m0[89u].z, fma(_1848, cbSceneParam._m0[89u].y, _1847 * cbSceneParam._m0[89u].x));
    float _1873 = fma(_1849, cbSceneParam._m0[90u].z, fma(_1848, cbSceneParam._m0[90u].y, _1847 * cbSceneParam._m0[90u].x));
    float _1876 = fma(_1849, cbSceneParam._m0[91u].z, fma(_1848, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1847));
    float _1891 = _1123 * 0.5;
    float _1892 = _1124 * 0.5;
    float _1893 = _1125 * 0.5;
    float _1894 = dot(vec4(_1891, _1892, _1893, 1.0), vec4(_1825, _1828, _1831, _1834));
    float _1897 = dot(vec4(_1891, _1892, _1893, 1.0), vec4(_1824, _1827, _1830, _1833));
    float _1900 = dot(vec4(_1891, _1892, _1893, 1.0), vec4(_1823, _1826, _1829, _1832));
    float _1934;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1907 = dot(vec4(_1891, _1892, _1893, 1.0), vec4(_1513, _1517, _1520, _1523));
        float _1911 = dot(vec4(_1891, _1892, _1893, 1.0), vec4(_1515, _1518, _1521, _1524));
        float _1915 = dot(vec4(_1891, _1892, _1893, 1.0), vec4(_1516, _1519, _1522, _1525));
        float _1922 = dot(vec4(cbModelParam._m0[39u]), vec4(_1891, _1892, _1893, 1.0));
        _1934 = dot(vec3(isnan(0.0) ? _1915 : (isnan(_1915) ? 0.0 : max(_1915, 0.0)), isnan(0.0) ? _1911 : (isnan(_1911) ? 0.0 : max(_1911, 0.0)), isnan(0.0) ? _1907 : (isnan(_1907) ? 0.0 : max(_1907, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1922) ? 0.0 : (isnan(0.0) ? _1922 : max(0.0, _1922))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1934 = 1.0;
    }
    float _1945;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1936 = dot(vec4(cbModelParam._m0[40u]), vec4(_1891, _1892, _1893, 1.0));
        _1945 = dot(vec3(isnan(0.0) ? _1894 : (isnan(_1894) ? 0.0 : max(_1894, 0.0)), isnan(0.0) ? _1897 : (isnan(_1897) ? 0.0 : max(_1897, 0.0)), isnan(0.0) ? _1900 : (isnan(_1900) ? 0.0 : max(_1900, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1936) ? 0.0 : (isnan(0.0) ? _1936 : max(0.0, _1936))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1945 = 1.0;
    }
    float _1949 = (_1945 * cbModelParam._m0[1u].x) + (_1934 * (1.0 - cbModelParam._m0[1u].x));
    float _1959 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _956);
    float _1960 = isnan(_1959) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1959 : min(cbModelParam._m0[25u].z, _1959));
    float _2040;
    float _2042;
    float _2044;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2007 = fma(_1184, cbModelParam._m0[13u].z, fma(_1180, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1176)) + cbModelParam._m0[13u].w;
        float _2011 = fma(_1184, cbModelParam._m0[14u].z, fma(_1180, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1176)) + cbModelParam._m0[14u].w;
        float _2015 = fma(_1184, cbModelParam._m0[15u].z, fma(_1180, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1176)) + cbModelParam._m0[15u].w;
        float _2018 = fma(_1125, cbModelParam._m0[13u].z, fma(_1124, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1123));
        float _2021 = fma(_1125, cbModelParam._m0[14u].z, fma(_1124, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1123));
        float _2024 = fma(_1125, cbModelParam._m0[15u].z, fma(_1124, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1123));
        float _2052;
        if (_2018 > 0.0)
        {
            _2052 = abs((1.0 - _2007) / _2018);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_2018 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_2007 + 1.0) / _2018);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _2052 = frontier_phi_17_15_ladder;
        }
        float _2273;
        if (_2021 > 0.0)
        {
            _2273 = abs((1.0 - _2011) / _2021);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_2021 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_2011 + 1.0) / _2021);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2273 = frontier_phi_26_22_ladder;
        }
        float _2519;
        if (_2024 > 0.0)
        {
            _2519 = abs((1.0 - _2015) / _2024);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_2024 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_2015 + 1.0) / _2024);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2519 = frontier_phi_38_33_ladder;
        }
        float _2521 = isnan(_2273) ? _2052 : (isnan(_2052) ? _2273 : min(_2052, _2273));
        float _2522 = isnan(_2519) ? _2521 : (isnan(_2521) ? _2519 : min(_2521, _2519));
        float _2526 = (_2522 * _2018) + _2007;
        float _2527 = (_2522 * _2021) + _2011;
        float _2528 = (_2522 * _2024) + _2015;
        float _2529 = _2522 * 9.9999997473787516355514526367188e-05;
        float _2531 = (-1.0) - _2529;
        float _2533 = _2529 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2528 > _2533) || ((_2528 < _2531) || ((_2527 > _2533) || ((_2527 < _2531) || ((_2526 < _2531) || (_2526 > _2533))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2652 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2528, cbModelParam._m0[9u].z, fma(_2527, cbModelParam._m0[9u].y, _2526 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2528, cbModelParam._m0[10u].z, fma(_2527, cbModelParam._m0[10u].y, _2526 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2528, cbModelParam._m0[11u].z, fma(_2527, cbModelParam._m0[11u].y, _2526 * cbModelParam._m0[11u].x))), _1960);
            frontier_phi_16_38_ladder = _2652.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2652.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2652.x * cbModelParam._m0[1u].y;
        }
        _2040 = frontier_phi_16_38_ladder_2;
        _2042 = frontier_phi_16_38_ladder_1;
        _2044 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _2028 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1123, _1124, _1125), _1960);
        _2040 = _2028.x * cbModelParam._m0[1u].y;
        _2042 = _2028.y * cbModelParam._m0[1u].y;
        _2044 = _2028.z * cbModelParam._m0[1u].y;
    }
    float _2048 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _956);
    float _2049 = isnan(_2048) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2048 : min(cbModelParam._m0[25u].w, _2048));
    float _2138;
    float _2140;
    float _2142;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2102 = fma(_1184, cbModelParam._m0[21u].z, fma(_1180, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1176)) + cbModelParam._m0[21u].w;
        float _2106 = fma(_1184, cbModelParam._m0[22u].z, fma(_1180, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1176)) + cbModelParam._m0[22u].w;
        float _2110 = fma(_1184, cbModelParam._m0[23u].z, fma(_1180, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1176)) + cbModelParam._m0[23u].w;
        float _2113 = fma(_1125, cbModelParam._m0[21u].z, fma(_1124, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1123));
        float _2116 = fma(_1125, cbModelParam._m0[22u].z, fma(_1124, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1123));
        float _2119 = fma(_1125, cbModelParam._m0[23u].z, fma(_1124, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1123));
        float _2278;
        if (_2113 > 0.0)
        {
            _2278 = abs((1.0 - _2102) / _2113);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2113 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2102 + 1.0) / _2113);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2278 = frontier_phi_28_24_ladder;
        }
        float _2546;
        if (_2116 > 0.0)
        {
            _2546 = abs((1.0 - _2106) / _2116);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2116 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2106 + 1.0) / _2116);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2546 = frontier_phi_40_35_ladder;
        }
        float _2751;
        if (_2119 > 0.0)
        {
            _2751 = abs((1.0 - _2110) / _2119);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_2119 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_2110 + 1.0) / _2119);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2751 = frontier_phi_49_46_ladder;
        }
        float _2753 = isnan(_2546) ? _2278 : (isnan(_2278) ? _2546 : min(_2278, _2546));
        float _2754 = isnan(_2751) ? _2753 : (isnan(_2753) ? _2751 : min(_2753, _2751));
        float _2758 = (_2754 * _2113) + _2102;
        float _2759 = (_2754 * _2116) + _2106;
        float _2760 = (_2754 * _2119) + _2110;
        float _2761 = _2754 * 9.9999997473787516355514526367188e-05;
        float _2762 = (-1.0) - _2761;
        float _2764 = _2761 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_2760 > _2764) || ((_2760 < _2762) || ((_2759 > _2764) || ((_2759 < _2762) || ((_2758 < _2762) || (_2758 > _2764))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2959 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2760, cbModelParam._m0[17u].z, fma(_2759, cbModelParam._m0[17u].y, _2758 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2760, cbModelParam._m0[18u].z, fma(_2759, cbModelParam._m0[18u].y, _2758 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2760, cbModelParam._m0[19u].z, fma(_2759, cbModelParam._m0[19u].y, _2758 * cbModelParam._m0[19u].x))), _2049);
            frontier_phi_25_49_ladder = _2959.z * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_1 = _2959.y * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_2 = _2959.x * cbModelParam._m0[1u].z;
        }
        _2138 = frontier_phi_25_49_ladder_2;
        _2140 = frontier_phi_25_49_ladder_1;
        _2142 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _2122 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1123, _1124, _1125), _2049);
        _2138 = _2122.x * cbModelParam._m0[1u].z;
        _2140 = _2122.y * cbModelParam._m0[1u].z;
        _2142 = _2122.z * cbModelParam._m0[1u].z;
    }
    float _2154 = ((((1.0 - _1144) * ((_1131 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1144 * _1131)) * _1115;
    float _2155 = _2154 * ((cbModelParam._m0[1u].w * (_2138 - _2040)) + _2040);
    float _2156 = _2154 * ((cbModelParam._m0[1u].w * (_2140 - _2042)) + _2042);
    float _2157 = _2154 * ((cbModelParam._m0[1u].w * (_2142 - _2044)) + _2044);
    float _2160 = fma(_2157, cbSceneParam._m0[89u].z, fma(_2156, cbSceneParam._m0[89u].y, _2155 * cbSceneParam._m0[89u].x));
    float _2163 = fma(_2157, cbSceneParam._m0[90u].z, fma(_2156, cbSceneParam._m0[90u].y, _2155 * cbSceneParam._m0[90u].x));
    float _2166 = fma(_2157, cbSceneParam._m0[91u].z, fma(_2156, cbSceneParam._m0[91u].y, _2155 * cbSceneParam._m0[91u].x));
    vec4 _2174 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1052, _1053));
    float _2176 = _2174.w;
    float _2188 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2176);
    float _2189 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2176);
    float _2190 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2176);
    uvec4 _2194 = floatBitsToUint(cbInstanceData._m0[_284 + 5u]);
    uint _2196 = _2194.x * 14u;
    uint _2197 = _2196 + 13u;
    float _2204 = _1115 + (-1.0);
    float _2209 = (cbLight._m0[_2197].x * _2204) + 1.0;
    float _2210 = (cbLight._m0[_2197].y * _2204) + 1.0;
    float _2211 = (cbLight._m0[_2197].z * _2204) + 1.0;
    float _2212 = (cbLight._m0[_2197].w * _2204) + 1.0;
    uint _2213 = _2196 + 5u;
    float _2219 = isnan(1.0) ? _2210 : (isnan(_2210) ? 1.0 : min(_2210, 1.0));
    uint _2223 = _2196 + 4u;
    float _2232 = isnan(1.0) ? _2209 : (isnan(_2209) ? 1.0 : min(_2209, 1.0));
    uint _2236 = _2196 | 1u;
    float _2247 = dot(vec3(cbLight._m0[_2196].xyz), vec3(_953, _954, _955));
    float _2250 = dot(vec3(cbLight._m0[_2236].xyz), vec3(_953, _954, _955));
    float _4494 = isnan(0.0) ? _2247 : (isnan(_2247) ? 0.0 : max(_2247, 0.0));
    float _4505 = isnan(0.0) ? _2250 : (isnan(_2250) ? 0.0 : max(_2250, 0.0));
    float _2255 = (isnan(1.0) ? _4494 : (isnan(_4494) ? 1.0 : min(_4494, 1.0))) * 0.3183098733425140380859375;
    float _2257 = (isnan(1.0) ? _4505 : (isnan(_4505) ? 1.0 : min(_4505, 1.0))) * 0.3183098733425140380859375;
    float _2264 = ((cbLight._m0[_2213].x * _2219) * _2257) + (((cbLight._m0[_2223].x * _2188) * _2232) * _2255);
    float _2265 = ((_2219 * cbLight._m0[_2213].y) * _2257) + (((cbLight._m0[_2223].y * _2189) * _2232) * _2255);
    float _2266 = ((_2219 * cbLight._m0[_2213].z) * _2257) + (((cbLight._m0[_2223].z * _2190) * _2232) * _2255);
    uvec4 _2270 = floatBitsToUint(cbLight._m0[_2196 + 12u]);
    bool _2272 = _2270.x == 0u;
    float _2283;
    float _2285;
    float _2287;
    if (_2272)
    {
        _2283 = _2264;
        _2285 = _2265;
        _2287 = _2266;
    }
    else
    {
        uint _2291 = _2196 + 6u;
        float _2307 = (dot(vec3(cbLight._m0[_2196 + 2u].xyz), vec3(_953, _954, _955)) * 0.5) + 0.5;
        float _2308 = _2307 * _2307;
        float _4516 = isnan(0.0) ? _2308 : (isnan(_2308) ? 0.0 : max(_2308, 0.0));
        float _2309 = isnan(1.0) ? _4516 : (isnan(_4516) ? 1.0 : min(_4516, 1.0));
        float _2310 = isnan(1.0) ? _2211 : (isnan(_2211) ? 1.0 : min(_2211, 1.0));
        _2283 = (((cbLight._m0[_2291].x * 0.3183098733425140380859375) * _2309) * _2310) + _2264;
        _2285 = (((cbLight._m0[_2291].y * 0.3183098733425140380859375) * _2309) * _2310) + _2265;
        _2287 = (((cbLight._m0[_2291].z * 0.3183098733425140380859375) * _2309) * _2310) + _2266;
    }
    bool _2290 = _2270.y == 0u;
    float _2328;
    float _2330;
    float _2332;
    if (_2290)
    {
        _2328 = _2283;
        _2330 = _2285;
        _2332 = _2287;
    }
    else
    {
        uint _2490 = _2196 + 7u;
        float _2506 = (dot(vec3(cbLight._m0[_2196 + 3u].xyz), vec3(_953, _954, _955)) * 0.5) + 0.5;
        float _2507 = _2506 * _2506;
        float _4532 = isnan(0.0) ? _2507 : (isnan(_2507) ? 0.0 : max(_2507, 0.0));
        float _2508 = isnan(1.0) ? _4532 : (isnan(_4532) ? 1.0 : min(_4532, 1.0));
        float _2509 = isnan(1.0) ? _2212 : (isnan(_2212) ? 1.0 : min(_2212, 1.0));
        _2328 = (((cbLight._m0[_2490].x * 0.3183098733425140380859375) * _2508) * _2509) + _2283;
        _2330 = (((cbLight._m0[_2490].y * 0.3183098733425140380859375) * _2508) * _2509) + _2285;
        _2332 = (((cbLight._m0[_2490].z * 0.3183098733425140380859375) * _2508) * _2509) + _2287;
    }
    uint _2335 = _2196 + 8u;
    float _2348 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2196].w)) * _956) * 0.949999988079071044921875);
    float _2349 = _2348 * _2348;
    float _2350 = cbLight._m0[_2196].x + _1032;
    float _2351 = cbLight._m0[_2196].y + _1033;
    float _2352 = cbLight._m0[_2196].z + _1034;
    float _2356 = inversesqrt(dot(vec3(_2350, _2351, _2352), vec3(_2350, _2351, _2352)));
    float _2357 = _2356 * _2350;
    float _2358 = _2356 * _2351;
    float _2359 = _2356 * _2352;
    float _2360 = dot(vec3(_953, _954, _955), vec3(cbLight._m0[_2196].xyz));
    float _4548 = isnan(0.0) ? _2360 : (isnan(_2360) ? 0.0 : max(_2360, 0.0));
    float _2363 = isnan(1.0) ? _4548 : (isnan(_4548) ? 1.0 : min(_4548, 1.0));
    float _4559 = isnan(0.0) ? _1116 : (isnan(_1116) ? 0.0 : max(_1116, 0.0));
    float _2364 = isnan(1.0) ? _4559 : (isnan(_4559) ? 1.0 : min(_4559, 1.0));
    float _2365 = dot(vec3(_953, _954, _955), vec3(_2357, _2358, _2359));
    float _4570 = isnan(0.0) ? _2365 : (isnan(_2365) ? 0.0 : max(_2365, 0.0));
    float _2368 = isnan(1.0) ? _4570 : (isnan(_4570) ? 1.0 : min(_4570, 1.0));
    float _2369 = dot(vec3(cbLight._m0[_2196].xyz), vec3(_2357, _2358, _2359));
    float _4581 = isnan(0.0) ? _2369 : (isnan(_2369) ? 0.0 : max(_2369, 0.0));
    float _2373 = _2349 * _2349;
    float _2377 = ((_2368 * _2368) * (_2373 + (-1.0))) + 1.0;
    float _2388 = (exp2(log2(1.0 - (isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2389 = 1.0 - _2349;
    float _2400 = (0.5 / (((_2364 * ((_2363 * _2389) + _2349)) + 9.9999999392252902907785028219223e-09) + (((_2364 * _2389) + _2349) * _2363))) * _2363;
    float _4592 = isnan(0.0) ? _2400 : (isnan(_2400) ? 0.0 : max(_2400, 0.0));
    float _2402 = (isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0))) * (_2373 / ((_2377 * _2377) * 3.141590118408203125));
    uint _2416 = _2196 + 9u;
    float _2427 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2236].w)) * _956) * 0.949999988079071044921875);
    float _2428 = _2427 * _2427;
    float _2429 = cbLight._m0[_2236].x + _1032;
    float _2430 = cbLight._m0[_2236].y + _1033;
    float _2431 = cbLight._m0[_2236].z + _1034;
    float _2435 = inversesqrt(dot(vec3(_2429, _2430, _2431), vec3(_2429, _2430, _2431)));
    float _2436 = _2435 * _2429;
    float _2437 = _2435 * _2430;
    float _2438 = _2435 * _2431;
    float _2439 = dot(vec3(_953, _954, _955), vec3(cbLight._m0[_2236].xyz));
    float _4603 = isnan(0.0) ? _2439 : (isnan(_2439) ? 0.0 : max(_2439, 0.0));
    float _2442 = isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0));
    float _2443 = dot(vec3(_953, _954, _955), vec3(_2436, _2437, _2438));
    float _4614 = isnan(0.0) ? _2443 : (isnan(_2443) ? 0.0 : max(_2443, 0.0));
    float _2446 = isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0));
    float _2447 = dot(vec3(cbLight._m0[_2236].xyz), vec3(_2436, _2437, _2438));
    float _4625 = isnan(0.0) ? _2447 : (isnan(_2447) ? 0.0 : max(_2447, 0.0));
    float _2451 = _2428 * _2428;
    float _2455 = ((_2446 * _2446) * (_2451 + (-1.0))) + 1.0;
    float _2464 = (exp2(log2(1.0 - (isnan(1.0) ? _4625 : (isnan(_4625) ? 1.0 : min(_4625, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2465 = 1.0 - _2428;
    float _2475 = (0.5 / (((_2364 * ((_2442 * _2465) + _2428)) + 9.9999999392252902907785028219223e-09) + (((_2364 * _2465) + _2428) * _2442))) * _2442;
    float _4636 = isnan(0.0) ? _2475 : (isnan(_2475) ? 0.0 : max(_2475, 0.0));
    float _2477 = (isnan(1.0) ? _4636 : (isnan(_4636) ? 1.0 : min(_4636, 1.0))) * (_2451 / ((_2455 * _2455) * 3.141590118408203125));
    float _2487 = (((_2464 * cbLight._m0[_2416].x) * _2477) * _2219) + ((((cbLight._m0[_2335].x * _2188) * _2388) * _2402) * _2232);
    float _2488 = (((_2464 * cbLight._m0[_2416].y) * _2477) * _2219) + ((((cbLight._m0[_2335].y * _2189) * _2388) * _2402) * _2232);
    float _2489 = (((_2464 * cbLight._m0[_2416].z) * _2477) * _2219) + ((((cbLight._m0[_2335].z * _2190) * _2388) * _2402) * _2232);
    float _2551;
    float _2553;
    float _2555;
    if (_2272)
    {
        _2551 = _2487;
        _2553 = _2488;
        _2555 = _2489;
    }
    else
    {
        uint _2557 = _2196 + 2u;
        uint _2561 = _2196 + 10u;
        float _2575 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2557].w)) * _956) * 0.949999988079071044921875);
        float _2576 = _2575 * _2575;
        float _2577 = cbLight._m0[_2557].x + _1032;
        float _2578 = cbLight._m0[_2557].y + _1033;
        float _2579 = cbLight._m0[_2557].z + _1034;
        float _2583 = inversesqrt(dot(vec3(_2577, _2578, _2579), vec3(_2577, _2578, _2579)));
        float _2584 = _2583 * _2577;
        float _2585 = _2583 * _2578;
        float _2586 = _2583 * _2579;
        float _2587 = dot(vec3(_953, _954, _955), vec3(cbLight._m0[_2557].xyz));
        float _4647 = isnan(0.0) ? _2587 : (isnan(_2587) ? 0.0 : max(_2587, 0.0));
        float _2590 = isnan(1.0) ? _4647 : (isnan(_4647) ? 1.0 : min(_4647, 1.0));
        float _2591 = dot(vec3(_953, _954, _955), vec3(_2584, _2585, _2586));
        float _4658 = isnan(0.0) ? _2591 : (isnan(_2591) ? 0.0 : max(_2591, 0.0));
        float _2594 = isnan(1.0) ? _4658 : (isnan(_4658) ? 1.0 : min(_4658, 1.0));
        float _2595 = dot(vec3(cbLight._m0[_2557].xyz), vec3(_2584, _2585, _2586));
        float _4669 = isnan(0.0) ? _2595 : (isnan(_2595) ? 0.0 : max(_2595, 0.0));
        float _2599 = _2576 * _2576;
        float _2603 = ((_2594 * _2594) * (_2599 + (-1.0))) + 1.0;
        float _2612 = (exp2(log2(1.0 - (isnan(1.0) ? _4669 : (isnan(_4669) ? 1.0 : min(_4669, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2613 = 1.0 - _2576;
        float _2623 = (0.5 / (((_2364 * ((_2590 * _2613) + _2576)) + 9.9999999392252902907785028219223e-09) + (((_2364 * _2613) + _2576) * _2590))) * _2590;
        float _4680 = isnan(0.0) ? _2623 : (isnan(_2623) ? 0.0 : max(_2623, 0.0));
        float _2625 = (isnan(1.0) ? _4680 : (isnan(_4680) ? 1.0 : min(_4680, 1.0))) * (_2599 / ((_2603 * _2603) * 3.141590118408203125));
        float _2626 = isnan(1.0) ? _2211 : (isnan(_2211) ? 1.0 : min(_2211, 1.0));
        _2551 = (((_2612 * cbLight._m0[_2561].x) * _2625) * _2626) + _2487;
        _2553 = (((_2612 * cbLight._m0[_2561].y) * _2625) * _2626) + _2488;
        _2555 = (((_2612 * cbLight._m0[_2561].z) * _2625) * _2626) + _2489;
    }
    float _2661;
    float _2663;
    float _2665;
    if (_2290)
    {
        _2661 = _2551;
        _2663 = _2553;
        _2665 = _2555;
    }
    else
    {
        uint _2672 = _2196 + 3u;
        uint _2676 = _2196 + 11u;
        float _2690 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2672].w)) * _956) * 0.949999988079071044921875);
        float _2691 = _2690 * _2690;
        float _2692 = cbLight._m0[_2672].x + _1032;
        float _2693 = cbLight._m0[_2672].y + _1033;
        float _2694 = cbLight._m0[_2672].z + _1034;
        float _2698 = inversesqrt(dot(vec3(_2692, _2693, _2694), vec3(_2692, _2693, _2694)));
        float _2699 = _2698 * _2692;
        float _2700 = _2698 * _2693;
        float _2701 = _2698 * _2694;
        float _2702 = dot(vec3(_953, _954, _955), vec3(cbLight._m0[_2672].xyz));
        float _4696 = isnan(0.0) ? _2702 : (isnan(_2702) ? 0.0 : max(_2702, 0.0));
        float _2705 = isnan(1.0) ? _4696 : (isnan(_4696) ? 1.0 : min(_4696, 1.0));
        float _2706 = dot(vec3(_953, _954, _955), vec3(_2699, _2700, _2701));
        float _4707 = isnan(0.0) ? _2706 : (isnan(_2706) ? 0.0 : max(_2706, 0.0));
        float _2709 = isnan(1.0) ? _4707 : (isnan(_4707) ? 1.0 : min(_4707, 1.0));
        float _2710 = dot(vec3(cbLight._m0[_2672].xyz), vec3(_2699, _2700, _2701));
        float _4718 = isnan(0.0) ? _2710 : (isnan(_2710) ? 0.0 : max(_2710, 0.0));
        float _2714 = _2691 * _2691;
        float _2718 = ((_2709 * _2709) * (_2714 + (-1.0))) + 1.0;
        float _2727 = (exp2(log2(1.0 - (isnan(1.0) ? _4718 : (isnan(_4718) ? 1.0 : min(_4718, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2728 = 1.0 - _2691;
        float _2738 = (0.5 / (((_2364 * ((_2705 * _2728) + _2691)) + 9.9999999392252902907785028219223e-09) + (((_2364 * _2728) + _2691) * _2705))) * _2705;
        float _4729 = isnan(0.0) ? _2738 : (isnan(_2738) ? 0.0 : max(_2738, 0.0));
        float _2740 = (isnan(1.0) ? _4729 : (isnan(_4729) ? 1.0 : min(_4729, 1.0))) * (_2714 / ((_2718 * _2718) * 3.141590118408203125));
        float _2741 = isnan(1.0) ? _2212 : (isnan(_2212) ? 1.0 : min(_2212, 1.0));
        _2661 = (((_2727 * cbLight._m0[_2676].x) * _2740) * _2741) + _2551;
        _2663 = (((_2727 * cbLight._m0[_2676].y) * _2740) * _2741) + _2553;
        _2665 = (((_2727 * cbLight._m0[_2676].z) * _2740) * _2741) + _2555;
    }
    float _2876;
    float _2878;
    float _2880;
    float _2882;
    float _2884;
    float _2886;
    if (_2194.y == 0u)
    {
        float _2816 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2817 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2816;
        float _2818 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2816;
        float _2819 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2816;
        uvec4 _2831 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2832 = _2831.x;
        uint _2843 = uint((float(_2831.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1053) / _2832))) + floor(float(uint(cbSceneParam._m0[85u].x * _1052) / _2832)));
        float _2853 = (log2(_2819 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2854 = isnan(0.0) ? _2853 : (isnan(_2853) ? 0.0 : max(_2853, 0.0));
        uint _2857 = uint(isnan(14.0) ? _2854 : (isnan(_2854) ? 14.0 : min(_2854, 14.0)));
        uvec4 _2862 = texelFetch(g_lightClusterGridBuffer, int(((_2857 << 2u) + (_2843 << 6u)) >> 2u));
        uint _2863 = _2862.x;
        uint _2864 = _2831.z;
        float _2964;
        float _2966;
        float _2968;
        float _2970;
        float _2972;
        float _2974;
        if (((((1u << ((_2864 >> 4u) & 15u)) + 4294967295u) & _2863) == 0u) || ((_2864 & 240u) == 0u))
        {
            _2964 = 0.0;
            _2966 = 0.0;
            _2968 = 0.0;
            _2970 = 0.0;
            _2972 = 0.0;
            _2974 = 0.0;
        }
        else
        {
            float _2965;
            float _2967;
            float _2969;
            float _2971;
            float _2973;
            float _2975;
            float _3117 = 0.0;
            float _3118 = 0.0;
            float _3119 = 0.0;
            float _3120 = 0.0;
            float _3121 = 0.0;
            float _3122 = 0.0;
            uint _3123 = 0u;
            uint _3132;
            bool _3133;
            for (;;)
            {
                _3132 = texelFetch(g_lightClassification, int((((_2857 << 5u) + (_2843 << 9u)) + (_3123 << 2u)) >> 2u)).x;
                _3133 = _3132 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3133)
                {
                    frontier_phi_66_pred = _3117;
                    frontier_phi_66_pred_1 = _3122;
                    frontier_phi_66_pred_2 = _3121;
                    frontier_phi_66_pred_3 = _3120;
                    frontier_phi_66_pred_4 = _3119;
                    frontier_phi_66_pred_5 = _3118;
                }
                else
                {
                    float _3262;
                    float _3263;
                    float _3264;
                    float _3265;
                    float _3266;
                    float _3267;
                    uint _3268;
                    _3262 = _3117;
                    _3263 = _3118;
                    _3264 = _3119;
                    _3265 = _3120;
                    _3266 = _3121;
                    _3267 = _3122;
                    _3268 = _3132;
                    float _3189;
                    float _3190;
                    float _3191;
                    float _3192;
                    float _3193;
                    float _3194;
                    for (;;)
                    {
                        uint _3272 = uint(findLSB(_3268)) + (_3123 << 5u);
                        uint _3269 = (_3268 + 4294967295u) & _3268;
                        uint _3274 = _3272 * 48u;
                        vec4 _3288 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3274)).x, texelFetch(g_PointLightRenderingBuffer, int(_3274 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3274 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3274 + 3u)).x));
                        uint _3294 = (_3272 * 48u) + 4u;
                        vec4 _3307 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3294)).x, texelFetch(g_PointLightRenderingBuffer, int(_3294 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3294 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3294 + 3u)).x));
                        uint _3313 = (_3272 * 48u) + 8u;
                        vec3 _3324 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3313)).x, texelFetch(g_PointLightRenderingBuffer, int(_3313 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3313 + 2u)).x));
                        float _3328 = _3288.x - _2817;
                        float _3329 = _3288.y - _2818;
                        float _3330 = _3288.z - _2819;
                        float _3331 = dot(vec3(_3328, _3329, _3330), vec3(_3328, _3329, _3330));
                        float _3334 = inversesqrt(_3331);
                        float _3335 = _3334 * _3328;
                        float _3336 = _3334 * _3329;
                        float _3337 = _3334 * _3330;
                        float _3338 = dot(vec3(_1071, _1074, _1077), vec3(_3335, _3336, _3337));
                        float _3343 = 1.0 - (_3331 * _3288.w);
                        float _4755 = isnan(0.0) ? _3343 : (isnan(_3343) ? 0.0 : max(_3343, 0.0));
                        float _3344 = isnan(1.0) ? _4755 : (isnan(_4755) ? 1.0 : min(_4755, 1.0));
                        float _3345 = sqrt(_3331) * _3307.w;
                        float _3348 = 1.39999997615814208984375 / (_3345 + 1.39999997615814208984375);
                        float _3349 = _3348 * _3348;
                        float _3352 = ((1.0 - _3349) * _3338) + _3349;
                        float _3355 = _3345 * _3345;
                        float _3359 = ((isnan(0.0) ? _3352 : (isnan(_3352) ? 0.0 : max(_3352, 0.0))) * _3344) / ((_3355 * 0.699999988079071044921875) + 1.0);
                        float _3363 = (-0.0) - _2817;
                        float _3364 = (-0.0) - _2818;
                        float _3365 = (-0.0) - _2819;
                        float _3369 = inversesqrt(dot(vec3(_3363, _3364, _3365), vec3(_3363, _3364, _3365)));
                        float _3370 = _3369 * _3363;
                        float _3371 = _3369 * _3364;
                        float _3372 = _3369 * _3365;
                        float _3380 = exp2(log2(1.0 / ((_3355 * 3.5) + 5.0)) * 0.25);
                        float _3381 = 1.0 - _1131;
                        float _3388 = sqrt(1.0 - ((1.0 - (_3381 * _3381)) * (1.0 - (_3380 * _3380))));
                        float _3389 = _3388 * _3388;
                        float _3390 = _3389 * _3389;
                        float _3391 = _3370 + _3335;
                        float _3392 = _3371 + _3336;
                        float _3393 = _3372 + _3337;
                        float _3397 = inversesqrt(dot(vec3(_3391, _3392, _3393), vec3(_3391, _3392, _3393)));
                        float _3401 = dot(vec3(_1071, _1074, _1077), vec3(_3370, _3371, _3372));
                        float _4771 = isnan(0.0) ? _3401 : (isnan(_3401) ? 0.0 : max(_3401, 0.0));
                        float _3404 = isnan(1.0) ? _4771 : (isnan(_4771) ? 1.0 : min(_4771, 1.0));
                        float _3405 = dot(vec3(_1071, _1074, _1077), vec3(_3397 * _3391, _3397 * _3392, _3397 * _3393));
                        float _4782 = isnan(0.0) ? _3405 : (isnan(_3405) ? 0.0 : max(_3405, 0.0));
                        float _3408 = isnan(1.0) ? _4782 : (isnan(_4782) ? 1.0 : min(_4782, 1.0));
                        float _3412 = ((_3408 * _3408) * (_3390 + (-1.0))) + 1.0;
                        float _3413 = _3348 * _3389;
                        float _3414 = _3413 * _3413;
                        float _3417 = ((1.0 - _3414) * _3338) + _3414;
                        float _4793 = isnan(0.0) ? _3417 : (isnan(_3417) ? 0.0 : max(_3417, 0.0));
                        float _3418 = isnan(1.0) ? _4793 : (isnan(_4793) ? 1.0 : min(_4793, 1.0));
                        float _3419 = 1.0 - _3389;
                        float _3429 = (0.5 / (((_3418 * ((_3404 * _3419) + _3389)) + 9.9999999392252902907785028219223e-09) + (((_3418 * _3419) + _3389) * _3404))) * _3418;
                        float _4804 = isnan(0.0) ? _3429 : (isnan(_3429) ? 0.0 : max(_3429, 0.0));
                        float _3440 = (((_3390 * 3.1415927410125732421875) * (isnan(1.0) ? _4804 : (isnan(_4804) ? 1.0 : min(_4804, 1.0)))) / ((_3412 * _3412) * ((_3355 * 2.1991131305694580078125) + 3.141590118408203125))) * _3344;
                        _3192 = (_3359 * _3307.x) + _3265;
                        _3193 = (_3359 * _3307.y) + _3266;
                        _3194 = (_3359 * _3307.z) + _3267;
                        _3189 = (_3440 * _3324.x) + _3262;
                        _3190 = (_3440 * _3324.y) + _3263;
                        _3191 = (_3440 * _3324.z) + _3264;
                        if (_3269 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3262 = _3189;
                            _3263 = _3190;
                            _3264 = _3191;
                            _3265 = _3192;
                            _3266 = _3193;
                            _3267 = _3194;
                            _3268 = _3269;
                        }
                    }
                    frontier_phi_66_pred = _3189;
                    frontier_phi_66_pred_1 = _3194;
                    frontier_phi_66_pred_2 = _3193;
                    frontier_phi_66_pred_3 = _3192;
                    frontier_phi_66_pred_4 = _3191;
                    frontier_phi_66_pred_5 = _3190;
                }
                _2965 = frontier_phi_66_pred;
                _2975 = frontier_phi_66_pred_1;
                _2973 = frontier_phi_66_pred_2;
                _2971 = frontier_phi_66_pred_3;
                _2969 = frontier_phi_66_pred_4;
                _2967 = frontier_phi_66_pred_5;
                uint _3124 = _3123 + 1u;
                if (_3124 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3117 = _2965;
                    _3118 = _2967;
                    _3119 = _2969;
                    _3120 = _2971;
                    _3121 = _2973;
                    _3122 = _2975;
                    _3123 = _3124;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2964 = _2965;
            _2966 = _2967;
            _2968 = _2969;
            _2970 = _2971;
            _2972 = _2973;
            _2974 = _2975;
        }
        uvec4 _2978 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2979 = _2978.z;
        uint _2981 = (_2979 >> 8u) & 15u;
        float _3085;
        float _3087;
        float _3089;
        float _3091;
        float _3093;
        float _3095;
        if (((4294967295u << _2981) & _2863) == 0u)
        {
            _3085 = _2964;
            _3087 = _2966;
            _3089 = _2968;
            _3091 = _2970;
            _3093 = _2972;
            _3095 = _2974;
        }
        else
        {
            float _3110 = inversesqrt(dot(vec3(_2817, _2818, _2819), vec3(_2817, _2818, _2819)));
            float _3111 = _3110 * _2817;
            float _3112 = _3110 * _2818;
            float _3113 = _3110 * _2819;
            float frontier_phi_58_59_ladder;
            float frontier_phi_58_59_ladder_1;
            float frontier_phi_58_59_ladder_2;
            float frontier_phi_58_59_ladder_3;
            float frontier_phi_58_59_ladder_4;
            float frontier_phi_58_59_ladder_5;
            if (_2981 < ((_2979 >> 12u) & 15u))
            {
                float _3086;
                float _3088;
                float _3090;
                float _3092;
                float _3094;
                float _3096;
                float _3245 = _2964;
                float _3246 = _2966;
                float _3247 = _2968;
                float _3248 = _2970;
                float _3249 = _2972;
                float _3250 = _2974;
                uint _3251 = _2981;
                uint _3260;
                bool _3261;
                for (;;)
                {
                    _3260 = texelFetch(g_lightClassification, int((((_2857 << 5u) + (_2843 << 9u)) + (_3251 << 2u)) >> 2u)).x;
                    _3261 = _3260 == 0u;
                    float frontier_phi_77_pred;
                    float frontier_phi_77_pred_1;
                    float frontier_phi_77_pred_2;
                    float frontier_phi_77_pred_3;
                    float frontier_phi_77_pred_4;
                    float frontier_phi_77_pred_5;
                    if (_3261)
                    {
                        frontier_phi_77_pred = _3250;
                        frontier_phi_77_pred_1 = _3249;
                        frontier_phi_77_pred_2 = _3248;
                        frontier_phi_77_pred_3 = _3247;
                        frontier_phi_77_pred_4 = _3246;
                        frontier_phi_77_pred_5 = _3245;
                    }
                    else
                    {
                        float _3454;
                        float _3455;
                        float _3456;
                        float _3457;
                        float _3458;
                        float _3459;
                        float _3747;
                        float _3748;
                        float _3749;
                        float _3750;
                        float _3751;
                        float _3752;
                        float _3467 = _3245;
                        float _3468 = _3246;
                        float _3469 = _3247;
                        float _3470 = _3248;
                        float _3471 = _3249;
                        float _3472 = _3250;
                        uint _3473 = _3260;
                        uint _3474;
                        vec4 _3499;
                        float _3500;
                        vec4 _3515;
                        vec3 _3527;
                        vec4 _3542;
                        vec4 _3557;
                        float _3603;
                        bool _3604;
                        for (;;)
                        {
                            uint _3484 = ((_3251 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3473));
                            _3474 = (_3473 + 4294967295u) & _3473;
                            uint _3486 = _3484 * 40u;
                            _3499 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3486)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3486 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3486 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3486 + 3u)).x));
                            _3500 = _3499.w;
                            uint _3502 = (_3484 * 40u) + 4u;
                            _3515 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3502)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3502 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3502 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3502 + 3u)).x));
                            uint _3517 = (_3484 * 40u) + 8u;
                            _3527 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3517)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3517 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3517 + 2u)).x));
                            uint _3529 = (_3484 * 40u) + 16u;
                            _3542 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3529)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3529 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3529 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3529 + 3u)).x));
                            uint _3544 = (_3484 * 40u) + 20u;
                            _3557 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3544)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3544 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3544 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3544 + 3u)).x));
                            uint _3559 = (_3484 * 40u) + 24u;
                            vec4 _3572 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3559)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3559 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3559 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3559 + 3u)).x));
                            uint _3578 = (_3484 * 40u) + 28u;
                            vec4 _3591 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3578)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3578 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3578 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3578 + 3u)).x));
                            _3603 = fma(_2819, _3591.z, fma(_2818, _3591.y, _3591.x * _2817)) + _3591.w;
                            _3604 = !((fma(_2819, _3572.z, fma(_2818, _3572.y, _3572.x * _2817)) + _3572.w) <= 0.0);
                            float frontier_phi_83_pred;
                            float frontier_phi_83_pred_1;
                            float frontier_phi_83_pred_2;
                            float frontier_phi_83_pred_3;
                            float frontier_phi_83_pred_4;
                            float frontier_phi_83_pred_5;
                            if (_3604)
                            {
                                float _3631 = _3499.x - _2817;
                                float _3632 = _3499.y - _2818;
                                float _3633 = _3499.z - _2819;
                                float _3634 = dot(vec3(_3631, _3632, _3633), vec3(_3631, _3632, _3633));
                                float _3637 = inversesqrt(_3634);
                                float _3638 = _3637 * _3631;
                                float _3639 = _3637 * _3632;
                                float _3640 = _3637 * _3633;
                                float _3644 = 1.0 - (_3634 / (_3500 * _3500));
                                float _4815 = isnan(0.0) ? _3644 : (isnan(_3644) ? 0.0 : max(_3644, 0.0));
                                float _3645 = isnan(1.0) ? _4815 : (isnan(_4815) ? 1.0 : min(_4815, 1.0));
                                float _3649 = sqrt(_3634) * _3515.w;
                                float _3651 = 1.39999997615814208984375 / (_3649 + 1.39999997615814208984375);
                                float _3652 = _3651 * _3651;
                                float _3655 = ((1.0 - _3652) * dot(vec3(_3638, _3639, _3640), vec3(_1071, _1074, _1077))) + _3652;
                                float _3658 = _3649 * _3649;
                                float _3662 = (fma(_2819, _3542.z, fma(_2818, _3542.y, _3542.x * _2817)) + _3542.w) / _3603;
                                float _3663 = (fma(_2819, _3557.z, fma(_2818, _3557.y, _3557.x * _2817)) + _3557.w) / _3603;
                                float _3667 = 1.0 - dot(vec2(_3662, _3663), vec2(_3662, _3663));
                                float _4831 = isnan(0.0) ? _3667 : (isnan(_3667) ? 0.0 : max(_3667, 0.0));
                                float _3668 = isnan(1.0) ? _4831 : (isnan(_4831) ? 1.0 : min(_4831, 1.0));
                                float _3669 = _3668 * (((isnan(0.0) ? _3655 : (isnan(_3655) ? 0.0 : max(_3655, 0.0))) * _3645) / ((_3658 * 0.699999988079071044921875) + 1.0));
                                float _3681 = exp2(log2(1.0 / ((_3658 * 3.5) + 5.0)) * 0.25);
                                float _3682 = 1.0 - _1131;
                                float _3689 = sqrt(1.0 - ((1.0 - (_3682 * _3682)) * (1.0 - (_3681 * _3681))));
                                float _3690 = _3689 * _3689;
                                float _3691 = _3690 * _3690;
                                float _3692 = _3638 - _3111;
                                float _3693 = _3639 - _3112;
                                float _3694 = _3640 - _3113;
                                float _3698 = inversesqrt(dot(vec3(_3692, _3693, _3694), vec3(_3692, _3693, _3694)));
                                float _3702 = dot(vec3(_1071, _1074, _1077), vec3((-0.0) - _3111, (-0.0) - _3112, (-0.0) - _3113));
                                float _4842 = isnan(0.0) ? _3702 : (isnan(_3702) ? 0.0 : max(_3702, 0.0));
                                float _3705 = isnan(1.0) ? _4842 : (isnan(_4842) ? 1.0 : min(_4842, 1.0));
                                float _3706 = dot(vec3(_1071, _1074, _1077), vec3(_3698 * _3692, _3698 * _3693, _3698 * _3694));
                                float _4853 = isnan(0.0) ? _3706 : (isnan(_3706) ? 0.0 : max(_3706, 0.0));
                                float _3709 = isnan(1.0) ? _4853 : (isnan(_4853) ? 1.0 : min(_4853, 1.0));
                                float _3713 = ((_3709 * _3709) * (_3691 + (-1.0))) + 1.0;
                                float _3714 = _3651 * _3690;
                                float _3715 = _3714 * _3714;
                                float _3721 = ((1.0 - _3715) * dot(vec3(_1071, _1074, _1077), vec3(_3638, _3639, _3640))) + _3715;
                                float _4864 = isnan(0.0) ? _3721 : (isnan(_3721) ? 0.0 : max(_3721, 0.0));
                                float _3722 = isnan(1.0) ? _4864 : (isnan(_4864) ? 1.0 : min(_4864, 1.0));
                                float _3723 = 1.0 - _3690;
                                float _3733 = (0.5 / (((_3722 * ((_3705 * _3723) + _3690)) + 9.9999999392252902907785028219223e-09) + (((_3722 * _3723) + _3690) * _3705))) * _3722;
                                float _4875 = isnan(0.0) ? _3733 : (isnan(_3733) ? 0.0 : max(_3733, 0.0));
                                float _3743 = (_3668 * _3645) * (((_3691 * 3.1415927410125732421875) * (isnan(1.0) ? _4875 : (isnan(_4875) ? 1.0 : min(_4875, 1.0)))) / ((_3713 * _3713) * ((_3658 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_83_pred = _3669 * _3515.y;
                                frontier_phi_83_pred_1 = _3669 * _3515.x;
                                frontier_phi_83_pred_2 = _3743 * _3527.z;
                                frontier_phi_83_pred_3 = _3743 * _3527.y;
                                frontier_phi_83_pred_4 = _3743 * _3527.x;
                                frontier_phi_83_pred_5 = _3669 * _3515.z;
                            }
                            else
                            {
                                frontier_phi_83_pred = 0.0;
                                frontier_phi_83_pred_1 = 0.0;
                                frontier_phi_83_pred_2 = 0.0;
                                frontier_phi_83_pred_3 = 0.0;
                                frontier_phi_83_pred_4 = 0.0;
                                frontier_phi_83_pred_5 = 0.0;
                            }
                            _3751 = frontier_phi_83_pred;
                            _3750 = frontier_phi_83_pred_1;
                            _3749 = frontier_phi_83_pred_2;
                            _3748 = frontier_phi_83_pred_3;
                            _3747 = frontier_phi_83_pred_4;
                            _3752 = frontier_phi_83_pred_5;
                            _3457 = _3750 + _3470;
                            _3458 = _3751 + _3471;
                            _3459 = _3752 + _3472;
                            _3454 = _3747 + _3467;
                            _3455 = _3748 + _3468;
                            _3456 = _3749 + _3469;
                            if (_3474 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3467 = _3454;
                                _3468 = _3455;
                                _3469 = _3456;
                                _3470 = _3457;
                                _3471 = _3458;
                                _3472 = _3459;
                                _3473 = _3474;
                                continue;
                            }
                        }
                        frontier_phi_77_pred = _3459;
                        frontier_phi_77_pred_1 = _3458;
                        frontier_phi_77_pred_2 = _3457;
                        frontier_phi_77_pred_3 = _3456;
                        frontier_phi_77_pred_4 = _3455;
                        frontier_phi_77_pred_5 = _3454;
                    }
                    _3096 = frontier_phi_77_pred;
                    _3094 = frontier_phi_77_pred_1;
                    _3092 = frontier_phi_77_pred_2;
                    _3090 = frontier_phi_77_pred_3;
                    _3088 = frontier_phi_77_pred_4;
                    _3086 = frontier_phi_77_pred_5;
                    uint _3252 = _3251 + 1u;
                    if (_3252 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3245 = _3086;
                        _3246 = _3088;
                        _3247 = _3090;
                        _3248 = _3092;
                        _3249 = _3094;
                        _3250 = _3096;
                        _3251 = _3252;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_58_59_ladder = _3090;
                frontier_phi_58_59_ladder_1 = _3096;
                frontier_phi_58_59_ladder_2 = _3094;
                frontier_phi_58_59_ladder_3 = _3092;
                frontier_phi_58_59_ladder_4 = _3088;
                frontier_phi_58_59_ladder_5 = _3086;
            }
            else
            {
                frontier_phi_58_59_ladder = _2968;
                frontier_phi_58_59_ladder_1 = _2974;
                frontier_phi_58_59_ladder_2 = _2972;
                frontier_phi_58_59_ladder_3 = _2970;
                frontier_phi_58_59_ladder_4 = _2966;
                frontier_phi_58_59_ladder_5 = _2964;
            }
            _3085 = frontier_phi_58_59_ladder_5;
            _3087 = frontier_phi_58_59_ladder_4;
            _3089 = frontier_phi_58_59_ladder;
            _3091 = frontier_phi_58_59_ladder_3;
            _3093 = frontier_phi_58_59_ladder_2;
            _3095 = frontier_phi_58_59_ladder_1;
        }
        float _3100 = isnan(1.0) ? _1115 : (isnan(_1115) ? 1.0 : min(_1115, 1.0));
        _2876 = (_3100 * _3091) + _2328;
        _2878 = (_3100 * _3093) + _2330;
        _2880 = (_3100 * _3095) + _2332;
        _2882 = ((_3085 * 0.039999999105930328369140625) * _3100) + _2661;
        _2884 = ((_3087 * 0.039999999105930328369140625) * _3100) + _2663;
        _2886 = ((_3089 * 0.039999999105930328369140625) * _3100) + _2665;
    }
    else
    {
        _2876 = _2328;
        _2878 = _2330;
        _2880 = _2332;
        _2882 = _2661;
        _2884 = _2663;
        _2886 = _2665;
    }
    float _4891 = isnan(0.0) ? _1100 : (isnan(_1100) ? 0.0 : max(_1100, 0.0));
    float _4902 = isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0));
    float _4913 = isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0));
    float _2903 = ((isnan(1.0) ? _4891 : (isnan(_4891) ? 1.0 : min(_4891, 1.0))) * (_2876 + ((isnan(0.0) ? _1870 : (isnan(_1870) ? 0.0 : max(_1870, 0.0))) * _1115))) + ((_2882 + ((isnan(0.0) ? _2160 : (isnan(_2160) ? 0.0 : max(_2160, 0.0))) * _1949)) * cbPerFrame._m0[3u].x);
    float _2904 = ((isnan(1.0) ? _4902 : (isnan(_4902) ? 1.0 : min(_4902, 1.0))) * (_2878 + ((isnan(0.0) ? _1873 : (isnan(_1873) ? 0.0 : max(_1873, 0.0))) * _1115))) + ((_2884 + ((isnan(0.0) ? _2163 : (isnan(_2163) ? 0.0 : max(_2163, 0.0))) * _1949)) * cbPerFrame._m0[3u].x);
    float _2905 = ((isnan(1.0) ? _4913 : (isnan(_4913) ? 1.0 : min(_4913, 1.0))) * (_2880 + ((isnan(0.0) ? _1876 : (isnan(_1876) ? 0.0 : max(_1876, 0.0))) * _1115))) + ((_2886 + ((isnan(0.0) ? _2166 : (isnan(_2166) ? 0.0 : max(_2166, 0.0))) * _1949)) * cbPerFrame._m0[3u].x);
    uint _2906 = _284 + 6u;
    float _2914 = _1052 / cbSceneParam._m0[86u].x;
    float _2915 = _1053 / cbSceneParam._m0[86u].y;
    vec4 _2929 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2914, _2915, (log2((isnan(cbSceneParam._m0[77u].w) ? _974 : (isnan(_974) ? cbSceneParam._m0[77u].w : min(_974, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2931 = _2929.x;
    float _2932 = _2929.y;
    float _2933 = _2929.z;
    float _2934 = _2929.w;
    float _3027;
    float _3029;
    float _3031;
    float _3033;
    if (_974 > cbSceneParam._m0[78u].w)
    {
        float _2989 = isnan(_974) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _974 : min(cbSceneParam._m0[80u].w, _974));
        float _2990 = _2989 / _974;
        float _3001 = _2990 * _1025;
        float _3002 = _1026 * _2990;
        float _3003 = (-0.0) - _3002;
        float _3005 = _2990 * _1027;
        float _3007 = (cbSceneParam._m0[77u].w * _3003) / _2989;
        float _3008 = _3007 + cbSceneParam._m0[79u].w;
        float _3009 = cbSceneParam._m0[79u].w - _3002;
        float _3015 = sqrt(((_3001 * _3001) + (_3002 * _3002)) + (_3005 * _3005));
        float _3018 = (1.0 - (cbSceneParam._m0[77u].w / _2989)) * _3015;
        float _3023 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3025 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3202;
        if (abs((_3003 - _3007) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3202 = ((((_3008 > 0.0) ? exp2(_3023 * _3008) : (2.0 - exp2(_3025 * _3008))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3018;
        }
        else
        {
            float _3146 = 1.0 / cbSceneParam._m0[80u].x;
            float _3147 = isnan(_3009) ? _3008 : (isnan(_3008) ? _3009 : max(_3008, _3009));
            float _3148 = isnan(_3009) ? _3008 : (isnan(_3008) ? _3009 : min(_3008, _3009));
            float _3157 = isnan(0.0) ? _3147 : (isnan(_3147) ? 0.0 : min(_3147, 0.0));
            float _3158 = isnan(0.0) ? _3148 : (isnan(_3148) ? 0.0 : min(_3148, 0.0));
            _3202 = ((abs(_3015 / _3003) * cbSceneParam._m0[80u].y) * ((((_3157 - _3158) * 2.0) - ((exp2(_3023 * (isnan(0.0) ? _3147 : (isnan(_3147) ? 0.0 : max(_3147, 0.0)))) - exp2(_3023 * (isnan(0.0) ? _3148 : (isnan(_3148) ? 0.0 : max(_3148, 0.0))))) * _3146)) - ((exp2(_3025 * _3157) - exp2(_3025 * _3158)) * _3146))) + (_3018 * cbSceneParam._m0[80u].z);
        }
        vec4 _3204 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2914, _2915, 1.0), 0.0);
        float _3213 = exp2((_3202 * (-1.44269502162933349609375)) * (1.0 - _3204.w));
        float _3214 = log2(_3213);
        float _3230 = log2(_2934);
        _3027 = (exp2(_3230 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3214 * cbSceneParam._m0[78u].x)) * _3204.x) / cbSceneParam._m0[78u].x)) + _2931;
        _3029 = (exp2(_3230 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3214 * cbSceneParam._m0[78u].y)) * _3204.y) / cbSceneParam._m0[78u].y)) + _2932;
        _3031 = (exp2(_3230 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3214 * cbSceneParam._m0[78u].z)) * _3204.z) / cbSceneParam._m0[78u].z)) + _2933;
        _3033 = _3213 * _2934;
    }
    else
    {
        _3027 = _2931;
        _3029 = _2932;
        _3031 = _2933;
        _3033 = _2934;
    }
    bool _3240;
    vec4 _3043;
    vec4 _3065;
    float _3067;
    float _3071;
    float _3072;
    float _3073;
    float _3074;
    bool _3084;
    for (;;)
    {
        _3043 = cbMatDynParam._m0[0u];
        float _3045 = roundEven(_3043.y);
        bool _3046 = _3045 == 3.0;
        float _3047 = log2(_3033);
        float _3054 = exp2(_3047 * cbSceneParam._m0[78u].x) * _2903;
        float _3055 = exp2(_3047 * cbSceneParam._m0[78u].y) * _2904;
        float _3056 = exp2(_3047 * cbSceneParam._m0[78u].z) * _2905;
        float _3063 = _1041 + (-0.5);
        _3065 = cbMtdParam._m0[1u];
        _3067 = _3065.y * _3063;
        float _3070 = (_3045 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3071 = _3070 * (_3046 ? _3054 : (_3054 + (cbSceneParam._m0[72u].w * _3027)));
        _3072 = _3070 * (_3046 ? _3055 : (_3055 + (cbSceneParam._m0[72u].w * _3029)));
        _3073 = _3070 * (_3046 ? _3056 : (_3056 + (cbSceneParam._m0[72u].w * _3031)));
        _3074 = _3063 * 0.999000012874603271484375;
        _3084 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3084)
        {
            if ((cbInstanceData._m0[_284 + 7u].x + _3074) < 0.5)
            {
                _3240 = true;
                break;
            }
        }
        uint _3181 = _1090 + uint(_3043.w);
        if ((cbInstanceData._m0[_3181].w < 1.0) && ((cbInstanceData._m0[_3181].w + _3074) < 0.5))
        {
            _3240 = true;
            break;
        }
        if ((_3067 + 1.0) < _3065.x)
        {
            _3240 = true;
            break;
        }
        _3240 = false;
        break;
    }
    float _3445;
    if (_3240)
    {
        discard_state = true;
        _3445 = 0.0;
    }
    else
    {
        _3445 = cbInstanceData._m0[_2906].w;
    }
    SV_Target.x = _3071;
    SV_Target.y = _3072;
    SV_Target.z = _3073;
    SV_Target.w = _3445;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2906].w;
    discard_exit();
}


