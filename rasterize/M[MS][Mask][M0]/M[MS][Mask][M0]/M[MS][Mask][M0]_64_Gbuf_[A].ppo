#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _190 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _191 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _192 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _198 = inversesqrt(dot(vec3(_190, _191, _192), vec3(_190, _191, _192)));
    float _205 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _212 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _226 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _228 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _229 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _1026 = isnan(0.0) ? _226 : (isnan(_226) ? 0.0 : max(_226, 0.0));
    float _1037 = isnan(0.0) ? _228 : (isnan(_228) ? 0.0 : max(_228, 0.0));
    float _1048 = isnan(0.0) ? _229 : (isnan(_229) ? 0.0 : max(_229, 0.0));
    uint _239 = uint(roundEven(NORMAL.w)) * 13u;
    uint _244 = _239 + 1u;
    uint _248 = _239 + 2u;
    float _257 = sqrt(((cbInstanceData._m0[_244].x * cbInstanceData._m0[_244].x) + (cbInstanceData._m0[_239].x * cbInstanceData._m0[_239].x)) + (cbInstanceData._m0[_248].x * cbInstanceData._m0[_248].x));
    float _258 = _257 * TEXCOORD.z;
    float _259 = _257 * TEXCOORD.w;
    vec4 _272 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _258) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _259) + cbTextureTilingScale._m0[13u].w));
    vec4 _295 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _321 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _326 = _321.x * cbMtdParam._m0[11u].x;
    float _327 = _321.y * cbMtdParam._m0[11u].y;
    float _328 = _321.z * cbMtdParam._m0[11u].z;
    vec4 _347 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _258) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _259) + cbTextureTilingScale._m0[5u].w));
    vec4 _366 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _402 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _404 = _402.x;
    float _417 = dot(vec4(_404, _402.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _434 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _366.x) * 2.0) - ((((_404 - _417) * cbMtdParam._m0[24u].z) + _417) * cbMtdParam._m0[23u].x))) + 1.0;
    float _1059 = isnan(0.0) ? _434 : (isnan(_434) ? 0.0 : max(_434, 0.0));
    float _435 = isnan(1.0) ? _1059 : (isnan(_1059) ? 1.0 : min(_1059, 1.0));
    float _442 = (_435 * ((_347.x * cbMtdParam._m0[12u].x) - _326)) + _326;
    float _443 = (_435 * ((_347.y * cbMtdParam._m0[12u].y) - _327)) + _327;
    float _444 = (_435 * ((_347.z * cbMtdParam._m0[12u].z) - _328)) + _328;
    vec4 _461 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _258) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _259) + cbTextureTilingScale._m0[3u].w));
    vec4 _481 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _483 = _481.x;
    float _493 = dot(vec4(_483, _481.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _507 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _366.y) * 2.0) - ((((_483 - _493) * cbMtdParam._m0[24u].z) + _493) * cbMtdParam._m0[20u].w))) + 1.0;
    float _1070 = isnan(0.0) ? _507 : (isnan(_507) ? 0.0 : max(_507, 0.0));
    float _508 = isnan(1.0) ? _1070 : (isnan(_1070) ? 1.0 : min(_1070, 1.0));
    float _518 = (_295.x * cbMtdParam._m0[9u].x) * ((_508 * ((_461.x * cbMtdParam._m0[13u].x) - _442)) + _442);
    float _519 = (_295.y * cbMtdParam._m0[9u].y) * ((_508 * ((_461.y * cbMtdParam._m0[13u].y) - _443)) + _443);
    float _520 = (_295.z * cbMtdParam._m0[9u].z) * ((_508 * ((_461.z * cbMtdParam._m0[13u].z) - _444)) + _444);
    float _524 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _272.x) * _518;
    float _527 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _272.y) * _519;
    float _530 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _272.z) * _520;
    float _538 = (((_518 - _524) * (isnan(1.0) ? _1026 : (isnan(_1026) ? 1.0 : min(_1026, 1.0)))) + _524) * 4.55000019073486328125;
    float _540 = (((_519 - _527) * (isnan(1.0) ? _1037 : (isnan(_1037) ? 1.0 : min(_1037, 1.0)))) + _527) * 4.55000019073486328125;
    float _542 = (((_520 - _530) * (isnan(1.0) ? _1048 : (isnan(_1048) ? 1.0 : min(_1048, 1.0)))) + _530) * 4.55000019073486328125;
    vec4 _559 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _258) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _259) + cbTextureTilingScale._m0[20u].w));
    vec4 _582 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _258) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _259) + cbTextureTilingScale._m0[4u].w));
    vec4 _599 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _601 = _599.x;
    float _602 = _599.y;
    float _603 = _599.z;
    float _610 = ((_582.x - _601) * _435) + _601;
    float _611 = ((_582.y - _602) * _435) + _602;
    float _612 = ((_582.z - _603) * _435) + _603;
    vec4 _624 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _258) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _259) + cbTextureTilingScale._m0[2u].w));
    float _637 = ((_624.z - _612) * _508) + _612;
    float _640 = ((((_624.x - _610) * _508) + _610) * 2.0) + (-1.0);
    float _641 = ((((_624.y - _611) * _508) + _611) * 2.0) + (-1.0);
    float _642 = dot(vec2(_640, _641), vec2(_640, _641));
    float _1081 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
    float _647 = sqrt(1.0 - (isnan(1.0) ? _1081 : (isnan(_1081) ? 1.0 : min(_1081, 1.0))));
    vec4 _661 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _686 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _258) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _259) + cbTextureTilingScale._m0[11u].w));
    float _688 = _686.x;
    float _689 = 1.0 - _688;
    float _702 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_688 - _689) * cbMtdParam._m0[24u].w) + _689) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _1092 = isnan(0.0) ? _702 : (isnan(_702) ? 0.0 : max(_702, 0.0));
    float _703 = isnan(1.0) ? _1092 : (isnan(_1092) ? 1.0 : min(_1092, 1.0));
    float _710 = (_703 * (cbMtdParam._m0[17u].x - _538)) + _538;
    float _711 = (_703 * (cbMtdParam._m0[17u].y - _540)) + _540;
    float _712 = (_703 * (cbMtdParam._m0[17u].z - _542)) + _542;
    float _717 = (((_559.z - _637) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _637;
    float _721 = ((_661.z - _717) * cbMtdParam._m0[19u].w) + _717;
    vec4 _734 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _258) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _259) + cbTextureTilingScale._m0[15u].w));
    float _741 = (_734.x * 2.0) + (-1.0);
    float _742 = (_734.y * 2.0) + (-1.0);
    float _743 = dot(vec2(_741, _742), vec2(_741, _742));
    float _1103 = isnan(0.0) ? _743 : (isnan(_743) ? 0.0 : max(_743, 0.0));
    float _751 = (_703 * (_734.z - _721)) + _721;
    float _760 = (_640 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_559.x * 2.0) + (-1.0)))) + (((_661.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _761 = (_641 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_559.y * 2.0) + (-1.0)))) + (((_661.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _773 = (((_741 - _760) + (cbMtdParam._m0[21u].x * _760)) * _703) + _760;
    float _774 = (((_742 - _761) + (cbMtdParam._m0[21u].x * _761)) * _703) + _761;
    float _775 = (_703 * (sqrt(1.0 - (isnan(1.0) ? _1103 : (isnan(_1103) ? 1.0 : min(_1103, 1.0)))) - _647)) + _647;
    float _777 = cbMtdParam._m0[22u].x + _661.w;
    float _780 = fma(_775, _205 * NORMAL.x, fma(_774, _212 * TANGENT.x, (_198 * _190) * _773));
    float _783 = fma(_775, _205 * NORMAL.y, fma(_774, _212 * TANGENT.y, (_198 * _191) * _773));
    float _786 = fma(_775, _205 * NORMAL.z, fma(_774, _212 * TANGENT.z, (_198 * _192) * _773));
    float _790 = inversesqrt(dot(vec3(_780, _783, _786), vec3(_780, _783, _786)));
    float _1114 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
    float _1125 = isnan(0.0) ? _777 : (isnan(_777) ? 0.0 : max(_777, 0.0));
    float _792 = isnan(1.0) ? _1125 : (isnan(_1125) ? 1.0 : min(_1125, 1.0));
    float _1136 = isnan(0.0) ? _710 : (isnan(_710) ? 0.0 : max(_710, 0.0));
    float _793 = isnan(1.0) ? _1136 : (isnan(_1136) ? 1.0 : min(_1136, 1.0));
    float _1147 = isnan(0.0) ? _711 : (isnan(_711) ? 0.0 : max(_711, 0.0));
    float _794 = isnan(1.0) ? _1147 : (isnan(_1147) ? 1.0 : min(_1147, 1.0));
    float _1158 = isnan(0.0) ? _712 : (isnan(_712) ? 0.0 : max(_712, 0.0));
    float _795 = isnan(1.0) ? _1158 : (isnan(_1158) ? 1.0 : min(_1158, 1.0));
    float _836 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _846 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _836);
    float _847 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _836);
    float _848 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _836);
    vec4 _853 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _855 = _853.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _915 = sqrt(((_846 * _846) + (_847 * _847)) + (_848 * _848));
        float _921 = (cbMatDynParam._m0[5u].x * _915) + cbMatDynParam._m0[5u].y;
        float _1169 = isnan(0.0) ? _921 : (isnan(_921) ? 0.0 : max(_921, 0.0));
        float _922 = isnan(1.0) ? _1169 : (isnan(_1169) ? 1.0 : min(_1169, 1.0));
        float _926 = (cbMatDynParam._m0[5u].z * _915) + cbMatDynParam._m0[5u].w;
        float _1180 = isnan(0.0) ? _926 : (isnan(_926) ? 0.0 : max(_926, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1180 : (isnan(_1180) ? 1.0 : min(_1180, 1.0))) - _922)) + _922) < ((_855 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _953;
    vec4 _877;
    float _884;
    float _885;
    float _886;
    float _887;
    float _891;
    vec4 _895;
    float _897;
    float _898;
    bool _909;
    for (;;)
    {
        _877 = cbInstanceData._m0[(_239 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _881 = (cbMtdParam._m0[0u].x * _793) * _877.x;
        float _882 = (cbMtdParam._m0[0u].y * _794) * _877.y;
        float _883 = (cbMtdParam._m0[0u].z * _795) * _877.z;
        float _1191 = isnan(0.0) ? _881 : (isnan(_881) ? 0.0 : max(_881, 0.0));
        _884 = isnan(1.0) ? _1191 : (isnan(_1191) ? 1.0 : min(_1191, 1.0));
        float _1202 = isnan(0.0) ? _882 : (isnan(_882) ? 0.0 : max(_882, 0.0));
        _885 = isnan(1.0) ? _1202 : (isnan(_1202) ? 1.0 : min(_1202, 1.0));
        float _1213 = isnan(0.0) ? _883 : (isnan(_883) ? 0.0 : max(_883, 0.0));
        _886 = isnan(1.0) ? _1213 : (isnan(_1213) ? 1.0 : min(_1213, 1.0));
        _887 = _792 * TEXCOORD_5.w;
        _891 = cbInstanceData._m0[_239 + 6u].w;
        float _892 = _855 + (-0.5);
        _895 = cbMtdParam._m0[1u];
        _897 = _895.y * _892;
        _898 = _892 * 0.999000012874603271484375;
        _909 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_909)
        {
            if ((cbInstanceData._m0[_239 + 7u].x + _898) < 0.5)
            {
                _953 = true;
                break;
            }
        }
        if ((_877.w < 1.0) && ((_877.w + _898) < 0.5))
        {
            _953 = true;
            break;
        }
        if ((_897 + 1.0) < _895.x)
        {
            _953 = true;
            break;
        }
        _953 = false;
        break;
    }
    if (_953)
    {
        discard_state = true;
    }
    bool _979 = cbMtdParam._m0[1u].z != 0.0;
    float _980 = _979 ? _891 : 0.0;
    SV_Target.x = ((_780 * 0.5) * _790) + 0.500488758087158203125;
    SV_Target.y = ((_783 * 0.5) * _790) + 0.500488758087158203125;
    SV_Target.z = ((_786 * 0.5) * _790) + 0.500488758087158203125;
    SV_Target.w = _980;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _1114 : (isnan(_1114) ? 1.0 : min(_1114, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _979 ? _891 : _887;
    SV_Target_2.x = _884;
    SV_Target_2.y = _885;
    SV_Target_2.z = _886;
    SV_Target_2.w = _979 ? _891 : (float(floatBitsToUint(cbInstanceData._m0[_239 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _980;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _980;
    discard_exit();
}


