#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _176 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _177 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _178 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _184 = inversesqrt(dot(vec3(_176, _177, _178), vec3(_176, _177, _178)));
    float _191 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _198 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _212 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _214 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _215 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _796 = isnan(0.0) ? _212 : (isnan(_212) ? 0.0 : max(_212, 0.0));
    float _807 = isnan(0.0) ? _214 : (isnan(_214) ? 0.0 : max(_214, 0.0));
    float _818 = isnan(0.0) ? _215 : (isnan(_215) ? 0.0 : max(_215, 0.0));
    uint _225 = uint(roundEven(NORMAL.w)) * 13u;
    uint _230 = _225 + 1u;
    uint _234 = _225 + 2u;
    float _243 = sqrt(((cbInstanceData._m0[_230].x * cbInstanceData._m0[_230].x) + (cbInstanceData._m0[_225].x * cbInstanceData._m0[_225].x)) + (cbInstanceData._m0[_234].x * cbInstanceData._m0[_234].x));
    float _244 = _243 * TEXCOORD.z;
    float _245 = _243 * TEXCOORD.w;
    vec4 _258 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _244) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _245) + cbTextureTilingScale._m0[13u].w));
    vec4 _282 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _287 = _282.x * cbMtdParam._m0[11u].x;
    float _288 = _282.y * cbMtdParam._m0[11u].y;
    float _289 = _282.z * cbMtdParam._m0[11u].z;
    vec4 _308 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _244) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _245) + cbTextureTilingScale._m0[5u].w));
    vec4 _360 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _362 = _360.x;
    float _375 = dot(vec4(_362, _360.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _392 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w)).x) * 2.0) - ((((_362 - _375) * cbMtdParam._m0[24u].z) + _375) * cbMtdParam._m0[23u].x))) + 1.0;
    float _829 = isnan(0.0) ? _392 : (isnan(_392) ? 0.0 : max(_392, 0.0));
    float _393 = isnan(1.0) ? _829 : (isnan(_829) ? 1.0 : min(_829, 1.0));
    float _400 = (_393 * ((_308.x * cbMtdParam._m0[12u].x) - _287)) + _287;
    float _401 = (_393 * ((_308.y * cbMtdParam._m0[12u].y) - _288)) + _288;
    float _402 = (_393 * ((_308.z * cbMtdParam._m0[12u].z) - _289)) + _289;
    float _406 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _258.x) * _400;
    float _409 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _258.y) * _401;
    float _412 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _258.z) * _402;
    float _419 = ((_400 - _406) * (isnan(1.0) ? _796 : (isnan(_796) ? 1.0 : min(_796, 1.0)))) + _406;
    float _420 = ((_401 - _409) * (isnan(1.0) ? _807 : (isnan(_807) ? 1.0 : min(_807, 1.0)))) + _409;
    float _421 = ((_402 - _412) * (isnan(1.0) ? _818 : (isnan(_818) ? 1.0 : min(_818, 1.0)))) + _412;
    vec4 _434 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _244) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _245) + cbTextureTilingScale._m0[20u].w));
    vec4 _459 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _244) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _245) + cbTextureTilingScale._m0[4u].w));
    vec4 _476 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _478 = _476.x;
    float _479 = _476.y;
    float _480 = _476.z;
    float _489 = ((_459.z - _480) * _393) + _480;
    float _492 = ((((_459.x - _478) * _393) + _478) * 2.0) + (-1.0);
    float _493 = ((((_459.y - _479) * _393) + _479) * 2.0) + (-1.0);
    float _494 = dot(vec2(_492, _493), vec2(_492, _493));
    float _840 = isnan(0.0) ? _494 : (isnan(_494) ? 0.0 : max(_494, 0.0));
    float _499 = sqrt(1.0 - (isnan(1.0) ? _840 : (isnan(_840) ? 1.0 : min(_840, 1.0))));
    vec4 _521 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _533 = (_492 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_434.x * 2.0) + (-1.0)))) + (((_521.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _534 = (_493 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_434.y * 2.0) + (-1.0)))) + (((_521.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _539 = (((_434.z - _489) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _489;
    float _543 = ((_521.z - _539) * cbMtdParam._m0[19u].w) + _539;
    float _545 = cbMtdParam._m0[22u].x + _521.w;
    float _548 = fma(_499, _191 * NORMAL.x, fma(_534, _198 * TANGENT.x, (_184 * _176) * _533));
    float _551 = fma(_499, _191 * NORMAL.y, fma(_534, _198 * TANGENT.y, (_184 * _177) * _533));
    float _554 = fma(_499, _191 * NORMAL.z, fma(_534, _198 * TANGENT.z, (_184 * _178) * _533));
    float _558 = inversesqrt(dot(vec3(_548, _551, _554), vec3(_548, _551, _554)));
    float _851 = isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : max(_543, 0.0));
    float _862 = isnan(0.0) ? _545 : (isnan(_545) ? 0.0 : max(_545, 0.0));
    float _560 = isnan(1.0) ? _862 : (isnan(_862) ? 1.0 : min(_862, 1.0));
    float _873 = isnan(0.0) ? _419 : (isnan(_419) ? 0.0 : max(_419, 0.0));
    float _561 = isnan(1.0) ? _873 : (isnan(_873) ? 1.0 : min(_873, 1.0));
    float _884 = isnan(0.0) ? _420 : (isnan(_420) ? 0.0 : max(_420, 0.0));
    float _562 = isnan(1.0) ? _884 : (isnan(_884) ? 1.0 : min(_884, 1.0));
    float _895 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
    float _563 = isnan(1.0) ? _895 : (isnan(_895) ? 1.0 : min(_895, 1.0));
    float _605 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _615 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _605);
    float _616 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _605);
    float _617 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _605);
    vec4 _622 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _624 = _622.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _684 = sqrt(((_615 * _615) + (_616 * _616)) + (_617 * _617));
        float _690 = (cbMatDynParam._m0[5u].x * _684) + cbMatDynParam._m0[5u].y;
        float _906 = isnan(0.0) ? _690 : (isnan(_690) ? 0.0 : max(_690, 0.0));
        float _691 = isnan(1.0) ? _906 : (isnan(_906) ? 1.0 : min(_906, 1.0));
        float _695 = (cbMatDynParam._m0[5u].z * _684) + cbMatDynParam._m0[5u].w;
        float _917 = isnan(0.0) ? _695 : (isnan(_695) ? 0.0 : max(_695, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _917 : (isnan(_917) ? 1.0 : min(_917, 1.0))) - _691)) + _691) < ((_624 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _723;
    vec4 _646;
    float _653;
    float _654;
    float _655;
    float _656;
    float _660;
    vec4 _664;
    float _666;
    float _667;
    bool _678;
    for (;;)
    {
        _646 = cbInstanceData._m0[(_225 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _650 = (cbMtdParam._m0[0u].x * _561) * _646.x;
        float _651 = (cbMtdParam._m0[0u].y * _562) * _646.y;
        float _652 = (cbMtdParam._m0[0u].z * _563) * _646.z;
        float _928 = isnan(0.0) ? _650 : (isnan(_650) ? 0.0 : max(_650, 0.0));
        _653 = isnan(1.0) ? _928 : (isnan(_928) ? 1.0 : min(_928, 1.0));
        float _939 = isnan(0.0) ? _651 : (isnan(_651) ? 0.0 : max(_651, 0.0));
        _654 = isnan(1.0) ? _939 : (isnan(_939) ? 1.0 : min(_939, 1.0));
        float _950 = isnan(0.0) ? _652 : (isnan(_652) ? 0.0 : max(_652, 0.0));
        _655 = isnan(1.0) ? _950 : (isnan(_950) ? 1.0 : min(_950, 1.0));
        _656 = _560 * TEXCOORD_5.w;
        _660 = cbInstanceData._m0[_225 + 6u].w;
        float _661 = _624 + (-0.5);
        _664 = cbMtdParam._m0[1u];
        _666 = _664.y * _661;
        _667 = _661 * 0.999000012874603271484375;
        _678 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_678)
        {
            if ((cbInstanceData._m0[_225 + 7u].x + _667) < 0.5)
            {
                _723 = true;
                break;
            }
        }
        if ((_646.w < 1.0) && ((_646.w + _667) < 0.5))
        {
            _723 = true;
            break;
        }
        if ((_666 + 1.0) < _664.x)
        {
            _723 = true;
            break;
        }
        _723 = false;
        break;
    }
    if (_723)
    {
        discard_state = true;
    }
    bool _749 = cbMtdParam._m0[1u].z != 0.0;
    float _750 = _749 ? _660 : 0.0;
    SV_Target.x = ((_548 * 0.5) * _558) + 0.500488758087158203125;
    SV_Target.y = ((_551 * 0.5) * _558) + 0.500488758087158203125;
    SV_Target.z = ((_554 * 0.5) * _558) + 0.500488758087158203125;
    SV_Target.w = _750;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _851 : (isnan(_851) ? 1.0 : min(_851, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _749 ? _660 : _656;
    SV_Target_2.x = _653;
    SV_Target_2.y = _654;
    SV_Target_2.z = _655;
    SV_Target_2.w = _749 ? _660 : (float(floatBitsToUint(cbInstanceData._m0[_225 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _750;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _750;
    discard_exit();
}


