#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1473;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _235 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _236 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _237 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _243 = inversesqrt(dot(vec3(_235, _236, _237), vec3(_235, _236, _237)));
    float _250 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _257 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _263 = uint(roundEven(NORMAL.w)) * 13u;
    uint _268 = _263 + 1u;
    uint _272 = _263 + 2u;
    float _281 = sqrt(((cbInstanceData._m0[_268].x * cbInstanceData._m0[_268].x) + (cbInstanceData._m0[_263].x * cbInstanceData._m0[_263].x)) + (cbInstanceData._m0[_272].x * cbInstanceData._m0[_272].x));
    float _282 = _281 * TEXCOORD.z;
    float _283 = _281 * TEXCOORD.w;
    vec4 _302 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _326 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _331 = _326.x * cbMtdParam._m0[11u].x;
    float _332 = _326.y * cbMtdParam._m0[11u].y;
    float _333 = _326.z * cbMtdParam._m0[11u].z;
    vec4 _352 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _282) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _283) + cbTextureTilingScale._m0[5u].w));
    vec4 _371 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _411 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _413 = _411.x;
    float _425 = dot(vec4(_413, _411.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _442 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _371.x) * 2.0) - ((((_413 - _425) * cbMtdParam._m0[24u].z) + _425) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4059 = isnan(0.0) ? _442 : (isnan(_442) ? 0.0 : max(_442, 0.0));
    float _443 = isnan(1.0) ? _4059 : (isnan(_4059) ? 1.0 : min(_4059, 1.0));
    float _450 = (_443 * ((_352.x * cbMtdParam._m0[12u].x) - _331)) + _331;
    float _451 = (_443 * ((_352.y * cbMtdParam._m0[12u].y) - _332)) + _332;
    float _452 = (_443 * ((_352.z * cbMtdParam._m0[12u].z) - _333)) + _333;
    vec4 _469 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _282) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _283) + cbTextureTilingScale._m0[3u].w));
    vec4 _489 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _491 = _489.x;
    float _501 = dot(vec4(_491, _489.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _515 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _371.y) * 2.0) - ((((_491 - _501) * cbMtdParam._m0[24u].z) + _501) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4070 = isnan(0.0) ? _515 : (isnan(_515) ? 0.0 : max(_515, 0.0));
    float _516 = isnan(1.0) ? _4070 : (isnan(_4070) ? 1.0 : min(_4070, 1.0));
    float _523 = (_516 * ((_469.x * cbMtdParam._m0[13u].x) - _450)) + _450;
    float _524 = (_516 * ((_469.y * cbMtdParam._m0[13u].y) - _451)) + _451;
    float _525 = (_516 * ((_469.z * cbMtdParam._m0[13u].z) - _452)) + _452;
    vec4 _543 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _282) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _283) + cbTextureTilingScale._m0[24u].w));
    vec4 _560 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _562 = _560.x;
    float _572 = dot(vec4(_562, _560.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _584 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _371.z) * 2.0) - ((((_562 - _572) * cbMtdParam._m0[24u].z) + _572) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4081 = isnan(0.0) ? _584 : (isnan(_584) ? 0.0 : max(_584, 0.0));
    float _585 = isnan(1.0) ? _4081 : (isnan(_4081) ? 1.0 : min(_4081, 1.0));
    float _598 = ((cbMtdParam._m0[9u].x * 4.55000019073486328125) * _302.x) * ((_585 * ((_543.x * cbMtdParam._m0[14u].x) - _523)) + _523);
    float _601 = ((cbMtdParam._m0[9u].y * 4.55000019073486328125) * _302.y) * ((_585 * ((_543.y * cbMtdParam._m0[14u].y) - _524)) + _524);
    float _604 = ((cbMtdParam._m0[9u].z * 4.55000019073486328125) * _302.z) * ((_585 * ((_543.z * cbMtdParam._m0[14u].z) - _525)) + _525);
    vec4 _622 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _282) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _283) + cbTextureTilingScale._m0[4u].w));
    vec4 _639 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _641 = _639.x;
    float _642 = _639.y;
    float _643 = _639.z;
    float _650 = ((_622.x - _641) * _443) + _641;
    float _651 = ((_622.y - _642) * _443) + _642;
    float _652 = ((_622.z - _643) * _443) + _643;
    vec4 _664 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _282) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _283) + cbTextureTilingScale._m0[2u].w));
    float _675 = ((_664.x - _650) * _516) + _650;
    float _676 = ((_664.y - _651) * _516) + _651;
    float _677 = ((_664.z - _652) * _516) + _652;
    vec4 _689 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _282) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _283) + cbTextureTilingScale._m0[23u].w));
    float _702 = ((_689.z - _677) * _585) + _677;
    float _705 = ((((_689.x - _675) * _585) + _675) * 2.0) + (-1.0);
    float _707 = ((((_689.y - _676) * _585) + _676) * 2.0) + (-1.0);
    float _708 = dot(vec2(_705, _707), vec2(_705, _707));
    float _4092 = isnan(0.0) ? _708 : (isnan(_708) ? 0.0 : max(_708, 0.0));
    float _713 = sqrt(1.0 - (isnan(1.0) ? _4092 : (isnan(_4092) ? 1.0 : min(_4092, 1.0))));
    vec4 _727 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _752 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _282) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _283) + cbTextureTilingScale._m0[11u].w));
    float _754 = _752.x;
    float _755 = 1.0 - _754;
    float _761 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _764 = ((isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : min(_761, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _773 = (_764 - ((((((_754 - _755) * cbMtdParam._m0[24u].w) + _755) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _764))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4113 = isnan(0.0) ? _773 : (isnan(_773) ? 0.0 : max(_773, 0.0));
    float _774 = isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0));
    float _781 = (_774 * (cbMtdParam._m0[17u].x - _598)) + _598;
    float _782 = (_774 * (cbMtdParam._m0[17u].y - _601)) + _601;
    float _783 = (_774 * (cbMtdParam._m0[17u].z - _604)) + _604;
    vec4 _795 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _282) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _283) + cbTextureTilingScale._m0[19u].w));
    float _797 = _795.x;
    float _798 = 1.0 - _797;
    float _825 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_797 - _798) * cbMtdParam._m0[24u].y) + _798) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4124 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _826 = isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0));
    float _834 = ((((cbMtdParam._m0[10u].x - _781) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _826) + _781;
    float _835 = ((((cbMtdParam._m0[10u].y - _782) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _826) + _782;
    float _836 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _783)) * _826) + _783;
    float _840 = (cbMtdParam._m0[19u].w * (_727.z - _702)) + _702;
    vec4 _854 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _282) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _283) + cbTextureTilingScale._m0[15u].w));
    float _861 = (_854.x * 2.0) + (-1.0);
    float _862 = (_854.y * 2.0) + (-1.0);
    float _863 = dot(vec2(_861, _862), vec2(_861, _862));
    float _4135 = isnan(0.0) ? _863 : (isnan(_863) ? 0.0 : max(_863, 0.0));
    float _871 = (_774 * (_854.z - _840)) + _840;
    float _874 = ((cbMtdParam._m0[23u].y - _871) * _826) + _871;
    vec4 _893 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _282) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _283) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _899 = (_893.x * 2.0) + (-1.0);
    float _900 = (_893.y * 2.0) + (-1.0);
    float _901 = dot(vec2(_899, _900), vec2(_899, _900));
    float _4146 = isnan(0.0) ? _901 : (isnan(_901) ? 0.0 : max(_901, 0.0));
    float _909 = (((_727.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _705;
    float _910 = (((_727.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _707;
    float _922 = (((_861 - _909) + (cbMtdParam._m0[21u].x * _909)) * _774) + _909;
    float _923 = (((_862 - _910) + (cbMtdParam._m0[21u].x * _910)) * _774) + _910;
    float _924 = (_774 * (sqrt(1.0 - (isnan(1.0) ? _4135 : (isnan(_4135) ? 1.0 : min(_4135, 1.0)))) - _713)) + _713;
    float _935 = (((_899 - _922) + (_922 * cbMtdParam._m0[22u].z)) * _826) + _922;
    float _936 = (((_900 - _923) + (_923 * cbMtdParam._m0[22u].z)) * _826) + _923;
    float _937 = ((sqrt(1.0 - (isnan(1.0) ? _4146 : (isnan(_4146) ? 1.0 : min(_4146, 1.0)))) - _924) * _826) + _924;
    float _939 = cbMtdParam._m0[22u].x + _727.w;
    float _942 = fma(_937, _250 * NORMAL.x, fma(_936, _257 * TANGENT.x, (_243 * _235) * _935));
    float _945 = fma(_937, _250 * NORMAL.y, fma(_936, _257 * TANGENT.y, (_243 * _236) * _935));
    float _948 = fma(_937, _250 * NORMAL.z, fma(_936, _257 * TANGENT.z, (_243 * _237) * _935));
    float _952 = inversesqrt(dot(vec3(_942, _945, _948), vec3(_942, _945, _948)));
    float _953 = _952 * _942;
    float _954 = _952 * _945;
    float _955 = _952 * _948;
    float _4157 = isnan(0.0) ? _874 : (isnan(_874) ? 0.0 : max(_874, 0.0));
    float _956 = isnan(1.0) ? _4157 : (isnan(_4157) ? 1.0 : min(_4157, 1.0));
    float _4168 = isnan(0.0) ? _939 : (isnan(_939) ? 0.0 : max(_939, 0.0));
    float _4179 = isnan(0.0) ? _834 : (isnan(_834) ? 0.0 : max(_834, 0.0));
    float _4190 = isnan(0.0) ? _835 : (isnan(_835) ? 0.0 : max(_835, 0.0));
    float _4201 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
    float _974 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1014 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1024 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1014);
    float _1025 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1014);
    float _1026 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1014);
    float _1030 = inversesqrt(dot(vec3(_1024, _1025, _1026), vec3(_1024, _1025, _1026)));
    float _1031 = _1024 * _1030;
    float _1032 = _1025 * _1030;
    float _1033 = _1026 * _1030;
    float _1039 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1040 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1058 = fma(_955, cbSceneParam._m0[5u].z, fma(_954, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _953));
    float _1061 = fma(_955, cbSceneParam._m0[6u].z, fma(_954, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _953));
    float _1064 = fma(_955, cbSceneParam._m0[7u].z, fma(_954, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _953));
    uint _1078 = (_263 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1084 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4179 : (isnan(_4179) ? 1.0 : min(_4179, 1.0)))) * cbInstanceData._m0[_1078].x;
    float _1085 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4190 : (isnan(_4190) ? 1.0 : min(_4190, 1.0)))) * cbInstanceData._m0[_1078].y;
    float _1086 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4201 : (isnan(_4201) ? 1.0 : min(_4201, 1.0)))) * cbInstanceData._m0[_1078].z;
    float _4212 = isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0));
    float _1087 = isnan(1.0) ? _4212 : (isnan(_4212) ? 1.0 : min(_4212, 1.0));
    float _4223 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
    float _1088 = isnan(1.0) ? _4223 : (isnan(_4223) ? 1.0 : min(_4223, 1.0));
    float _4234 = isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0));
    float _1089 = isnan(1.0) ? _4234 : (isnan(_4234) ? 1.0 : min(_4234, 1.0));
    vec4 _1098 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1039, cbSceneParam._m0[86u].y * _1040));
    float _1102 = ((isnan(1.0) ? _4168 : (isnan(_4168) ? 1.0 : min(_4168, 1.0))) * TEXCOORD_5.w) * _1098.x;
    float _1103 = dot(vec3(_953, _954, _955), vec3(_1031, _1032, _1033));
    float _1106 = _1103 * 2.0;
    float _1110 = (_1106 * _953) - _1031;
    float _1111 = (_1106 * _954) - _1032;
    float _1112 = (_1106 * _955) - _1033;
    float _1116 = abs(dot(vec3(_1031, _1032, _1033), vec3(_953, _954, _955)));
    float _4245 = isnan(0.0) ? _1116 : (isnan(_1116) ? 0.0 : max(_1116, 0.0));
    float _1118 = sqrt(_956);
    float _1131 = exp2((_1118 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4245 : (isnan(_4245) ? 1.0 : min(_4245, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1118 * 3.0));
    float _1163 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1167 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1171 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1472;
    float _1474;
    float _1475;
    float _1476;
    float _1477;
    float _1478;
    float _1479;
    float _1480;
    float _1481;
    float _1482;
    float _1483;
    float _1484;
    float _1485;
    float _1486;
    float _1487;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1197 = fma(_1171, cbModelParam._m0[26u].z, fma(_1167, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1163));
        float _1201 = fma(_1171, cbModelParam._m0[27u].z, fma(_1167, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1163));
        float _1205 = fma(_1171, cbModelParam._m0[28u].z, fma(_1167, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1163));
        float _1230 = _1163 + _953;
        float _1231 = _1167 + _954;
        float _1232 = _1171 + _955;
        float _1242 = fma(_1232, cbModelParam._m0[26u].z, fma(_1231, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1230)) - _1197;
        float _1243 = fma(_1232, cbModelParam._m0[27u].z, fma(_1231, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1230)) - _1201;
        float _1244 = fma(_1232, cbModelParam._m0[28u].z, fma(_1231, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1230)) - _1205;
        float _1248 = inversesqrt(dot(vec3(_1242, _1243, _1244), vec3(_1242, _1243, _1244)));
        float _1261 = ((_1248 * _1242) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1197 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1262 = ((_1248 * _1243) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1201 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1263 = ((_1248 * _1244) / cbModelParam._m0[34u].z) + ((((((_1205 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1266 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1261, _1262, _1263), 0.0);
        vec4 _1273 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1261, _1262, _1263), 0.0);
        vec4 _1280 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1261, _1262, _1263), 0.0);
        vec4 _1287 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1261, _1262, _1263), 0.0);
        float _1300 = exp2((_1266.w + (-0.5)) * 20.0) * 2.0;
        float _1301 = _1300 * (_1266.x + (-0.5));
        float _1302 = _1300 * (_1266.y + (-0.5));
        float _1303 = _1300 * (_1266.z + (-0.5));
        float _1310 = exp2((_1273.w + (-0.5)) * 20.0) * 2.0;
        float _1311 = _1310 * (_1273.x + (-0.5));
        float _1312 = _1310 * (_1273.y + (-0.5));
        float _1313 = _1310 * (_1273.z + (-0.5));
        float _1320 = exp2((_1280.w + (-0.5)) * 20.0) * 2.0;
        float _1321 = _1320 * (_1280.x + (-0.5));
        float _1322 = _1320 * (_1280.y + (-0.5));
        float _1323 = _1320 * (_1280.z + (-0.5));
        float _1330 = exp2((_1287.w + (-0.5)) * 20.0) * 2.0;
        float _1331 = _1330 * (_1287.x + (-0.5));
        float _1332 = _1330 * (_1287.y + (-0.5));
        float _1333 = _1330 * (_1287.z + (-0.5));
        float _1334 = isnan(0.0) ? _1331 : (isnan(_1331) ? 0.0 : max(_1331, 0.0));
        float _1335 = isnan(0.0) ? _1332 : (isnan(_1332) ? 0.0 : max(_1332, 0.0));
        float _1336 = isnan(0.0) ? _1333 : (isnan(_1333) ? 0.0 : max(_1333, 0.0));
        float _1337 = _1301 * 0.5;
        float _1338 = _1311 * 0.5;
        float _1339 = _1321 * 0.5;
        float _1340 = dot(vec3(_1337, _1338, _1339), vec3(_1337, _1338, _1339));
        float _1345 = (_1340 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1340);
        float _1354 = (dot(vec3(_953, _954, _955), vec3(_1345 * _1337, _1345 * _1338, _1345 * _1339)) + 1.0) * 0.5;
        float _4271 = isnan(0.0) ? _1354 : (isnan(_1354) ? 0.0 : max(_1354, 0.0));
        float _1364 = sqrt(((_1338 * _1338) + (_1337 * _1337)) + (_1339 * _1339)) / (_1334 + 9.9999997473787516355514526367188e-06);
        float _4282 = isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : max(_1364, 0.0));
        float _1365 = isnan(1.0) ? _4282 : (isnan(_4282) ? 1.0 : min(_4282, 1.0));
        float _1366 = _1365 * 2.0;
        float _1370 = (1.0 - _1365) / (_1365 + 1.0);
        float _4293 = isnan(0.0) ? _1370 : (isnan(_1370) ? 0.0 : max(_1370, 0.0));
        float _1371 = isnan(1.0) ? _4293 : (isnan(_4293) ? 1.0 : min(_4293, 1.0));
        float _1380 = ((((1.0 - _1371) * (_1366 + 2.0)) * exp2(log2(isnan(1.0) ? _4271 : (isnan(_4271) ? 1.0 : min(_4271, 1.0))) * (_1366 + 1.0))) + _1371) * _1334;
        float _1381 = _1302 * 0.5;
        float _1382 = _1312 * 0.5;
        float _1383 = _1322 * 0.5;
        float _1384 = dot(vec3(_1381, _1382, _1383), vec3(_1381, _1382, _1383));
        float _1389 = (_1384 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1384);
        float _1397 = (dot(vec3(_953, _954, _955), vec3(_1389 * _1381, _1389 * _1382, _1389 * _1383)) + 1.0) * 0.5;
        float _4304 = isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0));
        float _1406 = sqrt(((_1382 * _1382) + (_1381 * _1381)) + (_1383 * _1383)) / (_1335 + 9.9999997473787516355514526367188e-06);
        float _4315 = isnan(0.0) ? _1406 : (isnan(_1406) ? 0.0 : max(_1406, 0.0));
        float _1407 = isnan(1.0) ? _4315 : (isnan(_4315) ? 1.0 : min(_4315, 1.0));
        float _1408 = _1407 * 2.0;
        float _1412 = (1.0 - _1407) / (_1407 + 1.0);
        float _4326 = isnan(0.0) ? _1412 : (isnan(_1412) ? 0.0 : max(_1412, 0.0));
        float _1413 = isnan(1.0) ? _4326 : (isnan(_4326) ? 1.0 : min(_4326, 1.0));
        float _1422 = ((((1.0 - _1413) * (_1408 + 2.0)) * exp2(log2(isnan(1.0) ? _4304 : (isnan(_4304) ? 1.0 : min(_4304, 1.0))) * (_1408 + 1.0))) + _1413) * _1335;
        float _1423 = _1303 * 0.5;
        float _1424 = _1313 * 0.5;
        float _1425 = _1323 * 0.5;
        float _1426 = dot(vec3(_1423, _1424, _1425), vec3(_1423, _1424, _1425));
        float _1431 = (_1426 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1426);
        float _1439 = (dot(vec3(_953, _954, _955), vec3(_1431 * _1423, _1431 * _1424, _1431 * _1425)) + 1.0) * 0.5;
        float _4337 = isnan(0.0) ? _1439 : (isnan(_1439) ? 0.0 : max(_1439, 0.0));
        float _1448 = sqrt(((_1424 * _1424) + (_1423 * _1423)) + (_1425 * _1425)) / (_1336 + 9.9999997473787516355514526367188e-06);
        float _4348 = isnan(0.0) ? _1448 : (isnan(_1448) ? 0.0 : max(_1448, 0.0));
        float _1449 = isnan(1.0) ? _4348 : (isnan(_4348) ? 1.0 : min(_4348, 1.0));
        float _1450 = _1449 * 2.0;
        float _1454 = (1.0 - _1449) / (_1449 + 1.0);
        float _4359 = isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0));
        float _1455 = isnan(1.0) ? _4359 : (isnan(_4359) ? 1.0 : min(_4359, 1.0));
        float _1464 = ((((1.0 - _1455) * (_1450 + 2.0)) * exp2(log2(isnan(1.0) ? _4337 : (isnan(_4337) ? 1.0 : min(_4337, 1.0))) * (_1450 + 1.0))) + _1455) * _1336;
        _1472 = _1303;
        _1474 = _1302;
        _1475 = _1301;
        _1476 = _1313;
        _1477 = _1312;
        _1478 = _1311;
        _1479 = _1323;
        _1480 = _1322;
        _1481 = _1321;
        _1482 = _1336;
        _1483 = _1335;
        _1484 = _1334;
        _1485 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1380 : (isnan(_1380) ? 0.0 : max(_1380, 0.0)));
        _1486 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0)));
        _1487 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1464 : (isnan(_1464) ? 0.0 : max(_1464, 0.0)));
    }
    else
    {
        _1472 = _1473;
        _1474 = _1473;
        _1475 = _1473;
        _1476 = _1473;
        _1477 = _1473;
        _1478 = _1473;
        _1479 = _1473;
        _1480 = _1473;
        _1481 = _1473;
        _1482 = _1473;
        _1483 = _1473;
        _1484 = _1473;
        _1485 = 0.0;
        _1486 = 0.0;
        _1487 = 0.0;
    }
    float _1779;
    float _1780;
    float _1781;
    float _1782;
    float _1783;
    float _1784;
    float _1785;
    float _1786;
    float _1787;
    float _1788;
    float _1789;
    float _1790;
    float _1791;
    float _1792;
    float _1793;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1510 = fma(_1171, cbModelParam._m0[30u].z, fma(_1167, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1163));
        float _1514 = fma(_1171, cbModelParam._m0[31u].z, fma(_1167, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1163));
        float _1518 = fma(_1171, cbModelParam._m0[32u].z, fma(_1167, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1163));
        float _1541 = _1163 + _953;
        float _1542 = _1167 + _954;
        float _1543 = _1171 + _955;
        float _1553 = fma(_1543, cbModelParam._m0[30u].z, fma(_1542, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1541)) - _1510;
        float _1554 = fma(_1543, cbModelParam._m0[31u].z, fma(_1542, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1541)) - _1514;
        float _1555 = fma(_1543, cbModelParam._m0[32u].z, fma(_1542, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1541)) - _1518;
        float _1559 = inversesqrt(dot(vec3(_1553, _1554, _1555), vec3(_1553, _1554, _1555)));
        float _1572 = ((_1559 * _1553) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1510 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1573 = ((_1559 * _1554) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1514 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1574 = ((_1559 * _1555) / cbModelParam._m0[35u].z) + ((((((_1518 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1576 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1572, _1573, _1574), 0.0);
        vec4 _1583 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1572, _1573, _1574), 0.0);
        vec4 _1590 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1572, _1573, _1574), 0.0);
        vec4 _1597 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1572, _1573, _1574), 0.0);
        float _1609 = exp2((_1576.w + (-0.5)) * 20.0) * 2.0;
        float _1610 = _1609 * (_1576.x + (-0.5));
        float _1611 = _1609 * (_1576.y + (-0.5));
        float _1612 = _1609 * (_1576.z + (-0.5));
        float _1619 = exp2((_1583.w + (-0.5)) * 20.0) * 2.0;
        float _1620 = _1619 * (_1583.x + (-0.5));
        float _1621 = _1619 * (_1583.y + (-0.5));
        float _1622 = _1619 * (_1583.z + (-0.5));
        float _1629 = exp2((_1590.w + (-0.5)) * 20.0) * 2.0;
        float _1630 = _1629 * (_1590.x + (-0.5));
        float _1631 = _1629 * (_1590.y + (-0.5));
        float _1632 = _1629 * (_1590.z + (-0.5));
        float _1639 = exp2((_1597.w + (-0.5)) * 20.0) * 2.0;
        float _1640 = _1639 * (_1597.x + (-0.5));
        float _1641 = _1639 * (_1597.y + (-0.5));
        float _1642 = _1639 * (_1597.z + (-0.5));
        float _1643 = isnan(0.0) ? _1640 : (isnan(_1640) ? 0.0 : max(_1640, 0.0));
        float _1644 = isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0));
        float _1645 = isnan(0.0) ? _1642 : (isnan(_1642) ? 0.0 : max(_1642, 0.0));
        float _1646 = _1610 * 0.5;
        float _1647 = _1620 * 0.5;
        float _1648 = _1630 * 0.5;
        float _1649 = dot(vec3(_1646, _1647, _1648), vec3(_1646, _1647, _1648));
        float _1654 = (_1649 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1649);
        float _1662 = (dot(vec3(_953, _954, _955), vec3(_1654 * _1646, _1654 * _1647, _1654 * _1648)) + 1.0) * 0.5;
        float _4400 = isnan(0.0) ? _1662 : (isnan(_1662) ? 0.0 : max(_1662, 0.0));
        float _1671 = sqrt(((_1647 * _1647) + (_1646 * _1646)) + (_1648 * _1648)) / (_1643 + 9.9999997473787516355514526367188e-06);
        float _4411 = isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0));
        float _1672 = isnan(1.0) ? _4411 : (isnan(_4411) ? 1.0 : min(_4411, 1.0));
        float _1673 = _1672 * 2.0;
        float _1677 = (1.0 - _1672) / (_1672 + 1.0);
        float _4422 = isnan(0.0) ? _1677 : (isnan(_1677) ? 0.0 : max(_1677, 0.0));
        float _1678 = isnan(1.0) ? _4422 : (isnan(_4422) ? 1.0 : min(_4422, 1.0));
        float _1687 = ((((1.0 - _1678) * (_1673 + 2.0)) * exp2(log2(isnan(1.0) ? _4400 : (isnan(_4400) ? 1.0 : min(_4400, 1.0))) * (_1673 + 1.0))) + _1678) * _1643;
        float _1688 = _1611 * 0.5;
        float _1689 = _1621 * 0.5;
        float _1690 = _1631 * 0.5;
        float _1691 = dot(vec3(_1688, _1689, _1690), vec3(_1688, _1689, _1690));
        float _1696 = (_1691 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1691);
        float _1704 = (dot(vec3(_953, _954, _955), vec3(_1696 * _1688, _1696 * _1689, _1696 * _1690)) + 1.0) * 0.5;
        float _4433 = isnan(0.0) ? _1704 : (isnan(_1704) ? 0.0 : max(_1704, 0.0));
        float _1713 = sqrt(((_1689 * _1689) + (_1688 * _1688)) + (_1690 * _1690)) / (_1644 + 9.9999997473787516355514526367188e-06);
        float _4444 = isnan(0.0) ? _1713 : (isnan(_1713) ? 0.0 : max(_1713, 0.0));
        float _1714 = isnan(1.0) ? _4444 : (isnan(_4444) ? 1.0 : min(_4444, 1.0));
        float _1715 = _1714 * 2.0;
        float _1719 = (1.0 - _1714) / (_1714 + 1.0);
        float _4455 = isnan(0.0) ? _1719 : (isnan(_1719) ? 0.0 : max(_1719, 0.0));
        float _1720 = isnan(1.0) ? _4455 : (isnan(_4455) ? 1.0 : min(_4455, 1.0));
        float _1729 = ((((1.0 - _1720) * (_1715 + 2.0)) * exp2(log2(isnan(1.0) ? _4433 : (isnan(_4433) ? 1.0 : min(_4433, 1.0))) * (_1715 + 1.0))) + _1720) * _1644;
        float _1730 = _1612 * 0.5;
        float _1731 = _1622 * 0.5;
        float _1732 = _1632 * 0.5;
        float _1733 = dot(vec3(_1730, _1731, _1732), vec3(_1730, _1731, _1732));
        float _1738 = (_1733 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1733);
        float _1746 = (dot(vec3(_953, _954, _955), vec3(_1738 * _1730, _1738 * _1731, _1738 * _1732)) + 1.0) * 0.5;
        float _4466 = isnan(0.0) ? _1746 : (isnan(_1746) ? 0.0 : max(_1746, 0.0));
        float _1755 = sqrt(((_1731 * _1731) + (_1730 * _1730)) + (_1732 * _1732)) / (_1645 + 9.9999997473787516355514526367188e-06);
        float _4477 = isnan(0.0) ? _1755 : (isnan(_1755) ? 0.0 : max(_1755, 0.0));
        float _1756 = isnan(1.0) ? _4477 : (isnan(_4477) ? 1.0 : min(_4477, 1.0));
        float _1757 = _1756 * 2.0;
        float _1761 = (1.0 - _1756) / (_1756 + 1.0);
        float _4488 = isnan(0.0) ? _1761 : (isnan(_1761) ? 0.0 : max(_1761, 0.0));
        float _1762 = isnan(1.0) ? _4488 : (isnan(_4488) ? 1.0 : min(_4488, 1.0));
        float _1771 = ((((1.0 - _1762) * (_1757 + 2.0)) * exp2(log2(isnan(1.0) ? _4466 : (isnan(_4466) ? 1.0 : min(_4466, 1.0))) * (_1757 + 1.0))) + _1762) * _1645;
        _1779 = _1612;
        _1780 = _1611;
        _1781 = _1610;
        _1782 = _1622;
        _1783 = _1621;
        _1784 = _1620;
        _1785 = _1632;
        _1786 = _1631;
        _1787 = _1630;
        _1788 = _1645;
        _1789 = _1644;
        _1790 = _1643;
        _1791 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1687 : (isnan(_1687) ? 0.0 : max(_1687, 0.0)));
        _1792 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1729 : (isnan(_1729) ? 0.0 : max(_1729, 0.0)));
        _1793 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1771 : (isnan(_1771) ? 0.0 : max(_1771, 0.0)));
    }
    else
    {
        _1779 = _1473;
        _1780 = _1473;
        _1781 = _1473;
        _1782 = _1473;
        _1783 = _1473;
        _1784 = _1473;
        _1785 = _1473;
        _1786 = _1473;
        _1787 = _1473;
        _1788 = _1473;
        _1789 = _1473;
        _1790 = _1473;
        _1791 = 0.0;
        _1792 = 0.0;
        _1793 = 0.0;
    }
    float _1803 = (cbModelParam._m0[1u].x * (_1791 - _1485)) + _1485;
    float _1804 = (cbModelParam._m0[1u].x * (_1792 - _1486)) + _1486;
    float _1805 = (cbModelParam._m0[1u].x * (_1793 - _1487)) + _1487;
    float _1826 = fma(_1805, cbSceneParam._m0[89u].z, fma(_1804, cbSceneParam._m0[89u].y, _1803 * cbSceneParam._m0[89u].x));
    float _1829 = fma(_1805, cbSceneParam._m0[90u].z, fma(_1804, cbSceneParam._m0[90u].y, _1803 * cbSceneParam._m0[90u].x));
    float _1832 = fma(_1805, cbSceneParam._m0[91u].z, fma(_1804, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1803));
    float _1847 = _1110 * 0.5;
    float _1848 = _1111 * 0.5;
    float _1849 = _1112 * 0.5;
    float _1850 = dot(vec4(_1847, _1848, _1849, 1.0), vec4(_1781, _1784, _1787, _1790));
    float _1853 = dot(vec4(_1847, _1848, _1849, 1.0), vec4(_1780, _1783, _1786, _1789));
    float _1856 = dot(vec4(_1847, _1848, _1849, 1.0), vec4(_1779, _1782, _1785, _1788));
    float _1890;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1863 = dot(vec4(_1847, _1848, _1849, 1.0), vec4(_1472, _1476, _1479, _1482));
        float _1867 = dot(vec4(_1847, _1848, _1849, 1.0), vec4(_1474, _1477, _1480, _1483));
        float _1871 = dot(vec4(_1847, _1848, _1849, 1.0), vec4(_1475, _1478, _1481, _1484));
        float _1878 = dot(vec4(cbModelParam._m0[39u]), vec4(_1847, _1848, _1849, 1.0));
        _1890 = dot(vec3(isnan(0.0) ? _1871 : (isnan(_1871) ? 0.0 : max(_1871, 0.0)), isnan(0.0) ? _1867 : (isnan(_1867) ? 0.0 : max(_1867, 0.0)), isnan(0.0) ? _1863 : (isnan(_1863) ? 0.0 : max(_1863, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1878) ? 0.0 : (isnan(0.0) ? _1878 : max(0.0, _1878))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1890 = 1.0;
    }
    float _1901;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1892 = dot(vec4(cbModelParam._m0[40u]), vec4(_1847, _1848, _1849, 1.0));
        _1901 = dot(vec3(isnan(0.0) ? _1850 : (isnan(_1850) ? 0.0 : max(_1850, 0.0)), isnan(0.0) ? _1853 : (isnan(_1853) ? 0.0 : max(_1853, 0.0)), isnan(0.0) ? _1856 : (isnan(_1856) ? 0.0 : max(_1856, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1892) ? 0.0 : (isnan(0.0) ? _1892 : max(0.0, _1892))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1901 = 1.0;
    }
    float _1905 = (_1901 * cbModelParam._m0[1u].x) + (_1890 * (1.0 - cbModelParam._m0[1u].x));
    float _1915 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _956);
    float _1916 = isnan(_1915) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1915 : min(cbModelParam._m0[25u].z, _1915));
    float _1996;
    float _1998;
    float _2000;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1963 = fma(_1171, cbModelParam._m0[13u].z, fma(_1167, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1163)) + cbModelParam._m0[13u].w;
        float _1967 = fma(_1171, cbModelParam._m0[14u].z, fma(_1167, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1163)) + cbModelParam._m0[14u].w;
        float _1971 = fma(_1171, cbModelParam._m0[15u].z, fma(_1167, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1163)) + cbModelParam._m0[15u].w;
        float _1974 = fma(_1112, cbModelParam._m0[13u].z, fma(_1111, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1110));
        float _1977 = fma(_1112, cbModelParam._m0[14u].z, fma(_1111, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1110));
        float _1980 = fma(_1112, cbModelParam._m0[15u].z, fma(_1111, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1110));
        float _2008;
        if (_1974 > 0.0)
        {
            _2008 = abs((1.0 - _1963) / _1974);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1974 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1963 + 1.0) / _1974);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2008 = frontier_phi_14_12_ladder;
        }
        float _2178;
        if (_1977 > 0.0)
        {
            _2178 = abs((1.0 - _1967) / _1977);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1977 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1967 + 1.0) / _1977);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2178 = frontier_phi_23_19_ladder;
        }
        float _2473;
        if (_1980 > 0.0)
        {
            _2473 = abs((1.0 - _1971) / _1980);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1980 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1971 + 1.0) / _1980);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2473 = frontier_phi_35_30_ladder;
        }
        float _2475 = isnan(_2178) ? _2008 : (isnan(_2008) ? _2178 : min(_2008, _2178));
        float _2476 = isnan(_2473) ? _2475 : (isnan(_2475) ? _2473 : min(_2475, _2473));
        float _2480 = (_2476 * _1974) + _1963;
        float _2481 = (_2476 * _1977) + _1967;
        float _2482 = (_2476 * _1980) + _1971;
        float _2483 = _2476 * 9.9999997473787516355514526367188e-05;
        float _2485 = (-1.0) - _2483;
        float _2487 = _2483 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2482 > _2487) || ((_2482 < _2485) || ((_2481 > _2487) || ((_2481 < _2485) || ((_2480 < _2485) || (_2480 > _2487))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2627 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2482, cbModelParam._m0[9u].z, fma(_2481, cbModelParam._m0[9u].y, _2480 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2482, cbModelParam._m0[10u].z, fma(_2481, cbModelParam._m0[10u].y, _2480 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2482, cbModelParam._m0[11u].z, fma(_2481, cbModelParam._m0[11u].y, _2480 * cbModelParam._m0[11u].x))), _1916);
            frontier_phi_13_35_ladder = _2627.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2627.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2627.x * cbModelParam._m0[1u].y;
        }
        _1996 = frontier_phi_13_35_ladder_2;
        _1998 = frontier_phi_13_35_ladder_1;
        _2000 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1984 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1110, _1111, _1112), _1916);
        _1996 = _1984.x * cbModelParam._m0[1u].y;
        _1998 = _1984.y * cbModelParam._m0[1u].y;
        _2000 = _1984.z * cbModelParam._m0[1u].y;
    }
    float _2004 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _956);
    float _2005 = isnan(_2004) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2004 : min(cbModelParam._m0[25u].w, _2004));
    float _2095;
    float _2097;
    float _2099;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2059 = fma(_1171, cbModelParam._m0[21u].z, fma(_1167, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1163)) + cbModelParam._m0[21u].w;
        float _2063 = fma(_1171, cbModelParam._m0[22u].z, fma(_1167, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1163)) + cbModelParam._m0[22u].w;
        float _2067 = fma(_1171, cbModelParam._m0[23u].z, fma(_1167, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1163)) + cbModelParam._m0[23u].w;
        float _2070 = fma(_1112, cbModelParam._m0[21u].z, fma(_1111, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1110));
        float _2073 = fma(_1112, cbModelParam._m0[22u].z, fma(_1111, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1110));
        float _2076 = fma(_1112, cbModelParam._m0[23u].z, fma(_1111, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1110));
        float _2183;
        if (_2070 > 0.0)
        {
            _2183 = abs((1.0 - _2059) / _2070);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2070 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2059 + 1.0) / _2070);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2183 = frontier_phi_25_21_ladder;
        }
        float _2500;
        if (_2073 > 0.0)
        {
            _2500 = abs((1.0 - _2063) / _2073);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2073 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2063 + 1.0) / _2073);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2500 = frontier_phi_37_32_ladder;
        }
        float _2827;
        if (_2076 > 0.0)
        {
            _2827 = abs((1.0 - _2067) / _2076);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2076 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2067 + 1.0) / _2076);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2827 = frontier_phi_47_44_ladder;
        }
        float _2829 = isnan(_2500) ? _2183 : (isnan(_2183) ? _2500 : min(_2183, _2500));
        float _2830 = isnan(_2827) ? _2829 : (isnan(_2829) ? _2827 : min(_2829, _2827));
        float _2834 = (_2830 * _2070) + _2059;
        float _2835 = (_2830 * _2073) + _2063;
        float _2836 = (_2830 * _2076) + _2067;
        float _2837 = _2830 * 9.9999997473787516355514526367188e-05;
        float _2838 = (-1.0) - _2837;
        float _2840 = _2837 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2836 > _2840) || ((_2836 < _2838) || ((_2835 > _2840) || ((_2835 < _2838) || ((_2834 < _2838) || (_2834 > _2840))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2954 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2836, cbModelParam._m0[17u].z, fma(_2835, cbModelParam._m0[17u].y, _2834 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2836, cbModelParam._m0[18u].z, fma(_2835, cbModelParam._m0[18u].y, _2834 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2836, cbModelParam._m0[19u].z, fma(_2835, cbModelParam._m0[19u].y, _2834 * cbModelParam._m0[19u].x))), _2005);
            frontier_phi_22_47_ladder = _2954.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2954.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2954.x * cbModelParam._m0[1u].z;
        }
        _2095 = frontier_phi_22_47_ladder_2;
        _2097 = frontier_phi_22_47_ladder_1;
        _2099 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2079 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1110, _1111, _1112), _2005);
        _2095 = _2079.x * cbModelParam._m0[1u].z;
        _2097 = _2079.y * cbModelParam._m0[1u].z;
        _2099 = _2079.z * cbModelParam._m0[1u].z;
    }
    float _2111 = ((((1.0 - _1131) * ((_1118 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1131 * _1118)) * _1102;
    float _2112 = _2111 * ((cbModelParam._m0[1u].w * (_2095 - _1996)) + _1996);
    float _2113 = _2111 * ((cbModelParam._m0[1u].w * (_2097 - _1998)) + _1998);
    float _2114 = _2111 * ((cbModelParam._m0[1u].w * (_2099 - _2000)) + _2000);
    float _2117 = fma(_2114, cbSceneParam._m0[89u].z, fma(_2113, cbSceneParam._m0[89u].y, _2112 * cbSceneParam._m0[89u].x));
    float _2120 = fma(_2114, cbSceneParam._m0[90u].z, fma(_2113, cbSceneParam._m0[90u].y, _2112 * cbSceneParam._m0[90u].x));
    float _2123 = fma(_2114, cbSceneParam._m0[91u].z, fma(_2113, cbSceneParam._m0[91u].y, _2112 * cbSceneParam._m0[91u].x));
    float _2157 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2161 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2165 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2169 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2170 = _2157 / _2169;
    float _2171 = _2161 / _2169;
    float _2172 = _2165 / _2169;
    float _2319;
    float _2320;
    float _2321;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2199 = ((uint(_2172 > cbSceneParam._m0[59u].y) + uint(_2172 > cbSceneParam._m0[59u].x)) + uint(_2172 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2200 = _2199 + 43u;
        uint _2208 = _2199 + 44u;
        uint _2216 = _2199 + 45u;
        uint _2224 = _2199 + 46u;
        float _2235 = fma(_2169, cbSceneParam._m0[_2200].w, fma(_2165, cbSceneParam._m0[_2200].z, fma(_2161, cbSceneParam._m0[_2200].y, _2157 * cbSceneParam._m0[_2200].x)));
        float _2239 = fma(_2169, cbSceneParam._m0[_2208].w, fma(_2165, cbSceneParam._m0[_2208].z, fma(_2161, cbSceneParam._m0[_2208].y, _2157 * cbSceneParam._m0[_2208].x)));
        float _2247 = fma(_2169, cbSceneParam._m0[_2224].w, fma(_2165, cbSceneParam._m0[_2224].z, fma(_2161, cbSceneParam._m0[_2224].y, _2157 * cbSceneParam._m0[_2224].x)));
        float _2252 = cbSceneParam._m0[33u].z * _2247;
        float _2254 = cbSceneParam._m0[33u].w * _2247;
        float _2257 = fma(_2169, cbSceneParam._m0[_2216].w, fma(_2165, cbSceneParam._m0[_2216].z, fma(_2161, cbSceneParam._m0[_2216].y, _2157 * cbSceneParam._m0[_2216].x))) / _2247;
        float _2305 = (cbSceneParam._m0[33u].x - sqrt(((_2171 * _2171) + (_2170 * _2170)) + (_2172 * _2172))) * cbSceneParam._m0[33u].y;
        float _4614 = isnan(0.0) ? _2305 : (isnan(_2305) ? 0.0 : max(_2305, 0.0));
        float _2312 = (isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2252 + _2235) / _2247, (_2254 + _2239) / _2247), _2257), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2254 + _2235) / _2247, (_2239 - _2252) / _2247), _2257), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2235 - _2252) / _2247, (_2239 - _2254) / _2247), _2257), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2235 - _2254) / _2247, (_2252 + _2239) / _2247), _2257), 0.0)).x), vec4(0.25)));
        _2319 = 1.0 - (_2312 * cbSceneParam._m0[34u].x);
        _2320 = 1.0 - (_2312 * cbSceneParam._m0[34u].y);
        _2321 = 1.0 - (_2312 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2319 = 1.0;
        _2320 = 1.0;
        _2321 = 1.0;
    }
    float _2385;
    float _2387;
    float _2389;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2373 = fma(_2169, cbSceneParam._m0[63u].w, fma(_2165, cbSceneParam._m0[63u].z, fma(_2161, cbSceneParam._m0[63u].y, _2157 * cbSceneParam._m0[63u].x)));
        float _2374 = fma(_2169, cbSceneParam._m0[60u].w, fma(_2165, cbSceneParam._m0[60u].z, fma(_2161, cbSceneParam._m0[60u].y, _2157 * cbSceneParam._m0[60u].x))) / _2373;
        float _2375 = fma(_2169, cbSceneParam._m0[61u].w, fma(_2165, cbSceneParam._m0[61u].z, fma(_2161, cbSceneParam._m0[61u].y, _2157 * cbSceneParam._m0[61u].x))) / _2373;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2374 >= cbSceneParam._m0[64u].x) && (_2375 >= cbSceneParam._m0[64u].y)) && (_2374 <= cbSceneParam._m0[64u].z)) && (_2375 <= cbSceneParam._m0[64u].w))
        {
            float _2513 = fma(_2169, cbSceneParam._m0[62u].w, fma(_2165, cbSceneParam._m0[62u].z, fma(_2161, cbSceneParam._m0[62u].y, _2157 * cbSceneParam._m0[62u].x))) / _2373;
            float _2517 = isnan(cbSceneParam._m0[41u].w) ? _2513 : (isnan(_2513) ? cbSceneParam._m0[41u].w : max(_2513, cbSceneParam._m0[41u].w));
            float _2560 = (cbSceneParam._m0[33u].x - sqrt(((_2171 * _2171) + (_2170 * _2170)) + (_2172 * _2172))) * cbSceneParam._m0[33u].y;
            float _4630 = isnan(0.0) ? _2560 : (isnan(_2560) ? 0.0 : max(_2560, 0.0));
            float _2567 = (isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2374, cbSceneParam._m0[33u].w + _2375), _2517), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2374, _2375 - cbSceneParam._m0[33u].z), _2517), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2374 - cbSceneParam._m0[33u].z, _2375 - cbSceneParam._m0[33u].w), _2517), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2374 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2375), _2517), 0.0)).x), vec4(0.25)));
            float _2571 = 1.0 - (_2567 * cbSceneParam._m0[34u].x);
            float _2572 = 1.0 - (_2567 * cbSceneParam._m0[34u].y);
            float _2573 = 1.0 - (_2567 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2573) ? _2321 : (isnan(_2321) ? _2573 : min(_2321, _2573));
            frontier_phi_34_33_ladder_1 = isnan(_2572) ? _2320 : (isnan(_2320) ? _2572 : min(_2320, _2572));
            frontier_phi_34_33_ladder_2 = isnan(_2571) ? _2319 : (isnan(_2319) ? _2571 : min(_2319, _2571));
        }
        else
        {
            frontier_phi_34_33_ladder = _2321;
            frontier_phi_34_33_ladder_1 = _2320;
            frontier_phi_34_33_ladder_2 = _2319;
        }
        _2385 = frontier_phi_34_33_ladder_2;
        _2387 = frontier_phi_34_33_ladder_1;
        _2389 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2385 = _2319;
        _2387 = _2320;
        _2389 = _2321;
    }
    uvec4 _2394 = floatBitsToUint(cbInstanceData._m0[_263 + 5u]);
    uint _2396 = _2394.x * 14u;
    uint _2397 = _2396 + 13u;
    float _2404 = _1102 + (-1.0);
    float _2409 = (cbLight._m0[_2397].x * _2404) + 1.0;
    float _2410 = (cbLight._m0[_2397].y * _2404) + 1.0;
    float _2411 = (cbLight._m0[_2397].z * _2404) + 1.0;
    float _2412 = (cbLight._m0[_2397].w * _2404) + 1.0;
    uint _2413 = _2396 + 5u;
    float _2419 = isnan(1.0) ? _2410 : (isnan(_2410) ? 1.0 : min(_2410, 1.0));
    uint _2423 = _2396 + 4u;
    float _2432 = isnan(1.0) ? _2409 : (isnan(_2409) ? 1.0 : min(_2409, 1.0));
    uint _2436 = _2396 | 1u;
    float _2447 = dot(vec3(cbLight._m0[_2396].xyz), vec3(_953, _954, _955));
    float _2450 = dot(vec3(cbLight._m0[_2436].xyz), vec3(_953, _954, _955));
    float _4666 = isnan(0.0) ? _2447 : (isnan(_2447) ? 0.0 : max(_2447, 0.0));
    float _4677 = isnan(0.0) ? _2450 : (isnan(_2450) ? 0.0 : max(_2450, 0.0));
    float _2455 = (isnan(1.0) ? _4666 : (isnan(_4666) ? 1.0 : min(_4666, 1.0))) * 0.3183098733425140380859375;
    float _2457 = (isnan(1.0) ? _4677 : (isnan(_4677) ? 1.0 : min(_4677, 1.0))) * 0.3183098733425140380859375;
    float _2464 = ((cbLight._m0[_2413].x * _2419) * _2457) + (((cbLight._m0[_2423].x * _2385) * _2432) * _2455);
    float _2465 = ((_2419 * cbLight._m0[_2413].y) * _2457) + (((cbLight._m0[_2423].y * _2387) * _2432) * _2455);
    float _2466 = ((_2419 * cbLight._m0[_2413].z) * _2457) + (((cbLight._m0[_2423].z * _2389) * _2432) * _2455);
    uvec4 _2470 = floatBitsToUint(cbLight._m0[_2396 + 12u]);
    bool _2472 = _2470.x == 0u;
    float _2574;
    float _2576;
    float _2578;
    if (_2472)
    {
        _2574 = _2464;
        _2576 = _2465;
        _2578 = _2466;
    }
    else
    {
        uint _2582 = _2396 + 6u;
        float _2598 = (dot(vec3(cbLight._m0[_2396 + 2u].xyz), vec3(_953, _954, _955)) * 0.5) + 0.5;
        float _2599 = _2598 * _2598;
        float _4688 = isnan(0.0) ? _2599 : (isnan(_2599) ? 0.0 : max(_2599, 0.0));
        float _2600 = isnan(1.0) ? _4688 : (isnan(_4688) ? 1.0 : min(_4688, 1.0));
        float _2601 = isnan(1.0) ? _2411 : (isnan(_2411) ? 1.0 : min(_2411, 1.0));
        _2574 = (((cbLight._m0[_2582].x * 0.3183098733425140380859375) * _2600) * _2601) + _2464;
        _2576 = (((cbLight._m0[_2582].y * 0.3183098733425140380859375) * _2600) * _2601) + _2465;
        _2578 = (((cbLight._m0[_2582].z * 0.3183098733425140380859375) * _2600) * _2601) + _2466;
    }
    bool _2581 = _2470.y == 0u;
    float _2636;
    float _2638;
    float _2640;
    if (_2581)
    {
        _2636 = _2574;
        _2638 = _2576;
        _2640 = _2578;
    }
    else
    {
        uint _2798 = _2396 + 7u;
        float _2814 = (dot(vec3(cbLight._m0[_2396 + 3u].xyz), vec3(_953, _954, _955)) * 0.5) + 0.5;
        float _2815 = _2814 * _2814;
        float _4704 = isnan(0.0) ? _2815 : (isnan(_2815) ? 0.0 : max(_2815, 0.0));
        float _2816 = isnan(1.0) ? _4704 : (isnan(_4704) ? 1.0 : min(_4704, 1.0));
        float _2817 = isnan(1.0) ? _2412 : (isnan(_2412) ? 1.0 : min(_2412, 1.0));
        _2636 = (((cbLight._m0[_2798].x * 0.3183098733425140380859375) * _2816) * _2817) + _2574;
        _2638 = (((cbLight._m0[_2798].y * 0.3183098733425140380859375) * _2816) * _2817) + _2576;
        _2640 = (((cbLight._m0[_2798].z * 0.3183098733425140380859375) * _2816) * _2817) + _2578;
    }
    uint _2643 = _2396 + 8u;
    float _2656 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2396].w)) * _956) * 0.949999988079071044921875);
    float _2657 = _2656 * _2656;
    float _2658 = cbLight._m0[_2396].x + _1031;
    float _2659 = cbLight._m0[_2396].y + _1032;
    float _2660 = cbLight._m0[_2396].z + _1033;
    float _2664 = inversesqrt(dot(vec3(_2658, _2659, _2660), vec3(_2658, _2659, _2660)));
    float _2665 = _2664 * _2658;
    float _2666 = _2664 * _2659;
    float _2667 = _2664 * _2660;
    float _2668 = dot(vec3(_953, _954, _955), vec3(cbLight._m0[_2396].xyz));
    float _4720 = isnan(0.0) ? _2668 : (isnan(_2668) ? 0.0 : max(_2668, 0.0));
    float _2671 = isnan(1.0) ? _4720 : (isnan(_4720) ? 1.0 : min(_4720, 1.0));
    float _4731 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
    float _2672 = isnan(1.0) ? _4731 : (isnan(_4731) ? 1.0 : min(_4731, 1.0));
    float _2673 = dot(vec3(_953, _954, _955), vec3(_2665, _2666, _2667));
    float _4742 = isnan(0.0) ? _2673 : (isnan(_2673) ? 0.0 : max(_2673, 0.0));
    float _2676 = isnan(1.0) ? _4742 : (isnan(_4742) ? 1.0 : min(_4742, 1.0));
    float _2677 = dot(vec3(cbLight._m0[_2396].xyz), vec3(_2665, _2666, _2667));
    float _4753 = isnan(0.0) ? _2677 : (isnan(_2677) ? 0.0 : max(_2677, 0.0));
    float _2681 = _2657 * _2657;
    float _2685 = ((_2676 * _2676) * (_2681 + (-1.0))) + 1.0;
    float _2696 = (exp2(log2(1.0 - (isnan(1.0) ? _4753 : (isnan(_4753) ? 1.0 : min(_4753, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2697 = 1.0 - _2657;
    float _2708 = (0.5 / (((_2672 * ((_2671 * _2697) + _2657)) + 9.9999999392252902907785028219223e-09) + (((_2672 * _2697) + _2657) * _2671))) * _2671;
    float _4764 = isnan(0.0) ? _2708 : (isnan(_2708) ? 0.0 : max(_2708, 0.0));
    float _2710 = (isnan(1.0) ? _4764 : (isnan(_4764) ? 1.0 : min(_4764, 1.0))) * (_2681 / ((_2685 * _2685) * 3.141590118408203125));
    uint _2724 = _2396 + 9u;
    float _2735 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2436].w)) * _956) * 0.949999988079071044921875);
    float _2736 = _2735 * _2735;
    float _2737 = cbLight._m0[_2436].x + _1031;
    float _2738 = cbLight._m0[_2436].y + _1032;
    float _2739 = cbLight._m0[_2436].z + _1033;
    float _2743 = inversesqrt(dot(vec3(_2737, _2738, _2739), vec3(_2737, _2738, _2739)));
    float _2744 = _2743 * _2737;
    float _2745 = _2743 * _2738;
    float _2746 = _2743 * _2739;
    float _2747 = dot(vec3(_953, _954, _955), vec3(cbLight._m0[_2436].xyz));
    float _4775 = isnan(0.0) ? _2747 : (isnan(_2747) ? 0.0 : max(_2747, 0.0));
    float _2750 = isnan(1.0) ? _4775 : (isnan(_4775) ? 1.0 : min(_4775, 1.0));
    float _2751 = dot(vec3(_953, _954, _955), vec3(_2744, _2745, _2746));
    float _4786 = isnan(0.0) ? _2751 : (isnan(_2751) ? 0.0 : max(_2751, 0.0));
    float _2754 = isnan(1.0) ? _4786 : (isnan(_4786) ? 1.0 : min(_4786, 1.0));
    float _2755 = dot(vec3(cbLight._m0[_2436].xyz), vec3(_2744, _2745, _2746));
    float _4797 = isnan(0.0) ? _2755 : (isnan(_2755) ? 0.0 : max(_2755, 0.0));
    float _2759 = _2736 * _2736;
    float _2763 = ((_2754 * _2754) * (_2759 + (-1.0))) + 1.0;
    float _2772 = (exp2(log2(1.0 - (isnan(1.0) ? _4797 : (isnan(_4797) ? 1.0 : min(_4797, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2773 = 1.0 - _2736;
    float _2783 = (0.5 / (((_2672 * ((_2750 * _2773) + _2736)) + 9.9999999392252902907785028219223e-09) + (((_2672 * _2773) + _2736) * _2750))) * _2750;
    float _4808 = isnan(0.0) ? _2783 : (isnan(_2783) ? 0.0 : max(_2783, 0.0));
    float _2785 = (isnan(1.0) ? _4808 : (isnan(_4808) ? 1.0 : min(_4808, 1.0))) * (_2759 / ((_2763 * _2763) * 3.141590118408203125));
    float _2795 = (((_2772 * cbLight._m0[_2724].x) * _2785) * _2419) + ((((cbLight._m0[_2643].x * _2385) * _2696) * _2710) * _2432);
    float _2796 = (((_2772 * cbLight._m0[_2724].y) * _2785) * _2419) + ((((cbLight._m0[_2643].y * _2387) * _2696) * _2710) * _2432);
    float _2797 = (((_2772 * cbLight._m0[_2724].z) * _2785) * _2419) + ((((cbLight._m0[_2643].z * _2389) * _2696) * _2710) * _2432);
    float _2853;
    float _2855;
    float _2857;
    if (_2472)
    {
        _2853 = _2795;
        _2855 = _2796;
        _2857 = _2797;
    }
    else
    {
        uint _2859 = _2396 + 2u;
        uint _2863 = _2396 + 10u;
        float _2877 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2859].w)) * _956) * 0.949999988079071044921875);
        float _2878 = _2877 * _2877;
        float _2879 = cbLight._m0[_2859].x + _1031;
        float _2880 = cbLight._m0[_2859].y + _1032;
        float _2881 = cbLight._m0[_2859].z + _1033;
        float _2885 = inversesqrt(dot(vec3(_2879, _2880, _2881), vec3(_2879, _2880, _2881)));
        float _2886 = _2885 * _2879;
        float _2887 = _2885 * _2880;
        float _2888 = _2885 * _2881;
        float _2889 = dot(vec3(_953, _954, _955), vec3(cbLight._m0[_2859].xyz));
        float _4819 = isnan(0.0) ? _2889 : (isnan(_2889) ? 0.0 : max(_2889, 0.0));
        float _2892 = isnan(1.0) ? _4819 : (isnan(_4819) ? 1.0 : min(_4819, 1.0));
        float _2893 = dot(vec3(_953, _954, _955), vec3(_2886, _2887, _2888));
        float _4830 = isnan(0.0) ? _2893 : (isnan(_2893) ? 0.0 : max(_2893, 0.0));
        float _2896 = isnan(1.0) ? _4830 : (isnan(_4830) ? 1.0 : min(_4830, 1.0));
        float _2897 = dot(vec3(cbLight._m0[_2859].xyz), vec3(_2886, _2887, _2888));
        float _4841 = isnan(0.0) ? _2897 : (isnan(_2897) ? 0.0 : max(_2897, 0.0));
        float _2901 = _2878 * _2878;
        float _2905 = ((_2896 * _2896) * (_2901 + (-1.0))) + 1.0;
        float _2914 = (exp2(log2(1.0 - (isnan(1.0) ? _4841 : (isnan(_4841) ? 1.0 : min(_4841, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2915 = 1.0 - _2878;
        float _2925 = (0.5 / (((_2672 * ((_2892 * _2915) + _2878)) + 9.9999999392252902907785028219223e-09) + (((_2672 * _2915) + _2878) * _2892))) * _2892;
        float _4852 = isnan(0.0) ? _2925 : (isnan(_2925) ? 0.0 : max(_2925, 0.0));
        float _2927 = (isnan(1.0) ? _4852 : (isnan(_4852) ? 1.0 : min(_4852, 1.0))) * (_2901 / ((_2905 * _2905) * 3.141590118408203125));
        float _2928 = isnan(1.0) ? _2411 : (isnan(_2411) ? 1.0 : min(_2411, 1.0));
        _2853 = (((_2914 * cbLight._m0[_2863].x) * _2927) * _2928) + _2795;
        _2855 = (((_2914 * cbLight._m0[_2863].y) * _2927) * _2928) + _2796;
        _2857 = (((_2914 * cbLight._m0[_2863].z) * _2927) * _2928) + _2797;
    }
    float _2959;
    float _2961;
    float _2963;
    if (_2581)
    {
        _2959 = _2853;
        _2961 = _2855;
        _2963 = _2857;
    }
    else
    {
        uint _2970 = _2396 + 3u;
        uint _2974 = _2396 + 11u;
        float _2988 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2970].w)) * _956) * 0.949999988079071044921875);
        float _2989 = _2988 * _2988;
        float _2990 = cbLight._m0[_2970].x + _1031;
        float _2991 = cbLight._m0[_2970].y + _1032;
        float _2992 = cbLight._m0[_2970].z + _1033;
        float _2996 = inversesqrt(dot(vec3(_2990, _2991, _2992), vec3(_2990, _2991, _2992)));
        float _2997 = _2996 * _2990;
        float _2998 = _2996 * _2991;
        float _2999 = _2996 * _2992;
        float _3000 = dot(vec3(_953, _954, _955), vec3(cbLight._m0[_2970].xyz));
        float _4868 = isnan(0.0) ? _3000 : (isnan(_3000) ? 0.0 : max(_3000, 0.0));
        float _3003 = isnan(1.0) ? _4868 : (isnan(_4868) ? 1.0 : min(_4868, 1.0));
        float _3004 = dot(vec3(_953, _954, _955), vec3(_2997, _2998, _2999));
        float _4879 = isnan(0.0) ? _3004 : (isnan(_3004) ? 0.0 : max(_3004, 0.0));
        float _3007 = isnan(1.0) ? _4879 : (isnan(_4879) ? 1.0 : min(_4879, 1.0));
        float _3008 = dot(vec3(cbLight._m0[_2970].xyz), vec3(_2997, _2998, _2999));
        float _4890 = isnan(0.0) ? _3008 : (isnan(_3008) ? 0.0 : max(_3008, 0.0));
        float _3012 = _2989 * _2989;
        float _3016 = ((_3007 * _3007) * (_3012 + (-1.0))) + 1.0;
        float _3025 = (exp2(log2(1.0 - (isnan(1.0) ? _4890 : (isnan(_4890) ? 1.0 : min(_4890, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3026 = 1.0 - _2989;
        float _3036 = (0.5 / (((_2672 * ((_3003 * _3026) + _2989)) + 9.9999999392252902907785028219223e-09) + (((_2672 * _3026) + _2989) * _3003))) * _3003;
        float _4901 = isnan(0.0) ? _3036 : (isnan(_3036) ? 0.0 : max(_3036, 0.0));
        float _3038 = (isnan(1.0) ? _4901 : (isnan(_4901) ? 1.0 : min(_4901, 1.0))) * (_3012 / ((_3016 * _3016) * 3.141590118408203125));
        float _3039 = isnan(1.0) ? _2412 : (isnan(_2412) ? 1.0 : min(_2412, 1.0));
        _2959 = (((_3025 * cbLight._m0[_2974].x) * _3038) * _3039) + _2853;
        _2961 = (((_3025 * cbLight._m0[_2974].y) * _3038) * _3039) + _2855;
        _2963 = (((_3025 * cbLight._m0[_2974].z) * _3038) * _3039) + _2857;
    }
    float _3105;
    float _3107;
    float _3109;
    float _3111;
    float _3113;
    float _3115;
    if (_2394.y == 0u)
    {
        uvec4 _3060 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3061 = _3060.x;
        uint _3072 = uint((float(_3060.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1040) / _3061))) + floor(float(uint(cbSceneParam._m0[85u].x * _1039) / _3061)));
        float _3082 = (log2(_2172 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3083 = isnan(0.0) ? _3082 : (isnan(_3082) ? 0.0 : max(_3082, 0.0));
        uint _3086 = uint(isnan(14.0) ? _3083 : (isnan(_3083) ? 14.0 : min(_3083, 14.0)));
        uvec4 _3091 = texelFetch(g_lightClusterGridBuffer, int(((_3086 << 2u) + (_3072 << 6u)) >> 2u));
        uint _3092 = _3091.x;
        uint _3093 = _3060.z;
        float _3172;
        float _3174;
        float _3176;
        float _3178;
        float _3180;
        float _3182;
        if (((((1u << ((_3093 >> 4u) & 15u)) + 4294967295u) & _3092) == 0u) || ((_3093 & 240u) == 0u))
        {
            _3172 = 0.0;
            _3174 = 0.0;
            _3176 = 0.0;
            _3178 = 0.0;
            _3180 = 0.0;
            _3182 = 0.0;
        }
        else
        {
            float _3173;
            float _3175;
            float _3177;
            float _3179;
            float _3181;
            float _3183;
            float _3317 = 0.0;
            float _3318 = 0.0;
            float _3319 = 0.0;
            float _3320 = 0.0;
            float _3321 = 0.0;
            float _3322 = 0.0;
            uint _3323 = 0u;
            uint _3332;
            bool _3333;
            for (;;)
            {
                _3332 = texelFetch(g_lightClassification, int((((_3086 << 5u) + (_3072 << 9u)) + (_3323 << 2u)) >> 2u)).x;
                _3333 = _3332 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3333)
                {
                    frontier_phi_66_pred = _3322;
                    frontier_phi_66_pred_1 = _3321;
                    frontier_phi_66_pred_2 = _3320;
                    frontier_phi_66_pred_3 = _3319;
                    frontier_phi_66_pred_4 = _3318;
                    frontier_phi_66_pred_5 = _3317;
                }
                else
                {
                    float _3441;
                    float _3442;
                    float _3443;
                    float _3444;
                    float _3445;
                    float _3446;
                    uint _3447;
                    _3441 = _3317;
                    _3442 = _3318;
                    _3443 = _3319;
                    _3444 = _3320;
                    _3445 = _3321;
                    _3446 = _3322;
                    _3447 = _3332;
                    float _3373;
                    float _3374;
                    float _3375;
                    float _3376;
                    float _3377;
                    float _3378;
                    for (;;)
                    {
                        uint _3451 = uint(findLSB(_3447)) + (_3323 << 5u);
                        uint _3448 = (_3447 + 4294967295u) & _3447;
                        uint _3453 = _3451 * 48u;
                        vec4 _3467 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3453)).x, texelFetch(g_PointLightRenderingBuffer, int(_3453 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3453 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3453 + 3u)).x));
                        uint _3473 = (_3451 * 48u) + 4u;
                        vec4 _3486 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3473)).x, texelFetch(g_PointLightRenderingBuffer, int(_3473 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3473 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3473 + 3u)).x));
                        uint _3492 = (_3451 * 48u) + 8u;
                        vec3 _3503 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3492)).x, texelFetch(g_PointLightRenderingBuffer, int(_3492 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3492 + 2u)).x));
                        float _3507 = _3467.x - _2170;
                        float _3508 = _3467.y - _2171;
                        float _3509 = _3467.z - _2172;
                        float _3510 = dot(vec3(_3507, _3508, _3509), vec3(_3507, _3508, _3509));
                        float _3513 = inversesqrt(_3510);
                        float _3514 = _3513 * _3507;
                        float _3515 = _3513 * _3508;
                        float _3516 = _3513 * _3509;
                        float _3517 = dot(vec3(_1058, _1061, _1064), vec3(_3514, _3515, _3516));
                        float _3522 = 1.0 - (_3510 * _3467.w);
                        float _4927 = isnan(0.0) ? _3522 : (isnan(_3522) ? 0.0 : max(_3522, 0.0));
                        float _3523 = isnan(1.0) ? _4927 : (isnan(_4927) ? 1.0 : min(_4927, 1.0));
                        float _3524 = sqrt(_3510) * _3486.w;
                        float _3527 = 1.39999997615814208984375 / (_3524 + 1.39999997615814208984375);
                        float _3528 = _3527 * _3527;
                        float _3531 = ((1.0 - _3528) * _3517) + _3528;
                        float _3534 = _3524 * _3524;
                        float _3538 = ((isnan(0.0) ? _3531 : (isnan(_3531) ? 0.0 : max(_3531, 0.0))) * _3523) / ((_3534 * 0.699999988079071044921875) + 1.0);
                        float _3542 = (-0.0) - _2170;
                        float _3543 = (-0.0) - _2171;
                        float _3544 = (-0.0) - _2172;
                        float _3548 = inversesqrt(dot(vec3(_3542, _3543, _3544), vec3(_3542, _3543, _3544)));
                        float _3549 = _3548 * _3542;
                        float _3550 = _3548 * _3543;
                        float _3551 = _3548 * _3544;
                        float _3558 = exp2(log2(1.0 / ((_3534 * 3.5) + 5.0)) * 0.25);
                        float _3559 = 1.0 - _1118;
                        float _3566 = sqrt(1.0 - ((1.0 - (_3559 * _3559)) * (1.0 - (_3558 * _3558))));
                        float _3567 = _3566 * _3566;
                        float _3568 = _3567 * _3567;
                        float _3569 = _3549 + _3514;
                        float _3570 = _3550 + _3515;
                        float _3571 = _3551 + _3516;
                        float _3575 = inversesqrt(dot(vec3(_3569, _3570, _3571), vec3(_3569, _3570, _3571)));
                        float _3579 = dot(vec3(_1058, _1061, _1064), vec3(_3549, _3550, _3551));
                        float _4943 = isnan(0.0) ? _3579 : (isnan(_3579) ? 0.0 : max(_3579, 0.0));
                        float _3582 = isnan(1.0) ? _4943 : (isnan(_4943) ? 1.0 : min(_4943, 1.0));
                        float _3583 = dot(vec3(_1058, _1061, _1064), vec3(_3575 * _3569, _3575 * _3570, _3575 * _3571));
                        float _4954 = isnan(0.0) ? _3583 : (isnan(_3583) ? 0.0 : max(_3583, 0.0));
                        float _3586 = isnan(1.0) ? _4954 : (isnan(_4954) ? 1.0 : min(_4954, 1.0));
                        float _3590 = ((_3586 * _3586) * (_3568 + (-1.0))) + 1.0;
                        float _3591 = _3527 * _3567;
                        float _3592 = _3591 * _3591;
                        float _3595 = ((1.0 - _3592) * _3517) + _3592;
                        float _4965 = isnan(0.0) ? _3595 : (isnan(_3595) ? 0.0 : max(_3595, 0.0));
                        float _3596 = isnan(1.0) ? _4965 : (isnan(_4965) ? 1.0 : min(_4965, 1.0));
                        float _3597 = 1.0 - _3567;
                        float _3607 = (0.5 / (((_3596 * ((_3582 * _3597) + _3567)) + 9.9999999392252902907785028219223e-09) + (((_3596 * _3597) + _3567) * _3582))) * _3596;
                        float _4976 = isnan(0.0) ? _3607 : (isnan(_3607) ? 0.0 : max(_3607, 0.0));
                        float _3618 = (((_3568 * 3.1415927410125732421875) * (isnan(1.0) ? _4976 : (isnan(_4976) ? 1.0 : min(_4976, 1.0)))) / ((_3590 * _3590) * ((_3534 * 2.1991131305694580078125) + 3.141590118408203125))) * _3523;
                        _3376 = (_3538 * _3486.x) + _3444;
                        _3377 = (_3538 * _3486.y) + _3445;
                        _3378 = (_3538 * _3486.z) + _3446;
                        _3373 = (_3618 * _3503.x) + _3441;
                        _3374 = (_3618 * _3503.y) + _3442;
                        _3375 = (_3618 * _3503.z) + _3443;
                        if (_3448 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3441 = _3373;
                            _3442 = _3374;
                            _3443 = _3375;
                            _3444 = _3376;
                            _3445 = _3377;
                            _3446 = _3378;
                            _3447 = _3448;
                        }
                    }
                    frontier_phi_66_pred = _3378;
                    frontier_phi_66_pred_1 = _3377;
                    frontier_phi_66_pred_2 = _3376;
                    frontier_phi_66_pred_3 = _3375;
                    frontier_phi_66_pred_4 = _3374;
                    frontier_phi_66_pred_5 = _3373;
                }
                _3183 = frontier_phi_66_pred;
                _3181 = frontier_phi_66_pred_1;
                _3179 = frontier_phi_66_pred_2;
                _3177 = frontier_phi_66_pred_3;
                _3175 = frontier_phi_66_pred_4;
                _3173 = frontier_phi_66_pred_5;
                uint _3324 = _3323 + 1u;
                if (_3324 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3317 = _3173;
                    _3318 = _3175;
                    _3319 = _3177;
                    _3320 = _3179;
                    _3321 = _3181;
                    _3322 = _3183;
                    _3323 = _3324;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3172 = _3173;
            _3174 = _3175;
            _3176 = _3177;
            _3178 = _3179;
            _3180 = _3181;
            _3182 = _3183;
        }
        uvec4 _3186 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3187 = _3186.z;
        uint _3189 = (_3187 >> 8u) & 15u;
        float _3285;
        float _3287;
        float _3289;
        float _3291;
        float _3293;
        float _3295;
        if (((4294967295u << _3189) & _3092) == 0u)
        {
            _3285 = _3172;
            _3287 = _3174;
            _3289 = _3176;
            _3291 = _3178;
            _3293 = _3180;
            _3295 = _3182;
        }
        else
        {
            float _3310 = inversesqrt(dot(vec3(_2170, _2171, _2172), vec3(_2170, _2171, _2172)));
            float _3311 = _3310 * _2170;
            float _3312 = _3310 * _2171;
            float _3313 = _3310 * _2172;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3189 < ((_3187 >> 12u) & 15u))
            {
                float _3286;
                float _3288;
                float _3290;
                float _3292;
                float _3294;
                float _3296;
                float _3424 = _3172;
                float _3425 = _3174;
                float _3426 = _3176;
                float _3427 = _3178;
                float _3428 = _3180;
                float _3429 = _3182;
                uint _3430 = _3189;
                uint _3439;
                bool _3440;
                for (;;)
                {
                    _3439 = texelFetch(g_lightClassification, int((((_3086 << 5u) + (_3072 << 9u)) + (_3430 << 2u)) >> 2u)).x;
                    _3440 = _3439 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3440)
                    {
                        frontier_phi_72_pred = _3429;
                        frontier_phi_72_pred_1 = _3428;
                        frontier_phi_72_pred_2 = _3427;
                        frontier_phi_72_pred_3 = _3426;
                        frontier_phi_72_pred_4 = _3425;
                        frontier_phi_72_pred_5 = _3424;
                    }
                    else
                    {
                        float _3623;
                        float _3624;
                        float _3625;
                        float _3626;
                        float _3627;
                        float _3628;
                        float _3916;
                        float _3917;
                        float _3918;
                        float _3919;
                        float _3920;
                        float _3921;
                        float _3636 = _3424;
                        float _3637 = _3425;
                        float _3638 = _3426;
                        float _3639 = _3427;
                        float _3640 = _3428;
                        float _3641 = _3429;
                        uint _3642 = _3439;
                        uint _3643;
                        vec4 _3668;
                        float _3669;
                        vec4 _3684;
                        vec3 _3696;
                        vec4 _3711;
                        vec4 _3726;
                        float _3772;
                        bool _3773;
                        for (;;)
                        {
                            uint _3653 = ((_3430 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3642));
                            _3643 = (_3642 + 4294967295u) & _3642;
                            uint _3655 = _3653 * 40u;
                            _3668 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3655)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3655 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3655 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3655 + 3u)).x));
                            _3669 = _3668.w;
                            uint _3671 = (_3653 * 40u) + 4u;
                            _3684 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3671)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3671 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3671 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3671 + 3u)).x));
                            uint _3686 = (_3653 * 40u) + 8u;
                            _3696 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3686)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3686 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3686 + 2u)).x));
                            uint _3698 = (_3653 * 40u) + 16u;
                            _3711 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3698)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3698 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3698 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3698 + 3u)).x));
                            uint _3713 = (_3653 * 40u) + 20u;
                            _3726 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3713)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3713 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3713 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3713 + 3u)).x));
                            uint _3728 = (_3653 * 40u) + 24u;
                            vec4 _3741 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3728)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3728 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3728 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3728 + 3u)).x));
                            uint _3747 = (_3653 * 40u) + 28u;
                            vec4 _3760 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3747)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3747 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3747 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3747 + 3u)).x));
                            _3772 = fma(_2172, _3760.z, fma(_2171, _3760.y, _3760.x * _2170)) + _3760.w;
                            _3773 = !((fma(_2172, _3741.z, fma(_2171, _3741.y, _3741.x * _2170)) + _3741.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3773)
                            {
                                float _3800 = _3668.x - _2170;
                                float _3801 = _3668.y - _2171;
                                float _3802 = _3668.z - _2172;
                                float _3803 = dot(vec3(_3800, _3801, _3802), vec3(_3800, _3801, _3802));
                                float _3806 = inversesqrt(_3803);
                                float _3807 = _3806 * _3800;
                                float _3808 = _3806 * _3801;
                                float _3809 = _3806 * _3802;
                                float _3813 = 1.0 - (_3803 / (_3669 * _3669));
                                float _4987 = isnan(0.0) ? _3813 : (isnan(_3813) ? 0.0 : max(_3813, 0.0));
                                float _3814 = isnan(1.0) ? _4987 : (isnan(_4987) ? 1.0 : min(_4987, 1.0));
                                float _3818 = sqrt(_3803) * _3684.w;
                                float _3820 = 1.39999997615814208984375 / (_3818 + 1.39999997615814208984375);
                                float _3821 = _3820 * _3820;
                                float _3824 = ((1.0 - _3821) * dot(vec3(_3807, _3808, _3809), vec3(_1058, _1061, _1064))) + _3821;
                                float _3827 = _3818 * _3818;
                                float _3831 = (fma(_2172, _3711.z, fma(_2171, _3711.y, _3711.x * _2170)) + _3711.w) / _3772;
                                float _3832 = (fma(_2172, _3726.z, fma(_2171, _3726.y, _3726.x * _2170)) + _3726.w) / _3772;
                                float _3836 = 1.0 - dot(vec2(_3831, _3832), vec2(_3831, _3832));
                                float _5003 = isnan(0.0) ? _3836 : (isnan(_3836) ? 0.0 : max(_3836, 0.0));
                                float _3837 = isnan(1.0) ? _5003 : (isnan(_5003) ? 1.0 : min(_5003, 1.0));
                                float _3838 = _3837 * (((isnan(0.0) ? _3824 : (isnan(_3824) ? 0.0 : max(_3824, 0.0))) * _3814) / ((_3827 * 0.699999988079071044921875) + 1.0));
                                float _3850 = exp2(log2(1.0 / ((_3827 * 3.5) + 5.0)) * 0.25);
                                float _3851 = 1.0 - _1118;
                                float _3858 = sqrt(1.0 - ((1.0 - (_3851 * _3851)) * (1.0 - (_3850 * _3850))));
                                float _3859 = _3858 * _3858;
                                float _3860 = _3859 * _3859;
                                float _3861 = _3807 - _3311;
                                float _3862 = _3808 - _3312;
                                float _3863 = _3809 - _3313;
                                float _3867 = inversesqrt(dot(vec3(_3861, _3862, _3863), vec3(_3861, _3862, _3863)));
                                float _3871 = dot(vec3(_1058, _1061, _1064), vec3((-0.0) - _3311, (-0.0) - _3312, (-0.0) - _3313));
                                float _5014 = isnan(0.0) ? _3871 : (isnan(_3871) ? 0.0 : max(_3871, 0.0));
                                float _3874 = isnan(1.0) ? _5014 : (isnan(_5014) ? 1.0 : min(_5014, 1.0));
                                float _3875 = dot(vec3(_1058, _1061, _1064), vec3(_3867 * _3861, _3867 * _3862, _3867 * _3863));
                                float _5025 = isnan(0.0) ? _3875 : (isnan(_3875) ? 0.0 : max(_3875, 0.0));
                                float _3878 = isnan(1.0) ? _5025 : (isnan(_5025) ? 1.0 : min(_5025, 1.0));
                                float _3882 = ((_3878 * _3878) * (_3860 + (-1.0))) + 1.0;
                                float _3883 = _3820 * _3859;
                                float _3884 = _3883 * _3883;
                                float _3890 = ((1.0 - _3884) * dot(vec3(_1058, _1061, _1064), vec3(_3807, _3808, _3809))) + _3884;
                                float _5036 = isnan(0.0) ? _3890 : (isnan(_3890) ? 0.0 : max(_3890, 0.0));
                                float _3891 = isnan(1.0) ? _5036 : (isnan(_5036) ? 1.0 : min(_5036, 1.0));
                                float _3892 = 1.0 - _3859;
                                float _3902 = (0.5 / (((_3891 * ((_3874 * _3892) + _3859)) + 9.9999999392252902907785028219223e-09) + (((_3891 * _3892) + _3859) * _3874))) * _3891;
                                float _5047 = isnan(0.0) ? _3902 : (isnan(_3902) ? 0.0 : max(_3902, 0.0));
                                float _3912 = (_3837 * _3814) * (((_3860 * 3.1415927410125732421875) * (isnan(1.0) ? _5047 : (isnan(_5047) ? 1.0 : min(_5047, 1.0)))) / ((_3882 * _3882) * ((_3827 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3838 * _3684.y;
                                frontier_phi_78_pred_1 = _3838 * _3684.x;
                                frontier_phi_78_pred_2 = _3912 * _3696.z;
                                frontier_phi_78_pred_3 = _3912 * _3696.y;
                                frontier_phi_78_pred_4 = _3912 * _3696.x;
                                frontier_phi_78_pred_5 = _3838 * _3684.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3920 = frontier_phi_78_pred;
                            _3919 = frontier_phi_78_pred_1;
                            _3918 = frontier_phi_78_pred_2;
                            _3917 = frontier_phi_78_pred_3;
                            _3916 = frontier_phi_78_pred_4;
                            _3921 = frontier_phi_78_pred_5;
                            _3626 = _3919 + _3639;
                            _3627 = _3920 + _3640;
                            _3628 = _3921 + _3641;
                            _3623 = _3916 + _3636;
                            _3624 = _3917 + _3637;
                            _3625 = _3918 + _3638;
                            if (_3643 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3636 = _3623;
                                _3637 = _3624;
                                _3638 = _3625;
                                _3639 = _3626;
                                _3640 = _3627;
                                _3641 = _3628;
                                _3642 = _3643;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3628;
                        frontier_phi_72_pred_1 = _3627;
                        frontier_phi_72_pred_2 = _3626;
                        frontier_phi_72_pred_3 = _3625;
                        frontier_phi_72_pred_4 = _3624;
                        frontier_phi_72_pred_5 = _3623;
                    }
                    _3296 = frontier_phi_72_pred;
                    _3294 = frontier_phi_72_pred_1;
                    _3292 = frontier_phi_72_pred_2;
                    _3290 = frontier_phi_72_pred_3;
                    _3288 = frontier_phi_72_pred_4;
                    _3286 = frontier_phi_72_pred_5;
                    uint _3431 = _3430 + 1u;
                    if (_3431 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3424 = _3286;
                        _3425 = _3288;
                        _3426 = _3290;
                        _3427 = _3292;
                        _3428 = _3294;
                        _3429 = _3296;
                        _3430 = _3431;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3296;
                frontier_phi_60_61_ladder_1 = _3294;
                frontier_phi_60_61_ladder_2 = _3290;
                frontier_phi_60_61_ladder_3 = _3288;
                frontier_phi_60_61_ladder_4 = _3286;
                frontier_phi_60_61_ladder_5 = _3292;
            }
            else
            {
                frontier_phi_60_61_ladder = _3182;
                frontier_phi_60_61_ladder_1 = _3180;
                frontier_phi_60_61_ladder_2 = _3176;
                frontier_phi_60_61_ladder_3 = _3174;
                frontier_phi_60_61_ladder_4 = _3172;
                frontier_phi_60_61_ladder_5 = _3178;
            }
            _3285 = frontier_phi_60_61_ladder_4;
            _3287 = frontier_phi_60_61_ladder_3;
            _3289 = frontier_phi_60_61_ladder_2;
            _3291 = frontier_phi_60_61_ladder_5;
            _3293 = frontier_phi_60_61_ladder_1;
            _3295 = frontier_phi_60_61_ladder;
        }
        float _3300 = isnan(1.0) ? _1102 : (isnan(_1102) ? 1.0 : min(_1102, 1.0));
        _3105 = (_3300 * _3291) + _2636;
        _3107 = (_3300 * _3293) + _2638;
        _3109 = (_3300 * _3295) + _2640;
        _3111 = ((_3285 * 0.039999999105930328369140625) * _3300) + _2959;
        _3113 = ((_3287 * 0.039999999105930328369140625) * _3300) + _2961;
        _3115 = ((_3289 * 0.039999999105930328369140625) * _3300) + _2963;
    }
    else
    {
        _3105 = _2636;
        _3107 = _2638;
        _3109 = _2640;
        _3111 = _2959;
        _3113 = _2961;
        _3115 = _2963;
    }
    float _5063 = isnan(0.0) ? _1087 : (isnan(_1087) ? 0.0 : max(_1087, 0.0));
    float _5074 = isnan(0.0) ? _1088 : (isnan(_1088) ? 0.0 : max(_1088, 0.0));
    float _5085 = isnan(0.0) ? _1089 : (isnan(_1089) ? 0.0 : max(_1089, 0.0));
    uint _3135 = _263 + 6u;
    float _3143 = _1039 / cbSceneParam._m0[86u].x;
    float _3144 = _1040 / cbSceneParam._m0[86u].y;
    vec4 _3158 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3143, _3144, (log2((isnan(cbSceneParam._m0[77u].w) ? _974 : (isnan(_974) ? cbSceneParam._m0[77u].w : min(_974, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3160 = _3158.x;
    float _3161 = _3158.y;
    float _3162 = _3158.z;
    float _3163 = _3158.w;
    float _3235;
    float _3237;
    float _3239;
    float _3241;
    if (_974 > cbSceneParam._m0[78u].w)
    {
        float _3197 = isnan(_974) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _974 : min(cbSceneParam._m0[80u].w, _974));
        float _3198 = _3197 / _974;
        float _3209 = _3198 * _1024;
        float _3210 = _1025 * _3198;
        float _3211 = (-0.0) - _3210;
        float _3213 = _3198 * _1026;
        float _3215 = (cbSceneParam._m0[77u].w * _3211) / _3197;
        float _3216 = _3215 + cbSceneParam._m0[79u].w;
        float _3217 = cbSceneParam._m0[79u].w - _3210;
        float _3223 = sqrt(((_3209 * _3209) + (_3210 * _3210)) + (_3213 * _3213));
        float _3226 = (1.0 - (cbSceneParam._m0[77u].w / _3197)) * _3223;
        float _3231 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3233 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3386;
        if (abs((_3211 - _3215) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3386 = ((((_3216 > 0.0) ? exp2(_3231 * _3216) : (2.0 - exp2(_3233 * _3216))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3226;
        }
        else
        {
            float _3346 = 1.0 / cbSceneParam._m0[80u].x;
            float _3347 = isnan(_3217) ? _3216 : (isnan(_3216) ? _3217 : max(_3216, _3217));
            float _3348 = isnan(_3217) ? _3216 : (isnan(_3216) ? _3217 : min(_3216, _3217));
            float _3357 = isnan(0.0) ? _3347 : (isnan(_3347) ? 0.0 : min(_3347, 0.0));
            float _3358 = isnan(0.0) ? _3348 : (isnan(_3348) ? 0.0 : min(_3348, 0.0));
            _3386 = ((abs(_3223 / _3211) * cbSceneParam._m0[80u].y) * ((((_3357 - _3358) * 2.0) - ((exp2(_3231 * (isnan(0.0) ? _3347 : (isnan(_3347) ? 0.0 : max(_3347, 0.0)))) - exp2(_3231 * (isnan(0.0) ? _3348 : (isnan(_3348) ? 0.0 : max(_3348, 0.0))))) * _3346)) - ((exp2(_3233 * _3357) - exp2(_3233 * _3358)) * _3346))) + (_3226 * cbSceneParam._m0[80u].z);
        }
        vec4 _3388 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3143, _3144, 1.0), 0.0);
        float _3397 = exp2((_3386 * (-1.44269502162933349609375)) * (1.0 - _3388.w));
        float _3398 = log2(_3397);
        float _3414 = log2(_3163);
        _3235 = (exp2(_3414 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3398 * cbSceneParam._m0[78u].x)) * _3388.x) / cbSceneParam._m0[78u].x)) + _3160;
        _3237 = (exp2(_3414 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3398 * cbSceneParam._m0[78u].y)) * _3388.y) / cbSceneParam._m0[78u].y)) + _3161;
        _3239 = (exp2(_3414 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3398 * cbSceneParam._m0[78u].z)) * _3388.z) / cbSceneParam._m0[78u].z)) + _3162;
        _3241 = _3397 * _3163;
    }
    else
    {
        _3235 = _3160;
        _3237 = _3161;
        _3239 = _3162;
        _3241 = _3163;
    }
    float _3253 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3254 = _3253 == 3.0;
    float _3255 = log2(_3241);
    float _3262 = exp2(_3255 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5063 : (isnan(_5063) ? 1.0 : min(_5063, 1.0))) * (_3105 + ((isnan(0.0) ? _1826 : (isnan(_1826) ? 0.0 : max(_1826, 0.0))) * _1102))) + ((_3111 + ((isnan(0.0) ? _2117 : (isnan(_2117) ? 0.0 : max(_2117, 0.0))) * _1905)) * cbPerFrame._m0[3u].x));
    float _3263 = exp2(_3255 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5074 : (isnan(_5074) ? 1.0 : min(_5074, 1.0))) * (_3107 + ((isnan(0.0) ? _1829 : (isnan(_1829) ? 0.0 : max(_1829, 0.0))) * _1102))) + ((_3113 + ((isnan(0.0) ? _2120 : (isnan(_2120) ? 0.0 : max(_2120, 0.0))) * _1905)) * cbPerFrame._m0[3u].x));
    float _3264 = exp2(_3255 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5085 : (isnan(_5085) ? 1.0 : min(_5085, 1.0))) * (_3109 + ((isnan(0.0) ? _1832 : (isnan(_1832) ? 0.0 : max(_1832, 0.0))) * _1102))) + ((_3115 + ((isnan(0.0) ? _2123 : (isnan(_2123) ? 0.0 : max(_2123, 0.0))) * _1905)) * cbPerFrame._m0[3u].x));
    float _3273 = (_3253 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3273 * (_3254 ? _3262 : (_3262 + (cbSceneParam._m0[72u].w * _3235)));
    SV_Target.y = _3273 * (_3254 ? _3263 : (_3263 + (cbSceneParam._m0[72u].w * _3237)));
    SV_Target.z = _3273 * (_3254 ? _3264 : (_3264 + (cbSceneParam._m0[72u].w * _3239)));
    SV_Target.w = cbInstanceData._m0[_3135].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3135].w;
}


