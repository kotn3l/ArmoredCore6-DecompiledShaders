#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1455;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _234 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _235 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _236 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _242 = inversesqrt(dot(vec3(_234, _235, _236), vec3(_234, _235, _236)));
    float _243 = _242 * _234;
    float _244 = _242 * _235;
    float _245 = _242 * _236;
    float _249 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _250 = _249 * NORMAL.x;
    float _251 = _249 * NORMAL.y;
    float _252 = _249 * NORMAL.z;
    float _256 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _257 = _256 * TANGENT.x;
    float _258 = _256 * TANGENT.y;
    float _259 = _256 * TANGENT.z;
    float _268 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _270 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _271 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3783 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    float _3794 = isnan(0.0) ? _270 : (isnan(_270) ? 0.0 : max(_270, 0.0));
    float _3805 = isnan(0.0) ? _271 : (isnan(_271) ? 0.0 : max(_271, 0.0));
    uint _281 = uint(roundEven(NORMAL.w)) * 13u;
    uint _286 = _281 + 1u;
    uint _290 = _281 + 2u;
    float _299 = sqrt(((cbInstanceData._m0[_286].x * cbInstanceData._m0[_286].x) + (cbInstanceData._m0[_281].x * cbInstanceData._m0[_281].x)) + (cbInstanceData._m0[_290].x * cbInstanceData._m0[_290].x));
    float _300 = _299 * TEXCOORD.z;
    float _301 = _299 * TEXCOORD.w;
    vec4 _314 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _300) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _301) + cbTextureTilingScale._m0[13u].w));
    vec4 _338 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _343 = _338.x * cbMtdParam._m0[11u].x;
    float _344 = _338.y * cbMtdParam._m0[11u].y;
    float _345 = _338.z * cbMtdParam._m0[11u].z;
    vec4 _364 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _300) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _301) + cbTextureTilingScale._m0[5u].w));
    vec4 _383 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _418 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _420 = _418.x;
    float _432 = dot(vec4(_420, _418.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _449 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _383.x) * 2.0) - ((((_420 - _432) * cbMtdParam._m0[24u].z) + _432) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3816 = isnan(0.0) ? _449 : (isnan(_449) ? 0.0 : max(_449, 0.0));
    float _450 = isnan(1.0) ? _3816 : (isnan(_3816) ? 1.0 : min(_3816, 1.0));
    float _457 = (_450 * ((_364.x * cbMtdParam._m0[12u].x) - _343)) + _343;
    float _458 = (_450 * ((_364.y * cbMtdParam._m0[12u].y) - _344)) + _344;
    float _459 = (_450 * ((_364.z * cbMtdParam._m0[12u].z) - _345)) + _345;
    vec4 _476 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _300) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _301) + cbTextureTilingScale._m0[3u].w));
    vec4 _496 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _498 = _496.x;
    float _508 = dot(vec4(_498, _496.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _522 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _383.y) * 2.0) - ((((_498 - _508) * cbMtdParam._m0[24u].z) + _508) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3827 = isnan(0.0) ? _522 : (isnan(_522) ? 0.0 : max(_522, 0.0));
    float _523 = isnan(1.0) ? _3827 : (isnan(_3827) ? 1.0 : min(_3827, 1.0));
    float _530 = (_523 * ((_476.x * cbMtdParam._m0[13u].x) - _457)) + _457;
    float _531 = (_523 * ((_476.y * cbMtdParam._m0[13u].y) - _458)) + _458;
    float _532 = (_523 * ((_476.z * cbMtdParam._m0[13u].z) - _459)) + _459;
    float _536 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _314.x) * _530;
    float _539 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _314.y) * _531;
    float _542 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _314.z) * _532;
    float _549 = ((_530 - _536) * (isnan(1.0) ? _3783 : (isnan(_3783) ? 1.0 : min(_3783, 1.0)))) + _536;
    float _550 = ((_531 - _539) * (isnan(1.0) ? _3794 : (isnan(_3794) ? 1.0 : min(_3794, 1.0)))) + _539;
    float _551 = ((_532 - _542) * (isnan(1.0) ? _3805 : (isnan(_3805) ? 1.0 : min(_3805, 1.0)))) + _542;
    vec4 _568 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _300) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _301) + cbTextureTilingScale._m0[20u].w));
    vec4 _593 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _300) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _301) + cbTextureTilingScale._m0[4u].w));
    vec4 _610 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _612 = _610.x;
    float _613 = _610.y;
    float _614 = _610.z;
    float _621 = ((_593.x - _612) * _450) + _612;
    float _622 = ((_593.y - _613) * _450) + _613;
    float _623 = ((_593.z - _614) * _450) + _614;
    vec4 _635 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _300) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _301) + cbTextureTilingScale._m0[2u].w));
    float _648 = ((_635.z - _623) * _523) + _623;
    float _651 = ((((_635.x - _621) * _523) + _621) * 2.0) + (-1.0);
    float _652 = ((((_635.y - _622) * _523) + _622) * 2.0) + (-1.0);
    float _653 = dot(vec2(_651, _652), vec2(_651, _652));
    float _3838 = isnan(0.0) ? _653 : (isnan(_653) ? 0.0 : max(_653, 0.0));
    float _658 = sqrt(1.0 - (isnan(1.0) ? _3838 : (isnan(_3838) ? 1.0 : min(_3838, 1.0))));
    vec4 _676 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _688 = (_651 + ((((_568.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x)) + (((_676.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _689 = (_652 + ((((_568.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x)) + (((_676.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _692 = fma(_658, _250, fma(_689, _257, _688 * _243));
    float _695 = fma(_658, _251, fma(_689, _258, _688 * _244));
    float _698 = fma(_658, _252, fma(_689, _259, _688 * _245));
    float _702 = inversesqrt(dot(vec3(_692, _695, _698), vec3(_692, _695, _698)));
    vec4 _729 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _300) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _301) + cbTextureTilingScale._m0[11u].w));
    float _731 = _729.x;
    float _732 = 1.0 - _731;
    float _738 = (cbMtdParam._m0[19u].x + dot(vec4(_702 * _692, _702 * _695, _702 * _698, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_731 - _732) * cbMtdParam._m0[24u].w) + _732) * cbMtdParam._m0[21u].z);
    float _3849 = isnan(0.0) ? _738 : (isnan(_738) ? 0.0 : max(_738, 0.0));
    float _739 = isnan(1.0) ? _3849 : (isnan(_3849) ? 1.0 : min(_3849, 1.0));
    float _741 = (-0.0) - cbMtdParam._m0[24u].x;
    float _743 = isnan(0.0) ? _741 : (isnan(_741) ? 0.0 : max(_741, 0.0));
    float _744 = isnan(1.0) ? _743 : (isnan(_743) ? 1.0 : min(_743, 1.0));
    float _751 = _739 - ((_739 * TEXCOORD_8.x) * _744);
    float _752 = _739 - ((_739 * TEXCOORD_8.y) * _744);
    float _753 = _739 - ((_739 * TEXCOORD_8.z) * _744);
    float _760 = (_751 * (cbMtdParam._m0[17u].x - _549)) + _549;
    float _761 = (_752 * (cbMtdParam._m0[17u].y - _550)) + _550;
    float _762 = (_753 * (cbMtdParam._m0[17u].z - _551)) + _551;
    vec4 _774 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _300) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _301) + cbTextureTilingScale._m0[19u].w));
    float _776 = _774.x;
    float _777 = 1.0 - _776;
    float _803 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_776 - _777) * cbMtdParam._m0[24u].y) + _777) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3870 = isnan(0.0) ? _803 : (isnan(_803) ? 0.0 : max(_803, 0.0));
    float _804 = isnan(1.0) ? _3870 : (isnan(_3870) ? 1.0 : min(_3870, 1.0));
    float _812 = ((((cbMtdParam._m0[10u].x - _760) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _804) + _760;
    float _813 = ((((cbMtdParam._m0[10u].y - _761) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _804) + _761;
    float _814 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _762)) * _804) + _762;
    float _819 = (((_568.z - _648) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _648;
    float _823 = ((_676.z - _819) * cbMtdParam._m0[19u].w) + _819;
    vec4 _837 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _300) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _301) + cbTextureTilingScale._m0[15u].w));
    float _844 = (_837.x * 2.0) + (-1.0);
    float _845 = (_837.y * 2.0) + (-1.0);
    float _846 = dot(vec2(_844, _845), vec2(_844, _845));
    float _3881 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _854 = ((_837.z - _823) * _751) + _823;
    float _857 = ((cbMtdParam._m0[23u].y - _854) * _804) + _854;
    vec4 _878 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _300) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _301) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _884 = (_878.x * 2.0) + (-1.0);
    float _885 = (_878.y * 2.0) + (-1.0);
    float _886 = dot(vec2(_884, _885), vec2(_884, _885));
    float _3892 = isnan(0.0) ? _886 : (isnan(_886) ? 0.0 : max(_886, 0.0));
    float _901 = ((sqrt(1.0 - (isnan(1.0) ? _3881 : (isnan(_3881) ? 1.0 : min(_3881, 1.0)))) - _658) * _753) + _658;
    float _904 = (((_844 - _688) * _751) + _688) + (cbMtdParam._m0[21u].x * _688);
    float _905 = (((_845 - _689) * _752) + _689) + (cbMtdParam._m0[21u].x * _689);
    float _916 = (((_884 - _904) + (_904 * cbMtdParam._m0[22u].z)) * _804) + _904;
    float _917 = (((_885 - _905) + (_905 * cbMtdParam._m0[22u].z)) * _804) + _905;
    float _918 = (_804 * (sqrt(1.0 - (isnan(1.0) ? _3892 : (isnan(_3892) ? 1.0 : min(_3892, 1.0)))) - _901)) + _901;
    float _920 = cbMtdParam._m0[22u].x + _676.w;
    float _923 = fma(_918, _250, fma(_917, _257, _916 * _243));
    float _926 = fma(_918, _251, fma(_917, _258, _916 * _244));
    float _929 = fma(_918, _252, fma(_917, _259, _916 * _245));
    float _933 = inversesqrt(dot(vec3(_923, _926, _929), vec3(_923, _926, _929)));
    float _934 = _933 * _923;
    float _935 = _933 * _926;
    float _936 = _933 * _929;
    float _3903 = isnan(0.0) ? _857 : (isnan(_857) ? 0.0 : max(_857, 0.0));
    float _937 = isnan(1.0) ? _3903 : (isnan(_3903) ? 1.0 : min(_3903, 1.0));
    float _3914 = isnan(0.0) ? _920 : (isnan(_920) ? 0.0 : max(_920, 0.0));
    float _3925 = isnan(0.0) ? _812 : (isnan(_812) ? 0.0 : max(_812, 0.0));
    float _3936 = isnan(0.0) ? _813 : (isnan(_813) ? 0.0 : max(_813, 0.0));
    float _3947 = isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0));
    float _955 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _996 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1006 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _996);
    float _1007 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _996);
    float _1008 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _996);
    float _1012 = inversesqrt(dot(vec3(_1006, _1007, _1008), vec3(_1006, _1007, _1008)));
    float _1013 = _1006 * _1012;
    float _1014 = _1007 * _1012;
    float _1015 = _1008 * _1012;
    float _1021 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1022 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1040 = fma(_936, cbSceneParam._m0[5u].z, fma(_935, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _934));
    float _1043 = fma(_936, cbSceneParam._m0[6u].z, fma(_935, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _934));
    float _1046 = fma(_936, cbSceneParam._m0[7u].z, fma(_935, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _934));
    uint _1060 = (_281 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1066 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3925 : (isnan(_3925) ? 1.0 : min(_3925, 1.0)))) * cbInstanceData._m0[_1060].x;
    float _1067 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3936 : (isnan(_3936) ? 1.0 : min(_3936, 1.0)))) * cbInstanceData._m0[_1060].y;
    float _1068 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3947 : (isnan(_3947) ? 1.0 : min(_3947, 1.0)))) * cbInstanceData._m0[_1060].z;
    float _3958 = isnan(0.0) ? _1066 : (isnan(_1066) ? 0.0 : max(_1066, 0.0));
    float _1069 = isnan(1.0) ? _3958 : (isnan(_3958) ? 1.0 : min(_3958, 1.0));
    float _3969 = isnan(0.0) ? _1067 : (isnan(_1067) ? 0.0 : max(_1067, 0.0));
    float _1070 = isnan(1.0) ? _3969 : (isnan(_3969) ? 1.0 : min(_3969, 1.0));
    float _3980 = isnan(0.0) ? _1068 : (isnan(_1068) ? 0.0 : max(_1068, 0.0));
    float _1071 = isnan(1.0) ? _3980 : (isnan(_3980) ? 1.0 : min(_3980, 1.0));
    vec4 _1080 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1021, cbSceneParam._m0[86u].y * _1022));
    float _1084 = ((isnan(1.0) ? _3914 : (isnan(_3914) ? 1.0 : min(_3914, 1.0))) * TEXCOORD_5.w) * _1080.x;
    float _1085 = dot(vec3(_934, _935, _936), vec3(_1013, _1014, _1015));
    float _1088 = _1085 * 2.0;
    float _1092 = (_1088 * _934) - _1013;
    float _1093 = (_1088 * _935) - _1014;
    float _1094 = (_1088 * _936) - _1015;
    float _1098 = abs(dot(vec3(_1013, _1014, _1015), vec3(_934, _935, _936)));
    float _3991 = isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0));
    float _1100 = sqrt(_937);
    float _1113 = exp2((_1100 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3991 : (isnan(_3991) ? 1.0 : min(_3991, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1100 * 3.0));
    float _1145 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1149 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1153 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1454;
    float _1456;
    float _1457;
    float _1458;
    float _1459;
    float _1460;
    float _1461;
    float _1462;
    float _1463;
    float _1464;
    float _1465;
    float _1466;
    float _1467;
    float _1468;
    float _1469;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1179 = fma(_1153, cbModelParam._m0[26u].z, fma(_1149, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1145));
        float _1183 = fma(_1153, cbModelParam._m0[27u].z, fma(_1149, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1145));
        float _1187 = fma(_1153, cbModelParam._m0[28u].z, fma(_1149, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1145));
        float _1212 = _1145 + _934;
        float _1213 = _1149 + _935;
        float _1214 = _1153 + _936;
        float _1224 = fma(_1214, cbModelParam._m0[26u].z, fma(_1213, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1212)) - _1179;
        float _1225 = fma(_1214, cbModelParam._m0[27u].z, fma(_1213, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1212)) - _1183;
        float _1226 = fma(_1214, cbModelParam._m0[28u].z, fma(_1213, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1212)) - _1187;
        float _1230 = inversesqrt(dot(vec3(_1224, _1225, _1226), vec3(_1224, _1225, _1226)));
        float _1243 = ((_1230 * _1224) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1179 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1244 = ((_1230 * _1225) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1183 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1245 = ((_1230 * _1226) / cbModelParam._m0[34u].z) + ((((((_1187 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1248 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1243, _1244, _1245), 0.0);
        vec4 _1255 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1243, _1244, _1245), 0.0);
        vec4 _1262 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1243, _1244, _1245), 0.0);
        vec4 _1269 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1243, _1244, _1245), 0.0);
        float _1282 = exp2((_1248.w + (-0.5)) * 20.0) * 2.0;
        float _1283 = _1282 * (_1248.x + (-0.5));
        float _1284 = _1282 * (_1248.y + (-0.5));
        float _1285 = _1282 * (_1248.z + (-0.5));
        float _1292 = exp2((_1255.w + (-0.5)) * 20.0) * 2.0;
        float _1293 = _1292 * (_1255.x + (-0.5));
        float _1294 = _1292 * (_1255.y + (-0.5));
        float _1295 = _1292 * (_1255.z + (-0.5));
        float _1302 = exp2((_1262.w + (-0.5)) * 20.0) * 2.0;
        float _1303 = _1302 * (_1262.x + (-0.5));
        float _1304 = _1302 * (_1262.y + (-0.5));
        float _1305 = _1302 * (_1262.z + (-0.5));
        float _1312 = exp2((_1269.w + (-0.5)) * 20.0) * 2.0;
        float _1313 = _1312 * (_1269.x + (-0.5));
        float _1314 = _1312 * (_1269.y + (-0.5));
        float _1315 = _1312 * (_1269.z + (-0.5));
        float _1316 = isnan(0.0) ? _1313 : (isnan(_1313) ? 0.0 : max(_1313, 0.0));
        float _1317 = isnan(0.0) ? _1314 : (isnan(_1314) ? 0.0 : max(_1314, 0.0));
        float _1318 = isnan(0.0) ? _1315 : (isnan(_1315) ? 0.0 : max(_1315, 0.0));
        float _1319 = _1283 * 0.5;
        float _1320 = _1293 * 0.5;
        float _1321 = _1303 * 0.5;
        float _1322 = dot(vec3(_1319, _1320, _1321), vec3(_1319, _1320, _1321));
        float _1327 = (_1322 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1322);
        float _1336 = (dot(vec3(_934, _935, _936), vec3(_1327 * _1319, _1327 * _1320, _1327 * _1321)) + 1.0) * 0.5;
        float _4017 = isnan(0.0) ? _1336 : (isnan(_1336) ? 0.0 : max(_1336, 0.0));
        float _1346 = sqrt(((_1320 * _1320) + (_1319 * _1319)) + (_1321 * _1321)) / (_1316 + 9.9999997473787516355514526367188e-06);
        float _4028 = isnan(0.0) ? _1346 : (isnan(_1346) ? 0.0 : max(_1346, 0.0));
        float _1347 = isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0));
        float _1348 = _1347 * 2.0;
        float _1352 = (1.0 - _1347) / (_1347 + 1.0);
        float _4039 = isnan(0.0) ? _1352 : (isnan(_1352) ? 0.0 : max(_1352, 0.0));
        float _1353 = isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0));
        float _1362 = ((((1.0 - _1353) * (_1348 + 2.0)) * exp2(log2(isnan(1.0) ? _4017 : (isnan(_4017) ? 1.0 : min(_4017, 1.0))) * (_1348 + 1.0))) + _1353) * _1316;
        float _1363 = _1284 * 0.5;
        float _1364 = _1294 * 0.5;
        float _1365 = _1304 * 0.5;
        float _1366 = dot(vec3(_1363, _1364, _1365), vec3(_1363, _1364, _1365));
        float _1371 = (_1366 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1366);
        float _1379 = (dot(vec3(_934, _935, _936), vec3(_1371 * _1363, _1371 * _1364, _1371 * _1365)) + 1.0) * 0.5;
        float _4050 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1388 = sqrt(((_1364 * _1364) + (_1363 * _1363)) + (_1365 * _1365)) / (_1317 + 9.9999997473787516355514526367188e-06);
        float _4061 = isnan(0.0) ? _1388 : (isnan(_1388) ? 0.0 : max(_1388, 0.0));
        float _1389 = isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0));
        float _1390 = _1389 * 2.0;
        float _1394 = (1.0 - _1389) / (_1389 + 1.0);
        float _4072 = isnan(0.0) ? _1394 : (isnan(_1394) ? 0.0 : max(_1394, 0.0));
        float _1395 = isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0));
        float _1404 = ((((1.0 - _1395) * (_1390 + 2.0)) * exp2(log2(isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0))) * (_1390 + 1.0))) + _1395) * _1317;
        float _1405 = _1285 * 0.5;
        float _1406 = _1295 * 0.5;
        float _1407 = _1305 * 0.5;
        float _1408 = dot(vec3(_1405, _1406, _1407), vec3(_1405, _1406, _1407));
        float _1413 = (_1408 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1408);
        float _1421 = (dot(vec3(_934, _935, _936), vec3(_1413 * _1405, _1413 * _1406, _1413 * _1407)) + 1.0) * 0.5;
        float _4083 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
        float _1430 = sqrt(((_1406 * _1406) + (_1405 * _1405)) + (_1407 * _1407)) / (_1318 + 9.9999997473787516355514526367188e-06);
        float _4094 = isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0));
        float _1431 = isnan(1.0) ? _4094 : (isnan(_4094) ? 1.0 : min(_4094, 1.0));
        float _1432 = _1431 * 2.0;
        float _1436 = (1.0 - _1431) / (_1431 + 1.0);
        float _4105 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
        float _1437 = isnan(1.0) ? _4105 : (isnan(_4105) ? 1.0 : min(_4105, 1.0));
        float _1446 = ((((1.0 - _1437) * (_1432 + 2.0)) * exp2(log2(isnan(1.0) ? _4083 : (isnan(_4083) ? 1.0 : min(_4083, 1.0))) * (_1432 + 1.0))) + _1437) * _1318;
        _1454 = _1285;
        _1456 = _1284;
        _1457 = _1283;
        _1458 = _1295;
        _1459 = _1294;
        _1460 = _1293;
        _1461 = _1305;
        _1462 = _1304;
        _1463 = _1303;
        _1464 = _1318;
        _1465 = _1317;
        _1466 = _1316;
        _1467 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1362 : (isnan(_1362) ? 0.0 : max(_1362, 0.0)));
        _1468 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0)));
        _1469 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0)));
    }
    else
    {
        _1454 = _1455;
        _1456 = _1455;
        _1457 = _1455;
        _1458 = _1455;
        _1459 = _1455;
        _1460 = _1455;
        _1461 = _1455;
        _1462 = _1455;
        _1463 = _1455;
        _1464 = _1455;
        _1465 = _1455;
        _1466 = _1455;
        _1467 = 0.0;
        _1468 = 0.0;
        _1469 = 0.0;
    }
    float _1762;
    float _1763;
    float _1764;
    float _1765;
    float _1766;
    float _1767;
    float _1768;
    float _1769;
    float _1770;
    float _1771;
    float _1772;
    float _1773;
    float _1774;
    float _1775;
    float _1776;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1493 = fma(_1153, cbModelParam._m0[30u].z, fma(_1149, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1145));
        float _1497 = fma(_1153, cbModelParam._m0[31u].z, fma(_1149, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1145));
        float _1501 = fma(_1153, cbModelParam._m0[32u].z, fma(_1149, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1145));
        float _1524 = _1145 + _934;
        float _1525 = _1149 + _935;
        float _1526 = _1153 + _936;
        float _1536 = fma(_1526, cbModelParam._m0[30u].z, fma(_1525, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1524)) - _1493;
        float _1537 = fma(_1526, cbModelParam._m0[31u].z, fma(_1525, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1524)) - _1497;
        float _1538 = fma(_1526, cbModelParam._m0[32u].z, fma(_1525, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1524)) - _1501;
        float _1542 = inversesqrt(dot(vec3(_1536, _1537, _1538), vec3(_1536, _1537, _1538)));
        float _1555 = ((_1542 * _1536) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1493 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1556 = ((_1542 * _1537) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1497 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1557 = ((_1542 * _1538) / cbModelParam._m0[35u].z) + ((((((_1501 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1559 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1555, _1556, _1557), 0.0);
        vec4 _1566 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1555, _1556, _1557), 0.0);
        vec4 _1573 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1555, _1556, _1557), 0.0);
        vec4 _1580 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1555, _1556, _1557), 0.0);
        float _1592 = exp2((_1559.w + (-0.5)) * 20.0) * 2.0;
        float _1593 = _1592 * (_1559.x + (-0.5));
        float _1594 = _1592 * (_1559.y + (-0.5));
        float _1595 = _1592 * (_1559.z + (-0.5));
        float _1602 = exp2((_1566.w + (-0.5)) * 20.0) * 2.0;
        float _1603 = _1602 * (_1566.x + (-0.5));
        float _1604 = _1602 * (_1566.y + (-0.5));
        float _1605 = _1602 * (_1566.z + (-0.5));
        float _1612 = exp2((_1573.w + (-0.5)) * 20.0) * 2.0;
        float _1613 = _1612 * (_1573.x + (-0.5));
        float _1614 = _1612 * (_1573.y + (-0.5));
        float _1615 = _1612 * (_1573.z + (-0.5));
        float _1622 = exp2((_1580.w + (-0.5)) * 20.0) * 2.0;
        float _1623 = _1622 * (_1580.x + (-0.5));
        float _1624 = _1622 * (_1580.y + (-0.5));
        float _1625 = _1622 * (_1580.z + (-0.5));
        float _1626 = isnan(0.0) ? _1623 : (isnan(_1623) ? 0.0 : max(_1623, 0.0));
        float _1627 = isnan(0.0) ? _1624 : (isnan(_1624) ? 0.0 : max(_1624, 0.0));
        float _1628 = isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0));
        float _1629 = _1593 * 0.5;
        float _1630 = _1603 * 0.5;
        float _1631 = _1613 * 0.5;
        float _1632 = dot(vec3(_1629, _1630, _1631), vec3(_1629, _1630, _1631));
        float _1637 = (_1632 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1632);
        float _1645 = (dot(vec3(_934, _935, _936), vec3(_1637 * _1629, _1637 * _1630, _1637 * _1631)) + 1.0) * 0.5;
        float _4146 = isnan(0.0) ? _1645 : (isnan(_1645) ? 0.0 : max(_1645, 0.0));
        float _1654 = sqrt(((_1630 * _1630) + (_1629 * _1629)) + (_1631 * _1631)) / (_1626 + 9.9999997473787516355514526367188e-06);
        float _4157 = isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0));
        float _1655 = isnan(1.0) ? _4157 : (isnan(_4157) ? 1.0 : min(_4157, 1.0));
        float _1656 = _1655 * 2.0;
        float _1660 = (1.0 - _1655) / (_1655 + 1.0);
        float _4168 = isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0));
        float _1661 = isnan(1.0) ? _4168 : (isnan(_4168) ? 1.0 : min(_4168, 1.0));
        float _1670 = ((((1.0 - _1661) * (_1656 + 2.0)) * exp2(log2(isnan(1.0) ? _4146 : (isnan(_4146) ? 1.0 : min(_4146, 1.0))) * (_1656 + 1.0))) + _1661) * _1626;
        float _1671 = _1594 * 0.5;
        float _1672 = _1604 * 0.5;
        float _1673 = _1614 * 0.5;
        float _1674 = dot(vec3(_1671, _1672, _1673), vec3(_1671, _1672, _1673));
        float _1679 = (_1674 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1674);
        float _1687 = (dot(vec3(_934, _935, _936), vec3(_1679 * _1671, _1679 * _1672, _1679 * _1673)) + 1.0) * 0.5;
        float _4179 = isnan(0.0) ? _1687 : (isnan(_1687) ? 0.0 : max(_1687, 0.0));
        float _1696 = sqrt(((_1672 * _1672) + (_1671 * _1671)) + (_1673 * _1673)) / (_1627 + 9.9999997473787516355514526367188e-06);
        float _4190 = isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0));
        float _1697 = isnan(1.0) ? _4190 : (isnan(_4190) ? 1.0 : min(_4190, 1.0));
        float _1698 = _1697 * 2.0;
        float _1702 = (1.0 - _1697) / (_1697 + 1.0);
        float _4201 = isnan(0.0) ? _1702 : (isnan(_1702) ? 0.0 : max(_1702, 0.0));
        float _1703 = isnan(1.0) ? _4201 : (isnan(_4201) ? 1.0 : min(_4201, 1.0));
        float _1712 = ((((1.0 - _1703) * (_1698 + 2.0)) * exp2(log2(isnan(1.0) ? _4179 : (isnan(_4179) ? 1.0 : min(_4179, 1.0))) * (_1698 + 1.0))) + _1703) * _1627;
        float _1713 = _1595 * 0.5;
        float _1714 = _1605 * 0.5;
        float _1715 = _1615 * 0.5;
        float _1716 = dot(vec3(_1713, _1714, _1715), vec3(_1713, _1714, _1715));
        float _1721 = (_1716 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1716);
        float _1729 = (dot(vec3(_934, _935, _936), vec3(_1721 * _1713, _1721 * _1714, _1721 * _1715)) + 1.0) * 0.5;
        float _4212 = isnan(0.0) ? _1729 : (isnan(_1729) ? 0.0 : max(_1729, 0.0));
        float _1738 = sqrt(((_1714 * _1714) + (_1713 * _1713)) + (_1715 * _1715)) / (_1628 + 9.9999997473787516355514526367188e-06);
        float _4223 = isnan(0.0) ? _1738 : (isnan(_1738) ? 0.0 : max(_1738, 0.0));
        float _1739 = isnan(1.0) ? _4223 : (isnan(_4223) ? 1.0 : min(_4223, 1.0));
        float _1740 = _1739 * 2.0;
        float _1744 = (1.0 - _1739) / (_1739 + 1.0);
        float _4234 = isnan(0.0) ? _1744 : (isnan(_1744) ? 0.0 : max(_1744, 0.0));
        float _1745 = isnan(1.0) ? _4234 : (isnan(_4234) ? 1.0 : min(_4234, 1.0));
        float _1754 = ((((1.0 - _1745) * (_1740 + 2.0)) * exp2(log2(isnan(1.0) ? _4212 : (isnan(_4212) ? 1.0 : min(_4212, 1.0))) * (_1740 + 1.0))) + _1745) * _1628;
        _1762 = _1595;
        _1763 = _1594;
        _1764 = _1593;
        _1765 = _1605;
        _1766 = _1604;
        _1767 = _1603;
        _1768 = _1615;
        _1769 = _1614;
        _1770 = _1613;
        _1771 = _1628;
        _1772 = _1627;
        _1773 = _1626;
        _1774 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0)));
        _1775 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1712 : (isnan(_1712) ? 0.0 : max(_1712, 0.0)));
        _1776 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0)));
    }
    else
    {
        _1762 = _1455;
        _1763 = _1455;
        _1764 = _1455;
        _1765 = _1455;
        _1766 = _1455;
        _1767 = _1455;
        _1768 = _1455;
        _1769 = _1455;
        _1770 = _1455;
        _1771 = _1455;
        _1772 = _1455;
        _1773 = _1455;
        _1774 = 0.0;
        _1775 = 0.0;
        _1776 = 0.0;
    }
    float _1786 = (cbModelParam._m0[1u].x * (_1774 - _1467)) + _1467;
    float _1787 = (cbModelParam._m0[1u].x * (_1775 - _1468)) + _1468;
    float _1788 = (cbModelParam._m0[1u].x * (_1776 - _1469)) + _1469;
    float _1809 = fma(_1788, cbSceneParam._m0[89u].z, fma(_1787, cbSceneParam._m0[89u].y, _1786 * cbSceneParam._m0[89u].x));
    float _1812 = fma(_1788, cbSceneParam._m0[90u].z, fma(_1787, cbSceneParam._m0[90u].y, _1786 * cbSceneParam._m0[90u].x));
    float _1815 = fma(_1788, cbSceneParam._m0[91u].z, fma(_1787, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1786));
    float _1830 = _1092 * 0.5;
    float _1831 = _1093 * 0.5;
    float _1832 = _1094 * 0.5;
    float _1833 = dot(vec4(_1830, _1831, _1832, 1.0), vec4(_1764, _1767, _1770, _1773));
    float _1836 = dot(vec4(_1830, _1831, _1832, 1.0), vec4(_1763, _1766, _1769, _1772));
    float _1839 = dot(vec4(_1830, _1831, _1832, 1.0), vec4(_1762, _1765, _1768, _1771));
    float _1873;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1846 = dot(vec4(_1830, _1831, _1832, 1.0), vec4(_1454, _1458, _1461, _1464));
        float _1850 = dot(vec4(_1830, _1831, _1832, 1.0), vec4(_1456, _1459, _1462, _1465));
        float _1854 = dot(vec4(_1830, _1831, _1832, 1.0), vec4(_1457, _1460, _1463, _1466));
        float _1861 = dot(vec4(cbModelParam._m0[39u]), vec4(_1830, _1831, _1832, 1.0));
        _1873 = dot(vec3(isnan(0.0) ? _1854 : (isnan(_1854) ? 0.0 : max(_1854, 0.0)), isnan(0.0) ? _1850 : (isnan(_1850) ? 0.0 : max(_1850, 0.0)), isnan(0.0) ? _1846 : (isnan(_1846) ? 0.0 : max(_1846, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1861) ? 0.0 : (isnan(0.0) ? _1861 : max(0.0, _1861))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1873 = 1.0;
    }
    float _1884;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1875 = dot(vec4(cbModelParam._m0[40u]), vec4(_1830, _1831, _1832, 1.0));
        _1884 = dot(vec3(isnan(0.0) ? _1833 : (isnan(_1833) ? 0.0 : max(_1833, 0.0)), isnan(0.0) ? _1836 : (isnan(_1836) ? 0.0 : max(_1836, 0.0)), isnan(0.0) ? _1839 : (isnan(_1839) ? 0.0 : max(_1839, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1875) ? 0.0 : (isnan(0.0) ? _1875 : max(0.0, _1875))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1884 = 1.0;
    }
    float _1888 = (_1884 * cbModelParam._m0[1u].x) + (_1873 * (1.0 - cbModelParam._m0[1u].x));
    float _1898 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _937);
    float _1899 = isnan(_1898) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1898 : min(cbModelParam._m0[25u].z, _1898));
    float _1980;
    float _1982;
    float _1984;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1947 = fma(_1153, cbModelParam._m0[13u].z, fma(_1149, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1145)) + cbModelParam._m0[13u].w;
        float _1951 = fma(_1153, cbModelParam._m0[14u].z, fma(_1149, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1145)) + cbModelParam._m0[14u].w;
        float _1955 = fma(_1153, cbModelParam._m0[15u].z, fma(_1149, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1145)) + cbModelParam._m0[15u].w;
        float _1958 = fma(_1094, cbModelParam._m0[13u].z, fma(_1093, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1092));
        float _1961 = fma(_1094, cbModelParam._m0[14u].z, fma(_1093, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1092));
        float _1964 = fma(_1094, cbModelParam._m0[15u].z, fma(_1093, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1092));
        float _1992;
        if (_1958 > 0.0)
        {
            _1992 = abs((1.0 - _1947) / _1958);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1958 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1947 + 1.0) / _1958);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1992 = frontier_phi_14_12_ladder;
        }
        float _2214;
        if (_1961 > 0.0)
        {
            _2214 = abs((1.0 - _1951) / _1961);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1961 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1951 + 1.0) / _1961);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2214 = frontier_phi_23_19_ladder;
        }
        float _2460;
        if (_1964 > 0.0)
        {
            _2460 = abs((1.0 - _1955) / _1964);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1964 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1955 + 1.0) / _1964);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2460 = frontier_phi_35_30_ladder;
        }
        float _2462 = isnan(_2214) ? _1992 : (isnan(_1992) ? _2214 : min(_1992, _2214));
        float _2463 = isnan(_2460) ? _2462 : (isnan(_2462) ? _2460 : min(_2462, _2460));
        float _2467 = (_2463 * _1958) + _1947;
        float _2468 = (_2463 * _1961) + _1951;
        float _2469 = (_2463 * _1964) + _1955;
        float _2470 = _2463 * 9.9999997473787516355514526367188e-05;
        float _2472 = (-1.0) - _2470;
        float _2474 = _2470 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2469 > _2474) || ((_2469 < _2472) || ((_2468 > _2474) || ((_2468 < _2472) || ((_2467 < _2472) || (_2467 > _2474))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2593 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2469, cbModelParam._m0[9u].z, fma(_2468, cbModelParam._m0[9u].y, _2467 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2469, cbModelParam._m0[10u].z, fma(_2468, cbModelParam._m0[10u].y, _2467 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2469, cbModelParam._m0[11u].z, fma(_2468, cbModelParam._m0[11u].y, _2467 * cbModelParam._m0[11u].x))), _1899);
            frontier_phi_13_35_ladder = _2593.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2593.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2593.x * cbModelParam._m0[1u].y;
        }
        _1980 = frontier_phi_13_35_ladder_2;
        _1982 = frontier_phi_13_35_ladder_1;
        _1984 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1968 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1092, _1093, _1094), _1899);
        _1980 = _1968.x * cbModelParam._m0[1u].y;
        _1982 = _1968.y * cbModelParam._m0[1u].y;
        _1984 = _1968.z * cbModelParam._m0[1u].y;
    }
    float _1988 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _937);
    float _1989 = isnan(_1988) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1988 : min(cbModelParam._m0[25u].w, _1988));
    float _2079;
    float _2081;
    float _2083;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2043 = fma(_1153, cbModelParam._m0[21u].z, fma(_1149, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1145)) + cbModelParam._m0[21u].w;
        float _2047 = fma(_1153, cbModelParam._m0[22u].z, fma(_1149, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1145)) + cbModelParam._m0[22u].w;
        float _2051 = fma(_1153, cbModelParam._m0[23u].z, fma(_1149, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1145)) + cbModelParam._m0[23u].w;
        float _2054 = fma(_1094, cbModelParam._m0[21u].z, fma(_1093, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1092));
        float _2057 = fma(_1094, cbModelParam._m0[22u].z, fma(_1093, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1092));
        float _2060 = fma(_1094, cbModelParam._m0[23u].z, fma(_1093, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1092));
        float _2219;
        if (_2054 > 0.0)
        {
            _2219 = abs((1.0 - _2043) / _2054);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2054 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2043 + 1.0) / _2054);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2219 = frontier_phi_25_21_ladder;
        }
        float _2487;
        if (_2057 > 0.0)
        {
            _2487 = abs((1.0 - _2047) / _2057);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2057 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2047 + 1.0) / _2057);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2487 = frontier_phi_37_32_ladder;
        }
        float _2692;
        if (_2060 > 0.0)
        {
            _2692 = abs((1.0 - _2051) / _2060);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2060 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2051 + 1.0) / _2060);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2692 = frontier_phi_46_43_ladder;
        }
        float _2694 = isnan(_2487) ? _2219 : (isnan(_2219) ? _2487 : min(_2219, _2487));
        float _2695 = isnan(_2692) ? _2694 : (isnan(_2694) ? _2692 : min(_2694, _2692));
        float _2699 = (_2695 * _2054) + _2043;
        float _2700 = (_2695 * _2057) + _2047;
        float _2701 = (_2695 * _2060) + _2051;
        float _2702 = _2695 * 9.9999997473787516355514526367188e-05;
        float _2703 = (-1.0) - _2702;
        float _2705 = _2702 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2701 > _2705) || ((_2701 < _2703) || ((_2700 > _2705) || ((_2700 < _2703) || ((_2699 < _2703) || (_2699 > _2705))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2900 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2701, cbModelParam._m0[17u].z, fma(_2700, cbModelParam._m0[17u].y, _2699 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2701, cbModelParam._m0[18u].z, fma(_2700, cbModelParam._m0[18u].y, _2699 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2701, cbModelParam._m0[19u].z, fma(_2700, cbModelParam._m0[19u].y, _2699 * cbModelParam._m0[19u].x))), _1989);
            frontier_phi_22_46_ladder = _2900.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2900.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2900.x * cbModelParam._m0[1u].z;
        }
        _2079 = frontier_phi_22_46_ladder_2;
        _2081 = frontier_phi_22_46_ladder_1;
        _2083 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2063 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1092, _1093, _1094), _1989);
        _2079 = _2063.x * cbModelParam._m0[1u].z;
        _2081 = _2063.y * cbModelParam._m0[1u].z;
        _2083 = _2063.z * cbModelParam._m0[1u].z;
    }
    float _2095 = ((((1.0 - _1113) * ((_1100 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1113 * _1100)) * _1084;
    float _2096 = _2095 * ((cbModelParam._m0[1u].w * (_2079 - _1980)) + _1980);
    float _2097 = _2095 * ((cbModelParam._m0[1u].w * (_2081 - _1982)) + _1982);
    float _2098 = _2095 * ((cbModelParam._m0[1u].w * (_2083 - _1984)) + _1984);
    float _2101 = fma(_2098, cbSceneParam._m0[89u].z, fma(_2097, cbSceneParam._m0[89u].y, _2096 * cbSceneParam._m0[89u].x));
    float _2104 = fma(_2098, cbSceneParam._m0[90u].z, fma(_2097, cbSceneParam._m0[90u].y, _2096 * cbSceneParam._m0[90u].x));
    float _2107 = fma(_2098, cbSceneParam._m0[91u].z, fma(_2097, cbSceneParam._m0[91u].y, _2096 * cbSceneParam._m0[91u].x));
    vec4 _2115 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1021, _1022));
    float _2117 = _2115.w;
    float _2129 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2117);
    float _2130 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2117);
    float _2131 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2117);
    uvec4 _2135 = floatBitsToUint(cbInstanceData._m0[_281 + 5u]);
    uint _2137 = _2135.x * 14u;
    uint _2138 = _2137 + 13u;
    float _2145 = _1084 + (-1.0);
    float _2150 = (cbLight._m0[_2138].x * _2145) + 1.0;
    float _2151 = (cbLight._m0[_2138].y * _2145) + 1.0;
    float _2152 = (cbLight._m0[_2138].z * _2145) + 1.0;
    float _2153 = (cbLight._m0[_2138].w * _2145) + 1.0;
    uint _2154 = _2137 + 5u;
    float _2160 = isnan(1.0) ? _2151 : (isnan(_2151) ? 1.0 : min(_2151, 1.0));
    uint _2164 = _2137 + 4u;
    float _2173 = isnan(1.0) ? _2150 : (isnan(_2150) ? 1.0 : min(_2150, 1.0));
    uint _2177 = _2137 | 1u;
    float _2188 = dot(vec3(cbLight._m0[_2137].xyz), vec3(_934, _935, _936));
    float _2191 = dot(vec3(cbLight._m0[_2177].xyz), vec3(_934, _935, _936));
    float _4370 = isnan(0.0) ? _2188 : (isnan(_2188) ? 0.0 : max(_2188, 0.0));
    float _4381 = isnan(0.0) ? _2191 : (isnan(_2191) ? 0.0 : max(_2191, 0.0));
    float _2196 = (isnan(1.0) ? _4370 : (isnan(_4370) ? 1.0 : min(_4370, 1.0))) * 0.3183098733425140380859375;
    float _2198 = (isnan(1.0) ? _4381 : (isnan(_4381) ? 1.0 : min(_4381, 1.0))) * 0.3183098733425140380859375;
    float _2205 = ((cbLight._m0[_2154].x * _2160) * _2198) + (((cbLight._m0[_2164].x * _2129) * _2173) * _2196);
    float _2206 = ((_2160 * cbLight._m0[_2154].y) * _2198) + (((cbLight._m0[_2164].y * _2130) * _2173) * _2196);
    float _2207 = ((_2160 * cbLight._m0[_2154].z) * _2198) + (((cbLight._m0[_2164].z * _2131) * _2173) * _2196);
    uvec4 _2211 = floatBitsToUint(cbLight._m0[_2137 + 12u]);
    bool _2213 = _2211.x == 0u;
    float _2224;
    float _2226;
    float _2228;
    if (_2213)
    {
        _2224 = _2205;
        _2226 = _2206;
        _2228 = _2207;
    }
    else
    {
        uint _2232 = _2137 + 6u;
        float _2248 = (dot(vec3(cbLight._m0[_2137 + 2u].xyz), vec3(_934, _935, _936)) * 0.5) + 0.5;
        float _2249 = _2248 * _2248;
        float _4392 = isnan(0.0) ? _2249 : (isnan(_2249) ? 0.0 : max(_2249, 0.0));
        float _2250 = isnan(1.0) ? _4392 : (isnan(_4392) ? 1.0 : min(_4392, 1.0));
        float _2251 = isnan(1.0) ? _2152 : (isnan(_2152) ? 1.0 : min(_2152, 1.0));
        _2224 = (((cbLight._m0[_2232].x * 0.3183098733425140380859375) * _2250) * _2251) + _2205;
        _2226 = (((cbLight._m0[_2232].y * 0.3183098733425140380859375) * _2250) * _2251) + _2206;
        _2228 = (((cbLight._m0[_2232].z * 0.3183098733425140380859375) * _2250) * _2251) + _2207;
    }
    bool _2231 = _2211.y == 0u;
    float _2269;
    float _2271;
    float _2273;
    if (_2231)
    {
        _2269 = _2224;
        _2271 = _2226;
        _2273 = _2228;
    }
    else
    {
        uint _2431 = _2137 + 7u;
        float _2447 = (dot(vec3(cbLight._m0[_2137 + 3u].xyz), vec3(_934, _935, _936)) * 0.5) + 0.5;
        float _2448 = _2447 * _2447;
        float _4408 = isnan(0.0) ? _2448 : (isnan(_2448) ? 0.0 : max(_2448, 0.0));
        float _2449 = isnan(1.0) ? _4408 : (isnan(_4408) ? 1.0 : min(_4408, 1.0));
        float _2450 = isnan(1.0) ? _2153 : (isnan(_2153) ? 1.0 : min(_2153, 1.0));
        _2269 = (((cbLight._m0[_2431].x * 0.3183098733425140380859375) * _2449) * _2450) + _2224;
        _2271 = (((cbLight._m0[_2431].y * 0.3183098733425140380859375) * _2449) * _2450) + _2226;
        _2273 = (((cbLight._m0[_2431].z * 0.3183098733425140380859375) * _2449) * _2450) + _2228;
    }
    uint _2276 = _2137 + 8u;
    float _2289 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2137].w)) * _937) * 0.949999988079071044921875);
    float _2290 = _2289 * _2289;
    float _2291 = cbLight._m0[_2137].x + _1013;
    float _2292 = cbLight._m0[_2137].y + _1014;
    float _2293 = cbLight._m0[_2137].z + _1015;
    float _2297 = inversesqrt(dot(vec3(_2291, _2292, _2293), vec3(_2291, _2292, _2293)));
    float _2298 = _2297 * _2291;
    float _2299 = _2297 * _2292;
    float _2300 = _2297 * _2293;
    float _2301 = dot(vec3(_934, _935, _936), vec3(cbLight._m0[_2137].xyz));
    float _4424 = isnan(0.0) ? _2301 : (isnan(_2301) ? 0.0 : max(_2301, 0.0));
    float _2304 = isnan(1.0) ? _4424 : (isnan(_4424) ? 1.0 : min(_4424, 1.0));
    float _4435 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
    float _2305 = isnan(1.0) ? _4435 : (isnan(_4435) ? 1.0 : min(_4435, 1.0));
    float _2306 = dot(vec3(_934, _935, _936), vec3(_2298, _2299, _2300));
    float _4446 = isnan(0.0) ? _2306 : (isnan(_2306) ? 0.0 : max(_2306, 0.0));
    float _2309 = isnan(1.0) ? _4446 : (isnan(_4446) ? 1.0 : min(_4446, 1.0));
    float _2310 = dot(vec3(cbLight._m0[_2137].xyz), vec3(_2298, _2299, _2300));
    float _4457 = isnan(0.0) ? _2310 : (isnan(_2310) ? 0.0 : max(_2310, 0.0));
    float _2314 = _2290 * _2290;
    float _2318 = ((_2309 * _2309) * (_2314 + (-1.0))) + 1.0;
    float _2329 = (exp2(log2(1.0 - (isnan(1.0) ? _4457 : (isnan(_4457) ? 1.0 : min(_4457, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2330 = 1.0 - _2290;
    float _2341 = (0.5 / (((_2305 * ((_2304 * _2330) + _2290)) + 9.9999999392252902907785028219223e-09) + (((_2305 * _2330) + _2290) * _2304))) * _2304;
    float _4468 = isnan(0.0) ? _2341 : (isnan(_2341) ? 0.0 : max(_2341, 0.0));
    float _2343 = (isnan(1.0) ? _4468 : (isnan(_4468) ? 1.0 : min(_4468, 1.0))) * (_2314 / ((_2318 * _2318) * 3.141590118408203125));
    uint _2357 = _2137 + 9u;
    float _2368 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2177].w)) * _937) * 0.949999988079071044921875);
    float _2369 = _2368 * _2368;
    float _2370 = cbLight._m0[_2177].x + _1013;
    float _2371 = cbLight._m0[_2177].y + _1014;
    float _2372 = cbLight._m0[_2177].z + _1015;
    float _2376 = inversesqrt(dot(vec3(_2370, _2371, _2372), vec3(_2370, _2371, _2372)));
    float _2377 = _2376 * _2370;
    float _2378 = _2376 * _2371;
    float _2379 = _2376 * _2372;
    float _2380 = dot(vec3(_934, _935, _936), vec3(cbLight._m0[_2177].xyz));
    float _4479 = isnan(0.0) ? _2380 : (isnan(_2380) ? 0.0 : max(_2380, 0.0));
    float _2383 = isnan(1.0) ? _4479 : (isnan(_4479) ? 1.0 : min(_4479, 1.0));
    float _2384 = dot(vec3(_934, _935, _936), vec3(_2377, _2378, _2379));
    float _4490 = isnan(0.0) ? _2384 : (isnan(_2384) ? 0.0 : max(_2384, 0.0));
    float _2387 = isnan(1.0) ? _4490 : (isnan(_4490) ? 1.0 : min(_4490, 1.0));
    float _2388 = dot(vec3(cbLight._m0[_2177].xyz), vec3(_2377, _2378, _2379));
    float _4501 = isnan(0.0) ? _2388 : (isnan(_2388) ? 0.0 : max(_2388, 0.0));
    float _2392 = _2369 * _2369;
    float _2396 = ((_2387 * _2387) * (_2392 + (-1.0))) + 1.0;
    float _2405 = (exp2(log2(1.0 - (isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2406 = 1.0 - _2369;
    float _2416 = (0.5 / (((_2305 * ((_2383 * _2406) + _2369)) + 9.9999999392252902907785028219223e-09) + (((_2305 * _2406) + _2369) * _2383))) * _2383;
    float _4512 = isnan(0.0) ? _2416 : (isnan(_2416) ? 0.0 : max(_2416, 0.0));
    float _2418 = (isnan(1.0) ? _4512 : (isnan(_4512) ? 1.0 : min(_4512, 1.0))) * (_2392 / ((_2396 * _2396) * 3.141590118408203125));
    float _2428 = (((_2405 * cbLight._m0[_2357].x) * _2418) * _2160) + ((((cbLight._m0[_2276].x * _2129) * _2329) * _2343) * _2173);
    float _2429 = (((_2405 * cbLight._m0[_2357].y) * _2418) * _2160) + ((((cbLight._m0[_2276].y * _2130) * _2329) * _2343) * _2173);
    float _2430 = (((_2405 * cbLight._m0[_2357].z) * _2418) * _2160) + ((((cbLight._m0[_2276].z * _2131) * _2329) * _2343) * _2173);
    float _2492;
    float _2494;
    float _2496;
    if (_2213)
    {
        _2492 = _2428;
        _2494 = _2429;
        _2496 = _2430;
    }
    else
    {
        uint _2498 = _2137 + 2u;
        uint _2502 = _2137 + 10u;
        float _2516 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2498].w)) * _937) * 0.949999988079071044921875);
        float _2517 = _2516 * _2516;
        float _2518 = cbLight._m0[_2498].x + _1013;
        float _2519 = cbLight._m0[_2498].y + _1014;
        float _2520 = cbLight._m0[_2498].z + _1015;
        float _2524 = inversesqrt(dot(vec3(_2518, _2519, _2520), vec3(_2518, _2519, _2520)));
        float _2525 = _2524 * _2518;
        float _2526 = _2524 * _2519;
        float _2527 = _2524 * _2520;
        float _2528 = dot(vec3(_934, _935, _936), vec3(cbLight._m0[_2498].xyz));
        float _4523 = isnan(0.0) ? _2528 : (isnan(_2528) ? 0.0 : max(_2528, 0.0));
        float _2531 = isnan(1.0) ? _4523 : (isnan(_4523) ? 1.0 : min(_4523, 1.0));
        float _2532 = dot(vec3(_934, _935, _936), vec3(_2525, _2526, _2527));
        float _4534 = isnan(0.0) ? _2532 : (isnan(_2532) ? 0.0 : max(_2532, 0.0));
        float _2535 = isnan(1.0) ? _4534 : (isnan(_4534) ? 1.0 : min(_4534, 1.0));
        float _2536 = dot(vec3(cbLight._m0[_2498].xyz), vec3(_2525, _2526, _2527));
        float _4545 = isnan(0.0) ? _2536 : (isnan(_2536) ? 0.0 : max(_2536, 0.0));
        float _2540 = _2517 * _2517;
        float _2544 = ((_2535 * _2535) * (_2540 + (-1.0))) + 1.0;
        float _2553 = (exp2(log2(1.0 - (isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2554 = 1.0 - _2517;
        float _2564 = (0.5 / (((_2305 * ((_2531 * _2554) + _2517)) + 9.9999999392252902907785028219223e-09) + (((_2305 * _2554) + _2517) * _2531))) * _2531;
        float _4556 = isnan(0.0) ? _2564 : (isnan(_2564) ? 0.0 : max(_2564, 0.0));
        float _2566 = (isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0))) * (_2540 / ((_2544 * _2544) * 3.141590118408203125));
        float _2567 = isnan(1.0) ? _2152 : (isnan(_2152) ? 1.0 : min(_2152, 1.0));
        _2492 = (((_2553 * cbLight._m0[_2502].x) * _2566) * _2567) + _2428;
        _2494 = (((_2553 * cbLight._m0[_2502].y) * _2566) * _2567) + _2429;
        _2496 = (((_2553 * cbLight._m0[_2502].z) * _2566) * _2567) + _2430;
    }
    float _2602;
    float _2604;
    float _2606;
    if (_2231)
    {
        _2602 = _2492;
        _2604 = _2494;
        _2606 = _2496;
    }
    else
    {
        uint _2613 = _2137 + 3u;
        uint _2617 = _2137 + 11u;
        float _2631 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2613].w)) * _937) * 0.949999988079071044921875);
        float _2632 = _2631 * _2631;
        float _2633 = cbLight._m0[_2613].x + _1013;
        float _2634 = cbLight._m0[_2613].y + _1014;
        float _2635 = cbLight._m0[_2613].z + _1015;
        float _2639 = inversesqrt(dot(vec3(_2633, _2634, _2635), vec3(_2633, _2634, _2635)));
        float _2640 = _2639 * _2633;
        float _2641 = _2639 * _2634;
        float _2642 = _2639 * _2635;
        float _2643 = dot(vec3(_934, _935, _936), vec3(cbLight._m0[_2613].xyz));
        float _4572 = isnan(0.0) ? _2643 : (isnan(_2643) ? 0.0 : max(_2643, 0.0));
        float _2646 = isnan(1.0) ? _4572 : (isnan(_4572) ? 1.0 : min(_4572, 1.0));
        float _2647 = dot(vec3(_934, _935, _936), vec3(_2640, _2641, _2642));
        float _4583 = isnan(0.0) ? _2647 : (isnan(_2647) ? 0.0 : max(_2647, 0.0));
        float _2650 = isnan(1.0) ? _4583 : (isnan(_4583) ? 1.0 : min(_4583, 1.0));
        float _2651 = dot(vec3(cbLight._m0[_2613].xyz), vec3(_2640, _2641, _2642));
        float _4594 = isnan(0.0) ? _2651 : (isnan(_2651) ? 0.0 : max(_2651, 0.0));
        float _2655 = _2632 * _2632;
        float _2659 = ((_2650 * _2650) * (_2655 + (-1.0))) + 1.0;
        float _2668 = (exp2(log2(1.0 - (isnan(1.0) ? _4594 : (isnan(_4594) ? 1.0 : min(_4594, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2669 = 1.0 - _2632;
        float _2679 = (0.5 / (((_2305 * ((_2646 * _2669) + _2632)) + 9.9999999392252902907785028219223e-09) + (((_2305 * _2669) + _2632) * _2646))) * _2646;
        float _4605 = isnan(0.0) ? _2679 : (isnan(_2679) ? 0.0 : max(_2679, 0.0));
        float _2681 = (isnan(1.0) ? _4605 : (isnan(_4605) ? 1.0 : min(_4605, 1.0))) * (_2655 / ((_2659 * _2659) * 3.141590118408203125));
        float _2682 = isnan(1.0) ? _2153 : (isnan(_2153) ? 1.0 : min(_2153, 1.0));
        _2602 = (((_2668 * cbLight._m0[_2617].x) * _2681) * _2682) + _2492;
        _2604 = (((_2668 * cbLight._m0[_2617].y) * _2681) * _2682) + _2494;
        _2606 = (((_2668 * cbLight._m0[_2617].z) * _2681) * _2682) + _2496;
    }
    float _2817;
    float _2819;
    float _2821;
    float _2823;
    float _2825;
    float _2827;
    if (_2135.y == 0u)
    {
        float _2757 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2758 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2757;
        float _2759 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2757;
        float _2760 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2757;
        uvec4 _2772 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2773 = _2772.x;
        uint _2784 = uint((float(_2772.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1022) / _2773))) + floor(float(uint(cbSceneParam._m0[85u].x * _1021) / _2773)));
        float _2794 = (log2(_2760 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2795 = isnan(0.0) ? _2794 : (isnan(_2794) ? 0.0 : max(_2794, 0.0));
        uint _2798 = uint(isnan(14.0) ? _2795 : (isnan(_2795) ? 14.0 : min(_2795, 14.0)));
        uvec4 _2803 = texelFetch(g_lightClusterGridBuffer, int(((_2798 << 2u) + (_2784 << 6u)) >> 2u));
        uint _2804 = _2803.x;
        uint _2805 = _2772.z;
        float _2905;
        float _2907;
        float _2909;
        float _2911;
        float _2913;
        float _2915;
        if (((((1u << ((_2805 >> 4u) & 15u)) + 4294967295u) & _2804) == 0u) || ((_2805 & 240u) == 0u))
        {
            _2905 = 0.0;
            _2907 = 0.0;
            _2909 = 0.0;
            _2911 = 0.0;
            _2913 = 0.0;
            _2915 = 0.0;
        }
        else
        {
            float _2906;
            float _2908;
            float _2910;
            float _2912;
            float _2914;
            float _2916;
            float _3049 = 0.0;
            float _3050 = 0.0;
            float _3051 = 0.0;
            float _3052 = 0.0;
            float _3053 = 0.0;
            float _3054 = 0.0;
            uint _3055 = 0u;
            uint _3064;
            bool _3065;
            for (;;)
            {
                _3064 = texelFetch(g_lightClassification, int((((_2798 << 5u) + (_2784 << 9u)) + (_3055 << 2u)) >> 2u)).x;
                _3065 = _3064 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3065)
                {
                    frontier_phi_61_pred = _3049;
                    frontier_phi_61_pred_1 = _3054;
                    frontier_phi_61_pred_2 = _3053;
                    frontier_phi_61_pred_3 = _3052;
                    frontier_phi_61_pred_4 = _3051;
                    frontier_phi_61_pred_5 = _3050;
                }
                else
                {
                    float _3173;
                    float _3174;
                    float _3175;
                    float _3176;
                    float _3177;
                    float _3178;
                    uint _3179;
                    _3173 = _3049;
                    _3174 = _3050;
                    _3175 = _3051;
                    _3176 = _3052;
                    _3177 = _3053;
                    _3178 = _3054;
                    _3179 = _3064;
                    float _3105;
                    float _3106;
                    float _3107;
                    float _3108;
                    float _3109;
                    float _3110;
                    for (;;)
                    {
                        uint _3183 = uint(findLSB(_3179)) + (_3055 << 5u);
                        uint _3180 = (_3179 + 4294967295u) & _3179;
                        uint _3185 = _3183 * 48u;
                        vec4 _3199 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3185)).x, texelFetch(g_PointLightRenderingBuffer, int(_3185 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3185 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3185 + 3u)).x));
                        uint _3205 = (_3183 * 48u) + 4u;
                        vec4 _3218 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3205)).x, texelFetch(g_PointLightRenderingBuffer, int(_3205 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3205 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3205 + 3u)).x));
                        uint _3224 = (_3183 * 48u) + 8u;
                        vec3 _3235 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3224)).x, texelFetch(g_PointLightRenderingBuffer, int(_3224 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3224 + 2u)).x));
                        float _3239 = _3199.x - _2758;
                        float _3240 = _3199.y - _2759;
                        float _3241 = _3199.z - _2760;
                        float _3242 = dot(vec3(_3239, _3240, _3241), vec3(_3239, _3240, _3241));
                        float _3245 = inversesqrt(_3242);
                        float _3246 = _3245 * _3239;
                        float _3247 = _3245 * _3240;
                        float _3248 = _3245 * _3241;
                        float _3249 = dot(vec3(_1040, _1043, _1046), vec3(_3246, _3247, _3248));
                        float _3254 = 1.0 - (_3242 * _3199.w);
                        float _4631 = isnan(0.0) ? _3254 : (isnan(_3254) ? 0.0 : max(_3254, 0.0));
                        float _3255 = isnan(1.0) ? _4631 : (isnan(_4631) ? 1.0 : min(_4631, 1.0));
                        float _3256 = sqrt(_3242) * _3218.w;
                        float _3259 = 1.39999997615814208984375 / (_3256 + 1.39999997615814208984375);
                        float _3260 = _3259 * _3259;
                        float _3263 = ((1.0 - _3260) * _3249) + _3260;
                        float _3266 = _3256 * _3256;
                        float _3270 = ((isnan(0.0) ? _3263 : (isnan(_3263) ? 0.0 : max(_3263, 0.0))) * _3255) / ((_3266 * 0.699999988079071044921875) + 1.0);
                        float _3274 = (-0.0) - _2758;
                        float _3275 = (-0.0) - _2759;
                        float _3276 = (-0.0) - _2760;
                        float _3280 = inversesqrt(dot(vec3(_3274, _3275, _3276), vec3(_3274, _3275, _3276)));
                        float _3281 = _3280 * _3274;
                        float _3282 = _3280 * _3275;
                        float _3283 = _3280 * _3276;
                        float _3291 = exp2(log2(1.0 / ((_3266 * 3.5) + 5.0)) * 0.25);
                        float _3292 = 1.0 - _1100;
                        float _3299 = sqrt(1.0 - ((1.0 - (_3292 * _3292)) * (1.0 - (_3291 * _3291))));
                        float _3300 = _3299 * _3299;
                        float _3301 = _3300 * _3300;
                        float _3302 = _3281 + _3246;
                        float _3303 = _3282 + _3247;
                        float _3304 = _3283 + _3248;
                        float _3308 = inversesqrt(dot(vec3(_3302, _3303, _3304), vec3(_3302, _3303, _3304)));
                        float _3312 = dot(vec3(_1040, _1043, _1046), vec3(_3281, _3282, _3283));
                        float _4647 = isnan(0.0) ? _3312 : (isnan(_3312) ? 0.0 : max(_3312, 0.0));
                        float _3315 = isnan(1.0) ? _4647 : (isnan(_4647) ? 1.0 : min(_4647, 1.0));
                        float _3316 = dot(vec3(_1040, _1043, _1046), vec3(_3308 * _3302, _3308 * _3303, _3308 * _3304));
                        float _4658 = isnan(0.0) ? _3316 : (isnan(_3316) ? 0.0 : max(_3316, 0.0));
                        float _3319 = isnan(1.0) ? _4658 : (isnan(_4658) ? 1.0 : min(_4658, 1.0));
                        float _3323 = ((_3319 * _3319) * (_3301 + (-1.0))) + 1.0;
                        float _3324 = _3259 * _3300;
                        float _3325 = _3324 * _3324;
                        float _3328 = ((1.0 - _3325) * _3249) + _3325;
                        float _4669 = isnan(0.0) ? _3328 : (isnan(_3328) ? 0.0 : max(_3328, 0.0));
                        float _3329 = isnan(1.0) ? _4669 : (isnan(_4669) ? 1.0 : min(_4669, 1.0));
                        float _3330 = 1.0 - _3300;
                        float _3340 = (0.5 / (((_3329 * ((_3315 * _3330) + _3300)) + 9.9999999392252902907785028219223e-09) + (((_3329 * _3330) + _3300) * _3315))) * _3329;
                        float _4680 = isnan(0.0) ? _3340 : (isnan(_3340) ? 0.0 : max(_3340, 0.0));
                        float _3351 = (((_3301 * 3.1415927410125732421875) * (isnan(1.0) ? _4680 : (isnan(_4680) ? 1.0 : min(_4680, 1.0)))) / ((_3323 * _3323) * ((_3266 * 2.1991131305694580078125) + 3.141590118408203125))) * _3255;
                        _3108 = (_3270 * _3218.x) + _3176;
                        _3109 = (_3270 * _3218.y) + _3177;
                        _3110 = (_3270 * _3218.z) + _3178;
                        _3105 = (_3351 * _3235.x) + _3173;
                        _3106 = (_3351 * _3235.y) + _3174;
                        _3107 = (_3351 * _3235.z) + _3175;
                        if (_3180 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3173 = _3105;
                            _3174 = _3106;
                            _3175 = _3107;
                            _3176 = _3108;
                            _3177 = _3109;
                            _3178 = _3110;
                            _3179 = _3180;
                        }
                    }
                    frontier_phi_61_pred = _3105;
                    frontier_phi_61_pred_1 = _3110;
                    frontier_phi_61_pred_2 = _3109;
                    frontier_phi_61_pred_3 = _3108;
                    frontier_phi_61_pred_4 = _3107;
                    frontier_phi_61_pred_5 = _3106;
                }
                _2906 = frontier_phi_61_pred;
                _2916 = frontier_phi_61_pred_1;
                _2914 = frontier_phi_61_pred_2;
                _2912 = frontier_phi_61_pred_3;
                _2910 = frontier_phi_61_pred_4;
                _2908 = frontier_phi_61_pred_5;
                uint _3056 = _3055 + 1u;
                if (_3056 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3049 = _2906;
                    _3050 = _2908;
                    _3051 = _2910;
                    _3052 = _2912;
                    _3053 = _2914;
                    _3054 = _2916;
                    _3055 = _3056;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2905 = _2906;
            _2907 = _2908;
            _2909 = _2910;
            _2911 = _2912;
            _2913 = _2914;
            _2915 = _2916;
        }
        uvec4 _2919 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2920 = _2919.z;
        uint _2922 = (_2920 >> 8u) & 15u;
        float _3017;
        float _3019;
        float _3021;
        float _3023;
        float _3025;
        float _3027;
        if (((4294967295u << _2922) & _2804) == 0u)
        {
            _3017 = _2905;
            _3019 = _2907;
            _3021 = _2909;
            _3023 = _2911;
            _3025 = _2913;
            _3027 = _2915;
        }
        else
        {
            float _3042 = inversesqrt(dot(vec3(_2758, _2759, _2760), vec3(_2758, _2759, _2760)));
            float _3043 = _3042 * _2758;
            float _3044 = _3042 * _2759;
            float _3045 = _3042 * _2760;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2922 < ((_2920 >> 12u) & 15u))
            {
                float _3018;
                float _3020;
                float _3022;
                float _3024;
                float _3026;
                float _3028;
                float _3156 = _2905;
                float _3157 = _2907;
                float _3158 = _2909;
                float _3159 = _2911;
                float _3160 = _2913;
                float _3161 = _2915;
                uint _3162 = _2922;
                uint _3171;
                bool _3172;
                for (;;)
                {
                    _3171 = texelFetch(g_lightClassification, int((((_2798 << 5u) + (_2784 << 9u)) + (_3162 << 2u)) >> 2u)).x;
                    _3172 = _3171 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3172)
                    {
                        frontier_phi_67_pred = _3159;
                        frontier_phi_67_pred_1 = _3160;
                        frontier_phi_67_pred_2 = _3161;
                        frontier_phi_67_pred_3 = _3158;
                        frontier_phi_67_pred_4 = _3157;
                        frontier_phi_67_pred_5 = _3156;
                    }
                    else
                    {
                        float _3356;
                        float _3357;
                        float _3358;
                        float _3359;
                        float _3360;
                        float _3361;
                        float _3649;
                        float _3650;
                        float _3651;
                        float _3652;
                        float _3653;
                        float _3654;
                        float _3369 = _3156;
                        float _3370 = _3157;
                        float _3371 = _3158;
                        float _3372 = _3159;
                        float _3373 = _3160;
                        float _3374 = _3161;
                        uint _3375 = _3171;
                        uint _3376;
                        vec4 _3401;
                        float _3402;
                        vec4 _3417;
                        vec3 _3429;
                        vec4 _3444;
                        vec4 _3459;
                        float _3505;
                        bool _3506;
                        for (;;)
                        {
                            uint _3386 = ((_3162 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3375));
                            _3376 = (_3375 + 4294967295u) & _3375;
                            uint _3388 = _3386 * 40u;
                            _3401 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3388)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3388 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3388 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3388 + 3u)).x));
                            _3402 = _3401.w;
                            uint _3404 = (_3386 * 40u) + 4u;
                            _3417 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3404)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3404 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3404 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3404 + 3u)).x));
                            uint _3419 = (_3386 * 40u) + 8u;
                            _3429 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3419)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3419 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3419 + 2u)).x));
                            uint _3431 = (_3386 * 40u) + 16u;
                            _3444 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3431)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3431 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3431 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3431 + 3u)).x));
                            uint _3446 = (_3386 * 40u) + 20u;
                            _3459 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3446)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3446 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3446 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3446 + 3u)).x));
                            uint _3461 = (_3386 * 40u) + 24u;
                            vec4 _3474 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3461)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3461 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3461 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3461 + 3u)).x));
                            uint _3480 = (_3386 * 40u) + 28u;
                            vec4 _3493 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3480)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3480 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3480 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3480 + 3u)).x));
                            _3505 = fma(_2760, _3493.z, fma(_2759, _3493.y, _3493.x * _2758)) + _3493.w;
                            _3506 = !((fma(_2760, _3474.z, fma(_2759, _3474.y, _3474.x * _2758)) + _3474.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3506)
                            {
                                float _3533 = _3401.x - _2758;
                                float _3534 = _3401.y - _2759;
                                float _3535 = _3401.z - _2760;
                                float _3536 = dot(vec3(_3533, _3534, _3535), vec3(_3533, _3534, _3535));
                                float _3539 = inversesqrt(_3536);
                                float _3540 = _3539 * _3533;
                                float _3541 = _3539 * _3534;
                                float _3542 = _3539 * _3535;
                                float _3546 = 1.0 - (_3536 / (_3402 * _3402));
                                float _4691 = isnan(0.0) ? _3546 : (isnan(_3546) ? 0.0 : max(_3546, 0.0));
                                float _3547 = isnan(1.0) ? _4691 : (isnan(_4691) ? 1.0 : min(_4691, 1.0));
                                float _3551 = sqrt(_3536) * _3417.w;
                                float _3553 = 1.39999997615814208984375 / (_3551 + 1.39999997615814208984375);
                                float _3554 = _3553 * _3553;
                                float _3557 = ((1.0 - _3554) * dot(vec3(_3540, _3541, _3542), vec3(_1040, _1043, _1046))) + _3554;
                                float _3560 = _3551 * _3551;
                                float _3564 = (fma(_2760, _3444.z, fma(_2759, _3444.y, _3444.x * _2758)) + _3444.w) / _3505;
                                float _3565 = (fma(_2760, _3459.z, fma(_2759, _3459.y, _3459.x * _2758)) + _3459.w) / _3505;
                                float _3569 = 1.0 - dot(vec2(_3564, _3565), vec2(_3564, _3565));
                                float _4707 = isnan(0.0) ? _3569 : (isnan(_3569) ? 0.0 : max(_3569, 0.0));
                                float _3570 = isnan(1.0) ? _4707 : (isnan(_4707) ? 1.0 : min(_4707, 1.0));
                                float _3571 = _3570 * (((isnan(0.0) ? _3557 : (isnan(_3557) ? 0.0 : max(_3557, 0.0))) * _3547) / ((_3560 * 0.699999988079071044921875) + 1.0));
                                float _3583 = exp2(log2(1.0 / ((_3560 * 3.5) + 5.0)) * 0.25);
                                float _3584 = 1.0 - _1100;
                                float _3591 = sqrt(1.0 - ((1.0 - (_3584 * _3584)) * (1.0 - (_3583 * _3583))));
                                float _3592 = _3591 * _3591;
                                float _3593 = _3592 * _3592;
                                float _3594 = _3540 - _3043;
                                float _3595 = _3541 - _3044;
                                float _3596 = _3542 - _3045;
                                float _3600 = inversesqrt(dot(vec3(_3594, _3595, _3596), vec3(_3594, _3595, _3596)));
                                float _3604 = dot(vec3(_1040, _1043, _1046), vec3((-0.0) - _3043, (-0.0) - _3044, (-0.0) - _3045));
                                float _4718 = isnan(0.0) ? _3604 : (isnan(_3604) ? 0.0 : max(_3604, 0.0));
                                float _3607 = isnan(1.0) ? _4718 : (isnan(_4718) ? 1.0 : min(_4718, 1.0));
                                float _3608 = dot(vec3(_1040, _1043, _1046), vec3(_3600 * _3594, _3600 * _3595, _3600 * _3596));
                                float _4729 = isnan(0.0) ? _3608 : (isnan(_3608) ? 0.0 : max(_3608, 0.0));
                                float _3611 = isnan(1.0) ? _4729 : (isnan(_4729) ? 1.0 : min(_4729, 1.0));
                                float _3615 = ((_3611 * _3611) * (_3593 + (-1.0))) + 1.0;
                                float _3616 = _3553 * _3592;
                                float _3617 = _3616 * _3616;
                                float _3623 = ((1.0 - _3617) * dot(vec3(_1040, _1043, _1046), vec3(_3540, _3541, _3542))) + _3617;
                                float _4740 = isnan(0.0) ? _3623 : (isnan(_3623) ? 0.0 : max(_3623, 0.0));
                                float _3624 = isnan(1.0) ? _4740 : (isnan(_4740) ? 1.0 : min(_4740, 1.0));
                                float _3625 = 1.0 - _3592;
                                float _3635 = (0.5 / (((_3624 * ((_3607 * _3625) + _3592)) + 9.9999999392252902907785028219223e-09) + (((_3624 * _3625) + _3592) * _3607))) * _3624;
                                float _4751 = isnan(0.0) ? _3635 : (isnan(_3635) ? 0.0 : max(_3635, 0.0));
                                float _3645 = (_3570 * _3547) * (((_3593 * 3.1415927410125732421875) * (isnan(1.0) ? _4751 : (isnan(_4751) ? 1.0 : min(_4751, 1.0)))) / ((_3615 * _3615) * ((_3560 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3645 * _3429.x;
                                frontier_phi_73_pred_1 = _3645 * _3429.y;
                                frontier_phi_73_pred_2 = _3571 * _3417.z;
                                frontier_phi_73_pred_3 = _3571 * _3417.y;
                                frontier_phi_73_pred_4 = _3571 * _3417.x;
                                frontier_phi_73_pred_5 = _3645 * _3429.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3649 = frontier_phi_73_pred;
                            _3650 = frontier_phi_73_pred_1;
                            _3654 = frontier_phi_73_pred_2;
                            _3653 = frontier_phi_73_pred_3;
                            _3652 = frontier_phi_73_pred_4;
                            _3651 = frontier_phi_73_pred_5;
                            _3359 = _3652 + _3372;
                            _3360 = _3653 + _3373;
                            _3361 = _3654 + _3374;
                            _3356 = _3649 + _3369;
                            _3357 = _3650 + _3370;
                            _3358 = _3651 + _3371;
                            if (_3376 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3369 = _3356;
                                _3370 = _3357;
                                _3371 = _3358;
                                _3372 = _3359;
                                _3373 = _3360;
                                _3374 = _3361;
                                _3375 = _3376;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3359;
                        frontier_phi_67_pred_1 = _3360;
                        frontier_phi_67_pred_2 = _3361;
                        frontier_phi_67_pred_3 = _3358;
                        frontier_phi_67_pred_4 = _3357;
                        frontier_phi_67_pred_5 = _3356;
                    }
                    _3024 = frontier_phi_67_pred;
                    _3026 = frontier_phi_67_pred_1;
                    _3028 = frontier_phi_67_pred_2;
                    _3022 = frontier_phi_67_pred_3;
                    _3020 = frontier_phi_67_pred_4;
                    _3018 = frontier_phi_67_pred_5;
                    uint _3163 = _3162 + 1u;
                    if (_3163 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3156 = _3018;
                        _3157 = _3020;
                        _3158 = _3022;
                        _3159 = _3024;
                        _3160 = _3026;
                        _3161 = _3028;
                        _3162 = _3163;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3026;
                frontier_phi_55_56_ladder_1 = _3028;
                frontier_phi_55_56_ladder_2 = _3024;
                frontier_phi_55_56_ladder_3 = _3022;
                frontier_phi_55_56_ladder_4 = _3020;
                frontier_phi_55_56_ladder_5 = _3018;
            }
            else
            {
                frontier_phi_55_56_ladder = _2913;
                frontier_phi_55_56_ladder_1 = _2915;
                frontier_phi_55_56_ladder_2 = _2911;
                frontier_phi_55_56_ladder_3 = _2909;
                frontier_phi_55_56_ladder_4 = _2907;
                frontier_phi_55_56_ladder_5 = _2905;
            }
            _3017 = frontier_phi_55_56_ladder_5;
            _3019 = frontier_phi_55_56_ladder_4;
            _3021 = frontier_phi_55_56_ladder_3;
            _3023 = frontier_phi_55_56_ladder_2;
            _3025 = frontier_phi_55_56_ladder;
            _3027 = frontier_phi_55_56_ladder_1;
        }
        float _3032 = isnan(1.0) ? _1084 : (isnan(_1084) ? 1.0 : min(_1084, 1.0));
        _2817 = (_3032 * _3023) + _2269;
        _2819 = (_3032 * _3025) + _2271;
        _2821 = (_3032 * _3027) + _2273;
        _2823 = ((_3017 * 0.039999999105930328369140625) * _3032) + _2602;
        _2825 = ((_3019 * 0.039999999105930328369140625) * _3032) + _2604;
        _2827 = ((_3021 * 0.039999999105930328369140625) * _3032) + _2606;
    }
    else
    {
        _2817 = _2269;
        _2819 = _2271;
        _2821 = _2273;
        _2823 = _2602;
        _2825 = _2604;
        _2827 = _2606;
    }
    float _4767 = isnan(0.0) ? _1069 : (isnan(_1069) ? 0.0 : max(_1069, 0.0));
    float _4778 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
    float _4789 = isnan(0.0) ? _1071 : (isnan(_1071) ? 0.0 : max(_1071, 0.0));
    uint _2847 = _281 + 6u;
    float _2855 = _1021 / cbSceneParam._m0[86u].x;
    float _2856 = _1022 / cbSceneParam._m0[86u].y;
    vec4 _2870 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2855, _2856, (log2((isnan(cbSceneParam._m0[77u].w) ? _955 : (isnan(_955) ? cbSceneParam._m0[77u].w : min(_955, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2872 = _2870.x;
    float _2873 = _2870.y;
    float _2874 = _2870.z;
    float _2875 = _2870.w;
    float _2967;
    float _2969;
    float _2971;
    float _2973;
    if (_955 > cbSceneParam._m0[78u].w)
    {
        float _2930 = isnan(_955) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _955 : min(cbSceneParam._m0[80u].w, _955));
        float _2931 = _2930 / _955;
        float _2942 = _2931 * _1006;
        float _2943 = _1007 * _2931;
        float _2944 = (-0.0) - _2943;
        float _2945 = _2931 * _1008;
        float _2947 = (cbSceneParam._m0[77u].w * _2944) / _2930;
        float _2948 = _2947 + cbSceneParam._m0[79u].w;
        float _2949 = cbSceneParam._m0[79u].w - _2943;
        float _2955 = sqrt(((_2942 * _2942) + (_2943 * _2943)) + (_2945 * _2945));
        float _2958 = (1.0 - (cbSceneParam._m0[77u].w / _2930)) * _2955;
        float _2963 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2965 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3118;
        if (abs((_2944 - _2947) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3118 = ((((_2948 > 0.0) ? exp2(_2963 * _2948) : (2.0 - exp2(_2965 * _2948))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2958;
        }
        else
        {
            float _3078 = 1.0 / cbSceneParam._m0[80u].x;
            float _3079 = isnan(_2949) ? _2948 : (isnan(_2948) ? _2949 : max(_2948, _2949));
            float _3080 = isnan(_2949) ? _2948 : (isnan(_2948) ? _2949 : min(_2948, _2949));
            float _3089 = isnan(0.0) ? _3079 : (isnan(_3079) ? 0.0 : min(_3079, 0.0));
            float _3090 = isnan(0.0) ? _3080 : (isnan(_3080) ? 0.0 : min(_3080, 0.0));
            _3118 = ((abs(_2955 / _2944) * cbSceneParam._m0[80u].y) * ((((_3089 - _3090) * 2.0) - ((exp2(_2963 * (isnan(0.0) ? _3079 : (isnan(_3079) ? 0.0 : max(_3079, 0.0)))) - exp2(_2963 * (isnan(0.0) ? _3080 : (isnan(_3080) ? 0.0 : max(_3080, 0.0))))) * _3078)) - ((exp2(_2965 * _3089) - exp2(_2965 * _3090)) * _3078))) + (_2958 * cbSceneParam._m0[80u].z);
        }
        vec4 _3120 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2855, _2856, 1.0), 0.0);
        float _3129 = exp2((_3118 * (-1.44269502162933349609375)) * (1.0 - _3120.w));
        float _3130 = log2(_3129);
        float _3146 = log2(_2875);
        _2967 = (exp2(_3146 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3130 * cbSceneParam._m0[78u].x)) * _3120.x) / cbSceneParam._m0[78u].x)) + _2872;
        _2969 = (exp2(_3146 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3130 * cbSceneParam._m0[78u].y)) * _3120.y) / cbSceneParam._m0[78u].y)) + _2873;
        _2971 = (exp2(_3146 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3130 * cbSceneParam._m0[78u].z)) * _3120.z) / cbSceneParam._m0[78u].z)) + _2874;
        _2973 = _3129 * _2875;
    }
    else
    {
        _2967 = _2872;
        _2969 = _2873;
        _2971 = _2874;
        _2973 = _2875;
    }
    float _2985 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2986 = _2985 == 3.0;
    float _2987 = log2(_2973);
    float _2994 = exp2(_2987 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4767 : (isnan(_4767) ? 1.0 : min(_4767, 1.0))) * (_2817 + ((isnan(0.0) ? _1809 : (isnan(_1809) ? 0.0 : max(_1809, 0.0))) * _1084))) + ((_2823 + ((isnan(0.0) ? _2101 : (isnan(_2101) ? 0.0 : max(_2101, 0.0))) * _1888)) * cbPerFrame._m0[3u].x));
    float _2995 = exp2(_2987 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4778 : (isnan(_4778) ? 1.0 : min(_4778, 1.0))) * (_2819 + ((isnan(0.0) ? _1812 : (isnan(_1812) ? 0.0 : max(_1812, 0.0))) * _1084))) + ((_2825 + ((isnan(0.0) ? _2104 : (isnan(_2104) ? 0.0 : max(_2104, 0.0))) * _1888)) * cbPerFrame._m0[3u].x));
    float _2996 = exp2(_2987 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4789 : (isnan(_4789) ? 1.0 : min(_4789, 1.0))) * (_2821 + ((isnan(0.0) ? _1815 : (isnan(_1815) ? 0.0 : max(_1815, 0.0))) * _1084))) + ((_2827 + ((isnan(0.0) ? _2107 : (isnan(_2107) ? 0.0 : max(_2107, 0.0))) * _1888)) * cbPerFrame._m0[3u].x));
    float _3005 = (_2985 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3005 * (_2986 ? _2994 : (_2994 + (cbSceneParam._m0[72u].w * _2967)));
    SV_Target.y = _3005 * (_2986 ? _2995 : (_2995 + (cbSceneParam._m0[72u].w * _2969)));
    SV_Target.z = _3005 * (_2986 ? _2996 : (_2996 + (cbSceneParam._m0[72u].w * _2971)));
    SV_Target.w = cbInstanceData._m0[_2847].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2847].w;
}


