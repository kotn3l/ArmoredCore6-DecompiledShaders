#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1249;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _217 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _218 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _219 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _225 = inversesqrt(dot(vec3(_217, _218, _219), vec3(_217, _218, _219)));
    float _226 = _225 * _217;
    float _227 = _225 * _218;
    float _228 = _225 * _219;
    float _232 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _233 = _232 * NORMAL.x;
    float _234 = _232 * NORMAL.y;
    float _235 = _232 * NORMAL.z;
    float _239 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _240 = _239 * TANGENT.x;
    float _241 = _239 * TANGENT.y;
    float _242 = _239 * TANGENT.z;
    float _253 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _255 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _256 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3836 = isnan(0.0) ? _253 : (isnan(_253) ? 0.0 : max(_253, 0.0));
    float _3847 = isnan(0.0) ? _255 : (isnan(_255) ? 0.0 : max(_255, 0.0));
    float _3858 = isnan(0.0) ? _256 : (isnan(_256) ? 0.0 : max(_256, 0.0));
    uint _266 = uint(roundEven(NORMAL.w)) * 13u;
    uint _271 = _266 + 1u;
    uint _275 = _266 + 2u;
    float _284 = sqrt(((cbInstanceData._m0[_271].x * cbInstanceData._m0[_271].x) + (cbInstanceData._m0[_266].x * cbInstanceData._m0[_266].x)) + (cbInstanceData._m0[_275].x * cbInstanceData._m0[_275].x));
    float _285 = _284 * TEXCOORD.z;
    float _286 = _284 * TEXCOORD.w;
    vec4 _299 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _285) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _286) + cbTextureTilingScale._m0[13u].w));
    vec4 _323 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _328 = _323.x * cbMtdParam._m0[11u].x;
    float _329 = _323.y * cbMtdParam._m0[11u].y;
    float _330 = _323.z * cbMtdParam._m0[11u].z;
    vec4 _349 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _285) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _286) + cbTextureTilingScale._m0[5u].w));
    vec4 _400 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _402 = _400.x;
    float _414 = dot(vec4(_402, _400.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _431 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w)).x) * 2.0) - ((((_402 - _414) * cbMtdParam._m0[24u].z) + _414) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3869 = isnan(0.0) ? _431 : (isnan(_431) ? 0.0 : max(_431, 0.0));
    float _432 = isnan(1.0) ? _3869 : (isnan(_3869) ? 1.0 : min(_3869, 1.0));
    float _439 = (_432 * ((_349.x * cbMtdParam._m0[12u].x) - _328)) + _328;
    float _440 = (_432 * ((_349.y * cbMtdParam._m0[12u].y) - _329)) + _329;
    float _441 = (_432 * ((_349.z * cbMtdParam._m0[12u].z) - _330)) + _330;
    float _445 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _299.x) * _439;
    float _448 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _299.y) * _440;
    float _451 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _299.z) * _441;
    float _458 = ((_439 - _445) * (isnan(1.0) ? _3836 : (isnan(_3836) ? 1.0 : min(_3836, 1.0)))) + _445;
    float _459 = ((_440 - _448) * (isnan(1.0) ? _3847 : (isnan(_3847) ? 1.0 : min(_3847, 1.0)))) + _448;
    float _460 = ((_441 - _451) * (isnan(1.0) ? _3858 : (isnan(_3858) ? 1.0 : min(_3858, 1.0)))) + _451;
    vec4 _479 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _285) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _286) + cbTextureTilingScale._m0[14u].w));
    vec4 _499 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _285) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _286) + cbTextureTilingScale._m0[20u].w));
    vec4 _526 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _285) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _286) + cbTextureTilingScale._m0[4u].w));
    vec4 _543 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _545 = _543.x;
    float _546 = _543.y;
    float _547 = _543.z;
    float _556 = ((_526.z - _547) * _432) + _547;
    float _559 = ((((_526.x - _545) * _432) + _545) * 2.0) + (-1.0);
    float _560 = ((((_526.y - _546) * _432) + _546) * 2.0) + (-1.0);
    float _561 = dot(vec2(_559, _560), vec2(_559, _560));
    float _3880 = isnan(0.0) ? _561 : (isnan(_561) ? 0.0 : max(_561, 0.0));
    float _566 = sqrt(1.0 - (isnan(1.0) ? _3880 : (isnan(_3880) ? 1.0 : min(_3880, 1.0))));
    vec4 _586 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _598 = (_559 + ((((_499.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x)) + (((_586.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _599 = (_560 + ((((_499.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x)) + (((_586.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _602 = fma(_566, _233, fma(_599, _240, _598 * _226));
    float _605 = fma(_566, _234, fma(_599, _241, _598 * _227));
    float _608 = fma(_566, _235, fma(_599, _242, _598 * _228));
    float _612 = inversesqrt(dot(vec3(_602, _605, _608), vec3(_602, _605, _608)));
    vec4 _639 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _285) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _286) + cbTextureTilingScale._m0[11u].w));
    float _641 = _639.x;
    float _642 = 1.0 - _641;
    float _648 = (cbMtdParam._m0[19u].x + dot(vec4(_612 * _602, _612 * _605, _612 * _608, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_641 - _642) * cbMtdParam._m0[24u].w) + _642) * cbMtdParam._m0[21u].z);
    float _3891 = isnan(0.0) ? _648 : (isnan(_648) ? 0.0 : max(_648, 0.0));
    float _649 = isnan(1.0) ? _3891 : (isnan(_3891) ? 1.0 : min(_3891, 1.0));
    float _656 = (_649 * ((_479.x * cbMtdParam._m0[18u].x) - _458)) + _458;
    float _657 = (_649 * ((_479.y * cbMtdParam._m0[18u].y) - _459)) + _459;
    float _658 = (_649 * ((_479.z * cbMtdParam._m0[18u].z) - _460)) + _460;
    float _663 = (((_499.z - _556) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _556;
    float _667 = ((_586.z - _663) * cbMtdParam._m0[19u].w) + _663;
    vec4 _680 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _285) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _286) + cbTextureTilingScale._m0[15u].w));
    float _687 = (_680.x * 2.0) + (-1.0);
    float _688 = (_680.y * 2.0) + (-1.0);
    float _689 = dot(vec2(_687, _688), vec2(_687, _688));
    float _3902 = isnan(0.0) ? _689 : (isnan(_689) ? 0.0 : max(_689, 0.0));
    float _697 = ((_680.z - _667) * _649) + _667;
    float _707 = ((sqrt(1.0 - (isnan(1.0) ? _3902 : (isnan(_3902) ? 1.0 : min(_3902, 1.0)))) - _566) * _649) + _566;
    float _710 = (((_687 - _598) * _649) + _598) + (cbMtdParam._m0[21u].x * _598);
    float _711 = (((_688 - _599) * _649) + _599) + (cbMtdParam._m0[21u].x * _599);
    float _713 = cbMtdParam._m0[22u].x + _586.w;
    float _716 = fma(_707, _233, fma(_711, _240, _710 * _226));
    float _719 = fma(_707, _234, fma(_711, _241, _710 * _227));
    float _722 = fma(_707, _235, fma(_711, _242, _710 * _228));
    float _726 = inversesqrt(dot(vec3(_716, _719, _722), vec3(_716, _719, _722)));
    float _727 = _726 * _716;
    float _728 = _726 * _719;
    float _729 = _726 * _722;
    float _3913 = isnan(0.0) ? _697 : (isnan(_697) ? 0.0 : max(_697, 0.0));
    float _730 = isnan(1.0) ? _3913 : (isnan(_3913) ? 1.0 : min(_3913, 1.0));
    float _3924 = isnan(0.0) ? _713 : (isnan(_713) ? 0.0 : max(_713, 0.0));
    float _3935 = isnan(0.0) ? _656 : (isnan(_656) ? 0.0 : max(_656, 0.0));
    float _3946 = isnan(0.0) ? _657 : (isnan(_657) ? 0.0 : max(_657, 0.0));
    float _3957 = isnan(0.0) ? _658 : (isnan(_658) ? 0.0 : max(_658, 0.0));
    float _748 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _790 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _800 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _790);
    float _801 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _790);
    float _802 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _790);
    float _806 = inversesqrt(dot(vec3(_800, _801, _802), vec3(_800, _801, _802)));
    float _807 = _800 * _806;
    float _808 = _801 * _806;
    float _809 = _802 * _806;
    float _815 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _816 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _834 = fma(_729, cbSceneParam._m0[5u].z, fma(_728, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _727));
    float _837 = fma(_729, cbSceneParam._m0[6u].z, fma(_728, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _727));
    float _840 = fma(_729, cbSceneParam._m0[7u].z, fma(_728, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _727));
    uint _854 = (_266 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _860 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3935 : (isnan(_3935) ? 1.0 : min(_3935, 1.0)))) * cbInstanceData._m0[_854].x;
    float _861 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3946 : (isnan(_3946) ? 1.0 : min(_3946, 1.0)))) * cbInstanceData._m0[_854].y;
    float _862 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3957 : (isnan(_3957) ? 1.0 : min(_3957, 1.0)))) * cbInstanceData._m0[_854].z;
    float _3968 = isnan(0.0) ? _860 : (isnan(_860) ? 0.0 : max(_860, 0.0));
    float _863 = isnan(1.0) ? _3968 : (isnan(_3968) ? 1.0 : min(_3968, 1.0));
    float _3979 = isnan(0.0) ? _861 : (isnan(_861) ? 0.0 : max(_861, 0.0));
    float _864 = isnan(1.0) ? _3979 : (isnan(_3979) ? 1.0 : min(_3979, 1.0));
    float _3990 = isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0));
    float _865 = isnan(1.0) ? _3990 : (isnan(_3990) ? 1.0 : min(_3990, 1.0));
    vec4 _874 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _815, cbSceneParam._m0[86u].y * _816));
    float _878 = ((isnan(1.0) ? _3924 : (isnan(_3924) ? 1.0 : min(_3924, 1.0))) * TEXCOORD_5.w) * _874.x;
    float _879 = dot(vec3(_727, _728, _729), vec3(_807, _808, _809));
    float _882 = _879 * 2.0;
    float _886 = (_882 * _727) - _807;
    float _887 = (_882 * _728) - _808;
    float _888 = (_882 * _729) - _809;
    float _892 = abs(dot(vec3(_807, _808, _809), vec3(_727, _728, _729)));
    float _4001 = isnan(0.0) ? _892 : (isnan(_892) ? 0.0 : max(_892, 0.0));
    float _894 = sqrt(_730);
    float _907 = exp2((_894 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4001 : (isnan(_4001) ? 1.0 : min(_4001, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_894 * 3.0));
    float _939 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _943 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _947 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1248;
    float _1250;
    float _1251;
    float _1252;
    float _1253;
    float _1254;
    float _1255;
    float _1256;
    float _1257;
    float _1258;
    float _1259;
    float _1260;
    float _1261;
    float _1262;
    float _1263;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _973 = fma(_947, cbModelParam._m0[26u].z, fma(_943, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _939));
        float _977 = fma(_947, cbModelParam._m0[27u].z, fma(_943, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _939));
        float _981 = fma(_947, cbModelParam._m0[28u].z, fma(_943, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _939));
        float _1006 = _939 + _727;
        float _1007 = _943 + _728;
        float _1008 = _947 + _729;
        float _1018 = fma(_1008, cbModelParam._m0[26u].z, fma(_1007, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1006)) - _973;
        float _1019 = fma(_1008, cbModelParam._m0[27u].z, fma(_1007, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1006)) - _977;
        float _1020 = fma(_1008, cbModelParam._m0[28u].z, fma(_1007, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1006)) - _981;
        float _1024 = inversesqrt(dot(vec3(_1018, _1019, _1020), vec3(_1018, _1019, _1020)));
        float _1037 = ((_1024 * _1018) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_973 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1038 = ((_1024 * _1019) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_977 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1039 = ((_1024 * _1020) / cbModelParam._m0[34u].z) + ((((((_981 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1042 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1037, _1038, _1039), 0.0);
        vec4 _1049 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1037, _1038, _1039), 0.0);
        vec4 _1056 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1037, _1038, _1039), 0.0);
        vec4 _1063 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1037, _1038, _1039), 0.0);
        float _1076 = exp2((_1042.w + (-0.5)) * 20.0) * 2.0;
        float _1077 = _1076 * (_1042.x + (-0.5));
        float _1078 = _1076 * (_1042.y + (-0.5));
        float _1079 = _1076 * (_1042.z + (-0.5));
        float _1086 = exp2((_1049.w + (-0.5)) * 20.0) * 2.0;
        float _1087 = _1086 * (_1049.x + (-0.5));
        float _1088 = _1086 * (_1049.y + (-0.5));
        float _1089 = _1086 * (_1049.z + (-0.5));
        float _1096 = exp2((_1056.w + (-0.5)) * 20.0) * 2.0;
        float _1097 = _1096 * (_1056.x + (-0.5));
        float _1098 = _1096 * (_1056.y + (-0.5));
        float _1099 = _1096 * (_1056.z + (-0.5));
        float _1106 = exp2((_1063.w + (-0.5)) * 20.0) * 2.0;
        float _1107 = _1106 * (_1063.x + (-0.5));
        float _1108 = _1106 * (_1063.y + (-0.5));
        float _1109 = _1106 * (_1063.z + (-0.5));
        float _1110 = isnan(0.0) ? _1107 : (isnan(_1107) ? 0.0 : max(_1107, 0.0));
        float _1111 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
        float _1112 = isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0));
        float _1113 = _1077 * 0.5;
        float _1114 = _1087 * 0.5;
        float _1115 = _1097 * 0.5;
        float _1116 = dot(vec3(_1113, _1114, _1115), vec3(_1113, _1114, _1115));
        float _1121 = (_1116 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1116);
        float _1130 = (dot(vec3(_727, _728, _729), vec3(_1121 * _1113, _1121 * _1114, _1121 * _1115)) + 1.0) * 0.5;
        float _4027 = isnan(0.0) ? _1130 : (isnan(_1130) ? 0.0 : max(_1130, 0.0));
        float _1140 = sqrt(((_1114 * _1114) + (_1113 * _1113)) + (_1115 * _1115)) / (_1110 + 9.9999997473787516355514526367188e-06);
        float _4038 = isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0));
        float _1141 = isnan(1.0) ? _4038 : (isnan(_4038) ? 1.0 : min(_4038, 1.0));
        float _1142 = _1141 * 2.0;
        float _1146 = (1.0 - _1141) / (_1141 + 1.0);
        float _4049 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
        float _1147 = isnan(1.0) ? _4049 : (isnan(_4049) ? 1.0 : min(_4049, 1.0));
        float _1156 = ((((1.0 - _1147) * (_1142 + 2.0)) * exp2(log2(isnan(1.0) ? _4027 : (isnan(_4027) ? 1.0 : min(_4027, 1.0))) * (_1142 + 1.0))) + _1147) * _1110;
        float _1157 = _1078 * 0.5;
        float _1158 = _1088 * 0.5;
        float _1159 = _1098 * 0.5;
        float _1160 = dot(vec3(_1157, _1158, _1159), vec3(_1157, _1158, _1159));
        float _1165 = (_1160 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1160);
        float _1173 = (dot(vec3(_727, _728, _729), vec3(_1165 * _1157, _1165 * _1158, _1165 * _1159)) + 1.0) * 0.5;
        float _4060 = isnan(0.0) ? _1173 : (isnan(_1173) ? 0.0 : max(_1173, 0.0));
        float _1182 = sqrt(((_1158 * _1158) + (_1157 * _1157)) + (_1159 * _1159)) / (_1111 + 9.9999997473787516355514526367188e-06);
        float _4071 = isnan(0.0) ? _1182 : (isnan(_1182) ? 0.0 : max(_1182, 0.0));
        float _1183 = isnan(1.0) ? _4071 : (isnan(_4071) ? 1.0 : min(_4071, 1.0));
        float _1184 = _1183 * 2.0;
        float _1188 = (1.0 - _1183) / (_1183 + 1.0);
        float _4082 = isnan(0.0) ? _1188 : (isnan(_1188) ? 0.0 : max(_1188, 0.0));
        float _1189 = isnan(1.0) ? _4082 : (isnan(_4082) ? 1.0 : min(_4082, 1.0));
        float _1198 = ((((1.0 - _1189) * (_1184 + 2.0)) * exp2(log2(isnan(1.0) ? _4060 : (isnan(_4060) ? 1.0 : min(_4060, 1.0))) * (_1184 + 1.0))) + _1189) * _1111;
        float _1199 = _1079 * 0.5;
        float _1200 = _1089 * 0.5;
        float _1201 = _1099 * 0.5;
        float _1202 = dot(vec3(_1199, _1200, _1201), vec3(_1199, _1200, _1201));
        float _1207 = (_1202 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1202);
        float _1215 = (dot(vec3(_727, _728, _729), vec3(_1207 * _1199, _1207 * _1200, _1207 * _1201)) + 1.0) * 0.5;
        float _4093 = isnan(0.0) ? _1215 : (isnan(_1215) ? 0.0 : max(_1215, 0.0));
        float _1224 = sqrt(((_1200 * _1200) + (_1199 * _1199)) + (_1201 * _1201)) / (_1112 + 9.9999997473787516355514526367188e-06);
        float _4104 = isnan(0.0) ? _1224 : (isnan(_1224) ? 0.0 : max(_1224, 0.0));
        float _1225 = isnan(1.0) ? _4104 : (isnan(_4104) ? 1.0 : min(_4104, 1.0));
        float _1226 = _1225 * 2.0;
        float _1230 = (1.0 - _1225) / (_1225 + 1.0);
        float _4115 = isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0));
        float _1231 = isnan(1.0) ? _4115 : (isnan(_4115) ? 1.0 : min(_4115, 1.0));
        float _1240 = ((((1.0 - _1231) * (_1226 + 2.0)) * exp2(log2(isnan(1.0) ? _4093 : (isnan(_4093) ? 1.0 : min(_4093, 1.0))) * (_1226 + 1.0))) + _1231) * _1112;
        _1248 = _1079;
        _1250 = _1078;
        _1251 = _1077;
        _1252 = _1089;
        _1253 = _1088;
        _1254 = _1087;
        _1255 = _1099;
        _1256 = _1098;
        _1257 = _1097;
        _1258 = _1112;
        _1259 = _1111;
        _1260 = _1110;
        _1261 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1156 : (isnan(_1156) ? 0.0 : max(_1156, 0.0)));
        _1262 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1198 : (isnan(_1198) ? 0.0 : max(_1198, 0.0)));
        _1263 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1240 : (isnan(_1240) ? 0.0 : max(_1240, 0.0)));
    }
    else
    {
        _1248 = _1249;
        _1250 = _1249;
        _1251 = _1249;
        _1252 = _1249;
        _1253 = _1249;
        _1254 = _1249;
        _1255 = _1249;
        _1256 = _1249;
        _1257 = _1249;
        _1258 = _1249;
        _1259 = _1249;
        _1260 = _1249;
        _1261 = 0.0;
        _1262 = 0.0;
        _1263 = 0.0;
    }
    float _1557;
    float _1558;
    float _1559;
    float _1560;
    float _1561;
    float _1562;
    float _1563;
    float _1564;
    float _1565;
    float _1566;
    float _1567;
    float _1568;
    float _1569;
    float _1570;
    float _1571;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1288 = fma(_947, cbModelParam._m0[30u].z, fma(_943, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _939));
        float _1292 = fma(_947, cbModelParam._m0[31u].z, fma(_943, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _939));
        float _1296 = fma(_947, cbModelParam._m0[32u].z, fma(_943, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _939));
        float _1319 = _939 + _727;
        float _1320 = _943 + _728;
        float _1321 = _947 + _729;
        float _1331 = fma(_1321, cbModelParam._m0[30u].z, fma(_1320, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1319)) - _1288;
        float _1332 = fma(_1321, cbModelParam._m0[31u].z, fma(_1320, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1319)) - _1292;
        float _1333 = fma(_1321, cbModelParam._m0[32u].z, fma(_1320, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1319)) - _1296;
        float _1337 = inversesqrt(dot(vec3(_1331, _1332, _1333), vec3(_1331, _1332, _1333)));
        float _1350 = ((_1337 * _1331) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1288 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1351 = ((_1337 * _1332) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1292 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1352 = ((_1337 * _1333) / cbModelParam._m0[35u].z) + ((((((_1296 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1354 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1350, _1351, _1352), 0.0);
        vec4 _1361 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1350, _1351, _1352), 0.0);
        vec4 _1368 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1350, _1351, _1352), 0.0);
        vec4 _1375 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1350, _1351, _1352), 0.0);
        float _1387 = exp2((_1354.w + (-0.5)) * 20.0) * 2.0;
        float _1388 = _1387 * (_1354.x + (-0.5));
        float _1389 = _1387 * (_1354.y + (-0.5));
        float _1390 = _1387 * (_1354.z + (-0.5));
        float _1397 = exp2((_1361.w + (-0.5)) * 20.0) * 2.0;
        float _1398 = _1397 * (_1361.x + (-0.5));
        float _1399 = _1397 * (_1361.y + (-0.5));
        float _1400 = _1397 * (_1361.z + (-0.5));
        float _1407 = exp2((_1368.w + (-0.5)) * 20.0) * 2.0;
        float _1408 = _1407 * (_1368.x + (-0.5));
        float _1409 = _1407 * (_1368.y + (-0.5));
        float _1410 = _1407 * (_1368.z + (-0.5));
        float _1417 = exp2((_1375.w + (-0.5)) * 20.0) * 2.0;
        float _1418 = _1417 * (_1375.x + (-0.5));
        float _1419 = _1417 * (_1375.y + (-0.5));
        float _1420 = _1417 * (_1375.z + (-0.5));
        float _1421 = isnan(0.0) ? _1418 : (isnan(_1418) ? 0.0 : max(_1418, 0.0));
        float _1422 = isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0));
        float _1423 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
        float _1424 = _1388 * 0.5;
        float _1425 = _1398 * 0.5;
        float _1426 = _1408 * 0.5;
        float _1427 = dot(vec3(_1424, _1425, _1426), vec3(_1424, _1425, _1426));
        float _1432 = (_1427 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1427);
        float _1440 = (dot(vec3(_727, _728, _729), vec3(_1432 * _1424, _1432 * _1425, _1432 * _1426)) + 1.0) * 0.5;
        float _4156 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
        float _1449 = sqrt(((_1425 * _1425) + (_1424 * _1424)) + (_1426 * _1426)) / (_1421 + 9.9999997473787516355514526367188e-06);
        float _4167 = isnan(0.0) ? _1449 : (isnan(_1449) ? 0.0 : max(_1449, 0.0));
        float _1450 = isnan(1.0) ? _4167 : (isnan(_4167) ? 1.0 : min(_4167, 1.0));
        float _1451 = _1450 * 2.0;
        float _1455 = (1.0 - _1450) / (_1450 + 1.0);
        float _4178 = isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0));
        float _1456 = isnan(1.0) ? _4178 : (isnan(_4178) ? 1.0 : min(_4178, 1.0));
        float _1465 = ((((1.0 - _1456) * (_1451 + 2.0)) * exp2(log2(isnan(1.0) ? _4156 : (isnan(_4156) ? 1.0 : min(_4156, 1.0))) * (_1451 + 1.0))) + _1456) * _1421;
        float _1466 = _1389 * 0.5;
        float _1467 = _1399 * 0.5;
        float _1468 = _1409 * 0.5;
        float _1469 = dot(vec3(_1466, _1467, _1468), vec3(_1466, _1467, _1468));
        float _1474 = (_1469 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1469);
        float _1482 = (dot(vec3(_727, _728, _729), vec3(_1474 * _1466, _1474 * _1467, _1474 * _1468)) + 1.0) * 0.5;
        float _4189 = isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0));
        float _1491 = sqrt(((_1467 * _1467) + (_1466 * _1466)) + (_1468 * _1468)) / (_1422 + 9.9999997473787516355514526367188e-06);
        float _4200 = isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0));
        float _1492 = isnan(1.0) ? _4200 : (isnan(_4200) ? 1.0 : min(_4200, 1.0));
        float _1493 = _1492 * 2.0;
        float _1497 = (1.0 - _1492) / (_1492 + 1.0);
        float _4211 = isnan(0.0) ? _1497 : (isnan(_1497) ? 0.0 : max(_1497, 0.0));
        float _1498 = isnan(1.0) ? _4211 : (isnan(_4211) ? 1.0 : min(_4211, 1.0));
        float _1507 = ((((1.0 - _1498) * (_1493 + 2.0)) * exp2(log2(isnan(1.0) ? _4189 : (isnan(_4189) ? 1.0 : min(_4189, 1.0))) * (_1493 + 1.0))) + _1498) * _1422;
        float _1508 = _1390 * 0.5;
        float _1509 = _1400 * 0.5;
        float _1510 = _1410 * 0.5;
        float _1511 = dot(vec3(_1508, _1509, _1510), vec3(_1508, _1509, _1510));
        float _1516 = (_1511 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1511);
        float _1524 = (dot(vec3(_727, _728, _729), vec3(_1516 * _1508, _1516 * _1509, _1516 * _1510)) + 1.0) * 0.5;
        float _4222 = isnan(0.0) ? _1524 : (isnan(_1524) ? 0.0 : max(_1524, 0.0));
        float _1533 = sqrt(((_1509 * _1509) + (_1508 * _1508)) + (_1510 * _1510)) / (_1423 + 9.9999997473787516355514526367188e-06);
        float _4233 = isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0));
        float _1534 = isnan(1.0) ? _4233 : (isnan(_4233) ? 1.0 : min(_4233, 1.0));
        float _1535 = _1534 * 2.0;
        float _1539 = (1.0 - _1534) / (_1534 + 1.0);
        float _4244 = isnan(0.0) ? _1539 : (isnan(_1539) ? 0.0 : max(_1539, 0.0));
        float _1540 = isnan(1.0) ? _4244 : (isnan(_4244) ? 1.0 : min(_4244, 1.0));
        float _1549 = ((((1.0 - _1540) * (_1535 + 2.0)) * exp2(log2(isnan(1.0) ? _4222 : (isnan(_4222) ? 1.0 : min(_4222, 1.0))) * (_1535 + 1.0))) + _1540) * _1423;
        _1557 = _1390;
        _1558 = _1389;
        _1559 = _1388;
        _1560 = _1400;
        _1561 = _1399;
        _1562 = _1398;
        _1563 = _1410;
        _1564 = _1409;
        _1565 = _1408;
        _1566 = _1423;
        _1567 = _1422;
        _1568 = _1421;
        _1569 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1465 : (isnan(_1465) ? 0.0 : max(_1465, 0.0)));
        _1570 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1507 : (isnan(_1507) ? 0.0 : max(_1507, 0.0)));
        _1571 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0)));
    }
    else
    {
        _1557 = _1249;
        _1558 = _1249;
        _1559 = _1249;
        _1560 = _1249;
        _1561 = _1249;
        _1562 = _1249;
        _1563 = _1249;
        _1564 = _1249;
        _1565 = _1249;
        _1566 = _1249;
        _1567 = _1249;
        _1568 = _1249;
        _1569 = 0.0;
        _1570 = 0.0;
        _1571 = 0.0;
    }
    float _1581 = (cbModelParam._m0[1u].x * (_1569 - _1261)) + _1261;
    float _1582 = (cbModelParam._m0[1u].x * (_1570 - _1262)) + _1262;
    float _1583 = (cbModelParam._m0[1u].x * (_1571 - _1263)) + _1263;
    float _1604 = fma(_1583, cbSceneParam._m0[89u].z, fma(_1582, cbSceneParam._m0[89u].y, _1581 * cbSceneParam._m0[89u].x));
    float _1607 = fma(_1583, cbSceneParam._m0[90u].z, fma(_1582, cbSceneParam._m0[90u].y, _1581 * cbSceneParam._m0[90u].x));
    float _1610 = fma(_1583, cbSceneParam._m0[91u].z, fma(_1582, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1581));
    float _1625 = _886 * 0.5;
    float _1626 = _887 * 0.5;
    float _1627 = _888 * 0.5;
    float _1628 = dot(vec4(_1625, _1626, _1627, 1.0), vec4(_1559, _1562, _1565, _1568));
    float _1631 = dot(vec4(_1625, _1626, _1627, 1.0), vec4(_1558, _1561, _1564, _1567));
    float _1634 = dot(vec4(_1625, _1626, _1627, 1.0), vec4(_1557, _1560, _1563, _1566));
    float _1668;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1641 = dot(vec4(_1625, _1626, _1627, 1.0), vec4(_1248, _1252, _1255, _1258));
        float _1645 = dot(vec4(_1625, _1626, _1627, 1.0), vec4(_1250, _1253, _1256, _1259));
        float _1649 = dot(vec4(_1625, _1626, _1627, 1.0), vec4(_1251, _1254, _1257, _1260));
        float _1656 = dot(vec4(cbModelParam._m0[39u]), vec4(_1625, _1626, _1627, 1.0));
        _1668 = dot(vec3(isnan(0.0) ? _1649 : (isnan(_1649) ? 0.0 : max(_1649, 0.0)), isnan(0.0) ? _1645 : (isnan(_1645) ? 0.0 : max(_1645, 0.0)), isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1656) ? 0.0 : (isnan(0.0) ? _1656 : max(0.0, _1656))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1668 = 1.0;
    }
    float _1679;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1670 = dot(vec4(cbModelParam._m0[40u]), vec4(_1625, _1626, _1627, 1.0));
        _1679 = dot(vec3(isnan(0.0) ? _1628 : (isnan(_1628) ? 0.0 : max(_1628, 0.0)), isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0)), isnan(0.0) ? _1634 : (isnan(_1634) ? 0.0 : max(_1634, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1670) ? 0.0 : (isnan(0.0) ? _1670 : max(0.0, _1670))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1679 = 1.0;
    }
    float _1683 = (_1679 * cbModelParam._m0[1u].x) + (_1668 * (1.0 - cbModelParam._m0[1u].x));
    float _1693 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _730);
    float _1694 = isnan(_1693) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1693 : min(cbModelParam._m0[25u].z, _1693));
    float _1774;
    float _1776;
    float _1778;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1741 = fma(_947, cbModelParam._m0[13u].z, fma(_943, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _939)) + cbModelParam._m0[13u].w;
        float _1745 = fma(_947, cbModelParam._m0[14u].z, fma(_943, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _939)) + cbModelParam._m0[14u].w;
        float _1749 = fma(_947, cbModelParam._m0[15u].z, fma(_943, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _939)) + cbModelParam._m0[15u].w;
        float _1752 = fma(_888, cbModelParam._m0[13u].z, fma(_887, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _886));
        float _1755 = fma(_888, cbModelParam._m0[14u].z, fma(_887, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _886));
        float _1758 = fma(_888, cbModelParam._m0[15u].z, fma(_887, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _886));
        float _1786;
        if (_1752 > 0.0)
        {
            _1786 = abs((1.0 - _1741) / _1752);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1752 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1741 + 1.0) / _1752);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1786 = frontier_phi_14_12_ladder;
        }
        float _1955;
        if (_1755 > 0.0)
        {
            _1955 = abs((1.0 - _1745) / _1755);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1755 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1745 + 1.0) / _1755);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1955 = frontier_phi_23_19_ladder;
        }
        float _2250;
        if (_1758 > 0.0)
        {
            _2250 = abs((1.0 - _1749) / _1758);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1758 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1749 + 1.0) / _1758);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2250 = frontier_phi_35_30_ladder;
        }
        float _2252 = isnan(_1955) ? _1786 : (isnan(_1786) ? _1955 : min(_1786, _1955));
        float _2253 = isnan(_2250) ? _2252 : (isnan(_2252) ? _2250 : min(_2252, _2250));
        float _2257 = (_2253 * _1752) + _1741;
        float _2258 = (_2253 * _1755) + _1745;
        float _2259 = (_2253 * _1758) + _1749;
        float _2260 = _2253 * 9.9999997473787516355514526367188e-05;
        float _2262 = (-1.0) - _2260;
        float _2264 = _2260 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2259 > _2264) || ((_2259 < _2262) || ((_2258 > _2264) || ((_2258 < _2262) || ((_2257 < _2262) || (_2257 > _2264))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2404 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2259, cbModelParam._m0[9u].z, fma(_2258, cbModelParam._m0[9u].y, _2257 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2259, cbModelParam._m0[10u].z, fma(_2258, cbModelParam._m0[10u].y, _2257 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2259, cbModelParam._m0[11u].z, fma(_2258, cbModelParam._m0[11u].y, _2257 * cbModelParam._m0[11u].x))), _1694);
            frontier_phi_13_35_ladder = _2404.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2404.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2404.x * cbModelParam._m0[1u].y;
        }
        _1774 = frontier_phi_13_35_ladder_2;
        _1776 = frontier_phi_13_35_ladder_1;
        _1778 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1762 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_886, _887, _888), _1694);
        _1774 = _1762.x * cbModelParam._m0[1u].y;
        _1776 = _1762.y * cbModelParam._m0[1u].y;
        _1778 = _1762.z * cbModelParam._m0[1u].y;
    }
    float _1782 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _730);
    float _1783 = isnan(_1782) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1782 : min(cbModelParam._m0[25u].w, _1782));
    float _1872;
    float _1874;
    float _1876;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1836 = fma(_947, cbModelParam._m0[21u].z, fma(_943, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _939)) + cbModelParam._m0[21u].w;
        float _1840 = fma(_947, cbModelParam._m0[22u].z, fma(_943, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _939)) + cbModelParam._m0[22u].w;
        float _1844 = fma(_947, cbModelParam._m0[23u].z, fma(_943, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _939)) + cbModelParam._m0[23u].w;
        float _1847 = fma(_888, cbModelParam._m0[21u].z, fma(_887, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _886));
        float _1850 = fma(_888, cbModelParam._m0[22u].z, fma(_887, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _886));
        float _1853 = fma(_888, cbModelParam._m0[23u].z, fma(_887, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _886));
        float _1960;
        if (_1847 > 0.0)
        {
            _1960 = abs((1.0 - _1836) / _1847);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1847 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1836 + 1.0) / _1847);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1960 = frontier_phi_25_21_ladder;
        }
        float _2277;
        if (_1850 > 0.0)
        {
            _2277 = abs((1.0 - _1840) / _1850);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1850 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1840 + 1.0) / _1850);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2277 = frontier_phi_37_32_ladder;
        }
        float _2604;
        if (_1853 > 0.0)
        {
            _2604 = abs((1.0 - _1844) / _1853);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1853 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1844 + 1.0) / _1853);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2604 = frontier_phi_47_44_ladder;
        }
        float _2606 = isnan(_2277) ? _1960 : (isnan(_1960) ? _2277 : min(_1960, _2277));
        float _2607 = isnan(_2604) ? _2606 : (isnan(_2606) ? _2604 : min(_2606, _2604));
        float _2611 = (_2607 * _1847) + _1836;
        float _2612 = (_2607 * _1850) + _1840;
        float _2613 = (_2607 * _1853) + _1844;
        float _2614 = _2607 * 9.9999997473787516355514526367188e-05;
        float _2615 = (-1.0) - _2614;
        float _2617 = _2614 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2613 > _2617) || ((_2613 < _2615) || ((_2612 > _2617) || ((_2612 < _2615) || ((_2611 < _2615) || (_2611 > _2617))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2731 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2613, cbModelParam._m0[17u].z, fma(_2612, cbModelParam._m0[17u].y, _2611 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2613, cbModelParam._m0[18u].z, fma(_2612, cbModelParam._m0[18u].y, _2611 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2613, cbModelParam._m0[19u].z, fma(_2612, cbModelParam._m0[19u].y, _2611 * cbModelParam._m0[19u].x))), _1783);
            frontier_phi_22_47_ladder = _2731.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2731.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2731.x * cbModelParam._m0[1u].z;
        }
        _1872 = frontier_phi_22_47_ladder_2;
        _1874 = frontier_phi_22_47_ladder_1;
        _1876 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1856 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_886, _887, _888), _1783);
        _1872 = _1856.x * cbModelParam._m0[1u].z;
        _1874 = _1856.y * cbModelParam._m0[1u].z;
        _1876 = _1856.z * cbModelParam._m0[1u].z;
    }
    float _1888 = ((((1.0 - _907) * ((_894 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_907 * _894)) * _878;
    float _1889 = _1888 * ((cbModelParam._m0[1u].w * (_1872 - _1774)) + _1774);
    float _1890 = _1888 * ((cbModelParam._m0[1u].w * (_1874 - _1776)) + _1776);
    float _1891 = _1888 * ((cbModelParam._m0[1u].w * (_1876 - _1778)) + _1778);
    float _1894 = fma(_1891, cbSceneParam._m0[89u].z, fma(_1890, cbSceneParam._m0[89u].y, _1889 * cbSceneParam._m0[89u].x));
    float _1897 = fma(_1891, cbSceneParam._m0[90u].z, fma(_1890, cbSceneParam._m0[90u].y, _1889 * cbSceneParam._m0[90u].x));
    float _1900 = fma(_1891, cbSceneParam._m0[91u].z, fma(_1890, cbSceneParam._m0[91u].y, _1889 * cbSceneParam._m0[91u].x));
    float _1934 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1938 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1942 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1946 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1947 = _1934 / _1946;
    float _1948 = _1938 / _1946;
    float _1949 = _1942 / _1946;
    float _2096;
    float _2097;
    float _2098;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1976 = ((uint(_1949 > cbSceneParam._m0[59u].y) + uint(_1949 > cbSceneParam._m0[59u].x)) + uint(_1949 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1977 = _1976 + 43u;
        uint _1985 = _1976 + 44u;
        uint _1993 = _1976 + 45u;
        uint _2001 = _1976 + 46u;
        float _2012 = fma(_1946, cbSceneParam._m0[_1977].w, fma(_1942, cbSceneParam._m0[_1977].z, fma(_1938, cbSceneParam._m0[_1977].y, _1934 * cbSceneParam._m0[_1977].x)));
        float _2016 = fma(_1946, cbSceneParam._m0[_1985].w, fma(_1942, cbSceneParam._m0[_1985].z, fma(_1938, cbSceneParam._m0[_1985].y, _1934 * cbSceneParam._m0[_1985].x)));
        float _2024 = fma(_1946, cbSceneParam._m0[_2001].w, fma(_1942, cbSceneParam._m0[_2001].z, fma(_1938, cbSceneParam._m0[_2001].y, _1934 * cbSceneParam._m0[_2001].x)));
        float _2029 = cbSceneParam._m0[33u].z * _2024;
        float _2031 = cbSceneParam._m0[33u].w * _2024;
        float _2034 = fma(_1946, cbSceneParam._m0[_1993].w, fma(_1942, cbSceneParam._m0[_1993].z, fma(_1938, cbSceneParam._m0[_1993].y, _1934 * cbSceneParam._m0[_1993].x))) / _2024;
        float _2082 = (cbSceneParam._m0[33u].x - sqrt(((_1948 * _1948) + (_1947 * _1947)) + (_1949 * _1949))) * cbSceneParam._m0[33u].y;
        float _4370 = isnan(0.0) ? _2082 : (isnan(_2082) ? 0.0 : max(_2082, 0.0));
        float _2089 = (isnan(1.0) ? _4370 : (isnan(_4370) ? 1.0 : min(_4370, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2029 + _2012) / _2024, (_2031 + _2016) / _2024), _2034), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2031 + _2012) / _2024, (_2016 - _2029) / _2024), _2034), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2012 - _2029) / _2024, (_2016 - _2031) / _2024), _2034), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2012 - _2031) / _2024, (_2029 + _2016) / _2024), _2034), 0.0)).x), vec4(0.25)));
        _2096 = 1.0 - (_2089 * cbSceneParam._m0[34u].x);
        _2097 = 1.0 - (_2089 * cbSceneParam._m0[34u].y);
        _2098 = 1.0 - (_2089 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2096 = 1.0;
        _2097 = 1.0;
        _2098 = 1.0;
    }
    float _2162;
    float _2164;
    float _2166;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2150 = fma(_1946, cbSceneParam._m0[63u].w, fma(_1942, cbSceneParam._m0[63u].z, fma(_1938, cbSceneParam._m0[63u].y, _1934 * cbSceneParam._m0[63u].x)));
        float _2151 = fma(_1946, cbSceneParam._m0[60u].w, fma(_1942, cbSceneParam._m0[60u].z, fma(_1938, cbSceneParam._m0[60u].y, _1934 * cbSceneParam._m0[60u].x))) / _2150;
        float _2152 = fma(_1946, cbSceneParam._m0[61u].w, fma(_1942, cbSceneParam._m0[61u].z, fma(_1938, cbSceneParam._m0[61u].y, _1934 * cbSceneParam._m0[61u].x))) / _2150;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2151 >= cbSceneParam._m0[64u].x) && (_2152 >= cbSceneParam._m0[64u].y)) && (_2151 <= cbSceneParam._m0[64u].z)) && (_2152 <= cbSceneParam._m0[64u].w))
        {
            float _2290 = fma(_1946, cbSceneParam._m0[62u].w, fma(_1942, cbSceneParam._m0[62u].z, fma(_1938, cbSceneParam._m0[62u].y, _1934 * cbSceneParam._m0[62u].x))) / _2150;
            float _2294 = isnan(cbSceneParam._m0[41u].w) ? _2290 : (isnan(_2290) ? cbSceneParam._m0[41u].w : max(_2290, cbSceneParam._m0[41u].w));
            float _2337 = (cbSceneParam._m0[33u].x - sqrt(((_1948 * _1948) + (_1947 * _1947)) + (_1949 * _1949))) * cbSceneParam._m0[33u].y;
            float _4386 = isnan(0.0) ? _2337 : (isnan(_2337) ? 0.0 : max(_2337, 0.0));
            float _2344 = (isnan(1.0) ? _4386 : (isnan(_4386) ? 1.0 : min(_4386, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2151, cbSceneParam._m0[33u].w + _2152), _2294), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2151, _2152 - cbSceneParam._m0[33u].z), _2294), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2151 - cbSceneParam._m0[33u].z, _2152 - cbSceneParam._m0[33u].w), _2294), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2151 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2152), _2294), 0.0)).x), vec4(0.25)));
            float _2348 = 1.0 - (_2344 * cbSceneParam._m0[34u].x);
            float _2349 = 1.0 - (_2344 * cbSceneParam._m0[34u].y);
            float _2350 = 1.0 - (_2344 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2350) ? _2098 : (isnan(_2098) ? _2350 : min(_2098, _2350));
            frontier_phi_34_33_ladder_1 = isnan(_2349) ? _2097 : (isnan(_2097) ? _2349 : min(_2097, _2349));
            frontier_phi_34_33_ladder_2 = isnan(_2348) ? _2096 : (isnan(_2096) ? _2348 : min(_2096, _2348));
        }
        else
        {
            frontier_phi_34_33_ladder = _2098;
            frontier_phi_34_33_ladder_1 = _2097;
            frontier_phi_34_33_ladder_2 = _2096;
        }
        _2162 = frontier_phi_34_33_ladder_2;
        _2164 = frontier_phi_34_33_ladder_1;
        _2166 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2162 = _2096;
        _2164 = _2097;
        _2166 = _2098;
    }
    uvec4 _2171 = floatBitsToUint(cbInstanceData._m0[_266 + 5u]);
    uint _2173 = _2171.x * 14u;
    uint _2174 = _2173 + 13u;
    float _2181 = _878 + (-1.0);
    float _2186 = (cbLight._m0[_2174].x * _2181) + 1.0;
    float _2187 = (cbLight._m0[_2174].y * _2181) + 1.0;
    float _2188 = (cbLight._m0[_2174].z * _2181) + 1.0;
    float _2189 = (cbLight._m0[_2174].w * _2181) + 1.0;
    uint _2190 = _2173 + 5u;
    float _2196 = isnan(1.0) ? _2187 : (isnan(_2187) ? 1.0 : min(_2187, 1.0));
    uint _2200 = _2173 + 4u;
    float _2209 = isnan(1.0) ? _2186 : (isnan(_2186) ? 1.0 : min(_2186, 1.0));
    uint _2213 = _2173 | 1u;
    float _2224 = dot(vec3(cbLight._m0[_2173].xyz), vec3(_727, _728, _729));
    float _2227 = dot(vec3(cbLight._m0[_2213].xyz), vec3(_727, _728, _729));
    float _4422 = isnan(0.0) ? _2224 : (isnan(_2224) ? 0.0 : max(_2224, 0.0));
    float _4433 = isnan(0.0) ? _2227 : (isnan(_2227) ? 0.0 : max(_2227, 0.0));
    float _2232 = (isnan(1.0) ? _4422 : (isnan(_4422) ? 1.0 : min(_4422, 1.0))) * 0.3183098733425140380859375;
    float _2234 = (isnan(1.0) ? _4433 : (isnan(_4433) ? 1.0 : min(_4433, 1.0))) * 0.3183098733425140380859375;
    float _2241 = ((cbLight._m0[_2190].x * _2196) * _2234) + (((cbLight._m0[_2200].x * _2162) * _2209) * _2232);
    float _2242 = ((_2196 * cbLight._m0[_2190].y) * _2234) + (((cbLight._m0[_2200].y * _2164) * _2209) * _2232);
    float _2243 = ((_2196 * cbLight._m0[_2190].z) * _2234) + (((cbLight._m0[_2200].z * _2166) * _2209) * _2232);
    uvec4 _2247 = floatBitsToUint(cbLight._m0[_2173 + 12u]);
    bool _2249 = _2247.x == 0u;
    float _2351;
    float _2353;
    float _2355;
    if (_2249)
    {
        _2351 = _2241;
        _2353 = _2242;
        _2355 = _2243;
    }
    else
    {
        uint _2359 = _2173 + 6u;
        float _2375 = (dot(vec3(cbLight._m0[_2173 + 2u].xyz), vec3(_727, _728, _729)) * 0.5) + 0.5;
        float _2376 = _2375 * _2375;
        float _4444 = isnan(0.0) ? _2376 : (isnan(_2376) ? 0.0 : max(_2376, 0.0));
        float _2377 = isnan(1.0) ? _4444 : (isnan(_4444) ? 1.0 : min(_4444, 1.0));
        float _2378 = isnan(1.0) ? _2188 : (isnan(_2188) ? 1.0 : min(_2188, 1.0));
        _2351 = (((cbLight._m0[_2359].x * 0.3183098733425140380859375) * _2377) * _2378) + _2241;
        _2353 = (((cbLight._m0[_2359].y * 0.3183098733425140380859375) * _2377) * _2378) + _2242;
        _2355 = (((cbLight._m0[_2359].z * 0.3183098733425140380859375) * _2377) * _2378) + _2243;
    }
    bool _2358 = _2247.y == 0u;
    float _2413;
    float _2415;
    float _2417;
    if (_2358)
    {
        _2413 = _2351;
        _2415 = _2353;
        _2417 = _2355;
    }
    else
    {
        uint _2575 = _2173 + 7u;
        float _2591 = (dot(vec3(cbLight._m0[_2173 + 3u].xyz), vec3(_727, _728, _729)) * 0.5) + 0.5;
        float _2592 = _2591 * _2591;
        float _4460 = isnan(0.0) ? _2592 : (isnan(_2592) ? 0.0 : max(_2592, 0.0));
        float _2593 = isnan(1.0) ? _4460 : (isnan(_4460) ? 1.0 : min(_4460, 1.0));
        float _2594 = isnan(1.0) ? _2189 : (isnan(_2189) ? 1.0 : min(_2189, 1.0));
        _2413 = (((cbLight._m0[_2575].x * 0.3183098733425140380859375) * _2593) * _2594) + _2351;
        _2415 = (((cbLight._m0[_2575].y * 0.3183098733425140380859375) * _2593) * _2594) + _2353;
        _2417 = (((cbLight._m0[_2575].z * 0.3183098733425140380859375) * _2593) * _2594) + _2355;
    }
    uint _2420 = _2173 + 8u;
    float _2433 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2173].w)) * _730) * 0.949999988079071044921875);
    float _2434 = _2433 * _2433;
    float _2435 = cbLight._m0[_2173].x + _807;
    float _2436 = cbLight._m0[_2173].y + _808;
    float _2437 = cbLight._m0[_2173].z + _809;
    float _2441 = inversesqrt(dot(vec3(_2435, _2436, _2437), vec3(_2435, _2436, _2437)));
    float _2442 = _2441 * _2435;
    float _2443 = _2441 * _2436;
    float _2444 = _2441 * _2437;
    float _2445 = dot(vec3(_727, _728, _729), vec3(cbLight._m0[_2173].xyz));
    float _4476 = isnan(0.0) ? _2445 : (isnan(_2445) ? 0.0 : max(_2445, 0.0));
    float _2448 = isnan(1.0) ? _4476 : (isnan(_4476) ? 1.0 : min(_4476, 1.0));
    float _4487 = isnan(0.0) ? _879 : (isnan(_879) ? 0.0 : max(_879, 0.0));
    float _2449 = isnan(1.0) ? _4487 : (isnan(_4487) ? 1.0 : min(_4487, 1.0));
    float _2450 = dot(vec3(_727, _728, _729), vec3(_2442, _2443, _2444));
    float _4498 = isnan(0.0) ? _2450 : (isnan(_2450) ? 0.0 : max(_2450, 0.0));
    float _2453 = isnan(1.0) ? _4498 : (isnan(_4498) ? 1.0 : min(_4498, 1.0));
    float _2454 = dot(vec3(cbLight._m0[_2173].xyz), vec3(_2442, _2443, _2444));
    float _4509 = isnan(0.0) ? _2454 : (isnan(_2454) ? 0.0 : max(_2454, 0.0));
    float _2458 = _2434 * _2434;
    float _2462 = ((_2453 * _2453) * (_2458 + (-1.0))) + 1.0;
    float _2473 = (exp2(log2(1.0 - (isnan(1.0) ? _4509 : (isnan(_4509) ? 1.0 : min(_4509, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2474 = 1.0 - _2434;
    float _2485 = (0.5 / (((_2449 * ((_2448 * _2474) + _2434)) + 9.9999999392252902907785028219223e-09) + (((_2449 * _2474) + _2434) * _2448))) * _2448;
    float _4520 = isnan(0.0) ? _2485 : (isnan(_2485) ? 0.0 : max(_2485, 0.0));
    float _2487 = (isnan(1.0) ? _4520 : (isnan(_4520) ? 1.0 : min(_4520, 1.0))) * (_2458 / ((_2462 * _2462) * 3.141590118408203125));
    uint _2501 = _2173 + 9u;
    float _2512 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2213].w)) * _730) * 0.949999988079071044921875);
    float _2513 = _2512 * _2512;
    float _2514 = cbLight._m0[_2213].x + _807;
    float _2515 = cbLight._m0[_2213].y + _808;
    float _2516 = cbLight._m0[_2213].z + _809;
    float _2520 = inversesqrt(dot(vec3(_2514, _2515, _2516), vec3(_2514, _2515, _2516)));
    float _2521 = _2520 * _2514;
    float _2522 = _2520 * _2515;
    float _2523 = _2520 * _2516;
    float _2524 = dot(vec3(_727, _728, _729), vec3(cbLight._m0[_2213].xyz));
    float _4531 = isnan(0.0) ? _2524 : (isnan(_2524) ? 0.0 : max(_2524, 0.0));
    float _2527 = isnan(1.0) ? _4531 : (isnan(_4531) ? 1.0 : min(_4531, 1.0));
    float _2528 = dot(vec3(_727, _728, _729), vec3(_2521, _2522, _2523));
    float _4542 = isnan(0.0) ? _2528 : (isnan(_2528) ? 0.0 : max(_2528, 0.0));
    float _2531 = isnan(1.0) ? _4542 : (isnan(_4542) ? 1.0 : min(_4542, 1.0));
    float _2532 = dot(vec3(cbLight._m0[_2213].xyz), vec3(_2521, _2522, _2523));
    float _4553 = isnan(0.0) ? _2532 : (isnan(_2532) ? 0.0 : max(_2532, 0.0));
    float _2536 = _2513 * _2513;
    float _2540 = ((_2531 * _2531) * (_2536 + (-1.0))) + 1.0;
    float _2549 = (exp2(log2(1.0 - (isnan(1.0) ? _4553 : (isnan(_4553) ? 1.0 : min(_4553, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2550 = 1.0 - _2513;
    float _2560 = (0.5 / (((_2449 * ((_2527 * _2550) + _2513)) + 9.9999999392252902907785028219223e-09) + (((_2449 * _2550) + _2513) * _2527))) * _2527;
    float _4564 = isnan(0.0) ? _2560 : (isnan(_2560) ? 0.0 : max(_2560, 0.0));
    float _2562 = (isnan(1.0) ? _4564 : (isnan(_4564) ? 1.0 : min(_4564, 1.0))) * (_2536 / ((_2540 * _2540) * 3.141590118408203125));
    float _2572 = (((_2549 * cbLight._m0[_2501].x) * _2562) * _2196) + ((((cbLight._m0[_2420].x * _2162) * _2473) * _2487) * _2209);
    float _2573 = (((_2549 * cbLight._m0[_2501].y) * _2562) * _2196) + ((((cbLight._m0[_2420].y * _2164) * _2473) * _2487) * _2209);
    float _2574 = (((_2549 * cbLight._m0[_2501].z) * _2562) * _2196) + ((((cbLight._m0[_2420].z * _2166) * _2473) * _2487) * _2209);
    float _2630;
    float _2632;
    float _2634;
    if (_2249)
    {
        _2630 = _2572;
        _2632 = _2573;
        _2634 = _2574;
    }
    else
    {
        uint _2636 = _2173 + 2u;
        uint _2640 = _2173 + 10u;
        float _2654 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2636].w)) * _730) * 0.949999988079071044921875);
        float _2655 = _2654 * _2654;
        float _2656 = cbLight._m0[_2636].x + _807;
        float _2657 = cbLight._m0[_2636].y + _808;
        float _2658 = cbLight._m0[_2636].z + _809;
        float _2662 = inversesqrt(dot(vec3(_2656, _2657, _2658), vec3(_2656, _2657, _2658)));
        float _2663 = _2662 * _2656;
        float _2664 = _2662 * _2657;
        float _2665 = _2662 * _2658;
        float _2666 = dot(vec3(_727, _728, _729), vec3(cbLight._m0[_2636].xyz));
        float _4575 = isnan(0.0) ? _2666 : (isnan(_2666) ? 0.0 : max(_2666, 0.0));
        float _2669 = isnan(1.0) ? _4575 : (isnan(_4575) ? 1.0 : min(_4575, 1.0));
        float _2670 = dot(vec3(_727, _728, _729), vec3(_2663, _2664, _2665));
        float _4586 = isnan(0.0) ? _2670 : (isnan(_2670) ? 0.0 : max(_2670, 0.0));
        float _2673 = isnan(1.0) ? _4586 : (isnan(_4586) ? 1.0 : min(_4586, 1.0));
        float _2674 = dot(vec3(cbLight._m0[_2636].xyz), vec3(_2663, _2664, _2665));
        float _4597 = isnan(0.0) ? _2674 : (isnan(_2674) ? 0.0 : max(_2674, 0.0));
        float _2678 = _2655 * _2655;
        float _2682 = ((_2673 * _2673) * (_2678 + (-1.0))) + 1.0;
        float _2691 = (exp2(log2(1.0 - (isnan(1.0) ? _4597 : (isnan(_4597) ? 1.0 : min(_4597, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2692 = 1.0 - _2655;
        float _2702 = (0.5 / (((_2449 * ((_2669 * _2692) + _2655)) + 9.9999999392252902907785028219223e-09) + (((_2449 * _2692) + _2655) * _2669))) * _2669;
        float _4608 = isnan(0.0) ? _2702 : (isnan(_2702) ? 0.0 : max(_2702, 0.0));
        float _2704 = (isnan(1.0) ? _4608 : (isnan(_4608) ? 1.0 : min(_4608, 1.0))) * (_2678 / ((_2682 * _2682) * 3.141590118408203125));
        float _2705 = isnan(1.0) ? _2188 : (isnan(_2188) ? 1.0 : min(_2188, 1.0));
        _2630 = (((_2691 * cbLight._m0[_2640].x) * _2704) * _2705) + _2572;
        _2632 = (((_2691 * cbLight._m0[_2640].y) * _2704) * _2705) + _2573;
        _2634 = (((_2691 * cbLight._m0[_2640].z) * _2704) * _2705) + _2574;
    }
    float _2736;
    float _2738;
    float _2740;
    if (_2358)
    {
        _2736 = _2630;
        _2738 = _2632;
        _2740 = _2634;
    }
    else
    {
        uint _2747 = _2173 + 3u;
        uint _2751 = _2173 + 11u;
        float _2765 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2747].w)) * _730) * 0.949999988079071044921875);
        float _2766 = _2765 * _2765;
        float _2767 = cbLight._m0[_2747].x + _807;
        float _2768 = cbLight._m0[_2747].y + _808;
        float _2769 = cbLight._m0[_2747].z + _809;
        float _2773 = inversesqrt(dot(vec3(_2767, _2768, _2769), vec3(_2767, _2768, _2769)));
        float _2774 = _2773 * _2767;
        float _2775 = _2773 * _2768;
        float _2776 = _2773 * _2769;
        float _2777 = dot(vec3(_727, _728, _729), vec3(cbLight._m0[_2747].xyz));
        float _4624 = isnan(0.0) ? _2777 : (isnan(_2777) ? 0.0 : max(_2777, 0.0));
        float _2780 = isnan(1.0) ? _4624 : (isnan(_4624) ? 1.0 : min(_4624, 1.0));
        float _2781 = dot(vec3(_727, _728, _729), vec3(_2774, _2775, _2776));
        float _4635 = isnan(0.0) ? _2781 : (isnan(_2781) ? 0.0 : max(_2781, 0.0));
        float _2784 = isnan(1.0) ? _4635 : (isnan(_4635) ? 1.0 : min(_4635, 1.0));
        float _2785 = dot(vec3(cbLight._m0[_2747].xyz), vec3(_2774, _2775, _2776));
        float _4646 = isnan(0.0) ? _2785 : (isnan(_2785) ? 0.0 : max(_2785, 0.0));
        float _2789 = _2766 * _2766;
        float _2793 = ((_2784 * _2784) * (_2789 + (-1.0))) + 1.0;
        float _2802 = (exp2(log2(1.0 - (isnan(1.0) ? _4646 : (isnan(_4646) ? 1.0 : min(_4646, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2803 = 1.0 - _2766;
        float _2813 = (0.5 / (((_2449 * ((_2780 * _2803) + _2766)) + 9.9999999392252902907785028219223e-09) + (((_2449 * _2803) + _2766) * _2780))) * _2780;
        float _4657 = isnan(0.0) ? _2813 : (isnan(_2813) ? 0.0 : max(_2813, 0.0));
        float _2815 = (isnan(1.0) ? _4657 : (isnan(_4657) ? 1.0 : min(_4657, 1.0))) * (_2789 / ((_2793 * _2793) * 3.141590118408203125));
        float _2816 = isnan(1.0) ? _2189 : (isnan(_2189) ? 1.0 : min(_2189, 1.0));
        _2736 = (((_2802 * cbLight._m0[_2751].x) * _2815) * _2816) + _2630;
        _2738 = (((_2802 * cbLight._m0[_2751].y) * _2815) * _2816) + _2632;
        _2740 = (((_2802 * cbLight._m0[_2751].z) * _2815) * _2816) + _2634;
    }
    float _2882;
    float _2884;
    float _2886;
    float _2888;
    float _2890;
    float _2892;
    if (_2171.y == 0u)
    {
        uvec4 _2837 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2838 = _2837.x;
        uint _2849 = uint((float(_2837.y) * floor(float(uint(cbSceneParam._m0[85u].y * _816) / _2838))) + floor(float(uint(cbSceneParam._m0[85u].x * _815) / _2838)));
        float _2859 = (log2(_1949 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2860 = isnan(0.0) ? _2859 : (isnan(_2859) ? 0.0 : max(_2859, 0.0));
        uint _2863 = uint(isnan(14.0) ? _2860 : (isnan(_2860) ? 14.0 : min(_2860, 14.0)));
        uvec4 _2868 = texelFetch(g_lightClusterGridBuffer, int(((_2863 << 2u) + (_2849 << 6u)) >> 2u));
        uint _2869 = _2868.x;
        uint _2870 = _2837.z;
        float _2949;
        float _2951;
        float _2953;
        float _2955;
        float _2957;
        float _2959;
        if (((((1u << ((_2870 >> 4u) & 15u)) + 4294967295u) & _2869) == 0u) || ((_2870 & 240u) == 0u))
        {
            _2949 = 0.0;
            _2951 = 0.0;
            _2953 = 0.0;
            _2955 = 0.0;
            _2957 = 0.0;
            _2959 = 0.0;
        }
        else
        {
            float _2950;
            float _2952;
            float _2954;
            float _2956;
            float _2958;
            float _2960;
            float _3094 = 0.0;
            float _3095 = 0.0;
            float _3096 = 0.0;
            float _3097 = 0.0;
            float _3098 = 0.0;
            float _3099 = 0.0;
            uint _3100 = 0u;
            uint _3109;
            bool _3110;
            for (;;)
            {
                _3109 = texelFetch(g_lightClassification, int((((_2863 << 5u) + (_2849 << 9u)) + (_3100 << 2u)) >> 2u)).x;
                _3110 = _3109 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3110)
                {
                    frontier_phi_66_pred = _3099;
                    frontier_phi_66_pred_1 = _3098;
                    frontier_phi_66_pred_2 = _3097;
                    frontier_phi_66_pred_3 = _3096;
                    frontier_phi_66_pred_4 = _3095;
                    frontier_phi_66_pred_5 = _3094;
                }
                else
                {
                    float _3218;
                    float _3219;
                    float _3220;
                    float _3221;
                    float _3222;
                    float _3223;
                    uint _3224;
                    _3218 = _3094;
                    _3219 = _3095;
                    _3220 = _3096;
                    _3221 = _3097;
                    _3222 = _3098;
                    _3223 = _3099;
                    _3224 = _3109;
                    float _3150;
                    float _3151;
                    float _3152;
                    float _3153;
                    float _3154;
                    float _3155;
                    for (;;)
                    {
                        uint _3228 = uint(findLSB(_3224)) + (_3100 << 5u);
                        uint _3225 = (_3224 + 4294967295u) & _3224;
                        uint _3230 = _3228 * 48u;
                        vec4 _3244 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3230)).x, texelFetch(g_PointLightRenderingBuffer, int(_3230 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3230 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3230 + 3u)).x));
                        uint _3250 = (_3228 * 48u) + 4u;
                        vec4 _3263 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3250)).x, texelFetch(g_PointLightRenderingBuffer, int(_3250 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3250 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3250 + 3u)).x));
                        uint _3269 = (_3228 * 48u) + 8u;
                        vec3 _3280 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3269)).x, texelFetch(g_PointLightRenderingBuffer, int(_3269 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3269 + 2u)).x));
                        float _3284 = _3244.x - _1947;
                        float _3285 = _3244.y - _1948;
                        float _3286 = _3244.z - _1949;
                        float _3287 = dot(vec3(_3284, _3285, _3286), vec3(_3284, _3285, _3286));
                        float _3290 = inversesqrt(_3287);
                        float _3291 = _3290 * _3284;
                        float _3292 = _3290 * _3285;
                        float _3293 = _3290 * _3286;
                        float _3294 = dot(vec3(_834, _837, _840), vec3(_3291, _3292, _3293));
                        float _3299 = 1.0 - (_3287 * _3244.w);
                        float _4683 = isnan(0.0) ? _3299 : (isnan(_3299) ? 0.0 : max(_3299, 0.0));
                        float _3300 = isnan(1.0) ? _4683 : (isnan(_4683) ? 1.0 : min(_4683, 1.0));
                        float _3301 = sqrt(_3287) * _3263.w;
                        float _3304 = 1.39999997615814208984375 / (_3301 + 1.39999997615814208984375);
                        float _3305 = _3304 * _3304;
                        float _3308 = ((1.0 - _3305) * _3294) + _3305;
                        float _3311 = _3301 * _3301;
                        float _3315 = ((isnan(0.0) ? _3308 : (isnan(_3308) ? 0.0 : max(_3308, 0.0))) * _3300) / ((_3311 * 0.699999988079071044921875) + 1.0);
                        float _3319 = (-0.0) - _1947;
                        float _3320 = (-0.0) - _1948;
                        float _3321 = (-0.0) - _1949;
                        float _3325 = inversesqrt(dot(vec3(_3319, _3320, _3321), vec3(_3319, _3320, _3321)));
                        float _3326 = _3325 * _3319;
                        float _3327 = _3325 * _3320;
                        float _3328 = _3325 * _3321;
                        float _3335 = exp2(log2(1.0 / ((_3311 * 3.5) + 5.0)) * 0.25);
                        float _3336 = 1.0 - _894;
                        float _3343 = sqrt(1.0 - ((1.0 - (_3336 * _3336)) * (1.0 - (_3335 * _3335))));
                        float _3344 = _3343 * _3343;
                        float _3345 = _3344 * _3344;
                        float _3346 = _3326 + _3291;
                        float _3347 = _3327 + _3292;
                        float _3348 = _3328 + _3293;
                        float _3352 = inversesqrt(dot(vec3(_3346, _3347, _3348), vec3(_3346, _3347, _3348)));
                        float _3356 = dot(vec3(_834, _837, _840), vec3(_3326, _3327, _3328));
                        float _4699 = isnan(0.0) ? _3356 : (isnan(_3356) ? 0.0 : max(_3356, 0.0));
                        float _3359 = isnan(1.0) ? _4699 : (isnan(_4699) ? 1.0 : min(_4699, 1.0));
                        float _3360 = dot(vec3(_834, _837, _840), vec3(_3352 * _3346, _3352 * _3347, _3352 * _3348));
                        float _4710 = isnan(0.0) ? _3360 : (isnan(_3360) ? 0.0 : max(_3360, 0.0));
                        float _3363 = isnan(1.0) ? _4710 : (isnan(_4710) ? 1.0 : min(_4710, 1.0));
                        float _3367 = ((_3363 * _3363) * (_3345 + (-1.0))) + 1.0;
                        float _3368 = _3304 * _3344;
                        float _3369 = _3368 * _3368;
                        float _3372 = ((1.0 - _3369) * _3294) + _3369;
                        float _4721 = isnan(0.0) ? _3372 : (isnan(_3372) ? 0.0 : max(_3372, 0.0));
                        float _3373 = isnan(1.0) ? _4721 : (isnan(_4721) ? 1.0 : min(_4721, 1.0));
                        float _3374 = 1.0 - _3344;
                        float _3384 = (0.5 / (((_3373 * ((_3359 * _3374) + _3344)) + 9.9999999392252902907785028219223e-09) + (((_3373 * _3374) + _3344) * _3359))) * _3373;
                        float _4732 = isnan(0.0) ? _3384 : (isnan(_3384) ? 0.0 : max(_3384, 0.0));
                        float _3395 = (((_3345 * 3.1415927410125732421875) * (isnan(1.0) ? _4732 : (isnan(_4732) ? 1.0 : min(_4732, 1.0)))) / ((_3367 * _3367) * ((_3311 * 2.1991131305694580078125) + 3.141590118408203125))) * _3300;
                        _3153 = (_3315 * _3263.x) + _3221;
                        _3154 = (_3315 * _3263.y) + _3222;
                        _3155 = (_3315 * _3263.z) + _3223;
                        _3150 = (_3395 * _3280.x) + _3218;
                        _3151 = (_3395 * _3280.y) + _3219;
                        _3152 = (_3395 * _3280.z) + _3220;
                        if (_3225 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3218 = _3150;
                            _3219 = _3151;
                            _3220 = _3152;
                            _3221 = _3153;
                            _3222 = _3154;
                            _3223 = _3155;
                            _3224 = _3225;
                        }
                    }
                    frontier_phi_66_pred = _3155;
                    frontier_phi_66_pred_1 = _3154;
                    frontier_phi_66_pred_2 = _3153;
                    frontier_phi_66_pred_3 = _3152;
                    frontier_phi_66_pred_4 = _3151;
                    frontier_phi_66_pred_5 = _3150;
                }
                _2960 = frontier_phi_66_pred;
                _2958 = frontier_phi_66_pred_1;
                _2956 = frontier_phi_66_pred_2;
                _2954 = frontier_phi_66_pred_3;
                _2952 = frontier_phi_66_pred_4;
                _2950 = frontier_phi_66_pred_5;
                uint _3101 = _3100 + 1u;
                if (_3101 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3094 = _2950;
                    _3095 = _2952;
                    _3096 = _2954;
                    _3097 = _2956;
                    _3098 = _2958;
                    _3099 = _2960;
                    _3100 = _3101;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2949 = _2950;
            _2951 = _2952;
            _2953 = _2954;
            _2955 = _2956;
            _2957 = _2958;
            _2959 = _2960;
        }
        uvec4 _2963 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2964 = _2963.z;
        uint _2966 = (_2964 >> 8u) & 15u;
        float _3062;
        float _3064;
        float _3066;
        float _3068;
        float _3070;
        float _3072;
        if (((4294967295u << _2966) & _2869) == 0u)
        {
            _3062 = _2949;
            _3064 = _2951;
            _3066 = _2953;
            _3068 = _2955;
            _3070 = _2957;
            _3072 = _2959;
        }
        else
        {
            float _3087 = inversesqrt(dot(vec3(_1947, _1948, _1949), vec3(_1947, _1948, _1949)));
            float _3088 = _3087 * _1947;
            float _3089 = _3087 * _1948;
            float _3090 = _3087 * _1949;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2966 < ((_2964 >> 12u) & 15u))
            {
                float _3063;
                float _3065;
                float _3067;
                float _3069;
                float _3071;
                float _3073;
                float _3201 = _2949;
                float _3202 = _2951;
                float _3203 = _2953;
                float _3204 = _2955;
                float _3205 = _2957;
                float _3206 = _2959;
                uint _3207 = _2966;
                uint _3216;
                bool _3217;
                for (;;)
                {
                    _3216 = texelFetch(g_lightClassification, int((((_2863 << 5u) + (_2849 << 9u)) + (_3207 << 2u)) >> 2u)).x;
                    _3217 = _3216 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3217)
                    {
                        frontier_phi_72_pred = _3206;
                        frontier_phi_72_pred_1 = _3205;
                        frontier_phi_72_pred_2 = _3204;
                        frontier_phi_72_pred_3 = _3203;
                        frontier_phi_72_pred_4 = _3202;
                        frontier_phi_72_pred_5 = _3201;
                    }
                    else
                    {
                        float _3400;
                        float _3401;
                        float _3402;
                        float _3403;
                        float _3404;
                        float _3405;
                        float _3693;
                        float _3694;
                        float _3695;
                        float _3696;
                        float _3697;
                        float _3698;
                        float _3413 = _3201;
                        float _3414 = _3202;
                        float _3415 = _3203;
                        float _3416 = _3204;
                        float _3417 = _3205;
                        float _3418 = _3206;
                        uint _3419 = _3216;
                        uint _3420;
                        vec4 _3445;
                        float _3446;
                        vec4 _3461;
                        vec3 _3473;
                        vec4 _3488;
                        vec4 _3503;
                        float _3549;
                        bool _3550;
                        for (;;)
                        {
                            uint _3430 = ((_3207 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3419));
                            _3420 = (_3419 + 4294967295u) & _3419;
                            uint _3432 = _3430 * 40u;
                            _3445 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3432)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3432 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3432 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3432 + 3u)).x));
                            _3446 = _3445.w;
                            uint _3448 = (_3430 * 40u) + 4u;
                            _3461 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3448)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3448 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3448 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3448 + 3u)).x));
                            uint _3463 = (_3430 * 40u) + 8u;
                            _3473 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3463)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3463 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3463 + 2u)).x));
                            uint _3475 = (_3430 * 40u) + 16u;
                            _3488 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3475)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3475 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3475 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3475 + 3u)).x));
                            uint _3490 = (_3430 * 40u) + 20u;
                            _3503 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3490)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3490 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3490 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3490 + 3u)).x));
                            uint _3505 = (_3430 * 40u) + 24u;
                            vec4 _3518 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3505)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3505 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3505 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3505 + 3u)).x));
                            uint _3524 = (_3430 * 40u) + 28u;
                            vec4 _3537 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3524)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3524 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3524 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3524 + 3u)).x));
                            _3549 = fma(_1949, _3537.z, fma(_1948, _3537.y, _3537.x * _1947)) + _3537.w;
                            _3550 = !((fma(_1949, _3518.z, fma(_1948, _3518.y, _3518.x * _1947)) + _3518.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3550)
                            {
                                float _3577 = _3445.x - _1947;
                                float _3578 = _3445.y - _1948;
                                float _3579 = _3445.z - _1949;
                                float _3580 = dot(vec3(_3577, _3578, _3579), vec3(_3577, _3578, _3579));
                                float _3583 = inversesqrt(_3580);
                                float _3584 = _3583 * _3577;
                                float _3585 = _3583 * _3578;
                                float _3586 = _3583 * _3579;
                                float _3590 = 1.0 - (_3580 / (_3446 * _3446));
                                float _4743 = isnan(0.0) ? _3590 : (isnan(_3590) ? 0.0 : max(_3590, 0.0));
                                float _3591 = isnan(1.0) ? _4743 : (isnan(_4743) ? 1.0 : min(_4743, 1.0));
                                float _3595 = sqrt(_3580) * _3461.w;
                                float _3597 = 1.39999997615814208984375 / (_3595 + 1.39999997615814208984375);
                                float _3598 = _3597 * _3597;
                                float _3601 = ((1.0 - _3598) * dot(vec3(_3584, _3585, _3586), vec3(_834, _837, _840))) + _3598;
                                float _3604 = _3595 * _3595;
                                float _3608 = (fma(_1949, _3488.z, fma(_1948, _3488.y, _3488.x * _1947)) + _3488.w) / _3549;
                                float _3609 = (fma(_1949, _3503.z, fma(_1948, _3503.y, _3503.x * _1947)) + _3503.w) / _3549;
                                float _3613 = 1.0 - dot(vec2(_3608, _3609), vec2(_3608, _3609));
                                float _4759 = isnan(0.0) ? _3613 : (isnan(_3613) ? 0.0 : max(_3613, 0.0));
                                float _3614 = isnan(1.0) ? _4759 : (isnan(_4759) ? 1.0 : min(_4759, 1.0));
                                float _3615 = _3614 * (((isnan(0.0) ? _3601 : (isnan(_3601) ? 0.0 : max(_3601, 0.0))) * _3591) / ((_3604 * 0.699999988079071044921875) + 1.0));
                                float _3627 = exp2(log2(1.0 / ((_3604 * 3.5) + 5.0)) * 0.25);
                                float _3628 = 1.0 - _894;
                                float _3635 = sqrt(1.0 - ((1.0 - (_3628 * _3628)) * (1.0 - (_3627 * _3627))));
                                float _3636 = _3635 * _3635;
                                float _3637 = _3636 * _3636;
                                float _3638 = _3584 - _3088;
                                float _3639 = _3585 - _3089;
                                float _3640 = _3586 - _3090;
                                float _3644 = inversesqrt(dot(vec3(_3638, _3639, _3640), vec3(_3638, _3639, _3640)));
                                float _3648 = dot(vec3(_834, _837, _840), vec3((-0.0) - _3088, (-0.0) - _3089, (-0.0) - _3090));
                                float _4770 = isnan(0.0) ? _3648 : (isnan(_3648) ? 0.0 : max(_3648, 0.0));
                                float _3651 = isnan(1.0) ? _4770 : (isnan(_4770) ? 1.0 : min(_4770, 1.0));
                                float _3652 = dot(vec3(_834, _837, _840), vec3(_3644 * _3638, _3644 * _3639, _3644 * _3640));
                                float _4781 = isnan(0.0) ? _3652 : (isnan(_3652) ? 0.0 : max(_3652, 0.0));
                                float _3655 = isnan(1.0) ? _4781 : (isnan(_4781) ? 1.0 : min(_4781, 1.0));
                                float _3659 = ((_3655 * _3655) * (_3637 + (-1.0))) + 1.0;
                                float _3660 = _3597 * _3636;
                                float _3661 = _3660 * _3660;
                                float _3667 = ((1.0 - _3661) * dot(vec3(_834, _837, _840), vec3(_3584, _3585, _3586))) + _3661;
                                float _4792 = isnan(0.0) ? _3667 : (isnan(_3667) ? 0.0 : max(_3667, 0.0));
                                float _3668 = isnan(1.0) ? _4792 : (isnan(_4792) ? 1.0 : min(_4792, 1.0));
                                float _3669 = 1.0 - _3636;
                                float _3679 = (0.5 / (((_3668 * ((_3651 * _3669) + _3636)) + 9.9999999392252902907785028219223e-09) + (((_3668 * _3669) + _3636) * _3651))) * _3668;
                                float _4803 = isnan(0.0) ? _3679 : (isnan(_3679) ? 0.0 : max(_3679, 0.0));
                                float _3689 = (_3614 * _3591) * (((_3637 * 3.1415927410125732421875) * (isnan(1.0) ? _4803 : (isnan(_4803) ? 1.0 : min(_4803, 1.0)))) / ((_3659 * _3659) * ((_3604 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3615 * _3461.y;
                                frontier_phi_78_pred_1 = _3615 * _3461.x;
                                frontier_phi_78_pred_2 = _3689 * _3473.z;
                                frontier_phi_78_pred_3 = _3689 * _3473.y;
                                frontier_phi_78_pred_4 = _3689 * _3473.x;
                                frontier_phi_78_pred_5 = _3615 * _3461.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3697 = frontier_phi_78_pred;
                            _3696 = frontier_phi_78_pred_1;
                            _3695 = frontier_phi_78_pred_2;
                            _3694 = frontier_phi_78_pred_3;
                            _3693 = frontier_phi_78_pred_4;
                            _3698 = frontier_phi_78_pred_5;
                            _3403 = _3696 + _3416;
                            _3404 = _3697 + _3417;
                            _3405 = _3698 + _3418;
                            _3400 = _3693 + _3413;
                            _3401 = _3694 + _3414;
                            _3402 = _3695 + _3415;
                            if (_3420 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3413 = _3400;
                                _3414 = _3401;
                                _3415 = _3402;
                                _3416 = _3403;
                                _3417 = _3404;
                                _3418 = _3405;
                                _3419 = _3420;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3405;
                        frontier_phi_72_pred_1 = _3404;
                        frontier_phi_72_pred_2 = _3403;
                        frontier_phi_72_pred_3 = _3402;
                        frontier_phi_72_pred_4 = _3401;
                        frontier_phi_72_pred_5 = _3400;
                    }
                    _3073 = frontier_phi_72_pred;
                    _3071 = frontier_phi_72_pred_1;
                    _3069 = frontier_phi_72_pred_2;
                    _3067 = frontier_phi_72_pred_3;
                    _3065 = frontier_phi_72_pred_4;
                    _3063 = frontier_phi_72_pred_5;
                    uint _3208 = _3207 + 1u;
                    if (_3208 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3201 = _3063;
                        _3202 = _3065;
                        _3203 = _3067;
                        _3204 = _3069;
                        _3205 = _3071;
                        _3206 = _3073;
                        _3207 = _3208;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3073;
                frontier_phi_60_61_ladder_1 = _3071;
                frontier_phi_60_61_ladder_2 = _3067;
                frontier_phi_60_61_ladder_3 = _3065;
                frontier_phi_60_61_ladder_4 = _3063;
                frontier_phi_60_61_ladder_5 = _3069;
            }
            else
            {
                frontier_phi_60_61_ladder = _2959;
                frontier_phi_60_61_ladder_1 = _2957;
                frontier_phi_60_61_ladder_2 = _2953;
                frontier_phi_60_61_ladder_3 = _2951;
                frontier_phi_60_61_ladder_4 = _2949;
                frontier_phi_60_61_ladder_5 = _2955;
            }
            _3062 = frontier_phi_60_61_ladder_4;
            _3064 = frontier_phi_60_61_ladder_3;
            _3066 = frontier_phi_60_61_ladder_2;
            _3068 = frontier_phi_60_61_ladder_5;
            _3070 = frontier_phi_60_61_ladder_1;
            _3072 = frontier_phi_60_61_ladder;
        }
        float _3077 = isnan(1.0) ? _878 : (isnan(_878) ? 1.0 : min(_878, 1.0));
        _2882 = (_3077 * _3068) + _2413;
        _2884 = (_3077 * _3070) + _2415;
        _2886 = (_3077 * _3072) + _2417;
        _2888 = ((_3062 * 0.039999999105930328369140625) * _3077) + _2736;
        _2890 = ((_3064 * 0.039999999105930328369140625) * _3077) + _2738;
        _2892 = ((_3066 * 0.039999999105930328369140625) * _3077) + _2740;
    }
    else
    {
        _2882 = _2413;
        _2884 = _2415;
        _2886 = _2417;
        _2888 = _2736;
        _2890 = _2738;
        _2892 = _2740;
    }
    float _4819 = isnan(0.0) ? _863 : (isnan(_863) ? 0.0 : max(_863, 0.0));
    float _4830 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
    float _4841 = isnan(0.0) ? _865 : (isnan(_865) ? 0.0 : max(_865, 0.0));
    uint _2912 = _266 + 6u;
    float _2920 = _815 / cbSceneParam._m0[86u].x;
    float _2921 = _816 / cbSceneParam._m0[86u].y;
    vec4 _2935 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2920, _2921, (log2((isnan(cbSceneParam._m0[77u].w) ? _748 : (isnan(_748) ? cbSceneParam._m0[77u].w : min(_748, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2937 = _2935.x;
    float _2938 = _2935.y;
    float _2939 = _2935.z;
    float _2940 = _2935.w;
    float _3012;
    float _3014;
    float _3016;
    float _3018;
    if (_748 > cbSceneParam._m0[78u].w)
    {
        float _2974 = isnan(_748) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _748 : min(cbSceneParam._m0[80u].w, _748));
        float _2975 = _2974 / _748;
        float _2986 = _2975 * _800;
        float _2987 = _801 * _2975;
        float _2988 = (-0.0) - _2987;
        float _2990 = _2975 * _802;
        float _2992 = (cbSceneParam._m0[77u].w * _2988) / _2974;
        float _2993 = _2992 + cbSceneParam._m0[79u].w;
        float _2994 = cbSceneParam._m0[79u].w - _2987;
        float _3000 = sqrt(((_2986 * _2986) + (_2987 * _2987)) + (_2990 * _2990));
        float _3003 = (1.0 - (cbSceneParam._m0[77u].w / _2974)) * _3000;
        float _3008 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3010 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3163;
        if (abs((_2988 - _2992) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3163 = ((((_2993 > 0.0) ? exp2(_3008 * _2993) : (2.0 - exp2(_3010 * _2993))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3003;
        }
        else
        {
            float _3123 = 1.0 / cbSceneParam._m0[80u].x;
            float _3124 = isnan(_2994) ? _2993 : (isnan(_2993) ? _2994 : max(_2993, _2994));
            float _3125 = isnan(_2994) ? _2993 : (isnan(_2993) ? _2994 : min(_2993, _2994));
            float _3134 = isnan(0.0) ? _3124 : (isnan(_3124) ? 0.0 : min(_3124, 0.0));
            float _3135 = isnan(0.0) ? _3125 : (isnan(_3125) ? 0.0 : min(_3125, 0.0));
            _3163 = ((abs(_3000 / _2988) * cbSceneParam._m0[80u].y) * ((((_3134 - _3135) * 2.0) - ((exp2(_3008 * (isnan(0.0) ? _3124 : (isnan(_3124) ? 0.0 : max(_3124, 0.0)))) - exp2(_3008 * (isnan(0.0) ? _3125 : (isnan(_3125) ? 0.0 : max(_3125, 0.0))))) * _3123)) - ((exp2(_3010 * _3134) - exp2(_3010 * _3135)) * _3123))) + (_3003 * cbSceneParam._m0[80u].z);
        }
        vec4 _3165 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2920, _2921, 1.0), 0.0);
        float _3174 = exp2((_3163 * (-1.44269502162933349609375)) * (1.0 - _3165.w));
        float _3175 = log2(_3174);
        float _3191 = log2(_2940);
        _3012 = (exp2(_3191 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3175 * cbSceneParam._m0[78u].x)) * _3165.x) / cbSceneParam._m0[78u].x)) + _2937;
        _3014 = (exp2(_3191 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3175 * cbSceneParam._m0[78u].y)) * _3165.y) / cbSceneParam._m0[78u].y)) + _2938;
        _3016 = (exp2(_3191 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3175 * cbSceneParam._m0[78u].z)) * _3165.z) / cbSceneParam._m0[78u].z)) + _2939;
        _3018 = _3174 * _2940;
    }
    else
    {
        _3012 = _2937;
        _3014 = _2938;
        _3016 = _2939;
        _3018 = _2940;
    }
    float _3030 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3031 = _3030 == 3.0;
    float _3032 = log2(_3018);
    float _3039 = exp2(_3032 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4819 : (isnan(_4819) ? 1.0 : min(_4819, 1.0))) * (_2882 + ((isnan(0.0) ? _1604 : (isnan(_1604) ? 0.0 : max(_1604, 0.0))) * _878))) + ((_2888 + ((isnan(0.0) ? _1894 : (isnan(_1894) ? 0.0 : max(_1894, 0.0))) * _1683)) * cbPerFrame._m0[3u].x));
    float _3040 = exp2(_3032 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4830 : (isnan(_4830) ? 1.0 : min(_4830, 1.0))) * (_2884 + ((isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0))) * _878))) + ((_2890 + ((isnan(0.0) ? _1897 : (isnan(_1897) ? 0.0 : max(_1897, 0.0))) * _1683)) * cbPerFrame._m0[3u].x));
    float _3041 = exp2(_3032 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4841 : (isnan(_4841) ? 1.0 : min(_4841, 1.0))) * (_2886 + ((isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0))) * _878))) + ((_2892 + ((isnan(0.0) ? _1900 : (isnan(_1900) ? 0.0 : max(_1900, 0.0))) * _1683)) * cbPerFrame._m0[3u].x));
    float _3050 = (_3030 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3050 * (_3031 ? _3039 : (_3039 + (cbSceneParam._m0[72u].w * _3012)));
    SV_Target.y = _3050 * (_3031 ? _3040 : (_3040 + (cbSceneParam._m0[72u].w * _3014)));
    SV_Target.z = _3050 * (_3031 ? _3041 : (_3041 + (cbSceneParam._m0[72u].w * _3016)));
    SV_Target.w = cbInstanceData._m0[_2912].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2912].w;
}


