#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1584;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _246 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _247 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _248 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _254 = inversesqrt(dot(vec3(_246, _247, _248), vec3(_246, _247, _248)));
    float _261 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _268 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _280 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _282 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _283 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4170 = isnan(0.0) ? _280 : (isnan(_280) ? 0.0 : max(_280, 0.0));
    float _4181 = isnan(0.0) ? _282 : (isnan(_282) ? 0.0 : max(_282, 0.0));
    float _4192 = isnan(0.0) ? _283 : (isnan(_283) ? 0.0 : max(_283, 0.0));
    uint _293 = uint(roundEven(NORMAL.w)) * 13u;
    uint _298 = _293 + 1u;
    uint _302 = _293 + 2u;
    float _311 = sqrt(((cbInstanceData._m0[_298].x * cbInstanceData._m0[_298].x) + (cbInstanceData._m0[_293].x * cbInstanceData._m0[_293].x)) + (cbInstanceData._m0[_302].x * cbInstanceData._m0[_302].x));
    float _312 = _311 * TEXCOORD.z;
    float _313 = _311 * TEXCOORD.w;
    vec4 _326 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _312) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _313) + cbTextureTilingScale._m0[13u].w));
    vec4 _349 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _375 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _380 = _375.x * cbMtdParam._m0[11u].x;
    float _381 = _375.y * cbMtdParam._m0[11u].y;
    float _382 = _375.z * cbMtdParam._m0[11u].z;
    vec4 _401 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _312) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _313) + cbTextureTilingScale._m0[5u].w));
    vec4 _420 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _458 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _460 = _458.x;
    float _472 = dot(vec4(_460, _458.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _489 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _420.x) * 2.0) - ((((_460 - _472) * cbMtdParam._m0[24u].z) + _472) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4203 = isnan(0.0) ? _489 : (isnan(_489) ? 0.0 : max(_489, 0.0));
    float _490 = isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0));
    float _497 = (_490 * ((_401.x * cbMtdParam._m0[12u].x) - _380)) + _380;
    float _498 = (_490 * ((_401.y * cbMtdParam._m0[12u].y) - _381)) + _381;
    float _499 = (_490 * ((_401.z * cbMtdParam._m0[12u].z) - _382)) + _382;
    vec4 _516 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _312) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _313) + cbTextureTilingScale._m0[3u].w));
    vec4 _536 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _538 = _536.x;
    float _548 = dot(vec4(_538, _536.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _562 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _420.y) * 2.0) - ((((_538 - _548) * cbMtdParam._m0[24u].z) + _548) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4214 = isnan(0.0) ? _562 : (isnan(_562) ? 0.0 : max(_562, 0.0));
    float _563 = isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0));
    float _570 = (_563 * ((_516.x * cbMtdParam._m0[13u].x) - _497)) + _497;
    float _571 = (_563 * ((_516.y * cbMtdParam._m0[13u].y) - _498)) + _498;
    float _572 = (_563 * ((_516.z * cbMtdParam._m0[13u].z) - _499)) + _499;
    vec4 _590 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _312) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _313) + cbTextureTilingScale._m0[24u].w));
    vec4 _607 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _609 = _607.x;
    float _619 = dot(vec4(_609, _607.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _631 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _420.z) * 2.0) - ((((_609 - _619) * cbMtdParam._m0[24u].z) + _619) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4225 = isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : max(_631, 0.0));
    float _632 = isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0));
    float _642 = (_349.x * cbMtdParam._m0[9u].x) * ((_632 * ((_590.x * cbMtdParam._m0[14u].x) - _570)) + _570);
    float _643 = (_349.y * cbMtdParam._m0[9u].y) * ((_632 * ((_590.y * cbMtdParam._m0[14u].y) - _571)) + _571);
    float _644 = (_349.z * cbMtdParam._m0[9u].z) * ((_632 * ((_590.z * cbMtdParam._m0[14u].z) - _572)) + _572);
    float _648 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _326.x) * _642;
    float _651 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _326.y) * _643;
    float _654 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _326.z) * _644;
    float _662 = (((_642 - _648) * (isnan(1.0) ? _4170 : (isnan(_4170) ? 1.0 : min(_4170, 1.0)))) + _648) * 4.55000019073486328125;
    float _664 = (((_643 - _651) * (isnan(1.0) ? _4181 : (isnan(_4181) ? 1.0 : min(_4181, 1.0)))) + _651) * 4.55000019073486328125;
    float _666 = (((_644 - _654) * (isnan(1.0) ? _4192 : (isnan(_4192) ? 1.0 : min(_4192, 1.0)))) + _654) * 4.55000019073486328125;
    vec4 _683 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _312) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _313) + cbTextureTilingScale._m0[20u].w));
    vec4 _706 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _312) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _313) + cbTextureTilingScale._m0[4u].w));
    vec4 _723 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _725 = _723.x;
    float _726 = _723.y;
    float _727 = _723.z;
    float _734 = ((_706.x - _725) * _490) + _725;
    float _735 = ((_706.y - _726) * _490) + _726;
    float _736 = ((_706.z - _727) * _490) + _727;
    vec4 _748 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _312) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _313) + cbTextureTilingScale._m0[2u].w));
    float _759 = ((_748.x - _734) * _563) + _734;
    float _760 = ((_748.y - _735) * _563) + _735;
    float _761 = ((_748.z - _736) * _563) + _736;
    vec4 _773 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _312) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _313) + cbTextureTilingScale._m0[23u].w));
    float _786 = ((_773.z - _761) * _632) + _761;
    float _789 = ((((_773.x - _759) * _632) + _759) * 2.0) + (-1.0);
    float _790 = ((((_773.y - _760) * _632) + _760) * 2.0) + (-1.0);
    float _791 = dot(vec2(_789, _790), vec2(_789, _790));
    float _4236 = isnan(0.0) ? _791 : (isnan(_791) ? 0.0 : max(_791, 0.0));
    float _796 = sqrt(1.0 - (isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0))));
    vec4 _810 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _835 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _312) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _313) + cbTextureTilingScale._m0[11u].w));
    float _837 = _835.x;
    float _838 = 1.0 - _837;
    float _844 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _847 = ((isnan(0.0) ? _844 : (isnan(_844) ? 0.0 : min(_844, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _856 = (_847 - ((((((_837 - _838) * cbMtdParam._m0[24u].w) + _838) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _847))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4257 = isnan(0.0) ? _856 : (isnan(_856) ? 0.0 : max(_856, 0.0));
    float _857 = isnan(1.0) ? _4257 : (isnan(_4257) ? 1.0 : min(_4257, 1.0));
    float _864 = (_857 * (cbMtdParam._m0[17u].x - _662)) + _662;
    float _865 = (_857 * (cbMtdParam._m0[17u].y - _664)) + _664;
    float _866 = (_857 * (cbMtdParam._m0[17u].z - _666)) + _666;
    float _881 = sqrt(((cbInstanceData._m0[_298].x * cbInstanceData._m0[_298].x) + (cbInstanceData._m0[_293].x * cbInstanceData._m0[_293].x)) + (cbInstanceData._m0[_302].x * cbInstanceData._m0[_302].x));
    float _882 = _881 * TEXCOORD.z;
    float _883 = _881 * TEXCOORD.w;
    vec4 _895 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _882) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _883) + cbTextureTilingScale._m0[19u].w));
    float _897 = _895.x;
    float _898 = 1.0 - _897;
    float _925 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_897 - _898) * cbMtdParam._m0[24u].y) + _898) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4268 = isnan(0.0) ? _925 : (isnan(_925) ? 0.0 : max(_925, 0.0));
    float _926 = isnan(1.0) ? _4268 : (isnan(_4268) ? 1.0 : min(_4268, 1.0));
    float _934 = ((((cbMtdParam._m0[10u].x - _864) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _926) + _864;
    float _935 = ((((cbMtdParam._m0[10u].y - _865) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _926) + _865;
    float _936 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _866)) * _926) + _866;
    float _941 = (((_683.z - _786) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _786;
    float _945 = ((_810.z - _941) * cbMtdParam._m0[19u].w) + _941;
    vec4 _959 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _312) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _313) + cbTextureTilingScale._m0[15u].w));
    float _966 = (_959.x * 2.0) + (-1.0);
    float _967 = (_959.y * 2.0) + (-1.0);
    float _968 = dot(vec2(_966, _967), vec2(_966, _967));
    float _4279 = isnan(0.0) ? _968 : (isnan(_968) ? 0.0 : max(_968, 0.0));
    float _976 = (_857 * (_959.z - _945)) + _945;
    float _979 = ((cbMtdParam._m0[23u].y - _976) * _926) + _976;
    vec4 _998 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _882) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _883) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _1004 = (_998.x * 2.0) + (-1.0);
    float _1005 = (_998.y * 2.0) + (-1.0);
    float _1006 = dot(vec2(_1004, _1005), vec2(_1004, _1005));
    float _4290 = isnan(0.0) ? _1006 : (isnan(_1006) ? 0.0 : max(_1006, 0.0));
    float _1020 = (_789 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_683.x * 2.0) + (-1.0)))) + (((_810.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _1021 = (_790 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_683.y * 2.0) + (-1.0)))) + (((_810.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _1033 = (((_966 - _1020) + (cbMtdParam._m0[21u].x * _1020)) * _857) + _1020;
    float _1034 = (((_967 - _1021) + (cbMtdParam._m0[21u].x * _1021)) * _857) + _1021;
    float _1035 = (_857 * (sqrt(1.0 - (isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0)))) - _796)) + _796;
    float _1046 = (((_1004 - _1033) + (_1033 * cbMtdParam._m0[22u].z)) * _926) + _1033;
    float _1047 = (((_1005 - _1034) + (_1034 * cbMtdParam._m0[22u].z)) * _926) + _1034;
    float _1048 = ((sqrt(1.0 - (isnan(1.0) ? _4290 : (isnan(_4290) ? 1.0 : min(_4290, 1.0)))) - _1035) * _926) + _1035;
    float _1050 = cbMtdParam._m0[22u].x + _810.w;
    float _1053 = fma(_1048, _261 * NORMAL.x, fma(_1047, _268 * TANGENT.x, (_254 * _246) * _1046));
    float _1056 = fma(_1048, _261 * NORMAL.y, fma(_1047, _268 * TANGENT.y, (_254 * _247) * _1046));
    float _1059 = fma(_1048, _261 * NORMAL.z, fma(_1047, _268 * TANGENT.z, (_254 * _248) * _1046));
    float _1063 = inversesqrt(dot(vec3(_1053, _1056, _1059), vec3(_1053, _1056, _1059)));
    float _1064 = _1063 * _1053;
    float _1065 = _1063 * _1056;
    float _1066 = _1063 * _1059;
    float _4301 = isnan(0.0) ? _979 : (isnan(_979) ? 0.0 : max(_979, 0.0));
    float _1067 = isnan(1.0) ? _4301 : (isnan(_4301) ? 1.0 : min(_4301, 1.0));
    float _4312 = isnan(0.0) ? _1050 : (isnan(_1050) ? 0.0 : max(_1050, 0.0));
    float _4323 = isnan(0.0) ? _934 : (isnan(_934) ? 0.0 : max(_934, 0.0));
    float _4334 = isnan(0.0) ? _935 : (isnan(_935) ? 0.0 : max(_935, 0.0));
    float _4345 = isnan(0.0) ? _936 : (isnan(_936) ? 0.0 : max(_936, 0.0));
    float _1085 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1125 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1135 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1125);
    float _1136 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1125);
    float _1137 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1125);
    float _1141 = inversesqrt(dot(vec3(_1135, _1136, _1137), vec3(_1135, _1136, _1137)));
    float _1142 = _1135 * _1141;
    float _1143 = _1136 * _1141;
    float _1144 = _1137 * _1141;
    float _1150 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1151 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1169 = fma(_1066, cbSceneParam._m0[5u].z, fma(_1065, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1064));
    float _1172 = fma(_1066, cbSceneParam._m0[6u].z, fma(_1065, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1064));
    float _1175 = fma(_1066, cbSceneParam._m0[7u].z, fma(_1065, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1064));
    uint _1189 = (_293 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1195 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0)))) * cbInstanceData._m0[_1189].x;
    float _1196 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4334 : (isnan(_4334) ? 1.0 : min(_4334, 1.0)))) * cbInstanceData._m0[_1189].y;
    float _1197 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4345 : (isnan(_4345) ? 1.0 : min(_4345, 1.0)))) * cbInstanceData._m0[_1189].z;
    float _4356 = isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0));
    float _1198 = isnan(1.0) ? _4356 : (isnan(_4356) ? 1.0 : min(_4356, 1.0));
    float _4367 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
    float _1199 = isnan(1.0) ? _4367 : (isnan(_4367) ? 1.0 : min(_4367, 1.0));
    float _4378 = isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0));
    float _1200 = isnan(1.0) ? _4378 : (isnan(_4378) ? 1.0 : min(_4378, 1.0));
    vec4 _1209 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1150, cbSceneParam._m0[86u].y * _1151));
    float _1213 = ((isnan(1.0) ? _4312 : (isnan(_4312) ? 1.0 : min(_4312, 1.0))) * TEXCOORD_5.w) * _1209.x;
    float _1214 = dot(vec3(_1064, _1065, _1066), vec3(_1142, _1143, _1144));
    float _1217 = _1214 * 2.0;
    float _1221 = (_1217 * _1064) - _1142;
    float _1222 = (_1217 * _1065) - _1143;
    float _1223 = (_1217 * _1066) - _1144;
    float _1227 = abs(dot(vec3(_1142, _1143, _1144), vec3(_1064, _1065, _1066)));
    float _4389 = isnan(0.0) ? _1227 : (isnan(_1227) ? 0.0 : max(_1227, 0.0));
    float _1229 = sqrt(_1067);
    float _1242 = exp2((_1229 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4389 : (isnan(_4389) ? 1.0 : min(_4389, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1229 * 3.0));
    float _1274 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1278 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1282 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1583;
    float _1585;
    float _1586;
    float _1587;
    float _1588;
    float _1589;
    float _1590;
    float _1591;
    float _1592;
    float _1593;
    float _1594;
    float _1595;
    float _1596;
    float _1597;
    float _1598;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1308 = fma(_1282, cbModelParam._m0[26u].z, fma(_1278, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1274));
        float _1312 = fma(_1282, cbModelParam._m0[27u].z, fma(_1278, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1274));
        float _1316 = fma(_1282, cbModelParam._m0[28u].z, fma(_1278, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1274));
        float _1341 = _1274 + _1064;
        float _1342 = _1278 + _1065;
        float _1343 = _1282 + _1066;
        float _1353 = fma(_1343, cbModelParam._m0[26u].z, fma(_1342, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1341)) - _1308;
        float _1354 = fma(_1343, cbModelParam._m0[27u].z, fma(_1342, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1341)) - _1312;
        float _1355 = fma(_1343, cbModelParam._m0[28u].z, fma(_1342, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1341)) - _1316;
        float _1359 = inversesqrt(dot(vec3(_1353, _1354, _1355), vec3(_1353, _1354, _1355)));
        float _1372 = ((_1359 * _1353) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1308 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1373 = ((_1359 * _1354) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1312 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1374 = ((_1359 * _1355) / cbModelParam._m0[34u].z) + ((((((_1316 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1377 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1372, _1373, _1374), 0.0);
        vec4 _1384 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1372, _1373, _1374), 0.0);
        vec4 _1391 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1372, _1373, _1374), 0.0);
        vec4 _1398 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1372, _1373, _1374), 0.0);
        float _1411 = exp2((_1377.w + (-0.5)) * 20.0) * 2.0;
        float _1412 = _1411 * (_1377.x + (-0.5));
        float _1413 = _1411 * (_1377.y + (-0.5));
        float _1414 = _1411 * (_1377.z + (-0.5));
        float _1421 = exp2((_1384.w + (-0.5)) * 20.0) * 2.0;
        float _1422 = _1421 * (_1384.x + (-0.5));
        float _1423 = _1421 * (_1384.y + (-0.5));
        float _1424 = _1421 * (_1384.z + (-0.5));
        float _1431 = exp2((_1391.w + (-0.5)) * 20.0) * 2.0;
        float _1432 = _1431 * (_1391.x + (-0.5));
        float _1433 = _1431 * (_1391.y + (-0.5));
        float _1434 = _1431 * (_1391.z + (-0.5));
        float _1441 = exp2((_1398.w + (-0.5)) * 20.0) * 2.0;
        float _1442 = _1441 * (_1398.x + (-0.5));
        float _1443 = _1441 * (_1398.y + (-0.5));
        float _1444 = _1441 * (_1398.z + (-0.5));
        float _1445 = isnan(0.0) ? _1442 : (isnan(_1442) ? 0.0 : max(_1442, 0.0));
        float _1446 = isnan(0.0) ? _1443 : (isnan(_1443) ? 0.0 : max(_1443, 0.0));
        float _1447 = isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0));
        float _1448 = _1412 * 0.5;
        float _1449 = _1422 * 0.5;
        float _1450 = _1432 * 0.5;
        float _1451 = dot(vec3(_1448, _1449, _1450), vec3(_1448, _1449, _1450));
        float _1456 = (_1451 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1451);
        float _1465 = (dot(vec3(_1064, _1065, _1066), vec3(_1456 * _1448, _1456 * _1449, _1456 * _1450)) + 1.0) * 0.5;
        float _4415 = isnan(0.0) ? _1465 : (isnan(_1465) ? 0.0 : max(_1465, 0.0));
        float _1475 = sqrt(((_1449 * _1449) + (_1448 * _1448)) + (_1450 * _1450)) / (_1445 + 9.9999997473787516355514526367188e-06);
        float _4426 = isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0));
        float _1476 = isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0));
        float _1477 = _1476 * 2.0;
        float _1481 = (1.0 - _1476) / (_1476 + 1.0);
        float _4437 = isnan(0.0) ? _1481 : (isnan(_1481) ? 0.0 : max(_1481, 0.0));
        float _1482 = isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0));
        float _1491 = ((((1.0 - _1482) * (_1477 + 2.0)) * exp2(log2(isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0))) * (_1477 + 1.0))) + _1482) * _1445;
        float _1492 = _1413 * 0.5;
        float _1493 = _1423 * 0.5;
        float _1494 = _1433 * 0.5;
        float _1495 = dot(vec3(_1492, _1493, _1494), vec3(_1492, _1493, _1494));
        float _1500 = (_1495 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1495);
        float _1508 = (dot(vec3(_1064, _1065, _1066), vec3(_1500 * _1492, _1500 * _1493, _1500 * _1494)) + 1.0) * 0.5;
        float _4448 = isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0));
        float _1517 = sqrt(((_1493 * _1493) + (_1492 * _1492)) + (_1494 * _1494)) / (_1446 + 9.9999997473787516355514526367188e-06);
        float _4459 = isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0));
        float _1518 = isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0));
        float _1519 = _1518 * 2.0;
        float _1523 = (1.0 - _1518) / (_1518 + 1.0);
        float _4470 = isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0));
        float _1524 = isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0));
        float _1533 = ((((1.0 - _1524) * (_1519 + 2.0)) * exp2(log2(isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0))) * (_1519 + 1.0))) + _1524) * _1446;
        float _1534 = _1414 * 0.5;
        float _1535 = _1424 * 0.5;
        float _1536 = _1434 * 0.5;
        float _1537 = dot(vec3(_1534, _1535, _1536), vec3(_1534, _1535, _1536));
        float _1542 = (_1537 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1537);
        float _1550 = (dot(vec3(_1064, _1065, _1066), vec3(_1542 * _1534, _1542 * _1535, _1542 * _1536)) + 1.0) * 0.5;
        float _4481 = isnan(0.0) ? _1550 : (isnan(_1550) ? 0.0 : max(_1550, 0.0));
        float _1559 = sqrt(((_1535 * _1535) + (_1534 * _1534)) + (_1536 * _1536)) / (_1447 + 9.9999997473787516355514526367188e-06);
        float _4492 = isnan(0.0) ? _1559 : (isnan(_1559) ? 0.0 : max(_1559, 0.0));
        float _1560 = isnan(1.0) ? _4492 : (isnan(_4492) ? 1.0 : min(_4492, 1.0));
        float _1561 = _1560 * 2.0;
        float _1565 = (1.0 - _1560) / (_1560 + 1.0);
        float _4503 = isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0));
        float _1566 = isnan(1.0) ? _4503 : (isnan(_4503) ? 1.0 : min(_4503, 1.0));
        float _1575 = ((((1.0 - _1566) * (_1561 + 2.0)) * exp2(log2(isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0))) * (_1561 + 1.0))) + _1566) * _1447;
        _1583 = _1414;
        _1585 = _1413;
        _1586 = _1412;
        _1587 = _1424;
        _1588 = _1423;
        _1589 = _1422;
        _1590 = _1434;
        _1591 = _1433;
        _1592 = _1432;
        _1593 = _1447;
        _1594 = _1446;
        _1595 = _1445;
        _1596 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0)));
        _1597 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0)));
        _1598 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1575 : (isnan(_1575) ? 0.0 : max(_1575, 0.0)));
    }
    else
    {
        _1583 = _1584;
        _1585 = _1584;
        _1586 = _1584;
        _1587 = _1584;
        _1588 = _1584;
        _1589 = _1584;
        _1590 = _1584;
        _1591 = _1584;
        _1592 = _1584;
        _1593 = _1584;
        _1594 = _1584;
        _1595 = _1584;
        _1596 = 0.0;
        _1597 = 0.0;
        _1598 = 0.0;
    }
    float _1890;
    float _1891;
    float _1892;
    float _1893;
    float _1894;
    float _1895;
    float _1896;
    float _1897;
    float _1898;
    float _1899;
    float _1900;
    float _1901;
    float _1902;
    float _1903;
    float _1904;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1621 = fma(_1282, cbModelParam._m0[30u].z, fma(_1278, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1274));
        float _1625 = fma(_1282, cbModelParam._m0[31u].z, fma(_1278, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1274));
        float _1629 = fma(_1282, cbModelParam._m0[32u].z, fma(_1278, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1274));
        float _1652 = _1274 + _1064;
        float _1653 = _1278 + _1065;
        float _1654 = _1282 + _1066;
        float _1664 = fma(_1654, cbModelParam._m0[30u].z, fma(_1653, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1652)) - _1621;
        float _1665 = fma(_1654, cbModelParam._m0[31u].z, fma(_1653, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1652)) - _1625;
        float _1666 = fma(_1654, cbModelParam._m0[32u].z, fma(_1653, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1652)) - _1629;
        float _1670 = inversesqrt(dot(vec3(_1664, _1665, _1666), vec3(_1664, _1665, _1666)));
        float _1683 = ((_1670 * _1664) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1621 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1684 = ((_1670 * _1665) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1625 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1685 = ((_1670 * _1666) / cbModelParam._m0[35u].z) + ((((((_1629 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1687 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1683, _1684, _1685), 0.0);
        vec4 _1694 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1683, _1684, _1685), 0.0);
        vec4 _1701 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1683, _1684, _1685), 0.0);
        vec4 _1708 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1683, _1684, _1685), 0.0);
        float _1720 = exp2((_1687.w + (-0.5)) * 20.0) * 2.0;
        float _1721 = _1720 * (_1687.x + (-0.5));
        float _1722 = _1720 * (_1687.y + (-0.5));
        float _1723 = _1720 * (_1687.z + (-0.5));
        float _1730 = exp2((_1694.w + (-0.5)) * 20.0) * 2.0;
        float _1731 = _1730 * (_1694.x + (-0.5));
        float _1732 = _1730 * (_1694.y + (-0.5));
        float _1733 = _1730 * (_1694.z + (-0.5));
        float _1740 = exp2((_1701.w + (-0.5)) * 20.0) * 2.0;
        float _1741 = _1740 * (_1701.x + (-0.5));
        float _1742 = _1740 * (_1701.y + (-0.5));
        float _1743 = _1740 * (_1701.z + (-0.5));
        float _1750 = exp2((_1708.w + (-0.5)) * 20.0) * 2.0;
        float _1751 = _1750 * (_1708.x + (-0.5));
        float _1752 = _1750 * (_1708.y + (-0.5));
        float _1753 = _1750 * (_1708.z + (-0.5));
        float _1754 = isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0));
        float _1755 = isnan(0.0) ? _1752 : (isnan(_1752) ? 0.0 : max(_1752, 0.0));
        float _1756 = isnan(0.0) ? _1753 : (isnan(_1753) ? 0.0 : max(_1753, 0.0));
        float _1757 = _1721 * 0.5;
        float _1758 = _1731 * 0.5;
        float _1759 = _1741 * 0.5;
        float _1760 = dot(vec3(_1757, _1758, _1759), vec3(_1757, _1758, _1759));
        float _1765 = (_1760 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1760);
        float _1773 = (dot(vec3(_1064, _1065, _1066), vec3(_1765 * _1757, _1765 * _1758, _1765 * _1759)) + 1.0) * 0.5;
        float _4544 = isnan(0.0) ? _1773 : (isnan(_1773) ? 0.0 : max(_1773, 0.0));
        float _1782 = sqrt(((_1758 * _1758) + (_1757 * _1757)) + (_1759 * _1759)) / (_1754 + 9.9999997473787516355514526367188e-06);
        float _4555 = isnan(0.0) ? _1782 : (isnan(_1782) ? 0.0 : max(_1782, 0.0));
        float _1783 = isnan(1.0) ? _4555 : (isnan(_4555) ? 1.0 : min(_4555, 1.0));
        float _1784 = _1783 * 2.0;
        float _1788 = (1.0 - _1783) / (_1783 + 1.0);
        float _4566 = isnan(0.0) ? _1788 : (isnan(_1788) ? 0.0 : max(_1788, 0.0));
        float _1789 = isnan(1.0) ? _4566 : (isnan(_4566) ? 1.0 : min(_4566, 1.0));
        float _1798 = ((((1.0 - _1789) * (_1784 + 2.0)) * exp2(log2(isnan(1.0) ? _4544 : (isnan(_4544) ? 1.0 : min(_4544, 1.0))) * (_1784 + 1.0))) + _1789) * _1754;
        float _1799 = _1722 * 0.5;
        float _1800 = _1732 * 0.5;
        float _1801 = _1742 * 0.5;
        float _1802 = dot(vec3(_1799, _1800, _1801), vec3(_1799, _1800, _1801));
        float _1807 = (_1802 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1802);
        float _1815 = (dot(vec3(_1064, _1065, _1066), vec3(_1807 * _1799, _1807 * _1800, _1807 * _1801)) + 1.0) * 0.5;
        float _4577 = isnan(0.0) ? _1815 : (isnan(_1815) ? 0.0 : max(_1815, 0.0));
        float _1824 = sqrt(((_1800 * _1800) + (_1799 * _1799)) + (_1801 * _1801)) / (_1755 + 9.9999997473787516355514526367188e-06);
        float _4588 = isnan(0.0) ? _1824 : (isnan(_1824) ? 0.0 : max(_1824, 0.0));
        float _1825 = isnan(1.0) ? _4588 : (isnan(_4588) ? 1.0 : min(_4588, 1.0));
        float _1826 = _1825 * 2.0;
        float _1830 = (1.0 - _1825) / (_1825 + 1.0);
        float _4599 = isnan(0.0) ? _1830 : (isnan(_1830) ? 0.0 : max(_1830, 0.0));
        float _1831 = isnan(1.0) ? _4599 : (isnan(_4599) ? 1.0 : min(_4599, 1.0));
        float _1840 = ((((1.0 - _1831) * (_1826 + 2.0)) * exp2(log2(isnan(1.0) ? _4577 : (isnan(_4577) ? 1.0 : min(_4577, 1.0))) * (_1826 + 1.0))) + _1831) * _1755;
        float _1841 = _1723 * 0.5;
        float _1842 = _1733 * 0.5;
        float _1843 = _1743 * 0.5;
        float _1844 = dot(vec3(_1841, _1842, _1843), vec3(_1841, _1842, _1843));
        float _1849 = (_1844 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1844);
        float _1857 = (dot(vec3(_1064, _1065, _1066), vec3(_1849 * _1841, _1849 * _1842, _1849 * _1843)) + 1.0) * 0.5;
        float _4610 = isnan(0.0) ? _1857 : (isnan(_1857) ? 0.0 : max(_1857, 0.0));
        float _1866 = sqrt(((_1842 * _1842) + (_1841 * _1841)) + (_1843 * _1843)) / (_1756 + 9.9999997473787516355514526367188e-06);
        float _4621 = isnan(0.0) ? _1866 : (isnan(_1866) ? 0.0 : max(_1866, 0.0));
        float _1867 = isnan(1.0) ? _4621 : (isnan(_4621) ? 1.0 : min(_4621, 1.0));
        float _1868 = _1867 * 2.0;
        float _1872 = (1.0 - _1867) / (_1867 + 1.0);
        float _4632 = isnan(0.0) ? _1872 : (isnan(_1872) ? 0.0 : max(_1872, 0.0));
        float _1873 = isnan(1.0) ? _4632 : (isnan(_4632) ? 1.0 : min(_4632, 1.0));
        float _1882 = ((((1.0 - _1873) * (_1868 + 2.0)) * exp2(log2(isnan(1.0) ? _4610 : (isnan(_4610) ? 1.0 : min(_4610, 1.0))) * (_1868 + 1.0))) + _1873) * _1756;
        _1890 = _1723;
        _1891 = _1722;
        _1892 = _1721;
        _1893 = _1733;
        _1894 = _1732;
        _1895 = _1731;
        _1896 = _1743;
        _1897 = _1742;
        _1898 = _1741;
        _1899 = _1756;
        _1900 = _1755;
        _1901 = _1754;
        _1902 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0)));
        _1903 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1840 : (isnan(_1840) ? 0.0 : max(_1840, 0.0)));
        _1904 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1882 : (isnan(_1882) ? 0.0 : max(_1882, 0.0)));
    }
    else
    {
        _1890 = _1584;
        _1891 = _1584;
        _1892 = _1584;
        _1893 = _1584;
        _1894 = _1584;
        _1895 = _1584;
        _1896 = _1584;
        _1897 = _1584;
        _1898 = _1584;
        _1899 = _1584;
        _1900 = _1584;
        _1901 = _1584;
        _1902 = 0.0;
        _1903 = 0.0;
        _1904 = 0.0;
    }
    float _1914 = (cbModelParam._m0[1u].x * (_1902 - _1596)) + _1596;
    float _1915 = (cbModelParam._m0[1u].x * (_1903 - _1597)) + _1597;
    float _1916 = (cbModelParam._m0[1u].x * (_1904 - _1598)) + _1598;
    float _1937 = fma(_1916, cbSceneParam._m0[89u].z, fma(_1915, cbSceneParam._m0[89u].y, _1914 * cbSceneParam._m0[89u].x));
    float _1940 = fma(_1916, cbSceneParam._m0[90u].z, fma(_1915, cbSceneParam._m0[90u].y, _1914 * cbSceneParam._m0[90u].x));
    float _1943 = fma(_1916, cbSceneParam._m0[91u].z, fma(_1915, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1914));
    float _1958 = _1221 * 0.5;
    float _1959 = _1222 * 0.5;
    float _1960 = _1223 * 0.5;
    float _1961 = dot(vec4(_1958, _1959, _1960, 1.0), vec4(_1892, _1895, _1898, _1901));
    float _1964 = dot(vec4(_1958, _1959, _1960, 1.0), vec4(_1891, _1894, _1897, _1900));
    float _1967 = dot(vec4(_1958, _1959, _1960, 1.0), vec4(_1890, _1893, _1896, _1899));
    float _2001;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1974 = dot(vec4(_1958, _1959, _1960, 1.0), vec4(_1583, _1587, _1590, _1593));
        float _1978 = dot(vec4(_1958, _1959, _1960, 1.0), vec4(_1585, _1588, _1591, _1594));
        float _1982 = dot(vec4(_1958, _1959, _1960, 1.0), vec4(_1586, _1589, _1592, _1595));
        float _1989 = dot(vec4(cbModelParam._m0[39u]), vec4(_1958, _1959, _1960, 1.0));
        _2001 = dot(vec3(isnan(0.0) ? _1982 : (isnan(_1982) ? 0.0 : max(_1982, 0.0)), isnan(0.0) ? _1978 : (isnan(_1978) ? 0.0 : max(_1978, 0.0)), isnan(0.0) ? _1974 : (isnan(_1974) ? 0.0 : max(_1974, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1989) ? 0.0 : (isnan(0.0) ? _1989 : max(0.0, _1989))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2001 = 1.0;
    }
    float _2012;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2003 = dot(vec4(cbModelParam._m0[40u]), vec4(_1958, _1959, _1960, 1.0));
        _2012 = dot(vec3(isnan(0.0) ? _1961 : (isnan(_1961) ? 0.0 : max(_1961, 0.0)), isnan(0.0) ? _1964 : (isnan(_1964) ? 0.0 : max(_1964, 0.0)), isnan(0.0) ? _1967 : (isnan(_1967) ? 0.0 : max(_1967, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2003) ? 0.0 : (isnan(0.0) ? _2003 : max(0.0, _2003))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2012 = 1.0;
    }
    float _2016 = (_2012 * cbModelParam._m0[1u].x) + (_2001 * (1.0 - cbModelParam._m0[1u].x));
    float _2026 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1067);
    float _2027 = isnan(_2026) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2026 : min(cbModelParam._m0[25u].z, _2026));
    float _2107;
    float _2109;
    float _2111;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2074 = fma(_1282, cbModelParam._m0[13u].z, fma(_1278, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1274)) + cbModelParam._m0[13u].w;
        float _2078 = fma(_1282, cbModelParam._m0[14u].z, fma(_1278, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1274)) + cbModelParam._m0[14u].w;
        float _2082 = fma(_1282, cbModelParam._m0[15u].z, fma(_1278, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1274)) + cbModelParam._m0[15u].w;
        float _2085 = fma(_1223, cbModelParam._m0[13u].z, fma(_1222, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1221));
        float _2088 = fma(_1223, cbModelParam._m0[14u].z, fma(_1222, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1221));
        float _2091 = fma(_1223, cbModelParam._m0[15u].z, fma(_1222, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1221));
        float _2119;
        if (_2085 > 0.0)
        {
            _2119 = abs((1.0 - _2074) / _2085);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2085 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2074 + 1.0) / _2085);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2119 = frontier_phi_14_12_ladder;
        }
        float _2289;
        if (_2088 > 0.0)
        {
            _2289 = abs((1.0 - _2078) / _2088);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2088 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2078 + 1.0) / _2088);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2289 = frontier_phi_23_19_ladder;
        }
        float _2584;
        if (_2091 > 0.0)
        {
            _2584 = abs((1.0 - _2082) / _2091);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2091 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2082 + 1.0) / _2091);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2584 = frontier_phi_35_30_ladder;
        }
        float _2586 = isnan(_2289) ? _2119 : (isnan(_2119) ? _2289 : min(_2119, _2289));
        float _2587 = isnan(_2584) ? _2586 : (isnan(_2586) ? _2584 : min(_2586, _2584));
        float _2591 = (_2587 * _2085) + _2074;
        float _2592 = (_2587 * _2088) + _2078;
        float _2593 = (_2587 * _2091) + _2082;
        float _2594 = _2587 * 9.9999997473787516355514526367188e-05;
        float _2596 = (-1.0) - _2594;
        float _2598 = _2594 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2593 > _2598) || ((_2593 < _2596) || ((_2592 > _2598) || ((_2592 < _2596) || ((_2591 < _2596) || (_2591 > _2598))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2738 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2593, cbModelParam._m0[9u].z, fma(_2592, cbModelParam._m0[9u].y, _2591 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2593, cbModelParam._m0[10u].z, fma(_2592, cbModelParam._m0[10u].y, _2591 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2593, cbModelParam._m0[11u].z, fma(_2592, cbModelParam._m0[11u].y, _2591 * cbModelParam._m0[11u].x))), _2027);
            frontier_phi_13_35_ladder = _2738.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2738.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2738.x * cbModelParam._m0[1u].y;
        }
        _2107 = frontier_phi_13_35_ladder_2;
        _2109 = frontier_phi_13_35_ladder_1;
        _2111 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2095 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1221, _1222, _1223), _2027);
        _2107 = _2095.x * cbModelParam._m0[1u].y;
        _2109 = _2095.y * cbModelParam._m0[1u].y;
        _2111 = _2095.z * cbModelParam._m0[1u].y;
    }
    float _2115 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1067);
    float _2116 = isnan(_2115) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2115 : min(cbModelParam._m0[25u].w, _2115));
    float _2206;
    float _2208;
    float _2210;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2170 = fma(_1282, cbModelParam._m0[21u].z, fma(_1278, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1274)) + cbModelParam._m0[21u].w;
        float _2174 = fma(_1282, cbModelParam._m0[22u].z, fma(_1278, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1274)) + cbModelParam._m0[22u].w;
        float _2178 = fma(_1282, cbModelParam._m0[23u].z, fma(_1278, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1274)) + cbModelParam._m0[23u].w;
        float _2181 = fma(_1223, cbModelParam._m0[21u].z, fma(_1222, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1221));
        float _2184 = fma(_1223, cbModelParam._m0[22u].z, fma(_1222, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1221));
        float _2187 = fma(_1223, cbModelParam._m0[23u].z, fma(_1222, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1221));
        float _2294;
        if (_2181 > 0.0)
        {
            _2294 = abs((1.0 - _2170) / _2181);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2181 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2170 + 1.0) / _2181);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2294 = frontier_phi_25_21_ladder;
        }
        float _2611;
        if (_2184 > 0.0)
        {
            _2611 = abs((1.0 - _2174) / _2184);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2184 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2174 + 1.0) / _2184);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2611 = frontier_phi_37_32_ladder;
        }
        float _2938;
        if (_2187 > 0.0)
        {
            _2938 = abs((1.0 - _2178) / _2187);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2187 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2178 + 1.0) / _2187);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2938 = frontier_phi_47_44_ladder;
        }
        float _2940 = isnan(_2611) ? _2294 : (isnan(_2294) ? _2611 : min(_2294, _2611));
        float _2941 = isnan(_2938) ? _2940 : (isnan(_2940) ? _2938 : min(_2940, _2938));
        float _2945 = (_2941 * _2181) + _2170;
        float _2946 = (_2941 * _2184) + _2174;
        float _2947 = (_2941 * _2187) + _2178;
        float _2948 = _2941 * 9.9999997473787516355514526367188e-05;
        float _2949 = (-1.0) - _2948;
        float _2951 = _2948 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2947 > _2951) || ((_2947 < _2949) || ((_2946 > _2951) || ((_2946 < _2949) || ((_2945 < _2949) || (_2945 > _2951))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3065 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2947, cbModelParam._m0[17u].z, fma(_2946, cbModelParam._m0[17u].y, _2945 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2947, cbModelParam._m0[18u].z, fma(_2946, cbModelParam._m0[18u].y, _2945 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2947, cbModelParam._m0[19u].z, fma(_2946, cbModelParam._m0[19u].y, _2945 * cbModelParam._m0[19u].x))), _2116);
            frontier_phi_22_47_ladder = _3065.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _3065.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _3065.x * cbModelParam._m0[1u].z;
        }
        _2206 = frontier_phi_22_47_ladder_2;
        _2208 = frontier_phi_22_47_ladder_1;
        _2210 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2190 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1221, _1222, _1223), _2116);
        _2206 = _2190.x * cbModelParam._m0[1u].z;
        _2208 = _2190.y * cbModelParam._m0[1u].z;
        _2210 = _2190.z * cbModelParam._m0[1u].z;
    }
    float _2222 = ((((1.0 - _1242) * ((_1229 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1242 * _1229)) * _1213;
    float _2223 = _2222 * ((cbModelParam._m0[1u].w * (_2206 - _2107)) + _2107);
    float _2224 = _2222 * ((cbModelParam._m0[1u].w * (_2208 - _2109)) + _2109);
    float _2225 = _2222 * ((cbModelParam._m0[1u].w * (_2210 - _2111)) + _2111);
    float _2228 = fma(_2225, cbSceneParam._m0[89u].z, fma(_2224, cbSceneParam._m0[89u].y, _2223 * cbSceneParam._m0[89u].x));
    float _2231 = fma(_2225, cbSceneParam._m0[90u].z, fma(_2224, cbSceneParam._m0[90u].y, _2223 * cbSceneParam._m0[90u].x));
    float _2234 = fma(_2225, cbSceneParam._m0[91u].z, fma(_2224, cbSceneParam._m0[91u].y, _2223 * cbSceneParam._m0[91u].x));
    float _2268 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2272 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2276 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2280 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2281 = _2268 / _2280;
    float _2282 = _2272 / _2280;
    float _2283 = _2276 / _2280;
    float _2430;
    float _2431;
    float _2432;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2310 = ((uint(_2283 > cbSceneParam._m0[59u].y) + uint(_2283 > cbSceneParam._m0[59u].x)) + uint(_2283 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2311 = _2310 + 43u;
        uint _2319 = _2310 + 44u;
        uint _2327 = _2310 + 45u;
        uint _2335 = _2310 + 46u;
        float _2346 = fma(_2280, cbSceneParam._m0[_2311].w, fma(_2276, cbSceneParam._m0[_2311].z, fma(_2272, cbSceneParam._m0[_2311].y, _2268 * cbSceneParam._m0[_2311].x)));
        float _2350 = fma(_2280, cbSceneParam._m0[_2319].w, fma(_2276, cbSceneParam._m0[_2319].z, fma(_2272, cbSceneParam._m0[_2319].y, _2268 * cbSceneParam._m0[_2319].x)));
        float _2358 = fma(_2280, cbSceneParam._m0[_2335].w, fma(_2276, cbSceneParam._m0[_2335].z, fma(_2272, cbSceneParam._m0[_2335].y, _2268 * cbSceneParam._m0[_2335].x)));
        float _2363 = cbSceneParam._m0[33u].z * _2358;
        float _2365 = cbSceneParam._m0[33u].w * _2358;
        float _2368 = fma(_2280, cbSceneParam._m0[_2327].w, fma(_2276, cbSceneParam._m0[_2327].z, fma(_2272, cbSceneParam._m0[_2327].y, _2268 * cbSceneParam._m0[_2327].x))) / _2358;
        float _2416 = (cbSceneParam._m0[33u].x - sqrt(((_2282 * _2282) + (_2281 * _2281)) + (_2283 * _2283))) * cbSceneParam._m0[33u].y;
        float _4758 = isnan(0.0) ? _2416 : (isnan(_2416) ? 0.0 : max(_2416, 0.0));
        float _2423 = (isnan(1.0) ? _4758 : (isnan(_4758) ? 1.0 : min(_4758, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2363 + _2346) / _2358, (_2365 + _2350) / _2358), _2368), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2365 + _2346) / _2358, (_2350 - _2363) / _2358), _2368), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2346 - _2363) / _2358, (_2350 - _2365) / _2358), _2368), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2346 - _2365) / _2358, (_2363 + _2350) / _2358), _2368), 0.0)).x), vec4(0.25)));
        _2430 = 1.0 - (_2423 * cbSceneParam._m0[34u].x);
        _2431 = 1.0 - (_2423 * cbSceneParam._m0[34u].y);
        _2432 = 1.0 - (_2423 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2430 = 1.0;
        _2431 = 1.0;
        _2432 = 1.0;
    }
    float _2496;
    float _2498;
    float _2500;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2484 = fma(_2280, cbSceneParam._m0[63u].w, fma(_2276, cbSceneParam._m0[63u].z, fma(_2272, cbSceneParam._m0[63u].y, _2268 * cbSceneParam._m0[63u].x)));
        float _2485 = fma(_2280, cbSceneParam._m0[60u].w, fma(_2276, cbSceneParam._m0[60u].z, fma(_2272, cbSceneParam._m0[60u].y, _2268 * cbSceneParam._m0[60u].x))) / _2484;
        float _2486 = fma(_2280, cbSceneParam._m0[61u].w, fma(_2276, cbSceneParam._m0[61u].z, fma(_2272, cbSceneParam._m0[61u].y, _2268 * cbSceneParam._m0[61u].x))) / _2484;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2485 >= cbSceneParam._m0[64u].x) && (_2486 >= cbSceneParam._m0[64u].y)) && (_2485 <= cbSceneParam._m0[64u].z)) && (_2486 <= cbSceneParam._m0[64u].w))
        {
            float _2624 = fma(_2280, cbSceneParam._m0[62u].w, fma(_2276, cbSceneParam._m0[62u].z, fma(_2272, cbSceneParam._m0[62u].y, _2268 * cbSceneParam._m0[62u].x))) / _2484;
            float _2628 = isnan(cbSceneParam._m0[41u].w) ? _2624 : (isnan(_2624) ? cbSceneParam._m0[41u].w : max(_2624, cbSceneParam._m0[41u].w));
            float _2671 = (cbSceneParam._m0[33u].x - sqrt(((_2282 * _2282) + (_2281 * _2281)) + (_2283 * _2283))) * cbSceneParam._m0[33u].y;
            float _4774 = isnan(0.0) ? _2671 : (isnan(_2671) ? 0.0 : max(_2671, 0.0));
            float _2678 = (isnan(1.0) ? _4774 : (isnan(_4774) ? 1.0 : min(_4774, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2485, cbSceneParam._m0[33u].w + _2486), _2628), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2485, _2486 - cbSceneParam._m0[33u].z), _2628), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2485 - cbSceneParam._m0[33u].z, _2486 - cbSceneParam._m0[33u].w), _2628), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2485 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2486), _2628), 0.0)).x), vec4(0.25)));
            float _2682 = 1.0 - (_2678 * cbSceneParam._m0[34u].x);
            float _2683 = 1.0 - (_2678 * cbSceneParam._m0[34u].y);
            float _2684 = 1.0 - (_2678 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2684) ? _2432 : (isnan(_2432) ? _2684 : min(_2432, _2684));
            frontier_phi_34_33_ladder_1 = isnan(_2683) ? _2431 : (isnan(_2431) ? _2683 : min(_2431, _2683));
            frontier_phi_34_33_ladder_2 = isnan(_2682) ? _2430 : (isnan(_2430) ? _2682 : min(_2430, _2682));
        }
        else
        {
            frontier_phi_34_33_ladder = _2432;
            frontier_phi_34_33_ladder_1 = _2431;
            frontier_phi_34_33_ladder_2 = _2430;
        }
        _2496 = frontier_phi_34_33_ladder_2;
        _2498 = frontier_phi_34_33_ladder_1;
        _2500 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2496 = _2430;
        _2498 = _2431;
        _2500 = _2432;
    }
    uvec4 _2505 = floatBitsToUint(cbInstanceData._m0[_293 + 5u]);
    uint _2507 = _2505.x * 14u;
    uint _2508 = _2507 + 13u;
    float _2515 = _1213 + (-1.0);
    float _2520 = (cbLight._m0[_2508].x * _2515) + 1.0;
    float _2521 = (cbLight._m0[_2508].y * _2515) + 1.0;
    float _2522 = (cbLight._m0[_2508].z * _2515) + 1.0;
    float _2523 = (cbLight._m0[_2508].w * _2515) + 1.0;
    uint _2524 = _2507 + 5u;
    float _2530 = isnan(1.0) ? _2521 : (isnan(_2521) ? 1.0 : min(_2521, 1.0));
    uint _2534 = _2507 + 4u;
    float _2543 = isnan(1.0) ? _2520 : (isnan(_2520) ? 1.0 : min(_2520, 1.0));
    uint _2547 = _2507 | 1u;
    float _2558 = dot(vec3(cbLight._m0[_2507].xyz), vec3(_1064, _1065, _1066));
    float _2561 = dot(vec3(cbLight._m0[_2547].xyz), vec3(_1064, _1065, _1066));
    float _4810 = isnan(0.0) ? _2558 : (isnan(_2558) ? 0.0 : max(_2558, 0.0));
    float _4821 = isnan(0.0) ? _2561 : (isnan(_2561) ? 0.0 : max(_2561, 0.0));
    float _2566 = (isnan(1.0) ? _4810 : (isnan(_4810) ? 1.0 : min(_4810, 1.0))) * 0.3183098733425140380859375;
    float _2568 = (isnan(1.0) ? _4821 : (isnan(_4821) ? 1.0 : min(_4821, 1.0))) * 0.3183098733425140380859375;
    float _2575 = ((cbLight._m0[_2524].x * _2530) * _2568) + (((cbLight._m0[_2534].x * _2496) * _2543) * _2566);
    float _2576 = ((_2530 * cbLight._m0[_2524].y) * _2568) + (((cbLight._m0[_2534].y * _2498) * _2543) * _2566);
    float _2577 = ((_2530 * cbLight._m0[_2524].z) * _2568) + (((cbLight._m0[_2534].z * _2500) * _2543) * _2566);
    uvec4 _2581 = floatBitsToUint(cbLight._m0[_2507 + 12u]);
    bool _2583 = _2581.x == 0u;
    float _2685;
    float _2687;
    float _2689;
    if (_2583)
    {
        _2685 = _2575;
        _2687 = _2576;
        _2689 = _2577;
    }
    else
    {
        uint _2693 = _2507 + 6u;
        float _2709 = (dot(vec3(cbLight._m0[_2507 + 2u].xyz), vec3(_1064, _1065, _1066)) * 0.5) + 0.5;
        float _2710 = _2709 * _2709;
        float _4832 = isnan(0.0) ? _2710 : (isnan(_2710) ? 0.0 : max(_2710, 0.0));
        float _2711 = isnan(1.0) ? _4832 : (isnan(_4832) ? 1.0 : min(_4832, 1.0));
        float _2712 = isnan(1.0) ? _2522 : (isnan(_2522) ? 1.0 : min(_2522, 1.0));
        _2685 = (((cbLight._m0[_2693].x * 0.3183098733425140380859375) * _2711) * _2712) + _2575;
        _2687 = (((cbLight._m0[_2693].y * 0.3183098733425140380859375) * _2711) * _2712) + _2576;
        _2689 = (((cbLight._m0[_2693].z * 0.3183098733425140380859375) * _2711) * _2712) + _2577;
    }
    bool _2692 = _2581.y == 0u;
    float _2747;
    float _2749;
    float _2751;
    if (_2692)
    {
        _2747 = _2685;
        _2749 = _2687;
        _2751 = _2689;
    }
    else
    {
        uint _2909 = _2507 + 7u;
        float _2925 = (dot(vec3(cbLight._m0[_2507 + 3u].xyz), vec3(_1064, _1065, _1066)) * 0.5) + 0.5;
        float _2926 = _2925 * _2925;
        float _4848 = isnan(0.0) ? _2926 : (isnan(_2926) ? 0.0 : max(_2926, 0.0));
        float _2927 = isnan(1.0) ? _4848 : (isnan(_4848) ? 1.0 : min(_4848, 1.0));
        float _2928 = isnan(1.0) ? _2523 : (isnan(_2523) ? 1.0 : min(_2523, 1.0));
        _2747 = (((cbLight._m0[_2909].x * 0.3183098733425140380859375) * _2927) * _2928) + _2685;
        _2749 = (((cbLight._m0[_2909].y * 0.3183098733425140380859375) * _2927) * _2928) + _2687;
        _2751 = (((cbLight._m0[_2909].z * 0.3183098733425140380859375) * _2927) * _2928) + _2689;
    }
    uint _2754 = _2507 + 8u;
    float _2767 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2507].w)) * _1067) * 0.949999988079071044921875);
    float _2768 = _2767 * _2767;
    float _2769 = cbLight._m0[_2507].x + _1142;
    float _2770 = cbLight._m0[_2507].y + _1143;
    float _2771 = cbLight._m0[_2507].z + _1144;
    float _2775 = inversesqrt(dot(vec3(_2769, _2770, _2771), vec3(_2769, _2770, _2771)));
    float _2776 = _2775 * _2769;
    float _2777 = _2775 * _2770;
    float _2778 = _2775 * _2771;
    float _2779 = dot(vec3(_1064, _1065, _1066), vec3(cbLight._m0[_2507].xyz));
    float _4864 = isnan(0.0) ? _2779 : (isnan(_2779) ? 0.0 : max(_2779, 0.0));
    float _2782 = isnan(1.0) ? _4864 : (isnan(_4864) ? 1.0 : min(_4864, 1.0));
    float _4875 = isnan(0.0) ? _1214 : (isnan(_1214) ? 0.0 : max(_1214, 0.0));
    float _2783 = isnan(1.0) ? _4875 : (isnan(_4875) ? 1.0 : min(_4875, 1.0));
    float _2784 = dot(vec3(_1064, _1065, _1066), vec3(_2776, _2777, _2778));
    float _4886 = isnan(0.0) ? _2784 : (isnan(_2784) ? 0.0 : max(_2784, 0.0));
    float _2787 = isnan(1.0) ? _4886 : (isnan(_4886) ? 1.0 : min(_4886, 1.0));
    float _2788 = dot(vec3(cbLight._m0[_2507].xyz), vec3(_2776, _2777, _2778));
    float _4897 = isnan(0.0) ? _2788 : (isnan(_2788) ? 0.0 : max(_2788, 0.0));
    float _2792 = _2768 * _2768;
    float _2796 = ((_2787 * _2787) * (_2792 + (-1.0))) + 1.0;
    float _2807 = (exp2(log2(1.0 - (isnan(1.0) ? _4897 : (isnan(_4897) ? 1.0 : min(_4897, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2808 = 1.0 - _2768;
    float _2819 = (0.5 / (((_2783 * ((_2782 * _2808) + _2768)) + 9.9999999392252902907785028219223e-09) + (((_2783 * _2808) + _2768) * _2782))) * _2782;
    float _4908 = isnan(0.0) ? _2819 : (isnan(_2819) ? 0.0 : max(_2819, 0.0));
    float _2821 = (isnan(1.0) ? _4908 : (isnan(_4908) ? 1.0 : min(_4908, 1.0))) * (_2792 / ((_2796 * _2796) * 3.141590118408203125));
    uint _2835 = _2507 + 9u;
    float _2846 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2547].w)) * _1067) * 0.949999988079071044921875);
    float _2847 = _2846 * _2846;
    float _2848 = cbLight._m0[_2547].x + _1142;
    float _2849 = cbLight._m0[_2547].y + _1143;
    float _2850 = cbLight._m0[_2547].z + _1144;
    float _2854 = inversesqrt(dot(vec3(_2848, _2849, _2850), vec3(_2848, _2849, _2850)));
    float _2855 = _2854 * _2848;
    float _2856 = _2854 * _2849;
    float _2857 = _2854 * _2850;
    float _2858 = dot(vec3(_1064, _1065, _1066), vec3(cbLight._m0[_2547].xyz));
    float _4919 = isnan(0.0) ? _2858 : (isnan(_2858) ? 0.0 : max(_2858, 0.0));
    float _2861 = isnan(1.0) ? _4919 : (isnan(_4919) ? 1.0 : min(_4919, 1.0));
    float _2862 = dot(vec3(_1064, _1065, _1066), vec3(_2855, _2856, _2857));
    float _4930 = isnan(0.0) ? _2862 : (isnan(_2862) ? 0.0 : max(_2862, 0.0));
    float _2865 = isnan(1.0) ? _4930 : (isnan(_4930) ? 1.0 : min(_4930, 1.0));
    float _2866 = dot(vec3(cbLight._m0[_2547].xyz), vec3(_2855, _2856, _2857));
    float _4941 = isnan(0.0) ? _2866 : (isnan(_2866) ? 0.0 : max(_2866, 0.0));
    float _2870 = _2847 * _2847;
    float _2874 = ((_2865 * _2865) * (_2870 + (-1.0))) + 1.0;
    float _2883 = (exp2(log2(1.0 - (isnan(1.0) ? _4941 : (isnan(_4941) ? 1.0 : min(_4941, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2884 = 1.0 - _2847;
    float _2894 = (0.5 / (((_2783 * ((_2861 * _2884) + _2847)) + 9.9999999392252902907785028219223e-09) + (((_2783 * _2884) + _2847) * _2861))) * _2861;
    float _4952 = isnan(0.0) ? _2894 : (isnan(_2894) ? 0.0 : max(_2894, 0.0));
    float _2896 = (isnan(1.0) ? _4952 : (isnan(_4952) ? 1.0 : min(_4952, 1.0))) * (_2870 / ((_2874 * _2874) * 3.141590118408203125));
    float _2906 = (((_2883 * cbLight._m0[_2835].x) * _2896) * _2530) + ((((cbLight._m0[_2754].x * _2496) * _2807) * _2821) * _2543);
    float _2907 = (((_2883 * cbLight._m0[_2835].y) * _2896) * _2530) + ((((cbLight._m0[_2754].y * _2498) * _2807) * _2821) * _2543);
    float _2908 = (((_2883 * cbLight._m0[_2835].z) * _2896) * _2530) + ((((cbLight._m0[_2754].z * _2500) * _2807) * _2821) * _2543);
    float _2964;
    float _2966;
    float _2968;
    if (_2583)
    {
        _2964 = _2906;
        _2966 = _2907;
        _2968 = _2908;
    }
    else
    {
        uint _2970 = _2507 + 2u;
        uint _2974 = _2507 + 10u;
        float _2988 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2970].w)) * _1067) * 0.949999988079071044921875);
        float _2989 = _2988 * _2988;
        float _2990 = cbLight._m0[_2970].x + _1142;
        float _2991 = cbLight._m0[_2970].y + _1143;
        float _2992 = cbLight._m0[_2970].z + _1144;
        float _2996 = inversesqrt(dot(vec3(_2990, _2991, _2992), vec3(_2990, _2991, _2992)));
        float _2997 = _2996 * _2990;
        float _2998 = _2996 * _2991;
        float _2999 = _2996 * _2992;
        float _3000 = dot(vec3(_1064, _1065, _1066), vec3(cbLight._m0[_2970].xyz));
        float _4963 = isnan(0.0) ? _3000 : (isnan(_3000) ? 0.0 : max(_3000, 0.0));
        float _3003 = isnan(1.0) ? _4963 : (isnan(_4963) ? 1.0 : min(_4963, 1.0));
        float _3004 = dot(vec3(_1064, _1065, _1066), vec3(_2997, _2998, _2999));
        float _4974 = isnan(0.0) ? _3004 : (isnan(_3004) ? 0.0 : max(_3004, 0.0));
        float _3007 = isnan(1.0) ? _4974 : (isnan(_4974) ? 1.0 : min(_4974, 1.0));
        float _3008 = dot(vec3(cbLight._m0[_2970].xyz), vec3(_2997, _2998, _2999));
        float _4985 = isnan(0.0) ? _3008 : (isnan(_3008) ? 0.0 : max(_3008, 0.0));
        float _3012 = _2989 * _2989;
        float _3016 = ((_3007 * _3007) * (_3012 + (-1.0))) + 1.0;
        float _3025 = (exp2(log2(1.0 - (isnan(1.0) ? _4985 : (isnan(_4985) ? 1.0 : min(_4985, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3026 = 1.0 - _2989;
        float _3036 = (0.5 / (((_2783 * ((_3003 * _3026) + _2989)) + 9.9999999392252902907785028219223e-09) + (((_2783 * _3026) + _2989) * _3003))) * _3003;
        float _4996 = isnan(0.0) ? _3036 : (isnan(_3036) ? 0.0 : max(_3036, 0.0));
        float _3038 = (isnan(1.0) ? _4996 : (isnan(_4996) ? 1.0 : min(_4996, 1.0))) * (_3012 / ((_3016 * _3016) * 3.141590118408203125));
        float _3039 = isnan(1.0) ? _2522 : (isnan(_2522) ? 1.0 : min(_2522, 1.0));
        _2964 = (((_3025 * cbLight._m0[_2974].x) * _3038) * _3039) + _2906;
        _2966 = (((_3025 * cbLight._m0[_2974].y) * _3038) * _3039) + _2907;
        _2968 = (((_3025 * cbLight._m0[_2974].z) * _3038) * _3039) + _2908;
    }
    float _3070;
    float _3072;
    float _3074;
    if (_2692)
    {
        _3070 = _2964;
        _3072 = _2966;
        _3074 = _2968;
    }
    else
    {
        uint _3081 = _2507 + 3u;
        uint _3085 = _2507 + 11u;
        float _3099 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3081].w)) * _1067) * 0.949999988079071044921875);
        float _3100 = _3099 * _3099;
        float _3101 = cbLight._m0[_3081].x + _1142;
        float _3102 = cbLight._m0[_3081].y + _1143;
        float _3103 = cbLight._m0[_3081].z + _1144;
        float _3107 = inversesqrt(dot(vec3(_3101, _3102, _3103), vec3(_3101, _3102, _3103)));
        float _3108 = _3107 * _3101;
        float _3109 = _3107 * _3102;
        float _3110 = _3107 * _3103;
        float _3111 = dot(vec3(_1064, _1065, _1066), vec3(cbLight._m0[_3081].xyz));
        float _5012 = isnan(0.0) ? _3111 : (isnan(_3111) ? 0.0 : max(_3111, 0.0));
        float _3114 = isnan(1.0) ? _5012 : (isnan(_5012) ? 1.0 : min(_5012, 1.0));
        float _3115 = dot(vec3(_1064, _1065, _1066), vec3(_3108, _3109, _3110));
        float _5023 = isnan(0.0) ? _3115 : (isnan(_3115) ? 0.0 : max(_3115, 0.0));
        float _3118 = isnan(1.0) ? _5023 : (isnan(_5023) ? 1.0 : min(_5023, 1.0));
        float _3119 = dot(vec3(cbLight._m0[_3081].xyz), vec3(_3108, _3109, _3110));
        float _5034 = isnan(0.0) ? _3119 : (isnan(_3119) ? 0.0 : max(_3119, 0.0));
        float _3123 = _3100 * _3100;
        float _3127 = ((_3118 * _3118) * (_3123 + (-1.0))) + 1.0;
        float _3136 = (exp2(log2(1.0 - (isnan(1.0) ? _5034 : (isnan(_5034) ? 1.0 : min(_5034, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3137 = 1.0 - _3100;
        float _3147 = (0.5 / (((_2783 * ((_3114 * _3137) + _3100)) + 9.9999999392252902907785028219223e-09) + (((_2783 * _3137) + _3100) * _3114))) * _3114;
        float _5045 = isnan(0.0) ? _3147 : (isnan(_3147) ? 0.0 : max(_3147, 0.0));
        float _3149 = (isnan(1.0) ? _5045 : (isnan(_5045) ? 1.0 : min(_5045, 1.0))) * (_3123 / ((_3127 * _3127) * 3.141590118408203125));
        float _3150 = isnan(1.0) ? _2523 : (isnan(_2523) ? 1.0 : min(_2523, 1.0));
        _3070 = (((_3136 * cbLight._m0[_3085].x) * _3149) * _3150) + _2964;
        _3072 = (((_3136 * cbLight._m0[_3085].y) * _3149) * _3150) + _2966;
        _3074 = (((_3136 * cbLight._m0[_3085].z) * _3149) * _3150) + _2968;
    }
    float _3216;
    float _3218;
    float _3220;
    float _3222;
    float _3224;
    float _3226;
    if (_2505.y == 0u)
    {
        uvec4 _3171 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3172 = _3171.x;
        uint _3183 = uint((float(_3171.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1151) / _3172))) + floor(float(uint(cbSceneParam._m0[85u].x * _1150) / _3172)));
        float _3193 = (log2(_2283 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3194 = isnan(0.0) ? _3193 : (isnan(_3193) ? 0.0 : max(_3193, 0.0));
        uint _3197 = uint(isnan(14.0) ? _3194 : (isnan(_3194) ? 14.0 : min(_3194, 14.0)));
        uvec4 _3202 = texelFetch(g_lightClusterGridBuffer, int(((_3197 << 2u) + (_3183 << 6u)) >> 2u));
        uint _3203 = _3202.x;
        uint _3204 = _3171.z;
        float _3283;
        float _3285;
        float _3287;
        float _3289;
        float _3291;
        float _3293;
        if (((((1u << ((_3204 >> 4u) & 15u)) + 4294967295u) & _3203) == 0u) || ((_3204 & 240u) == 0u))
        {
            _3283 = 0.0;
            _3285 = 0.0;
            _3287 = 0.0;
            _3289 = 0.0;
            _3291 = 0.0;
            _3293 = 0.0;
        }
        else
        {
            float _3284;
            float _3286;
            float _3288;
            float _3290;
            float _3292;
            float _3294;
            float _3428 = 0.0;
            float _3429 = 0.0;
            float _3430 = 0.0;
            float _3431 = 0.0;
            float _3432 = 0.0;
            float _3433 = 0.0;
            uint _3434 = 0u;
            uint _3443;
            bool _3444;
            for (;;)
            {
                _3443 = texelFetch(g_lightClassification, int((((_3197 << 5u) + (_3183 << 9u)) + (_3434 << 2u)) >> 2u)).x;
                _3444 = _3443 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3444)
                {
                    frontier_phi_66_pred = _3433;
                    frontier_phi_66_pred_1 = _3432;
                    frontier_phi_66_pred_2 = _3431;
                    frontier_phi_66_pred_3 = _3430;
                    frontier_phi_66_pred_4 = _3429;
                    frontier_phi_66_pred_5 = _3428;
                }
                else
                {
                    float _3552;
                    float _3553;
                    float _3554;
                    float _3555;
                    float _3556;
                    float _3557;
                    uint _3558;
                    _3552 = _3428;
                    _3553 = _3429;
                    _3554 = _3430;
                    _3555 = _3431;
                    _3556 = _3432;
                    _3557 = _3433;
                    _3558 = _3443;
                    float _3484;
                    float _3485;
                    float _3486;
                    float _3487;
                    float _3488;
                    float _3489;
                    for (;;)
                    {
                        uint _3562 = uint(findLSB(_3558)) + (_3434 << 5u);
                        uint _3559 = (_3558 + 4294967295u) & _3558;
                        uint _3564 = _3562 * 48u;
                        vec4 _3578 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3564)).x, texelFetch(g_PointLightRenderingBuffer, int(_3564 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3564 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3564 + 3u)).x));
                        uint _3584 = (_3562 * 48u) + 4u;
                        vec4 _3597 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3584)).x, texelFetch(g_PointLightRenderingBuffer, int(_3584 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3584 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3584 + 3u)).x));
                        uint _3603 = (_3562 * 48u) + 8u;
                        vec3 _3614 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3603)).x, texelFetch(g_PointLightRenderingBuffer, int(_3603 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3603 + 2u)).x));
                        float _3618 = _3578.x - _2281;
                        float _3619 = _3578.y - _2282;
                        float _3620 = _3578.z - _2283;
                        float _3621 = dot(vec3(_3618, _3619, _3620), vec3(_3618, _3619, _3620));
                        float _3624 = inversesqrt(_3621);
                        float _3625 = _3624 * _3618;
                        float _3626 = _3624 * _3619;
                        float _3627 = _3624 * _3620;
                        float _3628 = dot(vec3(_1169, _1172, _1175), vec3(_3625, _3626, _3627));
                        float _3633 = 1.0 - (_3621 * _3578.w);
                        float _5071 = isnan(0.0) ? _3633 : (isnan(_3633) ? 0.0 : max(_3633, 0.0));
                        float _3634 = isnan(1.0) ? _5071 : (isnan(_5071) ? 1.0 : min(_5071, 1.0));
                        float _3635 = sqrt(_3621) * _3597.w;
                        float _3638 = 1.39999997615814208984375 / (_3635 + 1.39999997615814208984375);
                        float _3639 = _3638 * _3638;
                        float _3642 = ((1.0 - _3639) * _3628) + _3639;
                        float _3645 = _3635 * _3635;
                        float _3649 = ((isnan(0.0) ? _3642 : (isnan(_3642) ? 0.0 : max(_3642, 0.0))) * _3634) / ((_3645 * 0.699999988079071044921875) + 1.0);
                        float _3653 = (-0.0) - _2281;
                        float _3654 = (-0.0) - _2282;
                        float _3655 = (-0.0) - _2283;
                        float _3659 = inversesqrt(dot(vec3(_3653, _3654, _3655), vec3(_3653, _3654, _3655)));
                        float _3660 = _3659 * _3653;
                        float _3661 = _3659 * _3654;
                        float _3662 = _3659 * _3655;
                        float _3669 = exp2(log2(1.0 / ((_3645 * 3.5) + 5.0)) * 0.25);
                        float _3670 = 1.0 - _1229;
                        float _3677 = sqrt(1.0 - ((1.0 - (_3670 * _3670)) * (1.0 - (_3669 * _3669))));
                        float _3678 = _3677 * _3677;
                        float _3679 = _3678 * _3678;
                        float _3680 = _3660 + _3625;
                        float _3681 = _3661 + _3626;
                        float _3682 = _3662 + _3627;
                        float _3686 = inversesqrt(dot(vec3(_3680, _3681, _3682), vec3(_3680, _3681, _3682)));
                        float _3690 = dot(vec3(_1169, _1172, _1175), vec3(_3660, _3661, _3662));
                        float _5087 = isnan(0.0) ? _3690 : (isnan(_3690) ? 0.0 : max(_3690, 0.0));
                        float _3693 = isnan(1.0) ? _5087 : (isnan(_5087) ? 1.0 : min(_5087, 1.0));
                        float _3694 = dot(vec3(_1169, _1172, _1175), vec3(_3686 * _3680, _3686 * _3681, _3686 * _3682));
                        float _5098 = isnan(0.0) ? _3694 : (isnan(_3694) ? 0.0 : max(_3694, 0.0));
                        float _3697 = isnan(1.0) ? _5098 : (isnan(_5098) ? 1.0 : min(_5098, 1.0));
                        float _3701 = ((_3697 * _3697) * (_3679 + (-1.0))) + 1.0;
                        float _3702 = _3638 * _3678;
                        float _3703 = _3702 * _3702;
                        float _3706 = ((1.0 - _3703) * _3628) + _3703;
                        float _5109 = isnan(0.0) ? _3706 : (isnan(_3706) ? 0.0 : max(_3706, 0.0));
                        float _3707 = isnan(1.0) ? _5109 : (isnan(_5109) ? 1.0 : min(_5109, 1.0));
                        float _3708 = 1.0 - _3678;
                        float _3718 = (0.5 / (((_3707 * ((_3693 * _3708) + _3678)) + 9.9999999392252902907785028219223e-09) + (((_3707 * _3708) + _3678) * _3693))) * _3707;
                        float _5120 = isnan(0.0) ? _3718 : (isnan(_3718) ? 0.0 : max(_3718, 0.0));
                        float _3729 = (((_3679 * 3.1415927410125732421875) * (isnan(1.0) ? _5120 : (isnan(_5120) ? 1.0 : min(_5120, 1.0)))) / ((_3701 * _3701) * ((_3645 * 2.1991131305694580078125) + 3.141590118408203125))) * _3634;
                        _3487 = (_3649 * _3597.x) + _3555;
                        _3488 = (_3649 * _3597.y) + _3556;
                        _3489 = (_3649 * _3597.z) + _3557;
                        _3484 = (_3729 * _3614.x) + _3552;
                        _3485 = (_3729 * _3614.y) + _3553;
                        _3486 = (_3729 * _3614.z) + _3554;
                        if (_3559 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3552 = _3484;
                            _3553 = _3485;
                            _3554 = _3486;
                            _3555 = _3487;
                            _3556 = _3488;
                            _3557 = _3489;
                            _3558 = _3559;
                        }
                    }
                    frontier_phi_66_pred = _3489;
                    frontier_phi_66_pred_1 = _3488;
                    frontier_phi_66_pred_2 = _3487;
                    frontier_phi_66_pred_3 = _3486;
                    frontier_phi_66_pred_4 = _3485;
                    frontier_phi_66_pred_5 = _3484;
                }
                _3294 = frontier_phi_66_pred;
                _3292 = frontier_phi_66_pred_1;
                _3290 = frontier_phi_66_pred_2;
                _3288 = frontier_phi_66_pred_3;
                _3286 = frontier_phi_66_pred_4;
                _3284 = frontier_phi_66_pred_5;
                uint _3435 = _3434 + 1u;
                if (_3435 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3428 = _3284;
                    _3429 = _3286;
                    _3430 = _3288;
                    _3431 = _3290;
                    _3432 = _3292;
                    _3433 = _3294;
                    _3434 = _3435;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3283 = _3284;
            _3285 = _3286;
            _3287 = _3288;
            _3289 = _3290;
            _3291 = _3292;
            _3293 = _3294;
        }
        uvec4 _3297 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3298 = _3297.z;
        uint _3300 = (_3298 >> 8u) & 15u;
        float _3396;
        float _3398;
        float _3400;
        float _3402;
        float _3404;
        float _3406;
        if (((4294967295u << _3300) & _3203) == 0u)
        {
            _3396 = _3283;
            _3398 = _3285;
            _3400 = _3287;
            _3402 = _3289;
            _3404 = _3291;
            _3406 = _3293;
        }
        else
        {
            float _3421 = inversesqrt(dot(vec3(_2281, _2282, _2283), vec3(_2281, _2282, _2283)));
            float _3422 = _3421 * _2281;
            float _3423 = _3421 * _2282;
            float _3424 = _3421 * _2283;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3300 < ((_3298 >> 12u) & 15u))
            {
                float _3397;
                float _3399;
                float _3401;
                float _3403;
                float _3405;
                float _3407;
                float _3535 = _3283;
                float _3536 = _3285;
                float _3537 = _3287;
                float _3538 = _3289;
                float _3539 = _3291;
                float _3540 = _3293;
                uint _3541 = _3300;
                uint _3550;
                bool _3551;
                for (;;)
                {
                    _3550 = texelFetch(g_lightClassification, int((((_3197 << 5u) + (_3183 << 9u)) + (_3541 << 2u)) >> 2u)).x;
                    _3551 = _3550 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3551)
                    {
                        frontier_phi_72_pred = _3540;
                        frontier_phi_72_pred_1 = _3539;
                        frontier_phi_72_pred_2 = _3538;
                        frontier_phi_72_pred_3 = _3537;
                        frontier_phi_72_pred_4 = _3536;
                        frontier_phi_72_pred_5 = _3535;
                    }
                    else
                    {
                        float _3734;
                        float _3735;
                        float _3736;
                        float _3737;
                        float _3738;
                        float _3739;
                        float _4027;
                        float _4028;
                        float _4029;
                        float _4030;
                        float _4031;
                        float _4032;
                        float _3747 = _3535;
                        float _3748 = _3536;
                        float _3749 = _3537;
                        float _3750 = _3538;
                        float _3751 = _3539;
                        float _3752 = _3540;
                        uint _3753 = _3550;
                        uint _3754;
                        vec4 _3779;
                        float _3780;
                        vec4 _3795;
                        vec3 _3807;
                        vec4 _3822;
                        vec4 _3837;
                        float _3883;
                        bool _3884;
                        for (;;)
                        {
                            uint _3764 = ((_3541 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3753));
                            _3754 = (_3753 + 4294967295u) & _3753;
                            uint _3766 = _3764 * 40u;
                            _3779 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3766)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3766 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3766 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3766 + 3u)).x));
                            _3780 = _3779.w;
                            uint _3782 = (_3764 * 40u) + 4u;
                            _3795 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3782)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3782 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3782 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3782 + 3u)).x));
                            uint _3797 = (_3764 * 40u) + 8u;
                            _3807 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3797)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3797 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3797 + 2u)).x));
                            uint _3809 = (_3764 * 40u) + 16u;
                            _3822 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3809)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3809 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3809 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3809 + 3u)).x));
                            uint _3824 = (_3764 * 40u) + 20u;
                            _3837 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3824)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3824 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3824 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3824 + 3u)).x));
                            uint _3839 = (_3764 * 40u) + 24u;
                            vec4 _3852 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3839)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3839 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3839 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3839 + 3u)).x));
                            uint _3858 = (_3764 * 40u) + 28u;
                            vec4 _3871 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3858)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3858 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3858 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3858 + 3u)).x));
                            _3883 = fma(_2283, _3871.z, fma(_2282, _3871.y, _3871.x * _2281)) + _3871.w;
                            _3884 = !((fma(_2283, _3852.z, fma(_2282, _3852.y, _3852.x * _2281)) + _3852.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3884)
                            {
                                float _3911 = _3779.x - _2281;
                                float _3912 = _3779.y - _2282;
                                float _3913 = _3779.z - _2283;
                                float _3914 = dot(vec3(_3911, _3912, _3913), vec3(_3911, _3912, _3913));
                                float _3917 = inversesqrt(_3914);
                                float _3918 = _3917 * _3911;
                                float _3919 = _3917 * _3912;
                                float _3920 = _3917 * _3913;
                                float _3924 = 1.0 - (_3914 / (_3780 * _3780));
                                float _5131 = isnan(0.0) ? _3924 : (isnan(_3924) ? 0.0 : max(_3924, 0.0));
                                float _3925 = isnan(1.0) ? _5131 : (isnan(_5131) ? 1.0 : min(_5131, 1.0));
                                float _3929 = sqrt(_3914) * _3795.w;
                                float _3931 = 1.39999997615814208984375 / (_3929 + 1.39999997615814208984375);
                                float _3932 = _3931 * _3931;
                                float _3935 = ((1.0 - _3932) * dot(vec3(_3918, _3919, _3920), vec3(_1169, _1172, _1175))) + _3932;
                                float _3938 = _3929 * _3929;
                                float _3942 = (fma(_2283, _3822.z, fma(_2282, _3822.y, _3822.x * _2281)) + _3822.w) / _3883;
                                float _3943 = (fma(_2283, _3837.z, fma(_2282, _3837.y, _3837.x * _2281)) + _3837.w) / _3883;
                                float _3947 = 1.0 - dot(vec2(_3942, _3943), vec2(_3942, _3943));
                                float _5147 = isnan(0.0) ? _3947 : (isnan(_3947) ? 0.0 : max(_3947, 0.0));
                                float _3948 = isnan(1.0) ? _5147 : (isnan(_5147) ? 1.0 : min(_5147, 1.0));
                                float _3949 = _3948 * (((isnan(0.0) ? _3935 : (isnan(_3935) ? 0.0 : max(_3935, 0.0))) * _3925) / ((_3938 * 0.699999988079071044921875) + 1.0));
                                float _3961 = exp2(log2(1.0 / ((_3938 * 3.5) + 5.0)) * 0.25);
                                float _3962 = 1.0 - _1229;
                                float _3969 = sqrt(1.0 - ((1.0 - (_3962 * _3962)) * (1.0 - (_3961 * _3961))));
                                float _3970 = _3969 * _3969;
                                float _3971 = _3970 * _3970;
                                float _3972 = _3918 - _3422;
                                float _3973 = _3919 - _3423;
                                float _3974 = _3920 - _3424;
                                float _3978 = inversesqrt(dot(vec3(_3972, _3973, _3974), vec3(_3972, _3973, _3974)));
                                float _3982 = dot(vec3(_1169, _1172, _1175), vec3((-0.0) - _3422, (-0.0) - _3423, (-0.0) - _3424));
                                float _5158 = isnan(0.0) ? _3982 : (isnan(_3982) ? 0.0 : max(_3982, 0.0));
                                float _3985 = isnan(1.0) ? _5158 : (isnan(_5158) ? 1.0 : min(_5158, 1.0));
                                float _3986 = dot(vec3(_1169, _1172, _1175), vec3(_3978 * _3972, _3978 * _3973, _3978 * _3974));
                                float _5169 = isnan(0.0) ? _3986 : (isnan(_3986) ? 0.0 : max(_3986, 0.0));
                                float _3989 = isnan(1.0) ? _5169 : (isnan(_5169) ? 1.0 : min(_5169, 1.0));
                                float _3993 = ((_3989 * _3989) * (_3971 + (-1.0))) + 1.0;
                                float _3994 = _3931 * _3970;
                                float _3995 = _3994 * _3994;
                                float _4001 = ((1.0 - _3995) * dot(vec3(_1169, _1172, _1175), vec3(_3918, _3919, _3920))) + _3995;
                                float _5180 = isnan(0.0) ? _4001 : (isnan(_4001) ? 0.0 : max(_4001, 0.0));
                                float _4002 = isnan(1.0) ? _5180 : (isnan(_5180) ? 1.0 : min(_5180, 1.0));
                                float _4003 = 1.0 - _3970;
                                float _4013 = (0.5 / (((_4002 * ((_3985 * _4003) + _3970)) + 9.9999999392252902907785028219223e-09) + (((_4002 * _4003) + _3970) * _3985))) * _4002;
                                float _5191 = isnan(0.0) ? _4013 : (isnan(_4013) ? 0.0 : max(_4013, 0.0));
                                float _4023 = (_3948 * _3925) * (((_3971 * 3.1415927410125732421875) * (isnan(1.0) ? _5191 : (isnan(_5191) ? 1.0 : min(_5191, 1.0)))) / ((_3993 * _3993) * ((_3938 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3949 * _3795.y;
                                frontier_phi_78_pred_1 = _3949 * _3795.x;
                                frontier_phi_78_pred_2 = _4023 * _3807.z;
                                frontier_phi_78_pred_3 = _4023 * _3807.y;
                                frontier_phi_78_pred_4 = _4023 * _3807.x;
                                frontier_phi_78_pred_5 = _3949 * _3795.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _4031 = frontier_phi_78_pred;
                            _4030 = frontier_phi_78_pred_1;
                            _4029 = frontier_phi_78_pred_2;
                            _4028 = frontier_phi_78_pred_3;
                            _4027 = frontier_phi_78_pred_4;
                            _4032 = frontier_phi_78_pred_5;
                            _3737 = _4030 + _3750;
                            _3738 = _4031 + _3751;
                            _3739 = _4032 + _3752;
                            _3734 = _4027 + _3747;
                            _3735 = _4028 + _3748;
                            _3736 = _4029 + _3749;
                            if (_3754 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3747 = _3734;
                                _3748 = _3735;
                                _3749 = _3736;
                                _3750 = _3737;
                                _3751 = _3738;
                                _3752 = _3739;
                                _3753 = _3754;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3739;
                        frontier_phi_72_pred_1 = _3738;
                        frontier_phi_72_pred_2 = _3737;
                        frontier_phi_72_pred_3 = _3736;
                        frontier_phi_72_pred_4 = _3735;
                        frontier_phi_72_pred_5 = _3734;
                    }
                    _3407 = frontier_phi_72_pred;
                    _3405 = frontier_phi_72_pred_1;
                    _3403 = frontier_phi_72_pred_2;
                    _3401 = frontier_phi_72_pred_3;
                    _3399 = frontier_phi_72_pred_4;
                    _3397 = frontier_phi_72_pred_5;
                    uint _3542 = _3541 + 1u;
                    if (_3542 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3535 = _3397;
                        _3536 = _3399;
                        _3537 = _3401;
                        _3538 = _3403;
                        _3539 = _3405;
                        _3540 = _3407;
                        _3541 = _3542;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3407;
                frontier_phi_60_61_ladder_1 = _3405;
                frontier_phi_60_61_ladder_2 = _3401;
                frontier_phi_60_61_ladder_3 = _3399;
                frontier_phi_60_61_ladder_4 = _3397;
                frontier_phi_60_61_ladder_5 = _3403;
            }
            else
            {
                frontier_phi_60_61_ladder = _3293;
                frontier_phi_60_61_ladder_1 = _3291;
                frontier_phi_60_61_ladder_2 = _3287;
                frontier_phi_60_61_ladder_3 = _3285;
                frontier_phi_60_61_ladder_4 = _3283;
                frontier_phi_60_61_ladder_5 = _3289;
            }
            _3396 = frontier_phi_60_61_ladder_4;
            _3398 = frontier_phi_60_61_ladder_3;
            _3400 = frontier_phi_60_61_ladder_2;
            _3402 = frontier_phi_60_61_ladder_5;
            _3404 = frontier_phi_60_61_ladder_1;
            _3406 = frontier_phi_60_61_ladder;
        }
        float _3411 = isnan(1.0) ? _1213 : (isnan(_1213) ? 1.0 : min(_1213, 1.0));
        _3216 = (_3411 * _3402) + _2747;
        _3218 = (_3411 * _3404) + _2749;
        _3220 = (_3411 * _3406) + _2751;
        _3222 = ((_3396 * 0.039999999105930328369140625) * _3411) + _3070;
        _3224 = ((_3398 * 0.039999999105930328369140625) * _3411) + _3072;
        _3226 = ((_3400 * 0.039999999105930328369140625) * _3411) + _3074;
    }
    else
    {
        _3216 = _2747;
        _3218 = _2749;
        _3220 = _2751;
        _3222 = _3070;
        _3224 = _3072;
        _3226 = _3074;
    }
    float _5207 = isnan(0.0) ? _1198 : (isnan(_1198) ? 0.0 : max(_1198, 0.0));
    float _5218 = isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0));
    float _5229 = isnan(0.0) ? _1200 : (isnan(_1200) ? 0.0 : max(_1200, 0.0));
    uint _3246 = _293 + 6u;
    float _3254 = _1150 / cbSceneParam._m0[86u].x;
    float _3255 = _1151 / cbSceneParam._m0[86u].y;
    vec4 _3269 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3254, _3255, (log2((isnan(cbSceneParam._m0[77u].w) ? _1085 : (isnan(_1085) ? cbSceneParam._m0[77u].w : min(_1085, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3271 = _3269.x;
    float _3272 = _3269.y;
    float _3273 = _3269.z;
    float _3274 = _3269.w;
    float _3346;
    float _3348;
    float _3350;
    float _3352;
    if (_1085 > cbSceneParam._m0[78u].w)
    {
        float _3308 = isnan(_1085) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1085 : min(cbSceneParam._m0[80u].w, _1085));
        float _3309 = _3308 / _1085;
        float _3320 = _3309 * _1135;
        float _3321 = _1136 * _3309;
        float _3322 = (-0.0) - _3321;
        float _3324 = _3309 * _1137;
        float _3326 = (cbSceneParam._m0[77u].w * _3322) / _3308;
        float _3327 = _3326 + cbSceneParam._m0[79u].w;
        float _3328 = cbSceneParam._m0[79u].w - _3321;
        float _3334 = sqrt(((_3320 * _3320) + (_3321 * _3321)) + (_3324 * _3324));
        float _3337 = (1.0 - (cbSceneParam._m0[77u].w / _3308)) * _3334;
        float _3342 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3344 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3497;
        if (abs((_3322 - _3326) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3497 = ((((_3327 > 0.0) ? exp2(_3342 * _3327) : (2.0 - exp2(_3344 * _3327))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3337;
        }
        else
        {
            float _3457 = 1.0 / cbSceneParam._m0[80u].x;
            float _3458 = isnan(_3328) ? _3327 : (isnan(_3327) ? _3328 : max(_3327, _3328));
            float _3459 = isnan(_3328) ? _3327 : (isnan(_3327) ? _3328 : min(_3327, _3328));
            float _3468 = isnan(0.0) ? _3458 : (isnan(_3458) ? 0.0 : min(_3458, 0.0));
            float _3469 = isnan(0.0) ? _3459 : (isnan(_3459) ? 0.0 : min(_3459, 0.0));
            _3497 = ((abs(_3334 / _3322) * cbSceneParam._m0[80u].y) * ((((_3468 - _3469) * 2.0) - ((exp2(_3342 * (isnan(0.0) ? _3458 : (isnan(_3458) ? 0.0 : max(_3458, 0.0)))) - exp2(_3342 * (isnan(0.0) ? _3459 : (isnan(_3459) ? 0.0 : max(_3459, 0.0))))) * _3457)) - ((exp2(_3344 * _3468) - exp2(_3344 * _3469)) * _3457))) + (_3337 * cbSceneParam._m0[80u].z);
        }
        vec4 _3499 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3254, _3255, 1.0), 0.0);
        float _3508 = exp2((_3497 * (-1.44269502162933349609375)) * (1.0 - _3499.w));
        float _3509 = log2(_3508);
        float _3525 = log2(_3274);
        _3346 = (exp2(_3525 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3509 * cbSceneParam._m0[78u].x)) * _3499.x) / cbSceneParam._m0[78u].x)) + _3271;
        _3348 = (exp2(_3525 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3509 * cbSceneParam._m0[78u].y)) * _3499.y) / cbSceneParam._m0[78u].y)) + _3272;
        _3350 = (exp2(_3525 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3509 * cbSceneParam._m0[78u].z)) * _3499.z) / cbSceneParam._m0[78u].z)) + _3273;
        _3352 = _3508 * _3274;
    }
    else
    {
        _3346 = _3271;
        _3348 = _3272;
        _3350 = _3273;
        _3352 = _3274;
    }
    float _3364 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3365 = _3364 == 3.0;
    float _3366 = log2(_3352);
    float _3373 = exp2(_3366 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5207 : (isnan(_5207) ? 1.0 : min(_5207, 1.0))) * (_3216 + ((isnan(0.0) ? _1937 : (isnan(_1937) ? 0.0 : max(_1937, 0.0))) * _1213))) + ((_3222 + ((isnan(0.0) ? _2228 : (isnan(_2228) ? 0.0 : max(_2228, 0.0))) * _2016)) * cbPerFrame._m0[3u].x));
    float _3374 = exp2(_3366 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5218 : (isnan(_5218) ? 1.0 : min(_5218, 1.0))) * (_3218 + ((isnan(0.0) ? _1940 : (isnan(_1940) ? 0.0 : max(_1940, 0.0))) * _1213))) + ((_3224 + ((isnan(0.0) ? _2231 : (isnan(_2231) ? 0.0 : max(_2231, 0.0))) * _2016)) * cbPerFrame._m0[3u].x));
    float _3375 = exp2(_3366 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5229 : (isnan(_5229) ? 1.0 : min(_5229, 1.0))) * (_3220 + ((isnan(0.0) ? _1943 : (isnan(_1943) ? 0.0 : max(_1943, 0.0))) * _1213))) + ((_3226 + ((isnan(0.0) ? _2234 : (isnan(_2234) ? 0.0 : max(_2234, 0.0))) * _2016)) * cbPerFrame._m0[3u].x));
    float _3384 = (_3364 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3384 * (_3365 ? _3373 : (_3373 + (cbSceneParam._m0[72u].w * _3346)));
    SV_Target.y = _3384 * (_3365 ? _3374 : (_3374 + (cbSceneParam._m0[72u].w * _3348)));
    SV_Target.z = _3384 * (_3365 ? _3375 : (_3375 + (cbSceneParam._m0[72u].w * _3350)));
    SV_Target.w = cbInstanceData._m0[_3246].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3246].w;
}


