#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 10) in vec4 TEXCOORD_3;
layout(location = 11) in vec4 TEXCOORD_4;
layout(location = 12) in vec4 TEXCOORD_5;
layout(location = 13) in vec4 TEXCOORD_6;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_7;
layout(location = 6) out vec4 TEXCOORD_5_1;
layout(location = 7) out vec4 TEXCOORD_8;
layout(location = 8) out vec4 TEXCOORD_11;
layout(location = 9) out vec4 TEXCOORD_14;
layout(location = 10) out float TEXCOORD_20;
layout(location = 10, component = 1) out float TEXCOORD_21;
layout(location = 10, component = 2) out float TEXCOORD_22;
layout(location = 11) out vec2 TEXCOORD_24;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_7.z = 0.0;
    TEXCOORD_7.w = 0.0;
    TEXCOORD_5_1.x = 0.0;
    TEXCOORD_5_1.y = 0.0;
    TEXCOORD_5_1.z = 0.0;
    TEXCOORD_5_1.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    TEXCOORD_11.w = 0.0;
    TEXCOORD_14.x = 0.0;
    TEXCOORD_14.y = 0.0;
    TEXCOORD_14.z = 0.0;
    TEXCOORD_14.w = 0.0;
    TEXCOORD_20 = 0.0;
    TEXCOORD_21 = 0.0;
    TEXCOORD_22 = 0.0;
    TEXCOORD_24.x = 0.0;
    TEXCOORD_24.y = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _267 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _269 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _270 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _279 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _280 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _281 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _291 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _292 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _293 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _303 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _305 = texelFetch(g_InstanceIndexBuffer, int(_303));
    uint _306 = _305.x;
    precise float _307 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _312 = isnan(_307) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _307 : max(0.001000000047497451305389404296875, _307));
    precise float _314 = BLENDWEIGHT.x / _312;
    precise float _315 = BLENDWEIGHT.y / _312;
    precise float _316 = BLENDWEIGHT.z / _312;
    precise float _317 = BLENDWEIGHT.w / _312;
    uint _319 = _306 * 13u;
    uvec4 _324 = floatBitsToUint(cbInstanceData._m0[_319 + 4u]);
    uint _325 = _324.x;
    uint _327 = (_325 + uint(float(BLENDINDICES.x))) * 3u;
    uint _334 = _327 + 1u;
    uint _341 = _327 + 2u;
    precise float _348 = _314 * cbObjMatrix._m0[_327].x;
    precise float _349 = _314 * cbObjMatrix._m0[_334].x;
    precise float _350 = _314 * cbObjMatrix._m0[_341].x;
    precise float _351 = _314 * cbObjMatrix._m0[_327].y;
    precise float _352 = _314 * cbObjMatrix._m0[_334].y;
    precise float _353 = _314 * cbObjMatrix._m0[_341].y;
    precise float _354 = _314 * cbObjMatrix._m0[_327].z;
    precise float _355 = _314 * cbObjMatrix._m0[_334].z;
    precise float _356 = _314 * cbObjMatrix._m0[_341].z;
    precise float _357 = _314 * cbObjMatrix._m0[_327].w;
    precise float _358 = _314 * cbObjMatrix._m0[_334].w;
    precise float _359 = _314 * cbObjMatrix._m0[_341].w;
    uint _362 = (_325 + uint(float(BLENDINDICES.y))) * 3u;
    uint _369 = _362 + 1u;
    uint _376 = _362 + 2u;
    precise float _383 = _315 * cbObjMatrix._m0[_362].x;
    precise float _384 = _315 * cbObjMatrix._m0[_369].x;
    precise float _385 = _315 * cbObjMatrix._m0[_376].x;
    precise float _386 = _315 * cbObjMatrix._m0[_362].y;
    precise float _387 = _315 * cbObjMatrix._m0[_369].y;
    precise float _388 = _315 * cbObjMatrix._m0[_376].y;
    precise float _389 = _315 * cbObjMatrix._m0[_362].z;
    precise float _390 = _315 * cbObjMatrix._m0[_369].z;
    precise float _391 = _315 * cbObjMatrix._m0[_376].z;
    precise float _392 = _315 * cbObjMatrix._m0[_362].w;
    precise float _393 = _315 * cbObjMatrix._m0[_369].w;
    precise float _394 = _315 * cbObjMatrix._m0[_376].w;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    uint _409 = (_325 + uint(float(BLENDINDICES.z))) * 3u;
    uint _416 = _409 + 1u;
    uint _423 = _409 + 2u;
    precise float _430 = _316 * cbObjMatrix._m0[_409].x;
    precise float _431 = _316 * cbObjMatrix._m0[_416].x;
    precise float _432 = _316 * cbObjMatrix._m0[_423].x;
    precise float _433 = _316 * cbObjMatrix._m0[_409].y;
    precise float _434 = _316 * cbObjMatrix._m0[_416].y;
    precise float _435 = _316 * cbObjMatrix._m0[_423].y;
    precise float _436 = _316 * cbObjMatrix._m0[_409].z;
    precise float _437 = _316 * cbObjMatrix._m0[_416].z;
    precise float _438 = _316 * cbObjMatrix._m0[_423].z;
    precise float _439 = _316 * cbObjMatrix._m0[_409].w;
    precise float _440 = _316 * cbObjMatrix._m0[_416].w;
    precise float _441 = _316 * cbObjMatrix._m0[_423].w;
    precise float _442 = _395 + _430;
    precise float _443 = _396 + _431;
    precise float _444 = _397 + _432;
    precise float _445 = _398 + _433;
    precise float _446 = _399 + _434;
    precise float _447 = _400 + _435;
    precise float _448 = _401 + _436;
    precise float _449 = _402 + _437;
    precise float _450 = _403 + _438;
    precise float _451 = _404 + _439;
    precise float _452 = _405 + _440;
    precise float _453 = _406 + _441;
    uint _456 = (_325 + uint(float(BLENDINDICES.w))) * 3u;
    uint _463 = _456 + 1u;
    uint _470 = _456 + 2u;
    precise float _477 = _317 * cbObjMatrix._m0[_456].x;
    precise float _478 = _317 * cbObjMatrix._m0[_463].x;
    precise float _479 = _317 * cbObjMatrix._m0[_470].x;
    precise float _480 = _317 * cbObjMatrix._m0[_456].y;
    precise float _481 = _317 * cbObjMatrix._m0[_463].y;
    precise float _482 = _317 * cbObjMatrix._m0[_470].y;
    precise float _483 = _317 * cbObjMatrix._m0[_456].z;
    precise float _484 = _317 * cbObjMatrix._m0[_463].z;
    precise float _485 = _317 * cbObjMatrix._m0[_470].z;
    precise float _486 = _317 * cbObjMatrix._m0[_456].w;
    precise float _487 = _317 * cbObjMatrix._m0[_463].w;
    precise float _488 = _317 * cbObjMatrix._m0[_470].w;
    precise float _489 = _442 + _477;
    precise float _490 = _443 + _478;
    precise float _491 = _444 + _479;
    precise float _492 = _445 + _480;
    precise float _493 = _446 + _481;
    precise float _494 = _447 + _482;
    precise float _495 = _448 + _483;
    precise float _496 = _449 + _484;
    precise float _497 = _450 + _485;
    precise float _498 = _451 + _486;
    precise float _499 = _452 + _487;
    precise float _500 = _453 + _488;
    precise float _501 = POSITION.x * _489;
    precise float _502 = POSITION.y * _492;
    precise float _503 = _502 + _501;
    precise float _504 = POSITION.z * _495;
    precise float _505 = _504 + _503;
    precise float _506 = 1.0 * _498;
    precise float _507 = _506 + _505;
    precise float _508 = POSITION.x * _490;
    precise float _509 = POSITION.y * _493;
    precise float _510 = _509 + _508;
    precise float _511 = POSITION.z * _496;
    precise float _512 = _511 + _510;
    precise float _513 = 1.0 * _499;
    precise float _514 = _513 + _512;
    precise float _515 = POSITION.x * _491;
    precise float _516 = POSITION.y * _494;
    precise float _517 = _516 + _515;
    precise float _518 = POSITION.z * _497;
    precise float _519 = _518 + _517;
    precise float _520 = 1.0 * _500;
    precise float _521 = _520 + _519;
    precise float _555 = _507 - cbSceneParam._m0[3u].x;
    precise float _556 = _514 - cbSceneParam._m0[3u].y;
    precise float _557 = _521 - cbSceneParam._m0[3u].z;
    precise float _585 = _555 * cbSceneParam._m0[24u].x;
    precise float _586 = _556 * cbSceneParam._m0[24u].y;
    precise float _587 = _586 + _585;
    precise float _588 = _557 * cbSceneParam._m0[24u].z;
    precise float _589 = _588 + _587;
    precise float _590 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _591 = _590 + _589;
    precise float _592 = _555 * cbSceneParam._m0[25u].x;
    precise float _593 = _556 * cbSceneParam._m0[25u].y;
    precise float _594 = _593 + _592;
    precise float _595 = _557 * cbSceneParam._m0[25u].z;
    precise float _596 = _595 + _594;
    precise float _597 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _598 = _597 + _596;
    precise float _599 = _555 * cbSceneParam._m0[26u].x;
    precise float _600 = _556 * cbSceneParam._m0[26u].y;
    precise float _601 = _600 + _599;
    precise float _602 = _557 * cbSceneParam._m0[26u].z;
    precise float _603 = _602 + _601;
    precise float _604 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _605 = _604 + _603;
    precise float _606 = _555 * cbSceneParam._m0[27u].x;
    precise float _607 = _556 * cbSceneParam._m0[27u].y;
    precise float _608 = _607 + _606;
    precise float _609 = _557 * cbSceneParam._m0[27u].z;
    precise float _610 = _609 + _608;
    precise float _611 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _612 = _611 + _610;
    gl_Position.x = _591;
    gl_Position.y = _598;
    gl_Position.z = _605;
    gl_Position.w = _612;
    POSITION_1.x = _591;
    POSITION_1.y = _598;
    POSITION_1.z = _605;
    POSITION_1.w = _612;
    NORMAL_1.x = fma(_270, _495, fma(_269, _492, _489 * _267));
    NORMAL_1.y = fma(_270, _496, fma(_269, _493, _490 * _267));
    NORMAL_1.z = fma(_270, _497, fma(_269, _494, _491 * _267));
    NORMAL_1.w = float(_306);
    TANGENT_1.x = fma(_281, _495, fma(_280, _492, _489 * _279));
    TANGENT_1.y = fma(_281, _496, fma(_280, _493, _490 * _279));
    TANGENT_1.z = fma(_281, _497, fma(_280, _494, _491 * _279));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_293, _495, fma(_292, _492, _489 * _291));
    TANGENT_2_1.y = fma(_293, _496, fma(_292, _493, _490 * _291));
    TANGENT_2_1.z = fma(_293, _497, fma(_292, _494, _491 * _291));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_7.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_7.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_7.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_7.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5_1.x = TEXCOORD_1.x;
    TEXCOORD_5_1.y = TEXCOORD_1.y;
    TEXCOORD_5_1.z = TEXCOORD_1.z;
    TEXCOORD_5_1.w = COLOR_1.x;
    TEXCOORD_8.x = TEXCOORD_2.x;
    TEXCOORD_8.y = TEXCOORD_2.y;
    TEXCOORD_8.z = TEXCOORD_2.z;
    TEXCOORD_8.w = TEXCOORD_5.x;
    TEXCOORD_11.x = TEXCOORD_3.x;
    TEXCOORD_11.y = TEXCOORD_3.y;
    TEXCOORD_11.z = TEXCOORD_3.z;
    TEXCOORD_11.w = TEXCOORD_5.y;
    TEXCOORD_14.x = TEXCOORD_4.x;
    TEXCOORD_14.y = TEXCOORD_4.y;
    TEXCOORD_14.z = TEXCOORD_4.z;
    TEXCOORD_14.w = TEXCOORD_5.z;
    TEXCOORD_20 = TEXCOORD_6.x;
    TEXCOORD_21 = TEXCOORD_6.y;
    TEXCOORD_22 = TEXCOORD_6.z;
    TEXCOORD_24.x = _605;
    TEXCOORD_24.y = _612;
    gl_ClipDistance[0u] = dot(vec4(_591, _598, _605, _612), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_591, _598, _605, _612), vec4(cbInstanceData._m0[_319 + 3u]));
}


