#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1455;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _229 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _230 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _231 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _237 = inversesqrt(dot(vec3(_229, _230, _231), vec3(_229, _230, _231)));
    float _238 = _237 * _229;
    float _239 = _237 * _230;
    float _240 = _237 * _231;
    float _244 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _245 = _244 * NORMAL.x;
    float _246 = _244 * NORMAL.y;
    float _247 = _244 * NORMAL.z;
    float _251 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _252 = _251 * TANGENT.x;
    float _253 = _251 * TANGENT.y;
    float _254 = _251 * TANGENT.z;
    float _265 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _267 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _268 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4040 = isnan(0.0) ? _265 : (isnan(_265) ? 0.0 : max(_265, 0.0));
    float _4051 = isnan(0.0) ? _267 : (isnan(_267) ? 0.0 : max(_267, 0.0));
    float _4062 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    uint _278 = uint(roundEven(NORMAL.w)) * 13u;
    uint _283 = _278 + 1u;
    uint _287 = _278 + 2u;
    float _296 = sqrt(((cbInstanceData._m0[_283].x * cbInstanceData._m0[_283].x) + (cbInstanceData._m0[_278].x * cbInstanceData._m0[_278].x)) + (cbInstanceData._m0[_287].x * cbInstanceData._m0[_287].x));
    float _297 = _296 * TEXCOORD.z;
    float _298 = _296 * TEXCOORD.w;
    vec4 _311 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _297) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _298) + cbTextureTilingScale._m0[13u].w));
    vec4 _335 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _340 = _335.x * cbMtdParam._m0[11u].x;
    float _341 = _335.y * cbMtdParam._m0[11u].y;
    float _342 = _335.z * cbMtdParam._m0[11u].z;
    vec4 _361 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _297) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _298) + cbTextureTilingScale._m0[5u].w));
    vec4 _380 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _418 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _420 = _418.x;
    float _432 = dot(vec4(_420, _418.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _449 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _380.x) * 2.0) - ((((_420 - _432) * cbMtdParam._m0[24u].z) + _432) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4073 = isnan(0.0) ? _449 : (isnan(_449) ? 0.0 : max(_449, 0.0));
    float _450 = isnan(1.0) ? _4073 : (isnan(_4073) ? 1.0 : min(_4073, 1.0));
    float _457 = (_450 * ((_361.x * cbMtdParam._m0[12u].x) - _340)) + _340;
    float _458 = (_450 * ((_361.y * cbMtdParam._m0[12u].y) - _341)) + _341;
    float _459 = (_450 * ((_361.z * cbMtdParam._m0[12u].z) - _342)) + _342;
    vec4 _476 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _297) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _298) + cbTextureTilingScale._m0[3u].w));
    vec4 _496 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _498 = _496.x;
    float _508 = dot(vec4(_498, _496.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _522 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _380.y) * 2.0) - ((((_498 - _508) * cbMtdParam._m0[24u].z) + _508) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4084 = isnan(0.0) ? _522 : (isnan(_522) ? 0.0 : max(_522, 0.0));
    float _523 = isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0));
    float _530 = (_523 * ((_476.x * cbMtdParam._m0[13u].x) - _457)) + _457;
    float _531 = (_523 * ((_476.y * cbMtdParam._m0[13u].y) - _458)) + _458;
    float _532 = (_523 * ((_476.z * cbMtdParam._m0[13u].z) - _459)) + _459;
    vec4 _550 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _297) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _298) + cbTextureTilingScale._m0[24u].w));
    vec4 _567 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _569 = _567.x;
    float _579 = dot(vec4(_569, _567.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _591 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _380.z) * 2.0) - ((((_569 - _579) * cbMtdParam._m0[24u].z) + _579) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4095 = isnan(0.0) ? _591 : (isnan(_591) ? 0.0 : max(_591, 0.0));
    float _592 = isnan(1.0) ? _4095 : (isnan(_4095) ? 1.0 : min(_4095, 1.0));
    float _599 = (_592 * ((_550.x * cbMtdParam._m0[14u].x) - _530)) + _530;
    float _600 = (_592 * ((_550.y * cbMtdParam._m0[14u].y) - _531)) + _531;
    float _601 = (_592 * ((_550.z * cbMtdParam._m0[14u].z) - _532)) + _532;
    float _605 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _311.x) * _599;
    float _608 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _311.y) * _600;
    float _611 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _311.z) * _601;
    float _618 = ((_599 - _605) * (isnan(1.0) ? _4040 : (isnan(_4040) ? 1.0 : min(_4040, 1.0)))) + _605;
    float _619 = ((_600 - _608) * (isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0)))) + _608;
    float _620 = ((_601 - _611) * (isnan(1.0) ? _4062 : (isnan(_4062) ? 1.0 : min(_4062, 1.0)))) + _611;
    vec4 _638 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _297) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _298) + cbTextureTilingScale._m0[14u].w));
    vec4 _657 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _297) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _298) + cbTextureTilingScale._m0[20u].w));
    vec4 _682 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _297) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _298) + cbTextureTilingScale._m0[4u].w));
    vec4 _699 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _701 = _699.x;
    float _702 = _699.y;
    float _703 = _699.z;
    float _710 = ((_682.x - _701) * _450) + _701;
    float _711 = ((_682.y - _702) * _450) + _702;
    float _712 = ((_682.z - _703) * _450) + _703;
    vec4 _724 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _297) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _298) + cbTextureTilingScale._m0[2u].w));
    float _735 = ((_724.x - _710) * _523) + _710;
    float _736 = ((_724.y - _711) * _523) + _711;
    float _737 = ((_724.z - _712) * _523) + _712;
    vec4 _749 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _297) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _298) + cbTextureTilingScale._m0[23u].w));
    float _762 = ((_749.z - _737) * _592) + _737;
    float _765 = ((((_749.x - _735) * _592) + _735) * 2.0) + (-1.0);
    float _766 = ((((_749.y - _736) * _592) + _736) * 2.0) + (-1.0);
    float _767 = dot(vec2(_765, _766), vec2(_765, _766));
    float _4106 = isnan(0.0) ? _767 : (isnan(_767) ? 0.0 : max(_767, 0.0));
    float _772 = sqrt(1.0 - (isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0))));
    vec4 _790 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _802 = (_765 + ((((_657.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x)) + (((_790.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _803 = (_766 + ((((_657.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x)) + (((_790.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _806 = fma(_772, _245, fma(_803, _252, _802 * _238));
    float _809 = fma(_772, _246, fma(_803, _253, _802 * _239));
    float _812 = fma(_772, _247, fma(_803, _254, _802 * _240));
    float _816 = inversesqrt(dot(vec3(_806, _809, _812), vec3(_806, _809, _812)));
    vec4 _843 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _297) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _298) + cbTextureTilingScale._m0[11u].w));
    float _845 = _843.x;
    float _846 = 1.0 - _845;
    float _852 = (cbMtdParam._m0[19u].x + dot(vec4(_816 * _806, _816 * _809, _816 * _812, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_845 - _846) * cbMtdParam._m0[24u].w) + _846) * cbMtdParam._m0[21u].z);
    float _4117 = isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0));
    float _853 = isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0));
    float _860 = (_853 * ((_638.x * cbMtdParam._m0[18u].x) - _618)) + _618;
    float _861 = (_853 * ((_638.y * cbMtdParam._m0[18u].y) - _619)) + _619;
    float _862 = (_853 * ((_638.z * cbMtdParam._m0[18u].z) - _620)) + _620;
    float _867 = (((_657.z - _762) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _762;
    float _871 = ((_790.z - _867) * cbMtdParam._m0[19u].w) + _867;
    vec4 _884 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _297) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _298) + cbTextureTilingScale._m0[15u].w));
    float _891 = (_884.x * 2.0) + (-1.0);
    float _892 = (_884.y * 2.0) + (-1.0);
    float _893 = dot(vec2(_891, _892), vec2(_891, _892));
    float _4128 = isnan(0.0) ? _893 : (isnan(_893) ? 0.0 : max(_893, 0.0));
    float _901 = ((_884.z - _871) * _853) + _871;
    float _911 = ((sqrt(1.0 - (isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0)))) - _772) * _853) + _772;
    float _914 = (((_891 - _802) * _853) + _802) + (cbMtdParam._m0[21u].x * _802);
    float _915 = (((_892 - _803) * _853) + _803) + (cbMtdParam._m0[21u].x * _803);
    float _919 = cbMtdParam._m0[22u].x + _790.w;
    float _922 = fma(_911, _245, fma(_915, _252, _914 * _238));
    float _925 = fma(_911, _246, fma(_915, _253, _914 * _239));
    float _928 = fma(_911, _247, fma(_915, _254, _914 * _240));
    float _932 = inversesqrt(dot(vec3(_922, _925, _928), vec3(_922, _925, _928)));
    float _933 = _932 * _922;
    float _934 = _932 * _925;
    float _935 = _932 * _928;
    float _4139 = isnan(0.0) ? _901 : (isnan(_901) ? 0.0 : max(_901, 0.0));
    float _936 = isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0));
    float _4150 = isnan(0.0) ? _919 : (isnan(_919) ? 0.0 : max(_919, 0.0));
    float _4161 = isnan(0.0) ? _860 : (isnan(_860) ? 0.0 : max(_860, 0.0));
    float _4172 = isnan(0.0) ? _861 : (isnan(_861) ? 0.0 : max(_861, 0.0));
    float _4183 = isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0));
    float _954 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _996 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1006 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _996);
    float _1007 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _996);
    float _1008 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _996);
    float _1012 = inversesqrt(dot(vec3(_1006, _1007, _1008), vec3(_1006, _1007, _1008)));
    float _1013 = _1006 * _1012;
    float _1014 = _1007 * _1012;
    float _1015 = _1008 * _1012;
    float _1021 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1022 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1040 = fma(_935, cbSceneParam._m0[5u].z, fma(_934, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _933));
    float _1043 = fma(_935, cbSceneParam._m0[6u].z, fma(_934, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _933));
    float _1046 = fma(_935, cbSceneParam._m0[7u].z, fma(_934, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _933));
    uint _1060 = (_278 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1066 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0)))) * cbInstanceData._m0[_1060].x;
    float _1067 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0)))) * cbInstanceData._m0[_1060].y;
    float _1068 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0)))) * cbInstanceData._m0[_1060].z;
    float _4194 = isnan(0.0) ? _1066 : (isnan(_1066) ? 0.0 : max(_1066, 0.0));
    float _1069 = isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0));
    float _4205 = isnan(0.0) ? _1067 : (isnan(_1067) ? 0.0 : max(_1067, 0.0));
    float _1070 = isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0));
    float _4216 = isnan(0.0) ? _1068 : (isnan(_1068) ? 0.0 : max(_1068, 0.0));
    float _1071 = isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0));
    vec4 _1080 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1021, cbSceneParam._m0[86u].y * _1022));
    float _1084 = ((isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0))) * TEXCOORD_5.w) * _1080.x;
    float _1085 = dot(vec3(_933, _934, _935), vec3(_1013, _1014, _1015));
    float _1088 = _1085 * 2.0;
    float _1092 = (_1088 * _933) - _1013;
    float _1093 = (_1088 * _934) - _1014;
    float _1094 = (_1088 * _935) - _1015;
    float _1098 = abs(dot(vec3(_1013, _1014, _1015), vec3(_933, _934, _935)));
    float _4227 = isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0));
    float _1100 = sqrt(_936);
    float _1113 = exp2((_1100 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4227 : (isnan(_4227) ? 1.0 : min(_4227, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1100 * 3.0));
    float _1145 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1149 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1153 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1454;
    float _1456;
    float _1457;
    float _1458;
    float _1459;
    float _1460;
    float _1461;
    float _1462;
    float _1463;
    float _1464;
    float _1465;
    float _1466;
    float _1467;
    float _1468;
    float _1469;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1179 = fma(_1153, cbModelParam._m0[26u].z, fma(_1149, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1145));
        float _1183 = fma(_1153, cbModelParam._m0[27u].z, fma(_1149, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1145));
        float _1187 = fma(_1153, cbModelParam._m0[28u].z, fma(_1149, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1145));
        float _1212 = _1145 + _933;
        float _1213 = _1149 + _934;
        float _1214 = _1153 + _935;
        float _1224 = fma(_1214, cbModelParam._m0[26u].z, fma(_1213, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1212)) - _1179;
        float _1225 = fma(_1214, cbModelParam._m0[27u].z, fma(_1213, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1212)) - _1183;
        float _1226 = fma(_1214, cbModelParam._m0[28u].z, fma(_1213, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1212)) - _1187;
        float _1230 = inversesqrt(dot(vec3(_1224, _1225, _1226), vec3(_1224, _1225, _1226)));
        float _1243 = ((_1230 * _1224) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1179 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1244 = ((_1230 * _1225) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1183 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1245 = ((_1230 * _1226) / cbModelParam._m0[34u].z) + ((((((_1187 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1248 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1243, _1244, _1245), 0.0);
        vec4 _1255 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1243, _1244, _1245), 0.0);
        vec4 _1262 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1243, _1244, _1245), 0.0);
        vec4 _1269 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1243, _1244, _1245), 0.0);
        float _1282 = exp2((_1248.w + (-0.5)) * 20.0) * 2.0;
        float _1283 = _1282 * (_1248.x + (-0.5));
        float _1284 = _1282 * (_1248.y + (-0.5));
        float _1285 = _1282 * (_1248.z + (-0.5));
        float _1292 = exp2((_1255.w + (-0.5)) * 20.0) * 2.0;
        float _1293 = _1292 * (_1255.x + (-0.5));
        float _1294 = _1292 * (_1255.y + (-0.5));
        float _1295 = _1292 * (_1255.z + (-0.5));
        float _1302 = exp2((_1262.w + (-0.5)) * 20.0) * 2.0;
        float _1303 = _1302 * (_1262.x + (-0.5));
        float _1304 = _1302 * (_1262.y + (-0.5));
        float _1305 = _1302 * (_1262.z + (-0.5));
        float _1312 = exp2((_1269.w + (-0.5)) * 20.0) * 2.0;
        float _1313 = _1312 * (_1269.x + (-0.5));
        float _1314 = _1312 * (_1269.y + (-0.5));
        float _1315 = _1312 * (_1269.z + (-0.5));
        float _1316 = isnan(0.0) ? _1313 : (isnan(_1313) ? 0.0 : max(_1313, 0.0));
        float _1317 = isnan(0.0) ? _1314 : (isnan(_1314) ? 0.0 : max(_1314, 0.0));
        float _1318 = isnan(0.0) ? _1315 : (isnan(_1315) ? 0.0 : max(_1315, 0.0));
        float _1319 = _1283 * 0.5;
        float _1320 = _1293 * 0.5;
        float _1321 = _1303 * 0.5;
        float _1322 = dot(vec3(_1319, _1320, _1321), vec3(_1319, _1320, _1321));
        float _1327 = (_1322 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1322);
        float _1336 = (dot(vec3(_933, _934, _935), vec3(_1327 * _1319, _1327 * _1320, _1327 * _1321)) + 1.0) * 0.5;
        float _4253 = isnan(0.0) ? _1336 : (isnan(_1336) ? 0.0 : max(_1336, 0.0));
        float _1346 = sqrt(((_1320 * _1320) + (_1319 * _1319)) + (_1321 * _1321)) / (_1316 + 9.9999997473787516355514526367188e-06);
        float _4264 = isnan(0.0) ? _1346 : (isnan(_1346) ? 0.0 : max(_1346, 0.0));
        float _1347 = isnan(1.0) ? _4264 : (isnan(_4264) ? 1.0 : min(_4264, 1.0));
        float _1348 = _1347 * 2.0;
        float _1352 = (1.0 - _1347) / (_1347 + 1.0);
        float _4275 = isnan(0.0) ? _1352 : (isnan(_1352) ? 0.0 : max(_1352, 0.0));
        float _1353 = isnan(1.0) ? _4275 : (isnan(_4275) ? 1.0 : min(_4275, 1.0));
        float _1362 = ((((1.0 - _1353) * (_1348 + 2.0)) * exp2(log2(isnan(1.0) ? _4253 : (isnan(_4253) ? 1.0 : min(_4253, 1.0))) * (_1348 + 1.0))) + _1353) * _1316;
        float _1363 = _1284 * 0.5;
        float _1364 = _1294 * 0.5;
        float _1365 = _1304 * 0.5;
        float _1366 = dot(vec3(_1363, _1364, _1365), vec3(_1363, _1364, _1365));
        float _1371 = (_1366 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1366);
        float _1379 = (dot(vec3(_933, _934, _935), vec3(_1371 * _1363, _1371 * _1364, _1371 * _1365)) + 1.0) * 0.5;
        float _4286 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1388 = sqrt(((_1364 * _1364) + (_1363 * _1363)) + (_1365 * _1365)) / (_1317 + 9.9999997473787516355514526367188e-06);
        float _4297 = isnan(0.0) ? _1388 : (isnan(_1388) ? 0.0 : max(_1388, 0.0));
        float _1389 = isnan(1.0) ? _4297 : (isnan(_4297) ? 1.0 : min(_4297, 1.0));
        float _1390 = _1389 * 2.0;
        float _1394 = (1.0 - _1389) / (_1389 + 1.0);
        float _4308 = isnan(0.0) ? _1394 : (isnan(_1394) ? 0.0 : max(_1394, 0.0));
        float _1395 = isnan(1.0) ? _4308 : (isnan(_4308) ? 1.0 : min(_4308, 1.0));
        float _1404 = ((((1.0 - _1395) * (_1390 + 2.0)) * exp2(log2(isnan(1.0) ? _4286 : (isnan(_4286) ? 1.0 : min(_4286, 1.0))) * (_1390 + 1.0))) + _1395) * _1317;
        float _1405 = _1285 * 0.5;
        float _1406 = _1295 * 0.5;
        float _1407 = _1305 * 0.5;
        float _1408 = dot(vec3(_1405, _1406, _1407), vec3(_1405, _1406, _1407));
        float _1413 = (_1408 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1408);
        float _1421 = (dot(vec3(_933, _934, _935), vec3(_1413 * _1405, _1413 * _1406, _1413 * _1407)) + 1.0) * 0.5;
        float _4319 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
        float _1430 = sqrt(((_1406 * _1406) + (_1405 * _1405)) + (_1407 * _1407)) / (_1318 + 9.9999997473787516355514526367188e-06);
        float _4330 = isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0));
        float _1431 = isnan(1.0) ? _4330 : (isnan(_4330) ? 1.0 : min(_4330, 1.0));
        float _1432 = _1431 * 2.0;
        float _1436 = (1.0 - _1431) / (_1431 + 1.0);
        float _4341 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
        float _1437 = isnan(1.0) ? _4341 : (isnan(_4341) ? 1.0 : min(_4341, 1.0));
        float _1446 = ((((1.0 - _1437) * (_1432 + 2.0)) * exp2(log2(isnan(1.0) ? _4319 : (isnan(_4319) ? 1.0 : min(_4319, 1.0))) * (_1432 + 1.0))) + _1437) * _1318;
        _1454 = _1285;
        _1456 = _1284;
        _1457 = _1283;
        _1458 = _1295;
        _1459 = _1294;
        _1460 = _1293;
        _1461 = _1305;
        _1462 = _1304;
        _1463 = _1303;
        _1464 = _1318;
        _1465 = _1317;
        _1466 = _1316;
        _1467 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1362 : (isnan(_1362) ? 0.0 : max(_1362, 0.0)));
        _1468 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0)));
        _1469 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0)));
    }
    else
    {
        _1454 = _1455;
        _1456 = _1455;
        _1457 = _1455;
        _1458 = _1455;
        _1459 = _1455;
        _1460 = _1455;
        _1461 = _1455;
        _1462 = _1455;
        _1463 = _1455;
        _1464 = _1455;
        _1465 = _1455;
        _1466 = _1455;
        _1467 = 0.0;
        _1468 = 0.0;
        _1469 = 0.0;
    }
    float _1761;
    float _1762;
    float _1763;
    float _1764;
    float _1765;
    float _1766;
    float _1767;
    float _1768;
    float _1769;
    float _1770;
    float _1771;
    float _1772;
    float _1773;
    float _1774;
    float _1775;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1492 = fma(_1153, cbModelParam._m0[30u].z, fma(_1149, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1145));
        float _1496 = fma(_1153, cbModelParam._m0[31u].z, fma(_1149, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1145));
        float _1500 = fma(_1153, cbModelParam._m0[32u].z, fma(_1149, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1145));
        float _1523 = _1145 + _933;
        float _1524 = _1149 + _934;
        float _1525 = _1153 + _935;
        float _1535 = fma(_1525, cbModelParam._m0[30u].z, fma(_1524, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1523)) - _1492;
        float _1536 = fma(_1525, cbModelParam._m0[31u].z, fma(_1524, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1523)) - _1496;
        float _1537 = fma(_1525, cbModelParam._m0[32u].z, fma(_1524, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1523)) - _1500;
        float _1541 = inversesqrt(dot(vec3(_1535, _1536, _1537), vec3(_1535, _1536, _1537)));
        float _1554 = ((_1541 * _1535) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1492 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1555 = ((_1541 * _1536) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1496 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1556 = ((_1541 * _1537) / cbModelParam._m0[35u].z) + ((((((_1500 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1558 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1554, _1555, _1556), 0.0);
        vec4 _1565 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1554, _1555, _1556), 0.0);
        vec4 _1572 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1554, _1555, _1556), 0.0);
        vec4 _1579 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1554, _1555, _1556), 0.0);
        float _1591 = exp2((_1558.w + (-0.5)) * 20.0) * 2.0;
        float _1592 = _1591 * (_1558.x + (-0.5));
        float _1593 = _1591 * (_1558.y + (-0.5));
        float _1594 = _1591 * (_1558.z + (-0.5));
        float _1601 = exp2((_1565.w + (-0.5)) * 20.0) * 2.0;
        float _1602 = _1601 * (_1565.x + (-0.5));
        float _1603 = _1601 * (_1565.y + (-0.5));
        float _1604 = _1601 * (_1565.z + (-0.5));
        float _1611 = exp2((_1572.w + (-0.5)) * 20.0) * 2.0;
        float _1612 = _1611 * (_1572.x + (-0.5));
        float _1613 = _1611 * (_1572.y + (-0.5));
        float _1614 = _1611 * (_1572.z + (-0.5));
        float _1621 = exp2((_1579.w + (-0.5)) * 20.0) * 2.0;
        float _1622 = _1621 * (_1579.x + (-0.5));
        float _1623 = _1621 * (_1579.y + (-0.5));
        float _1624 = _1621 * (_1579.z + (-0.5));
        float _1625 = isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0));
        float _1626 = isnan(0.0) ? _1623 : (isnan(_1623) ? 0.0 : max(_1623, 0.0));
        float _1627 = isnan(0.0) ? _1624 : (isnan(_1624) ? 0.0 : max(_1624, 0.0));
        float _1628 = _1592 * 0.5;
        float _1629 = _1602 * 0.5;
        float _1630 = _1612 * 0.5;
        float _1631 = dot(vec3(_1628, _1629, _1630), vec3(_1628, _1629, _1630));
        float _1636 = (_1631 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1631);
        float _1644 = (dot(vec3(_933, _934, _935), vec3(_1636 * _1628, _1636 * _1629, _1636 * _1630)) + 1.0) * 0.5;
        float _4382 = isnan(0.0) ? _1644 : (isnan(_1644) ? 0.0 : max(_1644, 0.0));
        float _1653 = sqrt(((_1629 * _1629) + (_1628 * _1628)) + (_1630 * _1630)) / (_1625 + 9.9999997473787516355514526367188e-06);
        float _4393 = isnan(0.0) ? _1653 : (isnan(_1653) ? 0.0 : max(_1653, 0.0));
        float _1654 = isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0));
        float _1655 = _1654 * 2.0;
        float _1659 = (1.0 - _1654) / (_1654 + 1.0);
        float _4404 = isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0));
        float _1660 = isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0));
        float _1669 = ((((1.0 - _1660) * (_1655 + 2.0)) * exp2(log2(isnan(1.0) ? _4382 : (isnan(_4382) ? 1.0 : min(_4382, 1.0))) * (_1655 + 1.0))) + _1660) * _1625;
        float _1670 = _1593 * 0.5;
        float _1671 = _1603 * 0.5;
        float _1672 = _1613 * 0.5;
        float _1673 = dot(vec3(_1670, _1671, _1672), vec3(_1670, _1671, _1672));
        float _1678 = (_1673 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1673);
        float _1686 = (dot(vec3(_933, _934, _935), vec3(_1678 * _1670, _1678 * _1671, _1678 * _1672)) + 1.0) * 0.5;
        float _4415 = isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0));
        float _1695 = sqrt(((_1671 * _1671) + (_1670 * _1670)) + (_1672 * _1672)) / (_1626 + 9.9999997473787516355514526367188e-06);
        float _4426 = isnan(0.0) ? _1695 : (isnan(_1695) ? 0.0 : max(_1695, 0.0));
        float _1696 = isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0));
        float _1697 = _1696 * 2.0;
        float _1701 = (1.0 - _1696) / (_1696 + 1.0);
        float _4437 = isnan(0.0) ? _1701 : (isnan(_1701) ? 0.0 : max(_1701, 0.0));
        float _1702 = isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0));
        float _1711 = ((((1.0 - _1702) * (_1697 + 2.0)) * exp2(log2(isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0))) * (_1697 + 1.0))) + _1702) * _1626;
        float _1712 = _1594 * 0.5;
        float _1713 = _1604 * 0.5;
        float _1714 = _1614 * 0.5;
        float _1715 = dot(vec3(_1712, _1713, _1714), vec3(_1712, _1713, _1714));
        float _1720 = (_1715 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1715);
        float _1728 = (dot(vec3(_933, _934, _935), vec3(_1720 * _1712, _1720 * _1713, _1720 * _1714)) + 1.0) * 0.5;
        float _4448 = isnan(0.0) ? _1728 : (isnan(_1728) ? 0.0 : max(_1728, 0.0));
        float _1737 = sqrt(((_1713 * _1713) + (_1712 * _1712)) + (_1714 * _1714)) / (_1627 + 9.9999997473787516355514526367188e-06);
        float _4459 = isnan(0.0) ? _1737 : (isnan(_1737) ? 0.0 : max(_1737, 0.0));
        float _1738 = isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0));
        float _1739 = _1738 * 2.0;
        float _1743 = (1.0 - _1738) / (_1738 + 1.0);
        float _4470 = isnan(0.0) ? _1743 : (isnan(_1743) ? 0.0 : max(_1743, 0.0));
        float _1744 = isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0));
        float _1753 = ((((1.0 - _1744) * (_1739 + 2.0)) * exp2(log2(isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0))) * (_1739 + 1.0))) + _1744) * _1627;
        _1761 = _1594;
        _1762 = _1593;
        _1763 = _1592;
        _1764 = _1604;
        _1765 = _1603;
        _1766 = _1602;
        _1767 = _1614;
        _1768 = _1613;
        _1769 = _1612;
        _1770 = _1627;
        _1771 = _1626;
        _1772 = _1625;
        _1773 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1669 : (isnan(_1669) ? 0.0 : max(_1669, 0.0)));
        _1774 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1711 : (isnan(_1711) ? 0.0 : max(_1711, 0.0)));
        _1775 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1753 : (isnan(_1753) ? 0.0 : max(_1753, 0.0)));
    }
    else
    {
        _1761 = _1455;
        _1762 = _1455;
        _1763 = _1455;
        _1764 = _1455;
        _1765 = _1455;
        _1766 = _1455;
        _1767 = _1455;
        _1768 = _1455;
        _1769 = _1455;
        _1770 = _1455;
        _1771 = _1455;
        _1772 = _1455;
        _1773 = 0.0;
        _1774 = 0.0;
        _1775 = 0.0;
    }
    float _1785 = (cbModelParam._m0[1u].x * (_1773 - _1467)) + _1467;
    float _1786 = (cbModelParam._m0[1u].x * (_1774 - _1468)) + _1468;
    float _1787 = (cbModelParam._m0[1u].x * (_1775 - _1469)) + _1469;
    float _1808 = fma(_1787, cbSceneParam._m0[89u].z, fma(_1786, cbSceneParam._m0[89u].y, _1785 * cbSceneParam._m0[89u].x));
    float _1811 = fma(_1787, cbSceneParam._m0[90u].z, fma(_1786, cbSceneParam._m0[90u].y, _1785 * cbSceneParam._m0[90u].x));
    float _1814 = fma(_1787, cbSceneParam._m0[91u].z, fma(_1786, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1785));
    float _1829 = _1092 * 0.5;
    float _1830 = _1093 * 0.5;
    float _1831 = _1094 * 0.5;
    float _1832 = dot(vec4(_1829, _1830, _1831, 1.0), vec4(_1763, _1766, _1769, _1772));
    float _1835 = dot(vec4(_1829, _1830, _1831, 1.0), vec4(_1762, _1765, _1768, _1771));
    float _1838 = dot(vec4(_1829, _1830, _1831, 1.0), vec4(_1761, _1764, _1767, _1770));
    float _1872;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1845 = dot(vec4(_1829, _1830, _1831, 1.0), vec4(_1454, _1458, _1461, _1464));
        float _1849 = dot(vec4(_1829, _1830, _1831, 1.0), vec4(_1456, _1459, _1462, _1465));
        float _1853 = dot(vec4(_1829, _1830, _1831, 1.0), vec4(_1457, _1460, _1463, _1466));
        float _1860 = dot(vec4(cbModelParam._m0[39u]), vec4(_1829, _1830, _1831, 1.0));
        _1872 = dot(vec3(isnan(0.0) ? _1853 : (isnan(_1853) ? 0.0 : max(_1853, 0.0)), isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0)), isnan(0.0) ? _1845 : (isnan(_1845) ? 0.0 : max(_1845, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1860) ? 0.0 : (isnan(0.0) ? _1860 : max(0.0, _1860))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1872 = 1.0;
    }
    float _1883;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1874 = dot(vec4(cbModelParam._m0[40u]), vec4(_1829, _1830, _1831, 1.0));
        _1883 = dot(vec3(isnan(0.0) ? _1832 : (isnan(_1832) ? 0.0 : max(_1832, 0.0)), isnan(0.0) ? _1835 : (isnan(_1835) ? 0.0 : max(_1835, 0.0)), isnan(0.0) ? _1838 : (isnan(_1838) ? 0.0 : max(_1838, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1874) ? 0.0 : (isnan(0.0) ? _1874 : max(0.0, _1874))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1883 = 1.0;
    }
    float _1887 = (_1883 * cbModelParam._m0[1u].x) + (_1872 * (1.0 - cbModelParam._m0[1u].x));
    float _1897 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _936);
    float _1898 = isnan(_1897) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1897 : min(cbModelParam._m0[25u].z, _1897));
    float _1978;
    float _1980;
    float _1982;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1945 = fma(_1153, cbModelParam._m0[13u].z, fma(_1149, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1145)) + cbModelParam._m0[13u].w;
        float _1949 = fma(_1153, cbModelParam._m0[14u].z, fma(_1149, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1145)) + cbModelParam._m0[14u].w;
        float _1953 = fma(_1153, cbModelParam._m0[15u].z, fma(_1149, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1145)) + cbModelParam._m0[15u].w;
        float _1956 = fma(_1094, cbModelParam._m0[13u].z, fma(_1093, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1092));
        float _1959 = fma(_1094, cbModelParam._m0[14u].z, fma(_1093, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1092));
        float _1962 = fma(_1094, cbModelParam._m0[15u].z, fma(_1093, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1092));
        float _1990;
        if (_1956 > 0.0)
        {
            _1990 = abs((1.0 - _1945) / _1956);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1956 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1945 + 1.0) / _1956);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1990 = frontier_phi_14_12_ladder;
        }
        float _2159;
        if (_1959 > 0.0)
        {
            _2159 = abs((1.0 - _1949) / _1959);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1959 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1949 + 1.0) / _1959);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2159 = frontier_phi_23_19_ladder;
        }
        float _2454;
        if (_1962 > 0.0)
        {
            _2454 = abs((1.0 - _1953) / _1962);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1962 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1953 + 1.0) / _1962);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2454 = frontier_phi_35_30_ladder;
        }
        float _2456 = isnan(_2159) ? _1990 : (isnan(_1990) ? _2159 : min(_1990, _2159));
        float _2457 = isnan(_2454) ? _2456 : (isnan(_2456) ? _2454 : min(_2456, _2454));
        float _2461 = (_2457 * _1956) + _1945;
        float _2462 = (_2457 * _1959) + _1949;
        float _2463 = (_2457 * _1962) + _1953;
        float _2464 = _2457 * 9.9999997473787516355514526367188e-05;
        float _2466 = (-1.0) - _2464;
        float _2468 = _2464 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2463 > _2468) || ((_2463 < _2466) || ((_2462 > _2468) || ((_2462 < _2466) || ((_2461 < _2466) || (_2461 > _2468))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2608 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2463, cbModelParam._m0[9u].z, fma(_2462, cbModelParam._m0[9u].y, _2461 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2463, cbModelParam._m0[10u].z, fma(_2462, cbModelParam._m0[10u].y, _2461 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2463, cbModelParam._m0[11u].z, fma(_2462, cbModelParam._m0[11u].y, _2461 * cbModelParam._m0[11u].x))), _1898);
            frontier_phi_13_35_ladder = _2608.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2608.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2608.x * cbModelParam._m0[1u].y;
        }
        _1978 = frontier_phi_13_35_ladder_2;
        _1980 = frontier_phi_13_35_ladder_1;
        _1982 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1966 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1092, _1093, _1094), _1898);
        _1978 = _1966.x * cbModelParam._m0[1u].y;
        _1980 = _1966.y * cbModelParam._m0[1u].y;
        _1982 = _1966.z * cbModelParam._m0[1u].y;
    }
    float _1986 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _936);
    float _1987 = isnan(_1986) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1986 : min(cbModelParam._m0[25u].w, _1986));
    float _2076;
    float _2078;
    float _2080;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2040 = fma(_1153, cbModelParam._m0[21u].z, fma(_1149, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1145)) + cbModelParam._m0[21u].w;
        float _2044 = fma(_1153, cbModelParam._m0[22u].z, fma(_1149, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1145)) + cbModelParam._m0[22u].w;
        float _2048 = fma(_1153, cbModelParam._m0[23u].z, fma(_1149, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1145)) + cbModelParam._m0[23u].w;
        float _2051 = fma(_1094, cbModelParam._m0[21u].z, fma(_1093, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1092));
        float _2054 = fma(_1094, cbModelParam._m0[22u].z, fma(_1093, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1092));
        float _2057 = fma(_1094, cbModelParam._m0[23u].z, fma(_1093, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1092));
        float _2164;
        if (_2051 > 0.0)
        {
            _2164 = abs((1.0 - _2040) / _2051);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2051 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2040 + 1.0) / _2051);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2164 = frontier_phi_25_21_ladder;
        }
        float _2481;
        if (_2054 > 0.0)
        {
            _2481 = abs((1.0 - _2044) / _2054);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2054 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2044 + 1.0) / _2054);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2481 = frontier_phi_37_32_ladder;
        }
        float _2808;
        if (_2057 > 0.0)
        {
            _2808 = abs((1.0 - _2048) / _2057);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2057 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2048 + 1.0) / _2057);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2808 = frontier_phi_47_44_ladder;
        }
        float _2810 = isnan(_2481) ? _2164 : (isnan(_2164) ? _2481 : min(_2164, _2481));
        float _2811 = isnan(_2808) ? _2810 : (isnan(_2810) ? _2808 : min(_2810, _2808));
        float _2815 = (_2811 * _2051) + _2040;
        float _2816 = (_2811 * _2054) + _2044;
        float _2817 = (_2811 * _2057) + _2048;
        float _2818 = _2811 * 9.9999997473787516355514526367188e-05;
        float _2819 = (-1.0) - _2818;
        float _2821 = _2818 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2817 > _2821) || ((_2817 < _2819) || ((_2816 > _2821) || ((_2816 < _2819) || ((_2815 < _2819) || (_2815 > _2821))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2935 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2817, cbModelParam._m0[17u].z, fma(_2816, cbModelParam._m0[17u].y, _2815 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2817, cbModelParam._m0[18u].z, fma(_2816, cbModelParam._m0[18u].y, _2815 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2817, cbModelParam._m0[19u].z, fma(_2816, cbModelParam._m0[19u].y, _2815 * cbModelParam._m0[19u].x))), _1987);
            frontier_phi_22_47_ladder = _2935.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2935.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2935.x * cbModelParam._m0[1u].z;
        }
        _2076 = frontier_phi_22_47_ladder_2;
        _2078 = frontier_phi_22_47_ladder_1;
        _2080 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2060 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1092, _1093, _1094), _1987);
        _2076 = _2060.x * cbModelParam._m0[1u].z;
        _2078 = _2060.y * cbModelParam._m0[1u].z;
        _2080 = _2060.z * cbModelParam._m0[1u].z;
    }
    float _2092 = ((((1.0 - _1113) * ((_1100 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1113 * _1100)) * _1084;
    float _2093 = _2092 * ((cbModelParam._m0[1u].w * (_2076 - _1978)) + _1978);
    float _2094 = _2092 * ((cbModelParam._m0[1u].w * (_2078 - _1980)) + _1980);
    float _2095 = _2092 * ((cbModelParam._m0[1u].w * (_2080 - _1982)) + _1982);
    float _2098 = fma(_2095, cbSceneParam._m0[89u].z, fma(_2094, cbSceneParam._m0[89u].y, _2093 * cbSceneParam._m0[89u].x));
    float _2101 = fma(_2095, cbSceneParam._m0[90u].z, fma(_2094, cbSceneParam._m0[90u].y, _2093 * cbSceneParam._m0[90u].x));
    float _2104 = fma(_2095, cbSceneParam._m0[91u].z, fma(_2094, cbSceneParam._m0[91u].y, _2093 * cbSceneParam._m0[91u].x));
    float _2138 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2142 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2146 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2150 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2151 = _2138 / _2150;
    float _2152 = _2142 / _2150;
    float _2153 = _2146 / _2150;
    float _2300;
    float _2301;
    float _2302;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2180 = ((uint(_2153 > cbSceneParam._m0[59u].y) + uint(_2153 > cbSceneParam._m0[59u].x)) + uint(_2153 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2181 = _2180 + 43u;
        uint _2189 = _2180 + 44u;
        uint _2197 = _2180 + 45u;
        uint _2205 = _2180 + 46u;
        float _2216 = fma(_2150, cbSceneParam._m0[_2181].w, fma(_2146, cbSceneParam._m0[_2181].z, fma(_2142, cbSceneParam._m0[_2181].y, _2138 * cbSceneParam._m0[_2181].x)));
        float _2220 = fma(_2150, cbSceneParam._m0[_2189].w, fma(_2146, cbSceneParam._m0[_2189].z, fma(_2142, cbSceneParam._m0[_2189].y, _2138 * cbSceneParam._m0[_2189].x)));
        float _2228 = fma(_2150, cbSceneParam._m0[_2205].w, fma(_2146, cbSceneParam._m0[_2205].z, fma(_2142, cbSceneParam._m0[_2205].y, _2138 * cbSceneParam._m0[_2205].x)));
        float _2233 = cbSceneParam._m0[33u].z * _2228;
        float _2235 = cbSceneParam._m0[33u].w * _2228;
        float _2238 = fma(_2150, cbSceneParam._m0[_2197].w, fma(_2146, cbSceneParam._m0[_2197].z, fma(_2142, cbSceneParam._m0[_2197].y, _2138 * cbSceneParam._m0[_2197].x))) / _2228;
        float _2286 = (cbSceneParam._m0[33u].x - sqrt(((_2152 * _2152) + (_2151 * _2151)) + (_2153 * _2153))) * cbSceneParam._m0[33u].y;
        float _4596 = isnan(0.0) ? _2286 : (isnan(_2286) ? 0.0 : max(_2286, 0.0));
        float _2293 = (isnan(1.0) ? _4596 : (isnan(_4596) ? 1.0 : min(_4596, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2233 + _2216) / _2228, (_2235 + _2220) / _2228), _2238), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2235 + _2216) / _2228, (_2220 - _2233) / _2228), _2238), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2216 - _2233) / _2228, (_2220 - _2235) / _2228), _2238), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2216 - _2235) / _2228, (_2233 + _2220) / _2228), _2238), 0.0)).x), vec4(0.25)));
        _2300 = 1.0 - (_2293 * cbSceneParam._m0[34u].x);
        _2301 = 1.0 - (_2293 * cbSceneParam._m0[34u].y);
        _2302 = 1.0 - (_2293 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2300 = 1.0;
        _2301 = 1.0;
        _2302 = 1.0;
    }
    float _2366;
    float _2368;
    float _2370;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2354 = fma(_2150, cbSceneParam._m0[63u].w, fma(_2146, cbSceneParam._m0[63u].z, fma(_2142, cbSceneParam._m0[63u].y, _2138 * cbSceneParam._m0[63u].x)));
        float _2355 = fma(_2150, cbSceneParam._m0[60u].w, fma(_2146, cbSceneParam._m0[60u].z, fma(_2142, cbSceneParam._m0[60u].y, _2138 * cbSceneParam._m0[60u].x))) / _2354;
        float _2356 = fma(_2150, cbSceneParam._m0[61u].w, fma(_2146, cbSceneParam._m0[61u].z, fma(_2142, cbSceneParam._m0[61u].y, _2138 * cbSceneParam._m0[61u].x))) / _2354;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2355 >= cbSceneParam._m0[64u].x) && (_2356 >= cbSceneParam._m0[64u].y)) && (_2355 <= cbSceneParam._m0[64u].z)) && (_2356 <= cbSceneParam._m0[64u].w))
        {
            float _2494 = fma(_2150, cbSceneParam._m0[62u].w, fma(_2146, cbSceneParam._m0[62u].z, fma(_2142, cbSceneParam._m0[62u].y, _2138 * cbSceneParam._m0[62u].x))) / _2354;
            float _2498 = isnan(cbSceneParam._m0[41u].w) ? _2494 : (isnan(_2494) ? cbSceneParam._m0[41u].w : max(_2494, cbSceneParam._m0[41u].w));
            float _2541 = (cbSceneParam._m0[33u].x - sqrt(((_2152 * _2152) + (_2151 * _2151)) + (_2153 * _2153))) * cbSceneParam._m0[33u].y;
            float _4612 = isnan(0.0) ? _2541 : (isnan(_2541) ? 0.0 : max(_2541, 0.0));
            float _2548 = (isnan(1.0) ? _4612 : (isnan(_4612) ? 1.0 : min(_4612, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2355, cbSceneParam._m0[33u].w + _2356), _2498), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2355, _2356 - cbSceneParam._m0[33u].z), _2498), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2355 - cbSceneParam._m0[33u].z, _2356 - cbSceneParam._m0[33u].w), _2498), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2355 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2356), _2498), 0.0)).x), vec4(0.25)));
            float _2552 = 1.0 - (_2548 * cbSceneParam._m0[34u].x);
            float _2553 = 1.0 - (_2548 * cbSceneParam._m0[34u].y);
            float _2554 = 1.0 - (_2548 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2554) ? _2302 : (isnan(_2302) ? _2554 : min(_2302, _2554));
            frontier_phi_34_33_ladder_1 = isnan(_2553) ? _2301 : (isnan(_2301) ? _2553 : min(_2301, _2553));
            frontier_phi_34_33_ladder_2 = isnan(_2552) ? _2300 : (isnan(_2300) ? _2552 : min(_2300, _2552));
        }
        else
        {
            frontier_phi_34_33_ladder = _2302;
            frontier_phi_34_33_ladder_1 = _2301;
            frontier_phi_34_33_ladder_2 = _2300;
        }
        _2366 = frontier_phi_34_33_ladder_2;
        _2368 = frontier_phi_34_33_ladder_1;
        _2370 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2366 = _2300;
        _2368 = _2301;
        _2370 = _2302;
    }
    uvec4 _2375 = floatBitsToUint(cbInstanceData._m0[_278 + 5u]);
    uint _2377 = _2375.x * 14u;
    uint _2378 = _2377 + 13u;
    float _2385 = _1084 + (-1.0);
    float _2390 = (cbLight._m0[_2378].x * _2385) + 1.0;
    float _2391 = (cbLight._m0[_2378].y * _2385) + 1.0;
    float _2392 = (cbLight._m0[_2378].z * _2385) + 1.0;
    float _2393 = (cbLight._m0[_2378].w * _2385) + 1.0;
    uint _2394 = _2377 + 5u;
    float _2400 = isnan(1.0) ? _2391 : (isnan(_2391) ? 1.0 : min(_2391, 1.0));
    uint _2404 = _2377 + 4u;
    float _2413 = isnan(1.0) ? _2390 : (isnan(_2390) ? 1.0 : min(_2390, 1.0));
    uint _2417 = _2377 | 1u;
    float _2428 = dot(vec3(cbLight._m0[_2377].xyz), vec3(_933, _934, _935));
    float _2431 = dot(vec3(cbLight._m0[_2417].xyz), vec3(_933, _934, _935));
    float _4648 = isnan(0.0) ? _2428 : (isnan(_2428) ? 0.0 : max(_2428, 0.0));
    float _4659 = isnan(0.0) ? _2431 : (isnan(_2431) ? 0.0 : max(_2431, 0.0));
    float _2436 = (isnan(1.0) ? _4648 : (isnan(_4648) ? 1.0 : min(_4648, 1.0))) * 0.3183098733425140380859375;
    float _2438 = (isnan(1.0) ? _4659 : (isnan(_4659) ? 1.0 : min(_4659, 1.0))) * 0.3183098733425140380859375;
    float _2445 = ((cbLight._m0[_2394].x * _2400) * _2438) + (((cbLight._m0[_2404].x * _2366) * _2413) * _2436);
    float _2446 = ((_2400 * cbLight._m0[_2394].y) * _2438) + (((cbLight._m0[_2404].y * _2368) * _2413) * _2436);
    float _2447 = ((_2400 * cbLight._m0[_2394].z) * _2438) + (((cbLight._m0[_2404].z * _2370) * _2413) * _2436);
    uvec4 _2451 = floatBitsToUint(cbLight._m0[_2377 + 12u]);
    bool _2453 = _2451.x == 0u;
    float _2555;
    float _2557;
    float _2559;
    if (_2453)
    {
        _2555 = _2445;
        _2557 = _2446;
        _2559 = _2447;
    }
    else
    {
        uint _2563 = _2377 + 6u;
        float _2579 = (dot(vec3(cbLight._m0[_2377 + 2u].xyz), vec3(_933, _934, _935)) * 0.5) + 0.5;
        float _2580 = _2579 * _2579;
        float _4670 = isnan(0.0) ? _2580 : (isnan(_2580) ? 0.0 : max(_2580, 0.0));
        float _2581 = isnan(1.0) ? _4670 : (isnan(_4670) ? 1.0 : min(_4670, 1.0));
        float _2582 = isnan(1.0) ? _2392 : (isnan(_2392) ? 1.0 : min(_2392, 1.0));
        _2555 = (((cbLight._m0[_2563].x * 0.3183098733425140380859375) * _2581) * _2582) + _2445;
        _2557 = (((cbLight._m0[_2563].y * 0.3183098733425140380859375) * _2581) * _2582) + _2446;
        _2559 = (((cbLight._m0[_2563].z * 0.3183098733425140380859375) * _2581) * _2582) + _2447;
    }
    bool _2562 = _2451.y == 0u;
    float _2617;
    float _2619;
    float _2621;
    if (_2562)
    {
        _2617 = _2555;
        _2619 = _2557;
        _2621 = _2559;
    }
    else
    {
        uint _2779 = _2377 + 7u;
        float _2795 = (dot(vec3(cbLight._m0[_2377 + 3u].xyz), vec3(_933, _934, _935)) * 0.5) + 0.5;
        float _2796 = _2795 * _2795;
        float _4686 = isnan(0.0) ? _2796 : (isnan(_2796) ? 0.0 : max(_2796, 0.0));
        float _2797 = isnan(1.0) ? _4686 : (isnan(_4686) ? 1.0 : min(_4686, 1.0));
        float _2798 = isnan(1.0) ? _2393 : (isnan(_2393) ? 1.0 : min(_2393, 1.0));
        _2617 = (((cbLight._m0[_2779].x * 0.3183098733425140380859375) * _2797) * _2798) + _2555;
        _2619 = (((cbLight._m0[_2779].y * 0.3183098733425140380859375) * _2797) * _2798) + _2557;
        _2621 = (((cbLight._m0[_2779].z * 0.3183098733425140380859375) * _2797) * _2798) + _2559;
    }
    uint _2624 = _2377 + 8u;
    float _2637 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2377].w)) * _936) * 0.949999988079071044921875);
    float _2638 = _2637 * _2637;
    float _2639 = cbLight._m0[_2377].x + _1013;
    float _2640 = cbLight._m0[_2377].y + _1014;
    float _2641 = cbLight._m0[_2377].z + _1015;
    float _2645 = inversesqrt(dot(vec3(_2639, _2640, _2641), vec3(_2639, _2640, _2641)));
    float _2646 = _2645 * _2639;
    float _2647 = _2645 * _2640;
    float _2648 = _2645 * _2641;
    float _2649 = dot(vec3(_933, _934, _935), vec3(cbLight._m0[_2377].xyz));
    float _4702 = isnan(0.0) ? _2649 : (isnan(_2649) ? 0.0 : max(_2649, 0.0));
    float _2652 = isnan(1.0) ? _4702 : (isnan(_4702) ? 1.0 : min(_4702, 1.0));
    float _4713 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
    float _2653 = isnan(1.0) ? _4713 : (isnan(_4713) ? 1.0 : min(_4713, 1.0));
    float _2654 = dot(vec3(_933, _934, _935), vec3(_2646, _2647, _2648));
    float _4724 = isnan(0.0) ? _2654 : (isnan(_2654) ? 0.0 : max(_2654, 0.0));
    float _2657 = isnan(1.0) ? _4724 : (isnan(_4724) ? 1.0 : min(_4724, 1.0));
    float _2658 = dot(vec3(cbLight._m0[_2377].xyz), vec3(_2646, _2647, _2648));
    float _4735 = isnan(0.0) ? _2658 : (isnan(_2658) ? 0.0 : max(_2658, 0.0));
    float _2662 = _2638 * _2638;
    float _2666 = ((_2657 * _2657) * (_2662 + (-1.0))) + 1.0;
    float _2677 = (exp2(log2(1.0 - (isnan(1.0) ? _4735 : (isnan(_4735) ? 1.0 : min(_4735, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2678 = 1.0 - _2638;
    float _2689 = (0.5 / (((_2653 * ((_2652 * _2678) + _2638)) + 9.9999999392252902907785028219223e-09) + (((_2653 * _2678) + _2638) * _2652))) * _2652;
    float _4746 = isnan(0.0) ? _2689 : (isnan(_2689) ? 0.0 : max(_2689, 0.0));
    float _2691 = (isnan(1.0) ? _4746 : (isnan(_4746) ? 1.0 : min(_4746, 1.0))) * (_2662 / ((_2666 * _2666) * 3.141590118408203125));
    uint _2705 = _2377 + 9u;
    float _2716 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2417].w)) * _936) * 0.949999988079071044921875);
    float _2717 = _2716 * _2716;
    float _2718 = cbLight._m0[_2417].x + _1013;
    float _2719 = cbLight._m0[_2417].y + _1014;
    float _2720 = cbLight._m0[_2417].z + _1015;
    float _2724 = inversesqrt(dot(vec3(_2718, _2719, _2720), vec3(_2718, _2719, _2720)));
    float _2725 = _2724 * _2718;
    float _2726 = _2724 * _2719;
    float _2727 = _2724 * _2720;
    float _2728 = dot(vec3(_933, _934, _935), vec3(cbLight._m0[_2417].xyz));
    float _4757 = isnan(0.0) ? _2728 : (isnan(_2728) ? 0.0 : max(_2728, 0.0));
    float _2731 = isnan(1.0) ? _4757 : (isnan(_4757) ? 1.0 : min(_4757, 1.0));
    float _2732 = dot(vec3(_933, _934, _935), vec3(_2725, _2726, _2727));
    float _4768 = isnan(0.0) ? _2732 : (isnan(_2732) ? 0.0 : max(_2732, 0.0));
    float _2735 = isnan(1.0) ? _4768 : (isnan(_4768) ? 1.0 : min(_4768, 1.0));
    float _2736 = dot(vec3(cbLight._m0[_2417].xyz), vec3(_2725, _2726, _2727));
    float _4779 = isnan(0.0) ? _2736 : (isnan(_2736) ? 0.0 : max(_2736, 0.0));
    float _2740 = _2717 * _2717;
    float _2744 = ((_2735 * _2735) * (_2740 + (-1.0))) + 1.0;
    float _2753 = (exp2(log2(1.0 - (isnan(1.0) ? _4779 : (isnan(_4779) ? 1.0 : min(_4779, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2754 = 1.0 - _2717;
    float _2764 = (0.5 / (((_2653 * ((_2731 * _2754) + _2717)) + 9.9999999392252902907785028219223e-09) + (((_2653 * _2754) + _2717) * _2731))) * _2731;
    float _4790 = isnan(0.0) ? _2764 : (isnan(_2764) ? 0.0 : max(_2764, 0.0));
    float _2766 = (isnan(1.0) ? _4790 : (isnan(_4790) ? 1.0 : min(_4790, 1.0))) * (_2740 / ((_2744 * _2744) * 3.141590118408203125));
    float _2776 = (((_2753 * cbLight._m0[_2705].x) * _2766) * _2400) + ((((cbLight._m0[_2624].x * _2366) * _2677) * _2691) * _2413);
    float _2777 = (((_2753 * cbLight._m0[_2705].y) * _2766) * _2400) + ((((cbLight._m0[_2624].y * _2368) * _2677) * _2691) * _2413);
    float _2778 = (((_2753 * cbLight._m0[_2705].z) * _2766) * _2400) + ((((cbLight._m0[_2624].z * _2370) * _2677) * _2691) * _2413);
    float _2834;
    float _2836;
    float _2838;
    if (_2453)
    {
        _2834 = _2776;
        _2836 = _2777;
        _2838 = _2778;
    }
    else
    {
        uint _2840 = _2377 + 2u;
        uint _2844 = _2377 + 10u;
        float _2858 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2840].w)) * _936) * 0.949999988079071044921875);
        float _2859 = _2858 * _2858;
        float _2860 = cbLight._m0[_2840].x + _1013;
        float _2861 = cbLight._m0[_2840].y + _1014;
        float _2862 = cbLight._m0[_2840].z + _1015;
        float _2866 = inversesqrt(dot(vec3(_2860, _2861, _2862), vec3(_2860, _2861, _2862)));
        float _2867 = _2866 * _2860;
        float _2868 = _2866 * _2861;
        float _2869 = _2866 * _2862;
        float _2870 = dot(vec3(_933, _934, _935), vec3(cbLight._m0[_2840].xyz));
        float _4801 = isnan(0.0) ? _2870 : (isnan(_2870) ? 0.0 : max(_2870, 0.0));
        float _2873 = isnan(1.0) ? _4801 : (isnan(_4801) ? 1.0 : min(_4801, 1.0));
        float _2874 = dot(vec3(_933, _934, _935), vec3(_2867, _2868, _2869));
        float _4812 = isnan(0.0) ? _2874 : (isnan(_2874) ? 0.0 : max(_2874, 0.0));
        float _2877 = isnan(1.0) ? _4812 : (isnan(_4812) ? 1.0 : min(_4812, 1.0));
        float _2878 = dot(vec3(cbLight._m0[_2840].xyz), vec3(_2867, _2868, _2869));
        float _4823 = isnan(0.0) ? _2878 : (isnan(_2878) ? 0.0 : max(_2878, 0.0));
        float _2882 = _2859 * _2859;
        float _2886 = ((_2877 * _2877) * (_2882 + (-1.0))) + 1.0;
        float _2895 = (exp2(log2(1.0 - (isnan(1.0) ? _4823 : (isnan(_4823) ? 1.0 : min(_4823, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2896 = 1.0 - _2859;
        float _2906 = (0.5 / (((_2653 * ((_2873 * _2896) + _2859)) + 9.9999999392252902907785028219223e-09) + (((_2653 * _2896) + _2859) * _2873))) * _2873;
        float _4834 = isnan(0.0) ? _2906 : (isnan(_2906) ? 0.0 : max(_2906, 0.0));
        float _2908 = (isnan(1.0) ? _4834 : (isnan(_4834) ? 1.0 : min(_4834, 1.0))) * (_2882 / ((_2886 * _2886) * 3.141590118408203125));
        float _2909 = isnan(1.0) ? _2392 : (isnan(_2392) ? 1.0 : min(_2392, 1.0));
        _2834 = (((_2895 * cbLight._m0[_2844].x) * _2908) * _2909) + _2776;
        _2836 = (((_2895 * cbLight._m0[_2844].y) * _2908) * _2909) + _2777;
        _2838 = (((_2895 * cbLight._m0[_2844].z) * _2908) * _2909) + _2778;
    }
    float _2940;
    float _2942;
    float _2944;
    if (_2562)
    {
        _2940 = _2834;
        _2942 = _2836;
        _2944 = _2838;
    }
    else
    {
        uint _2951 = _2377 + 3u;
        uint _2955 = _2377 + 11u;
        float _2969 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2951].w)) * _936) * 0.949999988079071044921875);
        float _2970 = _2969 * _2969;
        float _2971 = cbLight._m0[_2951].x + _1013;
        float _2972 = cbLight._m0[_2951].y + _1014;
        float _2973 = cbLight._m0[_2951].z + _1015;
        float _2977 = inversesqrt(dot(vec3(_2971, _2972, _2973), vec3(_2971, _2972, _2973)));
        float _2978 = _2977 * _2971;
        float _2979 = _2977 * _2972;
        float _2980 = _2977 * _2973;
        float _2981 = dot(vec3(_933, _934, _935), vec3(cbLight._m0[_2951].xyz));
        float _4850 = isnan(0.0) ? _2981 : (isnan(_2981) ? 0.0 : max(_2981, 0.0));
        float _2984 = isnan(1.0) ? _4850 : (isnan(_4850) ? 1.0 : min(_4850, 1.0));
        float _2985 = dot(vec3(_933, _934, _935), vec3(_2978, _2979, _2980));
        float _4861 = isnan(0.0) ? _2985 : (isnan(_2985) ? 0.0 : max(_2985, 0.0));
        float _2988 = isnan(1.0) ? _4861 : (isnan(_4861) ? 1.0 : min(_4861, 1.0));
        float _2989 = dot(vec3(cbLight._m0[_2951].xyz), vec3(_2978, _2979, _2980));
        float _4872 = isnan(0.0) ? _2989 : (isnan(_2989) ? 0.0 : max(_2989, 0.0));
        float _2993 = _2970 * _2970;
        float _2997 = ((_2988 * _2988) * (_2993 + (-1.0))) + 1.0;
        float _3006 = (exp2(log2(1.0 - (isnan(1.0) ? _4872 : (isnan(_4872) ? 1.0 : min(_4872, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3007 = 1.0 - _2970;
        float _3017 = (0.5 / (((_2653 * ((_2984 * _3007) + _2970)) + 9.9999999392252902907785028219223e-09) + (((_2653 * _3007) + _2970) * _2984))) * _2984;
        float _4883 = isnan(0.0) ? _3017 : (isnan(_3017) ? 0.0 : max(_3017, 0.0));
        float _3019 = (isnan(1.0) ? _4883 : (isnan(_4883) ? 1.0 : min(_4883, 1.0))) * (_2993 / ((_2997 * _2997) * 3.141590118408203125));
        float _3020 = isnan(1.0) ? _2393 : (isnan(_2393) ? 1.0 : min(_2393, 1.0));
        _2940 = (((_3006 * cbLight._m0[_2955].x) * _3019) * _3020) + _2834;
        _2942 = (((_3006 * cbLight._m0[_2955].y) * _3019) * _3020) + _2836;
        _2944 = (((_3006 * cbLight._m0[_2955].z) * _3019) * _3020) + _2838;
    }
    float _3086;
    float _3088;
    float _3090;
    float _3092;
    float _3094;
    float _3096;
    if (_2375.y == 0u)
    {
        uvec4 _3041 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3042 = _3041.x;
        uint _3053 = uint((float(_3041.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1022) / _3042))) + floor(float(uint(cbSceneParam._m0[85u].x * _1021) / _3042)));
        float _3063 = (log2(_2153 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3064 = isnan(0.0) ? _3063 : (isnan(_3063) ? 0.0 : max(_3063, 0.0));
        uint _3067 = uint(isnan(14.0) ? _3064 : (isnan(_3064) ? 14.0 : min(_3064, 14.0)));
        uvec4 _3072 = texelFetch(g_lightClusterGridBuffer, int(((_3067 << 2u) + (_3053 << 6u)) >> 2u));
        uint _3073 = _3072.x;
        uint _3074 = _3041.z;
        float _3153;
        float _3155;
        float _3157;
        float _3159;
        float _3161;
        float _3163;
        if (((((1u << ((_3074 >> 4u) & 15u)) + 4294967295u) & _3073) == 0u) || ((_3074 & 240u) == 0u))
        {
            _3153 = 0.0;
            _3155 = 0.0;
            _3157 = 0.0;
            _3159 = 0.0;
            _3161 = 0.0;
            _3163 = 0.0;
        }
        else
        {
            float _3154;
            float _3156;
            float _3158;
            float _3160;
            float _3162;
            float _3164;
            float _3298 = 0.0;
            float _3299 = 0.0;
            float _3300 = 0.0;
            float _3301 = 0.0;
            float _3302 = 0.0;
            float _3303 = 0.0;
            uint _3304 = 0u;
            uint _3313;
            bool _3314;
            for (;;)
            {
                _3313 = texelFetch(g_lightClassification, int((((_3067 << 5u) + (_3053 << 9u)) + (_3304 << 2u)) >> 2u)).x;
                _3314 = _3313 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3314)
                {
                    frontier_phi_66_pred = _3303;
                    frontier_phi_66_pred_1 = _3302;
                    frontier_phi_66_pred_2 = _3301;
                    frontier_phi_66_pred_3 = _3300;
                    frontier_phi_66_pred_4 = _3299;
                    frontier_phi_66_pred_5 = _3298;
                }
                else
                {
                    float _3422;
                    float _3423;
                    float _3424;
                    float _3425;
                    float _3426;
                    float _3427;
                    uint _3428;
                    _3422 = _3298;
                    _3423 = _3299;
                    _3424 = _3300;
                    _3425 = _3301;
                    _3426 = _3302;
                    _3427 = _3303;
                    _3428 = _3313;
                    float _3354;
                    float _3355;
                    float _3356;
                    float _3357;
                    float _3358;
                    float _3359;
                    for (;;)
                    {
                        uint _3432 = uint(findLSB(_3428)) + (_3304 << 5u);
                        uint _3429 = (_3428 + 4294967295u) & _3428;
                        uint _3434 = _3432 * 48u;
                        vec4 _3448 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3434)).x, texelFetch(g_PointLightRenderingBuffer, int(_3434 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3434 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3434 + 3u)).x));
                        uint _3454 = (_3432 * 48u) + 4u;
                        vec4 _3467 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3454)).x, texelFetch(g_PointLightRenderingBuffer, int(_3454 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3454 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3454 + 3u)).x));
                        uint _3473 = (_3432 * 48u) + 8u;
                        vec3 _3484 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3473)).x, texelFetch(g_PointLightRenderingBuffer, int(_3473 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3473 + 2u)).x));
                        float _3488 = _3448.x - _2151;
                        float _3489 = _3448.y - _2152;
                        float _3490 = _3448.z - _2153;
                        float _3491 = dot(vec3(_3488, _3489, _3490), vec3(_3488, _3489, _3490));
                        float _3494 = inversesqrt(_3491);
                        float _3495 = _3494 * _3488;
                        float _3496 = _3494 * _3489;
                        float _3497 = _3494 * _3490;
                        float _3498 = dot(vec3(_1040, _1043, _1046), vec3(_3495, _3496, _3497));
                        float _3503 = 1.0 - (_3491 * _3448.w);
                        float _4909 = isnan(0.0) ? _3503 : (isnan(_3503) ? 0.0 : max(_3503, 0.0));
                        float _3504 = isnan(1.0) ? _4909 : (isnan(_4909) ? 1.0 : min(_4909, 1.0));
                        float _3505 = sqrt(_3491) * _3467.w;
                        float _3508 = 1.39999997615814208984375 / (_3505 + 1.39999997615814208984375);
                        float _3509 = _3508 * _3508;
                        float _3512 = ((1.0 - _3509) * _3498) + _3509;
                        float _3515 = _3505 * _3505;
                        float _3519 = ((isnan(0.0) ? _3512 : (isnan(_3512) ? 0.0 : max(_3512, 0.0))) * _3504) / ((_3515 * 0.699999988079071044921875) + 1.0);
                        float _3523 = (-0.0) - _2151;
                        float _3524 = (-0.0) - _2152;
                        float _3525 = (-0.0) - _2153;
                        float _3529 = inversesqrt(dot(vec3(_3523, _3524, _3525), vec3(_3523, _3524, _3525)));
                        float _3530 = _3529 * _3523;
                        float _3531 = _3529 * _3524;
                        float _3532 = _3529 * _3525;
                        float _3539 = exp2(log2(1.0 / ((_3515 * 3.5) + 5.0)) * 0.25);
                        float _3540 = 1.0 - _1100;
                        float _3547 = sqrt(1.0 - ((1.0 - (_3540 * _3540)) * (1.0 - (_3539 * _3539))));
                        float _3548 = _3547 * _3547;
                        float _3549 = _3548 * _3548;
                        float _3550 = _3530 + _3495;
                        float _3551 = _3531 + _3496;
                        float _3552 = _3532 + _3497;
                        float _3556 = inversesqrt(dot(vec3(_3550, _3551, _3552), vec3(_3550, _3551, _3552)));
                        float _3560 = dot(vec3(_1040, _1043, _1046), vec3(_3530, _3531, _3532));
                        float _4925 = isnan(0.0) ? _3560 : (isnan(_3560) ? 0.0 : max(_3560, 0.0));
                        float _3563 = isnan(1.0) ? _4925 : (isnan(_4925) ? 1.0 : min(_4925, 1.0));
                        float _3564 = dot(vec3(_1040, _1043, _1046), vec3(_3556 * _3550, _3556 * _3551, _3556 * _3552));
                        float _4936 = isnan(0.0) ? _3564 : (isnan(_3564) ? 0.0 : max(_3564, 0.0));
                        float _3567 = isnan(1.0) ? _4936 : (isnan(_4936) ? 1.0 : min(_4936, 1.0));
                        float _3571 = ((_3567 * _3567) * (_3549 + (-1.0))) + 1.0;
                        float _3572 = _3508 * _3548;
                        float _3573 = _3572 * _3572;
                        float _3576 = ((1.0 - _3573) * _3498) + _3573;
                        float _4947 = isnan(0.0) ? _3576 : (isnan(_3576) ? 0.0 : max(_3576, 0.0));
                        float _3577 = isnan(1.0) ? _4947 : (isnan(_4947) ? 1.0 : min(_4947, 1.0));
                        float _3578 = 1.0 - _3548;
                        float _3588 = (0.5 / (((_3577 * ((_3563 * _3578) + _3548)) + 9.9999999392252902907785028219223e-09) + (((_3577 * _3578) + _3548) * _3563))) * _3577;
                        float _4958 = isnan(0.0) ? _3588 : (isnan(_3588) ? 0.0 : max(_3588, 0.0));
                        float _3599 = (((_3549 * 3.1415927410125732421875) * (isnan(1.0) ? _4958 : (isnan(_4958) ? 1.0 : min(_4958, 1.0)))) / ((_3571 * _3571) * ((_3515 * 2.1991131305694580078125) + 3.141590118408203125))) * _3504;
                        _3357 = (_3519 * _3467.x) + _3425;
                        _3358 = (_3519 * _3467.y) + _3426;
                        _3359 = (_3519 * _3467.z) + _3427;
                        _3354 = (_3599 * _3484.x) + _3422;
                        _3355 = (_3599 * _3484.y) + _3423;
                        _3356 = (_3599 * _3484.z) + _3424;
                        if (_3429 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3422 = _3354;
                            _3423 = _3355;
                            _3424 = _3356;
                            _3425 = _3357;
                            _3426 = _3358;
                            _3427 = _3359;
                            _3428 = _3429;
                        }
                    }
                    frontier_phi_66_pred = _3359;
                    frontier_phi_66_pred_1 = _3358;
                    frontier_phi_66_pred_2 = _3357;
                    frontier_phi_66_pred_3 = _3356;
                    frontier_phi_66_pred_4 = _3355;
                    frontier_phi_66_pred_5 = _3354;
                }
                _3164 = frontier_phi_66_pred;
                _3162 = frontier_phi_66_pred_1;
                _3160 = frontier_phi_66_pred_2;
                _3158 = frontier_phi_66_pred_3;
                _3156 = frontier_phi_66_pred_4;
                _3154 = frontier_phi_66_pred_5;
                uint _3305 = _3304 + 1u;
                if (_3305 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3298 = _3154;
                    _3299 = _3156;
                    _3300 = _3158;
                    _3301 = _3160;
                    _3302 = _3162;
                    _3303 = _3164;
                    _3304 = _3305;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3153 = _3154;
            _3155 = _3156;
            _3157 = _3158;
            _3159 = _3160;
            _3161 = _3162;
            _3163 = _3164;
        }
        uvec4 _3167 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3168 = _3167.z;
        uint _3170 = (_3168 >> 8u) & 15u;
        float _3266;
        float _3268;
        float _3270;
        float _3272;
        float _3274;
        float _3276;
        if (((4294967295u << _3170) & _3073) == 0u)
        {
            _3266 = _3153;
            _3268 = _3155;
            _3270 = _3157;
            _3272 = _3159;
            _3274 = _3161;
            _3276 = _3163;
        }
        else
        {
            float _3291 = inversesqrt(dot(vec3(_2151, _2152, _2153), vec3(_2151, _2152, _2153)));
            float _3292 = _3291 * _2151;
            float _3293 = _3291 * _2152;
            float _3294 = _3291 * _2153;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3170 < ((_3168 >> 12u) & 15u))
            {
                float _3267;
                float _3269;
                float _3271;
                float _3273;
                float _3275;
                float _3277;
                float _3405 = _3153;
                float _3406 = _3155;
                float _3407 = _3157;
                float _3408 = _3159;
                float _3409 = _3161;
                float _3410 = _3163;
                uint _3411 = _3170;
                uint _3420;
                bool _3421;
                for (;;)
                {
                    _3420 = texelFetch(g_lightClassification, int((((_3067 << 5u) + (_3053 << 9u)) + (_3411 << 2u)) >> 2u)).x;
                    _3421 = _3420 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3421)
                    {
                        frontier_phi_72_pred = _3410;
                        frontier_phi_72_pred_1 = _3409;
                        frontier_phi_72_pred_2 = _3408;
                        frontier_phi_72_pred_3 = _3407;
                        frontier_phi_72_pred_4 = _3406;
                        frontier_phi_72_pred_5 = _3405;
                    }
                    else
                    {
                        float _3604;
                        float _3605;
                        float _3606;
                        float _3607;
                        float _3608;
                        float _3609;
                        float _3897;
                        float _3898;
                        float _3899;
                        float _3900;
                        float _3901;
                        float _3902;
                        float _3617 = _3405;
                        float _3618 = _3406;
                        float _3619 = _3407;
                        float _3620 = _3408;
                        float _3621 = _3409;
                        float _3622 = _3410;
                        uint _3623 = _3420;
                        uint _3624;
                        vec4 _3649;
                        float _3650;
                        vec4 _3665;
                        vec3 _3677;
                        vec4 _3692;
                        vec4 _3707;
                        float _3753;
                        bool _3754;
                        for (;;)
                        {
                            uint _3634 = ((_3411 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3623));
                            _3624 = (_3623 + 4294967295u) & _3623;
                            uint _3636 = _3634 * 40u;
                            _3649 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3636)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3636 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3636 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3636 + 3u)).x));
                            _3650 = _3649.w;
                            uint _3652 = (_3634 * 40u) + 4u;
                            _3665 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3652)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3652 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3652 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3652 + 3u)).x));
                            uint _3667 = (_3634 * 40u) + 8u;
                            _3677 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3667)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3667 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3667 + 2u)).x));
                            uint _3679 = (_3634 * 40u) + 16u;
                            _3692 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3679)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3679 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3679 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3679 + 3u)).x));
                            uint _3694 = (_3634 * 40u) + 20u;
                            _3707 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3694)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3694 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3694 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3694 + 3u)).x));
                            uint _3709 = (_3634 * 40u) + 24u;
                            vec4 _3722 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3709)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3709 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3709 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3709 + 3u)).x));
                            uint _3728 = (_3634 * 40u) + 28u;
                            vec4 _3741 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3728)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3728 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3728 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3728 + 3u)).x));
                            _3753 = fma(_2153, _3741.z, fma(_2152, _3741.y, _3741.x * _2151)) + _3741.w;
                            _3754 = !((fma(_2153, _3722.z, fma(_2152, _3722.y, _3722.x * _2151)) + _3722.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3754)
                            {
                                float _3781 = _3649.x - _2151;
                                float _3782 = _3649.y - _2152;
                                float _3783 = _3649.z - _2153;
                                float _3784 = dot(vec3(_3781, _3782, _3783), vec3(_3781, _3782, _3783));
                                float _3787 = inversesqrt(_3784);
                                float _3788 = _3787 * _3781;
                                float _3789 = _3787 * _3782;
                                float _3790 = _3787 * _3783;
                                float _3794 = 1.0 - (_3784 / (_3650 * _3650));
                                float _4969 = isnan(0.0) ? _3794 : (isnan(_3794) ? 0.0 : max(_3794, 0.0));
                                float _3795 = isnan(1.0) ? _4969 : (isnan(_4969) ? 1.0 : min(_4969, 1.0));
                                float _3799 = sqrt(_3784) * _3665.w;
                                float _3801 = 1.39999997615814208984375 / (_3799 + 1.39999997615814208984375);
                                float _3802 = _3801 * _3801;
                                float _3805 = ((1.0 - _3802) * dot(vec3(_3788, _3789, _3790), vec3(_1040, _1043, _1046))) + _3802;
                                float _3808 = _3799 * _3799;
                                float _3812 = (fma(_2153, _3692.z, fma(_2152, _3692.y, _3692.x * _2151)) + _3692.w) / _3753;
                                float _3813 = (fma(_2153, _3707.z, fma(_2152, _3707.y, _3707.x * _2151)) + _3707.w) / _3753;
                                float _3817 = 1.0 - dot(vec2(_3812, _3813), vec2(_3812, _3813));
                                float _4985 = isnan(0.0) ? _3817 : (isnan(_3817) ? 0.0 : max(_3817, 0.0));
                                float _3818 = isnan(1.0) ? _4985 : (isnan(_4985) ? 1.0 : min(_4985, 1.0));
                                float _3819 = _3818 * (((isnan(0.0) ? _3805 : (isnan(_3805) ? 0.0 : max(_3805, 0.0))) * _3795) / ((_3808 * 0.699999988079071044921875) + 1.0));
                                float _3831 = exp2(log2(1.0 / ((_3808 * 3.5) + 5.0)) * 0.25);
                                float _3832 = 1.0 - _1100;
                                float _3839 = sqrt(1.0 - ((1.0 - (_3832 * _3832)) * (1.0 - (_3831 * _3831))));
                                float _3840 = _3839 * _3839;
                                float _3841 = _3840 * _3840;
                                float _3842 = _3788 - _3292;
                                float _3843 = _3789 - _3293;
                                float _3844 = _3790 - _3294;
                                float _3848 = inversesqrt(dot(vec3(_3842, _3843, _3844), vec3(_3842, _3843, _3844)));
                                float _3852 = dot(vec3(_1040, _1043, _1046), vec3((-0.0) - _3292, (-0.0) - _3293, (-0.0) - _3294));
                                float _4996 = isnan(0.0) ? _3852 : (isnan(_3852) ? 0.0 : max(_3852, 0.0));
                                float _3855 = isnan(1.0) ? _4996 : (isnan(_4996) ? 1.0 : min(_4996, 1.0));
                                float _3856 = dot(vec3(_1040, _1043, _1046), vec3(_3848 * _3842, _3848 * _3843, _3848 * _3844));
                                float _5007 = isnan(0.0) ? _3856 : (isnan(_3856) ? 0.0 : max(_3856, 0.0));
                                float _3859 = isnan(1.0) ? _5007 : (isnan(_5007) ? 1.0 : min(_5007, 1.0));
                                float _3863 = ((_3859 * _3859) * (_3841 + (-1.0))) + 1.0;
                                float _3864 = _3801 * _3840;
                                float _3865 = _3864 * _3864;
                                float _3871 = ((1.0 - _3865) * dot(vec3(_1040, _1043, _1046), vec3(_3788, _3789, _3790))) + _3865;
                                float _5018 = isnan(0.0) ? _3871 : (isnan(_3871) ? 0.0 : max(_3871, 0.0));
                                float _3872 = isnan(1.0) ? _5018 : (isnan(_5018) ? 1.0 : min(_5018, 1.0));
                                float _3873 = 1.0 - _3840;
                                float _3883 = (0.5 / (((_3872 * ((_3855 * _3873) + _3840)) + 9.9999999392252902907785028219223e-09) + (((_3872 * _3873) + _3840) * _3855))) * _3872;
                                float _5029 = isnan(0.0) ? _3883 : (isnan(_3883) ? 0.0 : max(_3883, 0.0));
                                float _3893 = (_3818 * _3795) * (((_3841 * 3.1415927410125732421875) * (isnan(1.0) ? _5029 : (isnan(_5029) ? 1.0 : min(_5029, 1.0)))) / ((_3863 * _3863) * ((_3808 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3819 * _3665.y;
                                frontier_phi_78_pred_1 = _3819 * _3665.x;
                                frontier_phi_78_pred_2 = _3893 * _3677.z;
                                frontier_phi_78_pred_3 = _3893 * _3677.y;
                                frontier_phi_78_pred_4 = _3893 * _3677.x;
                                frontier_phi_78_pred_5 = _3819 * _3665.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3901 = frontier_phi_78_pred;
                            _3900 = frontier_phi_78_pred_1;
                            _3899 = frontier_phi_78_pred_2;
                            _3898 = frontier_phi_78_pred_3;
                            _3897 = frontier_phi_78_pred_4;
                            _3902 = frontier_phi_78_pred_5;
                            _3607 = _3900 + _3620;
                            _3608 = _3901 + _3621;
                            _3609 = _3902 + _3622;
                            _3604 = _3897 + _3617;
                            _3605 = _3898 + _3618;
                            _3606 = _3899 + _3619;
                            if (_3624 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3617 = _3604;
                                _3618 = _3605;
                                _3619 = _3606;
                                _3620 = _3607;
                                _3621 = _3608;
                                _3622 = _3609;
                                _3623 = _3624;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3609;
                        frontier_phi_72_pred_1 = _3608;
                        frontier_phi_72_pred_2 = _3607;
                        frontier_phi_72_pred_3 = _3606;
                        frontier_phi_72_pred_4 = _3605;
                        frontier_phi_72_pred_5 = _3604;
                    }
                    _3277 = frontier_phi_72_pred;
                    _3275 = frontier_phi_72_pred_1;
                    _3273 = frontier_phi_72_pred_2;
                    _3271 = frontier_phi_72_pred_3;
                    _3269 = frontier_phi_72_pred_4;
                    _3267 = frontier_phi_72_pred_5;
                    uint _3412 = _3411 + 1u;
                    if (_3412 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3405 = _3267;
                        _3406 = _3269;
                        _3407 = _3271;
                        _3408 = _3273;
                        _3409 = _3275;
                        _3410 = _3277;
                        _3411 = _3412;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3277;
                frontier_phi_60_61_ladder_1 = _3275;
                frontier_phi_60_61_ladder_2 = _3271;
                frontier_phi_60_61_ladder_3 = _3269;
                frontier_phi_60_61_ladder_4 = _3267;
                frontier_phi_60_61_ladder_5 = _3273;
            }
            else
            {
                frontier_phi_60_61_ladder = _3163;
                frontier_phi_60_61_ladder_1 = _3161;
                frontier_phi_60_61_ladder_2 = _3157;
                frontier_phi_60_61_ladder_3 = _3155;
                frontier_phi_60_61_ladder_4 = _3153;
                frontier_phi_60_61_ladder_5 = _3159;
            }
            _3266 = frontier_phi_60_61_ladder_4;
            _3268 = frontier_phi_60_61_ladder_3;
            _3270 = frontier_phi_60_61_ladder_2;
            _3272 = frontier_phi_60_61_ladder_5;
            _3274 = frontier_phi_60_61_ladder_1;
            _3276 = frontier_phi_60_61_ladder;
        }
        float _3281 = isnan(1.0) ? _1084 : (isnan(_1084) ? 1.0 : min(_1084, 1.0));
        _3086 = (_3281 * _3272) + _2617;
        _3088 = (_3281 * _3274) + _2619;
        _3090 = (_3281 * _3276) + _2621;
        _3092 = ((_3266 * 0.039999999105930328369140625) * _3281) + _2940;
        _3094 = ((_3268 * 0.039999999105930328369140625) * _3281) + _2942;
        _3096 = ((_3270 * 0.039999999105930328369140625) * _3281) + _2944;
    }
    else
    {
        _3086 = _2617;
        _3088 = _2619;
        _3090 = _2621;
        _3092 = _2940;
        _3094 = _2942;
        _3096 = _2944;
    }
    float _5045 = isnan(0.0) ? _1069 : (isnan(_1069) ? 0.0 : max(_1069, 0.0));
    float _5056 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
    float _5067 = isnan(0.0) ? _1071 : (isnan(_1071) ? 0.0 : max(_1071, 0.0));
    uint _3116 = _278 + 6u;
    float _3124 = _1021 / cbSceneParam._m0[86u].x;
    float _3125 = _1022 / cbSceneParam._m0[86u].y;
    vec4 _3139 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3124, _3125, (log2((isnan(cbSceneParam._m0[77u].w) ? _954 : (isnan(_954) ? cbSceneParam._m0[77u].w : min(_954, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3141 = _3139.x;
    float _3142 = _3139.y;
    float _3143 = _3139.z;
    float _3144 = _3139.w;
    float _3216;
    float _3218;
    float _3220;
    float _3222;
    if (_954 > cbSceneParam._m0[78u].w)
    {
        float _3178 = isnan(_954) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _954 : min(cbSceneParam._m0[80u].w, _954));
        float _3179 = _3178 / _954;
        float _3190 = _3179 * _1006;
        float _3191 = _1007 * _3179;
        float _3192 = (-0.0) - _3191;
        float _3194 = _3179 * _1008;
        float _3196 = (cbSceneParam._m0[77u].w * _3192) / _3178;
        float _3197 = _3196 + cbSceneParam._m0[79u].w;
        float _3198 = cbSceneParam._m0[79u].w - _3191;
        float _3204 = sqrt(((_3190 * _3190) + (_3191 * _3191)) + (_3194 * _3194));
        float _3207 = (1.0 - (cbSceneParam._m0[77u].w / _3178)) * _3204;
        float _3212 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3214 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3367;
        if (abs((_3192 - _3196) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3367 = ((((_3197 > 0.0) ? exp2(_3212 * _3197) : (2.0 - exp2(_3214 * _3197))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3207;
        }
        else
        {
            float _3327 = 1.0 / cbSceneParam._m0[80u].x;
            float _3328 = isnan(_3198) ? _3197 : (isnan(_3197) ? _3198 : max(_3197, _3198));
            float _3329 = isnan(_3198) ? _3197 : (isnan(_3197) ? _3198 : min(_3197, _3198));
            float _3338 = isnan(0.0) ? _3328 : (isnan(_3328) ? 0.0 : min(_3328, 0.0));
            float _3339 = isnan(0.0) ? _3329 : (isnan(_3329) ? 0.0 : min(_3329, 0.0));
            _3367 = ((abs(_3204 / _3192) * cbSceneParam._m0[80u].y) * ((((_3338 - _3339) * 2.0) - ((exp2(_3212 * (isnan(0.0) ? _3328 : (isnan(_3328) ? 0.0 : max(_3328, 0.0)))) - exp2(_3212 * (isnan(0.0) ? _3329 : (isnan(_3329) ? 0.0 : max(_3329, 0.0))))) * _3327)) - ((exp2(_3214 * _3338) - exp2(_3214 * _3339)) * _3327))) + (_3207 * cbSceneParam._m0[80u].z);
        }
        vec4 _3369 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3124, _3125, 1.0), 0.0);
        float _3378 = exp2((_3367 * (-1.44269502162933349609375)) * (1.0 - _3369.w));
        float _3379 = log2(_3378);
        float _3395 = log2(_3144);
        _3216 = (exp2(_3395 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3379 * cbSceneParam._m0[78u].x)) * _3369.x) / cbSceneParam._m0[78u].x)) + _3141;
        _3218 = (exp2(_3395 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3379 * cbSceneParam._m0[78u].y)) * _3369.y) / cbSceneParam._m0[78u].y)) + _3142;
        _3220 = (exp2(_3395 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3379 * cbSceneParam._m0[78u].z)) * _3369.z) / cbSceneParam._m0[78u].z)) + _3143;
        _3222 = _3378 * _3144;
    }
    else
    {
        _3216 = _3141;
        _3218 = _3142;
        _3220 = _3143;
        _3222 = _3144;
    }
    float _3234 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3235 = _3234 == 3.0;
    float _3236 = log2(_3222);
    float _3243 = exp2(_3236 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5045 : (isnan(_5045) ? 1.0 : min(_5045, 1.0))) * (_3086 + ((isnan(0.0) ? _1808 : (isnan(_1808) ? 0.0 : max(_1808, 0.0))) * _1084))) + ((_3092 + ((isnan(0.0) ? _2098 : (isnan(_2098) ? 0.0 : max(_2098, 0.0))) * _1887)) * cbPerFrame._m0[3u].x));
    float _3244 = exp2(_3236 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5056 : (isnan(_5056) ? 1.0 : min(_5056, 1.0))) * (_3088 + ((isnan(0.0) ? _1811 : (isnan(_1811) ? 0.0 : max(_1811, 0.0))) * _1084))) + ((_3094 + ((isnan(0.0) ? _2101 : (isnan(_2101) ? 0.0 : max(_2101, 0.0))) * _1887)) * cbPerFrame._m0[3u].x));
    float _3245 = exp2(_3236 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5067 : (isnan(_5067) ? 1.0 : min(_5067, 1.0))) * (_3090 + ((isnan(0.0) ? _1814 : (isnan(_1814) ? 0.0 : max(_1814, 0.0))) * _1084))) + ((_3096 + ((isnan(0.0) ? _2104 : (isnan(_2104) ? 0.0 : max(_2104, 0.0))) * _1887)) * cbPerFrame._m0[3u].x));
    float _3254 = (_3234 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3254 * (_3235 ? _3243 : (_3243 + (cbSceneParam._m0[72u].w * _3216)));
    SV_Target.y = _3254 * (_3235 ? _3244 : (_3244 + (cbSceneParam._m0[72u].w * _3218)));
    SV_Target.z = _3254 * (_3235 ? _3245 : (_3245 + (cbSceneParam._m0[72u].w * _3220)));
    SV_Target.w = cbInstanceData._m0[_3116].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3116].w;
}


