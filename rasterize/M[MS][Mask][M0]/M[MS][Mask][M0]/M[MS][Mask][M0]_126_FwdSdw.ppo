#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1465;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _231 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _232 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _233 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _239 = inversesqrt(dot(vec3(_231, _232, _233), vec3(_231, _232, _233)));
    float _240 = _239 * _231;
    float _241 = _239 * _232;
    float _242 = _239 * _233;
    float _246 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _247 = _246 * NORMAL.x;
    float _248 = _246 * NORMAL.y;
    float _249 = _246 * NORMAL.z;
    float _253 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _254 = _253 * TANGENT.x;
    float _255 = _253 * TANGENT.y;
    float _256 = _253 * TANGENT.z;
    uint _259 = uint(roundEven(NORMAL.w)) * 13u;
    uint _264 = _259 + 1u;
    uint _268 = _259 + 2u;
    float _277 = sqrt(((cbInstanceData._m0[_264].x * cbInstanceData._m0[_264].x) + (cbInstanceData._m0[_259].x * cbInstanceData._m0[_259].x)) + (cbInstanceData._m0[_268].x * cbInstanceData._m0[_268].x));
    float _278 = _277 * TEXCOORD.z;
    float _279 = _277 * TEXCOORD.w;
    vec4 _299 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _305 = _299.x * cbMtdParam._m0[11u].x;
    float _306 = _299.y * cbMtdParam._m0[11u].y;
    float _307 = _299.z * cbMtdParam._m0[11u].z;
    vec4 _326 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _278) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _279) + cbTextureTilingScale._m0[5u].w));
    vec4 _345 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _385 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _387 = _385.x;
    float _399 = dot(vec4(_387, _385.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _416 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _345.x) * 2.0) - ((((_387 - _399) * cbMtdParam._m0[24u].z) + _399) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4050 = isnan(0.0) ? _416 : (isnan(_416) ? 0.0 : max(_416, 0.0));
    float _417 = isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0));
    float _424 = (_417 * ((_326.x * cbMtdParam._m0[12u].x) - _305)) + _305;
    float _425 = (_417 * ((_326.y * cbMtdParam._m0[12u].y) - _306)) + _306;
    float _426 = (_417 * ((_326.z * cbMtdParam._m0[12u].z) - _307)) + _307;
    vec4 _443 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _278) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _279) + cbTextureTilingScale._m0[3u].w));
    vec4 _463 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _465 = _463.x;
    float _475 = dot(vec4(_465, _463.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _489 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _345.y) * 2.0) - ((((_465 - _475) * cbMtdParam._m0[24u].z) + _475) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4061 = isnan(0.0) ? _489 : (isnan(_489) ? 0.0 : max(_489, 0.0));
    float _490 = isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0));
    float _497 = (_490 * ((_443.x * cbMtdParam._m0[13u].x) - _424)) + _424;
    float _498 = (_490 * ((_443.y * cbMtdParam._m0[13u].y) - _425)) + _425;
    float _499 = (_490 * ((_443.z * cbMtdParam._m0[13u].z) - _426)) + _426;
    vec4 _517 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _278) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _279) + cbTextureTilingScale._m0[24u].w));
    vec4 _534 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _536 = _534.x;
    float _546 = dot(vec4(_536, _534.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _558 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _345.z) * 2.0) - ((((_536 - _546) * cbMtdParam._m0[24u].z) + _546) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4072 = isnan(0.0) ? _558 : (isnan(_558) ? 0.0 : max(_558, 0.0));
    float _559 = isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0));
    float _566 = (_559 * ((_517.x * cbMtdParam._m0[14u].x) - _497)) + _497;
    float _567 = (_559 * ((_517.y * cbMtdParam._m0[14u].y) - _498)) + _498;
    float _568 = (_559 * ((_517.z * cbMtdParam._m0[14u].z) - _499)) + _499;
    vec4 _586 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _278) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _279) + cbTextureTilingScale._m0[4u].w));
    vec4 _603 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _605 = _603.x;
    float _606 = _603.y;
    float _607 = _603.z;
    float _614 = ((_586.x - _605) * _417) + _605;
    float _615 = ((_586.y - _606) * _417) + _606;
    float _616 = ((_586.z - _607) * _417) + _607;
    vec4 _628 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _278) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _279) + cbTextureTilingScale._m0[2u].w));
    float _639 = ((_628.x - _614) * _490) + _614;
    float _640 = ((_628.y - _615) * _490) + _615;
    float _641 = ((_628.z - _616) * _490) + _616;
    vec4 _653 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _278) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _279) + cbTextureTilingScale._m0[23u].w));
    float _666 = ((_653.z - _641) * _559) + _641;
    float _669 = ((((_653.x - _639) * _559) + _639) * 2.0) + (-1.0);
    float _671 = ((((_653.y - _640) * _559) + _640) * 2.0) + (-1.0);
    float _672 = dot(vec2(_669, _671), vec2(_669, _671));
    float _4083 = isnan(0.0) ? _672 : (isnan(_672) ? 0.0 : max(_672, 0.0));
    float _677 = sqrt(1.0 - (isnan(1.0) ? _4083 : (isnan(_4083) ? 1.0 : min(_4083, 1.0))));
    vec4 _691 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _703 = (((_691.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _669;
    float _704 = (((_691.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _671;
    float _707 = fma(_677, _247, fma(_704, _254, _703 * _240));
    float _710 = fma(_677, _248, fma(_704, _255, _703 * _241));
    float _713 = fma(_677, _249, fma(_704, _256, _703 * _242));
    float _717 = inversesqrt(dot(vec3(_707, _710, _713), vec3(_707, _710, _713)));
    vec4 _744 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _278) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _279) + cbTextureTilingScale._m0[11u].w));
    float _746 = _744.x;
    float _747 = 1.0 - _746;
    float _753 = (cbMtdParam._m0[19u].x + dot(vec4(_717 * _707, _717 * _710, _717 * _713, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_746 - _747) * cbMtdParam._m0[24u].w) + _747) * cbMtdParam._m0[21u].z);
    float _4094 = isnan(0.0) ? _753 : (isnan(_753) ? 0.0 : max(_753, 0.0));
    float _754 = isnan(1.0) ? _4094 : (isnan(_4094) ? 1.0 : min(_4094, 1.0));
    float _756 = (-0.0) - cbMtdParam._m0[24u].x;
    float _758 = isnan(0.0) ? _756 : (isnan(_756) ? 0.0 : max(_756, 0.0));
    float _759 = isnan(1.0) ? _758 : (isnan(_758) ? 1.0 : min(_758, 1.0));
    float _766 = _754 - ((_754 * TEXCOORD_8.x) * _759);
    float _767 = _754 - ((_754 * TEXCOORD_8.y) * _759);
    float _768 = _754 - ((_754 * TEXCOORD_8.z) * _759);
    float _775 = (_766 * (cbMtdParam._m0[17u].x - _566)) + _566;
    float _776 = (_767 * (cbMtdParam._m0[17u].y - _567)) + _567;
    float _777 = (_768 * (cbMtdParam._m0[17u].z - _568)) + _568;
    vec4 _789 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _278) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _279) + cbTextureTilingScale._m0[19u].w));
    float _791 = _789.x;
    float _792 = 1.0 - _791;
    float _820 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_791 - _792) * cbMtdParam._m0[24u].y) + _792) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4115 = isnan(0.0) ? _820 : (isnan(_820) ? 0.0 : max(_820, 0.0));
    float _821 = isnan(1.0) ? _4115 : (isnan(_4115) ? 1.0 : min(_4115, 1.0));
    float _829 = ((((cbMtdParam._m0[10u].x - _775) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _821) + _775;
    float _830 = ((((cbMtdParam._m0[10u].y - _776) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _821) + _776;
    float _831 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _777)) * _821) + _777;
    float _835 = (cbMtdParam._m0[19u].w * (_691.z - _666)) + _666;
    vec4 _849 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _278) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _279) + cbTextureTilingScale._m0[15u].w));
    float _856 = (_849.x * 2.0) + (-1.0);
    float _857 = (_849.y * 2.0) + (-1.0);
    float _858 = dot(vec2(_856, _857), vec2(_856, _857));
    float _4126 = isnan(0.0) ? _858 : (isnan(_858) ? 0.0 : max(_858, 0.0));
    float _866 = ((_849.z - _835) * _766) + _835;
    float _869 = ((cbMtdParam._m0[23u].y - _866) * _821) + _866;
    vec4 _888 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _278) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _279) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _894 = (_888.x * 2.0) + (-1.0);
    float _895 = (_888.y * 2.0) + (-1.0);
    float _896 = dot(vec2(_894, _895), vec2(_894, _895));
    float _4137 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
    float _911 = ((sqrt(1.0 - (isnan(1.0) ? _4126 : (isnan(_4126) ? 1.0 : min(_4126, 1.0)))) - _677) * _768) + _677;
    float _914 = (((_856 - _703) * _766) + _703) + (cbMtdParam._m0[21u].x * _703);
    float _915 = (((_857 - _704) * _767) + _704) + (cbMtdParam._m0[21u].x * _704);
    float _926 = (((_894 - _914) + (_914 * cbMtdParam._m0[22u].z)) * _821) + _914;
    float _927 = (((_895 - _915) + (_915 * cbMtdParam._m0[22u].z)) * _821) + _915;
    float _928 = (_821 * (sqrt(1.0 - (isnan(1.0) ? _4137 : (isnan(_4137) ? 1.0 : min(_4137, 1.0)))) - _911)) + _911;
    float _930 = cbMtdParam._m0[22u].x + _691.w;
    float _933 = fma(_928, _247, fma(_927, _254, _926 * _240));
    float _936 = fma(_928, _248, fma(_927, _255, _926 * _241));
    float _939 = fma(_928, _249, fma(_927, _256, _926 * _242));
    float _943 = inversesqrt(dot(vec3(_933, _936, _939), vec3(_933, _936, _939)));
    float _944 = _943 * _933;
    float _945 = _943 * _936;
    float _946 = _943 * _939;
    float _4148 = isnan(0.0) ? _869 : (isnan(_869) ? 0.0 : max(_869, 0.0));
    float _947 = isnan(1.0) ? _4148 : (isnan(_4148) ? 1.0 : min(_4148, 1.0));
    float _4159 = isnan(0.0) ? _930 : (isnan(_930) ? 0.0 : max(_930, 0.0));
    float _4170 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
    float _4181 = isnan(0.0) ? _830 : (isnan(_830) ? 0.0 : max(_830, 0.0));
    float _4192 = isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0));
    float _965 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1006 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1016 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1006);
    float _1017 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1006);
    float _1018 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1006);
    float _1022 = inversesqrt(dot(vec3(_1016, _1017, _1018), vec3(_1016, _1017, _1018)));
    float _1023 = _1016 * _1022;
    float _1024 = _1017 * _1022;
    float _1025 = _1018 * _1022;
    float _1031 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1032 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1050 = fma(_946, cbSceneParam._m0[5u].z, fma(_945, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _944));
    float _1053 = fma(_946, cbSceneParam._m0[6u].z, fma(_945, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _944));
    float _1056 = fma(_946, cbSceneParam._m0[7u].z, fma(_945, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _944));
    uint _1070 = (_259 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1076 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4170 : (isnan(_4170) ? 1.0 : min(_4170, 1.0)))) * cbInstanceData._m0[_1070].x;
    float _1077 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4181 : (isnan(_4181) ? 1.0 : min(_4181, 1.0)))) * cbInstanceData._m0[_1070].y;
    float _1078 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4192 : (isnan(_4192) ? 1.0 : min(_4192, 1.0)))) * cbInstanceData._m0[_1070].z;
    float _4203 = isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : max(_1076, 0.0));
    float _1079 = isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0));
    float _4214 = isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0));
    float _1080 = isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0));
    float _4225 = isnan(0.0) ? _1078 : (isnan(_1078) ? 0.0 : max(_1078, 0.0));
    float _1081 = isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0));
    vec4 _1090 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1031, cbSceneParam._m0[86u].y * _1032));
    float _1094 = ((isnan(1.0) ? _4159 : (isnan(_4159) ? 1.0 : min(_4159, 1.0))) * TEXCOORD_5.w) * _1090.x;
    float _1095 = dot(vec3(_944, _945, _946), vec3(_1023, _1024, _1025));
    float _1098 = _1095 * 2.0;
    float _1102 = (_1098 * _944) - _1023;
    float _1103 = (_1098 * _945) - _1024;
    float _1104 = (_1098 * _946) - _1025;
    float _1108 = abs(dot(vec3(_1023, _1024, _1025), vec3(_944, _945, _946)));
    float _4236 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
    float _1110 = sqrt(_947);
    float _1123 = exp2((_1110 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1110 * 3.0));
    float _1155 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1159 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1163 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1464;
    float _1466;
    float _1467;
    float _1468;
    float _1469;
    float _1470;
    float _1471;
    float _1472;
    float _1473;
    float _1474;
    float _1475;
    float _1476;
    float _1477;
    float _1478;
    float _1479;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1189 = fma(_1163, cbModelParam._m0[26u].z, fma(_1159, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1155));
        float _1193 = fma(_1163, cbModelParam._m0[27u].z, fma(_1159, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1155));
        float _1197 = fma(_1163, cbModelParam._m0[28u].z, fma(_1159, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1155));
        float _1222 = _1155 + _944;
        float _1223 = _1159 + _945;
        float _1224 = _1163 + _946;
        float _1234 = fma(_1224, cbModelParam._m0[26u].z, fma(_1223, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1222)) - _1189;
        float _1235 = fma(_1224, cbModelParam._m0[27u].z, fma(_1223, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1222)) - _1193;
        float _1236 = fma(_1224, cbModelParam._m0[28u].z, fma(_1223, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1222)) - _1197;
        float _1240 = inversesqrt(dot(vec3(_1234, _1235, _1236), vec3(_1234, _1235, _1236)));
        float _1253 = ((_1240 * _1234) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1189 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1254 = ((_1240 * _1235) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1193 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1255 = ((_1240 * _1236) / cbModelParam._m0[34u].z) + ((((((_1197 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1258 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1253, _1254, _1255), 0.0);
        vec4 _1265 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1253, _1254, _1255), 0.0);
        vec4 _1272 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1253, _1254, _1255), 0.0);
        vec4 _1279 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1253, _1254, _1255), 0.0);
        float _1292 = exp2((_1258.w + (-0.5)) * 20.0) * 2.0;
        float _1293 = _1292 * (_1258.x + (-0.5));
        float _1294 = _1292 * (_1258.y + (-0.5));
        float _1295 = _1292 * (_1258.z + (-0.5));
        float _1302 = exp2((_1265.w + (-0.5)) * 20.0) * 2.0;
        float _1303 = _1302 * (_1265.x + (-0.5));
        float _1304 = _1302 * (_1265.y + (-0.5));
        float _1305 = _1302 * (_1265.z + (-0.5));
        float _1312 = exp2((_1272.w + (-0.5)) * 20.0) * 2.0;
        float _1313 = _1312 * (_1272.x + (-0.5));
        float _1314 = _1312 * (_1272.y + (-0.5));
        float _1315 = _1312 * (_1272.z + (-0.5));
        float _1322 = exp2((_1279.w + (-0.5)) * 20.0) * 2.0;
        float _1323 = _1322 * (_1279.x + (-0.5));
        float _1324 = _1322 * (_1279.y + (-0.5));
        float _1325 = _1322 * (_1279.z + (-0.5));
        float _1326 = isnan(0.0) ? _1323 : (isnan(_1323) ? 0.0 : max(_1323, 0.0));
        float _1327 = isnan(0.0) ? _1324 : (isnan(_1324) ? 0.0 : max(_1324, 0.0));
        float _1328 = isnan(0.0) ? _1325 : (isnan(_1325) ? 0.0 : max(_1325, 0.0));
        float _1329 = _1293 * 0.5;
        float _1330 = _1303 * 0.5;
        float _1331 = _1313 * 0.5;
        float _1332 = dot(vec3(_1329, _1330, _1331), vec3(_1329, _1330, _1331));
        float _1337 = (_1332 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1332);
        float _1346 = (dot(vec3(_944, _945, _946), vec3(_1337 * _1329, _1337 * _1330, _1337 * _1331)) + 1.0) * 0.5;
        float _4262 = isnan(0.0) ? _1346 : (isnan(_1346) ? 0.0 : max(_1346, 0.0));
        float _1356 = sqrt(((_1330 * _1330) + (_1329 * _1329)) + (_1331 * _1331)) / (_1326 + 9.9999997473787516355514526367188e-06);
        float _4273 = isnan(0.0) ? _1356 : (isnan(_1356) ? 0.0 : max(_1356, 0.0));
        float _1357 = isnan(1.0) ? _4273 : (isnan(_4273) ? 1.0 : min(_4273, 1.0));
        float _1358 = _1357 * 2.0;
        float _1362 = (1.0 - _1357) / (_1357 + 1.0);
        float _4284 = isnan(0.0) ? _1362 : (isnan(_1362) ? 0.0 : max(_1362, 0.0));
        float _1363 = isnan(1.0) ? _4284 : (isnan(_4284) ? 1.0 : min(_4284, 1.0));
        float _1372 = ((((1.0 - _1363) * (_1358 + 2.0)) * exp2(log2(isnan(1.0) ? _4262 : (isnan(_4262) ? 1.0 : min(_4262, 1.0))) * (_1358 + 1.0))) + _1363) * _1326;
        float _1373 = _1294 * 0.5;
        float _1374 = _1304 * 0.5;
        float _1375 = _1314 * 0.5;
        float _1376 = dot(vec3(_1373, _1374, _1375), vec3(_1373, _1374, _1375));
        float _1381 = (_1376 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1376);
        float _1389 = (dot(vec3(_944, _945, _946), vec3(_1381 * _1373, _1381 * _1374, _1381 * _1375)) + 1.0) * 0.5;
        float _4295 = isnan(0.0) ? _1389 : (isnan(_1389) ? 0.0 : max(_1389, 0.0));
        float _1398 = sqrt(((_1374 * _1374) + (_1373 * _1373)) + (_1375 * _1375)) / (_1327 + 9.9999997473787516355514526367188e-06);
        float _4306 = isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0));
        float _1399 = isnan(1.0) ? _4306 : (isnan(_4306) ? 1.0 : min(_4306, 1.0));
        float _1400 = _1399 * 2.0;
        float _1404 = (1.0 - _1399) / (_1399 + 1.0);
        float _4317 = isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0));
        float _1405 = isnan(1.0) ? _4317 : (isnan(_4317) ? 1.0 : min(_4317, 1.0));
        float _1414 = ((((1.0 - _1405) * (_1400 + 2.0)) * exp2(log2(isnan(1.0) ? _4295 : (isnan(_4295) ? 1.0 : min(_4295, 1.0))) * (_1400 + 1.0))) + _1405) * _1327;
        float _1415 = _1295 * 0.5;
        float _1416 = _1305 * 0.5;
        float _1417 = _1315 * 0.5;
        float _1418 = dot(vec3(_1415, _1416, _1417), vec3(_1415, _1416, _1417));
        float _1423 = (_1418 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1418);
        float _1431 = (dot(vec3(_944, _945, _946), vec3(_1423 * _1415, _1423 * _1416, _1423 * _1417)) + 1.0) * 0.5;
        float _4328 = isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : max(_1431, 0.0));
        float _1440 = sqrt(((_1416 * _1416) + (_1415 * _1415)) + (_1417 * _1417)) / (_1328 + 9.9999997473787516355514526367188e-06);
        float _4339 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
        float _1441 = isnan(1.0) ? _4339 : (isnan(_4339) ? 1.0 : min(_4339, 1.0));
        float _1442 = _1441 * 2.0;
        float _1446 = (1.0 - _1441) / (_1441 + 1.0);
        float _4350 = isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0));
        float _1447 = isnan(1.0) ? _4350 : (isnan(_4350) ? 1.0 : min(_4350, 1.0));
        float _1456 = ((((1.0 - _1447) * (_1442 + 2.0)) * exp2(log2(isnan(1.0) ? _4328 : (isnan(_4328) ? 1.0 : min(_4328, 1.0))) * (_1442 + 1.0))) + _1447) * _1328;
        _1464 = _1295;
        _1466 = _1294;
        _1467 = _1293;
        _1468 = _1305;
        _1469 = _1304;
        _1470 = _1303;
        _1471 = _1315;
        _1472 = _1314;
        _1473 = _1313;
        _1474 = _1328;
        _1475 = _1327;
        _1476 = _1326;
        _1477 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1372 : (isnan(_1372) ? 0.0 : max(_1372, 0.0)));
        _1478 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0)));
        _1479 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0)));
    }
    else
    {
        _1464 = _1465;
        _1466 = _1465;
        _1467 = _1465;
        _1468 = _1465;
        _1469 = _1465;
        _1470 = _1465;
        _1471 = _1465;
        _1472 = _1465;
        _1473 = _1465;
        _1474 = _1465;
        _1475 = _1465;
        _1476 = _1465;
        _1477 = 0.0;
        _1478 = 0.0;
        _1479 = 0.0;
    }
    float _1771;
    float _1772;
    float _1773;
    float _1774;
    float _1775;
    float _1776;
    float _1777;
    float _1778;
    float _1779;
    float _1780;
    float _1781;
    float _1782;
    float _1783;
    float _1784;
    float _1785;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1502 = fma(_1163, cbModelParam._m0[30u].z, fma(_1159, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1155));
        float _1506 = fma(_1163, cbModelParam._m0[31u].z, fma(_1159, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1155));
        float _1510 = fma(_1163, cbModelParam._m0[32u].z, fma(_1159, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1155));
        float _1533 = _1155 + _944;
        float _1534 = _1159 + _945;
        float _1535 = _1163 + _946;
        float _1545 = fma(_1535, cbModelParam._m0[30u].z, fma(_1534, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1533)) - _1502;
        float _1546 = fma(_1535, cbModelParam._m0[31u].z, fma(_1534, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1533)) - _1506;
        float _1547 = fma(_1535, cbModelParam._m0[32u].z, fma(_1534, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1533)) - _1510;
        float _1551 = inversesqrt(dot(vec3(_1545, _1546, _1547), vec3(_1545, _1546, _1547)));
        float _1564 = ((_1551 * _1545) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1502 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1565 = ((_1551 * _1546) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1506 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1566 = ((_1551 * _1547) / cbModelParam._m0[35u].z) + ((((((_1510 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1568 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1564, _1565, _1566), 0.0);
        vec4 _1575 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1564, _1565, _1566), 0.0);
        vec4 _1582 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1564, _1565, _1566), 0.0);
        vec4 _1589 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1564, _1565, _1566), 0.0);
        float _1601 = exp2((_1568.w + (-0.5)) * 20.0) * 2.0;
        float _1602 = _1601 * (_1568.x + (-0.5));
        float _1603 = _1601 * (_1568.y + (-0.5));
        float _1604 = _1601 * (_1568.z + (-0.5));
        float _1611 = exp2((_1575.w + (-0.5)) * 20.0) * 2.0;
        float _1612 = _1611 * (_1575.x + (-0.5));
        float _1613 = _1611 * (_1575.y + (-0.5));
        float _1614 = _1611 * (_1575.z + (-0.5));
        float _1621 = exp2((_1582.w + (-0.5)) * 20.0) * 2.0;
        float _1622 = _1621 * (_1582.x + (-0.5));
        float _1623 = _1621 * (_1582.y + (-0.5));
        float _1624 = _1621 * (_1582.z + (-0.5));
        float _1631 = exp2((_1589.w + (-0.5)) * 20.0) * 2.0;
        float _1632 = _1631 * (_1589.x + (-0.5));
        float _1633 = _1631 * (_1589.y + (-0.5));
        float _1634 = _1631 * (_1589.z + (-0.5));
        float _1635 = isnan(0.0) ? _1632 : (isnan(_1632) ? 0.0 : max(_1632, 0.0));
        float _1636 = isnan(0.0) ? _1633 : (isnan(_1633) ? 0.0 : max(_1633, 0.0));
        float _1637 = isnan(0.0) ? _1634 : (isnan(_1634) ? 0.0 : max(_1634, 0.0));
        float _1638 = _1602 * 0.5;
        float _1639 = _1612 * 0.5;
        float _1640 = _1622 * 0.5;
        float _1641 = dot(vec3(_1638, _1639, _1640), vec3(_1638, _1639, _1640));
        float _1646 = (_1641 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1641);
        float _1654 = (dot(vec3(_944, _945, _946), vec3(_1646 * _1638, _1646 * _1639, _1646 * _1640)) + 1.0) * 0.5;
        float _4391 = isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0));
        float _1663 = sqrt(((_1639 * _1639) + (_1638 * _1638)) + (_1640 * _1640)) / (_1635 + 9.9999997473787516355514526367188e-06);
        float _4402 = isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0));
        float _1664 = isnan(1.0) ? _4402 : (isnan(_4402) ? 1.0 : min(_4402, 1.0));
        float _1665 = _1664 * 2.0;
        float _1669 = (1.0 - _1664) / (_1664 + 1.0);
        float _4413 = isnan(0.0) ? _1669 : (isnan(_1669) ? 0.0 : max(_1669, 0.0));
        float _1670 = isnan(1.0) ? _4413 : (isnan(_4413) ? 1.0 : min(_4413, 1.0));
        float _1679 = ((((1.0 - _1670) * (_1665 + 2.0)) * exp2(log2(isnan(1.0) ? _4391 : (isnan(_4391) ? 1.0 : min(_4391, 1.0))) * (_1665 + 1.0))) + _1670) * _1635;
        float _1680 = _1603 * 0.5;
        float _1681 = _1613 * 0.5;
        float _1682 = _1623 * 0.5;
        float _1683 = dot(vec3(_1680, _1681, _1682), vec3(_1680, _1681, _1682));
        float _1688 = (_1683 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1683);
        float _1696 = (dot(vec3(_944, _945, _946), vec3(_1688 * _1680, _1688 * _1681, _1688 * _1682)) + 1.0) * 0.5;
        float _4424 = isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0));
        float _1705 = sqrt(((_1681 * _1681) + (_1680 * _1680)) + (_1682 * _1682)) / (_1636 + 9.9999997473787516355514526367188e-06);
        float _4435 = isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0));
        float _1706 = isnan(1.0) ? _4435 : (isnan(_4435) ? 1.0 : min(_4435, 1.0));
        float _1707 = _1706 * 2.0;
        float _1711 = (1.0 - _1706) / (_1706 + 1.0);
        float _4446 = isnan(0.0) ? _1711 : (isnan(_1711) ? 0.0 : max(_1711, 0.0));
        float _1712 = isnan(1.0) ? _4446 : (isnan(_4446) ? 1.0 : min(_4446, 1.0));
        float _1721 = ((((1.0 - _1712) * (_1707 + 2.0)) * exp2(log2(isnan(1.0) ? _4424 : (isnan(_4424) ? 1.0 : min(_4424, 1.0))) * (_1707 + 1.0))) + _1712) * _1636;
        float _1722 = _1604 * 0.5;
        float _1723 = _1614 * 0.5;
        float _1724 = _1624 * 0.5;
        float _1725 = dot(vec3(_1722, _1723, _1724), vec3(_1722, _1723, _1724));
        float _1730 = (_1725 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1725);
        float _1738 = (dot(vec3(_944, _945, _946), vec3(_1730 * _1722, _1730 * _1723, _1730 * _1724)) + 1.0) * 0.5;
        float _4457 = isnan(0.0) ? _1738 : (isnan(_1738) ? 0.0 : max(_1738, 0.0));
        float _1747 = sqrt(((_1723 * _1723) + (_1722 * _1722)) + (_1724 * _1724)) / (_1637 + 9.9999997473787516355514526367188e-06);
        float _4468 = isnan(0.0) ? _1747 : (isnan(_1747) ? 0.0 : max(_1747, 0.0));
        float _1748 = isnan(1.0) ? _4468 : (isnan(_4468) ? 1.0 : min(_4468, 1.0));
        float _1749 = _1748 * 2.0;
        float _1753 = (1.0 - _1748) / (_1748 + 1.0);
        float _4479 = isnan(0.0) ? _1753 : (isnan(_1753) ? 0.0 : max(_1753, 0.0));
        float _1754 = isnan(1.0) ? _4479 : (isnan(_4479) ? 1.0 : min(_4479, 1.0));
        float _1763 = ((((1.0 - _1754) * (_1749 + 2.0)) * exp2(log2(isnan(1.0) ? _4457 : (isnan(_4457) ? 1.0 : min(_4457, 1.0))) * (_1749 + 1.0))) + _1754) * _1637;
        _1771 = _1604;
        _1772 = _1603;
        _1773 = _1602;
        _1774 = _1614;
        _1775 = _1613;
        _1776 = _1612;
        _1777 = _1624;
        _1778 = _1623;
        _1779 = _1622;
        _1780 = _1637;
        _1781 = _1636;
        _1782 = _1635;
        _1783 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1679 : (isnan(_1679) ? 0.0 : max(_1679, 0.0)));
        _1784 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1721 : (isnan(_1721) ? 0.0 : max(_1721, 0.0)));
        _1785 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1763 : (isnan(_1763) ? 0.0 : max(_1763, 0.0)));
    }
    else
    {
        _1771 = _1465;
        _1772 = _1465;
        _1773 = _1465;
        _1774 = _1465;
        _1775 = _1465;
        _1776 = _1465;
        _1777 = _1465;
        _1778 = _1465;
        _1779 = _1465;
        _1780 = _1465;
        _1781 = _1465;
        _1782 = _1465;
        _1783 = 0.0;
        _1784 = 0.0;
        _1785 = 0.0;
    }
    float _1795 = (cbModelParam._m0[1u].x * (_1783 - _1477)) + _1477;
    float _1796 = (cbModelParam._m0[1u].x * (_1784 - _1478)) + _1478;
    float _1797 = (cbModelParam._m0[1u].x * (_1785 - _1479)) + _1479;
    float _1818 = fma(_1797, cbSceneParam._m0[89u].z, fma(_1796, cbSceneParam._m0[89u].y, _1795 * cbSceneParam._m0[89u].x));
    float _1821 = fma(_1797, cbSceneParam._m0[90u].z, fma(_1796, cbSceneParam._m0[90u].y, _1795 * cbSceneParam._m0[90u].x));
    float _1824 = fma(_1797, cbSceneParam._m0[91u].z, fma(_1796, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1795));
    float _1839 = _1102 * 0.5;
    float _1840 = _1103 * 0.5;
    float _1841 = _1104 * 0.5;
    float _1842 = dot(vec4(_1839, _1840, _1841, 1.0), vec4(_1773, _1776, _1779, _1782));
    float _1845 = dot(vec4(_1839, _1840, _1841, 1.0), vec4(_1772, _1775, _1778, _1781));
    float _1848 = dot(vec4(_1839, _1840, _1841, 1.0), vec4(_1771, _1774, _1777, _1780));
    float _1882;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1855 = dot(vec4(_1839, _1840, _1841, 1.0), vec4(_1464, _1468, _1471, _1474));
        float _1859 = dot(vec4(_1839, _1840, _1841, 1.0), vec4(_1466, _1469, _1472, _1475));
        float _1863 = dot(vec4(_1839, _1840, _1841, 1.0), vec4(_1467, _1470, _1473, _1476));
        float _1870 = dot(vec4(cbModelParam._m0[39u]), vec4(_1839, _1840, _1841, 1.0));
        _1882 = dot(vec3(isnan(0.0) ? _1863 : (isnan(_1863) ? 0.0 : max(_1863, 0.0)), isnan(0.0) ? _1859 : (isnan(_1859) ? 0.0 : max(_1859, 0.0)), isnan(0.0) ? _1855 : (isnan(_1855) ? 0.0 : max(_1855, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1870) ? 0.0 : (isnan(0.0) ? _1870 : max(0.0, _1870))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1882 = 1.0;
    }
    float _1893;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1884 = dot(vec4(cbModelParam._m0[40u]), vec4(_1839, _1840, _1841, 1.0));
        _1893 = dot(vec3(isnan(0.0) ? _1842 : (isnan(_1842) ? 0.0 : max(_1842, 0.0)), isnan(0.0) ? _1845 : (isnan(_1845) ? 0.0 : max(_1845, 0.0)), isnan(0.0) ? _1848 : (isnan(_1848) ? 0.0 : max(_1848, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1884) ? 0.0 : (isnan(0.0) ? _1884 : max(0.0, _1884))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1893 = 1.0;
    }
    float _1897 = (_1893 * cbModelParam._m0[1u].x) + (_1882 * (1.0 - cbModelParam._m0[1u].x));
    float _1907 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _947);
    float _1908 = isnan(_1907) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1907 : min(cbModelParam._m0[25u].z, _1907));
    float _1988;
    float _1990;
    float _1992;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1955 = fma(_1163, cbModelParam._m0[13u].z, fma(_1159, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1155)) + cbModelParam._m0[13u].w;
        float _1959 = fma(_1163, cbModelParam._m0[14u].z, fma(_1159, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1155)) + cbModelParam._m0[14u].w;
        float _1963 = fma(_1163, cbModelParam._m0[15u].z, fma(_1159, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1155)) + cbModelParam._m0[15u].w;
        float _1966 = fma(_1104, cbModelParam._m0[13u].z, fma(_1103, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1102));
        float _1969 = fma(_1104, cbModelParam._m0[14u].z, fma(_1103, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1102));
        float _1972 = fma(_1104, cbModelParam._m0[15u].z, fma(_1103, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1102));
        float _2000;
        if (_1966 > 0.0)
        {
            _2000 = abs((1.0 - _1955) / _1966);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1966 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1955 + 1.0) / _1966);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2000 = frontier_phi_14_12_ladder;
        }
        float _2170;
        if (_1969 > 0.0)
        {
            _2170 = abs((1.0 - _1959) / _1969);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1969 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1959 + 1.0) / _1969);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2170 = frontier_phi_23_19_ladder;
        }
        float _2465;
        if (_1972 > 0.0)
        {
            _2465 = abs((1.0 - _1963) / _1972);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1972 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1963 + 1.0) / _1972);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2465 = frontier_phi_35_30_ladder;
        }
        float _2467 = isnan(_2170) ? _2000 : (isnan(_2000) ? _2170 : min(_2000, _2170));
        float _2468 = isnan(_2465) ? _2467 : (isnan(_2467) ? _2465 : min(_2467, _2465));
        float _2472 = (_2468 * _1966) + _1955;
        float _2473 = (_2468 * _1969) + _1959;
        float _2474 = (_2468 * _1972) + _1963;
        float _2475 = _2468 * 9.9999997473787516355514526367188e-05;
        float _2477 = (-1.0) - _2475;
        float _2479 = _2475 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2474 > _2479) || ((_2474 < _2477) || ((_2473 > _2479) || ((_2473 < _2477) || ((_2472 < _2477) || (_2472 > _2479))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2619 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2474, cbModelParam._m0[9u].z, fma(_2473, cbModelParam._m0[9u].y, _2472 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2474, cbModelParam._m0[10u].z, fma(_2473, cbModelParam._m0[10u].y, _2472 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2474, cbModelParam._m0[11u].z, fma(_2473, cbModelParam._m0[11u].y, _2472 * cbModelParam._m0[11u].x))), _1908);
            frontier_phi_13_35_ladder = _2619.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2619.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2619.x * cbModelParam._m0[1u].y;
        }
        _1988 = frontier_phi_13_35_ladder_2;
        _1990 = frontier_phi_13_35_ladder_1;
        _1992 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1976 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1102, _1103, _1104), _1908);
        _1988 = _1976.x * cbModelParam._m0[1u].y;
        _1990 = _1976.y * cbModelParam._m0[1u].y;
        _1992 = _1976.z * cbModelParam._m0[1u].y;
    }
    float _1996 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _947);
    float _1997 = isnan(_1996) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1996 : min(cbModelParam._m0[25u].w, _1996));
    float _2087;
    float _2089;
    float _2091;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2051 = fma(_1163, cbModelParam._m0[21u].z, fma(_1159, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1155)) + cbModelParam._m0[21u].w;
        float _2055 = fma(_1163, cbModelParam._m0[22u].z, fma(_1159, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1155)) + cbModelParam._m0[22u].w;
        float _2059 = fma(_1163, cbModelParam._m0[23u].z, fma(_1159, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1155)) + cbModelParam._m0[23u].w;
        float _2062 = fma(_1104, cbModelParam._m0[21u].z, fma(_1103, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1102));
        float _2065 = fma(_1104, cbModelParam._m0[22u].z, fma(_1103, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1102));
        float _2068 = fma(_1104, cbModelParam._m0[23u].z, fma(_1103, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1102));
        float _2175;
        if (_2062 > 0.0)
        {
            _2175 = abs((1.0 - _2051) / _2062);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2062 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2051 + 1.0) / _2062);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2175 = frontier_phi_25_21_ladder;
        }
        float _2492;
        if (_2065 > 0.0)
        {
            _2492 = abs((1.0 - _2055) / _2065);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2065 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2055 + 1.0) / _2065);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2492 = frontier_phi_37_32_ladder;
        }
        float _2819;
        if (_2068 > 0.0)
        {
            _2819 = abs((1.0 - _2059) / _2068);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2068 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2059 + 1.0) / _2068);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2819 = frontier_phi_47_44_ladder;
        }
        float _2821 = isnan(_2492) ? _2175 : (isnan(_2175) ? _2492 : min(_2175, _2492));
        float _2822 = isnan(_2819) ? _2821 : (isnan(_2821) ? _2819 : min(_2821, _2819));
        float _2826 = (_2822 * _2062) + _2051;
        float _2827 = (_2822 * _2065) + _2055;
        float _2828 = (_2822 * _2068) + _2059;
        float _2829 = _2822 * 9.9999997473787516355514526367188e-05;
        float _2830 = (-1.0) - _2829;
        float _2832 = _2829 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2828 > _2832) || ((_2828 < _2830) || ((_2827 > _2832) || ((_2827 < _2830) || ((_2826 < _2830) || (_2826 > _2832))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2946 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2828, cbModelParam._m0[17u].z, fma(_2827, cbModelParam._m0[17u].y, _2826 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2828, cbModelParam._m0[18u].z, fma(_2827, cbModelParam._m0[18u].y, _2826 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2828, cbModelParam._m0[19u].z, fma(_2827, cbModelParam._m0[19u].y, _2826 * cbModelParam._m0[19u].x))), _1997);
            frontier_phi_22_47_ladder = _2946.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2946.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2946.x * cbModelParam._m0[1u].z;
        }
        _2087 = frontier_phi_22_47_ladder_2;
        _2089 = frontier_phi_22_47_ladder_1;
        _2091 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2071 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1102, _1103, _1104), _1997);
        _2087 = _2071.x * cbModelParam._m0[1u].z;
        _2089 = _2071.y * cbModelParam._m0[1u].z;
        _2091 = _2071.z * cbModelParam._m0[1u].z;
    }
    float _2103 = ((((1.0 - _1123) * ((_1110 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1123 * _1110)) * _1094;
    float _2104 = _2103 * ((cbModelParam._m0[1u].w * (_2087 - _1988)) + _1988);
    float _2105 = _2103 * ((cbModelParam._m0[1u].w * (_2089 - _1990)) + _1990);
    float _2106 = _2103 * ((cbModelParam._m0[1u].w * (_2091 - _1992)) + _1992);
    float _2109 = fma(_2106, cbSceneParam._m0[89u].z, fma(_2105, cbSceneParam._m0[89u].y, _2104 * cbSceneParam._m0[89u].x));
    float _2112 = fma(_2106, cbSceneParam._m0[90u].z, fma(_2105, cbSceneParam._m0[90u].y, _2104 * cbSceneParam._m0[90u].x));
    float _2115 = fma(_2106, cbSceneParam._m0[91u].z, fma(_2105, cbSceneParam._m0[91u].y, _2104 * cbSceneParam._m0[91u].x));
    float _2149 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2153 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2157 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2161 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2162 = _2149 / _2161;
    float _2163 = _2153 / _2161;
    float _2164 = _2157 / _2161;
    float _2311;
    float _2312;
    float _2313;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2191 = ((uint(_2164 > cbSceneParam._m0[59u].y) + uint(_2164 > cbSceneParam._m0[59u].x)) + uint(_2164 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2192 = _2191 + 43u;
        uint _2200 = _2191 + 44u;
        uint _2208 = _2191 + 45u;
        uint _2216 = _2191 + 46u;
        float _2227 = fma(_2161, cbSceneParam._m0[_2192].w, fma(_2157, cbSceneParam._m0[_2192].z, fma(_2153, cbSceneParam._m0[_2192].y, _2149 * cbSceneParam._m0[_2192].x)));
        float _2231 = fma(_2161, cbSceneParam._m0[_2200].w, fma(_2157, cbSceneParam._m0[_2200].z, fma(_2153, cbSceneParam._m0[_2200].y, _2149 * cbSceneParam._m0[_2200].x)));
        float _2239 = fma(_2161, cbSceneParam._m0[_2216].w, fma(_2157, cbSceneParam._m0[_2216].z, fma(_2153, cbSceneParam._m0[_2216].y, _2149 * cbSceneParam._m0[_2216].x)));
        float _2244 = cbSceneParam._m0[33u].z * _2239;
        float _2246 = cbSceneParam._m0[33u].w * _2239;
        float _2249 = fma(_2161, cbSceneParam._m0[_2208].w, fma(_2157, cbSceneParam._m0[_2208].z, fma(_2153, cbSceneParam._m0[_2208].y, _2149 * cbSceneParam._m0[_2208].x))) / _2239;
        float _2297 = (cbSceneParam._m0[33u].x - sqrt(((_2163 * _2163) + (_2162 * _2162)) + (_2164 * _2164))) * cbSceneParam._m0[33u].y;
        float _4605 = isnan(0.0) ? _2297 : (isnan(_2297) ? 0.0 : max(_2297, 0.0));
        float _2304 = (isnan(1.0) ? _4605 : (isnan(_4605) ? 1.0 : min(_4605, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2244 + _2227) / _2239, (_2246 + _2231) / _2239), _2249), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2246 + _2227) / _2239, (_2231 - _2244) / _2239), _2249), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2227 - _2244) / _2239, (_2231 - _2246) / _2239), _2249), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2227 - _2246) / _2239, (_2244 + _2231) / _2239), _2249), 0.0)).x), vec4(0.25)));
        _2311 = 1.0 - (_2304 * cbSceneParam._m0[34u].x);
        _2312 = 1.0 - (_2304 * cbSceneParam._m0[34u].y);
        _2313 = 1.0 - (_2304 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2311 = 1.0;
        _2312 = 1.0;
        _2313 = 1.0;
    }
    float _2377;
    float _2379;
    float _2381;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2365 = fma(_2161, cbSceneParam._m0[63u].w, fma(_2157, cbSceneParam._m0[63u].z, fma(_2153, cbSceneParam._m0[63u].y, _2149 * cbSceneParam._m0[63u].x)));
        float _2366 = fma(_2161, cbSceneParam._m0[60u].w, fma(_2157, cbSceneParam._m0[60u].z, fma(_2153, cbSceneParam._m0[60u].y, _2149 * cbSceneParam._m0[60u].x))) / _2365;
        float _2367 = fma(_2161, cbSceneParam._m0[61u].w, fma(_2157, cbSceneParam._m0[61u].z, fma(_2153, cbSceneParam._m0[61u].y, _2149 * cbSceneParam._m0[61u].x))) / _2365;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2366 >= cbSceneParam._m0[64u].x) && (_2367 >= cbSceneParam._m0[64u].y)) && (_2366 <= cbSceneParam._m0[64u].z)) && (_2367 <= cbSceneParam._m0[64u].w))
        {
            float _2505 = fma(_2161, cbSceneParam._m0[62u].w, fma(_2157, cbSceneParam._m0[62u].z, fma(_2153, cbSceneParam._m0[62u].y, _2149 * cbSceneParam._m0[62u].x))) / _2365;
            float _2509 = isnan(cbSceneParam._m0[41u].w) ? _2505 : (isnan(_2505) ? cbSceneParam._m0[41u].w : max(_2505, cbSceneParam._m0[41u].w));
            float _2552 = (cbSceneParam._m0[33u].x - sqrt(((_2163 * _2163) + (_2162 * _2162)) + (_2164 * _2164))) * cbSceneParam._m0[33u].y;
            float _4621 = isnan(0.0) ? _2552 : (isnan(_2552) ? 0.0 : max(_2552, 0.0));
            float _2559 = (isnan(1.0) ? _4621 : (isnan(_4621) ? 1.0 : min(_4621, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2366, cbSceneParam._m0[33u].w + _2367), _2509), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2366, _2367 - cbSceneParam._m0[33u].z), _2509), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2366 - cbSceneParam._m0[33u].z, _2367 - cbSceneParam._m0[33u].w), _2509), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2366 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2367), _2509), 0.0)).x), vec4(0.25)));
            float _2563 = 1.0 - (_2559 * cbSceneParam._m0[34u].x);
            float _2564 = 1.0 - (_2559 * cbSceneParam._m0[34u].y);
            float _2565 = 1.0 - (_2559 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2565) ? _2313 : (isnan(_2313) ? _2565 : min(_2313, _2565));
            frontier_phi_34_33_ladder_1 = isnan(_2564) ? _2312 : (isnan(_2312) ? _2564 : min(_2312, _2564));
            frontier_phi_34_33_ladder_2 = isnan(_2563) ? _2311 : (isnan(_2311) ? _2563 : min(_2311, _2563));
        }
        else
        {
            frontier_phi_34_33_ladder = _2313;
            frontier_phi_34_33_ladder_1 = _2312;
            frontier_phi_34_33_ladder_2 = _2311;
        }
        _2377 = frontier_phi_34_33_ladder_2;
        _2379 = frontier_phi_34_33_ladder_1;
        _2381 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2377 = _2311;
        _2379 = _2312;
        _2381 = _2313;
    }
    uvec4 _2386 = floatBitsToUint(cbInstanceData._m0[_259 + 5u]);
    uint _2388 = _2386.x * 14u;
    uint _2389 = _2388 + 13u;
    float _2396 = _1094 + (-1.0);
    float _2401 = (cbLight._m0[_2389].x * _2396) + 1.0;
    float _2402 = (cbLight._m0[_2389].y * _2396) + 1.0;
    float _2403 = (cbLight._m0[_2389].z * _2396) + 1.0;
    float _2404 = (cbLight._m0[_2389].w * _2396) + 1.0;
    uint _2405 = _2388 + 5u;
    float _2411 = isnan(1.0) ? _2402 : (isnan(_2402) ? 1.0 : min(_2402, 1.0));
    uint _2415 = _2388 + 4u;
    float _2424 = isnan(1.0) ? _2401 : (isnan(_2401) ? 1.0 : min(_2401, 1.0));
    uint _2428 = _2388 | 1u;
    float _2439 = dot(vec3(cbLight._m0[_2388].xyz), vec3(_944, _945, _946));
    float _2442 = dot(vec3(cbLight._m0[_2428].xyz), vec3(_944, _945, _946));
    float _4657 = isnan(0.0) ? _2439 : (isnan(_2439) ? 0.0 : max(_2439, 0.0));
    float _4668 = isnan(0.0) ? _2442 : (isnan(_2442) ? 0.0 : max(_2442, 0.0));
    float _2447 = (isnan(1.0) ? _4657 : (isnan(_4657) ? 1.0 : min(_4657, 1.0))) * 0.3183098733425140380859375;
    float _2449 = (isnan(1.0) ? _4668 : (isnan(_4668) ? 1.0 : min(_4668, 1.0))) * 0.3183098733425140380859375;
    float _2456 = ((cbLight._m0[_2405].x * _2411) * _2449) + (((cbLight._m0[_2415].x * _2377) * _2424) * _2447);
    float _2457 = ((_2411 * cbLight._m0[_2405].y) * _2449) + (((cbLight._m0[_2415].y * _2379) * _2424) * _2447);
    float _2458 = ((_2411 * cbLight._m0[_2405].z) * _2449) + (((cbLight._m0[_2415].z * _2381) * _2424) * _2447);
    uvec4 _2462 = floatBitsToUint(cbLight._m0[_2388 + 12u]);
    bool _2464 = _2462.x == 0u;
    float _2566;
    float _2568;
    float _2570;
    if (_2464)
    {
        _2566 = _2456;
        _2568 = _2457;
        _2570 = _2458;
    }
    else
    {
        uint _2574 = _2388 + 6u;
        float _2590 = (dot(vec3(cbLight._m0[_2388 + 2u].xyz), vec3(_944, _945, _946)) * 0.5) + 0.5;
        float _2591 = _2590 * _2590;
        float _4679 = isnan(0.0) ? _2591 : (isnan(_2591) ? 0.0 : max(_2591, 0.0));
        float _2592 = isnan(1.0) ? _4679 : (isnan(_4679) ? 1.0 : min(_4679, 1.0));
        float _2593 = isnan(1.0) ? _2403 : (isnan(_2403) ? 1.0 : min(_2403, 1.0));
        _2566 = (((cbLight._m0[_2574].x * 0.3183098733425140380859375) * _2592) * _2593) + _2456;
        _2568 = (((cbLight._m0[_2574].y * 0.3183098733425140380859375) * _2592) * _2593) + _2457;
        _2570 = (((cbLight._m0[_2574].z * 0.3183098733425140380859375) * _2592) * _2593) + _2458;
    }
    bool _2573 = _2462.y == 0u;
    float _2628;
    float _2630;
    float _2632;
    if (_2573)
    {
        _2628 = _2566;
        _2630 = _2568;
        _2632 = _2570;
    }
    else
    {
        uint _2790 = _2388 + 7u;
        float _2806 = (dot(vec3(cbLight._m0[_2388 + 3u].xyz), vec3(_944, _945, _946)) * 0.5) + 0.5;
        float _2807 = _2806 * _2806;
        float _4695 = isnan(0.0) ? _2807 : (isnan(_2807) ? 0.0 : max(_2807, 0.0));
        float _2808 = isnan(1.0) ? _4695 : (isnan(_4695) ? 1.0 : min(_4695, 1.0));
        float _2809 = isnan(1.0) ? _2404 : (isnan(_2404) ? 1.0 : min(_2404, 1.0));
        _2628 = (((cbLight._m0[_2790].x * 0.3183098733425140380859375) * _2808) * _2809) + _2566;
        _2630 = (((cbLight._m0[_2790].y * 0.3183098733425140380859375) * _2808) * _2809) + _2568;
        _2632 = (((cbLight._m0[_2790].z * 0.3183098733425140380859375) * _2808) * _2809) + _2570;
    }
    uint _2635 = _2388 + 8u;
    float _2648 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2388].w)) * _947) * 0.949999988079071044921875);
    float _2649 = _2648 * _2648;
    float _2650 = cbLight._m0[_2388].x + _1023;
    float _2651 = cbLight._m0[_2388].y + _1024;
    float _2652 = cbLight._m0[_2388].z + _1025;
    float _2656 = inversesqrt(dot(vec3(_2650, _2651, _2652), vec3(_2650, _2651, _2652)));
    float _2657 = _2656 * _2650;
    float _2658 = _2656 * _2651;
    float _2659 = _2656 * _2652;
    float _2660 = dot(vec3(_944, _945, _946), vec3(cbLight._m0[_2388].xyz));
    float _4711 = isnan(0.0) ? _2660 : (isnan(_2660) ? 0.0 : max(_2660, 0.0));
    float _2663 = isnan(1.0) ? _4711 : (isnan(_4711) ? 1.0 : min(_4711, 1.0));
    float _4722 = isnan(0.0) ? _1095 : (isnan(_1095) ? 0.0 : max(_1095, 0.0));
    float _2664 = isnan(1.0) ? _4722 : (isnan(_4722) ? 1.0 : min(_4722, 1.0));
    float _2665 = dot(vec3(_944, _945, _946), vec3(_2657, _2658, _2659));
    float _4733 = isnan(0.0) ? _2665 : (isnan(_2665) ? 0.0 : max(_2665, 0.0));
    float _2668 = isnan(1.0) ? _4733 : (isnan(_4733) ? 1.0 : min(_4733, 1.0));
    float _2669 = dot(vec3(cbLight._m0[_2388].xyz), vec3(_2657, _2658, _2659));
    float _4744 = isnan(0.0) ? _2669 : (isnan(_2669) ? 0.0 : max(_2669, 0.0));
    float _2673 = _2649 * _2649;
    float _2677 = ((_2668 * _2668) * (_2673 + (-1.0))) + 1.0;
    float _2688 = (exp2(log2(1.0 - (isnan(1.0) ? _4744 : (isnan(_4744) ? 1.0 : min(_4744, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2689 = 1.0 - _2649;
    float _2700 = (0.5 / (((_2664 * ((_2663 * _2689) + _2649)) + 9.9999999392252902907785028219223e-09) + (((_2664 * _2689) + _2649) * _2663))) * _2663;
    float _4755 = isnan(0.0) ? _2700 : (isnan(_2700) ? 0.0 : max(_2700, 0.0));
    float _2702 = (isnan(1.0) ? _4755 : (isnan(_4755) ? 1.0 : min(_4755, 1.0))) * (_2673 / ((_2677 * _2677) * 3.141590118408203125));
    uint _2716 = _2388 + 9u;
    float _2727 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2428].w)) * _947) * 0.949999988079071044921875);
    float _2728 = _2727 * _2727;
    float _2729 = cbLight._m0[_2428].x + _1023;
    float _2730 = cbLight._m0[_2428].y + _1024;
    float _2731 = cbLight._m0[_2428].z + _1025;
    float _2735 = inversesqrt(dot(vec3(_2729, _2730, _2731), vec3(_2729, _2730, _2731)));
    float _2736 = _2735 * _2729;
    float _2737 = _2735 * _2730;
    float _2738 = _2735 * _2731;
    float _2739 = dot(vec3(_944, _945, _946), vec3(cbLight._m0[_2428].xyz));
    float _4766 = isnan(0.0) ? _2739 : (isnan(_2739) ? 0.0 : max(_2739, 0.0));
    float _2742 = isnan(1.0) ? _4766 : (isnan(_4766) ? 1.0 : min(_4766, 1.0));
    float _2743 = dot(vec3(_944, _945, _946), vec3(_2736, _2737, _2738));
    float _4777 = isnan(0.0) ? _2743 : (isnan(_2743) ? 0.0 : max(_2743, 0.0));
    float _2746 = isnan(1.0) ? _4777 : (isnan(_4777) ? 1.0 : min(_4777, 1.0));
    float _2747 = dot(vec3(cbLight._m0[_2428].xyz), vec3(_2736, _2737, _2738));
    float _4788 = isnan(0.0) ? _2747 : (isnan(_2747) ? 0.0 : max(_2747, 0.0));
    float _2751 = _2728 * _2728;
    float _2755 = ((_2746 * _2746) * (_2751 + (-1.0))) + 1.0;
    float _2764 = (exp2(log2(1.0 - (isnan(1.0) ? _4788 : (isnan(_4788) ? 1.0 : min(_4788, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2765 = 1.0 - _2728;
    float _2775 = (0.5 / (((_2664 * ((_2742 * _2765) + _2728)) + 9.9999999392252902907785028219223e-09) + (((_2664 * _2765) + _2728) * _2742))) * _2742;
    float _4799 = isnan(0.0) ? _2775 : (isnan(_2775) ? 0.0 : max(_2775, 0.0));
    float _2777 = (isnan(1.0) ? _4799 : (isnan(_4799) ? 1.0 : min(_4799, 1.0))) * (_2751 / ((_2755 * _2755) * 3.141590118408203125));
    float _2787 = (((_2764 * cbLight._m0[_2716].x) * _2777) * _2411) + ((((cbLight._m0[_2635].x * _2377) * _2688) * _2702) * _2424);
    float _2788 = (((_2764 * cbLight._m0[_2716].y) * _2777) * _2411) + ((((cbLight._m0[_2635].y * _2379) * _2688) * _2702) * _2424);
    float _2789 = (((_2764 * cbLight._m0[_2716].z) * _2777) * _2411) + ((((cbLight._m0[_2635].z * _2381) * _2688) * _2702) * _2424);
    float _2845;
    float _2847;
    float _2849;
    if (_2464)
    {
        _2845 = _2787;
        _2847 = _2788;
        _2849 = _2789;
    }
    else
    {
        uint _2851 = _2388 + 2u;
        uint _2855 = _2388 + 10u;
        float _2869 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2851].w)) * _947) * 0.949999988079071044921875);
        float _2870 = _2869 * _2869;
        float _2871 = cbLight._m0[_2851].x + _1023;
        float _2872 = cbLight._m0[_2851].y + _1024;
        float _2873 = cbLight._m0[_2851].z + _1025;
        float _2877 = inversesqrt(dot(vec3(_2871, _2872, _2873), vec3(_2871, _2872, _2873)));
        float _2878 = _2877 * _2871;
        float _2879 = _2877 * _2872;
        float _2880 = _2877 * _2873;
        float _2881 = dot(vec3(_944, _945, _946), vec3(cbLight._m0[_2851].xyz));
        float _4810 = isnan(0.0) ? _2881 : (isnan(_2881) ? 0.0 : max(_2881, 0.0));
        float _2884 = isnan(1.0) ? _4810 : (isnan(_4810) ? 1.0 : min(_4810, 1.0));
        float _2885 = dot(vec3(_944, _945, _946), vec3(_2878, _2879, _2880));
        float _4821 = isnan(0.0) ? _2885 : (isnan(_2885) ? 0.0 : max(_2885, 0.0));
        float _2888 = isnan(1.0) ? _4821 : (isnan(_4821) ? 1.0 : min(_4821, 1.0));
        float _2889 = dot(vec3(cbLight._m0[_2851].xyz), vec3(_2878, _2879, _2880));
        float _4832 = isnan(0.0) ? _2889 : (isnan(_2889) ? 0.0 : max(_2889, 0.0));
        float _2893 = _2870 * _2870;
        float _2897 = ((_2888 * _2888) * (_2893 + (-1.0))) + 1.0;
        float _2906 = (exp2(log2(1.0 - (isnan(1.0) ? _4832 : (isnan(_4832) ? 1.0 : min(_4832, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2907 = 1.0 - _2870;
        float _2917 = (0.5 / (((_2664 * ((_2884 * _2907) + _2870)) + 9.9999999392252902907785028219223e-09) + (((_2664 * _2907) + _2870) * _2884))) * _2884;
        float _4843 = isnan(0.0) ? _2917 : (isnan(_2917) ? 0.0 : max(_2917, 0.0));
        float _2919 = (isnan(1.0) ? _4843 : (isnan(_4843) ? 1.0 : min(_4843, 1.0))) * (_2893 / ((_2897 * _2897) * 3.141590118408203125));
        float _2920 = isnan(1.0) ? _2403 : (isnan(_2403) ? 1.0 : min(_2403, 1.0));
        _2845 = (((_2906 * cbLight._m0[_2855].x) * _2919) * _2920) + _2787;
        _2847 = (((_2906 * cbLight._m0[_2855].y) * _2919) * _2920) + _2788;
        _2849 = (((_2906 * cbLight._m0[_2855].z) * _2919) * _2920) + _2789;
    }
    float _2951;
    float _2953;
    float _2955;
    if (_2573)
    {
        _2951 = _2845;
        _2953 = _2847;
        _2955 = _2849;
    }
    else
    {
        uint _2962 = _2388 + 3u;
        uint _2966 = _2388 + 11u;
        float _2980 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2962].w)) * _947) * 0.949999988079071044921875);
        float _2981 = _2980 * _2980;
        float _2982 = cbLight._m0[_2962].x + _1023;
        float _2983 = cbLight._m0[_2962].y + _1024;
        float _2984 = cbLight._m0[_2962].z + _1025;
        float _2988 = inversesqrt(dot(vec3(_2982, _2983, _2984), vec3(_2982, _2983, _2984)));
        float _2989 = _2988 * _2982;
        float _2990 = _2988 * _2983;
        float _2991 = _2988 * _2984;
        float _2992 = dot(vec3(_944, _945, _946), vec3(cbLight._m0[_2962].xyz));
        float _4859 = isnan(0.0) ? _2992 : (isnan(_2992) ? 0.0 : max(_2992, 0.0));
        float _2995 = isnan(1.0) ? _4859 : (isnan(_4859) ? 1.0 : min(_4859, 1.0));
        float _2996 = dot(vec3(_944, _945, _946), vec3(_2989, _2990, _2991));
        float _4870 = isnan(0.0) ? _2996 : (isnan(_2996) ? 0.0 : max(_2996, 0.0));
        float _2999 = isnan(1.0) ? _4870 : (isnan(_4870) ? 1.0 : min(_4870, 1.0));
        float _3000 = dot(vec3(cbLight._m0[_2962].xyz), vec3(_2989, _2990, _2991));
        float _4881 = isnan(0.0) ? _3000 : (isnan(_3000) ? 0.0 : max(_3000, 0.0));
        float _3004 = _2981 * _2981;
        float _3008 = ((_2999 * _2999) * (_3004 + (-1.0))) + 1.0;
        float _3017 = (exp2(log2(1.0 - (isnan(1.0) ? _4881 : (isnan(_4881) ? 1.0 : min(_4881, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3018 = 1.0 - _2981;
        float _3028 = (0.5 / (((_2664 * ((_2995 * _3018) + _2981)) + 9.9999999392252902907785028219223e-09) + (((_2664 * _3018) + _2981) * _2995))) * _2995;
        float _4892 = isnan(0.0) ? _3028 : (isnan(_3028) ? 0.0 : max(_3028, 0.0));
        float _3030 = (isnan(1.0) ? _4892 : (isnan(_4892) ? 1.0 : min(_4892, 1.0))) * (_3004 / ((_3008 * _3008) * 3.141590118408203125));
        float _3031 = isnan(1.0) ? _2404 : (isnan(_2404) ? 1.0 : min(_2404, 1.0));
        _2951 = (((_3017 * cbLight._m0[_2966].x) * _3030) * _3031) + _2845;
        _2953 = (((_3017 * cbLight._m0[_2966].y) * _3030) * _3031) + _2847;
        _2955 = (((_3017 * cbLight._m0[_2966].z) * _3030) * _3031) + _2849;
    }
    float _3097;
    float _3099;
    float _3101;
    float _3103;
    float _3105;
    float _3107;
    if (_2386.y == 0u)
    {
        uvec4 _3052 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3053 = _3052.x;
        uint _3064 = uint((float(_3052.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1032) / _3053))) + floor(float(uint(cbSceneParam._m0[85u].x * _1031) / _3053)));
        float _3074 = (log2(_2164 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3075 = isnan(0.0) ? _3074 : (isnan(_3074) ? 0.0 : max(_3074, 0.0));
        uint _3078 = uint(isnan(14.0) ? _3075 : (isnan(_3075) ? 14.0 : min(_3075, 14.0)));
        uvec4 _3083 = texelFetch(g_lightClusterGridBuffer, int(((_3078 << 2u) + (_3064 << 6u)) >> 2u));
        uint _3084 = _3083.x;
        uint _3085 = _3052.z;
        float _3164;
        float _3166;
        float _3168;
        float _3170;
        float _3172;
        float _3174;
        if (((((1u << ((_3085 >> 4u) & 15u)) + 4294967295u) & _3084) == 0u) || ((_3085 & 240u) == 0u))
        {
            _3164 = 0.0;
            _3166 = 0.0;
            _3168 = 0.0;
            _3170 = 0.0;
            _3172 = 0.0;
            _3174 = 0.0;
        }
        else
        {
            float _3165;
            float _3167;
            float _3169;
            float _3171;
            float _3173;
            float _3175;
            float _3308 = 0.0;
            float _3309 = 0.0;
            float _3310 = 0.0;
            float _3311 = 0.0;
            float _3312 = 0.0;
            float _3313 = 0.0;
            uint _3314 = 0u;
            uint _3323;
            bool _3324;
            for (;;)
            {
                _3323 = texelFetch(g_lightClassification, int((((_3078 << 5u) + (_3064 << 9u)) + (_3314 << 2u)) >> 2u)).x;
                _3324 = _3323 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3324)
                {
                    frontier_phi_66_pred = _3313;
                    frontier_phi_66_pred_1 = _3312;
                    frontier_phi_66_pred_2 = _3311;
                    frontier_phi_66_pred_3 = _3310;
                    frontier_phi_66_pred_4 = _3309;
                    frontier_phi_66_pred_5 = _3308;
                }
                else
                {
                    float _3432;
                    float _3433;
                    float _3434;
                    float _3435;
                    float _3436;
                    float _3437;
                    uint _3438;
                    _3432 = _3308;
                    _3433 = _3309;
                    _3434 = _3310;
                    _3435 = _3311;
                    _3436 = _3312;
                    _3437 = _3313;
                    _3438 = _3323;
                    float _3364;
                    float _3365;
                    float _3366;
                    float _3367;
                    float _3368;
                    float _3369;
                    for (;;)
                    {
                        uint _3442 = uint(findLSB(_3438)) + (_3314 << 5u);
                        uint _3439 = (_3438 + 4294967295u) & _3438;
                        uint _3444 = _3442 * 48u;
                        vec4 _3458 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3444)).x, texelFetch(g_PointLightRenderingBuffer, int(_3444 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3444 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3444 + 3u)).x));
                        uint _3464 = (_3442 * 48u) + 4u;
                        vec4 _3477 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3464)).x, texelFetch(g_PointLightRenderingBuffer, int(_3464 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3464 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3464 + 3u)).x));
                        uint _3483 = (_3442 * 48u) + 8u;
                        vec3 _3494 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3483)).x, texelFetch(g_PointLightRenderingBuffer, int(_3483 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3483 + 2u)).x));
                        float _3498 = _3458.x - _2162;
                        float _3499 = _3458.y - _2163;
                        float _3500 = _3458.z - _2164;
                        float _3501 = dot(vec3(_3498, _3499, _3500), vec3(_3498, _3499, _3500));
                        float _3504 = inversesqrt(_3501);
                        float _3505 = _3504 * _3498;
                        float _3506 = _3504 * _3499;
                        float _3507 = _3504 * _3500;
                        float _3508 = dot(vec3(_1050, _1053, _1056), vec3(_3505, _3506, _3507));
                        float _3513 = 1.0 - (_3501 * _3458.w);
                        float _4918 = isnan(0.0) ? _3513 : (isnan(_3513) ? 0.0 : max(_3513, 0.0));
                        float _3514 = isnan(1.0) ? _4918 : (isnan(_4918) ? 1.0 : min(_4918, 1.0));
                        float _3515 = sqrt(_3501) * _3477.w;
                        float _3518 = 1.39999997615814208984375 / (_3515 + 1.39999997615814208984375);
                        float _3519 = _3518 * _3518;
                        float _3522 = ((1.0 - _3519) * _3508) + _3519;
                        float _3525 = _3515 * _3515;
                        float _3529 = ((isnan(0.0) ? _3522 : (isnan(_3522) ? 0.0 : max(_3522, 0.0))) * _3514) / ((_3525 * 0.699999988079071044921875) + 1.0);
                        float _3533 = (-0.0) - _2162;
                        float _3534 = (-0.0) - _2163;
                        float _3535 = (-0.0) - _2164;
                        float _3539 = inversesqrt(dot(vec3(_3533, _3534, _3535), vec3(_3533, _3534, _3535)));
                        float _3540 = _3539 * _3533;
                        float _3541 = _3539 * _3534;
                        float _3542 = _3539 * _3535;
                        float _3549 = exp2(log2(1.0 / ((_3525 * 3.5) + 5.0)) * 0.25);
                        float _3550 = 1.0 - _1110;
                        float _3557 = sqrt(1.0 - ((1.0 - (_3550 * _3550)) * (1.0 - (_3549 * _3549))));
                        float _3558 = _3557 * _3557;
                        float _3559 = _3558 * _3558;
                        float _3560 = _3540 + _3505;
                        float _3561 = _3541 + _3506;
                        float _3562 = _3542 + _3507;
                        float _3566 = inversesqrt(dot(vec3(_3560, _3561, _3562), vec3(_3560, _3561, _3562)));
                        float _3570 = dot(vec3(_1050, _1053, _1056), vec3(_3540, _3541, _3542));
                        float _4934 = isnan(0.0) ? _3570 : (isnan(_3570) ? 0.0 : max(_3570, 0.0));
                        float _3573 = isnan(1.0) ? _4934 : (isnan(_4934) ? 1.0 : min(_4934, 1.0));
                        float _3574 = dot(vec3(_1050, _1053, _1056), vec3(_3566 * _3560, _3566 * _3561, _3566 * _3562));
                        float _4945 = isnan(0.0) ? _3574 : (isnan(_3574) ? 0.0 : max(_3574, 0.0));
                        float _3577 = isnan(1.0) ? _4945 : (isnan(_4945) ? 1.0 : min(_4945, 1.0));
                        float _3581 = ((_3577 * _3577) * (_3559 + (-1.0))) + 1.0;
                        float _3582 = _3518 * _3558;
                        float _3583 = _3582 * _3582;
                        float _3586 = ((1.0 - _3583) * _3508) + _3583;
                        float _4956 = isnan(0.0) ? _3586 : (isnan(_3586) ? 0.0 : max(_3586, 0.0));
                        float _3587 = isnan(1.0) ? _4956 : (isnan(_4956) ? 1.0 : min(_4956, 1.0));
                        float _3588 = 1.0 - _3558;
                        float _3598 = (0.5 / (((_3587 * ((_3573 * _3588) + _3558)) + 9.9999999392252902907785028219223e-09) + (((_3587 * _3588) + _3558) * _3573))) * _3587;
                        float _4967 = isnan(0.0) ? _3598 : (isnan(_3598) ? 0.0 : max(_3598, 0.0));
                        float _3609 = (((_3559 * 3.1415927410125732421875) * (isnan(1.0) ? _4967 : (isnan(_4967) ? 1.0 : min(_4967, 1.0)))) / ((_3581 * _3581) * ((_3525 * 2.1991131305694580078125) + 3.141590118408203125))) * _3514;
                        _3367 = (_3529 * _3477.x) + _3435;
                        _3368 = (_3529 * _3477.y) + _3436;
                        _3369 = (_3529 * _3477.z) + _3437;
                        _3364 = (_3609 * _3494.x) + _3432;
                        _3365 = (_3609 * _3494.y) + _3433;
                        _3366 = (_3609 * _3494.z) + _3434;
                        if (_3439 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3432 = _3364;
                            _3433 = _3365;
                            _3434 = _3366;
                            _3435 = _3367;
                            _3436 = _3368;
                            _3437 = _3369;
                            _3438 = _3439;
                        }
                    }
                    frontier_phi_66_pred = _3369;
                    frontier_phi_66_pred_1 = _3368;
                    frontier_phi_66_pred_2 = _3367;
                    frontier_phi_66_pred_3 = _3366;
                    frontier_phi_66_pred_4 = _3365;
                    frontier_phi_66_pred_5 = _3364;
                }
                _3175 = frontier_phi_66_pred;
                _3173 = frontier_phi_66_pred_1;
                _3171 = frontier_phi_66_pred_2;
                _3169 = frontier_phi_66_pred_3;
                _3167 = frontier_phi_66_pred_4;
                _3165 = frontier_phi_66_pred_5;
                uint _3315 = _3314 + 1u;
                if (_3315 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3308 = _3165;
                    _3309 = _3167;
                    _3310 = _3169;
                    _3311 = _3171;
                    _3312 = _3173;
                    _3313 = _3175;
                    _3314 = _3315;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3164 = _3165;
            _3166 = _3167;
            _3168 = _3169;
            _3170 = _3171;
            _3172 = _3173;
            _3174 = _3175;
        }
        uvec4 _3178 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3179 = _3178.z;
        uint _3181 = (_3179 >> 8u) & 15u;
        float _3276;
        float _3278;
        float _3280;
        float _3282;
        float _3284;
        float _3286;
        if (((4294967295u << _3181) & _3084) == 0u)
        {
            _3276 = _3164;
            _3278 = _3166;
            _3280 = _3168;
            _3282 = _3170;
            _3284 = _3172;
            _3286 = _3174;
        }
        else
        {
            float _3301 = inversesqrt(dot(vec3(_2162, _2163, _2164), vec3(_2162, _2163, _2164)));
            float _3302 = _3301 * _2162;
            float _3303 = _3301 * _2163;
            float _3304 = _3301 * _2164;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3181 < ((_3179 >> 12u) & 15u))
            {
                float _3277;
                float _3279;
                float _3281;
                float _3283;
                float _3285;
                float _3287;
                float _3415 = _3164;
                float _3416 = _3166;
                float _3417 = _3168;
                float _3418 = _3170;
                float _3419 = _3172;
                float _3420 = _3174;
                uint _3421 = _3181;
                uint _3430;
                bool _3431;
                for (;;)
                {
                    _3430 = texelFetch(g_lightClassification, int((((_3078 << 5u) + (_3064 << 9u)) + (_3421 << 2u)) >> 2u)).x;
                    _3431 = _3430 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3431)
                    {
                        frontier_phi_72_pred = _3420;
                        frontier_phi_72_pred_1 = _3419;
                        frontier_phi_72_pred_2 = _3418;
                        frontier_phi_72_pred_3 = _3417;
                        frontier_phi_72_pred_4 = _3416;
                        frontier_phi_72_pred_5 = _3415;
                    }
                    else
                    {
                        float _3614;
                        float _3615;
                        float _3616;
                        float _3617;
                        float _3618;
                        float _3619;
                        float _3907;
                        float _3908;
                        float _3909;
                        float _3910;
                        float _3911;
                        float _3912;
                        float _3627 = _3415;
                        float _3628 = _3416;
                        float _3629 = _3417;
                        float _3630 = _3418;
                        float _3631 = _3419;
                        float _3632 = _3420;
                        uint _3633 = _3430;
                        uint _3634;
                        vec4 _3659;
                        float _3660;
                        vec4 _3675;
                        vec3 _3687;
                        vec4 _3702;
                        vec4 _3717;
                        float _3763;
                        bool _3764;
                        for (;;)
                        {
                            uint _3644 = ((_3421 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3633));
                            _3634 = (_3633 + 4294967295u) & _3633;
                            uint _3646 = _3644 * 40u;
                            _3659 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3646)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3646 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3646 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3646 + 3u)).x));
                            _3660 = _3659.w;
                            uint _3662 = (_3644 * 40u) + 4u;
                            _3675 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3662)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3662 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3662 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3662 + 3u)).x));
                            uint _3677 = (_3644 * 40u) + 8u;
                            _3687 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3677)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3677 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3677 + 2u)).x));
                            uint _3689 = (_3644 * 40u) + 16u;
                            _3702 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3689)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3689 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3689 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3689 + 3u)).x));
                            uint _3704 = (_3644 * 40u) + 20u;
                            _3717 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3704)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3704 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3704 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3704 + 3u)).x));
                            uint _3719 = (_3644 * 40u) + 24u;
                            vec4 _3732 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3719)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3719 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3719 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3719 + 3u)).x));
                            uint _3738 = (_3644 * 40u) + 28u;
                            vec4 _3751 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3738)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3738 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3738 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3738 + 3u)).x));
                            _3763 = fma(_2164, _3751.z, fma(_2163, _3751.y, _3751.x * _2162)) + _3751.w;
                            _3764 = !((fma(_2164, _3732.z, fma(_2163, _3732.y, _3732.x * _2162)) + _3732.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3764)
                            {
                                float _3791 = _3659.x - _2162;
                                float _3792 = _3659.y - _2163;
                                float _3793 = _3659.z - _2164;
                                float _3794 = dot(vec3(_3791, _3792, _3793), vec3(_3791, _3792, _3793));
                                float _3797 = inversesqrt(_3794);
                                float _3798 = _3797 * _3791;
                                float _3799 = _3797 * _3792;
                                float _3800 = _3797 * _3793;
                                float _3804 = 1.0 - (_3794 / (_3660 * _3660));
                                float _4978 = isnan(0.0) ? _3804 : (isnan(_3804) ? 0.0 : max(_3804, 0.0));
                                float _3805 = isnan(1.0) ? _4978 : (isnan(_4978) ? 1.0 : min(_4978, 1.0));
                                float _3809 = sqrt(_3794) * _3675.w;
                                float _3811 = 1.39999997615814208984375 / (_3809 + 1.39999997615814208984375);
                                float _3812 = _3811 * _3811;
                                float _3815 = ((1.0 - _3812) * dot(vec3(_3798, _3799, _3800), vec3(_1050, _1053, _1056))) + _3812;
                                float _3818 = _3809 * _3809;
                                float _3822 = (fma(_2164, _3702.z, fma(_2163, _3702.y, _3702.x * _2162)) + _3702.w) / _3763;
                                float _3823 = (fma(_2164, _3717.z, fma(_2163, _3717.y, _3717.x * _2162)) + _3717.w) / _3763;
                                float _3827 = 1.0 - dot(vec2(_3822, _3823), vec2(_3822, _3823));
                                float _4994 = isnan(0.0) ? _3827 : (isnan(_3827) ? 0.0 : max(_3827, 0.0));
                                float _3828 = isnan(1.0) ? _4994 : (isnan(_4994) ? 1.0 : min(_4994, 1.0));
                                float _3829 = _3828 * (((isnan(0.0) ? _3815 : (isnan(_3815) ? 0.0 : max(_3815, 0.0))) * _3805) / ((_3818 * 0.699999988079071044921875) + 1.0));
                                float _3841 = exp2(log2(1.0 / ((_3818 * 3.5) + 5.0)) * 0.25);
                                float _3842 = 1.0 - _1110;
                                float _3849 = sqrt(1.0 - ((1.0 - (_3842 * _3842)) * (1.0 - (_3841 * _3841))));
                                float _3850 = _3849 * _3849;
                                float _3851 = _3850 * _3850;
                                float _3852 = _3798 - _3302;
                                float _3853 = _3799 - _3303;
                                float _3854 = _3800 - _3304;
                                float _3858 = inversesqrt(dot(vec3(_3852, _3853, _3854), vec3(_3852, _3853, _3854)));
                                float _3862 = dot(vec3(_1050, _1053, _1056), vec3((-0.0) - _3302, (-0.0) - _3303, (-0.0) - _3304));
                                float _5005 = isnan(0.0) ? _3862 : (isnan(_3862) ? 0.0 : max(_3862, 0.0));
                                float _3865 = isnan(1.0) ? _5005 : (isnan(_5005) ? 1.0 : min(_5005, 1.0));
                                float _3866 = dot(vec3(_1050, _1053, _1056), vec3(_3858 * _3852, _3858 * _3853, _3858 * _3854));
                                float _5016 = isnan(0.0) ? _3866 : (isnan(_3866) ? 0.0 : max(_3866, 0.0));
                                float _3869 = isnan(1.0) ? _5016 : (isnan(_5016) ? 1.0 : min(_5016, 1.0));
                                float _3873 = ((_3869 * _3869) * (_3851 + (-1.0))) + 1.0;
                                float _3874 = _3811 * _3850;
                                float _3875 = _3874 * _3874;
                                float _3881 = ((1.0 - _3875) * dot(vec3(_1050, _1053, _1056), vec3(_3798, _3799, _3800))) + _3875;
                                float _5027 = isnan(0.0) ? _3881 : (isnan(_3881) ? 0.0 : max(_3881, 0.0));
                                float _3882 = isnan(1.0) ? _5027 : (isnan(_5027) ? 1.0 : min(_5027, 1.0));
                                float _3883 = 1.0 - _3850;
                                float _3893 = (0.5 / (((_3882 * ((_3865 * _3883) + _3850)) + 9.9999999392252902907785028219223e-09) + (((_3882 * _3883) + _3850) * _3865))) * _3882;
                                float _5038 = isnan(0.0) ? _3893 : (isnan(_3893) ? 0.0 : max(_3893, 0.0));
                                float _3903 = (_3828 * _3805) * (((_3851 * 3.1415927410125732421875) * (isnan(1.0) ? _5038 : (isnan(_5038) ? 1.0 : min(_5038, 1.0)))) / ((_3873 * _3873) * ((_3818 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3829 * _3675.y;
                                frontier_phi_78_pred_1 = _3829 * _3675.x;
                                frontier_phi_78_pred_2 = _3903 * _3687.z;
                                frontier_phi_78_pred_3 = _3903 * _3687.y;
                                frontier_phi_78_pred_4 = _3903 * _3687.x;
                                frontier_phi_78_pred_5 = _3829 * _3675.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3911 = frontier_phi_78_pred;
                            _3910 = frontier_phi_78_pred_1;
                            _3909 = frontier_phi_78_pred_2;
                            _3908 = frontier_phi_78_pred_3;
                            _3907 = frontier_phi_78_pred_4;
                            _3912 = frontier_phi_78_pred_5;
                            _3617 = _3910 + _3630;
                            _3618 = _3911 + _3631;
                            _3619 = _3912 + _3632;
                            _3614 = _3907 + _3627;
                            _3615 = _3908 + _3628;
                            _3616 = _3909 + _3629;
                            if (_3634 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3627 = _3614;
                                _3628 = _3615;
                                _3629 = _3616;
                                _3630 = _3617;
                                _3631 = _3618;
                                _3632 = _3619;
                                _3633 = _3634;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3619;
                        frontier_phi_72_pred_1 = _3618;
                        frontier_phi_72_pred_2 = _3617;
                        frontier_phi_72_pred_3 = _3616;
                        frontier_phi_72_pred_4 = _3615;
                        frontier_phi_72_pred_5 = _3614;
                    }
                    _3287 = frontier_phi_72_pred;
                    _3285 = frontier_phi_72_pred_1;
                    _3283 = frontier_phi_72_pred_2;
                    _3281 = frontier_phi_72_pred_3;
                    _3279 = frontier_phi_72_pred_4;
                    _3277 = frontier_phi_72_pred_5;
                    uint _3422 = _3421 + 1u;
                    if (_3422 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3415 = _3277;
                        _3416 = _3279;
                        _3417 = _3281;
                        _3418 = _3283;
                        _3419 = _3285;
                        _3420 = _3287;
                        _3421 = _3422;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3287;
                frontier_phi_60_61_ladder_1 = _3285;
                frontier_phi_60_61_ladder_2 = _3281;
                frontier_phi_60_61_ladder_3 = _3279;
                frontier_phi_60_61_ladder_4 = _3277;
                frontier_phi_60_61_ladder_5 = _3283;
            }
            else
            {
                frontier_phi_60_61_ladder = _3174;
                frontier_phi_60_61_ladder_1 = _3172;
                frontier_phi_60_61_ladder_2 = _3168;
                frontier_phi_60_61_ladder_3 = _3166;
                frontier_phi_60_61_ladder_4 = _3164;
                frontier_phi_60_61_ladder_5 = _3170;
            }
            _3276 = frontier_phi_60_61_ladder_4;
            _3278 = frontier_phi_60_61_ladder_3;
            _3280 = frontier_phi_60_61_ladder_2;
            _3282 = frontier_phi_60_61_ladder_5;
            _3284 = frontier_phi_60_61_ladder_1;
            _3286 = frontier_phi_60_61_ladder;
        }
        float _3291 = isnan(1.0) ? _1094 : (isnan(_1094) ? 1.0 : min(_1094, 1.0));
        _3097 = (_3291 * _3282) + _2628;
        _3099 = (_3291 * _3284) + _2630;
        _3101 = (_3291 * _3286) + _2632;
        _3103 = ((_3276 * 0.039999999105930328369140625) * _3291) + _2951;
        _3105 = ((_3278 * 0.039999999105930328369140625) * _3291) + _2953;
        _3107 = ((_3280 * 0.039999999105930328369140625) * _3291) + _2955;
    }
    else
    {
        _3097 = _2628;
        _3099 = _2630;
        _3101 = _2632;
        _3103 = _2951;
        _3105 = _2953;
        _3107 = _2955;
    }
    float _5054 = isnan(0.0) ? _1079 : (isnan(_1079) ? 0.0 : max(_1079, 0.0));
    float _5065 = isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0));
    float _5076 = isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0));
    uint _3127 = _259 + 6u;
    float _3135 = _1031 / cbSceneParam._m0[86u].x;
    float _3136 = _1032 / cbSceneParam._m0[86u].y;
    vec4 _3150 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3135, _3136, (log2((isnan(cbSceneParam._m0[77u].w) ? _965 : (isnan(_965) ? cbSceneParam._m0[77u].w : min(_965, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3152 = _3150.x;
    float _3153 = _3150.y;
    float _3154 = _3150.z;
    float _3155 = _3150.w;
    float _3226;
    float _3228;
    float _3230;
    float _3232;
    if (_965 > cbSceneParam._m0[78u].w)
    {
        float _3189 = isnan(_965) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _965 : min(cbSceneParam._m0[80u].w, _965));
        float _3190 = _3189 / _965;
        float _3201 = _3190 * _1016;
        float _3202 = _1017 * _3190;
        float _3203 = (-0.0) - _3202;
        float _3204 = _3190 * _1018;
        float _3206 = (cbSceneParam._m0[77u].w * _3203) / _3189;
        float _3207 = _3206 + cbSceneParam._m0[79u].w;
        float _3208 = cbSceneParam._m0[79u].w - _3202;
        float _3214 = sqrt(((_3201 * _3201) + (_3202 * _3202)) + (_3204 * _3204));
        float _3217 = (1.0 - (cbSceneParam._m0[77u].w / _3189)) * _3214;
        float _3222 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3224 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3377;
        if (abs((_3203 - _3206) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3377 = ((((_3207 > 0.0) ? exp2(_3222 * _3207) : (2.0 - exp2(_3224 * _3207))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3217;
        }
        else
        {
            float _3337 = 1.0 / cbSceneParam._m0[80u].x;
            float _3338 = isnan(_3208) ? _3207 : (isnan(_3207) ? _3208 : max(_3207, _3208));
            float _3339 = isnan(_3208) ? _3207 : (isnan(_3207) ? _3208 : min(_3207, _3208));
            float _3348 = isnan(0.0) ? _3338 : (isnan(_3338) ? 0.0 : min(_3338, 0.0));
            float _3349 = isnan(0.0) ? _3339 : (isnan(_3339) ? 0.0 : min(_3339, 0.0));
            _3377 = ((abs(_3214 / _3203) * cbSceneParam._m0[80u].y) * ((((_3348 - _3349) * 2.0) - ((exp2(_3222 * (isnan(0.0) ? _3338 : (isnan(_3338) ? 0.0 : max(_3338, 0.0)))) - exp2(_3222 * (isnan(0.0) ? _3339 : (isnan(_3339) ? 0.0 : max(_3339, 0.0))))) * _3337)) - ((exp2(_3224 * _3348) - exp2(_3224 * _3349)) * _3337))) + (_3217 * cbSceneParam._m0[80u].z);
        }
        vec4 _3379 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3135, _3136, 1.0), 0.0);
        float _3388 = exp2((_3377 * (-1.44269502162933349609375)) * (1.0 - _3379.w));
        float _3389 = log2(_3388);
        float _3405 = log2(_3155);
        _3226 = (exp2(_3405 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3389 * cbSceneParam._m0[78u].x)) * _3379.x) / cbSceneParam._m0[78u].x)) + _3152;
        _3228 = (exp2(_3405 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3389 * cbSceneParam._m0[78u].y)) * _3379.y) / cbSceneParam._m0[78u].y)) + _3153;
        _3230 = (exp2(_3405 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3389 * cbSceneParam._m0[78u].z)) * _3379.z) / cbSceneParam._m0[78u].z)) + _3154;
        _3232 = _3388 * _3155;
    }
    else
    {
        _3226 = _3152;
        _3228 = _3153;
        _3230 = _3154;
        _3232 = _3155;
    }
    float _3244 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3245 = _3244 == 3.0;
    float _3246 = log2(_3232);
    float _3253 = exp2(_3246 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5054 : (isnan(_5054) ? 1.0 : min(_5054, 1.0))) * (_3097 + ((isnan(0.0) ? _1818 : (isnan(_1818) ? 0.0 : max(_1818, 0.0))) * _1094))) + ((_3103 + ((isnan(0.0) ? _2109 : (isnan(_2109) ? 0.0 : max(_2109, 0.0))) * _1897)) * cbPerFrame._m0[3u].x));
    float _3254 = exp2(_3246 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5065 : (isnan(_5065) ? 1.0 : min(_5065, 1.0))) * (_3099 + ((isnan(0.0) ? _1821 : (isnan(_1821) ? 0.0 : max(_1821, 0.0))) * _1094))) + ((_3105 + ((isnan(0.0) ? _2112 : (isnan(_2112) ? 0.0 : max(_2112, 0.0))) * _1897)) * cbPerFrame._m0[3u].x));
    float _3255 = exp2(_3246 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5076 : (isnan(_5076) ? 1.0 : min(_5076, 1.0))) * (_3101 + ((isnan(0.0) ? _1824 : (isnan(_1824) ? 0.0 : max(_1824, 0.0))) * _1094))) + ((_3107 + ((isnan(0.0) ? _2115 : (isnan(_2115) ? 0.0 : max(_2115, 0.0))) * _1897)) * cbPerFrame._m0[3u].x));
    float _3264 = (_3244 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3264 * (_3245 ? _3253 : (_3253 + (cbSceneParam._m0[72u].w * _3226)));
    SV_Target.y = _3264 * (_3245 ? _3254 : (_3254 + (cbSceneParam._m0[72u].w * _3228)));
    SV_Target.z = _3264 * (_3245 ? _3255 : (_3255 + (cbSceneParam._m0[72u].w * _3230)));
    SV_Target.w = cbInstanceData._m0[_3127].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3127].w;
}


