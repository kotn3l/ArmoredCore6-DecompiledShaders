#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _190 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _191 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _192 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _198 = inversesqrt(dot(vec3(_190, _191, _192), vec3(_190, _191, _192)));
    float _205 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _212 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _226 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _228 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _229 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _1033 = isnan(0.0) ? _226 : (isnan(_226) ? 0.0 : max(_226, 0.0));
    float _1044 = isnan(0.0) ? _228 : (isnan(_228) ? 0.0 : max(_228, 0.0));
    float _1055 = isnan(0.0) ? _229 : (isnan(_229) ? 0.0 : max(_229, 0.0));
    uint _239 = uint(roundEven(NORMAL.w)) * 13u;
    uint _244 = _239 + 1u;
    uint _248 = _239 + 2u;
    float _257 = sqrt(((cbInstanceData._m0[_244].x * cbInstanceData._m0[_244].x) + (cbInstanceData._m0[_239].x * cbInstanceData._m0[_239].x)) + (cbInstanceData._m0[_248].x * cbInstanceData._m0[_248].x));
    float _258 = _257 * TEXCOORD.z;
    float _259 = _257 * TEXCOORD.w;
    vec4 _272 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _258) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _259) + cbTextureTilingScale._m0[13u].w));
    vec4 _295 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _321 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _326 = _321.x * cbMtdParam._m0[11u].x;
    float _327 = _321.y * cbMtdParam._m0[11u].y;
    float _328 = _321.z * cbMtdParam._m0[11u].z;
    vec4 _347 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _258) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _259) + cbTextureTilingScale._m0[5u].w));
    vec4 _366 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _405 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _407 = _405.x;
    float _420 = dot(vec4(_407, _405.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _437 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _366.x) * 2.0) - ((((_407 - _420) * cbMtdParam._m0[24u].z) + _420) * cbMtdParam._m0[23u].x))) + 1.0;
    float _1066 = isnan(0.0) ? _437 : (isnan(_437) ? 0.0 : max(_437, 0.0));
    float _438 = isnan(1.0) ? _1066 : (isnan(_1066) ? 1.0 : min(_1066, 1.0));
    float _445 = (_438 * ((_347.x * cbMtdParam._m0[12u].x) - _326)) + _326;
    float _446 = (_438 * ((_347.y * cbMtdParam._m0[12u].y) - _327)) + _327;
    float _447 = (_438 * ((_347.z * cbMtdParam._m0[12u].z) - _328)) + _328;
    vec4 _464 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _258) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _259) + cbTextureTilingScale._m0[3u].w));
    vec4 _484 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _486 = _484.x;
    float _496 = dot(vec4(_486, _484.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _510 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _366.y) * 2.0) - ((((_486 - _496) * cbMtdParam._m0[24u].z) + _496) * cbMtdParam._m0[20u].w))) + 1.0;
    float _1077 = isnan(0.0) ? _510 : (isnan(_510) ? 0.0 : max(_510, 0.0));
    float _511 = isnan(1.0) ? _1077 : (isnan(_1077) ? 1.0 : min(_1077, 1.0));
    float _518 = (_511 * ((_464.x * cbMtdParam._m0[13u].x) - _445)) + _445;
    float _519 = (_511 * ((_464.y * cbMtdParam._m0[13u].y) - _446)) + _446;
    float _520 = (_511 * ((_464.z * cbMtdParam._m0[13u].z) - _447)) + _447;
    vec4 _538 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _258) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _259) + cbTextureTilingScale._m0[24u].w));
    vec4 _555 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _557 = _555.x;
    float _567 = dot(vec4(_557, _555.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _579 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _366.z) * 2.0) - ((((_557 - _567) * cbMtdParam._m0[24u].z) + _567) * cbMtdParam._m0[20u].z))) + 1.0;
    float _1088 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
    float _580 = isnan(1.0) ? _1088 : (isnan(_1088) ? 1.0 : min(_1088, 1.0));
    float _590 = (_295.x * cbMtdParam._m0[9u].x) * ((_580 * ((_538.x * cbMtdParam._m0[14u].x) - _518)) + _518);
    float _591 = (_295.y * cbMtdParam._m0[9u].y) * ((_580 * ((_538.y * cbMtdParam._m0[14u].y) - _519)) + _519);
    float _592 = (_295.z * cbMtdParam._m0[9u].z) * ((_580 * ((_538.z * cbMtdParam._m0[14u].z) - _520)) + _520);
    float _596 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _272.x) * _590;
    float _599 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _272.y) * _591;
    float _602 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _272.z) * _592;
    float _610 = (((_590 - _596) * (isnan(1.0) ? _1033 : (isnan(_1033) ? 1.0 : min(_1033, 1.0)))) + _596) * 4.55000019073486328125;
    float _612 = (((_591 - _599) * (isnan(1.0) ? _1044 : (isnan(_1044) ? 1.0 : min(_1044, 1.0)))) + _599) * 4.55000019073486328125;
    float _614 = (((_592 - _602) * (isnan(1.0) ? _1055 : (isnan(_1055) ? 1.0 : min(_1055, 1.0)))) + _602) * 4.55000019073486328125;
    vec4 _626 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _258) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _259) + cbTextureTilingScale._m0[20u].w));
    vec4 _649 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _258) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _259) + cbTextureTilingScale._m0[4u].w));
    vec4 _666 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _668 = _666.x;
    float _669 = _666.y;
    float _670 = _666.z;
    float _677 = ((_649.x - _668) * _438) + _668;
    float _678 = ((_649.y - _669) * _438) + _669;
    float _679 = ((_649.z - _670) * _438) + _670;
    vec4 _691 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _258) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _259) + cbTextureTilingScale._m0[2u].w));
    float _702 = ((_691.x - _677) * _511) + _677;
    float _703 = ((_691.y - _678) * _511) + _678;
    float _704 = ((_691.z - _679) * _511) + _679;
    vec4 _716 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _258) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _259) + cbTextureTilingScale._m0[23u].w));
    float _729 = ((_716.z - _704) * _580) + _704;
    float _732 = ((((_716.x - _702) * _580) + _702) * 2.0) + (-1.0);
    float _733 = ((((_716.y - _703) * _580) + _703) * 2.0) + (-1.0);
    float _734 = dot(vec2(_732, _733), vec2(_732, _733));
    float _1099 = isnan(0.0) ? _734 : (isnan(_734) ? 0.0 : max(_734, 0.0));
    float _739 = sqrt(1.0 - (isnan(1.0) ? _1099 : (isnan(_1099) ? 1.0 : min(_1099, 1.0))));
    vec4 _759 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _771 = (_732 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_626.x * 2.0) + (-1.0)))) + (((_759.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _772 = (_733 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_626.y * 2.0) + (-1.0)))) + (((_759.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _777 = (((_626.z - _729) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _729;
    float _781 = ((_759.z - _777) * cbMtdParam._m0[19u].w) + _777;
    float _783 = cbMtdParam._m0[22u].x + _759.w;
    float _786 = fma(_739, _205 * NORMAL.x, fma(_772, _212 * TANGENT.x, (_198 * _190) * _771));
    float _789 = fma(_739, _205 * NORMAL.y, fma(_772, _212 * TANGENT.y, (_198 * _191) * _771));
    float _792 = fma(_739, _205 * NORMAL.z, fma(_772, _212 * TANGENT.z, (_198 * _192) * _771));
    float _796 = inversesqrt(dot(vec3(_786, _789, _792), vec3(_786, _789, _792)));
    float _1110 = isnan(0.0) ? _781 : (isnan(_781) ? 0.0 : max(_781, 0.0));
    float _1121 = isnan(0.0) ? _783 : (isnan(_783) ? 0.0 : max(_783, 0.0));
    float _798 = isnan(1.0) ? _1121 : (isnan(_1121) ? 1.0 : min(_1121, 1.0));
    float _1132 = isnan(0.0) ? _610 : (isnan(_610) ? 0.0 : max(_610, 0.0));
    float _799 = isnan(1.0) ? _1132 : (isnan(_1132) ? 1.0 : min(_1132, 1.0));
    float _1143 = isnan(0.0) ? _612 : (isnan(_612) ? 0.0 : max(_612, 0.0));
    float _800 = isnan(1.0) ? _1143 : (isnan(_1143) ? 1.0 : min(_1143, 1.0));
    float _1154 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _801 = isnan(1.0) ? _1154 : (isnan(_1154) ? 1.0 : min(_1154, 1.0));
    float _842 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _852 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _842);
    float _853 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _842);
    float _854 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _842);
    vec4 _859 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _861 = _859.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _921 = sqrt(((_852 * _852) + (_853 * _853)) + (_854 * _854));
        float _927 = (cbMatDynParam._m0[5u].x * _921) + cbMatDynParam._m0[5u].y;
        float _1165 = isnan(0.0) ? _927 : (isnan(_927) ? 0.0 : max(_927, 0.0));
        float _928 = isnan(1.0) ? _1165 : (isnan(_1165) ? 1.0 : min(_1165, 1.0));
        float _932 = (cbMatDynParam._m0[5u].z * _921) + cbMatDynParam._m0[5u].w;
        float _1176 = isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1176 : (isnan(_1176) ? 1.0 : min(_1176, 1.0))) - _928)) + _928) < ((_861 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _960;
    vec4 _883;
    float _890;
    float _891;
    float _892;
    float _893;
    float _897;
    vec4 _901;
    float _903;
    float _904;
    bool _915;
    for (;;)
    {
        _883 = cbInstanceData._m0[(_239 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _887 = (cbMtdParam._m0[0u].x * _799) * _883.x;
        float _888 = (cbMtdParam._m0[0u].y * _800) * _883.y;
        float _889 = (cbMtdParam._m0[0u].z * _801) * _883.z;
        float _1187 = isnan(0.0) ? _887 : (isnan(_887) ? 0.0 : max(_887, 0.0));
        _890 = isnan(1.0) ? _1187 : (isnan(_1187) ? 1.0 : min(_1187, 1.0));
        float _1198 = isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0));
        _891 = isnan(1.0) ? _1198 : (isnan(_1198) ? 1.0 : min(_1198, 1.0));
        float _1209 = isnan(0.0) ? _889 : (isnan(_889) ? 0.0 : max(_889, 0.0));
        _892 = isnan(1.0) ? _1209 : (isnan(_1209) ? 1.0 : min(_1209, 1.0));
        _893 = _798 * TEXCOORD_5.w;
        _897 = cbInstanceData._m0[_239 + 6u].w;
        float _898 = _861 + (-0.5);
        _901 = cbMtdParam._m0[1u];
        _903 = _901.y * _898;
        _904 = _898 * 0.999000012874603271484375;
        _915 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_915)
        {
            if ((cbInstanceData._m0[_239 + 7u].x + _904) < 0.5)
            {
                _960 = true;
                break;
            }
        }
        if ((_883.w < 1.0) && ((_883.w + _904) < 0.5))
        {
            _960 = true;
            break;
        }
        if ((_903 + 1.0) < _901.x)
        {
            _960 = true;
            break;
        }
        _960 = false;
        break;
    }
    if (_960)
    {
        discard_state = true;
    }
    bool _986 = cbMtdParam._m0[1u].z != 0.0;
    float _987 = _986 ? _897 : 0.0;
    SV_Target.x = ((_786 * 0.5) * _796) + 0.500488758087158203125;
    SV_Target.y = ((_789 * 0.5) * _796) + 0.500488758087158203125;
    SV_Target.z = ((_792 * 0.5) * _796) + 0.500488758087158203125;
    SV_Target.w = _987;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _1110 : (isnan(_1110) ? 1.0 : min(_1110, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _986 ? _897 : _893;
    SV_Target_2.x = _890;
    SV_Target_2.y = _891;
    SV_Target_2.z = _892;
    SV_Target_2.w = _986 ? _897 : (float(floatBitsToUint(cbInstanceData._m0[_239 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _987;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _987;
    discard_exit();
}


