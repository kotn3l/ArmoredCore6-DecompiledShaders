#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _179 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _180 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _181 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _187 = inversesqrt(dot(vec3(_179, _180, _181), vec3(_179, _180, _181)));
    float _194 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _201 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _207 = uint(roundEven(NORMAL.w)) * 13u;
    uint _213 = _207 + 1u;
    uint _217 = _207 + 2u;
    float _226 = sqrt(((cbInstanceData._m0[_213].x * cbInstanceData._m0[_213].x) + (cbInstanceData._m0[_207].x * cbInstanceData._m0[_207].x)) + (cbInstanceData._m0[_217].x * cbInstanceData._m0[_217].x));
    float _227 = _226 * TEXCOORD.z;
    float _228 = _226 * TEXCOORD.w;
    vec4 _248 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _254 = _248.x * cbMtdParam._m0[11u].x;
    float _255 = _248.y * cbMtdParam._m0[11u].y;
    float _256 = _248.z * cbMtdParam._m0[11u].z;
    vec4 _275 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _227) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _228) + cbTextureTilingScale._m0[5u].w));
    vec4 _295 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _333 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _335 = _333.x;
    float _348 = dot(vec4(_335, _333.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _365 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _295.x) * 2.0) - ((((_335 - _348) * cbMtdParam._m0[24u].z) + _348) * cbMtdParam._m0[23u].x))) + 1.0;
    float _924 = isnan(0.0) ? _365 : (isnan(_365) ? 0.0 : max(_365, 0.0));
    float _366 = isnan(1.0) ? _924 : (isnan(_924) ? 1.0 : min(_924, 1.0));
    float _373 = (_366 * ((_275.x * cbMtdParam._m0[12u].x) - _254)) + _254;
    float _374 = (_366 * ((_275.y * cbMtdParam._m0[12u].y) - _255)) + _255;
    float _375 = (_366 * ((_275.z * cbMtdParam._m0[12u].z) - _256)) + _256;
    vec4 _392 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _227) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _228) + cbTextureTilingScale._m0[3u].w));
    vec4 _412 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _414 = _412.x;
    float _424 = dot(vec4(_414, _412.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _438 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _295.y) * 2.0) - ((((_414 - _424) * cbMtdParam._m0[24u].z) + _424) * cbMtdParam._m0[20u].w))) + 1.0;
    float _935 = isnan(0.0) ? _438 : (isnan(_438) ? 0.0 : max(_438, 0.0));
    float _439 = isnan(1.0) ? _935 : (isnan(_935) ? 1.0 : min(_935, 1.0));
    float _446 = (_439 * ((_392.x * cbMtdParam._m0[13u].x) - _373)) + _373;
    float _447 = (_439 * ((_392.y * cbMtdParam._m0[13u].y) - _374)) + _374;
    float _448 = (_439 * ((_392.z * cbMtdParam._m0[13u].z) - _375)) + _375;
    vec4 _467 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _227) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _228) + cbTextureTilingScale._m0[14u].w));
    vec4 _487 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _227) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _228) + cbTextureTilingScale._m0[4u].w));
    vec4 _504 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _506 = _504.x;
    float _507 = _504.y;
    float _508 = _504.z;
    float _515 = ((_487.x - _506) * _366) + _506;
    float _516 = ((_487.y - _507) * _366) + _507;
    float _517 = ((_487.z - _508) * _366) + _508;
    vec4 _529 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _227) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _228) + cbTextureTilingScale._m0[2u].w));
    float _542 = ((_529.z - _517) * _439) + _517;
    float _545 = ((((_529.x - _515) * _439) + _515) * 2.0) + (-1.0);
    float _547 = ((((_529.y - _516) * _439) + _516) * 2.0) + (-1.0);
    float _548 = dot(vec2(_545, _547), vec2(_545, _547));
    float _946 = isnan(0.0) ? _548 : (isnan(_548) ? 0.0 : max(_548, 0.0));
    float _553 = sqrt(1.0 - (isnan(1.0) ? _946 : (isnan(_946) ? 1.0 : min(_946, 1.0))));
    vec4 _567 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _592 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _227) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _228) + cbTextureTilingScale._m0[11u].w));
    float _594 = _592.x;
    float _595 = 1.0 - _594;
    float _608 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_594 - _595) * cbMtdParam._m0[24u].w) + _595) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _957 = isnan(0.0) ? _608 : (isnan(_608) ? 0.0 : max(_608, 0.0));
    float _609 = isnan(1.0) ? _957 : (isnan(_957) ? 1.0 : min(_957, 1.0));
    float _616 = (_609 * ((_467.x * cbMtdParam._m0[18u].x) - _446)) + _446;
    float _617 = (_609 * ((_467.y * cbMtdParam._m0[18u].y) - _447)) + _447;
    float _618 = (_609 * ((_467.z * cbMtdParam._m0[18u].z) - _448)) + _448;
    float _622 = (cbMtdParam._m0[19u].w * (_567.z - _542)) + _542;
    vec4 _635 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _227) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _228) + cbTextureTilingScale._m0[15u].w));
    float _642 = (_635.x * 2.0) + (-1.0);
    float _643 = (_635.y * 2.0) + (-1.0);
    float _644 = dot(vec2(_642, _643), vec2(_642, _643));
    float _968 = isnan(0.0) ? _644 : (isnan(_644) ? 0.0 : max(_644, 0.0));
    float _652 = (_609 * (_635.z - _622)) + _622;
    float _655 = (((_567.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _545;
    float _656 = (((_567.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _547;
    float _668 = (((_642 - _655) + (cbMtdParam._m0[21u].x * _655)) * _609) + _655;
    float _669 = (((_643 - _656) + (cbMtdParam._m0[21u].x * _656)) * _609) + _656;
    float _670 = (_609 * (sqrt(1.0 - (isnan(1.0) ? _968 : (isnan(_968) ? 1.0 : min(_968, 1.0)))) - _553)) + _553;
    float _674 = cbMtdParam._m0[22u].x + _567.w;
    float _677 = fma(_670, _194 * NORMAL.x, fma(_669, _201 * TANGENT.x, (_187 * _179) * _668));
    float _680 = fma(_670, _194 * NORMAL.y, fma(_669, _201 * TANGENT.y, (_187 * _180) * _668));
    float _683 = fma(_670, _194 * NORMAL.z, fma(_669, _201 * TANGENT.z, (_187 * _181) * _668));
    float _687 = inversesqrt(dot(vec3(_677, _680, _683), vec3(_677, _680, _683)));
    float _979 = isnan(0.0) ? _652 : (isnan(_652) ? 0.0 : max(_652, 0.0));
    float _990 = isnan(0.0) ? _674 : (isnan(_674) ? 0.0 : max(_674, 0.0));
    float _689 = isnan(1.0) ? _990 : (isnan(_990) ? 1.0 : min(_990, 1.0));
    float _1001 = isnan(0.0) ? _616 : (isnan(_616) ? 0.0 : max(_616, 0.0));
    float _690 = isnan(1.0) ? _1001 : (isnan(_1001) ? 1.0 : min(_1001, 1.0));
    float _1012 = isnan(0.0) ? _617 : (isnan(_617) ? 0.0 : max(_617, 0.0));
    float _691 = isnan(1.0) ? _1012 : (isnan(_1012) ? 1.0 : min(_1012, 1.0));
    float _1023 = isnan(0.0) ? _618 : (isnan(_618) ? 0.0 : max(_618, 0.0));
    float _692 = isnan(1.0) ? _1023 : (isnan(_1023) ? 1.0 : min(_1023, 1.0));
    float _734 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _744 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _734);
    float _745 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _734);
    float _746 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _734);
    vec4 _751 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _753 = _751.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _813 = sqrt(((_744 * _744) + (_745 * _745)) + (_746 * _746));
        float _819 = (cbMatDynParam._m0[5u].x * _813) + cbMatDynParam._m0[5u].y;
        float _1034 = isnan(0.0) ? _819 : (isnan(_819) ? 0.0 : max(_819, 0.0));
        float _820 = isnan(1.0) ? _1034 : (isnan(_1034) ? 1.0 : min(_1034, 1.0));
        float _824 = (cbMatDynParam._m0[5u].z * _813) + cbMatDynParam._m0[5u].w;
        float _1045 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1045 : (isnan(_1045) ? 1.0 : min(_1045, 1.0))) - _820)) + _820) < ((_753 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _851;
    vec4 _775;
    float _782;
    float _783;
    float _784;
    float _785;
    float _789;
    vec4 _793;
    float _795;
    float _796;
    bool _807;
    for (;;)
    {
        _775 = cbInstanceData._m0[(_207 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _779 = (cbMtdParam._m0[0u].x * _690) * _775.x;
        float _780 = (cbMtdParam._m0[0u].y * _691) * _775.y;
        float _781 = (cbMtdParam._m0[0u].z * _692) * _775.z;
        float _1056 = isnan(0.0) ? _779 : (isnan(_779) ? 0.0 : max(_779, 0.0));
        _782 = isnan(1.0) ? _1056 : (isnan(_1056) ? 1.0 : min(_1056, 1.0));
        float _1067 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
        _783 = isnan(1.0) ? _1067 : (isnan(_1067) ? 1.0 : min(_1067, 1.0));
        float _1078 = isnan(0.0) ? _781 : (isnan(_781) ? 0.0 : max(_781, 0.0));
        _784 = isnan(1.0) ? _1078 : (isnan(_1078) ? 1.0 : min(_1078, 1.0));
        _785 = _689 * TEXCOORD_5.w;
        _789 = cbInstanceData._m0[_207 + 6u].w;
        float _790 = _753 + (-0.5);
        _793 = cbMtdParam._m0[1u];
        _795 = _793.y * _790;
        _796 = _790 * 0.999000012874603271484375;
        _807 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_807)
        {
            if ((cbInstanceData._m0[_207 + 7u].x + _796) < 0.5)
            {
                _851 = true;
                break;
            }
        }
        if ((_775.w < 1.0) && ((_775.w + _796) < 0.5))
        {
            _851 = true;
            break;
        }
        if ((_795 + 1.0) < _793.x)
        {
            _851 = true;
            break;
        }
        _851 = false;
        break;
    }
    if (_851)
    {
        discard_state = true;
    }
    bool _877 = cbMtdParam._m0[1u].z != 0.0;
    float _878 = _877 ? _789 : 0.0;
    SV_Target.x = ((_677 * 0.5) * _687) + 0.500488758087158203125;
    SV_Target.y = ((_680 * 0.5) * _687) + 0.500488758087158203125;
    SV_Target.z = ((_683 * 0.5) * _687) + 0.500488758087158203125;
    SV_Target.w = _878;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _979 : (isnan(_979) ? 1.0 : min(_979, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _877 ? _789 : _785;
    SV_Target_2.x = _782;
    SV_Target_2.y = _783;
    SV_Target_2.z = _784;
    SV_Target_2.w = _877 ? _789 : (float(floatBitsToUint(cbInstanceData._m0[_207 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _878;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _878;
    discard_exit();
}


