#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1652;
float _4291;
float _4292;
float _4293;
float _4294;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _252 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _253 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _254 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _260 = inversesqrt(dot(vec3(_252, _253, _254), vec3(_252, _253, _254)));
    float _267 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _274 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _286 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _288 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _289 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4303 = isnan(0.0) ? _286 : (isnan(_286) ? 0.0 : max(_286, 0.0));
    float _4314 = isnan(0.0) ? _288 : (isnan(_288) ? 0.0 : max(_288, 0.0));
    float _4325 = isnan(0.0) ? _289 : (isnan(_289) ? 0.0 : max(_289, 0.0));
    uint _299 = uint(roundEven(NORMAL.w)) * 13u;
    uint _304 = _299 + 1u;
    uint _308 = _299 + 2u;
    float _317 = sqrt(((cbInstanceData._m0[_304].x * cbInstanceData._m0[_304].x) + (cbInstanceData._m0[_299].x * cbInstanceData._m0[_299].x)) + (cbInstanceData._m0[_308].x * cbInstanceData._m0[_308].x));
    float _318 = _317 * TEXCOORD.z;
    float _319 = _317 * TEXCOORD.w;
    vec4 _332 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _318) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _319) + cbTextureTilingScale._m0[13u].w));
    vec4 _355 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _381 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _386 = _381.x * cbMtdParam._m0[11u].x;
    float _387 = _381.y * cbMtdParam._m0[11u].y;
    float _388 = _381.z * cbMtdParam._m0[11u].z;
    vec4 _407 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _318) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _319) + cbTextureTilingScale._m0[5u].w));
    vec4 _426 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _464 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _466 = _464.x;
    float _478 = dot(vec4(_466, _464.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _495 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _426.x) * 2.0) - ((((_466 - _478) * cbMtdParam._m0[24u].z) + _478) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4336 = isnan(0.0) ? _495 : (isnan(_495) ? 0.0 : max(_495, 0.0));
    float _496 = isnan(1.0) ? _4336 : (isnan(_4336) ? 1.0 : min(_4336, 1.0));
    float _503 = (_496 * ((_407.x * cbMtdParam._m0[12u].x) - _386)) + _386;
    float _504 = (_496 * ((_407.y * cbMtdParam._m0[12u].y) - _387)) + _387;
    float _505 = (_496 * ((_407.z * cbMtdParam._m0[12u].z) - _388)) + _388;
    vec4 _522 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _318) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _319) + cbTextureTilingScale._m0[3u].w));
    vec4 _542 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _544 = _542.x;
    float _554 = dot(vec4(_544, _542.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _568 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _426.y) * 2.0) - ((((_544 - _554) * cbMtdParam._m0[24u].z) + _554) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4347 = isnan(0.0) ? _568 : (isnan(_568) ? 0.0 : max(_568, 0.0));
    float _569 = isnan(1.0) ? _4347 : (isnan(_4347) ? 1.0 : min(_4347, 1.0));
    float _576 = (_569 * ((_522.x * cbMtdParam._m0[13u].x) - _503)) + _503;
    float _577 = (_569 * ((_522.y * cbMtdParam._m0[13u].y) - _504)) + _504;
    float _578 = (_569 * ((_522.z * cbMtdParam._m0[13u].z) - _505)) + _505;
    vec4 _596 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _318) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _319) + cbTextureTilingScale._m0[24u].w));
    vec4 _613 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _615 = _613.x;
    float _625 = dot(vec4(_615, _613.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _637 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _426.z) * 2.0) - ((((_615 - _625) * cbMtdParam._m0[24u].z) + _625) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4358 = isnan(0.0) ? _637 : (isnan(_637) ? 0.0 : max(_637, 0.0));
    float _638 = isnan(1.0) ? _4358 : (isnan(_4358) ? 1.0 : min(_4358, 1.0));
    float _648 = (_355.x * cbMtdParam._m0[9u].x) * ((_638 * ((_596.x * cbMtdParam._m0[14u].x) - _576)) + _576);
    float _649 = (_355.y * cbMtdParam._m0[9u].y) * ((_638 * ((_596.y * cbMtdParam._m0[14u].y) - _577)) + _577);
    float _650 = (_355.z * cbMtdParam._m0[9u].z) * ((_638 * ((_596.z * cbMtdParam._m0[14u].z) - _578)) + _578);
    float _654 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _332.x) * _648;
    float _657 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _332.y) * _649;
    float _660 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _332.z) * _650;
    float _668 = (((_648 - _654) * (isnan(1.0) ? _4303 : (isnan(_4303) ? 1.0 : min(_4303, 1.0)))) + _654) * 4.55000019073486328125;
    float _670 = (((_649 - _657) * (isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0)))) + _657) * 4.55000019073486328125;
    float _672 = (((_650 - _660) * (isnan(1.0) ? _4325 : (isnan(_4325) ? 1.0 : min(_4325, 1.0)))) + _660) * 4.55000019073486328125;
    vec4 _690 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _318) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _319) + cbTextureTilingScale._m0[14u].w));
    vec4 _709 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _318) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _319) + cbTextureTilingScale._m0[20u].w));
    vec4 _732 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _318) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _319) + cbTextureTilingScale._m0[4u].w));
    vec4 _749 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _751 = _749.x;
    float _752 = _749.y;
    float _753 = _749.z;
    float _760 = ((_732.x - _751) * _496) + _751;
    float _761 = ((_732.y - _752) * _496) + _752;
    float _762 = ((_732.z - _753) * _496) + _753;
    vec4 _774 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _318) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _319) + cbTextureTilingScale._m0[2u].w));
    float _785 = ((_774.x - _760) * _569) + _760;
    float _786 = ((_774.y - _761) * _569) + _761;
    float _787 = ((_774.z - _762) * _569) + _762;
    vec4 _799 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _318) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _319) + cbTextureTilingScale._m0[23u].w));
    float _812 = ((_799.z - _787) * _638) + _787;
    float _815 = ((((_799.x - _785) * _638) + _785) * 2.0) + (-1.0);
    float _816 = ((((_799.y - _786) * _638) + _786) * 2.0) + (-1.0);
    float _817 = dot(vec2(_815, _816), vec2(_815, _816));
    float _4369 = isnan(0.0) ? _817 : (isnan(_817) ? 0.0 : max(_817, 0.0));
    float _822 = sqrt(1.0 - (isnan(1.0) ? _4369 : (isnan(_4369) ? 1.0 : min(_4369, 1.0))));
    vec4 _836 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _861 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _318) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _319) + cbTextureTilingScale._m0[11u].w));
    float _863 = _861.x;
    float _864 = 1.0 - _863;
    float _870 = isnan(-1.0) ? cbMtdParam._m0[24u].x : (isnan(cbMtdParam._m0[24u].x) ? (-1.0) : max(cbMtdParam._m0[24u].x, -1.0));
    float _873 = ((isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : min(_870, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _882 = (_873 - ((((((_863 - _864) * cbMtdParam._m0[24u].w) + _864) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _873))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4390 = isnan(0.0) ? _882 : (isnan(_882) ? 0.0 : max(_882, 0.0));
    float _883 = isnan(1.0) ? _4390 : (isnan(_4390) ? 1.0 : min(_4390, 1.0));
    float _890 = (_883 * ((_690.x * cbMtdParam._m0[18u].x) - _668)) + _668;
    float _891 = (_883 * ((_690.y * cbMtdParam._m0[18u].y) - _670)) + _670;
    float _892 = (_883 * ((_690.z * cbMtdParam._m0[18u].z) - _672)) + _672;
    float _907 = sqrt(((cbInstanceData._m0[_304].x * cbInstanceData._m0[_304].x) + (cbInstanceData._m0[_299].x * cbInstanceData._m0[_299].x)) + (cbInstanceData._m0[_308].x * cbInstanceData._m0[_308].x));
    float _908 = _907 * TEXCOORD.z;
    float _909 = _907 * TEXCOORD.w;
    vec4 _921 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _908) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _909) + cbTextureTilingScale._m0[19u].w));
    float _923 = _921.x;
    float _924 = 1.0 - _923;
    float _951 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_923 - _924) * cbMtdParam._m0[24u].y) + _924) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4401 = isnan(0.0) ? _951 : (isnan(_951) ? 0.0 : max(_951, 0.0));
    float _952 = isnan(1.0) ? _4401 : (isnan(_4401) ? 1.0 : min(_4401, 1.0));
    float _960 = ((((cbMtdParam._m0[10u].x - _890) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _952) + _890;
    float _961 = ((((cbMtdParam._m0[10u].y - _891) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _952) + _891;
    float _962 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _892)) * _952) + _892;
    float _967 = (((_709.z - _812) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _812;
    float _971 = ((_836.z - _967) * cbMtdParam._m0[19u].w) + _967;
    vec4 _985 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _318) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _319) + cbTextureTilingScale._m0[15u].w));
    float _992 = (_985.x * 2.0) + (-1.0);
    float _993 = (_985.y * 2.0) + (-1.0);
    float _994 = dot(vec2(_992, _993), vec2(_992, _993));
    float _4412 = isnan(0.0) ? _994 : (isnan(_994) ? 0.0 : max(_994, 0.0));
    float _1002 = (_883 * (_985.z - _971)) + _971;
    float _1005 = ((cbMtdParam._m0[23u].y - _1002) * _952) + _1002;
    vec4 _1026 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _908) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _909) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _1032 = (_1026.x * 2.0) + (-1.0);
    float _1033 = (_1026.y * 2.0) + (-1.0);
    float _1034 = dot(vec2(_1032, _1033), vec2(_1032, _1033));
    float _4423 = isnan(0.0) ? _1034 : (isnan(_1034) ? 0.0 : max(_1034, 0.0));
    float _1048 = (_815 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_709.x * 2.0) + (-1.0)))) + (((_836.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _1049 = (_816 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_709.y * 2.0) + (-1.0)))) + (((_836.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _1061 = (((_992 - _1048) + (cbMtdParam._m0[21u].x * _1048)) * _883) + _1048;
    float _1062 = (((_993 - _1049) + (cbMtdParam._m0[21u].x * _1049)) * _883) + _1049;
    float _1063 = (_883 * (sqrt(1.0 - (isnan(1.0) ? _4412 : (isnan(_4412) ? 1.0 : min(_4412, 1.0)))) - _822)) + _822;
    float _1074 = (((_1032 - _1061) + (_1061 * cbMtdParam._m0[22u].z)) * _952) + _1061;
    float _1075 = (((_1033 - _1062) + (_1062 * cbMtdParam._m0[22u].z)) * _952) + _1062;
    float _1076 = ((sqrt(1.0 - (isnan(1.0) ? _4423 : (isnan(_4423) ? 1.0 : min(_4423, 1.0)))) - _1063) * _952) + _1063;
    float _1078 = cbMtdParam._m0[22u].x + _836.w;
    float _1081 = fma(_1076, _267 * NORMAL.x, fma(_1075, _274 * TANGENT.x, (_260 * _252) * _1074));
    float _1084 = fma(_1076, _267 * NORMAL.y, fma(_1075, _274 * TANGENT.y, (_260 * _253) * _1074));
    float _1087 = fma(_1076, _267 * NORMAL.z, fma(_1075, _274 * TANGENT.z, (_260 * _254) * _1074));
    float _1091 = inversesqrt(dot(vec3(_1081, _1084, _1087), vec3(_1081, _1084, _1087)));
    float _1092 = _1091 * _1081;
    float _1093 = _1091 * _1084;
    float _1094 = _1091 * _1087;
    float _4434 = isnan(0.0) ? _1005 : (isnan(_1005) ? 0.0 : max(_1005, 0.0));
    float _1095 = isnan(1.0) ? _4434 : (isnan(_4434) ? 1.0 : min(_4434, 1.0));
    float _4445 = isnan(0.0) ? _1078 : (isnan(_1078) ? 0.0 : max(_1078, 0.0));
    float _4456 = isnan(0.0) ? _960 : (isnan(_960) ? 0.0 : max(_960, 0.0));
    float _4467 = isnan(0.0) ? _961 : (isnan(_961) ? 0.0 : max(_961, 0.0));
    float _4478 = isnan(0.0) ? _962 : (isnan(_962) ? 0.0 : max(_962, 0.0));
    float _1113 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1153 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1163 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1153);
    float _1164 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1153);
    float _1165 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1153);
    float _1169 = inversesqrt(dot(vec3(_1163, _1164, _1165), vec3(_1163, _1164, _1165)));
    float _1170 = _1163 * _1169;
    float _1171 = _1164 * _1169;
    float _1172 = _1165 * _1169;
    vec4 _1177 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1179 = _1177.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1333 = sqrt(((_1163 * _1163) + (_1164 * _1164)) + (_1165 * _1165));
        float _1339 = (cbMatDynParam._m0[5u].x * _1333) + cbMatDynParam._m0[5u].y;
        float _4489 = isnan(0.0) ? _1339 : (isnan(_1339) ? 0.0 : max(_1339, 0.0));
        float _1340 = isnan(1.0) ? _4489 : (isnan(_4489) ? 1.0 : min(_4489, 1.0));
        float _1344 = (cbMatDynParam._m0[5u].z * _1333) + cbMatDynParam._m0[5u].w;
        float _4500 = isnan(0.0) ? _1344 : (isnan(_1344) ? 0.0 : max(_1344, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4500 : (isnan(_4500) ? 1.0 : min(_4500, 1.0))) - _1340)) + _1340) < ((_1179 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1190 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1191 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1209 = fma(_1094, cbSceneParam._m0[5u].z, fma(_1093, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1092));
    float _1212 = fma(_1094, cbSceneParam._m0[6u].z, fma(_1093, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1092));
    float _1215 = fma(_1094, cbSceneParam._m0[7u].z, fma(_1093, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1092));
    uint _1228 = _299 + 9u;
    uint _1229 = _1228 + uint(cbMatDynParam._m0[0u].w);
    float _1235 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4456 : (isnan(_4456) ? 1.0 : min(_4456, 1.0)))) * cbInstanceData._m0[_1229].x;
    float _1236 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4467 : (isnan(_4467) ? 1.0 : min(_4467, 1.0)))) * cbInstanceData._m0[_1229].y;
    float _1237 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4478 : (isnan(_4478) ? 1.0 : min(_4478, 1.0)))) * cbInstanceData._m0[_1229].z;
    float _4511 = isnan(0.0) ? _1235 : (isnan(_1235) ? 0.0 : max(_1235, 0.0));
    float _1238 = isnan(1.0) ? _4511 : (isnan(_4511) ? 1.0 : min(_4511, 1.0));
    float _4522 = isnan(0.0) ? _1236 : (isnan(_1236) ? 0.0 : max(_1236, 0.0));
    float _1239 = isnan(1.0) ? _4522 : (isnan(_4522) ? 1.0 : min(_4522, 1.0));
    float _4533 = isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0));
    float _1240 = isnan(1.0) ? _4533 : (isnan(_4533) ? 1.0 : min(_4533, 1.0));
    vec4 _1249 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1190, cbSceneParam._m0[86u].y * _1191));
    float _1253 = ((isnan(1.0) ? _4445 : (isnan(_4445) ? 1.0 : min(_4445, 1.0))) * TEXCOORD_5.w) * _1249.x;
    float _1254 = dot(vec3(_1092, _1093, _1094), vec3(_1170, _1171, _1172));
    float _1257 = _1254 * 2.0;
    float _1261 = (_1257 * _1092) - _1170;
    float _1262 = (_1257 * _1093) - _1171;
    float _1263 = (_1257 * _1094) - _1172;
    float _1267 = abs(dot(vec3(_1170, _1171, _1172), vec3(_1092, _1093, _1094)));
    float _4544 = isnan(0.0) ? _1267 : (isnan(_1267) ? 0.0 : max(_1267, 0.0));
    float _1269 = sqrt(_1095);
    float _1282 = exp2((_1269 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4544 : (isnan(_4544) ? 1.0 : min(_4544, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1269 * 3.0));
    float _1314 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1318 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1322 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1651;
    float _1653;
    float _1654;
    float _1655;
    float _1656;
    float _1657;
    float _1658;
    float _1659;
    float _1660;
    float _1661;
    float _1662;
    float _1663;
    float _1664;
    float _1665;
    float _1666;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1376 = fma(_1322, cbModelParam._m0[26u].z, fma(_1318, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1314));
        float _1380 = fma(_1322, cbModelParam._m0[27u].z, fma(_1318, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1314));
        float _1384 = fma(_1322, cbModelParam._m0[28u].z, fma(_1318, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1314));
        float _1409 = _1314 + _1092;
        float _1410 = _1318 + _1093;
        float _1411 = _1322 + _1094;
        float _1421 = fma(_1411, cbModelParam._m0[26u].z, fma(_1410, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1409)) - _1376;
        float _1422 = fma(_1411, cbModelParam._m0[27u].z, fma(_1410, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1409)) - _1380;
        float _1423 = fma(_1411, cbModelParam._m0[28u].z, fma(_1410, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1409)) - _1384;
        float _1427 = inversesqrt(dot(vec3(_1421, _1422, _1423), vec3(_1421, _1422, _1423)));
        float _1440 = ((_1427 * _1421) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1376 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1441 = ((_1427 * _1422) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1380 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1442 = ((_1427 * _1423) / cbModelParam._m0[34u].z) + ((((((_1384 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1445 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1440, _1441, _1442), 0.0);
        vec4 _1452 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1440, _1441, _1442), 0.0);
        vec4 _1459 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1440, _1441, _1442), 0.0);
        vec4 _1466 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1440, _1441, _1442), 0.0);
        float _1479 = exp2((_1445.w + (-0.5)) * 20.0) * 2.0;
        float _1480 = _1479 * (_1445.x + (-0.5));
        float _1481 = _1479 * (_1445.y + (-0.5));
        float _1482 = _1479 * (_1445.z + (-0.5));
        float _1489 = exp2((_1452.w + (-0.5)) * 20.0) * 2.0;
        float _1490 = _1489 * (_1452.x + (-0.5));
        float _1491 = _1489 * (_1452.y + (-0.5));
        float _1492 = _1489 * (_1452.z + (-0.5));
        float _1499 = exp2((_1459.w + (-0.5)) * 20.0) * 2.0;
        float _1500 = _1499 * (_1459.x + (-0.5));
        float _1501 = _1499 * (_1459.y + (-0.5));
        float _1502 = _1499 * (_1459.z + (-0.5));
        float _1509 = exp2((_1466.w + (-0.5)) * 20.0) * 2.0;
        float _1510 = _1509 * (_1466.x + (-0.5));
        float _1511 = _1509 * (_1466.y + (-0.5));
        float _1512 = _1509 * (_1466.z + (-0.5));
        float _1513 = isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0));
        float _1514 = isnan(0.0) ? _1511 : (isnan(_1511) ? 0.0 : max(_1511, 0.0));
        float _1515 = isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0));
        float _1516 = _1480 * 0.5;
        float _1517 = _1490 * 0.5;
        float _1518 = _1500 * 0.5;
        float _1519 = dot(vec3(_1516, _1517, _1518), vec3(_1516, _1517, _1518));
        float _1524 = (_1519 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1519);
        float _1533 = (dot(vec3(_1092, _1093, _1094), vec3(_1524 * _1516, _1524 * _1517, _1524 * _1518)) + 1.0) * 0.5;
        float _4570 = isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0));
        float _1543 = sqrt(((_1517 * _1517) + (_1516 * _1516)) + (_1518 * _1518)) / (_1513 + 9.9999997473787516355514526367188e-06);
        float _4581 = isnan(0.0) ? _1543 : (isnan(_1543) ? 0.0 : max(_1543, 0.0));
        float _1544 = isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0));
        float _1545 = _1544 * 2.0;
        float _1549 = (1.0 - _1544) / (_1544 + 1.0);
        float _4592 = isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0));
        float _1550 = isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0));
        float _1559 = ((((1.0 - _1550) * (_1545 + 2.0)) * exp2(log2(isnan(1.0) ? _4570 : (isnan(_4570) ? 1.0 : min(_4570, 1.0))) * (_1545 + 1.0))) + _1550) * _1513;
        float _1560 = _1481 * 0.5;
        float _1561 = _1491 * 0.5;
        float _1562 = _1501 * 0.5;
        float _1563 = dot(vec3(_1560, _1561, _1562), vec3(_1560, _1561, _1562));
        float _1568 = (_1563 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1563);
        float _1576 = (dot(vec3(_1092, _1093, _1094), vec3(_1568 * _1560, _1568 * _1561, _1568 * _1562)) + 1.0) * 0.5;
        float _4603 = isnan(0.0) ? _1576 : (isnan(_1576) ? 0.0 : max(_1576, 0.0));
        float _1585 = sqrt(((_1561 * _1561) + (_1560 * _1560)) + (_1562 * _1562)) / (_1514 + 9.9999997473787516355514526367188e-06);
        float _4614 = isnan(0.0) ? _1585 : (isnan(_1585) ? 0.0 : max(_1585, 0.0));
        float _1586 = isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0));
        float _1587 = _1586 * 2.0;
        float _1591 = (1.0 - _1586) / (_1586 + 1.0);
        float _4625 = isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0));
        float _1592 = isnan(1.0) ? _4625 : (isnan(_4625) ? 1.0 : min(_4625, 1.0));
        float _1601 = ((((1.0 - _1592) * (_1587 + 2.0)) * exp2(log2(isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0))) * (_1587 + 1.0))) + _1592) * _1514;
        float _1602 = _1482 * 0.5;
        float _1603 = _1492 * 0.5;
        float _1604 = _1502 * 0.5;
        float _1605 = dot(vec3(_1602, _1603, _1604), vec3(_1602, _1603, _1604));
        float _1610 = (_1605 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1605);
        float _1618 = (dot(vec3(_1092, _1093, _1094), vec3(_1610 * _1602, _1610 * _1603, _1610 * _1604)) + 1.0) * 0.5;
        float _4636 = isnan(0.0) ? _1618 : (isnan(_1618) ? 0.0 : max(_1618, 0.0));
        float _1627 = sqrt(((_1603 * _1603) + (_1602 * _1602)) + (_1604 * _1604)) / (_1515 + 9.9999997473787516355514526367188e-06);
        float _4647 = isnan(0.0) ? _1627 : (isnan(_1627) ? 0.0 : max(_1627, 0.0));
        float _1628 = isnan(1.0) ? _4647 : (isnan(_4647) ? 1.0 : min(_4647, 1.0));
        float _1629 = _1628 * 2.0;
        float _1633 = (1.0 - _1628) / (_1628 + 1.0);
        float _4658 = isnan(0.0) ? _1633 : (isnan(_1633) ? 0.0 : max(_1633, 0.0));
        float _1634 = isnan(1.0) ? _4658 : (isnan(_4658) ? 1.0 : min(_4658, 1.0));
        float _1643 = ((((1.0 - _1634) * (_1629 + 2.0)) * exp2(log2(isnan(1.0) ? _4636 : (isnan(_4636) ? 1.0 : min(_4636, 1.0))) * (_1629 + 1.0))) + _1634) * _1515;
        _1651 = _1482;
        _1653 = _1481;
        _1654 = _1480;
        _1655 = _1492;
        _1656 = _1491;
        _1657 = _1490;
        _1658 = _1502;
        _1659 = _1501;
        _1660 = _1500;
        _1661 = _1515;
        _1662 = _1514;
        _1663 = _1513;
        _1664 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1559 : (isnan(_1559) ? 0.0 : max(_1559, 0.0)));
        _1665 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1601 : (isnan(_1601) ? 0.0 : max(_1601, 0.0)));
        _1666 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1643 : (isnan(_1643) ? 0.0 : max(_1643, 0.0)));
    }
    else
    {
        _1651 = _1652;
        _1653 = _1652;
        _1654 = _1652;
        _1655 = _1652;
        _1656 = _1652;
        _1657 = _1652;
        _1658 = _1652;
        _1659 = _1652;
        _1660 = _1652;
        _1661 = _1652;
        _1662 = _1652;
        _1663 = _1652;
        _1664 = 0.0;
        _1665 = 0.0;
        _1666 = 0.0;
    }
    float _1961;
    float _1962;
    float _1963;
    float _1964;
    float _1965;
    float _1966;
    float _1967;
    float _1968;
    float _1969;
    float _1970;
    float _1971;
    float _1972;
    float _1973;
    float _1974;
    float _1975;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1692 = fma(_1322, cbModelParam._m0[30u].z, fma(_1318, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1314));
        float _1696 = fma(_1322, cbModelParam._m0[31u].z, fma(_1318, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1314));
        float _1700 = fma(_1322, cbModelParam._m0[32u].z, fma(_1318, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1314));
        float _1723 = _1314 + _1092;
        float _1724 = _1318 + _1093;
        float _1725 = _1322 + _1094;
        float _1735 = fma(_1725, cbModelParam._m0[30u].z, fma(_1724, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1723)) - _1692;
        float _1736 = fma(_1725, cbModelParam._m0[31u].z, fma(_1724, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1723)) - _1696;
        float _1737 = fma(_1725, cbModelParam._m0[32u].z, fma(_1724, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1723)) - _1700;
        float _1741 = inversesqrt(dot(vec3(_1735, _1736, _1737), vec3(_1735, _1736, _1737)));
        float _1754 = ((_1741 * _1735) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1692 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1755 = ((_1741 * _1736) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1696 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1756 = ((_1741 * _1737) / cbModelParam._m0[35u].z) + ((((((_1700 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1758 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1754, _1755, _1756), 0.0);
        vec4 _1765 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1754, _1755, _1756), 0.0);
        vec4 _1772 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1754, _1755, _1756), 0.0);
        vec4 _1779 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1754, _1755, _1756), 0.0);
        float _1791 = exp2((_1758.w + (-0.5)) * 20.0) * 2.0;
        float _1792 = _1791 * (_1758.x + (-0.5));
        float _1793 = _1791 * (_1758.y + (-0.5));
        float _1794 = _1791 * (_1758.z + (-0.5));
        float _1801 = exp2((_1765.w + (-0.5)) * 20.0) * 2.0;
        float _1802 = _1801 * (_1765.x + (-0.5));
        float _1803 = _1801 * (_1765.y + (-0.5));
        float _1804 = _1801 * (_1765.z + (-0.5));
        float _1811 = exp2((_1772.w + (-0.5)) * 20.0) * 2.0;
        float _1812 = _1811 * (_1772.x + (-0.5));
        float _1813 = _1811 * (_1772.y + (-0.5));
        float _1814 = _1811 * (_1772.z + (-0.5));
        float _1821 = exp2((_1779.w + (-0.5)) * 20.0) * 2.0;
        float _1822 = _1821 * (_1779.x + (-0.5));
        float _1823 = _1821 * (_1779.y + (-0.5));
        float _1824 = _1821 * (_1779.z + (-0.5));
        float _1825 = isnan(0.0) ? _1822 : (isnan(_1822) ? 0.0 : max(_1822, 0.0));
        float _1826 = isnan(0.0) ? _1823 : (isnan(_1823) ? 0.0 : max(_1823, 0.0));
        float _1827 = isnan(0.0) ? _1824 : (isnan(_1824) ? 0.0 : max(_1824, 0.0));
        float _1828 = _1792 * 0.5;
        float _1829 = _1802 * 0.5;
        float _1830 = _1812 * 0.5;
        float _1831 = dot(vec3(_1828, _1829, _1830), vec3(_1828, _1829, _1830));
        float _1836 = (_1831 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1831);
        float _1844 = (dot(vec3(_1092, _1093, _1094), vec3(_1836 * _1828, _1836 * _1829, _1836 * _1830)) + 1.0) * 0.5;
        float _4699 = isnan(0.0) ? _1844 : (isnan(_1844) ? 0.0 : max(_1844, 0.0));
        float _1853 = sqrt(((_1829 * _1829) + (_1828 * _1828)) + (_1830 * _1830)) / (_1825 + 9.9999997473787516355514526367188e-06);
        float _4710 = isnan(0.0) ? _1853 : (isnan(_1853) ? 0.0 : max(_1853, 0.0));
        float _1854 = isnan(1.0) ? _4710 : (isnan(_4710) ? 1.0 : min(_4710, 1.0));
        float _1855 = _1854 * 2.0;
        float _1859 = (1.0 - _1854) / (_1854 + 1.0);
        float _4721 = isnan(0.0) ? _1859 : (isnan(_1859) ? 0.0 : max(_1859, 0.0));
        float _1860 = isnan(1.0) ? _4721 : (isnan(_4721) ? 1.0 : min(_4721, 1.0));
        float _1869 = ((((1.0 - _1860) * (_1855 + 2.0)) * exp2(log2(isnan(1.0) ? _4699 : (isnan(_4699) ? 1.0 : min(_4699, 1.0))) * (_1855 + 1.0))) + _1860) * _1825;
        float _1870 = _1793 * 0.5;
        float _1871 = _1803 * 0.5;
        float _1872 = _1813 * 0.5;
        float _1873 = dot(vec3(_1870, _1871, _1872), vec3(_1870, _1871, _1872));
        float _1878 = (_1873 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1873);
        float _1886 = (dot(vec3(_1092, _1093, _1094), vec3(_1878 * _1870, _1878 * _1871, _1878 * _1872)) + 1.0) * 0.5;
        float _4732 = isnan(0.0) ? _1886 : (isnan(_1886) ? 0.0 : max(_1886, 0.0));
        float _1895 = sqrt(((_1871 * _1871) + (_1870 * _1870)) + (_1872 * _1872)) / (_1826 + 9.9999997473787516355514526367188e-06);
        float _4743 = isnan(0.0) ? _1895 : (isnan(_1895) ? 0.0 : max(_1895, 0.0));
        float _1896 = isnan(1.0) ? _4743 : (isnan(_4743) ? 1.0 : min(_4743, 1.0));
        float _1897 = _1896 * 2.0;
        float _1901 = (1.0 - _1896) / (_1896 + 1.0);
        float _4754 = isnan(0.0) ? _1901 : (isnan(_1901) ? 0.0 : max(_1901, 0.0));
        float _1902 = isnan(1.0) ? _4754 : (isnan(_4754) ? 1.0 : min(_4754, 1.0));
        float _1911 = ((((1.0 - _1902) * (_1897 + 2.0)) * exp2(log2(isnan(1.0) ? _4732 : (isnan(_4732) ? 1.0 : min(_4732, 1.0))) * (_1897 + 1.0))) + _1902) * _1826;
        float _1912 = _1794 * 0.5;
        float _1913 = _1804 * 0.5;
        float _1914 = _1814 * 0.5;
        float _1915 = dot(vec3(_1912, _1913, _1914), vec3(_1912, _1913, _1914));
        float _1920 = (_1915 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1915);
        float _1928 = (dot(vec3(_1092, _1093, _1094), vec3(_1920 * _1912, _1920 * _1913, _1920 * _1914)) + 1.0) * 0.5;
        float _4765 = isnan(0.0) ? _1928 : (isnan(_1928) ? 0.0 : max(_1928, 0.0));
        float _1937 = sqrt(((_1913 * _1913) + (_1912 * _1912)) + (_1914 * _1914)) / (_1827 + 9.9999997473787516355514526367188e-06);
        float _4776 = isnan(0.0) ? _1937 : (isnan(_1937) ? 0.0 : max(_1937, 0.0));
        float _1938 = isnan(1.0) ? _4776 : (isnan(_4776) ? 1.0 : min(_4776, 1.0));
        float _1939 = _1938 * 2.0;
        float _1943 = (1.0 - _1938) / (_1938 + 1.0);
        float _4787 = isnan(0.0) ? _1943 : (isnan(_1943) ? 0.0 : max(_1943, 0.0));
        float _1944 = isnan(1.0) ? _4787 : (isnan(_4787) ? 1.0 : min(_4787, 1.0));
        float _1953 = ((((1.0 - _1944) * (_1939 + 2.0)) * exp2(log2(isnan(1.0) ? _4765 : (isnan(_4765) ? 1.0 : min(_4765, 1.0))) * (_1939 + 1.0))) + _1944) * _1827;
        _1961 = _1794;
        _1962 = _1793;
        _1963 = _1792;
        _1964 = _1804;
        _1965 = _1803;
        _1966 = _1802;
        _1967 = _1814;
        _1968 = _1813;
        _1969 = _1812;
        _1970 = _1827;
        _1971 = _1826;
        _1972 = _1825;
        _1973 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1869 : (isnan(_1869) ? 0.0 : max(_1869, 0.0)));
        _1974 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1911 : (isnan(_1911) ? 0.0 : max(_1911, 0.0)));
        _1975 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1953 : (isnan(_1953) ? 0.0 : max(_1953, 0.0)));
    }
    else
    {
        _1961 = _1652;
        _1962 = _1652;
        _1963 = _1652;
        _1964 = _1652;
        _1965 = _1652;
        _1966 = _1652;
        _1967 = _1652;
        _1968 = _1652;
        _1969 = _1652;
        _1970 = _1652;
        _1971 = _1652;
        _1972 = _1652;
        _1973 = 0.0;
        _1974 = 0.0;
        _1975 = 0.0;
    }
    float _1985 = (cbModelParam._m0[1u].x * (_1973 - _1664)) + _1664;
    float _1986 = (cbModelParam._m0[1u].x * (_1974 - _1665)) + _1665;
    float _1987 = (cbModelParam._m0[1u].x * (_1975 - _1666)) + _1666;
    float _2008 = fma(_1987, cbSceneParam._m0[89u].z, fma(_1986, cbSceneParam._m0[89u].y, _1985 * cbSceneParam._m0[89u].x));
    float _2011 = fma(_1987, cbSceneParam._m0[90u].z, fma(_1986, cbSceneParam._m0[90u].y, _1985 * cbSceneParam._m0[90u].x));
    float _2014 = fma(_1987, cbSceneParam._m0[91u].z, fma(_1986, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1985));
    float _2029 = _1261 * 0.5;
    float _2030 = _1262 * 0.5;
    float _2031 = _1263 * 0.5;
    float _2032 = dot(vec4(_2029, _2030, _2031, 1.0), vec4(_1963, _1966, _1969, _1972));
    float _2035 = dot(vec4(_2029, _2030, _2031, 1.0), vec4(_1962, _1965, _1968, _1971));
    float _2038 = dot(vec4(_2029, _2030, _2031, 1.0), vec4(_1961, _1964, _1967, _1970));
    float _2072;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2045 = dot(vec4(_2029, _2030, _2031, 1.0), vec4(_1651, _1655, _1658, _1661));
        float _2049 = dot(vec4(_2029, _2030, _2031, 1.0), vec4(_1653, _1656, _1659, _1662));
        float _2053 = dot(vec4(_2029, _2030, _2031, 1.0), vec4(_1654, _1657, _1660, _1663));
        float _2060 = dot(vec4(cbModelParam._m0[39u]), vec4(_2029, _2030, _2031, 1.0));
        _2072 = dot(vec3(isnan(0.0) ? _2053 : (isnan(_2053) ? 0.0 : max(_2053, 0.0)), isnan(0.0) ? _2049 : (isnan(_2049) ? 0.0 : max(_2049, 0.0)), isnan(0.0) ? _2045 : (isnan(_2045) ? 0.0 : max(_2045, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2060) ? 0.0 : (isnan(0.0) ? _2060 : max(0.0, _2060))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2072 = 1.0;
    }
    float _2083;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2074 = dot(vec4(cbModelParam._m0[40u]), vec4(_2029, _2030, _2031, 1.0));
        _2083 = dot(vec3(isnan(0.0) ? _2032 : (isnan(_2032) ? 0.0 : max(_2032, 0.0)), isnan(0.0) ? _2035 : (isnan(_2035) ? 0.0 : max(_2035, 0.0)), isnan(0.0) ? _2038 : (isnan(_2038) ? 0.0 : max(_2038, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2074) ? 0.0 : (isnan(0.0) ? _2074 : max(0.0, _2074))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2083 = 1.0;
    }
    float _2087 = (_2083 * cbModelParam._m0[1u].x) + (_2072 * (1.0 - cbModelParam._m0[1u].x));
    float _2097 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1095);
    float _2098 = isnan(_2097) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2097 : min(cbModelParam._m0[25u].z, _2097));
    float _2178;
    float _2180;
    float _2182;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2145 = fma(_1322, cbModelParam._m0[13u].z, fma(_1318, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1314)) + cbModelParam._m0[13u].w;
        float _2149 = fma(_1322, cbModelParam._m0[14u].z, fma(_1318, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1314)) + cbModelParam._m0[14u].w;
        float _2153 = fma(_1322, cbModelParam._m0[15u].z, fma(_1318, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1314)) + cbModelParam._m0[15u].w;
        float _2156 = fma(_1263, cbModelParam._m0[13u].z, fma(_1262, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1261));
        float _2159 = fma(_1263, cbModelParam._m0[14u].z, fma(_1262, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1261));
        float _2162 = fma(_1263, cbModelParam._m0[15u].z, fma(_1262, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1261));
        float _2190;
        if (_2156 > 0.0)
        {
            _2190 = abs((1.0 - _2145) / _2156);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_2156 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_2145 + 1.0) / _2156);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _2190 = frontier_phi_17_15_ladder;
        }
        float _2359;
        if (_2159 > 0.0)
        {
            _2359 = abs((1.0 - _2149) / _2159);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_2159 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_2149 + 1.0) / _2159);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2359 = frontier_phi_26_22_ladder;
        }
        float _2654;
        if (_2162 > 0.0)
        {
            _2654 = abs((1.0 - _2153) / _2162);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_2162 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_2153 + 1.0) / _2162);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2654 = frontier_phi_38_33_ladder;
        }
        float _2656 = isnan(_2359) ? _2190 : (isnan(_2190) ? _2359 : min(_2190, _2359));
        float _2657 = isnan(_2654) ? _2656 : (isnan(_2656) ? _2654 : min(_2656, _2654));
        float _2661 = (_2657 * _2156) + _2145;
        float _2662 = (_2657 * _2159) + _2149;
        float _2663 = (_2657 * _2162) + _2153;
        float _2664 = _2657 * 9.9999997473787516355514526367188e-05;
        float _2666 = (-1.0) - _2664;
        float _2668 = _2664 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2663 > _2668) || ((_2663 < _2666) || ((_2662 > _2668) || ((_2662 < _2666) || ((_2661 < _2666) || (_2661 > _2668))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2808 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2663, cbModelParam._m0[9u].z, fma(_2662, cbModelParam._m0[9u].y, _2661 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2663, cbModelParam._m0[10u].z, fma(_2662, cbModelParam._m0[10u].y, _2661 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2663, cbModelParam._m0[11u].z, fma(_2662, cbModelParam._m0[11u].y, _2661 * cbModelParam._m0[11u].x))), _2098);
            frontier_phi_16_38_ladder = _2808.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2808.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2808.x * cbModelParam._m0[1u].y;
        }
        _2178 = frontier_phi_16_38_ladder_2;
        _2180 = frontier_phi_16_38_ladder_1;
        _2182 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _2166 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1261, _1262, _1263), _2098);
        _2178 = _2166.x * cbModelParam._m0[1u].y;
        _2180 = _2166.y * cbModelParam._m0[1u].y;
        _2182 = _2166.z * cbModelParam._m0[1u].y;
    }
    float _2186 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1095);
    float _2187 = isnan(_2186) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2186 : min(cbModelParam._m0[25u].w, _2186));
    float _2276;
    float _2278;
    float _2280;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2240 = fma(_1322, cbModelParam._m0[21u].z, fma(_1318, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1314)) + cbModelParam._m0[21u].w;
        float _2244 = fma(_1322, cbModelParam._m0[22u].z, fma(_1318, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1314)) + cbModelParam._m0[22u].w;
        float _2248 = fma(_1322, cbModelParam._m0[23u].z, fma(_1318, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1314)) + cbModelParam._m0[23u].w;
        float _2251 = fma(_1263, cbModelParam._m0[21u].z, fma(_1262, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1261));
        float _2254 = fma(_1263, cbModelParam._m0[22u].z, fma(_1262, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1261));
        float _2257 = fma(_1263, cbModelParam._m0[23u].z, fma(_1262, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1261));
        float _2364;
        if (_2251 > 0.0)
        {
            _2364 = abs((1.0 - _2240) / _2251);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2251 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2240 + 1.0) / _2251);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2364 = frontier_phi_28_24_ladder;
        }
        float _2681;
        if (_2254 > 0.0)
        {
            _2681 = abs((1.0 - _2244) / _2254);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2254 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2244 + 1.0) / _2254);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2681 = frontier_phi_40_35_ladder;
        }
        float _3008;
        if (_2257 > 0.0)
        {
            _3008 = abs((1.0 - _2248) / _2257);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_2257 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_2248 + 1.0) / _2257);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _3008 = frontier_phi_50_47_ladder;
        }
        float _3010 = isnan(_2681) ? _2364 : (isnan(_2364) ? _2681 : min(_2364, _2681));
        float _3011 = isnan(_3008) ? _3010 : (isnan(_3010) ? _3008 : min(_3010, _3008));
        float _3015 = (_3011 * _2251) + _2240;
        float _3016 = (_3011 * _2254) + _2244;
        float _3017 = (_3011 * _2257) + _2248;
        float _3018 = _3011 * 9.9999997473787516355514526367188e-05;
        float _3019 = (-1.0) - _3018;
        float _3021 = _3018 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_3017 > _3021) || ((_3017 < _3019) || ((_3016 > _3021) || ((_3016 < _3019) || ((_3015 < _3019) || (_3015 > _3021))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3135 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3017, cbModelParam._m0[17u].z, fma(_3016, cbModelParam._m0[17u].y, _3015 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3017, cbModelParam._m0[18u].z, fma(_3016, cbModelParam._m0[18u].y, _3015 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3017, cbModelParam._m0[19u].z, fma(_3016, cbModelParam._m0[19u].y, _3015 * cbModelParam._m0[19u].x))), _2187);
            frontier_phi_25_50_ladder = _3135.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _3135.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _3135.x * cbModelParam._m0[1u].z;
        }
        _2276 = frontier_phi_25_50_ladder_2;
        _2278 = frontier_phi_25_50_ladder_1;
        _2280 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _2260 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1261, _1262, _1263), _2187);
        _2276 = _2260.x * cbModelParam._m0[1u].z;
        _2278 = _2260.y * cbModelParam._m0[1u].z;
        _2280 = _2260.z * cbModelParam._m0[1u].z;
    }
    float _2292 = ((((1.0 - _1282) * ((_1269 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1282 * _1269)) * _1253;
    float _2293 = _2292 * ((cbModelParam._m0[1u].w * (_2276 - _2178)) + _2178);
    float _2294 = _2292 * ((cbModelParam._m0[1u].w * (_2278 - _2180)) + _2180);
    float _2295 = _2292 * ((cbModelParam._m0[1u].w * (_2280 - _2182)) + _2182);
    float _2298 = fma(_2295, cbSceneParam._m0[89u].z, fma(_2294, cbSceneParam._m0[89u].y, _2293 * cbSceneParam._m0[89u].x));
    float _2301 = fma(_2295, cbSceneParam._m0[90u].z, fma(_2294, cbSceneParam._m0[90u].y, _2293 * cbSceneParam._m0[90u].x));
    float _2304 = fma(_2295, cbSceneParam._m0[91u].z, fma(_2294, cbSceneParam._m0[91u].y, _2293 * cbSceneParam._m0[91u].x));
    float _2338 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2342 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2346 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2350 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2351 = _2338 / _2350;
    float _2352 = _2342 / _2350;
    float _2353 = _2346 / _2350;
    float _2500;
    float _2501;
    float _2502;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2380 = ((uint(_2353 > cbSceneParam._m0[59u].y) + uint(_2353 > cbSceneParam._m0[59u].x)) + uint(_2353 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2381 = _2380 + 43u;
        uint _2389 = _2380 + 44u;
        uint _2397 = _2380 + 45u;
        uint _2405 = _2380 + 46u;
        float _2416 = fma(_2350, cbSceneParam._m0[_2381].w, fma(_2346, cbSceneParam._m0[_2381].z, fma(_2342, cbSceneParam._m0[_2381].y, _2338 * cbSceneParam._m0[_2381].x)));
        float _2420 = fma(_2350, cbSceneParam._m0[_2389].w, fma(_2346, cbSceneParam._m0[_2389].z, fma(_2342, cbSceneParam._m0[_2389].y, _2338 * cbSceneParam._m0[_2389].x)));
        float _2428 = fma(_2350, cbSceneParam._m0[_2405].w, fma(_2346, cbSceneParam._m0[_2405].z, fma(_2342, cbSceneParam._m0[_2405].y, _2338 * cbSceneParam._m0[_2405].x)));
        float _2433 = cbSceneParam._m0[33u].z * _2428;
        float _2435 = cbSceneParam._m0[33u].w * _2428;
        float _2438 = fma(_2350, cbSceneParam._m0[_2397].w, fma(_2346, cbSceneParam._m0[_2397].z, fma(_2342, cbSceneParam._m0[_2397].y, _2338 * cbSceneParam._m0[_2397].x))) / _2428;
        float _2486 = (cbSceneParam._m0[33u].x - sqrt(((_2352 * _2352) + (_2351 * _2351)) + (_2353 * _2353))) * cbSceneParam._m0[33u].y;
        float _4913 = isnan(0.0) ? _2486 : (isnan(_2486) ? 0.0 : max(_2486, 0.0));
        float _2493 = (isnan(1.0) ? _4913 : (isnan(_4913) ? 1.0 : min(_4913, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2433 + _2416) / _2428, (_2435 + _2420) / _2428), _2438), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2435 + _2416) / _2428, (_2420 - _2433) / _2428), _2438), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2416 - _2433) / _2428, (_2420 - _2435) / _2428), _2438), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2416 - _2435) / _2428, (_2433 + _2420) / _2428), _2438), 0.0)).x), vec4(0.25)));
        _2500 = 1.0 - (_2493 * cbSceneParam._m0[34u].x);
        _2501 = 1.0 - (_2493 * cbSceneParam._m0[34u].y);
        _2502 = 1.0 - (_2493 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2500 = 1.0;
        _2501 = 1.0;
        _2502 = 1.0;
    }
    float _2566;
    float _2568;
    float _2570;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2554 = fma(_2350, cbSceneParam._m0[63u].w, fma(_2346, cbSceneParam._m0[63u].z, fma(_2342, cbSceneParam._m0[63u].y, _2338 * cbSceneParam._m0[63u].x)));
        float _2555 = fma(_2350, cbSceneParam._m0[60u].w, fma(_2346, cbSceneParam._m0[60u].z, fma(_2342, cbSceneParam._m0[60u].y, _2338 * cbSceneParam._m0[60u].x))) / _2554;
        float _2556 = fma(_2350, cbSceneParam._m0[61u].w, fma(_2346, cbSceneParam._m0[61u].z, fma(_2342, cbSceneParam._m0[61u].y, _2338 * cbSceneParam._m0[61u].x))) / _2554;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2555 >= cbSceneParam._m0[64u].x) && (_2556 >= cbSceneParam._m0[64u].y)) && (_2555 <= cbSceneParam._m0[64u].z)) && (_2556 <= cbSceneParam._m0[64u].w))
        {
            float _2694 = fma(_2350, cbSceneParam._m0[62u].w, fma(_2346, cbSceneParam._m0[62u].z, fma(_2342, cbSceneParam._m0[62u].y, _2338 * cbSceneParam._m0[62u].x))) / _2554;
            float _2698 = isnan(cbSceneParam._m0[41u].w) ? _2694 : (isnan(_2694) ? cbSceneParam._m0[41u].w : max(_2694, cbSceneParam._m0[41u].w));
            float _2741 = (cbSceneParam._m0[33u].x - sqrt(((_2352 * _2352) + (_2351 * _2351)) + (_2353 * _2353))) * cbSceneParam._m0[33u].y;
            float _4929 = isnan(0.0) ? _2741 : (isnan(_2741) ? 0.0 : max(_2741, 0.0));
            float _2748 = (isnan(1.0) ? _4929 : (isnan(_4929) ? 1.0 : min(_4929, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2555, cbSceneParam._m0[33u].w + _2556), _2698), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2555, _2556 - cbSceneParam._m0[33u].z), _2698), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2555 - cbSceneParam._m0[33u].z, _2556 - cbSceneParam._m0[33u].w), _2698), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2555 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2556), _2698), 0.0)).x), vec4(0.25)));
            float _2752 = 1.0 - (_2748 * cbSceneParam._m0[34u].x);
            float _2753 = 1.0 - (_2748 * cbSceneParam._m0[34u].y);
            float _2754 = 1.0 - (_2748 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2754) ? _2502 : (isnan(_2502) ? _2754 : min(_2502, _2754));
            frontier_phi_37_36_ladder_1 = isnan(_2753) ? _2501 : (isnan(_2501) ? _2753 : min(_2501, _2753));
            frontier_phi_37_36_ladder_2 = isnan(_2752) ? _2500 : (isnan(_2500) ? _2752 : min(_2500, _2752));
        }
        else
        {
            frontier_phi_37_36_ladder = _2502;
            frontier_phi_37_36_ladder_1 = _2501;
            frontier_phi_37_36_ladder_2 = _2500;
        }
        _2566 = frontier_phi_37_36_ladder_2;
        _2568 = frontier_phi_37_36_ladder_1;
        _2570 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2566 = _2500;
        _2568 = _2501;
        _2570 = _2502;
    }
    uvec4 _2575 = floatBitsToUint(cbInstanceData._m0[_299 + 5u]);
    uint _2577 = _2575.x * 14u;
    uint _2578 = _2577 + 13u;
    float _2585 = _1253 + (-1.0);
    float _2590 = (cbLight._m0[_2578].x * _2585) + 1.0;
    float _2591 = (cbLight._m0[_2578].y * _2585) + 1.0;
    float _2592 = (cbLight._m0[_2578].z * _2585) + 1.0;
    float _2593 = (cbLight._m0[_2578].w * _2585) + 1.0;
    uint _2594 = _2577 + 5u;
    float _2600 = isnan(1.0) ? _2591 : (isnan(_2591) ? 1.0 : min(_2591, 1.0));
    uint _2604 = _2577 + 4u;
    float _2613 = isnan(1.0) ? _2590 : (isnan(_2590) ? 1.0 : min(_2590, 1.0));
    uint _2617 = _2577 | 1u;
    float _2628 = dot(vec3(cbLight._m0[_2577].xyz), vec3(_1092, _1093, _1094));
    float _2631 = dot(vec3(cbLight._m0[_2617].xyz), vec3(_1092, _1093, _1094));
    float _4965 = isnan(0.0) ? _2628 : (isnan(_2628) ? 0.0 : max(_2628, 0.0));
    float _4976 = isnan(0.0) ? _2631 : (isnan(_2631) ? 0.0 : max(_2631, 0.0));
    float _2636 = (isnan(1.0) ? _4965 : (isnan(_4965) ? 1.0 : min(_4965, 1.0))) * 0.3183098733425140380859375;
    float _2638 = (isnan(1.0) ? _4976 : (isnan(_4976) ? 1.0 : min(_4976, 1.0))) * 0.3183098733425140380859375;
    float _2645 = ((cbLight._m0[_2594].x * _2600) * _2638) + (((cbLight._m0[_2604].x * _2566) * _2613) * _2636);
    float _2646 = ((_2600 * cbLight._m0[_2594].y) * _2638) + (((cbLight._m0[_2604].y * _2568) * _2613) * _2636);
    float _2647 = ((_2600 * cbLight._m0[_2594].z) * _2638) + (((cbLight._m0[_2604].z * _2570) * _2613) * _2636);
    uvec4 _2651 = floatBitsToUint(cbLight._m0[_2577 + 12u]);
    bool _2653 = _2651.x == 0u;
    float _2755;
    float _2757;
    float _2759;
    if (_2653)
    {
        _2755 = _2645;
        _2757 = _2646;
        _2759 = _2647;
    }
    else
    {
        uint _2763 = _2577 + 6u;
        float _2779 = (dot(vec3(cbLight._m0[_2577 + 2u].xyz), vec3(_1092, _1093, _1094)) * 0.5) + 0.5;
        float _2780 = _2779 * _2779;
        float _4987 = isnan(0.0) ? _2780 : (isnan(_2780) ? 0.0 : max(_2780, 0.0));
        float _2781 = isnan(1.0) ? _4987 : (isnan(_4987) ? 1.0 : min(_4987, 1.0));
        float _2782 = isnan(1.0) ? _2592 : (isnan(_2592) ? 1.0 : min(_2592, 1.0));
        _2755 = (((cbLight._m0[_2763].x * 0.3183098733425140380859375) * _2781) * _2782) + _2645;
        _2757 = (((cbLight._m0[_2763].y * 0.3183098733425140380859375) * _2781) * _2782) + _2646;
        _2759 = (((cbLight._m0[_2763].z * 0.3183098733425140380859375) * _2781) * _2782) + _2647;
    }
    bool _2762 = _2651.y == 0u;
    float _2817;
    float _2819;
    float _2821;
    if (_2762)
    {
        _2817 = _2755;
        _2819 = _2757;
        _2821 = _2759;
    }
    else
    {
        uint _2979 = _2577 + 7u;
        float _2995 = (dot(vec3(cbLight._m0[_2577 + 3u].xyz), vec3(_1092, _1093, _1094)) * 0.5) + 0.5;
        float _2996 = _2995 * _2995;
        float _5003 = isnan(0.0) ? _2996 : (isnan(_2996) ? 0.0 : max(_2996, 0.0));
        float _2997 = isnan(1.0) ? _5003 : (isnan(_5003) ? 1.0 : min(_5003, 1.0));
        float _2998 = isnan(1.0) ? _2593 : (isnan(_2593) ? 1.0 : min(_2593, 1.0));
        _2817 = (((cbLight._m0[_2979].x * 0.3183098733425140380859375) * _2997) * _2998) + _2755;
        _2819 = (((cbLight._m0[_2979].y * 0.3183098733425140380859375) * _2997) * _2998) + _2757;
        _2821 = (((cbLight._m0[_2979].z * 0.3183098733425140380859375) * _2997) * _2998) + _2759;
    }
    uint _2824 = _2577 + 8u;
    float _2837 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2577].w)) * _1095) * 0.949999988079071044921875);
    float _2838 = _2837 * _2837;
    float _2839 = cbLight._m0[_2577].x + _1170;
    float _2840 = cbLight._m0[_2577].y + _1171;
    float _2841 = cbLight._m0[_2577].z + _1172;
    float _2845 = inversesqrt(dot(vec3(_2839, _2840, _2841), vec3(_2839, _2840, _2841)));
    float _2846 = _2845 * _2839;
    float _2847 = _2845 * _2840;
    float _2848 = _2845 * _2841;
    float _2849 = dot(vec3(_1092, _1093, _1094), vec3(cbLight._m0[_2577].xyz));
    float _5019 = isnan(0.0) ? _2849 : (isnan(_2849) ? 0.0 : max(_2849, 0.0));
    float _2852 = isnan(1.0) ? _5019 : (isnan(_5019) ? 1.0 : min(_5019, 1.0));
    float _5030 = isnan(0.0) ? _1254 : (isnan(_1254) ? 0.0 : max(_1254, 0.0));
    float _2853 = isnan(1.0) ? _5030 : (isnan(_5030) ? 1.0 : min(_5030, 1.0));
    float _2854 = dot(vec3(_1092, _1093, _1094), vec3(_2846, _2847, _2848));
    float _5041 = isnan(0.0) ? _2854 : (isnan(_2854) ? 0.0 : max(_2854, 0.0));
    float _2857 = isnan(1.0) ? _5041 : (isnan(_5041) ? 1.0 : min(_5041, 1.0));
    float _2858 = dot(vec3(cbLight._m0[_2577].xyz), vec3(_2846, _2847, _2848));
    float _5052 = isnan(0.0) ? _2858 : (isnan(_2858) ? 0.0 : max(_2858, 0.0));
    float _2862 = _2838 * _2838;
    float _2866 = ((_2857 * _2857) * (_2862 + (-1.0))) + 1.0;
    float _2877 = (exp2(log2(1.0 - (isnan(1.0) ? _5052 : (isnan(_5052) ? 1.0 : min(_5052, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2878 = 1.0 - _2838;
    float _2889 = (0.5 / (((_2853 * ((_2852 * _2878) + _2838)) + 9.9999999392252902907785028219223e-09) + (((_2853 * _2878) + _2838) * _2852))) * _2852;
    float _5063 = isnan(0.0) ? _2889 : (isnan(_2889) ? 0.0 : max(_2889, 0.0));
    float _2891 = (isnan(1.0) ? _5063 : (isnan(_5063) ? 1.0 : min(_5063, 1.0))) * (_2862 / ((_2866 * _2866) * 3.141590118408203125));
    uint _2905 = _2577 + 9u;
    float _2916 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2617].w)) * _1095) * 0.949999988079071044921875);
    float _2917 = _2916 * _2916;
    float _2918 = cbLight._m0[_2617].x + _1170;
    float _2919 = cbLight._m0[_2617].y + _1171;
    float _2920 = cbLight._m0[_2617].z + _1172;
    float _2924 = inversesqrt(dot(vec3(_2918, _2919, _2920), vec3(_2918, _2919, _2920)));
    float _2925 = _2924 * _2918;
    float _2926 = _2924 * _2919;
    float _2927 = _2924 * _2920;
    float _2928 = dot(vec3(_1092, _1093, _1094), vec3(cbLight._m0[_2617].xyz));
    float _5074 = isnan(0.0) ? _2928 : (isnan(_2928) ? 0.0 : max(_2928, 0.0));
    float _2931 = isnan(1.0) ? _5074 : (isnan(_5074) ? 1.0 : min(_5074, 1.0));
    float _2932 = dot(vec3(_1092, _1093, _1094), vec3(_2925, _2926, _2927));
    float _5085 = isnan(0.0) ? _2932 : (isnan(_2932) ? 0.0 : max(_2932, 0.0));
    float _2935 = isnan(1.0) ? _5085 : (isnan(_5085) ? 1.0 : min(_5085, 1.0));
    float _2936 = dot(vec3(cbLight._m0[_2617].xyz), vec3(_2925, _2926, _2927));
    float _5096 = isnan(0.0) ? _2936 : (isnan(_2936) ? 0.0 : max(_2936, 0.0));
    float _2940 = _2917 * _2917;
    float _2944 = ((_2935 * _2935) * (_2940 + (-1.0))) + 1.0;
    float _2953 = (exp2(log2(1.0 - (isnan(1.0) ? _5096 : (isnan(_5096) ? 1.0 : min(_5096, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2954 = 1.0 - _2917;
    float _2964 = (0.5 / (((_2853 * ((_2931 * _2954) + _2917)) + 9.9999999392252902907785028219223e-09) + (((_2853 * _2954) + _2917) * _2931))) * _2931;
    float _5107 = isnan(0.0) ? _2964 : (isnan(_2964) ? 0.0 : max(_2964, 0.0));
    float _2966 = (isnan(1.0) ? _5107 : (isnan(_5107) ? 1.0 : min(_5107, 1.0))) * (_2940 / ((_2944 * _2944) * 3.141590118408203125));
    float _2976 = (((_2953 * cbLight._m0[_2905].x) * _2966) * _2600) + ((((cbLight._m0[_2824].x * _2566) * _2877) * _2891) * _2613);
    float _2977 = (((_2953 * cbLight._m0[_2905].y) * _2966) * _2600) + ((((cbLight._m0[_2824].y * _2568) * _2877) * _2891) * _2613);
    float _2978 = (((_2953 * cbLight._m0[_2905].z) * _2966) * _2600) + ((((cbLight._m0[_2824].z * _2570) * _2877) * _2891) * _2613);
    float _3034;
    float _3036;
    float _3038;
    if (_2653)
    {
        _3034 = _2976;
        _3036 = _2977;
        _3038 = _2978;
    }
    else
    {
        uint _3040 = _2577 + 2u;
        uint _3044 = _2577 + 10u;
        float _3058 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3040].w)) * _1095) * 0.949999988079071044921875);
        float _3059 = _3058 * _3058;
        float _3060 = cbLight._m0[_3040].x + _1170;
        float _3061 = cbLight._m0[_3040].y + _1171;
        float _3062 = cbLight._m0[_3040].z + _1172;
        float _3066 = inversesqrt(dot(vec3(_3060, _3061, _3062), vec3(_3060, _3061, _3062)));
        float _3067 = _3066 * _3060;
        float _3068 = _3066 * _3061;
        float _3069 = _3066 * _3062;
        float _3070 = dot(vec3(_1092, _1093, _1094), vec3(cbLight._m0[_3040].xyz));
        float _5118 = isnan(0.0) ? _3070 : (isnan(_3070) ? 0.0 : max(_3070, 0.0));
        float _3073 = isnan(1.0) ? _5118 : (isnan(_5118) ? 1.0 : min(_5118, 1.0));
        float _3074 = dot(vec3(_1092, _1093, _1094), vec3(_3067, _3068, _3069));
        float _5129 = isnan(0.0) ? _3074 : (isnan(_3074) ? 0.0 : max(_3074, 0.0));
        float _3077 = isnan(1.0) ? _5129 : (isnan(_5129) ? 1.0 : min(_5129, 1.0));
        float _3078 = dot(vec3(cbLight._m0[_3040].xyz), vec3(_3067, _3068, _3069));
        float _5140 = isnan(0.0) ? _3078 : (isnan(_3078) ? 0.0 : max(_3078, 0.0));
        float _3082 = _3059 * _3059;
        float _3086 = ((_3077 * _3077) * (_3082 + (-1.0))) + 1.0;
        float _3095 = (exp2(log2(1.0 - (isnan(1.0) ? _5140 : (isnan(_5140) ? 1.0 : min(_5140, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3096 = 1.0 - _3059;
        float _3106 = (0.5 / (((_2853 * ((_3073 * _3096) + _3059)) + 9.9999999392252902907785028219223e-09) + (((_2853 * _3096) + _3059) * _3073))) * _3073;
        float _5151 = isnan(0.0) ? _3106 : (isnan(_3106) ? 0.0 : max(_3106, 0.0));
        float _3108 = (isnan(1.0) ? _5151 : (isnan(_5151) ? 1.0 : min(_5151, 1.0))) * (_3082 / ((_3086 * _3086) * 3.141590118408203125));
        float _3109 = isnan(1.0) ? _2592 : (isnan(_2592) ? 1.0 : min(_2592, 1.0));
        _3034 = (((_3095 * cbLight._m0[_3044].x) * _3108) * _3109) + _2976;
        _3036 = (((_3095 * cbLight._m0[_3044].y) * _3108) * _3109) + _2977;
        _3038 = (((_3095 * cbLight._m0[_3044].z) * _3108) * _3109) + _2978;
    }
    float _3140;
    float _3142;
    float _3144;
    if (_2762)
    {
        _3140 = _3034;
        _3142 = _3036;
        _3144 = _3038;
    }
    else
    {
        uint _3151 = _2577 + 3u;
        uint _3155 = _2577 + 11u;
        float _3169 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3151].w)) * _1095) * 0.949999988079071044921875);
        float _3170 = _3169 * _3169;
        float _3171 = cbLight._m0[_3151].x + _1170;
        float _3172 = cbLight._m0[_3151].y + _1171;
        float _3173 = cbLight._m0[_3151].z + _1172;
        float _3177 = inversesqrt(dot(vec3(_3171, _3172, _3173), vec3(_3171, _3172, _3173)));
        float _3178 = _3177 * _3171;
        float _3179 = _3177 * _3172;
        float _3180 = _3177 * _3173;
        float _3181 = dot(vec3(_1092, _1093, _1094), vec3(cbLight._m0[_3151].xyz));
        float _5167 = isnan(0.0) ? _3181 : (isnan(_3181) ? 0.0 : max(_3181, 0.0));
        float _3184 = isnan(1.0) ? _5167 : (isnan(_5167) ? 1.0 : min(_5167, 1.0));
        float _3185 = dot(vec3(_1092, _1093, _1094), vec3(_3178, _3179, _3180));
        float _5178 = isnan(0.0) ? _3185 : (isnan(_3185) ? 0.0 : max(_3185, 0.0));
        float _3188 = isnan(1.0) ? _5178 : (isnan(_5178) ? 1.0 : min(_5178, 1.0));
        float _3189 = dot(vec3(cbLight._m0[_3151].xyz), vec3(_3178, _3179, _3180));
        float _5189 = isnan(0.0) ? _3189 : (isnan(_3189) ? 0.0 : max(_3189, 0.0));
        float _3193 = _3170 * _3170;
        float _3197 = ((_3188 * _3188) * (_3193 + (-1.0))) + 1.0;
        float _3206 = (exp2(log2(1.0 - (isnan(1.0) ? _5189 : (isnan(_5189) ? 1.0 : min(_5189, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3207 = 1.0 - _3170;
        float _3217 = (0.5 / (((_2853 * ((_3184 * _3207) + _3170)) + 9.9999999392252902907785028219223e-09) + (((_2853 * _3207) + _3170) * _3184))) * _3184;
        float _5200 = isnan(0.0) ? _3217 : (isnan(_3217) ? 0.0 : max(_3217, 0.0));
        float _3219 = (isnan(1.0) ? _5200 : (isnan(_5200) ? 1.0 : min(_5200, 1.0))) * (_3193 / ((_3197 * _3197) * 3.141590118408203125));
        float _3220 = isnan(1.0) ? _2593 : (isnan(_2593) ? 1.0 : min(_2593, 1.0));
        _3140 = (((_3206 * cbLight._m0[_3155].x) * _3219) * _3220) + _3034;
        _3142 = (((_3206 * cbLight._m0[_3155].y) * _3219) * _3220) + _3036;
        _3144 = (((_3206 * cbLight._m0[_3155].z) * _3219) * _3220) + _3038;
    }
    float _3286;
    float _3288;
    float _3290;
    float _3292;
    float _3294;
    float _3296;
    if (_2575.y == 0u)
    {
        uvec4 _3241 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3242 = _3241.x;
        uint _3253 = uint((float(_3241.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1191) / _3242))) + floor(float(uint(cbSceneParam._m0[85u].x * _1190) / _3242)));
        float _3263 = (log2(_2353 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3264 = isnan(0.0) ? _3263 : (isnan(_3263) ? 0.0 : max(_3263, 0.0));
        uint _3267 = uint(isnan(14.0) ? _3264 : (isnan(_3264) ? 14.0 : min(_3264, 14.0)));
        uvec4 _3272 = texelFetch(g_lightClusterGridBuffer, int(((_3267 << 2u) + (_3253 << 6u)) >> 2u));
        uint _3273 = _3272.x;
        uint _3274 = _3241.z;
        float _3353;
        float _3355;
        float _3357;
        float _3359;
        float _3361;
        float _3363;
        if (((((1u << ((_3274 >> 4u) & 15u)) + 4294967295u) & _3273) == 0u) || ((_3274 & 240u) == 0u))
        {
            _3353 = 0.0;
            _3355 = 0.0;
            _3357 = 0.0;
            _3359 = 0.0;
            _3361 = 0.0;
            _3363 = 0.0;
        }
        else
        {
            float _3354;
            float _3356;
            float _3358;
            float _3360;
            float _3362;
            float _3364;
            float _3506 = 0.0;
            float _3507 = 0.0;
            float _3508 = 0.0;
            float _3509 = 0.0;
            float _3510 = 0.0;
            float _3511 = 0.0;
            uint _3512 = 0u;
            uint _3521;
            bool _3522;
            for (;;)
            {
                _3521 = texelFetch(g_lightClassification, int((((_3267 << 5u) + (_3253 << 9u)) + (_3512 << 2u)) >> 2u)).x;
                _3522 = _3521 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3522)
                {
                    frontier_phi_71_pred = _3511;
                    frontier_phi_71_pred_1 = _3510;
                    frontier_phi_71_pred_2 = _3509;
                    frontier_phi_71_pred_3 = _3508;
                    frontier_phi_71_pred_4 = _3507;
                    frontier_phi_71_pred_5 = _3506;
                }
                else
                {
                    float _3651;
                    float _3652;
                    float _3653;
                    float _3654;
                    float _3655;
                    float _3656;
                    uint _3657;
                    _3651 = _3506;
                    _3652 = _3507;
                    _3653 = _3508;
                    _3654 = _3509;
                    _3655 = _3510;
                    _3656 = _3511;
                    _3657 = _3521;
                    float _3578;
                    float _3579;
                    float _3580;
                    float _3581;
                    float _3582;
                    float _3583;
                    for (;;)
                    {
                        uint _3661 = uint(findLSB(_3657)) + (_3512 << 5u);
                        uint _3658 = (_3657 + 4294967295u) & _3657;
                        uint _3663 = _3661 * 48u;
                        vec4 _3677 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3663)).x, texelFetch(g_PointLightRenderingBuffer, int(_3663 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3663 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3663 + 3u)).x));
                        uint _3683 = (_3661 * 48u) + 4u;
                        vec4 _3696 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3683)).x, texelFetch(g_PointLightRenderingBuffer, int(_3683 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3683 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3683 + 3u)).x));
                        uint _3702 = (_3661 * 48u) + 8u;
                        vec3 _3713 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3702)).x, texelFetch(g_PointLightRenderingBuffer, int(_3702 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3702 + 2u)).x));
                        float _3717 = _3677.x - _2351;
                        float _3718 = _3677.y - _2352;
                        float _3719 = _3677.z - _2353;
                        float _3720 = dot(vec3(_3717, _3718, _3719), vec3(_3717, _3718, _3719));
                        float _3723 = inversesqrt(_3720);
                        float _3724 = _3723 * _3717;
                        float _3725 = _3723 * _3718;
                        float _3726 = _3723 * _3719;
                        float _3727 = dot(vec3(_1209, _1212, _1215), vec3(_3724, _3725, _3726));
                        float _3732 = 1.0 - (_3720 * _3677.w);
                        float _5226 = isnan(0.0) ? _3732 : (isnan(_3732) ? 0.0 : max(_3732, 0.0));
                        float _3733 = isnan(1.0) ? _5226 : (isnan(_5226) ? 1.0 : min(_5226, 1.0));
                        float _3734 = sqrt(_3720) * _3696.w;
                        float _3737 = 1.39999997615814208984375 / (_3734 + 1.39999997615814208984375);
                        float _3738 = _3737 * _3737;
                        float _3741 = ((1.0 - _3738) * _3727) + _3738;
                        float _3744 = _3734 * _3734;
                        float _3748 = ((isnan(0.0) ? _3741 : (isnan(_3741) ? 0.0 : max(_3741, 0.0))) * _3733) / ((_3744 * 0.699999988079071044921875) + 1.0);
                        float _3752 = (-0.0) - _2351;
                        float _3753 = (-0.0) - _2352;
                        float _3754 = (-0.0) - _2353;
                        float _3758 = inversesqrt(dot(vec3(_3752, _3753, _3754), vec3(_3752, _3753, _3754)));
                        float _3759 = _3758 * _3752;
                        float _3760 = _3758 * _3753;
                        float _3761 = _3758 * _3754;
                        float _3768 = exp2(log2(1.0 / ((_3744 * 3.5) + 5.0)) * 0.25);
                        float _3769 = 1.0 - _1269;
                        float _3776 = sqrt(1.0 - ((1.0 - (_3769 * _3769)) * (1.0 - (_3768 * _3768))));
                        float _3777 = _3776 * _3776;
                        float _3778 = _3777 * _3777;
                        float _3779 = _3759 + _3724;
                        float _3780 = _3760 + _3725;
                        float _3781 = _3761 + _3726;
                        float _3785 = inversesqrt(dot(vec3(_3779, _3780, _3781), vec3(_3779, _3780, _3781)));
                        float _3789 = dot(vec3(_1209, _1212, _1215), vec3(_3759, _3760, _3761));
                        float _5242 = isnan(0.0) ? _3789 : (isnan(_3789) ? 0.0 : max(_3789, 0.0));
                        float _3792 = isnan(1.0) ? _5242 : (isnan(_5242) ? 1.0 : min(_5242, 1.0));
                        float _3793 = dot(vec3(_1209, _1212, _1215), vec3(_3785 * _3779, _3785 * _3780, _3785 * _3781));
                        float _5253 = isnan(0.0) ? _3793 : (isnan(_3793) ? 0.0 : max(_3793, 0.0));
                        float _3796 = isnan(1.0) ? _5253 : (isnan(_5253) ? 1.0 : min(_5253, 1.0));
                        float _3800 = ((_3796 * _3796) * (_3778 + (-1.0))) + 1.0;
                        float _3801 = _3737 * _3777;
                        float _3802 = _3801 * _3801;
                        float _3805 = ((1.0 - _3802) * _3727) + _3802;
                        float _5264 = isnan(0.0) ? _3805 : (isnan(_3805) ? 0.0 : max(_3805, 0.0));
                        float _3806 = isnan(1.0) ? _5264 : (isnan(_5264) ? 1.0 : min(_5264, 1.0));
                        float _3807 = 1.0 - _3777;
                        float _3817 = (0.5 / (((_3806 * ((_3792 * _3807) + _3777)) + 9.9999999392252902907785028219223e-09) + (((_3806 * _3807) + _3777) * _3792))) * _3806;
                        float _5275 = isnan(0.0) ? _3817 : (isnan(_3817) ? 0.0 : max(_3817, 0.0));
                        float _3828 = (((_3778 * 3.1415927410125732421875) * (isnan(1.0) ? _5275 : (isnan(_5275) ? 1.0 : min(_5275, 1.0)))) / ((_3800 * _3800) * ((_3744 * 2.1991131305694580078125) + 3.141590118408203125))) * _3733;
                        _3581 = (_3748 * _3696.x) + _3654;
                        _3582 = (_3748 * _3696.y) + _3655;
                        _3583 = (_3748 * _3696.z) + _3656;
                        _3578 = (_3828 * _3713.x) + _3651;
                        _3579 = (_3828 * _3713.y) + _3652;
                        _3580 = (_3828 * _3713.z) + _3653;
                        if (_3658 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3651 = _3578;
                            _3652 = _3579;
                            _3653 = _3580;
                            _3654 = _3581;
                            _3655 = _3582;
                            _3656 = _3583;
                            _3657 = _3658;
                        }
                    }
                    frontier_phi_71_pred = _3583;
                    frontier_phi_71_pred_1 = _3582;
                    frontier_phi_71_pred_2 = _3581;
                    frontier_phi_71_pred_3 = _3580;
                    frontier_phi_71_pred_4 = _3579;
                    frontier_phi_71_pred_5 = _3578;
                }
                _3364 = frontier_phi_71_pred;
                _3362 = frontier_phi_71_pred_1;
                _3360 = frontier_phi_71_pred_2;
                _3358 = frontier_phi_71_pred_3;
                _3356 = frontier_phi_71_pred_4;
                _3354 = frontier_phi_71_pred_5;
                uint _3513 = _3512 + 1u;
                if (_3513 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3506 = _3354;
                    _3507 = _3356;
                    _3508 = _3358;
                    _3509 = _3360;
                    _3510 = _3362;
                    _3511 = _3364;
                    _3512 = _3513;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3353 = _3354;
            _3355 = _3356;
            _3357 = _3358;
            _3359 = _3360;
            _3361 = _3362;
            _3363 = _3364;
        }
        uvec4 _3367 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3368 = _3367.z;
        uint _3370 = (_3368 >> 8u) & 15u;
        float _3474;
        float _3476;
        float _3478;
        float _3480;
        float _3482;
        float _3484;
        if (((4294967295u << _3370) & _3273) == 0u)
        {
            _3474 = _3353;
            _3476 = _3355;
            _3478 = _3357;
            _3480 = _3359;
            _3482 = _3361;
            _3484 = _3363;
        }
        else
        {
            float _3499 = inversesqrt(dot(vec3(_2351, _2352, _2353), vec3(_2351, _2352, _2353)));
            float _3500 = _3499 * _2351;
            float _3501 = _3499 * _2352;
            float _3502 = _3499 * _2353;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3370 < ((_3368 >> 12u) & 15u))
            {
                float _3475;
                float _3477;
                float _3479;
                float _3481;
                float _3483;
                float _3485;
                float _3634 = _3353;
                float _3635 = _3355;
                float _3636 = _3357;
                float _3637 = _3359;
                float _3638 = _3361;
                float _3639 = _3363;
                uint _3640 = _3370;
                uint _3649;
                bool _3650;
                for (;;)
                {
                    _3649 = texelFetch(g_lightClassification, int((((_3267 << 5u) + (_3253 << 9u)) + (_3640 << 2u)) >> 2u)).x;
                    _3650 = _3649 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3650)
                    {
                        frontier_phi_82_pred = _3639;
                        frontier_phi_82_pred_1 = _3638;
                        frontier_phi_82_pred_2 = _3637;
                        frontier_phi_82_pred_3 = _3636;
                        frontier_phi_82_pred_4 = _3635;
                        frontier_phi_82_pred_5 = _3634;
                    }
                    else
                    {
                        float _3842;
                        float _3843;
                        float _3844;
                        float _3845;
                        float _3846;
                        float _3847;
                        float _4135;
                        float _4136;
                        float _4137;
                        float _4138;
                        float _4139;
                        float _4140;
                        float _3855 = _3634;
                        float _3856 = _3635;
                        float _3857 = _3636;
                        float _3858 = _3637;
                        float _3859 = _3638;
                        float _3860 = _3639;
                        uint _3861 = _3649;
                        uint _3862;
                        vec4 _3887;
                        float _3888;
                        vec4 _3903;
                        vec3 _3915;
                        vec4 _3930;
                        vec4 _3945;
                        float _3991;
                        bool _3992;
                        for (;;)
                        {
                            uint _3872 = ((_3640 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3861));
                            _3862 = (_3861 + 4294967295u) & _3861;
                            uint _3874 = _3872 * 40u;
                            _3887 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3874)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3874 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3874 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3874 + 3u)).x));
                            _3888 = _3887.w;
                            uint _3890 = (_3872 * 40u) + 4u;
                            _3903 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3890)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3890 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3890 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3890 + 3u)).x));
                            uint _3905 = (_3872 * 40u) + 8u;
                            _3915 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3905)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3905 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3905 + 2u)).x));
                            uint _3917 = (_3872 * 40u) + 16u;
                            _3930 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3917)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3917 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3917 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3917 + 3u)).x));
                            uint _3932 = (_3872 * 40u) + 20u;
                            _3945 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3932)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3932 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3932 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3932 + 3u)).x));
                            uint _3947 = (_3872 * 40u) + 24u;
                            vec4 _3960 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3947)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3947 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3947 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3947 + 3u)).x));
                            uint _3966 = (_3872 * 40u) + 28u;
                            vec4 _3979 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3966)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3966 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3966 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3966 + 3u)).x));
                            _3991 = fma(_2353, _3979.z, fma(_2352, _3979.y, _3979.x * _2351)) + _3979.w;
                            _3992 = !((fma(_2353, _3960.z, fma(_2352, _3960.y, _3960.x * _2351)) + _3960.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3992)
                            {
                                float _4019 = _3887.x - _2351;
                                float _4020 = _3887.y - _2352;
                                float _4021 = _3887.z - _2353;
                                float _4022 = dot(vec3(_4019, _4020, _4021), vec3(_4019, _4020, _4021));
                                float _4025 = inversesqrt(_4022);
                                float _4026 = _4025 * _4019;
                                float _4027 = _4025 * _4020;
                                float _4028 = _4025 * _4021;
                                float _4032 = 1.0 - (_4022 / (_3888 * _3888));
                                float _5286 = isnan(0.0) ? _4032 : (isnan(_4032) ? 0.0 : max(_4032, 0.0));
                                float _4033 = isnan(1.0) ? _5286 : (isnan(_5286) ? 1.0 : min(_5286, 1.0));
                                float _4037 = sqrt(_4022) * _3903.w;
                                float _4039 = 1.39999997615814208984375 / (_4037 + 1.39999997615814208984375);
                                float _4040 = _4039 * _4039;
                                float _4043 = ((1.0 - _4040) * dot(vec3(_4026, _4027, _4028), vec3(_1209, _1212, _1215))) + _4040;
                                float _4046 = _4037 * _4037;
                                float _4050 = (fma(_2353, _3930.z, fma(_2352, _3930.y, _3930.x * _2351)) + _3930.w) / _3991;
                                float _4051 = (fma(_2353, _3945.z, fma(_2352, _3945.y, _3945.x * _2351)) + _3945.w) / _3991;
                                float _4055 = 1.0 - dot(vec2(_4050, _4051), vec2(_4050, _4051));
                                float _5302 = isnan(0.0) ? _4055 : (isnan(_4055) ? 0.0 : max(_4055, 0.0));
                                float _4056 = isnan(1.0) ? _5302 : (isnan(_5302) ? 1.0 : min(_5302, 1.0));
                                float _4057 = _4056 * (((isnan(0.0) ? _4043 : (isnan(_4043) ? 0.0 : max(_4043, 0.0))) * _4033) / ((_4046 * 0.699999988079071044921875) + 1.0));
                                float _4069 = exp2(log2(1.0 / ((_4046 * 3.5) + 5.0)) * 0.25);
                                float _4070 = 1.0 - _1269;
                                float _4077 = sqrt(1.0 - ((1.0 - (_4070 * _4070)) * (1.0 - (_4069 * _4069))));
                                float _4078 = _4077 * _4077;
                                float _4079 = _4078 * _4078;
                                float _4080 = _4026 - _3500;
                                float _4081 = _4027 - _3501;
                                float _4082 = _4028 - _3502;
                                float _4086 = inversesqrt(dot(vec3(_4080, _4081, _4082), vec3(_4080, _4081, _4082)));
                                float _4090 = dot(vec3(_1209, _1212, _1215), vec3((-0.0) - _3500, (-0.0) - _3501, (-0.0) - _3502));
                                float _5313 = isnan(0.0) ? _4090 : (isnan(_4090) ? 0.0 : max(_4090, 0.0));
                                float _4093 = isnan(1.0) ? _5313 : (isnan(_5313) ? 1.0 : min(_5313, 1.0));
                                float _4094 = dot(vec3(_1209, _1212, _1215), vec3(_4086 * _4080, _4086 * _4081, _4086 * _4082));
                                float _5324 = isnan(0.0) ? _4094 : (isnan(_4094) ? 0.0 : max(_4094, 0.0));
                                float _4097 = isnan(1.0) ? _5324 : (isnan(_5324) ? 1.0 : min(_5324, 1.0));
                                float _4101 = ((_4097 * _4097) * (_4079 + (-1.0))) + 1.0;
                                float _4102 = _4039 * _4078;
                                float _4103 = _4102 * _4102;
                                float _4109 = ((1.0 - _4103) * dot(vec3(_1209, _1212, _1215), vec3(_4026, _4027, _4028))) + _4103;
                                float _5335 = isnan(0.0) ? _4109 : (isnan(_4109) ? 0.0 : max(_4109, 0.0));
                                float _4110 = isnan(1.0) ? _5335 : (isnan(_5335) ? 1.0 : min(_5335, 1.0));
                                float _4111 = 1.0 - _4078;
                                float _4121 = (0.5 / (((_4110 * ((_4093 * _4111) + _4078)) + 9.9999999392252902907785028219223e-09) + (((_4110 * _4111) + _4078) * _4093))) * _4110;
                                float _5346 = isnan(0.0) ? _4121 : (isnan(_4121) ? 0.0 : max(_4121, 0.0));
                                float _4131 = (_4056 * _4033) * (((_4079 * 3.1415927410125732421875) * (isnan(1.0) ? _5346 : (isnan(_5346) ? 1.0 : min(_5346, 1.0)))) / ((_4101 * _4101) * ((_4046 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _4057 * _3903.z;
                                frontier_phi_88_pred_1 = _4057 * _3903.y;
                                frontier_phi_88_pred_2 = _4057 * _3903.x;
                                frontier_phi_88_pred_3 = _4131 * _3915.z;
                                frontier_phi_88_pred_4 = _4131 * _3915.y;
                                frontier_phi_88_pred_5 = _4131 * _3915.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _4140 = frontier_phi_88_pred;
                            _4139 = frontier_phi_88_pred_1;
                            _4138 = frontier_phi_88_pred_2;
                            _4137 = frontier_phi_88_pred_3;
                            _4136 = frontier_phi_88_pred_4;
                            _4135 = frontier_phi_88_pred_5;
                            _3845 = _4138 + _3858;
                            _3846 = _4139 + _3859;
                            _3847 = _4140 + _3860;
                            _3842 = _4135 + _3855;
                            _3843 = _4136 + _3856;
                            _3844 = _4137 + _3857;
                            if (_3862 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3855 = _3842;
                                _3856 = _3843;
                                _3857 = _3844;
                                _3858 = _3845;
                                _3859 = _3846;
                                _3860 = _3847;
                                _3861 = _3862;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3847;
                        frontier_phi_82_pred_1 = _3846;
                        frontier_phi_82_pred_2 = _3845;
                        frontier_phi_82_pred_3 = _3844;
                        frontier_phi_82_pred_4 = _3843;
                        frontier_phi_82_pred_5 = _3842;
                    }
                    _3485 = frontier_phi_82_pred;
                    _3483 = frontier_phi_82_pred_1;
                    _3481 = frontier_phi_82_pred_2;
                    _3479 = frontier_phi_82_pred_3;
                    _3477 = frontier_phi_82_pred_4;
                    _3475 = frontier_phi_82_pred_5;
                    uint _3641 = _3640 + 1u;
                    if (_3641 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3634 = _3475;
                        _3635 = _3477;
                        _3636 = _3479;
                        _3637 = _3481;
                        _3638 = _3483;
                        _3639 = _3485;
                        _3640 = _3641;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3481;
                frontier_phi_63_64_ladder_1 = _3485;
                frontier_phi_63_64_ladder_2 = _3483;
                frontier_phi_63_64_ladder_3 = _3479;
                frontier_phi_63_64_ladder_4 = _3477;
                frontier_phi_63_64_ladder_5 = _3475;
            }
            else
            {
                frontier_phi_63_64_ladder = _3359;
                frontier_phi_63_64_ladder_1 = _3363;
                frontier_phi_63_64_ladder_2 = _3361;
                frontier_phi_63_64_ladder_3 = _3357;
                frontier_phi_63_64_ladder_4 = _3355;
                frontier_phi_63_64_ladder_5 = _3353;
            }
            _3474 = frontier_phi_63_64_ladder_5;
            _3476 = frontier_phi_63_64_ladder_4;
            _3478 = frontier_phi_63_64_ladder_3;
            _3480 = frontier_phi_63_64_ladder;
            _3482 = frontier_phi_63_64_ladder_2;
            _3484 = frontier_phi_63_64_ladder_1;
        }
        float _3489 = isnan(1.0) ? _1253 : (isnan(_1253) ? 1.0 : min(_1253, 1.0));
        _3286 = (_3489 * _3480) + _2817;
        _3288 = (_3489 * _3482) + _2819;
        _3290 = (_3489 * _3484) + _2821;
        _3292 = ((_3474 * 0.039999999105930328369140625) * _3489) + _3140;
        _3294 = ((_3476 * 0.039999999105930328369140625) * _3489) + _3142;
        _3296 = ((_3478 * 0.039999999105930328369140625) * _3489) + _3144;
    }
    else
    {
        _3286 = _2817;
        _3288 = _2819;
        _3290 = _2821;
        _3292 = _3140;
        _3294 = _3142;
        _3296 = _3144;
    }
    float _5362 = isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0));
    float _5373 = isnan(0.0) ? _1239 : (isnan(_1239) ? 0.0 : max(_1239, 0.0));
    float _5384 = isnan(0.0) ? _1240 : (isnan(_1240) ? 0.0 : max(_1240, 0.0));
    float _3313 = ((isnan(1.0) ? _5362 : (isnan(_5362) ? 1.0 : min(_5362, 1.0))) * (_3286 + ((isnan(0.0) ? _2008 : (isnan(_2008) ? 0.0 : max(_2008, 0.0))) * _1253))) + ((_3292 + ((isnan(0.0) ? _2298 : (isnan(_2298) ? 0.0 : max(_2298, 0.0))) * _2087)) * cbPerFrame._m0[3u].x);
    float _3314 = ((isnan(1.0) ? _5373 : (isnan(_5373) ? 1.0 : min(_5373, 1.0))) * (_3288 + ((isnan(0.0) ? _2011 : (isnan(_2011) ? 0.0 : max(_2011, 0.0))) * _1253))) + ((_3294 + ((isnan(0.0) ? _2301 : (isnan(_2301) ? 0.0 : max(_2301, 0.0))) * _2087)) * cbPerFrame._m0[3u].x);
    float _3315 = ((isnan(1.0) ? _5384 : (isnan(_5384) ? 1.0 : min(_5384, 1.0))) * (_3290 + ((isnan(0.0) ? _2014 : (isnan(_2014) ? 0.0 : max(_2014, 0.0))) * _1253))) + ((_3296 + ((isnan(0.0) ? _2304 : (isnan(_2304) ? 0.0 : max(_2304, 0.0))) * _2087)) * cbPerFrame._m0[3u].x);
    uint _3316 = _299 + 6u;
    float _3324 = _1190 / cbSceneParam._m0[86u].x;
    float _3325 = _1191 / cbSceneParam._m0[86u].y;
    vec4 _3339 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3324, _3325, (log2((isnan(cbSceneParam._m0[77u].w) ? _1113 : (isnan(_1113) ? cbSceneParam._m0[77u].w : min(_1113, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3341 = _3339.x;
    float _3342 = _3339.y;
    float _3343 = _3339.z;
    float _3344 = _3339.w;
    float _3416;
    float _3418;
    float _3420;
    float _3422;
    if (_1113 > cbSceneParam._m0[78u].w)
    {
        float _3378 = isnan(_1113) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1113 : min(cbSceneParam._m0[80u].w, _1113));
        float _3379 = _3378 / _1113;
        float _3390 = _3379 * _1163;
        float _3391 = _1164 * _3379;
        float _3392 = (-0.0) - _3391;
        float _3394 = _3379 * _1165;
        float _3396 = (cbSceneParam._m0[77u].w * _3392) / _3378;
        float _3397 = _3396 + cbSceneParam._m0[79u].w;
        float _3398 = cbSceneParam._m0[79u].w - _3391;
        float _3404 = sqrt(((_3390 * _3390) + (_3391 * _3391)) + (_3394 * _3394));
        float _3407 = (1.0 - (cbSceneParam._m0[77u].w / _3378)) * _3404;
        float _3412 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3414 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3591;
        if (abs((_3392 - _3396) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3591 = ((((_3397 > 0.0) ? exp2(_3412 * _3397) : (2.0 - exp2(_3414 * _3397))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3407;
        }
        else
        {
            float _3535 = 1.0 / cbSceneParam._m0[80u].x;
            float _3536 = isnan(_3398) ? _3397 : (isnan(_3397) ? _3398 : max(_3397, _3398));
            float _3537 = isnan(_3398) ? _3397 : (isnan(_3397) ? _3398 : min(_3397, _3398));
            float _3546 = isnan(0.0) ? _3536 : (isnan(_3536) ? 0.0 : min(_3536, 0.0));
            float _3547 = isnan(0.0) ? _3537 : (isnan(_3537) ? 0.0 : min(_3537, 0.0));
            _3591 = ((abs(_3404 / _3392) * cbSceneParam._m0[80u].y) * ((((_3546 - _3547) * 2.0) - ((exp2(_3412 * (isnan(0.0) ? _3536 : (isnan(_3536) ? 0.0 : max(_3536, 0.0)))) - exp2(_3412 * (isnan(0.0) ? _3537 : (isnan(_3537) ? 0.0 : max(_3537, 0.0))))) * _3535)) - ((exp2(_3414 * _3546) - exp2(_3414 * _3547)) * _3535))) + (_3407 * cbSceneParam._m0[80u].z);
        }
        vec4 _3593 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3324, _3325, 1.0), 0.0);
        float _3602 = exp2((_3591 * (-1.44269502162933349609375)) * (1.0 - _3593.w));
        float _3603 = log2(_3602);
        float _3619 = log2(_3344);
        _3416 = (exp2(_3619 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3603 * cbSceneParam._m0[78u].x)) * _3593.x) / cbSceneParam._m0[78u].x)) + _3341;
        _3418 = (exp2(_3619 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3603 * cbSceneParam._m0[78u].y)) * _3593.y) / cbSceneParam._m0[78u].y)) + _3342;
        _3420 = (exp2(_3619 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3603 * cbSceneParam._m0[78u].z)) * _3593.z) / cbSceneParam._m0[78u].z)) + _3343;
        _3422 = _3602 * _3344;
    }
    else
    {
        _3416 = _3341;
        _3418 = _3342;
        _3420 = _3343;
        _3422 = _3344;
    }
    bool _3629;
    vec4 _3432;
    vec4 _3454;
    float _3456;
    float _3460;
    float _3461;
    float _3462;
    float _3463;
    bool _3473;
    for (;;)
    {
        _3432 = cbMatDynParam._m0[0u];
        float _3434 = roundEven(_3432.y);
        bool _3435 = _3434 == 3.0;
        float _3436 = log2(_3422);
        float _3443 = exp2(_3436 * cbSceneParam._m0[78u].x) * _3313;
        float _3444 = exp2(_3436 * cbSceneParam._m0[78u].y) * _3314;
        float _3445 = exp2(_3436 * cbSceneParam._m0[78u].z) * _3315;
        float _3452 = _1179 + (-0.5);
        _3454 = cbMtdParam._m0[1u];
        _3456 = _3454.y * _3452;
        float _3459 = (_3434 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3460 = _3459 * (_3435 ? _3443 : (_3443 + (cbSceneParam._m0[72u].w * _3416)));
        _3461 = _3459 * (_3435 ? _3444 : (_3444 + (cbSceneParam._m0[72u].w * _3418)));
        _3462 = _3459 * (_3435 ? _3445 : (_3445 + (cbSceneParam._m0[72u].w * _3420)));
        _3463 = _3452 * 0.999000012874603271484375;
        _3473 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3473)
        {
            if ((cbInstanceData._m0[_299 + 7u].x + _3463) < 0.5)
            {
                _3629 = true;
                break;
            }
        }
        uint _3570 = _1228 + uint(_3432.w);
        if ((cbInstanceData._m0[_3570].w < 1.0) && ((cbInstanceData._m0[_3570].w + _3463) < 0.5))
        {
            _3629 = true;
            break;
        }
        if ((_3456 + 1.0) < _3454.x)
        {
            _3629 = true;
            break;
        }
        _3629 = false;
        break;
    }
    float _3833;
    if (_3629)
    {
        discard_state = true;
        _3833 = 0.0;
    }
    else
    {
        _3833 = cbInstanceData._m0[_3316].w;
    }
    SV_Target.x = _3460;
    SV_Target.y = _3461;
    SV_Target.z = _3462;
    SV_Target.w = _3833;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3316].w;
    discard_exit();
}


