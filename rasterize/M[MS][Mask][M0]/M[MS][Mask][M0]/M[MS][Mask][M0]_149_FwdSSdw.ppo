#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1633;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _244 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _245 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _246 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _252 = inversesqrt(dot(vec3(_244, _245, _246), vec3(_244, _245, _246)));
    float _253 = _252 * _244;
    float _254 = _252 * _245;
    float _255 = _252 * _246;
    float _259 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _260 = _259 * NORMAL.x;
    float _261 = _259 * NORMAL.y;
    float _262 = _259 * NORMAL.z;
    float _266 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _267 = _266 * TANGENT.x;
    float _268 = _266 * TANGENT.y;
    float _269 = _266 * TANGENT.z;
    float _278 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _280 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _281 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3958 = isnan(0.0) ? _278 : (isnan(_278) ? 0.0 : max(_278, 0.0));
    float _3969 = isnan(0.0) ? _280 : (isnan(_280) ? 0.0 : max(_280, 0.0));
    float _3980 = isnan(0.0) ? _281 : (isnan(_281) ? 0.0 : max(_281, 0.0));
    uint _291 = uint(roundEven(NORMAL.w)) * 13u;
    uint _296 = _291 + 1u;
    uint _300 = _291 + 2u;
    float _309 = sqrt(((cbInstanceData._m0[_296].x * cbInstanceData._m0[_296].x) + (cbInstanceData._m0[_291].x * cbInstanceData._m0[_291].x)) + (cbInstanceData._m0[_300].x * cbInstanceData._m0[_300].x));
    float _310 = _309 * TEXCOORD.z;
    float _311 = _309 * TEXCOORD.w;
    vec4 _324 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _310) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _311) + cbTextureTilingScale._m0[13u].w));
    vec4 _347 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _373 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _378 = _373.x * cbMtdParam._m0[11u].x;
    float _379 = _373.y * cbMtdParam._m0[11u].y;
    float _380 = _373.z * cbMtdParam._m0[11u].z;
    vec4 _399 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _310) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _311) + cbTextureTilingScale._m0[5u].w));
    vec4 _418 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _456 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _458 = _456.x;
    float _470 = dot(vec4(_458, _456.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _487 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _418.x) * 2.0) - ((((_458 - _470) * cbMtdParam._m0[24u].z) + _470) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3991 = isnan(0.0) ? _487 : (isnan(_487) ? 0.0 : max(_487, 0.0));
    float _488 = isnan(1.0) ? _3991 : (isnan(_3991) ? 1.0 : min(_3991, 1.0));
    float _495 = (_488 * ((_399.x * cbMtdParam._m0[12u].x) - _378)) + _378;
    float _496 = (_488 * ((_399.y * cbMtdParam._m0[12u].y) - _379)) + _379;
    float _497 = (_488 * ((_399.z * cbMtdParam._m0[12u].z) - _380)) + _380;
    vec4 _514 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _310) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _311) + cbTextureTilingScale._m0[3u].w));
    vec4 _534 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _536 = _534.x;
    float _546 = dot(vec4(_536, _534.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _560 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _418.y) * 2.0) - ((((_536 - _546) * cbMtdParam._m0[24u].z) + _546) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4002 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
    float _561 = isnan(1.0) ? _4002 : (isnan(_4002) ? 1.0 : min(_4002, 1.0));
    float _568 = (_561 * ((_514.x * cbMtdParam._m0[13u].x) - _495)) + _495;
    float _569 = (_561 * ((_514.y * cbMtdParam._m0[13u].y) - _496)) + _496;
    float _570 = (_561 * ((_514.z * cbMtdParam._m0[13u].z) - _497)) + _497;
    vec4 _588 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _310) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _311) + cbTextureTilingScale._m0[24u].w));
    vec4 _605 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _607 = _605.x;
    float _617 = dot(vec4(_607, _605.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _629 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _418.z) * 2.0) - ((((_607 - _617) * cbMtdParam._m0[24u].z) + _617) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4013 = isnan(0.0) ? _629 : (isnan(_629) ? 0.0 : max(_629, 0.0));
    float _630 = isnan(1.0) ? _4013 : (isnan(_4013) ? 1.0 : min(_4013, 1.0));
    float _640 = (_347.x * cbMtdParam._m0[9u].x) * ((_630 * ((_588.x * cbMtdParam._m0[14u].x) - _568)) + _568);
    float _641 = (_347.y * cbMtdParam._m0[9u].y) * ((_630 * ((_588.y * cbMtdParam._m0[14u].y) - _569)) + _569);
    float _642 = (_347.z * cbMtdParam._m0[9u].z) * ((_630 * ((_588.z * cbMtdParam._m0[14u].z) - _570)) + _570);
    float _646 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _324.x) * _640;
    float _649 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _324.y) * _641;
    float _652 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _324.z) * _642;
    float _660 = (((_640 - _646) * (isnan(1.0) ? _3958 : (isnan(_3958) ? 1.0 : min(_3958, 1.0)))) + _646) * 4.55000019073486328125;
    float _662 = (((_641 - _649) * (isnan(1.0) ? _3969 : (isnan(_3969) ? 1.0 : min(_3969, 1.0)))) + _649) * 4.55000019073486328125;
    float _664 = (((_642 - _652) * (isnan(1.0) ? _3980 : (isnan(_3980) ? 1.0 : min(_3980, 1.0)))) + _652) * 4.55000019073486328125;
    vec4 _682 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _310) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _311) + cbTextureTilingScale._m0[14u].w));
    vec4 _701 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _310) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _311) + cbTextureTilingScale._m0[20u].w));
    vec4 _726 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _310) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _311) + cbTextureTilingScale._m0[4u].w));
    vec4 _743 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _745 = _743.x;
    float _746 = _743.y;
    float _747 = _743.z;
    float _754 = ((_726.x - _745) * _488) + _745;
    float _755 = ((_726.y - _746) * _488) + _746;
    float _756 = ((_726.z - _747) * _488) + _747;
    vec4 _768 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _310) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _311) + cbTextureTilingScale._m0[2u].w));
    float _779 = ((_768.x - _754) * _561) + _754;
    float _780 = ((_768.y - _755) * _561) + _755;
    float _781 = ((_768.z - _756) * _561) + _756;
    vec4 _793 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _310) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _311) + cbTextureTilingScale._m0[23u].w));
    float _806 = ((_793.z - _781) * _630) + _781;
    float _809 = ((((_793.x - _779) * _630) + _779) * 2.0) + (-1.0);
    float _810 = ((((_793.y - _780) * _630) + _780) * 2.0) + (-1.0);
    float _811 = dot(vec2(_809, _810), vec2(_809, _810));
    float _4024 = isnan(0.0) ? _811 : (isnan(_811) ? 0.0 : max(_811, 0.0));
    float _816 = sqrt(1.0 - (isnan(1.0) ? _4024 : (isnan(_4024) ? 1.0 : min(_4024, 1.0))));
    vec4 _834 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _846 = (_809 + ((((_701.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x)) + (((_834.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _847 = (_810 + ((((_701.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x)) + (((_834.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _850 = fma(_816, _260, fma(_847, _267, _846 * _253));
    float _853 = fma(_816, _261, fma(_847, _268, _846 * _254));
    float _856 = fma(_816, _262, fma(_847, _269, _846 * _255));
    float _860 = inversesqrt(dot(vec3(_850, _853, _856), vec3(_850, _853, _856)));
    vec4 _887 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _310) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _311) + cbTextureTilingScale._m0[11u].w));
    float _889 = _887.x;
    float _890 = 1.0 - _889;
    float _896 = (cbMtdParam._m0[19u].x + dot(vec4(_860 * _850, _860 * _853, _860 * _856, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_889 - _890) * cbMtdParam._m0[24u].w) + _890) * cbMtdParam._m0[21u].z);
    float _4035 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
    float _897 = isnan(1.0) ? _4035 : (isnan(_4035) ? 1.0 : min(_4035, 1.0));
    float _899 = (-0.0) - cbMtdParam._m0[24u].x;
    float _901 = isnan(0.0) ? _899 : (isnan(_899) ? 0.0 : max(_899, 0.0));
    float _902 = isnan(1.0) ? _901 : (isnan(_901) ? 1.0 : min(_901, 1.0));
    float _909 = _897 - ((_897 * TEXCOORD_8.x) * _902);
    float _910 = _897 - ((_897 * TEXCOORD_8.y) * _902);
    float _911 = _897 - ((_897 * TEXCOORD_8.z) * _902);
    float _918 = (_909 * ((_682.x * cbMtdParam._m0[18u].x) - _660)) + _660;
    float _919 = (_910 * ((_682.y * cbMtdParam._m0[18u].y) - _662)) + _662;
    float _920 = (_911 * ((_682.z * cbMtdParam._m0[18u].z) - _664)) + _664;
    float _935 = sqrt(((cbInstanceData._m0[_296].x * cbInstanceData._m0[_296].x) + (cbInstanceData._m0[_291].x * cbInstanceData._m0[_291].x)) + (cbInstanceData._m0[_300].x * cbInstanceData._m0[_300].x));
    float _936 = _935 * TEXCOORD.z;
    float _937 = _935 * TEXCOORD.w;
    vec4 _949 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _936) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _937) + cbTextureTilingScale._m0[19u].w));
    float _951 = _949.x;
    float _952 = 1.0 - _951;
    float _980 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_951 - _952) * cbMtdParam._m0[24u].y) + _952) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4056 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
    float _981 = isnan(1.0) ? _4056 : (isnan(_4056) ? 1.0 : min(_4056, 1.0));
    float _989 = ((((cbMtdParam._m0[10u].x - _918) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _981) + _918;
    float _990 = ((((cbMtdParam._m0[10u].y - _919) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _981) + _919;
    float _991 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _920)) * _981) + _920;
    float _996 = (((_701.z - _806) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _806;
    float _1000 = ((_834.z - _996) * cbMtdParam._m0[19u].w) + _996;
    vec4 _1016 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _310) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _311) + cbTextureTilingScale._m0[15u].w));
    float _1023 = (_1016.x * 2.0) + (-1.0);
    float _1024 = (_1016.y * 2.0) + (-1.0);
    float _1025 = dot(vec2(_1023, _1024), vec2(_1023, _1024));
    float _4067 = isnan(0.0) ? _1025 : (isnan(_1025) ? 0.0 : max(_1025, 0.0));
    float _1033 = ((_1016.z - _1000) * _909) + _1000;
    float _1036 = ((cbMtdParam._m0[23u].y - _1033) * _981) + _1033;
    vec4 _1057 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _936) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _937) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _1063 = (_1057.x * 2.0) + (-1.0);
    float _1064 = (_1057.y * 2.0) + (-1.0);
    float _1065 = dot(vec2(_1063, _1064), vec2(_1063, _1064));
    float _4078 = isnan(0.0) ? _1065 : (isnan(_1065) ? 0.0 : max(_1065, 0.0));
    float _1080 = ((sqrt(1.0 - (isnan(1.0) ? _4067 : (isnan(_4067) ? 1.0 : min(_4067, 1.0)))) - _816) * _911) + _816;
    float _1083 = (((_1023 - _846) * _909) + _846) + (cbMtdParam._m0[21u].x * _846);
    float _1084 = (((_1024 - _847) * _910) + _847) + (cbMtdParam._m0[21u].x * _847);
    float _1095 = (((_1063 - _1083) + (_1083 * cbMtdParam._m0[22u].z)) * _981) + _1083;
    float _1096 = (((_1064 - _1084) + (_1084 * cbMtdParam._m0[22u].z)) * _981) + _1084;
    float _1097 = (_981 * (sqrt(1.0 - (isnan(1.0) ? _4078 : (isnan(_4078) ? 1.0 : min(_4078, 1.0)))) - _1080)) + _1080;
    float _1099 = cbMtdParam._m0[22u].x + _834.w;
    float _1102 = fma(_1097, _260, fma(_1096, _267, _1095 * _253));
    float _1105 = fma(_1097, _261, fma(_1096, _268, _1095 * _254));
    float _1108 = fma(_1097, _262, fma(_1096, _269, _1095 * _255));
    float _1112 = inversesqrt(dot(vec3(_1102, _1105, _1108), vec3(_1102, _1105, _1108)));
    float _1113 = _1112 * _1102;
    float _1114 = _1112 * _1105;
    float _1115 = _1112 * _1108;
    float _4089 = isnan(0.0) ? _1036 : (isnan(_1036) ? 0.0 : max(_1036, 0.0));
    float _1116 = isnan(1.0) ? _4089 : (isnan(_4089) ? 1.0 : min(_4089, 1.0));
    float _4100 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
    float _4111 = isnan(0.0) ? _989 : (isnan(_989) ? 0.0 : max(_989, 0.0));
    float _4122 = isnan(0.0) ? _990 : (isnan(_990) ? 0.0 : max(_990, 0.0));
    float _4133 = isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0));
    float _1134 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1174 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1184 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1174);
    float _1185 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1174);
    float _1186 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1174);
    float _1190 = inversesqrt(dot(vec3(_1184, _1185, _1186), vec3(_1184, _1185, _1186)));
    float _1191 = _1184 * _1190;
    float _1192 = _1185 * _1190;
    float _1193 = _1186 * _1190;
    float _1199 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1200 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1218 = fma(_1115, cbSceneParam._m0[5u].z, fma(_1114, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1113));
    float _1221 = fma(_1115, cbSceneParam._m0[6u].z, fma(_1114, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1113));
    float _1224 = fma(_1115, cbSceneParam._m0[7u].z, fma(_1114, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1113));
    uint _1238 = (_291 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1244 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4111 : (isnan(_4111) ? 1.0 : min(_4111, 1.0)))) * cbInstanceData._m0[_1238].x;
    float _1245 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4122 : (isnan(_4122) ? 1.0 : min(_4122, 1.0)))) * cbInstanceData._m0[_1238].y;
    float _1246 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4133 : (isnan(_4133) ? 1.0 : min(_4133, 1.0)))) * cbInstanceData._m0[_1238].z;
    float _4144 = isnan(0.0) ? _1244 : (isnan(_1244) ? 0.0 : max(_1244, 0.0));
    float _1247 = isnan(1.0) ? _4144 : (isnan(_4144) ? 1.0 : min(_4144, 1.0));
    float _4155 = isnan(0.0) ? _1245 : (isnan(_1245) ? 0.0 : max(_1245, 0.0));
    float _1248 = isnan(1.0) ? _4155 : (isnan(_4155) ? 1.0 : min(_4155, 1.0));
    float _4166 = isnan(0.0) ? _1246 : (isnan(_1246) ? 0.0 : max(_1246, 0.0));
    float _1249 = isnan(1.0) ? _4166 : (isnan(_4166) ? 1.0 : min(_4166, 1.0));
    vec4 _1258 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1199, cbSceneParam._m0[86u].y * _1200));
    float _1262 = ((isnan(1.0) ? _4100 : (isnan(_4100) ? 1.0 : min(_4100, 1.0))) * TEXCOORD_5.w) * _1258.x;
    float _1263 = dot(vec3(_1113, _1114, _1115), vec3(_1191, _1192, _1193));
    float _1266 = _1263 * 2.0;
    float _1270 = (_1266 * _1113) - _1191;
    float _1271 = (_1266 * _1114) - _1192;
    float _1272 = (_1266 * _1115) - _1193;
    float _1276 = abs(dot(vec3(_1191, _1192, _1193), vec3(_1113, _1114, _1115)));
    float _4177 = isnan(0.0) ? _1276 : (isnan(_1276) ? 0.0 : max(_1276, 0.0));
    float _1278 = sqrt(_1116);
    float _1291 = exp2((_1278 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4177 : (isnan(_4177) ? 1.0 : min(_4177, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1278 * 3.0));
    float _1323 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1327 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1331 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1632;
    float _1634;
    float _1635;
    float _1636;
    float _1637;
    float _1638;
    float _1639;
    float _1640;
    float _1641;
    float _1642;
    float _1643;
    float _1644;
    float _1645;
    float _1646;
    float _1647;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1357 = fma(_1331, cbModelParam._m0[26u].z, fma(_1327, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1323));
        float _1361 = fma(_1331, cbModelParam._m0[27u].z, fma(_1327, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1323));
        float _1365 = fma(_1331, cbModelParam._m0[28u].z, fma(_1327, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1323));
        float _1390 = _1323 + _1113;
        float _1391 = _1327 + _1114;
        float _1392 = _1331 + _1115;
        float _1402 = fma(_1392, cbModelParam._m0[26u].z, fma(_1391, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1390)) - _1357;
        float _1403 = fma(_1392, cbModelParam._m0[27u].z, fma(_1391, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1390)) - _1361;
        float _1404 = fma(_1392, cbModelParam._m0[28u].z, fma(_1391, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1390)) - _1365;
        float _1408 = inversesqrt(dot(vec3(_1402, _1403, _1404), vec3(_1402, _1403, _1404)));
        float _1421 = ((_1408 * _1402) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1357 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1422 = ((_1408 * _1403) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1361 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1423 = ((_1408 * _1404) / cbModelParam._m0[34u].z) + ((((((_1365 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1426 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1421, _1422, _1423), 0.0);
        vec4 _1433 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1421, _1422, _1423), 0.0);
        vec4 _1440 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1421, _1422, _1423), 0.0);
        vec4 _1447 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1421, _1422, _1423), 0.0);
        float _1460 = exp2((_1426.w + (-0.5)) * 20.0) * 2.0;
        float _1461 = _1460 * (_1426.x + (-0.5));
        float _1462 = _1460 * (_1426.y + (-0.5));
        float _1463 = _1460 * (_1426.z + (-0.5));
        float _1470 = exp2((_1433.w + (-0.5)) * 20.0) * 2.0;
        float _1471 = _1470 * (_1433.x + (-0.5));
        float _1472 = _1470 * (_1433.y + (-0.5));
        float _1473 = _1470 * (_1433.z + (-0.5));
        float _1480 = exp2((_1440.w + (-0.5)) * 20.0) * 2.0;
        float _1481 = _1480 * (_1440.x + (-0.5));
        float _1482 = _1480 * (_1440.y + (-0.5));
        float _1483 = _1480 * (_1440.z + (-0.5));
        float _1490 = exp2((_1447.w + (-0.5)) * 20.0) * 2.0;
        float _1491 = _1490 * (_1447.x + (-0.5));
        float _1492 = _1490 * (_1447.y + (-0.5));
        float _1493 = _1490 * (_1447.z + (-0.5));
        float _1494 = isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0));
        float _1495 = isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0));
        float _1496 = isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0));
        float _1497 = _1461 * 0.5;
        float _1498 = _1471 * 0.5;
        float _1499 = _1481 * 0.5;
        float _1500 = dot(vec3(_1497, _1498, _1499), vec3(_1497, _1498, _1499));
        float _1505 = (_1500 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1500);
        float _1514 = (dot(vec3(_1113, _1114, _1115), vec3(_1505 * _1497, _1505 * _1498, _1505 * _1499)) + 1.0) * 0.5;
        float _4203 = isnan(0.0) ? _1514 : (isnan(_1514) ? 0.0 : max(_1514, 0.0));
        float _1524 = sqrt(((_1498 * _1498) + (_1497 * _1497)) + (_1499 * _1499)) / (_1494 + 9.9999997473787516355514526367188e-06);
        float _4214 = isnan(0.0) ? _1524 : (isnan(_1524) ? 0.0 : max(_1524, 0.0));
        float _1525 = isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0));
        float _1526 = _1525 * 2.0;
        float _1530 = (1.0 - _1525) / (_1525 + 1.0);
        float _4225 = isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0));
        float _1531 = isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0));
        float _1540 = ((((1.0 - _1531) * (_1526 + 2.0)) * exp2(log2(isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0))) * (_1526 + 1.0))) + _1531) * _1494;
        float _1541 = _1462 * 0.5;
        float _1542 = _1472 * 0.5;
        float _1543 = _1482 * 0.5;
        float _1544 = dot(vec3(_1541, _1542, _1543), vec3(_1541, _1542, _1543));
        float _1549 = (_1544 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1544);
        float _1557 = (dot(vec3(_1113, _1114, _1115), vec3(_1549 * _1541, _1549 * _1542, _1549 * _1543)) + 1.0) * 0.5;
        float _4236 = isnan(0.0) ? _1557 : (isnan(_1557) ? 0.0 : max(_1557, 0.0));
        float _1566 = sqrt(((_1542 * _1542) + (_1541 * _1541)) + (_1543 * _1543)) / (_1495 + 9.9999997473787516355514526367188e-06);
        float _4247 = isnan(0.0) ? _1566 : (isnan(_1566) ? 0.0 : max(_1566, 0.0));
        float _1567 = isnan(1.0) ? _4247 : (isnan(_4247) ? 1.0 : min(_4247, 1.0));
        float _1568 = _1567 * 2.0;
        float _1572 = (1.0 - _1567) / (_1567 + 1.0);
        float _4258 = isnan(0.0) ? _1572 : (isnan(_1572) ? 0.0 : max(_1572, 0.0));
        float _1573 = isnan(1.0) ? _4258 : (isnan(_4258) ? 1.0 : min(_4258, 1.0));
        float _1582 = ((((1.0 - _1573) * (_1568 + 2.0)) * exp2(log2(isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0))) * (_1568 + 1.0))) + _1573) * _1495;
        float _1583 = _1463 * 0.5;
        float _1584 = _1473 * 0.5;
        float _1585 = _1483 * 0.5;
        float _1586 = dot(vec3(_1583, _1584, _1585), vec3(_1583, _1584, _1585));
        float _1591 = (_1586 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1586);
        float _1599 = (dot(vec3(_1113, _1114, _1115), vec3(_1591 * _1583, _1591 * _1584, _1591 * _1585)) + 1.0) * 0.5;
        float _4269 = isnan(0.0) ? _1599 : (isnan(_1599) ? 0.0 : max(_1599, 0.0));
        float _1608 = sqrt(((_1584 * _1584) + (_1583 * _1583)) + (_1585 * _1585)) / (_1496 + 9.9999997473787516355514526367188e-06);
        float _4280 = isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0));
        float _1609 = isnan(1.0) ? _4280 : (isnan(_4280) ? 1.0 : min(_4280, 1.0));
        float _1610 = _1609 * 2.0;
        float _1614 = (1.0 - _1609) / (_1609 + 1.0);
        float _4291 = isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0));
        float _1615 = isnan(1.0) ? _4291 : (isnan(_4291) ? 1.0 : min(_4291, 1.0));
        float _1624 = ((((1.0 - _1615) * (_1610 + 2.0)) * exp2(log2(isnan(1.0) ? _4269 : (isnan(_4269) ? 1.0 : min(_4269, 1.0))) * (_1610 + 1.0))) + _1615) * _1496;
        _1632 = _1463;
        _1634 = _1462;
        _1635 = _1461;
        _1636 = _1473;
        _1637 = _1472;
        _1638 = _1471;
        _1639 = _1483;
        _1640 = _1482;
        _1641 = _1481;
        _1642 = _1496;
        _1643 = _1495;
        _1644 = _1494;
        _1645 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1540 : (isnan(_1540) ? 0.0 : max(_1540, 0.0)));
        _1646 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1582 : (isnan(_1582) ? 0.0 : max(_1582, 0.0)));
        _1647 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1624 : (isnan(_1624) ? 0.0 : max(_1624, 0.0)));
    }
    else
    {
        _1632 = _1633;
        _1634 = _1633;
        _1635 = _1633;
        _1636 = _1633;
        _1637 = _1633;
        _1638 = _1633;
        _1639 = _1633;
        _1640 = _1633;
        _1641 = _1633;
        _1642 = _1633;
        _1643 = _1633;
        _1644 = _1633;
        _1645 = 0.0;
        _1646 = 0.0;
        _1647 = 0.0;
    }
    float _1939;
    float _1940;
    float _1941;
    float _1942;
    float _1943;
    float _1944;
    float _1945;
    float _1946;
    float _1947;
    float _1948;
    float _1949;
    float _1950;
    float _1951;
    float _1952;
    float _1953;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1670 = fma(_1331, cbModelParam._m0[30u].z, fma(_1327, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1323));
        float _1674 = fma(_1331, cbModelParam._m0[31u].z, fma(_1327, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1323));
        float _1678 = fma(_1331, cbModelParam._m0[32u].z, fma(_1327, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1323));
        float _1701 = _1323 + _1113;
        float _1702 = _1327 + _1114;
        float _1703 = _1331 + _1115;
        float _1713 = fma(_1703, cbModelParam._m0[30u].z, fma(_1702, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1701)) - _1670;
        float _1714 = fma(_1703, cbModelParam._m0[31u].z, fma(_1702, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1701)) - _1674;
        float _1715 = fma(_1703, cbModelParam._m0[32u].z, fma(_1702, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1701)) - _1678;
        float _1719 = inversesqrt(dot(vec3(_1713, _1714, _1715), vec3(_1713, _1714, _1715)));
        float _1732 = ((_1719 * _1713) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1670 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1733 = ((_1719 * _1714) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1674 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1734 = ((_1719 * _1715) / cbModelParam._m0[35u].z) + ((((((_1678 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1736 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1732, _1733, _1734), 0.0);
        vec4 _1743 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1732, _1733, _1734), 0.0);
        vec4 _1750 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1732, _1733, _1734), 0.0);
        vec4 _1757 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1732, _1733, _1734), 0.0);
        float _1769 = exp2((_1736.w + (-0.5)) * 20.0) * 2.0;
        float _1770 = _1769 * (_1736.x + (-0.5));
        float _1771 = _1769 * (_1736.y + (-0.5));
        float _1772 = _1769 * (_1736.z + (-0.5));
        float _1779 = exp2((_1743.w + (-0.5)) * 20.0) * 2.0;
        float _1780 = _1779 * (_1743.x + (-0.5));
        float _1781 = _1779 * (_1743.y + (-0.5));
        float _1782 = _1779 * (_1743.z + (-0.5));
        float _1789 = exp2((_1750.w + (-0.5)) * 20.0) * 2.0;
        float _1790 = _1789 * (_1750.x + (-0.5));
        float _1791 = _1789 * (_1750.y + (-0.5));
        float _1792 = _1789 * (_1750.z + (-0.5));
        float _1799 = exp2((_1757.w + (-0.5)) * 20.0) * 2.0;
        float _1800 = _1799 * (_1757.x + (-0.5));
        float _1801 = _1799 * (_1757.y + (-0.5));
        float _1802 = _1799 * (_1757.z + (-0.5));
        float _1803 = isnan(0.0) ? _1800 : (isnan(_1800) ? 0.0 : max(_1800, 0.0));
        float _1804 = isnan(0.0) ? _1801 : (isnan(_1801) ? 0.0 : max(_1801, 0.0));
        float _1805 = isnan(0.0) ? _1802 : (isnan(_1802) ? 0.0 : max(_1802, 0.0));
        float _1806 = _1770 * 0.5;
        float _1807 = _1780 * 0.5;
        float _1808 = _1790 * 0.5;
        float _1809 = dot(vec3(_1806, _1807, _1808), vec3(_1806, _1807, _1808));
        float _1814 = (_1809 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1809);
        float _1822 = (dot(vec3(_1113, _1114, _1115), vec3(_1814 * _1806, _1814 * _1807, _1814 * _1808)) + 1.0) * 0.5;
        float _4332 = isnan(0.0) ? _1822 : (isnan(_1822) ? 0.0 : max(_1822, 0.0));
        float _1831 = sqrt(((_1807 * _1807) + (_1806 * _1806)) + (_1808 * _1808)) / (_1803 + 9.9999997473787516355514526367188e-06);
        float _4343 = isnan(0.0) ? _1831 : (isnan(_1831) ? 0.0 : max(_1831, 0.0));
        float _1832 = isnan(1.0) ? _4343 : (isnan(_4343) ? 1.0 : min(_4343, 1.0));
        float _1833 = _1832 * 2.0;
        float _1837 = (1.0 - _1832) / (_1832 + 1.0);
        float _4354 = isnan(0.0) ? _1837 : (isnan(_1837) ? 0.0 : max(_1837, 0.0));
        float _1838 = isnan(1.0) ? _4354 : (isnan(_4354) ? 1.0 : min(_4354, 1.0));
        float _1847 = ((((1.0 - _1838) * (_1833 + 2.0)) * exp2(log2(isnan(1.0) ? _4332 : (isnan(_4332) ? 1.0 : min(_4332, 1.0))) * (_1833 + 1.0))) + _1838) * _1803;
        float _1848 = _1771 * 0.5;
        float _1849 = _1781 * 0.5;
        float _1850 = _1791 * 0.5;
        float _1851 = dot(vec3(_1848, _1849, _1850), vec3(_1848, _1849, _1850));
        float _1856 = (_1851 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1851);
        float _1864 = (dot(vec3(_1113, _1114, _1115), vec3(_1856 * _1848, _1856 * _1849, _1856 * _1850)) + 1.0) * 0.5;
        float _4365 = isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0));
        float _1873 = sqrt(((_1849 * _1849) + (_1848 * _1848)) + (_1850 * _1850)) / (_1804 + 9.9999997473787516355514526367188e-06);
        float _4376 = isnan(0.0) ? _1873 : (isnan(_1873) ? 0.0 : max(_1873, 0.0));
        float _1874 = isnan(1.0) ? _4376 : (isnan(_4376) ? 1.0 : min(_4376, 1.0));
        float _1875 = _1874 * 2.0;
        float _1879 = (1.0 - _1874) / (_1874 + 1.0);
        float _4387 = isnan(0.0) ? _1879 : (isnan(_1879) ? 0.0 : max(_1879, 0.0));
        float _1880 = isnan(1.0) ? _4387 : (isnan(_4387) ? 1.0 : min(_4387, 1.0));
        float _1889 = ((((1.0 - _1880) * (_1875 + 2.0)) * exp2(log2(isnan(1.0) ? _4365 : (isnan(_4365) ? 1.0 : min(_4365, 1.0))) * (_1875 + 1.0))) + _1880) * _1804;
        float _1890 = _1772 * 0.5;
        float _1891 = _1782 * 0.5;
        float _1892 = _1792 * 0.5;
        float _1893 = dot(vec3(_1890, _1891, _1892), vec3(_1890, _1891, _1892));
        float _1898 = (_1893 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1893);
        float _1906 = (dot(vec3(_1113, _1114, _1115), vec3(_1898 * _1890, _1898 * _1891, _1898 * _1892)) + 1.0) * 0.5;
        float _4398 = isnan(0.0) ? _1906 : (isnan(_1906) ? 0.0 : max(_1906, 0.0));
        float _1915 = sqrt(((_1891 * _1891) + (_1890 * _1890)) + (_1892 * _1892)) / (_1805 + 9.9999997473787516355514526367188e-06);
        float _4409 = isnan(0.0) ? _1915 : (isnan(_1915) ? 0.0 : max(_1915, 0.0));
        float _1916 = isnan(1.0) ? _4409 : (isnan(_4409) ? 1.0 : min(_4409, 1.0));
        float _1917 = _1916 * 2.0;
        float _1921 = (1.0 - _1916) / (_1916 + 1.0);
        float _4420 = isnan(0.0) ? _1921 : (isnan(_1921) ? 0.0 : max(_1921, 0.0));
        float _1922 = isnan(1.0) ? _4420 : (isnan(_4420) ? 1.0 : min(_4420, 1.0));
        float _1931 = ((((1.0 - _1922) * (_1917 + 2.0)) * exp2(log2(isnan(1.0) ? _4398 : (isnan(_4398) ? 1.0 : min(_4398, 1.0))) * (_1917 + 1.0))) + _1922) * _1805;
        _1939 = _1772;
        _1940 = _1771;
        _1941 = _1770;
        _1942 = _1782;
        _1943 = _1781;
        _1944 = _1780;
        _1945 = _1792;
        _1946 = _1791;
        _1947 = _1790;
        _1948 = _1805;
        _1949 = _1804;
        _1950 = _1803;
        _1951 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1847 : (isnan(_1847) ? 0.0 : max(_1847, 0.0)));
        _1952 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1889 : (isnan(_1889) ? 0.0 : max(_1889, 0.0)));
        _1953 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1931 : (isnan(_1931) ? 0.0 : max(_1931, 0.0)));
    }
    else
    {
        _1939 = _1633;
        _1940 = _1633;
        _1941 = _1633;
        _1942 = _1633;
        _1943 = _1633;
        _1944 = _1633;
        _1945 = _1633;
        _1946 = _1633;
        _1947 = _1633;
        _1948 = _1633;
        _1949 = _1633;
        _1950 = _1633;
        _1951 = 0.0;
        _1952 = 0.0;
        _1953 = 0.0;
    }
    float _1963 = (cbModelParam._m0[1u].x * (_1951 - _1645)) + _1645;
    float _1964 = (cbModelParam._m0[1u].x * (_1952 - _1646)) + _1646;
    float _1965 = (cbModelParam._m0[1u].x * (_1953 - _1647)) + _1647;
    float _1986 = fma(_1965, cbSceneParam._m0[89u].z, fma(_1964, cbSceneParam._m0[89u].y, _1963 * cbSceneParam._m0[89u].x));
    float _1989 = fma(_1965, cbSceneParam._m0[90u].z, fma(_1964, cbSceneParam._m0[90u].y, _1963 * cbSceneParam._m0[90u].x));
    float _1992 = fma(_1965, cbSceneParam._m0[91u].z, fma(_1964, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1963));
    float _2007 = _1270 * 0.5;
    float _2008 = _1271 * 0.5;
    float _2009 = _1272 * 0.5;
    float _2010 = dot(vec4(_2007, _2008, _2009, 1.0), vec4(_1941, _1944, _1947, _1950));
    float _2013 = dot(vec4(_2007, _2008, _2009, 1.0), vec4(_1940, _1943, _1946, _1949));
    float _2016 = dot(vec4(_2007, _2008, _2009, 1.0), vec4(_1939, _1942, _1945, _1948));
    float _2050;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2023 = dot(vec4(_2007, _2008, _2009, 1.0), vec4(_1632, _1636, _1639, _1642));
        float _2027 = dot(vec4(_2007, _2008, _2009, 1.0), vec4(_1634, _1637, _1640, _1643));
        float _2031 = dot(vec4(_2007, _2008, _2009, 1.0), vec4(_1635, _1638, _1641, _1644));
        float _2038 = dot(vec4(cbModelParam._m0[39u]), vec4(_2007, _2008, _2009, 1.0));
        _2050 = dot(vec3(isnan(0.0) ? _2031 : (isnan(_2031) ? 0.0 : max(_2031, 0.0)), isnan(0.0) ? _2027 : (isnan(_2027) ? 0.0 : max(_2027, 0.0)), isnan(0.0) ? _2023 : (isnan(_2023) ? 0.0 : max(_2023, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2038) ? 0.0 : (isnan(0.0) ? _2038 : max(0.0, _2038))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2050 = 1.0;
    }
    float _2061;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2052 = dot(vec4(cbModelParam._m0[40u]), vec4(_2007, _2008, _2009, 1.0));
        _2061 = dot(vec3(isnan(0.0) ? _2010 : (isnan(_2010) ? 0.0 : max(_2010, 0.0)), isnan(0.0) ? _2013 : (isnan(_2013) ? 0.0 : max(_2013, 0.0)), isnan(0.0) ? _2016 : (isnan(_2016) ? 0.0 : max(_2016, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2052) ? 0.0 : (isnan(0.0) ? _2052 : max(0.0, _2052))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2061 = 1.0;
    }
    float _2065 = (_2061 * cbModelParam._m0[1u].x) + (_2050 * (1.0 - cbModelParam._m0[1u].x));
    float _2075 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1116);
    float _2076 = isnan(_2075) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2075 : min(cbModelParam._m0[25u].z, _2075));
    float _2156;
    float _2158;
    float _2160;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2123 = fma(_1331, cbModelParam._m0[13u].z, fma(_1327, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1323)) + cbModelParam._m0[13u].w;
        float _2127 = fma(_1331, cbModelParam._m0[14u].z, fma(_1327, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1323)) + cbModelParam._m0[14u].w;
        float _2131 = fma(_1331, cbModelParam._m0[15u].z, fma(_1327, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1323)) + cbModelParam._m0[15u].w;
        float _2134 = fma(_1272, cbModelParam._m0[13u].z, fma(_1271, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1270));
        float _2137 = fma(_1272, cbModelParam._m0[14u].z, fma(_1271, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1270));
        float _2140 = fma(_1272, cbModelParam._m0[15u].z, fma(_1271, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1270));
        float _2168;
        if (_2134 > 0.0)
        {
            _2168 = abs((1.0 - _2123) / _2134);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2134 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2123 + 1.0) / _2134);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2168 = frontier_phi_14_12_ladder;
        }
        float _2389;
        if (_2137 > 0.0)
        {
            _2389 = abs((1.0 - _2127) / _2137);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2137 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2127 + 1.0) / _2137);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2389 = frontier_phi_23_19_ladder;
        }
        float _2635;
        if (_2140 > 0.0)
        {
            _2635 = abs((1.0 - _2131) / _2140);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2140 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2131 + 1.0) / _2140);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2635 = frontier_phi_35_30_ladder;
        }
        float _2637 = isnan(_2389) ? _2168 : (isnan(_2168) ? _2389 : min(_2168, _2389));
        float _2638 = isnan(_2635) ? _2637 : (isnan(_2637) ? _2635 : min(_2637, _2635));
        float _2642 = (_2638 * _2134) + _2123;
        float _2643 = (_2638 * _2137) + _2127;
        float _2644 = (_2638 * _2140) + _2131;
        float _2645 = _2638 * 9.9999997473787516355514526367188e-05;
        float _2647 = (-1.0) - _2645;
        float _2649 = _2645 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2644 > _2649) || ((_2644 < _2647) || ((_2643 > _2649) || ((_2643 < _2647) || ((_2642 < _2647) || (_2642 > _2649))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2768 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2644, cbModelParam._m0[9u].z, fma(_2643, cbModelParam._m0[9u].y, _2642 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2644, cbModelParam._m0[10u].z, fma(_2643, cbModelParam._m0[10u].y, _2642 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2644, cbModelParam._m0[11u].z, fma(_2643, cbModelParam._m0[11u].y, _2642 * cbModelParam._m0[11u].x))), _2076);
            frontier_phi_13_35_ladder = _2768.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2768.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2768.x * cbModelParam._m0[1u].y;
        }
        _2156 = frontier_phi_13_35_ladder_2;
        _2158 = frontier_phi_13_35_ladder_1;
        _2160 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2144 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1270, _1271, _1272), _2076);
        _2156 = _2144.x * cbModelParam._m0[1u].y;
        _2158 = _2144.y * cbModelParam._m0[1u].y;
        _2160 = _2144.z * cbModelParam._m0[1u].y;
    }
    float _2164 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1116);
    float _2165 = isnan(_2164) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2164 : min(cbModelParam._m0[25u].w, _2164));
    float _2254;
    float _2256;
    float _2258;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2218 = fma(_1331, cbModelParam._m0[21u].z, fma(_1327, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1323)) + cbModelParam._m0[21u].w;
        float _2222 = fma(_1331, cbModelParam._m0[22u].z, fma(_1327, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1323)) + cbModelParam._m0[22u].w;
        float _2226 = fma(_1331, cbModelParam._m0[23u].z, fma(_1327, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1323)) + cbModelParam._m0[23u].w;
        float _2229 = fma(_1272, cbModelParam._m0[21u].z, fma(_1271, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1270));
        float _2232 = fma(_1272, cbModelParam._m0[22u].z, fma(_1271, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1270));
        float _2235 = fma(_1272, cbModelParam._m0[23u].z, fma(_1271, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1270));
        float _2394;
        if (_2229 > 0.0)
        {
            _2394 = abs((1.0 - _2218) / _2229);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2229 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2218 + 1.0) / _2229);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2394 = frontier_phi_25_21_ladder;
        }
        float _2662;
        if (_2232 > 0.0)
        {
            _2662 = abs((1.0 - _2222) / _2232);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2232 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2222 + 1.0) / _2232);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2662 = frontier_phi_37_32_ladder;
        }
        float _2867;
        if (_2235 > 0.0)
        {
            _2867 = abs((1.0 - _2226) / _2235);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2235 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2226 + 1.0) / _2235);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2867 = frontier_phi_46_43_ladder;
        }
        float _2869 = isnan(_2662) ? _2394 : (isnan(_2394) ? _2662 : min(_2394, _2662));
        float _2870 = isnan(_2867) ? _2869 : (isnan(_2869) ? _2867 : min(_2869, _2867));
        float _2874 = (_2870 * _2229) + _2218;
        float _2875 = (_2870 * _2232) + _2222;
        float _2876 = (_2870 * _2235) + _2226;
        float _2877 = _2870 * 9.9999997473787516355514526367188e-05;
        float _2878 = (-1.0) - _2877;
        float _2880 = _2877 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2876 > _2880) || ((_2876 < _2878) || ((_2875 > _2880) || ((_2875 < _2878) || ((_2874 < _2878) || (_2874 > _2880))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3075 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2876, cbModelParam._m0[17u].z, fma(_2875, cbModelParam._m0[17u].y, _2874 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2876, cbModelParam._m0[18u].z, fma(_2875, cbModelParam._m0[18u].y, _2874 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2876, cbModelParam._m0[19u].z, fma(_2875, cbModelParam._m0[19u].y, _2874 * cbModelParam._m0[19u].x))), _2165);
            frontier_phi_22_46_ladder = _3075.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _3075.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _3075.x * cbModelParam._m0[1u].z;
        }
        _2254 = frontier_phi_22_46_ladder_2;
        _2256 = frontier_phi_22_46_ladder_1;
        _2258 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2238 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1270, _1271, _1272), _2165);
        _2254 = _2238.x * cbModelParam._m0[1u].z;
        _2256 = _2238.y * cbModelParam._m0[1u].z;
        _2258 = _2238.z * cbModelParam._m0[1u].z;
    }
    float _2270 = ((((1.0 - _1291) * ((_1278 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1291 * _1278)) * _1262;
    float _2271 = _2270 * ((cbModelParam._m0[1u].w * (_2254 - _2156)) + _2156);
    float _2272 = _2270 * ((cbModelParam._m0[1u].w * (_2256 - _2158)) + _2158);
    float _2273 = _2270 * ((cbModelParam._m0[1u].w * (_2258 - _2160)) + _2160);
    float _2276 = fma(_2273, cbSceneParam._m0[89u].z, fma(_2272, cbSceneParam._m0[89u].y, _2271 * cbSceneParam._m0[89u].x));
    float _2279 = fma(_2273, cbSceneParam._m0[90u].z, fma(_2272, cbSceneParam._m0[90u].y, _2271 * cbSceneParam._m0[90u].x));
    float _2282 = fma(_2273, cbSceneParam._m0[91u].z, fma(_2272, cbSceneParam._m0[91u].y, _2271 * cbSceneParam._m0[91u].x));
    vec4 _2290 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1199, _1200));
    float _2292 = _2290.w;
    float _2304 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2292);
    float _2305 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2292);
    float _2306 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2292);
    uvec4 _2310 = floatBitsToUint(cbInstanceData._m0[_291 + 5u]);
    uint _2312 = _2310.x * 14u;
    uint _2313 = _2312 + 13u;
    float _2320 = _1262 + (-1.0);
    float _2325 = (cbLight._m0[_2313].x * _2320) + 1.0;
    float _2326 = (cbLight._m0[_2313].y * _2320) + 1.0;
    float _2327 = (cbLight._m0[_2313].z * _2320) + 1.0;
    float _2328 = (cbLight._m0[_2313].w * _2320) + 1.0;
    uint _2329 = _2312 + 5u;
    float _2335 = isnan(1.0) ? _2326 : (isnan(_2326) ? 1.0 : min(_2326, 1.0));
    uint _2339 = _2312 + 4u;
    float _2348 = isnan(1.0) ? _2325 : (isnan(_2325) ? 1.0 : min(_2325, 1.0));
    uint _2352 = _2312 | 1u;
    float _2363 = dot(vec3(cbLight._m0[_2312].xyz), vec3(_1113, _1114, _1115));
    float _2366 = dot(vec3(cbLight._m0[_2352].xyz), vec3(_1113, _1114, _1115));
    float _4556 = isnan(0.0) ? _2363 : (isnan(_2363) ? 0.0 : max(_2363, 0.0));
    float _4567 = isnan(0.0) ? _2366 : (isnan(_2366) ? 0.0 : max(_2366, 0.0));
    float _2371 = (isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0))) * 0.3183098733425140380859375;
    float _2373 = (isnan(1.0) ? _4567 : (isnan(_4567) ? 1.0 : min(_4567, 1.0))) * 0.3183098733425140380859375;
    float _2380 = ((cbLight._m0[_2329].x * _2335) * _2373) + (((cbLight._m0[_2339].x * _2304) * _2348) * _2371);
    float _2381 = ((_2335 * cbLight._m0[_2329].y) * _2373) + (((cbLight._m0[_2339].y * _2305) * _2348) * _2371);
    float _2382 = ((_2335 * cbLight._m0[_2329].z) * _2373) + (((cbLight._m0[_2339].z * _2306) * _2348) * _2371);
    uvec4 _2386 = floatBitsToUint(cbLight._m0[_2312 + 12u]);
    bool _2388 = _2386.x == 0u;
    float _2399;
    float _2401;
    float _2403;
    if (_2388)
    {
        _2399 = _2380;
        _2401 = _2381;
        _2403 = _2382;
    }
    else
    {
        uint _2407 = _2312 + 6u;
        float _2423 = (dot(vec3(cbLight._m0[_2312 + 2u].xyz), vec3(_1113, _1114, _1115)) * 0.5) + 0.5;
        float _2424 = _2423 * _2423;
        float _4578 = isnan(0.0) ? _2424 : (isnan(_2424) ? 0.0 : max(_2424, 0.0));
        float _2425 = isnan(1.0) ? _4578 : (isnan(_4578) ? 1.0 : min(_4578, 1.0));
        float _2426 = isnan(1.0) ? _2327 : (isnan(_2327) ? 1.0 : min(_2327, 1.0));
        _2399 = (((cbLight._m0[_2407].x * 0.3183098733425140380859375) * _2425) * _2426) + _2380;
        _2401 = (((cbLight._m0[_2407].y * 0.3183098733425140380859375) * _2425) * _2426) + _2381;
        _2403 = (((cbLight._m0[_2407].z * 0.3183098733425140380859375) * _2425) * _2426) + _2382;
    }
    bool _2406 = _2386.y == 0u;
    float _2444;
    float _2446;
    float _2448;
    if (_2406)
    {
        _2444 = _2399;
        _2446 = _2401;
        _2448 = _2403;
    }
    else
    {
        uint _2606 = _2312 + 7u;
        float _2622 = (dot(vec3(cbLight._m0[_2312 + 3u].xyz), vec3(_1113, _1114, _1115)) * 0.5) + 0.5;
        float _2623 = _2622 * _2622;
        float _4594 = isnan(0.0) ? _2623 : (isnan(_2623) ? 0.0 : max(_2623, 0.0));
        float _2624 = isnan(1.0) ? _4594 : (isnan(_4594) ? 1.0 : min(_4594, 1.0));
        float _2625 = isnan(1.0) ? _2328 : (isnan(_2328) ? 1.0 : min(_2328, 1.0));
        _2444 = (((cbLight._m0[_2606].x * 0.3183098733425140380859375) * _2624) * _2625) + _2399;
        _2446 = (((cbLight._m0[_2606].y * 0.3183098733425140380859375) * _2624) * _2625) + _2401;
        _2448 = (((cbLight._m0[_2606].z * 0.3183098733425140380859375) * _2624) * _2625) + _2403;
    }
    uint _2451 = _2312 + 8u;
    float _2464 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2312].w)) * _1116) * 0.949999988079071044921875);
    float _2465 = _2464 * _2464;
    float _2466 = cbLight._m0[_2312].x + _1191;
    float _2467 = cbLight._m0[_2312].y + _1192;
    float _2468 = cbLight._m0[_2312].z + _1193;
    float _2472 = inversesqrt(dot(vec3(_2466, _2467, _2468), vec3(_2466, _2467, _2468)));
    float _2473 = _2472 * _2466;
    float _2474 = _2472 * _2467;
    float _2475 = _2472 * _2468;
    float _2476 = dot(vec3(_1113, _1114, _1115), vec3(cbLight._m0[_2312].xyz));
    float _4610 = isnan(0.0) ? _2476 : (isnan(_2476) ? 0.0 : max(_2476, 0.0));
    float _2479 = isnan(1.0) ? _4610 : (isnan(_4610) ? 1.0 : min(_4610, 1.0));
    float _4621 = isnan(0.0) ? _1263 : (isnan(_1263) ? 0.0 : max(_1263, 0.0));
    float _2480 = isnan(1.0) ? _4621 : (isnan(_4621) ? 1.0 : min(_4621, 1.0));
    float _2481 = dot(vec3(_1113, _1114, _1115), vec3(_2473, _2474, _2475));
    float _4632 = isnan(0.0) ? _2481 : (isnan(_2481) ? 0.0 : max(_2481, 0.0));
    float _2484 = isnan(1.0) ? _4632 : (isnan(_4632) ? 1.0 : min(_4632, 1.0));
    float _2485 = dot(vec3(cbLight._m0[_2312].xyz), vec3(_2473, _2474, _2475));
    float _4643 = isnan(0.0) ? _2485 : (isnan(_2485) ? 0.0 : max(_2485, 0.0));
    float _2489 = _2465 * _2465;
    float _2493 = ((_2484 * _2484) * (_2489 + (-1.0))) + 1.0;
    float _2504 = (exp2(log2(1.0 - (isnan(1.0) ? _4643 : (isnan(_4643) ? 1.0 : min(_4643, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2505 = 1.0 - _2465;
    float _2516 = (0.5 / (((_2480 * ((_2479 * _2505) + _2465)) + 9.9999999392252902907785028219223e-09) + (((_2480 * _2505) + _2465) * _2479))) * _2479;
    float _4654 = isnan(0.0) ? _2516 : (isnan(_2516) ? 0.0 : max(_2516, 0.0));
    float _2518 = (isnan(1.0) ? _4654 : (isnan(_4654) ? 1.0 : min(_4654, 1.0))) * (_2489 / ((_2493 * _2493) * 3.141590118408203125));
    uint _2532 = _2312 + 9u;
    float _2543 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2352].w)) * _1116) * 0.949999988079071044921875);
    float _2544 = _2543 * _2543;
    float _2545 = cbLight._m0[_2352].x + _1191;
    float _2546 = cbLight._m0[_2352].y + _1192;
    float _2547 = cbLight._m0[_2352].z + _1193;
    float _2551 = inversesqrt(dot(vec3(_2545, _2546, _2547), vec3(_2545, _2546, _2547)));
    float _2552 = _2551 * _2545;
    float _2553 = _2551 * _2546;
    float _2554 = _2551 * _2547;
    float _2555 = dot(vec3(_1113, _1114, _1115), vec3(cbLight._m0[_2352].xyz));
    float _4665 = isnan(0.0) ? _2555 : (isnan(_2555) ? 0.0 : max(_2555, 0.0));
    float _2558 = isnan(1.0) ? _4665 : (isnan(_4665) ? 1.0 : min(_4665, 1.0));
    float _2559 = dot(vec3(_1113, _1114, _1115), vec3(_2552, _2553, _2554));
    float _4676 = isnan(0.0) ? _2559 : (isnan(_2559) ? 0.0 : max(_2559, 0.0));
    float _2562 = isnan(1.0) ? _4676 : (isnan(_4676) ? 1.0 : min(_4676, 1.0));
    float _2563 = dot(vec3(cbLight._m0[_2352].xyz), vec3(_2552, _2553, _2554));
    float _4687 = isnan(0.0) ? _2563 : (isnan(_2563) ? 0.0 : max(_2563, 0.0));
    float _2567 = _2544 * _2544;
    float _2571 = ((_2562 * _2562) * (_2567 + (-1.0))) + 1.0;
    float _2580 = (exp2(log2(1.0 - (isnan(1.0) ? _4687 : (isnan(_4687) ? 1.0 : min(_4687, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2581 = 1.0 - _2544;
    float _2591 = (0.5 / (((_2480 * ((_2558 * _2581) + _2544)) + 9.9999999392252902907785028219223e-09) + (((_2480 * _2581) + _2544) * _2558))) * _2558;
    float _4698 = isnan(0.0) ? _2591 : (isnan(_2591) ? 0.0 : max(_2591, 0.0));
    float _2593 = (isnan(1.0) ? _4698 : (isnan(_4698) ? 1.0 : min(_4698, 1.0))) * (_2567 / ((_2571 * _2571) * 3.141590118408203125));
    float _2603 = (((_2580 * cbLight._m0[_2532].x) * _2593) * _2335) + ((((cbLight._m0[_2451].x * _2304) * _2504) * _2518) * _2348);
    float _2604 = (((_2580 * cbLight._m0[_2532].y) * _2593) * _2335) + ((((cbLight._m0[_2451].y * _2305) * _2504) * _2518) * _2348);
    float _2605 = (((_2580 * cbLight._m0[_2532].z) * _2593) * _2335) + ((((cbLight._m0[_2451].z * _2306) * _2504) * _2518) * _2348);
    float _2667;
    float _2669;
    float _2671;
    if (_2388)
    {
        _2667 = _2603;
        _2669 = _2604;
        _2671 = _2605;
    }
    else
    {
        uint _2673 = _2312 + 2u;
        uint _2677 = _2312 + 10u;
        float _2691 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2673].w)) * _1116) * 0.949999988079071044921875);
        float _2692 = _2691 * _2691;
        float _2693 = cbLight._m0[_2673].x + _1191;
        float _2694 = cbLight._m0[_2673].y + _1192;
        float _2695 = cbLight._m0[_2673].z + _1193;
        float _2699 = inversesqrt(dot(vec3(_2693, _2694, _2695), vec3(_2693, _2694, _2695)));
        float _2700 = _2699 * _2693;
        float _2701 = _2699 * _2694;
        float _2702 = _2699 * _2695;
        float _2703 = dot(vec3(_1113, _1114, _1115), vec3(cbLight._m0[_2673].xyz));
        float _4709 = isnan(0.0) ? _2703 : (isnan(_2703) ? 0.0 : max(_2703, 0.0));
        float _2706 = isnan(1.0) ? _4709 : (isnan(_4709) ? 1.0 : min(_4709, 1.0));
        float _2707 = dot(vec3(_1113, _1114, _1115), vec3(_2700, _2701, _2702));
        float _4720 = isnan(0.0) ? _2707 : (isnan(_2707) ? 0.0 : max(_2707, 0.0));
        float _2710 = isnan(1.0) ? _4720 : (isnan(_4720) ? 1.0 : min(_4720, 1.0));
        float _2711 = dot(vec3(cbLight._m0[_2673].xyz), vec3(_2700, _2701, _2702));
        float _4731 = isnan(0.0) ? _2711 : (isnan(_2711) ? 0.0 : max(_2711, 0.0));
        float _2715 = _2692 * _2692;
        float _2719 = ((_2710 * _2710) * (_2715 + (-1.0))) + 1.0;
        float _2728 = (exp2(log2(1.0 - (isnan(1.0) ? _4731 : (isnan(_4731) ? 1.0 : min(_4731, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2729 = 1.0 - _2692;
        float _2739 = (0.5 / (((_2480 * ((_2706 * _2729) + _2692)) + 9.9999999392252902907785028219223e-09) + (((_2480 * _2729) + _2692) * _2706))) * _2706;
        float _4742 = isnan(0.0) ? _2739 : (isnan(_2739) ? 0.0 : max(_2739, 0.0));
        float _2741 = (isnan(1.0) ? _4742 : (isnan(_4742) ? 1.0 : min(_4742, 1.0))) * (_2715 / ((_2719 * _2719) * 3.141590118408203125));
        float _2742 = isnan(1.0) ? _2327 : (isnan(_2327) ? 1.0 : min(_2327, 1.0));
        _2667 = (((_2728 * cbLight._m0[_2677].x) * _2741) * _2742) + _2603;
        _2669 = (((_2728 * cbLight._m0[_2677].y) * _2741) * _2742) + _2604;
        _2671 = (((_2728 * cbLight._m0[_2677].z) * _2741) * _2742) + _2605;
    }
    float _2777;
    float _2779;
    float _2781;
    if (_2406)
    {
        _2777 = _2667;
        _2779 = _2669;
        _2781 = _2671;
    }
    else
    {
        uint _2788 = _2312 + 3u;
        uint _2792 = _2312 + 11u;
        float _2806 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2788].w)) * _1116) * 0.949999988079071044921875);
        float _2807 = _2806 * _2806;
        float _2808 = cbLight._m0[_2788].x + _1191;
        float _2809 = cbLight._m0[_2788].y + _1192;
        float _2810 = cbLight._m0[_2788].z + _1193;
        float _2814 = inversesqrt(dot(vec3(_2808, _2809, _2810), vec3(_2808, _2809, _2810)));
        float _2815 = _2814 * _2808;
        float _2816 = _2814 * _2809;
        float _2817 = _2814 * _2810;
        float _2818 = dot(vec3(_1113, _1114, _1115), vec3(cbLight._m0[_2788].xyz));
        float _4758 = isnan(0.0) ? _2818 : (isnan(_2818) ? 0.0 : max(_2818, 0.0));
        float _2821 = isnan(1.0) ? _4758 : (isnan(_4758) ? 1.0 : min(_4758, 1.0));
        float _2822 = dot(vec3(_1113, _1114, _1115), vec3(_2815, _2816, _2817));
        float _4769 = isnan(0.0) ? _2822 : (isnan(_2822) ? 0.0 : max(_2822, 0.0));
        float _2825 = isnan(1.0) ? _4769 : (isnan(_4769) ? 1.0 : min(_4769, 1.0));
        float _2826 = dot(vec3(cbLight._m0[_2788].xyz), vec3(_2815, _2816, _2817));
        float _4780 = isnan(0.0) ? _2826 : (isnan(_2826) ? 0.0 : max(_2826, 0.0));
        float _2830 = _2807 * _2807;
        float _2834 = ((_2825 * _2825) * (_2830 + (-1.0))) + 1.0;
        float _2843 = (exp2(log2(1.0 - (isnan(1.0) ? _4780 : (isnan(_4780) ? 1.0 : min(_4780, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2844 = 1.0 - _2807;
        float _2854 = (0.5 / (((_2480 * ((_2821 * _2844) + _2807)) + 9.9999999392252902907785028219223e-09) + (((_2480 * _2844) + _2807) * _2821))) * _2821;
        float _4791 = isnan(0.0) ? _2854 : (isnan(_2854) ? 0.0 : max(_2854, 0.0));
        float _2856 = (isnan(1.0) ? _4791 : (isnan(_4791) ? 1.0 : min(_4791, 1.0))) * (_2830 / ((_2834 * _2834) * 3.141590118408203125));
        float _2857 = isnan(1.0) ? _2328 : (isnan(_2328) ? 1.0 : min(_2328, 1.0));
        _2777 = (((_2843 * cbLight._m0[_2792].x) * _2856) * _2857) + _2667;
        _2779 = (((_2843 * cbLight._m0[_2792].y) * _2856) * _2857) + _2669;
        _2781 = (((_2843 * cbLight._m0[_2792].z) * _2856) * _2857) + _2671;
    }
    float _2992;
    float _2994;
    float _2996;
    float _2998;
    float _3000;
    float _3002;
    if (_2310.y == 0u)
    {
        float _2932 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2933 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2932;
        float _2934 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2932;
        float _2935 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2932;
        uvec4 _2947 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2948 = _2947.x;
        uint _2959 = uint((float(_2947.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1200) / _2948))) + floor(float(uint(cbSceneParam._m0[85u].x * _1199) / _2948)));
        float _2969 = (log2(_2935 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2970 = isnan(0.0) ? _2969 : (isnan(_2969) ? 0.0 : max(_2969, 0.0));
        uint _2973 = uint(isnan(14.0) ? _2970 : (isnan(_2970) ? 14.0 : min(_2970, 14.0)));
        uvec4 _2978 = texelFetch(g_lightClusterGridBuffer, int(((_2973 << 2u) + (_2959 << 6u)) >> 2u));
        uint _2979 = _2978.x;
        uint _2980 = _2947.z;
        float _3080;
        float _3082;
        float _3084;
        float _3086;
        float _3088;
        float _3090;
        if (((((1u << ((_2980 >> 4u) & 15u)) + 4294967295u) & _2979) == 0u) || ((_2980 & 240u) == 0u))
        {
            _3080 = 0.0;
            _3082 = 0.0;
            _3084 = 0.0;
            _3086 = 0.0;
            _3088 = 0.0;
            _3090 = 0.0;
        }
        else
        {
            float _3081;
            float _3083;
            float _3085;
            float _3087;
            float _3089;
            float _3091;
            float _3224 = 0.0;
            float _3225 = 0.0;
            float _3226 = 0.0;
            float _3227 = 0.0;
            float _3228 = 0.0;
            float _3229 = 0.0;
            uint _3230 = 0u;
            uint _3239;
            bool _3240;
            for (;;)
            {
                _3239 = texelFetch(g_lightClassification, int((((_2973 << 5u) + (_2959 << 9u)) + (_3230 << 2u)) >> 2u)).x;
                _3240 = _3239 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3240)
                {
                    frontier_phi_61_pred = _3224;
                    frontier_phi_61_pred_1 = _3229;
                    frontier_phi_61_pred_2 = _3228;
                    frontier_phi_61_pred_3 = _3227;
                    frontier_phi_61_pred_4 = _3226;
                    frontier_phi_61_pred_5 = _3225;
                }
                else
                {
                    float _3348;
                    float _3349;
                    float _3350;
                    float _3351;
                    float _3352;
                    float _3353;
                    uint _3354;
                    _3348 = _3224;
                    _3349 = _3225;
                    _3350 = _3226;
                    _3351 = _3227;
                    _3352 = _3228;
                    _3353 = _3229;
                    _3354 = _3239;
                    float _3280;
                    float _3281;
                    float _3282;
                    float _3283;
                    float _3284;
                    float _3285;
                    for (;;)
                    {
                        uint _3358 = uint(findLSB(_3354)) + (_3230 << 5u);
                        uint _3355 = (_3354 + 4294967295u) & _3354;
                        uint _3360 = _3358 * 48u;
                        vec4 _3374 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3360)).x, texelFetch(g_PointLightRenderingBuffer, int(_3360 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3360 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3360 + 3u)).x));
                        uint _3380 = (_3358 * 48u) + 4u;
                        vec4 _3393 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3380)).x, texelFetch(g_PointLightRenderingBuffer, int(_3380 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3380 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3380 + 3u)).x));
                        uint _3399 = (_3358 * 48u) + 8u;
                        vec3 _3410 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3399)).x, texelFetch(g_PointLightRenderingBuffer, int(_3399 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3399 + 2u)).x));
                        float _3414 = _3374.x - _2933;
                        float _3415 = _3374.y - _2934;
                        float _3416 = _3374.z - _2935;
                        float _3417 = dot(vec3(_3414, _3415, _3416), vec3(_3414, _3415, _3416));
                        float _3420 = inversesqrt(_3417);
                        float _3421 = _3420 * _3414;
                        float _3422 = _3420 * _3415;
                        float _3423 = _3420 * _3416;
                        float _3424 = dot(vec3(_1218, _1221, _1224), vec3(_3421, _3422, _3423));
                        float _3429 = 1.0 - (_3417 * _3374.w);
                        float _4817 = isnan(0.0) ? _3429 : (isnan(_3429) ? 0.0 : max(_3429, 0.0));
                        float _3430 = isnan(1.0) ? _4817 : (isnan(_4817) ? 1.0 : min(_4817, 1.0));
                        float _3431 = sqrt(_3417) * _3393.w;
                        float _3434 = 1.39999997615814208984375 / (_3431 + 1.39999997615814208984375);
                        float _3435 = _3434 * _3434;
                        float _3438 = ((1.0 - _3435) * _3424) + _3435;
                        float _3441 = _3431 * _3431;
                        float _3445 = ((isnan(0.0) ? _3438 : (isnan(_3438) ? 0.0 : max(_3438, 0.0))) * _3430) / ((_3441 * 0.699999988079071044921875) + 1.0);
                        float _3449 = (-0.0) - _2933;
                        float _3450 = (-0.0) - _2934;
                        float _3451 = (-0.0) - _2935;
                        float _3455 = inversesqrt(dot(vec3(_3449, _3450, _3451), vec3(_3449, _3450, _3451)));
                        float _3456 = _3455 * _3449;
                        float _3457 = _3455 * _3450;
                        float _3458 = _3455 * _3451;
                        float _3466 = exp2(log2(1.0 / ((_3441 * 3.5) + 5.0)) * 0.25);
                        float _3467 = 1.0 - _1278;
                        float _3474 = sqrt(1.0 - ((1.0 - (_3467 * _3467)) * (1.0 - (_3466 * _3466))));
                        float _3475 = _3474 * _3474;
                        float _3476 = _3475 * _3475;
                        float _3477 = _3456 + _3421;
                        float _3478 = _3457 + _3422;
                        float _3479 = _3458 + _3423;
                        float _3483 = inversesqrt(dot(vec3(_3477, _3478, _3479), vec3(_3477, _3478, _3479)));
                        float _3487 = dot(vec3(_1218, _1221, _1224), vec3(_3456, _3457, _3458));
                        float _4833 = isnan(0.0) ? _3487 : (isnan(_3487) ? 0.0 : max(_3487, 0.0));
                        float _3490 = isnan(1.0) ? _4833 : (isnan(_4833) ? 1.0 : min(_4833, 1.0));
                        float _3491 = dot(vec3(_1218, _1221, _1224), vec3(_3483 * _3477, _3483 * _3478, _3483 * _3479));
                        float _4844 = isnan(0.0) ? _3491 : (isnan(_3491) ? 0.0 : max(_3491, 0.0));
                        float _3494 = isnan(1.0) ? _4844 : (isnan(_4844) ? 1.0 : min(_4844, 1.0));
                        float _3498 = ((_3494 * _3494) * (_3476 + (-1.0))) + 1.0;
                        float _3499 = _3434 * _3475;
                        float _3500 = _3499 * _3499;
                        float _3503 = ((1.0 - _3500) * _3424) + _3500;
                        float _4855 = isnan(0.0) ? _3503 : (isnan(_3503) ? 0.0 : max(_3503, 0.0));
                        float _3504 = isnan(1.0) ? _4855 : (isnan(_4855) ? 1.0 : min(_4855, 1.0));
                        float _3505 = 1.0 - _3475;
                        float _3515 = (0.5 / (((_3504 * ((_3490 * _3505) + _3475)) + 9.9999999392252902907785028219223e-09) + (((_3504 * _3505) + _3475) * _3490))) * _3504;
                        float _4866 = isnan(0.0) ? _3515 : (isnan(_3515) ? 0.0 : max(_3515, 0.0));
                        float _3526 = (((_3476 * 3.1415927410125732421875) * (isnan(1.0) ? _4866 : (isnan(_4866) ? 1.0 : min(_4866, 1.0)))) / ((_3498 * _3498) * ((_3441 * 2.1991131305694580078125) + 3.141590118408203125))) * _3430;
                        _3283 = (_3445 * _3393.x) + _3351;
                        _3284 = (_3445 * _3393.y) + _3352;
                        _3285 = (_3445 * _3393.z) + _3353;
                        _3280 = (_3526 * _3410.x) + _3348;
                        _3281 = (_3526 * _3410.y) + _3349;
                        _3282 = (_3526 * _3410.z) + _3350;
                        if (_3355 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3348 = _3280;
                            _3349 = _3281;
                            _3350 = _3282;
                            _3351 = _3283;
                            _3352 = _3284;
                            _3353 = _3285;
                            _3354 = _3355;
                        }
                    }
                    frontier_phi_61_pred = _3280;
                    frontier_phi_61_pred_1 = _3285;
                    frontier_phi_61_pred_2 = _3284;
                    frontier_phi_61_pred_3 = _3283;
                    frontier_phi_61_pred_4 = _3282;
                    frontier_phi_61_pred_5 = _3281;
                }
                _3081 = frontier_phi_61_pred;
                _3091 = frontier_phi_61_pred_1;
                _3089 = frontier_phi_61_pred_2;
                _3087 = frontier_phi_61_pred_3;
                _3085 = frontier_phi_61_pred_4;
                _3083 = frontier_phi_61_pred_5;
                uint _3231 = _3230 + 1u;
                if (_3231 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3224 = _3081;
                    _3225 = _3083;
                    _3226 = _3085;
                    _3227 = _3087;
                    _3228 = _3089;
                    _3229 = _3091;
                    _3230 = _3231;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3080 = _3081;
            _3082 = _3083;
            _3084 = _3085;
            _3086 = _3087;
            _3088 = _3089;
            _3090 = _3091;
        }
        uvec4 _3094 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3095 = _3094.z;
        uint _3097 = (_3095 >> 8u) & 15u;
        float _3192;
        float _3194;
        float _3196;
        float _3198;
        float _3200;
        float _3202;
        if (((4294967295u << _3097) & _2979) == 0u)
        {
            _3192 = _3080;
            _3194 = _3082;
            _3196 = _3084;
            _3198 = _3086;
            _3200 = _3088;
            _3202 = _3090;
        }
        else
        {
            float _3217 = inversesqrt(dot(vec3(_2933, _2934, _2935), vec3(_2933, _2934, _2935)));
            float _3218 = _3217 * _2933;
            float _3219 = _3217 * _2934;
            float _3220 = _3217 * _2935;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_3097 < ((_3095 >> 12u) & 15u))
            {
                float _3193;
                float _3195;
                float _3197;
                float _3199;
                float _3201;
                float _3203;
                float _3331 = _3080;
                float _3332 = _3082;
                float _3333 = _3084;
                float _3334 = _3086;
                float _3335 = _3088;
                float _3336 = _3090;
                uint _3337 = _3097;
                uint _3346;
                bool _3347;
                for (;;)
                {
                    _3346 = texelFetch(g_lightClassification, int((((_2973 << 5u) + (_2959 << 9u)) + (_3337 << 2u)) >> 2u)).x;
                    _3347 = _3346 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3347)
                    {
                        frontier_phi_67_pred = _3334;
                        frontier_phi_67_pred_1 = _3335;
                        frontier_phi_67_pred_2 = _3336;
                        frontier_phi_67_pred_3 = _3333;
                        frontier_phi_67_pred_4 = _3332;
                        frontier_phi_67_pred_5 = _3331;
                    }
                    else
                    {
                        float _3531;
                        float _3532;
                        float _3533;
                        float _3534;
                        float _3535;
                        float _3536;
                        float _3824;
                        float _3825;
                        float _3826;
                        float _3827;
                        float _3828;
                        float _3829;
                        float _3544 = _3331;
                        float _3545 = _3332;
                        float _3546 = _3333;
                        float _3547 = _3334;
                        float _3548 = _3335;
                        float _3549 = _3336;
                        uint _3550 = _3346;
                        uint _3551;
                        vec4 _3576;
                        float _3577;
                        vec4 _3592;
                        vec3 _3604;
                        vec4 _3619;
                        vec4 _3634;
                        float _3680;
                        bool _3681;
                        for (;;)
                        {
                            uint _3561 = ((_3337 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3550));
                            _3551 = (_3550 + 4294967295u) & _3550;
                            uint _3563 = _3561 * 40u;
                            _3576 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3563)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3563 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3563 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3563 + 3u)).x));
                            _3577 = _3576.w;
                            uint _3579 = (_3561 * 40u) + 4u;
                            _3592 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3579)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3579 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3579 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3579 + 3u)).x));
                            uint _3594 = (_3561 * 40u) + 8u;
                            _3604 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3594)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3594 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3594 + 2u)).x));
                            uint _3606 = (_3561 * 40u) + 16u;
                            _3619 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3606)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3606 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3606 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3606 + 3u)).x));
                            uint _3621 = (_3561 * 40u) + 20u;
                            _3634 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3621)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3621 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3621 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3621 + 3u)).x));
                            uint _3636 = (_3561 * 40u) + 24u;
                            vec4 _3649 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3636)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3636 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3636 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3636 + 3u)).x));
                            uint _3655 = (_3561 * 40u) + 28u;
                            vec4 _3668 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3655)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3655 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3655 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3655 + 3u)).x));
                            _3680 = fma(_2935, _3668.z, fma(_2934, _3668.y, _3668.x * _2933)) + _3668.w;
                            _3681 = !((fma(_2935, _3649.z, fma(_2934, _3649.y, _3649.x * _2933)) + _3649.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3681)
                            {
                                float _3708 = _3576.x - _2933;
                                float _3709 = _3576.y - _2934;
                                float _3710 = _3576.z - _2935;
                                float _3711 = dot(vec3(_3708, _3709, _3710), vec3(_3708, _3709, _3710));
                                float _3714 = inversesqrt(_3711);
                                float _3715 = _3714 * _3708;
                                float _3716 = _3714 * _3709;
                                float _3717 = _3714 * _3710;
                                float _3721 = 1.0 - (_3711 / (_3577 * _3577));
                                float _4877 = isnan(0.0) ? _3721 : (isnan(_3721) ? 0.0 : max(_3721, 0.0));
                                float _3722 = isnan(1.0) ? _4877 : (isnan(_4877) ? 1.0 : min(_4877, 1.0));
                                float _3726 = sqrt(_3711) * _3592.w;
                                float _3728 = 1.39999997615814208984375 / (_3726 + 1.39999997615814208984375);
                                float _3729 = _3728 * _3728;
                                float _3732 = ((1.0 - _3729) * dot(vec3(_3715, _3716, _3717), vec3(_1218, _1221, _1224))) + _3729;
                                float _3735 = _3726 * _3726;
                                float _3739 = (fma(_2935, _3619.z, fma(_2934, _3619.y, _3619.x * _2933)) + _3619.w) / _3680;
                                float _3740 = (fma(_2935, _3634.z, fma(_2934, _3634.y, _3634.x * _2933)) + _3634.w) / _3680;
                                float _3744 = 1.0 - dot(vec2(_3739, _3740), vec2(_3739, _3740));
                                float _4893 = isnan(0.0) ? _3744 : (isnan(_3744) ? 0.0 : max(_3744, 0.0));
                                float _3745 = isnan(1.0) ? _4893 : (isnan(_4893) ? 1.0 : min(_4893, 1.0));
                                float _3746 = _3745 * (((isnan(0.0) ? _3732 : (isnan(_3732) ? 0.0 : max(_3732, 0.0))) * _3722) / ((_3735 * 0.699999988079071044921875) + 1.0));
                                float _3758 = exp2(log2(1.0 / ((_3735 * 3.5) + 5.0)) * 0.25);
                                float _3759 = 1.0 - _1278;
                                float _3766 = sqrt(1.0 - ((1.0 - (_3759 * _3759)) * (1.0 - (_3758 * _3758))));
                                float _3767 = _3766 * _3766;
                                float _3768 = _3767 * _3767;
                                float _3769 = _3715 - _3218;
                                float _3770 = _3716 - _3219;
                                float _3771 = _3717 - _3220;
                                float _3775 = inversesqrt(dot(vec3(_3769, _3770, _3771), vec3(_3769, _3770, _3771)));
                                float _3779 = dot(vec3(_1218, _1221, _1224), vec3((-0.0) - _3218, (-0.0) - _3219, (-0.0) - _3220));
                                float _4904 = isnan(0.0) ? _3779 : (isnan(_3779) ? 0.0 : max(_3779, 0.0));
                                float _3782 = isnan(1.0) ? _4904 : (isnan(_4904) ? 1.0 : min(_4904, 1.0));
                                float _3783 = dot(vec3(_1218, _1221, _1224), vec3(_3775 * _3769, _3775 * _3770, _3775 * _3771));
                                float _4915 = isnan(0.0) ? _3783 : (isnan(_3783) ? 0.0 : max(_3783, 0.0));
                                float _3786 = isnan(1.0) ? _4915 : (isnan(_4915) ? 1.0 : min(_4915, 1.0));
                                float _3790 = ((_3786 * _3786) * (_3768 + (-1.0))) + 1.0;
                                float _3791 = _3728 * _3767;
                                float _3792 = _3791 * _3791;
                                float _3798 = ((1.0 - _3792) * dot(vec3(_1218, _1221, _1224), vec3(_3715, _3716, _3717))) + _3792;
                                float _4926 = isnan(0.0) ? _3798 : (isnan(_3798) ? 0.0 : max(_3798, 0.0));
                                float _3799 = isnan(1.0) ? _4926 : (isnan(_4926) ? 1.0 : min(_4926, 1.0));
                                float _3800 = 1.0 - _3767;
                                float _3810 = (0.5 / (((_3799 * ((_3782 * _3800) + _3767)) + 9.9999999392252902907785028219223e-09) + (((_3799 * _3800) + _3767) * _3782))) * _3799;
                                float _4937 = isnan(0.0) ? _3810 : (isnan(_3810) ? 0.0 : max(_3810, 0.0));
                                float _3820 = (_3745 * _3722) * (((_3768 * 3.1415927410125732421875) * (isnan(1.0) ? _4937 : (isnan(_4937) ? 1.0 : min(_4937, 1.0)))) / ((_3790 * _3790) * ((_3735 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3820 * _3604.x;
                                frontier_phi_73_pred_1 = _3820 * _3604.y;
                                frontier_phi_73_pred_2 = _3746 * _3592.z;
                                frontier_phi_73_pred_3 = _3746 * _3592.y;
                                frontier_phi_73_pred_4 = _3746 * _3592.x;
                                frontier_phi_73_pred_5 = _3820 * _3604.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3824 = frontier_phi_73_pred;
                            _3825 = frontier_phi_73_pred_1;
                            _3829 = frontier_phi_73_pred_2;
                            _3828 = frontier_phi_73_pred_3;
                            _3827 = frontier_phi_73_pred_4;
                            _3826 = frontier_phi_73_pred_5;
                            _3534 = _3827 + _3547;
                            _3535 = _3828 + _3548;
                            _3536 = _3829 + _3549;
                            _3531 = _3824 + _3544;
                            _3532 = _3825 + _3545;
                            _3533 = _3826 + _3546;
                            if (_3551 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3544 = _3531;
                                _3545 = _3532;
                                _3546 = _3533;
                                _3547 = _3534;
                                _3548 = _3535;
                                _3549 = _3536;
                                _3550 = _3551;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3534;
                        frontier_phi_67_pred_1 = _3535;
                        frontier_phi_67_pred_2 = _3536;
                        frontier_phi_67_pred_3 = _3533;
                        frontier_phi_67_pred_4 = _3532;
                        frontier_phi_67_pred_5 = _3531;
                    }
                    _3199 = frontier_phi_67_pred;
                    _3201 = frontier_phi_67_pred_1;
                    _3203 = frontier_phi_67_pred_2;
                    _3197 = frontier_phi_67_pred_3;
                    _3195 = frontier_phi_67_pred_4;
                    _3193 = frontier_phi_67_pred_5;
                    uint _3338 = _3337 + 1u;
                    if (_3338 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3331 = _3193;
                        _3332 = _3195;
                        _3333 = _3197;
                        _3334 = _3199;
                        _3335 = _3201;
                        _3336 = _3203;
                        _3337 = _3338;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3201;
                frontier_phi_55_56_ladder_1 = _3203;
                frontier_phi_55_56_ladder_2 = _3199;
                frontier_phi_55_56_ladder_3 = _3197;
                frontier_phi_55_56_ladder_4 = _3195;
                frontier_phi_55_56_ladder_5 = _3193;
            }
            else
            {
                frontier_phi_55_56_ladder = _3088;
                frontier_phi_55_56_ladder_1 = _3090;
                frontier_phi_55_56_ladder_2 = _3086;
                frontier_phi_55_56_ladder_3 = _3084;
                frontier_phi_55_56_ladder_4 = _3082;
                frontier_phi_55_56_ladder_5 = _3080;
            }
            _3192 = frontier_phi_55_56_ladder_5;
            _3194 = frontier_phi_55_56_ladder_4;
            _3196 = frontier_phi_55_56_ladder_3;
            _3198 = frontier_phi_55_56_ladder_2;
            _3200 = frontier_phi_55_56_ladder;
            _3202 = frontier_phi_55_56_ladder_1;
        }
        float _3207 = isnan(1.0) ? _1262 : (isnan(_1262) ? 1.0 : min(_1262, 1.0));
        _2992 = (_3207 * _3198) + _2444;
        _2994 = (_3207 * _3200) + _2446;
        _2996 = (_3207 * _3202) + _2448;
        _2998 = ((_3192 * 0.039999999105930328369140625) * _3207) + _2777;
        _3000 = ((_3194 * 0.039999999105930328369140625) * _3207) + _2779;
        _3002 = ((_3196 * 0.039999999105930328369140625) * _3207) + _2781;
    }
    else
    {
        _2992 = _2444;
        _2994 = _2446;
        _2996 = _2448;
        _2998 = _2777;
        _3000 = _2779;
        _3002 = _2781;
    }
    float _4953 = isnan(0.0) ? _1247 : (isnan(_1247) ? 0.0 : max(_1247, 0.0));
    float _4964 = isnan(0.0) ? _1248 : (isnan(_1248) ? 0.0 : max(_1248, 0.0));
    float _4975 = isnan(0.0) ? _1249 : (isnan(_1249) ? 0.0 : max(_1249, 0.0));
    uint _3022 = _291 + 6u;
    float _3030 = _1199 / cbSceneParam._m0[86u].x;
    float _3031 = _1200 / cbSceneParam._m0[86u].y;
    vec4 _3045 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3030, _3031, (log2((isnan(cbSceneParam._m0[77u].w) ? _1134 : (isnan(_1134) ? cbSceneParam._m0[77u].w : min(_1134, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3047 = _3045.x;
    float _3048 = _3045.y;
    float _3049 = _3045.z;
    float _3050 = _3045.w;
    float _3142;
    float _3144;
    float _3146;
    float _3148;
    if (_1134 > cbSceneParam._m0[78u].w)
    {
        float _3105 = isnan(_1134) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1134 : min(cbSceneParam._m0[80u].w, _1134));
        float _3106 = _3105 / _1134;
        float _3117 = _3106 * _1184;
        float _3118 = _1185 * _3106;
        float _3119 = (-0.0) - _3118;
        float _3120 = _3106 * _1186;
        float _3122 = (cbSceneParam._m0[77u].w * _3119) / _3105;
        float _3123 = _3122 + cbSceneParam._m0[79u].w;
        float _3124 = cbSceneParam._m0[79u].w - _3118;
        float _3130 = sqrt(((_3117 * _3117) + (_3118 * _3118)) + (_3120 * _3120));
        float _3133 = (1.0 - (cbSceneParam._m0[77u].w / _3105)) * _3130;
        float _3138 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3140 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3293;
        if (abs((_3119 - _3122) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3293 = ((((_3123 > 0.0) ? exp2(_3138 * _3123) : (2.0 - exp2(_3140 * _3123))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3133;
        }
        else
        {
            float _3253 = 1.0 / cbSceneParam._m0[80u].x;
            float _3254 = isnan(_3124) ? _3123 : (isnan(_3123) ? _3124 : max(_3123, _3124));
            float _3255 = isnan(_3124) ? _3123 : (isnan(_3123) ? _3124 : min(_3123, _3124));
            float _3264 = isnan(0.0) ? _3254 : (isnan(_3254) ? 0.0 : min(_3254, 0.0));
            float _3265 = isnan(0.0) ? _3255 : (isnan(_3255) ? 0.0 : min(_3255, 0.0));
            _3293 = ((abs(_3130 / _3119) * cbSceneParam._m0[80u].y) * ((((_3264 - _3265) * 2.0) - ((exp2(_3138 * (isnan(0.0) ? _3254 : (isnan(_3254) ? 0.0 : max(_3254, 0.0)))) - exp2(_3138 * (isnan(0.0) ? _3255 : (isnan(_3255) ? 0.0 : max(_3255, 0.0))))) * _3253)) - ((exp2(_3140 * _3264) - exp2(_3140 * _3265)) * _3253))) + (_3133 * cbSceneParam._m0[80u].z);
        }
        vec4 _3295 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3030, _3031, 1.0), 0.0);
        float _3304 = exp2((_3293 * (-1.44269502162933349609375)) * (1.0 - _3295.w));
        float _3305 = log2(_3304);
        float _3321 = log2(_3050);
        _3142 = (exp2(_3321 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3305 * cbSceneParam._m0[78u].x)) * _3295.x) / cbSceneParam._m0[78u].x)) + _3047;
        _3144 = (exp2(_3321 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3305 * cbSceneParam._m0[78u].y)) * _3295.y) / cbSceneParam._m0[78u].y)) + _3048;
        _3146 = (exp2(_3321 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3305 * cbSceneParam._m0[78u].z)) * _3295.z) / cbSceneParam._m0[78u].z)) + _3049;
        _3148 = _3304 * _3050;
    }
    else
    {
        _3142 = _3047;
        _3144 = _3048;
        _3146 = _3049;
        _3148 = _3050;
    }
    float _3160 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3161 = _3160 == 3.0;
    float _3162 = log2(_3148);
    float _3169 = exp2(_3162 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4953 : (isnan(_4953) ? 1.0 : min(_4953, 1.0))) * (_2992 + ((isnan(0.0) ? _1986 : (isnan(_1986) ? 0.0 : max(_1986, 0.0))) * _1262))) + ((_2998 + ((isnan(0.0) ? _2276 : (isnan(_2276) ? 0.0 : max(_2276, 0.0))) * _2065)) * cbPerFrame._m0[3u].x));
    float _3170 = exp2(_3162 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4964 : (isnan(_4964) ? 1.0 : min(_4964, 1.0))) * (_2994 + ((isnan(0.0) ? _1989 : (isnan(_1989) ? 0.0 : max(_1989, 0.0))) * _1262))) + ((_3000 + ((isnan(0.0) ? _2279 : (isnan(_2279) ? 0.0 : max(_2279, 0.0))) * _2065)) * cbPerFrame._m0[3u].x));
    float _3171 = exp2(_3162 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4975 : (isnan(_4975) ? 1.0 : min(_4975, 1.0))) * (_2996 + ((isnan(0.0) ? _1992 : (isnan(_1992) ? 0.0 : max(_1992, 0.0))) * _1262))) + ((_3002 + ((isnan(0.0) ? _2282 : (isnan(_2282) ? 0.0 : max(_2282, 0.0))) * _2065)) * cbPerFrame._m0[3u].x));
    float _3180 = (_3160 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3180 * (_3161 ? _3169 : (_3169 + (cbSceneParam._m0[72u].w * _3142)));
    SV_Target.y = _3180 * (_3161 ? _3170 : (_3170 + (cbSceneParam._m0[72u].w * _3144)));
    SV_Target.z = _3180 * (_3161 ? _3171 : (_3171 + (cbSceneParam._m0[72u].w * _3146)));
    SV_Target.w = cbInstanceData._m0[_3022].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3022].w;
}


