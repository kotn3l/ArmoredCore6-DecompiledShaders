#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1611;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _244 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _245 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _246 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _252 = inversesqrt(dot(vec3(_244, _245, _246), vec3(_244, _245, _246)));
    float _253 = _252 * _244;
    float _254 = _252 * _245;
    float _255 = _252 * _246;
    float _259 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _260 = _259 * NORMAL.x;
    float _261 = _259 * NORMAL.y;
    float _262 = _259 * NORMAL.z;
    float _266 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _267 = _266 * TANGENT.x;
    float _268 = _266 * TANGENT.y;
    float _269 = _266 * TANGENT.z;
    float _278 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _280 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _281 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4196 = isnan(0.0) ? _278 : (isnan(_278) ? 0.0 : max(_278, 0.0));
    float _4207 = isnan(0.0) ? _280 : (isnan(_280) ? 0.0 : max(_280, 0.0));
    float _4218 = isnan(0.0) ? _281 : (isnan(_281) ? 0.0 : max(_281, 0.0));
    uint _291 = uint(roundEven(NORMAL.w)) * 13u;
    uint _296 = _291 + 1u;
    uint _300 = _291 + 2u;
    float _309 = sqrt(((cbInstanceData._m0[_296].x * cbInstanceData._m0[_296].x) + (cbInstanceData._m0[_291].x * cbInstanceData._m0[_291].x)) + (cbInstanceData._m0[_300].x * cbInstanceData._m0[_300].x));
    float _310 = _309 * TEXCOORD.z;
    float _311 = _309 * TEXCOORD.w;
    vec4 _324 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _310) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _311) + cbTextureTilingScale._m0[13u].w));
    vec4 _347 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _373 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _378 = _373.x * cbMtdParam._m0[11u].x;
    float _379 = _373.y * cbMtdParam._m0[11u].y;
    float _380 = _373.z * cbMtdParam._m0[11u].z;
    vec4 _399 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _310) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _311) + cbTextureTilingScale._m0[5u].w));
    vec4 _418 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _456 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _458 = _456.x;
    float _470 = dot(vec4(_458, _456.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _487 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _418.x) * 2.0) - ((((_458 - _470) * cbMtdParam._m0[24u].z) + _470) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4229 = isnan(0.0) ? _487 : (isnan(_487) ? 0.0 : max(_487, 0.0));
    float _488 = isnan(1.0) ? _4229 : (isnan(_4229) ? 1.0 : min(_4229, 1.0));
    float _495 = (_488 * ((_399.x * cbMtdParam._m0[12u].x) - _378)) + _378;
    float _496 = (_488 * ((_399.y * cbMtdParam._m0[12u].y) - _379)) + _379;
    float _497 = (_488 * ((_399.z * cbMtdParam._m0[12u].z) - _380)) + _380;
    vec4 _514 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _310) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _311) + cbTextureTilingScale._m0[3u].w));
    vec4 _534 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _536 = _534.x;
    float _546 = dot(vec4(_536, _534.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _560 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _418.y) * 2.0) - ((((_536 - _546) * cbMtdParam._m0[24u].z) + _546) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4240 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
    float _561 = isnan(1.0) ? _4240 : (isnan(_4240) ? 1.0 : min(_4240, 1.0));
    float _568 = (_561 * ((_514.x * cbMtdParam._m0[13u].x) - _495)) + _495;
    float _569 = (_561 * ((_514.y * cbMtdParam._m0[13u].y) - _496)) + _496;
    float _570 = (_561 * ((_514.z * cbMtdParam._m0[13u].z) - _497)) + _497;
    vec4 _588 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _310) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _311) + cbTextureTilingScale._m0[24u].w));
    vec4 _605 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _607 = _605.x;
    float _617 = dot(vec4(_607, _605.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _629 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _418.z) * 2.0) - ((((_607 - _617) * cbMtdParam._m0[24u].z) + _617) * cbMtdParam._m0[20u].z))) + 1.0;
    float _4251 = isnan(0.0) ? _629 : (isnan(_629) ? 0.0 : max(_629, 0.0));
    float _630 = isnan(1.0) ? _4251 : (isnan(_4251) ? 1.0 : min(_4251, 1.0));
    float _640 = (_347.x * cbMtdParam._m0[9u].x) * ((_630 * ((_588.x * cbMtdParam._m0[14u].x) - _568)) + _568);
    float _641 = (_347.y * cbMtdParam._m0[9u].y) * ((_630 * ((_588.y * cbMtdParam._m0[14u].y) - _569)) + _569);
    float _642 = (_347.z * cbMtdParam._m0[9u].z) * ((_630 * ((_588.z * cbMtdParam._m0[14u].z) - _570)) + _570);
    float _646 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _324.x) * _640;
    float _649 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _324.y) * _641;
    float _652 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _324.z) * _642;
    float _660 = (((_640 - _646) * (isnan(1.0) ? _4196 : (isnan(_4196) ? 1.0 : min(_4196, 1.0)))) + _646) * 4.55000019073486328125;
    float _662 = (((_641 - _649) * (isnan(1.0) ? _4207 : (isnan(_4207) ? 1.0 : min(_4207, 1.0)))) + _649) * 4.55000019073486328125;
    float _664 = (((_642 - _652) * (isnan(1.0) ? _4218 : (isnan(_4218) ? 1.0 : min(_4218, 1.0)))) + _652) * 4.55000019073486328125;
    vec4 _681 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _310) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _311) + cbTextureTilingScale._m0[20u].w));
    vec4 _706 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _310) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _311) + cbTextureTilingScale._m0[4u].w));
    vec4 _723 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _725 = _723.x;
    float _726 = _723.y;
    float _727 = _723.z;
    float _734 = ((_706.x - _725) * _488) + _725;
    float _735 = ((_706.y - _726) * _488) + _726;
    float _736 = ((_706.z - _727) * _488) + _727;
    vec4 _748 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _310) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _311) + cbTextureTilingScale._m0[2u].w));
    float _759 = ((_748.x - _734) * _561) + _734;
    float _760 = ((_748.y - _735) * _561) + _735;
    float _761 = ((_748.z - _736) * _561) + _736;
    vec4 _773 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _310) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _311) + cbTextureTilingScale._m0[23u].w));
    float _786 = ((_773.z - _761) * _630) + _761;
    float _789 = ((((_773.x - _759) * _630) + _759) * 2.0) + (-1.0);
    float _790 = ((((_773.y - _760) * _630) + _760) * 2.0) + (-1.0);
    float _791 = dot(vec2(_789, _790), vec2(_789, _790));
    float _4262 = isnan(0.0) ? _791 : (isnan(_791) ? 0.0 : max(_791, 0.0));
    float _796 = sqrt(1.0 - (isnan(1.0) ? _4262 : (isnan(_4262) ? 1.0 : min(_4262, 1.0))));
    vec4 _814 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _826 = (_789 + ((((_681.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x)) + (((_814.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _827 = (_790 + ((((_681.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x)) + (((_814.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _830 = fma(_796, _260, fma(_827, _267, _826 * _253));
    float _833 = fma(_796, _261, fma(_827, _268, _826 * _254));
    float _836 = fma(_796, _262, fma(_827, _269, _826 * _255));
    float _840 = inversesqrt(dot(vec3(_830, _833, _836), vec3(_830, _833, _836)));
    vec4 _867 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _310) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _311) + cbTextureTilingScale._m0[11u].w));
    float _869 = _867.x;
    float _870 = 1.0 - _869;
    float _876 = (cbMtdParam._m0[19u].x + dot(vec4(_840 * _830, _840 * _833, _840 * _836, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_869 - _870) * cbMtdParam._m0[24u].w) + _870) * cbMtdParam._m0[21u].z);
    float _4273 = isnan(0.0) ? _876 : (isnan(_876) ? 0.0 : max(_876, 0.0));
    float _877 = isnan(1.0) ? _4273 : (isnan(_4273) ? 1.0 : min(_4273, 1.0));
    float _879 = (-0.0) - cbMtdParam._m0[24u].x;
    float _881 = isnan(0.0) ? _879 : (isnan(_879) ? 0.0 : max(_879, 0.0));
    float _882 = isnan(1.0) ? _881 : (isnan(_881) ? 1.0 : min(_881, 1.0));
    float _889 = _877 - ((_877 * TEXCOORD_8.x) * _882);
    float _890 = _877 - ((_877 * TEXCOORD_8.y) * _882);
    float _891 = _877 - ((_877 * TEXCOORD_8.z) * _882);
    float _898 = (_889 * (cbMtdParam._m0[17u].x - _660)) + _660;
    float _899 = (_890 * (cbMtdParam._m0[17u].y - _662)) + _662;
    float _900 = (_891 * (cbMtdParam._m0[17u].z - _664)) + _664;
    float _915 = sqrt(((cbInstanceData._m0[_296].x * cbInstanceData._m0[_296].x) + (cbInstanceData._m0[_291].x * cbInstanceData._m0[_291].x)) + (cbInstanceData._m0[_300].x * cbInstanceData._m0[_300].x));
    float _916 = _915 * TEXCOORD.z;
    float _917 = _915 * TEXCOORD.w;
    vec4 _929 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _916) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _917) + cbTextureTilingScale._m0[19u].w));
    float _931 = _929.x;
    float _932 = 1.0 - _931;
    float _960 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_931 - _932) * cbMtdParam._m0[24u].y) + _932) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4294 = isnan(0.0) ? _960 : (isnan(_960) ? 0.0 : max(_960, 0.0));
    float _961 = isnan(1.0) ? _4294 : (isnan(_4294) ? 1.0 : min(_4294, 1.0));
    float _969 = ((((cbMtdParam._m0[10u].x - _898) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _961) + _898;
    float _970 = ((((cbMtdParam._m0[10u].y - _899) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _961) + _899;
    float _971 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _900)) * _961) + _900;
    float _976 = (((_681.z - _786) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _786;
    float _980 = ((_814.z - _976) * cbMtdParam._m0[19u].w) + _976;
    vec4 _994 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _310) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _311) + cbTextureTilingScale._m0[15u].w));
    float _1001 = (_994.x * 2.0) + (-1.0);
    float _1002 = (_994.y * 2.0) + (-1.0);
    float _1003 = dot(vec2(_1001, _1002), vec2(_1001, _1002));
    float _4305 = isnan(0.0) ? _1003 : (isnan(_1003) ? 0.0 : max(_1003, 0.0));
    float _1011 = ((_994.z - _980) * _889) + _980;
    float _1014 = ((cbMtdParam._m0[23u].y - _1011) * _961) + _1011;
    vec4 _1035 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _916) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _917) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _1041 = (_1035.x * 2.0) + (-1.0);
    float _1042 = (_1035.y * 2.0) + (-1.0);
    float _1043 = dot(vec2(_1041, _1042), vec2(_1041, _1042));
    float _4316 = isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0));
    float _1058 = ((sqrt(1.0 - (isnan(1.0) ? _4305 : (isnan(_4305) ? 1.0 : min(_4305, 1.0)))) - _796) * _891) + _796;
    float _1061 = (((_1001 - _826) * _889) + _826) + (cbMtdParam._m0[21u].x * _826);
    float _1062 = (((_1002 - _827) * _890) + _827) + (cbMtdParam._m0[21u].x * _827);
    float _1073 = (((_1041 - _1061) + (_1061 * cbMtdParam._m0[22u].z)) * _961) + _1061;
    float _1074 = (((_1042 - _1062) + (_1062 * cbMtdParam._m0[22u].z)) * _961) + _1062;
    float _1075 = (_961 * (sqrt(1.0 - (isnan(1.0) ? _4316 : (isnan(_4316) ? 1.0 : min(_4316, 1.0)))) - _1058)) + _1058;
    float _1077 = cbMtdParam._m0[22u].x + _814.w;
    float _1080 = fma(_1075, _260, fma(_1074, _267, _1073 * _253));
    float _1083 = fma(_1075, _261, fma(_1074, _268, _1073 * _254));
    float _1086 = fma(_1075, _262, fma(_1074, _269, _1073 * _255));
    float _1090 = inversesqrt(dot(vec3(_1080, _1083, _1086), vec3(_1080, _1083, _1086)));
    float _1091 = _1090 * _1080;
    float _1092 = _1090 * _1083;
    float _1093 = _1090 * _1086;
    float _4327 = isnan(0.0) ? _1014 : (isnan(_1014) ? 0.0 : max(_1014, 0.0));
    float _1094 = isnan(1.0) ? _4327 : (isnan(_4327) ? 1.0 : min(_4327, 1.0));
    float _4338 = isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0));
    float _4349 = isnan(0.0) ? _969 : (isnan(_969) ? 0.0 : max(_969, 0.0));
    float _4360 = isnan(0.0) ? _970 : (isnan(_970) ? 0.0 : max(_970, 0.0));
    float _4371 = isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0));
    float _1112 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1152 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1162 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1152);
    float _1163 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1152);
    float _1164 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1152);
    float _1168 = inversesqrt(dot(vec3(_1162, _1163, _1164), vec3(_1162, _1163, _1164)));
    float _1169 = _1162 * _1168;
    float _1170 = _1163 * _1168;
    float _1171 = _1164 * _1168;
    float _1177 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1178 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1196 = fma(_1093, cbSceneParam._m0[5u].z, fma(_1092, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1091));
    float _1199 = fma(_1093, cbSceneParam._m0[6u].z, fma(_1092, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1091));
    float _1202 = fma(_1093, cbSceneParam._m0[7u].z, fma(_1092, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1091));
    uint _1216 = (_291 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1222 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4349 : (isnan(_4349) ? 1.0 : min(_4349, 1.0)))) * cbInstanceData._m0[_1216].x;
    float _1223 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4360 : (isnan(_4360) ? 1.0 : min(_4360, 1.0)))) * cbInstanceData._m0[_1216].y;
    float _1224 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4371 : (isnan(_4371) ? 1.0 : min(_4371, 1.0)))) * cbInstanceData._m0[_1216].z;
    float _4382 = isnan(0.0) ? _1222 : (isnan(_1222) ? 0.0 : max(_1222, 0.0));
    float _1225 = isnan(1.0) ? _4382 : (isnan(_4382) ? 1.0 : min(_4382, 1.0));
    float _4393 = isnan(0.0) ? _1223 : (isnan(_1223) ? 0.0 : max(_1223, 0.0));
    float _1226 = isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0));
    float _4404 = isnan(0.0) ? _1224 : (isnan(_1224) ? 0.0 : max(_1224, 0.0));
    float _1227 = isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0));
    vec4 _1236 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1177, cbSceneParam._m0[86u].y * _1178));
    float _1240 = ((isnan(1.0) ? _4338 : (isnan(_4338) ? 1.0 : min(_4338, 1.0))) * TEXCOORD_5.w) * _1236.x;
    float _1241 = dot(vec3(_1091, _1092, _1093), vec3(_1169, _1170, _1171));
    float _1244 = _1241 * 2.0;
    float _1248 = (_1244 * _1091) - _1169;
    float _1249 = (_1244 * _1092) - _1170;
    float _1250 = (_1244 * _1093) - _1171;
    float _1254 = abs(dot(vec3(_1169, _1170, _1171), vec3(_1091, _1092, _1093)));
    float _4415 = isnan(0.0) ? _1254 : (isnan(_1254) ? 0.0 : max(_1254, 0.0));
    float _1256 = sqrt(_1094);
    float _1269 = exp2((_1256 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1256 * 3.0));
    float _1301 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1305 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1309 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1610;
    float _1612;
    float _1613;
    float _1614;
    float _1615;
    float _1616;
    float _1617;
    float _1618;
    float _1619;
    float _1620;
    float _1621;
    float _1622;
    float _1623;
    float _1624;
    float _1625;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1335 = fma(_1309, cbModelParam._m0[26u].z, fma(_1305, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1301));
        float _1339 = fma(_1309, cbModelParam._m0[27u].z, fma(_1305, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1301));
        float _1343 = fma(_1309, cbModelParam._m0[28u].z, fma(_1305, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1301));
        float _1368 = _1301 + _1091;
        float _1369 = _1305 + _1092;
        float _1370 = _1309 + _1093;
        float _1380 = fma(_1370, cbModelParam._m0[26u].z, fma(_1369, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1368)) - _1335;
        float _1381 = fma(_1370, cbModelParam._m0[27u].z, fma(_1369, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1368)) - _1339;
        float _1382 = fma(_1370, cbModelParam._m0[28u].z, fma(_1369, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1368)) - _1343;
        float _1386 = inversesqrt(dot(vec3(_1380, _1381, _1382), vec3(_1380, _1381, _1382)));
        float _1399 = ((_1386 * _1380) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1335 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1400 = ((_1386 * _1381) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1339 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1401 = ((_1386 * _1382) / cbModelParam._m0[34u].z) + ((((((_1343 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1404 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1399, _1400, _1401), 0.0);
        vec4 _1411 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1399, _1400, _1401), 0.0);
        vec4 _1418 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1399, _1400, _1401), 0.0);
        vec4 _1425 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1399, _1400, _1401), 0.0);
        float _1438 = exp2((_1404.w + (-0.5)) * 20.0) * 2.0;
        float _1439 = _1438 * (_1404.x + (-0.5));
        float _1440 = _1438 * (_1404.y + (-0.5));
        float _1441 = _1438 * (_1404.z + (-0.5));
        float _1448 = exp2((_1411.w + (-0.5)) * 20.0) * 2.0;
        float _1449 = _1448 * (_1411.x + (-0.5));
        float _1450 = _1448 * (_1411.y + (-0.5));
        float _1451 = _1448 * (_1411.z + (-0.5));
        float _1458 = exp2((_1418.w + (-0.5)) * 20.0) * 2.0;
        float _1459 = _1458 * (_1418.x + (-0.5));
        float _1460 = _1458 * (_1418.y + (-0.5));
        float _1461 = _1458 * (_1418.z + (-0.5));
        float _1468 = exp2((_1425.w + (-0.5)) * 20.0) * 2.0;
        float _1469 = _1468 * (_1425.x + (-0.5));
        float _1470 = _1468 * (_1425.y + (-0.5));
        float _1471 = _1468 * (_1425.z + (-0.5));
        float _1472 = isnan(0.0) ? _1469 : (isnan(_1469) ? 0.0 : max(_1469, 0.0));
        float _1473 = isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0));
        float _1474 = isnan(0.0) ? _1471 : (isnan(_1471) ? 0.0 : max(_1471, 0.0));
        float _1475 = _1439 * 0.5;
        float _1476 = _1449 * 0.5;
        float _1477 = _1459 * 0.5;
        float _1478 = dot(vec3(_1475, _1476, _1477), vec3(_1475, _1476, _1477));
        float _1483 = (_1478 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1478);
        float _1492 = (dot(vec3(_1091, _1092, _1093), vec3(_1483 * _1475, _1483 * _1476, _1483 * _1477)) + 1.0) * 0.5;
        float _4441 = isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0));
        float _1502 = sqrt(((_1476 * _1476) + (_1475 * _1475)) + (_1477 * _1477)) / (_1472 + 9.9999997473787516355514526367188e-06);
        float _4452 = isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0));
        float _1503 = isnan(1.0) ? _4452 : (isnan(_4452) ? 1.0 : min(_4452, 1.0));
        float _1504 = _1503 * 2.0;
        float _1508 = (1.0 - _1503) / (_1503 + 1.0);
        float _4463 = isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0));
        float _1509 = isnan(1.0) ? _4463 : (isnan(_4463) ? 1.0 : min(_4463, 1.0));
        float _1518 = ((((1.0 - _1509) * (_1504 + 2.0)) * exp2(log2(isnan(1.0) ? _4441 : (isnan(_4441) ? 1.0 : min(_4441, 1.0))) * (_1504 + 1.0))) + _1509) * _1472;
        float _1519 = _1440 * 0.5;
        float _1520 = _1450 * 0.5;
        float _1521 = _1460 * 0.5;
        float _1522 = dot(vec3(_1519, _1520, _1521), vec3(_1519, _1520, _1521));
        float _1527 = (_1522 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1522);
        float _1535 = (dot(vec3(_1091, _1092, _1093), vec3(_1527 * _1519, _1527 * _1520, _1527 * _1521)) + 1.0) * 0.5;
        float _4474 = isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0));
        float _1544 = sqrt(((_1520 * _1520) + (_1519 * _1519)) + (_1521 * _1521)) / (_1473 + 9.9999997473787516355514526367188e-06);
        float _4485 = isnan(0.0) ? _1544 : (isnan(_1544) ? 0.0 : max(_1544, 0.0));
        float _1545 = isnan(1.0) ? _4485 : (isnan(_4485) ? 1.0 : min(_4485, 1.0));
        float _1546 = _1545 * 2.0;
        float _1550 = (1.0 - _1545) / (_1545 + 1.0);
        float _4496 = isnan(0.0) ? _1550 : (isnan(_1550) ? 0.0 : max(_1550, 0.0));
        float _1551 = isnan(1.0) ? _4496 : (isnan(_4496) ? 1.0 : min(_4496, 1.0));
        float _1560 = ((((1.0 - _1551) * (_1546 + 2.0)) * exp2(log2(isnan(1.0) ? _4474 : (isnan(_4474) ? 1.0 : min(_4474, 1.0))) * (_1546 + 1.0))) + _1551) * _1473;
        float _1561 = _1441 * 0.5;
        float _1562 = _1451 * 0.5;
        float _1563 = _1461 * 0.5;
        float _1564 = dot(vec3(_1561, _1562, _1563), vec3(_1561, _1562, _1563));
        float _1569 = (_1564 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1564);
        float _1577 = (dot(vec3(_1091, _1092, _1093), vec3(_1569 * _1561, _1569 * _1562, _1569 * _1563)) + 1.0) * 0.5;
        float _4507 = isnan(0.0) ? _1577 : (isnan(_1577) ? 0.0 : max(_1577, 0.0));
        float _1586 = sqrt(((_1562 * _1562) + (_1561 * _1561)) + (_1563 * _1563)) / (_1474 + 9.9999997473787516355514526367188e-06);
        float _4518 = isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0));
        float _1587 = isnan(1.0) ? _4518 : (isnan(_4518) ? 1.0 : min(_4518, 1.0));
        float _1588 = _1587 * 2.0;
        float _1592 = (1.0 - _1587) / (_1587 + 1.0);
        float _4529 = isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0));
        float _1593 = isnan(1.0) ? _4529 : (isnan(_4529) ? 1.0 : min(_4529, 1.0));
        float _1602 = ((((1.0 - _1593) * (_1588 + 2.0)) * exp2(log2(isnan(1.0) ? _4507 : (isnan(_4507) ? 1.0 : min(_4507, 1.0))) * (_1588 + 1.0))) + _1593) * _1474;
        _1610 = _1441;
        _1612 = _1440;
        _1613 = _1439;
        _1614 = _1451;
        _1615 = _1450;
        _1616 = _1449;
        _1617 = _1461;
        _1618 = _1460;
        _1619 = _1459;
        _1620 = _1474;
        _1621 = _1473;
        _1622 = _1472;
        _1623 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0)));
        _1624 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0)));
        _1625 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1602 : (isnan(_1602) ? 0.0 : max(_1602, 0.0)));
    }
    else
    {
        _1610 = _1611;
        _1612 = _1611;
        _1613 = _1611;
        _1614 = _1611;
        _1615 = _1611;
        _1616 = _1611;
        _1617 = _1611;
        _1618 = _1611;
        _1619 = _1611;
        _1620 = _1611;
        _1621 = _1611;
        _1622 = _1611;
        _1623 = 0.0;
        _1624 = 0.0;
        _1625 = 0.0;
    }
    float _1917;
    float _1918;
    float _1919;
    float _1920;
    float _1921;
    float _1922;
    float _1923;
    float _1924;
    float _1925;
    float _1926;
    float _1927;
    float _1928;
    float _1929;
    float _1930;
    float _1931;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1648 = fma(_1309, cbModelParam._m0[30u].z, fma(_1305, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1301));
        float _1652 = fma(_1309, cbModelParam._m0[31u].z, fma(_1305, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1301));
        float _1656 = fma(_1309, cbModelParam._m0[32u].z, fma(_1305, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1301));
        float _1679 = _1301 + _1091;
        float _1680 = _1305 + _1092;
        float _1681 = _1309 + _1093;
        float _1691 = fma(_1681, cbModelParam._m0[30u].z, fma(_1680, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1679)) - _1648;
        float _1692 = fma(_1681, cbModelParam._m0[31u].z, fma(_1680, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1679)) - _1652;
        float _1693 = fma(_1681, cbModelParam._m0[32u].z, fma(_1680, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1679)) - _1656;
        float _1697 = inversesqrt(dot(vec3(_1691, _1692, _1693), vec3(_1691, _1692, _1693)));
        float _1710 = ((_1697 * _1691) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1648 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1711 = ((_1697 * _1692) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1652 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1712 = ((_1697 * _1693) / cbModelParam._m0[35u].z) + ((((((_1656 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1714 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1710, _1711, _1712), 0.0);
        vec4 _1721 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1710, _1711, _1712), 0.0);
        vec4 _1728 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1710, _1711, _1712), 0.0);
        vec4 _1735 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1710, _1711, _1712), 0.0);
        float _1747 = exp2((_1714.w + (-0.5)) * 20.0) * 2.0;
        float _1748 = _1747 * (_1714.x + (-0.5));
        float _1749 = _1747 * (_1714.y + (-0.5));
        float _1750 = _1747 * (_1714.z + (-0.5));
        float _1757 = exp2((_1721.w + (-0.5)) * 20.0) * 2.0;
        float _1758 = _1757 * (_1721.x + (-0.5));
        float _1759 = _1757 * (_1721.y + (-0.5));
        float _1760 = _1757 * (_1721.z + (-0.5));
        float _1767 = exp2((_1728.w + (-0.5)) * 20.0) * 2.0;
        float _1768 = _1767 * (_1728.x + (-0.5));
        float _1769 = _1767 * (_1728.y + (-0.5));
        float _1770 = _1767 * (_1728.z + (-0.5));
        float _1777 = exp2((_1735.w + (-0.5)) * 20.0) * 2.0;
        float _1778 = _1777 * (_1735.x + (-0.5));
        float _1779 = _1777 * (_1735.y + (-0.5));
        float _1780 = _1777 * (_1735.z + (-0.5));
        float _1781 = isnan(0.0) ? _1778 : (isnan(_1778) ? 0.0 : max(_1778, 0.0));
        float _1782 = isnan(0.0) ? _1779 : (isnan(_1779) ? 0.0 : max(_1779, 0.0));
        float _1783 = isnan(0.0) ? _1780 : (isnan(_1780) ? 0.0 : max(_1780, 0.0));
        float _1784 = _1748 * 0.5;
        float _1785 = _1758 * 0.5;
        float _1786 = _1768 * 0.5;
        float _1787 = dot(vec3(_1784, _1785, _1786), vec3(_1784, _1785, _1786));
        float _1792 = (_1787 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1787);
        float _1800 = (dot(vec3(_1091, _1092, _1093), vec3(_1792 * _1784, _1792 * _1785, _1792 * _1786)) + 1.0) * 0.5;
        float _4570 = isnan(0.0) ? _1800 : (isnan(_1800) ? 0.0 : max(_1800, 0.0));
        float _1809 = sqrt(((_1785 * _1785) + (_1784 * _1784)) + (_1786 * _1786)) / (_1781 + 9.9999997473787516355514526367188e-06);
        float _4581 = isnan(0.0) ? _1809 : (isnan(_1809) ? 0.0 : max(_1809, 0.0));
        float _1810 = isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0));
        float _1811 = _1810 * 2.0;
        float _1815 = (1.0 - _1810) / (_1810 + 1.0);
        float _4592 = isnan(0.0) ? _1815 : (isnan(_1815) ? 0.0 : max(_1815, 0.0));
        float _1816 = isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0));
        float _1825 = ((((1.0 - _1816) * (_1811 + 2.0)) * exp2(log2(isnan(1.0) ? _4570 : (isnan(_4570) ? 1.0 : min(_4570, 1.0))) * (_1811 + 1.0))) + _1816) * _1781;
        float _1826 = _1749 * 0.5;
        float _1827 = _1759 * 0.5;
        float _1828 = _1769 * 0.5;
        float _1829 = dot(vec3(_1826, _1827, _1828), vec3(_1826, _1827, _1828));
        float _1834 = (_1829 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1829);
        float _1842 = (dot(vec3(_1091, _1092, _1093), vec3(_1834 * _1826, _1834 * _1827, _1834 * _1828)) + 1.0) * 0.5;
        float _4603 = isnan(0.0) ? _1842 : (isnan(_1842) ? 0.0 : max(_1842, 0.0));
        float _1851 = sqrt(((_1827 * _1827) + (_1826 * _1826)) + (_1828 * _1828)) / (_1782 + 9.9999997473787516355514526367188e-06);
        float _4614 = isnan(0.0) ? _1851 : (isnan(_1851) ? 0.0 : max(_1851, 0.0));
        float _1852 = isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0));
        float _1853 = _1852 * 2.0;
        float _1857 = (1.0 - _1852) / (_1852 + 1.0);
        float _4625 = isnan(0.0) ? _1857 : (isnan(_1857) ? 0.0 : max(_1857, 0.0));
        float _1858 = isnan(1.0) ? _4625 : (isnan(_4625) ? 1.0 : min(_4625, 1.0));
        float _1867 = ((((1.0 - _1858) * (_1853 + 2.0)) * exp2(log2(isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0))) * (_1853 + 1.0))) + _1858) * _1782;
        float _1868 = _1750 * 0.5;
        float _1869 = _1760 * 0.5;
        float _1870 = _1770 * 0.5;
        float _1871 = dot(vec3(_1868, _1869, _1870), vec3(_1868, _1869, _1870));
        float _1876 = (_1871 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1871);
        float _1884 = (dot(vec3(_1091, _1092, _1093), vec3(_1876 * _1868, _1876 * _1869, _1876 * _1870)) + 1.0) * 0.5;
        float _4636 = isnan(0.0) ? _1884 : (isnan(_1884) ? 0.0 : max(_1884, 0.0));
        float _1893 = sqrt(((_1869 * _1869) + (_1868 * _1868)) + (_1870 * _1870)) / (_1783 + 9.9999997473787516355514526367188e-06);
        float _4647 = isnan(0.0) ? _1893 : (isnan(_1893) ? 0.0 : max(_1893, 0.0));
        float _1894 = isnan(1.0) ? _4647 : (isnan(_4647) ? 1.0 : min(_4647, 1.0));
        float _1895 = _1894 * 2.0;
        float _1899 = (1.0 - _1894) / (_1894 + 1.0);
        float _4658 = isnan(0.0) ? _1899 : (isnan(_1899) ? 0.0 : max(_1899, 0.0));
        float _1900 = isnan(1.0) ? _4658 : (isnan(_4658) ? 1.0 : min(_4658, 1.0));
        float _1909 = ((((1.0 - _1900) * (_1895 + 2.0)) * exp2(log2(isnan(1.0) ? _4636 : (isnan(_4636) ? 1.0 : min(_4636, 1.0))) * (_1895 + 1.0))) + _1900) * _1783;
        _1917 = _1750;
        _1918 = _1749;
        _1919 = _1748;
        _1920 = _1760;
        _1921 = _1759;
        _1922 = _1758;
        _1923 = _1770;
        _1924 = _1769;
        _1925 = _1768;
        _1926 = _1783;
        _1927 = _1782;
        _1928 = _1781;
        _1929 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1825 : (isnan(_1825) ? 0.0 : max(_1825, 0.0)));
        _1930 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1867 : (isnan(_1867) ? 0.0 : max(_1867, 0.0)));
        _1931 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1909 : (isnan(_1909) ? 0.0 : max(_1909, 0.0)));
    }
    else
    {
        _1917 = _1611;
        _1918 = _1611;
        _1919 = _1611;
        _1920 = _1611;
        _1921 = _1611;
        _1922 = _1611;
        _1923 = _1611;
        _1924 = _1611;
        _1925 = _1611;
        _1926 = _1611;
        _1927 = _1611;
        _1928 = _1611;
        _1929 = 0.0;
        _1930 = 0.0;
        _1931 = 0.0;
    }
    float _1941 = (cbModelParam._m0[1u].x * (_1929 - _1623)) + _1623;
    float _1942 = (cbModelParam._m0[1u].x * (_1930 - _1624)) + _1624;
    float _1943 = (cbModelParam._m0[1u].x * (_1931 - _1625)) + _1625;
    float _1964 = fma(_1943, cbSceneParam._m0[89u].z, fma(_1942, cbSceneParam._m0[89u].y, _1941 * cbSceneParam._m0[89u].x));
    float _1967 = fma(_1943, cbSceneParam._m0[90u].z, fma(_1942, cbSceneParam._m0[90u].y, _1941 * cbSceneParam._m0[90u].x));
    float _1970 = fma(_1943, cbSceneParam._m0[91u].z, fma(_1942, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1941));
    float _1985 = _1248 * 0.5;
    float _1986 = _1249 * 0.5;
    float _1987 = _1250 * 0.5;
    float _1988 = dot(vec4(_1985, _1986, _1987, 1.0), vec4(_1919, _1922, _1925, _1928));
    float _1991 = dot(vec4(_1985, _1986, _1987, 1.0), vec4(_1918, _1921, _1924, _1927));
    float _1994 = dot(vec4(_1985, _1986, _1987, 1.0), vec4(_1917, _1920, _1923, _1926));
    float _2028;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2001 = dot(vec4(_1985, _1986, _1987, 1.0), vec4(_1610, _1614, _1617, _1620));
        float _2005 = dot(vec4(_1985, _1986, _1987, 1.0), vec4(_1612, _1615, _1618, _1621));
        float _2009 = dot(vec4(_1985, _1986, _1987, 1.0), vec4(_1613, _1616, _1619, _1622));
        float _2016 = dot(vec4(cbModelParam._m0[39u]), vec4(_1985, _1986, _1987, 1.0));
        _2028 = dot(vec3(isnan(0.0) ? _2009 : (isnan(_2009) ? 0.0 : max(_2009, 0.0)), isnan(0.0) ? _2005 : (isnan(_2005) ? 0.0 : max(_2005, 0.0)), isnan(0.0) ? _2001 : (isnan(_2001) ? 0.0 : max(_2001, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2016) ? 0.0 : (isnan(0.0) ? _2016 : max(0.0, _2016))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2028 = 1.0;
    }
    float _2039;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2030 = dot(vec4(cbModelParam._m0[40u]), vec4(_1985, _1986, _1987, 1.0));
        _2039 = dot(vec3(isnan(0.0) ? _1988 : (isnan(_1988) ? 0.0 : max(_1988, 0.0)), isnan(0.0) ? _1991 : (isnan(_1991) ? 0.0 : max(_1991, 0.0)), isnan(0.0) ? _1994 : (isnan(_1994) ? 0.0 : max(_1994, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2030) ? 0.0 : (isnan(0.0) ? _2030 : max(0.0, _2030))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2039 = 1.0;
    }
    float _2043 = (_2039 * cbModelParam._m0[1u].x) + (_2028 * (1.0 - cbModelParam._m0[1u].x));
    float _2053 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1094);
    float _2054 = isnan(_2053) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2053 : min(cbModelParam._m0[25u].z, _2053));
    float _2134;
    float _2136;
    float _2138;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2101 = fma(_1309, cbModelParam._m0[13u].z, fma(_1305, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1301)) + cbModelParam._m0[13u].w;
        float _2105 = fma(_1309, cbModelParam._m0[14u].z, fma(_1305, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1301)) + cbModelParam._m0[14u].w;
        float _2109 = fma(_1309, cbModelParam._m0[15u].z, fma(_1305, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1301)) + cbModelParam._m0[15u].w;
        float _2112 = fma(_1250, cbModelParam._m0[13u].z, fma(_1249, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1248));
        float _2115 = fma(_1250, cbModelParam._m0[14u].z, fma(_1249, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1248));
        float _2118 = fma(_1250, cbModelParam._m0[15u].z, fma(_1249, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1248));
        float _2146;
        if (_2112 > 0.0)
        {
            _2146 = abs((1.0 - _2101) / _2112);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2112 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2101 + 1.0) / _2112);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2146 = frontier_phi_14_12_ladder;
        }
        float _2316;
        if (_2115 > 0.0)
        {
            _2316 = abs((1.0 - _2105) / _2115);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2115 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2105 + 1.0) / _2115);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2316 = frontier_phi_23_19_ladder;
        }
        float _2611;
        if (_2118 > 0.0)
        {
            _2611 = abs((1.0 - _2109) / _2118);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2118 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2109 + 1.0) / _2118);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2611 = frontier_phi_35_30_ladder;
        }
        float _2613 = isnan(_2316) ? _2146 : (isnan(_2146) ? _2316 : min(_2146, _2316));
        float _2614 = isnan(_2611) ? _2613 : (isnan(_2613) ? _2611 : min(_2613, _2611));
        float _2618 = (_2614 * _2112) + _2101;
        float _2619 = (_2614 * _2115) + _2105;
        float _2620 = (_2614 * _2118) + _2109;
        float _2621 = _2614 * 9.9999997473787516355514526367188e-05;
        float _2623 = (-1.0) - _2621;
        float _2625 = _2621 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2620 > _2625) || ((_2620 < _2623) || ((_2619 > _2625) || ((_2619 < _2623) || ((_2618 < _2623) || (_2618 > _2625))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2765 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2620, cbModelParam._m0[9u].z, fma(_2619, cbModelParam._m0[9u].y, _2618 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2620, cbModelParam._m0[10u].z, fma(_2619, cbModelParam._m0[10u].y, _2618 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2620, cbModelParam._m0[11u].z, fma(_2619, cbModelParam._m0[11u].y, _2618 * cbModelParam._m0[11u].x))), _2054);
            frontier_phi_13_35_ladder = _2765.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2765.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2765.x * cbModelParam._m0[1u].y;
        }
        _2134 = frontier_phi_13_35_ladder_2;
        _2136 = frontier_phi_13_35_ladder_1;
        _2138 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2122 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1248, _1249, _1250), _2054);
        _2134 = _2122.x * cbModelParam._m0[1u].y;
        _2136 = _2122.y * cbModelParam._m0[1u].y;
        _2138 = _2122.z * cbModelParam._m0[1u].y;
    }
    float _2142 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1094);
    float _2143 = isnan(_2142) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2142 : min(cbModelParam._m0[25u].w, _2142));
    float _2233;
    float _2235;
    float _2237;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2197 = fma(_1309, cbModelParam._m0[21u].z, fma(_1305, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1301)) + cbModelParam._m0[21u].w;
        float _2201 = fma(_1309, cbModelParam._m0[22u].z, fma(_1305, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1301)) + cbModelParam._m0[22u].w;
        float _2205 = fma(_1309, cbModelParam._m0[23u].z, fma(_1305, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1301)) + cbModelParam._m0[23u].w;
        float _2208 = fma(_1250, cbModelParam._m0[21u].z, fma(_1249, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1248));
        float _2211 = fma(_1250, cbModelParam._m0[22u].z, fma(_1249, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1248));
        float _2214 = fma(_1250, cbModelParam._m0[23u].z, fma(_1249, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1248));
        float _2321;
        if (_2208 > 0.0)
        {
            _2321 = abs((1.0 - _2197) / _2208);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2208 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2197 + 1.0) / _2208);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2321 = frontier_phi_25_21_ladder;
        }
        float _2638;
        if (_2211 > 0.0)
        {
            _2638 = abs((1.0 - _2201) / _2211);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2211 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2201 + 1.0) / _2211);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2638 = frontier_phi_37_32_ladder;
        }
        float _2965;
        if (_2214 > 0.0)
        {
            _2965 = abs((1.0 - _2205) / _2214);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2214 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2205 + 1.0) / _2214);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2965 = frontier_phi_47_44_ladder;
        }
        float _2967 = isnan(_2638) ? _2321 : (isnan(_2321) ? _2638 : min(_2321, _2638));
        float _2968 = isnan(_2965) ? _2967 : (isnan(_2967) ? _2965 : min(_2967, _2965));
        float _2972 = (_2968 * _2208) + _2197;
        float _2973 = (_2968 * _2211) + _2201;
        float _2974 = (_2968 * _2214) + _2205;
        float _2975 = _2968 * 9.9999997473787516355514526367188e-05;
        float _2976 = (-1.0) - _2975;
        float _2978 = _2975 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2974 > _2978) || ((_2974 < _2976) || ((_2973 > _2978) || ((_2973 < _2976) || ((_2972 < _2976) || (_2972 > _2978))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3092 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2974, cbModelParam._m0[17u].z, fma(_2973, cbModelParam._m0[17u].y, _2972 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2974, cbModelParam._m0[18u].z, fma(_2973, cbModelParam._m0[18u].y, _2972 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2974, cbModelParam._m0[19u].z, fma(_2973, cbModelParam._m0[19u].y, _2972 * cbModelParam._m0[19u].x))), _2143);
            frontier_phi_22_47_ladder = _3092.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _3092.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _3092.x * cbModelParam._m0[1u].z;
        }
        _2233 = frontier_phi_22_47_ladder_2;
        _2235 = frontier_phi_22_47_ladder_1;
        _2237 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2217 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1248, _1249, _1250), _2143);
        _2233 = _2217.x * cbModelParam._m0[1u].z;
        _2235 = _2217.y * cbModelParam._m0[1u].z;
        _2237 = _2217.z * cbModelParam._m0[1u].z;
    }
    float _2249 = ((((1.0 - _1269) * ((_1256 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1269 * _1256)) * _1240;
    float _2250 = _2249 * ((cbModelParam._m0[1u].w * (_2233 - _2134)) + _2134);
    float _2251 = _2249 * ((cbModelParam._m0[1u].w * (_2235 - _2136)) + _2136);
    float _2252 = _2249 * ((cbModelParam._m0[1u].w * (_2237 - _2138)) + _2138);
    float _2255 = fma(_2252, cbSceneParam._m0[89u].z, fma(_2251, cbSceneParam._m0[89u].y, _2250 * cbSceneParam._m0[89u].x));
    float _2258 = fma(_2252, cbSceneParam._m0[90u].z, fma(_2251, cbSceneParam._m0[90u].y, _2250 * cbSceneParam._m0[90u].x));
    float _2261 = fma(_2252, cbSceneParam._m0[91u].z, fma(_2251, cbSceneParam._m0[91u].y, _2250 * cbSceneParam._m0[91u].x));
    float _2295 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2299 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2303 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2307 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2308 = _2295 / _2307;
    float _2309 = _2299 / _2307;
    float _2310 = _2303 / _2307;
    float _2457;
    float _2458;
    float _2459;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2337 = ((uint(_2310 > cbSceneParam._m0[59u].y) + uint(_2310 > cbSceneParam._m0[59u].x)) + uint(_2310 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2338 = _2337 + 43u;
        uint _2346 = _2337 + 44u;
        uint _2354 = _2337 + 45u;
        uint _2362 = _2337 + 46u;
        float _2373 = fma(_2307, cbSceneParam._m0[_2338].w, fma(_2303, cbSceneParam._m0[_2338].z, fma(_2299, cbSceneParam._m0[_2338].y, _2295 * cbSceneParam._m0[_2338].x)));
        float _2377 = fma(_2307, cbSceneParam._m0[_2346].w, fma(_2303, cbSceneParam._m0[_2346].z, fma(_2299, cbSceneParam._m0[_2346].y, _2295 * cbSceneParam._m0[_2346].x)));
        float _2385 = fma(_2307, cbSceneParam._m0[_2362].w, fma(_2303, cbSceneParam._m0[_2362].z, fma(_2299, cbSceneParam._m0[_2362].y, _2295 * cbSceneParam._m0[_2362].x)));
        float _2390 = cbSceneParam._m0[33u].z * _2385;
        float _2392 = cbSceneParam._m0[33u].w * _2385;
        float _2395 = fma(_2307, cbSceneParam._m0[_2354].w, fma(_2303, cbSceneParam._m0[_2354].z, fma(_2299, cbSceneParam._m0[_2354].y, _2295 * cbSceneParam._m0[_2354].x))) / _2385;
        float _2443 = (cbSceneParam._m0[33u].x - sqrt(((_2309 * _2309) + (_2308 * _2308)) + (_2310 * _2310))) * cbSceneParam._m0[33u].y;
        float _4784 = isnan(0.0) ? _2443 : (isnan(_2443) ? 0.0 : max(_2443, 0.0));
        float _2450 = (isnan(1.0) ? _4784 : (isnan(_4784) ? 1.0 : min(_4784, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2390 + _2373) / _2385, (_2392 + _2377) / _2385), _2395), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2392 + _2373) / _2385, (_2377 - _2390) / _2385), _2395), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2373 - _2390) / _2385, (_2377 - _2392) / _2385), _2395), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2373 - _2392) / _2385, (_2390 + _2377) / _2385), _2395), 0.0)).x), vec4(0.25)));
        _2457 = 1.0 - (_2450 * cbSceneParam._m0[34u].x);
        _2458 = 1.0 - (_2450 * cbSceneParam._m0[34u].y);
        _2459 = 1.0 - (_2450 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2457 = 1.0;
        _2458 = 1.0;
        _2459 = 1.0;
    }
    float _2523;
    float _2525;
    float _2527;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2511 = fma(_2307, cbSceneParam._m0[63u].w, fma(_2303, cbSceneParam._m0[63u].z, fma(_2299, cbSceneParam._m0[63u].y, _2295 * cbSceneParam._m0[63u].x)));
        float _2512 = fma(_2307, cbSceneParam._m0[60u].w, fma(_2303, cbSceneParam._m0[60u].z, fma(_2299, cbSceneParam._m0[60u].y, _2295 * cbSceneParam._m0[60u].x))) / _2511;
        float _2513 = fma(_2307, cbSceneParam._m0[61u].w, fma(_2303, cbSceneParam._m0[61u].z, fma(_2299, cbSceneParam._m0[61u].y, _2295 * cbSceneParam._m0[61u].x))) / _2511;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2512 >= cbSceneParam._m0[64u].x) && (_2513 >= cbSceneParam._m0[64u].y)) && (_2512 <= cbSceneParam._m0[64u].z)) && (_2513 <= cbSceneParam._m0[64u].w))
        {
            float _2651 = fma(_2307, cbSceneParam._m0[62u].w, fma(_2303, cbSceneParam._m0[62u].z, fma(_2299, cbSceneParam._m0[62u].y, _2295 * cbSceneParam._m0[62u].x))) / _2511;
            float _2655 = isnan(cbSceneParam._m0[41u].w) ? _2651 : (isnan(_2651) ? cbSceneParam._m0[41u].w : max(_2651, cbSceneParam._m0[41u].w));
            float _2698 = (cbSceneParam._m0[33u].x - sqrt(((_2309 * _2309) + (_2308 * _2308)) + (_2310 * _2310))) * cbSceneParam._m0[33u].y;
            float _4800 = isnan(0.0) ? _2698 : (isnan(_2698) ? 0.0 : max(_2698, 0.0));
            float _2705 = (isnan(1.0) ? _4800 : (isnan(_4800) ? 1.0 : min(_4800, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2512, cbSceneParam._m0[33u].w + _2513), _2655), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2512, _2513 - cbSceneParam._m0[33u].z), _2655), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2512 - cbSceneParam._m0[33u].z, _2513 - cbSceneParam._m0[33u].w), _2655), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2512 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2513), _2655), 0.0)).x), vec4(0.25)));
            float _2709 = 1.0 - (_2705 * cbSceneParam._m0[34u].x);
            float _2710 = 1.0 - (_2705 * cbSceneParam._m0[34u].y);
            float _2711 = 1.0 - (_2705 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2711) ? _2459 : (isnan(_2459) ? _2711 : min(_2459, _2711));
            frontier_phi_34_33_ladder_1 = isnan(_2710) ? _2458 : (isnan(_2458) ? _2710 : min(_2458, _2710));
            frontier_phi_34_33_ladder_2 = isnan(_2709) ? _2457 : (isnan(_2457) ? _2709 : min(_2457, _2709));
        }
        else
        {
            frontier_phi_34_33_ladder = _2459;
            frontier_phi_34_33_ladder_1 = _2458;
            frontier_phi_34_33_ladder_2 = _2457;
        }
        _2523 = frontier_phi_34_33_ladder_2;
        _2525 = frontier_phi_34_33_ladder_1;
        _2527 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2523 = _2457;
        _2525 = _2458;
        _2527 = _2459;
    }
    uvec4 _2532 = floatBitsToUint(cbInstanceData._m0[_291 + 5u]);
    uint _2534 = _2532.x * 14u;
    uint _2535 = _2534 + 13u;
    float _2542 = _1240 + (-1.0);
    float _2547 = (cbLight._m0[_2535].x * _2542) + 1.0;
    float _2548 = (cbLight._m0[_2535].y * _2542) + 1.0;
    float _2549 = (cbLight._m0[_2535].z * _2542) + 1.0;
    float _2550 = (cbLight._m0[_2535].w * _2542) + 1.0;
    uint _2551 = _2534 + 5u;
    float _2557 = isnan(1.0) ? _2548 : (isnan(_2548) ? 1.0 : min(_2548, 1.0));
    uint _2561 = _2534 + 4u;
    float _2570 = isnan(1.0) ? _2547 : (isnan(_2547) ? 1.0 : min(_2547, 1.0));
    uint _2574 = _2534 | 1u;
    float _2585 = dot(vec3(cbLight._m0[_2534].xyz), vec3(_1091, _1092, _1093));
    float _2588 = dot(vec3(cbLight._m0[_2574].xyz), vec3(_1091, _1092, _1093));
    float _4836 = isnan(0.0) ? _2585 : (isnan(_2585) ? 0.0 : max(_2585, 0.0));
    float _4847 = isnan(0.0) ? _2588 : (isnan(_2588) ? 0.0 : max(_2588, 0.0));
    float _2593 = (isnan(1.0) ? _4836 : (isnan(_4836) ? 1.0 : min(_4836, 1.0))) * 0.3183098733425140380859375;
    float _2595 = (isnan(1.0) ? _4847 : (isnan(_4847) ? 1.0 : min(_4847, 1.0))) * 0.3183098733425140380859375;
    float _2602 = ((cbLight._m0[_2551].x * _2557) * _2595) + (((cbLight._m0[_2561].x * _2523) * _2570) * _2593);
    float _2603 = ((_2557 * cbLight._m0[_2551].y) * _2595) + (((cbLight._m0[_2561].y * _2525) * _2570) * _2593);
    float _2604 = ((_2557 * cbLight._m0[_2551].z) * _2595) + (((cbLight._m0[_2561].z * _2527) * _2570) * _2593);
    uvec4 _2608 = floatBitsToUint(cbLight._m0[_2534 + 12u]);
    bool _2610 = _2608.x == 0u;
    float _2712;
    float _2714;
    float _2716;
    if (_2610)
    {
        _2712 = _2602;
        _2714 = _2603;
        _2716 = _2604;
    }
    else
    {
        uint _2720 = _2534 + 6u;
        float _2736 = (dot(vec3(cbLight._m0[_2534 + 2u].xyz), vec3(_1091, _1092, _1093)) * 0.5) + 0.5;
        float _2737 = _2736 * _2736;
        float _4858 = isnan(0.0) ? _2737 : (isnan(_2737) ? 0.0 : max(_2737, 0.0));
        float _2738 = isnan(1.0) ? _4858 : (isnan(_4858) ? 1.0 : min(_4858, 1.0));
        float _2739 = isnan(1.0) ? _2549 : (isnan(_2549) ? 1.0 : min(_2549, 1.0));
        _2712 = (((cbLight._m0[_2720].x * 0.3183098733425140380859375) * _2738) * _2739) + _2602;
        _2714 = (((cbLight._m0[_2720].y * 0.3183098733425140380859375) * _2738) * _2739) + _2603;
        _2716 = (((cbLight._m0[_2720].z * 0.3183098733425140380859375) * _2738) * _2739) + _2604;
    }
    bool _2719 = _2608.y == 0u;
    float _2774;
    float _2776;
    float _2778;
    if (_2719)
    {
        _2774 = _2712;
        _2776 = _2714;
        _2778 = _2716;
    }
    else
    {
        uint _2936 = _2534 + 7u;
        float _2952 = (dot(vec3(cbLight._m0[_2534 + 3u].xyz), vec3(_1091, _1092, _1093)) * 0.5) + 0.5;
        float _2953 = _2952 * _2952;
        float _4874 = isnan(0.0) ? _2953 : (isnan(_2953) ? 0.0 : max(_2953, 0.0));
        float _2954 = isnan(1.0) ? _4874 : (isnan(_4874) ? 1.0 : min(_4874, 1.0));
        float _2955 = isnan(1.0) ? _2550 : (isnan(_2550) ? 1.0 : min(_2550, 1.0));
        _2774 = (((cbLight._m0[_2936].x * 0.3183098733425140380859375) * _2954) * _2955) + _2712;
        _2776 = (((cbLight._m0[_2936].y * 0.3183098733425140380859375) * _2954) * _2955) + _2714;
        _2778 = (((cbLight._m0[_2936].z * 0.3183098733425140380859375) * _2954) * _2955) + _2716;
    }
    uint _2781 = _2534 + 8u;
    float _2794 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2534].w)) * _1094) * 0.949999988079071044921875);
    float _2795 = _2794 * _2794;
    float _2796 = cbLight._m0[_2534].x + _1169;
    float _2797 = cbLight._m0[_2534].y + _1170;
    float _2798 = cbLight._m0[_2534].z + _1171;
    float _2802 = inversesqrt(dot(vec3(_2796, _2797, _2798), vec3(_2796, _2797, _2798)));
    float _2803 = _2802 * _2796;
    float _2804 = _2802 * _2797;
    float _2805 = _2802 * _2798;
    float _2806 = dot(vec3(_1091, _1092, _1093), vec3(cbLight._m0[_2534].xyz));
    float _4890 = isnan(0.0) ? _2806 : (isnan(_2806) ? 0.0 : max(_2806, 0.0));
    float _2809 = isnan(1.0) ? _4890 : (isnan(_4890) ? 1.0 : min(_4890, 1.0));
    float _4901 = isnan(0.0) ? _1241 : (isnan(_1241) ? 0.0 : max(_1241, 0.0));
    float _2810 = isnan(1.0) ? _4901 : (isnan(_4901) ? 1.0 : min(_4901, 1.0));
    float _2811 = dot(vec3(_1091, _1092, _1093), vec3(_2803, _2804, _2805));
    float _4912 = isnan(0.0) ? _2811 : (isnan(_2811) ? 0.0 : max(_2811, 0.0));
    float _2814 = isnan(1.0) ? _4912 : (isnan(_4912) ? 1.0 : min(_4912, 1.0));
    float _2815 = dot(vec3(cbLight._m0[_2534].xyz), vec3(_2803, _2804, _2805));
    float _4923 = isnan(0.0) ? _2815 : (isnan(_2815) ? 0.0 : max(_2815, 0.0));
    float _2819 = _2795 * _2795;
    float _2823 = ((_2814 * _2814) * (_2819 + (-1.0))) + 1.0;
    float _2834 = (exp2(log2(1.0 - (isnan(1.0) ? _4923 : (isnan(_4923) ? 1.0 : min(_4923, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2835 = 1.0 - _2795;
    float _2846 = (0.5 / (((_2810 * ((_2809 * _2835) + _2795)) + 9.9999999392252902907785028219223e-09) + (((_2810 * _2835) + _2795) * _2809))) * _2809;
    float _4934 = isnan(0.0) ? _2846 : (isnan(_2846) ? 0.0 : max(_2846, 0.0));
    float _2848 = (isnan(1.0) ? _4934 : (isnan(_4934) ? 1.0 : min(_4934, 1.0))) * (_2819 / ((_2823 * _2823) * 3.141590118408203125));
    uint _2862 = _2534 + 9u;
    float _2873 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2574].w)) * _1094) * 0.949999988079071044921875);
    float _2874 = _2873 * _2873;
    float _2875 = cbLight._m0[_2574].x + _1169;
    float _2876 = cbLight._m0[_2574].y + _1170;
    float _2877 = cbLight._m0[_2574].z + _1171;
    float _2881 = inversesqrt(dot(vec3(_2875, _2876, _2877), vec3(_2875, _2876, _2877)));
    float _2882 = _2881 * _2875;
    float _2883 = _2881 * _2876;
    float _2884 = _2881 * _2877;
    float _2885 = dot(vec3(_1091, _1092, _1093), vec3(cbLight._m0[_2574].xyz));
    float _4945 = isnan(0.0) ? _2885 : (isnan(_2885) ? 0.0 : max(_2885, 0.0));
    float _2888 = isnan(1.0) ? _4945 : (isnan(_4945) ? 1.0 : min(_4945, 1.0));
    float _2889 = dot(vec3(_1091, _1092, _1093), vec3(_2882, _2883, _2884));
    float _4956 = isnan(0.0) ? _2889 : (isnan(_2889) ? 0.0 : max(_2889, 0.0));
    float _2892 = isnan(1.0) ? _4956 : (isnan(_4956) ? 1.0 : min(_4956, 1.0));
    float _2893 = dot(vec3(cbLight._m0[_2574].xyz), vec3(_2882, _2883, _2884));
    float _4967 = isnan(0.0) ? _2893 : (isnan(_2893) ? 0.0 : max(_2893, 0.0));
    float _2897 = _2874 * _2874;
    float _2901 = ((_2892 * _2892) * (_2897 + (-1.0))) + 1.0;
    float _2910 = (exp2(log2(1.0 - (isnan(1.0) ? _4967 : (isnan(_4967) ? 1.0 : min(_4967, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2911 = 1.0 - _2874;
    float _2921 = (0.5 / (((_2810 * ((_2888 * _2911) + _2874)) + 9.9999999392252902907785028219223e-09) + (((_2810 * _2911) + _2874) * _2888))) * _2888;
    float _4978 = isnan(0.0) ? _2921 : (isnan(_2921) ? 0.0 : max(_2921, 0.0));
    float _2923 = (isnan(1.0) ? _4978 : (isnan(_4978) ? 1.0 : min(_4978, 1.0))) * (_2897 / ((_2901 * _2901) * 3.141590118408203125));
    float _2933 = (((_2910 * cbLight._m0[_2862].x) * _2923) * _2557) + ((((cbLight._m0[_2781].x * _2523) * _2834) * _2848) * _2570);
    float _2934 = (((_2910 * cbLight._m0[_2862].y) * _2923) * _2557) + ((((cbLight._m0[_2781].y * _2525) * _2834) * _2848) * _2570);
    float _2935 = (((_2910 * cbLight._m0[_2862].z) * _2923) * _2557) + ((((cbLight._m0[_2781].z * _2527) * _2834) * _2848) * _2570);
    float _2991;
    float _2993;
    float _2995;
    if (_2610)
    {
        _2991 = _2933;
        _2993 = _2934;
        _2995 = _2935;
    }
    else
    {
        uint _2997 = _2534 + 2u;
        uint _3001 = _2534 + 10u;
        float _3015 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2997].w)) * _1094) * 0.949999988079071044921875);
        float _3016 = _3015 * _3015;
        float _3017 = cbLight._m0[_2997].x + _1169;
        float _3018 = cbLight._m0[_2997].y + _1170;
        float _3019 = cbLight._m0[_2997].z + _1171;
        float _3023 = inversesqrt(dot(vec3(_3017, _3018, _3019), vec3(_3017, _3018, _3019)));
        float _3024 = _3023 * _3017;
        float _3025 = _3023 * _3018;
        float _3026 = _3023 * _3019;
        float _3027 = dot(vec3(_1091, _1092, _1093), vec3(cbLight._m0[_2997].xyz));
        float _4989 = isnan(0.0) ? _3027 : (isnan(_3027) ? 0.0 : max(_3027, 0.0));
        float _3030 = isnan(1.0) ? _4989 : (isnan(_4989) ? 1.0 : min(_4989, 1.0));
        float _3031 = dot(vec3(_1091, _1092, _1093), vec3(_3024, _3025, _3026));
        float _5000 = isnan(0.0) ? _3031 : (isnan(_3031) ? 0.0 : max(_3031, 0.0));
        float _3034 = isnan(1.0) ? _5000 : (isnan(_5000) ? 1.0 : min(_5000, 1.0));
        float _3035 = dot(vec3(cbLight._m0[_2997].xyz), vec3(_3024, _3025, _3026));
        float _5011 = isnan(0.0) ? _3035 : (isnan(_3035) ? 0.0 : max(_3035, 0.0));
        float _3039 = _3016 * _3016;
        float _3043 = ((_3034 * _3034) * (_3039 + (-1.0))) + 1.0;
        float _3052 = (exp2(log2(1.0 - (isnan(1.0) ? _5011 : (isnan(_5011) ? 1.0 : min(_5011, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3053 = 1.0 - _3016;
        float _3063 = (0.5 / (((_2810 * ((_3030 * _3053) + _3016)) + 9.9999999392252902907785028219223e-09) + (((_2810 * _3053) + _3016) * _3030))) * _3030;
        float _5022 = isnan(0.0) ? _3063 : (isnan(_3063) ? 0.0 : max(_3063, 0.0));
        float _3065 = (isnan(1.0) ? _5022 : (isnan(_5022) ? 1.0 : min(_5022, 1.0))) * (_3039 / ((_3043 * _3043) * 3.141590118408203125));
        float _3066 = isnan(1.0) ? _2549 : (isnan(_2549) ? 1.0 : min(_2549, 1.0));
        _2991 = (((_3052 * cbLight._m0[_3001].x) * _3065) * _3066) + _2933;
        _2993 = (((_3052 * cbLight._m0[_3001].y) * _3065) * _3066) + _2934;
        _2995 = (((_3052 * cbLight._m0[_3001].z) * _3065) * _3066) + _2935;
    }
    float _3097;
    float _3099;
    float _3101;
    if (_2719)
    {
        _3097 = _2991;
        _3099 = _2993;
        _3101 = _2995;
    }
    else
    {
        uint _3108 = _2534 + 3u;
        uint _3112 = _2534 + 11u;
        float _3126 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3108].w)) * _1094) * 0.949999988079071044921875);
        float _3127 = _3126 * _3126;
        float _3128 = cbLight._m0[_3108].x + _1169;
        float _3129 = cbLight._m0[_3108].y + _1170;
        float _3130 = cbLight._m0[_3108].z + _1171;
        float _3134 = inversesqrt(dot(vec3(_3128, _3129, _3130), vec3(_3128, _3129, _3130)));
        float _3135 = _3134 * _3128;
        float _3136 = _3134 * _3129;
        float _3137 = _3134 * _3130;
        float _3138 = dot(vec3(_1091, _1092, _1093), vec3(cbLight._m0[_3108].xyz));
        float _5038 = isnan(0.0) ? _3138 : (isnan(_3138) ? 0.0 : max(_3138, 0.0));
        float _3141 = isnan(1.0) ? _5038 : (isnan(_5038) ? 1.0 : min(_5038, 1.0));
        float _3142 = dot(vec3(_1091, _1092, _1093), vec3(_3135, _3136, _3137));
        float _5049 = isnan(0.0) ? _3142 : (isnan(_3142) ? 0.0 : max(_3142, 0.0));
        float _3145 = isnan(1.0) ? _5049 : (isnan(_5049) ? 1.0 : min(_5049, 1.0));
        float _3146 = dot(vec3(cbLight._m0[_3108].xyz), vec3(_3135, _3136, _3137));
        float _5060 = isnan(0.0) ? _3146 : (isnan(_3146) ? 0.0 : max(_3146, 0.0));
        float _3150 = _3127 * _3127;
        float _3154 = ((_3145 * _3145) * (_3150 + (-1.0))) + 1.0;
        float _3163 = (exp2(log2(1.0 - (isnan(1.0) ? _5060 : (isnan(_5060) ? 1.0 : min(_5060, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3164 = 1.0 - _3127;
        float _3174 = (0.5 / (((_2810 * ((_3141 * _3164) + _3127)) + 9.9999999392252902907785028219223e-09) + (((_2810 * _3164) + _3127) * _3141))) * _3141;
        float _5071 = isnan(0.0) ? _3174 : (isnan(_3174) ? 0.0 : max(_3174, 0.0));
        float _3176 = (isnan(1.0) ? _5071 : (isnan(_5071) ? 1.0 : min(_5071, 1.0))) * (_3150 / ((_3154 * _3154) * 3.141590118408203125));
        float _3177 = isnan(1.0) ? _2550 : (isnan(_2550) ? 1.0 : min(_2550, 1.0));
        _3097 = (((_3163 * cbLight._m0[_3112].x) * _3176) * _3177) + _2991;
        _3099 = (((_3163 * cbLight._m0[_3112].y) * _3176) * _3177) + _2993;
        _3101 = (((_3163 * cbLight._m0[_3112].z) * _3176) * _3177) + _2995;
    }
    float _3243;
    float _3245;
    float _3247;
    float _3249;
    float _3251;
    float _3253;
    if (_2532.y == 0u)
    {
        uvec4 _3198 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3199 = _3198.x;
        uint _3210 = uint((float(_3198.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1178) / _3199))) + floor(float(uint(cbSceneParam._m0[85u].x * _1177) / _3199)));
        float _3220 = (log2(_2310 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3221 = isnan(0.0) ? _3220 : (isnan(_3220) ? 0.0 : max(_3220, 0.0));
        uint _3224 = uint(isnan(14.0) ? _3221 : (isnan(_3221) ? 14.0 : min(_3221, 14.0)));
        uvec4 _3229 = texelFetch(g_lightClusterGridBuffer, int(((_3224 << 2u) + (_3210 << 6u)) >> 2u));
        uint _3230 = _3229.x;
        uint _3231 = _3198.z;
        float _3310;
        float _3312;
        float _3314;
        float _3316;
        float _3318;
        float _3320;
        if (((((1u << ((_3231 >> 4u) & 15u)) + 4294967295u) & _3230) == 0u) || ((_3231 & 240u) == 0u))
        {
            _3310 = 0.0;
            _3312 = 0.0;
            _3314 = 0.0;
            _3316 = 0.0;
            _3318 = 0.0;
            _3320 = 0.0;
        }
        else
        {
            float _3311;
            float _3313;
            float _3315;
            float _3317;
            float _3319;
            float _3321;
            float _3454 = 0.0;
            float _3455 = 0.0;
            float _3456 = 0.0;
            float _3457 = 0.0;
            float _3458 = 0.0;
            float _3459 = 0.0;
            uint _3460 = 0u;
            uint _3469;
            bool _3470;
            for (;;)
            {
                _3469 = texelFetch(g_lightClassification, int((((_3224 << 5u) + (_3210 << 9u)) + (_3460 << 2u)) >> 2u)).x;
                _3470 = _3469 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3470)
                {
                    frontier_phi_66_pred = _3459;
                    frontier_phi_66_pred_1 = _3458;
                    frontier_phi_66_pred_2 = _3457;
                    frontier_phi_66_pred_3 = _3456;
                    frontier_phi_66_pred_4 = _3455;
                    frontier_phi_66_pred_5 = _3454;
                }
                else
                {
                    float _3578;
                    float _3579;
                    float _3580;
                    float _3581;
                    float _3582;
                    float _3583;
                    uint _3584;
                    _3578 = _3454;
                    _3579 = _3455;
                    _3580 = _3456;
                    _3581 = _3457;
                    _3582 = _3458;
                    _3583 = _3459;
                    _3584 = _3469;
                    float _3510;
                    float _3511;
                    float _3512;
                    float _3513;
                    float _3514;
                    float _3515;
                    for (;;)
                    {
                        uint _3588 = uint(findLSB(_3584)) + (_3460 << 5u);
                        uint _3585 = (_3584 + 4294967295u) & _3584;
                        uint _3590 = _3588 * 48u;
                        vec4 _3604 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3590)).x, texelFetch(g_PointLightRenderingBuffer, int(_3590 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3590 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3590 + 3u)).x));
                        uint _3610 = (_3588 * 48u) + 4u;
                        vec4 _3623 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3610)).x, texelFetch(g_PointLightRenderingBuffer, int(_3610 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3610 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3610 + 3u)).x));
                        uint _3629 = (_3588 * 48u) + 8u;
                        vec3 _3640 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3629)).x, texelFetch(g_PointLightRenderingBuffer, int(_3629 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3629 + 2u)).x));
                        float _3644 = _3604.x - _2308;
                        float _3645 = _3604.y - _2309;
                        float _3646 = _3604.z - _2310;
                        float _3647 = dot(vec3(_3644, _3645, _3646), vec3(_3644, _3645, _3646));
                        float _3650 = inversesqrt(_3647);
                        float _3651 = _3650 * _3644;
                        float _3652 = _3650 * _3645;
                        float _3653 = _3650 * _3646;
                        float _3654 = dot(vec3(_1196, _1199, _1202), vec3(_3651, _3652, _3653));
                        float _3659 = 1.0 - (_3647 * _3604.w);
                        float _5097 = isnan(0.0) ? _3659 : (isnan(_3659) ? 0.0 : max(_3659, 0.0));
                        float _3660 = isnan(1.0) ? _5097 : (isnan(_5097) ? 1.0 : min(_5097, 1.0));
                        float _3661 = sqrt(_3647) * _3623.w;
                        float _3664 = 1.39999997615814208984375 / (_3661 + 1.39999997615814208984375);
                        float _3665 = _3664 * _3664;
                        float _3668 = ((1.0 - _3665) * _3654) + _3665;
                        float _3671 = _3661 * _3661;
                        float _3675 = ((isnan(0.0) ? _3668 : (isnan(_3668) ? 0.0 : max(_3668, 0.0))) * _3660) / ((_3671 * 0.699999988079071044921875) + 1.0);
                        float _3679 = (-0.0) - _2308;
                        float _3680 = (-0.0) - _2309;
                        float _3681 = (-0.0) - _2310;
                        float _3685 = inversesqrt(dot(vec3(_3679, _3680, _3681), vec3(_3679, _3680, _3681)));
                        float _3686 = _3685 * _3679;
                        float _3687 = _3685 * _3680;
                        float _3688 = _3685 * _3681;
                        float _3695 = exp2(log2(1.0 / ((_3671 * 3.5) + 5.0)) * 0.25);
                        float _3696 = 1.0 - _1256;
                        float _3703 = sqrt(1.0 - ((1.0 - (_3696 * _3696)) * (1.0 - (_3695 * _3695))));
                        float _3704 = _3703 * _3703;
                        float _3705 = _3704 * _3704;
                        float _3706 = _3686 + _3651;
                        float _3707 = _3687 + _3652;
                        float _3708 = _3688 + _3653;
                        float _3712 = inversesqrt(dot(vec3(_3706, _3707, _3708), vec3(_3706, _3707, _3708)));
                        float _3716 = dot(vec3(_1196, _1199, _1202), vec3(_3686, _3687, _3688));
                        float _5113 = isnan(0.0) ? _3716 : (isnan(_3716) ? 0.0 : max(_3716, 0.0));
                        float _3719 = isnan(1.0) ? _5113 : (isnan(_5113) ? 1.0 : min(_5113, 1.0));
                        float _3720 = dot(vec3(_1196, _1199, _1202), vec3(_3712 * _3706, _3712 * _3707, _3712 * _3708));
                        float _5124 = isnan(0.0) ? _3720 : (isnan(_3720) ? 0.0 : max(_3720, 0.0));
                        float _3723 = isnan(1.0) ? _5124 : (isnan(_5124) ? 1.0 : min(_5124, 1.0));
                        float _3727 = ((_3723 * _3723) * (_3705 + (-1.0))) + 1.0;
                        float _3728 = _3664 * _3704;
                        float _3729 = _3728 * _3728;
                        float _3732 = ((1.0 - _3729) * _3654) + _3729;
                        float _5135 = isnan(0.0) ? _3732 : (isnan(_3732) ? 0.0 : max(_3732, 0.0));
                        float _3733 = isnan(1.0) ? _5135 : (isnan(_5135) ? 1.0 : min(_5135, 1.0));
                        float _3734 = 1.0 - _3704;
                        float _3744 = (0.5 / (((_3733 * ((_3719 * _3734) + _3704)) + 9.9999999392252902907785028219223e-09) + (((_3733 * _3734) + _3704) * _3719))) * _3733;
                        float _5146 = isnan(0.0) ? _3744 : (isnan(_3744) ? 0.0 : max(_3744, 0.0));
                        float _3755 = (((_3705 * 3.1415927410125732421875) * (isnan(1.0) ? _5146 : (isnan(_5146) ? 1.0 : min(_5146, 1.0)))) / ((_3727 * _3727) * ((_3671 * 2.1991131305694580078125) + 3.141590118408203125))) * _3660;
                        _3513 = (_3675 * _3623.x) + _3581;
                        _3514 = (_3675 * _3623.y) + _3582;
                        _3515 = (_3675 * _3623.z) + _3583;
                        _3510 = (_3755 * _3640.x) + _3578;
                        _3511 = (_3755 * _3640.y) + _3579;
                        _3512 = (_3755 * _3640.z) + _3580;
                        if (_3585 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3578 = _3510;
                            _3579 = _3511;
                            _3580 = _3512;
                            _3581 = _3513;
                            _3582 = _3514;
                            _3583 = _3515;
                            _3584 = _3585;
                        }
                    }
                    frontier_phi_66_pred = _3515;
                    frontier_phi_66_pred_1 = _3514;
                    frontier_phi_66_pred_2 = _3513;
                    frontier_phi_66_pred_3 = _3512;
                    frontier_phi_66_pred_4 = _3511;
                    frontier_phi_66_pred_5 = _3510;
                }
                _3321 = frontier_phi_66_pred;
                _3319 = frontier_phi_66_pred_1;
                _3317 = frontier_phi_66_pred_2;
                _3315 = frontier_phi_66_pred_3;
                _3313 = frontier_phi_66_pred_4;
                _3311 = frontier_phi_66_pred_5;
                uint _3461 = _3460 + 1u;
                if (_3461 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3454 = _3311;
                    _3455 = _3313;
                    _3456 = _3315;
                    _3457 = _3317;
                    _3458 = _3319;
                    _3459 = _3321;
                    _3460 = _3461;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3310 = _3311;
            _3312 = _3313;
            _3314 = _3315;
            _3316 = _3317;
            _3318 = _3319;
            _3320 = _3321;
        }
        uvec4 _3324 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3325 = _3324.z;
        uint _3327 = (_3325 >> 8u) & 15u;
        float _3422;
        float _3424;
        float _3426;
        float _3428;
        float _3430;
        float _3432;
        if (((4294967295u << _3327) & _3230) == 0u)
        {
            _3422 = _3310;
            _3424 = _3312;
            _3426 = _3314;
            _3428 = _3316;
            _3430 = _3318;
            _3432 = _3320;
        }
        else
        {
            float _3447 = inversesqrt(dot(vec3(_2308, _2309, _2310), vec3(_2308, _2309, _2310)));
            float _3448 = _3447 * _2308;
            float _3449 = _3447 * _2309;
            float _3450 = _3447 * _2310;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3327 < ((_3325 >> 12u) & 15u))
            {
                float _3423;
                float _3425;
                float _3427;
                float _3429;
                float _3431;
                float _3433;
                float _3561 = _3310;
                float _3562 = _3312;
                float _3563 = _3314;
                float _3564 = _3316;
                float _3565 = _3318;
                float _3566 = _3320;
                uint _3567 = _3327;
                uint _3576;
                bool _3577;
                for (;;)
                {
                    _3576 = texelFetch(g_lightClassification, int((((_3224 << 5u) + (_3210 << 9u)) + (_3567 << 2u)) >> 2u)).x;
                    _3577 = _3576 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3577)
                    {
                        frontier_phi_72_pred = _3566;
                        frontier_phi_72_pred_1 = _3565;
                        frontier_phi_72_pred_2 = _3564;
                        frontier_phi_72_pred_3 = _3563;
                        frontier_phi_72_pred_4 = _3562;
                        frontier_phi_72_pred_5 = _3561;
                    }
                    else
                    {
                        float _3760;
                        float _3761;
                        float _3762;
                        float _3763;
                        float _3764;
                        float _3765;
                        float _4053;
                        float _4054;
                        float _4055;
                        float _4056;
                        float _4057;
                        float _4058;
                        float _3773 = _3561;
                        float _3774 = _3562;
                        float _3775 = _3563;
                        float _3776 = _3564;
                        float _3777 = _3565;
                        float _3778 = _3566;
                        uint _3779 = _3576;
                        uint _3780;
                        vec4 _3805;
                        float _3806;
                        vec4 _3821;
                        vec3 _3833;
                        vec4 _3848;
                        vec4 _3863;
                        float _3909;
                        bool _3910;
                        for (;;)
                        {
                            uint _3790 = ((_3567 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3779));
                            _3780 = (_3779 + 4294967295u) & _3779;
                            uint _3792 = _3790 * 40u;
                            _3805 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3792)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3792 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3792 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3792 + 3u)).x));
                            _3806 = _3805.w;
                            uint _3808 = (_3790 * 40u) + 4u;
                            _3821 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3808)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3808 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3808 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3808 + 3u)).x));
                            uint _3823 = (_3790 * 40u) + 8u;
                            _3833 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3823)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3823 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3823 + 2u)).x));
                            uint _3835 = (_3790 * 40u) + 16u;
                            _3848 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3835)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3835 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3835 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3835 + 3u)).x));
                            uint _3850 = (_3790 * 40u) + 20u;
                            _3863 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3850)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3850 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3850 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3850 + 3u)).x));
                            uint _3865 = (_3790 * 40u) + 24u;
                            vec4 _3878 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3865)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3865 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3865 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3865 + 3u)).x));
                            uint _3884 = (_3790 * 40u) + 28u;
                            vec4 _3897 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3884)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3884 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3884 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3884 + 3u)).x));
                            _3909 = fma(_2310, _3897.z, fma(_2309, _3897.y, _3897.x * _2308)) + _3897.w;
                            _3910 = !((fma(_2310, _3878.z, fma(_2309, _3878.y, _3878.x * _2308)) + _3878.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3910)
                            {
                                float _3937 = _3805.x - _2308;
                                float _3938 = _3805.y - _2309;
                                float _3939 = _3805.z - _2310;
                                float _3940 = dot(vec3(_3937, _3938, _3939), vec3(_3937, _3938, _3939));
                                float _3943 = inversesqrt(_3940);
                                float _3944 = _3943 * _3937;
                                float _3945 = _3943 * _3938;
                                float _3946 = _3943 * _3939;
                                float _3950 = 1.0 - (_3940 / (_3806 * _3806));
                                float _5157 = isnan(0.0) ? _3950 : (isnan(_3950) ? 0.0 : max(_3950, 0.0));
                                float _3951 = isnan(1.0) ? _5157 : (isnan(_5157) ? 1.0 : min(_5157, 1.0));
                                float _3955 = sqrt(_3940) * _3821.w;
                                float _3957 = 1.39999997615814208984375 / (_3955 + 1.39999997615814208984375);
                                float _3958 = _3957 * _3957;
                                float _3961 = ((1.0 - _3958) * dot(vec3(_3944, _3945, _3946), vec3(_1196, _1199, _1202))) + _3958;
                                float _3964 = _3955 * _3955;
                                float _3968 = (fma(_2310, _3848.z, fma(_2309, _3848.y, _3848.x * _2308)) + _3848.w) / _3909;
                                float _3969 = (fma(_2310, _3863.z, fma(_2309, _3863.y, _3863.x * _2308)) + _3863.w) / _3909;
                                float _3973 = 1.0 - dot(vec2(_3968, _3969), vec2(_3968, _3969));
                                float _5173 = isnan(0.0) ? _3973 : (isnan(_3973) ? 0.0 : max(_3973, 0.0));
                                float _3974 = isnan(1.0) ? _5173 : (isnan(_5173) ? 1.0 : min(_5173, 1.0));
                                float _3975 = _3974 * (((isnan(0.0) ? _3961 : (isnan(_3961) ? 0.0 : max(_3961, 0.0))) * _3951) / ((_3964 * 0.699999988079071044921875) + 1.0));
                                float _3987 = exp2(log2(1.0 / ((_3964 * 3.5) + 5.0)) * 0.25);
                                float _3988 = 1.0 - _1256;
                                float _3995 = sqrt(1.0 - ((1.0 - (_3988 * _3988)) * (1.0 - (_3987 * _3987))));
                                float _3996 = _3995 * _3995;
                                float _3997 = _3996 * _3996;
                                float _3998 = _3944 - _3448;
                                float _3999 = _3945 - _3449;
                                float _4000 = _3946 - _3450;
                                float _4004 = inversesqrt(dot(vec3(_3998, _3999, _4000), vec3(_3998, _3999, _4000)));
                                float _4008 = dot(vec3(_1196, _1199, _1202), vec3((-0.0) - _3448, (-0.0) - _3449, (-0.0) - _3450));
                                float _5184 = isnan(0.0) ? _4008 : (isnan(_4008) ? 0.0 : max(_4008, 0.0));
                                float _4011 = isnan(1.0) ? _5184 : (isnan(_5184) ? 1.0 : min(_5184, 1.0));
                                float _4012 = dot(vec3(_1196, _1199, _1202), vec3(_4004 * _3998, _4004 * _3999, _4004 * _4000));
                                float _5195 = isnan(0.0) ? _4012 : (isnan(_4012) ? 0.0 : max(_4012, 0.0));
                                float _4015 = isnan(1.0) ? _5195 : (isnan(_5195) ? 1.0 : min(_5195, 1.0));
                                float _4019 = ((_4015 * _4015) * (_3997 + (-1.0))) + 1.0;
                                float _4020 = _3957 * _3996;
                                float _4021 = _4020 * _4020;
                                float _4027 = ((1.0 - _4021) * dot(vec3(_1196, _1199, _1202), vec3(_3944, _3945, _3946))) + _4021;
                                float _5206 = isnan(0.0) ? _4027 : (isnan(_4027) ? 0.0 : max(_4027, 0.0));
                                float _4028 = isnan(1.0) ? _5206 : (isnan(_5206) ? 1.0 : min(_5206, 1.0));
                                float _4029 = 1.0 - _3996;
                                float _4039 = (0.5 / (((_4028 * ((_4011 * _4029) + _3996)) + 9.9999999392252902907785028219223e-09) + (((_4028 * _4029) + _3996) * _4011))) * _4028;
                                float _5217 = isnan(0.0) ? _4039 : (isnan(_4039) ? 0.0 : max(_4039, 0.0));
                                float _4049 = (_3974 * _3951) * (((_3997 * 3.1415927410125732421875) * (isnan(1.0) ? _5217 : (isnan(_5217) ? 1.0 : min(_5217, 1.0)))) / ((_4019 * _4019) * ((_3964 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3975 * _3821.y;
                                frontier_phi_78_pred_1 = _3975 * _3821.x;
                                frontier_phi_78_pred_2 = _4049 * _3833.z;
                                frontier_phi_78_pred_3 = _4049 * _3833.y;
                                frontier_phi_78_pred_4 = _4049 * _3833.x;
                                frontier_phi_78_pred_5 = _3975 * _3821.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _4057 = frontier_phi_78_pred;
                            _4056 = frontier_phi_78_pred_1;
                            _4055 = frontier_phi_78_pred_2;
                            _4054 = frontier_phi_78_pred_3;
                            _4053 = frontier_phi_78_pred_4;
                            _4058 = frontier_phi_78_pred_5;
                            _3763 = _4056 + _3776;
                            _3764 = _4057 + _3777;
                            _3765 = _4058 + _3778;
                            _3760 = _4053 + _3773;
                            _3761 = _4054 + _3774;
                            _3762 = _4055 + _3775;
                            if (_3780 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3773 = _3760;
                                _3774 = _3761;
                                _3775 = _3762;
                                _3776 = _3763;
                                _3777 = _3764;
                                _3778 = _3765;
                                _3779 = _3780;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3765;
                        frontier_phi_72_pred_1 = _3764;
                        frontier_phi_72_pred_2 = _3763;
                        frontier_phi_72_pred_3 = _3762;
                        frontier_phi_72_pred_4 = _3761;
                        frontier_phi_72_pred_5 = _3760;
                    }
                    _3433 = frontier_phi_72_pred;
                    _3431 = frontier_phi_72_pred_1;
                    _3429 = frontier_phi_72_pred_2;
                    _3427 = frontier_phi_72_pred_3;
                    _3425 = frontier_phi_72_pred_4;
                    _3423 = frontier_phi_72_pred_5;
                    uint _3568 = _3567 + 1u;
                    if (_3568 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3561 = _3423;
                        _3562 = _3425;
                        _3563 = _3427;
                        _3564 = _3429;
                        _3565 = _3431;
                        _3566 = _3433;
                        _3567 = _3568;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3433;
                frontier_phi_60_61_ladder_1 = _3431;
                frontier_phi_60_61_ladder_2 = _3427;
                frontier_phi_60_61_ladder_3 = _3425;
                frontier_phi_60_61_ladder_4 = _3423;
                frontier_phi_60_61_ladder_5 = _3429;
            }
            else
            {
                frontier_phi_60_61_ladder = _3320;
                frontier_phi_60_61_ladder_1 = _3318;
                frontier_phi_60_61_ladder_2 = _3314;
                frontier_phi_60_61_ladder_3 = _3312;
                frontier_phi_60_61_ladder_4 = _3310;
                frontier_phi_60_61_ladder_5 = _3316;
            }
            _3422 = frontier_phi_60_61_ladder_4;
            _3424 = frontier_phi_60_61_ladder_3;
            _3426 = frontier_phi_60_61_ladder_2;
            _3428 = frontier_phi_60_61_ladder_5;
            _3430 = frontier_phi_60_61_ladder_1;
            _3432 = frontier_phi_60_61_ladder;
        }
        float _3437 = isnan(1.0) ? _1240 : (isnan(_1240) ? 1.0 : min(_1240, 1.0));
        _3243 = (_3437 * _3428) + _2774;
        _3245 = (_3437 * _3430) + _2776;
        _3247 = (_3437 * _3432) + _2778;
        _3249 = ((_3422 * 0.039999999105930328369140625) * _3437) + _3097;
        _3251 = ((_3424 * 0.039999999105930328369140625) * _3437) + _3099;
        _3253 = ((_3426 * 0.039999999105930328369140625) * _3437) + _3101;
    }
    else
    {
        _3243 = _2774;
        _3245 = _2776;
        _3247 = _2778;
        _3249 = _3097;
        _3251 = _3099;
        _3253 = _3101;
    }
    float _5233 = isnan(0.0) ? _1225 : (isnan(_1225) ? 0.0 : max(_1225, 0.0));
    float _5244 = isnan(0.0) ? _1226 : (isnan(_1226) ? 0.0 : max(_1226, 0.0));
    float _5255 = isnan(0.0) ? _1227 : (isnan(_1227) ? 0.0 : max(_1227, 0.0));
    uint _3273 = _291 + 6u;
    float _3281 = _1177 / cbSceneParam._m0[86u].x;
    float _3282 = _1178 / cbSceneParam._m0[86u].y;
    vec4 _3296 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3281, _3282, (log2((isnan(cbSceneParam._m0[77u].w) ? _1112 : (isnan(_1112) ? cbSceneParam._m0[77u].w : min(_1112, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3298 = _3296.x;
    float _3299 = _3296.y;
    float _3300 = _3296.z;
    float _3301 = _3296.w;
    float _3372;
    float _3374;
    float _3376;
    float _3378;
    if (_1112 > cbSceneParam._m0[78u].w)
    {
        float _3335 = isnan(_1112) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1112 : min(cbSceneParam._m0[80u].w, _1112));
        float _3336 = _3335 / _1112;
        float _3347 = _3336 * _1162;
        float _3348 = _1163 * _3336;
        float _3349 = (-0.0) - _3348;
        float _3350 = _3336 * _1164;
        float _3352 = (cbSceneParam._m0[77u].w * _3349) / _3335;
        float _3353 = _3352 + cbSceneParam._m0[79u].w;
        float _3354 = cbSceneParam._m0[79u].w - _3348;
        float _3360 = sqrt(((_3347 * _3347) + (_3348 * _3348)) + (_3350 * _3350));
        float _3363 = (1.0 - (cbSceneParam._m0[77u].w / _3335)) * _3360;
        float _3368 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3370 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3523;
        if (abs((_3349 - _3352) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3523 = ((((_3353 > 0.0) ? exp2(_3368 * _3353) : (2.0 - exp2(_3370 * _3353))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3363;
        }
        else
        {
            float _3483 = 1.0 / cbSceneParam._m0[80u].x;
            float _3484 = isnan(_3354) ? _3353 : (isnan(_3353) ? _3354 : max(_3353, _3354));
            float _3485 = isnan(_3354) ? _3353 : (isnan(_3353) ? _3354 : min(_3353, _3354));
            float _3494 = isnan(0.0) ? _3484 : (isnan(_3484) ? 0.0 : min(_3484, 0.0));
            float _3495 = isnan(0.0) ? _3485 : (isnan(_3485) ? 0.0 : min(_3485, 0.0));
            _3523 = ((abs(_3360 / _3349) * cbSceneParam._m0[80u].y) * ((((_3494 - _3495) * 2.0) - ((exp2(_3368 * (isnan(0.0) ? _3484 : (isnan(_3484) ? 0.0 : max(_3484, 0.0)))) - exp2(_3368 * (isnan(0.0) ? _3485 : (isnan(_3485) ? 0.0 : max(_3485, 0.0))))) * _3483)) - ((exp2(_3370 * _3494) - exp2(_3370 * _3495)) * _3483))) + (_3363 * cbSceneParam._m0[80u].z);
        }
        vec4 _3525 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3281, _3282, 1.0), 0.0);
        float _3534 = exp2((_3523 * (-1.44269502162933349609375)) * (1.0 - _3525.w));
        float _3535 = log2(_3534);
        float _3551 = log2(_3301);
        _3372 = (exp2(_3551 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3535 * cbSceneParam._m0[78u].x)) * _3525.x) / cbSceneParam._m0[78u].x)) + _3298;
        _3374 = (exp2(_3551 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3535 * cbSceneParam._m0[78u].y)) * _3525.y) / cbSceneParam._m0[78u].y)) + _3299;
        _3376 = (exp2(_3551 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3535 * cbSceneParam._m0[78u].z)) * _3525.z) / cbSceneParam._m0[78u].z)) + _3300;
        _3378 = _3534 * _3301;
    }
    else
    {
        _3372 = _3298;
        _3374 = _3299;
        _3376 = _3300;
        _3378 = _3301;
    }
    float _3390 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3391 = _3390 == 3.0;
    float _3392 = log2(_3378);
    float _3399 = exp2(_3392 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5233 : (isnan(_5233) ? 1.0 : min(_5233, 1.0))) * (_3243 + ((isnan(0.0) ? _1964 : (isnan(_1964) ? 0.0 : max(_1964, 0.0))) * _1240))) + ((_3249 + ((isnan(0.0) ? _2255 : (isnan(_2255) ? 0.0 : max(_2255, 0.0))) * _2043)) * cbPerFrame._m0[3u].x));
    float _3400 = exp2(_3392 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5244 : (isnan(_5244) ? 1.0 : min(_5244, 1.0))) * (_3245 + ((isnan(0.0) ? _1967 : (isnan(_1967) ? 0.0 : max(_1967, 0.0))) * _1240))) + ((_3251 + ((isnan(0.0) ? _2258 : (isnan(_2258) ? 0.0 : max(_2258, 0.0))) * _2043)) * cbPerFrame._m0[3u].x));
    float _3401 = exp2(_3392 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5255 : (isnan(_5255) ? 1.0 : min(_5255, 1.0))) * (_3247 + ((isnan(0.0) ? _1970 : (isnan(_1970) ? 0.0 : max(_1970, 0.0))) * _1240))) + ((_3253 + ((isnan(0.0) ? _2261 : (isnan(_2261) ? 0.0 : max(_2261, 0.0))) * _2043)) * cbPerFrame._m0[3u].x));
    float _3410 = (_3390 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3410 * (_3391 ? _3399 : (_3399 + (cbSceneParam._m0[72u].w * _3372)));
    SV_Target.y = _3410 * (_3391 ? _3400 : (_3400 + (cbSceneParam._m0[72u].w * _3374)));
    SV_Target.z = _3410 * (_3391 ? _3401 : (_3401 + (cbSceneParam._m0[72u].w * _3376)));
    SV_Target.w = cbInstanceData._m0[_3273].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3273].w;
}


