#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 13) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1392;
float _3751;
float _3752;
float _3753;
float _3754;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _225 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _226 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _227 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _233 = inversesqrt(dot(vec3(_225, _226, _227), vec3(_225, _226, _227)));
    float _240 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _247 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _261 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _263 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _264 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3763 = isnan(0.0) ? _261 : (isnan(_261) ? 0.0 : max(_261, 0.0));
    float _3774 = isnan(0.0) ? _263 : (isnan(_263) ? 0.0 : max(_263, 0.0));
    float _3785 = isnan(0.0) ? _264 : (isnan(_264) ? 0.0 : max(_264, 0.0));
    uint _274 = uint(roundEven(NORMAL.w)) * 13u;
    uint _279 = _274 + 1u;
    uint _283 = _274 + 2u;
    float _292 = sqrt(((cbInstanceData._m0[_279].x * cbInstanceData._m0[_279].x) + (cbInstanceData._m0[_274].x * cbInstanceData._m0[_274].x)) + (cbInstanceData._m0[_283].x * cbInstanceData._m0[_283].x));
    float _293 = _292 * TEXCOORD.z;
    float _294 = _292 * TEXCOORD.w;
    vec4 _307 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _293) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _294) + cbTextureTilingScale._m0[13u].w));
    vec4 _330 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _356 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _361 = _356.x * cbMtdParam._m0[11u].x;
    float _362 = _356.y * cbMtdParam._m0[11u].y;
    float _363 = _356.z * cbMtdParam._m0[11u].z;
    vec4 _382 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _293) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _294) + cbTextureTilingScale._m0[5u].w));
    vec4 _401 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _439 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _441 = _439.x;
    float _453 = dot(vec4(_441, _439.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _470 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _401.x) * 2.0) - ((((_441 - _453) * cbMtdParam._m0[24u].z) + _453) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3796 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _471 = isnan(1.0) ? _3796 : (isnan(_3796) ? 1.0 : min(_3796, 1.0));
    float _478 = (_471 * ((_382.x * cbMtdParam._m0[12u].x) - _361)) + _361;
    float _479 = (_471 * ((_382.y * cbMtdParam._m0[12u].y) - _362)) + _362;
    float _480 = (_471 * ((_382.z * cbMtdParam._m0[12u].z) - _363)) + _363;
    vec4 _497 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _293) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _294) + cbTextureTilingScale._m0[3u].w));
    vec4 _517 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _519 = _517.x;
    float _529 = dot(vec4(_519, _517.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _543 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _401.y) * 2.0) - ((((_519 - _529) * cbMtdParam._m0[24u].z) + _529) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3807 = isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : max(_543, 0.0));
    float _544 = isnan(1.0) ? _3807 : (isnan(_3807) ? 1.0 : min(_3807, 1.0));
    float _551 = (_544 * ((_497.x * cbMtdParam._m0[13u].x) - _478)) + _478;
    float _552 = (_544 * ((_497.y * cbMtdParam._m0[13u].y) - _479)) + _479;
    float _553 = (_544 * ((_497.z * cbMtdParam._m0[13u].z) - _480)) + _480;
    vec4 _571 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _293) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _294) + cbTextureTilingScale._m0[24u].w));
    vec4 _588 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _590 = _588.x;
    float _600 = dot(vec4(_590, _588.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _612 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _401.z) * 2.0) - ((((_590 - _600) * cbMtdParam._m0[24u].z) + _600) * cbMtdParam._m0[20u].z))) + 1.0;
    float _3818 = isnan(0.0) ? _612 : (isnan(_612) ? 0.0 : max(_612, 0.0));
    float _613 = isnan(1.0) ? _3818 : (isnan(_3818) ? 1.0 : min(_3818, 1.0));
    float _623 = (_330.x * cbMtdParam._m0[9u].x) * ((_613 * ((_571.x * cbMtdParam._m0[14u].x) - _551)) + _551);
    float _624 = (_330.y * cbMtdParam._m0[9u].y) * ((_613 * ((_571.y * cbMtdParam._m0[14u].y) - _552)) + _552);
    float _625 = (_330.z * cbMtdParam._m0[9u].z) * ((_613 * ((_571.z * cbMtdParam._m0[14u].z) - _553)) + _553);
    float _629 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _307.x) * _623;
    float _632 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _307.y) * _624;
    float _635 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _307.z) * _625;
    float _643 = (((_623 - _629) * (isnan(1.0) ? _3763 : (isnan(_3763) ? 1.0 : min(_3763, 1.0)))) + _629) * 4.55000019073486328125;
    float _645 = (((_624 - _632) * (isnan(1.0) ? _3774 : (isnan(_3774) ? 1.0 : min(_3774, 1.0)))) + _632) * 4.55000019073486328125;
    float _647 = (((_625 - _635) * (isnan(1.0) ? _3785 : (isnan(_3785) ? 1.0 : min(_3785, 1.0)))) + _635) * 4.55000019073486328125;
    vec4 _659 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _293) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _294) + cbTextureTilingScale._m0[20u].w));
    vec4 _682 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _293) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _294) + cbTextureTilingScale._m0[4u].w));
    vec4 _699 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _701 = _699.x;
    float _702 = _699.y;
    float _703 = _699.z;
    float _710 = ((_682.x - _701) * _471) + _701;
    float _711 = ((_682.y - _702) * _471) + _702;
    float _712 = ((_682.z - _703) * _471) + _703;
    vec4 _724 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _293) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _294) + cbTextureTilingScale._m0[2u].w));
    float _735 = ((_724.x - _710) * _544) + _710;
    float _736 = ((_724.y - _711) * _544) + _711;
    float _737 = ((_724.z - _712) * _544) + _712;
    vec4 _749 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _293) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _294) + cbTextureTilingScale._m0[23u].w));
    float _762 = ((_749.z - _737) * _613) + _737;
    float _765 = ((((_749.x - _735) * _613) + _735) * 2.0) + (-1.0);
    float _766 = ((((_749.y - _736) * _613) + _736) * 2.0) + (-1.0);
    float _767 = dot(vec2(_765, _766), vec2(_765, _766));
    float _3829 = isnan(0.0) ? _767 : (isnan(_767) ? 0.0 : max(_767, 0.0));
    float _772 = sqrt(1.0 - (isnan(1.0) ? _3829 : (isnan(_3829) ? 1.0 : min(_3829, 1.0))));
    vec4 _792 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _804 = (_765 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_659.x * 2.0) + (-1.0)))) + (((_792.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _805 = (_766 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_659.y * 2.0) + (-1.0)))) + (((_792.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _810 = (((_659.z - _762) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _762;
    float _814 = ((_792.z - _810) * cbMtdParam._m0[19u].w) + _810;
    float _816 = cbMtdParam._m0[22u].x + _792.w;
    float _819 = fma(_772, _240 * NORMAL.x, fma(_805, _247 * TANGENT.x, (_233 * _225) * _804));
    float _822 = fma(_772, _240 * NORMAL.y, fma(_805, _247 * TANGENT.y, (_233 * _226) * _804));
    float _825 = fma(_772, _240 * NORMAL.z, fma(_805, _247 * TANGENT.z, (_233 * _227) * _804));
    float _829 = inversesqrt(dot(vec3(_819, _822, _825), vec3(_819, _822, _825)));
    float _830 = _829 * _819;
    float _831 = _829 * _822;
    float _832 = _829 * _825;
    float _3840 = isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0));
    float _833 = isnan(1.0) ? _3840 : (isnan(_3840) ? 1.0 : min(_3840, 1.0));
    float _3851 = isnan(0.0) ? _816 : (isnan(_816) ? 0.0 : max(_816, 0.0));
    float _3862 = isnan(0.0) ? _643 : (isnan(_643) ? 0.0 : max(_643, 0.0));
    float _3873 = isnan(0.0) ? _645 : (isnan(_645) ? 0.0 : max(_645, 0.0));
    float _3884 = isnan(0.0) ? _647 : (isnan(_647) ? 0.0 : max(_647, 0.0));
    float _851 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _892 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _902 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _892);
    float _903 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _892);
    float _904 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _892);
    float _908 = inversesqrt(dot(vec3(_902, _903, _904), vec3(_902, _903, _904)));
    float _909 = _902 * _908;
    float _910 = _903 * _908;
    float _911 = _904 * _908;
    vec4 _916 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _918 = _916.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1072 = sqrt(((_902 * _902) + (_903 * _903)) + (_904 * _904));
        float _1078 = (cbMatDynParam._m0[5u].x * _1072) + cbMatDynParam._m0[5u].y;
        float _3895 = isnan(0.0) ? _1078 : (isnan(_1078) ? 0.0 : max(_1078, 0.0));
        float _1079 = isnan(1.0) ? _3895 : (isnan(_3895) ? 1.0 : min(_3895, 1.0));
        float _1083 = (cbMatDynParam._m0[5u].z * _1072) + cbMatDynParam._m0[5u].w;
        float _3906 = isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3906 : (isnan(_3906) ? 1.0 : min(_3906, 1.0))) - _1079)) + _1079) < ((_918 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _929 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _930 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _948 = fma(_832, cbSceneParam._m0[5u].z, fma(_831, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _830));
    float _951 = fma(_832, cbSceneParam._m0[6u].z, fma(_831, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _830));
    float _954 = fma(_832, cbSceneParam._m0[7u].z, fma(_831, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _830));
    uint _967 = _274 + 9u;
    uint _968 = _967 + uint(cbMatDynParam._m0[0u].w);
    float _974 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3862 : (isnan(_3862) ? 1.0 : min(_3862, 1.0)))) * cbInstanceData._m0[_968].x;
    float _975 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3873 : (isnan(_3873) ? 1.0 : min(_3873, 1.0)))) * cbInstanceData._m0[_968].y;
    float _976 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3884 : (isnan(_3884) ? 1.0 : min(_3884, 1.0)))) * cbInstanceData._m0[_968].z;
    float _3917 = isnan(0.0) ? _974 : (isnan(_974) ? 0.0 : max(_974, 0.0));
    float _977 = isnan(1.0) ? _3917 : (isnan(_3917) ? 1.0 : min(_3917, 1.0));
    float _3928 = isnan(0.0) ? _975 : (isnan(_975) ? 0.0 : max(_975, 0.0));
    float _978 = isnan(1.0) ? _3928 : (isnan(_3928) ? 1.0 : min(_3928, 1.0));
    float _3939 = isnan(0.0) ? _976 : (isnan(_976) ? 0.0 : max(_976, 0.0));
    float _979 = isnan(1.0) ? _3939 : (isnan(_3939) ? 1.0 : min(_3939, 1.0));
    vec4 _988 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _929, cbSceneParam._m0[86u].y * _930));
    float _992 = ((isnan(1.0) ? _3851 : (isnan(_3851) ? 1.0 : min(_3851, 1.0))) * TEXCOORD_5.w) * _988.x;
    float _993 = dot(vec3(_830, _831, _832), vec3(_909, _910, _911));
    float _996 = _993 * 2.0;
    float _1000 = (_996 * _830) - _909;
    float _1001 = (_996 * _831) - _910;
    float _1002 = (_996 * _832) - _911;
    float _1006 = abs(dot(vec3(_909, _910, _911), vec3(_830, _831, _832)));
    float _3950 = isnan(0.0) ? _1006 : (isnan(_1006) ? 0.0 : max(_1006, 0.0));
    float _1008 = sqrt(_833);
    float _1021 = exp2((_1008 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3950 : (isnan(_3950) ? 1.0 : min(_3950, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1008 * 3.0));
    float _1053 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1057 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1061 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1391;
    float _1393;
    float _1394;
    float _1395;
    float _1396;
    float _1397;
    float _1398;
    float _1399;
    float _1400;
    float _1401;
    float _1402;
    float _1403;
    float _1404;
    float _1405;
    float _1406;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1116 = fma(_1061, cbModelParam._m0[26u].z, fma(_1057, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1053));
        float _1120 = fma(_1061, cbModelParam._m0[27u].z, fma(_1057, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1053));
        float _1124 = fma(_1061, cbModelParam._m0[28u].z, fma(_1057, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1053));
        float _1149 = _1053 + _830;
        float _1150 = _1057 + _831;
        float _1151 = _1061 + _832;
        float _1161 = fma(_1151, cbModelParam._m0[26u].z, fma(_1150, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1149)) - _1116;
        float _1162 = fma(_1151, cbModelParam._m0[27u].z, fma(_1150, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1149)) - _1120;
        float _1163 = fma(_1151, cbModelParam._m0[28u].z, fma(_1150, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1149)) - _1124;
        float _1167 = inversesqrt(dot(vec3(_1161, _1162, _1163), vec3(_1161, _1162, _1163)));
        float _1180 = ((_1167 * _1161) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1116 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1181 = ((_1167 * _1162) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1120 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1182 = ((_1167 * _1163) / cbModelParam._m0[34u].z) + ((((((_1124 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1185 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1180, _1181, _1182), 0.0);
        vec4 _1192 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1180, _1181, _1182), 0.0);
        vec4 _1199 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1180, _1181, _1182), 0.0);
        vec4 _1206 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1180, _1181, _1182), 0.0);
        float _1219 = exp2((_1185.w + (-0.5)) * 20.0) * 2.0;
        float _1220 = _1219 * (_1185.x + (-0.5));
        float _1221 = _1219 * (_1185.y + (-0.5));
        float _1222 = _1219 * (_1185.z + (-0.5));
        float _1229 = exp2((_1192.w + (-0.5)) * 20.0) * 2.0;
        float _1230 = _1229 * (_1192.x + (-0.5));
        float _1231 = _1229 * (_1192.y + (-0.5));
        float _1232 = _1229 * (_1192.z + (-0.5));
        float _1239 = exp2((_1199.w + (-0.5)) * 20.0) * 2.0;
        float _1240 = _1239 * (_1199.x + (-0.5));
        float _1241 = _1239 * (_1199.y + (-0.5));
        float _1242 = _1239 * (_1199.z + (-0.5));
        float _1249 = exp2((_1206.w + (-0.5)) * 20.0) * 2.0;
        float _1250 = _1249 * (_1206.x + (-0.5));
        float _1251 = _1249 * (_1206.y + (-0.5));
        float _1252 = _1249 * (_1206.z + (-0.5));
        float _1253 = isnan(0.0) ? _1250 : (isnan(_1250) ? 0.0 : max(_1250, 0.0));
        float _1254 = isnan(0.0) ? _1251 : (isnan(_1251) ? 0.0 : max(_1251, 0.0));
        float _1255 = isnan(0.0) ? _1252 : (isnan(_1252) ? 0.0 : max(_1252, 0.0));
        float _1256 = _1220 * 0.5;
        float _1257 = _1230 * 0.5;
        float _1258 = _1240 * 0.5;
        float _1259 = dot(vec3(_1256, _1257, _1258), vec3(_1256, _1257, _1258));
        float _1264 = (_1259 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1259);
        float _1273 = (dot(vec3(_830, _831, _832), vec3(_1264 * _1256, _1264 * _1257, _1264 * _1258)) + 1.0) * 0.5;
        float _3976 = isnan(0.0) ? _1273 : (isnan(_1273) ? 0.0 : max(_1273, 0.0));
        float _1283 = sqrt(((_1257 * _1257) + (_1256 * _1256)) + (_1258 * _1258)) / (_1253 + 9.9999997473787516355514526367188e-06);
        float _3987 = isnan(0.0) ? _1283 : (isnan(_1283) ? 0.0 : max(_1283, 0.0));
        float _1284 = isnan(1.0) ? _3987 : (isnan(_3987) ? 1.0 : min(_3987, 1.0));
        float _1285 = _1284 * 2.0;
        float _1289 = (1.0 - _1284) / (_1284 + 1.0);
        float _3998 = isnan(0.0) ? _1289 : (isnan(_1289) ? 0.0 : max(_1289, 0.0));
        float _1290 = isnan(1.0) ? _3998 : (isnan(_3998) ? 1.0 : min(_3998, 1.0));
        float _1299 = ((((1.0 - _1290) * (_1285 + 2.0)) * exp2(log2(isnan(1.0) ? _3976 : (isnan(_3976) ? 1.0 : min(_3976, 1.0))) * (_1285 + 1.0))) + _1290) * _1253;
        float _1300 = _1221 * 0.5;
        float _1301 = _1231 * 0.5;
        float _1302 = _1241 * 0.5;
        float _1303 = dot(vec3(_1300, _1301, _1302), vec3(_1300, _1301, _1302));
        float _1308 = (_1303 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1303);
        float _1316 = (dot(vec3(_830, _831, _832), vec3(_1308 * _1300, _1308 * _1301, _1308 * _1302)) + 1.0) * 0.5;
        float _4009 = isnan(0.0) ? _1316 : (isnan(_1316) ? 0.0 : max(_1316, 0.0));
        float _1325 = sqrt(((_1301 * _1301) + (_1300 * _1300)) + (_1302 * _1302)) / (_1254 + 9.9999997473787516355514526367188e-06);
        float _4020 = isnan(0.0) ? _1325 : (isnan(_1325) ? 0.0 : max(_1325, 0.0));
        float _1326 = isnan(1.0) ? _4020 : (isnan(_4020) ? 1.0 : min(_4020, 1.0));
        float _1327 = _1326 * 2.0;
        float _1331 = (1.0 - _1326) / (_1326 + 1.0);
        float _4031 = isnan(0.0) ? _1331 : (isnan(_1331) ? 0.0 : max(_1331, 0.0));
        float _1332 = isnan(1.0) ? _4031 : (isnan(_4031) ? 1.0 : min(_4031, 1.0));
        float _1341 = ((((1.0 - _1332) * (_1327 + 2.0)) * exp2(log2(isnan(1.0) ? _4009 : (isnan(_4009) ? 1.0 : min(_4009, 1.0))) * (_1327 + 1.0))) + _1332) * _1254;
        float _1342 = _1222 * 0.5;
        float _1343 = _1232 * 0.5;
        float _1344 = _1242 * 0.5;
        float _1345 = dot(vec3(_1342, _1343, _1344), vec3(_1342, _1343, _1344));
        float _1350 = (_1345 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1345);
        float _1358 = (dot(vec3(_830, _831, _832), vec3(_1350 * _1342, _1350 * _1343, _1350 * _1344)) + 1.0) * 0.5;
        float _4042 = isnan(0.0) ? _1358 : (isnan(_1358) ? 0.0 : max(_1358, 0.0));
        float _1367 = sqrt(((_1343 * _1343) + (_1342 * _1342)) + (_1344 * _1344)) / (_1255 + 9.9999997473787516355514526367188e-06);
        float _4053 = isnan(0.0) ? _1367 : (isnan(_1367) ? 0.0 : max(_1367, 0.0));
        float _1368 = isnan(1.0) ? _4053 : (isnan(_4053) ? 1.0 : min(_4053, 1.0));
        float _1369 = _1368 * 2.0;
        float _1373 = (1.0 - _1368) / (_1368 + 1.0);
        float _4064 = isnan(0.0) ? _1373 : (isnan(_1373) ? 0.0 : max(_1373, 0.0));
        float _1374 = isnan(1.0) ? _4064 : (isnan(_4064) ? 1.0 : min(_4064, 1.0));
        float _1383 = ((((1.0 - _1374) * (_1369 + 2.0)) * exp2(log2(isnan(1.0) ? _4042 : (isnan(_4042) ? 1.0 : min(_4042, 1.0))) * (_1369 + 1.0))) + _1374) * _1255;
        _1391 = _1222;
        _1393 = _1221;
        _1394 = _1220;
        _1395 = _1232;
        _1396 = _1231;
        _1397 = _1230;
        _1398 = _1242;
        _1399 = _1241;
        _1400 = _1240;
        _1401 = _1255;
        _1402 = _1254;
        _1403 = _1253;
        _1404 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1299 : (isnan(_1299) ? 0.0 : max(_1299, 0.0)));
        _1405 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1341 : (isnan(_1341) ? 0.0 : max(_1341, 0.0)));
        _1406 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0)));
    }
    else
    {
        _1391 = _1392;
        _1393 = _1392;
        _1394 = _1392;
        _1395 = _1392;
        _1396 = _1392;
        _1397 = _1392;
        _1398 = _1392;
        _1399 = _1392;
        _1400 = _1392;
        _1401 = _1392;
        _1402 = _1392;
        _1403 = _1392;
        _1404 = 0.0;
        _1405 = 0.0;
        _1406 = 0.0;
    }
    float _1701;
    float _1702;
    float _1703;
    float _1704;
    float _1705;
    float _1706;
    float _1707;
    float _1708;
    float _1709;
    float _1710;
    float _1711;
    float _1712;
    float _1713;
    float _1714;
    float _1715;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1432 = fma(_1061, cbModelParam._m0[30u].z, fma(_1057, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1053));
        float _1436 = fma(_1061, cbModelParam._m0[31u].z, fma(_1057, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1053));
        float _1440 = fma(_1061, cbModelParam._m0[32u].z, fma(_1057, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1053));
        float _1463 = _1053 + _830;
        float _1464 = _1057 + _831;
        float _1465 = _1061 + _832;
        float _1475 = fma(_1465, cbModelParam._m0[30u].z, fma(_1464, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1463)) - _1432;
        float _1476 = fma(_1465, cbModelParam._m0[31u].z, fma(_1464, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1463)) - _1436;
        float _1477 = fma(_1465, cbModelParam._m0[32u].z, fma(_1464, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1463)) - _1440;
        float _1481 = inversesqrt(dot(vec3(_1475, _1476, _1477), vec3(_1475, _1476, _1477)));
        float _1494 = ((_1481 * _1475) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1432 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1495 = ((_1481 * _1476) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1436 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1496 = ((_1481 * _1477) / cbModelParam._m0[35u].z) + ((((((_1440 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1498 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1494, _1495, _1496), 0.0);
        vec4 _1505 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1494, _1495, _1496), 0.0);
        vec4 _1512 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1494, _1495, _1496), 0.0);
        vec4 _1519 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1494, _1495, _1496), 0.0);
        float _1531 = exp2((_1498.w + (-0.5)) * 20.0) * 2.0;
        float _1532 = _1531 * (_1498.x + (-0.5));
        float _1533 = _1531 * (_1498.y + (-0.5));
        float _1534 = _1531 * (_1498.z + (-0.5));
        float _1541 = exp2((_1505.w + (-0.5)) * 20.0) * 2.0;
        float _1542 = _1541 * (_1505.x + (-0.5));
        float _1543 = _1541 * (_1505.y + (-0.5));
        float _1544 = _1541 * (_1505.z + (-0.5));
        float _1551 = exp2((_1512.w + (-0.5)) * 20.0) * 2.0;
        float _1552 = _1551 * (_1512.x + (-0.5));
        float _1553 = _1551 * (_1512.y + (-0.5));
        float _1554 = _1551 * (_1512.z + (-0.5));
        float _1561 = exp2((_1519.w + (-0.5)) * 20.0) * 2.0;
        float _1562 = _1561 * (_1519.x + (-0.5));
        float _1563 = _1561 * (_1519.y + (-0.5));
        float _1564 = _1561 * (_1519.z + (-0.5));
        float _1565 = isnan(0.0) ? _1562 : (isnan(_1562) ? 0.0 : max(_1562, 0.0));
        float _1566 = isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0));
        float _1567 = isnan(0.0) ? _1564 : (isnan(_1564) ? 0.0 : max(_1564, 0.0));
        float _1568 = _1532 * 0.5;
        float _1569 = _1542 * 0.5;
        float _1570 = _1552 * 0.5;
        float _1571 = dot(vec3(_1568, _1569, _1570), vec3(_1568, _1569, _1570));
        float _1576 = (_1571 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1571);
        float _1584 = (dot(vec3(_830, _831, _832), vec3(_1576 * _1568, _1576 * _1569, _1576 * _1570)) + 1.0) * 0.5;
        float _4105 = isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0));
        float _1593 = sqrt(((_1569 * _1569) + (_1568 * _1568)) + (_1570 * _1570)) / (_1565 + 9.9999997473787516355514526367188e-06);
        float _4116 = isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : max(_1593, 0.0));
        float _1594 = isnan(1.0) ? _4116 : (isnan(_4116) ? 1.0 : min(_4116, 1.0));
        float _1595 = _1594 * 2.0;
        float _1599 = (1.0 - _1594) / (_1594 + 1.0);
        float _4127 = isnan(0.0) ? _1599 : (isnan(_1599) ? 0.0 : max(_1599, 0.0));
        float _1600 = isnan(1.0) ? _4127 : (isnan(_4127) ? 1.0 : min(_4127, 1.0));
        float _1609 = ((((1.0 - _1600) * (_1595 + 2.0)) * exp2(log2(isnan(1.0) ? _4105 : (isnan(_4105) ? 1.0 : min(_4105, 1.0))) * (_1595 + 1.0))) + _1600) * _1565;
        float _1610 = _1533 * 0.5;
        float _1611 = _1543 * 0.5;
        float _1612 = _1553 * 0.5;
        float _1613 = dot(vec3(_1610, _1611, _1612), vec3(_1610, _1611, _1612));
        float _1618 = (_1613 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1613);
        float _1626 = (dot(vec3(_830, _831, _832), vec3(_1618 * _1610, _1618 * _1611, _1618 * _1612)) + 1.0) * 0.5;
        float _4138 = isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0));
        float _1635 = sqrt(((_1611 * _1611) + (_1610 * _1610)) + (_1612 * _1612)) / (_1566 + 9.9999997473787516355514526367188e-06);
        float _4149 = isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0));
        float _1636 = isnan(1.0) ? _4149 : (isnan(_4149) ? 1.0 : min(_4149, 1.0));
        float _1637 = _1636 * 2.0;
        float _1641 = (1.0 - _1636) / (_1636 + 1.0);
        float _4160 = isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0));
        float _1642 = isnan(1.0) ? _4160 : (isnan(_4160) ? 1.0 : min(_4160, 1.0));
        float _1651 = ((((1.0 - _1642) * (_1637 + 2.0)) * exp2(log2(isnan(1.0) ? _4138 : (isnan(_4138) ? 1.0 : min(_4138, 1.0))) * (_1637 + 1.0))) + _1642) * _1566;
        float _1652 = _1534 * 0.5;
        float _1653 = _1544 * 0.5;
        float _1654 = _1554 * 0.5;
        float _1655 = dot(vec3(_1652, _1653, _1654), vec3(_1652, _1653, _1654));
        float _1660 = (_1655 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1655);
        float _1668 = (dot(vec3(_830, _831, _832), vec3(_1660 * _1652, _1660 * _1653, _1660 * _1654)) + 1.0) * 0.5;
        float _4171 = isnan(0.0) ? _1668 : (isnan(_1668) ? 0.0 : max(_1668, 0.0));
        float _1677 = sqrt(((_1653 * _1653) + (_1652 * _1652)) + (_1654 * _1654)) / (_1567 + 9.9999997473787516355514526367188e-06);
        float _4182 = isnan(0.0) ? _1677 : (isnan(_1677) ? 0.0 : max(_1677, 0.0));
        float _1678 = isnan(1.0) ? _4182 : (isnan(_4182) ? 1.0 : min(_4182, 1.0));
        float _1679 = _1678 * 2.0;
        float _1683 = (1.0 - _1678) / (_1678 + 1.0);
        float _4193 = isnan(0.0) ? _1683 : (isnan(_1683) ? 0.0 : max(_1683, 0.0));
        float _1684 = isnan(1.0) ? _4193 : (isnan(_4193) ? 1.0 : min(_4193, 1.0));
        float _1693 = ((((1.0 - _1684) * (_1679 + 2.0)) * exp2(log2(isnan(1.0) ? _4171 : (isnan(_4171) ? 1.0 : min(_4171, 1.0))) * (_1679 + 1.0))) + _1684) * _1567;
        _1701 = _1534;
        _1702 = _1533;
        _1703 = _1532;
        _1704 = _1544;
        _1705 = _1543;
        _1706 = _1542;
        _1707 = _1554;
        _1708 = _1553;
        _1709 = _1552;
        _1710 = _1567;
        _1711 = _1566;
        _1712 = _1565;
        _1713 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0)));
        _1714 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0)));
        _1715 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1693 : (isnan(_1693) ? 0.0 : max(_1693, 0.0)));
    }
    else
    {
        _1701 = _1392;
        _1702 = _1392;
        _1703 = _1392;
        _1704 = _1392;
        _1705 = _1392;
        _1706 = _1392;
        _1707 = _1392;
        _1708 = _1392;
        _1709 = _1392;
        _1710 = _1392;
        _1711 = _1392;
        _1712 = _1392;
        _1713 = 0.0;
        _1714 = 0.0;
        _1715 = 0.0;
    }
    float _1725 = (cbModelParam._m0[1u].x * (_1713 - _1404)) + _1404;
    float _1726 = (cbModelParam._m0[1u].x * (_1714 - _1405)) + _1405;
    float _1727 = (cbModelParam._m0[1u].x * (_1715 - _1406)) + _1406;
    float _1748 = fma(_1727, cbSceneParam._m0[89u].z, fma(_1726, cbSceneParam._m0[89u].y, _1725 * cbSceneParam._m0[89u].x));
    float _1751 = fma(_1727, cbSceneParam._m0[90u].z, fma(_1726, cbSceneParam._m0[90u].y, _1725 * cbSceneParam._m0[90u].x));
    float _1754 = fma(_1727, cbSceneParam._m0[91u].z, fma(_1726, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1725));
    float _1769 = _1000 * 0.5;
    float _1770 = _1001 * 0.5;
    float _1771 = _1002 * 0.5;
    float _1772 = dot(vec4(_1769, _1770, _1771, 1.0), vec4(_1703, _1706, _1709, _1712));
    float _1775 = dot(vec4(_1769, _1770, _1771, 1.0), vec4(_1702, _1705, _1708, _1711));
    float _1778 = dot(vec4(_1769, _1770, _1771, 1.0), vec4(_1701, _1704, _1707, _1710));
    float _1812;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1785 = dot(vec4(_1769, _1770, _1771, 1.0), vec4(_1391, _1395, _1398, _1401));
        float _1789 = dot(vec4(_1769, _1770, _1771, 1.0), vec4(_1393, _1396, _1399, _1402));
        float _1793 = dot(vec4(_1769, _1770, _1771, 1.0), vec4(_1394, _1397, _1400, _1403));
        float _1800 = dot(vec4(cbModelParam._m0[39u]), vec4(_1769, _1770, _1771, 1.0));
        _1812 = dot(vec3(isnan(0.0) ? _1793 : (isnan(_1793) ? 0.0 : max(_1793, 0.0)), isnan(0.0) ? _1789 : (isnan(_1789) ? 0.0 : max(_1789, 0.0)), isnan(0.0) ? _1785 : (isnan(_1785) ? 0.0 : max(_1785, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1800) ? 0.0 : (isnan(0.0) ? _1800 : max(0.0, _1800))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1812 = 1.0;
    }
    float _1823;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1814 = dot(vec4(cbModelParam._m0[40u]), vec4(_1769, _1770, _1771, 1.0));
        _1823 = dot(vec3(isnan(0.0) ? _1772 : (isnan(_1772) ? 0.0 : max(_1772, 0.0)), isnan(0.0) ? _1775 : (isnan(_1775) ? 0.0 : max(_1775, 0.0)), isnan(0.0) ? _1778 : (isnan(_1778) ? 0.0 : max(_1778, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1814) ? 0.0 : (isnan(0.0) ? _1814 : max(0.0, _1814))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1823 = 1.0;
    }
    float _1827 = (_1823 * cbModelParam._m0[1u].x) + (_1812 * (1.0 - cbModelParam._m0[1u].x));
    float _1837 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _833);
    float _1838 = isnan(_1837) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1837 : min(cbModelParam._m0[25u].z, _1837));
    float _1919;
    float _1921;
    float _1923;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1886 = fma(_1061, cbModelParam._m0[13u].z, fma(_1057, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1053)) + cbModelParam._m0[13u].w;
        float _1890 = fma(_1061, cbModelParam._m0[14u].z, fma(_1057, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1053)) + cbModelParam._m0[14u].w;
        float _1894 = fma(_1061, cbModelParam._m0[15u].z, fma(_1057, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1053)) + cbModelParam._m0[15u].w;
        float _1897 = fma(_1002, cbModelParam._m0[13u].z, fma(_1001, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1000));
        float _1900 = fma(_1002, cbModelParam._m0[14u].z, fma(_1001, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1000));
        float _1903 = fma(_1002, cbModelParam._m0[15u].z, fma(_1001, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1000));
        float _1931;
        if (_1897 > 0.0)
        {
            _1931 = abs((1.0 - _1886) / _1897);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1897 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1886 + 1.0) / _1897);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1931 = frontier_phi_17_15_ladder;
        }
        float _2133;
        if (_1900 > 0.0)
        {
            _2133 = abs((1.0 - _1890) / _1900);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1900 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1890 + 1.0) / _1900);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2133 = frontier_phi_26_22_ladder;
        }
        float _2376;
        if (_1903 > 0.0)
        {
            _2376 = abs((1.0 - _1894) / _1903);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1903 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1894 + 1.0) / _1903);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2376 = frontier_phi_38_33_ladder;
        }
        float _2378 = isnan(_2133) ? _1931 : (isnan(_1931) ? _2133 : min(_1931, _2133));
        float _2379 = isnan(_2376) ? _2378 : (isnan(_2378) ? _2376 : min(_2378, _2376));
        float _2383 = (_2379 * _1897) + _1886;
        float _2384 = (_2379 * _1900) + _1890;
        float _2385 = (_2379 * _1903) + _1894;
        float _2386 = _2379 * 9.9999997473787516355514526367188e-05;
        float _2388 = (-1.0) - _2386;
        float _2390 = _2386 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2385 > _2390) || ((_2385 < _2388) || ((_2384 > _2390) || ((_2384 < _2388) || ((_2383 < _2388) || (_2383 > _2390))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2509 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2385, cbModelParam._m0[9u].z, fma(_2384, cbModelParam._m0[9u].y, _2383 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2385, cbModelParam._m0[10u].z, fma(_2384, cbModelParam._m0[10u].y, _2383 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2385, cbModelParam._m0[11u].z, fma(_2384, cbModelParam._m0[11u].y, _2383 * cbModelParam._m0[11u].x))), _1838);
            frontier_phi_16_38_ladder = _2509.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2509.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2509.x * cbModelParam._m0[1u].y;
        }
        _1919 = frontier_phi_16_38_ladder_2;
        _1921 = frontier_phi_16_38_ladder_1;
        _1923 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1907 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1000, _1001, _1002), _1838);
        _1919 = _1907.x * cbModelParam._m0[1u].y;
        _1921 = _1907.y * cbModelParam._m0[1u].y;
        _1923 = _1907.z * cbModelParam._m0[1u].y;
    }
    float _1927 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _833);
    float _1928 = isnan(_1927) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1927 : min(cbModelParam._m0[25u].w, _1927));
    float _2019;
    float _2021;
    float _2023;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1983 = fma(_1061, cbModelParam._m0[21u].z, fma(_1057, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1053)) + cbModelParam._m0[21u].w;
        float _1987 = fma(_1061, cbModelParam._m0[22u].z, fma(_1057, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1053)) + cbModelParam._m0[22u].w;
        float _1991 = fma(_1061, cbModelParam._m0[23u].z, fma(_1057, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1053)) + cbModelParam._m0[23u].w;
        float _1994 = fma(_1002, cbModelParam._m0[21u].z, fma(_1001, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1000));
        float _1997 = fma(_1002, cbModelParam._m0[22u].z, fma(_1001, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1000));
        float _2000 = fma(_1002, cbModelParam._m0[23u].z, fma(_1001, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1000));
        float _2138;
        if (_1994 > 0.0)
        {
            _2138 = abs((1.0 - _1983) / _1994);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1994 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1983 + 1.0) / _1994);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2138 = frontier_phi_28_24_ladder;
        }
        float _2403;
        if (_1997 > 0.0)
        {
            _2403 = abs((1.0 - _1987) / _1997);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1997 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1987 + 1.0) / _1997);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2403 = frontier_phi_40_35_ladder;
        }
        float _2608;
        if (_2000 > 0.0)
        {
            _2608 = abs((1.0 - _1991) / _2000);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_2000 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1991 + 1.0) / _2000);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2608 = frontier_phi_49_46_ladder;
        }
        float _2610 = isnan(_2403) ? _2138 : (isnan(_2138) ? _2403 : min(_2138, _2403));
        float _2611 = isnan(_2608) ? _2610 : (isnan(_2610) ? _2608 : min(_2610, _2608));
        float _2615 = (_2611 * _1994) + _1983;
        float _2616 = (_2611 * _1997) + _1987;
        float _2617 = (_2611 * _2000) + _1991;
        float _2618 = _2611 * 9.9999997473787516355514526367188e-05;
        float _2619 = (-1.0) - _2618;
        float _2621 = _2618 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_2617 > _2621) || ((_2617 < _2619) || ((_2616 > _2621) || ((_2616 < _2619) || ((_2615 < _2619) || (_2615 > _2621))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2816 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2617, cbModelParam._m0[17u].z, fma(_2616, cbModelParam._m0[17u].y, _2615 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2617, cbModelParam._m0[18u].z, fma(_2616, cbModelParam._m0[18u].y, _2615 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2617, cbModelParam._m0[19u].z, fma(_2616, cbModelParam._m0[19u].y, _2615 * cbModelParam._m0[19u].x))), _1928);
            frontier_phi_25_49_ladder = _2816.z * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_1 = _2816.y * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_2 = _2816.x * cbModelParam._m0[1u].z;
        }
        _2019 = frontier_phi_25_49_ladder_2;
        _2021 = frontier_phi_25_49_ladder_1;
        _2023 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _2003 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1000, _1001, _1002), _1928);
        _2019 = _2003.x * cbModelParam._m0[1u].z;
        _2021 = _2003.y * cbModelParam._m0[1u].z;
        _2023 = _2003.z * cbModelParam._m0[1u].z;
    }
    float _2035 = ((((1.0 - _1021) * ((_1008 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1021 * _1008)) * _992;
    float _2036 = _2035 * ((cbModelParam._m0[1u].w * (_2019 - _1919)) + _1919);
    float _2037 = _2035 * ((cbModelParam._m0[1u].w * (_2021 - _1921)) + _1921);
    float _2038 = _2035 * ((cbModelParam._m0[1u].w * (_2023 - _1923)) + _1923);
    float _2041 = fma(_2038, cbSceneParam._m0[89u].z, fma(_2037, cbSceneParam._m0[89u].y, _2036 * cbSceneParam._m0[89u].x));
    float _2044 = fma(_2038, cbSceneParam._m0[90u].z, fma(_2037, cbSceneParam._m0[90u].y, _2036 * cbSceneParam._m0[90u].x));
    float _2047 = fma(_2038, cbSceneParam._m0[91u].z, fma(_2037, cbSceneParam._m0[91u].y, _2036 * cbSceneParam._m0[91u].x));
    uvec4 _2057 = floatBitsToUint(cbInstanceData._m0[_274 + 5u]);
    uint _2059 = _2057.x * 14u;
    uint _2060 = _2059 + 13u;
    float _2067 = _992 + (-1.0);
    float _2072 = (cbLight._m0[_2060].x * _2067) + 1.0;
    float _2073 = (cbLight._m0[_2060].y * _2067) + 1.0;
    float _2074 = (cbLight._m0[_2060].z * _2067) + 1.0;
    float _2075 = (cbLight._m0[_2060].w * _2067) + 1.0;
    uint _2076 = _2059 + 5u;
    float _2082 = isnan(1.0) ? _2073 : (isnan(_2073) ? 1.0 : min(_2073, 1.0));
    uint _2086 = _2059 + 4u;
    float _2092 = isnan(1.0) ? _2072 : (isnan(_2072) ? 1.0 : min(_2072, 1.0));
    uint _2096 = _2059 | 1u;
    float _2107 = dot(vec3(cbLight._m0[_2059].xyz), vec3(_830, _831, _832));
    float _2110 = dot(vec3(cbLight._m0[_2096].xyz), vec3(_830, _831, _832));
    float _4329 = isnan(0.0) ? _2107 : (isnan(_2107) ? 0.0 : max(_2107, 0.0));
    float _4340 = isnan(0.0) ? _2110 : (isnan(_2110) ? 0.0 : max(_2110, 0.0));
    float _2115 = (isnan(1.0) ? _4329 : (isnan(_4329) ? 1.0 : min(_4329, 1.0))) * 0.3183098733425140380859375;
    float _2117 = (isnan(1.0) ? _4340 : (isnan(_4340) ? 1.0 : min(_4340, 1.0))) * 0.3183098733425140380859375;
    float _2124 = ((cbLight._m0[_2076].x * _2082) * _2117) + ((cbLight._m0[_2086].x * _2092) * _2115);
    float _2125 = ((_2082 * cbLight._m0[_2076].y) * _2117) + ((_2092 * cbLight._m0[_2086].y) * _2115);
    float _2126 = ((_2082 * cbLight._m0[_2076].z) * _2117) + ((_2092 * cbLight._m0[_2086].z) * _2115);
    uvec4 _2130 = floatBitsToUint(cbLight._m0[_2059 + 12u]);
    bool _2132 = _2130.x == 0u;
    float _2143;
    float _2145;
    float _2147;
    if (_2132)
    {
        _2143 = _2124;
        _2145 = _2125;
        _2147 = _2126;
    }
    else
    {
        uint _2151 = _2059 + 6u;
        float _2167 = (dot(vec3(cbLight._m0[_2059 + 2u].xyz), vec3(_830, _831, _832)) * 0.5) + 0.5;
        float _2168 = _2167 * _2167;
        float _4351 = isnan(0.0) ? _2168 : (isnan(_2168) ? 0.0 : max(_2168, 0.0));
        float _2169 = isnan(1.0) ? _4351 : (isnan(_4351) ? 1.0 : min(_4351, 1.0));
        float _2170 = isnan(1.0) ? _2074 : (isnan(_2074) ? 1.0 : min(_2074, 1.0));
        _2143 = (((cbLight._m0[_2151].x * 0.3183098733425140380859375) * _2169) * _2170) + _2124;
        _2145 = (((cbLight._m0[_2151].y * 0.3183098733425140380859375) * _2169) * _2170) + _2125;
        _2147 = (((cbLight._m0[_2151].z * 0.3183098733425140380859375) * _2169) * _2170) + _2126;
    }
    bool _2150 = _2130.y == 0u;
    float _2188;
    float _2190;
    float _2192;
    if (_2150)
    {
        _2188 = _2143;
        _2190 = _2145;
        _2192 = _2147;
    }
    else
    {
        uint _2347 = _2059 + 7u;
        float _2363 = (dot(vec3(cbLight._m0[_2059 + 3u].xyz), vec3(_830, _831, _832)) * 0.5) + 0.5;
        float _2364 = _2363 * _2363;
        float _4367 = isnan(0.0) ? _2364 : (isnan(_2364) ? 0.0 : max(_2364, 0.0));
        float _2365 = isnan(1.0) ? _4367 : (isnan(_4367) ? 1.0 : min(_4367, 1.0));
        float _2366 = isnan(1.0) ? _2075 : (isnan(_2075) ? 1.0 : min(_2075, 1.0));
        _2188 = (((cbLight._m0[_2347].x * 0.3183098733425140380859375) * _2365) * _2366) + _2143;
        _2190 = (((cbLight._m0[_2347].y * 0.3183098733425140380859375) * _2365) * _2366) + _2145;
        _2192 = (((cbLight._m0[_2347].z * 0.3183098733425140380859375) * _2365) * _2366) + _2147;
    }
    uint _2195 = _2059 + 8u;
    float _2208 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2059].w)) * _833) * 0.949999988079071044921875);
    float _2209 = _2208 * _2208;
    float _2210 = cbLight._m0[_2059].x + _909;
    float _2211 = cbLight._m0[_2059].y + _910;
    float _2212 = cbLight._m0[_2059].z + _911;
    float _2216 = inversesqrt(dot(vec3(_2210, _2211, _2212), vec3(_2210, _2211, _2212)));
    float _2217 = _2216 * _2210;
    float _2218 = _2216 * _2211;
    float _2219 = _2216 * _2212;
    float _2220 = dot(vec3(_830, _831, _832), vec3(cbLight._m0[_2059].xyz));
    float _4383 = isnan(0.0) ? _2220 : (isnan(_2220) ? 0.0 : max(_2220, 0.0));
    float _2223 = isnan(1.0) ? _4383 : (isnan(_4383) ? 1.0 : min(_4383, 1.0));
    float _4394 = isnan(0.0) ? _993 : (isnan(_993) ? 0.0 : max(_993, 0.0));
    float _2224 = isnan(1.0) ? _4394 : (isnan(_4394) ? 1.0 : min(_4394, 1.0));
    float _2225 = dot(vec3(_830, _831, _832), vec3(_2217, _2218, _2219));
    float _4405 = isnan(0.0) ? _2225 : (isnan(_2225) ? 0.0 : max(_2225, 0.0));
    float _2228 = isnan(1.0) ? _4405 : (isnan(_4405) ? 1.0 : min(_4405, 1.0));
    float _2229 = dot(vec3(cbLight._m0[_2059].xyz), vec3(_2217, _2218, _2219));
    float _4416 = isnan(0.0) ? _2229 : (isnan(_2229) ? 0.0 : max(_2229, 0.0));
    float _2233 = _2209 * _2209;
    float _2237 = ((_2228 * _2228) * (_2233 + (-1.0))) + 1.0;
    float _2248 = (exp2(log2(1.0 - (isnan(1.0) ? _4416 : (isnan(_4416) ? 1.0 : min(_4416, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2249 = 1.0 - _2209;
    float _2260 = (0.5 / (((_2224 * ((_2223 * _2249) + _2209)) + 9.9999999392252902907785028219223e-09) + (((_2224 * _2249) + _2209) * _2223))) * _2223;
    float _4427 = isnan(0.0) ? _2260 : (isnan(_2260) ? 0.0 : max(_2260, 0.0));
    float _2262 = (isnan(1.0) ? _4427 : (isnan(_4427) ? 1.0 : min(_4427, 1.0))) * (_2233 / ((_2237 * _2237) * 3.141590118408203125));
    uint _2273 = _2059 + 9u;
    float _2284 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2096].w)) * _833) * 0.949999988079071044921875);
    float _2285 = _2284 * _2284;
    float _2286 = cbLight._m0[_2096].x + _909;
    float _2287 = cbLight._m0[_2096].y + _910;
    float _2288 = cbLight._m0[_2096].z + _911;
    float _2292 = inversesqrt(dot(vec3(_2286, _2287, _2288), vec3(_2286, _2287, _2288)));
    float _2293 = _2292 * _2286;
    float _2294 = _2292 * _2287;
    float _2295 = _2292 * _2288;
    float _2296 = dot(vec3(_830, _831, _832), vec3(cbLight._m0[_2096].xyz));
    float _4438 = isnan(0.0) ? _2296 : (isnan(_2296) ? 0.0 : max(_2296, 0.0));
    float _2299 = isnan(1.0) ? _4438 : (isnan(_4438) ? 1.0 : min(_4438, 1.0));
    float _2300 = dot(vec3(_830, _831, _832), vec3(_2293, _2294, _2295));
    float _4449 = isnan(0.0) ? _2300 : (isnan(_2300) ? 0.0 : max(_2300, 0.0));
    float _2303 = isnan(1.0) ? _4449 : (isnan(_4449) ? 1.0 : min(_4449, 1.0));
    float _2304 = dot(vec3(cbLight._m0[_2096].xyz), vec3(_2293, _2294, _2295));
    float _4460 = isnan(0.0) ? _2304 : (isnan(_2304) ? 0.0 : max(_2304, 0.0));
    float _2308 = _2285 * _2285;
    float _2312 = ((_2303 * _2303) * (_2308 + (-1.0))) + 1.0;
    float _2321 = (exp2(log2(1.0 - (isnan(1.0) ? _4460 : (isnan(_4460) ? 1.0 : min(_4460, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2322 = 1.0 - _2285;
    float _2332 = (0.5 / (((_2224 * ((_2299 * _2322) + _2285)) + 9.9999999392252902907785028219223e-09) + (((_2224 * _2322) + _2285) * _2299))) * _2299;
    float _4471 = isnan(0.0) ? _2332 : (isnan(_2332) ? 0.0 : max(_2332, 0.0));
    float _2334 = (isnan(1.0) ? _4471 : (isnan(_4471) ? 1.0 : min(_4471, 1.0))) * (_2308 / ((_2312 * _2312) * 3.141590118408203125));
    float _2344 = (((_2321 * cbLight._m0[_2273].x) * _2334) * _2082) + (((_2248 * cbLight._m0[_2195].x) * _2262) * _2092);
    float _2345 = (((_2321 * cbLight._m0[_2273].y) * _2334) * _2082) + (((_2248 * cbLight._m0[_2195].y) * _2262) * _2092);
    float _2346 = (((_2321 * cbLight._m0[_2273].z) * _2334) * _2082) + (((_2248 * cbLight._m0[_2195].z) * _2262) * _2092);
    float _2408;
    float _2410;
    float _2412;
    if (_2132)
    {
        _2408 = _2344;
        _2410 = _2345;
        _2412 = _2346;
    }
    else
    {
        uint _2414 = _2059 + 2u;
        uint _2418 = _2059 + 10u;
        float _2432 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2414].w)) * _833) * 0.949999988079071044921875);
        float _2433 = _2432 * _2432;
        float _2434 = cbLight._m0[_2414].x + _909;
        float _2435 = cbLight._m0[_2414].y + _910;
        float _2436 = cbLight._m0[_2414].z + _911;
        float _2440 = inversesqrt(dot(vec3(_2434, _2435, _2436), vec3(_2434, _2435, _2436)));
        float _2441 = _2440 * _2434;
        float _2442 = _2440 * _2435;
        float _2443 = _2440 * _2436;
        float _2444 = dot(vec3(_830, _831, _832), vec3(cbLight._m0[_2414].xyz));
        float _4482 = isnan(0.0) ? _2444 : (isnan(_2444) ? 0.0 : max(_2444, 0.0));
        float _2447 = isnan(1.0) ? _4482 : (isnan(_4482) ? 1.0 : min(_4482, 1.0));
        float _2448 = dot(vec3(_830, _831, _832), vec3(_2441, _2442, _2443));
        float _4493 = isnan(0.0) ? _2448 : (isnan(_2448) ? 0.0 : max(_2448, 0.0));
        float _2451 = isnan(1.0) ? _4493 : (isnan(_4493) ? 1.0 : min(_4493, 1.0));
        float _2452 = dot(vec3(cbLight._m0[_2414].xyz), vec3(_2441, _2442, _2443));
        float _4504 = isnan(0.0) ? _2452 : (isnan(_2452) ? 0.0 : max(_2452, 0.0));
        float _2456 = _2433 * _2433;
        float _2460 = ((_2451 * _2451) * (_2456 + (-1.0))) + 1.0;
        float _2469 = (exp2(log2(1.0 - (isnan(1.0) ? _4504 : (isnan(_4504) ? 1.0 : min(_4504, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2470 = 1.0 - _2433;
        float _2480 = (0.5 / (((_2224 * ((_2447 * _2470) + _2433)) + 9.9999999392252902907785028219223e-09) + (((_2224 * _2470) + _2433) * _2447))) * _2447;
        float _4515 = isnan(0.0) ? _2480 : (isnan(_2480) ? 0.0 : max(_2480, 0.0));
        float _2482 = (isnan(1.0) ? _4515 : (isnan(_4515) ? 1.0 : min(_4515, 1.0))) * (_2456 / ((_2460 * _2460) * 3.141590118408203125));
        float _2483 = isnan(1.0) ? _2074 : (isnan(_2074) ? 1.0 : min(_2074, 1.0));
        _2408 = (((_2469 * cbLight._m0[_2418].x) * _2482) * _2483) + _2344;
        _2410 = (((_2469 * cbLight._m0[_2418].y) * _2482) * _2483) + _2345;
        _2412 = (((_2469 * cbLight._m0[_2418].z) * _2482) * _2483) + _2346;
    }
    float _2518;
    float _2520;
    float _2522;
    if (_2150)
    {
        _2518 = _2408;
        _2520 = _2410;
        _2522 = _2412;
    }
    else
    {
        uint _2529 = _2059 + 3u;
        uint _2533 = _2059 + 11u;
        float _2547 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2529].w)) * _833) * 0.949999988079071044921875);
        float _2548 = _2547 * _2547;
        float _2549 = cbLight._m0[_2529].x + _909;
        float _2550 = cbLight._m0[_2529].y + _910;
        float _2551 = cbLight._m0[_2529].z + _911;
        float _2555 = inversesqrt(dot(vec3(_2549, _2550, _2551), vec3(_2549, _2550, _2551)));
        float _2556 = _2555 * _2549;
        float _2557 = _2555 * _2550;
        float _2558 = _2555 * _2551;
        float _2559 = dot(vec3(_830, _831, _832), vec3(cbLight._m0[_2529].xyz));
        float _4531 = isnan(0.0) ? _2559 : (isnan(_2559) ? 0.0 : max(_2559, 0.0));
        float _2562 = isnan(1.0) ? _4531 : (isnan(_4531) ? 1.0 : min(_4531, 1.0));
        float _2563 = dot(vec3(_830, _831, _832), vec3(_2556, _2557, _2558));
        float _4542 = isnan(0.0) ? _2563 : (isnan(_2563) ? 0.0 : max(_2563, 0.0));
        float _2566 = isnan(1.0) ? _4542 : (isnan(_4542) ? 1.0 : min(_4542, 1.0));
        float _2567 = dot(vec3(cbLight._m0[_2529].xyz), vec3(_2556, _2557, _2558));
        float _4553 = isnan(0.0) ? _2567 : (isnan(_2567) ? 0.0 : max(_2567, 0.0));
        float _2571 = _2548 * _2548;
        float _2575 = ((_2566 * _2566) * (_2571 + (-1.0))) + 1.0;
        float _2584 = (exp2(log2(1.0 - (isnan(1.0) ? _4553 : (isnan(_4553) ? 1.0 : min(_4553, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2585 = 1.0 - _2548;
        float _2595 = (0.5 / (((_2224 * ((_2562 * _2585) + _2548)) + 9.9999999392252902907785028219223e-09) + (((_2224 * _2585) + _2548) * _2562))) * _2562;
        float _4564 = isnan(0.0) ? _2595 : (isnan(_2595) ? 0.0 : max(_2595, 0.0));
        float _2597 = (isnan(1.0) ? _4564 : (isnan(_4564) ? 1.0 : min(_4564, 1.0))) * (_2571 / ((_2575 * _2575) * 3.141590118408203125));
        float _2598 = isnan(1.0) ? _2075 : (isnan(_2075) ? 1.0 : min(_2075, 1.0));
        _2518 = (((_2584 * cbLight._m0[_2533].x) * _2597) * _2598) + _2408;
        _2520 = (((_2584 * cbLight._m0[_2533].y) * _2597) * _2598) + _2410;
        _2522 = (((_2584 * cbLight._m0[_2533].z) * _2597) * _2598) + _2412;
    }
    float _2733;
    float _2735;
    float _2737;
    float _2739;
    float _2741;
    float _2743;
    if (_2057.y == 0u)
    {
        float _2673 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2674 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2673;
        float _2675 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2673;
        float _2676 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2673;
        uvec4 _2688 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2689 = _2688.x;
        uint _2700 = uint((float(_2688.y) * floor(float(uint(cbSceneParam._m0[85u].y * _930) / _2689))) + floor(float(uint(cbSceneParam._m0[85u].x * _929) / _2689)));
        float _2710 = (log2(_2676 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2711 = isnan(0.0) ? _2710 : (isnan(_2710) ? 0.0 : max(_2710, 0.0));
        uint _2714 = uint(isnan(14.0) ? _2711 : (isnan(_2711) ? 14.0 : min(_2711, 14.0)));
        uvec4 _2719 = texelFetch(g_lightClusterGridBuffer, int(((_2714 << 2u) + (_2700 << 6u)) >> 2u));
        uint _2720 = _2719.x;
        uint _2721 = _2688.z;
        float _2821;
        float _2823;
        float _2825;
        float _2827;
        float _2829;
        float _2831;
        if (((((1u << ((_2721 >> 4u) & 15u)) + 4294967295u) & _2720) == 0u) || ((_2721 & 240u) == 0u))
        {
            _2821 = 0.0;
            _2823 = 0.0;
            _2825 = 0.0;
            _2827 = 0.0;
            _2829 = 0.0;
            _2831 = 0.0;
        }
        else
        {
            float _2822;
            float _2824;
            float _2826;
            float _2828;
            float _2830;
            float _2832;
            float _2974 = 0.0;
            float _2975 = 0.0;
            float _2976 = 0.0;
            float _2977 = 0.0;
            float _2978 = 0.0;
            float _2979 = 0.0;
            uint _2980 = 0u;
            uint _2989;
            bool _2990;
            for (;;)
            {
                _2989 = texelFetch(g_lightClassification, int((((_2714 << 5u) + (_2700 << 9u)) + (_2980 << 2u)) >> 2u)).x;
                _2990 = _2989 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_2990)
                {
                    frontier_phi_66_pred = _2974;
                    frontier_phi_66_pred_1 = _2979;
                    frontier_phi_66_pred_2 = _2978;
                    frontier_phi_66_pred_3 = _2977;
                    frontier_phi_66_pred_4 = _2976;
                    frontier_phi_66_pred_5 = _2975;
                }
                else
                {
                    float _3119;
                    float _3120;
                    float _3121;
                    float _3122;
                    float _3123;
                    float _3124;
                    uint _3125;
                    _3119 = _2974;
                    _3120 = _2975;
                    _3121 = _2976;
                    _3122 = _2977;
                    _3123 = _2978;
                    _3124 = _2979;
                    _3125 = _2989;
                    float _3046;
                    float _3047;
                    float _3048;
                    float _3049;
                    float _3050;
                    float _3051;
                    for (;;)
                    {
                        uint _3129 = uint(findLSB(_3125)) + (_2980 << 5u);
                        uint _3126 = (_3125 + 4294967295u) & _3125;
                        uint _3131 = _3129 * 48u;
                        vec4 _3145 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3131)).x, texelFetch(g_PointLightRenderingBuffer, int(_3131 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3131 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3131 + 3u)).x));
                        uint _3151 = (_3129 * 48u) + 4u;
                        vec4 _3164 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3151)).x, texelFetch(g_PointLightRenderingBuffer, int(_3151 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3151 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3151 + 3u)).x));
                        uint _3170 = (_3129 * 48u) + 8u;
                        vec3 _3181 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3170)).x, texelFetch(g_PointLightRenderingBuffer, int(_3170 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3170 + 2u)).x));
                        float _3185 = _3145.x - _2674;
                        float _3186 = _3145.y - _2675;
                        float _3187 = _3145.z - _2676;
                        float _3188 = dot(vec3(_3185, _3186, _3187), vec3(_3185, _3186, _3187));
                        float _3191 = inversesqrt(_3188);
                        float _3192 = _3191 * _3185;
                        float _3193 = _3191 * _3186;
                        float _3194 = _3191 * _3187;
                        float _3195 = dot(vec3(_948, _951, _954), vec3(_3192, _3193, _3194));
                        float _3200 = 1.0 - (_3188 * _3145.w);
                        float _4590 = isnan(0.0) ? _3200 : (isnan(_3200) ? 0.0 : max(_3200, 0.0));
                        float _3201 = isnan(1.0) ? _4590 : (isnan(_4590) ? 1.0 : min(_4590, 1.0));
                        float _3202 = sqrt(_3188) * _3164.w;
                        float _3205 = 1.39999997615814208984375 / (_3202 + 1.39999997615814208984375);
                        float _3206 = _3205 * _3205;
                        float _3209 = ((1.0 - _3206) * _3195) + _3206;
                        float _3212 = _3202 * _3202;
                        float _3216 = ((isnan(0.0) ? _3209 : (isnan(_3209) ? 0.0 : max(_3209, 0.0))) * _3201) / ((_3212 * 0.699999988079071044921875) + 1.0);
                        float _3220 = (-0.0) - _2674;
                        float _3221 = (-0.0) - _2675;
                        float _3222 = (-0.0) - _2676;
                        float _3226 = inversesqrt(dot(vec3(_3220, _3221, _3222), vec3(_3220, _3221, _3222)));
                        float _3227 = _3226 * _3220;
                        float _3228 = _3226 * _3221;
                        float _3229 = _3226 * _3222;
                        float _3237 = exp2(log2(1.0 / ((_3212 * 3.5) + 5.0)) * 0.25);
                        float _3238 = 1.0 - _1008;
                        float _3245 = sqrt(1.0 - ((1.0 - (_3238 * _3238)) * (1.0 - (_3237 * _3237))));
                        float _3246 = _3245 * _3245;
                        float _3247 = _3246 * _3246;
                        float _3248 = _3227 + _3192;
                        float _3249 = _3228 + _3193;
                        float _3250 = _3229 + _3194;
                        float _3254 = inversesqrt(dot(vec3(_3248, _3249, _3250), vec3(_3248, _3249, _3250)));
                        float _3258 = dot(vec3(_948, _951, _954), vec3(_3227, _3228, _3229));
                        float _4606 = isnan(0.0) ? _3258 : (isnan(_3258) ? 0.0 : max(_3258, 0.0));
                        float _3261 = isnan(1.0) ? _4606 : (isnan(_4606) ? 1.0 : min(_4606, 1.0));
                        float _3262 = dot(vec3(_948, _951, _954), vec3(_3254 * _3248, _3254 * _3249, _3254 * _3250));
                        float _4617 = isnan(0.0) ? _3262 : (isnan(_3262) ? 0.0 : max(_3262, 0.0));
                        float _3265 = isnan(1.0) ? _4617 : (isnan(_4617) ? 1.0 : min(_4617, 1.0));
                        float _3269 = ((_3265 * _3265) * (_3247 + (-1.0))) + 1.0;
                        float _3270 = _3205 * _3246;
                        float _3271 = _3270 * _3270;
                        float _3274 = ((1.0 - _3271) * _3195) + _3271;
                        float _4628 = isnan(0.0) ? _3274 : (isnan(_3274) ? 0.0 : max(_3274, 0.0));
                        float _3275 = isnan(1.0) ? _4628 : (isnan(_4628) ? 1.0 : min(_4628, 1.0));
                        float _3276 = 1.0 - _3246;
                        float _3286 = (0.5 / (((_3275 * ((_3261 * _3276) + _3246)) + 9.9999999392252902907785028219223e-09) + (((_3275 * _3276) + _3246) * _3261))) * _3275;
                        float _4639 = isnan(0.0) ? _3286 : (isnan(_3286) ? 0.0 : max(_3286, 0.0));
                        float _3297 = (((_3247 * 3.1415927410125732421875) * (isnan(1.0) ? _4639 : (isnan(_4639) ? 1.0 : min(_4639, 1.0)))) / ((_3269 * _3269) * ((_3212 * 2.1991131305694580078125) + 3.141590118408203125))) * _3201;
                        _3049 = (_3216 * _3164.x) + _3122;
                        _3050 = (_3216 * _3164.y) + _3123;
                        _3051 = (_3216 * _3164.z) + _3124;
                        _3046 = (_3297 * _3181.x) + _3119;
                        _3047 = (_3297 * _3181.y) + _3120;
                        _3048 = (_3297 * _3181.z) + _3121;
                        if (_3126 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3119 = _3046;
                            _3120 = _3047;
                            _3121 = _3048;
                            _3122 = _3049;
                            _3123 = _3050;
                            _3124 = _3051;
                            _3125 = _3126;
                        }
                    }
                    frontier_phi_66_pred = _3046;
                    frontier_phi_66_pred_1 = _3051;
                    frontier_phi_66_pred_2 = _3050;
                    frontier_phi_66_pred_3 = _3049;
                    frontier_phi_66_pred_4 = _3048;
                    frontier_phi_66_pred_5 = _3047;
                }
                _2822 = frontier_phi_66_pred;
                _2832 = frontier_phi_66_pred_1;
                _2830 = frontier_phi_66_pred_2;
                _2828 = frontier_phi_66_pred_3;
                _2826 = frontier_phi_66_pred_4;
                _2824 = frontier_phi_66_pred_5;
                uint _2981 = _2980 + 1u;
                if (_2981 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2974 = _2822;
                    _2975 = _2824;
                    _2976 = _2826;
                    _2977 = _2828;
                    _2978 = _2830;
                    _2979 = _2832;
                    _2980 = _2981;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2821 = _2822;
            _2823 = _2824;
            _2825 = _2826;
            _2827 = _2828;
            _2829 = _2830;
            _2831 = _2832;
        }
        uvec4 _2835 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2836 = _2835.z;
        uint _2838 = (_2836 >> 8u) & 15u;
        float _2942;
        float _2944;
        float _2946;
        float _2948;
        float _2950;
        float _2952;
        if (((4294967295u << _2838) & _2720) == 0u)
        {
            _2942 = _2821;
            _2944 = _2823;
            _2946 = _2825;
            _2948 = _2827;
            _2950 = _2829;
            _2952 = _2831;
        }
        else
        {
            float _2967 = inversesqrt(dot(vec3(_2674, _2675, _2676), vec3(_2674, _2675, _2676)));
            float _2968 = _2967 * _2674;
            float _2969 = _2967 * _2675;
            float _2970 = _2967 * _2676;
            float frontier_phi_58_59_ladder;
            float frontier_phi_58_59_ladder_1;
            float frontier_phi_58_59_ladder_2;
            float frontier_phi_58_59_ladder_3;
            float frontier_phi_58_59_ladder_4;
            float frontier_phi_58_59_ladder_5;
            if (_2838 < ((_2836 >> 12u) & 15u))
            {
                float _2943;
                float _2945;
                float _2947;
                float _2949;
                float _2951;
                float _2953;
                float _3102 = _2821;
                float _3103 = _2823;
                float _3104 = _2825;
                float _3105 = _2827;
                float _3106 = _2829;
                float _3107 = _2831;
                uint _3108 = _2838;
                uint _3117;
                bool _3118;
                for (;;)
                {
                    _3117 = texelFetch(g_lightClassification, int((((_2714 << 5u) + (_2700 << 9u)) + (_3108 << 2u)) >> 2u)).x;
                    _3118 = _3117 == 0u;
                    float frontier_phi_77_pred;
                    float frontier_phi_77_pred_1;
                    float frontier_phi_77_pred_2;
                    float frontier_phi_77_pred_3;
                    float frontier_phi_77_pred_4;
                    float frontier_phi_77_pred_5;
                    if (_3118)
                    {
                        frontier_phi_77_pred = _3107;
                        frontier_phi_77_pred_1 = _3106;
                        frontier_phi_77_pred_2 = _3105;
                        frontier_phi_77_pred_3 = _3104;
                        frontier_phi_77_pred_4 = _3103;
                        frontier_phi_77_pred_5 = _3102;
                    }
                    else
                    {
                        float _3311;
                        float _3312;
                        float _3313;
                        float _3314;
                        float _3315;
                        float _3316;
                        float _3604;
                        float _3605;
                        float _3606;
                        float _3607;
                        float _3608;
                        float _3609;
                        float _3324 = _3102;
                        float _3325 = _3103;
                        float _3326 = _3104;
                        float _3327 = _3105;
                        float _3328 = _3106;
                        float _3329 = _3107;
                        uint _3330 = _3117;
                        uint _3331;
                        vec4 _3356;
                        float _3357;
                        vec4 _3372;
                        vec3 _3384;
                        vec4 _3399;
                        vec4 _3414;
                        float _3460;
                        bool _3461;
                        for (;;)
                        {
                            uint _3341 = ((_3108 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3330));
                            _3331 = (_3330 + 4294967295u) & _3330;
                            uint _3343 = _3341 * 40u;
                            _3356 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3343)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3343 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3343 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3343 + 3u)).x));
                            _3357 = _3356.w;
                            uint _3359 = (_3341 * 40u) + 4u;
                            _3372 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3359)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3359 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3359 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3359 + 3u)).x));
                            uint _3374 = (_3341 * 40u) + 8u;
                            _3384 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3374)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3374 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3374 + 2u)).x));
                            uint _3386 = (_3341 * 40u) + 16u;
                            _3399 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3386)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3386 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3386 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3386 + 3u)).x));
                            uint _3401 = (_3341 * 40u) + 20u;
                            _3414 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3401)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3401 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3401 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3401 + 3u)).x));
                            uint _3416 = (_3341 * 40u) + 24u;
                            vec4 _3429 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3416)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3416 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3416 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3416 + 3u)).x));
                            uint _3435 = (_3341 * 40u) + 28u;
                            vec4 _3448 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3435)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3435 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3435 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3435 + 3u)).x));
                            _3460 = fma(_2676, _3448.z, fma(_2675, _3448.y, _3448.x * _2674)) + _3448.w;
                            _3461 = !((fma(_2676, _3429.z, fma(_2675, _3429.y, _3429.x * _2674)) + _3429.w) <= 0.0);
                            float frontier_phi_83_pred;
                            float frontier_phi_83_pred_1;
                            float frontier_phi_83_pred_2;
                            float frontier_phi_83_pred_3;
                            float frontier_phi_83_pred_4;
                            float frontier_phi_83_pred_5;
                            if (_3461)
                            {
                                float _3488 = _3356.x - _2674;
                                float _3489 = _3356.y - _2675;
                                float _3490 = _3356.z - _2676;
                                float _3491 = dot(vec3(_3488, _3489, _3490), vec3(_3488, _3489, _3490));
                                float _3494 = inversesqrt(_3491);
                                float _3495 = _3494 * _3488;
                                float _3496 = _3494 * _3489;
                                float _3497 = _3494 * _3490;
                                float _3501 = 1.0 - (_3491 / (_3357 * _3357));
                                float _4650 = isnan(0.0) ? _3501 : (isnan(_3501) ? 0.0 : max(_3501, 0.0));
                                float _3502 = isnan(1.0) ? _4650 : (isnan(_4650) ? 1.0 : min(_4650, 1.0));
                                float _3506 = sqrt(_3491) * _3372.w;
                                float _3508 = 1.39999997615814208984375 / (_3506 + 1.39999997615814208984375);
                                float _3509 = _3508 * _3508;
                                float _3512 = ((1.0 - _3509) * dot(vec3(_3495, _3496, _3497), vec3(_948, _951, _954))) + _3509;
                                float _3515 = _3506 * _3506;
                                float _3519 = (fma(_2676, _3399.z, fma(_2675, _3399.y, _3399.x * _2674)) + _3399.w) / _3460;
                                float _3520 = (fma(_2676, _3414.z, fma(_2675, _3414.y, _3414.x * _2674)) + _3414.w) / _3460;
                                float _3524 = 1.0 - dot(vec2(_3519, _3520), vec2(_3519, _3520));
                                float _4666 = isnan(0.0) ? _3524 : (isnan(_3524) ? 0.0 : max(_3524, 0.0));
                                float _3525 = isnan(1.0) ? _4666 : (isnan(_4666) ? 1.0 : min(_4666, 1.0));
                                float _3526 = _3525 * (((isnan(0.0) ? _3512 : (isnan(_3512) ? 0.0 : max(_3512, 0.0))) * _3502) / ((_3515 * 0.699999988079071044921875) + 1.0));
                                float _3538 = exp2(log2(1.0 / ((_3515 * 3.5) + 5.0)) * 0.25);
                                float _3539 = 1.0 - _1008;
                                float _3546 = sqrt(1.0 - ((1.0 - (_3539 * _3539)) * (1.0 - (_3538 * _3538))));
                                float _3547 = _3546 * _3546;
                                float _3548 = _3547 * _3547;
                                float _3549 = _3495 - _2968;
                                float _3550 = _3496 - _2969;
                                float _3551 = _3497 - _2970;
                                float _3555 = inversesqrt(dot(vec3(_3549, _3550, _3551), vec3(_3549, _3550, _3551)));
                                float _3559 = dot(vec3(_948, _951, _954), vec3((-0.0) - _2968, (-0.0) - _2969, (-0.0) - _2970));
                                float _4677 = isnan(0.0) ? _3559 : (isnan(_3559) ? 0.0 : max(_3559, 0.0));
                                float _3562 = isnan(1.0) ? _4677 : (isnan(_4677) ? 1.0 : min(_4677, 1.0));
                                float _3563 = dot(vec3(_948, _951, _954), vec3(_3555 * _3549, _3555 * _3550, _3555 * _3551));
                                float _4688 = isnan(0.0) ? _3563 : (isnan(_3563) ? 0.0 : max(_3563, 0.0));
                                float _3566 = isnan(1.0) ? _4688 : (isnan(_4688) ? 1.0 : min(_4688, 1.0));
                                float _3570 = ((_3566 * _3566) * (_3548 + (-1.0))) + 1.0;
                                float _3571 = _3508 * _3547;
                                float _3572 = _3571 * _3571;
                                float _3578 = ((1.0 - _3572) * dot(vec3(_948, _951, _954), vec3(_3495, _3496, _3497))) + _3572;
                                float _4699 = isnan(0.0) ? _3578 : (isnan(_3578) ? 0.0 : max(_3578, 0.0));
                                float _3579 = isnan(1.0) ? _4699 : (isnan(_4699) ? 1.0 : min(_4699, 1.0));
                                float _3580 = 1.0 - _3547;
                                float _3590 = (0.5 / (((_3579 * ((_3562 * _3580) + _3547)) + 9.9999999392252902907785028219223e-09) + (((_3579 * _3580) + _3547) * _3562))) * _3579;
                                float _4710 = isnan(0.0) ? _3590 : (isnan(_3590) ? 0.0 : max(_3590, 0.0));
                                float _3600 = (_3525 * _3502) * (((_3548 * 3.1415927410125732421875) * (isnan(1.0) ? _4710 : (isnan(_4710) ? 1.0 : min(_4710, 1.0)))) / ((_3570 * _3570) * ((_3515 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_83_pred = _3526 * _3372.y;
                                frontier_phi_83_pred_1 = _3526 * _3372.x;
                                frontier_phi_83_pred_2 = _3600 * _3384.z;
                                frontier_phi_83_pred_3 = _3600 * _3384.y;
                                frontier_phi_83_pred_4 = _3600 * _3384.x;
                                frontier_phi_83_pred_5 = _3526 * _3372.z;
                            }
                            else
                            {
                                frontier_phi_83_pred = 0.0;
                                frontier_phi_83_pred_1 = 0.0;
                                frontier_phi_83_pred_2 = 0.0;
                                frontier_phi_83_pred_3 = 0.0;
                                frontier_phi_83_pred_4 = 0.0;
                                frontier_phi_83_pred_5 = 0.0;
                            }
                            _3608 = frontier_phi_83_pred;
                            _3607 = frontier_phi_83_pred_1;
                            _3606 = frontier_phi_83_pred_2;
                            _3605 = frontier_phi_83_pred_3;
                            _3604 = frontier_phi_83_pred_4;
                            _3609 = frontier_phi_83_pred_5;
                            _3314 = _3607 + _3327;
                            _3315 = _3608 + _3328;
                            _3316 = _3609 + _3329;
                            _3311 = _3604 + _3324;
                            _3312 = _3605 + _3325;
                            _3313 = _3606 + _3326;
                            if (_3331 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3324 = _3311;
                                _3325 = _3312;
                                _3326 = _3313;
                                _3327 = _3314;
                                _3328 = _3315;
                                _3329 = _3316;
                                _3330 = _3331;
                                continue;
                            }
                        }
                        frontier_phi_77_pred = _3316;
                        frontier_phi_77_pred_1 = _3315;
                        frontier_phi_77_pred_2 = _3314;
                        frontier_phi_77_pred_3 = _3313;
                        frontier_phi_77_pred_4 = _3312;
                        frontier_phi_77_pred_5 = _3311;
                    }
                    _2953 = frontier_phi_77_pred;
                    _2951 = frontier_phi_77_pred_1;
                    _2949 = frontier_phi_77_pred_2;
                    _2947 = frontier_phi_77_pred_3;
                    _2945 = frontier_phi_77_pred_4;
                    _2943 = frontier_phi_77_pred_5;
                    uint _3109 = _3108 + 1u;
                    if (_3109 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3102 = _2943;
                        _3103 = _2945;
                        _3104 = _2947;
                        _3105 = _2949;
                        _3106 = _2951;
                        _3107 = _2953;
                        _3108 = _3109;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_58_59_ladder = _2947;
                frontier_phi_58_59_ladder_1 = _2953;
                frontier_phi_58_59_ladder_2 = _2951;
                frontier_phi_58_59_ladder_3 = _2949;
                frontier_phi_58_59_ladder_4 = _2945;
                frontier_phi_58_59_ladder_5 = _2943;
            }
            else
            {
                frontier_phi_58_59_ladder = _2825;
                frontier_phi_58_59_ladder_1 = _2831;
                frontier_phi_58_59_ladder_2 = _2829;
                frontier_phi_58_59_ladder_3 = _2827;
                frontier_phi_58_59_ladder_4 = _2823;
                frontier_phi_58_59_ladder_5 = _2821;
            }
            _2942 = frontier_phi_58_59_ladder_5;
            _2944 = frontier_phi_58_59_ladder_4;
            _2946 = frontier_phi_58_59_ladder;
            _2948 = frontier_phi_58_59_ladder_3;
            _2950 = frontier_phi_58_59_ladder_2;
            _2952 = frontier_phi_58_59_ladder_1;
        }
        float _2957 = isnan(1.0) ? _992 : (isnan(_992) ? 1.0 : min(_992, 1.0));
        _2733 = (_2957 * _2948) + _2188;
        _2735 = (_2957 * _2950) + _2190;
        _2737 = (_2957 * _2952) + _2192;
        _2739 = ((_2942 * 0.039999999105930328369140625) * _2957) + _2518;
        _2741 = ((_2944 * 0.039999999105930328369140625) * _2957) + _2520;
        _2743 = ((_2946 * 0.039999999105930328369140625) * _2957) + _2522;
    }
    else
    {
        _2733 = _2188;
        _2735 = _2190;
        _2737 = _2192;
        _2739 = _2518;
        _2741 = _2520;
        _2743 = _2522;
    }
    float _4726 = isnan(0.0) ? _977 : (isnan(_977) ? 0.0 : max(_977, 0.0));
    float _4737 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
    float _4748 = isnan(0.0) ? _979 : (isnan(_979) ? 0.0 : max(_979, 0.0));
    float _2760 = ((isnan(1.0) ? _4726 : (isnan(_4726) ? 1.0 : min(_4726, 1.0))) * (_2733 + ((isnan(0.0) ? _1748 : (isnan(_1748) ? 0.0 : max(_1748, 0.0))) * _992))) + ((_2739 + ((isnan(0.0) ? _2041 : (isnan(_2041) ? 0.0 : max(_2041, 0.0))) * _1827)) * cbPerFrame._m0[3u].x);
    float _2761 = ((isnan(1.0) ? _4737 : (isnan(_4737) ? 1.0 : min(_4737, 1.0))) * (_2735 + ((isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0))) * _992))) + ((_2741 + ((isnan(0.0) ? _2044 : (isnan(_2044) ? 0.0 : max(_2044, 0.0))) * _1827)) * cbPerFrame._m0[3u].x);
    float _2762 = ((isnan(1.0) ? _4748 : (isnan(_4748) ? 1.0 : min(_4748, 1.0))) * (_2737 + ((isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0))) * _992))) + ((_2743 + ((isnan(0.0) ? _2047 : (isnan(_2047) ? 0.0 : max(_2047, 0.0))) * _1827)) * cbPerFrame._m0[3u].x);
    uint _2763 = _274 + 6u;
    float _2771 = _929 / cbSceneParam._m0[86u].x;
    float _2772 = _930 / cbSceneParam._m0[86u].y;
    vec4 _2786 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2771, _2772, (log2((isnan(cbSceneParam._m0[77u].w) ? _851 : (isnan(_851) ? cbSceneParam._m0[77u].w : min(_851, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2788 = _2786.x;
    float _2789 = _2786.y;
    float _2790 = _2786.z;
    float _2791 = _2786.w;
    float _2884;
    float _2886;
    float _2888;
    float _2890;
    if (_851 > cbSceneParam._m0[78u].w)
    {
        float _2846 = isnan(_851) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _851 : min(cbSceneParam._m0[80u].w, _851));
        float _2847 = _2846 / _851;
        float _2858 = _2847 * _902;
        float _2859 = _903 * _2847;
        float _2860 = (-0.0) - _2859;
        float _2862 = _2847 * _904;
        float _2864 = (cbSceneParam._m0[77u].w * _2860) / _2846;
        float _2865 = _2864 + cbSceneParam._m0[79u].w;
        float _2866 = cbSceneParam._m0[79u].w - _2859;
        float _2872 = sqrt(((_2858 * _2858) + (_2859 * _2859)) + (_2862 * _2862));
        float _2875 = (1.0 - (cbSceneParam._m0[77u].w / _2846)) * _2872;
        float _2880 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2882 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3059;
        if (abs((_2860 - _2864) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3059 = ((((_2865 > 0.0) ? exp2(_2880 * _2865) : (2.0 - exp2(_2882 * _2865))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2875;
        }
        else
        {
            float _3003 = 1.0 / cbSceneParam._m0[80u].x;
            float _3004 = isnan(_2866) ? _2865 : (isnan(_2865) ? _2866 : max(_2865, _2866));
            float _3005 = isnan(_2866) ? _2865 : (isnan(_2865) ? _2866 : min(_2865, _2866));
            float _3014 = isnan(0.0) ? _3004 : (isnan(_3004) ? 0.0 : min(_3004, 0.0));
            float _3015 = isnan(0.0) ? _3005 : (isnan(_3005) ? 0.0 : min(_3005, 0.0));
            _3059 = ((abs(_2872 / _2860) * cbSceneParam._m0[80u].y) * ((((_3014 - _3015) * 2.0) - ((exp2(_2880 * (isnan(0.0) ? _3004 : (isnan(_3004) ? 0.0 : max(_3004, 0.0)))) - exp2(_2880 * (isnan(0.0) ? _3005 : (isnan(_3005) ? 0.0 : max(_3005, 0.0))))) * _3003)) - ((exp2(_2882 * _3014) - exp2(_2882 * _3015)) * _3003))) + (_2875 * cbSceneParam._m0[80u].z);
        }
        vec4 _3061 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2771, _2772, 1.0), 0.0);
        float _3070 = exp2((_3059 * (-1.44269502162933349609375)) * (1.0 - _3061.w));
        float _3071 = log2(_3070);
        float _3087 = log2(_2791);
        _2884 = (exp2(_3087 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3071 * cbSceneParam._m0[78u].x)) * _3061.x) / cbSceneParam._m0[78u].x)) + _2788;
        _2886 = (exp2(_3087 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3071 * cbSceneParam._m0[78u].y)) * _3061.y) / cbSceneParam._m0[78u].y)) + _2789;
        _2888 = (exp2(_3087 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3071 * cbSceneParam._m0[78u].z)) * _3061.z) / cbSceneParam._m0[78u].z)) + _2790;
        _2890 = _3070 * _2791;
    }
    else
    {
        _2884 = _2788;
        _2886 = _2789;
        _2888 = _2790;
        _2890 = _2791;
    }
    bool _3097;
    vec4 _2900;
    vec4 _2922;
    float _2924;
    float _2928;
    float _2929;
    float _2930;
    float _2931;
    bool _2941;
    for (;;)
    {
        _2900 = cbMatDynParam._m0[0u];
        float _2902 = roundEven(_2900.y);
        bool _2903 = _2902 == 3.0;
        float _2904 = log2(_2890);
        float _2911 = exp2(_2904 * cbSceneParam._m0[78u].x) * _2760;
        float _2912 = exp2(_2904 * cbSceneParam._m0[78u].y) * _2761;
        float _2913 = exp2(_2904 * cbSceneParam._m0[78u].z) * _2762;
        float _2920 = _918 + (-0.5);
        _2922 = cbMtdParam._m0[1u];
        _2924 = _2922.y * _2920;
        float _2927 = (_2902 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2928 = _2927 * (_2903 ? _2911 : (_2911 + (cbSceneParam._m0[72u].w * _2884)));
        _2929 = _2927 * (_2903 ? _2912 : (_2912 + (cbSceneParam._m0[72u].w * _2886)));
        _2930 = _2927 * (_2903 ? _2913 : (_2913 + (cbSceneParam._m0[72u].w * _2888)));
        _2931 = _2920 * 0.999000012874603271484375;
        _2941 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2941)
        {
            if ((cbInstanceData._m0[_274 + 7u].x + _2931) < 0.5)
            {
                _3097 = true;
                break;
            }
        }
        uint _3038 = _967 + uint(_2900.w);
        if ((cbInstanceData._m0[_3038].w < 1.0) && ((cbInstanceData._m0[_3038].w + _2931) < 0.5))
        {
            _3097 = true;
            break;
        }
        if ((_2924 + 1.0) < _2922.x)
        {
            _3097 = true;
            break;
        }
        _3097 = false;
        break;
    }
    float _3302;
    if (_3097)
    {
        discard_state = true;
        _3302 = 0.0;
    }
    else
    {
        _3302 = cbInstanceData._m0[_2763].w;
    }
    SV_Target.x = _2928;
    SV_Target.y = _2929;
    SV_Target.z = _2930;
    SV_Target.w = _3302;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2763].w;
    discard_exit();
}


