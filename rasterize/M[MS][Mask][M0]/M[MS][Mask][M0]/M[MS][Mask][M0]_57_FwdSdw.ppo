#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1269;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _223 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _224 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _225 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _231 = inversesqrt(dot(vec3(_223, _224, _225), vec3(_223, _224, _225)));
    float _238 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _245 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _251 = uint(roundEven(NORMAL.w)) * 13u;
    uint _256 = _251 + 1u;
    uint _260 = _251 + 2u;
    float _269 = sqrt(((cbInstanceData._m0[_256].x * cbInstanceData._m0[_256].x) + (cbInstanceData._m0[_251].x * cbInstanceData._m0[_251].x)) + (cbInstanceData._m0[_260].x * cbInstanceData._m0[_260].x));
    float _270 = _269 * TEXCOORD.z;
    float _271 = _269 * TEXCOORD.w;
    vec4 _290 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _314 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _319 = _314.x * cbMtdParam._m0[11u].x;
    float _320 = _314.y * cbMtdParam._m0[11u].y;
    float _321 = _314.z * cbMtdParam._m0[11u].z;
    vec4 _340 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _270) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _271) + cbTextureTilingScale._m0[5u].w));
    vec4 _359 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _396 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _398 = _396.x;
    float _410 = dot(vec4(_398, _396.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _427 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _359.x) * 2.0) - ((((_398 - _410) * cbMtdParam._m0[24u].z) + _410) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3859 = isnan(0.0) ? _427 : (isnan(_427) ? 0.0 : max(_427, 0.0));
    float _428 = isnan(1.0) ? _3859 : (isnan(_3859) ? 1.0 : min(_3859, 1.0));
    float _435 = (_428 * ((_340.x * cbMtdParam._m0[12u].x) - _319)) + _319;
    float _436 = (_428 * ((_340.y * cbMtdParam._m0[12u].y) - _320)) + _320;
    float _437 = (_428 * ((_340.z * cbMtdParam._m0[12u].z) - _321)) + _321;
    vec4 _454 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _270) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _271) + cbTextureTilingScale._m0[3u].w));
    vec4 _474 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _476 = _474.x;
    float _486 = dot(vec4(_476, _474.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _500 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _359.y) * 2.0) - ((((_476 - _486) * cbMtdParam._m0[24u].z) + _486) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3870 = isnan(0.0) ? _500 : (isnan(_500) ? 0.0 : max(_500, 0.0));
    float _501 = isnan(1.0) ? _3870 : (isnan(_3870) ? 1.0 : min(_3870, 1.0));
    float _514 = ((cbMtdParam._m0[9u].x * 4.55000019073486328125) * _290.x) * ((_501 * ((_454.x * cbMtdParam._m0[13u].x) - _435)) + _435);
    float _517 = ((cbMtdParam._m0[9u].y * 4.55000019073486328125) * _290.y) * ((_501 * ((_454.y * cbMtdParam._m0[13u].y) - _436)) + _436);
    float _520 = ((cbMtdParam._m0[9u].z * 4.55000019073486328125) * _290.z) * ((_501 * ((_454.z * cbMtdParam._m0[13u].z) - _437)) + _437);
    vec4 _533 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _270) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _271) + cbTextureTilingScale._m0[4u].w));
    vec4 _550 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _552 = _550.x;
    float _553 = _550.y;
    float _554 = _550.z;
    float _561 = ((_533.x - _552) * _428) + _552;
    float _562 = ((_533.y - _553) * _428) + _553;
    float _563 = ((_533.z - _554) * _428) + _554;
    vec4 _575 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _270) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _271) + cbTextureTilingScale._m0[2u].w));
    float _588 = ((_575.z - _563) * _501) + _563;
    float _591 = ((((_575.x - _561) * _501) + _561) * 2.0) + (-1.0);
    float _593 = ((((_575.y - _562) * _501) + _562) * 2.0) + (-1.0);
    float _594 = dot(vec2(_591, _593), vec2(_591, _593));
    float _3881 = isnan(0.0) ? _594 : (isnan(_594) ? 0.0 : max(_594, 0.0));
    float _599 = sqrt(1.0 - (isnan(1.0) ? _3881 : (isnan(_3881) ? 1.0 : min(_3881, 1.0))));
    vec4 _613 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _625 = (((_613.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _591;
    float _626 = (((_613.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _593;
    vec4 _638 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _270) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _271) + cbTextureTilingScale._m0[19u].w));
    float _640 = _638.x;
    float _641 = 1.0 - _640;
    float _669 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_640 - _641) * cbMtdParam._m0[24u].y) + _641) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3892 = isnan(0.0) ? _669 : (isnan(_669) ? 0.0 : max(_669, 0.0));
    float _670 = isnan(1.0) ? _3892 : (isnan(_3892) ? 1.0 : min(_3892, 1.0));
    float _678 = ((((cbMtdParam._m0[10u].x - _514) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _670) + _514;
    float _679 = ((((cbMtdParam._m0[10u].y - _517) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _670) + _517;
    float _680 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _520)) * _670) + _520;
    float _684 = (cbMtdParam._m0[19u].w * (_613.z - _588)) + _588;
    float _688 = ((cbMtdParam._m0[23u].y - _684) * _670) + _684;
    vec4 _707 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _270) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _271) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _713 = (_707.x * 2.0) + (-1.0);
    float _714 = (_707.y * 2.0) + (-1.0);
    float _715 = dot(vec2(_713, _714), vec2(_713, _714));
    float _3903 = isnan(0.0) ? _715 : (isnan(_715) ? 0.0 : max(_715, 0.0));
    float _731 = (_670 * (((cbMtdParam._m0[22u].z * _625) - _625) + _713)) + _625;
    float _732 = (_670 * (((cbMtdParam._m0[22u].z * _626) - _626) + _714)) + _626;
    float _733 = (_670 * (sqrt(1.0 - (isnan(1.0) ? _3903 : (isnan(_3903) ? 1.0 : min(_3903, 1.0)))) - _599)) + _599;
    float _735 = cbMtdParam._m0[22u].x + _613.w;
    float _738 = fma(_733, _238 * NORMAL.x, fma(_732, _245 * TANGENT.x, (_231 * _223) * _731));
    float _741 = fma(_733, _238 * NORMAL.y, fma(_732, _245 * TANGENT.y, (_231 * _224) * _731));
    float _744 = fma(_733, _238 * NORMAL.z, fma(_732, _245 * TANGENT.z, (_231 * _225) * _731));
    float _748 = inversesqrt(dot(vec3(_738, _741, _744), vec3(_738, _741, _744)));
    float _749 = _748 * _738;
    float _750 = _748 * _741;
    float _751 = _748 * _744;
    float _3914 = isnan(0.0) ? _688 : (isnan(_688) ? 0.0 : max(_688, 0.0));
    float _752 = isnan(1.0) ? _3914 : (isnan(_3914) ? 1.0 : min(_3914, 1.0));
    float _3925 = isnan(0.0) ? _735 : (isnan(_735) ? 0.0 : max(_735, 0.0));
    float _3936 = isnan(0.0) ? _678 : (isnan(_678) ? 0.0 : max(_678, 0.0));
    float _3947 = isnan(0.0) ? _679 : (isnan(_679) ? 0.0 : max(_679, 0.0));
    float _3958 = isnan(0.0) ? _680 : (isnan(_680) ? 0.0 : max(_680, 0.0));
    float _770 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _810 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _820 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _810);
    float _821 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _810);
    float _822 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _810);
    float _826 = inversesqrt(dot(vec3(_820, _821, _822), vec3(_820, _821, _822)));
    float _827 = _820 * _826;
    float _828 = _821 * _826;
    float _829 = _822 * _826;
    float _835 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _836 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _854 = fma(_751, cbSceneParam._m0[5u].z, fma(_750, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _749));
    float _857 = fma(_751, cbSceneParam._m0[6u].z, fma(_750, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _749));
    float _860 = fma(_751, cbSceneParam._m0[7u].z, fma(_750, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _749));
    uint _874 = (_251 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _880 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3936 : (isnan(_3936) ? 1.0 : min(_3936, 1.0)))) * cbInstanceData._m0[_874].x;
    float _881 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3947 : (isnan(_3947) ? 1.0 : min(_3947, 1.0)))) * cbInstanceData._m0[_874].y;
    float _882 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3958 : (isnan(_3958) ? 1.0 : min(_3958, 1.0)))) * cbInstanceData._m0[_874].z;
    float _3969 = isnan(0.0) ? _880 : (isnan(_880) ? 0.0 : max(_880, 0.0));
    float _883 = isnan(1.0) ? _3969 : (isnan(_3969) ? 1.0 : min(_3969, 1.0));
    float _3980 = isnan(0.0) ? _881 : (isnan(_881) ? 0.0 : max(_881, 0.0));
    float _884 = isnan(1.0) ? _3980 : (isnan(_3980) ? 1.0 : min(_3980, 1.0));
    float _3991 = isnan(0.0) ? _882 : (isnan(_882) ? 0.0 : max(_882, 0.0));
    float _885 = isnan(1.0) ? _3991 : (isnan(_3991) ? 1.0 : min(_3991, 1.0));
    vec4 _894 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _835, cbSceneParam._m0[86u].y * _836));
    float _898 = ((isnan(1.0) ? _3925 : (isnan(_3925) ? 1.0 : min(_3925, 1.0))) * TEXCOORD_5.w) * _894.x;
    float _899 = dot(vec3(_749, _750, _751), vec3(_827, _828, _829));
    float _902 = _899 * 2.0;
    float _906 = (_902 * _749) - _827;
    float _907 = (_902 * _750) - _828;
    float _908 = (_902 * _751) - _829;
    float _912 = abs(dot(vec3(_827, _828, _829), vec3(_749, _750, _751)));
    float _4002 = isnan(0.0) ? _912 : (isnan(_912) ? 0.0 : max(_912, 0.0));
    float _914 = sqrt(_752);
    float _927 = exp2((_914 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4002 : (isnan(_4002) ? 1.0 : min(_4002, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_914 * 3.0));
    float _959 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _963 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _967 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1268;
    float _1270;
    float _1271;
    float _1272;
    float _1273;
    float _1274;
    float _1275;
    float _1276;
    float _1277;
    float _1278;
    float _1279;
    float _1280;
    float _1281;
    float _1282;
    float _1283;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _993 = fma(_967, cbModelParam._m0[26u].z, fma(_963, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _959));
        float _997 = fma(_967, cbModelParam._m0[27u].z, fma(_963, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _959));
        float _1001 = fma(_967, cbModelParam._m0[28u].z, fma(_963, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _959));
        float _1026 = _959 + _749;
        float _1027 = _963 + _750;
        float _1028 = _967 + _751;
        float _1038 = fma(_1028, cbModelParam._m0[26u].z, fma(_1027, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1026)) - _993;
        float _1039 = fma(_1028, cbModelParam._m0[27u].z, fma(_1027, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1026)) - _997;
        float _1040 = fma(_1028, cbModelParam._m0[28u].z, fma(_1027, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1026)) - _1001;
        float _1044 = inversesqrt(dot(vec3(_1038, _1039, _1040), vec3(_1038, _1039, _1040)));
        float _1057 = ((_1044 * _1038) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_993 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1058 = ((_1044 * _1039) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_997 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1059 = ((_1044 * _1040) / cbModelParam._m0[34u].z) + ((((((_1001 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1062 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1057, _1058, _1059), 0.0);
        vec4 _1069 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1057, _1058, _1059), 0.0);
        vec4 _1076 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1057, _1058, _1059), 0.0);
        vec4 _1083 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1057, _1058, _1059), 0.0);
        float _1096 = exp2((_1062.w + (-0.5)) * 20.0) * 2.0;
        float _1097 = _1096 * (_1062.x + (-0.5));
        float _1098 = _1096 * (_1062.y + (-0.5));
        float _1099 = _1096 * (_1062.z + (-0.5));
        float _1106 = exp2((_1069.w + (-0.5)) * 20.0) * 2.0;
        float _1107 = _1106 * (_1069.x + (-0.5));
        float _1108 = _1106 * (_1069.y + (-0.5));
        float _1109 = _1106 * (_1069.z + (-0.5));
        float _1116 = exp2((_1076.w + (-0.5)) * 20.0) * 2.0;
        float _1117 = _1116 * (_1076.x + (-0.5));
        float _1118 = _1116 * (_1076.y + (-0.5));
        float _1119 = _1116 * (_1076.z + (-0.5));
        float _1126 = exp2((_1083.w + (-0.5)) * 20.0) * 2.0;
        float _1127 = _1126 * (_1083.x + (-0.5));
        float _1128 = _1126 * (_1083.y + (-0.5));
        float _1129 = _1126 * (_1083.z + (-0.5));
        float _1130 = isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0));
        float _1131 = isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0));
        float _1132 = isnan(0.0) ? _1129 : (isnan(_1129) ? 0.0 : max(_1129, 0.0));
        float _1133 = _1097 * 0.5;
        float _1134 = _1107 * 0.5;
        float _1135 = _1117 * 0.5;
        float _1136 = dot(vec3(_1133, _1134, _1135), vec3(_1133, _1134, _1135));
        float _1141 = (_1136 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1136);
        float _1150 = (dot(vec3(_749, _750, _751), vec3(_1141 * _1133, _1141 * _1134, _1141 * _1135)) + 1.0) * 0.5;
        float _4028 = isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0));
        float _1160 = sqrt(((_1134 * _1134) + (_1133 * _1133)) + (_1135 * _1135)) / (_1130 + 9.9999997473787516355514526367188e-06);
        float _4039 = isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0));
        float _1161 = isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0));
        float _1162 = _1161 * 2.0;
        float _1166 = (1.0 - _1161) / (_1161 + 1.0);
        float _4050 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
        float _1167 = isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0));
        float _1176 = ((((1.0 - _1167) * (_1162 + 2.0)) * exp2(log2(isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0))) * (_1162 + 1.0))) + _1167) * _1130;
        float _1177 = _1098 * 0.5;
        float _1178 = _1108 * 0.5;
        float _1179 = _1118 * 0.5;
        float _1180 = dot(vec3(_1177, _1178, _1179), vec3(_1177, _1178, _1179));
        float _1185 = (_1180 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1180);
        float _1193 = (dot(vec3(_749, _750, _751), vec3(_1185 * _1177, _1185 * _1178, _1185 * _1179)) + 1.0) * 0.5;
        float _4061 = isnan(0.0) ? _1193 : (isnan(_1193) ? 0.0 : max(_1193, 0.0));
        float _1202 = sqrt(((_1178 * _1178) + (_1177 * _1177)) + (_1179 * _1179)) / (_1131 + 9.9999997473787516355514526367188e-06);
        float _4072 = isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0));
        float _1203 = isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0));
        float _1204 = _1203 * 2.0;
        float _1208 = (1.0 - _1203) / (_1203 + 1.0);
        float _4083 = isnan(0.0) ? _1208 : (isnan(_1208) ? 0.0 : max(_1208, 0.0));
        float _1209 = isnan(1.0) ? _4083 : (isnan(_4083) ? 1.0 : min(_4083, 1.0));
        float _1218 = ((((1.0 - _1209) * (_1204 + 2.0)) * exp2(log2(isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0))) * (_1204 + 1.0))) + _1209) * _1131;
        float _1219 = _1099 * 0.5;
        float _1220 = _1109 * 0.5;
        float _1221 = _1119 * 0.5;
        float _1222 = dot(vec3(_1219, _1220, _1221), vec3(_1219, _1220, _1221));
        float _1227 = (_1222 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1222);
        float _1235 = (dot(vec3(_749, _750, _751), vec3(_1227 * _1219, _1227 * _1220, _1227 * _1221)) + 1.0) * 0.5;
        float _4094 = isnan(0.0) ? _1235 : (isnan(_1235) ? 0.0 : max(_1235, 0.0));
        float _1244 = sqrt(((_1220 * _1220) + (_1219 * _1219)) + (_1221 * _1221)) / (_1132 + 9.9999997473787516355514526367188e-06);
        float _4105 = isnan(0.0) ? _1244 : (isnan(_1244) ? 0.0 : max(_1244, 0.0));
        float _1245 = isnan(1.0) ? _4105 : (isnan(_4105) ? 1.0 : min(_4105, 1.0));
        float _1246 = _1245 * 2.0;
        float _1250 = (1.0 - _1245) / (_1245 + 1.0);
        float _4116 = isnan(0.0) ? _1250 : (isnan(_1250) ? 0.0 : max(_1250, 0.0));
        float _1251 = isnan(1.0) ? _4116 : (isnan(_4116) ? 1.0 : min(_4116, 1.0));
        float _1260 = ((((1.0 - _1251) * (_1246 + 2.0)) * exp2(log2(isnan(1.0) ? _4094 : (isnan(_4094) ? 1.0 : min(_4094, 1.0))) * (_1246 + 1.0))) + _1251) * _1132;
        _1268 = _1099;
        _1270 = _1098;
        _1271 = _1097;
        _1272 = _1109;
        _1273 = _1108;
        _1274 = _1107;
        _1275 = _1119;
        _1276 = _1118;
        _1277 = _1117;
        _1278 = _1132;
        _1279 = _1131;
        _1280 = _1130;
        _1281 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1176 : (isnan(_1176) ? 0.0 : max(_1176, 0.0)));
        _1282 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1218 : (isnan(_1218) ? 0.0 : max(_1218, 0.0)));
        _1283 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1260 : (isnan(_1260) ? 0.0 : max(_1260, 0.0)));
    }
    else
    {
        _1268 = _1269;
        _1270 = _1269;
        _1271 = _1269;
        _1272 = _1269;
        _1273 = _1269;
        _1274 = _1269;
        _1275 = _1269;
        _1276 = _1269;
        _1277 = _1269;
        _1278 = _1269;
        _1279 = _1269;
        _1280 = _1269;
        _1281 = 0.0;
        _1282 = 0.0;
        _1283 = 0.0;
    }
    float _1576;
    float _1577;
    float _1578;
    float _1579;
    float _1580;
    float _1581;
    float _1582;
    float _1583;
    float _1584;
    float _1585;
    float _1586;
    float _1587;
    float _1588;
    float _1589;
    float _1590;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1307 = fma(_967, cbModelParam._m0[30u].z, fma(_963, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _959));
        float _1311 = fma(_967, cbModelParam._m0[31u].z, fma(_963, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _959));
        float _1315 = fma(_967, cbModelParam._m0[32u].z, fma(_963, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _959));
        float _1338 = _959 + _749;
        float _1339 = _963 + _750;
        float _1340 = _967 + _751;
        float _1350 = fma(_1340, cbModelParam._m0[30u].z, fma(_1339, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1338)) - _1307;
        float _1351 = fma(_1340, cbModelParam._m0[31u].z, fma(_1339, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1338)) - _1311;
        float _1352 = fma(_1340, cbModelParam._m0[32u].z, fma(_1339, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1338)) - _1315;
        float _1356 = inversesqrt(dot(vec3(_1350, _1351, _1352), vec3(_1350, _1351, _1352)));
        float _1369 = ((_1356 * _1350) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1307 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1370 = ((_1356 * _1351) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1311 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1371 = ((_1356 * _1352) / cbModelParam._m0[35u].z) + ((((((_1315 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1373 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1369, _1370, _1371), 0.0);
        vec4 _1380 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1369, _1370, _1371), 0.0);
        vec4 _1387 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1369, _1370, _1371), 0.0);
        vec4 _1394 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1369, _1370, _1371), 0.0);
        float _1406 = exp2((_1373.w + (-0.5)) * 20.0) * 2.0;
        float _1407 = _1406 * (_1373.x + (-0.5));
        float _1408 = _1406 * (_1373.y + (-0.5));
        float _1409 = _1406 * (_1373.z + (-0.5));
        float _1416 = exp2((_1380.w + (-0.5)) * 20.0) * 2.0;
        float _1417 = _1416 * (_1380.x + (-0.5));
        float _1418 = _1416 * (_1380.y + (-0.5));
        float _1419 = _1416 * (_1380.z + (-0.5));
        float _1426 = exp2((_1387.w + (-0.5)) * 20.0) * 2.0;
        float _1427 = _1426 * (_1387.x + (-0.5));
        float _1428 = _1426 * (_1387.y + (-0.5));
        float _1429 = _1426 * (_1387.z + (-0.5));
        float _1436 = exp2((_1394.w + (-0.5)) * 20.0) * 2.0;
        float _1437 = _1436 * (_1394.x + (-0.5));
        float _1438 = _1436 * (_1394.y + (-0.5));
        float _1439 = _1436 * (_1394.z + (-0.5));
        float _1440 = isnan(0.0) ? _1437 : (isnan(_1437) ? 0.0 : max(_1437, 0.0));
        float _1441 = isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0));
        float _1442 = isnan(0.0) ? _1439 : (isnan(_1439) ? 0.0 : max(_1439, 0.0));
        float _1443 = _1407 * 0.5;
        float _1444 = _1417 * 0.5;
        float _1445 = _1427 * 0.5;
        float _1446 = dot(vec3(_1443, _1444, _1445), vec3(_1443, _1444, _1445));
        float _1451 = (_1446 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1446);
        float _1459 = (dot(vec3(_749, _750, _751), vec3(_1451 * _1443, _1451 * _1444, _1451 * _1445)) + 1.0) * 0.5;
        float _4157 = isnan(0.0) ? _1459 : (isnan(_1459) ? 0.0 : max(_1459, 0.0));
        float _1468 = sqrt(((_1444 * _1444) + (_1443 * _1443)) + (_1445 * _1445)) / (_1440 + 9.9999997473787516355514526367188e-06);
        float _4168 = isnan(0.0) ? _1468 : (isnan(_1468) ? 0.0 : max(_1468, 0.0));
        float _1469 = isnan(1.0) ? _4168 : (isnan(_4168) ? 1.0 : min(_4168, 1.0));
        float _1470 = _1469 * 2.0;
        float _1474 = (1.0 - _1469) / (_1469 + 1.0);
        float _4179 = isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0));
        float _1475 = isnan(1.0) ? _4179 : (isnan(_4179) ? 1.0 : min(_4179, 1.0));
        float _1484 = ((((1.0 - _1475) * (_1470 + 2.0)) * exp2(log2(isnan(1.0) ? _4157 : (isnan(_4157) ? 1.0 : min(_4157, 1.0))) * (_1470 + 1.0))) + _1475) * _1440;
        float _1485 = _1408 * 0.5;
        float _1486 = _1418 * 0.5;
        float _1487 = _1428 * 0.5;
        float _1488 = dot(vec3(_1485, _1486, _1487), vec3(_1485, _1486, _1487));
        float _1493 = (_1488 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1488);
        float _1501 = (dot(vec3(_749, _750, _751), vec3(_1493 * _1485, _1493 * _1486, _1493 * _1487)) + 1.0) * 0.5;
        float _4190 = isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0));
        float _1510 = sqrt(((_1486 * _1486) + (_1485 * _1485)) + (_1487 * _1487)) / (_1441 + 9.9999997473787516355514526367188e-06);
        float _4201 = isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0));
        float _1511 = isnan(1.0) ? _4201 : (isnan(_4201) ? 1.0 : min(_4201, 1.0));
        float _1512 = _1511 * 2.0;
        float _1516 = (1.0 - _1511) / (_1511 + 1.0);
        float _4212 = isnan(0.0) ? _1516 : (isnan(_1516) ? 0.0 : max(_1516, 0.0));
        float _1517 = isnan(1.0) ? _4212 : (isnan(_4212) ? 1.0 : min(_4212, 1.0));
        float _1526 = ((((1.0 - _1517) * (_1512 + 2.0)) * exp2(log2(isnan(1.0) ? _4190 : (isnan(_4190) ? 1.0 : min(_4190, 1.0))) * (_1512 + 1.0))) + _1517) * _1441;
        float _1527 = _1409 * 0.5;
        float _1528 = _1419 * 0.5;
        float _1529 = _1429 * 0.5;
        float _1530 = dot(vec3(_1527, _1528, _1529), vec3(_1527, _1528, _1529));
        float _1535 = (_1530 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1530);
        float _1543 = (dot(vec3(_749, _750, _751), vec3(_1535 * _1527, _1535 * _1528, _1535 * _1529)) + 1.0) * 0.5;
        float _4223 = isnan(0.0) ? _1543 : (isnan(_1543) ? 0.0 : max(_1543, 0.0));
        float _1552 = sqrt(((_1528 * _1528) + (_1527 * _1527)) + (_1529 * _1529)) / (_1442 + 9.9999997473787516355514526367188e-06);
        float _4234 = isnan(0.0) ? _1552 : (isnan(_1552) ? 0.0 : max(_1552, 0.0));
        float _1553 = isnan(1.0) ? _4234 : (isnan(_4234) ? 1.0 : min(_4234, 1.0));
        float _1554 = _1553 * 2.0;
        float _1558 = (1.0 - _1553) / (_1553 + 1.0);
        float _4245 = isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0));
        float _1559 = isnan(1.0) ? _4245 : (isnan(_4245) ? 1.0 : min(_4245, 1.0));
        float _1568 = ((((1.0 - _1559) * (_1554 + 2.0)) * exp2(log2(isnan(1.0) ? _4223 : (isnan(_4223) ? 1.0 : min(_4223, 1.0))) * (_1554 + 1.0))) + _1559) * _1442;
        _1576 = _1409;
        _1577 = _1408;
        _1578 = _1407;
        _1579 = _1419;
        _1580 = _1418;
        _1581 = _1417;
        _1582 = _1429;
        _1583 = _1428;
        _1584 = _1427;
        _1585 = _1442;
        _1586 = _1441;
        _1587 = _1440;
        _1588 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0)));
        _1589 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1526 : (isnan(_1526) ? 0.0 : max(_1526, 0.0)));
        _1590 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1568 : (isnan(_1568) ? 0.0 : max(_1568, 0.0)));
    }
    else
    {
        _1576 = _1269;
        _1577 = _1269;
        _1578 = _1269;
        _1579 = _1269;
        _1580 = _1269;
        _1581 = _1269;
        _1582 = _1269;
        _1583 = _1269;
        _1584 = _1269;
        _1585 = _1269;
        _1586 = _1269;
        _1587 = _1269;
        _1588 = 0.0;
        _1589 = 0.0;
        _1590 = 0.0;
    }
    float _1600 = (cbModelParam._m0[1u].x * (_1588 - _1281)) + _1281;
    float _1601 = (cbModelParam._m0[1u].x * (_1589 - _1282)) + _1282;
    float _1602 = (cbModelParam._m0[1u].x * (_1590 - _1283)) + _1283;
    float _1623 = fma(_1602, cbSceneParam._m0[89u].z, fma(_1601, cbSceneParam._m0[89u].y, _1600 * cbSceneParam._m0[89u].x));
    float _1626 = fma(_1602, cbSceneParam._m0[90u].z, fma(_1601, cbSceneParam._m0[90u].y, _1600 * cbSceneParam._m0[90u].x));
    float _1629 = fma(_1602, cbSceneParam._m0[91u].z, fma(_1601, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1600));
    float _1644 = _906 * 0.5;
    float _1645 = _907 * 0.5;
    float _1646 = _908 * 0.5;
    float _1647 = dot(vec4(_1644, _1645, _1646, 1.0), vec4(_1578, _1581, _1584, _1587));
    float _1650 = dot(vec4(_1644, _1645, _1646, 1.0), vec4(_1577, _1580, _1583, _1586));
    float _1653 = dot(vec4(_1644, _1645, _1646, 1.0), vec4(_1576, _1579, _1582, _1585));
    float _1687;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1660 = dot(vec4(_1644, _1645, _1646, 1.0), vec4(_1268, _1272, _1275, _1278));
        float _1664 = dot(vec4(_1644, _1645, _1646, 1.0), vec4(_1270, _1273, _1276, _1279));
        float _1668 = dot(vec4(_1644, _1645, _1646, 1.0), vec4(_1271, _1274, _1277, _1280));
        float _1675 = dot(vec4(cbModelParam._m0[39u]), vec4(_1644, _1645, _1646, 1.0));
        _1687 = dot(vec3(isnan(0.0) ? _1668 : (isnan(_1668) ? 0.0 : max(_1668, 0.0)), isnan(0.0) ? _1664 : (isnan(_1664) ? 0.0 : max(_1664, 0.0)), isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1675) ? 0.0 : (isnan(0.0) ? _1675 : max(0.0, _1675))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1687 = 1.0;
    }
    float _1698;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1689 = dot(vec4(cbModelParam._m0[40u]), vec4(_1644, _1645, _1646, 1.0));
        _1698 = dot(vec3(isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0)), isnan(0.0) ? _1650 : (isnan(_1650) ? 0.0 : max(_1650, 0.0)), isnan(0.0) ? _1653 : (isnan(_1653) ? 0.0 : max(_1653, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1689) ? 0.0 : (isnan(0.0) ? _1689 : max(0.0, _1689))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1698 = 1.0;
    }
    float _1702 = (_1698 * cbModelParam._m0[1u].x) + (_1687 * (1.0 - cbModelParam._m0[1u].x));
    float _1712 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _752);
    float _1713 = isnan(_1712) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1712 : min(cbModelParam._m0[25u].z, _1712));
    float _1795;
    float _1797;
    float _1799;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1762 = fma(_967, cbModelParam._m0[13u].z, fma(_963, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _959)) + cbModelParam._m0[13u].w;
        float _1766 = fma(_967, cbModelParam._m0[14u].z, fma(_963, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _959)) + cbModelParam._m0[14u].w;
        float _1770 = fma(_967, cbModelParam._m0[15u].z, fma(_963, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _959)) + cbModelParam._m0[15u].w;
        float _1773 = fma(_908, cbModelParam._m0[13u].z, fma(_907, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _906));
        float _1776 = fma(_908, cbModelParam._m0[14u].z, fma(_907, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _906));
        float _1779 = fma(_908, cbModelParam._m0[15u].z, fma(_907, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _906));
        float _1807;
        if (_1773 > 0.0)
        {
            _1807 = abs((1.0 - _1762) / _1773);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1773 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1762 + 1.0) / _1773);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1807 = frontier_phi_14_12_ladder;
        }
        float _1978;
        if (_1776 > 0.0)
        {
            _1978 = abs((1.0 - _1766) / _1776);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1776 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1766 + 1.0) / _1776);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1978 = frontier_phi_23_19_ladder;
        }
        float _2273;
        if (_1779 > 0.0)
        {
            _2273 = abs((1.0 - _1770) / _1779);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1779 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1770 + 1.0) / _1779);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2273 = frontier_phi_35_30_ladder;
        }
        float _2275 = isnan(_1978) ? _1807 : (isnan(_1807) ? _1978 : min(_1807, _1978));
        float _2276 = isnan(_2273) ? _2275 : (isnan(_2275) ? _2273 : min(_2275, _2273));
        float _2280 = (_2276 * _1773) + _1762;
        float _2281 = (_2276 * _1776) + _1766;
        float _2282 = (_2276 * _1779) + _1770;
        float _2283 = _2276 * 9.9999997473787516355514526367188e-05;
        float _2285 = (-1.0) - _2283;
        float _2287 = _2283 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2282 > _2287) || ((_2282 < _2285) || ((_2281 > _2287) || ((_2281 < _2285) || ((_2280 < _2285) || (_2280 > _2287))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2427 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2282, cbModelParam._m0[9u].z, fma(_2281, cbModelParam._m0[9u].y, _2280 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2282, cbModelParam._m0[10u].z, fma(_2281, cbModelParam._m0[10u].y, _2280 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2282, cbModelParam._m0[11u].z, fma(_2281, cbModelParam._m0[11u].y, _2280 * cbModelParam._m0[11u].x))), _1713);
            frontier_phi_13_35_ladder = _2427.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2427.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2427.x * cbModelParam._m0[1u].y;
        }
        _1795 = frontier_phi_13_35_ladder_2;
        _1797 = frontier_phi_13_35_ladder_1;
        _1799 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1783 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_906, _907, _908), _1713);
        _1795 = _1783.x * cbModelParam._m0[1u].y;
        _1797 = _1783.y * cbModelParam._m0[1u].y;
        _1799 = _1783.z * cbModelParam._m0[1u].y;
    }
    float _1803 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _752);
    float _1804 = isnan(_1803) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1803 : min(cbModelParam._m0[25u].w, _1803));
    float _1895;
    float _1897;
    float _1899;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1859 = fma(_967, cbModelParam._m0[21u].z, fma(_963, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _959)) + cbModelParam._m0[21u].w;
        float _1863 = fma(_967, cbModelParam._m0[22u].z, fma(_963, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _959)) + cbModelParam._m0[22u].w;
        float _1867 = fma(_967, cbModelParam._m0[23u].z, fma(_963, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _959)) + cbModelParam._m0[23u].w;
        float _1870 = fma(_908, cbModelParam._m0[21u].z, fma(_907, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _906));
        float _1873 = fma(_908, cbModelParam._m0[22u].z, fma(_907, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _906));
        float _1876 = fma(_908, cbModelParam._m0[23u].z, fma(_907, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _906));
        float _1983;
        if (_1870 > 0.0)
        {
            _1983 = abs((1.0 - _1859) / _1870);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1870 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1859 + 1.0) / _1870);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1983 = frontier_phi_25_21_ladder;
        }
        float _2300;
        if (_1873 > 0.0)
        {
            _2300 = abs((1.0 - _1863) / _1873);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1873 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1863 + 1.0) / _1873);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2300 = frontier_phi_37_32_ladder;
        }
        float _2627;
        if (_1876 > 0.0)
        {
            _2627 = abs((1.0 - _1867) / _1876);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1876 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1867 + 1.0) / _1876);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2627 = frontier_phi_47_44_ladder;
        }
        float _2629 = isnan(_2300) ? _1983 : (isnan(_1983) ? _2300 : min(_1983, _2300));
        float _2630 = isnan(_2627) ? _2629 : (isnan(_2629) ? _2627 : min(_2629, _2627));
        float _2634 = (_2630 * _1870) + _1859;
        float _2635 = (_2630 * _1873) + _1863;
        float _2636 = (_2630 * _1876) + _1867;
        float _2637 = _2630 * 9.9999997473787516355514526367188e-05;
        float _2638 = (-1.0) - _2637;
        float _2640 = _2637 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2636 > _2640) || ((_2636 < _2638) || ((_2635 > _2640) || ((_2635 < _2638) || ((_2634 < _2638) || (_2634 > _2640))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2754 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2636, cbModelParam._m0[17u].z, fma(_2635, cbModelParam._m0[17u].y, _2634 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2636, cbModelParam._m0[18u].z, fma(_2635, cbModelParam._m0[18u].y, _2634 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2636, cbModelParam._m0[19u].z, fma(_2635, cbModelParam._m0[19u].y, _2634 * cbModelParam._m0[19u].x))), _1804);
            frontier_phi_22_47_ladder = _2754.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2754.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2754.x * cbModelParam._m0[1u].z;
        }
        _1895 = frontier_phi_22_47_ladder_2;
        _1897 = frontier_phi_22_47_ladder_1;
        _1899 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1879 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_906, _907, _908), _1804);
        _1895 = _1879.x * cbModelParam._m0[1u].z;
        _1897 = _1879.y * cbModelParam._m0[1u].z;
        _1899 = _1879.z * cbModelParam._m0[1u].z;
    }
    float _1911 = ((((1.0 - _927) * ((_914 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_927 * _914)) * _898;
    float _1912 = _1911 * ((cbModelParam._m0[1u].w * (_1895 - _1795)) + _1795);
    float _1913 = _1911 * ((cbModelParam._m0[1u].w * (_1897 - _1797)) + _1797);
    float _1914 = _1911 * ((cbModelParam._m0[1u].w * (_1899 - _1799)) + _1799);
    float _1917 = fma(_1914, cbSceneParam._m0[89u].z, fma(_1913, cbSceneParam._m0[89u].y, _1912 * cbSceneParam._m0[89u].x));
    float _1920 = fma(_1914, cbSceneParam._m0[90u].z, fma(_1913, cbSceneParam._m0[90u].y, _1912 * cbSceneParam._m0[90u].x));
    float _1923 = fma(_1914, cbSceneParam._m0[91u].z, fma(_1913, cbSceneParam._m0[91u].y, _1912 * cbSceneParam._m0[91u].x));
    float _1957 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1961 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1965 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1969 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1970 = _1957 / _1969;
    float _1971 = _1961 / _1969;
    float _1972 = _1965 / _1969;
    float _2119;
    float _2120;
    float _2121;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1999 = ((uint(_1972 > cbSceneParam._m0[59u].y) + uint(_1972 > cbSceneParam._m0[59u].x)) + uint(_1972 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2000 = _1999 + 43u;
        uint _2008 = _1999 + 44u;
        uint _2016 = _1999 + 45u;
        uint _2024 = _1999 + 46u;
        float _2035 = fma(_1969, cbSceneParam._m0[_2000].w, fma(_1965, cbSceneParam._m0[_2000].z, fma(_1961, cbSceneParam._m0[_2000].y, _1957 * cbSceneParam._m0[_2000].x)));
        float _2039 = fma(_1969, cbSceneParam._m0[_2008].w, fma(_1965, cbSceneParam._m0[_2008].z, fma(_1961, cbSceneParam._m0[_2008].y, _1957 * cbSceneParam._m0[_2008].x)));
        float _2047 = fma(_1969, cbSceneParam._m0[_2024].w, fma(_1965, cbSceneParam._m0[_2024].z, fma(_1961, cbSceneParam._m0[_2024].y, _1957 * cbSceneParam._m0[_2024].x)));
        float _2052 = cbSceneParam._m0[33u].z * _2047;
        float _2054 = cbSceneParam._m0[33u].w * _2047;
        float _2057 = fma(_1969, cbSceneParam._m0[_2016].w, fma(_1965, cbSceneParam._m0[_2016].z, fma(_1961, cbSceneParam._m0[_2016].y, _1957 * cbSceneParam._m0[_2016].x))) / _2047;
        float _2105 = (cbSceneParam._m0[33u].x - sqrt(((_1971 * _1971) + (_1970 * _1970)) + (_1972 * _1972))) * cbSceneParam._m0[33u].y;
        float _4371 = isnan(0.0) ? _2105 : (isnan(_2105) ? 0.0 : max(_2105, 0.0));
        float _2112 = (isnan(1.0) ? _4371 : (isnan(_4371) ? 1.0 : min(_4371, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2052 + _2035) / _2047, (_2054 + _2039) / _2047), _2057), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2054 + _2035) / _2047, (_2039 - _2052) / _2047), _2057), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2035 - _2052) / _2047, (_2039 - _2054) / _2047), _2057), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2035 - _2054) / _2047, (_2052 + _2039) / _2047), _2057), 0.0)).x), vec4(0.25)));
        _2119 = 1.0 - (_2112 * cbSceneParam._m0[34u].x);
        _2120 = 1.0 - (_2112 * cbSceneParam._m0[34u].y);
        _2121 = 1.0 - (_2112 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2119 = 1.0;
        _2120 = 1.0;
        _2121 = 1.0;
    }
    float _2185;
    float _2187;
    float _2189;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2173 = fma(_1969, cbSceneParam._m0[63u].w, fma(_1965, cbSceneParam._m0[63u].z, fma(_1961, cbSceneParam._m0[63u].y, _1957 * cbSceneParam._m0[63u].x)));
        float _2174 = fma(_1969, cbSceneParam._m0[60u].w, fma(_1965, cbSceneParam._m0[60u].z, fma(_1961, cbSceneParam._m0[60u].y, _1957 * cbSceneParam._m0[60u].x))) / _2173;
        float _2175 = fma(_1969, cbSceneParam._m0[61u].w, fma(_1965, cbSceneParam._m0[61u].z, fma(_1961, cbSceneParam._m0[61u].y, _1957 * cbSceneParam._m0[61u].x))) / _2173;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2174 >= cbSceneParam._m0[64u].x) && (_2175 >= cbSceneParam._m0[64u].y)) && (_2174 <= cbSceneParam._m0[64u].z)) && (_2175 <= cbSceneParam._m0[64u].w))
        {
            float _2313 = fma(_1969, cbSceneParam._m0[62u].w, fma(_1965, cbSceneParam._m0[62u].z, fma(_1961, cbSceneParam._m0[62u].y, _1957 * cbSceneParam._m0[62u].x))) / _2173;
            float _2317 = isnan(cbSceneParam._m0[41u].w) ? _2313 : (isnan(_2313) ? cbSceneParam._m0[41u].w : max(_2313, cbSceneParam._m0[41u].w));
            float _2360 = (cbSceneParam._m0[33u].x - sqrt(((_1971 * _1971) + (_1970 * _1970)) + (_1972 * _1972))) * cbSceneParam._m0[33u].y;
            float _4387 = isnan(0.0) ? _2360 : (isnan(_2360) ? 0.0 : max(_2360, 0.0));
            float _2367 = (isnan(1.0) ? _4387 : (isnan(_4387) ? 1.0 : min(_4387, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2174, cbSceneParam._m0[33u].w + _2175), _2317), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2174, _2175 - cbSceneParam._m0[33u].z), _2317), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2174 - cbSceneParam._m0[33u].z, _2175 - cbSceneParam._m0[33u].w), _2317), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2174 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2175), _2317), 0.0)).x), vec4(0.25)));
            float _2371 = 1.0 - (_2367 * cbSceneParam._m0[34u].x);
            float _2372 = 1.0 - (_2367 * cbSceneParam._m0[34u].y);
            float _2373 = 1.0 - (_2367 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2373) ? _2121 : (isnan(_2121) ? _2373 : min(_2121, _2373));
            frontier_phi_34_33_ladder_1 = isnan(_2372) ? _2120 : (isnan(_2120) ? _2372 : min(_2120, _2372));
            frontier_phi_34_33_ladder_2 = isnan(_2371) ? _2119 : (isnan(_2119) ? _2371 : min(_2119, _2371));
        }
        else
        {
            frontier_phi_34_33_ladder = _2121;
            frontier_phi_34_33_ladder_1 = _2120;
            frontier_phi_34_33_ladder_2 = _2119;
        }
        _2185 = frontier_phi_34_33_ladder_2;
        _2187 = frontier_phi_34_33_ladder_1;
        _2189 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2185 = _2119;
        _2187 = _2120;
        _2189 = _2121;
    }
    uvec4 _2194 = floatBitsToUint(cbInstanceData._m0[_251 + 5u]);
    uint _2196 = _2194.x * 14u;
    uint _2197 = _2196 + 13u;
    float _2204 = _898 + (-1.0);
    float _2209 = (cbLight._m0[_2197].x * _2204) + 1.0;
    float _2210 = (cbLight._m0[_2197].y * _2204) + 1.0;
    float _2211 = (cbLight._m0[_2197].z * _2204) + 1.0;
    float _2212 = (cbLight._m0[_2197].w * _2204) + 1.0;
    uint _2213 = _2196 + 5u;
    float _2219 = isnan(1.0) ? _2210 : (isnan(_2210) ? 1.0 : min(_2210, 1.0));
    uint _2223 = _2196 + 4u;
    float _2232 = isnan(1.0) ? _2209 : (isnan(_2209) ? 1.0 : min(_2209, 1.0));
    uint _2236 = _2196 | 1u;
    float _2247 = dot(vec3(cbLight._m0[_2196].xyz), vec3(_749, _750, _751));
    float _2250 = dot(vec3(cbLight._m0[_2236].xyz), vec3(_749, _750, _751));
    float _4423 = isnan(0.0) ? _2247 : (isnan(_2247) ? 0.0 : max(_2247, 0.0));
    float _4434 = isnan(0.0) ? _2250 : (isnan(_2250) ? 0.0 : max(_2250, 0.0));
    float _2255 = (isnan(1.0) ? _4423 : (isnan(_4423) ? 1.0 : min(_4423, 1.0))) * 0.3183098733425140380859375;
    float _2257 = (isnan(1.0) ? _4434 : (isnan(_4434) ? 1.0 : min(_4434, 1.0))) * 0.3183098733425140380859375;
    float _2264 = ((cbLight._m0[_2213].x * _2219) * _2257) + (((cbLight._m0[_2223].x * _2185) * _2232) * _2255);
    float _2265 = ((_2219 * cbLight._m0[_2213].y) * _2257) + (((cbLight._m0[_2223].y * _2187) * _2232) * _2255);
    float _2266 = ((_2219 * cbLight._m0[_2213].z) * _2257) + (((cbLight._m0[_2223].z * _2189) * _2232) * _2255);
    uvec4 _2270 = floatBitsToUint(cbLight._m0[_2196 + 12u]);
    bool _2272 = _2270.x == 0u;
    float _2374;
    float _2376;
    float _2378;
    if (_2272)
    {
        _2374 = _2264;
        _2376 = _2265;
        _2378 = _2266;
    }
    else
    {
        uint _2382 = _2196 + 6u;
        float _2398 = (dot(vec3(cbLight._m0[_2196 + 2u].xyz), vec3(_749, _750, _751)) * 0.5) + 0.5;
        float _2399 = _2398 * _2398;
        float _4445 = isnan(0.0) ? _2399 : (isnan(_2399) ? 0.0 : max(_2399, 0.0));
        float _2400 = isnan(1.0) ? _4445 : (isnan(_4445) ? 1.0 : min(_4445, 1.0));
        float _2401 = isnan(1.0) ? _2211 : (isnan(_2211) ? 1.0 : min(_2211, 1.0));
        _2374 = (((cbLight._m0[_2382].x * 0.3183098733425140380859375) * _2400) * _2401) + _2264;
        _2376 = (((cbLight._m0[_2382].y * 0.3183098733425140380859375) * _2400) * _2401) + _2265;
        _2378 = (((cbLight._m0[_2382].z * 0.3183098733425140380859375) * _2400) * _2401) + _2266;
    }
    bool _2381 = _2270.y == 0u;
    float _2436;
    float _2438;
    float _2440;
    if (_2381)
    {
        _2436 = _2374;
        _2438 = _2376;
        _2440 = _2378;
    }
    else
    {
        uint _2598 = _2196 + 7u;
        float _2614 = (dot(vec3(cbLight._m0[_2196 + 3u].xyz), vec3(_749, _750, _751)) * 0.5) + 0.5;
        float _2615 = _2614 * _2614;
        float _4461 = isnan(0.0) ? _2615 : (isnan(_2615) ? 0.0 : max(_2615, 0.0));
        float _2616 = isnan(1.0) ? _4461 : (isnan(_4461) ? 1.0 : min(_4461, 1.0));
        float _2617 = isnan(1.0) ? _2212 : (isnan(_2212) ? 1.0 : min(_2212, 1.0));
        _2436 = (((cbLight._m0[_2598].x * 0.3183098733425140380859375) * _2616) * _2617) + _2374;
        _2438 = (((cbLight._m0[_2598].y * 0.3183098733425140380859375) * _2616) * _2617) + _2376;
        _2440 = (((cbLight._m0[_2598].z * 0.3183098733425140380859375) * _2616) * _2617) + _2378;
    }
    uint _2443 = _2196 + 8u;
    float _2456 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2196].w)) * _752) * 0.949999988079071044921875);
    float _2457 = _2456 * _2456;
    float _2458 = cbLight._m0[_2196].x + _827;
    float _2459 = cbLight._m0[_2196].y + _828;
    float _2460 = cbLight._m0[_2196].z + _829;
    float _2464 = inversesqrt(dot(vec3(_2458, _2459, _2460), vec3(_2458, _2459, _2460)));
    float _2465 = _2464 * _2458;
    float _2466 = _2464 * _2459;
    float _2467 = _2464 * _2460;
    float _2468 = dot(vec3(_749, _750, _751), vec3(cbLight._m0[_2196].xyz));
    float _4477 = isnan(0.0) ? _2468 : (isnan(_2468) ? 0.0 : max(_2468, 0.0));
    float _2471 = isnan(1.0) ? _4477 : (isnan(_4477) ? 1.0 : min(_4477, 1.0));
    float _4488 = isnan(0.0) ? _899 : (isnan(_899) ? 0.0 : max(_899, 0.0));
    float _2472 = isnan(1.0) ? _4488 : (isnan(_4488) ? 1.0 : min(_4488, 1.0));
    float _2473 = dot(vec3(_749, _750, _751), vec3(_2465, _2466, _2467));
    float _4499 = isnan(0.0) ? _2473 : (isnan(_2473) ? 0.0 : max(_2473, 0.0));
    float _2476 = isnan(1.0) ? _4499 : (isnan(_4499) ? 1.0 : min(_4499, 1.0));
    float _2477 = dot(vec3(cbLight._m0[_2196].xyz), vec3(_2465, _2466, _2467));
    float _4510 = isnan(0.0) ? _2477 : (isnan(_2477) ? 0.0 : max(_2477, 0.0));
    float _2481 = _2457 * _2457;
    float _2485 = ((_2476 * _2476) * (_2481 + (-1.0))) + 1.0;
    float _2496 = (exp2(log2(1.0 - (isnan(1.0) ? _4510 : (isnan(_4510) ? 1.0 : min(_4510, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2497 = 1.0 - _2457;
    float _2508 = (0.5 / (((_2472 * ((_2471 * _2497) + _2457)) + 9.9999999392252902907785028219223e-09) + (((_2472 * _2497) + _2457) * _2471))) * _2471;
    float _4521 = isnan(0.0) ? _2508 : (isnan(_2508) ? 0.0 : max(_2508, 0.0));
    float _2510 = (isnan(1.0) ? _4521 : (isnan(_4521) ? 1.0 : min(_4521, 1.0))) * (_2481 / ((_2485 * _2485) * 3.141590118408203125));
    uint _2524 = _2196 + 9u;
    float _2535 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2236].w)) * _752) * 0.949999988079071044921875);
    float _2536 = _2535 * _2535;
    float _2537 = cbLight._m0[_2236].x + _827;
    float _2538 = cbLight._m0[_2236].y + _828;
    float _2539 = cbLight._m0[_2236].z + _829;
    float _2543 = inversesqrt(dot(vec3(_2537, _2538, _2539), vec3(_2537, _2538, _2539)));
    float _2544 = _2543 * _2537;
    float _2545 = _2543 * _2538;
    float _2546 = _2543 * _2539;
    float _2547 = dot(vec3(_749, _750, _751), vec3(cbLight._m0[_2236].xyz));
    float _4532 = isnan(0.0) ? _2547 : (isnan(_2547) ? 0.0 : max(_2547, 0.0));
    float _2550 = isnan(1.0) ? _4532 : (isnan(_4532) ? 1.0 : min(_4532, 1.0));
    float _2551 = dot(vec3(_749, _750, _751), vec3(_2544, _2545, _2546));
    float _4543 = isnan(0.0) ? _2551 : (isnan(_2551) ? 0.0 : max(_2551, 0.0));
    float _2554 = isnan(1.0) ? _4543 : (isnan(_4543) ? 1.0 : min(_4543, 1.0));
    float _2555 = dot(vec3(cbLight._m0[_2236].xyz), vec3(_2544, _2545, _2546));
    float _4554 = isnan(0.0) ? _2555 : (isnan(_2555) ? 0.0 : max(_2555, 0.0));
    float _2559 = _2536 * _2536;
    float _2563 = ((_2554 * _2554) * (_2559 + (-1.0))) + 1.0;
    float _2572 = (exp2(log2(1.0 - (isnan(1.0) ? _4554 : (isnan(_4554) ? 1.0 : min(_4554, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2573 = 1.0 - _2536;
    float _2583 = (0.5 / (((_2472 * ((_2550 * _2573) + _2536)) + 9.9999999392252902907785028219223e-09) + (((_2472 * _2573) + _2536) * _2550))) * _2550;
    float _4565 = isnan(0.0) ? _2583 : (isnan(_2583) ? 0.0 : max(_2583, 0.0));
    float _2585 = (isnan(1.0) ? _4565 : (isnan(_4565) ? 1.0 : min(_4565, 1.0))) * (_2559 / ((_2563 * _2563) * 3.141590118408203125));
    float _2595 = (((_2572 * cbLight._m0[_2524].x) * _2585) * _2219) + ((((cbLight._m0[_2443].x * _2185) * _2496) * _2510) * _2232);
    float _2596 = (((_2572 * cbLight._m0[_2524].y) * _2585) * _2219) + ((((cbLight._m0[_2443].y * _2187) * _2496) * _2510) * _2232);
    float _2597 = (((_2572 * cbLight._m0[_2524].z) * _2585) * _2219) + ((((cbLight._m0[_2443].z * _2189) * _2496) * _2510) * _2232);
    float _2653;
    float _2655;
    float _2657;
    if (_2272)
    {
        _2653 = _2595;
        _2655 = _2596;
        _2657 = _2597;
    }
    else
    {
        uint _2659 = _2196 + 2u;
        uint _2663 = _2196 + 10u;
        float _2677 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2659].w)) * _752) * 0.949999988079071044921875);
        float _2678 = _2677 * _2677;
        float _2679 = cbLight._m0[_2659].x + _827;
        float _2680 = cbLight._m0[_2659].y + _828;
        float _2681 = cbLight._m0[_2659].z + _829;
        float _2685 = inversesqrt(dot(vec3(_2679, _2680, _2681), vec3(_2679, _2680, _2681)));
        float _2686 = _2685 * _2679;
        float _2687 = _2685 * _2680;
        float _2688 = _2685 * _2681;
        float _2689 = dot(vec3(_749, _750, _751), vec3(cbLight._m0[_2659].xyz));
        float _4576 = isnan(0.0) ? _2689 : (isnan(_2689) ? 0.0 : max(_2689, 0.0));
        float _2692 = isnan(1.0) ? _4576 : (isnan(_4576) ? 1.0 : min(_4576, 1.0));
        float _2693 = dot(vec3(_749, _750, _751), vec3(_2686, _2687, _2688));
        float _4587 = isnan(0.0) ? _2693 : (isnan(_2693) ? 0.0 : max(_2693, 0.0));
        float _2696 = isnan(1.0) ? _4587 : (isnan(_4587) ? 1.0 : min(_4587, 1.0));
        float _2697 = dot(vec3(cbLight._m0[_2659].xyz), vec3(_2686, _2687, _2688));
        float _4598 = isnan(0.0) ? _2697 : (isnan(_2697) ? 0.0 : max(_2697, 0.0));
        float _2701 = _2678 * _2678;
        float _2705 = ((_2696 * _2696) * (_2701 + (-1.0))) + 1.0;
        float _2714 = (exp2(log2(1.0 - (isnan(1.0) ? _4598 : (isnan(_4598) ? 1.0 : min(_4598, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2715 = 1.0 - _2678;
        float _2725 = (0.5 / (((_2472 * ((_2692 * _2715) + _2678)) + 9.9999999392252902907785028219223e-09) + (((_2472 * _2715) + _2678) * _2692))) * _2692;
        float _4609 = isnan(0.0) ? _2725 : (isnan(_2725) ? 0.0 : max(_2725, 0.0));
        float _2727 = (isnan(1.0) ? _4609 : (isnan(_4609) ? 1.0 : min(_4609, 1.0))) * (_2701 / ((_2705 * _2705) * 3.141590118408203125));
        float _2728 = isnan(1.0) ? _2211 : (isnan(_2211) ? 1.0 : min(_2211, 1.0));
        _2653 = (((_2714 * cbLight._m0[_2663].x) * _2727) * _2728) + _2595;
        _2655 = (((_2714 * cbLight._m0[_2663].y) * _2727) * _2728) + _2596;
        _2657 = (((_2714 * cbLight._m0[_2663].z) * _2727) * _2728) + _2597;
    }
    float _2759;
    float _2761;
    float _2763;
    if (_2381)
    {
        _2759 = _2653;
        _2761 = _2655;
        _2763 = _2657;
    }
    else
    {
        uint _2770 = _2196 + 3u;
        uint _2774 = _2196 + 11u;
        float _2788 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2770].w)) * _752) * 0.949999988079071044921875);
        float _2789 = _2788 * _2788;
        float _2790 = cbLight._m0[_2770].x + _827;
        float _2791 = cbLight._m0[_2770].y + _828;
        float _2792 = cbLight._m0[_2770].z + _829;
        float _2796 = inversesqrt(dot(vec3(_2790, _2791, _2792), vec3(_2790, _2791, _2792)));
        float _2797 = _2796 * _2790;
        float _2798 = _2796 * _2791;
        float _2799 = _2796 * _2792;
        float _2800 = dot(vec3(_749, _750, _751), vec3(cbLight._m0[_2770].xyz));
        float _4625 = isnan(0.0) ? _2800 : (isnan(_2800) ? 0.0 : max(_2800, 0.0));
        float _2803 = isnan(1.0) ? _4625 : (isnan(_4625) ? 1.0 : min(_4625, 1.0));
        float _2804 = dot(vec3(_749, _750, _751), vec3(_2797, _2798, _2799));
        float _4636 = isnan(0.0) ? _2804 : (isnan(_2804) ? 0.0 : max(_2804, 0.0));
        float _2807 = isnan(1.0) ? _4636 : (isnan(_4636) ? 1.0 : min(_4636, 1.0));
        float _2808 = dot(vec3(cbLight._m0[_2770].xyz), vec3(_2797, _2798, _2799));
        float _4647 = isnan(0.0) ? _2808 : (isnan(_2808) ? 0.0 : max(_2808, 0.0));
        float _2812 = _2789 * _2789;
        float _2816 = ((_2807 * _2807) * (_2812 + (-1.0))) + 1.0;
        float _2825 = (exp2(log2(1.0 - (isnan(1.0) ? _4647 : (isnan(_4647) ? 1.0 : min(_4647, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2826 = 1.0 - _2789;
        float _2836 = (0.5 / (((_2472 * ((_2803 * _2826) + _2789)) + 9.9999999392252902907785028219223e-09) + (((_2472 * _2826) + _2789) * _2803))) * _2803;
        float _4658 = isnan(0.0) ? _2836 : (isnan(_2836) ? 0.0 : max(_2836, 0.0));
        float _2838 = (isnan(1.0) ? _4658 : (isnan(_4658) ? 1.0 : min(_4658, 1.0))) * (_2812 / ((_2816 * _2816) * 3.141590118408203125));
        float _2839 = isnan(1.0) ? _2212 : (isnan(_2212) ? 1.0 : min(_2212, 1.0));
        _2759 = (((_2825 * cbLight._m0[_2774].x) * _2838) * _2839) + _2653;
        _2761 = (((_2825 * cbLight._m0[_2774].y) * _2838) * _2839) + _2655;
        _2763 = (((_2825 * cbLight._m0[_2774].z) * _2838) * _2839) + _2657;
    }
    float _2905;
    float _2907;
    float _2909;
    float _2911;
    float _2913;
    float _2915;
    if (_2194.y == 0u)
    {
        uvec4 _2860 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2861 = _2860.x;
        uint _2872 = uint((float(_2860.y) * floor(float(uint(cbSceneParam._m0[85u].y * _836) / _2861))) + floor(float(uint(cbSceneParam._m0[85u].x * _835) / _2861)));
        float _2882 = (log2(_1972 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2883 = isnan(0.0) ? _2882 : (isnan(_2882) ? 0.0 : max(_2882, 0.0));
        uint _2886 = uint(isnan(14.0) ? _2883 : (isnan(_2883) ? 14.0 : min(_2883, 14.0)));
        uvec4 _2891 = texelFetch(g_lightClusterGridBuffer, int(((_2886 << 2u) + (_2872 << 6u)) >> 2u));
        uint _2892 = _2891.x;
        uint _2893 = _2860.z;
        float _2972;
        float _2974;
        float _2976;
        float _2978;
        float _2980;
        float _2982;
        if (((((1u << ((_2893 >> 4u) & 15u)) + 4294967295u) & _2892) == 0u) || ((_2893 & 240u) == 0u))
        {
            _2972 = 0.0;
            _2974 = 0.0;
            _2976 = 0.0;
            _2978 = 0.0;
            _2980 = 0.0;
            _2982 = 0.0;
        }
        else
        {
            float _2973;
            float _2975;
            float _2977;
            float _2979;
            float _2981;
            float _2983;
            float _3117 = 0.0;
            float _3118 = 0.0;
            float _3119 = 0.0;
            float _3120 = 0.0;
            float _3121 = 0.0;
            float _3122 = 0.0;
            uint _3123 = 0u;
            uint _3132;
            bool _3133;
            for (;;)
            {
                _3132 = texelFetch(g_lightClassification, int((((_2886 << 5u) + (_2872 << 9u)) + (_3123 << 2u)) >> 2u)).x;
                _3133 = _3132 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3133)
                {
                    frontier_phi_66_pred = _3122;
                    frontier_phi_66_pred_1 = _3121;
                    frontier_phi_66_pred_2 = _3120;
                    frontier_phi_66_pred_3 = _3119;
                    frontier_phi_66_pred_4 = _3118;
                    frontier_phi_66_pred_5 = _3117;
                }
                else
                {
                    float _3241;
                    float _3242;
                    float _3243;
                    float _3244;
                    float _3245;
                    float _3246;
                    uint _3247;
                    _3241 = _3117;
                    _3242 = _3118;
                    _3243 = _3119;
                    _3244 = _3120;
                    _3245 = _3121;
                    _3246 = _3122;
                    _3247 = _3132;
                    float _3173;
                    float _3174;
                    float _3175;
                    float _3176;
                    float _3177;
                    float _3178;
                    for (;;)
                    {
                        uint _3251 = uint(findLSB(_3247)) + (_3123 << 5u);
                        uint _3248 = (_3247 + 4294967295u) & _3247;
                        uint _3253 = _3251 * 48u;
                        vec4 _3267 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3253)).x, texelFetch(g_PointLightRenderingBuffer, int(_3253 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3253 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3253 + 3u)).x));
                        uint _3273 = (_3251 * 48u) + 4u;
                        vec4 _3286 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3273)).x, texelFetch(g_PointLightRenderingBuffer, int(_3273 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3273 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3273 + 3u)).x));
                        uint _3292 = (_3251 * 48u) + 8u;
                        vec3 _3303 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3292)).x, texelFetch(g_PointLightRenderingBuffer, int(_3292 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3292 + 2u)).x));
                        float _3307 = _3267.x - _1970;
                        float _3308 = _3267.y - _1971;
                        float _3309 = _3267.z - _1972;
                        float _3310 = dot(vec3(_3307, _3308, _3309), vec3(_3307, _3308, _3309));
                        float _3313 = inversesqrt(_3310);
                        float _3314 = _3313 * _3307;
                        float _3315 = _3313 * _3308;
                        float _3316 = _3313 * _3309;
                        float _3317 = dot(vec3(_854, _857, _860), vec3(_3314, _3315, _3316));
                        float _3322 = 1.0 - (_3310 * _3267.w);
                        float _4684 = isnan(0.0) ? _3322 : (isnan(_3322) ? 0.0 : max(_3322, 0.0));
                        float _3323 = isnan(1.0) ? _4684 : (isnan(_4684) ? 1.0 : min(_4684, 1.0));
                        float _3324 = sqrt(_3310) * _3286.w;
                        float _3327 = 1.39999997615814208984375 / (_3324 + 1.39999997615814208984375);
                        float _3328 = _3327 * _3327;
                        float _3331 = ((1.0 - _3328) * _3317) + _3328;
                        float _3334 = _3324 * _3324;
                        float _3338 = ((isnan(0.0) ? _3331 : (isnan(_3331) ? 0.0 : max(_3331, 0.0))) * _3323) / ((_3334 * 0.699999988079071044921875) + 1.0);
                        float _3342 = (-0.0) - _1970;
                        float _3343 = (-0.0) - _1971;
                        float _3344 = (-0.0) - _1972;
                        float _3348 = inversesqrt(dot(vec3(_3342, _3343, _3344), vec3(_3342, _3343, _3344)));
                        float _3349 = _3348 * _3342;
                        float _3350 = _3348 * _3343;
                        float _3351 = _3348 * _3344;
                        float _3358 = exp2(log2(1.0 / ((_3334 * 3.5) + 5.0)) * 0.25);
                        float _3359 = 1.0 - _914;
                        float _3366 = sqrt(1.0 - ((1.0 - (_3359 * _3359)) * (1.0 - (_3358 * _3358))));
                        float _3367 = _3366 * _3366;
                        float _3368 = _3367 * _3367;
                        float _3369 = _3349 + _3314;
                        float _3370 = _3350 + _3315;
                        float _3371 = _3351 + _3316;
                        float _3375 = inversesqrt(dot(vec3(_3369, _3370, _3371), vec3(_3369, _3370, _3371)));
                        float _3379 = dot(vec3(_854, _857, _860), vec3(_3349, _3350, _3351));
                        float _4700 = isnan(0.0) ? _3379 : (isnan(_3379) ? 0.0 : max(_3379, 0.0));
                        float _3382 = isnan(1.0) ? _4700 : (isnan(_4700) ? 1.0 : min(_4700, 1.0));
                        float _3383 = dot(vec3(_854, _857, _860), vec3(_3375 * _3369, _3375 * _3370, _3375 * _3371));
                        float _4711 = isnan(0.0) ? _3383 : (isnan(_3383) ? 0.0 : max(_3383, 0.0));
                        float _3386 = isnan(1.0) ? _4711 : (isnan(_4711) ? 1.0 : min(_4711, 1.0));
                        float _3390 = ((_3386 * _3386) * (_3368 + (-1.0))) + 1.0;
                        float _3391 = _3327 * _3367;
                        float _3392 = _3391 * _3391;
                        float _3395 = ((1.0 - _3392) * _3317) + _3392;
                        float _4722 = isnan(0.0) ? _3395 : (isnan(_3395) ? 0.0 : max(_3395, 0.0));
                        float _3396 = isnan(1.0) ? _4722 : (isnan(_4722) ? 1.0 : min(_4722, 1.0));
                        float _3397 = 1.0 - _3367;
                        float _3407 = (0.5 / (((_3396 * ((_3382 * _3397) + _3367)) + 9.9999999392252902907785028219223e-09) + (((_3396 * _3397) + _3367) * _3382))) * _3396;
                        float _4733 = isnan(0.0) ? _3407 : (isnan(_3407) ? 0.0 : max(_3407, 0.0));
                        float _3418 = (((_3368 * 3.1415927410125732421875) * (isnan(1.0) ? _4733 : (isnan(_4733) ? 1.0 : min(_4733, 1.0)))) / ((_3390 * _3390) * ((_3334 * 2.1991131305694580078125) + 3.141590118408203125))) * _3323;
                        _3176 = (_3338 * _3286.x) + _3244;
                        _3177 = (_3338 * _3286.y) + _3245;
                        _3178 = (_3338 * _3286.z) + _3246;
                        _3173 = (_3418 * _3303.x) + _3241;
                        _3174 = (_3418 * _3303.y) + _3242;
                        _3175 = (_3418 * _3303.z) + _3243;
                        if (_3248 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3241 = _3173;
                            _3242 = _3174;
                            _3243 = _3175;
                            _3244 = _3176;
                            _3245 = _3177;
                            _3246 = _3178;
                            _3247 = _3248;
                        }
                    }
                    frontier_phi_66_pred = _3178;
                    frontier_phi_66_pred_1 = _3177;
                    frontier_phi_66_pred_2 = _3176;
                    frontier_phi_66_pred_3 = _3175;
                    frontier_phi_66_pred_4 = _3174;
                    frontier_phi_66_pred_5 = _3173;
                }
                _2983 = frontier_phi_66_pred;
                _2981 = frontier_phi_66_pred_1;
                _2979 = frontier_phi_66_pred_2;
                _2977 = frontier_phi_66_pred_3;
                _2975 = frontier_phi_66_pred_4;
                _2973 = frontier_phi_66_pred_5;
                uint _3124 = _3123 + 1u;
                if (_3124 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3117 = _2973;
                    _3118 = _2975;
                    _3119 = _2977;
                    _3120 = _2979;
                    _3121 = _2981;
                    _3122 = _2983;
                    _3123 = _3124;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2972 = _2973;
            _2974 = _2975;
            _2976 = _2977;
            _2978 = _2979;
            _2980 = _2981;
            _2982 = _2983;
        }
        uvec4 _2986 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2987 = _2986.z;
        uint _2989 = (_2987 >> 8u) & 15u;
        float _3085;
        float _3087;
        float _3089;
        float _3091;
        float _3093;
        float _3095;
        if (((4294967295u << _2989) & _2892) == 0u)
        {
            _3085 = _2972;
            _3087 = _2974;
            _3089 = _2976;
            _3091 = _2978;
            _3093 = _2980;
            _3095 = _2982;
        }
        else
        {
            float _3110 = inversesqrt(dot(vec3(_1970, _1971, _1972), vec3(_1970, _1971, _1972)));
            float _3111 = _3110 * _1970;
            float _3112 = _3110 * _1971;
            float _3113 = _3110 * _1972;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2989 < ((_2987 >> 12u) & 15u))
            {
                float _3086;
                float _3088;
                float _3090;
                float _3092;
                float _3094;
                float _3096;
                float _3224 = _2972;
                float _3225 = _2974;
                float _3226 = _2976;
                float _3227 = _2978;
                float _3228 = _2980;
                float _3229 = _2982;
                uint _3230 = _2989;
                uint _3239;
                bool _3240;
                for (;;)
                {
                    _3239 = texelFetch(g_lightClassification, int((((_2886 << 5u) + (_2872 << 9u)) + (_3230 << 2u)) >> 2u)).x;
                    _3240 = _3239 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3240)
                    {
                        frontier_phi_72_pred = _3229;
                        frontier_phi_72_pred_1 = _3228;
                        frontier_phi_72_pred_2 = _3227;
                        frontier_phi_72_pred_3 = _3226;
                        frontier_phi_72_pred_4 = _3225;
                        frontier_phi_72_pred_5 = _3224;
                    }
                    else
                    {
                        float _3423;
                        float _3424;
                        float _3425;
                        float _3426;
                        float _3427;
                        float _3428;
                        float _3716;
                        float _3717;
                        float _3718;
                        float _3719;
                        float _3720;
                        float _3721;
                        float _3436 = _3224;
                        float _3437 = _3225;
                        float _3438 = _3226;
                        float _3439 = _3227;
                        float _3440 = _3228;
                        float _3441 = _3229;
                        uint _3442 = _3239;
                        uint _3443;
                        vec4 _3468;
                        float _3469;
                        vec4 _3484;
                        vec3 _3496;
                        vec4 _3511;
                        vec4 _3526;
                        float _3572;
                        bool _3573;
                        for (;;)
                        {
                            uint _3453 = ((_3230 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3442));
                            _3443 = (_3442 + 4294967295u) & _3442;
                            uint _3455 = _3453 * 40u;
                            _3468 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3455)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3455 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3455 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3455 + 3u)).x));
                            _3469 = _3468.w;
                            uint _3471 = (_3453 * 40u) + 4u;
                            _3484 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3471)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3471 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3471 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3471 + 3u)).x));
                            uint _3486 = (_3453 * 40u) + 8u;
                            _3496 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3486)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3486 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3486 + 2u)).x));
                            uint _3498 = (_3453 * 40u) + 16u;
                            _3511 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3498)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3498 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3498 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3498 + 3u)).x));
                            uint _3513 = (_3453 * 40u) + 20u;
                            _3526 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3513)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3513 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3513 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3513 + 3u)).x));
                            uint _3528 = (_3453 * 40u) + 24u;
                            vec4 _3541 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3528)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3528 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3528 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3528 + 3u)).x));
                            uint _3547 = (_3453 * 40u) + 28u;
                            vec4 _3560 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3547)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3547 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3547 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3547 + 3u)).x));
                            _3572 = fma(_1972, _3560.z, fma(_1971, _3560.y, _3560.x * _1970)) + _3560.w;
                            _3573 = !((fma(_1972, _3541.z, fma(_1971, _3541.y, _3541.x * _1970)) + _3541.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3573)
                            {
                                float _3600 = _3468.x - _1970;
                                float _3601 = _3468.y - _1971;
                                float _3602 = _3468.z - _1972;
                                float _3603 = dot(vec3(_3600, _3601, _3602), vec3(_3600, _3601, _3602));
                                float _3606 = inversesqrt(_3603);
                                float _3607 = _3606 * _3600;
                                float _3608 = _3606 * _3601;
                                float _3609 = _3606 * _3602;
                                float _3613 = 1.0 - (_3603 / (_3469 * _3469));
                                float _4744 = isnan(0.0) ? _3613 : (isnan(_3613) ? 0.0 : max(_3613, 0.0));
                                float _3614 = isnan(1.0) ? _4744 : (isnan(_4744) ? 1.0 : min(_4744, 1.0));
                                float _3618 = sqrt(_3603) * _3484.w;
                                float _3620 = 1.39999997615814208984375 / (_3618 + 1.39999997615814208984375);
                                float _3621 = _3620 * _3620;
                                float _3624 = ((1.0 - _3621) * dot(vec3(_3607, _3608, _3609), vec3(_854, _857, _860))) + _3621;
                                float _3627 = _3618 * _3618;
                                float _3631 = (fma(_1972, _3511.z, fma(_1971, _3511.y, _3511.x * _1970)) + _3511.w) / _3572;
                                float _3632 = (fma(_1972, _3526.z, fma(_1971, _3526.y, _3526.x * _1970)) + _3526.w) / _3572;
                                float _3636 = 1.0 - dot(vec2(_3631, _3632), vec2(_3631, _3632));
                                float _4760 = isnan(0.0) ? _3636 : (isnan(_3636) ? 0.0 : max(_3636, 0.0));
                                float _3637 = isnan(1.0) ? _4760 : (isnan(_4760) ? 1.0 : min(_4760, 1.0));
                                float _3638 = _3637 * (((isnan(0.0) ? _3624 : (isnan(_3624) ? 0.0 : max(_3624, 0.0))) * _3614) / ((_3627 * 0.699999988079071044921875) + 1.0));
                                float _3650 = exp2(log2(1.0 / ((_3627 * 3.5) + 5.0)) * 0.25);
                                float _3651 = 1.0 - _914;
                                float _3658 = sqrt(1.0 - ((1.0 - (_3651 * _3651)) * (1.0 - (_3650 * _3650))));
                                float _3659 = _3658 * _3658;
                                float _3660 = _3659 * _3659;
                                float _3661 = _3607 - _3111;
                                float _3662 = _3608 - _3112;
                                float _3663 = _3609 - _3113;
                                float _3667 = inversesqrt(dot(vec3(_3661, _3662, _3663), vec3(_3661, _3662, _3663)));
                                float _3671 = dot(vec3(_854, _857, _860), vec3((-0.0) - _3111, (-0.0) - _3112, (-0.0) - _3113));
                                float _4771 = isnan(0.0) ? _3671 : (isnan(_3671) ? 0.0 : max(_3671, 0.0));
                                float _3674 = isnan(1.0) ? _4771 : (isnan(_4771) ? 1.0 : min(_4771, 1.0));
                                float _3675 = dot(vec3(_854, _857, _860), vec3(_3667 * _3661, _3667 * _3662, _3667 * _3663));
                                float _4782 = isnan(0.0) ? _3675 : (isnan(_3675) ? 0.0 : max(_3675, 0.0));
                                float _3678 = isnan(1.0) ? _4782 : (isnan(_4782) ? 1.0 : min(_4782, 1.0));
                                float _3682 = ((_3678 * _3678) * (_3660 + (-1.0))) + 1.0;
                                float _3683 = _3620 * _3659;
                                float _3684 = _3683 * _3683;
                                float _3690 = ((1.0 - _3684) * dot(vec3(_854, _857, _860), vec3(_3607, _3608, _3609))) + _3684;
                                float _4793 = isnan(0.0) ? _3690 : (isnan(_3690) ? 0.0 : max(_3690, 0.0));
                                float _3691 = isnan(1.0) ? _4793 : (isnan(_4793) ? 1.0 : min(_4793, 1.0));
                                float _3692 = 1.0 - _3659;
                                float _3702 = (0.5 / (((_3691 * ((_3674 * _3692) + _3659)) + 9.9999999392252902907785028219223e-09) + (((_3691 * _3692) + _3659) * _3674))) * _3691;
                                float _4804 = isnan(0.0) ? _3702 : (isnan(_3702) ? 0.0 : max(_3702, 0.0));
                                float _3712 = (_3637 * _3614) * (((_3660 * 3.1415927410125732421875) * (isnan(1.0) ? _4804 : (isnan(_4804) ? 1.0 : min(_4804, 1.0)))) / ((_3682 * _3682) * ((_3627 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3638 * _3484.y;
                                frontier_phi_78_pred_1 = _3638 * _3484.x;
                                frontier_phi_78_pred_2 = _3712 * _3496.z;
                                frontier_phi_78_pred_3 = _3712 * _3496.y;
                                frontier_phi_78_pred_4 = _3712 * _3496.x;
                                frontier_phi_78_pred_5 = _3638 * _3484.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3720 = frontier_phi_78_pred;
                            _3719 = frontier_phi_78_pred_1;
                            _3718 = frontier_phi_78_pred_2;
                            _3717 = frontier_phi_78_pred_3;
                            _3716 = frontier_phi_78_pred_4;
                            _3721 = frontier_phi_78_pred_5;
                            _3426 = _3719 + _3439;
                            _3427 = _3720 + _3440;
                            _3428 = _3721 + _3441;
                            _3423 = _3716 + _3436;
                            _3424 = _3717 + _3437;
                            _3425 = _3718 + _3438;
                            if (_3443 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3436 = _3423;
                                _3437 = _3424;
                                _3438 = _3425;
                                _3439 = _3426;
                                _3440 = _3427;
                                _3441 = _3428;
                                _3442 = _3443;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3428;
                        frontier_phi_72_pred_1 = _3427;
                        frontier_phi_72_pred_2 = _3426;
                        frontier_phi_72_pred_3 = _3425;
                        frontier_phi_72_pred_4 = _3424;
                        frontier_phi_72_pred_5 = _3423;
                    }
                    _3096 = frontier_phi_72_pred;
                    _3094 = frontier_phi_72_pred_1;
                    _3092 = frontier_phi_72_pred_2;
                    _3090 = frontier_phi_72_pred_3;
                    _3088 = frontier_phi_72_pred_4;
                    _3086 = frontier_phi_72_pred_5;
                    uint _3231 = _3230 + 1u;
                    if (_3231 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3224 = _3086;
                        _3225 = _3088;
                        _3226 = _3090;
                        _3227 = _3092;
                        _3228 = _3094;
                        _3229 = _3096;
                        _3230 = _3231;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3096;
                frontier_phi_60_61_ladder_1 = _3094;
                frontier_phi_60_61_ladder_2 = _3090;
                frontier_phi_60_61_ladder_3 = _3088;
                frontier_phi_60_61_ladder_4 = _3086;
                frontier_phi_60_61_ladder_5 = _3092;
            }
            else
            {
                frontier_phi_60_61_ladder = _2982;
                frontier_phi_60_61_ladder_1 = _2980;
                frontier_phi_60_61_ladder_2 = _2976;
                frontier_phi_60_61_ladder_3 = _2974;
                frontier_phi_60_61_ladder_4 = _2972;
                frontier_phi_60_61_ladder_5 = _2978;
            }
            _3085 = frontier_phi_60_61_ladder_4;
            _3087 = frontier_phi_60_61_ladder_3;
            _3089 = frontier_phi_60_61_ladder_2;
            _3091 = frontier_phi_60_61_ladder_5;
            _3093 = frontier_phi_60_61_ladder_1;
            _3095 = frontier_phi_60_61_ladder;
        }
        float _3100 = isnan(1.0) ? _898 : (isnan(_898) ? 1.0 : min(_898, 1.0));
        _2905 = (_3100 * _3091) + _2436;
        _2907 = (_3100 * _3093) + _2438;
        _2909 = (_3100 * _3095) + _2440;
        _2911 = ((_3085 * 0.039999999105930328369140625) * _3100) + _2759;
        _2913 = ((_3087 * 0.039999999105930328369140625) * _3100) + _2761;
        _2915 = ((_3089 * 0.039999999105930328369140625) * _3100) + _2763;
    }
    else
    {
        _2905 = _2436;
        _2907 = _2438;
        _2909 = _2440;
        _2911 = _2759;
        _2913 = _2761;
        _2915 = _2763;
    }
    float _4820 = isnan(0.0) ? _883 : (isnan(_883) ? 0.0 : max(_883, 0.0));
    float _4831 = isnan(0.0) ? _884 : (isnan(_884) ? 0.0 : max(_884, 0.0));
    float _4842 = isnan(0.0) ? _885 : (isnan(_885) ? 0.0 : max(_885, 0.0));
    uint _2935 = _251 + 6u;
    float _2943 = _835 / cbSceneParam._m0[86u].x;
    float _2944 = _836 / cbSceneParam._m0[86u].y;
    vec4 _2958 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2943, _2944, (log2((isnan(cbSceneParam._m0[77u].w) ? _770 : (isnan(_770) ? cbSceneParam._m0[77u].w : min(_770, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2960 = _2958.x;
    float _2961 = _2958.y;
    float _2962 = _2958.z;
    float _2963 = _2958.w;
    float _3035;
    float _3037;
    float _3039;
    float _3041;
    if (_770 > cbSceneParam._m0[78u].w)
    {
        float _2997 = isnan(_770) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _770 : min(cbSceneParam._m0[80u].w, _770));
        float _2998 = _2997 / _770;
        float _3009 = _2998 * _820;
        float _3010 = _821 * _2998;
        float _3011 = (-0.0) - _3010;
        float _3013 = _2998 * _822;
        float _3015 = (cbSceneParam._m0[77u].w * _3011) / _2997;
        float _3016 = _3015 + cbSceneParam._m0[79u].w;
        float _3017 = cbSceneParam._m0[79u].w - _3010;
        float _3023 = sqrt(((_3009 * _3009) + (_3010 * _3010)) + (_3013 * _3013));
        float _3026 = (1.0 - (cbSceneParam._m0[77u].w / _2997)) * _3023;
        float _3031 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3033 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3186;
        if (abs((_3011 - _3015) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3186 = ((((_3016 > 0.0) ? exp2(_3031 * _3016) : (2.0 - exp2(_3033 * _3016))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3026;
        }
        else
        {
            float _3146 = 1.0 / cbSceneParam._m0[80u].x;
            float _3147 = isnan(_3017) ? _3016 : (isnan(_3016) ? _3017 : max(_3016, _3017));
            float _3148 = isnan(_3017) ? _3016 : (isnan(_3016) ? _3017 : min(_3016, _3017));
            float _3157 = isnan(0.0) ? _3147 : (isnan(_3147) ? 0.0 : min(_3147, 0.0));
            float _3158 = isnan(0.0) ? _3148 : (isnan(_3148) ? 0.0 : min(_3148, 0.0));
            _3186 = ((abs(_3023 / _3011) * cbSceneParam._m0[80u].y) * ((((_3157 - _3158) * 2.0) - ((exp2(_3031 * (isnan(0.0) ? _3147 : (isnan(_3147) ? 0.0 : max(_3147, 0.0)))) - exp2(_3031 * (isnan(0.0) ? _3148 : (isnan(_3148) ? 0.0 : max(_3148, 0.0))))) * _3146)) - ((exp2(_3033 * _3157) - exp2(_3033 * _3158)) * _3146))) + (_3026 * cbSceneParam._m0[80u].z);
        }
        vec4 _3188 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2943, _2944, 1.0), 0.0);
        float _3197 = exp2((_3186 * (-1.44269502162933349609375)) * (1.0 - _3188.w));
        float _3198 = log2(_3197);
        float _3214 = log2(_2963);
        _3035 = (exp2(_3214 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3198 * cbSceneParam._m0[78u].x)) * _3188.x) / cbSceneParam._m0[78u].x)) + _2960;
        _3037 = (exp2(_3214 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3198 * cbSceneParam._m0[78u].y)) * _3188.y) / cbSceneParam._m0[78u].y)) + _2961;
        _3039 = (exp2(_3214 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3198 * cbSceneParam._m0[78u].z)) * _3188.z) / cbSceneParam._m0[78u].z)) + _2962;
        _3041 = _3197 * _2963;
    }
    else
    {
        _3035 = _2960;
        _3037 = _2961;
        _3039 = _2962;
        _3041 = _2963;
    }
    float _3053 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3054 = _3053 == 3.0;
    float _3055 = log2(_3041);
    float _3062 = exp2(_3055 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4820 : (isnan(_4820) ? 1.0 : min(_4820, 1.0))) * (_2905 + ((isnan(0.0) ? _1623 : (isnan(_1623) ? 0.0 : max(_1623, 0.0))) * _898))) + ((_2911 + ((isnan(0.0) ? _1917 : (isnan(_1917) ? 0.0 : max(_1917, 0.0))) * _1702)) * cbPerFrame._m0[3u].x));
    float _3063 = exp2(_3055 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4831 : (isnan(_4831) ? 1.0 : min(_4831, 1.0))) * (_2907 + ((isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0))) * _898))) + ((_2913 + ((isnan(0.0) ? _1920 : (isnan(_1920) ? 0.0 : max(_1920, 0.0))) * _1702)) * cbPerFrame._m0[3u].x));
    float _3064 = exp2(_3055 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4842 : (isnan(_4842) ? 1.0 : min(_4842, 1.0))) * (_2909 + ((isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0))) * _898))) + ((_2915 + ((isnan(0.0) ? _1923 : (isnan(_1923) ? 0.0 : max(_1923, 0.0))) * _1702)) * cbPerFrame._m0[3u].x));
    float _3073 = (_3053 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3073 * (_3054 ? _3062 : (_3062 + (cbSceneParam._m0[72u].w * _3035)));
    SV_Target.y = _3073 * (_3054 ? _3063 : (_3063 + (cbSceneParam._m0[72u].w * _3037)));
    SV_Target.z = _3073 * (_3054 ? _3064 : (_3064 + (cbSceneParam._m0[72u].w * _3039)));
    SV_Target.w = cbInstanceData._m0[_2935].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2935].w;
}


