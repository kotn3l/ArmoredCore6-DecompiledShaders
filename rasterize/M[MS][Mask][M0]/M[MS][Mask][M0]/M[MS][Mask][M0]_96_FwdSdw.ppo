#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1385;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _227 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _228 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _229 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _235 = inversesqrt(dot(vec3(_227, _228, _229), vec3(_227, _228, _229)));
    float _236 = _235 * _227;
    float _237 = _235 * _228;
    float _238 = _235 * _229;
    float _242 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _243 = _242 * NORMAL.x;
    float _244 = _242 * NORMAL.y;
    float _245 = _242 * NORMAL.z;
    float _249 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _250 = _249 * TANGENT.x;
    float _251 = _249 * TANGENT.y;
    float _252 = _249 * TANGENT.z;
    uint _255 = uint(roundEven(NORMAL.w)) * 13u;
    uint _260 = _255 + 1u;
    uint _264 = _255 + 2u;
    float _273 = sqrt(((cbInstanceData._m0[_260].x * cbInstanceData._m0[_260].x) + (cbInstanceData._m0[_255].x * cbInstanceData._m0[_255].x)) + (cbInstanceData._m0[_264].x * cbInstanceData._m0[_264].x));
    float _274 = _273 * TEXCOORD.z;
    float _275 = _273 * TEXCOORD.w;
    vec4 _295 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _301 = _295.x * cbMtdParam._m0[11u].x;
    float _302 = _295.y * cbMtdParam._m0[11u].y;
    float _303 = _295.z * cbMtdParam._m0[11u].z;
    vec4 _322 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _274) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _275) + cbTextureTilingScale._m0[5u].w));
    vec4 _341 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _378 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _380 = _378.x;
    float _392 = dot(vec4(_380, _378.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _409 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _341.x) * 2.0) - ((((_380 - _392) * cbMtdParam._m0[24u].z) + _392) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3970 = isnan(0.0) ? _409 : (isnan(_409) ? 0.0 : max(_409, 0.0));
    float _410 = isnan(1.0) ? _3970 : (isnan(_3970) ? 1.0 : min(_3970, 1.0));
    float _417 = (_410 * ((_322.x * cbMtdParam._m0[12u].x) - _301)) + _301;
    float _418 = (_410 * ((_322.y * cbMtdParam._m0[12u].y) - _302)) + _302;
    float _419 = (_410 * ((_322.z * cbMtdParam._m0[12u].z) - _303)) + _303;
    vec4 _436 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _274) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _275) + cbTextureTilingScale._m0[3u].w));
    vec4 _456 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _458 = _456.x;
    float _468 = dot(vec4(_458, _456.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _482 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _341.y) * 2.0) - ((((_458 - _468) * cbMtdParam._m0[24u].z) + _468) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3981 = isnan(0.0) ? _482 : (isnan(_482) ? 0.0 : max(_482, 0.0));
    float _483 = isnan(1.0) ? _3981 : (isnan(_3981) ? 1.0 : min(_3981, 1.0));
    float _490 = (_483 * ((_436.x * cbMtdParam._m0[13u].x) - _417)) + _417;
    float _491 = (_483 * ((_436.y * cbMtdParam._m0[13u].y) - _418)) + _418;
    float _492 = (_483 * ((_436.z * cbMtdParam._m0[13u].z) - _419)) + _419;
    vec4 _511 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _274) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _275) + cbTextureTilingScale._m0[14u].w));
    vec4 _531 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _274) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _275) + cbTextureTilingScale._m0[4u].w));
    vec4 _548 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _550 = _548.x;
    float _551 = _548.y;
    float _552 = _548.z;
    float _559 = ((_531.x - _550) * _410) + _550;
    float _560 = ((_531.y - _551) * _410) + _551;
    float _561 = ((_531.z - _552) * _410) + _552;
    vec4 _573 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _274) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _275) + cbTextureTilingScale._m0[2u].w));
    float _586 = ((_573.z - _561) * _483) + _561;
    float _589 = ((((_573.x - _559) * _483) + _559) * 2.0) + (-1.0);
    float _591 = ((((_573.y - _560) * _483) + _560) * 2.0) + (-1.0);
    float _592 = dot(vec2(_589, _591), vec2(_589, _591));
    float _3992 = isnan(0.0) ? _592 : (isnan(_592) ? 0.0 : max(_592, 0.0));
    float _597 = sqrt(1.0 - (isnan(1.0) ? _3992 : (isnan(_3992) ? 1.0 : min(_3992, 1.0))));
    vec4 _611 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _623 = (((_611.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _589;
    float _624 = (((_611.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _591;
    float _627 = fma(_597, _243, fma(_624, _250, _623 * _236));
    float _630 = fma(_597, _244, fma(_624, _251, _623 * _237));
    float _633 = fma(_597, _245, fma(_624, _252, _623 * _238));
    float _637 = inversesqrt(dot(vec3(_627, _630, _633), vec3(_627, _630, _633)));
    vec4 _664 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _274) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _275) + cbTextureTilingScale._m0[11u].w));
    float _666 = _664.x;
    float _667 = 1.0 - _666;
    float _673 = (cbMtdParam._m0[19u].x + dot(vec4(_637 * _627, _637 * _630, _637 * _633, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_666 - _667) * cbMtdParam._m0[24u].w) + _667) * cbMtdParam._m0[21u].z);
    float _4003 = isnan(0.0) ? _673 : (isnan(_673) ? 0.0 : max(_673, 0.0));
    float _674 = isnan(1.0) ? _4003 : (isnan(_4003) ? 1.0 : min(_4003, 1.0));
    float _676 = (-0.0) - cbMtdParam._m0[24u].x;
    float _678 = isnan(0.0) ? _676 : (isnan(_676) ? 0.0 : max(_676, 0.0));
    float _679 = isnan(1.0) ? _678 : (isnan(_678) ? 1.0 : min(_678, 1.0));
    float _686 = _674 - ((_674 * TEXCOORD_8.x) * _679);
    float _687 = _674 - ((_674 * TEXCOORD_8.y) * _679);
    float _688 = _674 - ((_674 * TEXCOORD_8.z) * _679);
    float _695 = (_686 * ((_511.x * cbMtdParam._m0[18u].x) - _490)) + _490;
    float _696 = (_687 * ((_511.y * cbMtdParam._m0[18u].y) - _491)) + _491;
    float _697 = (_688 * ((_511.z * cbMtdParam._m0[18u].z) - _492)) + _492;
    vec4 _709 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _274) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _275) + cbTextureTilingScale._m0[19u].w));
    float _711 = _709.x;
    float _712 = 1.0 - _711;
    float _740 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_711 - _712) * cbMtdParam._m0[24u].y) + _712) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4024 = isnan(0.0) ? _740 : (isnan(_740) ? 0.0 : max(_740, 0.0));
    float _741 = isnan(1.0) ? _4024 : (isnan(_4024) ? 1.0 : min(_4024, 1.0));
    float _749 = ((((cbMtdParam._m0[10u].x - _695) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _741) + _695;
    float _750 = ((((cbMtdParam._m0[10u].y - _696) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _741) + _696;
    float _751 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _697)) * _741) + _697;
    float _755 = (cbMtdParam._m0[19u].w * (_611.z - _586)) + _586;
    vec4 _769 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _274) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _275) + cbTextureTilingScale._m0[15u].w));
    float _776 = (_769.x * 2.0) + (-1.0);
    float _777 = (_769.y * 2.0) + (-1.0);
    float _778 = dot(vec2(_776, _777), vec2(_776, _777));
    float _4035 = isnan(0.0) ? _778 : (isnan(_778) ? 0.0 : max(_778, 0.0));
    float _786 = ((_769.z - _755) * _686) + _755;
    float _789 = ((cbMtdParam._m0[23u].y - _786) * _741) + _786;
    vec4 _808 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _274) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _275) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _814 = (_808.x * 2.0) + (-1.0);
    float _815 = (_808.y * 2.0) + (-1.0);
    float _816 = dot(vec2(_814, _815), vec2(_814, _815));
    float _4046 = isnan(0.0) ? _816 : (isnan(_816) ? 0.0 : max(_816, 0.0));
    float _831 = ((sqrt(1.0 - (isnan(1.0) ? _4035 : (isnan(_4035) ? 1.0 : min(_4035, 1.0)))) - _597) * _688) + _597;
    float _834 = (((_776 - _623) * _686) + _623) + (cbMtdParam._m0[21u].x * _623);
    float _835 = (((_777 - _624) * _687) + _624) + (cbMtdParam._m0[21u].x * _624);
    float _846 = (((_814 - _834) + (_834 * cbMtdParam._m0[22u].z)) * _741) + _834;
    float _847 = (((_815 - _835) + (_835 * cbMtdParam._m0[22u].z)) * _741) + _835;
    float _848 = (_741 * (sqrt(1.0 - (isnan(1.0) ? _4046 : (isnan(_4046) ? 1.0 : min(_4046, 1.0)))) - _831)) + _831;
    float _850 = cbMtdParam._m0[22u].x + _611.w;
    float _853 = fma(_848, _243, fma(_847, _250, _846 * _236));
    float _856 = fma(_848, _244, fma(_847, _251, _846 * _237));
    float _859 = fma(_848, _245, fma(_847, _252, _846 * _238));
    float _863 = inversesqrt(dot(vec3(_853, _856, _859), vec3(_853, _856, _859)));
    float _864 = _863 * _853;
    float _865 = _863 * _856;
    float _866 = _863 * _859;
    float _4057 = isnan(0.0) ? _789 : (isnan(_789) ? 0.0 : max(_789, 0.0));
    float _867 = isnan(1.0) ? _4057 : (isnan(_4057) ? 1.0 : min(_4057, 1.0));
    float _4068 = isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : max(_850, 0.0));
    float _4079 = isnan(0.0) ? _749 : (isnan(_749) ? 0.0 : max(_749, 0.0));
    float _4090 = isnan(0.0) ? _750 : (isnan(_750) ? 0.0 : max(_750, 0.0));
    float _4101 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
    float _885 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _926 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _936 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _926);
    float _937 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _926);
    float _938 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _926);
    float _942 = inversesqrt(dot(vec3(_936, _937, _938), vec3(_936, _937, _938)));
    float _943 = _936 * _942;
    float _944 = _937 * _942;
    float _945 = _938 * _942;
    float _951 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _952 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _970 = fma(_866, cbSceneParam._m0[5u].z, fma(_865, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _864));
    float _973 = fma(_866, cbSceneParam._m0[6u].z, fma(_865, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _864));
    float _976 = fma(_866, cbSceneParam._m0[7u].z, fma(_865, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _864));
    uint _990 = (_255 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _996 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4079 : (isnan(_4079) ? 1.0 : min(_4079, 1.0)))) * cbInstanceData._m0[_990].x;
    float _997 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4090 : (isnan(_4090) ? 1.0 : min(_4090, 1.0)))) * cbInstanceData._m0[_990].y;
    float _998 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4101 : (isnan(_4101) ? 1.0 : min(_4101, 1.0)))) * cbInstanceData._m0[_990].z;
    float _4112 = isnan(0.0) ? _996 : (isnan(_996) ? 0.0 : max(_996, 0.0));
    float _999 = isnan(1.0) ? _4112 : (isnan(_4112) ? 1.0 : min(_4112, 1.0));
    float _4123 = isnan(0.0) ? _997 : (isnan(_997) ? 0.0 : max(_997, 0.0));
    float _1000 = isnan(1.0) ? _4123 : (isnan(_4123) ? 1.0 : min(_4123, 1.0));
    float _4134 = isnan(0.0) ? _998 : (isnan(_998) ? 0.0 : max(_998, 0.0));
    float _1001 = isnan(1.0) ? _4134 : (isnan(_4134) ? 1.0 : min(_4134, 1.0));
    vec4 _1010 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _951, cbSceneParam._m0[86u].y * _952));
    float _1014 = ((isnan(1.0) ? _4068 : (isnan(_4068) ? 1.0 : min(_4068, 1.0))) * TEXCOORD_5.w) * _1010.x;
    float _1015 = dot(vec3(_864, _865, _866), vec3(_943, _944, _945));
    float _1018 = _1015 * 2.0;
    float _1022 = (_1018 * _864) - _943;
    float _1023 = (_1018 * _865) - _944;
    float _1024 = (_1018 * _866) - _945;
    float _1028 = abs(dot(vec3(_943, _944, _945), vec3(_864, _865, _866)));
    float _4145 = isnan(0.0) ? _1028 : (isnan(_1028) ? 0.0 : max(_1028, 0.0));
    float _1030 = sqrt(_867);
    float _1043 = exp2((_1030 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4145 : (isnan(_4145) ? 1.0 : min(_4145, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1030 * 3.0));
    float _1075 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1079 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1083 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1384;
    float _1386;
    float _1387;
    float _1388;
    float _1389;
    float _1390;
    float _1391;
    float _1392;
    float _1393;
    float _1394;
    float _1395;
    float _1396;
    float _1397;
    float _1398;
    float _1399;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1109 = fma(_1083, cbModelParam._m0[26u].z, fma(_1079, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1075));
        float _1113 = fma(_1083, cbModelParam._m0[27u].z, fma(_1079, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1075));
        float _1117 = fma(_1083, cbModelParam._m0[28u].z, fma(_1079, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1075));
        float _1142 = _1075 + _864;
        float _1143 = _1079 + _865;
        float _1144 = _1083 + _866;
        float _1154 = fma(_1144, cbModelParam._m0[26u].z, fma(_1143, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1142)) - _1109;
        float _1155 = fma(_1144, cbModelParam._m0[27u].z, fma(_1143, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1142)) - _1113;
        float _1156 = fma(_1144, cbModelParam._m0[28u].z, fma(_1143, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1142)) - _1117;
        float _1160 = inversesqrt(dot(vec3(_1154, _1155, _1156), vec3(_1154, _1155, _1156)));
        float _1173 = ((_1160 * _1154) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1109 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1174 = ((_1160 * _1155) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1113 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1175 = ((_1160 * _1156) / cbModelParam._m0[34u].z) + ((((((_1117 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1178 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1173, _1174, _1175), 0.0);
        vec4 _1185 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1173, _1174, _1175), 0.0);
        vec4 _1192 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1173, _1174, _1175), 0.0);
        vec4 _1199 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1173, _1174, _1175), 0.0);
        float _1212 = exp2((_1178.w + (-0.5)) * 20.0) * 2.0;
        float _1213 = _1212 * (_1178.x + (-0.5));
        float _1214 = _1212 * (_1178.y + (-0.5));
        float _1215 = _1212 * (_1178.z + (-0.5));
        float _1222 = exp2((_1185.w + (-0.5)) * 20.0) * 2.0;
        float _1223 = _1222 * (_1185.x + (-0.5));
        float _1224 = _1222 * (_1185.y + (-0.5));
        float _1225 = _1222 * (_1185.z + (-0.5));
        float _1232 = exp2((_1192.w + (-0.5)) * 20.0) * 2.0;
        float _1233 = _1232 * (_1192.x + (-0.5));
        float _1234 = _1232 * (_1192.y + (-0.5));
        float _1235 = _1232 * (_1192.z + (-0.5));
        float _1242 = exp2((_1199.w + (-0.5)) * 20.0) * 2.0;
        float _1243 = _1242 * (_1199.x + (-0.5));
        float _1244 = _1242 * (_1199.y + (-0.5));
        float _1245 = _1242 * (_1199.z + (-0.5));
        float _1246 = isnan(0.0) ? _1243 : (isnan(_1243) ? 0.0 : max(_1243, 0.0));
        float _1247 = isnan(0.0) ? _1244 : (isnan(_1244) ? 0.0 : max(_1244, 0.0));
        float _1248 = isnan(0.0) ? _1245 : (isnan(_1245) ? 0.0 : max(_1245, 0.0));
        float _1249 = _1213 * 0.5;
        float _1250 = _1223 * 0.5;
        float _1251 = _1233 * 0.5;
        float _1252 = dot(vec3(_1249, _1250, _1251), vec3(_1249, _1250, _1251));
        float _1257 = (_1252 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1252);
        float _1266 = (dot(vec3(_864, _865, _866), vec3(_1257 * _1249, _1257 * _1250, _1257 * _1251)) + 1.0) * 0.5;
        float _4171 = isnan(0.0) ? _1266 : (isnan(_1266) ? 0.0 : max(_1266, 0.0));
        float _1276 = sqrt(((_1250 * _1250) + (_1249 * _1249)) + (_1251 * _1251)) / (_1246 + 9.9999997473787516355514526367188e-06);
        float _4182 = isnan(0.0) ? _1276 : (isnan(_1276) ? 0.0 : max(_1276, 0.0));
        float _1277 = isnan(1.0) ? _4182 : (isnan(_4182) ? 1.0 : min(_4182, 1.0));
        float _1278 = _1277 * 2.0;
        float _1282 = (1.0 - _1277) / (_1277 + 1.0);
        float _4193 = isnan(0.0) ? _1282 : (isnan(_1282) ? 0.0 : max(_1282, 0.0));
        float _1283 = isnan(1.0) ? _4193 : (isnan(_4193) ? 1.0 : min(_4193, 1.0));
        float _1292 = ((((1.0 - _1283) * (_1278 + 2.0)) * exp2(log2(isnan(1.0) ? _4171 : (isnan(_4171) ? 1.0 : min(_4171, 1.0))) * (_1278 + 1.0))) + _1283) * _1246;
        float _1293 = _1214 * 0.5;
        float _1294 = _1224 * 0.5;
        float _1295 = _1234 * 0.5;
        float _1296 = dot(vec3(_1293, _1294, _1295), vec3(_1293, _1294, _1295));
        float _1301 = (_1296 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1296);
        float _1309 = (dot(vec3(_864, _865, _866), vec3(_1301 * _1293, _1301 * _1294, _1301 * _1295)) + 1.0) * 0.5;
        float _4204 = isnan(0.0) ? _1309 : (isnan(_1309) ? 0.0 : max(_1309, 0.0));
        float _1318 = sqrt(((_1294 * _1294) + (_1293 * _1293)) + (_1295 * _1295)) / (_1247 + 9.9999997473787516355514526367188e-06);
        float _4215 = isnan(0.0) ? _1318 : (isnan(_1318) ? 0.0 : max(_1318, 0.0));
        float _1319 = isnan(1.0) ? _4215 : (isnan(_4215) ? 1.0 : min(_4215, 1.0));
        float _1320 = _1319 * 2.0;
        float _1324 = (1.0 - _1319) / (_1319 + 1.0);
        float _4226 = isnan(0.0) ? _1324 : (isnan(_1324) ? 0.0 : max(_1324, 0.0));
        float _1325 = isnan(1.0) ? _4226 : (isnan(_4226) ? 1.0 : min(_4226, 1.0));
        float _1334 = ((((1.0 - _1325) * (_1320 + 2.0)) * exp2(log2(isnan(1.0) ? _4204 : (isnan(_4204) ? 1.0 : min(_4204, 1.0))) * (_1320 + 1.0))) + _1325) * _1247;
        float _1335 = _1215 * 0.5;
        float _1336 = _1225 * 0.5;
        float _1337 = _1235 * 0.5;
        float _1338 = dot(vec3(_1335, _1336, _1337), vec3(_1335, _1336, _1337));
        float _1343 = (_1338 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1338);
        float _1351 = (dot(vec3(_864, _865, _866), vec3(_1343 * _1335, _1343 * _1336, _1343 * _1337)) + 1.0) * 0.5;
        float _4237 = isnan(0.0) ? _1351 : (isnan(_1351) ? 0.0 : max(_1351, 0.0));
        float _1360 = sqrt(((_1336 * _1336) + (_1335 * _1335)) + (_1337 * _1337)) / (_1248 + 9.9999997473787516355514526367188e-06);
        float _4248 = isnan(0.0) ? _1360 : (isnan(_1360) ? 0.0 : max(_1360, 0.0));
        float _1361 = isnan(1.0) ? _4248 : (isnan(_4248) ? 1.0 : min(_4248, 1.0));
        float _1362 = _1361 * 2.0;
        float _1366 = (1.0 - _1361) / (_1361 + 1.0);
        float _4259 = isnan(0.0) ? _1366 : (isnan(_1366) ? 0.0 : max(_1366, 0.0));
        float _1367 = isnan(1.0) ? _4259 : (isnan(_4259) ? 1.0 : min(_4259, 1.0));
        float _1376 = ((((1.0 - _1367) * (_1362 + 2.0)) * exp2(log2(isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0))) * (_1362 + 1.0))) + _1367) * _1248;
        _1384 = _1215;
        _1386 = _1214;
        _1387 = _1213;
        _1388 = _1225;
        _1389 = _1224;
        _1390 = _1223;
        _1391 = _1235;
        _1392 = _1234;
        _1393 = _1233;
        _1394 = _1248;
        _1395 = _1247;
        _1396 = _1246;
        _1397 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1292 : (isnan(_1292) ? 0.0 : max(_1292, 0.0)));
        _1398 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1334 : (isnan(_1334) ? 0.0 : max(_1334, 0.0)));
        _1399 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1376 : (isnan(_1376) ? 0.0 : max(_1376, 0.0)));
    }
    else
    {
        _1384 = _1385;
        _1386 = _1385;
        _1387 = _1385;
        _1388 = _1385;
        _1389 = _1385;
        _1390 = _1385;
        _1391 = _1385;
        _1392 = _1385;
        _1393 = _1385;
        _1394 = _1385;
        _1395 = _1385;
        _1396 = _1385;
        _1397 = 0.0;
        _1398 = 0.0;
        _1399 = 0.0;
    }
    float _1692;
    float _1693;
    float _1694;
    float _1695;
    float _1696;
    float _1697;
    float _1698;
    float _1699;
    float _1700;
    float _1701;
    float _1702;
    float _1703;
    float _1704;
    float _1705;
    float _1706;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1423 = fma(_1083, cbModelParam._m0[30u].z, fma(_1079, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1075));
        float _1427 = fma(_1083, cbModelParam._m0[31u].z, fma(_1079, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1075));
        float _1431 = fma(_1083, cbModelParam._m0[32u].z, fma(_1079, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1075));
        float _1454 = _1075 + _864;
        float _1455 = _1079 + _865;
        float _1456 = _1083 + _866;
        float _1466 = fma(_1456, cbModelParam._m0[30u].z, fma(_1455, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1454)) - _1423;
        float _1467 = fma(_1456, cbModelParam._m0[31u].z, fma(_1455, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1454)) - _1427;
        float _1468 = fma(_1456, cbModelParam._m0[32u].z, fma(_1455, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1454)) - _1431;
        float _1472 = inversesqrt(dot(vec3(_1466, _1467, _1468), vec3(_1466, _1467, _1468)));
        float _1485 = ((_1472 * _1466) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1423 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1486 = ((_1472 * _1467) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1427 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1487 = ((_1472 * _1468) / cbModelParam._m0[35u].z) + ((((((_1431 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1489 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1485, _1486, _1487), 0.0);
        vec4 _1496 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1485, _1486, _1487), 0.0);
        vec4 _1503 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1485, _1486, _1487), 0.0);
        vec4 _1510 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1485, _1486, _1487), 0.0);
        float _1522 = exp2((_1489.w + (-0.5)) * 20.0) * 2.0;
        float _1523 = _1522 * (_1489.x + (-0.5));
        float _1524 = _1522 * (_1489.y + (-0.5));
        float _1525 = _1522 * (_1489.z + (-0.5));
        float _1532 = exp2((_1496.w + (-0.5)) * 20.0) * 2.0;
        float _1533 = _1532 * (_1496.x + (-0.5));
        float _1534 = _1532 * (_1496.y + (-0.5));
        float _1535 = _1532 * (_1496.z + (-0.5));
        float _1542 = exp2((_1503.w + (-0.5)) * 20.0) * 2.0;
        float _1543 = _1542 * (_1503.x + (-0.5));
        float _1544 = _1542 * (_1503.y + (-0.5));
        float _1545 = _1542 * (_1503.z + (-0.5));
        float _1552 = exp2((_1510.w + (-0.5)) * 20.0) * 2.0;
        float _1553 = _1552 * (_1510.x + (-0.5));
        float _1554 = _1552 * (_1510.y + (-0.5));
        float _1555 = _1552 * (_1510.z + (-0.5));
        float _1556 = isnan(0.0) ? _1553 : (isnan(_1553) ? 0.0 : max(_1553, 0.0));
        float _1557 = isnan(0.0) ? _1554 : (isnan(_1554) ? 0.0 : max(_1554, 0.0));
        float _1558 = isnan(0.0) ? _1555 : (isnan(_1555) ? 0.0 : max(_1555, 0.0));
        float _1559 = _1523 * 0.5;
        float _1560 = _1533 * 0.5;
        float _1561 = _1543 * 0.5;
        float _1562 = dot(vec3(_1559, _1560, _1561), vec3(_1559, _1560, _1561));
        float _1567 = (_1562 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1562);
        float _1575 = (dot(vec3(_864, _865, _866), vec3(_1567 * _1559, _1567 * _1560, _1567 * _1561)) + 1.0) * 0.5;
        float _4300 = isnan(0.0) ? _1575 : (isnan(_1575) ? 0.0 : max(_1575, 0.0));
        float _1584 = sqrt(((_1560 * _1560) + (_1559 * _1559)) + (_1561 * _1561)) / (_1556 + 9.9999997473787516355514526367188e-06);
        float _4311 = isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0));
        float _1585 = isnan(1.0) ? _4311 : (isnan(_4311) ? 1.0 : min(_4311, 1.0));
        float _1586 = _1585 * 2.0;
        float _1590 = (1.0 - _1585) / (_1585 + 1.0);
        float _4322 = isnan(0.0) ? _1590 : (isnan(_1590) ? 0.0 : max(_1590, 0.0));
        float _1591 = isnan(1.0) ? _4322 : (isnan(_4322) ? 1.0 : min(_4322, 1.0));
        float _1600 = ((((1.0 - _1591) * (_1586 + 2.0)) * exp2(log2(isnan(1.0) ? _4300 : (isnan(_4300) ? 1.0 : min(_4300, 1.0))) * (_1586 + 1.0))) + _1591) * _1556;
        float _1601 = _1524 * 0.5;
        float _1602 = _1534 * 0.5;
        float _1603 = _1544 * 0.5;
        float _1604 = dot(vec3(_1601, _1602, _1603), vec3(_1601, _1602, _1603));
        float _1609 = (_1604 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1604);
        float _1617 = (dot(vec3(_864, _865, _866), vec3(_1609 * _1601, _1609 * _1602, _1609 * _1603)) + 1.0) * 0.5;
        float _4333 = isnan(0.0) ? _1617 : (isnan(_1617) ? 0.0 : max(_1617, 0.0));
        float _1626 = sqrt(((_1602 * _1602) + (_1601 * _1601)) + (_1603 * _1603)) / (_1557 + 9.9999997473787516355514526367188e-06);
        float _4344 = isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0));
        float _1627 = isnan(1.0) ? _4344 : (isnan(_4344) ? 1.0 : min(_4344, 1.0));
        float _1628 = _1627 * 2.0;
        float _1632 = (1.0 - _1627) / (_1627 + 1.0);
        float _4355 = isnan(0.0) ? _1632 : (isnan(_1632) ? 0.0 : max(_1632, 0.0));
        float _1633 = isnan(1.0) ? _4355 : (isnan(_4355) ? 1.0 : min(_4355, 1.0));
        float _1642 = ((((1.0 - _1633) * (_1628 + 2.0)) * exp2(log2(isnan(1.0) ? _4333 : (isnan(_4333) ? 1.0 : min(_4333, 1.0))) * (_1628 + 1.0))) + _1633) * _1557;
        float _1643 = _1525 * 0.5;
        float _1644 = _1535 * 0.5;
        float _1645 = _1545 * 0.5;
        float _1646 = dot(vec3(_1643, _1644, _1645), vec3(_1643, _1644, _1645));
        float _1651 = (_1646 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1646);
        float _1659 = (dot(vec3(_864, _865, _866), vec3(_1651 * _1643, _1651 * _1644, _1651 * _1645)) + 1.0) * 0.5;
        float _4366 = isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0));
        float _1668 = sqrt(((_1644 * _1644) + (_1643 * _1643)) + (_1645 * _1645)) / (_1558 + 9.9999997473787516355514526367188e-06);
        float _4377 = isnan(0.0) ? _1668 : (isnan(_1668) ? 0.0 : max(_1668, 0.0));
        float _1669 = isnan(1.0) ? _4377 : (isnan(_4377) ? 1.0 : min(_4377, 1.0));
        float _1670 = _1669 * 2.0;
        float _1674 = (1.0 - _1669) / (_1669 + 1.0);
        float _4388 = isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0));
        float _1675 = isnan(1.0) ? _4388 : (isnan(_4388) ? 1.0 : min(_4388, 1.0));
        float _1684 = ((((1.0 - _1675) * (_1670 + 2.0)) * exp2(log2(isnan(1.0) ? _4366 : (isnan(_4366) ? 1.0 : min(_4366, 1.0))) * (_1670 + 1.0))) + _1675) * _1558;
        _1692 = _1525;
        _1693 = _1524;
        _1694 = _1523;
        _1695 = _1535;
        _1696 = _1534;
        _1697 = _1533;
        _1698 = _1545;
        _1699 = _1544;
        _1700 = _1543;
        _1701 = _1558;
        _1702 = _1557;
        _1703 = _1556;
        _1704 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1600 : (isnan(_1600) ? 0.0 : max(_1600, 0.0)));
        _1705 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1642 : (isnan(_1642) ? 0.0 : max(_1642, 0.0)));
        _1706 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0)));
    }
    else
    {
        _1692 = _1385;
        _1693 = _1385;
        _1694 = _1385;
        _1695 = _1385;
        _1696 = _1385;
        _1697 = _1385;
        _1698 = _1385;
        _1699 = _1385;
        _1700 = _1385;
        _1701 = _1385;
        _1702 = _1385;
        _1703 = _1385;
        _1704 = 0.0;
        _1705 = 0.0;
        _1706 = 0.0;
    }
    float _1716 = (cbModelParam._m0[1u].x * (_1704 - _1397)) + _1397;
    float _1717 = (cbModelParam._m0[1u].x * (_1705 - _1398)) + _1398;
    float _1718 = (cbModelParam._m0[1u].x * (_1706 - _1399)) + _1399;
    float _1739 = fma(_1718, cbSceneParam._m0[89u].z, fma(_1717, cbSceneParam._m0[89u].y, _1716 * cbSceneParam._m0[89u].x));
    float _1742 = fma(_1718, cbSceneParam._m0[90u].z, fma(_1717, cbSceneParam._m0[90u].y, _1716 * cbSceneParam._m0[90u].x));
    float _1745 = fma(_1718, cbSceneParam._m0[91u].z, fma(_1717, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1716));
    float _1760 = _1022 * 0.5;
    float _1761 = _1023 * 0.5;
    float _1762 = _1024 * 0.5;
    float _1763 = dot(vec4(_1760, _1761, _1762, 1.0), vec4(_1694, _1697, _1700, _1703));
    float _1766 = dot(vec4(_1760, _1761, _1762, 1.0), vec4(_1693, _1696, _1699, _1702));
    float _1769 = dot(vec4(_1760, _1761, _1762, 1.0), vec4(_1692, _1695, _1698, _1701));
    float _1803;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1776 = dot(vec4(_1760, _1761, _1762, 1.0), vec4(_1384, _1388, _1391, _1394));
        float _1780 = dot(vec4(_1760, _1761, _1762, 1.0), vec4(_1386, _1389, _1392, _1395));
        float _1784 = dot(vec4(_1760, _1761, _1762, 1.0), vec4(_1387, _1390, _1393, _1396));
        float _1791 = dot(vec4(cbModelParam._m0[39u]), vec4(_1760, _1761, _1762, 1.0));
        _1803 = dot(vec3(isnan(0.0) ? _1784 : (isnan(_1784) ? 0.0 : max(_1784, 0.0)), isnan(0.0) ? _1780 : (isnan(_1780) ? 0.0 : max(_1780, 0.0)), isnan(0.0) ? _1776 : (isnan(_1776) ? 0.0 : max(_1776, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1791) ? 0.0 : (isnan(0.0) ? _1791 : max(0.0, _1791))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1803 = 1.0;
    }
    float _1814;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1805 = dot(vec4(cbModelParam._m0[40u]), vec4(_1760, _1761, _1762, 1.0));
        _1814 = dot(vec3(isnan(0.0) ? _1763 : (isnan(_1763) ? 0.0 : max(_1763, 0.0)), isnan(0.0) ? _1766 : (isnan(_1766) ? 0.0 : max(_1766, 0.0)), isnan(0.0) ? _1769 : (isnan(_1769) ? 0.0 : max(_1769, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1805) ? 0.0 : (isnan(0.0) ? _1805 : max(0.0, _1805))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1814 = 1.0;
    }
    float _1818 = (_1814 * cbModelParam._m0[1u].x) + (_1803 * (1.0 - cbModelParam._m0[1u].x));
    float _1828 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _867);
    float _1829 = isnan(_1828) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1828 : min(cbModelParam._m0[25u].z, _1828));
    float _1909;
    float _1911;
    float _1913;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1876 = fma(_1083, cbModelParam._m0[13u].z, fma(_1079, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1075)) + cbModelParam._m0[13u].w;
        float _1880 = fma(_1083, cbModelParam._m0[14u].z, fma(_1079, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1075)) + cbModelParam._m0[14u].w;
        float _1884 = fma(_1083, cbModelParam._m0[15u].z, fma(_1079, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1075)) + cbModelParam._m0[15u].w;
        float _1887 = fma(_1024, cbModelParam._m0[13u].z, fma(_1023, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1022));
        float _1890 = fma(_1024, cbModelParam._m0[14u].z, fma(_1023, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1022));
        float _1893 = fma(_1024, cbModelParam._m0[15u].z, fma(_1023, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1022));
        float _1921;
        if (_1887 > 0.0)
        {
            _1921 = abs((1.0 - _1876) / _1887);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1887 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1876 + 1.0) / _1887);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1921 = frontier_phi_14_12_ladder;
        }
        float _2090;
        if (_1890 > 0.0)
        {
            _2090 = abs((1.0 - _1880) / _1890);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1890 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1880 + 1.0) / _1890);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2090 = frontier_phi_23_19_ladder;
        }
        float _2385;
        if (_1893 > 0.0)
        {
            _2385 = abs((1.0 - _1884) / _1893);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1893 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1884 + 1.0) / _1893);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2385 = frontier_phi_35_30_ladder;
        }
        float _2387 = isnan(_2090) ? _1921 : (isnan(_1921) ? _2090 : min(_1921, _2090));
        float _2388 = isnan(_2385) ? _2387 : (isnan(_2387) ? _2385 : min(_2387, _2385));
        float _2392 = (_2388 * _1887) + _1876;
        float _2393 = (_2388 * _1890) + _1880;
        float _2394 = (_2388 * _1893) + _1884;
        float _2395 = _2388 * 9.9999997473787516355514526367188e-05;
        float _2397 = (-1.0) - _2395;
        float _2399 = _2395 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2394 > _2399) || ((_2394 < _2397) || ((_2393 > _2399) || ((_2393 < _2397) || ((_2392 < _2397) || (_2392 > _2399))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2539 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2394, cbModelParam._m0[9u].z, fma(_2393, cbModelParam._m0[9u].y, _2392 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2394, cbModelParam._m0[10u].z, fma(_2393, cbModelParam._m0[10u].y, _2392 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2394, cbModelParam._m0[11u].z, fma(_2393, cbModelParam._m0[11u].y, _2392 * cbModelParam._m0[11u].x))), _1829);
            frontier_phi_13_35_ladder = _2539.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2539.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2539.x * cbModelParam._m0[1u].y;
        }
        _1909 = frontier_phi_13_35_ladder_2;
        _1911 = frontier_phi_13_35_ladder_1;
        _1913 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1897 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1022, _1023, _1024), _1829);
        _1909 = _1897.x * cbModelParam._m0[1u].y;
        _1911 = _1897.y * cbModelParam._m0[1u].y;
        _1913 = _1897.z * cbModelParam._m0[1u].y;
    }
    float _1917 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _867);
    float _1918 = isnan(_1917) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1917 : min(cbModelParam._m0[25u].w, _1917));
    float _2007;
    float _2009;
    float _2011;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1971 = fma(_1083, cbModelParam._m0[21u].z, fma(_1079, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1075)) + cbModelParam._m0[21u].w;
        float _1975 = fma(_1083, cbModelParam._m0[22u].z, fma(_1079, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1075)) + cbModelParam._m0[22u].w;
        float _1979 = fma(_1083, cbModelParam._m0[23u].z, fma(_1079, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1075)) + cbModelParam._m0[23u].w;
        float _1982 = fma(_1024, cbModelParam._m0[21u].z, fma(_1023, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1022));
        float _1985 = fma(_1024, cbModelParam._m0[22u].z, fma(_1023, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1022));
        float _1988 = fma(_1024, cbModelParam._m0[23u].z, fma(_1023, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1022));
        float _2095;
        if (_1982 > 0.0)
        {
            _2095 = abs((1.0 - _1971) / _1982);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1982 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1971 + 1.0) / _1982);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2095 = frontier_phi_25_21_ladder;
        }
        float _2412;
        if (_1985 > 0.0)
        {
            _2412 = abs((1.0 - _1975) / _1985);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1985 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1975 + 1.0) / _1985);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2412 = frontier_phi_37_32_ladder;
        }
        float _2739;
        if (_1988 > 0.0)
        {
            _2739 = abs((1.0 - _1979) / _1988);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1988 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1979 + 1.0) / _1988);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2739 = frontier_phi_47_44_ladder;
        }
        float _2741 = isnan(_2412) ? _2095 : (isnan(_2095) ? _2412 : min(_2095, _2412));
        float _2742 = isnan(_2739) ? _2741 : (isnan(_2741) ? _2739 : min(_2741, _2739));
        float _2746 = (_2742 * _1982) + _1971;
        float _2747 = (_2742 * _1985) + _1975;
        float _2748 = (_2742 * _1988) + _1979;
        float _2749 = _2742 * 9.9999997473787516355514526367188e-05;
        float _2750 = (-1.0) - _2749;
        float _2752 = _2749 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2748 > _2752) || ((_2748 < _2750) || ((_2747 > _2752) || ((_2747 < _2750) || ((_2746 < _2750) || (_2746 > _2752))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2866 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2748, cbModelParam._m0[17u].z, fma(_2747, cbModelParam._m0[17u].y, _2746 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2748, cbModelParam._m0[18u].z, fma(_2747, cbModelParam._m0[18u].y, _2746 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2748, cbModelParam._m0[19u].z, fma(_2747, cbModelParam._m0[19u].y, _2746 * cbModelParam._m0[19u].x))), _1918);
            frontier_phi_22_47_ladder = _2866.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2866.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2866.x * cbModelParam._m0[1u].z;
        }
        _2007 = frontier_phi_22_47_ladder_2;
        _2009 = frontier_phi_22_47_ladder_1;
        _2011 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1991 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1022, _1023, _1024), _1918);
        _2007 = _1991.x * cbModelParam._m0[1u].z;
        _2009 = _1991.y * cbModelParam._m0[1u].z;
        _2011 = _1991.z * cbModelParam._m0[1u].z;
    }
    float _2023 = ((((1.0 - _1043) * ((_1030 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1043 * _1030)) * _1014;
    float _2024 = _2023 * ((cbModelParam._m0[1u].w * (_2007 - _1909)) + _1909);
    float _2025 = _2023 * ((cbModelParam._m0[1u].w * (_2009 - _1911)) + _1911);
    float _2026 = _2023 * ((cbModelParam._m0[1u].w * (_2011 - _1913)) + _1913);
    float _2029 = fma(_2026, cbSceneParam._m0[89u].z, fma(_2025, cbSceneParam._m0[89u].y, _2024 * cbSceneParam._m0[89u].x));
    float _2032 = fma(_2026, cbSceneParam._m0[90u].z, fma(_2025, cbSceneParam._m0[90u].y, _2024 * cbSceneParam._m0[90u].x));
    float _2035 = fma(_2026, cbSceneParam._m0[91u].z, fma(_2025, cbSceneParam._m0[91u].y, _2024 * cbSceneParam._m0[91u].x));
    float _2069 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2073 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2077 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2081 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2082 = _2069 / _2081;
    float _2083 = _2073 / _2081;
    float _2084 = _2077 / _2081;
    float _2231;
    float _2232;
    float _2233;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2111 = ((uint(_2084 > cbSceneParam._m0[59u].y) + uint(_2084 > cbSceneParam._m0[59u].x)) + uint(_2084 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2112 = _2111 + 43u;
        uint _2120 = _2111 + 44u;
        uint _2128 = _2111 + 45u;
        uint _2136 = _2111 + 46u;
        float _2147 = fma(_2081, cbSceneParam._m0[_2112].w, fma(_2077, cbSceneParam._m0[_2112].z, fma(_2073, cbSceneParam._m0[_2112].y, _2069 * cbSceneParam._m0[_2112].x)));
        float _2151 = fma(_2081, cbSceneParam._m0[_2120].w, fma(_2077, cbSceneParam._m0[_2120].z, fma(_2073, cbSceneParam._m0[_2120].y, _2069 * cbSceneParam._m0[_2120].x)));
        float _2159 = fma(_2081, cbSceneParam._m0[_2136].w, fma(_2077, cbSceneParam._m0[_2136].z, fma(_2073, cbSceneParam._m0[_2136].y, _2069 * cbSceneParam._m0[_2136].x)));
        float _2164 = cbSceneParam._m0[33u].z * _2159;
        float _2166 = cbSceneParam._m0[33u].w * _2159;
        float _2169 = fma(_2081, cbSceneParam._m0[_2128].w, fma(_2077, cbSceneParam._m0[_2128].z, fma(_2073, cbSceneParam._m0[_2128].y, _2069 * cbSceneParam._m0[_2128].x))) / _2159;
        float _2217 = (cbSceneParam._m0[33u].x - sqrt(((_2083 * _2083) + (_2082 * _2082)) + (_2084 * _2084))) * cbSceneParam._m0[33u].y;
        float _4514 = isnan(0.0) ? _2217 : (isnan(_2217) ? 0.0 : max(_2217, 0.0));
        float _2224 = (isnan(1.0) ? _4514 : (isnan(_4514) ? 1.0 : min(_4514, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2164 + _2147) / _2159, (_2166 + _2151) / _2159), _2169), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2166 + _2147) / _2159, (_2151 - _2164) / _2159), _2169), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2147 - _2164) / _2159, (_2151 - _2166) / _2159), _2169), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2147 - _2166) / _2159, (_2164 + _2151) / _2159), _2169), 0.0)).x), vec4(0.25)));
        _2231 = 1.0 - (_2224 * cbSceneParam._m0[34u].x);
        _2232 = 1.0 - (_2224 * cbSceneParam._m0[34u].y);
        _2233 = 1.0 - (_2224 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2231 = 1.0;
        _2232 = 1.0;
        _2233 = 1.0;
    }
    float _2297;
    float _2299;
    float _2301;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2285 = fma(_2081, cbSceneParam._m0[63u].w, fma(_2077, cbSceneParam._m0[63u].z, fma(_2073, cbSceneParam._m0[63u].y, _2069 * cbSceneParam._m0[63u].x)));
        float _2286 = fma(_2081, cbSceneParam._m0[60u].w, fma(_2077, cbSceneParam._m0[60u].z, fma(_2073, cbSceneParam._m0[60u].y, _2069 * cbSceneParam._m0[60u].x))) / _2285;
        float _2287 = fma(_2081, cbSceneParam._m0[61u].w, fma(_2077, cbSceneParam._m0[61u].z, fma(_2073, cbSceneParam._m0[61u].y, _2069 * cbSceneParam._m0[61u].x))) / _2285;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2286 >= cbSceneParam._m0[64u].x) && (_2287 >= cbSceneParam._m0[64u].y)) && (_2286 <= cbSceneParam._m0[64u].z)) && (_2287 <= cbSceneParam._m0[64u].w))
        {
            float _2425 = fma(_2081, cbSceneParam._m0[62u].w, fma(_2077, cbSceneParam._m0[62u].z, fma(_2073, cbSceneParam._m0[62u].y, _2069 * cbSceneParam._m0[62u].x))) / _2285;
            float _2429 = isnan(cbSceneParam._m0[41u].w) ? _2425 : (isnan(_2425) ? cbSceneParam._m0[41u].w : max(_2425, cbSceneParam._m0[41u].w));
            float _2472 = (cbSceneParam._m0[33u].x - sqrt(((_2083 * _2083) + (_2082 * _2082)) + (_2084 * _2084))) * cbSceneParam._m0[33u].y;
            float _4530 = isnan(0.0) ? _2472 : (isnan(_2472) ? 0.0 : max(_2472, 0.0));
            float _2479 = (isnan(1.0) ? _4530 : (isnan(_4530) ? 1.0 : min(_4530, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2286, cbSceneParam._m0[33u].w + _2287), _2429), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2286, _2287 - cbSceneParam._m0[33u].z), _2429), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2286 - cbSceneParam._m0[33u].z, _2287 - cbSceneParam._m0[33u].w), _2429), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2286 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2287), _2429), 0.0)).x), vec4(0.25)));
            float _2483 = 1.0 - (_2479 * cbSceneParam._m0[34u].x);
            float _2484 = 1.0 - (_2479 * cbSceneParam._m0[34u].y);
            float _2485 = 1.0 - (_2479 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2485) ? _2233 : (isnan(_2233) ? _2485 : min(_2233, _2485));
            frontier_phi_34_33_ladder_1 = isnan(_2484) ? _2232 : (isnan(_2232) ? _2484 : min(_2232, _2484));
            frontier_phi_34_33_ladder_2 = isnan(_2483) ? _2231 : (isnan(_2231) ? _2483 : min(_2231, _2483));
        }
        else
        {
            frontier_phi_34_33_ladder = _2233;
            frontier_phi_34_33_ladder_1 = _2232;
            frontier_phi_34_33_ladder_2 = _2231;
        }
        _2297 = frontier_phi_34_33_ladder_2;
        _2299 = frontier_phi_34_33_ladder_1;
        _2301 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2297 = _2231;
        _2299 = _2232;
        _2301 = _2233;
    }
    uvec4 _2306 = floatBitsToUint(cbInstanceData._m0[_255 + 5u]);
    uint _2308 = _2306.x * 14u;
    uint _2309 = _2308 + 13u;
    float _2316 = _1014 + (-1.0);
    float _2321 = (cbLight._m0[_2309].x * _2316) + 1.0;
    float _2322 = (cbLight._m0[_2309].y * _2316) + 1.0;
    float _2323 = (cbLight._m0[_2309].z * _2316) + 1.0;
    float _2324 = (cbLight._m0[_2309].w * _2316) + 1.0;
    uint _2325 = _2308 + 5u;
    float _2331 = isnan(1.0) ? _2322 : (isnan(_2322) ? 1.0 : min(_2322, 1.0));
    uint _2335 = _2308 + 4u;
    float _2344 = isnan(1.0) ? _2321 : (isnan(_2321) ? 1.0 : min(_2321, 1.0));
    uint _2348 = _2308 | 1u;
    float _2359 = dot(vec3(cbLight._m0[_2308].xyz), vec3(_864, _865, _866));
    float _2362 = dot(vec3(cbLight._m0[_2348].xyz), vec3(_864, _865, _866));
    float _4566 = isnan(0.0) ? _2359 : (isnan(_2359) ? 0.0 : max(_2359, 0.0));
    float _4577 = isnan(0.0) ? _2362 : (isnan(_2362) ? 0.0 : max(_2362, 0.0));
    float _2367 = (isnan(1.0) ? _4566 : (isnan(_4566) ? 1.0 : min(_4566, 1.0))) * 0.3183098733425140380859375;
    float _2369 = (isnan(1.0) ? _4577 : (isnan(_4577) ? 1.0 : min(_4577, 1.0))) * 0.3183098733425140380859375;
    float _2376 = ((cbLight._m0[_2325].x * _2331) * _2369) + (((cbLight._m0[_2335].x * _2297) * _2344) * _2367);
    float _2377 = ((_2331 * cbLight._m0[_2325].y) * _2369) + (((cbLight._m0[_2335].y * _2299) * _2344) * _2367);
    float _2378 = ((_2331 * cbLight._m0[_2325].z) * _2369) + (((cbLight._m0[_2335].z * _2301) * _2344) * _2367);
    uvec4 _2382 = floatBitsToUint(cbLight._m0[_2308 + 12u]);
    bool _2384 = _2382.x == 0u;
    float _2486;
    float _2488;
    float _2490;
    if (_2384)
    {
        _2486 = _2376;
        _2488 = _2377;
        _2490 = _2378;
    }
    else
    {
        uint _2494 = _2308 + 6u;
        float _2510 = (dot(vec3(cbLight._m0[_2308 + 2u].xyz), vec3(_864, _865, _866)) * 0.5) + 0.5;
        float _2511 = _2510 * _2510;
        float _4588 = isnan(0.0) ? _2511 : (isnan(_2511) ? 0.0 : max(_2511, 0.0));
        float _2512 = isnan(1.0) ? _4588 : (isnan(_4588) ? 1.0 : min(_4588, 1.0));
        float _2513 = isnan(1.0) ? _2323 : (isnan(_2323) ? 1.0 : min(_2323, 1.0));
        _2486 = (((cbLight._m0[_2494].x * 0.3183098733425140380859375) * _2512) * _2513) + _2376;
        _2488 = (((cbLight._m0[_2494].y * 0.3183098733425140380859375) * _2512) * _2513) + _2377;
        _2490 = (((cbLight._m0[_2494].z * 0.3183098733425140380859375) * _2512) * _2513) + _2378;
    }
    bool _2493 = _2382.y == 0u;
    float _2548;
    float _2550;
    float _2552;
    if (_2493)
    {
        _2548 = _2486;
        _2550 = _2488;
        _2552 = _2490;
    }
    else
    {
        uint _2710 = _2308 + 7u;
        float _2726 = (dot(vec3(cbLight._m0[_2308 + 3u].xyz), vec3(_864, _865, _866)) * 0.5) + 0.5;
        float _2727 = _2726 * _2726;
        float _4604 = isnan(0.0) ? _2727 : (isnan(_2727) ? 0.0 : max(_2727, 0.0));
        float _2728 = isnan(1.0) ? _4604 : (isnan(_4604) ? 1.0 : min(_4604, 1.0));
        float _2729 = isnan(1.0) ? _2324 : (isnan(_2324) ? 1.0 : min(_2324, 1.0));
        _2548 = (((cbLight._m0[_2710].x * 0.3183098733425140380859375) * _2728) * _2729) + _2486;
        _2550 = (((cbLight._m0[_2710].y * 0.3183098733425140380859375) * _2728) * _2729) + _2488;
        _2552 = (((cbLight._m0[_2710].z * 0.3183098733425140380859375) * _2728) * _2729) + _2490;
    }
    uint _2555 = _2308 + 8u;
    float _2568 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2308].w)) * _867) * 0.949999988079071044921875);
    float _2569 = _2568 * _2568;
    float _2570 = cbLight._m0[_2308].x + _943;
    float _2571 = cbLight._m0[_2308].y + _944;
    float _2572 = cbLight._m0[_2308].z + _945;
    float _2576 = inversesqrt(dot(vec3(_2570, _2571, _2572), vec3(_2570, _2571, _2572)));
    float _2577 = _2576 * _2570;
    float _2578 = _2576 * _2571;
    float _2579 = _2576 * _2572;
    float _2580 = dot(vec3(_864, _865, _866), vec3(cbLight._m0[_2308].xyz));
    float _4620 = isnan(0.0) ? _2580 : (isnan(_2580) ? 0.0 : max(_2580, 0.0));
    float _2583 = isnan(1.0) ? _4620 : (isnan(_4620) ? 1.0 : min(_4620, 1.0));
    float _4631 = isnan(0.0) ? _1015 : (isnan(_1015) ? 0.0 : max(_1015, 0.0));
    float _2584 = isnan(1.0) ? _4631 : (isnan(_4631) ? 1.0 : min(_4631, 1.0));
    float _2585 = dot(vec3(_864, _865, _866), vec3(_2577, _2578, _2579));
    float _4642 = isnan(0.0) ? _2585 : (isnan(_2585) ? 0.0 : max(_2585, 0.0));
    float _2588 = isnan(1.0) ? _4642 : (isnan(_4642) ? 1.0 : min(_4642, 1.0));
    float _2589 = dot(vec3(cbLight._m0[_2308].xyz), vec3(_2577, _2578, _2579));
    float _4653 = isnan(0.0) ? _2589 : (isnan(_2589) ? 0.0 : max(_2589, 0.0));
    float _2593 = _2569 * _2569;
    float _2597 = ((_2588 * _2588) * (_2593 + (-1.0))) + 1.0;
    float _2608 = (exp2(log2(1.0 - (isnan(1.0) ? _4653 : (isnan(_4653) ? 1.0 : min(_4653, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2609 = 1.0 - _2569;
    float _2620 = (0.5 / (((_2584 * ((_2583 * _2609) + _2569)) + 9.9999999392252902907785028219223e-09) + (((_2584 * _2609) + _2569) * _2583))) * _2583;
    float _4664 = isnan(0.0) ? _2620 : (isnan(_2620) ? 0.0 : max(_2620, 0.0));
    float _2622 = (isnan(1.0) ? _4664 : (isnan(_4664) ? 1.0 : min(_4664, 1.0))) * (_2593 / ((_2597 * _2597) * 3.141590118408203125));
    uint _2636 = _2308 + 9u;
    float _2647 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2348].w)) * _867) * 0.949999988079071044921875);
    float _2648 = _2647 * _2647;
    float _2649 = cbLight._m0[_2348].x + _943;
    float _2650 = cbLight._m0[_2348].y + _944;
    float _2651 = cbLight._m0[_2348].z + _945;
    float _2655 = inversesqrt(dot(vec3(_2649, _2650, _2651), vec3(_2649, _2650, _2651)));
    float _2656 = _2655 * _2649;
    float _2657 = _2655 * _2650;
    float _2658 = _2655 * _2651;
    float _2659 = dot(vec3(_864, _865, _866), vec3(cbLight._m0[_2348].xyz));
    float _4675 = isnan(0.0) ? _2659 : (isnan(_2659) ? 0.0 : max(_2659, 0.0));
    float _2662 = isnan(1.0) ? _4675 : (isnan(_4675) ? 1.0 : min(_4675, 1.0));
    float _2663 = dot(vec3(_864, _865, _866), vec3(_2656, _2657, _2658));
    float _4686 = isnan(0.0) ? _2663 : (isnan(_2663) ? 0.0 : max(_2663, 0.0));
    float _2666 = isnan(1.0) ? _4686 : (isnan(_4686) ? 1.0 : min(_4686, 1.0));
    float _2667 = dot(vec3(cbLight._m0[_2348].xyz), vec3(_2656, _2657, _2658));
    float _4697 = isnan(0.0) ? _2667 : (isnan(_2667) ? 0.0 : max(_2667, 0.0));
    float _2671 = _2648 * _2648;
    float _2675 = ((_2666 * _2666) * (_2671 + (-1.0))) + 1.0;
    float _2684 = (exp2(log2(1.0 - (isnan(1.0) ? _4697 : (isnan(_4697) ? 1.0 : min(_4697, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2685 = 1.0 - _2648;
    float _2695 = (0.5 / (((_2584 * ((_2662 * _2685) + _2648)) + 9.9999999392252902907785028219223e-09) + (((_2584 * _2685) + _2648) * _2662))) * _2662;
    float _4708 = isnan(0.0) ? _2695 : (isnan(_2695) ? 0.0 : max(_2695, 0.0));
    float _2697 = (isnan(1.0) ? _4708 : (isnan(_4708) ? 1.0 : min(_4708, 1.0))) * (_2671 / ((_2675 * _2675) * 3.141590118408203125));
    float _2707 = (((_2684 * cbLight._m0[_2636].x) * _2697) * _2331) + ((((cbLight._m0[_2555].x * _2297) * _2608) * _2622) * _2344);
    float _2708 = (((_2684 * cbLight._m0[_2636].y) * _2697) * _2331) + ((((cbLight._m0[_2555].y * _2299) * _2608) * _2622) * _2344);
    float _2709 = (((_2684 * cbLight._m0[_2636].z) * _2697) * _2331) + ((((cbLight._m0[_2555].z * _2301) * _2608) * _2622) * _2344);
    float _2765;
    float _2767;
    float _2769;
    if (_2384)
    {
        _2765 = _2707;
        _2767 = _2708;
        _2769 = _2709;
    }
    else
    {
        uint _2771 = _2308 + 2u;
        uint _2775 = _2308 + 10u;
        float _2789 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2771].w)) * _867) * 0.949999988079071044921875);
        float _2790 = _2789 * _2789;
        float _2791 = cbLight._m0[_2771].x + _943;
        float _2792 = cbLight._m0[_2771].y + _944;
        float _2793 = cbLight._m0[_2771].z + _945;
        float _2797 = inversesqrt(dot(vec3(_2791, _2792, _2793), vec3(_2791, _2792, _2793)));
        float _2798 = _2797 * _2791;
        float _2799 = _2797 * _2792;
        float _2800 = _2797 * _2793;
        float _2801 = dot(vec3(_864, _865, _866), vec3(cbLight._m0[_2771].xyz));
        float _4719 = isnan(0.0) ? _2801 : (isnan(_2801) ? 0.0 : max(_2801, 0.0));
        float _2804 = isnan(1.0) ? _4719 : (isnan(_4719) ? 1.0 : min(_4719, 1.0));
        float _2805 = dot(vec3(_864, _865, _866), vec3(_2798, _2799, _2800));
        float _4730 = isnan(0.0) ? _2805 : (isnan(_2805) ? 0.0 : max(_2805, 0.0));
        float _2808 = isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0));
        float _2809 = dot(vec3(cbLight._m0[_2771].xyz), vec3(_2798, _2799, _2800));
        float _4741 = isnan(0.0) ? _2809 : (isnan(_2809) ? 0.0 : max(_2809, 0.0));
        float _2813 = _2790 * _2790;
        float _2817 = ((_2808 * _2808) * (_2813 + (-1.0))) + 1.0;
        float _2826 = (exp2(log2(1.0 - (isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2827 = 1.0 - _2790;
        float _2837 = (0.5 / (((_2584 * ((_2804 * _2827) + _2790)) + 9.9999999392252902907785028219223e-09) + (((_2584 * _2827) + _2790) * _2804))) * _2804;
        float _4752 = isnan(0.0) ? _2837 : (isnan(_2837) ? 0.0 : max(_2837, 0.0));
        float _2839 = (isnan(1.0) ? _4752 : (isnan(_4752) ? 1.0 : min(_4752, 1.0))) * (_2813 / ((_2817 * _2817) * 3.141590118408203125));
        float _2840 = isnan(1.0) ? _2323 : (isnan(_2323) ? 1.0 : min(_2323, 1.0));
        _2765 = (((_2826 * cbLight._m0[_2775].x) * _2839) * _2840) + _2707;
        _2767 = (((_2826 * cbLight._m0[_2775].y) * _2839) * _2840) + _2708;
        _2769 = (((_2826 * cbLight._m0[_2775].z) * _2839) * _2840) + _2709;
    }
    float _2871;
    float _2873;
    float _2875;
    if (_2493)
    {
        _2871 = _2765;
        _2873 = _2767;
        _2875 = _2769;
    }
    else
    {
        uint _2882 = _2308 + 3u;
        uint _2886 = _2308 + 11u;
        float _2900 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2882].w)) * _867) * 0.949999988079071044921875);
        float _2901 = _2900 * _2900;
        float _2902 = cbLight._m0[_2882].x + _943;
        float _2903 = cbLight._m0[_2882].y + _944;
        float _2904 = cbLight._m0[_2882].z + _945;
        float _2908 = inversesqrt(dot(vec3(_2902, _2903, _2904), vec3(_2902, _2903, _2904)));
        float _2909 = _2908 * _2902;
        float _2910 = _2908 * _2903;
        float _2911 = _2908 * _2904;
        float _2912 = dot(vec3(_864, _865, _866), vec3(cbLight._m0[_2882].xyz));
        float _4768 = isnan(0.0) ? _2912 : (isnan(_2912) ? 0.0 : max(_2912, 0.0));
        float _2915 = isnan(1.0) ? _4768 : (isnan(_4768) ? 1.0 : min(_4768, 1.0));
        float _2916 = dot(vec3(_864, _865, _866), vec3(_2909, _2910, _2911));
        float _4779 = isnan(0.0) ? _2916 : (isnan(_2916) ? 0.0 : max(_2916, 0.0));
        float _2919 = isnan(1.0) ? _4779 : (isnan(_4779) ? 1.0 : min(_4779, 1.0));
        float _2920 = dot(vec3(cbLight._m0[_2882].xyz), vec3(_2909, _2910, _2911));
        float _4790 = isnan(0.0) ? _2920 : (isnan(_2920) ? 0.0 : max(_2920, 0.0));
        float _2924 = _2901 * _2901;
        float _2928 = ((_2919 * _2919) * (_2924 + (-1.0))) + 1.0;
        float _2937 = (exp2(log2(1.0 - (isnan(1.0) ? _4790 : (isnan(_4790) ? 1.0 : min(_4790, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2938 = 1.0 - _2901;
        float _2948 = (0.5 / (((_2584 * ((_2915 * _2938) + _2901)) + 9.9999999392252902907785028219223e-09) + (((_2584 * _2938) + _2901) * _2915))) * _2915;
        float _4801 = isnan(0.0) ? _2948 : (isnan(_2948) ? 0.0 : max(_2948, 0.0));
        float _2950 = (isnan(1.0) ? _4801 : (isnan(_4801) ? 1.0 : min(_4801, 1.0))) * (_2924 / ((_2928 * _2928) * 3.141590118408203125));
        float _2951 = isnan(1.0) ? _2324 : (isnan(_2324) ? 1.0 : min(_2324, 1.0));
        _2871 = (((_2937 * cbLight._m0[_2886].x) * _2950) * _2951) + _2765;
        _2873 = (((_2937 * cbLight._m0[_2886].y) * _2950) * _2951) + _2767;
        _2875 = (((_2937 * cbLight._m0[_2886].z) * _2950) * _2951) + _2769;
    }
    float _3017;
    float _3019;
    float _3021;
    float _3023;
    float _3025;
    float _3027;
    if (_2306.y == 0u)
    {
        uvec4 _2972 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2973 = _2972.x;
        uint _2984 = uint((float(_2972.y) * floor(float(uint(cbSceneParam._m0[85u].y * _952) / _2973))) + floor(float(uint(cbSceneParam._m0[85u].x * _951) / _2973)));
        float _2994 = (log2(_2084 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2995 = isnan(0.0) ? _2994 : (isnan(_2994) ? 0.0 : max(_2994, 0.0));
        uint _2998 = uint(isnan(14.0) ? _2995 : (isnan(_2995) ? 14.0 : min(_2995, 14.0)));
        uvec4 _3003 = texelFetch(g_lightClusterGridBuffer, int(((_2998 << 2u) + (_2984 << 6u)) >> 2u));
        uint _3004 = _3003.x;
        uint _3005 = _2972.z;
        float _3084;
        float _3086;
        float _3088;
        float _3090;
        float _3092;
        float _3094;
        if (((((1u << ((_3005 >> 4u) & 15u)) + 4294967295u) & _3004) == 0u) || ((_3005 & 240u) == 0u))
        {
            _3084 = 0.0;
            _3086 = 0.0;
            _3088 = 0.0;
            _3090 = 0.0;
            _3092 = 0.0;
            _3094 = 0.0;
        }
        else
        {
            float _3085;
            float _3087;
            float _3089;
            float _3091;
            float _3093;
            float _3095;
            float _3228 = 0.0;
            float _3229 = 0.0;
            float _3230 = 0.0;
            float _3231 = 0.0;
            float _3232 = 0.0;
            float _3233 = 0.0;
            uint _3234 = 0u;
            uint _3243;
            bool _3244;
            for (;;)
            {
                _3243 = texelFetch(g_lightClassification, int((((_2998 << 5u) + (_2984 << 9u)) + (_3234 << 2u)) >> 2u)).x;
                _3244 = _3243 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3244)
                {
                    frontier_phi_66_pred = _3233;
                    frontier_phi_66_pred_1 = _3232;
                    frontier_phi_66_pred_2 = _3231;
                    frontier_phi_66_pred_3 = _3230;
                    frontier_phi_66_pred_4 = _3229;
                    frontier_phi_66_pred_5 = _3228;
                }
                else
                {
                    float _3352;
                    float _3353;
                    float _3354;
                    float _3355;
                    float _3356;
                    float _3357;
                    uint _3358;
                    _3352 = _3228;
                    _3353 = _3229;
                    _3354 = _3230;
                    _3355 = _3231;
                    _3356 = _3232;
                    _3357 = _3233;
                    _3358 = _3243;
                    float _3284;
                    float _3285;
                    float _3286;
                    float _3287;
                    float _3288;
                    float _3289;
                    for (;;)
                    {
                        uint _3362 = uint(findLSB(_3358)) + (_3234 << 5u);
                        uint _3359 = (_3358 + 4294967295u) & _3358;
                        uint _3364 = _3362 * 48u;
                        vec4 _3378 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3364)).x, texelFetch(g_PointLightRenderingBuffer, int(_3364 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3364 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3364 + 3u)).x));
                        uint _3384 = (_3362 * 48u) + 4u;
                        vec4 _3397 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3384)).x, texelFetch(g_PointLightRenderingBuffer, int(_3384 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3384 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3384 + 3u)).x));
                        uint _3403 = (_3362 * 48u) + 8u;
                        vec3 _3414 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3403)).x, texelFetch(g_PointLightRenderingBuffer, int(_3403 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3403 + 2u)).x));
                        float _3418 = _3378.x - _2082;
                        float _3419 = _3378.y - _2083;
                        float _3420 = _3378.z - _2084;
                        float _3421 = dot(vec3(_3418, _3419, _3420), vec3(_3418, _3419, _3420));
                        float _3424 = inversesqrt(_3421);
                        float _3425 = _3424 * _3418;
                        float _3426 = _3424 * _3419;
                        float _3427 = _3424 * _3420;
                        float _3428 = dot(vec3(_970, _973, _976), vec3(_3425, _3426, _3427));
                        float _3433 = 1.0 - (_3421 * _3378.w);
                        float _4827 = isnan(0.0) ? _3433 : (isnan(_3433) ? 0.0 : max(_3433, 0.0));
                        float _3434 = isnan(1.0) ? _4827 : (isnan(_4827) ? 1.0 : min(_4827, 1.0));
                        float _3435 = sqrt(_3421) * _3397.w;
                        float _3438 = 1.39999997615814208984375 / (_3435 + 1.39999997615814208984375);
                        float _3439 = _3438 * _3438;
                        float _3442 = ((1.0 - _3439) * _3428) + _3439;
                        float _3445 = _3435 * _3435;
                        float _3449 = ((isnan(0.0) ? _3442 : (isnan(_3442) ? 0.0 : max(_3442, 0.0))) * _3434) / ((_3445 * 0.699999988079071044921875) + 1.0);
                        float _3453 = (-0.0) - _2082;
                        float _3454 = (-0.0) - _2083;
                        float _3455 = (-0.0) - _2084;
                        float _3459 = inversesqrt(dot(vec3(_3453, _3454, _3455), vec3(_3453, _3454, _3455)));
                        float _3460 = _3459 * _3453;
                        float _3461 = _3459 * _3454;
                        float _3462 = _3459 * _3455;
                        float _3469 = exp2(log2(1.0 / ((_3445 * 3.5) + 5.0)) * 0.25);
                        float _3470 = 1.0 - _1030;
                        float _3477 = sqrt(1.0 - ((1.0 - (_3470 * _3470)) * (1.0 - (_3469 * _3469))));
                        float _3478 = _3477 * _3477;
                        float _3479 = _3478 * _3478;
                        float _3480 = _3460 + _3425;
                        float _3481 = _3461 + _3426;
                        float _3482 = _3462 + _3427;
                        float _3486 = inversesqrt(dot(vec3(_3480, _3481, _3482), vec3(_3480, _3481, _3482)));
                        float _3490 = dot(vec3(_970, _973, _976), vec3(_3460, _3461, _3462));
                        float _4843 = isnan(0.0) ? _3490 : (isnan(_3490) ? 0.0 : max(_3490, 0.0));
                        float _3493 = isnan(1.0) ? _4843 : (isnan(_4843) ? 1.0 : min(_4843, 1.0));
                        float _3494 = dot(vec3(_970, _973, _976), vec3(_3486 * _3480, _3486 * _3481, _3486 * _3482));
                        float _4854 = isnan(0.0) ? _3494 : (isnan(_3494) ? 0.0 : max(_3494, 0.0));
                        float _3497 = isnan(1.0) ? _4854 : (isnan(_4854) ? 1.0 : min(_4854, 1.0));
                        float _3501 = ((_3497 * _3497) * (_3479 + (-1.0))) + 1.0;
                        float _3502 = _3438 * _3478;
                        float _3503 = _3502 * _3502;
                        float _3506 = ((1.0 - _3503) * _3428) + _3503;
                        float _4865 = isnan(0.0) ? _3506 : (isnan(_3506) ? 0.0 : max(_3506, 0.0));
                        float _3507 = isnan(1.0) ? _4865 : (isnan(_4865) ? 1.0 : min(_4865, 1.0));
                        float _3508 = 1.0 - _3478;
                        float _3518 = (0.5 / (((_3507 * ((_3493 * _3508) + _3478)) + 9.9999999392252902907785028219223e-09) + (((_3507 * _3508) + _3478) * _3493))) * _3507;
                        float _4876 = isnan(0.0) ? _3518 : (isnan(_3518) ? 0.0 : max(_3518, 0.0));
                        float _3529 = (((_3479 * 3.1415927410125732421875) * (isnan(1.0) ? _4876 : (isnan(_4876) ? 1.0 : min(_4876, 1.0)))) / ((_3501 * _3501) * ((_3445 * 2.1991131305694580078125) + 3.141590118408203125))) * _3434;
                        _3287 = (_3449 * _3397.x) + _3355;
                        _3288 = (_3449 * _3397.y) + _3356;
                        _3289 = (_3449 * _3397.z) + _3357;
                        _3284 = (_3529 * _3414.x) + _3352;
                        _3285 = (_3529 * _3414.y) + _3353;
                        _3286 = (_3529 * _3414.z) + _3354;
                        if (_3359 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3352 = _3284;
                            _3353 = _3285;
                            _3354 = _3286;
                            _3355 = _3287;
                            _3356 = _3288;
                            _3357 = _3289;
                            _3358 = _3359;
                        }
                    }
                    frontier_phi_66_pred = _3289;
                    frontier_phi_66_pred_1 = _3288;
                    frontier_phi_66_pred_2 = _3287;
                    frontier_phi_66_pred_3 = _3286;
                    frontier_phi_66_pred_4 = _3285;
                    frontier_phi_66_pred_5 = _3284;
                }
                _3095 = frontier_phi_66_pred;
                _3093 = frontier_phi_66_pred_1;
                _3091 = frontier_phi_66_pred_2;
                _3089 = frontier_phi_66_pred_3;
                _3087 = frontier_phi_66_pred_4;
                _3085 = frontier_phi_66_pred_5;
                uint _3235 = _3234 + 1u;
                if (_3235 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3228 = _3085;
                    _3229 = _3087;
                    _3230 = _3089;
                    _3231 = _3091;
                    _3232 = _3093;
                    _3233 = _3095;
                    _3234 = _3235;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3084 = _3085;
            _3086 = _3087;
            _3088 = _3089;
            _3090 = _3091;
            _3092 = _3093;
            _3094 = _3095;
        }
        uvec4 _3098 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3099 = _3098.z;
        uint _3101 = (_3099 >> 8u) & 15u;
        float _3196;
        float _3198;
        float _3200;
        float _3202;
        float _3204;
        float _3206;
        if (((4294967295u << _3101) & _3004) == 0u)
        {
            _3196 = _3084;
            _3198 = _3086;
            _3200 = _3088;
            _3202 = _3090;
            _3204 = _3092;
            _3206 = _3094;
        }
        else
        {
            float _3221 = inversesqrt(dot(vec3(_2082, _2083, _2084), vec3(_2082, _2083, _2084)));
            float _3222 = _3221 * _2082;
            float _3223 = _3221 * _2083;
            float _3224 = _3221 * _2084;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3101 < ((_3099 >> 12u) & 15u))
            {
                float _3197;
                float _3199;
                float _3201;
                float _3203;
                float _3205;
                float _3207;
                float _3335 = _3084;
                float _3336 = _3086;
                float _3337 = _3088;
                float _3338 = _3090;
                float _3339 = _3092;
                float _3340 = _3094;
                uint _3341 = _3101;
                uint _3350;
                bool _3351;
                for (;;)
                {
                    _3350 = texelFetch(g_lightClassification, int((((_2998 << 5u) + (_2984 << 9u)) + (_3341 << 2u)) >> 2u)).x;
                    _3351 = _3350 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3351)
                    {
                        frontier_phi_72_pred = _3340;
                        frontier_phi_72_pred_1 = _3339;
                        frontier_phi_72_pred_2 = _3338;
                        frontier_phi_72_pred_3 = _3337;
                        frontier_phi_72_pred_4 = _3336;
                        frontier_phi_72_pred_5 = _3335;
                    }
                    else
                    {
                        float _3534;
                        float _3535;
                        float _3536;
                        float _3537;
                        float _3538;
                        float _3539;
                        float _3827;
                        float _3828;
                        float _3829;
                        float _3830;
                        float _3831;
                        float _3832;
                        float _3547 = _3335;
                        float _3548 = _3336;
                        float _3549 = _3337;
                        float _3550 = _3338;
                        float _3551 = _3339;
                        float _3552 = _3340;
                        uint _3553 = _3350;
                        uint _3554;
                        vec4 _3579;
                        float _3580;
                        vec4 _3595;
                        vec3 _3607;
                        vec4 _3622;
                        vec4 _3637;
                        float _3683;
                        bool _3684;
                        for (;;)
                        {
                            uint _3564 = ((_3341 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3553));
                            _3554 = (_3553 + 4294967295u) & _3553;
                            uint _3566 = _3564 * 40u;
                            _3579 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3566)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3566 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3566 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3566 + 3u)).x));
                            _3580 = _3579.w;
                            uint _3582 = (_3564 * 40u) + 4u;
                            _3595 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3582)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3582 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3582 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3582 + 3u)).x));
                            uint _3597 = (_3564 * 40u) + 8u;
                            _3607 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3597)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3597 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3597 + 2u)).x));
                            uint _3609 = (_3564 * 40u) + 16u;
                            _3622 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3609)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3609 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3609 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3609 + 3u)).x));
                            uint _3624 = (_3564 * 40u) + 20u;
                            _3637 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3624)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3624 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3624 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3624 + 3u)).x));
                            uint _3639 = (_3564 * 40u) + 24u;
                            vec4 _3652 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3639)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3639 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3639 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3639 + 3u)).x));
                            uint _3658 = (_3564 * 40u) + 28u;
                            vec4 _3671 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3658)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3658 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3658 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3658 + 3u)).x));
                            _3683 = fma(_2084, _3671.z, fma(_2083, _3671.y, _3671.x * _2082)) + _3671.w;
                            _3684 = !((fma(_2084, _3652.z, fma(_2083, _3652.y, _3652.x * _2082)) + _3652.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3684)
                            {
                                float _3711 = _3579.x - _2082;
                                float _3712 = _3579.y - _2083;
                                float _3713 = _3579.z - _2084;
                                float _3714 = dot(vec3(_3711, _3712, _3713), vec3(_3711, _3712, _3713));
                                float _3717 = inversesqrt(_3714);
                                float _3718 = _3717 * _3711;
                                float _3719 = _3717 * _3712;
                                float _3720 = _3717 * _3713;
                                float _3724 = 1.0 - (_3714 / (_3580 * _3580));
                                float _4887 = isnan(0.0) ? _3724 : (isnan(_3724) ? 0.0 : max(_3724, 0.0));
                                float _3725 = isnan(1.0) ? _4887 : (isnan(_4887) ? 1.0 : min(_4887, 1.0));
                                float _3729 = sqrt(_3714) * _3595.w;
                                float _3731 = 1.39999997615814208984375 / (_3729 + 1.39999997615814208984375);
                                float _3732 = _3731 * _3731;
                                float _3735 = ((1.0 - _3732) * dot(vec3(_3718, _3719, _3720), vec3(_970, _973, _976))) + _3732;
                                float _3738 = _3729 * _3729;
                                float _3742 = (fma(_2084, _3622.z, fma(_2083, _3622.y, _3622.x * _2082)) + _3622.w) / _3683;
                                float _3743 = (fma(_2084, _3637.z, fma(_2083, _3637.y, _3637.x * _2082)) + _3637.w) / _3683;
                                float _3747 = 1.0 - dot(vec2(_3742, _3743), vec2(_3742, _3743));
                                float _4903 = isnan(0.0) ? _3747 : (isnan(_3747) ? 0.0 : max(_3747, 0.0));
                                float _3748 = isnan(1.0) ? _4903 : (isnan(_4903) ? 1.0 : min(_4903, 1.0));
                                float _3749 = _3748 * (((isnan(0.0) ? _3735 : (isnan(_3735) ? 0.0 : max(_3735, 0.0))) * _3725) / ((_3738 * 0.699999988079071044921875) + 1.0));
                                float _3761 = exp2(log2(1.0 / ((_3738 * 3.5) + 5.0)) * 0.25);
                                float _3762 = 1.0 - _1030;
                                float _3769 = sqrt(1.0 - ((1.0 - (_3762 * _3762)) * (1.0 - (_3761 * _3761))));
                                float _3770 = _3769 * _3769;
                                float _3771 = _3770 * _3770;
                                float _3772 = _3718 - _3222;
                                float _3773 = _3719 - _3223;
                                float _3774 = _3720 - _3224;
                                float _3778 = inversesqrt(dot(vec3(_3772, _3773, _3774), vec3(_3772, _3773, _3774)));
                                float _3782 = dot(vec3(_970, _973, _976), vec3((-0.0) - _3222, (-0.0) - _3223, (-0.0) - _3224));
                                float _4914 = isnan(0.0) ? _3782 : (isnan(_3782) ? 0.0 : max(_3782, 0.0));
                                float _3785 = isnan(1.0) ? _4914 : (isnan(_4914) ? 1.0 : min(_4914, 1.0));
                                float _3786 = dot(vec3(_970, _973, _976), vec3(_3778 * _3772, _3778 * _3773, _3778 * _3774));
                                float _4925 = isnan(0.0) ? _3786 : (isnan(_3786) ? 0.0 : max(_3786, 0.0));
                                float _3789 = isnan(1.0) ? _4925 : (isnan(_4925) ? 1.0 : min(_4925, 1.0));
                                float _3793 = ((_3789 * _3789) * (_3771 + (-1.0))) + 1.0;
                                float _3794 = _3731 * _3770;
                                float _3795 = _3794 * _3794;
                                float _3801 = ((1.0 - _3795) * dot(vec3(_970, _973, _976), vec3(_3718, _3719, _3720))) + _3795;
                                float _4936 = isnan(0.0) ? _3801 : (isnan(_3801) ? 0.0 : max(_3801, 0.0));
                                float _3802 = isnan(1.0) ? _4936 : (isnan(_4936) ? 1.0 : min(_4936, 1.0));
                                float _3803 = 1.0 - _3770;
                                float _3813 = (0.5 / (((_3802 * ((_3785 * _3803) + _3770)) + 9.9999999392252902907785028219223e-09) + (((_3802 * _3803) + _3770) * _3785))) * _3802;
                                float _4947 = isnan(0.0) ? _3813 : (isnan(_3813) ? 0.0 : max(_3813, 0.0));
                                float _3823 = (_3748 * _3725) * (((_3771 * 3.1415927410125732421875) * (isnan(1.0) ? _4947 : (isnan(_4947) ? 1.0 : min(_4947, 1.0)))) / ((_3793 * _3793) * ((_3738 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3749 * _3595.y;
                                frontier_phi_78_pred_1 = _3749 * _3595.x;
                                frontier_phi_78_pred_2 = _3823 * _3607.z;
                                frontier_phi_78_pred_3 = _3823 * _3607.y;
                                frontier_phi_78_pred_4 = _3823 * _3607.x;
                                frontier_phi_78_pred_5 = _3749 * _3595.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3831 = frontier_phi_78_pred;
                            _3830 = frontier_phi_78_pred_1;
                            _3829 = frontier_phi_78_pred_2;
                            _3828 = frontier_phi_78_pred_3;
                            _3827 = frontier_phi_78_pred_4;
                            _3832 = frontier_phi_78_pred_5;
                            _3537 = _3830 + _3550;
                            _3538 = _3831 + _3551;
                            _3539 = _3832 + _3552;
                            _3534 = _3827 + _3547;
                            _3535 = _3828 + _3548;
                            _3536 = _3829 + _3549;
                            if (_3554 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3547 = _3534;
                                _3548 = _3535;
                                _3549 = _3536;
                                _3550 = _3537;
                                _3551 = _3538;
                                _3552 = _3539;
                                _3553 = _3554;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3539;
                        frontier_phi_72_pred_1 = _3538;
                        frontier_phi_72_pred_2 = _3537;
                        frontier_phi_72_pred_3 = _3536;
                        frontier_phi_72_pred_4 = _3535;
                        frontier_phi_72_pred_5 = _3534;
                    }
                    _3207 = frontier_phi_72_pred;
                    _3205 = frontier_phi_72_pred_1;
                    _3203 = frontier_phi_72_pred_2;
                    _3201 = frontier_phi_72_pred_3;
                    _3199 = frontier_phi_72_pred_4;
                    _3197 = frontier_phi_72_pred_5;
                    uint _3342 = _3341 + 1u;
                    if (_3342 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3335 = _3197;
                        _3336 = _3199;
                        _3337 = _3201;
                        _3338 = _3203;
                        _3339 = _3205;
                        _3340 = _3207;
                        _3341 = _3342;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3207;
                frontier_phi_60_61_ladder_1 = _3205;
                frontier_phi_60_61_ladder_2 = _3201;
                frontier_phi_60_61_ladder_3 = _3199;
                frontier_phi_60_61_ladder_4 = _3197;
                frontier_phi_60_61_ladder_5 = _3203;
            }
            else
            {
                frontier_phi_60_61_ladder = _3094;
                frontier_phi_60_61_ladder_1 = _3092;
                frontier_phi_60_61_ladder_2 = _3088;
                frontier_phi_60_61_ladder_3 = _3086;
                frontier_phi_60_61_ladder_4 = _3084;
                frontier_phi_60_61_ladder_5 = _3090;
            }
            _3196 = frontier_phi_60_61_ladder_4;
            _3198 = frontier_phi_60_61_ladder_3;
            _3200 = frontier_phi_60_61_ladder_2;
            _3202 = frontier_phi_60_61_ladder_5;
            _3204 = frontier_phi_60_61_ladder_1;
            _3206 = frontier_phi_60_61_ladder;
        }
        float _3211 = isnan(1.0) ? _1014 : (isnan(_1014) ? 1.0 : min(_1014, 1.0));
        _3017 = (_3211 * _3202) + _2548;
        _3019 = (_3211 * _3204) + _2550;
        _3021 = (_3211 * _3206) + _2552;
        _3023 = ((_3196 * 0.039999999105930328369140625) * _3211) + _2871;
        _3025 = ((_3198 * 0.039999999105930328369140625) * _3211) + _2873;
        _3027 = ((_3200 * 0.039999999105930328369140625) * _3211) + _2875;
    }
    else
    {
        _3017 = _2548;
        _3019 = _2550;
        _3021 = _2552;
        _3023 = _2871;
        _3025 = _2873;
        _3027 = _2875;
    }
    float _4963 = isnan(0.0) ? _999 : (isnan(_999) ? 0.0 : max(_999, 0.0));
    float _4974 = isnan(0.0) ? _1000 : (isnan(_1000) ? 0.0 : max(_1000, 0.0));
    float _4985 = isnan(0.0) ? _1001 : (isnan(_1001) ? 0.0 : max(_1001, 0.0));
    uint _3047 = _255 + 6u;
    float _3055 = _951 / cbSceneParam._m0[86u].x;
    float _3056 = _952 / cbSceneParam._m0[86u].y;
    vec4 _3070 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3055, _3056, (log2((isnan(cbSceneParam._m0[77u].w) ? _885 : (isnan(_885) ? cbSceneParam._m0[77u].w : min(_885, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3072 = _3070.x;
    float _3073 = _3070.y;
    float _3074 = _3070.z;
    float _3075 = _3070.w;
    float _3146;
    float _3148;
    float _3150;
    float _3152;
    if (_885 > cbSceneParam._m0[78u].w)
    {
        float _3109 = isnan(_885) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _885 : min(cbSceneParam._m0[80u].w, _885));
        float _3110 = _3109 / _885;
        float _3121 = _3110 * _936;
        float _3122 = _937 * _3110;
        float _3123 = (-0.0) - _3122;
        float _3124 = _3110 * _938;
        float _3126 = (cbSceneParam._m0[77u].w * _3123) / _3109;
        float _3127 = _3126 + cbSceneParam._m0[79u].w;
        float _3128 = cbSceneParam._m0[79u].w - _3122;
        float _3134 = sqrt(((_3121 * _3121) + (_3122 * _3122)) + (_3124 * _3124));
        float _3137 = (1.0 - (cbSceneParam._m0[77u].w / _3109)) * _3134;
        float _3142 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3144 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3297;
        if (abs((_3123 - _3126) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3297 = ((((_3127 > 0.0) ? exp2(_3142 * _3127) : (2.0 - exp2(_3144 * _3127))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3137;
        }
        else
        {
            float _3257 = 1.0 / cbSceneParam._m0[80u].x;
            float _3258 = isnan(_3128) ? _3127 : (isnan(_3127) ? _3128 : max(_3127, _3128));
            float _3259 = isnan(_3128) ? _3127 : (isnan(_3127) ? _3128 : min(_3127, _3128));
            float _3268 = isnan(0.0) ? _3258 : (isnan(_3258) ? 0.0 : min(_3258, 0.0));
            float _3269 = isnan(0.0) ? _3259 : (isnan(_3259) ? 0.0 : min(_3259, 0.0));
            _3297 = ((abs(_3134 / _3123) * cbSceneParam._m0[80u].y) * ((((_3268 - _3269) * 2.0) - ((exp2(_3142 * (isnan(0.0) ? _3258 : (isnan(_3258) ? 0.0 : max(_3258, 0.0)))) - exp2(_3142 * (isnan(0.0) ? _3259 : (isnan(_3259) ? 0.0 : max(_3259, 0.0))))) * _3257)) - ((exp2(_3144 * _3268) - exp2(_3144 * _3269)) * _3257))) + (_3137 * cbSceneParam._m0[80u].z);
        }
        vec4 _3299 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3055, _3056, 1.0), 0.0);
        float _3308 = exp2((_3297 * (-1.44269502162933349609375)) * (1.0 - _3299.w));
        float _3309 = log2(_3308);
        float _3325 = log2(_3075);
        _3146 = (exp2(_3325 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3309 * cbSceneParam._m0[78u].x)) * _3299.x) / cbSceneParam._m0[78u].x)) + _3072;
        _3148 = (exp2(_3325 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3309 * cbSceneParam._m0[78u].y)) * _3299.y) / cbSceneParam._m0[78u].y)) + _3073;
        _3150 = (exp2(_3325 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3309 * cbSceneParam._m0[78u].z)) * _3299.z) / cbSceneParam._m0[78u].z)) + _3074;
        _3152 = _3308 * _3075;
    }
    else
    {
        _3146 = _3072;
        _3148 = _3073;
        _3150 = _3074;
        _3152 = _3075;
    }
    float _3164 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3165 = _3164 == 3.0;
    float _3166 = log2(_3152);
    float _3173 = exp2(_3166 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4963 : (isnan(_4963) ? 1.0 : min(_4963, 1.0))) * (_3017 + ((isnan(0.0) ? _1739 : (isnan(_1739) ? 0.0 : max(_1739, 0.0))) * _1014))) + ((_3023 + ((isnan(0.0) ? _2029 : (isnan(_2029) ? 0.0 : max(_2029, 0.0))) * _1818)) * cbPerFrame._m0[3u].x));
    float _3174 = exp2(_3166 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4974 : (isnan(_4974) ? 1.0 : min(_4974, 1.0))) * (_3019 + ((isnan(0.0) ? _1742 : (isnan(_1742) ? 0.0 : max(_1742, 0.0))) * _1014))) + ((_3025 + ((isnan(0.0) ? _2032 : (isnan(_2032) ? 0.0 : max(_2032, 0.0))) * _1818)) * cbPerFrame._m0[3u].x));
    float _3175 = exp2(_3166 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4985 : (isnan(_4985) ? 1.0 : min(_4985, 1.0))) * (_3021 + ((isnan(0.0) ? _1745 : (isnan(_1745) ? 0.0 : max(_1745, 0.0))) * _1014))) + ((_3027 + ((isnan(0.0) ? _2035 : (isnan(_2035) ? 0.0 : max(_2035, 0.0))) * _1818)) * cbPerFrame._m0[3u].x));
    float _3184 = (_3164 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3184 * (_3165 ? _3173 : (_3173 + (cbSceneParam._m0[72u].w * _3146)));
    SV_Target.y = _3184 * (_3165 ? _3174 : (_3174 + (cbSceneParam._m0[72u].w * _3148)));
    SV_Target.z = _3184 * (_3165 ? _3175 : (_3175 + (cbSceneParam._m0[72u].w * _3150)));
    SV_Target.w = cbInstanceData._m0[_3047].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3047].w;
}


