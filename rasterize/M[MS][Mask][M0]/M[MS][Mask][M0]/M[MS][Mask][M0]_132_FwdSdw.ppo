#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 14) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 22) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_6;
layout(set = 0, binding = 23) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_8;
layout(set = 0, binding = 24) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_Mask_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1378;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _222 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _223 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _224 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _230 = inversesqrt(dot(vec3(_222, _223, _224), vec3(_222, _223, _224)));
    float _237 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _244 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _250 = uint(roundEven(NORMAL.w)) * 13u;
    uint _256 = _250 + 1u;
    uint _260 = _250 + 2u;
    float _269 = sqrt(((cbInstanceData._m0[_256].x * cbInstanceData._m0[_256].x) + (cbInstanceData._m0[_250].x * cbInstanceData._m0[_250].x)) + (cbInstanceData._m0[_260].x * cbInstanceData._m0[_260].x));
    float _270 = _269 * TEXCOORD.z;
    float _271 = _269 * TEXCOORD.w;
    vec4 _290 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _314 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _319 = _314.x * cbMtdParam._m0[11u].x;
    float _320 = _314.y * cbMtdParam._m0[11u].y;
    float _321 = _314.z * cbMtdParam._m0[11u].z;
    vec4 _340 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _270) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _271) + cbTextureTilingScale._m0[5u].w));
    vec4 _360 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[22u].x * TEXCOORD.x) + cbTextureTilingScale._m0[22u].z, (cbTextureTilingScale._m0[22u].y * TEXCOORD.y) + cbTextureTilingScale._m0[22u].w));
    vec4 _400 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _402 = _400.x;
    float _414 = dot(vec4(_402, _400.yzw), vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0));
    float _431 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.x) - _360.x) * 2.0) - ((((_402 - _414) * cbMtdParam._m0[24u].z) + _414) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3963 = isnan(0.0) ? _431 : (isnan(_431) ? 0.0 : max(_431, 0.0));
    float _432 = isnan(1.0) ? _3963 : (isnan(_3963) ? 1.0 : min(_3963, 1.0));
    float _439 = (_432 * ((_340.x * cbMtdParam._m0[12u].x) - _319)) + _319;
    float _440 = (_432 * ((_340.y * cbMtdParam._m0[12u].y) - _320)) + _320;
    float _441 = (_432 * ((_340.z * cbMtdParam._m0[12u].z) - _321)) + _321;
    vec4 _458 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _270) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _271) + cbTextureTilingScale._m0[3u].w));
    vec4 _478 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _480 = _478.x;
    float _490 = dot(vec4(_480, _478.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _504 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.y) - _360.y) * 2.0) - ((((_480 - _490) * cbMtdParam._m0[24u].z) + _490) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3974 = isnan(0.0) ? _504 : (isnan(_504) ? 0.0 : max(_504, 0.0));
    float _505 = isnan(1.0) ? _3974 : (isnan(_3974) ? 1.0 : min(_3974, 1.0));
    float _512 = (_505 * ((_458.x * cbMtdParam._m0[13u].x) - _439)) + _439;
    float _513 = (_505 * ((_458.y * cbMtdParam._m0[13u].y) - _440)) + _440;
    float _514 = (_505 * ((_458.z * cbMtdParam._m0[13u].z) - _441)) + _441;
    vec4 _532 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[24u].x * _270) + cbTextureTilingScale._m0[24u].z, (cbTextureTilingScale._m0[24u].y * _271) + cbTextureTilingScale._m0[24u].w));
    vec4 _549 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[25u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _551 = _549.x;
    float _561 = dot(vec4(_551, _549.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _573 = ((cbMtdParam._m0[25u].x * (-1.2000000476837158203125)) * ((((1.0 - TEXCOORD_5.z) - _360.z) * 2.0) - ((((_551 - _561) * cbMtdParam._m0[24u].z) + _561) * cbMtdParam._m0[20u].z))) + 1.0;
    float _3985 = isnan(0.0) ? _573 : (isnan(_573) ? 0.0 : max(_573, 0.0));
    float _574 = isnan(1.0) ? _3985 : (isnan(_3985) ? 1.0 : min(_3985, 1.0));
    float _587 = ((cbMtdParam._m0[9u].x * 4.55000019073486328125) * _290.x) * ((_574 * ((_532.x * cbMtdParam._m0[14u].x) - _512)) + _512);
    float _590 = ((cbMtdParam._m0[9u].y * 4.55000019073486328125) * _290.y) * ((_574 * ((_532.y * cbMtdParam._m0[14u].y) - _513)) + _513);
    float _593 = ((cbMtdParam._m0[9u].z * 4.55000019073486328125) * _290.z) * ((_574 * ((_532.z * cbMtdParam._m0[14u].z) - _514)) + _514);
    vec4 _611 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _270) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _271) + cbTextureTilingScale._m0[14u].w));
    vec4 _631 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _270) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _271) + cbTextureTilingScale._m0[4u].w));
    vec4 _648 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _650 = _648.x;
    float _651 = _648.y;
    float _652 = _648.z;
    float _659 = ((_631.x - _650) * _432) + _650;
    float _660 = ((_631.y - _651) * _432) + _651;
    float _661 = ((_631.z - _652) * _432) + _652;
    vec4 _673 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _270) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _271) + cbTextureTilingScale._m0[2u].w));
    float _684 = ((_673.x - _659) * _505) + _659;
    float _685 = ((_673.y - _660) * _505) + _660;
    float _686 = ((_673.z - _661) * _505) + _661;
    vec4 _698 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[23u].x * _270) + cbTextureTilingScale._m0[23u].z, (cbTextureTilingScale._m0[23u].y * _271) + cbTextureTilingScale._m0[23u].w));
    float _711 = ((_698.z - _686) * _574) + _686;
    float _714 = ((((_698.x - _684) * _574) + _684) * 2.0) + (-1.0);
    float _716 = ((((_698.y - _685) * _574) + _685) * 2.0) + (-1.0);
    float _717 = dot(vec2(_714, _716), vec2(_714, _716));
    float _3996 = isnan(0.0) ? _717 : (isnan(_717) ? 0.0 : max(_717, 0.0));
    float _722 = sqrt(1.0 - (isnan(1.0) ? _3996 : (isnan(_3996) ? 1.0 : min(_3996, 1.0))));
    vec4 _736 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _761 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _270) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _271) + cbTextureTilingScale._m0[11u].w));
    float _763 = _761.x;
    float _764 = 1.0 - _763;
    float _777 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_763 - _764) * cbMtdParam._m0[24u].w) + _764) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4007 = isnan(0.0) ? _777 : (isnan(_777) ? 0.0 : max(_777, 0.0));
    float _778 = isnan(1.0) ? _4007 : (isnan(_4007) ? 1.0 : min(_4007, 1.0));
    float _785 = (_778 * ((_611.x * cbMtdParam._m0[18u].x) - _587)) + _587;
    float _786 = (_778 * ((_611.y * cbMtdParam._m0[18u].y) - _590)) + _590;
    float _787 = (_778 * ((_611.z * cbMtdParam._m0[18u].z) - _593)) + _593;
    float _791 = (cbMtdParam._m0[19u].w * (_736.z - _711)) + _711;
    vec4 _804 = texture(sampler2D(M_MS_Mask_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _270) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _271) + cbTextureTilingScale._m0[15u].w));
    float _811 = (_804.x * 2.0) + (-1.0);
    float _812 = (_804.y * 2.0) + (-1.0);
    float _813 = dot(vec2(_811, _812), vec2(_811, _812));
    float _4018 = isnan(0.0) ? _813 : (isnan(_813) ? 0.0 : max(_813, 0.0));
    float _821 = (_778 * (_804.z - _791)) + _791;
    float _824 = (((_736.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _714;
    float _825 = (((_736.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _716;
    float _837 = (((_811 - _824) + (cbMtdParam._m0[21u].x * _824)) * _778) + _824;
    float _838 = (((_812 - _825) + (cbMtdParam._m0[21u].x * _825)) * _778) + _825;
    float _839 = (_778 * (sqrt(1.0 - (isnan(1.0) ? _4018 : (isnan(_4018) ? 1.0 : min(_4018, 1.0)))) - _722)) + _722;
    float _843 = cbMtdParam._m0[22u].x + _736.w;
    float _846 = fma(_839, _237 * NORMAL.x, fma(_838, _244 * TANGENT.x, (_230 * _222) * _837));
    float _849 = fma(_839, _237 * NORMAL.y, fma(_838, _244 * TANGENT.y, (_230 * _223) * _837));
    float _852 = fma(_839, _237 * NORMAL.z, fma(_838, _244 * TANGENT.z, (_230 * _224) * _837));
    float _856 = inversesqrt(dot(vec3(_846, _849, _852), vec3(_846, _849, _852)));
    float _857 = _856 * _846;
    float _858 = _856 * _849;
    float _859 = _856 * _852;
    float _4029 = isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : max(_821, 0.0));
    float _860 = isnan(1.0) ? _4029 : (isnan(_4029) ? 1.0 : min(_4029, 1.0));
    float _4040 = isnan(0.0) ? _843 : (isnan(_843) ? 0.0 : max(_843, 0.0));
    float _4051 = isnan(0.0) ? _785 : (isnan(_785) ? 0.0 : max(_785, 0.0));
    float _4062 = isnan(0.0) ? _786 : (isnan(_786) ? 0.0 : max(_786, 0.0));
    float _4073 = isnan(0.0) ? _787 : (isnan(_787) ? 0.0 : max(_787, 0.0));
    float _878 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _919 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _929 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _919);
    float _930 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _919);
    float _931 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _919);
    float _935 = inversesqrt(dot(vec3(_929, _930, _931), vec3(_929, _930, _931)));
    float _936 = _929 * _935;
    float _937 = _930 * _935;
    float _938 = _931 * _935;
    float _944 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _945 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _963 = fma(_859, cbSceneParam._m0[5u].z, fma(_858, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _857));
    float _966 = fma(_859, cbSceneParam._m0[6u].z, fma(_858, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _857));
    float _969 = fma(_859, cbSceneParam._m0[7u].z, fma(_858, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _857));
    uint _983 = (_250 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _989 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0)))) * cbInstanceData._m0[_983].x;
    float _990 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4062 : (isnan(_4062) ? 1.0 : min(_4062, 1.0)))) * cbInstanceData._m0[_983].y;
    float _991 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4073 : (isnan(_4073) ? 1.0 : min(_4073, 1.0)))) * cbInstanceData._m0[_983].z;
    float _4084 = isnan(0.0) ? _989 : (isnan(_989) ? 0.0 : max(_989, 0.0));
    float _992 = isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0));
    float _4095 = isnan(0.0) ? _990 : (isnan(_990) ? 0.0 : max(_990, 0.0));
    float _993 = isnan(1.0) ? _4095 : (isnan(_4095) ? 1.0 : min(_4095, 1.0));
    float _4106 = isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0));
    float _994 = isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0));
    vec4 _1003 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _944, cbSceneParam._m0[86u].y * _945));
    float _1007 = ((isnan(1.0) ? _4040 : (isnan(_4040) ? 1.0 : min(_4040, 1.0))) * TEXCOORD_5.w) * _1003.x;
    float _1008 = dot(vec3(_857, _858, _859), vec3(_936, _937, _938));
    float _1011 = _1008 * 2.0;
    float _1015 = (_1011 * _857) - _936;
    float _1016 = (_1011 * _858) - _937;
    float _1017 = (_1011 * _859) - _938;
    float _1021 = abs(dot(vec3(_936, _937, _938), vec3(_857, _858, _859)));
    float _4117 = isnan(0.0) ? _1021 : (isnan(_1021) ? 0.0 : max(_1021, 0.0));
    float _1023 = sqrt(_860);
    float _1036 = exp2((_1023 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1023 * 3.0));
    float _1068 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1072 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1076 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1377;
    float _1379;
    float _1380;
    float _1381;
    float _1382;
    float _1383;
    float _1384;
    float _1385;
    float _1386;
    float _1387;
    float _1388;
    float _1389;
    float _1390;
    float _1391;
    float _1392;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1102 = fma(_1076, cbModelParam._m0[26u].z, fma(_1072, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1068));
        float _1106 = fma(_1076, cbModelParam._m0[27u].z, fma(_1072, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1068));
        float _1110 = fma(_1076, cbModelParam._m0[28u].z, fma(_1072, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1068));
        float _1135 = _1068 + _857;
        float _1136 = _1072 + _858;
        float _1137 = _1076 + _859;
        float _1147 = fma(_1137, cbModelParam._m0[26u].z, fma(_1136, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1135)) - _1102;
        float _1148 = fma(_1137, cbModelParam._m0[27u].z, fma(_1136, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1135)) - _1106;
        float _1149 = fma(_1137, cbModelParam._m0[28u].z, fma(_1136, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1135)) - _1110;
        float _1153 = inversesqrt(dot(vec3(_1147, _1148, _1149), vec3(_1147, _1148, _1149)));
        float _1166 = ((_1153 * _1147) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1102 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1167 = ((_1153 * _1148) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1106 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1168 = ((_1153 * _1149) / cbModelParam._m0[34u].z) + ((((((_1110 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1171 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1166, _1167, _1168), 0.0);
        vec4 _1178 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1166, _1167, _1168), 0.0);
        vec4 _1185 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1166, _1167, _1168), 0.0);
        vec4 _1192 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1166, _1167, _1168), 0.0);
        float _1205 = exp2((_1171.w + (-0.5)) * 20.0) * 2.0;
        float _1206 = _1205 * (_1171.x + (-0.5));
        float _1207 = _1205 * (_1171.y + (-0.5));
        float _1208 = _1205 * (_1171.z + (-0.5));
        float _1215 = exp2((_1178.w + (-0.5)) * 20.0) * 2.0;
        float _1216 = _1215 * (_1178.x + (-0.5));
        float _1217 = _1215 * (_1178.y + (-0.5));
        float _1218 = _1215 * (_1178.z + (-0.5));
        float _1225 = exp2((_1185.w + (-0.5)) * 20.0) * 2.0;
        float _1226 = _1225 * (_1185.x + (-0.5));
        float _1227 = _1225 * (_1185.y + (-0.5));
        float _1228 = _1225 * (_1185.z + (-0.5));
        float _1235 = exp2((_1192.w + (-0.5)) * 20.0) * 2.0;
        float _1236 = _1235 * (_1192.x + (-0.5));
        float _1237 = _1235 * (_1192.y + (-0.5));
        float _1238 = _1235 * (_1192.z + (-0.5));
        float _1239 = isnan(0.0) ? _1236 : (isnan(_1236) ? 0.0 : max(_1236, 0.0));
        float _1240 = isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0));
        float _1241 = isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0));
        float _1242 = _1206 * 0.5;
        float _1243 = _1216 * 0.5;
        float _1244 = _1226 * 0.5;
        float _1245 = dot(vec3(_1242, _1243, _1244), vec3(_1242, _1243, _1244));
        float _1250 = (_1245 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1245);
        float _1259 = (dot(vec3(_857, _858, _859), vec3(_1250 * _1242, _1250 * _1243, _1250 * _1244)) + 1.0) * 0.5;
        float _4143 = isnan(0.0) ? _1259 : (isnan(_1259) ? 0.0 : max(_1259, 0.0));
        float _1269 = sqrt(((_1243 * _1243) + (_1242 * _1242)) + (_1244 * _1244)) / (_1239 + 9.9999997473787516355514526367188e-06);
        float _4154 = isnan(0.0) ? _1269 : (isnan(_1269) ? 0.0 : max(_1269, 0.0));
        float _1270 = isnan(1.0) ? _4154 : (isnan(_4154) ? 1.0 : min(_4154, 1.0));
        float _1271 = _1270 * 2.0;
        float _1275 = (1.0 - _1270) / (_1270 + 1.0);
        float _4165 = isnan(0.0) ? _1275 : (isnan(_1275) ? 0.0 : max(_1275, 0.0));
        float _1276 = isnan(1.0) ? _4165 : (isnan(_4165) ? 1.0 : min(_4165, 1.0));
        float _1285 = ((((1.0 - _1276) * (_1271 + 2.0)) * exp2(log2(isnan(1.0) ? _4143 : (isnan(_4143) ? 1.0 : min(_4143, 1.0))) * (_1271 + 1.0))) + _1276) * _1239;
        float _1286 = _1207 * 0.5;
        float _1287 = _1217 * 0.5;
        float _1288 = _1227 * 0.5;
        float _1289 = dot(vec3(_1286, _1287, _1288), vec3(_1286, _1287, _1288));
        float _1294 = (_1289 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1289);
        float _1302 = (dot(vec3(_857, _858, _859), vec3(_1294 * _1286, _1294 * _1287, _1294 * _1288)) + 1.0) * 0.5;
        float _4176 = isnan(0.0) ? _1302 : (isnan(_1302) ? 0.0 : max(_1302, 0.0));
        float _1311 = sqrt(((_1287 * _1287) + (_1286 * _1286)) + (_1288 * _1288)) / (_1240 + 9.9999997473787516355514526367188e-06);
        float _4187 = isnan(0.0) ? _1311 : (isnan(_1311) ? 0.0 : max(_1311, 0.0));
        float _1312 = isnan(1.0) ? _4187 : (isnan(_4187) ? 1.0 : min(_4187, 1.0));
        float _1313 = _1312 * 2.0;
        float _1317 = (1.0 - _1312) / (_1312 + 1.0);
        float _4198 = isnan(0.0) ? _1317 : (isnan(_1317) ? 0.0 : max(_1317, 0.0));
        float _1318 = isnan(1.0) ? _4198 : (isnan(_4198) ? 1.0 : min(_4198, 1.0));
        float _1327 = ((((1.0 - _1318) * (_1313 + 2.0)) * exp2(log2(isnan(1.0) ? _4176 : (isnan(_4176) ? 1.0 : min(_4176, 1.0))) * (_1313 + 1.0))) + _1318) * _1240;
        float _1328 = _1208 * 0.5;
        float _1329 = _1218 * 0.5;
        float _1330 = _1228 * 0.5;
        float _1331 = dot(vec3(_1328, _1329, _1330), vec3(_1328, _1329, _1330));
        float _1336 = (_1331 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1331);
        float _1344 = (dot(vec3(_857, _858, _859), vec3(_1336 * _1328, _1336 * _1329, _1336 * _1330)) + 1.0) * 0.5;
        float _4209 = isnan(0.0) ? _1344 : (isnan(_1344) ? 0.0 : max(_1344, 0.0));
        float _1353 = sqrt(((_1329 * _1329) + (_1328 * _1328)) + (_1330 * _1330)) / (_1241 + 9.9999997473787516355514526367188e-06);
        float _4220 = isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0));
        float _1354 = isnan(1.0) ? _4220 : (isnan(_4220) ? 1.0 : min(_4220, 1.0));
        float _1355 = _1354 * 2.0;
        float _1359 = (1.0 - _1354) / (_1354 + 1.0);
        float _4231 = isnan(0.0) ? _1359 : (isnan(_1359) ? 0.0 : max(_1359, 0.0));
        float _1360 = isnan(1.0) ? _4231 : (isnan(_4231) ? 1.0 : min(_4231, 1.0));
        float _1369 = ((((1.0 - _1360) * (_1355 + 2.0)) * exp2(log2(isnan(1.0) ? _4209 : (isnan(_4209) ? 1.0 : min(_4209, 1.0))) * (_1355 + 1.0))) + _1360) * _1241;
        _1377 = _1208;
        _1379 = _1207;
        _1380 = _1206;
        _1381 = _1218;
        _1382 = _1217;
        _1383 = _1216;
        _1384 = _1228;
        _1385 = _1227;
        _1386 = _1226;
        _1387 = _1241;
        _1388 = _1240;
        _1389 = _1239;
        _1390 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1285 : (isnan(_1285) ? 0.0 : max(_1285, 0.0)));
        _1391 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1327 : (isnan(_1327) ? 0.0 : max(_1327, 0.0)));
        _1392 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1369 : (isnan(_1369) ? 0.0 : max(_1369, 0.0)));
    }
    else
    {
        _1377 = _1378;
        _1379 = _1378;
        _1380 = _1378;
        _1381 = _1378;
        _1382 = _1378;
        _1383 = _1378;
        _1384 = _1378;
        _1385 = _1378;
        _1386 = _1378;
        _1387 = _1378;
        _1388 = _1378;
        _1389 = _1378;
        _1390 = 0.0;
        _1391 = 0.0;
        _1392 = 0.0;
    }
    float _1684;
    float _1685;
    float _1686;
    float _1687;
    float _1688;
    float _1689;
    float _1690;
    float _1691;
    float _1692;
    float _1693;
    float _1694;
    float _1695;
    float _1696;
    float _1697;
    float _1698;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1415 = fma(_1076, cbModelParam._m0[30u].z, fma(_1072, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1068));
        float _1419 = fma(_1076, cbModelParam._m0[31u].z, fma(_1072, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1068));
        float _1423 = fma(_1076, cbModelParam._m0[32u].z, fma(_1072, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1068));
        float _1446 = _1068 + _857;
        float _1447 = _1072 + _858;
        float _1448 = _1076 + _859;
        float _1458 = fma(_1448, cbModelParam._m0[30u].z, fma(_1447, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1446)) - _1415;
        float _1459 = fma(_1448, cbModelParam._m0[31u].z, fma(_1447, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1446)) - _1419;
        float _1460 = fma(_1448, cbModelParam._m0[32u].z, fma(_1447, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1446)) - _1423;
        float _1464 = inversesqrt(dot(vec3(_1458, _1459, _1460), vec3(_1458, _1459, _1460)));
        float _1477 = ((_1464 * _1458) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1415 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1478 = ((_1464 * _1459) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1419 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1479 = ((_1464 * _1460) / cbModelParam._m0[35u].z) + ((((((_1423 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1481 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1477, _1478, _1479), 0.0);
        vec4 _1488 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1477, _1478, _1479), 0.0);
        vec4 _1495 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1477, _1478, _1479), 0.0);
        vec4 _1502 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1477, _1478, _1479), 0.0);
        float _1514 = exp2((_1481.w + (-0.5)) * 20.0) * 2.0;
        float _1515 = _1514 * (_1481.x + (-0.5));
        float _1516 = _1514 * (_1481.y + (-0.5));
        float _1517 = _1514 * (_1481.z + (-0.5));
        float _1524 = exp2((_1488.w + (-0.5)) * 20.0) * 2.0;
        float _1525 = _1524 * (_1488.x + (-0.5));
        float _1526 = _1524 * (_1488.y + (-0.5));
        float _1527 = _1524 * (_1488.z + (-0.5));
        float _1534 = exp2((_1495.w + (-0.5)) * 20.0) * 2.0;
        float _1535 = _1534 * (_1495.x + (-0.5));
        float _1536 = _1534 * (_1495.y + (-0.5));
        float _1537 = _1534 * (_1495.z + (-0.5));
        float _1544 = exp2((_1502.w + (-0.5)) * 20.0) * 2.0;
        float _1545 = _1544 * (_1502.x + (-0.5));
        float _1546 = _1544 * (_1502.y + (-0.5));
        float _1547 = _1544 * (_1502.z + (-0.5));
        float _1548 = isnan(0.0) ? _1545 : (isnan(_1545) ? 0.0 : max(_1545, 0.0));
        float _1549 = isnan(0.0) ? _1546 : (isnan(_1546) ? 0.0 : max(_1546, 0.0));
        float _1550 = isnan(0.0) ? _1547 : (isnan(_1547) ? 0.0 : max(_1547, 0.0));
        float _1551 = _1515 * 0.5;
        float _1552 = _1525 * 0.5;
        float _1553 = _1535 * 0.5;
        float _1554 = dot(vec3(_1551, _1552, _1553), vec3(_1551, _1552, _1553));
        float _1559 = (_1554 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1554);
        float _1567 = (dot(vec3(_857, _858, _859), vec3(_1559 * _1551, _1559 * _1552, _1559 * _1553)) + 1.0) * 0.5;
        float _4272 = isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0));
        float _1576 = sqrt(((_1552 * _1552) + (_1551 * _1551)) + (_1553 * _1553)) / (_1548 + 9.9999997473787516355514526367188e-06);
        float _4283 = isnan(0.0) ? _1576 : (isnan(_1576) ? 0.0 : max(_1576, 0.0));
        float _1577 = isnan(1.0) ? _4283 : (isnan(_4283) ? 1.0 : min(_4283, 1.0));
        float _1578 = _1577 * 2.0;
        float _1582 = (1.0 - _1577) / (_1577 + 1.0);
        float _4294 = isnan(0.0) ? _1582 : (isnan(_1582) ? 0.0 : max(_1582, 0.0));
        float _1583 = isnan(1.0) ? _4294 : (isnan(_4294) ? 1.0 : min(_4294, 1.0));
        float _1592 = ((((1.0 - _1583) * (_1578 + 2.0)) * exp2(log2(isnan(1.0) ? _4272 : (isnan(_4272) ? 1.0 : min(_4272, 1.0))) * (_1578 + 1.0))) + _1583) * _1548;
        float _1593 = _1516 * 0.5;
        float _1594 = _1526 * 0.5;
        float _1595 = _1536 * 0.5;
        float _1596 = dot(vec3(_1593, _1594, _1595), vec3(_1593, _1594, _1595));
        float _1601 = (_1596 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1596);
        float _1609 = (dot(vec3(_857, _858, _859), vec3(_1601 * _1593, _1601 * _1594, _1601 * _1595)) + 1.0) * 0.5;
        float _4305 = isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0));
        float _1618 = sqrt(((_1594 * _1594) + (_1593 * _1593)) + (_1595 * _1595)) / (_1549 + 9.9999997473787516355514526367188e-06);
        float _4316 = isnan(0.0) ? _1618 : (isnan(_1618) ? 0.0 : max(_1618, 0.0));
        float _1619 = isnan(1.0) ? _4316 : (isnan(_4316) ? 1.0 : min(_4316, 1.0));
        float _1620 = _1619 * 2.0;
        float _1624 = (1.0 - _1619) / (_1619 + 1.0);
        float _4327 = isnan(0.0) ? _1624 : (isnan(_1624) ? 0.0 : max(_1624, 0.0));
        float _1625 = isnan(1.0) ? _4327 : (isnan(_4327) ? 1.0 : min(_4327, 1.0));
        float _1634 = ((((1.0 - _1625) * (_1620 + 2.0)) * exp2(log2(isnan(1.0) ? _4305 : (isnan(_4305) ? 1.0 : min(_4305, 1.0))) * (_1620 + 1.0))) + _1625) * _1549;
        float _1635 = _1517 * 0.5;
        float _1636 = _1527 * 0.5;
        float _1637 = _1537 * 0.5;
        float _1638 = dot(vec3(_1635, _1636, _1637), vec3(_1635, _1636, _1637));
        float _1643 = (_1638 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1638);
        float _1651 = (dot(vec3(_857, _858, _859), vec3(_1643 * _1635, _1643 * _1636, _1643 * _1637)) + 1.0) * 0.5;
        float _4338 = isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0));
        float _1660 = sqrt(((_1636 * _1636) + (_1635 * _1635)) + (_1637 * _1637)) / (_1550 + 9.9999997473787516355514526367188e-06);
        float _4349 = isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0));
        float _1661 = isnan(1.0) ? _4349 : (isnan(_4349) ? 1.0 : min(_4349, 1.0));
        float _1662 = _1661 * 2.0;
        float _1666 = (1.0 - _1661) / (_1661 + 1.0);
        float _4360 = isnan(0.0) ? _1666 : (isnan(_1666) ? 0.0 : max(_1666, 0.0));
        float _1667 = isnan(1.0) ? _4360 : (isnan(_4360) ? 1.0 : min(_4360, 1.0));
        float _1676 = ((((1.0 - _1667) * (_1662 + 2.0)) * exp2(log2(isnan(1.0) ? _4338 : (isnan(_4338) ? 1.0 : min(_4338, 1.0))) * (_1662 + 1.0))) + _1667) * _1550;
        _1684 = _1517;
        _1685 = _1516;
        _1686 = _1515;
        _1687 = _1527;
        _1688 = _1526;
        _1689 = _1525;
        _1690 = _1537;
        _1691 = _1536;
        _1692 = _1535;
        _1693 = _1550;
        _1694 = _1549;
        _1695 = _1548;
        _1696 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0)));
        _1697 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1634 : (isnan(_1634) ? 0.0 : max(_1634, 0.0)));
        _1698 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1676 : (isnan(_1676) ? 0.0 : max(_1676, 0.0)));
    }
    else
    {
        _1684 = _1378;
        _1685 = _1378;
        _1686 = _1378;
        _1687 = _1378;
        _1688 = _1378;
        _1689 = _1378;
        _1690 = _1378;
        _1691 = _1378;
        _1692 = _1378;
        _1693 = _1378;
        _1694 = _1378;
        _1695 = _1378;
        _1696 = 0.0;
        _1697 = 0.0;
        _1698 = 0.0;
    }
    float _1708 = (cbModelParam._m0[1u].x * (_1696 - _1390)) + _1390;
    float _1709 = (cbModelParam._m0[1u].x * (_1697 - _1391)) + _1391;
    float _1710 = (cbModelParam._m0[1u].x * (_1698 - _1392)) + _1392;
    float _1731 = fma(_1710, cbSceneParam._m0[89u].z, fma(_1709, cbSceneParam._m0[89u].y, _1708 * cbSceneParam._m0[89u].x));
    float _1734 = fma(_1710, cbSceneParam._m0[90u].z, fma(_1709, cbSceneParam._m0[90u].y, _1708 * cbSceneParam._m0[90u].x));
    float _1737 = fma(_1710, cbSceneParam._m0[91u].z, fma(_1709, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1708));
    float _1752 = _1015 * 0.5;
    float _1753 = _1016 * 0.5;
    float _1754 = _1017 * 0.5;
    float _1755 = dot(vec4(_1752, _1753, _1754, 1.0), vec4(_1686, _1689, _1692, _1695));
    float _1758 = dot(vec4(_1752, _1753, _1754, 1.0), vec4(_1685, _1688, _1691, _1694));
    float _1761 = dot(vec4(_1752, _1753, _1754, 1.0), vec4(_1684, _1687, _1690, _1693));
    float _1795;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1768 = dot(vec4(_1752, _1753, _1754, 1.0), vec4(_1377, _1381, _1384, _1387));
        float _1772 = dot(vec4(_1752, _1753, _1754, 1.0), vec4(_1379, _1382, _1385, _1388));
        float _1776 = dot(vec4(_1752, _1753, _1754, 1.0), vec4(_1380, _1383, _1386, _1389));
        float _1783 = dot(vec4(cbModelParam._m0[39u]), vec4(_1752, _1753, _1754, 1.0));
        _1795 = dot(vec3(isnan(0.0) ? _1776 : (isnan(_1776) ? 0.0 : max(_1776, 0.0)), isnan(0.0) ? _1772 : (isnan(_1772) ? 0.0 : max(_1772, 0.0)), isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1783) ? 0.0 : (isnan(0.0) ? _1783 : max(0.0, _1783))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1795 = 1.0;
    }
    float _1806;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1797 = dot(vec4(cbModelParam._m0[40u]), vec4(_1752, _1753, _1754, 1.0));
        _1806 = dot(vec3(isnan(0.0) ? _1755 : (isnan(_1755) ? 0.0 : max(_1755, 0.0)), isnan(0.0) ? _1758 : (isnan(_1758) ? 0.0 : max(_1758, 0.0)), isnan(0.0) ? _1761 : (isnan(_1761) ? 0.0 : max(_1761, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1797) ? 0.0 : (isnan(0.0) ? _1797 : max(0.0, _1797))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1806 = 1.0;
    }
    float _1810 = (_1806 * cbModelParam._m0[1u].x) + (_1795 * (1.0 - cbModelParam._m0[1u].x));
    float _1820 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _860);
    float _1821 = isnan(_1820) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1820 : min(cbModelParam._m0[25u].z, _1820));
    float _1901;
    float _1903;
    float _1905;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1868 = fma(_1076, cbModelParam._m0[13u].z, fma(_1072, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1068)) + cbModelParam._m0[13u].w;
        float _1872 = fma(_1076, cbModelParam._m0[14u].z, fma(_1072, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1068)) + cbModelParam._m0[14u].w;
        float _1876 = fma(_1076, cbModelParam._m0[15u].z, fma(_1072, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1068)) + cbModelParam._m0[15u].w;
        float _1879 = fma(_1017, cbModelParam._m0[13u].z, fma(_1016, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1015));
        float _1882 = fma(_1017, cbModelParam._m0[14u].z, fma(_1016, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1015));
        float _1885 = fma(_1017, cbModelParam._m0[15u].z, fma(_1016, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1015));
        float _1913;
        if (_1879 > 0.0)
        {
            _1913 = abs((1.0 - _1868) / _1879);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1879 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1868 + 1.0) / _1879);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1913 = frontier_phi_14_12_ladder;
        }
        float _2082;
        if (_1882 > 0.0)
        {
            _2082 = abs((1.0 - _1872) / _1882);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1882 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1872 + 1.0) / _1882);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2082 = frontier_phi_23_19_ladder;
        }
        float _2377;
        if (_1885 > 0.0)
        {
            _2377 = abs((1.0 - _1876) / _1885);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1885 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1876 + 1.0) / _1885);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2377 = frontier_phi_35_30_ladder;
        }
        float _2379 = isnan(_2082) ? _1913 : (isnan(_1913) ? _2082 : min(_1913, _2082));
        float _2380 = isnan(_2377) ? _2379 : (isnan(_2379) ? _2377 : min(_2379, _2377));
        float _2384 = (_2380 * _1879) + _1868;
        float _2385 = (_2380 * _1882) + _1872;
        float _2386 = (_2380 * _1885) + _1876;
        float _2387 = _2380 * 9.9999997473787516355514526367188e-05;
        float _2389 = (-1.0) - _2387;
        float _2391 = _2387 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2386 > _2391) || ((_2386 < _2389) || ((_2385 > _2391) || ((_2385 < _2389) || ((_2384 < _2389) || (_2384 > _2391))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2531 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2386, cbModelParam._m0[9u].z, fma(_2385, cbModelParam._m0[9u].y, _2384 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2386, cbModelParam._m0[10u].z, fma(_2385, cbModelParam._m0[10u].y, _2384 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2386, cbModelParam._m0[11u].z, fma(_2385, cbModelParam._m0[11u].y, _2384 * cbModelParam._m0[11u].x))), _1821);
            frontier_phi_13_35_ladder = _2531.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2531.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2531.x * cbModelParam._m0[1u].y;
        }
        _1901 = frontier_phi_13_35_ladder_2;
        _1903 = frontier_phi_13_35_ladder_1;
        _1905 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1889 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1015, _1016, _1017), _1821);
        _1901 = _1889.x * cbModelParam._m0[1u].y;
        _1903 = _1889.y * cbModelParam._m0[1u].y;
        _1905 = _1889.z * cbModelParam._m0[1u].y;
    }
    float _1909 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _860);
    float _1910 = isnan(_1909) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1909 : min(cbModelParam._m0[25u].w, _1909));
    float _1999;
    float _2001;
    float _2003;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1963 = fma(_1076, cbModelParam._m0[21u].z, fma(_1072, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1068)) + cbModelParam._m0[21u].w;
        float _1967 = fma(_1076, cbModelParam._m0[22u].z, fma(_1072, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1068)) + cbModelParam._m0[22u].w;
        float _1971 = fma(_1076, cbModelParam._m0[23u].z, fma(_1072, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1068)) + cbModelParam._m0[23u].w;
        float _1974 = fma(_1017, cbModelParam._m0[21u].z, fma(_1016, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1015));
        float _1977 = fma(_1017, cbModelParam._m0[22u].z, fma(_1016, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1015));
        float _1980 = fma(_1017, cbModelParam._m0[23u].z, fma(_1016, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1015));
        float _2087;
        if (_1974 > 0.0)
        {
            _2087 = abs((1.0 - _1963) / _1974);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1974 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1963 + 1.0) / _1974);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2087 = frontier_phi_25_21_ladder;
        }
        float _2404;
        if (_1977 > 0.0)
        {
            _2404 = abs((1.0 - _1967) / _1977);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1977 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1967 + 1.0) / _1977);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2404 = frontier_phi_37_32_ladder;
        }
        float _2731;
        if (_1980 > 0.0)
        {
            _2731 = abs((1.0 - _1971) / _1980);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1980 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1971 + 1.0) / _1980);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2731 = frontier_phi_47_44_ladder;
        }
        float _2733 = isnan(_2404) ? _2087 : (isnan(_2087) ? _2404 : min(_2087, _2404));
        float _2734 = isnan(_2731) ? _2733 : (isnan(_2733) ? _2731 : min(_2733, _2731));
        float _2738 = (_2734 * _1974) + _1963;
        float _2739 = (_2734 * _1977) + _1967;
        float _2740 = (_2734 * _1980) + _1971;
        float _2741 = _2734 * 9.9999997473787516355514526367188e-05;
        float _2742 = (-1.0) - _2741;
        float _2744 = _2741 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2740 > _2744) || ((_2740 < _2742) || ((_2739 > _2744) || ((_2739 < _2742) || ((_2738 < _2742) || (_2738 > _2744))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2858 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2740, cbModelParam._m0[17u].z, fma(_2739, cbModelParam._m0[17u].y, _2738 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2740, cbModelParam._m0[18u].z, fma(_2739, cbModelParam._m0[18u].y, _2738 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2740, cbModelParam._m0[19u].z, fma(_2739, cbModelParam._m0[19u].y, _2738 * cbModelParam._m0[19u].x))), _1910);
            frontier_phi_22_47_ladder = _2858.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2858.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2858.x * cbModelParam._m0[1u].z;
        }
        _1999 = frontier_phi_22_47_ladder_2;
        _2001 = frontier_phi_22_47_ladder_1;
        _2003 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1983 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1015, _1016, _1017), _1910);
        _1999 = _1983.x * cbModelParam._m0[1u].z;
        _2001 = _1983.y * cbModelParam._m0[1u].z;
        _2003 = _1983.z * cbModelParam._m0[1u].z;
    }
    float _2015 = ((((1.0 - _1036) * ((_1023 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1036 * _1023)) * _1007;
    float _2016 = _2015 * ((cbModelParam._m0[1u].w * (_1999 - _1901)) + _1901);
    float _2017 = _2015 * ((cbModelParam._m0[1u].w * (_2001 - _1903)) + _1903);
    float _2018 = _2015 * ((cbModelParam._m0[1u].w * (_2003 - _1905)) + _1905);
    float _2021 = fma(_2018, cbSceneParam._m0[89u].z, fma(_2017, cbSceneParam._m0[89u].y, _2016 * cbSceneParam._m0[89u].x));
    float _2024 = fma(_2018, cbSceneParam._m0[90u].z, fma(_2017, cbSceneParam._m0[90u].y, _2016 * cbSceneParam._m0[90u].x));
    float _2027 = fma(_2018, cbSceneParam._m0[91u].z, fma(_2017, cbSceneParam._m0[91u].y, _2016 * cbSceneParam._m0[91u].x));
    float _2061 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2065 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2069 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2073 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2074 = _2061 / _2073;
    float _2075 = _2065 / _2073;
    float _2076 = _2069 / _2073;
    float _2223;
    float _2224;
    float _2225;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2103 = ((uint(_2076 > cbSceneParam._m0[59u].y) + uint(_2076 > cbSceneParam._m0[59u].x)) + uint(_2076 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2104 = _2103 + 43u;
        uint _2112 = _2103 + 44u;
        uint _2120 = _2103 + 45u;
        uint _2128 = _2103 + 46u;
        float _2139 = fma(_2073, cbSceneParam._m0[_2104].w, fma(_2069, cbSceneParam._m0[_2104].z, fma(_2065, cbSceneParam._m0[_2104].y, _2061 * cbSceneParam._m0[_2104].x)));
        float _2143 = fma(_2073, cbSceneParam._m0[_2112].w, fma(_2069, cbSceneParam._m0[_2112].z, fma(_2065, cbSceneParam._m0[_2112].y, _2061 * cbSceneParam._m0[_2112].x)));
        float _2151 = fma(_2073, cbSceneParam._m0[_2128].w, fma(_2069, cbSceneParam._m0[_2128].z, fma(_2065, cbSceneParam._m0[_2128].y, _2061 * cbSceneParam._m0[_2128].x)));
        float _2156 = cbSceneParam._m0[33u].z * _2151;
        float _2158 = cbSceneParam._m0[33u].w * _2151;
        float _2161 = fma(_2073, cbSceneParam._m0[_2120].w, fma(_2069, cbSceneParam._m0[_2120].z, fma(_2065, cbSceneParam._m0[_2120].y, _2061 * cbSceneParam._m0[_2120].x))) / _2151;
        float _2209 = (cbSceneParam._m0[33u].x - sqrt(((_2075 * _2075) + (_2074 * _2074)) + (_2076 * _2076))) * cbSceneParam._m0[33u].y;
        float _4486 = isnan(0.0) ? _2209 : (isnan(_2209) ? 0.0 : max(_2209, 0.0));
        float _2216 = (isnan(1.0) ? _4486 : (isnan(_4486) ? 1.0 : min(_4486, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2156 + _2139) / _2151, (_2158 + _2143) / _2151), _2161), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2158 + _2139) / _2151, (_2143 - _2156) / _2151), _2161), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2139 - _2156) / _2151, (_2143 - _2158) / _2151), _2161), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2139 - _2158) / _2151, (_2156 + _2143) / _2151), _2161), 0.0)).x), vec4(0.25)));
        _2223 = 1.0 - (_2216 * cbSceneParam._m0[34u].x);
        _2224 = 1.0 - (_2216 * cbSceneParam._m0[34u].y);
        _2225 = 1.0 - (_2216 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2223 = 1.0;
        _2224 = 1.0;
        _2225 = 1.0;
    }
    float _2289;
    float _2291;
    float _2293;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2277 = fma(_2073, cbSceneParam._m0[63u].w, fma(_2069, cbSceneParam._m0[63u].z, fma(_2065, cbSceneParam._m0[63u].y, _2061 * cbSceneParam._m0[63u].x)));
        float _2278 = fma(_2073, cbSceneParam._m0[60u].w, fma(_2069, cbSceneParam._m0[60u].z, fma(_2065, cbSceneParam._m0[60u].y, _2061 * cbSceneParam._m0[60u].x))) / _2277;
        float _2279 = fma(_2073, cbSceneParam._m0[61u].w, fma(_2069, cbSceneParam._m0[61u].z, fma(_2065, cbSceneParam._m0[61u].y, _2061 * cbSceneParam._m0[61u].x))) / _2277;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2278 >= cbSceneParam._m0[64u].x) && (_2279 >= cbSceneParam._m0[64u].y)) && (_2278 <= cbSceneParam._m0[64u].z)) && (_2279 <= cbSceneParam._m0[64u].w))
        {
            float _2417 = fma(_2073, cbSceneParam._m0[62u].w, fma(_2069, cbSceneParam._m0[62u].z, fma(_2065, cbSceneParam._m0[62u].y, _2061 * cbSceneParam._m0[62u].x))) / _2277;
            float _2421 = isnan(cbSceneParam._m0[41u].w) ? _2417 : (isnan(_2417) ? cbSceneParam._m0[41u].w : max(_2417, cbSceneParam._m0[41u].w));
            float _2464 = (cbSceneParam._m0[33u].x - sqrt(((_2075 * _2075) + (_2074 * _2074)) + (_2076 * _2076))) * cbSceneParam._m0[33u].y;
            float _4502 = isnan(0.0) ? _2464 : (isnan(_2464) ? 0.0 : max(_2464, 0.0));
            float _2471 = (isnan(1.0) ? _4502 : (isnan(_4502) ? 1.0 : min(_4502, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2278, cbSceneParam._m0[33u].w + _2279), _2421), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2278, _2279 - cbSceneParam._m0[33u].z), _2421), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2278 - cbSceneParam._m0[33u].z, _2279 - cbSceneParam._m0[33u].w), _2421), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2278 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2279), _2421), 0.0)).x), vec4(0.25)));
            float _2475 = 1.0 - (_2471 * cbSceneParam._m0[34u].x);
            float _2476 = 1.0 - (_2471 * cbSceneParam._m0[34u].y);
            float _2477 = 1.0 - (_2471 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2477) ? _2225 : (isnan(_2225) ? _2477 : min(_2225, _2477));
            frontier_phi_34_33_ladder_1 = isnan(_2476) ? _2224 : (isnan(_2224) ? _2476 : min(_2224, _2476));
            frontier_phi_34_33_ladder_2 = isnan(_2475) ? _2223 : (isnan(_2223) ? _2475 : min(_2223, _2475));
        }
        else
        {
            frontier_phi_34_33_ladder = _2225;
            frontier_phi_34_33_ladder_1 = _2224;
            frontier_phi_34_33_ladder_2 = _2223;
        }
        _2289 = frontier_phi_34_33_ladder_2;
        _2291 = frontier_phi_34_33_ladder_1;
        _2293 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2289 = _2223;
        _2291 = _2224;
        _2293 = _2225;
    }
    uvec4 _2298 = floatBitsToUint(cbInstanceData._m0[_250 + 5u]);
    uint _2300 = _2298.x * 14u;
    uint _2301 = _2300 + 13u;
    float _2308 = _1007 + (-1.0);
    float _2313 = (cbLight._m0[_2301].x * _2308) + 1.0;
    float _2314 = (cbLight._m0[_2301].y * _2308) + 1.0;
    float _2315 = (cbLight._m0[_2301].z * _2308) + 1.0;
    float _2316 = (cbLight._m0[_2301].w * _2308) + 1.0;
    uint _2317 = _2300 + 5u;
    float _2323 = isnan(1.0) ? _2314 : (isnan(_2314) ? 1.0 : min(_2314, 1.0));
    uint _2327 = _2300 + 4u;
    float _2336 = isnan(1.0) ? _2313 : (isnan(_2313) ? 1.0 : min(_2313, 1.0));
    uint _2340 = _2300 | 1u;
    float _2351 = dot(vec3(cbLight._m0[_2300].xyz), vec3(_857, _858, _859));
    float _2354 = dot(vec3(cbLight._m0[_2340].xyz), vec3(_857, _858, _859));
    float _4538 = isnan(0.0) ? _2351 : (isnan(_2351) ? 0.0 : max(_2351, 0.0));
    float _4549 = isnan(0.0) ? _2354 : (isnan(_2354) ? 0.0 : max(_2354, 0.0));
    float _2359 = (isnan(1.0) ? _4538 : (isnan(_4538) ? 1.0 : min(_4538, 1.0))) * 0.3183098733425140380859375;
    float _2361 = (isnan(1.0) ? _4549 : (isnan(_4549) ? 1.0 : min(_4549, 1.0))) * 0.3183098733425140380859375;
    float _2368 = ((cbLight._m0[_2317].x * _2323) * _2361) + (((cbLight._m0[_2327].x * _2289) * _2336) * _2359);
    float _2369 = ((_2323 * cbLight._m0[_2317].y) * _2361) + (((cbLight._m0[_2327].y * _2291) * _2336) * _2359);
    float _2370 = ((_2323 * cbLight._m0[_2317].z) * _2361) + (((cbLight._m0[_2327].z * _2293) * _2336) * _2359);
    uvec4 _2374 = floatBitsToUint(cbLight._m0[_2300 + 12u]);
    bool _2376 = _2374.x == 0u;
    float _2478;
    float _2480;
    float _2482;
    if (_2376)
    {
        _2478 = _2368;
        _2480 = _2369;
        _2482 = _2370;
    }
    else
    {
        uint _2486 = _2300 + 6u;
        float _2502 = (dot(vec3(cbLight._m0[_2300 + 2u].xyz), vec3(_857, _858, _859)) * 0.5) + 0.5;
        float _2503 = _2502 * _2502;
        float _4560 = isnan(0.0) ? _2503 : (isnan(_2503) ? 0.0 : max(_2503, 0.0));
        float _2504 = isnan(1.0) ? _4560 : (isnan(_4560) ? 1.0 : min(_4560, 1.0));
        float _2505 = isnan(1.0) ? _2315 : (isnan(_2315) ? 1.0 : min(_2315, 1.0));
        _2478 = (((cbLight._m0[_2486].x * 0.3183098733425140380859375) * _2504) * _2505) + _2368;
        _2480 = (((cbLight._m0[_2486].y * 0.3183098733425140380859375) * _2504) * _2505) + _2369;
        _2482 = (((cbLight._m0[_2486].z * 0.3183098733425140380859375) * _2504) * _2505) + _2370;
    }
    bool _2485 = _2374.y == 0u;
    float _2540;
    float _2542;
    float _2544;
    if (_2485)
    {
        _2540 = _2478;
        _2542 = _2480;
        _2544 = _2482;
    }
    else
    {
        uint _2702 = _2300 + 7u;
        float _2718 = (dot(vec3(cbLight._m0[_2300 + 3u].xyz), vec3(_857, _858, _859)) * 0.5) + 0.5;
        float _2719 = _2718 * _2718;
        float _4576 = isnan(0.0) ? _2719 : (isnan(_2719) ? 0.0 : max(_2719, 0.0));
        float _2720 = isnan(1.0) ? _4576 : (isnan(_4576) ? 1.0 : min(_4576, 1.0));
        float _2721 = isnan(1.0) ? _2316 : (isnan(_2316) ? 1.0 : min(_2316, 1.0));
        _2540 = (((cbLight._m0[_2702].x * 0.3183098733425140380859375) * _2720) * _2721) + _2478;
        _2542 = (((cbLight._m0[_2702].y * 0.3183098733425140380859375) * _2720) * _2721) + _2480;
        _2544 = (((cbLight._m0[_2702].z * 0.3183098733425140380859375) * _2720) * _2721) + _2482;
    }
    uint _2547 = _2300 + 8u;
    float _2560 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2300].w)) * _860) * 0.949999988079071044921875);
    float _2561 = _2560 * _2560;
    float _2562 = cbLight._m0[_2300].x + _936;
    float _2563 = cbLight._m0[_2300].y + _937;
    float _2564 = cbLight._m0[_2300].z + _938;
    float _2568 = inversesqrt(dot(vec3(_2562, _2563, _2564), vec3(_2562, _2563, _2564)));
    float _2569 = _2568 * _2562;
    float _2570 = _2568 * _2563;
    float _2571 = _2568 * _2564;
    float _2572 = dot(vec3(_857, _858, _859), vec3(cbLight._m0[_2300].xyz));
    float _4592 = isnan(0.0) ? _2572 : (isnan(_2572) ? 0.0 : max(_2572, 0.0));
    float _2575 = isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0));
    float _4603 = isnan(0.0) ? _1008 : (isnan(_1008) ? 0.0 : max(_1008, 0.0));
    float _2576 = isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0));
    float _2577 = dot(vec3(_857, _858, _859), vec3(_2569, _2570, _2571));
    float _4614 = isnan(0.0) ? _2577 : (isnan(_2577) ? 0.0 : max(_2577, 0.0));
    float _2580 = isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0));
    float _2581 = dot(vec3(cbLight._m0[_2300].xyz), vec3(_2569, _2570, _2571));
    float _4625 = isnan(0.0) ? _2581 : (isnan(_2581) ? 0.0 : max(_2581, 0.0));
    float _2585 = _2561 * _2561;
    float _2589 = ((_2580 * _2580) * (_2585 + (-1.0))) + 1.0;
    float _2600 = (exp2(log2(1.0 - (isnan(1.0) ? _4625 : (isnan(_4625) ? 1.0 : min(_4625, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2601 = 1.0 - _2561;
    float _2612 = (0.5 / (((_2576 * ((_2575 * _2601) + _2561)) + 9.9999999392252902907785028219223e-09) + (((_2576 * _2601) + _2561) * _2575))) * _2575;
    float _4636 = isnan(0.0) ? _2612 : (isnan(_2612) ? 0.0 : max(_2612, 0.0));
    float _2614 = (isnan(1.0) ? _4636 : (isnan(_4636) ? 1.0 : min(_4636, 1.0))) * (_2585 / ((_2589 * _2589) * 3.141590118408203125));
    uint _2628 = _2300 + 9u;
    float _2639 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2340].w)) * _860) * 0.949999988079071044921875);
    float _2640 = _2639 * _2639;
    float _2641 = cbLight._m0[_2340].x + _936;
    float _2642 = cbLight._m0[_2340].y + _937;
    float _2643 = cbLight._m0[_2340].z + _938;
    float _2647 = inversesqrt(dot(vec3(_2641, _2642, _2643), vec3(_2641, _2642, _2643)));
    float _2648 = _2647 * _2641;
    float _2649 = _2647 * _2642;
    float _2650 = _2647 * _2643;
    float _2651 = dot(vec3(_857, _858, _859), vec3(cbLight._m0[_2340].xyz));
    float _4647 = isnan(0.0) ? _2651 : (isnan(_2651) ? 0.0 : max(_2651, 0.0));
    float _2654 = isnan(1.0) ? _4647 : (isnan(_4647) ? 1.0 : min(_4647, 1.0));
    float _2655 = dot(vec3(_857, _858, _859), vec3(_2648, _2649, _2650));
    float _4658 = isnan(0.0) ? _2655 : (isnan(_2655) ? 0.0 : max(_2655, 0.0));
    float _2658 = isnan(1.0) ? _4658 : (isnan(_4658) ? 1.0 : min(_4658, 1.0));
    float _2659 = dot(vec3(cbLight._m0[_2340].xyz), vec3(_2648, _2649, _2650));
    float _4669 = isnan(0.0) ? _2659 : (isnan(_2659) ? 0.0 : max(_2659, 0.0));
    float _2663 = _2640 * _2640;
    float _2667 = ((_2658 * _2658) * (_2663 + (-1.0))) + 1.0;
    float _2676 = (exp2(log2(1.0 - (isnan(1.0) ? _4669 : (isnan(_4669) ? 1.0 : min(_4669, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2677 = 1.0 - _2640;
    float _2687 = (0.5 / (((_2576 * ((_2654 * _2677) + _2640)) + 9.9999999392252902907785028219223e-09) + (((_2576 * _2677) + _2640) * _2654))) * _2654;
    float _4680 = isnan(0.0) ? _2687 : (isnan(_2687) ? 0.0 : max(_2687, 0.0));
    float _2689 = (isnan(1.0) ? _4680 : (isnan(_4680) ? 1.0 : min(_4680, 1.0))) * (_2663 / ((_2667 * _2667) * 3.141590118408203125));
    float _2699 = (((_2676 * cbLight._m0[_2628].x) * _2689) * _2323) + ((((cbLight._m0[_2547].x * _2289) * _2600) * _2614) * _2336);
    float _2700 = (((_2676 * cbLight._m0[_2628].y) * _2689) * _2323) + ((((cbLight._m0[_2547].y * _2291) * _2600) * _2614) * _2336);
    float _2701 = (((_2676 * cbLight._m0[_2628].z) * _2689) * _2323) + ((((cbLight._m0[_2547].z * _2293) * _2600) * _2614) * _2336);
    float _2757;
    float _2759;
    float _2761;
    if (_2376)
    {
        _2757 = _2699;
        _2759 = _2700;
        _2761 = _2701;
    }
    else
    {
        uint _2763 = _2300 + 2u;
        uint _2767 = _2300 + 10u;
        float _2781 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2763].w)) * _860) * 0.949999988079071044921875);
        float _2782 = _2781 * _2781;
        float _2783 = cbLight._m0[_2763].x + _936;
        float _2784 = cbLight._m0[_2763].y + _937;
        float _2785 = cbLight._m0[_2763].z + _938;
        float _2789 = inversesqrt(dot(vec3(_2783, _2784, _2785), vec3(_2783, _2784, _2785)));
        float _2790 = _2789 * _2783;
        float _2791 = _2789 * _2784;
        float _2792 = _2789 * _2785;
        float _2793 = dot(vec3(_857, _858, _859), vec3(cbLight._m0[_2763].xyz));
        float _4691 = isnan(0.0) ? _2793 : (isnan(_2793) ? 0.0 : max(_2793, 0.0));
        float _2796 = isnan(1.0) ? _4691 : (isnan(_4691) ? 1.0 : min(_4691, 1.0));
        float _2797 = dot(vec3(_857, _858, _859), vec3(_2790, _2791, _2792));
        float _4702 = isnan(0.0) ? _2797 : (isnan(_2797) ? 0.0 : max(_2797, 0.0));
        float _2800 = isnan(1.0) ? _4702 : (isnan(_4702) ? 1.0 : min(_4702, 1.0));
        float _2801 = dot(vec3(cbLight._m0[_2763].xyz), vec3(_2790, _2791, _2792));
        float _4713 = isnan(0.0) ? _2801 : (isnan(_2801) ? 0.0 : max(_2801, 0.0));
        float _2805 = _2782 * _2782;
        float _2809 = ((_2800 * _2800) * (_2805 + (-1.0))) + 1.0;
        float _2818 = (exp2(log2(1.0 - (isnan(1.0) ? _4713 : (isnan(_4713) ? 1.0 : min(_4713, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2819 = 1.0 - _2782;
        float _2829 = (0.5 / (((_2576 * ((_2796 * _2819) + _2782)) + 9.9999999392252902907785028219223e-09) + (((_2576 * _2819) + _2782) * _2796))) * _2796;
        float _4724 = isnan(0.0) ? _2829 : (isnan(_2829) ? 0.0 : max(_2829, 0.0));
        float _2831 = (isnan(1.0) ? _4724 : (isnan(_4724) ? 1.0 : min(_4724, 1.0))) * (_2805 / ((_2809 * _2809) * 3.141590118408203125));
        float _2832 = isnan(1.0) ? _2315 : (isnan(_2315) ? 1.0 : min(_2315, 1.0));
        _2757 = (((_2818 * cbLight._m0[_2767].x) * _2831) * _2832) + _2699;
        _2759 = (((_2818 * cbLight._m0[_2767].y) * _2831) * _2832) + _2700;
        _2761 = (((_2818 * cbLight._m0[_2767].z) * _2831) * _2832) + _2701;
    }
    float _2863;
    float _2865;
    float _2867;
    if (_2485)
    {
        _2863 = _2757;
        _2865 = _2759;
        _2867 = _2761;
    }
    else
    {
        uint _2874 = _2300 + 3u;
        uint _2878 = _2300 + 11u;
        float _2892 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2874].w)) * _860) * 0.949999988079071044921875);
        float _2893 = _2892 * _2892;
        float _2894 = cbLight._m0[_2874].x + _936;
        float _2895 = cbLight._m0[_2874].y + _937;
        float _2896 = cbLight._m0[_2874].z + _938;
        float _2900 = inversesqrt(dot(vec3(_2894, _2895, _2896), vec3(_2894, _2895, _2896)));
        float _2901 = _2900 * _2894;
        float _2902 = _2900 * _2895;
        float _2903 = _2900 * _2896;
        float _2904 = dot(vec3(_857, _858, _859), vec3(cbLight._m0[_2874].xyz));
        float _4740 = isnan(0.0) ? _2904 : (isnan(_2904) ? 0.0 : max(_2904, 0.0));
        float _2907 = isnan(1.0) ? _4740 : (isnan(_4740) ? 1.0 : min(_4740, 1.0));
        float _2908 = dot(vec3(_857, _858, _859), vec3(_2901, _2902, _2903));
        float _4751 = isnan(0.0) ? _2908 : (isnan(_2908) ? 0.0 : max(_2908, 0.0));
        float _2911 = isnan(1.0) ? _4751 : (isnan(_4751) ? 1.0 : min(_4751, 1.0));
        float _2912 = dot(vec3(cbLight._m0[_2874].xyz), vec3(_2901, _2902, _2903));
        float _4762 = isnan(0.0) ? _2912 : (isnan(_2912) ? 0.0 : max(_2912, 0.0));
        float _2916 = _2893 * _2893;
        float _2920 = ((_2911 * _2911) * (_2916 + (-1.0))) + 1.0;
        float _2929 = (exp2(log2(1.0 - (isnan(1.0) ? _4762 : (isnan(_4762) ? 1.0 : min(_4762, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2930 = 1.0 - _2893;
        float _2940 = (0.5 / (((_2576 * ((_2907 * _2930) + _2893)) + 9.9999999392252902907785028219223e-09) + (((_2576 * _2930) + _2893) * _2907))) * _2907;
        float _4773 = isnan(0.0) ? _2940 : (isnan(_2940) ? 0.0 : max(_2940, 0.0));
        float _2942 = (isnan(1.0) ? _4773 : (isnan(_4773) ? 1.0 : min(_4773, 1.0))) * (_2916 / ((_2920 * _2920) * 3.141590118408203125));
        float _2943 = isnan(1.0) ? _2316 : (isnan(_2316) ? 1.0 : min(_2316, 1.0));
        _2863 = (((_2929 * cbLight._m0[_2878].x) * _2942) * _2943) + _2757;
        _2865 = (((_2929 * cbLight._m0[_2878].y) * _2942) * _2943) + _2759;
        _2867 = (((_2929 * cbLight._m0[_2878].z) * _2942) * _2943) + _2761;
    }
    float _3009;
    float _3011;
    float _3013;
    float _3015;
    float _3017;
    float _3019;
    if (_2298.y == 0u)
    {
        uvec4 _2964 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2965 = _2964.x;
        uint _2976 = uint((float(_2964.y) * floor(float(uint(cbSceneParam._m0[85u].y * _945) / _2965))) + floor(float(uint(cbSceneParam._m0[85u].x * _944) / _2965)));
        float _2986 = (log2(_2076 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2987 = isnan(0.0) ? _2986 : (isnan(_2986) ? 0.0 : max(_2986, 0.0));
        uint _2990 = uint(isnan(14.0) ? _2987 : (isnan(_2987) ? 14.0 : min(_2987, 14.0)));
        uvec4 _2995 = texelFetch(g_lightClusterGridBuffer, int(((_2990 << 2u) + (_2976 << 6u)) >> 2u));
        uint _2996 = _2995.x;
        uint _2997 = _2964.z;
        float _3076;
        float _3078;
        float _3080;
        float _3082;
        float _3084;
        float _3086;
        if (((((1u << ((_2997 >> 4u) & 15u)) + 4294967295u) & _2996) == 0u) || ((_2997 & 240u) == 0u))
        {
            _3076 = 0.0;
            _3078 = 0.0;
            _3080 = 0.0;
            _3082 = 0.0;
            _3084 = 0.0;
            _3086 = 0.0;
        }
        else
        {
            float _3077;
            float _3079;
            float _3081;
            float _3083;
            float _3085;
            float _3087;
            float _3221 = 0.0;
            float _3222 = 0.0;
            float _3223 = 0.0;
            float _3224 = 0.0;
            float _3225 = 0.0;
            float _3226 = 0.0;
            uint _3227 = 0u;
            uint _3236;
            bool _3237;
            for (;;)
            {
                _3236 = texelFetch(g_lightClassification, int((((_2990 << 5u) + (_2976 << 9u)) + (_3227 << 2u)) >> 2u)).x;
                _3237 = _3236 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3237)
                {
                    frontier_phi_66_pred = _3226;
                    frontier_phi_66_pred_1 = _3225;
                    frontier_phi_66_pred_2 = _3224;
                    frontier_phi_66_pred_3 = _3223;
                    frontier_phi_66_pred_4 = _3222;
                    frontier_phi_66_pred_5 = _3221;
                }
                else
                {
                    float _3345;
                    float _3346;
                    float _3347;
                    float _3348;
                    float _3349;
                    float _3350;
                    uint _3351;
                    _3345 = _3221;
                    _3346 = _3222;
                    _3347 = _3223;
                    _3348 = _3224;
                    _3349 = _3225;
                    _3350 = _3226;
                    _3351 = _3236;
                    float _3277;
                    float _3278;
                    float _3279;
                    float _3280;
                    float _3281;
                    float _3282;
                    for (;;)
                    {
                        uint _3355 = uint(findLSB(_3351)) + (_3227 << 5u);
                        uint _3352 = (_3351 + 4294967295u) & _3351;
                        uint _3357 = _3355 * 48u;
                        vec4 _3371 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3357)).x, texelFetch(g_PointLightRenderingBuffer, int(_3357 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3357 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3357 + 3u)).x));
                        uint _3377 = (_3355 * 48u) + 4u;
                        vec4 _3390 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3377)).x, texelFetch(g_PointLightRenderingBuffer, int(_3377 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3377 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3377 + 3u)).x));
                        uint _3396 = (_3355 * 48u) + 8u;
                        vec3 _3407 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3396)).x, texelFetch(g_PointLightRenderingBuffer, int(_3396 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3396 + 2u)).x));
                        float _3411 = _3371.x - _2074;
                        float _3412 = _3371.y - _2075;
                        float _3413 = _3371.z - _2076;
                        float _3414 = dot(vec3(_3411, _3412, _3413), vec3(_3411, _3412, _3413));
                        float _3417 = inversesqrt(_3414);
                        float _3418 = _3417 * _3411;
                        float _3419 = _3417 * _3412;
                        float _3420 = _3417 * _3413;
                        float _3421 = dot(vec3(_963, _966, _969), vec3(_3418, _3419, _3420));
                        float _3426 = 1.0 - (_3414 * _3371.w);
                        float _4799 = isnan(0.0) ? _3426 : (isnan(_3426) ? 0.0 : max(_3426, 0.0));
                        float _3427 = isnan(1.0) ? _4799 : (isnan(_4799) ? 1.0 : min(_4799, 1.0));
                        float _3428 = sqrt(_3414) * _3390.w;
                        float _3431 = 1.39999997615814208984375 / (_3428 + 1.39999997615814208984375);
                        float _3432 = _3431 * _3431;
                        float _3435 = ((1.0 - _3432) * _3421) + _3432;
                        float _3438 = _3428 * _3428;
                        float _3442 = ((isnan(0.0) ? _3435 : (isnan(_3435) ? 0.0 : max(_3435, 0.0))) * _3427) / ((_3438 * 0.699999988079071044921875) + 1.0);
                        float _3446 = (-0.0) - _2074;
                        float _3447 = (-0.0) - _2075;
                        float _3448 = (-0.0) - _2076;
                        float _3452 = inversesqrt(dot(vec3(_3446, _3447, _3448), vec3(_3446, _3447, _3448)));
                        float _3453 = _3452 * _3446;
                        float _3454 = _3452 * _3447;
                        float _3455 = _3452 * _3448;
                        float _3462 = exp2(log2(1.0 / ((_3438 * 3.5) + 5.0)) * 0.25);
                        float _3463 = 1.0 - _1023;
                        float _3470 = sqrt(1.0 - ((1.0 - (_3463 * _3463)) * (1.0 - (_3462 * _3462))));
                        float _3471 = _3470 * _3470;
                        float _3472 = _3471 * _3471;
                        float _3473 = _3453 + _3418;
                        float _3474 = _3454 + _3419;
                        float _3475 = _3455 + _3420;
                        float _3479 = inversesqrt(dot(vec3(_3473, _3474, _3475), vec3(_3473, _3474, _3475)));
                        float _3483 = dot(vec3(_963, _966, _969), vec3(_3453, _3454, _3455));
                        float _4815 = isnan(0.0) ? _3483 : (isnan(_3483) ? 0.0 : max(_3483, 0.0));
                        float _3486 = isnan(1.0) ? _4815 : (isnan(_4815) ? 1.0 : min(_4815, 1.0));
                        float _3487 = dot(vec3(_963, _966, _969), vec3(_3479 * _3473, _3479 * _3474, _3479 * _3475));
                        float _4826 = isnan(0.0) ? _3487 : (isnan(_3487) ? 0.0 : max(_3487, 0.0));
                        float _3490 = isnan(1.0) ? _4826 : (isnan(_4826) ? 1.0 : min(_4826, 1.0));
                        float _3494 = ((_3490 * _3490) * (_3472 + (-1.0))) + 1.0;
                        float _3495 = _3431 * _3471;
                        float _3496 = _3495 * _3495;
                        float _3499 = ((1.0 - _3496) * _3421) + _3496;
                        float _4837 = isnan(0.0) ? _3499 : (isnan(_3499) ? 0.0 : max(_3499, 0.0));
                        float _3500 = isnan(1.0) ? _4837 : (isnan(_4837) ? 1.0 : min(_4837, 1.0));
                        float _3501 = 1.0 - _3471;
                        float _3511 = (0.5 / (((_3500 * ((_3486 * _3501) + _3471)) + 9.9999999392252902907785028219223e-09) + (((_3500 * _3501) + _3471) * _3486))) * _3500;
                        float _4848 = isnan(0.0) ? _3511 : (isnan(_3511) ? 0.0 : max(_3511, 0.0));
                        float _3522 = (((_3472 * 3.1415927410125732421875) * (isnan(1.0) ? _4848 : (isnan(_4848) ? 1.0 : min(_4848, 1.0)))) / ((_3494 * _3494) * ((_3438 * 2.1991131305694580078125) + 3.141590118408203125))) * _3427;
                        _3280 = (_3442 * _3390.x) + _3348;
                        _3281 = (_3442 * _3390.y) + _3349;
                        _3282 = (_3442 * _3390.z) + _3350;
                        _3277 = (_3522 * _3407.x) + _3345;
                        _3278 = (_3522 * _3407.y) + _3346;
                        _3279 = (_3522 * _3407.z) + _3347;
                        if (_3352 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3345 = _3277;
                            _3346 = _3278;
                            _3347 = _3279;
                            _3348 = _3280;
                            _3349 = _3281;
                            _3350 = _3282;
                            _3351 = _3352;
                        }
                    }
                    frontier_phi_66_pred = _3282;
                    frontier_phi_66_pred_1 = _3281;
                    frontier_phi_66_pred_2 = _3280;
                    frontier_phi_66_pred_3 = _3279;
                    frontier_phi_66_pred_4 = _3278;
                    frontier_phi_66_pred_5 = _3277;
                }
                _3087 = frontier_phi_66_pred;
                _3085 = frontier_phi_66_pred_1;
                _3083 = frontier_phi_66_pred_2;
                _3081 = frontier_phi_66_pred_3;
                _3079 = frontier_phi_66_pred_4;
                _3077 = frontier_phi_66_pred_5;
                uint _3228 = _3227 + 1u;
                if (_3228 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3221 = _3077;
                    _3222 = _3079;
                    _3223 = _3081;
                    _3224 = _3083;
                    _3225 = _3085;
                    _3226 = _3087;
                    _3227 = _3228;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3076 = _3077;
            _3078 = _3079;
            _3080 = _3081;
            _3082 = _3083;
            _3084 = _3085;
            _3086 = _3087;
        }
        uvec4 _3090 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3091 = _3090.z;
        uint _3093 = (_3091 >> 8u) & 15u;
        float _3189;
        float _3191;
        float _3193;
        float _3195;
        float _3197;
        float _3199;
        if (((4294967295u << _3093) & _2996) == 0u)
        {
            _3189 = _3076;
            _3191 = _3078;
            _3193 = _3080;
            _3195 = _3082;
            _3197 = _3084;
            _3199 = _3086;
        }
        else
        {
            float _3214 = inversesqrt(dot(vec3(_2074, _2075, _2076), vec3(_2074, _2075, _2076)));
            float _3215 = _3214 * _2074;
            float _3216 = _3214 * _2075;
            float _3217 = _3214 * _2076;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3093 < ((_3091 >> 12u) & 15u))
            {
                float _3190;
                float _3192;
                float _3194;
                float _3196;
                float _3198;
                float _3200;
                float _3328 = _3076;
                float _3329 = _3078;
                float _3330 = _3080;
                float _3331 = _3082;
                float _3332 = _3084;
                float _3333 = _3086;
                uint _3334 = _3093;
                uint _3343;
                bool _3344;
                for (;;)
                {
                    _3343 = texelFetch(g_lightClassification, int((((_2990 << 5u) + (_2976 << 9u)) + (_3334 << 2u)) >> 2u)).x;
                    _3344 = _3343 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3344)
                    {
                        frontier_phi_72_pred = _3333;
                        frontier_phi_72_pred_1 = _3332;
                        frontier_phi_72_pred_2 = _3331;
                        frontier_phi_72_pred_3 = _3330;
                        frontier_phi_72_pred_4 = _3329;
                        frontier_phi_72_pred_5 = _3328;
                    }
                    else
                    {
                        float _3527;
                        float _3528;
                        float _3529;
                        float _3530;
                        float _3531;
                        float _3532;
                        float _3820;
                        float _3821;
                        float _3822;
                        float _3823;
                        float _3824;
                        float _3825;
                        float _3540 = _3328;
                        float _3541 = _3329;
                        float _3542 = _3330;
                        float _3543 = _3331;
                        float _3544 = _3332;
                        float _3545 = _3333;
                        uint _3546 = _3343;
                        uint _3547;
                        vec4 _3572;
                        float _3573;
                        vec4 _3588;
                        vec3 _3600;
                        vec4 _3615;
                        vec4 _3630;
                        float _3676;
                        bool _3677;
                        for (;;)
                        {
                            uint _3557 = ((_3334 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3546));
                            _3547 = (_3546 + 4294967295u) & _3546;
                            uint _3559 = _3557 * 40u;
                            _3572 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3559)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3559 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3559 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3559 + 3u)).x));
                            _3573 = _3572.w;
                            uint _3575 = (_3557 * 40u) + 4u;
                            _3588 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3575)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3575 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3575 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3575 + 3u)).x));
                            uint _3590 = (_3557 * 40u) + 8u;
                            _3600 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3590)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3590 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3590 + 2u)).x));
                            uint _3602 = (_3557 * 40u) + 16u;
                            _3615 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3602)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3602 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3602 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3602 + 3u)).x));
                            uint _3617 = (_3557 * 40u) + 20u;
                            _3630 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3617)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3617 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3617 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3617 + 3u)).x));
                            uint _3632 = (_3557 * 40u) + 24u;
                            vec4 _3645 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3632)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3632 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3632 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3632 + 3u)).x));
                            uint _3651 = (_3557 * 40u) + 28u;
                            vec4 _3664 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3651)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3651 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3651 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3651 + 3u)).x));
                            _3676 = fma(_2076, _3664.z, fma(_2075, _3664.y, _3664.x * _2074)) + _3664.w;
                            _3677 = !((fma(_2076, _3645.z, fma(_2075, _3645.y, _3645.x * _2074)) + _3645.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3677)
                            {
                                float _3704 = _3572.x - _2074;
                                float _3705 = _3572.y - _2075;
                                float _3706 = _3572.z - _2076;
                                float _3707 = dot(vec3(_3704, _3705, _3706), vec3(_3704, _3705, _3706));
                                float _3710 = inversesqrt(_3707);
                                float _3711 = _3710 * _3704;
                                float _3712 = _3710 * _3705;
                                float _3713 = _3710 * _3706;
                                float _3717 = 1.0 - (_3707 / (_3573 * _3573));
                                float _4859 = isnan(0.0) ? _3717 : (isnan(_3717) ? 0.0 : max(_3717, 0.0));
                                float _3718 = isnan(1.0) ? _4859 : (isnan(_4859) ? 1.0 : min(_4859, 1.0));
                                float _3722 = sqrt(_3707) * _3588.w;
                                float _3724 = 1.39999997615814208984375 / (_3722 + 1.39999997615814208984375);
                                float _3725 = _3724 * _3724;
                                float _3728 = ((1.0 - _3725) * dot(vec3(_3711, _3712, _3713), vec3(_963, _966, _969))) + _3725;
                                float _3731 = _3722 * _3722;
                                float _3735 = (fma(_2076, _3615.z, fma(_2075, _3615.y, _3615.x * _2074)) + _3615.w) / _3676;
                                float _3736 = (fma(_2076, _3630.z, fma(_2075, _3630.y, _3630.x * _2074)) + _3630.w) / _3676;
                                float _3740 = 1.0 - dot(vec2(_3735, _3736), vec2(_3735, _3736));
                                float _4875 = isnan(0.0) ? _3740 : (isnan(_3740) ? 0.0 : max(_3740, 0.0));
                                float _3741 = isnan(1.0) ? _4875 : (isnan(_4875) ? 1.0 : min(_4875, 1.0));
                                float _3742 = _3741 * (((isnan(0.0) ? _3728 : (isnan(_3728) ? 0.0 : max(_3728, 0.0))) * _3718) / ((_3731 * 0.699999988079071044921875) + 1.0));
                                float _3754 = exp2(log2(1.0 / ((_3731 * 3.5) + 5.0)) * 0.25);
                                float _3755 = 1.0 - _1023;
                                float _3762 = sqrt(1.0 - ((1.0 - (_3755 * _3755)) * (1.0 - (_3754 * _3754))));
                                float _3763 = _3762 * _3762;
                                float _3764 = _3763 * _3763;
                                float _3765 = _3711 - _3215;
                                float _3766 = _3712 - _3216;
                                float _3767 = _3713 - _3217;
                                float _3771 = inversesqrt(dot(vec3(_3765, _3766, _3767), vec3(_3765, _3766, _3767)));
                                float _3775 = dot(vec3(_963, _966, _969), vec3((-0.0) - _3215, (-0.0) - _3216, (-0.0) - _3217));
                                float _4886 = isnan(0.0) ? _3775 : (isnan(_3775) ? 0.0 : max(_3775, 0.0));
                                float _3778 = isnan(1.0) ? _4886 : (isnan(_4886) ? 1.0 : min(_4886, 1.0));
                                float _3779 = dot(vec3(_963, _966, _969), vec3(_3771 * _3765, _3771 * _3766, _3771 * _3767));
                                float _4897 = isnan(0.0) ? _3779 : (isnan(_3779) ? 0.0 : max(_3779, 0.0));
                                float _3782 = isnan(1.0) ? _4897 : (isnan(_4897) ? 1.0 : min(_4897, 1.0));
                                float _3786 = ((_3782 * _3782) * (_3764 + (-1.0))) + 1.0;
                                float _3787 = _3724 * _3763;
                                float _3788 = _3787 * _3787;
                                float _3794 = ((1.0 - _3788) * dot(vec3(_963, _966, _969), vec3(_3711, _3712, _3713))) + _3788;
                                float _4908 = isnan(0.0) ? _3794 : (isnan(_3794) ? 0.0 : max(_3794, 0.0));
                                float _3795 = isnan(1.0) ? _4908 : (isnan(_4908) ? 1.0 : min(_4908, 1.0));
                                float _3796 = 1.0 - _3763;
                                float _3806 = (0.5 / (((_3795 * ((_3778 * _3796) + _3763)) + 9.9999999392252902907785028219223e-09) + (((_3795 * _3796) + _3763) * _3778))) * _3795;
                                float _4919 = isnan(0.0) ? _3806 : (isnan(_3806) ? 0.0 : max(_3806, 0.0));
                                float _3816 = (_3741 * _3718) * (((_3764 * 3.1415927410125732421875) * (isnan(1.0) ? _4919 : (isnan(_4919) ? 1.0 : min(_4919, 1.0)))) / ((_3786 * _3786) * ((_3731 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3742 * _3588.y;
                                frontier_phi_78_pred_1 = _3742 * _3588.x;
                                frontier_phi_78_pred_2 = _3816 * _3600.z;
                                frontier_phi_78_pred_3 = _3816 * _3600.y;
                                frontier_phi_78_pred_4 = _3816 * _3600.x;
                                frontier_phi_78_pred_5 = _3742 * _3588.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3824 = frontier_phi_78_pred;
                            _3823 = frontier_phi_78_pred_1;
                            _3822 = frontier_phi_78_pred_2;
                            _3821 = frontier_phi_78_pred_3;
                            _3820 = frontier_phi_78_pred_4;
                            _3825 = frontier_phi_78_pred_5;
                            _3530 = _3823 + _3543;
                            _3531 = _3824 + _3544;
                            _3532 = _3825 + _3545;
                            _3527 = _3820 + _3540;
                            _3528 = _3821 + _3541;
                            _3529 = _3822 + _3542;
                            if (_3547 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3540 = _3527;
                                _3541 = _3528;
                                _3542 = _3529;
                                _3543 = _3530;
                                _3544 = _3531;
                                _3545 = _3532;
                                _3546 = _3547;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3532;
                        frontier_phi_72_pred_1 = _3531;
                        frontier_phi_72_pred_2 = _3530;
                        frontier_phi_72_pred_3 = _3529;
                        frontier_phi_72_pred_4 = _3528;
                        frontier_phi_72_pred_5 = _3527;
                    }
                    _3200 = frontier_phi_72_pred;
                    _3198 = frontier_phi_72_pred_1;
                    _3196 = frontier_phi_72_pred_2;
                    _3194 = frontier_phi_72_pred_3;
                    _3192 = frontier_phi_72_pred_4;
                    _3190 = frontier_phi_72_pred_5;
                    uint _3335 = _3334 + 1u;
                    if (_3335 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3328 = _3190;
                        _3329 = _3192;
                        _3330 = _3194;
                        _3331 = _3196;
                        _3332 = _3198;
                        _3333 = _3200;
                        _3334 = _3335;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3200;
                frontier_phi_60_61_ladder_1 = _3198;
                frontier_phi_60_61_ladder_2 = _3194;
                frontier_phi_60_61_ladder_3 = _3192;
                frontier_phi_60_61_ladder_4 = _3190;
                frontier_phi_60_61_ladder_5 = _3196;
            }
            else
            {
                frontier_phi_60_61_ladder = _3086;
                frontier_phi_60_61_ladder_1 = _3084;
                frontier_phi_60_61_ladder_2 = _3080;
                frontier_phi_60_61_ladder_3 = _3078;
                frontier_phi_60_61_ladder_4 = _3076;
                frontier_phi_60_61_ladder_5 = _3082;
            }
            _3189 = frontier_phi_60_61_ladder_4;
            _3191 = frontier_phi_60_61_ladder_3;
            _3193 = frontier_phi_60_61_ladder_2;
            _3195 = frontier_phi_60_61_ladder_5;
            _3197 = frontier_phi_60_61_ladder_1;
            _3199 = frontier_phi_60_61_ladder;
        }
        float _3204 = isnan(1.0) ? _1007 : (isnan(_1007) ? 1.0 : min(_1007, 1.0));
        _3009 = (_3204 * _3195) + _2540;
        _3011 = (_3204 * _3197) + _2542;
        _3013 = (_3204 * _3199) + _2544;
        _3015 = ((_3189 * 0.039999999105930328369140625) * _3204) + _2863;
        _3017 = ((_3191 * 0.039999999105930328369140625) * _3204) + _2865;
        _3019 = ((_3193 * 0.039999999105930328369140625) * _3204) + _2867;
    }
    else
    {
        _3009 = _2540;
        _3011 = _2542;
        _3013 = _2544;
        _3015 = _2863;
        _3017 = _2865;
        _3019 = _2867;
    }
    float _4935 = isnan(0.0) ? _992 : (isnan(_992) ? 0.0 : max(_992, 0.0));
    float _4946 = isnan(0.0) ? _993 : (isnan(_993) ? 0.0 : max(_993, 0.0));
    float _4957 = isnan(0.0) ? _994 : (isnan(_994) ? 0.0 : max(_994, 0.0));
    uint _3039 = _250 + 6u;
    float _3047 = _944 / cbSceneParam._m0[86u].x;
    float _3048 = _945 / cbSceneParam._m0[86u].y;
    vec4 _3062 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3047, _3048, (log2((isnan(cbSceneParam._m0[77u].w) ? _878 : (isnan(_878) ? cbSceneParam._m0[77u].w : min(_878, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3064 = _3062.x;
    float _3065 = _3062.y;
    float _3066 = _3062.z;
    float _3067 = _3062.w;
    float _3139;
    float _3141;
    float _3143;
    float _3145;
    if (_878 > cbSceneParam._m0[78u].w)
    {
        float _3101 = isnan(_878) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _878 : min(cbSceneParam._m0[80u].w, _878));
        float _3102 = _3101 / _878;
        float _3113 = _3102 * _929;
        float _3114 = _930 * _3102;
        float _3115 = (-0.0) - _3114;
        float _3117 = _3102 * _931;
        float _3119 = (cbSceneParam._m0[77u].w * _3115) / _3101;
        float _3120 = _3119 + cbSceneParam._m0[79u].w;
        float _3121 = cbSceneParam._m0[79u].w - _3114;
        float _3127 = sqrt(((_3113 * _3113) + (_3114 * _3114)) + (_3117 * _3117));
        float _3130 = (1.0 - (cbSceneParam._m0[77u].w / _3101)) * _3127;
        float _3135 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3137 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3290;
        if (abs((_3115 - _3119) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3290 = ((((_3120 > 0.0) ? exp2(_3135 * _3120) : (2.0 - exp2(_3137 * _3120))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3130;
        }
        else
        {
            float _3250 = 1.0 / cbSceneParam._m0[80u].x;
            float _3251 = isnan(_3121) ? _3120 : (isnan(_3120) ? _3121 : max(_3120, _3121));
            float _3252 = isnan(_3121) ? _3120 : (isnan(_3120) ? _3121 : min(_3120, _3121));
            float _3261 = isnan(0.0) ? _3251 : (isnan(_3251) ? 0.0 : min(_3251, 0.0));
            float _3262 = isnan(0.0) ? _3252 : (isnan(_3252) ? 0.0 : min(_3252, 0.0));
            _3290 = ((abs(_3127 / _3115) * cbSceneParam._m0[80u].y) * ((((_3261 - _3262) * 2.0) - ((exp2(_3135 * (isnan(0.0) ? _3251 : (isnan(_3251) ? 0.0 : max(_3251, 0.0)))) - exp2(_3135 * (isnan(0.0) ? _3252 : (isnan(_3252) ? 0.0 : max(_3252, 0.0))))) * _3250)) - ((exp2(_3137 * _3261) - exp2(_3137 * _3262)) * _3250))) + (_3130 * cbSceneParam._m0[80u].z);
        }
        vec4 _3292 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3047, _3048, 1.0), 0.0);
        float _3301 = exp2((_3290 * (-1.44269502162933349609375)) * (1.0 - _3292.w));
        float _3302 = log2(_3301);
        float _3318 = log2(_3067);
        _3139 = (exp2(_3318 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3302 * cbSceneParam._m0[78u].x)) * _3292.x) / cbSceneParam._m0[78u].x)) + _3064;
        _3141 = (exp2(_3318 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3302 * cbSceneParam._m0[78u].y)) * _3292.y) / cbSceneParam._m0[78u].y)) + _3065;
        _3143 = (exp2(_3318 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3302 * cbSceneParam._m0[78u].z)) * _3292.z) / cbSceneParam._m0[78u].z)) + _3066;
        _3145 = _3301 * _3067;
    }
    else
    {
        _3139 = _3064;
        _3141 = _3065;
        _3143 = _3066;
        _3145 = _3067;
    }
    float _3157 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3158 = _3157 == 3.0;
    float _3159 = log2(_3145);
    float _3166 = exp2(_3159 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4935 : (isnan(_4935) ? 1.0 : min(_4935, 1.0))) * (_3009 + ((isnan(0.0) ? _1731 : (isnan(_1731) ? 0.0 : max(_1731, 0.0))) * _1007))) + ((_3015 + ((isnan(0.0) ? _2021 : (isnan(_2021) ? 0.0 : max(_2021, 0.0))) * _1810)) * cbPerFrame._m0[3u].x));
    float _3167 = exp2(_3159 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4946 : (isnan(_4946) ? 1.0 : min(_4946, 1.0))) * (_3011 + ((isnan(0.0) ? _1734 : (isnan(_1734) ? 0.0 : max(_1734, 0.0))) * _1007))) + ((_3017 + ((isnan(0.0) ? _2024 : (isnan(_2024) ? 0.0 : max(_2024, 0.0))) * _1810)) * cbPerFrame._m0[3u].x));
    float _3168 = exp2(_3159 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4957 : (isnan(_4957) ? 1.0 : min(_4957, 1.0))) * (_3013 + ((isnan(0.0) ? _1737 : (isnan(_1737) ? 0.0 : max(_1737, 0.0))) * _1007))) + ((_3019 + ((isnan(0.0) ? _2027 : (isnan(_2027) ? 0.0 : max(_2027, 0.0))) * _1810)) * cbPerFrame._m0[3u].x));
    float _3177 = (_3157 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3177 * (_3158 ? _3166 : (_3166 + (cbSceneParam._m0[72u].w * _3139)));
    SV_Target.y = _3177 * (_3158 ? _3167 : (_3167 + (cbSceneParam._m0[72u].w * _3141)));
    SV_Target.z = _3177 * (_3158 ? _3168 : (_3168 + (cbSceneParam._m0[72u].w * _3143)));
    SV_Target.w = cbInstanceData._m0[_3039].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3039].w;
}


