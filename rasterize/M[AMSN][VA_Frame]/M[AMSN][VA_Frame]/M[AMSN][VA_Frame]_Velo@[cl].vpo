#version 460
#extension GL_EXT_samplerless_texture_functions : require

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_VA_Frame_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_VA_Frame_snp_0_Texture2D_4;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec3 TEXCOORD_5;
layout(location = 6) out vec4 TEXCOORD_9;
layout(location = 7) out vec4 TEXCOORD_10;
layout(location = 8) out vec3 TEXCOORD_11;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    TEXCOORD_9.w = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    TEXCOORD_10.z = 0.0;
    TEXCOORD_10.w = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    float _198 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _200 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _201 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _207 = float(int(uvec2(textureSize(M_AMSN_VA_Frame_snp_0_Texture2D_4, int(0u))).y)) + (-1.0);
    float _569 = isnan(0.0) ? cbMtdParam._m0[3u].z : (isnan(cbMtdParam._m0[3u].z) ? 0.0 : max(cbMtdParam._m0[3u].z, 0.0));
    precise float _215 = (isnan(1.0) ? _569 : (isnan(_569) ? 1.0 : min(_569, 1.0))) * _207;
    precise float _216 = TEXCOORD_1.x * 255.0;
    precise float _218 = TEXCOORD_1.y * 255.0;
    precise float _219 = _218 * 256.0;
    precise float _221 = _216 + _219;
    precise float _222 = _221 + 0.5;
    float _224 = floor(_215);
    uint _225 = uint(int(_222));
    uint _226 = uint(int(_224));
    vec4 _227 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_3, ivec2(uvec2(_225, _226)), int(0u));
    float _229 = _227.x;
    float _230 = _227.y;
    float _231 = _227.z;
    precise float _239 = _224 + 1.0;
    uint _241 = uint(int(isnan(_207) ? _239 : (isnan(_239) ? _207 : min(_239, _207))));
    vec4 _242 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_3, ivec2(uvec2(_225, _241)), int(0u));
    float _247 = fract(_215);
    float _257 = (((_242.x - _229) * 2.0) * _247) + ((_229 * 2.0) + (-1.0));
    float _258 = (((_242.y - _230) * 2.0) * _247) + ((_230 * 2.0) + (-1.0));
    float _259 = (_247 * ((_242.z - _231) * 2.0)) + ((_231 * 2.0) + (-1.0));
    vec4 _260 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_4, ivec2(uvec2(_225, _226)), int(0u));
    float _262 = _260.x;
    float _263 = _260.y;
    float _264 = _260.z;
    vec4 _265 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_4, ivec2(uvec2(_225, _241)), int(0u));
    precise float _270 = _265.x - _262;
    precise float _271 = _265.y - _263;
    precise float _272 = _265.z - _264;
    precise float _273 = _247 * _270;
    precise float _274 = _247 * _271;
    precise float _275 = _247 * _272;
    precise float _276 = _262 + _273;
    precise float _277 = _263 + _274;
    precise float _278 = _264 + _275;
    uint _283 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _285 = texelFetch(g_InstanceIndexBuffer, int(_283));
    uint _286 = _285.x;
    uint _296 = (floatBitsToUint(cbInstanceData._m0[(_286 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _303 = _296 + 1u;
    uint _310 = _296 + 2u;
    precise float _317 = POSITION.x * cbObjMatrix._m0[_296].x;
    precise float _318 = POSITION.y * cbObjMatrix._m0[_296].y;
    precise float _319 = _318 + _317;
    precise float _320 = POSITION.z * cbObjMatrix._m0[_296].z;
    precise float _321 = _320 + _319;
    precise float _322 = 1.0 * cbObjMatrix._m0[_296].w;
    precise float _323 = _322 + _321;
    precise float _324 = POSITION.x * cbObjMatrix._m0[_303].x;
    precise float _325 = POSITION.y * cbObjMatrix._m0[_303].y;
    precise float _326 = _325 + _324;
    precise float _327 = POSITION.z * cbObjMatrix._m0[_303].z;
    precise float _328 = _327 + _326;
    precise float _329 = 1.0 * cbObjMatrix._m0[_303].w;
    precise float _330 = _329 + _328;
    precise float _331 = POSITION.x * cbObjMatrix._m0[_310].x;
    precise float _332 = POSITION.y * cbObjMatrix._m0[_310].y;
    precise float _333 = _332 + _331;
    precise float _334 = POSITION.z * cbObjMatrix._m0[_310].z;
    precise float _335 = _334 + _333;
    precise float _336 = 1.0 * cbObjMatrix._m0[_310].w;
    precise float _337 = _336 + _335;
    precise float _338 = _276 + _323;
    precise float _339 = _277 + _330;
    precise float _340 = _278 + _337;
    float _585 = isnan(0.0) ? cbMtdParam._m0[3u].w : (isnan(cbMtdParam._m0[3u].w) ? 0.0 : max(cbMtdParam._m0[3u].w, 0.0));
    float _370 = _207 * (isnan(1.0) ? _585 : (isnan(_585) ? 1.0 : min(_585, 1.0)));
    float _375 = floor(_370);
    float _376 = _375 + 1.0;
    float _378 = fract(_370);
    uint _379 = uint(int((_216 + 0.5) + (TEXCOORD_1.y * 65280.0)));
    vec4 _381 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_4, ivec2(uvec2(_379, uint(int(_375)))), int(0u));
    float _383 = _381.x;
    float _384 = _381.y;
    float _385 = _381.z;
    vec4 _387 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_4, ivec2(uvec2(_379, uint(int(isnan(_207) ? _376 : (isnan(_376) ? _207 : min(_376, _207)))))), int(0u));
    float _407 = (((fma(POSITION.z, cbPrevObjMatrix._m0[_296].z, fma(POSITION.y, cbPrevObjMatrix._m0[_296].y, cbPrevObjMatrix._m0[_296].x * POSITION.x)) + cbPrevObjMatrix._m0[_296].w) + _383) - cbSceneParam._m0[28u].x) + ((_387.x - _383) * _378);
    float _411 = (((fma(POSITION.z, cbPrevObjMatrix._m0[_303].z, fma(POSITION.y, cbPrevObjMatrix._m0[_303].y, cbPrevObjMatrix._m0[_303].x * POSITION.x)) + cbPrevObjMatrix._m0[_303].w) + _384) - cbSceneParam._m0[28u].y) + ((_387.y - _384) * _378);
    float _415 = (((fma(POSITION.z, cbPrevObjMatrix._m0[_310].z, fma(POSITION.y, cbPrevObjMatrix._m0[_310].y, cbPrevObjMatrix._m0[_310].x * POSITION.x)) + cbPrevObjMatrix._m0[_310].w) + _385) - cbSceneParam._m0[28u].z) + ((_387.z - _385) * _378);
    precise float _475 = _338 - cbSceneParam._m0[3u].x;
    precise float _476 = _339 - cbSceneParam._m0[3u].y;
    precise float _477 = _340 - cbSceneParam._m0[3u].z;
    precise float _505 = _475 * cbSceneParam._m0[24u].x;
    precise float _506 = _476 * cbSceneParam._m0[24u].y;
    precise float _507 = _506 + _505;
    precise float _508 = _477 * cbSceneParam._m0[24u].z;
    precise float _509 = _508 + _507;
    precise float _510 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _511 = _510 + _509;
    precise float _512 = _475 * cbSceneParam._m0[25u].x;
    precise float _513 = _476 * cbSceneParam._m0[25u].y;
    precise float _514 = _513 + _512;
    precise float _515 = _477 * cbSceneParam._m0[25u].z;
    precise float _516 = _515 + _514;
    precise float _517 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _518 = _517 + _516;
    precise float _519 = _475 * cbSceneParam._m0[26u].x;
    precise float _520 = _476 * cbSceneParam._m0[26u].y;
    precise float _521 = _520 + _519;
    precise float _522 = _477 * cbSceneParam._m0[26u].z;
    precise float _523 = _522 + _521;
    precise float _524 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _525 = _524 + _523;
    precise float _526 = _475 * cbSceneParam._m0[27u].x;
    precise float _527 = _476 * cbSceneParam._m0[27u].y;
    precise float _528 = _527 + _526;
    precise float _529 = _477 * cbSceneParam._m0[27u].z;
    precise float _530 = _529 + _528;
    precise float _531 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _532 = _531 + _530;
    gl_Position.x = _511;
    gl_Position.y = _518;
    gl_Position.z = _525;
    gl_Position.w = _532;
    POSITION_1.x = _511;
    POSITION_1.y = _518;
    POSITION_1.z = _525;
    POSITION_1.w = _532;
    NORMAL_1.x = _257;
    NORMAL_1.y = _258;
    NORMAL_1.z = _259;
    NORMAL_1.w = float(_286);
    TANGENT_1.x = fma(_201, cbObjMatrix._m0[_296].z, fma(_200, cbObjMatrix._m0[_296].y, cbObjMatrix._m0[_296].x * _198));
    TANGENT_1.y = fma(_201, cbObjMatrix._m0[_303].z, fma(_200, cbObjMatrix._m0[_303].y, cbObjMatrix._m0[_303].x * _198));
    TANGENT_1.z = fma(_201, cbObjMatrix._m0[_310].z, fma(_200, cbObjMatrix._m0[_310].y, cbObjMatrix._m0[_310].x * _198));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = COLOR_1.x;
    TEXCOORD_9.x = _511;
    TEXCOORD_9.y = _518;
    TEXCOORD_9.z = _525;
    TEXCOORD_9.w = _532;
    TEXCOORD_10.x = fma(_415, cbSceneParam._m0[29u].z, fma(_411, cbSceneParam._m0[29u].y, _407 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_10.y = fma(_415, cbSceneParam._m0[30u].z, fma(_411, cbSceneParam._m0[30u].y, _407 * cbSceneParam._m0[30u].x)) + cbSceneParam._m0[30u].w;
    TEXCOORD_10.z = fma(_415, cbSceneParam._m0[31u].z, fma(_411, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _407)) + cbSceneParam._m0[31u].w;
    TEXCOORD_10.w = fma(_415, cbSceneParam._m0[32u].z, fma(_411, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _407)) + cbSceneParam._m0[32u].w;
    TEXCOORD_11.x = _257;
    TEXCOORD_11.y = _258;
    TEXCOORD_11.z = _259;
}


