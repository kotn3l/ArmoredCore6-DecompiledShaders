#version 460
#extension GL_EXT_samplerless_texture_functions : require

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_VA_Frame_snp_0_Texture2D_4;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    precise float _90 = float(int(uvec2(textureSize(M_AMSN_VA_Frame_snp_0_Texture2D_4, int(0u))).y)) + (-1.0);
    float _270 = isnan(0.0) ? cbMtdParam._m0[3u].z : (isnan(cbMtdParam._m0[3u].z) ? 0.0 : max(cbMtdParam._m0[3u].z, 0.0));
    precise float _99 = (isnan(1.0) ? _270 : (isnan(_270) ? 1.0 : min(_270, 1.0))) * _90;
    precise float _100 = TEXCOORD_1.x * 255.0;
    precise float _102 = TEXCOORD_1.y * 255.0;
    precise float _103 = _102 * 256.0;
    precise float _105 = _100 + _103;
    precise float _106 = _105 + 0.5;
    float _108 = floor(_99);
    precise float _109 = _108 + 1.0;
    float _111 = fract(_99);
    uint _112 = uint(int(_106));
    vec4 _114 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_4, ivec2(uvec2(_112, uint(int(_108)))), int(0u));
    float _116 = _114.x;
    float _117 = _114.y;
    float _118 = _114.z;
    vec4 _120 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_4, ivec2(uvec2(_112, uint(int(isnan(_90) ? _109 : (isnan(_109) ? _90 : min(_109, _90)))))), int(0u));
    precise float _125 = _120.x - _116;
    precise float _126 = _120.y - _117;
    precise float _127 = _120.z - _118;
    precise float _128 = _111 * _125;
    precise float _129 = _111 * _126;
    precise float _130 = _111 * _127;
    precise float _131 = _116 + _128;
    precise float _132 = _117 + _129;
    precise float _133 = _118 + _130;
    uint _138 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uint _152 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_138)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _159 = _152 + 1u;
    uint _166 = _152 + 2u;
    precise float _173 = POSITION.x * cbObjMatrix._m0[_152].x;
    precise float _174 = POSITION.y * cbObjMatrix._m0[_152].y;
    precise float _175 = _174 + _173;
    precise float _176 = POSITION.z * cbObjMatrix._m0[_152].z;
    precise float _177 = _176 + _175;
    precise float _178 = 1.0 * cbObjMatrix._m0[_152].w;
    precise float _179 = _178 + _177;
    precise float _180 = POSITION.x * cbObjMatrix._m0[_159].x;
    precise float _181 = POSITION.y * cbObjMatrix._m0[_159].y;
    precise float _182 = _181 + _180;
    precise float _183 = POSITION.z * cbObjMatrix._m0[_159].z;
    precise float _184 = _183 + _182;
    precise float _185 = 1.0 * cbObjMatrix._m0[_159].w;
    precise float _186 = _185 + _184;
    precise float _187 = POSITION.x * cbObjMatrix._m0[_166].x;
    precise float _188 = POSITION.y * cbObjMatrix._m0[_166].y;
    precise float _189 = _188 + _187;
    precise float _190 = POSITION.z * cbObjMatrix._m0[_166].z;
    precise float _191 = _190 + _189;
    precise float _192 = 1.0 * cbObjMatrix._m0[_166].w;
    precise float _193 = _192 + _191;
    precise float _194 = _131 + _179;
    precise float _195 = _132 + _186;
    precise float _196 = _133 + _193;
    precise float _202 = _194 - cbSceneParam._m0[3u].x;
    precise float _203 = _195 - cbSceneParam._m0[3u].y;
    precise float _204 = _196 - cbSceneParam._m0[3u].z;
    precise float _232 = _202 * cbSceneParam._m0[24u].x;
    precise float _233 = _203 * cbSceneParam._m0[24u].y;
    precise float _234 = _233 + _232;
    precise float _235 = _204 * cbSceneParam._m0[24u].z;
    precise float _236 = _235 + _234;
    precise float _237 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _238 = _237 + _236;
    precise float _239 = _202 * cbSceneParam._m0[25u].x;
    precise float _240 = _203 * cbSceneParam._m0[25u].y;
    precise float _241 = _240 + _239;
    precise float _242 = _204 * cbSceneParam._m0[25u].z;
    precise float _243 = _242 + _241;
    precise float _244 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _245 = _244 + _243;
    precise float _246 = _202 * cbSceneParam._m0[26u].x;
    precise float _247 = _203 * cbSceneParam._m0[26u].y;
    precise float _248 = _247 + _246;
    precise float _249 = _204 * cbSceneParam._m0[26u].z;
    precise float _250 = _249 + _248;
    precise float _251 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _252 = _251 + _250;
    precise float _253 = _202 * cbSceneParam._m0[27u].x;
    precise float _254 = _203 * cbSceneParam._m0[27u].y;
    precise float _255 = _254 + _253;
    precise float _256 = _204 * cbSceneParam._m0[27u].z;
    precise float _257 = _256 + _255;
    precise float _258 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _259 = _258 + _257;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_Position.x = _238;
    gl_Position.y = _245;
    gl_Position.z = _252;
    gl_Position.w = _259;
}


