#version 460
#extension GL_EXT_samplerless_texture_functions : require

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_VA_Frame_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_VA_Frame_snp_0_Texture2D_4;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec3 TEXCOORD_5;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    float _180 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _182 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _183 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _189 = float(int(uvec2(textureSize(M_AMSN_VA_Frame_snp_0_Texture2D_4, int(0u))).y)) + (-1.0);
    float _421 = isnan(0.0) ? cbMtdParam._m0[3u].z : (isnan(cbMtdParam._m0[3u].z) ? 0.0 : max(cbMtdParam._m0[3u].z, 0.0));
    precise float _197 = (isnan(1.0) ? _421 : (isnan(_421) ? 1.0 : min(_421, 1.0))) * _189;
    precise float _198 = TEXCOORD_1.x * 255.0;
    precise float _200 = TEXCOORD_1.y * 255.0;
    precise float _201 = _200 * 256.0;
    precise float _203 = _198 + _201;
    precise float _204 = _203 + 0.5;
    float _206 = floor(_197);
    uint _207 = uint(int(_204));
    uint _208 = uint(int(_206));
    vec4 _209 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_3, ivec2(uvec2(_207, _208)), int(0u));
    float _211 = _209.x;
    float _212 = _209.y;
    float _213 = _209.z;
    precise float _221 = _206 + 1.0;
    uint _223 = uint(int(isnan(_189) ? _221 : (isnan(_221) ? _189 : min(_221, _189))));
    vec4 _224 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_3, ivec2(uvec2(_207, _223)), int(0u));
    float _229 = fract(_197);
    vec4 _242 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_4, ivec2(uvec2(_207, _208)), int(0u));
    float _244 = _242.x;
    float _245 = _242.y;
    float _246 = _242.z;
    vec4 _247 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_4, ivec2(uvec2(_207, _223)), int(0u));
    precise float _252 = _247.x - _244;
    precise float _253 = _247.y - _245;
    precise float _254 = _247.z - _246;
    precise float _255 = _229 * _252;
    precise float _256 = _229 * _253;
    precise float _257 = _229 * _254;
    precise float _258 = _244 + _255;
    precise float _259 = _245 + _256;
    precise float _260 = _246 + _257;
    uint _265 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _267 = texelFetch(g_InstanceIndexBuffer, int(_265));
    uint _268 = _267.x;
    uint _278 = (floatBitsToUint(cbInstanceData._m0[(_268 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _285 = _278 + 1u;
    uint _292 = _278 + 2u;
    precise float _299 = POSITION.x * cbObjMatrix._m0[_278].x;
    precise float _300 = POSITION.y * cbObjMatrix._m0[_278].y;
    precise float _301 = _300 + _299;
    precise float _302 = POSITION.z * cbObjMatrix._m0[_278].z;
    precise float _303 = _302 + _301;
    precise float _304 = 1.0 * cbObjMatrix._m0[_278].w;
    precise float _305 = _304 + _303;
    precise float _306 = POSITION.x * cbObjMatrix._m0[_285].x;
    precise float _307 = POSITION.y * cbObjMatrix._m0[_285].y;
    precise float _308 = _307 + _306;
    precise float _309 = POSITION.z * cbObjMatrix._m0[_285].z;
    precise float _310 = _309 + _308;
    precise float _311 = 1.0 * cbObjMatrix._m0[_285].w;
    precise float _312 = _311 + _310;
    precise float _313 = POSITION.x * cbObjMatrix._m0[_292].x;
    precise float _314 = POSITION.y * cbObjMatrix._m0[_292].y;
    precise float _315 = _314 + _313;
    precise float _316 = POSITION.z * cbObjMatrix._m0[_292].z;
    precise float _317 = _316 + _315;
    precise float _318 = 1.0 * cbObjMatrix._m0[_292].w;
    precise float _319 = _318 + _317;
    precise float _320 = _258 + _305;
    precise float _321 = _259 + _312;
    precise float _322 = _260 + _319;
    precise float _338 = _320 - cbSceneParam._m0[3u].x;
    precise float _339 = _321 - cbSceneParam._m0[3u].y;
    precise float _340 = _322 - cbSceneParam._m0[3u].z;
    precise float _368 = _338 * cbSceneParam._m0[24u].x;
    precise float _369 = _339 * cbSceneParam._m0[24u].y;
    precise float _370 = _369 + _368;
    precise float _371 = _340 * cbSceneParam._m0[24u].z;
    precise float _372 = _371 + _370;
    precise float _373 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _374 = _373 + _372;
    precise float _375 = _338 * cbSceneParam._m0[25u].x;
    precise float _376 = _339 * cbSceneParam._m0[25u].y;
    precise float _377 = _376 + _375;
    precise float _378 = _340 * cbSceneParam._m0[25u].z;
    precise float _379 = _378 + _377;
    precise float _380 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _381 = _380 + _379;
    precise float _382 = _338 * cbSceneParam._m0[26u].x;
    precise float _383 = _339 * cbSceneParam._m0[26u].y;
    precise float _384 = _383 + _382;
    precise float _385 = _340 * cbSceneParam._m0[26u].z;
    precise float _386 = _385 + _384;
    precise float _387 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _388 = _387 + _386;
    precise float _389 = _338 * cbSceneParam._m0[27u].x;
    precise float _390 = _339 * cbSceneParam._m0[27u].y;
    precise float _391 = _390 + _389;
    precise float _392 = _340 * cbSceneParam._m0[27u].z;
    precise float _393 = _392 + _391;
    precise float _394 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _395 = _394 + _393;
    gl_Position.x = _374;
    gl_Position.y = _381;
    gl_Position.z = _388;
    gl_Position.w = _395;
    POSITION_1.x = _374;
    POSITION_1.y = _381;
    POSITION_1.z = _388;
    POSITION_1.w = _395;
    NORMAL_1.x = (((_224.x - _211) * 2.0) * _229) + ((_211 * 2.0) + (-1.0));
    NORMAL_1.y = (((_224.y - _212) * 2.0) * _229) + ((_212 * 2.0) + (-1.0));
    NORMAL_1.z = (_229 * ((_224.z - _213) * 2.0)) + ((_213 * 2.0) + (-1.0));
    NORMAL_1.w = float(_268);
    TANGENT_1.x = fma(_183, cbObjMatrix._m0[_278].z, fma(_182, cbObjMatrix._m0[_278].y, cbObjMatrix._m0[_278].x * _180));
    TANGENT_1.y = fma(_183, cbObjMatrix._m0[_285].z, fma(_182, cbObjMatrix._m0[_285].y, cbObjMatrix._m0[_285].x * _180));
    TANGENT_1.z = fma(_183, cbObjMatrix._m0[_292].z, fma(_182, cbObjMatrix._m0[_292].y, cbObjMatrix._m0[_292].x * _180));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = COLOR_1.x;
}


