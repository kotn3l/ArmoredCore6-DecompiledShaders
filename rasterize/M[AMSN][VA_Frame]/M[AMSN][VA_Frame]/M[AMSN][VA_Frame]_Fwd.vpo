#version 460
#extension GL_EXT_samplerless_texture_functions : require

out float gl_ClipDistance[2];

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_VA_Frame_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_VA_Frame_snp_0_Texture2D_4;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec3 TEXCOORD_5;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _185 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _187 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _188 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _194 = float(int(uvec2(textureSize(M_AMSN_VA_Frame_snp_0_Texture2D_4, int(0u))).y)) + (-1.0);
    float _447 = isnan(0.0) ? cbMtdParam._m0[3u].z : (isnan(cbMtdParam._m0[3u].z) ? 0.0 : max(cbMtdParam._m0[3u].z, 0.0));
    precise float _202 = (isnan(1.0) ? _447 : (isnan(_447) ? 1.0 : min(_447, 1.0))) * _194;
    precise float _203 = TEXCOORD_1.x * 255.0;
    precise float _205 = TEXCOORD_1.y * 255.0;
    precise float _206 = _205 * 256.0;
    precise float _208 = _203 + _206;
    precise float _209 = _208 + 0.5;
    float _211 = floor(_202);
    uint _212 = uint(int(_209));
    uint _213 = uint(int(_211));
    vec4 _214 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_3, ivec2(uvec2(_212, _213)), int(0u));
    float _216 = _214.x;
    float _217 = _214.y;
    float _218 = _214.z;
    precise float _226 = _211 + 1.0;
    uint _228 = uint(int(isnan(_194) ? _226 : (isnan(_226) ? _194 : min(_226, _194))));
    vec4 _229 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_3, ivec2(uvec2(_212, _228)), int(0u));
    float _234 = fract(_202);
    vec4 _247 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_4, ivec2(uvec2(_212, _213)), int(0u));
    float _249 = _247.x;
    float _250 = _247.y;
    float _251 = _247.z;
    vec4 _252 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_4, ivec2(uvec2(_212, _228)), int(0u));
    precise float _257 = _252.x - _249;
    precise float _258 = _252.y - _250;
    precise float _259 = _252.z - _251;
    precise float _260 = _234 * _257;
    precise float _261 = _234 * _258;
    precise float _262 = _234 * _259;
    precise float _263 = _249 + _260;
    precise float _264 = _250 + _261;
    precise float _265 = _251 + _262;
    uint _270 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _272 = texelFetch(g_InstanceIndexBuffer, int(_270));
    uint _273 = _272.x;
    uint _275 = _273 * 13u;
    uint _283 = (floatBitsToUint(cbInstanceData._m0[_275 + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _290 = _283 + 1u;
    uint _297 = _283 + 2u;
    precise float _304 = POSITION.x * cbObjMatrix._m0[_283].x;
    precise float _305 = POSITION.y * cbObjMatrix._m0[_283].y;
    precise float _306 = _305 + _304;
    precise float _307 = POSITION.z * cbObjMatrix._m0[_283].z;
    precise float _308 = _307 + _306;
    precise float _309 = 1.0 * cbObjMatrix._m0[_283].w;
    precise float _310 = _309 + _308;
    precise float _311 = POSITION.x * cbObjMatrix._m0[_290].x;
    precise float _312 = POSITION.y * cbObjMatrix._m0[_290].y;
    precise float _313 = _312 + _311;
    precise float _314 = POSITION.z * cbObjMatrix._m0[_290].z;
    precise float _315 = _314 + _313;
    precise float _316 = 1.0 * cbObjMatrix._m0[_290].w;
    precise float _317 = _316 + _315;
    precise float _318 = POSITION.x * cbObjMatrix._m0[_297].x;
    precise float _319 = POSITION.y * cbObjMatrix._m0[_297].y;
    precise float _320 = _319 + _318;
    precise float _321 = POSITION.z * cbObjMatrix._m0[_297].z;
    precise float _322 = _321 + _320;
    precise float _323 = 1.0 * cbObjMatrix._m0[_297].w;
    precise float _324 = _323 + _322;
    precise float _325 = _263 + _310;
    precise float _326 = _264 + _317;
    precise float _327 = _265 + _324;
    precise float _343 = _325 - cbSceneParam._m0[3u].x;
    precise float _344 = _326 - cbSceneParam._m0[3u].y;
    precise float _345 = _327 - cbSceneParam._m0[3u].z;
    precise float _373 = _343 * cbSceneParam._m0[24u].x;
    precise float _374 = _344 * cbSceneParam._m0[24u].y;
    precise float _375 = _374 + _373;
    precise float _376 = _345 * cbSceneParam._m0[24u].z;
    precise float _377 = _376 + _375;
    precise float _378 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _379 = _378 + _377;
    precise float _380 = _343 * cbSceneParam._m0[25u].x;
    precise float _381 = _344 * cbSceneParam._m0[25u].y;
    precise float _382 = _381 + _380;
    precise float _383 = _345 * cbSceneParam._m0[25u].z;
    precise float _384 = _383 + _382;
    precise float _385 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _386 = _385 + _384;
    precise float _387 = _343 * cbSceneParam._m0[26u].x;
    precise float _388 = _344 * cbSceneParam._m0[26u].y;
    precise float _389 = _388 + _387;
    precise float _390 = _345 * cbSceneParam._m0[26u].z;
    precise float _391 = _390 + _389;
    precise float _392 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _393 = _392 + _391;
    precise float _394 = _343 * cbSceneParam._m0[27u].x;
    precise float _395 = _344 * cbSceneParam._m0[27u].y;
    precise float _396 = _395 + _394;
    precise float _397 = _345 * cbSceneParam._m0[27u].z;
    precise float _398 = _397 + _396;
    precise float _399 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _400 = _399 + _398;
    gl_Position.x = _379;
    gl_Position.y = _386;
    gl_Position.z = _393;
    gl_Position.w = _400;
    POSITION_1.x = _379;
    POSITION_1.y = _386;
    POSITION_1.z = _393;
    POSITION_1.w = _400;
    NORMAL_1.x = (((_229.x - _216) * 2.0) * _234) + ((_216 * 2.0) + (-1.0));
    NORMAL_1.y = (((_229.y - _217) * 2.0) * _234) + ((_217 * 2.0) + (-1.0));
    NORMAL_1.z = (_234 * ((_229.z - _218) * 2.0)) + ((_218 * 2.0) + (-1.0));
    NORMAL_1.w = float(_273);
    TANGENT_1.x = fma(_188, cbObjMatrix._m0[_283].z, fma(_187, cbObjMatrix._m0[_283].y, cbObjMatrix._m0[_283].x * _185));
    TANGENT_1.y = fma(_188, cbObjMatrix._m0[_290].z, fma(_187, cbObjMatrix._m0[_290].y, cbObjMatrix._m0[_290].x * _185));
    TANGENT_1.z = fma(_188, cbObjMatrix._m0[_297].z, fma(_187, cbObjMatrix._m0[_297].y, cbObjMatrix._m0[_297].x * _185));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = COLOR_1.x;
    gl_ClipDistance[0u] = dot(vec4(_379, _386, _393, _400), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_379, _386, _393, _400), vec4(cbInstanceData._m0[_275 + 3u]));
}


