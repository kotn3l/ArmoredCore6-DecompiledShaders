#version 460
#extension GL_EXT_samplerless_texture_functions : require

out float gl_ClipDistance[2];

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_VA_Frame_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_VA_Frame_snp_0_Texture2D_4;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_3;
layout(location = 8) in vec4 TEXCOORD_4;
layout(location = 9) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec3 TEXCOORD_5;
layout(location = 6) out vec4 TEXCOORD_9;
layout(location = 7) out vec4 TEXCOORD_10;
layout(location = 8) out vec3 TEXCOORD_11;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    TEXCOORD_9.w = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    TEXCOORD_10.z = 0.0;
    TEXCOORD_10.w = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _220 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _222 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _223 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _233 = float(int(uvec2(textureSize(M_AMSN_VA_Frame_snp_0_Texture2D_4, int(0u))).y)) + (-1.0);
    float _916 = isnan(0.0) ? cbMtdParam._m0[3u].z : (isnan(cbMtdParam._m0[3u].z) ? 0.0 : max(cbMtdParam._m0[3u].z, 0.0));
    precise float _241 = (isnan(1.0) ? _916 : (isnan(_916) ? 1.0 : min(_916, 1.0))) * _233;
    precise float _242 = TEXCOORD_1.x * 255.0;
    precise float _244 = TEXCOORD_1.y * 255.0;
    precise float _245 = _244 * 256.0;
    precise float _247 = _242 + _245;
    precise float _248 = _247 + 0.5;
    float _250 = floor(_241);
    uint _251 = uint(int(_248));
    uint _252 = uint(int(_250));
    vec4 _253 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_3, ivec2(uvec2(_251, _252)), int(0u));
    float _255 = _253.x;
    float _256 = _253.y;
    float _257 = _253.z;
    precise float _265 = _250 + 1.0;
    uint _267 = uint(int(isnan(_233) ? _265 : (isnan(_265) ? _233 : min(_265, _233))));
    vec4 _268 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_3, ivec2(uvec2(_251, _267)), int(0u));
    float _273 = fract(_241);
    float _283 = (((_268.x - _255) * 2.0) * _273) + ((_255 * 2.0) + (-1.0));
    float _284 = (((_268.y - _256) * 2.0) * _273) + ((_256 * 2.0) + (-1.0));
    float _285 = (_273 * ((_268.z - _257) * 2.0)) + ((_257 * 2.0) + (-1.0));
    vec4 _286 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_4, ivec2(uvec2(_251, _252)), int(0u));
    float _288 = _286.x;
    float _289 = _286.y;
    float _290 = _286.z;
    vec4 _291 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_4, ivec2(uvec2(_251, _267)), int(0u));
    precise float _296 = _291.x - _288;
    precise float _297 = _291.y - _289;
    precise float _298 = _291.z - _290;
    precise float _299 = _273 * _296;
    precise float _300 = _273 * _297;
    precise float _301 = _273 * _298;
    precise float _302 = _288 + _299;
    precise float _303 = _289 + _300;
    precise float _304 = _290 + _301;
    uint _309 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _311 = texelFetch(g_InstanceIndexBuffer, int(_309));
    uint _312 = _311.x;
    precise float _313 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _316 = isnan(_313) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _313 : max(0.001000000047497451305389404296875, _313));
    precise float _318 = BLENDWEIGHT.x / _316;
    precise float _319 = BLENDWEIGHT.y / _316;
    precise float _320 = BLENDWEIGHT.z / _316;
    precise float _321 = BLENDWEIGHT.w / _316;
    uint _323 = _312 * 13u;
    uvec4 _328 = floatBitsToUint(cbInstanceData._m0[_323 + 4u]);
    uint _329 = _328.x;
    uint _331 = (_329 + uint(float(BLENDINDICES.x))) * 3u;
    uint _338 = _331 + 1u;
    uint _345 = _331 + 2u;
    precise float _352 = _318 * cbObjMatrix._m0[_331].x;
    precise float _353 = _318 * cbObjMatrix._m0[_338].x;
    precise float _354 = _318 * cbObjMatrix._m0[_345].x;
    precise float _355 = _318 * cbObjMatrix._m0[_331].y;
    precise float _356 = _318 * cbObjMatrix._m0[_338].y;
    precise float _357 = _318 * cbObjMatrix._m0[_345].y;
    precise float _358 = _318 * cbObjMatrix._m0[_331].z;
    precise float _359 = _318 * cbObjMatrix._m0[_338].z;
    precise float _360 = _318 * cbObjMatrix._m0[_345].z;
    precise float _361 = _318 * cbObjMatrix._m0[_331].w;
    precise float _362 = _318 * cbObjMatrix._m0[_338].w;
    precise float _363 = _318 * cbObjMatrix._m0[_345].w;
    uint _366 = (_329 + uint(float(BLENDINDICES.y))) * 3u;
    uint _373 = _366 + 1u;
    uint _380 = _366 + 2u;
    precise float _387 = _319 * cbObjMatrix._m0[_366].x;
    precise float _388 = _319 * cbObjMatrix._m0[_373].x;
    precise float _389 = _319 * cbObjMatrix._m0[_380].x;
    precise float _390 = _319 * cbObjMatrix._m0[_366].y;
    precise float _391 = _319 * cbObjMatrix._m0[_373].y;
    precise float _392 = _319 * cbObjMatrix._m0[_380].y;
    precise float _393 = _319 * cbObjMatrix._m0[_366].z;
    precise float _394 = _319 * cbObjMatrix._m0[_373].z;
    precise float _395 = _319 * cbObjMatrix._m0[_380].z;
    precise float _396 = _319 * cbObjMatrix._m0[_366].w;
    precise float _397 = _319 * cbObjMatrix._m0[_373].w;
    precise float _398 = _319 * cbObjMatrix._m0[_380].w;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    uint _413 = (_329 + uint(float(BLENDINDICES.z))) * 3u;
    uint _420 = _413 + 1u;
    uint _427 = _413 + 2u;
    precise float _434 = _320 * cbObjMatrix._m0[_413].x;
    precise float _435 = _320 * cbObjMatrix._m0[_420].x;
    precise float _436 = _320 * cbObjMatrix._m0[_427].x;
    precise float _437 = _320 * cbObjMatrix._m0[_413].y;
    precise float _438 = _320 * cbObjMatrix._m0[_420].y;
    precise float _439 = _320 * cbObjMatrix._m0[_427].y;
    precise float _440 = _320 * cbObjMatrix._m0[_413].z;
    precise float _441 = _320 * cbObjMatrix._m0[_420].z;
    precise float _442 = _320 * cbObjMatrix._m0[_427].z;
    precise float _443 = _320 * cbObjMatrix._m0[_413].w;
    precise float _444 = _320 * cbObjMatrix._m0[_420].w;
    precise float _445 = _320 * cbObjMatrix._m0[_427].w;
    precise float _446 = _399 + _434;
    precise float _447 = _400 + _435;
    precise float _448 = _401 + _436;
    precise float _449 = _402 + _437;
    precise float _450 = _403 + _438;
    precise float _451 = _404 + _439;
    precise float _452 = _405 + _440;
    precise float _453 = _406 + _441;
    precise float _454 = _407 + _442;
    precise float _455 = _408 + _443;
    precise float _456 = _409 + _444;
    precise float _457 = _410 + _445;
    uint _460 = (_329 + uint(float(BLENDINDICES.w))) * 3u;
    uint _467 = _460 + 1u;
    uint _474 = _460 + 2u;
    precise float _481 = _321 * cbObjMatrix._m0[_460].x;
    precise float _482 = _321 * cbObjMatrix._m0[_467].x;
    precise float _483 = _321 * cbObjMatrix._m0[_474].x;
    precise float _484 = _321 * cbObjMatrix._m0[_460].y;
    precise float _485 = _321 * cbObjMatrix._m0[_467].y;
    precise float _486 = _321 * cbObjMatrix._m0[_474].y;
    precise float _487 = _321 * cbObjMatrix._m0[_460].z;
    precise float _488 = _321 * cbObjMatrix._m0[_467].z;
    precise float _489 = _321 * cbObjMatrix._m0[_474].z;
    precise float _490 = _321 * cbObjMatrix._m0[_460].w;
    precise float _491 = _321 * cbObjMatrix._m0[_467].w;
    precise float _492 = _321 * cbObjMatrix._m0[_474].w;
    precise float _493 = _446 + _481;
    precise float _494 = _447 + _482;
    precise float _495 = _448 + _483;
    precise float _496 = _449 + _484;
    precise float _497 = _450 + _485;
    precise float _498 = _451 + _486;
    precise float _499 = _452 + _487;
    precise float _500 = _453 + _488;
    precise float _501 = _454 + _489;
    precise float _502 = _455 + _490;
    precise float _503 = _456 + _491;
    precise float _504 = _457 + _492;
    precise float _505 = POSITION.x * _493;
    precise float _506 = POSITION.y * _496;
    precise float _507 = _506 + _505;
    precise float _508 = POSITION.z * _499;
    precise float _509 = _508 + _507;
    precise float _510 = 1.0 * _502;
    precise float _511 = _510 + _509;
    precise float _512 = POSITION.x * _494;
    precise float _513 = POSITION.y * _497;
    precise float _514 = _513 + _512;
    precise float _515 = POSITION.z * _500;
    precise float _516 = _515 + _514;
    precise float _517 = 1.0 * _503;
    precise float _518 = _517 + _516;
    precise float _519 = POSITION.x * _495;
    precise float _520 = POSITION.y * _498;
    precise float _521 = _520 + _519;
    precise float _522 = POSITION.z * _501;
    precise float _523 = _522 + _521;
    precise float _524 = 1.0 * _504;
    precise float _525 = _524 + _523;
    precise float _526 = _302 + _511;
    precise float _527 = _303 + _518;
    precise float _528 = _304 + _525;
    float _937 = isnan(0.0) ? cbMtdParam._m0[3u].w : (isnan(cbMtdParam._m0[3u].w) ? 0.0 : max(cbMtdParam._m0[3u].w, 0.0));
    float _687 = _233 * (isnan(1.0) ? _937 : (isnan(_937) ? 1.0 : min(_937, 1.0)));
    float _692 = floor(_687);
    float _693 = _692 + 1.0;
    float _695 = fract(_687);
    uint _696 = uint(int((_242 + 0.5) + (TEXCOORD_1.y * 65280.0)));
    vec4 _698 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_4, ivec2(uvec2(_696, uint(int(_692)))), int(0u));
    float _700 = _698.x;
    float _701 = _698.y;
    float _702 = _698.z;
    vec4 _704 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_4, ivec2(uvec2(_696, uint(int(isnan(_233) ? _693 : (isnan(_693) ? _233 : min(_693, _233)))))), int(0u));
    float _725 = (((((cbPrevObjMatrix._m0[_366].w * _319) + (cbPrevObjMatrix._m0[_331].w * _318)) + (cbPrevObjMatrix._m0[_413].w * _320)) + (cbPrevObjMatrix._m0[_460].w * _321)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_366].z * _319) + (cbPrevObjMatrix._m0[_331].z * _318)) + (cbPrevObjMatrix._m0[_413].z * _320)) + (cbPrevObjMatrix._m0[_460].z * _321), fma(POSITION.y, (((cbPrevObjMatrix._m0[_366].y * _319) + (cbPrevObjMatrix._m0[_331].y * _318)) + (cbPrevObjMatrix._m0[_413].y * _320)) + (cbPrevObjMatrix._m0[_460].y * _321), ((((cbPrevObjMatrix._m0[_366].x * _319) + (cbPrevObjMatrix._m0[_331].x * _318)) + (cbPrevObjMatrix._m0[_413].x * _320)) + (cbPrevObjMatrix._m0[_460].x * _321)) * POSITION.x))) + _700;
    float _727 = (_725 - cbSceneParam._m0[28u].x) + ((_704.x - _700) * _695);
    float _732 = (((((cbPrevObjMatrix._m0[_373].w * _319) + (cbPrevObjMatrix._m0[_338].w * _318)) + (cbPrevObjMatrix._m0[_420].w * _320)) + (cbPrevObjMatrix._m0[_467].w * _321)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_373].z * _319) + (cbPrevObjMatrix._m0[_338].z * _318)) + (cbPrevObjMatrix._m0[_420].z * _320)) + (cbPrevObjMatrix._m0[_467].z * _321), fma(POSITION.y, (((cbPrevObjMatrix._m0[_373].y * _319) + (cbPrevObjMatrix._m0[_338].y * _318)) + (cbPrevObjMatrix._m0[_420].y * _320)) + (cbPrevObjMatrix._m0[_467].y * _321), ((((cbPrevObjMatrix._m0[_373].x * _319) + (cbPrevObjMatrix._m0[_338].x * _318)) + (cbPrevObjMatrix._m0[_420].x * _320)) + (cbPrevObjMatrix._m0[_467].x * _321)) * POSITION.x))) + _701;
    float _734 = (_732 - cbSceneParam._m0[28u].y) + ((_704.y - _701) * _695);
    float _739 = (((((cbPrevObjMatrix._m0[_380].w * _319) + (cbPrevObjMatrix._m0[_345].w * _318)) + (cbPrevObjMatrix._m0[_427].w * _320)) + (cbPrevObjMatrix._m0[_474].w * _321)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_380].z * _319) + (cbPrevObjMatrix._m0[_345].z * _318)) + (cbPrevObjMatrix._m0[_427].z * _320)) + (cbPrevObjMatrix._m0[_474].z * _321), fma(POSITION.y, (((cbPrevObjMatrix._m0[_380].y * _319) + (cbPrevObjMatrix._m0[_345].y * _318)) + (cbPrevObjMatrix._m0[_427].y * _320)) + (cbPrevObjMatrix._m0[_474].y * _321), ((((cbPrevObjMatrix._m0[_380].x * _319) + (cbPrevObjMatrix._m0[_345].x * _318)) + (cbPrevObjMatrix._m0[_427].x * _320)) + (cbPrevObjMatrix._m0[_474].x * _321)) * POSITION.x))) + _702;
    float _741 = (_739 - cbSceneParam._m0[28u].z) + ((_704.z - _702) * _695);
    precise float _801 = _526 - cbSceneParam._m0[3u].x;
    precise float _802 = _527 - cbSceneParam._m0[3u].y;
    precise float _803 = _528 - cbSceneParam._m0[3u].z;
    precise float _831 = _801 * cbSceneParam._m0[24u].x;
    precise float _832 = _802 * cbSceneParam._m0[24u].y;
    precise float _833 = _832 + _831;
    precise float _834 = _803 * cbSceneParam._m0[24u].z;
    precise float _835 = _834 + _833;
    precise float _836 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _837 = _836 + _835;
    precise float _838 = _801 * cbSceneParam._m0[25u].x;
    precise float _839 = _802 * cbSceneParam._m0[25u].y;
    precise float _840 = _839 + _838;
    precise float _841 = _803 * cbSceneParam._m0[25u].z;
    precise float _842 = _841 + _840;
    precise float _843 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _844 = _843 + _842;
    precise float _845 = _801 * cbSceneParam._m0[26u].x;
    precise float _846 = _802 * cbSceneParam._m0[26u].y;
    precise float _847 = _846 + _845;
    precise float _848 = _803 * cbSceneParam._m0[26u].z;
    precise float _849 = _848 + _847;
    precise float _850 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _851 = _850 + _849;
    precise float _852 = _801 * cbSceneParam._m0[27u].x;
    precise float _853 = _802 * cbSceneParam._m0[27u].y;
    precise float _854 = _853 + _852;
    precise float _855 = _803 * cbSceneParam._m0[27u].z;
    precise float _856 = _855 + _854;
    precise float _857 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _858 = _857 + _856;
    gl_Position.x = _837;
    gl_Position.y = _844;
    gl_Position.z = _851;
    gl_Position.w = _858;
    POSITION_1.x = _837;
    POSITION_1.y = _844;
    POSITION_1.z = _851;
    POSITION_1.w = _858;
    NORMAL_1.x = _283;
    NORMAL_1.y = _284;
    NORMAL_1.z = _285;
    NORMAL_1.w = float(_312);
    TANGENT_1.x = fma(_223, _499, fma(_222, _496, _493 * _220));
    TANGENT_1.y = fma(_223, _500, fma(_222, _497, _494 * _220));
    TANGENT_1.z = fma(_223, _501, fma(_222, _498, _495 * _220));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = COLOR_1.x;
    TEXCOORD_9.x = _837;
    TEXCOORD_9.y = _844;
    TEXCOORD_9.z = _851;
    TEXCOORD_9.w = _858;
    TEXCOORD_10.x = fma(_741, cbSceneParam._m0[29u].z, fma(_734, cbSceneParam._m0[29u].y, _727 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_10.y = fma(_741, cbSceneParam._m0[30u].z, fma(_734, cbSceneParam._m0[30u].y, _727 * cbSceneParam._m0[30u].x)) + cbSceneParam._m0[30u].w;
    TEXCOORD_10.z = fma(_741, cbSceneParam._m0[31u].z, fma(_734, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _727)) + cbSceneParam._m0[31u].w;
    TEXCOORD_10.w = fma(_741, cbSceneParam._m0[32u].z, fma(_734, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _727)) + cbSceneParam._m0[32u].w;
    TEXCOORD_11.x = _283;
    TEXCOORD_11.y = _284;
    TEXCOORD_11.z = _285;
    gl_ClipDistance[0u] = dot(vec4(_837, _844, _851, _858), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_837, _844, _851, _858), vec4(cbInstanceData._m0[_323 + 3u]));
}


