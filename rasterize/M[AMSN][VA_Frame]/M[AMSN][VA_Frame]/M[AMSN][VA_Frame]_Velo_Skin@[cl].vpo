#version 460
#extension GL_EXT_samplerless_texture_functions : require

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_VA_Frame_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_VA_Frame_snp_0_Texture2D_4;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_3;
layout(location = 8) in vec4 TEXCOORD_4;
layout(location = 9) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec3 TEXCOORD_5;
layout(location = 6) out vec4 TEXCOORD_9;
layout(location = 7) out vec4 TEXCOORD_10;
layout(location = 8) out vec3 TEXCOORD_11;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    TEXCOORD_9.w = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    TEXCOORD_10.z = 0.0;
    TEXCOORD_10.w = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    float _215 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _217 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _218 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _228 = float(int(uvec2(textureSize(M_AMSN_VA_Frame_snp_0_Texture2D_4, int(0u))).y)) + (-1.0);
    float _890 = isnan(0.0) ? cbMtdParam._m0[3u].z : (isnan(cbMtdParam._m0[3u].z) ? 0.0 : max(cbMtdParam._m0[3u].z, 0.0));
    precise float _236 = (isnan(1.0) ? _890 : (isnan(_890) ? 1.0 : min(_890, 1.0))) * _228;
    precise float _237 = TEXCOORD_1.x * 255.0;
    precise float _239 = TEXCOORD_1.y * 255.0;
    precise float _240 = _239 * 256.0;
    precise float _242 = _237 + _240;
    precise float _243 = _242 + 0.5;
    float _245 = floor(_236);
    uint _246 = uint(int(_243));
    uint _247 = uint(int(_245));
    vec4 _248 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_3, ivec2(uvec2(_246, _247)), int(0u));
    float _250 = _248.x;
    float _251 = _248.y;
    float _252 = _248.z;
    precise float _260 = _245 + 1.0;
    uint _262 = uint(int(isnan(_228) ? _260 : (isnan(_260) ? _228 : min(_260, _228))));
    vec4 _263 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_3, ivec2(uvec2(_246, _262)), int(0u));
    float _268 = fract(_236);
    float _278 = (((_263.x - _250) * 2.0) * _268) + ((_250 * 2.0) + (-1.0));
    float _279 = (((_263.y - _251) * 2.0) * _268) + ((_251 * 2.0) + (-1.0));
    float _280 = (_268 * ((_263.z - _252) * 2.0)) + ((_252 * 2.0) + (-1.0));
    vec4 _281 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_4, ivec2(uvec2(_246, _247)), int(0u));
    float _283 = _281.x;
    float _284 = _281.y;
    float _285 = _281.z;
    vec4 _286 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_4, ivec2(uvec2(_246, _262)), int(0u));
    precise float _291 = _286.x - _283;
    precise float _292 = _286.y - _284;
    precise float _293 = _286.z - _285;
    precise float _294 = _268 * _291;
    precise float _295 = _268 * _292;
    precise float _296 = _268 * _293;
    precise float _297 = _283 + _294;
    precise float _298 = _284 + _295;
    precise float _299 = _285 + _296;
    uint _304 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _306 = texelFetch(g_InstanceIndexBuffer, int(_304));
    uint _307 = _306.x;
    precise float _308 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _311 = isnan(_308) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _308 : max(0.001000000047497451305389404296875, _308));
    precise float _313 = BLENDWEIGHT.x / _311;
    precise float _314 = BLENDWEIGHT.y / _311;
    precise float _315 = BLENDWEIGHT.z / _311;
    precise float _316 = BLENDWEIGHT.w / _311;
    uvec4 _323 = floatBitsToUint(cbInstanceData._m0[(_307 * 13u) + 4u]);
    uint _324 = _323.x;
    uint _326 = (_324 + uint(float(BLENDINDICES.x))) * 3u;
    uint _333 = _326 + 1u;
    uint _340 = _326 + 2u;
    precise float _347 = _313 * cbObjMatrix._m0[_326].x;
    precise float _348 = _313 * cbObjMatrix._m0[_333].x;
    precise float _349 = _313 * cbObjMatrix._m0[_340].x;
    precise float _350 = _313 * cbObjMatrix._m0[_326].y;
    precise float _351 = _313 * cbObjMatrix._m0[_333].y;
    precise float _352 = _313 * cbObjMatrix._m0[_340].y;
    precise float _353 = _313 * cbObjMatrix._m0[_326].z;
    precise float _354 = _313 * cbObjMatrix._m0[_333].z;
    precise float _355 = _313 * cbObjMatrix._m0[_340].z;
    precise float _356 = _313 * cbObjMatrix._m0[_326].w;
    precise float _357 = _313 * cbObjMatrix._m0[_333].w;
    precise float _358 = _313 * cbObjMatrix._m0[_340].w;
    uint _361 = (_324 + uint(float(BLENDINDICES.y))) * 3u;
    uint _368 = _361 + 1u;
    uint _375 = _361 + 2u;
    precise float _382 = _314 * cbObjMatrix._m0[_361].x;
    precise float _383 = _314 * cbObjMatrix._m0[_368].x;
    precise float _384 = _314 * cbObjMatrix._m0[_375].x;
    precise float _385 = _314 * cbObjMatrix._m0[_361].y;
    precise float _386 = _314 * cbObjMatrix._m0[_368].y;
    precise float _387 = _314 * cbObjMatrix._m0[_375].y;
    precise float _388 = _314 * cbObjMatrix._m0[_361].z;
    precise float _389 = _314 * cbObjMatrix._m0[_368].z;
    precise float _390 = _314 * cbObjMatrix._m0[_375].z;
    precise float _391 = _314 * cbObjMatrix._m0[_361].w;
    precise float _392 = _314 * cbObjMatrix._m0[_368].w;
    precise float _393 = _314 * cbObjMatrix._m0[_375].w;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    uint _408 = (_324 + uint(float(BLENDINDICES.z))) * 3u;
    uint _415 = _408 + 1u;
    uint _422 = _408 + 2u;
    precise float _429 = _315 * cbObjMatrix._m0[_408].x;
    precise float _430 = _315 * cbObjMatrix._m0[_415].x;
    precise float _431 = _315 * cbObjMatrix._m0[_422].x;
    precise float _432 = _315 * cbObjMatrix._m0[_408].y;
    precise float _433 = _315 * cbObjMatrix._m0[_415].y;
    precise float _434 = _315 * cbObjMatrix._m0[_422].y;
    precise float _435 = _315 * cbObjMatrix._m0[_408].z;
    precise float _436 = _315 * cbObjMatrix._m0[_415].z;
    precise float _437 = _315 * cbObjMatrix._m0[_422].z;
    precise float _438 = _315 * cbObjMatrix._m0[_408].w;
    precise float _439 = _315 * cbObjMatrix._m0[_415].w;
    precise float _440 = _315 * cbObjMatrix._m0[_422].w;
    precise float _441 = _394 + _429;
    precise float _442 = _395 + _430;
    precise float _443 = _396 + _431;
    precise float _444 = _397 + _432;
    precise float _445 = _398 + _433;
    precise float _446 = _399 + _434;
    precise float _447 = _400 + _435;
    precise float _448 = _401 + _436;
    precise float _449 = _402 + _437;
    precise float _450 = _403 + _438;
    precise float _451 = _404 + _439;
    precise float _452 = _405 + _440;
    uint _455 = (_324 + uint(float(BLENDINDICES.w))) * 3u;
    uint _462 = _455 + 1u;
    uint _469 = _455 + 2u;
    precise float _476 = _316 * cbObjMatrix._m0[_455].x;
    precise float _477 = _316 * cbObjMatrix._m0[_462].x;
    precise float _478 = _316 * cbObjMatrix._m0[_469].x;
    precise float _479 = _316 * cbObjMatrix._m0[_455].y;
    precise float _480 = _316 * cbObjMatrix._m0[_462].y;
    precise float _481 = _316 * cbObjMatrix._m0[_469].y;
    precise float _482 = _316 * cbObjMatrix._m0[_455].z;
    precise float _483 = _316 * cbObjMatrix._m0[_462].z;
    precise float _484 = _316 * cbObjMatrix._m0[_469].z;
    precise float _485 = _316 * cbObjMatrix._m0[_455].w;
    precise float _486 = _316 * cbObjMatrix._m0[_462].w;
    precise float _487 = _316 * cbObjMatrix._m0[_469].w;
    precise float _488 = _441 + _476;
    precise float _489 = _442 + _477;
    precise float _490 = _443 + _478;
    precise float _491 = _444 + _479;
    precise float _492 = _445 + _480;
    precise float _493 = _446 + _481;
    precise float _494 = _447 + _482;
    precise float _495 = _448 + _483;
    precise float _496 = _449 + _484;
    precise float _497 = _450 + _485;
    precise float _498 = _451 + _486;
    precise float _499 = _452 + _487;
    precise float _500 = POSITION.x * _488;
    precise float _501 = POSITION.y * _491;
    precise float _502 = _501 + _500;
    precise float _503 = POSITION.z * _494;
    precise float _504 = _503 + _502;
    precise float _505 = 1.0 * _497;
    precise float _506 = _505 + _504;
    precise float _507 = POSITION.x * _489;
    precise float _508 = POSITION.y * _492;
    precise float _509 = _508 + _507;
    precise float _510 = POSITION.z * _495;
    precise float _511 = _510 + _509;
    precise float _512 = 1.0 * _498;
    precise float _513 = _512 + _511;
    precise float _514 = POSITION.x * _490;
    precise float _515 = POSITION.y * _493;
    precise float _516 = _515 + _514;
    precise float _517 = POSITION.z * _496;
    precise float _518 = _517 + _516;
    precise float _519 = 1.0 * _499;
    precise float _520 = _519 + _518;
    precise float _521 = _297 + _506;
    precise float _522 = _298 + _513;
    precise float _523 = _299 + _520;
    float _911 = isnan(0.0) ? cbMtdParam._m0[3u].w : (isnan(cbMtdParam._m0[3u].w) ? 0.0 : max(cbMtdParam._m0[3u].w, 0.0));
    float _682 = _228 * (isnan(1.0) ? _911 : (isnan(_911) ? 1.0 : min(_911, 1.0)));
    float _687 = floor(_682);
    float _688 = _687 + 1.0;
    float _690 = fract(_682);
    uint _691 = uint(int((_237 + 0.5) + (TEXCOORD_1.y * 65280.0)));
    vec4 _693 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_4, ivec2(uvec2(_691, uint(int(_687)))), int(0u));
    float _695 = _693.x;
    float _696 = _693.y;
    float _697 = _693.z;
    vec4 _699 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_4, ivec2(uvec2(_691, uint(int(isnan(_228) ? _688 : (isnan(_688) ? _228 : min(_688, _228)))))), int(0u));
    float _720 = (((((cbPrevObjMatrix._m0[_361].w * _314) + (cbPrevObjMatrix._m0[_326].w * _313)) + (cbPrevObjMatrix._m0[_408].w * _315)) + (cbPrevObjMatrix._m0[_455].w * _316)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_361].z * _314) + (cbPrevObjMatrix._m0[_326].z * _313)) + (cbPrevObjMatrix._m0[_408].z * _315)) + (cbPrevObjMatrix._m0[_455].z * _316), fma(POSITION.y, (((cbPrevObjMatrix._m0[_361].y * _314) + (cbPrevObjMatrix._m0[_326].y * _313)) + (cbPrevObjMatrix._m0[_408].y * _315)) + (cbPrevObjMatrix._m0[_455].y * _316), ((((cbPrevObjMatrix._m0[_361].x * _314) + (cbPrevObjMatrix._m0[_326].x * _313)) + (cbPrevObjMatrix._m0[_408].x * _315)) + (cbPrevObjMatrix._m0[_455].x * _316)) * POSITION.x))) + _695;
    float _722 = (_720 - cbSceneParam._m0[28u].x) + ((_699.x - _695) * _690);
    float _727 = (((((cbPrevObjMatrix._m0[_368].w * _314) + (cbPrevObjMatrix._m0[_333].w * _313)) + (cbPrevObjMatrix._m0[_415].w * _315)) + (cbPrevObjMatrix._m0[_462].w * _316)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_368].z * _314) + (cbPrevObjMatrix._m0[_333].z * _313)) + (cbPrevObjMatrix._m0[_415].z * _315)) + (cbPrevObjMatrix._m0[_462].z * _316), fma(POSITION.y, (((cbPrevObjMatrix._m0[_368].y * _314) + (cbPrevObjMatrix._m0[_333].y * _313)) + (cbPrevObjMatrix._m0[_415].y * _315)) + (cbPrevObjMatrix._m0[_462].y * _316), ((((cbPrevObjMatrix._m0[_368].x * _314) + (cbPrevObjMatrix._m0[_333].x * _313)) + (cbPrevObjMatrix._m0[_415].x * _315)) + (cbPrevObjMatrix._m0[_462].x * _316)) * POSITION.x))) + _696;
    float _729 = (_727 - cbSceneParam._m0[28u].y) + ((_699.y - _696) * _690);
    float _734 = (((((cbPrevObjMatrix._m0[_375].w * _314) + (cbPrevObjMatrix._m0[_340].w * _313)) + (cbPrevObjMatrix._m0[_422].w * _315)) + (cbPrevObjMatrix._m0[_469].w * _316)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_375].z * _314) + (cbPrevObjMatrix._m0[_340].z * _313)) + (cbPrevObjMatrix._m0[_422].z * _315)) + (cbPrevObjMatrix._m0[_469].z * _316), fma(POSITION.y, (((cbPrevObjMatrix._m0[_375].y * _314) + (cbPrevObjMatrix._m0[_340].y * _313)) + (cbPrevObjMatrix._m0[_422].y * _315)) + (cbPrevObjMatrix._m0[_469].y * _316), ((((cbPrevObjMatrix._m0[_375].x * _314) + (cbPrevObjMatrix._m0[_340].x * _313)) + (cbPrevObjMatrix._m0[_422].x * _315)) + (cbPrevObjMatrix._m0[_469].x * _316)) * POSITION.x))) + _697;
    float _736 = (_734 - cbSceneParam._m0[28u].z) + ((_699.z - _697) * _690);
    precise float _796 = _521 - cbSceneParam._m0[3u].x;
    precise float _797 = _522 - cbSceneParam._m0[3u].y;
    precise float _798 = _523 - cbSceneParam._m0[3u].z;
    precise float _826 = _796 * cbSceneParam._m0[24u].x;
    precise float _827 = _797 * cbSceneParam._m0[24u].y;
    precise float _828 = _827 + _826;
    precise float _829 = _798 * cbSceneParam._m0[24u].z;
    precise float _830 = _829 + _828;
    precise float _831 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _832 = _831 + _830;
    precise float _833 = _796 * cbSceneParam._m0[25u].x;
    precise float _834 = _797 * cbSceneParam._m0[25u].y;
    precise float _835 = _834 + _833;
    precise float _836 = _798 * cbSceneParam._m0[25u].z;
    precise float _837 = _836 + _835;
    precise float _838 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _839 = _838 + _837;
    precise float _840 = _796 * cbSceneParam._m0[26u].x;
    precise float _841 = _797 * cbSceneParam._m0[26u].y;
    precise float _842 = _841 + _840;
    precise float _843 = _798 * cbSceneParam._m0[26u].z;
    precise float _844 = _843 + _842;
    precise float _845 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _846 = _845 + _844;
    precise float _847 = _796 * cbSceneParam._m0[27u].x;
    precise float _848 = _797 * cbSceneParam._m0[27u].y;
    precise float _849 = _848 + _847;
    precise float _850 = _798 * cbSceneParam._m0[27u].z;
    precise float _851 = _850 + _849;
    precise float _852 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _853 = _852 + _851;
    gl_Position.x = _832;
    gl_Position.y = _839;
    gl_Position.z = _846;
    gl_Position.w = _853;
    POSITION_1.x = _832;
    POSITION_1.y = _839;
    POSITION_1.z = _846;
    POSITION_1.w = _853;
    NORMAL_1.x = _278;
    NORMAL_1.y = _279;
    NORMAL_1.z = _280;
    NORMAL_1.w = float(_307);
    TANGENT_1.x = fma(_218, _494, fma(_217, _491, _488 * _215));
    TANGENT_1.y = fma(_218, _495, fma(_217, _492, _489 * _215));
    TANGENT_1.z = fma(_218, _496, fma(_217, _493, _490 * _215));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = COLOR_1.x;
    TEXCOORD_9.x = _832;
    TEXCOORD_9.y = _839;
    TEXCOORD_9.z = _846;
    TEXCOORD_9.w = _853;
    TEXCOORD_10.x = fma(_736, cbSceneParam._m0[29u].z, fma(_729, cbSceneParam._m0[29u].y, _722 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_10.y = fma(_736, cbSceneParam._m0[30u].z, fma(_729, cbSceneParam._m0[30u].y, _722 * cbSceneParam._m0[30u].x)) + cbSceneParam._m0[30u].w;
    TEXCOORD_10.z = fma(_736, cbSceneParam._m0[31u].z, fma(_729, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _722)) + cbSceneParam._m0[31u].w;
    TEXCOORD_10.w = fma(_736, cbSceneParam._m0[32u].z, fma(_729, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _722)) + cbSceneParam._m0[32u].w;
    TEXCOORD_11.x = _278;
    TEXCOORD_11.y = _279;
    TEXCOORD_11.z = _280;
}


