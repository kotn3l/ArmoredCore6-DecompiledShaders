#version 460
#extension GL_EXT_samplerless_texture_functions : require

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_VA_Frame_snp_0_Texture2D_4;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_3;
layout(location = 8) in vec4 TEXCOORD_4;
layout(location = 9) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 COLOR;
layout(location = 2) out vec3 TEXCOORD_2;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    precise float _117 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _119 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _120 = _117 + 0.0;
    precise float _121 = _119 + 0.0;
    precise float _130 = float(int(uvec2(textureSize(M_AMSN_VA_Frame_snp_0_Texture2D_4, int(0u))).y)) + (-1.0);
    float _428 = isnan(0.0) ? cbMtdParam._m0[3u].z : (isnan(cbMtdParam._m0[3u].z) ? 0.0 : max(cbMtdParam._m0[3u].z, 0.0));
    precise float _139 = (isnan(1.0) ? _428 : (isnan(_428) ? 1.0 : min(_428, 1.0))) * _130;
    precise float _140 = TEXCOORD_1.x * 255.0;
    precise float _142 = TEXCOORD_1.y * 255.0;
    precise float _143 = _142 * 256.0;
    precise float _145 = _140 + _143;
    precise float _146 = _145 + 0.5;
    float _148 = floor(_139);
    precise float _149 = _148 + 1.0;
    float _151 = fract(_139);
    uint _152 = uint(int(_146));
    vec4 _154 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_4, ivec2(uvec2(_152, uint(int(_148)))), int(0u));
    float _156 = _154.x;
    float _157 = _154.y;
    float _158 = _154.z;
    vec4 _160 = texelFetch(M_AMSN_VA_Frame_snp_0_Texture2D_4, ivec2(uvec2(_152, uint(int(isnan(_130) ? _149 : (isnan(_149) ? _130 : min(_149, _130)))))), int(0u));
    precise float _165 = _160.x - _156;
    precise float _166 = _160.y - _157;
    precise float _167 = _160.z - _158;
    precise float _168 = _151 * _165;
    precise float _169 = _151 * _166;
    precise float _170 = _151 * _167;
    precise float _171 = _156 + _168;
    precise float _172 = _157 + _169;
    precise float _173 = _158 + _170;
    uint _178 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    precise float _182 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _185 = isnan(_182) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _182 : max(0.001000000047497451305389404296875, _182));
    precise float _187 = BLENDWEIGHT.x / _185;
    precise float _188 = BLENDWEIGHT.y / _185;
    precise float _189 = BLENDWEIGHT.z / _185;
    precise float _190 = BLENDWEIGHT.w / _185;
    uvec4 _198 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_178)).x * 13u) + 4u]);
    uint _199 = _198.x;
    uint _201 = (_199 + uint(float(BLENDINDICES.x))) * 3u;
    uint _208 = _201 + 1u;
    uint _215 = _201 + 2u;
    precise float _222 = _187 * cbObjMatrix._m0[_201].x;
    precise float _223 = _187 * cbObjMatrix._m0[_208].x;
    precise float _224 = _187 * cbObjMatrix._m0[_215].x;
    precise float _225 = _187 * cbObjMatrix._m0[_201].y;
    precise float _226 = _187 * cbObjMatrix._m0[_208].y;
    precise float _227 = _187 * cbObjMatrix._m0[_215].y;
    precise float _228 = _187 * cbObjMatrix._m0[_201].z;
    precise float _229 = _187 * cbObjMatrix._m0[_208].z;
    precise float _230 = _187 * cbObjMatrix._m0[_215].z;
    precise float _231 = _187 * cbObjMatrix._m0[_201].w;
    precise float _232 = _187 * cbObjMatrix._m0[_208].w;
    precise float _233 = _187 * cbObjMatrix._m0[_215].w;
    uint _236 = (_199 + uint(float(BLENDINDICES.y))) * 3u;
    uint _243 = _236 + 1u;
    uint _250 = _236 + 2u;
    precise float _257 = _188 * cbObjMatrix._m0[_236].x;
    precise float _258 = _188 * cbObjMatrix._m0[_243].x;
    precise float _259 = _188 * cbObjMatrix._m0[_250].x;
    precise float _260 = _188 * cbObjMatrix._m0[_236].y;
    precise float _261 = _188 * cbObjMatrix._m0[_243].y;
    precise float _262 = _188 * cbObjMatrix._m0[_250].y;
    precise float _263 = _188 * cbObjMatrix._m0[_236].z;
    precise float _264 = _188 * cbObjMatrix._m0[_243].z;
    precise float _265 = _188 * cbObjMatrix._m0[_250].z;
    precise float _266 = _188 * cbObjMatrix._m0[_236].w;
    precise float _267 = _188 * cbObjMatrix._m0[_243].w;
    precise float _268 = _188 * cbObjMatrix._m0[_250].w;
    precise float _269 = _222 + _257;
    precise float _270 = _223 + _258;
    precise float _271 = _224 + _259;
    precise float _272 = _225 + _260;
    precise float _273 = _226 + _261;
    precise float _274 = _227 + _262;
    precise float _275 = _228 + _263;
    precise float _276 = _229 + _264;
    precise float _277 = _230 + _265;
    precise float _278 = _231 + _266;
    precise float _279 = _232 + _267;
    precise float _280 = _233 + _268;
    uint _283 = (_199 + uint(float(BLENDINDICES.z))) * 3u;
    uint _290 = _283 + 1u;
    uint _297 = _283 + 2u;
    precise float _304 = _189 * cbObjMatrix._m0[_283].x;
    precise float _305 = _189 * cbObjMatrix._m0[_290].x;
    precise float _306 = _189 * cbObjMatrix._m0[_297].x;
    precise float _307 = _189 * cbObjMatrix._m0[_283].y;
    precise float _308 = _189 * cbObjMatrix._m0[_290].y;
    precise float _309 = _189 * cbObjMatrix._m0[_297].y;
    precise float _310 = _189 * cbObjMatrix._m0[_283].z;
    precise float _311 = _189 * cbObjMatrix._m0[_290].z;
    precise float _312 = _189 * cbObjMatrix._m0[_297].z;
    precise float _313 = _189 * cbObjMatrix._m0[_283].w;
    precise float _314 = _189 * cbObjMatrix._m0[_290].w;
    precise float _315 = _189 * cbObjMatrix._m0[_297].w;
    precise float _316 = _269 + _304;
    precise float _317 = _270 + _305;
    precise float _318 = _271 + _306;
    precise float _319 = _272 + _307;
    precise float _320 = _273 + _308;
    precise float _321 = _274 + _309;
    precise float _322 = _275 + _310;
    precise float _323 = _276 + _311;
    precise float _324 = _277 + _312;
    precise float _325 = _278 + _313;
    precise float _326 = _279 + _314;
    precise float _327 = _280 + _315;
    uint _330 = (_199 + uint(float(BLENDINDICES.w))) * 3u;
    uint _337 = _330 + 1u;
    uint _344 = _330 + 2u;
    precise float _351 = _190 * cbObjMatrix._m0[_330].x;
    precise float _352 = _190 * cbObjMatrix._m0[_337].x;
    precise float _353 = _190 * cbObjMatrix._m0[_344].x;
    precise float _354 = _190 * cbObjMatrix._m0[_330].y;
    precise float _355 = _190 * cbObjMatrix._m0[_337].y;
    precise float _356 = _190 * cbObjMatrix._m0[_344].y;
    precise float _357 = _190 * cbObjMatrix._m0[_330].z;
    precise float _358 = _190 * cbObjMatrix._m0[_337].z;
    precise float _359 = _190 * cbObjMatrix._m0[_344].z;
    precise float _360 = _190 * cbObjMatrix._m0[_330].w;
    precise float _361 = _190 * cbObjMatrix._m0[_337].w;
    precise float _362 = _190 * cbObjMatrix._m0[_344].w;
    precise float _363 = _316 + _351;
    precise float _364 = _317 + _352;
    precise float _365 = _318 + _353;
    precise float _366 = _319 + _354;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    precise float _371 = _324 + _359;
    precise float _372 = _325 + _360;
    precise float _373 = _326 + _361;
    precise float _374 = _327 + _362;
    precise float _375 = POSITION.x * _363;
    precise float _376 = POSITION.y * _366;
    precise float _377 = _376 + _375;
    precise float _378 = POSITION.z * _369;
    precise float _379 = _378 + _377;
    precise float _380 = 1.0 * _372;
    precise float _381 = _380 + _379;
    precise float _382 = POSITION.x * _364;
    precise float _383 = POSITION.y * _367;
    precise float _384 = _383 + _382;
    precise float _385 = POSITION.z * _370;
    precise float _386 = _385 + _384;
    precise float _387 = 1.0 * _373;
    precise float _388 = _387 + _386;
    precise float _389 = POSITION.x * _365;
    precise float _390 = POSITION.y * _368;
    precise float _391 = _390 + _389;
    precise float _392 = POSITION.z * _371;
    precise float _393 = _392 + _391;
    precise float _394 = 1.0 * _374;
    precise float _395 = _394 + _393;
    precise float _396 = _171 + _381;
    precise float _397 = _172 + _388;
    precise float _398 = _173 + _395;
    precise float _399 = _120 * 2.0;
    precise float _401 = _121 * 2.0;
    precise float _402 = _399 + (-1.0);
    precise float _403 = 1.0 - _401;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    gl_Position.x = _402;
    gl_Position.y = _403;
    gl_Position.z = 0.0;
    gl_Position.w = 1.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_2.x = _396;
    TEXCOORD_2.y = _397;
    TEXCOORD_2.z = _398;
}


