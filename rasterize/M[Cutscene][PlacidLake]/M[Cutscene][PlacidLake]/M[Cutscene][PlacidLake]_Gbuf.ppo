#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_PlacidLake_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _132 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _133 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _134 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _139 = inversesqrt(dot(vec3(_132, _133, _134), vec3(_132, _133, _134)));
    float _146 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _153 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _201 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _211 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _201);
    float _212 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _201);
    float _213 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _201);
    float _235 = cbMtdParam._m0[14u].x - cbMtdParam._m0[14u].y;
    float _238 = (sqrt(((_211 * _211) + (_212 * _212)) + (_213 * _213)) - cbMtdParam._m0[14u].y) / (isnan(0.001000000047497451305389404296875) ? _235 : (isnan(_235) ? 0.001000000047497451305389404296875 : max(_235, 0.001000000047497451305389404296875)));
    float _239 = _238 / cbMtdParam._m0[15u].y;
    float _445 = isnan(0.0) ? _239 : (isnan(_239) ? 0.0 : max(_239, 0.0));
    float _244 = cbMtdParam._m0[15u].z * (1.0 - (isnan(1.0) ? _445 : (isnan(_445) ? 1.0 : min(_445, 1.0))));
    float _253 = (cbMtdParam._m0[13u].x + _238) * cbMtdParam._m0[13u].y;
    float _456 = isnan(0.0) ? _253 : (isnan(_253) ? 0.0 : max(_253, 0.0));
    float _257 = ((isnan(1.0) ? _456 : (isnan(_456) ? 1.0 : min(_456, 1.0))) * (cbMtdParam._m0[14u].z - cbMtdParam._m0[15u].x)) + cbMtdParam._m0[15u].x;
    vec4 _270 = texture(sampler2D(M_Cutscene_PlacidLake_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _278 = (_270.x * 2.0) + (-1.0);
    float _280 = (_270.y * 2.0) + (-1.0);
    float _281 = dot(vec2(_278, _280), vec2(_278, _280));
    float _467 = isnan(0.0) ? _281 : (isnan(_281) ? 0.0 : max(_281, 0.0));
    float _286 = sqrt(1.0 - (isnan(1.0) ? _467 : (isnan(_467) ? 1.0 : min(_467, 1.0))));
    float _292 = fma(_286, _146 * NORMAL.x, fma(_280, _153 * TANGENT.x, (_139 * _132) * _278));
    float _295 = fma(_286, _146 * NORMAL.y, fma(_280, _153 * TANGENT.y, (_139 * _133) * _278));
    float _298 = fma(_286, _146 * NORMAL.z, fma(_280, _153 * TANGENT.z, (_139 * _134) * _278));
    float _302 = inversesqrt(dot(vec3(_292, _295, _298), vec3(_292, _295, _298)));
    float _478 = isnan(0.0) ? _244 : (isnan(_244) ? 0.0 : max(_244, 0.0));
    float _489 = isnan(0.0) ? _257 : (isnan(_257) ? 0.0 : max(_257, 0.0));
    float _500 = isnan(0.0) ? cbMtdParam._m0[9u].x : (isnan(cbMtdParam._m0[9u].x) ? 0.0 : max(cbMtdParam._m0[9u].x, 0.0));
    float _511 = isnan(0.0) ? cbMtdParam._m0[9u].y : (isnan(cbMtdParam._m0[9u].y) ? 0.0 : max(cbMtdParam._m0[9u].y, 0.0));
    float _522 = isnan(0.0) ? cbMtdParam._m0[9u].z : (isnan(cbMtdParam._m0[9u].z) ? 0.0 : max(cbMtdParam._m0[9u].z, 0.0));
    uint _343 = uint(roundEven(NORMAL.w)) * 13u;
    uint _345 = (_343 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _351 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _500 : (isnan(_500) ? 1.0 : min(_500, 1.0)))) * cbInstanceData._m0[_345].x;
    float _352 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _511 : (isnan(_511) ? 1.0 : min(_511, 1.0)))) * cbInstanceData._m0[_345].y;
    float _353 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _522 : (isnan(_522) ? 1.0 : min(_522, 1.0)))) * cbInstanceData._m0[_345].z;
    float _533 = isnan(0.0) ? _351 : (isnan(_351) ? 0.0 : max(_351, 0.0));
    float _544 = isnan(0.0) ? _352 : (isnan(_352) ? 0.0 : max(_352, 0.0));
    float _555 = isnan(0.0) ? _353 : (isnan(_353) ? 0.0 : max(_353, 0.0));
    vec4 _364 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _366 = _364.x;
    float _388 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _366)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _366))) - ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z)))) * cbMtdParam._m0[11u].x;
    float _566 = isnan(0.0) ? _388 : (isnan(_388) ? 0.0 : max(_388, 0.0));
    float _390 = (cbInstanceData._m0[_343 + 6u].w * (isnan(1.0) ? _478 : (isnan(_478) ? 1.0 : min(_478, 1.0)))) * (isnan(1.0) ? _566 : (isnan(_566) ? 1.0 : min(_566, 1.0)));
    bool _414 = cbMtdParam._m0[1u].z != 0.0;
    float _415 = _414 ? _390 : 0.0;
    SV_Target.x = ((_292 * 0.5) * _302) + 0.500488758087158203125;
    SV_Target.y = ((_295 * 0.5) * _302) + 0.500488758087158203125;
    SV_Target.z = ((_298 * 0.5) * _302) + 0.500488758087158203125;
    SV_Target.w = _415;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _489 : (isnan(_489) ? 1.0 : min(_489, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _414 ? _390 : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _533 : (isnan(_533) ? 1.0 : min(_533, 1.0));
    SV_Target_2.y = isnan(1.0) ? _544 : (isnan(_544) ? 1.0 : min(_544, 1.0));
    SV_Target_2.z = isnan(1.0) ? _555 : (isnan(_555) ? 1.0 : min(_555, 1.0));
    SV_Target_2.w = _414 ? _390 : (float(floatBitsToUint(cbInstanceData._m0[_343 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _415;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _415;
}


