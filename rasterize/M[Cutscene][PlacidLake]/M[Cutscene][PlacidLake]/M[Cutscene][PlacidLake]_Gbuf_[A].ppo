#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_PlacidLake_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    bool _445;
    float _80;
    float _301;
    float _304;
    float _307;
    float _311;
    float _313;
    uint _359;
    uint _360;
    float _370;
    float _371;
    float _372;
    float _406;
    vec4 _410;
    float _412;
    float _413;
    bool _424;
    for (;;)
    {
        _80 = TEXCOORD.z;
        SV_Target.x = 0.0;
        SV_Target.y = 0.0;
        SV_Target.z = 0.0;
        SV_Target.w = 0.0;
        SV_Target_1.x = 0.0;
        SV_Target_1.y = 0.0;
        SV_Target_1.z = 0.0;
        SV_Target_1.w = 0.0;
        SV_Target_2.x = 0.0;
        SV_Target_2.y = 0.0;
        SV_Target_2.z = 0.0;
        SV_Target_2.w = 0.0;
        SV_Target_3.x = 0.0;
        SV_Target_3.y = 0.0;
        SV_Target_3.z = 0.0;
        SV_Target_3.w = 0.0;
        SV_Target_4.x = 0.0;
        SV_Target_4.y = 0.0;
        SV_Target_4.z = 0.0;
        SV_Target_4.w = 0.0;
        float _141 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
        float _142 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
        float _143 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
        float _148 = inversesqrt(dot(vec3(_141, _142, _143), vec3(_141, _142, _143)));
        float _155 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
        float _162 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
        float _210 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
        float _220 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _210);
        float _221 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _210);
        float _222 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _210);
        float _244 = cbMtdParam._m0[14u].x - cbMtdParam._m0[14u].y;
        float _247 = (sqrt(((_220 * _220) + (_221 * _221)) + (_222 * _222)) - cbMtdParam._m0[14u].y) / (isnan(0.001000000047497451305389404296875) ? _244 : (isnan(_244) ? 0.001000000047497451305389404296875 : max(_244, 0.001000000047497451305389404296875)));
        float _248 = _247 / cbMtdParam._m0[15u].y;
        float _523 = isnan(0.0) ? _248 : (isnan(_248) ? 0.0 : max(_248, 0.0));
        float _253 = cbMtdParam._m0[15u].z * (1.0 - (isnan(1.0) ? _523 : (isnan(_523) ? 1.0 : min(_523, 1.0))));
        float _262 = (cbMtdParam._m0[13u].x + _247) * cbMtdParam._m0[13u].y;
        float _534 = isnan(0.0) ? _262 : (isnan(_262) ? 0.0 : max(_262, 0.0));
        float _266 = ((isnan(1.0) ? _534 : (isnan(_534) ? 1.0 : min(_534, 1.0))) * (cbMtdParam._m0[14u].z - cbMtdParam._m0[15u].x)) + cbMtdParam._m0[15u].x;
        vec4 _279 = texture(sampler2D(M_Cutscene_PlacidLake_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
        float _287 = (_279.x * 2.0) + (-1.0);
        float _289 = (_279.y * 2.0) + (-1.0);
        float _290 = dot(vec2(_287, _289), vec2(_287, _289));
        float _545 = isnan(0.0) ? _290 : (isnan(_290) ? 0.0 : max(_290, 0.0));
        float _295 = sqrt(1.0 - (isnan(1.0) ? _545 : (isnan(_545) ? 1.0 : min(_545, 1.0))));
        _301 = fma(_295, _155 * NORMAL.x, fma(_289, _162 * TANGENT.x, (_148 * _141) * _287));
        _304 = fma(_295, _155 * NORMAL.y, fma(_289, _162 * TANGENT.y, (_148 * _142) * _287));
        _307 = fma(_295, _155 * NORMAL.z, fma(_289, _162 * TANGENT.z, (_148 * _143) * _287));
        _311 = inversesqrt(dot(vec3(_301, _304, _307), vec3(_301, _304, _307)));
        float _556 = isnan(0.0) ? _253 : (isnan(_253) ? 0.0 : max(_253, 0.0));
        float _567 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
        _313 = isnan(1.0) ? _567 : (isnan(_567) ? 1.0 : min(_567, 1.0));
        float _578 = isnan(0.0) ? cbMtdParam._m0[9u].x : (isnan(cbMtdParam._m0[9u].x) ? 0.0 : max(cbMtdParam._m0[9u].x, 0.0));
        float _589 = isnan(0.0) ? cbMtdParam._m0[9u].y : (isnan(cbMtdParam._m0[9u].y) ? 0.0 : max(cbMtdParam._m0[9u].y, 0.0));
        float _600 = isnan(0.0) ? cbMtdParam._m0[9u].z : (isnan(cbMtdParam._m0[9u].z) ? 0.0 : max(cbMtdParam._m0[9u].z, 0.0));
        _359 = uint(roundEven(NORMAL.w)) * 13u;
        _360 = _359 + 9u;
        uint _361 = _360 + uint(cbMatDynParam._m0[0u].w);
        float _367 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _578 : (isnan(_578) ? 1.0 : min(_578, 1.0)))) * cbInstanceData._m0[_361].x;
        float _368 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _589 : (isnan(_589) ? 1.0 : min(_589, 1.0)))) * cbInstanceData._m0[_361].y;
        float _369 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _600 : (isnan(_600) ? 1.0 : min(_600, 1.0)))) * cbInstanceData._m0[_361].z;
        float _611 = isnan(0.0) ? _367 : (isnan(_367) ? 0.0 : max(_367, 0.0));
        _370 = isnan(1.0) ? _611 : (isnan(_611) ? 1.0 : min(_611, 1.0));
        float _622 = isnan(0.0) ? _368 : (isnan(_368) ? 0.0 : max(_368, 0.0));
        _371 = isnan(1.0) ? _622 : (isnan(_622) ? 1.0 : min(_622, 1.0));
        float _633 = isnan(0.0) ? _369 : (isnan(_369) ? 0.0 : max(_369, 0.0));
        _372 = isnan(1.0) ? _633 : (isnan(_633) ? 1.0 : min(_633, 1.0));
        vec4 _380 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
        float _382 = _380.x;
        float _404 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _382)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _382))) - ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z)))) * cbMtdParam._m0[11u].x;
        float _644 = isnan(0.0) ? _404 : (isnan(_404) ? 0.0 : max(_404, 0.0));
        _406 = (cbInstanceData._m0[_359 + 6u].w * (isnan(1.0) ? _556 : (isnan(_556) ? 1.0 : min(_556, 1.0)))) * (isnan(1.0) ? _644 : (isnan(_644) ? 1.0 : min(_644, 1.0)));
        float _407 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125)).w + (-0.5);
        _410 = cbMtdParam._m0[1u];
        _412 = _410.y * _407;
        _413 = _407 * 0.999000012874603271484375;
        _424 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_424)
        {
            if ((cbInstanceData._m0[_359 + 7u].x + _413) < 0.5)
            {
                _445 = true;
                break;
            }
        }
        uint _437 = _360 + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_437].w < 1.0) && ((cbInstanceData._m0[_437].w + _413) < 0.5))
        {
            _445 = true;
            break;
        }
        if ((_412 + 1.0) < _410.x)
        {
            _445 = true;
            break;
        }
        _445 = false;
        break;
    }
    if (_445)
    {
        discard_state = true;
    }
    bool _475 = cbMtdParam._m0[1u].z != 0.0;
    float _476 = _475 ? _406 : 0.0;
    SV_Target.x = ((_301 * 0.5) * _311) + 0.500488758087158203125;
    SV_Target.y = ((_304 * 0.5) * _311) + 0.500488758087158203125;
    SV_Target.z = ((_307 * 0.5) * _311) + 0.500488758087158203125;
    SV_Target.w = _476;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = _313;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _475 ? _406 : _80;
    SV_Target_2.x = _370;
    SV_Target_2.y = _371;
    SV_Target_2.z = _372;
    SV_Target_2.w = _475 ? _406 : (float(floatBitsToUint(cbInstanceData._m0[_359 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _476;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _476;
    discard_exit();
}


