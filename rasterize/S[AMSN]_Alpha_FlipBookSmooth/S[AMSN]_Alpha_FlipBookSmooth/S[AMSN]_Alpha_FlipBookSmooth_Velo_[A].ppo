#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D S_AMSN_Alpha_FlipBookSmooth_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_6;
layout(location = 6) in vec4 TEXCOORD_7;
layout(location = 7) in vec3 TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    uint _120 = uint(int(floor(cbMtdParam._m0[10u].z)));
    uint _122 = _120 + 1u;
    uint _123 = uint(int(cbMtdParam._m0[11u].x * cbMtdParam._m0[10u].w));
    float _126 = float(int(_120 - _123 * (_120 / _123)));
    float _130 = float(int(_122 - _123 * (_122 / _123)));
    float _134 = 1.0 / cbMtdParam._m0[10u].w;
    float _136 = 1.0 / cbMtdParam._m0[11u].x;
    float _137 = fract(TEXCOORD_1.x);
    float _138 = fract(TEXCOORD_1.y);
    vec4 _167 = texture(sampler2D(S_AMSN_Alpha_FlipBookSmooth_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_137 + (_126 - cbMtdParam._m0[10u].w * trunc(_126 / cbMtdParam._m0[10u].w))) * _134) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_138 + floor(_126 / cbMtdParam._m0[10u].w)) * _136) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _169 = _167.w;
    float _175 = gl_FragCoord.x * 0.125;
    float _177 = gl_FragCoord.y * 0.125;
    float _187 = float(((cbMtdParam._m0[9u].w * TEXCOORD_1.z) * (((texture(sampler2D(S_AMSN_Alpha_FlipBookSmooth_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_137 + (_130 - cbMtdParam._m0[10u].w * trunc(_130 / cbMtdParam._m0[10u].w))) * _134) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_138 + floor(_130 / cbMtdParam._m0[10u].w)) * _136) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).w - _169) * fract(cbMtdParam._m0[10u].z)) + _169)) >= ((texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_175, _177)).w * 0.9900000095367431640625) + 0.00999999977648258209228515625));
    uint _189 = uint(roundEven(NORMAL.w));
    float _203 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? TEXCOORD_6.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * TEXCOORD_6.z));
    float _244 = fma(TEXCOORD_6.w, cbSceneParam._m0[11u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[11u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * TEXCOORD_6.x)));
    float _254 = cbSceneParam._m0[71u].x - (fma(TEXCOORD_6.w, cbSceneParam._m0[8u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[8u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * TEXCOORD_6.x))) / _244);
    float _255 = cbSceneParam._m0[71u].y - (fma(TEXCOORD_6.w, cbSceneParam._m0[9u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[9u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * TEXCOORD_6.x))) / _244);
    float _256 = cbSceneParam._m0[71u].z - (fma(TEXCOORD_6.w, cbSceneParam._m0[10u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[10u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * TEXCOORD_6.x))) / _244);
    vec4 _257 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_175, _177));
    float _259 = _257.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _295 = sqrt(((_254 * _254) + (_255 * _255)) + (_256 * _256));
        float _302 = (cbMatDynParam._m0[5u].x * _295) + cbMatDynParam._m0[5u].y;
        float _388 = isnan(0.0) ? _302 : (isnan(_302) ? 0.0 : max(_302, 0.0));
        float _303 = isnan(1.0) ? _388 : (isnan(_388) ? 1.0 : min(_388, 1.0));
        float _307 = (cbMatDynParam._m0[5u].z * _295) + cbMatDynParam._m0[5u].w;
        float _399 = isnan(0.0) ? _307 : (isnan(_307) ? 0.0 : max(_307, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _399 : (isnan(_399) ? 1.0 : min(_399, 1.0))) - _303)) + _303) < ((_259 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _338;
    float _270;
    float _271;
    vec4 _275;
    float _277;
    float _278;
    bool _289;
    for (;;)
    {
        _270 = (TEXCOORD_6.x / TEXCOORD_6.w) - (TEXCOORD_7.x / TEXCOORD_7.w);
        _271 = (TEXCOORD_6.y / TEXCOORD_6.w) - (TEXCOORD_7.y / TEXCOORD_7.w);
        float _272 = _259 + (-0.5);
        _275 = cbMtdParam._m0[1u];
        _277 = _275.y * _272;
        _278 = _272 * 0.999000012874603271484375;
        _289 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_289)
        {
            if ((cbInstanceData._m0[(_189 * 13u) + 7u].x + _278) < 0.5)
            {
                _338 = true;
                break;
            }
        }
        if ((cbInstanceData._m0[6u].w < 1.0) && ((cbInstanceData._m0[6u].w + _278) < 0.5))
        {
            _338 = true;
            break;
        }
        if ((_277 + _187) < _275.x)
        {
            _338 = true;
            break;
        }
        _338 = false;
        break;
    }
    if (_338)
    {
        discard_state = true;
    }
    SV_Target.x = ((cbModelParam._m0[0u].x * _270) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.y = ((cbModelParam._m0[0u].y * _271) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.z = _203 / (_203 + 10.0);
    SV_Target.w = 1.0;
    discard_exit();
}


