#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D S_AMSN_Alpha_FlipBookSmooth_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 5) in vec2 TEXCOORD_5;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    uint _104 = uint(int(floor(cbMtdParam._m0[10u].z)));
    uint _106 = _104 + 1u;
    uint _107 = uint(int(cbMtdParam._m0[11u].x * cbMtdParam._m0[10u].w));
    float _110 = float(int(_104 - _107 * (_104 / _107)));
    float _114 = float(int(_106 - _107 * (_106 / _107)));
    float _118 = 1.0 / cbMtdParam._m0[10u].w;
    float _120 = 1.0 / cbMtdParam._m0[11u].x;
    float _121 = fract(TEXCOORD_1.x);
    float _122 = fract(TEXCOORD_1.y);
    vec4 _151 = texture(sampler2D(S_AMSN_Alpha_FlipBookSmooth_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_121 + (_110 - cbMtdParam._m0[10u].w * trunc(_110 / cbMtdParam._m0[10u].w))) * _118) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_122 + floor(_110 / cbMtdParam._m0[10u].w)) * _120) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _153 = _151.w;
    float _159 = gl_FragCoord.x * 0.125;
    float _161 = gl_FragCoord.y * 0.125;
    float _171 = float(((cbMtdParam._m0[9u].w * TEXCOORD_1.z) * (((texture(sampler2D(S_AMSN_Alpha_FlipBookSmooth_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_121 + (_114 - cbMtdParam._m0[10u].w * trunc(_114 / cbMtdParam._m0[10u].w))) * _118) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_122 + floor(_114 / cbMtdParam._m0[10u].w)) * _120) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).w - _153) * fract(cbMtdParam._m0[10u].z)) + _153)) >= ((texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_159, _161)).w * 0.9900000095367431640625) + 0.00999999977648258209228515625));
    uint _173 = uint(roundEven(NORMAL.w));
    float _214 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _224 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _214);
    float _225 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _214);
    float _226 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _214);
    vec4 _227 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_159, _161));
    float _229 = _227.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _262 = sqrt(((_224 * _224) + (_225 * _225)) + (_226 * _226));
        float _269 = (cbMatDynParam._m0[5u].x * _262) + cbMatDynParam._m0[5u].y;
        float _337 = isnan(0.0) ? _269 : (isnan(_269) ? 0.0 : max(_269, 0.0));
        float _270 = isnan(1.0) ? _337 : (isnan(_337) ? 1.0 : min(_337, 1.0));
        float _274 = (cbMatDynParam._m0[5u].z * _262) + cbMatDynParam._m0[5u].w;
        float _348 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _348 : (isnan(_348) ? 1.0 : min(_348, 1.0))) - _270)) + _270) < ((_229 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _309;
    vec4 _240;
    float _242;
    float _243;
    bool _254;
    uint _255;
    for (;;)
    {
        float _237 = _229 + (-0.5);
        _240 = cbMtdParam._m0[1u];
        _242 = _240.y * _237;
        _243 = _237 * 0.999000012874603271484375;
        _254 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        _255 = _173 * 13u;
        if (_254)
        {
            if ((cbInstanceData._m0[_255 + 7u].x + _243) < 0.5)
            {
                _309 = true;
                break;
            }
        }
        uint _298 = (_255 + 9u) + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_298].w < 1.0) && ((cbInstanceData._m0[_298].w + _243) < 0.5))
        {
            _309 = true;
            break;
        }
        if ((_242 + _171) < _240.x)
        {
            _309 = true;
            break;
        }
        _309 = false;
        break;
    }
    if (_309)
    {
        discard_state = true;
    }
    discard_exit();
}


