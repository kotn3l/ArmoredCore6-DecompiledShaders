#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D S_AMSN_Alpha_FlipBookSmooth_snp_0_Texture2D_3;
layout(set = 0, binding = 1) uniform texture2D S_AMSN_Alpha_FlipBookSmooth_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D S_AMSN_Alpha_FlipBookSmooth_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _138 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _139 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _140 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _146 = inversesqrt(dot(vec3(_138, _139, _140), vec3(_138, _139, _140)));
    float _147 = _146 * _138;
    float _148 = _146 * _139;
    float _149 = _146 * _140;
    float _153 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _154 = _153 * NORMAL.x;
    float _155 = _153 * NORMAL.y;
    float _156 = _153 * NORMAL.z;
    float _160 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _161 = _160 * TANGENT.x;
    float _162 = _160 * TANGENT.y;
    float _163 = _160 * TANGENT.z;
    float _168;
    float _169;
    float _170;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _168 = (-0.0) - _154;
        _169 = (-0.0) - _155;
        _170 = (-0.0) - _156;
    }
    else
    {
        _168 = _154;
        _169 = _155;
        _170 = _156;
    }
    uint _190 = uint(int(floor(cbMtdParam._m0[10u].z)));
    float _191 = fract(cbMtdParam._m0[10u].z);
    uint _192 = _190 + 1u;
    uint _193 = uint(int(cbMtdParam._m0[11u].x * cbMtdParam._m0[10u].w));
    float _196 = float(int(_190 - _193 * (_190 / _193)));
    float _200 = float(int(_192 - _193 * (_192 / _193)));
    float _204 = 1.0 / cbMtdParam._m0[10u].w;
    float _206 = 1.0 / cbMtdParam._m0[11u].x;
    float _207 = fract(TEXCOORD_1.x);
    float _208 = fract(TEXCOORD_1.y);
    float _210 = (_207 + (_196 - cbMtdParam._m0[10u].w * trunc(_196 / cbMtdParam._m0[10u].w))) * _204;
    float _212 = (_208 + floor(_196 / cbMtdParam._m0[10u].w)) * _206;
    float _214 = (_207 + (_200 - cbMtdParam._m0[10u].w * trunc(_200 / cbMtdParam._m0[10u].w))) * _204;
    float _216 = (_208 + floor(_200 / cbMtdParam._m0[10u].w)) * _206;
    vec4 _229 = texture(sampler2D(S_AMSN_Alpha_FlipBookSmooth_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _214) + cbTextureTilingScale._m0[0u].z, (_216 * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _240 = texture(sampler2D(S_AMSN_Alpha_FlipBookSmooth_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _210) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _212) + cbTextureTilingScale._m0[0u].w));
    float _242 = _240.x;
    float _243 = _240.y;
    float _244 = _240.z;
    float _245 = _240.w;
    float _258 = (((_229.x - _242) * _191) + _242) * cbMtdParam._m0[9u].x;
    float _259 = (((_229.y - _243) * _191) + _243) * cbMtdParam._m0[9u].y;
    float _260 = (((_229.z - _244) * _191) + _244) * cbMtdParam._m0[9u].z;
    vec4 _270 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _272 = _270.x;
    float _295 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _272)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _272))) - POSITION_1.w) / cbMtdParam._m0[10u].y;
    float _536 = isnan(0.0) ? _295 : (isnan(_295) ? 0.0 : max(_295, 0.0));
    float _299 = ((cbMtdParam._m0[9u].w * TEXCOORD_1.z) * (((_229.w - _245) * _191) + _245)) * (isnan(1.0) ? _536 : (isnan(_536) ? 1.0 : min(_536, 1.0)));
    vec4 _321 = texture(sampler2D(S_AMSN_Alpha_FlipBookSmooth_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _210) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _212) + cbTextureTilingScale._m0[2u].w));
    float _323 = _321.x;
    float _327 = (_323 + cbMtdParam._m0[10u].x) + ((texture(sampler2D(S_AMSN_Alpha_FlipBookSmooth_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * _214) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _216) + cbTextureTilingScale._m0[2u].w)).x - _323) * _191);
    vec4 _339 = texture(sampler2D(S_AMSN_Alpha_FlipBookSmooth_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _214) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _216) + cbTextureTilingScale._m0[1u].w));
    float _346 = (_339.x * 2.0) + (-1.0);
    float _348 = (_339.y * 2.0) + (-1.0);
    float _352 = 1.0 - dot(vec2(_346, _348), vec2(_346, _348));
    float _547 = isnan(0.0) ? _352 : (isnan(_352) ? 0.0 : max(_352, 0.0));
    float _354 = sqrt(isnan(1.0) ? _547 : (isnan(_547) ? 1.0 : min(_547, 1.0)));
    float _357 = fma(_354, _168, fma(_348, _161, _346 * _147));
    float _360 = fma(_354, _169, fma(_348, _162, _346 * _148));
    float _363 = fma(_354, _170, fma(_348, _163, _346 * _149));
    float _367 = inversesqrt(dot(vec3(_357, _360, _363), vec3(_357, _360, _363)));
    vec4 _375 = texture(sampler2D(S_AMSN_Alpha_FlipBookSmooth_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _210) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _212) + cbTextureTilingScale._m0[1u].w));
    float _381 = (_375.x * 2.0) + (-1.0);
    float _382 = (_375.y * 2.0) + (-1.0);
    float _386 = 1.0 - dot(vec2(_381, _382), vec2(_381, _382));
    float _558 = isnan(0.0) ? _386 : (isnan(_386) ? 0.0 : max(_386, 0.0));
    float _388 = sqrt(isnan(1.0) ? _558 : (isnan(_558) ? 1.0 : min(_558, 1.0)));
    float _391 = fma(_388, _168, fma(_382, _161, _381 * _147));
    float _394 = fma(_388, _169, fma(_382, _162, _381 * _148));
    float _397 = fma(_388, _170, fma(_382, _163, _381 * _149));
    float _401 = inversesqrt(dot(vec3(_391, _394, _397), vec3(_391, _394, _397)));
    float _402 = _401 * _391;
    float _403 = _401 * _394;
    float _404 = _401 * _397;
    float _413 = (((_367 * _363) - _404) * _191) + _404;
    float _416 = (((((_367 * _357) - _402) * _191) + _402) * 2.0) + (-1.0);
    float _417 = (((((_367 * _360) - _403) * _191) + _403) * 2.0) + (-1.0);
    float _418 = dot(vec2(_416, _417), vec2(_416, _417));
    float _569 = isnan(0.0) ? _418 : (isnan(_418) ? 0.0 : max(_418, 0.0));
    float _423 = sqrt(1.0 - (isnan(1.0) ? _569 : (isnan(_569) ? 1.0 : min(_569, 1.0))));
    float _426 = fma(_423, _168, fma(_417, _161, _416 * _147));
    float _429 = fma(_423, _169, fma(_417, _162, _416 * _148));
    float _432 = fma(_423, _170, fma(_417, _163, _416 * _149));
    float _436 = inversesqrt(dot(vec3(_426, _429, _432), vec3(_426, _429, _432)));
    float _580 = isnan(0.0) ? _299 : (isnan(_299) ? 0.0 : max(_299, 0.0));
    float _437 = isnan(1.0) ? _580 : (isnan(_580) ? 1.0 : min(_580, 1.0));
    float _591 = isnan(0.0) ? _413 : (isnan(_413) ? 0.0 : max(_413, 0.0));
    float _602 = isnan(0.0) ? _258 : (isnan(_258) ? 0.0 : max(_258, 0.0));
    float _613 = isnan(0.0) ? _259 : (isnan(_259) ? 0.0 : max(_259, 0.0));
    float _624 = isnan(0.0) ? _260 : (isnan(_260) ? 0.0 : max(_260, 0.0));
    float _635 = isnan(0.0) ? _327 : (isnan(_327) ? 0.0 : max(_327, 0.0));
    uint _457 = uint(roundEven(NORMAL.w)) * 13u;
    uint _460 = (_457 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _466 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _602 : (isnan(_602) ? 1.0 : min(_602, 1.0)))) * cbInstanceData._m0[_460].x;
    float _467 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _613 : (isnan(_613) ? 1.0 : min(_613, 1.0)))) * cbInstanceData._m0[_460].y;
    float _468 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _624 : (isnan(_624) ? 1.0 : min(_624, 1.0)))) * cbInstanceData._m0[_460].z;
    float _646 = isnan(0.0) ? _466 : (isnan(_466) ? 0.0 : max(_466, 0.0));
    float _657 = isnan(0.0) ? _467 : (isnan(_467) ? 0.0 : max(_467, 0.0));
    float _668 = isnan(0.0) ? _468 : (isnan(_468) ? 0.0 : max(_468, 0.0));
    float _679 = isnan(0.0) ? _437 : (isnan(_437) ? 0.0 : max(_437, 0.0));
    float _481 = cbInstanceData._m0[_457 + 6u].w * (isnan(1.0) ? _679 : (isnan(_679) ? 1.0 : min(_679, 1.0)));
    float _506;
    float _507;
    float _508;
    float _509;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _506 = _481;
        _507 = _481;
        _508 = _481;
        _509 = _481;
    }
    else
    {
        _506 = cbMtdParam._m0[2u].w;
        _507 = 0.0;
        _508 = float(floatBitsToUint(cbInstanceData._m0[_457 + 5u]).x) * 0.0039215688593685626983642578125;
        _509 = TEXCOORD_1.w;
    }
    SV_Target.x = ((_426 * 0.5) * _436) + 0.500488758087158203125;
    SV_Target.y = ((_429 * 0.5) * _436) + 0.500488758087158203125;
    SV_Target.z = ((_432 * 0.5) * _436) + 0.500488758087158203125;
    SV_Target.w = _507;
    SV_Target_1.x = isnan(1.0) ? _635 : (isnan(_635) ? 1.0 : min(_635, 1.0));
    SV_Target_1.y = isnan(1.0) ? _591 : (isnan(_591) ? 1.0 : min(_591, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _509;
    SV_Target_2.x = isnan(1.0) ? _646 : (isnan(_646) ? 1.0 : min(_646, 1.0));
    SV_Target_2.y = isnan(1.0) ? _657 : (isnan(_657) ? 1.0 : min(_657, 1.0));
    SV_Target_2.z = isnan(1.0) ? _668 : (isnan(_668) ? 1.0 : min(_668, 1.0));
    SV_Target_2.w = _508;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _507;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _506;
}


