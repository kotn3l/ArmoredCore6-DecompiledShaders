#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D P_AMSN_Scroll_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_AMSN_Scroll_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D P_AMSN_Scroll_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _133 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _134 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _135 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _140 = inversesqrt(dot(vec3(_133, _134, _135), vec3(_133, _134, _135)));
    float _147 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _154 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _177 = texture(sampler2D(P_AMSN_Scroll_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _183 = _177.x * cbMtdParam._m0[9u].x;
    float _184 = _177.y * cbMtdParam._m0[9u].y;
    float _185 = _177.z * cbMtdParam._m0[9u].z;
    vec4 _197 = texture(sampler2D(P_AMSN_Scroll_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _204 = cbMtdParam._m0[10u].x + _197.x;
    vec4 _216 = texture(sampler2D(P_AMSN_Scroll_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _220 = _216.z;
    float _224 = (_216.x * 2.0) + (-1.0);
    float _226 = (_216.y * 2.0) + (-1.0);
    float _227 = dot(vec2(_224, _226), vec2(_224, _226));
    float _430 = isnan(0.0) ? _227 : (isnan(_227) ? 0.0 : max(_227, 0.0));
    float _233 = sqrt(1.0 - (isnan(1.0) ? _430 : (isnan(_430) ? 1.0 : min(_430, 1.0))));
    float _236 = fma(_233, _147 * NORMAL.x, fma(_226, _154 * TANGENT.x, (_140 * _133) * _224));
    float _239 = fma(_233, _147 * NORMAL.y, fma(_226, _154 * TANGENT.y, (_140 * _134) * _224));
    float _242 = fma(_233, _147 * NORMAL.z, fma(_226, _154 * TANGENT.z, (_140 * _135) * _224));
    float _246 = inversesqrt(dot(vec3(_236, _239, _242), vec3(_236, _239, _242)));
    float _441 = isnan(0.0) ? _220 : (isnan(_220) ? 0.0 : max(_220, 0.0));
    float _452 = isnan(0.0) ? _183 : (isnan(_183) ? 0.0 : max(_183, 0.0));
    float _248 = isnan(1.0) ? _452 : (isnan(_452) ? 1.0 : min(_452, 1.0));
    float _463 = isnan(0.0) ? _184 : (isnan(_184) ? 0.0 : max(_184, 0.0));
    float _249 = isnan(1.0) ? _463 : (isnan(_463) ? 1.0 : min(_463, 1.0));
    float _474 = isnan(0.0) ? _185 : (isnan(_185) ? 0.0 : max(_185, 0.0));
    float _250 = isnan(1.0) ? _474 : (isnan(_474) ? 1.0 : min(_474, 1.0));
    float _485 = isnan(0.0) ? _204 : (isnan(_204) ? 0.0 : max(_204, 0.0));
    uint _253 = uint(roundEven(NORMAL.w));
    vec4 _258 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _260 = _258.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _323 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _496 = isnan(0.0) ? _323 : (isnan(_323) ? 0.0 : max(_323, 0.0));
        float _324 = isnan(1.0) ? _496 : (isnan(_496) ? 1.0 : min(_496, 1.0));
        float _328 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _507 = isnan(0.0) ? _328 : (isnan(_328) ? 0.0 : max(_328, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _507 : (isnan(_507) ? 1.0 : min(_507, 1.0))) - _324)) + _324) < ((_260 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _357;
    uint _280;
    vec4 _285;
    float _292;
    float _293;
    float _294;
    float _298;
    vec4 _302;
    float _304;
    float _305;
    bool _316;
    for (;;)
    {
        _280 = _253 * 13u;
        _285 = cbInstanceData._m0[(_280 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _289 = (cbMtdParam._m0[0u].x * _248) * _285.x;
        float _290 = (cbMtdParam._m0[0u].y * _249) * _285.y;
        float _291 = (cbMtdParam._m0[0u].z * _250) * _285.z;
        float _518 = isnan(0.0) ? _289 : (isnan(_289) ? 0.0 : max(_289, 0.0));
        _292 = isnan(1.0) ? _518 : (isnan(_518) ? 1.0 : min(_518, 1.0));
        float _529 = isnan(0.0) ? _290 : (isnan(_290) ? 0.0 : max(_290, 0.0));
        _293 = isnan(1.0) ? _529 : (isnan(_529) ? 1.0 : min(_529, 1.0));
        float _540 = isnan(0.0) ? _291 : (isnan(_291) ? 0.0 : max(_291, 0.0));
        _294 = isnan(1.0) ? _540 : (isnan(_540) ? 1.0 : min(_540, 1.0));
        _298 = cbInstanceData._m0[_280 + 6u].w;
        float _299 = _260 + (-0.5);
        _302 = cbMtdParam._m0[1u];
        _304 = _302.y * _299;
        _305 = _299 * 0.999000012874603271484375;
        _316 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_316)
        {
            if ((cbInstanceData._m0[_280 + 7u].x + _305) < 0.5)
            {
                _357 = true;
                break;
            }
        }
        if ((_285.w < 1.0) && ((_285.w + _305) < 0.5))
        {
            _357 = true;
            break;
        }
        if ((_304 + 1.0) < _302.x)
        {
            _357 = true;
            break;
        }
        _357 = false;
        break;
    }
    if (_357)
    {
        discard_state = true;
    }
    bool _383 = cbMtdParam._m0[1u].z != 0.0;
    float _384 = _383 ? _298 : 0.0;
    SV_Target.x = ((_236 * 0.5) * _246) + 0.500488758087158203125;
    SV_Target.y = ((_239 * 0.5) * _246) + 0.500488758087158203125;
    SV_Target.z = ((_242 * 0.5) * _246) + 0.500488758087158203125;
    SV_Target.w = _384;
    SV_Target_1.x = isnan(1.0) ? _485 : (isnan(_485) ? 1.0 : min(_485, 1.0));
    SV_Target_1.y = isnan(1.0) ? _441 : (isnan(_441) ? 1.0 : min(_441, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _383 ? _298 : TEXCOORD.z;
    SV_Target_2.x = _292;
    SV_Target_2.y = _293;
    SV_Target_2.z = _294;
    SV_Target_2.w = _383 ? _298 : (float(floatBitsToUint(cbInstanceData._m0[_280 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _384;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _384;
    discard_exit();
}


