#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D P_AMSN_Scroll_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_AMSN_Scroll_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _125 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _126 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _127 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _132 = inversesqrt(dot(vec3(_125, _126, _127), vec3(_125, _126, _127)));
    float _139 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _146 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _166 = ((cbMtdParam._m0[10u].z * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].y) + TEXCOORD.x;
    float _167 = ((cbMtdParam._m0[10u].w * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].y) + TEXCOORD.y;
    vec4 _180 = texture(sampler2D(P_AMSN_Scroll_snp_0_Texture2D_0, SS_DiffuseMap), vec2((_166 * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (_167 * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _186 = _180.x * cbMtdParam._m0[9u].x;
    float _187 = _180.y * cbMtdParam._m0[9u].y;
    float _188 = _180.z * cbMtdParam._m0[9u].z;
    vec4 _201 = texture(sampler2D(P_AMSN_Scroll_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _166) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _167) + cbTextureTilingScale._m0[1u].w));
    float _205 = _201.z;
    float _209 = (_201.x * 2.0) + (-1.0);
    float _211 = (_201.y * 2.0) + (-1.0);
    float _212 = dot(vec2(_209, _211), vec2(_209, _211));
    float _321 = isnan(0.0) ? _212 : (isnan(_212) ? 0.0 : max(_212, 0.0));
    float _218 = sqrt(1.0 - (isnan(1.0) ? _321 : (isnan(_321) ? 1.0 : min(_321, 1.0))));
    float _221 = fma(_218, _139 * NORMAL.x, fma(_211, _146 * TANGENT.x, (_132 * _125) * _209));
    float _224 = fma(_218, _139 * NORMAL.y, fma(_211, _146 * TANGENT.y, (_132 * _126) * _209));
    float _227 = fma(_218, _139 * NORMAL.z, fma(_211, _146 * TANGENT.z, (_132 * _127) * _209));
    float _231 = inversesqrt(dot(vec3(_221, _224, _227), vec3(_221, _224, _227)));
    float _332 = isnan(0.0) ? _205 : (isnan(_205) ? 0.0 : max(_205, 0.0));
    float _343 = isnan(0.0) ? _186 : (isnan(_186) ? 0.0 : max(_186, 0.0));
    float _354 = isnan(0.0) ? _187 : (isnan(_187) ? 0.0 : max(_187, 0.0));
    float _365 = isnan(0.0) ? _188 : (isnan(_188) ? 0.0 : max(_188, 0.0));
    float _376 = isnan(0.0) ? cbMtdParam._m0[10u].x : (isnan(cbMtdParam._m0[10u].x) ? 0.0 : max(cbMtdParam._m0[10u].x, 0.0));
    uint _251 = uint(roundEven(NORMAL.w)) * 13u;
    uint _254 = (_251 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _260 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _343 : (isnan(_343) ? 1.0 : min(_343, 1.0)))) * cbInstanceData._m0[_254].x;
    float _261 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _354 : (isnan(_354) ? 1.0 : min(_354, 1.0)))) * cbInstanceData._m0[_254].y;
    float _262 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _365 : (isnan(_365) ? 1.0 : min(_365, 1.0)))) * cbInstanceData._m0[_254].z;
    float _387 = isnan(0.0) ? _260 : (isnan(_260) ? 0.0 : max(_260, 0.0));
    float _398 = isnan(0.0) ? _261 : (isnan(_261) ? 0.0 : max(_261, 0.0));
    float _409 = isnan(0.0) ? _262 : (isnan(_262) ? 0.0 : max(_262, 0.0));
    uint _266 = _251 + 6u;
    bool _295 = cbMtdParam._m0[1u].z != 0.0;
    float _296 = _295 ? cbInstanceData._m0[_266].w : 0.0;
    SV_Target.x = ((_221 * 0.5) * _231) + 0.500488758087158203125;
    SV_Target.y = ((_224 * 0.5) * _231) + 0.500488758087158203125;
    SV_Target.z = ((_227 * 0.5) * _231) + 0.500488758087158203125;
    SV_Target.w = _296;
    SV_Target_1.x = isnan(1.0) ? _376 : (isnan(_376) ? 1.0 : min(_376, 1.0));
    SV_Target_1.y = isnan(1.0) ? _332 : (isnan(_332) ? 1.0 : min(_332, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _295 ? cbInstanceData._m0[_266].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _387 : (isnan(_387) ? 1.0 : min(_387, 1.0));
    SV_Target_2.y = isnan(1.0) ? _398 : (isnan(_398) ? 1.0 : min(_398, 1.0));
    SV_Target_2.z = isnan(1.0) ? _409 : (isnan(_409) ? 1.0 : min(_409, 1.0));
    SV_Target_2.w = _295 ? cbInstanceData._m0[_266].w : (float(floatBitsToUint(cbInstanceData._m0[_251 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _296;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _296;
}


