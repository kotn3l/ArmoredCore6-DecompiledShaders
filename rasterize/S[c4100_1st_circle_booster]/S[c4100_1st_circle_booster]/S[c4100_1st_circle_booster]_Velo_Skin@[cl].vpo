#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 1) uniform texture2D S_c4100_1st_circle_booster_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_2;
layout(location = 9) in vec4 TEXCOORD_3;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out float TEXCOORD_1_1;
layout(location = 4, component = 1) out float TEXCOORD_2_1;
layout(location = 5) out vec4 TEXCOORD_4;
layout(location = 6) out vec4 TEXCOORD_7;
layout(location = 4, component = 2) out float TEXCOORD_10;
layout(location = 4, component = 3) out float TEXCOORD_11;
layout(location = 7) out float TEXCOORD_12;
layout(location = 8) out vec4 TEXCOORD_15;
layout(location = 9) out vec4 TEXCOORD_16;
layout(location = 7, component = 1) out vec3 TEXCOORD_17;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1_1 = 0.0;
    TEXCOORD_2_1 = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_7.z = 0.0;
    TEXCOORD_7.w = 0.0;
    TEXCOORD_10 = 0.0;
    TEXCOORD_11 = 0.0;
    TEXCOORD_12 = 0.0;
    TEXCOORD_15.x = 0.0;
    TEXCOORD_15.y = 0.0;
    TEXCOORD_15.z = 0.0;
    TEXCOORD_15.w = 0.0;
    TEXCOORD_16.x = 0.0;
    TEXCOORD_16.y = 0.0;
    TEXCOORD_16.z = 0.0;
    TEXCOORD_16.w = 0.0;
    TEXCOORD_17.x = 0.0;
    TEXCOORD_17.y = 0.0;
    TEXCOORD_17.z = 0.0;
    precise float _216 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _218 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _223 = _216 * cbTexScroll._m0[0u].x;
    precise float _224 = _218 * cbTexScroll._m0[0u].y;
    precise float _227 = _223 + cbTexScroll._m0[0u].z;
    precise float _228 = _224 + cbTexScroll._m0[0u].w;
    precise float _232 = float(NORMAL.x) + (-127.0);
    precise float _234 = float(NORMAL.y) + (-127.0);
    precise float _235 = float(NORMAL.z) + (-127.0);
    precise float _236 = _232 * 0.0078740157186985015869140625;
    precise float _238 = _234 * 0.0078740157186985015869140625;
    precise float _239 = _235 * 0.0078740157186985015869140625;
    float _248 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _249 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _250 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _260 = cbPerFrame._m0[22u].x * cbMtdParam._m0[15u].x;
    precise float _266 = _260 * cbMtdParam._m0[20u].z;
    precise float _267 = _260 * cbMtdParam._m0[20u].w;
    precise float _268 = _227 + _266;
    precise float _269 = _228 + _267;
    precise float _276 = _268 * cbTextureTilingScale._m0[1u].x;
    precise float _277 = cbTextureTilingScale._m0[1u].y * _269;
    precise float _278 = cbTextureTilingScale._m0[1u].z + _276;
    precise float _279 = cbTextureTilingScale._m0[1u].w + _277;
    precise float _290 = textureLod(sampler2D(S_c4100_1st_circle_booster_snp_0_Texture2D_1, SS_DiffuseMap), vec2(_278, _279), 0.0).x * cbMtdParam._m0[17u].x;
    precise float _299 = _236 * cbMtdParam._m0[23u].z;
    precise float _300 = _238 * cbMtdParam._m0[23u].w;
    precise float _301 = _239 * cbMtdParam._m0[24u].x;
    precise float _302 = _290 * _299;
    precise float _303 = _290 * _300;
    precise float _304 = _290 * _301;
    precise float _305 = _299 + _302;
    precise float _306 = _300 + _303;
    precise float _307 = _301 + _304;
    precise float _308 = _299 * 0.0;
    precise float _309 = _300 * 0.0;
    precise float _310 = _301 * 0.0;
    precise float _311 = _308 + _305;
    precise float _312 = _309 + _306;
    precise float _313 = _310 + _307;
    precise float _314 = TEXCOORD_3.x * _311;
    precise float _315 = TEXCOORD_3.y * _312;
    precise float _316 = TEXCOORD_3.z * _313;
    precise float _317 = POSITION.x + _314;
    precise float _318 = POSITION.y + _315;
    precise float _319 = POSITION.z + _316;
    uint _324 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _326 = texelFetch(g_InstanceIndexBuffer, int(_324));
    uint _327 = _326.x;
    precise float _328 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _333 = isnan(_328) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _328 : max(0.001000000047497451305389404296875, _328));
    precise float _335 = BLENDWEIGHT.x / _333;
    precise float _336 = BLENDWEIGHT.y / _333;
    precise float _337 = BLENDWEIGHT.z / _333;
    precise float _338 = BLENDWEIGHT.w / _333;
    uvec4 _345 = floatBitsToUint(cbInstanceData._m0[(_327 * 13u) + 4u]);
    uint _346 = _345.x;
    uint _348 = (_346 + uint(float(BLENDINDICES.x))) * 3u;
    uint _355 = _348 + 1u;
    uint _362 = _348 + 2u;
    precise float _369 = _335 * cbObjMatrix._m0[_348].x;
    precise float _370 = _335 * cbObjMatrix._m0[_355].x;
    precise float _371 = _335 * cbObjMatrix._m0[_362].x;
    precise float _372 = _335 * cbObjMatrix._m0[_348].y;
    precise float _373 = _335 * cbObjMatrix._m0[_355].y;
    precise float _374 = _335 * cbObjMatrix._m0[_362].y;
    precise float _375 = _335 * cbObjMatrix._m0[_348].z;
    precise float _376 = _335 * cbObjMatrix._m0[_355].z;
    precise float _377 = _335 * cbObjMatrix._m0[_362].z;
    precise float _378 = _335 * cbObjMatrix._m0[_348].w;
    precise float _379 = _335 * cbObjMatrix._m0[_355].w;
    precise float _380 = _335 * cbObjMatrix._m0[_362].w;
    uint _383 = (_346 + uint(float(BLENDINDICES.y))) * 3u;
    uint _390 = _383 + 1u;
    uint _397 = _383 + 2u;
    precise float _404 = _336 * cbObjMatrix._m0[_383].x;
    precise float _405 = _336 * cbObjMatrix._m0[_390].x;
    precise float _406 = _336 * cbObjMatrix._m0[_397].x;
    precise float _407 = _336 * cbObjMatrix._m0[_383].y;
    precise float _408 = _336 * cbObjMatrix._m0[_390].y;
    precise float _409 = _336 * cbObjMatrix._m0[_397].y;
    precise float _410 = _336 * cbObjMatrix._m0[_383].z;
    precise float _411 = _336 * cbObjMatrix._m0[_390].z;
    precise float _412 = _336 * cbObjMatrix._m0[_397].z;
    precise float _413 = _336 * cbObjMatrix._m0[_383].w;
    precise float _414 = _336 * cbObjMatrix._m0[_390].w;
    precise float _415 = _336 * cbObjMatrix._m0[_397].w;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    precise float _418 = _371 + _406;
    precise float _419 = _372 + _407;
    precise float _420 = _373 + _408;
    precise float _421 = _374 + _409;
    precise float _422 = _375 + _410;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    precise float _426 = _379 + _414;
    precise float _427 = _380 + _415;
    uint _430 = (_346 + uint(float(BLENDINDICES.z))) * 3u;
    uint _437 = _430 + 1u;
    uint _444 = _430 + 2u;
    precise float _451 = _337 * cbObjMatrix._m0[_430].x;
    precise float _452 = _337 * cbObjMatrix._m0[_437].x;
    precise float _453 = _337 * cbObjMatrix._m0[_444].x;
    precise float _454 = _337 * cbObjMatrix._m0[_430].y;
    precise float _455 = _337 * cbObjMatrix._m0[_437].y;
    precise float _456 = _337 * cbObjMatrix._m0[_444].y;
    precise float _457 = _337 * cbObjMatrix._m0[_430].z;
    precise float _458 = _337 * cbObjMatrix._m0[_437].z;
    precise float _459 = _337 * cbObjMatrix._m0[_444].z;
    precise float _460 = _337 * cbObjMatrix._m0[_430].w;
    precise float _461 = _337 * cbObjMatrix._m0[_437].w;
    precise float _462 = _337 * cbObjMatrix._m0[_444].w;
    precise float _463 = _416 + _451;
    precise float _464 = _417 + _452;
    precise float _465 = _418 + _453;
    precise float _466 = _419 + _454;
    precise float _467 = _420 + _455;
    precise float _468 = _421 + _456;
    precise float _469 = _422 + _457;
    precise float _470 = _423 + _458;
    precise float _471 = _424 + _459;
    precise float _472 = _425 + _460;
    precise float _473 = _426 + _461;
    precise float _474 = _427 + _462;
    uint _477 = (_346 + uint(float(BLENDINDICES.w))) * 3u;
    uint _484 = _477 + 1u;
    uint _491 = _477 + 2u;
    precise float _498 = _338 * cbObjMatrix._m0[_477].x;
    precise float _499 = _338 * cbObjMatrix._m0[_484].x;
    precise float _500 = _338 * cbObjMatrix._m0[_491].x;
    precise float _501 = _338 * cbObjMatrix._m0[_477].y;
    precise float _502 = _338 * cbObjMatrix._m0[_484].y;
    precise float _503 = _338 * cbObjMatrix._m0[_491].y;
    precise float _504 = _338 * cbObjMatrix._m0[_477].z;
    precise float _505 = _338 * cbObjMatrix._m0[_484].z;
    precise float _506 = _338 * cbObjMatrix._m0[_491].z;
    precise float _507 = _338 * cbObjMatrix._m0[_477].w;
    precise float _508 = _338 * cbObjMatrix._m0[_484].w;
    precise float _509 = _338 * cbObjMatrix._m0[_491].w;
    precise float _510 = _463 + _498;
    precise float _511 = _464 + _499;
    precise float _512 = _465 + _500;
    precise float _513 = _466 + _501;
    precise float _514 = _467 + _502;
    precise float _515 = _468 + _503;
    precise float _516 = _469 + _504;
    precise float _517 = _470 + _505;
    precise float _518 = _471 + _506;
    precise float _519 = _472 + _507;
    precise float _520 = _473 + _508;
    precise float _521 = _474 + _509;
    precise float _522 = _317 * _510;
    precise float _523 = _318 * _513;
    precise float _524 = _523 + _522;
    precise float _525 = _319 * _516;
    precise float _526 = _525 + _524;
    precise float _527 = 1.0 * _519;
    precise float _528 = _527 + _526;
    precise float _529 = _317 * _511;
    precise float _530 = _318 * _514;
    precise float _531 = _530 + _529;
    precise float _532 = _319 * _517;
    precise float _533 = _532 + _531;
    precise float _534 = 1.0 * _520;
    precise float _535 = _534 + _533;
    precise float _536 = _317 * _512;
    precise float _537 = _318 * _515;
    precise float _538 = _537 + _536;
    precise float _539 = _319 * _518;
    precise float _540 = _539 + _538;
    precise float _541 = 1.0 * _521;
    precise float _542 = _541 + _540;
    float _713 = fma(_239, _516, fma(_238, _513, _510 * _236));
    float _716 = fma(_239, _517, fma(_238, _514, _511 * _236));
    float _719 = fma(_239, _518, fma(_238, _515, _512 * _236));
    precise float _730 = _528 + 0.0;
    precise float _731 = _535 + 0.0;
    precise float _732 = _542 + 0.0;
    float _739 = (((((cbPrevObjMatrix._m0[_383].w * _336) + (cbPrevObjMatrix._m0[_348].w * _335)) + (cbPrevObjMatrix._m0[_430].w * _337)) + (cbPrevObjMatrix._m0[_477].w * _338)) + fma(_319, (((cbPrevObjMatrix._m0[_383].z * _336) + (cbPrevObjMatrix._m0[_348].z * _335)) + (cbPrevObjMatrix._m0[_430].z * _337)) + (cbPrevObjMatrix._m0[_477].z * _338), fma(_318, (((cbPrevObjMatrix._m0[_383].y * _336) + (cbPrevObjMatrix._m0[_348].y * _335)) + (cbPrevObjMatrix._m0[_430].y * _337)) + (cbPrevObjMatrix._m0[_477].y * _338), ((((cbPrevObjMatrix._m0[_383].x * _336) + (cbPrevObjMatrix._m0[_348].x * _335)) + (cbPrevObjMatrix._m0[_430].x * _337)) + (cbPrevObjMatrix._m0[_477].x * _338)) * _317))) - cbSceneParam._m0[28u].x;
    float _740 = (((((cbPrevObjMatrix._m0[_390].w * _336) + (cbPrevObjMatrix._m0[_355].w * _335)) + (cbPrevObjMatrix._m0[_437].w * _337)) + (cbPrevObjMatrix._m0[_484].w * _338)) + fma(_319, (((cbPrevObjMatrix._m0[_390].z * _336) + (cbPrevObjMatrix._m0[_355].z * _335)) + (cbPrevObjMatrix._m0[_437].z * _337)) + (cbPrevObjMatrix._m0[_484].z * _338), fma(_318, (((cbPrevObjMatrix._m0[_390].y * _336) + (cbPrevObjMatrix._m0[_355].y * _335)) + (cbPrevObjMatrix._m0[_437].y * _337)) + (cbPrevObjMatrix._m0[_484].y * _338), ((((cbPrevObjMatrix._m0[_390].x * _336) + (cbPrevObjMatrix._m0[_355].x * _335)) + (cbPrevObjMatrix._m0[_437].x * _337)) + (cbPrevObjMatrix._m0[_484].x * _338)) * _317))) - cbSceneParam._m0[28u].y;
    float _741 = (((((cbPrevObjMatrix._m0[_397].w * _336) + (cbPrevObjMatrix._m0[_362].w * _335)) + (cbPrevObjMatrix._m0[_444].w * _337)) + (cbPrevObjMatrix._m0[_491].w * _338)) + fma(_319, (((cbPrevObjMatrix._m0[_397].z * _336) + (cbPrevObjMatrix._m0[_362].z * _335)) + (cbPrevObjMatrix._m0[_444].z * _337)) + (cbPrevObjMatrix._m0[_491].z * _338), fma(_318, (((cbPrevObjMatrix._m0[_397].y * _336) + (cbPrevObjMatrix._m0[_362].y * _335)) + (cbPrevObjMatrix._m0[_444].y * _337)) + (cbPrevObjMatrix._m0[_491].y * _338), ((((cbPrevObjMatrix._m0[_397].x * _336) + (cbPrevObjMatrix._m0[_362].x * _335)) + (cbPrevObjMatrix._m0[_444].x * _337)) + (cbPrevObjMatrix._m0[_491].x * _338)) * _317))) - cbSceneParam._m0[28u].z;
    precise float _791 = _730 - cbSceneParam._m0[3u].x;
    precise float _792 = _731 - cbSceneParam._m0[3u].y;
    precise float _793 = _732 - cbSceneParam._m0[3u].z;
    precise float _819 = _791 * cbSceneParam._m0[24u].x;
    precise float _820 = _792 * cbSceneParam._m0[24u].y;
    precise float _821 = _820 + _819;
    precise float _822 = _793 * cbSceneParam._m0[24u].z;
    precise float _823 = _822 + _821;
    precise float _824 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _825 = _824 + _823;
    precise float _826 = _791 * cbSceneParam._m0[25u].x;
    precise float _827 = _792 * cbSceneParam._m0[25u].y;
    precise float _828 = _827 + _826;
    precise float _829 = _793 * cbSceneParam._m0[25u].z;
    precise float _830 = _829 + _828;
    precise float _831 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _832 = _831 + _830;
    precise float _833 = _791 * cbSceneParam._m0[26u].x;
    precise float _834 = _792 * cbSceneParam._m0[26u].y;
    precise float _835 = _834 + _833;
    precise float _836 = _793 * cbSceneParam._m0[26u].z;
    precise float _837 = _836 + _835;
    precise float _838 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _839 = _838 + _837;
    precise float _840 = _791 * cbSceneParam._m0[27u].x;
    precise float _841 = _792 * cbSceneParam._m0[27u].y;
    precise float _842 = _841 + _840;
    precise float _843 = _793 * cbSceneParam._m0[27u].z;
    precise float _844 = _843 + _842;
    precise float _845 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _846 = _845 + _844;
    gl_Position.x = _825;
    gl_Position.y = _832;
    gl_Position.z = _839;
    gl_Position.w = _846;
    POSITION_1.x = _825;
    POSITION_1.y = _832;
    POSITION_1.z = _839;
    POSITION_1.w = _846;
    NORMAL_1.x = _713;
    NORMAL_1.y = _716;
    NORMAL_1.z = _719;
    NORMAL_1.w = float(_327);
    TANGENT_1.x = fma(_250, _516, fma(_249, _513, _510 * _248));
    TANGENT_1.y = fma(_250, _517, fma(_249, _514, _511 * _248));
    TANGENT_1.z = fma(_250, _518, fma(_249, _515, _512 * _248));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1_1 = _227;
    TEXCOORD_2_1 = _228;
    TEXCOORD_4.x = TEXCOORD_1.x;
    TEXCOORD_4.y = TEXCOORD_1.y;
    TEXCOORD_4.z = TEXCOORD_1.z;
    TEXCOORD_4.w = COLOR_1.w;
    TEXCOORD_7.x = TEXCOORD_2.x;
    TEXCOORD_7.y = TEXCOORD_2.y;
    TEXCOORD_7.z = TEXCOORD_2.z;
    TEXCOORD_7.w = COLOR_1.x;
    TEXCOORD_10 = TEXCOORD_3.x;
    TEXCOORD_11 = TEXCOORD_3.y;
    TEXCOORD_12 = TEXCOORD_3.z;
    TEXCOORD_15.x = _825;
    TEXCOORD_15.y = _832;
    TEXCOORD_15.z = _839;
    TEXCOORD_15.w = _846;
    TEXCOORD_16.x = fma(_741, cbSceneParam._m0[29u].z, fma(_740, cbSceneParam._m0[29u].y, _739 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_16.y = fma(_741, cbSceneParam._m0[30u].z, fma(_740, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _739)) + cbSceneParam._m0[30u].w;
    TEXCOORD_16.z = fma(_741, cbSceneParam._m0[31u].z, fma(_740, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _739)) + cbSceneParam._m0[31u].w;
    TEXCOORD_16.w = fma(_741, cbSceneParam._m0[32u].z, fma(_740, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _739)) + cbSceneParam._m0[32u].w;
    TEXCOORD_17.x = _713;
    TEXCOORD_17.y = _716;
    TEXCOORD_17.z = _719;
}


