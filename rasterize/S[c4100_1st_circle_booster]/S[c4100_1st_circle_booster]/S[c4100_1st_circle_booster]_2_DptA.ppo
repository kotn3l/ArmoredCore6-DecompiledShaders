#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD_1;
layout(location = 4, component = 1) in float TEXCOORD_2;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 6) in vec4 TEXCOORD_7;
layout(location = 4, component = 2) in float TEXCOORD_10;
layout(location = 4, component = 3) in float TEXCOORD_11;
layout(location = 7) in float TEXCOORD_12;
layout(location = 7, component = 1) in vec2 TEXCOORD_14;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    uint _80 = uint(roundEven(NORMAL.w));
    float _125 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _135 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _125);
    float _136 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _125);
    float _137 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _125);
    vec4 _144 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _146 = _144.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _179 = sqrt(((_135 * _135) + (_136 * _136)) + (_137 * _137));
        float _186 = (cbMatDynParam._m0[5u].x * _179) + cbMatDynParam._m0[5u].y;
        float _257 = isnan(0.0) ? _186 : (isnan(_186) ? 0.0 : max(_186, 0.0));
        float _188 = isnan(1.0) ? _257 : (isnan(_257) ? 1.0 : min(_257, 1.0));
        float _192 = (cbMatDynParam._m0[5u].z * _179) + cbMatDynParam._m0[5u].w;
        float _268 = isnan(0.0) ? _192 : (isnan(_192) ? 0.0 : max(_192, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _268 : (isnan(_268) ? 1.0 : min(_268, 1.0))) - _188)) + _188) < ((_146 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _229;
    vec4 _157;
    float _159;
    float _160;
    bool _171;
    uint _172;
    for (;;)
    {
        float _154 = _146 + (-0.5);
        _157 = cbMtdParam._m0[1u];
        _159 = _157.y * _154;
        _160 = _154 * 0.999000012874603271484375;
        _171 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        _172 = _80 * 13u;
        if (_171)
        {
            if ((cbInstanceData._m0[_172 + 7u].x + _160) < 0.5)
            {
                _229 = true;
                break;
            }
        }
        uint _218 = (_172 + 9u) + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_218].w < 1.0) && ((cbInstanceData._m0[_218].w + _160) < 0.5))
        {
            _229 = true;
            break;
        }
        if ((_159 + 1.0) < _157.x)
        {
            _229 = true;
            break;
        }
        _229 = false;
        break;
    }
    if (_229)
    {
        discard_state = true;
    }
    discard_exit();
}


