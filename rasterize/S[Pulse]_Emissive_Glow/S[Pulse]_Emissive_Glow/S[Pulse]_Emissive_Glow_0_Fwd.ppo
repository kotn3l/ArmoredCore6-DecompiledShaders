#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D S_Pulse_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 1) uniform texture2D S_Pulse_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 2) uniform texture2D S_Pulse_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 3) uniform texture2D S_Pulse_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D S_Pulse_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec2 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _136 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _137 = _136 * NORMAL.x;
    float _138 = _136 * NORMAL.y;
    float _139 = _136 * NORMAL.z;
    float _144;
    float _145;
    float _146;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _144 = (-0.0) - _137;
        _145 = (-0.0) - _138;
        _146 = (-0.0) - _139;
    }
    else
    {
        _144 = _137;
        _145 = _138;
        _146 = _139;
    }
    float _190 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _200 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _190);
    float _201 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _190);
    float _202 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _190);
    float _218 = cbMtdParam._m0[12u].w - cbMtdParam._m0[13u].x;
    float _221 = (sqrt(((_200 * _200) + (_201 * _201)) + (_202 * _202)) - cbMtdParam._m0[13u].x) / (isnan(0.00999999977648258209228515625) ? _218 : (isnan(_218) ? 0.00999999977648258209228515625 : max(_218, 0.00999999977648258209228515625)));
    float _830 = isnan(0.0) ? _221 : (isnan(_221) ? 0.0 : max(_221, 0.0));
    float _224 = TEXCOORD_1.z + (-0.5);
    float _226 = TEXCOORD_1.w + (-0.5);
    float _257 = cbMtdParam._m0[14u].z * texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (fma(_226, 0.99271297454833984375, _224 * 0.12050272524356842041015625) + 0.5)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (fma(_226, 0.12050272524356842041015625, _224 * (-0.99271297454833984375)) + 0.5)) + cbTextureTilingScale._m0[4u].w)).x;
    float _261 = sin(cbMtdParam._m0[12u].z);
    float _262 = cos(cbMtdParam._m0[12u].z);
    float _263 = TEXCOORD_1.z - cbMtdParam._m0[12u].y;
    float _264 = TEXCOORD_1.w - cbMtdParam._m0[12u].y;
    float _270 = fma(_264, (-0.0) - _261, _262 * _263) + cbMtdParam._m0[12u].y;
    float _271 = fma(_264, _262, _263 * _261) + cbMtdParam._m0[12u].y;
    vec4 _293 = texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * ((cbMtdParam._m0[17u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * ((cbMtdParam._m0[17u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y)) + cbTextureTilingScale._m0[1u].w));
    float _297 = cbPerFrame._m0[22u].x * 2.0;
    float _299 = _297 * cbMtdParam._m0[13u].w;
    float _301 = (_293.x * 0.5) + (-0.25);
    float _304 = (_293.y * 0.5) + (-0.25);
    float _305 = _304 * cbMtdParam._m0[13u].y;
    float _307 = (-0.0) - (cbMtdParam._m0[13u].y * _301);
    float _308 = fract(_299);
    float _310 = fract(_299 + 0.5);
    float _311 = _308 * _307;
    float _312 = _305 * _308;
    float _315 = _310 * _307;
    float _316 = _305 * _310;
    float _322 = abs((_308 * 2.0) + (-1.0));
    vec4 _338 = texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_6, SS_WrapLinear), vec2(((_311 + _270) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, ((_312 + _271) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _340 = _338.x;
    float _346 = ((texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_6, SS_WrapLinear), vec2(((_315 + _270) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, ((_316 + _271) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x - _340) * _322) + _340;
    float _358 = inversesqrt(dot(vec3(_144, _145, _146), vec3(_144, _145, _146)));
    float _365 = inversesqrt(dot(vec3(_200, _201, _202), vec3(_200, _201, _202)));
    float _372 = dot(vec4(_365 * _200, _365 * _201, _365 * _202, 0.0), vec4(_358 * _144, _358 * _145, _358 * _146, 0.0)) - cbMtdParam._m0[15u].x;
    float _841 = isnan(0.0) ? _372 : (isnan(_372) ? 0.0 : max(_372, 0.0));
    float _392 = cbMtdParam._m0[16u].x * cbPerFrame._m0[22u].x;
    float _395 = (_392 * cbMtdParam._m0[16u].w) + TEXCOORD_1.x;
    float _396 = (_392 * cbMtdParam._m0[17u].x) + TEXCOORD_1.y;
    vec4 _416 = texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((_311 + _395) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_312 + _396) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _418 = _416.x;
    float _419 = _416.y;
    float _420 = _416.z;
    vec4 _421 = texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((_315 + _395) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_316 + _396) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _435 = (((_421.x - _418) * _322) + _418) * cbMtdParam._m0[11u].x;
    float _436 = (((_421.y - _419) * _322) + _419) * cbMtdParam._m0[11u].y;
    float _437 = (((_421.z - _420) * _322) + _420) * cbMtdParam._m0[11u].z;
    float _450 = (cbMtdParam._m0[17u].w * _392) + TEXCOORD_1.x;
    float _451 = (cbMtdParam._m0[18u].x * _392) + TEXCOORD_1.y;
    float _454 = _297 * cbMtdParam._m0[16u].z;
    float _455 = _304 * cbMtdParam._m0[16u].y;
    float _457 = (-0.0) - (cbMtdParam._m0[16u].y * _301);
    float _458 = fract(_454);
    float _460 = fract(_454 + 0.5);
    float _471 = abs((_458 * 2.0) + (-1.0));
    vec4 _487 = texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_458 * _457) + _450) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_455 * _458) + _451) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _489 = _487.x;
    float _490 = _487.y;
    float _491 = _487.z;
    vec4 _492 = texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_460 * _457) + _450) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_455 * _460) + _451) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _514 = abs((fract(cbMtdParam._m0[14u].y * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _857 = isnan(0.0) ? _514 : (isnan(_514) ? 0.0 : max(_514, 0.0));
    float _515 = isnan(1.0) ? _857 : (isnan(_857) ? 1.0 : min(_857, 1.0));
    float _522 = ((_515 * _515) * (3.0 - (_515 * 2.0))) - cbMtdParam._m0[14u].x;
    float _532 = (((((((_492.x - _489) * _471) + _489) * cbMtdParam._m0[9u].x) * _522) - _435) * _346) + _435;
    float _540 = (((((isnan(1.0) ? _830 : (isnan(_830) ? 1.0 : min(_830, 1.0))) * TEXCOORD.x) * ((_346 * (cbMtdParam._m0[14u].w - _257)) + _257)) * (1.0 - exp2(log2(1.0 - (isnan(1.0) ? _841 : (isnan(_841) ? 1.0 : min(_841, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].y : (isnan(cbMtdParam._m0[15u].y) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].y, 0.001000000047497451305389404296875)))))) * cbMtdParam._m0[15u].z) * _532;
    float _868 = isnan(0.0) ? _540 : (isnan(_540) ? 0.0 : max(_540, 0.0));
    float _561 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    uint _573 = uint(roundEven(NORMAL.w)) * 13u;
    uint _575 = (_573 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _581 = (_532 * cbMtdParam._m0[15u].w) * cbInstanceData._m0[_575].x;
    float _582 = (((((((((_492.y - _490) * _471) + _490) * cbMtdParam._m0[9u].y) * _522) - _436) * _346) + _436) * cbMtdParam._m0[15u].w) * cbInstanceData._m0[_575].y;
    float _583 = (((((((((_492.z - _491) * _471) + _491) * cbMtdParam._m0[9u].z) * _522) - _437) * _346) + _437) * cbMtdParam._m0[15u].w) * cbInstanceData._m0[_575].z;
    float _894 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _596 = isnan(1.0) ? _894 : (isnan(_894) ? 1.0 : min(_894, 1.0));
    float _602 = cbInstanceData._m0[_573 + 6u].w * (isnan(1.0) ? _868 : (isnan(_868) ? 1.0 : min(_868, 1.0)));
    float _608 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _609 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _624 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_608, _609, (log2((isnan(cbSceneParam._m0[77u].w) ? _561 : (isnan(_561) ? cbSceneParam._m0[77u].w : min(_561, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _626 = _624.x;
    float _627 = _624.y;
    float _628 = _624.z;
    float _629 = _624.w;
    float _680;
    float _682;
    float _684;
    float _686;
    if (_561 > cbSceneParam._m0[78u].w)
    {
        float _642 = isnan(_561) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _561 : min(cbSceneParam._m0[80u].w, _561));
        float _643 = _642 / _561;
        float _654 = _643 * _200;
        float _655 = _201 * _643;
        float _656 = (-0.0) - _655;
        float _657 = _643 * _202;
        float _659 = (cbSceneParam._m0[77u].w * _656) / _642;
        float _660 = _659 + cbSceneParam._m0[79u].w;
        float _661 = cbSceneParam._m0[79u].w - _655;
        float _667 = sqrt(((_654 * _654) + (_655 * _655)) + (_657 * _657));
        float _670 = (1.0 - (cbSceneParam._m0[77u].w / _642)) * _667;
        float _676 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _678 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _778;
        if (abs((_656 - _659) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _778 = ((((_660 > 0.0) ? exp2(_676 * _660) : (2.0 - exp2(_678 * _660))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _670;
        }
        else
        {
            float _751 = 1.0 / cbSceneParam._m0[80u].x;
            float _752 = isnan(_661) ? _660 : (isnan(_660) ? _661 : max(_660, _661));
            float _753 = isnan(_661) ? _660 : (isnan(_660) ? _661 : min(_660, _661));
            float _762 = isnan(0.0) ? _752 : (isnan(_752) ? 0.0 : min(_752, 0.0));
            float _763 = isnan(0.0) ? _753 : (isnan(_753) ? 0.0 : min(_753, 0.0));
            _778 = ((abs(_667 / _656) * cbSceneParam._m0[80u].y) * ((((_762 - _763) * 2.0) - ((exp2(_676 * (isnan(0.0) ? _752 : (isnan(_752) ? 0.0 : max(_752, 0.0)))) - exp2(_676 * (isnan(0.0) ? _753 : (isnan(_753) ? 0.0 : max(_753, 0.0))))) * _751)) - ((exp2(_678 * _762) - exp2(_678 * _763)) * _751))) + (_670 * cbSceneParam._m0[80u].z);
        }
        vec4 _780 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_608, _609, 1.0), 0.0);
        float _789 = exp2((_778 * (-1.44269502162933349609375)) * (1.0 - _780.w));
        float _790 = log2(_789);
        float _806 = log2(_629);
        _680 = (exp2(_806 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_790 * cbSceneParam._m0[78u].x)) * _780.x) / cbSceneParam._m0[78u].x)) + _626;
        _682 = (exp2(_806 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_790 * cbSceneParam._m0[78u].y)) * _780.y) / cbSceneParam._m0[78u].y)) + _627;
        _684 = (exp2(_806 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_790 * cbSceneParam._m0[78u].z)) * _780.z) / cbSceneParam._m0[78u].z)) + _628;
        _686 = _789 * _629;
    }
    else
    {
        _680 = _626;
        _682 = _627;
        _684 = _628;
        _686 = _629;
    }
    float _698 = roundEven(cbMatDynParam._m0[0u].y);
    bool _699 = _698 == 3.0;
    float _700 = log2(_686);
    float _704 = exp2(_700 * cbSceneParam._m0[78u].x);
    float _705 = exp2(_700 * cbSceneParam._m0[78u].y);
    float _706 = exp2(_700 * cbSceneParam._m0[78u].z);
    float _707 = _704 * (isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0)));
    float _708 = _705 * (isnan(0.0) ? _582 : (isnan(_582) ? 0.0 : max(_582, 0.0)));
    float _709 = _706 * (isnan(0.0) ? _583 : (isnan(_583) ? 0.0 : max(_583, 0.0)));
    float _718 = (_698 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _718 * (_699 ? _707 : (_707 + (cbSceneParam._m0[72u].w * _680)));
    SV_Target.y = _718 * (_699 ? _708 : (_708 + (cbSceneParam._m0[72u].w * _682)));
    SV_Target.z = _718 * (_699 ? _709 : (_709 + (cbSceneParam._m0[72u].w * _684)));
    SV_Target.w = _602;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _581) * _596) * _704) * _718;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _582) * _596) * _705) * _718;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _583) * _596) * _706) * _718;
    SV_Target_1.w = _602;
}


