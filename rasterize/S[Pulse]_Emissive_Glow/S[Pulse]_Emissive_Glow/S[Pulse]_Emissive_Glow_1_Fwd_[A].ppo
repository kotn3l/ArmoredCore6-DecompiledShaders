#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D S_Pulse_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 1) uniform texture2D S_Pulse_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 2) uniform texture2D S_Pulse_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 3) uniform texture2D S_Pulse_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D S_Pulse_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec2 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _948;
float _949;
float _950;
float _951;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _145 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _146 = _145 * NORMAL.x;
    float _147 = _145 * NORMAL.y;
    float _148 = _145 * NORMAL.z;
    float _153;
    float _154;
    float _155;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _153 = (-0.0) - _146;
        _154 = (-0.0) - _147;
        _155 = (-0.0) - _148;
    }
    else
    {
        _153 = _146;
        _154 = _147;
        _155 = _148;
    }
    float _199 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _209 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _199);
    float _210 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _199);
    float _211 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _199);
    float _221 = sqrt(((_209 * _209) + (_210 * _210)) + (_211 * _211));
    float _227 = cbMtdParam._m0[12u].w - cbMtdParam._m0[13u].x;
    float _230 = (_221 - cbMtdParam._m0[13u].x) / (isnan(0.00999999977648258209228515625) ? _227 : (isnan(_227) ? 0.00999999977648258209228515625 : max(_227, 0.00999999977648258209228515625)));
    float _965 = isnan(0.0) ? _230 : (isnan(_230) ? 0.0 : max(_230, 0.0));
    float _233 = TEXCOORD_1.z + (-0.5);
    float _235 = TEXCOORD_1.w + (-0.5);
    float _266 = cbMtdParam._m0[14u].z * texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (fma(_235, 0.99271297454833984375, _233 * 0.12050272524356842041015625) + 0.5)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (fma(_235, 0.12050272524356842041015625, _233 * (-0.99271297454833984375)) + 0.5)) + cbTextureTilingScale._m0[4u].w)).x;
    float _270 = sin(cbMtdParam._m0[12u].z);
    float _271 = cos(cbMtdParam._m0[12u].z);
    float _272 = TEXCOORD_1.z - cbMtdParam._m0[12u].y;
    float _273 = TEXCOORD_1.w - cbMtdParam._m0[12u].y;
    float _279 = fma(_273, (-0.0) - _270, _271 * _272) + cbMtdParam._m0[12u].y;
    float _280 = fma(_273, _271, _272 * _270) + cbMtdParam._m0[12u].y;
    vec4 _302 = texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * ((cbMtdParam._m0[17u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * ((cbMtdParam._m0[17u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y)) + cbTextureTilingScale._m0[1u].w));
    float _306 = cbPerFrame._m0[22u].x * 2.0;
    float _308 = _306 * cbMtdParam._m0[13u].w;
    float _310 = (_302.x * 0.5) + (-0.25);
    float _313 = (_302.y * 0.5) + (-0.25);
    float _314 = _313 * cbMtdParam._m0[13u].y;
    float _316 = (-0.0) - (cbMtdParam._m0[13u].y * _310);
    float _317 = fract(_308);
    float _319 = fract(_308 + 0.5);
    float _320 = _317 * _316;
    float _321 = _314 * _317;
    float _324 = _319 * _316;
    float _325 = _314 * _319;
    float _331 = abs((_317 * 2.0) + (-1.0));
    vec4 _347 = texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_6, SS_WrapLinear), vec2(((_320 + _279) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, ((_321 + _280) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _349 = _347.x;
    float _355 = ((texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_6, SS_WrapLinear), vec2(((_324 + _279) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, ((_325 + _280) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x - _349) * _331) + _349;
    float _367 = inversesqrt(dot(vec3(_153, _154, _155), vec3(_153, _154, _155)));
    float _374 = inversesqrt(dot(vec3(_209, _210, _211), vec3(_209, _210, _211)));
    float _378 = dot(vec4(_374 * _209, _374 * _210, _374 * _211, 0.0), vec4(_367 * _153, _367 * _154, _367 * _155, 0.0));
    float _381 = _378 - cbMtdParam._m0[15u].x;
    float _976 = isnan(0.0) ? _381 : (isnan(_381) ? 0.0 : max(_381, 0.0));
    float _401 = cbMtdParam._m0[16u].x * cbPerFrame._m0[22u].x;
    float _404 = (_401 * cbMtdParam._m0[16u].w) + TEXCOORD_1.x;
    float _405 = (_401 * cbMtdParam._m0[17u].x) + TEXCOORD_1.y;
    vec4 _425 = texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((_320 + _404) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_321 + _405) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _427 = _425.x;
    float _428 = _425.y;
    float _429 = _425.z;
    vec4 _430 = texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((_324 + _404) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_325 + _405) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _444 = (((_430.x - _427) * _331) + _427) * cbMtdParam._m0[11u].x;
    float _445 = (((_430.y - _428) * _331) + _428) * cbMtdParam._m0[11u].y;
    float _446 = (((_430.z - _429) * _331) + _429) * cbMtdParam._m0[11u].z;
    float _459 = (cbMtdParam._m0[17u].w * _401) + TEXCOORD_1.x;
    float _460 = (cbMtdParam._m0[18u].x * _401) + TEXCOORD_1.y;
    float _463 = _306 * cbMtdParam._m0[16u].z;
    float _464 = _313 * cbMtdParam._m0[16u].y;
    float _466 = (-0.0) - (cbMtdParam._m0[16u].y * _310);
    float _467 = fract(_463);
    float _469 = fract(_463 + 0.5);
    float _480 = abs((_467 * 2.0) + (-1.0));
    vec4 _496 = texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_467 * _466) + _459) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_464 * _467) + _460) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _498 = _496.x;
    float _499 = _496.y;
    float _500 = _496.z;
    vec4 _501 = texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_469 * _466) + _459) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_464 * _469) + _460) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _523 = abs((fract(cbMtdParam._m0[14u].y * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _992 = isnan(0.0) ? _523 : (isnan(_523) ? 0.0 : max(_523, 0.0));
    float _524 = isnan(1.0) ? _992 : (isnan(_992) ? 1.0 : min(_992, 1.0));
    float _531 = ((_524 * _524) * (3.0 - (_524 * 2.0))) - cbMtdParam._m0[14u].x;
    float _541 = (((((((_501.x - _498) * _480) + _498) * cbMtdParam._m0[9u].x) * _531) - _444) * _355) + _444;
    float _549 = (((((isnan(1.0) ? _965 : (isnan(_965) ? 1.0 : min(_965, 1.0))) * TEXCOORD.x) * ((_355 * (cbMtdParam._m0[14u].w - _266)) + _266)) * (1.0 - exp2(log2(1.0 - (isnan(1.0) ? _976 : (isnan(_976) ? 1.0 : min(_976, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].y : (isnan(cbMtdParam._m0[15u].y) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].y, 0.001000000047497451305389404296875)))))) * cbMtdParam._m0[15u].z) * _541;
    float _558 = _378 - cbMtdParam._m0[12u].x;
    float _1003 = isnan(0.0) ? _558 : (isnan(_558) ? 0.0 : max(_558, 0.0));
    float _564 = exp2(log2(1.0 - (isnan(1.0) ? _1003 : (isnan(_1003) ? 1.0 : min(_1003, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[13u].z : (isnan(cbMtdParam._m0[13u].z) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[13u].z, 0.001000000047497451305389404296875))));
    float _1019 = isnan(0.0) ? _549 : (isnan(_549) ? 0.0 : max(_549, 0.0));
    float _593 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _598 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _600 = _598.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _688 = (cbMatDynParam._m0[5u].x * _221) + cbMatDynParam._m0[5u].y;
        float _1030 = isnan(0.0) ? _688 : (isnan(_688) ? 0.0 : max(_688, 0.0));
        float _689 = isnan(1.0) ? _1030 : (isnan(_1030) ? 1.0 : min(_1030, 1.0));
        float _693 = (cbMatDynParam._m0[5u].z * _221) + cbMatDynParam._m0[5u].w;
        float _1041 = isnan(0.0) ? _693 : (isnan(_693) ? 0.0 : max(_693, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1041 : (isnan(_1041) ? 1.0 : min(_1041, 1.0))) - _689)) + _689) < ((_600 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _618 = uint(roundEven(NORMAL.w)) * 13u;
    uint _619 = _618 + 9u;
    uint _620 = _619 + uint(cbMatDynParam._m0[0u].w);
    float _626 = ((((cbMtdParam._m0[10u].x * TEXCOORD.x) * _564) + _541) * cbMtdParam._m0[15u].w) * cbInstanceData._m0[_620].x;
    float _627 = ((((((((((_501.y - _499) * _480) + _499) * cbMtdParam._m0[9u].y) * _531) - _445) * _355) + _445) + ((cbMtdParam._m0[10u].y * TEXCOORD.x) * _564)) * cbMtdParam._m0[15u].w) * cbInstanceData._m0[_620].y;
    float _628 = ((((((((((_501.z - _500) * _480) + _500) * cbMtdParam._m0[9u].z) * _531) - _446) * _355) + _446) + ((cbMtdParam._m0[10u].z * TEXCOORD.x) * _564)) * cbMtdParam._m0[15u].w) * cbInstanceData._m0[_620].z;
    float _629 = isnan(0.0) ? _626 : (isnan(_626) ? 0.0 : max(_626, 0.0));
    float _630 = isnan(0.0) ? _627 : (isnan(_627) ? 0.0 : max(_627, 0.0));
    float _631 = isnan(0.0) ? _628 : (isnan(_628) ? 0.0 : max(_628, 0.0));
    float _637 = cbMtdParam._m0[2u].x * _626;
    float _638 = cbMtdParam._m0[2u].y * _627;
    float _639 = cbMtdParam._m0[2u].z * _628;
    float _1067 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _641 = isnan(1.0) ? _1067 : (isnan(_1067) ? 1.0 : min(_1067, 1.0));
    float _646 = cbInstanceData._m0[_618 + 6u].w * (isnan(1.0) ? _1019 : (isnan(_1019) ? 1.0 : min(_1019, 1.0)));
    float _652 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _653 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _668 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_652, _653, (log2((isnan(cbSceneParam._m0[77u].w) ? _593 : (isnan(_593) ? cbSceneParam._m0[77u].w : min(_593, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _670 = _668.x;
    float _671 = _668.y;
    float _672 = _668.z;
    float _673 = _668.w;
    float _747;
    float _749;
    float _751;
    float _753;
    if (_593 > cbSceneParam._m0[78u].w)
    {
        float _709 = isnan(_593) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _593 : min(cbSceneParam._m0[80u].w, _593));
        float _710 = _709 / _593;
        float _721 = _710 * _209;
        float _722 = _210 * _710;
        float _723 = (-0.0) - _722;
        float _724 = _710 * _211;
        float _726 = (cbSceneParam._m0[77u].w * _723) / _709;
        float _727 = _726 + cbSceneParam._m0[79u].w;
        float _728 = cbSceneParam._m0[79u].w - _722;
        float _734 = sqrt(((_721 * _721) + (_722 * _722)) + (_724 * _724));
        float _737 = (1.0 - (cbSceneParam._m0[77u].w / _709)) * _734;
        float _743 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _745 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _874;
        if (abs((_723 - _726) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _874 = ((((_727 > 0.0) ? exp2(_743 * _727) : (2.0 - exp2(_745 * _727))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _737;
        }
        else
        {
            float _830 = 1.0 / cbSceneParam._m0[80u].x;
            float _831 = isnan(_728) ? _727 : (isnan(_727) ? _728 : max(_727, _728));
            float _832 = isnan(_728) ? _727 : (isnan(_727) ? _728 : min(_727, _728));
            float _841 = isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : min(_831, 0.0));
            float _842 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : min(_832, 0.0));
            _874 = ((abs(_734 / _723) * cbSceneParam._m0[80u].y) * ((((_841 - _842) * 2.0) - ((exp2(_743 * (isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0)))) - exp2(_743 * (isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0))))) * _830)) - ((exp2(_745 * _841) - exp2(_745 * _842)) * _830))) + (_737 * cbSceneParam._m0[80u].z);
        }
        vec4 _876 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_652, _653, 1.0), 0.0);
        float _885 = exp2((_874 * (-1.44269502162933349609375)) * (1.0 - _876.w));
        float _886 = log2(_885);
        float _902 = log2(_673);
        _747 = (exp2(_902 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_886 * cbSceneParam._m0[78u].x)) * _876.x) / cbSceneParam._m0[78u].x)) + _670;
        _749 = (exp2(_902 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_886 * cbSceneParam._m0[78u].y)) * _876.y) / cbSceneParam._m0[78u].y)) + _671;
        _751 = (exp2(_902 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_886 * cbSceneParam._m0[78u].z)) * _876.z) / cbSceneParam._m0[78u].z)) + _672;
        _753 = _885 * _673;
    }
    else
    {
        _747 = _670;
        _749 = _671;
        _751 = _672;
        _753 = _673;
    }
    bool _912;
    vec4 _763;
    vec4 _785;
    float _787;
    float _791;
    float _792;
    float _793;
    float _796;
    float _799;
    float _802;
    float _803;
    bool _814;
    for (;;)
    {
        _763 = cbMatDynParam._m0[0u];
        float _765 = roundEven(_763.y);
        bool _766 = _765 == 3.0;
        float _767 = log2(_753);
        float _771 = exp2(_767 * cbSceneParam._m0[78u].x);
        float _772 = exp2(_767 * cbSceneParam._m0[78u].y);
        float _773 = exp2(_767 * cbSceneParam._m0[78u].z);
        float _774 = _771 * _629;
        float _775 = _772 * _630;
        float _776 = _773 * _631;
        float _783 = _600 + (-0.5);
        _785 = cbMtdParam._m0[1u];
        _787 = _785.y * _783;
        float _790 = (_765 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _791 = _790 * (_766 ? _774 : (_774 + (cbSceneParam._m0[72u].w * _747)));
        _792 = _790 * (_766 ? _775 : (_775 + (cbSceneParam._m0[72u].w * _749)));
        _793 = _790 * (_766 ? _776 : (_776 + (cbSceneParam._m0[72u].w * _751)));
        _796 = ((_637 * _641) * _771) * _790;
        _799 = ((_638 * _641) * _772) * _790;
        _802 = ((_639 * _641) * _773) * _790;
        _803 = _783 * 0.999000012874603271484375;
        _814 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_814)
        {
            if ((cbInstanceData._m0[_618 + 7u].x + _803) < 0.5)
            {
                _912 = true;
                break;
            }
        }
        uint _866 = _619 + uint(_763.w);
        if ((cbInstanceData._m0[_866].w < 1.0) && ((cbInstanceData._m0[_866].w + _803) < 0.5))
        {
            _912 = true;
            break;
        }
        if ((_787 + 1.0) < _785.x)
        {
            _912 = true;
            break;
        }
        _912 = false;
        break;
    }
    float _917;
    if (_912)
    {
        discard_state = true;
        _917 = 0.0;
    }
    else
    {
        _917 = _646;
    }
    SV_Target.x = _791;
    SV_Target.y = _792;
    SV_Target.z = _793;
    SV_Target.w = _917;
    SV_Target_1.x = _796;
    SV_Target_1.y = _799;
    SV_Target_1.z = _802;
    SV_Target_1.w = _646;
    discard_exit();
}


