#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D S_Pulse_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 1) uniform texture2D S_Pulse_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 2) uniform texture2D S_Pulse_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 3) uniform texture2D S_Pulse_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 4) uniform texture2D S_Pulse_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec2 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _925;
float _926;
float _927;
float _928;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _145 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _146 = _145 * NORMAL.x;
    float _147 = _145 * NORMAL.y;
    float _148 = _145 * NORMAL.z;
    float _153;
    float _154;
    float _155;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _153 = (-0.0) - _146;
        _154 = (-0.0) - _147;
        _155 = (-0.0) - _148;
    }
    else
    {
        _153 = _146;
        _154 = _147;
        _155 = _148;
    }
    float _199 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _209 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _199);
    float _210 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _199);
    float _211 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _199);
    float _221 = sqrt(((_209 * _209) + (_210 * _210)) + (_211 * _211));
    float _227 = cbMtdParam._m0[12u].w - cbMtdParam._m0[13u].x;
    float _230 = (_221 - cbMtdParam._m0[13u].x) / (isnan(0.00999999977648258209228515625) ? _227 : (isnan(_227) ? 0.00999999977648258209228515625 : max(_227, 0.00999999977648258209228515625)));
    float _942 = isnan(0.0) ? _230 : (isnan(_230) ? 0.0 : max(_230, 0.0));
    float _233 = TEXCOORD_1.z + (-0.5);
    float _235 = TEXCOORD_1.w + (-0.5);
    float _266 = cbMtdParam._m0[14u].z * texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (fma(_235, 0.99271297454833984375, _233 * 0.12050272524356842041015625) + 0.5)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (fma(_235, 0.12050272524356842041015625, _233 * (-0.99271297454833984375)) + 0.5)) + cbTextureTilingScale._m0[4u].w)).x;
    float _270 = sin(cbMtdParam._m0[12u].z);
    float _271 = cos(cbMtdParam._m0[12u].z);
    float _272 = TEXCOORD_1.z - cbMtdParam._m0[12u].y;
    float _273 = TEXCOORD_1.w - cbMtdParam._m0[12u].y;
    float _279 = fma(_273, (-0.0) - _270, _271 * _272) + cbMtdParam._m0[12u].y;
    float _280 = fma(_273, _271, _272 * _270) + cbMtdParam._m0[12u].y;
    vec4 _302 = texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * ((cbMtdParam._m0[17u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * ((cbMtdParam._m0[17u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y)) + cbTextureTilingScale._m0[1u].w));
    float _306 = cbPerFrame._m0[22u].x * 2.0;
    float _308 = _306 * cbMtdParam._m0[13u].w;
    float _310 = (_302.x * 0.5) + (-0.25);
    float _313 = (_302.y * 0.5) + (-0.25);
    float _314 = _313 * cbMtdParam._m0[13u].y;
    float _316 = (-0.0) - (cbMtdParam._m0[13u].y * _310);
    float _317 = fract(_308);
    float _319 = fract(_308 + 0.5);
    float _320 = _317 * _316;
    float _321 = _314 * _317;
    float _324 = _319 * _316;
    float _325 = _314 * _319;
    float _331 = abs((_317 * 2.0) + (-1.0));
    vec4 _347 = texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_6, SS_WrapLinear), vec2(((_320 + _279) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, ((_321 + _280) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _349 = _347.x;
    float _355 = ((texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_6, SS_WrapLinear), vec2(((_324 + _279) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, ((_325 + _280) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x - _349) * _331) + _349;
    float _367 = inversesqrt(dot(vec3(_153, _154, _155), vec3(_153, _154, _155)));
    float _374 = inversesqrt(dot(vec3(_209, _210, _211), vec3(_209, _210, _211)));
    float _381 = dot(vec4(_374 * _209, _374 * _210, _374 * _211, 0.0), vec4(_367 * _153, _367 * _154, _367 * _155, 0.0)) - cbMtdParam._m0[15u].x;
    float _953 = isnan(0.0) ? _381 : (isnan(_381) ? 0.0 : max(_381, 0.0));
    float _401 = cbMtdParam._m0[16u].x * cbPerFrame._m0[22u].x;
    float _404 = (_401 * cbMtdParam._m0[16u].w) + TEXCOORD_1.x;
    float _405 = (_401 * cbMtdParam._m0[17u].x) + TEXCOORD_1.y;
    vec4 _425 = texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((_320 + _404) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_321 + _405) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _427 = _425.x;
    float _428 = _425.y;
    float _429 = _425.z;
    vec4 _430 = texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((_324 + _404) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_325 + _405) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _444 = (((_430.x - _427) * _331) + _427) * cbMtdParam._m0[11u].x;
    float _445 = (((_430.y - _428) * _331) + _428) * cbMtdParam._m0[11u].y;
    float _446 = (((_430.z - _429) * _331) + _429) * cbMtdParam._m0[11u].z;
    float _459 = (cbMtdParam._m0[17u].w * _401) + TEXCOORD_1.x;
    float _460 = (cbMtdParam._m0[18u].x * _401) + TEXCOORD_1.y;
    float _463 = _306 * cbMtdParam._m0[16u].z;
    float _464 = _313 * cbMtdParam._m0[16u].y;
    float _466 = (-0.0) - (cbMtdParam._m0[16u].y * _310);
    float _467 = fract(_463);
    float _469 = fract(_463 + 0.5);
    float _480 = abs((_467 * 2.0) + (-1.0));
    vec4 _496 = texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_467 * _466) + _459) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_464 * _467) + _460) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _498 = _496.x;
    float _499 = _496.y;
    float _500 = _496.z;
    vec4 _501 = texture(sampler2D(S_Pulse_Emissive_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_469 * _466) + _459) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_464 * _469) + _460) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _523 = abs((fract(cbMtdParam._m0[14u].y * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _969 = isnan(0.0) ? _523 : (isnan(_523) ? 0.0 : max(_523, 0.0));
    float _524 = isnan(1.0) ? _969 : (isnan(_969) ? 1.0 : min(_969, 1.0));
    float _531 = ((_524 * _524) * (3.0 - (_524 * 2.0))) - cbMtdParam._m0[14u].x;
    float _541 = (((((((_501.x - _498) * _480) + _498) * cbMtdParam._m0[9u].x) * _531) - _444) * _355) + _444;
    float _549 = (((((isnan(1.0) ? _942 : (isnan(_942) ? 1.0 : min(_942, 1.0))) * TEXCOORD.x) * ((_355 * (cbMtdParam._m0[14u].w - _266)) + _266)) * (1.0 - exp2(log2(1.0 - (isnan(1.0) ? _953 : (isnan(_953) ? 1.0 : min(_953, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].y : (isnan(cbMtdParam._m0[15u].y) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].y, 0.001000000047497451305389404296875)))))) * cbMtdParam._m0[15u].z) * _541;
    float _980 = isnan(0.0) ? _549 : (isnan(_549) ? 0.0 : max(_549, 0.0));
    float _570 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _575 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _577 = _575.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _665 = (cbMatDynParam._m0[5u].x * _221) + cbMatDynParam._m0[5u].y;
        float _991 = isnan(0.0) ? _665 : (isnan(_665) ? 0.0 : max(_665, 0.0));
        float _666 = isnan(1.0) ? _991 : (isnan(_991) ? 1.0 : min(_991, 1.0));
        float _670 = (cbMatDynParam._m0[5u].z * _221) + cbMatDynParam._m0[5u].w;
        float _1002 = isnan(0.0) ? _670 : (isnan(_670) ? 0.0 : max(_670, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1002 : (isnan(_1002) ? 1.0 : min(_1002, 1.0))) - _666)) + _666) < ((_577 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _595 = uint(roundEven(NORMAL.w)) * 13u;
    uint _596 = _595 + 9u;
    uint _597 = _596 + uint(cbMatDynParam._m0[0u].w);
    float _603 = (_541 * cbMtdParam._m0[15u].w) * cbInstanceData._m0[_597].x;
    float _604 = (((((((((_501.y - _499) * _480) + _499) * cbMtdParam._m0[9u].y) * _531) - _445) * _355) + _445) * cbMtdParam._m0[15u].w) * cbInstanceData._m0[_597].y;
    float _605 = (((((((((_501.z - _500) * _480) + _500) * cbMtdParam._m0[9u].z) * _531) - _446) * _355) + _446) * cbMtdParam._m0[15u].w) * cbInstanceData._m0[_597].z;
    float _606 = isnan(0.0) ? _603 : (isnan(_603) ? 0.0 : max(_603, 0.0));
    float _607 = isnan(0.0) ? _604 : (isnan(_604) ? 0.0 : max(_604, 0.0));
    float _608 = isnan(0.0) ? _605 : (isnan(_605) ? 0.0 : max(_605, 0.0));
    float _614 = cbMtdParam._m0[2u].x * _603;
    float _615 = cbMtdParam._m0[2u].y * _604;
    float _616 = cbMtdParam._m0[2u].z * _605;
    float _1028 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _618 = isnan(1.0) ? _1028 : (isnan(_1028) ? 1.0 : min(_1028, 1.0));
    float _623 = cbInstanceData._m0[_595 + 6u].w * (isnan(1.0) ? _980 : (isnan(_980) ? 1.0 : min(_980, 1.0)));
    float _629 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _630 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _645 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_629, _630, (log2((isnan(cbSceneParam._m0[77u].w) ? _570 : (isnan(_570) ? cbSceneParam._m0[77u].w : min(_570, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _647 = _645.x;
    float _648 = _645.y;
    float _649 = _645.z;
    float _650 = _645.w;
    float _724;
    float _726;
    float _728;
    float _730;
    if (_570 > cbSceneParam._m0[78u].w)
    {
        float _686 = isnan(_570) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _570 : min(cbSceneParam._m0[80u].w, _570));
        float _687 = _686 / _570;
        float _698 = _687 * _209;
        float _699 = _210 * _687;
        float _700 = (-0.0) - _699;
        float _701 = _687 * _211;
        float _703 = (cbSceneParam._m0[77u].w * _700) / _686;
        float _704 = _703 + cbSceneParam._m0[79u].w;
        float _705 = cbSceneParam._m0[79u].w - _699;
        float _711 = sqrt(((_698 * _698) + (_699 * _699)) + (_701 * _701));
        float _714 = (1.0 - (cbSceneParam._m0[77u].w / _686)) * _711;
        float _720 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _722 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _851;
        if (abs((_700 - _703) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _851 = ((((_704 > 0.0) ? exp2(_720 * _704) : (2.0 - exp2(_722 * _704))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _714;
        }
        else
        {
            float _807 = 1.0 / cbSceneParam._m0[80u].x;
            float _808 = isnan(_705) ? _704 : (isnan(_704) ? _705 : max(_704, _705));
            float _809 = isnan(_705) ? _704 : (isnan(_704) ? _705 : min(_704, _705));
            float _818 = isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : min(_808, 0.0));
            float _819 = isnan(0.0) ? _809 : (isnan(_809) ? 0.0 : min(_809, 0.0));
            _851 = ((abs(_711 / _700) * cbSceneParam._m0[80u].y) * ((((_818 - _819) * 2.0) - ((exp2(_720 * (isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0)))) - exp2(_720 * (isnan(0.0) ? _809 : (isnan(_809) ? 0.0 : max(_809, 0.0))))) * _807)) - ((exp2(_722 * _818) - exp2(_722 * _819)) * _807))) + (_714 * cbSceneParam._m0[80u].z);
        }
        vec4 _853 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_629, _630, 1.0), 0.0);
        float _862 = exp2((_851 * (-1.44269502162933349609375)) * (1.0 - _853.w));
        float _863 = log2(_862);
        float _879 = log2(_650);
        _724 = (exp2(_879 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_863 * cbSceneParam._m0[78u].x)) * _853.x) / cbSceneParam._m0[78u].x)) + _647;
        _726 = (exp2(_879 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_863 * cbSceneParam._m0[78u].y)) * _853.y) / cbSceneParam._m0[78u].y)) + _648;
        _728 = (exp2(_879 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_863 * cbSceneParam._m0[78u].z)) * _853.z) / cbSceneParam._m0[78u].z)) + _649;
        _730 = _862 * _650;
    }
    else
    {
        _724 = _647;
        _726 = _648;
        _728 = _649;
        _730 = _650;
    }
    bool _889;
    vec4 _740;
    vec4 _762;
    float _764;
    float _768;
    float _769;
    float _770;
    float _773;
    float _776;
    float _779;
    float _780;
    bool _791;
    for (;;)
    {
        _740 = cbMatDynParam._m0[0u];
        float _742 = roundEven(_740.y);
        bool _743 = _742 == 3.0;
        float _744 = log2(_730);
        float _748 = exp2(_744 * cbSceneParam._m0[78u].x);
        float _749 = exp2(_744 * cbSceneParam._m0[78u].y);
        float _750 = exp2(_744 * cbSceneParam._m0[78u].z);
        float _751 = _748 * _606;
        float _752 = _749 * _607;
        float _753 = _750 * _608;
        float _760 = _577 + (-0.5);
        _762 = cbMtdParam._m0[1u];
        _764 = _762.y * _760;
        float _767 = (_742 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _768 = _767 * (_743 ? _751 : (_751 + (cbSceneParam._m0[72u].w * _724)));
        _769 = _767 * (_743 ? _752 : (_752 + (cbSceneParam._m0[72u].w * _726)));
        _770 = _767 * (_743 ? _753 : (_753 + (cbSceneParam._m0[72u].w * _728)));
        _773 = ((_614 * _618) * _748) * _767;
        _776 = ((_615 * _618) * _749) * _767;
        _779 = ((_616 * _618) * _750) * _767;
        _780 = _760 * 0.999000012874603271484375;
        _791 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_791)
        {
            if ((cbInstanceData._m0[_595 + 7u].x + _780) < 0.5)
            {
                _889 = true;
                break;
            }
        }
        uint _843 = _596 + uint(_740.w);
        if ((cbInstanceData._m0[_843].w < 1.0) && ((cbInstanceData._m0[_843].w + _780) < 0.5))
        {
            _889 = true;
            break;
        }
        if ((_764 + 1.0) < _762.x)
        {
            _889 = true;
            break;
        }
        _889 = false;
        break;
    }
    float _894;
    if (_889)
    {
        discard_state = true;
        _894 = 0.0;
    }
    else
    {
        _894 = _623;
    }
    SV_Target.x = _768;
    SV_Target.y = _769;
    SV_Target.z = _770;
    SV_Target.w = _894;
    SV_Target_1.x = _773;
    SV_Target_1.y = _776;
    SV_Target_1.z = _779;
    SV_Target_1.w = _623;
    discard_exit();
}


