#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TANGENT_2_1;
layout(location = 4) out vec4 TEXCOORD_3;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out float TEXCOORD_8;
layout(location = 6, component = 1) out float TEXCOORD_9;
layout(location = 6, component = 2) out float TEXCOORD_10;
layout(location = 7) out vec2 TEXCOORD_12;
layout(location = 6, component = 3) out float TEXCOORD_16;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_9 = 0.0;
    TEXCOORD_10 = 0.0;
    TEXCOORD_12.x = 0.0;
    TEXCOORD_12.y = 0.0;
    TEXCOORD_16 = 0.0;
    float _215 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _217 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _218 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _227 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _228 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _229 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _239 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _240 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _241 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _251 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _253 = texelFetch(g_InstanceIndexBuffer, int(_251));
    uint _254 = _253.x;
    precise float _255 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _260 = isnan(_255) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _255 : max(0.001000000047497451305389404296875, _255));
    precise float _262 = BLENDWEIGHT.x / _260;
    precise float _263 = BLENDWEIGHT.y / _260;
    precise float _264 = BLENDWEIGHT.z / _260;
    precise float _265 = BLENDWEIGHT.w / _260;
    uvec4 _272 = floatBitsToUint(cbInstanceData._m0[(_254 * 13u) + 4u]);
    uint _273 = _272.x;
    uint _275 = (_273 + uint(float(BLENDINDICES.x))) * 3u;
    uint _282 = _275 + 1u;
    uint _289 = _275 + 2u;
    precise float _296 = _262 * cbObjMatrix._m0[_275].x;
    precise float _297 = _262 * cbObjMatrix._m0[_282].x;
    precise float _298 = _262 * cbObjMatrix._m0[_289].x;
    precise float _299 = _262 * cbObjMatrix._m0[_275].y;
    precise float _300 = _262 * cbObjMatrix._m0[_282].y;
    precise float _301 = _262 * cbObjMatrix._m0[_289].y;
    precise float _302 = _262 * cbObjMatrix._m0[_275].z;
    precise float _303 = _262 * cbObjMatrix._m0[_282].z;
    precise float _304 = _262 * cbObjMatrix._m0[_289].z;
    precise float _305 = _262 * cbObjMatrix._m0[_275].w;
    precise float _306 = _262 * cbObjMatrix._m0[_282].w;
    precise float _307 = _262 * cbObjMatrix._m0[_289].w;
    uint _310 = (_273 + uint(float(BLENDINDICES.y))) * 3u;
    uint _317 = _310 + 1u;
    uint _324 = _310 + 2u;
    precise float _331 = _263 * cbObjMatrix._m0[_310].x;
    precise float _332 = _263 * cbObjMatrix._m0[_317].x;
    precise float _333 = _263 * cbObjMatrix._m0[_324].x;
    precise float _334 = _263 * cbObjMatrix._m0[_310].y;
    precise float _335 = _263 * cbObjMatrix._m0[_317].y;
    precise float _336 = _263 * cbObjMatrix._m0[_324].y;
    precise float _337 = _263 * cbObjMatrix._m0[_310].z;
    precise float _338 = _263 * cbObjMatrix._m0[_317].z;
    precise float _339 = _263 * cbObjMatrix._m0[_324].z;
    precise float _340 = _263 * cbObjMatrix._m0[_310].w;
    precise float _341 = _263 * cbObjMatrix._m0[_317].w;
    precise float _342 = _263 * cbObjMatrix._m0[_324].w;
    precise float _343 = _296 + _331;
    precise float _344 = _297 + _332;
    precise float _345 = _298 + _333;
    precise float _346 = _299 + _334;
    precise float _347 = _300 + _335;
    precise float _348 = _301 + _336;
    precise float _349 = _302 + _337;
    precise float _350 = _303 + _338;
    precise float _351 = _304 + _339;
    precise float _352 = _305 + _340;
    precise float _353 = _306 + _341;
    precise float _354 = _307 + _342;
    uint _357 = (_273 + uint(float(BLENDINDICES.z))) * 3u;
    uint _364 = _357 + 1u;
    uint _371 = _357 + 2u;
    precise float _378 = _264 * cbObjMatrix._m0[_357].x;
    precise float _379 = _264 * cbObjMatrix._m0[_364].x;
    precise float _380 = _264 * cbObjMatrix._m0[_371].x;
    precise float _381 = _264 * cbObjMatrix._m0[_357].y;
    precise float _382 = _264 * cbObjMatrix._m0[_364].y;
    precise float _383 = _264 * cbObjMatrix._m0[_371].y;
    precise float _384 = _264 * cbObjMatrix._m0[_357].z;
    precise float _385 = _264 * cbObjMatrix._m0[_364].z;
    precise float _386 = _264 * cbObjMatrix._m0[_371].z;
    precise float _387 = _264 * cbObjMatrix._m0[_357].w;
    precise float _388 = _264 * cbObjMatrix._m0[_364].w;
    precise float _389 = _264 * cbObjMatrix._m0[_371].w;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    uint _404 = (_273 + uint(float(BLENDINDICES.w))) * 3u;
    uint _411 = _404 + 1u;
    uint _418 = _404 + 2u;
    precise float _425 = _265 * cbObjMatrix._m0[_404].x;
    precise float _426 = _265 * cbObjMatrix._m0[_411].x;
    precise float _427 = _265 * cbObjMatrix._m0[_418].x;
    precise float _428 = _265 * cbObjMatrix._m0[_404].y;
    precise float _429 = _265 * cbObjMatrix._m0[_411].y;
    precise float _430 = _265 * cbObjMatrix._m0[_418].y;
    precise float _431 = _265 * cbObjMatrix._m0[_404].z;
    precise float _432 = _265 * cbObjMatrix._m0[_411].z;
    precise float _433 = _265 * cbObjMatrix._m0[_418].z;
    precise float _434 = _265 * cbObjMatrix._m0[_404].w;
    precise float _435 = _265 * cbObjMatrix._m0[_411].w;
    precise float _436 = _265 * cbObjMatrix._m0[_418].w;
    precise float _437 = _390 + _425;
    precise float _438 = _391 + _426;
    precise float _439 = _392 + _427;
    precise float _440 = _393 + _428;
    precise float _441 = _394 + _429;
    precise float _442 = _395 + _430;
    precise float _443 = _396 + _431;
    precise float _444 = _397 + _432;
    precise float _445 = _398 + _433;
    precise float _446 = _399 + _434;
    precise float _447 = _400 + _435;
    precise float _448 = _401 + _436;
    precise float _449 = POSITION.x * _437;
    precise float _450 = POSITION.y * _440;
    precise float _451 = _450 + _449;
    precise float _452 = POSITION.z * _443;
    precise float _453 = _452 + _451;
    precise float _454 = 1.0 * _446;
    precise float _455 = _454 + _453;
    precise float _456 = POSITION.x * _438;
    precise float _457 = POSITION.y * _441;
    precise float _458 = _457 + _456;
    precise float _459 = POSITION.z * _444;
    precise float _460 = _459 + _458;
    precise float _461 = 1.0 * _447;
    precise float _462 = _461 + _460;
    precise float _463 = POSITION.x * _439;
    precise float _464 = POSITION.y * _442;
    precise float _465 = _464 + _463;
    precise float _466 = POSITION.z * _445;
    precise float _467 = _466 + _465;
    precise float _468 = 1.0 * _448;
    precise float _469 = _468 + _467;
    float _475 = cbSceneParam._m0[3u].x - _455;
    float _476 = cbSceneParam._m0[3u].y - _462;
    float _477 = cbSceneParam._m0[3u].z - _469;
    precise float _512 = _455 - cbSceneParam._m0[3u].x;
    precise float _513 = _462 - cbSceneParam._m0[3u].y;
    precise float _514 = _469 - cbSceneParam._m0[3u].z;
    precise float _542 = _512 * cbSceneParam._m0[24u].x;
    precise float _543 = _513 * cbSceneParam._m0[24u].y;
    precise float _544 = _543 + _542;
    precise float _545 = _514 * cbSceneParam._m0[24u].z;
    precise float _546 = _545 + _544;
    precise float _547 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _548 = _547 + _546;
    precise float _549 = _512 * cbSceneParam._m0[25u].x;
    precise float _550 = _513 * cbSceneParam._m0[25u].y;
    precise float _551 = _550 + _549;
    precise float _552 = _514 * cbSceneParam._m0[25u].z;
    precise float _553 = _552 + _551;
    precise float _554 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _555 = _554 + _553;
    precise float _556 = _512 * cbSceneParam._m0[26u].x;
    precise float _557 = _513 * cbSceneParam._m0[26u].y;
    precise float _558 = _557 + _556;
    precise float _559 = _514 * cbSceneParam._m0[26u].z;
    precise float _560 = _559 + _558;
    precise float _561 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _562 = _561 + _560;
    precise float _563 = _512 * cbSceneParam._m0[27u].x;
    precise float _564 = _513 * cbSceneParam._m0[27u].y;
    precise float _565 = _564 + _563;
    precise float _566 = _514 * cbSceneParam._m0[27u].z;
    precise float _567 = _566 + _565;
    precise float _568 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _569 = _568 + _567;
    gl_Position.x = _548;
    gl_Position.y = _555;
    gl_Position.z = _562;
    gl_Position.w = _569;
    NORMAL_1.x = fma(_218, _443, fma(_217, _440, _437 * _215));
    NORMAL_1.y = fma(_218, _444, fma(_217, _441, _438 * _215));
    NORMAL_1.z = fma(_218, _445, fma(_217, _442, _439 * _215));
    NORMAL_1.w = float(_254);
    TANGENT_1.x = fma(_229, _443, fma(_228, _440, _437 * _227));
    TANGENT_1.y = fma(_229, _444, fma(_228, _441, _438 * _227));
    TANGENT_1.z = fma(_229, _445, fma(_228, _442, _439 * _227));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_241, _443, fma(_240, _440, _437 * _239));
    TANGENT_2_1.y = fma(_241, _444, fma(_240, _441, _438 * _239));
    TANGENT_2_1.z = fma(_241, _445, fma(_240, _442, _439 * _239));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_3.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_3.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
    TEXCOORD_8 = TEXCOORD_2.x;
    TEXCOORD_9 = TEXCOORD_2.y;
    TEXCOORD_10 = TEXCOORD_2.z;
    TEXCOORD_12.x = _562;
    TEXCOORD_12.y = _569;
    TEXCOORD_16 = sqrt(((_475 * _475) + (_476 * _476)) + (_477 * _477));
}


