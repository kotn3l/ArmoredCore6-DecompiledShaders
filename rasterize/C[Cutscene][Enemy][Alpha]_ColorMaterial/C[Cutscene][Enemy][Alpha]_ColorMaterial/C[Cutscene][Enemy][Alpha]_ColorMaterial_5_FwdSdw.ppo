#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_23;
layout(set = 0, binding = 11) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_24;
layout(set = 0, binding = 12) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_4;
layout(set = 0, binding = 13) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_6;
layout(set = 0, binding = 14) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_7;
layout(set = 0, binding = 15) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_14;
layout(set = 0, binding = 3) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_16;
layout(set = 0, binding = 4) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_17;
layout(set = 0, binding = 5) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_18;
layout(set = 0, binding = 6) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_19;
layout(set = 0, binding = 7) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_20;
layout(set = 0, binding = 9) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_22;
layout(set = 0, binding = 17) uniform texture2DArray C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_0;
layout(set = 0, binding = 18) uniform texture2DArray C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in float TEXCOORD_8;
layout(location = 7, component = 1) in float TEXCOORD_9;
layout(location = 7, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1600;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _238 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _239 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _240 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _246 = inversesqrt(dot(vec3(_238, _239, _240), vec3(_238, _239, _240)));
    float _253 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _260 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _323 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _327 = _323.z;
    float _340 = exp2(log2((1.0 - _327) * cbMtdParam._m0[26u].z) * cbMtdParam._m0[25u].w);
    float _341 = isnan(0.0) ? _340 : (isnan(_340) ? 0.0 : max(_340, 0.0));
    float _342 = isnan(1.0) ? _341 : (isnan(_341) ? 1.0 : min(_341, 1.0));
    vec4 _359 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w));
    float _371 = exp2(log2(_359.w * cbMtdParam._m0[29u].y) * cbMtdParam._m0[23u].x);
    float _372 = isnan(0.0) ? _371 : (isnan(_371) ? 0.0 : max(_371, 0.0));
    float _373 = isnan(1.0) ? _372 : (isnan(_372) ? 1.0 : min(_372, 1.0));
    float _382 = exp2(log2(cbMtdParam._m0[23u].y * _327) * cbMtdParam._m0[22u].y);
    float _383 = isnan(0.0) ? _382 : (isnan(_382) ? 0.0 : max(_382, 0.0));
    float _384 = isnan(1.0) ? _383 : (isnan(_383) ? 1.0 : min(_383, 1.0));
    vec4 _396 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _399 = _396.y;
    float _402 = (_396.x + (-0.02500000037252902984619140625)) * 8.0;
    float _406 = roundEven(5.0 - _402);
    float _407 = isnan(0.0) ? _406 : (isnan(_406) ? 0.0 : max(_406, 0.0));
    float _408 = isnan(4.0) ? _407 : (isnan(_407) ? 4.0 : min(_407, 4.0));
    float _420 = floor(_408);
    vec4 _423 = texture(sampler2DArray(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_0, SS_DiffuseMap), vec3((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w, _420));
    float _216[6];
    float _217[6];
    float _218[6];
    _216[0u] = cbMtdParam._m0[17u].x;
    _217[0u] = cbMtdParam._m0[17u].y;
    _218[0u] = cbMtdParam._m0[17u].z;
    _216[1u] = cbMtdParam._m0[15u].x;
    _217[1u] = cbMtdParam._m0[15u].y;
    _218[1u] = cbMtdParam._m0[15u].z;
    _216[2u] = cbMtdParam._m0[14u].x;
    _217[2u] = cbMtdParam._m0[14u].y;
    _218[2u] = cbMtdParam._m0[14u].z;
    _216[3u] = cbMtdParam._m0[13u].x;
    _217[3u] = cbMtdParam._m0[13u].y;
    _218[3u] = cbMtdParam._m0[13u].z;
    _216[4u] = cbMtdParam._m0[12u].x;
    _217[4u] = cbMtdParam._m0[12u].y;
    _218[4u] = cbMtdParam._m0[12u].z;
    _216[5u] = cbMtdParam._m0[18u].x;
    _217[5u] = cbMtdParam._m0[18u].y;
    _218[5u] = cbMtdParam._m0[18u].z;
    float _487 = roundEven(_402);
    float _488 = isnan(0.0) ? _487 : (isnan(_487) ? 0.0 : max(_487, 0.0));
    uint _490 = uint(int(isnan(5.0) ? _488 : (isnan(_488) ? 5.0 : min(_488, 5.0))));
    vec4 _520 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _531 = cbMtdParam._m0[9u].x * _520.x;
    float _532 = cbMtdParam._m0[9u].y * _520.y;
    float _533 = cbMtdParam._m0[9u].z * _520.z;
    float _540 = ((((((_216[_490] - cbMtdParam._m0[10u].x) * _399) + cbMtdParam._m0[10u].x) * _423.x) - _531) * _384) + _531;
    float _541 = ((((((_217[_490] - cbMtdParam._m0[10u].y) * _399) + cbMtdParam._m0[10u].y) * _423.y) - _532) * _384) + _532;
    float _542 = ((((((_218[_490] - cbMtdParam._m0[10u].z) * _399) + cbMtdParam._m0[10u].z) * _423.z) - _533) * _384) + _533;
    float _548 = exp2(log2(_323.w) * cbMtdParam._m0[23u].w);
    vec4 _561 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _581 = (((cbMtdParam._m0[16u].x * _561.x) - _540) * _548) + _540;
    float _582 = (((cbMtdParam._m0[16u].y * _561.y) - _541) * _548) + _541;
    float _583 = (((cbMtdParam._m0[16u].z * _561.z) - _542) * _548) + _542;
    vec4 _595 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _615 = (((cbMtdParam._m0[19u].x * _595.x) - _581) * _373) + _581;
    float _616 = (((cbMtdParam._m0[19u].y * _595.y) - _582) * _373) + _582;
    float _617 = (((cbMtdParam._m0[19u].z * _595.z) - _583) * _373) + _583;
    vec4 _629 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_19, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _654 = (_359.x * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].x * _629.x) - _615) * _342) + _615);
    float _656 = (_359.y * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].y * _629.y) - _616) * _342) + _616);
    float _658 = (_359.z * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].z * _629.z) - _617) * _342) + _617);
    vec4 _670 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_17, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _689 = TEXCOORD_5.x - ((cbMtdParam._m0[24u].x * (1.0 - TEXCOORD_5.x)) * (texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x + 0.00999999977648258209228515625));
    float _691 = _689 * (cbMtdParam._m0[24u].z + 1.0);
    float _4258 = isnan(0.0) ? _691 : (isnan(_691) ? 0.0 : max(_691, 0.0));
    float _692 = isnan(1.0) ? _4258 : (isnan(_4258) ? 1.0 : min(_4258, 1.0));
    float _699 = (_692 * ((cbMtdParam._m0[11u].x * _670.x) - _654)) + _654;
    float _700 = (((cbMtdParam._m0[11u].y * _670.y) - _656) * _692) + _656;
    float _701 = (((cbMtdParam._m0[11u].z * _670.z) - _658) * _692) + _658;
    float _705 = cbMtdParam._m0[28u].x * TEXCOORD_8;
    float _713 = (_705 - (((texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_23, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x + 0.00999999977648258209228515625) * cbMtdParam._m0[27u].z) * (1.0 - _705))) * (cbMtdParam._m0[27u].w + 1.0);
    float _4269 = isnan(0.0) ? _713 : (isnan(_713) ? 0.0 : max(_713, 0.0));
    float _714 = isnan(1.0) ? _4269 : (isnan(_4269) ? 1.0 : min(_4269, 1.0));
    float _721 = ((cbMtdParam._m0[21u].x - _699) * _714) + _699;
    float _722 = ((cbMtdParam._m0[21u].y - _700) * _714) + _700;
    float _723 = ((cbMtdParam._m0[21u].z - _701) * _714) + _701;
    vec4 _736 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_24, SS_ClampLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.z) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.w) + cbTextureTilingScale._m0[11u].w));
    float _744 = (_736.x + (-1.0)) + (cbMtdParam._m0[28u].y * 2.0);
    float _4280 = isnan(0.0) ? _744 : (isnan(_744) ? 0.0 : max(_744, 0.0));
    float _750 = exp2(log2(cbMtdParam._m0[28u].w * (isnan(1.0) ? _4280 : (isnan(_4280) ? 1.0 : min(_4280, 1.0)))) * cbMtdParam._m0[28u].z);
    float _4291 = isnan(0.0) ? _750 : (isnan(_750) ? 0.0 : max(_750, 0.0));
    float _751 = isnan(1.0) ? _4291 : (isnan(_4291) ? 1.0 : min(_4291, 1.0));
    float _211[5];
    float _212[5];
    _211[0u] = cbMtdParam._m0[29u].z;
    _212[0u] = cbMtdParam._m0[29u].w;
    _211[1u] = cbMtdParam._m0[31u].z;
    _212[1u] = cbMtdParam._m0[31u].w;
    _211[2u] = cbMtdParam._m0[31u].x;
    _212[2u] = cbMtdParam._m0[31u].y;
    _211[3u] = cbMtdParam._m0[30u].z;
    _212[3u] = cbMtdParam._m0[30u].w;
    _211[4u] = cbMtdParam._m0[30u].x;
    _212[4u] = cbMtdParam._m0[30u].y;
    float _790 = isnan(0.0) ? _408 : (isnan(_408) ? 0.0 : max(_408, 0.0));
    uint _792 = uint(int(isnan(4.0) ? _790 : (isnan(_790) ? 4.0 : min(_790, 4.0))));
    float _799 = ((_212[_792] - cbMtdParam._m0[22u].z) * _384) + cbMtdParam._m0[22u].z;
    float _802 = ((cbMtdParam._m0[22u].w - _799) * _548) + _799;
    float _805 = ((cbMtdParam._m0[25u].x - _802) * _373) + _802;
    float _808 = ((cbMtdParam._m0[26u].x - _805) * _342) + _805;
    float _813 = (cbMtdParam._m0[24u].y + 1.0) * _689;
    float _4312 = isnan(0.0) ? _813 : (isnan(_813) ? 0.0 : max(_813, 0.0));
    float _814 = isnan(1.0) ? _4312 : (isnan(_4312) ? 1.0 : min(_4312, 1.0));
    float _816 = _808 - (_808 * _814);
    float _818 = _816 - (_816 * _705);
    vec4 _831 = texture(sampler2DArray(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_1, SS_BumpMap), vec3((cbTextureTilingScale._m0[18u].x * TEXCOORD.x) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD.y) + cbTextureTilingScale._m0[18u].w, _420));
    vec4 _848 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w));
    float _850 = _848.x;
    float _851 = _848.y;
    float _856 = cbMtdParam._m0[22u].x + _848.z;
    float _859 = (((_831.z + _211[_792]) - _856) * _384) + _856;
    vec4 _871 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.x) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.y) + cbTextureTilingScale._m0[15u].w));
    float _882 = (((_871.z - _859) + cbMtdParam._m0[29u].x) * _548) + _859;
    float _887 = ((((_327 * 2.0) * _882) - _882) * cbMtdParam._m0[24u].w) + _882;
    vec4 _899 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w));
    float _910 = (((cbMtdParam._m0[23u].z + _899.z) - _887) * _373) + _887;
    vec4 _923 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_20, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _934 = (((_923.z - _910) + cbMtdParam._m0[26u].y) * _342) + _910;
    vec4 _946 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _957 = ((_946.z - _934) * _814) + _934;
    vec4 _972 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_22, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _986 = ((cbMtdParam._m0[27u].y * _705) * ((_972.z * cbMtdParam._m0[27u].x) - _957)) + _957;
    float _1001 = ((_831.x - _850) * _384) + _850;
    float _1002 = ((_831.y - _851) * _384) + _851;
    float _1007 = ((_871.x - _1001) * _548) + _1001;
    float _1008 = ((_871.y - _1002) * _548) + _1002;
    float _1013 = ((_899.x - _1007) * _373) + _1007;
    float _1014 = ((_899.y - _1008) * _373) + _1008;
    float _1023 = ((((_923.x - _1013) * _342) + _1013) * 2.0) + (-1.0);
    float _1024 = ((((_923.y - _1014) * _342) + _1014) * 2.0) + (-1.0);
    float _1025 = dot(vec2(_1023, _1024), vec2(_1023, _1024));
    float _4323 = isnan(0.0) ? _1025 : (isnan(_1025) ? 0.0 : max(_1025, 0.0));
    float _1030 = sqrt(1.0 - (isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0))));
    float _1046 = (((cbMtdParam._m0[25u].y * ((_323.x * 2.0) + (-1.0))) + _1023) + (((((_946.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[25u].z) * _814)) + ((((_972.x * 2.0) + (-1.0)) * _705) * cbMtdParam._m0[26u].w);
    float _1047 = (((cbMtdParam._m0[25u].y * ((_323.y * 2.0) + (-1.0))) + _1024) + (((((_946.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[25u].z) * _814)) + (((cbMtdParam._m0[28u].x * TEXCOORD_9) * ((_972.y * 2.0) + (-1.0))) * cbMtdParam._m0[26u].w);
    float _1050 = fma(_1030, _253 * NORMAL.x, fma(_1047, _260 * TANGENT.x, (_246 * _238) * _1046));
    float _1053 = fma(_1030, _253 * NORMAL.y, fma(_1047, _260 * TANGENT.y, (_246 * _239) * _1046));
    float _1056 = fma(_1030, _253 * NORMAL.z, fma(_1047, _260 * TANGENT.z, (_246 * _240) * _1046));
    float _1060 = inversesqrt(dot(vec3(_1050, _1053, _1056), vec3(_1050, _1053, _1056)));
    float _1061 = _1060 * _1050;
    float _1062 = _1060 * _1053;
    float _1063 = _1060 * _1056;
    float _4334 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
    float _1064 = isnan(1.0) ? _4334 : (isnan(_4334) ? 1.0 : min(_4334, 1.0));
    float _4345 = isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0));
    float _1065 = isnan(1.0) ? _4345 : (isnan(_4345) ? 1.0 : min(_4345, 1.0));
    float _4356 = isnan(0.0) ? _721 : (isnan(_721) ? 0.0 : max(_721, 0.0));
    float _4367 = isnan(0.0) ? _722 : (isnan(_722) ? 0.0 : max(_722, 0.0));
    float _4378 = isnan(0.0) ? _723 : (isnan(_723) ? 0.0 : max(_723, 0.0));
    float _4389 = isnan(0.0) ? _818 : (isnan(_818) ? 0.0 : max(_818, 0.0));
    float _1069 = isnan(1.0) ? _4389 : (isnan(_4389) ? 1.0 : min(_4389, 1.0));
    float _1085 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1125 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1135 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1125);
    float _1136 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1125);
    float _1137 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1125);
    float _1141 = inversesqrt(dot(vec3(_1135, _1136, _1137), vec3(_1135, _1136, _1137)));
    float _1142 = _1135 * _1141;
    float _1143 = _1136 * _1141;
    float _1144 = _1137 * _1141;
    float _1150 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1151 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1169 = fma(_1063, cbSceneParam._m0[5u].z, fma(_1062, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1061));
    float _1172 = fma(_1063, cbSceneParam._m0[6u].z, fma(_1062, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1061));
    float _1175 = fma(_1063, cbSceneParam._m0[7u].z, fma(_1062, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1061));
    uint _1188 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1190 = (_1188 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1196 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4356 : (isnan(_4356) ? 1.0 : min(_4356, 1.0)))) * cbInstanceData._m0[_1190].x;
    float _1197 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4367 : (isnan(_4367) ? 1.0 : min(_4367, 1.0)))) * cbInstanceData._m0[_1190].y;
    float _1198 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4378 : (isnan(_4378) ? 1.0 : min(_4378, 1.0)))) * cbInstanceData._m0[_1190].z;
    float _4400 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
    float _1199 = isnan(1.0) ? _4400 : (isnan(_4400) ? 1.0 : min(_4400, 1.0));
    float _4411 = isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0));
    float _1200 = isnan(1.0) ? _4411 : (isnan(_4411) ? 1.0 : min(_4411, 1.0));
    float _4422 = isnan(0.0) ? _1198 : (isnan(_1198) ? 0.0 : max(_1198, 0.0));
    float _1201 = isnan(1.0) ? _4422 : (isnan(_4422) ? 1.0 : min(_4422, 1.0));
    float _1202 = 1.0 - _1069;
    float _1203 = _1199 * _1202;
    float _1204 = _1200 * _1202;
    float _1205 = _1201 * _1202;
    float _1210 = (_1199 + (-0.039999999105930328369140625)) * _1069;
    float _1211 = (_1200 + (-0.039999999105930328369140625)) * _1069;
    float _1212 = (_1201 + (-0.039999999105930328369140625)) * _1069;
    float _1213 = _1210 + 0.039999999105930328369140625;
    float _1215 = _1211 + 0.039999999105930328369140625;
    float _1216 = _1212 + 0.039999999105930328369140625;
    vec4 _1225 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1150, cbSceneParam._m0[86u].y * _1151));
    float _1228 = _1225.x * TEXCOORD_5.w;
    float _1229 = dot(vec3(_1061, _1062, _1063), vec3(_1142, _1143, _1144));
    float _1232 = _1229 * 2.0;
    float _1236 = (_1232 * _1061) - _1142;
    float _1237 = (_1232 * _1062) - _1143;
    float _1238 = (_1232 * _1063) - _1144;
    float _1242 = abs(dot(vec3(_1142, _1143, _1144), vec3(_1061, _1062, _1063)));
    float _4433 = isnan(0.0) ? _1242 : (isnan(_1242) ? 0.0 : max(_1242, 0.0));
    float _1244 = sqrt(_1065);
    float _1255 = exp2((_1244 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4433 : (isnan(_4433) ? 1.0 : min(_4433, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1244 * 3.0));
    float _1261 = (1.0 - _1255) * ((_1244 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1262 = _1255 * _1244;
    float _1290 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1294 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1298 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1599;
    float _1601;
    float _1602;
    float _1603;
    float _1604;
    float _1605;
    float _1606;
    float _1607;
    float _1608;
    float _1609;
    float _1610;
    float _1611;
    float _1612;
    float _1613;
    float _1614;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1324 = fma(_1298, cbModelParam._m0[26u].z, fma(_1294, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1290));
        float _1328 = fma(_1298, cbModelParam._m0[27u].z, fma(_1294, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1290));
        float _1332 = fma(_1298, cbModelParam._m0[28u].z, fma(_1294, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1290));
        float _1357 = _1290 + _1061;
        float _1358 = _1294 + _1062;
        float _1359 = _1298 + _1063;
        float _1369 = fma(_1359, cbModelParam._m0[26u].z, fma(_1358, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1357)) - _1324;
        float _1370 = fma(_1359, cbModelParam._m0[27u].z, fma(_1358, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1357)) - _1328;
        float _1371 = fma(_1359, cbModelParam._m0[28u].z, fma(_1358, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1357)) - _1332;
        float _1375 = inversesqrt(dot(vec3(_1369, _1370, _1371), vec3(_1369, _1370, _1371)));
        float _1388 = ((_1375 * _1369) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1324 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1389 = ((_1375 * _1370) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1328 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1390 = ((_1375 * _1371) / cbModelParam._m0[34u].z) + ((((((_1332 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1393 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1388, _1389, _1390), 0.0);
        vec4 _1400 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1388, _1389, _1390), 0.0);
        vec4 _1407 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1388, _1389, _1390), 0.0);
        vec4 _1414 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1388, _1389, _1390), 0.0);
        float _1427 = exp2((_1393.w + (-0.5)) * 20.0) * 2.0;
        float _1428 = _1427 * (_1393.x + (-0.5));
        float _1429 = _1427 * (_1393.y + (-0.5));
        float _1430 = _1427 * (_1393.z + (-0.5));
        float _1437 = exp2((_1400.w + (-0.5)) * 20.0) * 2.0;
        float _1438 = _1437 * (_1400.x + (-0.5));
        float _1439 = _1437 * (_1400.y + (-0.5));
        float _1440 = _1437 * (_1400.z + (-0.5));
        float _1447 = exp2((_1407.w + (-0.5)) * 20.0) * 2.0;
        float _1448 = _1447 * (_1407.x + (-0.5));
        float _1449 = _1447 * (_1407.y + (-0.5));
        float _1450 = _1447 * (_1407.z + (-0.5));
        float _1457 = exp2((_1414.w + (-0.5)) * 20.0) * 2.0;
        float _1458 = _1457 * (_1414.x + (-0.5));
        float _1459 = _1457 * (_1414.y + (-0.5));
        float _1460 = _1457 * (_1414.z + (-0.5));
        float _1461 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
        float _1462 = isnan(0.0) ? _1459 : (isnan(_1459) ? 0.0 : max(_1459, 0.0));
        float _1463 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
        float _1464 = _1428 * 0.5;
        float _1465 = _1438 * 0.5;
        float _1466 = _1448 * 0.5;
        float _1467 = dot(vec3(_1464, _1465, _1466), vec3(_1464, _1465, _1466));
        float _1472 = (_1467 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1467);
        float _1481 = (dot(vec3(_1061, _1062, _1063), vec3(_1472 * _1464, _1472 * _1465, _1472 * _1466)) + 1.0) * 0.5;
        float _4459 = isnan(0.0) ? _1481 : (isnan(_1481) ? 0.0 : max(_1481, 0.0));
        float _1491 = sqrt(((_1465 * _1465) + (_1464 * _1464)) + (_1466 * _1466)) / (_1461 + 9.9999997473787516355514526367188e-06);
        float _4470 = isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0));
        float _1492 = isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0));
        float _1493 = _1492 * 2.0;
        float _1497 = (1.0 - _1492) / (_1492 + 1.0);
        float _4481 = isnan(0.0) ? _1497 : (isnan(_1497) ? 0.0 : max(_1497, 0.0));
        float _1498 = isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0));
        float _1507 = ((((1.0 - _1498) * (_1493 + 2.0)) * exp2(log2(isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0))) * (_1493 + 1.0))) + _1498) * _1461;
        float _1508 = _1429 * 0.5;
        float _1509 = _1439 * 0.5;
        float _1510 = _1449 * 0.5;
        float _1511 = dot(vec3(_1508, _1509, _1510), vec3(_1508, _1509, _1510));
        float _1516 = (_1511 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1511);
        float _1524 = (dot(vec3(_1061, _1062, _1063), vec3(_1516 * _1508, _1516 * _1509, _1516 * _1510)) + 1.0) * 0.5;
        float _4492 = isnan(0.0) ? _1524 : (isnan(_1524) ? 0.0 : max(_1524, 0.0));
        float _1533 = sqrt(((_1509 * _1509) + (_1508 * _1508)) + (_1510 * _1510)) / (_1462 + 9.9999997473787516355514526367188e-06);
        float _4503 = isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0));
        float _1534 = isnan(1.0) ? _4503 : (isnan(_4503) ? 1.0 : min(_4503, 1.0));
        float _1535 = _1534 * 2.0;
        float _1539 = (1.0 - _1534) / (_1534 + 1.0);
        float _4514 = isnan(0.0) ? _1539 : (isnan(_1539) ? 0.0 : max(_1539, 0.0));
        float _1540 = isnan(1.0) ? _4514 : (isnan(_4514) ? 1.0 : min(_4514, 1.0));
        float _1549 = ((((1.0 - _1540) * (_1535 + 2.0)) * exp2(log2(isnan(1.0) ? _4492 : (isnan(_4492) ? 1.0 : min(_4492, 1.0))) * (_1535 + 1.0))) + _1540) * _1462;
        float _1550 = _1430 * 0.5;
        float _1551 = _1440 * 0.5;
        float _1552 = _1450 * 0.5;
        float _1553 = dot(vec3(_1550, _1551, _1552), vec3(_1550, _1551, _1552));
        float _1558 = (_1553 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1553);
        float _1566 = (dot(vec3(_1061, _1062, _1063), vec3(_1558 * _1550, _1558 * _1551, _1558 * _1552)) + 1.0) * 0.5;
        float _4525 = isnan(0.0) ? _1566 : (isnan(_1566) ? 0.0 : max(_1566, 0.0));
        float _1575 = sqrt(((_1551 * _1551) + (_1550 * _1550)) + (_1552 * _1552)) / (_1463 + 9.9999997473787516355514526367188e-06);
        float _4536 = isnan(0.0) ? _1575 : (isnan(_1575) ? 0.0 : max(_1575, 0.0));
        float _1576 = isnan(1.0) ? _4536 : (isnan(_4536) ? 1.0 : min(_4536, 1.0));
        float _1577 = _1576 * 2.0;
        float _1581 = (1.0 - _1576) / (_1576 + 1.0);
        float _4547 = isnan(0.0) ? _1581 : (isnan(_1581) ? 0.0 : max(_1581, 0.0));
        float _1582 = isnan(1.0) ? _4547 : (isnan(_4547) ? 1.0 : min(_4547, 1.0));
        float _1591 = ((((1.0 - _1582) * (_1577 + 2.0)) * exp2(log2(isnan(1.0) ? _4525 : (isnan(_4525) ? 1.0 : min(_4525, 1.0))) * (_1577 + 1.0))) + _1582) * _1463;
        _1599 = _1430;
        _1601 = _1429;
        _1602 = _1428;
        _1603 = _1440;
        _1604 = _1439;
        _1605 = _1438;
        _1606 = _1450;
        _1607 = _1449;
        _1608 = _1448;
        _1609 = _1463;
        _1610 = _1462;
        _1611 = _1461;
        _1612 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1507 : (isnan(_1507) ? 0.0 : max(_1507, 0.0)));
        _1613 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0)));
        _1614 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0)));
    }
    else
    {
        _1599 = _1600;
        _1601 = _1600;
        _1602 = _1600;
        _1603 = _1600;
        _1604 = _1600;
        _1605 = _1600;
        _1606 = _1600;
        _1607 = _1600;
        _1608 = _1600;
        _1609 = _1600;
        _1610 = _1600;
        _1611 = _1600;
        _1612 = 0.0;
        _1613 = 0.0;
        _1614 = 0.0;
    }
    float _1906;
    float _1907;
    float _1908;
    float _1909;
    float _1910;
    float _1911;
    float _1912;
    float _1913;
    float _1914;
    float _1915;
    float _1916;
    float _1917;
    float _1918;
    float _1919;
    float _1920;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1637 = fma(_1298, cbModelParam._m0[30u].z, fma(_1294, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1290));
        float _1641 = fma(_1298, cbModelParam._m0[31u].z, fma(_1294, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1290));
        float _1645 = fma(_1298, cbModelParam._m0[32u].z, fma(_1294, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1290));
        float _1668 = _1290 + _1061;
        float _1669 = _1294 + _1062;
        float _1670 = _1298 + _1063;
        float _1680 = fma(_1670, cbModelParam._m0[30u].z, fma(_1669, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1668)) - _1637;
        float _1681 = fma(_1670, cbModelParam._m0[31u].z, fma(_1669, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1668)) - _1641;
        float _1682 = fma(_1670, cbModelParam._m0[32u].z, fma(_1669, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1668)) - _1645;
        float _1686 = inversesqrt(dot(vec3(_1680, _1681, _1682), vec3(_1680, _1681, _1682)));
        float _1699 = ((_1686 * _1680) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1637 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1700 = ((_1686 * _1681) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1641 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1701 = ((_1686 * _1682) / cbModelParam._m0[35u].z) + ((((((_1645 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1703 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1699, _1700, _1701), 0.0);
        vec4 _1710 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1699, _1700, _1701), 0.0);
        vec4 _1717 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1699, _1700, _1701), 0.0);
        vec4 _1724 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1699, _1700, _1701), 0.0);
        float _1736 = exp2((_1703.w + (-0.5)) * 20.0) * 2.0;
        float _1737 = _1736 * (_1703.x + (-0.5));
        float _1738 = _1736 * (_1703.y + (-0.5));
        float _1739 = _1736 * (_1703.z + (-0.5));
        float _1746 = exp2((_1710.w + (-0.5)) * 20.0) * 2.0;
        float _1747 = _1746 * (_1710.x + (-0.5));
        float _1748 = _1746 * (_1710.y + (-0.5));
        float _1749 = _1746 * (_1710.z + (-0.5));
        float _1756 = exp2((_1717.w + (-0.5)) * 20.0) * 2.0;
        float _1757 = _1756 * (_1717.x + (-0.5));
        float _1758 = _1756 * (_1717.y + (-0.5));
        float _1759 = _1756 * (_1717.z + (-0.5));
        float _1766 = exp2((_1724.w + (-0.5)) * 20.0) * 2.0;
        float _1767 = _1766 * (_1724.x + (-0.5));
        float _1768 = _1766 * (_1724.y + (-0.5));
        float _1769 = _1766 * (_1724.z + (-0.5));
        float _1770 = isnan(0.0) ? _1767 : (isnan(_1767) ? 0.0 : max(_1767, 0.0));
        float _1771 = isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0));
        float _1772 = isnan(0.0) ? _1769 : (isnan(_1769) ? 0.0 : max(_1769, 0.0));
        float _1773 = _1737 * 0.5;
        float _1774 = _1747 * 0.5;
        float _1775 = _1757 * 0.5;
        float _1776 = dot(vec3(_1773, _1774, _1775), vec3(_1773, _1774, _1775));
        float _1781 = (_1776 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1776);
        float _1789 = (dot(vec3(_1061, _1062, _1063), vec3(_1781 * _1773, _1781 * _1774, _1781 * _1775)) + 1.0) * 0.5;
        float _4588 = isnan(0.0) ? _1789 : (isnan(_1789) ? 0.0 : max(_1789, 0.0));
        float _1798 = sqrt(((_1774 * _1774) + (_1773 * _1773)) + (_1775 * _1775)) / (_1770 + 9.9999997473787516355514526367188e-06);
        float _4599 = isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0));
        float _1799 = isnan(1.0) ? _4599 : (isnan(_4599) ? 1.0 : min(_4599, 1.0));
        float _1800 = _1799 * 2.0;
        float _1804 = (1.0 - _1799) / (_1799 + 1.0);
        float _4610 = isnan(0.0) ? _1804 : (isnan(_1804) ? 0.0 : max(_1804, 0.0));
        float _1805 = isnan(1.0) ? _4610 : (isnan(_4610) ? 1.0 : min(_4610, 1.0));
        float _1814 = ((((1.0 - _1805) * (_1800 + 2.0)) * exp2(log2(isnan(1.0) ? _4588 : (isnan(_4588) ? 1.0 : min(_4588, 1.0))) * (_1800 + 1.0))) + _1805) * _1770;
        float _1815 = _1738 * 0.5;
        float _1816 = _1748 * 0.5;
        float _1817 = _1758 * 0.5;
        float _1818 = dot(vec3(_1815, _1816, _1817), vec3(_1815, _1816, _1817));
        float _1823 = (_1818 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1818);
        float _1831 = (dot(vec3(_1061, _1062, _1063), vec3(_1823 * _1815, _1823 * _1816, _1823 * _1817)) + 1.0) * 0.5;
        float _4621 = isnan(0.0) ? _1831 : (isnan(_1831) ? 0.0 : max(_1831, 0.0));
        float _1840 = sqrt(((_1816 * _1816) + (_1815 * _1815)) + (_1817 * _1817)) / (_1771 + 9.9999997473787516355514526367188e-06);
        float _4632 = isnan(0.0) ? _1840 : (isnan(_1840) ? 0.0 : max(_1840, 0.0));
        float _1841 = isnan(1.0) ? _4632 : (isnan(_4632) ? 1.0 : min(_4632, 1.0));
        float _1842 = _1841 * 2.0;
        float _1846 = (1.0 - _1841) / (_1841 + 1.0);
        float _4643 = isnan(0.0) ? _1846 : (isnan(_1846) ? 0.0 : max(_1846, 0.0));
        float _1847 = isnan(1.0) ? _4643 : (isnan(_4643) ? 1.0 : min(_4643, 1.0));
        float _1856 = ((((1.0 - _1847) * (_1842 + 2.0)) * exp2(log2(isnan(1.0) ? _4621 : (isnan(_4621) ? 1.0 : min(_4621, 1.0))) * (_1842 + 1.0))) + _1847) * _1771;
        float _1857 = _1739 * 0.5;
        float _1858 = _1749 * 0.5;
        float _1859 = _1759 * 0.5;
        float _1860 = dot(vec3(_1857, _1858, _1859), vec3(_1857, _1858, _1859));
        float _1865 = (_1860 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1860);
        float _1873 = (dot(vec3(_1061, _1062, _1063), vec3(_1865 * _1857, _1865 * _1858, _1865 * _1859)) + 1.0) * 0.5;
        float _4654 = isnan(0.0) ? _1873 : (isnan(_1873) ? 0.0 : max(_1873, 0.0));
        float _1882 = sqrt(((_1858 * _1858) + (_1857 * _1857)) + (_1859 * _1859)) / (_1772 + 9.9999997473787516355514526367188e-06);
        float _4665 = isnan(0.0) ? _1882 : (isnan(_1882) ? 0.0 : max(_1882, 0.0));
        float _1883 = isnan(1.0) ? _4665 : (isnan(_4665) ? 1.0 : min(_4665, 1.0));
        float _1884 = _1883 * 2.0;
        float _1888 = (1.0 - _1883) / (_1883 + 1.0);
        float _4676 = isnan(0.0) ? _1888 : (isnan(_1888) ? 0.0 : max(_1888, 0.0));
        float _1889 = isnan(1.0) ? _4676 : (isnan(_4676) ? 1.0 : min(_4676, 1.0));
        float _1898 = ((((1.0 - _1889) * (_1884 + 2.0)) * exp2(log2(isnan(1.0) ? _4654 : (isnan(_4654) ? 1.0 : min(_4654, 1.0))) * (_1884 + 1.0))) + _1889) * _1772;
        _1906 = _1739;
        _1907 = _1738;
        _1908 = _1737;
        _1909 = _1749;
        _1910 = _1748;
        _1911 = _1747;
        _1912 = _1759;
        _1913 = _1758;
        _1914 = _1757;
        _1915 = _1772;
        _1916 = _1771;
        _1917 = _1770;
        _1918 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1814 : (isnan(_1814) ? 0.0 : max(_1814, 0.0)));
        _1919 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1856 : (isnan(_1856) ? 0.0 : max(_1856, 0.0)));
        _1920 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1898 : (isnan(_1898) ? 0.0 : max(_1898, 0.0)));
    }
    else
    {
        _1906 = _1600;
        _1907 = _1600;
        _1908 = _1600;
        _1909 = _1600;
        _1910 = _1600;
        _1911 = _1600;
        _1912 = _1600;
        _1913 = _1600;
        _1914 = _1600;
        _1915 = _1600;
        _1916 = _1600;
        _1917 = _1600;
        _1918 = 0.0;
        _1919 = 0.0;
        _1920 = 0.0;
    }
    float _1930 = (cbModelParam._m0[1u].x * (_1918 - _1612)) + _1612;
    float _1931 = (cbModelParam._m0[1u].x * (_1919 - _1613)) + _1613;
    float _1932 = (cbModelParam._m0[1u].x * (_1920 - _1614)) + _1614;
    float _1953 = fma(_1932, cbSceneParam._m0[89u].z, fma(_1931, cbSceneParam._m0[89u].y, _1930 * cbSceneParam._m0[89u].x));
    float _1956 = fma(_1932, cbSceneParam._m0[90u].z, fma(_1931, cbSceneParam._m0[90u].y, _1930 * cbSceneParam._m0[90u].x));
    float _1959 = fma(_1932, cbSceneParam._m0[91u].z, fma(_1931, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1930));
    float _1974 = _1236 * 0.5;
    float _1975 = _1237 * 0.5;
    float _1976 = _1238 * 0.5;
    float _1977 = dot(vec4(_1974, _1975, _1976, 1.0), vec4(_1908, _1911, _1914, _1917));
    float _1980 = dot(vec4(_1974, _1975, _1976, 1.0), vec4(_1907, _1910, _1913, _1916));
    float _1983 = dot(vec4(_1974, _1975, _1976, 1.0), vec4(_1906, _1909, _1912, _1915));
    float _2017;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1990 = dot(vec4(_1974, _1975, _1976, 1.0), vec4(_1599, _1603, _1606, _1609));
        float _1994 = dot(vec4(_1974, _1975, _1976, 1.0), vec4(_1601, _1604, _1607, _1610));
        float _1998 = dot(vec4(_1974, _1975, _1976, 1.0), vec4(_1602, _1605, _1608, _1611));
        float _2005 = dot(vec4(cbModelParam._m0[39u]), vec4(_1974, _1975, _1976, 1.0));
        _2017 = dot(vec3(isnan(0.0) ? _1998 : (isnan(_1998) ? 0.0 : max(_1998, 0.0)), isnan(0.0) ? _1994 : (isnan(_1994) ? 0.0 : max(_1994, 0.0)), isnan(0.0) ? _1990 : (isnan(_1990) ? 0.0 : max(_1990, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2005) ? 0.0 : (isnan(0.0) ? _2005 : max(0.0, _2005))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2017 = 1.0;
    }
    float _2028;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2019 = dot(vec4(cbModelParam._m0[40u]), vec4(_1974, _1975, _1976, 1.0));
        _2028 = dot(vec3(isnan(0.0) ? _1977 : (isnan(_1977) ? 0.0 : max(_1977, 0.0)), isnan(0.0) ? _1980 : (isnan(_1980) ? 0.0 : max(_1980, 0.0)), isnan(0.0) ? _1983 : (isnan(_1983) ? 0.0 : max(_1983, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2019) ? 0.0 : (isnan(0.0) ? _2019 : max(0.0, _2019))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2028 = 1.0;
    }
    float _2032 = (_2028 * cbModelParam._m0[1u].x) + (_2017 * (1.0 - cbModelParam._m0[1u].x));
    float _2042 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1065);
    float _2043 = isnan(_2042) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2042 : min(cbModelParam._m0[25u].z, _2042));
    float _2123;
    float _2125;
    float _2127;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2090 = fma(_1298, cbModelParam._m0[13u].z, fma(_1294, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1290)) + cbModelParam._m0[13u].w;
        float _2094 = fma(_1298, cbModelParam._m0[14u].z, fma(_1294, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1290)) + cbModelParam._m0[14u].w;
        float _2098 = fma(_1298, cbModelParam._m0[15u].z, fma(_1294, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1290)) + cbModelParam._m0[15u].w;
        float _2101 = fma(_1238, cbModelParam._m0[13u].z, fma(_1237, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1236));
        float _2104 = fma(_1238, cbModelParam._m0[14u].z, fma(_1237, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1236));
        float _2107 = fma(_1238, cbModelParam._m0[15u].z, fma(_1237, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1236));
        float _2135;
        if (_2101 > 0.0)
        {
            _2135 = abs((1.0 - _2090) / _2101);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2101 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2090 + 1.0) / _2101);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2135 = frontier_phi_14_12_ladder;
        }
        float _2306;
        if (_2104 > 0.0)
        {
            _2306 = abs((1.0 - _2094) / _2104);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2104 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2094 + 1.0) / _2104);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2306 = frontier_phi_23_19_ladder;
        }
        float _2601;
        if (_2107 > 0.0)
        {
            _2601 = abs((1.0 - _2098) / _2107);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2107 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2098 + 1.0) / _2107);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2601 = frontier_phi_35_30_ladder;
        }
        float _2603 = isnan(_2306) ? _2135 : (isnan(_2135) ? _2306 : min(_2135, _2306));
        float _2604 = isnan(_2601) ? _2603 : (isnan(_2603) ? _2601 : min(_2603, _2601));
        float _2608 = (_2604 * _2101) + _2090;
        float _2609 = (_2604 * _2104) + _2094;
        float _2610 = (_2604 * _2107) + _2098;
        float _2611 = _2604 * 9.9999997473787516355514526367188e-05;
        float _2613 = (-1.0) - _2611;
        float _2615 = _2611 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2610 > _2615) || ((_2610 < _2613) || ((_2609 > _2615) || ((_2609 < _2613) || ((_2608 < _2613) || (_2608 > _2615))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2755 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2610, cbModelParam._m0[9u].z, fma(_2609, cbModelParam._m0[9u].y, _2608 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2610, cbModelParam._m0[10u].z, fma(_2609, cbModelParam._m0[10u].y, _2608 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2610, cbModelParam._m0[11u].z, fma(_2609, cbModelParam._m0[11u].y, _2608 * cbModelParam._m0[11u].x))), _2043);
            frontier_phi_13_35_ladder = _2755.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2755.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2755.x * cbModelParam._m0[1u].y;
        }
        _2123 = frontier_phi_13_35_ladder_2;
        _2125 = frontier_phi_13_35_ladder_1;
        _2127 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2111 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1236, _1237, _1238), _2043);
        _2123 = _2111.x * cbModelParam._m0[1u].y;
        _2125 = _2111.y * cbModelParam._m0[1u].y;
        _2127 = _2111.z * cbModelParam._m0[1u].y;
    }
    float _2131 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1065);
    float _2132 = isnan(_2131) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2131 : min(cbModelParam._m0[25u].w, _2131));
    float _2221;
    float _2223;
    float _2225;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2185 = fma(_1298, cbModelParam._m0[21u].z, fma(_1294, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1290)) + cbModelParam._m0[21u].w;
        float _2189 = fma(_1298, cbModelParam._m0[22u].z, fma(_1294, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1290)) + cbModelParam._m0[22u].w;
        float _2193 = fma(_1298, cbModelParam._m0[23u].z, fma(_1294, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1290)) + cbModelParam._m0[23u].w;
        float _2196 = fma(_1238, cbModelParam._m0[21u].z, fma(_1237, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1236));
        float _2199 = fma(_1238, cbModelParam._m0[22u].z, fma(_1237, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1236));
        float _2202 = fma(_1238, cbModelParam._m0[23u].z, fma(_1237, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1236));
        float _2311;
        if (_2196 > 0.0)
        {
            _2311 = abs((1.0 - _2185) / _2196);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2196 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2185 + 1.0) / _2196);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2311 = frontier_phi_25_21_ladder;
        }
        float _2628;
        if (_2199 > 0.0)
        {
            _2628 = abs((1.0 - _2189) / _2199);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2199 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2189 + 1.0) / _2199);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2628 = frontier_phi_37_32_ladder;
        }
        float _2966;
        if (_2202 > 0.0)
        {
            _2966 = abs((1.0 - _2193) / _2202);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2202 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2193 + 1.0) / _2202);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2966 = frontier_phi_47_44_ladder;
        }
        float _2968 = isnan(_2628) ? _2311 : (isnan(_2311) ? _2628 : min(_2311, _2628));
        float _2969 = isnan(_2966) ? _2968 : (isnan(_2968) ? _2966 : min(_2968, _2966));
        float _2973 = (_2969 * _2196) + _2185;
        float _2974 = (_2969 * _2199) + _2189;
        float _2975 = (_2969 * _2202) + _2193;
        float _2976 = _2969 * 9.9999997473787516355514526367188e-05;
        float _2977 = (-1.0) - _2976;
        float _2979 = _2976 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2975 > _2979) || ((_2975 < _2977) || ((_2974 > _2979) || ((_2974 < _2977) || ((_2973 < _2977) || (_2973 > _2979))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3097 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2975, cbModelParam._m0[17u].z, fma(_2974, cbModelParam._m0[17u].y, _2973 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2975, cbModelParam._m0[18u].z, fma(_2974, cbModelParam._m0[18u].y, _2973 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2975, cbModelParam._m0[19u].z, fma(_2974, cbModelParam._m0[19u].y, _2973 * cbModelParam._m0[19u].x))), _2132);
            frontier_phi_22_47_ladder = _3097.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _3097.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _3097.x * cbModelParam._m0[1u].z;
        }
        _2221 = frontier_phi_22_47_ladder_2;
        _2223 = frontier_phi_22_47_ladder_1;
        _2225 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2205 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1236, _1237, _1238), _2132);
        _2221 = _2205.x * cbModelParam._m0[1u].z;
        _2223 = _2205.y * cbModelParam._m0[1u].z;
        _2225 = _2205.z * cbModelParam._m0[1u].z;
    }
    float _2238 = (((_1261 * _1213) + _1262) * _1228) * ((cbModelParam._m0[1u].w * (_2221 - _2123)) + _2123);
    float _2240 = (((_1261 * _1215) + _1262) * _1228) * ((cbModelParam._m0[1u].w * (_2223 - _2125)) + _2125);
    float _2242 = (((_1261 * _1216) + _1262) * _1228) * ((cbModelParam._m0[1u].w * (_2225 - _2127)) + _2127);
    float _2245 = fma(_2242, cbSceneParam._m0[89u].z, fma(_2240, cbSceneParam._m0[89u].y, _2238 * cbSceneParam._m0[89u].x));
    float _2248 = fma(_2242, cbSceneParam._m0[90u].z, fma(_2240, cbSceneParam._m0[90u].y, _2238 * cbSceneParam._m0[90u].x));
    float _2251 = fma(_2242, cbSceneParam._m0[91u].z, fma(_2240, cbSceneParam._m0[91u].y, _2238 * cbSceneParam._m0[91u].x));
    float _2285 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2289 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2293 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2297 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2298 = _2285 / _2297;
    float _2299 = _2289 / _2297;
    float _2300 = _2293 / _2297;
    float _2447;
    float _2448;
    float _2449;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2327 = ((uint(_2300 > cbSceneParam._m0[59u].y) + uint(_2300 > cbSceneParam._m0[59u].x)) + uint(_2300 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2328 = _2327 + 43u;
        uint _2336 = _2327 + 44u;
        uint _2344 = _2327 + 45u;
        uint _2352 = _2327 + 46u;
        float _2363 = fma(_2297, cbSceneParam._m0[_2328].w, fma(_2293, cbSceneParam._m0[_2328].z, fma(_2289, cbSceneParam._m0[_2328].y, _2285 * cbSceneParam._m0[_2328].x)));
        float _2367 = fma(_2297, cbSceneParam._m0[_2336].w, fma(_2293, cbSceneParam._m0[_2336].z, fma(_2289, cbSceneParam._m0[_2336].y, _2285 * cbSceneParam._m0[_2336].x)));
        float _2375 = fma(_2297, cbSceneParam._m0[_2352].w, fma(_2293, cbSceneParam._m0[_2352].z, fma(_2289, cbSceneParam._m0[_2352].y, _2285 * cbSceneParam._m0[_2352].x)));
        float _2380 = cbSceneParam._m0[33u].z * _2375;
        float _2382 = cbSceneParam._m0[33u].w * _2375;
        float _2385 = fma(_2297, cbSceneParam._m0[_2344].w, fma(_2293, cbSceneParam._m0[_2344].z, fma(_2289, cbSceneParam._m0[_2344].y, _2285 * cbSceneParam._m0[_2344].x))) / _2375;
        float _2433 = (cbSceneParam._m0[33u].x - sqrt(((_2299 * _2299) + (_2298 * _2298)) + (_2300 * _2300))) * cbSceneParam._m0[33u].y;
        float _4802 = isnan(0.0) ? _2433 : (isnan(_2433) ? 0.0 : max(_2433, 0.0));
        float _2440 = (isnan(1.0) ? _4802 : (isnan(_4802) ? 1.0 : min(_4802, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2380 + _2363) / _2375, (_2382 + _2367) / _2375), _2385), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2382 + _2363) / _2375, (_2367 - _2380) / _2375), _2385), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2363 - _2380) / _2375, (_2367 - _2382) / _2375), _2385), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2363 - _2382) / _2375, (_2380 + _2367) / _2375), _2385), 0.0)).x), vec4(0.25)));
        _2447 = 1.0 - (_2440 * cbSceneParam._m0[34u].x);
        _2448 = 1.0 - (_2440 * cbSceneParam._m0[34u].y);
        _2449 = 1.0 - (_2440 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2447 = 1.0;
        _2448 = 1.0;
        _2449 = 1.0;
    }
    float _2513;
    float _2515;
    float _2517;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2501 = fma(_2297, cbSceneParam._m0[63u].w, fma(_2293, cbSceneParam._m0[63u].z, fma(_2289, cbSceneParam._m0[63u].y, _2285 * cbSceneParam._m0[63u].x)));
        float _2502 = fma(_2297, cbSceneParam._m0[60u].w, fma(_2293, cbSceneParam._m0[60u].z, fma(_2289, cbSceneParam._m0[60u].y, _2285 * cbSceneParam._m0[60u].x))) / _2501;
        float _2503 = fma(_2297, cbSceneParam._m0[61u].w, fma(_2293, cbSceneParam._m0[61u].z, fma(_2289, cbSceneParam._m0[61u].y, _2285 * cbSceneParam._m0[61u].x))) / _2501;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2502 >= cbSceneParam._m0[64u].x) && (_2503 >= cbSceneParam._m0[64u].y)) && (_2502 <= cbSceneParam._m0[64u].z)) && (_2503 <= cbSceneParam._m0[64u].w))
        {
            float _2641 = fma(_2297, cbSceneParam._m0[62u].w, fma(_2293, cbSceneParam._m0[62u].z, fma(_2289, cbSceneParam._m0[62u].y, _2285 * cbSceneParam._m0[62u].x))) / _2501;
            float _2645 = isnan(cbSceneParam._m0[41u].w) ? _2641 : (isnan(_2641) ? cbSceneParam._m0[41u].w : max(_2641, cbSceneParam._m0[41u].w));
            float _2688 = (cbSceneParam._m0[33u].x - sqrt(((_2299 * _2299) + (_2298 * _2298)) + (_2300 * _2300))) * cbSceneParam._m0[33u].y;
            float _4818 = isnan(0.0) ? _2688 : (isnan(_2688) ? 0.0 : max(_2688, 0.0));
            float _2695 = (isnan(1.0) ? _4818 : (isnan(_4818) ? 1.0 : min(_4818, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2502, cbSceneParam._m0[33u].w + _2503), _2645), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2502, _2503 - cbSceneParam._m0[33u].z), _2645), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2502 - cbSceneParam._m0[33u].z, _2503 - cbSceneParam._m0[33u].w), _2645), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2502 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2503), _2645), 0.0)).x), vec4(0.25)));
            float _2699 = 1.0 - (_2695 * cbSceneParam._m0[34u].x);
            float _2700 = 1.0 - (_2695 * cbSceneParam._m0[34u].y);
            float _2701 = 1.0 - (_2695 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2701) ? _2449 : (isnan(_2449) ? _2701 : min(_2449, _2701));
            frontier_phi_34_33_ladder_1 = isnan(_2700) ? _2448 : (isnan(_2448) ? _2700 : min(_2448, _2700));
            frontier_phi_34_33_ladder_2 = isnan(_2699) ? _2447 : (isnan(_2447) ? _2699 : min(_2447, _2699));
        }
        else
        {
            frontier_phi_34_33_ladder = _2449;
            frontier_phi_34_33_ladder_1 = _2448;
            frontier_phi_34_33_ladder_2 = _2447;
        }
        _2513 = frontier_phi_34_33_ladder_2;
        _2515 = frontier_phi_34_33_ladder_1;
        _2517 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2513 = _2447;
        _2515 = _2448;
        _2517 = _2449;
    }
    uvec4 _2522 = floatBitsToUint(cbInstanceData._m0[_1188 + 5u]);
    uint _2524 = _2522.x * 14u;
    uint _2525 = _2524 + 13u;
    float _2532 = _1228 + (-1.0);
    float _2537 = (cbLight._m0[_2525].x * _2532) + 1.0;
    float _2538 = (cbLight._m0[_2525].y * _2532) + 1.0;
    float _2539 = (cbLight._m0[_2525].z * _2532) + 1.0;
    float _2540 = (cbLight._m0[_2525].w * _2532) + 1.0;
    uint _2541 = _2524 + 5u;
    float _2547 = isnan(1.0) ? _2538 : (isnan(_2538) ? 1.0 : min(_2538, 1.0));
    uint _2551 = _2524 + 4u;
    float _2560 = isnan(1.0) ? _2537 : (isnan(_2537) ? 1.0 : min(_2537, 1.0));
    uint _2564 = _2524 | 1u;
    float _2575 = dot(vec3(cbLight._m0[_2524].xyz), vec3(_1061, _1062, _1063));
    float _2578 = dot(vec3(cbLight._m0[_2564].xyz), vec3(_1061, _1062, _1063));
    float _4854 = isnan(0.0) ? _2575 : (isnan(_2575) ? 0.0 : max(_2575, 0.0));
    float _4865 = isnan(0.0) ? _2578 : (isnan(_2578) ? 0.0 : max(_2578, 0.0));
    float _2583 = (isnan(1.0) ? _4854 : (isnan(_4854) ? 1.0 : min(_4854, 1.0))) * 0.3183098733425140380859375;
    float _2585 = (isnan(1.0) ? _4865 : (isnan(_4865) ? 1.0 : min(_4865, 1.0))) * 0.3183098733425140380859375;
    float _2592 = ((cbLight._m0[_2541].x * _2547) * _2585) + (((cbLight._m0[_2551].x * _2513) * _2560) * _2583);
    float _2593 = ((_2547 * cbLight._m0[_2541].y) * _2585) + (((cbLight._m0[_2551].y * _2515) * _2560) * _2583);
    float _2594 = ((_2547 * cbLight._m0[_2541].z) * _2585) + (((cbLight._m0[_2551].z * _2517) * _2560) * _2583);
    uvec4 _2598 = floatBitsToUint(cbLight._m0[_2524 + 12u]);
    bool _2600 = _2598.x == 0u;
    float _2702;
    float _2704;
    float _2706;
    if (_2600)
    {
        _2702 = _2592;
        _2704 = _2593;
        _2706 = _2594;
    }
    else
    {
        uint _2710 = _2524 + 6u;
        float _2726 = (dot(vec3(cbLight._m0[_2524 + 2u].xyz), vec3(_1061, _1062, _1063)) * 0.5) + 0.5;
        float _2727 = _2726 * _2726;
        float _4876 = isnan(0.0) ? _2727 : (isnan(_2727) ? 0.0 : max(_2727, 0.0));
        float _2728 = isnan(1.0) ? _4876 : (isnan(_4876) ? 1.0 : min(_4876, 1.0));
        float _2729 = isnan(1.0) ? _2539 : (isnan(_2539) ? 1.0 : min(_2539, 1.0));
        _2702 = (((cbLight._m0[_2710].x * 0.3183098733425140380859375) * _2728) * _2729) + _2592;
        _2704 = (((cbLight._m0[_2710].y * 0.3183098733425140380859375) * _2728) * _2729) + _2593;
        _2706 = (((cbLight._m0[_2710].z * 0.3183098733425140380859375) * _2728) * _2729) + _2594;
    }
    bool _2709 = _2598.y == 0u;
    float _2764;
    float _2766;
    float _2768;
    if (_2709)
    {
        _2764 = _2702;
        _2766 = _2704;
        _2768 = _2706;
    }
    else
    {
        uint _2937 = _2524 + 7u;
        float _2953 = (dot(vec3(cbLight._m0[_2524 + 3u].xyz), vec3(_1061, _1062, _1063)) * 0.5) + 0.5;
        float _2954 = _2953 * _2953;
        float _4892 = isnan(0.0) ? _2954 : (isnan(_2954) ? 0.0 : max(_2954, 0.0));
        float _2955 = isnan(1.0) ? _4892 : (isnan(_4892) ? 1.0 : min(_4892, 1.0));
        float _2956 = isnan(1.0) ? _2540 : (isnan(_2540) ? 1.0 : min(_2540, 1.0));
        _2764 = (((cbLight._m0[_2937].x * 0.3183098733425140380859375) * _2955) * _2956) + _2702;
        _2766 = (((cbLight._m0[_2937].y * 0.3183098733425140380859375) * _2955) * _2956) + _2704;
        _2768 = (((cbLight._m0[_2937].z * 0.3183098733425140380859375) * _2955) * _2956) + _2706;
    }
    uint _2771 = _2524 + 8u;
    float _2784 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2524].w)) * _1065) * 0.949999988079071044921875);
    float _2785 = _2784 * _2784;
    float _2786 = cbLight._m0[_2524].x + _1142;
    float _2787 = cbLight._m0[_2524].y + _1143;
    float _2788 = cbLight._m0[_2524].z + _1144;
    float _2792 = inversesqrt(dot(vec3(_2786, _2787, _2788), vec3(_2786, _2787, _2788)));
    float _2793 = _2792 * _2786;
    float _2794 = _2792 * _2787;
    float _2795 = _2792 * _2788;
    float _2796 = dot(vec3(_1061, _1062, _1063), vec3(cbLight._m0[_2524].xyz));
    float _4908 = isnan(0.0) ? _2796 : (isnan(_2796) ? 0.0 : max(_2796, 0.0));
    float _2799 = isnan(1.0) ? _4908 : (isnan(_4908) ? 1.0 : min(_4908, 1.0));
    float _4919 = isnan(0.0) ? _1229 : (isnan(_1229) ? 0.0 : max(_1229, 0.0));
    float _2800 = isnan(1.0) ? _4919 : (isnan(_4919) ? 1.0 : min(_4919, 1.0));
    float _2801 = dot(vec3(_1061, _1062, _1063), vec3(_2793, _2794, _2795));
    float _4930 = isnan(0.0) ? _2801 : (isnan(_2801) ? 0.0 : max(_2801, 0.0));
    float _2804 = isnan(1.0) ? _4930 : (isnan(_4930) ? 1.0 : min(_4930, 1.0));
    float _2805 = dot(vec3(cbLight._m0[_2524].xyz), vec3(_2793, _2794, _2795));
    float _4941 = isnan(0.0) ? _2805 : (isnan(_2805) ? 0.0 : max(_2805, 0.0));
    float _2809 = _2785 * _2785;
    float _2813 = ((_2804 * _2804) * (_2809 + (-1.0))) + 1.0;
    float _2821 = exp2(log2(1.0 - (isnan(1.0) ? _4941 : (isnan(_4941) ? 1.0 : min(_4941, 1.0)))) * 5.0);
    float _2822 = 0.959999978542327880859375 - _1210;
    float _2824 = 0.959999978542327880859375 - _1211;
    float _2825 = 0.959999978542327880859375 - _1212;
    float _2832 = 1.0 - _2785;
    float _2843 = (0.5 / (((_2800 * ((_2799 * _2832) + _2785)) + 9.9999999392252902907785028219223e-09) + (((_2800 * _2832) + _2785) * _2799))) * _2799;
    float _4952 = isnan(0.0) ? _2843 : (isnan(_2843) ? 0.0 : max(_2843, 0.0));
    float _2845 = (isnan(1.0) ? _4952 : (isnan(_4952) ? 1.0 : min(_4952, 1.0))) * (_2809 / ((_2813 * _2813) * 3.141590118408203125));
    uint _2859 = _2524 + 9u;
    float _2870 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2564].w)) * _1065) * 0.949999988079071044921875);
    float _2871 = _2870 * _2870;
    float _2872 = cbLight._m0[_2564].x + _1142;
    float _2873 = cbLight._m0[_2564].y + _1143;
    float _2874 = cbLight._m0[_2564].z + _1144;
    float _2878 = inversesqrt(dot(vec3(_2872, _2873, _2874), vec3(_2872, _2873, _2874)));
    float _2879 = _2878 * _2872;
    float _2880 = _2878 * _2873;
    float _2881 = _2878 * _2874;
    float _2882 = dot(vec3(_1061, _1062, _1063), vec3(cbLight._m0[_2564].xyz));
    float _4963 = isnan(0.0) ? _2882 : (isnan(_2882) ? 0.0 : max(_2882, 0.0));
    float _2885 = isnan(1.0) ? _4963 : (isnan(_4963) ? 1.0 : min(_4963, 1.0));
    float _2886 = dot(vec3(_1061, _1062, _1063), vec3(_2879, _2880, _2881));
    float _4974 = isnan(0.0) ? _2886 : (isnan(_2886) ? 0.0 : max(_2886, 0.0));
    float _2889 = isnan(1.0) ? _4974 : (isnan(_4974) ? 1.0 : min(_4974, 1.0));
    float _2890 = dot(vec3(cbLight._m0[_2564].xyz), vec3(_2879, _2880, _2881));
    float _4985 = isnan(0.0) ? _2890 : (isnan(_2890) ? 0.0 : max(_2890, 0.0));
    float _2894 = _2871 * _2871;
    float _2898 = ((_2889 * _2889) * (_2894 + (-1.0))) + 1.0;
    float _2905 = exp2(log2(1.0 - (isnan(1.0) ? _4985 : (isnan(_4985) ? 1.0 : min(_4985, 1.0)))) * 5.0);
    float _2912 = 1.0 - _2871;
    float _2922 = (0.5 / (((_2800 * ((_2885 * _2912) + _2871)) + 9.9999999392252902907785028219223e-09) + (((_2800 * _2912) + _2871) * _2885))) * _2885;
    float _4996 = isnan(0.0) ? _2922 : (isnan(_2922) ? 0.0 : max(_2922, 0.0));
    float _2924 = (isnan(1.0) ? _4996 : (isnan(_4996) ? 1.0 : min(_4996, 1.0))) * (_2894 / ((_2898 * _2898) * 3.141590118408203125));
    float _2934 = (((((_2905 * _2822) + _1213) * cbLight._m0[_2859].x) * _2924) * _2547) + ((((cbLight._m0[_2771].x * _2513) * ((_2821 * _2822) + _1213)) * _2845) * _2560);
    float _2935 = (((((_2905 * _2824) + _1215) * cbLight._m0[_2859].y) * _2924) * _2547) + ((((cbLight._m0[_2771].y * _2515) * ((_2821 * _2824) + _1215)) * _2845) * _2560);
    float _2936 = (((((_2905 * _2825) + _1216) * cbLight._m0[_2859].z) * _2924) * _2547) + ((((cbLight._m0[_2771].z * _2517) * ((_2821 * _2825) + _1216)) * _2845) * _2560);
    float _2992;
    float _2994;
    float _2996;
    if (_2600)
    {
        _2992 = _2934;
        _2994 = _2935;
        _2996 = _2936;
    }
    else
    {
        uint _2998 = _2524 + 2u;
        uint _3002 = _2524 + 10u;
        float _3016 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2998].w)) * _1065) * 0.949999988079071044921875);
        float _3017 = _3016 * _3016;
        float _3018 = cbLight._m0[_2998].x + _1142;
        float _3019 = cbLight._m0[_2998].y + _1143;
        float _3020 = cbLight._m0[_2998].z + _1144;
        float _3024 = inversesqrt(dot(vec3(_3018, _3019, _3020), vec3(_3018, _3019, _3020)));
        float _3025 = _3024 * _3018;
        float _3026 = _3024 * _3019;
        float _3027 = _3024 * _3020;
        float _3028 = dot(vec3(_1061, _1062, _1063), vec3(cbLight._m0[_2998].xyz));
        float _5007 = isnan(0.0) ? _3028 : (isnan(_3028) ? 0.0 : max(_3028, 0.0));
        float _3031 = isnan(1.0) ? _5007 : (isnan(_5007) ? 1.0 : min(_5007, 1.0));
        float _3032 = dot(vec3(_1061, _1062, _1063), vec3(_3025, _3026, _3027));
        float _5018 = isnan(0.0) ? _3032 : (isnan(_3032) ? 0.0 : max(_3032, 0.0));
        float _3035 = isnan(1.0) ? _5018 : (isnan(_5018) ? 1.0 : min(_5018, 1.0));
        float _3036 = dot(vec3(cbLight._m0[_2998].xyz), vec3(_3025, _3026, _3027));
        float _5029 = isnan(0.0) ? _3036 : (isnan(_3036) ? 0.0 : max(_3036, 0.0));
        float _3040 = _3017 * _3017;
        float _3044 = ((_3035 * _3035) * (_3040 + (-1.0))) + 1.0;
        float _3051 = exp2(log2(1.0 - (isnan(1.0) ? _5029 : (isnan(_5029) ? 1.0 : min(_5029, 1.0)))) * 5.0);
        float _3058 = 1.0 - _3017;
        float _3068 = (0.5 / (((_2800 * ((_3031 * _3058) + _3017)) + 9.9999999392252902907785028219223e-09) + (((_2800 * _3058) + _3017) * _3031))) * _3031;
        float _5040 = isnan(0.0) ? _3068 : (isnan(_3068) ? 0.0 : max(_3068, 0.0));
        float _3070 = (isnan(1.0) ? _5040 : (isnan(_5040) ? 1.0 : min(_5040, 1.0))) * (_3040 / ((_3044 * _3044) * 3.141590118408203125));
        float _3071 = isnan(1.0) ? _2539 : (isnan(_2539) ? 1.0 : min(_2539, 1.0));
        _2992 = (((((_3051 * _2822) + _1213) * cbLight._m0[_3002].x) * _3070) * _3071) + _2934;
        _2994 = (((((_3051 * _2824) + _1215) * cbLight._m0[_3002].y) * _3070) * _3071) + _2935;
        _2996 = (((((_3051 * _2825) + _1216) * cbLight._m0[_3002].z) * _3070) * _3071) + _2936;
    }
    float _3102;
    float _3104;
    float _3106;
    if (_2709)
    {
        _3102 = _2992;
        _3104 = _2994;
        _3106 = _2996;
    }
    else
    {
        uint _3113 = _2524 + 3u;
        uint _3117 = _2524 + 11u;
        float _3131 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3113].w)) * _1065) * 0.949999988079071044921875);
        float _3132 = _3131 * _3131;
        float _3133 = cbLight._m0[_3113].x + _1142;
        float _3134 = cbLight._m0[_3113].y + _1143;
        float _3135 = cbLight._m0[_3113].z + _1144;
        float _3139 = inversesqrt(dot(vec3(_3133, _3134, _3135), vec3(_3133, _3134, _3135)));
        float _3140 = _3139 * _3133;
        float _3141 = _3139 * _3134;
        float _3142 = _3139 * _3135;
        float _3143 = dot(vec3(_1061, _1062, _1063), vec3(cbLight._m0[_3113].xyz));
        float _5056 = isnan(0.0) ? _3143 : (isnan(_3143) ? 0.0 : max(_3143, 0.0));
        float _3146 = isnan(1.0) ? _5056 : (isnan(_5056) ? 1.0 : min(_5056, 1.0));
        float _3147 = dot(vec3(_1061, _1062, _1063), vec3(_3140, _3141, _3142));
        float _5067 = isnan(0.0) ? _3147 : (isnan(_3147) ? 0.0 : max(_3147, 0.0));
        float _3150 = isnan(1.0) ? _5067 : (isnan(_5067) ? 1.0 : min(_5067, 1.0));
        float _3151 = dot(vec3(cbLight._m0[_3113].xyz), vec3(_3140, _3141, _3142));
        float _5078 = isnan(0.0) ? _3151 : (isnan(_3151) ? 0.0 : max(_3151, 0.0));
        float _3155 = _3132 * _3132;
        float _3159 = ((_3150 * _3150) * (_3155 + (-1.0))) + 1.0;
        float _3166 = exp2(log2(1.0 - (isnan(1.0) ? _5078 : (isnan(_5078) ? 1.0 : min(_5078, 1.0)))) * 5.0);
        float _3173 = 1.0 - _3132;
        float _3183 = (0.5 / (((_2800 * ((_3146 * _3173) + _3132)) + 9.9999999392252902907785028219223e-09) + (((_2800 * _3173) + _3132) * _3146))) * _3146;
        float _5089 = isnan(0.0) ? _3183 : (isnan(_3183) ? 0.0 : max(_3183, 0.0));
        float _3185 = (isnan(1.0) ? _5089 : (isnan(_5089) ? 1.0 : min(_5089, 1.0))) * (_3155 / ((_3159 * _3159) * 3.141590118408203125));
        float _3186 = isnan(1.0) ? _2540 : (isnan(_2540) ? 1.0 : min(_2540, 1.0));
        _3102 = (((((_3166 * _2822) + _1213) * cbLight._m0[_3117].x) * _3185) * _3186) + _2992;
        _3104 = (((((_3166 * _2824) + _1215) * cbLight._m0[_3117].y) * _3185) * _3186) + _2994;
        _3106 = (((((_3166 * _2825) + _1216) * cbLight._m0[_3117].z) * _3185) * _3186) + _2996;
    }
    float _3252;
    float _3254;
    float _3256;
    float _3258;
    float _3260;
    float _3262;
    if (_2522.y == 0u)
    {
        uvec4 _3207 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3208 = _3207.x;
        uint _3219 = uint((float(_3207.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1151) / _3208))) + floor(float(uint(cbSceneParam._m0[85u].x * _1150) / _3208)));
        float _3229 = (log2(_2300 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3230 = isnan(0.0) ? _3229 : (isnan(_3229) ? 0.0 : max(_3229, 0.0));
        uint _3233 = uint(isnan(14.0) ? _3230 : (isnan(_3230) ? 14.0 : min(_3230, 14.0)));
        uvec4 _3238 = texelFetch(g_lightClusterGridBuffer, int(((_3233 << 2u) + (_3219 << 6u)) >> 2u));
        uint _3239 = _3238.x;
        uint _3240 = _3207.z;
        float _3321;
        float _3323;
        float _3325;
        float _3327;
        float _3329;
        float _3331;
        if (((((1u << ((_3240 >> 4u) & 15u)) + 4294967295u) & _3239) == 0u) || ((_3240 & 240u) == 0u))
        {
            _3321 = 0.0;
            _3323 = 0.0;
            _3325 = 0.0;
            _3327 = 0.0;
            _3329 = 0.0;
            _3331 = 0.0;
        }
        else
        {
            float _3322;
            float _3324;
            float _3326;
            float _3328;
            float _3330;
            float _3332;
            float _3466 = 0.0;
            float _3467 = 0.0;
            float _3468 = 0.0;
            float _3469 = 0.0;
            float _3470 = 0.0;
            float _3471 = 0.0;
            uint _3472 = 0u;
            uint _3481;
            bool _3482;
            for (;;)
            {
                _3481 = texelFetch(g_lightClassification, int((((_3233 << 5u) + (_3219 << 9u)) + (_3472 << 2u)) >> 2u)).x;
                _3482 = _3481 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3482)
                {
                    frontier_phi_66_pred = _3471;
                    frontier_phi_66_pred_1 = _3470;
                    frontier_phi_66_pred_2 = _3469;
                    frontier_phi_66_pred_3 = _3468;
                    frontier_phi_66_pred_4 = _3467;
                    frontier_phi_66_pred_5 = _3466;
                }
                else
                {
                    float _3590;
                    float _3591;
                    float _3592;
                    float _3593;
                    float _3594;
                    float _3595;
                    uint _3596;
                    _3590 = _3466;
                    _3591 = _3467;
                    _3592 = _3468;
                    _3593 = _3469;
                    _3594 = _3470;
                    _3595 = _3471;
                    _3596 = _3481;
                    float _3522;
                    float _3523;
                    float _3524;
                    float _3525;
                    float _3526;
                    float _3527;
                    for (;;)
                    {
                        uint _3600 = uint(findLSB(_3596)) + (_3472 << 5u);
                        uint _3597 = (_3596 + 4294967295u) & _3596;
                        uint _3602 = _3600 * 48u;
                        vec4 _3616 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3602)).x, texelFetch(g_PointLightRenderingBuffer, int(_3602 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3602 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3602 + 3u)).x));
                        uint _3622 = (_3600 * 48u) + 4u;
                        vec4 _3635 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3622)).x, texelFetch(g_PointLightRenderingBuffer, int(_3622 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3622 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3622 + 3u)).x));
                        uint _3641 = (_3600 * 48u) + 8u;
                        vec3 _3652 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3641)).x, texelFetch(g_PointLightRenderingBuffer, int(_3641 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3641 + 2u)).x));
                        float _3656 = _3616.x - _2298;
                        float _3657 = _3616.y - _2299;
                        float _3658 = _3616.z - _2300;
                        float _3659 = dot(vec3(_3656, _3657, _3658), vec3(_3656, _3657, _3658));
                        float _3662 = inversesqrt(_3659);
                        float _3663 = _3662 * _3656;
                        float _3664 = _3662 * _3657;
                        float _3665 = _3662 * _3658;
                        float _3666 = dot(vec3(_1169, _1172, _1175), vec3(_3663, _3664, _3665));
                        float _3671 = 1.0 - (_3659 * _3616.w);
                        float _5115 = isnan(0.0) ? _3671 : (isnan(_3671) ? 0.0 : max(_3671, 0.0));
                        float _3672 = isnan(1.0) ? _5115 : (isnan(_5115) ? 1.0 : min(_5115, 1.0));
                        float _3673 = sqrt(_3659) * _3635.w;
                        float _3676 = 1.39999997615814208984375 / (_3673 + 1.39999997615814208984375);
                        float _3677 = _3676 * _3676;
                        float _3680 = ((1.0 - _3677) * _3666) + _3677;
                        float _3683 = _3673 * _3673;
                        float _3687 = ((isnan(0.0) ? _3680 : (isnan(_3680) ? 0.0 : max(_3680, 0.0))) * _3672) / ((_3683 * 0.699999988079071044921875) + 1.0);
                        float _3691 = (-0.0) - _2298;
                        float _3692 = (-0.0) - _2299;
                        float _3693 = (-0.0) - _2300;
                        float _3697 = inversesqrt(dot(vec3(_3691, _3692, _3693), vec3(_3691, _3692, _3693)));
                        float _3698 = _3697 * _3691;
                        float _3699 = _3697 * _3692;
                        float _3700 = _3697 * _3693;
                        float _3707 = exp2(log2(1.0 / ((_3683 * 3.5) + 5.0)) * 0.25);
                        float _3708 = 1.0 - _1244;
                        float _3715 = sqrt(1.0 - ((1.0 - (_3708 * _3708)) * (1.0 - (_3707 * _3707))));
                        float _3716 = _3715 * _3715;
                        float _3717 = _3716 * _3716;
                        float _3718 = _3698 + _3663;
                        float _3719 = _3699 + _3664;
                        float _3720 = _3700 + _3665;
                        float _3724 = inversesqrt(dot(vec3(_3718, _3719, _3720), vec3(_3718, _3719, _3720)));
                        float _3728 = dot(vec3(_1169, _1172, _1175), vec3(_3698, _3699, _3700));
                        float _5131 = isnan(0.0) ? _3728 : (isnan(_3728) ? 0.0 : max(_3728, 0.0));
                        float _3731 = isnan(1.0) ? _5131 : (isnan(_5131) ? 1.0 : min(_5131, 1.0));
                        float _3732 = dot(vec3(_1169, _1172, _1175), vec3(_3724 * _3718, _3724 * _3719, _3724 * _3720));
                        float _5142 = isnan(0.0) ? _3732 : (isnan(_3732) ? 0.0 : max(_3732, 0.0));
                        float _3735 = isnan(1.0) ? _5142 : (isnan(_5142) ? 1.0 : min(_5142, 1.0));
                        float _3739 = ((_3735 * _3735) * (_3717 + (-1.0))) + 1.0;
                        float _3740 = _3676 * _3716;
                        float _3741 = _3740 * _3740;
                        float _3744 = ((1.0 - _3741) * _3666) + _3741;
                        float _5153 = isnan(0.0) ? _3744 : (isnan(_3744) ? 0.0 : max(_3744, 0.0));
                        float _3745 = isnan(1.0) ? _5153 : (isnan(_5153) ? 1.0 : min(_5153, 1.0));
                        float _3746 = 1.0 - _3716;
                        float _3756 = (0.5 / (((_3745 * ((_3731 * _3746) + _3716)) + 9.9999999392252902907785028219223e-09) + (((_3745 * _3746) + _3716) * _3731))) * _3745;
                        float _5164 = isnan(0.0) ? _3756 : (isnan(_3756) ? 0.0 : max(_3756, 0.0));
                        float _3767 = (((_3717 * 3.1415927410125732421875) * (isnan(1.0) ? _5164 : (isnan(_5164) ? 1.0 : min(_5164, 1.0)))) / ((_3739 * _3739) * ((_3683 * 2.1991131305694580078125) + 3.141590118408203125))) * _3672;
                        _3525 = (_3687 * _3635.x) + _3593;
                        _3526 = (_3687 * _3635.y) + _3594;
                        _3527 = (_3687 * _3635.z) + _3595;
                        _3522 = (_3767 * _3652.x) + _3590;
                        _3523 = (_3767 * _3652.y) + _3591;
                        _3524 = (_3767 * _3652.z) + _3592;
                        if (_3597 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3590 = _3522;
                            _3591 = _3523;
                            _3592 = _3524;
                            _3593 = _3525;
                            _3594 = _3526;
                            _3595 = _3527;
                            _3596 = _3597;
                        }
                    }
                    frontier_phi_66_pred = _3527;
                    frontier_phi_66_pred_1 = _3526;
                    frontier_phi_66_pred_2 = _3525;
                    frontier_phi_66_pred_3 = _3524;
                    frontier_phi_66_pred_4 = _3523;
                    frontier_phi_66_pred_5 = _3522;
                }
                _3332 = frontier_phi_66_pred;
                _3330 = frontier_phi_66_pred_1;
                _3328 = frontier_phi_66_pred_2;
                _3326 = frontier_phi_66_pred_3;
                _3324 = frontier_phi_66_pred_4;
                _3322 = frontier_phi_66_pred_5;
                uint _3473 = _3472 + 1u;
                if (_3473 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3466 = _3322;
                    _3467 = _3324;
                    _3468 = _3326;
                    _3469 = _3328;
                    _3470 = _3330;
                    _3471 = _3332;
                    _3472 = _3473;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3321 = _3322;
            _3323 = _3324;
            _3325 = _3326;
            _3327 = _3328;
            _3329 = _3330;
            _3331 = _3332;
        }
        uvec4 _3335 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3336 = _3335.z;
        uint _3338 = (_3336 >> 8u) & 15u;
        float _3434;
        float _3436;
        float _3438;
        float _3440;
        float _3442;
        float _3444;
        if (((4294967295u << _3338) & _3239) == 0u)
        {
            _3434 = _3321;
            _3436 = _3323;
            _3438 = _3325;
            _3440 = _3327;
            _3442 = _3329;
            _3444 = _3331;
        }
        else
        {
            float _3459 = inversesqrt(dot(vec3(_2298, _2299, _2300), vec3(_2298, _2299, _2300)));
            float _3460 = _3459 * _2298;
            float _3461 = _3459 * _2299;
            float _3462 = _3459 * _2300;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3338 < ((_3336 >> 12u) & 15u))
            {
                float _3435;
                float _3437;
                float _3439;
                float _3441;
                float _3443;
                float _3445;
                float _3573 = _3321;
                float _3574 = _3323;
                float _3575 = _3325;
                float _3576 = _3327;
                float _3577 = _3329;
                float _3578 = _3331;
                uint _3579 = _3338;
                uint _3588;
                bool _3589;
                for (;;)
                {
                    _3588 = texelFetch(g_lightClassification, int((((_3233 << 5u) + (_3219 << 9u)) + (_3579 << 2u)) >> 2u)).x;
                    _3589 = _3588 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3589)
                    {
                        frontier_phi_72_pred = _3578;
                        frontier_phi_72_pred_1 = _3577;
                        frontier_phi_72_pred_2 = _3576;
                        frontier_phi_72_pred_3 = _3575;
                        frontier_phi_72_pred_4 = _3574;
                        frontier_phi_72_pred_5 = _3573;
                    }
                    else
                    {
                        float _3772;
                        float _3773;
                        float _3774;
                        float _3775;
                        float _3776;
                        float _3777;
                        float _4065;
                        float _4066;
                        float _4067;
                        float _4068;
                        float _4069;
                        float _4070;
                        float _3785 = _3573;
                        float _3786 = _3574;
                        float _3787 = _3575;
                        float _3788 = _3576;
                        float _3789 = _3577;
                        float _3790 = _3578;
                        uint _3791 = _3588;
                        uint _3792;
                        vec4 _3817;
                        float _3818;
                        vec4 _3833;
                        vec3 _3845;
                        vec4 _3860;
                        vec4 _3875;
                        float _3921;
                        bool _3922;
                        for (;;)
                        {
                            uint _3802 = ((_3579 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3791));
                            _3792 = (_3791 + 4294967295u) & _3791;
                            uint _3804 = _3802 * 40u;
                            _3817 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3804)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3804 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3804 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3804 + 3u)).x));
                            _3818 = _3817.w;
                            uint _3820 = (_3802 * 40u) + 4u;
                            _3833 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3820)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3820 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3820 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3820 + 3u)).x));
                            uint _3835 = (_3802 * 40u) + 8u;
                            _3845 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3835)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3835 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3835 + 2u)).x));
                            uint _3847 = (_3802 * 40u) + 16u;
                            _3860 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3847)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3847 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3847 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3847 + 3u)).x));
                            uint _3862 = (_3802 * 40u) + 20u;
                            _3875 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3862)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3862 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3862 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3862 + 3u)).x));
                            uint _3877 = (_3802 * 40u) + 24u;
                            vec4 _3890 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3877)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3877 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3877 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3877 + 3u)).x));
                            uint _3896 = (_3802 * 40u) + 28u;
                            vec4 _3909 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3896)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3896 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3896 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3896 + 3u)).x));
                            _3921 = fma(_2300, _3909.z, fma(_2299, _3909.y, _3909.x * _2298)) + _3909.w;
                            _3922 = !((fma(_2300, _3890.z, fma(_2299, _3890.y, _3890.x * _2298)) + _3890.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3922)
                            {
                                float _3949 = _3817.x - _2298;
                                float _3950 = _3817.y - _2299;
                                float _3951 = _3817.z - _2300;
                                float _3952 = dot(vec3(_3949, _3950, _3951), vec3(_3949, _3950, _3951));
                                float _3955 = inversesqrt(_3952);
                                float _3956 = _3955 * _3949;
                                float _3957 = _3955 * _3950;
                                float _3958 = _3955 * _3951;
                                float _3962 = 1.0 - (_3952 / (_3818 * _3818));
                                float _5175 = isnan(0.0) ? _3962 : (isnan(_3962) ? 0.0 : max(_3962, 0.0));
                                float _3963 = isnan(1.0) ? _5175 : (isnan(_5175) ? 1.0 : min(_5175, 1.0));
                                float _3967 = sqrt(_3952) * _3833.w;
                                float _3969 = 1.39999997615814208984375 / (_3967 + 1.39999997615814208984375);
                                float _3970 = _3969 * _3969;
                                float _3973 = ((1.0 - _3970) * dot(vec3(_3956, _3957, _3958), vec3(_1169, _1172, _1175))) + _3970;
                                float _3976 = _3967 * _3967;
                                float _3980 = (fma(_2300, _3860.z, fma(_2299, _3860.y, _3860.x * _2298)) + _3860.w) / _3921;
                                float _3981 = (fma(_2300, _3875.z, fma(_2299, _3875.y, _3875.x * _2298)) + _3875.w) / _3921;
                                float _3985 = 1.0 - dot(vec2(_3980, _3981), vec2(_3980, _3981));
                                float _5191 = isnan(0.0) ? _3985 : (isnan(_3985) ? 0.0 : max(_3985, 0.0));
                                float _3986 = isnan(1.0) ? _5191 : (isnan(_5191) ? 1.0 : min(_5191, 1.0));
                                float _3987 = _3986 * (((isnan(0.0) ? _3973 : (isnan(_3973) ? 0.0 : max(_3973, 0.0))) * _3963) / ((_3976 * 0.699999988079071044921875) + 1.0));
                                float _3999 = exp2(log2(1.0 / ((_3976 * 3.5) + 5.0)) * 0.25);
                                float _4000 = 1.0 - _1244;
                                float _4007 = sqrt(1.0 - ((1.0 - (_4000 * _4000)) * (1.0 - (_3999 * _3999))));
                                float _4008 = _4007 * _4007;
                                float _4009 = _4008 * _4008;
                                float _4010 = _3956 - _3460;
                                float _4011 = _3957 - _3461;
                                float _4012 = _3958 - _3462;
                                float _4016 = inversesqrt(dot(vec3(_4010, _4011, _4012), vec3(_4010, _4011, _4012)));
                                float _4020 = dot(vec3(_1169, _1172, _1175), vec3((-0.0) - _3460, (-0.0) - _3461, (-0.0) - _3462));
                                float _5202 = isnan(0.0) ? _4020 : (isnan(_4020) ? 0.0 : max(_4020, 0.0));
                                float _4023 = isnan(1.0) ? _5202 : (isnan(_5202) ? 1.0 : min(_5202, 1.0));
                                float _4024 = dot(vec3(_1169, _1172, _1175), vec3(_4016 * _4010, _4016 * _4011, _4016 * _4012));
                                float _5213 = isnan(0.0) ? _4024 : (isnan(_4024) ? 0.0 : max(_4024, 0.0));
                                float _4027 = isnan(1.0) ? _5213 : (isnan(_5213) ? 1.0 : min(_5213, 1.0));
                                float _4031 = ((_4027 * _4027) * (_4009 + (-1.0))) + 1.0;
                                float _4032 = _3969 * _4008;
                                float _4033 = _4032 * _4032;
                                float _4039 = ((1.0 - _4033) * dot(vec3(_1169, _1172, _1175), vec3(_3956, _3957, _3958))) + _4033;
                                float _5224 = isnan(0.0) ? _4039 : (isnan(_4039) ? 0.0 : max(_4039, 0.0));
                                float _4040 = isnan(1.0) ? _5224 : (isnan(_5224) ? 1.0 : min(_5224, 1.0));
                                float _4041 = 1.0 - _4008;
                                float _4051 = (0.5 / (((_4040 * ((_4023 * _4041) + _4008)) + 9.9999999392252902907785028219223e-09) + (((_4040 * _4041) + _4008) * _4023))) * _4040;
                                float _5235 = isnan(0.0) ? _4051 : (isnan(_4051) ? 0.0 : max(_4051, 0.0));
                                float _4061 = (_3986 * _3963) * (((_4009 * 3.1415927410125732421875) * (isnan(1.0) ? _5235 : (isnan(_5235) ? 1.0 : min(_5235, 1.0)))) / ((_4031 * _4031) * ((_3976 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3987 * _3833.y;
                                frontier_phi_78_pred_1 = _3987 * _3833.x;
                                frontier_phi_78_pred_2 = _4061 * _3845.z;
                                frontier_phi_78_pred_3 = _4061 * _3845.y;
                                frontier_phi_78_pred_4 = _4061 * _3845.x;
                                frontier_phi_78_pred_5 = _3987 * _3833.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _4069 = frontier_phi_78_pred;
                            _4068 = frontier_phi_78_pred_1;
                            _4067 = frontier_phi_78_pred_2;
                            _4066 = frontier_phi_78_pred_3;
                            _4065 = frontier_phi_78_pred_4;
                            _4070 = frontier_phi_78_pred_5;
                            _3775 = _4068 + _3788;
                            _3776 = _4069 + _3789;
                            _3777 = _4070 + _3790;
                            _3772 = _4065 + _3785;
                            _3773 = _4066 + _3786;
                            _3774 = _4067 + _3787;
                            if (_3792 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3785 = _3772;
                                _3786 = _3773;
                                _3787 = _3774;
                                _3788 = _3775;
                                _3789 = _3776;
                                _3790 = _3777;
                                _3791 = _3792;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3777;
                        frontier_phi_72_pred_1 = _3776;
                        frontier_phi_72_pred_2 = _3775;
                        frontier_phi_72_pred_3 = _3774;
                        frontier_phi_72_pred_4 = _3773;
                        frontier_phi_72_pred_5 = _3772;
                    }
                    _3445 = frontier_phi_72_pred;
                    _3443 = frontier_phi_72_pred_1;
                    _3441 = frontier_phi_72_pred_2;
                    _3439 = frontier_phi_72_pred_3;
                    _3437 = frontier_phi_72_pred_4;
                    _3435 = frontier_phi_72_pred_5;
                    uint _3580 = _3579 + 1u;
                    if (_3580 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3573 = _3435;
                        _3574 = _3437;
                        _3575 = _3439;
                        _3576 = _3441;
                        _3577 = _3443;
                        _3578 = _3445;
                        _3579 = _3580;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3445;
                frontier_phi_60_61_ladder_1 = _3443;
                frontier_phi_60_61_ladder_2 = _3439;
                frontier_phi_60_61_ladder_3 = _3437;
                frontier_phi_60_61_ladder_4 = _3435;
                frontier_phi_60_61_ladder_5 = _3441;
            }
            else
            {
                frontier_phi_60_61_ladder = _3331;
                frontier_phi_60_61_ladder_1 = _3329;
                frontier_phi_60_61_ladder_2 = _3325;
                frontier_phi_60_61_ladder_3 = _3323;
                frontier_phi_60_61_ladder_4 = _3321;
                frontier_phi_60_61_ladder_5 = _3327;
            }
            _3434 = frontier_phi_60_61_ladder_4;
            _3436 = frontier_phi_60_61_ladder_3;
            _3438 = frontier_phi_60_61_ladder_2;
            _3440 = frontier_phi_60_61_ladder_5;
            _3442 = frontier_phi_60_61_ladder_1;
            _3444 = frontier_phi_60_61_ladder;
        }
        float _3449 = isnan(1.0) ? _1228 : (isnan(_1228) ? 1.0 : min(_1228, 1.0));
        _3252 = (_3449 * _3440) + _2764;
        _3254 = (_3449 * _3442) + _2766;
        _3256 = (_3449 * _3444) + _2768;
        _3258 = ((_3434 * _1213) * _3449) + _3102;
        _3260 = ((_3436 * _1215) * _3449) + _3104;
        _3262 = ((_3438 * _1216) * _3449) + _3106;
    }
    else
    {
        _3252 = _2764;
        _3254 = _2766;
        _3256 = _2768;
        _3258 = _3102;
        _3260 = _3104;
        _3262 = _3106;
    }
    float _5251 = isnan(0.0) ? _1203 : (isnan(_1203) ? 0.0 : max(_1203, 0.0));
    float _5262 = isnan(0.0) ? _1204 : (isnan(_1204) ? 0.0 : max(_1204, 0.0));
    float _5273 = isnan(0.0) ? _1205 : (isnan(_1205) ? 0.0 : max(_1205, 0.0));
    float _5284 = isnan(0.0) ? _1064 : (isnan(_1064) ? 0.0 : max(_1064, 0.0));
    float _3287 = cbInstanceData._m0[_1188 + 6u].w * (isnan(1.0) ? _5284 : (isnan(_5284) ? 1.0 : min(_5284, 1.0)));
    float _3292 = _1150 / cbSceneParam._m0[86u].x;
    float _3293 = _1151 / cbSceneParam._m0[86u].y;
    vec4 _3307 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3292, _3293, (log2((isnan(cbSceneParam._m0[77u].w) ? _1085 : (isnan(_1085) ? cbSceneParam._m0[77u].w : min(_1085, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3309 = _3307.x;
    float _3310 = _3307.y;
    float _3311 = _3307.z;
    float _3312 = _3307.w;
    float _3384;
    float _3386;
    float _3388;
    float _3390;
    if (_1085 > cbSceneParam._m0[78u].w)
    {
        float _3346 = isnan(_1085) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1085 : min(cbSceneParam._m0[80u].w, _1085));
        float _3347 = _3346 / _1085;
        float _3358 = _3347 * _1135;
        float _3359 = _1136 * _3347;
        float _3360 = (-0.0) - _3359;
        float _3362 = _3347 * _1137;
        float _3364 = (cbSceneParam._m0[77u].w * _3360) / _3346;
        float _3365 = _3364 + cbSceneParam._m0[79u].w;
        float _3366 = cbSceneParam._m0[79u].w - _3359;
        float _3372 = sqrt(((_3358 * _3358) + (_3359 * _3359)) + (_3362 * _3362));
        float _3375 = (1.0 - (cbSceneParam._m0[77u].w / _3346)) * _3372;
        float _3380 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3382 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3535;
        if (abs((_3360 - _3364) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3535 = ((((_3365 > 0.0) ? exp2(_3380 * _3365) : (2.0 - exp2(_3382 * _3365))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3375;
        }
        else
        {
            float _3495 = 1.0 / cbSceneParam._m0[80u].x;
            float _3496 = isnan(_3366) ? _3365 : (isnan(_3365) ? _3366 : max(_3365, _3366));
            float _3497 = isnan(_3366) ? _3365 : (isnan(_3365) ? _3366 : min(_3365, _3366));
            float _3506 = isnan(0.0) ? _3496 : (isnan(_3496) ? 0.0 : min(_3496, 0.0));
            float _3507 = isnan(0.0) ? _3497 : (isnan(_3497) ? 0.0 : min(_3497, 0.0));
            _3535 = ((abs(_3372 / _3360) * cbSceneParam._m0[80u].y) * ((((_3506 - _3507) * 2.0) - ((exp2(_3380 * (isnan(0.0) ? _3496 : (isnan(_3496) ? 0.0 : max(_3496, 0.0)))) - exp2(_3380 * (isnan(0.0) ? _3497 : (isnan(_3497) ? 0.0 : max(_3497, 0.0))))) * _3495)) - ((exp2(_3382 * _3506) - exp2(_3382 * _3507)) * _3495))) + (_3375 * cbSceneParam._m0[80u].z);
        }
        vec4 _3537 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3292, _3293, 1.0), 0.0);
        float _3546 = exp2((_3535 * (-1.44269502162933349609375)) * (1.0 - _3537.w));
        float _3547 = log2(_3546);
        float _3563 = log2(_3312);
        _3384 = (exp2(_3563 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3547 * cbSceneParam._m0[78u].x)) * _3537.x) / cbSceneParam._m0[78u].x)) + _3309;
        _3386 = (exp2(_3563 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3547 * cbSceneParam._m0[78u].y)) * _3537.y) / cbSceneParam._m0[78u].y)) + _3310;
        _3388 = (exp2(_3563 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3547 * cbSceneParam._m0[78u].z)) * _3537.z) / cbSceneParam._m0[78u].z)) + _3311;
        _3390 = _3546 * _3312;
    }
    else
    {
        _3384 = _3309;
        _3386 = _3310;
        _3388 = _3311;
        _3390 = _3312;
    }
    float _3402 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3403 = _3402 == 3.0;
    float _3404 = log2(_3390);
    float _3411 = exp2(_3404 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5251 : (isnan(_5251) ? 1.0 : min(_5251, 1.0))) * (_3252 + ((isnan(0.0) ? _1953 : (isnan(_1953) ? 0.0 : max(_1953, 0.0))) * _1228))) + ((_3258 + ((isnan(0.0) ? _2245 : (isnan(_2245) ? 0.0 : max(_2245, 0.0))) * _2032)) * cbPerFrame._m0[3u].x));
    float _3412 = exp2(_3404 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5262 : (isnan(_5262) ? 1.0 : min(_5262, 1.0))) * (_3254 + ((isnan(0.0) ? _1956 : (isnan(_1956) ? 0.0 : max(_1956, 0.0))) * _1228))) + ((_3260 + ((isnan(0.0) ? _2248 : (isnan(_2248) ? 0.0 : max(_2248, 0.0))) * _2032)) * cbPerFrame._m0[3u].x));
    float _3413 = exp2(_3404 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5273 : (isnan(_5273) ? 1.0 : min(_5273, 1.0))) * (_3256 + ((isnan(0.0) ? _1959 : (isnan(_1959) ? 0.0 : max(_1959, 0.0))) * _1228))) + ((_3262 + ((isnan(0.0) ? _2251 : (isnan(_2251) ? 0.0 : max(_2251, 0.0))) * _2032)) * cbPerFrame._m0[3u].x));
    float _3422 = (_3402 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3422 * (_3403 ? _3411 : (_3411 + (cbSceneParam._m0[72u].w * _3384)));
    SV_Target.y = _3422 * (_3403 ? _3412 : (_3412 + (cbSceneParam._m0[72u].w * _3386)));
    SV_Target.z = _3422 * (_3403 ? _3413 : (_3413 + (cbSceneParam._m0[72u].w * _3388)));
    SV_Target.w = _3287;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3287;
}


