#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_1;
layout(location = 7) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TANGENT_2_1;
layout(location = 4) out vec4 TEXCOORD_3;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out float TEXCOORD_8;
layout(location = 6, component = 1) out float TEXCOORD_9;
layout(location = 6, component = 2) out float TEXCOORD_10;
layout(location = 6, component = 3) out float TEXCOORD_16;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_9 = 0.0;
    TEXCOORD_10 = 0.0;
    TEXCOORD_16 = 0.0;
    float _194 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _196 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _197 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _207 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _208 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _209 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _219 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _220 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _221 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _227 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _229 = texelFetch(g_InstanceIndexBuffer, int(_227));
    uint _230 = _229.x;
    uint _240 = (floatBitsToUint(cbInstanceData._m0[(_230 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _247 = _240 + 1u;
    uint _254 = _240 + 2u;
    precise float _261 = POSITION.x * cbObjMatrix._m0[_240].x;
    precise float _262 = POSITION.y * cbObjMatrix._m0[_240].y;
    precise float _263 = _262 + _261;
    precise float _264 = POSITION.z * cbObjMatrix._m0[_240].z;
    precise float _265 = _264 + _263;
    precise float _266 = 1.0 * cbObjMatrix._m0[_240].w;
    precise float _268 = _266 + _265;
    precise float _269 = POSITION.x * cbObjMatrix._m0[_247].x;
    precise float _270 = POSITION.y * cbObjMatrix._m0[_247].y;
    precise float _271 = _270 + _269;
    precise float _272 = POSITION.z * cbObjMatrix._m0[_247].z;
    precise float _273 = _272 + _271;
    precise float _274 = 1.0 * cbObjMatrix._m0[_247].w;
    precise float _275 = _274 + _273;
    precise float _276 = POSITION.x * cbObjMatrix._m0[_254].x;
    precise float _277 = POSITION.y * cbObjMatrix._m0[_254].y;
    precise float _278 = _277 + _276;
    precise float _279 = POSITION.z * cbObjMatrix._m0[_254].z;
    precise float _280 = _279 + _278;
    precise float _281 = 1.0 * cbObjMatrix._m0[_254].w;
    precise float _282 = _281 + _280;
    float _288 = cbSceneParam._m0[3u].x - _268;
    float _289 = cbSceneParam._m0[3u].y - _275;
    float _290 = cbSceneParam._m0[3u].z - _282;
    precise float _326 = _268 - cbSceneParam._m0[3u].x;
    precise float _327 = _275 - cbSceneParam._m0[3u].y;
    precise float _328 = _282 - cbSceneParam._m0[3u].z;
    precise float _356 = _326 * cbSceneParam._m0[24u].x;
    precise float _357 = _327 * cbSceneParam._m0[24u].y;
    precise float _358 = _357 + _356;
    precise float _359 = _328 * cbSceneParam._m0[24u].z;
    precise float _360 = _359 + _358;
    precise float _361 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _362 = _361 + _360;
    precise float _363 = _326 * cbSceneParam._m0[25u].x;
    precise float _364 = _327 * cbSceneParam._m0[25u].y;
    precise float _365 = _364 + _363;
    precise float _366 = _328 * cbSceneParam._m0[25u].z;
    precise float _367 = _366 + _365;
    precise float _368 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _369 = _368 + _367;
    precise float _370 = _326 * cbSceneParam._m0[26u].x;
    precise float _371 = _327 * cbSceneParam._m0[26u].y;
    precise float _372 = _371 + _370;
    precise float _373 = _328 * cbSceneParam._m0[26u].z;
    precise float _374 = _373 + _372;
    precise float _375 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _376 = _375 + _374;
    precise float _377 = _326 * cbSceneParam._m0[27u].x;
    precise float _378 = _327 * cbSceneParam._m0[27u].y;
    precise float _379 = _378 + _377;
    precise float _380 = _328 * cbSceneParam._m0[27u].z;
    precise float _381 = _380 + _379;
    precise float _382 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _383 = _382 + _381;
    gl_Position.x = _362;
    gl_Position.y = _369;
    gl_Position.z = _376;
    gl_Position.w = _383;
    NORMAL_1.x = fma(_197, cbObjMatrix._m0[_240].z, fma(_196, cbObjMatrix._m0[_240].y, cbObjMatrix._m0[_240].x * _194));
    NORMAL_1.y = fma(_197, cbObjMatrix._m0[_247].z, fma(_196, cbObjMatrix._m0[_247].y, cbObjMatrix._m0[_247].x * _194));
    NORMAL_1.z = fma(_197, cbObjMatrix._m0[_254].z, fma(_196, cbObjMatrix._m0[_254].y, cbObjMatrix._m0[_254].x * _194));
    NORMAL_1.w = float(_230);
    TANGENT_1.x = fma(_209, cbObjMatrix._m0[_240].z, fma(_208, cbObjMatrix._m0[_240].y, cbObjMatrix._m0[_240].x * _207));
    TANGENT_1.y = fma(_209, cbObjMatrix._m0[_247].z, fma(_208, cbObjMatrix._m0[_247].y, cbObjMatrix._m0[_247].x * _207));
    TANGENT_1.z = fma(_209, cbObjMatrix._m0[_254].z, fma(_208, cbObjMatrix._m0[_254].y, cbObjMatrix._m0[_254].x * _207));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_221, cbObjMatrix._m0[_240].z, fma(_220, cbObjMatrix._m0[_240].y, cbObjMatrix._m0[_240].x * _219));
    TANGENT_2_1.y = fma(_221, cbObjMatrix._m0[_247].z, fma(_220, cbObjMatrix._m0[_247].y, cbObjMatrix._m0[_247].x * _219));
    TANGENT_2_1.z = fma(_221, cbObjMatrix._m0[_254].z, fma(_220, cbObjMatrix._m0[_254].y, cbObjMatrix._m0[_254].x * _219));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_3.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_3.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
    TEXCOORD_8 = TEXCOORD_2.x;
    TEXCOORD_9 = TEXCOORD_2.y;
    TEXCOORD_10 = TEXCOORD_2.z;
    TEXCOORD_16 = sqrt(((_288 * _288) + (_289 * _289)) + (_290 * _290));
}


