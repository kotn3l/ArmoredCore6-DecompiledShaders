#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_3;
layout(location = 6) out vec4 TEXCOORD_5;
layout(location = 7) out float TEXCOORD_8;
layout(location = 7, component = 1) out float TEXCOORD_9;
layout(location = 7, component = 2) out float TEXCOORD_10;
layout(location = 8) out vec4 TEXCOORD_13;
layout(location = 9) out vec4 TEXCOORD_14;
layout(location = 10) out vec3 TEXCOORD_15;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_9 = 0.0;
    TEXCOORD_10 = 0.0;
    TEXCOORD_13.x = 0.0;
    TEXCOORD_13.y = 0.0;
    TEXCOORD_13.z = 0.0;
    TEXCOORD_13.w = 0.0;
    TEXCOORD_14.x = 0.0;
    TEXCOORD_14.y = 0.0;
    TEXCOORD_14.z = 0.0;
    TEXCOORD_14.w = 0.0;
    TEXCOORD_15.x = 0.0;
    TEXCOORD_15.y = 0.0;
    TEXCOORD_15.z = 0.0;
    float _233 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _235 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _236 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _245 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _246 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _247 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _257 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _258 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _259 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _269 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _271 = texelFetch(g_InstanceIndexBuffer, int(_269));
    uint _272 = _271.x;
    precise float _273 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _278 = isnan(_273) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _273 : max(0.001000000047497451305389404296875, _273));
    precise float _280 = BLENDWEIGHT.x / _278;
    precise float _281 = BLENDWEIGHT.y / _278;
    precise float _282 = BLENDWEIGHT.z / _278;
    precise float _283 = BLENDWEIGHT.w / _278;
    uvec4 _290 = floatBitsToUint(cbInstanceData._m0[(_272 * 13u) + 4u]);
    uint _291 = _290.x;
    uint _293 = (_291 + uint(float(BLENDINDICES.x))) * 3u;
    uint _300 = _293 + 1u;
    uint _307 = _293 + 2u;
    precise float _314 = _280 * cbObjMatrix._m0[_293].x;
    precise float _315 = _280 * cbObjMatrix._m0[_300].x;
    precise float _316 = _280 * cbObjMatrix._m0[_307].x;
    precise float _317 = _280 * cbObjMatrix._m0[_293].y;
    precise float _318 = _280 * cbObjMatrix._m0[_300].y;
    precise float _319 = _280 * cbObjMatrix._m0[_307].y;
    precise float _320 = _280 * cbObjMatrix._m0[_293].z;
    precise float _321 = _280 * cbObjMatrix._m0[_300].z;
    precise float _322 = _280 * cbObjMatrix._m0[_307].z;
    precise float _323 = _280 * cbObjMatrix._m0[_293].w;
    precise float _324 = _280 * cbObjMatrix._m0[_300].w;
    precise float _325 = _280 * cbObjMatrix._m0[_307].w;
    uint _328 = (_291 + uint(float(BLENDINDICES.y))) * 3u;
    uint _335 = _328 + 1u;
    uint _342 = _328 + 2u;
    precise float _349 = _281 * cbObjMatrix._m0[_328].x;
    precise float _350 = _281 * cbObjMatrix._m0[_335].x;
    precise float _351 = _281 * cbObjMatrix._m0[_342].x;
    precise float _352 = _281 * cbObjMatrix._m0[_328].y;
    precise float _353 = _281 * cbObjMatrix._m0[_335].y;
    precise float _354 = _281 * cbObjMatrix._m0[_342].y;
    precise float _355 = _281 * cbObjMatrix._m0[_328].z;
    precise float _356 = _281 * cbObjMatrix._m0[_335].z;
    precise float _357 = _281 * cbObjMatrix._m0[_342].z;
    precise float _358 = _281 * cbObjMatrix._m0[_328].w;
    precise float _359 = _281 * cbObjMatrix._m0[_335].w;
    precise float _360 = _281 * cbObjMatrix._m0[_342].w;
    precise float _361 = _314 + _349;
    precise float _362 = _315 + _350;
    precise float _363 = _316 + _351;
    precise float _364 = _317 + _352;
    precise float _365 = _318 + _353;
    precise float _366 = _319 + _354;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    precise float _371 = _324 + _359;
    precise float _372 = _325 + _360;
    uint _375 = (_291 + uint(float(BLENDINDICES.z))) * 3u;
    uint _382 = _375 + 1u;
    uint _389 = _375 + 2u;
    precise float _396 = _282 * cbObjMatrix._m0[_375].x;
    precise float _397 = _282 * cbObjMatrix._m0[_382].x;
    precise float _398 = _282 * cbObjMatrix._m0[_389].x;
    precise float _399 = _282 * cbObjMatrix._m0[_375].y;
    precise float _400 = _282 * cbObjMatrix._m0[_382].y;
    precise float _401 = _282 * cbObjMatrix._m0[_389].y;
    precise float _402 = _282 * cbObjMatrix._m0[_375].z;
    precise float _403 = _282 * cbObjMatrix._m0[_382].z;
    precise float _404 = _282 * cbObjMatrix._m0[_389].z;
    precise float _405 = _282 * cbObjMatrix._m0[_375].w;
    precise float _406 = _282 * cbObjMatrix._m0[_382].w;
    precise float _407 = _282 * cbObjMatrix._m0[_389].w;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    precise float _413 = _366 + _401;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    precise float _418 = _371 + _406;
    precise float _419 = _372 + _407;
    uint _422 = (_291 + uint(float(BLENDINDICES.w))) * 3u;
    uint _429 = _422 + 1u;
    uint _436 = _422 + 2u;
    precise float _443 = _283 * cbObjMatrix._m0[_422].x;
    precise float _444 = _283 * cbObjMatrix._m0[_429].x;
    precise float _445 = _283 * cbObjMatrix._m0[_436].x;
    precise float _446 = _283 * cbObjMatrix._m0[_422].y;
    precise float _447 = _283 * cbObjMatrix._m0[_429].y;
    precise float _448 = _283 * cbObjMatrix._m0[_436].y;
    precise float _449 = _283 * cbObjMatrix._m0[_422].z;
    precise float _450 = _283 * cbObjMatrix._m0[_429].z;
    precise float _451 = _283 * cbObjMatrix._m0[_436].z;
    precise float _452 = _283 * cbObjMatrix._m0[_422].w;
    precise float _453 = _283 * cbObjMatrix._m0[_429].w;
    precise float _454 = _283 * cbObjMatrix._m0[_436].w;
    precise float _455 = _408 + _443;
    precise float _456 = _409 + _444;
    precise float _457 = _410 + _445;
    precise float _458 = _411 + _446;
    precise float _459 = _412 + _447;
    precise float _460 = _413 + _448;
    precise float _461 = _414 + _449;
    precise float _462 = _415 + _450;
    precise float _463 = _416 + _451;
    precise float _464 = _417 + _452;
    precise float _465 = _418 + _453;
    precise float _466 = _419 + _454;
    precise float _467 = POSITION.x * _455;
    precise float _468 = POSITION.y * _458;
    precise float _469 = _468 + _467;
    precise float _470 = POSITION.z * _461;
    precise float _471 = _470 + _469;
    precise float _472 = 1.0 * _464;
    precise float _473 = _472 + _471;
    precise float _474 = POSITION.x * _456;
    precise float _475 = POSITION.y * _459;
    precise float _476 = _475 + _474;
    precise float _477 = POSITION.z * _462;
    precise float _478 = _477 + _476;
    precise float _479 = 1.0 * _465;
    precise float _480 = _479 + _478;
    precise float _481 = POSITION.x * _457;
    precise float _482 = POSITION.y * _460;
    precise float _483 = _482 + _481;
    precise float _484 = POSITION.z * _463;
    precise float _485 = _484 + _483;
    precise float _486 = 1.0 * _466;
    precise float _487 = _486 + _485;
    float _662 = (((((cbPrevObjMatrix._m0[_328].w * _281) + (cbPrevObjMatrix._m0[_293].w * _280)) + (cbPrevObjMatrix._m0[_375].w * _282)) + (cbPrevObjMatrix._m0[_422].w * _283)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_328].z * _281) + (cbPrevObjMatrix._m0[_293].z * _280)) + (cbPrevObjMatrix._m0[_375].z * _282)) + (cbPrevObjMatrix._m0[_422].z * _283), fma(POSITION.y, (((cbPrevObjMatrix._m0[_328].y * _281) + (cbPrevObjMatrix._m0[_293].y * _280)) + (cbPrevObjMatrix._m0[_375].y * _282)) + (cbPrevObjMatrix._m0[_422].y * _283), ((((cbPrevObjMatrix._m0[_328].x * _281) + (cbPrevObjMatrix._m0[_293].x * _280)) + (cbPrevObjMatrix._m0[_375].x * _282)) + (cbPrevObjMatrix._m0[_422].x * _283)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _663 = (((((cbPrevObjMatrix._m0[_335].w * _281) + (cbPrevObjMatrix._m0[_300].w * _280)) + (cbPrevObjMatrix._m0[_382].w * _282)) + (cbPrevObjMatrix._m0[_429].w * _283)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_335].z * _281) + (cbPrevObjMatrix._m0[_300].z * _280)) + (cbPrevObjMatrix._m0[_382].z * _282)) + (cbPrevObjMatrix._m0[_429].z * _283), fma(POSITION.y, (((cbPrevObjMatrix._m0[_335].y * _281) + (cbPrevObjMatrix._m0[_300].y * _280)) + (cbPrevObjMatrix._m0[_382].y * _282)) + (cbPrevObjMatrix._m0[_429].y * _283), ((((cbPrevObjMatrix._m0[_335].x * _281) + (cbPrevObjMatrix._m0[_300].x * _280)) + (cbPrevObjMatrix._m0[_382].x * _282)) + (cbPrevObjMatrix._m0[_429].x * _283)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _664 = (((((cbPrevObjMatrix._m0[_342].w * _281) + (cbPrevObjMatrix._m0[_307].w * _280)) + (cbPrevObjMatrix._m0[_389].w * _282)) + (cbPrevObjMatrix._m0[_436].w * _283)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_342].z * _281) + (cbPrevObjMatrix._m0[_307].z * _280)) + (cbPrevObjMatrix._m0[_389].z * _282)) + (cbPrevObjMatrix._m0[_436].z * _283), fma(POSITION.y, (((cbPrevObjMatrix._m0[_342].y * _281) + (cbPrevObjMatrix._m0[_307].y * _280)) + (cbPrevObjMatrix._m0[_389].y * _282)) + (cbPrevObjMatrix._m0[_436].y * _283), ((((cbPrevObjMatrix._m0[_342].x * _281) + (cbPrevObjMatrix._m0[_307].x * _280)) + (cbPrevObjMatrix._m0[_389].x * _282)) + (cbPrevObjMatrix._m0[_436].x * _283)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _711 = fma(_236, _461, fma(_235, _458, _455 * _233));
    float _714 = fma(_236, _462, fma(_235, _459, _456 * _233));
    float _717 = fma(_236, _463, fma(_235, _460, _457 * _233));
    precise float _742 = _473 - cbSceneParam._m0[3u].x;
    precise float _743 = _480 - cbSceneParam._m0[3u].y;
    precise float _744 = _487 - cbSceneParam._m0[3u].z;
    precise float _772 = _742 * cbSceneParam._m0[24u].x;
    precise float _773 = _743 * cbSceneParam._m0[24u].y;
    precise float _774 = _773 + _772;
    precise float _775 = _744 * cbSceneParam._m0[24u].z;
    precise float _776 = _775 + _774;
    precise float _777 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _778 = _777 + _776;
    precise float _779 = _742 * cbSceneParam._m0[25u].x;
    precise float _780 = _743 * cbSceneParam._m0[25u].y;
    precise float _781 = _780 + _779;
    precise float _782 = _744 * cbSceneParam._m0[25u].z;
    precise float _783 = _782 + _781;
    precise float _784 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _785 = _784 + _783;
    precise float _786 = _742 * cbSceneParam._m0[26u].x;
    precise float _787 = _743 * cbSceneParam._m0[26u].y;
    precise float _788 = _787 + _786;
    precise float _789 = _744 * cbSceneParam._m0[26u].z;
    precise float _790 = _789 + _788;
    precise float _791 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _792 = _791 + _790;
    precise float _793 = _742 * cbSceneParam._m0[27u].x;
    precise float _794 = _743 * cbSceneParam._m0[27u].y;
    precise float _795 = _794 + _793;
    precise float _796 = _744 * cbSceneParam._m0[27u].z;
    precise float _797 = _796 + _795;
    precise float _798 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _799 = _798 + _797;
    gl_Position.x = _778;
    gl_Position.y = _785;
    gl_Position.z = _792;
    gl_Position.w = _799;
    POSITION_1.x = _778;
    POSITION_1.y = _785;
    POSITION_1.z = _792;
    POSITION_1.w = _799;
    NORMAL_1.x = _711;
    NORMAL_1.y = _714;
    NORMAL_1.z = _717;
    NORMAL_1.w = float(_272);
    TANGENT_1.x = fma(_247, _461, fma(_246, _458, _455 * _245));
    TANGENT_1.y = fma(_247, _462, fma(_246, _459, _456 * _245));
    TANGENT_1.z = fma(_247, _463, fma(_246, _460, _457 * _245));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_259, _461, fma(_258, _458, _455 * _257));
    TANGENT_2_1.y = fma(_259, _462, fma(_258, _459, _456 * _257));
    TANGENT_2_1.z = fma(_259, _463, fma(_258, _460, _457 * _257));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_3.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_3.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
    TEXCOORD_8 = TEXCOORD_2.x;
    TEXCOORD_9 = TEXCOORD_2.y;
    TEXCOORD_10 = TEXCOORD_2.z;
    TEXCOORD_13.x = _778;
    TEXCOORD_13.y = _785;
    TEXCOORD_13.z = _792;
    TEXCOORD_13.w = _799;
    TEXCOORD_14.x = fma(_664, cbSceneParam._m0[29u].z, fma(_663, cbSceneParam._m0[29u].y, _662 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_14.y = fma(_664, cbSceneParam._m0[30u].z, fma(_663, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _662)) + cbSceneParam._m0[30u].w;
    TEXCOORD_14.z = fma(_664, cbSceneParam._m0[31u].z, fma(_663, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _662)) + cbSceneParam._m0[31u].w;
    TEXCOORD_14.w = fma(_664, cbSceneParam._m0[32u].z, fma(_663, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _662)) + cbSceneParam._m0[32u].w;
    TEXCOORD_15.x = _711;
    TEXCOORD_15.y = _714;
    TEXCOORD_15.z = _717;
}


