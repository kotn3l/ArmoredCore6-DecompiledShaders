#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_23;
layout(set = 0, binding = 11) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_24;
layout(set = 0, binding = 12) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_4;
layout(set = 0, binding = 13) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_6;
layout(set = 0, binding = 14) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_7;
layout(set = 0, binding = 15) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_14;
layout(set = 0, binding = 3) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_16;
layout(set = 0, binding = 4) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_17;
layout(set = 0, binding = 5) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_18;
layout(set = 0, binding = 6) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_19;
layout(set = 0, binding = 7) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_20;
layout(set = 0, binding = 9) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_22;
layout(set = 0, binding = 17) uniform texture2DArray C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_0;
layout(set = 0, binding = 18) uniform texture2DArray C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in float TEXCOORD_8;
layout(location = 7, component = 1) in float TEXCOORD_9;
layout(location = 7, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1527;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _232 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _233 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _234 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _240 = inversesqrt(dot(vec3(_232, _233, _234), vec3(_232, _233, _234)));
    float _247 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _254 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _317 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _321 = _317.z;
    float _334 = exp2(log2((1.0 - _321) * cbMtdParam._m0[26u].z) * cbMtdParam._m0[25u].w);
    float _335 = isnan(0.0) ? _334 : (isnan(_334) ? 0.0 : max(_334, 0.0));
    float _336 = isnan(1.0) ? _335 : (isnan(_335) ? 1.0 : min(_335, 1.0));
    vec4 _353 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w));
    float _365 = exp2(log2(_353.w * cbMtdParam._m0[29u].y) * cbMtdParam._m0[23u].x);
    float _366 = isnan(0.0) ? _365 : (isnan(_365) ? 0.0 : max(_365, 0.0));
    float _367 = isnan(1.0) ? _366 : (isnan(_366) ? 1.0 : min(_366, 1.0));
    float _376 = exp2(log2(cbMtdParam._m0[23u].y * _321) * cbMtdParam._m0[22u].y);
    float _377 = isnan(0.0) ? _376 : (isnan(_376) ? 0.0 : max(_376, 0.0));
    float _378 = isnan(1.0) ? _377 : (isnan(_377) ? 1.0 : min(_377, 1.0));
    float _399 = roundEven(5.0 - ((texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w)).x + (-0.02500000037252902984619140625)) * 8.0));
    float _400 = isnan(0.0) ? _399 : (isnan(_399) ? 0.0 : max(_399, 0.0));
    float _401 = isnan(4.0) ? _400 : (isnan(_400) ? 4.0 : min(_400, 4.0));
    float _413 = floor(_401);
    vec4 _416 = texture(sampler2DArray(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_0, SS_DiffuseMap), vec3((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w, _413));
    vec4 _440 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _451 = cbMtdParam._m0[9u].x * _440.x;
    float _452 = cbMtdParam._m0[9u].y * _440.y;
    float _453 = cbMtdParam._m0[9u].z * _440.z;
    float _460 = (((cbMtdParam._m0[10u].x * _416.x) - _451) * _378) + _451;
    float _461 = (((cbMtdParam._m0[10u].y * _416.y) - _452) * _378) + _452;
    float _462 = (((cbMtdParam._m0[10u].z * _416.z) - _453) * _378) + _453;
    float _468 = exp2(log2(_317.w) * cbMtdParam._m0[23u].w);
    vec4 _481 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _501 = (((cbMtdParam._m0[16u].x * _481.x) - _460) * _468) + _460;
    float _502 = (((cbMtdParam._m0[16u].y * _481.y) - _461) * _468) + _461;
    float _503 = (((cbMtdParam._m0[16u].z * _481.z) - _462) * _468) + _462;
    vec4 _516 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _536 = (((cbMtdParam._m0[19u].x * _516.x) - _501) * _367) + _501;
    float _537 = (((cbMtdParam._m0[19u].y * _516.y) - _502) * _367) + _502;
    float _538 = (((cbMtdParam._m0[19u].z * _516.z) - _503) * _367) + _503;
    vec4 _551 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_19, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _576 = (_353.x * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].x * _551.x) - _536) * _336) + _536);
    float _578 = (_353.y * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].y * _551.y) - _537) * _336) + _537);
    float _580 = (_353.z * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].z * _551.z) - _538) * _336) + _538);
    vec4 _593 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_17, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _612 = TEXCOORD_5.x - ((cbMtdParam._m0[24u].x * (1.0 - TEXCOORD_5.x)) * (texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x + 0.00999999977648258209228515625));
    float _614 = _612 * (cbMtdParam._m0[24u].z + 1.0);
    float _4175 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _615 = isnan(1.0) ? _4175 : (isnan(_4175) ? 1.0 : min(_4175, 1.0));
    float _622 = (_615 * ((cbMtdParam._m0[11u].x * _593.x) - _576)) + _576;
    float _623 = (((cbMtdParam._m0[11u].y * _593.y) - _578) * _615) + _578;
    float _624 = (((cbMtdParam._m0[11u].z * _593.z) - _580) * _615) + _580;
    float _628 = cbMtdParam._m0[28u].x * TEXCOORD_8;
    float _636 = (_628 - (((texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_23, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x + 0.00999999977648258209228515625) * cbMtdParam._m0[27u].z) * (1.0 - _628))) * (cbMtdParam._m0[27u].w + 1.0);
    float _4186 = isnan(0.0) ? _636 : (isnan(_636) ? 0.0 : max(_636, 0.0));
    float _637 = isnan(1.0) ? _4186 : (isnan(_4186) ? 1.0 : min(_4186, 1.0));
    float _644 = ((cbMtdParam._m0[21u].x - _622) * _637) + _622;
    float _645 = ((cbMtdParam._m0[21u].y - _623) * _637) + _623;
    float _646 = ((cbMtdParam._m0[21u].z - _624) * _637) + _624;
    vec4 _659 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_24, SS_ClampLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.z) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.w) + cbTextureTilingScale._m0[11u].w));
    float _667 = (_659.x + (-1.0)) + (cbMtdParam._m0[28u].y * 2.0);
    float _4197 = isnan(0.0) ? _667 : (isnan(_667) ? 0.0 : max(_667, 0.0));
    float _673 = exp2(log2(cbMtdParam._m0[28u].w * (isnan(1.0) ? _4197 : (isnan(_4197) ? 1.0 : min(_4197, 1.0)))) * cbMtdParam._m0[28u].z);
    float _4208 = isnan(0.0) ? _673 : (isnan(_673) ? 0.0 : max(_673, 0.0));
    float _674 = isnan(1.0) ? _4208 : (isnan(_4208) ? 1.0 : min(_4208, 1.0));
    float _211[5];
    float _212[5];
    _211[0u] = cbMtdParam._m0[29u].z;
    _212[0u] = cbMtdParam._m0[29u].w;
    _211[1u] = cbMtdParam._m0[31u].z;
    _212[1u] = cbMtdParam._m0[31u].w;
    _211[2u] = cbMtdParam._m0[31u].x;
    _212[2u] = cbMtdParam._m0[31u].y;
    _211[3u] = cbMtdParam._m0[30u].z;
    _212[3u] = cbMtdParam._m0[30u].w;
    _211[4u] = cbMtdParam._m0[30u].x;
    _212[4u] = cbMtdParam._m0[30u].y;
    float _714 = isnan(0.0) ? _401 : (isnan(_401) ? 0.0 : max(_401, 0.0));
    uint _716 = uint(int(isnan(4.0) ? _714 : (isnan(_714) ? 4.0 : min(_714, 4.0))));
    float _723 = ((_212[_716] - cbMtdParam._m0[22u].z) * _378) + cbMtdParam._m0[22u].z;
    float _726 = ((cbMtdParam._m0[22u].w - _723) * _468) + _723;
    float _729 = ((cbMtdParam._m0[25u].x - _726) * _367) + _726;
    float _732 = ((cbMtdParam._m0[26u].x - _729) * _336) + _729;
    float _737 = (cbMtdParam._m0[24u].y + 1.0) * _612;
    float _4229 = isnan(0.0) ? _737 : (isnan(_737) ? 0.0 : max(_737, 0.0));
    float _738 = isnan(1.0) ? _4229 : (isnan(_4229) ? 1.0 : min(_4229, 1.0));
    float _740 = _732 - (_732 * _738);
    float _742 = _740 - (_740 * _628);
    vec4 _756 = texture(sampler2DArray(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_1, SS_BumpMap), vec3((cbTextureTilingScale._m0[18u].x * TEXCOORD.x) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD.y) + cbTextureTilingScale._m0[18u].w, _413));
    vec4 _774 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w));
    float _776 = _774.x;
    float _777 = _774.y;
    float _782 = cbMtdParam._m0[22u].x + _774.z;
    float _785 = (((_756.z + _211[_716]) - _782) * _378) + _782;
    vec4 _798 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.x) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.y) + cbTextureTilingScale._m0[15u].w));
    float _809 = (((_798.z - _785) + cbMtdParam._m0[29u].x) * _468) + _785;
    float _814 = ((((_321 * 2.0) * _809) - _809) * cbMtdParam._m0[24u].w) + _809;
    vec4 _826 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w));
    float _837 = (((cbMtdParam._m0[23u].z + _826.z) - _814) * _367) + _814;
    vec4 _850 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_20, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _861 = (((_850.z - _837) + cbMtdParam._m0[26u].y) * _336) + _837;
    vec4 _873 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _884 = ((_873.z - _861) * _738) + _861;
    vec4 _899 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_22, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _913 = ((cbMtdParam._m0[27u].y * _628) * ((_899.z * cbMtdParam._m0[27u].x) - _884)) + _884;
    float _928 = ((_756.x - _776) * _378) + _776;
    float _929 = ((_756.y - _777) * _378) + _777;
    float _934 = ((_798.x - _928) * _468) + _928;
    float _935 = ((_798.y - _929) * _468) + _929;
    float _940 = ((_826.x - _934) * _367) + _934;
    float _941 = ((_826.y - _935) * _367) + _935;
    float _950 = ((((_850.x - _940) * _336) + _940) * 2.0) + (-1.0);
    float _951 = ((((_850.y - _941) * _336) + _941) * 2.0) + (-1.0);
    float _952 = dot(vec2(_950, _951), vec2(_950, _951));
    float _4240 = isnan(0.0) ? _952 : (isnan(_952) ? 0.0 : max(_952, 0.0));
    float _957 = sqrt(1.0 - (isnan(1.0) ? _4240 : (isnan(_4240) ? 1.0 : min(_4240, 1.0))));
    float _973 = (((cbMtdParam._m0[25u].y * ((_317.x * 2.0) + (-1.0))) + _950) + (((((_873.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[25u].z) * _738)) + ((((_899.x * 2.0) + (-1.0)) * _628) * cbMtdParam._m0[26u].w);
    float _974 = (((cbMtdParam._m0[25u].y * ((_317.y * 2.0) + (-1.0))) + _951) + (((((_873.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[25u].z) * _738)) + (((cbMtdParam._m0[28u].x * TEXCOORD_9) * ((_899.y * 2.0) + (-1.0))) * cbMtdParam._m0[26u].w);
    float _977 = fma(_957, _247 * NORMAL.x, fma(_974, _254 * TANGENT.x, (_240 * _232) * _973));
    float _980 = fma(_957, _247 * NORMAL.y, fma(_974, _254 * TANGENT.y, (_240 * _233) * _973));
    float _983 = fma(_957, _247 * NORMAL.z, fma(_974, _254 * TANGENT.z, (_240 * _234) * _973));
    float _987 = inversesqrt(dot(vec3(_977, _980, _983), vec3(_977, _980, _983)));
    float _988 = _987 * _977;
    float _989 = _987 * _980;
    float _990 = _987 * _983;
    float _4251 = isnan(0.0) ? _674 : (isnan(_674) ? 0.0 : max(_674, 0.0));
    float _991 = isnan(1.0) ? _4251 : (isnan(_4251) ? 1.0 : min(_4251, 1.0));
    float _4262 = isnan(0.0) ? _913 : (isnan(_913) ? 0.0 : max(_913, 0.0));
    float _992 = isnan(1.0) ? _4262 : (isnan(_4262) ? 1.0 : min(_4262, 1.0));
    float _4273 = isnan(0.0) ? _644 : (isnan(_644) ? 0.0 : max(_644, 0.0));
    float _4284 = isnan(0.0) ? _645 : (isnan(_645) ? 0.0 : max(_645, 0.0));
    float _4295 = isnan(0.0) ? _646 : (isnan(_646) ? 0.0 : max(_646, 0.0));
    float _4306 = isnan(0.0) ? _742 : (isnan(_742) ? 0.0 : max(_742, 0.0));
    float _996 = isnan(1.0) ? _4306 : (isnan(_4306) ? 1.0 : min(_4306, 1.0));
    float _1012 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1052 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1062 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1052);
    float _1063 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1052);
    float _1064 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1052);
    float _1068 = inversesqrt(dot(vec3(_1062, _1063, _1064), vec3(_1062, _1063, _1064)));
    float _1069 = _1062 * _1068;
    float _1070 = _1063 * _1068;
    float _1071 = _1064 * _1068;
    float _1077 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1078 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1096 = fma(_990, cbSceneParam._m0[5u].z, fma(_989, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _988));
    float _1099 = fma(_990, cbSceneParam._m0[6u].z, fma(_989, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _988));
    float _1102 = fma(_990, cbSceneParam._m0[7u].z, fma(_989, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _988));
    uint _1115 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1117 = (_1115 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1123 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4273 : (isnan(_4273) ? 1.0 : min(_4273, 1.0)))) * cbInstanceData._m0[_1117].x;
    float _1124 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4284 : (isnan(_4284) ? 1.0 : min(_4284, 1.0)))) * cbInstanceData._m0[_1117].y;
    float _1125 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4295 : (isnan(_4295) ? 1.0 : min(_4295, 1.0)))) * cbInstanceData._m0[_1117].z;
    float _4317 = isnan(0.0) ? _1123 : (isnan(_1123) ? 0.0 : max(_1123, 0.0));
    float _1126 = isnan(1.0) ? _4317 : (isnan(_4317) ? 1.0 : min(_4317, 1.0));
    float _4328 = isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0));
    float _1127 = isnan(1.0) ? _4328 : (isnan(_4328) ? 1.0 : min(_4328, 1.0));
    float _4339 = isnan(0.0) ? _1125 : (isnan(_1125) ? 0.0 : max(_1125, 0.0));
    float _1128 = isnan(1.0) ? _4339 : (isnan(_4339) ? 1.0 : min(_4339, 1.0));
    float _1129 = 1.0 - _996;
    float _1130 = _1126 * _1129;
    float _1131 = _1127 * _1129;
    float _1132 = _1128 * _1129;
    float _1137 = (_1126 + (-0.039999999105930328369140625)) * _996;
    float _1138 = (_1127 + (-0.039999999105930328369140625)) * _996;
    float _1139 = (_1128 + (-0.039999999105930328369140625)) * _996;
    float _1140 = _1137 + 0.039999999105930328369140625;
    float _1142 = _1138 + 0.039999999105930328369140625;
    float _1143 = _1139 + 0.039999999105930328369140625;
    vec4 _1152 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1077, cbSceneParam._m0[86u].y * _1078));
    float _1155 = _1152.x * TEXCOORD_5.w;
    float _1156 = dot(vec3(_988, _989, _990), vec3(_1069, _1070, _1071));
    float _1159 = _1156 * 2.0;
    float _1163 = (_1159 * _988) - _1069;
    float _1164 = (_1159 * _989) - _1070;
    float _1165 = (_1159 * _990) - _1071;
    float _1169 = abs(dot(vec3(_1069, _1070, _1071), vec3(_988, _989, _990)));
    float _4350 = isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0));
    float _1171 = sqrt(_992);
    float _1182 = exp2((_1171 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4350 : (isnan(_4350) ? 1.0 : min(_4350, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1171 * 3.0));
    float _1188 = (1.0 - _1182) * ((_1171 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1189 = _1182 * _1171;
    float _1217 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1221 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1225 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1526;
    float _1528;
    float _1529;
    float _1530;
    float _1531;
    float _1532;
    float _1533;
    float _1534;
    float _1535;
    float _1536;
    float _1537;
    float _1538;
    float _1539;
    float _1540;
    float _1541;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1251 = fma(_1225, cbModelParam._m0[26u].z, fma(_1221, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1217));
        float _1255 = fma(_1225, cbModelParam._m0[27u].z, fma(_1221, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1217));
        float _1259 = fma(_1225, cbModelParam._m0[28u].z, fma(_1221, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1217));
        float _1284 = _1217 + _988;
        float _1285 = _1221 + _989;
        float _1286 = _1225 + _990;
        float _1296 = fma(_1286, cbModelParam._m0[26u].z, fma(_1285, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1284)) - _1251;
        float _1297 = fma(_1286, cbModelParam._m0[27u].z, fma(_1285, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1284)) - _1255;
        float _1298 = fma(_1286, cbModelParam._m0[28u].z, fma(_1285, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1284)) - _1259;
        float _1302 = inversesqrt(dot(vec3(_1296, _1297, _1298), vec3(_1296, _1297, _1298)));
        float _1315 = ((_1302 * _1296) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1251 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1316 = ((_1302 * _1297) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1255 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1317 = ((_1302 * _1298) / cbModelParam._m0[34u].z) + ((((((_1259 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1320 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1315, _1316, _1317), 0.0);
        vec4 _1327 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1315, _1316, _1317), 0.0);
        vec4 _1334 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1315, _1316, _1317), 0.0);
        vec4 _1341 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1315, _1316, _1317), 0.0);
        float _1354 = exp2((_1320.w + (-0.5)) * 20.0) * 2.0;
        float _1355 = _1354 * (_1320.x + (-0.5));
        float _1356 = _1354 * (_1320.y + (-0.5));
        float _1357 = _1354 * (_1320.z + (-0.5));
        float _1364 = exp2((_1327.w + (-0.5)) * 20.0) * 2.0;
        float _1365 = _1364 * (_1327.x + (-0.5));
        float _1366 = _1364 * (_1327.y + (-0.5));
        float _1367 = _1364 * (_1327.z + (-0.5));
        float _1374 = exp2((_1334.w + (-0.5)) * 20.0) * 2.0;
        float _1375 = _1374 * (_1334.x + (-0.5));
        float _1376 = _1374 * (_1334.y + (-0.5));
        float _1377 = _1374 * (_1334.z + (-0.5));
        float _1384 = exp2((_1341.w + (-0.5)) * 20.0) * 2.0;
        float _1385 = _1384 * (_1341.x + (-0.5));
        float _1386 = _1384 * (_1341.y + (-0.5));
        float _1387 = _1384 * (_1341.z + (-0.5));
        float _1388 = isnan(0.0) ? _1385 : (isnan(_1385) ? 0.0 : max(_1385, 0.0));
        float _1389 = isnan(0.0) ? _1386 : (isnan(_1386) ? 0.0 : max(_1386, 0.0));
        float _1390 = isnan(0.0) ? _1387 : (isnan(_1387) ? 0.0 : max(_1387, 0.0));
        float _1391 = _1355 * 0.5;
        float _1392 = _1365 * 0.5;
        float _1393 = _1375 * 0.5;
        float _1394 = dot(vec3(_1391, _1392, _1393), vec3(_1391, _1392, _1393));
        float _1399 = (_1394 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1394);
        float _1408 = (dot(vec3(_988, _989, _990), vec3(_1399 * _1391, _1399 * _1392, _1399 * _1393)) + 1.0) * 0.5;
        float _4376 = isnan(0.0) ? _1408 : (isnan(_1408) ? 0.0 : max(_1408, 0.0));
        float _1418 = sqrt(((_1392 * _1392) + (_1391 * _1391)) + (_1393 * _1393)) / (_1388 + 9.9999997473787516355514526367188e-06);
        float _4387 = isnan(0.0) ? _1418 : (isnan(_1418) ? 0.0 : max(_1418, 0.0));
        float _1419 = isnan(1.0) ? _4387 : (isnan(_4387) ? 1.0 : min(_4387, 1.0));
        float _1420 = _1419 * 2.0;
        float _1424 = (1.0 - _1419) / (_1419 + 1.0);
        float _4398 = isnan(0.0) ? _1424 : (isnan(_1424) ? 0.0 : max(_1424, 0.0));
        float _1425 = isnan(1.0) ? _4398 : (isnan(_4398) ? 1.0 : min(_4398, 1.0));
        float _1434 = ((((1.0 - _1425) * (_1420 + 2.0)) * exp2(log2(isnan(1.0) ? _4376 : (isnan(_4376) ? 1.0 : min(_4376, 1.0))) * (_1420 + 1.0))) + _1425) * _1388;
        float _1435 = _1356 * 0.5;
        float _1436 = _1366 * 0.5;
        float _1437 = _1376 * 0.5;
        float _1438 = dot(vec3(_1435, _1436, _1437), vec3(_1435, _1436, _1437));
        float _1443 = (_1438 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1438);
        float _1451 = (dot(vec3(_988, _989, _990), vec3(_1443 * _1435, _1443 * _1436, _1443 * _1437)) + 1.0) * 0.5;
        float _4409 = isnan(0.0) ? _1451 : (isnan(_1451) ? 0.0 : max(_1451, 0.0));
        float _1460 = sqrt(((_1436 * _1436) + (_1435 * _1435)) + (_1437 * _1437)) / (_1389 + 9.9999997473787516355514526367188e-06);
        float _4420 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
        float _1461 = isnan(1.0) ? _4420 : (isnan(_4420) ? 1.0 : min(_4420, 1.0));
        float _1462 = _1461 * 2.0;
        float _1466 = (1.0 - _1461) / (_1461 + 1.0);
        float _4431 = isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0));
        float _1467 = isnan(1.0) ? _4431 : (isnan(_4431) ? 1.0 : min(_4431, 1.0));
        float _1476 = ((((1.0 - _1467) * (_1462 + 2.0)) * exp2(log2(isnan(1.0) ? _4409 : (isnan(_4409) ? 1.0 : min(_4409, 1.0))) * (_1462 + 1.0))) + _1467) * _1389;
        float _1477 = _1357 * 0.5;
        float _1478 = _1367 * 0.5;
        float _1479 = _1377 * 0.5;
        float _1480 = dot(vec3(_1477, _1478, _1479), vec3(_1477, _1478, _1479));
        float _1485 = (_1480 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1480);
        float _1493 = (dot(vec3(_988, _989, _990), vec3(_1485 * _1477, _1485 * _1478, _1485 * _1479)) + 1.0) * 0.5;
        float _4442 = isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0));
        float _1502 = sqrt(((_1478 * _1478) + (_1477 * _1477)) + (_1479 * _1479)) / (_1390 + 9.9999997473787516355514526367188e-06);
        float _4453 = isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0));
        float _1503 = isnan(1.0) ? _4453 : (isnan(_4453) ? 1.0 : min(_4453, 1.0));
        float _1504 = _1503 * 2.0;
        float _1508 = (1.0 - _1503) / (_1503 + 1.0);
        float _4464 = isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0));
        float _1509 = isnan(1.0) ? _4464 : (isnan(_4464) ? 1.0 : min(_4464, 1.0));
        float _1518 = ((((1.0 - _1509) * (_1504 + 2.0)) * exp2(log2(isnan(1.0) ? _4442 : (isnan(_4442) ? 1.0 : min(_4442, 1.0))) * (_1504 + 1.0))) + _1509) * _1390;
        _1526 = _1357;
        _1528 = _1356;
        _1529 = _1355;
        _1530 = _1367;
        _1531 = _1366;
        _1532 = _1365;
        _1533 = _1377;
        _1534 = _1376;
        _1535 = _1375;
        _1536 = _1390;
        _1537 = _1389;
        _1538 = _1388;
        _1539 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1434 : (isnan(_1434) ? 0.0 : max(_1434, 0.0)));
        _1540 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0)));
        _1541 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0)));
    }
    else
    {
        _1526 = _1527;
        _1528 = _1527;
        _1529 = _1527;
        _1530 = _1527;
        _1531 = _1527;
        _1532 = _1527;
        _1533 = _1527;
        _1534 = _1527;
        _1535 = _1527;
        _1536 = _1527;
        _1537 = _1527;
        _1538 = _1527;
        _1539 = 0.0;
        _1540 = 0.0;
        _1541 = 0.0;
    }
    float _1833;
    float _1834;
    float _1835;
    float _1836;
    float _1837;
    float _1838;
    float _1839;
    float _1840;
    float _1841;
    float _1842;
    float _1843;
    float _1844;
    float _1845;
    float _1846;
    float _1847;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1564 = fma(_1225, cbModelParam._m0[30u].z, fma(_1221, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1217));
        float _1568 = fma(_1225, cbModelParam._m0[31u].z, fma(_1221, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1217));
        float _1572 = fma(_1225, cbModelParam._m0[32u].z, fma(_1221, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1217));
        float _1595 = _1217 + _988;
        float _1596 = _1221 + _989;
        float _1597 = _1225 + _990;
        float _1607 = fma(_1597, cbModelParam._m0[30u].z, fma(_1596, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1595)) - _1564;
        float _1608 = fma(_1597, cbModelParam._m0[31u].z, fma(_1596, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1595)) - _1568;
        float _1609 = fma(_1597, cbModelParam._m0[32u].z, fma(_1596, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1595)) - _1572;
        float _1613 = inversesqrt(dot(vec3(_1607, _1608, _1609), vec3(_1607, _1608, _1609)));
        float _1626 = ((_1613 * _1607) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1564 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1627 = ((_1613 * _1608) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1568 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1628 = ((_1613 * _1609) / cbModelParam._m0[35u].z) + ((((((_1572 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1630 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1626, _1627, _1628), 0.0);
        vec4 _1637 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1626, _1627, _1628), 0.0);
        vec4 _1644 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1626, _1627, _1628), 0.0);
        vec4 _1651 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1626, _1627, _1628), 0.0);
        float _1663 = exp2((_1630.w + (-0.5)) * 20.0) * 2.0;
        float _1664 = _1663 * (_1630.x + (-0.5));
        float _1665 = _1663 * (_1630.y + (-0.5));
        float _1666 = _1663 * (_1630.z + (-0.5));
        float _1673 = exp2((_1637.w + (-0.5)) * 20.0) * 2.0;
        float _1674 = _1673 * (_1637.x + (-0.5));
        float _1675 = _1673 * (_1637.y + (-0.5));
        float _1676 = _1673 * (_1637.z + (-0.5));
        float _1683 = exp2((_1644.w + (-0.5)) * 20.0) * 2.0;
        float _1684 = _1683 * (_1644.x + (-0.5));
        float _1685 = _1683 * (_1644.y + (-0.5));
        float _1686 = _1683 * (_1644.z + (-0.5));
        float _1693 = exp2((_1651.w + (-0.5)) * 20.0) * 2.0;
        float _1694 = _1693 * (_1651.x + (-0.5));
        float _1695 = _1693 * (_1651.y + (-0.5));
        float _1696 = _1693 * (_1651.z + (-0.5));
        float _1697 = isnan(0.0) ? _1694 : (isnan(_1694) ? 0.0 : max(_1694, 0.0));
        float _1698 = isnan(0.0) ? _1695 : (isnan(_1695) ? 0.0 : max(_1695, 0.0));
        float _1699 = isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0));
        float _1700 = _1664 * 0.5;
        float _1701 = _1674 * 0.5;
        float _1702 = _1684 * 0.5;
        float _1703 = dot(vec3(_1700, _1701, _1702), vec3(_1700, _1701, _1702));
        float _1708 = (_1703 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1703);
        float _1716 = (dot(vec3(_988, _989, _990), vec3(_1708 * _1700, _1708 * _1701, _1708 * _1702)) + 1.0) * 0.5;
        float _4505 = isnan(0.0) ? _1716 : (isnan(_1716) ? 0.0 : max(_1716, 0.0));
        float _1725 = sqrt(((_1701 * _1701) + (_1700 * _1700)) + (_1702 * _1702)) / (_1697 + 9.9999997473787516355514526367188e-06);
        float _4516 = isnan(0.0) ? _1725 : (isnan(_1725) ? 0.0 : max(_1725, 0.0));
        float _1726 = isnan(1.0) ? _4516 : (isnan(_4516) ? 1.0 : min(_4516, 1.0));
        float _1727 = _1726 * 2.0;
        float _1731 = (1.0 - _1726) / (_1726 + 1.0);
        float _4527 = isnan(0.0) ? _1731 : (isnan(_1731) ? 0.0 : max(_1731, 0.0));
        float _1732 = isnan(1.0) ? _4527 : (isnan(_4527) ? 1.0 : min(_4527, 1.0));
        float _1741 = ((((1.0 - _1732) * (_1727 + 2.0)) * exp2(log2(isnan(1.0) ? _4505 : (isnan(_4505) ? 1.0 : min(_4505, 1.0))) * (_1727 + 1.0))) + _1732) * _1697;
        float _1742 = _1665 * 0.5;
        float _1743 = _1675 * 0.5;
        float _1744 = _1685 * 0.5;
        float _1745 = dot(vec3(_1742, _1743, _1744), vec3(_1742, _1743, _1744));
        float _1750 = (_1745 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1745);
        float _1758 = (dot(vec3(_988, _989, _990), vec3(_1750 * _1742, _1750 * _1743, _1750 * _1744)) + 1.0) * 0.5;
        float _4538 = isnan(0.0) ? _1758 : (isnan(_1758) ? 0.0 : max(_1758, 0.0));
        float _1767 = sqrt(((_1743 * _1743) + (_1742 * _1742)) + (_1744 * _1744)) / (_1698 + 9.9999997473787516355514526367188e-06);
        float _4549 = isnan(0.0) ? _1767 : (isnan(_1767) ? 0.0 : max(_1767, 0.0));
        float _1768 = isnan(1.0) ? _4549 : (isnan(_4549) ? 1.0 : min(_4549, 1.0));
        float _1769 = _1768 * 2.0;
        float _1773 = (1.0 - _1768) / (_1768 + 1.0);
        float _4560 = isnan(0.0) ? _1773 : (isnan(_1773) ? 0.0 : max(_1773, 0.0));
        float _1774 = isnan(1.0) ? _4560 : (isnan(_4560) ? 1.0 : min(_4560, 1.0));
        float _1783 = ((((1.0 - _1774) * (_1769 + 2.0)) * exp2(log2(isnan(1.0) ? _4538 : (isnan(_4538) ? 1.0 : min(_4538, 1.0))) * (_1769 + 1.0))) + _1774) * _1698;
        float _1784 = _1666 * 0.5;
        float _1785 = _1676 * 0.5;
        float _1786 = _1686 * 0.5;
        float _1787 = dot(vec3(_1784, _1785, _1786), vec3(_1784, _1785, _1786));
        float _1792 = (_1787 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1787);
        float _1800 = (dot(vec3(_988, _989, _990), vec3(_1792 * _1784, _1792 * _1785, _1792 * _1786)) + 1.0) * 0.5;
        float _4571 = isnan(0.0) ? _1800 : (isnan(_1800) ? 0.0 : max(_1800, 0.0));
        float _1809 = sqrt(((_1785 * _1785) + (_1784 * _1784)) + (_1786 * _1786)) / (_1699 + 9.9999997473787516355514526367188e-06);
        float _4582 = isnan(0.0) ? _1809 : (isnan(_1809) ? 0.0 : max(_1809, 0.0));
        float _1810 = isnan(1.0) ? _4582 : (isnan(_4582) ? 1.0 : min(_4582, 1.0));
        float _1811 = _1810 * 2.0;
        float _1815 = (1.0 - _1810) / (_1810 + 1.0);
        float _4593 = isnan(0.0) ? _1815 : (isnan(_1815) ? 0.0 : max(_1815, 0.0));
        float _1816 = isnan(1.0) ? _4593 : (isnan(_4593) ? 1.0 : min(_4593, 1.0));
        float _1825 = ((((1.0 - _1816) * (_1811 + 2.0)) * exp2(log2(isnan(1.0) ? _4571 : (isnan(_4571) ? 1.0 : min(_4571, 1.0))) * (_1811 + 1.0))) + _1816) * _1699;
        _1833 = _1666;
        _1834 = _1665;
        _1835 = _1664;
        _1836 = _1676;
        _1837 = _1675;
        _1838 = _1674;
        _1839 = _1686;
        _1840 = _1685;
        _1841 = _1684;
        _1842 = _1699;
        _1843 = _1698;
        _1844 = _1697;
        _1845 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1741 : (isnan(_1741) ? 0.0 : max(_1741, 0.0)));
        _1846 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1783 : (isnan(_1783) ? 0.0 : max(_1783, 0.0)));
        _1847 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1825 : (isnan(_1825) ? 0.0 : max(_1825, 0.0)));
    }
    else
    {
        _1833 = _1527;
        _1834 = _1527;
        _1835 = _1527;
        _1836 = _1527;
        _1837 = _1527;
        _1838 = _1527;
        _1839 = _1527;
        _1840 = _1527;
        _1841 = _1527;
        _1842 = _1527;
        _1843 = _1527;
        _1844 = _1527;
        _1845 = 0.0;
        _1846 = 0.0;
        _1847 = 0.0;
    }
    float _1857 = (cbModelParam._m0[1u].x * (_1845 - _1539)) + _1539;
    float _1858 = (cbModelParam._m0[1u].x * (_1846 - _1540)) + _1540;
    float _1859 = (cbModelParam._m0[1u].x * (_1847 - _1541)) + _1541;
    float _1880 = fma(_1859, cbSceneParam._m0[89u].z, fma(_1858, cbSceneParam._m0[89u].y, _1857 * cbSceneParam._m0[89u].x));
    float _1883 = fma(_1859, cbSceneParam._m0[90u].z, fma(_1858, cbSceneParam._m0[90u].y, _1857 * cbSceneParam._m0[90u].x));
    float _1886 = fma(_1859, cbSceneParam._m0[91u].z, fma(_1858, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1857));
    float _1901 = _1163 * 0.5;
    float _1902 = _1164 * 0.5;
    float _1903 = _1165 * 0.5;
    float _1904 = dot(vec4(_1901, _1902, _1903, 1.0), vec4(_1835, _1838, _1841, _1844));
    float _1907 = dot(vec4(_1901, _1902, _1903, 1.0), vec4(_1834, _1837, _1840, _1843));
    float _1910 = dot(vec4(_1901, _1902, _1903, 1.0), vec4(_1833, _1836, _1839, _1842));
    float _1944;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1917 = dot(vec4(_1901, _1902, _1903, 1.0), vec4(_1526, _1530, _1533, _1536));
        float _1921 = dot(vec4(_1901, _1902, _1903, 1.0), vec4(_1528, _1531, _1534, _1537));
        float _1925 = dot(vec4(_1901, _1902, _1903, 1.0), vec4(_1529, _1532, _1535, _1538));
        float _1932 = dot(vec4(cbModelParam._m0[39u]), vec4(_1901, _1902, _1903, 1.0));
        _1944 = dot(vec3(isnan(0.0) ? _1925 : (isnan(_1925) ? 0.0 : max(_1925, 0.0)), isnan(0.0) ? _1921 : (isnan(_1921) ? 0.0 : max(_1921, 0.0)), isnan(0.0) ? _1917 : (isnan(_1917) ? 0.0 : max(_1917, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1932) ? 0.0 : (isnan(0.0) ? _1932 : max(0.0, _1932))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1944 = 1.0;
    }
    float _1955;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1946 = dot(vec4(cbModelParam._m0[40u]), vec4(_1901, _1902, _1903, 1.0));
        _1955 = dot(vec3(isnan(0.0) ? _1904 : (isnan(_1904) ? 0.0 : max(_1904, 0.0)), isnan(0.0) ? _1907 : (isnan(_1907) ? 0.0 : max(_1907, 0.0)), isnan(0.0) ? _1910 : (isnan(_1910) ? 0.0 : max(_1910, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1946) ? 0.0 : (isnan(0.0) ? _1946 : max(0.0, _1946))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1955 = 1.0;
    }
    float _1959 = (_1955 * cbModelParam._m0[1u].x) + (_1944 * (1.0 - cbModelParam._m0[1u].x));
    float _1969 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _992);
    float _1970 = isnan(_1969) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1969 : min(cbModelParam._m0[25u].z, _1969));
    float _2050;
    float _2052;
    float _2054;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2017 = fma(_1225, cbModelParam._m0[13u].z, fma(_1221, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1217)) + cbModelParam._m0[13u].w;
        float _2021 = fma(_1225, cbModelParam._m0[14u].z, fma(_1221, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1217)) + cbModelParam._m0[14u].w;
        float _2025 = fma(_1225, cbModelParam._m0[15u].z, fma(_1221, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1217)) + cbModelParam._m0[15u].w;
        float _2028 = fma(_1165, cbModelParam._m0[13u].z, fma(_1164, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1163));
        float _2031 = fma(_1165, cbModelParam._m0[14u].z, fma(_1164, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1163));
        float _2034 = fma(_1165, cbModelParam._m0[15u].z, fma(_1164, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1163));
        float _2062;
        if (_2028 > 0.0)
        {
            _2062 = abs((1.0 - _2017) / _2028);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2028 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2017 + 1.0) / _2028);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2062 = frontier_phi_14_12_ladder;
        }
        float _2233;
        if (_2031 > 0.0)
        {
            _2233 = abs((1.0 - _2021) / _2031);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2031 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2021 + 1.0) / _2031);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2233 = frontier_phi_23_19_ladder;
        }
        float _2528;
        if (_2034 > 0.0)
        {
            _2528 = abs((1.0 - _2025) / _2034);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2034 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2025 + 1.0) / _2034);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2528 = frontier_phi_35_30_ladder;
        }
        float _2530 = isnan(_2233) ? _2062 : (isnan(_2062) ? _2233 : min(_2062, _2233));
        float _2531 = isnan(_2528) ? _2530 : (isnan(_2530) ? _2528 : min(_2530, _2528));
        float _2535 = (_2531 * _2028) + _2017;
        float _2536 = (_2531 * _2031) + _2021;
        float _2537 = (_2531 * _2034) + _2025;
        float _2538 = _2531 * 9.9999997473787516355514526367188e-05;
        float _2540 = (-1.0) - _2538;
        float _2542 = _2538 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2537 > _2542) || ((_2537 < _2540) || ((_2536 > _2542) || ((_2536 < _2540) || ((_2535 < _2540) || (_2535 > _2542))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2682 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2537, cbModelParam._m0[9u].z, fma(_2536, cbModelParam._m0[9u].y, _2535 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2537, cbModelParam._m0[10u].z, fma(_2536, cbModelParam._m0[10u].y, _2535 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2537, cbModelParam._m0[11u].z, fma(_2536, cbModelParam._m0[11u].y, _2535 * cbModelParam._m0[11u].x))), _1970);
            frontier_phi_13_35_ladder = _2682.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2682.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2682.x * cbModelParam._m0[1u].y;
        }
        _2050 = frontier_phi_13_35_ladder_2;
        _2052 = frontier_phi_13_35_ladder_1;
        _2054 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2038 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1163, _1164, _1165), _1970);
        _2050 = _2038.x * cbModelParam._m0[1u].y;
        _2052 = _2038.y * cbModelParam._m0[1u].y;
        _2054 = _2038.z * cbModelParam._m0[1u].y;
    }
    float _2058 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _992);
    float _2059 = isnan(_2058) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2058 : min(cbModelParam._m0[25u].w, _2058));
    float _2148;
    float _2150;
    float _2152;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2112 = fma(_1225, cbModelParam._m0[21u].z, fma(_1221, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1217)) + cbModelParam._m0[21u].w;
        float _2116 = fma(_1225, cbModelParam._m0[22u].z, fma(_1221, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1217)) + cbModelParam._m0[22u].w;
        float _2120 = fma(_1225, cbModelParam._m0[23u].z, fma(_1221, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1217)) + cbModelParam._m0[23u].w;
        float _2123 = fma(_1165, cbModelParam._m0[21u].z, fma(_1164, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1163));
        float _2126 = fma(_1165, cbModelParam._m0[22u].z, fma(_1164, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1163));
        float _2129 = fma(_1165, cbModelParam._m0[23u].z, fma(_1164, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1163));
        float _2238;
        if (_2123 > 0.0)
        {
            _2238 = abs((1.0 - _2112) / _2123);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2123 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2112 + 1.0) / _2123);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2238 = frontier_phi_25_21_ladder;
        }
        float _2555;
        if (_2126 > 0.0)
        {
            _2555 = abs((1.0 - _2116) / _2126);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2126 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2116 + 1.0) / _2126);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2555 = frontier_phi_37_32_ladder;
        }
        float _2893;
        if (_2129 > 0.0)
        {
            _2893 = abs((1.0 - _2120) / _2129);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2129 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2120 + 1.0) / _2129);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2893 = frontier_phi_47_44_ladder;
        }
        float _2895 = isnan(_2555) ? _2238 : (isnan(_2238) ? _2555 : min(_2238, _2555));
        float _2896 = isnan(_2893) ? _2895 : (isnan(_2895) ? _2893 : min(_2895, _2893));
        float _2900 = (_2896 * _2123) + _2112;
        float _2901 = (_2896 * _2126) + _2116;
        float _2902 = (_2896 * _2129) + _2120;
        float _2903 = _2896 * 9.9999997473787516355514526367188e-05;
        float _2904 = (-1.0) - _2903;
        float _2906 = _2903 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2902 > _2906) || ((_2902 < _2904) || ((_2901 > _2906) || ((_2901 < _2904) || ((_2900 < _2904) || (_2900 > _2906))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3024 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2902, cbModelParam._m0[17u].z, fma(_2901, cbModelParam._m0[17u].y, _2900 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2902, cbModelParam._m0[18u].z, fma(_2901, cbModelParam._m0[18u].y, _2900 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2902, cbModelParam._m0[19u].z, fma(_2901, cbModelParam._m0[19u].y, _2900 * cbModelParam._m0[19u].x))), _2059);
            frontier_phi_22_47_ladder = _3024.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _3024.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _3024.x * cbModelParam._m0[1u].z;
        }
        _2148 = frontier_phi_22_47_ladder_2;
        _2150 = frontier_phi_22_47_ladder_1;
        _2152 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2132 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1163, _1164, _1165), _2059);
        _2148 = _2132.x * cbModelParam._m0[1u].z;
        _2150 = _2132.y * cbModelParam._m0[1u].z;
        _2152 = _2132.z * cbModelParam._m0[1u].z;
    }
    float _2165 = (((_1188 * _1140) + _1189) * _1155) * ((cbModelParam._m0[1u].w * (_2148 - _2050)) + _2050);
    float _2167 = (((_1188 * _1142) + _1189) * _1155) * ((cbModelParam._m0[1u].w * (_2150 - _2052)) + _2052);
    float _2169 = (((_1188 * _1143) + _1189) * _1155) * ((cbModelParam._m0[1u].w * (_2152 - _2054)) + _2054);
    float _2172 = fma(_2169, cbSceneParam._m0[89u].z, fma(_2167, cbSceneParam._m0[89u].y, _2165 * cbSceneParam._m0[89u].x));
    float _2175 = fma(_2169, cbSceneParam._m0[90u].z, fma(_2167, cbSceneParam._m0[90u].y, _2165 * cbSceneParam._m0[90u].x));
    float _2178 = fma(_2169, cbSceneParam._m0[91u].z, fma(_2167, cbSceneParam._m0[91u].y, _2165 * cbSceneParam._m0[91u].x));
    float _2212 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2216 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2220 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2224 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2225 = _2212 / _2224;
    float _2226 = _2216 / _2224;
    float _2227 = _2220 / _2224;
    float _2374;
    float _2375;
    float _2376;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2254 = ((uint(_2227 > cbSceneParam._m0[59u].y) + uint(_2227 > cbSceneParam._m0[59u].x)) + uint(_2227 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2255 = _2254 + 43u;
        uint _2263 = _2254 + 44u;
        uint _2271 = _2254 + 45u;
        uint _2279 = _2254 + 46u;
        float _2290 = fma(_2224, cbSceneParam._m0[_2255].w, fma(_2220, cbSceneParam._m0[_2255].z, fma(_2216, cbSceneParam._m0[_2255].y, _2212 * cbSceneParam._m0[_2255].x)));
        float _2294 = fma(_2224, cbSceneParam._m0[_2263].w, fma(_2220, cbSceneParam._m0[_2263].z, fma(_2216, cbSceneParam._m0[_2263].y, _2212 * cbSceneParam._m0[_2263].x)));
        float _2302 = fma(_2224, cbSceneParam._m0[_2279].w, fma(_2220, cbSceneParam._m0[_2279].z, fma(_2216, cbSceneParam._m0[_2279].y, _2212 * cbSceneParam._m0[_2279].x)));
        float _2307 = cbSceneParam._m0[33u].z * _2302;
        float _2309 = cbSceneParam._m0[33u].w * _2302;
        float _2312 = fma(_2224, cbSceneParam._m0[_2271].w, fma(_2220, cbSceneParam._m0[_2271].z, fma(_2216, cbSceneParam._m0[_2271].y, _2212 * cbSceneParam._m0[_2271].x))) / _2302;
        float _2360 = (cbSceneParam._m0[33u].x - sqrt(((_2226 * _2226) + (_2225 * _2225)) + (_2227 * _2227))) * cbSceneParam._m0[33u].y;
        float _4719 = isnan(0.0) ? _2360 : (isnan(_2360) ? 0.0 : max(_2360, 0.0));
        float _2367 = (isnan(1.0) ? _4719 : (isnan(_4719) ? 1.0 : min(_4719, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2307 + _2290) / _2302, (_2309 + _2294) / _2302), _2312), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2309 + _2290) / _2302, (_2294 - _2307) / _2302), _2312), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2290 - _2307) / _2302, (_2294 - _2309) / _2302), _2312), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2290 - _2309) / _2302, (_2307 + _2294) / _2302), _2312), 0.0)).x), vec4(0.25)));
        _2374 = 1.0 - (_2367 * cbSceneParam._m0[34u].x);
        _2375 = 1.0 - (_2367 * cbSceneParam._m0[34u].y);
        _2376 = 1.0 - (_2367 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2374 = 1.0;
        _2375 = 1.0;
        _2376 = 1.0;
    }
    float _2440;
    float _2442;
    float _2444;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2428 = fma(_2224, cbSceneParam._m0[63u].w, fma(_2220, cbSceneParam._m0[63u].z, fma(_2216, cbSceneParam._m0[63u].y, _2212 * cbSceneParam._m0[63u].x)));
        float _2429 = fma(_2224, cbSceneParam._m0[60u].w, fma(_2220, cbSceneParam._m0[60u].z, fma(_2216, cbSceneParam._m0[60u].y, _2212 * cbSceneParam._m0[60u].x))) / _2428;
        float _2430 = fma(_2224, cbSceneParam._m0[61u].w, fma(_2220, cbSceneParam._m0[61u].z, fma(_2216, cbSceneParam._m0[61u].y, _2212 * cbSceneParam._m0[61u].x))) / _2428;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2429 >= cbSceneParam._m0[64u].x) && (_2430 >= cbSceneParam._m0[64u].y)) && (_2429 <= cbSceneParam._m0[64u].z)) && (_2430 <= cbSceneParam._m0[64u].w))
        {
            float _2568 = fma(_2224, cbSceneParam._m0[62u].w, fma(_2220, cbSceneParam._m0[62u].z, fma(_2216, cbSceneParam._m0[62u].y, _2212 * cbSceneParam._m0[62u].x))) / _2428;
            float _2572 = isnan(cbSceneParam._m0[41u].w) ? _2568 : (isnan(_2568) ? cbSceneParam._m0[41u].w : max(_2568, cbSceneParam._m0[41u].w));
            float _2615 = (cbSceneParam._m0[33u].x - sqrt(((_2226 * _2226) + (_2225 * _2225)) + (_2227 * _2227))) * cbSceneParam._m0[33u].y;
            float _4735 = isnan(0.0) ? _2615 : (isnan(_2615) ? 0.0 : max(_2615, 0.0));
            float _2622 = (isnan(1.0) ? _4735 : (isnan(_4735) ? 1.0 : min(_4735, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2429, cbSceneParam._m0[33u].w + _2430), _2572), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2429, _2430 - cbSceneParam._m0[33u].z), _2572), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2429 - cbSceneParam._m0[33u].z, _2430 - cbSceneParam._m0[33u].w), _2572), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2429 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2430), _2572), 0.0)).x), vec4(0.25)));
            float _2626 = 1.0 - (_2622 * cbSceneParam._m0[34u].x);
            float _2627 = 1.0 - (_2622 * cbSceneParam._m0[34u].y);
            float _2628 = 1.0 - (_2622 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2628) ? _2376 : (isnan(_2376) ? _2628 : min(_2376, _2628));
            frontier_phi_34_33_ladder_1 = isnan(_2627) ? _2375 : (isnan(_2375) ? _2627 : min(_2375, _2627));
            frontier_phi_34_33_ladder_2 = isnan(_2626) ? _2374 : (isnan(_2374) ? _2626 : min(_2374, _2626));
        }
        else
        {
            frontier_phi_34_33_ladder = _2376;
            frontier_phi_34_33_ladder_1 = _2375;
            frontier_phi_34_33_ladder_2 = _2374;
        }
        _2440 = frontier_phi_34_33_ladder_2;
        _2442 = frontier_phi_34_33_ladder_1;
        _2444 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2440 = _2374;
        _2442 = _2375;
        _2444 = _2376;
    }
    uvec4 _2449 = floatBitsToUint(cbInstanceData._m0[_1115 + 5u]);
    uint _2451 = _2449.x * 14u;
    uint _2452 = _2451 + 13u;
    float _2459 = _1155 + (-1.0);
    float _2464 = (cbLight._m0[_2452].x * _2459) + 1.0;
    float _2465 = (cbLight._m0[_2452].y * _2459) + 1.0;
    float _2466 = (cbLight._m0[_2452].z * _2459) + 1.0;
    float _2467 = (cbLight._m0[_2452].w * _2459) + 1.0;
    uint _2468 = _2451 + 5u;
    float _2474 = isnan(1.0) ? _2465 : (isnan(_2465) ? 1.0 : min(_2465, 1.0));
    uint _2478 = _2451 + 4u;
    float _2487 = isnan(1.0) ? _2464 : (isnan(_2464) ? 1.0 : min(_2464, 1.0));
    uint _2491 = _2451 | 1u;
    float _2502 = dot(vec3(cbLight._m0[_2451].xyz), vec3(_988, _989, _990));
    float _2505 = dot(vec3(cbLight._m0[_2491].xyz), vec3(_988, _989, _990));
    float _4771 = isnan(0.0) ? _2502 : (isnan(_2502) ? 0.0 : max(_2502, 0.0));
    float _4782 = isnan(0.0) ? _2505 : (isnan(_2505) ? 0.0 : max(_2505, 0.0));
    float _2510 = (isnan(1.0) ? _4771 : (isnan(_4771) ? 1.0 : min(_4771, 1.0))) * 0.3183098733425140380859375;
    float _2512 = (isnan(1.0) ? _4782 : (isnan(_4782) ? 1.0 : min(_4782, 1.0))) * 0.3183098733425140380859375;
    float _2519 = ((cbLight._m0[_2468].x * _2474) * _2512) + (((cbLight._m0[_2478].x * _2440) * _2487) * _2510);
    float _2520 = ((_2474 * cbLight._m0[_2468].y) * _2512) + (((cbLight._m0[_2478].y * _2442) * _2487) * _2510);
    float _2521 = ((_2474 * cbLight._m0[_2468].z) * _2512) + (((cbLight._m0[_2478].z * _2444) * _2487) * _2510);
    uvec4 _2525 = floatBitsToUint(cbLight._m0[_2451 + 12u]);
    bool _2527 = _2525.x == 0u;
    float _2629;
    float _2631;
    float _2633;
    if (_2527)
    {
        _2629 = _2519;
        _2631 = _2520;
        _2633 = _2521;
    }
    else
    {
        uint _2637 = _2451 + 6u;
        float _2653 = (dot(vec3(cbLight._m0[_2451 + 2u].xyz), vec3(_988, _989, _990)) * 0.5) + 0.5;
        float _2654 = _2653 * _2653;
        float _4793 = isnan(0.0) ? _2654 : (isnan(_2654) ? 0.0 : max(_2654, 0.0));
        float _2655 = isnan(1.0) ? _4793 : (isnan(_4793) ? 1.0 : min(_4793, 1.0));
        float _2656 = isnan(1.0) ? _2466 : (isnan(_2466) ? 1.0 : min(_2466, 1.0));
        _2629 = (((cbLight._m0[_2637].x * 0.3183098733425140380859375) * _2655) * _2656) + _2519;
        _2631 = (((cbLight._m0[_2637].y * 0.3183098733425140380859375) * _2655) * _2656) + _2520;
        _2633 = (((cbLight._m0[_2637].z * 0.3183098733425140380859375) * _2655) * _2656) + _2521;
    }
    bool _2636 = _2525.y == 0u;
    float _2691;
    float _2693;
    float _2695;
    if (_2636)
    {
        _2691 = _2629;
        _2693 = _2631;
        _2695 = _2633;
    }
    else
    {
        uint _2864 = _2451 + 7u;
        float _2880 = (dot(vec3(cbLight._m0[_2451 + 3u].xyz), vec3(_988, _989, _990)) * 0.5) + 0.5;
        float _2881 = _2880 * _2880;
        float _4809 = isnan(0.0) ? _2881 : (isnan(_2881) ? 0.0 : max(_2881, 0.0));
        float _2882 = isnan(1.0) ? _4809 : (isnan(_4809) ? 1.0 : min(_4809, 1.0));
        float _2883 = isnan(1.0) ? _2467 : (isnan(_2467) ? 1.0 : min(_2467, 1.0));
        _2691 = (((cbLight._m0[_2864].x * 0.3183098733425140380859375) * _2882) * _2883) + _2629;
        _2693 = (((cbLight._m0[_2864].y * 0.3183098733425140380859375) * _2882) * _2883) + _2631;
        _2695 = (((cbLight._m0[_2864].z * 0.3183098733425140380859375) * _2882) * _2883) + _2633;
    }
    uint _2698 = _2451 + 8u;
    float _2711 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2451].w)) * _992) * 0.949999988079071044921875);
    float _2712 = _2711 * _2711;
    float _2713 = cbLight._m0[_2451].x + _1069;
    float _2714 = cbLight._m0[_2451].y + _1070;
    float _2715 = cbLight._m0[_2451].z + _1071;
    float _2719 = inversesqrt(dot(vec3(_2713, _2714, _2715), vec3(_2713, _2714, _2715)));
    float _2720 = _2719 * _2713;
    float _2721 = _2719 * _2714;
    float _2722 = _2719 * _2715;
    float _2723 = dot(vec3(_988, _989, _990), vec3(cbLight._m0[_2451].xyz));
    float _4825 = isnan(0.0) ? _2723 : (isnan(_2723) ? 0.0 : max(_2723, 0.0));
    float _2726 = isnan(1.0) ? _4825 : (isnan(_4825) ? 1.0 : min(_4825, 1.0));
    float _4836 = isnan(0.0) ? _1156 : (isnan(_1156) ? 0.0 : max(_1156, 0.0));
    float _2727 = isnan(1.0) ? _4836 : (isnan(_4836) ? 1.0 : min(_4836, 1.0));
    float _2728 = dot(vec3(_988, _989, _990), vec3(_2720, _2721, _2722));
    float _4847 = isnan(0.0) ? _2728 : (isnan(_2728) ? 0.0 : max(_2728, 0.0));
    float _2731 = isnan(1.0) ? _4847 : (isnan(_4847) ? 1.0 : min(_4847, 1.0));
    float _2732 = dot(vec3(cbLight._m0[_2451].xyz), vec3(_2720, _2721, _2722));
    float _4858 = isnan(0.0) ? _2732 : (isnan(_2732) ? 0.0 : max(_2732, 0.0));
    float _2736 = _2712 * _2712;
    float _2740 = ((_2731 * _2731) * (_2736 + (-1.0))) + 1.0;
    float _2748 = exp2(log2(1.0 - (isnan(1.0) ? _4858 : (isnan(_4858) ? 1.0 : min(_4858, 1.0)))) * 5.0);
    float _2749 = 0.959999978542327880859375 - _1137;
    float _2751 = 0.959999978542327880859375 - _1138;
    float _2752 = 0.959999978542327880859375 - _1139;
    float _2759 = 1.0 - _2712;
    float _2770 = (0.5 / (((_2727 * ((_2726 * _2759) + _2712)) + 9.9999999392252902907785028219223e-09) + (((_2727 * _2759) + _2712) * _2726))) * _2726;
    float _4869 = isnan(0.0) ? _2770 : (isnan(_2770) ? 0.0 : max(_2770, 0.0));
    float _2772 = (isnan(1.0) ? _4869 : (isnan(_4869) ? 1.0 : min(_4869, 1.0))) * (_2736 / ((_2740 * _2740) * 3.141590118408203125));
    uint _2786 = _2451 + 9u;
    float _2797 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2491].w)) * _992) * 0.949999988079071044921875);
    float _2798 = _2797 * _2797;
    float _2799 = cbLight._m0[_2491].x + _1069;
    float _2800 = cbLight._m0[_2491].y + _1070;
    float _2801 = cbLight._m0[_2491].z + _1071;
    float _2805 = inversesqrt(dot(vec3(_2799, _2800, _2801), vec3(_2799, _2800, _2801)));
    float _2806 = _2805 * _2799;
    float _2807 = _2805 * _2800;
    float _2808 = _2805 * _2801;
    float _2809 = dot(vec3(_988, _989, _990), vec3(cbLight._m0[_2491].xyz));
    float _4880 = isnan(0.0) ? _2809 : (isnan(_2809) ? 0.0 : max(_2809, 0.0));
    float _2812 = isnan(1.0) ? _4880 : (isnan(_4880) ? 1.0 : min(_4880, 1.0));
    float _2813 = dot(vec3(_988, _989, _990), vec3(_2806, _2807, _2808));
    float _4891 = isnan(0.0) ? _2813 : (isnan(_2813) ? 0.0 : max(_2813, 0.0));
    float _2816 = isnan(1.0) ? _4891 : (isnan(_4891) ? 1.0 : min(_4891, 1.0));
    float _2817 = dot(vec3(cbLight._m0[_2491].xyz), vec3(_2806, _2807, _2808));
    float _4902 = isnan(0.0) ? _2817 : (isnan(_2817) ? 0.0 : max(_2817, 0.0));
    float _2821 = _2798 * _2798;
    float _2825 = ((_2816 * _2816) * (_2821 + (-1.0))) + 1.0;
    float _2832 = exp2(log2(1.0 - (isnan(1.0) ? _4902 : (isnan(_4902) ? 1.0 : min(_4902, 1.0)))) * 5.0);
    float _2839 = 1.0 - _2798;
    float _2849 = (0.5 / (((_2727 * ((_2812 * _2839) + _2798)) + 9.9999999392252902907785028219223e-09) + (((_2727 * _2839) + _2798) * _2812))) * _2812;
    float _4913 = isnan(0.0) ? _2849 : (isnan(_2849) ? 0.0 : max(_2849, 0.0));
    float _2851 = (isnan(1.0) ? _4913 : (isnan(_4913) ? 1.0 : min(_4913, 1.0))) * (_2821 / ((_2825 * _2825) * 3.141590118408203125));
    float _2861 = (((((_2832 * _2749) + _1140) * cbLight._m0[_2786].x) * _2851) * _2474) + ((((cbLight._m0[_2698].x * _2440) * ((_2748 * _2749) + _1140)) * _2772) * _2487);
    float _2862 = (((((_2832 * _2751) + _1142) * cbLight._m0[_2786].y) * _2851) * _2474) + ((((cbLight._m0[_2698].y * _2442) * ((_2748 * _2751) + _1142)) * _2772) * _2487);
    float _2863 = (((((_2832 * _2752) + _1143) * cbLight._m0[_2786].z) * _2851) * _2474) + ((((cbLight._m0[_2698].z * _2444) * ((_2748 * _2752) + _1143)) * _2772) * _2487);
    float _2919;
    float _2921;
    float _2923;
    if (_2527)
    {
        _2919 = _2861;
        _2921 = _2862;
        _2923 = _2863;
    }
    else
    {
        uint _2925 = _2451 + 2u;
        uint _2929 = _2451 + 10u;
        float _2943 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2925].w)) * _992) * 0.949999988079071044921875);
        float _2944 = _2943 * _2943;
        float _2945 = cbLight._m0[_2925].x + _1069;
        float _2946 = cbLight._m0[_2925].y + _1070;
        float _2947 = cbLight._m0[_2925].z + _1071;
        float _2951 = inversesqrt(dot(vec3(_2945, _2946, _2947), vec3(_2945, _2946, _2947)));
        float _2952 = _2951 * _2945;
        float _2953 = _2951 * _2946;
        float _2954 = _2951 * _2947;
        float _2955 = dot(vec3(_988, _989, _990), vec3(cbLight._m0[_2925].xyz));
        float _4924 = isnan(0.0) ? _2955 : (isnan(_2955) ? 0.0 : max(_2955, 0.0));
        float _2958 = isnan(1.0) ? _4924 : (isnan(_4924) ? 1.0 : min(_4924, 1.0));
        float _2959 = dot(vec3(_988, _989, _990), vec3(_2952, _2953, _2954));
        float _4935 = isnan(0.0) ? _2959 : (isnan(_2959) ? 0.0 : max(_2959, 0.0));
        float _2962 = isnan(1.0) ? _4935 : (isnan(_4935) ? 1.0 : min(_4935, 1.0));
        float _2963 = dot(vec3(cbLight._m0[_2925].xyz), vec3(_2952, _2953, _2954));
        float _4946 = isnan(0.0) ? _2963 : (isnan(_2963) ? 0.0 : max(_2963, 0.0));
        float _2967 = _2944 * _2944;
        float _2971 = ((_2962 * _2962) * (_2967 + (-1.0))) + 1.0;
        float _2978 = exp2(log2(1.0 - (isnan(1.0) ? _4946 : (isnan(_4946) ? 1.0 : min(_4946, 1.0)))) * 5.0);
        float _2985 = 1.0 - _2944;
        float _2995 = (0.5 / (((_2727 * ((_2958 * _2985) + _2944)) + 9.9999999392252902907785028219223e-09) + (((_2727 * _2985) + _2944) * _2958))) * _2958;
        float _4957 = isnan(0.0) ? _2995 : (isnan(_2995) ? 0.0 : max(_2995, 0.0));
        float _2997 = (isnan(1.0) ? _4957 : (isnan(_4957) ? 1.0 : min(_4957, 1.0))) * (_2967 / ((_2971 * _2971) * 3.141590118408203125));
        float _2998 = isnan(1.0) ? _2466 : (isnan(_2466) ? 1.0 : min(_2466, 1.0));
        _2919 = (((((_2978 * _2749) + _1140) * cbLight._m0[_2929].x) * _2997) * _2998) + _2861;
        _2921 = (((((_2978 * _2751) + _1142) * cbLight._m0[_2929].y) * _2997) * _2998) + _2862;
        _2923 = (((((_2978 * _2752) + _1143) * cbLight._m0[_2929].z) * _2997) * _2998) + _2863;
    }
    float _3029;
    float _3031;
    float _3033;
    if (_2636)
    {
        _3029 = _2919;
        _3031 = _2921;
        _3033 = _2923;
    }
    else
    {
        uint _3040 = _2451 + 3u;
        uint _3044 = _2451 + 11u;
        float _3058 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3040].w)) * _992) * 0.949999988079071044921875);
        float _3059 = _3058 * _3058;
        float _3060 = cbLight._m0[_3040].x + _1069;
        float _3061 = cbLight._m0[_3040].y + _1070;
        float _3062 = cbLight._m0[_3040].z + _1071;
        float _3066 = inversesqrt(dot(vec3(_3060, _3061, _3062), vec3(_3060, _3061, _3062)));
        float _3067 = _3066 * _3060;
        float _3068 = _3066 * _3061;
        float _3069 = _3066 * _3062;
        float _3070 = dot(vec3(_988, _989, _990), vec3(cbLight._m0[_3040].xyz));
        float _4973 = isnan(0.0) ? _3070 : (isnan(_3070) ? 0.0 : max(_3070, 0.0));
        float _3073 = isnan(1.0) ? _4973 : (isnan(_4973) ? 1.0 : min(_4973, 1.0));
        float _3074 = dot(vec3(_988, _989, _990), vec3(_3067, _3068, _3069));
        float _4984 = isnan(0.0) ? _3074 : (isnan(_3074) ? 0.0 : max(_3074, 0.0));
        float _3077 = isnan(1.0) ? _4984 : (isnan(_4984) ? 1.0 : min(_4984, 1.0));
        float _3078 = dot(vec3(cbLight._m0[_3040].xyz), vec3(_3067, _3068, _3069));
        float _4995 = isnan(0.0) ? _3078 : (isnan(_3078) ? 0.0 : max(_3078, 0.0));
        float _3082 = _3059 * _3059;
        float _3086 = ((_3077 * _3077) * (_3082 + (-1.0))) + 1.0;
        float _3093 = exp2(log2(1.0 - (isnan(1.0) ? _4995 : (isnan(_4995) ? 1.0 : min(_4995, 1.0)))) * 5.0);
        float _3100 = 1.0 - _3059;
        float _3110 = (0.5 / (((_2727 * ((_3073 * _3100) + _3059)) + 9.9999999392252902907785028219223e-09) + (((_2727 * _3100) + _3059) * _3073))) * _3073;
        float _5006 = isnan(0.0) ? _3110 : (isnan(_3110) ? 0.0 : max(_3110, 0.0));
        float _3112 = (isnan(1.0) ? _5006 : (isnan(_5006) ? 1.0 : min(_5006, 1.0))) * (_3082 / ((_3086 * _3086) * 3.141590118408203125));
        float _3113 = isnan(1.0) ? _2467 : (isnan(_2467) ? 1.0 : min(_2467, 1.0));
        _3029 = (((((_3093 * _2749) + _1140) * cbLight._m0[_3044].x) * _3112) * _3113) + _2919;
        _3031 = (((((_3093 * _2751) + _1142) * cbLight._m0[_3044].y) * _3112) * _3113) + _2921;
        _3033 = (((((_3093 * _2752) + _1143) * cbLight._m0[_3044].z) * _3112) * _3113) + _2923;
    }
    float _3179;
    float _3181;
    float _3183;
    float _3185;
    float _3187;
    float _3189;
    if (_2449.y == 0u)
    {
        uvec4 _3134 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3135 = _3134.x;
        uint _3146 = uint((float(_3134.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1078) / _3135))) + floor(float(uint(cbSceneParam._m0[85u].x * _1077) / _3135)));
        float _3156 = (log2(_2227 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3157 = isnan(0.0) ? _3156 : (isnan(_3156) ? 0.0 : max(_3156, 0.0));
        uint _3160 = uint(isnan(14.0) ? _3157 : (isnan(_3157) ? 14.0 : min(_3157, 14.0)));
        uvec4 _3165 = texelFetch(g_lightClusterGridBuffer, int(((_3160 << 2u) + (_3146 << 6u)) >> 2u));
        uint _3166 = _3165.x;
        uint _3167 = _3134.z;
        float _3248;
        float _3250;
        float _3252;
        float _3254;
        float _3256;
        float _3258;
        if (((((1u << ((_3167 >> 4u) & 15u)) + 4294967295u) & _3166) == 0u) || ((_3167 & 240u) == 0u))
        {
            _3248 = 0.0;
            _3250 = 0.0;
            _3252 = 0.0;
            _3254 = 0.0;
            _3256 = 0.0;
            _3258 = 0.0;
        }
        else
        {
            float _3249;
            float _3251;
            float _3253;
            float _3255;
            float _3257;
            float _3259;
            float _3393 = 0.0;
            float _3394 = 0.0;
            float _3395 = 0.0;
            float _3396 = 0.0;
            float _3397 = 0.0;
            float _3398 = 0.0;
            uint _3399 = 0u;
            uint _3408;
            bool _3409;
            for (;;)
            {
                _3408 = texelFetch(g_lightClassification, int((((_3160 << 5u) + (_3146 << 9u)) + (_3399 << 2u)) >> 2u)).x;
                _3409 = _3408 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3409)
                {
                    frontier_phi_66_pred = _3398;
                    frontier_phi_66_pred_1 = _3397;
                    frontier_phi_66_pred_2 = _3396;
                    frontier_phi_66_pred_3 = _3395;
                    frontier_phi_66_pred_4 = _3394;
                    frontier_phi_66_pred_5 = _3393;
                }
                else
                {
                    float _3517;
                    float _3518;
                    float _3519;
                    float _3520;
                    float _3521;
                    float _3522;
                    uint _3523;
                    _3517 = _3393;
                    _3518 = _3394;
                    _3519 = _3395;
                    _3520 = _3396;
                    _3521 = _3397;
                    _3522 = _3398;
                    _3523 = _3408;
                    float _3449;
                    float _3450;
                    float _3451;
                    float _3452;
                    float _3453;
                    float _3454;
                    for (;;)
                    {
                        uint _3527 = uint(findLSB(_3523)) + (_3399 << 5u);
                        uint _3524 = (_3523 + 4294967295u) & _3523;
                        uint _3529 = _3527 * 48u;
                        vec4 _3543 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3529)).x, texelFetch(g_PointLightRenderingBuffer, int(_3529 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3529 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3529 + 3u)).x));
                        uint _3549 = (_3527 * 48u) + 4u;
                        vec4 _3562 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3549)).x, texelFetch(g_PointLightRenderingBuffer, int(_3549 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3549 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3549 + 3u)).x));
                        uint _3568 = (_3527 * 48u) + 8u;
                        vec3 _3579 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3568)).x, texelFetch(g_PointLightRenderingBuffer, int(_3568 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3568 + 2u)).x));
                        float _3583 = _3543.x - _2225;
                        float _3584 = _3543.y - _2226;
                        float _3585 = _3543.z - _2227;
                        float _3586 = dot(vec3(_3583, _3584, _3585), vec3(_3583, _3584, _3585));
                        float _3589 = inversesqrt(_3586);
                        float _3590 = _3589 * _3583;
                        float _3591 = _3589 * _3584;
                        float _3592 = _3589 * _3585;
                        float _3593 = dot(vec3(_1096, _1099, _1102), vec3(_3590, _3591, _3592));
                        float _3598 = 1.0 - (_3586 * _3543.w);
                        float _5032 = isnan(0.0) ? _3598 : (isnan(_3598) ? 0.0 : max(_3598, 0.0));
                        float _3599 = isnan(1.0) ? _5032 : (isnan(_5032) ? 1.0 : min(_5032, 1.0));
                        float _3600 = sqrt(_3586) * _3562.w;
                        float _3603 = 1.39999997615814208984375 / (_3600 + 1.39999997615814208984375);
                        float _3604 = _3603 * _3603;
                        float _3607 = ((1.0 - _3604) * _3593) + _3604;
                        float _3610 = _3600 * _3600;
                        float _3614 = ((isnan(0.0) ? _3607 : (isnan(_3607) ? 0.0 : max(_3607, 0.0))) * _3599) / ((_3610 * 0.699999988079071044921875) + 1.0);
                        float _3618 = (-0.0) - _2225;
                        float _3619 = (-0.0) - _2226;
                        float _3620 = (-0.0) - _2227;
                        float _3624 = inversesqrt(dot(vec3(_3618, _3619, _3620), vec3(_3618, _3619, _3620)));
                        float _3625 = _3624 * _3618;
                        float _3626 = _3624 * _3619;
                        float _3627 = _3624 * _3620;
                        float _3634 = exp2(log2(1.0 / ((_3610 * 3.5) + 5.0)) * 0.25);
                        float _3635 = 1.0 - _1171;
                        float _3642 = sqrt(1.0 - ((1.0 - (_3635 * _3635)) * (1.0 - (_3634 * _3634))));
                        float _3643 = _3642 * _3642;
                        float _3644 = _3643 * _3643;
                        float _3645 = _3625 + _3590;
                        float _3646 = _3626 + _3591;
                        float _3647 = _3627 + _3592;
                        float _3651 = inversesqrt(dot(vec3(_3645, _3646, _3647), vec3(_3645, _3646, _3647)));
                        float _3655 = dot(vec3(_1096, _1099, _1102), vec3(_3625, _3626, _3627));
                        float _5048 = isnan(0.0) ? _3655 : (isnan(_3655) ? 0.0 : max(_3655, 0.0));
                        float _3658 = isnan(1.0) ? _5048 : (isnan(_5048) ? 1.0 : min(_5048, 1.0));
                        float _3659 = dot(vec3(_1096, _1099, _1102), vec3(_3651 * _3645, _3651 * _3646, _3651 * _3647));
                        float _5059 = isnan(0.0) ? _3659 : (isnan(_3659) ? 0.0 : max(_3659, 0.0));
                        float _3662 = isnan(1.0) ? _5059 : (isnan(_5059) ? 1.0 : min(_5059, 1.0));
                        float _3666 = ((_3662 * _3662) * (_3644 + (-1.0))) + 1.0;
                        float _3667 = _3603 * _3643;
                        float _3668 = _3667 * _3667;
                        float _3671 = ((1.0 - _3668) * _3593) + _3668;
                        float _5070 = isnan(0.0) ? _3671 : (isnan(_3671) ? 0.0 : max(_3671, 0.0));
                        float _3672 = isnan(1.0) ? _5070 : (isnan(_5070) ? 1.0 : min(_5070, 1.0));
                        float _3673 = 1.0 - _3643;
                        float _3683 = (0.5 / (((_3672 * ((_3658 * _3673) + _3643)) + 9.9999999392252902907785028219223e-09) + (((_3672 * _3673) + _3643) * _3658))) * _3672;
                        float _5081 = isnan(0.0) ? _3683 : (isnan(_3683) ? 0.0 : max(_3683, 0.0));
                        float _3694 = (((_3644 * 3.1415927410125732421875) * (isnan(1.0) ? _5081 : (isnan(_5081) ? 1.0 : min(_5081, 1.0)))) / ((_3666 * _3666) * ((_3610 * 2.1991131305694580078125) + 3.141590118408203125))) * _3599;
                        _3452 = (_3614 * _3562.x) + _3520;
                        _3453 = (_3614 * _3562.y) + _3521;
                        _3454 = (_3614 * _3562.z) + _3522;
                        _3449 = (_3694 * _3579.x) + _3517;
                        _3450 = (_3694 * _3579.y) + _3518;
                        _3451 = (_3694 * _3579.z) + _3519;
                        if (_3524 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3517 = _3449;
                            _3518 = _3450;
                            _3519 = _3451;
                            _3520 = _3452;
                            _3521 = _3453;
                            _3522 = _3454;
                            _3523 = _3524;
                        }
                    }
                    frontier_phi_66_pred = _3454;
                    frontier_phi_66_pred_1 = _3453;
                    frontier_phi_66_pred_2 = _3452;
                    frontier_phi_66_pred_3 = _3451;
                    frontier_phi_66_pred_4 = _3450;
                    frontier_phi_66_pred_5 = _3449;
                }
                _3259 = frontier_phi_66_pred;
                _3257 = frontier_phi_66_pred_1;
                _3255 = frontier_phi_66_pred_2;
                _3253 = frontier_phi_66_pred_3;
                _3251 = frontier_phi_66_pred_4;
                _3249 = frontier_phi_66_pred_5;
                uint _3400 = _3399 + 1u;
                if (_3400 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3393 = _3249;
                    _3394 = _3251;
                    _3395 = _3253;
                    _3396 = _3255;
                    _3397 = _3257;
                    _3398 = _3259;
                    _3399 = _3400;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3248 = _3249;
            _3250 = _3251;
            _3252 = _3253;
            _3254 = _3255;
            _3256 = _3257;
            _3258 = _3259;
        }
        uvec4 _3262 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3263 = _3262.z;
        uint _3265 = (_3263 >> 8u) & 15u;
        float _3361;
        float _3363;
        float _3365;
        float _3367;
        float _3369;
        float _3371;
        if (((4294967295u << _3265) & _3166) == 0u)
        {
            _3361 = _3248;
            _3363 = _3250;
            _3365 = _3252;
            _3367 = _3254;
            _3369 = _3256;
            _3371 = _3258;
        }
        else
        {
            float _3386 = inversesqrt(dot(vec3(_2225, _2226, _2227), vec3(_2225, _2226, _2227)));
            float _3387 = _3386 * _2225;
            float _3388 = _3386 * _2226;
            float _3389 = _3386 * _2227;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3265 < ((_3263 >> 12u) & 15u))
            {
                float _3362;
                float _3364;
                float _3366;
                float _3368;
                float _3370;
                float _3372;
                float _3500 = _3248;
                float _3501 = _3250;
                float _3502 = _3252;
                float _3503 = _3254;
                float _3504 = _3256;
                float _3505 = _3258;
                uint _3506 = _3265;
                uint _3515;
                bool _3516;
                for (;;)
                {
                    _3515 = texelFetch(g_lightClassification, int((((_3160 << 5u) + (_3146 << 9u)) + (_3506 << 2u)) >> 2u)).x;
                    _3516 = _3515 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3516)
                    {
                        frontier_phi_72_pred = _3505;
                        frontier_phi_72_pred_1 = _3504;
                        frontier_phi_72_pred_2 = _3503;
                        frontier_phi_72_pred_3 = _3502;
                        frontier_phi_72_pred_4 = _3501;
                        frontier_phi_72_pred_5 = _3500;
                    }
                    else
                    {
                        float _3699;
                        float _3700;
                        float _3701;
                        float _3702;
                        float _3703;
                        float _3704;
                        float _3992;
                        float _3993;
                        float _3994;
                        float _3995;
                        float _3996;
                        float _3997;
                        float _3712 = _3500;
                        float _3713 = _3501;
                        float _3714 = _3502;
                        float _3715 = _3503;
                        float _3716 = _3504;
                        float _3717 = _3505;
                        uint _3718 = _3515;
                        uint _3719;
                        vec4 _3744;
                        float _3745;
                        vec4 _3760;
                        vec3 _3772;
                        vec4 _3787;
                        vec4 _3802;
                        float _3848;
                        bool _3849;
                        for (;;)
                        {
                            uint _3729 = ((_3506 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3718));
                            _3719 = (_3718 + 4294967295u) & _3718;
                            uint _3731 = _3729 * 40u;
                            _3744 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3731)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3731 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3731 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3731 + 3u)).x));
                            _3745 = _3744.w;
                            uint _3747 = (_3729 * 40u) + 4u;
                            _3760 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3747)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3747 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3747 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3747 + 3u)).x));
                            uint _3762 = (_3729 * 40u) + 8u;
                            _3772 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3762)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3762 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3762 + 2u)).x));
                            uint _3774 = (_3729 * 40u) + 16u;
                            _3787 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3774)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3774 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3774 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3774 + 3u)).x));
                            uint _3789 = (_3729 * 40u) + 20u;
                            _3802 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3789)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3789 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3789 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3789 + 3u)).x));
                            uint _3804 = (_3729 * 40u) + 24u;
                            vec4 _3817 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3804)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3804 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3804 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3804 + 3u)).x));
                            uint _3823 = (_3729 * 40u) + 28u;
                            vec4 _3836 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3823)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3823 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3823 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3823 + 3u)).x));
                            _3848 = fma(_2227, _3836.z, fma(_2226, _3836.y, _3836.x * _2225)) + _3836.w;
                            _3849 = !((fma(_2227, _3817.z, fma(_2226, _3817.y, _3817.x * _2225)) + _3817.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3849)
                            {
                                float _3876 = _3744.x - _2225;
                                float _3877 = _3744.y - _2226;
                                float _3878 = _3744.z - _2227;
                                float _3879 = dot(vec3(_3876, _3877, _3878), vec3(_3876, _3877, _3878));
                                float _3882 = inversesqrt(_3879);
                                float _3883 = _3882 * _3876;
                                float _3884 = _3882 * _3877;
                                float _3885 = _3882 * _3878;
                                float _3889 = 1.0 - (_3879 / (_3745 * _3745));
                                float _5092 = isnan(0.0) ? _3889 : (isnan(_3889) ? 0.0 : max(_3889, 0.0));
                                float _3890 = isnan(1.0) ? _5092 : (isnan(_5092) ? 1.0 : min(_5092, 1.0));
                                float _3894 = sqrt(_3879) * _3760.w;
                                float _3896 = 1.39999997615814208984375 / (_3894 + 1.39999997615814208984375);
                                float _3897 = _3896 * _3896;
                                float _3900 = ((1.0 - _3897) * dot(vec3(_3883, _3884, _3885), vec3(_1096, _1099, _1102))) + _3897;
                                float _3903 = _3894 * _3894;
                                float _3907 = (fma(_2227, _3787.z, fma(_2226, _3787.y, _3787.x * _2225)) + _3787.w) / _3848;
                                float _3908 = (fma(_2227, _3802.z, fma(_2226, _3802.y, _3802.x * _2225)) + _3802.w) / _3848;
                                float _3912 = 1.0 - dot(vec2(_3907, _3908), vec2(_3907, _3908));
                                float _5108 = isnan(0.0) ? _3912 : (isnan(_3912) ? 0.0 : max(_3912, 0.0));
                                float _3913 = isnan(1.0) ? _5108 : (isnan(_5108) ? 1.0 : min(_5108, 1.0));
                                float _3914 = _3913 * (((isnan(0.0) ? _3900 : (isnan(_3900) ? 0.0 : max(_3900, 0.0))) * _3890) / ((_3903 * 0.699999988079071044921875) + 1.0));
                                float _3926 = exp2(log2(1.0 / ((_3903 * 3.5) + 5.0)) * 0.25);
                                float _3927 = 1.0 - _1171;
                                float _3934 = sqrt(1.0 - ((1.0 - (_3927 * _3927)) * (1.0 - (_3926 * _3926))));
                                float _3935 = _3934 * _3934;
                                float _3936 = _3935 * _3935;
                                float _3937 = _3883 - _3387;
                                float _3938 = _3884 - _3388;
                                float _3939 = _3885 - _3389;
                                float _3943 = inversesqrt(dot(vec3(_3937, _3938, _3939), vec3(_3937, _3938, _3939)));
                                float _3947 = dot(vec3(_1096, _1099, _1102), vec3((-0.0) - _3387, (-0.0) - _3388, (-0.0) - _3389));
                                float _5119 = isnan(0.0) ? _3947 : (isnan(_3947) ? 0.0 : max(_3947, 0.0));
                                float _3950 = isnan(1.0) ? _5119 : (isnan(_5119) ? 1.0 : min(_5119, 1.0));
                                float _3951 = dot(vec3(_1096, _1099, _1102), vec3(_3943 * _3937, _3943 * _3938, _3943 * _3939));
                                float _5130 = isnan(0.0) ? _3951 : (isnan(_3951) ? 0.0 : max(_3951, 0.0));
                                float _3954 = isnan(1.0) ? _5130 : (isnan(_5130) ? 1.0 : min(_5130, 1.0));
                                float _3958 = ((_3954 * _3954) * (_3936 + (-1.0))) + 1.0;
                                float _3959 = _3896 * _3935;
                                float _3960 = _3959 * _3959;
                                float _3966 = ((1.0 - _3960) * dot(vec3(_1096, _1099, _1102), vec3(_3883, _3884, _3885))) + _3960;
                                float _5141 = isnan(0.0) ? _3966 : (isnan(_3966) ? 0.0 : max(_3966, 0.0));
                                float _3967 = isnan(1.0) ? _5141 : (isnan(_5141) ? 1.0 : min(_5141, 1.0));
                                float _3968 = 1.0 - _3935;
                                float _3978 = (0.5 / (((_3967 * ((_3950 * _3968) + _3935)) + 9.9999999392252902907785028219223e-09) + (((_3967 * _3968) + _3935) * _3950))) * _3967;
                                float _5152 = isnan(0.0) ? _3978 : (isnan(_3978) ? 0.0 : max(_3978, 0.0));
                                float _3988 = (_3913 * _3890) * (((_3936 * 3.1415927410125732421875) * (isnan(1.0) ? _5152 : (isnan(_5152) ? 1.0 : min(_5152, 1.0)))) / ((_3958 * _3958) * ((_3903 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3914 * _3760.y;
                                frontier_phi_78_pred_1 = _3914 * _3760.x;
                                frontier_phi_78_pred_2 = _3988 * _3772.z;
                                frontier_phi_78_pred_3 = _3988 * _3772.y;
                                frontier_phi_78_pred_4 = _3988 * _3772.x;
                                frontier_phi_78_pred_5 = _3914 * _3760.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3996 = frontier_phi_78_pred;
                            _3995 = frontier_phi_78_pred_1;
                            _3994 = frontier_phi_78_pred_2;
                            _3993 = frontier_phi_78_pred_3;
                            _3992 = frontier_phi_78_pred_4;
                            _3997 = frontier_phi_78_pred_5;
                            _3702 = _3995 + _3715;
                            _3703 = _3996 + _3716;
                            _3704 = _3997 + _3717;
                            _3699 = _3992 + _3712;
                            _3700 = _3993 + _3713;
                            _3701 = _3994 + _3714;
                            if (_3719 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3712 = _3699;
                                _3713 = _3700;
                                _3714 = _3701;
                                _3715 = _3702;
                                _3716 = _3703;
                                _3717 = _3704;
                                _3718 = _3719;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3704;
                        frontier_phi_72_pred_1 = _3703;
                        frontier_phi_72_pred_2 = _3702;
                        frontier_phi_72_pred_3 = _3701;
                        frontier_phi_72_pred_4 = _3700;
                        frontier_phi_72_pred_5 = _3699;
                    }
                    _3372 = frontier_phi_72_pred;
                    _3370 = frontier_phi_72_pred_1;
                    _3368 = frontier_phi_72_pred_2;
                    _3366 = frontier_phi_72_pred_3;
                    _3364 = frontier_phi_72_pred_4;
                    _3362 = frontier_phi_72_pred_5;
                    uint _3507 = _3506 + 1u;
                    if (_3507 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3500 = _3362;
                        _3501 = _3364;
                        _3502 = _3366;
                        _3503 = _3368;
                        _3504 = _3370;
                        _3505 = _3372;
                        _3506 = _3507;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3372;
                frontier_phi_60_61_ladder_1 = _3370;
                frontier_phi_60_61_ladder_2 = _3366;
                frontier_phi_60_61_ladder_3 = _3364;
                frontier_phi_60_61_ladder_4 = _3362;
                frontier_phi_60_61_ladder_5 = _3368;
            }
            else
            {
                frontier_phi_60_61_ladder = _3258;
                frontier_phi_60_61_ladder_1 = _3256;
                frontier_phi_60_61_ladder_2 = _3252;
                frontier_phi_60_61_ladder_3 = _3250;
                frontier_phi_60_61_ladder_4 = _3248;
                frontier_phi_60_61_ladder_5 = _3254;
            }
            _3361 = frontier_phi_60_61_ladder_4;
            _3363 = frontier_phi_60_61_ladder_3;
            _3365 = frontier_phi_60_61_ladder_2;
            _3367 = frontier_phi_60_61_ladder_5;
            _3369 = frontier_phi_60_61_ladder_1;
            _3371 = frontier_phi_60_61_ladder;
        }
        float _3376 = isnan(1.0) ? _1155 : (isnan(_1155) ? 1.0 : min(_1155, 1.0));
        _3179 = (_3376 * _3367) + _2691;
        _3181 = (_3376 * _3369) + _2693;
        _3183 = (_3376 * _3371) + _2695;
        _3185 = ((_3361 * _1140) * _3376) + _3029;
        _3187 = ((_3363 * _1142) * _3376) + _3031;
        _3189 = ((_3365 * _1143) * _3376) + _3033;
    }
    else
    {
        _3179 = _2691;
        _3181 = _2693;
        _3183 = _2695;
        _3185 = _3029;
        _3187 = _3031;
        _3189 = _3033;
    }
    float _5168 = isnan(0.0) ? _1130 : (isnan(_1130) ? 0.0 : max(_1130, 0.0));
    float _5179 = isnan(0.0) ? _1131 : (isnan(_1131) ? 0.0 : max(_1131, 0.0));
    float _5190 = isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0));
    float _5201 = isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0));
    float _3214 = cbInstanceData._m0[_1115 + 6u].w * (isnan(1.0) ? _5201 : (isnan(_5201) ? 1.0 : min(_5201, 1.0)));
    float _3219 = _1077 / cbSceneParam._m0[86u].x;
    float _3220 = _1078 / cbSceneParam._m0[86u].y;
    vec4 _3234 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3219, _3220, (log2((isnan(cbSceneParam._m0[77u].w) ? _1012 : (isnan(_1012) ? cbSceneParam._m0[77u].w : min(_1012, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3236 = _3234.x;
    float _3237 = _3234.y;
    float _3238 = _3234.z;
    float _3239 = _3234.w;
    float _3311;
    float _3313;
    float _3315;
    float _3317;
    if (_1012 > cbSceneParam._m0[78u].w)
    {
        float _3273 = isnan(_1012) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1012 : min(cbSceneParam._m0[80u].w, _1012));
        float _3274 = _3273 / _1012;
        float _3285 = _3274 * _1062;
        float _3286 = _1063 * _3274;
        float _3287 = (-0.0) - _3286;
        float _3289 = _3274 * _1064;
        float _3291 = (cbSceneParam._m0[77u].w * _3287) / _3273;
        float _3292 = _3291 + cbSceneParam._m0[79u].w;
        float _3293 = cbSceneParam._m0[79u].w - _3286;
        float _3299 = sqrt(((_3285 * _3285) + (_3286 * _3286)) + (_3289 * _3289));
        float _3302 = (1.0 - (cbSceneParam._m0[77u].w / _3273)) * _3299;
        float _3307 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3309 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3462;
        if (abs((_3287 - _3291) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3462 = ((((_3292 > 0.0) ? exp2(_3307 * _3292) : (2.0 - exp2(_3309 * _3292))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3302;
        }
        else
        {
            float _3422 = 1.0 / cbSceneParam._m0[80u].x;
            float _3423 = isnan(_3293) ? _3292 : (isnan(_3292) ? _3293 : max(_3292, _3293));
            float _3424 = isnan(_3293) ? _3292 : (isnan(_3292) ? _3293 : min(_3292, _3293));
            float _3433 = isnan(0.0) ? _3423 : (isnan(_3423) ? 0.0 : min(_3423, 0.0));
            float _3434 = isnan(0.0) ? _3424 : (isnan(_3424) ? 0.0 : min(_3424, 0.0));
            _3462 = ((abs(_3299 / _3287) * cbSceneParam._m0[80u].y) * ((((_3433 - _3434) * 2.0) - ((exp2(_3307 * (isnan(0.0) ? _3423 : (isnan(_3423) ? 0.0 : max(_3423, 0.0)))) - exp2(_3307 * (isnan(0.0) ? _3424 : (isnan(_3424) ? 0.0 : max(_3424, 0.0))))) * _3422)) - ((exp2(_3309 * _3433) - exp2(_3309 * _3434)) * _3422))) + (_3302 * cbSceneParam._m0[80u].z);
        }
        vec4 _3464 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3219, _3220, 1.0), 0.0);
        float _3473 = exp2((_3462 * (-1.44269502162933349609375)) * (1.0 - _3464.w));
        float _3474 = log2(_3473);
        float _3490 = log2(_3239);
        _3311 = (exp2(_3490 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3474 * cbSceneParam._m0[78u].x)) * _3464.x) / cbSceneParam._m0[78u].x)) + _3236;
        _3313 = (exp2(_3490 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3474 * cbSceneParam._m0[78u].y)) * _3464.y) / cbSceneParam._m0[78u].y)) + _3237;
        _3315 = (exp2(_3490 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3474 * cbSceneParam._m0[78u].z)) * _3464.z) / cbSceneParam._m0[78u].z)) + _3238;
        _3317 = _3473 * _3239;
    }
    else
    {
        _3311 = _3236;
        _3313 = _3237;
        _3315 = _3238;
        _3317 = _3239;
    }
    float _3329 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3330 = _3329 == 3.0;
    float _3331 = log2(_3317);
    float _3338 = exp2(_3331 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5168 : (isnan(_5168) ? 1.0 : min(_5168, 1.0))) * (_3179 + ((isnan(0.0) ? _1880 : (isnan(_1880) ? 0.0 : max(_1880, 0.0))) * _1155))) + ((_3185 + ((isnan(0.0) ? _2172 : (isnan(_2172) ? 0.0 : max(_2172, 0.0))) * _1959)) * cbPerFrame._m0[3u].x));
    float _3339 = exp2(_3331 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5179 : (isnan(_5179) ? 1.0 : min(_5179, 1.0))) * (_3181 + ((isnan(0.0) ? _1883 : (isnan(_1883) ? 0.0 : max(_1883, 0.0))) * _1155))) + ((_3187 + ((isnan(0.0) ? _2175 : (isnan(_2175) ? 0.0 : max(_2175, 0.0))) * _1959)) * cbPerFrame._m0[3u].x));
    float _3340 = exp2(_3331 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5190 : (isnan(_5190) ? 1.0 : min(_5190, 1.0))) * (_3183 + ((isnan(0.0) ? _1886 : (isnan(_1886) ? 0.0 : max(_1886, 0.0))) * _1155))) + ((_3189 + ((isnan(0.0) ? _2178 : (isnan(_2178) ? 0.0 : max(_2178, 0.0))) * _1959)) * cbPerFrame._m0[3u].x));
    float _3349 = (_3329 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3349 * (_3330 ? _3338 : (_3338 + (cbSceneParam._m0[72u].w * _3311)));
    SV_Target.y = _3349 * (_3330 ? _3339 : (_3339 + (cbSceneParam._m0[72u].w * _3313)));
    SV_Target.z = _3349 * (_3330 ? _3340 : (_3340 + (cbSceneParam._m0[72u].w * _3315)));
    SV_Target.w = _3214;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3214;
}


