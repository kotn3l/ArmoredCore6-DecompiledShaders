#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    uint _104 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    precise float _108 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _113 = isnan(_108) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _108 : max(0.001000000047497451305389404296875, _108));
    precise float _115 = BLENDWEIGHT.x / _113;
    precise float _116 = BLENDWEIGHT.y / _113;
    precise float _117 = BLENDWEIGHT.z / _113;
    precise float _118 = BLENDWEIGHT.w / _113;
    uint _120 = texelFetch(g_InstanceIndexBuffer, int(_104)).x * 13u;
    uvec4 _126 = floatBitsToUint(cbInstanceData._m0[_120 + 4u]);
    uint _127 = _126.x;
    uint _129 = (_127 + uint(float(BLENDINDICES.x))) * 3u;
    uint _136 = _129 + 1u;
    uint _143 = _129 + 2u;
    precise float _150 = _115 * cbObjMatrix._m0[_129].x;
    precise float _151 = _115 * cbObjMatrix._m0[_136].x;
    precise float _152 = _115 * cbObjMatrix._m0[_143].x;
    precise float _153 = _115 * cbObjMatrix._m0[_129].y;
    precise float _154 = _115 * cbObjMatrix._m0[_136].y;
    precise float _155 = _115 * cbObjMatrix._m0[_143].y;
    precise float _156 = _115 * cbObjMatrix._m0[_129].z;
    precise float _157 = _115 * cbObjMatrix._m0[_136].z;
    precise float _158 = _115 * cbObjMatrix._m0[_143].z;
    precise float _159 = _115 * cbObjMatrix._m0[_129].w;
    precise float _160 = _115 * cbObjMatrix._m0[_136].w;
    precise float _161 = _115 * cbObjMatrix._m0[_143].w;
    uint _164 = (_127 + uint(float(BLENDINDICES.y))) * 3u;
    uint _171 = _164 + 1u;
    uint _178 = _164 + 2u;
    precise float _185 = _116 * cbObjMatrix._m0[_164].x;
    precise float _186 = _116 * cbObjMatrix._m0[_171].x;
    precise float _187 = _116 * cbObjMatrix._m0[_178].x;
    precise float _188 = _116 * cbObjMatrix._m0[_164].y;
    precise float _189 = _116 * cbObjMatrix._m0[_171].y;
    precise float _190 = _116 * cbObjMatrix._m0[_178].y;
    precise float _191 = _116 * cbObjMatrix._m0[_164].z;
    precise float _192 = _116 * cbObjMatrix._m0[_171].z;
    precise float _193 = _116 * cbObjMatrix._m0[_178].z;
    precise float _194 = _116 * cbObjMatrix._m0[_164].w;
    precise float _195 = _116 * cbObjMatrix._m0[_171].w;
    precise float _196 = _116 * cbObjMatrix._m0[_178].w;
    precise float _197 = _150 + _185;
    precise float _198 = _151 + _186;
    precise float _199 = _152 + _187;
    precise float _200 = _153 + _188;
    precise float _201 = _154 + _189;
    precise float _202 = _155 + _190;
    precise float _203 = _156 + _191;
    precise float _204 = _157 + _192;
    precise float _205 = _158 + _193;
    precise float _206 = _159 + _194;
    precise float _207 = _160 + _195;
    precise float _208 = _161 + _196;
    uint _211 = (_127 + uint(float(BLENDINDICES.z))) * 3u;
    uint _218 = _211 + 1u;
    uint _225 = _211 + 2u;
    precise float _232 = _117 * cbObjMatrix._m0[_211].x;
    precise float _233 = _117 * cbObjMatrix._m0[_218].x;
    precise float _234 = _117 * cbObjMatrix._m0[_225].x;
    precise float _235 = _117 * cbObjMatrix._m0[_211].y;
    precise float _236 = _117 * cbObjMatrix._m0[_218].y;
    precise float _237 = _117 * cbObjMatrix._m0[_225].y;
    precise float _238 = _117 * cbObjMatrix._m0[_211].z;
    precise float _239 = _117 * cbObjMatrix._m0[_218].z;
    precise float _240 = _117 * cbObjMatrix._m0[_225].z;
    precise float _241 = _117 * cbObjMatrix._m0[_211].w;
    precise float _242 = _117 * cbObjMatrix._m0[_218].w;
    precise float _243 = _117 * cbObjMatrix._m0[_225].w;
    precise float _244 = _197 + _232;
    precise float _245 = _198 + _233;
    precise float _246 = _199 + _234;
    precise float _247 = _200 + _235;
    precise float _248 = _201 + _236;
    precise float _249 = _202 + _237;
    precise float _250 = _203 + _238;
    precise float _251 = _204 + _239;
    precise float _252 = _205 + _240;
    precise float _253 = _206 + _241;
    precise float _254 = _207 + _242;
    precise float _255 = _208 + _243;
    uint _258 = (_127 + uint(float(BLENDINDICES.w))) * 3u;
    uint _265 = _258 + 1u;
    uint _272 = _258 + 2u;
    precise float _279 = _118 * cbObjMatrix._m0[_258].x;
    precise float _280 = _118 * cbObjMatrix._m0[_265].x;
    precise float _281 = _118 * cbObjMatrix._m0[_272].x;
    precise float _282 = _118 * cbObjMatrix._m0[_258].y;
    precise float _283 = _118 * cbObjMatrix._m0[_265].y;
    precise float _284 = _118 * cbObjMatrix._m0[_272].y;
    precise float _285 = _118 * cbObjMatrix._m0[_258].z;
    precise float _286 = _118 * cbObjMatrix._m0[_265].z;
    precise float _287 = _118 * cbObjMatrix._m0[_272].z;
    precise float _288 = _118 * cbObjMatrix._m0[_258].w;
    precise float _289 = _118 * cbObjMatrix._m0[_265].w;
    precise float _290 = _118 * cbObjMatrix._m0[_272].w;
    precise float _291 = _244 + _279;
    precise float _292 = _245 + _280;
    precise float _293 = _246 + _281;
    precise float _294 = _247 + _282;
    precise float _295 = _248 + _283;
    precise float _296 = _249 + _284;
    precise float _297 = _250 + _285;
    precise float _298 = _251 + _286;
    precise float _299 = _252 + _287;
    precise float _300 = _253 + _288;
    precise float _301 = _254 + _289;
    precise float _302 = _255 + _290;
    precise float _303 = POSITION.x * _291;
    precise float _304 = POSITION.y * _294;
    precise float _305 = _304 + _303;
    precise float _306 = POSITION.z * _297;
    precise float _307 = _306 + _305;
    precise float _308 = 1.0 * _300;
    precise float _309 = _308 + _307;
    precise float _310 = POSITION.x * _292;
    precise float _311 = POSITION.y * _295;
    precise float _312 = _311 + _310;
    precise float _313 = POSITION.z * _298;
    precise float _314 = _313 + _312;
    precise float _315 = 1.0 * _301;
    precise float _316 = _315 + _314;
    precise float _317 = POSITION.x * _293;
    precise float _318 = POSITION.y * _296;
    precise float _319 = _318 + _317;
    precise float _320 = POSITION.z * _299;
    precise float _321 = _320 + _319;
    precise float _322 = 1.0 * _302;
    precise float _323 = _322 + _321;
    precise float _329 = _309 - cbSceneParam._m0[3u].x;
    precise float _330 = _316 - cbSceneParam._m0[3u].y;
    precise float _331 = _323 - cbSceneParam._m0[3u].z;
    precise float _359 = _329 * cbSceneParam._m0[24u].x;
    precise float _360 = _330 * cbSceneParam._m0[24u].y;
    precise float _361 = _360 + _359;
    precise float _362 = _331 * cbSceneParam._m0[24u].z;
    precise float _363 = _362 + _361;
    precise float _364 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _365 = _364 + _363;
    precise float _366 = _329 * cbSceneParam._m0[25u].x;
    precise float _367 = _330 * cbSceneParam._m0[25u].y;
    precise float _368 = _367 + _366;
    precise float _369 = _331 * cbSceneParam._m0[25u].z;
    precise float _370 = _369 + _368;
    precise float _371 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _372 = _371 + _370;
    precise float _373 = _329 * cbSceneParam._m0[26u].x;
    precise float _374 = _330 * cbSceneParam._m0[26u].y;
    precise float _375 = _374 + _373;
    precise float _376 = _331 * cbSceneParam._m0[26u].z;
    precise float _377 = _376 + _375;
    precise float _378 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _379 = _378 + _377;
    precise float _380 = _329 * cbSceneParam._m0[27u].x;
    precise float _381 = _330 * cbSceneParam._m0[27u].y;
    precise float _382 = _381 + _380;
    precise float _383 = _331 * cbSceneParam._m0[27u].z;
    precise float _384 = _383 + _382;
    precise float _385 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _386 = _385 + _384;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    gl_Position.x = _365;
    gl_Position.y = _372;
    gl_Position.z = _379;
    gl_Position.w = _386;
    gl_ClipDistance[0u] = dot(vec4(_365, _372, _379, _386), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_365, _372, _379, _386), vec4(cbInstanceData._m0[_120 + 3u]));
}


