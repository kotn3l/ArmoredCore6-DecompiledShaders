#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_23;
layout(set = 0, binding = 11) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_24;
layout(set = 0, binding = 12) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_4;
layout(set = 0, binding = 13) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_6;
layout(set = 0, binding = 14) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_7;
layout(set = 0, binding = 15) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_19;
layout(set = 0, binding = 7) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_20;
layout(set = 0, binding = 9) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_22;
layout(set = 0, binding = 17) uniform texture2DArray C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_0;
layout(set = 0, binding = 18) uniform texture2DArray C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in float TEXCOORD_8;
layout(location = 7, component = 1) in float TEXCOORD_9;
layout(location = 7, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1486;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _226 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _227 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _228 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _234 = inversesqrt(dot(vec3(_226, _227, _228), vec3(_226, _227, _228)));
    float _241 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _248 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _292 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _296 = _292.z;
    float _309 = exp2(log2((1.0 - _296) * cbMtdParam._m0[26u].z) * cbMtdParam._m0[25u].w);
    float _310 = isnan(0.0) ? _309 : (isnan(_309) ? 0.0 : max(_309, 0.0));
    float _311 = isnan(1.0) ? _310 : (isnan(_310) ? 1.0 : min(_310, 1.0));
    vec4 _324 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w));
    float _332 = log2(0.0);
    float _334 = exp2(_332 * cbMtdParam._m0[23u].x);
    float _335 = isnan(0.0) ? _334 : (isnan(_334) ? 0.0 : max(_334, 0.0));
    float _336 = isnan(1.0) ? _335 : (isnan(_335) ? 1.0 : min(_335, 1.0));
    float _345 = exp2(log2(cbMtdParam._m0[23u].y * _296) * cbMtdParam._m0[22u].y);
    float _346 = isnan(0.0) ? _345 : (isnan(_345) ? 0.0 : max(_345, 0.0));
    float _347 = isnan(1.0) ? _346 : (isnan(_346) ? 1.0 : min(_346, 1.0));
    vec4 _359 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _362 = _359.y;
    float _365 = (_359.x + (-0.02500000037252902984619140625)) * 8.0;
    float _369 = roundEven(5.0 - _365);
    float _370 = isnan(0.0) ? _369 : (isnan(_369) ? 0.0 : max(_369, 0.0));
    float _371 = isnan(4.0) ? _370 : (isnan(_370) ? 4.0 : min(_370, 4.0));
    float _383 = floor(_371);
    vec4 _386 = texture(sampler2DArray(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_0, SS_DiffuseMap), vec3((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w, _383));
    float _204[6];
    float _205[6];
    float _206[6];
    _204[0u] = cbMtdParam._m0[17u].x;
    _205[0u] = cbMtdParam._m0[17u].y;
    _206[0u] = cbMtdParam._m0[17u].z;
    _204[1u] = cbMtdParam._m0[15u].x;
    _205[1u] = cbMtdParam._m0[15u].y;
    _206[1u] = cbMtdParam._m0[15u].z;
    _204[2u] = cbMtdParam._m0[14u].x;
    _205[2u] = cbMtdParam._m0[14u].y;
    _206[2u] = cbMtdParam._m0[14u].z;
    _204[3u] = cbMtdParam._m0[13u].x;
    _205[3u] = cbMtdParam._m0[13u].y;
    _206[3u] = cbMtdParam._m0[13u].z;
    _204[4u] = cbMtdParam._m0[12u].x;
    _205[4u] = cbMtdParam._m0[12u].y;
    _206[4u] = cbMtdParam._m0[12u].z;
    _204[5u] = cbMtdParam._m0[18u].x;
    _205[5u] = cbMtdParam._m0[18u].y;
    _206[5u] = cbMtdParam._m0[18u].z;
    float _450 = roundEven(_365);
    float _451 = isnan(0.0) ? _450 : (isnan(_450) ? 0.0 : max(_450, 0.0));
    uint _453 = uint(int(isnan(5.0) ? _451 : (isnan(_451) ? 5.0 : min(_451, 5.0))));
    vec4 _483 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _494 = cbMtdParam._m0[9u].x * _483.x;
    float _495 = cbMtdParam._m0[9u].y * _483.y;
    float _496 = cbMtdParam._m0[9u].z * _483.z;
    float _503 = ((((((_204[_453] - cbMtdParam._m0[10u].x) * _362) + cbMtdParam._m0[10u].x) * _386.x) - _494) * _347) + _494;
    float _504 = ((((((_205[_453] - cbMtdParam._m0[10u].y) * _362) + cbMtdParam._m0[10u].y) * _386.y) - _495) * _347) + _495;
    float _505 = ((((((_206[_453] - cbMtdParam._m0[10u].z) * _362) + cbMtdParam._m0[10u].z) * _386.z) - _496) * _347) + _496;
    float _511 = exp2(log2(_292.w) * cbMtdParam._m0[23u].w);
    vec4 _524 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _544 = (((cbMtdParam._m0[16u].x * _524.x) - _503) * _511) + _503;
    float _545 = (((cbMtdParam._m0[16u].y * _524.y) - _504) * _511) + _504;
    float _546 = (((cbMtdParam._m0[16u].z * _524.z) - _505) * _511) + _505;
    vec4 _558 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _578 = (((cbMtdParam._m0[19u].x * _558.x) - _544) * _336) + _544;
    float _579 = (((cbMtdParam._m0[19u].y * _558.y) - _545) * _336) + _545;
    float _580 = (((cbMtdParam._m0[19u].z * _558.z) - _546) * _336) + _546;
    vec4 _592 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_19, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _617 = (_324.x * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].x * _592.x) - _578) * _311) + _578);
    float _619 = (_324.y * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].y * _592.y) - _579) * _311) + _579);
    float _621 = (_324.z * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].z * _592.z) - _580) * _311) + _580);
    float _625 = cbMtdParam._m0[28u].x * TEXCOORD_8;
    float _634 = (_625 - (((texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_23, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x + 0.00999999977648258209228515625) * cbMtdParam._m0[27u].z) * (1.0 - _625))) * (cbMtdParam._m0[27u].w + 1.0);
    float _3885 = isnan(0.0) ? _634 : (isnan(_634) ? 0.0 : max(_634, 0.0));
    float _635 = isnan(1.0) ? _3885 : (isnan(_3885) ? 1.0 : min(_3885, 1.0));
    float _642 = ((cbMtdParam._m0[21u].x - _617) * _635) + _617;
    float _643 = ((cbMtdParam._m0[21u].y - _619) * _635) + _619;
    float _644 = ((cbMtdParam._m0[21u].z - _621) * _635) + _621;
    vec4 _658 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_24, SS_ClampLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.z) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.w) + cbTextureTilingScale._m0[11u].w));
    float _666 = (_658.x + (-1.0)) + (cbMtdParam._m0[28u].y * 2.0);
    float _3896 = isnan(0.0) ? _666 : (isnan(_666) ? 0.0 : max(_666, 0.0));
    float _672 = exp2(log2(cbMtdParam._m0[28u].w * (isnan(1.0) ? _3896 : (isnan(_3896) ? 1.0 : min(_3896, 1.0)))) * cbMtdParam._m0[28u].z);
    float _3907 = isnan(0.0) ? _672 : (isnan(_672) ? 0.0 : max(_672, 0.0));
    float _673 = isnan(1.0) ? _3907 : (isnan(_3907) ? 1.0 : min(_3907, 1.0));
    float _199[5];
    float _200[5];
    _199[0u] = cbMtdParam._m0[29u].z;
    _200[0u] = cbMtdParam._m0[29u].w;
    _199[1u] = cbMtdParam._m0[31u].z;
    _200[1u] = cbMtdParam._m0[31u].w;
    _199[2u] = cbMtdParam._m0[31u].x;
    _200[2u] = cbMtdParam._m0[31u].y;
    _199[3u] = cbMtdParam._m0[30u].z;
    _200[3u] = cbMtdParam._m0[30u].w;
    _199[4u] = cbMtdParam._m0[30u].x;
    _200[4u] = cbMtdParam._m0[30u].y;
    float _713 = isnan(0.0) ? _371 : (isnan(_371) ? 0.0 : max(_371, 0.0));
    uint _715 = uint(int(isnan(4.0) ? _713 : (isnan(_713) ? 4.0 : min(_713, 4.0))));
    float _722 = ((_200[_715] - cbMtdParam._m0[22u].z) * _347) + cbMtdParam._m0[22u].z;
    float _725 = ((cbMtdParam._m0[22u].w - _722) * _511) + _722;
    float _728 = ((cbMtdParam._m0[25u].x - _725) * _336) + _725;
    float _731 = ((cbMtdParam._m0[26u].x - _728) * _311) + _728;
    float _733 = _731 - (_731 * _625);
    vec4 _749 = texture(sampler2DArray(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_1, SS_BumpMap), vec3((cbTextureTilingScale._m0[18u].x * TEXCOORD.x) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD.y) + cbTextureTilingScale._m0[18u].w, _383));
    vec4 _766 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w));
    float _768 = _766.x;
    float _769 = _766.y;
    float _774 = cbMtdParam._m0[22u].x + _766.z;
    float _777 = (((_749.z + _199[_715]) - _774) * _347) + _774;
    vec4 _789 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.x) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.y) + cbTextureTilingScale._m0[15u].w));
    float _800 = (((_789.z - _777) + cbMtdParam._m0[29u].x) * _511) + _777;
    float _805 = ((((_296 * 2.0) * _800) - _800) * cbMtdParam._m0[24u].w) + _800;
    vec4 _817 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w));
    float _828 = (((cbMtdParam._m0[23u].z + _817.z) - _805) * _336) + _805;
    vec4 _841 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_20, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _852 = (((_841.z - _828) + cbMtdParam._m0[26u].y) * _311) + _828;
    vec4 _867 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_22, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _881 = ((cbMtdParam._m0[27u].y * _625) * ((_867.z * cbMtdParam._m0[27u].x) - _852)) + _852;
    float _893 = ((_749.x - _768) * _347) + _768;
    float _894 = ((_749.y - _769) * _347) + _769;
    float _899 = ((_789.x - _893) * _511) + _893;
    float _900 = ((_789.y - _894) * _511) + _894;
    float _905 = ((_817.x - _899) * _336) + _899;
    float _906 = ((_817.y - _900) * _336) + _900;
    float _915 = ((((_841.x - _905) * _311) + _905) * 2.0) + (-1.0);
    float _916 = ((((_841.y - _906) * _311) + _906) * 2.0) + (-1.0);
    float _917 = dot(vec2(_915, _916), vec2(_915, _916));
    float _3928 = isnan(0.0) ? _917 : (isnan(_917) ? 0.0 : max(_917, 0.0));
    float _922 = sqrt(1.0 - (isnan(1.0) ? _3928 : (isnan(_3928) ? 1.0 : min(_3928, 1.0))));
    float _932 = ((cbMtdParam._m0[25u].y * ((_292.x * 2.0) + (-1.0))) + _915) + ((((_867.x * 2.0) + (-1.0)) * _625) * cbMtdParam._m0[26u].w);
    float _933 = ((cbMtdParam._m0[25u].y * ((_292.y * 2.0) + (-1.0))) + _916) + (((cbMtdParam._m0[28u].x * TEXCOORD_9) * ((_867.y * 2.0) + (-1.0))) * cbMtdParam._m0[26u].w);
    float _936 = fma(_922, _241 * NORMAL.x, fma(_933, _248 * TANGENT.x, (_234 * _226) * _932));
    float _939 = fma(_922, _241 * NORMAL.y, fma(_933, _248 * TANGENT.y, (_234 * _227) * _932));
    float _942 = fma(_922, _241 * NORMAL.z, fma(_933, _248 * TANGENT.z, (_234 * _228) * _932));
    float _946 = inversesqrt(dot(vec3(_936, _939, _942), vec3(_936, _939, _942)));
    float _947 = _946 * _936;
    float _948 = _946 * _939;
    float _949 = _946 * _942;
    float _3939 = isnan(0.0) ? _673 : (isnan(_673) ? 0.0 : max(_673, 0.0));
    float _950 = isnan(1.0) ? _3939 : (isnan(_3939) ? 1.0 : min(_3939, 1.0));
    float _3950 = isnan(0.0) ? _881 : (isnan(_881) ? 0.0 : max(_881, 0.0));
    float _951 = isnan(1.0) ? _3950 : (isnan(_3950) ? 1.0 : min(_3950, 1.0));
    float _3961 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
    float _3972 = isnan(0.0) ? _643 : (isnan(_643) ? 0.0 : max(_643, 0.0));
    float _3983 = isnan(0.0) ? _644 : (isnan(_644) ? 0.0 : max(_644, 0.0));
    float _3994 = isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0));
    float _955 = isnan(1.0) ? _3994 : (isnan(_3994) ? 1.0 : min(_3994, 1.0));
    float _971 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1011 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1021 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1011);
    float _1022 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1011);
    float _1023 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1011);
    float _1027 = inversesqrt(dot(vec3(_1021, _1022, _1023), vec3(_1021, _1022, _1023)));
    float _1028 = _1021 * _1027;
    float _1029 = _1022 * _1027;
    float _1030 = _1023 * _1027;
    float _1036 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1037 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1055 = fma(_949, cbSceneParam._m0[5u].z, fma(_948, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _947));
    float _1058 = fma(_949, cbSceneParam._m0[6u].z, fma(_948, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _947));
    float _1061 = fma(_949, cbSceneParam._m0[7u].z, fma(_948, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _947));
    uint _1074 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1076 = (_1074 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1082 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3961 : (isnan(_3961) ? 1.0 : min(_3961, 1.0)))) * cbInstanceData._m0[_1076].x;
    float _1083 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3972 : (isnan(_3972) ? 1.0 : min(_3972, 1.0)))) * cbInstanceData._m0[_1076].y;
    float _1084 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3983 : (isnan(_3983) ? 1.0 : min(_3983, 1.0)))) * cbInstanceData._m0[_1076].z;
    float _4005 = isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0));
    float _1085 = isnan(1.0) ? _4005 : (isnan(_4005) ? 1.0 : min(_4005, 1.0));
    float _4016 = isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0));
    float _1086 = isnan(1.0) ? _4016 : (isnan(_4016) ? 1.0 : min(_4016, 1.0));
    float _4027 = isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0));
    float _1087 = isnan(1.0) ? _4027 : (isnan(_4027) ? 1.0 : min(_4027, 1.0));
    float _1088 = 1.0 - _955;
    float _1089 = _1085 * _1088;
    float _1090 = _1086 * _1088;
    float _1091 = _1087 * _1088;
    float _1096 = (_1085 + (-0.039999999105930328369140625)) * _955;
    float _1097 = (_1086 + (-0.039999999105930328369140625)) * _955;
    float _1098 = (_1087 + (-0.039999999105930328369140625)) * _955;
    float _1099 = _1096 + 0.039999999105930328369140625;
    float _1101 = _1097 + 0.039999999105930328369140625;
    float _1102 = _1098 + 0.039999999105930328369140625;
    vec4 _1111 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1036, cbSceneParam._m0[86u].y * _1037));
    float _1114 = _1111.x * TEXCOORD_5.w;
    float _1115 = dot(vec3(_947, _948, _949), vec3(_1028, _1029, _1030));
    float _1118 = _1115 * 2.0;
    float _1122 = (_1118 * _947) - _1028;
    float _1123 = (_1118 * _948) - _1029;
    float _1124 = (_1118 * _949) - _1030;
    float _1128 = abs(dot(vec3(_1028, _1029, _1030), vec3(_947, _948, _949)));
    float _4038 = isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0));
    float _1130 = sqrt(_951);
    float _1141 = exp2((_1130 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4038 : (isnan(_4038) ? 1.0 : min(_4038, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1130 * 3.0));
    float _1147 = (1.0 - _1141) * ((_1130 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1148 = _1141 * _1130;
    float _1176 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1180 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1184 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1485;
    float _1487;
    float _1488;
    float _1489;
    float _1490;
    float _1491;
    float _1492;
    float _1493;
    float _1494;
    float _1495;
    float _1496;
    float _1497;
    float _1498;
    float _1499;
    float _1500;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1210 = fma(_1184, cbModelParam._m0[26u].z, fma(_1180, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1176));
        float _1214 = fma(_1184, cbModelParam._m0[27u].z, fma(_1180, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1176));
        float _1218 = fma(_1184, cbModelParam._m0[28u].z, fma(_1180, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1176));
        float _1243 = _1176 + _947;
        float _1244 = _1180 + _948;
        float _1245 = _1184 + _949;
        float _1255 = fma(_1245, cbModelParam._m0[26u].z, fma(_1244, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1243)) - _1210;
        float _1256 = fma(_1245, cbModelParam._m0[27u].z, fma(_1244, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1243)) - _1214;
        float _1257 = fma(_1245, cbModelParam._m0[28u].z, fma(_1244, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1243)) - _1218;
        float _1261 = inversesqrt(dot(vec3(_1255, _1256, _1257), vec3(_1255, _1256, _1257)));
        float _1274 = ((_1261 * _1255) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1210 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1275 = ((_1261 * _1256) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1214 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1276 = ((_1261 * _1257) / cbModelParam._m0[34u].z) + ((((((_1218 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1279 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1274, _1275, _1276), 0.0);
        vec4 _1286 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1274, _1275, _1276), 0.0);
        vec4 _1293 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1274, _1275, _1276), 0.0);
        vec4 _1300 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1274, _1275, _1276), 0.0);
        float _1313 = exp2((_1279.w + (-0.5)) * 20.0) * 2.0;
        float _1314 = _1313 * (_1279.x + (-0.5));
        float _1315 = _1313 * (_1279.y + (-0.5));
        float _1316 = _1313 * (_1279.z + (-0.5));
        float _1323 = exp2((_1286.w + (-0.5)) * 20.0) * 2.0;
        float _1324 = _1323 * (_1286.x + (-0.5));
        float _1325 = _1323 * (_1286.y + (-0.5));
        float _1326 = _1323 * (_1286.z + (-0.5));
        float _1333 = exp2((_1293.w + (-0.5)) * 20.0) * 2.0;
        float _1334 = _1333 * (_1293.x + (-0.5));
        float _1335 = _1333 * (_1293.y + (-0.5));
        float _1336 = _1333 * (_1293.z + (-0.5));
        float _1343 = exp2((_1300.w + (-0.5)) * 20.0) * 2.0;
        float _1344 = _1343 * (_1300.x + (-0.5));
        float _1345 = _1343 * (_1300.y + (-0.5));
        float _1346 = _1343 * (_1300.z + (-0.5));
        float _1347 = isnan(0.0) ? _1344 : (isnan(_1344) ? 0.0 : max(_1344, 0.0));
        float _1348 = isnan(0.0) ? _1345 : (isnan(_1345) ? 0.0 : max(_1345, 0.0));
        float _1349 = isnan(0.0) ? _1346 : (isnan(_1346) ? 0.0 : max(_1346, 0.0));
        float _1350 = _1314 * 0.5;
        float _1351 = _1324 * 0.5;
        float _1352 = _1334 * 0.5;
        float _1353 = dot(vec3(_1350, _1351, _1352), vec3(_1350, _1351, _1352));
        float _1358 = (_1353 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1353);
        float _1367 = (dot(vec3(_947, _948, _949), vec3(_1358 * _1350, _1358 * _1351, _1358 * _1352)) + 1.0) * 0.5;
        float _4064 = isnan(0.0) ? _1367 : (isnan(_1367) ? 0.0 : max(_1367, 0.0));
        float _1377 = sqrt(((_1351 * _1351) + (_1350 * _1350)) + (_1352 * _1352)) / (_1347 + 9.9999997473787516355514526367188e-06);
        float _4075 = isnan(0.0) ? _1377 : (isnan(_1377) ? 0.0 : max(_1377, 0.0));
        float _1378 = isnan(1.0) ? _4075 : (isnan(_4075) ? 1.0 : min(_4075, 1.0));
        float _1379 = _1378 * 2.0;
        float _1383 = (1.0 - _1378) / (_1378 + 1.0);
        float _4086 = isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0));
        float _1384 = isnan(1.0) ? _4086 : (isnan(_4086) ? 1.0 : min(_4086, 1.0));
        float _1393 = ((((1.0 - _1384) * (_1379 + 2.0)) * exp2(log2(isnan(1.0) ? _4064 : (isnan(_4064) ? 1.0 : min(_4064, 1.0))) * (_1379 + 1.0))) + _1384) * _1347;
        float _1394 = _1315 * 0.5;
        float _1395 = _1325 * 0.5;
        float _1396 = _1335 * 0.5;
        float _1397 = dot(vec3(_1394, _1395, _1396), vec3(_1394, _1395, _1396));
        float _1402 = (_1397 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1397);
        float _1410 = (dot(vec3(_947, _948, _949), vec3(_1402 * _1394, _1402 * _1395, _1402 * _1396)) + 1.0) * 0.5;
        float _4097 = isnan(0.0) ? _1410 : (isnan(_1410) ? 0.0 : max(_1410, 0.0));
        float _1419 = sqrt(((_1395 * _1395) + (_1394 * _1394)) + (_1396 * _1396)) / (_1348 + 9.9999997473787516355514526367188e-06);
        float _4108 = isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0));
        float _1420 = isnan(1.0) ? _4108 : (isnan(_4108) ? 1.0 : min(_4108, 1.0));
        float _1421 = _1420 * 2.0;
        float _1425 = (1.0 - _1420) / (_1420 + 1.0);
        float _4119 = isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0));
        float _1426 = isnan(1.0) ? _4119 : (isnan(_4119) ? 1.0 : min(_4119, 1.0));
        float _1435 = ((((1.0 - _1426) * (_1421 + 2.0)) * exp2(log2(isnan(1.0) ? _4097 : (isnan(_4097) ? 1.0 : min(_4097, 1.0))) * (_1421 + 1.0))) + _1426) * _1348;
        float _1436 = _1316 * 0.5;
        float _1437 = _1326 * 0.5;
        float _1438 = _1336 * 0.5;
        float _1439 = dot(vec3(_1436, _1437, _1438), vec3(_1436, _1437, _1438));
        float _1444 = (_1439 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1439);
        float _1452 = (dot(vec3(_947, _948, _949), vec3(_1444 * _1436, _1444 * _1437, _1444 * _1438)) + 1.0) * 0.5;
        float _4130 = isnan(0.0) ? _1452 : (isnan(_1452) ? 0.0 : max(_1452, 0.0));
        float _1461 = sqrt(((_1437 * _1437) + (_1436 * _1436)) + (_1438 * _1438)) / (_1349 + 9.9999997473787516355514526367188e-06);
        float _4141 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0));
        float _1462 = isnan(1.0) ? _4141 : (isnan(_4141) ? 1.0 : min(_4141, 1.0));
        float _1463 = _1462 * 2.0;
        float _1467 = (1.0 - _1462) / (_1462 + 1.0);
        float _4152 = isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0));
        float _1468 = isnan(1.0) ? _4152 : (isnan(_4152) ? 1.0 : min(_4152, 1.0));
        float _1477 = ((((1.0 - _1468) * (_1463 + 2.0)) * exp2(log2(isnan(1.0) ? _4130 : (isnan(_4130) ? 1.0 : min(_4130, 1.0))) * (_1463 + 1.0))) + _1468) * _1349;
        _1485 = _1316;
        _1487 = _1315;
        _1488 = _1314;
        _1489 = _1326;
        _1490 = _1325;
        _1491 = _1324;
        _1492 = _1336;
        _1493 = _1335;
        _1494 = _1334;
        _1495 = _1349;
        _1496 = _1348;
        _1497 = _1347;
        _1498 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1393 : (isnan(_1393) ? 0.0 : max(_1393, 0.0)));
        _1499 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0)));
        _1500 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0)));
    }
    else
    {
        _1485 = _1486;
        _1487 = _1486;
        _1488 = _1486;
        _1489 = _1486;
        _1490 = _1486;
        _1491 = _1486;
        _1492 = _1486;
        _1493 = _1486;
        _1494 = _1486;
        _1495 = _1486;
        _1496 = _1486;
        _1497 = _1486;
        _1498 = 0.0;
        _1499 = 0.0;
        _1500 = 0.0;
    }
    float _1792;
    float _1793;
    float _1794;
    float _1795;
    float _1796;
    float _1797;
    float _1798;
    float _1799;
    float _1800;
    float _1801;
    float _1802;
    float _1803;
    float _1804;
    float _1805;
    float _1806;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1523 = fma(_1184, cbModelParam._m0[30u].z, fma(_1180, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1176));
        float _1527 = fma(_1184, cbModelParam._m0[31u].z, fma(_1180, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1176));
        float _1531 = fma(_1184, cbModelParam._m0[32u].z, fma(_1180, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1176));
        float _1554 = _1176 + _947;
        float _1555 = _1180 + _948;
        float _1556 = _1184 + _949;
        float _1566 = fma(_1556, cbModelParam._m0[30u].z, fma(_1555, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1554)) - _1523;
        float _1567 = fma(_1556, cbModelParam._m0[31u].z, fma(_1555, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1554)) - _1527;
        float _1568 = fma(_1556, cbModelParam._m0[32u].z, fma(_1555, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1554)) - _1531;
        float _1572 = inversesqrt(dot(vec3(_1566, _1567, _1568), vec3(_1566, _1567, _1568)));
        float _1585 = ((_1572 * _1566) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1523 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1586 = ((_1572 * _1567) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1527 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1587 = ((_1572 * _1568) / cbModelParam._m0[35u].z) + ((((((_1531 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1589 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1585, _1586, _1587), 0.0);
        vec4 _1596 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1585, _1586, _1587), 0.0);
        vec4 _1603 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1585, _1586, _1587), 0.0);
        vec4 _1610 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1585, _1586, _1587), 0.0);
        float _1622 = exp2((_1589.w + (-0.5)) * 20.0) * 2.0;
        float _1623 = _1622 * (_1589.x + (-0.5));
        float _1624 = _1622 * (_1589.y + (-0.5));
        float _1625 = _1622 * (_1589.z + (-0.5));
        float _1632 = exp2((_1596.w + (-0.5)) * 20.0) * 2.0;
        float _1633 = _1632 * (_1596.x + (-0.5));
        float _1634 = _1632 * (_1596.y + (-0.5));
        float _1635 = _1632 * (_1596.z + (-0.5));
        float _1642 = exp2((_1603.w + (-0.5)) * 20.0) * 2.0;
        float _1643 = _1642 * (_1603.x + (-0.5));
        float _1644 = _1642 * (_1603.y + (-0.5));
        float _1645 = _1642 * (_1603.z + (-0.5));
        float _1652 = exp2((_1610.w + (-0.5)) * 20.0) * 2.0;
        float _1653 = _1652 * (_1610.x + (-0.5));
        float _1654 = _1652 * (_1610.y + (-0.5));
        float _1655 = _1652 * (_1610.z + (-0.5));
        float _1656 = isnan(0.0) ? _1653 : (isnan(_1653) ? 0.0 : max(_1653, 0.0));
        float _1657 = isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0));
        float _1658 = isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0));
        float _1659 = _1623 * 0.5;
        float _1660 = _1633 * 0.5;
        float _1661 = _1643 * 0.5;
        float _1662 = dot(vec3(_1659, _1660, _1661), vec3(_1659, _1660, _1661));
        float _1667 = (_1662 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1662);
        float _1675 = (dot(vec3(_947, _948, _949), vec3(_1667 * _1659, _1667 * _1660, _1667 * _1661)) + 1.0) * 0.5;
        float _4193 = isnan(0.0) ? _1675 : (isnan(_1675) ? 0.0 : max(_1675, 0.0));
        float _1684 = sqrt(((_1660 * _1660) + (_1659 * _1659)) + (_1661 * _1661)) / (_1656 + 9.9999997473787516355514526367188e-06);
        float _4204 = isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0));
        float _1685 = isnan(1.0) ? _4204 : (isnan(_4204) ? 1.0 : min(_4204, 1.0));
        float _1686 = _1685 * 2.0;
        float _1690 = (1.0 - _1685) / (_1685 + 1.0);
        float _4215 = isnan(0.0) ? _1690 : (isnan(_1690) ? 0.0 : max(_1690, 0.0));
        float _1691 = isnan(1.0) ? _4215 : (isnan(_4215) ? 1.0 : min(_4215, 1.0));
        float _1700 = ((((1.0 - _1691) * (_1686 + 2.0)) * exp2(log2(isnan(1.0) ? _4193 : (isnan(_4193) ? 1.0 : min(_4193, 1.0))) * (_1686 + 1.0))) + _1691) * _1656;
        float _1701 = _1624 * 0.5;
        float _1702 = _1634 * 0.5;
        float _1703 = _1644 * 0.5;
        float _1704 = dot(vec3(_1701, _1702, _1703), vec3(_1701, _1702, _1703));
        float _1709 = (_1704 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1704);
        float _1717 = (dot(vec3(_947, _948, _949), vec3(_1709 * _1701, _1709 * _1702, _1709 * _1703)) + 1.0) * 0.5;
        float _4226 = isnan(0.0) ? _1717 : (isnan(_1717) ? 0.0 : max(_1717, 0.0));
        float _1726 = sqrt(((_1702 * _1702) + (_1701 * _1701)) + (_1703 * _1703)) / (_1657 + 9.9999997473787516355514526367188e-06);
        float _4237 = isnan(0.0) ? _1726 : (isnan(_1726) ? 0.0 : max(_1726, 0.0));
        float _1727 = isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0));
        float _1728 = _1727 * 2.0;
        float _1732 = (1.0 - _1727) / (_1727 + 1.0);
        float _4248 = isnan(0.0) ? _1732 : (isnan(_1732) ? 0.0 : max(_1732, 0.0));
        float _1733 = isnan(1.0) ? _4248 : (isnan(_4248) ? 1.0 : min(_4248, 1.0));
        float _1742 = ((((1.0 - _1733) * (_1728 + 2.0)) * exp2(log2(isnan(1.0) ? _4226 : (isnan(_4226) ? 1.0 : min(_4226, 1.0))) * (_1728 + 1.0))) + _1733) * _1657;
        float _1743 = _1625 * 0.5;
        float _1744 = _1635 * 0.5;
        float _1745 = _1645 * 0.5;
        float _1746 = dot(vec3(_1743, _1744, _1745), vec3(_1743, _1744, _1745));
        float _1751 = (_1746 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1746);
        float _1759 = (dot(vec3(_947, _948, _949), vec3(_1751 * _1743, _1751 * _1744, _1751 * _1745)) + 1.0) * 0.5;
        float _4259 = isnan(0.0) ? _1759 : (isnan(_1759) ? 0.0 : max(_1759, 0.0));
        float _1768 = sqrt(((_1744 * _1744) + (_1743 * _1743)) + (_1745 * _1745)) / (_1658 + 9.9999997473787516355514526367188e-06);
        float _4270 = isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0));
        float _1769 = isnan(1.0) ? _4270 : (isnan(_4270) ? 1.0 : min(_4270, 1.0));
        float _1770 = _1769 * 2.0;
        float _1774 = (1.0 - _1769) / (_1769 + 1.0);
        float _4281 = isnan(0.0) ? _1774 : (isnan(_1774) ? 0.0 : max(_1774, 0.0));
        float _1775 = isnan(1.0) ? _4281 : (isnan(_4281) ? 1.0 : min(_4281, 1.0));
        float _1784 = ((((1.0 - _1775) * (_1770 + 2.0)) * exp2(log2(isnan(1.0) ? _4259 : (isnan(_4259) ? 1.0 : min(_4259, 1.0))) * (_1770 + 1.0))) + _1775) * _1658;
        _1792 = _1625;
        _1793 = _1624;
        _1794 = _1623;
        _1795 = _1635;
        _1796 = _1634;
        _1797 = _1633;
        _1798 = _1645;
        _1799 = _1644;
        _1800 = _1643;
        _1801 = _1658;
        _1802 = _1657;
        _1803 = _1656;
        _1804 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1700 : (isnan(_1700) ? 0.0 : max(_1700, 0.0)));
        _1805 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1742 : (isnan(_1742) ? 0.0 : max(_1742, 0.0)));
        _1806 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1784 : (isnan(_1784) ? 0.0 : max(_1784, 0.0)));
    }
    else
    {
        _1792 = _1486;
        _1793 = _1486;
        _1794 = _1486;
        _1795 = _1486;
        _1796 = _1486;
        _1797 = _1486;
        _1798 = _1486;
        _1799 = _1486;
        _1800 = _1486;
        _1801 = _1486;
        _1802 = _1486;
        _1803 = _1486;
        _1804 = 0.0;
        _1805 = 0.0;
        _1806 = 0.0;
    }
    float _1816 = (cbModelParam._m0[1u].x * (_1804 - _1498)) + _1498;
    float _1817 = (cbModelParam._m0[1u].x * (_1805 - _1499)) + _1499;
    float _1818 = (cbModelParam._m0[1u].x * (_1806 - _1500)) + _1500;
    float _1839 = fma(_1818, cbSceneParam._m0[89u].z, fma(_1817, cbSceneParam._m0[89u].y, _1816 * cbSceneParam._m0[89u].x));
    float _1842 = fma(_1818, cbSceneParam._m0[90u].z, fma(_1817, cbSceneParam._m0[90u].y, _1816 * cbSceneParam._m0[90u].x));
    float _1845 = fma(_1818, cbSceneParam._m0[91u].z, fma(_1817, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1816));
    float _1860 = _1122 * 0.5;
    float _1861 = _1123 * 0.5;
    float _1862 = _1124 * 0.5;
    float _1863 = dot(vec4(_1860, _1861, _1862, 1.0), vec4(_1794, _1797, _1800, _1803));
    float _1866 = dot(vec4(_1860, _1861, _1862, 1.0), vec4(_1793, _1796, _1799, _1802));
    float _1869 = dot(vec4(_1860, _1861, _1862, 1.0), vec4(_1792, _1795, _1798, _1801));
    float _1903;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1876 = dot(vec4(_1860, _1861, _1862, 1.0), vec4(_1485, _1489, _1492, _1495));
        float _1880 = dot(vec4(_1860, _1861, _1862, 1.0), vec4(_1487, _1490, _1493, _1496));
        float _1884 = dot(vec4(_1860, _1861, _1862, 1.0), vec4(_1488, _1491, _1494, _1497));
        float _1891 = dot(vec4(cbModelParam._m0[39u]), vec4(_1860, _1861, _1862, 1.0));
        _1903 = dot(vec3(isnan(0.0) ? _1884 : (isnan(_1884) ? 0.0 : max(_1884, 0.0)), isnan(0.0) ? _1880 : (isnan(_1880) ? 0.0 : max(_1880, 0.0)), isnan(0.0) ? _1876 : (isnan(_1876) ? 0.0 : max(_1876, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1891) ? 0.0 : (isnan(0.0) ? _1891 : max(0.0, _1891))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1903 = 1.0;
    }
    float _1914;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1905 = dot(vec4(cbModelParam._m0[40u]), vec4(_1860, _1861, _1862, 1.0));
        _1914 = dot(vec3(isnan(0.0) ? _1863 : (isnan(_1863) ? 0.0 : max(_1863, 0.0)), isnan(0.0) ? _1866 : (isnan(_1866) ? 0.0 : max(_1866, 0.0)), isnan(0.0) ? _1869 : (isnan(_1869) ? 0.0 : max(_1869, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1905) ? 0.0 : (isnan(0.0) ? _1905 : max(0.0, _1905))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1914 = 1.0;
    }
    float _1918 = (_1914 * cbModelParam._m0[1u].x) + (_1903 * (1.0 - cbModelParam._m0[1u].x));
    float _1928 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _951);
    float _1929 = isnan(_1928) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1928 : min(cbModelParam._m0[25u].z, _1928));
    float _2009;
    float _2011;
    float _2013;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1976 = fma(_1184, cbModelParam._m0[13u].z, fma(_1180, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1176)) + cbModelParam._m0[13u].w;
        float _1980 = fma(_1184, cbModelParam._m0[14u].z, fma(_1180, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1176)) + cbModelParam._m0[14u].w;
        float _1984 = fma(_1184, cbModelParam._m0[15u].z, fma(_1180, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1176)) + cbModelParam._m0[15u].w;
        float _1987 = fma(_1124, cbModelParam._m0[13u].z, fma(_1123, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1122));
        float _1990 = fma(_1124, cbModelParam._m0[14u].z, fma(_1123, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1122));
        float _1993 = fma(_1124, cbModelParam._m0[15u].z, fma(_1123, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1122));
        float _2021;
        if (_1987 > 0.0)
        {
            _2021 = abs((1.0 - _1976) / _1987);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1987 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1976 + 1.0) / _1987);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2021 = frontier_phi_14_12_ladder;
        }
        float _2244;
        if (_1990 > 0.0)
        {
            _2244 = abs((1.0 - _1980) / _1990);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1990 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1980 + 1.0) / _1990);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2244 = frontier_phi_23_19_ladder;
        }
        float _2501;
        if (_1993 > 0.0)
        {
            _2501 = abs((1.0 - _1984) / _1993);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1993 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1984 + 1.0) / _1993);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2501 = frontier_phi_35_30_ladder;
        }
        float _2503 = isnan(_2244) ? _2021 : (isnan(_2021) ? _2244 : min(_2021, _2244));
        float _2504 = isnan(_2501) ? _2503 : (isnan(_2503) ? _2501 : min(_2503, _2501));
        float _2508 = (_2504 * _1987) + _1976;
        float _2509 = (_2504 * _1990) + _1980;
        float _2510 = (_2504 * _1993) + _1984;
        float _2511 = _2504 * 9.9999997473787516355514526367188e-05;
        float _2513 = (-1.0) - _2511;
        float _2515 = _2511 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2510 > _2515) || ((_2510 < _2513) || ((_2509 > _2515) || ((_2509 < _2513) || ((_2508 < _2513) || (_2508 > _2515))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2638 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2510, cbModelParam._m0[9u].z, fma(_2509, cbModelParam._m0[9u].y, _2508 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2510, cbModelParam._m0[10u].z, fma(_2509, cbModelParam._m0[10u].y, _2508 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2510, cbModelParam._m0[11u].z, fma(_2509, cbModelParam._m0[11u].y, _2508 * cbModelParam._m0[11u].x))), _1929);
            frontier_phi_13_35_ladder = _2638.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2638.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2638.x * cbModelParam._m0[1u].y;
        }
        _2009 = frontier_phi_13_35_ladder_2;
        _2011 = frontier_phi_13_35_ladder_1;
        _2013 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1997 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1122, _1123, _1124), _1929);
        _2009 = _1997.x * cbModelParam._m0[1u].y;
        _2011 = _1997.y * cbModelParam._m0[1u].y;
        _2013 = _1997.z * cbModelParam._m0[1u].y;
    }
    float _2017 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _951);
    float _2018 = isnan(_2017) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2017 : min(cbModelParam._m0[25u].w, _2017));
    float _2107;
    float _2109;
    float _2111;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2071 = fma(_1184, cbModelParam._m0[21u].z, fma(_1180, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1176)) + cbModelParam._m0[21u].w;
        float _2075 = fma(_1184, cbModelParam._m0[22u].z, fma(_1180, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1176)) + cbModelParam._m0[22u].w;
        float _2079 = fma(_1184, cbModelParam._m0[23u].z, fma(_1180, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1176)) + cbModelParam._m0[23u].w;
        float _2082 = fma(_1124, cbModelParam._m0[21u].z, fma(_1123, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1122));
        float _2085 = fma(_1124, cbModelParam._m0[22u].z, fma(_1123, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1122));
        float _2088 = fma(_1124, cbModelParam._m0[23u].z, fma(_1123, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1122));
        float _2249;
        if (_2082 > 0.0)
        {
            _2249 = abs((1.0 - _2071) / _2082);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2082 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2071 + 1.0) / _2082);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2249 = frontier_phi_25_21_ladder;
        }
        float _2528;
        if (_2085 > 0.0)
        {
            _2528 = abs((1.0 - _2075) / _2085);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2085 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2075 + 1.0) / _2085);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2528 = frontier_phi_37_32_ladder;
        }
        float _2741;
        if (_2088 > 0.0)
        {
            _2741 = abs((1.0 - _2079) / _2088);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2088 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2079 + 1.0) / _2088);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2741 = frontier_phi_46_43_ladder;
        }
        float _2743 = isnan(_2528) ? _2249 : (isnan(_2249) ? _2528 : min(_2249, _2528));
        float _2744 = isnan(_2741) ? _2743 : (isnan(_2743) ? _2741 : min(_2743, _2741));
        float _2748 = (_2744 * _2082) + _2071;
        float _2749 = (_2744 * _2085) + _2075;
        float _2750 = (_2744 * _2088) + _2079;
        float _2751 = _2744 * 9.9999997473787516355514526367188e-05;
        float _2752 = (-1.0) - _2751;
        float _2754 = _2751 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2750 > _2754) || ((_2750 < _2752) || ((_2749 > _2754) || ((_2749 < _2752) || ((_2748 < _2752) || (_2748 > _2754))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2951 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2750, cbModelParam._m0[17u].z, fma(_2749, cbModelParam._m0[17u].y, _2748 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2750, cbModelParam._m0[18u].z, fma(_2749, cbModelParam._m0[18u].y, _2748 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2750, cbModelParam._m0[19u].z, fma(_2749, cbModelParam._m0[19u].y, _2748 * cbModelParam._m0[19u].x))), _2018);
            frontier_phi_22_46_ladder = _2951.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2951.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2951.x * cbModelParam._m0[1u].z;
        }
        _2107 = frontier_phi_22_46_ladder_2;
        _2109 = frontier_phi_22_46_ladder_1;
        _2111 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2091 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1122, _1123, _1124), _2018);
        _2107 = _2091.x * cbModelParam._m0[1u].z;
        _2109 = _2091.y * cbModelParam._m0[1u].z;
        _2111 = _2091.z * cbModelParam._m0[1u].z;
    }
    float _2124 = (((_1147 * _1099) + _1148) * _1114) * ((cbModelParam._m0[1u].w * (_2107 - _2009)) + _2009);
    float _2126 = (((_1147 * _1101) + _1148) * _1114) * ((cbModelParam._m0[1u].w * (_2109 - _2011)) + _2011);
    float _2128 = (((_1147 * _1102) + _1148) * _1114) * ((cbModelParam._m0[1u].w * (_2111 - _2013)) + _2013);
    float _2131 = fma(_2128, cbSceneParam._m0[89u].z, fma(_2126, cbSceneParam._m0[89u].y, _2124 * cbSceneParam._m0[89u].x));
    float _2134 = fma(_2128, cbSceneParam._m0[90u].z, fma(_2126, cbSceneParam._m0[90u].y, _2124 * cbSceneParam._m0[90u].x));
    float _2137 = fma(_2128, cbSceneParam._m0[91u].z, fma(_2126, cbSceneParam._m0[91u].y, _2124 * cbSceneParam._m0[91u].x));
    vec4 _2145 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1036, _1037));
    float _2147 = _2145.w;
    float _2159 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2147);
    float _2160 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2147);
    float _2161 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2147);
    uvec4 _2165 = floatBitsToUint(cbInstanceData._m0[_1074 + 5u]);
    uint _2167 = _2165.x * 14u;
    uint _2168 = _2167 + 13u;
    float _2175 = _1114 + (-1.0);
    float _2180 = (cbLight._m0[_2168].x * _2175) + 1.0;
    float _2181 = (cbLight._m0[_2168].y * _2175) + 1.0;
    float _2182 = (cbLight._m0[_2168].z * _2175) + 1.0;
    float _2183 = (cbLight._m0[_2168].w * _2175) + 1.0;
    uint _2184 = _2167 + 5u;
    float _2190 = isnan(1.0) ? _2181 : (isnan(_2181) ? 1.0 : min(_2181, 1.0));
    uint _2194 = _2167 + 4u;
    float _2203 = isnan(1.0) ? _2180 : (isnan(_2180) ? 1.0 : min(_2180, 1.0));
    uint _2207 = _2167 | 1u;
    float _2218 = dot(vec3(cbLight._m0[_2167].xyz), vec3(_947, _948, _949));
    float _2221 = dot(vec3(cbLight._m0[_2207].xyz), vec3(_947, _948, _949));
    float _4417 = isnan(0.0) ? _2218 : (isnan(_2218) ? 0.0 : max(_2218, 0.0));
    float _4428 = isnan(0.0) ? _2221 : (isnan(_2221) ? 0.0 : max(_2221, 0.0));
    float _2226 = (isnan(1.0) ? _4417 : (isnan(_4417) ? 1.0 : min(_4417, 1.0))) * 0.3183098733425140380859375;
    float _2228 = (isnan(1.0) ? _4428 : (isnan(_4428) ? 1.0 : min(_4428, 1.0))) * 0.3183098733425140380859375;
    float _2235 = ((cbLight._m0[_2184].x * _2190) * _2228) + (((cbLight._m0[_2194].x * _2159) * _2203) * _2226);
    float _2236 = ((_2190 * cbLight._m0[_2184].y) * _2228) + (((cbLight._m0[_2194].y * _2160) * _2203) * _2226);
    float _2237 = ((_2190 * cbLight._m0[_2184].z) * _2228) + (((cbLight._m0[_2194].z * _2161) * _2203) * _2226);
    uvec4 _2241 = floatBitsToUint(cbLight._m0[_2167 + 12u]);
    bool _2243 = _2241.x == 0u;
    float _2254;
    float _2256;
    float _2258;
    if (_2243)
    {
        _2254 = _2235;
        _2256 = _2236;
        _2258 = _2237;
    }
    else
    {
        uint _2262 = _2167 + 6u;
        float _2278 = (dot(vec3(cbLight._m0[_2167 + 2u].xyz), vec3(_947, _948, _949)) * 0.5) + 0.5;
        float _2279 = _2278 * _2278;
        float _4439 = isnan(0.0) ? _2279 : (isnan(_2279) ? 0.0 : max(_2279, 0.0));
        float _2280 = isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0));
        float _2281 = isnan(1.0) ? _2182 : (isnan(_2182) ? 1.0 : min(_2182, 1.0));
        _2254 = (((cbLight._m0[_2262].x * 0.3183098733425140380859375) * _2280) * _2281) + _2235;
        _2256 = (((cbLight._m0[_2262].y * 0.3183098733425140380859375) * _2280) * _2281) + _2236;
        _2258 = (((cbLight._m0[_2262].z * 0.3183098733425140380859375) * _2280) * _2281) + _2237;
    }
    bool _2261 = _2241.y == 0u;
    float _2299;
    float _2301;
    float _2303;
    if (_2261)
    {
        _2299 = _2254;
        _2301 = _2256;
        _2303 = _2258;
    }
    else
    {
        uint _2472 = _2167 + 7u;
        float _2488 = (dot(vec3(cbLight._m0[_2167 + 3u].xyz), vec3(_947, _948, _949)) * 0.5) + 0.5;
        float _2489 = _2488 * _2488;
        float _4455 = isnan(0.0) ? _2489 : (isnan(_2489) ? 0.0 : max(_2489, 0.0));
        float _2490 = isnan(1.0) ? _4455 : (isnan(_4455) ? 1.0 : min(_4455, 1.0));
        float _2491 = isnan(1.0) ? _2183 : (isnan(_2183) ? 1.0 : min(_2183, 1.0));
        _2299 = (((cbLight._m0[_2472].x * 0.3183098733425140380859375) * _2490) * _2491) + _2254;
        _2301 = (((cbLight._m0[_2472].y * 0.3183098733425140380859375) * _2490) * _2491) + _2256;
        _2303 = (((cbLight._m0[_2472].z * 0.3183098733425140380859375) * _2490) * _2491) + _2258;
    }
    uint _2306 = _2167 + 8u;
    float _2319 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2167].w)) * _951) * 0.949999988079071044921875);
    float _2320 = _2319 * _2319;
    float _2321 = cbLight._m0[_2167].x + _1028;
    float _2322 = cbLight._m0[_2167].y + _1029;
    float _2323 = cbLight._m0[_2167].z + _1030;
    float _2327 = inversesqrt(dot(vec3(_2321, _2322, _2323), vec3(_2321, _2322, _2323)));
    float _2328 = _2327 * _2321;
    float _2329 = _2327 * _2322;
    float _2330 = _2327 * _2323;
    float _2331 = dot(vec3(_947, _948, _949), vec3(cbLight._m0[_2167].xyz));
    float _4471 = isnan(0.0) ? _2331 : (isnan(_2331) ? 0.0 : max(_2331, 0.0));
    float _2334 = isnan(1.0) ? _4471 : (isnan(_4471) ? 1.0 : min(_4471, 1.0));
    float _4482 = isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0));
    float _2335 = isnan(1.0) ? _4482 : (isnan(_4482) ? 1.0 : min(_4482, 1.0));
    float _2336 = dot(vec3(_947, _948, _949), vec3(_2328, _2329, _2330));
    float _4493 = isnan(0.0) ? _2336 : (isnan(_2336) ? 0.0 : max(_2336, 0.0));
    float _2339 = isnan(1.0) ? _4493 : (isnan(_4493) ? 1.0 : min(_4493, 1.0));
    float _2340 = dot(vec3(cbLight._m0[_2167].xyz), vec3(_2328, _2329, _2330));
    float _4504 = isnan(0.0) ? _2340 : (isnan(_2340) ? 0.0 : max(_2340, 0.0));
    float _2344 = _2320 * _2320;
    float _2348 = ((_2339 * _2339) * (_2344 + (-1.0))) + 1.0;
    float _2356 = exp2(log2(1.0 - (isnan(1.0) ? _4504 : (isnan(_4504) ? 1.0 : min(_4504, 1.0)))) * 5.0);
    float _2357 = 0.959999978542327880859375 - _1096;
    float _2359 = 0.959999978542327880859375 - _1097;
    float _2360 = 0.959999978542327880859375 - _1098;
    float _2367 = 1.0 - _2320;
    float _2378 = (0.5 / (((_2335 * ((_2334 * _2367) + _2320)) + 9.9999999392252902907785028219223e-09) + (((_2335 * _2367) + _2320) * _2334))) * _2334;
    float _4515 = isnan(0.0) ? _2378 : (isnan(_2378) ? 0.0 : max(_2378, 0.0));
    float _2380 = (isnan(1.0) ? _4515 : (isnan(_4515) ? 1.0 : min(_4515, 1.0))) * (_2344 / ((_2348 * _2348) * 3.141590118408203125));
    uint _2394 = _2167 + 9u;
    float _2405 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2207].w)) * _951) * 0.949999988079071044921875);
    float _2406 = _2405 * _2405;
    float _2407 = cbLight._m0[_2207].x + _1028;
    float _2408 = cbLight._m0[_2207].y + _1029;
    float _2409 = cbLight._m0[_2207].z + _1030;
    float _2413 = inversesqrt(dot(vec3(_2407, _2408, _2409), vec3(_2407, _2408, _2409)));
    float _2414 = _2413 * _2407;
    float _2415 = _2413 * _2408;
    float _2416 = _2413 * _2409;
    float _2417 = dot(vec3(_947, _948, _949), vec3(cbLight._m0[_2207].xyz));
    float _4526 = isnan(0.0) ? _2417 : (isnan(_2417) ? 0.0 : max(_2417, 0.0));
    float _2420 = isnan(1.0) ? _4526 : (isnan(_4526) ? 1.0 : min(_4526, 1.0));
    float _2421 = dot(vec3(_947, _948, _949), vec3(_2414, _2415, _2416));
    float _4537 = isnan(0.0) ? _2421 : (isnan(_2421) ? 0.0 : max(_2421, 0.0));
    float _2424 = isnan(1.0) ? _4537 : (isnan(_4537) ? 1.0 : min(_4537, 1.0));
    float _2425 = dot(vec3(cbLight._m0[_2207].xyz), vec3(_2414, _2415, _2416));
    float _4548 = isnan(0.0) ? _2425 : (isnan(_2425) ? 0.0 : max(_2425, 0.0));
    float _2429 = _2406 * _2406;
    float _2433 = ((_2424 * _2424) * (_2429 + (-1.0))) + 1.0;
    float _2440 = exp2(log2(1.0 - (isnan(1.0) ? _4548 : (isnan(_4548) ? 1.0 : min(_4548, 1.0)))) * 5.0);
    float _2447 = 1.0 - _2406;
    float _2457 = (0.5 / (((_2335 * ((_2420 * _2447) + _2406)) + 9.9999999392252902907785028219223e-09) + (((_2335 * _2447) + _2406) * _2420))) * _2420;
    float _4559 = isnan(0.0) ? _2457 : (isnan(_2457) ? 0.0 : max(_2457, 0.0));
    float _2459 = (isnan(1.0) ? _4559 : (isnan(_4559) ? 1.0 : min(_4559, 1.0))) * (_2429 / ((_2433 * _2433) * 3.141590118408203125));
    float _2469 = (((((_2440 * _2357) + _1099) * cbLight._m0[_2394].x) * _2459) * _2190) + ((((cbLight._m0[_2306].x * _2159) * ((_2356 * _2357) + _1099)) * _2380) * _2203);
    float _2470 = (((((_2440 * _2359) + _1101) * cbLight._m0[_2394].y) * _2459) * _2190) + ((((cbLight._m0[_2306].y * _2160) * ((_2356 * _2359) + _1101)) * _2380) * _2203);
    float _2471 = (((((_2440 * _2360) + _1102) * cbLight._m0[_2394].z) * _2459) * _2190) + ((((cbLight._m0[_2306].z * _2161) * ((_2356 * _2360) + _1102)) * _2380) * _2203);
    float _2533;
    float _2535;
    float _2537;
    if (_2243)
    {
        _2533 = _2469;
        _2535 = _2470;
        _2537 = _2471;
    }
    else
    {
        uint _2539 = _2167 + 2u;
        uint _2543 = _2167 + 10u;
        float _2557 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2539].w)) * _951) * 0.949999988079071044921875);
        float _2558 = _2557 * _2557;
        float _2559 = cbLight._m0[_2539].x + _1028;
        float _2560 = cbLight._m0[_2539].y + _1029;
        float _2561 = cbLight._m0[_2539].z + _1030;
        float _2565 = inversesqrt(dot(vec3(_2559, _2560, _2561), vec3(_2559, _2560, _2561)));
        float _2566 = _2565 * _2559;
        float _2567 = _2565 * _2560;
        float _2568 = _2565 * _2561;
        float _2569 = dot(vec3(_947, _948, _949), vec3(cbLight._m0[_2539].xyz));
        float _4570 = isnan(0.0) ? _2569 : (isnan(_2569) ? 0.0 : max(_2569, 0.0));
        float _2572 = isnan(1.0) ? _4570 : (isnan(_4570) ? 1.0 : min(_4570, 1.0));
        float _2573 = dot(vec3(_947, _948, _949), vec3(_2566, _2567, _2568));
        float _4581 = isnan(0.0) ? _2573 : (isnan(_2573) ? 0.0 : max(_2573, 0.0));
        float _2576 = isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0));
        float _2577 = dot(vec3(cbLight._m0[_2539].xyz), vec3(_2566, _2567, _2568));
        float _4592 = isnan(0.0) ? _2577 : (isnan(_2577) ? 0.0 : max(_2577, 0.0));
        float _2581 = _2558 * _2558;
        float _2585 = ((_2576 * _2576) * (_2581 + (-1.0))) + 1.0;
        float _2592 = exp2(log2(1.0 - (isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0)))) * 5.0);
        float _2599 = 1.0 - _2558;
        float _2609 = (0.5 / (((_2335 * ((_2572 * _2599) + _2558)) + 9.9999999392252902907785028219223e-09) + (((_2335 * _2599) + _2558) * _2572))) * _2572;
        float _4603 = isnan(0.0) ? _2609 : (isnan(_2609) ? 0.0 : max(_2609, 0.0));
        float _2611 = (isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0))) * (_2581 / ((_2585 * _2585) * 3.141590118408203125));
        float _2612 = isnan(1.0) ? _2182 : (isnan(_2182) ? 1.0 : min(_2182, 1.0));
        _2533 = (((((_2592 * _2357) + _1099) * cbLight._m0[_2543].x) * _2611) * _2612) + _2469;
        _2535 = (((((_2592 * _2359) + _1101) * cbLight._m0[_2543].y) * _2611) * _2612) + _2470;
        _2537 = (((((_2592 * _2360) + _1102) * cbLight._m0[_2543].z) * _2611) * _2612) + _2471;
    }
    float _2647;
    float _2649;
    float _2651;
    if (_2261)
    {
        _2647 = _2533;
        _2649 = _2535;
        _2651 = _2537;
    }
    else
    {
        uint _2658 = _2167 + 3u;
        uint _2662 = _2167 + 11u;
        float _2676 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2658].w)) * _951) * 0.949999988079071044921875);
        float _2677 = _2676 * _2676;
        float _2678 = cbLight._m0[_2658].x + _1028;
        float _2679 = cbLight._m0[_2658].y + _1029;
        float _2680 = cbLight._m0[_2658].z + _1030;
        float _2684 = inversesqrt(dot(vec3(_2678, _2679, _2680), vec3(_2678, _2679, _2680)));
        float _2685 = _2684 * _2678;
        float _2686 = _2684 * _2679;
        float _2687 = _2684 * _2680;
        float _2688 = dot(vec3(_947, _948, _949), vec3(cbLight._m0[_2658].xyz));
        float _4619 = isnan(0.0) ? _2688 : (isnan(_2688) ? 0.0 : max(_2688, 0.0));
        float _2691 = isnan(1.0) ? _4619 : (isnan(_4619) ? 1.0 : min(_4619, 1.0));
        float _2692 = dot(vec3(_947, _948, _949), vec3(_2685, _2686, _2687));
        float _4630 = isnan(0.0) ? _2692 : (isnan(_2692) ? 0.0 : max(_2692, 0.0));
        float _2695 = isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0));
        float _2696 = dot(vec3(cbLight._m0[_2658].xyz), vec3(_2685, _2686, _2687));
        float _4641 = isnan(0.0) ? _2696 : (isnan(_2696) ? 0.0 : max(_2696, 0.0));
        float _2700 = _2677 * _2677;
        float _2704 = ((_2695 * _2695) * (_2700 + (-1.0))) + 1.0;
        float _2711 = exp2(log2(1.0 - (isnan(1.0) ? _4641 : (isnan(_4641) ? 1.0 : min(_4641, 1.0)))) * 5.0);
        float _2718 = 1.0 - _2677;
        float _2728 = (0.5 / (((_2335 * ((_2691 * _2718) + _2677)) + 9.9999999392252902907785028219223e-09) + (((_2335 * _2718) + _2677) * _2691))) * _2691;
        float _4652 = isnan(0.0) ? _2728 : (isnan(_2728) ? 0.0 : max(_2728, 0.0));
        float _2730 = (isnan(1.0) ? _4652 : (isnan(_4652) ? 1.0 : min(_4652, 1.0))) * (_2700 / ((_2704 * _2704) * 3.141590118408203125));
        float _2731 = isnan(1.0) ? _2183 : (isnan(_2183) ? 1.0 : min(_2183, 1.0));
        _2647 = (((((_2711 * _2357) + _1099) * cbLight._m0[_2662].x) * _2730) * _2731) + _2533;
        _2649 = (((((_2711 * _2359) + _1101) * cbLight._m0[_2662].y) * _2730) * _2731) + _2535;
        _2651 = (((((_2711 * _2360) + _1102) * cbLight._m0[_2662].z) * _2730) * _2731) + _2537;
    }
    float _2866;
    float _2868;
    float _2870;
    float _2872;
    float _2874;
    float _2876;
    if (_2165.y == 0u)
    {
        float _2806 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2807 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2806;
        float _2808 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2806;
        float _2809 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2806;
        uvec4 _2821 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2822 = _2821.x;
        uint _2833 = uint((float(_2821.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1037) / _2822))) + floor(float(uint(cbSceneParam._m0[85u].x * _1036) / _2822)));
        float _2843 = (log2(_2809 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2844 = isnan(0.0) ? _2843 : (isnan(_2843) ? 0.0 : max(_2843, 0.0));
        uint _2847 = uint(isnan(14.0) ? _2844 : (isnan(_2844) ? 14.0 : min(_2844, 14.0)));
        uvec4 _2852 = texelFetch(g_lightClusterGridBuffer, int(((_2847 << 2u) + (_2833 << 6u)) >> 2u));
        uint _2853 = _2852.x;
        uint _2854 = _2821.z;
        float _2956;
        float _2958;
        float _2960;
        float _2962;
        float _2964;
        float _2966;
        if (((((1u << ((_2854 >> 4u) & 15u)) + 4294967295u) & _2853) == 0u) || ((_2854 & 240u) == 0u))
        {
            _2956 = 0.0;
            _2958 = 0.0;
            _2960 = 0.0;
            _2962 = 0.0;
            _2964 = 0.0;
            _2966 = 0.0;
        }
        else
        {
            float _2957;
            float _2959;
            float _2961;
            float _2963;
            float _2965;
            float _2967;
            float _3101 = 0.0;
            float _3102 = 0.0;
            float _3103 = 0.0;
            float _3104 = 0.0;
            float _3105 = 0.0;
            float _3106 = 0.0;
            uint _3107 = 0u;
            uint _3116;
            bool _3117;
            for (;;)
            {
                _3116 = texelFetch(g_lightClassification, int((((_2847 << 5u) + (_2833 << 9u)) + (_3107 << 2u)) >> 2u)).x;
                _3117 = _3116 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3117)
                {
                    frontier_phi_61_pred = _3101;
                    frontier_phi_61_pred_1 = _3106;
                    frontier_phi_61_pred_2 = _3105;
                    frontier_phi_61_pred_3 = _3104;
                    frontier_phi_61_pred_4 = _3103;
                    frontier_phi_61_pred_5 = _3102;
                }
                else
                {
                    float _3225;
                    float _3226;
                    float _3227;
                    float _3228;
                    float _3229;
                    float _3230;
                    uint _3231;
                    _3225 = _3101;
                    _3226 = _3102;
                    _3227 = _3103;
                    _3228 = _3104;
                    _3229 = _3105;
                    _3230 = _3106;
                    _3231 = _3116;
                    float _3157;
                    float _3158;
                    float _3159;
                    float _3160;
                    float _3161;
                    float _3162;
                    for (;;)
                    {
                        uint _3235 = uint(findLSB(_3231)) + (_3107 << 5u);
                        uint _3232 = (_3231 + 4294967295u) & _3231;
                        uint _3237 = _3235 * 48u;
                        vec4 _3251 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3237)).x, texelFetch(g_PointLightRenderingBuffer, int(_3237 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3237 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3237 + 3u)).x));
                        uint _3257 = (_3235 * 48u) + 4u;
                        vec4 _3270 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3257)).x, texelFetch(g_PointLightRenderingBuffer, int(_3257 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3257 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3257 + 3u)).x));
                        uint _3276 = (_3235 * 48u) + 8u;
                        vec3 _3287 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3276)).x, texelFetch(g_PointLightRenderingBuffer, int(_3276 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3276 + 2u)).x));
                        float _3291 = _3251.x - _2807;
                        float _3292 = _3251.y - _2808;
                        float _3293 = _3251.z - _2809;
                        float _3294 = dot(vec3(_3291, _3292, _3293), vec3(_3291, _3292, _3293));
                        float _3297 = inversesqrt(_3294);
                        float _3298 = _3297 * _3291;
                        float _3299 = _3297 * _3292;
                        float _3300 = _3297 * _3293;
                        float _3301 = dot(vec3(_1055, _1058, _1061), vec3(_3298, _3299, _3300));
                        float _3306 = 1.0 - (_3294 * _3251.w);
                        float _4678 = isnan(0.0) ? _3306 : (isnan(_3306) ? 0.0 : max(_3306, 0.0));
                        float _3307 = isnan(1.0) ? _4678 : (isnan(_4678) ? 1.0 : min(_4678, 1.0));
                        float _3308 = sqrt(_3294) * _3270.w;
                        float _3311 = 1.39999997615814208984375 / (_3308 + 1.39999997615814208984375);
                        float _3312 = _3311 * _3311;
                        float _3315 = ((1.0 - _3312) * _3301) + _3312;
                        float _3318 = _3308 * _3308;
                        float _3322 = ((isnan(0.0) ? _3315 : (isnan(_3315) ? 0.0 : max(_3315, 0.0))) * _3307) / ((_3318 * 0.699999988079071044921875) + 1.0);
                        float _3326 = (-0.0) - _2807;
                        float _3327 = (-0.0) - _2808;
                        float _3328 = (-0.0) - _2809;
                        float _3332 = inversesqrt(dot(vec3(_3326, _3327, _3328), vec3(_3326, _3327, _3328)));
                        float _3333 = _3332 * _3326;
                        float _3334 = _3332 * _3327;
                        float _3335 = _3332 * _3328;
                        float _3343 = exp2(log2(1.0 / ((_3318 * 3.5) + 5.0)) * 0.25);
                        float _3344 = 1.0 - _1130;
                        float _3351 = sqrt(1.0 - ((1.0 - (_3344 * _3344)) * (1.0 - (_3343 * _3343))));
                        float _3352 = _3351 * _3351;
                        float _3353 = _3352 * _3352;
                        float _3354 = _3333 + _3298;
                        float _3355 = _3334 + _3299;
                        float _3356 = _3335 + _3300;
                        float _3360 = inversesqrt(dot(vec3(_3354, _3355, _3356), vec3(_3354, _3355, _3356)));
                        float _3364 = dot(vec3(_1055, _1058, _1061), vec3(_3333, _3334, _3335));
                        float _4694 = isnan(0.0) ? _3364 : (isnan(_3364) ? 0.0 : max(_3364, 0.0));
                        float _3367 = isnan(1.0) ? _4694 : (isnan(_4694) ? 1.0 : min(_4694, 1.0));
                        float _3368 = dot(vec3(_1055, _1058, _1061), vec3(_3360 * _3354, _3360 * _3355, _3360 * _3356));
                        float _4705 = isnan(0.0) ? _3368 : (isnan(_3368) ? 0.0 : max(_3368, 0.0));
                        float _3371 = isnan(1.0) ? _4705 : (isnan(_4705) ? 1.0 : min(_4705, 1.0));
                        float _3375 = ((_3371 * _3371) * (_3353 + (-1.0))) + 1.0;
                        float _3376 = _3311 * _3352;
                        float _3377 = _3376 * _3376;
                        float _3380 = ((1.0 - _3377) * _3301) + _3377;
                        float _4716 = isnan(0.0) ? _3380 : (isnan(_3380) ? 0.0 : max(_3380, 0.0));
                        float _3381 = isnan(1.0) ? _4716 : (isnan(_4716) ? 1.0 : min(_4716, 1.0));
                        float _3382 = 1.0 - _3352;
                        float _3392 = (0.5 / (((_3381 * ((_3367 * _3382) + _3352)) + 9.9999999392252902907785028219223e-09) + (((_3381 * _3382) + _3352) * _3367))) * _3381;
                        float _4727 = isnan(0.0) ? _3392 : (isnan(_3392) ? 0.0 : max(_3392, 0.0));
                        float _3403 = (((_3353 * 3.1415927410125732421875) * (isnan(1.0) ? _4727 : (isnan(_4727) ? 1.0 : min(_4727, 1.0)))) / ((_3375 * _3375) * ((_3318 * 2.1991131305694580078125) + 3.141590118408203125))) * _3307;
                        _3160 = (_3322 * _3270.x) + _3228;
                        _3161 = (_3322 * _3270.y) + _3229;
                        _3162 = (_3322 * _3270.z) + _3230;
                        _3157 = (_3403 * _3287.x) + _3225;
                        _3158 = (_3403 * _3287.y) + _3226;
                        _3159 = (_3403 * _3287.z) + _3227;
                        if (_3232 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3225 = _3157;
                            _3226 = _3158;
                            _3227 = _3159;
                            _3228 = _3160;
                            _3229 = _3161;
                            _3230 = _3162;
                            _3231 = _3232;
                        }
                    }
                    frontier_phi_61_pred = _3157;
                    frontier_phi_61_pred_1 = _3162;
                    frontier_phi_61_pred_2 = _3161;
                    frontier_phi_61_pred_3 = _3160;
                    frontier_phi_61_pred_4 = _3159;
                    frontier_phi_61_pred_5 = _3158;
                }
                _2957 = frontier_phi_61_pred;
                _2967 = frontier_phi_61_pred_1;
                _2965 = frontier_phi_61_pred_2;
                _2963 = frontier_phi_61_pred_3;
                _2961 = frontier_phi_61_pred_4;
                _2959 = frontier_phi_61_pred_5;
                uint _3108 = _3107 + 1u;
                if (_3108 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3101 = _2957;
                    _3102 = _2959;
                    _3103 = _2961;
                    _3104 = _2963;
                    _3105 = _2965;
                    _3106 = _2967;
                    _3107 = _3108;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2956 = _2957;
            _2958 = _2959;
            _2960 = _2961;
            _2962 = _2963;
            _2964 = _2965;
            _2966 = _2967;
        }
        uvec4 _2970 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2971 = _2970.z;
        uint _2973 = (_2971 >> 8u) & 15u;
        float _3069;
        float _3071;
        float _3073;
        float _3075;
        float _3077;
        float _3079;
        if (((4294967295u << _2973) & _2853) == 0u)
        {
            _3069 = _2956;
            _3071 = _2958;
            _3073 = _2960;
            _3075 = _2962;
            _3077 = _2964;
            _3079 = _2966;
        }
        else
        {
            float _3094 = inversesqrt(dot(vec3(_2807, _2808, _2809), vec3(_2807, _2808, _2809)));
            float _3095 = _3094 * _2807;
            float _3096 = _3094 * _2808;
            float _3097 = _3094 * _2809;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2973 < ((_2971 >> 12u) & 15u))
            {
                float _3070;
                float _3072;
                float _3074;
                float _3076;
                float _3078;
                float _3080;
                float _3208 = _2956;
                float _3209 = _2958;
                float _3210 = _2960;
                float _3211 = _2962;
                float _3212 = _2964;
                float _3213 = _2966;
                uint _3214 = _2973;
                uint _3223;
                bool _3224;
                for (;;)
                {
                    _3223 = texelFetch(g_lightClassification, int((((_2847 << 5u) + (_2833 << 9u)) + (_3214 << 2u)) >> 2u)).x;
                    _3224 = _3223 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3224)
                    {
                        frontier_phi_67_pred = _3211;
                        frontier_phi_67_pred_1 = _3212;
                        frontier_phi_67_pred_2 = _3213;
                        frontier_phi_67_pred_3 = _3210;
                        frontier_phi_67_pred_4 = _3209;
                        frontier_phi_67_pred_5 = _3208;
                    }
                    else
                    {
                        float _3408;
                        float _3409;
                        float _3410;
                        float _3411;
                        float _3412;
                        float _3413;
                        float _3701;
                        float _3702;
                        float _3703;
                        float _3704;
                        float _3705;
                        float _3706;
                        float _3421 = _3208;
                        float _3422 = _3209;
                        float _3423 = _3210;
                        float _3424 = _3211;
                        float _3425 = _3212;
                        float _3426 = _3213;
                        uint _3427 = _3223;
                        uint _3428;
                        vec4 _3453;
                        float _3454;
                        vec4 _3469;
                        vec3 _3481;
                        vec4 _3496;
                        vec4 _3511;
                        float _3557;
                        bool _3558;
                        for (;;)
                        {
                            uint _3438 = ((_3214 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3427));
                            _3428 = (_3427 + 4294967295u) & _3427;
                            uint _3440 = _3438 * 40u;
                            _3453 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3440)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3440 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3440 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3440 + 3u)).x));
                            _3454 = _3453.w;
                            uint _3456 = (_3438 * 40u) + 4u;
                            _3469 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3456)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3456 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3456 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3456 + 3u)).x));
                            uint _3471 = (_3438 * 40u) + 8u;
                            _3481 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3471)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3471 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3471 + 2u)).x));
                            uint _3483 = (_3438 * 40u) + 16u;
                            _3496 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3483)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3483 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3483 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3483 + 3u)).x));
                            uint _3498 = (_3438 * 40u) + 20u;
                            _3511 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3498)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3498 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3498 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3498 + 3u)).x));
                            uint _3513 = (_3438 * 40u) + 24u;
                            vec4 _3526 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3513)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3513 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3513 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3513 + 3u)).x));
                            uint _3532 = (_3438 * 40u) + 28u;
                            vec4 _3545 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3532)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3532 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3532 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3532 + 3u)).x));
                            _3557 = fma(_2809, _3545.z, fma(_2808, _3545.y, _3545.x * _2807)) + _3545.w;
                            _3558 = !((fma(_2809, _3526.z, fma(_2808, _3526.y, _3526.x * _2807)) + _3526.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3558)
                            {
                                float _3585 = _3453.x - _2807;
                                float _3586 = _3453.y - _2808;
                                float _3587 = _3453.z - _2809;
                                float _3588 = dot(vec3(_3585, _3586, _3587), vec3(_3585, _3586, _3587));
                                float _3591 = inversesqrt(_3588);
                                float _3592 = _3591 * _3585;
                                float _3593 = _3591 * _3586;
                                float _3594 = _3591 * _3587;
                                float _3598 = 1.0 - (_3588 / (_3454 * _3454));
                                float _4738 = isnan(0.0) ? _3598 : (isnan(_3598) ? 0.0 : max(_3598, 0.0));
                                float _3599 = isnan(1.0) ? _4738 : (isnan(_4738) ? 1.0 : min(_4738, 1.0));
                                float _3603 = sqrt(_3588) * _3469.w;
                                float _3605 = 1.39999997615814208984375 / (_3603 + 1.39999997615814208984375);
                                float _3606 = _3605 * _3605;
                                float _3609 = ((1.0 - _3606) * dot(vec3(_3592, _3593, _3594), vec3(_1055, _1058, _1061))) + _3606;
                                float _3612 = _3603 * _3603;
                                float _3616 = (fma(_2809, _3496.z, fma(_2808, _3496.y, _3496.x * _2807)) + _3496.w) / _3557;
                                float _3617 = (fma(_2809, _3511.z, fma(_2808, _3511.y, _3511.x * _2807)) + _3511.w) / _3557;
                                float _3621 = 1.0 - dot(vec2(_3616, _3617), vec2(_3616, _3617));
                                float _4754 = isnan(0.0) ? _3621 : (isnan(_3621) ? 0.0 : max(_3621, 0.0));
                                float _3622 = isnan(1.0) ? _4754 : (isnan(_4754) ? 1.0 : min(_4754, 1.0));
                                float _3623 = _3622 * (((isnan(0.0) ? _3609 : (isnan(_3609) ? 0.0 : max(_3609, 0.0))) * _3599) / ((_3612 * 0.699999988079071044921875) + 1.0));
                                float _3635 = exp2(log2(1.0 / ((_3612 * 3.5) + 5.0)) * 0.25);
                                float _3636 = 1.0 - _1130;
                                float _3643 = sqrt(1.0 - ((1.0 - (_3636 * _3636)) * (1.0 - (_3635 * _3635))));
                                float _3644 = _3643 * _3643;
                                float _3645 = _3644 * _3644;
                                float _3646 = _3592 - _3095;
                                float _3647 = _3593 - _3096;
                                float _3648 = _3594 - _3097;
                                float _3652 = inversesqrt(dot(vec3(_3646, _3647, _3648), vec3(_3646, _3647, _3648)));
                                float _3656 = dot(vec3(_1055, _1058, _1061), vec3((-0.0) - _3095, (-0.0) - _3096, (-0.0) - _3097));
                                float _4765 = isnan(0.0) ? _3656 : (isnan(_3656) ? 0.0 : max(_3656, 0.0));
                                float _3659 = isnan(1.0) ? _4765 : (isnan(_4765) ? 1.0 : min(_4765, 1.0));
                                float _3660 = dot(vec3(_1055, _1058, _1061), vec3(_3652 * _3646, _3652 * _3647, _3652 * _3648));
                                float _4776 = isnan(0.0) ? _3660 : (isnan(_3660) ? 0.0 : max(_3660, 0.0));
                                float _3663 = isnan(1.0) ? _4776 : (isnan(_4776) ? 1.0 : min(_4776, 1.0));
                                float _3667 = ((_3663 * _3663) * (_3645 + (-1.0))) + 1.0;
                                float _3668 = _3605 * _3644;
                                float _3669 = _3668 * _3668;
                                float _3675 = ((1.0 - _3669) * dot(vec3(_1055, _1058, _1061), vec3(_3592, _3593, _3594))) + _3669;
                                float _4787 = isnan(0.0) ? _3675 : (isnan(_3675) ? 0.0 : max(_3675, 0.0));
                                float _3676 = isnan(1.0) ? _4787 : (isnan(_4787) ? 1.0 : min(_4787, 1.0));
                                float _3677 = 1.0 - _3644;
                                float _3687 = (0.5 / (((_3676 * ((_3659 * _3677) + _3644)) + 9.9999999392252902907785028219223e-09) + (((_3676 * _3677) + _3644) * _3659))) * _3676;
                                float _4798 = isnan(0.0) ? _3687 : (isnan(_3687) ? 0.0 : max(_3687, 0.0));
                                float _3697 = (_3622 * _3599) * (((_3645 * 3.1415927410125732421875) * (isnan(1.0) ? _4798 : (isnan(_4798) ? 1.0 : min(_4798, 1.0)))) / ((_3667 * _3667) * ((_3612 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3697 * _3481.x;
                                frontier_phi_73_pred_1 = _3697 * _3481.y;
                                frontier_phi_73_pred_2 = _3623 * _3469.z;
                                frontier_phi_73_pred_3 = _3623 * _3469.y;
                                frontier_phi_73_pred_4 = _3623 * _3469.x;
                                frontier_phi_73_pred_5 = _3697 * _3481.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3701 = frontier_phi_73_pred;
                            _3702 = frontier_phi_73_pred_1;
                            _3706 = frontier_phi_73_pred_2;
                            _3705 = frontier_phi_73_pred_3;
                            _3704 = frontier_phi_73_pred_4;
                            _3703 = frontier_phi_73_pred_5;
                            _3411 = _3704 + _3424;
                            _3412 = _3705 + _3425;
                            _3413 = _3706 + _3426;
                            _3408 = _3701 + _3421;
                            _3409 = _3702 + _3422;
                            _3410 = _3703 + _3423;
                            if (_3428 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3421 = _3408;
                                _3422 = _3409;
                                _3423 = _3410;
                                _3424 = _3411;
                                _3425 = _3412;
                                _3426 = _3413;
                                _3427 = _3428;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3411;
                        frontier_phi_67_pred_1 = _3412;
                        frontier_phi_67_pred_2 = _3413;
                        frontier_phi_67_pred_3 = _3410;
                        frontier_phi_67_pred_4 = _3409;
                        frontier_phi_67_pred_5 = _3408;
                    }
                    _3076 = frontier_phi_67_pred;
                    _3078 = frontier_phi_67_pred_1;
                    _3080 = frontier_phi_67_pred_2;
                    _3074 = frontier_phi_67_pred_3;
                    _3072 = frontier_phi_67_pred_4;
                    _3070 = frontier_phi_67_pred_5;
                    uint _3215 = _3214 + 1u;
                    if (_3215 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3208 = _3070;
                        _3209 = _3072;
                        _3210 = _3074;
                        _3211 = _3076;
                        _3212 = _3078;
                        _3213 = _3080;
                        _3214 = _3215;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3078;
                frontier_phi_55_56_ladder_1 = _3080;
                frontier_phi_55_56_ladder_2 = _3076;
                frontier_phi_55_56_ladder_3 = _3074;
                frontier_phi_55_56_ladder_4 = _3072;
                frontier_phi_55_56_ladder_5 = _3070;
            }
            else
            {
                frontier_phi_55_56_ladder = _2964;
                frontier_phi_55_56_ladder_1 = _2966;
                frontier_phi_55_56_ladder_2 = _2962;
                frontier_phi_55_56_ladder_3 = _2960;
                frontier_phi_55_56_ladder_4 = _2958;
                frontier_phi_55_56_ladder_5 = _2956;
            }
            _3069 = frontier_phi_55_56_ladder_5;
            _3071 = frontier_phi_55_56_ladder_4;
            _3073 = frontier_phi_55_56_ladder_3;
            _3075 = frontier_phi_55_56_ladder_2;
            _3077 = frontier_phi_55_56_ladder;
            _3079 = frontier_phi_55_56_ladder_1;
        }
        float _3084 = isnan(1.0) ? _1114 : (isnan(_1114) ? 1.0 : min(_1114, 1.0));
        _2866 = (_3084 * _3075) + _2299;
        _2868 = (_3084 * _3077) + _2301;
        _2870 = (_3084 * _3079) + _2303;
        _2872 = ((_3069 * _1099) * _3084) + _2647;
        _2874 = ((_3071 * _1101) * _3084) + _2649;
        _2876 = ((_3073 * _1102) * _3084) + _2651;
    }
    else
    {
        _2866 = _2299;
        _2868 = _2301;
        _2870 = _2303;
        _2872 = _2647;
        _2874 = _2649;
        _2876 = _2651;
    }
    float _4814 = isnan(0.0) ? _1089 : (isnan(_1089) ? 0.0 : max(_1089, 0.0));
    float _4825 = isnan(0.0) ? _1090 : (isnan(_1090) ? 0.0 : max(_1090, 0.0));
    float _4836 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
    float _4847 = isnan(0.0) ? _950 : (isnan(_950) ? 0.0 : max(_950, 0.0));
    float _2901 = cbInstanceData._m0[_1074 + 6u].w * (isnan(1.0) ? _4847 : (isnan(_4847) ? 1.0 : min(_4847, 1.0)));
    float _2906 = _1036 / cbSceneParam._m0[86u].x;
    float _2907 = _1037 / cbSceneParam._m0[86u].y;
    vec4 _2921 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2906, _2907, (log2((isnan(cbSceneParam._m0[77u].w) ? _971 : (isnan(_971) ? cbSceneParam._m0[77u].w : min(_971, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2923 = _2921.x;
    float _2924 = _2921.y;
    float _2925 = _2921.z;
    float _2926 = _2921.w;
    float _3019;
    float _3021;
    float _3023;
    float _3025;
    if (_971 > cbSceneParam._m0[78u].w)
    {
        float _2981 = isnan(_971) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _971 : min(cbSceneParam._m0[80u].w, _971));
        float _2982 = _2981 / _971;
        float _2993 = _2982 * _1021;
        float _2994 = _1022 * _2982;
        float _2995 = (-0.0) - _2994;
        float _2997 = _2982 * _1023;
        float _2999 = (cbSceneParam._m0[77u].w * _2995) / _2981;
        float _3000 = _2999 + cbSceneParam._m0[79u].w;
        float _3001 = cbSceneParam._m0[79u].w - _2994;
        float _3007 = sqrt(((_2993 * _2993) + (_2994 * _2994)) + (_2997 * _2997));
        float _3010 = (1.0 - (cbSceneParam._m0[77u].w / _2981)) * _3007;
        float _3015 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3017 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3170;
        if (abs((_2995 - _2999) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3170 = ((((_3000 > 0.0) ? exp2(_3015 * _3000) : (2.0 - exp2(_3017 * _3000))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3010;
        }
        else
        {
            float _3130 = 1.0 / cbSceneParam._m0[80u].x;
            float _3131 = isnan(_3001) ? _3000 : (isnan(_3000) ? _3001 : max(_3000, _3001));
            float _3132 = isnan(_3001) ? _3000 : (isnan(_3000) ? _3001 : min(_3000, _3001));
            float _3141 = isnan(0.0) ? _3131 : (isnan(_3131) ? 0.0 : min(_3131, 0.0));
            float _3142 = isnan(0.0) ? _3132 : (isnan(_3132) ? 0.0 : min(_3132, 0.0));
            _3170 = ((abs(_3007 / _2995) * cbSceneParam._m0[80u].y) * ((((_3141 - _3142) * 2.0) - ((exp2(_3015 * (isnan(0.0) ? _3131 : (isnan(_3131) ? 0.0 : max(_3131, 0.0)))) - exp2(_3015 * (isnan(0.0) ? _3132 : (isnan(_3132) ? 0.0 : max(_3132, 0.0))))) * _3130)) - ((exp2(_3017 * _3141) - exp2(_3017 * _3142)) * _3130))) + (_3010 * cbSceneParam._m0[80u].z);
        }
        vec4 _3172 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2906, _2907, 1.0), 0.0);
        float _3181 = exp2((_3170 * (-1.44269502162933349609375)) * (1.0 - _3172.w));
        float _3182 = log2(_3181);
        float _3198 = log2(_2926);
        _3019 = (exp2(_3198 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3182 * cbSceneParam._m0[78u].x)) * _3172.x) / cbSceneParam._m0[78u].x)) + _2923;
        _3021 = (exp2(_3198 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3182 * cbSceneParam._m0[78u].y)) * _3172.y) / cbSceneParam._m0[78u].y)) + _2924;
        _3023 = (exp2(_3198 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3182 * cbSceneParam._m0[78u].z)) * _3172.z) / cbSceneParam._m0[78u].z)) + _2925;
        _3025 = _3181 * _2926;
    }
    else
    {
        _3019 = _2923;
        _3021 = _2924;
        _3023 = _2925;
        _3025 = _2926;
    }
    float _3037 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3038 = _3037 == 3.0;
    float _3039 = log2(_3025);
    float _3046 = exp2(_3039 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4814 : (isnan(_4814) ? 1.0 : min(_4814, 1.0))) * (_2866 + ((isnan(0.0) ? _1839 : (isnan(_1839) ? 0.0 : max(_1839, 0.0))) * _1114))) + ((_2872 + ((isnan(0.0) ? _2131 : (isnan(_2131) ? 0.0 : max(_2131, 0.0))) * _1918)) * cbPerFrame._m0[3u].x));
    float _3047 = exp2(_3039 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4825 : (isnan(_4825) ? 1.0 : min(_4825, 1.0))) * (_2868 + ((isnan(0.0) ? _1842 : (isnan(_1842) ? 0.0 : max(_1842, 0.0))) * _1114))) + ((_2874 + ((isnan(0.0) ? _2134 : (isnan(_2134) ? 0.0 : max(_2134, 0.0))) * _1918)) * cbPerFrame._m0[3u].x));
    float _3048 = exp2(_3039 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4836 : (isnan(_4836) ? 1.0 : min(_4836, 1.0))) * (_2870 + ((isnan(0.0) ? _1845 : (isnan(_1845) ? 0.0 : max(_1845, 0.0))) * _1114))) + ((_2876 + ((isnan(0.0) ? _2137 : (isnan(_2137) ? 0.0 : max(_2137, 0.0))) * _1918)) * cbPerFrame._m0[3u].x));
    float _3057 = (_3037 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3057 * (_3038 ? _3046 : (_3046 + (cbSceneParam._m0[72u].w * _3019)));
    SV_Target.y = _3057 * (_3038 ? _3047 : (_3047 + (cbSceneParam._m0[72u].w * _3021)));
    SV_Target.z = _3057 * (_3038 ? _3048 : (_3048 + (cbSceneParam._m0[72u].w * _3023)));
    SV_Target.w = _2901;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2901;
}


