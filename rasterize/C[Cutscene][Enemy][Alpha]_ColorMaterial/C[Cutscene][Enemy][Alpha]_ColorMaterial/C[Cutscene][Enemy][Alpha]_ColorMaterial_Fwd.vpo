#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_1;
layout(location = 7) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_3;
layout(location = 6) out vec4 TEXCOORD_5;
layout(location = 7) out float TEXCOORD_8;
layout(location = 7, component = 1) out float TEXCOORD_9;
layout(location = 7, component = 2) out float TEXCOORD_10;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_9 = 0.0;
    TEXCOORD_10 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _203 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _205 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _206 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _216 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _217 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _218 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _228 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _229 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _230 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _236 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _238 = texelFetch(g_InstanceIndexBuffer, int(_236));
    uint _239 = _238.x;
    uint _241 = _239 * 13u;
    uint _249 = (floatBitsToUint(cbInstanceData._m0[_241 + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _256 = _249 + 1u;
    uint _263 = _249 + 2u;
    precise float _270 = POSITION.x * cbObjMatrix._m0[_249].x;
    precise float _271 = POSITION.y * cbObjMatrix._m0[_249].y;
    precise float _272 = _271 + _270;
    precise float _273 = POSITION.z * cbObjMatrix._m0[_249].z;
    precise float _274 = _273 + _272;
    precise float _275 = 1.0 * cbObjMatrix._m0[_249].w;
    precise float _277 = _275 + _274;
    precise float _278 = POSITION.x * cbObjMatrix._m0[_256].x;
    precise float _279 = POSITION.y * cbObjMatrix._m0[_256].y;
    precise float _280 = _279 + _278;
    precise float _281 = POSITION.z * cbObjMatrix._m0[_256].z;
    precise float _282 = _281 + _280;
    precise float _283 = 1.0 * cbObjMatrix._m0[_256].w;
    precise float _284 = _283 + _282;
    precise float _285 = POSITION.x * cbObjMatrix._m0[_263].x;
    precise float _286 = POSITION.y * cbObjMatrix._m0[_263].y;
    precise float _287 = _286 + _285;
    precise float _288 = POSITION.z * cbObjMatrix._m0[_263].z;
    precise float _289 = _288 + _287;
    precise float _290 = 1.0 * cbObjMatrix._m0[_263].w;
    precise float _291 = _290 + _289;
    precise float _326 = _277 - cbSceneParam._m0[3u].x;
    precise float _327 = _284 - cbSceneParam._m0[3u].y;
    precise float _328 = _291 - cbSceneParam._m0[3u].z;
    precise float _356 = _326 * cbSceneParam._m0[24u].x;
    precise float _357 = _327 * cbSceneParam._m0[24u].y;
    precise float _358 = _357 + _356;
    precise float _359 = _328 * cbSceneParam._m0[24u].z;
    precise float _360 = _359 + _358;
    precise float _361 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _362 = _361 + _360;
    precise float _363 = _326 * cbSceneParam._m0[25u].x;
    precise float _364 = _327 * cbSceneParam._m0[25u].y;
    precise float _365 = _364 + _363;
    precise float _366 = _328 * cbSceneParam._m0[25u].z;
    precise float _367 = _366 + _365;
    precise float _368 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _369 = _368 + _367;
    precise float _370 = _326 * cbSceneParam._m0[26u].x;
    precise float _371 = _327 * cbSceneParam._m0[26u].y;
    precise float _372 = _371 + _370;
    precise float _373 = _328 * cbSceneParam._m0[26u].z;
    precise float _374 = _373 + _372;
    precise float _375 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _376 = _375 + _374;
    precise float _377 = _326 * cbSceneParam._m0[27u].x;
    precise float _378 = _327 * cbSceneParam._m0[27u].y;
    precise float _379 = _378 + _377;
    precise float _380 = _328 * cbSceneParam._m0[27u].z;
    precise float _381 = _380 + _379;
    precise float _382 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _383 = _382 + _381;
    gl_Position.x = _362;
    gl_Position.y = _369;
    gl_Position.z = _376;
    gl_Position.w = _383;
    POSITION_1.x = _362;
    POSITION_1.y = _369;
    POSITION_1.z = _376;
    POSITION_1.w = _383;
    NORMAL_1.x = fma(_206, cbObjMatrix._m0[_249].z, fma(_205, cbObjMatrix._m0[_249].y, cbObjMatrix._m0[_249].x * _203));
    NORMAL_1.y = fma(_206, cbObjMatrix._m0[_256].z, fma(_205, cbObjMatrix._m0[_256].y, cbObjMatrix._m0[_256].x * _203));
    NORMAL_1.z = fma(_206, cbObjMatrix._m0[_263].z, fma(_205, cbObjMatrix._m0[_263].y, cbObjMatrix._m0[_263].x * _203));
    NORMAL_1.w = float(_239);
    TANGENT_1.x = fma(_218, cbObjMatrix._m0[_249].z, fma(_217, cbObjMatrix._m0[_249].y, cbObjMatrix._m0[_249].x * _216));
    TANGENT_1.y = fma(_218, cbObjMatrix._m0[_256].z, fma(_217, cbObjMatrix._m0[_256].y, cbObjMatrix._m0[_256].x * _216));
    TANGENT_1.z = fma(_218, cbObjMatrix._m0[_263].z, fma(_217, cbObjMatrix._m0[_263].y, cbObjMatrix._m0[_263].x * _216));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_230, cbObjMatrix._m0[_249].z, fma(_229, cbObjMatrix._m0[_249].y, cbObjMatrix._m0[_249].x * _228));
    TANGENT_2_1.y = fma(_230, cbObjMatrix._m0[_256].z, fma(_229, cbObjMatrix._m0[_256].y, cbObjMatrix._m0[_256].x * _228));
    TANGENT_2_1.z = fma(_230, cbObjMatrix._m0[_263].z, fma(_229, cbObjMatrix._m0[_263].y, cbObjMatrix._m0[_263].x * _228));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_3.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_3.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
    TEXCOORD_8 = TEXCOORD_2.x;
    TEXCOORD_9 = TEXCOORD_2.y;
    TEXCOORD_10 = TEXCOORD_2.z;
    gl_ClipDistance[0u] = dot(vec4(_362, _369, _376, _383), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_362, _369, _376, _383), vec4(cbInstanceData._m0[_241 + 3u]));
}


