#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_23;
layout(set = 0, binding = 11) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_24;
layout(set = 0, binding = 12) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_4;
layout(set = 0, binding = 13) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_6;
layout(set = 0, binding = 14) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_7;
layout(set = 0, binding = 15) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_14;
layout(set = 0, binding = 3) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_16;
layout(set = 0, binding = 4) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_17;
layout(set = 0, binding = 5) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_18;
layout(set = 0, binding = 6) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_19;
layout(set = 0, binding = 7) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_20;
layout(set = 0, binding = 9) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_22;
layout(set = 0, binding = 17) uniform texture2DArray C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_0;
layout(set = 0, binding = 18) uniform texture2DArray C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in float TEXCOORD_8;
layout(location = 7, component = 1) in float TEXCOORD_9;
layout(location = 7, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1598;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _236 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _237 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _238 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _244 = inversesqrt(dot(vec3(_236, _237, _238), vec3(_236, _237, _238)));
    float _251 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _258 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _321 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _325 = _321.z;
    float _338 = exp2(log2((1.0 - _325) * cbMtdParam._m0[26u].z) * cbMtdParam._m0[25u].w);
    float _339 = isnan(0.0) ? _338 : (isnan(_338) ? 0.0 : max(_338, 0.0));
    float _340 = isnan(1.0) ? _339 : (isnan(_339) ? 1.0 : min(_339, 1.0));
    vec4 _357 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w));
    float _369 = exp2(log2(_357.w * cbMtdParam._m0[29u].y) * cbMtdParam._m0[23u].x);
    float _370 = isnan(0.0) ? _369 : (isnan(_369) ? 0.0 : max(_369, 0.0));
    float _371 = isnan(1.0) ? _370 : (isnan(_370) ? 1.0 : min(_370, 1.0));
    float _380 = exp2(log2(cbMtdParam._m0[23u].y * _325) * cbMtdParam._m0[22u].y);
    float _381 = isnan(0.0) ? _380 : (isnan(_380) ? 0.0 : max(_380, 0.0));
    float _382 = isnan(1.0) ? _381 : (isnan(_381) ? 1.0 : min(_381, 1.0));
    vec4 _394 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _397 = _394.y;
    float _400 = (_394.x + (-0.02500000037252902984619140625)) * 8.0;
    float _404 = roundEven(5.0 - _400);
    float _405 = isnan(0.0) ? _404 : (isnan(_404) ? 0.0 : max(_404, 0.0));
    float _406 = isnan(4.0) ? _405 : (isnan(_405) ? 4.0 : min(_405, 4.0));
    float _418 = floor(_406);
    vec4 _421 = texture(sampler2DArray(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_0, SS_DiffuseMap), vec3((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w, _418));
    float _214[6];
    float _215[6];
    float _216[6];
    _214[0u] = cbMtdParam._m0[17u].x;
    _215[0u] = cbMtdParam._m0[17u].y;
    _216[0u] = cbMtdParam._m0[17u].z;
    _214[1u] = cbMtdParam._m0[15u].x;
    _215[1u] = cbMtdParam._m0[15u].y;
    _216[1u] = cbMtdParam._m0[15u].z;
    _214[2u] = cbMtdParam._m0[14u].x;
    _215[2u] = cbMtdParam._m0[14u].y;
    _216[2u] = cbMtdParam._m0[14u].z;
    _214[3u] = cbMtdParam._m0[13u].x;
    _215[3u] = cbMtdParam._m0[13u].y;
    _216[3u] = cbMtdParam._m0[13u].z;
    _214[4u] = cbMtdParam._m0[12u].x;
    _215[4u] = cbMtdParam._m0[12u].y;
    _216[4u] = cbMtdParam._m0[12u].z;
    _214[5u] = cbMtdParam._m0[18u].x;
    _215[5u] = cbMtdParam._m0[18u].y;
    _216[5u] = cbMtdParam._m0[18u].z;
    float _485 = roundEven(_400);
    float _486 = isnan(0.0) ? _485 : (isnan(_485) ? 0.0 : max(_485, 0.0));
    uint _488 = uint(int(isnan(5.0) ? _486 : (isnan(_486) ? 5.0 : min(_486, 5.0))));
    vec4 _518 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _529 = cbMtdParam._m0[9u].x * _518.x;
    float _530 = cbMtdParam._m0[9u].y * _518.y;
    float _531 = cbMtdParam._m0[9u].z * _518.z;
    float _538 = ((((((_214[_488] - cbMtdParam._m0[10u].x) * _397) + cbMtdParam._m0[10u].x) * _421.x) - _529) * _382) + _529;
    float _539 = ((((((_215[_488] - cbMtdParam._m0[10u].y) * _397) + cbMtdParam._m0[10u].y) * _421.y) - _530) * _382) + _530;
    float _540 = ((((((_216[_488] - cbMtdParam._m0[10u].z) * _397) + cbMtdParam._m0[10u].z) * _421.z) - _531) * _382) + _531;
    float _546 = exp2(log2(_321.w) * cbMtdParam._m0[23u].w);
    vec4 _559 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _579 = (((cbMtdParam._m0[16u].x * _559.x) - _538) * _546) + _538;
    float _580 = (((cbMtdParam._m0[16u].y * _559.y) - _539) * _546) + _539;
    float _581 = (((cbMtdParam._m0[16u].z * _559.z) - _540) * _546) + _540;
    vec4 _593 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _613 = (((cbMtdParam._m0[19u].x * _593.x) - _579) * _371) + _579;
    float _614 = (((cbMtdParam._m0[19u].y * _593.y) - _580) * _371) + _580;
    float _615 = (((cbMtdParam._m0[19u].z * _593.z) - _581) * _371) + _581;
    vec4 _627 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_19, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _652 = (_357.x * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].x * _627.x) - _613) * _340) + _613);
    float _654 = (_357.y * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].y * _627.y) - _614) * _340) + _614);
    float _656 = (_357.z * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].z * _627.z) - _615) * _340) + _615);
    vec4 _668 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_17, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _687 = TEXCOORD_5.x - ((cbMtdParam._m0[24u].x * (1.0 - TEXCOORD_5.x)) * (texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x + 0.00999999977648258209228515625));
    float _689 = _687 * (cbMtdParam._m0[24u].z + 1.0);
    float _3997 = isnan(0.0) ? _689 : (isnan(_689) ? 0.0 : max(_689, 0.0));
    float _690 = isnan(1.0) ? _3997 : (isnan(_3997) ? 1.0 : min(_3997, 1.0));
    float _697 = (_690 * ((cbMtdParam._m0[11u].x * _668.x) - _652)) + _652;
    float _698 = (((cbMtdParam._m0[11u].y * _668.y) - _654) * _690) + _654;
    float _699 = (((cbMtdParam._m0[11u].z * _668.z) - _656) * _690) + _656;
    float _703 = cbMtdParam._m0[28u].x * TEXCOORD_8;
    float _711 = (_703 - (((texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_23, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x + 0.00999999977648258209228515625) * cbMtdParam._m0[27u].z) * (1.0 - _703))) * (cbMtdParam._m0[27u].w + 1.0);
    float _4008 = isnan(0.0) ? _711 : (isnan(_711) ? 0.0 : max(_711, 0.0));
    float _712 = isnan(1.0) ? _4008 : (isnan(_4008) ? 1.0 : min(_4008, 1.0));
    float _719 = ((cbMtdParam._m0[21u].x - _697) * _712) + _697;
    float _720 = ((cbMtdParam._m0[21u].y - _698) * _712) + _698;
    float _721 = ((cbMtdParam._m0[21u].z - _699) * _712) + _699;
    vec4 _734 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_24, SS_ClampLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.z) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.w) + cbTextureTilingScale._m0[11u].w));
    float _742 = (_734.x + (-1.0)) + (cbMtdParam._m0[28u].y * 2.0);
    float _4019 = isnan(0.0) ? _742 : (isnan(_742) ? 0.0 : max(_742, 0.0));
    float _748 = exp2(log2(cbMtdParam._m0[28u].w * (isnan(1.0) ? _4019 : (isnan(_4019) ? 1.0 : min(_4019, 1.0)))) * cbMtdParam._m0[28u].z);
    float _4030 = isnan(0.0) ? _748 : (isnan(_748) ? 0.0 : max(_748, 0.0));
    float _749 = isnan(1.0) ? _4030 : (isnan(_4030) ? 1.0 : min(_4030, 1.0));
    float _209[5];
    float _210[5];
    _209[0u] = cbMtdParam._m0[29u].z;
    _210[0u] = cbMtdParam._m0[29u].w;
    _209[1u] = cbMtdParam._m0[31u].z;
    _210[1u] = cbMtdParam._m0[31u].w;
    _209[2u] = cbMtdParam._m0[31u].x;
    _210[2u] = cbMtdParam._m0[31u].y;
    _209[3u] = cbMtdParam._m0[30u].z;
    _210[3u] = cbMtdParam._m0[30u].w;
    _209[4u] = cbMtdParam._m0[30u].x;
    _210[4u] = cbMtdParam._m0[30u].y;
    float _788 = isnan(0.0) ? _406 : (isnan(_406) ? 0.0 : max(_406, 0.0));
    uint _790 = uint(int(isnan(4.0) ? _788 : (isnan(_788) ? 4.0 : min(_788, 4.0))));
    float _797 = ((_210[_790] - cbMtdParam._m0[22u].z) * _382) + cbMtdParam._m0[22u].z;
    float _800 = ((cbMtdParam._m0[22u].w - _797) * _546) + _797;
    float _803 = ((cbMtdParam._m0[25u].x - _800) * _371) + _800;
    float _806 = ((cbMtdParam._m0[26u].x - _803) * _340) + _803;
    float _811 = (cbMtdParam._m0[24u].y + 1.0) * _687;
    float _4051 = isnan(0.0) ? _811 : (isnan(_811) ? 0.0 : max(_811, 0.0));
    float _812 = isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0));
    float _814 = _806 - (_806 * _812);
    float _816 = _814 - (_814 * _703);
    vec4 _829 = texture(sampler2DArray(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_1, SS_BumpMap), vec3((cbTextureTilingScale._m0[18u].x * TEXCOORD.x) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD.y) + cbTextureTilingScale._m0[18u].w, _418));
    vec4 _846 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w));
    float _848 = _846.x;
    float _849 = _846.y;
    float _854 = cbMtdParam._m0[22u].x + _846.z;
    float _857 = (((_829.z + _209[_790]) - _854) * _382) + _854;
    vec4 _869 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.x) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.y) + cbTextureTilingScale._m0[15u].w));
    float _880 = (((_869.z - _857) + cbMtdParam._m0[29u].x) * _546) + _857;
    float _885 = ((((_325 * 2.0) * _880) - _880) * cbMtdParam._m0[24u].w) + _880;
    vec4 _897 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w));
    float _908 = (((cbMtdParam._m0[23u].z + _897.z) - _885) * _371) + _885;
    vec4 _921 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_20, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _932 = (((_921.z - _908) + cbMtdParam._m0[26u].y) * _340) + _908;
    vec4 _944 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _955 = ((_944.z - _932) * _812) + _932;
    vec4 _970 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_22, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _984 = ((cbMtdParam._m0[27u].y * _703) * ((_970.z * cbMtdParam._m0[27u].x) - _955)) + _955;
    float _999 = ((_829.x - _848) * _382) + _848;
    float _1000 = ((_829.y - _849) * _382) + _849;
    float _1005 = ((_869.x - _999) * _546) + _999;
    float _1006 = ((_869.y - _1000) * _546) + _1000;
    float _1011 = ((_897.x - _1005) * _371) + _1005;
    float _1012 = ((_897.y - _1006) * _371) + _1006;
    float _1021 = ((((_921.x - _1011) * _340) + _1011) * 2.0) + (-1.0);
    float _1022 = ((((_921.y - _1012) * _340) + _1012) * 2.0) + (-1.0);
    float _1023 = dot(vec2(_1021, _1022), vec2(_1021, _1022));
    float _4062 = isnan(0.0) ? _1023 : (isnan(_1023) ? 0.0 : max(_1023, 0.0));
    float _1028 = sqrt(1.0 - (isnan(1.0) ? _4062 : (isnan(_4062) ? 1.0 : min(_4062, 1.0))));
    float _1044 = (((cbMtdParam._m0[25u].y * ((_321.x * 2.0) + (-1.0))) + _1021) + (((((_944.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[25u].z) * _812)) + ((((_970.x * 2.0) + (-1.0)) * _703) * cbMtdParam._m0[26u].w);
    float _1045 = (((cbMtdParam._m0[25u].y * ((_321.y * 2.0) + (-1.0))) + _1022) + (((((_944.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[25u].z) * _812)) + (((cbMtdParam._m0[28u].x * TEXCOORD_9) * ((_970.y * 2.0) + (-1.0))) * cbMtdParam._m0[26u].w);
    float _1048 = fma(_1028, _251 * NORMAL.x, fma(_1045, _258 * TANGENT.x, (_244 * _236) * _1044));
    float _1051 = fma(_1028, _251 * NORMAL.y, fma(_1045, _258 * TANGENT.y, (_244 * _237) * _1044));
    float _1054 = fma(_1028, _251 * NORMAL.z, fma(_1045, _258 * TANGENT.z, (_244 * _238) * _1044));
    float _1058 = inversesqrt(dot(vec3(_1048, _1051, _1054), vec3(_1048, _1051, _1054)));
    float _1059 = _1058 * _1048;
    float _1060 = _1058 * _1051;
    float _1061 = _1058 * _1054;
    float _4073 = isnan(0.0) ? _749 : (isnan(_749) ? 0.0 : max(_749, 0.0));
    float _1062 = isnan(1.0) ? _4073 : (isnan(_4073) ? 1.0 : min(_4073, 1.0));
    float _4084 = isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0));
    float _1063 = isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0));
    float _4095 = isnan(0.0) ? _719 : (isnan(_719) ? 0.0 : max(_719, 0.0));
    float _4106 = isnan(0.0) ? _720 : (isnan(_720) ? 0.0 : max(_720, 0.0));
    float _4117 = isnan(0.0) ? _721 : (isnan(_721) ? 0.0 : max(_721, 0.0));
    float _4128 = isnan(0.0) ? _816 : (isnan(_816) ? 0.0 : max(_816, 0.0));
    float _1067 = isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0));
    float _1083 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1123 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1133 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1123);
    float _1134 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1123);
    float _1135 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1123);
    float _1139 = inversesqrt(dot(vec3(_1133, _1134, _1135), vec3(_1133, _1134, _1135)));
    float _1140 = _1133 * _1139;
    float _1141 = _1134 * _1139;
    float _1142 = _1135 * _1139;
    float _1148 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1149 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1167 = fma(_1061, cbSceneParam._m0[5u].z, fma(_1060, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1059));
    float _1170 = fma(_1061, cbSceneParam._m0[6u].z, fma(_1060, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1059));
    float _1173 = fma(_1061, cbSceneParam._m0[7u].z, fma(_1060, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1059));
    uint _1186 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1188 = (_1186 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1194 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4095 : (isnan(_4095) ? 1.0 : min(_4095, 1.0)))) * cbInstanceData._m0[_1188].x;
    float _1195 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0)))) * cbInstanceData._m0[_1188].y;
    float _1196 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0)))) * cbInstanceData._m0[_1188].z;
    float _4139 = isnan(0.0) ? _1194 : (isnan(_1194) ? 0.0 : max(_1194, 0.0));
    float _1197 = isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0));
    float _4150 = isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0));
    float _1198 = isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0));
    float _4161 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
    float _1199 = isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0));
    float _1200 = 1.0 - _1067;
    float _1201 = _1197 * _1200;
    float _1202 = _1198 * _1200;
    float _1203 = _1199 * _1200;
    float _1208 = (_1197 + (-0.039999999105930328369140625)) * _1067;
    float _1209 = (_1198 + (-0.039999999105930328369140625)) * _1067;
    float _1210 = (_1199 + (-0.039999999105930328369140625)) * _1067;
    float _1211 = _1208 + 0.039999999105930328369140625;
    float _1213 = _1209 + 0.039999999105930328369140625;
    float _1214 = _1210 + 0.039999999105930328369140625;
    vec4 _1223 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1148, cbSceneParam._m0[86u].y * _1149));
    float _1226 = _1223.x * TEXCOORD_5.w;
    float _1227 = dot(vec3(_1059, _1060, _1061), vec3(_1140, _1141, _1142));
    float _1230 = _1227 * 2.0;
    float _1234 = (_1230 * _1059) - _1140;
    float _1235 = (_1230 * _1060) - _1141;
    float _1236 = (_1230 * _1061) - _1142;
    float _1240 = abs(dot(vec3(_1140, _1141, _1142), vec3(_1059, _1060, _1061)));
    float _4172 = isnan(0.0) ? _1240 : (isnan(_1240) ? 0.0 : max(_1240, 0.0));
    float _1242 = sqrt(_1063);
    float _1253 = exp2((_1242 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1242 * 3.0));
    float _1259 = (1.0 - _1253) * ((_1242 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1260 = _1253 * _1242;
    float _1288 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1292 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1296 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1597;
    float _1599;
    float _1600;
    float _1601;
    float _1602;
    float _1603;
    float _1604;
    float _1605;
    float _1606;
    float _1607;
    float _1608;
    float _1609;
    float _1610;
    float _1611;
    float _1612;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1322 = fma(_1296, cbModelParam._m0[26u].z, fma(_1292, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1288));
        float _1326 = fma(_1296, cbModelParam._m0[27u].z, fma(_1292, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1288));
        float _1330 = fma(_1296, cbModelParam._m0[28u].z, fma(_1292, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1288));
        float _1355 = _1288 + _1059;
        float _1356 = _1292 + _1060;
        float _1357 = _1296 + _1061;
        float _1367 = fma(_1357, cbModelParam._m0[26u].z, fma(_1356, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1355)) - _1322;
        float _1368 = fma(_1357, cbModelParam._m0[27u].z, fma(_1356, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1355)) - _1326;
        float _1369 = fma(_1357, cbModelParam._m0[28u].z, fma(_1356, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1355)) - _1330;
        float _1373 = inversesqrt(dot(vec3(_1367, _1368, _1369), vec3(_1367, _1368, _1369)));
        float _1386 = ((_1373 * _1367) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1322 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1387 = ((_1373 * _1368) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1326 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1388 = ((_1373 * _1369) / cbModelParam._m0[34u].z) + ((((((_1330 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1391 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1386, _1387, _1388), 0.0);
        vec4 _1398 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1386, _1387, _1388), 0.0);
        vec4 _1405 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1386, _1387, _1388), 0.0);
        vec4 _1412 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1386, _1387, _1388), 0.0);
        float _1425 = exp2((_1391.w + (-0.5)) * 20.0) * 2.0;
        float _1426 = _1425 * (_1391.x + (-0.5));
        float _1427 = _1425 * (_1391.y + (-0.5));
        float _1428 = _1425 * (_1391.z + (-0.5));
        float _1435 = exp2((_1398.w + (-0.5)) * 20.0) * 2.0;
        float _1436 = _1435 * (_1398.x + (-0.5));
        float _1437 = _1435 * (_1398.y + (-0.5));
        float _1438 = _1435 * (_1398.z + (-0.5));
        float _1445 = exp2((_1405.w + (-0.5)) * 20.0) * 2.0;
        float _1446 = _1445 * (_1405.x + (-0.5));
        float _1447 = _1445 * (_1405.y + (-0.5));
        float _1448 = _1445 * (_1405.z + (-0.5));
        float _1455 = exp2((_1412.w + (-0.5)) * 20.0) * 2.0;
        float _1456 = _1455 * (_1412.x + (-0.5));
        float _1457 = _1455 * (_1412.y + (-0.5));
        float _1458 = _1455 * (_1412.z + (-0.5));
        float _1459 = isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0));
        float _1460 = isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0));
        float _1461 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
        float _1462 = _1426 * 0.5;
        float _1463 = _1436 * 0.5;
        float _1464 = _1446 * 0.5;
        float _1465 = dot(vec3(_1462, _1463, _1464), vec3(_1462, _1463, _1464));
        float _1470 = (_1465 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1465);
        float _1479 = (dot(vec3(_1059, _1060, _1061), vec3(_1470 * _1462, _1470 * _1463, _1470 * _1464)) + 1.0) * 0.5;
        float _4198 = isnan(0.0) ? _1479 : (isnan(_1479) ? 0.0 : max(_1479, 0.0));
        float _1489 = sqrt(((_1463 * _1463) + (_1462 * _1462)) + (_1464 * _1464)) / (_1459 + 9.9999997473787516355514526367188e-06);
        float _4209 = isnan(0.0) ? _1489 : (isnan(_1489) ? 0.0 : max(_1489, 0.0));
        float _1490 = isnan(1.0) ? _4209 : (isnan(_4209) ? 1.0 : min(_4209, 1.0));
        float _1491 = _1490 * 2.0;
        float _1495 = (1.0 - _1490) / (_1490 + 1.0);
        float _4220 = isnan(0.0) ? _1495 : (isnan(_1495) ? 0.0 : max(_1495, 0.0));
        float _1496 = isnan(1.0) ? _4220 : (isnan(_4220) ? 1.0 : min(_4220, 1.0));
        float _1505 = ((((1.0 - _1496) * (_1491 + 2.0)) * exp2(log2(isnan(1.0) ? _4198 : (isnan(_4198) ? 1.0 : min(_4198, 1.0))) * (_1491 + 1.0))) + _1496) * _1459;
        float _1506 = _1427 * 0.5;
        float _1507 = _1437 * 0.5;
        float _1508 = _1447 * 0.5;
        float _1509 = dot(vec3(_1506, _1507, _1508), vec3(_1506, _1507, _1508));
        float _1514 = (_1509 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1509);
        float _1522 = (dot(vec3(_1059, _1060, _1061), vec3(_1514 * _1506, _1514 * _1507, _1514 * _1508)) + 1.0) * 0.5;
        float _4231 = isnan(0.0) ? _1522 : (isnan(_1522) ? 0.0 : max(_1522, 0.0));
        float _1531 = sqrt(((_1507 * _1507) + (_1506 * _1506)) + (_1508 * _1508)) / (_1460 + 9.9999997473787516355514526367188e-06);
        float _4242 = isnan(0.0) ? _1531 : (isnan(_1531) ? 0.0 : max(_1531, 0.0));
        float _1532 = isnan(1.0) ? _4242 : (isnan(_4242) ? 1.0 : min(_4242, 1.0));
        float _1533 = _1532 * 2.0;
        float _1537 = (1.0 - _1532) / (_1532 + 1.0);
        float _4253 = isnan(0.0) ? _1537 : (isnan(_1537) ? 0.0 : max(_1537, 0.0));
        float _1538 = isnan(1.0) ? _4253 : (isnan(_4253) ? 1.0 : min(_4253, 1.0));
        float _1547 = ((((1.0 - _1538) * (_1533 + 2.0)) * exp2(log2(isnan(1.0) ? _4231 : (isnan(_4231) ? 1.0 : min(_4231, 1.0))) * (_1533 + 1.0))) + _1538) * _1460;
        float _1548 = _1428 * 0.5;
        float _1549 = _1438 * 0.5;
        float _1550 = _1448 * 0.5;
        float _1551 = dot(vec3(_1548, _1549, _1550), vec3(_1548, _1549, _1550));
        float _1556 = (_1551 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1551);
        float _1564 = (dot(vec3(_1059, _1060, _1061), vec3(_1556 * _1548, _1556 * _1549, _1556 * _1550)) + 1.0) * 0.5;
        float _4264 = isnan(0.0) ? _1564 : (isnan(_1564) ? 0.0 : max(_1564, 0.0));
        float _1573 = sqrt(((_1549 * _1549) + (_1548 * _1548)) + (_1550 * _1550)) / (_1461 + 9.9999997473787516355514526367188e-06);
        float _4275 = isnan(0.0) ? _1573 : (isnan(_1573) ? 0.0 : max(_1573, 0.0));
        float _1574 = isnan(1.0) ? _4275 : (isnan(_4275) ? 1.0 : min(_4275, 1.0));
        float _1575 = _1574 * 2.0;
        float _1579 = (1.0 - _1574) / (_1574 + 1.0);
        float _4286 = isnan(0.0) ? _1579 : (isnan(_1579) ? 0.0 : max(_1579, 0.0));
        float _1580 = isnan(1.0) ? _4286 : (isnan(_4286) ? 1.0 : min(_4286, 1.0));
        float _1589 = ((((1.0 - _1580) * (_1575 + 2.0)) * exp2(log2(isnan(1.0) ? _4264 : (isnan(_4264) ? 1.0 : min(_4264, 1.0))) * (_1575 + 1.0))) + _1580) * _1461;
        _1597 = _1428;
        _1599 = _1427;
        _1600 = _1426;
        _1601 = _1438;
        _1602 = _1437;
        _1603 = _1436;
        _1604 = _1448;
        _1605 = _1447;
        _1606 = _1446;
        _1607 = _1461;
        _1608 = _1460;
        _1609 = _1459;
        _1610 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1505 : (isnan(_1505) ? 0.0 : max(_1505, 0.0)));
        _1611 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1547 : (isnan(_1547) ? 0.0 : max(_1547, 0.0)));
        _1612 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0)));
    }
    else
    {
        _1597 = _1598;
        _1599 = _1598;
        _1600 = _1598;
        _1601 = _1598;
        _1602 = _1598;
        _1603 = _1598;
        _1604 = _1598;
        _1605 = _1598;
        _1606 = _1598;
        _1607 = _1598;
        _1608 = _1598;
        _1609 = _1598;
        _1610 = 0.0;
        _1611 = 0.0;
        _1612 = 0.0;
    }
    float _1904;
    float _1905;
    float _1906;
    float _1907;
    float _1908;
    float _1909;
    float _1910;
    float _1911;
    float _1912;
    float _1913;
    float _1914;
    float _1915;
    float _1916;
    float _1917;
    float _1918;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1635 = fma(_1296, cbModelParam._m0[30u].z, fma(_1292, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1288));
        float _1639 = fma(_1296, cbModelParam._m0[31u].z, fma(_1292, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1288));
        float _1643 = fma(_1296, cbModelParam._m0[32u].z, fma(_1292, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1288));
        float _1666 = _1288 + _1059;
        float _1667 = _1292 + _1060;
        float _1668 = _1296 + _1061;
        float _1678 = fma(_1668, cbModelParam._m0[30u].z, fma(_1667, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1666)) - _1635;
        float _1679 = fma(_1668, cbModelParam._m0[31u].z, fma(_1667, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1666)) - _1639;
        float _1680 = fma(_1668, cbModelParam._m0[32u].z, fma(_1667, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1666)) - _1643;
        float _1684 = inversesqrt(dot(vec3(_1678, _1679, _1680), vec3(_1678, _1679, _1680)));
        float _1697 = ((_1684 * _1678) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1635 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1698 = ((_1684 * _1679) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1639 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1699 = ((_1684 * _1680) / cbModelParam._m0[35u].z) + ((((((_1643 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1701 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1697, _1698, _1699), 0.0);
        vec4 _1708 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1697, _1698, _1699), 0.0);
        vec4 _1715 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1697, _1698, _1699), 0.0);
        vec4 _1722 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1697, _1698, _1699), 0.0);
        float _1734 = exp2((_1701.w + (-0.5)) * 20.0) * 2.0;
        float _1735 = _1734 * (_1701.x + (-0.5));
        float _1736 = _1734 * (_1701.y + (-0.5));
        float _1737 = _1734 * (_1701.z + (-0.5));
        float _1744 = exp2((_1708.w + (-0.5)) * 20.0) * 2.0;
        float _1745 = _1744 * (_1708.x + (-0.5));
        float _1746 = _1744 * (_1708.y + (-0.5));
        float _1747 = _1744 * (_1708.z + (-0.5));
        float _1754 = exp2((_1715.w + (-0.5)) * 20.0) * 2.0;
        float _1755 = _1754 * (_1715.x + (-0.5));
        float _1756 = _1754 * (_1715.y + (-0.5));
        float _1757 = _1754 * (_1715.z + (-0.5));
        float _1764 = exp2((_1722.w + (-0.5)) * 20.0) * 2.0;
        float _1765 = _1764 * (_1722.x + (-0.5));
        float _1766 = _1764 * (_1722.y + (-0.5));
        float _1767 = _1764 * (_1722.z + (-0.5));
        float _1768 = isnan(0.0) ? _1765 : (isnan(_1765) ? 0.0 : max(_1765, 0.0));
        float _1769 = isnan(0.0) ? _1766 : (isnan(_1766) ? 0.0 : max(_1766, 0.0));
        float _1770 = isnan(0.0) ? _1767 : (isnan(_1767) ? 0.0 : max(_1767, 0.0));
        float _1771 = _1735 * 0.5;
        float _1772 = _1745 * 0.5;
        float _1773 = _1755 * 0.5;
        float _1774 = dot(vec3(_1771, _1772, _1773), vec3(_1771, _1772, _1773));
        float _1779 = (_1774 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1774);
        float _1787 = (dot(vec3(_1059, _1060, _1061), vec3(_1779 * _1771, _1779 * _1772, _1779 * _1773)) + 1.0) * 0.5;
        float _4327 = isnan(0.0) ? _1787 : (isnan(_1787) ? 0.0 : max(_1787, 0.0));
        float _1796 = sqrt(((_1772 * _1772) + (_1771 * _1771)) + (_1773 * _1773)) / (_1768 + 9.9999997473787516355514526367188e-06);
        float _4338 = isnan(0.0) ? _1796 : (isnan(_1796) ? 0.0 : max(_1796, 0.0));
        float _1797 = isnan(1.0) ? _4338 : (isnan(_4338) ? 1.0 : min(_4338, 1.0));
        float _1798 = _1797 * 2.0;
        float _1802 = (1.0 - _1797) / (_1797 + 1.0);
        float _4349 = isnan(0.0) ? _1802 : (isnan(_1802) ? 0.0 : max(_1802, 0.0));
        float _1803 = isnan(1.0) ? _4349 : (isnan(_4349) ? 1.0 : min(_4349, 1.0));
        float _1812 = ((((1.0 - _1803) * (_1798 + 2.0)) * exp2(log2(isnan(1.0) ? _4327 : (isnan(_4327) ? 1.0 : min(_4327, 1.0))) * (_1798 + 1.0))) + _1803) * _1768;
        float _1813 = _1736 * 0.5;
        float _1814 = _1746 * 0.5;
        float _1815 = _1756 * 0.5;
        float _1816 = dot(vec3(_1813, _1814, _1815), vec3(_1813, _1814, _1815));
        float _1821 = (_1816 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1816);
        float _1829 = (dot(vec3(_1059, _1060, _1061), vec3(_1821 * _1813, _1821 * _1814, _1821 * _1815)) + 1.0) * 0.5;
        float _4360 = isnan(0.0) ? _1829 : (isnan(_1829) ? 0.0 : max(_1829, 0.0));
        float _1838 = sqrt(((_1814 * _1814) + (_1813 * _1813)) + (_1815 * _1815)) / (_1769 + 9.9999997473787516355514526367188e-06);
        float _4371 = isnan(0.0) ? _1838 : (isnan(_1838) ? 0.0 : max(_1838, 0.0));
        float _1839 = isnan(1.0) ? _4371 : (isnan(_4371) ? 1.0 : min(_4371, 1.0));
        float _1840 = _1839 * 2.0;
        float _1844 = (1.0 - _1839) / (_1839 + 1.0);
        float _4382 = isnan(0.0) ? _1844 : (isnan(_1844) ? 0.0 : max(_1844, 0.0));
        float _1845 = isnan(1.0) ? _4382 : (isnan(_4382) ? 1.0 : min(_4382, 1.0));
        float _1854 = ((((1.0 - _1845) * (_1840 + 2.0)) * exp2(log2(isnan(1.0) ? _4360 : (isnan(_4360) ? 1.0 : min(_4360, 1.0))) * (_1840 + 1.0))) + _1845) * _1769;
        float _1855 = _1737 * 0.5;
        float _1856 = _1747 * 0.5;
        float _1857 = _1757 * 0.5;
        float _1858 = dot(vec3(_1855, _1856, _1857), vec3(_1855, _1856, _1857));
        float _1863 = (_1858 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1858);
        float _1871 = (dot(vec3(_1059, _1060, _1061), vec3(_1863 * _1855, _1863 * _1856, _1863 * _1857)) + 1.0) * 0.5;
        float _4393 = isnan(0.0) ? _1871 : (isnan(_1871) ? 0.0 : max(_1871, 0.0));
        float _1880 = sqrt(((_1856 * _1856) + (_1855 * _1855)) + (_1857 * _1857)) / (_1770 + 9.9999997473787516355514526367188e-06);
        float _4404 = isnan(0.0) ? _1880 : (isnan(_1880) ? 0.0 : max(_1880, 0.0));
        float _1881 = isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0));
        float _1882 = _1881 * 2.0;
        float _1886 = (1.0 - _1881) / (_1881 + 1.0);
        float _4415 = isnan(0.0) ? _1886 : (isnan(_1886) ? 0.0 : max(_1886, 0.0));
        float _1887 = isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0));
        float _1896 = ((((1.0 - _1887) * (_1882 + 2.0)) * exp2(log2(isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0))) * (_1882 + 1.0))) + _1887) * _1770;
        _1904 = _1737;
        _1905 = _1736;
        _1906 = _1735;
        _1907 = _1747;
        _1908 = _1746;
        _1909 = _1745;
        _1910 = _1757;
        _1911 = _1756;
        _1912 = _1755;
        _1913 = _1770;
        _1914 = _1769;
        _1915 = _1768;
        _1916 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1812 : (isnan(_1812) ? 0.0 : max(_1812, 0.0)));
        _1917 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1854 : (isnan(_1854) ? 0.0 : max(_1854, 0.0)));
        _1918 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1896 : (isnan(_1896) ? 0.0 : max(_1896, 0.0)));
    }
    else
    {
        _1904 = _1598;
        _1905 = _1598;
        _1906 = _1598;
        _1907 = _1598;
        _1908 = _1598;
        _1909 = _1598;
        _1910 = _1598;
        _1911 = _1598;
        _1912 = _1598;
        _1913 = _1598;
        _1914 = _1598;
        _1915 = _1598;
        _1916 = 0.0;
        _1917 = 0.0;
        _1918 = 0.0;
    }
    float _1928 = (cbModelParam._m0[1u].x * (_1916 - _1610)) + _1610;
    float _1929 = (cbModelParam._m0[1u].x * (_1917 - _1611)) + _1611;
    float _1930 = (cbModelParam._m0[1u].x * (_1918 - _1612)) + _1612;
    float _1951 = fma(_1930, cbSceneParam._m0[89u].z, fma(_1929, cbSceneParam._m0[89u].y, _1928 * cbSceneParam._m0[89u].x));
    float _1954 = fma(_1930, cbSceneParam._m0[90u].z, fma(_1929, cbSceneParam._m0[90u].y, _1928 * cbSceneParam._m0[90u].x));
    float _1957 = fma(_1930, cbSceneParam._m0[91u].z, fma(_1929, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1928));
    float _1972 = _1234 * 0.5;
    float _1973 = _1235 * 0.5;
    float _1974 = _1236 * 0.5;
    float _1975 = dot(vec4(_1972, _1973, _1974, 1.0), vec4(_1906, _1909, _1912, _1915));
    float _1978 = dot(vec4(_1972, _1973, _1974, 1.0), vec4(_1905, _1908, _1911, _1914));
    float _1981 = dot(vec4(_1972, _1973, _1974, 1.0), vec4(_1904, _1907, _1910, _1913));
    float _2015;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1988 = dot(vec4(_1972, _1973, _1974, 1.0), vec4(_1597, _1601, _1604, _1607));
        float _1992 = dot(vec4(_1972, _1973, _1974, 1.0), vec4(_1599, _1602, _1605, _1608));
        float _1996 = dot(vec4(_1972, _1973, _1974, 1.0), vec4(_1600, _1603, _1606, _1609));
        float _2003 = dot(vec4(cbModelParam._m0[39u]), vec4(_1972, _1973, _1974, 1.0));
        _2015 = dot(vec3(isnan(0.0) ? _1996 : (isnan(_1996) ? 0.0 : max(_1996, 0.0)), isnan(0.0) ? _1992 : (isnan(_1992) ? 0.0 : max(_1992, 0.0)), isnan(0.0) ? _1988 : (isnan(_1988) ? 0.0 : max(_1988, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2003) ? 0.0 : (isnan(0.0) ? _2003 : max(0.0, _2003))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2015 = 1.0;
    }
    float _2026;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2017 = dot(vec4(cbModelParam._m0[40u]), vec4(_1972, _1973, _1974, 1.0));
        _2026 = dot(vec3(isnan(0.0) ? _1975 : (isnan(_1975) ? 0.0 : max(_1975, 0.0)), isnan(0.0) ? _1978 : (isnan(_1978) ? 0.0 : max(_1978, 0.0)), isnan(0.0) ? _1981 : (isnan(_1981) ? 0.0 : max(_1981, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2017) ? 0.0 : (isnan(0.0) ? _2017 : max(0.0, _2017))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2026 = 1.0;
    }
    float _2030 = (_2026 * cbModelParam._m0[1u].x) + (_2015 * (1.0 - cbModelParam._m0[1u].x));
    float _2040 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1063);
    float _2041 = isnan(_2040) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2040 : min(cbModelParam._m0[25u].z, _2040));
    float _2121;
    float _2123;
    float _2125;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2088 = fma(_1296, cbModelParam._m0[13u].z, fma(_1292, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1288)) + cbModelParam._m0[13u].w;
        float _2092 = fma(_1296, cbModelParam._m0[14u].z, fma(_1292, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1288)) + cbModelParam._m0[14u].w;
        float _2096 = fma(_1296, cbModelParam._m0[15u].z, fma(_1292, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1288)) + cbModelParam._m0[15u].w;
        float _2099 = fma(_1236, cbModelParam._m0[13u].z, fma(_1235, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1234));
        float _2102 = fma(_1236, cbModelParam._m0[14u].z, fma(_1235, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1234));
        float _2105 = fma(_1236, cbModelParam._m0[15u].z, fma(_1235, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1234));
        float _2133;
        if (_2099 > 0.0)
        {
            _2133 = abs((1.0 - _2088) / _2099);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2099 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2088 + 1.0) / _2099);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2133 = frontier_phi_14_12_ladder;
        }
        float _2356;
        if (_2102 > 0.0)
        {
            _2356 = abs((1.0 - _2092) / _2102);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2102 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2092 + 1.0) / _2102);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2356 = frontier_phi_23_19_ladder;
        }
        float _2613;
        if (_2105 > 0.0)
        {
            _2613 = abs((1.0 - _2096) / _2105);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2105 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2096 + 1.0) / _2105);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2613 = frontier_phi_35_30_ladder;
        }
        float _2615 = isnan(_2356) ? _2133 : (isnan(_2133) ? _2356 : min(_2133, _2356));
        float _2616 = isnan(_2613) ? _2615 : (isnan(_2615) ? _2613 : min(_2615, _2613));
        float _2620 = (_2616 * _2099) + _2088;
        float _2621 = (_2616 * _2102) + _2092;
        float _2622 = (_2616 * _2105) + _2096;
        float _2623 = _2616 * 9.9999997473787516355514526367188e-05;
        float _2625 = (-1.0) - _2623;
        float _2627 = _2623 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2622 > _2627) || ((_2622 < _2625) || ((_2621 > _2627) || ((_2621 < _2625) || ((_2620 < _2625) || (_2620 > _2627))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2750 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2622, cbModelParam._m0[9u].z, fma(_2621, cbModelParam._m0[9u].y, _2620 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2622, cbModelParam._m0[10u].z, fma(_2621, cbModelParam._m0[10u].y, _2620 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2622, cbModelParam._m0[11u].z, fma(_2621, cbModelParam._m0[11u].y, _2620 * cbModelParam._m0[11u].x))), _2041);
            frontier_phi_13_35_ladder = _2750.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2750.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2750.x * cbModelParam._m0[1u].y;
        }
        _2121 = frontier_phi_13_35_ladder_2;
        _2123 = frontier_phi_13_35_ladder_1;
        _2125 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2109 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1234, _1235, _1236), _2041);
        _2121 = _2109.x * cbModelParam._m0[1u].y;
        _2123 = _2109.y * cbModelParam._m0[1u].y;
        _2125 = _2109.z * cbModelParam._m0[1u].y;
    }
    float _2129 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1063);
    float _2130 = isnan(_2129) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2129 : min(cbModelParam._m0[25u].w, _2129));
    float _2219;
    float _2221;
    float _2223;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2183 = fma(_1296, cbModelParam._m0[21u].z, fma(_1292, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1288)) + cbModelParam._m0[21u].w;
        float _2187 = fma(_1296, cbModelParam._m0[22u].z, fma(_1292, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1288)) + cbModelParam._m0[22u].w;
        float _2191 = fma(_1296, cbModelParam._m0[23u].z, fma(_1292, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1288)) + cbModelParam._m0[23u].w;
        float _2194 = fma(_1236, cbModelParam._m0[21u].z, fma(_1235, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1234));
        float _2197 = fma(_1236, cbModelParam._m0[22u].z, fma(_1235, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1234));
        float _2200 = fma(_1236, cbModelParam._m0[23u].z, fma(_1235, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1234));
        float _2361;
        if (_2194 > 0.0)
        {
            _2361 = abs((1.0 - _2183) / _2194);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2194 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2183 + 1.0) / _2194);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2361 = frontier_phi_25_21_ladder;
        }
        float _2640;
        if (_2197 > 0.0)
        {
            _2640 = abs((1.0 - _2187) / _2197);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2197 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2187 + 1.0) / _2197);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2640 = frontier_phi_37_32_ladder;
        }
        float _2853;
        if (_2200 > 0.0)
        {
            _2853 = abs((1.0 - _2191) / _2200);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2200 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2191 + 1.0) / _2200);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2853 = frontier_phi_46_43_ladder;
        }
        float _2855 = isnan(_2640) ? _2361 : (isnan(_2361) ? _2640 : min(_2361, _2640));
        float _2856 = isnan(_2853) ? _2855 : (isnan(_2855) ? _2853 : min(_2855, _2853));
        float _2860 = (_2856 * _2194) + _2183;
        float _2861 = (_2856 * _2197) + _2187;
        float _2862 = (_2856 * _2200) + _2191;
        float _2863 = _2856 * 9.9999997473787516355514526367188e-05;
        float _2864 = (-1.0) - _2863;
        float _2866 = _2863 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2862 > _2866) || ((_2862 < _2864) || ((_2861 > _2866) || ((_2861 < _2864) || ((_2860 < _2864) || (_2860 > _2866))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3063 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2862, cbModelParam._m0[17u].z, fma(_2861, cbModelParam._m0[17u].y, _2860 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2862, cbModelParam._m0[18u].z, fma(_2861, cbModelParam._m0[18u].y, _2860 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2862, cbModelParam._m0[19u].z, fma(_2861, cbModelParam._m0[19u].y, _2860 * cbModelParam._m0[19u].x))), _2130);
            frontier_phi_22_46_ladder = _3063.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _3063.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _3063.x * cbModelParam._m0[1u].z;
        }
        _2219 = frontier_phi_22_46_ladder_2;
        _2221 = frontier_phi_22_46_ladder_1;
        _2223 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2203 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1234, _1235, _1236), _2130);
        _2219 = _2203.x * cbModelParam._m0[1u].z;
        _2221 = _2203.y * cbModelParam._m0[1u].z;
        _2223 = _2203.z * cbModelParam._m0[1u].z;
    }
    float _2236 = (((_1259 * _1211) + _1260) * _1226) * ((cbModelParam._m0[1u].w * (_2219 - _2121)) + _2121);
    float _2238 = (((_1259 * _1213) + _1260) * _1226) * ((cbModelParam._m0[1u].w * (_2221 - _2123)) + _2123);
    float _2240 = (((_1259 * _1214) + _1260) * _1226) * ((cbModelParam._m0[1u].w * (_2223 - _2125)) + _2125);
    float _2243 = fma(_2240, cbSceneParam._m0[89u].z, fma(_2238, cbSceneParam._m0[89u].y, _2236 * cbSceneParam._m0[89u].x));
    float _2246 = fma(_2240, cbSceneParam._m0[90u].z, fma(_2238, cbSceneParam._m0[90u].y, _2236 * cbSceneParam._m0[90u].x));
    float _2249 = fma(_2240, cbSceneParam._m0[91u].z, fma(_2238, cbSceneParam._m0[91u].y, _2236 * cbSceneParam._m0[91u].x));
    vec4 _2257 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1148, _1149));
    float _2259 = _2257.w;
    float _2271 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2259);
    float _2272 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2259);
    float _2273 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2259);
    uvec4 _2277 = floatBitsToUint(cbInstanceData._m0[_1186 + 5u]);
    uint _2279 = _2277.x * 14u;
    uint _2280 = _2279 + 13u;
    float _2287 = _1226 + (-1.0);
    float _2292 = (cbLight._m0[_2280].x * _2287) + 1.0;
    float _2293 = (cbLight._m0[_2280].y * _2287) + 1.0;
    float _2294 = (cbLight._m0[_2280].z * _2287) + 1.0;
    float _2295 = (cbLight._m0[_2280].w * _2287) + 1.0;
    uint _2296 = _2279 + 5u;
    float _2302 = isnan(1.0) ? _2293 : (isnan(_2293) ? 1.0 : min(_2293, 1.0));
    uint _2306 = _2279 + 4u;
    float _2315 = isnan(1.0) ? _2292 : (isnan(_2292) ? 1.0 : min(_2292, 1.0));
    uint _2319 = _2279 | 1u;
    float _2330 = dot(vec3(cbLight._m0[_2279].xyz), vec3(_1059, _1060, _1061));
    float _2333 = dot(vec3(cbLight._m0[_2319].xyz), vec3(_1059, _1060, _1061));
    float _4551 = isnan(0.0) ? _2330 : (isnan(_2330) ? 0.0 : max(_2330, 0.0));
    float _4562 = isnan(0.0) ? _2333 : (isnan(_2333) ? 0.0 : max(_2333, 0.0));
    float _2338 = (isnan(1.0) ? _4551 : (isnan(_4551) ? 1.0 : min(_4551, 1.0))) * 0.3183098733425140380859375;
    float _2340 = (isnan(1.0) ? _4562 : (isnan(_4562) ? 1.0 : min(_4562, 1.0))) * 0.3183098733425140380859375;
    float _2347 = ((cbLight._m0[_2296].x * _2302) * _2340) + (((cbLight._m0[_2306].x * _2271) * _2315) * _2338);
    float _2348 = ((_2302 * cbLight._m0[_2296].y) * _2340) + (((cbLight._m0[_2306].y * _2272) * _2315) * _2338);
    float _2349 = ((_2302 * cbLight._m0[_2296].z) * _2340) + (((cbLight._m0[_2306].z * _2273) * _2315) * _2338);
    uvec4 _2353 = floatBitsToUint(cbLight._m0[_2279 + 12u]);
    bool _2355 = _2353.x == 0u;
    float _2366;
    float _2368;
    float _2370;
    if (_2355)
    {
        _2366 = _2347;
        _2368 = _2348;
        _2370 = _2349;
    }
    else
    {
        uint _2374 = _2279 + 6u;
        float _2390 = (dot(vec3(cbLight._m0[_2279 + 2u].xyz), vec3(_1059, _1060, _1061)) * 0.5) + 0.5;
        float _2391 = _2390 * _2390;
        float _4573 = isnan(0.0) ? _2391 : (isnan(_2391) ? 0.0 : max(_2391, 0.0));
        float _2392 = isnan(1.0) ? _4573 : (isnan(_4573) ? 1.0 : min(_4573, 1.0));
        float _2393 = isnan(1.0) ? _2294 : (isnan(_2294) ? 1.0 : min(_2294, 1.0));
        _2366 = (((cbLight._m0[_2374].x * 0.3183098733425140380859375) * _2392) * _2393) + _2347;
        _2368 = (((cbLight._m0[_2374].y * 0.3183098733425140380859375) * _2392) * _2393) + _2348;
        _2370 = (((cbLight._m0[_2374].z * 0.3183098733425140380859375) * _2392) * _2393) + _2349;
    }
    bool _2373 = _2353.y == 0u;
    float _2411;
    float _2413;
    float _2415;
    if (_2373)
    {
        _2411 = _2366;
        _2413 = _2368;
        _2415 = _2370;
    }
    else
    {
        uint _2584 = _2279 + 7u;
        float _2600 = (dot(vec3(cbLight._m0[_2279 + 3u].xyz), vec3(_1059, _1060, _1061)) * 0.5) + 0.5;
        float _2601 = _2600 * _2600;
        float _4589 = isnan(0.0) ? _2601 : (isnan(_2601) ? 0.0 : max(_2601, 0.0));
        float _2602 = isnan(1.0) ? _4589 : (isnan(_4589) ? 1.0 : min(_4589, 1.0));
        float _2603 = isnan(1.0) ? _2295 : (isnan(_2295) ? 1.0 : min(_2295, 1.0));
        _2411 = (((cbLight._m0[_2584].x * 0.3183098733425140380859375) * _2602) * _2603) + _2366;
        _2413 = (((cbLight._m0[_2584].y * 0.3183098733425140380859375) * _2602) * _2603) + _2368;
        _2415 = (((cbLight._m0[_2584].z * 0.3183098733425140380859375) * _2602) * _2603) + _2370;
    }
    uint _2418 = _2279 + 8u;
    float _2431 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2279].w)) * _1063) * 0.949999988079071044921875);
    float _2432 = _2431 * _2431;
    float _2433 = cbLight._m0[_2279].x + _1140;
    float _2434 = cbLight._m0[_2279].y + _1141;
    float _2435 = cbLight._m0[_2279].z + _1142;
    float _2439 = inversesqrt(dot(vec3(_2433, _2434, _2435), vec3(_2433, _2434, _2435)));
    float _2440 = _2439 * _2433;
    float _2441 = _2439 * _2434;
    float _2442 = _2439 * _2435;
    float _2443 = dot(vec3(_1059, _1060, _1061), vec3(cbLight._m0[_2279].xyz));
    float _4605 = isnan(0.0) ? _2443 : (isnan(_2443) ? 0.0 : max(_2443, 0.0));
    float _2446 = isnan(1.0) ? _4605 : (isnan(_4605) ? 1.0 : min(_4605, 1.0));
    float _4616 = isnan(0.0) ? _1227 : (isnan(_1227) ? 0.0 : max(_1227, 0.0));
    float _2447 = isnan(1.0) ? _4616 : (isnan(_4616) ? 1.0 : min(_4616, 1.0));
    float _2448 = dot(vec3(_1059, _1060, _1061), vec3(_2440, _2441, _2442));
    float _4627 = isnan(0.0) ? _2448 : (isnan(_2448) ? 0.0 : max(_2448, 0.0));
    float _2451 = isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0));
    float _2452 = dot(vec3(cbLight._m0[_2279].xyz), vec3(_2440, _2441, _2442));
    float _4638 = isnan(0.0) ? _2452 : (isnan(_2452) ? 0.0 : max(_2452, 0.0));
    float _2456 = _2432 * _2432;
    float _2460 = ((_2451 * _2451) * (_2456 + (-1.0))) + 1.0;
    float _2468 = exp2(log2(1.0 - (isnan(1.0) ? _4638 : (isnan(_4638) ? 1.0 : min(_4638, 1.0)))) * 5.0);
    float _2469 = 0.959999978542327880859375 - _1208;
    float _2471 = 0.959999978542327880859375 - _1209;
    float _2472 = 0.959999978542327880859375 - _1210;
    float _2479 = 1.0 - _2432;
    float _2490 = (0.5 / (((_2447 * ((_2446 * _2479) + _2432)) + 9.9999999392252902907785028219223e-09) + (((_2447 * _2479) + _2432) * _2446))) * _2446;
    float _4649 = isnan(0.0) ? _2490 : (isnan(_2490) ? 0.0 : max(_2490, 0.0));
    float _2492 = (isnan(1.0) ? _4649 : (isnan(_4649) ? 1.0 : min(_4649, 1.0))) * (_2456 / ((_2460 * _2460) * 3.141590118408203125));
    uint _2506 = _2279 + 9u;
    float _2517 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2319].w)) * _1063) * 0.949999988079071044921875);
    float _2518 = _2517 * _2517;
    float _2519 = cbLight._m0[_2319].x + _1140;
    float _2520 = cbLight._m0[_2319].y + _1141;
    float _2521 = cbLight._m0[_2319].z + _1142;
    float _2525 = inversesqrt(dot(vec3(_2519, _2520, _2521), vec3(_2519, _2520, _2521)));
    float _2526 = _2525 * _2519;
    float _2527 = _2525 * _2520;
    float _2528 = _2525 * _2521;
    float _2529 = dot(vec3(_1059, _1060, _1061), vec3(cbLight._m0[_2319].xyz));
    float _4660 = isnan(0.0) ? _2529 : (isnan(_2529) ? 0.0 : max(_2529, 0.0));
    float _2532 = isnan(1.0) ? _4660 : (isnan(_4660) ? 1.0 : min(_4660, 1.0));
    float _2533 = dot(vec3(_1059, _1060, _1061), vec3(_2526, _2527, _2528));
    float _4671 = isnan(0.0) ? _2533 : (isnan(_2533) ? 0.0 : max(_2533, 0.0));
    float _2536 = isnan(1.0) ? _4671 : (isnan(_4671) ? 1.0 : min(_4671, 1.0));
    float _2537 = dot(vec3(cbLight._m0[_2319].xyz), vec3(_2526, _2527, _2528));
    float _4682 = isnan(0.0) ? _2537 : (isnan(_2537) ? 0.0 : max(_2537, 0.0));
    float _2541 = _2518 * _2518;
    float _2545 = ((_2536 * _2536) * (_2541 + (-1.0))) + 1.0;
    float _2552 = exp2(log2(1.0 - (isnan(1.0) ? _4682 : (isnan(_4682) ? 1.0 : min(_4682, 1.0)))) * 5.0);
    float _2559 = 1.0 - _2518;
    float _2569 = (0.5 / (((_2447 * ((_2532 * _2559) + _2518)) + 9.9999999392252902907785028219223e-09) + (((_2447 * _2559) + _2518) * _2532))) * _2532;
    float _4693 = isnan(0.0) ? _2569 : (isnan(_2569) ? 0.0 : max(_2569, 0.0));
    float _2571 = (isnan(1.0) ? _4693 : (isnan(_4693) ? 1.0 : min(_4693, 1.0))) * (_2541 / ((_2545 * _2545) * 3.141590118408203125));
    float _2581 = (((((_2552 * _2469) + _1211) * cbLight._m0[_2506].x) * _2571) * _2302) + ((((cbLight._m0[_2418].x * _2271) * ((_2468 * _2469) + _1211)) * _2492) * _2315);
    float _2582 = (((((_2552 * _2471) + _1213) * cbLight._m0[_2506].y) * _2571) * _2302) + ((((cbLight._m0[_2418].y * _2272) * ((_2468 * _2471) + _1213)) * _2492) * _2315);
    float _2583 = (((((_2552 * _2472) + _1214) * cbLight._m0[_2506].z) * _2571) * _2302) + ((((cbLight._m0[_2418].z * _2273) * ((_2468 * _2472) + _1214)) * _2492) * _2315);
    float _2645;
    float _2647;
    float _2649;
    if (_2355)
    {
        _2645 = _2581;
        _2647 = _2582;
        _2649 = _2583;
    }
    else
    {
        uint _2651 = _2279 + 2u;
        uint _2655 = _2279 + 10u;
        float _2669 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2651].w)) * _1063) * 0.949999988079071044921875);
        float _2670 = _2669 * _2669;
        float _2671 = cbLight._m0[_2651].x + _1140;
        float _2672 = cbLight._m0[_2651].y + _1141;
        float _2673 = cbLight._m0[_2651].z + _1142;
        float _2677 = inversesqrt(dot(vec3(_2671, _2672, _2673), vec3(_2671, _2672, _2673)));
        float _2678 = _2677 * _2671;
        float _2679 = _2677 * _2672;
        float _2680 = _2677 * _2673;
        float _2681 = dot(vec3(_1059, _1060, _1061), vec3(cbLight._m0[_2651].xyz));
        float _4704 = isnan(0.0) ? _2681 : (isnan(_2681) ? 0.0 : max(_2681, 0.0));
        float _2684 = isnan(1.0) ? _4704 : (isnan(_4704) ? 1.0 : min(_4704, 1.0));
        float _2685 = dot(vec3(_1059, _1060, _1061), vec3(_2678, _2679, _2680));
        float _4715 = isnan(0.0) ? _2685 : (isnan(_2685) ? 0.0 : max(_2685, 0.0));
        float _2688 = isnan(1.0) ? _4715 : (isnan(_4715) ? 1.0 : min(_4715, 1.0));
        float _2689 = dot(vec3(cbLight._m0[_2651].xyz), vec3(_2678, _2679, _2680));
        float _4726 = isnan(0.0) ? _2689 : (isnan(_2689) ? 0.0 : max(_2689, 0.0));
        float _2693 = _2670 * _2670;
        float _2697 = ((_2688 * _2688) * (_2693 + (-1.0))) + 1.0;
        float _2704 = exp2(log2(1.0 - (isnan(1.0) ? _4726 : (isnan(_4726) ? 1.0 : min(_4726, 1.0)))) * 5.0);
        float _2711 = 1.0 - _2670;
        float _2721 = (0.5 / (((_2447 * ((_2684 * _2711) + _2670)) + 9.9999999392252902907785028219223e-09) + (((_2447 * _2711) + _2670) * _2684))) * _2684;
        float _4737 = isnan(0.0) ? _2721 : (isnan(_2721) ? 0.0 : max(_2721, 0.0));
        float _2723 = (isnan(1.0) ? _4737 : (isnan(_4737) ? 1.0 : min(_4737, 1.0))) * (_2693 / ((_2697 * _2697) * 3.141590118408203125));
        float _2724 = isnan(1.0) ? _2294 : (isnan(_2294) ? 1.0 : min(_2294, 1.0));
        _2645 = (((((_2704 * _2469) + _1211) * cbLight._m0[_2655].x) * _2723) * _2724) + _2581;
        _2647 = (((((_2704 * _2471) + _1213) * cbLight._m0[_2655].y) * _2723) * _2724) + _2582;
        _2649 = (((((_2704 * _2472) + _1214) * cbLight._m0[_2655].z) * _2723) * _2724) + _2583;
    }
    float _2759;
    float _2761;
    float _2763;
    if (_2373)
    {
        _2759 = _2645;
        _2761 = _2647;
        _2763 = _2649;
    }
    else
    {
        uint _2770 = _2279 + 3u;
        uint _2774 = _2279 + 11u;
        float _2788 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2770].w)) * _1063) * 0.949999988079071044921875);
        float _2789 = _2788 * _2788;
        float _2790 = cbLight._m0[_2770].x + _1140;
        float _2791 = cbLight._m0[_2770].y + _1141;
        float _2792 = cbLight._m0[_2770].z + _1142;
        float _2796 = inversesqrt(dot(vec3(_2790, _2791, _2792), vec3(_2790, _2791, _2792)));
        float _2797 = _2796 * _2790;
        float _2798 = _2796 * _2791;
        float _2799 = _2796 * _2792;
        float _2800 = dot(vec3(_1059, _1060, _1061), vec3(cbLight._m0[_2770].xyz));
        float _4753 = isnan(0.0) ? _2800 : (isnan(_2800) ? 0.0 : max(_2800, 0.0));
        float _2803 = isnan(1.0) ? _4753 : (isnan(_4753) ? 1.0 : min(_4753, 1.0));
        float _2804 = dot(vec3(_1059, _1060, _1061), vec3(_2797, _2798, _2799));
        float _4764 = isnan(0.0) ? _2804 : (isnan(_2804) ? 0.0 : max(_2804, 0.0));
        float _2807 = isnan(1.0) ? _4764 : (isnan(_4764) ? 1.0 : min(_4764, 1.0));
        float _2808 = dot(vec3(cbLight._m0[_2770].xyz), vec3(_2797, _2798, _2799));
        float _4775 = isnan(0.0) ? _2808 : (isnan(_2808) ? 0.0 : max(_2808, 0.0));
        float _2812 = _2789 * _2789;
        float _2816 = ((_2807 * _2807) * (_2812 + (-1.0))) + 1.0;
        float _2823 = exp2(log2(1.0 - (isnan(1.0) ? _4775 : (isnan(_4775) ? 1.0 : min(_4775, 1.0)))) * 5.0);
        float _2830 = 1.0 - _2789;
        float _2840 = (0.5 / (((_2447 * ((_2803 * _2830) + _2789)) + 9.9999999392252902907785028219223e-09) + (((_2447 * _2830) + _2789) * _2803))) * _2803;
        float _4786 = isnan(0.0) ? _2840 : (isnan(_2840) ? 0.0 : max(_2840, 0.0));
        float _2842 = (isnan(1.0) ? _4786 : (isnan(_4786) ? 1.0 : min(_4786, 1.0))) * (_2812 / ((_2816 * _2816) * 3.141590118408203125));
        float _2843 = isnan(1.0) ? _2295 : (isnan(_2295) ? 1.0 : min(_2295, 1.0));
        _2759 = (((((_2823 * _2469) + _1211) * cbLight._m0[_2774].x) * _2842) * _2843) + _2645;
        _2761 = (((((_2823 * _2471) + _1213) * cbLight._m0[_2774].y) * _2842) * _2843) + _2647;
        _2763 = (((((_2823 * _2472) + _1214) * cbLight._m0[_2774].z) * _2842) * _2843) + _2649;
    }
    float _2978;
    float _2980;
    float _2982;
    float _2984;
    float _2986;
    float _2988;
    if (_2277.y == 0u)
    {
        float _2918 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2919 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2918;
        float _2920 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2918;
        float _2921 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2918;
        uvec4 _2933 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2934 = _2933.x;
        uint _2945 = uint((float(_2933.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1149) / _2934))) + floor(float(uint(cbSceneParam._m0[85u].x * _1148) / _2934)));
        float _2955 = (log2(_2921 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2956 = isnan(0.0) ? _2955 : (isnan(_2955) ? 0.0 : max(_2955, 0.0));
        uint _2959 = uint(isnan(14.0) ? _2956 : (isnan(_2956) ? 14.0 : min(_2956, 14.0)));
        uvec4 _2964 = texelFetch(g_lightClusterGridBuffer, int(((_2959 << 2u) + (_2945 << 6u)) >> 2u));
        uint _2965 = _2964.x;
        uint _2966 = _2933.z;
        float _3068;
        float _3070;
        float _3072;
        float _3074;
        float _3076;
        float _3078;
        if (((((1u << ((_2966 >> 4u) & 15u)) + 4294967295u) & _2965) == 0u) || ((_2966 & 240u) == 0u))
        {
            _3068 = 0.0;
            _3070 = 0.0;
            _3072 = 0.0;
            _3074 = 0.0;
            _3076 = 0.0;
            _3078 = 0.0;
        }
        else
        {
            float _3069;
            float _3071;
            float _3073;
            float _3075;
            float _3077;
            float _3079;
            float _3213 = 0.0;
            float _3214 = 0.0;
            float _3215 = 0.0;
            float _3216 = 0.0;
            float _3217 = 0.0;
            float _3218 = 0.0;
            uint _3219 = 0u;
            uint _3228;
            bool _3229;
            for (;;)
            {
                _3228 = texelFetch(g_lightClassification, int((((_2959 << 5u) + (_2945 << 9u)) + (_3219 << 2u)) >> 2u)).x;
                _3229 = _3228 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3229)
                {
                    frontier_phi_61_pred = _3213;
                    frontier_phi_61_pred_1 = _3218;
                    frontier_phi_61_pred_2 = _3217;
                    frontier_phi_61_pred_3 = _3216;
                    frontier_phi_61_pred_4 = _3215;
                    frontier_phi_61_pred_5 = _3214;
                }
                else
                {
                    float _3337;
                    float _3338;
                    float _3339;
                    float _3340;
                    float _3341;
                    float _3342;
                    uint _3343;
                    _3337 = _3213;
                    _3338 = _3214;
                    _3339 = _3215;
                    _3340 = _3216;
                    _3341 = _3217;
                    _3342 = _3218;
                    _3343 = _3228;
                    float _3269;
                    float _3270;
                    float _3271;
                    float _3272;
                    float _3273;
                    float _3274;
                    for (;;)
                    {
                        uint _3347 = uint(findLSB(_3343)) + (_3219 << 5u);
                        uint _3344 = (_3343 + 4294967295u) & _3343;
                        uint _3349 = _3347 * 48u;
                        vec4 _3363 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3349)).x, texelFetch(g_PointLightRenderingBuffer, int(_3349 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3349 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3349 + 3u)).x));
                        uint _3369 = (_3347 * 48u) + 4u;
                        vec4 _3382 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3369)).x, texelFetch(g_PointLightRenderingBuffer, int(_3369 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3369 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3369 + 3u)).x));
                        uint _3388 = (_3347 * 48u) + 8u;
                        vec3 _3399 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3388)).x, texelFetch(g_PointLightRenderingBuffer, int(_3388 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3388 + 2u)).x));
                        float _3403 = _3363.x - _2919;
                        float _3404 = _3363.y - _2920;
                        float _3405 = _3363.z - _2921;
                        float _3406 = dot(vec3(_3403, _3404, _3405), vec3(_3403, _3404, _3405));
                        float _3409 = inversesqrt(_3406);
                        float _3410 = _3409 * _3403;
                        float _3411 = _3409 * _3404;
                        float _3412 = _3409 * _3405;
                        float _3413 = dot(vec3(_1167, _1170, _1173), vec3(_3410, _3411, _3412));
                        float _3418 = 1.0 - (_3406 * _3363.w);
                        float _4812 = isnan(0.0) ? _3418 : (isnan(_3418) ? 0.0 : max(_3418, 0.0));
                        float _3419 = isnan(1.0) ? _4812 : (isnan(_4812) ? 1.0 : min(_4812, 1.0));
                        float _3420 = sqrt(_3406) * _3382.w;
                        float _3423 = 1.39999997615814208984375 / (_3420 + 1.39999997615814208984375);
                        float _3424 = _3423 * _3423;
                        float _3427 = ((1.0 - _3424) * _3413) + _3424;
                        float _3430 = _3420 * _3420;
                        float _3434 = ((isnan(0.0) ? _3427 : (isnan(_3427) ? 0.0 : max(_3427, 0.0))) * _3419) / ((_3430 * 0.699999988079071044921875) + 1.0);
                        float _3438 = (-0.0) - _2919;
                        float _3439 = (-0.0) - _2920;
                        float _3440 = (-0.0) - _2921;
                        float _3444 = inversesqrt(dot(vec3(_3438, _3439, _3440), vec3(_3438, _3439, _3440)));
                        float _3445 = _3444 * _3438;
                        float _3446 = _3444 * _3439;
                        float _3447 = _3444 * _3440;
                        float _3455 = exp2(log2(1.0 / ((_3430 * 3.5) + 5.0)) * 0.25);
                        float _3456 = 1.0 - _1242;
                        float _3463 = sqrt(1.0 - ((1.0 - (_3456 * _3456)) * (1.0 - (_3455 * _3455))));
                        float _3464 = _3463 * _3463;
                        float _3465 = _3464 * _3464;
                        float _3466 = _3445 + _3410;
                        float _3467 = _3446 + _3411;
                        float _3468 = _3447 + _3412;
                        float _3472 = inversesqrt(dot(vec3(_3466, _3467, _3468), vec3(_3466, _3467, _3468)));
                        float _3476 = dot(vec3(_1167, _1170, _1173), vec3(_3445, _3446, _3447));
                        float _4828 = isnan(0.0) ? _3476 : (isnan(_3476) ? 0.0 : max(_3476, 0.0));
                        float _3479 = isnan(1.0) ? _4828 : (isnan(_4828) ? 1.0 : min(_4828, 1.0));
                        float _3480 = dot(vec3(_1167, _1170, _1173), vec3(_3472 * _3466, _3472 * _3467, _3472 * _3468));
                        float _4839 = isnan(0.0) ? _3480 : (isnan(_3480) ? 0.0 : max(_3480, 0.0));
                        float _3483 = isnan(1.0) ? _4839 : (isnan(_4839) ? 1.0 : min(_4839, 1.0));
                        float _3487 = ((_3483 * _3483) * (_3465 + (-1.0))) + 1.0;
                        float _3488 = _3423 * _3464;
                        float _3489 = _3488 * _3488;
                        float _3492 = ((1.0 - _3489) * _3413) + _3489;
                        float _4850 = isnan(0.0) ? _3492 : (isnan(_3492) ? 0.0 : max(_3492, 0.0));
                        float _3493 = isnan(1.0) ? _4850 : (isnan(_4850) ? 1.0 : min(_4850, 1.0));
                        float _3494 = 1.0 - _3464;
                        float _3504 = (0.5 / (((_3493 * ((_3479 * _3494) + _3464)) + 9.9999999392252902907785028219223e-09) + (((_3493 * _3494) + _3464) * _3479))) * _3493;
                        float _4861 = isnan(0.0) ? _3504 : (isnan(_3504) ? 0.0 : max(_3504, 0.0));
                        float _3515 = (((_3465 * 3.1415927410125732421875) * (isnan(1.0) ? _4861 : (isnan(_4861) ? 1.0 : min(_4861, 1.0)))) / ((_3487 * _3487) * ((_3430 * 2.1991131305694580078125) + 3.141590118408203125))) * _3419;
                        _3272 = (_3434 * _3382.x) + _3340;
                        _3273 = (_3434 * _3382.y) + _3341;
                        _3274 = (_3434 * _3382.z) + _3342;
                        _3269 = (_3515 * _3399.x) + _3337;
                        _3270 = (_3515 * _3399.y) + _3338;
                        _3271 = (_3515 * _3399.z) + _3339;
                        if (_3344 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3337 = _3269;
                            _3338 = _3270;
                            _3339 = _3271;
                            _3340 = _3272;
                            _3341 = _3273;
                            _3342 = _3274;
                            _3343 = _3344;
                        }
                    }
                    frontier_phi_61_pred = _3269;
                    frontier_phi_61_pred_1 = _3274;
                    frontier_phi_61_pred_2 = _3273;
                    frontier_phi_61_pred_3 = _3272;
                    frontier_phi_61_pred_4 = _3271;
                    frontier_phi_61_pred_5 = _3270;
                }
                _3069 = frontier_phi_61_pred;
                _3079 = frontier_phi_61_pred_1;
                _3077 = frontier_phi_61_pred_2;
                _3075 = frontier_phi_61_pred_3;
                _3073 = frontier_phi_61_pred_4;
                _3071 = frontier_phi_61_pred_5;
                uint _3220 = _3219 + 1u;
                if (_3220 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3213 = _3069;
                    _3214 = _3071;
                    _3215 = _3073;
                    _3216 = _3075;
                    _3217 = _3077;
                    _3218 = _3079;
                    _3219 = _3220;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3068 = _3069;
            _3070 = _3071;
            _3072 = _3073;
            _3074 = _3075;
            _3076 = _3077;
            _3078 = _3079;
        }
        uvec4 _3082 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3083 = _3082.z;
        uint _3085 = (_3083 >> 8u) & 15u;
        float _3181;
        float _3183;
        float _3185;
        float _3187;
        float _3189;
        float _3191;
        if (((4294967295u << _3085) & _2965) == 0u)
        {
            _3181 = _3068;
            _3183 = _3070;
            _3185 = _3072;
            _3187 = _3074;
            _3189 = _3076;
            _3191 = _3078;
        }
        else
        {
            float _3206 = inversesqrt(dot(vec3(_2919, _2920, _2921), vec3(_2919, _2920, _2921)));
            float _3207 = _3206 * _2919;
            float _3208 = _3206 * _2920;
            float _3209 = _3206 * _2921;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_3085 < ((_3083 >> 12u) & 15u))
            {
                float _3182;
                float _3184;
                float _3186;
                float _3188;
                float _3190;
                float _3192;
                float _3320 = _3068;
                float _3321 = _3070;
                float _3322 = _3072;
                float _3323 = _3074;
                float _3324 = _3076;
                float _3325 = _3078;
                uint _3326 = _3085;
                uint _3335;
                bool _3336;
                for (;;)
                {
                    _3335 = texelFetch(g_lightClassification, int((((_2959 << 5u) + (_2945 << 9u)) + (_3326 << 2u)) >> 2u)).x;
                    _3336 = _3335 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3336)
                    {
                        frontier_phi_67_pred = _3323;
                        frontier_phi_67_pred_1 = _3324;
                        frontier_phi_67_pred_2 = _3325;
                        frontier_phi_67_pred_3 = _3322;
                        frontier_phi_67_pred_4 = _3321;
                        frontier_phi_67_pred_5 = _3320;
                    }
                    else
                    {
                        float _3520;
                        float _3521;
                        float _3522;
                        float _3523;
                        float _3524;
                        float _3525;
                        float _3813;
                        float _3814;
                        float _3815;
                        float _3816;
                        float _3817;
                        float _3818;
                        float _3533 = _3320;
                        float _3534 = _3321;
                        float _3535 = _3322;
                        float _3536 = _3323;
                        float _3537 = _3324;
                        float _3538 = _3325;
                        uint _3539 = _3335;
                        uint _3540;
                        vec4 _3565;
                        float _3566;
                        vec4 _3581;
                        vec3 _3593;
                        vec4 _3608;
                        vec4 _3623;
                        float _3669;
                        bool _3670;
                        for (;;)
                        {
                            uint _3550 = ((_3326 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3539));
                            _3540 = (_3539 + 4294967295u) & _3539;
                            uint _3552 = _3550 * 40u;
                            _3565 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3552)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3552 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3552 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3552 + 3u)).x));
                            _3566 = _3565.w;
                            uint _3568 = (_3550 * 40u) + 4u;
                            _3581 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3568)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3568 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3568 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3568 + 3u)).x));
                            uint _3583 = (_3550 * 40u) + 8u;
                            _3593 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3583)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3583 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3583 + 2u)).x));
                            uint _3595 = (_3550 * 40u) + 16u;
                            _3608 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3595)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3595 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3595 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3595 + 3u)).x));
                            uint _3610 = (_3550 * 40u) + 20u;
                            _3623 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3610)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3610 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3610 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3610 + 3u)).x));
                            uint _3625 = (_3550 * 40u) + 24u;
                            vec4 _3638 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3625)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3625 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3625 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3625 + 3u)).x));
                            uint _3644 = (_3550 * 40u) + 28u;
                            vec4 _3657 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3644)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3644 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3644 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3644 + 3u)).x));
                            _3669 = fma(_2921, _3657.z, fma(_2920, _3657.y, _3657.x * _2919)) + _3657.w;
                            _3670 = !((fma(_2921, _3638.z, fma(_2920, _3638.y, _3638.x * _2919)) + _3638.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3670)
                            {
                                float _3697 = _3565.x - _2919;
                                float _3698 = _3565.y - _2920;
                                float _3699 = _3565.z - _2921;
                                float _3700 = dot(vec3(_3697, _3698, _3699), vec3(_3697, _3698, _3699));
                                float _3703 = inversesqrt(_3700);
                                float _3704 = _3703 * _3697;
                                float _3705 = _3703 * _3698;
                                float _3706 = _3703 * _3699;
                                float _3710 = 1.0 - (_3700 / (_3566 * _3566));
                                float _4872 = isnan(0.0) ? _3710 : (isnan(_3710) ? 0.0 : max(_3710, 0.0));
                                float _3711 = isnan(1.0) ? _4872 : (isnan(_4872) ? 1.0 : min(_4872, 1.0));
                                float _3715 = sqrt(_3700) * _3581.w;
                                float _3717 = 1.39999997615814208984375 / (_3715 + 1.39999997615814208984375);
                                float _3718 = _3717 * _3717;
                                float _3721 = ((1.0 - _3718) * dot(vec3(_3704, _3705, _3706), vec3(_1167, _1170, _1173))) + _3718;
                                float _3724 = _3715 * _3715;
                                float _3728 = (fma(_2921, _3608.z, fma(_2920, _3608.y, _3608.x * _2919)) + _3608.w) / _3669;
                                float _3729 = (fma(_2921, _3623.z, fma(_2920, _3623.y, _3623.x * _2919)) + _3623.w) / _3669;
                                float _3733 = 1.0 - dot(vec2(_3728, _3729), vec2(_3728, _3729));
                                float _4888 = isnan(0.0) ? _3733 : (isnan(_3733) ? 0.0 : max(_3733, 0.0));
                                float _3734 = isnan(1.0) ? _4888 : (isnan(_4888) ? 1.0 : min(_4888, 1.0));
                                float _3735 = _3734 * (((isnan(0.0) ? _3721 : (isnan(_3721) ? 0.0 : max(_3721, 0.0))) * _3711) / ((_3724 * 0.699999988079071044921875) + 1.0));
                                float _3747 = exp2(log2(1.0 / ((_3724 * 3.5) + 5.0)) * 0.25);
                                float _3748 = 1.0 - _1242;
                                float _3755 = sqrt(1.0 - ((1.0 - (_3748 * _3748)) * (1.0 - (_3747 * _3747))));
                                float _3756 = _3755 * _3755;
                                float _3757 = _3756 * _3756;
                                float _3758 = _3704 - _3207;
                                float _3759 = _3705 - _3208;
                                float _3760 = _3706 - _3209;
                                float _3764 = inversesqrt(dot(vec3(_3758, _3759, _3760), vec3(_3758, _3759, _3760)));
                                float _3768 = dot(vec3(_1167, _1170, _1173), vec3((-0.0) - _3207, (-0.0) - _3208, (-0.0) - _3209));
                                float _4899 = isnan(0.0) ? _3768 : (isnan(_3768) ? 0.0 : max(_3768, 0.0));
                                float _3771 = isnan(1.0) ? _4899 : (isnan(_4899) ? 1.0 : min(_4899, 1.0));
                                float _3772 = dot(vec3(_1167, _1170, _1173), vec3(_3764 * _3758, _3764 * _3759, _3764 * _3760));
                                float _4910 = isnan(0.0) ? _3772 : (isnan(_3772) ? 0.0 : max(_3772, 0.0));
                                float _3775 = isnan(1.0) ? _4910 : (isnan(_4910) ? 1.0 : min(_4910, 1.0));
                                float _3779 = ((_3775 * _3775) * (_3757 + (-1.0))) + 1.0;
                                float _3780 = _3717 * _3756;
                                float _3781 = _3780 * _3780;
                                float _3787 = ((1.0 - _3781) * dot(vec3(_1167, _1170, _1173), vec3(_3704, _3705, _3706))) + _3781;
                                float _4921 = isnan(0.0) ? _3787 : (isnan(_3787) ? 0.0 : max(_3787, 0.0));
                                float _3788 = isnan(1.0) ? _4921 : (isnan(_4921) ? 1.0 : min(_4921, 1.0));
                                float _3789 = 1.0 - _3756;
                                float _3799 = (0.5 / (((_3788 * ((_3771 * _3789) + _3756)) + 9.9999999392252902907785028219223e-09) + (((_3788 * _3789) + _3756) * _3771))) * _3788;
                                float _4932 = isnan(0.0) ? _3799 : (isnan(_3799) ? 0.0 : max(_3799, 0.0));
                                float _3809 = (_3734 * _3711) * (((_3757 * 3.1415927410125732421875) * (isnan(1.0) ? _4932 : (isnan(_4932) ? 1.0 : min(_4932, 1.0)))) / ((_3779 * _3779) * ((_3724 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3809 * _3593.x;
                                frontier_phi_73_pred_1 = _3809 * _3593.y;
                                frontier_phi_73_pred_2 = _3735 * _3581.z;
                                frontier_phi_73_pred_3 = _3735 * _3581.y;
                                frontier_phi_73_pred_4 = _3735 * _3581.x;
                                frontier_phi_73_pred_5 = _3809 * _3593.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3813 = frontier_phi_73_pred;
                            _3814 = frontier_phi_73_pred_1;
                            _3818 = frontier_phi_73_pred_2;
                            _3817 = frontier_phi_73_pred_3;
                            _3816 = frontier_phi_73_pred_4;
                            _3815 = frontier_phi_73_pred_5;
                            _3523 = _3816 + _3536;
                            _3524 = _3817 + _3537;
                            _3525 = _3818 + _3538;
                            _3520 = _3813 + _3533;
                            _3521 = _3814 + _3534;
                            _3522 = _3815 + _3535;
                            if (_3540 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3533 = _3520;
                                _3534 = _3521;
                                _3535 = _3522;
                                _3536 = _3523;
                                _3537 = _3524;
                                _3538 = _3525;
                                _3539 = _3540;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3523;
                        frontier_phi_67_pred_1 = _3524;
                        frontier_phi_67_pred_2 = _3525;
                        frontier_phi_67_pred_3 = _3522;
                        frontier_phi_67_pred_4 = _3521;
                        frontier_phi_67_pred_5 = _3520;
                    }
                    _3188 = frontier_phi_67_pred;
                    _3190 = frontier_phi_67_pred_1;
                    _3192 = frontier_phi_67_pred_2;
                    _3186 = frontier_phi_67_pred_3;
                    _3184 = frontier_phi_67_pred_4;
                    _3182 = frontier_phi_67_pred_5;
                    uint _3327 = _3326 + 1u;
                    if (_3327 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3320 = _3182;
                        _3321 = _3184;
                        _3322 = _3186;
                        _3323 = _3188;
                        _3324 = _3190;
                        _3325 = _3192;
                        _3326 = _3327;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3190;
                frontier_phi_55_56_ladder_1 = _3192;
                frontier_phi_55_56_ladder_2 = _3188;
                frontier_phi_55_56_ladder_3 = _3186;
                frontier_phi_55_56_ladder_4 = _3184;
                frontier_phi_55_56_ladder_5 = _3182;
            }
            else
            {
                frontier_phi_55_56_ladder = _3076;
                frontier_phi_55_56_ladder_1 = _3078;
                frontier_phi_55_56_ladder_2 = _3074;
                frontier_phi_55_56_ladder_3 = _3072;
                frontier_phi_55_56_ladder_4 = _3070;
                frontier_phi_55_56_ladder_5 = _3068;
            }
            _3181 = frontier_phi_55_56_ladder_5;
            _3183 = frontier_phi_55_56_ladder_4;
            _3185 = frontier_phi_55_56_ladder_3;
            _3187 = frontier_phi_55_56_ladder_2;
            _3189 = frontier_phi_55_56_ladder;
            _3191 = frontier_phi_55_56_ladder_1;
        }
        float _3196 = isnan(1.0) ? _1226 : (isnan(_1226) ? 1.0 : min(_1226, 1.0));
        _2978 = (_3196 * _3187) + _2411;
        _2980 = (_3196 * _3189) + _2413;
        _2982 = (_3196 * _3191) + _2415;
        _2984 = ((_3181 * _1211) * _3196) + _2759;
        _2986 = ((_3183 * _1213) * _3196) + _2761;
        _2988 = ((_3185 * _1214) * _3196) + _2763;
    }
    else
    {
        _2978 = _2411;
        _2980 = _2413;
        _2982 = _2415;
        _2984 = _2759;
        _2986 = _2761;
        _2988 = _2763;
    }
    float _4948 = isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0));
    float _4959 = isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0));
    float _4970 = isnan(0.0) ? _1203 : (isnan(_1203) ? 0.0 : max(_1203, 0.0));
    float _4981 = isnan(0.0) ? _1062 : (isnan(_1062) ? 0.0 : max(_1062, 0.0));
    float _3013 = cbInstanceData._m0[_1186 + 6u].w * (isnan(1.0) ? _4981 : (isnan(_4981) ? 1.0 : min(_4981, 1.0)));
    float _3018 = _1148 / cbSceneParam._m0[86u].x;
    float _3019 = _1149 / cbSceneParam._m0[86u].y;
    vec4 _3033 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3018, _3019, (log2((isnan(cbSceneParam._m0[77u].w) ? _1083 : (isnan(_1083) ? cbSceneParam._m0[77u].w : min(_1083, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3035 = _3033.x;
    float _3036 = _3033.y;
    float _3037 = _3033.z;
    float _3038 = _3033.w;
    float _3131;
    float _3133;
    float _3135;
    float _3137;
    if (_1083 > cbSceneParam._m0[78u].w)
    {
        float _3093 = isnan(_1083) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1083 : min(cbSceneParam._m0[80u].w, _1083));
        float _3094 = _3093 / _1083;
        float _3105 = _3094 * _1133;
        float _3106 = _1134 * _3094;
        float _3107 = (-0.0) - _3106;
        float _3109 = _3094 * _1135;
        float _3111 = (cbSceneParam._m0[77u].w * _3107) / _3093;
        float _3112 = _3111 + cbSceneParam._m0[79u].w;
        float _3113 = cbSceneParam._m0[79u].w - _3106;
        float _3119 = sqrt(((_3105 * _3105) + (_3106 * _3106)) + (_3109 * _3109));
        float _3122 = (1.0 - (cbSceneParam._m0[77u].w / _3093)) * _3119;
        float _3127 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3129 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3282;
        if (abs((_3107 - _3111) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3282 = ((((_3112 > 0.0) ? exp2(_3127 * _3112) : (2.0 - exp2(_3129 * _3112))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3122;
        }
        else
        {
            float _3242 = 1.0 / cbSceneParam._m0[80u].x;
            float _3243 = isnan(_3113) ? _3112 : (isnan(_3112) ? _3113 : max(_3112, _3113));
            float _3244 = isnan(_3113) ? _3112 : (isnan(_3112) ? _3113 : min(_3112, _3113));
            float _3253 = isnan(0.0) ? _3243 : (isnan(_3243) ? 0.0 : min(_3243, 0.0));
            float _3254 = isnan(0.0) ? _3244 : (isnan(_3244) ? 0.0 : min(_3244, 0.0));
            _3282 = ((abs(_3119 / _3107) * cbSceneParam._m0[80u].y) * ((((_3253 - _3254) * 2.0) - ((exp2(_3127 * (isnan(0.0) ? _3243 : (isnan(_3243) ? 0.0 : max(_3243, 0.0)))) - exp2(_3127 * (isnan(0.0) ? _3244 : (isnan(_3244) ? 0.0 : max(_3244, 0.0))))) * _3242)) - ((exp2(_3129 * _3253) - exp2(_3129 * _3254)) * _3242))) + (_3122 * cbSceneParam._m0[80u].z);
        }
        vec4 _3284 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3018, _3019, 1.0), 0.0);
        float _3293 = exp2((_3282 * (-1.44269502162933349609375)) * (1.0 - _3284.w));
        float _3294 = log2(_3293);
        float _3310 = log2(_3038);
        _3131 = (exp2(_3310 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3294 * cbSceneParam._m0[78u].x)) * _3284.x) / cbSceneParam._m0[78u].x)) + _3035;
        _3133 = (exp2(_3310 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3294 * cbSceneParam._m0[78u].y)) * _3284.y) / cbSceneParam._m0[78u].y)) + _3036;
        _3135 = (exp2(_3310 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3294 * cbSceneParam._m0[78u].z)) * _3284.z) / cbSceneParam._m0[78u].z)) + _3037;
        _3137 = _3293 * _3038;
    }
    else
    {
        _3131 = _3035;
        _3133 = _3036;
        _3135 = _3037;
        _3137 = _3038;
    }
    float _3149 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3150 = _3149 == 3.0;
    float _3151 = log2(_3137);
    float _3158 = exp2(_3151 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4948 : (isnan(_4948) ? 1.0 : min(_4948, 1.0))) * (_2978 + ((isnan(0.0) ? _1951 : (isnan(_1951) ? 0.0 : max(_1951, 0.0))) * _1226))) + ((_2984 + ((isnan(0.0) ? _2243 : (isnan(_2243) ? 0.0 : max(_2243, 0.0))) * _2030)) * cbPerFrame._m0[3u].x));
    float _3159 = exp2(_3151 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4959 : (isnan(_4959) ? 1.0 : min(_4959, 1.0))) * (_2980 + ((isnan(0.0) ? _1954 : (isnan(_1954) ? 0.0 : max(_1954, 0.0))) * _1226))) + ((_2986 + ((isnan(0.0) ? _2246 : (isnan(_2246) ? 0.0 : max(_2246, 0.0))) * _2030)) * cbPerFrame._m0[3u].x));
    float _3160 = exp2(_3151 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4970 : (isnan(_4970) ? 1.0 : min(_4970, 1.0))) * (_2982 + ((isnan(0.0) ? _1957 : (isnan(_1957) ? 0.0 : max(_1957, 0.0))) * _1226))) + ((_2988 + ((isnan(0.0) ? _2249 : (isnan(_2249) ? 0.0 : max(_2249, 0.0))) * _2030)) * cbPerFrame._m0[3u].x));
    float _3169 = (_3149 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3169 * (_3150 ? _3158 : (_3158 + (cbSceneParam._m0[72u].w * _3131)));
    SV_Target.y = _3169 * (_3150 ? _3159 : (_3159 + (cbSceneParam._m0[72u].w * _3133)));
    SV_Target.z = _3169 * (_3150 ? _3160 : (_3160 + (cbSceneParam._m0[72u].w * _3135)));
    SV_Target.w = _3013;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3013;
}


