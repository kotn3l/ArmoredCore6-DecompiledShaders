#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_23;
layout(set = 0, binding = 11) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_24;
layout(set = 0, binding = 12) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_4;
layout(set = 0, binding = 13) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_6;
layout(set = 0, binding = 14) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_7;
layout(set = 0, binding = 15) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_14;
layout(set = 0, binding = 3) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_16;
layout(set = 0, binding = 4) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_17;
layout(set = 0, binding = 5) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_18;
layout(set = 0, binding = 6) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_19;
layout(set = 0, binding = 7) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_20;
layout(set = 0, binding = 9) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_22;
layout(set = 0, binding = 17) uniform texture2DArray C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_0;
layout(set = 0, binding = 18) uniform texture2DArray C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in float TEXCOORD_8;
layout(location = 7, component = 1) in float TEXCOORD_9;
layout(location = 7, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1596;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _234 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _235 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _236 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _242 = inversesqrt(dot(vec3(_234, _235, _236), vec3(_234, _235, _236)));
    float _249 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _256 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _319 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _323 = _319.z;
    float _336 = exp2(log2((1.0 - _323) * cbMtdParam._m0[26u].z) * cbMtdParam._m0[25u].w);
    float _337 = isnan(0.0) ? _336 : (isnan(_336) ? 0.0 : max(_336, 0.0));
    float _338 = isnan(1.0) ? _337 : (isnan(_337) ? 1.0 : min(_337, 1.0));
    vec4 _355 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w));
    float _367 = exp2(log2(_355.w * cbMtdParam._m0[29u].y) * cbMtdParam._m0[23u].x);
    float _368 = isnan(0.0) ? _367 : (isnan(_367) ? 0.0 : max(_367, 0.0));
    float _369 = isnan(1.0) ? _368 : (isnan(_368) ? 1.0 : min(_368, 1.0));
    float _378 = exp2(log2(cbMtdParam._m0[23u].y * _323) * cbMtdParam._m0[22u].y);
    float _379 = isnan(0.0) ? _378 : (isnan(_378) ? 0.0 : max(_378, 0.0));
    float _380 = isnan(1.0) ? _379 : (isnan(_379) ? 1.0 : min(_379, 1.0));
    vec4 _392 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _395 = _392.y;
    float _398 = (_392.x + (-0.02500000037252902984619140625)) * 8.0;
    float _402 = roundEven(5.0 - _398);
    float _403 = isnan(0.0) ? _402 : (isnan(_402) ? 0.0 : max(_402, 0.0));
    float _404 = isnan(4.0) ? _403 : (isnan(_403) ? 4.0 : min(_403, 4.0));
    float _416 = floor(_404);
    vec4 _419 = texture(sampler2DArray(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_0, SS_DiffuseMap), vec3((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w, _416));
    float _212[6];
    float _213[6];
    float _214[6];
    _212[0u] = cbMtdParam._m0[17u].x;
    _213[0u] = cbMtdParam._m0[17u].y;
    _214[0u] = cbMtdParam._m0[17u].z;
    _212[1u] = cbMtdParam._m0[15u].x;
    _213[1u] = cbMtdParam._m0[15u].y;
    _214[1u] = cbMtdParam._m0[15u].z;
    _212[2u] = cbMtdParam._m0[14u].x;
    _213[2u] = cbMtdParam._m0[14u].y;
    _214[2u] = cbMtdParam._m0[14u].z;
    _212[3u] = cbMtdParam._m0[13u].x;
    _213[3u] = cbMtdParam._m0[13u].y;
    _214[3u] = cbMtdParam._m0[13u].z;
    _212[4u] = cbMtdParam._m0[12u].x;
    _213[4u] = cbMtdParam._m0[12u].y;
    _214[4u] = cbMtdParam._m0[12u].z;
    _212[5u] = cbMtdParam._m0[18u].x;
    _213[5u] = cbMtdParam._m0[18u].y;
    _214[5u] = cbMtdParam._m0[18u].z;
    float _483 = roundEven(_398);
    float _484 = isnan(0.0) ? _483 : (isnan(_483) ? 0.0 : max(_483, 0.0));
    uint _486 = uint(int(isnan(5.0) ? _484 : (isnan(_484) ? 5.0 : min(_484, 5.0))));
    vec4 _516 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _527 = cbMtdParam._m0[9u].x * _516.x;
    float _528 = cbMtdParam._m0[9u].y * _516.y;
    float _529 = cbMtdParam._m0[9u].z * _516.z;
    float _536 = ((((((_212[_486] - cbMtdParam._m0[10u].x) * _395) + cbMtdParam._m0[10u].x) * _419.x) - _527) * _380) + _527;
    float _537 = ((((((_213[_486] - cbMtdParam._m0[10u].y) * _395) + cbMtdParam._m0[10u].y) * _419.y) - _528) * _380) + _528;
    float _538 = ((((((_214[_486] - cbMtdParam._m0[10u].z) * _395) + cbMtdParam._m0[10u].z) * _419.z) - _529) * _380) + _529;
    float _544 = exp2(log2(_319.w) * cbMtdParam._m0[23u].w);
    vec4 _557 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _577 = (((cbMtdParam._m0[16u].x * _557.x) - _536) * _544) + _536;
    float _578 = (((cbMtdParam._m0[16u].y * _557.y) - _537) * _544) + _537;
    float _579 = (((cbMtdParam._m0[16u].z * _557.z) - _538) * _544) + _538;
    vec4 _591 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _611 = (((cbMtdParam._m0[19u].x * _591.x) - _577) * _369) + _577;
    float _612 = (((cbMtdParam._m0[19u].y * _591.y) - _578) * _369) + _578;
    float _613 = (((cbMtdParam._m0[19u].z * _591.z) - _579) * _369) + _579;
    vec4 _625 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_19, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _650 = (_355.x * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].x * _625.x) - _611) * _338) + _611);
    float _652 = (_355.y * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].y * _625.y) - _612) * _338) + _612);
    float _654 = (_355.z * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].z * _625.z) - _613) * _338) + _613);
    vec4 _666 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_17, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _685 = TEXCOORD_5.x - ((cbMtdParam._m0[24u].x * (1.0 - TEXCOORD_5.x)) * (texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w)).x + 0.00999999977648258209228515625));
    float _687 = _685 * (cbMtdParam._m0[24u].z + 1.0);
    float _3971 = isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : max(_687, 0.0));
    float _688 = isnan(1.0) ? _3971 : (isnan(_3971) ? 1.0 : min(_3971, 1.0));
    float _695 = (_688 * ((cbMtdParam._m0[11u].x * _666.x) - _650)) + _650;
    float _696 = (((cbMtdParam._m0[11u].y * _666.y) - _652) * _688) + _652;
    float _697 = (((cbMtdParam._m0[11u].z * _666.z) - _654) * _688) + _654;
    float _701 = cbMtdParam._m0[28u].x * TEXCOORD_8;
    float _709 = (_701 - (((texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_23, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x + 0.00999999977648258209228515625) * cbMtdParam._m0[27u].z) * (1.0 - _701))) * (cbMtdParam._m0[27u].w + 1.0);
    float _3982 = isnan(0.0) ? _709 : (isnan(_709) ? 0.0 : max(_709, 0.0));
    float _710 = isnan(1.0) ? _3982 : (isnan(_3982) ? 1.0 : min(_3982, 1.0));
    float _717 = ((cbMtdParam._m0[21u].x - _695) * _710) + _695;
    float _718 = ((cbMtdParam._m0[21u].y - _696) * _710) + _696;
    float _719 = ((cbMtdParam._m0[21u].z - _697) * _710) + _697;
    vec4 _732 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_24, SS_ClampLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.z) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.w) + cbTextureTilingScale._m0[11u].w));
    float _740 = (_732.x + (-1.0)) + (cbMtdParam._m0[28u].y * 2.0);
    float _3993 = isnan(0.0) ? _740 : (isnan(_740) ? 0.0 : max(_740, 0.0));
    float _746 = exp2(log2(cbMtdParam._m0[28u].w * (isnan(1.0) ? _3993 : (isnan(_3993) ? 1.0 : min(_3993, 1.0)))) * cbMtdParam._m0[28u].z);
    float _4004 = isnan(0.0) ? _746 : (isnan(_746) ? 0.0 : max(_746, 0.0));
    float _747 = isnan(1.0) ? _4004 : (isnan(_4004) ? 1.0 : min(_4004, 1.0));
    float _207[5];
    float _208[5];
    _207[0u] = cbMtdParam._m0[29u].z;
    _208[0u] = cbMtdParam._m0[29u].w;
    _207[1u] = cbMtdParam._m0[31u].z;
    _208[1u] = cbMtdParam._m0[31u].w;
    _207[2u] = cbMtdParam._m0[31u].x;
    _208[2u] = cbMtdParam._m0[31u].y;
    _207[3u] = cbMtdParam._m0[30u].z;
    _208[3u] = cbMtdParam._m0[30u].w;
    _207[4u] = cbMtdParam._m0[30u].x;
    _208[4u] = cbMtdParam._m0[30u].y;
    float _786 = isnan(0.0) ? _404 : (isnan(_404) ? 0.0 : max(_404, 0.0));
    uint _788 = uint(int(isnan(4.0) ? _786 : (isnan(_786) ? 4.0 : min(_786, 4.0))));
    float _795 = ((_208[_788] - cbMtdParam._m0[22u].z) * _380) + cbMtdParam._m0[22u].z;
    float _798 = ((cbMtdParam._m0[22u].w - _795) * _544) + _795;
    float _801 = ((cbMtdParam._m0[25u].x - _798) * _369) + _798;
    float _804 = ((cbMtdParam._m0[26u].x - _801) * _338) + _801;
    float _809 = (cbMtdParam._m0[24u].y + 1.0) * _685;
    float _4025 = isnan(0.0) ? _809 : (isnan(_809) ? 0.0 : max(_809, 0.0));
    float _810 = isnan(1.0) ? _4025 : (isnan(_4025) ? 1.0 : min(_4025, 1.0));
    float _812 = _804 - (_804 * _810);
    float _814 = _812 - (_812 * _701);
    vec4 _827 = texture(sampler2DArray(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_1, SS_BumpMap), vec3((cbTextureTilingScale._m0[18u].x * TEXCOORD.x) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD.y) + cbTextureTilingScale._m0[18u].w, _416));
    vec4 _844 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w));
    float _846 = _844.x;
    float _847 = _844.y;
    float _852 = cbMtdParam._m0[22u].x + _844.z;
    float _855 = (((_827.z + _207[_788]) - _852) * _380) + _852;
    vec4 _867 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.x) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.y) + cbTextureTilingScale._m0[15u].w));
    float _878 = (((_867.z - _855) + cbMtdParam._m0[29u].x) * _544) + _855;
    float _883 = ((((_323 * 2.0) * _878) - _878) * cbMtdParam._m0[24u].w) + _878;
    vec4 _895 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w));
    float _906 = (((cbMtdParam._m0[23u].z + _895.z) - _883) * _369) + _883;
    vec4 _919 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_20, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _930 = (((_919.z - _906) + cbMtdParam._m0[26u].y) * _338) + _906;
    vec4 _942 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _953 = ((_942.z - _930) * _810) + _930;
    vec4 _968 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_22, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _982 = ((cbMtdParam._m0[27u].y * _701) * ((_968.z * cbMtdParam._m0[27u].x) - _953)) + _953;
    float _997 = ((_827.x - _846) * _380) + _846;
    float _998 = ((_827.y - _847) * _380) + _847;
    float _1003 = ((_867.x - _997) * _544) + _997;
    float _1004 = ((_867.y - _998) * _544) + _998;
    float _1009 = ((_895.x - _1003) * _369) + _1003;
    float _1010 = ((_895.y - _1004) * _369) + _1004;
    float _1019 = ((((_919.x - _1009) * _338) + _1009) * 2.0) + (-1.0);
    float _1020 = ((((_919.y - _1010) * _338) + _1010) * 2.0) + (-1.0);
    float _1021 = dot(vec2(_1019, _1020), vec2(_1019, _1020));
    float _4036 = isnan(0.0) ? _1021 : (isnan(_1021) ? 0.0 : max(_1021, 0.0));
    float _1026 = sqrt(1.0 - (isnan(1.0) ? _4036 : (isnan(_4036) ? 1.0 : min(_4036, 1.0))));
    float _1042 = (((cbMtdParam._m0[25u].y * ((_319.x * 2.0) + (-1.0))) + _1019) + (((((_942.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[25u].z) * _810)) + ((((_968.x * 2.0) + (-1.0)) * _701) * cbMtdParam._m0[26u].w);
    float _1043 = (((cbMtdParam._m0[25u].y * ((_319.y * 2.0) + (-1.0))) + _1020) + (((((_942.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[25u].z) * _810)) + (((cbMtdParam._m0[28u].x * TEXCOORD_9) * ((_968.y * 2.0) + (-1.0))) * cbMtdParam._m0[26u].w);
    float _1046 = fma(_1026, _249 * NORMAL.x, fma(_1043, _256 * TANGENT.x, (_242 * _234) * _1042));
    float _1049 = fma(_1026, _249 * NORMAL.y, fma(_1043, _256 * TANGENT.y, (_242 * _235) * _1042));
    float _1052 = fma(_1026, _249 * NORMAL.z, fma(_1043, _256 * TANGENT.z, (_242 * _236) * _1042));
    float _1056 = inversesqrt(dot(vec3(_1046, _1049, _1052), vec3(_1046, _1049, _1052)));
    float _1057 = _1056 * _1046;
    float _1058 = _1056 * _1049;
    float _1059 = _1056 * _1052;
    float _4047 = isnan(0.0) ? _747 : (isnan(_747) ? 0.0 : max(_747, 0.0));
    float _1060 = isnan(1.0) ? _4047 : (isnan(_4047) ? 1.0 : min(_4047, 1.0));
    float _4058 = isnan(0.0) ? _982 : (isnan(_982) ? 0.0 : max(_982, 0.0));
    float _1061 = isnan(1.0) ? _4058 : (isnan(_4058) ? 1.0 : min(_4058, 1.0));
    float _4069 = isnan(0.0) ? _717 : (isnan(_717) ? 0.0 : max(_717, 0.0));
    float _4080 = isnan(0.0) ? _718 : (isnan(_718) ? 0.0 : max(_718, 0.0));
    float _4091 = isnan(0.0) ? _719 : (isnan(_719) ? 0.0 : max(_719, 0.0));
    float _4102 = isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0));
    float _1065 = isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0));
    float _1081 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1121 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1131 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1121);
    float _1132 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1121);
    float _1133 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1121);
    float _1137 = inversesqrt(dot(vec3(_1131, _1132, _1133), vec3(_1131, _1132, _1133)));
    float _1138 = _1131 * _1137;
    float _1139 = _1132 * _1137;
    float _1140 = _1133 * _1137;
    float _1146 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1147 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1165 = fma(_1059, cbSceneParam._m0[5u].z, fma(_1058, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1057));
    float _1168 = fma(_1059, cbSceneParam._m0[6u].z, fma(_1058, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1057));
    float _1171 = fma(_1059, cbSceneParam._m0[7u].z, fma(_1058, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1057));
    uint _1184 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1186 = (_1184 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1192 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4069 : (isnan(_4069) ? 1.0 : min(_4069, 1.0)))) * cbInstanceData._m0[_1186].x;
    float _1193 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0)))) * cbInstanceData._m0[_1186].y;
    float _1194 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4091 : (isnan(_4091) ? 1.0 : min(_4091, 1.0)))) * cbInstanceData._m0[_1186].z;
    float _4113 = isnan(0.0) ? _1192 : (isnan(_1192) ? 0.0 : max(_1192, 0.0));
    float _1195 = isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0));
    float _4124 = isnan(0.0) ? _1193 : (isnan(_1193) ? 0.0 : max(_1193, 0.0));
    float _1196 = isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0));
    float _4135 = isnan(0.0) ? _1194 : (isnan(_1194) ? 0.0 : max(_1194, 0.0));
    float _1197 = isnan(1.0) ? _4135 : (isnan(_4135) ? 1.0 : min(_4135, 1.0));
    float _1198 = 1.0 - _1065;
    float _1199 = _1195 * _1198;
    float _1200 = _1196 * _1198;
    float _1201 = _1197 * _1198;
    float _1206 = (_1195 + (-0.039999999105930328369140625)) * _1065;
    float _1207 = (_1196 + (-0.039999999105930328369140625)) * _1065;
    float _1208 = (_1197 + (-0.039999999105930328369140625)) * _1065;
    float _1209 = _1206 + 0.039999999105930328369140625;
    float _1211 = _1207 + 0.039999999105930328369140625;
    float _1212 = _1208 + 0.039999999105930328369140625;
    vec4 _1221 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1146, cbSceneParam._m0[86u].y * _1147));
    float _1224 = _1221.x * TEXCOORD_5.w;
    float _1225 = dot(vec3(_1057, _1058, _1059), vec3(_1138, _1139, _1140));
    float _1228 = _1225 * 2.0;
    float _1232 = (_1228 * _1057) - _1138;
    float _1233 = (_1228 * _1058) - _1139;
    float _1234 = (_1228 * _1059) - _1140;
    float _1238 = abs(dot(vec3(_1138, _1139, _1140), vec3(_1057, _1058, _1059)));
    float _4146 = isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0));
    float _1240 = sqrt(_1061);
    float _1251 = exp2((_1240 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4146 : (isnan(_4146) ? 1.0 : min(_4146, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1240 * 3.0));
    float _1257 = (1.0 - _1251) * ((_1240 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1258 = _1251 * _1240;
    float _1286 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1290 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1294 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1595;
    float _1597;
    float _1598;
    float _1599;
    float _1600;
    float _1601;
    float _1602;
    float _1603;
    float _1604;
    float _1605;
    float _1606;
    float _1607;
    float _1608;
    float _1609;
    float _1610;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1320 = fma(_1294, cbModelParam._m0[26u].z, fma(_1290, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1286));
        float _1324 = fma(_1294, cbModelParam._m0[27u].z, fma(_1290, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1286));
        float _1328 = fma(_1294, cbModelParam._m0[28u].z, fma(_1290, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1286));
        float _1353 = _1286 + _1057;
        float _1354 = _1290 + _1058;
        float _1355 = _1294 + _1059;
        float _1365 = fma(_1355, cbModelParam._m0[26u].z, fma(_1354, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1353)) - _1320;
        float _1366 = fma(_1355, cbModelParam._m0[27u].z, fma(_1354, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1353)) - _1324;
        float _1367 = fma(_1355, cbModelParam._m0[28u].z, fma(_1354, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1353)) - _1328;
        float _1371 = inversesqrt(dot(vec3(_1365, _1366, _1367), vec3(_1365, _1366, _1367)));
        float _1384 = ((_1371 * _1365) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1320 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1385 = ((_1371 * _1366) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1324 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1386 = ((_1371 * _1367) / cbModelParam._m0[34u].z) + ((((((_1328 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1389 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1384, _1385, _1386), 0.0);
        vec4 _1396 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1384, _1385, _1386), 0.0);
        vec4 _1403 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1384, _1385, _1386), 0.0);
        vec4 _1410 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1384, _1385, _1386), 0.0);
        float _1423 = exp2((_1389.w + (-0.5)) * 20.0) * 2.0;
        float _1424 = _1423 * (_1389.x + (-0.5));
        float _1425 = _1423 * (_1389.y + (-0.5));
        float _1426 = _1423 * (_1389.z + (-0.5));
        float _1433 = exp2((_1396.w + (-0.5)) * 20.0) * 2.0;
        float _1434 = _1433 * (_1396.x + (-0.5));
        float _1435 = _1433 * (_1396.y + (-0.5));
        float _1436 = _1433 * (_1396.z + (-0.5));
        float _1443 = exp2((_1403.w + (-0.5)) * 20.0) * 2.0;
        float _1444 = _1443 * (_1403.x + (-0.5));
        float _1445 = _1443 * (_1403.y + (-0.5));
        float _1446 = _1443 * (_1403.z + (-0.5));
        float _1453 = exp2((_1410.w + (-0.5)) * 20.0) * 2.0;
        float _1454 = _1453 * (_1410.x + (-0.5));
        float _1455 = _1453 * (_1410.y + (-0.5));
        float _1456 = _1453 * (_1410.z + (-0.5));
        float _1457 = isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0));
        float _1458 = isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0));
        float _1459 = isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0));
        float _1460 = _1424 * 0.5;
        float _1461 = _1434 * 0.5;
        float _1462 = _1444 * 0.5;
        float _1463 = dot(vec3(_1460, _1461, _1462), vec3(_1460, _1461, _1462));
        float _1468 = (_1463 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1463);
        float _1477 = (dot(vec3(_1057, _1058, _1059), vec3(_1468 * _1460, _1468 * _1461, _1468 * _1462)) + 1.0) * 0.5;
        float _4172 = isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0));
        float _1487 = sqrt(((_1461 * _1461) + (_1460 * _1460)) + (_1462 * _1462)) / (_1457 + 9.9999997473787516355514526367188e-06);
        float _4183 = isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0));
        float _1488 = isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0));
        float _1489 = _1488 * 2.0;
        float _1493 = (1.0 - _1488) / (_1488 + 1.0);
        float _4194 = isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0));
        float _1494 = isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0));
        float _1503 = ((((1.0 - _1494) * (_1489 + 2.0)) * exp2(log2(isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0))) * (_1489 + 1.0))) + _1494) * _1457;
        float _1504 = _1425 * 0.5;
        float _1505 = _1435 * 0.5;
        float _1506 = _1445 * 0.5;
        float _1507 = dot(vec3(_1504, _1505, _1506), vec3(_1504, _1505, _1506));
        float _1512 = (_1507 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1507);
        float _1520 = (dot(vec3(_1057, _1058, _1059), vec3(_1512 * _1504, _1512 * _1505, _1512 * _1506)) + 1.0) * 0.5;
        float _4205 = isnan(0.0) ? _1520 : (isnan(_1520) ? 0.0 : max(_1520, 0.0));
        float _1529 = sqrt(((_1505 * _1505) + (_1504 * _1504)) + (_1506 * _1506)) / (_1458 + 9.9999997473787516355514526367188e-06);
        float _4216 = isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0));
        float _1530 = isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0));
        float _1531 = _1530 * 2.0;
        float _1535 = (1.0 - _1530) / (_1530 + 1.0);
        float _4227 = isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0));
        float _1536 = isnan(1.0) ? _4227 : (isnan(_4227) ? 1.0 : min(_4227, 1.0));
        float _1545 = ((((1.0 - _1536) * (_1531 + 2.0)) * exp2(log2(isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0))) * (_1531 + 1.0))) + _1536) * _1458;
        float _1546 = _1426 * 0.5;
        float _1547 = _1436 * 0.5;
        float _1548 = _1446 * 0.5;
        float _1549 = dot(vec3(_1546, _1547, _1548), vec3(_1546, _1547, _1548));
        float _1554 = (_1549 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1549);
        float _1562 = (dot(vec3(_1057, _1058, _1059), vec3(_1554 * _1546, _1554 * _1547, _1554 * _1548)) + 1.0) * 0.5;
        float _4238 = isnan(0.0) ? _1562 : (isnan(_1562) ? 0.0 : max(_1562, 0.0));
        float _1571 = sqrt(((_1547 * _1547) + (_1546 * _1546)) + (_1548 * _1548)) / (_1459 + 9.9999997473787516355514526367188e-06);
        float _4249 = isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0));
        float _1572 = isnan(1.0) ? _4249 : (isnan(_4249) ? 1.0 : min(_4249, 1.0));
        float _1573 = _1572 * 2.0;
        float _1577 = (1.0 - _1572) / (_1572 + 1.0);
        float _4260 = isnan(0.0) ? _1577 : (isnan(_1577) ? 0.0 : max(_1577, 0.0));
        float _1578 = isnan(1.0) ? _4260 : (isnan(_4260) ? 1.0 : min(_4260, 1.0));
        float _1587 = ((((1.0 - _1578) * (_1573 + 2.0)) * exp2(log2(isnan(1.0) ? _4238 : (isnan(_4238) ? 1.0 : min(_4238, 1.0))) * (_1573 + 1.0))) + _1578) * _1459;
        _1595 = _1426;
        _1597 = _1425;
        _1598 = _1424;
        _1599 = _1436;
        _1600 = _1435;
        _1601 = _1434;
        _1602 = _1446;
        _1603 = _1445;
        _1604 = _1444;
        _1605 = _1459;
        _1606 = _1458;
        _1607 = _1457;
        _1608 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1503 : (isnan(_1503) ? 0.0 : max(_1503, 0.0)));
        _1609 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1545 : (isnan(_1545) ? 0.0 : max(_1545, 0.0)));
        _1610 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1587 : (isnan(_1587) ? 0.0 : max(_1587, 0.0)));
    }
    else
    {
        _1595 = _1596;
        _1597 = _1596;
        _1598 = _1596;
        _1599 = _1596;
        _1600 = _1596;
        _1601 = _1596;
        _1602 = _1596;
        _1603 = _1596;
        _1604 = _1596;
        _1605 = _1596;
        _1606 = _1596;
        _1607 = _1596;
        _1608 = 0.0;
        _1609 = 0.0;
        _1610 = 0.0;
    }
    float _1902;
    float _1903;
    float _1904;
    float _1905;
    float _1906;
    float _1907;
    float _1908;
    float _1909;
    float _1910;
    float _1911;
    float _1912;
    float _1913;
    float _1914;
    float _1915;
    float _1916;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1633 = fma(_1294, cbModelParam._m0[30u].z, fma(_1290, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1286));
        float _1637 = fma(_1294, cbModelParam._m0[31u].z, fma(_1290, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1286));
        float _1641 = fma(_1294, cbModelParam._m0[32u].z, fma(_1290, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1286));
        float _1664 = _1286 + _1057;
        float _1665 = _1290 + _1058;
        float _1666 = _1294 + _1059;
        float _1676 = fma(_1666, cbModelParam._m0[30u].z, fma(_1665, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1664)) - _1633;
        float _1677 = fma(_1666, cbModelParam._m0[31u].z, fma(_1665, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1664)) - _1637;
        float _1678 = fma(_1666, cbModelParam._m0[32u].z, fma(_1665, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1664)) - _1641;
        float _1682 = inversesqrt(dot(vec3(_1676, _1677, _1678), vec3(_1676, _1677, _1678)));
        float _1695 = ((_1682 * _1676) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1633 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1696 = ((_1682 * _1677) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1637 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1697 = ((_1682 * _1678) / cbModelParam._m0[35u].z) + ((((((_1641 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1699 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1695, _1696, _1697), 0.0);
        vec4 _1706 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1695, _1696, _1697), 0.0);
        vec4 _1713 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1695, _1696, _1697), 0.0);
        vec4 _1720 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1695, _1696, _1697), 0.0);
        float _1732 = exp2((_1699.w + (-0.5)) * 20.0) * 2.0;
        float _1733 = _1732 * (_1699.x + (-0.5));
        float _1734 = _1732 * (_1699.y + (-0.5));
        float _1735 = _1732 * (_1699.z + (-0.5));
        float _1742 = exp2((_1706.w + (-0.5)) * 20.0) * 2.0;
        float _1743 = _1742 * (_1706.x + (-0.5));
        float _1744 = _1742 * (_1706.y + (-0.5));
        float _1745 = _1742 * (_1706.z + (-0.5));
        float _1752 = exp2((_1713.w + (-0.5)) * 20.0) * 2.0;
        float _1753 = _1752 * (_1713.x + (-0.5));
        float _1754 = _1752 * (_1713.y + (-0.5));
        float _1755 = _1752 * (_1713.z + (-0.5));
        float _1762 = exp2((_1720.w + (-0.5)) * 20.0) * 2.0;
        float _1763 = _1762 * (_1720.x + (-0.5));
        float _1764 = _1762 * (_1720.y + (-0.5));
        float _1765 = _1762 * (_1720.z + (-0.5));
        float _1766 = isnan(0.0) ? _1763 : (isnan(_1763) ? 0.0 : max(_1763, 0.0));
        float _1767 = isnan(0.0) ? _1764 : (isnan(_1764) ? 0.0 : max(_1764, 0.0));
        float _1768 = isnan(0.0) ? _1765 : (isnan(_1765) ? 0.0 : max(_1765, 0.0));
        float _1769 = _1733 * 0.5;
        float _1770 = _1743 * 0.5;
        float _1771 = _1753 * 0.5;
        float _1772 = dot(vec3(_1769, _1770, _1771), vec3(_1769, _1770, _1771));
        float _1777 = (_1772 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1772);
        float _1785 = (dot(vec3(_1057, _1058, _1059), vec3(_1777 * _1769, _1777 * _1770, _1777 * _1771)) + 1.0) * 0.5;
        float _4301 = isnan(0.0) ? _1785 : (isnan(_1785) ? 0.0 : max(_1785, 0.0));
        float _1794 = sqrt(((_1770 * _1770) + (_1769 * _1769)) + (_1771 * _1771)) / (_1766 + 9.9999997473787516355514526367188e-06);
        float _4312 = isnan(0.0) ? _1794 : (isnan(_1794) ? 0.0 : max(_1794, 0.0));
        float _1795 = isnan(1.0) ? _4312 : (isnan(_4312) ? 1.0 : min(_4312, 1.0));
        float _1796 = _1795 * 2.0;
        float _1800 = (1.0 - _1795) / (_1795 + 1.0);
        float _4323 = isnan(0.0) ? _1800 : (isnan(_1800) ? 0.0 : max(_1800, 0.0));
        float _1801 = isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0));
        float _1810 = ((((1.0 - _1801) * (_1796 + 2.0)) * exp2(log2(isnan(1.0) ? _4301 : (isnan(_4301) ? 1.0 : min(_4301, 1.0))) * (_1796 + 1.0))) + _1801) * _1766;
        float _1811 = _1734 * 0.5;
        float _1812 = _1744 * 0.5;
        float _1813 = _1754 * 0.5;
        float _1814 = dot(vec3(_1811, _1812, _1813), vec3(_1811, _1812, _1813));
        float _1819 = (_1814 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1814);
        float _1827 = (dot(vec3(_1057, _1058, _1059), vec3(_1819 * _1811, _1819 * _1812, _1819 * _1813)) + 1.0) * 0.5;
        float _4334 = isnan(0.0) ? _1827 : (isnan(_1827) ? 0.0 : max(_1827, 0.0));
        float _1836 = sqrt(((_1812 * _1812) + (_1811 * _1811)) + (_1813 * _1813)) / (_1767 + 9.9999997473787516355514526367188e-06);
        float _4345 = isnan(0.0) ? _1836 : (isnan(_1836) ? 0.0 : max(_1836, 0.0));
        float _1837 = isnan(1.0) ? _4345 : (isnan(_4345) ? 1.0 : min(_4345, 1.0));
        float _1838 = _1837 * 2.0;
        float _1842 = (1.0 - _1837) / (_1837 + 1.0);
        float _4356 = isnan(0.0) ? _1842 : (isnan(_1842) ? 0.0 : max(_1842, 0.0));
        float _1843 = isnan(1.0) ? _4356 : (isnan(_4356) ? 1.0 : min(_4356, 1.0));
        float _1852 = ((((1.0 - _1843) * (_1838 + 2.0)) * exp2(log2(isnan(1.0) ? _4334 : (isnan(_4334) ? 1.0 : min(_4334, 1.0))) * (_1838 + 1.0))) + _1843) * _1767;
        float _1853 = _1735 * 0.5;
        float _1854 = _1745 * 0.5;
        float _1855 = _1755 * 0.5;
        float _1856 = dot(vec3(_1853, _1854, _1855), vec3(_1853, _1854, _1855));
        float _1861 = (_1856 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1856);
        float _1869 = (dot(vec3(_1057, _1058, _1059), vec3(_1861 * _1853, _1861 * _1854, _1861 * _1855)) + 1.0) * 0.5;
        float _4367 = isnan(0.0) ? _1869 : (isnan(_1869) ? 0.0 : max(_1869, 0.0));
        float _1878 = sqrt(((_1854 * _1854) + (_1853 * _1853)) + (_1855 * _1855)) / (_1768 + 9.9999997473787516355514526367188e-06);
        float _4378 = isnan(0.0) ? _1878 : (isnan(_1878) ? 0.0 : max(_1878, 0.0));
        float _1879 = isnan(1.0) ? _4378 : (isnan(_4378) ? 1.0 : min(_4378, 1.0));
        float _1880 = _1879 * 2.0;
        float _1884 = (1.0 - _1879) / (_1879 + 1.0);
        float _4389 = isnan(0.0) ? _1884 : (isnan(_1884) ? 0.0 : max(_1884, 0.0));
        float _1885 = isnan(1.0) ? _4389 : (isnan(_4389) ? 1.0 : min(_4389, 1.0));
        float _1894 = ((((1.0 - _1885) * (_1880 + 2.0)) * exp2(log2(isnan(1.0) ? _4367 : (isnan(_4367) ? 1.0 : min(_4367, 1.0))) * (_1880 + 1.0))) + _1885) * _1768;
        _1902 = _1735;
        _1903 = _1734;
        _1904 = _1733;
        _1905 = _1745;
        _1906 = _1744;
        _1907 = _1743;
        _1908 = _1755;
        _1909 = _1754;
        _1910 = _1753;
        _1911 = _1768;
        _1912 = _1767;
        _1913 = _1766;
        _1914 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1810 : (isnan(_1810) ? 0.0 : max(_1810, 0.0)));
        _1915 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1852 : (isnan(_1852) ? 0.0 : max(_1852, 0.0)));
        _1916 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1894 : (isnan(_1894) ? 0.0 : max(_1894, 0.0)));
    }
    else
    {
        _1902 = _1596;
        _1903 = _1596;
        _1904 = _1596;
        _1905 = _1596;
        _1906 = _1596;
        _1907 = _1596;
        _1908 = _1596;
        _1909 = _1596;
        _1910 = _1596;
        _1911 = _1596;
        _1912 = _1596;
        _1913 = _1596;
        _1914 = 0.0;
        _1915 = 0.0;
        _1916 = 0.0;
    }
    float _1926 = (cbModelParam._m0[1u].x * (_1914 - _1608)) + _1608;
    float _1927 = (cbModelParam._m0[1u].x * (_1915 - _1609)) + _1609;
    float _1928 = (cbModelParam._m0[1u].x * (_1916 - _1610)) + _1610;
    float _1949 = fma(_1928, cbSceneParam._m0[89u].z, fma(_1927, cbSceneParam._m0[89u].y, _1926 * cbSceneParam._m0[89u].x));
    float _1952 = fma(_1928, cbSceneParam._m0[90u].z, fma(_1927, cbSceneParam._m0[90u].y, _1926 * cbSceneParam._m0[90u].x));
    float _1955 = fma(_1928, cbSceneParam._m0[91u].z, fma(_1927, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1926));
    float _1970 = _1232 * 0.5;
    float _1971 = _1233 * 0.5;
    float _1972 = _1234 * 0.5;
    float _1973 = dot(vec4(_1970, _1971, _1972, 1.0), vec4(_1904, _1907, _1910, _1913));
    float _1976 = dot(vec4(_1970, _1971, _1972, 1.0), vec4(_1903, _1906, _1909, _1912));
    float _1979 = dot(vec4(_1970, _1971, _1972, 1.0), vec4(_1902, _1905, _1908, _1911));
    float _2013;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1986 = dot(vec4(_1970, _1971, _1972, 1.0), vec4(_1595, _1599, _1602, _1605));
        float _1990 = dot(vec4(_1970, _1971, _1972, 1.0), vec4(_1597, _1600, _1603, _1606));
        float _1994 = dot(vec4(_1970, _1971, _1972, 1.0), vec4(_1598, _1601, _1604, _1607));
        float _2001 = dot(vec4(cbModelParam._m0[39u]), vec4(_1970, _1971, _1972, 1.0));
        _2013 = dot(vec3(isnan(0.0) ? _1994 : (isnan(_1994) ? 0.0 : max(_1994, 0.0)), isnan(0.0) ? _1990 : (isnan(_1990) ? 0.0 : max(_1990, 0.0)), isnan(0.0) ? _1986 : (isnan(_1986) ? 0.0 : max(_1986, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2001) ? 0.0 : (isnan(0.0) ? _2001 : max(0.0, _2001))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2013 = 1.0;
    }
    float _2024;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2015 = dot(vec4(cbModelParam._m0[40u]), vec4(_1970, _1971, _1972, 1.0));
        _2024 = dot(vec3(isnan(0.0) ? _1973 : (isnan(_1973) ? 0.0 : max(_1973, 0.0)), isnan(0.0) ? _1976 : (isnan(_1976) ? 0.0 : max(_1976, 0.0)), isnan(0.0) ? _1979 : (isnan(_1979) ? 0.0 : max(_1979, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2015) ? 0.0 : (isnan(0.0) ? _2015 : max(0.0, _2015))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2024 = 1.0;
    }
    float _2028 = (_2024 * cbModelParam._m0[1u].x) + (_2013 * (1.0 - cbModelParam._m0[1u].x));
    float _2038 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1061);
    float _2039 = isnan(_2038) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2038 : min(cbModelParam._m0[25u].z, _2038));
    float _2119;
    float _2121;
    float _2123;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2086 = fma(_1294, cbModelParam._m0[13u].z, fma(_1290, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1286)) + cbModelParam._m0[13u].w;
        float _2090 = fma(_1294, cbModelParam._m0[14u].z, fma(_1290, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1286)) + cbModelParam._m0[14u].w;
        float _2094 = fma(_1294, cbModelParam._m0[15u].z, fma(_1290, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1286)) + cbModelParam._m0[15u].w;
        float _2097 = fma(_1234, cbModelParam._m0[13u].z, fma(_1233, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1232));
        float _2100 = fma(_1234, cbModelParam._m0[14u].z, fma(_1233, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1232));
        float _2103 = fma(_1234, cbModelParam._m0[15u].z, fma(_1233, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1232));
        float _2131;
        if (_2097 > 0.0)
        {
            _2131 = abs((1.0 - _2086) / _2097);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2097 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2086 + 1.0) / _2097);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2131 = frontier_phi_14_12_ladder;
        }
        float _2333;
        if (_2100 > 0.0)
        {
            _2333 = abs((1.0 - _2090) / _2100);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2100 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2090 + 1.0) / _2100);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2333 = frontier_phi_23_19_ladder;
        }
        float _2587;
        if (_2103 > 0.0)
        {
            _2587 = abs((1.0 - _2094) / _2103);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2103 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2094 + 1.0) / _2103);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2587 = frontier_phi_35_30_ladder;
        }
        float _2589 = isnan(_2333) ? _2131 : (isnan(_2131) ? _2333 : min(_2131, _2333));
        float _2590 = isnan(_2587) ? _2589 : (isnan(_2589) ? _2587 : min(_2589, _2587));
        float _2594 = (_2590 * _2097) + _2086;
        float _2595 = (_2590 * _2100) + _2090;
        float _2596 = (_2590 * _2103) + _2094;
        float _2597 = _2590 * 9.9999997473787516355514526367188e-05;
        float _2599 = (-1.0) - _2597;
        float _2601 = _2597 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2596 > _2601) || ((_2596 < _2599) || ((_2595 > _2601) || ((_2595 < _2599) || ((_2594 < _2599) || (_2594 > _2601))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2724 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2596, cbModelParam._m0[9u].z, fma(_2595, cbModelParam._m0[9u].y, _2594 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2596, cbModelParam._m0[10u].z, fma(_2595, cbModelParam._m0[10u].y, _2594 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2596, cbModelParam._m0[11u].z, fma(_2595, cbModelParam._m0[11u].y, _2594 * cbModelParam._m0[11u].x))), _2039);
            frontier_phi_13_35_ladder = _2724.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2724.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2724.x * cbModelParam._m0[1u].y;
        }
        _2119 = frontier_phi_13_35_ladder_2;
        _2121 = frontier_phi_13_35_ladder_1;
        _2123 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2107 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1232, _1233, _1234), _2039);
        _2119 = _2107.x * cbModelParam._m0[1u].y;
        _2121 = _2107.y * cbModelParam._m0[1u].y;
        _2123 = _2107.z * cbModelParam._m0[1u].y;
    }
    float _2127 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1061);
    float _2128 = isnan(_2127) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2127 : min(cbModelParam._m0[25u].w, _2127));
    float _2217;
    float _2219;
    float _2221;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2181 = fma(_1294, cbModelParam._m0[21u].z, fma(_1290, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1286)) + cbModelParam._m0[21u].w;
        float _2185 = fma(_1294, cbModelParam._m0[22u].z, fma(_1290, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1286)) + cbModelParam._m0[22u].w;
        float _2189 = fma(_1294, cbModelParam._m0[23u].z, fma(_1290, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1286)) + cbModelParam._m0[23u].w;
        float _2192 = fma(_1234, cbModelParam._m0[21u].z, fma(_1233, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1232));
        float _2195 = fma(_1234, cbModelParam._m0[22u].z, fma(_1233, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1232));
        float _2198 = fma(_1234, cbModelParam._m0[23u].z, fma(_1233, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1232));
        float _2338;
        if (_2192 > 0.0)
        {
            _2338 = abs((1.0 - _2181) / _2192);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2192 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2181 + 1.0) / _2192);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2338 = frontier_phi_25_21_ladder;
        }
        float _2614;
        if (_2195 > 0.0)
        {
            _2614 = abs((1.0 - _2185) / _2195);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2195 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2185 + 1.0) / _2195);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2614 = frontier_phi_37_32_ladder;
        }
        float _2827;
        if (_2198 > 0.0)
        {
            _2827 = abs((1.0 - _2189) / _2198);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2198 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2189 + 1.0) / _2198);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2827 = frontier_phi_46_43_ladder;
        }
        float _2829 = isnan(_2614) ? _2338 : (isnan(_2338) ? _2614 : min(_2338, _2614));
        float _2830 = isnan(_2827) ? _2829 : (isnan(_2829) ? _2827 : min(_2829, _2827));
        float _2834 = (_2830 * _2192) + _2181;
        float _2835 = (_2830 * _2195) + _2185;
        float _2836 = (_2830 * _2198) + _2189;
        float _2837 = _2830 * 9.9999997473787516355514526367188e-05;
        float _2838 = (-1.0) - _2837;
        float _2840 = _2837 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2836 > _2840) || ((_2836 < _2838) || ((_2835 > _2840) || ((_2835 < _2838) || ((_2834 < _2838) || (_2834 > _2840))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3037 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2836, cbModelParam._m0[17u].z, fma(_2835, cbModelParam._m0[17u].y, _2834 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2836, cbModelParam._m0[18u].z, fma(_2835, cbModelParam._m0[18u].y, _2834 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2836, cbModelParam._m0[19u].z, fma(_2835, cbModelParam._m0[19u].y, _2834 * cbModelParam._m0[19u].x))), _2128);
            frontier_phi_22_46_ladder = _3037.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _3037.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _3037.x * cbModelParam._m0[1u].z;
        }
        _2217 = frontier_phi_22_46_ladder_2;
        _2219 = frontier_phi_22_46_ladder_1;
        _2221 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2201 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1232, _1233, _1234), _2128);
        _2217 = _2201.x * cbModelParam._m0[1u].z;
        _2219 = _2201.y * cbModelParam._m0[1u].z;
        _2221 = _2201.z * cbModelParam._m0[1u].z;
    }
    float _2234 = (((_1257 * _1209) + _1258) * _1224) * ((cbModelParam._m0[1u].w * (_2217 - _2119)) + _2119);
    float _2236 = (((_1257 * _1211) + _1258) * _1224) * ((cbModelParam._m0[1u].w * (_2219 - _2121)) + _2121);
    float _2238 = (((_1257 * _1212) + _1258) * _1224) * ((cbModelParam._m0[1u].w * (_2221 - _2123)) + _2123);
    float _2241 = fma(_2238, cbSceneParam._m0[89u].z, fma(_2236, cbSceneParam._m0[89u].y, _2234 * cbSceneParam._m0[89u].x));
    float _2244 = fma(_2238, cbSceneParam._m0[90u].z, fma(_2236, cbSceneParam._m0[90u].y, _2234 * cbSceneParam._m0[90u].x));
    float _2247 = fma(_2238, cbSceneParam._m0[91u].z, fma(_2236, cbSceneParam._m0[91u].y, _2234 * cbSceneParam._m0[91u].x));
    uvec4 _2257 = floatBitsToUint(cbInstanceData._m0[_1184 + 5u]);
    uint _2259 = _2257.x * 14u;
    uint _2260 = _2259 + 13u;
    float _2267 = _1224 + (-1.0);
    float _2272 = (cbLight._m0[_2260].x * _2267) + 1.0;
    float _2273 = (cbLight._m0[_2260].y * _2267) + 1.0;
    float _2274 = (cbLight._m0[_2260].z * _2267) + 1.0;
    float _2275 = (cbLight._m0[_2260].w * _2267) + 1.0;
    uint _2276 = _2259 + 5u;
    float _2282 = isnan(1.0) ? _2273 : (isnan(_2273) ? 1.0 : min(_2273, 1.0));
    uint _2286 = _2259 + 4u;
    float _2292 = isnan(1.0) ? _2272 : (isnan(_2272) ? 1.0 : min(_2272, 1.0));
    uint _2296 = _2259 | 1u;
    float _2307 = dot(vec3(cbLight._m0[_2259].xyz), vec3(_1057, _1058, _1059));
    float _2310 = dot(vec3(cbLight._m0[_2296].xyz), vec3(_1057, _1058, _1059));
    float _4525 = isnan(0.0) ? _2307 : (isnan(_2307) ? 0.0 : max(_2307, 0.0));
    float _4536 = isnan(0.0) ? _2310 : (isnan(_2310) ? 0.0 : max(_2310, 0.0));
    float _2315 = (isnan(1.0) ? _4525 : (isnan(_4525) ? 1.0 : min(_4525, 1.0))) * 0.3183098733425140380859375;
    float _2317 = (isnan(1.0) ? _4536 : (isnan(_4536) ? 1.0 : min(_4536, 1.0))) * 0.3183098733425140380859375;
    float _2324 = ((cbLight._m0[_2276].x * _2282) * _2317) + ((cbLight._m0[_2286].x * _2292) * _2315);
    float _2325 = ((_2282 * cbLight._m0[_2276].y) * _2317) + ((_2292 * cbLight._m0[_2286].y) * _2315);
    float _2326 = ((_2282 * cbLight._m0[_2276].z) * _2317) + ((_2292 * cbLight._m0[_2286].z) * _2315);
    uvec4 _2330 = floatBitsToUint(cbLight._m0[_2259 + 12u]);
    bool _2332 = _2330.x == 0u;
    float _2343;
    float _2345;
    float _2347;
    if (_2332)
    {
        _2343 = _2324;
        _2345 = _2325;
        _2347 = _2326;
    }
    else
    {
        uint _2351 = _2259 + 6u;
        float _2367 = (dot(vec3(cbLight._m0[_2259 + 2u].xyz), vec3(_1057, _1058, _1059)) * 0.5) + 0.5;
        float _2368 = _2367 * _2367;
        float _4547 = isnan(0.0) ? _2368 : (isnan(_2368) ? 0.0 : max(_2368, 0.0));
        float _2369 = isnan(1.0) ? _4547 : (isnan(_4547) ? 1.0 : min(_4547, 1.0));
        float _2370 = isnan(1.0) ? _2274 : (isnan(_2274) ? 1.0 : min(_2274, 1.0));
        _2343 = (((cbLight._m0[_2351].x * 0.3183098733425140380859375) * _2369) * _2370) + _2324;
        _2345 = (((cbLight._m0[_2351].y * 0.3183098733425140380859375) * _2369) * _2370) + _2325;
        _2347 = (((cbLight._m0[_2351].z * 0.3183098733425140380859375) * _2369) * _2370) + _2326;
    }
    bool _2350 = _2330.y == 0u;
    float _2388;
    float _2390;
    float _2392;
    if (_2350)
    {
        _2388 = _2343;
        _2390 = _2345;
        _2392 = _2347;
    }
    else
    {
        uint _2558 = _2259 + 7u;
        float _2574 = (dot(vec3(cbLight._m0[_2259 + 3u].xyz), vec3(_1057, _1058, _1059)) * 0.5) + 0.5;
        float _2575 = _2574 * _2574;
        float _4563 = isnan(0.0) ? _2575 : (isnan(_2575) ? 0.0 : max(_2575, 0.0));
        float _2576 = isnan(1.0) ? _4563 : (isnan(_4563) ? 1.0 : min(_4563, 1.0));
        float _2577 = isnan(1.0) ? _2275 : (isnan(_2275) ? 1.0 : min(_2275, 1.0));
        _2388 = (((cbLight._m0[_2558].x * 0.3183098733425140380859375) * _2576) * _2577) + _2343;
        _2390 = (((cbLight._m0[_2558].y * 0.3183098733425140380859375) * _2576) * _2577) + _2345;
        _2392 = (((cbLight._m0[_2558].z * 0.3183098733425140380859375) * _2576) * _2577) + _2347;
    }
    uint _2395 = _2259 + 8u;
    float _2408 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2259].w)) * _1061) * 0.949999988079071044921875);
    float _2409 = _2408 * _2408;
    float _2410 = cbLight._m0[_2259].x + _1138;
    float _2411 = cbLight._m0[_2259].y + _1139;
    float _2412 = cbLight._m0[_2259].z + _1140;
    float _2416 = inversesqrt(dot(vec3(_2410, _2411, _2412), vec3(_2410, _2411, _2412)));
    float _2417 = _2416 * _2410;
    float _2418 = _2416 * _2411;
    float _2419 = _2416 * _2412;
    float _2420 = dot(vec3(_1057, _1058, _1059), vec3(cbLight._m0[_2259].xyz));
    float _4579 = isnan(0.0) ? _2420 : (isnan(_2420) ? 0.0 : max(_2420, 0.0));
    float _2423 = isnan(1.0) ? _4579 : (isnan(_4579) ? 1.0 : min(_4579, 1.0));
    float _4590 = isnan(0.0) ? _1225 : (isnan(_1225) ? 0.0 : max(_1225, 0.0));
    float _2424 = isnan(1.0) ? _4590 : (isnan(_4590) ? 1.0 : min(_4590, 1.0));
    float _2425 = dot(vec3(_1057, _1058, _1059), vec3(_2417, _2418, _2419));
    float _4601 = isnan(0.0) ? _2425 : (isnan(_2425) ? 0.0 : max(_2425, 0.0));
    float _2428 = isnan(1.0) ? _4601 : (isnan(_4601) ? 1.0 : min(_4601, 1.0));
    float _2429 = dot(vec3(cbLight._m0[_2259].xyz), vec3(_2417, _2418, _2419));
    float _4612 = isnan(0.0) ? _2429 : (isnan(_2429) ? 0.0 : max(_2429, 0.0));
    float _2433 = _2409 * _2409;
    float _2437 = ((_2428 * _2428) * (_2433 + (-1.0))) + 1.0;
    float _2445 = exp2(log2(1.0 - (isnan(1.0) ? _4612 : (isnan(_4612) ? 1.0 : min(_4612, 1.0)))) * 5.0);
    float _2446 = 0.959999978542327880859375 - _1206;
    float _2448 = 0.959999978542327880859375 - _1207;
    float _2449 = 0.959999978542327880859375 - _1208;
    float _2456 = 1.0 - _2409;
    float _2467 = (0.5 / (((_2424 * ((_2423 * _2456) + _2409)) + 9.9999999392252902907785028219223e-09) + (((_2424 * _2456) + _2409) * _2423))) * _2423;
    float _4623 = isnan(0.0) ? _2467 : (isnan(_2467) ? 0.0 : max(_2467, 0.0));
    float _2469 = (isnan(1.0) ? _4623 : (isnan(_4623) ? 1.0 : min(_4623, 1.0))) * (_2433 / ((_2437 * _2437) * 3.141590118408203125));
    uint _2480 = _2259 + 9u;
    float _2491 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2296].w)) * _1061) * 0.949999988079071044921875);
    float _2492 = _2491 * _2491;
    float _2493 = cbLight._m0[_2296].x + _1138;
    float _2494 = cbLight._m0[_2296].y + _1139;
    float _2495 = cbLight._m0[_2296].z + _1140;
    float _2499 = inversesqrt(dot(vec3(_2493, _2494, _2495), vec3(_2493, _2494, _2495)));
    float _2500 = _2499 * _2493;
    float _2501 = _2499 * _2494;
    float _2502 = _2499 * _2495;
    float _2503 = dot(vec3(_1057, _1058, _1059), vec3(cbLight._m0[_2296].xyz));
    float _4634 = isnan(0.0) ? _2503 : (isnan(_2503) ? 0.0 : max(_2503, 0.0));
    float _2506 = isnan(1.0) ? _4634 : (isnan(_4634) ? 1.0 : min(_4634, 1.0));
    float _2507 = dot(vec3(_1057, _1058, _1059), vec3(_2500, _2501, _2502));
    float _4645 = isnan(0.0) ? _2507 : (isnan(_2507) ? 0.0 : max(_2507, 0.0));
    float _2510 = isnan(1.0) ? _4645 : (isnan(_4645) ? 1.0 : min(_4645, 1.0));
    float _2511 = dot(vec3(cbLight._m0[_2296].xyz), vec3(_2500, _2501, _2502));
    float _4656 = isnan(0.0) ? _2511 : (isnan(_2511) ? 0.0 : max(_2511, 0.0));
    float _2515 = _2492 * _2492;
    float _2519 = ((_2510 * _2510) * (_2515 + (-1.0))) + 1.0;
    float _2526 = exp2(log2(1.0 - (isnan(1.0) ? _4656 : (isnan(_4656) ? 1.0 : min(_4656, 1.0)))) * 5.0);
    float _2533 = 1.0 - _2492;
    float _2543 = (0.5 / (((_2424 * ((_2506 * _2533) + _2492)) + 9.9999999392252902907785028219223e-09) + (((_2424 * _2533) + _2492) * _2506))) * _2506;
    float _4667 = isnan(0.0) ? _2543 : (isnan(_2543) ? 0.0 : max(_2543, 0.0));
    float _2545 = (isnan(1.0) ? _4667 : (isnan(_4667) ? 1.0 : min(_4667, 1.0))) * (_2515 / ((_2519 * _2519) * 3.141590118408203125));
    float _2555 = (((((_2526 * _2446) + _1209) * cbLight._m0[_2480].x) * _2545) * _2282) + (((((_2445 * _2446) + _1209) * cbLight._m0[_2395].x) * _2469) * _2292);
    float _2556 = (((((_2526 * _2448) + _1211) * cbLight._m0[_2480].y) * _2545) * _2282) + (((((_2445 * _2448) + _1211) * cbLight._m0[_2395].y) * _2469) * _2292);
    float _2557 = (((((_2526 * _2449) + _1212) * cbLight._m0[_2480].z) * _2545) * _2282) + (((((_2445 * _2449) + _1212) * cbLight._m0[_2395].z) * _2469) * _2292);
    float _2619;
    float _2621;
    float _2623;
    if (_2332)
    {
        _2619 = _2555;
        _2621 = _2556;
        _2623 = _2557;
    }
    else
    {
        uint _2625 = _2259 + 2u;
        uint _2629 = _2259 + 10u;
        float _2643 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2625].w)) * _1061) * 0.949999988079071044921875);
        float _2644 = _2643 * _2643;
        float _2645 = cbLight._m0[_2625].x + _1138;
        float _2646 = cbLight._m0[_2625].y + _1139;
        float _2647 = cbLight._m0[_2625].z + _1140;
        float _2651 = inversesqrt(dot(vec3(_2645, _2646, _2647), vec3(_2645, _2646, _2647)));
        float _2652 = _2651 * _2645;
        float _2653 = _2651 * _2646;
        float _2654 = _2651 * _2647;
        float _2655 = dot(vec3(_1057, _1058, _1059), vec3(cbLight._m0[_2625].xyz));
        float _4678 = isnan(0.0) ? _2655 : (isnan(_2655) ? 0.0 : max(_2655, 0.0));
        float _2658 = isnan(1.0) ? _4678 : (isnan(_4678) ? 1.0 : min(_4678, 1.0));
        float _2659 = dot(vec3(_1057, _1058, _1059), vec3(_2652, _2653, _2654));
        float _4689 = isnan(0.0) ? _2659 : (isnan(_2659) ? 0.0 : max(_2659, 0.0));
        float _2662 = isnan(1.0) ? _4689 : (isnan(_4689) ? 1.0 : min(_4689, 1.0));
        float _2663 = dot(vec3(cbLight._m0[_2625].xyz), vec3(_2652, _2653, _2654));
        float _4700 = isnan(0.0) ? _2663 : (isnan(_2663) ? 0.0 : max(_2663, 0.0));
        float _2667 = _2644 * _2644;
        float _2671 = ((_2662 * _2662) * (_2667 + (-1.0))) + 1.0;
        float _2678 = exp2(log2(1.0 - (isnan(1.0) ? _4700 : (isnan(_4700) ? 1.0 : min(_4700, 1.0)))) * 5.0);
        float _2685 = 1.0 - _2644;
        float _2695 = (0.5 / (((_2424 * ((_2658 * _2685) + _2644)) + 9.9999999392252902907785028219223e-09) + (((_2424 * _2685) + _2644) * _2658))) * _2658;
        float _4711 = isnan(0.0) ? _2695 : (isnan(_2695) ? 0.0 : max(_2695, 0.0));
        float _2697 = (isnan(1.0) ? _4711 : (isnan(_4711) ? 1.0 : min(_4711, 1.0))) * (_2667 / ((_2671 * _2671) * 3.141590118408203125));
        float _2698 = isnan(1.0) ? _2274 : (isnan(_2274) ? 1.0 : min(_2274, 1.0));
        _2619 = (((((_2678 * _2446) + _1209) * cbLight._m0[_2629].x) * _2697) * _2698) + _2555;
        _2621 = (((((_2678 * _2448) + _1211) * cbLight._m0[_2629].y) * _2697) * _2698) + _2556;
        _2623 = (((((_2678 * _2449) + _1212) * cbLight._m0[_2629].z) * _2697) * _2698) + _2557;
    }
    float _2733;
    float _2735;
    float _2737;
    if (_2350)
    {
        _2733 = _2619;
        _2735 = _2621;
        _2737 = _2623;
    }
    else
    {
        uint _2744 = _2259 + 3u;
        uint _2748 = _2259 + 11u;
        float _2762 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2744].w)) * _1061) * 0.949999988079071044921875);
        float _2763 = _2762 * _2762;
        float _2764 = cbLight._m0[_2744].x + _1138;
        float _2765 = cbLight._m0[_2744].y + _1139;
        float _2766 = cbLight._m0[_2744].z + _1140;
        float _2770 = inversesqrt(dot(vec3(_2764, _2765, _2766), vec3(_2764, _2765, _2766)));
        float _2771 = _2770 * _2764;
        float _2772 = _2770 * _2765;
        float _2773 = _2770 * _2766;
        float _2774 = dot(vec3(_1057, _1058, _1059), vec3(cbLight._m0[_2744].xyz));
        float _4727 = isnan(0.0) ? _2774 : (isnan(_2774) ? 0.0 : max(_2774, 0.0));
        float _2777 = isnan(1.0) ? _4727 : (isnan(_4727) ? 1.0 : min(_4727, 1.0));
        float _2778 = dot(vec3(_1057, _1058, _1059), vec3(_2771, _2772, _2773));
        float _4738 = isnan(0.0) ? _2778 : (isnan(_2778) ? 0.0 : max(_2778, 0.0));
        float _2781 = isnan(1.0) ? _4738 : (isnan(_4738) ? 1.0 : min(_4738, 1.0));
        float _2782 = dot(vec3(cbLight._m0[_2744].xyz), vec3(_2771, _2772, _2773));
        float _4749 = isnan(0.0) ? _2782 : (isnan(_2782) ? 0.0 : max(_2782, 0.0));
        float _2786 = _2763 * _2763;
        float _2790 = ((_2781 * _2781) * (_2786 + (-1.0))) + 1.0;
        float _2797 = exp2(log2(1.0 - (isnan(1.0) ? _4749 : (isnan(_4749) ? 1.0 : min(_4749, 1.0)))) * 5.0);
        float _2804 = 1.0 - _2763;
        float _2814 = (0.5 / (((_2424 * ((_2777 * _2804) + _2763)) + 9.9999999392252902907785028219223e-09) + (((_2424 * _2804) + _2763) * _2777))) * _2777;
        float _4760 = isnan(0.0) ? _2814 : (isnan(_2814) ? 0.0 : max(_2814, 0.0));
        float _2816 = (isnan(1.0) ? _4760 : (isnan(_4760) ? 1.0 : min(_4760, 1.0))) * (_2786 / ((_2790 * _2790) * 3.141590118408203125));
        float _2817 = isnan(1.0) ? _2275 : (isnan(_2275) ? 1.0 : min(_2275, 1.0));
        _2733 = (((((_2797 * _2446) + _1209) * cbLight._m0[_2748].x) * _2816) * _2817) + _2619;
        _2735 = (((((_2797 * _2448) + _1211) * cbLight._m0[_2748].y) * _2816) * _2817) + _2621;
        _2737 = (((((_2797 * _2449) + _1212) * cbLight._m0[_2748].z) * _2816) * _2817) + _2623;
    }
    float _2952;
    float _2954;
    float _2956;
    float _2958;
    float _2960;
    float _2962;
    if (_2257.y == 0u)
    {
        float _2892 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2893 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2892;
        float _2894 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2892;
        float _2895 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2892;
        uvec4 _2907 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2908 = _2907.x;
        uint _2919 = uint((float(_2907.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1147) / _2908))) + floor(float(uint(cbSceneParam._m0[85u].x * _1146) / _2908)));
        float _2929 = (log2(_2895 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2930 = isnan(0.0) ? _2929 : (isnan(_2929) ? 0.0 : max(_2929, 0.0));
        uint _2933 = uint(isnan(14.0) ? _2930 : (isnan(_2930) ? 14.0 : min(_2930, 14.0)));
        uvec4 _2938 = texelFetch(g_lightClusterGridBuffer, int(((_2933 << 2u) + (_2919 << 6u)) >> 2u));
        uint _2939 = _2938.x;
        uint _2940 = _2907.z;
        float _3042;
        float _3044;
        float _3046;
        float _3048;
        float _3050;
        float _3052;
        if (((((1u << ((_2940 >> 4u) & 15u)) + 4294967295u) & _2939) == 0u) || ((_2940 & 240u) == 0u))
        {
            _3042 = 0.0;
            _3044 = 0.0;
            _3046 = 0.0;
            _3048 = 0.0;
            _3050 = 0.0;
            _3052 = 0.0;
        }
        else
        {
            float _3043;
            float _3045;
            float _3047;
            float _3049;
            float _3051;
            float _3053;
            float _3187 = 0.0;
            float _3188 = 0.0;
            float _3189 = 0.0;
            float _3190 = 0.0;
            float _3191 = 0.0;
            float _3192 = 0.0;
            uint _3193 = 0u;
            uint _3202;
            bool _3203;
            for (;;)
            {
                _3202 = texelFetch(g_lightClassification, int((((_2933 << 5u) + (_2919 << 9u)) + (_3193 << 2u)) >> 2u)).x;
                _3203 = _3202 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3203)
                {
                    frontier_phi_61_pred = _3187;
                    frontier_phi_61_pred_1 = _3192;
                    frontier_phi_61_pred_2 = _3191;
                    frontier_phi_61_pred_3 = _3190;
                    frontier_phi_61_pred_4 = _3189;
                    frontier_phi_61_pred_5 = _3188;
                }
                else
                {
                    float _3311;
                    float _3312;
                    float _3313;
                    float _3314;
                    float _3315;
                    float _3316;
                    uint _3317;
                    _3311 = _3187;
                    _3312 = _3188;
                    _3313 = _3189;
                    _3314 = _3190;
                    _3315 = _3191;
                    _3316 = _3192;
                    _3317 = _3202;
                    float _3243;
                    float _3244;
                    float _3245;
                    float _3246;
                    float _3247;
                    float _3248;
                    for (;;)
                    {
                        uint _3321 = uint(findLSB(_3317)) + (_3193 << 5u);
                        uint _3318 = (_3317 + 4294967295u) & _3317;
                        uint _3323 = _3321 * 48u;
                        vec4 _3337 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3323)).x, texelFetch(g_PointLightRenderingBuffer, int(_3323 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3323 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3323 + 3u)).x));
                        uint _3343 = (_3321 * 48u) + 4u;
                        vec4 _3356 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3343)).x, texelFetch(g_PointLightRenderingBuffer, int(_3343 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3343 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3343 + 3u)).x));
                        uint _3362 = (_3321 * 48u) + 8u;
                        vec3 _3373 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3362)).x, texelFetch(g_PointLightRenderingBuffer, int(_3362 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3362 + 2u)).x));
                        float _3377 = _3337.x - _2893;
                        float _3378 = _3337.y - _2894;
                        float _3379 = _3337.z - _2895;
                        float _3380 = dot(vec3(_3377, _3378, _3379), vec3(_3377, _3378, _3379));
                        float _3383 = inversesqrt(_3380);
                        float _3384 = _3383 * _3377;
                        float _3385 = _3383 * _3378;
                        float _3386 = _3383 * _3379;
                        float _3387 = dot(vec3(_1165, _1168, _1171), vec3(_3384, _3385, _3386));
                        float _3392 = 1.0 - (_3380 * _3337.w);
                        float _4786 = isnan(0.0) ? _3392 : (isnan(_3392) ? 0.0 : max(_3392, 0.0));
                        float _3393 = isnan(1.0) ? _4786 : (isnan(_4786) ? 1.0 : min(_4786, 1.0));
                        float _3394 = sqrt(_3380) * _3356.w;
                        float _3397 = 1.39999997615814208984375 / (_3394 + 1.39999997615814208984375);
                        float _3398 = _3397 * _3397;
                        float _3401 = ((1.0 - _3398) * _3387) + _3398;
                        float _3404 = _3394 * _3394;
                        float _3408 = ((isnan(0.0) ? _3401 : (isnan(_3401) ? 0.0 : max(_3401, 0.0))) * _3393) / ((_3404 * 0.699999988079071044921875) + 1.0);
                        float _3412 = (-0.0) - _2893;
                        float _3413 = (-0.0) - _2894;
                        float _3414 = (-0.0) - _2895;
                        float _3418 = inversesqrt(dot(vec3(_3412, _3413, _3414), vec3(_3412, _3413, _3414)));
                        float _3419 = _3418 * _3412;
                        float _3420 = _3418 * _3413;
                        float _3421 = _3418 * _3414;
                        float _3429 = exp2(log2(1.0 / ((_3404 * 3.5) + 5.0)) * 0.25);
                        float _3430 = 1.0 - _1240;
                        float _3437 = sqrt(1.0 - ((1.0 - (_3430 * _3430)) * (1.0 - (_3429 * _3429))));
                        float _3438 = _3437 * _3437;
                        float _3439 = _3438 * _3438;
                        float _3440 = _3419 + _3384;
                        float _3441 = _3420 + _3385;
                        float _3442 = _3421 + _3386;
                        float _3446 = inversesqrt(dot(vec3(_3440, _3441, _3442), vec3(_3440, _3441, _3442)));
                        float _3450 = dot(vec3(_1165, _1168, _1171), vec3(_3419, _3420, _3421));
                        float _4802 = isnan(0.0) ? _3450 : (isnan(_3450) ? 0.0 : max(_3450, 0.0));
                        float _3453 = isnan(1.0) ? _4802 : (isnan(_4802) ? 1.0 : min(_4802, 1.0));
                        float _3454 = dot(vec3(_1165, _1168, _1171), vec3(_3446 * _3440, _3446 * _3441, _3446 * _3442));
                        float _4813 = isnan(0.0) ? _3454 : (isnan(_3454) ? 0.0 : max(_3454, 0.0));
                        float _3457 = isnan(1.0) ? _4813 : (isnan(_4813) ? 1.0 : min(_4813, 1.0));
                        float _3461 = ((_3457 * _3457) * (_3439 + (-1.0))) + 1.0;
                        float _3462 = _3397 * _3438;
                        float _3463 = _3462 * _3462;
                        float _3466 = ((1.0 - _3463) * _3387) + _3463;
                        float _4824 = isnan(0.0) ? _3466 : (isnan(_3466) ? 0.0 : max(_3466, 0.0));
                        float _3467 = isnan(1.0) ? _4824 : (isnan(_4824) ? 1.0 : min(_4824, 1.0));
                        float _3468 = 1.0 - _3438;
                        float _3478 = (0.5 / (((_3467 * ((_3453 * _3468) + _3438)) + 9.9999999392252902907785028219223e-09) + (((_3467 * _3468) + _3438) * _3453))) * _3467;
                        float _4835 = isnan(0.0) ? _3478 : (isnan(_3478) ? 0.0 : max(_3478, 0.0));
                        float _3489 = (((_3439 * 3.1415927410125732421875) * (isnan(1.0) ? _4835 : (isnan(_4835) ? 1.0 : min(_4835, 1.0)))) / ((_3461 * _3461) * ((_3404 * 2.1991131305694580078125) + 3.141590118408203125))) * _3393;
                        _3246 = (_3408 * _3356.x) + _3314;
                        _3247 = (_3408 * _3356.y) + _3315;
                        _3248 = (_3408 * _3356.z) + _3316;
                        _3243 = (_3489 * _3373.x) + _3311;
                        _3244 = (_3489 * _3373.y) + _3312;
                        _3245 = (_3489 * _3373.z) + _3313;
                        if (_3318 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3311 = _3243;
                            _3312 = _3244;
                            _3313 = _3245;
                            _3314 = _3246;
                            _3315 = _3247;
                            _3316 = _3248;
                            _3317 = _3318;
                        }
                    }
                    frontier_phi_61_pred = _3243;
                    frontier_phi_61_pred_1 = _3248;
                    frontier_phi_61_pred_2 = _3247;
                    frontier_phi_61_pred_3 = _3246;
                    frontier_phi_61_pred_4 = _3245;
                    frontier_phi_61_pred_5 = _3244;
                }
                _3043 = frontier_phi_61_pred;
                _3053 = frontier_phi_61_pred_1;
                _3051 = frontier_phi_61_pred_2;
                _3049 = frontier_phi_61_pred_3;
                _3047 = frontier_phi_61_pred_4;
                _3045 = frontier_phi_61_pred_5;
                uint _3194 = _3193 + 1u;
                if (_3194 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3187 = _3043;
                    _3188 = _3045;
                    _3189 = _3047;
                    _3190 = _3049;
                    _3191 = _3051;
                    _3192 = _3053;
                    _3193 = _3194;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3042 = _3043;
            _3044 = _3045;
            _3046 = _3047;
            _3048 = _3049;
            _3050 = _3051;
            _3052 = _3053;
        }
        uvec4 _3056 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3057 = _3056.z;
        uint _3059 = (_3057 >> 8u) & 15u;
        float _3155;
        float _3157;
        float _3159;
        float _3161;
        float _3163;
        float _3165;
        if (((4294967295u << _3059) & _2939) == 0u)
        {
            _3155 = _3042;
            _3157 = _3044;
            _3159 = _3046;
            _3161 = _3048;
            _3163 = _3050;
            _3165 = _3052;
        }
        else
        {
            float _3180 = inversesqrt(dot(vec3(_2893, _2894, _2895), vec3(_2893, _2894, _2895)));
            float _3181 = _3180 * _2893;
            float _3182 = _3180 * _2894;
            float _3183 = _3180 * _2895;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_3059 < ((_3057 >> 12u) & 15u))
            {
                float _3156;
                float _3158;
                float _3160;
                float _3162;
                float _3164;
                float _3166;
                float _3294 = _3042;
                float _3295 = _3044;
                float _3296 = _3046;
                float _3297 = _3048;
                float _3298 = _3050;
                float _3299 = _3052;
                uint _3300 = _3059;
                uint _3309;
                bool _3310;
                for (;;)
                {
                    _3309 = texelFetch(g_lightClassification, int((((_2933 << 5u) + (_2919 << 9u)) + (_3300 << 2u)) >> 2u)).x;
                    _3310 = _3309 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3310)
                    {
                        frontier_phi_67_pred = _3297;
                        frontier_phi_67_pred_1 = _3298;
                        frontier_phi_67_pred_2 = _3299;
                        frontier_phi_67_pred_3 = _3296;
                        frontier_phi_67_pred_4 = _3295;
                        frontier_phi_67_pred_5 = _3294;
                    }
                    else
                    {
                        float _3494;
                        float _3495;
                        float _3496;
                        float _3497;
                        float _3498;
                        float _3499;
                        float _3787;
                        float _3788;
                        float _3789;
                        float _3790;
                        float _3791;
                        float _3792;
                        float _3507 = _3294;
                        float _3508 = _3295;
                        float _3509 = _3296;
                        float _3510 = _3297;
                        float _3511 = _3298;
                        float _3512 = _3299;
                        uint _3513 = _3309;
                        uint _3514;
                        vec4 _3539;
                        float _3540;
                        vec4 _3555;
                        vec3 _3567;
                        vec4 _3582;
                        vec4 _3597;
                        float _3643;
                        bool _3644;
                        for (;;)
                        {
                            uint _3524 = ((_3300 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3513));
                            _3514 = (_3513 + 4294967295u) & _3513;
                            uint _3526 = _3524 * 40u;
                            _3539 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3526)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3526 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3526 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3526 + 3u)).x));
                            _3540 = _3539.w;
                            uint _3542 = (_3524 * 40u) + 4u;
                            _3555 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3542)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3542 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3542 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3542 + 3u)).x));
                            uint _3557 = (_3524 * 40u) + 8u;
                            _3567 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3557)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3557 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3557 + 2u)).x));
                            uint _3569 = (_3524 * 40u) + 16u;
                            _3582 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3569)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3569 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3569 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3569 + 3u)).x));
                            uint _3584 = (_3524 * 40u) + 20u;
                            _3597 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3584)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3584 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3584 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3584 + 3u)).x));
                            uint _3599 = (_3524 * 40u) + 24u;
                            vec4 _3612 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3599)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3599 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3599 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3599 + 3u)).x));
                            uint _3618 = (_3524 * 40u) + 28u;
                            vec4 _3631 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3618)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3618 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3618 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3618 + 3u)).x));
                            _3643 = fma(_2895, _3631.z, fma(_2894, _3631.y, _3631.x * _2893)) + _3631.w;
                            _3644 = !((fma(_2895, _3612.z, fma(_2894, _3612.y, _3612.x * _2893)) + _3612.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3644)
                            {
                                float _3671 = _3539.x - _2893;
                                float _3672 = _3539.y - _2894;
                                float _3673 = _3539.z - _2895;
                                float _3674 = dot(vec3(_3671, _3672, _3673), vec3(_3671, _3672, _3673));
                                float _3677 = inversesqrt(_3674);
                                float _3678 = _3677 * _3671;
                                float _3679 = _3677 * _3672;
                                float _3680 = _3677 * _3673;
                                float _3684 = 1.0 - (_3674 / (_3540 * _3540));
                                float _4846 = isnan(0.0) ? _3684 : (isnan(_3684) ? 0.0 : max(_3684, 0.0));
                                float _3685 = isnan(1.0) ? _4846 : (isnan(_4846) ? 1.0 : min(_4846, 1.0));
                                float _3689 = sqrt(_3674) * _3555.w;
                                float _3691 = 1.39999997615814208984375 / (_3689 + 1.39999997615814208984375);
                                float _3692 = _3691 * _3691;
                                float _3695 = ((1.0 - _3692) * dot(vec3(_3678, _3679, _3680), vec3(_1165, _1168, _1171))) + _3692;
                                float _3698 = _3689 * _3689;
                                float _3702 = (fma(_2895, _3582.z, fma(_2894, _3582.y, _3582.x * _2893)) + _3582.w) / _3643;
                                float _3703 = (fma(_2895, _3597.z, fma(_2894, _3597.y, _3597.x * _2893)) + _3597.w) / _3643;
                                float _3707 = 1.0 - dot(vec2(_3702, _3703), vec2(_3702, _3703));
                                float _4862 = isnan(0.0) ? _3707 : (isnan(_3707) ? 0.0 : max(_3707, 0.0));
                                float _3708 = isnan(1.0) ? _4862 : (isnan(_4862) ? 1.0 : min(_4862, 1.0));
                                float _3709 = _3708 * (((isnan(0.0) ? _3695 : (isnan(_3695) ? 0.0 : max(_3695, 0.0))) * _3685) / ((_3698 * 0.699999988079071044921875) + 1.0));
                                float _3721 = exp2(log2(1.0 / ((_3698 * 3.5) + 5.0)) * 0.25);
                                float _3722 = 1.0 - _1240;
                                float _3729 = sqrt(1.0 - ((1.0 - (_3722 * _3722)) * (1.0 - (_3721 * _3721))));
                                float _3730 = _3729 * _3729;
                                float _3731 = _3730 * _3730;
                                float _3732 = _3678 - _3181;
                                float _3733 = _3679 - _3182;
                                float _3734 = _3680 - _3183;
                                float _3738 = inversesqrt(dot(vec3(_3732, _3733, _3734), vec3(_3732, _3733, _3734)));
                                float _3742 = dot(vec3(_1165, _1168, _1171), vec3((-0.0) - _3181, (-0.0) - _3182, (-0.0) - _3183));
                                float _4873 = isnan(0.0) ? _3742 : (isnan(_3742) ? 0.0 : max(_3742, 0.0));
                                float _3745 = isnan(1.0) ? _4873 : (isnan(_4873) ? 1.0 : min(_4873, 1.0));
                                float _3746 = dot(vec3(_1165, _1168, _1171), vec3(_3738 * _3732, _3738 * _3733, _3738 * _3734));
                                float _4884 = isnan(0.0) ? _3746 : (isnan(_3746) ? 0.0 : max(_3746, 0.0));
                                float _3749 = isnan(1.0) ? _4884 : (isnan(_4884) ? 1.0 : min(_4884, 1.0));
                                float _3753 = ((_3749 * _3749) * (_3731 + (-1.0))) + 1.0;
                                float _3754 = _3691 * _3730;
                                float _3755 = _3754 * _3754;
                                float _3761 = ((1.0 - _3755) * dot(vec3(_1165, _1168, _1171), vec3(_3678, _3679, _3680))) + _3755;
                                float _4895 = isnan(0.0) ? _3761 : (isnan(_3761) ? 0.0 : max(_3761, 0.0));
                                float _3762 = isnan(1.0) ? _4895 : (isnan(_4895) ? 1.0 : min(_4895, 1.0));
                                float _3763 = 1.0 - _3730;
                                float _3773 = (0.5 / (((_3762 * ((_3745 * _3763) + _3730)) + 9.9999999392252902907785028219223e-09) + (((_3762 * _3763) + _3730) * _3745))) * _3762;
                                float _4906 = isnan(0.0) ? _3773 : (isnan(_3773) ? 0.0 : max(_3773, 0.0));
                                float _3783 = (_3708 * _3685) * (((_3731 * 3.1415927410125732421875) * (isnan(1.0) ? _4906 : (isnan(_4906) ? 1.0 : min(_4906, 1.0)))) / ((_3753 * _3753) * ((_3698 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3783 * _3567.x;
                                frontier_phi_73_pred_1 = _3783 * _3567.y;
                                frontier_phi_73_pred_2 = _3709 * _3555.z;
                                frontier_phi_73_pred_3 = _3709 * _3555.y;
                                frontier_phi_73_pred_4 = _3709 * _3555.x;
                                frontier_phi_73_pred_5 = _3783 * _3567.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3787 = frontier_phi_73_pred;
                            _3788 = frontier_phi_73_pred_1;
                            _3792 = frontier_phi_73_pred_2;
                            _3791 = frontier_phi_73_pred_3;
                            _3790 = frontier_phi_73_pred_4;
                            _3789 = frontier_phi_73_pred_5;
                            _3497 = _3790 + _3510;
                            _3498 = _3791 + _3511;
                            _3499 = _3792 + _3512;
                            _3494 = _3787 + _3507;
                            _3495 = _3788 + _3508;
                            _3496 = _3789 + _3509;
                            if (_3514 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3507 = _3494;
                                _3508 = _3495;
                                _3509 = _3496;
                                _3510 = _3497;
                                _3511 = _3498;
                                _3512 = _3499;
                                _3513 = _3514;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3497;
                        frontier_phi_67_pred_1 = _3498;
                        frontier_phi_67_pred_2 = _3499;
                        frontier_phi_67_pred_3 = _3496;
                        frontier_phi_67_pred_4 = _3495;
                        frontier_phi_67_pred_5 = _3494;
                    }
                    _3162 = frontier_phi_67_pred;
                    _3164 = frontier_phi_67_pred_1;
                    _3166 = frontier_phi_67_pred_2;
                    _3160 = frontier_phi_67_pred_3;
                    _3158 = frontier_phi_67_pred_4;
                    _3156 = frontier_phi_67_pred_5;
                    uint _3301 = _3300 + 1u;
                    if (_3301 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3294 = _3156;
                        _3295 = _3158;
                        _3296 = _3160;
                        _3297 = _3162;
                        _3298 = _3164;
                        _3299 = _3166;
                        _3300 = _3301;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3164;
                frontier_phi_55_56_ladder_1 = _3166;
                frontier_phi_55_56_ladder_2 = _3162;
                frontier_phi_55_56_ladder_3 = _3160;
                frontier_phi_55_56_ladder_4 = _3158;
                frontier_phi_55_56_ladder_5 = _3156;
            }
            else
            {
                frontier_phi_55_56_ladder = _3050;
                frontier_phi_55_56_ladder_1 = _3052;
                frontier_phi_55_56_ladder_2 = _3048;
                frontier_phi_55_56_ladder_3 = _3046;
                frontier_phi_55_56_ladder_4 = _3044;
                frontier_phi_55_56_ladder_5 = _3042;
            }
            _3155 = frontier_phi_55_56_ladder_5;
            _3157 = frontier_phi_55_56_ladder_4;
            _3159 = frontier_phi_55_56_ladder_3;
            _3161 = frontier_phi_55_56_ladder_2;
            _3163 = frontier_phi_55_56_ladder;
            _3165 = frontier_phi_55_56_ladder_1;
        }
        float _3170 = isnan(1.0) ? _1224 : (isnan(_1224) ? 1.0 : min(_1224, 1.0));
        _2952 = (_3170 * _3161) + _2388;
        _2954 = (_3170 * _3163) + _2390;
        _2956 = (_3170 * _3165) + _2392;
        _2958 = ((_3155 * _1209) * _3170) + _2733;
        _2960 = ((_3157 * _1211) * _3170) + _2735;
        _2962 = ((_3159 * _1212) * _3170) + _2737;
    }
    else
    {
        _2952 = _2388;
        _2954 = _2390;
        _2956 = _2392;
        _2958 = _2733;
        _2960 = _2735;
        _2962 = _2737;
    }
    float _4922 = isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0));
    float _4933 = isnan(0.0) ? _1200 : (isnan(_1200) ? 0.0 : max(_1200, 0.0));
    float _4944 = isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0));
    float _4955 = isnan(0.0) ? _1060 : (isnan(_1060) ? 0.0 : max(_1060, 0.0));
    float _2987 = cbInstanceData._m0[_1184 + 6u].w * (isnan(1.0) ? _4955 : (isnan(_4955) ? 1.0 : min(_4955, 1.0)));
    float _2992 = _1146 / cbSceneParam._m0[86u].x;
    float _2993 = _1147 / cbSceneParam._m0[86u].y;
    vec4 _3007 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2992, _2993, (log2((isnan(cbSceneParam._m0[77u].w) ? _1081 : (isnan(_1081) ? cbSceneParam._m0[77u].w : min(_1081, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3009 = _3007.x;
    float _3010 = _3007.y;
    float _3011 = _3007.z;
    float _3012 = _3007.w;
    float _3105;
    float _3107;
    float _3109;
    float _3111;
    if (_1081 > cbSceneParam._m0[78u].w)
    {
        float _3067 = isnan(_1081) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1081 : min(cbSceneParam._m0[80u].w, _1081));
        float _3068 = _3067 / _1081;
        float _3079 = _3068 * _1131;
        float _3080 = _1132 * _3068;
        float _3081 = (-0.0) - _3080;
        float _3083 = _3068 * _1133;
        float _3085 = (cbSceneParam._m0[77u].w * _3081) / _3067;
        float _3086 = _3085 + cbSceneParam._m0[79u].w;
        float _3087 = cbSceneParam._m0[79u].w - _3080;
        float _3093 = sqrt(((_3079 * _3079) + (_3080 * _3080)) + (_3083 * _3083));
        float _3096 = (1.0 - (cbSceneParam._m0[77u].w / _3067)) * _3093;
        float _3101 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3103 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3256;
        if (abs((_3081 - _3085) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3256 = ((((_3086 > 0.0) ? exp2(_3101 * _3086) : (2.0 - exp2(_3103 * _3086))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3096;
        }
        else
        {
            float _3216 = 1.0 / cbSceneParam._m0[80u].x;
            float _3217 = isnan(_3087) ? _3086 : (isnan(_3086) ? _3087 : max(_3086, _3087));
            float _3218 = isnan(_3087) ? _3086 : (isnan(_3086) ? _3087 : min(_3086, _3087));
            float _3227 = isnan(0.0) ? _3217 : (isnan(_3217) ? 0.0 : min(_3217, 0.0));
            float _3228 = isnan(0.0) ? _3218 : (isnan(_3218) ? 0.0 : min(_3218, 0.0));
            _3256 = ((abs(_3093 / _3081) * cbSceneParam._m0[80u].y) * ((((_3227 - _3228) * 2.0) - ((exp2(_3101 * (isnan(0.0) ? _3217 : (isnan(_3217) ? 0.0 : max(_3217, 0.0)))) - exp2(_3101 * (isnan(0.0) ? _3218 : (isnan(_3218) ? 0.0 : max(_3218, 0.0))))) * _3216)) - ((exp2(_3103 * _3227) - exp2(_3103 * _3228)) * _3216))) + (_3096 * cbSceneParam._m0[80u].z);
        }
        vec4 _3258 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2992, _2993, 1.0), 0.0);
        float _3267 = exp2((_3256 * (-1.44269502162933349609375)) * (1.0 - _3258.w));
        float _3268 = log2(_3267);
        float _3284 = log2(_3012);
        _3105 = (exp2(_3284 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3268 * cbSceneParam._m0[78u].x)) * _3258.x) / cbSceneParam._m0[78u].x)) + _3009;
        _3107 = (exp2(_3284 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3268 * cbSceneParam._m0[78u].y)) * _3258.y) / cbSceneParam._m0[78u].y)) + _3010;
        _3109 = (exp2(_3284 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3268 * cbSceneParam._m0[78u].z)) * _3258.z) / cbSceneParam._m0[78u].z)) + _3011;
        _3111 = _3267 * _3012;
    }
    else
    {
        _3105 = _3009;
        _3107 = _3010;
        _3109 = _3011;
        _3111 = _3012;
    }
    float _3123 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3124 = _3123 == 3.0;
    float _3125 = log2(_3111);
    float _3132 = exp2(_3125 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4922 : (isnan(_4922) ? 1.0 : min(_4922, 1.0))) * (_2952 + ((isnan(0.0) ? _1949 : (isnan(_1949) ? 0.0 : max(_1949, 0.0))) * _1224))) + ((_2958 + ((isnan(0.0) ? _2241 : (isnan(_2241) ? 0.0 : max(_2241, 0.0))) * _2028)) * cbPerFrame._m0[3u].x));
    float _3133 = exp2(_3125 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4933 : (isnan(_4933) ? 1.0 : min(_4933, 1.0))) * (_2954 + ((isnan(0.0) ? _1952 : (isnan(_1952) ? 0.0 : max(_1952, 0.0))) * _1224))) + ((_2960 + ((isnan(0.0) ? _2244 : (isnan(_2244) ? 0.0 : max(_2244, 0.0))) * _2028)) * cbPerFrame._m0[3u].x));
    float _3134 = exp2(_3125 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4944 : (isnan(_4944) ? 1.0 : min(_4944, 1.0))) * (_2956 + ((isnan(0.0) ? _1955 : (isnan(_1955) ? 0.0 : max(_1955, 0.0))) * _1224))) + ((_2962 + ((isnan(0.0) ? _2247 : (isnan(_2247) ? 0.0 : max(_2247, 0.0))) * _2028)) * cbPerFrame._m0[3u].x));
    float _3143 = (_3123 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3143 * (_3124 ? _3132 : (_3132 + (cbSceneParam._m0[72u].w * _3105)));
    SV_Target.y = _3143 * (_3124 ? _3133 : (_3133 + (cbSceneParam._m0[72u].w * _3107)));
    SV_Target.z = _3143 * (_3124 ? _3134 : (_3134 + (cbSceneParam._m0[72u].w * _3109)));
    SV_Target.w = _2987;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2987;
}


