#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_23;
layout(set = 0, binding = 11) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_24;
layout(set = 0, binding = 12) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_4;
layout(set = 0, binding = 13) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_6;
layout(set = 0, binding = 14) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_7;
layout(set = 0, binding = 15) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_19;
layout(set = 0, binding = 7) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_20;
layout(set = 0, binding = 9) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_22;
layout(set = 0, binding = 17) uniform texture2DArray C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_0;
layout(set = 0, binding = 18) uniform texture2DArray C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in float TEXCOORD_8;
layout(location = 7, component = 1) in float TEXCOORD_9;
layout(location = 7, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1491;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _226 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _227 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _228 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _234 = inversesqrt(dot(vec3(_226, _227, _228), vec3(_226, _227, _228)));
    float _241 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _248 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _292 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _296 = _292.z;
    float _309 = exp2(log2((1.0 - _296) * cbMtdParam._m0[26u].z) * cbMtdParam._m0[25u].w);
    float _310 = isnan(0.0) ? _309 : (isnan(_309) ? 0.0 : max(_309, 0.0));
    float _311 = isnan(1.0) ? _310 : (isnan(_310) ? 1.0 : min(_310, 1.0));
    vec4 _328 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w));
    float _340 = exp2(log2(_328.w * cbMtdParam._m0[29u].y) * cbMtdParam._m0[23u].x);
    float _341 = isnan(0.0) ? _340 : (isnan(_340) ? 0.0 : max(_340, 0.0));
    float _342 = isnan(1.0) ? _341 : (isnan(_341) ? 1.0 : min(_341, 1.0));
    float _351 = exp2(log2(cbMtdParam._m0[23u].y * _296) * cbMtdParam._m0[22u].y);
    float _352 = isnan(0.0) ? _351 : (isnan(_351) ? 0.0 : max(_351, 0.0));
    float _353 = isnan(1.0) ? _352 : (isnan(_352) ? 1.0 : min(_352, 1.0));
    vec4 _365 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _368 = _365.y;
    float _371 = (_365.x + (-0.02500000037252902984619140625)) * 8.0;
    float _375 = roundEven(5.0 - _371);
    float _376 = isnan(0.0) ? _375 : (isnan(_375) ? 0.0 : max(_375, 0.0));
    float _377 = isnan(4.0) ? _376 : (isnan(_376) ? 4.0 : min(_376, 4.0));
    float _389 = floor(_377);
    vec4 _392 = texture(sampler2DArray(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_0, SS_DiffuseMap), vec3((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w, _389));
    float _204[6];
    float _205[6];
    float _206[6];
    _204[0u] = cbMtdParam._m0[17u].x;
    _205[0u] = cbMtdParam._m0[17u].y;
    _206[0u] = cbMtdParam._m0[17u].z;
    _204[1u] = cbMtdParam._m0[15u].x;
    _205[1u] = cbMtdParam._m0[15u].y;
    _206[1u] = cbMtdParam._m0[15u].z;
    _204[2u] = cbMtdParam._m0[14u].x;
    _205[2u] = cbMtdParam._m0[14u].y;
    _206[2u] = cbMtdParam._m0[14u].z;
    _204[3u] = cbMtdParam._m0[13u].x;
    _205[3u] = cbMtdParam._m0[13u].y;
    _206[3u] = cbMtdParam._m0[13u].z;
    _204[4u] = cbMtdParam._m0[12u].x;
    _205[4u] = cbMtdParam._m0[12u].y;
    _206[4u] = cbMtdParam._m0[12u].z;
    _204[5u] = cbMtdParam._m0[18u].x;
    _205[5u] = cbMtdParam._m0[18u].y;
    _206[5u] = cbMtdParam._m0[18u].z;
    float _456 = roundEven(_371);
    float _457 = isnan(0.0) ? _456 : (isnan(_456) ? 0.0 : max(_456, 0.0));
    uint _459 = uint(int(isnan(5.0) ? _457 : (isnan(_457) ? 5.0 : min(_457, 5.0))));
    vec4 _489 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _500 = cbMtdParam._m0[9u].x * _489.x;
    float _501 = cbMtdParam._m0[9u].y * _489.y;
    float _502 = cbMtdParam._m0[9u].z * _489.z;
    float _509 = ((((((_204[_459] - cbMtdParam._m0[10u].x) * _368) + cbMtdParam._m0[10u].x) * _392.x) - _500) * _353) + _500;
    float _510 = ((((((_205[_459] - cbMtdParam._m0[10u].y) * _368) + cbMtdParam._m0[10u].y) * _392.y) - _501) * _353) + _501;
    float _511 = ((((((_206[_459] - cbMtdParam._m0[10u].z) * _368) + cbMtdParam._m0[10u].z) * _392.z) - _502) * _353) + _502;
    float _517 = exp2(log2(_292.w) * cbMtdParam._m0[23u].w);
    vec4 _530 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _550 = (((cbMtdParam._m0[16u].x * _530.x) - _509) * _517) + _509;
    float _551 = (((cbMtdParam._m0[16u].y * _530.y) - _510) * _517) + _510;
    float _552 = (((cbMtdParam._m0[16u].z * _530.z) - _511) * _517) + _511;
    vec4 _564 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _584 = (((cbMtdParam._m0[19u].x * _564.x) - _550) * _342) + _550;
    float _585 = (((cbMtdParam._m0[19u].y * _564.y) - _551) * _342) + _551;
    float _586 = (((cbMtdParam._m0[19u].z * _564.z) - _552) * _342) + _552;
    vec4 _598 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_19, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _623 = (_328.x * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].x * _598.x) - _584) * _311) + _584);
    float _625 = (_328.y * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].y * _598.y) - _585) * _311) + _585);
    float _627 = (_328.z * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].z * _598.z) - _586) * _311) + _586);
    float _631 = cbMtdParam._m0[28u].x * TEXCOORD_8;
    float _640 = (_631 - (((texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_23, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x + 0.00999999977648258209228515625) * cbMtdParam._m0[27u].z) * (1.0 - _631))) * (cbMtdParam._m0[27u].w + 1.0);
    float _3890 = isnan(0.0) ? _640 : (isnan(_640) ? 0.0 : max(_640, 0.0));
    float _641 = isnan(1.0) ? _3890 : (isnan(_3890) ? 1.0 : min(_3890, 1.0));
    float _648 = ((cbMtdParam._m0[21u].x - _623) * _641) + _623;
    float _649 = ((cbMtdParam._m0[21u].y - _625) * _641) + _625;
    float _650 = ((cbMtdParam._m0[21u].z - _627) * _641) + _627;
    vec4 _664 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_24, SS_ClampLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.z) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.w) + cbTextureTilingScale._m0[11u].w));
    float _672 = (_664.x + (-1.0)) + (cbMtdParam._m0[28u].y * 2.0);
    float _3901 = isnan(0.0) ? _672 : (isnan(_672) ? 0.0 : max(_672, 0.0));
    float _678 = exp2(log2(cbMtdParam._m0[28u].w * (isnan(1.0) ? _3901 : (isnan(_3901) ? 1.0 : min(_3901, 1.0)))) * cbMtdParam._m0[28u].z);
    float _3912 = isnan(0.0) ? _678 : (isnan(_678) ? 0.0 : max(_678, 0.0));
    float _679 = isnan(1.0) ? _3912 : (isnan(_3912) ? 1.0 : min(_3912, 1.0));
    float _199[5];
    float _200[5];
    _199[0u] = cbMtdParam._m0[29u].z;
    _200[0u] = cbMtdParam._m0[29u].w;
    _199[1u] = cbMtdParam._m0[31u].z;
    _200[1u] = cbMtdParam._m0[31u].w;
    _199[2u] = cbMtdParam._m0[31u].x;
    _200[2u] = cbMtdParam._m0[31u].y;
    _199[3u] = cbMtdParam._m0[30u].z;
    _200[3u] = cbMtdParam._m0[30u].w;
    _199[4u] = cbMtdParam._m0[30u].x;
    _200[4u] = cbMtdParam._m0[30u].y;
    float _718 = isnan(0.0) ? _377 : (isnan(_377) ? 0.0 : max(_377, 0.0));
    uint _720 = uint(int(isnan(4.0) ? _718 : (isnan(_718) ? 4.0 : min(_718, 4.0))));
    float _727 = ((_200[_720] - cbMtdParam._m0[22u].z) * _353) + cbMtdParam._m0[22u].z;
    float _730 = ((cbMtdParam._m0[22u].w - _727) * _517) + _727;
    float _733 = ((cbMtdParam._m0[25u].x - _730) * _342) + _730;
    float _736 = ((cbMtdParam._m0[26u].x - _733) * _311) + _733;
    float _738 = _736 - (_736 * _631);
    vec4 _754 = texture(sampler2DArray(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_1, SS_BumpMap), vec3((cbTextureTilingScale._m0[18u].x * TEXCOORD.x) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD.y) + cbTextureTilingScale._m0[18u].w, _389));
    vec4 _771 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w));
    float _773 = _771.x;
    float _774 = _771.y;
    float _779 = cbMtdParam._m0[22u].x + _771.z;
    float _782 = (((_754.z + _199[_720]) - _779) * _353) + _779;
    vec4 _794 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.x) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.y) + cbTextureTilingScale._m0[15u].w));
    float _805 = (((_794.z - _782) + cbMtdParam._m0[29u].x) * _517) + _782;
    float _810 = ((((_296 * 2.0) * _805) - _805) * cbMtdParam._m0[24u].w) + _805;
    vec4 _822 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w));
    float _833 = (((cbMtdParam._m0[23u].z + _822.z) - _810) * _342) + _810;
    vec4 _846 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_20, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _857 = (((_846.z - _833) + cbMtdParam._m0[26u].y) * _311) + _833;
    vec4 _872 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_22, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _886 = ((cbMtdParam._m0[27u].y * _631) * ((_872.z * cbMtdParam._m0[27u].x) - _857)) + _857;
    float _898 = ((_754.x - _773) * _353) + _773;
    float _899 = ((_754.y - _774) * _353) + _774;
    float _904 = ((_794.x - _898) * _517) + _898;
    float _905 = ((_794.y - _899) * _517) + _899;
    float _910 = ((_822.x - _904) * _342) + _904;
    float _911 = ((_822.y - _905) * _342) + _905;
    float _920 = ((((_846.x - _910) * _311) + _910) * 2.0) + (-1.0);
    float _921 = ((((_846.y - _911) * _311) + _911) * 2.0) + (-1.0);
    float _922 = dot(vec2(_920, _921), vec2(_920, _921));
    float _3933 = isnan(0.0) ? _922 : (isnan(_922) ? 0.0 : max(_922, 0.0));
    float _927 = sqrt(1.0 - (isnan(1.0) ? _3933 : (isnan(_3933) ? 1.0 : min(_3933, 1.0))));
    float _937 = ((cbMtdParam._m0[25u].y * ((_292.x * 2.0) + (-1.0))) + _920) + ((((_872.x * 2.0) + (-1.0)) * _631) * cbMtdParam._m0[26u].w);
    float _938 = ((cbMtdParam._m0[25u].y * ((_292.y * 2.0) + (-1.0))) + _921) + (((cbMtdParam._m0[28u].x * TEXCOORD_9) * ((_872.y * 2.0) + (-1.0))) * cbMtdParam._m0[26u].w);
    float _941 = fma(_927, _241 * NORMAL.x, fma(_938, _248 * TANGENT.x, (_234 * _226) * _937));
    float _944 = fma(_927, _241 * NORMAL.y, fma(_938, _248 * TANGENT.y, (_234 * _227) * _937));
    float _947 = fma(_927, _241 * NORMAL.z, fma(_938, _248 * TANGENT.z, (_234 * _228) * _937));
    float _951 = inversesqrt(dot(vec3(_941, _944, _947), vec3(_941, _944, _947)));
    float _952 = _951 * _941;
    float _953 = _951 * _944;
    float _954 = _951 * _947;
    float _3944 = isnan(0.0) ? _679 : (isnan(_679) ? 0.0 : max(_679, 0.0));
    float _955 = isnan(1.0) ? _3944 : (isnan(_3944) ? 1.0 : min(_3944, 1.0));
    float _3955 = isnan(0.0) ? _886 : (isnan(_886) ? 0.0 : max(_886, 0.0));
    float _956 = isnan(1.0) ? _3955 : (isnan(_3955) ? 1.0 : min(_3955, 1.0));
    float _3966 = isnan(0.0) ? _648 : (isnan(_648) ? 0.0 : max(_648, 0.0));
    float _3977 = isnan(0.0) ? _649 : (isnan(_649) ? 0.0 : max(_649, 0.0));
    float _3988 = isnan(0.0) ? _650 : (isnan(_650) ? 0.0 : max(_650, 0.0));
    float _3999 = isnan(0.0) ? _738 : (isnan(_738) ? 0.0 : max(_738, 0.0));
    float _960 = isnan(1.0) ? _3999 : (isnan(_3999) ? 1.0 : min(_3999, 1.0));
    float _976 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1016 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1026 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1016);
    float _1027 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1016);
    float _1028 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1016);
    float _1032 = inversesqrt(dot(vec3(_1026, _1027, _1028), vec3(_1026, _1027, _1028)));
    float _1033 = _1026 * _1032;
    float _1034 = _1027 * _1032;
    float _1035 = _1028 * _1032;
    float _1041 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1042 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1060 = fma(_954, cbSceneParam._m0[5u].z, fma(_953, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _952));
    float _1063 = fma(_954, cbSceneParam._m0[6u].z, fma(_953, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _952));
    float _1066 = fma(_954, cbSceneParam._m0[7u].z, fma(_953, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _952));
    uint _1079 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1081 = (_1079 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1087 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3966 : (isnan(_3966) ? 1.0 : min(_3966, 1.0)))) * cbInstanceData._m0[_1081].x;
    float _1088 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3977 : (isnan(_3977) ? 1.0 : min(_3977, 1.0)))) * cbInstanceData._m0[_1081].y;
    float _1089 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3988 : (isnan(_3988) ? 1.0 : min(_3988, 1.0)))) * cbInstanceData._m0[_1081].z;
    float _4010 = isnan(0.0) ? _1087 : (isnan(_1087) ? 0.0 : max(_1087, 0.0));
    float _1090 = isnan(1.0) ? _4010 : (isnan(_4010) ? 1.0 : min(_4010, 1.0));
    float _4021 = isnan(0.0) ? _1088 : (isnan(_1088) ? 0.0 : max(_1088, 0.0));
    float _1091 = isnan(1.0) ? _4021 : (isnan(_4021) ? 1.0 : min(_4021, 1.0));
    float _4032 = isnan(0.0) ? _1089 : (isnan(_1089) ? 0.0 : max(_1089, 0.0));
    float _1092 = isnan(1.0) ? _4032 : (isnan(_4032) ? 1.0 : min(_4032, 1.0));
    float _1093 = 1.0 - _960;
    float _1094 = _1090 * _1093;
    float _1095 = _1091 * _1093;
    float _1096 = _1092 * _1093;
    float _1101 = (_1090 + (-0.039999999105930328369140625)) * _960;
    float _1102 = (_1091 + (-0.039999999105930328369140625)) * _960;
    float _1103 = (_1092 + (-0.039999999105930328369140625)) * _960;
    float _1104 = _1101 + 0.039999999105930328369140625;
    float _1106 = _1102 + 0.039999999105930328369140625;
    float _1107 = _1103 + 0.039999999105930328369140625;
    vec4 _1116 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1041, cbSceneParam._m0[86u].y * _1042));
    float _1119 = _1116.x * TEXCOORD_5.w;
    float _1120 = dot(vec3(_952, _953, _954), vec3(_1033, _1034, _1035));
    float _1123 = _1120 * 2.0;
    float _1127 = (_1123 * _952) - _1033;
    float _1128 = (_1123 * _953) - _1034;
    float _1129 = (_1123 * _954) - _1035;
    float _1133 = abs(dot(vec3(_1033, _1034, _1035), vec3(_952, _953, _954)));
    float _4043 = isnan(0.0) ? _1133 : (isnan(_1133) ? 0.0 : max(_1133, 0.0));
    float _1135 = sqrt(_956);
    float _1146 = exp2((_1135 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4043 : (isnan(_4043) ? 1.0 : min(_4043, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1135 * 3.0));
    float _1152 = (1.0 - _1146) * ((_1135 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1153 = _1146 * _1135;
    float _1181 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1185 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1189 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1490;
    float _1492;
    float _1493;
    float _1494;
    float _1495;
    float _1496;
    float _1497;
    float _1498;
    float _1499;
    float _1500;
    float _1501;
    float _1502;
    float _1503;
    float _1504;
    float _1505;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1215 = fma(_1189, cbModelParam._m0[26u].z, fma(_1185, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1181));
        float _1219 = fma(_1189, cbModelParam._m0[27u].z, fma(_1185, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1181));
        float _1223 = fma(_1189, cbModelParam._m0[28u].z, fma(_1185, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1181));
        float _1248 = _1181 + _952;
        float _1249 = _1185 + _953;
        float _1250 = _1189 + _954;
        float _1260 = fma(_1250, cbModelParam._m0[26u].z, fma(_1249, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1248)) - _1215;
        float _1261 = fma(_1250, cbModelParam._m0[27u].z, fma(_1249, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1248)) - _1219;
        float _1262 = fma(_1250, cbModelParam._m0[28u].z, fma(_1249, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1248)) - _1223;
        float _1266 = inversesqrt(dot(vec3(_1260, _1261, _1262), vec3(_1260, _1261, _1262)));
        float _1279 = ((_1266 * _1260) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1215 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1280 = ((_1266 * _1261) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1219 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1281 = ((_1266 * _1262) / cbModelParam._m0[34u].z) + ((((((_1223 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1284 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1279, _1280, _1281), 0.0);
        vec4 _1291 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1279, _1280, _1281), 0.0);
        vec4 _1298 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1279, _1280, _1281), 0.0);
        vec4 _1305 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1279, _1280, _1281), 0.0);
        float _1318 = exp2((_1284.w + (-0.5)) * 20.0) * 2.0;
        float _1319 = _1318 * (_1284.x + (-0.5));
        float _1320 = _1318 * (_1284.y + (-0.5));
        float _1321 = _1318 * (_1284.z + (-0.5));
        float _1328 = exp2((_1291.w + (-0.5)) * 20.0) * 2.0;
        float _1329 = _1328 * (_1291.x + (-0.5));
        float _1330 = _1328 * (_1291.y + (-0.5));
        float _1331 = _1328 * (_1291.z + (-0.5));
        float _1338 = exp2((_1298.w + (-0.5)) * 20.0) * 2.0;
        float _1339 = _1338 * (_1298.x + (-0.5));
        float _1340 = _1338 * (_1298.y + (-0.5));
        float _1341 = _1338 * (_1298.z + (-0.5));
        float _1348 = exp2((_1305.w + (-0.5)) * 20.0) * 2.0;
        float _1349 = _1348 * (_1305.x + (-0.5));
        float _1350 = _1348 * (_1305.y + (-0.5));
        float _1351 = _1348 * (_1305.z + (-0.5));
        float _1352 = isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0));
        float _1353 = isnan(0.0) ? _1350 : (isnan(_1350) ? 0.0 : max(_1350, 0.0));
        float _1354 = isnan(0.0) ? _1351 : (isnan(_1351) ? 0.0 : max(_1351, 0.0));
        float _1355 = _1319 * 0.5;
        float _1356 = _1329 * 0.5;
        float _1357 = _1339 * 0.5;
        float _1358 = dot(vec3(_1355, _1356, _1357), vec3(_1355, _1356, _1357));
        float _1363 = (_1358 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1358);
        float _1372 = (dot(vec3(_952, _953, _954), vec3(_1363 * _1355, _1363 * _1356, _1363 * _1357)) + 1.0) * 0.5;
        float _4069 = isnan(0.0) ? _1372 : (isnan(_1372) ? 0.0 : max(_1372, 0.0));
        float _1382 = sqrt(((_1356 * _1356) + (_1355 * _1355)) + (_1357 * _1357)) / (_1352 + 9.9999997473787516355514526367188e-06);
        float _4080 = isnan(0.0) ? _1382 : (isnan(_1382) ? 0.0 : max(_1382, 0.0));
        float _1383 = isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0));
        float _1384 = _1383 * 2.0;
        float _1388 = (1.0 - _1383) / (_1383 + 1.0);
        float _4091 = isnan(0.0) ? _1388 : (isnan(_1388) ? 0.0 : max(_1388, 0.0));
        float _1389 = isnan(1.0) ? _4091 : (isnan(_4091) ? 1.0 : min(_4091, 1.0));
        float _1398 = ((((1.0 - _1389) * (_1384 + 2.0)) * exp2(log2(isnan(1.0) ? _4069 : (isnan(_4069) ? 1.0 : min(_4069, 1.0))) * (_1384 + 1.0))) + _1389) * _1352;
        float _1399 = _1320 * 0.5;
        float _1400 = _1330 * 0.5;
        float _1401 = _1340 * 0.5;
        float _1402 = dot(vec3(_1399, _1400, _1401), vec3(_1399, _1400, _1401));
        float _1407 = (_1402 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1402);
        float _1415 = (dot(vec3(_952, _953, _954), vec3(_1407 * _1399, _1407 * _1400, _1407 * _1401)) + 1.0) * 0.5;
        float _4102 = isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0));
        float _1424 = sqrt(((_1400 * _1400) + (_1399 * _1399)) + (_1401 * _1401)) / (_1353 + 9.9999997473787516355514526367188e-06);
        float _4113 = isnan(0.0) ? _1424 : (isnan(_1424) ? 0.0 : max(_1424, 0.0));
        float _1425 = isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0));
        float _1426 = _1425 * 2.0;
        float _1430 = (1.0 - _1425) / (_1425 + 1.0);
        float _4124 = isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0));
        float _1431 = isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0));
        float _1440 = ((((1.0 - _1431) * (_1426 + 2.0)) * exp2(log2(isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0))) * (_1426 + 1.0))) + _1431) * _1353;
        float _1441 = _1321 * 0.5;
        float _1442 = _1331 * 0.5;
        float _1443 = _1341 * 0.5;
        float _1444 = dot(vec3(_1441, _1442, _1443), vec3(_1441, _1442, _1443));
        float _1449 = (_1444 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1444);
        float _1457 = (dot(vec3(_952, _953, _954), vec3(_1449 * _1441, _1449 * _1442, _1449 * _1443)) + 1.0) * 0.5;
        float _4135 = isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0));
        float _1466 = sqrt(((_1442 * _1442) + (_1441 * _1441)) + (_1443 * _1443)) / (_1354 + 9.9999997473787516355514526367188e-06);
        float _4146 = isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0));
        float _1467 = isnan(1.0) ? _4146 : (isnan(_4146) ? 1.0 : min(_4146, 1.0));
        float _1468 = _1467 * 2.0;
        float _1472 = (1.0 - _1467) / (_1467 + 1.0);
        float _4157 = isnan(0.0) ? _1472 : (isnan(_1472) ? 0.0 : max(_1472, 0.0));
        float _1473 = isnan(1.0) ? _4157 : (isnan(_4157) ? 1.0 : min(_4157, 1.0));
        float _1482 = ((((1.0 - _1473) * (_1468 + 2.0)) * exp2(log2(isnan(1.0) ? _4135 : (isnan(_4135) ? 1.0 : min(_4135, 1.0))) * (_1468 + 1.0))) + _1473) * _1354;
        _1490 = _1321;
        _1492 = _1320;
        _1493 = _1319;
        _1494 = _1331;
        _1495 = _1330;
        _1496 = _1329;
        _1497 = _1341;
        _1498 = _1340;
        _1499 = _1339;
        _1500 = _1354;
        _1501 = _1353;
        _1502 = _1352;
        _1503 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0)));
        _1504 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0)));
        _1505 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0)));
    }
    else
    {
        _1490 = _1491;
        _1492 = _1491;
        _1493 = _1491;
        _1494 = _1491;
        _1495 = _1491;
        _1496 = _1491;
        _1497 = _1491;
        _1498 = _1491;
        _1499 = _1491;
        _1500 = _1491;
        _1501 = _1491;
        _1502 = _1491;
        _1503 = 0.0;
        _1504 = 0.0;
        _1505 = 0.0;
    }
    float _1797;
    float _1798;
    float _1799;
    float _1800;
    float _1801;
    float _1802;
    float _1803;
    float _1804;
    float _1805;
    float _1806;
    float _1807;
    float _1808;
    float _1809;
    float _1810;
    float _1811;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1528 = fma(_1189, cbModelParam._m0[30u].z, fma(_1185, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1181));
        float _1532 = fma(_1189, cbModelParam._m0[31u].z, fma(_1185, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1181));
        float _1536 = fma(_1189, cbModelParam._m0[32u].z, fma(_1185, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1181));
        float _1559 = _1181 + _952;
        float _1560 = _1185 + _953;
        float _1561 = _1189 + _954;
        float _1571 = fma(_1561, cbModelParam._m0[30u].z, fma(_1560, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1559)) - _1528;
        float _1572 = fma(_1561, cbModelParam._m0[31u].z, fma(_1560, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1559)) - _1532;
        float _1573 = fma(_1561, cbModelParam._m0[32u].z, fma(_1560, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1559)) - _1536;
        float _1577 = inversesqrt(dot(vec3(_1571, _1572, _1573), vec3(_1571, _1572, _1573)));
        float _1590 = ((_1577 * _1571) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1528 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1591 = ((_1577 * _1572) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1532 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1592 = ((_1577 * _1573) / cbModelParam._m0[35u].z) + ((((((_1536 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1594 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1590, _1591, _1592), 0.0);
        vec4 _1601 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1590, _1591, _1592), 0.0);
        vec4 _1608 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1590, _1591, _1592), 0.0);
        vec4 _1615 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1590, _1591, _1592), 0.0);
        float _1627 = exp2((_1594.w + (-0.5)) * 20.0) * 2.0;
        float _1628 = _1627 * (_1594.x + (-0.5));
        float _1629 = _1627 * (_1594.y + (-0.5));
        float _1630 = _1627 * (_1594.z + (-0.5));
        float _1637 = exp2((_1601.w + (-0.5)) * 20.0) * 2.0;
        float _1638 = _1637 * (_1601.x + (-0.5));
        float _1639 = _1637 * (_1601.y + (-0.5));
        float _1640 = _1637 * (_1601.z + (-0.5));
        float _1647 = exp2((_1608.w + (-0.5)) * 20.0) * 2.0;
        float _1648 = _1647 * (_1608.x + (-0.5));
        float _1649 = _1647 * (_1608.y + (-0.5));
        float _1650 = _1647 * (_1608.z + (-0.5));
        float _1657 = exp2((_1615.w + (-0.5)) * 20.0) * 2.0;
        float _1658 = _1657 * (_1615.x + (-0.5));
        float _1659 = _1657 * (_1615.y + (-0.5));
        float _1660 = _1657 * (_1615.z + (-0.5));
        float _1661 = isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0));
        float _1662 = isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0));
        float _1663 = isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0));
        float _1664 = _1628 * 0.5;
        float _1665 = _1638 * 0.5;
        float _1666 = _1648 * 0.5;
        float _1667 = dot(vec3(_1664, _1665, _1666), vec3(_1664, _1665, _1666));
        float _1672 = (_1667 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1667);
        float _1680 = (dot(vec3(_952, _953, _954), vec3(_1672 * _1664, _1672 * _1665, _1672 * _1666)) + 1.0) * 0.5;
        float _4198 = isnan(0.0) ? _1680 : (isnan(_1680) ? 0.0 : max(_1680, 0.0));
        float _1689 = sqrt(((_1665 * _1665) + (_1664 * _1664)) + (_1666 * _1666)) / (_1661 + 9.9999997473787516355514526367188e-06);
        float _4209 = isnan(0.0) ? _1689 : (isnan(_1689) ? 0.0 : max(_1689, 0.0));
        float _1690 = isnan(1.0) ? _4209 : (isnan(_4209) ? 1.0 : min(_4209, 1.0));
        float _1691 = _1690 * 2.0;
        float _1695 = (1.0 - _1690) / (_1690 + 1.0);
        float _4220 = isnan(0.0) ? _1695 : (isnan(_1695) ? 0.0 : max(_1695, 0.0));
        float _1696 = isnan(1.0) ? _4220 : (isnan(_4220) ? 1.0 : min(_4220, 1.0));
        float _1705 = ((((1.0 - _1696) * (_1691 + 2.0)) * exp2(log2(isnan(1.0) ? _4198 : (isnan(_4198) ? 1.0 : min(_4198, 1.0))) * (_1691 + 1.0))) + _1696) * _1661;
        float _1706 = _1629 * 0.5;
        float _1707 = _1639 * 0.5;
        float _1708 = _1649 * 0.5;
        float _1709 = dot(vec3(_1706, _1707, _1708), vec3(_1706, _1707, _1708));
        float _1714 = (_1709 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1709);
        float _1722 = (dot(vec3(_952, _953, _954), vec3(_1714 * _1706, _1714 * _1707, _1714 * _1708)) + 1.0) * 0.5;
        float _4231 = isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0));
        float _1731 = sqrt(((_1707 * _1707) + (_1706 * _1706)) + (_1708 * _1708)) / (_1662 + 9.9999997473787516355514526367188e-06);
        float _4242 = isnan(0.0) ? _1731 : (isnan(_1731) ? 0.0 : max(_1731, 0.0));
        float _1732 = isnan(1.0) ? _4242 : (isnan(_4242) ? 1.0 : min(_4242, 1.0));
        float _1733 = _1732 * 2.0;
        float _1737 = (1.0 - _1732) / (_1732 + 1.0);
        float _4253 = isnan(0.0) ? _1737 : (isnan(_1737) ? 0.0 : max(_1737, 0.0));
        float _1738 = isnan(1.0) ? _4253 : (isnan(_4253) ? 1.0 : min(_4253, 1.0));
        float _1747 = ((((1.0 - _1738) * (_1733 + 2.0)) * exp2(log2(isnan(1.0) ? _4231 : (isnan(_4231) ? 1.0 : min(_4231, 1.0))) * (_1733 + 1.0))) + _1738) * _1662;
        float _1748 = _1630 * 0.5;
        float _1749 = _1640 * 0.5;
        float _1750 = _1650 * 0.5;
        float _1751 = dot(vec3(_1748, _1749, _1750), vec3(_1748, _1749, _1750));
        float _1756 = (_1751 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1751);
        float _1764 = (dot(vec3(_952, _953, _954), vec3(_1756 * _1748, _1756 * _1749, _1756 * _1750)) + 1.0) * 0.5;
        float _4264 = isnan(0.0) ? _1764 : (isnan(_1764) ? 0.0 : max(_1764, 0.0));
        float _1773 = sqrt(((_1749 * _1749) + (_1748 * _1748)) + (_1750 * _1750)) / (_1663 + 9.9999997473787516355514526367188e-06);
        float _4275 = isnan(0.0) ? _1773 : (isnan(_1773) ? 0.0 : max(_1773, 0.0));
        float _1774 = isnan(1.0) ? _4275 : (isnan(_4275) ? 1.0 : min(_4275, 1.0));
        float _1775 = _1774 * 2.0;
        float _1779 = (1.0 - _1774) / (_1774 + 1.0);
        float _4286 = isnan(0.0) ? _1779 : (isnan(_1779) ? 0.0 : max(_1779, 0.0));
        float _1780 = isnan(1.0) ? _4286 : (isnan(_4286) ? 1.0 : min(_4286, 1.0));
        float _1789 = ((((1.0 - _1780) * (_1775 + 2.0)) * exp2(log2(isnan(1.0) ? _4264 : (isnan(_4264) ? 1.0 : min(_4264, 1.0))) * (_1775 + 1.0))) + _1780) * _1663;
        _1797 = _1630;
        _1798 = _1629;
        _1799 = _1628;
        _1800 = _1640;
        _1801 = _1639;
        _1802 = _1638;
        _1803 = _1650;
        _1804 = _1649;
        _1805 = _1648;
        _1806 = _1663;
        _1807 = _1662;
        _1808 = _1661;
        _1809 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0)));
        _1810 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1747 : (isnan(_1747) ? 0.0 : max(_1747, 0.0)));
        _1811 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1789 : (isnan(_1789) ? 0.0 : max(_1789, 0.0)));
    }
    else
    {
        _1797 = _1491;
        _1798 = _1491;
        _1799 = _1491;
        _1800 = _1491;
        _1801 = _1491;
        _1802 = _1491;
        _1803 = _1491;
        _1804 = _1491;
        _1805 = _1491;
        _1806 = _1491;
        _1807 = _1491;
        _1808 = _1491;
        _1809 = 0.0;
        _1810 = 0.0;
        _1811 = 0.0;
    }
    float _1821 = (cbModelParam._m0[1u].x * (_1809 - _1503)) + _1503;
    float _1822 = (cbModelParam._m0[1u].x * (_1810 - _1504)) + _1504;
    float _1823 = (cbModelParam._m0[1u].x * (_1811 - _1505)) + _1505;
    float _1844 = fma(_1823, cbSceneParam._m0[89u].z, fma(_1822, cbSceneParam._m0[89u].y, _1821 * cbSceneParam._m0[89u].x));
    float _1847 = fma(_1823, cbSceneParam._m0[90u].z, fma(_1822, cbSceneParam._m0[90u].y, _1821 * cbSceneParam._m0[90u].x));
    float _1850 = fma(_1823, cbSceneParam._m0[91u].z, fma(_1822, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1821));
    float _1865 = _1127 * 0.5;
    float _1866 = _1128 * 0.5;
    float _1867 = _1129 * 0.5;
    float _1868 = dot(vec4(_1865, _1866, _1867, 1.0), vec4(_1799, _1802, _1805, _1808));
    float _1871 = dot(vec4(_1865, _1866, _1867, 1.0), vec4(_1798, _1801, _1804, _1807));
    float _1874 = dot(vec4(_1865, _1866, _1867, 1.0), vec4(_1797, _1800, _1803, _1806));
    float _1908;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1881 = dot(vec4(_1865, _1866, _1867, 1.0), vec4(_1490, _1494, _1497, _1500));
        float _1885 = dot(vec4(_1865, _1866, _1867, 1.0), vec4(_1492, _1495, _1498, _1501));
        float _1889 = dot(vec4(_1865, _1866, _1867, 1.0), vec4(_1493, _1496, _1499, _1502));
        float _1896 = dot(vec4(cbModelParam._m0[39u]), vec4(_1865, _1866, _1867, 1.0));
        _1908 = dot(vec3(isnan(0.0) ? _1889 : (isnan(_1889) ? 0.0 : max(_1889, 0.0)), isnan(0.0) ? _1885 : (isnan(_1885) ? 0.0 : max(_1885, 0.0)), isnan(0.0) ? _1881 : (isnan(_1881) ? 0.0 : max(_1881, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1896) ? 0.0 : (isnan(0.0) ? _1896 : max(0.0, _1896))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1908 = 1.0;
    }
    float _1919;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1910 = dot(vec4(cbModelParam._m0[40u]), vec4(_1865, _1866, _1867, 1.0));
        _1919 = dot(vec3(isnan(0.0) ? _1868 : (isnan(_1868) ? 0.0 : max(_1868, 0.0)), isnan(0.0) ? _1871 : (isnan(_1871) ? 0.0 : max(_1871, 0.0)), isnan(0.0) ? _1874 : (isnan(_1874) ? 0.0 : max(_1874, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1910) ? 0.0 : (isnan(0.0) ? _1910 : max(0.0, _1910))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1919 = 1.0;
    }
    float _1923 = (_1919 * cbModelParam._m0[1u].x) + (_1908 * (1.0 - cbModelParam._m0[1u].x));
    float _1933 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _956);
    float _1934 = isnan(_1933) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1933 : min(cbModelParam._m0[25u].z, _1933));
    float _2014;
    float _2016;
    float _2018;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1981 = fma(_1189, cbModelParam._m0[13u].z, fma(_1185, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1181)) + cbModelParam._m0[13u].w;
        float _1985 = fma(_1189, cbModelParam._m0[14u].z, fma(_1185, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1181)) + cbModelParam._m0[14u].w;
        float _1989 = fma(_1189, cbModelParam._m0[15u].z, fma(_1185, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1181)) + cbModelParam._m0[15u].w;
        float _1992 = fma(_1129, cbModelParam._m0[13u].z, fma(_1128, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1127));
        float _1995 = fma(_1129, cbModelParam._m0[14u].z, fma(_1128, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1127));
        float _1998 = fma(_1129, cbModelParam._m0[15u].z, fma(_1128, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1127));
        float _2026;
        if (_1992 > 0.0)
        {
            _2026 = abs((1.0 - _1981) / _1992);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1992 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1981 + 1.0) / _1992);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2026 = frontier_phi_14_12_ladder;
        }
        float _2249;
        if (_1995 > 0.0)
        {
            _2249 = abs((1.0 - _1985) / _1995);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1995 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1985 + 1.0) / _1995);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2249 = frontier_phi_23_19_ladder;
        }
        float _2506;
        if (_1998 > 0.0)
        {
            _2506 = abs((1.0 - _1989) / _1998);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1998 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1989 + 1.0) / _1998);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2506 = frontier_phi_35_30_ladder;
        }
        float _2508 = isnan(_2249) ? _2026 : (isnan(_2026) ? _2249 : min(_2026, _2249));
        float _2509 = isnan(_2506) ? _2508 : (isnan(_2508) ? _2506 : min(_2508, _2506));
        float _2513 = (_2509 * _1992) + _1981;
        float _2514 = (_2509 * _1995) + _1985;
        float _2515 = (_2509 * _1998) + _1989;
        float _2516 = _2509 * 9.9999997473787516355514526367188e-05;
        float _2518 = (-1.0) - _2516;
        float _2520 = _2516 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2515 > _2520) || ((_2515 < _2518) || ((_2514 > _2520) || ((_2514 < _2518) || ((_2513 < _2518) || (_2513 > _2520))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2643 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2515, cbModelParam._m0[9u].z, fma(_2514, cbModelParam._m0[9u].y, _2513 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2515, cbModelParam._m0[10u].z, fma(_2514, cbModelParam._m0[10u].y, _2513 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2515, cbModelParam._m0[11u].z, fma(_2514, cbModelParam._m0[11u].y, _2513 * cbModelParam._m0[11u].x))), _1934);
            frontier_phi_13_35_ladder = _2643.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2643.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2643.x * cbModelParam._m0[1u].y;
        }
        _2014 = frontier_phi_13_35_ladder_2;
        _2016 = frontier_phi_13_35_ladder_1;
        _2018 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2002 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1127, _1128, _1129), _1934);
        _2014 = _2002.x * cbModelParam._m0[1u].y;
        _2016 = _2002.y * cbModelParam._m0[1u].y;
        _2018 = _2002.z * cbModelParam._m0[1u].y;
    }
    float _2022 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _956);
    float _2023 = isnan(_2022) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2022 : min(cbModelParam._m0[25u].w, _2022));
    float _2112;
    float _2114;
    float _2116;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2076 = fma(_1189, cbModelParam._m0[21u].z, fma(_1185, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1181)) + cbModelParam._m0[21u].w;
        float _2080 = fma(_1189, cbModelParam._m0[22u].z, fma(_1185, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1181)) + cbModelParam._m0[22u].w;
        float _2084 = fma(_1189, cbModelParam._m0[23u].z, fma(_1185, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1181)) + cbModelParam._m0[23u].w;
        float _2087 = fma(_1129, cbModelParam._m0[21u].z, fma(_1128, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1127));
        float _2090 = fma(_1129, cbModelParam._m0[22u].z, fma(_1128, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1127));
        float _2093 = fma(_1129, cbModelParam._m0[23u].z, fma(_1128, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1127));
        float _2254;
        if (_2087 > 0.0)
        {
            _2254 = abs((1.0 - _2076) / _2087);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2087 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2076 + 1.0) / _2087);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2254 = frontier_phi_25_21_ladder;
        }
        float _2533;
        if (_2090 > 0.0)
        {
            _2533 = abs((1.0 - _2080) / _2090);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2090 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2080 + 1.0) / _2090);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2533 = frontier_phi_37_32_ladder;
        }
        float _2746;
        if (_2093 > 0.0)
        {
            _2746 = abs((1.0 - _2084) / _2093);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2093 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2084 + 1.0) / _2093);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2746 = frontier_phi_46_43_ladder;
        }
        float _2748 = isnan(_2533) ? _2254 : (isnan(_2254) ? _2533 : min(_2254, _2533));
        float _2749 = isnan(_2746) ? _2748 : (isnan(_2748) ? _2746 : min(_2748, _2746));
        float _2753 = (_2749 * _2087) + _2076;
        float _2754 = (_2749 * _2090) + _2080;
        float _2755 = (_2749 * _2093) + _2084;
        float _2756 = _2749 * 9.9999997473787516355514526367188e-05;
        float _2757 = (-1.0) - _2756;
        float _2759 = _2756 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2755 > _2759) || ((_2755 < _2757) || ((_2754 > _2759) || ((_2754 < _2757) || ((_2753 < _2757) || (_2753 > _2759))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2956 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2755, cbModelParam._m0[17u].z, fma(_2754, cbModelParam._m0[17u].y, _2753 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2755, cbModelParam._m0[18u].z, fma(_2754, cbModelParam._m0[18u].y, _2753 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2755, cbModelParam._m0[19u].z, fma(_2754, cbModelParam._m0[19u].y, _2753 * cbModelParam._m0[19u].x))), _2023);
            frontier_phi_22_46_ladder = _2956.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2956.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2956.x * cbModelParam._m0[1u].z;
        }
        _2112 = frontier_phi_22_46_ladder_2;
        _2114 = frontier_phi_22_46_ladder_1;
        _2116 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2096 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1127, _1128, _1129), _2023);
        _2112 = _2096.x * cbModelParam._m0[1u].z;
        _2114 = _2096.y * cbModelParam._m0[1u].z;
        _2116 = _2096.z * cbModelParam._m0[1u].z;
    }
    float _2129 = (((_1152 * _1104) + _1153) * _1119) * ((cbModelParam._m0[1u].w * (_2112 - _2014)) + _2014);
    float _2131 = (((_1152 * _1106) + _1153) * _1119) * ((cbModelParam._m0[1u].w * (_2114 - _2016)) + _2016);
    float _2133 = (((_1152 * _1107) + _1153) * _1119) * ((cbModelParam._m0[1u].w * (_2116 - _2018)) + _2018);
    float _2136 = fma(_2133, cbSceneParam._m0[89u].z, fma(_2131, cbSceneParam._m0[89u].y, _2129 * cbSceneParam._m0[89u].x));
    float _2139 = fma(_2133, cbSceneParam._m0[90u].z, fma(_2131, cbSceneParam._m0[90u].y, _2129 * cbSceneParam._m0[90u].x));
    float _2142 = fma(_2133, cbSceneParam._m0[91u].z, fma(_2131, cbSceneParam._m0[91u].y, _2129 * cbSceneParam._m0[91u].x));
    vec4 _2150 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1041, _1042));
    float _2152 = _2150.w;
    float _2164 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2152);
    float _2165 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2152);
    float _2166 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2152);
    uvec4 _2170 = floatBitsToUint(cbInstanceData._m0[_1079 + 5u]);
    uint _2172 = _2170.x * 14u;
    uint _2173 = _2172 + 13u;
    float _2180 = _1119 + (-1.0);
    float _2185 = (cbLight._m0[_2173].x * _2180) + 1.0;
    float _2186 = (cbLight._m0[_2173].y * _2180) + 1.0;
    float _2187 = (cbLight._m0[_2173].z * _2180) + 1.0;
    float _2188 = (cbLight._m0[_2173].w * _2180) + 1.0;
    uint _2189 = _2172 + 5u;
    float _2195 = isnan(1.0) ? _2186 : (isnan(_2186) ? 1.0 : min(_2186, 1.0));
    uint _2199 = _2172 + 4u;
    float _2208 = isnan(1.0) ? _2185 : (isnan(_2185) ? 1.0 : min(_2185, 1.0));
    uint _2212 = _2172 | 1u;
    float _2223 = dot(vec3(cbLight._m0[_2172].xyz), vec3(_952, _953, _954));
    float _2226 = dot(vec3(cbLight._m0[_2212].xyz), vec3(_952, _953, _954));
    float _4422 = isnan(0.0) ? _2223 : (isnan(_2223) ? 0.0 : max(_2223, 0.0));
    float _4433 = isnan(0.0) ? _2226 : (isnan(_2226) ? 0.0 : max(_2226, 0.0));
    float _2231 = (isnan(1.0) ? _4422 : (isnan(_4422) ? 1.0 : min(_4422, 1.0))) * 0.3183098733425140380859375;
    float _2233 = (isnan(1.0) ? _4433 : (isnan(_4433) ? 1.0 : min(_4433, 1.0))) * 0.3183098733425140380859375;
    float _2240 = ((cbLight._m0[_2189].x * _2195) * _2233) + (((cbLight._m0[_2199].x * _2164) * _2208) * _2231);
    float _2241 = ((_2195 * cbLight._m0[_2189].y) * _2233) + (((cbLight._m0[_2199].y * _2165) * _2208) * _2231);
    float _2242 = ((_2195 * cbLight._m0[_2189].z) * _2233) + (((cbLight._m0[_2199].z * _2166) * _2208) * _2231);
    uvec4 _2246 = floatBitsToUint(cbLight._m0[_2172 + 12u]);
    bool _2248 = _2246.x == 0u;
    float _2259;
    float _2261;
    float _2263;
    if (_2248)
    {
        _2259 = _2240;
        _2261 = _2241;
        _2263 = _2242;
    }
    else
    {
        uint _2267 = _2172 + 6u;
        float _2283 = (dot(vec3(cbLight._m0[_2172 + 2u].xyz), vec3(_952, _953, _954)) * 0.5) + 0.5;
        float _2284 = _2283 * _2283;
        float _4444 = isnan(0.0) ? _2284 : (isnan(_2284) ? 0.0 : max(_2284, 0.0));
        float _2285 = isnan(1.0) ? _4444 : (isnan(_4444) ? 1.0 : min(_4444, 1.0));
        float _2286 = isnan(1.0) ? _2187 : (isnan(_2187) ? 1.0 : min(_2187, 1.0));
        _2259 = (((cbLight._m0[_2267].x * 0.3183098733425140380859375) * _2285) * _2286) + _2240;
        _2261 = (((cbLight._m0[_2267].y * 0.3183098733425140380859375) * _2285) * _2286) + _2241;
        _2263 = (((cbLight._m0[_2267].z * 0.3183098733425140380859375) * _2285) * _2286) + _2242;
    }
    bool _2266 = _2246.y == 0u;
    float _2304;
    float _2306;
    float _2308;
    if (_2266)
    {
        _2304 = _2259;
        _2306 = _2261;
        _2308 = _2263;
    }
    else
    {
        uint _2477 = _2172 + 7u;
        float _2493 = (dot(vec3(cbLight._m0[_2172 + 3u].xyz), vec3(_952, _953, _954)) * 0.5) + 0.5;
        float _2494 = _2493 * _2493;
        float _4460 = isnan(0.0) ? _2494 : (isnan(_2494) ? 0.0 : max(_2494, 0.0));
        float _2495 = isnan(1.0) ? _4460 : (isnan(_4460) ? 1.0 : min(_4460, 1.0));
        float _2496 = isnan(1.0) ? _2188 : (isnan(_2188) ? 1.0 : min(_2188, 1.0));
        _2304 = (((cbLight._m0[_2477].x * 0.3183098733425140380859375) * _2495) * _2496) + _2259;
        _2306 = (((cbLight._m0[_2477].y * 0.3183098733425140380859375) * _2495) * _2496) + _2261;
        _2308 = (((cbLight._m0[_2477].z * 0.3183098733425140380859375) * _2495) * _2496) + _2263;
    }
    uint _2311 = _2172 + 8u;
    float _2324 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2172].w)) * _956) * 0.949999988079071044921875);
    float _2325 = _2324 * _2324;
    float _2326 = cbLight._m0[_2172].x + _1033;
    float _2327 = cbLight._m0[_2172].y + _1034;
    float _2328 = cbLight._m0[_2172].z + _1035;
    float _2332 = inversesqrt(dot(vec3(_2326, _2327, _2328), vec3(_2326, _2327, _2328)));
    float _2333 = _2332 * _2326;
    float _2334 = _2332 * _2327;
    float _2335 = _2332 * _2328;
    float _2336 = dot(vec3(_952, _953, _954), vec3(cbLight._m0[_2172].xyz));
    float _4476 = isnan(0.0) ? _2336 : (isnan(_2336) ? 0.0 : max(_2336, 0.0));
    float _2339 = isnan(1.0) ? _4476 : (isnan(_4476) ? 1.0 : min(_4476, 1.0));
    float _4487 = isnan(0.0) ? _1120 : (isnan(_1120) ? 0.0 : max(_1120, 0.0));
    float _2340 = isnan(1.0) ? _4487 : (isnan(_4487) ? 1.0 : min(_4487, 1.0));
    float _2341 = dot(vec3(_952, _953, _954), vec3(_2333, _2334, _2335));
    float _4498 = isnan(0.0) ? _2341 : (isnan(_2341) ? 0.0 : max(_2341, 0.0));
    float _2344 = isnan(1.0) ? _4498 : (isnan(_4498) ? 1.0 : min(_4498, 1.0));
    float _2345 = dot(vec3(cbLight._m0[_2172].xyz), vec3(_2333, _2334, _2335));
    float _4509 = isnan(0.0) ? _2345 : (isnan(_2345) ? 0.0 : max(_2345, 0.0));
    float _2349 = _2325 * _2325;
    float _2353 = ((_2344 * _2344) * (_2349 + (-1.0))) + 1.0;
    float _2361 = exp2(log2(1.0 - (isnan(1.0) ? _4509 : (isnan(_4509) ? 1.0 : min(_4509, 1.0)))) * 5.0);
    float _2362 = 0.959999978542327880859375 - _1101;
    float _2364 = 0.959999978542327880859375 - _1102;
    float _2365 = 0.959999978542327880859375 - _1103;
    float _2372 = 1.0 - _2325;
    float _2383 = (0.5 / (((_2340 * ((_2339 * _2372) + _2325)) + 9.9999999392252902907785028219223e-09) + (((_2340 * _2372) + _2325) * _2339))) * _2339;
    float _4520 = isnan(0.0) ? _2383 : (isnan(_2383) ? 0.0 : max(_2383, 0.0));
    float _2385 = (isnan(1.0) ? _4520 : (isnan(_4520) ? 1.0 : min(_4520, 1.0))) * (_2349 / ((_2353 * _2353) * 3.141590118408203125));
    uint _2399 = _2172 + 9u;
    float _2410 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2212].w)) * _956) * 0.949999988079071044921875);
    float _2411 = _2410 * _2410;
    float _2412 = cbLight._m0[_2212].x + _1033;
    float _2413 = cbLight._m0[_2212].y + _1034;
    float _2414 = cbLight._m0[_2212].z + _1035;
    float _2418 = inversesqrt(dot(vec3(_2412, _2413, _2414), vec3(_2412, _2413, _2414)));
    float _2419 = _2418 * _2412;
    float _2420 = _2418 * _2413;
    float _2421 = _2418 * _2414;
    float _2422 = dot(vec3(_952, _953, _954), vec3(cbLight._m0[_2212].xyz));
    float _4531 = isnan(0.0) ? _2422 : (isnan(_2422) ? 0.0 : max(_2422, 0.0));
    float _2425 = isnan(1.0) ? _4531 : (isnan(_4531) ? 1.0 : min(_4531, 1.0));
    float _2426 = dot(vec3(_952, _953, _954), vec3(_2419, _2420, _2421));
    float _4542 = isnan(0.0) ? _2426 : (isnan(_2426) ? 0.0 : max(_2426, 0.0));
    float _2429 = isnan(1.0) ? _4542 : (isnan(_4542) ? 1.0 : min(_4542, 1.0));
    float _2430 = dot(vec3(cbLight._m0[_2212].xyz), vec3(_2419, _2420, _2421));
    float _4553 = isnan(0.0) ? _2430 : (isnan(_2430) ? 0.0 : max(_2430, 0.0));
    float _2434 = _2411 * _2411;
    float _2438 = ((_2429 * _2429) * (_2434 + (-1.0))) + 1.0;
    float _2445 = exp2(log2(1.0 - (isnan(1.0) ? _4553 : (isnan(_4553) ? 1.0 : min(_4553, 1.0)))) * 5.0);
    float _2452 = 1.0 - _2411;
    float _2462 = (0.5 / (((_2340 * ((_2425 * _2452) + _2411)) + 9.9999999392252902907785028219223e-09) + (((_2340 * _2452) + _2411) * _2425))) * _2425;
    float _4564 = isnan(0.0) ? _2462 : (isnan(_2462) ? 0.0 : max(_2462, 0.0));
    float _2464 = (isnan(1.0) ? _4564 : (isnan(_4564) ? 1.0 : min(_4564, 1.0))) * (_2434 / ((_2438 * _2438) * 3.141590118408203125));
    float _2474 = (((((_2445 * _2362) + _1104) * cbLight._m0[_2399].x) * _2464) * _2195) + ((((cbLight._m0[_2311].x * _2164) * ((_2361 * _2362) + _1104)) * _2385) * _2208);
    float _2475 = (((((_2445 * _2364) + _1106) * cbLight._m0[_2399].y) * _2464) * _2195) + ((((cbLight._m0[_2311].y * _2165) * ((_2361 * _2364) + _1106)) * _2385) * _2208);
    float _2476 = (((((_2445 * _2365) + _1107) * cbLight._m0[_2399].z) * _2464) * _2195) + ((((cbLight._m0[_2311].z * _2166) * ((_2361 * _2365) + _1107)) * _2385) * _2208);
    float _2538;
    float _2540;
    float _2542;
    if (_2248)
    {
        _2538 = _2474;
        _2540 = _2475;
        _2542 = _2476;
    }
    else
    {
        uint _2544 = _2172 + 2u;
        uint _2548 = _2172 + 10u;
        float _2562 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2544].w)) * _956) * 0.949999988079071044921875);
        float _2563 = _2562 * _2562;
        float _2564 = cbLight._m0[_2544].x + _1033;
        float _2565 = cbLight._m0[_2544].y + _1034;
        float _2566 = cbLight._m0[_2544].z + _1035;
        float _2570 = inversesqrt(dot(vec3(_2564, _2565, _2566), vec3(_2564, _2565, _2566)));
        float _2571 = _2570 * _2564;
        float _2572 = _2570 * _2565;
        float _2573 = _2570 * _2566;
        float _2574 = dot(vec3(_952, _953, _954), vec3(cbLight._m0[_2544].xyz));
        float _4575 = isnan(0.0) ? _2574 : (isnan(_2574) ? 0.0 : max(_2574, 0.0));
        float _2577 = isnan(1.0) ? _4575 : (isnan(_4575) ? 1.0 : min(_4575, 1.0));
        float _2578 = dot(vec3(_952, _953, _954), vec3(_2571, _2572, _2573));
        float _4586 = isnan(0.0) ? _2578 : (isnan(_2578) ? 0.0 : max(_2578, 0.0));
        float _2581 = isnan(1.0) ? _4586 : (isnan(_4586) ? 1.0 : min(_4586, 1.0));
        float _2582 = dot(vec3(cbLight._m0[_2544].xyz), vec3(_2571, _2572, _2573));
        float _4597 = isnan(0.0) ? _2582 : (isnan(_2582) ? 0.0 : max(_2582, 0.0));
        float _2586 = _2563 * _2563;
        float _2590 = ((_2581 * _2581) * (_2586 + (-1.0))) + 1.0;
        float _2597 = exp2(log2(1.0 - (isnan(1.0) ? _4597 : (isnan(_4597) ? 1.0 : min(_4597, 1.0)))) * 5.0);
        float _2604 = 1.0 - _2563;
        float _2614 = (0.5 / (((_2340 * ((_2577 * _2604) + _2563)) + 9.9999999392252902907785028219223e-09) + (((_2340 * _2604) + _2563) * _2577))) * _2577;
        float _4608 = isnan(0.0) ? _2614 : (isnan(_2614) ? 0.0 : max(_2614, 0.0));
        float _2616 = (isnan(1.0) ? _4608 : (isnan(_4608) ? 1.0 : min(_4608, 1.0))) * (_2586 / ((_2590 * _2590) * 3.141590118408203125));
        float _2617 = isnan(1.0) ? _2187 : (isnan(_2187) ? 1.0 : min(_2187, 1.0));
        _2538 = (((((_2597 * _2362) + _1104) * cbLight._m0[_2548].x) * _2616) * _2617) + _2474;
        _2540 = (((((_2597 * _2364) + _1106) * cbLight._m0[_2548].y) * _2616) * _2617) + _2475;
        _2542 = (((((_2597 * _2365) + _1107) * cbLight._m0[_2548].z) * _2616) * _2617) + _2476;
    }
    float _2652;
    float _2654;
    float _2656;
    if (_2266)
    {
        _2652 = _2538;
        _2654 = _2540;
        _2656 = _2542;
    }
    else
    {
        uint _2663 = _2172 + 3u;
        uint _2667 = _2172 + 11u;
        float _2681 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2663].w)) * _956) * 0.949999988079071044921875);
        float _2682 = _2681 * _2681;
        float _2683 = cbLight._m0[_2663].x + _1033;
        float _2684 = cbLight._m0[_2663].y + _1034;
        float _2685 = cbLight._m0[_2663].z + _1035;
        float _2689 = inversesqrt(dot(vec3(_2683, _2684, _2685), vec3(_2683, _2684, _2685)));
        float _2690 = _2689 * _2683;
        float _2691 = _2689 * _2684;
        float _2692 = _2689 * _2685;
        float _2693 = dot(vec3(_952, _953, _954), vec3(cbLight._m0[_2663].xyz));
        float _4624 = isnan(0.0) ? _2693 : (isnan(_2693) ? 0.0 : max(_2693, 0.0));
        float _2696 = isnan(1.0) ? _4624 : (isnan(_4624) ? 1.0 : min(_4624, 1.0));
        float _2697 = dot(vec3(_952, _953, _954), vec3(_2690, _2691, _2692));
        float _4635 = isnan(0.0) ? _2697 : (isnan(_2697) ? 0.0 : max(_2697, 0.0));
        float _2700 = isnan(1.0) ? _4635 : (isnan(_4635) ? 1.0 : min(_4635, 1.0));
        float _2701 = dot(vec3(cbLight._m0[_2663].xyz), vec3(_2690, _2691, _2692));
        float _4646 = isnan(0.0) ? _2701 : (isnan(_2701) ? 0.0 : max(_2701, 0.0));
        float _2705 = _2682 * _2682;
        float _2709 = ((_2700 * _2700) * (_2705 + (-1.0))) + 1.0;
        float _2716 = exp2(log2(1.0 - (isnan(1.0) ? _4646 : (isnan(_4646) ? 1.0 : min(_4646, 1.0)))) * 5.0);
        float _2723 = 1.0 - _2682;
        float _2733 = (0.5 / (((_2340 * ((_2696 * _2723) + _2682)) + 9.9999999392252902907785028219223e-09) + (((_2340 * _2723) + _2682) * _2696))) * _2696;
        float _4657 = isnan(0.0) ? _2733 : (isnan(_2733) ? 0.0 : max(_2733, 0.0));
        float _2735 = (isnan(1.0) ? _4657 : (isnan(_4657) ? 1.0 : min(_4657, 1.0))) * (_2705 / ((_2709 * _2709) * 3.141590118408203125));
        float _2736 = isnan(1.0) ? _2188 : (isnan(_2188) ? 1.0 : min(_2188, 1.0));
        _2652 = (((((_2716 * _2362) + _1104) * cbLight._m0[_2667].x) * _2735) * _2736) + _2538;
        _2654 = (((((_2716 * _2364) + _1106) * cbLight._m0[_2667].y) * _2735) * _2736) + _2540;
        _2656 = (((((_2716 * _2365) + _1107) * cbLight._m0[_2667].z) * _2735) * _2736) + _2542;
    }
    float _2871;
    float _2873;
    float _2875;
    float _2877;
    float _2879;
    float _2881;
    if (_2170.y == 0u)
    {
        float _2811 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2812 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2811;
        float _2813 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2811;
        float _2814 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2811;
        uvec4 _2826 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2827 = _2826.x;
        uint _2838 = uint((float(_2826.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1042) / _2827))) + floor(float(uint(cbSceneParam._m0[85u].x * _1041) / _2827)));
        float _2848 = (log2(_2814 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2849 = isnan(0.0) ? _2848 : (isnan(_2848) ? 0.0 : max(_2848, 0.0));
        uint _2852 = uint(isnan(14.0) ? _2849 : (isnan(_2849) ? 14.0 : min(_2849, 14.0)));
        uvec4 _2857 = texelFetch(g_lightClusterGridBuffer, int(((_2852 << 2u) + (_2838 << 6u)) >> 2u));
        uint _2858 = _2857.x;
        uint _2859 = _2826.z;
        float _2961;
        float _2963;
        float _2965;
        float _2967;
        float _2969;
        float _2971;
        if (((((1u << ((_2859 >> 4u) & 15u)) + 4294967295u) & _2858) == 0u) || ((_2859 & 240u) == 0u))
        {
            _2961 = 0.0;
            _2963 = 0.0;
            _2965 = 0.0;
            _2967 = 0.0;
            _2969 = 0.0;
            _2971 = 0.0;
        }
        else
        {
            float _2962;
            float _2964;
            float _2966;
            float _2968;
            float _2970;
            float _2972;
            float _3106 = 0.0;
            float _3107 = 0.0;
            float _3108 = 0.0;
            float _3109 = 0.0;
            float _3110 = 0.0;
            float _3111 = 0.0;
            uint _3112 = 0u;
            uint _3121;
            bool _3122;
            for (;;)
            {
                _3121 = texelFetch(g_lightClassification, int((((_2852 << 5u) + (_2838 << 9u)) + (_3112 << 2u)) >> 2u)).x;
                _3122 = _3121 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_3122)
                {
                    frontier_phi_61_pred = _3106;
                    frontier_phi_61_pred_1 = _3111;
                    frontier_phi_61_pred_2 = _3110;
                    frontier_phi_61_pred_3 = _3109;
                    frontier_phi_61_pred_4 = _3108;
                    frontier_phi_61_pred_5 = _3107;
                }
                else
                {
                    float _3230;
                    float _3231;
                    float _3232;
                    float _3233;
                    float _3234;
                    float _3235;
                    uint _3236;
                    _3230 = _3106;
                    _3231 = _3107;
                    _3232 = _3108;
                    _3233 = _3109;
                    _3234 = _3110;
                    _3235 = _3111;
                    _3236 = _3121;
                    float _3162;
                    float _3163;
                    float _3164;
                    float _3165;
                    float _3166;
                    float _3167;
                    for (;;)
                    {
                        uint _3240 = uint(findLSB(_3236)) + (_3112 << 5u);
                        uint _3237 = (_3236 + 4294967295u) & _3236;
                        uint _3242 = _3240 * 48u;
                        vec4 _3256 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3242)).x, texelFetch(g_PointLightRenderingBuffer, int(_3242 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3242 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3242 + 3u)).x));
                        uint _3262 = (_3240 * 48u) + 4u;
                        vec4 _3275 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3262)).x, texelFetch(g_PointLightRenderingBuffer, int(_3262 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3262 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3262 + 3u)).x));
                        uint _3281 = (_3240 * 48u) + 8u;
                        vec3 _3292 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3281)).x, texelFetch(g_PointLightRenderingBuffer, int(_3281 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3281 + 2u)).x));
                        float _3296 = _3256.x - _2812;
                        float _3297 = _3256.y - _2813;
                        float _3298 = _3256.z - _2814;
                        float _3299 = dot(vec3(_3296, _3297, _3298), vec3(_3296, _3297, _3298));
                        float _3302 = inversesqrt(_3299);
                        float _3303 = _3302 * _3296;
                        float _3304 = _3302 * _3297;
                        float _3305 = _3302 * _3298;
                        float _3306 = dot(vec3(_1060, _1063, _1066), vec3(_3303, _3304, _3305));
                        float _3311 = 1.0 - (_3299 * _3256.w);
                        float _4683 = isnan(0.0) ? _3311 : (isnan(_3311) ? 0.0 : max(_3311, 0.0));
                        float _3312 = isnan(1.0) ? _4683 : (isnan(_4683) ? 1.0 : min(_4683, 1.0));
                        float _3313 = sqrt(_3299) * _3275.w;
                        float _3316 = 1.39999997615814208984375 / (_3313 + 1.39999997615814208984375);
                        float _3317 = _3316 * _3316;
                        float _3320 = ((1.0 - _3317) * _3306) + _3317;
                        float _3323 = _3313 * _3313;
                        float _3327 = ((isnan(0.0) ? _3320 : (isnan(_3320) ? 0.0 : max(_3320, 0.0))) * _3312) / ((_3323 * 0.699999988079071044921875) + 1.0);
                        float _3331 = (-0.0) - _2812;
                        float _3332 = (-0.0) - _2813;
                        float _3333 = (-0.0) - _2814;
                        float _3337 = inversesqrt(dot(vec3(_3331, _3332, _3333), vec3(_3331, _3332, _3333)));
                        float _3338 = _3337 * _3331;
                        float _3339 = _3337 * _3332;
                        float _3340 = _3337 * _3333;
                        float _3348 = exp2(log2(1.0 / ((_3323 * 3.5) + 5.0)) * 0.25);
                        float _3349 = 1.0 - _1135;
                        float _3356 = sqrt(1.0 - ((1.0 - (_3349 * _3349)) * (1.0 - (_3348 * _3348))));
                        float _3357 = _3356 * _3356;
                        float _3358 = _3357 * _3357;
                        float _3359 = _3338 + _3303;
                        float _3360 = _3339 + _3304;
                        float _3361 = _3340 + _3305;
                        float _3365 = inversesqrt(dot(vec3(_3359, _3360, _3361), vec3(_3359, _3360, _3361)));
                        float _3369 = dot(vec3(_1060, _1063, _1066), vec3(_3338, _3339, _3340));
                        float _4699 = isnan(0.0) ? _3369 : (isnan(_3369) ? 0.0 : max(_3369, 0.0));
                        float _3372 = isnan(1.0) ? _4699 : (isnan(_4699) ? 1.0 : min(_4699, 1.0));
                        float _3373 = dot(vec3(_1060, _1063, _1066), vec3(_3365 * _3359, _3365 * _3360, _3365 * _3361));
                        float _4710 = isnan(0.0) ? _3373 : (isnan(_3373) ? 0.0 : max(_3373, 0.0));
                        float _3376 = isnan(1.0) ? _4710 : (isnan(_4710) ? 1.0 : min(_4710, 1.0));
                        float _3380 = ((_3376 * _3376) * (_3358 + (-1.0))) + 1.0;
                        float _3381 = _3316 * _3357;
                        float _3382 = _3381 * _3381;
                        float _3385 = ((1.0 - _3382) * _3306) + _3382;
                        float _4721 = isnan(0.0) ? _3385 : (isnan(_3385) ? 0.0 : max(_3385, 0.0));
                        float _3386 = isnan(1.0) ? _4721 : (isnan(_4721) ? 1.0 : min(_4721, 1.0));
                        float _3387 = 1.0 - _3357;
                        float _3397 = (0.5 / (((_3386 * ((_3372 * _3387) + _3357)) + 9.9999999392252902907785028219223e-09) + (((_3386 * _3387) + _3357) * _3372))) * _3386;
                        float _4732 = isnan(0.0) ? _3397 : (isnan(_3397) ? 0.0 : max(_3397, 0.0));
                        float _3408 = (((_3358 * 3.1415927410125732421875) * (isnan(1.0) ? _4732 : (isnan(_4732) ? 1.0 : min(_4732, 1.0)))) / ((_3380 * _3380) * ((_3323 * 2.1991131305694580078125) + 3.141590118408203125))) * _3312;
                        _3165 = (_3327 * _3275.x) + _3233;
                        _3166 = (_3327 * _3275.y) + _3234;
                        _3167 = (_3327 * _3275.z) + _3235;
                        _3162 = (_3408 * _3292.x) + _3230;
                        _3163 = (_3408 * _3292.y) + _3231;
                        _3164 = (_3408 * _3292.z) + _3232;
                        if (_3237 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3230 = _3162;
                            _3231 = _3163;
                            _3232 = _3164;
                            _3233 = _3165;
                            _3234 = _3166;
                            _3235 = _3167;
                            _3236 = _3237;
                        }
                    }
                    frontier_phi_61_pred = _3162;
                    frontier_phi_61_pred_1 = _3167;
                    frontier_phi_61_pred_2 = _3166;
                    frontier_phi_61_pred_3 = _3165;
                    frontier_phi_61_pred_4 = _3164;
                    frontier_phi_61_pred_5 = _3163;
                }
                _2962 = frontier_phi_61_pred;
                _2972 = frontier_phi_61_pred_1;
                _2970 = frontier_phi_61_pred_2;
                _2968 = frontier_phi_61_pred_3;
                _2966 = frontier_phi_61_pred_4;
                _2964 = frontier_phi_61_pred_5;
                uint _3113 = _3112 + 1u;
                if (_3113 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3106 = _2962;
                    _3107 = _2964;
                    _3108 = _2966;
                    _3109 = _2968;
                    _3110 = _2970;
                    _3111 = _2972;
                    _3112 = _3113;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2961 = _2962;
            _2963 = _2964;
            _2965 = _2966;
            _2967 = _2968;
            _2969 = _2970;
            _2971 = _2972;
        }
        uvec4 _2975 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2976 = _2975.z;
        uint _2978 = (_2976 >> 8u) & 15u;
        float _3074;
        float _3076;
        float _3078;
        float _3080;
        float _3082;
        float _3084;
        if (((4294967295u << _2978) & _2858) == 0u)
        {
            _3074 = _2961;
            _3076 = _2963;
            _3078 = _2965;
            _3080 = _2967;
            _3082 = _2969;
            _3084 = _2971;
        }
        else
        {
            float _3099 = inversesqrt(dot(vec3(_2812, _2813, _2814), vec3(_2812, _2813, _2814)));
            float _3100 = _3099 * _2812;
            float _3101 = _3099 * _2813;
            float _3102 = _3099 * _2814;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2978 < ((_2976 >> 12u) & 15u))
            {
                float _3075;
                float _3077;
                float _3079;
                float _3081;
                float _3083;
                float _3085;
                float _3213 = _2961;
                float _3214 = _2963;
                float _3215 = _2965;
                float _3216 = _2967;
                float _3217 = _2969;
                float _3218 = _2971;
                uint _3219 = _2978;
                uint _3228;
                bool _3229;
                for (;;)
                {
                    _3228 = texelFetch(g_lightClassification, int((((_2852 << 5u) + (_2838 << 9u)) + (_3219 << 2u)) >> 2u)).x;
                    _3229 = _3228 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3229)
                    {
                        frontier_phi_67_pred = _3216;
                        frontier_phi_67_pred_1 = _3217;
                        frontier_phi_67_pred_2 = _3218;
                        frontier_phi_67_pred_3 = _3215;
                        frontier_phi_67_pred_4 = _3214;
                        frontier_phi_67_pred_5 = _3213;
                    }
                    else
                    {
                        float _3413;
                        float _3414;
                        float _3415;
                        float _3416;
                        float _3417;
                        float _3418;
                        float _3706;
                        float _3707;
                        float _3708;
                        float _3709;
                        float _3710;
                        float _3711;
                        float _3426 = _3213;
                        float _3427 = _3214;
                        float _3428 = _3215;
                        float _3429 = _3216;
                        float _3430 = _3217;
                        float _3431 = _3218;
                        uint _3432 = _3228;
                        uint _3433;
                        vec4 _3458;
                        float _3459;
                        vec4 _3474;
                        vec3 _3486;
                        vec4 _3501;
                        vec4 _3516;
                        float _3562;
                        bool _3563;
                        for (;;)
                        {
                            uint _3443 = ((_3219 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3432));
                            _3433 = (_3432 + 4294967295u) & _3432;
                            uint _3445 = _3443 * 40u;
                            _3458 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3445)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3445 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3445 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3445 + 3u)).x));
                            _3459 = _3458.w;
                            uint _3461 = (_3443 * 40u) + 4u;
                            _3474 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3461)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3461 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3461 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3461 + 3u)).x));
                            uint _3476 = (_3443 * 40u) + 8u;
                            _3486 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3476)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3476 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3476 + 2u)).x));
                            uint _3488 = (_3443 * 40u) + 16u;
                            _3501 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3488)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3488 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3488 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3488 + 3u)).x));
                            uint _3503 = (_3443 * 40u) + 20u;
                            _3516 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3503)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3503 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3503 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3503 + 3u)).x));
                            uint _3518 = (_3443 * 40u) + 24u;
                            vec4 _3531 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3518)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3518 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3518 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3518 + 3u)).x));
                            uint _3537 = (_3443 * 40u) + 28u;
                            vec4 _3550 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3537)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3537 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3537 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3537 + 3u)).x));
                            _3562 = fma(_2814, _3550.z, fma(_2813, _3550.y, _3550.x * _2812)) + _3550.w;
                            _3563 = !((fma(_2814, _3531.z, fma(_2813, _3531.y, _3531.x * _2812)) + _3531.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3563)
                            {
                                float _3590 = _3458.x - _2812;
                                float _3591 = _3458.y - _2813;
                                float _3592 = _3458.z - _2814;
                                float _3593 = dot(vec3(_3590, _3591, _3592), vec3(_3590, _3591, _3592));
                                float _3596 = inversesqrt(_3593);
                                float _3597 = _3596 * _3590;
                                float _3598 = _3596 * _3591;
                                float _3599 = _3596 * _3592;
                                float _3603 = 1.0 - (_3593 / (_3459 * _3459));
                                float _4743 = isnan(0.0) ? _3603 : (isnan(_3603) ? 0.0 : max(_3603, 0.0));
                                float _3604 = isnan(1.0) ? _4743 : (isnan(_4743) ? 1.0 : min(_4743, 1.0));
                                float _3608 = sqrt(_3593) * _3474.w;
                                float _3610 = 1.39999997615814208984375 / (_3608 + 1.39999997615814208984375);
                                float _3611 = _3610 * _3610;
                                float _3614 = ((1.0 - _3611) * dot(vec3(_3597, _3598, _3599), vec3(_1060, _1063, _1066))) + _3611;
                                float _3617 = _3608 * _3608;
                                float _3621 = (fma(_2814, _3501.z, fma(_2813, _3501.y, _3501.x * _2812)) + _3501.w) / _3562;
                                float _3622 = (fma(_2814, _3516.z, fma(_2813, _3516.y, _3516.x * _2812)) + _3516.w) / _3562;
                                float _3626 = 1.0 - dot(vec2(_3621, _3622), vec2(_3621, _3622));
                                float _4759 = isnan(0.0) ? _3626 : (isnan(_3626) ? 0.0 : max(_3626, 0.0));
                                float _3627 = isnan(1.0) ? _4759 : (isnan(_4759) ? 1.0 : min(_4759, 1.0));
                                float _3628 = _3627 * (((isnan(0.0) ? _3614 : (isnan(_3614) ? 0.0 : max(_3614, 0.0))) * _3604) / ((_3617 * 0.699999988079071044921875) + 1.0));
                                float _3640 = exp2(log2(1.0 / ((_3617 * 3.5) + 5.0)) * 0.25);
                                float _3641 = 1.0 - _1135;
                                float _3648 = sqrt(1.0 - ((1.0 - (_3641 * _3641)) * (1.0 - (_3640 * _3640))));
                                float _3649 = _3648 * _3648;
                                float _3650 = _3649 * _3649;
                                float _3651 = _3597 - _3100;
                                float _3652 = _3598 - _3101;
                                float _3653 = _3599 - _3102;
                                float _3657 = inversesqrt(dot(vec3(_3651, _3652, _3653), vec3(_3651, _3652, _3653)));
                                float _3661 = dot(vec3(_1060, _1063, _1066), vec3((-0.0) - _3100, (-0.0) - _3101, (-0.0) - _3102));
                                float _4770 = isnan(0.0) ? _3661 : (isnan(_3661) ? 0.0 : max(_3661, 0.0));
                                float _3664 = isnan(1.0) ? _4770 : (isnan(_4770) ? 1.0 : min(_4770, 1.0));
                                float _3665 = dot(vec3(_1060, _1063, _1066), vec3(_3657 * _3651, _3657 * _3652, _3657 * _3653));
                                float _4781 = isnan(0.0) ? _3665 : (isnan(_3665) ? 0.0 : max(_3665, 0.0));
                                float _3668 = isnan(1.0) ? _4781 : (isnan(_4781) ? 1.0 : min(_4781, 1.0));
                                float _3672 = ((_3668 * _3668) * (_3650 + (-1.0))) + 1.0;
                                float _3673 = _3610 * _3649;
                                float _3674 = _3673 * _3673;
                                float _3680 = ((1.0 - _3674) * dot(vec3(_1060, _1063, _1066), vec3(_3597, _3598, _3599))) + _3674;
                                float _4792 = isnan(0.0) ? _3680 : (isnan(_3680) ? 0.0 : max(_3680, 0.0));
                                float _3681 = isnan(1.0) ? _4792 : (isnan(_4792) ? 1.0 : min(_4792, 1.0));
                                float _3682 = 1.0 - _3649;
                                float _3692 = (0.5 / (((_3681 * ((_3664 * _3682) + _3649)) + 9.9999999392252902907785028219223e-09) + (((_3681 * _3682) + _3649) * _3664))) * _3681;
                                float _4803 = isnan(0.0) ? _3692 : (isnan(_3692) ? 0.0 : max(_3692, 0.0));
                                float _3702 = (_3627 * _3604) * (((_3650 * 3.1415927410125732421875) * (isnan(1.0) ? _4803 : (isnan(_4803) ? 1.0 : min(_4803, 1.0)))) / ((_3672 * _3672) * ((_3617 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3702 * _3486.x;
                                frontier_phi_73_pred_1 = _3702 * _3486.y;
                                frontier_phi_73_pred_2 = _3628 * _3474.z;
                                frontier_phi_73_pred_3 = _3628 * _3474.y;
                                frontier_phi_73_pred_4 = _3628 * _3474.x;
                                frontier_phi_73_pred_5 = _3702 * _3486.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3706 = frontier_phi_73_pred;
                            _3707 = frontier_phi_73_pred_1;
                            _3711 = frontier_phi_73_pred_2;
                            _3710 = frontier_phi_73_pred_3;
                            _3709 = frontier_phi_73_pred_4;
                            _3708 = frontier_phi_73_pred_5;
                            _3416 = _3709 + _3429;
                            _3417 = _3710 + _3430;
                            _3418 = _3711 + _3431;
                            _3413 = _3706 + _3426;
                            _3414 = _3707 + _3427;
                            _3415 = _3708 + _3428;
                            if (_3433 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3426 = _3413;
                                _3427 = _3414;
                                _3428 = _3415;
                                _3429 = _3416;
                                _3430 = _3417;
                                _3431 = _3418;
                                _3432 = _3433;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3416;
                        frontier_phi_67_pred_1 = _3417;
                        frontier_phi_67_pred_2 = _3418;
                        frontier_phi_67_pred_3 = _3415;
                        frontier_phi_67_pred_4 = _3414;
                        frontier_phi_67_pred_5 = _3413;
                    }
                    _3081 = frontier_phi_67_pred;
                    _3083 = frontier_phi_67_pred_1;
                    _3085 = frontier_phi_67_pred_2;
                    _3079 = frontier_phi_67_pred_3;
                    _3077 = frontier_phi_67_pred_4;
                    _3075 = frontier_phi_67_pred_5;
                    uint _3220 = _3219 + 1u;
                    if (_3220 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3213 = _3075;
                        _3214 = _3077;
                        _3215 = _3079;
                        _3216 = _3081;
                        _3217 = _3083;
                        _3218 = _3085;
                        _3219 = _3220;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _3083;
                frontier_phi_55_56_ladder_1 = _3085;
                frontier_phi_55_56_ladder_2 = _3081;
                frontier_phi_55_56_ladder_3 = _3079;
                frontier_phi_55_56_ladder_4 = _3077;
                frontier_phi_55_56_ladder_5 = _3075;
            }
            else
            {
                frontier_phi_55_56_ladder = _2969;
                frontier_phi_55_56_ladder_1 = _2971;
                frontier_phi_55_56_ladder_2 = _2967;
                frontier_phi_55_56_ladder_3 = _2965;
                frontier_phi_55_56_ladder_4 = _2963;
                frontier_phi_55_56_ladder_5 = _2961;
            }
            _3074 = frontier_phi_55_56_ladder_5;
            _3076 = frontier_phi_55_56_ladder_4;
            _3078 = frontier_phi_55_56_ladder_3;
            _3080 = frontier_phi_55_56_ladder_2;
            _3082 = frontier_phi_55_56_ladder;
            _3084 = frontier_phi_55_56_ladder_1;
        }
        float _3089 = isnan(1.0) ? _1119 : (isnan(_1119) ? 1.0 : min(_1119, 1.0));
        _2871 = (_3089 * _3080) + _2304;
        _2873 = (_3089 * _3082) + _2306;
        _2875 = (_3089 * _3084) + _2308;
        _2877 = ((_3074 * _1104) * _3089) + _2652;
        _2879 = ((_3076 * _1106) * _3089) + _2654;
        _2881 = ((_3078 * _1107) * _3089) + _2656;
    }
    else
    {
        _2871 = _2304;
        _2873 = _2306;
        _2875 = _2308;
        _2877 = _2652;
        _2879 = _2654;
        _2881 = _2656;
    }
    float _4819 = isnan(0.0) ? _1094 : (isnan(_1094) ? 0.0 : max(_1094, 0.0));
    float _4830 = isnan(0.0) ? _1095 : (isnan(_1095) ? 0.0 : max(_1095, 0.0));
    float _4841 = isnan(0.0) ? _1096 : (isnan(_1096) ? 0.0 : max(_1096, 0.0));
    float _4852 = isnan(0.0) ? _955 : (isnan(_955) ? 0.0 : max(_955, 0.0));
    float _2906 = cbInstanceData._m0[_1079 + 6u].w * (isnan(1.0) ? _4852 : (isnan(_4852) ? 1.0 : min(_4852, 1.0)));
    float _2911 = _1041 / cbSceneParam._m0[86u].x;
    float _2912 = _1042 / cbSceneParam._m0[86u].y;
    vec4 _2926 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2911, _2912, (log2((isnan(cbSceneParam._m0[77u].w) ? _976 : (isnan(_976) ? cbSceneParam._m0[77u].w : min(_976, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2928 = _2926.x;
    float _2929 = _2926.y;
    float _2930 = _2926.z;
    float _2931 = _2926.w;
    float _3024;
    float _3026;
    float _3028;
    float _3030;
    if (_976 > cbSceneParam._m0[78u].w)
    {
        float _2986 = isnan(_976) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _976 : min(cbSceneParam._m0[80u].w, _976));
        float _2987 = _2986 / _976;
        float _2998 = _2987 * _1026;
        float _2999 = _1027 * _2987;
        float _3000 = (-0.0) - _2999;
        float _3002 = _2987 * _1028;
        float _3004 = (cbSceneParam._m0[77u].w * _3000) / _2986;
        float _3005 = _3004 + cbSceneParam._m0[79u].w;
        float _3006 = cbSceneParam._m0[79u].w - _2999;
        float _3012 = sqrt(((_2998 * _2998) + (_2999 * _2999)) + (_3002 * _3002));
        float _3015 = (1.0 - (cbSceneParam._m0[77u].w / _2986)) * _3012;
        float _3020 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3022 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3175;
        if (abs((_3000 - _3004) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3175 = ((((_3005 > 0.0) ? exp2(_3020 * _3005) : (2.0 - exp2(_3022 * _3005))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3015;
        }
        else
        {
            float _3135 = 1.0 / cbSceneParam._m0[80u].x;
            float _3136 = isnan(_3006) ? _3005 : (isnan(_3005) ? _3006 : max(_3005, _3006));
            float _3137 = isnan(_3006) ? _3005 : (isnan(_3005) ? _3006 : min(_3005, _3006));
            float _3146 = isnan(0.0) ? _3136 : (isnan(_3136) ? 0.0 : min(_3136, 0.0));
            float _3147 = isnan(0.0) ? _3137 : (isnan(_3137) ? 0.0 : min(_3137, 0.0));
            _3175 = ((abs(_3012 / _3000) * cbSceneParam._m0[80u].y) * ((((_3146 - _3147) * 2.0) - ((exp2(_3020 * (isnan(0.0) ? _3136 : (isnan(_3136) ? 0.0 : max(_3136, 0.0)))) - exp2(_3020 * (isnan(0.0) ? _3137 : (isnan(_3137) ? 0.0 : max(_3137, 0.0))))) * _3135)) - ((exp2(_3022 * _3146) - exp2(_3022 * _3147)) * _3135))) + (_3015 * cbSceneParam._m0[80u].z);
        }
        vec4 _3177 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2911, _2912, 1.0), 0.0);
        float _3186 = exp2((_3175 * (-1.44269502162933349609375)) * (1.0 - _3177.w));
        float _3187 = log2(_3186);
        float _3203 = log2(_2931);
        _3024 = (exp2(_3203 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3187 * cbSceneParam._m0[78u].x)) * _3177.x) / cbSceneParam._m0[78u].x)) + _2928;
        _3026 = (exp2(_3203 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3187 * cbSceneParam._m0[78u].y)) * _3177.y) / cbSceneParam._m0[78u].y)) + _2929;
        _3028 = (exp2(_3203 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3187 * cbSceneParam._m0[78u].z)) * _3177.z) / cbSceneParam._m0[78u].z)) + _2930;
        _3030 = _3186 * _2931;
    }
    else
    {
        _3024 = _2928;
        _3026 = _2929;
        _3028 = _2930;
        _3030 = _2931;
    }
    float _3042 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3043 = _3042 == 3.0;
    float _3044 = log2(_3030);
    float _3051 = exp2(_3044 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4819 : (isnan(_4819) ? 1.0 : min(_4819, 1.0))) * (_2871 + ((isnan(0.0) ? _1844 : (isnan(_1844) ? 0.0 : max(_1844, 0.0))) * _1119))) + ((_2877 + ((isnan(0.0) ? _2136 : (isnan(_2136) ? 0.0 : max(_2136, 0.0))) * _1923)) * cbPerFrame._m0[3u].x));
    float _3052 = exp2(_3044 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4830 : (isnan(_4830) ? 1.0 : min(_4830, 1.0))) * (_2873 + ((isnan(0.0) ? _1847 : (isnan(_1847) ? 0.0 : max(_1847, 0.0))) * _1119))) + ((_2879 + ((isnan(0.0) ? _2139 : (isnan(_2139) ? 0.0 : max(_2139, 0.0))) * _1923)) * cbPerFrame._m0[3u].x));
    float _3053 = exp2(_3044 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4841 : (isnan(_4841) ? 1.0 : min(_4841, 1.0))) * (_2875 + ((isnan(0.0) ? _1850 : (isnan(_1850) ? 0.0 : max(_1850, 0.0))) * _1119))) + ((_2881 + ((isnan(0.0) ? _2142 : (isnan(_2142) ? 0.0 : max(_2142, 0.0))) * _1923)) * cbPerFrame._m0[3u].x));
    float _3062 = (_3042 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3062 * (_3043 ? _3051 : (_3051 + (cbSceneParam._m0[72u].w * _3024)));
    SV_Target.y = _3062 * (_3043 ? _3052 : (_3052 + (cbSceneParam._m0[72u].w * _3026)));
    SV_Target.z = _3062 * (_3043 ? _3053 : (_3053 + (cbSceneParam._m0[72u].w * _3028)));
    SV_Target.w = _2906;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2906;
}


