#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_23;
layout(set = 0, binding = 11) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_24;
layout(set = 0, binding = 12) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_4;
layout(set = 0, binding = 13) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_6;
layout(set = 0, binding = 14) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_7;
layout(set = 0, binding = 15) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_19;
layout(set = 0, binding = 7) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_20;
layout(set = 0, binding = 9) uniform texture2D C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_22;
layout(set = 0, binding = 17) uniform texture2DArray C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_0;
layout(set = 0, binding = 18) uniform texture2DArray C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in float TEXCOORD_8;
layout(location = 7, component = 1) in float TEXCOORD_9;
layout(location = 7, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1415;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _222 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _223 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _224 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _230 = inversesqrt(dot(vec3(_222, _223, _224), vec3(_222, _223, _224)));
    float _237 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _244 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _288 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _292 = _288.z;
    float _305 = exp2(log2((1.0 - _292) * cbMtdParam._m0[26u].z) * cbMtdParam._m0[25u].w);
    float _306 = isnan(0.0) ? _305 : (isnan(_305) ? 0.0 : max(_305, 0.0));
    float _307 = isnan(1.0) ? _306 : (isnan(_306) ? 1.0 : min(_306, 1.0));
    vec4 _320 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w));
    float _328 = log2(0.0);
    float _330 = exp2(_328 * cbMtdParam._m0[23u].x);
    float _331 = isnan(0.0) ? _330 : (isnan(_330) ? 0.0 : max(_330, 0.0));
    float _332 = isnan(1.0) ? _331 : (isnan(_331) ? 1.0 : min(_331, 1.0));
    float _341 = exp2(log2(cbMtdParam._m0[23u].y * _292) * cbMtdParam._m0[22u].y);
    float _342 = isnan(0.0) ? _341 : (isnan(_341) ? 0.0 : max(_341, 0.0));
    float _343 = isnan(1.0) ? _342 : (isnan(_342) ? 1.0 : min(_342, 1.0));
    float _364 = roundEven(5.0 - ((texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w)).x + (-0.02500000037252902984619140625)) * 8.0));
    float _365 = isnan(0.0) ? _364 : (isnan(_364) ? 0.0 : max(_364, 0.0));
    float _366 = isnan(4.0) ? _365 : (isnan(_365) ? 4.0 : min(_365, 4.0));
    float _378 = floor(_366);
    vec4 _381 = texture(sampler2DArray(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_0, SS_DiffuseMap), vec3((cbTextureTilingScale._m0[17u].x * TEXCOORD.x) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.y) + cbTextureTilingScale._m0[17u].w, _378));
    vec4 _405 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _416 = cbMtdParam._m0[9u].x * _405.x;
    float _417 = cbMtdParam._m0[9u].y * _405.y;
    float _418 = cbMtdParam._m0[9u].z * _405.z;
    float _425 = (((cbMtdParam._m0[10u].x * _381.x) - _416) * _343) + _416;
    float _426 = (((cbMtdParam._m0[10u].y * _381.y) - _417) * _343) + _417;
    float _427 = (((cbMtdParam._m0[10u].z * _381.z) - _418) * _343) + _418;
    float _433 = exp2(log2(_288.w) * cbMtdParam._m0[23u].w);
    vec4 _446 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _466 = (((cbMtdParam._m0[16u].x * _446.x) - _425) * _433) + _425;
    float _467 = (((cbMtdParam._m0[16u].y * _446.y) - _426) * _433) + _426;
    float _468 = (((cbMtdParam._m0[16u].z * _446.z) - _427) * _433) + _427;
    vec4 _481 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _501 = (((cbMtdParam._m0[19u].x * _481.x) - _466) * _332) + _466;
    float _502 = (((cbMtdParam._m0[19u].y * _481.y) - _467) * _332) + _467;
    float _503 = (((cbMtdParam._m0[19u].z * _481.z) - _468) * _332) + _468;
    vec4 _516 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_19, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _541 = (_320.x * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].x * _516.x) - _501) * _307) + _501);
    float _543 = (_320.y * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].y * _516.y) - _502) * _307) + _502);
    float _545 = (_320.z * 4.55000019073486328125) * ((((cbMtdParam._m0[20u].z * _516.z) - _503) * _307) + _503);
    float _549 = cbMtdParam._m0[28u].x * TEXCOORD_8;
    float _558 = (_549 - (((texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_23, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x + 0.00999999977648258209228515625) * cbMtdParam._m0[27u].z) * (1.0 - _549))) * (cbMtdParam._m0[27u].w + 1.0);
    float _4063 = isnan(0.0) ? _558 : (isnan(_558) ? 0.0 : max(_558, 0.0));
    float _559 = isnan(1.0) ? _4063 : (isnan(_4063) ? 1.0 : min(_4063, 1.0));
    float _566 = ((cbMtdParam._m0[21u].x - _541) * _559) + _541;
    float _567 = ((cbMtdParam._m0[21u].y - _543) * _559) + _543;
    float _568 = ((cbMtdParam._m0[21u].z - _545) * _559) + _545;
    vec4 _582 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_24, SS_ClampLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.z) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.w) + cbTextureTilingScale._m0[11u].w));
    float _590 = (_582.x + (-1.0)) + (cbMtdParam._m0[28u].y * 2.0);
    float _4074 = isnan(0.0) ? _590 : (isnan(_590) ? 0.0 : max(_590, 0.0));
    float _596 = exp2(log2(cbMtdParam._m0[28u].w * (isnan(1.0) ? _4074 : (isnan(_4074) ? 1.0 : min(_4074, 1.0)))) * cbMtdParam._m0[28u].z);
    float _4085 = isnan(0.0) ? _596 : (isnan(_596) ? 0.0 : max(_596, 0.0));
    float _597 = isnan(1.0) ? _4085 : (isnan(_4085) ? 1.0 : min(_4085, 1.0));
    float _201[5];
    float _202[5];
    _201[0u] = cbMtdParam._m0[29u].z;
    _202[0u] = cbMtdParam._m0[29u].w;
    _201[1u] = cbMtdParam._m0[31u].z;
    _202[1u] = cbMtdParam._m0[31u].w;
    _201[2u] = cbMtdParam._m0[31u].x;
    _202[2u] = cbMtdParam._m0[31u].y;
    _201[3u] = cbMtdParam._m0[30u].z;
    _202[3u] = cbMtdParam._m0[30u].w;
    _201[4u] = cbMtdParam._m0[30u].x;
    _202[4u] = cbMtdParam._m0[30u].y;
    float _639 = isnan(0.0) ? _366 : (isnan(_366) ? 0.0 : max(_366, 0.0));
    uint _641 = uint(int(isnan(4.0) ? _639 : (isnan(_639) ? 4.0 : min(_639, 4.0))));
    float _648 = ((_202[_641] - cbMtdParam._m0[22u].z) * _343) + cbMtdParam._m0[22u].z;
    float _651 = ((cbMtdParam._m0[22u].w - _648) * _433) + _648;
    float _654 = ((cbMtdParam._m0[25u].x - _651) * _332) + _651;
    float _657 = ((cbMtdParam._m0[26u].x - _654) * _307) + _654;
    float _659 = _657 - (_657 * _549);
    vec4 _676 = texture(sampler2DArray(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2DArray_1, SS_BumpMap), vec3((cbTextureTilingScale._m0[18u].x * TEXCOORD.x) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD.y) + cbTextureTilingScale._m0[18u].w, _378));
    vec4 _694 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w));
    float _696 = _694.x;
    float _697 = _694.y;
    float _702 = cbMtdParam._m0[22u].x + _694.z;
    float _705 = (((_676.z + _201[_641]) - _702) * _343) + _702;
    vec4 _718 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.x) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.y) + cbTextureTilingScale._m0[15u].w));
    float _729 = (((_718.z - _705) + cbMtdParam._m0[29u].x) * _433) + _705;
    float _734 = ((((_292 * 2.0) * _729) - _729) * cbMtdParam._m0[24u].w) + _729;
    vec4 _746 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w));
    float _757 = (((cbMtdParam._m0[23u].z + _746.z) - _734) * _332) + _734;
    vec4 _770 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_20, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _781 = (((_770.z - _757) + cbMtdParam._m0[26u].y) * _307) + _757;
    vec4 _796 = texture(sampler2D(C_Cutscene_Enemy_Alpha_ColorMaterial_snp_0_Texture2D_22, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _810 = ((cbMtdParam._m0[27u].y * _549) * ((_796.z * cbMtdParam._m0[27u].x) - _781)) + _781;
    float _822 = ((_676.x - _696) * _343) + _696;
    float _823 = ((_676.y - _697) * _343) + _697;
    float _828 = ((_718.x - _822) * _433) + _822;
    float _829 = ((_718.y - _823) * _433) + _823;
    float _834 = ((_746.x - _828) * _332) + _828;
    float _835 = ((_746.y - _829) * _332) + _829;
    float _844 = ((((_770.x - _834) * _307) + _834) * 2.0) + (-1.0);
    float _845 = ((((_770.y - _835) * _307) + _835) * 2.0) + (-1.0);
    float _846 = dot(vec2(_844, _845), vec2(_844, _845));
    float _4106 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _851 = sqrt(1.0 - (isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0))));
    float _861 = ((cbMtdParam._m0[25u].y * ((_288.x * 2.0) + (-1.0))) + _844) + ((((_796.x * 2.0) + (-1.0)) * _549) * cbMtdParam._m0[26u].w);
    float _862 = ((cbMtdParam._m0[25u].y * ((_288.y * 2.0) + (-1.0))) + _845) + (((cbMtdParam._m0[28u].x * TEXCOORD_9) * ((_796.y * 2.0) + (-1.0))) * cbMtdParam._m0[26u].w);
    float _865 = fma(_851, _237 * NORMAL.x, fma(_862, _244 * TANGENT.x, (_230 * _222) * _861));
    float _868 = fma(_851, _237 * NORMAL.y, fma(_862, _244 * TANGENT.y, (_230 * _223) * _861));
    float _871 = fma(_851, _237 * NORMAL.z, fma(_862, _244 * TANGENT.z, (_230 * _224) * _861));
    float _875 = inversesqrt(dot(vec3(_865, _868, _871), vec3(_865, _868, _871)));
    float _876 = _875 * _865;
    float _877 = _875 * _868;
    float _878 = _875 * _871;
    float _4117 = isnan(0.0) ? _597 : (isnan(_597) ? 0.0 : max(_597, 0.0));
    float _879 = isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0));
    float _4128 = isnan(0.0) ? _810 : (isnan(_810) ? 0.0 : max(_810, 0.0));
    float _880 = isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0));
    float _4139 = isnan(0.0) ? _566 : (isnan(_566) ? 0.0 : max(_566, 0.0));
    float _4150 = isnan(0.0) ? _567 : (isnan(_567) ? 0.0 : max(_567, 0.0));
    float _4161 = isnan(0.0) ? _568 : (isnan(_568) ? 0.0 : max(_568, 0.0));
    float _4172 = isnan(0.0) ? _659 : (isnan(_659) ? 0.0 : max(_659, 0.0));
    float _884 = isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0));
    float _900 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _940 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _950 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _940);
    float _951 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _940);
    float _952 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _940);
    float _956 = inversesqrt(dot(vec3(_950, _951, _952), vec3(_950, _951, _952)));
    float _957 = _950 * _956;
    float _958 = _951 * _956;
    float _959 = _952 * _956;
    float _965 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _966 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _984 = fma(_878, cbSceneParam._m0[5u].z, fma(_877, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _876));
    float _987 = fma(_878, cbSceneParam._m0[6u].z, fma(_877, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _876));
    float _990 = fma(_878, cbSceneParam._m0[7u].z, fma(_877, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _876));
    uint _1003 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1005 = (_1003 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1011 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0)))) * cbInstanceData._m0[_1005].x;
    float _1012 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0)))) * cbInstanceData._m0[_1005].y;
    float _1013 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0)))) * cbInstanceData._m0[_1005].z;
    float _4183 = isnan(0.0) ? _1011 : (isnan(_1011) ? 0.0 : max(_1011, 0.0));
    float _1014 = isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0));
    float _4194 = isnan(0.0) ? _1012 : (isnan(_1012) ? 0.0 : max(_1012, 0.0));
    float _1015 = isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0));
    float _4205 = isnan(0.0) ? _1013 : (isnan(_1013) ? 0.0 : max(_1013, 0.0));
    float _1016 = isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0));
    float _1017 = 1.0 - _884;
    float _1018 = _1014 * _1017;
    float _1019 = _1015 * _1017;
    float _1020 = _1016 * _1017;
    float _1025 = (_1014 + (-0.039999999105930328369140625)) * _884;
    float _1026 = (_1015 + (-0.039999999105930328369140625)) * _884;
    float _1027 = (_1016 + (-0.039999999105930328369140625)) * _884;
    float _1028 = _1025 + 0.039999999105930328369140625;
    float _1030 = _1026 + 0.039999999105930328369140625;
    float _1031 = _1027 + 0.039999999105930328369140625;
    vec4 _1040 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _965, cbSceneParam._m0[86u].y * _966));
    float _1043 = _1040.x * TEXCOORD_5.w;
    float _1044 = dot(vec3(_876, _877, _878), vec3(_957, _958, _959));
    float _1047 = _1044 * 2.0;
    float _1051 = (_1047 * _876) - _957;
    float _1052 = (_1047 * _877) - _958;
    float _1053 = (_1047 * _878) - _959;
    float _1057 = abs(dot(vec3(_957, _958, _959), vec3(_876, _877, _878)));
    float _4216 = isnan(0.0) ? _1057 : (isnan(_1057) ? 0.0 : max(_1057, 0.0));
    float _1059 = sqrt(_880);
    float _1070 = exp2((_1059 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1059 * 3.0));
    float _1076 = (1.0 - _1070) * ((_1059 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1077 = _1070 * _1059;
    float _1105 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1109 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1113 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1414;
    float _1416;
    float _1417;
    float _1418;
    float _1419;
    float _1420;
    float _1421;
    float _1422;
    float _1423;
    float _1424;
    float _1425;
    float _1426;
    float _1427;
    float _1428;
    float _1429;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1139 = fma(_1113, cbModelParam._m0[26u].z, fma(_1109, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1105));
        float _1143 = fma(_1113, cbModelParam._m0[27u].z, fma(_1109, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1105));
        float _1147 = fma(_1113, cbModelParam._m0[28u].z, fma(_1109, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1105));
        float _1172 = _1105 + _876;
        float _1173 = _1109 + _877;
        float _1174 = _1113 + _878;
        float _1184 = fma(_1174, cbModelParam._m0[26u].z, fma(_1173, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1172)) - _1139;
        float _1185 = fma(_1174, cbModelParam._m0[27u].z, fma(_1173, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1172)) - _1143;
        float _1186 = fma(_1174, cbModelParam._m0[28u].z, fma(_1173, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1172)) - _1147;
        float _1190 = inversesqrt(dot(vec3(_1184, _1185, _1186), vec3(_1184, _1185, _1186)));
        float _1203 = ((_1190 * _1184) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1139 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1204 = ((_1190 * _1185) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1143 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1205 = ((_1190 * _1186) / cbModelParam._m0[34u].z) + ((((((_1147 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1208 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1203, _1204, _1205), 0.0);
        vec4 _1215 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1203, _1204, _1205), 0.0);
        vec4 _1222 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1203, _1204, _1205), 0.0);
        vec4 _1229 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1203, _1204, _1205), 0.0);
        float _1242 = exp2((_1208.w + (-0.5)) * 20.0) * 2.0;
        float _1243 = _1242 * (_1208.x + (-0.5));
        float _1244 = _1242 * (_1208.y + (-0.5));
        float _1245 = _1242 * (_1208.z + (-0.5));
        float _1252 = exp2((_1215.w + (-0.5)) * 20.0) * 2.0;
        float _1253 = _1252 * (_1215.x + (-0.5));
        float _1254 = _1252 * (_1215.y + (-0.5));
        float _1255 = _1252 * (_1215.z + (-0.5));
        float _1262 = exp2((_1222.w + (-0.5)) * 20.0) * 2.0;
        float _1263 = _1262 * (_1222.x + (-0.5));
        float _1264 = _1262 * (_1222.y + (-0.5));
        float _1265 = _1262 * (_1222.z + (-0.5));
        float _1272 = exp2((_1229.w + (-0.5)) * 20.0) * 2.0;
        float _1273 = _1272 * (_1229.x + (-0.5));
        float _1274 = _1272 * (_1229.y + (-0.5));
        float _1275 = _1272 * (_1229.z + (-0.5));
        float _1276 = isnan(0.0) ? _1273 : (isnan(_1273) ? 0.0 : max(_1273, 0.0));
        float _1277 = isnan(0.0) ? _1274 : (isnan(_1274) ? 0.0 : max(_1274, 0.0));
        float _1278 = isnan(0.0) ? _1275 : (isnan(_1275) ? 0.0 : max(_1275, 0.0));
        float _1279 = _1243 * 0.5;
        float _1280 = _1253 * 0.5;
        float _1281 = _1263 * 0.5;
        float _1282 = dot(vec3(_1279, _1280, _1281), vec3(_1279, _1280, _1281));
        float _1287 = (_1282 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1282);
        float _1296 = (dot(vec3(_876, _877, _878), vec3(_1287 * _1279, _1287 * _1280, _1287 * _1281)) + 1.0) * 0.5;
        float _4242 = isnan(0.0) ? _1296 : (isnan(_1296) ? 0.0 : max(_1296, 0.0));
        float _1306 = sqrt(((_1280 * _1280) + (_1279 * _1279)) + (_1281 * _1281)) / (_1276 + 9.9999997473787516355514526367188e-06);
        float _4253 = isnan(0.0) ? _1306 : (isnan(_1306) ? 0.0 : max(_1306, 0.0));
        float _1307 = isnan(1.0) ? _4253 : (isnan(_4253) ? 1.0 : min(_4253, 1.0));
        float _1308 = _1307 * 2.0;
        float _1312 = (1.0 - _1307) / (_1307 + 1.0);
        float _4264 = isnan(0.0) ? _1312 : (isnan(_1312) ? 0.0 : max(_1312, 0.0));
        float _1313 = isnan(1.0) ? _4264 : (isnan(_4264) ? 1.0 : min(_4264, 1.0));
        float _1322 = ((((1.0 - _1313) * (_1308 + 2.0)) * exp2(log2(isnan(1.0) ? _4242 : (isnan(_4242) ? 1.0 : min(_4242, 1.0))) * (_1308 + 1.0))) + _1313) * _1276;
        float _1323 = _1244 * 0.5;
        float _1324 = _1254 * 0.5;
        float _1325 = _1264 * 0.5;
        float _1326 = dot(vec3(_1323, _1324, _1325), vec3(_1323, _1324, _1325));
        float _1331 = (_1326 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1326);
        float _1339 = (dot(vec3(_876, _877, _878), vec3(_1331 * _1323, _1331 * _1324, _1331 * _1325)) + 1.0) * 0.5;
        float _4275 = isnan(0.0) ? _1339 : (isnan(_1339) ? 0.0 : max(_1339, 0.0));
        float _1348 = sqrt(((_1324 * _1324) + (_1323 * _1323)) + (_1325 * _1325)) / (_1277 + 9.9999997473787516355514526367188e-06);
        float _4286 = isnan(0.0) ? _1348 : (isnan(_1348) ? 0.0 : max(_1348, 0.0));
        float _1349 = isnan(1.0) ? _4286 : (isnan(_4286) ? 1.0 : min(_4286, 1.0));
        float _1350 = _1349 * 2.0;
        float _1354 = (1.0 - _1349) / (_1349 + 1.0);
        float _4297 = isnan(0.0) ? _1354 : (isnan(_1354) ? 0.0 : max(_1354, 0.0));
        float _1355 = isnan(1.0) ? _4297 : (isnan(_4297) ? 1.0 : min(_4297, 1.0));
        float _1364 = ((((1.0 - _1355) * (_1350 + 2.0)) * exp2(log2(isnan(1.0) ? _4275 : (isnan(_4275) ? 1.0 : min(_4275, 1.0))) * (_1350 + 1.0))) + _1355) * _1277;
        float _1365 = _1245 * 0.5;
        float _1366 = _1255 * 0.5;
        float _1367 = _1265 * 0.5;
        float _1368 = dot(vec3(_1365, _1366, _1367), vec3(_1365, _1366, _1367));
        float _1373 = (_1368 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1368);
        float _1381 = (dot(vec3(_876, _877, _878), vec3(_1373 * _1365, _1373 * _1366, _1373 * _1367)) + 1.0) * 0.5;
        float _4308 = isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0));
        float _1390 = sqrt(((_1366 * _1366) + (_1365 * _1365)) + (_1367 * _1367)) / (_1278 + 9.9999997473787516355514526367188e-06);
        float _4319 = isnan(0.0) ? _1390 : (isnan(_1390) ? 0.0 : max(_1390, 0.0));
        float _1391 = isnan(1.0) ? _4319 : (isnan(_4319) ? 1.0 : min(_4319, 1.0));
        float _1392 = _1391 * 2.0;
        float _1396 = (1.0 - _1391) / (_1391 + 1.0);
        float _4330 = isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0));
        float _1397 = isnan(1.0) ? _4330 : (isnan(_4330) ? 1.0 : min(_4330, 1.0));
        float _1406 = ((((1.0 - _1397) * (_1392 + 2.0)) * exp2(log2(isnan(1.0) ? _4308 : (isnan(_4308) ? 1.0 : min(_4308, 1.0))) * (_1392 + 1.0))) + _1397) * _1278;
        _1414 = _1245;
        _1416 = _1244;
        _1417 = _1243;
        _1418 = _1255;
        _1419 = _1254;
        _1420 = _1253;
        _1421 = _1265;
        _1422 = _1264;
        _1423 = _1263;
        _1424 = _1278;
        _1425 = _1277;
        _1426 = _1276;
        _1427 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1322 : (isnan(_1322) ? 0.0 : max(_1322, 0.0)));
        _1428 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : max(_1364, 0.0)));
        _1429 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1406 : (isnan(_1406) ? 0.0 : max(_1406, 0.0)));
    }
    else
    {
        _1414 = _1415;
        _1416 = _1415;
        _1417 = _1415;
        _1418 = _1415;
        _1419 = _1415;
        _1420 = _1415;
        _1421 = _1415;
        _1422 = _1415;
        _1423 = _1415;
        _1424 = _1415;
        _1425 = _1415;
        _1426 = _1415;
        _1427 = 0.0;
        _1428 = 0.0;
        _1429 = 0.0;
    }
    float _1721;
    float _1722;
    float _1723;
    float _1724;
    float _1725;
    float _1726;
    float _1727;
    float _1728;
    float _1729;
    float _1730;
    float _1731;
    float _1732;
    float _1733;
    float _1734;
    float _1735;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1452 = fma(_1113, cbModelParam._m0[30u].z, fma(_1109, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1105));
        float _1456 = fma(_1113, cbModelParam._m0[31u].z, fma(_1109, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1105));
        float _1460 = fma(_1113, cbModelParam._m0[32u].z, fma(_1109, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1105));
        float _1483 = _1105 + _876;
        float _1484 = _1109 + _877;
        float _1485 = _1113 + _878;
        float _1495 = fma(_1485, cbModelParam._m0[30u].z, fma(_1484, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1483)) - _1452;
        float _1496 = fma(_1485, cbModelParam._m0[31u].z, fma(_1484, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1483)) - _1456;
        float _1497 = fma(_1485, cbModelParam._m0[32u].z, fma(_1484, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1483)) - _1460;
        float _1501 = inversesqrt(dot(vec3(_1495, _1496, _1497), vec3(_1495, _1496, _1497)));
        float _1514 = ((_1501 * _1495) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1452 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1515 = ((_1501 * _1496) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1456 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1516 = ((_1501 * _1497) / cbModelParam._m0[35u].z) + ((((((_1460 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1518 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1514, _1515, _1516), 0.0);
        vec4 _1525 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1514, _1515, _1516), 0.0);
        vec4 _1532 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1514, _1515, _1516), 0.0);
        vec4 _1539 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1514, _1515, _1516), 0.0);
        float _1551 = exp2((_1518.w + (-0.5)) * 20.0) * 2.0;
        float _1552 = _1551 * (_1518.x + (-0.5));
        float _1553 = _1551 * (_1518.y + (-0.5));
        float _1554 = _1551 * (_1518.z + (-0.5));
        float _1561 = exp2((_1525.w + (-0.5)) * 20.0) * 2.0;
        float _1562 = _1561 * (_1525.x + (-0.5));
        float _1563 = _1561 * (_1525.y + (-0.5));
        float _1564 = _1561 * (_1525.z + (-0.5));
        float _1571 = exp2((_1532.w + (-0.5)) * 20.0) * 2.0;
        float _1572 = _1571 * (_1532.x + (-0.5));
        float _1573 = _1571 * (_1532.y + (-0.5));
        float _1574 = _1571 * (_1532.z + (-0.5));
        float _1581 = exp2((_1539.w + (-0.5)) * 20.0) * 2.0;
        float _1582 = _1581 * (_1539.x + (-0.5));
        float _1583 = _1581 * (_1539.y + (-0.5));
        float _1584 = _1581 * (_1539.z + (-0.5));
        float _1585 = isnan(0.0) ? _1582 : (isnan(_1582) ? 0.0 : max(_1582, 0.0));
        float _1586 = isnan(0.0) ? _1583 : (isnan(_1583) ? 0.0 : max(_1583, 0.0));
        float _1587 = isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0));
        float _1588 = _1552 * 0.5;
        float _1589 = _1562 * 0.5;
        float _1590 = _1572 * 0.5;
        float _1591 = dot(vec3(_1588, _1589, _1590), vec3(_1588, _1589, _1590));
        float _1596 = (_1591 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1591);
        float _1604 = (dot(vec3(_876, _877, _878), vec3(_1596 * _1588, _1596 * _1589, _1596 * _1590)) + 1.0) * 0.5;
        float _4371 = isnan(0.0) ? _1604 : (isnan(_1604) ? 0.0 : max(_1604, 0.0));
        float _1613 = sqrt(((_1589 * _1589) + (_1588 * _1588)) + (_1590 * _1590)) / (_1585 + 9.9999997473787516355514526367188e-06);
        float _4382 = isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0));
        float _1614 = isnan(1.0) ? _4382 : (isnan(_4382) ? 1.0 : min(_4382, 1.0));
        float _1615 = _1614 * 2.0;
        float _1619 = (1.0 - _1614) / (_1614 + 1.0);
        float _4393 = isnan(0.0) ? _1619 : (isnan(_1619) ? 0.0 : max(_1619, 0.0));
        float _1620 = isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0));
        float _1629 = ((((1.0 - _1620) * (_1615 + 2.0)) * exp2(log2(isnan(1.0) ? _4371 : (isnan(_4371) ? 1.0 : min(_4371, 1.0))) * (_1615 + 1.0))) + _1620) * _1585;
        float _1630 = _1553 * 0.5;
        float _1631 = _1563 * 0.5;
        float _1632 = _1573 * 0.5;
        float _1633 = dot(vec3(_1630, _1631, _1632), vec3(_1630, _1631, _1632));
        float _1638 = (_1633 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1633);
        float _1646 = (dot(vec3(_876, _877, _878), vec3(_1638 * _1630, _1638 * _1631, _1638 * _1632)) + 1.0) * 0.5;
        float _4404 = isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0));
        float _1655 = sqrt(((_1631 * _1631) + (_1630 * _1630)) + (_1632 * _1632)) / (_1586 + 9.9999997473787516355514526367188e-06);
        float _4415 = isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0));
        float _1656 = isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0));
        float _1657 = _1656 * 2.0;
        float _1661 = (1.0 - _1656) / (_1656 + 1.0);
        float _4426 = isnan(0.0) ? _1661 : (isnan(_1661) ? 0.0 : max(_1661, 0.0));
        float _1662 = isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0));
        float _1671 = ((((1.0 - _1662) * (_1657 + 2.0)) * exp2(log2(isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0))) * (_1657 + 1.0))) + _1662) * _1586;
        float _1672 = _1554 * 0.5;
        float _1673 = _1564 * 0.5;
        float _1674 = _1574 * 0.5;
        float _1675 = dot(vec3(_1672, _1673, _1674), vec3(_1672, _1673, _1674));
        float _1680 = (_1675 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1675);
        float _1688 = (dot(vec3(_876, _877, _878), vec3(_1680 * _1672, _1680 * _1673, _1680 * _1674)) + 1.0) * 0.5;
        float _4437 = isnan(0.0) ? _1688 : (isnan(_1688) ? 0.0 : max(_1688, 0.0));
        float _1697 = sqrt(((_1673 * _1673) + (_1672 * _1672)) + (_1674 * _1674)) / (_1587 + 9.9999997473787516355514526367188e-06);
        float _4448 = isnan(0.0) ? _1697 : (isnan(_1697) ? 0.0 : max(_1697, 0.0));
        float _1698 = isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0));
        float _1699 = _1698 * 2.0;
        float _1703 = (1.0 - _1698) / (_1698 + 1.0);
        float _4459 = isnan(0.0) ? _1703 : (isnan(_1703) ? 0.0 : max(_1703, 0.0));
        float _1704 = isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0));
        float _1713 = ((((1.0 - _1704) * (_1699 + 2.0)) * exp2(log2(isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0))) * (_1699 + 1.0))) + _1704) * _1587;
        _1721 = _1554;
        _1722 = _1553;
        _1723 = _1552;
        _1724 = _1564;
        _1725 = _1563;
        _1726 = _1562;
        _1727 = _1574;
        _1728 = _1573;
        _1729 = _1572;
        _1730 = _1587;
        _1731 = _1586;
        _1732 = _1585;
        _1733 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0)));
        _1734 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0)));
        _1735 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1713 : (isnan(_1713) ? 0.0 : max(_1713, 0.0)));
    }
    else
    {
        _1721 = _1415;
        _1722 = _1415;
        _1723 = _1415;
        _1724 = _1415;
        _1725 = _1415;
        _1726 = _1415;
        _1727 = _1415;
        _1728 = _1415;
        _1729 = _1415;
        _1730 = _1415;
        _1731 = _1415;
        _1732 = _1415;
        _1733 = 0.0;
        _1734 = 0.0;
        _1735 = 0.0;
    }
    float _1745 = (cbModelParam._m0[1u].x * (_1733 - _1427)) + _1427;
    float _1746 = (cbModelParam._m0[1u].x * (_1734 - _1428)) + _1428;
    float _1747 = (cbModelParam._m0[1u].x * (_1735 - _1429)) + _1429;
    float _1768 = fma(_1747, cbSceneParam._m0[89u].z, fma(_1746, cbSceneParam._m0[89u].y, _1745 * cbSceneParam._m0[89u].x));
    float _1771 = fma(_1747, cbSceneParam._m0[90u].z, fma(_1746, cbSceneParam._m0[90u].y, _1745 * cbSceneParam._m0[90u].x));
    float _1774 = fma(_1747, cbSceneParam._m0[91u].z, fma(_1746, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1745));
    float _1789 = _1051 * 0.5;
    float _1790 = _1052 * 0.5;
    float _1791 = _1053 * 0.5;
    float _1792 = dot(vec4(_1789, _1790, _1791, 1.0), vec4(_1723, _1726, _1729, _1732));
    float _1795 = dot(vec4(_1789, _1790, _1791, 1.0), vec4(_1722, _1725, _1728, _1731));
    float _1798 = dot(vec4(_1789, _1790, _1791, 1.0), vec4(_1721, _1724, _1727, _1730));
    float _1832;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1805 = dot(vec4(_1789, _1790, _1791, 1.0), vec4(_1414, _1418, _1421, _1424));
        float _1809 = dot(vec4(_1789, _1790, _1791, 1.0), vec4(_1416, _1419, _1422, _1425));
        float _1813 = dot(vec4(_1789, _1790, _1791, 1.0), vec4(_1417, _1420, _1423, _1426));
        float _1820 = dot(vec4(cbModelParam._m0[39u]), vec4(_1789, _1790, _1791, 1.0));
        _1832 = dot(vec3(isnan(0.0) ? _1813 : (isnan(_1813) ? 0.0 : max(_1813, 0.0)), isnan(0.0) ? _1809 : (isnan(_1809) ? 0.0 : max(_1809, 0.0)), isnan(0.0) ? _1805 : (isnan(_1805) ? 0.0 : max(_1805, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1820) ? 0.0 : (isnan(0.0) ? _1820 : max(0.0, _1820))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1832 = 1.0;
    }
    float _1843;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1834 = dot(vec4(cbModelParam._m0[40u]), vec4(_1789, _1790, _1791, 1.0));
        _1843 = dot(vec3(isnan(0.0) ? _1792 : (isnan(_1792) ? 0.0 : max(_1792, 0.0)), isnan(0.0) ? _1795 : (isnan(_1795) ? 0.0 : max(_1795, 0.0)), isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1834) ? 0.0 : (isnan(0.0) ? _1834 : max(0.0, _1834))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1843 = 1.0;
    }
    float _1847 = (_1843 * cbModelParam._m0[1u].x) + (_1832 * (1.0 - cbModelParam._m0[1u].x));
    float _1857 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _880);
    float _1858 = isnan(_1857) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1857 : min(cbModelParam._m0[25u].z, _1857));
    float _1938;
    float _1940;
    float _1942;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1905 = fma(_1113, cbModelParam._m0[13u].z, fma(_1109, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1105)) + cbModelParam._m0[13u].w;
        float _1909 = fma(_1113, cbModelParam._m0[14u].z, fma(_1109, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1105)) + cbModelParam._m0[14u].w;
        float _1913 = fma(_1113, cbModelParam._m0[15u].z, fma(_1109, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1105)) + cbModelParam._m0[15u].w;
        float _1916 = fma(_1053, cbModelParam._m0[13u].z, fma(_1052, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1051));
        float _1919 = fma(_1053, cbModelParam._m0[14u].z, fma(_1052, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1051));
        float _1922 = fma(_1053, cbModelParam._m0[15u].z, fma(_1052, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1051));
        float _1950;
        if (_1916 > 0.0)
        {
            _1950 = abs((1.0 - _1905) / _1916);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1916 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1905 + 1.0) / _1916);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1950 = frontier_phi_14_12_ladder;
        }
        float _2121;
        if (_1919 > 0.0)
        {
            _2121 = abs((1.0 - _1909) / _1919);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1919 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1909 + 1.0) / _1919);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2121 = frontier_phi_23_19_ladder;
        }
        float _2416;
        if (_1922 > 0.0)
        {
            _2416 = abs((1.0 - _1913) / _1922);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1922 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1913 + 1.0) / _1922);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2416 = frontier_phi_35_30_ladder;
        }
        float _2418 = isnan(_2121) ? _1950 : (isnan(_1950) ? _2121 : min(_1950, _2121));
        float _2419 = isnan(_2416) ? _2418 : (isnan(_2418) ? _2416 : min(_2418, _2416));
        float _2423 = (_2419 * _1916) + _1905;
        float _2424 = (_2419 * _1919) + _1909;
        float _2425 = (_2419 * _1922) + _1913;
        float _2426 = _2419 * 9.9999997473787516355514526367188e-05;
        float _2428 = (-1.0) - _2426;
        float _2430 = _2426 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2425 > _2430) || ((_2425 < _2428) || ((_2424 > _2430) || ((_2424 < _2428) || ((_2423 < _2428) || (_2423 > _2430))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2570 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2425, cbModelParam._m0[9u].z, fma(_2424, cbModelParam._m0[9u].y, _2423 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2425, cbModelParam._m0[10u].z, fma(_2424, cbModelParam._m0[10u].y, _2423 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2425, cbModelParam._m0[11u].z, fma(_2424, cbModelParam._m0[11u].y, _2423 * cbModelParam._m0[11u].x))), _1858);
            frontier_phi_13_35_ladder = _2570.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2570.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2570.x * cbModelParam._m0[1u].y;
        }
        _1938 = frontier_phi_13_35_ladder_2;
        _1940 = frontier_phi_13_35_ladder_1;
        _1942 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1926 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1051, _1052, _1053), _1858);
        _1938 = _1926.x * cbModelParam._m0[1u].y;
        _1940 = _1926.y * cbModelParam._m0[1u].y;
        _1942 = _1926.z * cbModelParam._m0[1u].y;
    }
    float _1946 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _880);
    float _1947 = isnan(_1946) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1946 : min(cbModelParam._m0[25u].w, _1946));
    float _2036;
    float _2038;
    float _2040;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2000 = fma(_1113, cbModelParam._m0[21u].z, fma(_1109, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1105)) + cbModelParam._m0[21u].w;
        float _2004 = fma(_1113, cbModelParam._m0[22u].z, fma(_1109, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1105)) + cbModelParam._m0[22u].w;
        float _2008 = fma(_1113, cbModelParam._m0[23u].z, fma(_1109, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1105)) + cbModelParam._m0[23u].w;
        float _2011 = fma(_1053, cbModelParam._m0[21u].z, fma(_1052, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1051));
        float _2014 = fma(_1053, cbModelParam._m0[22u].z, fma(_1052, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1051));
        float _2017 = fma(_1053, cbModelParam._m0[23u].z, fma(_1052, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1051));
        float _2126;
        if (_2011 > 0.0)
        {
            _2126 = abs((1.0 - _2000) / _2011);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2011 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2000 + 1.0) / _2011);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2126 = frontier_phi_25_21_ladder;
        }
        float _2443;
        if (_2014 > 0.0)
        {
            _2443 = abs((1.0 - _2004) / _2014);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2014 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2004 + 1.0) / _2014);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2443 = frontier_phi_37_32_ladder;
        }
        float _2781;
        if (_2017 > 0.0)
        {
            _2781 = abs((1.0 - _2008) / _2017);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2017 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2008 + 1.0) / _2017);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2781 = frontier_phi_47_44_ladder;
        }
        float _2783 = isnan(_2443) ? _2126 : (isnan(_2126) ? _2443 : min(_2126, _2443));
        float _2784 = isnan(_2781) ? _2783 : (isnan(_2783) ? _2781 : min(_2783, _2781));
        float _2788 = (_2784 * _2011) + _2000;
        float _2789 = (_2784 * _2014) + _2004;
        float _2790 = (_2784 * _2017) + _2008;
        float _2791 = _2784 * 9.9999997473787516355514526367188e-05;
        float _2792 = (-1.0) - _2791;
        float _2794 = _2791 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2790 > _2794) || ((_2790 < _2792) || ((_2789 > _2794) || ((_2789 < _2792) || ((_2788 < _2792) || (_2788 > _2794))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2912 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2790, cbModelParam._m0[17u].z, fma(_2789, cbModelParam._m0[17u].y, _2788 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2790, cbModelParam._m0[18u].z, fma(_2789, cbModelParam._m0[18u].y, _2788 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2790, cbModelParam._m0[19u].z, fma(_2789, cbModelParam._m0[19u].y, _2788 * cbModelParam._m0[19u].x))), _1947);
            frontier_phi_22_47_ladder = _2912.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2912.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2912.x * cbModelParam._m0[1u].z;
        }
        _2036 = frontier_phi_22_47_ladder_2;
        _2038 = frontier_phi_22_47_ladder_1;
        _2040 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2020 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1051, _1052, _1053), _1947);
        _2036 = _2020.x * cbModelParam._m0[1u].z;
        _2038 = _2020.y * cbModelParam._m0[1u].z;
        _2040 = _2020.z * cbModelParam._m0[1u].z;
    }
    float _2053 = (((_1076 * _1028) + _1077) * _1043) * ((cbModelParam._m0[1u].w * (_2036 - _1938)) + _1938);
    float _2055 = (((_1076 * _1030) + _1077) * _1043) * ((cbModelParam._m0[1u].w * (_2038 - _1940)) + _1940);
    float _2057 = (((_1076 * _1031) + _1077) * _1043) * ((cbModelParam._m0[1u].w * (_2040 - _1942)) + _1942);
    float _2060 = fma(_2057, cbSceneParam._m0[89u].z, fma(_2055, cbSceneParam._m0[89u].y, _2053 * cbSceneParam._m0[89u].x));
    float _2063 = fma(_2057, cbSceneParam._m0[90u].z, fma(_2055, cbSceneParam._m0[90u].y, _2053 * cbSceneParam._m0[90u].x));
    float _2066 = fma(_2057, cbSceneParam._m0[91u].z, fma(_2055, cbSceneParam._m0[91u].y, _2053 * cbSceneParam._m0[91u].x));
    float _2100 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2104 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2108 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2112 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2113 = _2100 / _2112;
    float _2114 = _2104 / _2112;
    float _2115 = _2108 / _2112;
    float _2262;
    float _2263;
    float _2264;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2142 = ((uint(_2115 > cbSceneParam._m0[59u].y) + uint(_2115 > cbSceneParam._m0[59u].x)) + uint(_2115 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2143 = _2142 + 43u;
        uint _2151 = _2142 + 44u;
        uint _2159 = _2142 + 45u;
        uint _2167 = _2142 + 46u;
        float _2178 = fma(_2112, cbSceneParam._m0[_2143].w, fma(_2108, cbSceneParam._m0[_2143].z, fma(_2104, cbSceneParam._m0[_2143].y, _2100 * cbSceneParam._m0[_2143].x)));
        float _2182 = fma(_2112, cbSceneParam._m0[_2151].w, fma(_2108, cbSceneParam._m0[_2151].z, fma(_2104, cbSceneParam._m0[_2151].y, _2100 * cbSceneParam._m0[_2151].x)));
        float _2190 = fma(_2112, cbSceneParam._m0[_2167].w, fma(_2108, cbSceneParam._m0[_2167].z, fma(_2104, cbSceneParam._m0[_2167].y, _2100 * cbSceneParam._m0[_2167].x)));
        float _2195 = cbSceneParam._m0[33u].z * _2190;
        float _2197 = cbSceneParam._m0[33u].w * _2190;
        float _2200 = fma(_2112, cbSceneParam._m0[_2159].w, fma(_2108, cbSceneParam._m0[_2159].z, fma(_2104, cbSceneParam._m0[_2159].y, _2100 * cbSceneParam._m0[_2159].x))) / _2190;
        float _2248 = (cbSceneParam._m0[33u].x - sqrt(((_2114 * _2114) + (_2113 * _2113)) + (_2115 * _2115))) * cbSceneParam._m0[33u].y;
        float _4585 = isnan(0.0) ? _2248 : (isnan(_2248) ? 0.0 : max(_2248, 0.0));
        float _2255 = (isnan(1.0) ? _4585 : (isnan(_4585) ? 1.0 : min(_4585, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2195 + _2178) / _2190, (_2197 + _2182) / _2190), _2200), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2197 + _2178) / _2190, (_2182 - _2195) / _2190), _2200), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2178 - _2195) / _2190, (_2182 - _2197) / _2190), _2200), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2178 - _2197) / _2190, (_2195 + _2182) / _2190), _2200), 0.0)).x), vec4(0.25)));
        _2262 = 1.0 - (_2255 * cbSceneParam._m0[34u].x);
        _2263 = 1.0 - (_2255 * cbSceneParam._m0[34u].y);
        _2264 = 1.0 - (_2255 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2262 = 1.0;
        _2263 = 1.0;
        _2264 = 1.0;
    }
    float _2328;
    float _2330;
    float _2332;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2316 = fma(_2112, cbSceneParam._m0[63u].w, fma(_2108, cbSceneParam._m0[63u].z, fma(_2104, cbSceneParam._m0[63u].y, _2100 * cbSceneParam._m0[63u].x)));
        float _2317 = fma(_2112, cbSceneParam._m0[60u].w, fma(_2108, cbSceneParam._m0[60u].z, fma(_2104, cbSceneParam._m0[60u].y, _2100 * cbSceneParam._m0[60u].x))) / _2316;
        float _2318 = fma(_2112, cbSceneParam._m0[61u].w, fma(_2108, cbSceneParam._m0[61u].z, fma(_2104, cbSceneParam._m0[61u].y, _2100 * cbSceneParam._m0[61u].x))) / _2316;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2317 >= cbSceneParam._m0[64u].x) && (_2318 >= cbSceneParam._m0[64u].y)) && (_2317 <= cbSceneParam._m0[64u].z)) && (_2318 <= cbSceneParam._m0[64u].w))
        {
            float _2456 = fma(_2112, cbSceneParam._m0[62u].w, fma(_2108, cbSceneParam._m0[62u].z, fma(_2104, cbSceneParam._m0[62u].y, _2100 * cbSceneParam._m0[62u].x))) / _2316;
            float _2460 = isnan(cbSceneParam._m0[41u].w) ? _2456 : (isnan(_2456) ? cbSceneParam._m0[41u].w : max(_2456, cbSceneParam._m0[41u].w));
            float _2503 = (cbSceneParam._m0[33u].x - sqrt(((_2114 * _2114) + (_2113 * _2113)) + (_2115 * _2115))) * cbSceneParam._m0[33u].y;
            float _4601 = isnan(0.0) ? _2503 : (isnan(_2503) ? 0.0 : max(_2503, 0.0));
            float _2510 = (isnan(1.0) ? _4601 : (isnan(_4601) ? 1.0 : min(_4601, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2317, cbSceneParam._m0[33u].w + _2318), _2460), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2317, _2318 - cbSceneParam._m0[33u].z), _2460), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2317 - cbSceneParam._m0[33u].z, _2318 - cbSceneParam._m0[33u].w), _2460), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2317 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2318), _2460), 0.0)).x), vec4(0.25)));
            float _2514 = 1.0 - (_2510 * cbSceneParam._m0[34u].x);
            float _2515 = 1.0 - (_2510 * cbSceneParam._m0[34u].y);
            float _2516 = 1.0 - (_2510 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2516) ? _2264 : (isnan(_2264) ? _2516 : min(_2264, _2516));
            frontier_phi_34_33_ladder_1 = isnan(_2515) ? _2263 : (isnan(_2263) ? _2515 : min(_2263, _2515));
            frontier_phi_34_33_ladder_2 = isnan(_2514) ? _2262 : (isnan(_2262) ? _2514 : min(_2262, _2514));
        }
        else
        {
            frontier_phi_34_33_ladder = _2264;
            frontier_phi_34_33_ladder_1 = _2263;
            frontier_phi_34_33_ladder_2 = _2262;
        }
        _2328 = frontier_phi_34_33_ladder_2;
        _2330 = frontier_phi_34_33_ladder_1;
        _2332 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2328 = _2262;
        _2330 = _2263;
        _2332 = _2264;
    }
    uvec4 _2337 = floatBitsToUint(cbInstanceData._m0[_1003 + 5u]);
    uint _2339 = _2337.x * 14u;
    uint _2340 = _2339 + 13u;
    float _2347 = _1043 + (-1.0);
    float _2352 = (cbLight._m0[_2340].x * _2347) + 1.0;
    float _2353 = (cbLight._m0[_2340].y * _2347) + 1.0;
    float _2354 = (cbLight._m0[_2340].z * _2347) + 1.0;
    float _2355 = (cbLight._m0[_2340].w * _2347) + 1.0;
    uint _2356 = _2339 + 5u;
    float _2362 = isnan(1.0) ? _2353 : (isnan(_2353) ? 1.0 : min(_2353, 1.0));
    uint _2366 = _2339 + 4u;
    float _2375 = isnan(1.0) ? _2352 : (isnan(_2352) ? 1.0 : min(_2352, 1.0));
    uint _2379 = _2339 | 1u;
    float _2390 = dot(vec3(cbLight._m0[_2339].xyz), vec3(_876, _877, _878));
    float _2393 = dot(vec3(cbLight._m0[_2379].xyz), vec3(_876, _877, _878));
    float _4637 = isnan(0.0) ? _2390 : (isnan(_2390) ? 0.0 : max(_2390, 0.0));
    float _4648 = isnan(0.0) ? _2393 : (isnan(_2393) ? 0.0 : max(_2393, 0.0));
    float _2398 = (isnan(1.0) ? _4637 : (isnan(_4637) ? 1.0 : min(_4637, 1.0))) * 0.3183098733425140380859375;
    float _2400 = (isnan(1.0) ? _4648 : (isnan(_4648) ? 1.0 : min(_4648, 1.0))) * 0.3183098733425140380859375;
    float _2407 = ((cbLight._m0[_2356].x * _2362) * _2400) + (((cbLight._m0[_2366].x * _2328) * _2375) * _2398);
    float _2408 = ((_2362 * cbLight._m0[_2356].y) * _2400) + (((cbLight._m0[_2366].y * _2330) * _2375) * _2398);
    float _2409 = ((_2362 * cbLight._m0[_2356].z) * _2400) + (((cbLight._m0[_2366].z * _2332) * _2375) * _2398);
    uvec4 _2413 = floatBitsToUint(cbLight._m0[_2339 + 12u]);
    bool _2415 = _2413.x == 0u;
    float _2517;
    float _2519;
    float _2521;
    if (_2415)
    {
        _2517 = _2407;
        _2519 = _2408;
        _2521 = _2409;
    }
    else
    {
        uint _2525 = _2339 + 6u;
        float _2541 = (dot(vec3(cbLight._m0[_2339 + 2u].xyz), vec3(_876, _877, _878)) * 0.5) + 0.5;
        float _2542 = _2541 * _2541;
        float _4659 = isnan(0.0) ? _2542 : (isnan(_2542) ? 0.0 : max(_2542, 0.0));
        float _2543 = isnan(1.0) ? _4659 : (isnan(_4659) ? 1.0 : min(_4659, 1.0));
        float _2544 = isnan(1.0) ? _2354 : (isnan(_2354) ? 1.0 : min(_2354, 1.0));
        _2517 = (((cbLight._m0[_2525].x * 0.3183098733425140380859375) * _2543) * _2544) + _2407;
        _2519 = (((cbLight._m0[_2525].y * 0.3183098733425140380859375) * _2543) * _2544) + _2408;
        _2521 = (((cbLight._m0[_2525].z * 0.3183098733425140380859375) * _2543) * _2544) + _2409;
    }
    bool _2524 = _2413.y == 0u;
    float _2579;
    float _2581;
    float _2583;
    if (_2524)
    {
        _2579 = _2517;
        _2581 = _2519;
        _2583 = _2521;
    }
    else
    {
        uint _2752 = _2339 + 7u;
        float _2768 = (dot(vec3(cbLight._m0[_2339 + 3u].xyz), vec3(_876, _877, _878)) * 0.5) + 0.5;
        float _2769 = _2768 * _2768;
        float _4675 = isnan(0.0) ? _2769 : (isnan(_2769) ? 0.0 : max(_2769, 0.0));
        float _2770 = isnan(1.0) ? _4675 : (isnan(_4675) ? 1.0 : min(_4675, 1.0));
        float _2771 = isnan(1.0) ? _2355 : (isnan(_2355) ? 1.0 : min(_2355, 1.0));
        _2579 = (((cbLight._m0[_2752].x * 0.3183098733425140380859375) * _2770) * _2771) + _2517;
        _2581 = (((cbLight._m0[_2752].y * 0.3183098733425140380859375) * _2770) * _2771) + _2519;
        _2583 = (((cbLight._m0[_2752].z * 0.3183098733425140380859375) * _2770) * _2771) + _2521;
    }
    uint _2586 = _2339 + 8u;
    float _2599 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2339].w)) * _880) * 0.949999988079071044921875);
    float _2600 = _2599 * _2599;
    float _2601 = cbLight._m0[_2339].x + _957;
    float _2602 = cbLight._m0[_2339].y + _958;
    float _2603 = cbLight._m0[_2339].z + _959;
    float _2607 = inversesqrt(dot(vec3(_2601, _2602, _2603), vec3(_2601, _2602, _2603)));
    float _2608 = _2607 * _2601;
    float _2609 = _2607 * _2602;
    float _2610 = _2607 * _2603;
    float _2611 = dot(vec3(_876, _877, _878), vec3(cbLight._m0[_2339].xyz));
    float _4691 = isnan(0.0) ? _2611 : (isnan(_2611) ? 0.0 : max(_2611, 0.0));
    float _2614 = isnan(1.0) ? _4691 : (isnan(_4691) ? 1.0 : min(_4691, 1.0));
    float _4702 = isnan(0.0) ? _1044 : (isnan(_1044) ? 0.0 : max(_1044, 0.0));
    float _2615 = isnan(1.0) ? _4702 : (isnan(_4702) ? 1.0 : min(_4702, 1.0));
    float _2616 = dot(vec3(_876, _877, _878), vec3(_2608, _2609, _2610));
    float _4713 = isnan(0.0) ? _2616 : (isnan(_2616) ? 0.0 : max(_2616, 0.0));
    float _2619 = isnan(1.0) ? _4713 : (isnan(_4713) ? 1.0 : min(_4713, 1.0));
    float _2620 = dot(vec3(cbLight._m0[_2339].xyz), vec3(_2608, _2609, _2610));
    float _4724 = isnan(0.0) ? _2620 : (isnan(_2620) ? 0.0 : max(_2620, 0.0));
    float _2624 = _2600 * _2600;
    float _2628 = ((_2619 * _2619) * (_2624 + (-1.0))) + 1.0;
    float _2636 = exp2(log2(1.0 - (isnan(1.0) ? _4724 : (isnan(_4724) ? 1.0 : min(_4724, 1.0)))) * 5.0);
    float _2637 = 0.959999978542327880859375 - _1025;
    float _2639 = 0.959999978542327880859375 - _1026;
    float _2640 = 0.959999978542327880859375 - _1027;
    float _2647 = 1.0 - _2600;
    float _2658 = (0.5 / (((_2615 * ((_2614 * _2647) + _2600)) + 9.9999999392252902907785028219223e-09) + (((_2615 * _2647) + _2600) * _2614))) * _2614;
    float _4735 = isnan(0.0) ? _2658 : (isnan(_2658) ? 0.0 : max(_2658, 0.0));
    float _2660 = (isnan(1.0) ? _4735 : (isnan(_4735) ? 1.0 : min(_4735, 1.0))) * (_2624 / ((_2628 * _2628) * 3.141590118408203125));
    uint _2674 = _2339 + 9u;
    float _2685 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2379].w)) * _880) * 0.949999988079071044921875);
    float _2686 = _2685 * _2685;
    float _2687 = cbLight._m0[_2379].x + _957;
    float _2688 = cbLight._m0[_2379].y + _958;
    float _2689 = cbLight._m0[_2379].z + _959;
    float _2693 = inversesqrt(dot(vec3(_2687, _2688, _2689), vec3(_2687, _2688, _2689)));
    float _2694 = _2693 * _2687;
    float _2695 = _2693 * _2688;
    float _2696 = _2693 * _2689;
    float _2697 = dot(vec3(_876, _877, _878), vec3(cbLight._m0[_2379].xyz));
    float _4746 = isnan(0.0) ? _2697 : (isnan(_2697) ? 0.0 : max(_2697, 0.0));
    float _2700 = isnan(1.0) ? _4746 : (isnan(_4746) ? 1.0 : min(_4746, 1.0));
    float _2701 = dot(vec3(_876, _877, _878), vec3(_2694, _2695, _2696));
    float _4757 = isnan(0.0) ? _2701 : (isnan(_2701) ? 0.0 : max(_2701, 0.0));
    float _2704 = isnan(1.0) ? _4757 : (isnan(_4757) ? 1.0 : min(_4757, 1.0));
    float _2705 = dot(vec3(cbLight._m0[_2379].xyz), vec3(_2694, _2695, _2696));
    float _4768 = isnan(0.0) ? _2705 : (isnan(_2705) ? 0.0 : max(_2705, 0.0));
    float _2709 = _2686 * _2686;
    float _2713 = ((_2704 * _2704) * (_2709 + (-1.0))) + 1.0;
    float _2720 = exp2(log2(1.0 - (isnan(1.0) ? _4768 : (isnan(_4768) ? 1.0 : min(_4768, 1.0)))) * 5.0);
    float _2727 = 1.0 - _2686;
    float _2737 = (0.5 / (((_2615 * ((_2700 * _2727) + _2686)) + 9.9999999392252902907785028219223e-09) + (((_2615 * _2727) + _2686) * _2700))) * _2700;
    float _4779 = isnan(0.0) ? _2737 : (isnan(_2737) ? 0.0 : max(_2737, 0.0));
    float _2739 = (isnan(1.0) ? _4779 : (isnan(_4779) ? 1.0 : min(_4779, 1.0))) * (_2709 / ((_2713 * _2713) * 3.141590118408203125));
    float _2749 = (((((_2720 * _2637) + _1028) * cbLight._m0[_2674].x) * _2739) * _2362) + ((((cbLight._m0[_2586].x * _2328) * ((_2636 * _2637) + _1028)) * _2660) * _2375);
    float _2750 = (((((_2720 * _2639) + _1030) * cbLight._m0[_2674].y) * _2739) * _2362) + ((((cbLight._m0[_2586].y * _2330) * ((_2636 * _2639) + _1030)) * _2660) * _2375);
    float _2751 = (((((_2720 * _2640) + _1031) * cbLight._m0[_2674].z) * _2739) * _2362) + ((((cbLight._m0[_2586].z * _2332) * ((_2636 * _2640) + _1031)) * _2660) * _2375);
    float _2807;
    float _2809;
    float _2811;
    if (_2415)
    {
        _2807 = _2749;
        _2809 = _2750;
        _2811 = _2751;
    }
    else
    {
        uint _2813 = _2339 + 2u;
        uint _2817 = _2339 + 10u;
        float _2831 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2813].w)) * _880) * 0.949999988079071044921875);
        float _2832 = _2831 * _2831;
        float _2833 = cbLight._m0[_2813].x + _957;
        float _2834 = cbLight._m0[_2813].y + _958;
        float _2835 = cbLight._m0[_2813].z + _959;
        float _2839 = inversesqrt(dot(vec3(_2833, _2834, _2835), vec3(_2833, _2834, _2835)));
        float _2840 = _2839 * _2833;
        float _2841 = _2839 * _2834;
        float _2842 = _2839 * _2835;
        float _2843 = dot(vec3(_876, _877, _878), vec3(cbLight._m0[_2813].xyz));
        float _4790 = isnan(0.0) ? _2843 : (isnan(_2843) ? 0.0 : max(_2843, 0.0));
        float _2846 = isnan(1.0) ? _4790 : (isnan(_4790) ? 1.0 : min(_4790, 1.0));
        float _2847 = dot(vec3(_876, _877, _878), vec3(_2840, _2841, _2842));
        float _4801 = isnan(0.0) ? _2847 : (isnan(_2847) ? 0.0 : max(_2847, 0.0));
        float _2850 = isnan(1.0) ? _4801 : (isnan(_4801) ? 1.0 : min(_4801, 1.0));
        float _2851 = dot(vec3(cbLight._m0[_2813].xyz), vec3(_2840, _2841, _2842));
        float _4812 = isnan(0.0) ? _2851 : (isnan(_2851) ? 0.0 : max(_2851, 0.0));
        float _2855 = _2832 * _2832;
        float _2859 = ((_2850 * _2850) * (_2855 + (-1.0))) + 1.0;
        float _2866 = exp2(log2(1.0 - (isnan(1.0) ? _4812 : (isnan(_4812) ? 1.0 : min(_4812, 1.0)))) * 5.0);
        float _2873 = 1.0 - _2832;
        float _2883 = (0.5 / (((_2615 * ((_2846 * _2873) + _2832)) + 9.9999999392252902907785028219223e-09) + (((_2615 * _2873) + _2832) * _2846))) * _2846;
        float _4823 = isnan(0.0) ? _2883 : (isnan(_2883) ? 0.0 : max(_2883, 0.0));
        float _2885 = (isnan(1.0) ? _4823 : (isnan(_4823) ? 1.0 : min(_4823, 1.0))) * (_2855 / ((_2859 * _2859) * 3.141590118408203125));
        float _2886 = isnan(1.0) ? _2354 : (isnan(_2354) ? 1.0 : min(_2354, 1.0));
        _2807 = (((((_2866 * _2637) + _1028) * cbLight._m0[_2817].x) * _2885) * _2886) + _2749;
        _2809 = (((((_2866 * _2639) + _1030) * cbLight._m0[_2817].y) * _2885) * _2886) + _2750;
        _2811 = (((((_2866 * _2640) + _1031) * cbLight._m0[_2817].z) * _2885) * _2886) + _2751;
    }
    float _2917;
    float _2919;
    float _2921;
    if (_2524)
    {
        _2917 = _2807;
        _2919 = _2809;
        _2921 = _2811;
    }
    else
    {
        uint _2928 = _2339 + 3u;
        uint _2932 = _2339 + 11u;
        float _2946 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2928].w)) * _880) * 0.949999988079071044921875);
        float _2947 = _2946 * _2946;
        float _2948 = cbLight._m0[_2928].x + _957;
        float _2949 = cbLight._m0[_2928].y + _958;
        float _2950 = cbLight._m0[_2928].z + _959;
        float _2954 = inversesqrt(dot(vec3(_2948, _2949, _2950), vec3(_2948, _2949, _2950)));
        float _2955 = _2954 * _2948;
        float _2956 = _2954 * _2949;
        float _2957 = _2954 * _2950;
        float _2958 = dot(vec3(_876, _877, _878), vec3(cbLight._m0[_2928].xyz));
        float _4839 = isnan(0.0) ? _2958 : (isnan(_2958) ? 0.0 : max(_2958, 0.0));
        float _2961 = isnan(1.0) ? _4839 : (isnan(_4839) ? 1.0 : min(_4839, 1.0));
        float _2962 = dot(vec3(_876, _877, _878), vec3(_2955, _2956, _2957));
        float _4850 = isnan(0.0) ? _2962 : (isnan(_2962) ? 0.0 : max(_2962, 0.0));
        float _2965 = isnan(1.0) ? _4850 : (isnan(_4850) ? 1.0 : min(_4850, 1.0));
        float _2966 = dot(vec3(cbLight._m0[_2928].xyz), vec3(_2955, _2956, _2957));
        float _4861 = isnan(0.0) ? _2966 : (isnan(_2966) ? 0.0 : max(_2966, 0.0));
        float _2970 = _2947 * _2947;
        float _2974 = ((_2965 * _2965) * (_2970 + (-1.0))) + 1.0;
        float _2981 = exp2(log2(1.0 - (isnan(1.0) ? _4861 : (isnan(_4861) ? 1.0 : min(_4861, 1.0)))) * 5.0);
        float _2988 = 1.0 - _2947;
        float _2998 = (0.5 / (((_2615 * ((_2961 * _2988) + _2947)) + 9.9999999392252902907785028219223e-09) + (((_2615 * _2988) + _2947) * _2961))) * _2961;
        float _4872 = isnan(0.0) ? _2998 : (isnan(_2998) ? 0.0 : max(_2998, 0.0));
        float _3000 = (isnan(1.0) ? _4872 : (isnan(_4872) ? 1.0 : min(_4872, 1.0))) * (_2970 / ((_2974 * _2974) * 3.141590118408203125));
        float _3001 = isnan(1.0) ? _2355 : (isnan(_2355) ? 1.0 : min(_2355, 1.0));
        _2917 = (((((_2981 * _2637) + _1028) * cbLight._m0[_2932].x) * _3000) * _3001) + _2807;
        _2919 = (((((_2981 * _2639) + _1030) * cbLight._m0[_2932].y) * _3000) * _3001) + _2809;
        _2921 = (((((_2981 * _2640) + _1031) * cbLight._m0[_2932].z) * _3000) * _3001) + _2811;
    }
    float _3067;
    float _3069;
    float _3071;
    float _3073;
    float _3075;
    float _3077;
    if (_2337.y == 0u)
    {
        uvec4 _3022 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3023 = _3022.x;
        uint _3034 = uint((float(_3022.y) * floor(float(uint(cbSceneParam._m0[85u].y * _966) / _3023))) + floor(float(uint(cbSceneParam._m0[85u].x * _965) / _3023)));
        float _3044 = (log2(_2115 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3045 = isnan(0.0) ? _3044 : (isnan(_3044) ? 0.0 : max(_3044, 0.0));
        uint _3048 = uint(isnan(14.0) ? _3045 : (isnan(_3045) ? 14.0 : min(_3045, 14.0)));
        uvec4 _3053 = texelFetch(g_lightClusterGridBuffer, int(((_3048 << 2u) + (_3034 << 6u)) >> 2u));
        uint _3054 = _3053.x;
        uint _3055 = _3022.z;
        float _3136;
        float _3138;
        float _3140;
        float _3142;
        float _3144;
        float _3146;
        if (((((1u << ((_3055 >> 4u) & 15u)) + 4294967295u) & _3054) == 0u) || ((_3055 & 240u) == 0u))
        {
            _3136 = 0.0;
            _3138 = 0.0;
            _3140 = 0.0;
            _3142 = 0.0;
            _3144 = 0.0;
            _3146 = 0.0;
        }
        else
        {
            float _3137;
            float _3139;
            float _3141;
            float _3143;
            float _3145;
            float _3147;
            float _3281 = 0.0;
            float _3282 = 0.0;
            float _3283 = 0.0;
            float _3284 = 0.0;
            float _3285 = 0.0;
            float _3286 = 0.0;
            uint _3287 = 0u;
            uint _3296;
            bool _3297;
            for (;;)
            {
                _3296 = texelFetch(g_lightClassification, int((((_3048 << 5u) + (_3034 << 9u)) + (_3287 << 2u)) >> 2u)).x;
                _3297 = _3296 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3297)
                {
                    frontier_phi_66_pred = _3286;
                    frontier_phi_66_pred_1 = _3285;
                    frontier_phi_66_pred_2 = _3284;
                    frontier_phi_66_pred_3 = _3283;
                    frontier_phi_66_pred_4 = _3282;
                    frontier_phi_66_pred_5 = _3281;
                }
                else
                {
                    float _3405;
                    float _3406;
                    float _3407;
                    float _3408;
                    float _3409;
                    float _3410;
                    uint _3411;
                    _3405 = _3281;
                    _3406 = _3282;
                    _3407 = _3283;
                    _3408 = _3284;
                    _3409 = _3285;
                    _3410 = _3286;
                    _3411 = _3296;
                    float _3337;
                    float _3338;
                    float _3339;
                    float _3340;
                    float _3341;
                    float _3342;
                    for (;;)
                    {
                        uint _3415 = uint(findLSB(_3411)) + (_3287 << 5u);
                        uint _3412 = (_3411 + 4294967295u) & _3411;
                        uint _3417 = _3415 * 48u;
                        vec4 _3431 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3417)).x, texelFetch(g_PointLightRenderingBuffer, int(_3417 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3417 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3417 + 3u)).x));
                        uint _3437 = (_3415 * 48u) + 4u;
                        vec4 _3450 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3437)).x, texelFetch(g_PointLightRenderingBuffer, int(_3437 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3437 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3437 + 3u)).x));
                        uint _3456 = (_3415 * 48u) + 8u;
                        vec3 _3467 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3456)).x, texelFetch(g_PointLightRenderingBuffer, int(_3456 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3456 + 2u)).x));
                        float _3471 = _3431.x - _2113;
                        float _3472 = _3431.y - _2114;
                        float _3473 = _3431.z - _2115;
                        float _3474 = dot(vec3(_3471, _3472, _3473), vec3(_3471, _3472, _3473));
                        float _3477 = inversesqrt(_3474);
                        float _3478 = _3477 * _3471;
                        float _3479 = _3477 * _3472;
                        float _3480 = _3477 * _3473;
                        float _3481 = dot(vec3(_984, _987, _990), vec3(_3478, _3479, _3480));
                        float _3486 = 1.0 - (_3474 * _3431.w);
                        float _4898 = isnan(0.0) ? _3486 : (isnan(_3486) ? 0.0 : max(_3486, 0.0));
                        float _3487 = isnan(1.0) ? _4898 : (isnan(_4898) ? 1.0 : min(_4898, 1.0));
                        float _3488 = sqrt(_3474) * _3450.w;
                        float _3491 = 1.39999997615814208984375 / (_3488 + 1.39999997615814208984375);
                        float _3492 = _3491 * _3491;
                        float _3495 = ((1.0 - _3492) * _3481) + _3492;
                        float _3498 = _3488 * _3488;
                        float _3502 = ((isnan(0.0) ? _3495 : (isnan(_3495) ? 0.0 : max(_3495, 0.0))) * _3487) / ((_3498 * 0.699999988079071044921875) + 1.0);
                        float _3506 = (-0.0) - _2113;
                        float _3507 = (-0.0) - _2114;
                        float _3508 = (-0.0) - _2115;
                        float _3512 = inversesqrt(dot(vec3(_3506, _3507, _3508), vec3(_3506, _3507, _3508)));
                        float _3513 = _3512 * _3506;
                        float _3514 = _3512 * _3507;
                        float _3515 = _3512 * _3508;
                        float _3522 = exp2(log2(1.0 / ((_3498 * 3.5) + 5.0)) * 0.25);
                        float _3523 = 1.0 - _1059;
                        float _3530 = sqrt(1.0 - ((1.0 - (_3523 * _3523)) * (1.0 - (_3522 * _3522))));
                        float _3531 = _3530 * _3530;
                        float _3532 = _3531 * _3531;
                        float _3533 = _3513 + _3478;
                        float _3534 = _3514 + _3479;
                        float _3535 = _3515 + _3480;
                        float _3539 = inversesqrt(dot(vec3(_3533, _3534, _3535), vec3(_3533, _3534, _3535)));
                        float _3543 = dot(vec3(_984, _987, _990), vec3(_3513, _3514, _3515));
                        float _4914 = isnan(0.0) ? _3543 : (isnan(_3543) ? 0.0 : max(_3543, 0.0));
                        float _3546 = isnan(1.0) ? _4914 : (isnan(_4914) ? 1.0 : min(_4914, 1.0));
                        float _3547 = dot(vec3(_984, _987, _990), vec3(_3539 * _3533, _3539 * _3534, _3539 * _3535));
                        float _4925 = isnan(0.0) ? _3547 : (isnan(_3547) ? 0.0 : max(_3547, 0.0));
                        float _3550 = isnan(1.0) ? _4925 : (isnan(_4925) ? 1.0 : min(_4925, 1.0));
                        float _3554 = ((_3550 * _3550) * (_3532 + (-1.0))) + 1.0;
                        float _3555 = _3491 * _3531;
                        float _3556 = _3555 * _3555;
                        float _3559 = ((1.0 - _3556) * _3481) + _3556;
                        float _4936 = isnan(0.0) ? _3559 : (isnan(_3559) ? 0.0 : max(_3559, 0.0));
                        float _3560 = isnan(1.0) ? _4936 : (isnan(_4936) ? 1.0 : min(_4936, 1.0));
                        float _3561 = 1.0 - _3531;
                        float _3571 = (0.5 / (((_3560 * ((_3546 * _3561) + _3531)) + 9.9999999392252902907785028219223e-09) + (((_3560 * _3561) + _3531) * _3546))) * _3560;
                        float _4947 = isnan(0.0) ? _3571 : (isnan(_3571) ? 0.0 : max(_3571, 0.0));
                        float _3582 = (((_3532 * 3.1415927410125732421875) * (isnan(1.0) ? _4947 : (isnan(_4947) ? 1.0 : min(_4947, 1.0)))) / ((_3554 * _3554) * ((_3498 * 2.1991131305694580078125) + 3.141590118408203125))) * _3487;
                        _3340 = (_3502 * _3450.x) + _3408;
                        _3341 = (_3502 * _3450.y) + _3409;
                        _3342 = (_3502 * _3450.z) + _3410;
                        _3337 = (_3582 * _3467.x) + _3405;
                        _3338 = (_3582 * _3467.y) + _3406;
                        _3339 = (_3582 * _3467.z) + _3407;
                        if (_3412 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3405 = _3337;
                            _3406 = _3338;
                            _3407 = _3339;
                            _3408 = _3340;
                            _3409 = _3341;
                            _3410 = _3342;
                            _3411 = _3412;
                        }
                    }
                    frontier_phi_66_pred = _3342;
                    frontier_phi_66_pred_1 = _3341;
                    frontier_phi_66_pred_2 = _3340;
                    frontier_phi_66_pred_3 = _3339;
                    frontier_phi_66_pred_4 = _3338;
                    frontier_phi_66_pred_5 = _3337;
                }
                _3147 = frontier_phi_66_pred;
                _3145 = frontier_phi_66_pred_1;
                _3143 = frontier_phi_66_pred_2;
                _3141 = frontier_phi_66_pred_3;
                _3139 = frontier_phi_66_pred_4;
                _3137 = frontier_phi_66_pred_5;
                uint _3288 = _3287 + 1u;
                if (_3288 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3281 = _3137;
                    _3282 = _3139;
                    _3283 = _3141;
                    _3284 = _3143;
                    _3285 = _3145;
                    _3286 = _3147;
                    _3287 = _3288;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3136 = _3137;
            _3138 = _3139;
            _3140 = _3141;
            _3142 = _3143;
            _3144 = _3145;
            _3146 = _3147;
        }
        uvec4 _3150 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3151 = _3150.z;
        uint _3153 = (_3151 >> 8u) & 15u;
        float _3249;
        float _3251;
        float _3253;
        float _3255;
        float _3257;
        float _3259;
        if (((4294967295u << _3153) & _3054) == 0u)
        {
            _3249 = _3136;
            _3251 = _3138;
            _3253 = _3140;
            _3255 = _3142;
            _3257 = _3144;
            _3259 = _3146;
        }
        else
        {
            float _3274 = inversesqrt(dot(vec3(_2113, _2114, _2115), vec3(_2113, _2114, _2115)));
            float _3275 = _3274 * _2113;
            float _3276 = _3274 * _2114;
            float _3277 = _3274 * _2115;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3153 < ((_3151 >> 12u) & 15u))
            {
                float _3250;
                float _3252;
                float _3254;
                float _3256;
                float _3258;
                float _3260;
                float _3388 = _3136;
                float _3389 = _3138;
                float _3390 = _3140;
                float _3391 = _3142;
                float _3392 = _3144;
                float _3393 = _3146;
                uint _3394 = _3153;
                uint _3403;
                bool _3404;
                for (;;)
                {
                    _3403 = texelFetch(g_lightClassification, int((((_3048 << 5u) + (_3034 << 9u)) + (_3394 << 2u)) >> 2u)).x;
                    _3404 = _3403 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3404)
                    {
                        frontier_phi_72_pred = _3393;
                        frontier_phi_72_pred_1 = _3392;
                        frontier_phi_72_pred_2 = _3391;
                        frontier_phi_72_pred_3 = _3390;
                        frontier_phi_72_pred_4 = _3389;
                        frontier_phi_72_pred_5 = _3388;
                    }
                    else
                    {
                        float _3587;
                        float _3588;
                        float _3589;
                        float _3590;
                        float _3591;
                        float _3592;
                        float _3880;
                        float _3881;
                        float _3882;
                        float _3883;
                        float _3884;
                        float _3885;
                        float _3600 = _3388;
                        float _3601 = _3389;
                        float _3602 = _3390;
                        float _3603 = _3391;
                        float _3604 = _3392;
                        float _3605 = _3393;
                        uint _3606 = _3403;
                        uint _3607;
                        vec4 _3632;
                        float _3633;
                        vec4 _3648;
                        vec3 _3660;
                        vec4 _3675;
                        vec4 _3690;
                        float _3736;
                        bool _3737;
                        for (;;)
                        {
                            uint _3617 = ((_3394 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3606));
                            _3607 = (_3606 + 4294967295u) & _3606;
                            uint _3619 = _3617 * 40u;
                            _3632 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3619)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3619 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3619 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3619 + 3u)).x));
                            _3633 = _3632.w;
                            uint _3635 = (_3617 * 40u) + 4u;
                            _3648 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3635)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3635 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3635 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3635 + 3u)).x));
                            uint _3650 = (_3617 * 40u) + 8u;
                            _3660 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3650)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3650 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3650 + 2u)).x));
                            uint _3662 = (_3617 * 40u) + 16u;
                            _3675 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3662)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3662 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3662 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3662 + 3u)).x));
                            uint _3677 = (_3617 * 40u) + 20u;
                            _3690 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3677)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3677 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3677 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3677 + 3u)).x));
                            uint _3692 = (_3617 * 40u) + 24u;
                            vec4 _3705 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3692)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3692 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3692 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3692 + 3u)).x));
                            uint _3711 = (_3617 * 40u) + 28u;
                            vec4 _3724 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3711)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3711 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3711 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3711 + 3u)).x));
                            _3736 = fma(_2115, _3724.z, fma(_2114, _3724.y, _3724.x * _2113)) + _3724.w;
                            _3737 = !((fma(_2115, _3705.z, fma(_2114, _3705.y, _3705.x * _2113)) + _3705.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3737)
                            {
                                float _3764 = _3632.x - _2113;
                                float _3765 = _3632.y - _2114;
                                float _3766 = _3632.z - _2115;
                                float _3767 = dot(vec3(_3764, _3765, _3766), vec3(_3764, _3765, _3766));
                                float _3770 = inversesqrt(_3767);
                                float _3771 = _3770 * _3764;
                                float _3772 = _3770 * _3765;
                                float _3773 = _3770 * _3766;
                                float _3777 = 1.0 - (_3767 / (_3633 * _3633));
                                float _4958 = isnan(0.0) ? _3777 : (isnan(_3777) ? 0.0 : max(_3777, 0.0));
                                float _3778 = isnan(1.0) ? _4958 : (isnan(_4958) ? 1.0 : min(_4958, 1.0));
                                float _3782 = sqrt(_3767) * _3648.w;
                                float _3784 = 1.39999997615814208984375 / (_3782 + 1.39999997615814208984375);
                                float _3785 = _3784 * _3784;
                                float _3788 = ((1.0 - _3785) * dot(vec3(_3771, _3772, _3773), vec3(_984, _987, _990))) + _3785;
                                float _3791 = _3782 * _3782;
                                float _3795 = (fma(_2115, _3675.z, fma(_2114, _3675.y, _3675.x * _2113)) + _3675.w) / _3736;
                                float _3796 = (fma(_2115, _3690.z, fma(_2114, _3690.y, _3690.x * _2113)) + _3690.w) / _3736;
                                float _3800 = 1.0 - dot(vec2(_3795, _3796), vec2(_3795, _3796));
                                float _4974 = isnan(0.0) ? _3800 : (isnan(_3800) ? 0.0 : max(_3800, 0.0));
                                float _3801 = isnan(1.0) ? _4974 : (isnan(_4974) ? 1.0 : min(_4974, 1.0));
                                float _3802 = _3801 * (((isnan(0.0) ? _3788 : (isnan(_3788) ? 0.0 : max(_3788, 0.0))) * _3778) / ((_3791 * 0.699999988079071044921875) + 1.0));
                                float _3814 = exp2(log2(1.0 / ((_3791 * 3.5) + 5.0)) * 0.25);
                                float _3815 = 1.0 - _1059;
                                float _3822 = sqrt(1.0 - ((1.0 - (_3815 * _3815)) * (1.0 - (_3814 * _3814))));
                                float _3823 = _3822 * _3822;
                                float _3824 = _3823 * _3823;
                                float _3825 = _3771 - _3275;
                                float _3826 = _3772 - _3276;
                                float _3827 = _3773 - _3277;
                                float _3831 = inversesqrt(dot(vec3(_3825, _3826, _3827), vec3(_3825, _3826, _3827)));
                                float _3835 = dot(vec3(_984, _987, _990), vec3((-0.0) - _3275, (-0.0) - _3276, (-0.0) - _3277));
                                float _4985 = isnan(0.0) ? _3835 : (isnan(_3835) ? 0.0 : max(_3835, 0.0));
                                float _3838 = isnan(1.0) ? _4985 : (isnan(_4985) ? 1.0 : min(_4985, 1.0));
                                float _3839 = dot(vec3(_984, _987, _990), vec3(_3831 * _3825, _3831 * _3826, _3831 * _3827));
                                float _4996 = isnan(0.0) ? _3839 : (isnan(_3839) ? 0.0 : max(_3839, 0.0));
                                float _3842 = isnan(1.0) ? _4996 : (isnan(_4996) ? 1.0 : min(_4996, 1.0));
                                float _3846 = ((_3842 * _3842) * (_3824 + (-1.0))) + 1.0;
                                float _3847 = _3784 * _3823;
                                float _3848 = _3847 * _3847;
                                float _3854 = ((1.0 - _3848) * dot(vec3(_984, _987, _990), vec3(_3771, _3772, _3773))) + _3848;
                                float _5007 = isnan(0.0) ? _3854 : (isnan(_3854) ? 0.0 : max(_3854, 0.0));
                                float _3855 = isnan(1.0) ? _5007 : (isnan(_5007) ? 1.0 : min(_5007, 1.0));
                                float _3856 = 1.0 - _3823;
                                float _3866 = (0.5 / (((_3855 * ((_3838 * _3856) + _3823)) + 9.9999999392252902907785028219223e-09) + (((_3855 * _3856) + _3823) * _3838))) * _3855;
                                float _5018 = isnan(0.0) ? _3866 : (isnan(_3866) ? 0.0 : max(_3866, 0.0));
                                float _3876 = (_3801 * _3778) * (((_3824 * 3.1415927410125732421875) * (isnan(1.0) ? _5018 : (isnan(_5018) ? 1.0 : min(_5018, 1.0)))) / ((_3846 * _3846) * ((_3791 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3802 * _3648.y;
                                frontier_phi_78_pred_1 = _3802 * _3648.x;
                                frontier_phi_78_pred_2 = _3876 * _3660.z;
                                frontier_phi_78_pred_3 = _3876 * _3660.y;
                                frontier_phi_78_pred_4 = _3876 * _3660.x;
                                frontier_phi_78_pred_5 = _3802 * _3648.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3884 = frontier_phi_78_pred;
                            _3883 = frontier_phi_78_pred_1;
                            _3882 = frontier_phi_78_pred_2;
                            _3881 = frontier_phi_78_pred_3;
                            _3880 = frontier_phi_78_pred_4;
                            _3885 = frontier_phi_78_pred_5;
                            _3590 = _3883 + _3603;
                            _3591 = _3884 + _3604;
                            _3592 = _3885 + _3605;
                            _3587 = _3880 + _3600;
                            _3588 = _3881 + _3601;
                            _3589 = _3882 + _3602;
                            if (_3607 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3600 = _3587;
                                _3601 = _3588;
                                _3602 = _3589;
                                _3603 = _3590;
                                _3604 = _3591;
                                _3605 = _3592;
                                _3606 = _3607;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3592;
                        frontier_phi_72_pred_1 = _3591;
                        frontier_phi_72_pred_2 = _3590;
                        frontier_phi_72_pred_3 = _3589;
                        frontier_phi_72_pred_4 = _3588;
                        frontier_phi_72_pred_5 = _3587;
                    }
                    _3260 = frontier_phi_72_pred;
                    _3258 = frontier_phi_72_pred_1;
                    _3256 = frontier_phi_72_pred_2;
                    _3254 = frontier_phi_72_pred_3;
                    _3252 = frontier_phi_72_pred_4;
                    _3250 = frontier_phi_72_pred_5;
                    uint _3395 = _3394 + 1u;
                    if (_3395 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3388 = _3250;
                        _3389 = _3252;
                        _3390 = _3254;
                        _3391 = _3256;
                        _3392 = _3258;
                        _3393 = _3260;
                        _3394 = _3395;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3260;
                frontier_phi_60_61_ladder_1 = _3258;
                frontier_phi_60_61_ladder_2 = _3254;
                frontier_phi_60_61_ladder_3 = _3252;
                frontier_phi_60_61_ladder_4 = _3250;
                frontier_phi_60_61_ladder_5 = _3256;
            }
            else
            {
                frontier_phi_60_61_ladder = _3146;
                frontier_phi_60_61_ladder_1 = _3144;
                frontier_phi_60_61_ladder_2 = _3140;
                frontier_phi_60_61_ladder_3 = _3138;
                frontier_phi_60_61_ladder_4 = _3136;
                frontier_phi_60_61_ladder_5 = _3142;
            }
            _3249 = frontier_phi_60_61_ladder_4;
            _3251 = frontier_phi_60_61_ladder_3;
            _3253 = frontier_phi_60_61_ladder_2;
            _3255 = frontier_phi_60_61_ladder_5;
            _3257 = frontier_phi_60_61_ladder_1;
            _3259 = frontier_phi_60_61_ladder;
        }
        float _3264 = isnan(1.0) ? _1043 : (isnan(_1043) ? 1.0 : min(_1043, 1.0));
        _3067 = (_3264 * _3255) + _2579;
        _3069 = (_3264 * _3257) + _2581;
        _3071 = (_3264 * _3259) + _2583;
        _3073 = ((_3249 * _1028) * _3264) + _2917;
        _3075 = ((_3251 * _1030) * _3264) + _2919;
        _3077 = ((_3253 * _1031) * _3264) + _2921;
    }
    else
    {
        _3067 = _2579;
        _3069 = _2581;
        _3071 = _2583;
        _3073 = _2917;
        _3075 = _2919;
        _3077 = _2921;
    }
    float _5034 = isnan(0.0) ? _1018 : (isnan(_1018) ? 0.0 : max(_1018, 0.0));
    float _5045 = isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0));
    float _5056 = isnan(0.0) ? _1020 : (isnan(_1020) ? 0.0 : max(_1020, 0.0));
    float _5067 = isnan(0.0) ? _879 : (isnan(_879) ? 0.0 : max(_879, 0.0));
    float _3102 = cbInstanceData._m0[_1003 + 6u].w * (isnan(1.0) ? _5067 : (isnan(_5067) ? 1.0 : min(_5067, 1.0)));
    float _3107 = _965 / cbSceneParam._m0[86u].x;
    float _3108 = _966 / cbSceneParam._m0[86u].y;
    vec4 _3122 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3107, _3108, (log2((isnan(cbSceneParam._m0[77u].w) ? _900 : (isnan(_900) ? cbSceneParam._m0[77u].w : min(_900, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3124 = _3122.x;
    float _3125 = _3122.y;
    float _3126 = _3122.z;
    float _3127 = _3122.w;
    float _3199;
    float _3201;
    float _3203;
    float _3205;
    if (_900 > cbSceneParam._m0[78u].w)
    {
        float _3161 = isnan(_900) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _900 : min(cbSceneParam._m0[80u].w, _900));
        float _3162 = _3161 / _900;
        float _3173 = _3162 * _950;
        float _3174 = _951 * _3162;
        float _3175 = (-0.0) - _3174;
        float _3177 = _3162 * _952;
        float _3179 = (cbSceneParam._m0[77u].w * _3175) / _3161;
        float _3180 = _3179 + cbSceneParam._m0[79u].w;
        float _3181 = cbSceneParam._m0[79u].w - _3174;
        float _3187 = sqrt(((_3173 * _3173) + (_3174 * _3174)) + (_3177 * _3177));
        float _3190 = (1.0 - (cbSceneParam._m0[77u].w / _3161)) * _3187;
        float _3195 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3197 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3350;
        if (abs((_3175 - _3179) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3350 = ((((_3180 > 0.0) ? exp2(_3195 * _3180) : (2.0 - exp2(_3197 * _3180))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3190;
        }
        else
        {
            float _3310 = 1.0 / cbSceneParam._m0[80u].x;
            float _3311 = isnan(_3181) ? _3180 : (isnan(_3180) ? _3181 : max(_3180, _3181));
            float _3312 = isnan(_3181) ? _3180 : (isnan(_3180) ? _3181 : min(_3180, _3181));
            float _3321 = isnan(0.0) ? _3311 : (isnan(_3311) ? 0.0 : min(_3311, 0.0));
            float _3322 = isnan(0.0) ? _3312 : (isnan(_3312) ? 0.0 : min(_3312, 0.0));
            _3350 = ((abs(_3187 / _3175) * cbSceneParam._m0[80u].y) * ((((_3321 - _3322) * 2.0) - ((exp2(_3195 * (isnan(0.0) ? _3311 : (isnan(_3311) ? 0.0 : max(_3311, 0.0)))) - exp2(_3195 * (isnan(0.0) ? _3312 : (isnan(_3312) ? 0.0 : max(_3312, 0.0))))) * _3310)) - ((exp2(_3197 * _3321) - exp2(_3197 * _3322)) * _3310))) + (_3190 * cbSceneParam._m0[80u].z);
        }
        vec4 _3352 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3107, _3108, 1.0), 0.0);
        float _3361 = exp2((_3350 * (-1.44269502162933349609375)) * (1.0 - _3352.w));
        float _3362 = log2(_3361);
        float _3378 = log2(_3127);
        _3199 = (exp2(_3378 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3362 * cbSceneParam._m0[78u].x)) * _3352.x) / cbSceneParam._m0[78u].x)) + _3124;
        _3201 = (exp2(_3378 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3362 * cbSceneParam._m0[78u].y)) * _3352.y) / cbSceneParam._m0[78u].y)) + _3125;
        _3203 = (exp2(_3378 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3362 * cbSceneParam._m0[78u].z)) * _3352.z) / cbSceneParam._m0[78u].z)) + _3126;
        _3205 = _3361 * _3127;
    }
    else
    {
        _3199 = _3124;
        _3201 = _3125;
        _3203 = _3126;
        _3205 = _3127;
    }
    float _3217 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3218 = _3217 == 3.0;
    float _3219 = log2(_3205);
    float _3226 = exp2(_3219 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5034 : (isnan(_5034) ? 1.0 : min(_5034, 1.0))) * (_3067 + ((isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0))) * _1043))) + ((_3073 + ((isnan(0.0) ? _2060 : (isnan(_2060) ? 0.0 : max(_2060, 0.0))) * _1847)) * cbPerFrame._m0[3u].x));
    float _3227 = exp2(_3219 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5045 : (isnan(_5045) ? 1.0 : min(_5045, 1.0))) * (_3069 + ((isnan(0.0) ? _1771 : (isnan(_1771) ? 0.0 : max(_1771, 0.0))) * _1043))) + ((_3075 + ((isnan(0.0) ? _2063 : (isnan(_2063) ? 0.0 : max(_2063, 0.0))) * _1847)) * cbPerFrame._m0[3u].x));
    float _3228 = exp2(_3219 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5056 : (isnan(_5056) ? 1.0 : min(_5056, 1.0))) * (_3071 + ((isnan(0.0) ? _1774 : (isnan(_1774) ? 0.0 : max(_1774, 0.0))) * _1043))) + ((_3077 + ((isnan(0.0) ? _2066 : (isnan(_2066) ? 0.0 : max(_2066, 0.0))) * _1847)) * cbPerFrame._m0[3u].x));
    float _3237 = (_3217 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3237 * (_3218 ? _3226 : (_3226 + (cbSceneParam._m0[72u].w * _3199)));
    SV_Target.y = _3237 * (_3218 ? _3227 : (_3227 + (cbSceneParam._m0[72u].w * _3201)));
    SV_Target.z = _3237 * (_3218 ? _3228 : (_3228 + (cbSceneParam._m0[72u].w * _3203)));
    SV_Target.w = _3102;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3102;
}


