#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D S_E_Billboard_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D S_E_Billboard_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _650;
float _651;
float _652;
float _653;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _145 = texture(sampler2D(S_E_Billboard_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _152 = (cbMtdParam._m0[9u].x * cbMtdParam._m0[11u].y) * _145.x;
    float _154 = (cbMtdParam._m0[9u].y * cbMtdParam._m0[11u].y) * _145.y;
    float _156 = (cbMtdParam._m0[9u].z * cbMtdParam._m0[11u].y) * _145.z;
    vec4 _175 = texture(sampler2D(S_E_Billboard_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1) + cbTextureTilingScale._m0[1u].w));
    float _188 = abs((fract(cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _662 = isnan(0.0) ? _188 : (isnan(_188) ? 0.0 : max(_188, 0.0));
    float _190 = isnan(1.0) ? _662 : (isnan(_662) ? 1.0 : min(_662, 1.0));
    float _197 = ((_190 * _190) * (3.0 - (_190 * 2.0))) - cbMtdParam._m0[11u].w;
    float _234 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _275 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _285 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _275);
    float _286 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _275);
    float _287 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _275);
    vec4 _292 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _294 = _292.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _382 = sqrt(((_285 * _285) + (_286 * _286)) + (_287 * _287));
        float _389 = (cbMatDynParam._m0[5u].x * _382) + cbMatDynParam._m0[5u].y;
        float _673 = isnan(0.0) ? _389 : (isnan(_389) ? 0.0 : max(_389, 0.0));
        float _390 = isnan(1.0) ? _673 : (isnan(_673) ? 1.0 : min(_673, 1.0));
        float _394 = (cbMatDynParam._m0[5u].z * _382) + cbMatDynParam._m0[5u].w;
        float _684 = isnan(0.0) ? _394 : (isnan(_394) ? 0.0 : max(_394, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _684 : (isnan(_684) ? 1.0 : min(_684, 1.0))) - _390)) + _390) < ((_294 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _312 = uint(roundEven(NORMAL.w)) * 13u;
    uint _314 = _312 + 9u;
    uint _315 = _314 + uint(cbMatDynParam._m0[0u].w);
    float _321 = (((((((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _175.x) * _197) - _152) * TEXCOORD_3.x) + _152) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_315].x;
    float _322 = (((((((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _175.y) * _197) - _154) * TEXCOORD_3.y) + _154) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_315].y;
    float _323 = (((((((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _175.z) * _197) - _156) * TEXCOORD_3.z) + _156) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_315].z;
    float _324 = isnan(0.0) ? _321 : (isnan(_321) ? 0.0 : max(_321, 0.0));
    float _325 = isnan(0.0) ? _322 : (isnan(_322) ? 0.0 : max(_322, 0.0));
    float _326 = isnan(0.0) ? _323 : (isnan(_323) ? 0.0 : max(_323, 0.0));
    float _332 = cbMtdParam._m0[2u].x * _321;
    float _333 = cbMtdParam._m0[2u].y * _322;
    float _334 = cbMtdParam._m0[2u].z * _323;
    float _710 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _336 = isnan(1.0) ? _710 : (isnan(_710) ? 1.0 : min(_710, 1.0));
    uint _337 = _312 + 6u;
    float _346 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _347 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _362 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_346, _347, (log2((isnan(cbSceneParam._m0[77u].w) ? _234 : (isnan(_234) ? cbSceneParam._m0[77u].w : min(_234, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _365 = _362.x;
    float _366 = _362.y;
    float _367 = _362.z;
    float _368 = _362.w;
    float _450;
    float _452;
    float _454;
    float _456;
    if (_234 > cbSceneParam._m0[78u].w)
    {
        float _411 = isnan(_234) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _234 : min(cbSceneParam._m0[80u].w, _234));
        float _412 = _411 / _234;
        float _423 = _412 * _285;
        float _424 = _286 * _412;
        float _425 = (-0.0) - _424;
        float _427 = _412 * _287;
        float _429 = (cbSceneParam._m0[77u].w * _425) / _411;
        float _430 = _429 + cbSceneParam._m0[79u].w;
        float _431 = cbSceneParam._m0[79u].w - _424;
        float _437 = sqrt(((_423 * _423) + (_424 * _424)) + (_427 * _427));
        float _440 = (1.0 - (cbSceneParam._m0[77u].w / _411)) * _437;
        float _446 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _448 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _578;
        if (abs((_425 - _429) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _578 = ((((_430 > 0.0) ? exp2(_446 * _430) : (2.0 - exp2(_448 * _430))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _440;
        }
        else
        {
            float _533 = 1.0 / cbSceneParam._m0[80u].x;
            float _534 = isnan(_431) ? _430 : (isnan(_430) ? _431 : max(_430, _431));
            float _535 = isnan(_431) ? _430 : (isnan(_430) ? _431 : min(_430, _431));
            float _544 = isnan(0.0) ? _534 : (isnan(_534) ? 0.0 : min(_534, 0.0));
            float _545 = isnan(0.0) ? _535 : (isnan(_535) ? 0.0 : min(_535, 0.0));
            _578 = ((abs(_437 / _425) * cbSceneParam._m0[80u].y) * ((((_544 - _545) * 2.0) - ((exp2(_446 * (isnan(0.0) ? _534 : (isnan(_534) ? 0.0 : max(_534, 0.0)))) - exp2(_446 * (isnan(0.0) ? _535 : (isnan(_535) ? 0.0 : max(_535, 0.0))))) * _533)) - ((exp2(_448 * _544) - exp2(_448 * _545)) * _533))) + (_440 * cbSceneParam._m0[80u].z);
        }
        vec4 _580 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_346, _347, 1.0), 0.0);
        float _589 = exp2((_578 * (-1.44269502162933349609375)) * (1.0 - _580.w));
        float _590 = log2(_589);
        float _606 = log2(_368);
        _450 = (exp2(_606 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_590 * cbSceneParam._m0[78u].x)) * _580.x) / cbSceneParam._m0[78u].x)) + _365;
        _452 = (exp2(_606 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_590 * cbSceneParam._m0[78u].y)) * _580.y) / cbSceneParam._m0[78u].y)) + _366;
        _454 = (exp2(_606 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_590 * cbSceneParam._m0[78u].z)) * _580.z) / cbSceneParam._m0[78u].z)) + _367;
        _456 = _589 * _368;
    }
    else
    {
        _450 = _365;
        _452 = _366;
        _454 = _367;
        _456 = _368;
    }
    bool _616;
    vec4 _465;
    vec4 _488;
    float _490;
    float _494;
    float _495;
    float _496;
    float _499;
    float _502;
    float _505;
    float _506;
    bool _517;
    for (;;)
    {
        _465 = cbMatDynParam._m0[0u];
        float _467 = roundEven(_465.y);
        bool _468 = _467 == 3.0;
        float _469 = log2(_456);
        float _473 = exp2(_469 * cbSceneParam._m0[78u].x);
        float _474 = exp2(_469 * cbSceneParam._m0[78u].y);
        float _475 = exp2(_469 * cbSceneParam._m0[78u].z);
        float _476 = _473 * _324;
        float _477 = _474 * _325;
        float _478 = _475 * _326;
        float _485 = _294 + (-0.5);
        _488 = cbMtdParam._m0[1u];
        _490 = _488.y * _485;
        float _493 = (_467 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _494 = _493 * (_468 ? _476 : (_476 + (cbSceneParam._m0[72u].w * _450)));
        _495 = _493 * (_468 ? _477 : (_477 + (cbSceneParam._m0[72u].w * _452)));
        _496 = _493 * (_468 ? _478 : (_478 + (cbSceneParam._m0[72u].w * _454)));
        _499 = ((_332 * _336) * _473) * _493;
        _502 = ((_333 * _336) * _474) * _493;
        _505 = ((_334 * _336) * _475) * _493;
        _506 = _485 * 0.999000012874603271484375;
        _517 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_517)
        {
            if ((cbInstanceData._m0[_312 + 7u].x + _506) < 0.5)
            {
                _616 = true;
                break;
            }
        }
        uint _570 = _314 + uint(_465.w);
        if ((cbInstanceData._m0[_570].w < 1.0) && ((cbInstanceData._m0[_570].w + _506) < 0.5))
        {
            _616 = true;
            break;
        }
        if ((_490 + 1.0) < _488.x)
        {
            _616 = true;
            break;
        }
        _616 = false;
        break;
    }
    float _621;
    if (_616)
    {
        discard_state = true;
        _621 = 0.0;
    }
    else
    {
        _621 = cbInstanceData._m0[_337].w;
    }
    SV_Target.x = _494;
    SV_Target.y = _495;
    SV_Target.z = _496;
    SV_Target.w = _621;
    SV_Target_1.x = _499;
    SV_Target_1.y = _502;
    SV_Target_1.z = _505;
    SV_Target_1.w = cbInstanceData._m0[_337].w;
    discard_exit();
}


