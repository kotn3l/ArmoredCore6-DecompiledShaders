#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    uint _102 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    precise float _106 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _111 = isnan(_106) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _106 : max(0.001000000047497451305389404296875, _106));
    precise float _113 = BLENDWEIGHT.x / _111;
    precise float _114 = BLENDWEIGHT.y / _111;
    precise float _115 = BLENDWEIGHT.z / _111;
    precise float _116 = BLENDWEIGHT.w / _111;
    uint _118 = texelFetch(g_InstanceIndexBuffer, int(_102)).x * 13u;
    uvec4 _124 = floatBitsToUint(cbInstanceData._m0[_118 + 4u]);
    uint _125 = _124.x;
    uint _127 = (_125 + uint(float(BLENDINDICES.x))) * 3u;
    uint _134 = _127 + 1u;
    uint _141 = _127 + 2u;
    precise float _148 = _113 * cbObjMatrix._m0[_127].x;
    precise float _149 = _113 * cbObjMatrix._m0[_134].x;
    precise float _150 = _113 * cbObjMatrix._m0[_141].x;
    precise float _151 = _113 * cbObjMatrix._m0[_127].y;
    precise float _152 = _113 * cbObjMatrix._m0[_134].y;
    precise float _153 = _113 * cbObjMatrix._m0[_141].y;
    precise float _154 = _113 * cbObjMatrix._m0[_127].z;
    precise float _155 = _113 * cbObjMatrix._m0[_134].z;
    precise float _156 = _113 * cbObjMatrix._m0[_141].z;
    precise float _157 = _113 * cbObjMatrix._m0[_127].w;
    precise float _158 = _113 * cbObjMatrix._m0[_134].w;
    precise float _159 = _113 * cbObjMatrix._m0[_141].w;
    uint _162 = (_125 + uint(float(BLENDINDICES.y))) * 3u;
    uint _169 = _162 + 1u;
    uint _176 = _162 + 2u;
    precise float _183 = _114 * cbObjMatrix._m0[_162].x;
    precise float _184 = _114 * cbObjMatrix._m0[_169].x;
    precise float _185 = _114 * cbObjMatrix._m0[_176].x;
    precise float _186 = _114 * cbObjMatrix._m0[_162].y;
    precise float _187 = _114 * cbObjMatrix._m0[_169].y;
    precise float _188 = _114 * cbObjMatrix._m0[_176].y;
    precise float _189 = _114 * cbObjMatrix._m0[_162].z;
    precise float _190 = _114 * cbObjMatrix._m0[_169].z;
    precise float _191 = _114 * cbObjMatrix._m0[_176].z;
    precise float _192 = _114 * cbObjMatrix._m0[_162].w;
    precise float _193 = _114 * cbObjMatrix._m0[_169].w;
    precise float _194 = _114 * cbObjMatrix._m0[_176].w;
    precise float _195 = _148 + _183;
    precise float _196 = _149 + _184;
    precise float _197 = _150 + _185;
    precise float _198 = _151 + _186;
    precise float _199 = _152 + _187;
    precise float _200 = _153 + _188;
    precise float _201 = _154 + _189;
    precise float _202 = _155 + _190;
    precise float _203 = _156 + _191;
    precise float _204 = _157 + _192;
    precise float _205 = _158 + _193;
    precise float _206 = _159 + _194;
    uint _209 = (_125 + uint(float(BLENDINDICES.z))) * 3u;
    uint _216 = _209 + 1u;
    uint _223 = _209 + 2u;
    precise float _230 = _115 * cbObjMatrix._m0[_209].x;
    precise float _231 = _115 * cbObjMatrix._m0[_216].x;
    precise float _232 = _115 * cbObjMatrix._m0[_223].x;
    precise float _233 = _115 * cbObjMatrix._m0[_209].y;
    precise float _234 = _115 * cbObjMatrix._m0[_216].y;
    precise float _235 = _115 * cbObjMatrix._m0[_223].y;
    precise float _236 = _115 * cbObjMatrix._m0[_209].z;
    precise float _237 = _115 * cbObjMatrix._m0[_216].z;
    precise float _238 = _115 * cbObjMatrix._m0[_223].z;
    precise float _239 = _115 * cbObjMatrix._m0[_209].w;
    precise float _240 = _115 * cbObjMatrix._m0[_216].w;
    precise float _241 = _115 * cbObjMatrix._m0[_223].w;
    precise float _242 = _195 + _230;
    precise float _243 = _196 + _231;
    precise float _244 = _197 + _232;
    precise float _245 = _198 + _233;
    precise float _246 = _199 + _234;
    precise float _247 = _200 + _235;
    precise float _248 = _201 + _236;
    precise float _249 = _202 + _237;
    precise float _250 = _203 + _238;
    precise float _251 = _204 + _239;
    precise float _252 = _205 + _240;
    precise float _253 = _206 + _241;
    uint _256 = (_125 + uint(float(BLENDINDICES.w))) * 3u;
    uint _263 = _256 + 1u;
    uint _270 = _256 + 2u;
    precise float _277 = _116 * cbObjMatrix._m0[_256].x;
    precise float _278 = _116 * cbObjMatrix._m0[_263].x;
    precise float _279 = _116 * cbObjMatrix._m0[_270].x;
    precise float _280 = _116 * cbObjMatrix._m0[_256].y;
    precise float _281 = _116 * cbObjMatrix._m0[_263].y;
    precise float _282 = _116 * cbObjMatrix._m0[_270].y;
    precise float _283 = _116 * cbObjMatrix._m0[_256].z;
    precise float _284 = _116 * cbObjMatrix._m0[_263].z;
    precise float _285 = _116 * cbObjMatrix._m0[_270].z;
    precise float _286 = _116 * cbObjMatrix._m0[_256].w;
    precise float _287 = _116 * cbObjMatrix._m0[_263].w;
    precise float _288 = _116 * cbObjMatrix._m0[_270].w;
    precise float _289 = _242 + _277;
    precise float _290 = _243 + _278;
    precise float _291 = _244 + _279;
    precise float _292 = _245 + _280;
    precise float _293 = _246 + _281;
    precise float _294 = _247 + _282;
    precise float _295 = _248 + _283;
    precise float _296 = _249 + _284;
    precise float _297 = _250 + _285;
    precise float _298 = _251 + _286;
    precise float _299 = _252 + _287;
    precise float _300 = _253 + _288;
    precise float _318 = _289 * cbSceneParam._m0[5u].x;
    precise float _319 = _290 * cbSceneParam._m0[5u].y;
    precise float _320 = _319 + _318;
    precise float _321 = _291 * cbSceneParam._m0[5u].z;
    precise float _322 = _321 + _320;
    precise float _323 = _289 * cbSceneParam._m0[6u].x;
    precise float _324 = _290 * cbSceneParam._m0[6u].y;
    precise float _325 = _324 + _323;
    precise float _326 = _291 * cbSceneParam._m0[6u].z;
    precise float _327 = _326 + _325;
    precise float _328 = _289 * cbSceneParam._m0[7u].x;
    precise float _329 = _290 * cbSceneParam._m0[7u].y;
    precise float _330 = _329 + _328;
    precise float _331 = _291 * cbSceneParam._m0[7u].z;
    precise float _332 = _331 + _330;
    precise float _333 = _292 * cbSceneParam._m0[5u].x;
    precise float _334 = _293 * cbSceneParam._m0[5u].y;
    precise float _335 = _334 + _333;
    precise float _336 = _294 * cbSceneParam._m0[5u].z;
    precise float _337 = _336 + _335;
    precise float _338 = _292 * cbSceneParam._m0[6u].x;
    precise float _339 = _293 * cbSceneParam._m0[6u].y;
    precise float _340 = _339 + _338;
    precise float _341 = _294 * cbSceneParam._m0[6u].z;
    precise float _342 = _341 + _340;
    precise float _343 = _292 * cbSceneParam._m0[7u].x;
    precise float _344 = _293 * cbSceneParam._m0[7u].y;
    precise float _345 = _344 + _343;
    precise float _346 = _294 * cbSceneParam._m0[7u].z;
    precise float _347 = _346 + _345;
    precise float _348 = _295 * cbSceneParam._m0[5u].x;
    precise float _349 = _296 * cbSceneParam._m0[5u].y;
    precise float _350 = _349 + _348;
    precise float _351 = _297 * cbSceneParam._m0[5u].z;
    precise float _352 = _351 + _350;
    precise float _353 = _295 * cbSceneParam._m0[6u].x;
    precise float _354 = _296 * cbSceneParam._m0[6u].y;
    precise float _355 = _354 + _353;
    precise float _356 = _297 * cbSceneParam._m0[6u].z;
    precise float _357 = _356 + _355;
    precise float _358 = _295 * cbSceneParam._m0[7u].x;
    precise float _359 = _296 * cbSceneParam._m0[7u].y;
    precise float _360 = _359 + _358;
    precise float _361 = _297 * cbSceneParam._m0[7u].z;
    precise float _362 = _361 + _360;
    precise float _363 = POSITION.x * _322;
    precise float _364 = _327 * POSITION.y;
    precise float _365 = _364 + _363;
    precise float _366 = _332 * POSITION.z;
    precise float _367 = _366 + _365;
    precise float _368 = POSITION.x * _337;
    precise float _369 = _342 * POSITION.y;
    precise float _370 = _369 + _368;
    precise float _371 = _347 * POSITION.z;
    precise float _372 = _371 + _370;
    precise float _373 = POSITION.x * _352;
    precise float _374 = _357 * POSITION.y;
    precise float _375 = _374 + _373;
    precise float _376 = _362 * POSITION.z;
    precise float _377 = _376 + _375;
    precise float _378 = _367 + 0.0;
    precise float _379 = _372 + 0.0;
    precise float _380 = _377 + 0.0;
    precise float _381 = _289 * _378;
    precise float _382 = _379 * _292;
    precise float _383 = _382 + _381;
    precise float _384 = _380 * _295;
    precise float _385 = _384 + _383;
    precise float _386 = 1.0 * _298;
    precise float _387 = _386 + _385;
    precise float _388 = _290 * _378;
    precise float _389 = _379 * _293;
    precise float _390 = _389 + _388;
    precise float _391 = _380 * _296;
    precise float _392 = _391 + _390;
    precise float _393 = 1.0 * _299;
    precise float _394 = _393 + _392;
    precise float _395 = _291 * _378;
    precise float _396 = _379 * _294;
    precise float _397 = _396 + _395;
    precise float _398 = _380 * _297;
    precise float _399 = _398 + _397;
    precise float _400 = 1.0 * _300;
    precise float _401 = _400 + _399;
    precise float _407 = _387 - cbSceneParam._m0[3u].x;
    precise float _408 = _394 - cbSceneParam._m0[3u].y;
    precise float _409 = _401 - cbSceneParam._m0[3u].z;
    precise float _437 = _407 * cbSceneParam._m0[24u].x;
    precise float _438 = _408 * cbSceneParam._m0[24u].y;
    precise float _439 = _438 + _437;
    precise float _440 = _409 * cbSceneParam._m0[24u].z;
    precise float _441 = _440 + _439;
    precise float _442 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _443 = _442 + _441;
    precise float _444 = _407 * cbSceneParam._m0[25u].x;
    precise float _445 = _408 * cbSceneParam._m0[25u].y;
    precise float _446 = _445 + _444;
    precise float _447 = _409 * cbSceneParam._m0[25u].z;
    precise float _448 = _447 + _446;
    precise float _449 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _450 = _449 + _448;
    precise float _451 = _407 * cbSceneParam._m0[26u].x;
    precise float _452 = _408 * cbSceneParam._m0[26u].y;
    precise float _453 = _452 + _451;
    precise float _454 = _409 * cbSceneParam._m0[26u].z;
    precise float _455 = _454 + _453;
    precise float _456 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _457 = _456 + _455;
    precise float _458 = _407 * cbSceneParam._m0[27u].x;
    precise float _459 = _408 * cbSceneParam._m0[27u].y;
    precise float _460 = _459 + _458;
    precise float _461 = _409 * cbSceneParam._m0[27u].z;
    precise float _462 = _461 + _460;
    precise float _463 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _464 = _463 + _462;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    gl_Position.x = _443;
    gl_Position.y = _450;
    gl_Position.z = _457;
    gl_Position.w = _464;
    gl_ClipDistance[0u] = dot(vec4(_443, _450, _457, _464), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_443, _450, _457, _464), vec4(cbInstanceData._m0[_118 + 3u]));
}


