#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D S_E_Billboard_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D S_E_Billboard_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _136 = texture(sampler2D(S_E_Billboard_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _143 = (cbMtdParam._m0[9u].x * cbMtdParam._m0[11u].y) * _136.x;
    float _145 = (cbMtdParam._m0[9u].y * cbMtdParam._m0[11u].y) * _136.y;
    float _147 = (cbMtdParam._m0[9u].z * cbMtdParam._m0[11u].y) * _136.z;
    vec4 _166 = texture(sampler2D(S_E_Billboard_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1) + cbTextureTilingScale._m0[1u].w));
    float _179 = abs((fract(cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _541 = isnan(0.0) ? _179 : (isnan(_179) ? 0.0 : max(_179, 0.0));
    float _181 = isnan(1.0) ? _541 : (isnan(_541) ? 1.0 : min(_541, 1.0));
    float _188 = ((_181 * _181) * (3.0 - (_181 * 2.0))) - cbMtdParam._m0[11u].w;
    float _225 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _242 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _257 = uint(roundEven(NORMAL.w)) * 13u;
    uint _260 = (_257 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _266 = (((((((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _166.x) * _188) - _143) * TEXCOORD_3.x) + _143) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_260].x;
    float _267 = (((((((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _166.y) * _188) - _145) * TEXCOORD_3.y) + _145) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_260].y;
    float _268 = (((((((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _166.z) * _188) - _147) * TEXCOORD_3.z) + _147) * cbSceneParam._m0[72u].y) * cbInstanceData._m0[_260].z;
    float _567 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _281 = isnan(1.0) ? _567 : (isnan(_567) ? 1.0 : min(_567, 1.0));
    uint _282 = _257 + 6u;
    float _292 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _293 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _308 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_292, _293, (log2((isnan(cbSceneParam._m0[77u].w) ? _225 : (isnan(_225) ? cbSceneParam._m0[77u].w : min(_225, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _311 = _308.x;
    float _312 = _308.y;
    float _313 = _308.z;
    float _314 = _308.w;
    float _399;
    float _401;
    float _403;
    float _405;
    if (_225 > cbSceneParam._m0[78u].w)
    {
        float _360 = isnan(_225) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _225 : min(cbSceneParam._m0[80u].w, _225));
        float _361 = _360 / _225;
        float _372 = _361 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _242));
        float _373 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _242)) * _361;
        float _374 = (-0.0) - _373;
        float _376 = _361 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _242));
        float _378 = (cbSceneParam._m0[77u].w * _374) / _360;
        float _379 = _378 + cbSceneParam._m0[79u].w;
        float _380 = cbSceneParam._m0[79u].w - _373;
        float _386 = sqrt(((_372 * _372) + (_373 * _373)) + (_376 * _376));
        float _389 = (1.0 - (cbSceneParam._m0[77u].w / _360)) * _386;
        float _395 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _397 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _496;
        if (abs((_374 - _378) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _496 = ((((_379 > 0.0) ? exp2(_395 * _379) : (2.0 - exp2(_397 * _379))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _389;
        }
        else
        {
            float _469 = 1.0 / cbSceneParam._m0[80u].x;
            float _470 = isnan(_380) ? _379 : (isnan(_379) ? _380 : max(_379, _380));
            float _471 = isnan(_380) ? _379 : (isnan(_379) ? _380 : min(_379, _380));
            float _480 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : min(_470, 0.0));
            float _481 = isnan(0.0) ? _471 : (isnan(_471) ? 0.0 : min(_471, 0.0));
            _496 = ((abs(_386 / _374) * cbSceneParam._m0[80u].y) * ((((_480 - _481) * 2.0) - ((exp2(_395 * (isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0)))) - exp2(_395 * (isnan(0.0) ? _471 : (isnan(_471) ? 0.0 : max(_471, 0.0))))) * _469)) - ((exp2(_397 * _480) - exp2(_397 * _481)) * _469))) + (_389 * cbSceneParam._m0[80u].z);
        }
        vec4 _498 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_292, _293, 1.0), 0.0);
        float _507 = exp2((_496 * (-1.44269502162933349609375)) * (1.0 - _498.w));
        float _508 = log2(_507);
        float _524 = log2(_314);
        _399 = (exp2(_524 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_508 * cbSceneParam._m0[78u].x)) * _498.x) / cbSceneParam._m0[78u].x)) + _311;
        _401 = (exp2(_524 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_508 * cbSceneParam._m0[78u].y)) * _498.y) / cbSceneParam._m0[78u].y)) + _312;
        _403 = (exp2(_524 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_508 * cbSceneParam._m0[78u].z)) * _498.z) / cbSceneParam._m0[78u].z)) + _313;
        _405 = _507 * _314;
    }
    else
    {
        _399 = _311;
        _401 = _312;
        _403 = _313;
        _405 = _314;
    }
    float _416 = roundEven(cbMatDynParam._m0[0u].y);
    bool _417 = _416 == 3.0;
    float _418 = log2(_405);
    float _422 = exp2(_418 * cbSceneParam._m0[78u].x);
    float _423 = exp2(_418 * cbSceneParam._m0[78u].y);
    float _424 = exp2(_418 * cbSceneParam._m0[78u].z);
    float _425 = _422 * (isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0)));
    float _426 = _423 * (isnan(0.0) ? _267 : (isnan(_267) ? 0.0 : max(_267, 0.0)));
    float _427 = _424 * (isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0)));
    float _436 = (_416 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _436 * (_417 ? _425 : (_425 + (cbSceneParam._m0[72u].w * _399)));
    SV_Target.y = _436 * (_417 ? _426 : (_426 + (cbSceneParam._m0[72u].w * _401)));
    SV_Target.z = _436 * (_417 ? _427 : (_427 + (cbSceneParam._m0[72u].w * _403)));
    SV_Target.w = cbInstanceData._m0[_282].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _266) * _281) * _422) * _436;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _267) * _281) * _423) * _436;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _268) * _281) * _424) * _436;
    SV_Target_1.w = cbInstanceData._m0[_282].w;
}


