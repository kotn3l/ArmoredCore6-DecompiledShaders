#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D S_PA_Emissive_Glow_Addition_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D S_PA_Emissive_Glow_Addition_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D S_PA_Emissive_Glow_Addition_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _745;
float _746;
float _747;
float _748;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _132 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _133 = _132 * NORMAL.x;
    float _134 = _132 * NORMAL.y;
    float _135 = _132 * NORMAL.z;
    float _140;
    float _141;
    float _142;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _140 = (-0.0) - _133;
        _141 = (-0.0) - _134;
        _142 = (-0.0) - _135;
    }
    else
    {
        _140 = _133;
        _141 = _134;
        _142 = _135;
    }
    float _186 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _196 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _186);
    float _197 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _186);
    float _198 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _186);
    float _203 = cbMtdParam._m0[13u].z * TEXCOORD_1.z;
    float _214 = inversesqrt(dot(vec3(_140, _141, _142), vec3(_140, _141, _142)));
    float _221 = inversesqrt(dot(vec3(_196, _197, _198), vec3(_196, _197, _198)));
    float _225 = dot(vec4(_221 * _196, _221 * _197, _221 * _198, 0.0), vec4(_214 * _140, _214 * _141, _214 * _142, 0.0));
    float _228 = _225 - cbMtdParam._m0[13u].x;
    float _757 = isnan(0.0) ? _228 : (isnan(_228) ? 0.0 : max(_228, 0.0));
    float _236 = exp2(log2(1.0 - (isnan(1.0) ? _757 : (isnan(_757) ? 1.0 : min(_757, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[13u].y : (isnan(cbMtdParam._m0[13u].y) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[13u].y, 0.001000000047497451305389404296875))));
    float _245 = _225 - cbMtdParam._m0[14u].x;
    float _773 = isnan(0.0) ? _245 : (isnan(_245) ? 0.0 : max(_245, 0.0));
    float _251 = exp2(log2(1.0 - (isnan(1.0) ? _773 : (isnan(_773) ? 1.0 : min(_773, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[13u].w : (isnan(cbMtdParam._m0[13u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[13u].w, 0.001000000047497451305389404296875))));
    vec4 _275 = texture(sampler2D(S_PA_Emissive_Glow_Addition_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((cbMtdParam._m0[14u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[14u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    vec4 _309 = texture(sampler2D(S_PA_Emissive_Glow_Addition_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((cbMtdParam._m0[14u].w * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _343 = texture(sampler2D(S_PA_Emissive_Glow_Addition_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((cbMtdParam._m0[15u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((cbMtdParam._m0[15u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _789 = isnan(0.0) ? _203 : (isnan(_203) ? 0.0 : max(_203, 0.0));
    float _376 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _381 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _383 = _381.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _473 = sqrt(((_196 * _196) + (_197 * _197)) + (_198 * _198));
        float _480 = (cbMatDynParam._m0[5u].x * _473) + cbMatDynParam._m0[5u].y;
        float _800 = isnan(0.0) ? _480 : (isnan(_480) ? 0.0 : max(_480, 0.0));
        float _481 = isnan(1.0) ? _800 : (isnan(_800) ? 1.0 : min(_800, 1.0));
        float _485 = (cbMatDynParam._m0[5u].z * _473) + cbMatDynParam._m0[5u].w;
        float _811 = isnan(0.0) ? _485 : (isnan(_485) ? 0.0 : max(_485, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _811 : (isnan(_811) ? 1.0 : min(_811, 1.0))) - _481)) + _481) < ((_383 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _401 = uint(roundEven(NORMAL.w)) * 13u;
    uint _402 = _401 + 9u;
    uint _403 = _402 + uint(cbMatDynParam._m0[0u].w);
    float _410 = (_203 * (((((_309.x * cbMtdParam._m0[11u].x) + (_275.x * cbMtdParam._m0[10u].x)) + (_343.x * cbMtdParam._m0[12u].x)) * _251) + (_236 * cbMtdParam._m0[9u].x))) * cbInstanceData._m0[_403].x;
    float _412 = (_203 * (((((_309.y * cbMtdParam._m0[11u].y) + (_275.y * cbMtdParam._m0[10u].y)) + (_343.y * cbMtdParam._m0[12u].y)) * _251) + (_236 * cbMtdParam._m0[9u].y))) * cbInstanceData._m0[_403].y;
    float _414 = (_203 * (((((_309.z * cbMtdParam._m0[11u].z) + (_275.z * cbMtdParam._m0[10u].z)) + (_343.z * cbMtdParam._m0[12u].z)) * _251) + (_236 * cbMtdParam._m0[9u].z))) * cbInstanceData._m0[_403].z;
    float _415 = isnan(0.0) ? _410 : (isnan(_410) ? 0.0 : max(_410, 0.0));
    float _416 = isnan(0.0) ? _412 : (isnan(_412) ? 0.0 : max(_412, 0.0));
    float _417 = isnan(0.0) ? _414 : (isnan(_414) ? 0.0 : max(_414, 0.0));
    float _423 = cbMtdParam._m0[2u].x * _410;
    float _424 = cbMtdParam._m0[2u].y * _412;
    float _425 = cbMtdParam._m0[2u].z * _414;
    float _837 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _427 = isnan(1.0) ? _837 : (isnan(_837) ? 1.0 : min(_837, 1.0));
    float _432 = cbInstanceData._m0[_401 + 6u].w * (isnan(1.0) ? _789 : (isnan(_789) ? 1.0 : min(_789, 1.0)));
    float _438 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _439 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _454 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_438, _439, (log2((isnan(cbSceneParam._m0[77u].w) ? _376 : (isnan(_376) ? cbSceneParam._m0[77u].w : min(_376, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _456 = _454.x;
    float _457 = _454.y;
    float _458 = _454.z;
    float _459 = _454.w;
    float _540;
    float _542;
    float _544;
    float _546;
    if (_376 > cbSceneParam._m0[78u].w)
    {
        float _502 = isnan(_376) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _376 : min(cbSceneParam._m0[80u].w, _376));
        float _503 = _502 / _376;
        float _514 = _503 * _196;
        float _515 = _197 * _503;
        float _516 = (-0.0) - _515;
        float _517 = _503 * _198;
        float _519 = (cbSceneParam._m0[77u].w * _516) / _502;
        float _520 = _519 + cbSceneParam._m0[79u].w;
        float _521 = cbSceneParam._m0[79u].w - _515;
        float _527 = sqrt(((_514 * _514) + (_515 * _515)) + (_517 * _517));
        float _530 = (1.0 - (cbSceneParam._m0[77u].w / _502)) * _527;
        float _536 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _538 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _671;
        if (abs((_516 - _519) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _671 = ((((_520 > 0.0) ? exp2(_536 * _520) : (2.0 - exp2(_538 * _520))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _530;
        }
        else
        {
            float _626 = 1.0 / cbSceneParam._m0[80u].x;
            float _627 = isnan(_521) ? _520 : (isnan(_520) ? _521 : max(_520, _521));
            float _628 = isnan(_521) ? _520 : (isnan(_520) ? _521 : min(_520, _521));
            float _637 = isnan(0.0) ? _627 : (isnan(_627) ? 0.0 : min(_627, 0.0));
            float _638 = isnan(0.0) ? _628 : (isnan(_628) ? 0.0 : min(_628, 0.0));
            _671 = ((abs(_527 / _516) * cbSceneParam._m0[80u].y) * ((((_637 - _638) * 2.0) - ((exp2(_536 * (isnan(0.0) ? _627 : (isnan(_627) ? 0.0 : max(_627, 0.0)))) - exp2(_536 * (isnan(0.0) ? _628 : (isnan(_628) ? 0.0 : max(_628, 0.0))))) * _626)) - ((exp2(_538 * _637) - exp2(_538 * _638)) * _626))) + (_530 * cbSceneParam._m0[80u].z);
        }
        vec4 _673 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_438, _439, 1.0), 0.0);
        float _682 = exp2((_671 * (-1.44269502162933349609375)) * (1.0 - _673.w));
        float _683 = log2(_682);
        float _699 = log2(_459);
        _540 = (exp2(_699 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_683 * cbSceneParam._m0[78u].x)) * _673.x) / cbSceneParam._m0[78u].x)) + _456;
        _542 = (exp2(_699 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_683 * cbSceneParam._m0[78u].y)) * _673.y) / cbSceneParam._m0[78u].y)) + _457;
        _544 = (exp2(_699 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_683 * cbSceneParam._m0[78u].z)) * _673.z) / cbSceneParam._m0[78u].z)) + _458;
        _546 = _682 * _459;
    }
    else
    {
        _540 = _456;
        _542 = _457;
        _544 = _458;
        _546 = _459;
    }
    bool _709;
    vec4 _556;
    vec4 _580;
    float _582;
    float _587;
    float _588;
    float _589;
    float _592;
    float _595;
    float _598;
    float _599;
    bool _610;
    for (;;)
    {
        _556 = cbMatDynParam._m0[0u];
        float _558 = roundEven(_556.y);
        bool _559 = _558 == 3.0;
        float _561 = log2(_546);
        float _565 = exp2(_561 * cbSceneParam._m0[78u].x);
        float _566 = exp2(_561 * cbSceneParam._m0[78u].y);
        float _567 = exp2(_561 * cbSceneParam._m0[78u].z);
        float _568 = _565 * _415;
        float _569 = _566 * _416;
        float _570 = _567 * _417;
        float _577 = _383 + (-0.5);
        _580 = cbMtdParam._m0[1u];
        _582 = _580.y * _577;
        float _586 = (_558 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _587 = _586 * (_559 ? _568 : (_568 + (cbSceneParam._m0[72u].w * _540)));
        _588 = _586 * (_559 ? _569 : (_569 + (cbSceneParam._m0[72u].w * _542)));
        _589 = _586 * (_559 ? _570 : (_570 + (cbSceneParam._m0[72u].w * _544)));
        _592 = ((_423 * _427) * _565) * _586;
        _595 = ((_424 * _427) * _566) * _586;
        _598 = ((_425 * _427) * _567) * _586;
        _599 = _577 * 0.999000012874603271484375;
        _610 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_610)
        {
            if ((cbInstanceData._m0[_401 + 7u].x + _599) < 0.5)
            {
                _709 = true;
                break;
            }
        }
        uint _663 = _402 + uint(_556.w);
        if ((cbInstanceData._m0[_663].w < 1.0) && ((cbInstanceData._m0[_663].w + _599) < 0.5))
        {
            _709 = true;
            break;
        }
        if ((_582 + 1.0) < _580.x)
        {
            _709 = true;
            break;
        }
        _709 = false;
        break;
    }
    float _714;
    if (_709)
    {
        discard_state = true;
        _714 = 0.0;
    }
    else
    {
        _714 = _432;
    }
    SV_Target.x = _587;
    SV_Target.y = _588;
    SV_Target.z = _589;
    SV_Target.w = _714;
    SV_Target_1.x = _592;
    SV_Target_1.y = _595;
    SV_Target_1.z = _598;
    SV_Target_1.w = _432;
    discard_exit();
}


