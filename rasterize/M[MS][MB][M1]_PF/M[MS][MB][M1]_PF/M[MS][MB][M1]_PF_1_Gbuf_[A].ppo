#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_MS_MB_M1_PF_snp_0_Texture2D_0;
layout(set = 0, binding = 12) uniform texture2D M_MS_MB_M1_PF_snp_0_Texture2D_2;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M1_PF_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _151 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _152 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _153 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _159 = inversesqrt(dot(vec3(_151, _152, _153), vec3(_151, _152, _153)));
    float _166 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _173 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _196 = texture(sampler2D(M_MS_MB_M1_PF_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _202 = _196.x * cbMtdParam._m0[9u].x;
    float _203 = _196.y * cbMtdParam._m0[9u].y;
    float _204 = _196.z * cbMtdParam._m0[9u].z;
    vec4 _217 = texture(sampler2D(M_MS_MB_M1_PF_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _221 = _217.z;
    float _226 = (_217.x * 2.0) + (-1.0);
    float _228 = (_217.y * 2.0) + (-1.0);
    float _229 = dot(vec2(_226, _228), vec2(_226, _228));
    float _526 = isnan(0.0) ? _229 : (isnan(_229) ? 0.0 : max(_229, 0.0));
    float _235 = sqrt(1.0 - (isnan(1.0) ? _526 : (isnan(_526) ? 1.0 : min(_526, 1.0))));
    vec4 _248 = texture(sampler2D(M_MS_MB_M1_PF_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _250 = _248.x;
    float _255 = cbMtdParam._m0[22u].x + _217.w;
    float _259 = gl_FragCoord.x * 0.125;
    float _261 = gl_FragCoord.y * 0.125;
    float _272 = fma(_235, _166 * NORMAL.x, fma(_228, _173 * TANGENT.x, (_159 * _151) * _226));
    float _275 = fma(_235, _166 * NORMAL.y, fma(_228, _173 * TANGENT.y, (_159 * _152) * _226));
    float _278 = fma(_235, _166 * NORMAL.z, fma(_228, _173 * TANGENT.z, (_159 * _153) * _226));
    float _282 = inversesqrt(dot(vec3(_272, _275, _278), vec3(_272, _275, _278)));
    float _537 = isnan(0.0) ? _221 : (isnan(_221) ? 0.0 : max(_221, 0.0));
    float _548 = isnan(0.0) ? _255 : (isnan(_255) ? 0.0 : max(_255, 0.0));
    float _284 = isnan(1.0) ? _548 : (isnan(_548) ? 1.0 : min(_548, 1.0));
    float _559 = isnan(0.0) ? _202 : (isnan(_202) ? 0.0 : max(_202, 0.0));
    float _285 = isnan(1.0) ? _559 : (isnan(_559) ? 1.0 : min(_559, 1.0));
    float _570 = isnan(0.0) ? _203 : (isnan(_203) ? 0.0 : max(_203, 0.0));
    float _286 = isnan(1.0) ? _570 : (isnan(_570) ? 1.0 : min(_570, 1.0));
    float _581 = isnan(0.0) ? _204 : (isnan(_204) ? 0.0 : max(_204, 0.0));
    float _287 = isnan(1.0) ? _581 : (isnan(_581) ? 1.0 : min(_581, 1.0));
    float _592 = isnan(0.0) ? _250 : (isnan(_250) ? 0.0 : max(_250, 0.0));
    uint _290 = uint(roundEven(NORMAL.w));
    if (!(cbMtdParam._m0[25u].x >= ((texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_259, _261)).w * 0.9900000095367431640625) + 0.00999999977648258209228515625)))
    {
        discard_state = true;
    }
    float _336 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _346 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _336);
    float _347 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _336);
    float _348 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _336);
    vec4 _350 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_259, _261));
    float _352 = _350.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _415 = sqrt(((_346 * _346) + (_347 * _347)) + (_348 * _348));
        float _422 = (cbMatDynParam._m0[5u].x * _415) + cbMatDynParam._m0[5u].y;
        float _603 = isnan(0.0) ? _422 : (isnan(_422) ? 0.0 : max(_422, 0.0));
        float _423 = isnan(1.0) ? _603 : (isnan(_603) ? 1.0 : min(_603, 1.0));
        float _427 = (cbMatDynParam._m0[5u].z * _415) + cbMatDynParam._m0[5u].w;
        float _614 = isnan(0.0) ? _427 : (isnan(_427) ? 0.0 : max(_427, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _614 : (isnan(_614) ? 1.0 : min(_614, 1.0))) - _423)) + _423) < ((_352 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _451;
    uint _372;
    vec4 _377;
    float _384;
    float _385;
    float _386;
    float _387;
    float _391;
    vec4 _395;
    float _397;
    float _398;
    bool _409;
    for (;;)
    {
        _372 = _290 * 13u;
        _377 = cbInstanceData._m0[(_372 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _381 = (cbMtdParam._m0[0u].x * _285) * _377.x;
        float _382 = (cbMtdParam._m0[0u].y * _286) * _377.y;
        float _383 = (cbMtdParam._m0[0u].z * _287) * _377.z;
        float _625 = isnan(0.0) ? _381 : (isnan(_381) ? 0.0 : max(_381, 0.0));
        _384 = isnan(1.0) ? _625 : (isnan(_625) ? 1.0 : min(_625, 1.0));
        float _636 = isnan(0.0) ? _382 : (isnan(_382) ? 0.0 : max(_382, 0.0));
        _385 = isnan(1.0) ? _636 : (isnan(_636) ? 1.0 : min(_636, 1.0));
        float _647 = isnan(0.0) ? _383 : (isnan(_383) ? 0.0 : max(_383, 0.0));
        _386 = isnan(1.0) ? _647 : (isnan(_647) ? 1.0 : min(_647, 1.0));
        _387 = _284 * TEXCOORD_5.w;
        _391 = cbInstanceData._m0[_372 + 6u].w;
        float _392 = _352 + (-0.5);
        _395 = cbMtdParam._m0[1u];
        _397 = _395.y * _392;
        _398 = _392 * 0.999000012874603271484375;
        _409 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_409)
        {
            if ((cbInstanceData._m0[_372 + 7u].x + _398) < 0.5)
            {
                _451 = true;
                break;
            }
        }
        if ((_377.w < 1.0) && ((_377.w + _398) < 0.5))
        {
            _451 = true;
            break;
        }
        if ((_397 + 1.0) < _395.x)
        {
            _451 = true;
            break;
        }
        _451 = false;
        break;
    }
    if (_451)
    {
        discard_state = true;
    }
    bool _477 = cbMtdParam._m0[1u].z != 0.0;
    float _478 = _477 ? _391 : 0.0;
    SV_Target.x = ((_272 * 0.5) * _282) + 0.500488758087158203125;
    SV_Target.y = ((_275 * 0.5) * _282) + 0.500488758087158203125;
    SV_Target.z = ((_278 * 0.5) * _282) + 0.500488758087158203125;
    SV_Target.w = _478;
    SV_Target_1.x = isnan(1.0) ? _592 : (isnan(_592) ? 1.0 : min(_592, 1.0));
    SV_Target_1.y = isnan(1.0) ? _537 : (isnan(_537) ? 1.0 : min(_537, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _477 ? _391 : _387;
    SV_Target_2.x = _384;
    SV_Target_2.y = _385;
    SV_Target_2.z = _386;
    SV_Target_2.w = _477 ? _391 : (float(floatBitsToUint(cbInstanceData._m0[_372 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _478;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _478;
    discard_exit();
}


