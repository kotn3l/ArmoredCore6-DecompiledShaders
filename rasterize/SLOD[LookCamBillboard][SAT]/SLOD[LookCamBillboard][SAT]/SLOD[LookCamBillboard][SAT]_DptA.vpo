#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out float TEXCOORD_2;
layout(location = 4, component = 1) out vec2 TEXCOORD_6;
layout(location = 4, component = 3) out float TEXCOORD_10;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_2 = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_10 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _139 = float(NORMAL.x) + (-127.0);
    precise float _141 = float(NORMAL.y) + (-127.0);
    precise float _142 = float(NORMAL.z) + (-127.0);
    precise float _143 = _139 * 0.0078740157186985015869140625;
    precise float _145 = _141 * 0.0078740157186985015869140625;
    precise float _146 = _142 * 0.0078740157186985015869140625;
    precise float _151 = POSITION.x + 0.0;
    precise float _152 = POSITION.y + 0.0;
    precise float _153 = POSITION.z + 0.0;
    uint _158 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _160 = texelFetch(g_InstanceIndexBuffer, int(_158));
    uint _161 = _160.x;
    uint _163 = _161 * 13u;
    uint _171 = (floatBitsToUint(cbInstanceData._m0[_163 + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _178 = _171 + 1u;
    uint _185 = _171 + 2u;
    float _196 = inversesqrt(dot(vec3(cbObjMatrix._m0[_171].x, cbObjMatrix._m0[_178].x, cbObjMatrix._m0[_185].x), vec3(cbObjMatrix._m0[_171].x, cbObjMatrix._m0[_178].x, cbObjMatrix._m0[_185].x)));
    precise float _197 = cbObjMatrix._m0[_171].x * _196;
    precise float _198 = cbObjMatrix._m0[_178].x * _196;
    precise float _199 = cbObjMatrix._m0[_185].x * _196;
    float _203 = inversesqrt(dot(vec3(cbObjMatrix._m0[_171].y, cbObjMatrix._m0[_178].y, cbObjMatrix._m0[_185].y), vec3(cbObjMatrix._m0[_171].y, cbObjMatrix._m0[_178].y, cbObjMatrix._m0[_185].y)));
    precise float _204 = cbObjMatrix._m0[_171].y * _203;
    precise float _205 = cbObjMatrix._m0[_178].y * _203;
    precise float _206 = cbObjMatrix._m0[_185].y * _203;
    float _210 = inversesqrt(dot(vec3(cbObjMatrix._m0[_171].z, cbObjMatrix._m0[_178].z, cbObjMatrix._m0[_185].z), vec3(cbObjMatrix._m0[_171].z, cbObjMatrix._m0[_178].z, cbObjMatrix._m0[_185].z)));
    precise float _211 = cbObjMatrix._m0[_171].z * _210;
    precise float _212 = cbObjMatrix._m0[_178].z * _210;
    precise float _213 = cbObjMatrix._m0[_185].z * _210;
    precise float _231 = _197 * cbSceneParam._m0[5u].x;
    precise float _232 = _198 * cbSceneParam._m0[5u].y;
    precise float _233 = _232 + _231;
    precise float _234 = _199 * cbSceneParam._m0[5u].z;
    precise float _235 = _234 + _233;
    precise float _236 = _197 * cbSceneParam._m0[6u].x;
    precise float _237 = _198 * cbSceneParam._m0[6u].y;
    precise float _238 = _237 + _236;
    precise float _239 = _199 * cbSceneParam._m0[6u].z;
    precise float _240 = _239 + _238;
    precise float _241 = _197 * cbSceneParam._m0[7u].x;
    precise float _242 = _198 * cbSceneParam._m0[7u].y;
    precise float _243 = _242 + _241;
    precise float _244 = _199 * cbSceneParam._m0[7u].z;
    precise float _245 = _244 + _243;
    precise float _246 = _204 * cbSceneParam._m0[5u].x;
    precise float _247 = _205 * cbSceneParam._m0[5u].y;
    precise float _248 = _247 + _246;
    precise float _249 = _206 * cbSceneParam._m0[5u].z;
    precise float _250 = _249 + _248;
    precise float _251 = _204 * cbSceneParam._m0[6u].x;
    precise float _252 = _205 * cbSceneParam._m0[6u].y;
    precise float _253 = _252 + _251;
    precise float _254 = _206 * cbSceneParam._m0[6u].z;
    precise float _255 = _254 + _253;
    precise float _256 = _204 * cbSceneParam._m0[7u].x;
    precise float _257 = _205 * cbSceneParam._m0[7u].y;
    precise float _258 = _257 + _256;
    precise float _259 = _206 * cbSceneParam._m0[7u].z;
    precise float _260 = _259 + _258;
    precise float _261 = _211 * cbSceneParam._m0[5u].x;
    precise float _262 = _212 * cbSceneParam._m0[5u].y;
    precise float _263 = _262 + _261;
    precise float _264 = _213 * cbSceneParam._m0[5u].z;
    precise float _265 = _264 + _263;
    precise float _266 = _211 * cbSceneParam._m0[6u].x;
    precise float _267 = _212 * cbSceneParam._m0[6u].y;
    precise float _268 = _267 + _266;
    precise float _269 = _213 * cbSceneParam._m0[6u].z;
    precise float _270 = _269 + _268;
    precise float _271 = _211 * cbSceneParam._m0[7u].x;
    precise float _272 = _212 * cbSceneParam._m0[7u].y;
    precise float _273 = _272 + _271;
    precise float _274 = _213 * cbSceneParam._m0[7u].z;
    precise float _275 = _274 + _273;
    precise float _276 = _145 * 0.0;
    precise float _277 = _276 - _146;
    precise float _278 = _146 * 0.0;
    precise float _279 = _143 * 0.0;
    precise float _280 = _278 - _279;
    precise float _281 = _143 - _276;
    precise float _282 = _146 * _280;
    precise float _283 = _145 * _281;
    precise float _284 = _282 - _283;
    precise float _285 = _143 * _281;
    precise float _286 = _146 * _277;
    precise float _287 = _285 - _286;
    precise float _288 = _145 * _277;
    precise float _289 = _143 * _280;
    precise float _290 = _288 - _289;
    float _294 = inversesqrt(dot(vec3(_277, _280, _281), vec3(_277, _280, _281)));
    precise float _295 = _277 * _294;
    precise float _296 = _280 * _294;
    precise float _297 = _281 * _294;
    float _301 = inversesqrt(dot(vec3(_284, _287, _290), vec3(_284, _287, _290)));
    precise float _302 = _284 * _301;
    precise float _303 = _287 * _301;
    precise float _304 = _290 * _301;
    precise float _305 = (-0.0) - _143;
    precise float _307 = (-0.0) - _145;
    precise float _308 = (-0.0) - _146;
    float _312 = inversesqrt(dot(vec3(_305, _307, _308), vec3(_305, _307, _308)));
    precise float _313 = _312 * _305;
    precise float _314 = _312 * _307;
    precise float _315 = _312 * _308;
    precise float _316 = _151 * _295;
    precise float _317 = _152 * _296;
    precise float _318 = _317 + _316;
    precise float _319 = _153 * _297;
    precise float _320 = _319 + _318;
    precise float _321 = _151 * _302;
    precise float _322 = _152 * _303;
    precise float _323 = _322 + _321;
    precise float _324 = _153 * _304;
    precise float _325 = _324 + _323;
    precise float _326 = _151 * _313;
    precise float _327 = _152 * _314;
    precise float _328 = _327 + _326;
    precise float _329 = _153 * _315;
    precise float _330 = _329 + _328;
    precise float _331 = _235 * _320;
    precise float _332 = _240 * _325;
    precise float _333 = _332 + _331;
    precise float _334 = _245 * _330;
    precise float _335 = _334 + _333;
    precise float _336 = _250 * _320;
    precise float _337 = _255 * _325;
    precise float _338 = _337 + _336;
    precise float _339 = _260 * _330;
    precise float _340 = _339 + _338;
    precise float _341 = _265 * _320;
    precise float _342 = _270 * _325;
    precise float _343 = _342 + _341;
    precise float _344 = _275 * _330;
    precise float _345 = _344 + _343;
    precise float _346 = _335 + 0.0;
    precise float _347 = _340 + 0.0;
    precise float _348 = _345 + 0.0;
    precise float _349 = cbObjMatrix._m0[_171].x * _346;
    precise float _350 = _347 * cbObjMatrix._m0[_171].y;
    precise float _351 = _350 + _349;
    precise float _352 = _348 * cbObjMatrix._m0[_171].z;
    precise float _353 = _352 + _351;
    precise float _354 = 1.0 * cbObjMatrix._m0[_171].w;
    precise float _356 = _354 + _353;
    precise float _357 = cbObjMatrix._m0[_178].x * _346;
    precise float _358 = _347 * cbObjMatrix._m0[_178].y;
    precise float _359 = _358 + _357;
    precise float _360 = _348 * cbObjMatrix._m0[_178].z;
    precise float _361 = _360 + _359;
    precise float _362 = 1.0 * cbObjMatrix._m0[_178].w;
    precise float _363 = _362 + _361;
    precise float _364 = cbObjMatrix._m0[_185].x * _346;
    precise float _365 = _347 * cbObjMatrix._m0[_185].y;
    precise float _366 = _365 + _364;
    precise float _367 = _348 * cbObjMatrix._m0[_185].z;
    precise float _368 = _367 + _366;
    precise float _369 = 1.0 * cbObjMatrix._m0[_185].w;
    precise float _370 = _369 + _368;
    float _385 = fma(cbSceneParam._m0[3u].z, _199, fma(cbSceneParam._m0[3u].y, _198, cbSceneParam._m0[3u].x * _197)) - cbObjMatrix._m0[_171].w;
    float _386 = fma(cbSceneParam._m0[3u].z, _206, fma(cbSceneParam._m0[3u].y, _205, cbSceneParam._m0[3u].x * _204)) - cbObjMatrix._m0[_178].w;
    float _387 = fma(cbSceneParam._m0[3u].z, _213, fma(cbSceneParam._m0[3u].y, _212, cbSceneParam._m0[3u].x * _211)) - cbObjMatrix._m0[_185].w;
    float _391 = inversesqrt(dot(vec3(_385, _386, _387), vec3(_385, _386, _387)));
    float _392 = _391 * _385;
    float _393 = _391 * _386;
    float _394 = _391 * _387;
    float _397 = fma(_394, _297, fma(_393, _296, _392 * _295));
    float _400 = fma(_394, _304, fma(_393, _303, _392 * _302));
    float _403 = fma(_394, _315, fma(_393, _314, _392 * _313));
    float _407 = inversesqrt(dot(vec3(_397, _400, _403), vec3(_397, _400, _403)));
    float _408 = _407 * _397;
    float _409 = _407 * _400;
    float _410 = _407 * _403;
    float _427 = float(int(uint(_408 > 0.0) - uint(_408 < 0.0)));
    float _429 = float(int(uint(_410 > 0.0) - uint(_410 < 0.0)));
    float _430 = dot(vec3(_408, _409, _410), vec3(_427, float(int(uint(_409 > 0.0) - uint(_409 < 0.0))), _429));
    float _433 = _408 / _430;
    float _435 = _410 / _430;
    float _443;
    float _444;
    if ((_409 / _430) < 0.0)
    {
        _443 = _427 - (abs(_435) * _427);
        _444 = _429 - (abs(_433) * _429);
    }
    else
    {
        _443 = _433;
        _444 = _435;
    }
    float _448 = (_443 * 0.5) + 0.5;
    float _449 = (_444 * 0.5) + 0.5;
    float _601 = isnan(0.0) ? _448 : (isnan(_448) ? 0.0 : max(_448, 0.0));
    float _612 = isnan(0.0) ? _449 : (isnan(_449) ? 0.0 : max(_449, 0.0));
    float _453 = cbSceneParam._m0[3u].x - _356;
    float _454 = cbSceneParam._m0[3u].y - _363;
    float _455 = cbSceneParam._m0[3u].z - _370;
    float _464 = fma(_146, _297, fma(_145, _296, _295 * _143));
    float _467 = fma(_146, _304, fma(_145, _303, _302 * _143));
    float _470 = fma(_146, _315, fma(_145, _314, _313 * _143));
    float _473 = fma(_245, _470, fma(_240, _467, _464 * _235));
    float _476 = fma(_260, _470, fma(_255, _467, _464 * _250));
    float _479 = fma(_275, _470, fma(_270, _467, _464 * _265));
    float _482 = fma(_479, cbObjMatrix._m0[_171].z, fma(_476, cbObjMatrix._m0[_171].y, _473 * cbObjMatrix._m0[_171].x));
    float _485 = fma(_479, cbObjMatrix._m0[_178].z, fma(_476, cbObjMatrix._m0[_178].y, _473 * cbObjMatrix._m0[_178].x));
    float _488 = fma(_479, cbObjMatrix._m0[_185].z, fma(_476, cbObjMatrix._m0[_185].y, _473 * cbObjMatrix._m0[_185].x));
    float _490 = (-0.0) - _488;
    precise float _497 = _356 + 0.0;
    precise float _498 = _363 + 0.0;
    precise float _499 = _370 + 0.0;
    precise float _500 = _497 - cbSceneParam._m0[3u].x;
    precise float _501 = _498 - cbSceneParam._m0[3u].y;
    precise float _502 = _499 - cbSceneParam._m0[3u].z;
    precise float _530 = _500 * cbSceneParam._m0[24u].x;
    precise float _531 = _501 * cbSceneParam._m0[24u].y;
    precise float _532 = _531 + _530;
    precise float _533 = _502 * cbSceneParam._m0[24u].z;
    precise float _534 = _533 + _532;
    precise float _535 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _536 = _535 + _534;
    precise float _537 = _500 * cbSceneParam._m0[25u].x;
    precise float _538 = _501 * cbSceneParam._m0[25u].y;
    precise float _539 = _538 + _537;
    precise float _540 = _502 * cbSceneParam._m0[25u].z;
    precise float _541 = _540 + _539;
    precise float _542 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _543 = _542 + _541;
    precise float _544 = _500 * cbSceneParam._m0[26u].x;
    precise float _545 = _501 * cbSceneParam._m0[26u].y;
    precise float _546 = _545 + _544;
    precise float _547 = _502 * cbSceneParam._m0[26u].z;
    precise float _548 = _547 + _546;
    precise float _549 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _550 = _549 + _548;
    precise float _551 = _500 * cbSceneParam._m0[27u].x;
    precise float _552 = _501 * cbSceneParam._m0[27u].y;
    precise float _553 = _552 + _551;
    precise float _554 = _502 * cbSceneParam._m0[27u].z;
    precise float _555 = _554 + _553;
    precise float _556 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _557 = _556 + _555;
    gl_Position.x = _536;
    gl_Position.y = _543;
    gl_Position.z = _550;
    gl_Position.w = _557;
    NORMAL_1.x = _482;
    NORMAL_1.y = _485;
    NORMAL_1.z = _488;
    NORMAL_1.w = float(_161);
    TANGENT_1.x = (-0.0) - (_482 * _485);
    TANGENT_1.y = (_482 * _482) - (_488 * _490);
    TANGENT_1.z = _485 * _490;
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = isnan(1.0) ? _601 : (isnan(_601) ? 1.0 : min(_601, 1.0));
    TEXCOORD_1.w = 1.0 - (isnan(1.0) ? _612 : (isnan(_612) ? 1.0 : min(_612, 1.0)));
    TEXCOORD_2 = COLOR_1.x;
    TEXCOORD_6.x = _550;
    TEXCOORD_6.y = _557;
    TEXCOORD_10 = sqrt(((_453 * _453) + (_454 * _454)) + (_455 * _455));
    gl_ClipDistance[0u] = dot(vec4(_536, _543, _550, _557), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_536, _543, _550, _557), vec4(cbInstanceData._m0[_163 + 3u]));
}


