#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out float TEXCOORD_2;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_2 = 0.0;
    precise float _133 = float(NORMAL.x) + (-127.0);
    precise float _135 = float(NORMAL.y) + (-127.0);
    precise float _136 = float(NORMAL.z) + (-127.0);
    precise float _137 = _133 * 0.0078740157186985015869140625;
    precise float _139 = _135 * 0.0078740157186985015869140625;
    precise float _140 = _136 * 0.0078740157186985015869140625;
    precise float _145 = POSITION.x + 0.0;
    precise float _146 = POSITION.y + 0.0;
    precise float _147 = POSITION.z + 0.0;
    uint _152 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _154 = texelFetch(g_InstanceIndexBuffer, int(_152));
    uint _155 = _154.x;
    uint _165 = (floatBitsToUint(cbInstanceData._m0[(_155 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _172 = _165 + 1u;
    uint _179 = _165 + 2u;
    float _190 = inversesqrt(dot(vec3(cbObjMatrix._m0[_165].x, cbObjMatrix._m0[_172].x, cbObjMatrix._m0[_179].x), vec3(cbObjMatrix._m0[_165].x, cbObjMatrix._m0[_172].x, cbObjMatrix._m0[_179].x)));
    precise float _191 = cbObjMatrix._m0[_165].x * _190;
    precise float _192 = cbObjMatrix._m0[_172].x * _190;
    precise float _193 = cbObjMatrix._m0[_179].x * _190;
    float _197 = inversesqrt(dot(vec3(cbObjMatrix._m0[_165].y, cbObjMatrix._m0[_172].y, cbObjMatrix._m0[_179].y), vec3(cbObjMatrix._m0[_165].y, cbObjMatrix._m0[_172].y, cbObjMatrix._m0[_179].y)));
    precise float _198 = cbObjMatrix._m0[_165].y * _197;
    precise float _199 = cbObjMatrix._m0[_172].y * _197;
    precise float _200 = cbObjMatrix._m0[_179].y * _197;
    float _204 = inversesqrt(dot(vec3(cbObjMatrix._m0[_165].z, cbObjMatrix._m0[_172].z, cbObjMatrix._m0[_179].z), vec3(cbObjMatrix._m0[_165].z, cbObjMatrix._m0[_172].z, cbObjMatrix._m0[_179].z)));
    precise float _205 = cbObjMatrix._m0[_165].z * _204;
    precise float _206 = cbObjMatrix._m0[_172].z * _204;
    precise float _207 = cbObjMatrix._m0[_179].z * _204;
    precise float _225 = _191 * cbSceneParam._m0[5u].x;
    precise float _226 = _192 * cbSceneParam._m0[5u].y;
    precise float _227 = _226 + _225;
    precise float _228 = _193 * cbSceneParam._m0[5u].z;
    precise float _229 = _228 + _227;
    precise float _230 = _191 * cbSceneParam._m0[6u].x;
    precise float _231 = _192 * cbSceneParam._m0[6u].y;
    precise float _232 = _231 + _230;
    precise float _233 = _193 * cbSceneParam._m0[6u].z;
    precise float _234 = _233 + _232;
    precise float _235 = _191 * cbSceneParam._m0[7u].x;
    precise float _236 = _192 * cbSceneParam._m0[7u].y;
    precise float _237 = _236 + _235;
    precise float _238 = _193 * cbSceneParam._m0[7u].z;
    precise float _239 = _238 + _237;
    precise float _240 = _198 * cbSceneParam._m0[5u].x;
    precise float _241 = _199 * cbSceneParam._m0[5u].y;
    precise float _242 = _241 + _240;
    precise float _243 = _200 * cbSceneParam._m0[5u].z;
    precise float _244 = _243 + _242;
    precise float _245 = _198 * cbSceneParam._m0[6u].x;
    precise float _246 = _199 * cbSceneParam._m0[6u].y;
    precise float _247 = _246 + _245;
    precise float _248 = _200 * cbSceneParam._m0[6u].z;
    precise float _249 = _248 + _247;
    precise float _250 = _198 * cbSceneParam._m0[7u].x;
    precise float _251 = _199 * cbSceneParam._m0[7u].y;
    precise float _252 = _251 + _250;
    precise float _253 = _200 * cbSceneParam._m0[7u].z;
    precise float _254 = _253 + _252;
    precise float _255 = _205 * cbSceneParam._m0[5u].x;
    precise float _256 = _206 * cbSceneParam._m0[5u].y;
    precise float _257 = _256 + _255;
    precise float _258 = _207 * cbSceneParam._m0[5u].z;
    precise float _259 = _258 + _257;
    precise float _260 = _205 * cbSceneParam._m0[6u].x;
    precise float _261 = _206 * cbSceneParam._m0[6u].y;
    precise float _262 = _261 + _260;
    precise float _263 = _207 * cbSceneParam._m0[6u].z;
    precise float _264 = _263 + _262;
    precise float _265 = _205 * cbSceneParam._m0[7u].x;
    precise float _266 = _206 * cbSceneParam._m0[7u].y;
    precise float _267 = _266 + _265;
    precise float _268 = _207 * cbSceneParam._m0[7u].z;
    precise float _269 = _268 + _267;
    precise float _270 = _139 * 0.0;
    precise float _271 = _270 - _140;
    precise float _272 = _140 * 0.0;
    precise float _273 = _137 * 0.0;
    precise float _274 = _272 - _273;
    precise float _275 = _137 - _270;
    precise float _276 = _140 * _274;
    precise float _277 = _139 * _275;
    precise float _278 = _276 - _277;
    precise float _279 = _137 * _275;
    precise float _280 = _140 * _271;
    precise float _281 = _279 - _280;
    precise float _282 = _139 * _271;
    precise float _283 = _137 * _274;
    precise float _284 = _282 - _283;
    float _288 = inversesqrt(dot(vec3(_271, _274, _275), vec3(_271, _274, _275)));
    precise float _289 = _271 * _288;
    precise float _290 = _274 * _288;
    precise float _291 = _275 * _288;
    float _295 = inversesqrt(dot(vec3(_278, _281, _284), vec3(_278, _281, _284)));
    precise float _296 = _278 * _295;
    precise float _297 = _281 * _295;
    precise float _298 = _284 * _295;
    precise float _299 = (-0.0) - _137;
    precise float _301 = (-0.0) - _139;
    precise float _302 = (-0.0) - _140;
    float _306 = inversesqrt(dot(vec3(_299, _301, _302), vec3(_299, _301, _302)));
    precise float _307 = _306 * _299;
    precise float _308 = _306 * _301;
    precise float _309 = _306 * _302;
    precise float _310 = _145 * _289;
    precise float _311 = _146 * _290;
    precise float _312 = _311 + _310;
    precise float _313 = _147 * _291;
    precise float _314 = _313 + _312;
    precise float _315 = _145 * _296;
    precise float _316 = _146 * _297;
    precise float _317 = _316 + _315;
    precise float _318 = _147 * _298;
    precise float _319 = _318 + _317;
    precise float _320 = _145 * _307;
    precise float _321 = _146 * _308;
    precise float _322 = _321 + _320;
    precise float _323 = _147 * _309;
    precise float _324 = _323 + _322;
    precise float _325 = _229 * _314;
    precise float _326 = _234 * _319;
    precise float _327 = _326 + _325;
    precise float _328 = _239 * _324;
    precise float _329 = _328 + _327;
    precise float _330 = _244 * _314;
    precise float _331 = _249 * _319;
    precise float _332 = _331 + _330;
    precise float _333 = _254 * _324;
    precise float _334 = _333 + _332;
    precise float _335 = _259 * _314;
    precise float _336 = _264 * _319;
    precise float _337 = _336 + _335;
    precise float _338 = _269 * _324;
    precise float _339 = _338 + _337;
    precise float _340 = _329 + 0.0;
    precise float _341 = _334 + 0.0;
    precise float _342 = _339 + 0.0;
    precise float _343 = cbObjMatrix._m0[_165].x * _340;
    precise float _344 = _341 * cbObjMatrix._m0[_165].y;
    precise float _345 = _344 + _343;
    precise float _346 = _342 * cbObjMatrix._m0[_165].z;
    precise float _347 = _346 + _345;
    precise float _348 = 1.0 * cbObjMatrix._m0[_165].w;
    precise float _350 = _348 + _347;
    precise float _351 = cbObjMatrix._m0[_172].x * _340;
    precise float _352 = _341 * cbObjMatrix._m0[_172].y;
    precise float _353 = _352 + _351;
    precise float _354 = _342 * cbObjMatrix._m0[_172].z;
    precise float _355 = _354 + _353;
    precise float _356 = 1.0 * cbObjMatrix._m0[_172].w;
    precise float _357 = _356 + _355;
    precise float _358 = cbObjMatrix._m0[_179].x * _340;
    precise float _359 = _341 * cbObjMatrix._m0[_179].y;
    precise float _360 = _359 + _358;
    precise float _361 = _342 * cbObjMatrix._m0[_179].z;
    precise float _362 = _361 + _360;
    precise float _363 = 1.0 * cbObjMatrix._m0[_179].w;
    precise float _364 = _363 + _362;
    float _379 = fma(cbSceneParam._m0[3u].z, _193, fma(cbSceneParam._m0[3u].y, _192, cbSceneParam._m0[3u].x * _191)) - cbObjMatrix._m0[_165].w;
    float _380 = fma(cbSceneParam._m0[3u].z, _200, fma(cbSceneParam._m0[3u].y, _199, cbSceneParam._m0[3u].x * _198)) - cbObjMatrix._m0[_172].w;
    float _381 = fma(cbSceneParam._m0[3u].z, _207, fma(cbSceneParam._m0[3u].y, _206, cbSceneParam._m0[3u].x * _205)) - cbObjMatrix._m0[_179].w;
    float _385 = inversesqrt(dot(vec3(_379, _380, _381), vec3(_379, _380, _381)));
    float _386 = _385 * _379;
    float _387 = _385 * _380;
    float _388 = _385 * _381;
    float _391 = fma(_388, _291, fma(_387, _290, _386 * _289));
    float _394 = fma(_388, _298, fma(_387, _297, _386 * _296));
    float _397 = fma(_388, _309, fma(_387, _308, _386 * _307));
    float _401 = inversesqrt(dot(vec3(_391, _394, _397), vec3(_391, _394, _397)));
    float _402 = _401 * _391;
    float _403 = _401 * _394;
    float _404 = _401 * _397;
    float _421 = float(int(uint(_402 > 0.0) - uint(_402 < 0.0)));
    float _423 = float(int(uint(_404 > 0.0) - uint(_404 < 0.0)));
    float _424 = dot(vec3(_402, _403, _404), vec3(_421, float(int(uint(_403 > 0.0) - uint(_403 < 0.0))), _423));
    float _427 = _402 / _424;
    float _429 = _404 / _424;
    float _437;
    float _438;
    if ((_403 / _424) < 0.0)
    {
        _437 = _421 - (abs(_429) * _421);
        _438 = _423 - (abs(_427) * _423);
    }
    else
    {
        _437 = _427;
        _438 = _429;
    }
    float _442 = (_437 * 0.5) + 0.5;
    float _443 = (_438 * 0.5) + 0.5;
    float _567 = isnan(0.0) ? _442 : (isnan(_442) ? 0.0 : max(_442, 0.0));
    float _578 = isnan(0.0) ? _443 : (isnan(_443) ? 0.0 : max(_443, 0.0));
    float _449 = fma(_140, _291, fma(_139, _290, _289 * _137));
    float _452 = fma(_140, _298, fma(_139, _297, _296 * _137));
    float _455 = fma(_140, _309, fma(_139, _308, _307 * _137));
    float _458 = fma(_239, _455, fma(_234, _452, _449 * _229));
    float _461 = fma(_254, _455, fma(_249, _452, _449 * _244));
    float _464 = fma(_269, _455, fma(_264, _452, _449 * _259));
    float _467 = fma(_464, cbObjMatrix._m0[_165].z, fma(_461, cbObjMatrix._m0[_165].y, _458 * cbObjMatrix._m0[_165].x));
    float _470 = fma(_464, cbObjMatrix._m0[_172].z, fma(_461, cbObjMatrix._m0[_172].y, _458 * cbObjMatrix._m0[_172].x));
    float _473 = fma(_464, cbObjMatrix._m0[_179].z, fma(_461, cbObjMatrix._m0[_179].y, _458 * cbObjMatrix._m0[_179].x));
    float _475 = (-0.0) - _473;
    precise float _482 = _350 + 0.0;
    precise float _483 = _357 + 0.0;
    precise float _484 = _364 + 0.0;
    precise float _485 = _482 - cbSceneParam._m0[3u].x;
    precise float _486 = _483 - cbSceneParam._m0[3u].y;
    precise float _487 = _484 - cbSceneParam._m0[3u].z;
    precise float _515 = _485 * cbSceneParam._m0[24u].x;
    precise float _516 = _486 * cbSceneParam._m0[24u].y;
    precise float _517 = _516 + _515;
    precise float _518 = _487 * cbSceneParam._m0[24u].z;
    precise float _519 = _518 + _517;
    precise float _520 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _521 = _520 + _519;
    precise float _522 = _485 * cbSceneParam._m0[25u].x;
    precise float _523 = _486 * cbSceneParam._m0[25u].y;
    precise float _524 = _523 + _522;
    precise float _525 = _487 * cbSceneParam._m0[25u].z;
    precise float _526 = _525 + _524;
    precise float _527 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _528 = _527 + _526;
    precise float _529 = _485 * cbSceneParam._m0[26u].x;
    precise float _530 = _486 * cbSceneParam._m0[26u].y;
    precise float _531 = _530 + _529;
    precise float _532 = _487 * cbSceneParam._m0[26u].z;
    precise float _533 = _532 + _531;
    precise float _534 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _535 = _534 + _533;
    precise float _536 = _485 * cbSceneParam._m0[27u].x;
    precise float _537 = _486 * cbSceneParam._m0[27u].y;
    precise float _538 = _537 + _536;
    precise float _539 = _487 * cbSceneParam._m0[27u].z;
    precise float _540 = _539 + _538;
    precise float _541 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _542 = _541 + _540;
    gl_Position.x = _521;
    gl_Position.y = _528;
    gl_Position.z = _535;
    gl_Position.w = _542;
    POSITION_1.x = _521;
    POSITION_1.y = _528;
    POSITION_1.z = _535;
    POSITION_1.w = _542;
    NORMAL_1.x = _467;
    NORMAL_1.y = _470;
    NORMAL_1.z = _473;
    NORMAL_1.w = float(_155);
    TANGENT_1.x = (-0.0) - (_467 * _470);
    TANGENT_1.y = (_467 * _467) - (_473 * _475);
    TANGENT_1.z = _470 * _475;
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = isnan(1.0) ? _567 : (isnan(_567) ? 1.0 : min(_567, 1.0));
    TEXCOORD_1.w = 1.0 - (isnan(1.0) ? _578 : (isnan(_578) ? 1.0 : min(_578, 1.0)));
    TEXCOORD_2 = COLOR_1.x;
}


