#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out float TEXCOORD_2;
layout(location = 6) out vec4 TEXCOORD_7;
layout(location = 7) out vec4 TEXCOORD_8;
layout(location = 5, component = 1) out vec3 TEXCOORD_9;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_2 = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_7.z = 0.0;
    TEXCOORD_7.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    precise float _152 = float(NORMAL.x) + (-127.0);
    precise float _154 = float(NORMAL.y) + (-127.0);
    precise float _155 = float(NORMAL.z) + (-127.0);
    precise float _156 = _152 * 0.0078740157186985015869140625;
    precise float _158 = _154 * 0.0078740157186985015869140625;
    precise float _159 = _155 * 0.0078740157186985015869140625;
    precise float _164 = POSITION.x + 0.0;
    precise float _165 = POSITION.y + 0.0;
    precise float _166 = POSITION.z + 0.0;
    uint _171 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _173 = texelFetch(g_InstanceIndexBuffer, int(_171));
    uint _174 = _173.x;
    uint _184 = (floatBitsToUint(cbInstanceData._m0[(_174 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _191 = _184 + 1u;
    uint _198 = _184 + 2u;
    float _209 = inversesqrt(dot(vec3(cbObjMatrix._m0[_184].x, cbObjMatrix._m0[_191].x, cbObjMatrix._m0[_198].x), vec3(cbObjMatrix._m0[_184].x, cbObjMatrix._m0[_191].x, cbObjMatrix._m0[_198].x)));
    precise float _210 = cbObjMatrix._m0[_184].x * _209;
    precise float _211 = cbObjMatrix._m0[_191].x * _209;
    precise float _212 = cbObjMatrix._m0[_198].x * _209;
    float _216 = inversesqrt(dot(vec3(cbObjMatrix._m0[_184].y, cbObjMatrix._m0[_191].y, cbObjMatrix._m0[_198].y), vec3(cbObjMatrix._m0[_184].y, cbObjMatrix._m0[_191].y, cbObjMatrix._m0[_198].y)));
    precise float _217 = cbObjMatrix._m0[_184].y * _216;
    precise float _218 = cbObjMatrix._m0[_191].y * _216;
    precise float _219 = cbObjMatrix._m0[_198].y * _216;
    float _223 = inversesqrt(dot(vec3(cbObjMatrix._m0[_184].z, cbObjMatrix._m0[_191].z, cbObjMatrix._m0[_198].z), vec3(cbObjMatrix._m0[_184].z, cbObjMatrix._m0[_191].z, cbObjMatrix._m0[_198].z)));
    precise float _224 = cbObjMatrix._m0[_184].z * _223;
    precise float _225 = cbObjMatrix._m0[_191].z * _223;
    precise float _226 = cbObjMatrix._m0[_198].z * _223;
    precise float _244 = _210 * cbSceneParam._m0[5u].x;
    precise float _245 = _211 * cbSceneParam._m0[5u].y;
    precise float _246 = _245 + _244;
    precise float _247 = _212 * cbSceneParam._m0[5u].z;
    precise float _248 = _247 + _246;
    precise float _249 = _210 * cbSceneParam._m0[6u].x;
    precise float _250 = _211 * cbSceneParam._m0[6u].y;
    precise float _251 = _250 + _249;
    precise float _252 = _212 * cbSceneParam._m0[6u].z;
    precise float _253 = _252 + _251;
    precise float _254 = _210 * cbSceneParam._m0[7u].x;
    precise float _255 = _211 * cbSceneParam._m0[7u].y;
    precise float _256 = _255 + _254;
    precise float _257 = _212 * cbSceneParam._m0[7u].z;
    precise float _258 = _257 + _256;
    precise float _259 = _217 * cbSceneParam._m0[5u].x;
    precise float _260 = _218 * cbSceneParam._m0[5u].y;
    precise float _261 = _260 + _259;
    precise float _262 = _219 * cbSceneParam._m0[5u].z;
    precise float _263 = _262 + _261;
    precise float _264 = _217 * cbSceneParam._m0[6u].x;
    precise float _265 = _218 * cbSceneParam._m0[6u].y;
    precise float _266 = _265 + _264;
    precise float _267 = _219 * cbSceneParam._m0[6u].z;
    precise float _268 = _267 + _266;
    precise float _269 = _217 * cbSceneParam._m0[7u].x;
    precise float _270 = _218 * cbSceneParam._m0[7u].y;
    precise float _271 = _270 + _269;
    precise float _272 = _219 * cbSceneParam._m0[7u].z;
    precise float _273 = _272 + _271;
    precise float _274 = _224 * cbSceneParam._m0[5u].x;
    precise float _275 = _225 * cbSceneParam._m0[5u].y;
    precise float _276 = _275 + _274;
    precise float _277 = _226 * cbSceneParam._m0[5u].z;
    precise float _278 = _277 + _276;
    precise float _279 = _224 * cbSceneParam._m0[6u].x;
    precise float _280 = _225 * cbSceneParam._m0[6u].y;
    precise float _281 = _280 + _279;
    precise float _282 = _226 * cbSceneParam._m0[6u].z;
    precise float _283 = _282 + _281;
    precise float _284 = _224 * cbSceneParam._m0[7u].x;
    precise float _285 = _225 * cbSceneParam._m0[7u].y;
    precise float _286 = _285 + _284;
    precise float _287 = _226 * cbSceneParam._m0[7u].z;
    precise float _288 = _287 + _286;
    precise float _289 = _158 * 0.0;
    precise float _290 = _289 - _159;
    precise float _291 = _159 * 0.0;
    precise float _292 = _156 * 0.0;
    precise float _293 = _291 - _292;
    precise float _294 = _156 - _289;
    precise float _295 = _159 * _293;
    precise float _296 = _158 * _294;
    precise float _297 = _295 - _296;
    precise float _298 = _156 * _294;
    precise float _299 = _159 * _290;
    precise float _300 = _298 - _299;
    precise float _301 = _158 * _290;
    precise float _302 = _156 * _293;
    precise float _303 = _301 - _302;
    float _307 = inversesqrt(dot(vec3(_290, _293, _294), vec3(_290, _293, _294)));
    precise float _308 = _290 * _307;
    precise float _309 = _293 * _307;
    precise float _310 = _294 * _307;
    float _314 = inversesqrt(dot(vec3(_297, _300, _303), vec3(_297, _300, _303)));
    precise float _315 = _297 * _314;
    precise float _316 = _300 * _314;
    precise float _317 = _303 * _314;
    precise float _318 = (-0.0) - _156;
    precise float _320 = (-0.0) - _158;
    precise float _321 = (-0.0) - _159;
    float _325 = inversesqrt(dot(vec3(_318, _320, _321), vec3(_318, _320, _321)));
    precise float _326 = _325 * _318;
    precise float _327 = _325 * _320;
    precise float _328 = _325 * _321;
    precise float _329 = _164 * _308;
    precise float _330 = _165 * _309;
    precise float _331 = _330 + _329;
    precise float _332 = _166 * _310;
    precise float _333 = _332 + _331;
    precise float _334 = _164 * _315;
    precise float _335 = _165 * _316;
    precise float _336 = _335 + _334;
    precise float _337 = _166 * _317;
    precise float _338 = _337 + _336;
    precise float _339 = _164 * _326;
    precise float _340 = _165 * _327;
    precise float _341 = _340 + _339;
    precise float _342 = _166 * _328;
    precise float _343 = _342 + _341;
    precise float _344 = _248 * _333;
    precise float _345 = _253 * _338;
    precise float _346 = _345 + _344;
    precise float _347 = _258 * _343;
    precise float _348 = _347 + _346;
    precise float _349 = _263 * _333;
    precise float _350 = _268 * _338;
    precise float _351 = _350 + _349;
    precise float _352 = _273 * _343;
    precise float _353 = _352 + _351;
    precise float _354 = _278 * _333;
    precise float _355 = _283 * _338;
    precise float _356 = _355 + _354;
    precise float _357 = _288 * _343;
    precise float _358 = _357 + _356;
    precise float _359 = _348 + 0.0;
    precise float _360 = _353 + 0.0;
    precise float _361 = _358 + 0.0;
    precise float _362 = cbObjMatrix._m0[_184].x * _359;
    precise float _363 = _360 * cbObjMatrix._m0[_184].y;
    precise float _364 = _363 + _362;
    precise float _365 = _361 * cbObjMatrix._m0[_184].z;
    precise float _366 = _365 + _364;
    precise float _367 = 1.0 * cbObjMatrix._m0[_184].w;
    precise float _369 = _367 + _366;
    precise float _370 = cbObjMatrix._m0[_191].x * _359;
    precise float _371 = _360 * cbObjMatrix._m0[_191].y;
    precise float _372 = _371 + _370;
    precise float _373 = _361 * cbObjMatrix._m0[_191].z;
    precise float _374 = _373 + _372;
    precise float _375 = 1.0 * cbObjMatrix._m0[_191].w;
    precise float _376 = _375 + _374;
    precise float _377 = cbObjMatrix._m0[_198].x * _359;
    precise float _378 = _360 * cbObjMatrix._m0[_198].y;
    precise float _379 = _378 + _377;
    precise float _380 = _361 * cbObjMatrix._m0[_198].z;
    precise float _381 = _380 + _379;
    precise float _382 = 1.0 * cbObjMatrix._m0[_198].w;
    precise float _383 = _382 + _381;
    float _428 = fma(cbSceneParam._m0[3u].z, _212, fma(cbSceneParam._m0[3u].y, _211, cbSceneParam._m0[3u].x * _210)) - cbObjMatrix._m0[_184].w;
    float _429 = fma(cbSceneParam._m0[3u].z, _219, fma(cbSceneParam._m0[3u].y, _218, cbSceneParam._m0[3u].x * _217)) - cbObjMatrix._m0[_191].w;
    float _430 = fma(cbSceneParam._m0[3u].z, _226, fma(cbSceneParam._m0[3u].y, _225, cbSceneParam._m0[3u].x * _224)) - cbObjMatrix._m0[_198].w;
    float _434 = inversesqrt(dot(vec3(_428, _429, _430), vec3(_428, _429, _430)));
    float _435 = _434 * _428;
    float _436 = _434 * _429;
    float _437 = _434 * _430;
    float _440 = fma(_437, _310, fma(_436, _309, _435 * _308));
    float _443 = fma(_437, _317, fma(_436, _316, _435 * _315));
    float _446 = fma(_437, _328, fma(_436, _327, _435 * _326));
    float _450 = inversesqrt(dot(vec3(_440, _443, _446), vec3(_440, _443, _446)));
    float _451 = _450 * _440;
    float _452 = _450 * _443;
    float _453 = _450 * _446;
    float _470 = float(int(uint(_451 > 0.0) - uint(_451 < 0.0)));
    float _472 = float(int(uint(_453 > 0.0) - uint(_453 < 0.0)));
    float _473 = dot(vec3(_451, _452, _453), vec3(_470, float(int(uint(_452 > 0.0) - uint(_452 < 0.0))), _472));
    float _476 = _451 / _473;
    float _478 = _453 / _473;
    float _486;
    float _487;
    if ((_452 / _473) < 0.0)
    {
        _486 = _470 - (abs(_478) * _470);
        _487 = _472 - (abs(_476) * _472);
    }
    else
    {
        _486 = _476;
        _487 = _478;
    }
    float _491 = (_486 * 0.5) + 0.5;
    float _492 = (_487 * 0.5) + 0.5;
    float _680 = isnan(0.0) ? _491 : (isnan(_491) ? 0.0 : max(_491, 0.0));
    float _691 = isnan(0.0) ? _492 : (isnan(_492) ? 0.0 : max(_492, 0.0));
    float _498 = fma(_159, _310, fma(_158, _309, _308 * _156));
    float _501 = fma(_159, _317, fma(_158, _316, _315 * _156));
    float _504 = fma(_159, _328, fma(_158, _327, _326 * _156));
    float _507 = fma(_258, _504, fma(_253, _501, _498 * _248));
    float _510 = fma(_273, _504, fma(_268, _501, _498 * _263));
    float _513 = fma(_288, _504, fma(_283, _501, _498 * _278));
    float _516 = fma(_513, cbObjMatrix._m0[_184].z, fma(_510, cbObjMatrix._m0[_184].y, _507 * cbObjMatrix._m0[_184].x));
    float _519 = fma(_513, cbObjMatrix._m0[_191].z, fma(_510, cbObjMatrix._m0[_191].y, _507 * cbObjMatrix._m0[_191].x));
    float _522 = fma(_513, cbObjMatrix._m0[_198].z, fma(_510, cbObjMatrix._m0[_198].y, _507 * cbObjMatrix._m0[_198].x));
    float _524 = (-0.0) - _522;
    precise float _531 = _369 + 0.0;
    precise float _532 = _376 + 0.0;
    precise float _533 = _383 + 0.0;
    float _540 = (fma(_361, cbPrevObjMatrix._m0[_184].z, fma(_360, cbPrevObjMatrix._m0[_184].y, cbPrevObjMatrix._m0[_184].x * _359)) + cbPrevObjMatrix._m0[_184].w) - cbSceneParam._m0[28u].x;
    float _541 = (fma(_361, cbPrevObjMatrix._m0[_191].z, fma(_360, cbPrevObjMatrix._m0[_191].y, cbPrevObjMatrix._m0[_191].x * _359)) + cbPrevObjMatrix._m0[_191].w) - cbSceneParam._m0[28u].y;
    float _542 = (fma(_361, cbPrevObjMatrix._m0[_198].z, fma(_360, cbPrevObjMatrix._m0[_198].y, cbPrevObjMatrix._m0[_198].x * _359)) + cbPrevObjMatrix._m0[_198].w) - cbSceneParam._m0[28u].z;
    precise float _587 = _531 - cbSceneParam._m0[3u].x;
    precise float _588 = _532 - cbSceneParam._m0[3u].y;
    precise float _589 = _533 - cbSceneParam._m0[3u].z;
    precise float _617 = _587 * cbSceneParam._m0[24u].x;
    precise float _618 = _588 * cbSceneParam._m0[24u].y;
    precise float _619 = _618 + _617;
    precise float _620 = _589 * cbSceneParam._m0[24u].z;
    precise float _621 = _620 + _619;
    precise float _622 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _623 = _622 + _621;
    precise float _624 = _587 * cbSceneParam._m0[25u].x;
    precise float _625 = _588 * cbSceneParam._m0[25u].y;
    precise float _626 = _625 + _624;
    precise float _627 = _589 * cbSceneParam._m0[25u].z;
    precise float _628 = _627 + _626;
    precise float _629 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _630 = _629 + _628;
    precise float _631 = _587 * cbSceneParam._m0[26u].x;
    precise float _632 = _588 * cbSceneParam._m0[26u].y;
    precise float _633 = _632 + _631;
    precise float _634 = _589 * cbSceneParam._m0[26u].z;
    precise float _635 = _634 + _633;
    precise float _636 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _637 = _636 + _635;
    precise float _638 = _587 * cbSceneParam._m0[27u].x;
    precise float _639 = _588 * cbSceneParam._m0[27u].y;
    precise float _640 = _639 + _638;
    precise float _641 = _589 * cbSceneParam._m0[27u].z;
    precise float _642 = _641 + _640;
    precise float _643 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _644 = _643 + _642;
    gl_Position.x = _623;
    gl_Position.y = _630;
    gl_Position.z = _637;
    gl_Position.w = _644;
    POSITION_1.x = _623;
    POSITION_1.y = _630;
    POSITION_1.z = _637;
    POSITION_1.w = _644;
    NORMAL_1.x = _516;
    NORMAL_1.y = _519;
    NORMAL_1.z = _522;
    NORMAL_1.w = float(_174);
    TANGENT_1.x = (-0.0) - (_516 * _519);
    TANGENT_1.y = (_516 * _516) - (_522 * _524);
    TANGENT_1.z = _519 * _524;
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = isnan(1.0) ? _680 : (isnan(_680) ? 1.0 : min(_680, 1.0));
    TEXCOORD_1.w = 1.0 - (isnan(1.0) ? _691 : (isnan(_691) ? 1.0 : min(_691, 1.0)));
    TEXCOORD_2 = COLOR_1.x;
    TEXCOORD_7.x = _623;
    TEXCOORD_7.y = _630;
    TEXCOORD_7.z = _637;
    TEXCOORD_7.w = _644;
    TEXCOORD_8.x = fma(_542, cbSceneParam._m0[29u].z, fma(_541, cbSceneParam._m0[29u].y, _540 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_8.y = fma(_542, cbSceneParam._m0[30u].z, fma(_541, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _540)) + cbSceneParam._m0[30u].w;
    TEXCOORD_8.z = fma(_542, cbSceneParam._m0[31u].z, fma(_541, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _540)) + cbSceneParam._m0[31u].w;
    TEXCOORD_8.w = fma(_542, cbSceneParam._m0[32u].z, fma(_541, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _540)) + cbSceneParam._m0[32u].w;
    TEXCOORD_9.x = _516;
    TEXCOORD_9.y = _519;
    TEXCOORD_9.z = _522;
}


