#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out float TEXCOORD_2;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_2 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _138 = float(NORMAL.x) + (-127.0);
    precise float _140 = float(NORMAL.y) + (-127.0);
    precise float _141 = float(NORMAL.z) + (-127.0);
    precise float _142 = _138 * 0.0078740157186985015869140625;
    precise float _144 = _140 * 0.0078740157186985015869140625;
    precise float _145 = _141 * 0.0078740157186985015869140625;
    precise float _150 = POSITION.x + 0.0;
    precise float _151 = POSITION.y + 0.0;
    precise float _152 = POSITION.z + 0.0;
    uint _157 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _159 = texelFetch(g_InstanceIndexBuffer, int(_157));
    uint _160 = _159.x;
    uint _162 = _160 * 13u;
    uint _170 = (floatBitsToUint(cbInstanceData._m0[_162 + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _177 = _170 + 1u;
    uint _184 = _170 + 2u;
    float _195 = inversesqrt(dot(vec3(cbObjMatrix._m0[_170].x, cbObjMatrix._m0[_177].x, cbObjMatrix._m0[_184].x), vec3(cbObjMatrix._m0[_170].x, cbObjMatrix._m0[_177].x, cbObjMatrix._m0[_184].x)));
    precise float _196 = cbObjMatrix._m0[_170].x * _195;
    precise float _197 = cbObjMatrix._m0[_177].x * _195;
    precise float _198 = cbObjMatrix._m0[_184].x * _195;
    float _202 = inversesqrt(dot(vec3(cbObjMatrix._m0[_170].y, cbObjMatrix._m0[_177].y, cbObjMatrix._m0[_184].y), vec3(cbObjMatrix._m0[_170].y, cbObjMatrix._m0[_177].y, cbObjMatrix._m0[_184].y)));
    precise float _203 = cbObjMatrix._m0[_170].y * _202;
    precise float _204 = cbObjMatrix._m0[_177].y * _202;
    precise float _205 = cbObjMatrix._m0[_184].y * _202;
    float _209 = inversesqrt(dot(vec3(cbObjMatrix._m0[_170].z, cbObjMatrix._m0[_177].z, cbObjMatrix._m0[_184].z), vec3(cbObjMatrix._m0[_170].z, cbObjMatrix._m0[_177].z, cbObjMatrix._m0[_184].z)));
    precise float _210 = cbObjMatrix._m0[_170].z * _209;
    precise float _211 = cbObjMatrix._m0[_177].z * _209;
    precise float _212 = cbObjMatrix._m0[_184].z * _209;
    precise float _230 = _196 * cbSceneParam._m0[5u].x;
    precise float _231 = _197 * cbSceneParam._m0[5u].y;
    precise float _232 = _231 + _230;
    precise float _233 = _198 * cbSceneParam._m0[5u].z;
    precise float _234 = _233 + _232;
    precise float _235 = _196 * cbSceneParam._m0[6u].x;
    precise float _236 = _197 * cbSceneParam._m0[6u].y;
    precise float _237 = _236 + _235;
    precise float _238 = _198 * cbSceneParam._m0[6u].z;
    precise float _239 = _238 + _237;
    precise float _240 = _196 * cbSceneParam._m0[7u].x;
    precise float _241 = _197 * cbSceneParam._m0[7u].y;
    precise float _242 = _241 + _240;
    precise float _243 = _198 * cbSceneParam._m0[7u].z;
    precise float _244 = _243 + _242;
    precise float _245 = _203 * cbSceneParam._m0[5u].x;
    precise float _246 = _204 * cbSceneParam._m0[5u].y;
    precise float _247 = _246 + _245;
    precise float _248 = _205 * cbSceneParam._m0[5u].z;
    precise float _249 = _248 + _247;
    precise float _250 = _203 * cbSceneParam._m0[6u].x;
    precise float _251 = _204 * cbSceneParam._m0[6u].y;
    precise float _252 = _251 + _250;
    precise float _253 = _205 * cbSceneParam._m0[6u].z;
    precise float _254 = _253 + _252;
    precise float _255 = _203 * cbSceneParam._m0[7u].x;
    precise float _256 = _204 * cbSceneParam._m0[7u].y;
    precise float _257 = _256 + _255;
    precise float _258 = _205 * cbSceneParam._m0[7u].z;
    precise float _259 = _258 + _257;
    precise float _260 = _210 * cbSceneParam._m0[5u].x;
    precise float _261 = _211 * cbSceneParam._m0[5u].y;
    precise float _262 = _261 + _260;
    precise float _263 = _212 * cbSceneParam._m0[5u].z;
    precise float _264 = _263 + _262;
    precise float _265 = _210 * cbSceneParam._m0[6u].x;
    precise float _266 = _211 * cbSceneParam._m0[6u].y;
    precise float _267 = _266 + _265;
    precise float _268 = _212 * cbSceneParam._m0[6u].z;
    precise float _269 = _268 + _267;
    precise float _270 = _210 * cbSceneParam._m0[7u].x;
    precise float _271 = _211 * cbSceneParam._m0[7u].y;
    precise float _272 = _271 + _270;
    precise float _273 = _212 * cbSceneParam._m0[7u].z;
    precise float _274 = _273 + _272;
    precise float _275 = _144 * 0.0;
    precise float _276 = _275 - _145;
    precise float _277 = _145 * 0.0;
    precise float _278 = _142 * 0.0;
    precise float _279 = _277 - _278;
    precise float _280 = _142 - _275;
    precise float _281 = _145 * _279;
    precise float _282 = _144 * _280;
    precise float _283 = _281 - _282;
    precise float _284 = _142 * _280;
    precise float _285 = _145 * _276;
    precise float _286 = _284 - _285;
    precise float _287 = _144 * _276;
    precise float _288 = _142 * _279;
    precise float _289 = _287 - _288;
    float _293 = inversesqrt(dot(vec3(_276, _279, _280), vec3(_276, _279, _280)));
    precise float _294 = _276 * _293;
    precise float _295 = _279 * _293;
    precise float _296 = _280 * _293;
    float _300 = inversesqrt(dot(vec3(_283, _286, _289), vec3(_283, _286, _289)));
    precise float _301 = _283 * _300;
    precise float _302 = _286 * _300;
    precise float _303 = _289 * _300;
    precise float _304 = (-0.0) - _142;
    precise float _306 = (-0.0) - _144;
    precise float _307 = (-0.0) - _145;
    float _311 = inversesqrt(dot(vec3(_304, _306, _307), vec3(_304, _306, _307)));
    precise float _312 = _311 * _304;
    precise float _313 = _311 * _306;
    precise float _314 = _311 * _307;
    precise float _315 = _150 * _294;
    precise float _316 = _151 * _295;
    precise float _317 = _316 + _315;
    precise float _318 = _152 * _296;
    precise float _319 = _318 + _317;
    precise float _320 = _150 * _301;
    precise float _321 = _151 * _302;
    precise float _322 = _321 + _320;
    precise float _323 = _152 * _303;
    precise float _324 = _323 + _322;
    precise float _325 = _150 * _312;
    precise float _326 = _151 * _313;
    precise float _327 = _326 + _325;
    precise float _328 = _152 * _314;
    precise float _329 = _328 + _327;
    precise float _330 = _234 * _319;
    precise float _331 = _239 * _324;
    precise float _332 = _331 + _330;
    precise float _333 = _244 * _329;
    precise float _334 = _333 + _332;
    precise float _335 = _249 * _319;
    precise float _336 = _254 * _324;
    precise float _337 = _336 + _335;
    precise float _338 = _259 * _329;
    precise float _339 = _338 + _337;
    precise float _340 = _264 * _319;
    precise float _341 = _269 * _324;
    precise float _342 = _341 + _340;
    precise float _343 = _274 * _329;
    precise float _344 = _343 + _342;
    precise float _345 = _334 + 0.0;
    precise float _346 = _339 + 0.0;
    precise float _347 = _344 + 0.0;
    precise float _348 = cbObjMatrix._m0[_170].x * _345;
    precise float _349 = _346 * cbObjMatrix._m0[_170].y;
    precise float _350 = _349 + _348;
    precise float _351 = _347 * cbObjMatrix._m0[_170].z;
    precise float _352 = _351 + _350;
    precise float _353 = 1.0 * cbObjMatrix._m0[_170].w;
    precise float _355 = _353 + _352;
    precise float _356 = cbObjMatrix._m0[_177].x * _345;
    precise float _357 = _346 * cbObjMatrix._m0[_177].y;
    precise float _358 = _357 + _356;
    precise float _359 = _347 * cbObjMatrix._m0[_177].z;
    precise float _360 = _359 + _358;
    precise float _361 = 1.0 * cbObjMatrix._m0[_177].w;
    precise float _362 = _361 + _360;
    precise float _363 = cbObjMatrix._m0[_184].x * _345;
    precise float _364 = _346 * cbObjMatrix._m0[_184].y;
    precise float _365 = _364 + _363;
    precise float _366 = _347 * cbObjMatrix._m0[_184].z;
    precise float _367 = _366 + _365;
    precise float _368 = 1.0 * cbObjMatrix._m0[_184].w;
    precise float _369 = _368 + _367;
    float _384 = fma(cbSceneParam._m0[3u].z, _198, fma(cbSceneParam._m0[3u].y, _197, cbSceneParam._m0[3u].x * _196)) - cbObjMatrix._m0[_170].w;
    float _385 = fma(cbSceneParam._m0[3u].z, _205, fma(cbSceneParam._m0[3u].y, _204, cbSceneParam._m0[3u].x * _203)) - cbObjMatrix._m0[_177].w;
    float _386 = fma(cbSceneParam._m0[3u].z, _212, fma(cbSceneParam._m0[3u].y, _211, cbSceneParam._m0[3u].x * _210)) - cbObjMatrix._m0[_184].w;
    float _390 = inversesqrt(dot(vec3(_384, _385, _386), vec3(_384, _385, _386)));
    float _391 = _390 * _384;
    float _392 = _390 * _385;
    float _393 = _390 * _386;
    float _396 = fma(_393, _296, fma(_392, _295, _391 * _294));
    float _399 = fma(_393, _303, fma(_392, _302, _391 * _301));
    float _402 = fma(_393, _314, fma(_392, _313, _391 * _312));
    float _406 = inversesqrt(dot(vec3(_396, _399, _402), vec3(_396, _399, _402)));
    float _407 = _406 * _396;
    float _408 = _406 * _399;
    float _409 = _406 * _402;
    float _426 = float(int(uint(_407 > 0.0) - uint(_407 < 0.0)));
    float _428 = float(int(uint(_409 > 0.0) - uint(_409 < 0.0)));
    float _429 = dot(vec3(_407, _408, _409), vec3(_426, float(int(uint(_408 > 0.0) - uint(_408 < 0.0))), _428));
    float _432 = _407 / _429;
    float _434 = _409 / _429;
    float _442;
    float _443;
    if ((_408 / _429) < 0.0)
    {
        _442 = _426 - (abs(_434) * _426);
        _443 = _428 - (abs(_432) * _428);
    }
    else
    {
        _442 = _432;
        _443 = _434;
    }
    float _447 = (_442 * 0.5) + 0.5;
    float _448 = (_443 * 0.5) + 0.5;
    float _593 = isnan(0.0) ? _447 : (isnan(_447) ? 0.0 : max(_447, 0.0));
    float _604 = isnan(0.0) ? _448 : (isnan(_448) ? 0.0 : max(_448, 0.0));
    float _454 = fma(_145, _296, fma(_144, _295, _294 * _142));
    float _457 = fma(_145, _303, fma(_144, _302, _301 * _142));
    float _460 = fma(_145, _314, fma(_144, _313, _312 * _142));
    float _463 = fma(_244, _460, fma(_239, _457, _454 * _234));
    float _466 = fma(_259, _460, fma(_254, _457, _454 * _249));
    float _469 = fma(_274, _460, fma(_269, _457, _454 * _264));
    float _472 = fma(_469, cbObjMatrix._m0[_170].z, fma(_466, cbObjMatrix._m0[_170].y, _463 * cbObjMatrix._m0[_170].x));
    float _475 = fma(_469, cbObjMatrix._m0[_177].z, fma(_466, cbObjMatrix._m0[_177].y, _463 * cbObjMatrix._m0[_177].x));
    float _478 = fma(_469, cbObjMatrix._m0[_184].z, fma(_466, cbObjMatrix._m0[_184].y, _463 * cbObjMatrix._m0[_184].x));
    float _480 = (-0.0) - _478;
    precise float _487 = _355 + 0.0;
    precise float _488 = _362 + 0.0;
    precise float _489 = _369 + 0.0;
    precise float _490 = _487 - cbSceneParam._m0[3u].x;
    precise float _491 = _488 - cbSceneParam._m0[3u].y;
    precise float _492 = _489 - cbSceneParam._m0[3u].z;
    precise float _520 = _490 * cbSceneParam._m0[24u].x;
    precise float _521 = _491 * cbSceneParam._m0[24u].y;
    precise float _522 = _521 + _520;
    precise float _523 = _492 * cbSceneParam._m0[24u].z;
    precise float _524 = _523 + _522;
    precise float _525 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _526 = _525 + _524;
    precise float _527 = _490 * cbSceneParam._m0[25u].x;
    precise float _528 = _491 * cbSceneParam._m0[25u].y;
    precise float _529 = _528 + _527;
    precise float _530 = _492 * cbSceneParam._m0[25u].z;
    precise float _531 = _530 + _529;
    precise float _532 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _533 = _532 + _531;
    precise float _534 = _490 * cbSceneParam._m0[26u].x;
    precise float _535 = _491 * cbSceneParam._m0[26u].y;
    precise float _536 = _535 + _534;
    precise float _537 = _492 * cbSceneParam._m0[26u].z;
    precise float _538 = _537 + _536;
    precise float _539 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _540 = _539 + _538;
    precise float _541 = _490 * cbSceneParam._m0[27u].x;
    precise float _542 = _491 * cbSceneParam._m0[27u].y;
    precise float _543 = _542 + _541;
    precise float _544 = _492 * cbSceneParam._m0[27u].z;
    precise float _545 = _544 + _543;
    precise float _546 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _547 = _546 + _545;
    gl_Position.x = _526;
    gl_Position.y = _533;
    gl_Position.z = _540;
    gl_Position.w = _547;
    POSITION_1.x = _526;
    POSITION_1.y = _533;
    POSITION_1.z = _540;
    POSITION_1.w = _547;
    NORMAL_1.x = _472;
    NORMAL_1.y = _475;
    NORMAL_1.z = _478;
    NORMAL_1.w = float(_160);
    TANGENT_1.x = (-0.0) - (_472 * _475);
    TANGENT_1.y = (_472 * _472) - (_478 * _480);
    TANGENT_1.z = _475 * _480;
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = isnan(1.0) ? _593 : (isnan(_593) ? 1.0 : min(_593, 1.0));
    TEXCOORD_1.w = 1.0 - (isnan(1.0) ? _604 : (isnan(_604) ? 1.0 : min(_604, 1.0)));
    TEXCOORD_2 = COLOR_1.x;
    gl_ClipDistance[0u] = dot(vec4(_526, _533, _540, _547), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_526, _533, _540, _547), vec4(cbInstanceData._m0[_162 + 3u]));
}


