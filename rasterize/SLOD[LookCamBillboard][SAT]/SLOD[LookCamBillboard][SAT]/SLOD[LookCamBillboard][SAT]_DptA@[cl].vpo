#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out float TEXCOORD_2;
layout(location = 4, component = 1) out vec2 TEXCOORD_6;
layout(location = 4, component = 3) out float TEXCOORD_10;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_2 = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_10 = 0.0;
    precise float _134 = float(NORMAL.x) + (-127.0);
    precise float _136 = float(NORMAL.y) + (-127.0);
    precise float _137 = float(NORMAL.z) + (-127.0);
    precise float _138 = _134 * 0.0078740157186985015869140625;
    precise float _140 = _136 * 0.0078740157186985015869140625;
    precise float _141 = _137 * 0.0078740157186985015869140625;
    precise float _146 = POSITION.x + 0.0;
    precise float _147 = POSITION.y + 0.0;
    precise float _148 = POSITION.z + 0.0;
    uint _153 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _155 = texelFetch(g_InstanceIndexBuffer, int(_153));
    uint _156 = _155.x;
    uint _166 = (floatBitsToUint(cbInstanceData._m0[(_156 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _173 = _166 + 1u;
    uint _180 = _166 + 2u;
    float _191 = inversesqrt(dot(vec3(cbObjMatrix._m0[_166].x, cbObjMatrix._m0[_173].x, cbObjMatrix._m0[_180].x), vec3(cbObjMatrix._m0[_166].x, cbObjMatrix._m0[_173].x, cbObjMatrix._m0[_180].x)));
    precise float _192 = cbObjMatrix._m0[_166].x * _191;
    precise float _193 = cbObjMatrix._m0[_173].x * _191;
    precise float _194 = cbObjMatrix._m0[_180].x * _191;
    float _198 = inversesqrt(dot(vec3(cbObjMatrix._m0[_166].y, cbObjMatrix._m0[_173].y, cbObjMatrix._m0[_180].y), vec3(cbObjMatrix._m0[_166].y, cbObjMatrix._m0[_173].y, cbObjMatrix._m0[_180].y)));
    precise float _199 = cbObjMatrix._m0[_166].y * _198;
    precise float _200 = cbObjMatrix._m0[_173].y * _198;
    precise float _201 = cbObjMatrix._m0[_180].y * _198;
    float _205 = inversesqrt(dot(vec3(cbObjMatrix._m0[_166].z, cbObjMatrix._m0[_173].z, cbObjMatrix._m0[_180].z), vec3(cbObjMatrix._m0[_166].z, cbObjMatrix._m0[_173].z, cbObjMatrix._m0[_180].z)));
    precise float _206 = cbObjMatrix._m0[_166].z * _205;
    precise float _207 = cbObjMatrix._m0[_173].z * _205;
    precise float _208 = cbObjMatrix._m0[_180].z * _205;
    precise float _226 = _192 * cbSceneParam._m0[5u].x;
    precise float _227 = _193 * cbSceneParam._m0[5u].y;
    precise float _228 = _227 + _226;
    precise float _229 = _194 * cbSceneParam._m0[5u].z;
    precise float _230 = _229 + _228;
    precise float _231 = _192 * cbSceneParam._m0[6u].x;
    precise float _232 = _193 * cbSceneParam._m0[6u].y;
    precise float _233 = _232 + _231;
    precise float _234 = _194 * cbSceneParam._m0[6u].z;
    precise float _235 = _234 + _233;
    precise float _236 = _192 * cbSceneParam._m0[7u].x;
    precise float _237 = _193 * cbSceneParam._m0[7u].y;
    precise float _238 = _237 + _236;
    precise float _239 = _194 * cbSceneParam._m0[7u].z;
    precise float _240 = _239 + _238;
    precise float _241 = _199 * cbSceneParam._m0[5u].x;
    precise float _242 = _200 * cbSceneParam._m0[5u].y;
    precise float _243 = _242 + _241;
    precise float _244 = _201 * cbSceneParam._m0[5u].z;
    precise float _245 = _244 + _243;
    precise float _246 = _199 * cbSceneParam._m0[6u].x;
    precise float _247 = _200 * cbSceneParam._m0[6u].y;
    precise float _248 = _247 + _246;
    precise float _249 = _201 * cbSceneParam._m0[6u].z;
    precise float _250 = _249 + _248;
    precise float _251 = _199 * cbSceneParam._m0[7u].x;
    precise float _252 = _200 * cbSceneParam._m0[7u].y;
    precise float _253 = _252 + _251;
    precise float _254 = _201 * cbSceneParam._m0[7u].z;
    precise float _255 = _254 + _253;
    precise float _256 = _206 * cbSceneParam._m0[5u].x;
    precise float _257 = _207 * cbSceneParam._m0[5u].y;
    precise float _258 = _257 + _256;
    precise float _259 = _208 * cbSceneParam._m0[5u].z;
    precise float _260 = _259 + _258;
    precise float _261 = _206 * cbSceneParam._m0[6u].x;
    precise float _262 = _207 * cbSceneParam._m0[6u].y;
    precise float _263 = _262 + _261;
    precise float _264 = _208 * cbSceneParam._m0[6u].z;
    precise float _265 = _264 + _263;
    precise float _266 = _206 * cbSceneParam._m0[7u].x;
    precise float _267 = _207 * cbSceneParam._m0[7u].y;
    precise float _268 = _267 + _266;
    precise float _269 = _208 * cbSceneParam._m0[7u].z;
    precise float _270 = _269 + _268;
    precise float _271 = _140 * 0.0;
    precise float _272 = _271 - _141;
    precise float _273 = _141 * 0.0;
    precise float _274 = _138 * 0.0;
    precise float _275 = _273 - _274;
    precise float _276 = _138 - _271;
    precise float _277 = _141 * _275;
    precise float _278 = _140 * _276;
    precise float _279 = _277 - _278;
    precise float _280 = _138 * _276;
    precise float _281 = _141 * _272;
    precise float _282 = _280 - _281;
    precise float _283 = _140 * _272;
    precise float _284 = _138 * _275;
    precise float _285 = _283 - _284;
    float _289 = inversesqrt(dot(vec3(_272, _275, _276), vec3(_272, _275, _276)));
    precise float _290 = _272 * _289;
    precise float _291 = _275 * _289;
    precise float _292 = _276 * _289;
    float _296 = inversesqrt(dot(vec3(_279, _282, _285), vec3(_279, _282, _285)));
    precise float _297 = _279 * _296;
    precise float _298 = _282 * _296;
    precise float _299 = _285 * _296;
    precise float _300 = (-0.0) - _138;
    precise float _302 = (-0.0) - _140;
    precise float _303 = (-0.0) - _141;
    float _307 = inversesqrt(dot(vec3(_300, _302, _303), vec3(_300, _302, _303)));
    precise float _308 = _307 * _300;
    precise float _309 = _307 * _302;
    precise float _310 = _307 * _303;
    precise float _311 = _146 * _290;
    precise float _312 = _147 * _291;
    precise float _313 = _312 + _311;
    precise float _314 = _148 * _292;
    precise float _315 = _314 + _313;
    precise float _316 = _146 * _297;
    precise float _317 = _147 * _298;
    precise float _318 = _317 + _316;
    precise float _319 = _148 * _299;
    precise float _320 = _319 + _318;
    precise float _321 = _146 * _308;
    precise float _322 = _147 * _309;
    precise float _323 = _322 + _321;
    precise float _324 = _148 * _310;
    precise float _325 = _324 + _323;
    precise float _326 = _230 * _315;
    precise float _327 = _235 * _320;
    precise float _328 = _327 + _326;
    precise float _329 = _240 * _325;
    precise float _330 = _329 + _328;
    precise float _331 = _245 * _315;
    precise float _332 = _250 * _320;
    precise float _333 = _332 + _331;
    precise float _334 = _255 * _325;
    precise float _335 = _334 + _333;
    precise float _336 = _260 * _315;
    precise float _337 = _265 * _320;
    precise float _338 = _337 + _336;
    precise float _339 = _270 * _325;
    precise float _340 = _339 + _338;
    precise float _341 = _330 + 0.0;
    precise float _342 = _335 + 0.0;
    precise float _343 = _340 + 0.0;
    precise float _344 = cbObjMatrix._m0[_166].x * _341;
    precise float _345 = _342 * cbObjMatrix._m0[_166].y;
    precise float _346 = _345 + _344;
    precise float _347 = _343 * cbObjMatrix._m0[_166].z;
    precise float _348 = _347 + _346;
    precise float _349 = 1.0 * cbObjMatrix._m0[_166].w;
    precise float _351 = _349 + _348;
    precise float _352 = cbObjMatrix._m0[_173].x * _341;
    precise float _353 = _342 * cbObjMatrix._m0[_173].y;
    precise float _354 = _353 + _352;
    precise float _355 = _343 * cbObjMatrix._m0[_173].z;
    precise float _356 = _355 + _354;
    precise float _357 = 1.0 * cbObjMatrix._m0[_173].w;
    precise float _358 = _357 + _356;
    precise float _359 = cbObjMatrix._m0[_180].x * _341;
    precise float _360 = _342 * cbObjMatrix._m0[_180].y;
    precise float _361 = _360 + _359;
    precise float _362 = _343 * cbObjMatrix._m0[_180].z;
    precise float _363 = _362 + _361;
    precise float _364 = 1.0 * cbObjMatrix._m0[_180].w;
    precise float _365 = _364 + _363;
    float _380 = fma(cbSceneParam._m0[3u].z, _194, fma(cbSceneParam._m0[3u].y, _193, cbSceneParam._m0[3u].x * _192)) - cbObjMatrix._m0[_166].w;
    float _381 = fma(cbSceneParam._m0[3u].z, _201, fma(cbSceneParam._m0[3u].y, _200, cbSceneParam._m0[3u].x * _199)) - cbObjMatrix._m0[_173].w;
    float _382 = fma(cbSceneParam._m0[3u].z, _208, fma(cbSceneParam._m0[3u].y, _207, cbSceneParam._m0[3u].x * _206)) - cbObjMatrix._m0[_180].w;
    float _386 = inversesqrt(dot(vec3(_380, _381, _382), vec3(_380, _381, _382)));
    float _387 = _386 * _380;
    float _388 = _386 * _381;
    float _389 = _386 * _382;
    float _392 = fma(_389, _292, fma(_388, _291, _387 * _290));
    float _395 = fma(_389, _299, fma(_388, _298, _387 * _297));
    float _398 = fma(_389, _310, fma(_388, _309, _387 * _308));
    float _402 = inversesqrt(dot(vec3(_392, _395, _398), vec3(_392, _395, _398)));
    float _403 = _402 * _392;
    float _404 = _402 * _395;
    float _405 = _402 * _398;
    float _422 = float(int(uint(_403 > 0.0) - uint(_403 < 0.0)));
    float _424 = float(int(uint(_405 > 0.0) - uint(_405 < 0.0)));
    float _425 = dot(vec3(_403, _404, _405), vec3(_422, float(int(uint(_404 > 0.0) - uint(_404 < 0.0))), _424));
    float _428 = _403 / _425;
    float _430 = _405 / _425;
    float _438;
    float _439;
    if ((_404 / _425) < 0.0)
    {
        _438 = _422 - (abs(_430) * _422);
        _439 = _424 - (abs(_428) * _424);
    }
    else
    {
        _438 = _428;
        _439 = _430;
    }
    float _443 = (_438 * 0.5) + 0.5;
    float _444 = (_439 * 0.5) + 0.5;
    float _575 = isnan(0.0) ? _443 : (isnan(_443) ? 0.0 : max(_443, 0.0));
    float _586 = isnan(0.0) ? _444 : (isnan(_444) ? 0.0 : max(_444, 0.0));
    float _448 = cbSceneParam._m0[3u].x - _351;
    float _449 = cbSceneParam._m0[3u].y - _358;
    float _450 = cbSceneParam._m0[3u].z - _365;
    float _459 = fma(_141, _292, fma(_140, _291, _290 * _138));
    float _462 = fma(_141, _299, fma(_140, _298, _297 * _138));
    float _465 = fma(_141, _310, fma(_140, _309, _308 * _138));
    float _468 = fma(_240, _465, fma(_235, _462, _459 * _230));
    float _471 = fma(_255, _465, fma(_250, _462, _459 * _245));
    float _474 = fma(_270, _465, fma(_265, _462, _459 * _260));
    float _477 = fma(_474, cbObjMatrix._m0[_166].z, fma(_471, cbObjMatrix._m0[_166].y, _468 * cbObjMatrix._m0[_166].x));
    float _480 = fma(_474, cbObjMatrix._m0[_173].z, fma(_471, cbObjMatrix._m0[_173].y, _468 * cbObjMatrix._m0[_173].x));
    float _483 = fma(_474, cbObjMatrix._m0[_180].z, fma(_471, cbObjMatrix._m0[_180].y, _468 * cbObjMatrix._m0[_180].x));
    float _485 = (-0.0) - _483;
    precise float _492 = _351 + 0.0;
    precise float _493 = _358 + 0.0;
    precise float _494 = _365 + 0.0;
    precise float _495 = _492 - cbSceneParam._m0[3u].x;
    precise float _496 = _493 - cbSceneParam._m0[3u].y;
    precise float _497 = _494 - cbSceneParam._m0[3u].z;
    precise float _525 = _495 * cbSceneParam._m0[24u].x;
    precise float _526 = _496 * cbSceneParam._m0[24u].y;
    precise float _527 = _526 + _525;
    precise float _528 = _497 * cbSceneParam._m0[24u].z;
    precise float _529 = _528 + _527;
    precise float _530 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _531 = _530 + _529;
    precise float _532 = _495 * cbSceneParam._m0[25u].x;
    precise float _533 = _496 * cbSceneParam._m0[25u].y;
    precise float _534 = _533 + _532;
    precise float _535 = _497 * cbSceneParam._m0[25u].z;
    precise float _536 = _535 + _534;
    precise float _537 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _538 = _537 + _536;
    precise float _539 = _495 * cbSceneParam._m0[26u].x;
    precise float _540 = _496 * cbSceneParam._m0[26u].y;
    precise float _541 = _540 + _539;
    precise float _542 = _497 * cbSceneParam._m0[26u].z;
    precise float _543 = _542 + _541;
    precise float _544 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _545 = _544 + _543;
    precise float _546 = _495 * cbSceneParam._m0[27u].x;
    precise float _547 = _496 * cbSceneParam._m0[27u].y;
    precise float _548 = _547 + _546;
    precise float _549 = _497 * cbSceneParam._m0[27u].z;
    precise float _550 = _549 + _548;
    precise float _551 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _552 = _551 + _550;
    gl_Position.x = _531;
    gl_Position.y = _538;
    gl_Position.z = _545;
    gl_Position.w = _552;
    NORMAL_1.x = _477;
    NORMAL_1.y = _480;
    NORMAL_1.z = _483;
    NORMAL_1.w = float(_156);
    TANGENT_1.x = (-0.0) - (_477 * _480);
    TANGENT_1.y = (_477 * _477) - (_483 * _485);
    TANGENT_1.z = _480 * _485;
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = isnan(1.0) ? _575 : (isnan(_575) ? 1.0 : min(_575, 1.0));
    TEXCOORD_1.w = 1.0 - (isnan(1.0) ? _586 : (isnan(_586) ? 1.0 : min(_586, 1.0)));
    TEXCOORD_2 = COLOR_1.x;
    TEXCOORD_6.x = _545;
    TEXCOORD_6.y = _552;
    TEXCOORD_10 = sqrt(((_448 * _448) + (_449 * _449)) + (_450 * _450));
}


