#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out float TEXCOORD_2;
layout(location = 4, component = 1) out float TEXCOORD_10;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_2 = 0.0;
    TEXCOORD_10 = 0.0;
    precise float _129 = float(NORMAL.x) + (-127.0);
    precise float _131 = float(NORMAL.y) + (-127.0);
    precise float _132 = float(NORMAL.z) + (-127.0);
    precise float _133 = _129 * 0.0078740157186985015869140625;
    precise float _135 = _131 * 0.0078740157186985015869140625;
    precise float _136 = _132 * 0.0078740157186985015869140625;
    precise float _141 = POSITION.x + 0.0;
    precise float _142 = POSITION.y + 0.0;
    precise float _143 = POSITION.z + 0.0;
    uint _148 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _150 = texelFetch(g_InstanceIndexBuffer, int(_148));
    uint _151 = _150.x;
    uint _161 = (floatBitsToUint(cbInstanceData._m0[(_151 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _168 = _161 + 1u;
    uint _175 = _161 + 2u;
    float _186 = inversesqrt(dot(vec3(cbObjMatrix._m0[_161].x, cbObjMatrix._m0[_168].x, cbObjMatrix._m0[_175].x), vec3(cbObjMatrix._m0[_161].x, cbObjMatrix._m0[_168].x, cbObjMatrix._m0[_175].x)));
    precise float _187 = cbObjMatrix._m0[_161].x * _186;
    precise float _188 = cbObjMatrix._m0[_168].x * _186;
    precise float _189 = cbObjMatrix._m0[_175].x * _186;
    float _193 = inversesqrt(dot(vec3(cbObjMatrix._m0[_161].y, cbObjMatrix._m0[_168].y, cbObjMatrix._m0[_175].y), vec3(cbObjMatrix._m0[_161].y, cbObjMatrix._m0[_168].y, cbObjMatrix._m0[_175].y)));
    precise float _194 = cbObjMatrix._m0[_161].y * _193;
    precise float _195 = cbObjMatrix._m0[_168].y * _193;
    precise float _196 = cbObjMatrix._m0[_175].y * _193;
    float _200 = inversesqrt(dot(vec3(cbObjMatrix._m0[_161].z, cbObjMatrix._m0[_168].z, cbObjMatrix._m0[_175].z), vec3(cbObjMatrix._m0[_161].z, cbObjMatrix._m0[_168].z, cbObjMatrix._m0[_175].z)));
    precise float _201 = cbObjMatrix._m0[_161].z * _200;
    precise float _202 = cbObjMatrix._m0[_168].z * _200;
    precise float _203 = cbObjMatrix._m0[_175].z * _200;
    precise float _221 = _187 * cbSceneParam._m0[5u].x;
    precise float _222 = _188 * cbSceneParam._m0[5u].y;
    precise float _223 = _222 + _221;
    precise float _224 = _189 * cbSceneParam._m0[5u].z;
    precise float _225 = _224 + _223;
    precise float _226 = _187 * cbSceneParam._m0[6u].x;
    precise float _227 = _188 * cbSceneParam._m0[6u].y;
    precise float _228 = _227 + _226;
    precise float _229 = _189 * cbSceneParam._m0[6u].z;
    precise float _230 = _229 + _228;
    precise float _231 = _187 * cbSceneParam._m0[7u].x;
    precise float _232 = _188 * cbSceneParam._m0[7u].y;
    precise float _233 = _232 + _231;
    precise float _234 = _189 * cbSceneParam._m0[7u].z;
    precise float _235 = _234 + _233;
    precise float _236 = _194 * cbSceneParam._m0[5u].x;
    precise float _237 = _195 * cbSceneParam._m0[5u].y;
    precise float _238 = _237 + _236;
    precise float _239 = _196 * cbSceneParam._m0[5u].z;
    precise float _240 = _239 + _238;
    precise float _241 = _194 * cbSceneParam._m0[6u].x;
    precise float _242 = _195 * cbSceneParam._m0[6u].y;
    precise float _243 = _242 + _241;
    precise float _244 = _196 * cbSceneParam._m0[6u].z;
    precise float _245 = _244 + _243;
    precise float _246 = _194 * cbSceneParam._m0[7u].x;
    precise float _247 = _195 * cbSceneParam._m0[7u].y;
    precise float _248 = _247 + _246;
    precise float _249 = _196 * cbSceneParam._m0[7u].z;
    precise float _250 = _249 + _248;
    precise float _251 = _201 * cbSceneParam._m0[5u].x;
    precise float _252 = _202 * cbSceneParam._m0[5u].y;
    precise float _253 = _252 + _251;
    precise float _254 = _203 * cbSceneParam._m0[5u].z;
    precise float _255 = _254 + _253;
    precise float _256 = _201 * cbSceneParam._m0[6u].x;
    precise float _257 = _202 * cbSceneParam._m0[6u].y;
    precise float _258 = _257 + _256;
    precise float _259 = _203 * cbSceneParam._m0[6u].z;
    precise float _260 = _259 + _258;
    precise float _261 = _201 * cbSceneParam._m0[7u].x;
    precise float _262 = _202 * cbSceneParam._m0[7u].y;
    precise float _263 = _262 + _261;
    precise float _264 = _203 * cbSceneParam._m0[7u].z;
    precise float _265 = _264 + _263;
    precise float _266 = _135 * 0.0;
    precise float _267 = _266 - _136;
    precise float _268 = _136 * 0.0;
    precise float _269 = _133 * 0.0;
    precise float _270 = _268 - _269;
    precise float _271 = _133 - _266;
    precise float _272 = _136 * _270;
    precise float _273 = _135 * _271;
    precise float _274 = _272 - _273;
    precise float _275 = _133 * _271;
    precise float _276 = _136 * _267;
    precise float _277 = _275 - _276;
    precise float _278 = _135 * _267;
    precise float _279 = _133 * _270;
    precise float _280 = _278 - _279;
    float _284 = inversesqrt(dot(vec3(_267, _270, _271), vec3(_267, _270, _271)));
    precise float _285 = _267 * _284;
    precise float _286 = _270 * _284;
    precise float _287 = _271 * _284;
    float _291 = inversesqrt(dot(vec3(_274, _277, _280), vec3(_274, _277, _280)));
    precise float _292 = _274 * _291;
    precise float _293 = _277 * _291;
    precise float _294 = _280 * _291;
    precise float _295 = (-0.0) - _133;
    precise float _297 = (-0.0) - _135;
    precise float _298 = (-0.0) - _136;
    float _302 = inversesqrt(dot(vec3(_295, _297, _298), vec3(_295, _297, _298)));
    precise float _303 = _302 * _295;
    precise float _304 = _302 * _297;
    precise float _305 = _302 * _298;
    precise float _306 = _141 * _285;
    precise float _307 = _142 * _286;
    precise float _308 = _307 + _306;
    precise float _309 = _143 * _287;
    precise float _310 = _309 + _308;
    precise float _311 = _141 * _292;
    precise float _312 = _142 * _293;
    precise float _313 = _312 + _311;
    precise float _314 = _143 * _294;
    precise float _315 = _314 + _313;
    precise float _316 = _141 * _303;
    precise float _317 = _142 * _304;
    precise float _318 = _317 + _316;
    precise float _319 = _143 * _305;
    precise float _320 = _319 + _318;
    precise float _321 = _225 * _310;
    precise float _322 = _230 * _315;
    precise float _323 = _322 + _321;
    precise float _324 = _235 * _320;
    precise float _325 = _324 + _323;
    precise float _326 = _240 * _310;
    precise float _327 = _245 * _315;
    precise float _328 = _327 + _326;
    precise float _329 = _250 * _320;
    precise float _330 = _329 + _328;
    precise float _331 = _255 * _310;
    precise float _332 = _260 * _315;
    precise float _333 = _332 + _331;
    precise float _334 = _265 * _320;
    precise float _335 = _334 + _333;
    precise float _336 = _325 + 0.0;
    precise float _337 = _330 + 0.0;
    precise float _338 = _335 + 0.0;
    precise float _339 = cbObjMatrix._m0[_161].x * _336;
    precise float _340 = _337 * cbObjMatrix._m0[_161].y;
    precise float _341 = _340 + _339;
    precise float _342 = _338 * cbObjMatrix._m0[_161].z;
    precise float _343 = _342 + _341;
    precise float _344 = 1.0 * cbObjMatrix._m0[_161].w;
    precise float _346 = _344 + _343;
    precise float _347 = cbObjMatrix._m0[_168].x * _336;
    precise float _348 = _337 * cbObjMatrix._m0[_168].y;
    precise float _349 = _348 + _347;
    precise float _350 = _338 * cbObjMatrix._m0[_168].z;
    precise float _351 = _350 + _349;
    precise float _352 = 1.0 * cbObjMatrix._m0[_168].w;
    precise float _353 = _352 + _351;
    precise float _354 = cbObjMatrix._m0[_175].x * _336;
    precise float _355 = _337 * cbObjMatrix._m0[_175].y;
    precise float _356 = _355 + _354;
    precise float _357 = _338 * cbObjMatrix._m0[_175].z;
    precise float _358 = _357 + _356;
    precise float _359 = 1.0 * cbObjMatrix._m0[_175].w;
    precise float _360 = _359 + _358;
    float _375 = fma(cbSceneParam._m0[3u].z, _189, fma(cbSceneParam._m0[3u].y, _188, cbSceneParam._m0[3u].x * _187)) - cbObjMatrix._m0[_161].w;
    float _376 = fma(cbSceneParam._m0[3u].z, _196, fma(cbSceneParam._m0[3u].y, _195, cbSceneParam._m0[3u].x * _194)) - cbObjMatrix._m0[_168].w;
    float _377 = fma(cbSceneParam._m0[3u].z, _203, fma(cbSceneParam._m0[3u].y, _202, cbSceneParam._m0[3u].x * _201)) - cbObjMatrix._m0[_175].w;
    float _381 = inversesqrt(dot(vec3(_375, _376, _377), vec3(_375, _376, _377)));
    float _382 = _381 * _375;
    float _383 = _381 * _376;
    float _384 = _381 * _377;
    float _387 = fma(_384, _287, fma(_383, _286, _382 * _285));
    float _390 = fma(_384, _294, fma(_383, _293, _382 * _292));
    float _393 = fma(_384, _305, fma(_383, _304, _382 * _303));
    float _397 = inversesqrt(dot(vec3(_387, _390, _393), vec3(_387, _390, _393)));
    float _398 = _397 * _387;
    float _399 = _397 * _390;
    float _400 = _397 * _393;
    float _417 = float(int(uint(_398 > 0.0) - uint(_398 < 0.0)));
    float _419 = float(int(uint(_400 > 0.0) - uint(_400 < 0.0)));
    float _420 = dot(vec3(_398, _399, _400), vec3(_417, float(int(uint(_399 > 0.0) - uint(_399 < 0.0))), _419));
    float _423 = _398 / _420;
    float _425 = _400 / _420;
    float _433;
    float _434;
    if ((_399 / _420) < 0.0)
    {
        _433 = _417 - (abs(_425) * _417);
        _434 = _419 - (abs(_423) * _419);
    }
    else
    {
        _433 = _423;
        _434 = _425;
    }
    float _438 = (_433 * 0.5) + 0.5;
    float _439 = (_434 * 0.5) + 0.5;
    float _568 = isnan(0.0) ? _438 : (isnan(_438) ? 0.0 : max(_438, 0.0));
    float _579 = isnan(0.0) ? _439 : (isnan(_439) ? 0.0 : max(_439, 0.0));
    float _443 = cbSceneParam._m0[3u].x - _346;
    float _444 = cbSceneParam._m0[3u].y - _353;
    float _445 = cbSceneParam._m0[3u].z - _360;
    float _454 = fma(_136, _287, fma(_135, _286, _285 * _133));
    float _457 = fma(_136, _294, fma(_135, _293, _292 * _133));
    float _460 = fma(_136, _305, fma(_135, _304, _303 * _133));
    float _463 = fma(_235, _460, fma(_230, _457, _454 * _225));
    float _466 = fma(_250, _460, fma(_245, _457, _454 * _240));
    float _469 = fma(_265, _460, fma(_260, _457, _454 * _255));
    float _472 = fma(_469, cbObjMatrix._m0[_161].z, fma(_466, cbObjMatrix._m0[_161].y, _463 * cbObjMatrix._m0[_161].x));
    float _475 = fma(_469, cbObjMatrix._m0[_168].z, fma(_466, cbObjMatrix._m0[_168].y, _463 * cbObjMatrix._m0[_168].x));
    float _478 = fma(_469, cbObjMatrix._m0[_175].z, fma(_466, cbObjMatrix._m0[_175].y, _463 * cbObjMatrix._m0[_175].x));
    float _480 = (-0.0) - _478;
    precise float _487 = _346 + 0.0;
    precise float _488 = _353 + 0.0;
    precise float _489 = _360 + 0.0;
    precise float _490 = _487 - cbSceneParam._m0[3u].x;
    precise float _491 = _488 - cbSceneParam._m0[3u].y;
    precise float _492 = _489 - cbSceneParam._m0[3u].z;
    precise float _520 = _490 * cbSceneParam._m0[24u].x;
    precise float _521 = _491 * cbSceneParam._m0[24u].y;
    precise float _522 = _521 + _520;
    precise float _523 = _492 * cbSceneParam._m0[24u].z;
    precise float _524 = _523 + _522;
    precise float _525 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _526 = _525 + _524;
    precise float _527 = _490 * cbSceneParam._m0[25u].x;
    precise float _528 = _491 * cbSceneParam._m0[25u].y;
    precise float _529 = _528 + _527;
    precise float _530 = _492 * cbSceneParam._m0[25u].z;
    precise float _531 = _530 + _529;
    precise float _532 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _533 = _532 + _531;
    precise float _534 = _490 * cbSceneParam._m0[26u].x;
    precise float _535 = _491 * cbSceneParam._m0[26u].y;
    precise float _536 = _535 + _534;
    precise float _537 = _492 * cbSceneParam._m0[26u].z;
    precise float _538 = _537 + _536;
    precise float _539 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _540 = _539 + _538;
    precise float _541 = _490 * cbSceneParam._m0[27u].x;
    precise float _542 = _491 * cbSceneParam._m0[27u].y;
    precise float _543 = _542 + _541;
    precise float _544 = _492 * cbSceneParam._m0[27u].z;
    precise float _545 = _544 + _543;
    precise float _546 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _547 = _546 + _545;
    gl_Position.x = _526;
    gl_Position.y = _533;
    gl_Position.z = _540;
    gl_Position.w = _547;
    NORMAL_1.x = _472;
    NORMAL_1.y = _475;
    NORMAL_1.z = _478;
    NORMAL_1.w = float(_151);
    TANGENT_1.x = (-0.0) - (_472 * _475);
    TANGENT_1.y = (_472 * _472) - (_478 * _480);
    TANGENT_1.z = _475 * _480;
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = isnan(1.0) ? _568 : (isnan(_568) ? 1.0 : min(_568, 1.0));
    TEXCOORD_1.w = 1.0 - (isnan(1.0) ? _579 : (isnan(_579) ? 1.0 : min(_579, 1.0)));
    TEXCOORD_2 = COLOR_1.x;
    TEXCOORD_10 = sqrt(((_443 * _443) + (_444 * _444)) + (_445 * _445));
}


