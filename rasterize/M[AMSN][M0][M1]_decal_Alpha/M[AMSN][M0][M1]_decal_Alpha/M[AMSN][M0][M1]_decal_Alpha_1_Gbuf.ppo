#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_AMSN_M0_M1_decal_Alpha_snp_0_Texture2D_3;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M0_M1_decal_Alpha_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD_1;
layout(location = 4) in float TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _115 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _116 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _117 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _123 = inversesqrt(dot(vec3(_115, _116, _117), vec3(_115, _116, _117)));
    float _130 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _137 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _169 = (cbMtdParam._m0[10u].x * TEXCOORD_1.z) * texture(sampler2D(M_AMSN_M0_M1_decal_Alpha_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w)).x;
    vec4 _181 = texture(sampler2D(M_AMSN_M0_M1_decal_Alpha_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[1u].w));
    float _185 = _181.z;
    float _189 = (_181.x * 2.0) + (-1.0);
    float _191 = (_181.y * 2.0) + (-1.0);
    float _192 = dot(vec2(_189, _191), vec2(_189, _191));
    float _303 = isnan(0.0) ? _192 : (isnan(_192) ? 0.0 : max(_192, 0.0));
    float _198 = sqrt(1.0 - (isnan(1.0) ? _303 : (isnan(_303) ? 1.0 : min(_303, 1.0))));
    float _201 = fma(_198, _130 * NORMAL.x, fma(_191, _137 * TANGENT.x, (_123 * _115) * _189));
    float _204 = fma(_198, _130 * NORMAL.y, fma(_191, _137 * TANGENT.y, (_123 * _116) * _189));
    float _207 = fma(_198, _130 * NORMAL.z, fma(_191, _137 * TANGENT.z, (_123 * _117) * _189));
    float _211 = inversesqrt(dot(vec3(_201, _204, _207), vec3(_201, _204, _207)));
    float _314 = isnan(0.0) ? _169 : (isnan(_169) ? 0.0 : max(_169, 0.0));
    float _212 = isnan(1.0) ? _314 : (isnan(_314) ? 1.0 : min(_314, 1.0));
    float _325 = isnan(0.0) ? _185 : (isnan(_185) ? 0.0 : max(_185, 0.0));
    float _336 = isnan(0.0) ? cbMtdParam._m0[9u].x : (isnan(cbMtdParam._m0[9u].x) ? 0.0 : max(cbMtdParam._m0[9u].x, 0.0));
    float _347 = isnan(0.0) ? cbMtdParam._m0[9u].y : (isnan(cbMtdParam._m0[9u].y) ? 0.0 : max(cbMtdParam._m0[9u].y, 0.0));
    float _358 = isnan(0.0) ? cbMtdParam._m0[9u].z : (isnan(cbMtdParam._m0[9u].z) ? 0.0 : max(cbMtdParam._m0[9u].z, 0.0));
    uint _231 = uint(roundEven(NORMAL.w)) * 13u;
    uint _234 = (_231 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _240 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _336 : (isnan(_336) ? 1.0 : min(_336, 1.0)))) * cbInstanceData._m0[_234].x;
    float _241 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _347 : (isnan(_347) ? 1.0 : min(_347, 1.0)))) * cbInstanceData._m0[_234].y;
    float _242 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _358 : (isnan(_358) ? 1.0 : min(_358, 1.0)))) * cbInstanceData._m0[_234].z;
    float _369 = isnan(0.0) ? _240 : (isnan(_240) ? 0.0 : max(_240, 0.0));
    float _380 = isnan(0.0) ? _241 : (isnan(_241) ? 0.0 : max(_241, 0.0));
    float _391 = isnan(0.0) ? _242 : (isnan(_242) ? 0.0 : max(_242, 0.0));
    float _402 = isnan(0.0) ? _212 : (isnan(_212) ? 0.0 : max(_212, 0.0));
    float _252 = cbInstanceData._m0[_231 + 6u].w * (isnan(1.0) ? _402 : (isnan(_402) ? 1.0 : min(_402, 1.0)));
    bool _277 = cbMtdParam._m0[1u].z != 0.0;
    float _278 = _277 ? _252 : 0.0;
    SV_Target.x = ((_201 * 0.5) * _211) + 0.500488758087158203125;
    SV_Target.y = ((_204 * 0.5) * _211) + 0.500488758087158203125;
    SV_Target.z = ((_207 * 0.5) * _211) + 0.500488758087158203125;
    SV_Target.w = _278;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _325 : (isnan(_325) ? 1.0 : min(_325, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _277 ? _252 : TEXCOORD_1.w;
    SV_Target_2.x = isnan(1.0) ? _369 : (isnan(_369) ? 1.0 : min(_369, 1.0));
    SV_Target_2.y = isnan(1.0) ? _380 : (isnan(_380) ? 1.0 : min(_380, 1.0));
    SV_Target_2.z = isnan(1.0) ? _391 : (isnan(_391) ? 1.0 : min(_391, 1.0));
    SV_Target_2.w = _277 ? _252 : (float(floatBitsToUint(cbInstanceData._m0[_231 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _278;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _278;
}


