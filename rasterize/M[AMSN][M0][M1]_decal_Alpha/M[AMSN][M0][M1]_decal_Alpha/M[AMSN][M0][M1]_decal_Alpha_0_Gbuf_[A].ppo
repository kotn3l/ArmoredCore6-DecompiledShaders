#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_M0_M1_decal_Alpha_snp_0_Texture2D_3;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M0_M1_decal_Alpha_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_M0_M1_decal_Alpha_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD_1;
layout(location = 4) in float TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _131 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _132 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _133 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _139 = inversesqrt(dot(vec3(_131, _132, _133), vec3(_131, _132, _133)));
    float _146 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _153 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _180 = texture(sampler2D(M_AMSN_M0_M1_decal_Alpha_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _185 = (cbMtdParam._m0[10u].x * TEXCOORD_1.z) * _180.x;
    vec4 _197 = texture(sampler2D(M_AMSN_M0_M1_decal_Alpha_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[2u].w));
    float _199 = _197.x;
    vec4 _211 = texture(sampler2D(M_AMSN_M0_M1_decal_Alpha_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[1u].w));
    float _215 = _211.z;
    float _219 = (_211.x * 2.0) + (-1.0);
    float _221 = (_211.y * 2.0) + (-1.0);
    float _222 = dot(vec2(_219, _221), vec2(_219, _221));
    float _428 = isnan(0.0) ? _222 : (isnan(_222) ? 0.0 : max(_222, 0.0));
    float _228 = sqrt(1.0 - (isnan(1.0) ? _428 : (isnan(_428) ? 1.0 : min(_428, 1.0))));
    float _231 = fma(_228, _146 * NORMAL.x, fma(_221, _153 * TANGENT.x, (_139 * _131) * _219));
    float _234 = fma(_228, _146 * NORMAL.y, fma(_221, _153 * TANGENT.y, (_139 * _132) * _219));
    float _237 = fma(_228, _146 * NORMAL.z, fma(_221, _153 * TANGENT.z, (_139 * _133) * _219));
    float _241 = inversesqrt(dot(vec3(_231, _234, _237), vec3(_231, _234, _237)));
    float _439 = isnan(0.0) ? _185 : (isnan(_185) ? 0.0 : max(_185, 0.0));
    float _242 = isnan(1.0) ? _439 : (isnan(_439) ? 1.0 : min(_439, 1.0));
    float _450 = isnan(0.0) ? _215 : (isnan(_215) ? 0.0 : max(_215, 0.0));
    float _461 = isnan(0.0) ? cbMtdParam._m0[9u].x : (isnan(cbMtdParam._m0[9u].x) ? 0.0 : max(cbMtdParam._m0[9u].x, 0.0));
    float _244 = isnan(1.0) ? _461 : (isnan(_461) ? 1.0 : min(_461, 1.0));
    float _472 = isnan(0.0) ? cbMtdParam._m0[9u].y : (isnan(cbMtdParam._m0[9u].y) ? 0.0 : max(cbMtdParam._m0[9u].y, 0.0));
    float _245 = isnan(1.0) ? _472 : (isnan(_472) ? 1.0 : min(_472, 1.0));
    float _483 = isnan(0.0) ? cbMtdParam._m0[9u].z : (isnan(cbMtdParam._m0[9u].z) ? 0.0 : max(cbMtdParam._m0[9u].z, 0.0));
    float _246 = isnan(1.0) ? _483 : (isnan(_483) ? 1.0 : min(_483, 1.0));
    float _494 = isnan(0.0) ? _199 : (isnan(_199) ? 0.0 : max(_199, 0.0));
    uint _249 = uint(roundEven(NORMAL.w));
    vec4 _254 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _256 = _254.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _321 = (cbMatDynParam._m0[5u].x * TEXCOORD_9) + cbMatDynParam._m0[5u].y;
        float _505 = isnan(0.0) ? _321 : (isnan(_321) ? 0.0 : max(_321, 0.0));
        float _322 = isnan(1.0) ? _505 : (isnan(_505) ? 1.0 : min(_505, 1.0));
        float _326 = (cbMatDynParam._m0[5u].z * TEXCOORD_9) + cbMatDynParam._m0[5u].w;
        float _516 = isnan(0.0) ? _326 : (isnan(_326) ? 0.0 : max(_326, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _516 : (isnan(_516) ? 1.0 : min(_516, 1.0))) - _322)) + _322) < ((_256 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _355;
    uint _276;
    vec4 _281;
    float _288;
    float _289;
    float _290;
    float _296;
    vec4 _300;
    float _302;
    float _303;
    bool _314;
    for (;;)
    {
        _276 = _249 * 13u;
        _281 = cbInstanceData._m0[(_276 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _285 = (cbMtdParam._m0[0u].x * _244) * _281.x;
        float _286 = (cbMtdParam._m0[0u].y * _245) * _281.y;
        float _287 = (cbMtdParam._m0[0u].z * _246) * _281.z;
        float _527 = isnan(0.0) ? _285 : (isnan(_285) ? 0.0 : max(_285, 0.0));
        _288 = isnan(1.0) ? _527 : (isnan(_527) ? 1.0 : min(_527, 1.0));
        float _538 = isnan(0.0) ? _286 : (isnan(_286) ? 0.0 : max(_286, 0.0));
        _289 = isnan(1.0) ? _538 : (isnan(_538) ? 1.0 : min(_538, 1.0));
        float _549 = isnan(0.0) ? _287 : (isnan(_287) ? 0.0 : max(_287, 0.0));
        _290 = isnan(1.0) ? _549 : (isnan(_549) ? 1.0 : min(_549, 1.0));
        float _560 = isnan(0.0) ? _242 : (isnan(_242) ? 0.0 : max(_242, 0.0));
        _296 = cbInstanceData._m0[_276 + 6u].w * (isnan(1.0) ? _560 : (isnan(_560) ? 1.0 : min(_560, 1.0)));
        float _297 = _256 + (-0.5);
        _300 = cbMtdParam._m0[1u];
        _302 = _300.y * _297;
        _303 = _297 * 0.999000012874603271484375;
        _314 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_314)
        {
            if ((cbInstanceData._m0[_276 + 7u].x + _303) < 0.5)
            {
                _355 = true;
                break;
            }
        }
        if ((_281.w < 1.0) && ((_281.w + _303) < 0.5))
        {
            _355 = true;
            break;
        }
        if ((_302 + _185) < _300.x)
        {
            _355 = true;
            break;
        }
        _355 = false;
        break;
    }
    if (_355)
    {
        discard_state = true;
    }
    bool _381 = cbMtdParam._m0[1u].z != 0.0;
    float _382 = _381 ? _296 : 0.0;
    SV_Target.x = ((_231 * 0.5) * _241) + 0.500488758087158203125;
    SV_Target.y = ((_234 * 0.5) * _241) + 0.500488758087158203125;
    SV_Target.z = ((_237 * 0.5) * _241) + 0.500488758087158203125;
    SV_Target.w = _382;
    SV_Target_1.x = isnan(1.0) ? _494 : (isnan(_494) ? 1.0 : min(_494, 1.0));
    SV_Target_1.y = isnan(1.0) ? _450 : (isnan(_450) ? 1.0 : min(_450, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _381 ? _296 : TEXCOORD_1.w;
    SV_Target_2.x = _288;
    SV_Target_2.y = _289;
    SV_Target_2.z = _290;
    SV_Target_2.w = _381 ? _296 : (float(floatBitsToUint(cbInstanceData._m0[_276 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _382;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _382;
    discard_exit();
}


