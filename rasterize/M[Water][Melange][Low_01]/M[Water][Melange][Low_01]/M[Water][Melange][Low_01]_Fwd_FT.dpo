#version 460
layout(triangles) in;

out float gl_ClipDistance[2];
out float gl_CullDistance[1];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[41];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 58) uniform texture2D g_WaterSimulationHeightTexture;
layout(set = 0, binding = 0) uniform texture2D M_Water_Melange_Low_01_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Water_Melange_Low_01_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 0) in vec4 POSITION[];
layout(location = 1) in vec4 NORMAL[];
layout(location = 2) in vec4 TANGENT[];
layout(location = 3) in float TEXCOORD[];
layout(location = 3, component = 1) in float TEXCOORD_1[];
layout(location = 4) in vec4 TEXCOORD_5[];
layout(location = 5) in vec4 TEXCOORD_9[];
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec4 TEXCOORD_3;
layout(location = 6) out vec4 TEXCOORD_7;
layout(location = 7) out float TEXCOORD_12;

void main()
{
    precise float _105 = gl_TessCoord.z * POSITION[0u].x;
    precise float _106 = gl_TessCoord.z * POSITION[0u].y;
    precise float _107 = gl_TessCoord.z * POSITION[0u].z;
    precise float _114 = gl_TessCoord.x * POSITION[1u].x;
    precise float _115 = gl_TessCoord.x * POSITION[1u].y;
    precise float _116 = gl_TessCoord.x * POSITION[1u].z;
    precise float _117 = _105 + _114;
    precise float _118 = _106 + _115;
    precise float _119 = _107 + _116;
    precise float _126 = gl_TessCoord.y * POSITION[2u].x;
    precise float _127 = gl_TessCoord.y * POSITION[2u].y;
    precise float _128 = gl_TessCoord.y * POSITION[2u].z;
    precise float _129 = _117 + _126;
    precise float _130 = _118 + _127;
    precise float _131 = _119 + _128;
    precise float _222 = gl_TessCoord.z * TEXCOORD[0u];
    precise float _225 = gl_TessCoord.x * TEXCOORD[1u];
    precise float _226 = _222 + _225;
    precise float _229 = gl_TessCoord.y * TEXCOORD[2u];
    precise float _230 = _226 + _229;
    precise float _233 = gl_TessCoord.z * TEXCOORD_1[0u];
    precise float _236 = gl_TessCoord.x * TEXCOORD_1[1u];
    precise float _237 = _233 + _236;
    precise float _240 = gl_TessCoord.y * TEXCOORD_1[2u];
    precise float _241 = _237 + _240;
    precise float _250 = gl_TessCoord.z * TEXCOORD_5[0u].x;
    precise float _251 = gl_TessCoord.z * TEXCOORD_5[0u].y;
    precise float _252 = gl_TessCoord.z * TEXCOORD_5[0u].z;
    precise float _253 = gl_TessCoord.z * TEXCOORD_5[0u].w;
    precise float _262 = gl_TessCoord.x * TEXCOORD_5[1u].x;
    precise float _263 = gl_TessCoord.x * TEXCOORD_5[1u].y;
    precise float _264 = gl_TessCoord.x * TEXCOORD_5[1u].z;
    precise float _265 = gl_TessCoord.x * TEXCOORD_5[1u].w;
    precise float _266 = _250 + _262;
    precise float _267 = _251 + _263;
    precise float _268 = _252 + _264;
    precise float _269 = _253 + _265;
    precise float _278 = gl_TessCoord.y * TEXCOORD_5[2u].x;
    precise float _279 = gl_TessCoord.y * TEXCOORD_5[2u].y;
    precise float _280 = gl_TessCoord.y * TEXCOORD_5[2u].z;
    precise float _281 = gl_TessCoord.y * TEXCOORD_5[2u].w;
    precise float _282 = _266 + _278;
    precise float _283 = _267 + _279;
    precise float _284 = _268 + _280;
    precise float _285 = _269 + _281;
    precise float _343 = cbMtdParam._m0[38u].w - cbMtdParam._m0[37u].y;
    precise float _344 = cbMtdParam._m0[39u].y - cbMtdParam._m0[37u].w;
    precise float _345 = _283 * _343;
    precise float _346 = _283 * _344;
    precise float _347 = cbMtdParam._m0[37u].y + _345;
    precise float _348 = cbMtdParam._m0[37u].w + _346;
    precise float _362 = cbPerFrame._m0[22u].x + cbMtdParam._m0[27u].w;
    precise float _363 = cbMtdParam._m0[19u].z * _362;
    precise float _364 = cbMtdParam._m0[33u].z * _363;
    precise float _365 = cbMtdParam._m0[33u].w * _363;
    precise float _368 = _230 * cbMtdParam._m0[33u].x;
    precise float _369 = _241 * cbMtdParam._m0[33u].y;
    precise float _370 = _368 + _364;
    precise float _371 = _369 + _365;
    precise float _378 = cbTextureTilingScale._m0[2u].x * _370;
    precise float _379 = cbTextureTilingScale._m0[2u].y * _371;
    precise float _380 = cbTextureTilingScale._m0[2u].z + _378;
    precise float _381 = cbTextureTilingScale._m0[2u].w + _379;
    vec4 _385 = textureLod(sampler2D(M_Water_Melange_Low_01_snp_0_Texture2D_2, SS_BumpMap), vec2(_380, _381), 0.0);
    float _388 = _385.z;
    precise float _389 = _347 * _388;
    precise float _390 = _348 * _388;
    precise float _399 = cbMtdParam._m0[39u].z * cbMtdParam._m0[25u].x;
    precise float _400 = cbMtdParam._m0[40u].x * cbMtdParam._m0[25u].x;
    precise float _401 = _399 - cbMtdParam._m0[39u].z;
    precise float _402 = _400 - cbMtdParam._m0[40u].x;
    precise float _403 = _283 * _401;
    precise float _404 = _283 * _402;
    precise float _405 = cbMtdParam._m0[39u].z + _403;
    precise float _406 = cbMtdParam._m0[40u].x + _404;
    precise float _412 = _363 * cbMtdParam._m0[30u].x;
    precise float _413 = _363 * cbMtdParam._m0[30u].y;
    precise float _419 = _230 * cbMtdParam._m0[36u].x;
    precise float _420 = _241 * cbMtdParam._m0[36u].y;
    precise float _421 = _412 + _419;
    precise float _422 = _413 + _420;
    precise float _429 = _421 * cbTextureTilingScale._m0[0u].x;
    precise float _430 = cbTextureTilingScale._m0[0u].y * _422;
    precise float _431 = cbTextureTilingScale._m0[0u].z + _429;
    precise float _432 = cbTextureTilingScale._m0[0u].w + _430;
    precise float _439 = _363 * cbMtdParam._m0[30u].z;
    precise float _440 = _363 * cbMtdParam._m0[30u].w;
    precise float _441 = _419 + _439;
    precise float _442 = _420 + _440;
    precise float _443 = _441 * cbTextureTilingScale._m0[0u].x;
    precise float _444 = cbTextureTilingScale._m0[0u].y * _442;
    precise float _445 = cbTextureTilingScale._m0[0u].z + _443;
    precise float _446 = cbTextureTilingScale._m0[0u].w + _444;
    precise float _450 = textureLod(sampler2D(M_Water_Melange_Low_01_snp_0_Texture2D_0, SS_BumpMap), vec2(_431, _432), 0.0).w * textureLod(sampler2D(M_Water_Melange_Low_01_snp_0_Texture2D_0, SS_BumpMap), vec2(_445, _446), 0.0).w;
    precise float _451 = _405 * _450;
    precise float _452 = _406 * _450;
    precise float _453 = _389 + _451;
    precise float _454 = _390 + _452;
    precise float _469 = (-0.0) - cbMtdParam._m0[4u].y;
    precise float _510 = _129 + _453;
    precise float _511 = _131 + _454;
    precise float _517 = _510 - cbvModelParam._m0[8u].x;
    precise float _518 = _511 - cbvModelParam._m0[8u].y;
    precise float _534 = dot(vec2(_517, _518), vec2(cbvModelParam._m0[9u].xy)) * cbvModelParam._m0[8u].z;
    precise float _535 = dot(vec2(_517, _518), vec2(cbvModelParam._m0[9u].zw)) * cbvModelParam._m0[8u].w;
    precise float _538 = cbMtdParam._m0[39u].x - cbMtdParam._m0[37u].z;
    precise float _539 = _283 * _538;
    precise float _540 = cbMtdParam._m0[37u].z + _539;
    precise float _541 = _540 * _388;
    precise float _543 = cbMtdParam._m0[39u].w * cbMtdParam._m0[25u].x;
    precise float _544 = _543 - cbMtdParam._m0[39u].w;
    precise float _545 = _283 * _544;
    precise float _546 = cbMtdParam._m0[39u].w + _545;
    precise float _547 = _546 * _450;
    precise float _548 = _541 + _547;
    precise float _549 = _130 + _548;
    vec4 _551 = textureLod(sampler2D(g_WaterSimulationHeightTexture, SS_ClampLinear), vec2(_534, _535), 0.0);
    float _553 = _551.x;
    precise float _554 = _553 * 0.0;
    precise float _555 = _510 + _554;
    precise float _556 = _549 + _553;
    precise float _557 = _511 + _554;
    float _595;
    float _596;
    float _597;
    if (((((dot(vec4(_555, _556, _557, 1.0), vec4(cbSceneParam._m0[73u])) > (-0.0)) && (dot(vec4(_555, _556, _557, 1.0), vec4(cbSceneParam._m0[74u])) > (-0.0))) && (dot(vec4(_555, _556, _557, 1.0), vec4(cbSceneParam._m0[75u])) > (-0.0))) && (dot(vec4(_555, _556, _557, 1.0), vec4(cbSceneParam._m0[76u])) > (-0.0))) && (!((((dot(vec4(_129, _130, _131, 1.0), vec4(cbSceneParam._m0[73u])) > _469) && (dot(vec4(_129, _130, _131, 1.0), vec4(cbSceneParam._m0[74u])) > _469)) && (dot(vec4(_129, _130, _131, 1.0), vec4(cbSceneParam._m0[75u])) > _469)) && (dot(vec4(_129, _130, _131, 1.0), vec4(cbSceneParam._m0[76u])) > _469))))
    {
        precise float _578 = _555 - _129;
        precise float _579 = _556 - _130;
        precise float _580 = _557 - _131;
        float _585 = inversesqrt(dot(vec3(_578, _579, _580), vec3(_578, _579, _580)));
        precise float _586 = _578 * _585;
        precise float _587 = _579 * _585;
        precise float _588 = _580 * _585;
        precise float _589 = _586 * cbMtdParam._m0[4u].y;
        precise float _590 = _587 * cbMtdParam._m0[4u].y;
        precise float _591 = _588 * cbMtdParam._m0[4u].y;
        precise float _592 = _129 + _589;
        precise float _593 = _130 + _590;
        precise float _594 = _131 + _591;
        _595 = _592;
        _596 = _593;
        _597 = _594;
    }
    else
    {
        _595 = _555;
        _596 = _556;
        _597 = _557;
    }
    precise float _603 = _595 - cbSceneParam._m0[3u].x;
    precise float _604 = _596 - cbSceneParam._m0[3u].y;
    precise float _605 = _597 - cbSceneParam._m0[3u].z;
    precise float _632 = _603 * cbSceneParam._m0[24u].x;
    precise float _633 = _604 * cbSceneParam._m0[24u].y;
    precise float _634 = _633 + _632;
    precise float _635 = _605 * cbSceneParam._m0[24u].z;
    precise float _636 = _635 + _634;
    precise float _637 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _638 = _637 + _636;
    precise float _639 = _603 * cbSceneParam._m0[25u].x;
    precise float _640 = _604 * cbSceneParam._m0[25u].y;
    precise float _641 = _640 + _639;
    precise float _642 = _605 * cbSceneParam._m0[25u].z;
    precise float _643 = _642 + _641;
    precise float _644 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _645 = _644 + _643;
    precise float _646 = _603 * cbSceneParam._m0[26u].x;
    precise float _647 = _604 * cbSceneParam._m0[26u].y;
    precise float _648 = _647 + _646;
    precise float _649 = _605 * cbSceneParam._m0[26u].z;
    precise float _650 = _649 + _648;
    precise float _651 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _652 = _651 + _650;
    precise float _653 = _603 * cbSceneParam._m0[27u].x;
    precise float _654 = _604 * cbSceneParam._m0[27u].y;
    precise float _655 = _654 + _653;
    precise float _656 = _605 * cbSceneParam._m0[27u].z;
    precise float _657 = _656 + _655;
    precise float _658 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _659 = _658 + _657;
    gl_Position.x = _638;
    gl_Position.y = _645;
    gl_Position.z = _652;
    gl_Position.w = _659;
    POSITION_1.x = _638;
    POSITION_1.y = _645;
    POSITION_1.z = _652;
    POSITION_1.w = _659;
    NORMAL_1.x = ((NORMAL[1u].x * gl_TessCoord.x) + (NORMAL[0u].x * gl_TessCoord.z)) + (NORMAL[2u].x * gl_TessCoord.y);
    NORMAL_1.y = ((NORMAL[1u].y * gl_TessCoord.x) + (NORMAL[0u].y * gl_TessCoord.z)) + (NORMAL[2u].y * gl_TessCoord.y);
    NORMAL_1.z = ((NORMAL[1u].z * gl_TessCoord.x) + (NORMAL[0u].z * gl_TessCoord.z)) + (NORMAL[2u].z * gl_TessCoord.y);
    NORMAL_1.w = ((NORMAL[1u].w * gl_TessCoord.x) + (NORMAL[0u].w * gl_TessCoord.z)) + (NORMAL[2u].w * gl_TessCoord.y);
    TANGENT_1.x = ((TANGENT[1u].x * gl_TessCoord.x) + (TANGENT[0u].x * gl_TessCoord.z)) + (TANGENT[2u].x * gl_TessCoord.y);
    TANGENT_1.y = ((TANGENT[1u].y * gl_TessCoord.x) + (TANGENT[0u].y * gl_TessCoord.z)) + (TANGENT[2u].y * gl_TessCoord.y);
    TANGENT_1.z = ((TANGENT[1u].z * gl_TessCoord.x) + (TANGENT[0u].z * gl_TessCoord.z)) + (TANGENT[2u].z * gl_TessCoord.y);
    TANGENT_1.w = ((TANGENT[1u].w * gl_TessCoord.x) + (TANGENT[0u].w * gl_TessCoord.z)) + (TANGENT[2u].w * gl_TessCoord.y);
    TEXCOORD_2.x = _230;
    TEXCOORD_2.y = _241;
    TEXCOORD_2.z = _534;
    TEXCOORD_2.w = _535;
    TEXCOORD_3.x = _282;
    TEXCOORD_3.y = _283;
    TEXCOORD_3.z = _284;
    TEXCOORD_3.w = _285;
    TEXCOORD_7.x = ((TEXCOORD_9[1u].x * gl_TessCoord.x) + (TEXCOORD_9[0u].x * gl_TessCoord.z)) + (TEXCOORD_9[2u].x * gl_TessCoord.y);
    TEXCOORD_7.y = ((TEXCOORD_9[1u].y * gl_TessCoord.x) + (TEXCOORD_9[0u].y * gl_TessCoord.z)) + (TEXCOORD_9[2u].y * gl_TessCoord.y);
    TEXCOORD_7.z = ((TEXCOORD_9[1u].z * gl_TessCoord.x) + (TEXCOORD_9[0u].z * gl_TessCoord.z)) + (TEXCOORD_9[2u].z * gl_TessCoord.y);
    TEXCOORD_7.w = ((TEXCOORD_9[1u].w * gl_TessCoord.x) + (TEXCOORD_9[0u].w * gl_TessCoord.z)) + (TEXCOORD_9[2u].w * gl_TessCoord.y);
    TEXCOORD_12 = 0.0;
    gl_ClipDistance[0u] = dot(vec4(_638, _645, _652, _659), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_638, _645, _652, _659), vec4(0.0));
    gl_CullDistance[0u] = 0.0;
}


