#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_HSV_Emissive_Glow_Scroll_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_A_M0_HSV_Emissive_Glow_Scroll_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _119 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _120 = _119 * NORMAL.x;
    float _121 = _119 * NORMAL.y;
    float _122 = _119 * NORMAL.z;
    vec4 _142 = texture(sampler2D(M_A_M0_HSV_Emissive_Glow_Scroll_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _148 = _142.x * cbMtdParam._m0[9u].x;
    float _149 = _142.y * cbMtdParam._m0[9u].y;
    float _150 = _142.z * cbMtdParam._m0[9u].z;
    vec4 _172 = texture(sampler2D(M_A_M0_HSV_Emissive_Glow_Scroll_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _180 = inversesqrt(dot(vec3(_120, _121, _122), vec3(_120, _121, _122)));
    float _385 = isnan(0.0) ? _148 : (isnan(_148) ? 0.0 : max(_148, 0.0));
    float _182 = isnan(1.0) ? _385 : (isnan(_385) ? 1.0 : min(_385, 1.0));
    float _396 = isnan(0.0) ? _149 : (isnan(_149) ? 0.0 : max(_149, 0.0));
    float _183 = isnan(1.0) ? _396 : (isnan(_396) ? 1.0 : min(_396, 1.0));
    float _407 = isnan(0.0) ? _150 : (isnan(_150) ? 0.0 : max(_150, 0.0));
    float _184 = isnan(1.0) ? _407 : (isnan(_407) ? 1.0 : min(_407, 1.0));
    uint _186 = uint(roundEven(NORMAL.w));
    vec4 _191 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _193 = _191.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _259 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _418 = isnan(0.0) ? _259 : (isnan(_259) ? 0.0 : max(_259, 0.0));
        float _260 = isnan(1.0) ? _418 : (isnan(_418) ? 1.0 : min(_418, 1.0));
        float _264 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _429 = isnan(0.0) ? _264 : (isnan(_264) ? 0.0 : max(_264, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _429 : (isnan(_429) ? 1.0 : min(_429, 1.0))) - _260)) + _260) < ((_193 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _293;
    uint _213;
    vec4 _218;
    float _219;
    float _220;
    float _221;
    float _225;
    float _226;
    float _227;
    float _230;
    float _234;
    vec4 _238;
    float _240;
    float _241;
    bool _252;
    for (;;)
    {
        _213 = _186 * 13u;
        _218 = cbInstanceData._m0[(_213 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        _219 = _218.x;
        _220 = _218.y;
        _221 = _218.z;
        float _222 = (cbMtdParam._m0[0u].x * _182) * _219;
        float _223 = (cbMtdParam._m0[0u].y * _183) * _220;
        float _224 = (cbMtdParam._m0[0u].z * _184) * _221;
        float _440 = isnan(0.0) ? _222 : (isnan(_222) ? 0.0 : max(_222, 0.0));
        _225 = isnan(1.0) ? _440 : (isnan(_440) ? 1.0 : min(_440, 1.0));
        float _451 = isnan(0.0) ? _223 : (isnan(_223) ? 0.0 : max(_223, 0.0));
        _226 = isnan(1.0) ? _451 : (isnan(_451) ? 1.0 : min(_451, 1.0));
        float _462 = isnan(0.0) ? _224 : (isnan(_224) ? 0.0 : max(_224, 0.0));
        _227 = isnan(1.0) ? _462 : (isnan(_462) ? 1.0 : min(_462, 1.0));
        _230 = cbMtdParam._m0[2u].w;
        _234 = cbInstanceData._m0[_213 + 6u].w;
        float _235 = _193 + (-0.5);
        _238 = cbMtdParam._m0[1u];
        _240 = _238.y * _235;
        _241 = _235 * 0.999000012874603271484375;
        _252 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_252)
        {
            if ((cbInstanceData._m0[_213 + 7u].x + _241) < 0.5)
            {
                _293 = true;
                break;
            }
        }
        if ((_218.w < 1.0) && ((_218.w + _241) < 0.5))
        {
            _293 = true;
            break;
        }
        if ((_240 + 1.0) < _238.x)
        {
            _293 = true;
            break;
        }
        _293 = false;
        break;
    }
    if (_293)
    {
        discard_state = true;
    }
    float _336;
    float _337;
    float _338;
    float _339;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _336 = _234;
        _337 = _234;
        _338 = _234;
        _339 = _234;
    }
    else
    {
        _336 = _230;
        _337 = 0.0;
        _338 = float(floatBitsToUint(cbInstanceData._m0[_213 + 5u]).x) * 0.0039215688593685626983642578125;
        _339 = TEXCOORD.z;
    }
    SV_Target.x = ((_120 * 0.5) * _180) + 0.500488758087158203125;
    SV_Target.y = ((_121 * 0.5) * _180) + 0.500488758087158203125;
    SV_Target.z = ((_122 * 0.5) * _180) + 0.500488758087158203125;
    SV_Target.w = _337;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _339;
    SV_Target_2.x = _225;
    SV_Target_2.y = _226;
    SV_Target_2.z = _227;
    SV_Target_2.w = _338;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _337;
    SV_Target_4.x = (((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _172.x) * _219) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = (((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _172.y) * _220) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = (((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _172.z) * _221) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _336;
    discard_exit();
}


