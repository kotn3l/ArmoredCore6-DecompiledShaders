#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_HSV_Emissive_Glow_Scroll_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_A_M0_HSV_Emissive_Glow_Scroll_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _129 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _130 = _129 * NORMAL.x;
    float _131 = _129 * NORMAL.y;
    float _132 = _129 * NORMAL.z;
    vec4 _151 = texture(sampler2D(M_A_M0_HSV_Emissive_Glow_Scroll_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _157 = _151.x * cbMtdParam._m0[9u].x;
    float _158 = _151.y * cbMtdParam._m0[9u].y;
    float _159 = _151.z * cbMtdParam._m0[9u].z;
    vec4 _196 = texture(sampler2D(M_A_M0_HSV_Emissive_Glow_Scroll_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((((cbMtdParam._m0[12u].w * cbPerFrame._m0[22u].x) * cbMtdParam._m0[11u].y) + TEXCOORD.x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((((cbMtdParam._m0[13u].x * cbPerFrame._m0[22u].x) * cbMtdParam._m0[11u].y) + TEXCOORD.y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _204 = inversesqrt(dot(vec3(_130, _131, _132), vec3(_130, _131, _132)));
    float _408 = isnan(0.0) ? _157 : (isnan(_157) ? 0.0 : max(_157, 0.0));
    float _206 = isnan(1.0) ? _408 : (isnan(_408) ? 1.0 : min(_408, 1.0));
    float _419 = isnan(0.0) ? _158 : (isnan(_158) ? 0.0 : max(_158, 0.0));
    float _207 = isnan(1.0) ? _419 : (isnan(_419) ? 1.0 : min(_419, 1.0));
    float _430 = isnan(0.0) ? _159 : (isnan(_159) ? 0.0 : max(_159, 0.0));
    float _208 = isnan(1.0) ? _430 : (isnan(_430) ? 1.0 : min(_430, 1.0));
    uint _210 = uint(roundEven(NORMAL.w));
    vec4 _215 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _217 = _215.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _282 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _441 = isnan(0.0) ? _282 : (isnan(_282) ? 0.0 : max(_282, 0.0));
        float _283 = isnan(1.0) ? _441 : (isnan(_441) ? 1.0 : min(_441, 1.0));
        float _287 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _452 = isnan(0.0) ? _287 : (isnan(_287) ? 0.0 : max(_287, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _452 : (isnan(_452) ? 1.0 : min(_452, 1.0))) - _283)) + _283) < ((_217 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _316;
    uint _237;
    vec4 _241;
    float _242;
    float _243;
    float _244;
    float _248;
    float _249;
    float _250;
    float _253;
    float _257;
    vec4 _261;
    float _263;
    float _264;
    bool _275;
    for (;;)
    {
        _237 = _210 * 13u;
        _241 = cbInstanceData._m0[(_237 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        _242 = _241.x;
        _243 = _241.y;
        _244 = _241.z;
        float _245 = (cbMtdParam._m0[0u].x * _206) * _242;
        float _246 = (cbMtdParam._m0[0u].y * _207) * _243;
        float _247 = (cbMtdParam._m0[0u].z * _208) * _244;
        float _463 = isnan(0.0) ? _245 : (isnan(_245) ? 0.0 : max(_245, 0.0));
        _248 = isnan(1.0) ? _463 : (isnan(_463) ? 1.0 : min(_463, 1.0));
        float _474 = isnan(0.0) ? _246 : (isnan(_246) ? 0.0 : max(_246, 0.0));
        _249 = isnan(1.0) ? _474 : (isnan(_474) ? 1.0 : min(_474, 1.0));
        float _485 = isnan(0.0) ? _247 : (isnan(_247) ? 0.0 : max(_247, 0.0));
        _250 = isnan(1.0) ? _485 : (isnan(_485) ? 1.0 : min(_485, 1.0));
        _253 = cbMtdParam._m0[2u].w;
        _257 = cbInstanceData._m0[_237 + 6u].w;
        float _258 = _217 + (-0.5);
        _261 = cbMtdParam._m0[1u];
        _263 = _261.y * _258;
        _264 = _258 * 0.999000012874603271484375;
        _275 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_275)
        {
            if ((cbInstanceData._m0[_237 + 7u].x + _264) < 0.5)
            {
                _316 = true;
                break;
            }
        }
        if ((_241.w < 1.0) && ((_241.w + _264) < 0.5))
        {
            _316 = true;
            break;
        }
        if ((_263 + 1.0) < _261.x)
        {
            _316 = true;
            break;
        }
        _316 = false;
        break;
    }
    if (_316)
    {
        discard_state = true;
    }
    float _359;
    float _360;
    float _361;
    float _362;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _359 = _257;
        _360 = _257;
        _361 = _257;
        _362 = _257;
    }
    else
    {
        _359 = _253;
        _360 = 0.0;
        _361 = float(floatBitsToUint(cbInstanceData._m0[_237 + 5u]).x) * 0.0039215688593685626983642578125;
        _362 = TEXCOORD.z;
    }
    SV_Target.x = ((_130 * 0.5) * _204) + 0.500488758087158203125;
    SV_Target.y = ((_131 * 0.5) * _204) + 0.500488758087158203125;
    SV_Target.z = ((_132 * 0.5) * _204) + 0.500488758087158203125;
    SV_Target.w = _360;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _362;
    SV_Target_2.x = _248;
    SV_Target_2.y = _249;
    SV_Target_2.z = _250;
    SV_Target_2.w = _361;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _360;
    SV_Target_4.x = (((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _196.x) * _242) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = (((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _196.y) * _243) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = (((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _196.z) * _244) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _359;
    discard_exit();
}


