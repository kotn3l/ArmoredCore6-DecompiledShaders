#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_HSV_Emissive_Glow_Scroll_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_A_M0_HSV_Emissive_Glow_Scroll_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _742;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _168 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _169 = _168 * NORMAL.x;
    float _170 = _168 * NORMAL.y;
    float _171 = _168 * NORMAL.z;
    vec4 _190 = texture(sampler2D(M_A_M0_HSV_Emissive_Glow_Scroll_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _196 = _190.x * cbMtdParam._m0[9u].x;
    float _197 = _190.y * cbMtdParam._m0[9u].y;
    float _198 = _190.z * cbMtdParam._m0[9u].z;
    vec4 _235 = texture(sampler2D(M_A_M0_HSV_Emissive_Glow_Scroll_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((((cbMtdParam._m0[12u].w * cbPerFrame._m0[22u].x) * cbMtdParam._m0[11u].y) + TEXCOORD.x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((((cbMtdParam._m0[13u].x * cbPerFrame._m0[22u].x) * cbMtdParam._m0[11u].y) + TEXCOORD.y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _243 = inversesqrt(dot(vec3(_169, _170, _171), vec3(_169, _170, _171)));
    float _244 = _243 * _169;
    float _245 = _243 * _170;
    float _246 = _243 * _171;
    float _3177 = isnan(0.0) ? _196 : (isnan(_196) ? 0.0 : max(_196, 0.0));
    float _3188 = isnan(0.0) ? _197 : (isnan(_197) ? 0.0 : max(_197, 0.0));
    float _3199 = isnan(0.0) ? _198 : (isnan(_198) ? 0.0 : max(_198, 0.0));
    float _266 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _307 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _317 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _307);
    float _318 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _307);
    float _319 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _307);
    float _323 = inversesqrt(dot(vec3(_317, _318, _319), vec3(_317, _318, _319)));
    float _324 = _317 * _323;
    float _325 = _318 * _323;
    float _326 = _319 * _323;
    float _332 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _333 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _354 = fma(_246, cbSceneParam._m0[5u].z, fma(_245, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _244));
    float _357 = fma(_246, cbSceneParam._m0[6u].z, fma(_245, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _244));
    float _360 = fma(_246, cbSceneParam._m0[7u].z, fma(_245, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _244));
    uint _373 = uint(roundEven(NORMAL.w)) * 13u;
    uint _374 = _373 + 9u;
    uint _375 = _374 + uint(cbMatDynParam._m0[0u].w);
    float _381 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3177 : (isnan(_3177) ? 1.0 : min(_3177, 1.0)))) * cbInstanceData._m0[_375].x;
    float _382 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3188 : (isnan(_3188) ? 1.0 : min(_3188, 1.0)))) * cbInstanceData._m0[_375].y;
    float _383 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3199 : (isnan(_3199) ? 1.0 : min(_3199, 1.0)))) * cbInstanceData._m0[_375].z;
    float _3210 = isnan(0.0) ? _381 : (isnan(_381) ? 0.0 : max(_381, 0.0));
    float _384 = isnan(1.0) ? _3210 : (isnan(_3210) ? 1.0 : min(_3210, 1.0));
    float _3221 = isnan(0.0) ? _382 : (isnan(_382) ? 0.0 : max(_382, 0.0));
    float _385 = isnan(1.0) ? _3221 : (isnan(_3221) ? 1.0 : min(_3221, 1.0));
    float _3232 = isnan(0.0) ? _383 : (isnan(_383) ? 0.0 : max(_383, 0.0));
    float _386 = isnan(1.0) ? _3232 : (isnan(_3232) ? 1.0 : min(_3232, 1.0));
    vec4 _395 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _332, cbSceneParam._m0[86u].y * _333));
    float _398 = _395.x * TEXCOORD.z;
    float _399 = dot(vec3(_244, _245, _246), vec3(_324, _325, _326));
    float _402 = _399 * 2.0;
    float _407 = (_402 * _244) - _324;
    float _408 = (_402 * _245) - _325;
    float _409 = (_402 * _246) - _326;
    float _431 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _435 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _439 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _741;
    float _743;
    float _744;
    float _745;
    float _746;
    float _747;
    float _748;
    float _749;
    float _750;
    float _751;
    float _752;
    float _753;
    float _754;
    float _755;
    float _756;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _466 = fma(_439, cbModelParam._m0[26u].z, fma(_435, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _431));
        float _470 = fma(_439, cbModelParam._m0[27u].z, fma(_435, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _431));
        float _474 = fma(_439, cbModelParam._m0[28u].z, fma(_435, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _431));
        float _499 = _431 + _244;
        float _500 = _435 + _245;
        float _501 = _439 + _246;
        float _511 = fma(_501, cbModelParam._m0[26u].z, fma(_500, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _499)) - _466;
        float _512 = fma(_501, cbModelParam._m0[27u].z, fma(_500, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _499)) - _470;
        float _513 = fma(_501, cbModelParam._m0[28u].z, fma(_500, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _499)) - _474;
        float _517 = inversesqrt(dot(vec3(_511, _512, _513), vec3(_511, _512, _513)));
        float _530 = ((_517 * _511) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_466 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _531 = ((_517 * _512) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_470 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _532 = ((_517 * _513) / cbModelParam._m0[34u].z) + ((((((_474 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _535 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_530, _531, _532), 0.0);
        vec4 _542 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_530, _531, _532), 0.0);
        vec4 _549 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_530, _531, _532), 0.0);
        vec4 _556 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_530, _531, _532), 0.0);
        float _569 = exp2((_535.w + (-0.5)) * 20.0) * 2.0;
        float _570 = _569 * (_535.x + (-0.5));
        float _571 = _569 * (_535.y + (-0.5));
        float _572 = _569 * (_535.z + (-0.5));
        float _579 = exp2((_542.w + (-0.5)) * 20.0) * 2.0;
        float _580 = _579 * (_542.x + (-0.5));
        float _581 = _579 * (_542.y + (-0.5));
        float _582 = _579 * (_542.z + (-0.5));
        float _589 = exp2((_549.w + (-0.5)) * 20.0) * 2.0;
        float _590 = _589 * (_549.x + (-0.5));
        float _591 = _589 * (_549.y + (-0.5));
        float _592 = _589 * (_549.z + (-0.5));
        float _599 = exp2((_556.w + (-0.5)) * 20.0) * 2.0;
        float _600 = _599 * (_556.x + (-0.5));
        float _601 = _599 * (_556.y + (-0.5));
        float _602 = _599 * (_556.z + (-0.5));
        float _603 = isnan(0.0) ? _600 : (isnan(_600) ? 0.0 : max(_600, 0.0));
        float _604 = isnan(0.0) ? _601 : (isnan(_601) ? 0.0 : max(_601, 0.0));
        float _605 = isnan(0.0) ? _602 : (isnan(_602) ? 0.0 : max(_602, 0.0));
        float _606 = _570 * 0.5;
        float _607 = _580 * 0.5;
        float _608 = _590 * 0.5;
        float _609 = dot(vec3(_606, _607, _608), vec3(_606, _607, _608));
        float _614 = (_609 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_609);
        float _623 = (dot(vec3(_244, _245, _246), vec3(_614 * _606, _614 * _607, _614 * _608)) + 1.0) * 0.5;
        float _3258 = isnan(0.0) ? _623 : (isnan(_623) ? 0.0 : max(_623, 0.0));
        float _633 = sqrt(((_607 * _607) + (_606 * _606)) + (_608 * _608)) / (_603 + 9.9999997473787516355514526367188e-06);
        float _3269 = isnan(0.0) ? _633 : (isnan(_633) ? 0.0 : max(_633, 0.0));
        float _634 = isnan(1.0) ? _3269 : (isnan(_3269) ? 1.0 : min(_3269, 1.0));
        float _635 = _634 * 2.0;
        float _639 = (1.0 - _634) / (_634 + 1.0);
        float _3280 = isnan(0.0) ? _639 : (isnan(_639) ? 0.0 : max(_639, 0.0));
        float _640 = isnan(1.0) ? _3280 : (isnan(_3280) ? 1.0 : min(_3280, 1.0));
        float _649 = ((((1.0 - _640) * (_635 + 2.0)) * exp2(log2(isnan(1.0) ? _3258 : (isnan(_3258) ? 1.0 : min(_3258, 1.0))) * (_635 + 1.0))) + _640) * _603;
        float _650 = _571 * 0.5;
        float _651 = _581 * 0.5;
        float _652 = _591 * 0.5;
        float _653 = dot(vec3(_650, _651, _652), vec3(_650, _651, _652));
        float _658 = (_653 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_653);
        float _666 = (dot(vec3(_244, _245, _246), vec3(_658 * _650, _658 * _651, _658 * _652)) + 1.0) * 0.5;
        float _3291 = isnan(0.0) ? _666 : (isnan(_666) ? 0.0 : max(_666, 0.0));
        float _675 = sqrt(((_651 * _651) + (_650 * _650)) + (_652 * _652)) / (_604 + 9.9999997473787516355514526367188e-06);
        float _3302 = isnan(0.0) ? _675 : (isnan(_675) ? 0.0 : max(_675, 0.0));
        float _676 = isnan(1.0) ? _3302 : (isnan(_3302) ? 1.0 : min(_3302, 1.0));
        float _677 = _676 * 2.0;
        float _681 = (1.0 - _676) / (_676 + 1.0);
        float _3313 = isnan(0.0) ? _681 : (isnan(_681) ? 0.0 : max(_681, 0.0));
        float _682 = isnan(1.0) ? _3313 : (isnan(_3313) ? 1.0 : min(_3313, 1.0));
        float _691 = ((((1.0 - _682) * (_677 + 2.0)) * exp2(log2(isnan(1.0) ? _3291 : (isnan(_3291) ? 1.0 : min(_3291, 1.0))) * (_677 + 1.0))) + _682) * _604;
        float _692 = _572 * 0.5;
        float _693 = _582 * 0.5;
        float _694 = _592 * 0.5;
        float _695 = dot(vec3(_692, _693, _694), vec3(_692, _693, _694));
        float _700 = (_695 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_695);
        float _708 = (dot(vec3(_244, _245, _246), vec3(_700 * _692, _700 * _693, _700 * _694)) + 1.0) * 0.5;
        float _3324 = isnan(0.0) ? _708 : (isnan(_708) ? 0.0 : max(_708, 0.0));
        float _717 = sqrt(((_693 * _693) + (_692 * _692)) + (_694 * _694)) / (_605 + 9.9999997473787516355514526367188e-06);
        float _3335 = isnan(0.0) ? _717 : (isnan(_717) ? 0.0 : max(_717, 0.0));
        float _718 = isnan(1.0) ? _3335 : (isnan(_3335) ? 1.0 : min(_3335, 1.0));
        float _719 = _718 * 2.0;
        float _723 = (1.0 - _718) / (_718 + 1.0);
        float _3346 = isnan(0.0) ? _723 : (isnan(_723) ? 0.0 : max(_723, 0.0));
        float _724 = isnan(1.0) ? _3346 : (isnan(_3346) ? 1.0 : min(_3346, 1.0));
        float _733 = ((((1.0 - _724) * (_719 + 2.0)) * exp2(log2(isnan(1.0) ? _3324 : (isnan(_3324) ? 1.0 : min(_3324, 1.0))) * (_719 + 1.0))) + _724) * _605;
        _741 = _572;
        _743 = _571;
        _744 = _570;
        _745 = _582;
        _746 = _581;
        _747 = _580;
        _748 = _592;
        _749 = _591;
        _750 = _590;
        _751 = _605;
        _752 = _604;
        _753 = _603;
        _754 = cbModelParam._m0[36u].z * (isnan(0.0) ? _649 : (isnan(_649) ? 0.0 : max(_649, 0.0)));
        _755 = cbModelParam._m0[36u].z * (isnan(0.0) ? _691 : (isnan(_691) ? 0.0 : max(_691, 0.0)));
        _756 = cbModelParam._m0[36u].z * (isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0)));
    }
    else
    {
        _741 = _742;
        _743 = _742;
        _744 = _742;
        _745 = _742;
        _746 = _742;
        _747 = _742;
        _748 = _742;
        _749 = _742;
        _750 = _742;
        _751 = _742;
        _752 = _742;
        _753 = _742;
        _754 = 0.0;
        _755 = 0.0;
        _756 = 0.0;
    }
    float _1051;
    float _1052;
    float _1053;
    float _1054;
    float _1055;
    float _1056;
    float _1057;
    float _1058;
    float _1059;
    float _1060;
    float _1061;
    float _1062;
    float _1063;
    float _1064;
    float _1065;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _782 = fma(_439, cbModelParam._m0[30u].z, fma(_435, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _431));
        float _786 = fma(_439, cbModelParam._m0[31u].z, fma(_435, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _431));
        float _790 = fma(_439, cbModelParam._m0[32u].z, fma(_435, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _431));
        float _813 = _431 + _244;
        float _814 = _435 + _245;
        float _815 = _439 + _246;
        float _825 = fma(_815, cbModelParam._m0[30u].z, fma(_814, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _813)) - _782;
        float _826 = fma(_815, cbModelParam._m0[31u].z, fma(_814, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _813)) - _786;
        float _827 = fma(_815, cbModelParam._m0[32u].z, fma(_814, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _813)) - _790;
        float _831 = inversesqrt(dot(vec3(_825, _826, _827), vec3(_825, _826, _827)));
        float _844 = ((_831 * _825) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_782 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _845 = ((_831 * _826) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_786 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _846 = ((_831 * _827) / cbModelParam._m0[35u].z) + ((((((_790 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _848 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_844, _845, _846), 0.0);
        vec4 _855 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_844, _845, _846), 0.0);
        vec4 _862 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_844, _845, _846), 0.0);
        vec4 _869 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_844, _845, _846), 0.0);
        float _881 = exp2((_848.w + (-0.5)) * 20.0) * 2.0;
        float _882 = _881 * (_848.x + (-0.5));
        float _883 = _881 * (_848.y + (-0.5));
        float _884 = _881 * (_848.z + (-0.5));
        float _891 = exp2((_855.w + (-0.5)) * 20.0) * 2.0;
        float _892 = _891 * (_855.x + (-0.5));
        float _893 = _891 * (_855.y + (-0.5));
        float _894 = _891 * (_855.z + (-0.5));
        float _901 = exp2((_862.w + (-0.5)) * 20.0) * 2.0;
        float _902 = _901 * (_862.x + (-0.5));
        float _903 = _901 * (_862.y + (-0.5));
        float _904 = _901 * (_862.z + (-0.5));
        float _911 = exp2((_869.w + (-0.5)) * 20.0) * 2.0;
        float _912 = _911 * (_869.x + (-0.5));
        float _913 = _911 * (_869.y + (-0.5));
        float _914 = _911 * (_869.z + (-0.5));
        float _915 = isnan(0.0) ? _912 : (isnan(_912) ? 0.0 : max(_912, 0.0));
        float _916 = isnan(0.0) ? _913 : (isnan(_913) ? 0.0 : max(_913, 0.0));
        float _917 = isnan(0.0) ? _914 : (isnan(_914) ? 0.0 : max(_914, 0.0));
        float _918 = _882 * 0.5;
        float _919 = _892 * 0.5;
        float _920 = _902 * 0.5;
        float _921 = dot(vec3(_918, _919, _920), vec3(_918, _919, _920));
        float _926 = (_921 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_921);
        float _934 = (dot(vec3(_244, _245, _246), vec3(_926 * _918, _926 * _919, _926 * _920)) + 1.0) * 0.5;
        float _3387 = isnan(0.0) ? _934 : (isnan(_934) ? 0.0 : max(_934, 0.0));
        float _943 = sqrt(((_919 * _919) + (_918 * _918)) + (_920 * _920)) / (_915 + 9.9999997473787516355514526367188e-06);
        float _3398 = isnan(0.0) ? _943 : (isnan(_943) ? 0.0 : max(_943, 0.0));
        float _944 = isnan(1.0) ? _3398 : (isnan(_3398) ? 1.0 : min(_3398, 1.0));
        float _945 = _944 * 2.0;
        float _949 = (1.0 - _944) / (_944 + 1.0);
        float _3409 = isnan(0.0) ? _949 : (isnan(_949) ? 0.0 : max(_949, 0.0));
        float _950 = isnan(1.0) ? _3409 : (isnan(_3409) ? 1.0 : min(_3409, 1.0));
        float _959 = ((((1.0 - _950) * (_945 + 2.0)) * exp2(log2(isnan(1.0) ? _3387 : (isnan(_3387) ? 1.0 : min(_3387, 1.0))) * (_945 + 1.0))) + _950) * _915;
        float _960 = _883 * 0.5;
        float _961 = _893 * 0.5;
        float _962 = _903 * 0.5;
        float _963 = dot(vec3(_960, _961, _962), vec3(_960, _961, _962));
        float _968 = (_963 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_963);
        float _976 = (dot(vec3(_244, _245, _246), vec3(_968 * _960, _968 * _961, _968 * _962)) + 1.0) * 0.5;
        float _3420 = isnan(0.0) ? _976 : (isnan(_976) ? 0.0 : max(_976, 0.0));
        float _985 = sqrt(((_961 * _961) + (_960 * _960)) + (_962 * _962)) / (_916 + 9.9999997473787516355514526367188e-06);
        float _3431 = isnan(0.0) ? _985 : (isnan(_985) ? 0.0 : max(_985, 0.0));
        float _986 = isnan(1.0) ? _3431 : (isnan(_3431) ? 1.0 : min(_3431, 1.0));
        float _987 = _986 * 2.0;
        float _991 = (1.0 - _986) / (_986 + 1.0);
        float _3442 = isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0));
        float _992 = isnan(1.0) ? _3442 : (isnan(_3442) ? 1.0 : min(_3442, 1.0));
        float _1001 = ((((1.0 - _992) * (_987 + 2.0)) * exp2(log2(isnan(1.0) ? _3420 : (isnan(_3420) ? 1.0 : min(_3420, 1.0))) * (_987 + 1.0))) + _992) * _916;
        float _1002 = _884 * 0.5;
        float _1003 = _894 * 0.5;
        float _1004 = _904 * 0.5;
        float _1005 = dot(vec3(_1002, _1003, _1004), vec3(_1002, _1003, _1004));
        float _1010 = (_1005 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1005);
        float _1018 = (dot(vec3(_244, _245, _246), vec3(_1010 * _1002, _1010 * _1003, _1010 * _1004)) + 1.0) * 0.5;
        float _3453 = isnan(0.0) ? _1018 : (isnan(_1018) ? 0.0 : max(_1018, 0.0));
        float _1027 = sqrt(((_1003 * _1003) + (_1002 * _1002)) + (_1004 * _1004)) / (_917 + 9.9999997473787516355514526367188e-06);
        float _3464 = isnan(0.0) ? _1027 : (isnan(_1027) ? 0.0 : max(_1027, 0.0));
        float _1028 = isnan(1.0) ? _3464 : (isnan(_3464) ? 1.0 : min(_3464, 1.0));
        float _1029 = _1028 * 2.0;
        float _1033 = (1.0 - _1028) / (_1028 + 1.0);
        float _3475 = isnan(0.0) ? _1033 : (isnan(_1033) ? 0.0 : max(_1033, 0.0));
        float _1034 = isnan(1.0) ? _3475 : (isnan(_3475) ? 1.0 : min(_3475, 1.0));
        float _1043 = ((((1.0 - _1034) * (_1029 + 2.0)) * exp2(log2(isnan(1.0) ? _3453 : (isnan(_3453) ? 1.0 : min(_3453, 1.0))) * (_1029 + 1.0))) + _1034) * _917;
        _1051 = _884;
        _1052 = _883;
        _1053 = _882;
        _1054 = _894;
        _1055 = _893;
        _1056 = _892;
        _1057 = _904;
        _1058 = _903;
        _1059 = _902;
        _1060 = _917;
        _1061 = _916;
        _1062 = _915;
        _1063 = cbModelParam._m0[36u].w * (isnan(0.0) ? _959 : (isnan(_959) ? 0.0 : max(_959, 0.0)));
        _1064 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1001 : (isnan(_1001) ? 0.0 : max(_1001, 0.0)));
        _1065 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0)));
    }
    else
    {
        _1051 = _742;
        _1052 = _742;
        _1053 = _742;
        _1054 = _742;
        _1055 = _742;
        _1056 = _742;
        _1057 = _742;
        _1058 = _742;
        _1059 = _742;
        _1060 = _742;
        _1061 = _742;
        _1062 = _742;
        _1063 = 0.0;
        _1064 = 0.0;
        _1065 = 0.0;
    }
    float _1075 = (cbModelParam._m0[1u].x * (_1063 - _754)) + _754;
    float _1076 = (cbModelParam._m0[1u].x * (_1064 - _755)) + _755;
    float _1077 = (cbModelParam._m0[1u].x * (_1065 - _756)) + _756;
    float _1098 = fma(_1077, cbSceneParam._m0[89u].z, fma(_1076, cbSceneParam._m0[89u].y, _1075 * cbSceneParam._m0[89u].x));
    float _1101 = fma(_1077, cbSceneParam._m0[90u].z, fma(_1076, cbSceneParam._m0[90u].y, _1075 * cbSceneParam._m0[90u].x));
    float _1104 = fma(_1077, cbSceneParam._m0[91u].z, fma(_1076, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1075));
    float _1119 = _407 * 0.5;
    float _1120 = _408 * 0.5;
    float _1121 = _409 * 0.5;
    float _1122 = dot(vec4(_1119, _1120, _1121, 1.0), vec4(_1053, _1056, _1059, _1062));
    float _1125 = dot(vec4(_1119, _1120, _1121, 1.0), vec4(_1052, _1055, _1058, _1061));
    float _1128 = dot(vec4(_1119, _1120, _1121, 1.0), vec4(_1051, _1054, _1057, _1060));
    float _1162;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1135 = dot(vec4(_1119, _1120, _1121, 1.0), vec4(_741, _745, _748, _751));
        float _1139 = dot(vec4(_1119, _1120, _1121, 1.0), vec4(_743, _746, _749, _752));
        float _1143 = dot(vec4(_1119, _1120, _1121, 1.0), vec4(_744, _747, _750, _753));
        float _1150 = dot(vec4(cbModelParam._m0[39u]), vec4(_1119, _1120, _1121, 1.0));
        _1162 = dot(vec3(isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0)), isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0)), isnan(0.0) ? _1135 : (isnan(_1135) ? 0.0 : max(_1135, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1150) ? 0.0 : (isnan(0.0) ? _1150 : max(0.0, _1150))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1162 = 1.0;
    }
    float _1173;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1164 = dot(vec4(cbModelParam._m0[40u]), vec4(_1119, _1120, _1121, 1.0));
        _1173 = dot(vec3(isnan(0.0) ? _1122 : (isnan(_1122) ? 0.0 : max(_1122, 0.0)), isnan(0.0) ? _1125 : (isnan(_1125) ? 0.0 : max(_1125, 0.0)), isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1164) ? 0.0 : (isnan(0.0) ? _1164 : max(0.0, _1164))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1173 = 1.0;
    }
    float _1177 = (_1173 * cbModelParam._m0[1u].x) + (_1162 * (1.0 - cbModelParam._m0[1u].x));
    float _1186 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1267;
    float _1269;
    float _1271;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1234 = fma(_439, cbModelParam._m0[13u].z, fma(_435, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _431)) + cbModelParam._m0[13u].w;
        float _1238 = fma(_439, cbModelParam._m0[14u].z, fma(_435, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _431)) + cbModelParam._m0[14u].w;
        float _1242 = fma(_439, cbModelParam._m0[15u].z, fma(_435, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _431)) + cbModelParam._m0[15u].w;
        float _1245 = fma(_409, cbModelParam._m0[13u].z, fma(_408, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _407));
        float _1248 = fma(_409, cbModelParam._m0[14u].z, fma(_408, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _407));
        float _1251 = fma(_409, cbModelParam._m0[15u].z, fma(_408, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _407));
        float _1277;
        if (_1245 > 0.0)
        {
            _1277 = abs((1.0 - _1234) / _1245);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1245 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1234 + 1.0) / _1245);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1277 = frontier_phi_14_12_ladder;
        }
        float _1450;
        if (_1248 > 0.0)
        {
            _1450 = abs((1.0 - _1238) / _1248);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1248 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1238 + 1.0) / _1248);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1450 = frontier_phi_23_19_ladder;
        }
        float _1747;
        if (_1251 > 0.0)
        {
            _1747 = abs((1.0 - _1242) / _1251);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1251 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1242 + 1.0) / _1251);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _1747 = frontier_phi_35_30_ladder;
        }
        float _1749 = isnan(_1450) ? _1277 : (isnan(_1277) ? _1450 : min(_1277, _1450));
        float _1750 = isnan(_1747) ? _1749 : (isnan(_1749) ? _1747 : min(_1749, _1747));
        float _1754 = (_1750 * _1245) + _1234;
        float _1755 = (_1750 * _1248) + _1238;
        float _1756 = (_1750 * _1251) + _1242;
        float _1757 = _1750 * 9.9999997473787516355514526367188e-05;
        float _1759 = (-1.0) - _1757;
        float _1761 = _1757 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_1756 > _1761) || ((_1756 < _1759) || ((_1755 > _1761) || ((_1755 < _1759) || ((_1754 < _1759) || (_1754 > _1761))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1901 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1756, cbModelParam._m0[9u].z, fma(_1755, cbModelParam._m0[9u].y, _1754 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1756, cbModelParam._m0[10u].z, fma(_1755, cbModelParam._m0[10u].y, _1754 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1756, cbModelParam._m0[11u].z, fma(_1755, cbModelParam._m0[11u].y, _1754 * cbModelParam._m0[11u].x))), _1186);
            frontier_phi_13_35_ladder = _1901.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _1901.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _1901.x * cbModelParam._m0[1u].y;
        }
        _1267 = frontier_phi_13_35_ladder_2;
        _1269 = frontier_phi_13_35_ladder_1;
        _1271 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1255 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_407, _408, _409), _1186);
        _1267 = _1255.x * cbModelParam._m0[1u].y;
        _1269 = _1255.y * cbModelParam._m0[1u].y;
        _1271 = _1255.z * cbModelParam._m0[1u].y;
    }
    float _1274 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1366;
    float _1368;
    float _1370;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1330 = fma(_439, cbModelParam._m0[21u].z, fma(_435, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _431)) + cbModelParam._m0[21u].w;
        float _1334 = fma(_439, cbModelParam._m0[22u].z, fma(_435, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _431)) + cbModelParam._m0[22u].w;
        float _1338 = fma(_439, cbModelParam._m0[23u].z, fma(_435, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _431)) + cbModelParam._m0[23u].w;
        float _1341 = fma(_409, cbModelParam._m0[21u].z, fma(_408, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _407));
        float _1344 = fma(_409, cbModelParam._m0[22u].z, fma(_408, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _407));
        float _1347 = fma(_409, cbModelParam._m0[23u].z, fma(_408, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _407));
        float _1455;
        if (_1341 > 0.0)
        {
            _1455 = abs((1.0 - _1330) / _1341);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1341 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1330 + 1.0) / _1341);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1455 = frontier_phi_25_21_ladder;
        }
        float _1774;
        if (_1344 > 0.0)
        {
            _1774 = abs((1.0 - _1334) / _1344);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1344 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1334 + 1.0) / _1344);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1774 = frontier_phi_37_32_ladder;
        }
        float _2047;
        if (_1347 > 0.0)
        {
            _2047 = abs((1.0 - _1338) / _1347);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1347 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1338 + 1.0) / _1347);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2047 = frontier_phi_47_44_ladder;
        }
        float _2049 = isnan(_1774) ? _1455 : (isnan(_1455) ? _1774 : min(_1455, _1774));
        float _2050 = isnan(_2047) ? _2049 : (isnan(_2049) ? _2047 : min(_2049, _2047));
        float _2054 = (_2050 * _1341) + _1330;
        float _2055 = (_2050 * _1344) + _1334;
        float _2056 = (_2050 * _1347) + _1338;
        float _2057 = _2050 * 9.9999997473787516355514526367188e-05;
        float _2058 = (-1.0) - _2057;
        float _2060 = _2057 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2056 > _2060) || ((_2056 < _2058) || ((_2055 > _2060) || ((_2055 < _2058) || ((_2054 < _2058) || (_2054 > _2060))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2147 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2056, cbModelParam._m0[17u].z, fma(_2055, cbModelParam._m0[17u].y, _2054 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2056, cbModelParam._m0[18u].z, fma(_2055, cbModelParam._m0[18u].y, _2054 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2056, cbModelParam._m0[19u].z, fma(_2055, cbModelParam._m0[19u].y, _2054 * cbModelParam._m0[19u].x))), _1274);
            frontier_phi_22_47_ladder = _2147.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2147.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2147.x * cbModelParam._m0[1u].z;
        }
        _1366 = frontier_phi_22_47_ladder_2;
        _1368 = frontier_phi_22_47_ladder_1;
        _1370 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1350 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_407, _408, _409), _1274);
        _1366 = _1350.x * cbModelParam._m0[1u].z;
        _1368 = _1350.y * cbModelParam._m0[1u].z;
        _1370 = _1350.z * cbModelParam._m0[1u].z;
    }
    float _1382 = _398 * 0.01200000010430812835693359375;
    float _1384 = _1382 * ((cbModelParam._m0[1u].w * (_1366 - _1267)) + _1267);
    float _1385 = _1382 * ((cbModelParam._m0[1u].w * (_1368 - _1269)) + _1269);
    float _1386 = _1382 * ((cbModelParam._m0[1u].w * (_1370 - _1271)) + _1271);
    float _1389 = fma(_1386, cbSceneParam._m0[89u].z, fma(_1385, cbSceneParam._m0[89u].y, _1384 * cbSceneParam._m0[89u].x));
    float _1392 = fma(_1386, cbSceneParam._m0[90u].z, fma(_1385, cbSceneParam._m0[90u].y, _1384 * cbSceneParam._m0[90u].x));
    float _1395 = fma(_1386, cbSceneParam._m0[91u].z, fma(_1385, cbSceneParam._m0[91u].y, _1384 * cbSceneParam._m0[91u].x));
    float _1429 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1433 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1437 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1441 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1442 = _1429 / _1441;
    float _1443 = _1433 / _1441;
    float _1444 = _1437 / _1441;
    float _1591;
    float _1592;
    float _1593;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1471 = ((uint(_1444 > cbSceneParam._m0[59u].y) + uint(_1444 > cbSceneParam._m0[59u].x)) + uint(_1444 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1472 = _1471 + 43u;
        uint _1480 = _1471 + 44u;
        uint _1488 = _1471 + 45u;
        uint _1496 = _1471 + 46u;
        float _1507 = fma(_1441, cbSceneParam._m0[_1472].w, fma(_1437, cbSceneParam._m0[_1472].z, fma(_1433, cbSceneParam._m0[_1472].y, _1429 * cbSceneParam._m0[_1472].x)));
        float _1511 = fma(_1441, cbSceneParam._m0[_1480].w, fma(_1437, cbSceneParam._m0[_1480].z, fma(_1433, cbSceneParam._m0[_1480].y, _1429 * cbSceneParam._m0[_1480].x)));
        float _1519 = fma(_1441, cbSceneParam._m0[_1496].w, fma(_1437, cbSceneParam._m0[_1496].z, fma(_1433, cbSceneParam._m0[_1496].y, _1429 * cbSceneParam._m0[_1496].x)));
        float _1524 = cbSceneParam._m0[33u].z * _1519;
        float _1526 = cbSceneParam._m0[33u].w * _1519;
        float _1529 = fma(_1441, cbSceneParam._m0[_1488].w, fma(_1437, cbSceneParam._m0[_1488].z, fma(_1433, cbSceneParam._m0[_1488].y, _1429 * cbSceneParam._m0[_1488].x))) / _1519;
        float _1577 = (cbSceneParam._m0[33u].x - sqrt(((_1443 * _1443) + (_1442 * _1442)) + (_1444 * _1444))) * cbSceneParam._m0[33u].y;
        float _3601 = isnan(0.0) ? _1577 : (isnan(_1577) ? 0.0 : max(_1577, 0.0));
        float _1584 = (isnan(1.0) ? _3601 : (isnan(_3601) ? 1.0 : min(_3601, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1524 + _1507) / _1519, (_1526 + _1511) / _1519), _1529), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1526 + _1507) / _1519, (_1511 - _1524) / _1519), _1529), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1507 - _1524) / _1519, (_1511 - _1526) / _1519), _1529), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1507 - _1526) / _1519, (_1524 + _1511) / _1519), _1529), 0.0)).x), vec4(0.25)));
        _1591 = 1.0 - (_1584 * cbSceneParam._m0[34u].x);
        _1592 = 1.0 - (_1584 * cbSceneParam._m0[34u].y);
        _1593 = 1.0 - (_1584 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1591 = 1.0;
        _1592 = 1.0;
        _1593 = 1.0;
    }
    float _1657;
    float _1659;
    float _1661;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1645 = fma(_1441, cbSceneParam._m0[63u].w, fma(_1437, cbSceneParam._m0[63u].z, fma(_1433, cbSceneParam._m0[63u].y, _1429 * cbSceneParam._m0[63u].x)));
        float _1646 = fma(_1441, cbSceneParam._m0[60u].w, fma(_1437, cbSceneParam._m0[60u].z, fma(_1433, cbSceneParam._m0[60u].y, _1429 * cbSceneParam._m0[60u].x))) / _1645;
        float _1647 = fma(_1441, cbSceneParam._m0[61u].w, fma(_1437, cbSceneParam._m0[61u].z, fma(_1433, cbSceneParam._m0[61u].y, _1429 * cbSceneParam._m0[61u].x))) / _1645;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_1646 >= cbSceneParam._m0[64u].x) && (_1647 >= cbSceneParam._m0[64u].y)) && (_1646 <= cbSceneParam._m0[64u].z)) && (_1647 <= cbSceneParam._m0[64u].w))
        {
            float _1787 = fma(_1441, cbSceneParam._m0[62u].w, fma(_1437, cbSceneParam._m0[62u].z, fma(_1433, cbSceneParam._m0[62u].y, _1429 * cbSceneParam._m0[62u].x))) / _1645;
            float _1791 = isnan(cbSceneParam._m0[41u].w) ? _1787 : (isnan(_1787) ? cbSceneParam._m0[41u].w : max(_1787, cbSceneParam._m0[41u].w));
            float _1834 = (cbSceneParam._m0[33u].x - sqrt(((_1443 * _1443) + (_1442 * _1442)) + (_1444 * _1444))) * cbSceneParam._m0[33u].y;
            float _3617 = isnan(0.0) ? _1834 : (isnan(_1834) ? 0.0 : max(_1834, 0.0));
            float _1841 = (isnan(1.0) ? _3617 : (isnan(_3617) ? 1.0 : min(_3617, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1646, cbSceneParam._m0[33u].w + _1647), _1791), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1646, _1647 - cbSceneParam._m0[33u].z), _1791), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1646 - cbSceneParam._m0[33u].z, _1647 - cbSceneParam._m0[33u].w), _1791), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1646 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1647), _1791), 0.0)).x), vec4(0.25)));
            float _1845 = 1.0 - (_1841 * cbSceneParam._m0[34u].x);
            float _1846 = 1.0 - (_1841 * cbSceneParam._m0[34u].y);
            float _1847 = 1.0 - (_1841 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_1847) ? _1593 : (isnan(_1593) ? _1847 : min(_1593, _1847));
            frontier_phi_34_33_ladder_1 = isnan(_1846) ? _1592 : (isnan(_1592) ? _1846 : min(_1592, _1846));
            frontier_phi_34_33_ladder_2 = isnan(_1845) ? _1591 : (isnan(_1591) ? _1845 : min(_1591, _1845));
        }
        else
        {
            frontier_phi_34_33_ladder = _1593;
            frontier_phi_34_33_ladder_1 = _1592;
            frontier_phi_34_33_ladder_2 = _1591;
        }
        _1657 = frontier_phi_34_33_ladder_2;
        _1659 = frontier_phi_34_33_ladder_1;
        _1661 = frontier_phi_34_33_ladder;
    }
    else
    {
        _1657 = _1591;
        _1659 = _1592;
        _1661 = _1593;
    }
    uvec4 _1666 = floatBitsToUint(cbInstanceData._m0[_373 + 5u]);
    uint _1668 = _1666.x * 14u;
    uint _1669 = _1668 + 13u;
    float _1676 = _398 + (-1.0);
    float _1682 = (cbLight._m0[_1669].x * _1676) + 1.0;
    float _1683 = (cbLight._m0[_1669].y * _1676) + 1.0;
    float _1684 = (cbLight._m0[_1669].z * _1676) + 1.0;
    float _1685 = (cbLight._m0[_1669].w * _1676) + 1.0;
    uint _1686 = _1668 + 5u;
    float _1692 = isnan(1.0) ? _1683 : (isnan(_1683) ? 1.0 : min(_1683, 1.0));
    uint _1696 = _1668 + 4u;
    float _1706 = isnan(1.0) ? _1682 : (isnan(_1682) ? 1.0 : min(_1682, 1.0));
    uint _1710 = _1668 | 1u;
    float _1721 = dot(vec3(cbLight._m0[_1668].xyz), vec3(_244, _245, _246));
    float _1724 = dot(vec3(cbLight._m0[_1710].xyz), vec3(_244, _245, _246));
    float _3653 = isnan(0.0) ? _1721 : (isnan(_1721) ? 0.0 : max(_1721, 0.0));
    float _3664 = isnan(0.0) ? _1724 : (isnan(_1724) ? 0.0 : max(_1724, 0.0));
    float _1729 = (isnan(1.0) ? _3653 : (isnan(_3653) ? 1.0 : min(_3653, 1.0))) * 0.3183098733425140380859375;
    float _1731 = (isnan(1.0) ? _3664 : (isnan(_3664) ? 1.0 : min(_3664, 1.0))) * 0.3183098733425140380859375;
    float _1738 = ((cbLight._m0[_1686].x * _1692) * _1731) + (((cbLight._m0[_1696].x * _1657) * _1706) * _1729);
    float _1739 = ((_1692 * cbLight._m0[_1686].y) * _1731) + (((cbLight._m0[_1696].y * _1659) * _1706) * _1729);
    float _1740 = ((_1692 * cbLight._m0[_1686].z) * _1731) + (((cbLight._m0[_1696].z * _1661) * _1706) * _1729);
    uvec4 _1744 = floatBitsToUint(cbLight._m0[_1668 + 12u]);
    bool _1746 = _1744.x == 0u;
    float _1848;
    float _1850;
    float _1852;
    if (_1746)
    {
        _1848 = _1738;
        _1850 = _1739;
        _1852 = _1740;
    }
    else
    {
        uint _1856 = _1668 + 6u;
        float _1872 = (dot(vec3(cbLight._m0[_1668 + 2u].xyz), vec3(_244, _245, _246)) * 0.5) + 0.5;
        float _1873 = _1872 * _1872;
        float _3675 = isnan(0.0) ? _1873 : (isnan(_1873) ? 0.0 : max(_1873, 0.0));
        float _1874 = isnan(1.0) ? _3675 : (isnan(_3675) ? 1.0 : min(_3675, 1.0));
        float _1875 = isnan(1.0) ? _1684 : (isnan(_1684) ? 1.0 : min(_1684, 1.0));
        _1848 = (((cbLight._m0[_1856].x * 0.3183098733425140380859375) * _1874) * _1875) + _1738;
        _1850 = (((cbLight._m0[_1856].y * 0.3183098733425140380859375) * _1874) * _1875) + _1739;
        _1852 = (((cbLight._m0[_1856].z * 0.3183098733425140380859375) * _1874) * _1875) + _1740;
    }
    bool _1855 = _1744.y == 0u;
    float _1910;
    float _1912;
    float _1914;
    if (_1855)
    {
        _1910 = _1848;
        _1912 = _1850;
        _1914 = _1852;
    }
    else
    {
        uint _2018 = _1668 + 7u;
        float _2034 = (dot(vec3(cbLight._m0[_1668 + 3u].xyz), vec3(_244, _245, _246)) * 0.5) + 0.5;
        float _2035 = _2034 * _2034;
        float _3691 = isnan(0.0) ? _2035 : (isnan(_2035) ? 0.0 : max(_2035, 0.0));
        float _2036 = isnan(1.0) ? _3691 : (isnan(_3691) ? 1.0 : min(_3691, 1.0));
        float _2037 = isnan(1.0) ? _1685 : (isnan(_1685) ? 1.0 : min(_1685, 1.0));
        _1910 = (((cbLight._m0[_2018].x * 0.3183098733425140380859375) * _2036) * _2037) + _1848;
        _1912 = (((cbLight._m0[_2018].y * 0.3183098733425140380859375) * _2036) * _2037) + _1850;
        _1914 = (((cbLight._m0[_2018].z * 0.3183098733425140380859375) * _2036) * _2037) + _1852;
    }
    uint _1916 = _1668 + 8u;
    float _1922 = cbLight._m0[_1668].x + _324;
    float _1923 = cbLight._m0[_1668].y + _325;
    float _1924 = cbLight._m0[_1668].z + _326;
    float _1928 = inversesqrt(dot(vec3(_1922, _1923, _1924), vec3(_1922, _1923, _1924)));
    float _1932 = dot(vec3(_244, _245, _246), vec3(cbLight._m0[_1668].xyz));
    float _3707 = isnan(0.0) ? _1932 : (isnan(_1932) ? 0.0 : max(_1932, 0.0));
    float _1935 = isnan(1.0) ? _3707 : (isnan(_3707) ? 1.0 : min(_3707, 1.0));
    float _3718 = isnan(0.0) ? _399 : (isnan(_399) ? 0.0 : max(_399, 0.0));
    float _1936 = isnan(1.0) ? _3718 : (isnan(_3718) ? 1.0 : min(_3718, 1.0));
    float _1937 = dot(vec3(cbLight._m0[_1668].xyz), vec3(_1922 * _1928, _1923 * _1928, _1924 * _1928));
    float _3729 = isnan(0.0) ? _1937 : (isnan(_1937) ? 0.0 : max(_1937, 0.0));
    float _1948 = (exp2(log2(1.0 - (isnan(1.0) ? _3729 : (isnan(_3729) ? 1.0 : min(_3729, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1954 = (0.5 / ((_1935 + 9.9999999392252902907785028219223e-09) + _1936)) * _1935;
    float _3740 = isnan(0.0) ? _1954 : (isnan(_1954) ? 0.0 : max(_1954, 0.0));
    float _1956 = (isnan(1.0) ? _3740 : (isnan(_3740) ? 1.0 : min(_3740, 1.0))) * 0.31831014156341552734375;
    uint _1970 = _1668 + 9u;
    float _1976 = cbLight._m0[_1710].x + _324;
    float _1977 = cbLight._m0[_1710].y + _325;
    float _1978 = cbLight._m0[_1710].z + _326;
    float _1982 = inversesqrt(dot(vec3(_1976, _1977, _1978), vec3(_1976, _1977, _1978)));
    float _1986 = dot(vec3(_244, _245, _246), vec3(cbLight._m0[_1710].xyz));
    float _3751 = isnan(0.0) ? _1986 : (isnan(_1986) ? 0.0 : max(_1986, 0.0));
    float _1989 = isnan(1.0) ? _3751 : (isnan(_3751) ? 1.0 : min(_3751, 1.0));
    float _1990 = dot(vec3(cbLight._m0[_1710].xyz), vec3(_1976 * _1982, _1977 * _1982, _1978 * _1982));
    float _3762 = isnan(0.0) ? _1990 : (isnan(_1990) ? 0.0 : max(_1990, 0.0));
    float _1999 = (exp2(log2(1.0 - (isnan(1.0) ? _3762 : (isnan(_3762) ? 1.0 : min(_3762, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2003 = (0.5 / ((_1989 + 9.9999999392252902907785028219223e-09) + _1936)) * _1989;
    float _3773 = isnan(0.0) ? _2003 : (isnan(_2003) ? 0.0 : max(_2003, 0.0));
    float _2005 = (isnan(1.0) ? _3773 : (isnan(_3773) ? 1.0 : min(_3773, 1.0))) * 0.31831014156341552734375;
    float _2015 = (((_1999 * cbLight._m0[_1970].x) * _2005) * _1692) + ((((cbLight._m0[_1916].x * _1657) * _1948) * _1956) * _1706);
    float _2016 = (((_1999 * cbLight._m0[_1970].y) * _2005) * _1692) + ((((cbLight._m0[_1916].y * _1659) * _1948) * _1956) * _1706);
    float _2017 = (((_1999 * cbLight._m0[_1970].z) * _2005) * _1692) + ((((cbLight._m0[_1916].z * _1661) * _1948) * _1956) * _1706);
    float _2073;
    float _2075;
    float _2077;
    if (_1746)
    {
        _2073 = _2015;
        _2075 = _2016;
        _2077 = _2017;
    }
    else
    {
        uint _2079 = _1668 + 10u;
        uint _2085 = _1668 + 2u;
        float _2091 = cbLight._m0[_2085].x + _324;
        float _2092 = cbLight._m0[_2085].y + _325;
        float _2093 = cbLight._m0[_2085].z + _326;
        float _2097 = inversesqrt(dot(vec3(_2091, _2092, _2093), vec3(_2091, _2092, _2093)));
        float _2101 = dot(vec3(_244, _245, _246), vec3(cbLight._m0[_2085].xyz));
        float _3784 = isnan(0.0) ? _2101 : (isnan(_2101) ? 0.0 : max(_2101, 0.0));
        float _2104 = isnan(1.0) ? _3784 : (isnan(_3784) ? 1.0 : min(_3784, 1.0));
        float _2105 = dot(vec3(cbLight._m0[_2085].xyz), vec3(_2091 * _2097, _2092 * _2097, _2093 * _2097));
        float _3795 = isnan(0.0) ? _2105 : (isnan(_2105) ? 0.0 : max(_2105, 0.0));
        float _2114 = (exp2(log2(1.0 - (isnan(1.0) ? _3795 : (isnan(_3795) ? 1.0 : min(_3795, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2118 = (0.5 / ((_2104 + 9.9999999392252902907785028219223e-09) + _1936)) * _2104;
        float _3806 = isnan(0.0) ? _2118 : (isnan(_2118) ? 0.0 : max(_2118, 0.0));
        float _2120 = (isnan(1.0) ? _3806 : (isnan(_3806) ? 1.0 : min(_3806, 1.0))) * 0.31831014156341552734375;
        float _2121 = isnan(1.0) ? _1684 : (isnan(_1684) ? 1.0 : min(_1684, 1.0));
        _2073 = (((_2114 * cbLight._m0[_2079].x) * _2120) * _2121) + _2015;
        _2075 = (((_2114 * cbLight._m0[_2079].y) * _2120) * _2121) + _2016;
        _2077 = (((_2114 * cbLight._m0[_2079].z) * _2120) * _2121) + _2017;
    }
    float _2152;
    float _2154;
    float _2156;
    if (_1855)
    {
        _2152 = _2073;
        _2154 = _2075;
        _2156 = _2077;
    }
    else
    {
        uint _2163 = _1668 + 11u;
        uint _2169 = _1668 + 3u;
        float _2175 = cbLight._m0[_2169].x + _324;
        float _2176 = cbLight._m0[_2169].y + _325;
        float _2177 = cbLight._m0[_2169].z + _326;
        float _2181 = inversesqrt(dot(vec3(_2175, _2176, _2177), vec3(_2175, _2176, _2177)));
        float _2185 = dot(vec3(_244, _245, _246), vec3(cbLight._m0[_2169].xyz));
        float _3822 = isnan(0.0) ? _2185 : (isnan(_2185) ? 0.0 : max(_2185, 0.0));
        float _2188 = isnan(1.0) ? _3822 : (isnan(_3822) ? 1.0 : min(_3822, 1.0));
        float _2189 = dot(vec3(cbLight._m0[_2169].xyz), vec3(_2175 * _2181, _2176 * _2181, _2177 * _2181));
        float _3833 = isnan(0.0) ? _2189 : (isnan(_2189) ? 0.0 : max(_2189, 0.0));
        float _2198 = (exp2(log2(1.0 - (isnan(1.0) ? _3833 : (isnan(_3833) ? 1.0 : min(_3833, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2202 = (0.5 / ((_2188 + 9.9999999392252902907785028219223e-09) + _1936)) * _2188;
        float _3844 = isnan(0.0) ? _2202 : (isnan(_2202) ? 0.0 : max(_2202, 0.0));
        float _2204 = (isnan(1.0) ? _3844 : (isnan(_3844) ? 1.0 : min(_3844, 1.0))) * 0.31831014156341552734375;
        float _2205 = isnan(1.0) ? _1685 : (isnan(_1685) ? 1.0 : min(_1685, 1.0));
        _2152 = (((_2198 * cbLight._m0[_2163].x) * _2204) * _2205) + _2073;
        _2154 = (((_2198 * cbLight._m0[_2163].y) * _2204) * _2205) + _2075;
        _2156 = (((_2198 * cbLight._m0[_2163].z) * _2204) * _2205) + _2077;
    }
    float _2271;
    float _2273;
    float _2275;
    float _2277;
    float _2279;
    float _2281;
    if (_1666.y == 0u)
    {
        uvec4 _2226 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2227 = _2226.x;
        uint _2238 = uint((float(_2226.y) * floor(float(uint(cbSceneParam._m0[85u].y * _333) / _2227))) + floor(float(uint(cbSceneParam._m0[85u].x * _332) / _2227)));
        float _2248 = (log2(_1444 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2249 = isnan(0.0) ? _2248 : (isnan(_2248) ? 0.0 : max(_2248, 0.0));
        uint _2252 = uint(isnan(14.0) ? _2249 : (isnan(_2249) ? 14.0 : min(_2249, 14.0)));
        uvec4 _2257 = texelFetch(g_lightClusterGridBuffer, int(((_2252 << 2u) + (_2238 << 6u)) >> 2u));
        uint _2258 = _2257.x;
        uint _2259 = _2226.z;
        float _2373;
        float _2375;
        float _2377;
        float _2379;
        float _2381;
        float _2383;
        if (((((1u << ((_2259 >> 4u) & 15u)) + 4294967295u) & _2258) == 0u) || ((_2259 & 240u) == 0u))
        {
            _2373 = 0.0;
            _2375 = 0.0;
            _2377 = 0.0;
            _2379 = 0.0;
            _2381 = 0.0;
            _2383 = 0.0;
        }
        else
        {
            float _2374;
            float _2376;
            float _2378;
            float _2380;
            float _2382;
            float _2384;
            float _2525 = 0.0;
            float _2526 = 0.0;
            float _2527 = 0.0;
            float _2528 = 0.0;
            float _2529 = 0.0;
            float _2530 = 0.0;
            uint _2531 = 0u;
            uint _2540;
            bool _2541;
            for (;;)
            {
                _2540 = texelFetch(g_lightClassification, int((((_2252 << 5u) + (_2238 << 9u)) + (_2531 << 2u)) >> 2u)).x;
                _2541 = _2540 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_2541)
                {
                    frontier_phi_66_pred = _2530;
                    frontier_phi_66_pred_1 = _2529;
                    frontier_phi_66_pred_2 = _2528;
                    frontier_phi_66_pred_3 = _2527;
                    frontier_phi_66_pred_4 = _2526;
                    frontier_phi_66_pred_5 = _2525;
                }
                else
                {
                    float _2649;
                    float _2650;
                    float _2651;
                    float _2652;
                    float _2653;
                    float _2654;
                    uint _2655;
                    _2649 = _2525;
                    _2650 = _2526;
                    _2651 = _2527;
                    _2652 = _2528;
                    _2653 = _2529;
                    _2654 = _2530;
                    _2655 = _2540;
                    float _2581;
                    float _2582;
                    float _2583;
                    float _2584;
                    float _2585;
                    float _2586;
                    for (;;)
                    {
                        uint _2659 = uint(findLSB(_2655)) + (_2531 << 5u);
                        uint _2656 = (_2655 + 4294967295u) & _2655;
                        uint _2661 = _2659 * 48u;
                        vec4 _2675 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2661)).x, texelFetch(g_PointLightRenderingBuffer, int(_2661 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2661 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2661 + 3u)).x));
                        uint _2681 = (_2659 * 48u) + 4u;
                        vec4 _2694 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2681)).x, texelFetch(g_PointLightRenderingBuffer, int(_2681 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2681 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2681 + 3u)).x));
                        uint _2700 = (_2659 * 48u) + 8u;
                        vec3 _2711 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2700)).x, texelFetch(g_PointLightRenderingBuffer, int(_2700 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2700 + 2u)).x));
                        float _2715 = _2675.x - _1442;
                        float _2716 = _2675.y - _1443;
                        float _2717 = _2675.z - _1444;
                        float _2718 = dot(vec3(_2715, _2716, _2717), vec3(_2715, _2716, _2717));
                        float _2721 = inversesqrt(_2718);
                        float _2730 = 1.0 - (_2718 * _2675.w);
                        float _3870 = isnan(0.0) ? _2730 : (isnan(_2730) ? 0.0 : max(_2730, 0.0));
                        float _2731 = isnan(1.0) ? _3870 : (isnan(_3870) ? 1.0 : min(_3870, 1.0));
                        float _2732 = sqrt(_2718) * _2694.w;
                        float _2735 = 1.39999997615814208984375 / (_2732 + 1.39999997615814208984375);
                        float _2736 = _2735 * _2735;
                        float _2739 = ((1.0 - _2736) * dot(vec3(_354, _357, _360), vec3(_2721 * _2715, _2721 * _2716, _2721 * _2717))) + _2736;
                        float _2742 = _2732 * _2732;
                        float _2746 = ((isnan(0.0) ? _2739 : (isnan(_2739) ? 0.0 : max(_2739, 0.0))) * _2731) / ((_2742 * 0.699999988079071044921875) + 1.0);
                        float _2750 = (-0.0) - _1442;
                        float _2751 = (-0.0) - _1443;
                        float _2752 = (-0.0) - _1444;
                        float _2756 = inversesqrt(dot(vec3(_2750, _2751, _2752), vec3(_2750, _2751, _2752)));
                        float _2760 = dot(vec3(_354, _357, _360), vec3(_2756 * _2750, _2756 * _2751, _2756 * _2752));
                        float _3886 = isnan(0.0) ? _2760 : (isnan(_2760) ? 0.0 : max(_2760, 0.0));
                        float _3897 = isnan(0.0) ? _2739 : (isnan(_2739) ? 0.0 : max(_2739, 0.0));
                        float _2764 = isnan(1.0) ? _3897 : (isnan(_3897) ? 1.0 : min(_3897, 1.0));
                        float _2768 = (0.5 / (((isnan(1.0) ? _3886 : (isnan(_3886) ? 1.0 : min(_3886, 1.0))) + 9.9999999392252902907785028219223e-09) + _2764)) * _2764;
                        float _3908 = isnan(0.0) ? _2768 : (isnan(_2768) ? 0.0 : max(_2768, 0.0));
                        float _2777 = (((isnan(1.0) ? _3908 : (isnan(_3908) ? 1.0 : min(_3908, 1.0))) * 3.1415927410125732421875) / ((_2742 * 2.1991131305694580078125) + 3.141590118408203125)) * _2731;
                        _2584 = (_2746 * _2694.x) + _2652;
                        _2585 = (_2746 * _2694.y) + _2653;
                        _2586 = (_2746 * _2694.z) + _2654;
                        _2581 = (_2777 * _2711.x) + _2649;
                        _2582 = (_2777 * _2711.y) + _2650;
                        _2583 = (_2777 * _2711.z) + _2651;
                        if (_2656 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2649 = _2581;
                            _2650 = _2582;
                            _2651 = _2583;
                            _2652 = _2584;
                            _2653 = _2585;
                            _2654 = _2586;
                            _2655 = _2656;
                        }
                    }
                    frontier_phi_66_pred = _2586;
                    frontier_phi_66_pred_1 = _2585;
                    frontier_phi_66_pred_2 = _2584;
                    frontier_phi_66_pred_3 = _2583;
                    frontier_phi_66_pred_4 = _2582;
                    frontier_phi_66_pred_5 = _2581;
                }
                _2384 = frontier_phi_66_pred;
                _2382 = frontier_phi_66_pred_1;
                _2380 = frontier_phi_66_pred_2;
                _2378 = frontier_phi_66_pred_3;
                _2376 = frontier_phi_66_pred_4;
                _2374 = frontier_phi_66_pred_5;
                uint _2532 = _2531 + 1u;
                if (_2532 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2525 = _2374;
                    _2526 = _2376;
                    _2527 = _2378;
                    _2528 = _2380;
                    _2529 = _2382;
                    _2530 = _2384;
                    _2531 = _2532;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2373 = _2374;
            _2375 = _2376;
            _2377 = _2378;
            _2379 = _2380;
            _2381 = _2382;
            _2383 = _2384;
        }
        uvec4 _2387 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2388 = _2387.z;
        uint _2390 = (_2388 >> 8u) & 15u;
        float _2496;
        float _2498;
        float _2500;
        float _2502;
        float _2504;
        float _2506;
        if (((4294967295u << _2390) & _2258) == 0u)
        {
            _2496 = _2373;
            _2498 = _2375;
            _2500 = _2377;
            _2502 = _2379;
            _2504 = _2381;
            _2506 = _2383;
        }
        else
        {
            float _2521 = inversesqrt(dot(vec3(_1442, _1443, _1444), vec3(_1442, _1443, _1444)));
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2390 < ((_2388 >> 12u) & 15u))
            {
                float _2497;
                float _2499;
                float _2501;
                float _2503;
                float _2505;
                float _2507;
                float _2632 = _2373;
                float _2633 = _2375;
                float _2634 = _2377;
                float _2635 = _2379;
                float _2636 = _2381;
                float _2637 = _2383;
                uint _2638 = _2390;
                uint _2647;
                bool _2648;
                for (;;)
                {
                    _2647 = texelFetch(g_lightClassification, int((((_2252 << 5u) + (_2238 << 9u)) + (_2638 << 2u)) >> 2u)).x;
                    _2648 = _2647 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_2648)
                    {
                        frontier_phi_72_pred = _2637;
                        frontier_phi_72_pred_1 = _2636;
                        frontier_phi_72_pred_2 = _2635;
                        frontier_phi_72_pred_3 = _2634;
                        frontier_phi_72_pred_4 = _2633;
                        frontier_phi_72_pred_5 = _2632;
                    }
                    else
                    {
                        float _2782;
                        float _2783;
                        float _2784;
                        float _2785;
                        float _2786;
                        float _2787;
                        float _3034;
                        float _3035;
                        float _3036;
                        float _3037;
                        float _3038;
                        float _3039;
                        float _2795 = _2632;
                        float _2796 = _2633;
                        float _2797 = _2634;
                        float _2798 = _2635;
                        float _2799 = _2636;
                        float _2800 = _2637;
                        uint _2801 = _2647;
                        uint _2802;
                        vec4 _2827;
                        float _2828;
                        vec4 _2843;
                        vec3 _2855;
                        vec4 _2871;
                        vec4 _2887;
                        float _2934;
                        bool _2935;
                        for (;;)
                        {
                            uint _2812 = ((_2638 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2801));
                            _2802 = (_2801 + 4294967295u) & _2801;
                            uint _2814 = _2812 * 40u;
                            _2827 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2814)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2814 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2814 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2814 + 3u)).x));
                            _2828 = _2827.w;
                            uint _2830 = (_2812 * 40u) + 4u;
                            _2843 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2830)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2830 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2830 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2830 + 3u)).x));
                            uint _2845 = (_2812 * 40u) + 8u;
                            _2855 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2845)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2845 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2845 + 2u)).x));
                            uint _2858 = (_2812 * 40u) + 16u;
                            _2871 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2858)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2858 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2858 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2858 + 3u)).x));
                            uint _2874 = (_2812 * 40u) + 20u;
                            _2887 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2874)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2874 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2874 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2874 + 3u)).x));
                            uint _2890 = (_2812 * 40u) + 24u;
                            vec4 _2903 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2890)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2890 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2890 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2890 + 3u)).x));
                            uint _2909 = (_2812 * 40u) + 28u;
                            vec4 _2922 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2909)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2909 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2909 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2909 + 3u)).x));
                            _2934 = fma(_1444, _2922.z, fma(_1443, _2922.y, _2922.x * _1442)) + _2922.w;
                            _2935 = !((fma(_1444, _2903.z, fma(_1443, _2903.y, _2903.x * _1442)) + _2903.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_2935)
                            {
                                float _2962 = _2827.x - _1442;
                                float _2963 = _2827.y - _1443;
                                float _2964 = _2827.z - _1444;
                                float _2965 = dot(vec3(_2962, _2963, _2964), vec3(_2962, _2963, _2964));
                                float _2968 = inversesqrt(_2965);
                                float _2969 = _2968 * _2962;
                                float _2970 = _2968 * _2963;
                                float _2971 = _2968 * _2964;
                                float _2975 = 1.0 - (_2965 / (_2828 * _2828));
                                float _3919 = isnan(0.0) ? _2975 : (isnan(_2975) ? 0.0 : max(_2975, 0.0));
                                float _2976 = isnan(1.0) ? _3919 : (isnan(_3919) ? 1.0 : min(_3919, 1.0));
                                float _2980 = sqrt(_2965) * _2843.w;
                                float _2982 = 1.39999997615814208984375 / (_2980 + 1.39999997615814208984375);
                                float _2983 = _2982 * _2982;
                                float _2984 = 1.0 - _2983;
                                float _2986 = (_2984 * dot(vec3(_2969, _2970, _2971), vec3(_354, _357, _360))) + _2983;
                                float _2989 = _2980 * _2980;
                                float _2993 = (fma(_1444, _2871.z, fma(_1443, _2871.y, _2871.x * _1442)) + _2871.w) / _2934;
                                float _2994 = (fma(_1444, _2887.z, fma(_1443, _2887.y, _2887.x * _1442)) + _2887.w) / _2934;
                                float _2998 = 1.0 - dot(vec2(_2993, _2994), vec2(_2993, _2994));
                                float _3935 = isnan(0.0) ? _2998 : (isnan(_2998) ? 0.0 : max(_2998, 0.0));
                                float _2999 = isnan(1.0) ? _3935 : (isnan(_3935) ? 1.0 : min(_3935, 1.0));
                                float _3000 = _2999 * (((isnan(0.0) ? _2986 : (isnan(_2986) ? 0.0 : max(_2986, 0.0))) * _2976) / ((_2989 * 0.699999988079071044921875) + 1.0));
                                float _3010 = dot(vec3(_354, _357, _360), vec3((-0.0) - (_1442 * _2521), (-0.0) - (_1443 * _2521), (-0.0) - (_1444 * _2521)));
                                float _3946 = isnan(0.0) ? _3010 : (isnan(_3010) ? 0.0 : max(_3010, 0.0));
                                float _3018 = (_2984 * dot(vec3(_354, _357, _360), vec3(_2969, _2970, _2971))) + _2983;
                                float _3957 = isnan(0.0) ? _3018 : (isnan(_3018) ? 0.0 : max(_3018, 0.0));
                                float _3019 = isnan(1.0) ? _3957 : (isnan(_3957) ? 1.0 : min(_3957, 1.0));
                                float _3023 = (0.5 / (((isnan(1.0) ? _3946 : (isnan(_3946) ? 1.0 : min(_3946, 1.0))) + 9.9999999392252902907785028219223e-09) + _3019)) * _3019;
                                float _3968 = isnan(0.0) ? _3023 : (isnan(_3023) ? 0.0 : max(_3023, 0.0));
                                float _3030 = (_2999 * _2976) * (((isnan(1.0) ? _3968 : (isnan(_3968) ? 1.0 : min(_3968, 1.0))) * 3.1415927410125732421875) / ((_2989 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_78_pred = _3000 * _2843.y;
                                frontier_phi_78_pred_1 = _3000 * _2843.x;
                                frontier_phi_78_pred_2 = _3030 * _2855.z;
                                frontier_phi_78_pred_3 = _3030 * _2855.y;
                                frontier_phi_78_pred_4 = _3030 * _2855.x;
                                frontier_phi_78_pred_5 = _3000 * _2843.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3038 = frontier_phi_78_pred;
                            _3037 = frontier_phi_78_pred_1;
                            _3036 = frontier_phi_78_pred_2;
                            _3035 = frontier_phi_78_pred_3;
                            _3034 = frontier_phi_78_pred_4;
                            _3039 = frontier_phi_78_pred_5;
                            _2785 = _3037 + _2798;
                            _2786 = _3038 + _2799;
                            _2787 = _3039 + _2800;
                            _2782 = _3034 + _2795;
                            _2783 = _3035 + _2796;
                            _2784 = _3036 + _2797;
                            if (_2802 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2795 = _2782;
                                _2796 = _2783;
                                _2797 = _2784;
                                _2798 = _2785;
                                _2799 = _2786;
                                _2800 = _2787;
                                _2801 = _2802;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _2787;
                        frontier_phi_72_pred_1 = _2786;
                        frontier_phi_72_pred_2 = _2785;
                        frontier_phi_72_pred_3 = _2784;
                        frontier_phi_72_pred_4 = _2783;
                        frontier_phi_72_pred_5 = _2782;
                    }
                    _2507 = frontier_phi_72_pred;
                    _2505 = frontier_phi_72_pred_1;
                    _2503 = frontier_phi_72_pred_2;
                    _2501 = frontier_phi_72_pred_3;
                    _2499 = frontier_phi_72_pred_4;
                    _2497 = frontier_phi_72_pred_5;
                    uint _2639 = _2638 + 1u;
                    if (_2639 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2632 = _2497;
                        _2633 = _2499;
                        _2634 = _2501;
                        _2635 = _2503;
                        _2636 = _2505;
                        _2637 = _2507;
                        _2638 = _2639;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _2507;
                frontier_phi_60_61_ladder_1 = _2505;
                frontier_phi_60_61_ladder_2 = _2501;
                frontier_phi_60_61_ladder_3 = _2499;
                frontier_phi_60_61_ladder_4 = _2497;
                frontier_phi_60_61_ladder_5 = _2503;
            }
            else
            {
                frontier_phi_60_61_ladder = _2383;
                frontier_phi_60_61_ladder_1 = _2381;
                frontier_phi_60_61_ladder_2 = _2377;
                frontier_phi_60_61_ladder_3 = _2375;
                frontier_phi_60_61_ladder_4 = _2373;
                frontier_phi_60_61_ladder_5 = _2379;
            }
            _2496 = frontier_phi_60_61_ladder_4;
            _2498 = frontier_phi_60_61_ladder_3;
            _2500 = frontier_phi_60_61_ladder_2;
            _2502 = frontier_phi_60_61_ladder_5;
            _2504 = frontier_phi_60_61_ladder_1;
            _2506 = frontier_phi_60_61_ladder;
        }
        float _2511 = isnan(1.0) ? _398 : (isnan(_398) ? 1.0 : min(_398, 1.0));
        _2271 = (_2511 * _2502) + _1910;
        _2273 = (_2511 * _2504) + _1912;
        _2275 = (_2511 * _2506) + _1914;
        _2277 = ((_2496 * 0.039999999105930328369140625) * _2511) + _2152;
        _2279 = ((_2498 * 0.039999999105930328369140625) * _2511) + _2154;
        _2281 = ((_2500 * 0.039999999105930328369140625) * _2511) + _2156;
    }
    else
    {
        _2271 = _1910;
        _2273 = _1912;
        _2275 = _1914;
        _2277 = _2152;
        _2279 = _2154;
        _2281 = _2156;
    }
    uint _2287 = _374 + uint(cbMatDynParam._m0[0u].w);
    float _2295 = ((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _235.x) * cbInstanceData._m0[_2287].x;
    float _2298 = ((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _235.y) * cbInstanceData._m0[_2287].y;
    float _2301 = ((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _235.z) * cbInstanceData._m0[_2287].z;
    float _3984 = isnan(0.0) ? _384 : (isnan(_384) ? 0.0 : max(_384, 0.0));
    float _3995 = isnan(0.0) ? _385 : (isnan(_385) ? 0.0 : max(_385, 0.0));
    float _4006 = isnan(0.0) ? _386 : (isnan(_386) ? 0.0 : max(_386, 0.0));
    float _2318 = (((isnan(1.0) ? _3984 : (isnan(_3984) ? 1.0 : min(_3984, 1.0))) * (_2271 + ((isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0))) * _398))) + ((_2277 + ((isnan(0.0) ? _1389 : (isnan(_1389) ? 0.0 : max(_1389, 0.0))) * _1177)) * cbPerFrame._m0[3u].x)) + _2295;
    float _2320 = (_2298 + ((_2279 + ((isnan(0.0) ? _1392 : (isnan(_1392) ? 0.0 : max(_1392, 0.0))) * _1177)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _3995 : (isnan(_3995) ? 1.0 : min(_3995, 1.0))) * (_2273 + ((isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0))) * _398)));
    float _2322 = (_2301 + ((_2281 + ((isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0))) * _1177)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0))) * (_2275 + ((isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0))) * _398)));
    float _4032 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2335 = isnan(1.0) ? _4032 : (isnan(_4032) ? 1.0 : min(_4032, 1.0));
    uint _2336 = _373 + 6u;
    float _2344 = _332 / cbSceneParam._m0[86u].x;
    float _2345 = _333 / cbSceneParam._m0[86u].y;
    vec4 _2359 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2344, _2345, (log2((isnan(cbSceneParam._m0[77u].w) ? _266 : (isnan(_266) ? cbSceneParam._m0[77u].w : min(_266, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2361 = _2359.x;
    float _2362 = _2359.y;
    float _2363 = _2359.z;
    float _2364 = _2359.w;
    float _2436;
    float _2438;
    float _2440;
    float _2442;
    if (_266 > cbSceneParam._m0[78u].w)
    {
        float _2398 = isnan(_266) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _266 : min(cbSceneParam._m0[80u].w, _266));
        float _2399 = _2398 / _266;
        float _2410 = _2399 * _317;
        float _2411 = _318 * _2399;
        float _2412 = (-0.0) - _2411;
        float _2414 = _2399 * _319;
        float _2416 = (cbSceneParam._m0[77u].w * _2412) / _2398;
        float _2417 = _2416 + cbSceneParam._m0[79u].w;
        float _2418 = cbSceneParam._m0[79u].w - _2411;
        float _2424 = sqrt(((_2410 * _2410) + (_2411 * _2411)) + (_2414 * _2414));
        float _2427 = (1.0 - (cbSceneParam._m0[77u].w / _2398)) * _2424;
        float _2432 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2434 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2594;
        if (abs((_2412 - _2416) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2594 = ((((_2417 > 0.0) ? exp2(_2432 * _2417) : (2.0 - exp2(_2434 * _2417))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2427;
        }
        else
        {
            float _2554 = 1.0 / cbSceneParam._m0[80u].x;
            float _2555 = isnan(_2418) ? _2417 : (isnan(_2417) ? _2418 : max(_2417, _2418));
            float _2556 = isnan(_2418) ? _2417 : (isnan(_2417) ? _2418 : min(_2417, _2418));
            float _2565 = isnan(0.0) ? _2555 : (isnan(_2555) ? 0.0 : min(_2555, 0.0));
            float _2566 = isnan(0.0) ? _2556 : (isnan(_2556) ? 0.0 : min(_2556, 0.0));
            _2594 = ((abs(_2424 / _2412) * cbSceneParam._m0[80u].y) * ((((_2565 - _2566) * 2.0) - ((exp2(_2432 * (isnan(0.0) ? _2555 : (isnan(_2555) ? 0.0 : max(_2555, 0.0)))) - exp2(_2432 * (isnan(0.0) ? _2556 : (isnan(_2556) ? 0.0 : max(_2556, 0.0))))) * _2554)) - ((exp2(_2434 * _2565) - exp2(_2434 * _2566)) * _2554))) + (_2427 * cbSceneParam._m0[80u].z);
        }
        vec4 _2596 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2344, _2345, 1.0), 0.0);
        float _2605 = exp2((_2594 * (-1.44269502162933349609375)) * (1.0 - _2596.w));
        float _2606 = log2(_2605);
        float _2622 = log2(_2364);
        _2436 = (exp2(_2622 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2606 * cbSceneParam._m0[78u].x)) * _2596.x) / cbSceneParam._m0[78u].x)) + _2361;
        _2438 = (exp2(_2622 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2606 * cbSceneParam._m0[78u].y)) * _2596.y) / cbSceneParam._m0[78u].y)) + _2362;
        _2440 = (exp2(_2622 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2606 * cbSceneParam._m0[78u].z)) * _2596.z) / cbSceneParam._m0[78u].z)) + _2363;
        _2442 = _2605 * _2364;
    }
    else
    {
        _2436 = _2361;
        _2438 = _2362;
        _2440 = _2363;
        _2442 = _2364;
    }
    float _2454 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2455 = _2454 == 3.0;
    float _2457 = log2(_2442);
    float _2461 = exp2(_2457 * cbSceneParam._m0[78u].x);
    float _2462 = exp2(_2457 * cbSceneParam._m0[78u].y);
    float _2463 = exp2(_2457 * cbSceneParam._m0[78u].z);
    float _2464 = _2461 * (isnan(0.0) ? _2318 : (isnan(_2318) ? 0.0 : max(_2318, 0.0)));
    float _2465 = _2462 * (isnan(0.0) ? _2320 : (isnan(_2320) ? 0.0 : max(_2320, 0.0)));
    float _2466 = _2463 * (isnan(0.0) ? _2322 : (isnan(_2322) ? 0.0 : max(_2322, 0.0)));
    float _2475 = (_2454 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2475 * (_2455 ? _2464 : (_2464 + (cbSceneParam._m0[72u].w * _2436)));
    SV_Target.y = _2475 * (_2455 ? _2465 : (_2465 + (cbSceneParam._m0[72u].w * _2438)));
    SV_Target.z = _2475 * (_2455 ? _2466 : (_2466 + (cbSceneParam._m0[72u].w * _2440)));
    SV_Target.w = cbInstanceData._m0[_2336].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2295) * _2335) * _2461) * _2475;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2298) * _2335) * _2462) * _2475;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2301) * _2335) * _2463) * _2475;
    SV_Target_1.w = cbInstanceData._m0[_2336].w;
}


