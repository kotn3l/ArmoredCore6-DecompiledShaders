#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D P_ACParts_AMSN_Device_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_ACParts_AMSN_Device_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D P_ACParts_AMSN_Device_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _122 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _123 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _124 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _129 = inversesqrt(dot(vec3(_122, _123, _124), vec3(_122, _123, _124)));
    float _136 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _143 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _166 = texture(sampler2D(P_ACParts_AMSN_Device_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _172 = _166.x * cbMtdParam._m0[9u].x;
    float _173 = _166.y * cbMtdParam._m0[9u].y;
    float _174 = _166.z * cbMtdParam._m0[9u].z;
    vec4 _186 = texture(sampler2D(P_ACParts_AMSN_Device_Emissive_Glow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _190 = _186.z;
    float _194 = (_186.x * 2.0) + (-1.0);
    float _196 = (_186.y * 2.0) + (-1.0);
    float _197 = dot(vec2(_194, _196), vec2(_194, _196));
    float _353 = isnan(0.0) ? _197 : (isnan(_197) ? 0.0 : max(_197, 0.0));
    float _203 = sqrt(1.0 - (isnan(1.0) ? _353 : (isnan(_353) ? 1.0 : min(_353, 1.0))));
    vec4 _225 = texture(sampler2D(P_ACParts_AMSN_Device_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _232 = fma(_203, _136 * NORMAL.x, fma(_196, _143 * TANGENT.x, (_129 * _122) * _194));
    float _235 = fma(_203, _136 * NORMAL.y, fma(_196, _143 * TANGENT.y, (_129 * _123) * _194));
    float _238 = fma(_203, _136 * NORMAL.z, fma(_196, _143 * TANGENT.z, (_129 * _124) * _194));
    float _242 = inversesqrt(dot(vec3(_232, _235, _238), vec3(_232, _235, _238)));
    float _364 = isnan(0.0) ? _190 : (isnan(_190) ? 0.0 : max(_190, 0.0));
    float _375 = isnan(0.0) ? _172 : (isnan(_172) ? 0.0 : max(_172, 0.0));
    float _386 = isnan(0.0) ? _173 : (isnan(_173) ? 0.0 : max(_173, 0.0));
    float _397 = isnan(0.0) ? _174 : (isnan(_174) ? 0.0 : max(_174, 0.0));
    uint _261 = uint(roundEven(NORMAL.w)) * 13u;
    uint _264 = (_261 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _270 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _375 : (isnan(_375) ? 1.0 : min(_375, 1.0)))) * cbInstanceData._m0[_264].x;
    float _271 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _386 : (isnan(_386) ? 1.0 : min(_386, 1.0)))) * cbInstanceData._m0[_264].y;
    float _272 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _397 : (isnan(_397) ? 1.0 : min(_397, 1.0)))) * cbInstanceData._m0[_264].z;
    float _408 = isnan(0.0) ? _270 : (isnan(_270) ? 0.0 : max(_270, 0.0));
    float _419 = isnan(0.0) ? _271 : (isnan(_271) ? 0.0 : max(_271, 0.0));
    float _430 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    uint _279 = _261 + 6u;
    float _325;
    float _326;
    float _327;
    float _328;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _325 = cbInstanceData._m0[_279].w;
        _326 = cbInstanceData._m0[_279].w;
        _327 = cbInstanceData._m0[_279].w;
        _328 = cbInstanceData._m0[_279].w;
    }
    else
    {
        _325 = cbMtdParam._m0[2u].w;
        _326 = 0.0;
        _327 = float(floatBitsToUint(cbInstanceData._m0[_261 + 5u]).x) * 0.0039215688593685626983642578125;
        _328 = TEXCOORD.z;
    }
    SV_Target.x = ((_232 * 0.5) * _242) + 0.500488758087158203125;
    SV_Target.y = ((_235 * 0.5) * _242) + 0.500488758087158203125;
    SV_Target.z = ((_238 * 0.5) * _242) + 0.500488758087158203125;
    SV_Target.w = _326;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _364 : (isnan(_364) ? 1.0 : min(_364, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _328;
    SV_Target_2.x = isnan(1.0) ? _408 : (isnan(_408) ? 1.0 : min(_408, 1.0));
    SV_Target_2.y = isnan(1.0) ? _419 : (isnan(_419) ? 1.0 : min(_419, 1.0));
    SV_Target_2.z = isnan(1.0) ? _430 : (isnan(_430) ? 1.0 : min(_430, 1.0));
    SV_Target_2.w = _327;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _326;
    SV_Target_4.x = (((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _225.x) * cbInstanceData._m0[_264].x) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = (((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _225.y) * cbInstanceData._m0[_264].y) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = (((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _225.z) * cbInstanceData._m0[_264].z) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _325;
}


