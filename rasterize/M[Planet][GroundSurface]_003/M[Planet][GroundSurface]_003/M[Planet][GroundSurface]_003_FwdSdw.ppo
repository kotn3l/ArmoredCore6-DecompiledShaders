#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[28];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_4;
layout(set = 0, binding = 11) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_6;
layout(set = 0, binding = 12) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_8;
layout(set = 0, binding = 13) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_17;
layout(set = 0, binding = 9) uniform texture2D M_Planet_GroundSurface_003_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1511;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _213 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _214 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _215 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _221 = inversesqrt(dot(vec3(_213, _214, _215), vec3(_213, _214, _215)));
    float _228 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _229 = _228 * NORMAL.x;
    float _230 = _228 * NORMAL.y;
    float _231 = _228 * NORMAL.z;
    float _235 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _243;
    float _244;
    float _245;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _243 = (-0.0) - _229;
        _244 = (-0.0) - _230;
        _245 = (-0.0) - _231;
    }
    else
    {
        _243 = _229;
        _244 = _230;
        _245 = _231;
    }
    float _291 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _301 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _291);
    float _302 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _291);
    float _303 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _291);
    uvec4 _307 = floatBitsToUint(cbMtdParam._m0[9u]);
    bool _309 = _307.z != 0u;
    vec4 _330 = texture(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _333 = _330.x;
    float _334 = _330.y;
    float _335 = _330.z;
    bool _356 = _307.x != 0u;
    vec4 _375 = texture(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _377 = _375.x;
    float _378 = _375.y;
    float _379 = _375.z;
    float _395 = _356 ? ((cbMtdParam._m0[22u].x * (cbMtdParam._m0[9u].w - _377)) + _377) : (_377 * cbMtdParam._m0[9u].w);
    float _396 = _356 ? ((cbMtdParam._m0[22u].x * (cbMtdParam._m0[10u].x - _378)) + _378) : (_378 * cbMtdParam._m0[10u].x);
    float _397 = _356 ? ((cbMtdParam._m0[22u].x * (cbMtdParam._m0[10u].y - _379)) + _379) : (_379 * cbMtdParam._m0[10u].y);
    bool _399 = _307.y != 0u;
    vec4 _414 = texture(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w));
    float _416 = _414.x;
    float _417 = _414.y;
    float _418 = _414.z;
    vec4 _447 = texture(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w));
    float _449 = _447.x;
    float _450 = _447.y;
    float _461 = ((cbMtdParam._m0[21u].z * (-1.39999997615814208984375)) * (1.0 - _449)) + 1.0;
    float _4125 = isnan(0.0) ? _461 : (isnan(_461) ? 0.0 : max(_461, 0.0));
    float _469 = (cbMtdParam._m0[18u].z * ((isnan(1.0) ? _4125 : (isnan(_4125) ? 1.0 : min(_4125, 1.0))) - _449)) + _449;
    float _476 = (_469 * ((_399 ? ((cbMtdParam._m0[16u].x * (cbMtdParam._m0[10u].w - _416)) + _416) : (_416 * cbMtdParam._m0[10u].w)) - _395)) + _395;
    float _477 = (_469 * ((_399 ? ((cbMtdParam._m0[16u].x * (cbMtdParam._m0[11u].x - _417)) + _417) : (_417 * cbMtdParam._m0[11u].x)) - _396)) + _396;
    float _478 = (_469 * ((_399 ? ((cbMtdParam._m0[16u].x * (cbMtdParam._m0[11u].y - _418)) + _418) : (_418 * cbMtdParam._m0[11u].y)) - _397)) + _397;
    float _485 = (((1.0 - _450) * (-1.39999997615814208984375)) * cbMtdParam._m0[20u].y) + 1.0;
    float _4136 = isnan(0.0) ? _485 : (isnan(_485) ? 0.0 : max(_485, 0.0));
    float _493 = (cbMtdParam._m0[15u].w * ((isnan(1.0) ? _4136 : (isnan(_4136) ? 1.0 : min(_4136, 1.0))) - _450)) + _450;
    float _500 = (_493 * ((_309 ? ((cbMtdParam._m0[16u].y * (cbMtdParam._m0[11u].w - _333)) + _333) : (_333 * cbMtdParam._m0[11u].w)) - _476)) + _476;
    float _501 = (_493 * ((_309 ? ((cbMtdParam._m0[16u].y * (cbMtdParam._m0[12u].x - _334)) + _334) : (_334 * cbMtdParam._m0[12u].x)) - _477)) + _477;
    float _502 = (_493 * ((_309 ? ((cbMtdParam._m0[16u].y * (cbMtdParam._m0[12u].y - _335)) + _335) : (_335 * cbMtdParam._m0[12u].y)) - _478)) + _478;
    vec4 _525 = texture(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_13, SS_WrapLinear), vec2((((cbMtdParam._m0[23u].y * TEXCOORD.x) + cbMtdParam._m0[22u].y) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((cbMtdParam._m0[23u].z * TEXCOORD.y) + cbMtdParam._m0[22u].z) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _531 = cbMtdParam._m0[17u].x * _525.x;
    vec4 _543 = texture(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _545 = _543.x;
    float _546 = _543.y;
    float _547 = _543.z;
    float _570 = (((_545 - _500) + (cbMtdParam._m0[20u].x * (cbMtdParam._m0[14u].w - _545))) * _531) + _500;
    float _571 = (((_546 - _501) + (cbMtdParam._m0[20u].x * (cbMtdParam._m0[15u].x - _546))) * _531) + _501;
    float _572 = (((_547 - _502) + (cbMtdParam._m0[20u].x * (cbMtdParam._m0[15u].y - _547))) * _531) + _502;
    float _593 = cbMtdParam._m0[20u].z * cbPerFrame._m0[22u].x;
    vec4 _612 = texture(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_16, SS_WrapLinear), vec2(((cbTextureTilingScale._m0[7u].x * cbMtdParam._m0[25u].w) * ((_593 * cbMtdParam._m0[26u].y) + TEXCOORD.z)) + cbTextureTilingScale._m0[7u].z, ((cbTextureTilingScale._m0[7u].y * cbMtdParam._m0[26u].x) * ((_593 * cbMtdParam._m0[26u].z) + TEXCOORD.w)) + cbTextureTilingScale._m0[7u].w));
    float _614 = _612.x;
    vec4 _649 = texture(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_17, SS_ClampLinear), vec2((((cbMtdParam._m0[25u].y + TEXCOORD.z) * cbMtdParam._m0[26u].w) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((cbMtdParam._m0[25u].z + TEXCOORD.w) * cbMtdParam._m0[27u].x) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w));
    float _686 = exp2(log2(cbMtdParam._m0[21u].x * texture(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_15, SS_DiffuseMap), vec2(((((((cbMtdParam._m0[24u].y * _593) + (_614 * cbMtdParam._m0[23u].w)) + cbMtdParam._m0[22u].w) + (cbMtdParam._m0[24u].w * TEXCOORD.z)) + ((_649.x + (-0.5)) * cbMtdParam._m0[20u].w)) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, ((((((cbMtdParam._m0[24u].z * _593) + (_614 * cbMtdParam._m0[24u].x)) + cbMtdParam._m0[23u].x) + (cbMtdParam._m0[25u].x * TEXCOORD.w)) + ((_649.y + (-0.5)) * cbMtdParam._m0[20u].w)) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w)).w) * cbMtdParam._m0[21u].y);
    float _4147 = isnan(0.0) ? _686 : (isnan(_686) ? 0.0 : max(_686, 0.0));
    float _687 = isnan(1.0) ? _4147 : (isnan(_4147) ? 1.0 : min(_4147, 1.0));
    float _701 = ((_687 * (cbMtdParam._m0[13u].w - _570)) * cbMtdParam._m0[19u].w) + _570;
    float _702 = ((_687 * (cbMtdParam._m0[14u].x - _571)) * cbMtdParam._m0[19u].w) + _571;
    float _703 = ((_687 * (cbMtdParam._m0[14u].y - _572)) * cbMtdParam._m0[19u].w) + _572;
    float _714 = inversesqrt(dot(vec3(_301, _302, _303), vec3(_301, _302, _303)));
    float _718 = dot(vec4(_714 * _301, _714 * _302, _714 * _303, 0.0), vec4(_243, _244, _245, 0.0));
    float _721 = _718 - cbMtdParam._m0[16u].w;
    float _4158 = isnan(0.0) ? _721 : (isnan(_721) ? 0.0 : max(_721, 0.0));
    float _731 = (exp2(log2(1.0 - (isnan(1.0) ? _4158 : (isnan(_4158) ? 1.0 : min(_4158, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[16u].z : (isnan(cbMtdParam._m0[16u].z) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[16u].z, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[17u].z - cbMtdParam._m0[17u].y)) + cbMtdParam._m0[17u].y;
    float _741 = (((_731 * cbMtdParam._m0[12u].w) - _701) * _731) + _701;
    float _742 = (((_731 * cbMtdParam._m0[13u].x) - _702) * _731) + _702;
    float _743 = (((_731 * cbMtdParam._m0[13u].y) - _703) * _731) + _703;
    float _747 = _718 - cbMtdParam._m0[18u].y;
    float _4174 = isnan(0.0) ? _747 : (isnan(_747) ? 0.0 : max(_747, 0.0));
    float _756 = exp2(log2((1.0 - exp2(log2(1.0 - (isnan(1.0) ? _4174 : (isnan(_4174) ? 1.0 : min(_4174, 1.0)))))) * cbMtdParam._m0[19u].y) * cbMtdParam._m0[18u].x);
    float _4185 = isnan(0.0) ? _756 : (isnan(_756) ? 0.0 : max(_756, 0.0));
    float _757 = isnan(1.0) ? _4185 : (isnan(_4185) ? 1.0 : min(_4185, 1.0));
    vec4 _769 = texture(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    vec4 _785 = texture(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _787 = _785.x;
    float _788 = _785.y;
    float _789 = _785.z;
    float _796 = ((_769.x - _787) * _469) + _787;
    float _797 = ((_769.y - _788) * _469) + _788;
    float _798 = ((_769.z - _789) * _469) + _789;
    vec4 _810 = texture(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    vec4 _836 = texture(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _847 = (((_810.x - _796) * _493) + _796) + ((_836.x + (-0.5)) * cbMtdParam._m0[21u].w);
    float _848 = (((_810.y - _797) * _493) + _797) + ((_836.y + (-0.5)) * cbMtdParam._m0[21u].w);
    float _849 = (((_810.z - _798) * _493) + _798) + ((_836.z + (-0.5)) * cbMtdParam._m0[21u].w);
    vec4 _862 = texture(sampler2D(M_Planet_GroundSurface_003_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _873 = ((_862.x - _847) * _531) + _847;
    float _874 = ((_862.y - _848) * _531) + _848;
    float _875 = ((_862.z - _849) * _531) + _849;
    float _885 = ((1.0 - _875) * _731) + _875;
    float _889 = ((((0.502016007900238037109375 - _873) * _731) + _873) * 2.0) + (-1.0);
    float _891 = ((((0.502016007900238037109375 - _874) * _731) + _874) * 2.0) + (-1.0);
    float _892 = dot(vec2(_889, _891), vec2(_889, _891));
    float _4196 = isnan(0.0) ? _892 : (isnan(_892) ? 0.0 : max(_892, 0.0));
    float _897 = sqrt(1.0 - (isnan(1.0) ? _4196 : (isnan(_4196) ? 1.0 : min(_4196, 1.0))));
    float _921 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _925 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _929 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _933 = inversesqrt(dot(vec3(_921, _925, _929), vec3(_921, _925, _929)));
    float _943 = inversesqrt(dot(vec3(cbMtdParam._m0[27u].yzw), vec3(cbMtdParam._m0[27u].yzw)));
    uint _948 = uint(roundEven(NORMAL.w)) * 13u;
    uint _949 = _948 + 5u;
    uint _954 = floatBitsToUint(cbInstanceData._m0[_949]).x * 14u;
    float _966 = (((_943 * cbMtdParam._m0[27u].y) - cbLight._m0[_954].x) * cbMtdParam._m0[19u].z) + cbLight._m0[_954].x;
    float _967 = (((_943 * cbMtdParam._m0[27u].z) - cbLight._m0[_954].y) * cbMtdParam._m0[19u].z) + cbLight._m0[_954].y;
    float _968 = (((_943 * cbMtdParam._m0[27u].w) - cbLight._m0[_954].z) * cbMtdParam._m0[19u].z) + cbLight._m0[_954].z;
    float _972 = inversesqrt(dot(vec3(_966, _967, _968), vec3(_966, _967, _968)));
    float _973 = _966 * _972;
    float _974 = _967 * _972;
    float _975 = _968 * _972;
    float _979 = inversesqrt(dot(vec3(_973, _974, _975), vec3(_973, _974, _975)));
    float _995 = (0.9700000286102294921875 - exp2(log2((dot(vec4(_933 * _921, _933 * _925, _933 * _929, 0.0), vec4(_973 * _979, _974 * _979, _975 * _979, 0.0)) + 1.0) * 0.5) * 0.017999999225139617919921875)) * (-5.0);
    float _4207 = isnan(0.0) ? _995 : (isnan(_995) ? 0.0 : max(_995, 0.0));
    float _997 = isnan(1.0) ? _4207 : (isnan(_4207) ? 1.0 : min(_4207, 1.0));
    float _1003 = exp2(log2(_997 * 6.5) * 7.0);
    float _4218 = isnan(0.0) ? _1003 : (isnan(_1003) ? 0.0 : max(_1003, 0.0));
    float _1010 = exp2(log2(cbMtdParam._m0[19u].x * ((isnan(1.0) ? _4218 : (isnan(_4218) ? 1.0 : min(_4218, 1.0))) + _997)) * cbMtdParam._m0[18u].w);
    float _4229 = isnan(0.0) ? _1010 : (isnan(_1010) ? 0.0 : max(_1010, 0.0));
    float _1011 = isnan(1.0) ? _4229 : (isnan(_4229) ? 1.0 : min(_4229, 1.0));
    float _4240 = isnan(0.0) ? _1011 : (isnan(_1011) ? 0.0 : max(_1011, 0.0));
    float _1012 = isnan(1.0) ? _4240 : (isnan(_4240) ? 1.0 : min(_4240, 1.0));
    float _1015 = fma(_897, _243, fma(_891, _235 * TANGENT.x, (_221 * _213) * _889));
    float _1018 = fma(_897, _244, fma(_891, _235 * TANGENT.y, (_221 * _214) * _889));
    float _1021 = fma(_897, _245, fma(_891, _235 * TANGENT.z, (_221 * _215) * _889));
    float _1025 = inversesqrt(dot(vec3(_1015, _1018, _1021), vec3(_1015, _1018, _1021)));
    float _1026 = _1025 * _1015;
    float _1027 = _1025 * _1018;
    float _1028 = _1025 * _1021;
    float _4251 = isnan(0.0) ? _757 : (isnan(_757) ? 0.0 : max(_757, 0.0));
    float _1029 = isnan(1.0) ? _4251 : (isnan(_4251) ? 1.0 : min(_4251, 1.0));
    float _4262 = isnan(0.0) ? _885 : (isnan(_885) ? 0.0 : max(_885, 0.0));
    float _1030 = isnan(1.0) ? _4262 : (isnan(_4262) ? 1.0 : min(_4262, 1.0));
    float _4273 = isnan(0.0) ? _741 : (isnan(_741) ? 0.0 : max(_741, 0.0));
    float _4284 = isnan(0.0) ? _742 : (isnan(_742) ? 0.0 : max(_742, 0.0));
    float _4295 = isnan(0.0) ? _743 : (isnan(_743) ? 0.0 : max(_743, 0.0));
    float _1046 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1056 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1065 = cbSceneParam._m0[71u].x - (_921 / _1056);
    float _1066 = cbSceneParam._m0[71u].y - (_925 / _1056);
    float _1067 = cbSceneParam._m0[71u].z - (_929 / _1056);
    float _1071 = inversesqrt(dot(vec3(_1065, _1066, _1067), vec3(_1065, _1066, _1067)));
    float _1072 = _1065 * _1071;
    float _1073 = _1066 * _1071;
    float _1074 = _1067 * _1071;
    float _1080 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1081 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1099 = fma(_1028, cbSceneParam._m0[5u].z, fma(_1027, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1026));
    float _1102 = fma(_1028, cbSceneParam._m0[6u].z, fma(_1027, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1026));
    float _1105 = fma(_1028, cbSceneParam._m0[7u].z, fma(_1027, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1026));
    uint _1118 = _948 + 9u;
    uint _1119 = _1118 + uint(cbMatDynParam._m0[0u].w);
    float _1125 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4273 : (isnan(_4273) ? 1.0 : min(_4273, 1.0)))) * cbInstanceData._m0[_1119].x;
    float _1126 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4284 : (isnan(_4284) ? 1.0 : min(_4284, 1.0)))) * cbInstanceData._m0[_1119].y;
    float _1127 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4295 : (isnan(_4295) ? 1.0 : min(_4295, 1.0)))) * cbInstanceData._m0[_1119].z;
    float _4306 = isnan(0.0) ? _1125 : (isnan(_1125) ? 0.0 : max(_1125, 0.0));
    float _1128 = isnan(1.0) ? _4306 : (isnan(_4306) ? 1.0 : min(_4306, 1.0));
    float _4317 = isnan(0.0) ? _1126 : (isnan(_1126) ? 0.0 : max(_1126, 0.0));
    float _1129 = isnan(1.0) ? _4317 : (isnan(_4317) ? 1.0 : min(_4317, 1.0));
    float _4328 = isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0));
    float _1130 = isnan(1.0) ? _4328 : (isnan(_4328) ? 1.0 : min(_4328, 1.0));
    vec4 _1139 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1080, cbSceneParam._m0[86u].y * _1081));
    float _1142 = _1139.x * TEXCOORD_4;
    float _1143 = dot(vec3(_1026, _1027, _1028), vec3(_1072, _1073, _1074));
    float _1146 = _1143 * 2.0;
    float _1150 = (_1146 * _1026) - _1072;
    float _1151 = (_1146 * _1027) - _1073;
    float _1152 = (_1146 * _1028) - _1074;
    float _1156 = abs(dot(vec3(_1072, _1073, _1074), vec3(_1026, _1027, _1028)));
    float _4339 = isnan(0.0) ? _1156 : (isnan(_1156) ? 0.0 : max(_1156, 0.0));
    float _1158 = sqrt(_1030);
    float _1171 = exp2((_1158 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4339 : (isnan(_4339) ? 1.0 : min(_4339, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1158 * 3.0));
    float _1203 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1207 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1211 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1510;
    float _1512;
    float _1513;
    float _1514;
    float _1515;
    float _1516;
    float _1517;
    float _1518;
    float _1519;
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1237 = fma(_1211, cbModelParam._m0[26u].z, fma(_1207, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1203));
        float _1241 = fma(_1211, cbModelParam._m0[27u].z, fma(_1207, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1203));
        float _1245 = fma(_1211, cbModelParam._m0[28u].z, fma(_1207, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1203));
        float _1268 = _1203 + _1026;
        float _1269 = _1207 + _1027;
        float _1270 = _1211 + _1028;
        float _1280 = fma(_1270, cbModelParam._m0[26u].z, fma(_1269, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1268)) - _1237;
        float _1281 = fma(_1270, cbModelParam._m0[27u].z, fma(_1269, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1268)) - _1241;
        float _1282 = fma(_1270, cbModelParam._m0[28u].z, fma(_1269, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1268)) - _1245;
        float _1286 = inversesqrt(dot(vec3(_1280, _1281, _1282), vec3(_1280, _1281, _1282)));
        float _1299 = ((_1286 * _1280) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1237 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1300 = ((_1286 * _1281) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1241 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1301 = ((_1286 * _1282) / cbModelParam._m0[34u].z) + ((((((_1245 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1304 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1299, _1300, _1301), 0.0);
        vec4 _1311 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1299, _1300, _1301), 0.0);
        vec4 _1318 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1299, _1300, _1301), 0.0);
        vec4 _1325 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1299, _1300, _1301), 0.0);
        float _1338 = exp2((_1304.w + (-0.5)) * 20.0) * 2.0;
        float _1339 = _1338 * (_1304.x + (-0.5));
        float _1340 = _1338 * (_1304.y + (-0.5));
        float _1341 = _1338 * (_1304.z + (-0.5));
        float _1348 = exp2((_1311.w + (-0.5)) * 20.0) * 2.0;
        float _1349 = _1348 * (_1311.x + (-0.5));
        float _1350 = _1348 * (_1311.y + (-0.5));
        float _1351 = _1348 * (_1311.z + (-0.5));
        float _1358 = exp2((_1318.w + (-0.5)) * 20.0) * 2.0;
        float _1359 = _1358 * (_1318.x + (-0.5));
        float _1360 = _1358 * (_1318.y + (-0.5));
        float _1361 = _1358 * (_1318.z + (-0.5));
        float _1368 = exp2((_1325.w + (-0.5)) * 20.0) * 2.0;
        float _1369 = _1368 * (_1325.x + (-0.5));
        float _1370 = _1368 * (_1325.y + (-0.5));
        float _1371 = _1368 * (_1325.z + (-0.5));
        float _1372 = isnan(0.0) ? _1369 : (isnan(_1369) ? 0.0 : max(_1369, 0.0));
        float _1373 = isnan(0.0) ? _1370 : (isnan(_1370) ? 0.0 : max(_1370, 0.0));
        float _1374 = isnan(0.0) ? _1371 : (isnan(_1371) ? 0.0 : max(_1371, 0.0));
        float _1375 = _1339 * 0.5;
        float _1376 = _1349 * 0.5;
        float _1377 = _1359 * 0.5;
        float _1378 = dot(vec3(_1375, _1376, _1377), vec3(_1375, _1376, _1377));
        float _1383 = (_1378 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1378);
        float _1392 = (dot(vec3(_1026, _1027, _1028), vec3(_1383 * _1375, _1383 * _1376, _1383 * _1377)) + 1.0) * 0.5;
        float _4365 = isnan(0.0) ? _1392 : (isnan(_1392) ? 0.0 : max(_1392, 0.0));
        float _1402 = sqrt(((_1376 * _1376) + (_1375 * _1375)) + (_1377 * _1377)) / (_1372 + 9.9999997473787516355514526367188e-06);
        float _4376 = isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0));
        float _1403 = isnan(1.0) ? _4376 : (isnan(_4376) ? 1.0 : min(_4376, 1.0));
        float _1404 = _1403 * 2.0;
        float _1408 = (1.0 - _1403) / (_1403 + 1.0);
        float _4387 = isnan(0.0) ? _1408 : (isnan(_1408) ? 0.0 : max(_1408, 0.0));
        float _1409 = isnan(1.0) ? _4387 : (isnan(_4387) ? 1.0 : min(_4387, 1.0));
        float _1418 = ((((1.0 - _1409) * (_1404 + 2.0)) * exp2(log2(isnan(1.0) ? _4365 : (isnan(_4365) ? 1.0 : min(_4365, 1.0))) * (_1404 + 1.0))) + _1409) * _1372;
        float _1419 = _1340 * 0.5;
        float _1420 = _1350 * 0.5;
        float _1421 = _1360 * 0.5;
        float _1422 = dot(vec3(_1419, _1420, _1421), vec3(_1419, _1420, _1421));
        float _1427 = (_1422 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1422);
        float _1435 = (dot(vec3(_1026, _1027, _1028), vec3(_1427 * _1419, _1427 * _1420, _1427 * _1421)) + 1.0) * 0.5;
        float _4398 = isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0));
        float _1444 = sqrt(((_1420 * _1420) + (_1419 * _1419)) + (_1421 * _1421)) / (_1373 + 9.9999997473787516355514526367188e-06);
        float _4409 = isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0));
        float _1445 = isnan(1.0) ? _4409 : (isnan(_4409) ? 1.0 : min(_4409, 1.0));
        float _1446 = _1445 * 2.0;
        float _1450 = (1.0 - _1445) / (_1445 + 1.0);
        float _4420 = isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0));
        float _1451 = isnan(1.0) ? _4420 : (isnan(_4420) ? 1.0 : min(_4420, 1.0));
        float _1460 = ((((1.0 - _1451) * (_1446 + 2.0)) * exp2(log2(isnan(1.0) ? _4398 : (isnan(_4398) ? 1.0 : min(_4398, 1.0))) * (_1446 + 1.0))) + _1451) * _1373;
        float _1461 = _1341 * 0.5;
        float _1462 = _1351 * 0.5;
        float _1463 = _1361 * 0.5;
        float _1464 = dot(vec3(_1461, _1462, _1463), vec3(_1461, _1462, _1463));
        float _1469 = (_1464 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1464);
        float _1477 = (dot(vec3(_1026, _1027, _1028), vec3(_1469 * _1461, _1469 * _1462, _1469 * _1463)) + 1.0) * 0.5;
        float _4431 = isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0));
        float _1486 = sqrt(((_1462 * _1462) + (_1461 * _1461)) + (_1463 * _1463)) / (_1374 + 9.9999997473787516355514526367188e-06);
        float _4442 = isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0));
        float _1487 = isnan(1.0) ? _4442 : (isnan(_4442) ? 1.0 : min(_4442, 1.0));
        float _1488 = _1487 * 2.0;
        float _1492 = (1.0 - _1487) / (_1487 + 1.0);
        float _4453 = isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0));
        float _1493 = isnan(1.0) ? _4453 : (isnan(_4453) ? 1.0 : min(_4453, 1.0));
        float _1502 = ((((1.0 - _1493) * (_1488 + 2.0)) * exp2(log2(isnan(1.0) ? _4431 : (isnan(_4431) ? 1.0 : min(_4431, 1.0))) * (_1488 + 1.0))) + _1493) * _1374;
        _1510 = _1341;
        _1512 = _1340;
        _1513 = _1339;
        _1514 = _1351;
        _1515 = _1350;
        _1516 = _1349;
        _1517 = _1361;
        _1518 = _1360;
        _1519 = _1359;
        _1520 = _1374;
        _1521 = _1373;
        _1522 = _1372;
        _1523 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1418 : (isnan(_1418) ? 0.0 : max(_1418, 0.0)));
        _1524 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0)));
        _1525 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0)));
    }
    else
    {
        _1510 = _1511;
        _1512 = _1511;
        _1513 = _1511;
        _1514 = _1511;
        _1515 = _1511;
        _1516 = _1511;
        _1517 = _1511;
        _1518 = _1511;
        _1519 = _1511;
        _1520 = _1511;
        _1521 = _1511;
        _1522 = _1511;
        _1523 = 0.0;
        _1524 = 0.0;
        _1525 = 0.0;
    }
    float _1820;
    float _1821;
    float _1822;
    float _1823;
    float _1824;
    float _1825;
    float _1826;
    float _1827;
    float _1828;
    float _1829;
    float _1830;
    float _1831;
    float _1832;
    float _1833;
    float _1834;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1551 = fma(_1211, cbModelParam._m0[30u].z, fma(_1207, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1203));
        float _1555 = fma(_1211, cbModelParam._m0[31u].z, fma(_1207, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1203));
        float _1559 = fma(_1211, cbModelParam._m0[32u].z, fma(_1207, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1203));
        float _1582 = _1203 + _1026;
        float _1583 = _1207 + _1027;
        float _1584 = _1211 + _1028;
        float _1594 = fma(_1584, cbModelParam._m0[30u].z, fma(_1583, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1582)) - _1551;
        float _1595 = fma(_1584, cbModelParam._m0[31u].z, fma(_1583, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1582)) - _1555;
        float _1596 = fma(_1584, cbModelParam._m0[32u].z, fma(_1583, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1582)) - _1559;
        float _1600 = inversesqrt(dot(vec3(_1594, _1595, _1596), vec3(_1594, _1595, _1596)));
        float _1613 = ((_1600 * _1594) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1551 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1614 = ((_1600 * _1595) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1555 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1615 = ((_1600 * _1596) / cbModelParam._m0[35u].z) + ((((((_1559 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1617 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1613, _1614, _1615), 0.0);
        vec4 _1624 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1613, _1614, _1615), 0.0);
        vec4 _1631 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1613, _1614, _1615), 0.0);
        vec4 _1638 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1613, _1614, _1615), 0.0);
        float _1650 = exp2((_1617.w + (-0.5)) * 20.0) * 2.0;
        float _1651 = _1650 * (_1617.x + (-0.5));
        float _1652 = _1650 * (_1617.y + (-0.5));
        float _1653 = _1650 * (_1617.z + (-0.5));
        float _1660 = exp2((_1624.w + (-0.5)) * 20.0) * 2.0;
        float _1661 = _1660 * (_1624.x + (-0.5));
        float _1662 = _1660 * (_1624.y + (-0.5));
        float _1663 = _1660 * (_1624.z + (-0.5));
        float _1670 = exp2((_1631.w + (-0.5)) * 20.0) * 2.0;
        float _1671 = _1670 * (_1631.x + (-0.5));
        float _1672 = _1670 * (_1631.y + (-0.5));
        float _1673 = _1670 * (_1631.z + (-0.5));
        float _1680 = exp2((_1638.w + (-0.5)) * 20.0) * 2.0;
        float _1681 = _1680 * (_1638.x + (-0.5));
        float _1682 = _1680 * (_1638.y + (-0.5));
        float _1683 = _1680 * (_1638.z + (-0.5));
        float _1684 = isnan(0.0) ? _1681 : (isnan(_1681) ? 0.0 : max(_1681, 0.0));
        float _1685 = isnan(0.0) ? _1682 : (isnan(_1682) ? 0.0 : max(_1682, 0.0));
        float _1686 = isnan(0.0) ? _1683 : (isnan(_1683) ? 0.0 : max(_1683, 0.0));
        float _1687 = _1651 * 0.5;
        float _1688 = _1661 * 0.5;
        float _1689 = _1671 * 0.5;
        float _1690 = dot(vec3(_1687, _1688, _1689), vec3(_1687, _1688, _1689));
        float _1695 = (_1690 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1690);
        float _1703 = (dot(vec3(_1026, _1027, _1028), vec3(_1695 * _1687, _1695 * _1688, _1695 * _1689)) + 1.0) * 0.5;
        float _4494 = isnan(0.0) ? _1703 : (isnan(_1703) ? 0.0 : max(_1703, 0.0));
        float _1712 = sqrt(((_1688 * _1688) + (_1687 * _1687)) + (_1689 * _1689)) / (_1684 + 9.9999997473787516355514526367188e-06);
        float _4505 = isnan(0.0) ? _1712 : (isnan(_1712) ? 0.0 : max(_1712, 0.0));
        float _1713 = isnan(1.0) ? _4505 : (isnan(_4505) ? 1.0 : min(_4505, 1.0));
        float _1714 = _1713 * 2.0;
        float _1718 = (1.0 - _1713) / (_1713 + 1.0);
        float _4516 = isnan(0.0) ? _1718 : (isnan(_1718) ? 0.0 : max(_1718, 0.0));
        float _1719 = isnan(1.0) ? _4516 : (isnan(_4516) ? 1.0 : min(_4516, 1.0));
        float _1728 = ((((1.0 - _1719) * (_1714 + 2.0)) * exp2(log2(isnan(1.0) ? _4494 : (isnan(_4494) ? 1.0 : min(_4494, 1.0))) * (_1714 + 1.0))) + _1719) * _1684;
        float _1729 = _1652 * 0.5;
        float _1730 = _1662 * 0.5;
        float _1731 = _1672 * 0.5;
        float _1732 = dot(vec3(_1729, _1730, _1731), vec3(_1729, _1730, _1731));
        float _1737 = (_1732 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1732);
        float _1745 = (dot(vec3(_1026, _1027, _1028), vec3(_1737 * _1729, _1737 * _1730, _1737 * _1731)) + 1.0) * 0.5;
        float _4527 = isnan(0.0) ? _1745 : (isnan(_1745) ? 0.0 : max(_1745, 0.0));
        float _1754 = sqrt(((_1730 * _1730) + (_1729 * _1729)) + (_1731 * _1731)) / (_1685 + 9.9999997473787516355514526367188e-06);
        float _4538 = isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0));
        float _1755 = isnan(1.0) ? _4538 : (isnan(_4538) ? 1.0 : min(_4538, 1.0));
        float _1756 = _1755 * 2.0;
        float _1760 = (1.0 - _1755) / (_1755 + 1.0);
        float _4549 = isnan(0.0) ? _1760 : (isnan(_1760) ? 0.0 : max(_1760, 0.0));
        float _1761 = isnan(1.0) ? _4549 : (isnan(_4549) ? 1.0 : min(_4549, 1.0));
        float _1770 = ((((1.0 - _1761) * (_1756 + 2.0)) * exp2(log2(isnan(1.0) ? _4527 : (isnan(_4527) ? 1.0 : min(_4527, 1.0))) * (_1756 + 1.0))) + _1761) * _1685;
        float _1771 = _1653 * 0.5;
        float _1772 = _1663 * 0.5;
        float _1773 = _1673 * 0.5;
        float _1774 = dot(vec3(_1771, _1772, _1773), vec3(_1771, _1772, _1773));
        float _1779 = (_1774 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1774);
        float _1787 = (dot(vec3(_1026, _1027, _1028), vec3(_1779 * _1771, _1779 * _1772, _1779 * _1773)) + 1.0) * 0.5;
        float _4560 = isnan(0.0) ? _1787 : (isnan(_1787) ? 0.0 : max(_1787, 0.0));
        float _1796 = sqrt(((_1772 * _1772) + (_1771 * _1771)) + (_1773 * _1773)) / (_1686 + 9.9999997473787516355514526367188e-06);
        float _4571 = isnan(0.0) ? _1796 : (isnan(_1796) ? 0.0 : max(_1796, 0.0));
        float _1797 = isnan(1.0) ? _4571 : (isnan(_4571) ? 1.0 : min(_4571, 1.0));
        float _1798 = _1797 * 2.0;
        float _1802 = (1.0 - _1797) / (_1797 + 1.0);
        float _4582 = isnan(0.0) ? _1802 : (isnan(_1802) ? 0.0 : max(_1802, 0.0));
        float _1803 = isnan(1.0) ? _4582 : (isnan(_4582) ? 1.0 : min(_4582, 1.0));
        float _1812 = ((((1.0 - _1803) * (_1798 + 2.0)) * exp2(log2(isnan(1.0) ? _4560 : (isnan(_4560) ? 1.0 : min(_4560, 1.0))) * (_1798 + 1.0))) + _1803) * _1686;
        _1820 = _1653;
        _1821 = _1652;
        _1822 = _1651;
        _1823 = _1663;
        _1824 = _1662;
        _1825 = _1661;
        _1826 = _1673;
        _1827 = _1672;
        _1828 = _1671;
        _1829 = _1686;
        _1830 = _1685;
        _1831 = _1684;
        _1832 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1728 : (isnan(_1728) ? 0.0 : max(_1728, 0.0)));
        _1833 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1770 : (isnan(_1770) ? 0.0 : max(_1770, 0.0)));
        _1834 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1812 : (isnan(_1812) ? 0.0 : max(_1812, 0.0)));
    }
    else
    {
        _1820 = _1511;
        _1821 = _1511;
        _1822 = _1511;
        _1823 = _1511;
        _1824 = _1511;
        _1825 = _1511;
        _1826 = _1511;
        _1827 = _1511;
        _1828 = _1511;
        _1829 = _1511;
        _1830 = _1511;
        _1831 = _1511;
        _1832 = 0.0;
        _1833 = 0.0;
        _1834 = 0.0;
    }
    float _1844 = (cbModelParam._m0[1u].x * (_1832 - _1523)) + _1523;
    float _1845 = (cbModelParam._m0[1u].x * (_1833 - _1524)) + _1524;
    float _1846 = (cbModelParam._m0[1u].x * (_1834 - _1525)) + _1525;
    float _1867 = fma(_1846, cbSceneParam._m0[89u].z, fma(_1845, cbSceneParam._m0[89u].y, _1844 * cbSceneParam._m0[89u].x));
    float _1870 = fma(_1846, cbSceneParam._m0[90u].z, fma(_1845, cbSceneParam._m0[90u].y, _1844 * cbSceneParam._m0[90u].x));
    float _1873 = fma(_1846, cbSceneParam._m0[91u].z, fma(_1845, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1844));
    float _1888 = _1150 * 0.5;
    float _1889 = _1151 * 0.5;
    float _1890 = _1152 * 0.5;
    float _1891 = dot(vec4(_1888, _1889, _1890, 1.0), vec4(_1822, _1825, _1828, _1831));
    float _1894 = dot(vec4(_1888, _1889, _1890, 1.0), vec4(_1821, _1824, _1827, _1830));
    float _1897 = dot(vec4(_1888, _1889, _1890, 1.0), vec4(_1820, _1823, _1826, _1829));
    float _1931;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1904 = dot(vec4(_1888, _1889, _1890, 1.0), vec4(_1510, _1514, _1517, _1520));
        float _1908 = dot(vec4(_1888, _1889, _1890, 1.0), vec4(_1512, _1515, _1518, _1521));
        float _1912 = dot(vec4(_1888, _1889, _1890, 1.0), vec4(_1513, _1516, _1519, _1522));
        float _1919 = dot(vec4(cbModelParam._m0[39u]), vec4(_1888, _1889, _1890, 1.0));
        _1931 = dot(vec3(isnan(0.0) ? _1912 : (isnan(_1912) ? 0.0 : max(_1912, 0.0)), isnan(0.0) ? _1908 : (isnan(_1908) ? 0.0 : max(_1908, 0.0)), isnan(0.0) ? _1904 : (isnan(_1904) ? 0.0 : max(_1904, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1919) ? 0.0 : (isnan(0.0) ? _1919 : max(0.0, _1919))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1931 = 1.0;
    }
    float _1942;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1933 = dot(vec4(cbModelParam._m0[40u]), vec4(_1888, _1889, _1890, 1.0));
        _1942 = dot(vec3(isnan(0.0) ? _1891 : (isnan(_1891) ? 0.0 : max(_1891, 0.0)), isnan(0.0) ? _1894 : (isnan(_1894) ? 0.0 : max(_1894, 0.0)), isnan(0.0) ? _1897 : (isnan(_1897) ? 0.0 : max(_1897, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1933) ? 0.0 : (isnan(0.0) ? _1933 : max(0.0, _1933))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1942 = 1.0;
    }
    float _1946 = (_1942 * cbModelParam._m0[1u].x) + (_1931 * (1.0 - cbModelParam._m0[1u].x));
    float _1956 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1030);
    float _1957 = isnan(_1956) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1956 : min(cbModelParam._m0[25u].z, _1956));
    float _2037;
    float _2039;
    float _2041;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2004 = fma(_1211, cbModelParam._m0[13u].z, fma(_1207, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1203)) + cbModelParam._m0[13u].w;
        float _2008 = fma(_1211, cbModelParam._m0[14u].z, fma(_1207, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1203)) + cbModelParam._m0[14u].w;
        float _2012 = fma(_1211, cbModelParam._m0[15u].z, fma(_1207, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1203)) + cbModelParam._m0[15u].w;
        float _2015 = fma(_1152, cbModelParam._m0[13u].z, fma(_1151, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1150));
        float _2018 = fma(_1152, cbModelParam._m0[14u].z, fma(_1151, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1150));
        float _2021 = fma(_1152, cbModelParam._m0[15u].z, fma(_1151, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1150));
        float _2049;
        if (_2015 > 0.0)
        {
            _2049 = abs((1.0 - _2004) / _2015);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_2015 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_2004 + 1.0) / _2015);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _2049 = frontier_phi_16_14_ladder;
        }
        float _2218;
        if (_2018 > 0.0)
        {
            _2218 = abs((1.0 - _2008) / _2018);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2018 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2008 + 1.0) / _2018);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2218 = frontier_phi_25_21_ladder;
        }
        float _2512;
        if (_2021 > 0.0)
        {
            _2512 = abs((1.0 - _2012) / _2021);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2021 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2012 + 1.0) / _2021);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2512 = frontier_phi_37_32_ladder;
        }
        float _2514 = isnan(_2218) ? _2049 : (isnan(_2049) ? _2218 : min(_2049, _2218));
        float _2515 = isnan(_2512) ? _2514 : (isnan(_2514) ? _2512 : min(_2514, _2512));
        float _2519 = (_2515 * _2015) + _2004;
        float _2520 = (_2515 * _2018) + _2008;
        float _2521 = (_2515 * _2021) + _2012;
        float _2522 = _2515 * 9.9999997473787516355514526367188e-05;
        float _2524 = (-1.0) - _2522;
        float _2526 = _2522 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2521 > _2526) || ((_2521 < _2524) || ((_2520 > _2526) || ((_2520 < _2524) || ((_2519 < _2524) || (_2519 > _2526))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2666 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2521, cbModelParam._m0[9u].z, fma(_2520, cbModelParam._m0[9u].y, _2519 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2521, cbModelParam._m0[10u].z, fma(_2520, cbModelParam._m0[10u].y, _2519 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2521, cbModelParam._m0[11u].z, fma(_2520, cbModelParam._m0[11u].y, _2519 * cbModelParam._m0[11u].x))), _1957);
            frontier_phi_15_37_ladder = _2666.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2666.x * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2666.z * cbModelParam._m0[1u].y;
        }
        _2037 = frontier_phi_15_37_ladder_1;
        _2039 = frontier_phi_15_37_ladder;
        _2041 = frontier_phi_15_37_ladder_2;
    }
    else
    {
        vec4 _2025 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1150, _1151, _1152), _1957);
        _2037 = _2025.x * cbModelParam._m0[1u].y;
        _2039 = _2025.y * cbModelParam._m0[1u].y;
        _2041 = _2025.z * cbModelParam._m0[1u].y;
    }
    float _2045 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1030);
    float _2046 = isnan(_2045) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2045 : min(cbModelParam._m0[25u].w, _2045));
    float _2135;
    float _2137;
    float _2139;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2099 = fma(_1211, cbModelParam._m0[21u].z, fma(_1207, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1203)) + cbModelParam._m0[21u].w;
        float _2103 = fma(_1211, cbModelParam._m0[22u].z, fma(_1207, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1203)) + cbModelParam._m0[22u].w;
        float _2107 = fma(_1211, cbModelParam._m0[23u].z, fma(_1207, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1203)) + cbModelParam._m0[23u].w;
        float _2110 = fma(_1152, cbModelParam._m0[21u].z, fma(_1151, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1150));
        float _2113 = fma(_1152, cbModelParam._m0[22u].z, fma(_1151, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1150));
        float _2116 = fma(_1152, cbModelParam._m0[23u].z, fma(_1151, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1150));
        float _2223;
        if (_2110 > 0.0)
        {
            _2223 = abs((1.0 - _2099) / _2110);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_2110 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_2099 + 1.0) / _2110);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _2223 = frontier_phi_27_23_ladder;
        }
        float _2539;
        if (_2113 > 0.0)
        {
            _2539 = abs((1.0 - _2103) / _2113);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_2113 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_2103 + 1.0) / _2113);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2539 = frontier_phi_39_34_ladder;
        }
        float _2866;
        if (_2116 > 0.0)
        {
            _2866 = abs((1.0 - _2107) / _2116);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_2116 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_2107 + 1.0) / _2116);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2866 = frontier_phi_49_46_ladder;
        }
        float _2868 = isnan(_2539) ? _2223 : (isnan(_2223) ? _2539 : min(_2223, _2539));
        float _2869 = isnan(_2866) ? _2868 : (isnan(_2868) ? _2866 : min(_2868, _2866));
        float _2873 = (_2869 * _2110) + _2099;
        float _2874 = (_2869 * _2113) + _2103;
        float _2875 = (_2869 * _2116) + _2107;
        float _2876 = _2869 * 9.9999997473787516355514526367188e-05;
        float _2877 = (-1.0) - _2876;
        float _2879 = _2876 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2875 > _2879) || ((_2875 < _2877) || ((_2874 > _2879) || ((_2874 < _2877) || ((_2873 < _2877) || (_2873 > _2879))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2993 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2875, cbModelParam._m0[17u].z, fma(_2874, cbModelParam._m0[17u].y, _2873 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2875, cbModelParam._m0[18u].z, fma(_2874, cbModelParam._m0[18u].y, _2873 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2875, cbModelParam._m0[19u].z, fma(_2874, cbModelParam._m0[19u].y, _2873 * cbModelParam._m0[19u].x))), _2046);
            frontier_phi_24_49_ladder = _2993.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2993.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2993.x * cbModelParam._m0[1u].z;
        }
        _2135 = frontier_phi_24_49_ladder_2;
        _2137 = frontier_phi_24_49_ladder_1;
        _2139 = frontier_phi_24_49_ladder;
    }
    else
    {
        vec4 _2119 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1150, _1151, _1152), _2046);
        _2135 = _2119.x * cbModelParam._m0[1u].z;
        _2137 = _2119.y * cbModelParam._m0[1u].z;
        _2139 = _2119.z * cbModelParam._m0[1u].z;
    }
    float _2151 = ((((1.0 - _1171) * ((_1158 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1171 * _1158)) * _1142;
    float _2152 = _2151 * ((cbModelParam._m0[1u].w * (_2135 - _2037)) + _2037);
    float _2153 = _2151 * ((cbModelParam._m0[1u].w * (_2137 - _2039)) + _2039);
    float _2154 = _2151 * ((cbModelParam._m0[1u].w * (_2139 - _2041)) + _2041);
    float _2157 = fma(_2154, cbSceneParam._m0[89u].z, fma(_2153, cbSceneParam._m0[89u].y, _2152 * cbSceneParam._m0[89u].x));
    float _2160 = fma(_2154, cbSceneParam._m0[90u].z, fma(_2153, cbSceneParam._m0[90u].y, _2152 * cbSceneParam._m0[90u].x));
    float _2163 = fma(_2154, cbSceneParam._m0[91u].z, fma(_2153, cbSceneParam._m0[91u].y, _2152 * cbSceneParam._m0[91u].x));
    float _2197 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2201 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2205 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2209 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2210 = _2197 / _2209;
    float _2211 = _2201 / _2209;
    float _2212 = _2205 / _2209;
    float _2359;
    float _2360;
    float _2361;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2239 = ((uint(_2212 > cbSceneParam._m0[59u].y) + uint(_2212 > cbSceneParam._m0[59u].x)) + uint(_2212 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2240 = _2239 + 43u;
        uint _2248 = _2239 + 44u;
        uint _2256 = _2239 + 45u;
        uint _2264 = _2239 + 46u;
        float _2275 = fma(_2209, cbSceneParam._m0[_2240].w, fma(_2205, cbSceneParam._m0[_2240].z, fma(_2201, cbSceneParam._m0[_2240].y, _2197 * cbSceneParam._m0[_2240].x)));
        float _2279 = fma(_2209, cbSceneParam._m0[_2248].w, fma(_2205, cbSceneParam._m0[_2248].z, fma(_2201, cbSceneParam._m0[_2248].y, _2197 * cbSceneParam._m0[_2248].x)));
        float _2287 = fma(_2209, cbSceneParam._m0[_2264].w, fma(_2205, cbSceneParam._m0[_2264].z, fma(_2201, cbSceneParam._m0[_2264].y, _2197 * cbSceneParam._m0[_2264].x)));
        float _2292 = cbSceneParam._m0[33u].z * _2287;
        float _2294 = cbSceneParam._m0[33u].w * _2287;
        float _2297 = fma(_2209, cbSceneParam._m0[_2256].w, fma(_2205, cbSceneParam._m0[_2256].z, fma(_2201, cbSceneParam._m0[_2256].y, _2197 * cbSceneParam._m0[_2256].x))) / _2287;
        float _2345 = (cbSceneParam._m0[33u].x - sqrt(((_2211 * _2211) + (_2210 * _2210)) + (_2212 * _2212))) * cbSceneParam._m0[33u].y;
        float _4708 = isnan(0.0) ? _2345 : (isnan(_2345) ? 0.0 : max(_2345, 0.0));
        float _2352 = (isnan(1.0) ? _4708 : (isnan(_4708) ? 1.0 : min(_4708, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2292 + _2275) / _2287, (_2294 + _2279) / _2287), _2297), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2294 + _2275) / _2287, (_2279 - _2292) / _2287), _2297), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2275 - _2292) / _2287, (_2279 - _2294) / _2287), _2297), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2275 - _2294) / _2287, (_2292 + _2279) / _2287), _2297), 0.0)).x), vec4(0.25)));
        _2359 = 1.0 - (_2352 * cbSceneParam._m0[34u].x);
        _2360 = 1.0 - (_2352 * cbSceneParam._m0[34u].y);
        _2361 = 1.0 - (_2352 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2359 = 1.0;
        _2360 = 1.0;
        _2361 = 1.0;
    }
    float _2425;
    float _2427;
    float _2429;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2413 = fma(_2209, cbSceneParam._m0[63u].w, fma(_2205, cbSceneParam._m0[63u].z, fma(_2201, cbSceneParam._m0[63u].y, _2197 * cbSceneParam._m0[63u].x)));
        float _2414 = fma(_2209, cbSceneParam._m0[60u].w, fma(_2205, cbSceneParam._m0[60u].z, fma(_2201, cbSceneParam._m0[60u].y, _2197 * cbSceneParam._m0[60u].x))) / _2413;
        float _2415 = fma(_2209, cbSceneParam._m0[61u].w, fma(_2205, cbSceneParam._m0[61u].z, fma(_2201, cbSceneParam._m0[61u].y, _2197 * cbSceneParam._m0[61u].x))) / _2413;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_2414 >= cbSceneParam._m0[64u].x) && (_2415 >= cbSceneParam._m0[64u].y)) && (_2414 <= cbSceneParam._m0[64u].z)) && (_2415 <= cbSceneParam._m0[64u].w))
        {
            float _2552 = fma(_2209, cbSceneParam._m0[62u].w, fma(_2205, cbSceneParam._m0[62u].z, fma(_2201, cbSceneParam._m0[62u].y, _2197 * cbSceneParam._m0[62u].x))) / _2413;
            float _2556 = isnan(cbSceneParam._m0[41u].w) ? _2552 : (isnan(_2552) ? cbSceneParam._m0[41u].w : max(_2552, cbSceneParam._m0[41u].w));
            float _2599 = (cbSceneParam._m0[33u].x - sqrt(((_2211 * _2211) + (_2210 * _2210)) + (_2212 * _2212))) * cbSceneParam._m0[33u].y;
            float _4724 = isnan(0.0) ? _2599 : (isnan(_2599) ? 0.0 : max(_2599, 0.0));
            float _2606 = (isnan(1.0) ? _4724 : (isnan(_4724) ? 1.0 : min(_4724, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2414, cbSceneParam._m0[33u].w + _2415), _2556), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2414, _2415 - cbSceneParam._m0[33u].z), _2556), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2414 - cbSceneParam._m0[33u].z, _2415 - cbSceneParam._m0[33u].w), _2556), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2414 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2415), _2556), 0.0)).x), vec4(0.25)));
            float _2610 = 1.0 - (_2606 * cbSceneParam._m0[34u].x);
            float _2611 = 1.0 - (_2606 * cbSceneParam._m0[34u].y);
            float _2612 = 1.0 - (_2606 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2611) ? _2360 : (isnan(_2360) ? _2611 : min(_2360, _2611));
            frontier_phi_36_35_ladder_1 = isnan(_2612) ? _2361 : (isnan(_2361) ? _2612 : min(_2361, _2612));
            frontier_phi_36_35_ladder_2 = isnan(_2610) ? _2359 : (isnan(_2359) ? _2610 : min(_2359, _2610));
        }
        else
        {
            frontier_phi_36_35_ladder = _2360;
            frontier_phi_36_35_ladder_1 = _2361;
            frontier_phi_36_35_ladder_2 = _2359;
        }
        _2425 = frontier_phi_36_35_ladder_2;
        _2427 = frontier_phi_36_35_ladder;
        _2429 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _2425 = _2359;
        _2427 = _2360;
        _2429 = _2361;
    }
    uvec4 _2433 = floatBitsToUint(cbInstanceData._m0[_949]);
    uint _2435 = _2433.x * 14u;
    uint _2436 = _2435 + 13u;
    float _2443 = _1142 + (-1.0);
    float _2448 = (cbLight._m0[_2436].x * _2443) + 1.0;
    float _2449 = (cbLight._m0[_2436].y * _2443) + 1.0;
    float _2450 = (cbLight._m0[_2436].z * _2443) + 1.0;
    float _2451 = (cbLight._m0[_2436].w * _2443) + 1.0;
    uint _2452 = _2435 + 5u;
    float _2458 = isnan(1.0) ? _2449 : (isnan(_2449) ? 1.0 : min(_2449, 1.0));
    uint _2462 = _2435 + 4u;
    float _2471 = isnan(1.0) ? _2448 : (isnan(_2448) ? 1.0 : min(_2448, 1.0));
    uint _2475 = _2435 | 1u;
    float _2486 = dot(vec3(cbLight._m0[_2435].xyz), vec3(_1026, _1027, _1028));
    float _2489 = dot(vec3(cbLight._m0[_2475].xyz), vec3(_1026, _1027, _1028));
    float _4760 = isnan(0.0) ? _2486 : (isnan(_2486) ? 0.0 : max(_2486, 0.0));
    float _4771 = isnan(0.0) ? _2489 : (isnan(_2489) ? 0.0 : max(_2489, 0.0));
    float _2494 = (isnan(1.0) ? _4760 : (isnan(_4760) ? 1.0 : min(_4760, 1.0))) * 0.3183098733425140380859375;
    float _2496 = (isnan(1.0) ? _4771 : (isnan(_4771) ? 1.0 : min(_4771, 1.0))) * 0.3183098733425140380859375;
    float _2503 = ((cbLight._m0[_2452].x * _2458) * _2496) + (((cbLight._m0[_2462].x * _2425) * _2471) * _2494);
    float _2504 = ((_2458 * cbLight._m0[_2452].y) * _2496) + (((cbLight._m0[_2462].y * _2427) * _2471) * _2494);
    float _2505 = ((_2458 * cbLight._m0[_2452].z) * _2496) + (((cbLight._m0[_2462].z * _2429) * _2471) * _2494);
    uvec4 _2509 = floatBitsToUint(cbLight._m0[_2435 + 12u]);
    bool _2511 = _2509.x == 0u;
    float _2613;
    float _2615;
    float _2617;
    if (_2511)
    {
        _2613 = _2503;
        _2615 = _2504;
        _2617 = _2505;
    }
    else
    {
        uint _2621 = _2435 + 6u;
        float _2637 = (dot(vec3(cbLight._m0[_2435 + 2u].xyz), vec3(_1026, _1027, _1028)) * 0.5) + 0.5;
        float _2638 = _2637 * _2637;
        float _4782 = isnan(0.0) ? _2638 : (isnan(_2638) ? 0.0 : max(_2638, 0.0));
        float _2639 = isnan(1.0) ? _4782 : (isnan(_4782) ? 1.0 : min(_4782, 1.0));
        float _2640 = isnan(1.0) ? _2450 : (isnan(_2450) ? 1.0 : min(_2450, 1.0));
        _2613 = (((cbLight._m0[_2621].x * 0.3183098733425140380859375) * _2639) * _2640) + _2503;
        _2615 = (((cbLight._m0[_2621].y * 0.3183098733425140380859375) * _2639) * _2640) + _2504;
        _2617 = (((cbLight._m0[_2621].z * 0.3183098733425140380859375) * _2639) * _2640) + _2505;
    }
    bool _2620 = _2509.y == 0u;
    float _2675;
    float _2677;
    float _2679;
    if (_2620)
    {
        _2675 = _2613;
        _2677 = _2615;
        _2679 = _2617;
    }
    else
    {
        uint _2837 = _2435 + 7u;
        float _2853 = (dot(vec3(cbLight._m0[_2435 + 3u].xyz), vec3(_1026, _1027, _1028)) * 0.5) + 0.5;
        float _2854 = _2853 * _2853;
        float _4798 = isnan(0.0) ? _2854 : (isnan(_2854) ? 0.0 : max(_2854, 0.0));
        float _2855 = isnan(1.0) ? _4798 : (isnan(_4798) ? 1.0 : min(_4798, 1.0));
        float _2856 = isnan(1.0) ? _2451 : (isnan(_2451) ? 1.0 : min(_2451, 1.0));
        _2675 = (((cbLight._m0[_2837].x * 0.3183098733425140380859375) * _2855) * _2856) + _2613;
        _2677 = (((cbLight._m0[_2837].y * 0.3183098733425140380859375) * _2855) * _2856) + _2615;
        _2679 = (((cbLight._m0[_2837].z * 0.3183098733425140380859375) * _2855) * _2856) + _2617;
    }
    uint _2682 = _2435 + 8u;
    float _2695 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2435].w)) * _1030) * 0.949999988079071044921875);
    float _2696 = _2695 * _2695;
    float _2697 = cbLight._m0[_2435].x + _1072;
    float _2698 = cbLight._m0[_2435].y + _1073;
    float _2699 = cbLight._m0[_2435].z + _1074;
    float _2703 = inversesqrt(dot(vec3(_2697, _2698, _2699), vec3(_2697, _2698, _2699)));
    float _2704 = _2703 * _2697;
    float _2705 = _2703 * _2698;
    float _2706 = _2703 * _2699;
    float _2707 = dot(vec3(_1026, _1027, _1028), vec3(cbLight._m0[_2435].xyz));
    float _4814 = isnan(0.0) ? _2707 : (isnan(_2707) ? 0.0 : max(_2707, 0.0));
    float _2710 = isnan(1.0) ? _4814 : (isnan(_4814) ? 1.0 : min(_4814, 1.0));
    float _4825 = isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0));
    float _2711 = isnan(1.0) ? _4825 : (isnan(_4825) ? 1.0 : min(_4825, 1.0));
    float _2712 = dot(vec3(_1026, _1027, _1028), vec3(_2704, _2705, _2706));
    float _4836 = isnan(0.0) ? _2712 : (isnan(_2712) ? 0.0 : max(_2712, 0.0));
    float _2715 = isnan(1.0) ? _4836 : (isnan(_4836) ? 1.0 : min(_4836, 1.0));
    float _2716 = dot(vec3(cbLight._m0[_2435].xyz), vec3(_2704, _2705, _2706));
    float _4847 = isnan(0.0) ? _2716 : (isnan(_2716) ? 0.0 : max(_2716, 0.0));
    float _2720 = _2696 * _2696;
    float _2724 = ((_2715 * _2715) * (_2720 + (-1.0))) + 1.0;
    float _2735 = (exp2(log2(1.0 - (isnan(1.0) ? _4847 : (isnan(_4847) ? 1.0 : min(_4847, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2736 = 1.0 - _2696;
    float _2747 = (0.5 / (((_2711 * ((_2710 * _2736) + _2696)) + 9.9999999392252902907785028219223e-09) + (((_2711 * _2736) + _2696) * _2710))) * _2710;
    float _4858 = isnan(0.0) ? _2747 : (isnan(_2747) ? 0.0 : max(_2747, 0.0));
    float _2749 = (isnan(1.0) ? _4858 : (isnan(_4858) ? 1.0 : min(_4858, 1.0))) * (_2720 / ((_2724 * _2724) * 3.141590118408203125));
    uint _2763 = _2435 + 9u;
    float _2774 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2475].w)) * _1030) * 0.949999988079071044921875);
    float _2775 = _2774 * _2774;
    float _2776 = cbLight._m0[_2475].x + _1072;
    float _2777 = cbLight._m0[_2475].y + _1073;
    float _2778 = cbLight._m0[_2475].z + _1074;
    float _2782 = inversesqrt(dot(vec3(_2776, _2777, _2778), vec3(_2776, _2777, _2778)));
    float _2783 = _2782 * _2776;
    float _2784 = _2782 * _2777;
    float _2785 = _2782 * _2778;
    float _2786 = dot(vec3(_1026, _1027, _1028), vec3(cbLight._m0[_2475].xyz));
    float _4869 = isnan(0.0) ? _2786 : (isnan(_2786) ? 0.0 : max(_2786, 0.0));
    float _2789 = isnan(1.0) ? _4869 : (isnan(_4869) ? 1.0 : min(_4869, 1.0));
    float _2790 = dot(vec3(_1026, _1027, _1028), vec3(_2783, _2784, _2785));
    float _4880 = isnan(0.0) ? _2790 : (isnan(_2790) ? 0.0 : max(_2790, 0.0));
    float _2793 = isnan(1.0) ? _4880 : (isnan(_4880) ? 1.0 : min(_4880, 1.0));
    float _2794 = dot(vec3(cbLight._m0[_2475].xyz), vec3(_2783, _2784, _2785));
    float _4891 = isnan(0.0) ? _2794 : (isnan(_2794) ? 0.0 : max(_2794, 0.0));
    float _2798 = _2775 * _2775;
    float _2802 = ((_2793 * _2793) * (_2798 + (-1.0))) + 1.0;
    float _2811 = (exp2(log2(1.0 - (isnan(1.0) ? _4891 : (isnan(_4891) ? 1.0 : min(_4891, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2812 = 1.0 - _2775;
    float _2822 = (0.5 / (((_2711 * ((_2789 * _2812) + _2775)) + 9.9999999392252902907785028219223e-09) + (((_2711 * _2812) + _2775) * _2789))) * _2789;
    float _4902 = isnan(0.0) ? _2822 : (isnan(_2822) ? 0.0 : max(_2822, 0.0));
    float _2824 = (isnan(1.0) ? _4902 : (isnan(_4902) ? 1.0 : min(_4902, 1.0))) * (_2798 / ((_2802 * _2802) * 3.141590118408203125));
    float _2834 = (((_2811 * cbLight._m0[_2763].x) * _2824) * _2458) + ((((cbLight._m0[_2682].x * _2425) * _2735) * _2749) * _2471);
    float _2835 = (((_2811 * cbLight._m0[_2763].y) * _2824) * _2458) + ((((cbLight._m0[_2682].y * _2427) * _2735) * _2749) * _2471);
    float _2836 = (((_2811 * cbLight._m0[_2763].z) * _2824) * _2458) + ((((cbLight._m0[_2682].z * _2429) * _2735) * _2749) * _2471);
    float _2892;
    float _2894;
    float _2896;
    if (_2511)
    {
        _2892 = _2834;
        _2894 = _2835;
        _2896 = _2836;
    }
    else
    {
        uint _2898 = _2435 + 2u;
        uint _2902 = _2435 + 10u;
        float _2916 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2898].w)) * _1030) * 0.949999988079071044921875);
        float _2917 = _2916 * _2916;
        float _2918 = cbLight._m0[_2898].x + _1072;
        float _2919 = cbLight._m0[_2898].y + _1073;
        float _2920 = cbLight._m0[_2898].z + _1074;
        float _2924 = inversesqrt(dot(vec3(_2918, _2919, _2920), vec3(_2918, _2919, _2920)));
        float _2925 = _2924 * _2918;
        float _2926 = _2924 * _2919;
        float _2927 = _2924 * _2920;
        float _2928 = dot(vec3(_1026, _1027, _1028), vec3(cbLight._m0[_2898].xyz));
        float _4913 = isnan(0.0) ? _2928 : (isnan(_2928) ? 0.0 : max(_2928, 0.0));
        float _2931 = isnan(1.0) ? _4913 : (isnan(_4913) ? 1.0 : min(_4913, 1.0));
        float _2932 = dot(vec3(_1026, _1027, _1028), vec3(_2925, _2926, _2927));
        float _4924 = isnan(0.0) ? _2932 : (isnan(_2932) ? 0.0 : max(_2932, 0.0));
        float _2935 = isnan(1.0) ? _4924 : (isnan(_4924) ? 1.0 : min(_4924, 1.0));
        float _2936 = dot(vec3(cbLight._m0[_2898].xyz), vec3(_2925, _2926, _2927));
        float _4935 = isnan(0.0) ? _2936 : (isnan(_2936) ? 0.0 : max(_2936, 0.0));
        float _2940 = _2917 * _2917;
        float _2944 = ((_2935 * _2935) * (_2940 + (-1.0))) + 1.0;
        float _2953 = (exp2(log2(1.0 - (isnan(1.0) ? _4935 : (isnan(_4935) ? 1.0 : min(_4935, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2954 = 1.0 - _2917;
        float _2964 = (0.5 / (((_2711 * ((_2931 * _2954) + _2917)) + 9.9999999392252902907785028219223e-09) + (((_2711 * _2954) + _2917) * _2931))) * _2931;
        float _4946 = isnan(0.0) ? _2964 : (isnan(_2964) ? 0.0 : max(_2964, 0.0));
        float _2966 = (isnan(1.0) ? _4946 : (isnan(_4946) ? 1.0 : min(_4946, 1.0))) * (_2940 / ((_2944 * _2944) * 3.141590118408203125));
        float _2967 = isnan(1.0) ? _2450 : (isnan(_2450) ? 1.0 : min(_2450, 1.0));
        _2892 = (((_2953 * cbLight._m0[_2902].x) * _2966) * _2967) + _2834;
        _2894 = (((_2953 * cbLight._m0[_2902].y) * _2966) * _2967) + _2835;
        _2896 = (((_2953 * cbLight._m0[_2902].z) * _2966) * _2967) + _2836;
    }
    float _2998;
    float _3000;
    float _3002;
    if (_2620)
    {
        _2998 = _2892;
        _3000 = _2894;
        _3002 = _2896;
    }
    else
    {
        uint _3009 = _2435 + 3u;
        uint _3013 = _2435 + 11u;
        float _3027 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3009].w)) * _1030) * 0.949999988079071044921875);
        float _3028 = _3027 * _3027;
        float _3029 = cbLight._m0[_3009].x + _1072;
        float _3030 = cbLight._m0[_3009].y + _1073;
        float _3031 = cbLight._m0[_3009].z + _1074;
        float _3035 = inversesqrt(dot(vec3(_3029, _3030, _3031), vec3(_3029, _3030, _3031)));
        float _3036 = _3035 * _3029;
        float _3037 = _3035 * _3030;
        float _3038 = _3035 * _3031;
        float _3039 = dot(vec3(_1026, _1027, _1028), vec3(cbLight._m0[_3009].xyz));
        float _4962 = isnan(0.0) ? _3039 : (isnan(_3039) ? 0.0 : max(_3039, 0.0));
        float _3042 = isnan(1.0) ? _4962 : (isnan(_4962) ? 1.0 : min(_4962, 1.0));
        float _3043 = dot(vec3(_1026, _1027, _1028), vec3(_3036, _3037, _3038));
        float _4973 = isnan(0.0) ? _3043 : (isnan(_3043) ? 0.0 : max(_3043, 0.0));
        float _3046 = isnan(1.0) ? _4973 : (isnan(_4973) ? 1.0 : min(_4973, 1.0));
        float _3047 = dot(vec3(cbLight._m0[_3009].xyz), vec3(_3036, _3037, _3038));
        float _4984 = isnan(0.0) ? _3047 : (isnan(_3047) ? 0.0 : max(_3047, 0.0));
        float _3051 = _3028 * _3028;
        float _3055 = ((_3046 * _3046) * (_3051 + (-1.0))) + 1.0;
        float _3064 = (exp2(log2(1.0 - (isnan(1.0) ? _4984 : (isnan(_4984) ? 1.0 : min(_4984, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3065 = 1.0 - _3028;
        float _3075 = (0.5 / (((_2711 * ((_3042 * _3065) + _3028)) + 9.9999999392252902907785028219223e-09) + (((_2711 * _3065) + _3028) * _3042))) * _3042;
        float _4995 = isnan(0.0) ? _3075 : (isnan(_3075) ? 0.0 : max(_3075, 0.0));
        float _3077 = (isnan(1.0) ? _4995 : (isnan(_4995) ? 1.0 : min(_4995, 1.0))) * (_3051 / ((_3055 * _3055) * 3.141590118408203125));
        float _3078 = isnan(1.0) ? _2451 : (isnan(_2451) ? 1.0 : min(_2451, 1.0));
        _2998 = (((_3064 * cbLight._m0[_3013].x) * _3077) * _3078) + _2892;
        _3000 = (((_3064 * cbLight._m0[_3013].y) * _3077) * _3078) + _2894;
        _3002 = (((_3064 * cbLight._m0[_3013].z) * _3077) * _3078) + _2896;
    }
    float _3143;
    float _3145;
    float _3147;
    float _3149;
    float _3151;
    float _3153;
    if (_2433.y == 0u)
    {
        uvec4 _3099 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3100 = _3099.x;
        uint _3111 = uint((float(_3099.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1081) / _3100))) + floor(float(uint(cbSceneParam._m0[85u].x * _1080) / _3100)));
        float _3121 = (log2(_2212 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3122 = isnan(0.0) ? _3121 : (isnan(_3121) ? 0.0 : max(_3121, 0.0));
        uint _3125 = uint(isnan(14.0) ? _3122 : (isnan(_3122) ? 14.0 : min(_3122, 14.0)));
        uvec4 _3130 = texelFetch(g_lightClusterGridBuffer, int(((_3125 << 2u) + (_3111 << 6u)) >> 2u));
        uint _3131 = _3130.x;
        uint _3132 = _3099.z;
        float _3237;
        float _3239;
        float _3241;
        float _3243;
        float _3245;
        float _3247;
        if (((((1u << ((_3132 >> 4u) & 15u)) + 4294967295u) & _3131) == 0u) || ((_3132 & 240u) == 0u))
        {
            _3237 = 0.0;
            _3239 = 0.0;
            _3241 = 0.0;
            _3243 = 0.0;
            _3245 = 0.0;
            _3247 = 0.0;
        }
        else
        {
            float _3238;
            float _3240;
            float _3242;
            float _3244;
            float _3246;
            float _3248;
            float _3381 = 0.0;
            float _3382 = 0.0;
            float _3383 = 0.0;
            float _3384 = 0.0;
            float _3385 = 0.0;
            float _3386 = 0.0;
            uint _3387 = 0u;
            uint _3396;
            bool _3397;
            for (;;)
            {
                _3396 = texelFetch(g_lightClassification, int((((_3125 << 5u) + (_3111 << 9u)) + (_3387 << 2u)) >> 2u)).x;
                _3397 = _3396 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_3397)
                {
                    frontier_phi_68_pred = _3386;
                    frontier_phi_68_pred_1 = _3385;
                    frontier_phi_68_pred_2 = _3384;
                    frontier_phi_68_pred_3 = _3382;
                    frontier_phi_68_pred_4 = _3381;
                    frontier_phi_68_pred_5 = _3383;
                }
                else
                {
                    float _3505;
                    float _3506;
                    float _3507;
                    float _3508;
                    float _3509;
                    float _3510;
                    uint _3511;
                    _3505 = _3381;
                    _3506 = _3382;
                    _3507 = _3383;
                    _3508 = _3384;
                    _3509 = _3385;
                    _3510 = _3386;
                    _3511 = _3396;
                    float _3437;
                    float _3438;
                    float _3439;
                    float _3440;
                    float _3441;
                    float _3442;
                    for (;;)
                    {
                        uint _3515 = uint(findLSB(_3511)) + (_3387 << 5u);
                        uint _3512 = (_3511 + 4294967295u) & _3511;
                        uint _3517 = _3515 * 48u;
                        vec4 _3531 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3517)).x, texelFetch(g_PointLightRenderingBuffer, int(_3517 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3517 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3517 + 3u)).x));
                        uint _3537 = (_3515 * 48u) + 4u;
                        vec4 _3550 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3537)).x, texelFetch(g_PointLightRenderingBuffer, int(_3537 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3537 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3537 + 3u)).x));
                        uint _3556 = (_3515 * 48u) + 8u;
                        vec3 _3567 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3556)).x, texelFetch(g_PointLightRenderingBuffer, int(_3556 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3556 + 2u)).x));
                        float _3571 = _3531.x - _2210;
                        float _3572 = _3531.y - _2211;
                        float _3573 = _3531.z - _2212;
                        float _3574 = dot(vec3(_3571, _3572, _3573), vec3(_3571, _3572, _3573));
                        float _3577 = inversesqrt(_3574);
                        float _3578 = _3577 * _3571;
                        float _3579 = _3577 * _3572;
                        float _3580 = _3577 * _3573;
                        float _3581 = dot(vec3(_1099, _1102, _1105), vec3(_3578, _3579, _3580));
                        float _3586 = 1.0 - (_3574 * _3531.w);
                        float _5021 = isnan(0.0) ? _3586 : (isnan(_3586) ? 0.0 : max(_3586, 0.0));
                        float _3587 = isnan(1.0) ? _5021 : (isnan(_5021) ? 1.0 : min(_5021, 1.0));
                        float _3588 = sqrt(_3574) * _3550.w;
                        float _3591 = 1.39999997615814208984375 / (_3588 + 1.39999997615814208984375);
                        float _3592 = _3591 * _3591;
                        float _3595 = ((1.0 - _3592) * _3581) + _3592;
                        float _3598 = _3588 * _3588;
                        float _3602 = ((isnan(0.0) ? _3595 : (isnan(_3595) ? 0.0 : max(_3595, 0.0))) * _3587) / ((_3598 * 0.699999988079071044921875) + 1.0);
                        float _3606 = (-0.0) - _2210;
                        float _3607 = (-0.0) - _2211;
                        float _3608 = (-0.0) - _2212;
                        float _3612 = inversesqrt(dot(vec3(_3606, _3607, _3608), vec3(_3606, _3607, _3608)));
                        float _3613 = _3612 * _3606;
                        float _3614 = _3612 * _3607;
                        float _3615 = _3612 * _3608;
                        float _3622 = exp2(log2(1.0 / ((_3598 * 3.5) + 5.0)) * 0.25);
                        float _3623 = 1.0 - _1158;
                        float _3630 = sqrt(1.0 - ((1.0 - (_3623 * _3623)) * (1.0 - (_3622 * _3622))));
                        float _3631 = _3630 * _3630;
                        float _3632 = _3631 * _3631;
                        float _3633 = _3613 + _3578;
                        float _3634 = _3614 + _3579;
                        float _3635 = _3615 + _3580;
                        float _3639 = inversesqrt(dot(vec3(_3633, _3634, _3635), vec3(_3633, _3634, _3635)));
                        float _3643 = dot(vec3(_1099, _1102, _1105), vec3(_3613, _3614, _3615));
                        float _5037 = isnan(0.0) ? _3643 : (isnan(_3643) ? 0.0 : max(_3643, 0.0));
                        float _3646 = isnan(1.0) ? _5037 : (isnan(_5037) ? 1.0 : min(_5037, 1.0));
                        float _3647 = dot(vec3(_1099, _1102, _1105), vec3(_3639 * _3633, _3639 * _3634, _3639 * _3635));
                        float _5048 = isnan(0.0) ? _3647 : (isnan(_3647) ? 0.0 : max(_3647, 0.0));
                        float _3650 = isnan(1.0) ? _5048 : (isnan(_5048) ? 1.0 : min(_5048, 1.0));
                        float _3654 = ((_3650 * _3650) * (_3632 + (-1.0))) + 1.0;
                        float _3655 = _3591 * _3631;
                        float _3656 = _3655 * _3655;
                        float _3659 = ((1.0 - _3656) * _3581) + _3656;
                        float _5059 = isnan(0.0) ? _3659 : (isnan(_3659) ? 0.0 : max(_3659, 0.0));
                        float _3660 = isnan(1.0) ? _5059 : (isnan(_5059) ? 1.0 : min(_5059, 1.0));
                        float _3661 = 1.0 - _3631;
                        float _3671 = (0.5 / (((_3660 * ((_3646 * _3661) + _3631)) + 9.9999999392252902907785028219223e-09) + (((_3660 * _3661) + _3631) * _3646))) * _3660;
                        float _5070 = isnan(0.0) ? _3671 : (isnan(_3671) ? 0.0 : max(_3671, 0.0));
                        float _3682 = (((_3632 * 3.1415927410125732421875) * (isnan(1.0) ? _5070 : (isnan(_5070) ? 1.0 : min(_5070, 1.0)))) / ((_3654 * _3654) * ((_3598 * 2.1991131305694580078125) + 3.141590118408203125))) * _3587;
                        _3440 = (_3602 * _3550.x) + _3508;
                        _3441 = (_3602 * _3550.y) + _3509;
                        _3442 = (_3602 * _3550.z) + _3510;
                        _3437 = (_3682 * _3567.x) + _3505;
                        _3438 = (_3682 * _3567.y) + _3506;
                        _3439 = (_3682 * _3567.z) + _3507;
                        if (_3512 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3505 = _3437;
                            _3506 = _3438;
                            _3507 = _3439;
                            _3508 = _3440;
                            _3509 = _3441;
                            _3510 = _3442;
                            _3511 = _3512;
                        }
                    }
                    frontier_phi_68_pred = _3442;
                    frontier_phi_68_pred_1 = _3441;
                    frontier_phi_68_pred_2 = _3440;
                    frontier_phi_68_pred_3 = _3438;
                    frontier_phi_68_pred_4 = _3437;
                    frontier_phi_68_pred_5 = _3439;
                }
                _3248 = frontier_phi_68_pred;
                _3246 = frontier_phi_68_pred_1;
                _3244 = frontier_phi_68_pred_2;
                _3240 = frontier_phi_68_pred_3;
                _3238 = frontier_phi_68_pred_4;
                _3242 = frontier_phi_68_pred_5;
                uint _3388 = _3387 + 1u;
                if (_3388 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3381 = _3238;
                    _3382 = _3240;
                    _3383 = _3242;
                    _3384 = _3244;
                    _3385 = _3246;
                    _3386 = _3248;
                    _3387 = _3388;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3237 = _3238;
            _3239 = _3240;
            _3241 = _3242;
            _3243 = _3244;
            _3245 = _3246;
            _3247 = _3248;
        }
        uvec4 _3251 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3252 = _3251.z;
        uint _3254 = (_3252 >> 8u) & 15u;
        float _3349;
        float _3351;
        float _3353;
        float _3355;
        float _3357;
        float _3359;
        if (((4294967295u << _3254) & _3131) == 0u)
        {
            _3349 = _3237;
            _3351 = _3239;
            _3353 = _3241;
            _3355 = _3243;
            _3357 = _3245;
            _3359 = _3247;
        }
        else
        {
            float _3374 = inversesqrt(dot(vec3(_2210, _2211, _2212), vec3(_2210, _2211, _2212)));
            float _3375 = _3374 * _2210;
            float _3376 = _3374 * _2211;
            float _3377 = _3374 * _2212;
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            float frontier_phi_62_63_ladder_3;
            float frontier_phi_62_63_ladder_4;
            float frontier_phi_62_63_ladder_5;
            if (_3254 < ((_3252 >> 12u) & 15u))
            {
                float _3350;
                float _3352;
                float _3354;
                float _3356;
                float _3358;
                float _3360;
                float _3488 = _3237;
                float _3489 = _3239;
                float _3490 = _3241;
                float _3491 = _3243;
                float _3492 = _3245;
                float _3493 = _3247;
                uint _3494 = _3254;
                uint _3503;
                bool _3504;
                for (;;)
                {
                    _3503 = texelFetch(g_lightClassification, int((((_3125 << 5u) + (_3111 << 9u)) + (_3494 << 2u)) >> 2u)).x;
                    _3504 = _3503 == 0u;
                    float frontier_phi_74_pred;
                    float frontier_phi_74_pred_1;
                    float frontier_phi_74_pred_2;
                    float frontier_phi_74_pred_3;
                    float frontier_phi_74_pred_4;
                    float frontier_phi_74_pred_5;
                    if (_3504)
                    {
                        frontier_phi_74_pred = _3490;
                        frontier_phi_74_pred_1 = _3489;
                        frontier_phi_74_pred_2 = _3488;
                        frontier_phi_74_pred_3 = _3493;
                        frontier_phi_74_pred_4 = _3492;
                        frontier_phi_74_pred_5 = _3491;
                    }
                    else
                    {
                        float _3687;
                        float _3688;
                        float _3689;
                        float _3690;
                        float _3691;
                        float _3692;
                        float _3980;
                        float _3981;
                        float _3982;
                        float _3983;
                        float _3984;
                        float _3985;
                        float _3700 = _3488;
                        float _3701 = _3489;
                        float _3702 = _3490;
                        float _3703 = _3491;
                        float _3704 = _3492;
                        float _3705 = _3493;
                        uint _3706 = _3503;
                        uint _3707;
                        vec4 _3732;
                        float _3733;
                        vec4 _3748;
                        vec3 _3760;
                        vec4 _3775;
                        vec4 _3790;
                        float _3836;
                        bool _3837;
                        for (;;)
                        {
                            uint _3717 = ((_3494 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3706));
                            _3707 = (_3706 + 4294967295u) & _3706;
                            uint _3719 = _3717 * 40u;
                            _3732 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3719)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3719 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3719 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3719 + 3u)).x));
                            _3733 = _3732.w;
                            uint _3735 = (_3717 * 40u) + 4u;
                            _3748 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3735)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3735 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3735 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3735 + 3u)).x));
                            uint _3750 = (_3717 * 40u) + 8u;
                            _3760 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3750)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3750 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3750 + 2u)).x));
                            uint _3762 = (_3717 * 40u) + 16u;
                            _3775 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3762)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3762 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3762 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3762 + 3u)).x));
                            uint _3777 = (_3717 * 40u) + 20u;
                            _3790 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3777)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3777 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3777 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3777 + 3u)).x));
                            uint _3792 = (_3717 * 40u) + 24u;
                            vec4 _3805 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3792)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3792 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3792 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3792 + 3u)).x));
                            uint _3811 = (_3717 * 40u) + 28u;
                            vec4 _3824 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3811)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3811 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3811 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3811 + 3u)).x));
                            _3836 = fma(_2212, _3824.z, fma(_2211, _3824.y, _3824.x * _2210)) + _3824.w;
                            _3837 = !((fma(_2212, _3805.z, fma(_2211, _3805.y, _3805.x * _2210)) + _3805.w) <= 0.0);
                            float frontier_phi_80_pred;
                            float frontier_phi_80_pred_1;
                            float frontier_phi_80_pred_2;
                            float frontier_phi_80_pred_3;
                            float frontier_phi_80_pred_4;
                            float frontier_phi_80_pred_5;
                            if (_3837)
                            {
                                float _3864 = _3732.x - _2210;
                                float _3865 = _3732.y - _2211;
                                float _3866 = _3732.z - _2212;
                                float _3867 = dot(vec3(_3864, _3865, _3866), vec3(_3864, _3865, _3866));
                                float _3870 = inversesqrt(_3867);
                                float _3871 = _3870 * _3864;
                                float _3872 = _3870 * _3865;
                                float _3873 = _3870 * _3866;
                                float _3877 = 1.0 - (_3867 / (_3733 * _3733));
                                float _5081 = isnan(0.0) ? _3877 : (isnan(_3877) ? 0.0 : max(_3877, 0.0));
                                float _3878 = isnan(1.0) ? _5081 : (isnan(_5081) ? 1.0 : min(_5081, 1.0));
                                float _3882 = sqrt(_3867) * _3748.w;
                                float _3884 = 1.39999997615814208984375 / (_3882 + 1.39999997615814208984375);
                                float _3885 = _3884 * _3884;
                                float _3888 = ((1.0 - _3885) * dot(vec3(_3871, _3872, _3873), vec3(_1099, _1102, _1105))) + _3885;
                                float _3891 = _3882 * _3882;
                                float _3895 = (fma(_2212, _3775.z, fma(_2211, _3775.y, _3775.x * _2210)) + _3775.w) / _3836;
                                float _3896 = (fma(_2212, _3790.z, fma(_2211, _3790.y, _3790.x * _2210)) + _3790.w) / _3836;
                                float _3900 = 1.0 - dot(vec2(_3895, _3896), vec2(_3895, _3896));
                                float _5097 = isnan(0.0) ? _3900 : (isnan(_3900) ? 0.0 : max(_3900, 0.0));
                                float _3901 = isnan(1.0) ? _5097 : (isnan(_5097) ? 1.0 : min(_5097, 1.0));
                                float _3902 = _3901 * (((isnan(0.0) ? _3888 : (isnan(_3888) ? 0.0 : max(_3888, 0.0))) * _3878) / ((_3891 * 0.699999988079071044921875) + 1.0));
                                float _3914 = exp2(log2(1.0 / ((_3891 * 3.5) + 5.0)) * 0.25);
                                float _3915 = 1.0 - _1158;
                                float _3922 = sqrt(1.0 - ((1.0 - (_3915 * _3915)) * (1.0 - (_3914 * _3914))));
                                float _3923 = _3922 * _3922;
                                float _3924 = _3923 * _3923;
                                float _3925 = _3871 - _3375;
                                float _3926 = _3872 - _3376;
                                float _3927 = _3873 - _3377;
                                float _3931 = inversesqrt(dot(vec3(_3925, _3926, _3927), vec3(_3925, _3926, _3927)));
                                float _3935 = dot(vec3(_1099, _1102, _1105), vec3((-0.0) - _3375, (-0.0) - _3376, (-0.0) - _3377));
                                float _5108 = isnan(0.0) ? _3935 : (isnan(_3935) ? 0.0 : max(_3935, 0.0));
                                float _3938 = isnan(1.0) ? _5108 : (isnan(_5108) ? 1.0 : min(_5108, 1.0));
                                float _3939 = dot(vec3(_1099, _1102, _1105), vec3(_3931 * _3925, _3931 * _3926, _3931 * _3927));
                                float _5119 = isnan(0.0) ? _3939 : (isnan(_3939) ? 0.0 : max(_3939, 0.0));
                                float _3942 = isnan(1.0) ? _5119 : (isnan(_5119) ? 1.0 : min(_5119, 1.0));
                                float _3946 = ((_3942 * _3942) * (_3924 + (-1.0))) + 1.0;
                                float _3947 = _3884 * _3923;
                                float _3948 = _3947 * _3947;
                                float _3954 = ((1.0 - _3948) * dot(vec3(_1099, _1102, _1105), vec3(_3871, _3872, _3873))) + _3948;
                                float _5130 = isnan(0.0) ? _3954 : (isnan(_3954) ? 0.0 : max(_3954, 0.0));
                                float _3955 = isnan(1.0) ? _5130 : (isnan(_5130) ? 1.0 : min(_5130, 1.0));
                                float _3956 = 1.0 - _3923;
                                float _3966 = (0.5 / (((_3955 * ((_3938 * _3956) + _3923)) + 9.9999999392252902907785028219223e-09) + (((_3955 * _3956) + _3923) * _3938))) * _3955;
                                float _5141 = isnan(0.0) ? _3966 : (isnan(_3966) ? 0.0 : max(_3966, 0.0));
                                float _3976 = (_3901 * _3878) * (((_3924 * 3.1415927410125732421875) * (isnan(1.0) ? _5141 : (isnan(_5141) ? 1.0 : min(_5141, 1.0)))) / ((_3946 * _3946) * ((_3891 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_80_pred = _3976 * _3760.z;
                                frontier_phi_80_pred_1 = _3976 * _3760.y;
                                frontier_phi_80_pred_2 = _3976 * _3760.x;
                                frontier_phi_80_pred_3 = _3902 * _3748.z;
                                frontier_phi_80_pred_4 = _3902 * _3748.y;
                                frontier_phi_80_pred_5 = _3902 * _3748.x;
                            }
                            else
                            {
                                frontier_phi_80_pred = 0.0;
                                frontier_phi_80_pred_1 = 0.0;
                                frontier_phi_80_pred_2 = 0.0;
                                frontier_phi_80_pred_3 = 0.0;
                                frontier_phi_80_pred_4 = 0.0;
                                frontier_phi_80_pred_5 = 0.0;
                            }
                            _3982 = frontier_phi_80_pred;
                            _3981 = frontier_phi_80_pred_1;
                            _3980 = frontier_phi_80_pred_2;
                            _3985 = frontier_phi_80_pred_3;
                            _3984 = frontier_phi_80_pred_4;
                            _3983 = frontier_phi_80_pred_5;
                            _3690 = _3983 + _3703;
                            _3691 = _3984 + _3704;
                            _3692 = _3985 + _3705;
                            _3687 = _3980 + _3700;
                            _3688 = _3981 + _3701;
                            _3689 = _3982 + _3702;
                            if (_3707 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3700 = _3687;
                                _3701 = _3688;
                                _3702 = _3689;
                                _3703 = _3690;
                                _3704 = _3691;
                                _3705 = _3692;
                                _3706 = _3707;
                                continue;
                            }
                        }
                        frontier_phi_74_pred = _3689;
                        frontier_phi_74_pred_1 = _3688;
                        frontier_phi_74_pred_2 = _3687;
                        frontier_phi_74_pred_3 = _3692;
                        frontier_phi_74_pred_4 = _3691;
                        frontier_phi_74_pred_5 = _3690;
                    }
                    _3354 = frontier_phi_74_pred;
                    _3352 = frontier_phi_74_pred_1;
                    _3350 = frontier_phi_74_pred_2;
                    _3360 = frontier_phi_74_pred_3;
                    _3358 = frontier_phi_74_pred_4;
                    _3356 = frontier_phi_74_pred_5;
                    uint _3495 = _3494 + 1u;
                    if (_3495 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3488 = _3350;
                        _3489 = _3352;
                        _3490 = _3354;
                        _3491 = _3356;
                        _3492 = _3358;
                        _3493 = _3360;
                        _3494 = _3495;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _3358;
                frontier_phi_62_63_ladder_1 = _3356;
                frontier_phi_62_63_ladder_2 = _3354;
                frontier_phi_62_63_ladder_3 = _3360;
                frontier_phi_62_63_ladder_4 = _3352;
                frontier_phi_62_63_ladder_5 = _3350;
            }
            else
            {
                frontier_phi_62_63_ladder = _3245;
                frontier_phi_62_63_ladder_1 = _3243;
                frontier_phi_62_63_ladder_2 = _3241;
                frontier_phi_62_63_ladder_3 = _3247;
                frontier_phi_62_63_ladder_4 = _3239;
                frontier_phi_62_63_ladder_5 = _3237;
            }
            _3349 = frontier_phi_62_63_ladder_5;
            _3351 = frontier_phi_62_63_ladder_4;
            _3353 = frontier_phi_62_63_ladder_2;
            _3355 = frontier_phi_62_63_ladder_1;
            _3357 = frontier_phi_62_63_ladder;
            _3359 = frontier_phi_62_63_ladder_3;
        }
        float _3364 = isnan(1.0) ? _1142 : (isnan(_1142) ? 1.0 : min(_1142, 1.0));
        _3143 = (_3364 * _3355) + _2675;
        _3145 = (_3364 * _3357) + _2677;
        _3147 = (_3364 * _3359) + _2679;
        _3149 = ((_3349 * 0.039999999105930328369140625) * _3364) + _2998;
        _3151 = ((_3351 * 0.039999999105930328369140625) * _3364) + _3000;
        _3153 = ((_3353 * 0.039999999105930328369140625) * _3364) + _3002;
    }
    else
    {
        _3143 = _2675;
        _3145 = _2677;
        _3147 = _2679;
        _3149 = _2998;
        _3151 = _3000;
        _3153 = _3002;
    }
    uint _3159 = _1118 + uint(cbMatDynParam._m0[0u].w);
    float _5157 = isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0));
    float _5168 = isnan(0.0) ? _1129 : (isnan(_1129) ? 0.0 : max(_1129, 0.0));
    float _5179 = isnan(0.0) ? _1130 : (isnan(_1130) ? 0.0 : max(_1130, 0.0));
    float _5190 = isnan(0.0) ? _1029 : (isnan(_1029) ? 0.0 : max(_1029, 0.0));
    float _3191 = (((isnan(1.0) ? _5157 : (isnan(_5157) ? 1.0 : min(_5157, 1.0))) * (_3143 + ((isnan(0.0) ? _1867 : (isnan(_1867) ? 0.0 : max(_1867, 0.0))) * _1142))) + ((_3149 + ((isnan(0.0) ? _2157 : (isnan(_2157) ? 0.0 : max(_2157, 0.0))) * _1946)) * cbPerFrame._m0[3u].x)) + (((cbMtdParam._m0[17u].w * _741) * _1012) * cbInstanceData._m0[_3159].x);
    float _3193 = ((((cbMtdParam._m0[17u].w * _742) * _1012) * cbInstanceData._m0[_3159].y) + ((_3151 + ((isnan(0.0) ? _2160 : (isnan(_2160) ? 0.0 : max(_2160, 0.0))) * _1946)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5168 : (isnan(_5168) ? 1.0 : min(_5168, 1.0))) * (_3145 + ((isnan(0.0) ? _1870 : (isnan(_1870) ? 0.0 : max(_1870, 0.0))) * _1142)));
    float _3195 = ((((cbMtdParam._m0[17u].w * _743) * _1012) * cbInstanceData._m0[_3159].z) + ((_3153 + ((isnan(0.0) ? _2163 : (isnan(_2163) ? 0.0 : max(_2163, 0.0))) * _1946)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5179 : (isnan(_5179) ? 1.0 : min(_5179, 1.0))) * (_3147 + ((isnan(0.0) ? _1873 : (isnan(_1873) ? 0.0 : max(_1873, 0.0))) * _1142)));
    float _3203 = cbInstanceData._m0[_948 + 6u].w * (isnan(1.0) ? _5190 : (isnan(_5190) ? 1.0 : min(_5190, 1.0)));
    float _3208 = _1080 / cbSceneParam._m0[86u].x;
    float _3209 = _1081 / cbSceneParam._m0[86u].y;
    vec4 _3223 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3208, _3209, (log2((isnan(cbSceneParam._m0[77u].w) ? _1046 : (isnan(_1046) ? cbSceneParam._m0[77u].w : min(_1046, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3225 = _3223.x;
    float _3226 = _3223.y;
    float _3227 = _3223.z;
    float _3228 = _3223.w;
    float _3299;
    float _3301;
    float _3303;
    float _3305;
    if (_1046 > cbSceneParam._m0[78u].w)
    {
        float _3262 = isnan(_1046) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1046 : min(cbSceneParam._m0[80u].w, _1046));
        float _3263 = _3262 / _1046;
        float _3274 = _3263 * _1065;
        float _3275 = _1066 * _3263;
        float _3276 = (-0.0) - _3275;
        float _3277 = _3263 * _1067;
        float _3279 = (cbSceneParam._m0[77u].w * _3276) / _3262;
        float _3280 = _3279 + cbSceneParam._m0[79u].w;
        float _3281 = cbSceneParam._m0[79u].w - _3275;
        float _3287 = sqrt(((_3274 * _3274) + (_3275 * _3275)) + (_3277 * _3277));
        float _3290 = (1.0 - (cbSceneParam._m0[77u].w / _3262)) * _3287;
        float _3295 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3297 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3450;
        if (abs((_3276 - _3279) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3450 = ((((_3280 > 0.0) ? exp2(_3295 * _3280) : (2.0 - exp2(_3297 * _3280))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3290;
        }
        else
        {
            float _3410 = 1.0 / cbSceneParam._m0[80u].x;
            float _3411 = isnan(_3281) ? _3280 : (isnan(_3280) ? _3281 : max(_3280, _3281));
            float _3412 = isnan(_3281) ? _3280 : (isnan(_3280) ? _3281 : min(_3280, _3281));
            float _3421 = isnan(0.0) ? _3411 : (isnan(_3411) ? 0.0 : min(_3411, 0.0));
            float _3422 = isnan(0.0) ? _3412 : (isnan(_3412) ? 0.0 : min(_3412, 0.0));
            _3450 = ((abs(_3287 / _3276) * cbSceneParam._m0[80u].y) * ((((_3421 - _3422) * 2.0) - ((exp2(_3295 * (isnan(0.0) ? _3411 : (isnan(_3411) ? 0.0 : max(_3411, 0.0)))) - exp2(_3295 * (isnan(0.0) ? _3412 : (isnan(_3412) ? 0.0 : max(_3412, 0.0))))) * _3410)) - ((exp2(_3297 * _3421) - exp2(_3297 * _3422)) * _3410))) + (_3290 * cbSceneParam._m0[80u].z);
        }
        vec4 _3452 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3208, _3209, 1.0), 0.0);
        float _3461 = exp2((_3450 * (-1.44269502162933349609375)) * (1.0 - _3452.w));
        float _3462 = log2(_3461);
        float _3478 = log2(_3228);
        _3299 = (exp2(_3478 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3462 * cbSceneParam._m0[78u].x)) * _3452.x) / cbSceneParam._m0[78u].x)) + _3225;
        _3301 = (exp2(_3478 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3462 * cbSceneParam._m0[78u].y)) * _3452.y) / cbSceneParam._m0[78u].y)) + _3226;
        _3303 = (exp2(_3478 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3462 * cbSceneParam._m0[78u].z)) * _3452.z) / cbSceneParam._m0[78u].z)) + _3227;
        _3305 = _3461 * _3228;
    }
    else
    {
        _3299 = _3225;
        _3301 = _3226;
        _3303 = _3227;
        _3305 = _3228;
    }
    float _3317 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3318 = _3317 == 3.0;
    float _3319 = log2(_3305);
    float _3326 = exp2(_3319 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _3191 : (isnan(_3191) ? 0.0 : max(_3191, 0.0)));
    float _3327 = exp2(_3319 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _3193 : (isnan(_3193) ? 0.0 : max(_3193, 0.0)));
    float _3328 = exp2(_3319 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _3195 : (isnan(_3195) ? 0.0 : max(_3195, 0.0)));
    float _3337 = (_3317 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3337 * (_3318 ? _3326 : (_3326 + (cbSceneParam._m0[72u].w * _3299)));
    SV_Target.y = _3337 * (_3318 ? _3327 : (_3327 + (cbSceneParam._m0[72u].w * _3301)));
    SV_Target.z = _3337 * (_3318 ? _3328 : (_3328 + (cbSceneParam._m0[72u].w * _3303)));
    SV_Target.w = _3203;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3203;
}


