#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 0) uniform texture2D M_CoralBurst_01_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1_1;
layout(location = 5) out float TEXCOORD_5;
layout(location = 6) out vec4 TEXCOORD_6;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1_1.x = 0.0;
    TEXCOORD_1_1.y = 0.0;
    TEXCOORD_1_1.z = 0.0;
    TEXCOORD_1_1.w = 0.0;
    TEXCOORD_5 = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_6.z = 0.0;
    TEXCOORD_6.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _192 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _194 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _195 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _196 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _201 = _192 * cbTexScroll._m0[0u].x;
    precise float _202 = _194 * cbTexScroll._m0[0u].y;
    precise float _205 = _201 + cbTexScroll._m0[0u].z;
    precise float _206 = _202 + cbTexScroll._m0[0u].w;
    precise float _220 = float(NORMAL.x) + (-127.0);
    precise float _222 = float(NORMAL.y) + (-127.0);
    precise float _223 = float(NORMAL.z) + (-127.0);
    precise float _224 = _220 * 0.0078740157186985015869140625;
    precise float _226 = _222 * 0.0078740157186985015869140625;
    precise float _227 = _223 * 0.0078740157186985015869140625;
    float _236 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _237 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _238 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _248 = cbPerFrame._m0[22u].x * cbMtdParam._m0[18u].x;
    precise float _254 = _248 * cbMtdParam._m0[18u].w;
    precise float _255 = _248 * cbMtdParam._m0[19u].x;
    precise float _259 = _205 + fract(_254);
    precise float _260 = _206 + fract(_255);
    precise float _267 = _259 * cbTextureTilingScale._m0[0u].x;
    precise float _268 = _260 * cbTextureTilingScale._m0[0u].y;
    precise float _269 = cbTextureTilingScale._m0[0u].z + _267;
    precise float _270 = cbTextureTilingScale._m0[0u].w + _268;
    precise float _281 = textureLod(sampler2D(M_CoralBurst_01_snp_0_Texture2D_0, SS_DiffuseMap), vec2(_269, _270), 0.0).x * cbMtdParam._m0[17u].y;
    precise float _290 = _224 * cbMtdParam._m0[21u].w;
    precise float _291 = _226 * cbMtdParam._m0[22u].x;
    precise float _292 = _227 * cbMtdParam._m0[22u].y;
    precise float _293 = _281 * _290;
    precise float _294 = _281 * _291;
    precise float _295 = _281 * _292;
    precise float _296 = _290 + _293;
    precise float _297 = _291 + _294;
    precise float _298 = _292 + _295;
    precise float _299 = _290 * 0.0;
    precise float _300 = _291 * 0.0;
    precise float _301 = _292 * 0.0;
    precise float _302 = _299 + _296;
    precise float _303 = _300 + _297;
    precise float _304 = _301 + _298;
    precise float _305 = POSITION.x + _302;
    precise float _306 = POSITION.y + _303;
    precise float _307 = POSITION.z + _304;
    uint _312 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _314 = texelFetch(g_InstanceIndexBuffer, int(_312));
    uint _315 = _314.x;
    precise float _316 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _320 = isnan(_316) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _316 : max(0.001000000047497451305389404296875, _316));
    precise float _322 = BLENDWEIGHT.x / _320;
    precise float _323 = BLENDWEIGHT.y / _320;
    precise float _324 = BLENDWEIGHT.z / _320;
    precise float _325 = BLENDWEIGHT.w / _320;
    uint _327 = _315 * 13u;
    uvec4 _332 = floatBitsToUint(cbInstanceData._m0[_327 + 4u]);
    uint _333 = _332.x;
    uint _335 = (_333 + uint(float(BLENDINDICES.x))) * 3u;
    uint _342 = _335 + 1u;
    uint _349 = _335 + 2u;
    precise float _356 = _322 * cbObjMatrix._m0[_335].x;
    precise float _357 = _322 * cbObjMatrix._m0[_342].x;
    precise float _358 = _322 * cbObjMatrix._m0[_349].x;
    precise float _359 = _322 * cbObjMatrix._m0[_335].y;
    precise float _360 = _322 * cbObjMatrix._m0[_342].y;
    precise float _361 = _322 * cbObjMatrix._m0[_349].y;
    precise float _362 = _322 * cbObjMatrix._m0[_335].z;
    precise float _363 = _322 * cbObjMatrix._m0[_342].z;
    precise float _364 = _322 * cbObjMatrix._m0[_349].z;
    precise float _365 = _322 * cbObjMatrix._m0[_335].w;
    precise float _366 = _322 * cbObjMatrix._m0[_342].w;
    precise float _367 = _322 * cbObjMatrix._m0[_349].w;
    uint _370 = (_333 + uint(float(BLENDINDICES.y))) * 3u;
    uint _377 = _370 + 1u;
    uint _384 = _370 + 2u;
    precise float _391 = _323 * cbObjMatrix._m0[_370].x;
    precise float _392 = _323 * cbObjMatrix._m0[_377].x;
    precise float _393 = _323 * cbObjMatrix._m0[_384].x;
    precise float _394 = _323 * cbObjMatrix._m0[_370].y;
    precise float _395 = _323 * cbObjMatrix._m0[_377].y;
    precise float _396 = _323 * cbObjMatrix._m0[_384].y;
    precise float _397 = _323 * cbObjMatrix._m0[_370].z;
    precise float _398 = _323 * cbObjMatrix._m0[_377].z;
    precise float _399 = _323 * cbObjMatrix._m0[_384].z;
    precise float _400 = _323 * cbObjMatrix._m0[_370].w;
    precise float _401 = _323 * cbObjMatrix._m0[_377].w;
    precise float _402 = _323 * cbObjMatrix._m0[_384].w;
    precise float _403 = _356 + _391;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    precise float _413 = _366 + _401;
    precise float _414 = _367 + _402;
    uint _417 = (_333 + uint(float(BLENDINDICES.z))) * 3u;
    uint _424 = _417 + 1u;
    uint _431 = _417 + 2u;
    precise float _438 = _324 * cbObjMatrix._m0[_417].x;
    precise float _439 = _324 * cbObjMatrix._m0[_424].x;
    precise float _440 = _324 * cbObjMatrix._m0[_431].x;
    precise float _441 = _324 * cbObjMatrix._m0[_417].y;
    precise float _442 = _324 * cbObjMatrix._m0[_424].y;
    precise float _443 = _324 * cbObjMatrix._m0[_431].y;
    precise float _444 = _324 * cbObjMatrix._m0[_417].z;
    precise float _445 = _324 * cbObjMatrix._m0[_424].z;
    precise float _446 = _324 * cbObjMatrix._m0[_431].z;
    precise float _447 = _324 * cbObjMatrix._m0[_417].w;
    precise float _448 = _324 * cbObjMatrix._m0[_424].w;
    precise float _449 = _324 * cbObjMatrix._m0[_431].w;
    precise float _450 = _403 + _438;
    precise float _451 = _404 + _439;
    precise float _452 = _405 + _440;
    precise float _453 = _406 + _441;
    precise float _454 = _407 + _442;
    precise float _455 = _408 + _443;
    precise float _456 = _409 + _444;
    precise float _457 = _410 + _445;
    precise float _458 = _411 + _446;
    precise float _459 = _412 + _447;
    precise float _460 = _413 + _448;
    precise float _461 = _414 + _449;
    uint _464 = (_333 + uint(float(BLENDINDICES.w))) * 3u;
    uint _471 = _464 + 1u;
    uint _478 = _464 + 2u;
    precise float _485 = _325 * cbObjMatrix._m0[_464].x;
    precise float _486 = _325 * cbObjMatrix._m0[_471].x;
    precise float _487 = _325 * cbObjMatrix._m0[_478].x;
    precise float _488 = _325 * cbObjMatrix._m0[_464].y;
    precise float _489 = _325 * cbObjMatrix._m0[_471].y;
    precise float _490 = _325 * cbObjMatrix._m0[_478].y;
    precise float _491 = _325 * cbObjMatrix._m0[_464].z;
    precise float _492 = _325 * cbObjMatrix._m0[_471].z;
    precise float _493 = _325 * cbObjMatrix._m0[_478].z;
    precise float _494 = _325 * cbObjMatrix._m0[_464].w;
    precise float _495 = _325 * cbObjMatrix._m0[_471].w;
    precise float _496 = _325 * cbObjMatrix._m0[_478].w;
    precise float _497 = _450 + _485;
    precise float _498 = _451 + _486;
    precise float _499 = _452 + _487;
    precise float _500 = _453 + _488;
    precise float _501 = _454 + _489;
    precise float _502 = _455 + _490;
    precise float _503 = _456 + _491;
    precise float _504 = _457 + _492;
    precise float _505 = _458 + _493;
    precise float _506 = _459 + _494;
    precise float _507 = _460 + _495;
    precise float _508 = _461 + _496;
    precise float _509 = _305 * _497;
    precise float _510 = _306 * _500;
    precise float _511 = _510 + _509;
    precise float _512 = _307 * _503;
    precise float _513 = _512 + _511;
    precise float _514 = 1.0 * _506;
    precise float _515 = _514 + _513;
    precise float _516 = _305 * _498;
    precise float _517 = _306 * _501;
    precise float _518 = _517 + _516;
    precise float _519 = _307 * _504;
    precise float _520 = _519 + _518;
    precise float _521 = 1.0 * _507;
    precise float _522 = _521 + _520;
    precise float _523 = _305 * _499;
    precise float _524 = _306 * _502;
    precise float _525 = _524 + _523;
    precise float _526 = _307 * _505;
    precise float _527 = _526 + _525;
    precise float _528 = 1.0 * _508;
    precise float _529 = _528 + _527;
    precise float _549 = _515 + 0.0;
    precise float _550 = _522 + 0.0;
    precise float _551 = _529 + 0.0;
    precise float _557 = _549 - cbSceneParam._m0[3u].x;
    precise float _558 = _550 - cbSceneParam._m0[3u].y;
    precise float _559 = _551 - cbSceneParam._m0[3u].z;
    precise float _586 = _557 * cbSceneParam._m0[24u].x;
    precise float _587 = _558 * cbSceneParam._m0[24u].y;
    precise float _588 = _587 + _586;
    precise float _589 = _559 * cbSceneParam._m0[24u].z;
    precise float _590 = _589 + _588;
    precise float _591 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _592 = _591 + _590;
    precise float _593 = _557 * cbSceneParam._m0[25u].x;
    precise float _594 = _558 * cbSceneParam._m0[25u].y;
    precise float _595 = _594 + _593;
    precise float _596 = _559 * cbSceneParam._m0[25u].z;
    precise float _597 = _596 + _595;
    precise float _598 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _599 = _598 + _597;
    precise float _600 = _557 * cbSceneParam._m0[26u].x;
    precise float _601 = _558 * cbSceneParam._m0[26u].y;
    precise float _602 = _601 + _600;
    precise float _603 = _559 * cbSceneParam._m0[26u].z;
    precise float _604 = _603 + _602;
    precise float _605 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _606 = _605 + _604;
    precise float _607 = _557 * cbSceneParam._m0[27u].x;
    precise float _608 = _558 * cbSceneParam._m0[27u].y;
    precise float _609 = _608 + _607;
    precise float _610 = _559 * cbSceneParam._m0[27u].z;
    precise float _611 = _610 + _609;
    precise float _612 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _613 = _612 + _611;
    gl_Position.x = _592;
    gl_Position.y = _599;
    gl_Position.z = _606;
    gl_Position.w = _613;
    POSITION_1.x = _592;
    POSITION_1.y = _599;
    POSITION_1.z = _606;
    POSITION_1.w = _613;
    NORMAL_1.x = fma(_227, _503, fma(_226, _500, _497 * _224));
    NORMAL_1.y = fma(_227, _504, fma(_226, _501, _498 * _224));
    NORMAL_1.z = fma(_227, _505, fma(_226, _502, _499 * _224));
    NORMAL_1.w = float(_315);
    TANGENT_1.x = fma(_238, _503, fma(_237, _500, _497 * _236));
    TANGENT_1.y = fma(_238, _504, fma(_237, _501, _498 * _236));
    TANGENT_1.z = fma(_238, _505, fma(_237, _502, _499 * _236));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1_1.x = _205;
    TEXCOORD_1_1.y = _206;
    TEXCOORD_1_1.z = (cbTexScroll._m0[1u].x * _195) + cbTexScroll._m0[1u].z;
    TEXCOORD_1_1.w = (cbTexScroll._m0[1u].y * _196) + cbTexScroll._m0[1u].w;
    TEXCOORD_5 = COLOR_1.x;
    TEXCOORD_6.x = TEXCOORD_1.x;
    TEXCOORD_6.y = TEXCOORD_1.y;
    TEXCOORD_6.z = TEXCOORD_1.z;
    TEXCOORD_6.w = COLOR_1.w;
    gl_ClipDistance[0u] = dot(vec4(_592, _599, _606, _613), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_592, _599, _606, _613), vec4(cbInstanceData._m0[_327 + 3u]));
}


