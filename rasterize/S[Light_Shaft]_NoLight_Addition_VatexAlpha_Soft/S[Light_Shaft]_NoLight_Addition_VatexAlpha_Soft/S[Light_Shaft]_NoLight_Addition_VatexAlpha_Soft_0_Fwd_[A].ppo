#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D S_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D S_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D S_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _817;
float _818;
float _819;
float _820;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _136 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _137 = _136 * NORMAL.x;
    float _138 = _136 * NORMAL.y;
    float _139 = _136 * NORMAL.z;
    float _144;
    float _145;
    float _146;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _144 = (-0.0) - _137;
        _145 = (-0.0) - _138;
        _146 = (-0.0) - _139;
    }
    else
    {
        _144 = _137;
        _145 = _138;
        _146 = _139;
    }
    float _190 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _200 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _190);
    float _201 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _190);
    float _202 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _190);
    vec4 _215 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _218 = _215.x;
    bool _225 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _241 = ((_225 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _218)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _218))) - POSITION_1.w) / cbMtdParam._m0[11u].x;
    float _829 = isnan(0.0) ? _241 : (isnan(_241) ? 0.0 : max(_241, 0.0));
    float _277 = inversesqrt(dot(vec3(_200, _201, _202), vec3(_200, _201, _202)));
    float _281 = dot(vec4(_277 * _200, _277 * _201, _277 * _202, 0.0), vec4(_144, _145, _146, 0.0));
    float _284 = _281 * _281;
    float _286 = (_284 * _284) * cbMtdParam._m0[11u].y;
    float _840 = isnan(0.0) ? _286 : (isnan(_286) ? 0.0 : max(_286, 0.0));
    vec4 _305 = texture(sampler2D(S_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((cbMtdParam._m0[11u].w * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[12u].x * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _325 = ((((((isnan(1.0) ? _829 : (isnan(_829) ? 1.0 : min(_829, 1.0))) * TEXCOORD_1.z) * texture(sampler2D(S_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((cbMtdParam._m0[12u].w * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((cbMtdParam._m0[13u].x * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w)).x) * cbMtdParam._m0[11u].z) * (isnan(1.0) ? _840 : (isnan(_840) ? 1.0 : min(_840, 1.0)))) * _305.w) * cbMtdParam._m0[9u].w;
    vec4 _343 = texture(sampler2D(S_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((cbMtdParam._m0[12u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[12u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _851 = isnan(0.0) ? _325 : (isnan(_325) ? 0.0 : max(_325, 0.0));
    float _364 = _225 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _404 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _413 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _404);
    float _414 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _404);
    float _415 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _404);
    vec4 _420 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _422 = _420.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _508 = sqrt(((_413 * _413) + (_414 * _414)) + (_415 * _415));
        float _515 = (cbMatDynParam._m0[5u].x * _508) + cbMatDynParam._m0[5u].y;
        float _862 = isnan(0.0) ? _515 : (isnan(_515) ? 0.0 : max(_515, 0.0));
        float _516 = isnan(1.0) ? _862 : (isnan(_862) ? 1.0 : min(_862, 1.0));
        float _520 = (cbMatDynParam._m0[5u].z * _508) + cbMatDynParam._m0[5u].w;
        float _873 = isnan(0.0) ? _520 : (isnan(_520) ? 0.0 : max(_520, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _873 : (isnan(_873) ? 1.0 : min(_873, 1.0))) - _516)) + _516) < ((_422 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _433 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _434 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _439 = uint(roundEven(NORMAL.w)) * 13u;
    uint _440 = _439 + 9u;
    uint _441 = _440 + uint(cbMatDynParam._m0[0u].w);
    float _447 = cbInstanceData._m0[_441].x * ((cbMtdParam._m0[10u].x * _343.x) + (cbMtdParam._m0[9u].x * _305.x));
    float _448 = cbInstanceData._m0[_441].y * ((cbMtdParam._m0[10u].y * _343.y) + (cbMtdParam._m0[9u].y * _305.y));
    float _449 = cbInstanceData._m0[_441].z * ((cbMtdParam._m0[10u].z * _343.z) + (cbMtdParam._m0[9u].z * _305.z));
    float _450 = isnan(0.0) ? _447 : (isnan(_447) ? 0.0 : max(_447, 0.0));
    float _451 = isnan(0.0) ? _448 : (isnan(_448) ? 0.0 : max(_448, 0.0));
    float _452 = isnan(0.0) ? _449 : (isnan(_449) ? 0.0 : max(_449, 0.0));
    float _458 = cbMtdParam._m0[2u].x * _447;
    float _459 = cbMtdParam._m0[2u].y * _448;
    float _460 = cbMtdParam._m0[2u].z * _449;
    float _899 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _462 = isnan(1.0) ? _899 : (isnan(_899) ? 1.0 : min(_899, 1.0));
    float _467 = cbInstanceData._m0[_439 + 6u].w * (isnan(1.0) ? _851 : (isnan(_851) ? 1.0 : min(_851, 1.0)));
    float _473 = _433 / cbSceneParam._m0[86u].x;
    float _474 = _434 / cbSceneParam._m0[86u].y;
    vec4 _489 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_473, _474, (log2((isnan(cbSceneParam._m0[77u].w) ? _364 : (isnan(_364) ? cbSceneParam._m0[77u].w : min(_364, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _491 = _489.x;
    float _492 = _489.y;
    float _493 = _489.z;
    float _494 = _489.w;
    float _575;
    float _577;
    float _579;
    float _581;
    if (_364 > cbSceneParam._m0[78u].w)
    {
        float _537 = isnan(_364) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _364 : min(cbSceneParam._m0[80u].w, _364));
        float _538 = _537 / _364;
        float _549 = _538 * _413;
        float _550 = _414 * _538;
        float _551 = (-0.0) - _550;
        float _552 = _538 * _415;
        float _554 = (cbSceneParam._m0[77u].w * _551) / _537;
        float _555 = _554 + cbSceneParam._m0[79u].w;
        float _556 = cbSceneParam._m0[79u].w - _550;
        float _562 = sqrt(((_549 * _549) + (_550 * _550)) + (_552 * _552));
        float _565 = (1.0 - (cbSceneParam._m0[77u].w / _537)) * _562;
        float _571 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _573 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _743;
        if (abs((_551 - _554) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _743 = ((((_555 > 0.0) ? exp2(_571 * _555) : (2.0 - exp2(_573 * _555))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _565;
        }
        else
        {
            float _698 = 1.0 / cbSceneParam._m0[80u].x;
            float _699 = isnan(_556) ? _555 : (isnan(_555) ? _556 : max(_555, _556));
            float _700 = isnan(_556) ? _555 : (isnan(_555) ? _556 : min(_555, _556));
            float _709 = isnan(0.0) ? _699 : (isnan(_699) ? 0.0 : min(_699, 0.0));
            float _710 = isnan(0.0) ? _700 : (isnan(_700) ? 0.0 : min(_700, 0.0));
            _743 = ((abs(_562 / _551) * cbSceneParam._m0[80u].y) * ((((_709 - _710) * 2.0) - ((exp2(_571 * (isnan(0.0) ? _699 : (isnan(_699) ? 0.0 : max(_699, 0.0)))) - exp2(_571 * (isnan(0.0) ? _700 : (isnan(_700) ? 0.0 : max(_700, 0.0))))) * _698)) - ((exp2(_573 * _709) - exp2(_573 * _710)) * _698))) + (_565 * cbSceneParam._m0[80u].z);
        }
        vec4 _745 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_473, _474, 1.0), 0.0);
        float _754 = exp2((_743 * (-1.44269502162933349609375)) * (1.0 - _745.w));
        float _755 = log2(_754);
        float _771 = log2(_494);
        _575 = (exp2(_771 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_755 * cbSceneParam._m0[78u].x)) * _745.x) / cbSceneParam._m0[78u].x)) + _491;
        _577 = (exp2(_771 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_755 * cbSceneParam._m0[78u].y)) * _745.y) / cbSceneParam._m0[78u].y)) + _492;
        _579 = (exp2(_771 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_755 * cbSceneParam._m0[78u].z)) * _745.z) / cbSceneParam._m0[78u].z)) + _493;
        _581 = _754 * _494;
    }
    else
    {
        _575 = _491;
        _577 = _492;
        _579 = _493;
        _581 = _494;
    }
    bool _781;
    float _639;
    vec4 _643;
    float _645;
    vec4 _647;
    float _656;
    float _657;
    float _658;
    float _662;
    float _666;
    float _670;
    float _671;
    bool _682;
    for (;;)
    {
        bool _594 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _596 = log2(_581);
        float _600 = exp2(_596 * cbSceneParam._m0[78u].x);
        float _601 = exp2(_596 * cbSceneParam._m0[78u].y);
        float _602 = exp2(_596 * cbSceneParam._m0[78u].z);
        float _603 = _600 * _450;
        float _604 = _601 * _451;
        float _605 = _602 * _452;
        vec4 _613 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_433, _434));
        float _615 = _613.x;
        float _636 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _615)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _615))) - _364) * 0.100000001490116119384765625;
        float _950 = isnan(0.0) ? _636 : (isnan(_636) ? 0.0 : max(_636, 0.0));
        float _638 = isnan(1.0) ? _950 : (isnan(_950) ? 1.0 : min(_950, 1.0));
        _639 = _467 * _638;
        float _640 = _422 + (-0.5);
        _643 = cbMtdParam._m0[1u];
        _645 = _643.y * _640;
        _647 = cbMatDynParam._m0[0u];
        float _655 = (roundEven(_647.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _656 = _655 * (_594 ? _603 : (_603 + (cbSceneParam._m0[72u].w * _575)));
        _657 = _655 * (_594 ? _604 : (_604 + (cbSceneParam._m0[72u].w * _577)));
        _658 = _655 * (_594 ? _605 : (_605 + (cbSceneParam._m0[72u].w * _579)));
        _662 = (((_458 * _462) * _600) * _638) * _655;
        _666 = (((_459 * _462) * _601) * _638) * _655;
        _670 = (((_460 * _462) * _602) * _638) * _655;
        _671 = _640 * 0.999000012874603271484375;
        _682 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_682)
        {
            if ((cbInstanceData._m0[_439 + 7u].x + _671) < 0.5)
            {
                _781 = true;
                break;
            }
        }
        uint _735 = _440 + uint(_647.w);
        if ((cbInstanceData._m0[_735].w < 1.0) && ((cbInstanceData._m0[_735].w + _671) < 0.5))
        {
            _781 = true;
            break;
        }
        if ((_645 + 1.0) < _643.x)
        {
            _781 = true;
            break;
        }
        _781 = false;
        break;
    }
    float _786;
    if (_781)
    {
        discard_state = true;
        _786 = 0.0;
    }
    else
    {
        _786 = _639;
    }
    SV_Target.x = _656;
    SV_Target.y = _657;
    SV_Target.z = _658;
    SV_Target.w = _786;
    SV_Target_1.x = _662;
    SV_Target_1.y = _666;
    SV_Target_1.z = _670;
    SV_Target_1.w = _639;
    discard_exit();
}


