#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[17];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D S_c4260_blade_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D S_c4260_blade_snp_0_Texture2D_3;
layout(set = 0, binding = 2) uniform texture2D S_c4260_blade_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _908;
float _909;
float _910;
float _911;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _137 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _138 = _137 * NORMAL.x;
    float _139 = _137 * NORMAL.y;
    float _140 = _137 * NORMAL.z;
    float _145;
    float _146;
    float _147;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _145 = (-0.0) - _138;
        _146 = (-0.0) - _139;
        _147 = (-0.0) - _140;
    }
    else
    {
        _145 = _138;
        _146 = _139;
        _147 = _140;
    }
    float _193 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _203 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _193);
    float _204 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _193);
    float _205 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _193);
    vec4 _219 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _222 = _219.x;
    bool _229 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _245 = ((_229 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _222)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _222))) - POSITION_1.w) / cbMtdParam._m0[14u].x;
    float _920 = isnan(0.0) ? _245 : (isnan(_245) ? 0.0 : max(_245, 0.0));
    float _248 = 1.0 - (isnan(1.0) ? _920 : (isnan(_920) ? 1.0 : min(_920, 1.0)));
    float _261 = cbMtdParam._m0[12u].y - cbMtdParam._m0[12u].z;
    float _264 = (sqrt(((_203 * _203) + (_204 * _204)) + (_205 * _205)) - cbMtdParam._m0[12u].z) / (isnan(0.00999999977648258209228515625) ? _261 : (isnan(_261) ? 0.00999999977648258209228515625 : max(_261, 0.00999999977648258209228515625)));
    float _936 = isnan(0.0) ? _264 : (isnan(_264) ? 0.0 : max(_264, 0.0));
    float _274 = inversesqrt(dot(vec3(_145, _146, _147), vec3(_145, _146, _147)));
    float _281 = inversesqrt(dot(vec3(_203, _204, _205), vec3(_203, _204, _205)));
    float _288 = dot(vec4(_281 * _203, _281 * _204, _281 * _205, 0.0), vec4(_274 * _145, _274 * _146, _274 * _147, 0.0)) - cbMtdParam._m0[13u].z;
    float _947 = isnan(0.0) ? _288 : (isnan(_288) ? 0.0 : max(_288, 0.0));
    float _297 = ((isnan(1.0) ? _936 : (isnan(_936) ? 1.0 : min(_936, 1.0))) * TEXCOORD_1.z) * exp2(log2(1.0 - (isnan(1.0) ? _947 : (isnan(_947) ? 1.0 : min(_947, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[13u].w : (isnan(cbMtdParam._m0[13u].w) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[13u].w, 0.001000000047497451305389404296875))));
    float _963 = isnan(0.0) ? _248 : (isnan(_248) ? 0.0 : max(_248, 0.0));
    float _298 = isnan(1.0) ? _963 : (isnan(_963) ? 1.0 : min(_963, 1.0));
    float _320 = cbMtdParam._m0[14u].z * cbPerFrame._m0[22u].x;
    uint _323 = uint(roundEven(NORMAL.w)) * 13u;
    uint _327 = _323 + 1u;
    uint _331 = _323 + 2u;
    float _340 = sqrt(((cbInstanceData._m0[_327].x * cbInstanceData._m0[_327].x) + (cbInstanceData._m0[_323].x * cbInstanceData._m0[_323].x)) + (cbInstanceData._m0[_331].x * cbInstanceData._m0[_331].x));
    float _343 = (_340 * TEXCOORD_1.x) + (_320 * cbMtdParam._m0[15u].y);
    float _344 = (_340 * TEXCOORD_1.y) + (_320 * cbMtdParam._m0[15u].z);
    vec4 _367 = texture(sampler2D(S_c4260_blade_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * ((cbMtdParam._m0[15u].w * cbPerFrame._m0[22u].x) + TEXCOORD_1.x)) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * ((cbMtdParam._m0[16u].x * cbPerFrame._m0[22u].x) + TEXCOORD_1.y)) + cbTextureTilingScale._m0[2u].w));
    float _372 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[13u].y;
    float _379 = ((_367.y * 0.5) + (-0.25)) * cbMtdParam._m0[12u].w;
    float _381 = (-0.0) - (cbMtdParam._m0[12u].w * ((_367.x * 0.5) + (-0.25)));
    float _382 = fract(_372);
    float _384 = fract(_372 + 0.5);
    float _385 = _382 * _381;
    float _386 = _379 * _382;
    float _389 = _384 * _381;
    float _390 = _379 * _384;
    float _396 = abs((_382 * 2.0) + (-1.0));
    vec4 _412 = texture(sampler2D(S_c4260_blade_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((_385 + _343) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((_386 + _344) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _414 = _412.x;
    float _415 = _412.y;
    float _416 = _412.z;
    vec4 _417 = texture(sampler2D(S_c4260_blade_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((_389 + _343) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((_390 + _344) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _443 = (cbMtdParam._m0[14u].w * _320) + TEXCOORD_1.x;
    float _444 = (cbMtdParam._m0[15u].x * _320) + TEXCOORD_1.y;
    vec4 _464 = texture(sampler2D(S_c4260_blade_snp_0_Texture2D_2, SS_DiffuseMap), vec2(((_385 + _443) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_386 + _444) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _466 = _464.x;
    float _467 = _464.y;
    float _468 = _464.z;
    vec4 _469 = texture(sampler2D(S_c4260_blade_snp_0_Texture2D_2, SS_DiffuseMap), vec2(((_389 + _443) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_390 + _444) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _486 = ((((_469.x - _466) * _396) + _466) * cbMtdParam._m0[10u].x) + ((((_417.x - _414) * _396) + _414) * cbMtdParam._m0[11u].x);
    float _489 = _486 * (_297 - (((_298 * _298) * _297) * (3.0 - (_298 * 2.0))));
    float _974 = isnan(0.0) ? _489 : (isnan(_489) ? 0.0 : max(_489, 0.0));
    float _497 = _229 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _537 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _546 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _537);
    float _547 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _537);
    float _548 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _537);
    vec4 _553 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _555 = _553.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _640 = sqrt(((_546 * _546) + (_547 * _547)) + (_548 * _548));
        float _647 = (cbMatDynParam._m0[5u].x * _640) + cbMatDynParam._m0[5u].y;
        float _985 = isnan(0.0) ? _647 : (isnan(_647) ? 0.0 : max(_647, 0.0));
        float _648 = isnan(1.0) ? _985 : (isnan(_985) ? 1.0 : min(_985, 1.0));
        float _652 = (cbMatDynParam._m0[5u].z * _640) + cbMatDynParam._m0[5u].w;
        float _996 = isnan(0.0) ? _652 : (isnan(_652) ? 0.0 : max(_652, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _996 : (isnan(_996) ? 1.0 : min(_996, 1.0))) - _648)) + _648) < ((_555 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _572 = _323 + 9u;
    uint _573 = _572 + uint(cbMatDynParam._m0[0u].w);
    float _579 = (_486 * cbMtdParam._m0[14u].y) * cbInstanceData._m0[_573].x;
    float _580 = ((((((_469.y - _467) * _396) + _467) * cbMtdParam._m0[10u].y) + ((((_417.y - _415) * _396) + _415) * cbMtdParam._m0[11u].y)) * cbMtdParam._m0[14u].y) * cbInstanceData._m0[_573].y;
    float _581 = ((((((_469.z - _468) * _396) + _468) * cbMtdParam._m0[10u].z) + ((((_417.z - _416) * _396) + _416) * cbMtdParam._m0[11u].z)) * cbMtdParam._m0[14u].y) * cbInstanceData._m0[_573].z;
    float _582 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
    float _583 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
    float _584 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
    float _590 = cbMtdParam._m0[2u].x * _579;
    float _591 = cbMtdParam._m0[2u].y * _580;
    float _592 = cbMtdParam._m0[2u].z * _581;
    float _1022 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _594 = isnan(1.0) ? _1022 : (isnan(_1022) ? 1.0 : min(_1022, 1.0));
    float _599 = cbInstanceData._m0[_323 + 6u].w * (isnan(1.0) ? _974 : (isnan(_974) ? 1.0 : min(_974, 1.0)));
    float _605 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _606 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _621 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_605, _606, (log2((isnan(cbSceneParam._m0[77u].w) ? _497 : (isnan(_497) ? cbSceneParam._m0[77u].w : min(_497, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _623 = _621.x;
    float _624 = _621.y;
    float _625 = _621.z;
    float _626 = _621.w;
    float _706;
    float _708;
    float _710;
    float _712;
    if (_497 > cbSceneParam._m0[78u].w)
    {
        float _668 = isnan(_497) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _497 : min(cbSceneParam._m0[80u].w, _497));
        float _669 = _668 / _497;
        float _680 = _669 * _546;
        float _681 = _547 * _669;
        float _682 = (-0.0) - _681;
        float _683 = _669 * _548;
        float _685 = (cbSceneParam._m0[77u].w * _682) / _668;
        float _686 = _685 + cbSceneParam._m0[79u].w;
        float _687 = cbSceneParam._m0[79u].w - _681;
        float _693 = sqrt(((_680 * _680) + (_681 * _681)) + (_683 * _683));
        float _696 = (1.0 - (cbSceneParam._m0[77u].w / _668)) * _693;
        float _702 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _704 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _834;
        if (abs((_682 - _685) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _834 = ((((_686 > 0.0) ? exp2(_702 * _686) : (2.0 - exp2(_704 * _686))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _696;
        }
        else
        {
            float _790 = 1.0 / cbSceneParam._m0[80u].x;
            float _791 = isnan(_687) ? _686 : (isnan(_686) ? _687 : max(_686, _687));
            float _792 = isnan(_687) ? _686 : (isnan(_686) ? _687 : min(_686, _687));
            float _801 = isnan(0.0) ? _791 : (isnan(_791) ? 0.0 : min(_791, 0.0));
            float _802 = isnan(0.0) ? _792 : (isnan(_792) ? 0.0 : min(_792, 0.0));
            _834 = ((abs(_693 / _682) * cbSceneParam._m0[80u].y) * ((((_801 - _802) * 2.0) - ((exp2(_702 * (isnan(0.0) ? _791 : (isnan(_791) ? 0.0 : max(_791, 0.0)))) - exp2(_702 * (isnan(0.0) ? _792 : (isnan(_792) ? 0.0 : max(_792, 0.0))))) * _790)) - ((exp2(_704 * _801) - exp2(_704 * _802)) * _790))) + (_696 * cbSceneParam._m0[80u].z);
        }
        vec4 _836 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_605, _606, 1.0), 0.0);
        float _845 = exp2((_834 * (-1.44269502162933349609375)) * (1.0 - _836.w));
        float _846 = log2(_845);
        float _862 = log2(_626);
        _706 = (exp2(_862 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_846 * cbSceneParam._m0[78u].x)) * _836.x) / cbSceneParam._m0[78u].x)) + _623;
        _708 = (exp2(_862 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_846 * cbSceneParam._m0[78u].y)) * _836.y) / cbSceneParam._m0[78u].y)) + _624;
        _710 = (exp2(_862 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_846 * cbSceneParam._m0[78u].z)) * _836.z) / cbSceneParam._m0[78u].z)) + _625;
        _712 = _845 * _626;
    }
    else
    {
        _706 = _623;
        _708 = _624;
        _710 = _625;
        _712 = _626;
    }
    bool _872;
    vec4 _722;
    vec4 _745;
    float _747;
    float _751;
    float _752;
    float _753;
    float _756;
    float _759;
    float _762;
    float _763;
    bool _774;
    for (;;)
    {
        _722 = cbMatDynParam._m0[0u];
        float _724 = roundEven(_722.y);
        bool _725 = _724 == 3.0;
        float _726 = log2(_712);
        float _730 = exp2(_726 * cbSceneParam._m0[78u].x);
        float _731 = exp2(_726 * cbSceneParam._m0[78u].y);
        float _732 = exp2(_726 * cbSceneParam._m0[78u].z);
        float _733 = _730 * _582;
        float _734 = _731 * _583;
        float _735 = _732 * _584;
        float _742 = _555 + (-0.5);
        _745 = cbMtdParam._m0[1u];
        _747 = _745.y * _742;
        float _750 = (_724 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _751 = _750 * (_725 ? _733 : (_733 + (cbSceneParam._m0[72u].w * _706)));
        _752 = _750 * (_725 ? _734 : (_734 + (cbSceneParam._m0[72u].w * _708)));
        _753 = _750 * (_725 ? _735 : (_735 + (cbSceneParam._m0[72u].w * _710)));
        _756 = ((_590 * _594) * _730) * _750;
        _759 = ((_591 * _594) * _731) * _750;
        _762 = ((_592 * _594) * _732) * _750;
        _763 = _742 * 0.999000012874603271484375;
        _774 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_774)
        {
            if ((cbInstanceData._m0[_323 + 7u].x + _763) < 0.5)
            {
                _872 = true;
                break;
            }
        }
        uint _826 = _572 + uint(_722.w);
        if ((cbInstanceData._m0[_826].w < 1.0) && ((cbInstanceData._m0[_826].w + _763) < 0.5))
        {
            _872 = true;
            break;
        }
        if ((_747 + 1.0) < _745.x)
        {
            _872 = true;
            break;
        }
        _872 = false;
        break;
    }
    float _877;
    if (_872)
    {
        discard_state = true;
        _877 = 0.0;
    }
    else
    {
        _877 = _599;
    }
    SV_Target.x = _751;
    SV_Target.y = _752;
    SV_Target.z = _753;
    SV_Target.w = _877;
    SV_Target_1.x = _756;
    SV_Target_1.y = _759;
    SV_Target_1.z = _762;
    SV_Target_1.w = _599;
    discard_exit();
}


