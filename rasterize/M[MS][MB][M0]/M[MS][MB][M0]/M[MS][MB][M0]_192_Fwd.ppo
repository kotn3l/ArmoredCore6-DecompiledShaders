#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 3) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1407;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _232 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _233 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _234 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _240 = inversesqrt(dot(vec3(_232, _233, _234), vec3(_232, _233, _234)));
    float _247 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _254 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _266 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _268 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _269 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3712 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
    float _3723 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    float _3734 = isnan(0.0) ? _269 : (isnan(_269) ? 0.0 : max(_269, 0.0));
    uint _279 = uint(roundEven(NORMAL.w)) * 13u;
    uint _284 = _279 + 1u;
    uint _288 = _279 + 2u;
    float _297 = sqrt(((cbInstanceData._m0[_284].x * cbInstanceData._m0[_284].x) + (cbInstanceData._m0[_279].x * cbInstanceData._m0[_279].x)) + (cbInstanceData._m0[_288].x * cbInstanceData._m0[_288].x));
    float _298 = _297 * TEXCOORD.z;
    float _299 = _297 * TEXCOORD.w;
    vec4 _312 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _298) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _299) + cbTextureTilingScale._m0[13u].w));
    vec4 _336 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _341 = _336.x * cbMtdParam._m0[11u].x;
    float _342 = _336.y * cbMtdParam._m0[11u].y;
    float _343 = _336.z * cbMtdParam._m0[11u].z;
    vec4 _362 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _298) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _299) + cbTextureTilingScale._m0[5u].w));
    vec4 _399 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _401 = _399.x;
    float _411 = dot(vec4(_401, _399.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _428 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_401 - _411) * cbMtdParam._m0[24u].x) + _411) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3745 = isnan(0.0) ? _428 : (isnan(_428) ? 0.0 : max(_428, 0.0));
    float _429 = isnan(1.0) ? _3745 : (isnan(_3745) ? 1.0 : min(_3745, 1.0));
    float _436 = (_429 * ((_362.x * cbMtdParam._m0[12u].x) - _341)) + _341;
    float _437 = (_429 * ((_362.y * cbMtdParam._m0[12u].y) - _342)) + _342;
    float _438 = (_429 * ((_362.z * cbMtdParam._m0[12u].z) - _343)) + _343;
    vec4 _455 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _298) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _299) + cbTextureTilingScale._m0[3u].w));
    vec4 _475 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _477 = _475.x;
    float _487 = dot(vec4(_477, _475.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _501 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.y) * 2.0) - ((((_477 - _487) * cbMtdParam._m0[24u].x) + _487) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3756 = isnan(0.0) ? _501 : (isnan(_501) ? 0.0 : max(_501, 0.0));
    float _502 = isnan(1.0) ? _3756 : (isnan(_3756) ? 1.0 : min(_3756, 1.0));
    float _509 = (_502 * ((_455.x * cbMtdParam._m0[13u].x) - _436)) + _436;
    float _510 = (_502 * ((_455.y * cbMtdParam._m0[13u].y) - _437)) + _437;
    float _511 = (_502 * ((_455.z * cbMtdParam._m0[13u].z) - _438)) + _438;
    float _515 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _312.x) * _509;
    float _518 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _312.y) * _510;
    float _521 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _312.z) * _511;
    float _528 = ((_509 - _515) * (isnan(1.0) ? _3712 : (isnan(_3712) ? 1.0 : min(_3712, 1.0)))) + _515;
    float _529 = ((_510 - _518) * (isnan(1.0) ? _3723 : (isnan(_3723) ? 1.0 : min(_3723, 1.0)))) + _518;
    float _530 = ((_511 - _521) * (isnan(1.0) ? _3734 : (isnan(_3734) ? 1.0 : min(_3734, 1.0)))) + _521;
    vec4 _547 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _298) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _299) + cbTextureTilingScale._m0[20u].w));
    vec4 _570 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _298) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _299) + cbTextureTilingScale._m0[4u].w));
    vec4 _587 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _589 = _587.x;
    float _590 = _587.y;
    float _591 = _587.z;
    float _598 = ((_570.x - _589) * _429) + _589;
    float _599 = ((_570.y - _590) * _429) + _590;
    float _600 = ((_570.z - _591) * _429) + _591;
    vec4 _612 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _298) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _299) + cbTextureTilingScale._m0[2u].w));
    float _625 = ((_612.z - _600) * _502) + _600;
    float _628 = ((((_612.x - _598) * _502) + _598) * 2.0) + (-1.0);
    float _629 = ((((_612.y - _599) * _502) + _599) * 2.0) + (-1.0);
    float _630 = dot(vec2(_628, _629), vec2(_628, _629));
    float _3767 = isnan(0.0) ? _630 : (isnan(_630) ? 0.0 : max(_630, 0.0));
    float _635 = sqrt(1.0 - (isnan(1.0) ? _3767 : (isnan(_3767) ? 1.0 : min(_3767, 1.0))));
    vec4 _649 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _674 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _298) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _299) + cbTextureTilingScale._m0[11u].w));
    float _676 = _674.x;
    float _677 = 1.0 - _676;
    float _683 = isnan(-1.0) ? cbMtdParam._m0[24u].y : (isnan(cbMtdParam._m0[24u].y) ? (-1.0) : max(cbMtdParam._m0[24u].y, -1.0));
    float _686 = ((isnan(0.0) ? _683 : (isnan(_683) ? 0.0 : min(_683, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _695 = (_686 - ((((((_676 - _677) * cbMtdParam._m0[24u].z) + _677) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _686))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3788 = isnan(0.0) ? _695 : (isnan(_695) ? 0.0 : max(_695, 0.0));
    float _696 = isnan(1.0) ? _3788 : (isnan(_3788) ? 1.0 : min(_3788, 1.0));
    float _703 = (_696 * (cbMtdParam._m0[17u].x - _528)) + _528;
    float _704 = (_696 * (cbMtdParam._m0[17u].y - _529)) + _529;
    float _705 = (_696 * (cbMtdParam._m0[17u].z - _530)) + _530;
    vec4 _717 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _298) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _299) + cbTextureTilingScale._m0[19u].w));
    float _719 = _717.x;
    float _720 = 1.0 - _719;
    float _745 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_719 - _720) * cbMtdParam._m0[24u].w) + _720) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3799 = isnan(0.0) ? _745 : (isnan(_745) ? 0.0 : max(_745, 0.0));
    float _746 = isnan(1.0) ? _3799 : (isnan(_3799) ? 1.0 : min(_3799, 1.0));
    float _754 = ((((cbMtdParam._m0[10u].x - _703) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _746) + _703;
    float _755 = ((((cbMtdParam._m0[10u].y - _704) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _746) + _704;
    float _756 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _705)) * _746) + _705;
    float _761 = (((_547.z - _625) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _625;
    float _765 = ((_649.z - _761) * cbMtdParam._m0[19u].w) + _761;
    vec4 _779 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _298) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _299) + cbTextureTilingScale._m0[15u].w));
    float _786 = (_779.x * 2.0) + (-1.0);
    float _787 = (_779.y * 2.0) + (-1.0);
    float _788 = dot(vec2(_786, _787), vec2(_786, _787));
    float _3810 = isnan(0.0) ? _788 : (isnan(_788) ? 0.0 : max(_788, 0.0));
    float _796 = (_696 * (_779.z - _765)) + _765;
    float _799 = ((cbMtdParam._m0[23u].y - _796) * _746) + _796;
    vec4 _818 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _298) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _299) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _824 = (_818.x * 2.0) + (-1.0);
    float _825 = (_818.y * 2.0) + (-1.0);
    float _826 = dot(vec2(_824, _825), vec2(_824, _825));
    float _3821 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
    float _840 = (_628 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_547.x * 2.0) + (-1.0)))) + (((_649.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _841 = (_629 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_547.y * 2.0) + (-1.0)))) + (((_649.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _853 = (((_786 - _840) + (cbMtdParam._m0[21u].x * _840)) * _696) + _840;
    float _854 = (((_787 - _841) + (cbMtdParam._m0[21u].x * _841)) * _696) + _841;
    float _855 = (_696 * (sqrt(1.0 - (isnan(1.0) ? _3810 : (isnan(_3810) ? 1.0 : min(_3810, 1.0)))) - _635)) + _635;
    float _866 = (((_824 - _853) + (_853 * cbMtdParam._m0[22u].z)) * _746) + _853;
    float _867 = (((_825 - _854) + (_854 * cbMtdParam._m0[22u].z)) * _746) + _854;
    float _868 = ((sqrt(1.0 - (isnan(1.0) ? _3821 : (isnan(_3821) ? 1.0 : min(_3821, 1.0)))) - _855) * _746) + _855;
    float _872 = cbMtdParam._m0[22u].x + _649.w;
    float _875 = fma(_868, _247 * NORMAL.x, fma(_867, _254 * TANGENT.x, (_240 * _232) * _866));
    float _878 = fma(_868, _247 * NORMAL.y, fma(_867, _254 * TANGENT.y, (_240 * _233) * _866));
    float _881 = fma(_868, _247 * NORMAL.z, fma(_867, _254 * TANGENT.z, (_240 * _234) * _866));
    float _885 = inversesqrt(dot(vec3(_875, _878, _881), vec3(_875, _878, _881)));
    float _886 = _885 * _875;
    float _887 = _885 * _878;
    float _888 = _885 * _881;
    float _3832 = isnan(0.0) ? _799 : (isnan(_799) ? 0.0 : max(_799, 0.0));
    float _889 = isnan(1.0) ? _3832 : (isnan(_3832) ? 1.0 : min(_3832, 1.0));
    float _3843 = isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : max(_872, 0.0));
    float _3854 = isnan(0.0) ? _754 : (isnan(_754) ? 0.0 : max(_754, 0.0));
    float _3865 = isnan(0.0) ? _755 : (isnan(_755) ? 0.0 : max(_755, 0.0));
    float _3876 = isnan(0.0) ? _756 : (isnan(_756) ? 0.0 : max(_756, 0.0));
    float _907 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _948 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _958 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _948);
    float _959 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _948);
    float _960 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _948);
    float _964 = inversesqrt(dot(vec3(_958, _959, _960), vec3(_958, _959, _960)));
    float _965 = _958 * _964;
    float _966 = _959 * _964;
    float _967 = _960 * _964;
    float _973 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _974 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _992 = fma(_888, cbSceneParam._m0[5u].z, fma(_887, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _886));
    float _995 = fma(_888, cbSceneParam._m0[6u].z, fma(_887, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _886));
    float _998 = fma(_888, cbSceneParam._m0[7u].z, fma(_887, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _886));
    uint _1012 = (_279 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1018 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3854 : (isnan(_3854) ? 1.0 : min(_3854, 1.0)))) * cbInstanceData._m0[_1012].x;
    float _1019 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3865 : (isnan(_3865) ? 1.0 : min(_3865, 1.0)))) * cbInstanceData._m0[_1012].y;
    float _1020 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3876 : (isnan(_3876) ? 1.0 : min(_3876, 1.0)))) * cbInstanceData._m0[_1012].z;
    float _3887 = isnan(0.0) ? _1018 : (isnan(_1018) ? 0.0 : max(_1018, 0.0));
    float _1021 = isnan(1.0) ? _3887 : (isnan(_3887) ? 1.0 : min(_3887, 1.0));
    float _3898 = isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0));
    float _1022 = isnan(1.0) ? _3898 : (isnan(_3898) ? 1.0 : min(_3898, 1.0));
    float _3909 = isnan(0.0) ? _1020 : (isnan(_1020) ? 0.0 : max(_1020, 0.0));
    float _1023 = isnan(1.0) ? _3909 : (isnan(_3909) ? 1.0 : min(_3909, 1.0));
    vec4 _1032 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _973, cbSceneParam._m0[86u].y * _974));
    float _1036 = ((isnan(1.0) ? _3843 : (isnan(_3843) ? 1.0 : min(_3843, 1.0))) * TEXCOORD_5.w) * _1032.x;
    float _1037 = dot(vec3(_886, _887, _888), vec3(_965, _966, _967));
    float _1040 = _1037 * 2.0;
    float _1044 = (_1040 * _886) - _965;
    float _1045 = (_1040 * _887) - _966;
    float _1046 = (_1040 * _888) - _967;
    float _1050 = abs(dot(vec3(_965, _966, _967), vec3(_886, _887, _888)));
    float _3920 = isnan(0.0) ? _1050 : (isnan(_1050) ? 0.0 : max(_1050, 0.0));
    float _1052 = sqrt(_889);
    float _1065 = exp2((_1052 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3920 : (isnan(_3920) ? 1.0 : min(_3920, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1052 * 3.0));
    float _1097 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1101 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1105 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1406;
    float _1408;
    float _1409;
    float _1410;
    float _1411;
    float _1412;
    float _1413;
    float _1414;
    float _1415;
    float _1416;
    float _1417;
    float _1418;
    float _1419;
    float _1420;
    float _1421;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1131 = fma(_1105, cbModelParam._m0[26u].z, fma(_1101, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1097));
        float _1135 = fma(_1105, cbModelParam._m0[27u].z, fma(_1101, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1097));
        float _1139 = fma(_1105, cbModelParam._m0[28u].z, fma(_1101, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1097));
        float _1164 = _1097 + _886;
        float _1165 = _1101 + _887;
        float _1166 = _1105 + _888;
        float _1176 = fma(_1166, cbModelParam._m0[26u].z, fma(_1165, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1164)) - _1131;
        float _1177 = fma(_1166, cbModelParam._m0[27u].z, fma(_1165, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1164)) - _1135;
        float _1178 = fma(_1166, cbModelParam._m0[28u].z, fma(_1165, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1164)) - _1139;
        float _1182 = inversesqrt(dot(vec3(_1176, _1177, _1178), vec3(_1176, _1177, _1178)));
        float _1195 = ((_1182 * _1176) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1131 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1196 = ((_1182 * _1177) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1135 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1197 = ((_1182 * _1178) / cbModelParam._m0[34u].z) + ((((((_1139 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1200 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1195, _1196, _1197), 0.0);
        vec4 _1207 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1195, _1196, _1197), 0.0);
        vec4 _1214 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1195, _1196, _1197), 0.0);
        vec4 _1221 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1195, _1196, _1197), 0.0);
        float _1234 = exp2((_1200.w + (-0.5)) * 20.0) * 2.0;
        float _1235 = _1234 * (_1200.x + (-0.5));
        float _1236 = _1234 * (_1200.y + (-0.5));
        float _1237 = _1234 * (_1200.z + (-0.5));
        float _1244 = exp2((_1207.w + (-0.5)) * 20.0) * 2.0;
        float _1245 = _1244 * (_1207.x + (-0.5));
        float _1246 = _1244 * (_1207.y + (-0.5));
        float _1247 = _1244 * (_1207.z + (-0.5));
        float _1254 = exp2((_1214.w + (-0.5)) * 20.0) * 2.0;
        float _1255 = _1254 * (_1214.x + (-0.5));
        float _1256 = _1254 * (_1214.y + (-0.5));
        float _1257 = _1254 * (_1214.z + (-0.5));
        float _1264 = exp2((_1221.w + (-0.5)) * 20.0) * 2.0;
        float _1265 = _1264 * (_1221.x + (-0.5));
        float _1266 = _1264 * (_1221.y + (-0.5));
        float _1267 = _1264 * (_1221.z + (-0.5));
        float _1268 = isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0));
        float _1269 = isnan(0.0) ? _1266 : (isnan(_1266) ? 0.0 : max(_1266, 0.0));
        float _1270 = isnan(0.0) ? _1267 : (isnan(_1267) ? 0.0 : max(_1267, 0.0));
        float _1271 = _1235 * 0.5;
        float _1272 = _1245 * 0.5;
        float _1273 = _1255 * 0.5;
        float _1274 = dot(vec3(_1271, _1272, _1273), vec3(_1271, _1272, _1273));
        float _1279 = (_1274 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1274);
        float _1288 = (dot(vec3(_886, _887, _888), vec3(_1279 * _1271, _1279 * _1272, _1279 * _1273)) + 1.0) * 0.5;
        float _3946 = isnan(0.0) ? _1288 : (isnan(_1288) ? 0.0 : max(_1288, 0.0));
        float _1298 = sqrt(((_1272 * _1272) + (_1271 * _1271)) + (_1273 * _1273)) / (_1268 + 9.9999997473787516355514526367188e-06);
        float _3957 = isnan(0.0) ? _1298 : (isnan(_1298) ? 0.0 : max(_1298, 0.0));
        float _1299 = isnan(1.0) ? _3957 : (isnan(_3957) ? 1.0 : min(_3957, 1.0));
        float _1300 = _1299 * 2.0;
        float _1304 = (1.0 - _1299) / (_1299 + 1.0);
        float _3968 = isnan(0.0) ? _1304 : (isnan(_1304) ? 0.0 : max(_1304, 0.0));
        float _1305 = isnan(1.0) ? _3968 : (isnan(_3968) ? 1.0 : min(_3968, 1.0));
        float _1314 = ((((1.0 - _1305) * (_1300 + 2.0)) * exp2(log2(isnan(1.0) ? _3946 : (isnan(_3946) ? 1.0 : min(_3946, 1.0))) * (_1300 + 1.0))) + _1305) * _1268;
        float _1315 = _1236 * 0.5;
        float _1316 = _1246 * 0.5;
        float _1317 = _1256 * 0.5;
        float _1318 = dot(vec3(_1315, _1316, _1317), vec3(_1315, _1316, _1317));
        float _1323 = (_1318 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1318);
        float _1331 = (dot(vec3(_886, _887, _888), vec3(_1323 * _1315, _1323 * _1316, _1323 * _1317)) + 1.0) * 0.5;
        float _3979 = isnan(0.0) ? _1331 : (isnan(_1331) ? 0.0 : max(_1331, 0.0));
        float _1340 = sqrt(((_1316 * _1316) + (_1315 * _1315)) + (_1317 * _1317)) / (_1269 + 9.9999997473787516355514526367188e-06);
        float _3990 = isnan(0.0) ? _1340 : (isnan(_1340) ? 0.0 : max(_1340, 0.0));
        float _1341 = isnan(1.0) ? _3990 : (isnan(_3990) ? 1.0 : min(_3990, 1.0));
        float _1342 = _1341 * 2.0;
        float _1346 = (1.0 - _1341) / (_1341 + 1.0);
        float _4001 = isnan(0.0) ? _1346 : (isnan(_1346) ? 0.0 : max(_1346, 0.0));
        float _1347 = isnan(1.0) ? _4001 : (isnan(_4001) ? 1.0 : min(_4001, 1.0));
        float _1356 = ((((1.0 - _1347) * (_1342 + 2.0)) * exp2(log2(isnan(1.0) ? _3979 : (isnan(_3979) ? 1.0 : min(_3979, 1.0))) * (_1342 + 1.0))) + _1347) * _1269;
        float _1357 = _1237 * 0.5;
        float _1358 = _1247 * 0.5;
        float _1359 = _1257 * 0.5;
        float _1360 = dot(vec3(_1357, _1358, _1359), vec3(_1357, _1358, _1359));
        float _1365 = (_1360 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1360);
        float _1373 = (dot(vec3(_886, _887, _888), vec3(_1365 * _1357, _1365 * _1358, _1365 * _1359)) + 1.0) * 0.5;
        float _4012 = isnan(0.0) ? _1373 : (isnan(_1373) ? 0.0 : max(_1373, 0.0));
        float _1382 = sqrt(((_1358 * _1358) + (_1357 * _1357)) + (_1359 * _1359)) / (_1270 + 9.9999997473787516355514526367188e-06);
        float _4023 = isnan(0.0) ? _1382 : (isnan(_1382) ? 0.0 : max(_1382, 0.0));
        float _1383 = isnan(1.0) ? _4023 : (isnan(_4023) ? 1.0 : min(_4023, 1.0));
        float _1384 = _1383 * 2.0;
        float _1388 = (1.0 - _1383) / (_1383 + 1.0);
        float _4034 = isnan(0.0) ? _1388 : (isnan(_1388) ? 0.0 : max(_1388, 0.0));
        float _1389 = isnan(1.0) ? _4034 : (isnan(_4034) ? 1.0 : min(_4034, 1.0));
        float _1398 = ((((1.0 - _1389) * (_1384 + 2.0)) * exp2(log2(isnan(1.0) ? _4012 : (isnan(_4012) ? 1.0 : min(_4012, 1.0))) * (_1384 + 1.0))) + _1389) * _1270;
        _1406 = _1237;
        _1408 = _1236;
        _1409 = _1235;
        _1410 = _1247;
        _1411 = _1246;
        _1412 = _1245;
        _1413 = _1257;
        _1414 = _1256;
        _1415 = _1255;
        _1416 = _1270;
        _1417 = _1269;
        _1418 = _1268;
        _1419 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1314 : (isnan(_1314) ? 0.0 : max(_1314, 0.0)));
        _1420 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1356 : (isnan(_1356) ? 0.0 : max(_1356, 0.0)));
        _1421 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0)));
    }
    else
    {
        _1406 = _1407;
        _1408 = _1407;
        _1409 = _1407;
        _1410 = _1407;
        _1411 = _1407;
        _1412 = _1407;
        _1413 = _1407;
        _1414 = _1407;
        _1415 = _1407;
        _1416 = _1407;
        _1417 = _1407;
        _1418 = _1407;
        _1419 = 0.0;
        _1420 = 0.0;
        _1421 = 0.0;
    }
    float _1714;
    float _1715;
    float _1716;
    float _1717;
    float _1718;
    float _1719;
    float _1720;
    float _1721;
    float _1722;
    float _1723;
    float _1724;
    float _1725;
    float _1726;
    float _1727;
    float _1728;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1445 = fma(_1105, cbModelParam._m0[30u].z, fma(_1101, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1097));
        float _1449 = fma(_1105, cbModelParam._m0[31u].z, fma(_1101, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1097));
        float _1453 = fma(_1105, cbModelParam._m0[32u].z, fma(_1101, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1097));
        float _1476 = _1097 + _886;
        float _1477 = _1101 + _887;
        float _1478 = _1105 + _888;
        float _1488 = fma(_1478, cbModelParam._m0[30u].z, fma(_1477, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1476)) - _1445;
        float _1489 = fma(_1478, cbModelParam._m0[31u].z, fma(_1477, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1476)) - _1449;
        float _1490 = fma(_1478, cbModelParam._m0[32u].z, fma(_1477, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1476)) - _1453;
        float _1494 = inversesqrt(dot(vec3(_1488, _1489, _1490), vec3(_1488, _1489, _1490)));
        float _1507 = ((_1494 * _1488) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1445 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1508 = ((_1494 * _1489) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1449 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1509 = ((_1494 * _1490) / cbModelParam._m0[35u].z) + ((((((_1453 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1511 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1507, _1508, _1509), 0.0);
        vec4 _1518 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1507, _1508, _1509), 0.0);
        vec4 _1525 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1507, _1508, _1509), 0.0);
        vec4 _1532 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1507, _1508, _1509), 0.0);
        float _1544 = exp2((_1511.w + (-0.5)) * 20.0) * 2.0;
        float _1545 = _1544 * (_1511.x + (-0.5));
        float _1546 = _1544 * (_1511.y + (-0.5));
        float _1547 = _1544 * (_1511.z + (-0.5));
        float _1554 = exp2((_1518.w + (-0.5)) * 20.0) * 2.0;
        float _1555 = _1554 * (_1518.x + (-0.5));
        float _1556 = _1554 * (_1518.y + (-0.5));
        float _1557 = _1554 * (_1518.z + (-0.5));
        float _1564 = exp2((_1525.w + (-0.5)) * 20.0) * 2.0;
        float _1565 = _1564 * (_1525.x + (-0.5));
        float _1566 = _1564 * (_1525.y + (-0.5));
        float _1567 = _1564 * (_1525.z + (-0.5));
        float _1574 = exp2((_1532.w + (-0.5)) * 20.0) * 2.0;
        float _1575 = _1574 * (_1532.x + (-0.5));
        float _1576 = _1574 * (_1532.y + (-0.5));
        float _1577 = _1574 * (_1532.z + (-0.5));
        float _1578 = isnan(0.0) ? _1575 : (isnan(_1575) ? 0.0 : max(_1575, 0.0));
        float _1579 = isnan(0.0) ? _1576 : (isnan(_1576) ? 0.0 : max(_1576, 0.0));
        float _1580 = isnan(0.0) ? _1577 : (isnan(_1577) ? 0.0 : max(_1577, 0.0));
        float _1581 = _1545 * 0.5;
        float _1582 = _1555 * 0.5;
        float _1583 = _1565 * 0.5;
        float _1584 = dot(vec3(_1581, _1582, _1583), vec3(_1581, _1582, _1583));
        float _1589 = (_1584 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1584);
        float _1597 = (dot(vec3(_886, _887, _888), vec3(_1589 * _1581, _1589 * _1582, _1589 * _1583)) + 1.0) * 0.5;
        float _4075 = isnan(0.0) ? _1597 : (isnan(_1597) ? 0.0 : max(_1597, 0.0));
        float _1606 = sqrt(((_1582 * _1582) + (_1581 * _1581)) + (_1583 * _1583)) / (_1578 + 9.9999997473787516355514526367188e-06);
        float _4086 = isnan(0.0) ? _1606 : (isnan(_1606) ? 0.0 : max(_1606, 0.0));
        float _1607 = isnan(1.0) ? _4086 : (isnan(_4086) ? 1.0 : min(_4086, 1.0));
        float _1608 = _1607 * 2.0;
        float _1612 = (1.0 - _1607) / (_1607 + 1.0);
        float _4097 = isnan(0.0) ? _1612 : (isnan(_1612) ? 0.0 : max(_1612, 0.0));
        float _1613 = isnan(1.0) ? _4097 : (isnan(_4097) ? 1.0 : min(_4097, 1.0));
        float _1622 = ((((1.0 - _1613) * (_1608 + 2.0)) * exp2(log2(isnan(1.0) ? _4075 : (isnan(_4075) ? 1.0 : min(_4075, 1.0))) * (_1608 + 1.0))) + _1613) * _1578;
        float _1623 = _1546 * 0.5;
        float _1624 = _1556 * 0.5;
        float _1625 = _1566 * 0.5;
        float _1626 = dot(vec3(_1623, _1624, _1625), vec3(_1623, _1624, _1625));
        float _1631 = (_1626 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1626);
        float _1639 = (dot(vec3(_886, _887, _888), vec3(_1631 * _1623, _1631 * _1624, _1631 * _1625)) + 1.0) * 0.5;
        float _4108 = isnan(0.0) ? _1639 : (isnan(_1639) ? 0.0 : max(_1639, 0.0));
        float _1648 = sqrt(((_1624 * _1624) + (_1623 * _1623)) + (_1625 * _1625)) / (_1579 + 9.9999997473787516355514526367188e-06);
        float _4119 = isnan(0.0) ? _1648 : (isnan(_1648) ? 0.0 : max(_1648, 0.0));
        float _1649 = isnan(1.0) ? _4119 : (isnan(_4119) ? 1.0 : min(_4119, 1.0));
        float _1650 = _1649 * 2.0;
        float _1654 = (1.0 - _1649) / (_1649 + 1.0);
        float _4130 = isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0));
        float _1655 = isnan(1.0) ? _4130 : (isnan(_4130) ? 1.0 : min(_4130, 1.0));
        float _1664 = ((((1.0 - _1655) * (_1650 + 2.0)) * exp2(log2(isnan(1.0) ? _4108 : (isnan(_4108) ? 1.0 : min(_4108, 1.0))) * (_1650 + 1.0))) + _1655) * _1579;
        float _1665 = _1547 * 0.5;
        float _1666 = _1557 * 0.5;
        float _1667 = _1567 * 0.5;
        float _1668 = dot(vec3(_1665, _1666, _1667), vec3(_1665, _1666, _1667));
        float _1673 = (_1668 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1668);
        float _1681 = (dot(vec3(_886, _887, _888), vec3(_1673 * _1665, _1673 * _1666, _1673 * _1667)) + 1.0) * 0.5;
        float _4141 = isnan(0.0) ? _1681 : (isnan(_1681) ? 0.0 : max(_1681, 0.0));
        float _1690 = sqrt(((_1666 * _1666) + (_1665 * _1665)) + (_1667 * _1667)) / (_1580 + 9.9999997473787516355514526367188e-06);
        float _4152 = isnan(0.0) ? _1690 : (isnan(_1690) ? 0.0 : max(_1690, 0.0));
        float _1691 = isnan(1.0) ? _4152 : (isnan(_4152) ? 1.0 : min(_4152, 1.0));
        float _1692 = _1691 * 2.0;
        float _1696 = (1.0 - _1691) / (_1691 + 1.0);
        float _4163 = isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0));
        float _1697 = isnan(1.0) ? _4163 : (isnan(_4163) ? 1.0 : min(_4163, 1.0));
        float _1706 = ((((1.0 - _1697) * (_1692 + 2.0)) * exp2(log2(isnan(1.0) ? _4141 : (isnan(_4141) ? 1.0 : min(_4141, 1.0))) * (_1692 + 1.0))) + _1697) * _1580;
        _1714 = _1547;
        _1715 = _1546;
        _1716 = _1545;
        _1717 = _1557;
        _1718 = _1556;
        _1719 = _1555;
        _1720 = _1567;
        _1721 = _1566;
        _1722 = _1565;
        _1723 = _1580;
        _1724 = _1579;
        _1725 = _1578;
        _1726 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0)));
        _1727 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1664 : (isnan(_1664) ? 0.0 : max(_1664, 0.0)));
        _1728 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1706 : (isnan(_1706) ? 0.0 : max(_1706, 0.0)));
    }
    else
    {
        _1714 = _1407;
        _1715 = _1407;
        _1716 = _1407;
        _1717 = _1407;
        _1718 = _1407;
        _1719 = _1407;
        _1720 = _1407;
        _1721 = _1407;
        _1722 = _1407;
        _1723 = _1407;
        _1724 = _1407;
        _1725 = _1407;
        _1726 = 0.0;
        _1727 = 0.0;
        _1728 = 0.0;
    }
    float _1738 = (cbModelParam._m0[1u].x * (_1726 - _1419)) + _1419;
    float _1739 = (cbModelParam._m0[1u].x * (_1727 - _1420)) + _1420;
    float _1740 = (cbModelParam._m0[1u].x * (_1728 - _1421)) + _1421;
    float _1761 = fma(_1740, cbSceneParam._m0[89u].z, fma(_1739, cbSceneParam._m0[89u].y, _1738 * cbSceneParam._m0[89u].x));
    float _1764 = fma(_1740, cbSceneParam._m0[90u].z, fma(_1739, cbSceneParam._m0[90u].y, _1738 * cbSceneParam._m0[90u].x));
    float _1767 = fma(_1740, cbSceneParam._m0[91u].z, fma(_1739, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1738));
    float _1782 = _1044 * 0.5;
    float _1783 = _1045 * 0.5;
    float _1784 = _1046 * 0.5;
    float _1785 = dot(vec4(_1782, _1783, _1784, 1.0), vec4(_1716, _1719, _1722, _1725));
    float _1788 = dot(vec4(_1782, _1783, _1784, 1.0), vec4(_1715, _1718, _1721, _1724));
    float _1791 = dot(vec4(_1782, _1783, _1784, 1.0), vec4(_1714, _1717, _1720, _1723));
    float _1825;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1798 = dot(vec4(_1782, _1783, _1784, 1.0), vec4(_1406, _1410, _1413, _1416));
        float _1802 = dot(vec4(_1782, _1783, _1784, 1.0), vec4(_1408, _1411, _1414, _1417));
        float _1806 = dot(vec4(_1782, _1783, _1784, 1.0), vec4(_1409, _1412, _1415, _1418));
        float _1813 = dot(vec4(cbModelParam._m0[39u]), vec4(_1782, _1783, _1784, 1.0));
        _1825 = dot(vec3(isnan(0.0) ? _1806 : (isnan(_1806) ? 0.0 : max(_1806, 0.0)), isnan(0.0) ? _1802 : (isnan(_1802) ? 0.0 : max(_1802, 0.0)), isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1813) ? 0.0 : (isnan(0.0) ? _1813 : max(0.0, _1813))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1825 = 1.0;
    }
    float _1836;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1827 = dot(vec4(cbModelParam._m0[40u]), vec4(_1782, _1783, _1784, 1.0));
        _1836 = dot(vec3(isnan(0.0) ? _1785 : (isnan(_1785) ? 0.0 : max(_1785, 0.0)), isnan(0.0) ? _1788 : (isnan(_1788) ? 0.0 : max(_1788, 0.0)), isnan(0.0) ? _1791 : (isnan(_1791) ? 0.0 : max(_1791, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1827) ? 0.0 : (isnan(0.0) ? _1827 : max(0.0, _1827))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1836 = 1.0;
    }
    float _1840 = (_1836 * cbModelParam._m0[1u].x) + (_1825 * (1.0 - cbModelParam._m0[1u].x));
    float _1850 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _889);
    float _1851 = isnan(_1850) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1850 : min(cbModelParam._m0[25u].z, _1850));
    float _1932;
    float _1934;
    float _1936;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1899 = fma(_1105, cbModelParam._m0[13u].z, fma(_1101, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1097)) + cbModelParam._m0[13u].w;
        float _1903 = fma(_1105, cbModelParam._m0[14u].z, fma(_1101, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1097)) + cbModelParam._m0[14u].w;
        float _1907 = fma(_1105, cbModelParam._m0[15u].z, fma(_1101, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1097)) + cbModelParam._m0[15u].w;
        float _1910 = fma(_1046, cbModelParam._m0[13u].z, fma(_1045, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1044));
        float _1913 = fma(_1046, cbModelParam._m0[14u].z, fma(_1045, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1044));
        float _1916 = fma(_1046, cbModelParam._m0[15u].z, fma(_1045, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1044));
        float _1944;
        if (_1910 > 0.0)
        {
            _1944 = abs((1.0 - _1899) / _1910);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1910 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1899 + 1.0) / _1910);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1944 = frontier_phi_14_12_ladder;
        }
        float _2145;
        if (_1913 > 0.0)
        {
            _2145 = abs((1.0 - _1903) / _1913);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1913 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1903 + 1.0) / _1913);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2145 = frontier_phi_23_19_ladder;
        }
        float _2388;
        if (_1916 > 0.0)
        {
            _2388 = abs((1.0 - _1907) / _1916);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1916 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1907 + 1.0) / _1916);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2388 = frontier_phi_35_30_ladder;
        }
        float _2390 = isnan(_2145) ? _1944 : (isnan(_1944) ? _2145 : min(_1944, _2145));
        float _2391 = isnan(_2388) ? _2390 : (isnan(_2390) ? _2388 : min(_2390, _2388));
        float _2395 = (_2391 * _1910) + _1899;
        float _2396 = (_2391 * _1913) + _1903;
        float _2397 = (_2391 * _1916) + _1907;
        float _2398 = _2391 * 9.9999997473787516355514526367188e-05;
        float _2400 = (-1.0) - _2398;
        float _2402 = _2398 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2397 > _2402) || ((_2397 < _2400) || ((_2396 > _2402) || ((_2396 < _2400) || ((_2395 < _2400) || (_2395 > _2402))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2521 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2397, cbModelParam._m0[9u].z, fma(_2396, cbModelParam._m0[9u].y, _2395 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2397, cbModelParam._m0[10u].z, fma(_2396, cbModelParam._m0[10u].y, _2395 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2397, cbModelParam._m0[11u].z, fma(_2396, cbModelParam._m0[11u].y, _2395 * cbModelParam._m0[11u].x))), _1851);
            frontier_phi_13_35_ladder = _2521.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2521.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2521.x * cbModelParam._m0[1u].y;
        }
        _1932 = frontier_phi_13_35_ladder_2;
        _1934 = frontier_phi_13_35_ladder_1;
        _1936 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1920 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1044, _1045, _1046), _1851);
        _1932 = _1920.x * cbModelParam._m0[1u].y;
        _1934 = _1920.y * cbModelParam._m0[1u].y;
        _1936 = _1920.z * cbModelParam._m0[1u].y;
    }
    float _1940 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _889);
    float _1941 = isnan(_1940) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1940 : min(cbModelParam._m0[25u].w, _1940));
    float _2031;
    float _2033;
    float _2035;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1995 = fma(_1105, cbModelParam._m0[21u].z, fma(_1101, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1097)) + cbModelParam._m0[21u].w;
        float _1999 = fma(_1105, cbModelParam._m0[22u].z, fma(_1101, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1097)) + cbModelParam._m0[22u].w;
        float _2003 = fma(_1105, cbModelParam._m0[23u].z, fma(_1101, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1097)) + cbModelParam._m0[23u].w;
        float _2006 = fma(_1046, cbModelParam._m0[21u].z, fma(_1045, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1044));
        float _2009 = fma(_1046, cbModelParam._m0[22u].z, fma(_1045, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1044));
        float _2012 = fma(_1046, cbModelParam._m0[23u].z, fma(_1045, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1044));
        float _2150;
        if (_2006 > 0.0)
        {
            _2150 = abs((1.0 - _1995) / _2006);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2006 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1995 + 1.0) / _2006);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2150 = frontier_phi_25_21_ladder;
        }
        float _2415;
        if (_2009 > 0.0)
        {
            _2415 = abs((1.0 - _1999) / _2009);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2009 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1999 + 1.0) / _2009);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2415 = frontier_phi_37_32_ladder;
        }
        float _2620;
        if (_2012 > 0.0)
        {
            _2620 = abs((1.0 - _2003) / _2012);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_2012 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_2003 + 1.0) / _2012);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2620 = frontier_phi_46_43_ladder;
        }
        float _2622 = isnan(_2415) ? _2150 : (isnan(_2150) ? _2415 : min(_2150, _2415));
        float _2623 = isnan(_2620) ? _2622 : (isnan(_2622) ? _2620 : min(_2622, _2620));
        float _2627 = (_2623 * _2006) + _1995;
        float _2628 = (_2623 * _2009) + _1999;
        float _2629 = (_2623 * _2012) + _2003;
        float _2630 = _2623 * 9.9999997473787516355514526367188e-05;
        float _2631 = (-1.0) - _2630;
        float _2633 = _2630 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2629 > _2633) || ((_2629 < _2631) || ((_2628 > _2633) || ((_2628 < _2631) || ((_2627 < _2631) || (_2627 > _2633))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2828 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2629, cbModelParam._m0[17u].z, fma(_2628, cbModelParam._m0[17u].y, _2627 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2629, cbModelParam._m0[18u].z, fma(_2628, cbModelParam._m0[18u].y, _2627 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2629, cbModelParam._m0[19u].z, fma(_2628, cbModelParam._m0[19u].y, _2627 * cbModelParam._m0[19u].x))), _1941);
            frontier_phi_22_46_ladder = _2828.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2828.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2828.x * cbModelParam._m0[1u].z;
        }
        _2031 = frontier_phi_22_46_ladder_2;
        _2033 = frontier_phi_22_46_ladder_1;
        _2035 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _2015 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1044, _1045, _1046), _1941);
        _2031 = _2015.x * cbModelParam._m0[1u].z;
        _2033 = _2015.y * cbModelParam._m0[1u].z;
        _2035 = _2015.z * cbModelParam._m0[1u].z;
    }
    float _2047 = ((((1.0 - _1065) * ((_1052 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1065 * _1052)) * _1036;
    float _2048 = _2047 * ((cbModelParam._m0[1u].w * (_2031 - _1932)) + _1932);
    float _2049 = _2047 * ((cbModelParam._m0[1u].w * (_2033 - _1934)) + _1934);
    float _2050 = _2047 * ((cbModelParam._m0[1u].w * (_2035 - _1936)) + _1936);
    float _2053 = fma(_2050, cbSceneParam._m0[89u].z, fma(_2049, cbSceneParam._m0[89u].y, _2048 * cbSceneParam._m0[89u].x));
    float _2056 = fma(_2050, cbSceneParam._m0[90u].z, fma(_2049, cbSceneParam._m0[90u].y, _2048 * cbSceneParam._m0[90u].x));
    float _2059 = fma(_2050, cbSceneParam._m0[91u].z, fma(_2049, cbSceneParam._m0[91u].y, _2048 * cbSceneParam._m0[91u].x));
    uvec4 _2069 = floatBitsToUint(cbInstanceData._m0[_279 + 5u]);
    uint _2071 = _2069.x * 14u;
    uint _2072 = _2071 + 13u;
    float _2079 = _1036 + (-1.0);
    float _2084 = (cbLight._m0[_2072].x * _2079) + 1.0;
    float _2085 = (cbLight._m0[_2072].y * _2079) + 1.0;
    float _2086 = (cbLight._m0[_2072].z * _2079) + 1.0;
    float _2087 = (cbLight._m0[_2072].w * _2079) + 1.0;
    uint _2088 = _2071 + 5u;
    float _2094 = isnan(1.0) ? _2085 : (isnan(_2085) ? 1.0 : min(_2085, 1.0));
    uint _2098 = _2071 + 4u;
    float _2104 = isnan(1.0) ? _2084 : (isnan(_2084) ? 1.0 : min(_2084, 1.0));
    uint _2108 = _2071 | 1u;
    float _2119 = dot(vec3(cbLight._m0[_2071].xyz), vec3(_886, _887, _888));
    float _2122 = dot(vec3(cbLight._m0[_2108].xyz), vec3(_886, _887, _888));
    float _4299 = isnan(0.0) ? _2119 : (isnan(_2119) ? 0.0 : max(_2119, 0.0));
    float _4310 = isnan(0.0) ? _2122 : (isnan(_2122) ? 0.0 : max(_2122, 0.0));
    float _2127 = (isnan(1.0) ? _4299 : (isnan(_4299) ? 1.0 : min(_4299, 1.0))) * 0.3183098733425140380859375;
    float _2129 = (isnan(1.0) ? _4310 : (isnan(_4310) ? 1.0 : min(_4310, 1.0))) * 0.3183098733425140380859375;
    float _2136 = ((cbLight._m0[_2088].x * _2094) * _2129) + ((cbLight._m0[_2098].x * _2104) * _2127);
    float _2137 = ((_2094 * cbLight._m0[_2088].y) * _2129) + ((_2104 * cbLight._m0[_2098].y) * _2127);
    float _2138 = ((_2094 * cbLight._m0[_2088].z) * _2129) + ((_2104 * cbLight._m0[_2098].z) * _2127);
    uvec4 _2142 = floatBitsToUint(cbLight._m0[_2071 + 12u]);
    bool _2144 = _2142.x == 0u;
    float _2155;
    float _2157;
    float _2159;
    if (_2144)
    {
        _2155 = _2136;
        _2157 = _2137;
        _2159 = _2138;
    }
    else
    {
        uint _2163 = _2071 + 6u;
        float _2179 = (dot(vec3(cbLight._m0[_2071 + 2u].xyz), vec3(_886, _887, _888)) * 0.5) + 0.5;
        float _2180 = _2179 * _2179;
        float _4321 = isnan(0.0) ? _2180 : (isnan(_2180) ? 0.0 : max(_2180, 0.0));
        float _2181 = isnan(1.0) ? _4321 : (isnan(_4321) ? 1.0 : min(_4321, 1.0));
        float _2182 = isnan(1.0) ? _2086 : (isnan(_2086) ? 1.0 : min(_2086, 1.0));
        _2155 = (((cbLight._m0[_2163].x * 0.3183098733425140380859375) * _2181) * _2182) + _2136;
        _2157 = (((cbLight._m0[_2163].y * 0.3183098733425140380859375) * _2181) * _2182) + _2137;
        _2159 = (((cbLight._m0[_2163].z * 0.3183098733425140380859375) * _2181) * _2182) + _2138;
    }
    bool _2162 = _2142.y == 0u;
    float _2200;
    float _2202;
    float _2204;
    if (_2162)
    {
        _2200 = _2155;
        _2202 = _2157;
        _2204 = _2159;
    }
    else
    {
        uint _2359 = _2071 + 7u;
        float _2375 = (dot(vec3(cbLight._m0[_2071 + 3u].xyz), vec3(_886, _887, _888)) * 0.5) + 0.5;
        float _2376 = _2375 * _2375;
        float _4337 = isnan(0.0) ? _2376 : (isnan(_2376) ? 0.0 : max(_2376, 0.0));
        float _2377 = isnan(1.0) ? _4337 : (isnan(_4337) ? 1.0 : min(_4337, 1.0));
        float _2378 = isnan(1.0) ? _2087 : (isnan(_2087) ? 1.0 : min(_2087, 1.0));
        _2200 = (((cbLight._m0[_2359].x * 0.3183098733425140380859375) * _2377) * _2378) + _2155;
        _2202 = (((cbLight._m0[_2359].y * 0.3183098733425140380859375) * _2377) * _2378) + _2157;
        _2204 = (((cbLight._m0[_2359].z * 0.3183098733425140380859375) * _2377) * _2378) + _2159;
    }
    uint _2207 = _2071 + 8u;
    float _2220 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2071].w)) * _889) * 0.949999988079071044921875);
    float _2221 = _2220 * _2220;
    float _2222 = cbLight._m0[_2071].x + _965;
    float _2223 = cbLight._m0[_2071].y + _966;
    float _2224 = cbLight._m0[_2071].z + _967;
    float _2228 = inversesqrt(dot(vec3(_2222, _2223, _2224), vec3(_2222, _2223, _2224)));
    float _2229 = _2228 * _2222;
    float _2230 = _2228 * _2223;
    float _2231 = _2228 * _2224;
    float _2232 = dot(vec3(_886, _887, _888), vec3(cbLight._m0[_2071].xyz));
    float _4353 = isnan(0.0) ? _2232 : (isnan(_2232) ? 0.0 : max(_2232, 0.0));
    float _2235 = isnan(1.0) ? _4353 : (isnan(_4353) ? 1.0 : min(_4353, 1.0));
    float _4364 = isnan(0.0) ? _1037 : (isnan(_1037) ? 0.0 : max(_1037, 0.0));
    float _2236 = isnan(1.0) ? _4364 : (isnan(_4364) ? 1.0 : min(_4364, 1.0));
    float _2237 = dot(vec3(_886, _887, _888), vec3(_2229, _2230, _2231));
    float _4375 = isnan(0.0) ? _2237 : (isnan(_2237) ? 0.0 : max(_2237, 0.0));
    float _2240 = isnan(1.0) ? _4375 : (isnan(_4375) ? 1.0 : min(_4375, 1.0));
    float _2241 = dot(vec3(cbLight._m0[_2071].xyz), vec3(_2229, _2230, _2231));
    float _4386 = isnan(0.0) ? _2241 : (isnan(_2241) ? 0.0 : max(_2241, 0.0));
    float _2245 = _2221 * _2221;
    float _2249 = ((_2240 * _2240) * (_2245 + (-1.0))) + 1.0;
    float _2260 = (exp2(log2(1.0 - (isnan(1.0) ? _4386 : (isnan(_4386) ? 1.0 : min(_4386, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2261 = 1.0 - _2221;
    float _2272 = (0.5 / (((_2236 * ((_2235 * _2261) + _2221)) + 9.9999999392252902907785028219223e-09) + (((_2236 * _2261) + _2221) * _2235))) * _2235;
    float _4397 = isnan(0.0) ? _2272 : (isnan(_2272) ? 0.0 : max(_2272, 0.0));
    float _2274 = (isnan(1.0) ? _4397 : (isnan(_4397) ? 1.0 : min(_4397, 1.0))) * (_2245 / ((_2249 * _2249) * 3.141590118408203125));
    uint _2285 = _2071 + 9u;
    float _2296 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2108].w)) * _889) * 0.949999988079071044921875);
    float _2297 = _2296 * _2296;
    float _2298 = cbLight._m0[_2108].x + _965;
    float _2299 = cbLight._m0[_2108].y + _966;
    float _2300 = cbLight._m0[_2108].z + _967;
    float _2304 = inversesqrt(dot(vec3(_2298, _2299, _2300), vec3(_2298, _2299, _2300)));
    float _2305 = _2304 * _2298;
    float _2306 = _2304 * _2299;
    float _2307 = _2304 * _2300;
    float _2308 = dot(vec3(_886, _887, _888), vec3(cbLight._m0[_2108].xyz));
    float _4408 = isnan(0.0) ? _2308 : (isnan(_2308) ? 0.0 : max(_2308, 0.0));
    float _2311 = isnan(1.0) ? _4408 : (isnan(_4408) ? 1.0 : min(_4408, 1.0));
    float _2312 = dot(vec3(_886, _887, _888), vec3(_2305, _2306, _2307));
    float _4419 = isnan(0.0) ? _2312 : (isnan(_2312) ? 0.0 : max(_2312, 0.0));
    float _2315 = isnan(1.0) ? _4419 : (isnan(_4419) ? 1.0 : min(_4419, 1.0));
    float _2316 = dot(vec3(cbLight._m0[_2108].xyz), vec3(_2305, _2306, _2307));
    float _4430 = isnan(0.0) ? _2316 : (isnan(_2316) ? 0.0 : max(_2316, 0.0));
    float _2320 = _2297 * _2297;
    float _2324 = ((_2315 * _2315) * (_2320 + (-1.0))) + 1.0;
    float _2333 = (exp2(log2(1.0 - (isnan(1.0) ? _4430 : (isnan(_4430) ? 1.0 : min(_4430, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2334 = 1.0 - _2297;
    float _2344 = (0.5 / (((_2236 * ((_2311 * _2334) + _2297)) + 9.9999999392252902907785028219223e-09) + (((_2236 * _2334) + _2297) * _2311))) * _2311;
    float _4441 = isnan(0.0) ? _2344 : (isnan(_2344) ? 0.0 : max(_2344, 0.0));
    float _2346 = (isnan(1.0) ? _4441 : (isnan(_4441) ? 1.0 : min(_4441, 1.0))) * (_2320 / ((_2324 * _2324) * 3.141590118408203125));
    float _2356 = (((_2333 * cbLight._m0[_2285].x) * _2346) * _2094) + (((_2260 * cbLight._m0[_2207].x) * _2274) * _2104);
    float _2357 = (((_2333 * cbLight._m0[_2285].y) * _2346) * _2094) + (((_2260 * cbLight._m0[_2207].y) * _2274) * _2104);
    float _2358 = (((_2333 * cbLight._m0[_2285].z) * _2346) * _2094) + (((_2260 * cbLight._m0[_2207].z) * _2274) * _2104);
    float _2420;
    float _2422;
    float _2424;
    if (_2144)
    {
        _2420 = _2356;
        _2422 = _2357;
        _2424 = _2358;
    }
    else
    {
        uint _2426 = _2071 + 2u;
        uint _2430 = _2071 + 10u;
        float _2444 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2426].w)) * _889) * 0.949999988079071044921875);
        float _2445 = _2444 * _2444;
        float _2446 = cbLight._m0[_2426].x + _965;
        float _2447 = cbLight._m0[_2426].y + _966;
        float _2448 = cbLight._m0[_2426].z + _967;
        float _2452 = inversesqrt(dot(vec3(_2446, _2447, _2448), vec3(_2446, _2447, _2448)));
        float _2453 = _2452 * _2446;
        float _2454 = _2452 * _2447;
        float _2455 = _2452 * _2448;
        float _2456 = dot(vec3(_886, _887, _888), vec3(cbLight._m0[_2426].xyz));
        float _4452 = isnan(0.0) ? _2456 : (isnan(_2456) ? 0.0 : max(_2456, 0.0));
        float _2459 = isnan(1.0) ? _4452 : (isnan(_4452) ? 1.0 : min(_4452, 1.0));
        float _2460 = dot(vec3(_886, _887, _888), vec3(_2453, _2454, _2455));
        float _4463 = isnan(0.0) ? _2460 : (isnan(_2460) ? 0.0 : max(_2460, 0.0));
        float _2463 = isnan(1.0) ? _4463 : (isnan(_4463) ? 1.0 : min(_4463, 1.0));
        float _2464 = dot(vec3(cbLight._m0[_2426].xyz), vec3(_2453, _2454, _2455));
        float _4474 = isnan(0.0) ? _2464 : (isnan(_2464) ? 0.0 : max(_2464, 0.0));
        float _2468 = _2445 * _2445;
        float _2472 = ((_2463 * _2463) * (_2468 + (-1.0))) + 1.0;
        float _2481 = (exp2(log2(1.0 - (isnan(1.0) ? _4474 : (isnan(_4474) ? 1.0 : min(_4474, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2482 = 1.0 - _2445;
        float _2492 = (0.5 / (((_2236 * ((_2459 * _2482) + _2445)) + 9.9999999392252902907785028219223e-09) + (((_2236 * _2482) + _2445) * _2459))) * _2459;
        float _4485 = isnan(0.0) ? _2492 : (isnan(_2492) ? 0.0 : max(_2492, 0.0));
        float _2494 = (isnan(1.0) ? _4485 : (isnan(_4485) ? 1.0 : min(_4485, 1.0))) * (_2468 / ((_2472 * _2472) * 3.141590118408203125));
        float _2495 = isnan(1.0) ? _2086 : (isnan(_2086) ? 1.0 : min(_2086, 1.0));
        _2420 = (((_2481 * cbLight._m0[_2430].x) * _2494) * _2495) + _2356;
        _2422 = (((_2481 * cbLight._m0[_2430].y) * _2494) * _2495) + _2357;
        _2424 = (((_2481 * cbLight._m0[_2430].z) * _2494) * _2495) + _2358;
    }
    float _2530;
    float _2532;
    float _2534;
    if (_2162)
    {
        _2530 = _2420;
        _2532 = _2422;
        _2534 = _2424;
    }
    else
    {
        uint _2541 = _2071 + 3u;
        uint _2545 = _2071 + 11u;
        float _2559 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2541].w)) * _889) * 0.949999988079071044921875);
        float _2560 = _2559 * _2559;
        float _2561 = cbLight._m0[_2541].x + _965;
        float _2562 = cbLight._m0[_2541].y + _966;
        float _2563 = cbLight._m0[_2541].z + _967;
        float _2567 = inversesqrt(dot(vec3(_2561, _2562, _2563), vec3(_2561, _2562, _2563)));
        float _2568 = _2567 * _2561;
        float _2569 = _2567 * _2562;
        float _2570 = _2567 * _2563;
        float _2571 = dot(vec3(_886, _887, _888), vec3(cbLight._m0[_2541].xyz));
        float _4501 = isnan(0.0) ? _2571 : (isnan(_2571) ? 0.0 : max(_2571, 0.0));
        float _2574 = isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0));
        float _2575 = dot(vec3(_886, _887, _888), vec3(_2568, _2569, _2570));
        float _4512 = isnan(0.0) ? _2575 : (isnan(_2575) ? 0.0 : max(_2575, 0.0));
        float _2578 = isnan(1.0) ? _4512 : (isnan(_4512) ? 1.0 : min(_4512, 1.0));
        float _2579 = dot(vec3(cbLight._m0[_2541].xyz), vec3(_2568, _2569, _2570));
        float _4523 = isnan(0.0) ? _2579 : (isnan(_2579) ? 0.0 : max(_2579, 0.0));
        float _2583 = _2560 * _2560;
        float _2587 = ((_2578 * _2578) * (_2583 + (-1.0))) + 1.0;
        float _2596 = (exp2(log2(1.0 - (isnan(1.0) ? _4523 : (isnan(_4523) ? 1.0 : min(_4523, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2597 = 1.0 - _2560;
        float _2607 = (0.5 / (((_2236 * ((_2574 * _2597) + _2560)) + 9.9999999392252902907785028219223e-09) + (((_2236 * _2597) + _2560) * _2574))) * _2574;
        float _4534 = isnan(0.0) ? _2607 : (isnan(_2607) ? 0.0 : max(_2607, 0.0));
        float _2609 = (isnan(1.0) ? _4534 : (isnan(_4534) ? 1.0 : min(_4534, 1.0))) * (_2583 / ((_2587 * _2587) * 3.141590118408203125));
        float _2610 = isnan(1.0) ? _2087 : (isnan(_2087) ? 1.0 : min(_2087, 1.0));
        _2530 = (((_2596 * cbLight._m0[_2545].x) * _2609) * _2610) + _2420;
        _2532 = (((_2596 * cbLight._m0[_2545].y) * _2609) * _2610) + _2422;
        _2534 = (((_2596 * cbLight._m0[_2545].z) * _2609) * _2610) + _2424;
    }
    float _2745;
    float _2747;
    float _2749;
    float _2751;
    float _2753;
    float _2755;
    if (_2069.y == 0u)
    {
        float _2685 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2686 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2685;
        float _2687 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2685;
        float _2688 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2685;
        uvec4 _2700 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2701 = _2700.x;
        uint _2712 = uint((float(_2700.y) * floor(float(uint(cbSceneParam._m0[85u].y * _974) / _2701))) + floor(float(uint(cbSceneParam._m0[85u].x * _973) / _2701)));
        float _2722 = (log2(_2688 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2723 = isnan(0.0) ? _2722 : (isnan(_2722) ? 0.0 : max(_2722, 0.0));
        uint _2726 = uint(isnan(14.0) ? _2723 : (isnan(_2723) ? 14.0 : min(_2723, 14.0)));
        uvec4 _2731 = texelFetch(g_lightClusterGridBuffer, int(((_2726 << 2u) + (_2712 << 6u)) >> 2u));
        uint _2732 = _2731.x;
        uint _2733 = _2700.z;
        float _2833;
        float _2835;
        float _2837;
        float _2839;
        float _2841;
        float _2843;
        if (((((1u << ((_2733 >> 4u) & 15u)) + 4294967295u) & _2732) == 0u) || ((_2733 & 240u) == 0u))
        {
            _2833 = 0.0;
            _2835 = 0.0;
            _2837 = 0.0;
            _2839 = 0.0;
            _2841 = 0.0;
            _2843 = 0.0;
        }
        else
        {
            float _2834;
            float _2836;
            float _2838;
            float _2840;
            float _2842;
            float _2844;
            float _2978 = 0.0;
            float _2979 = 0.0;
            float _2980 = 0.0;
            float _2981 = 0.0;
            float _2982 = 0.0;
            float _2983 = 0.0;
            uint _2984 = 0u;
            uint _2993;
            bool _2994;
            for (;;)
            {
                _2993 = texelFetch(g_lightClassification, int((((_2726 << 5u) + (_2712 << 9u)) + (_2984 << 2u)) >> 2u)).x;
                _2994 = _2993 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_2994)
                {
                    frontier_phi_61_pred = _2978;
                    frontier_phi_61_pred_1 = _2983;
                    frontier_phi_61_pred_2 = _2982;
                    frontier_phi_61_pred_3 = _2981;
                    frontier_phi_61_pred_4 = _2980;
                    frontier_phi_61_pred_5 = _2979;
                }
                else
                {
                    float _3102;
                    float _3103;
                    float _3104;
                    float _3105;
                    float _3106;
                    float _3107;
                    uint _3108;
                    _3102 = _2978;
                    _3103 = _2979;
                    _3104 = _2980;
                    _3105 = _2981;
                    _3106 = _2982;
                    _3107 = _2983;
                    _3108 = _2993;
                    float _3034;
                    float _3035;
                    float _3036;
                    float _3037;
                    float _3038;
                    float _3039;
                    for (;;)
                    {
                        uint _3112 = uint(findLSB(_3108)) + (_2984 << 5u);
                        uint _3109 = (_3108 + 4294967295u) & _3108;
                        uint _3114 = _3112 * 48u;
                        vec4 _3128 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3114)).x, texelFetch(g_PointLightRenderingBuffer, int(_3114 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3114 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3114 + 3u)).x));
                        uint _3134 = (_3112 * 48u) + 4u;
                        vec4 _3147 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3134)).x, texelFetch(g_PointLightRenderingBuffer, int(_3134 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3134 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3134 + 3u)).x));
                        uint _3153 = (_3112 * 48u) + 8u;
                        vec3 _3164 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3153)).x, texelFetch(g_PointLightRenderingBuffer, int(_3153 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3153 + 2u)).x));
                        float _3168 = _3128.x - _2686;
                        float _3169 = _3128.y - _2687;
                        float _3170 = _3128.z - _2688;
                        float _3171 = dot(vec3(_3168, _3169, _3170), vec3(_3168, _3169, _3170));
                        float _3174 = inversesqrt(_3171);
                        float _3175 = _3174 * _3168;
                        float _3176 = _3174 * _3169;
                        float _3177 = _3174 * _3170;
                        float _3178 = dot(vec3(_992, _995, _998), vec3(_3175, _3176, _3177));
                        float _3183 = 1.0 - (_3171 * _3128.w);
                        float _4560 = isnan(0.0) ? _3183 : (isnan(_3183) ? 0.0 : max(_3183, 0.0));
                        float _3184 = isnan(1.0) ? _4560 : (isnan(_4560) ? 1.0 : min(_4560, 1.0));
                        float _3185 = sqrt(_3171) * _3147.w;
                        float _3188 = 1.39999997615814208984375 / (_3185 + 1.39999997615814208984375);
                        float _3189 = _3188 * _3188;
                        float _3192 = ((1.0 - _3189) * _3178) + _3189;
                        float _3195 = _3185 * _3185;
                        float _3199 = ((isnan(0.0) ? _3192 : (isnan(_3192) ? 0.0 : max(_3192, 0.0))) * _3184) / ((_3195 * 0.699999988079071044921875) + 1.0);
                        float _3203 = (-0.0) - _2686;
                        float _3204 = (-0.0) - _2687;
                        float _3205 = (-0.0) - _2688;
                        float _3209 = inversesqrt(dot(vec3(_3203, _3204, _3205), vec3(_3203, _3204, _3205)));
                        float _3210 = _3209 * _3203;
                        float _3211 = _3209 * _3204;
                        float _3212 = _3209 * _3205;
                        float _3220 = exp2(log2(1.0 / ((_3195 * 3.5) + 5.0)) * 0.25);
                        float _3221 = 1.0 - _1052;
                        float _3228 = sqrt(1.0 - ((1.0 - (_3221 * _3221)) * (1.0 - (_3220 * _3220))));
                        float _3229 = _3228 * _3228;
                        float _3230 = _3229 * _3229;
                        float _3231 = _3210 + _3175;
                        float _3232 = _3211 + _3176;
                        float _3233 = _3212 + _3177;
                        float _3237 = inversesqrt(dot(vec3(_3231, _3232, _3233), vec3(_3231, _3232, _3233)));
                        float _3241 = dot(vec3(_992, _995, _998), vec3(_3210, _3211, _3212));
                        float _4576 = isnan(0.0) ? _3241 : (isnan(_3241) ? 0.0 : max(_3241, 0.0));
                        float _3244 = isnan(1.0) ? _4576 : (isnan(_4576) ? 1.0 : min(_4576, 1.0));
                        float _3245 = dot(vec3(_992, _995, _998), vec3(_3237 * _3231, _3237 * _3232, _3237 * _3233));
                        float _4587 = isnan(0.0) ? _3245 : (isnan(_3245) ? 0.0 : max(_3245, 0.0));
                        float _3248 = isnan(1.0) ? _4587 : (isnan(_4587) ? 1.0 : min(_4587, 1.0));
                        float _3252 = ((_3248 * _3248) * (_3230 + (-1.0))) + 1.0;
                        float _3253 = _3188 * _3229;
                        float _3254 = _3253 * _3253;
                        float _3257 = ((1.0 - _3254) * _3178) + _3254;
                        float _4598 = isnan(0.0) ? _3257 : (isnan(_3257) ? 0.0 : max(_3257, 0.0));
                        float _3258 = isnan(1.0) ? _4598 : (isnan(_4598) ? 1.0 : min(_4598, 1.0));
                        float _3259 = 1.0 - _3229;
                        float _3269 = (0.5 / (((_3258 * ((_3244 * _3259) + _3229)) + 9.9999999392252902907785028219223e-09) + (((_3258 * _3259) + _3229) * _3244))) * _3258;
                        float _4609 = isnan(0.0) ? _3269 : (isnan(_3269) ? 0.0 : max(_3269, 0.0));
                        float _3280 = (((_3230 * 3.1415927410125732421875) * (isnan(1.0) ? _4609 : (isnan(_4609) ? 1.0 : min(_4609, 1.0)))) / ((_3252 * _3252) * ((_3195 * 2.1991131305694580078125) + 3.141590118408203125))) * _3184;
                        _3037 = (_3199 * _3147.x) + _3105;
                        _3038 = (_3199 * _3147.y) + _3106;
                        _3039 = (_3199 * _3147.z) + _3107;
                        _3034 = (_3280 * _3164.x) + _3102;
                        _3035 = (_3280 * _3164.y) + _3103;
                        _3036 = (_3280 * _3164.z) + _3104;
                        if (_3109 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3102 = _3034;
                            _3103 = _3035;
                            _3104 = _3036;
                            _3105 = _3037;
                            _3106 = _3038;
                            _3107 = _3039;
                            _3108 = _3109;
                        }
                    }
                    frontier_phi_61_pred = _3034;
                    frontier_phi_61_pred_1 = _3039;
                    frontier_phi_61_pred_2 = _3038;
                    frontier_phi_61_pred_3 = _3037;
                    frontier_phi_61_pred_4 = _3036;
                    frontier_phi_61_pred_5 = _3035;
                }
                _2834 = frontier_phi_61_pred;
                _2844 = frontier_phi_61_pred_1;
                _2842 = frontier_phi_61_pred_2;
                _2840 = frontier_phi_61_pred_3;
                _2838 = frontier_phi_61_pred_4;
                _2836 = frontier_phi_61_pred_5;
                uint _2985 = _2984 + 1u;
                if (_2985 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2978 = _2834;
                    _2979 = _2836;
                    _2980 = _2838;
                    _2981 = _2840;
                    _2982 = _2842;
                    _2983 = _2844;
                    _2984 = _2985;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2833 = _2834;
            _2835 = _2836;
            _2837 = _2838;
            _2839 = _2840;
            _2841 = _2842;
            _2843 = _2844;
        }
        uvec4 _2847 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2848 = _2847.z;
        uint _2850 = (_2848 >> 8u) & 15u;
        float _2946;
        float _2948;
        float _2950;
        float _2952;
        float _2954;
        float _2956;
        if (((4294967295u << _2850) & _2732) == 0u)
        {
            _2946 = _2833;
            _2948 = _2835;
            _2950 = _2837;
            _2952 = _2839;
            _2954 = _2841;
            _2956 = _2843;
        }
        else
        {
            float _2971 = inversesqrt(dot(vec3(_2686, _2687, _2688), vec3(_2686, _2687, _2688)));
            float _2972 = _2971 * _2686;
            float _2973 = _2971 * _2687;
            float _2974 = _2971 * _2688;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2850 < ((_2848 >> 12u) & 15u))
            {
                float _2947;
                float _2949;
                float _2951;
                float _2953;
                float _2955;
                float _2957;
                float _3085 = _2833;
                float _3086 = _2835;
                float _3087 = _2837;
                float _3088 = _2839;
                float _3089 = _2841;
                float _3090 = _2843;
                uint _3091 = _2850;
                uint _3100;
                bool _3101;
                for (;;)
                {
                    _3100 = texelFetch(g_lightClassification, int((((_2726 << 5u) + (_2712 << 9u)) + (_3091 << 2u)) >> 2u)).x;
                    _3101 = _3100 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3101)
                    {
                        frontier_phi_67_pred = _3088;
                        frontier_phi_67_pred_1 = _3089;
                        frontier_phi_67_pred_2 = _3090;
                        frontier_phi_67_pred_3 = _3087;
                        frontier_phi_67_pred_4 = _3086;
                        frontier_phi_67_pred_5 = _3085;
                    }
                    else
                    {
                        float _3285;
                        float _3286;
                        float _3287;
                        float _3288;
                        float _3289;
                        float _3290;
                        float _3578;
                        float _3579;
                        float _3580;
                        float _3581;
                        float _3582;
                        float _3583;
                        float _3298 = _3085;
                        float _3299 = _3086;
                        float _3300 = _3087;
                        float _3301 = _3088;
                        float _3302 = _3089;
                        float _3303 = _3090;
                        uint _3304 = _3100;
                        uint _3305;
                        vec4 _3330;
                        float _3331;
                        vec4 _3346;
                        vec3 _3358;
                        vec4 _3373;
                        vec4 _3388;
                        float _3434;
                        bool _3435;
                        for (;;)
                        {
                            uint _3315 = ((_3091 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3304));
                            _3305 = (_3304 + 4294967295u) & _3304;
                            uint _3317 = _3315 * 40u;
                            _3330 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3317)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3317 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3317 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3317 + 3u)).x));
                            _3331 = _3330.w;
                            uint _3333 = (_3315 * 40u) + 4u;
                            _3346 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3333)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3333 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3333 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3333 + 3u)).x));
                            uint _3348 = (_3315 * 40u) + 8u;
                            _3358 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3348)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3348 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3348 + 2u)).x));
                            uint _3360 = (_3315 * 40u) + 16u;
                            _3373 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3360)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3360 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3360 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3360 + 3u)).x));
                            uint _3375 = (_3315 * 40u) + 20u;
                            _3388 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3375)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3375 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3375 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3375 + 3u)).x));
                            uint _3390 = (_3315 * 40u) + 24u;
                            vec4 _3403 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3390)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3390 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3390 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3390 + 3u)).x));
                            uint _3409 = (_3315 * 40u) + 28u;
                            vec4 _3422 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3409)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3409 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3409 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3409 + 3u)).x));
                            _3434 = fma(_2688, _3422.z, fma(_2687, _3422.y, _3422.x * _2686)) + _3422.w;
                            _3435 = !((fma(_2688, _3403.z, fma(_2687, _3403.y, _3403.x * _2686)) + _3403.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3435)
                            {
                                float _3462 = _3330.x - _2686;
                                float _3463 = _3330.y - _2687;
                                float _3464 = _3330.z - _2688;
                                float _3465 = dot(vec3(_3462, _3463, _3464), vec3(_3462, _3463, _3464));
                                float _3468 = inversesqrt(_3465);
                                float _3469 = _3468 * _3462;
                                float _3470 = _3468 * _3463;
                                float _3471 = _3468 * _3464;
                                float _3475 = 1.0 - (_3465 / (_3331 * _3331));
                                float _4620 = isnan(0.0) ? _3475 : (isnan(_3475) ? 0.0 : max(_3475, 0.0));
                                float _3476 = isnan(1.0) ? _4620 : (isnan(_4620) ? 1.0 : min(_4620, 1.0));
                                float _3480 = sqrt(_3465) * _3346.w;
                                float _3482 = 1.39999997615814208984375 / (_3480 + 1.39999997615814208984375);
                                float _3483 = _3482 * _3482;
                                float _3486 = ((1.0 - _3483) * dot(vec3(_3469, _3470, _3471), vec3(_992, _995, _998))) + _3483;
                                float _3489 = _3480 * _3480;
                                float _3493 = (fma(_2688, _3373.z, fma(_2687, _3373.y, _3373.x * _2686)) + _3373.w) / _3434;
                                float _3494 = (fma(_2688, _3388.z, fma(_2687, _3388.y, _3388.x * _2686)) + _3388.w) / _3434;
                                float _3498 = 1.0 - dot(vec2(_3493, _3494), vec2(_3493, _3494));
                                float _4636 = isnan(0.0) ? _3498 : (isnan(_3498) ? 0.0 : max(_3498, 0.0));
                                float _3499 = isnan(1.0) ? _4636 : (isnan(_4636) ? 1.0 : min(_4636, 1.0));
                                float _3500 = _3499 * (((isnan(0.0) ? _3486 : (isnan(_3486) ? 0.0 : max(_3486, 0.0))) * _3476) / ((_3489 * 0.699999988079071044921875) + 1.0));
                                float _3512 = exp2(log2(1.0 / ((_3489 * 3.5) + 5.0)) * 0.25);
                                float _3513 = 1.0 - _1052;
                                float _3520 = sqrt(1.0 - ((1.0 - (_3513 * _3513)) * (1.0 - (_3512 * _3512))));
                                float _3521 = _3520 * _3520;
                                float _3522 = _3521 * _3521;
                                float _3523 = _3469 - _2972;
                                float _3524 = _3470 - _2973;
                                float _3525 = _3471 - _2974;
                                float _3529 = inversesqrt(dot(vec3(_3523, _3524, _3525), vec3(_3523, _3524, _3525)));
                                float _3533 = dot(vec3(_992, _995, _998), vec3((-0.0) - _2972, (-0.0) - _2973, (-0.0) - _2974));
                                float _4647 = isnan(0.0) ? _3533 : (isnan(_3533) ? 0.0 : max(_3533, 0.0));
                                float _3536 = isnan(1.0) ? _4647 : (isnan(_4647) ? 1.0 : min(_4647, 1.0));
                                float _3537 = dot(vec3(_992, _995, _998), vec3(_3529 * _3523, _3529 * _3524, _3529 * _3525));
                                float _4658 = isnan(0.0) ? _3537 : (isnan(_3537) ? 0.0 : max(_3537, 0.0));
                                float _3540 = isnan(1.0) ? _4658 : (isnan(_4658) ? 1.0 : min(_4658, 1.0));
                                float _3544 = ((_3540 * _3540) * (_3522 + (-1.0))) + 1.0;
                                float _3545 = _3482 * _3521;
                                float _3546 = _3545 * _3545;
                                float _3552 = ((1.0 - _3546) * dot(vec3(_992, _995, _998), vec3(_3469, _3470, _3471))) + _3546;
                                float _4669 = isnan(0.0) ? _3552 : (isnan(_3552) ? 0.0 : max(_3552, 0.0));
                                float _3553 = isnan(1.0) ? _4669 : (isnan(_4669) ? 1.0 : min(_4669, 1.0));
                                float _3554 = 1.0 - _3521;
                                float _3564 = (0.5 / (((_3553 * ((_3536 * _3554) + _3521)) + 9.9999999392252902907785028219223e-09) + (((_3553 * _3554) + _3521) * _3536))) * _3553;
                                float _4680 = isnan(0.0) ? _3564 : (isnan(_3564) ? 0.0 : max(_3564, 0.0));
                                float _3574 = (_3499 * _3476) * (((_3522 * 3.1415927410125732421875) * (isnan(1.0) ? _4680 : (isnan(_4680) ? 1.0 : min(_4680, 1.0)))) / ((_3544 * _3544) * ((_3489 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3574 * _3358.x;
                                frontier_phi_73_pred_1 = _3574 * _3358.y;
                                frontier_phi_73_pred_2 = _3500 * _3346.z;
                                frontier_phi_73_pred_3 = _3500 * _3346.y;
                                frontier_phi_73_pred_4 = _3500 * _3346.x;
                                frontier_phi_73_pred_5 = _3574 * _3358.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3578 = frontier_phi_73_pred;
                            _3579 = frontier_phi_73_pred_1;
                            _3583 = frontier_phi_73_pred_2;
                            _3582 = frontier_phi_73_pred_3;
                            _3581 = frontier_phi_73_pred_4;
                            _3580 = frontier_phi_73_pred_5;
                            _3288 = _3581 + _3301;
                            _3289 = _3582 + _3302;
                            _3290 = _3583 + _3303;
                            _3285 = _3578 + _3298;
                            _3286 = _3579 + _3299;
                            _3287 = _3580 + _3300;
                            if (_3305 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3298 = _3285;
                                _3299 = _3286;
                                _3300 = _3287;
                                _3301 = _3288;
                                _3302 = _3289;
                                _3303 = _3290;
                                _3304 = _3305;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3288;
                        frontier_phi_67_pred_1 = _3289;
                        frontier_phi_67_pred_2 = _3290;
                        frontier_phi_67_pred_3 = _3287;
                        frontier_phi_67_pred_4 = _3286;
                        frontier_phi_67_pred_5 = _3285;
                    }
                    _2953 = frontier_phi_67_pred;
                    _2955 = frontier_phi_67_pred_1;
                    _2957 = frontier_phi_67_pred_2;
                    _2951 = frontier_phi_67_pred_3;
                    _2949 = frontier_phi_67_pred_4;
                    _2947 = frontier_phi_67_pred_5;
                    uint _3092 = _3091 + 1u;
                    if (_3092 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3085 = _2947;
                        _3086 = _2949;
                        _3087 = _2951;
                        _3088 = _2953;
                        _3089 = _2955;
                        _3090 = _2957;
                        _3091 = _3092;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _2955;
                frontier_phi_55_56_ladder_1 = _2957;
                frontier_phi_55_56_ladder_2 = _2953;
                frontier_phi_55_56_ladder_3 = _2951;
                frontier_phi_55_56_ladder_4 = _2949;
                frontier_phi_55_56_ladder_5 = _2947;
            }
            else
            {
                frontier_phi_55_56_ladder = _2841;
                frontier_phi_55_56_ladder_1 = _2843;
                frontier_phi_55_56_ladder_2 = _2839;
                frontier_phi_55_56_ladder_3 = _2837;
                frontier_phi_55_56_ladder_4 = _2835;
                frontier_phi_55_56_ladder_5 = _2833;
            }
            _2946 = frontier_phi_55_56_ladder_5;
            _2948 = frontier_phi_55_56_ladder_4;
            _2950 = frontier_phi_55_56_ladder_3;
            _2952 = frontier_phi_55_56_ladder_2;
            _2954 = frontier_phi_55_56_ladder;
            _2956 = frontier_phi_55_56_ladder_1;
        }
        float _2961 = isnan(1.0) ? _1036 : (isnan(_1036) ? 1.0 : min(_1036, 1.0));
        _2745 = (_2961 * _2952) + _2200;
        _2747 = (_2961 * _2954) + _2202;
        _2749 = (_2961 * _2956) + _2204;
        _2751 = ((_2946 * 0.039999999105930328369140625) * _2961) + _2530;
        _2753 = ((_2948 * 0.039999999105930328369140625) * _2961) + _2532;
        _2755 = ((_2950 * 0.039999999105930328369140625) * _2961) + _2534;
    }
    else
    {
        _2745 = _2200;
        _2747 = _2202;
        _2749 = _2204;
        _2751 = _2530;
        _2753 = _2532;
        _2755 = _2534;
    }
    float _4696 = isnan(0.0) ? _1021 : (isnan(_1021) ? 0.0 : max(_1021, 0.0));
    float _4707 = isnan(0.0) ? _1022 : (isnan(_1022) ? 0.0 : max(_1022, 0.0));
    float _4718 = isnan(0.0) ? _1023 : (isnan(_1023) ? 0.0 : max(_1023, 0.0));
    uint _2775 = _279 + 6u;
    float _2783 = _973 / cbSceneParam._m0[86u].x;
    float _2784 = _974 / cbSceneParam._m0[86u].y;
    vec4 _2798 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2783, _2784, (log2((isnan(cbSceneParam._m0[77u].w) ? _907 : (isnan(_907) ? cbSceneParam._m0[77u].w : min(_907, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2800 = _2798.x;
    float _2801 = _2798.y;
    float _2802 = _2798.z;
    float _2803 = _2798.w;
    float _2896;
    float _2898;
    float _2900;
    float _2902;
    if (_907 > cbSceneParam._m0[78u].w)
    {
        float _2858 = isnan(_907) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _907 : min(cbSceneParam._m0[80u].w, _907));
        float _2859 = _2858 / _907;
        float _2870 = _2859 * _958;
        float _2871 = _959 * _2859;
        float _2872 = (-0.0) - _2871;
        float _2874 = _2859 * _960;
        float _2876 = (cbSceneParam._m0[77u].w * _2872) / _2858;
        float _2877 = _2876 + cbSceneParam._m0[79u].w;
        float _2878 = cbSceneParam._m0[79u].w - _2871;
        float _2884 = sqrt(((_2870 * _2870) + (_2871 * _2871)) + (_2874 * _2874));
        float _2887 = (1.0 - (cbSceneParam._m0[77u].w / _2858)) * _2884;
        float _2892 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2894 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3047;
        if (abs((_2872 - _2876) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3047 = ((((_2877 > 0.0) ? exp2(_2892 * _2877) : (2.0 - exp2(_2894 * _2877))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2887;
        }
        else
        {
            float _3007 = 1.0 / cbSceneParam._m0[80u].x;
            float _3008 = isnan(_2878) ? _2877 : (isnan(_2877) ? _2878 : max(_2877, _2878));
            float _3009 = isnan(_2878) ? _2877 : (isnan(_2877) ? _2878 : min(_2877, _2878));
            float _3018 = isnan(0.0) ? _3008 : (isnan(_3008) ? 0.0 : min(_3008, 0.0));
            float _3019 = isnan(0.0) ? _3009 : (isnan(_3009) ? 0.0 : min(_3009, 0.0));
            _3047 = ((abs(_2884 / _2872) * cbSceneParam._m0[80u].y) * ((((_3018 - _3019) * 2.0) - ((exp2(_2892 * (isnan(0.0) ? _3008 : (isnan(_3008) ? 0.0 : max(_3008, 0.0)))) - exp2(_2892 * (isnan(0.0) ? _3009 : (isnan(_3009) ? 0.0 : max(_3009, 0.0))))) * _3007)) - ((exp2(_2894 * _3018) - exp2(_2894 * _3019)) * _3007))) + (_2887 * cbSceneParam._m0[80u].z);
        }
        vec4 _3049 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2783, _2784, 1.0), 0.0);
        float _3058 = exp2((_3047 * (-1.44269502162933349609375)) * (1.0 - _3049.w));
        float _3059 = log2(_3058);
        float _3075 = log2(_2803);
        _2896 = (exp2(_3075 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3059 * cbSceneParam._m0[78u].x)) * _3049.x) / cbSceneParam._m0[78u].x)) + _2800;
        _2898 = (exp2(_3075 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3059 * cbSceneParam._m0[78u].y)) * _3049.y) / cbSceneParam._m0[78u].y)) + _2801;
        _2900 = (exp2(_3075 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3059 * cbSceneParam._m0[78u].z)) * _3049.z) / cbSceneParam._m0[78u].z)) + _2802;
        _2902 = _3058 * _2803;
    }
    else
    {
        _2896 = _2800;
        _2898 = _2801;
        _2900 = _2802;
        _2902 = _2803;
    }
    float _2914 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2915 = _2914 == 3.0;
    float _2916 = log2(_2902);
    float _2923 = exp2(_2916 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4696 : (isnan(_4696) ? 1.0 : min(_4696, 1.0))) * (_2745 + ((isnan(0.0) ? _1761 : (isnan(_1761) ? 0.0 : max(_1761, 0.0))) * _1036))) + ((_2751 + ((isnan(0.0) ? _2053 : (isnan(_2053) ? 0.0 : max(_2053, 0.0))) * _1840)) * cbPerFrame._m0[3u].x));
    float _2924 = exp2(_2916 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4707 : (isnan(_4707) ? 1.0 : min(_4707, 1.0))) * (_2747 + ((isnan(0.0) ? _1764 : (isnan(_1764) ? 0.0 : max(_1764, 0.0))) * _1036))) + ((_2753 + ((isnan(0.0) ? _2056 : (isnan(_2056) ? 0.0 : max(_2056, 0.0))) * _1840)) * cbPerFrame._m0[3u].x));
    float _2925 = exp2(_2916 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4718 : (isnan(_4718) ? 1.0 : min(_4718, 1.0))) * (_2749 + ((isnan(0.0) ? _1767 : (isnan(_1767) ? 0.0 : max(_1767, 0.0))) * _1036))) + ((_2755 + ((isnan(0.0) ? _2059 : (isnan(_2059) ? 0.0 : max(_2059, 0.0))) * _1840)) * cbPerFrame._m0[3u].x));
    float _2934 = (_2914 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2934 * (_2915 ? _2923 : (_2923 + (cbSceneParam._m0[72u].w * _2896)));
    SV_Target.y = _2934 * (_2915 ? _2924 : (_2924 + (cbSceneParam._m0[72u].w * _2898)));
    SV_Target.z = _2934 * (_2915 ? _2925 : (_2925 + (cbSceneParam._m0[72u].w * _2900)));
    SV_Target.w = cbInstanceData._m0[_2775].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2775].w;
}


