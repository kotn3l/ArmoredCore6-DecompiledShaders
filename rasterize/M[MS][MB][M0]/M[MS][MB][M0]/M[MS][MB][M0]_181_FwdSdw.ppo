#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 3) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1221;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _216 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _217 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _218 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _224 = inversesqrt(dot(vec3(_216, _217, _218), vec3(_216, _217, _218)));
    float _231 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _238 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _244 = uint(roundEven(NORMAL.w)) * 13u;
    uint _250 = _244 + 1u;
    uint _254 = _244 + 2u;
    float _263 = sqrt(((cbInstanceData._m0[_250].x * cbInstanceData._m0[_250].x) + (cbInstanceData._m0[_244].x * cbInstanceData._m0[_244].x)) + (cbInstanceData._m0[_254].x * cbInstanceData._m0[_254].x));
    float _264 = _263 * TEXCOORD.z;
    float _265 = _263 * TEXCOORD.w;
    vec4 _285 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _291 = _285.x * cbMtdParam._m0[11u].x;
    float _292 = _285.y * cbMtdParam._m0[11u].y;
    float _293 = _285.z * cbMtdParam._m0[11u].z;
    vec4 _312 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _264) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _265) + cbTextureTilingScale._m0[5u].w));
    vec4 _351 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _353 = _351.x;
    float _363 = dot(vec4(_353, _351.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _380 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_353 - _363) * cbMtdParam._m0[24u].x) + _363) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3809 = isnan(0.0) ? _380 : (isnan(_380) ? 0.0 : max(_380, 0.0));
    float _381 = isnan(1.0) ? _3809 : (isnan(_3809) ? 1.0 : min(_3809, 1.0));
    float _388 = (_381 * ((_312.x * cbMtdParam._m0[12u].x) - _291)) + _291;
    float _389 = (_381 * ((_312.y * cbMtdParam._m0[12u].y) - _292)) + _292;
    float _390 = (_381 * ((_312.z * cbMtdParam._m0[12u].z) - _293)) + _293;
    vec4 _407 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _264) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _265) + cbTextureTilingScale._m0[3u].w));
    vec4 _427 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _429 = _427.x;
    float _439 = dot(vec4(_429, _427.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _453 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.y) * 2.0) - ((((_429 - _439) * cbMtdParam._m0[24u].x) + _439) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3820 = isnan(0.0) ? _453 : (isnan(_453) ? 0.0 : max(_453, 0.0));
    float _454 = isnan(1.0) ? _3820 : (isnan(_3820) ? 1.0 : min(_3820, 1.0));
    float _461 = (_454 * ((_407.x * cbMtdParam._m0[13u].x) - _388)) + _388;
    float _462 = (_454 * ((_407.y * cbMtdParam._m0[13u].y) - _389)) + _389;
    float _463 = (_454 * ((_407.z * cbMtdParam._m0[13u].z) - _390)) + _390;
    vec4 _480 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _264) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _265) + cbTextureTilingScale._m0[20u].w));
    vec4 _503 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _264) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _265) + cbTextureTilingScale._m0[4u].w));
    vec4 _520 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _522 = _520.x;
    float _523 = _520.y;
    float _524 = _520.z;
    float _531 = ((_503.x - _522) * _381) + _522;
    float _532 = ((_503.y - _523) * _381) + _523;
    float _533 = ((_503.z - _524) * _381) + _524;
    vec4 _545 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _264) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _265) + cbTextureTilingScale._m0[2u].w));
    float _558 = ((_545.z - _533) * _454) + _533;
    float _561 = ((((_545.x - _531) * _454) + _531) * 2.0) + (-1.0);
    float _562 = ((((_545.y - _532) * _454) + _532) * 2.0) + (-1.0);
    float _563 = dot(vec2(_561, _562), vec2(_561, _562));
    float _3831 = isnan(0.0) ? _563 : (isnan(_563) ? 0.0 : max(_563, 0.0));
    float _568 = sqrt(1.0 - (isnan(1.0) ? _3831 : (isnan(_3831) ? 1.0 : min(_3831, 1.0))));
    vec4 _581 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _599 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _264) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _265) + cbTextureTilingScale._m0[11u].w));
    float _601 = _599.x;
    float _602 = 1.0 - _601;
    float _615 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_601 - _602) * cbMtdParam._m0[24u].z) + _602) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3842 = isnan(0.0) ? _615 : (isnan(_615) ? 0.0 : max(_615, 0.0));
    float _616 = isnan(1.0) ? _3842 : (isnan(_3842) ? 1.0 : min(_3842, 1.0));
    float _623 = (_616 * (cbMtdParam._m0[17u].x - _461)) + _461;
    float _624 = (_616 * (cbMtdParam._m0[17u].y - _462)) + _462;
    float _625 = (_616 * (cbMtdParam._m0[17u].z - _463)) + _463;
    float _630 = (((_480.z - _558) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _558;
    vec4 _643 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _264) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _265) + cbTextureTilingScale._m0[15u].w));
    float _650 = (_643.x * 2.0) + (-1.0);
    float _651 = (_643.y * 2.0) + (-1.0);
    float _652 = dot(vec2(_650, _651), vec2(_650, _651));
    float _3853 = isnan(0.0) ? _652 : (isnan(_652) ? 0.0 : max(_652, 0.0));
    float _660 = (_616 * (_643.z - _630)) + _630;
    float _665 = _561 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_480.x * 2.0) + (-1.0)));
    float _666 = _562 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_480.y * 2.0) + (-1.0)));
    float _678 = (((_650 - _665) + (cbMtdParam._m0[21u].x * _665)) * _616) + _665;
    float _679 = (((_651 - _666) + (cbMtdParam._m0[21u].x * _666)) * _616) + _666;
    float _680 = (_616 * (sqrt(1.0 - (isnan(1.0) ? _3853 : (isnan(_3853) ? 1.0 : min(_3853, 1.0)))) - _568)) + _568;
    float _685 = cbMtdParam._m0[22u].x + _581.w;
    float _688 = fma(_680, _231 * NORMAL.x, fma(_679, _238 * TANGENT.x, (_224 * _216) * _678));
    float _691 = fma(_680, _231 * NORMAL.y, fma(_679, _238 * TANGENT.y, (_224 * _217) * _678));
    float _694 = fma(_680, _231 * NORMAL.z, fma(_679, _238 * TANGENT.z, (_224 * _218) * _678));
    float _698 = inversesqrt(dot(vec3(_688, _691, _694), vec3(_688, _691, _694)));
    float _699 = _698 * _688;
    float _700 = _698 * _691;
    float _701 = _698 * _694;
    float _3864 = isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : max(_660, 0.0));
    float _702 = isnan(1.0) ? _3864 : (isnan(_3864) ? 1.0 : min(_3864, 1.0));
    float _3875 = isnan(0.0) ? _685 : (isnan(_685) ? 0.0 : max(_685, 0.0));
    float _3886 = isnan(0.0) ? _623 : (isnan(_623) ? 0.0 : max(_623, 0.0));
    float _3897 = isnan(0.0) ? _624 : (isnan(_624) ? 0.0 : max(_624, 0.0));
    float _3908 = isnan(0.0) ? _625 : (isnan(_625) ? 0.0 : max(_625, 0.0));
    float _720 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _762 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _772 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _762);
    float _773 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _762);
    float _774 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _762);
    float _778 = inversesqrt(dot(vec3(_772, _773, _774), vec3(_772, _773, _774)));
    float _779 = _772 * _778;
    float _780 = _773 * _778;
    float _781 = _774 * _778;
    float _787 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _788 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _806 = fma(_701, cbSceneParam._m0[5u].z, fma(_700, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _699));
    float _809 = fma(_701, cbSceneParam._m0[6u].z, fma(_700, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _699));
    float _812 = fma(_701, cbSceneParam._m0[7u].z, fma(_700, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _699));
    uint _826 = (_244 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _832 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3886 : (isnan(_3886) ? 1.0 : min(_3886, 1.0)))) * cbInstanceData._m0[_826].x;
    float _833 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3897 : (isnan(_3897) ? 1.0 : min(_3897, 1.0)))) * cbInstanceData._m0[_826].y;
    float _834 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3908 : (isnan(_3908) ? 1.0 : min(_3908, 1.0)))) * cbInstanceData._m0[_826].z;
    float _3919 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
    float _835 = isnan(1.0) ? _3919 : (isnan(_3919) ? 1.0 : min(_3919, 1.0));
    float _3930 = isnan(0.0) ? _833 : (isnan(_833) ? 0.0 : max(_833, 0.0));
    float _836 = isnan(1.0) ? _3930 : (isnan(_3930) ? 1.0 : min(_3930, 1.0));
    float _3941 = isnan(0.0) ? _834 : (isnan(_834) ? 0.0 : max(_834, 0.0));
    float _837 = isnan(1.0) ? _3941 : (isnan(_3941) ? 1.0 : min(_3941, 1.0));
    vec4 _846 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _787, cbSceneParam._m0[86u].y * _788));
    float _850 = ((isnan(1.0) ? _3875 : (isnan(_3875) ? 1.0 : min(_3875, 1.0))) * TEXCOORD_5.w) * _846.x;
    float _851 = dot(vec3(_699, _700, _701), vec3(_779, _780, _781));
    float _854 = _851 * 2.0;
    float _858 = (_854 * _699) - _779;
    float _859 = (_854 * _700) - _780;
    float _860 = (_854 * _701) - _781;
    float _864 = abs(dot(vec3(_779, _780, _781), vec3(_699, _700, _701)));
    float _3952 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
    float _866 = sqrt(_702);
    float _879 = exp2((_866 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3952 : (isnan(_3952) ? 1.0 : min(_3952, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_866 * 3.0));
    float _911 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _915 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _919 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1220;
    float _1222;
    float _1223;
    float _1224;
    float _1225;
    float _1226;
    float _1227;
    float _1228;
    float _1229;
    float _1230;
    float _1231;
    float _1232;
    float _1233;
    float _1234;
    float _1235;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _945 = fma(_919, cbModelParam._m0[26u].z, fma(_915, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _911));
        float _949 = fma(_919, cbModelParam._m0[27u].z, fma(_915, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _911));
        float _953 = fma(_919, cbModelParam._m0[28u].z, fma(_915, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _911));
        float _978 = _911 + _699;
        float _979 = _915 + _700;
        float _980 = _919 + _701;
        float _990 = fma(_980, cbModelParam._m0[26u].z, fma(_979, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _978)) - _945;
        float _991 = fma(_980, cbModelParam._m0[27u].z, fma(_979, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _978)) - _949;
        float _992 = fma(_980, cbModelParam._m0[28u].z, fma(_979, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _978)) - _953;
        float _996 = inversesqrt(dot(vec3(_990, _991, _992), vec3(_990, _991, _992)));
        float _1009 = ((_996 * _990) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_945 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1010 = ((_996 * _991) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_949 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1011 = ((_996 * _992) / cbModelParam._m0[34u].z) + ((((((_953 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1014 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1009, _1010, _1011), 0.0);
        vec4 _1021 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1009, _1010, _1011), 0.0);
        vec4 _1028 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1009, _1010, _1011), 0.0);
        vec4 _1035 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1009, _1010, _1011), 0.0);
        float _1048 = exp2((_1014.w + (-0.5)) * 20.0) * 2.0;
        float _1049 = _1048 * (_1014.x + (-0.5));
        float _1050 = _1048 * (_1014.y + (-0.5));
        float _1051 = _1048 * (_1014.z + (-0.5));
        float _1058 = exp2((_1021.w + (-0.5)) * 20.0) * 2.0;
        float _1059 = _1058 * (_1021.x + (-0.5));
        float _1060 = _1058 * (_1021.y + (-0.5));
        float _1061 = _1058 * (_1021.z + (-0.5));
        float _1068 = exp2((_1028.w + (-0.5)) * 20.0) * 2.0;
        float _1069 = _1068 * (_1028.x + (-0.5));
        float _1070 = _1068 * (_1028.y + (-0.5));
        float _1071 = _1068 * (_1028.z + (-0.5));
        float _1078 = exp2((_1035.w + (-0.5)) * 20.0) * 2.0;
        float _1079 = _1078 * (_1035.x + (-0.5));
        float _1080 = _1078 * (_1035.y + (-0.5));
        float _1081 = _1078 * (_1035.z + (-0.5));
        float _1082 = isnan(0.0) ? _1079 : (isnan(_1079) ? 0.0 : max(_1079, 0.0));
        float _1083 = isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0));
        float _1084 = isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0));
        float _1085 = _1049 * 0.5;
        float _1086 = _1059 * 0.5;
        float _1087 = _1069 * 0.5;
        float _1088 = dot(vec3(_1085, _1086, _1087), vec3(_1085, _1086, _1087));
        float _1093 = (_1088 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1088);
        float _1102 = (dot(vec3(_699, _700, _701), vec3(_1093 * _1085, _1093 * _1086, _1093 * _1087)) + 1.0) * 0.5;
        float _3978 = isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0));
        float _1112 = sqrt(((_1086 * _1086) + (_1085 * _1085)) + (_1087 * _1087)) / (_1082 + 9.9999997473787516355514526367188e-06);
        float _3989 = isnan(0.0) ? _1112 : (isnan(_1112) ? 0.0 : max(_1112, 0.0));
        float _1113 = isnan(1.0) ? _3989 : (isnan(_3989) ? 1.0 : min(_3989, 1.0));
        float _1114 = _1113 * 2.0;
        float _1118 = (1.0 - _1113) / (_1113 + 1.0);
        float _4000 = isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0));
        float _1119 = isnan(1.0) ? _4000 : (isnan(_4000) ? 1.0 : min(_4000, 1.0));
        float _1128 = ((((1.0 - _1119) * (_1114 + 2.0)) * exp2(log2(isnan(1.0) ? _3978 : (isnan(_3978) ? 1.0 : min(_3978, 1.0))) * (_1114 + 1.0))) + _1119) * _1082;
        float _1129 = _1050 * 0.5;
        float _1130 = _1060 * 0.5;
        float _1131 = _1070 * 0.5;
        float _1132 = dot(vec3(_1129, _1130, _1131), vec3(_1129, _1130, _1131));
        float _1137 = (_1132 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1132);
        float _1145 = (dot(vec3(_699, _700, _701), vec3(_1137 * _1129, _1137 * _1130, _1137 * _1131)) + 1.0) * 0.5;
        float _4011 = isnan(0.0) ? _1145 : (isnan(_1145) ? 0.0 : max(_1145, 0.0));
        float _1154 = sqrt(((_1130 * _1130) + (_1129 * _1129)) + (_1131 * _1131)) / (_1083 + 9.9999997473787516355514526367188e-06);
        float _4022 = isnan(0.0) ? _1154 : (isnan(_1154) ? 0.0 : max(_1154, 0.0));
        float _1155 = isnan(1.0) ? _4022 : (isnan(_4022) ? 1.0 : min(_4022, 1.0));
        float _1156 = _1155 * 2.0;
        float _1160 = (1.0 - _1155) / (_1155 + 1.0);
        float _4033 = isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0));
        float _1161 = isnan(1.0) ? _4033 : (isnan(_4033) ? 1.0 : min(_4033, 1.0));
        float _1170 = ((((1.0 - _1161) * (_1156 + 2.0)) * exp2(log2(isnan(1.0) ? _4011 : (isnan(_4011) ? 1.0 : min(_4011, 1.0))) * (_1156 + 1.0))) + _1161) * _1083;
        float _1171 = _1051 * 0.5;
        float _1172 = _1061 * 0.5;
        float _1173 = _1071 * 0.5;
        float _1174 = dot(vec3(_1171, _1172, _1173), vec3(_1171, _1172, _1173));
        float _1179 = (_1174 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1174);
        float _1187 = (dot(vec3(_699, _700, _701), vec3(_1179 * _1171, _1179 * _1172, _1179 * _1173)) + 1.0) * 0.5;
        float _4044 = isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0));
        float _1196 = sqrt(((_1172 * _1172) + (_1171 * _1171)) + (_1173 * _1173)) / (_1084 + 9.9999997473787516355514526367188e-06);
        float _4055 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
        float _1197 = isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0));
        float _1198 = _1197 * 2.0;
        float _1202 = (1.0 - _1197) / (_1197 + 1.0);
        float _4066 = isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0));
        float _1203 = isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0));
        float _1212 = ((((1.0 - _1203) * (_1198 + 2.0)) * exp2(log2(isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0))) * (_1198 + 1.0))) + _1203) * _1084;
        _1220 = _1051;
        _1222 = _1050;
        _1223 = _1049;
        _1224 = _1061;
        _1225 = _1060;
        _1226 = _1059;
        _1227 = _1071;
        _1228 = _1070;
        _1229 = _1069;
        _1230 = _1084;
        _1231 = _1083;
        _1232 = _1082;
        _1233 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0)));
        _1234 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0)));
        _1235 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0)));
    }
    else
    {
        _1220 = _1221;
        _1222 = _1221;
        _1223 = _1221;
        _1224 = _1221;
        _1225 = _1221;
        _1226 = _1221;
        _1227 = _1221;
        _1228 = _1221;
        _1229 = _1221;
        _1230 = _1221;
        _1231 = _1221;
        _1232 = _1221;
        _1233 = 0.0;
        _1234 = 0.0;
        _1235 = 0.0;
    }
    float _1528;
    float _1529;
    float _1530;
    float _1531;
    float _1532;
    float _1533;
    float _1534;
    float _1535;
    float _1536;
    float _1537;
    float _1538;
    float _1539;
    float _1540;
    float _1541;
    float _1542;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1259 = fma(_919, cbModelParam._m0[30u].z, fma(_915, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _911));
        float _1263 = fma(_919, cbModelParam._m0[31u].z, fma(_915, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _911));
        float _1267 = fma(_919, cbModelParam._m0[32u].z, fma(_915, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _911));
        float _1290 = _911 + _699;
        float _1291 = _915 + _700;
        float _1292 = _919 + _701;
        float _1302 = fma(_1292, cbModelParam._m0[30u].z, fma(_1291, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1290)) - _1259;
        float _1303 = fma(_1292, cbModelParam._m0[31u].z, fma(_1291, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1290)) - _1263;
        float _1304 = fma(_1292, cbModelParam._m0[32u].z, fma(_1291, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1290)) - _1267;
        float _1308 = inversesqrt(dot(vec3(_1302, _1303, _1304), vec3(_1302, _1303, _1304)));
        float _1321 = ((_1308 * _1302) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1259 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1322 = ((_1308 * _1303) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1263 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1323 = ((_1308 * _1304) / cbModelParam._m0[35u].z) + ((((((_1267 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1325 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1321, _1322, _1323), 0.0);
        vec4 _1332 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1321, _1322, _1323), 0.0);
        vec4 _1339 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1321, _1322, _1323), 0.0);
        vec4 _1346 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1321, _1322, _1323), 0.0);
        float _1358 = exp2((_1325.w + (-0.5)) * 20.0) * 2.0;
        float _1359 = _1358 * (_1325.x + (-0.5));
        float _1360 = _1358 * (_1325.y + (-0.5));
        float _1361 = _1358 * (_1325.z + (-0.5));
        float _1368 = exp2((_1332.w + (-0.5)) * 20.0) * 2.0;
        float _1369 = _1368 * (_1332.x + (-0.5));
        float _1370 = _1368 * (_1332.y + (-0.5));
        float _1371 = _1368 * (_1332.z + (-0.5));
        float _1378 = exp2((_1339.w + (-0.5)) * 20.0) * 2.0;
        float _1379 = _1378 * (_1339.x + (-0.5));
        float _1380 = _1378 * (_1339.y + (-0.5));
        float _1381 = _1378 * (_1339.z + (-0.5));
        float _1388 = exp2((_1346.w + (-0.5)) * 20.0) * 2.0;
        float _1389 = _1388 * (_1346.x + (-0.5));
        float _1390 = _1388 * (_1346.y + (-0.5));
        float _1391 = _1388 * (_1346.z + (-0.5));
        float _1392 = isnan(0.0) ? _1389 : (isnan(_1389) ? 0.0 : max(_1389, 0.0));
        float _1393 = isnan(0.0) ? _1390 : (isnan(_1390) ? 0.0 : max(_1390, 0.0));
        float _1394 = isnan(0.0) ? _1391 : (isnan(_1391) ? 0.0 : max(_1391, 0.0));
        float _1395 = _1359 * 0.5;
        float _1396 = _1369 * 0.5;
        float _1397 = _1379 * 0.5;
        float _1398 = dot(vec3(_1395, _1396, _1397), vec3(_1395, _1396, _1397));
        float _1403 = (_1398 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1398);
        float _1411 = (dot(vec3(_699, _700, _701), vec3(_1403 * _1395, _1403 * _1396, _1403 * _1397)) + 1.0) * 0.5;
        float _4107 = isnan(0.0) ? _1411 : (isnan(_1411) ? 0.0 : max(_1411, 0.0));
        float _1420 = sqrt(((_1396 * _1396) + (_1395 * _1395)) + (_1397 * _1397)) / (_1392 + 9.9999997473787516355514526367188e-06);
        float _4118 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
        float _1421 = isnan(1.0) ? _4118 : (isnan(_4118) ? 1.0 : min(_4118, 1.0));
        float _1422 = _1421 * 2.0;
        float _1426 = (1.0 - _1421) / (_1421 + 1.0);
        float _4129 = isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0));
        float _1427 = isnan(1.0) ? _4129 : (isnan(_4129) ? 1.0 : min(_4129, 1.0));
        float _1436 = ((((1.0 - _1427) * (_1422 + 2.0)) * exp2(log2(isnan(1.0) ? _4107 : (isnan(_4107) ? 1.0 : min(_4107, 1.0))) * (_1422 + 1.0))) + _1427) * _1392;
        float _1437 = _1360 * 0.5;
        float _1438 = _1370 * 0.5;
        float _1439 = _1380 * 0.5;
        float _1440 = dot(vec3(_1437, _1438, _1439), vec3(_1437, _1438, _1439));
        float _1445 = (_1440 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1440);
        float _1453 = (dot(vec3(_699, _700, _701), vec3(_1445 * _1437, _1445 * _1438, _1445 * _1439)) + 1.0) * 0.5;
        float _4140 = isnan(0.0) ? _1453 : (isnan(_1453) ? 0.0 : max(_1453, 0.0));
        float _1462 = sqrt(((_1438 * _1438) + (_1437 * _1437)) + (_1439 * _1439)) / (_1393 + 9.9999997473787516355514526367188e-06);
        float _4151 = isnan(0.0) ? _1462 : (isnan(_1462) ? 0.0 : max(_1462, 0.0));
        float _1463 = isnan(1.0) ? _4151 : (isnan(_4151) ? 1.0 : min(_4151, 1.0));
        float _1464 = _1463 * 2.0;
        float _1468 = (1.0 - _1463) / (_1463 + 1.0);
        float _4162 = isnan(0.0) ? _1468 : (isnan(_1468) ? 0.0 : max(_1468, 0.0));
        float _1469 = isnan(1.0) ? _4162 : (isnan(_4162) ? 1.0 : min(_4162, 1.0));
        float _1478 = ((((1.0 - _1469) * (_1464 + 2.0)) * exp2(log2(isnan(1.0) ? _4140 : (isnan(_4140) ? 1.0 : min(_4140, 1.0))) * (_1464 + 1.0))) + _1469) * _1393;
        float _1479 = _1361 * 0.5;
        float _1480 = _1371 * 0.5;
        float _1481 = _1381 * 0.5;
        float _1482 = dot(vec3(_1479, _1480, _1481), vec3(_1479, _1480, _1481));
        float _1487 = (_1482 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1482);
        float _1495 = (dot(vec3(_699, _700, _701), vec3(_1487 * _1479, _1487 * _1480, _1487 * _1481)) + 1.0) * 0.5;
        float _4173 = isnan(0.0) ? _1495 : (isnan(_1495) ? 0.0 : max(_1495, 0.0));
        float _1504 = sqrt(((_1480 * _1480) + (_1479 * _1479)) + (_1481 * _1481)) / (_1394 + 9.9999997473787516355514526367188e-06);
        float _4184 = isnan(0.0) ? _1504 : (isnan(_1504) ? 0.0 : max(_1504, 0.0));
        float _1505 = isnan(1.0) ? _4184 : (isnan(_4184) ? 1.0 : min(_4184, 1.0));
        float _1506 = _1505 * 2.0;
        float _1510 = (1.0 - _1505) / (_1505 + 1.0);
        float _4195 = isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0));
        float _1511 = isnan(1.0) ? _4195 : (isnan(_4195) ? 1.0 : min(_4195, 1.0));
        float _1520 = ((((1.0 - _1511) * (_1506 + 2.0)) * exp2(log2(isnan(1.0) ? _4173 : (isnan(_4173) ? 1.0 : min(_4173, 1.0))) * (_1506 + 1.0))) + _1511) * _1394;
        _1528 = _1361;
        _1529 = _1360;
        _1530 = _1359;
        _1531 = _1371;
        _1532 = _1370;
        _1533 = _1369;
        _1534 = _1381;
        _1535 = _1380;
        _1536 = _1379;
        _1537 = _1394;
        _1538 = _1393;
        _1539 = _1392;
        _1540 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0)));
        _1541 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0)));
        _1542 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1520 : (isnan(_1520) ? 0.0 : max(_1520, 0.0)));
    }
    else
    {
        _1528 = _1221;
        _1529 = _1221;
        _1530 = _1221;
        _1531 = _1221;
        _1532 = _1221;
        _1533 = _1221;
        _1534 = _1221;
        _1535 = _1221;
        _1536 = _1221;
        _1537 = _1221;
        _1538 = _1221;
        _1539 = _1221;
        _1540 = 0.0;
        _1541 = 0.0;
        _1542 = 0.0;
    }
    float _1552 = (cbModelParam._m0[1u].x * (_1540 - _1233)) + _1233;
    float _1553 = (cbModelParam._m0[1u].x * (_1541 - _1234)) + _1234;
    float _1554 = (cbModelParam._m0[1u].x * (_1542 - _1235)) + _1235;
    float _1575 = fma(_1554, cbSceneParam._m0[89u].z, fma(_1553, cbSceneParam._m0[89u].y, _1552 * cbSceneParam._m0[89u].x));
    float _1578 = fma(_1554, cbSceneParam._m0[90u].z, fma(_1553, cbSceneParam._m0[90u].y, _1552 * cbSceneParam._m0[90u].x));
    float _1581 = fma(_1554, cbSceneParam._m0[91u].z, fma(_1553, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1552));
    float _1596 = _858 * 0.5;
    float _1597 = _859 * 0.5;
    float _1598 = _860 * 0.5;
    float _1599 = dot(vec4(_1596, _1597, _1598, 1.0), vec4(_1530, _1533, _1536, _1539));
    float _1602 = dot(vec4(_1596, _1597, _1598, 1.0), vec4(_1529, _1532, _1535, _1538));
    float _1605 = dot(vec4(_1596, _1597, _1598, 1.0), vec4(_1528, _1531, _1534, _1537));
    float _1639;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1612 = dot(vec4(_1596, _1597, _1598, 1.0), vec4(_1220, _1224, _1227, _1230));
        float _1616 = dot(vec4(_1596, _1597, _1598, 1.0), vec4(_1222, _1225, _1228, _1231));
        float _1620 = dot(vec4(_1596, _1597, _1598, 1.0), vec4(_1223, _1226, _1229, _1232));
        float _1627 = dot(vec4(cbModelParam._m0[39u]), vec4(_1596, _1597, _1598, 1.0));
        _1639 = dot(vec3(isnan(0.0) ? _1620 : (isnan(_1620) ? 0.0 : max(_1620, 0.0)), isnan(0.0) ? _1616 : (isnan(_1616) ? 0.0 : max(_1616, 0.0)), isnan(0.0) ? _1612 : (isnan(_1612) ? 0.0 : max(_1612, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1627) ? 0.0 : (isnan(0.0) ? _1627 : max(0.0, _1627))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1639 = 1.0;
    }
    float _1650;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1641 = dot(vec4(cbModelParam._m0[40u]), vec4(_1596, _1597, _1598, 1.0));
        _1650 = dot(vec3(isnan(0.0) ? _1599 : (isnan(_1599) ? 0.0 : max(_1599, 0.0)), isnan(0.0) ? _1602 : (isnan(_1602) ? 0.0 : max(_1602, 0.0)), isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1641) ? 0.0 : (isnan(0.0) ? _1641 : max(0.0, _1641))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1650 = 1.0;
    }
    float _1654 = (_1650 * cbModelParam._m0[1u].x) + (_1639 * (1.0 - cbModelParam._m0[1u].x));
    float _1664 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _702);
    float _1665 = isnan(_1664) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1664 : min(cbModelParam._m0[25u].z, _1664));
    float _1746;
    float _1748;
    float _1750;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1713 = fma(_919, cbModelParam._m0[13u].z, fma(_915, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _911)) + cbModelParam._m0[13u].w;
        float _1717 = fma(_919, cbModelParam._m0[14u].z, fma(_915, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _911)) + cbModelParam._m0[14u].w;
        float _1721 = fma(_919, cbModelParam._m0[15u].z, fma(_915, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _911)) + cbModelParam._m0[15u].w;
        float _1724 = fma(_860, cbModelParam._m0[13u].z, fma(_859, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _858));
        float _1727 = fma(_860, cbModelParam._m0[14u].z, fma(_859, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _858));
        float _1730 = fma(_860, cbModelParam._m0[15u].z, fma(_859, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _858));
        float _1758;
        if (_1724 > 0.0)
        {
            _1758 = abs((1.0 - _1713) / _1724);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1724 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1713 + 1.0) / _1724);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1758 = frontier_phi_14_12_ladder;
        }
        float _1928;
        if (_1727 > 0.0)
        {
            _1928 = abs((1.0 - _1717) / _1727);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1727 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1717 + 1.0) / _1727);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1928 = frontier_phi_23_19_ladder;
        }
        float _2223;
        if (_1730 > 0.0)
        {
            _2223 = abs((1.0 - _1721) / _1730);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1730 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1721 + 1.0) / _1730);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2223 = frontier_phi_35_30_ladder;
        }
        float _2225 = isnan(_1928) ? _1758 : (isnan(_1758) ? _1928 : min(_1758, _1928));
        float _2226 = isnan(_2223) ? _2225 : (isnan(_2225) ? _2223 : min(_2225, _2223));
        float _2230 = (_2226 * _1724) + _1713;
        float _2231 = (_2226 * _1727) + _1717;
        float _2232 = (_2226 * _1730) + _1721;
        float _2233 = _2226 * 9.9999997473787516355514526367188e-05;
        float _2235 = (-1.0) - _2233;
        float _2237 = _2233 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2232 > _2237) || ((_2232 < _2235) || ((_2231 > _2237) || ((_2231 < _2235) || ((_2230 < _2235) || (_2230 > _2237))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2377 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2232, cbModelParam._m0[9u].z, fma(_2231, cbModelParam._m0[9u].y, _2230 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2232, cbModelParam._m0[10u].z, fma(_2231, cbModelParam._m0[10u].y, _2230 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2232, cbModelParam._m0[11u].z, fma(_2231, cbModelParam._m0[11u].y, _2230 * cbModelParam._m0[11u].x))), _1665);
            frontier_phi_13_35_ladder = _2377.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2377.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2377.x * cbModelParam._m0[1u].y;
        }
        _1746 = frontier_phi_13_35_ladder_2;
        _1748 = frontier_phi_13_35_ladder_1;
        _1750 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1734 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_858, _859, _860), _1665);
        _1746 = _1734.x * cbModelParam._m0[1u].y;
        _1748 = _1734.y * cbModelParam._m0[1u].y;
        _1750 = _1734.z * cbModelParam._m0[1u].y;
    }
    float _1754 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _702);
    float _1755 = isnan(_1754) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1754 : min(cbModelParam._m0[25u].w, _1754));
    float _1845;
    float _1847;
    float _1849;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1809 = fma(_919, cbModelParam._m0[21u].z, fma(_915, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _911)) + cbModelParam._m0[21u].w;
        float _1813 = fma(_919, cbModelParam._m0[22u].z, fma(_915, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _911)) + cbModelParam._m0[22u].w;
        float _1817 = fma(_919, cbModelParam._m0[23u].z, fma(_915, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _911)) + cbModelParam._m0[23u].w;
        float _1820 = fma(_860, cbModelParam._m0[21u].z, fma(_859, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _858));
        float _1823 = fma(_860, cbModelParam._m0[22u].z, fma(_859, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _858));
        float _1826 = fma(_860, cbModelParam._m0[23u].z, fma(_859, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _858));
        float _1933;
        if (_1820 > 0.0)
        {
            _1933 = abs((1.0 - _1809) / _1820);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1820 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1809 + 1.0) / _1820);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1933 = frontier_phi_25_21_ladder;
        }
        float _2250;
        if (_1823 > 0.0)
        {
            _2250 = abs((1.0 - _1813) / _1823);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1823 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1813 + 1.0) / _1823);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2250 = frontier_phi_37_32_ladder;
        }
        float _2577;
        if (_1826 > 0.0)
        {
            _2577 = abs((1.0 - _1817) / _1826);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1826 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1817 + 1.0) / _1826);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2577 = frontier_phi_47_44_ladder;
        }
        float _2579 = isnan(_2250) ? _1933 : (isnan(_1933) ? _2250 : min(_1933, _2250));
        float _2580 = isnan(_2577) ? _2579 : (isnan(_2579) ? _2577 : min(_2579, _2577));
        float _2584 = (_2580 * _1820) + _1809;
        float _2585 = (_2580 * _1823) + _1813;
        float _2586 = (_2580 * _1826) + _1817;
        float _2587 = _2580 * 9.9999997473787516355514526367188e-05;
        float _2588 = (-1.0) - _2587;
        float _2590 = _2587 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2586 > _2590) || ((_2586 < _2588) || ((_2585 > _2590) || ((_2585 < _2588) || ((_2584 < _2588) || (_2584 > _2590))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2704 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2586, cbModelParam._m0[17u].z, fma(_2585, cbModelParam._m0[17u].y, _2584 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2586, cbModelParam._m0[18u].z, fma(_2585, cbModelParam._m0[18u].y, _2584 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2586, cbModelParam._m0[19u].z, fma(_2585, cbModelParam._m0[19u].y, _2584 * cbModelParam._m0[19u].x))), _1755);
            frontier_phi_22_47_ladder = _2704.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2704.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2704.x * cbModelParam._m0[1u].z;
        }
        _1845 = frontier_phi_22_47_ladder_2;
        _1847 = frontier_phi_22_47_ladder_1;
        _1849 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1829 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_858, _859, _860), _1755);
        _1845 = _1829.x * cbModelParam._m0[1u].z;
        _1847 = _1829.y * cbModelParam._m0[1u].z;
        _1849 = _1829.z * cbModelParam._m0[1u].z;
    }
    float _1861 = ((((1.0 - _879) * ((_866 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_879 * _866)) * _850;
    float _1862 = _1861 * ((cbModelParam._m0[1u].w * (_1845 - _1746)) + _1746);
    float _1863 = _1861 * ((cbModelParam._m0[1u].w * (_1847 - _1748)) + _1748);
    float _1864 = _1861 * ((cbModelParam._m0[1u].w * (_1849 - _1750)) + _1750);
    float _1867 = fma(_1864, cbSceneParam._m0[89u].z, fma(_1863, cbSceneParam._m0[89u].y, _1862 * cbSceneParam._m0[89u].x));
    float _1870 = fma(_1864, cbSceneParam._m0[90u].z, fma(_1863, cbSceneParam._m0[90u].y, _1862 * cbSceneParam._m0[90u].x));
    float _1873 = fma(_1864, cbSceneParam._m0[91u].z, fma(_1863, cbSceneParam._m0[91u].y, _1862 * cbSceneParam._m0[91u].x));
    float _1907 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1911 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1915 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1919 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1920 = _1907 / _1919;
    float _1921 = _1911 / _1919;
    float _1922 = _1915 / _1919;
    float _2069;
    float _2070;
    float _2071;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1949 = ((uint(_1922 > cbSceneParam._m0[59u].y) + uint(_1922 > cbSceneParam._m0[59u].x)) + uint(_1922 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1950 = _1949 + 43u;
        uint _1958 = _1949 + 44u;
        uint _1966 = _1949 + 45u;
        uint _1974 = _1949 + 46u;
        float _1985 = fma(_1919, cbSceneParam._m0[_1950].w, fma(_1915, cbSceneParam._m0[_1950].z, fma(_1911, cbSceneParam._m0[_1950].y, _1907 * cbSceneParam._m0[_1950].x)));
        float _1989 = fma(_1919, cbSceneParam._m0[_1958].w, fma(_1915, cbSceneParam._m0[_1958].z, fma(_1911, cbSceneParam._m0[_1958].y, _1907 * cbSceneParam._m0[_1958].x)));
        float _1997 = fma(_1919, cbSceneParam._m0[_1974].w, fma(_1915, cbSceneParam._m0[_1974].z, fma(_1911, cbSceneParam._m0[_1974].y, _1907 * cbSceneParam._m0[_1974].x)));
        float _2002 = cbSceneParam._m0[33u].z * _1997;
        float _2004 = cbSceneParam._m0[33u].w * _1997;
        float _2007 = fma(_1919, cbSceneParam._m0[_1966].w, fma(_1915, cbSceneParam._m0[_1966].z, fma(_1911, cbSceneParam._m0[_1966].y, _1907 * cbSceneParam._m0[_1966].x))) / _1997;
        float _2055 = (cbSceneParam._m0[33u].x - sqrt(((_1921 * _1921) + (_1920 * _1920)) + (_1922 * _1922))) * cbSceneParam._m0[33u].y;
        float _4321 = isnan(0.0) ? _2055 : (isnan(_2055) ? 0.0 : max(_2055, 0.0));
        float _2062 = (isnan(1.0) ? _4321 : (isnan(_4321) ? 1.0 : min(_4321, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2002 + _1985) / _1997, (_2004 + _1989) / _1997), _2007), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2004 + _1985) / _1997, (_1989 - _2002) / _1997), _2007), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1985 - _2002) / _1997, (_1989 - _2004) / _1997), _2007), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1985 - _2004) / _1997, (_2002 + _1989) / _1997), _2007), 0.0)).x), vec4(0.25)));
        _2069 = 1.0 - (_2062 * cbSceneParam._m0[34u].x);
        _2070 = 1.0 - (_2062 * cbSceneParam._m0[34u].y);
        _2071 = 1.0 - (_2062 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2069 = 1.0;
        _2070 = 1.0;
        _2071 = 1.0;
    }
    float _2135;
    float _2137;
    float _2139;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2123 = fma(_1919, cbSceneParam._m0[63u].w, fma(_1915, cbSceneParam._m0[63u].z, fma(_1911, cbSceneParam._m0[63u].y, _1907 * cbSceneParam._m0[63u].x)));
        float _2124 = fma(_1919, cbSceneParam._m0[60u].w, fma(_1915, cbSceneParam._m0[60u].z, fma(_1911, cbSceneParam._m0[60u].y, _1907 * cbSceneParam._m0[60u].x))) / _2123;
        float _2125 = fma(_1919, cbSceneParam._m0[61u].w, fma(_1915, cbSceneParam._m0[61u].z, fma(_1911, cbSceneParam._m0[61u].y, _1907 * cbSceneParam._m0[61u].x))) / _2123;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2124 >= cbSceneParam._m0[64u].x) && (_2125 >= cbSceneParam._m0[64u].y)) && (_2124 <= cbSceneParam._m0[64u].z)) && (_2125 <= cbSceneParam._m0[64u].w))
        {
            float _2263 = fma(_1919, cbSceneParam._m0[62u].w, fma(_1915, cbSceneParam._m0[62u].z, fma(_1911, cbSceneParam._m0[62u].y, _1907 * cbSceneParam._m0[62u].x))) / _2123;
            float _2267 = isnan(cbSceneParam._m0[41u].w) ? _2263 : (isnan(_2263) ? cbSceneParam._m0[41u].w : max(_2263, cbSceneParam._m0[41u].w));
            float _2310 = (cbSceneParam._m0[33u].x - sqrt(((_1921 * _1921) + (_1920 * _1920)) + (_1922 * _1922))) * cbSceneParam._m0[33u].y;
            float _4337 = isnan(0.0) ? _2310 : (isnan(_2310) ? 0.0 : max(_2310, 0.0));
            float _2317 = (isnan(1.0) ? _4337 : (isnan(_4337) ? 1.0 : min(_4337, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2124, cbSceneParam._m0[33u].w + _2125), _2267), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2124, _2125 - cbSceneParam._m0[33u].z), _2267), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2124 - cbSceneParam._m0[33u].z, _2125 - cbSceneParam._m0[33u].w), _2267), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2124 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2125), _2267), 0.0)).x), vec4(0.25)));
            float _2321 = 1.0 - (_2317 * cbSceneParam._m0[34u].x);
            float _2322 = 1.0 - (_2317 * cbSceneParam._m0[34u].y);
            float _2323 = 1.0 - (_2317 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2323) ? _2071 : (isnan(_2071) ? _2323 : min(_2071, _2323));
            frontier_phi_34_33_ladder_1 = isnan(_2322) ? _2070 : (isnan(_2070) ? _2322 : min(_2070, _2322));
            frontier_phi_34_33_ladder_2 = isnan(_2321) ? _2069 : (isnan(_2069) ? _2321 : min(_2069, _2321));
        }
        else
        {
            frontier_phi_34_33_ladder = _2071;
            frontier_phi_34_33_ladder_1 = _2070;
            frontier_phi_34_33_ladder_2 = _2069;
        }
        _2135 = frontier_phi_34_33_ladder_2;
        _2137 = frontier_phi_34_33_ladder_1;
        _2139 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2135 = _2069;
        _2137 = _2070;
        _2139 = _2071;
    }
    uvec4 _2144 = floatBitsToUint(cbInstanceData._m0[_244 + 5u]);
    uint _2146 = _2144.x * 14u;
    uint _2147 = _2146 + 13u;
    float _2154 = _850 + (-1.0);
    float _2159 = (cbLight._m0[_2147].x * _2154) + 1.0;
    float _2160 = (cbLight._m0[_2147].y * _2154) + 1.0;
    float _2161 = (cbLight._m0[_2147].z * _2154) + 1.0;
    float _2162 = (cbLight._m0[_2147].w * _2154) + 1.0;
    uint _2163 = _2146 + 5u;
    float _2169 = isnan(1.0) ? _2160 : (isnan(_2160) ? 1.0 : min(_2160, 1.0));
    uint _2173 = _2146 + 4u;
    float _2182 = isnan(1.0) ? _2159 : (isnan(_2159) ? 1.0 : min(_2159, 1.0));
    uint _2186 = _2146 | 1u;
    float _2197 = dot(vec3(cbLight._m0[_2146].xyz), vec3(_699, _700, _701));
    float _2200 = dot(vec3(cbLight._m0[_2186].xyz), vec3(_699, _700, _701));
    float _4373 = isnan(0.0) ? _2197 : (isnan(_2197) ? 0.0 : max(_2197, 0.0));
    float _4384 = isnan(0.0) ? _2200 : (isnan(_2200) ? 0.0 : max(_2200, 0.0));
    float _2205 = (isnan(1.0) ? _4373 : (isnan(_4373) ? 1.0 : min(_4373, 1.0))) * 0.3183098733425140380859375;
    float _2207 = (isnan(1.0) ? _4384 : (isnan(_4384) ? 1.0 : min(_4384, 1.0))) * 0.3183098733425140380859375;
    float _2214 = ((cbLight._m0[_2163].x * _2169) * _2207) + (((cbLight._m0[_2173].x * _2135) * _2182) * _2205);
    float _2215 = ((_2169 * cbLight._m0[_2163].y) * _2207) + (((cbLight._m0[_2173].y * _2137) * _2182) * _2205);
    float _2216 = ((_2169 * cbLight._m0[_2163].z) * _2207) + (((cbLight._m0[_2173].z * _2139) * _2182) * _2205);
    uvec4 _2220 = floatBitsToUint(cbLight._m0[_2146 + 12u]);
    bool _2222 = _2220.x == 0u;
    float _2324;
    float _2326;
    float _2328;
    if (_2222)
    {
        _2324 = _2214;
        _2326 = _2215;
        _2328 = _2216;
    }
    else
    {
        uint _2332 = _2146 + 6u;
        float _2348 = (dot(vec3(cbLight._m0[_2146 + 2u].xyz), vec3(_699, _700, _701)) * 0.5) + 0.5;
        float _2349 = _2348 * _2348;
        float _4395 = isnan(0.0) ? _2349 : (isnan(_2349) ? 0.0 : max(_2349, 0.0));
        float _2350 = isnan(1.0) ? _4395 : (isnan(_4395) ? 1.0 : min(_4395, 1.0));
        float _2351 = isnan(1.0) ? _2161 : (isnan(_2161) ? 1.0 : min(_2161, 1.0));
        _2324 = (((cbLight._m0[_2332].x * 0.3183098733425140380859375) * _2350) * _2351) + _2214;
        _2326 = (((cbLight._m0[_2332].y * 0.3183098733425140380859375) * _2350) * _2351) + _2215;
        _2328 = (((cbLight._m0[_2332].z * 0.3183098733425140380859375) * _2350) * _2351) + _2216;
    }
    bool _2331 = _2220.y == 0u;
    float _2386;
    float _2388;
    float _2390;
    if (_2331)
    {
        _2386 = _2324;
        _2388 = _2326;
        _2390 = _2328;
    }
    else
    {
        uint _2548 = _2146 + 7u;
        float _2564 = (dot(vec3(cbLight._m0[_2146 + 3u].xyz), vec3(_699, _700, _701)) * 0.5) + 0.5;
        float _2565 = _2564 * _2564;
        float _4411 = isnan(0.0) ? _2565 : (isnan(_2565) ? 0.0 : max(_2565, 0.0));
        float _2566 = isnan(1.0) ? _4411 : (isnan(_4411) ? 1.0 : min(_4411, 1.0));
        float _2567 = isnan(1.0) ? _2162 : (isnan(_2162) ? 1.0 : min(_2162, 1.0));
        _2386 = (((cbLight._m0[_2548].x * 0.3183098733425140380859375) * _2566) * _2567) + _2324;
        _2388 = (((cbLight._m0[_2548].y * 0.3183098733425140380859375) * _2566) * _2567) + _2326;
        _2390 = (((cbLight._m0[_2548].z * 0.3183098733425140380859375) * _2566) * _2567) + _2328;
    }
    uint _2393 = _2146 + 8u;
    float _2406 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2146].w)) * _702) * 0.949999988079071044921875);
    float _2407 = _2406 * _2406;
    float _2408 = cbLight._m0[_2146].x + _779;
    float _2409 = cbLight._m0[_2146].y + _780;
    float _2410 = cbLight._m0[_2146].z + _781;
    float _2414 = inversesqrt(dot(vec3(_2408, _2409, _2410), vec3(_2408, _2409, _2410)));
    float _2415 = _2414 * _2408;
    float _2416 = _2414 * _2409;
    float _2417 = _2414 * _2410;
    float _2418 = dot(vec3(_699, _700, _701), vec3(cbLight._m0[_2146].xyz));
    float _4427 = isnan(0.0) ? _2418 : (isnan(_2418) ? 0.0 : max(_2418, 0.0));
    float _2421 = isnan(1.0) ? _4427 : (isnan(_4427) ? 1.0 : min(_4427, 1.0));
    float _4438 = isnan(0.0) ? _851 : (isnan(_851) ? 0.0 : max(_851, 0.0));
    float _2422 = isnan(1.0) ? _4438 : (isnan(_4438) ? 1.0 : min(_4438, 1.0));
    float _2423 = dot(vec3(_699, _700, _701), vec3(_2415, _2416, _2417));
    float _4449 = isnan(0.0) ? _2423 : (isnan(_2423) ? 0.0 : max(_2423, 0.0));
    float _2426 = isnan(1.0) ? _4449 : (isnan(_4449) ? 1.0 : min(_4449, 1.0));
    float _2427 = dot(vec3(cbLight._m0[_2146].xyz), vec3(_2415, _2416, _2417));
    float _4460 = isnan(0.0) ? _2427 : (isnan(_2427) ? 0.0 : max(_2427, 0.0));
    float _2431 = _2407 * _2407;
    float _2435 = ((_2426 * _2426) * (_2431 + (-1.0))) + 1.0;
    float _2446 = (exp2(log2(1.0 - (isnan(1.0) ? _4460 : (isnan(_4460) ? 1.0 : min(_4460, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2447 = 1.0 - _2407;
    float _2458 = (0.5 / (((_2422 * ((_2421 * _2447) + _2407)) + 9.9999999392252902907785028219223e-09) + (((_2422 * _2447) + _2407) * _2421))) * _2421;
    float _4471 = isnan(0.0) ? _2458 : (isnan(_2458) ? 0.0 : max(_2458, 0.0));
    float _2460 = (isnan(1.0) ? _4471 : (isnan(_4471) ? 1.0 : min(_4471, 1.0))) * (_2431 / ((_2435 * _2435) * 3.141590118408203125));
    uint _2474 = _2146 + 9u;
    float _2485 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2186].w)) * _702) * 0.949999988079071044921875);
    float _2486 = _2485 * _2485;
    float _2487 = cbLight._m0[_2186].x + _779;
    float _2488 = cbLight._m0[_2186].y + _780;
    float _2489 = cbLight._m0[_2186].z + _781;
    float _2493 = inversesqrt(dot(vec3(_2487, _2488, _2489), vec3(_2487, _2488, _2489)));
    float _2494 = _2493 * _2487;
    float _2495 = _2493 * _2488;
    float _2496 = _2493 * _2489;
    float _2497 = dot(vec3(_699, _700, _701), vec3(cbLight._m0[_2186].xyz));
    float _4482 = isnan(0.0) ? _2497 : (isnan(_2497) ? 0.0 : max(_2497, 0.0));
    float _2500 = isnan(1.0) ? _4482 : (isnan(_4482) ? 1.0 : min(_4482, 1.0));
    float _2501 = dot(vec3(_699, _700, _701), vec3(_2494, _2495, _2496));
    float _4493 = isnan(0.0) ? _2501 : (isnan(_2501) ? 0.0 : max(_2501, 0.0));
    float _2504 = isnan(1.0) ? _4493 : (isnan(_4493) ? 1.0 : min(_4493, 1.0));
    float _2505 = dot(vec3(cbLight._m0[_2186].xyz), vec3(_2494, _2495, _2496));
    float _4504 = isnan(0.0) ? _2505 : (isnan(_2505) ? 0.0 : max(_2505, 0.0));
    float _2509 = _2486 * _2486;
    float _2513 = ((_2504 * _2504) * (_2509 + (-1.0))) + 1.0;
    float _2522 = (exp2(log2(1.0 - (isnan(1.0) ? _4504 : (isnan(_4504) ? 1.0 : min(_4504, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2523 = 1.0 - _2486;
    float _2533 = (0.5 / (((_2422 * ((_2500 * _2523) + _2486)) + 9.9999999392252902907785028219223e-09) + (((_2422 * _2523) + _2486) * _2500))) * _2500;
    float _4515 = isnan(0.0) ? _2533 : (isnan(_2533) ? 0.0 : max(_2533, 0.0));
    float _2535 = (isnan(1.0) ? _4515 : (isnan(_4515) ? 1.0 : min(_4515, 1.0))) * (_2509 / ((_2513 * _2513) * 3.141590118408203125));
    float _2545 = (((_2522 * cbLight._m0[_2474].x) * _2535) * _2169) + ((((cbLight._m0[_2393].x * _2135) * _2446) * _2460) * _2182);
    float _2546 = (((_2522 * cbLight._m0[_2474].y) * _2535) * _2169) + ((((cbLight._m0[_2393].y * _2137) * _2446) * _2460) * _2182);
    float _2547 = (((_2522 * cbLight._m0[_2474].z) * _2535) * _2169) + ((((cbLight._m0[_2393].z * _2139) * _2446) * _2460) * _2182);
    float _2603;
    float _2605;
    float _2607;
    if (_2222)
    {
        _2603 = _2545;
        _2605 = _2546;
        _2607 = _2547;
    }
    else
    {
        uint _2609 = _2146 + 2u;
        uint _2613 = _2146 + 10u;
        float _2627 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2609].w)) * _702) * 0.949999988079071044921875);
        float _2628 = _2627 * _2627;
        float _2629 = cbLight._m0[_2609].x + _779;
        float _2630 = cbLight._m0[_2609].y + _780;
        float _2631 = cbLight._m0[_2609].z + _781;
        float _2635 = inversesqrt(dot(vec3(_2629, _2630, _2631), vec3(_2629, _2630, _2631)));
        float _2636 = _2635 * _2629;
        float _2637 = _2635 * _2630;
        float _2638 = _2635 * _2631;
        float _2639 = dot(vec3(_699, _700, _701), vec3(cbLight._m0[_2609].xyz));
        float _4526 = isnan(0.0) ? _2639 : (isnan(_2639) ? 0.0 : max(_2639, 0.0));
        float _2642 = isnan(1.0) ? _4526 : (isnan(_4526) ? 1.0 : min(_4526, 1.0));
        float _2643 = dot(vec3(_699, _700, _701), vec3(_2636, _2637, _2638));
        float _4537 = isnan(0.0) ? _2643 : (isnan(_2643) ? 0.0 : max(_2643, 0.0));
        float _2646 = isnan(1.0) ? _4537 : (isnan(_4537) ? 1.0 : min(_4537, 1.0));
        float _2647 = dot(vec3(cbLight._m0[_2609].xyz), vec3(_2636, _2637, _2638));
        float _4548 = isnan(0.0) ? _2647 : (isnan(_2647) ? 0.0 : max(_2647, 0.0));
        float _2651 = _2628 * _2628;
        float _2655 = ((_2646 * _2646) * (_2651 + (-1.0))) + 1.0;
        float _2664 = (exp2(log2(1.0 - (isnan(1.0) ? _4548 : (isnan(_4548) ? 1.0 : min(_4548, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2665 = 1.0 - _2628;
        float _2675 = (0.5 / (((_2422 * ((_2642 * _2665) + _2628)) + 9.9999999392252902907785028219223e-09) + (((_2422 * _2665) + _2628) * _2642))) * _2642;
        float _4559 = isnan(0.0) ? _2675 : (isnan(_2675) ? 0.0 : max(_2675, 0.0));
        float _2677 = (isnan(1.0) ? _4559 : (isnan(_4559) ? 1.0 : min(_4559, 1.0))) * (_2651 / ((_2655 * _2655) * 3.141590118408203125));
        float _2678 = isnan(1.0) ? _2161 : (isnan(_2161) ? 1.0 : min(_2161, 1.0));
        _2603 = (((_2664 * cbLight._m0[_2613].x) * _2677) * _2678) + _2545;
        _2605 = (((_2664 * cbLight._m0[_2613].y) * _2677) * _2678) + _2546;
        _2607 = (((_2664 * cbLight._m0[_2613].z) * _2677) * _2678) + _2547;
    }
    float _2709;
    float _2711;
    float _2713;
    if (_2331)
    {
        _2709 = _2603;
        _2711 = _2605;
        _2713 = _2607;
    }
    else
    {
        uint _2720 = _2146 + 3u;
        uint _2724 = _2146 + 11u;
        float _2738 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2720].w)) * _702) * 0.949999988079071044921875);
        float _2739 = _2738 * _2738;
        float _2740 = cbLight._m0[_2720].x + _779;
        float _2741 = cbLight._m0[_2720].y + _780;
        float _2742 = cbLight._m0[_2720].z + _781;
        float _2746 = inversesqrt(dot(vec3(_2740, _2741, _2742), vec3(_2740, _2741, _2742)));
        float _2747 = _2746 * _2740;
        float _2748 = _2746 * _2741;
        float _2749 = _2746 * _2742;
        float _2750 = dot(vec3(_699, _700, _701), vec3(cbLight._m0[_2720].xyz));
        float _4575 = isnan(0.0) ? _2750 : (isnan(_2750) ? 0.0 : max(_2750, 0.0));
        float _2753 = isnan(1.0) ? _4575 : (isnan(_4575) ? 1.0 : min(_4575, 1.0));
        float _2754 = dot(vec3(_699, _700, _701), vec3(_2747, _2748, _2749));
        float _4586 = isnan(0.0) ? _2754 : (isnan(_2754) ? 0.0 : max(_2754, 0.0));
        float _2757 = isnan(1.0) ? _4586 : (isnan(_4586) ? 1.0 : min(_4586, 1.0));
        float _2758 = dot(vec3(cbLight._m0[_2720].xyz), vec3(_2747, _2748, _2749));
        float _4597 = isnan(0.0) ? _2758 : (isnan(_2758) ? 0.0 : max(_2758, 0.0));
        float _2762 = _2739 * _2739;
        float _2766 = ((_2757 * _2757) * (_2762 + (-1.0))) + 1.0;
        float _2775 = (exp2(log2(1.0 - (isnan(1.0) ? _4597 : (isnan(_4597) ? 1.0 : min(_4597, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2776 = 1.0 - _2739;
        float _2786 = (0.5 / (((_2422 * ((_2753 * _2776) + _2739)) + 9.9999999392252902907785028219223e-09) + (((_2422 * _2776) + _2739) * _2753))) * _2753;
        float _4608 = isnan(0.0) ? _2786 : (isnan(_2786) ? 0.0 : max(_2786, 0.0));
        float _2788 = (isnan(1.0) ? _4608 : (isnan(_4608) ? 1.0 : min(_4608, 1.0))) * (_2762 / ((_2766 * _2766) * 3.141590118408203125));
        float _2789 = isnan(1.0) ? _2162 : (isnan(_2162) ? 1.0 : min(_2162, 1.0));
        _2709 = (((_2775 * cbLight._m0[_2724].x) * _2788) * _2789) + _2603;
        _2711 = (((_2775 * cbLight._m0[_2724].y) * _2788) * _2789) + _2605;
        _2713 = (((_2775 * cbLight._m0[_2724].z) * _2788) * _2789) + _2607;
    }
    float _2855;
    float _2857;
    float _2859;
    float _2861;
    float _2863;
    float _2865;
    if (_2144.y == 0u)
    {
        uvec4 _2810 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2811 = _2810.x;
        uint _2822 = uint((float(_2810.y) * floor(float(uint(cbSceneParam._m0[85u].y * _788) / _2811))) + floor(float(uint(cbSceneParam._m0[85u].x * _787) / _2811)));
        float _2832 = (log2(_1922 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2833 = isnan(0.0) ? _2832 : (isnan(_2832) ? 0.0 : max(_2832, 0.0));
        uint _2836 = uint(isnan(14.0) ? _2833 : (isnan(_2833) ? 14.0 : min(_2833, 14.0)));
        uvec4 _2841 = texelFetch(g_lightClusterGridBuffer, int(((_2836 << 2u) + (_2822 << 6u)) >> 2u));
        uint _2842 = _2841.x;
        uint _2843 = _2810.z;
        float _2922;
        float _2924;
        float _2926;
        float _2928;
        float _2930;
        float _2932;
        if (((((1u << ((_2843 >> 4u) & 15u)) + 4294967295u) & _2842) == 0u) || ((_2843 & 240u) == 0u))
        {
            _2922 = 0.0;
            _2924 = 0.0;
            _2926 = 0.0;
            _2928 = 0.0;
            _2930 = 0.0;
            _2932 = 0.0;
        }
        else
        {
            float _2923;
            float _2925;
            float _2927;
            float _2929;
            float _2931;
            float _2933;
            float _3067 = 0.0;
            float _3068 = 0.0;
            float _3069 = 0.0;
            float _3070 = 0.0;
            float _3071 = 0.0;
            float _3072 = 0.0;
            uint _3073 = 0u;
            uint _3082;
            bool _3083;
            for (;;)
            {
                _3082 = texelFetch(g_lightClassification, int((((_2836 << 5u) + (_2822 << 9u)) + (_3073 << 2u)) >> 2u)).x;
                _3083 = _3082 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3083)
                {
                    frontier_phi_66_pred = _3072;
                    frontier_phi_66_pred_1 = _3071;
                    frontier_phi_66_pred_2 = _3070;
                    frontier_phi_66_pred_3 = _3069;
                    frontier_phi_66_pred_4 = _3068;
                    frontier_phi_66_pred_5 = _3067;
                }
                else
                {
                    float _3191;
                    float _3192;
                    float _3193;
                    float _3194;
                    float _3195;
                    float _3196;
                    uint _3197;
                    _3191 = _3067;
                    _3192 = _3068;
                    _3193 = _3069;
                    _3194 = _3070;
                    _3195 = _3071;
                    _3196 = _3072;
                    _3197 = _3082;
                    float _3123;
                    float _3124;
                    float _3125;
                    float _3126;
                    float _3127;
                    float _3128;
                    for (;;)
                    {
                        uint _3201 = uint(findLSB(_3197)) + (_3073 << 5u);
                        uint _3198 = (_3197 + 4294967295u) & _3197;
                        uint _3203 = _3201 * 48u;
                        vec4 _3217 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3203)).x, texelFetch(g_PointLightRenderingBuffer, int(_3203 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3203 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3203 + 3u)).x));
                        uint _3223 = (_3201 * 48u) + 4u;
                        vec4 _3236 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3223)).x, texelFetch(g_PointLightRenderingBuffer, int(_3223 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3223 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3223 + 3u)).x));
                        uint _3242 = (_3201 * 48u) + 8u;
                        vec3 _3253 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3242)).x, texelFetch(g_PointLightRenderingBuffer, int(_3242 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3242 + 2u)).x));
                        float _3257 = _3217.x - _1920;
                        float _3258 = _3217.y - _1921;
                        float _3259 = _3217.z - _1922;
                        float _3260 = dot(vec3(_3257, _3258, _3259), vec3(_3257, _3258, _3259));
                        float _3263 = inversesqrt(_3260);
                        float _3264 = _3263 * _3257;
                        float _3265 = _3263 * _3258;
                        float _3266 = _3263 * _3259;
                        float _3267 = dot(vec3(_806, _809, _812), vec3(_3264, _3265, _3266));
                        float _3272 = 1.0 - (_3260 * _3217.w);
                        float _4634 = isnan(0.0) ? _3272 : (isnan(_3272) ? 0.0 : max(_3272, 0.0));
                        float _3273 = isnan(1.0) ? _4634 : (isnan(_4634) ? 1.0 : min(_4634, 1.0));
                        float _3274 = sqrt(_3260) * _3236.w;
                        float _3277 = 1.39999997615814208984375 / (_3274 + 1.39999997615814208984375);
                        float _3278 = _3277 * _3277;
                        float _3281 = ((1.0 - _3278) * _3267) + _3278;
                        float _3284 = _3274 * _3274;
                        float _3288 = ((isnan(0.0) ? _3281 : (isnan(_3281) ? 0.0 : max(_3281, 0.0))) * _3273) / ((_3284 * 0.699999988079071044921875) + 1.0);
                        float _3292 = (-0.0) - _1920;
                        float _3293 = (-0.0) - _1921;
                        float _3294 = (-0.0) - _1922;
                        float _3298 = inversesqrt(dot(vec3(_3292, _3293, _3294), vec3(_3292, _3293, _3294)));
                        float _3299 = _3298 * _3292;
                        float _3300 = _3298 * _3293;
                        float _3301 = _3298 * _3294;
                        float _3308 = exp2(log2(1.0 / ((_3284 * 3.5) + 5.0)) * 0.25);
                        float _3309 = 1.0 - _866;
                        float _3316 = sqrt(1.0 - ((1.0 - (_3309 * _3309)) * (1.0 - (_3308 * _3308))));
                        float _3317 = _3316 * _3316;
                        float _3318 = _3317 * _3317;
                        float _3319 = _3299 + _3264;
                        float _3320 = _3300 + _3265;
                        float _3321 = _3301 + _3266;
                        float _3325 = inversesqrt(dot(vec3(_3319, _3320, _3321), vec3(_3319, _3320, _3321)));
                        float _3329 = dot(vec3(_806, _809, _812), vec3(_3299, _3300, _3301));
                        float _4650 = isnan(0.0) ? _3329 : (isnan(_3329) ? 0.0 : max(_3329, 0.0));
                        float _3332 = isnan(1.0) ? _4650 : (isnan(_4650) ? 1.0 : min(_4650, 1.0));
                        float _3333 = dot(vec3(_806, _809, _812), vec3(_3325 * _3319, _3325 * _3320, _3325 * _3321));
                        float _4661 = isnan(0.0) ? _3333 : (isnan(_3333) ? 0.0 : max(_3333, 0.0));
                        float _3336 = isnan(1.0) ? _4661 : (isnan(_4661) ? 1.0 : min(_4661, 1.0));
                        float _3340 = ((_3336 * _3336) * (_3318 + (-1.0))) + 1.0;
                        float _3341 = _3277 * _3317;
                        float _3342 = _3341 * _3341;
                        float _3345 = ((1.0 - _3342) * _3267) + _3342;
                        float _4672 = isnan(0.0) ? _3345 : (isnan(_3345) ? 0.0 : max(_3345, 0.0));
                        float _3346 = isnan(1.0) ? _4672 : (isnan(_4672) ? 1.0 : min(_4672, 1.0));
                        float _3347 = 1.0 - _3317;
                        float _3357 = (0.5 / (((_3346 * ((_3332 * _3347) + _3317)) + 9.9999999392252902907785028219223e-09) + (((_3346 * _3347) + _3317) * _3332))) * _3346;
                        float _4683 = isnan(0.0) ? _3357 : (isnan(_3357) ? 0.0 : max(_3357, 0.0));
                        float _3368 = (((_3318 * 3.1415927410125732421875) * (isnan(1.0) ? _4683 : (isnan(_4683) ? 1.0 : min(_4683, 1.0)))) / ((_3340 * _3340) * ((_3284 * 2.1991131305694580078125) + 3.141590118408203125))) * _3273;
                        _3126 = (_3288 * _3236.x) + _3194;
                        _3127 = (_3288 * _3236.y) + _3195;
                        _3128 = (_3288 * _3236.z) + _3196;
                        _3123 = (_3368 * _3253.x) + _3191;
                        _3124 = (_3368 * _3253.y) + _3192;
                        _3125 = (_3368 * _3253.z) + _3193;
                        if (_3198 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3191 = _3123;
                            _3192 = _3124;
                            _3193 = _3125;
                            _3194 = _3126;
                            _3195 = _3127;
                            _3196 = _3128;
                            _3197 = _3198;
                        }
                    }
                    frontier_phi_66_pred = _3128;
                    frontier_phi_66_pred_1 = _3127;
                    frontier_phi_66_pred_2 = _3126;
                    frontier_phi_66_pred_3 = _3125;
                    frontier_phi_66_pred_4 = _3124;
                    frontier_phi_66_pred_5 = _3123;
                }
                _2933 = frontier_phi_66_pred;
                _2931 = frontier_phi_66_pred_1;
                _2929 = frontier_phi_66_pred_2;
                _2927 = frontier_phi_66_pred_3;
                _2925 = frontier_phi_66_pred_4;
                _2923 = frontier_phi_66_pred_5;
                uint _3074 = _3073 + 1u;
                if (_3074 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3067 = _2923;
                    _3068 = _2925;
                    _3069 = _2927;
                    _3070 = _2929;
                    _3071 = _2931;
                    _3072 = _2933;
                    _3073 = _3074;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2922 = _2923;
            _2924 = _2925;
            _2926 = _2927;
            _2928 = _2929;
            _2930 = _2931;
            _2932 = _2933;
        }
        uvec4 _2936 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2937 = _2936.z;
        uint _2939 = (_2937 >> 8u) & 15u;
        float _3035;
        float _3037;
        float _3039;
        float _3041;
        float _3043;
        float _3045;
        if (((4294967295u << _2939) & _2842) == 0u)
        {
            _3035 = _2922;
            _3037 = _2924;
            _3039 = _2926;
            _3041 = _2928;
            _3043 = _2930;
            _3045 = _2932;
        }
        else
        {
            float _3060 = inversesqrt(dot(vec3(_1920, _1921, _1922), vec3(_1920, _1921, _1922)));
            float _3061 = _3060 * _1920;
            float _3062 = _3060 * _1921;
            float _3063 = _3060 * _1922;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2939 < ((_2937 >> 12u) & 15u))
            {
                float _3036;
                float _3038;
                float _3040;
                float _3042;
                float _3044;
                float _3046;
                float _3174 = _2922;
                float _3175 = _2924;
                float _3176 = _2926;
                float _3177 = _2928;
                float _3178 = _2930;
                float _3179 = _2932;
                uint _3180 = _2939;
                uint _3189;
                bool _3190;
                for (;;)
                {
                    _3189 = texelFetch(g_lightClassification, int((((_2836 << 5u) + (_2822 << 9u)) + (_3180 << 2u)) >> 2u)).x;
                    _3190 = _3189 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3190)
                    {
                        frontier_phi_72_pred = _3179;
                        frontier_phi_72_pred_1 = _3178;
                        frontier_phi_72_pred_2 = _3177;
                        frontier_phi_72_pred_3 = _3176;
                        frontier_phi_72_pred_4 = _3175;
                        frontier_phi_72_pred_5 = _3174;
                    }
                    else
                    {
                        float _3373;
                        float _3374;
                        float _3375;
                        float _3376;
                        float _3377;
                        float _3378;
                        float _3666;
                        float _3667;
                        float _3668;
                        float _3669;
                        float _3670;
                        float _3671;
                        float _3386 = _3174;
                        float _3387 = _3175;
                        float _3388 = _3176;
                        float _3389 = _3177;
                        float _3390 = _3178;
                        float _3391 = _3179;
                        uint _3392 = _3189;
                        uint _3393;
                        vec4 _3418;
                        float _3419;
                        vec4 _3434;
                        vec3 _3446;
                        vec4 _3461;
                        vec4 _3476;
                        float _3522;
                        bool _3523;
                        for (;;)
                        {
                            uint _3403 = ((_3180 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3392));
                            _3393 = (_3392 + 4294967295u) & _3392;
                            uint _3405 = _3403 * 40u;
                            _3418 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3405)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3405 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3405 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3405 + 3u)).x));
                            _3419 = _3418.w;
                            uint _3421 = (_3403 * 40u) + 4u;
                            _3434 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3421)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3421 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3421 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3421 + 3u)).x));
                            uint _3436 = (_3403 * 40u) + 8u;
                            _3446 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3436)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3436 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3436 + 2u)).x));
                            uint _3448 = (_3403 * 40u) + 16u;
                            _3461 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3448)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3448 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3448 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3448 + 3u)).x));
                            uint _3463 = (_3403 * 40u) + 20u;
                            _3476 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3463)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3463 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3463 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3463 + 3u)).x));
                            uint _3478 = (_3403 * 40u) + 24u;
                            vec4 _3491 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3478)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3478 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3478 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3478 + 3u)).x));
                            uint _3497 = (_3403 * 40u) + 28u;
                            vec4 _3510 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3497)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3497 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3497 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3497 + 3u)).x));
                            _3522 = fma(_1922, _3510.z, fma(_1921, _3510.y, _3510.x * _1920)) + _3510.w;
                            _3523 = !((fma(_1922, _3491.z, fma(_1921, _3491.y, _3491.x * _1920)) + _3491.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3523)
                            {
                                float _3550 = _3418.x - _1920;
                                float _3551 = _3418.y - _1921;
                                float _3552 = _3418.z - _1922;
                                float _3553 = dot(vec3(_3550, _3551, _3552), vec3(_3550, _3551, _3552));
                                float _3556 = inversesqrt(_3553);
                                float _3557 = _3556 * _3550;
                                float _3558 = _3556 * _3551;
                                float _3559 = _3556 * _3552;
                                float _3563 = 1.0 - (_3553 / (_3419 * _3419));
                                float _4694 = isnan(0.0) ? _3563 : (isnan(_3563) ? 0.0 : max(_3563, 0.0));
                                float _3564 = isnan(1.0) ? _4694 : (isnan(_4694) ? 1.0 : min(_4694, 1.0));
                                float _3568 = sqrt(_3553) * _3434.w;
                                float _3570 = 1.39999997615814208984375 / (_3568 + 1.39999997615814208984375);
                                float _3571 = _3570 * _3570;
                                float _3574 = ((1.0 - _3571) * dot(vec3(_3557, _3558, _3559), vec3(_806, _809, _812))) + _3571;
                                float _3577 = _3568 * _3568;
                                float _3581 = (fma(_1922, _3461.z, fma(_1921, _3461.y, _3461.x * _1920)) + _3461.w) / _3522;
                                float _3582 = (fma(_1922, _3476.z, fma(_1921, _3476.y, _3476.x * _1920)) + _3476.w) / _3522;
                                float _3586 = 1.0 - dot(vec2(_3581, _3582), vec2(_3581, _3582));
                                float _4710 = isnan(0.0) ? _3586 : (isnan(_3586) ? 0.0 : max(_3586, 0.0));
                                float _3587 = isnan(1.0) ? _4710 : (isnan(_4710) ? 1.0 : min(_4710, 1.0));
                                float _3588 = _3587 * (((isnan(0.0) ? _3574 : (isnan(_3574) ? 0.0 : max(_3574, 0.0))) * _3564) / ((_3577 * 0.699999988079071044921875) + 1.0));
                                float _3600 = exp2(log2(1.0 / ((_3577 * 3.5) + 5.0)) * 0.25);
                                float _3601 = 1.0 - _866;
                                float _3608 = sqrt(1.0 - ((1.0 - (_3601 * _3601)) * (1.0 - (_3600 * _3600))));
                                float _3609 = _3608 * _3608;
                                float _3610 = _3609 * _3609;
                                float _3611 = _3557 - _3061;
                                float _3612 = _3558 - _3062;
                                float _3613 = _3559 - _3063;
                                float _3617 = inversesqrt(dot(vec3(_3611, _3612, _3613), vec3(_3611, _3612, _3613)));
                                float _3621 = dot(vec3(_806, _809, _812), vec3((-0.0) - _3061, (-0.0) - _3062, (-0.0) - _3063));
                                float _4721 = isnan(0.0) ? _3621 : (isnan(_3621) ? 0.0 : max(_3621, 0.0));
                                float _3624 = isnan(1.0) ? _4721 : (isnan(_4721) ? 1.0 : min(_4721, 1.0));
                                float _3625 = dot(vec3(_806, _809, _812), vec3(_3617 * _3611, _3617 * _3612, _3617 * _3613));
                                float _4732 = isnan(0.0) ? _3625 : (isnan(_3625) ? 0.0 : max(_3625, 0.0));
                                float _3628 = isnan(1.0) ? _4732 : (isnan(_4732) ? 1.0 : min(_4732, 1.0));
                                float _3632 = ((_3628 * _3628) * (_3610 + (-1.0))) + 1.0;
                                float _3633 = _3570 * _3609;
                                float _3634 = _3633 * _3633;
                                float _3640 = ((1.0 - _3634) * dot(vec3(_806, _809, _812), vec3(_3557, _3558, _3559))) + _3634;
                                float _4743 = isnan(0.0) ? _3640 : (isnan(_3640) ? 0.0 : max(_3640, 0.0));
                                float _3641 = isnan(1.0) ? _4743 : (isnan(_4743) ? 1.0 : min(_4743, 1.0));
                                float _3642 = 1.0 - _3609;
                                float _3652 = (0.5 / (((_3641 * ((_3624 * _3642) + _3609)) + 9.9999999392252902907785028219223e-09) + (((_3641 * _3642) + _3609) * _3624))) * _3641;
                                float _4754 = isnan(0.0) ? _3652 : (isnan(_3652) ? 0.0 : max(_3652, 0.0));
                                float _3662 = (_3587 * _3564) * (((_3610 * 3.1415927410125732421875) * (isnan(1.0) ? _4754 : (isnan(_4754) ? 1.0 : min(_4754, 1.0)))) / ((_3632 * _3632) * ((_3577 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3588 * _3434.y;
                                frontier_phi_78_pred_1 = _3588 * _3434.x;
                                frontier_phi_78_pred_2 = _3662 * _3446.z;
                                frontier_phi_78_pred_3 = _3662 * _3446.y;
                                frontier_phi_78_pred_4 = _3662 * _3446.x;
                                frontier_phi_78_pred_5 = _3588 * _3434.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3670 = frontier_phi_78_pred;
                            _3669 = frontier_phi_78_pred_1;
                            _3668 = frontier_phi_78_pred_2;
                            _3667 = frontier_phi_78_pred_3;
                            _3666 = frontier_phi_78_pred_4;
                            _3671 = frontier_phi_78_pred_5;
                            _3376 = _3669 + _3389;
                            _3377 = _3670 + _3390;
                            _3378 = _3671 + _3391;
                            _3373 = _3666 + _3386;
                            _3374 = _3667 + _3387;
                            _3375 = _3668 + _3388;
                            if (_3393 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3386 = _3373;
                                _3387 = _3374;
                                _3388 = _3375;
                                _3389 = _3376;
                                _3390 = _3377;
                                _3391 = _3378;
                                _3392 = _3393;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3378;
                        frontier_phi_72_pred_1 = _3377;
                        frontier_phi_72_pred_2 = _3376;
                        frontier_phi_72_pred_3 = _3375;
                        frontier_phi_72_pred_4 = _3374;
                        frontier_phi_72_pred_5 = _3373;
                    }
                    _3046 = frontier_phi_72_pred;
                    _3044 = frontier_phi_72_pred_1;
                    _3042 = frontier_phi_72_pred_2;
                    _3040 = frontier_phi_72_pred_3;
                    _3038 = frontier_phi_72_pred_4;
                    _3036 = frontier_phi_72_pred_5;
                    uint _3181 = _3180 + 1u;
                    if (_3181 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3174 = _3036;
                        _3175 = _3038;
                        _3176 = _3040;
                        _3177 = _3042;
                        _3178 = _3044;
                        _3179 = _3046;
                        _3180 = _3181;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3046;
                frontier_phi_60_61_ladder_1 = _3044;
                frontier_phi_60_61_ladder_2 = _3040;
                frontier_phi_60_61_ladder_3 = _3038;
                frontier_phi_60_61_ladder_4 = _3036;
                frontier_phi_60_61_ladder_5 = _3042;
            }
            else
            {
                frontier_phi_60_61_ladder = _2932;
                frontier_phi_60_61_ladder_1 = _2930;
                frontier_phi_60_61_ladder_2 = _2926;
                frontier_phi_60_61_ladder_3 = _2924;
                frontier_phi_60_61_ladder_4 = _2922;
                frontier_phi_60_61_ladder_5 = _2928;
            }
            _3035 = frontier_phi_60_61_ladder_4;
            _3037 = frontier_phi_60_61_ladder_3;
            _3039 = frontier_phi_60_61_ladder_2;
            _3041 = frontier_phi_60_61_ladder_5;
            _3043 = frontier_phi_60_61_ladder_1;
            _3045 = frontier_phi_60_61_ladder;
        }
        float _3050 = isnan(1.0) ? _850 : (isnan(_850) ? 1.0 : min(_850, 1.0));
        _2855 = (_3050 * _3041) + _2386;
        _2857 = (_3050 * _3043) + _2388;
        _2859 = (_3050 * _3045) + _2390;
        _2861 = ((_3035 * 0.039999999105930328369140625) * _3050) + _2709;
        _2863 = ((_3037 * 0.039999999105930328369140625) * _3050) + _2711;
        _2865 = ((_3039 * 0.039999999105930328369140625) * _3050) + _2713;
    }
    else
    {
        _2855 = _2386;
        _2857 = _2388;
        _2859 = _2390;
        _2861 = _2709;
        _2863 = _2711;
        _2865 = _2713;
    }
    float _4770 = isnan(0.0) ? _835 : (isnan(_835) ? 0.0 : max(_835, 0.0));
    float _4781 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
    float _4792 = isnan(0.0) ? _837 : (isnan(_837) ? 0.0 : max(_837, 0.0));
    uint _2885 = _244 + 6u;
    float _2893 = _787 / cbSceneParam._m0[86u].x;
    float _2894 = _788 / cbSceneParam._m0[86u].y;
    vec4 _2908 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2893, _2894, (log2((isnan(cbSceneParam._m0[77u].w) ? _720 : (isnan(_720) ? cbSceneParam._m0[77u].w : min(_720, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2910 = _2908.x;
    float _2911 = _2908.y;
    float _2912 = _2908.z;
    float _2913 = _2908.w;
    float _2985;
    float _2987;
    float _2989;
    float _2991;
    if (_720 > cbSceneParam._m0[78u].w)
    {
        float _2947 = isnan(_720) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _720 : min(cbSceneParam._m0[80u].w, _720));
        float _2948 = _2947 / _720;
        float _2959 = _2948 * _772;
        float _2960 = _773 * _2948;
        float _2961 = (-0.0) - _2960;
        float _2963 = _2948 * _774;
        float _2965 = (cbSceneParam._m0[77u].w * _2961) / _2947;
        float _2966 = _2965 + cbSceneParam._m0[79u].w;
        float _2967 = cbSceneParam._m0[79u].w - _2960;
        float _2973 = sqrt(((_2959 * _2959) + (_2960 * _2960)) + (_2963 * _2963));
        float _2976 = (1.0 - (cbSceneParam._m0[77u].w / _2947)) * _2973;
        float _2981 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2983 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3136;
        if (abs((_2961 - _2965) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3136 = ((((_2966 > 0.0) ? exp2(_2981 * _2966) : (2.0 - exp2(_2983 * _2966))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2976;
        }
        else
        {
            float _3096 = 1.0 / cbSceneParam._m0[80u].x;
            float _3097 = isnan(_2967) ? _2966 : (isnan(_2966) ? _2967 : max(_2966, _2967));
            float _3098 = isnan(_2967) ? _2966 : (isnan(_2966) ? _2967 : min(_2966, _2967));
            float _3107 = isnan(0.0) ? _3097 : (isnan(_3097) ? 0.0 : min(_3097, 0.0));
            float _3108 = isnan(0.0) ? _3098 : (isnan(_3098) ? 0.0 : min(_3098, 0.0));
            _3136 = ((abs(_2973 / _2961) * cbSceneParam._m0[80u].y) * ((((_3107 - _3108) * 2.0) - ((exp2(_2981 * (isnan(0.0) ? _3097 : (isnan(_3097) ? 0.0 : max(_3097, 0.0)))) - exp2(_2981 * (isnan(0.0) ? _3098 : (isnan(_3098) ? 0.0 : max(_3098, 0.0))))) * _3096)) - ((exp2(_2983 * _3107) - exp2(_2983 * _3108)) * _3096))) + (_2976 * cbSceneParam._m0[80u].z);
        }
        vec4 _3138 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2893, _2894, 1.0), 0.0);
        float _3147 = exp2((_3136 * (-1.44269502162933349609375)) * (1.0 - _3138.w));
        float _3148 = log2(_3147);
        float _3164 = log2(_2913);
        _2985 = (exp2(_3164 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3148 * cbSceneParam._m0[78u].x)) * _3138.x) / cbSceneParam._m0[78u].x)) + _2910;
        _2987 = (exp2(_3164 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3148 * cbSceneParam._m0[78u].y)) * _3138.y) / cbSceneParam._m0[78u].y)) + _2911;
        _2989 = (exp2(_3164 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3148 * cbSceneParam._m0[78u].z)) * _3138.z) / cbSceneParam._m0[78u].z)) + _2912;
        _2991 = _3147 * _2913;
    }
    else
    {
        _2985 = _2910;
        _2987 = _2911;
        _2989 = _2912;
        _2991 = _2913;
    }
    float _3003 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3004 = _3003 == 3.0;
    float _3005 = log2(_2991);
    float _3012 = exp2(_3005 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4770 : (isnan(_4770) ? 1.0 : min(_4770, 1.0))) * (_2855 + ((isnan(0.0) ? _1575 : (isnan(_1575) ? 0.0 : max(_1575, 0.0))) * _850))) + ((_2861 + ((isnan(0.0) ? _1867 : (isnan(_1867) ? 0.0 : max(_1867, 0.0))) * _1654)) * cbPerFrame._m0[3u].x));
    float _3013 = exp2(_3005 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4781 : (isnan(_4781) ? 1.0 : min(_4781, 1.0))) * (_2857 + ((isnan(0.0) ? _1578 : (isnan(_1578) ? 0.0 : max(_1578, 0.0))) * _850))) + ((_2863 + ((isnan(0.0) ? _1870 : (isnan(_1870) ? 0.0 : max(_1870, 0.0))) * _1654)) * cbPerFrame._m0[3u].x));
    float _3014 = exp2(_3005 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4792 : (isnan(_4792) ? 1.0 : min(_4792, 1.0))) * (_2859 + ((isnan(0.0) ? _1581 : (isnan(_1581) ? 0.0 : max(_1581, 0.0))) * _850))) + ((_2865 + ((isnan(0.0) ? _1873 : (isnan(_1873) ? 0.0 : max(_1873, 0.0))) * _1654)) * cbPerFrame._m0[3u].x));
    float _3023 = (_3003 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3023 * (_3004 ? _3012 : (_3012 + (cbSceneParam._m0[72u].w * _2985)));
    SV_Target.y = _3023 * (_3004 ? _3013 : (_3013 + (cbSceneParam._m0[72u].w * _2987)));
    SV_Target.z = _3023 * (_3004 ? _3014 : (_3014 + (cbSceneParam._m0[72u].w * _2989)));
    SV_Target.w = cbInstanceData._m0[_2885].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2885].w;
}


