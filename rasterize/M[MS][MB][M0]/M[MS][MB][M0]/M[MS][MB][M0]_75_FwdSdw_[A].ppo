#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 18) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_28;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1210;
float _3854;
float _3855;
float _3856;
float _3857;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _219 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _220 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _221 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _227 = inversesqrt(dot(vec3(_219, _220, _221), vec3(_219, _220, _221)));
    float _234 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _235 = _234 * NORMAL.x;
    float _236 = _234 * NORMAL.y;
    float _237 = _234 * NORMAL.z;
    float _241 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _247 = uint(roundEven(NORMAL.w)) * 13u;
    uint _252 = _247 + 1u;
    uint _256 = _247 + 2u;
    float _265 = sqrt(((cbInstanceData._m0[_252].x * cbInstanceData._m0[_252].x) + (cbInstanceData._m0[_247].x * cbInstanceData._m0[_247].x)) + (cbInstanceData._m0[_256].x * cbInstanceData._m0[_256].x));
    float _266 = _265 * TEXCOORD.z;
    float _267 = _265 * TEXCOORD.w;
    vec4 _287 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _293 = _287.x * cbMtdParam._m0[11u].x;
    float _294 = _287.y * cbMtdParam._m0[11u].y;
    float _295 = _287.z * cbMtdParam._m0[11u].z;
    vec4 _314 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _266) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _267) + cbTextureTilingScale._m0[5u].w));
    vec4 _352 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _354 = _352.x;
    float _364 = dot(vec4(_354, _352.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _381 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_354 - _364) * cbMtdParam._m0[24u].x) + _364) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3866 = isnan(0.0) ? _381 : (isnan(_381) ? 0.0 : max(_381, 0.0));
    float _382 = isnan(1.0) ? _3866 : (isnan(_3866) ? 1.0 : min(_3866, 1.0));
    float _389 = (_382 * ((_314.x * cbMtdParam._m0[12u].x) - _293)) + _293;
    float _390 = (_382 * ((_314.y * cbMtdParam._m0[12u].y) - _294)) + _294;
    float _391 = (_382 * ((_314.z * cbMtdParam._m0[12u].z) - _295)) + _295;
    vec4 _404 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _266) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _267) + cbTextureTilingScale._m0[4u].w));
    vec4 _421 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _423 = _421.x;
    float _424 = _421.y;
    float _425 = _421.z;
    float _434 = ((_404.z - _425) * _382) + _425;
    float _437 = ((((_404.x - _423) * _382) + _423) * 2.0) + (-1.0);
    float _439 = ((((_404.y - _424) * _382) + _424) * 2.0) + (-1.0);
    float _440 = dot(vec2(_437, _439), vec2(_437, _439));
    float _3877 = isnan(0.0) ? _440 : (isnan(_440) ? 0.0 : max(_440, 0.0));
    float _445 = sqrt(1.0 - (isnan(1.0) ? _3877 : (isnan(_3877) ? 1.0 : min(_3877, 1.0))));
    vec4 _458 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _472 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _266) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _267) + cbTextureTilingScale._m0[19u].w));
    float _474 = _472.x;
    float _475 = 1.0 - _474;
    float _503 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_474 - _475) * cbMtdParam._m0[24u].w) + _475) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3888 = isnan(0.0) ? _503 : (isnan(_503) ? 0.0 : max(_503, 0.0));
    float _504 = isnan(1.0) ? _3888 : (isnan(_3888) ? 1.0 : min(_3888, 1.0));
    float _512 = ((((cbMtdParam._m0[10u].x - _389) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _504) + _389;
    float _513 = ((((cbMtdParam._m0[10u].y - _390) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _504) + _390;
    float _514 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _391)) * _504) + _391;
    float _518 = ((cbMtdParam._m0[23u].y - _434) * _504) + _434;
    vec4 _537 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _266) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _267) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _539 = _537.x;
    float _540 = _537.y;
    float _546 = dot(vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0), vec4(_235, _236, _237, 0.0));
    vec4 _561 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_28, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * _266) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * _267) + cbTextureTilingScale._m0[18u].w));
    float _563 = _561.x;
    float _568 = fract(_561.w + cbPerFrame._m0[22u].x);
    float _570 = (1.0 - _568) * _563;
    float _575 = ((_568 + (-1.0)) + _563) * 9.0;
    float _577 = ((_563 + (-1.0)) + _568) * 9.0;
    float _578 = isnan(0.0) ? _575 : (isnan(_575) ? 0.0 : max(_575, 0.0));
    float _579 = isnan(0.0) ? _577 : (isnan(_577) ? 0.0 : max(_577, 0.0));
    float _593 = (_570 * ((_561.y * 2.0) + (-1.0))) * sin((isnan(3.0) ? _578 : (isnan(_578) ? 3.0 : min(_578, 3.0))) * 3.1415927410125732421875);
    float _595 = (_570 * ((_561.z * 2.0) + (-1.0))) * sin((isnan(3.0) ? _579 : (isnan(_579) ? 3.0 : min(_579, 3.0))) * 3.1415927410125732421875);
    float _599 = inversesqrt(dot(vec3(_593, _595, 1.0), vec3(_593, _595, 1.0)));
    float _615 = (((((0.5 - _539) + ((_593 * 0.5) * _599)) * _546) + _539) * 2.0) + (-1.0);
    float _616 = (((((0.5 - _540) + ((_599 * 0.5) * _595)) * _546) + _540) * 2.0) + (-1.0);
    float _617 = dot(vec2(_615, _616), vec2(_615, _616));
    float _3919 = isnan(0.0) ? _617 : (isnan(_617) ? 0.0 : max(_617, 0.0));
    float _633 = ((((cbMtdParam._m0[22u].z * _437) - _437) + _615) * _504) + _437;
    float _634 = ((((cbMtdParam._m0[22u].z * _439) - _439) + _616) * _504) + _439;
    float _635 = (_504 * (sqrt(1.0 - (isnan(1.0) ? _3919 : (isnan(_3919) ? 1.0 : min(_3919, 1.0)))) - _445)) + _445;
    float _637 = cbMtdParam._m0[22u].x + _458.w;
    float _640 = fma(_635, _235, fma(_634, _241 * TANGENT.x, (_227 * _219) * _633));
    float _643 = fma(_635, _236, fma(_634, _241 * TANGENT.y, (_227 * _220) * _633));
    float _646 = fma(_635, _237, fma(_634, _241 * TANGENT.z, (_227 * _221) * _633));
    float _650 = inversesqrt(dot(vec3(_640, _643, _646), vec3(_640, _643, _646)));
    float _651 = _650 * _640;
    float _652 = _650 * _643;
    float _653 = _650 * _646;
    float _3930 = isnan(0.0) ? _518 : (isnan(_518) ? 0.0 : max(_518, 0.0));
    float _654 = isnan(1.0) ? _3930 : (isnan(_3930) ? 1.0 : min(_3930, 1.0));
    float _3941 = isnan(0.0) ? _637 : (isnan(_637) ? 0.0 : max(_637, 0.0));
    float _3952 = isnan(0.0) ? _512 : (isnan(_512) ? 0.0 : max(_512, 0.0));
    float _3963 = isnan(0.0) ? _513 : (isnan(_513) ? 0.0 : max(_513, 0.0));
    float _3974 = isnan(0.0) ? _514 : (isnan(_514) ? 0.0 : max(_514, 0.0));
    float _672 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _713 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _723 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _713);
    float _724 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _713);
    float _725 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _713);
    float _729 = inversesqrt(dot(vec3(_723, _724, _725), vec3(_723, _724, _725)));
    float _730 = _723 * _729;
    float _731 = _724 * _729;
    float _732 = _725 * _729;
    vec4 _737 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _739 = _737.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _892 = sqrt(((_723 * _723) + (_724 * _724)) + (_725 * _725));
        float _898 = (cbMatDynParam._m0[5u].x * _892) + cbMatDynParam._m0[5u].y;
        float _3985 = isnan(0.0) ? _898 : (isnan(_898) ? 0.0 : max(_898, 0.0));
        float _899 = isnan(1.0) ? _3985 : (isnan(_3985) ? 1.0 : min(_3985, 1.0));
        float _903 = (cbMatDynParam._m0[5u].z * _892) + cbMatDynParam._m0[5u].w;
        float _3996 = isnan(0.0) ? _903 : (isnan(_903) ? 0.0 : max(_903, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3996 : (isnan(_3996) ? 1.0 : min(_3996, 1.0))) - _899)) + _899) < ((_739 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _750 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _751 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _769 = fma(_653, cbSceneParam._m0[5u].z, fma(_652, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _651));
    float _772 = fma(_653, cbSceneParam._m0[6u].z, fma(_652, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _651));
    float _775 = fma(_653, cbSceneParam._m0[7u].z, fma(_652, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _651));
    uint _788 = _247 + 9u;
    uint _789 = _788 + uint(cbMatDynParam._m0[0u].w);
    float _795 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3952 : (isnan(_3952) ? 1.0 : min(_3952, 1.0)))) * cbInstanceData._m0[_789].x;
    float _796 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3963 : (isnan(_3963) ? 1.0 : min(_3963, 1.0)))) * cbInstanceData._m0[_789].y;
    float _797 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3974 : (isnan(_3974) ? 1.0 : min(_3974, 1.0)))) * cbInstanceData._m0[_789].z;
    float _4007 = isnan(0.0) ? _795 : (isnan(_795) ? 0.0 : max(_795, 0.0));
    float _798 = isnan(1.0) ? _4007 : (isnan(_4007) ? 1.0 : min(_4007, 1.0));
    float _4018 = isnan(0.0) ? _796 : (isnan(_796) ? 0.0 : max(_796, 0.0));
    float _799 = isnan(1.0) ? _4018 : (isnan(_4018) ? 1.0 : min(_4018, 1.0));
    float _4029 = isnan(0.0) ? _797 : (isnan(_797) ? 0.0 : max(_797, 0.0));
    float _800 = isnan(1.0) ? _4029 : (isnan(_4029) ? 1.0 : min(_4029, 1.0));
    vec4 _809 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _750, cbSceneParam._m0[86u].y * _751));
    float _813 = ((isnan(1.0) ? _3941 : (isnan(_3941) ? 1.0 : min(_3941, 1.0))) * TEXCOORD_5.w) * _809.x;
    float _814 = dot(vec3(_651, _652, _653), vec3(_730, _731, _732));
    float _817 = _814 * 2.0;
    float _821 = (_817 * _651) - _730;
    float _822 = (_817 * _652) - _731;
    float _823 = (_817 * _653) - _732;
    float _827 = abs(dot(vec3(_730, _731, _732), vec3(_651, _652, _653)));
    float _4040 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    float _829 = sqrt(_654);
    float _841 = exp2((_829 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4040 : (isnan(_4040) ? 1.0 : min(_4040, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_829 * 3.0));
    float _873 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _877 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _881 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1209;
    float _1211;
    float _1212;
    float _1213;
    float _1214;
    float _1215;
    float _1216;
    float _1217;
    float _1218;
    float _1219;
    float _1220;
    float _1221;
    float _1222;
    float _1223;
    float _1224;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _935 = fma(_881, cbModelParam._m0[26u].z, fma(_877, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _873));
        float _939 = fma(_881, cbModelParam._m0[27u].z, fma(_877, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _873));
        float _943 = fma(_881, cbModelParam._m0[28u].z, fma(_877, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _873));
        float _967 = _873 + _651;
        float _968 = _877 + _652;
        float _969 = _881 + _653;
        float _979 = fma(_969, cbModelParam._m0[26u].z, fma(_968, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _967)) - _935;
        float _980 = fma(_969, cbModelParam._m0[27u].z, fma(_968, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _967)) - _939;
        float _981 = fma(_969, cbModelParam._m0[28u].z, fma(_968, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _967)) - _943;
        float _985 = inversesqrt(dot(vec3(_979, _980, _981), vec3(_979, _980, _981)));
        float _998 = ((_985 * _979) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_935 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _999 = ((_985 * _980) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_939 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1000 = ((_985 * _981) / cbModelParam._m0[34u].z) + ((((((_943 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1003 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_998, _999, _1000), 0.0);
        vec4 _1010 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_998, _999, _1000), 0.0);
        vec4 _1017 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_998, _999, _1000), 0.0);
        vec4 _1024 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_998, _999, _1000), 0.0);
        float _1037 = exp2((_1003.w + (-0.5)) * 20.0) * 2.0;
        float _1038 = _1037 * (_1003.x + (-0.5));
        float _1039 = _1037 * (_1003.y + (-0.5));
        float _1040 = _1037 * (_1003.z + (-0.5));
        float _1047 = exp2((_1010.w + (-0.5)) * 20.0) * 2.0;
        float _1048 = _1047 * (_1010.x + (-0.5));
        float _1049 = _1047 * (_1010.y + (-0.5));
        float _1050 = _1047 * (_1010.z + (-0.5));
        float _1057 = exp2((_1017.w + (-0.5)) * 20.0) * 2.0;
        float _1058 = _1057 * (_1017.x + (-0.5));
        float _1059 = _1057 * (_1017.y + (-0.5));
        float _1060 = _1057 * (_1017.z + (-0.5));
        float _1067 = exp2((_1024.w + (-0.5)) * 20.0) * 2.0;
        float _1068 = _1067 * (_1024.x + (-0.5));
        float _1069 = _1067 * (_1024.y + (-0.5));
        float _1070 = _1067 * (_1024.z + (-0.5));
        float _1071 = isnan(0.0) ? _1068 : (isnan(_1068) ? 0.0 : max(_1068, 0.0));
        float _1072 = isnan(0.0) ? _1069 : (isnan(_1069) ? 0.0 : max(_1069, 0.0));
        float _1073 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
        float _1074 = _1038 * 0.5;
        float _1075 = _1048 * 0.5;
        float _1076 = _1058 * 0.5;
        float _1077 = dot(vec3(_1074, _1075, _1076), vec3(_1074, _1075, _1076));
        float _1082 = (_1077 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1077);
        float _1091 = (dot(vec3(_651, _652, _653), vec3(_1082 * _1074, _1082 * _1075, _1082 * _1076)) + 1.0) * 0.5;
        float _4066 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
        float _1101 = sqrt(((_1075 * _1075) + (_1074 * _1074)) + (_1076 * _1076)) / (_1071 + 9.9999997473787516355514526367188e-06);
        float _4077 = isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0));
        float _1102 = isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0));
        float _1103 = _1102 * 2.0;
        float _1107 = (1.0 - _1102) / (_1102 + 1.0);
        float _4088 = isnan(0.0) ? _1107 : (isnan(_1107) ? 0.0 : max(_1107, 0.0));
        float _1108 = isnan(1.0) ? _4088 : (isnan(_4088) ? 1.0 : min(_4088, 1.0));
        float _1117 = ((((1.0 - _1108) * (_1103 + 2.0)) * exp2(log2(isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0))) * (_1103 + 1.0))) + _1108) * _1071;
        float _1118 = _1039 * 0.5;
        float _1119 = _1049 * 0.5;
        float _1120 = _1059 * 0.5;
        float _1121 = dot(vec3(_1118, _1119, _1120), vec3(_1118, _1119, _1120));
        float _1126 = (_1121 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1121);
        float _1134 = (dot(vec3(_651, _652, _653), vec3(_1126 * _1118, _1126 * _1119, _1126 * _1120)) + 1.0) * 0.5;
        float _4099 = isnan(0.0) ? _1134 : (isnan(_1134) ? 0.0 : max(_1134, 0.0));
        float _1143 = sqrt(((_1119 * _1119) + (_1118 * _1118)) + (_1120 * _1120)) / (_1072 + 9.9999997473787516355514526367188e-06);
        float _4110 = isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0));
        float _1144 = isnan(1.0) ? _4110 : (isnan(_4110) ? 1.0 : min(_4110, 1.0));
        float _1145 = _1144 * 2.0;
        float _1149 = (1.0 - _1144) / (_1144 + 1.0);
        float _4121 = isnan(0.0) ? _1149 : (isnan(_1149) ? 0.0 : max(_1149, 0.0));
        float _1150 = isnan(1.0) ? _4121 : (isnan(_4121) ? 1.0 : min(_4121, 1.0));
        float _1159 = ((((1.0 - _1150) * (_1145 + 2.0)) * exp2(log2(isnan(1.0) ? _4099 : (isnan(_4099) ? 1.0 : min(_4099, 1.0))) * (_1145 + 1.0))) + _1150) * _1072;
        float _1160 = _1040 * 0.5;
        float _1161 = _1050 * 0.5;
        float _1162 = _1060 * 0.5;
        float _1163 = dot(vec3(_1160, _1161, _1162), vec3(_1160, _1161, _1162));
        float _1168 = (_1163 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1163);
        float _1176 = (dot(vec3(_651, _652, _653), vec3(_1168 * _1160, _1168 * _1161, _1168 * _1162)) + 1.0) * 0.5;
        float _4132 = isnan(0.0) ? _1176 : (isnan(_1176) ? 0.0 : max(_1176, 0.0));
        float _1185 = sqrt(((_1161 * _1161) + (_1160 * _1160)) + (_1162 * _1162)) / (_1073 + 9.9999997473787516355514526367188e-06);
        float _4143 = isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0));
        float _1186 = isnan(1.0) ? _4143 : (isnan(_4143) ? 1.0 : min(_4143, 1.0));
        float _1187 = _1186 * 2.0;
        float _1191 = (1.0 - _1186) / (_1186 + 1.0);
        float _4154 = isnan(0.0) ? _1191 : (isnan(_1191) ? 0.0 : max(_1191, 0.0));
        float _1192 = isnan(1.0) ? _4154 : (isnan(_4154) ? 1.0 : min(_4154, 1.0));
        float _1201 = ((((1.0 - _1192) * (_1187 + 2.0)) * exp2(log2(isnan(1.0) ? _4132 : (isnan(_4132) ? 1.0 : min(_4132, 1.0))) * (_1187 + 1.0))) + _1192) * _1073;
        _1209 = _1040;
        _1211 = _1039;
        _1212 = _1038;
        _1213 = _1050;
        _1214 = _1049;
        _1215 = _1048;
        _1216 = _1060;
        _1217 = _1059;
        _1218 = _1058;
        _1219 = _1073;
        _1220 = _1072;
        _1221 = _1071;
        _1222 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1117 : (isnan(_1117) ? 0.0 : max(_1117, 0.0)));
        _1223 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0)));
        _1224 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0)));
    }
    else
    {
        _1209 = _1210;
        _1211 = _1210;
        _1212 = _1210;
        _1213 = _1210;
        _1214 = _1210;
        _1215 = _1210;
        _1216 = _1210;
        _1217 = _1210;
        _1218 = _1210;
        _1219 = _1210;
        _1220 = _1210;
        _1221 = _1210;
        _1222 = 0.0;
        _1223 = 0.0;
        _1224 = 0.0;
    }
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    float _1526;
    float _1527;
    float _1528;
    float _1529;
    float _1530;
    float _1531;
    float _1532;
    float _1533;
    float _1534;
    float _1535;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1252 = fma(_881, cbModelParam._m0[30u].z, fma(_877, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _873));
        float _1256 = fma(_881, cbModelParam._m0[31u].z, fma(_877, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _873));
        float _1260 = fma(_881, cbModelParam._m0[32u].z, fma(_877, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _873));
        float _1283 = _873 + _651;
        float _1284 = _877 + _652;
        float _1285 = _881 + _653;
        float _1295 = fma(_1285, cbModelParam._m0[30u].z, fma(_1284, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1283)) - _1252;
        float _1296 = fma(_1285, cbModelParam._m0[31u].z, fma(_1284, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1283)) - _1256;
        float _1297 = fma(_1285, cbModelParam._m0[32u].z, fma(_1284, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1283)) - _1260;
        float _1301 = inversesqrt(dot(vec3(_1295, _1296, _1297), vec3(_1295, _1296, _1297)));
        float _1314 = ((_1301 * _1295) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1252 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1315 = ((_1301 * _1296) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1256 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1316 = ((_1301 * _1297) / cbModelParam._m0[35u].z) + ((((((_1260 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1318 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1314, _1315, _1316), 0.0);
        vec4 _1325 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1314, _1315, _1316), 0.0);
        vec4 _1332 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1314, _1315, _1316), 0.0);
        vec4 _1339 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1314, _1315, _1316), 0.0);
        float _1351 = exp2((_1318.w + (-0.5)) * 20.0) * 2.0;
        float _1352 = _1351 * (_1318.x + (-0.5));
        float _1353 = _1351 * (_1318.y + (-0.5));
        float _1354 = _1351 * (_1318.z + (-0.5));
        float _1361 = exp2((_1325.w + (-0.5)) * 20.0) * 2.0;
        float _1362 = _1361 * (_1325.x + (-0.5));
        float _1363 = _1361 * (_1325.y + (-0.5));
        float _1364 = _1361 * (_1325.z + (-0.5));
        float _1371 = exp2((_1332.w + (-0.5)) * 20.0) * 2.0;
        float _1372 = _1371 * (_1332.x + (-0.5));
        float _1373 = _1371 * (_1332.y + (-0.5));
        float _1374 = _1371 * (_1332.z + (-0.5));
        float _1381 = exp2((_1339.w + (-0.5)) * 20.0) * 2.0;
        float _1382 = _1381 * (_1339.x + (-0.5));
        float _1383 = _1381 * (_1339.y + (-0.5));
        float _1384 = _1381 * (_1339.z + (-0.5));
        float _1385 = isnan(0.0) ? _1382 : (isnan(_1382) ? 0.0 : max(_1382, 0.0));
        float _1386 = isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0));
        float _1387 = isnan(0.0) ? _1384 : (isnan(_1384) ? 0.0 : max(_1384, 0.0));
        float _1388 = _1352 * 0.5;
        float _1389 = _1362 * 0.5;
        float _1390 = _1372 * 0.5;
        float _1391 = dot(vec3(_1388, _1389, _1390), vec3(_1388, _1389, _1390));
        float _1396 = (_1391 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1391);
        float _1404 = (dot(vec3(_651, _652, _653), vec3(_1396 * _1388, _1396 * _1389, _1396 * _1390)) + 1.0) * 0.5;
        float _4195 = isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0));
        float _1413 = sqrt(((_1389 * _1389) + (_1388 * _1388)) + (_1390 * _1390)) / (_1385 + 9.9999997473787516355514526367188e-06);
        float _4206 = isnan(0.0) ? _1413 : (isnan(_1413) ? 0.0 : max(_1413, 0.0));
        float _1414 = isnan(1.0) ? _4206 : (isnan(_4206) ? 1.0 : min(_4206, 1.0));
        float _1415 = _1414 * 2.0;
        float _1419 = (1.0 - _1414) / (_1414 + 1.0);
        float _4217 = isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0));
        float _1420 = isnan(1.0) ? _4217 : (isnan(_4217) ? 1.0 : min(_4217, 1.0));
        float _1429 = ((((1.0 - _1420) * (_1415 + 2.0)) * exp2(log2(isnan(1.0) ? _4195 : (isnan(_4195) ? 1.0 : min(_4195, 1.0))) * (_1415 + 1.0))) + _1420) * _1385;
        float _1430 = _1353 * 0.5;
        float _1431 = _1363 * 0.5;
        float _1432 = _1373 * 0.5;
        float _1433 = dot(vec3(_1430, _1431, _1432), vec3(_1430, _1431, _1432));
        float _1438 = (_1433 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1433);
        float _1446 = (dot(vec3(_651, _652, _653), vec3(_1438 * _1430, _1438 * _1431, _1438 * _1432)) + 1.0) * 0.5;
        float _4228 = isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0));
        float _1455 = sqrt(((_1431 * _1431) + (_1430 * _1430)) + (_1432 * _1432)) / (_1386 + 9.9999997473787516355514526367188e-06);
        float _4239 = isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0));
        float _1456 = isnan(1.0) ? _4239 : (isnan(_4239) ? 1.0 : min(_4239, 1.0));
        float _1457 = _1456 * 2.0;
        float _1461 = (1.0 - _1456) / (_1456 + 1.0);
        float _4250 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0));
        float _1462 = isnan(1.0) ? _4250 : (isnan(_4250) ? 1.0 : min(_4250, 1.0));
        float _1471 = ((((1.0 - _1462) * (_1457 + 2.0)) * exp2(log2(isnan(1.0) ? _4228 : (isnan(_4228) ? 1.0 : min(_4228, 1.0))) * (_1457 + 1.0))) + _1462) * _1386;
        float _1472 = _1354 * 0.5;
        float _1473 = _1364 * 0.5;
        float _1474 = _1374 * 0.5;
        float _1475 = dot(vec3(_1472, _1473, _1474), vec3(_1472, _1473, _1474));
        float _1480 = (_1475 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1475);
        float _1488 = (dot(vec3(_651, _652, _653), vec3(_1480 * _1472, _1480 * _1473, _1480 * _1474)) + 1.0) * 0.5;
        float _4261 = isnan(0.0) ? _1488 : (isnan(_1488) ? 0.0 : max(_1488, 0.0));
        float _1497 = sqrt(((_1473 * _1473) + (_1472 * _1472)) + (_1474 * _1474)) / (_1387 + 9.9999997473787516355514526367188e-06);
        float _4272 = isnan(0.0) ? _1497 : (isnan(_1497) ? 0.0 : max(_1497, 0.0));
        float _1498 = isnan(1.0) ? _4272 : (isnan(_4272) ? 1.0 : min(_4272, 1.0));
        float _1499 = _1498 * 2.0;
        float _1503 = (1.0 - _1498) / (_1498 + 1.0);
        float _4283 = isnan(0.0) ? _1503 : (isnan(_1503) ? 0.0 : max(_1503, 0.0));
        float _1504 = isnan(1.0) ? _4283 : (isnan(_4283) ? 1.0 : min(_4283, 1.0));
        float _1513 = ((((1.0 - _1504) * (_1499 + 2.0)) * exp2(log2(isnan(1.0) ? _4261 : (isnan(_4261) ? 1.0 : min(_4261, 1.0))) * (_1499 + 1.0))) + _1504) * _1387;
        _1521 = _1354;
        _1522 = _1353;
        _1523 = _1352;
        _1524 = _1364;
        _1525 = _1363;
        _1526 = _1362;
        _1527 = _1374;
        _1528 = _1373;
        _1529 = _1372;
        _1530 = _1387;
        _1531 = _1386;
        _1532 = _1385;
        _1533 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1429 : (isnan(_1429) ? 0.0 : max(_1429, 0.0)));
        _1534 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1471 : (isnan(_1471) ? 0.0 : max(_1471, 0.0)));
        _1535 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0)));
    }
    else
    {
        _1521 = _1210;
        _1522 = _1210;
        _1523 = _1210;
        _1524 = _1210;
        _1525 = _1210;
        _1526 = _1210;
        _1527 = _1210;
        _1528 = _1210;
        _1529 = _1210;
        _1530 = _1210;
        _1531 = _1210;
        _1532 = _1210;
        _1533 = 0.0;
        _1534 = 0.0;
        _1535 = 0.0;
    }
    float _1545 = (cbModelParam._m0[1u].x * (_1533 - _1222)) + _1222;
    float _1546 = (cbModelParam._m0[1u].x * (_1534 - _1223)) + _1223;
    float _1547 = (cbModelParam._m0[1u].x * (_1535 - _1224)) + _1224;
    float _1568 = fma(_1547, cbSceneParam._m0[89u].z, fma(_1546, cbSceneParam._m0[89u].y, _1545 * cbSceneParam._m0[89u].x));
    float _1571 = fma(_1547, cbSceneParam._m0[90u].z, fma(_1546, cbSceneParam._m0[90u].y, _1545 * cbSceneParam._m0[90u].x));
    float _1574 = fma(_1547, cbSceneParam._m0[91u].z, fma(_1546, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1545));
    float _1589 = _821 * 0.5;
    float _1590 = _822 * 0.5;
    float _1591 = _823 * 0.5;
    float _1592 = dot(vec4(_1589, _1590, _1591, 1.0), vec4(_1523, _1526, _1529, _1532));
    float _1595 = dot(vec4(_1589, _1590, _1591, 1.0), vec4(_1522, _1525, _1528, _1531));
    float _1598 = dot(vec4(_1589, _1590, _1591, 1.0), vec4(_1521, _1524, _1527, _1530));
    float _1632;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1605 = dot(vec4(_1589, _1590, _1591, 1.0), vec4(_1209, _1213, _1216, _1219));
        float _1609 = dot(vec4(_1589, _1590, _1591, 1.0), vec4(_1211, _1214, _1217, _1220));
        float _1613 = dot(vec4(_1589, _1590, _1591, 1.0), vec4(_1212, _1215, _1218, _1221));
        float _1620 = dot(vec4(cbModelParam._m0[39u]), vec4(_1589, _1590, _1591, 1.0));
        _1632 = dot(vec3(isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0)), isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0)), isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1620) ? 0.0 : (isnan(0.0) ? _1620 : max(0.0, _1620))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1632 = 1.0;
    }
    float _1643;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1634 = dot(vec4(cbModelParam._m0[40u]), vec4(_1589, _1590, _1591, 1.0));
        _1643 = dot(vec3(isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0)), isnan(0.0) ? _1595 : (isnan(_1595) ? 0.0 : max(_1595, 0.0)), isnan(0.0) ? _1598 : (isnan(_1598) ? 0.0 : max(_1598, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1634) ? 0.0 : (isnan(0.0) ? _1634 : max(0.0, _1634))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1643 = 1.0;
    }
    float _1647 = (_1643 * cbModelParam._m0[1u].x) + (_1632 * (1.0 - cbModelParam._m0[1u].x));
    float _1657 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _654);
    float _1658 = isnan(_1657) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1657 : min(cbModelParam._m0[25u].z, _1657));
    float _1740;
    float _1742;
    float _1744;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1707 = fma(_881, cbModelParam._m0[13u].z, fma(_877, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _873)) + cbModelParam._m0[13u].w;
        float _1711 = fma(_881, cbModelParam._m0[14u].z, fma(_877, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _873)) + cbModelParam._m0[14u].w;
        float _1715 = fma(_881, cbModelParam._m0[15u].z, fma(_877, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _873)) + cbModelParam._m0[15u].w;
        float _1718 = fma(_823, cbModelParam._m0[13u].z, fma(_822, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _821));
        float _1721 = fma(_823, cbModelParam._m0[14u].z, fma(_822, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _821));
        float _1724 = fma(_823, cbModelParam._m0[15u].z, fma(_822, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _821));
        float _1752;
        if (_1718 > 0.0)
        {
            _1752 = abs((1.0 - _1707) / _1718);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1718 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1707 + 1.0) / _1718);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1752 = frontier_phi_17_15_ladder;
        }
        float _1922;
        if (_1721 > 0.0)
        {
            _1922 = abs((1.0 - _1711) / _1721);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1721 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1711 + 1.0) / _1721);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _1922 = frontier_phi_26_22_ladder;
        }
        float _2217;
        if (_1724 > 0.0)
        {
            _2217 = abs((1.0 - _1715) / _1724);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1724 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1715 + 1.0) / _1724);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2217 = frontier_phi_38_33_ladder;
        }
        float _2219 = isnan(_1922) ? _1752 : (isnan(_1752) ? _1922 : min(_1752, _1922));
        float _2220 = isnan(_2217) ? _2219 : (isnan(_2219) ? _2217 : min(_2219, _2217));
        float _2224 = (_2220 * _1718) + _1707;
        float _2225 = (_2220 * _1721) + _1711;
        float _2226 = (_2220 * _1724) + _1715;
        float _2227 = _2220 * 9.9999997473787516355514526367188e-05;
        float _2229 = (-1.0) - _2227;
        float _2231 = _2227 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2226 > _2231) || ((_2226 < _2229) || ((_2225 > _2231) || ((_2225 < _2229) || ((_2224 < _2229) || (_2224 > _2231))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2371 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2226, cbModelParam._m0[9u].z, fma(_2225, cbModelParam._m0[9u].y, _2224 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2226, cbModelParam._m0[10u].z, fma(_2225, cbModelParam._m0[10u].y, _2224 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2226, cbModelParam._m0[11u].z, fma(_2225, cbModelParam._m0[11u].y, _2224 * cbModelParam._m0[11u].x))), _1658);
            frontier_phi_16_38_ladder = _2371.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2371.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2371.x * cbModelParam._m0[1u].y;
        }
        _1740 = frontier_phi_16_38_ladder_2;
        _1742 = frontier_phi_16_38_ladder_1;
        _1744 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1728 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_821, _822, _823), _1658);
        _1740 = _1728.x * cbModelParam._m0[1u].y;
        _1742 = _1728.y * cbModelParam._m0[1u].y;
        _1744 = _1728.z * cbModelParam._m0[1u].y;
    }
    float _1748 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _654);
    float _1749 = isnan(_1748) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1748 : min(cbModelParam._m0[25u].w, _1748));
    float _1839;
    float _1841;
    float _1843;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1803 = fma(_881, cbModelParam._m0[21u].z, fma(_877, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _873)) + cbModelParam._m0[21u].w;
        float _1807 = fma(_881, cbModelParam._m0[22u].z, fma(_877, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _873)) + cbModelParam._m0[22u].w;
        float _1811 = fma(_881, cbModelParam._m0[23u].z, fma(_877, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _873)) + cbModelParam._m0[23u].w;
        float _1814 = fma(_823, cbModelParam._m0[21u].z, fma(_822, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _821));
        float _1817 = fma(_823, cbModelParam._m0[22u].z, fma(_822, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _821));
        float _1820 = fma(_823, cbModelParam._m0[23u].z, fma(_822, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _821));
        float _1927;
        if (_1814 > 0.0)
        {
            _1927 = abs((1.0 - _1803) / _1814);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1814 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1803 + 1.0) / _1814);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1927 = frontier_phi_28_24_ladder;
        }
        float _2244;
        if (_1817 > 0.0)
        {
            _2244 = abs((1.0 - _1807) / _1817);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1817 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1807 + 1.0) / _1817);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2244 = frontier_phi_40_35_ladder;
        }
        float _2571;
        if (_1820 > 0.0)
        {
            _2571 = abs((1.0 - _1811) / _1820);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_1820 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_1811 + 1.0) / _1820);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2571 = frontier_phi_50_47_ladder;
        }
        float _2573 = isnan(_2244) ? _1927 : (isnan(_1927) ? _2244 : min(_1927, _2244));
        float _2574 = isnan(_2571) ? _2573 : (isnan(_2573) ? _2571 : min(_2573, _2571));
        float _2578 = (_2574 * _1814) + _1803;
        float _2579 = (_2574 * _1817) + _1807;
        float _2580 = (_2574 * _1820) + _1811;
        float _2581 = _2574 * 9.9999997473787516355514526367188e-05;
        float _2582 = (-1.0) - _2581;
        float _2584 = _2581 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2580 > _2584) || ((_2580 < _2582) || ((_2579 > _2584) || ((_2579 < _2582) || ((_2578 < _2582) || (_2578 > _2584))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2698 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2580, cbModelParam._m0[17u].z, fma(_2579, cbModelParam._m0[17u].y, _2578 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2580, cbModelParam._m0[18u].z, fma(_2579, cbModelParam._m0[18u].y, _2578 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2580, cbModelParam._m0[19u].z, fma(_2579, cbModelParam._m0[19u].y, _2578 * cbModelParam._m0[19u].x))), _1749);
            frontier_phi_25_50_ladder = _2698.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2698.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2698.x * cbModelParam._m0[1u].z;
        }
        _1839 = frontier_phi_25_50_ladder_2;
        _1841 = frontier_phi_25_50_ladder_1;
        _1843 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _1823 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_821, _822, _823), _1749);
        _1839 = _1823.x * cbModelParam._m0[1u].z;
        _1841 = _1823.y * cbModelParam._m0[1u].z;
        _1843 = _1823.z * cbModelParam._m0[1u].z;
    }
    float _1855 = ((((1.0 - _841) * ((_829 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_841 * _829)) * _813;
    float _1856 = _1855 * ((cbModelParam._m0[1u].w * (_1839 - _1740)) + _1740);
    float _1857 = _1855 * ((cbModelParam._m0[1u].w * (_1841 - _1742)) + _1742);
    float _1858 = _1855 * ((cbModelParam._m0[1u].w * (_1843 - _1744)) + _1744);
    float _1861 = fma(_1858, cbSceneParam._m0[89u].z, fma(_1857, cbSceneParam._m0[89u].y, _1856 * cbSceneParam._m0[89u].x));
    float _1864 = fma(_1858, cbSceneParam._m0[90u].z, fma(_1857, cbSceneParam._m0[90u].y, _1856 * cbSceneParam._m0[90u].x));
    float _1867 = fma(_1858, cbSceneParam._m0[91u].z, fma(_1857, cbSceneParam._m0[91u].y, _1856 * cbSceneParam._m0[91u].x));
    float _1901 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1905 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1909 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1913 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1914 = _1901 / _1913;
    float _1915 = _1905 / _1913;
    float _1916 = _1909 / _1913;
    float _2063;
    float _2064;
    float _2065;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1943 = ((uint(_1916 > cbSceneParam._m0[59u].y) + uint(_1916 > cbSceneParam._m0[59u].x)) + uint(_1916 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1944 = _1943 + 43u;
        uint _1952 = _1943 + 44u;
        uint _1960 = _1943 + 45u;
        uint _1968 = _1943 + 46u;
        float _1979 = fma(_1913, cbSceneParam._m0[_1944].w, fma(_1909, cbSceneParam._m0[_1944].z, fma(_1905, cbSceneParam._m0[_1944].y, _1901 * cbSceneParam._m0[_1944].x)));
        float _1983 = fma(_1913, cbSceneParam._m0[_1952].w, fma(_1909, cbSceneParam._m0[_1952].z, fma(_1905, cbSceneParam._m0[_1952].y, _1901 * cbSceneParam._m0[_1952].x)));
        float _1991 = fma(_1913, cbSceneParam._m0[_1968].w, fma(_1909, cbSceneParam._m0[_1968].z, fma(_1905, cbSceneParam._m0[_1968].y, _1901 * cbSceneParam._m0[_1968].x)));
        float _1996 = cbSceneParam._m0[33u].z * _1991;
        float _1998 = cbSceneParam._m0[33u].w * _1991;
        float _2001 = fma(_1913, cbSceneParam._m0[_1960].w, fma(_1909, cbSceneParam._m0[_1960].z, fma(_1905, cbSceneParam._m0[_1960].y, _1901 * cbSceneParam._m0[_1960].x))) / _1991;
        float _2049 = (cbSceneParam._m0[33u].x - sqrt(((_1915 * _1915) + (_1914 * _1914)) + (_1916 * _1916))) * cbSceneParam._m0[33u].y;
        float _4409 = isnan(0.0) ? _2049 : (isnan(_2049) ? 0.0 : max(_2049, 0.0));
        float _2056 = (isnan(1.0) ? _4409 : (isnan(_4409) ? 1.0 : min(_4409, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1996 + _1979) / _1991, (_1998 + _1983) / _1991), _2001), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1998 + _1979) / _1991, (_1983 - _1996) / _1991), _2001), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1979 - _1996) / _1991, (_1983 - _1998) / _1991), _2001), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1979 - _1998) / _1991, (_1996 + _1983) / _1991), _2001), 0.0)).x), vec4(0.25)));
        _2063 = 1.0 - (_2056 * cbSceneParam._m0[34u].x);
        _2064 = 1.0 - (_2056 * cbSceneParam._m0[34u].y);
        _2065 = 1.0 - (_2056 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2063 = 1.0;
        _2064 = 1.0;
        _2065 = 1.0;
    }
    float _2129;
    float _2131;
    float _2133;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2117 = fma(_1913, cbSceneParam._m0[63u].w, fma(_1909, cbSceneParam._m0[63u].z, fma(_1905, cbSceneParam._m0[63u].y, _1901 * cbSceneParam._m0[63u].x)));
        float _2118 = fma(_1913, cbSceneParam._m0[60u].w, fma(_1909, cbSceneParam._m0[60u].z, fma(_1905, cbSceneParam._m0[60u].y, _1901 * cbSceneParam._m0[60u].x))) / _2117;
        float _2119 = fma(_1913, cbSceneParam._m0[61u].w, fma(_1909, cbSceneParam._m0[61u].z, fma(_1905, cbSceneParam._m0[61u].y, _1901 * cbSceneParam._m0[61u].x))) / _2117;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2118 >= cbSceneParam._m0[64u].x) && (_2119 >= cbSceneParam._m0[64u].y)) && (_2118 <= cbSceneParam._m0[64u].z)) && (_2119 <= cbSceneParam._m0[64u].w))
        {
            float _2257 = fma(_1913, cbSceneParam._m0[62u].w, fma(_1909, cbSceneParam._m0[62u].z, fma(_1905, cbSceneParam._m0[62u].y, _1901 * cbSceneParam._m0[62u].x))) / _2117;
            float _2261 = isnan(cbSceneParam._m0[41u].w) ? _2257 : (isnan(_2257) ? cbSceneParam._m0[41u].w : max(_2257, cbSceneParam._m0[41u].w));
            float _2304 = (cbSceneParam._m0[33u].x - sqrt(((_1915 * _1915) + (_1914 * _1914)) + (_1916 * _1916))) * cbSceneParam._m0[33u].y;
            float _4425 = isnan(0.0) ? _2304 : (isnan(_2304) ? 0.0 : max(_2304, 0.0));
            float _2311 = (isnan(1.0) ? _4425 : (isnan(_4425) ? 1.0 : min(_4425, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2118, cbSceneParam._m0[33u].w + _2119), _2261), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2118, _2119 - cbSceneParam._m0[33u].z), _2261), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2118 - cbSceneParam._m0[33u].z, _2119 - cbSceneParam._m0[33u].w), _2261), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2118 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2119), _2261), 0.0)).x), vec4(0.25)));
            float _2315 = 1.0 - (_2311 * cbSceneParam._m0[34u].x);
            float _2316 = 1.0 - (_2311 * cbSceneParam._m0[34u].y);
            float _2317 = 1.0 - (_2311 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2317) ? _2065 : (isnan(_2065) ? _2317 : min(_2065, _2317));
            frontier_phi_37_36_ladder_1 = isnan(_2316) ? _2064 : (isnan(_2064) ? _2316 : min(_2064, _2316));
            frontier_phi_37_36_ladder_2 = isnan(_2315) ? _2063 : (isnan(_2063) ? _2315 : min(_2063, _2315));
        }
        else
        {
            frontier_phi_37_36_ladder = _2065;
            frontier_phi_37_36_ladder_1 = _2064;
            frontier_phi_37_36_ladder_2 = _2063;
        }
        _2129 = frontier_phi_37_36_ladder_2;
        _2131 = frontier_phi_37_36_ladder_1;
        _2133 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2129 = _2063;
        _2131 = _2064;
        _2133 = _2065;
    }
    uvec4 _2138 = floatBitsToUint(cbInstanceData._m0[_247 + 5u]);
    uint _2140 = _2138.x * 14u;
    uint _2141 = _2140 + 13u;
    float _2148 = _813 + (-1.0);
    float _2153 = (cbLight._m0[_2141].x * _2148) + 1.0;
    float _2154 = (cbLight._m0[_2141].y * _2148) + 1.0;
    float _2155 = (cbLight._m0[_2141].z * _2148) + 1.0;
    float _2156 = (cbLight._m0[_2141].w * _2148) + 1.0;
    uint _2157 = _2140 + 5u;
    float _2163 = isnan(1.0) ? _2154 : (isnan(_2154) ? 1.0 : min(_2154, 1.0));
    uint _2167 = _2140 + 4u;
    float _2176 = isnan(1.0) ? _2153 : (isnan(_2153) ? 1.0 : min(_2153, 1.0));
    uint _2180 = _2140 | 1u;
    float _2191 = dot(vec3(cbLight._m0[_2140].xyz), vec3(_651, _652, _653));
    float _2194 = dot(vec3(cbLight._m0[_2180].xyz), vec3(_651, _652, _653));
    float _4461 = isnan(0.0) ? _2191 : (isnan(_2191) ? 0.0 : max(_2191, 0.0));
    float _4472 = isnan(0.0) ? _2194 : (isnan(_2194) ? 0.0 : max(_2194, 0.0));
    float _2199 = (isnan(1.0) ? _4461 : (isnan(_4461) ? 1.0 : min(_4461, 1.0))) * 0.3183098733425140380859375;
    float _2201 = (isnan(1.0) ? _4472 : (isnan(_4472) ? 1.0 : min(_4472, 1.0))) * 0.3183098733425140380859375;
    float _2208 = ((cbLight._m0[_2157].x * _2163) * _2201) + (((cbLight._m0[_2167].x * _2129) * _2176) * _2199);
    float _2209 = ((_2163 * cbLight._m0[_2157].y) * _2201) + (((cbLight._m0[_2167].y * _2131) * _2176) * _2199);
    float _2210 = ((_2163 * cbLight._m0[_2157].z) * _2201) + (((cbLight._m0[_2167].z * _2133) * _2176) * _2199);
    uvec4 _2214 = floatBitsToUint(cbLight._m0[_2140 + 12u]);
    bool _2216 = _2214.x == 0u;
    float _2318;
    float _2320;
    float _2322;
    if (_2216)
    {
        _2318 = _2208;
        _2320 = _2209;
        _2322 = _2210;
    }
    else
    {
        uint _2326 = _2140 + 6u;
        float _2342 = (dot(vec3(cbLight._m0[_2140 + 2u].xyz), vec3(_651, _652, _653)) * 0.5) + 0.5;
        float _2343 = _2342 * _2342;
        float _4483 = isnan(0.0) ? _2343 : (isnan(_2343) ? 0.0 : max(_2343, 0.0));
        float _2344 = isnan(1.0) ? _4483 : (isnan(_4483) ? 1.0 : min(_4483, 1.0));
        float _2345 = isnan(1.0) ? _2155 : (isnan(_2155) ? 1.0 : min(_2155, 1.0));
        _2318 = (((cbLight._m0[_2326].x * 0.3183098733425140380859375) * _2344) * _2345) + _2208;
        _2320 = (((cbLight._m0[_2326].y * 0.3183098733425140380859375) * _2344) * _2345) + _2209;
        _2322 = (((cbLight._m0[_2326].z * 0.3183098733425140380859375) * _2344) * _2345) + _2210;
    }
    bool _2325 = _2214.y == 0u;
    float _2380;
    float _2382;
    float _2384;
    if (_2325)
    {
        _2380 = _2318;
        _2382 = _2320;
        _2384 = _2322;
    }
    else
    {
        uint _2542 = _2140 + 7u;
        float _2558 = (dot(vec3(cbLight._m0[_2140 + 3u].xyz), vec3(_651, _652, _653)) * 0.5) + 0.5;
        float _2559 = _2558 * _2558;
        float _4499 = isnan(0.0) ? _2559 : (isnan(_2559) ? 0.0 : max(_2559, 0.0));
        float _2560 = isnan(1.0) ? _4499 : (isnan(_4499) ? 1.0 : min(_4499, 1.0));
        float _2561 = isnan(1.0) ? _2156 : (isnan(_2156) ? 1.0 : min(_2156, 1.0));
        _2380 = (((cbLight._m0[_2542].x * 0.3183098733425140380859375) * _2560) * _2561) + _2318;
        _2382 = (((cbLight._m0[_2542].y * 0.3183098733425140380859375) * _2560) * _2561) + _2320;
        _2384 = (((cbLight._m0[_2542].z * 0.3183098733425140380859375) * _2560) * _2561) + _2322;
    }
    uint _2387 = _2140 + 8u;
    float _2400 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2140].w)) * _654) * 0.949999988079071044921875);
    float _2401 = _2400 * _2400;
    float _2402 = cbLight._m0[_2140].x + _730;
    float _2403 = cbLight._m0[_2140].y + _731;
    float _2404 = cbLight._m0[_2140].z + _732;
    float _2408 = inversesqrt(dot(vec3(_2402, _2403, _2404), vec3(_2402, _2403, _2404)));
    float _2409 = _2408 * _2402;
    float _2410 = _2408 * _2403;
    float _2411 = _2408 * _2404;
    float _2412 = dot(vec3(_651, _652, _653), vec3(cbLight._m0[_2140].xyz));
    float _4515 = isnan(0.0) ? _2412 : (isnan(_2412) ? 0.0 : max(_2412, 0.0));
    float _2415 = isnan(1.0) ? _4515 : (isnan(_4515) ? 1.0 : min(_4515, 1.0));
    float _4526 = isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0));
    float _2416 = isnan(1.0) ? _4526 : (isnan(_4526) ? 1.0 : min(_4526, 1.0));
    float _2417 = dot(vec3(_651, _652, _653), vec3(_2409, _2410, _2411));
    float _4537 = isnan(0.0) ? _2417 : (isnan(_2417) ? 0.0 : max(_2417, 0.0));
    float _2420 = isnan(1.0) ? _4537 : (isnan(_4537) ? 1.0 : min(_4537, 1.0));
    float _2421 = dot(vec3(cbLight._m0[_2140].xyz), vec3(_2409, _2410, _2411));
    float _4548 = isnan(0.0) ? _2421 : (isnan(_2421) ? 0.0 : max(_2421, 0.0));
    float _2425 = _2401 * _2401;
    float _2429 = ((_2420 * _2420) * (_2425 + (-1.0))) + 1.0;
    float _2440 = (exp2(log2(1.0 - (isnan(1.0) ? _4548 : (isnan(_4548) ? 1.0 : min(_4548, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2441 = 1.0 - _2401;
    float _2452 = (0.5 / (((_2416 * ((_2415 * _2441) + _2401)) + 9.9999999392252902907785028219223e-09) + (((_2416 * _2441) + _2401) * _2415))) * _2415;
    float _4559 = isnan(0.0) ? _2452 : (isnan(_2452) ? 0.0 : max(_2452, 0.0));
    float _2454 = (isnan(1.0) ? _4559 : (isnan(_4559) ? 1.0 : min(_4559, 1.0))) * (_2425 / ((_2429 * _2429) * 3.141590118408203125));
    uint _2468 = _2140 + 9u;
    float _2479 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2180].w)) * _654) * 0.949999988079071044921875);
    float _2480 = _2479 * _2479;
    float _2481 = cbLight._m0[_2180].x + _730;
    float _2482 = cbLight._m0[_2180].y + _731;
    float _2483 = cbLight._m0[_2180].z + _732;
    float _2487 = inversesqrt(dot(vec3(_2481, _2482, _2483), vec3(_2481, _2482, _2483)));
    float _2488 = _2487 * _2481;
    float _2489 = _2487 * _2482;
    float _2490 = _2487 * _2483;
    float _2491 = dot(vec3(_651, _652, _653), vec3(cbLight._m0[_2180].xyz));
    float _4570 = isnan(0.0) ? _2491 : (isnan(_2491) ? 0.0 : max(_2491, 0.0));
    float _2494 = isnan(1.0) ? _4570 : (isnan(_4570) ? 1.0 : min(_4570, 1.0));
    float _2495 = dot(vec3(_651, _652, _653), vec3(_2488, _2489, _2490));
    float _4581 = isnan(0.0) ? _2495 : (isnan(_2495) ? 0.0 : max(_2495, 0.0));
    float _2498 = isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0));
    float _2499 = dot(vec3(cbLight._m0[_2180].xyz), vec3(_2488, _2489, _2490));
    float _4592 = isnan(0.0) ? _2499 : (isnan(_2499) ? 0.0 : max(_2499, 0.0));
    float _2503 = _2480 * _2480;
    float _2507 = ((_2498 * _2498) * (_2503 + (-1.0))) + 1.0;
    float _2516 = (exp2(log2(1.0 - (isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2517 = 1.0 - _2480;
    float _2527 = (0.5 / (((_2416 * ((_2494 * _2517) + _2480)) + 9.9999999392252902907785028219223e-09) + (((_2416 * _2517) + _2480) * _2494))) * _2494;
    float _4603 = isnan(0.0) ? _2527 : (isnan(_2527) ? 0.0 : max(_2527, 0.0));
    float _2529 = (isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0))) * (_2503 / ((_2507 * _2507) * 3.141590118408203125));
    float _2539 = (((_2516 * cbLight._m0[_2468].x) * _2529) * _2163) + ((((cbLight._m0[_2387].x * _2129) * _2440) * _2454) * _2176);
    float _2540 = (((_2516 * cbLight._m0[_2468].y) * _2529) * _2163) + ((((cbLight._m0[_2387].y * _2131) * _2440) * _2454) * _2176);
    float _2541 = (((_2516 * cbLight._m0[_2468].z) * _2529) * _2163) + ((((cbLight._m0[_2387].z * _2133) * _2440) * _2454) * _2176);
    float _2597;
    float _2599;
    float _2601;
    if (_2216)
    {
        _2597 = _2539;
        _2599 = _2540;
        _2601 = _2541;
    }
    else
    {
        uint _2603 = _2140 + 2u;
        uint _2607 = _2140 + 10u;
        float _2621 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2603].w)) * _654) * 0.949999988079071044921875);
        float _2622 = _2621 * _2621;
        float _2623 = cbLight._m0[_2603].x + _730;
        float _2624 = cbLight._m0[_2603].y + _731;
        float _2625 = cbLight._m0[_2603].z + _732;
        float _2629 = inversesqrt(dot(vec3(_2623, _2624, _2625), vec3(_2623, _2624, _2625)));
        float _2630 = _2629 * _2623;
        float _2631 = _2629 * _2624;
        float _2632 = _2629 * _2625;
        float _2633 = dot(vec3(_651, _652, _653), vec3(cbLight._m0[_2603].xyz));
        float _4614 = isnan(0.0) ? _2633 : (isnan(_2633) ? 0.0 : max(_2633, 0.0));
        float _2636 = isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0));
        float _2637 = dot(vec3(_651, _652, _653), vec3(_2630, _2631, _2632));
        float _4625 = isnan(0.0) ? _2637 : (isnan(_2637) ? 0.0 : max(_2637, 0.0));
        float _2640 = isnan(1.0) ? _4625 : (isnan(_4625) ? 1.0 : min(_4625, 1.0));
        float _2641 = dot(vec3(cbLight._m0[_2603].xyz), vec3(_2630, _2631, _2632));
        float _4636 = isnan(0.0) ? _2641 : (isnan(_2641) ? 0.0 : max(_2641, 0.0));
        float _2645 = _2622 * _2622;
        float _2649 = ((_2640 * _2640) * (_2645 + (-1.0))) + 1.0;
        float _2658 = (exp2(log2(1.0 - (isnan(1.0) ? _4636 : (isnan(_4636) ? 1.0 : min(_4636, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2659 = 1.0 - _2622;
        float _2669 = (0.5 / (((_2416 * ((_2636 * _2659) + _2622)) + 9.9999999392252902907785028219223e-09) + (((_2416 * _2659) + _2622) * _2636))) * _2636;
        float _4647 = isnan(0.0) ? _2669 : (isnan(_2669) ? 0.0 : max(_2669, 0.0));
        float _2671 = (isnan(1.0) ? _4647 : (isnan(_4647) ? 1.0 : min(_4647, 1.0))) * (_2645 / ((_2649 * _2649) * 3.141590118408203125));
        float _2672 = isnan(1.0) ? _2155 : (isnan(_2155) ? 1.0 : min(_2155, 1.0));
        _2597 = (((_2658 * cbLight._m0[_2607].x) * _2671) * _2672) + _2539;
        _2599 = (((_2658 * cbLight._m0[_2607].y) * _2671) * _2672) + _2540;
        _2601 = (((_2658 * cbLight._m0[_2607].z) * _2671) * _2672) + _2541;
    }
    float _2703;
    float _2705;
    float _2707;
    if (_2325)
    {
        _2703 = _2597;
        _2705 = _2599;
        _2707 = _2601;
    }
    else
    {
        uint _2714 = _2140 + 3u;
        uint _2718 = _2140 + 11u;
        float _2732 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2714].w)) * _654) * 0.949999988079071044921875);
        float _2733 = _2732 * _2732;
        float _2734 = cbLight._m0[_2714].x + _730;
        float _2735 = cbLight._m0[_2714].y + _731;
        float _2736 = cbLight._m0[_2714].z + _732;
        float _2740 = inversesqrt(dot(vec3(_2734, _2735, _2736), vec3(_2734, _2735, _2736)));
        float _2741 = _2740 * _2734;
        float _2742 = _2740 * _2735;
        float _2743 = _2740 * _2736;
        float _2744 = dot(vec3(_651, _652, _653), vec3(cbLight._m0[_2714].xyz));
        float _4663 = isnan(0.0) ? _2744 : (isnan(_2744) ? 0.0 : max(_2744, 0.0));
        float _2747 = isnan(1.0) ? _4663 : (isnan(_4663) ? 1.0 : min(_4663, 1.0));
        float _2748 = dot(vec3(_651, _652, _653), vec3(_2741, _2742, _2743));
        float _4674 = isnan(0.0) ? _2748 : (isnan(_2748) ? 0.0 : max(_2748, 0.0));
        float _2751 = isnan(1.0) ? _4674 : (isnan(_4674) ? 1.0 : min(_4674, 1.0));
        float _2752 = dot(vec3(cbLight._m0[_2714].xyz), vec3(_2741, _2742, _2743));
        float _4685 = isnan(0.0) ? _2752 : (isnan(_2752) ? 0.0 : max(_2752, 0.0));
        float _2756 = _2733 * _2733;
        float _2760 = ((_2751 * _2751) * (_2756 + (-1.0))) + 1.0;
        float _2769 = (exp2(log2(1.0 - (isnan(1.0) ? _4685 : (isnan(_4685) ? 1.0 : min(_4685, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2770 = 1.0 - _2733;
        float _2780 = (0.5 / (((_2416 * ((_2747 * _2770) + _2733)) + 9.9999999392252902907785028219223e-09) + (((_2416 * _2770) + _2733) * _2747))) * _2747;
        float _4696 = isnan(0.0) ? _2780 : (isnan(_2780) ? 0.0 : max(_2780, 0.0));
        float _2782 = (isnan(1.0) ? _4696 : (isnan(_4696) ? 1.0 : min(_4696, 1.0))) * (_2756 / ((_2760 * _2760) * 3.141590118408203125));
        float _2783 = isnan(1.0) ? _2156 : (isnan(_2156) ? 1.0 : min(_2156, 1.0));
        _2703 = (((_2769 * cbLight._m0[_2718].x) * _2782) * _2783) + _2597;
        _2705 = (((_2769 * cbLight._m0[_2718].y) * _2782) * _2783) + _2599;
        _2707 = (((_2769 * cbLight._m0[_2718].z) * _2782) * _2783) + _2601;
    }
    float _2849;
    float _2851;
    float _2853;
    float _2855;
    float _2857;
    float _2859;
    if (_2138.y == 0u)
    {
        uvec4 _2804 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2805 = _2804.x;
        uint _2816 = uint((float(_2804.y) * floor(float(uint(cbSceneParam._m0[85u].y * _751) / _2805))) + floor(float(uint(cbSceneParam._m0[85u].x * _750) / _2805)));
        float _2826 = (log2(_1916 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2827 = isnan(0.0) ? _2826 : (isnan(_2826) ? 0.0 : max(_2826, 0.0));
        uint _2830 = uint(isnan(14.0) ? _2827 : (isnan(_2827) ? 14.0 : min(_2827, 14.0)));
        uvec4 _2835 = texelFetch(g_lightClusterGridBuffer, int(((_2830 << 2u) + (_2816 << 6u)) >> 2u));
        uint _2836 = _2835.x;
        uint _2837 = _2804.z;
        float _2916;
        float _2918;
        float _2920;
        float _2922;
        float _2924;
        float _2926;
        if (((((1u << ((_2837 >> 4u) & 15u)) + 4294967295u) & _2836) == 0u) || ((_2837 & 240u) == 0u))
        {
            _2916 = 0.0;
            _2918 = 0.0;
            _2920 = 0.0;
            _2922 = 0.0;
            _2924 = 0.0;
            _2926 = 0.0;
        }
        else
        {
            float _2917;
            float _2919;
            float _2921;
            float _2923;
            float _2925;
            float _2927;
            float _3069 = 0.0;
            float _3070 = 0.0;
            float _3071 = 0.0;
            float _3072 = 0.0;
            float _3073 = 0.0;
            float _3074 = 0.0;
            uint _3075 = 0u;
            uint _3084;
            bool _3085;
            for (;;)
            {
                _3084 = texelFetch(g_lightClassification, int((((_2830 << 5u) + (_2816 << 9u)) + (_3075 << 2u)) >> 2u)).x;
                _3085 = _3084 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3085)
                {
                    frontier_phi_71_pred = _3074;
                    frontier_phi_71_pred_1 = _3073;
                    frontier_phi_71_pred_2 = _3072;
                    frontier_phi_71_pred_3 = _3071;
                    frontier_phi_71_pred_4 = _3070;
                    frontier_phi_71_pred_5 = _3069;
                }
                else
                {
                    float _3214;
                    float _3215;
                    float _3216;
                    float _3217;
                    float _3218;
                    float _3219;
                    uint _3220;
                    _3214 = _3069;
                    _3215 = _3070;
                    _3216 = _3071;
                    _3217 = _3072;
                    _3218 = _3073;
                    _3219 = _3074;
                    _3220 = _3084;
                    float _3141;
                    float _3142;
                    float _3143;
                    float _3144;
                    float _3145;
                    float _3146;
                    for (;;)
                    {
                        uint _3224 = uint(findLSB(_3220)) + (_3075 << 5u);
                        uint _3221 = (_3220 + 4294967295u) & _3220;
                        uint _3226 = _3224 * 48u;
                        vec4 _3240 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3226)).x, texelFetch(g_PointLightRenderingBuffer, int(_3226 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3226 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3226 + 3u)).x));
                        uint _3246 = (_3224 * 48u) + 4u;
                        vec4 _3259 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3246)).x, texelFetch(g_PointLightRenderingBuffer, int(_3246 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3246 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3246 + 3u)).x));
                        uint _3265 = (_3224 * 48u) + 8u;
                        vec3 _3276 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3265)).x, texelFetch(g_PointLightRenderingBuffer, int(_3265 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3265 + 2u)).x));
                        float _3280 = _3240.x - _1914;
                        float _3281 = _3240.y - _1915;
                        float _3282 = _3240.z - _1916;
                        float _3283 = dot(vec3(_3280, _3281, _3282), vec3(_3280, _3281, _3282));
                        float _3286 = inversesqrt(_3283);
                        float _3287 = _3286 * _3280;
                        float _3288 = _3286 * _3281;
                        float _3289 = _3286 * _3282;
                        float _3290 = dot(vec3(_769, _772, _775), vec3(_3287, _3288, _3289));
                        float _3295 = 1.0 - (_3283 * _3240.w);
                        float _4722 = isnan(0.0) ? _3295 : (isnan(_3295) ? 0.0 : max(_3295, 0.0));
                        float _3296 = isnan(1.0) ? _4722 : (isnan(_4722) ? 1.0 : min(_4722, 1.0));
                        float _3297 = sqrt(_3283) * _3259.w;
                        float _3300 = 1.39999997615814208984375 / (_3297 + 1.39999997615814208984375);
                        float _3301 = _3300 * _3300;
                        float _3304 = ((1.0 - _3301) * _3290) + _3301;
                        float _3307 = _3297 * _3297;
                        float _3311 = ((isnan(0.0) ? _3304 : (isnan(_3304) ? 0.0 : max(_3304, 0.0))) * _3296) / ((_3307 * 0.699999988079071044921875) + 1.0);
                        float _3315 = (-0.0) - _1914;
                        float _3316 = (-0.0) - _1915;
                        float _3317 = (-0.0) - _1916;
                        float _3321 = inversesqrt(dot(vec3(_3315, _3316, _3317), vec3(_3315, _3316, _3317)));
                        float _3322 = _3321 * _3315;
                        float _3323 = _3321 * _3316;
                        float _3324 = _3321 * _3317;
                        float _3331 = exp2(log2(1.0 / ((_3307 * 3.5) + 5.0)) * 0.25);
                        float _3332 = 1.0 - _829;
                        float _3339 = sqrt(1.0 - ((1.0 - (_3332 * _3332)) * (1.0 - (_3331 * _3331))));
                        float _3340 = _3339 * _3339;
                        float _3341 = _3340 * _3340;
                        float _3342 = _3322 + _3287;
                        float _3343 = _3323 + _3288;
                        float _3344 = _3324 + _3289;
                        float _3348 = inversesqrt(dot(vec3(_3342, _3343, _3344), vec3(_3342, _3343, _3344)));
                        float _3352 = dot(vec3(_769, _772, _775), vec3(_3322, _3323, _3324));
                        float _4738 = isnan(0.0) ? _3352 : (isnan(_3352) ? 0.0 : max(_3352, 0.0));
                        float _3355 = isnan(1.0) ? _4738 : (isnan(_4738) ? 1.0 : min(_4738, 1.0));
                        float _3356 = dot(vec3(_769, _772, _775), vec3(_3348 * _3342, _3348 * _3343, _3348 * _3344));
                        float _4749 = isnan(0.0) ? _3356 : (isnan(_3356) ? 0.0 : max(_3356, 0.0));
                        float _3359 = isnan(1.0) ? _4749 : (isnan(_4749) ? 1.0 : min(_4749, 1.0));
                        float _3363 = ((_3359 * _3359) * (_3341 + (-1.0))) + 1.0;
                        float _3364 = _3300 * _3340;
                        float _3365 = _3364 * _3364;
                        float _3368 = ((1.0 - _3365) * _3290) + _3365;
                        float _4760 = isnan(0.0) ? _3368 : (isnan(_3368) ? 0.0 : max(_3368, 0.0));
                        float _3369 = isnan(1.0) ? _4760 : (isnan(_4760) ? 1.0 : min(_4760, 1.0));
                        float _3370 = 1.0 - _3340;
                        float _3380 = (0.5 / (((_3369 * ((_3355 * _3370) + _3340)) + 9.9999999392252902907785028219223e-09) + (((_3369 * _3370) + _3340) * _3355))) * _3369;
                        float _4771 = isnan(0.0) ? _3380 : (isnan(_3380) ? 0.0 : max(_3380, 0.0));
                        float _3390 = (((_3341 * 3.1415927410125732421875) * (isnan(1.0) ? _4771 : (isnan(_4771) ? 1.0 : min(_4771, 1.0)))) / ((_3363 * _3363) * ((_3307 * 2.1991131305694580078125) + 3.141590118408203125))) * _3296;
                        _3144 = (_3311 * _3259.x) + _3217;
                        _3145 = (_3311 * _3259.y) + _3218;
                        _3146 = (_3311 * _3259.z) + _3219;
                        _3141 = (_3390 * _3276.x) + _3214;
                        _3142 = (_3390 * _3276.y) + _3215;
                        _3143 = (_3390 * _3276.z) + _3216;
                        if (_3221 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3214 = _3141;
                            _3215 = _3142;
                            _3216 = _3143;
                            _3217 = _3144;
                            _3218 = _3145;
                            _3219 = _3146;
                            _3220 = _3221;
                        }
                    }
                    frontier_phi_71_pred = _3146;
                    frontier_phi_71_pred_1 = _3145;
                    frontier_phi_71_pred_2 = _3144;
                    frontier_phi_71_pred_3 = _3143;
                    frontier_phi_71_pred_4 = _3142;
                    frontier_phi_71_pred_5 = _3141;
                }
                _2927 = frontier_phi_71_pred;
                _2925 = frontier_phi_71_pred_1;
                _2923 = frontier_phi_71_pred_2;
                _2921 = frontier_phi_71_pred_3;
                _2919 = frontier_phi_71_pred_4;
                _2917 = frontier_phi_71_pred_5;
                uint _3076 = _3075 + 1u;
                if (_3076 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3069 = _2917;
                    _3070 = _2919;
                    _3071 = _2921;
                    _3072 = _2923;
                    _3073 = _2925;
                    _3074 = _2927;
                    _3075 = _3076;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2916 = _2917;
            _2918 = _2919;
            _2920 = _2921;
            _2922 = _2923;
            _2924 = _2925;
            _2926 = _2927;
        }
        uvec4 _2930 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2931 = _2930.z;
        uint _2933 = (_2931 >> 8u) & 15u;
        float _3037;
        float _3039;
        float _3041;
        float _3043;
        float _3045;
        float _3047;
        if (((4294967295u << _2933) & _2836) == 0u)
        {
            _3037 = _2916;
            _3039 = _2918;
            _3041 = _2920;
            _3043 = _2922;
            _3045 = _2924;
            _3047 = _2926;
        }
        else
        {
            float _3062 = inversesqrt(dot(vec3(_1914, _1915, _1916), vec3(_1914, _1915, _1916)));
            float _3063 = _3062 * _1914;
            float _3064 = _3062 * _1915;
            float _3065 = _3062 * _1916;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_2933 < ((_2931 >> 12u) & 15u))
            {
                float _3038;
                float _3040;
                float _3042;
                float _3044;
                float _3046;
                float _3048;
                float _3197 = _2916;
                float _3198 = _2918;
                float _3199 = _2920;
                float _3200 = _2922;
                float _3201 = _2924;
                float _3202 = _2926;
                uint _3203 = _2933;
                uint _3212;
                bool _3213;
                for (;;)
                {
                    _3212 = texelFetch(g_lightClassification, int((((_2830 << 5u) + (_2816 << 9u)) + (_3203 << 2u)) >> 2u)).x;
                    _3213 = _3212 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3213)
                    {
                        frontier_phi_82_pred = _3202;
                        frontier_phi_82_pred_1 = _3201;
                        frontier_phi_82_pred_2 = _3200;
                        frontier_phi_82_pred_3 = _3199;
                        frontier_phi_82_pred_4 = _3198;
                        frontier_phi_82_pred_5 = _3197;
                    }
                    else
                    {
                        float _3404;
                        float _3405;
                        float _3406;
                        float _3407;
                        float _3408;
                        float _3409;
                        float _3698;
                        float _3699;
                        float _3700;
                        float _3701;
                        float _3702;
                        float _3703;
                        float _3417 = _3197;
                        float _3418 = _3198;
                        float _3419 = _3199;
                        float _3420 = _3200;
                        float _3421 = _3201;
                        float _3422 = _3202;
                        uint _3423 = _3212;
                        uint _3424;
                        vec4 _3449;
                        float _3450;
                        vec4 _3465;
                        vec3 _3477;
                        vec4 _3492;
                        vec4 _3508;
                        float _3554;
                        bool _3555;
                        for (;;)
                        {
                            uint _3434 = ((_3203 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3423));
                            _3424 = (_3423 + 4294967295u) & _3423;
                            uint _3436 = _3434 * 40u;
                            _3449 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3436)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3436 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3436 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3436 + 3u)).x));
                            _3450 = _3449.w;
                            uint _3452 = (_3434 * 40u) + 4u;
                            _3465 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3452)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3452 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3452 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3452 + 3u)).x));
                            uint _3467 = (_3434 * 40u) + 8u;
                            _3477 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3467)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3467 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3467 + 2u)).x));
                            uint _3479 = (_3434 * 40u) + 16u;
                            _3492 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3479)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3479 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3479 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3479 + 3u)).x));
                            uint _3495 = (_3434 * 40u) + 20u;
                            _3508 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3495)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3495 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3495 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3495 + 3u)).x));
                            uint _3510 = (_3434 * 40u) + 24u;
                            vec4 _3523 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3510)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3510 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3510 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3510 + 3u)).x));
                            uint _3529 = (_3434 * 40u) + 28u;
                            vec4 _3542 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3529)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3529 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3529 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3529 + 3u)).x));
                            _3554 = fma(_1916, _3542.z, fma(_1915, _3542.y, _3542.x * _1914)) + _3542.w;
                            _3555 = !((fma(_1916, _3523.z, fma(_1915, _3523.y, _3523.x * _1914)) + _3523.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3555)
                            {
                                float _3582 = _3449.x - _1914;
                                float _3583 = _3449.y - _1915;
                                float _3584 = _3449.z - _1916;
                                float _3585 = dot(vec3(_3582, _3583, _3584), vec3(_3582, _3583, _3584));
                                float _3588 = inversesqrt(_3585);
                                float _3589 = _3588 * _3582;
                                float _3590 = _3588 * _3583;
                                float _3591 = _3588 * _3584;
                                float _3595 = 1.0 - (_3585 / (_3450 * _3450));
                                float _4782 = isnan(0.0) ? _3595 : (isnan(_3595) ? 0.0 : max(_3595, 0.0));
                                float _3596 = isnan(1.0) ? _4782 : (isnan(_4782) ? 1.0 : min(_4782, 1.0));
                                float _3600 = sqrt(_3585) * _3465.w;
                                float _3602 = 1.39999997615814208984375 / (_3600 + 1.39999997615814208984375);
                                float _3603 = _3602 * _3602;
                                float _3606 = ((1.0 - _3603) * dot(vec3(_3589, _3590, _3591), vec3(_769, _772, _775))) + _3603;
                                float _3609 = _3600 * _3600;
                                float _3613 = (fma(_1916, _3492.z, fma(_1915, _3492.y, _3492.x * _1914)) + _3492.w) / _3554;
                                float _3614 = (fma(_1916, _3508.z, fma(_1915, _3508.y, _3508.x * _1914)) + _3508.w) / _3554;
                                float _3618 = 1.0 - dot(vec2(_3613, _3614), vec2(_3613, _3614));
                                float _4798 = isnan(0.0) ? _3618 : (isnan(_3618) ? 0.0 : max(_3618, 0.0));
                                float _3619 = isnan(1.0) ? _4798 : (isnan(_4798) ? 1.0 : min(_4798, 1.0));
                                float _3620 = _3619 * (((isnan(0.0) ? _3606 : (isnan(_3606) ? 0.0 : max(_3606, 0.0))) * _3596) / ((_3609 * 0.699999988079071044921875) + 1.0));
                                float _3632 = exp2(log2(1.0 / ((_3609 * 3.5) + 5.0)) * 0.25);
                                float _3633 = 1.0 - _829;
                                float _3640 = sqrt(1.0 - ((1.0 - (_3633 * _3633)) * (1.0 - (_3632 * _3632))));
                                float _3641 = _3640 * _3640;
                                float _3642 = _3641 * _3641;
                                float _3643 = _3589 - _3063;
                                float _3644 = _3590 - _3064;
                                float _3645 = _3591 - _3065;
                                float _3649 = inversesqrt(dot(vec3(_3643, _3644, _3645), vec3(_3643, _3644, _3645)));
                                float _3653 = dot(vec3(_769, _772, _775), vec3((-0.0) - _3063, (-0.0) - _3064, (-0.0) - _3065));
                                float _4809 = isnan(0.0) ? _3653 : (isnan(_3653) ? 0.0 : max(_3653, 0.0));
                                float _3656 = isnan(1.0) ? _4809 : (isnan(_4809) ? 1.0 : min(_4809, 1.0));
                                float _3657 = dot(vec3(_769, _772, _775), vec3(_3649 * _3643, _3649 * _3644, _3649 * _3645));
                                float _4820 = isnan(0.0) ? _3657 : (isnan(_3657) ? 0.0 : max(_3657, 0.0));
                                float _3660 = isnan(1.0) ? _4820 : (isnan(_4820) ? 1.0 : min(_4820, 1.0));
                                float _3664 = ((_3660 * _3660) * (_3642 + (-1.0))) + 1.0;
                                float _3665 = _3602 * _3641;
                                float _3666 = _3665 * _3665;
                                float _3672 = ((1.0 - _3666) * dot(vec3(_769, _772, _775), vec3(_3589, _3590, _3591))) + _3666;
                                float _4831 = isnan(0.0) ? _3672 : (isnan(_3672) ? 0.0 : max(_3672, 0.0));
                                float _3673 = isnan(1.0) ? _4831 : (isnan(_4831) ? 1.0 : min(_4831, 1.0));
                                float _3674 = 1.0 - _3641;
                                float _3684 = (0.5 / (((_3673 * ((_3656 * _3674) + _3641)) + 9.9999999392252902907785028219223e-09) + (((_3673 * _3674) + _3641) * _3656))) * _3673;
                                float _4842 = isnan(0.0) ? _3684 : (isnan(_3684) ? 0.0 : max(_3684, 0.0));
                                float _3694 = (_3619 * _3596) * (((_3642 * 3.1415927410125732421875) * (isnan(1.0) ? _4842 : (isnan(_4842) ? 1.0 : min(_4842, 1.0)))) / ((_3664 * _3664) * ((_3609 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3620 * _3465.z;
                                frontier_phi_88_pred_1 = _3620 * _3465.y;
                                frontier_phi_88_pred_2 = _3620 * _3465.x;
                                frontier_phi_88_pred_3 = _3694 * _3477.z;
                                frontier_phi_88_pred_4 = _3694 * _3477.y;
                                frontier_phi_88_pred_5 = _3694 * _3477.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3703 = frontier_phi_88_pred;
                            _3702 = frontier_phi_88_pred_1;
                            _3701 = frontier_phi_88_pred_2;
                            _3700 = frontier_phi_88_pred_3;
                            _3699 = frontier_phi_88_pred_4;
                            _3698 = frontier_phi_88_pred_5;
                            _3407 = _3701 + _3420;
                            _3408 = _3702 + _3421;
                            _3409 = _3703 + _3422;
                            _3404 = _3698 + _3417;
                            _3405 = _3699 + _3418;
                            _3406 = _3700 + _3419;
                            if (_3424 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3417 = _3404;
                                _3418 = _3405;
                                _3419 = _3406;
                                _3420 = _3407;
                                _3421 = _3408;
                                _3422 = _3409;
                                _3423 = _3424;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3409;
                        frontier_phi_82_pred_1 = _3408;
                        frontier_phi_82_pred_2 = _3407;
                        frontier_phi_82_pred_3 = _3406;
                        frontier_phi_82_pred_4 = _3405;
                        frontier_phi_82_pred_5 = _3404;
                    }
                    _3048 = frontier_phi_82_pred;
                    _3046 = frontier_phi_82_pred_1;
                    _3044 = frontier_phi_82_pred_2;
                    _3042 = frontier_phi_82_pred_3;
                    _3040 = frontier_phi_82_pred_4;
                    _3038 = frontier_phi_82_pred_5;
                    uint _3204 = _3203 + 1u;
                    if (_3204 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3197 = _3038;
                        _3198 = _3040;
                        _3199 = _3042;
                        _3200 = _3044;
                        _3201 = _3046;
                        _3202 = _3048;
                        _3203 = _3204;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3044;
                frontier_phi_63_64_ladder_1 = _3048;
                frontier_phi_63_64_ladder_2 = _3046;
                frontier_phi_63_64_ladder_3 = _3042;
                frontier_phi_63_64_ladder_4 = _3040;
                frontier_phi_63_64_ladder_5 = _3038;
            }
            else
            {
                frontier_phi_63_64_ladder = _2922;
                frontier_phi_63_64_ladder_1 = _2926;
                frontier_phi_63_64_ladder_2 = _2924;
                frontier_phi_63_64_ladder_3 = _2920;
                frontier_phi_63_64_ladder_4 = _2918;
                frontier_phi_63_64_ladder_5 = _2916;
            }
            _3037 = frontier_phi_63_64_ladder_5;
            _3039 = frontier_phi_63_64_ladder_4;
            _3041 = frontier_phi_63_64_ladder_3;
            _3043 = frontier_phi_63_64_ladder;
            _3045 = frontier_phi_63_64_ladder_2;
            _3047 = frontier_phi_63_64_ladder_1;
        }
        float _3052 = isnan(1.0) ? _813 : (isnan(_813) ? 1.0 : min(_813, 1.0));
        _2849 = (_3052 * _3043) + _2380;
        _2851 = (_3052 * _3045) + _2382;
        _2853 = (_3052 * _3047) + _2384;
        _2855 = ((_3037 * 0.039999999105930328369140625) * _3052) + _2703;
        _2857 = ((_3039 * 0.039999999105930328369140625) * _3052) + _2705;
        _2859 = ((_3041 * 0.039999999105930328369140625) * _3052) + _2707;
    }
    else
    {
        _2849 = _2380;
        _2851 = _2382;
        _2853 = _2384;
        _2855 = _2703;
        _2857 = _2705;
        _2859 = _2707;
    }
    float _4858 = isnan(0.0) ? _798 : (isnan(_798) ? 0.0 : max(_798, 0.0));
    float _4869 = isnan(0.0) ? _799 : (isnan(_799) ? 0.0 : max(_799, 0.0));
    float _4880 = isnan(0.0) ? _800 : (isnan(_800) ? 0.0 : max(_800, 0.0));
    float _2876 = ((isnan(1.0) ? _4858 : (isnan(_4858) ? 1.0 : min(_4858, 1.0))) * (_2849 + ((isnan(0.0) ? _1568 : (isnan(_1568) ? 0.0 : max(_1568, 0.0))) * _813))) + ((_2855 + ((isnan(0.0) ? _1861 : (isnan(_1861) ? 0.0 : max(_1861, 0.0))) * _1647)) * cbPerFrame._m0[3u].x);
    float _2877 = ((isnan(1.0) ? _4869 : (isnan(_4869) ? 1.0 : min(_4869, 1.0))) * (_2851 + ((isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0))) * _813))) + ((_2857 + ((isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0))) * _1647)) * cbPerFrame._m0[3u].x);
    float _2878 = ((isnan(1.0) ? _4880 : (isnan(_4880) ? 1.0 : min(_4880, 1.0))) * (_2853 + ((isnan(0.0) ? _1574 : (isnan(_1574) ? 0.0 : max(_1574, 0.0))) * _813))) + ((_2859 + ((isnan(0.0) ? _1867 : (isnan(_1867) ? 0.0 : max(_1867, 0.0))) * _1647)) * cbPerFrame._m0[3u].x);
    uint _2879 = _247 + 6u;
    float _2887 = _750 / cbSceneParam._m0[86u].x;
    float _2888 = _751 / cbSceneParam._m0[86u].y;
    vec4 _2902 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2887, _2888, (log2((isnan(cbSceneParam._m0[77u].w) ? _672 : (isnan(_672) ? cbSceneParam._m0[77u].w : min(_672, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2904 = _2902.x;
    float _2905 = _2902.y;
    float _2906 = _2902.z;
    float _2907 = _2902.w;
    float _2979;
    float _2981;
    float _2983;
    float _2985;
    if (_672 > cbSceneParam._m0[78u].w)
    {
        float _2941 = isnan(_672) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _672 : min(cbSceneParam._m0[80u].w, _672));
        float _2942 = _2941 / _672;
        float _2953 = _2942 * _723;
        float _2954 = _724 * _2942;
        float _2955 = (-0.0) - _2954;
        float _2957 = _2942 * _725;
        float _2959 = (cbSceneParam._m0[77u].w * _2955) / _2941;
        float _2960 = _2959 + cbSceneParam._m0[79u].w;
        float _2961 = cbSceneParam._m0[79u].w - _2954;
        float _2967 = sqrt(((_2953 * _2953) + (_2954 * _2954)) + (_2957 * _2957));
        float _2970 = (1.0 - (cbSceneParam._m0[77u].w / _2941)) * _2967;
        float _2975 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2977 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3154;
        if (abs((_2955 - _2959) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3154 = ((((_2960 > 0.0) ? exp2(_2975 * _2960) : (2.0 - exp2(_2977 * _2960))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2970;
        }
        else
        {
            float _3098 = 1.0 / cbSceneParam._m0[80u].x;
            float _3099 = isnan(_2961) ? _2960 : (isnan(_2960) ? _2961 : max(_2960, _2961));
            float _3100 = isnan(_2961) ? _2960 : (isnan(_2960) ? _2961 : min(_2960, _2961));
            float _3109 = isnan(0.0) ? _3099 : (isnan(_3099) ? 0.0 : min(_3099, 0.0));
            float _3110 = isnan(0.0) ? _3100 : (isnan(_3100) ? 0.0 : min(_3100, 0.0));
            _3154 = ((abs(_2967 / _2955) * cbSceneParam._m0[80u].y) * ((((_3109 - _3110) * 2.0) - ((exp2(_2975 * (isnan(0.0) ? _3099 : (isnan(_3099) ? 0.0 : max(_3099, 0.0)))) - exp2(_2975 * (isnan(0.0) ? _3100 : (isnan(_3100) ? 0.0 : max(_3100, 0.0))))) * _3098)) - ((exp2(_2977 * _3109) - exp2(_2977 * _3110)) * _3098))) + (_2970 * cbSceneParam._m0[80u].z);
        }
        vec4 _3156 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2887, _2888, 1.0), 0.0);
        float _3165 = exp2((_3154 * (-1.44269502162933349609375)) * (1.0 - _3156.w));
        float _3166 = log2(_3165);
        float _3182 = log2(_2907);
        _2979 = (exp2(_3182 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3166 * cbSceneParam._m0[78u].x)) * _3156.x) / cbSceneParam._m0[78u].x)) + _2904;
        _2981 = (exp2(_3182 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3166 * cbSceneParam._m0[78u].y)) * _3156.y) / cbSceneParam._m0[78u].y)) + _2905;
        _2983 = (exp2(_3182 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3166 * cbSceneParam._m0[78u].z)) * _3156.z) / cbSceneParam._m0[78u].z)) + _2906;
        _2985 = _3165 * _2907;
    }
    else
    {
        _2979 = _2904;
        _2981 = _2905;
        _2983 = _2906;
        _2985 = _2907;
    }
    bool _3192;
    vec4 _2995;
    vec4 _3017;
    float _3019;
    float _3023;
    float _3024;
    float _3025;
    float _3026;
    bool _3036;
    for (;;)
    {
        _2995 = cbMatDynParam._m0[0u];
        float _2997 = roundEven(_2995.y);
        bool _2998 = _2997 == 3.0;
        float _2999 = log2(_2985);
        float _3006 = exp2(_2999 * cbSceneParam._m0[78u].x) * _2876;
        float _3007 = exp2(_2999 * cbSceneParam._m0[78u].y) * _2877;
        float _3008 = exp2(_2999 * cbSceneParam._m0[78u].z) * _2878;
        float _3015 = _739 + (-0.5);
        _3017 = cbMtdParam._m0[1u];
        _3019 = _3017.y * _3015;
        float _3022 = (_2997 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3023 = _3022 * (_2998 ? _3006 : (_3006 + (cbSceneParam._m0[72u].w * _2979)));
        _3024 = _3022 * (_2998 ? _3007 : (_3007 + (cbSceneParam._m0[72u].w * _2981)));
        _3025 = _3022 * (_2998 ? _3008 : (_3008 + (cbSceneParam._m0[72u].w * _2983)));
        _3026 = _3015 * 0.999000012874603271484375;
        _3036 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3036)
        {
            if ((cbInstanceData._m0[_247 + 7u].x + _3026) < 0.5)
            {
                _3192 = true;
                break;
            }
        }
        uint _3133 = _788 + uint(_2995.w);
        if ((cbInstanceData._m0[_3133].w < 1.0) && ((cbInstanceData._m0[_3133].w + _3026) < 0.5))
        {
            _3192 = true;
            break;
        }
        if ((_3019 + 1.0) < _3017.x)
        {
            _3192 = true;
            break;
        }
        _3192 = false;
        break;
    }
    float _3395;
    if (_3192)
    {
        discard_state = true;
        _3395 = 0.0;
    }
    else
    {
        _3395 = cbInstanceData._m0[_2879].w;
    }
    SV_Target.x = _3023;
    SV_Target.y = _3024;
    SV_Target.z = _3025;
    SV_Target.w = _3395;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2879].w;
    discard_exit();
}


