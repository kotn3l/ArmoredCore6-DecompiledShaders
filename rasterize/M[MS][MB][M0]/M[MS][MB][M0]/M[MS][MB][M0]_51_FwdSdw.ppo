#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1211;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _220 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _221 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _222 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _228 = inversesqrt(dot(vec3(_220, _221, _222), vec3(_220, _221, _222)));
    float _229 = _228 * _220;
    float _230 = _228 * _221;
    float _231 = _228 * _222;
    float _235 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _236 = _235 * NORMAL.x;
    float _237 = _235 * NORMAL.y;
    float _238 = _235 * NORMAL.z;
    float _242 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _243 = _242 * TANGENT.x;
    float _244 = _242 * TANGENT.y;
    float _245 = _242 * TANGENT.z;
    float _254 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _256 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _257 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3799 = isnan(0.0) ? _254 : (isnan(_254) ? 0.0 : max(_254, 0.0));
    float _3810 = isnan(0.0) ? _256 : (isnan(_256) ? 0.0 : max(_256, 0.0));
    float _3821 = isnan(0.0) ? _257 : (isnan(_257) ? 0.0 : max(_257, 0.0));
    uint _267 = uint(roundEven(NORMAL.w)) * 13u;
    uint _272 = _267 + 1u;
    uint _276 = _267 + 2u;
    float _285 = sqrt(((cbInstanceData._m0[_272].x * cbInstanceData._m0[_272].x) + (cbInstanceData._m0[_267].x * cbInstanceData._m0[_267].x)) + (cbInstanceData._m0[_276].x * cbInstanceData._m0[_276].x));
    float _286 = _285 * TEXCOORD.z;
    float _287 = _285 * TEXCOORD.w;
    vec4 _300 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _286) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _287) + cbTextureTilingScale._m0[13u].w));
    vec4 _323 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _328 = _323.x * cbMtdParam._m0[9u].x;
    float _329 = _323.y * cbMtdParam._m0[9u].y;
    float _330 = _323.z * cbMtdParam._m0[9u].z;
    float _334 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _300.x) * _328;
    float _337 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _300.y) * _329;
    float _340 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _300.z) * _330;
    float _347 = ((_328 - _334) * (isnan(1.0) ? _3799 : (isnan(_3799) ? 1.0 : min(_3799, 1.0)))) + _334;
    float _348 = ((_329 - _337) * (isnan(1.0) ? _3810 : (isnan(_3810) ? 1.0 : min(_3810, 1.0)))) + _337;
    float _349 = ((_330 - _340) * (isnan(1.0) ? _3821 : (isnan(_3821) ? 1.0 : min(_3821, 1.0)))) + _340;
    vec4 _368 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _286) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _287) + cbTextureTilingScale._m0[14u].w));
    vec4 _388 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _286) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _287) + cbTextureTilingScale._m0[20u].w));
    vec4 _414 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _418 = _414.z;
    float _422 = (_414.x * 2.0) + (-1.0);
    float _423 = (_414.y * 2.0) + (-1.0);
    float _424 = dot(vec2(_422, _423), vec2(_422, _423));
    float _3832 = isnan(0.0) ? _424 : (isnan(_424) ? 0.0 : max(_424, 0.0));
    float _429 = sqrt(1.0 - (isnan(1.0) ? _3832 : (isnan(_3832) ? 1.0 : min(_3832, 1.0))));
    float _434 = _422 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_388.x * 2.0) + (-1.0)));
    float _435 = _423 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_388.y * 2.0) + (-1.0)));
    float _438 = fma(_429, _236, fma(_435, _243, _434 * _229));
    float _441 = fma(_429, _237, fma(_435, _244, _434 * _230));
    float _444 = fma(_429, _238, fma(_435, _245, _434 * _231));
    float _448 = inversesqrt(dot(vec3(_438, _441, _444), vec3(_438, _441, _444)));
    vec4 _484 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _286) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _287) + cbTextureTilingScale._m0[11u].w));
    float _486 = _484.x;
    float _487 = 1.0 - _486;
    float _496 = (cbMtdParam._m0[19u].x + dot(vec4(_448 * _438, _448 * _441, _448 * _444, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_486 - _487) * cbMtdParam._m0[24u].z) + _487) * cbMtdParam._m0[21u].z);
    float _3843 = isnan(0.0) ? _496 : (isnan(_496) ? 0.0 : max(_496, 0.0));
    float _497 = isnan(1.0) ? _3843 : (isnan(_3843) ? 1.0 : min(_3843, 1.0));
    float _499 = (-0.0) - cbMtdParam._m0[24u].y;
    float _501 = isnan(0.0) ? _499 : (isnan(_499) ? 0.0 : max(_499, 0.0));
    float _502 = isnan(1.0) ? _501 : (isnan(_501) ? 1.0 : min(_501, 1.0));
    float _509 = _497 - ((_497 * TEXCOORD_8.x) * _502);
    float _510 = _497 - ((_497 * TEXCOORD_8.y) * _502);
    float _511 = _497 - ((_497 * TEXCOORD_8.z) * _502);
    float _518 = (_509 * ((_368.x * cbMtdParam._m0[18u].x) - _347)) + _347;
    float _519 = (_510 * ((_368.y * cbMtdParam._m0[18u].y) - _348)) + _348;
    float _520 = (_511 * ((_368.z * cbMtdParam._m0[18u].z) - _349)) + _349;
    vec4 _532 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _286) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _287) + cbTextureTilingScale._m0[19u].w));
    float _534 = _532.x;
    float _535 = 1.0 - _534;
    float _563 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_534 - _535) * cbMtdParam._m0[24u].w) + _535) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3864 = isnan(0.0) ? _563 : (isnan(_563) ? 0.0 : max(_563, 0.0));
    float _564 = isnan(1.0) ? _3864 : (isnan(_3864) ? 1.0 : min(_3864, 1.0));
    float _572 = ((((cbMtdParam._m0[10u].x - _518) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _564) + _518;
    float _573 = ((((cbMtdParam._m0[10u].y - _519) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _564) + _519;
    float _574 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _520)) * _564) + _520;
    float _579 = (((_388.z - _418) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _418;
    vec4 _593 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _286) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _287) + cbTextureTilingScale._m0[15u].w));
    float _600 = (_593.x * 2.0) + (-1.0);
    float _601 = (_593.y * 2.0) + (-1.0);
    float _602 = dot(vec2(_600, _601), vec2(_600, _601));
    float _3875 = isnan(0.0) ? _602 : (isnan(_602) ? 0.0 : max(_602, 0.0));
    float _610 = ((_593.z - _579) * _509) + _579;
    float _613 = ((cbMtdParam._m0[23u].y - _610) * _564) + _610;
    vec4 _632 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _286) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _287) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _638 = (_632.x * 2.0) + (-1.0);
    float _639 = (_632.y * 2.0) + (-1.0);
    float _640 = dot(vec2(_638, _639), vec2(_638, _639));
    float _3886 = isnan(0.0) ? _640 : (isnan(_640) ? 0.0 : max(_640, 0.0));
    float _655 = ((sqrt(1.0 - (isnan(1.0) ? _3875 : (isnan(_3875) ? 1.0 : min(_3875, 1.0)))) - _429) * _511) + _429;
    float _658 = (((_600 - _434) * _509) + _434) + (cbMtdParam._m0[21u].x * _434);
    float _659 = (((_601 - _435) * _510) + _435) + (cbMtdParam._m0[21u].x * _435);
    float _670 = (((_638 - _658) + (_658 * cbMtdParam._m0[22u].z)) * _564) + _658;
    float _671 = (((_639 - _659) + (_659 * cbMtdParam._m0[22u].z)) * _564) + _659;
    float _672 = (_564 * (sqrt(1.0 - (isnan(1.0) ? _3886 : (isnan(_3886) ? 1.0 : min(_3886, 1.0)))) - _655)) + _655;
    float _674 = cbMtdParam._m0[22u].x + _414.w;
    float _677 = fma(_672, _236, fma(_671, _243, _670 * _229));
    float _680 = fma(_672, _237, fma(_671, _244, _670 * _230));
    float _683 = fma(_672, _238, fma(_671, _245, _670 * _231));
    float _687 = inversesqrt(dot(vec3(_677, _680, _683), vec3(_677, _680, _683)));
    float _688 = _687 * _677;
    float _689 = _687 * _680;
    float _690 = _687 * _683;
    float _3897 = isnan(0.0) ? _613 : (isnan(_613) ? 0.0 : max(_613, 0.0));
    float _691 = isnan(1.0) ? _3897 : (isnan(_3897) ? 1.0 : min(_3897, 1.0));
    float _3908 = isnan(0.0) ? _674 : (isnan(_674) ? 0.0 : max(_674, 0.0));
    float _3919 = isnan(0.0) ? _572 : (isnan(_572) ? 0.0 : max(_572, 0.0));
    float _3930 = isnan(0.0) ? _573 : (isnan(_573) ? 0.0 : max(_573, 0.0));
    float _3941 = isnan(0.0) ? _574 : (isnan(_574) ? 0.0 : max(_574, 0.0));
    float _709 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _749 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _759 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _749);
    float _760 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _749);
    float _761 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _749);
    float _765 = inversesqrt(dot(vec3(_759, _760, _761), vec3(_759, _760, _761)));
    float _766 = _759 * _765;
    float _767 = _760 * _765;
    float _768 = _761 * _765;
    float _774 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _775 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _796 = fma(_690, cbSceneParam._m0[5u].z, fma(_689, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _688));
    float _799 = fma(_690, cbSceneParam._m0[6u].z, fma(_689, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _688));
    float _802 = fma(_690, cbSceneParam._m0[7u].z, fma(_689, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _688));
    uint _816 = (_267 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _822 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3919 : (isnan(_3919) ? 1.0 : min(_3919, 1.0)))) * cbInstanceData._m0[_816].x;
    float _823 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3930 : (isnan(_3930) ? 1.0 : min(_3930, 1.0)))) * cbInstanceData._m0[_816].y;
    float _824 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3941 : (isnan(_3941) ? 1.0 : min(_3941, 1.0)))) * cbInstanceData._m0[_816].z;
    float _3952 = isnan(0.0) ? _822 : (isnan(_822) ? 0.0 : max(_822, 0.0));
    float _825 = isnan(1.0) ? _3952 : (isnan(_3952) ? 1.0 : min(_3952, 1.0));
    float _3963 = isnan(0.0) ? _823 : (isnan(_823) ? 0.0 : max(_823, 0.0));
    float _826 = isnan(1.0) ? _3963 : (isnan(_3963) ? 1.0 : min(_3963, 1.0));
    float _3974 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
    float _827 = isnan(1.0) ? _3974 : (isnan(_3974) ? 1.0 : min(_3974, 1.0));
    vec4 _836 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _774, cbSceneParam._m0[86u].y * _775));
    float _840 = ((isnan(1.0) ? _3908 : (isnan(_3908) ? 1.0 : min(_3908, 1.0))) * TEXCOORD_5.w) * _836.x;
    float _841 = dot(vec3(_688, _689, _690), vec3(_766, _767, _768));
    float _844 = _841 * 2.0;
    float _848 = (_844 * _688) - _766;
    float _849 = (_844 * _689) - _767;
    float _850 = (_844 * _690) - _768;
    float _854 = abs(dot(vec3(_766, _767, _768), vec3(_688, _689, _690)));
    float _3985 = isnan(0.0) ? _854 : (isnan(_854) ? 0.0 : max(_854, 0.0));
    float _856 = sqrt(_691);
    float _869 = exp2((_856 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3985 : (isnan(_3985) ? 1.0 : min(_3985, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_856 * 3.0));
    float _901 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _905 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _909 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1210;
    float _1212;
    float _1213;
    float _1214;
    float _1215;
    float _1216;
    float _1217;
    float _1218;
    float _1219;
    float _1220;
    float _1221;
    float _1222;
    float _1223;
    float _1224;
    float _1225;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _935 = fma(_909, cbModelParam._m0[26u].z, fma(_905, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _901));
        float _939 = fma(_909, cbModelParam._m0[27u].z, fma(_905, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _901));
        float _943 = fma(_909, cbModelParam._m0[28u].z, fma(_905, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _901));
        float _968 = _901 + _688;
        float _969 = _905 + _689;
        float _970 = _909 + _690;
        float _980 = fma(_970, cbModelParam._m0[26u].z, fma(_969, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _968)) - _935;
        float _981 = fma(_970, cbModelParam._m0[27u].z, fma(_969, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _968)) - _939;
        float _982 = fma(_970, cbModelParam._m0[28u].z, fma(_969, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _968)) - _943;
        float _986 = inversesqrt(dot(vec3(_980, _981, _982), vec3(_980, _981, _982)));
        float _999 = ((_986 * _980) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_935 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1000 = ((_986 * _981) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_939 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1001 = ((_986 * _982) / cbModelParam._m0[34u].z) + ((((((_943 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1004 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_999, _1000, _1001), 0.0);
        vec4 _1011 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_999, _1000, _1001), 0.0);
        vec4 _1018 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_999, _1000, _1001), 0.0);
        vec4 _1025 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_999, _1000, _1001), 0.0);
        float _1038 = exp2((_1004.w + (-0.5)) * 20.0) * 2.0;
        float _1039 = _1038 * (_1004.x + (-0.5));
        float _1040 = _1038 * (_1004.y + (-0.5));
        float _1041 = _1038 * (_1004.z + (-0.5));
        float _1048 = exp2((_1011.w + (-0.5)) * 20.0) * 2.0;
        float _1049 = _1048 * (_1011.x + (-0.5));
        float _1050 = _1048 * (_1011.y + (-0.5));
        float _1051 = _1048 * (_1011.z + (-0.5));
        float _1058 = exp2((_1018.w + (-0.5)) * 20.0) * 2.0;
        float _1059 = _1058 * (_1018.x + (-0.5));
        float _1060 = _1058 * (_1018.y + (-0.5));
        float _1061 = _1058 * (_1018.z + (-0.5));
        float _1068 = exp2((_1025.w + (-0.5)) * 20.0) * 2.0;
        float _1069 = _1068 * (_1025.x + (-0.5));
        float _1070 = _1068 * (_1025.y + (-0.5));
        float _1071 = _1068 * (_1025.z + (-0.5));
        float _1072 = isnan(0.0) ? _1069 : (isnan(_1069) ? 0.0 : max(_1069, 0.0));
        float _1073 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
        float _1074 = isnan(0.0) ? _1071 : (isnan(_1071) ? 0.0 : max(_1071, 0.0));
        float _1075 = _1039 * 0.5;
        float _1076 = _1049 * 0.5;
        float _1077 = _1059 * 0.5;
        float _1078 = dot(vec3(_1075, _1076, _1077), vec3(_1075, _1076, _1077));
        float _1083 = (_1078 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1078);
        float _1092 = (dot(vec3(_688, _689, _690), vec3(_1083 * _1075, _1083 * _1076, _1083 * _1077)) + 1.0) * 0.5;
        float _4011 = isnan(0.0) ? _1092 : (isnan(_1092) ? 0.0 : max(_1092, 0.0));
        float _1102 = sqrt(((_1076 * _1076) + (_1075 * _1075)) + (_1077 * _1077)) / (_1072 + 9.9999997473787516355514526367188e-06);
        float _4022 = isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0));
        float _1103 = isnan(1.0) ? _4022 : (isnan(_4022) ? 1.0 : min(_4022, 1.0));
        float _1104 = _1103 * 2.0;
        float _1108 = (1.0 - _1103) / (_1103 + 1.0);
        float _4033 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
        float _1109 = isnan(1.0) ? _4033 : (isnan(_4033) ? 1.0 : min(_4033, 1.0));
        float _1118 = ((((1.0 - _1109) * (_1104 + 2.0)) * exp2(log2(isnan(1.0) ? _4011 : (isnan(_4011) ? 1.0 : min(_4011, 1.0))) * (_1104 + 1.0))) + _1109) * _1072;
        float _1119 = _1040 * 0.5;
        float _1120 = _1050 * 0.5;
        float _1121 = _1060 * 0.5;
        float _1122 = dot(vec3(_1119, _1120, _1121), vec3(_1119, _1120, _1121));
        float _1127 = (_1122 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1122);
        float _1135 = (dot(vec3(_688, _689, _690), vec3(_1127 * _1119, _1127 * _1120, _1127 * _1121)) + 1.0) * 0.5;
        float _4044 = isnan(0.0) ? _1135 : (isnan(_1135) ? 0.0 : max(_1135, 0.0));
        float _1144 = sqrt(((_1120 * _1120) + (_1119 * _1119)) + (_1121 * _1121)) / (_1073 + 9.9999997473787516355514526367188e-06);
        float _4055 = isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0));
        float _1145 = isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0));
        float _1146 = _1145 * 2.0;
        float _1150 = (1.0 - _1145) / (_1145 + 1.0);
        float _4066 = isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0));
        float _1151 = isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0));
        float _1160 = ((((1.0 - _1151) * (_1146 + 2.0)) * exp2(log2(isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0))) * (_1146 + 1.0))) + _1151) * _1073;
        float _1161 = _1041 * 0.5;
        float _1162 = _1051 * 0.5;
        float _1163 = _1061 * 0.5;
        float _1164 = dot(vec3(_1161, _1162, _1163), vec3(_1161, _1162, _1163));
        float _1169 = (_1164 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1164);
        float _1177 = (dot(vec3(_688, _689, _690), vec3(_1169 * _1161, _1169 * _1162, _1169 * _1163)) + 1.0) * 0.5;
        float _4077 = isnan(0.0) ? _1177 : (isnan(_1177) ? 0.0 : max(_1177, 0.0));
        float _1186 = sqrt(((_1162 * _1162) + (_1161 * _1161)) + (_1163 * _1163)) / (_1074 + 9.9999997473787516355514526367188e-06);
        float _4088 = isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0));
        float _1187 = isnan(1.0) ? _4088 : (isnan(_4088) ? 1.0 : min(_4088, 1.0));
        float _1188 = _1187 * 2.0;
        float _1192 = (1.0 - _1187) / (_1187 + 1.0);
        float _4099 = isnan(0.0) ? _1192 : (isnan(_1192) ? 0.0 : max(_1192, 0.0));
        float _1193 = isnan(1.0) ? _4099 : (isnan(_4099) ? 1.0 : min(_4099, 1.0));
        float _1202 = ((((1.0 - _1193) * (_1188 + 2.0)) * exp2(log2(isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0))) * (_1188 + 1.0))) + _1193) * _1074;
        _1210 = _1041;
        _1212 = _1040;
        _1213 = _1039;
        _1214 = _1051;
        _1215 = _1050;
        _1216 = _1049;
        _1217 = _1061;
        _1218 = _1060;
        _1219 = _1059;
        _1220 = _1074;
        _1221 = _1073;
        _1222 = _1072;
        _1223 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0)));
        _1224 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0)));
        _1225 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0)));
    }
    else
    {
        _1210 = _1211;
        _1212 = _1211;
        _1213 = _1211;
        _1214 = _1211;
        _1215 = _1211;
        _1216 = _1211;
        _1217 = _1211;
        _1218 = _1211;
        _1219 = _1211;
        _1220 = _1211;
        _1221 = _1211;
        _1222 = _1211;
        _1223 = 0.0;
        _1224 = 0.0;
        _1225 = 0.0;
    }
    float _1519;
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    float _1526;
    float _1527;
    float _1528;
    float _1529;
    float _1530;
    float _1531;
    float _1532;
    float _1533;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1250 = fma(_909, cbModelParam._m0[30u].z, fma(_905, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _901));
        float _1254 = fma(_909, cbModelParam._m0[31u].z, fma(_905, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _901));
        float _1258 = fma(_909, cbModelParam._m0[32u].z, fma(_905, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _901));
        float _1281 = _901 + _688;
        float _1282 = _905 + _689;
        float _1283 = _909 + _690;
        float _1293 = fma(_1283, cbModelParam._m0[30u].z, fma(_1282, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1281)) - _1250;
        float _1294 = fma(_1283, cbModelParam._m0[31u].z, fma(_1282, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1281)) - _1254;
        float _1295 = fma(_1283, cbModelParam._m0[32u].z, fma(_1282, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1281)) - _1258;
        float _1299 = inversesqrt(dot(vec3(_1293, _1294, _1295), vec3(_1293, _1294, _1295)));
        float _1312 = ((_1299 * _1293) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1250 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1313 = ((_1299 * _1294) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1254 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1314 = ((_1299 * _1295) / cbModelParam._m0[35u].z) + ((((((_1258 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1316 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1312, _1313, _1314), 0.0);
        vec4 _1323 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1312, _1313, _1314), 0.0);
        vec4 _1330 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1312, _1313, _1314), 0.0);
        vec4 _1337 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1312, _1313, _1314), 0.0);
        float _1349 = exp2((_1316.w + (-0.5)) * 20.0) * 2.0;
        float _1350 = _1349 * (_1316.x + (-0.5));
        float _1351 = _1349 * (_1316.y + (-0.5));
        float _1352 = _1349 * (_1316.z + (-0.5));
        float _1359 = exp2((_1323.w + (-0.5)) * 20.0) * 2.0;
        float _1360 = _1359 * (_1323.x + (-0.5));
        float _1361 = _1359 * (_1323.y + (-0.5));
        float _1362 = _1359 * (_1323.z + (-0.5));
        float _1369 = exp2((_1330.w + (-0.5)) * 20.0) * 2.0;
        float _1370 = _1369 * (_1330.x + (-0.5));
        float _1371 = _1369 * (_1330.y + (-0.5));
        float _1372 = _1369 * (_1330.z + (-0.5));
        float _1379 = exp2((_1337.w + (-0.5)) * 20.0) * 2.0;
        float _1380 = _1379 * (_1337.x + (-0.5));
        float _1381 = _1379 * (_1337.y + (-0.5));
        float _1382 = _1379 * (_1337.z + (-0.5));
        float _1383 = isnan(0.0) ? _1380 : (isnan(_1380) ? 0.0 : max(_1380, 0.0));
        float _1384 = isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0));
        float _1385 = isnan(0.0) ? _1382 : (isnan(_1382) ? 0.0 : max(_1382, 0.0));
        float _1386 = _1350 * 0.5;
        float _1387 = _1360 * 0.5;
        float _1388 = _1370 * 0.5;
        float _1389 = dot(vec3(_1386, _1387, _1388), vec3(_1386, _1387, _1388));
        float _1394 = (_1389 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1389);
        float _1402 = (dot(vec3(_688, _689, _690), vec3(_1394 * _1386, _1394 * _1387, _1394 * _1388)) + 1.0) * 0.5;
        float _4140 = isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0));
        float _1411 = sqrt(((_1387 * _1387) + (_1386 * _1386)) + (_1388 * _1388)) / (_1383 + 9.9999997473787516355514526367188e-06);
        float _4151 = isnan(0.0) ? _1411 : (isnan(_1411) ? 0.0 : max(_1411, 0.0));
        float _1412 = isnan(1.0) ? _4151 : (isnan(_4151) ? 1.0 : min(_4151, 1.0));
        float _1413 = _1412 * 2.0;
        float _1417 = (1.0 - _1412) / (_1412 + 1.0);
        float _4162 = isnan(0.0) ? _1417 : (isnan(_1417) ? 0.0 : max(_1417, 0.0));
        float _1418 = isnan(1.0) ? _4162 : (isnan(_4162) ? 1.0 : min(_4162, 1.0));
        float _1427 = ((((1.0 - _1418) * (_1413 + 2.0)) * exp2(log2(isnan(1.0) ? _4140 : (isnan(_4140) ? 1.0 : min(_4140, 1.0))) * (_1413 + 1.0))) + _1418) * _1383;
        float _1428 = _1351 * 0.5;
        float _1429 = _1361 * 0.5;
        float _1430 = _1371 * 0.5;
        float _1431 = dot(vec3(_1428, _1429, _1430), vec3(_1428, _1429, _1430));
        float _1436 = (_1431 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1431);
        float _1444 = (dot(vec3(_688, _689, _690), vec3(_1436 * _1428, _1436 * _1429, _1436 * _1430)) + 1.0) * 0.5;
        float _4173 = isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0));
        float _1453 = sqrt(((_1429 * _1429) + (_1428 * _1428)) + (_1430 * _1430)) / (_1384 + 9.9999997473787516355514526367188e-06);
        float _4184 = isnan(0.0) ? _1453 : (isnan(_1453) ? 0.0 : max(_1453, 0.0));
        float _1454 = isnan(1.0) ? _4184 : (isnan(_4184) ? 1.0 : min(_4184, 1.0));
        float _1455 = _1454 * 2.0;
        float _1459 = (1.0 - _1454) / (_1454 + 1.0);
        float _4195 = isnan(0.0) ? _1459 : (isnan(_1459) ? 0.0 : max(_1459, 0.0));
        float _1460 = isnan(1.0) ? _4195 : (isnan(_4195) ? 1.0 : min(_4195, 1.0));
        float _1469 = ((((1.0 - _1460) * (_1455 + 2.0)) * exp2(log2(isnan(1.0) ? _4173 : (isnan(_4173) ? 1.0 : min(_4173, 1.0))) * (_1455 + 1.0))) + _1460) * _1384;
        float _1470 = _1352 * 0.5;
        float _1471 = _1362 * 0.5;
        float _1472 = _1372 * 0.5;
        float _1473 = dot(vec3(_1470, _1471, _1472), vec3(_1470, _1471, _1472));
        float _1478 = (_1473 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1473);
        float _1486 = (dot(vec3(_688, _689, _690), vec3(_1478 * _1470, _1478 * _1471, _1478 * _1472)) + 1.0) * 0.5;
        float _4206 = isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0));
        float _1495 = sqrt(((_1471 * _1471) + (_1470 * _1470)) + (_1472 * _1472)) / (_1385 + 9.9999997473787516355514526367188e-06);
        float _4217 = isnan(0.0) ? _1495 : (isnan(_1495) ? 0.0 : max(_1495, 0.0));
        float _1496 = isnan(1.0) ? _4217 : (isnan(_4217) ? 1.0 : min(_4217, 1.0));
        float _1497 = _1496 * 2.0;
        float _1501 = (1.0 - _1496) / (_1496 + 1.0);
        float _4228 = isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0));
        float _1502 = isnan(1.0) ? _4228 : (isnan(_4228) ? 1.0 : min(_4228, 1.0));
        float _1511 = ((((1.0 - _1502) * (_1497 + 2.0)) * exp2(log2(isnan(1.0) ? _4206 : (isnan(_4206) ? 1.0 : min(_4206, 1.0))) * (_1497 + 1.0))) + _1502) * _1385;
        _1519 = _1352;
        _1520 = _1351;
        _1521 = _1350;
        _1522 = _1362;
        _1523 = _1361;
        _1524 = _1360;
        _1525 = _1372;
        _1526 = _1371;
        _1527 = _1370;
        _1528 = _1385;
        _1529 = _1384;
        _1530 = _1383;
        _1531 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1427 : (isnan(_1427) ? 0.0 : max(_1427, 0.0)));
        _1532 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1469 : (isnan(_1469) ? 0.0 : max(_1469, 0.0)));
        _1533 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1511 : (isnan(_1511) ? 0.0 : max(_1511, 0.0)));
    }
    else
    {
        _1519 = _1211;
        _1520 = _1211;
        _1521 = _1211;
        _1522 = _1211;
        _1523 = _1211;
        _1524 = _1211;
        _1525 = _1211;
        _1526 = _1211;
        _1527 = _1211;
        _1528 = _1211;
        _1529 = _1211;
        _1530 = _1211;
        _1531 = 0.0;
        _1532 = 0.0;
        _1533 = 0.0;
    }
    float _1543 = (cbModelParam._m0[1u].x * (_1531 - _1223)) + _1223;
    float _1544 = (cbModelParam._m0[1u].x * (_1532 - _1224)) + _1224;
    float _1545 = (cbModelParam._m0[1u].x * (_1533 - _1225)) + _1225;
    float _1566 = fma(_1545, cbSceneParam._m0[89u].z, fma(_1544, cbSceneParam._m0[89u].y, _1543 * cbSceneParam._m0[89u].x));
    float _1569 = fma(_1545, cbSceneParam._m0[90u].z, fma(_1544, cbSceneParam._m0[90u].y, _1543 * cbSceneParam._m0[90u].x));
    float _1572 = fma(_1545, cbSceneParam._m0[91u].z, fma(_1544, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1543));
    float _1587 = _848 * 0.5;
    float _1588 = _849 * 0.5;
    float _1589 = _850 * 0.5;
    float _1590 = dot(vec4(_1587, _1588, _1589, 1.0), vec4(_1521, _1524, _1527, _1530));
    float _1593 = dot(vec4(_1587, _1588, _1589, 1.0), vec4(_1520, _1523, _1526, _1529));
    float _1596 = dot(vec4(_1587, _1588, _1589, 1.0), vec4(_1519, _1522, _1525, _1528));
    float _1630;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1603 = dot(vec4(_1587, _1588, _1589, 1.0), vec4(_1210, _1214, _1217, _1220));
        float _1607 = dot(vec4(_1587, _1588, _1589, 1.0), vec4(_1212, _1215, _1218, _1221));
        float _1611 = dot(vec4(_1587, _1588, _1589, 1.0), vec4(_1213, _1216, _1219, _1222));
        float _1618 = dot(vec4(cbModelParam._m0[39u]), vec4(_1587, _1588, _1589, 1.0));
        _1630 = dot(vec3(isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0)), isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0)), isnan(0.0) ? _1603 : (isnan(_1603) ? 0.0 : max(_1603, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1618) ? 0.0 : (isnan(0.0) ? _1618 : max(0.0, _1618))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1630 = 1.0;
    }
    float _1641;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1632 = dot(vec4(cbModelParam._m0[40u]), vec4(_1587, _1588, _1589, 1.0));
        _1641 = dot(vec3(isnan(0.0) ? _1590 : (isnan(_1590) ? 0.0 : max(_1590, 0.0)), isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : max(_1593, 0.0)), isnan(0.0) ? _1596 : (isnan(_1596) ? 0.0 : max(_1596, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1632) ? 0.0 : (isnan(0.0) ? _1632 : max(0.0, _1632))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1641 = 1.0;
    }
    float _1645 = (_1641 * cbModelParam._m0[1u].x) + (_1630 * (1.0 - cbModelParam._m0[1u].x));
    float _1655 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _691);
    float _1656 = isnan(_1655) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1655 : min(cbModelParam._m0[25u].z, _1655));
    float _1736;
    float _1738;
    float _1740;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1703 = fma(_909, cbModelParam._m0[13u].z, fma(_905, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _901)) + cbModelParam._m0[13u].w;
        float _1707 = fma(_909, cbModelParam._m0[14u].z, fma(_905, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _901)) + cbModelParam._m0[14u].w;
        float _1711 = fma(_909, cbModelParam._m0[15u].z, fma(_905, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _901)) + cbModelParam._m0[15u].w;
        float _1714 = fma(_850, cbModelParam._m0[13u].z, fma(_849, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _848));
        float _1717 = fma(_850, cbModelParam._m0[14u].z, fma(_849, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _848));
        float _1720 = fma(_850, cbModelParam._m0[15u].z, fma(_849, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _848));
        float _1748;
        if (_1714 > 0.0)
        {
            _1748 = abs((1.0 - _1703) / _1714);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1714 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1703 + 1.0) / _1714);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1748 = frontier_phi_14_12_ladder;
        }
        float _1918;
        if (_1717 > 0.0)
        {
            _1918 = abs((1.0 - _1707) / _1717);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1717 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1707 + 1.0) / _1717);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1918 = frontier_phi_23_19_ladder;
        }
        float _2214;
        if (_1720 > 0.0)
        {
            _2214 = abs((1.0 - _1711) / _1720);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1720 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1711 + 1.0) / _1720);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2214 = frontier_phi_35_30_ladder;
        }
        float _2216 = isnan(_1918) ? _1748 : (isnan(_1748) ? _1918 : min(_1748, _1918));
        float _2217 = isnan(_2214) ? _2216 : (isnan(_2216) ? _2214 : min(_2216, _2214));
        float _2221 = (_2217 * _1714) + _1703;
        float _2222 = (_2217 * _1717) + _1707;
        float _2223 = (_2217 * _1720) + _1711;
        float _2224 = _2217 * 9.9999997473787516355514526367188e-05;
        float _2226 = (-1.0) - _2224;
        float _2228 = _2224 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2223 > _2228) || ((_2223 < _2226) || ((_2222 > _2228) || ((_2222 < _2226) || ((_2221 < _2226) || (_2221 > _2228))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2368 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2223, cbModelParam._m0[9u].z, fma(_2222, cbModelParam._m0[9u].y, _2221 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2223, cbModelParam._m0[10u].z, fma(_2222, cbModelParam._m0[10u].y, _2221 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2223, cbModelParam._m0[11u].z, fma(_2222, cbModelParam._m0[11u].y, _2221 * cbModelParam._m0[11u].x))), _1656);
            frontier_phi_13_35_ladder = _2368.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2368.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2368.x * cbModelParam._m0[1u].y;
        }
        _1736 = frontier_phi_13_35_ladder_2;
        _1738 = frontier_phi_13_35_ladder_1;
        _1740 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1724 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_848, _849, _850), _1656);
        _1736 = _1724.x * cbModelParam._m0[1u].y;
        _1738 = _1724.y * cbModelParam._m0[1u].y;
        _1740 = _1724.z * cbModelParam._m0[1u].y;
    }
    float _1744 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _691);
    float _1745 = isnan(_1744) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1744 : min(cbModelParam._m0[25u].w, _1744));
    float _1834;
    float _1836;
    float _1838;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1798 = fma(_909, cbModelParam._m0[21u].z, fma(_905, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _901)) + cbModelParam._m0[21u].w;
        float _1802 = fma(_909, cbModelParam._m0[22u].z, fma(_905, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _901)) + cbModelParam._m0[22u].w;
        float _1806 = fma(_909, cbModelParam._m0[23u].z, fma(_905, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _901)) + cbModelParam._m0[23u].w;
        float _1809 = fma(_850, cbModelParam._m0[21u].z, fma(_849, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _848));
        float _1812 = fma(_850, cbModelParam._m0[22u].z, fma(_849, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _848));
        float _1815 = fma(_850, cbModelParam._m0[23u].z, fma(_849, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _848));
        float _1923;
        if (_1809 > 0.0)
        {
            _1923 = abs((1.0 - _1798) / _1809);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1809 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1798 + 1.0) / _1809);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1923 = frontier_phi_25_21_ladder;
        }
        float _2241;
        if (_1812 > 0.0)
        {
            _2241 = abs((1.0 - _1802) / _1812);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1812 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1802 + 1.0) / _1812);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2241 = frontier_phi_37_32_ladder;
        }
        float _2568;
        if (_1815 > 0.0)
        {
            _2568 = abs((1.0 - _1806) / _1815);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1815 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1806 + 1.0) / _1815);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2568 = frontier_phi_47_44_ladder;
        }
        float _2570 = isnan(_2241) ? _1923 : (isnan(_1923) ? _2241 : min(_1923, _2241));
        float _2571 = isnan(_2568) ? _2570 : (isnan(_2570) ? _2568 : min(_2570, _2568));
        float _2575 = (_2571 * _1809) + _1798;
        float _2576 = (_2571 * _1812) + _1802;
        float _2577 = (_2571 * _1815) + _1806;
        float _2578 = _2571 * 9.9999997473787516355514526367188e-05;
        float _2579 = (-1.0) - _2578;
        float _2581 = _2578 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2577 > _2581) || ((_2577 < _2579) || ((_2576 > _2581) || ((_2576 < _2579) || ((_2575 < _2579) || (_2575 > _2581))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2695 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2577, cbModelParam._m0[17u].z, fma(_2576, cbModelParam._m0[17u].y, _2575 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2577, cbModelParam._m0[18u].z, fma(_2576, cbModelParam._m0[18u].y, _2575 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2577, cbModelParam._m0[19u].z, fma(_2576, cbModelParam._m0[19u].y, _2575 * cbModelParam._m0[19u].x))), _1745);
            frontier_phi_22_47_ladder = _2695.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2695.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2695.x * cbModelParam._m0[1u].z;
        }
        _1834 = frontier_phi_22_47_ladder_2;
        _1836 = frontier_phi_22_47_ladder_1;
        _1838 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1818 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_848, _849, _850), _1745);
        _1834 = _1818.x * cbModelParam._m0[1u].z;
        _1836 = _1818.y * cbModelParam._m0[1u].z;
        _1838 = _1818.z * cbModelParam._m0[1u].z;
    }
    float _1850 = ((((1.0 - _869) * ((_856 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_869 * _856)) * _840;
    float _1851 = _1850 * ((cbModelParam._m0[1u].w * (_1834 - _1736)) + _1736);
    float _1852 = _1850 * ((cbModelParam._m0[1u].w * (_1836 - _1738)) + _1738);
    float _1853 = _1850 * ((cbModelParam._m0[1u].w * (_1838 - _1740)) + _1740);
    float _1856 = fma(_1853, cbSceneParam._m0[89u].z, fma(_1852, cbSceneParam._m0[89u].y, _1851 * cbSceneParam._m0[89u].x));
    float _1859 = fma(_1853, cbSceneParam._m0[90u].z, fma(_1852, cbSceneParam._m0[90u].y, _1851 * cbSceneParam._m0[90u].x));
    float _1862 = fma(_1853, cbSceneParam._m0[91u].z, fma(_1852, cbSceneParam._m0[91u].y, _1851 * cbSceneParam._m0[91u].x));
    float _1897 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1901 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1905 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1909 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1910 = _1897 / _1909;
    float _1911 = _1901 / _1909;
    float _1912 = _1905 / _1909;
    float _2059;
    float _2060;
    float _2061;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1939 = ((uint(_1912 > cbSceneParam._m0[59u].y) + uint(_1912 > cbSceneParam._m0[59u].x)) + uint(_1912 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1940 = _1939 + 43u;
        uint _1948 = _1939 + 44u;
        uint _1956 = _1939 + 45u;
        uint _1964 = _1939 + 46u;
        float _1975 = fma(_1909, cbSceneParam._m0[_1940].w, fma(_1905, cbSceneParam._m0[_1940].z, fma(_1901, cbSceneParam._m0[_1940].y, _1897 * cbSceneParam._m0[_1940].x)));
        float _1979 = fma(_1909, cbSceneParam._m0[_1948].w, fma(_1905, cbSceneParam._m0[_1948].z, fma(_1901, cbSceneParam._m0[_1948].y, _1897 * cbSceneParam._m0[_1948].x)));
        float _1987 = fma(_1909, cbSceneParam._m0[_1964].w, fma(_1905, cbSceneParam._m0[_1964].z, fma(_1901, cbSceneParam._m0[_1964].y, _1897 * cbSceneParam._m0[_1964].x)));
        float _1992 = cbSceneParam._m0[33u].z * _1987;
        float _1994 = cbSceneParam._m0[33u].w * _1987;
        float _1997 = fma(_1909, cbSceneParam._m0[_1956].w, fma(_1905, cbSceneParam._m0[_1956].z, fma(_1901, cbSceneParam._m0[_1956].y, _1897 * cbSceneParam._m0[_1956].x))) / _1987;
        float _2045 = (cbSceneParam._m0[33u].x - sqrt(((_1911 * _1911) + (_1910 * _1910)) + (_1912 * _1912))) * cbSceneParam._m0[33u].y;
        float _4354 = isnan(0.0) ? _2045 : (isnan(_2045) ? 0.0 : max(_2045, 0.0));
        float _2052 = (isnan(1.0) ? _4354 : (isnan(_4354) ? 1.0 : min(_4354, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1992 + _1975) / _1987, (_1994 + _1979) / _1987), _1997), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1994 + _1975) / _1987, (_1979 - _1992) / _1987), _1997), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1975 - _1992) / _1987, (_1979 - _1994) / _1987), _1997), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1975 - _1994) / _1987, (_1992 + _1979) / _1987), _1997), 0.0)).x), vec4(0.25)));
        _2059 = 1.0 - (_2052 * cbSceneParam._m0[34u].x);
        _2060 = 1.0 - (_2052 * cbSceneParam._m0[34u].y);
        _2061 = 1.0 - (_2052 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2059 = 1.0;
        _2060 = 1.0;
        _2061 = 1.0;
    }
    float _2125;
    float _2127;
    float _2129;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2113 = fma(_1909, cbSceneParam._m0[63u].w, fma(_1905, cbSceneParam._m0[63u].z, fma(_1901, cbSceneParam._m0[63u].y, _1897 * cbSceneParam._m0[63u].x)));
        float _2114 = fma(_1909, cbSceneParam._m0[60u].w, fma(_1905, cbSceneParam._m0[60u].z, fma(_1901, cbSceneParam._m0[60u].y, _1897 * cbSceneParam._m0[60u].x))) / _2113;
        float _2115 = fma(_1909, cbSceneParam._m0[61u].w, fma(_1905, cbSceneParam._m0[61u].z, fma(_1901, cbSceneParam._m0[61u].y, _1897 * cbSceneParam._m0[61u].x))) / _2113;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2114 >= cbSceneParam._m0[64u].x) && (_2115 >= cbSceneParam._m0[64u].y)) && (_2114 <= cbSceneParam._m0[64u].z)) && (_2115 <= cbSceneParam._m0[64u].w))
        {
            float _2254 = fma(_1909, cbSceneParam._m0[62u].w, fma(_1905, cbSceneParam._m0[62u].z, fma(_1901, cbSceneParam._m0[62u].y, _1897 * cbSceneParam._m0[62u].x))) / _2113;
            float _2258 = isnan(cbSceneParam._m0[41u].w) ? _2254 : (isnan(_2254) ? cbSceneParam._m0[41u].w : max(_2254, cbSceneParam._m0[41u].w));
            float _2301 = (cbSceneParam._m0[33u].x - sqrt(((_1911 * _1911) + (_1910 * _1910)) + (_1912 * _1912))) * cbSceneParam._m0[33u].y;
            float _4370 = isnan(0.0) ? _2301 : (isnan(_2301) ? 0.0 : max(_2301, 0.0));
            float _2308 = (isnan(1.0) ? _4370 : (isnan(_4370) ? 1.0 : min(_4370, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2114, cbSceneParam._m0[33u].w + _2115), _2258), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2114, _2115 - cbSceneParam._m0[33u].z), _2258), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2114 - cbSceneParam._m0[33u].z, _2115 - cbSceneParam._m0[33u].w), _2258), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2114 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2115), _2258), 0.0)).x), vec4(0.25)));
            float _2312 = 1.0 - (_2308 * cbSceneParam._m0[34u].x);
            float _2313 = 1.0 - (_2308 * cbSceneParam._m0[34u].y);
            float _2314 = 1.0 - (_2308 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2314) ? _2061 : (isnan(_2061) ? _2314 : min(_2061, _2314));
            frontier_phi_34_33_ladder_1 = isnan(_2313) ? _2060 : (isnan(_2060) ? _2313 : min(_2060, _2313));
            frontier_phi_34_33_ladder_2 = isnan(_2312) ? _2059 : (isnan(_2059) ? _2312 : min(_2059, _2312));
        }
        else
        {
            frontier_phi_34_33_ladder = _2061;
            frontier_phi_34_33_ladder_1 = _2060;
            frontier_phi_34_33_ladder_2 = _2059;
        }
        _2125 = frontier_phi_34_33_ladder_2;
        _2127 = frontier_phi_34_33_ladder_1;
        _2129 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2125 = _2059;
        _2127 = _2060;
        _2129 = _2061;
    }
    uvec4 _2134 = floatBitsToUint(cbInstanceData._m0[_267 + 5u]);
    uint _2136 = _2134.x * 14u;
    uint _2137 = _2136 + 13u;
    float _2144 = _840 + (-1.0);
    float _2149 = (cbLight._m0[_2137].x * _2144) + 1.0;
    float _2150 = (cbLight._m0[_2137].y * _2144) + 1.0;
    float _2151 = (cbLight._m0[_2137].z * _2144) + 1.0;
    float _2152 = (cbLight._m0[_2137].w * _2144) + 1.0;
    uint _2153 = _2136 + 5u;
    float _2159 = isnan(1.0) ? _2150 : (isnan(_2150) ? 1.0 : min(_2150, 1.0));
    uint _2163 = _2136 + 4u;
    float _2173 = isnan(1.0) ? _2149 : (isnan(_2149) ? 1.0 : min(_2149, 1.0));
    uint _2177 = _2136 | 1u;
    float _2188 = dot(vec3(cbLight._m0[_2136].xyz), vec3(_688, _689, _690));
    float _2191 = dot(vec3(cbLight._m0[_2177].xyz), vec3(_688, _689, _690));
    float _4406 = isnan(0.0) ? _2188 : (isnan(_2188) ? 0.0 : max(_2188, 0.0));
    float _4417 = isnan(0.0) ? _2191 : (isnan(_2191) ? 0.0 : max(_2191, 0.0));
    float _2196 = (isnan(1.0) ? _4406 : (isnan(_4406) ? 1.0 : min(_4406, 1.0))) * 0.3183098733425140380859375;
    float _2198 = (isnan(1.0) ? _4417 : (isnan(_4417) ? 1.0 : min(_4417, 1.0))) * 0.3183098733425140380859375;
    float _2205 = ((cbLight._m0[_2153].x * _2159) * _2198) + (((cbLight._m0[_2163].x * _2125) * _2173) * _2196);
    float _2206 = ((_2159 * cbLight._m0[_2153].y) * _2198) + (((cbLight._m0[_2163].y * _2127) * _2173) * _2196);
    float _2207 = ((_2159 * cbLight._m0[_2153].z) * _2198) + (((cbLight._m0[_2163].z * _2129) * _2173) * _2196);
    uvec4 _2211 = floatBitsToUint(cbLight._m0[_2136 + 12u]);
    bool _2213 = _2211.x == 0u;
    float _2315;
    float _2317;
    float _2319;
    if (_2213)
    {
        _2315 = _2205;
        _2317 = _2206;
        _2319 = _2207;
    }
    else
    {
        uint _2323 = _2136 + 6u;
        float _2339 = (dot(vec3(cbLight._m0[_2136 + 2u].xyz), vec3(_688, _689, _690)) * 0.5) + 0.5;
        float _2340 = _2339 * _2339;
        float _4428 = isnan(0.0) ? _2340 : (isnan(_2340) ? 0.0 : max(_2340, 0.0));
        float _2341 = isnan(1.0) ? _4428 : (isnan(_4428) ? 1.0 : min(_4428, 1.0));
        float _2342 = isnan(1.0) ? _2151 : (isnan(_2151) ? 1.0 : min(_2151, 1.0));
        _2315 = (((cbLight._m0[_2323].x * 0.3183098733425140380859375) * _2341) * _2342) + _2205;
        _2317 = (((cbLight._m0[_2323].y * 0.3183098733425140380859375) * _2341) * _2342) + _2206;
        _2319 = (((cbLight._m0[_2323].z * 0.3183098733425140380859375) * _2341) * _2342) + _2207;
    }
    bool _2322 = _2211.y == 0u;
    float _2377;
    float _2379;
    float _2381;
    if (_2322)
    {
        _2377 = _2315;
        _2379 = _2317;
        _2381 = _2319;
    }
    else
    {
        uint _2539 = _2136 + 7u;
        float _2555 = (dot(vec3(cbLight._m0[_2136 + 3u].xyz), vec3(_688, _689, _690)) * 0.5) + 0.5;
        float _2556 = _2555 * _2555;
        float _4444 = isnan(0.0) ? _2556 : (isnan(_2556) ? 0.0 : max(_2556, 0.0));
        float _2557 = isnan(1.0) ? _4444 : (isnan(_4444) ? 1.0 : min(_4444, 1.0));
        float _2558 = isnan(1.0) ? _2152 : (isnan(_2152) ? 1.0 : min(_2152, 1.0));
        _2377 = (((cbLight._m0[_2539].x * 0.3183098733425140380859375) * _2557) * _2558) + _2315;
        _2379 = (((cbLight._m0[_2539].y * 0.3183098733425140380859375) * _2557) * _2558) + _2317;
        _2381 = (((cbLight._m0[_2539].z * 0.3183098733425140380859375) * _2557) * _2558) + _2319;
    }
    uint _2384 = _2136 + 8u;
    float _2397 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2136].w)) * _691) * 0.949999988079071044921875);
    float _2398 = _2397 * _2397;
    float _2399 = cbLight._m0[_2136].x + _766;
    float _2400 = cbLight._m0[_2136].y + _767;
    float _2401 = cbLight._m0[_2136].z + _768;
    float _2405 = inversesqrt(dot(vec3(_2399, _2400, _2401), vec3(_2399, _2400, _2401)));
    float _2406 = _2405 * _2399;
    float _2407 = _2405 * _2400;
    float _2408 = _2405 * _2401;
    float _2409 = dot(vec3(_688, _689, _690), vec3(cbLight._m0[_2136].xyz));
    float _4460 = isnan(0.0) ? _2409 : (isnan(_2409) ? 0.0 : max(_2409, 0.0));
    float _2412 = isnan(1.0) ? _4460 : (isnan(_4460) ? 1.0 : min(_4460, 1.0));
    float _4471 = isnan(0.0) ? _841 : (isnan(_841) ? 0.0 : max(_841, 0.0));
    float _2413 = isnan(1.0) ? _4471 : (isnan(_4471) ? 1.0 : min(_4471, 1.0));
    float _2414 = dot(vec3(_688, _689, _690), vec3(_2406, _2407, _2408));
    float _4482 = isnan(0.0) ? _2414 : (isnan(_2414) ? 0.0 : max(_2414, 0.0));
    float _2417 = isnan(1.0) ? _4482 : (isnan(_4482) ? 1.0 : min(_4482, 1.0));
    float _2418 = dot(vec3(cbLight._m0[_2136].xyz), vec3(_2406, _2407, _2408));
    float _4493 = isnan(0.0) ? _2418 : (isnan(_2418) ? 0.0 : max(_2418, 0.0));
    float _2422 = _2398 * _2398;
    float _2426 = ((_2417 * _2417) * (_2422 + (-1.0))) + 1.0;
    float _2437 = (exp2(log2(1.0 - (isnan(1.0) ? _4493 : (isnan(_4493) ? 1.0 : min(_4493, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2438 = 1.0 - _2398;
    float _2449 = (0.5 / (((_2413 * ((_2412 * _2438) + _2398)) + 9.9999999392252902907785028219223e-09) + (((_2413 * _2438) + _2398) * _2412))) * _2412;
    float _4504 = isnan(0.0) ? _2449 : (isnan(_2449) ? 0.0 : max(_2449, 0.0));
    float _2451 = (isnan(1.0) ? _4504 : (isnan(_4504) ? 1.0 : min(_4504, 1.0))) * (_2422 / ((_2426 * _2426) * 3.141590118408203125));
    uint _2465 = _2136 + 9u;
    float _2476 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2177].w)) * _691) * 0.949999988079071044921875);
    float _2477 = _2476 * _2476;
    float _2478 = cbLight._m0[_2177].x + _766;
    float _2479 = cbLight._m0[_2177].y + _767;
    float _2480 = cbLight._m0[_2177].z + _768;
    float _2484 = inversesqrt(dot(vec3(_2478, _2479, _2480), vec3(_2478, _2479, _2480)));
    float _2485 = _2484 * _2478;
    float _2486 = _2484 * _2479;
    float _2487 = _2484 * _2480;
    float _2488 = dot(vec3(_688, _689, _690), vec3(cbLight._m0[_2177].xyz));
    float _4515 = isnan(0.0) ? _2488 : (isnan(_2488) ? 0.0 : max(_2488, 0.0));
    float _2491 = isnan(1.0) ? _4515 : (isnan(_4515) ? 1.0 : min(_4515, 1.0));
    float _2492 = dot(vec3(_688, _689, _690), vec3(_2485, _2486, _2487));
    float _4526 = isnan(0.0) ? _2492 : (isnan(_2492) ? 0.0 : max(_2492, 0.0));
    float _2495 = isnan(1.0) ? _4526 : (isnan(_4526) ? 1.0 : min(_4526, 1.0));
    float _2496 = dot(vec3(cbLight._m0[_2177].xyz), vec3(_2485, _2486, _2487));
    float _4537 = isnan(0.0) ? _2496 : (isnan(_2496) ? 0.0 : max(_2496, 0.0));
    float _2500 = _2477 * _2477;
    float _2504 = ((_2495 * _2495) * (_2500 + (-1.0))) + 1.0;
    float _2513 = (exp2(log2(1.0 - (isnan(1.0) ? _4537 : (isnan(_4537) ? 1.0 : min(_4537, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2514 = 1.0 - _2477;
    float _2524 = (0.5 / (((_2413 * ((_2491 * _2514) + _2477)) + 9.9999999392252902907785028219223e-09) + (((_2413 * _2514) + _2477) * _2491))) * _2491;
    float _4548 = isnan(0.0) ? _2524 : (isnan(_2524) ? 0.0 : max(_2524, 0.0));
    float _2526 = (isnan(1.0) ? _4548 : (isnan(_4548) ? 1.0 : min(_4548, 1.0))) * (_2500 / ((_2504 * _2504) * 3.141590118408203125));
    float _2536 = (((_2513 * cbLight._m0[_2465].x) * _2526) * _2159) + ((((cbLight._m0[_2384].x * _2125) * _2437) * _2451) * _2173);
    float _2537 = (((_2513 * cbLight._m0[_2465].y) * _2526) * _2159) + ((((cbLight._m0[_2384].y * _2127) * _2437) * _2451) * _2173);
    float _2538 = (((_2513 * cbLight._m0[_2465].z) * _2526) * _2159) + ((((cbLight._m0[_2384].z * _2129) * _2437) * _2451) * _2173);
    float _2594;
    float _2596;
    float _2598;
    if (_2213)
    {
        _2594 = _2536;
        _2596 = _2537;
        _2598 = _2538;
    }
    else
    {
        uint _2600 = _2136 + 2u;
        uint _2604 = _2136 + 10u;
        float _2618 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2600].w)) * _691) * 0.949999988079071044921875);
        float _2619 = _2618 * _2618;
        float _2620 = cbLight._m0[_2600].x + _766;
        float _2621 = cbLight._m0[_2600].y + _767;
        float _2622 = cbLight._m0[_2600].z + _768;
        float _2626 = inversesqrt(dot(vec3(_2620, _2621, _2622), vec3(_2620, _2621, _2622)));
        float _2627 = _2626 * _2620;
        float _2628 = _2626 * _2621;
        float _2629 = _2626 * _2622;
        float _2630 = dot(vec3(_688, _689, _690), vec3(cbLight._m0[_2600].xyz));
        float _4559 = isnan(0.0) ? _2630 : (isnan(_2630) ? 0.0 : max(_2630, 0.0));
        float _2633 = isnan(1.0) ? _4559 : (isnan(_4559) ? 1.0 : min(_4559, 1.0));
        float _2634 = dot(vec3(_688, _689, _690), vec3(_2627, _2628, _2629));
        float _4570 = isnan(0.0) ? _2634 : (isnan(_2634) ? 0.0 : max(_2634, 0.0));
        float _2637 = isnan(1.0) ? _4570 : (isnan(_4570) ? 1.0 : min(_4570, 1.0));
        float _2638 = dot(vec3(cbLight._m0[_2600].xyz), vec3(_2627, _2628, _2629));
        float _4581 = isnan(0.0) ? _2638 : (isnan(_2638) ? 0.0 : max(_2638, 0.0));
        float _2642 = _2619 * _2619;
        float _2646 = ((_2637 * _2637) * (_2642 + (-1.0))) + 1.0;
        float _2655 = (exp2(log2(1.0 - (isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2656 = 1.0 - _2619;
        float _2666 = (0.5 / (((_2413 * ((_2633 * _2656) + _2619)) + 9.9999999392252902907785028219223e-09) + (((_2413 * _2656) + _2619) * _2633))) * _2633;
        float _4592 = isnan(0.0) ? _2666 : (isnan(_2666) ? 0.0 : max(_2666, 0.0));
        float _2668 = (isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0))) * (_2642 / ((_2646 * _2646) * 3.141590118408203125));
        float _2669 = isnan(1.0) ? _2151 : (isnan(_2151) ? 1.0 : min(_2151, 1.0));
        _2594 = (((_2655 * cbLight._m0[_2604].x) * _2668) * _2669) + _2536;
        _2596 = (((_2655 * cbLight._m0[_2604].y) * _2668) * _2669) + _2537;
        _2598 = (((_2655 * cbLight._m0[_2604].z) * _2668) * _2669) + _2538;
    }
    float _2700;
    float _2702;
    float _2704;
    if (_2322)
    {
        _2700 = _2594;
        _2702 = _2596;
        _2704 = _2598;
    }
    else
    {
        uint _2711 = _2136 + 3u;
        uint _2715 = _2136 + 11u;
        float _2729 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2711].w)) * _691) * 0.949999988079071044921875);
        float _2730 = _2729 * _2729;
        float _2731 = cbLight._m0[_2711].x + _766;
        float _2732 = cbLight._m0[_2711].y + _767;
        float _2733 = cbLight._m0[_2711].z + _768;
        float _2737 = inversesqrt(dot(vec3(_2731, _2732, _2733), vec3(_2731, _2732, _2733)));
        float _2738 = _2737 * _2731;
        float _2739 = _2737 * _2732;
        float _2740 = _2737 * _2733;
        float _2741 = dot(vec3(_688, _689, _690), vec3(cbLight._m0[_2711].xyz));
        float _4608 = isnan(0.0) ? _2741 : (isnan(_2741) ? 0.0 : max(_2741, 0.0));
        float _2744 = isnan(1.0) ? _4608 : (isnan(_4608) ? 1.0 : min(_4608, 1.0));
        float _2745 = dot(vec3(_688, _689, _690), vec3(_2738, _2739, _2740));
        float _4619 = isnan(0.0) ? _2745 : (isnan(_2745) ? 0.0 : max(_2745, 0.0));
        float _2748 = isnan(1.0) ? _4619 : (isnan(_4619) ? 1.0 : min(_4619, 1.0));
        float _2749 = dot(vec3(cbLight._m0[_2711].xyz), vec3(_2738, _2739, _2740));
        float _4630 = isnan(0.0) ? _2749 : (isnan(_2749) ? 0.0 : max(_2749, 0.0));
        float _2753 = _2730 * _2730;
        float _2757 = ((_2748 * _2748) * (_2753 + (-1.0))) + 1.0;
        float _2766 = (exp2(log2(1.0 - (isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2767 = 1.0 - _2730;
        float _2777 = (0.5 / (((_2413 * ((_2744 * _2767) + _2730)) + 9.9999999392252902907785028219223e-09) + (((_2413 * _2767) + _2730) * _2744))) * _2744;
        float _4641 = isnan(0.0) ? _2777 : (isnan(_2777) ? 0.0 : max(_2777, 0.0));
        float _2779 = (isnan(1.0) ? _4641 : (isnan(_4641) ? 1.0 : min(_4641, 1.0))) * (_2753 / ((_2757 * _2757) * 3.141590118408203125));
        float _2780 = isnan(1.0) ? _2152 : (isnan(_2152) ? 1.0 : min(_2152, 1.0));
        _2700 = (((_2766 * cbLight._m0[_2715].x) * _2779) * _2780) + _2594;
        _2702 = (((_2766 * cbLight._m0[_2715].y) * _2779) * _2780) + _2596;
        _2704 = (((_2766 * cbLight._m0[_2715].z) * _2779) * _2780) + _2598;
    }
    float _2846;
    float _2848;
    float _2850;
    float _2852;
    float _2854;
    float _2856;
    if (_2134.y == 0u)
    {
        uvec4 _2801 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2802 = _2801.x;
        uint _2813 = uint((float(_2801.y) * floor(float(uint(cbSceneParam._m0[85u].y * _775) / _2802))) + floor(float(uint(cbSceneParam._m0[85u].x * _774) / _2802)));
        float _2823 = (log2(_1912 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2824 = isnan(0.0) ? _2823 : (isnan(_2823) ? 0.0 : max(_2823, 0.0));
        uint _2827 = uint(isnan(14.0) ? _2824 : (isnan(_2824) ? 14.0 : min(_2824, 14.0)));
        uvec4 _2832 = texelFetch(g_lightClusterGridBuffer, int(((_2827 << 2u) + (_2813 << 6u)) >> 2u));
        uint _2833 = _2832.x;
        uint _2834 = _2801.z;
        float _2913;
        float _2915;
        float _2917;
        float _2919;
        float _2921;
        float _2923;
        if (((((1u << ((_2834 >> 4u) & 15u)) + 4294967295u) & _2833) == 0u) || ((_2834 & 240u) == 0u))
        {
            _2913 = 0.0;
            _2915 = 0.0;
            _2917 = 0.0;
            _2919 = 0.0;
            _2921 = 0.0;
            _2923 = 0.0;
        }
        else
        {
            float _2914;
            float _2916;
            float _2918;
            float _2920;
            float _2922;
            float _2924;
            float _3057 = 0.0;
            float _3058 = 0.0;
            float _3059 = 0.0;
            float _3060 = 0.0;
            float _3061 = 0.0;
            float _3062 = 0.0;
            uint _3063 = 0u;
            uint _3072;
            bool _3073;
            for (;;)
            {
                _3072 = texelFetch(g_lightClassification, int((((_2827 << 5u) + (_2813 << 9u)) + (_3063 << 2u)) >> 2u)).x;
                _3073 = _3072 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3073)
                {
                    frontier_phi_66_pred = _3062;
                    frontier_phi_66_pred_1 = _3061;
                    frontier_phi_66_pred_2 = _3060;
                    frontier_phi_66_pred_3 = _3059;
                    frontier_phi_66_pred_4 = _3058;
                    frontier_phi_66_pred_5 = _3057;
                }
                else
                {
                    float _3181;
                    float _3182;
                    float _3183;
                    float _3184;
                    float _3185;
                    float _3186;
                    uint _3187;
                    _3181 = _3057;
                    _3182 = _3058;
                    _3183 = _3059;
                    _3184 = _3060;
                    _3185 = _3061;
                    _3186 = _3062;
                    _3187 = _3072;
                    float _3113;
                    float _3114;
                    float _3115;
                    float _3116;
                    float _3117;
                    float _3118;
                    for (;;)
                    {
                        uint _3191 = uint(findLSB(_3187)) + (_3063 << 5u);
                        uint _3188 = (_3187 + 4294967295u) & _3187;
                        uint _3193 = _3191 * 48u;
                        vec4 _3207 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3193)).x, texelFetch(g_PointLightRenderingBuffer, int(_3193 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3193 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3193 + 3u)).x));
                        uint _3213 = (_3191 * 48u) + 4u;
                        vec4 _3226 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3213)).x, texelFetch(g_PointLightRenderingBuffer, int(_3213 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3213 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3213 + 3u)).x));
                        uint _3232 = (_3191 * 48u) + 8u;
                        vec3 _3243 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3232)).x, texelFetch(g_PointLightRenderingBuffer, int(_3232 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3232 + 2u)).x));
                        float _3247 = _3207.x - _1910;
                        float _3248 = _3207.y - _1911;
                        float _3249 = _3207.z - _1912;
                        float _3250 = dot(vec3(_3247, _3248, _3249), vec3(_3247, _3248, _3249));
                        float _3253 = inversesqrt(_3250);
                        float _3254 = _3253 * _3247;
                        float _3255 = _3253 * _3248;
                        float _3256 = _3253 * _3249;
                        float _3257 = dot(vec3(_796, _799, _802), vec3(_3254, _3255, _3256));
                        float _3262 = 1.0 - (_3250 * _3207.w);
                        float _4667 = isnan(0.0) ? _3262 : (isnan(_3262) ? 0.0 : max(_3262, 0.0));
                        float _3263 = isnan(1.0) ? _4667 : (isnan(_4667) ? 1.0 : min(_4667, 1.0));
                        float _3264 = sqrt(_3250) * _3226.w;
                        float _3267 = 1.39999997615814208984375 / (_3264 + 1.39999997615814208984375);
                        float _3268 = _3267 * _3267;
                        float _3271 = ((1.0 - _3268) * _3257) + _3268;
                        float _3274 = _3264 * _3264;
                        float _3278 = ((isnan(0.0) ? _3271 : (isnan(_3271) ? 0.0 : max(_3271, 0.0))) * _3263) / ((_3274 * 0.699999988079071044921875) + 1.0);
                        float _3282 = (-0.0) - _1910;
                        float _3283 = (-0.0) - _1911;
                        float _3284 = (-0.0) - _1912;
                        float _3288 = inversesqrt(dot(vec3(_3282, _3283, _3284), vec3(_3282, _3283, _3284)));
                        float _3289 = _3288 * _3282;
                        float _3290 = _3288 * _3283;
                        float _3291 = _3288 * _3284;
                        float _3298 = exp2(log2(1.0 / ((_3274 * 3.5) + 5.0)) * 0.25);
                        float _3299 = 1.0 - _856;
                        float _3306 = sqrt(1.0 - ((1.0 - (_3299 * _3299)) * (1.0 - (_3298 * _3298))));
                        float _3307 = _3306 * _3306;
                        float _3308 = _3307 * _3307;
                        float _3309 = _3289 + _3254;
                        float _3310 = _3290 + _3255;
                        float _3311 = _3291 + _3256;
                        float _3315 = inversesqrt(dot(vec3(_3309, _3310, _3311), vec3(_3309, _3310, _3311)));
                        float _3319 = dot(vec3(_796, _799, _802), vec3(_3289, _3290, _3291));
                        float _4683 = isnan(0.0) ? _3319 : (isnan(_3319) ? 0.0 : max(_3319, 0.0));
                        float _3322 = isnan(1.0) ? _4683 : (isnan(_4683) ? 1.0 : min(_4683, 1.0));
                        float _3323 = dot(vec3(_796, _799, _802), vec3(_3315 * _3309, _3315 * _3310, _3315 * _3311));
                        float _4694 = isnan(0.0) ? _3323 : (isnan(_3323) ? 0.0 : max(_3323, 0.0));
                        float _3326 = isnan(1.0) ? _4694 : (isnan(_4694) ? 1.0 : min(_4694, 1.0));
                        float _3330 = ((_3326 * _3326) * (_3308 + (-1.0))) + 1.0;
                        float _3331 = _3267 * _3307;
                        float _3332 = _3331 * _3331;
                        float _3335 = ((1.0 - _3332) * _3257) + _3332;
                        float _4705 = isnan(0.0) ? _3335 : (isnan(_3335) ? 0.0 : max(_3335, 0.0));
                        float _3336 = isnan(1.0) ? _4705 : (isnan(_4705) ? 1.0 : min(_4705, 1.0));
                        float _3337 = 1.0 - _3307;
                        float _3347 = (0.5 / (((_3336 * ((_3322 * _3337) + _3307)) + 9.9999999392252902907785028219223e-09) + (((_3336 * _3337) + _3307) * _3322))) * _3336;
                        float _4716 = isnan(0.0) ? _3347 : (isnan(_3347) ? 0.0 : max(_3347, 0.0));
                        float _3358 = (((_3308 * 3.1415927410125732421875) * (isnan(1.0) ? _4716 : (isnan(_4716) ? 1.0 : min(_4716, 1.0)))) / ((_3330 * _3330) * ((_3274 * 2.1991131305694580078125) + 3.141590118408203125))) * _3263;
                        _3116 = (_3278 * _3226.x) + _3184;
                        _3117 = (_3278 * _3226.y) + _3185;
                        _3118 = (_3278 * _3226.z) + _3186;
                        _3113 = (_3358 * _3243.x) + _3181;
                        _3114 = (_3358 * _3243.y) + _3182;
                        _3115 = (_3358 * _3243.z) + _3183;
                        if (_3188 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3181 = _3113;
                            _3182 = _3114;
                            _3183 = _3115;
                            _3184 = _3116;
                            _3185 = _3117;
                            _3186 = _3118;
                            _3187 = _3188;
                        }
                    }
                    frontier_phi_66_pred = _3118;
                    frontier_phi_66_pred_1 = _3117;
                    frontier_phi_66_pred_2 = _3116;
                    frontier_phi_66_pred_3 = _3115;
                    frontier_phi_66_pred_4 = _3114;
                    frontier_phi_66_pred_5 = _3113;
                }
                _2924 = frontier_phi_66_pred;
                _2922 = frontier_phi_66_pred_1;
                _2920 = frontier_phi_66_pred_2;
                _2918 = frontier_phi_66_pred_3;
                _2916 = frontier_phi_66_pred_4;
                _2914 = frontier_phi_66_pred_5;
                uint _3064 = _3063 + 1u;
                if (_3064 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3057 = _2914;
                    _3058 = _2916;
                    _3059 = _2918;
                    _3060 = _2920;
                    _3061 = _2922;
                    _3062 = _2924;
                    _3063 = _3064;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2913 = _2914;
            _2915 = _2916;
            _2917 = _2918;
            _2919 = _2920;
            _2921 = _2922;
            _2923 = _2924;
        }
        uvec4 _2927 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2928 = _2927.z;
        uint _2930 = (_2928 >> 8u) & 15u;
        float _3025;
        float _3027;
        float _3029;
        float _3031;
        float _3033;
        float _3035;
        if (((4294967295u << _2930) & _2833) == 0u)
        {
            _3025 = _2913;
            _3027 = _2915;
            _3029 = _2917;
            _3031 = _2919;
            _3033 = _2921;
            _3035 = _2923;
        }
        else
        {
            float _3050 = inversesqrt(dot(vec3(_1910, _1911, _1912), vec3(_1910, _1911, _1912)));
            float _3051 = _3050 * _1910;
            float _3052 = _3050 * _1911;
            float _3053 = _3050 * _1912;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2930 < ((_2928 >> 12u) & 15u))
            {
                float _3026;
                float _3028;
                float _3030;
                float _3032;
                float _3034;
                float _3036;
                float _3164 = _2913;
                float _3165 = _2915;
                float _3166 = _2917;
                float _3167 = _2919;
                float _3168 = _2921;
                float _3169 = _2923;
                uint _3170 = _2930;
                uint _3179;
                bool _3180;
                for (;;)
                {
                    _3179 = texelFetch(g_lightClassification, int((((_2827 << 5u) + (_2813 << 9u)) + (_3170 << 2u)) >> 2u)).x;
                    _3180 = _3179 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3180)
                    {
                        frontier_phi_72_pred = _3169;
                        frontier_phi_72_pred_1 = _3168;
                        frontier_phi_72_pred_2 = _3167;
                        frontier_phi_72_pred_3 = _3166;
                        frontier_phi_72_pred_4 = _3165;
                        frontier_phi_72_pred_5 = _3164;
                    }
                    else
                    {
                        float _3363;
                        float _3364;
                        float _3365;
                        float _3366;
                        float _3367;
                        float _3368;
                        float _3656;
                        float _3657;
                        float _3658;
                        float _3659;
                        float _3660;
                        float _3661;
                        float _3376 = _3164;
                        float _3377 = _3165;
                        float _3378 = _3166;
                        float _3379 = _3167;
                        float _3380 = _3168;
                        float _3381 = _3169;
                        uint _3382 = _3179;
                        uint _3383;
                        vec4 _3408;
                        float _3409;
                        vec4 _3424;
                        vec3 _3436;
                        vec4 _3451;
                        vec4 _3466;
                        float _3512;
                        bool _3513;
                        for (;;)
                        {
                            uint _3393 = ((_3170 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3382));
                            _3383 = (_3382 + 4294967295u) & _3382;
                            uint _3395 = _3393 * 40u;
                            _3408 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3395)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3395 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3395 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3395 + 3u)).x));
                            _3409 = _3408.w;
                            uint _3411 = (_3393 * 40u) + 4u;
                            _3424 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3411)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3411 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3411 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3411 + 3u)).x));
                            uint _3426 = (_3393 * 40u) + 8u;
                            _3436 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3426)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3426 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3426 + 2u)).x));
                            uint _3438 = (_3393 * 40u) + 16u;
                            _3451 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3438)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3438 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3438 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3438 + 3u)).x));
                            uint _3453 = (_3393 * 40u) + 20u;
                            _3466 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3453)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3453 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3453 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3453 + 3u)).x));
                            uint _3468 = (_3393 * 40u) + 24u;
                            vec4 _3481 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3468)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3468 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3468 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3468 + 3u)).x));
                            uint _3487 = (_3393 * 40u) + 28u;
                            vec4 _3500 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3487)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3487 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3487 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3487 + 3u)).x));
                            _3512 = fma(_1912, _3500.z, fma(_1911, _3500.y, _3500.x * _1910)) + _3500.w;
                            _3513 = !((fma(_1912, _3481.z, fma(_1911, _3481.y, _3481.x * _1910)) + _3481.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3513)
                            {
                                float _3540 = _3408.x - _1910;
                                float _3541 = _3408.y - _1911;
                                float _3542 = _3408.z - _1912;
                                float _3543 = dot(vec3(_3540, _3541, _3542), vec3(_3540, _3541, _3542));
                                float _3546 = inversesqrt(_3543);
                                float _3547 = _3546 * _3540;
                                float _3548 = _3546 * _3541;
                                float _3549 = _3546 * _3542;
                                float _3553 = 1.0 - (_3543 / (_3409 * _3409));
                                float _4727 = isnan(0.0) ? _3553 : (isnan(_3553) ? 0.0 : max(_3553, 0.0));
                                float _3554 = isnan(1.0) ? _4727 : (isnan(_4727) ? 1.0 : min(_4727, 1.0));
                                float _3558 = sqrt(_3543) * _3424.w;
                                float _3560 = 1.39999997615814208984375 / (_3558 + 1.39999997615814208984375);
                                float _3561 = _3560 * _3560;
                                float _3564 = ((1.0 - _3561) * dot(vec3(_3547, _3548, _3549), vec3(_796, _799, _802))) + _3561;
                                float _3567 = _3558 * _3558;
                                float _3571 = (fma(_1912, _3451.z, fma(_1911, _3451.y, _3451.x * _1910)) + _3451.w) / _3512;
                                float _3572 = (fma(_1912, _3466.z, fma(_1911, _3466.y, _3466.x * _1910)) + _3466.w) / _3512;
                                float _3576 = 1.0 - dot(vec2(_3571, _3572), vec2(_3571, _3572));
                                float _4743 = isnan(0.0) ? _3576 : (isnan(_3576) ? 0.0 : max(_3576, 0.0));
                                float _3577 = isnan(1.0) ? _4743 : (isnan(_4743) ? 1.0 : min(_4743, 1.0));
                                float _3578 = _3577 * (((isnan(0.0) ? _3564 : (isnan(_3564) ? 0.0 : max(_3564, 0.0))) * _3554) / ((_3567 * 0.699999988079071044921875) + 1.0));
                                float _3590 = exp2(log2(1.0 / ((_3567 * 3.5) + 5.0)) * 0.25);
                                float _3591 = 1.0 - _856;
                                float _3598 = sqrt(1.0 - ((1.0 - (_3591 * _3591)) * (1.0 - (_3590 * _3590))));
                                float _3599 = _3598 * _3598;
                                float _3600 = _3599 * _3599;
                                float _3601 = _3547 - _3051;
                                float _3602 = _3548 - _3052;
                                float _3603 = _3549 - _3053;
                                float _3607 = inversesqrt(dot(vec3(_3601, _3602, _3603), vec3(_3601, _3602, _3603)));
                                float _3611 = dot(vec3(_796, _799, _802), vec3((-0.0) - _3051, (-0.0) - _3052, (-0.0) - _3053));
                                float _4754 = isnan(0.0) ? _3611 : (isnan(_3611) ? 0.0 : max(_3611, 0.0));
                                float _3614 = isnan(1.0) ? _4754 : (isnan(_4754) ? 1.0 : min(_4754, 1.0));
                                float _3615 = dot(vec3(_796, _799, _802), vec3(_3607 * _3601, _3607 * _3602, _3607 * _3603));
                                float _4765 = isnan(0.0) ? _3615 : (isnan(_3615) ? 0.0 : max(_3615, 0.0));
                                float _3618 = isnan(1.0) ? _4765 : (isnan(_4765) ? 1.0 : min(_4765, 1.0));
                                float _3622 = ((_3618 * _3618) * (_3600 + (-1.0))) + 1.0;
                                float _3623 = _3560 * _3599;
                                float _3624 = _3623 * _3623;
                                float _3630 = ((1.0 - _3624) * dot(vec3(_796, _799, _802), vec3(_3547, _3548, _3549))) + _3624;
                                float _4776 = isnan(0.0) ? _3630 : (isnan(_3630) ? 0.0 : max(_3630, 0.0));
                                float _3631 = isnan(1.0) ? _4776 : (isnan(_4776) ? 1.0 : min(_4776, 1.0));
                                float _3632 = 1.0 - _3599;
                                float _3642 = (0.5 / (((_3631 * ((_3614 * _3632) + _3599)) + 9.9999999392252902907785028219223e-09) + (((_3631 * _3632) + _3599) * _3614))) * _3631;
                                float _4787 = isnan(0.0) ? _3642 : (isnan(_3642) ? 0.0 : max(_3642, 0.0));
                                float _3652 = (_3577 * _3554) * (((_3600 * 3.1415927410125732421875) * (isnan(1.0) ? _4787 : (isnan(_4787) ? 1.0 : min(_4787, 1.0)))) / ((_3622 * _3622) * ((_3567 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3578 * _3424.y;
                                frontier_phi_78_pred_1 = _3578 * _3424.x;
                                frontier_phi_78_pred_2 = _3652 * _3436.z;
                                frontier_phi_78_pred_3 = _3652 * _3436.y;
                                frontier_phi_78_pred_4 = _3652 * _3436.x;
                                frontier_phi_78_pred_5 = _3578 * _3424.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3660 = frontier_phi_78_pred;
                            _3659 = frontier_phi_78_pred_1;
                            _3658 = frontier_phi_78_pred_2;
                            _3657 = frontier_phi_78_pred_3;
                            _3656 = frontier_phi_78_pred_4;
                            _3661 = frontier_phi_78_pred_5;
                            _3366 = _3659 + _3379;
                            _3367 = _3660 + _3380;
                            _3368 = _3661 + _3381;
                            _3363 = _3656 + _3376;
                            _3364 = _3657 + _3377;
                            _3365 = _3658 + _3378;
                            if (_3383 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3376 = _3363;
                                _3377 = _3364;
                                _3378 = _3365;
                                _3379 = _3366;
                                _3380 = _3367;
                                _3381 = _3368;
                                _3382 = _3383;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3368;
                        frontier_phi_72_pred_1 = _3367;
                        frontier_phi_72_pred_2 = _3366;
                        frontier_phi_72_pred_3 = _3365;
                        frontier_phi_72_pred_4 = _3364;
                        frontier_phi_72_pred_5 = _3363;
                    }
                    _3036 = frontier_phi_72_pred;
                    _3034 = frontier_phi_72_pred_1;
                    _3032 = frontier_phi_72_pred_2;
                    _3030 = frontier_phi_72_pred_3;
                    _3028 = frontier_phi_72_pred_4;
                    _3026 = frontier_phi_72_pred_5;
                    uint _3171 = _3170 + 1u;
                    if (_3171 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3164 = _3026;
                        _3165 = _3028;
                        _3166 = _3030;
                        _3167 = _3032;
                        _3168 = _3034;
                        _3169 = _3036;
                        _3170 = _3171;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3036;
                frontier_phi_60_61_ladder_1 = _3034;
                frontier_phi_60_61_ladder_2 = _3030;
                frontier_phi_60_61_ladder_3 = _3028;
                frontier_phi_60_61_ladder_4 = _3026;
                frontier_phi_60_61_ladder_5 = _3032;
            }
            else
            {
                frontier_phi_60_61_ladder = _2923;
                frontier_phi_60_61_ladder_1 = _2921;
                frontier_phi_60_61_ladder_2 = _2917;
                frontier_phi_60_61_ladder_3 = _2915;
                frontier_phi_60_61_ladder_4 = _2913;
                frontier_phi_60_61_ladder_5 = _2919;
            }
            _3025 = frontier_phi_60_61_ladder_4;
            _3027 = frontier_phi_60_61_ladder_3;
            _3029 = frontier_phi_60_61_ladder_2;
            _3031 = frontier_phi_60_61_ladder_5;
            _3033 = frontier_phi_60_61_ladder_1;
            _3035 = frontier_phi_60_61_ladder;
        }
        float _3040 = isnan(1.0) ? _840 : (isnan(_840) ? 1.0 : min(_840, 1.0));
        _2846 = (_3040 * _3031) + _2377;
        _2848 = (_3040 * _3033) + _2379;
        _2850 = (_3040 * _3035) + _2381;
        _2852 = ((_3025 * 0.039999999105930328369140625) * _3040) + _2700;
        _2854 = ((_3027 * 0.039999999105930328369140625) * _3040) + _2702;
        _2856 = ((_3029 * 0.039999999105930328369140625) * _3040) + _2704;
    }
    else
    {
        _2846 = _2377;
        _2848 = _2379;
        _2850 = _2381;
        _2852 = _2700;
        _2854 = _2702;
        _2856 = _2704;
    }
    float _4803 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _4814 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
    float _4825 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    uint _2876 = _267 + 6u;
    float _2884 = _774 / cbSceneParam._m0[86u].x;
    float _2885 = _775 / cbSceneParam._m0[86u].y;
    vec4 _2899 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2884, _2885, (log2((isnan(cbSceneParam._m0[77u].w) ? _709 : (isnan(_709) ? cbSceneParam._m0[77u].w : min(_709, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2901 = _2899.x;
    float _2902 = _2899.y;
    float _2903 = _2899.z;
    float _2904 = _2899.w;
    float _2975;
    float _2977;
    float _2979;
    float _2981;
    if (_709 > cbSceneParam._m0[78u].w)
    {
        float _2938 = isnan(_709) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _709 : min(cbSceneParam._m0[80u].w, _709));
        float _2939 = _2938 / _709;
        float _2950 = _2939 * _759;
        float _2951 = _760 * _2939;
        float _2952 = (-0.0) - _2951;
        float _2953 = _2939 * _761;
        float _2955 = (cbSceneParam._m0[77u].w * _2952) / _2938;
        float _2956 = _2955 + cbSceneParam._m0[79u].w;
        float _2957 = cbSceneParam._m0[79u].w - _2951;
        float _2963 = sqrt(((_2950 * _2950) + (_2951 * _2951)) + (_2953 * _2953));
        float _2966 = (1.0 - (cbSceneParam._m0[77u].w / _2938)) * _2963;
        float _2971 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2973 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3126;
        if (abs((_2952 - _2955) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3126 = ((((_2956 > 0.0) ? exp2(_2971 * _2956) : (2.0 - exp2(_2973 * _2956))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2966;
        }
        else
        {
            float _3086 = 1.0 / cbSceneParam._m0[80u].x;
            float _3087 = isnan(_2957) ? _2956 : (isnan(_2956) ? _2957 : max(_2956, _2957));
            float _3088 = isnan(_2957) ? _2956 : (isnan(_2956) ? _2957 : min(_2956, _2957));
            float _3097 = isnan(0.0) ? _3087 : (isnan(_3087) ? 0.0 : min(_3087, 0.0));
            float _3098 = isnan(0.0) ? _3088 : (isnan(_3088) ? 0.0 : min(_3088, 0.0));
            _3126 = ((abs(_2963 / _2952) * cbSceneParam._m0[80u].y) * ((((_3097 - _3098) * 2.0) - ((exp2(_2971 * (isnan(0.0) ? _3087 : (isnan(_3087) ? 0.0 : max(_3087, 0.0)))) - exp2(_2971 * (isnan(0.0) ? _3088 : (isnan(_3088) ? 0.0 : max(_3088, 0.0))))) * _3086)) - ((exp2(_2973 * _3097) - exp2(_2973 * _3098)) * _3086))) + (_2966 * cbSceneParam._m0[80u].z);
        }
        vec4 _3128 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2884, _2885, 1.0), 0.0);
        float _3137 = exp2((_3126 * (-1.44269502162933349609375)) * (1.0 - _3128.w));
        float _3138 = log2(_3137);
        float _3154 = log2(_2904);
        _2975 = (exp2(_3154 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3138 * cbSceneParam._m0[78u].x)) * _3128.x) / cbSceneParam._m0[78u].x)) + _2901;
        _2977 = (exp2(_3154 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3138 * cbSceneParam._m0[78u].y)) * _3128.y) / cbSceneParam._m0[78u].y)) + _2902;
        _2979 = (exp2(_3154 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3138 * cbSceneParam._m0[78u].z)) * _3128.z) / cbSceneParam._m0[78u].z)) + _2903;
        _2981 = _3137 * _2904;
    }
    else
    {
        _2975 = _2901;
        _2977 = _2902;
        _2979 = _2903;
        _2981 = _2904;
    }
    float _2993 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2994 = _2993 == 3.0;
    float _2995 = log2(_2981);
    float _3002 = exp2(_2995 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4803 : (isnan(_4803) ? 1.0 : min(_4803, 1.0))) * (_2846 + ((isnan(0.0) ? _1566 : (isnan(_1566) ? 0.0 : max(_1566, 0.0))) * _840))) + ((_2852 + ((isnan(0.0) ? _1856 : (isnan(_1856) ? 0.0 : max(_1856, 0.0))) * _1645)) * cbPerFrame._m0[3u].x));
    float _3003 = exp2(_2995 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4814 : (isnan(_4814) ? 1.0 : min(_4814, 1.0))) * (_2848 + ((isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0))) * _840))) + ((_2854 + ((isnan(0.0) ? _1859 : (isnan(_1859) ? 0.0 : max(_1859, 0.0))) * _1645)) * cbPerFrame._m0[3u].x));
    float _3004 = exp2(_2995 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4825 : (isnan(_4825) ? 1.0 : min(_4825, 1.0))) * (_2850 + ((isnan(0.0) ? _1572 : (isnan(_1572) ? 0.0 : max(_1572, 0.0))) * _840))) + ((_2856 + ((isnan(0.0) ? _1862 : (isnan(_1862) ? 0.0 : max(_1862, 0.0))) * _1645)) * cbPerFrame._m0[3u].x));
    float _3013 = (_2993 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3013 * (_2994 ? _3002 : (_3002 + (cbSceneParam._m0[72u].w * _2975)));
    SV_Target.y = _3013 * (_2994 ? _3003 : (_3003 + (cbSceneParam._m0[72u].w * _2977)));
    SV_Target.z = _3013 * (_2994 ? _3004 : (_3004 + (cbSceneParam._m0[72u].w * _2979)));
    SV_Target.w = cbInstanceData._m0[_2876].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2876].w;
}


