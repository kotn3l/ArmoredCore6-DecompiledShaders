#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 3) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1288;
float _3928;
float _3929;
float _3930;
float _3931;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _222 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _223 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _224 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _230 = inversesqrt(dot(vec3(_222, _223, _224), vec3(_222, _223, _224)));
    float _237 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _244 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _250 = uint(roundEven(NORMAL.w)) * 13u;
    uint _256 = _250 + 1u;
    uint _260 = _250 + 2u;
    float _269 = sqrt(((cbInstanceData._m0[_256].x * cbInstanceData._m0[_256].x) + (cbInstanceData._m0[_250].x * cbInstanceData._m0[_250].x)) + (cbInstanceData._m0[_260].x * cbInstanceData._m0[_260].x));
    float _270 = _269 * TEXCOORD.z;
    float _271 = _269 * TEXCOORD.w;
    vec4 _291 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _297 = _291.x * cbMtdParam._m0[11u].x;
    float _298 = _291.y * cbMtdParam._m0[11u].y;
    float _299 = _291.z * cbMtdParam._m0[11u].z;
    vec4 _318 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _270) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _271) + cbTextureTilingScale._m0[5u].w));
    vec4 _357 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _359 = _357.x;
    float _369 = dot(vec4(_359, _357.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _386 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_359 - _369) * cbMtdParam._m0[24u].x) + _369) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3940 = isnan(0.0) ? _386 : (isnan(_386) ? 0.0 : max(_386, 0.0));
    float _387 = isnan(1.0) ? _3940 : (isnan(_3940) ? 1.0 : min(_3940, 1.0));
    float _394 = (_387 * ((_318.x * cbMtdParam._m0[12u].x) - _297)) + _297;
    float _395 = (_387 * ((_318.y * cbMtdParam._m0[12u].y) - _298)) + _298;
    float _396 = (_387 * ((_318.z * cbMtdParam._m0[12u].z) - _299)) + _299;
    vec4 _413 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _270) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _271) + cbTextureTilingScale._m0[3u].w));
    vec4 _433 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _435 = _433.x;
    float _445 = dot(vec4(_435, _433.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _459 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.y) * 2.0) - ((((_435 - _445) * cbMtdParam._m0[24u].x) + _445) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3951 = isnan(0.0) ? _459 : (isnan(_459) ? 0.0 : max(_459, 0.0));
    float _460 = isnan(1.0) ? _3951 : (isnan(_3951) ? 1.0 : min(_3951, 1.0));
    float _467 = (_460 * ((_413.x * cbMtdParam._m0[13u].x) - _394)) + _394;
    float _468 = (_460 * ((_413.y * cbMtdParam._m0[13u].y) - _395)) + _395;
    float _469 = (_460 * ((_413.z * cbMtdParam._m0[13u].z) - _396)) + _396;
    vec4 _488 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _270) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _271) + cbTextureTilingScale._m0[14u].w));
    vec4 _507 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _270) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _271) + cbTextureTilingScale._m0[20u].w));
    vec4 _530 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _270) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _271) + cbTextureTilingScale._m0[4u].w));
    vec4 _547 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _549 = _547.x;
    float _550 = _547.y;
    float _551 = _547.z;
    float _558 = ((_530.x - _549) * _387) + _549;
    float _559 = ((_530.y - _550) * _387) + _550;
    float _560 = ((_530.z - _551) * _387) + _551;
    vec4 _572 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _270) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _271) + cbTextureTilingScale._m0[2u].w));
    float _585 = ((_572.z - _560) * _460) + _560;
    float _588 = ((((_572.x - _558) * _460) + _558) * 2.0) + (-1.0);
    float _589 = ((((_572.y - _559) * _460) + _559) * 2.0) + (-1.0);
    float _590 = dot(vec2(_588, _589), vec2(_588, _589));
    float _3962 = isnan(0.0) ? _590 : (isnan(_590) ? 0.0 : max(_590, 0.0));
    float _595 = sqrt(1.0 - (isnan(1.0) ? _3962 : (isnan(_3962) ? 1.0 : min(_3962, 1.0))));
    vec4 _608 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _626 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _270) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _271) + cbTextureTilingScale._m0[11u].w));
    float _628 = _626.x;
    float _629 = 1.0 - _628;
    float _642 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_628 - _629) * cbMtdParam._m0[24u].z) + _629) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3973 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
    float _643 = isnan(1.0) ? _3973 : (isnan(_3973) ? 1.0 : min(_3973, 1.0));
    float _650 = (_643 * ((_488.x * cbMtdParam._m0[18u].x) - _467)) + _467;
    float _651 = (_643 * ((_488.y * cbMtdParam._m0[18u].y) - _468)) + _468;
    float _652 = (_643 * ((_488.z * cbMtdParam._m0[18u].z) - _469)) + _469;
    float _657 = (((_507.z - _585) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _585;
    vec4 _670 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _270) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _271) + cbTextureTilingScale._m0[15u].w));
    float _677 = (_670.x * 2.0) + (-1.0);
    float _678 = (_670.y * 2.0) + (-1.0);
    float _679 = dot(vec2(_677, _678), vec2(_677, _678));
    float _3984 = isnan(0.0) ? _679 : (isnan(_679) ? 0.0 : max(_679, 0.0));
    float _687 = (_643 * (_670.z - _657)) + _657;
    float _692 = _588 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_507.x * 2.0) + (-1.0)));
    float _693 = _589 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_507.y * 2.0) + (-1.0)));
    float _705 = (((_677 - _692) + (cbMtdParam._m0[21u].x * _692)) * _643) + _692;
    float _706 = (((_678 - _693) + (cbMtdParam._m0[21u].x * _693)) * _643) + _693;
    float _707 = (_643 * (sqrt(1.0 - (isnan(1.0) ? _3984 : (isnan(_3984) ? 1.0 : min(_3984, 1.0)))) - _595)) + _595;
    float _712 = cbMtdParam._m0[22u].x + _608.w;
    float _715 = fma(_707, _237 * NORMAL.x, fma(_706, _244 * TANGENT.x, (_230 * _222) * _705));
    float _718 = fma(_707, _237 * NORMAL.y, fma(_706, _244 * TANGENT.y, (_230 * _223) * _705));
    float _721 = fma(_707, _237 * NORMAL.z, fma(_706, _244 * TANGENT.z, (_230 * _224) * _705));
    float _725 = inversesqrt(dot(vec3(_715, _718, _721), vec3(_715, _718, _721)));
    float _726 = _725 * _715;
    float _727 = _725 * _718;
    float _728 = _725 * _721;
    float _3995 = isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : max(_687, 0.0));
    float _729 = isnan(1.0) ? _3995 : (isnan(_3995) ? 1.0 : min(_3995, 1.0));
    float _4006 = isnan(0.0) ? _712 : (isnan(_712) ? 0.0 : max(_712, 0.0));
    float _4017 = isnan(0.0) ? _650 : (isnan(_650) ? 0.0 : max(_650, 0.0));
    float _4028 = isnan(0.0) ? _651 : (isnan(_651) ? 0.0 : max(_651, 0.0));
    float _4039 = isnan(0.0) ? _652 : (isnan(_652) ? 0.0 : max(_652, 0.0));
    float _747 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _789 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _799 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _789);
    float _800 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _789);
    float _801 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _789);
    float _805 = inversesqrt(dot(vec3(_799, _800, _801), vec3(_799, _800, _801)));
    float _806 = _799 * _805;
    float _807 = _800 * _805;
    float _808 = _801 * _805;
    vec4 _813 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _815 = _813.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _969 = sqrt(((_799 * _799) + (_800 * _800)) + (_801 * _801));
        float _975 = (cbMatDynParam._m0[5u].x * _969) + cbMatDynParam._m0[5u].y;
        float _4050 = isnan(0.0) ? _975 : (isnan(_975) ? 0.0 : max(_975, 0.0));
        float _976 = isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0));
        float _980 = (cbMatDynParam._m0[5u].z * _969) + cbMatDynParam._m0[5u].w;
        float _4061 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0))) - _976)) + _976) < ((_815 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _826 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _827 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _845 = fma(_728, cbSceneParam._m0[5u].z, fma(_727, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _726));
    float _848 = fma(_728, cbSceneParam._m0[6u].z, fma(_727, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _726));
    float _851 = fma(_728, cbSceneParam._m0[7u].z, fma(_727, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _726));
    uint _864 = _250 + 9u;
    uint _865 = _864 + uint(cbMatDynParam._m0[0u].w);
    float _871 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4017 : (isnan(_4017) ? 1.0 : min(_4017, 1.0)))) * cbInstanceData._m0[_865].x;
    float _872 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0)))) * cbInstanceData._m0[_865].y;
    float _873 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0)))) * cbInstanceData._m0[_865].z;
    float _4072 = isnan(0.0) ? _871 : (isnan(_871) ? 0.0 : max(_871, 0.0));
    float _874 = isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0));
    float _4083 = isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : max(_872, 0.0));
    float _875 = isnan(1.0) ? _4083 : (isnan(_4083) ? 1.0 : min(_4083, 1.0));
    float _4094 = isnan(0.0) ? _873 : (isnan(_873) ? 0.0 : max(_873, 0.0));
    float _876 = isnan(1.0) ? _4094 : (isnan(_4094) ? 1.0 : min(_4094, 1.0));
    vec4 _885 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _826, cbSceneParam._m0[86u].y * _827));
    float _889 = ((isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0))) * TEXCOORD_5.w) * _885.x;
    float _890 = dot(vec3(_726, _727, _728), vec3(_806, _807, _808));
    float _893 = _890 * 2.0;
    float _897 = (_893 * _726) - _806;
    float _898 = (_893 * _727) - _807;
    float _899 = (_893 * _728) - _808;
    float _903 = abs(dot(vec3(_806, _807, _808), vec3(_726, _727, _728)));
    float _4105 = isnan(0.0) ? _903 : (isnan(_903) ? 0.0 : max(_903, 0.0));
    float _905 = sqrt(_729);
    float _918 = exp2((_905 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4105 : (isnan(_4105) ? 1.0 : min(_4105, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_905 * 3.0));
    float _950 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _954 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _958 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1287;
    float _1289;
    float _1290;
    float _1291;
    float _1292;
    float _1293;
    float _1294;
    float _1295;
    float _1296;
    float _1297;
    float _1298;
    float _1299;
    float _1300;
    float _1301;
    float _1302;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1012 = fma(_958, cbModelParam._m0[26u].z, fma(_954, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _950));
        float _1016 = fma(_958, cbModelParam._m0[27u].z, fma(_954, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _950));
        float _1020 = fma(_958, cbModelParam._m0[28u].z, fma(_954, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _950));
        float _1045 = _950 + _726;
        float _1046 = _954 + _727;
        float _1047 = _958 + _728;
        float _1057 = fma(_1047, cbModelParam._m0[26u].z, fma(_1046, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1045)) - _1012;
        float _1058 = fma(_1047, cbModelParam._m0[27u].z, fma(_1046, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1045)) - _1016;
        float _1059 = fma(_1047, cbModelParam._m0[28u].z, fma(_1046, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1045)) - _1020;
        float _1063 = inversesqrt(dot(vec3(_1057, _1058, _1059), vec3(_1057, _1058, _1059)));
        float _1076 = ((_1063 * _1057) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1012 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1077 = ((_1063 * _1058) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1016 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1078 = ((_1063 * _1059) / cbModelParam._m0[34u].z) + ((((((_1020 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1081 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1076, _1077, _1078), 0.0);
        vec4 _1088 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1076, _1077, _1078), 0.0);
        vec4 _1095 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1076, _1077, _1078), 0.0);
        vec4 _1102 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1076, _1077, _1078), 0.0);
        float _1115 = exp2((_1081.w + (-0.5)) * 20.0) * 2.0;
        float _1116 = _1115 * (_1081.x + (-0.5));
        float _1117 = _1115 * (_1081.y + (-0.5));
        float _1118 = _1115 * (_1081.z + (-0.5));
        float _1125 = exp2((_1088.w + (-0.5)) * 20.0) * 2.0;
        float _1126 = _1125 * (_1088.x + (-0.5));
        float _1127 = _1125 * (_1088.y + (-0.5));
        float _1128 = _1125 * (_1088.z + (-0.5));
        float _1135 = exp2((_1095.w + (-0.5)) * 20.0) * 2.0;
        float _1136 = _1135 * (_1095.x + (-0.5));
        float _1137 = _1135 * (_1095.y + (-0.5));
        float _1138 = _1135 * (_1095.z + (-0.5));
        float _1145 = exp2((_1102.w + (-0.5)) * 20.0) * 2.0;
        float _1146 = _1145 * (_1102.x + (-0.5));
        float _1147 = _1145 * (_1102.y + (-0.5));
        float _1148 = _1145 * (_1102.z + (-0.5));
        float _1149 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
        float _1150 = isnan(0.0) ? _1147 : (isnan(_1147) ? 0.0 : max(_1147, 0.0));
        float _1151 = isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0));
        float _1152 = _1116 * 0.5;
        float _1153 = _1126 * 0.5;
        float _1154 = _1136 * 0.5;
        float _1155 = dot(vec3(_1152, _1153, _1154), vec3(_1152, _1153, _1154));
        float _1160 = (_1155 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1155);
        float _1169 = (dot(vec3(_726, _727, _728), vec3(_1160 * _1152, _1160 * _1153, _1160 * _1154)) + 1.0) * 0.5;
        float _4131 = isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0));
        float _1179 = sqrt(((_1153 * _1153) + (_1152 * _1152)) + (_1154 * _1154)) / (_1149 + 9.9999997473787516355514526367188e-06);
        float _4142 = isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0));
        float _1180 = isnan(1.0) ? _4142 : (isnan(_4142) ? 1.0 : min(_4142, 1.0));
        float _1181 = _1180 * 2.0;
        float _1185 = (1.0 - _1180) / (_1180 + 1.0);
        float _4153 = isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0));
        float _1186 = isnan(1.0) ? _4153 : (isnan(_4153) ? 1.0 : min(_4153, 1.0));
        float _1195 = ((((1.0 - _1186) * (_1181 + 2.0)) * exp2(log2(isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0))) * (_1181 + 1.0))) + _1186) * _1149;
        float _1196 = _1117 * 0.5;
        float _1197 = _1127 * 0.5;
        float _1198 = _1137 * 0.5;
        float _1199 = dot(vec3(_1196, _1197, _1198), vec3(_1196, _1197, _1198));
        float _1204 = (_1199 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1199);
        float _1212 = (dot(vec3(_726, _727, _728), vec3(_1204 * _1196, _1204 * _1197, _1204 * _1198)) + 1.0) * 0.5;
        float _4164 = isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0));
        float _1221 = sqrt(((_1197 * _1197) + (_1196 * _1196)) + (_1198 * _1198)) / (_1150 + 9.9999997473787516355514526367188e-06);
        float _4175 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
        float _1222 = isnan(1.0) ? _4175 : (isnan(_4175) ? 1.0 : min(_4175, 1.0));
        float _1223 = _1222 * 2.0;
        float _1227 = (1.0 - _1222) / (_1222 + 1.0);
        float _4186 = isnan(0.0) ? _1227 : (isnan(_1227) ? 0.0 : max(_1227, 0.0));
        float _1228 = isnan(1.0) ? _4186 : (isnan(_4186) ? 1.0 : min(_4186, 1.0));
        float _1237 = ((((1.0 - _1228) * (_1223 + 2.0)) * exp2(log2(isnan(1.0) ? _4164 : (isnan(_4164) ? 1.0 : min(_4164, 1.0))) * (_1223 + 1.0))) + _1228) * _1150;
        float _1238 = _1118 * 0.5;
        float _1239 = _1128 * 0.5;
        float _1240 = _1138 * 0.5;
        float _1241 = dot(vec3(_1238, _1239, _1240), vec3(_1238, _1239, _1240));
        float _1246 = (_1241 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1241);
        float _1254 = (dot(vec3(_726, _727, _728), vec3(_1246 * _1238, _1246 * _1239, _1246 * _1240)) + 1.0) * 0.5;
        float _4197 = isnan(0.0) ? _1254 : (isnan(_1254) ? 0.0 : max(_1254, 0.0));
        float _1263 = sqrt(((_1239 * _1239) + (_1238 * _1238)) + (_1240 * _1240)) / (_1151 + 9.9999997473787516355514526367188e-06);
        float _4208 = isnan(0.0) ? _1263 : (isnan(_1263) ? 0.0 : max(_1263, 0.0));
        float _1264 = isnan(1.0) ? _4208 : (isnan(_4208) ? 1.0 : min(_4208, 1.0));
        float _1265 = _1264 * 2.0;
        float _1269 = (1.0 - _1264) / (_1264 + 1.0);
        float _4219 = isnan(0.0) ? _1269 : (isnan(_1269) ? 0.0 : max(_1269, 0.0));
        float _1270 = isnan(1.0) ? _4219 : (isnan(_4219) ? 1.0 : min(_4219, 1.0));
        float _1279 = ((((1.0 - _1270) * (_1265 + 2.0)) * exp2(log2(isnan(1.0) ? _4197 : (isnan(_4197) ? 1.0 : min(_4197, 1.0))) * (_1265 + 1.0))) + _1270) * _1151;
        _1287 = _1118;
        _1289 = _1117;
        _1290 = _1116;
        _1291 = _1128;
        _1292 = _1127;
        _1293 = _1126;
        _1294 = _1138;
        _1295 = _1137;
        _1296 = _1136;
        _1297 = _1151;
        _1298 = _1150;
        _1299 = _1149;
        _1300 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0)));
        _1301 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0)));
        _1302 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1279 : (isnan(_1279) ? 0.0 : max(_1279, 0.0)));
    }
    else
    {
        _1287 = _1288;
        _1289 = _1288;
        _1290 = _1288;
        _1291 = _1288;
        _1292 = _1288;
        _1293 = _1288;
        _1294 = _1288;
        _1295 = _1288;
        _1296 = _1288;
        _1297 = _1288;
        _1298 = _1288;
        _1299 = _1288;
        _1300 = 0.0;
        _1301 = 0.0;
        _1302 = 0.0;
    }
    float _1598;
    float _1599;
    float _1600;
    float _1601;
    float _1602;
    float _1603;
    float _1604;
    float _1605;
    float _1606;
    float _1607;
    float _1608;
    float _1609;
    float _1610;
    float _1611;
    float _1612;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1329 = fma(_958, cbModelParam._m0[30u].z, fma(_954, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _950));
        float _1333 = fma(_958, cbModelParam._m0[31u].z, fma(_954, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _950));
        float _1337 = fma(_958, cbModelParam._m0[32u].z, fma(_954, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _950));
        float _1360 = _950 + _726;
        float _1361 = _954 + _727;
        float _1362 = _958 + _728;
        float _1372 = fma(_1362, cbModelParam._m0[30u].z, fma(_1361, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1360)) - _1329;
        float _1373 = fma(_1362, cbModelParam._m0[31u].z, fma(_1361, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1360)) - _1333;
        float _1374 = fma(_1362, cbModelParam._m0[32u].z, fma(_1361, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1360)) - _1337;
        float _1378 = inversesqrt(dot(vec3(_1372, _1373, _1374), vec3(_1372, _1373, _1374)));
        float _1391 = ((_1378 * _1372) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1329 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1392 = ((_1378 * _1373) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1333 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1393 = ((_1378 * _1374) / cbModelParam._m0[35u].z) + ((((((_1337 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1395 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1391, _1392, _1393), 0.0);
        vec4 _1402 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1391, _1392, _1393), 0.0);
        vec4 _1409 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1391, _1392, _1393), 0.0);
        vec4 _1416 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1391, _1392, _1393), 0.0);
        float _1428 = exp2((_1395.w + (-0.5)) * 20.0) * 2.0;
        float _1429 = _1428 * (_1395.x + (-0.5));
        float _1430 = _1428 * (_1395.y + (-0.5));
        float _1431 = _1428 * (_1395.z + (-0.5));
        float _1438 = exp2((_1402.w + (-0.5)) * 20.0) * 2.0;
        float _1439 = _1438 * (_1402.x + (-0.5));
        float _1440 = _1438 * (_1402.y + (-0.5));
        float _1441 = _1438 * (_1402.z + (-0.5));
        float _1448 = exp2((_1409.w + (-0.5)) * 20.0) * 2.0;
        float _1449 = _1448 * (_1409.x + (-0.5));
        float _1450 = _1448 * (_1409.y + (-0.5));
        float _1451 = _1448 * (_1409.z + (-0.5));
        float _1458 = exp2((_1416.w + (-0.5)) * 20.0) * 2.0;
        float _1459 = _1458 * (_1416.x + (-0.5));
        float _1460 = _1458 * (_1416.y + (-0.5));
        float _1461 = _1458 * (_1416.z + (-0.5));
        float _1462 = isnan(0.0) ? _1459 : (isnan(_1459) ? 0.0 : max(_1459, 0.0));
        float _1463 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
        float _1464 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0));
        float _1465 = _1429 * 0.5;
        float _1466 = _1439 * 0.5;
        float _1467 = _1449 * 0.5;
        float _1468 = dot(vec3(_1465, _1466, _1467), vec3(_1465, _1466, _1467));
        float _1473 = (_1468 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1468);
        float _1481 = (dot(vec3(_726, _727, _728), vec3(_1473 * _1465, _1473 * _1466, _1473 * _1467)) + 1.0) * 0.5;
        float _4260 = isnan(0.0) ? _1481 : (isnan(_1481) ? 0.0 : max(_1481, 0.0));
        float _1490 = sqrt(((_1466 * _1466) + (_1465 * _1465)) + (_1467 * _1467)) / (_1462 + 9.9999997473787516355514526367188e-06);
        float _4271 = isnan(0.0) ? _1490 : (isnan(_1490) ? 0.0 : max(_1490, 0.0));
        float _1491 = isnan(1.0) ? _4271 : (isnan(_4271) ? 1.0 : min(_4271, 1.0));
        float _1492 = _1491 * 2.0;
        float _1496 = (1.0 - _1491) / (_1491 + 1.0);
        float _4282 = isnan(0.0) ? _1496 : (isnan(_1496) ? 0.0 : max(_1496, 0.0));
        float _1497 = isnan(1.0) ? _4282 : (isnan(_4282) ? 1.0 : min(_4282, 1.0));
        float _1506 = ((((1.0 - _1497) * (_1492 + 2.0)) * exp2(log2(isnan(1.0) ? _4260 : (isnan(_4260) ? 1.0 : min(_4260, 1.0))) * (_1492 + 1.0))) + _1497) * _1462;
        float _1507 = _1430 * 0.5;
        float _1508 = _1440 * 0.5;
        float _1509 = _1450 * 0.5;
        float _1510 = dot(vec3(_1507, _1508, _1509), vec3(_1507, _1508, _1509));
        float _1515 = (_1510 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1510);
        float _1523 = (dot(vec3(_726, _727, _728), vec3(_1515 * _1507, _1515 * _1508, _1515 * _1509)) + 1.0) * 0.5;
        float _4293 = isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0));
        float _1532 = sqrt(((_1508 * _1508) + (_1507 * _1507)) + (_1509 * _1509)) / (_1463 + 9.9999997473787516355514526367188e-06);
        float _4304 = isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0));
        float _1533 = isnan(1.0) ? _4304 : (isnan(_4304) ? 1.0 : min(_4304, 1.0));
        float _1534 = _1533 * 2.0;
        float _1538 = (1.0 - _1533) / (_1533 + 1.0);
        float _4315 = isnan(0.0) ? _1538 : (isnan(_1538) ? 0.0 : max(_1538, 0.0));
        float _1539 = isnan(1.0) ? _4315 : (isnan(_4315) ? 1.0 : min(_4315, 1.0));
        float _1548 = ((((1.0 - _1539) * (_1534 + 2.0)) * exp2(log2(isnan(1.0) ? _4293 : (isnan(_4293) ? 1.0 : min(_4293, 1.0))) * (_1534 + 1.0))) + _1539) * _1463;
        float _1549 = _1431 * 0.5;
        float _1550 = _1441 * 0.5;
        float _1551 = _1451 * 0.5;
        float _1552 = dot(vec3(_1549, _1550, _1551), vec3(_1549, _1550, _1551));
        float _1557 = (_1552 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1552);
        float _1565 = (dot(vec3(_726, _727, _728), vec3(_1557 * _1549, _1557 * _1550, _1557 * _1551)) + 1.0) * 0.5;
        float _4326 = isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0));
        float _1574 = sqrt(((_1550 * _1550) + (_1549 * _1549)) + (_1551 * _1551)) / (_1464 + 9.9999997473787516355514526367188e-06);
        float _4337 = isnan(0.0) ? _1574 : (isnan(_1574) ? 0.0 : max(_1574, 0.0));
        float _1575 = isnan(1.0) ? _4337 : (isnan(_4337) ? 1.0 : min(_4337, 1.0));
        float _1576 = _1575 * 2.0;
        float _1580 = (1.0 - _1575) / (_1575 + 1.0);
        float _4348 = isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0));
        float _1581 = isnan(1.0) ? _4348 : (isnan(_4348) ? 1.0 : min(_4348, 1.0));
        float _1590 = ((((1.0 - _1581) * (_1576 + 2.0)) * exp2(log2(isnan(1.0) ? _4326 : (isnan(_4326) ? 1.0 : min(_4326, 1.0))) * (_1576 + 1.0))) + _1581) * _1464;
        _1598 = _1431;
        _1599 = _1430;
        _1600 = _1429;
        _1601 = _1441;
        _1602 = _1440;
        _1603 = _1439;
        _1604 = _1451;
        _1605 = _1450;
        _1606 = _1449;
        _1607 = _1464;
        _1608 = _1463;
        _1609 = _1462;
        _1610 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0)));
        _1611 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1548 : (isnan(_1548) ? 0.0 : max(_1548, 0.0)));
        _1612 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1590 : (isnan(_1590) ? 0.0 : max(_1590, 0.0)));
    }
    else
    {
        _1598 = _1288;
        _1599 = _1288;
        _1600 = _1288;
        _1601 = _1288;
        _1602 = _1288;
        _1603 = _1288;
        _1604 = _1288;
        _1605 = _1288;
        _1606 = _1288;
        _1607 = _1288;
        _1608 = _1288;
        _1609 = _1288;
        _1610 = 0.0;
        _1611 = 0.0;
        _1612 = 0.0;
    }
    float _1622 = (cbModelParam._m0[1u].x * (_1610 - _1300)) + _1300;
    float _1623 = (cbModelParam._m0[1u].x * (_1611 - _1301)) + _1301;
    float _1624 = (cbModelParam._m0[1u].x * (_1612 - _1302)) + _1302;
    float _1645 = fma(_1624, cbSceneParam._m0[89u].z, fma(_1623, cbSceneParam._m0[89u].y, _1622 * cbSceneParam._m0[89u].x));
    float _1648 = fma(_1624, cbSceneParam._m0[90u].z, fma(_1623, cbSceneParam._m0[90u].y, _1622 * cbSceneParam._m0[90u].x));
    float _1651 = fma(_1624, cbSceneParam._m0[91u].z, fma(_1623, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1622));
    float _1666 = _897 * 0.5;
    float _1667 = _898 * 0.5;
    float _1668 = _899 * 0.5;
    float _1669 = dot(vec4(_1666, _1667, _1668, 1.0), vec4(_1600, _1603, _1606, _1609));
    float _1672 = dot(vec4(_1666, _1667, _1668, 1.0), vec4(_1599, _1602, _1605, _1608));
    float _1675 = dot(vec4(_1666, _1667, _1668, 1.0), vec4(_1598, _1601, _1604, _1607));
    float _1709;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1682 = dot(vec4(_1666, _1667, _1668, 1.0), vec4(_1287, _1291, _1294, _1297));
        float _1686 = dot(vec4(_1666, _1667, _1668, 1.0), vec4(_1289, _1292, _1295, _1298));
        float _1690 = dot(vec4(_1666, _1667, _1668, 1.0), vec4(_1290, _1293, _1296, _1299));
        float _1697 = dot(vec4(cbModelParam._m0[39u]), vec4(_1666, _1667, _1668, 1.0));
        _1709 = dot(vec3(isnan(0.0) ? _1690 : (isnan(_1690) ? 0.0 : max(_1690, 0.0)), isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0)), isnan(0.0) ? _1682 : (isnan(_1682) ? 0.0 : max(_1682, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1697) ? 0.0 : (isnan(0.0) ? _1697 : max(0.0, _1697))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1709 = 1.0;
    }
    float _1720;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1711 = dot(vec4(cbModelParam._m0[40u]), vec4(_1666, _1667, _1668, 1.0));
        _1720 = dot(vec3(isnan(0.0) ? _1669 : (isnan(_1669) ? 0.0 : max(_1669, 0.0)), isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0)), isnan(0.0) ? _1675 : (isnan(_1675) ? 0.0 : max(_1675, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1711) ? 0.0 : (isnan(0.0) ? _1711 : max(0.0, _1711))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1720 = 1.0;
    }
    float _1724 = (_1720 * cbModelParam._m0[1u].x) + (_1709 * (1.0 - cbModelParam._m0[1u].x));
    float _1734 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _729);
    float _1735 = isnan(_1734) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1734 : min(cbModelParam._m0[25u].z, _1734));
    float _1815;
    float _1817;
    float _1819;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1782 = fma(_958, cbModelParam._m0[13u].z, fma(_954, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _950)) + cbModelParam._m0[13u].w;
        float _1786 = fma(_958, cbModelParam._m0[14u].z, fma(_954, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _950)) + cbModelParam._m0[14u].w;
        float _1790 = fma(_958, cbModelParam._m0[15u].z, fma(_954, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _950)) + cbModelParam._m0[15u].w;
        float _1793 = fma(_899, cbModelParam._m0[13u].z, fma(_898, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _897));
        float _1796 = fma(_899, cbModelParam._m0[14u].z, fma(_898, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _897));
        float _1799 = fma(_899, cbModelParam._m0[15u].z, fma(_898, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _897));
        float _1827;
        if (_1793 > 0.0)
        {
            _1827 = abs((1.0 - _1782) / _1793);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1793 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1782 + 1.0) / _1793);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1827 = frontier_phi_17_15_ladder;
        }
        float _1996;
        if (_1796 > 0.0)
        {
            _1996 = abs((1.0 - _1786) / _1796);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1796 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1786 + 1.0) / _1796);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _1996 = frontier_phi_26_22_ladder;
        }
        float _2291;
        if (_1799 > 0.0)
        {
            _2291 = abs((1.0 - _1790) / _1799);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1799 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1790 + 1.0) / _1799);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2291 = frontier_phi_38_33_ladder;
        }
        float _2293 = isnan(_1996) ? _1827 : (isnan(_1827) ? _1996 : min(_1827, _1996));
        float _2294 = isnan(_2291) ? _2293 : (isnan(_2293) ? _2291 : min(_2293, _2291));
        float _2298 = (_2294 * _1793) + _1782;
        float _2299 = (_2294 * _1796) + _1786;
        float _2300 = (_2294 * _1799) + _1790;
        float _2301 = _2294 * 9.9999997473787516355514526367188e-05;
        float _2303 = (-1.0) - _2301;
        float _2305 = _2301 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2300 > _2305) || ((_2300 < _2303) || ((_2299 > _2305) || ((_2299 < _2303) || ((_2298 < _2303) || (_2298 > _2305))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2445 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2300, cbModelParam._m0[9u].z, fma(_2299, cbModelParam._m0[9u].y, _2298 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2300, cbModelParam._m0[10u].z, fma(_2299, cbModelParam._m0[10u].y, _2298 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2300, cbModelParam._m0[11u].z, fma(_2299, cbModelParam._m0[11u].y, _2298 * cbModelParam._m0[11u].x))), _1735);
            frontier_phi_16_38_ladder = _2445.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2445.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2445.x * cbModelParam._m0[1u].y;
        }
        _1815 = frontier_phi_16_38_ladder_2;
        _1817 = frontier_phi_16_38_ladder_1;
        _1819 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1803 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_897, _898, _899), _1735);
        _1815 = _1803.x * cbModelParam._m0[1u].y;
        _1817 = _1803.y * cbModelParam._m0[1u].y;
        _1819 = _1803.z * cbModelParam._m0[1u].y;
    }
    float _1823 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _729);
    float _1824 = isnan(_1823) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1823 : min(cbModelParam._m0[25u].w, _1823));
    float _1913;
    float _1915;
    float _1917;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1877 = fma(_958, cbModelParam._m0[21u].z, fma(_954, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _950)) + cbModelParam._m0[21u].w;
        float _1881 = fma(_958, cbModelParam._m0[22u].z, fma(_954, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _950)) + cbModelParam._m0[22u].w;
        float _1885 = fma(_958, cbModelParam._m0[23u].z, fma(_954, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _950)) + cbModelParam._m0[23u].w;
        float _1888 = fma(_899, cbModelParam._m0[21u].z, fma(_898, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _897));
        float _1891 = fma(_899, cbModelParam._m0[22u].z, fma(_898, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _897));
        float _1894 = fma(_899, cbModelParam._m0[23u].z, fma(_898, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _897));
        float _2001;
        if (_1888 > 0.0)
        {
            _2001 = abs((1.0 - _1877) / _1888);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1888 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1877 + 1.0) / _1888);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2001 = frontier_phi_28_24_ladder;
        }
        float _2318;
        if (_1891 > 0.0)
        {
            _2318 = abs((1.0 - _1881) / _1891);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1891 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1881 + 1.0) / _1891);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2318 = frontier_phi_40_35_ladder;
        }
        float _2645;
        if (_1894 > 0.0)
        {
            _2645 = abs((1.0 - _1885) / _1894);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_1894 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_1885 + 1.0) / _1894);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2645 = frontier_phi_50_47_ladder;
        }
        float _2647 = isnan(_2318) ? _2001 : (isnan(_2001) ? _2318 : min(_2001, _2318));
        float _2648 = isnan(_2645) ? _2647 : (isnan(_2647) ? _2645 : min(_2647, _2645));
        float _2652 = (_2648 * _1888) + _1877;
        float _2653 = (_2648 * _1891) + _1881;
        float _2654 = (_2648 * _1894) + _1885;
        float _2655 = _2648 * 9.9999997473787516355514526367188e-05;
        float _2656 = (-1.0) - _2655;
        float _2658 = _2655 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2654 > _2658) || ((_2654 < _2656) || ((_2653 > _2658) || ((_2653 < _2656) || ((_2652 < _2656) || (_2652 > _2658))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2772 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2654, cbModelParam._m0[17u].z, fma(_2653, cbModelParam._m0[17u].y, _2652 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2654, cbModelParam._m0[18u].z, fma(_2653, cbModelParam._m0[18u].y, _2652 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2654, cbModelParam._m0[19u].z, fma(_2653, cbModelParam._m0[19u].y, _2652 * cbModelParam._m0[19u].x))), _1824);
            frontier_phi_25_50_ladder = _2772.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2772.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2772.x * cbModelParam._m0[1u].z;
        }
        _1913 = frontier_phi_25_50_ladder_2;
        _1915 = frontier_phi_25_50_ladder_1;
        _1917 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _1897 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_897, _898, _899), _1824);
        _1913 = _1897.x * cbModelParam._m0[1u].z;
        _1915 = _1897.y * cbModelParam._m0[1u].z;
        _1917 = _1897.z * cbModelParam._m0[1u].z;
    }
    float _1929 = ((((1.0 - _918) * ((_905 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_918 * _905)) * _889;
    float _1930 = _1929 * ((cbModelParam._m0[1u].w * (_1913 - _1815)) + _1815);
    float _1931 = _1929 * ((cbModelParam._m0[1u].w * (_1915 - _1817)) + _1817);
    float _1932 = _1929 * ((cbModelParam._m0[1u].w * (_1917 - _1819)) + _1819);
    float _1935 = fma(_1932, cbSceneParam._m0[89u].z, fma(_1931, cbSceneParam._m0[89u].y, _1930 * cbSceneParam._m0[89u].x));
    float _1938 = fma(_1932, cbSceneParam._m0[90u].z, fma(_1931, cbSceneParam._m0[90u].y, _1930 * cbSceneParam._m0[90u].x));
    float _1941 = fma(_1932, cbSceneParam._m0[91u].z, fma(_1931, cbSceneParam._m0[91u].y, _1930 * cbSceneParam._m0[91u].x));
    float _1975 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1979 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1983 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1987 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1988 = _1975 / _1987;
    float _1989 = _1979 / _1987;
    float _1990 = _1983 / _1987;
    float _2137;
    float _2138;
    float _2139;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2017 = ((uint(_1990 > cbSceneParam._m0[59u].y) + uint(_1990 > cbSceneParam._m0[59u].x)) + uint(_1990 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2018 = _2017 + 43u;
        uint _2026 = _2017 + 44u;
        uint _2034 = _2017 + 45u;
        uint _2042 = _2017 + 46u;
        float _2053 = fma(_1987, cbSceneParam._m0[_2018].w, fma(_1983, cbSceneParam._m0[_2018].z, fma(_1979, cbSceneParam._m0[_2018].y, _1975 * cbSceneParam._m0[_2018].x)));
        float _2057 = fma(_1987, cbSceneParam._m0[_2026].w, fma(_1983, cbSceneParam._m0[_2026].z, fma(_1979, cbSceneParam._m0[_2026].y, _1975 * cbSceneParam._m0[_2026].x)));
        float _2065 = fma(_1987, cbSceneParam._m0[_2042].w, fma(_1983, cbSceneParam._m0[_2042].z, fma(_1979, cbSceneParam._m0[_2042].y, _1975 * cbSceneParam._m0[_2042].x)));
        float _2070 = cbSceneParam._m0[33u].z * _2065;
        float _2072 = cbSceneParam._m0[33u].w * _2065;
        float _2075 = fma(_1987, cbSceneParam._m0[_2034].w, fma(_1983, cbSceneParam._m0[_2034].z, fma(_1979, cbSceneParam._m0[_2034].y, _1975 * cbSceneParam._m0[_2034].x))) / _2065;
        float _2123 = (cbSceneParam._m0[33u].x - sqrt(((_1989 * _1989) + (_1988 * _1988)) + (_1990 * _1990))) * cbSceneParam._m0[33u].y;
        float _4474 = isnan(0.0) ? _2123 : (isnan(_2123) ? 0.0 : max(_2123, 0.0));
        float _2130 = (isnan(1.0) ? _4474 : (isnan(_4474) ? 1.0 : min(_4474, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2070 + _2053) / _2065, (_2072 + _2057) / _2065), _2075), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2072 + _2053) / _2065, (_2057 - _2070) / _2065), _2075), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2053 - _2070) / _2065, (_2057 - _2072) / _2065), _2075), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2053 - _2072) / _2065, (_2070 + _2057) / _2065), _2075), 0.0)).x), vec4(0.25)));
        _2137 = 1.0 - (_2130 * cbSceneParam._m0[34u].x);
        _2138 = 1.0 - (_2130 * cbSceneParam._m0[34u].y);
        _2139 = 1.0 - (_2130 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2137 = 1.0;
        _2138 = 1.0;
        _2139 = 1.0;
    }
    float _2203;
    float _2205;
    float _2207;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2191 = fma(_1987, cbSceneParam._m0[63u].w, fma(_1983, cbSceneParam._m0[63u].z, fma(_1979, cbSceneParam._m0[63u].y, _1975 * cbSceneParam._m0[63u].x)));
        float _2192 = fma(_1987, cbSceneParam._m0[60u].w, fma(_1983, cbSceneParam._m0[60u].z, fma(_1979, cbSceneParam._m0[60u].y, _1975 * cbSceneParam._m0[60u].x))) / _2191;
        float _2193 = fma(_1987, cbSceneParam._m0[61u].w, fma(_1983, cbSceneParam._m0[61u].z, fma(_1979, cbSceneParam._m0[61u].y, _1975 * cbSceneParam._m0[61u].x))) / _2191;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2192 >= cbSceneParam._m0[64u].x) && (_2193 >= cbSceneParam._m0[64u].y)) && (_2192 <= cbSceneParam._m0[64u].z)) && (_2193 <= cbSceneParam._m0[64u].w))
        {
            float _2331 = fma(_1987, cbSceneParam._m0[62u].w, fma(_1983, cbSceneParam._m0[62u].z, fma(_1979, cbSceneParam._m0[62u].y, _1975 * cbSceneParam._m0[62u].x))) / _2191;
            float _2335 = isnan(cbSceneParam._m0[41u].w) ? _2331 : (isnan(_2331) ? cbSceneParam._m0[41u].w : max(_2331, cbSceneParam._m0[41u].w));
            float _2378 = (cbSceneParam._m0[33u].x - sqrt(((_1989 * _1989) + (_1988 * _1988)) + (_1990 * _1990))) * cbSceneParam._m0[33u].y;
            float _4490 = isnan(0.0) ? _2378 : (isnan(_2378) ? 0.0 : max(_2378, 0.0));
            float _2385 = (isnan(1.0) ? _4490 : (isnan(_4490) ? 1.0 : min(_4490, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2192, cbSceneParam._m0[33u].w + _2193), _2335), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2192, _2193 - cbSceneParam._m0[33u].z), _2335), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2192 - cbSceneParam._m0[33u].z, _2193 - cbSceneParam._m0[33u].w), _2335), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2192 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2193), _2335), 0.0)).x), vec4(0.25)));
            float _2389 = 1.0 - (_2385 * cbSceneParam._m0[34u].x);
            float _2390 = 1.0 - (_2385 * cbSceneParam._m0[34u].y);
            float _2391 = 1.0 - (_2385 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2391) ? _2139 : (isnan(_2139) ? _2391 : min(_2139, _2391));
            frontier_phi_37_36_ladder_1 = isnan(_2390) ? _2138 : (isnan(_2138) ? _2390 : min(_2138, _2390));
            frontier_phi_37_36_ladder_2 = isnan(_2389) ? _2137 : (isnan(_2137) ? _2389 : min(_2137, _2389));
        }
        else
        {
            frontier_phi_37_36_ladder = _2139;
            frontier_phi_37_36_ladder_1 = _2138;
            frontier_phi_37_36_ladder_2 = _2137;
        }
        _2203 = frontier_phi_37_36_ladder_2;
        _2205 = frontier_phi_37_36_ladder_1;
        _2207 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2203 = _2137;
        _2205 = _2138;
        _2207 = _2139;
    }
    uvec4 _2212 = floatBitsToUint(cbInstanceData._m0[_250 + 5u]);
    uint _2214 = _2212.x * 14u;
    uint _2215 = _2214 + 13u;
    float _2222 = _889 + (-1.0);
    float _2227 = (cbLight._m0[_2215].x * _2222) + 1.0;
    float _2228 = (cbLight._m0[_2215].y * _2222) + 1.0;
    float _2229 = (cbLight._m0[_2215].z * _2222) + 1.0;
    float _2230 = (cbLight._m0[_2215].w * _2222) + 1.0;
    uint _2231 = _2214 + 5u;
    float _2237 = isnan(1.0) ? _2228 : (isnan(_2228) ? 1.0 : min(_2228, 1.0));
    uint _2241 = _2214 + 4u;
    float _2250 = isnan(1.0) ? _2227 : (isnan(_2227) ? 1.0 : min(_2227, 1.0));
    uint _2254 = _2214 | 1u;
    float _2265 = dot(vec3(cbLight._m0[_2214].xyz), vec3(_726, _727, _728));
    float _2268 = dot(vec3(cbLight._m0[_2254].xyz), vec3(_726, _727, _728));
    float _4526 = isnan(0.0) ? _2265 : (isnan(_2265) ? 0.0 : max(_2265, 0.0));
    float _4537 = isnan(0.0) ? _2268 : (isnan(_2268) ? 0.0 : max(_2268, 0.0));
    float _2273 = (isnan(1.0) ? _4526 : (isnan(_4526) ? 1.0 : min(_4526, 1.0))) * 0.3183098733425140380859375;
    float _2275 = (isnan(1.0) ? _4537 : (isnan(_4537) ? 1.0 : min(_4537, 1.0))) * 0.3183098733425140380859375;
    float _2282 = ((cbLight._m0[_2231].x * _2237) * _2275) + (((cbLight._m0[_2241].x * _2203) * _2250) * _2273);
    float _2283 = ((_2237 * cbLight._m0[_2231].y) * _2275) + (((cbLight._m0[_2241].y * _2205) * _2250) * _2273);
    float _2284 = ((_2237 * cbLight._m0[_2231].z) * _2275) + (((cbLight._m0[_2241].z * _2207) * _2250) * _2273);
    uvec4 _2288 = floatBitsToUint(cbLight._m0[_2214 + 12u]);
    bool _2290 = _2288.x == 0u;
    float _2392;
    float _2394;
    float _2396;
    if (_2290)
    {
        _2392 = _2282;
        _2394 = _2283;
        _2396 = _2284;
    }
    else
    {
        uint _2400 = _2214 + 6u;
        float _2416 = (dot(vec3(cbLight._m0[_2214 + 2u].xyz), vec3(_726, _727, _728)) * 0.5) + 0.5;
        float _2417 = _2416 * _2416;
        float _4548 = isnan(0.0) ? _2417 : (isnan(_2417) ? 0.0 : max(_2417, 0.0));
        float _2418 = isnan(1.0) ? _4548 : (isnan(_4548) ? 1.0 : min(_4548, 1.0));
        float _2419 = isnan(1.0) ? _2229 : (isnan(_2229) ? 1.0 : min(_2229, 1.0));
        _2392 = (((cbLight._m0[_2400].x * 0.3183098733425140380859375) * _2418) * _2419) + _2282;
        _2394 = (((cbLight._m0[_2400].y * 0.3183098733425140380859375) * _2418) * _2419) + _2283;
        _2396 = (((cbLight._m0[_2400].z * 0.3183098733425140380859375) * _2418) * _2419) + _2284;
    }
    bool _2399 = _2288.y == 0u;
    float _2454;
    float _2456;
    float _2458;
    if (_2399)
    {
        _2454 = _2392;
        _2456 = _2394;
        _2458 = _2396;
    }
    else
    {
        uint _2616 = _2214 + 7u;
        float _2632 = (dot(vec3(cbLight._m0[_2214 + 3u].xyz), vec3(_726, _727, _728)) * 0.5) + 0.5;
        float _2633 = _2632 * _2632;
        float _4564 = isnan(0.0) ? _2633 : (isnan(_2633) ? 0.0 : max(_2633, 0.0));
        float _2634 = isnan(1.0) ? _4564 : (isnan(_4564) ? 1.0 : min(_4564, 1.0));
        float _2635 = isnan(1.0) ? _2230 : (isnan(_2230) ? 1.0 : min(_2230, 1.0));
        _2454 = (((cbLight._m0[_2616].x * 0.3183098733425140380859375) * _2634) * _2635) + _2392;
        _2456 = (((cbLight._m0[_2616].y * 0.3183098733425140380859375) * _2634) * _2635) + _2394;
        _2458 = (((cbLight._m0[_2616].z * 0.3183098733425140380859375) * _2634) * _2635) + _2396;
    }
    uint _2461 = _2214 + 8u;
    float _2474 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2214].w)) * _729) * 0.949999988079071044921875);
    float _2475 = _2474 * _2474;
    float _2476 = cbLight._m0[_2214].x + _806;
    float _2477 = cbLight._m0[_2214].y + _807;
    float _2478 = cbLight._m0[_2214].z + _808;
    float _2482 = inversesqrt(dot(vec3(_2476, _2477, _2478), vec3(_2476, _2477, _2478)));
    float _2483 = _2482 * _2476;
    float _2484 = _2482 * _2477;
    float _2485 = _2482 * _2478;
    float _2486 = dot(vec3(_726, _727, _728), vec3(cbLight._m0[_2214].xyz));
    float _4580 = isnan(0.0) ? _2486 : (isnan(_2486) ? 0.0 : max(_2486, 0.0));
    float _2489 = isnan(1.0) ? _4580 : (isnan(_4580) ? 1.0 : min(_4580, 1.0));
    float _4591 = isnan(0.0) ? _890 : (isnan(_890) ? 0.0 : max(_890, 0.0));
    float _2490 = isnan(1.0) ? _4591 : (isnan(_4591) ? 1.0 : min(_4591, 1.0));
    float _2491 = dot(vec3(_726, _727, _728), vec3(_2483, _2484, _2485));
    float _4602 = isnan(0.0) ? _2491 : (isnan(_2491) ? 0.0 : max(_2491, 0.0));
    float _2494 = isnan(1.0) ? _4602 : (isnan(_4602) ? 1.0 : min(_4602, 1.0));
    float _2495 = dot(vec3(cbLight._m0[_2214].xyz), vec3(_2483, _2484, _2485));
    float _4613 = isnan(0.0) ? _2495 : (isnan(_2495) ? 0.0 : max(_2495, 0.0));
    float _2499 = _2475 * _2475;
    float _2503 = ((_2494 * _2494) * (_2499 + (-1.0))) + 1.0;
    float _2514 = (exp2(log2(1.0 - (isnan(1.0) ? _4613 : (isnan(_4613) ? 1.0 : min(_4613, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2515 = 1.0 - _2475;
    float _2526 = (0.5 / (((_2490 * ((_2489 * _2515) + _2475)) + 9.9999999392252902907785028219223e-09) + (((_2490 * _2515) + _2475) * _2489))) * _2489;
    float _4624 = isnan(0.0) ? _2526 : (isnan(_2526) ? 0.0 : max(_2526, 0.0));
    float _2528 = (isnan(1.0) ? _4624 : (isnan(_4624) ? 1.0 : min(_4624, 1.0))) * (_2499 / ((_2503 * _2503) * 3.141590118408203125));
    uint _2542 = _2214 + 9u;
    float _2553 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2254].w)) * _729) * 0.949999988079071044921875);
    float _2554 = _2553 * _2553;
    float _2555 = cbLight._m0[_2254].x + _806;
    float _2556 = cbLight._m0[_2254].y + _807;
    float _2557 = cbLight._m0[_2254].z + _808;
    float _2561 = inversesqrt(dot(vec3(_2555, _2556, _2557), vec3(_2555, _2556, _2557)));
    float _2562 = _2561 * _2555;
    float _2563 = _2561 * _2556;
    float _2564 = _2561 * _2557;
    float _2565 = dot(vec3(_726, _727, _728), vec3(cbLight._m0[_2254].xyz));
    float _4635 = isnan(0.0) ? _2565 : (isnan(_2565) ? 0.0 : max(_2565, 0.0));
    float _2568 = isnan(1.0) ? _4635 : (isnan(_4635) ? 1.0 : min(_4635, 1.0));
    float _2569 = dot(vec3(_726, _727, _728), vec3(_2562, _2563, _2564));
    float _4646 = isnan(0.0) ? _2569 : (isnan(_2569) ? 0.0 : max(_2569, 0.0));
    float _2572 = isnan(1.0) ? _4646 : (isnan(_4646) ? 1.0 : min(_4646, 1.0));
    float _2573 = dot(vec3(cbLight._m0[_2254].xyz), vec3(_2562, _2563, _2564));
    float _4657 = isnan(0.0) ? _2573 : (isnan(_2573) ? 0.0 : max(_2573, 0.0));
    float _2577 = _2554 * _2554;
    float _2581 = ((_2572 * _2572) * (_2577 + (-1.0))) + 1.0;
    float _2590 = (exp2(log2(1.0 - (isnan(1.0) ? _4657 : (isnan(_4657) ? 1.0 : min(_4657, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2591 = 1.0 - _2554;
    float _2601 = (0.5 / (((_2490 * ((_2568 * _2591) + _2554)) + 9.9999999392252902907785028219223e-09) + (((_2490 * _2591) + _2554) * _2568))) * _2568;
    float _4668 = isnan(0.0) ? _2601 : (isnan(_2601) ? 0.0 : max(_2601, 0.0));
    float _2603 = (isnan(1.0) ? _4668 : (isnan(_4668) ? 1.0 : min(_4668, 1.0))) * (_2577 / ((_2581 * _2581) * 3.141590118408203125));
    float _2613 = (((_2590 * cbLight._m0[_2542].x) * _2603) * _2237) + ((((cbLight._m0[_2461].x * _2203) * _2514) * _2528) * _2250);
    float _2614 = (((_2590 * cbLight._m0[_2542].y) * _2603) * _2237) + ((((cbLight._m0[_2461].y * _2205) * _2514) * _2528) * _2250);
    float _2615 = (((_2590 * cbLight._m0[_2542].z) * _2603) * _2237) + ((((cbLight._m0[_2461].z * _2207) * _2514) * _2528) * _2250);
    float _2671;
    float _2673;
    float _2675;
    if (_2290)
    {
        _2671 = _2613;
        _2673 = _2614;
        _2675 = _2615;
    }
    else
    {
        uint _2677 = _2214 + 2u;
        uint _2681 = _2214 + 10u;
        float _2695 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2677].w)) * _729) * 0.949999988079071044921875);
        float _2696 = _2695 * _2695;
        float _2697 = cbLight._m0[_2677].x + _806;
        float _2698 = cbLight._m0[_2677].y + _807;
        float _2699 = cbLight._m0[_2677].z + _808;
        float _2703 = inversesqrt(dot(vec3(_2697, _2698, _2699), vec3(_2697, _2698, _2699)));
        float _2704 = _2703 * _2697;
        float _2705 = _2703 * _2698;
        float _2706 = _2703 * _2699;
        float _2707 = dot(vec3(_726, _727, _728), vec3(cbLight._m0[_2677].xyz));
        float _4679 = isnan(0.0) ? _2707 : (isnan(_2707) ? 0.0 : max(_2707, 0.0));
        float _2710 = isnan(1.0) ? _4679 : (isnan(_4679) ? 1.0 : min(_4679, 1.0));
        float _2711 = dot(vec3(_726, _727, _728), vec3(_2704, _2705, _2706));
        float _4690 = isnan(0.0) ? _2711 : (isnan(_2711) ? 0.0 : max(_2711, 0.0));
        float _2714 = isnan(1.0) ? _4690 : (isnan(_4690) ? 1.0 : min(_4690, 1.0));
        float _2715 = dot(vec3(cbLight._m0[_2677].xyz), vec3(_2704, _2705, _2706));
        float _4701 = isnan(0.0) ? _2715 : (isnan(_2715) ? 0.0 : max(_2715, 0.0));
        float _2719 = _2696 * _2696;
        float _2723 = ((_2714 * _2714) * (_2719 + (-1.0))) + 1.0;
        float _2732 = (exp2(log2(1.0 - (isnan(1.0) ? _4701 : (isnan(_4701) ? 1.0 : min(_4701, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2733 = 1.0 - _2696;
        float _2743 = (0.5 / (((_2490 * ((_2710 * _2733) + _2696)) + 9.9999999392252902907785028219223e-09) + (((_2490 * _2733) + _2696) * _2710))) * _2710;
        float _4712 = isnan(0.0) ? _2743 : (isnan(_2743) ? 0.0 : max(_2743, 0.0));
        float _2745 = (isnan(1.0) ? _4712 : (isnan(_4712) ? 1.0 : min(_4712, 1.0))) * (_2719 / ((_2723 * _2723) * 3.141590118408203125));
        float _2746 = isnan(1.0) ? _2229 : (isnan(_2229) ? 1.0 : min(_2229, 1.0));
        _2671 = (((_2732 * cbLight._m0[_2681].x) * _2745) * _2746) + _2613;
        _2673 = (((_2732 * cbLight._m0[_2681].y) * _2745) * _2746) + _2614;
        _2675 = (((_2732 * cbLight._m0[_2681].z) * _2745) * _2746) + _2615;
    }
    float _2777;
    float _2779;
    float _2781;
    if (_2399)
    {
        _2777 = _2671;
        _2779 = _2673;
        _2781 = _2675;
    }
    else
    {
        uint _2788 = _2214 + 3u;
        uint _2792 = _2214 + 11u;
        float _2806 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2788].w)) * _729) * 0.949999988079071044921875);
        float _2807 = _2806 * _2806;
        float _2808 = cbLight._m0[_2788].x + _806;
        float _2809 = cbLight._m0[_2788].y + _807;
        float _2810 = cbLight._m0[_2788].z + _808;
        float _2814 = inversesqrt(dot(vec3(_2808, _2809, _2810), vec3(_2808, _2809, _2810)));
        float _2815 = _2814 * _2808;
        float _2816 = _2814 * _2809;
        float _2817 = _2814 * _2810;
        float _2818 = dot(vec3(_726, _727, _728), vec3(cbLight._m0[_2788].xyz));
        float _4728 = isnan(0.0) ? _2818 : (isnan(_2818) ? 0.0 : max(_2818, 0.0));
        float _2821 = isnan(1.0) ? _4728 : (isnan(_4728) ? 1.0 : min(_4728, 1.0));
        float _2822 = dot(vec3(_726, _727, _728), vec3(_2815, _2816, _2817));
        float _4739 = isnan(0.0) ? _2822 : (isnan(_2822) ? 0.0 : max(_2822, 0.0));
        float _2825 = isnan(1.0) ? _4739 : (isnan(_4739) ? 1.0 : min(_4739, 1.0));
        float _2826 = dot(vec3(cbLight._m0[_2788].xyz), vec3(_2815, _2816, _2817));
        float _4750 = isnan(0.0) ? _2826 : (isnan(_2826) ? 0.0 : max(_2826, 0.0));
        float _2830 = _2807 * _2807;
        float _2834 = ((_2825 * _2825) * (_2830 + (-1.0))) + 1.0;
        float _2843 = (exp2(log2(1.0 - (isnan(1.0) ? _4750 : (isnan(_4750) ? 1.0 : min(_4750, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2844 = 1.0 - _2807;
        float _2854 = (0.5 / (((_2490 * ((_2821 * _2844) + _2807)) + 9.9999999392252902907785028219223e-09) + (((_2490 * _2844) + _2807) * _2821))) * _2821;
        float _4761 = isnan(0.0) ? _2854 : (isnan(_2854) ? 0.0 : max(_2854, 0.0));
        float _2856 = (isnan(1.0) ? _4761 : (isnan(_4761) ? 1.0 : min(_4761, 1.0))) * (_2830 / ((_2834 * _2834) * 3.141590118408203125));
        float _2857 = isnan(1.0) ? _2230 : (isnan(_2230) ? 1.0 : min(_2230, 1.0));
        _2777 = (((_2843 * cbLight._m0[_2792].x) * _2856) * _2857) + _2671;
        _2779 = (((_2843 * cbLight._m0[_2792].y) * _2856) * _2857) + _2673;
        _2781 = (((_2843 * cbLight._m0[_2792].z) * _2856) * _2857) + _2675;
    }
    float _2923;
    float _2925;
    float _2927;
    float _2929;
    float _2931;
    float _2933;
    if (_2212.y == 0u)
    {
        uvec4 _2878 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2879 = _2878.x;
        uint _2890 = uint((float(_2878.y) * floor(float(uint(cbSceneParam._m0[85u].y * _827) / _2879))) + floor(float(uint(cbSceneParam._m0[85u].x * _826) / _2879)));
        float _2900 = (log2(_1990 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2901 = isnan(0.0) ? _2900 : (isnan(_2900) ? 0.0 : max(_2900, 0.0));
        uint _2904 = uint(isnan(14.0) ? _2901 : (isnan(_2901) ? 14.0 : min(_2901, 14.0)));
        uvec4 _2909 = texelFetch(g_lightClusterGridBuffer, int(((_2904 << 2u) + (_2890 << 6u)) >> 2u));
        uint _2910 = _2909.x;
        uint _2911 = _2878.z;
        float _2990;
        float _2992;
        float _2994;
        float _2996;
        float _2998;
        float _3000;
        if (((((1u << ((_2911 >> 4u) & 15u)) + 4294967295u) & _2910) == 0u) || ((_2911 & 240u) == 0u))
        {
            _2990 = 0.0;
            _2992 = 0.0;
            _2994 = 0.0;
            _2996 = 0.0;
            _2998 = 0.0;
            _3000 = 0.0;
        }
        else
        {
            float _2991;
            float _2993;
            float _2995;
            float _2997;
            float _2999;
            float _3001;
            float _3143 = 0.0;
            float _3144 = 0.0;
            float _3145 = 0.0;
            float _3146 = 0.0;
            float _3147 = 0.0;
            float _3148 = 0.0;
            uint _3149 = 0u;
            uint _3158;
            bool _3159;
            for (;;)
            {
                _3158 = texelFetch(g_lightClassification, int((((_2904 << 5u) + (_2890 << 9u)) + (_3149 << 2u)) >> 2u)).x;
                _3159 = _3158 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3159)
                {
                    frontier_phi_71_pred = _3148;
                    frontier_phi_71_pred_1 = _3147;
                    frontier_phi_71_pred_2 = _3146;
                    frontier_phi_71_pred_3 = _3145;
                    frontier_phi_71_pred_4 = _3144;
                    frontier_phi_71_pred_5 = _3143;
                }
                else
                {
                    float _3288;
                    float _3289;
                    float _3290;
                    float _3291;
                    float _3292;
                    float _3293;
                    uint _3294;
                    _3288 = _3143;
                    _3289 = _3144;
                    _3290 = _3145;
                    _3291 = _3146;
                    _3292 = _3147;
                    _3293 = _3148;
                    _3294 = _3158;
                    float _3215;
                    float _3216;
                    float _3217;
                    float _3218;
                    float _3219;
                    float _3220;
                    for (;;)
                    {
                        uint _3298 = uint(findLSB(_3294)) + (_3149 << 5u);
                        uint _3295 = (_3294 + 4294967295u) & _3294;
                        uint _3300 = _3298 * 48u;
                        vec4 _3314 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3300)).x, texelFetch(g_PointLightRenderingBuffer, int(_3300 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3300 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3300 + 3u)).x));
                        uint _3320 = (_3298 * 48u) + 4u;
                        vec4 _3333 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3320)).x, texelFetch(g_PointLightRenderingBuffer, int(_3320 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3320 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3320 + 3u)).x));
                        uint _3339 = (_3298 * 48u) + 8u;
                        vec3 _3350 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3339)).x, texelFetch(g_PointLightRenderingBuffer, int(_3339 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3339 + 2u)).x));
                        float _3354 = _3314.x - _1988;
                        float _3355 = _3314.y - _1989;
                        float _3356 = _3314.z - _1990;
                        float _3357 = dot(vec3(_3354, _3355, _3356), vec3(_3354, _3355, _3356));
                        float _3360 = inversesqrt(_3357);
                        float _3361 = _3360 * _3354;
                        float _3362 = _3360 * _3355;
                        float _3363 = _3360 * _3356;
                        float _3364 = dot(vec3(_845, _848, _851), vec3(_3361, _3362, _3363));
                        float _3369 = 1.0 - (_3357 * _3314.w);
                        float _4787 = isnan(0.0) ? _3369 : (isnan(_3369) ? 0.0 : max(_3369, 0.0));
                        float _3370 = isnan(1.0) ? _4787 : (isnan(_4787) ? 1.0 : min(_4787, 1.0));
                        float _3371 = sqrt(_3357) * _3333.w;
                        float _3374 = 1.39999997615814208984375 / (_3371 + 1.39999997615814208984375);
                        float _3375 = _3374 * _3374;
                        float _3378 = ((1.0 - _3375) * _3364) + _3375;
                        float _3381 = _3371 * _3371;
                        float _3385 = ((isnan(0.0) ? _3378 : (isnan(_3378) ? 0.0 : max(_3378, 0.0))) * _3370) / ((_3381 * 0.699999988079071044921875) + 1.0);
                        float _3389 = (-0.0) - _1988;
                        float _3390 = (-0.0) - _1989;
                        float _3391 = (-0.0) - _1990;
                        float _3395 = inversesqrt(dot(vec3(_3389, _3390, _3391), vec3(_3389, _3390, _3391)));
                        float _3396 = _3395 * _3389;
                        float _3397 = _3395 * _3390;
                        float _3398 = _3395 * _3391;
                        float _3405 = exp2(log2(1.0 / ((_3381 * 3.5) + 5.0)) * 0.25);
                        float _3406 = 1.0 - _905;
                        float _3413 = sqrt(1.0 - ((1.0 - (_3406 * _3406)) * (1.0 - (_3405 * _3405))));
                        float _3414 = _3413 * _3413;
                        float _3415 = _3414 * _3414;
                        float _3416 = _3396 + _3361;
                        float _3417 = _3397 + _3362;
                        float _3418 = _3398 + _3363;
                        float _3422 = inversesqrt(dot(vec3(_3416, _3417, _3418), vec3(_3416, _3417, _3418)));
                        float _3426 = dot(vec3(_845, _848, _851), vec3(_3396, _3397, _3398));
                        float _4803 = isnan(0.0) ? _3426 : (isnan(_3426) ? 0.0 : max(_3426, 0.0));
                        float _3429 = isnan(1.0) ? _4803 : (isnan(_4803) ? 1.0 : min(_4803, 1.0));
                        float _3430 = dot(vec3(_845, _848, _851), vec3(_3422 * _3416, _3422 * _3417, _3422 * _3418));
                        float _4814 = isnan(0.0) ? _3430 : (isnan(_3430) ? 0.0 : max(_3430, 0.0));
                        float _3433 = isnan(1.0) ? _4814 : (isnan(_4814) ? 1.0 : min(_4814, 1.0));
                        float _3437 = ((_3433 * _3433) * (_3415 + (-1.0))) + 1.0;
                        float _3438 = _3374 * _3414;
                        float _3439 = _3438 * _3438;
                        float _3442 = ((1.0 - _3439) * _3364) + _3439;
                        float _4825 = isnan(0.0) ? _3442 : (isnan(_3442) ? 0.0 : max(_3442, 0.0));
                        float _3443 = isnan(1.0) ? _4825 : (isnan(_4825) ? 1.0 : min(_4825, 1.0));
                        float _3444 = 1.0 - _3414;
                        float _3454 = (0.5 / (((_3443 * ((_3429 * _3444) + _3414)) + 9.9999999392252902907785028219223e-09) + (((_3443 * _3444) + _3414) * _3429))) * _3443;
                        float _4836 = isnan(0.0) ? _3454 : (isnan(_3454) ? 0.0 : max(_3454, 0.0));
                        float _3465 = (((_3415 * 3.1415927410125732421875) * (isnan(1.0) ? _4836 : (isnan(_4836) ? 1.0 : min(_4836, 1.0)))) / ((_3437 * _3437) * ((_3381 * 2.1991131305694580078125) + 3.141590118408203125))) * _3370;
                        _3218 = (_3385 * _3333.x) + _3291;
                        _3219 = (_3385 * _3333.y) + _3292;
                        _3220 = (_3385 * _3333.z) + _3293;
                        _3215 = (_3465 * _3350.x) + _3288;
                        _3216 = (_3465 * _3350.y) + _3289;
                        _3217 = (_3465 * _3350.z) + _3290;
                        if (_3295 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3288 = _3215;
                            _3289 = _3216;
                            _3290 = _3217;
                            _3291 = _3218;
                            _3292 = _3219;
                            _3293 = _3220;
                            _3294 = _3295;
                        }
                    }
                    frontier_phi_71_pred = _3220;
                    frontier_phi_71_pred_1 = _3219;
                    frontier_phi_71_pred_2 = _3218;
                    frontier_phi_71_pred_3 = _3217;
                    frontier_phi_71_pred_4 = _3216;
                    frontier_phi_71_pred_5 = _3215;
                }
                _3001 = frontier_phi_71_pred;
                _2999 = frontier_phi_71_pred_1;
                _2997 = frontier_phi_71_pred_2;
                _2995 = frontier_phi_71_pred_3;
                _2993 = frontier_phi_71_pred_4;
                _2991 = frontier_phi_71_pred_5;
                uint _3150 = _3149 + 1u;
                if (_3150 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3143 = _2991;
                    _3144 = _2993;
                    _3145 = _2995;
                    _3146 = _2997;
                    _3147 = _2999;
                    _3148 = _3001;
                    _3149 = _3150;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2990 = _2991;
            _2992 = _2993;
            _2994 = _2995;
            _2996 = _2997;
            _2998 = _2999;
            _3000 = _3001;
        }
        uvec4 _3004 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3005 = _3004.z;
        uint _3007 = (_3005 >> 8u) & 15u;
        float _3111;
        float _3113;
        float _3115;
        float _3117;
        float _3119;
        float _3121;
        if (((4294967295u << _3007) & _2910) == 0u)
        {
            _3111 = _2990;
            _3113 = _2992;
            _3115 = _2994;
            _3117 = _2996;
            _3119 = _2998;
            _3121 = _3000;
        }
        else
        {
            float _3136 = inversesqrt(dot(vec3(_1988, _1989, _1990), vec3(_1988, _1989, _1990)));
            float _3137 = _3136 * _1988;
            float _3138 = _3136 * _1989;
            float _3139 = _3136 * _1990;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3007 < ((_3005 >> 12u) & 15u))
            {
                float _3112;
                float _3114;
                float _3116;
                float _3118;
                float _3120;
                float _3122;
                float _3271 = _2990;
                float _3272 = _2992;
                float _3273 = _2994;
                float _3274 = _2996;
                float _3275 = _2998;
                float _3276 = _3000;
                uint _3277 = _3007;
                uint _3286;
                bool _3287;
                for (;;)
                {
                    _3286 = texelFetch(g_lightClassification, int((((_2904 << 5u) + (_2890 << 9u)) + (_3277 << 2u)) >> 2u)).x;
                    _3287 = _3286 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3287)
                    {
                        frontier_phi_82_pred = _3276;
                        frontier_phi_82_pred_1 = _3275;
                        frontier_phi_82_pred_2 = _3274;
                        frontier_phi_82_pred_3 = _3273;
                        frontier_phi_82_pred_4 = _3272;
                        frontier_phi_82_pred_5 = _3271;
                    }
                    else
                    {
                        float _3479;
                        float _3480;
                        float _3481;
                        float _3482;
                        float _3483;
                        float _3484;
                        float _3772;
                        float _3773;
                        float _3774;
                        float _3775;
                        float _3776;
                        float _3777;
                        float _3492 = _3271;
                        float _3493 = _3272;
                        float _3494 = _3273;
                        float _3495 = _3274;
                        float _3496 = _3275;
                        float _3497 = _3276;
                        uint _3498 = _3286;
                        uint _3499;
                        vec4 _3524;
                        float _3525;
                        vec4 _3540;
                        vec3 _3552;
                        vec4 _3567;
                        vec4 _3582;
                        float _3628;
                        bool _3629;
                        for (;;)
                        {
                            uint _3509 = ((_3277 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3498));
                            _3499 = (_3498 + 4294967295u) & _3498;
                            uint _3511 = _3509 * 40u;
                            _3524 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3511)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3511 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3511 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3511 + 3u)).x));
                            _3525 = _3524.w;
                            uint _3527 = (_3509 * 40u) + 4u;
                            _3540 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3527)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3527 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3527 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3527 + 3u)).x));
                            uint _3542 = (_3509 * 40u) + 8u;
                            _3552 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3542)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3542 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3542 + 2u)).x));
                            uint _3554 = (_3509 * 40u) + 16u;
                            _3567 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3554)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 3u)).x));
                            uint _3569 = (_3509 * 40u) + 20u;
                            _3582 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3569)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3569 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3569 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3569 + 3u)).x));
                            uint _3584 = (_3509 * 40u) + 24u;
                            vec4 _3597 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3584)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3584 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3584 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3584 + 3u)).x));
                            uint _3603 = (_3509 * 40u) + 28u;
                            vec4 _3616 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3603)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3603 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3603 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3603 + 3u)).x));
                            _3628 = fma(_1990, _3616.z, fma(_1989, _3616.y, _3616.x * _1988)) + _3616.w;
                            _3629 = !((fma(_1990, _3597.z, fma(_1989, _3597.y, _3597.x * _1988)) + _3597.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3629)
                            {
                                float _3656 = _3524.x - _1988;
                                float _3657 = _3524.y - _1989;
                                float _3658 = _3524.z - _1990;
                                float _3659 = dot(vec3(_3656, _3657, _3658), vec3(_3656, _3657, _3658));
                                float _3662 = inversesqrt(_3659);
                                float _3663 = _3662 * _3656;
                                float _3664 = _3662 * _3657;
                                float _3665 = _3662 * _3658;
                                float _3669 = 1.0 - (_3659 / (_3525 * _3525));
                                float _4847 = isnan(0.0) ? _3669 : (isnan(_3669) ? 0.0 : max(_3669, 0.0));
                                float _3670 = isnan(1.0) ? _4847 : (isnan(_4847) ? 1.0 : min(_4847, 1.0));
                                float _3674 = sqrt(_3659) * _3540.w;
                                float _3676 = 1.39999997615814208984375 / (_3674 + 1.39999997615814208984375);
                                float _3677 = _3676 * _3676;
                                float _3680 = ((1.0 - _3677) * dot(vec3(_3663, _3664, _3665), vec3(_845, _848, _851))) + _3677;
                                float _3683 = _3674 * _3674;
                                float _3687 = (fma(_1990, _3567.z, fma(_1989, _3567.y, _3567.x * _1988)) + _3567.w) / _3628;
                                float _3688 = (fma(_1990, _3582.z, fma(_1989, _3582.y, _3582.x * _1988)) + _3582.w) / _3628;
                                float _3692 = 1.0 - dot(vec2(_3687, _3688), vec2(_3687, _3688));
                                float _4863 = isnan(0.0) ? _3692 : (isnan(_3692) ? 0.0 : max(_3692, 0.0));
                                float _3693 = isnan(1.0) ? _4863 : (isnan(_4863) ? 1.0 : min(_4863, 1.0));
                                float _3694 = _3693 * (((isnan(0.0) ? _3680 : (isnan(_3680) ? 0.0 : max(_3680, 0.0))) * _3670) / ((_3683 * 0.699999988079071044921875) + 1.0));
                                float _3706 = exp2(log2(1.0 / ((_3683 * 3.5) + 5.0)) * 0.25);
                                float _3707 = 1.0 - _905;
                                float _3714 = sqrt(1.0 - ((1.0 - (_3707 * _3707)) * (1.0 - (_3706 * _3706))));
                                float _3715 = _3714 * _3714;
                                float _3716 = _3715 * _3715;
                                float _3717 = _3663 - _3137;
                                float _3718 = _3664 - _3138;
                                float _3719 = _3665 - _3139;
                                float _3723 = inversesqrt(dot(vec3(_3717, _3718, _3719), vec3(_3717, _3718, _3719)));
                                float _3727 = dot(vec3(_845, _848, _851), vec3((-0.0) - _3137, (-0.0) - _3138, (-0.0) - _3139));
                                float _4874 = isnan(0.0) ? _3727 : (isnan(_3727) ? 0.0 : max(_3727, 0.0));
                                float _3730 = isnan(1.0) ? _4874 : (isnan(_4874) ? 1.0 : min(_4874, 1.0));
                                float _3731 = dot(vec3(_845, _848, _851), vec3(_3723 * _3717, _3723 * _3718, _3723 * _3719));
                                float _4885 = isnan(0.0) ? _3731 : (isnan(_3731) ? 0.0 : max(_3731, 0.0));
                                float _3734 = isnan(1.0) ? _4885 : (isnan(_4885) ? 1.0 : min(_4885, 1.0));
                                float _3738 = ((_3734 * _3734) * (_3716 + (-1.0))) + 1.0;
                                float _3739 = _3676 * _3715;
                                float _3740 = _3739 * _3739;
                                float _3746 = ((1.0 - _3740) * dot(vec3(_845, _848, _851), vec3(_3663, _3664, _3665))) + _3740;
                                float _4896 = isnan(0.0) ? _3746 : (isnan(_3746) ? 0.0 : max(_3746, 0.0));
                                float _3747 = isnan(1.0) ? _4896 : (isnan(_4896) ? 1.0 : min(_4896, 1.0));
                                float _3748 = 1.0 - _3715;
                                float _3758 = (0.5 / (((_3747 * ((_3730 * _3748) + _3715)) + 9.9999999392252902907785028219223e-09) + (((_3747 * _3748) + _3715) * _3730))) * _3747;
                                float _4907 = isnan(0.0) ? _3758 : (isnan(_3758) ? 0.0 : max(_3758, 0.0));
                                float _3768 = (_3693 * _3670) * (((_3716 * 3.1415927410125732421875) * (isnan(1.0) ? _4907 : (isnan(_4907) ? 1.0 : min(_4907, 1.0)))) / ((_3738 * _3738) * ((_3683 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3694 * _3540.z;
                                frontier_phi_88_pred_1 = _3694 * _3540.y;
                                frontier_phi_88_pred_2 = _3694 * _3540.x;
                                frontier_phi_88_pred_3 = _3768 * _3552.z;
                                frontier_phi_88_pred_4 = _3768 * _3552.y;
                                frontier_phi_88_pred_5 = _3768 * _3552.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3777 = frontier_phi_88_pred;
                            _3776 = frontier_phi_88_pred_1;
                            _3775 = frontier_phi_88_pred_2;
                            _3774 = frontier_phi_88_pred_3;
                            _3773 = frontier_phi_88_pred_4;
                            _3772 = frontier_phi_88_pred_5;
                            _3482 = _3775 + _3495;
                            _3483 = _3776 + _3496;
                            _3484 = _3777 + _3497;
                            _3479 = _3772 + _3492;
                            _3480 = _3773 + _3493;
                            _3481 = _3774 + _3494;
                            if (_3499 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3492 = _3479;
                                _3493 = _3480;
                                _3494 = _3481;
                                _3495 = _3482;
                                _3496 = _3483;
                                _3497 = _3484;
                                _3498 = _3499;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3484;
                        frontier_phi_82_pred_1 = _3483;
                        frontier_phi_82_pred_2 = _3482;
                        frontier_phi_82_pred_3 = _3481;
                        frontier_phi_82_pred_4 = _3480;
                        frontier_phi_82_pred_5 = _3479;
                    }
                    _3122 = frontier_phi_82_pred;
                    _3120 = frontier_phi_82_pred_1;
                    _3118 = frontier_phi_82_pred_2;
                    _3116 = frontier_phi_82_pred_3;
                    _3114 = frontier_phi_82_pred_4;
                    _3112 = frontier_phi_82_pred_5;
                    uint _3278 = _3277 + 1u;
                    if (_3278 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3271 = _3112;
                        _3272 = _3114;
                        _3273 = _3116;
                        _3274 = _3118;
                        _3275 = _3120;
                        _3276 = _3122;
                        _3277 = _3278;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3118;
                frontier_phi_63_64_ladder_1 = _3122;
                frontier_phi_63_64_ladder_2 = _3120;
                frontier_phi_63_64_ladder_3 = _3116;
                frontier_phi_63_64_ladder_4 = _3114;
                frontier_phi_63_64_ladder_5 = _3112;
            }
            else
            {
                frontier_phi_63_64_ladder = _2996;
                frontier_phi_63_64_ladder_1 = _3000;
                frontier_phi_63_64_ladder_2 = _2998;
                frontier_phi_63_64_ladder_3 = _2994;
                frontier_phi_63_64_ladder_4 = _2992;
                frontier_phi_63_64_ladder_5 = _2990;
            }
            _3111 = frontier_phi_63_64_ladder_5;
            _3113 = frontier_phi_63_64_ladder_4;
            _3115 = frontier_phi_63_64_ladder_3;
            _3117 = frontier_phi_63_64_ladder;
            _3119 = frontier_phi_63_64_ladder_2;
            _3121 = frontier_phi_63_64_ladder_1;
        }
        float _3126 = isnan(1.0) ? _889 : (isnan(_889) ? 1.0 : min(_889, 1.0));
        _2923 = (_3126 * _3117) + _2454;
        _2925 = (_3126 * _3119) + _2456;
        _2927 = (_3126 * _3121) + _2458;
        _2929 = ((_3111 * 0.039999999105930328369140625) * _3126) + _2777;
        _2931 = ((_3113 * 0.039999999105930328369140625) * _3126) + _2779;
        _2933 = ((_3115 * 0.039999999105930328369140625) * _3126) + _2781;
    }
    else
    {
        _2923 = _2454;
        _2925 = _2456;
        _2927 = _2458;
        _2929 = _2777;
        _2931 = _2779;
        _2933 = _2781;
    }
    float _4923 = isnan(0.0) ? _874 : (isnan(_874) ? 0.0 : max(_874, 0.0));
    float _4934 = isnan(0.0) ? _875 : (isnan(_875) ? 0.0 : max(_875, 0.0));
    float _4945 = isnan(0.0) ? _876 : (isnan(_876) ? 0.0 : max(_876, 0.0));
    float _2950 = ((isnan(1.0) ? _4923 : (isnan(_4923) ? 1.0 : min(_4923, 1.0))) * (_2923 + ((isnan(0.0) ? _1645 : (isnan(_1645) ? 0.0 : max(_1645, 0.0))) * _889))) + ((_2929 + ((isnan(0.0) ? _1935 : (isnan(_1935) ? 0.0 : max(_1935, 0.0))) * _1724)) * cbPerFrame._m0[3u].x);
    float _2951 = ((isnan(1.0) ? _4934 : (isnan(_4934) ? 1.0 : min(_4934, 1.0))) * (_2925 + ((isnan(0.0) ? _1648 : (isnan(_1648) ? 0.0 : max(_1648, 0.0))) * _889))) + ((_2931 + ((isnan(0.0) ? _1938 : (isnan(_1938) ? 0.0 : max(_1938, 0.0))) * _1724)) * cbPerFrame._m0[3u].x);
    float _2952 = ((isnan(1.0) ? _4945 : (isnan(_4945) ? 1.0 : min(_4945, 1.0))) * (_2927 + ((isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0))) * _889))) + ((_2933 + ((isnan(0.0) ? _1941 : (isnan(_1941) ? 0.0 : max(_1941, 0.0))) * _1724)) * cbPerFrame._m0[3u].x);
    uint _2953 = _250 + 6u;
    float _2961 = _826 / cbSceneParam._m0[86u].x;
    float _2962 = _827 / cbSceneParam._m0[86u].y;
    vec4 _2976 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2961, _2962, (log2((isnan(cbSceneParam._m0[77u].w) ? _747 : (isnan(_747) ? cbSceneParam._m0[77u].w : min(_747, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2978 = _2976.x;
    float _2979 = _2976.y;
    float _2980 = _2976.z;
    float _2981 = _2976.w;
    float _3053;
    float _3055;
    float _3057;
    float _3059;
    if (_747 > cbSceneParam._m0[78u].w)
    {
        float _3015 = isnan(_747) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _747 : min(cbSceneParam._m0[80u].w, _747));
        float _3016 = _3015 / _747;
        float _3027 = _3016 * _799;
        float _3028 = _800 * _3016;
        float _3029 = (-0.0) - _3028;
        float _3031 = _3016 * _801;
        float _3033 = (cbSceneParam._m0[77u].w * _3029) / _3015;
        float _3034 = _3033 + cbSceneParam._m0[79u].w;
        float _3035 = cbSceneParam._m0[79u].w - _3028;
        float _3041 = sqrt(((_3027 * _3027) + (_3028 * _3028)) + (_3031 * _3031));
        float _3044 = (1.0 - (cbSceneParam._m0[77u].w / _3015)) * _3041;
        float _3049 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3051 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3228;
        if (abs((_3029 - _3033) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3228 = ((((_3034 > 0.0) ? exp2(_3049 * _3034) : (2.0 - exp2(_3051 * _3034))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3044;
        }
        else
        {
            float _3172 = 1.0 / cbSceneParam._m0[80u].x;
            float _3173 = isnan(_3035) ? _3034 : (isnan(_3034) ? _3035 : max(_3034, _3035));
            float _3174 = isnan(_3035) ? _3034 : (isnan(_3034) ? _3035 : min(_3034, _3035));
            float _3183 = isnan(0.0) ? _3173 : (isnan(_3173) ? 0.0 : min(_3173, 0.0));
            float _3184 = isnan(0.0) ? _3174 : (isnan(_3174) ? 0.0 : min(_3174, 0.0));
            _3228 = ((abs(_3041 / _3029) * cbSceneParam._m0[80u].y) * ((((_3183 - _3184) * 2.0) - ((exp2(_3049 * (isnan(0.0) ? _3173 : (isnan(_3173) ? 0.0 : max(_3173, 0.0)))) - exp2(_3049 * (isnan(0.0) ? _3174 : (isnan(_3174) ? 0.0 : max(_3174, 0.0))))) * _3172)) - ((exp2(_3051 * _3183) - exp2(_3051 * _3184)) * _3172))) + (_3044 * cbSceneParam._m0[80u].z);
        }
        vec4 _3230 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2961, _2962, 1.0), 0.0);
        float _3239 = exp2((_3228 * (-1.44269502162933349609375)) * (1.0 - _3230.w));
        float _3240 = log2(_3239);
        float _3256 = log2(_2981);
        _3053 = (exp2(_3256 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3240 * cbSceneParam._m0[78u].x)) * _3230.x) / cbSceneParam._m0[78u].x)) + _2978;
        _3055 = (exp2(_3256 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3240 * cbSceneParam._m0[78u].y)) * _3230.y) / cbSceneParam._m0[78u].y)) + _2979;
        _3057 = (exp2(_3256 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3240 * cbSceneParam._m0[78u].z)) * _3230.z) / cbSceneParam._m0[78u].z)) + _2980;
        _3059 = _3239 * _2981;
    }
    else
    {
        _3053 = _2978;
        _3055 = _2979;
        _3057 = _2980;
        _3059 = _2981;
    }
    bool _3266;
    vec4 _3069;
    vec4 _3091;
    float _3093;
    float _3097;
    float _3098;
    float _3099;
    float _3100;
    bool _3110;
    for (;;)
    {
        _3069 = cbMatDynParam._m0[0u];
        float _3071 = roundEven(_3069.y);
        bool _3072 = _3071 == 3.0;
        float _3073 = log2(_3059);
        float _3080 = exp2(_3073 * cbSceneParam._m0[78u].x) * _2950;
        float _3081 = exp2(_3073 * cbSceneParam._m0[78u].y) * _2951;
        float _3082 = exp2(_3073 * cbSceneParam._m0[78u].z) * _2952;
        float _3089 = _815 + (-0.5);
        _3091 = cbMtdParam._m0[1u];
        _3093 = _3091.y * _3089;
        float _3096 = (_3071 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3097 = _3096 * (_3072 ? _3080 : (_3080 + (cbSceneParam._m0[72u].w * _3053)));
        _3098 = _3096 * (_3072 ? _3081 : (_3081 + (cbSceneParam._m0[72u].w * _3055)));
        _3099 = _3096 * (_3072 ? _3082 : (_3082 + (cbSceneParam._m0[72u].w * _3057)));
        _3100 = _3089 * 0.999000012874603271484375;
        _3110 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3110)
        {
            if ((cbInstanceData._m0[_250 + 7u].x + _3100) < 0.5)
            {
                _3266 = true;
                break;
            }
        }
        uint _3207 = _864 + uint(_3069.w);
        if ((cbInstanceData._m0[_3207].w < 1.0) && ((cbInstanceData._m0[_3207].w + _3100) < 0.5))
        {
            _3266 = true;
            break;
        }
        if ((_3093 + 1.0) < _3091.x)
        {
            _3266 = true;
            break;
        }
        _3266 = false;
        break;
    }
    float _3470;
    if (_3266)
    {
        discard_state = true;
        _3470 = 0.0;
    }
    else
    {
        _3470 = cbInstanceData._m0[_2953].w;
    }
    SV_Target.x = _3097;
    SV_Target.y = _3098;
    SV_Target.z = _3099;
    SV_Target.w = _3470;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2953].w;
    discard_exit();
}


