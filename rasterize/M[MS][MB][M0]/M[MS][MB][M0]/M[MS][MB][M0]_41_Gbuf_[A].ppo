#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _181 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _182 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _183 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _189 = inversesqrt(dot(vec3(_181, _182, _183), vec3(_181, _182, _183)));
    float _196 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _203 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _209 = uint(roundEven(NORMAL.w)) * 13u;
    uint _214 = _209 + 1u;
    uint _218 = _209 + 2u;
    float _227 = sqrt(((cbInstanceData._m0[_214].x * cbInstanceData._m0[_214].x) + (cbInstanceData._m0[_209].x * cbInstanceData._m0[_209].x)) + (cbInstanceData._m0[_218].x * cbInstanceData._m0[_218].x));
    float _228 = _227 * TEXCOORD.z;
    float _229 = _227 * TEXCOORD.w;
    vec4 _248 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _254 = _248.x * cbMtdParam._m0[9u].x;
    float _255 = _248.y * cbMtdParam._m0[9u].y;
    float _256 = _248.z * cbMtdParam._m0[9u].z;
    vec4 _275 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _228) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _229) + cbTextureTilingScale._m0[14u].w));
    vec4 _295 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _299 = _295.z;
    float _304 = (_295.x * 2.0) + (-1.0);
    float _306 = (_295.y * 2.0) + (-1.0);
    float _307 = dot(vec2(_304, _306), vec2(_304, _306));
    float _769 = isnan(0.0) ? _307 : (isnan(_307) ? 0.0 : max(_307, 0.0));
    float _313 = sqrt(1.0 - (isnan(1.0) ? _769 : (isnan(_769) ? 1.0 : min(_769, 1.0))));
    vec4 _330 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _228) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _229) + cbTextureTilingScale._m0[11u].w));
    float _332 = _330.x;
    float _333 = 1.0 - _332;
    float _342 = isnan(-1.0) ? cbMtdParam._m0[24u].y : (isnan(cbMtdParam._m0[24u].y) ? (-1.0) : max(cbMtdParam._m0[24u].y, -1.0));
    float _345 = ((isnan(0.0) ? _342 : (isnan(_342) ? 0.0 : min(_342, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _354 = (_345 - ((((((_332 - _333) * cbMtdParam._m0[24u].z) + _333) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _345))) * (cbMtdParam._m0[21u].w + 1.0);
    float _790 = isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0));
    float _355 = isnan(1.0) ? _790 : (isnan(_790) ? 1.0 : min(_790, 1.0));
    float _362 = (_355 * ((_275.x * cbMtdParam._m0[18u].x) - _254)) + _254;
    float _363 = (_355 * ((_275.y * cbMtdParam._m0[18u].y) - _255)) + _255;
    float _364 = (_355 * ((_275.z * cbMtdParam._m0[18u].z) - _256)) + _256;
    vec4 _377 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _228) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _229) + cbTextureTilingScale._m0[19u].w));
    float _379 = _377.x;
    float _380 = 1.0 - _379;
    float _409 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_379 - _380) * cbMtdParam._m0[24u].w) + _380) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _801 = isnan(0.0) ? _409 : (isnan(_409) ? 0.0 : max(_409, 0.0));
    float _410 = isnan(1.0) ? _801 : (isnan(_801) ? 1.0 : min(_801, 1.0));
    float _418 = ((((cbMtdParam._m0[10u].x - _362) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _410) + _362;
    float _419 = ((((cbMtdParam._m0[10u].y - _363) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _410) + _363;
    float _420 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _364)) * _410) + _364;
    vec4 _434 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _228) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _229) + cbTextureTilingScale._m0[15u].w));
    float _441 = (_434.x * 2.0) + (-1.0);
    float _442 = (_434.y * 2.0) + (-1.0);
    float _443 = dot(vec2(_441, _442), vec2(_441, _442));
    float _812 = isnan(0.0) ? _443 : (isnan(_443) ? 0.0 : max(_443, 0.0));
    float _451 = (_355 * (_434.z - _299)) + _299;
    float _454 = ((cbMtdParam._m0[23u].y - _451) * _410) + _451;
    vec4 _476 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _228) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _229) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _482 = (_476.x * 2.0) + (-1.0);
    float _483 = (_476.y * 2.0) + (-1.0);
    float _484 = dot(vec2(_482, _483), vec2(_482, _483));
    float _823 = isnan(0.0) ? _484 : (isnan(_484) ? 0.0 : max(_484, 0.0));
    float _501 = (((_441 - _304) + (cbMtdParam._m0[21u].x * _304)) * _355) + _304;
    float _502 = (((_442 - _306) + (cbMtdParam._m0[21u].x * _306)) * _355) + _306;
    float _503 = (_355 * (sqrt(1.0 - (isnan(1.0) ? _812 : (isnan(_812) ? 1.0 : min(_812, 1.0)))) - _313)) + _313;
    float _514 = (((_482 - _501) + (_501 * cbMtdParam._m0[22u].z)) * _410) + _501;
    float _515 = (((_483 - _502) + (_502 * cbMtdParam._m0[22u].z)) * _410) + _502;
    float _516 = ((sqrt(1.0 - (isnan(1.0) ? _823 : (isnan(_823) ? 1.0 : min(_823, 1.0)))) - _503) * _410) + _503;
    float _518 = cbMtdParam._m0[22u].x + _295.w;
    float _521 = fma(_516, _196 * NORMAL.x, fma(_515, _203 * TANGENT.x, (_189 * _181) * _514));
    float _524 = fma(_516, _196 * NORMAL.y, fma(_515, _203 * TANGENT.y, (_189 * _182) * _514));
    float _527 = fma(_516, _196 * NORMAL.z, fma(_515, _203 * TANGENT.z, (_189 * _183) * _514));
    float _531 = inversesqrt(dot(vec3(_521, _524, _527), vec3(_521, _524, _527)));
    float _834 = isnan(0.0) ? _454 : (isnan(_454) ? 0.0 : max(_454, 0.0));
    float _845 = isnan(0.0) ? _518 : (isnan(_518) ? 0.0 : max(_518, 0.0));
    float _533 = isnan(1.0) ? _845 : (isnan(_845) ? 1.0 : min(_845, 1.0));
    float _856 = isnan(0.0) ? _418 : (isnan(_418) ? 0.0 : max(_418, 0.0));
    float _534 = isnan(1.0) ? _856 : (isnan(_856) ? 1.0 : min(_856, 1.0));
    float _867 = isnan(0.0) ? _419 : (isnan(_419) ? 0.0 : max(_419, 0.0));
    float _535 = isnan(1.0) ? _867 : (isnan(_867) ? 1.0 : min(_867, 1.0));
    float _878 = isnan(0.0) ? _420 : (isnan(_420) ? 0.0 : max(_420, 0.0));
    float _536 = isnan(1.0) ? _878 : (isnan(_878) ? 1.0 : min(_878, 1.0));
    float _576 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _586 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _576);
    float _587 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _576);
    float _588 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _576);
    vec4 _593 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _595 = _593.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _656 = sqrt(((_586 * _586) + (_587 * _587)) + (_588 * _588));
        float _663 = (cbMatDynParam._m0[5u].x * _656) + cbMatDynParam._m0[5u].y;
        float _889 = isnan(0.0) ? _663 : (isnan(_663) ? 0.0 : max(_663, 0.0));
        float _664 = isnan(1.0) ? _889 : (isnan(_889) ? 1.0 : min(_889, 1.0));
        float _668 = (cbMatDynParam._m0[5u].z * _656) + cbMatDynParam._m0[5u].w;
        float _900 = isnan(0.0) ? _668 : (isnan(_668) ? 0.0 : max(_668, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _900 : (isnan(_900) ? 1.0 : min(_900, 1.0))) - _664)) + _664) < ((_595 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _696;
    vec4 _618;
    float _625;
    float _626;
    float _627;
    float _628;
    float _632;
    vec4 _636;
    float _638;
    float _639;
    bool _650;
    for (;;)
    {
        _618 = cbInstanceData._m0[(_209 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _622 = (cbMtdParam._m0[0u].x * _534) * _618.x;
        float _623 = (cbMtdParam._m0[0u].y * _535) * _618.y;
        float _624 = (cbMtdParam._m0[0u].z * _536) * _618.z;
        float _911 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
        _625 = isnan(1.0) ? _911 : (isnan(_911) ? 1.0 : min(_911, 1.0));
        float _922 = isnan(0.0) ? _623 : (isnan(_623) ? 0.0 : max(_623, 0.0));
        _626 = isnan(1.0) ? _922 : (isnan(_922) ? 1.0 : min(_922, 1.0));
        float _933 = isnan(0.0) ? _624 : (isnan(_624) ? 0.0 : max(_624, 0.0));
        _627 = isnan(1.0) ? _933 : (isnan(_933) ? 1.0 : min(_933, 1.0));
        _628 = _533 * TEXCOORD_5.w;
        _632 = cbInstanceData._m0[_209 + 6u].w;
        float _633 = _595 + (-0.5);
        _636 = cbMtdParam._m0[1u];
        _638 = _636.y * _633;
        _639 = _633 * 0.999000012874603271484375;
        _650 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_650)
        {
            if ((cbInstanceData._m0[_209 + 7u].x + _639) < 0.5)
            {
                _696 = true;
                break;
            }
        }
        if ((_618.w < 1.0) && ((_618.w + _639) < 0.5))
        {
            _696 = true;
            break;
        }
        if ((_638 + 1.0) < _636.x)
        {
            _696 = true;
            break;
        }
        _696 = false;
        break;
    }
    if (_696)
    {
        discard_state = true;
    }
    bool _722 = cbMtdParam._m0[1u].z != 0.0;
    float _723 = _722 ? _632 : 0.0;
    SV_Target.x = ((_521 * 0.5) * _531) + 0.500488758087158203125;
    SV_Target.y = ((_524 * 0.5) * _531) + 0.500488758087158203125;
    SV_Target.z = ((_527 * 0.5) * _531) + 0.500488758087158203125;
    SV_Target.w = _723;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _834 : (isnan(_834) ? 1.0 : min(_834, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _722 ? _632 : _628;
    SV_Target_2.x = _625;
    SV_Target_2.y = _626;
    SV_Target_2.z = _627;
    SV_Target_2.w = _722 ? _632 : (float(floatBitsToUint(cbInstanceData._m0[_209 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _723;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _723;
    discard_exit();
}


