#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1285;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _225 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _226 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _227 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _233 = inversesqrt(dot(vec3(_225, _226, _227), vec3(_225, _226, _227)));
    float _234 = _233 * _225;
    float _235 = _233 * _226;
    float _236 = _233 * _227;
    float _240 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _241 = _240 * NORMAL.x;
    float _242 = _240 * NORMAL.y;
    float _243 = _240 * NORMAL.z;
    float _247 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _248 = _247 * TANGENT.x;
    float _249 = _247 * TANGENT.y;
    float _250 = _247 * TANGENT.z;
    uint _253 = uint(roundEven(NORMAL.w)) * 13u;
    uint _258 = _253 + 1u;
    uint _262 = _253 + 2u;
    float _271 = sqrt(((cbInstanceData._m0[_258].x * cbInstanceData._m0[_258].x) + (cbInstanceData._m0[_253].x * cbInstanceData._m0[_253].x)) + (cbInstanceData._m0[_262].x * cbInstanceData._m0[_262].x));
    float _272 = _271 * TEXCOORD.z;
    float _273 = _271 * TEXCOORD.w;
    vec4 _293 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _299 = _293.x * cbMtdParam._m0[11u].x;
    float _300 = _293.y * cbMtdParam._m0[11u].y;
    float _301 = _293.z * cbMtdParam._m0[11u].z;
    vec4 _320 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _272) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _273) + cbTextureTilingScale._m0[5u].w));
    vec4 _358 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _360 = _358.x;
    float _370 = dot(vec4(_360, _358.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _387 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_360 - _370) * cbMtdParam._m0[24u].x) + _370) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3873 = isnan(0.0) ? _387 : (isnan(_387) ? 0.0 : max(_387, 0.0));
    float _388 = isnan(1.0) ? _3873 : (isnan(_3873) ? 1.0 : min(_3873, 1.0));
    float _395 = (_388 * ((_320.x * cbMtdParam._m0[12u].x) - _299)) + _299;
    float _396 = (_388 * ((_320.y * cbMtdParam._m0[12u].y) - _300)) + _300;
    float _397 = (_388 * ((_320.z * cbMtdParam._m0[12u].z) - _301)) + _301;
    vec4 _415 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _272) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _273) + cbTextureTilingScale._m0[20u].w));
    vec4 _442 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _272) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _273) + cbTextureTilingScale._m0[4u].w));
    vec4 _459 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _461 = _459.x;
    float _462 = _459.y;
    float _463 = _459.z;
    float _472 = ((_442.z - _463) * _388) + _463;
    float _475 = ((((_442.x - _461) * _388) + _461) * 2.0) + (-1.0);
    float _476 = ((((_442.y - _462) * _388) + _462) * 2.0) + (-1.0);
    float _477 = dot(vec2(_475, _476), vec2(_475, _476));
    float _3884 = isnan(0.0) ? _477 : (isnan(_477) ? 0.0 : max(_477, 0.0));
    float _482 = sqrt(1.0 - (isnan(1.0) ? _3884 : (isnan(_3884) ? 1.0 : min(_3884, 1.0))));
    float _485 = _475 + ((((_415.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x);
    float _486 = _476 + ((((_415.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x);
    float _489 = fma(_482, _241, fma(_486, _248, _485 * _234));
    float _492 = fma(_482, _242, fma(_486, _249, _485 * _235));
    float _495 = fma(_482, _243, fma(_486, _250, _485 * _236));
    float _499 = inversesqrt(dot(vec3(_489, _492, _495), vec3(_489, _492, _495)));
    vec4 _515 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _543 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _272) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _273) + cbTextureTilingScale._m0[11u].w));
    float _545 = _543.x;
    float _546 = 1.0 - _545;
    float _550 = ((_545 - _546) * cbMtdParam._m0[24u].z) + _546;
    float _552 = (cbMtdParam._m0[19u].x + dot(vec4(_499 * _489, _499 * _492, _499 * _495, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_550 * cbMtdParam._m0[21u].z);
    float _3895 = isnan(0.0) ? _552 : (isnan(_552) ? 0.0 : max(_552, 0.0));
    float _553 = isnan(1.0) ? _3895 : (isnan(_3895) ? 1.0 : min(_3895, 1.0));
    float _555 = (-0.0) - cbMtdParam._m0[24u].y;
    float _557 = isnan(0.0) ? _555 : (isnan(_555) ? 0.0 : max(_555, 0.0));
    float _558 = isnan(1.0) ? _557 : (isnan(_557) ? 1.0 : min(_557, 1.0));
    float _565 = _553 - ((_553 * TEXCOORD_8.x) * _558);
    float _566 = _553 - ((_553 * TEXCOORD_8.y) * _558);
    float _567 = _553 - ((_553 * TEXCOORD_8.z) * _558);
    float _574 = isnan(-1.0) ? cbMtdParam._m0[24u].y : (isnan(cbMtdParam._m0[24u].y) ? (-1.0) : max(cbMtdParam._m0[24u].y, -1.0));
    float _578 = ((isnan(0.0) ? _574 : (isnan(_574) ? 0.0 : min(_574, 0.0))) * TEXCOORD_8.x) + TEXCOORD_14.x;
    float _586 = (_578 - (((_550 + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _578))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3926 = isnan(0.0) ? _586 : (isnan(_586) ? 0.0 : max(_586, 0.0));
    float _587 = isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0));
    float _591 = ((_565 * (cbMtdParam._m0[17u].x - _395)) * _587) + _395;
    float _592 = ((_566 * (cbMtdParam._m0[17u].y - _396)) * _587) + _396;
    float _593 = ((_567 * (cbMtdParam._m0[17u].z - _397)) * _587) + _397;
    vec4 _605 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _272) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _273) + cbTextureTilingScale._m0[19u].w));
    float _607 = _605.x;
    float _608 = 1.0 - _607;
    float _635 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_607 - _608) * cbMtdParam._m0[24u].w) + _608) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3937 = isnan(0.0) ? _635 : (isnan(_635) ? 0.0 : max(_635, 0.0));
    float _636 = isnan(1.0) ? _3937 : (isnan(_3937) ? 1.0 : min(_3937, 1.0));
    float _644 = ((((cbMtdParam._m0[10u].x - _591) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _636) + _591;
    float _645 = ((((cbMtdParam._m0[10u].y - _592) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _636) + _592;
    float _646 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _593)) * _636) + _593;
    float _651 = (((_415.z - _472) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _472;
    vec4 _665 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _272) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _273) + cbTextureTilingScale._m0[15u].w));
    float _672 = (_665.x * 2.0) + (-1.0);
    float _673 = (_665.y * 2.0) + (-1.0);
    float _674 = dot(vec2(_672, _673), vec2(_672, _673));
    float _3948 = isnan(0.0) ? _674 : (isnan(_674) ? 0.0 : max(_674, 0.0));
    float _683 = (((_665.z - _651) * _565) * _587) + _651;
    float _686 = ((cbMtdParam._m0[23u].y - _683) * _636) + _683;
    vec4 _705 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _272) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _273) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _711 = (_705.x * 2.0) + (-1.0);
    float _712 = (_705.y * 2.0) + (-1.0);
    float _713 = dot(vec2(_711, _712), vec2(_711, _712));
    float _3959 = isnan(0.0) ? _713 : (isnan(_713) ? 0.0 : max(_713, 0.0));
    float _733 = (((cbMtdParam._m0[21u].x * _485) + ((_672 - _485) * _565)) * _587) + _485;
    float _734 = (((cbMtdParam._m0[21u].x * _486) + ((_673 - _486) * _566)) * _587) + _486;
    float _735 = (((sqrt(1.0 - (isnan(1.0) ? _3948 : (isnan(_3948) ? 1.0 : min(_3948, 1.0)))) - _482) * _567) * _587) + _482;
    float _746 = (((_711 - _733) + (_733 * cbMtdParam._m0[22u].z)) * _636) + _733;
    float _747 = (((_712 - _734) + (_734 * cbMtdParam._m0[22u].z)) * _636) + _734;
    float _748 = ((sqrt(1.0 - (isnan(1.0) ? _3959 : (isnan(_3959) ? 1.0 : min(_3959, 1.0)))) - _735) * _636) + _735;
    float _750 = cbMtdParam._m0[22u].x + _515.w;
    float _753 = fma(_748, _241, fma(_747, _248, _746 * _234));
    float _756 = fma(_748, _242, fma(_747, _249, _746 * _235));
    float _759 = fma(_748, _243, fma(_747, _250, _746 * _236));
    float _763 = inversesqrt(dot(vec3(_753, _756, _759), vec3(_753, _756, _759)));
    float _764 = _763 * _753;
    float _765 = _763 * _756;
    float _766 = _763 * _759;
    float _3970 = isnan(0.0) ? _686 : (isnan(_686) ? 0.0 : max(_686, 0.0));
    float _767 = isnan(1.0) ? _3970 : (isnan(_3970) ? 1.0 : min(_3970, 1.0));
    float _3981 = isnan(0.0) ? _750 : (isnan(_750) ? 0.0 : max(_750, 0.0));
    float _3992 = isnan(0.0) ? _644 : (isnan(_644) ? 0.0 : max(_644, 0.0));
    float _4003 = isnan(0.0) ? _645 : (isnan(_645) ? 0.0 : max(_645, 0.0));
    float _4014 = isnan(0.0) ? _646 : (isnan(_646) ? 0.0 : max(_646, 0.0));
    float _785 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _826 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _836 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _826);
    float _837 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _826);
    float _838 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _826);
    float _842 = inversesqrt(dot(vec3(_836, _837, _838), vec3(_836, _837, _838)));
    float _843 = _836 * _842;
    float _844 = _837 * _842;
    float _845 = _838 * _842;
    float _851 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _852 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _870 = fma(_766, cbSceneParam._m0[5u].z, fma(_765, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _764));
    float _873 = fma(_766, cbSceneParam._m0[6u].z, fma(_765, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _764));
    float _876 = fma(_766, cbSceneParam._m0[7u].z, fma(_765, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _764));
    uint _890 = (_253 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _896 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3992 : (isnan(_3992) ? 1.0 : min(_3992, 1.0)))) * cbInstanceData._m0[_890].x;
    float _897 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4003 : (isnan(_4003) ? 1.0 : min(_4003, 1.0)))) * cbInstanceData._m0[_890].y;
    float _898 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4014 : (isnan(_4014) ? 1.0 : min(_4014, 1.0)))) * cbInstanceData._m0[_890].z;
    float _4025 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
    float _899 = isnan(1.0) ? _4025 : (isnan(_4025) ? 1.0 : min(_4025, 1.0));
    float _4036 = isnan(0.0) ? _897 : (isnan(_897) ? 0.0 : max(_897, 0.0));
    float _900 = isnan(1.0) ? _4036 : (isnan(_4036) ? 1.0 : min(_4036, 1.0));
    float _4047 = isnan(0.0) ? _898 : (isnan(_898) ? 0.0 : max(_898, 0.0));
    float _901 = isnan(1.0) ? _4047 : (isnan(_4047) ? 1.0 : min(_4047, 1.0));
    vec4 _910 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _851, cbSceneParam._m0[86u].y * _852));
    float _914 = ((isnan(1.0) ? _3981 : (isnan(_3981) ? 1.0 : min(_3981, 1.0))) * TEXCOORD_5.w) * _910.x;
    float _915 = dot(vec3(_764, _765, _766), vec3(_843, _844, _845));
    float _918 = _915 * 2.0;
    float _922 = (_918 * _764) - _843;
    float _923 = (_918 * _765) - _844;
    float _924 = (_918 * _766) - _845;
    float _928 = abs(dot(vec3(_843, _844, _845), vec3(_764, _765, _766)));
    float _4058 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
    float _930 = sqrt(_767);
    float _943 = exp2((_930 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4058 : (isnan(_4058) ? 1.0 : min(_4058, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_930 * 3.0));
    float _975 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _979 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _983 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1284;
    float _1286;
    float _1287;
    float _1288;
    float _1289;
    float _1290;
    float _1291;
    float _1292;
    float _1293;
    float _1294;
    float _1295;
    float _1296;
    float _1297;
    float _1298;
    float _1299;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1009 = fma(_983, cbModelParam._m0[26u].z, fma(_979, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _975));
        float _1013 = fma(_983, cbModelParam._m0[27u].z, fma(_979, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _975));
        float _1017 = fma(_983, cbModelParam._m0[28u].z, fma(_979, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _975));
        float _1042 = _975 + _764;
        float _1043 = _979 + _765;
        float _1044 = _983 + _766;
        float _1054 = fma(_1044, cbModelParam._m0[26u].z, fma(_1043, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1042)) - _1009;
        float _1055 = fma(_1044, cbModelParam._m0[27u].z, fma(_1043, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1042)) - _1013;
        float _1056 = fma(_1044, cbModelParam._m0[28u].z, fma(_1043, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1042)) - _1017;
        float _1060 = inversesqrt(dot(vec3(_1054, _1055, _1056), vec3(_1054, _1055, _1056)));
        float _1073 = ((_1060 * _1054) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1009 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1074 = ((_1060 * _1055) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1013 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1075 = ((_1060 * _1056) / cbModelParam._m0[34u].z) + ((((((_1017 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1078 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1073, _1074, _1075), 0.0);
        vec4 _1085 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1073, _1074, _1075), 0.0);
        vec4 _1092 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1073, _1074, _1075), 0.0);
        vec4 _1099 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1073, _1074, _1075), 0.0);
        float _1112 = exp2((_1078.w + (-0.5)) * 20.0) * 2.0;
        float _1113 = _1112 * (_1078.x + (-0.5));
        float _1114 = _1112 * (_1078.y + (-0.5));
        float _1115 = _1112 * (_1078.z + (-0.5));
        float _1122 = exp2((_1085.w + (-0.5)) * 20.0) * 2.0;
        float _1123 = _1122 * (_1085.x + (-0.5));
        float _1124 = _1122 * (_1085.y + (-0.5));
        float _1125 = _1122 * (_1085.z + (-0.5));
        float _1132 = exp2((_1092.w + (-0.5)) * 20.0) * 2.0;
        float _1133 = _1132 * (_1092.x + (-0.5));
        float _1134 = _1132 * (_1092.y + (-0.5));
        float _1135 = _1132 * (_1092.z + (-0.5));
        float _1142 = exp2((_1099.w + (-0.5)) * 20.0) * 2.0;
        float _1143 = _1142 * (_1099.x + (-0.5));
        float _1144 = _1142 * (_1099.y + (-0.5));
        float _1145 = _1142 * (_1099.z + (-0.5));
        float _1146 = isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0));
        float _1147 = isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0));
        float _1148 = isnan(0.0) ? _1145 : (isnan(_1145) ? 0.0 : max(_1145, 0.0));
        float _1149 = _1113 * 0.5;
        float _1150 = _1123 * 0.5;
        float _1151 = _1133 * 0.5;
        float _1152 = dot(vec3(_1149, _1150, _1151), vec3(_1149, _1150, _1151));
        float _1157 = (_1152 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1152);
        float _1166 = (dot(vec3(_764, _765, _766), vec3(_1157 * _1149, _1157 * _1150, _1157 * _1151)) + 1.0) * 0.5;
        float _4084 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
        float _1176 = sqrt(((_1150 * _1150) + (_1149 * _1149)) + (_1151 * _1151)) / (_1146 + 9.9999997473787516355514526367188e-06);
        float _4095 = isnan(0.0) ? _1176 : (isnan(_1176) ? 0.0 : max(_1176, 0.0));
        float _1177 = isnan(1.0) ? _4095 : (isnan(_4095) ? 1.0 : min(_4095, 1.0));
        float _1178 = _1177 * 2.0;
        float _1182 = (1.0 - _1177) / (_1177 + 1.0);
        float _4106 = isnan(0.0) ? _1182 : (isnan(_1182) ? 0.0 : max(_1182, 0.0));
        float _1183 = isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0));
        float _1192 = ((((1.0 - _1183) * (_1178 + 2.0)) * exp2(log2(isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0))) * (_1178 + 1.0))) + _1183) * _1146;
        float _1193 = _1114 * 0.5;
        float _1194 = _1124 * 0.5;
        float _1195 = _1134 * 0.5;
        float _1196 = dot(vec3(_1193, _1194, _1195), vec3(_1193, _1194, _1195));
        float _1201 = (_1196 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1196);
        float _1209 = (dot(vec3(_764, _765, _766), vec3(_1201 * _1193, _1201 * _1194, _1201 * _1195)) + 1.0) * 0.5;
        float _4117 = isnan(0.0) ? _1209 : (isnan(_1209) ? 0.0 : max(_1209, 0.0));
        float _1218 = sqrt(((_1194 * _1194) + (_1193 * _1193)) + (_1195 * _1195)) / (_1147 + 9.9999997473787516355514526367188e-06);
        float _4128 = isnan(0.0) ? _1218 : (isnan(_1218) ? 0.0 : max(_1218, 0.0));
        float _1219 = isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0));
        float _1220 = _1219 * 2.0;
        float _1224 = (1.0 - _1219) / (_1219 + 1.0);
        float _4139 = isnan(0.0) ? _1224 : (isnan(_1224) ? 0.0 : max(_1224, 0.0));
        float _1225 = isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0));
        float _1234 = ((((1.0 - _1225) * (_1220 + 2.0)) * exp2(log2(isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0))) * (_1220 + 1.0))) + _1225) * _1147;
        float _1235 = _1115 * 0.5;
        float _1236 = _1125 * 0.5;
        float _1237 = _1135 * 0.5;
        float _1238 = dot(vec3(_1235, _1236, _1237), vec3(_1235, _1236, _1237));
        float _1243 = (_1238 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1238);
        float _1251 = (dot(vec3(_764, _765, _766), vec3(_1243 * _1235, _1243 * _1236, _1243 * _1237)) + 1.0) * 0.5;
        float _4150 = isnan(0.0) ? _1251 : (isnan(_1251) ? 0.0 : max(_1251, 0.0));
        float _1260 = sqrt(((_1236 * _1236) + (_1235 * _1235)) + (_1237 * _1237)) / (_1148 + 9.9999997473787516355514526367188e-06);
        float _4161 = isnan(0.0) ? _1260 : (isnan(_1260) ? 0.0 : max(_1260, 0.0));
        float _1261 = isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0));
        float _1262 = _1261 * 2.0;
        float _1266 = (1.0 - _1261) / (_1261 + 1.0);
        float _4172 = isnan(0.0) ? _1266 : (isnan(_1266) ? 0.0 : max(_1266, 0.0));
        float _1267 = isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0));
        float _1276 = ((((1.0 - _1267) * (_1262 + 2.0)) * exp2(log2(isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0))) * (_1262 + 1.0))) + _1267) * _1148;
        _1284 = _1115;
        _1286 = _1114;
        _1287 = _1113;
        _1288 = _1125;
        _1289 = _1124;
        _1290 = _1123;
        _1291 = _1135;
        _1292 = _1134;
        _1293 = _1133;
        _1294 = _1148;
        _1295 = _1147;
        _1296 = _1146;
        _1297 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1192 : (isnan(_1192) ? 0.0 : max(_1192, 0.0)));
        _1298 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1234 : (isnan(_1234) ? 0.0 : max(_1234, 0.0)));
        _1299 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1276 : (isnan(_1276) ? 0.0 : max(_1276, 0.0)));
    }
    else
    {
        _1284 = _1285;
        _1286 = _1285;
        _1287 = _1285;
        _1288 = _1285;
        _1289 = _1285;
        _1290 = _1285;
        _1291 = _1285;
        _1292 = _1285;
        _1293 = _1285;
        _1294 = _1285;
        _1295 = _1285;
        _1296 = _1285;
        _1297 = 0.0;
        _1298 = 0.0;
        _1299 = 0.0;
    }
    float _1593;
    float _1594;
    float _1595;
    float _1596;
    float _1597;
    float _1598;
    float _1599;
    float _1600;
    float _1601;
    float _1602;
    float _1603;
    float _1604;
    float _1605;
    float _1606;
    float _1607;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1324 = fma(_983, cbModelParam._m0[30u].z, fma(_979, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _975));
        float _1328 = fma(_983, cbModelParam._m0[31u].z, fma(_979, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _975));
        float _1332 = fma(_983, cbModelParam._m0[32u].z, fma(_979, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _975));
        float _1355 = _975 + _764;
        float _1356 = _979 + _765;
        float _1357 = _983 + _766;
        float _1367 = fma(_1357, cbModelParam._m0[30u].z, fma(_1356, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1355)) - _1324;
        float _1368 = fma(_1357, cbModelParam._m0[31u].z, fma(_1356, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1355)) - _1328;
        float _1369 = fma(_1357, cbModelParam._m0[32u].z, fma(_1356, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1355)) - _1332;
        float _1373 = inversesqrt(dot(vec3(_1367, _1368, _1369), vec3(_1367, _1368, _1369)));
        float _1386 = ((_1373 * _1367) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1324 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1387 = ((_1373 * _1368) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1328 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1388 = ((_1373 * _1369) / cbModelParam._m0[35u].z) + ((((((_1332 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1390 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1386, _1387, _1388), 0.0);
        vec4 _1397 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1386, _1387, _1388), 0.0);
        vec4 _1404 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1386, _1387, _1388), 0.0);
        vec4 _1411 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1386, _1387, _1388), 0.0);
        float _1423 = exp2((_1390.w + (-0.5)) * 20.0) * 2.0;
        float _1424 = _1423 * (_1390.x + (-0.5));
        float _1425 = _1423 * (_1390.y + (-0.5));
        float _1426 = _1423 * (_1390.z + (-0.5));
        float _1433 = exp2((_1397.w + (-0.5)) * 20.0) * 2.0;
        float _1434 = _1433 * (_1397.x + (-0.5));
        float _1435 = _1433 * (_1397.y + (-0.5));
        float _1436 = _1433 * (_1397.z + (-0.5));
        float _1443 = exp2((_1404.w + (-0.5)) * 20.0) * 2.0;
        float _1444 = _1443 * (_1404.x + (-0.5));
        float _1445 = _1443 * (_1404.y + (-0.5));
        float _1446 = _1443 * (_1404.z + (-0.5));
        float _1453 = exp2((_1411.w + (-0.5)) * 20.0) * 2.0;
        float _1454 = _1453 * (_1411.x + (-0.5));
        float _1455 = _1453 * (_1411.y + (-0.5));
        float _1456 = _1453 * (_1411.z + (-0.5));
        float _1457 = isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0));
        float _1458 = isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0));
        float _1459 = isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0));
        float _1460 = _1424 * 0.5;
        float _1461 = _1434 * 0.5;
        float _1462 = _1444 * 0.5;
        float _1463 = dot(vec3(_1460, _1461, _1462), vec3(_1460, _1461, _1462));
        float _1468 = (_1463 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1463);
        float _1476 = (dot(vec3(_764, _765, _766), vec3(_1468 * _1460, _1468 * _1461, _1468 * _1462)) + 1.0) * 0.5;
        float _4213 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
        float _1485 = sqrt(((_1461 * _1461) + (_1460 * _1460)) + (_1462 * _1462)) / (_1457 + 9.9999997473787516355514526367188e-06);
        float _4224 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
        float _1486 = isnan(1.0) ? _4224 : (isnan(_4224) ? 1.0 : min(_4224, 1.0));
        float _1487 = _1486 * 2.0;
        float _1491 = (1.0 - _1486) / (_1486 + 1.0);
        float _4235 = isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0));
        float _1492 = isnan(1.0) ? _4235 : (isnan(_4235) ? 1.0 : min(_4235, 1.0));
        float _1501 = ((((1.0 - _1492) * (_1487 + 2.0)) * exp2(log2(isnan(1.0) ? _4213 : (isnan(_4213) ? 1.0 : min(_4213, 1.0))) * (_1487 + 1.0))) + _1492) * _1457;
        float _1502 = _1425 * 0.5;
        float _1503 = _1435 * 0.5;
        float _1504 = _1445 * 0.5;
        float _1505 = dot(vec3(_1502, _1503, _1504), vec3(_1502, _1503, _1504));
        float _1510 = (_1505 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1505);
        float _1518 = (dot(vec3(_764, _765, _766), vec3(_1510 * _1502, _1510 * _1503, _1510 * _1504)) + 1.0) * 0.5;
        float _4246 = isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0));
        float _1527 = sqrt(((_1503 * _1503) + (_1502 * _1502)) + (_1504 * _1504)) / (_1458 + 9.9999997473787516355514526367188e-06);
        float _4257 = isnan(0.0) ? _1527 : (isnan(_1527) ? 0.0 : max(_1527, 0.0));
        float _1528 = isnan(1.0) ? _4257 : (isnan(_4257) ? 1.0 : min(_4257, 1.0));
        float _1529 = _1528 * 2.0;
        float _1533 = (1.0 - _1528) / (_1528 + 1.0);
        float _4268 = isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0));
        float _1534 = isnan(1.0) ? _4268 : (isnan(_4268) ? 1.0 : min(_4268, 1.0));
        float _1543 = ((((1.0 - _1534) * (_1529 + 2.0)) * exp2(log2(isnan(1.0) ? _4246 : (isnan(_4246) ? 1.0 : min(_4246, 1.0))) * (_1529 + 1.0))) + _1534) * _1458;
        float _1544 = _1426 * 0.5;
        float _1545 = _1436 * 0.5;
        float _1546 = _1446 * 0.5;
        float _1547 = dot(vec3(_1544, _1545, _1546), vec3(_1544, _1545, _1546));
        float _1552 = (_1547 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1547);
        float _1560 = (dot(vec3(_764, _765, _766), vec3(_1552 * _1544, _1552 * _1545, _1552 * _1546)) + 1.0) * 0.5;
        float _4279 = isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0));
        float _1569 = sqrt(((_1545 * _1545) + (_1544 * _1544)) + (_1546 * _1546)) / (_1459 + 9.9999997473787516355514526367188e-06);
        float _4290 = isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0));
        float _1570 = isnan(1.0) ? _4290 : (isnan(_4290) ? 1.0 : min(_4290, 1.0));
        float _1571 = _1570 * 2.0;
        float _1575 = (1.0 - _1570) / (_1570 + 1.0);
        float _4301 = isnan(0.0) ? _1575 : (isnan(_1575) ? 0.0 : max(_1575, 0.0));
        float _1576 = isnan(1.0) ? _4301 : (isnan(_4301) ? 1.0 : min(_4301, 1.0));
        float _1585 = ((((1.0 - _1576) * (_1571 + 2.0)) * exp2(log2(isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0))) * (_1571 + 1.0))) + _1576) * _1459;
        _1593 = _1426;
        _1594 = _1425;
        _1595 = _1424;
        _1596 = _1436;
        _1597 = _1435;
        _1598 = _1434;
        _1599 = _1446;
        _1600 = _1445;
        _1601 = _1444;
        _1602 = _1459;
        _1603 = _1458;
        _1604 = _1457;
        _1605 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0)));
        _1606 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1543 : (isnan(_1543) ? 0.0 : max(_1543, 0.0)));
        _1607 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1585 : (isnan(_1585) ? 0.0 : max(_1585, 0.0)));
    }
    else
    {
        _1593 = _1285;
        _1594 = _1285;
        _1595 = _1285;
        _1596 = _1285;
        _1597 = _1285;
        _1598 = _1285;
        _1599 = _1285;
        _1600 = _1285;
        _1601 = _1285;
        _1602 = _1285;
        _1603 = _1285;
        _1604 = _1285;
        _1605 = 0.0;
        _1606 = 0.0;
        _1607 = 0.0;
    }
    float _1617 = (cbModelParam._m0[1u].x * (_1605 - _1297)) + _1297;
    float _1618 = (cbModelParam._m0[1u].x * (_1606 - _1298)) + _1298;
    float _1619 = (cbModelParam._m0[1u].x * (_1607 - _1299)) + _1299;
    float _1640 = fma(_1619, cbSceneParam._m0[89u].z, fma(_1618, cbSceneParam._m0[89u].y, _1617 * cbSceneParam._m0[89u].x));
    float _1643 = fma(_1619, cbSceneParam._m0[90u].z, fma(_1618, cbSceneParam._m0[90u].y, _1617 * cbSceneParam._m0[90u].x));
    float _1646 = fma(_1619, cbSceneParam._m0[91u].z, fma(_1618, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1617));
    float _1661 = _922 * 0.5;
    float _1662 = _923 * 0.5;
    float _1663 = _924 * 0.5;
    float _1664 = dot(vec4(_1661, _1662, _1663, 1.0), vec4(_1595, _1598, _1601, _1604));
    float _1667 = dot(vec4(_1661, _1662, _1663, 1.0), vec4(_1594, _1597, _1600, _1603));
    float _1670 = dot(vec4(_1661, _1662, _1663, 1.0), vec4(_1593, _1596, _1599, _1602));
    float _1704;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1677 = dot(vec4(_1661, _1662, _1663, 1.0), vec4(_1284, _1288, _1291, _1294));
        float _1681 = dot(vec4(_1661, _1662, _1663, 1.0), vec4(_1286, _1289, _1292, _1295));
        float _1685 = dot(vec4(_1661, _1662, _1663, 1.0), vec4(_1287, _1290, _1293, _1296));
        float _1692 = dot(vec4(cbModelParam._m0[39u]), vec4(_1661, _1662, _1663, 1.0));
        _1704 = dot(vec3(isnan(0.0) ? _1685 : (isnan(_1685) ? 0.0 : max(_1685, 0.0)), isnan(0.0) ? _1681 : (isnan(_1681) ? 0.0 : max(_1681, 0.0)), isnan(0.0) ? _1677 : (isnan(_1677) ? 0.0 : max(_1677, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1692) ? 0.0 : (isnan(0.0) ? _1692 : max(0.0, _1692))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1704 = 1.0;
    }
    float _1715;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1706 = dot(vec4(cbModelParam._m0[40u]), vec4(_1661, _1662, _1663, 1.0));
        _1715 = dot(vec3(isnan(0.0) ? _1664 : (isnan(_1664) ? 0.0 : max(_1664, 0.0)), isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0)), isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1706) ? 0.0 : (isnan(0.0) ? _1706 : max(0.0, _1706))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1715 = 1.0;
    }
    float _1719 = (_1715 * cbModelParam._m0[1u].x) + (_1704 * (1.0 - cbModelParam._m0[1u].x));
    float _1729 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _767);
    float _1730 = isnan(_1729) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1729 : min(cbModelParam._m0[25u].z, _1729));
    float _1811;
    float _1813;
    float _1815;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1778 = fma(_983, cbModelParam._m0[13u].z, fma(_979, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _975)) + cbModelParam._m0[13u].w;
        float _1782 = fma(_983, cbModelParam._m0[14u].z, fma(_979, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _975)) + cbModelParam._m0[14u].w;
        float _1786 = fma(_983, cbModelParam._m0[15u].z, fma(_979, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _975)) + cbModelParam._m0[15u].w;
        float _1789 = fma(_924, cbModelParam._m0[13u].z, fma(_923, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _922));
        float _1792 = fma(_924, cbModelParam._m0[14u].z, fma(_923, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _922));
        float _1795 = fma(_924, cbModelParam._m0[15u].z, fma(_923, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _922));
        float _1823;
        if (_1789 > 0.0)
        {
            _1823 = abs((1.0 - _1778) / _1789);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1789 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1778 + 1.0) / _1789);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1823 = frontier_phi_14_12_ladder;
        }
        float _1993;
        if (_1792 > 0.0)
        {
            _1993 = abs((1.0 - _1782) / _1792);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1792 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1782 + 1.0) / _1792);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1993 = frontier_phi_23_19_ladder;
        }
        float _2288;
        if (_1795 > 0.0)
        {
            _2288 = abs((1.0 - _1786) / _1795);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1795 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1786 + 1.0) / _1795);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2288 = frontier_phi_35_30_ladder;
        }
        float _2290 = isnan(_1993) ? _1823 : (isnan(_1823) ? _1993 : min(_1823, _1993));
        float _2291 = isnan(_2288) ? _2290 : (isnan(_2290) ? _2288 : min(_2290, _2288));
        float _2295 = (_2291 * _1789) + _1778;
        float _2296 = (_2291 * _1792) + _1782;
        float _2297 = (_2291 * _1795) + _1786;
        float _2298 = _2291 * 9.9999997473787516355514526367188e-05;
        float _2300 = (-1.0) - _2298;
        float _2302 = _2298 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2297 > _2302) || ((_2297 < _2300) || ((_2296 > _2302) || ((_2296 < _2300) || ((_2295 < _2300) || (_2295 > _2302))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2442 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2297, cbModelParam._m0[9u].z, fma(_2296, cbModelParam._m0[9u].y, _2295 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2297, cbModelParam._m0[10u].z, fma(_2296, cbModelParam._m0[10u].y, _2295 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2297, cbModelParam._m0[11u].z, fma(_2296, cbModelParam._m0[11u].y, _2295 * cbModelParam._m0[11u].x))), _1730);
            frontier_phi_13_35_ladder = _2442.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2442.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2442.x * cbModelParam._m0[1u].y;
        }
        _1811 = frontier_phi_13_35_ladder_2;
        _1813 = frontier_phi_13_35_ladder_1;
        _1815 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1799 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_922, _923, _924), _1730);
        _1811 = _1799.x * cbModelParam._m0[1u].y;
        _1813 = _1799.y * cbModelParam._m0[1u].y;
        _1815 = _1799.z * cbModelParam._m0[1u].y;
    }
    float _1819 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _767);
    float _1820 = isnan(_1819) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1819 : min(cbModelParam._m0[25u].w, _1819));
    float _1910;
    float _1912;
    float _1914;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1874 = fma(_983, cbModelParam._m0[21u].z, fma(_979, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _975)) + cbModelParam._m0[21u].w;
        float _1878 = fma(_983, cbModelParam._m0[22u].z, fma(_979, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _975)) + cbModelParam._m0[22u].w;
        float _1882 = fma(_983, cbModelParam._m0[23u].z, fma(_979, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _975)) + cbModelParam._m0[23u].w;
        float _1885 = fma(_924, cbModelParam._m0[21u].z, fma(_923, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _922));
        float _1888 = fma(_924, cbModelParam._m0[22u].z, fma(_923, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _922));
        float _1891 = fma(_924, cbModelParam._m0[23u].z, fma(_923, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _922));
        float _1998;
        if (_1885 > 0.0)
        {
            _1998 = abs((1.0 - _1874) / _1885);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1885 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1874 + 1.0) / _1885);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1998 = frontier_phi_25_21_ladder;
        }
        float _2315;
        if (_1888 > 0.0)
        {
            _2315 = abs((1.0 - _1878) / _1888);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1888 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1878 + 1.0) / _1888);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2315 = frontier_phi_37_32_ladder;
        }
        float _2642;
        if (_1891 > 0.0)
        {
            _2642 = abs((1.0 - _1882) / _1891);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1891 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1882 + 1.0) / _1891);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2642 = frontier_phi_47_44_ladder;
        }
        float _2644 = isnan(_2315) ? _1998 : (isnan(_1998) ? _2315 : min(_1998, _2315));
        float _2645 = isnan(_2642) ? _2644 : (isnan(_2644) ? _2642 : min(_2644, _2642));
        float _2649 = (_2645 * _1885) + _1874;
        float _2650 = (_2645 * _1888) + _1878;
        float _2651 = (_2645 * _1891) + _1882;
        float _2652 = _2645 * 9.9999997473787516355514526367188e-05;
        float _2653 = (-1.0) - _2652;
        float _2655 = _2652 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2651 > _2655) || ((_2651 < _2653) || ((_2650 > _2655) || ((_2650 < _2653) || ((_2649 < _2653) || (_2649 > _2655))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2769 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2651, cbModelParam._m0[17u].z, fma(_2650, cbModelParam._m0[17u].y, _2649 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2651, cbModelParam._m0[18u].z, fma(_2650, cbModelParam._m0[18u].y, _2649 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2651, cbModelParam._m0[19u].z, fma(_2650, cbModelParam._m0[19u].y, _2649 * cbModelParam._m0[19u].x))), _1820);
            frontier_phi_22_47_ladder = _2769.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2769.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2769.x * cbModelParam._m0[1u].z;
        }
        _1910 = frontier_phi_22_47_ladder_2;
        _1912 = frontier_phi_22_47_ladder_1;
        _1914 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1894 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_922, _923, _924), _1820);
        _1910 = _1894.x * cbModelParam._m0[1u].z;
        _1912 = _1894.y * cbModelParam._m0[1u].z;
        _1914 = _1894.z * cbModelParam._m0[1u].z;
    }
    float _1926 = ((((1.0 - _943) * ((_930 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_943 * _930)) * _914;
    float _1927 = _1926 * ((cbModelParam._m0[1u].w * (_1910 - _1811)) + _1811);
    float _1928 = _1926 * ((cbModelParam._m0[1u].w * (_1912 - _1813)) + _1813);
    float _1929 = _1926 * ((cbModelParam._m0[1u].w * (_1914 - _1815)) + _1815);
    float _1932 = fma(_1929, cbSceneParam._m0[89u].z, fma(_1928, cbSceneParam._m0[89u].y, _1927 * cbSceneParam._m0[89u].x));
    float _1935 = fma(_1929, cbSceneParam._m0[90u].z, fma(_1928, cbSceneParam._m0[90u].y, _1927 * cbSceneParam._m0[90u].x));
    float _1938 = fma(_1929, cbSceneParam._m0[91u].z, fma(_1928, cbSceneParam._m0[91u].y, _1927 * cbSceneParam._m0[91u].x));
    float _1972 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1976 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1980 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1984 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1985 = _1972 / _1984;
    float _1986 = _1976 / _1984;
    float _1987 = _1980 / _1984;
    float _2134;
    float _2135;
    float _2136;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2014 = ((uint(_1987 > cbSceneParam._m0[59u].y) + uint(_1987 > cbSceneParam._m0[59u].x)) + uint(_1987 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2015 = _2014 + 43u;
        uint _2023 = _2014 + 44u;
        uint _2031 = _2014 + 45u;
        uint _2039 = _2014 + 46u;
        float _2050 = fma(_1984, cbSceneParam._m0[_2015].w, fma(_1980, cbSceneParam._m0[_2015].z, fma(_1976, cbSceneParam._m0[_2015].y, _1972 * cbSceneParam._m0[_2015].x)));
        float _2054 = fma(_1984, cbSceneParam._m0[_2023].w, fma(_1980, cbSceneParam._m0[_2023].z, fma(_1976, cbSceneParam._m0[_2023].y, _1972 * cbSceneParam._m0[_2023].x)));
        float _2062 = fma(_1984, cbSceneParam._m0[_2039].w, fma(_1980, cbSceneParam._m0[_2039].z, fma(_1976, cbSceneParam._m0[_2039].y, _1972 * cbSceneParam._m0[_2039].x)));
        float _2067 = cbSceneParam._m0[33u].z * _2062;
        float _2069 = cbSceneParam._m0[33u].w * _2062;
        float _2072 = fma(_1984, cbSceneParam._m0[_2031].w, fma(_1980, cbSceneParam._m0[_2031].z, fma(_1976, cbSceneParam._m0[_2031].y, _1972 * cbSceneParam._m0[_2031].x))) / _2062;
        float _2120 = (cbSceneParam._m0[33u].x - sqrt(((_1986 * _1986) + (_1985 * _1985)) + (_1987 * _1987))) * cbSceneParam._m0[33u].y;
        float _4427 = isnan(0.0) ? _2120 : (isnan(_2120) ? 0.0 : max(_2120, 0.0));
        float _2127 = (isnan(1.0) ? _4427 : (isnan(_4427) ? 1.0 : min(_4427, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2067 + _2050) / _2062, (_2069 + _2054) / _2062), _2072), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2069 + _2050) / _2062, (_2054 - _2067) / _2062), _2072), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2050 - _2067) / _2062, (_2054 - _2069) / _2062), _2072), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2050 - _2069) / _2062, (_2067 + _2054) / _2062), _2072), 0.0)).x), vec4(0.25)));
        _2134 = 1.0 - (_2127 * cbSceneParam._m0[34u].x);
        _2135 = 1.0 - (_2127 * cbSceneParam._m0[34u].y);
        _2136 = 1.0 - (_2127 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2134 = 1.0;
        _2135 = 1.0;
        _2136 = 1.0;
    }
    float _2200;
    float _2202;
    float _2204;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2188 = fma(_1984, cbSceneParam._m0[63u].w, fma(_1980, cbSceneParam._m0[63u].z, fma(_1976, cbSceneParam._m0[63u].y, _1972 * cbSceneParam._m0[63u].x)));
        float _2189 = fma(_1984, cbSceneParam._m0[60u].w, fma(_1980, cbSceneParam._m0[60u].z, fma(_1976, cbSceneParam._m0[60u].y, _1972 * cbSceneParam._m0[60u].x))) / _2188;
        float _2190 = fma(_1984, cbSceneParam._m0[61u].w, fma(_1980, cbSceneParam._m0[61u].z, fma(_1976, cbSceneParam._m0[61u].y, _1972 * cbSceneParam._m0[61u].x))) / _2188;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2189 >= cbSceneParam._m0[64u].x) && (_2190 >= cbSceneParam._m0[64u].y)) && (_2189 <= cbSceneParam._m0[64u].z)) && (_2190 <= cbSceneParam._m0[64u].w))
        {
            float _2328 = fma(_1984, cbSceneParam._m0[62u].w, fma(_1980, cbSceneParam._m0[62u].z, fma(_1976, cbSceneParam._m0[62u].y, _1972 * cbSceneParam._m0[62u].x))) / _2188;
            float _2332 = isnan(cbSceneParam._m0[41u].w) ? _2328 : (isnan(_2328) ? cbSceneParam._m0[41u].w : max(_2328, cbSceneParam._m0[41u].w));
            float _2375 = (cbSceneParam._m0[33u].x - sqrt(((_1986 * _1986) + (_1985 * _1985)) + (_1987 * _1987))) * cbSceneParam._m0[33u].y;
            float _4443 = isnan(0.0) ? _2375 : (isnan(_2375) ? 0.0 : max(_2375, 0.0));
            float _2382 = (isnan(1.0) ? _4443 : (isnan(_4443) ? 1.0 : min(_4443, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2189, cbSceneParam._m0[33u].w + _2190), _2332), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2189, _2190 - cbSceneParam._m0[33u].z), _2332), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2189 - cbSceneParam._m0[33u].z, _2190 - cbSceneParam._m0[33u].w), _2332), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2189 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2190), _2332), 0.0)).x), vec4(0.25)));
            float _2386 = 1.0 - (_2382 * cbSceneParam._m0[34u].x);
            float _2387 = 1.0 - (_2382 * cbSceneParam._m0[34u].y);
            float _2388 = 1.0 - (_2382 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2388) ? _2136 : (isnan(_2136) ? _2388 : min(_2136, _2388));
            frontier_phi_34_33_ladder_1 = isnan(_2387) ? _2135 : (isnan(_2135) ? _2387 : min(_2135, _2387));
            frontier_phi_34_33_ladder_2 = isnan(_2386) ? _2134 : (isnan(_2134) ? _2386 : min(_2134, _2386));
        }
        else
        {
            frontier_phi_34_33_ladder = _2136;
            frontier_phi_34_33_ladder_1 = _2135;
            frontier_phi_34_33_ladder_2 = _2134;
        }
        _2200 = frontier_phi_34_33_ladder_2;
        _2202 = frontier_phi_34_33_ladder_1;
        _2204 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2200 = _2134;
        _2202 = _2135;
        _2204 = _2136;
    }
    uvec4 _2209 = floatBitsToUint(cbInstanceData._m0[_253 + 5u]);
    uint _2211 = _2209.x * 14u;
    uint _2212 = _2211 + 13u;
    float _2219 = _914 + (-1.0);
    float _2224 = (cbLight._m0[_2212].x * _2219) + 1.0;
    float _2225 = (cbLight._m0[_2212].y * _2219) + 1.0;
    float _2226 = (cbLight._m0[_2212].z * _2219) + 1.0;
    float _2227 = (cbLight._m0[_2212].w * _2219) + 1.0;
    uint _2228 = _2211 + 5u;
    float _2234 = isnan(1.0) ? _2225 : (isnan(_2225) ? 1.0 : min(_2225, 1.0));
    uint _2238 = _2211 + 4u;
    float _2247 = isnan(1.0) ? _2224 : (isnan(_2224) ? 1.0 : min(_2224, 1.0));
    uint _2251 = _2211 | 1u;
    float _2262 = dot(vec3(cbLight._m0[_2211].xyz), vec3(_764, _765, _766));
    float _2265 = dot(vec3(cbLight._m0[_2251].xyz), vec3(_764, _765, _766));
    float _4479 = isnan(0.0) ? _2262 : (isnan(_2262) ? 0.0 : max(_2262, 0.0));
    float _4490 = isnan(0.0) ? _2265 : (isnan(_2265) ? 0.0 : max(_2265, 0.0));
    float _2270 = (isnan(1.0) ? _4479 : (isnan(_4479) ? 1.0 : min(_4479, 1.0))) * 0.3183098733425140380859375;
    float _2272 = (isnan(1.0) ? _4490 : (isnan(_4490) ? 1.0 : min(_4490, 1.0))) * 0.3183098733425140380859375;
    float _2279 = ((cbLight._m0[_2228].x * _2234) * _2272) + (((cbLight._m0[_2238].x * _2200) * _2247) * _2270);
    float _2280 = ((_2234 * cbLight._m0[_2228].y) * _2272) + (((cbLight._m0[_2238].y * _2202) * _2247) * _2270);
    float _2281 = ((_2234 * cbLight._m0[_2228].z) * _2272) + (((cbLight._m0[_2238].z * _2204) * _2247) * _2270);
    uvec4 _2285 = floatBitsToUint(cbLight._m0[_2211 + 12u]);
    bool _2287 = _2285.x == 0u;
    float _2389;
    float _2391;
    float _2393;
    if (_2287)
    {
        _2389 = _2279;
        _2391 = _2280;
        _2393 = _2281;
    }
    else
    {
        uint _2397 = _2211 + 6u;
        float _2413 = (dot(vec3(cbLight._m0[_2211 + 2u].xyz), vec3(_764, _765, _766)) * 0.5) + 0.5;
        float _2414 = _2413 * _2413;
        float _4501 = isnan(0.0) ? _2414 : (isnan(_2414) ? 0.0 : max(_2414, 0.0));
        float _2415 = isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0));
        float _2416 = isnan(1.0) ? _2226 : (isnan(_2226) ? 1.0 : min(_2226, 1.0));
        _2389 = (((cbLight._m0[_2397].x * 0.3183098733425140380859375) * _2415) * _2416) + _2279;
        _2391 = (((cbLight._m0[_2397].y * 0.3183098733425140380859375) * _2415) * _2416) + _2280;
        _2393 = (((cbLight._m0[_2397].z * 0.3183098733425140380859375) * _2415) * _2416) + _2281;
    }
    bool _2396 = _2285.y == 0u;
    float _2451;
    float _2453;
    float _2455;
    if (_2396)
    {
        _2451 = _2389;
        _2453 = _2391;
        _2455 = _2393;
    }
    else
    {
        uint _2613 = _2211 + 7u;
        float _2629 = (dot(vec3(cbLight._m0[_2211 + 3u].xyz), vec3(_764, _765, _766)) * 0.5) + 0.5;
        float _2630 = _2629 * _2629;
        float _4517 = isnan(0.0) ? _2630 : (isnan(_2630) ? 0.0 : max(_2630, 0.0));
        float _2631 = isnan(1.0) ? _4517 : (isnan(_4517) ? 1.0 : min(_4517, 1.0));
        float _2632 = isnan(1.0) ? _2227 : (isnan(_2227) ? 1.0 : min(_2227, 1.0));
        _2451 = (((cbLight._m0[_2613].x * 0.3183098733425140380859375) * _2631) * _2632) + _2389;
        _2453 = (((cbLight._m0[_2613].y * 0.3183098733425140380859375) * _2631) * _2632) + _2391;
        _2455 = (((cbLight._m0[_2613].z * 0.3183098733425140380859375) * _2631) * _2632) + _2393;
    }
    uint _2458 = _2211 + 8u;
    float _2471 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2211].w)) * _767) * 0.949999988079071044921875);
    float _2472 = _2471 * _2471;
    float _2473 = cbLight._m0[_2211].x + _843;
    float _2474 = cbLight._m0[_2211].y + _844;
    float _2475 = cbLight._m0[_2211].z + _845;
    float _2479 = inversesqrt(dot(vec3(_2473, _2474, _2475), vec3(_2473, _2474, _2475)));
    float _2480 = _2479 * _2473;
    float _2481 = _2479 * _2474;
    float _2482 = _2479 * _2475;
    float _2483 = dot(vec3(_764, _765, _766), vec3(cbLight._m0[_2211].xyz));
    float _4533 = isnan(0.0) ? _2483 : (isnan(_2483) ? 0.0 : max(_2483, 0.0));
    float _2486 = isnan(1.0) ? _4533 : (isnan(_4533) ? 1.0 : min(_4533, 1.0));
    float _4544 = isnan(0.0) ? _915 : (isnan(_915) ? 0.0 : max(_915, 0.0));
    float _2487 = isnan(1.0) ? _4544 : (isnan(_4544) ? 1.0 : min(_4544, 1.0));
    float _2488 = dot(vec3(_764, _765, _766), vec3(_2480, _2481, _2482));
    float _4555 = isnan(0.0) ? _2488 : (isnan(_2488) ? 0.0 : max(_2488, 0.0));
    float _2491 = isnan(1.0) ? _4555 : (isnan(_4555) ? 1.0 : min(_4555, 1.0));
    float _2492 = dot(vec3(cbLight._m0[_2211].xyz), vec3(_2480, _2481, _2482));
    float _4566 = isnan(0.0) ? _2492 : (isnan(_2492) ? 0.0 : max(_2492, 0.0));
    float _2496 = _2472 * _2472;
    float _2500 = ((_2491 * _2491) * (_2496 + (-1.0))) + 1.0;
    float _2511 = (exp2(log2(1.0 - (isnan(1.0) ? _4566 : (isnan(_4566) ? 1.0 : min(_4566, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2512 = 1.0 - _2472;
    float _2523 = (0.5 / (((_2487 * ((_2486 * _2512) + _2472)) + 9.9999999392252902907785028219223e-09) + (((_2487 * _2512) + _2472) * _2486))) * _2486;
    float _4577 = isnan(0.0) ? _2523 : (isnan(_2523) ? 0.0 : max(_2523, 0.0));
    float _2525 = (isnan(1.0) ? _4577 : (isnan(_4577) ? 1.0 : min(_4577, 1.0))) * (_2496 / ((_2500 * _2500) * 3.141590118408203125));
    uint _2539 = _2211 + 9u;
    float _2550 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2251].w)) * _767) * 0.949999988079071044921875);
    float _2551 = _2550 * _2550;
    float _2552 = cbLight._m0[_2251].x + _843;
    float _2553 = cbLight._m0[_2251].y + _844;
    float _2554 = cbLight._m0[_2251].z + _845;
    float _2558 = inversesqrt(dot(vec3(_2552, _2553, _2554), vec3(_2552, _2553, _2554)));
    float _2559 = _2558 * _2552;
    float _2560 = _2558 * _2553;
    float _2561 = _2558 * _2554;
    float _2562 = dot(vec3(_764, _765, _766), vec3(cbLight._m0[_2251].xyz));
    float _4588 = isnan(0.0) ? _2562 : (isnan(_2562) ? 0.0 : max(_2562, 0.0));
    float _2565 = isnan(1.0) ? _4588 : (isnan(_4588) ? 1.0 : min(_4588, 1.0));
    float _2566 = dot(vec3(_764, _765, _766), vec3(_2559, _2560, _2561));
    float _4599 = isnan(0.0) ? _2566 : (isnan(_2566) ? 0.0 : max(_2566, 0.0));
    float _2569 = isnan(1.0) ? _4599 : (isnan(_4599) ? 1.0 : min(_4599, 1.0));
    float _2570 = dot(vec3(cbLight._m0[_2251].xyz), vec3(_2559, _2560, _2561));
    float _4610 = isnan(0.0) ? _2570 : (isnan(_2570) ? 0.0 : max(_2570, 0.0));
    float _2574 = _2551 * _2551;
    float _2578 = ((_2569 * _2569) * (_2574 + (-1.0))) + 1.0;
    float _2587 = (exp2(log2(1.0 - (isnan(1.0) ? _4610 : (isnan(_4610) ? 1.0 : min(_4610, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2588 = 1.0 - _2551;
    float _2598 = (0.5 / (((_2487 * ((_2565 * _2588) + _2551)) + 9.9999999392252902907785028219223e-09) + (((_2487 * _2588) + _2551) * _2565))) * _2565;
    float _4621 = isnan(0.0) ? _2598 : (isnan(_2598) ? 0.0 : max(_2598, 0.0));
    float _2600 = (isnan(1.0) ? _4621 : (isnan(_4621) ? 1.0 : min(_4621, 1.0))) * (_2574 / ((_2578 * _2578) * 3.141590118408203125));
    float _2610 = (((_2587 * cbLight._m0[_2539].x) * _2600) * _2234) + ((((cbLight._m0[_2458].x * _2200) * _2511) * _2525) * _2247);
    float _2611 = (((_2587 * cbLight._m0[_2539].y) * _2600) * _2234) + ((((cbLight._m0[_2458].y * _2202) * _2511) * _2525) * _2247);
    float _2612 = (((_2587 * cbLight._m0[_2539].z) * _2600) * _2234) + ((((cbLight._m0[_2458].z * _2204) * _2511) * _2525) * _2247);
    float _2668;
    float _2670;
    float _2672;
    if (_2287)
    {
        _2668 = _2610;
        _2670 = _2611;
        _2672 = _2612;
    }
    else
    {
        uint _2674 = _2211 + 2u;
        uint _2678 = _2211 + 10u;
        float _2692 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2674].w)) * _767) * 0.949999988079071044921875);
        float _2693 = _2692 * _2692;
        float _2694 = cbLight._m0[_2674].x + _843;
        float _2695 = cbLight._m0[_2674].y + _844;
        float _2696 = cbLight._m0[_2674].z + _845;
        float _2700 = inversesqrt(dot(vec3(_2694, _2695, _2696), vec3(_2694, _2695, _2696)));
        float _2701 = _2700 * _2694;
        float _2702 = _2700 * _2695;
        float _2703 = _2700 * _2696;
        float _2704 = dot(vec3(_764, _765, _766), vec3(cbLight._m0[_2674].xyz));
        float _4632 = isnan(0.0) ? _2704 : (isnan(_2704) ? 0.0 : max(_2704, 0.0));
        float _2707 = isnan(1.0) ? _4632 : (isnan(_4632) ? 1.0 : min(_4632, 1.0));
        float _2708 = dot(vec3(_764, _765, _766), vec3(_2701, _2702, _2703));
        float _4643 = isnan(0.0) ? _2708 : (isnan(_2708) ? 0.0 : max(_2708, 0.0));
        float _2711 = isnan(1.0) ? _4643 : (isnan(_4643) ? 1.0 : min(_4643, 1.0));
        float _2712 = dot(vec3(cbLight._m0[_2674].xyz), vec3(_2701, _2702, _2703));
        float _4654 = isnan(0.0) ? _2712 : (isnan(_2712) ? 0.0 : max(_2712, 0.0));
        float _2716 = _2693 * _2693;
        float _2720 = ((_2711 * _2711) * (_2716 + (-1.0))) + 1.0;
        float _2729 = (exp2(log2(1.0 - (isnan(1.0) ? _4654 : (isnan(_4654) ? 1.0 : min(_4654, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2730 = 1.0 - _2693;
        float _2740 = (0.5 / (((_2487 * ((_2707 * _2730) + _2693)) + 9.9999999392252902907785028219223e-09) + (((_2487 * _2730) + _2693) * _2707))) * _2707;
        float _4665 = isnan(0.0) ? _2740 : (isnan(_2740) ? 0.0 : max(_2740, 0.0));
        float _2742 = (isnan(1.0) ? _4665 : (isnan(_4665) ? 1.0 : min(_4665, 1.0))) * (_2716 / ((_2720 * _2720) * 3.141590118408203125));
        float _2743 = isnan(1.0) ? _2226 : (isnan(_2226) ? 1.0 : min(_2226, 1.0));
        _2668 = (((_2729 * cbLight._m0[_2678].x) * _2742) * _2743) + _2610;
        _2670 = (((_2729 * cbLight._m0[_2678].y) * _2742) * _2743) + _2611;
        _2672 = (((_2729 * cbLight._m0[_2678].z) * _2742) * _2743) + _2612;
    }
    float _2774;
    float _2776;
    float _2778;
    if (_2396)
    {
        _2774 = _2668;
        _2776 = _2670;
        _2778 = _2672;
    }
    else
    {
        uint _2785 = _2211 + 3u;
        uint _2789 = _2211 + 11u;
        float _2803 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2785].w)) * _767) * 0.949999988079071044921875);
        float _2804 = _2803 * _2803;
        float _2805 = cbLight._m0[_2785].x + _843;
        float _2806 = cbLight._m0[_2785].y + _844;
        float _2807 = cbLight._m0[_2785].z + _845;
        float _2811 = inversesqrt(dot(vec3(_2805, _2806, _2807), vec3(_2805, _2806, _2807)));
        float _2812 = _2811 * _2805;
        float _2813 = _2811 * _2806;
        float _2814 = _2811 * _2807;
        float _2815 = dot(vec3(_764, _765, _766), vec3(cbLight._m0[_2785].xyz));
        float _4681 = isnan(0.0) ? _2815 : (isnan(_2815) ? 0.0 : max(_2815, 0.0));
        float _2818 = isnan(1.0) ? _4681 : (isnan(_4681) ? 1.0 : min(_4681, 1.0));
        float _2819 = dot(vec3(_764, _765, _766), vec3(_2812, _2813, _2814));
        float _4692 = isnan(0.0) ? _2819 : (isnan(_2819) ? 0.0 : max(_2819, 0.0));
        float _2822 = isnan(1.0) ? _4692 : (isnan(_4692) ? 1.0 : min(_4692, 1.0));
        float _2823 = dot(vec3(cbLight._m0[_2785].xyz), vec3(_2812, _2813, _2814));
        float _4703 = isnan(0.0) ? _2823 : (isnan(_2823) ? 0.0 : max(_2823, 0.0));
        float _2827 = _2804 * _2804;
        float _2831 = ((_2822 * _2822) * (_2827 + (-1.0))) + 1.0;
        float _2840 = (exp2(log2(1.0 - (isnan(1.0) ? _4703 : (isnan(_4703) ? 1.0 : min(_4703, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2841 = 1.0 - _2804;
        float _2851 = (0.5 / (((_2487 * ((_2818 * _2841) + _2804)) + 9.9999999392252902907785028219223e-09) + (((_2487 * _2841) + _2804) * _2818))) * _2818;
        float _4714 = isnan(0.0) ? _2851 : (isnan(_2851) ? 0.0 : max(_2851, 0.0));
        float _2853 = (isnan(1.0) ? _4714 : (isnan(_4714) ? 1.0 : min(_4714, 1.0))) * (_2827 / ((_2831 * _2831) * 3.141590118408203125));
        float _2854 = isnan(1.0) ? _2227 : (isnan(_2227) ? 1.0 : min(_2227, 1.0));
        _2774 = (((_2840 * cbLight._m0[_2789].x) * _2853) * _2854) + _2668;
        _2776 = (((_2840 * cbLight._m0[_2789].y) * _2853) * _2854) + _2670;
        _2778 = (((_2840 * cbLight._m0[_2789].z) * _2853) * _2854) + _2672;
    }
    float _2920;
    float _2922;
    float _2924;
    float _2926;
    float _2928;
    float _2930;
    if (_2209.y == 0u)
    {
        uvec4 _2875 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2876 = _2875.x;
        uint _2887 = uint((float(_2875.y) * floor(float(uint(cbSceneParam._m0[85u].y * _852) / _2876))) + floor(float(uint(cbSceneParam._m0[85u].x * _851) / _2876)));
        float _2897 = (log2(_1987 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2898 = isnan(0.0) ? _2897 : (isnan(_2897) ? 0.0 : max(_2897, 0.0));
        uint _2901 = uint(isnan(14.0) ? _2898 : (isnan(_2898) ? 14.0 : min(_2898, 14.0)));
        uvec4 _2906 = texelFetch(g_lightClusterGridBuffer, int(((_2901 << 2u) + (_2887 << 6u)) >> 2u));
        uint _2907 = _2906.x;
        uint _2908 = _2875.z;
        float _2987;
        float _2989;
        float _2991;
        float _2993;
        float _2995;
        float _2997;
        if (((((1u << ((_2908 >> 4u) & 15u)) + 4294967295u) & _2907) == 0u) || ((_2908 & 240u) == 0u))
        {
            _2987 = 0.0;
            _2989 = 0.0;
            _2991 = 0.0;
            _2993 = 0.0;
            _2995 = 0.0;
            _2997 = 0.0;
        }
        else
        {
            float _2988;
            float _2990;
            float _2992;
            float _2994;
            float _2996;
            float _2998;
            float _3131 = 0.0;
            float _3132 = 0.0;
            float _3133 = 0.0;
            float _3134 = 0.0;
            float _3135 = 0.0;
            float _3136 = 0.0;
            uint _3137 = 0u;
            uint _3146;
            bool _3147;
            for (;;)
            {
                _3146 = texelFetch(g_lightClassification, int((((_2901 << 5u) + (_2887 << 9u)) + (_3137 << 2u)) >> 2u)).x;
                _3147 = _3146 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3147)
                {
                    frontier_phi_66_pred = _3136;
                    frontier_phi_66_pred_1 = _3135;
                    frontier_phi_66_pred_2 = _3134;
                    frontier_phi_66_pred_3 = _3133;
                    frontier_phi_66_pred_4 = _3132;
                    frontier_phi_66_pred_5 = _3131;
                }
                else
                {
                    float _3255;
                    float _3256;
                    float _3257;
                    float _3258;
                    float _3259;
                    float _3260;
                    uint _3261;
                    _3255 = _3131;
                    _3256 = _3132;
                    _3257 = _3133;
                    _3258 = _3134;
                    _3259 = _3135;
                    _3260 = _3136;
                    _3261 = _3146;
                    float _3187;
                    float _3188;
                    float _3189;
                    float _3190;
                    float _3191;
                    float _3192;
                    for (;;)
                    {
                        uint _3265 = uint(findLSB(_3261)) + (_3137 << 5u);
                        uint _3262 = (_3261 + 4294967295u) & _3261;
                        uint _3267 = _3265 * 48u;
                        vec4 _3281 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3267)).x, texelFetch(g_PointLightRenderingBuffer, int(_3267 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3267 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3267 + 3u)).x));
                        uint _3287 = (_3265 * 48u) + 4u;
                        vec4 _3300 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3287)).x, texelFetch(g_PointLightRenderingBuffer, int(_3287 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3287 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3287 + 3u)).x));
                        uint _3306 = (_3265 * 48u) + 8u;
                        vec3 _3317 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3306)).x, texelFetch(g_PointLightRenderingBuffer, int(_3306 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3306 + 2u)).x));
                        float _3321 = _3281.x - _1985;
                        float _3322 = _3281.y - _1986;
                        float _3323 = _3281.z - _1987;
                        float _3324 = dot(vec3(_3321, _3322, _3323), vec3(_3321, _3322, _3323));
                        float _3327 = inversesqrt(_3324);
                        float _3328 = _3327 * _3321;
                        float _3329 = _3327 * _3322;
                        float _3330 = _3327 * _3323;
                        float _3331 = dot(vec3(_870, _873, _876), vec3(_3328, _3329, _3330));
                        float _3336 = 1.0 - (_3324 * _3281.w);
                        float _4740 = isnan(0.0) ? _3336 : (isnan(_3336) ? 0.0 : max(_3336, 0.0));
                        float _3337 = isnan(1.0) ? _4740 : (isnan(_4740) ? 1.0 : min(_4740, 1.0));
                        float _3338 = sqrt(_3324) * _3300.w;
                        float _3341 = 1.39999997615814208984375 / (_3338 + 1.39999997615814208984375);
                        float _3342 = _3341 * _3341;
                        float _3345 = ((1.0 - _3342) * _3331) + _3342;
                        float _3348 = _3338 * _3338;
                        float _3352 = ((isnan(0.0) ? _3345 : (isnan(_3345) ? 0.0 : max(_3345, 0.0))) * _3337) / ((_3348 * 0.699999988079071044921875) + 1.0);
                        float _3356 = (-0.0) - _1985;
                        float _3357 = (-0.0) - _1986;
                        float _3358 = (-0.0) - _1987;
                        float _3362 = inversesqrt(dot(vec3(_3356, _3357, _3358), vec3(_3356, _3357, _3358)));
                        float _3363 = _3362 * _3356;
                        float _3364 = _3362 * _3357;
                        float _3365 = _3362 * _3358;
                        float _3372 = exp2(log2(1.0 / ((_3348 * 3.5) + 5.0)) * 0.25);
                        float _3373 = 1.0 - _930;
                        float _3380 = sqrt(1.0 - ((1.0 - (_3373 * _3373)) * (1.0 - (_3372 * _3372))));
                        float _3381 = _3380 * _3380;
                        float _3382 = _3381 * _3381;
                        float _3383 = _3363 + _3328;
                        float _3384 = _3364 + _3329;
                        float _3385 = _3365 + _3330;
                        float _3389 = inversesqrt(dot(vec3(_3383, _3384, _3385), vec3(_3383, _3384, _3385)));
                        float _3393 = dot(vec3(_870, _873, _876), vec3(_3363, _3364, _3365));
                        float _4756 = isnan(0.0) ? _3393 : (isnan(_3393) ? 0.0 : max(_3393, 0.0));
                        float _3396 = isnan(1.0) ? _4756 : (isnan(_4756) ? 1.0 : min(_4756, 1.0));
                        float _3397 = dot(vec3(_870, _873, _876), vec3(_3389 * _3383, _3389 * _3384, _3389 * _3385));
                        float _4767 = isnan(0.0) ? _3397 : (isnan(_3397) ? 0.0 : max(_3397, 0.0));
                        float _3400 = isnan(1.0) ? _4767 : (isnan(_4767) ? 1.0 : min(_4767, 1.0));
                        float _3404 = ((_3400 * _3400) * (_3382 + (-1.0))) + 1.0;
                        float _3405 = _3341 * _3381;
                        float _3406 = _3405 * _3405;
                        float _3409 = ((1.0 - _3406) * _3331) + _3406;
                        float _4778 = isnan(0.0) ? _3409 : (isnan(_3409) ? 0.0 : max(_3409, 0.0));
                        float _3410 = isnan(1.0) ? _4778 : (isnan(_4778) ? 1.0 : min(_4778, 1.0));
                        float _3411 = 1.0 - _3381;
                        float _3421 = (0.5 / (((_3410 * ((_3396 * _3411) + _3381)) + 9.9999999392252902907785028219223e-09) + (((_3410 * _3411) + _3381) * _3396))) * _3410;
                        float _4789 = isnan(0.0) ? _3421 : (isnan(_3421) ? 0.0 : max(_3421, 0.0));
                        float _3432 = (((_3382 * 3.1415927410125732421875) * (isnan(1.0) ? _4789 : (isnan(_4789) ? 1.0 : min(_4789, 1.0)))) / ((_3404 * _3404) * ((_3348 * 2.1991131305694580078125) + 3.141590118408203125))) * _3337;
                        _3190 = (_3352 * _3300.x) + _3258;
                        _3191 = (_3352 * _3300.y) + _3259;
                        _3192 = (_3352 * _3300.z) + _3260;
                        _3187 = (_3432 * _3317.x) + _3255;
                        _3188 = (_3432 * _3317.y) + _3256;
                        _3189 = (_3432 * _3317.z) + _3257;
                        if (_3262 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3255 = _3187;
                            _3256 = _3188;
                            _3257 = _3189;
                            _3258 = _3190;
                            _3259 = _3191;
                            _3260 = _3192;
                            _3261 = _3262;
                        }
                    }
                    frontier_phi_66_pred = _3192;
                    frontier_phi_66_pred_1 = _3191;
                    frontier_phi_66_pred_2 = _3190;
                    frontier_phi_66_pred_3 = _3189;
                    frontier_phi_66_pred_4 = _3188;
                    frontier_phi_66_pred_5 = _3187;
                }
                _2998 = frontier_phi_66_pred;
                _2996 = frontier_phi_66_pred_1;
                _2994 = frontier_phi_66_pred_2;
                _2992 = frontier_phi_66_pred_3;
                _2990 = frontier_phi_66_pred_4;
                _2988 = frontier_phi_66_pred_5;
                uint _3138 = _3137 + 1u;
                if (_3138 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3131 = _2988;
                    _3132 = _2990;
                    _3133 = _2992;
                    _3134 = _2994;
                    _3135 = _2996;
                    _3136 = _2998;
                    _3137 = _3138;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2987 = _2988;
            _2989 = _2990;
            _2991 = _2992;
            _2993 = _2994;
            _2995 = _2996;
            _2997 = _2998;
        }
        uvec4 _3001 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3002 = _3001.z;
        uint _3004 = (_3002 >> 8u) & 15u;
        float _3099;
        float _3101;
        float _3103;
        float _3105;
        float _3107;
        float _3109;
        if (((4294967295u << _3004) & _2907) == 0u)
        {
            _3099 = _2987;
            _3101 = _2989;
            _3103 = _2991;
            _3105 = _2993;
            _3107 = _2995;
            _3109 = _2997;
        }
        else
        {
            float _3124 = inversesqrt(dot(vec3(_1985, _1986, _1987), vec3(_1985, _1986, _1987)));
            float _3125 = _3124 * _1985;
            float _3126 = _3124 * _1986;
            float _3127 = _3124 * _1987;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3004 < ((_3002 >> 12u) & 15u))
            {
                float _3100;
                float _3102;
                float _3104;
                float _3106;
                float _3108;
                float _3110;
                float _3238 = _2987;
                float _3239 = _2989;
                float _3240 = _2991;
                float _3241 = _2993;
                float _3242 = _2995;
                float _3243 = _2997;
                uint _3244 = _3004;
                uint _3253;
                bool _3254;
                for (;;)
                {
                    _3253 = texelFetch(g_lightClassification, int((((_2901 << 5u) + (_2887 << 9u)) + (_3244 << 2u)) >> 2u)).x;
                    _3254 = _3253 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3254)
                    {
                        frontier_phi_72_pred = _3243;
                        frontier_phi_72_pred_1 = _3242;
                        frontier_phi_72_pred_2 = _3241;
                        frontier_phi_72_pred_3 = _3240;
                        frontier_phi_72_pred_4 = _3239;
                        frontier_phi_72_pred_5 = _3238;
                    }
                    else
                    {
                        float _3437;
                        float _3438;
                        float _3439;
                        float _3440;
                        float _3441;
                        float _3442;
                        float _3730;
                        float _3731;
                        float _3732;
                        float _3733;
                        float _3734;
                        float _3735;
                        float _3450 = _3238;
                        float _3451 = _3239;
                        float _3452 = _3240;
                        float _3453 = _3241;
                        float _3454 = _3242;
                        float _3455 = _3243;
                        uint _3456 = _3253;
                        uint _3457;
                        vec4 _3482;
                        float _3483;
                        vec4 _3498;
                        vec3 _3510;
                        vec4 _3525;
                        vec4 _3540;
                        float _3586;
                        bool _3587;
                        for (;;)
                        {
                            uint _3467 = ((_3244 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3456));
                            _3457 = (_3456 + 4294967295u) & _3456;
                            uint _3469 = _3467 * 40u;
                            _3482 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3469)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3469 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3469 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3469 + 3u)).x));
                            _3483 = _3482.w;
                            uint _3485 = (_3467 * 40u) + 4u;
                            _3498 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3485)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3485 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3485 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3485 + 3u)).x));
                            uint _3500 = (_3467 * 40u) + 8u;
                            _3510 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3500)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3500 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3500 + 2u)).x));
                            uint _3512 = (_3467 * 40u) + 16u;
                            _3525 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3512)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3512 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3512 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3512 + 3u)).x));
                            uint _3527 = (_3467 * 40u) + 20u;
                            _3540 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3527)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3527 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3527 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3527 + 3u)).x));
                            uint _3542 = (_3467 * 40u) + 24u;
                            vec4 _3555 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3542)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3542 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3542 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3542 + 3u)).x));
                            uint _3561 = (_3467 * 40u) + 28u;
                            vec4 _3574 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3561)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3561 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3561 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3561 + 3u)).x));
                            _3586 = fma(_1987, _3574.z, fma(_1986, _3574.y, _3574.x * _1985)) + _3574.w;
                            _3587 = !((fma(_1987, _3555.z, fma(_1986, _3555.y, _3555.x * _1985)) + _3555.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3587)
                            {
                                float _3614 = _3482.x - _1985;
                                float _3615 = _3482.y - _1986;
                                float _3616 = _3482.z - _1987;
                                float _3617 = dot(vec3(_3614, _3615, _3616), vec3(_3614, _3615, _3616));
                                float _3620 = inversesqrt(_3617);
                                float _3621 = _3620 * _3614;
                                float _3622 = _3620 * _3615;
                                float _3623 = _3620 * _3616;
                                float _3627 = 1.0 - (_3617 / (_3483 * _3483));
                                float _4800 = isnan(0.0) ? _3627 : (isnan(_3627) ? 0.0 : max(_3627, 0.0));
                                float _3628 = isnan(1.0) ? _4800 : (isnan(_4800) ? 1.0 : min(_4800, 1.0));
                                float _3632 = sqrt(_3617) * _3498.w;
                                float _3634 = 1.39999997615814208984375 / (_3632 + 1.39999997615814208984375);
                                float _3635 = _3634 * _3634;
                                float _3638 = ((1.0 - _3635) * dot(vec3(_3621, _3622, _3623), vec3(_870, _873, _876))) + _3635;
                                float _3641 = _3632 * _3632;
                                float _3645 = (fma(_1987, _3525.z, fma(_1986, _3525.y, _3525.x * _1985)) + _3525.w) / _3586;
                                float _3646 = (fma(_1987, _3540.z, fma(_1986, _3540.y, _3540.x * _1985)) + _3540.w) / _3586;
                                float _3650 = 1.0 - dot(vec2(_3645, _3646), vec2(_3645, _3646));
                                float _4816 = isnan(0.0) ? _3650 : (isnan(_3650) ? 0.0 : max(_3650, 0.0));
                                float _3651 = isnan(1.0) ? _4816 : (isnan(_4816) ? 1.0 : min(_4816, 1.0));
                                float _3652 = _3651 * (((isnan(0.0) ? _3638 : (isnan(_3638) ? 0.0 : max(_3638, 0.0))) * _3628) / ((_3641 * 0.699999988079071044921875) + 1.0));
                                float _3664 = exp2(log2(1.0 / ((_3641 * 3.5) + 5.0)) * 0.25);
                                float _3665 = 1.0 - _930;
                                float _3672 = sqrt(1.0 - ((1.0 - (_3665 * _3665)) * (1.0 - (_3664 * _3664))));
                                float _3673 = _3672 * _3672;
                                float _3674 = _3673 * _3673;
                                float _3675 = _3621 - _3125;
                                float _3676 = _3622 - _3126;
                                float _3677 = _3623 - _3127;
                                float _3681 = inversesqrt(dot(vec3(_3675, _3676, _3677), vec3(_3675, _3676, _3677)));
                                float _3685 = dot(vec3(_870, _873, _876), vec3((-0.0) - _3125, (-0.0) - _3126, (-0.0) - _3127));
                                float _4827 = isnan(0.0) ? _3685 : (isnan(_3685) ? 0.0 : max(_3685, 0.0));
                                float _3688 = isnan(1.0) ? _4827 : (isnan(_4827) ? 1.0 : min(_4827, 1.0));
                                float _3689 = dot(vec3(_870, _873, _876), vec3(_3681 * _3675, _3681 * _3676, _3681 * _3677));
                                float _4838 = isnan(0.0) ? _3689 : (isnan(_3689) ? 0.0 : max(_3689, 0.0));
                                float _3692 = isnan(1.0) ? _4838 : (isnan(_4838) ? 1.0 : min(_4838, 1.0));
                                float _3696 = ((_3692 * _3692) * (_3674 + (-1.0))) + 1.0;
                                float _3697 = _3634 * _3673;
                                float _3698 = _3697 * _3697;
                                float _3704 = ((1.0 - _3698) * dot(vec3(_870, _873, _876), vec3(_3621, _3622, _3623))) + _3698;
                                float _4849 = isnan(0.0) ? _3704 : (isnan(_3704) ? 0.0 : max(_3704, 0.0));
                                float _3705 = isnan(1.0) ? _4849 : (isnan(_4849) ? 1.0 : min(_4849, 1.0));
                                float _3706 = 1.0 - _3673;
                                float _3716 = (0.5 / (((_3705 * ((_3688 * _3706) + _3673)) + 9.9999999392252902907785028219223e-09) + (((_3705 * _3706) + _3673) * _3688))) * _3705;
                                float _4860 = isnan(0.0) ? _3716 : (isnan(_3716) ? 0.0 : max(_3716, 0.0));
                                float _3726 = (_3651 * _3628) * (((_3674 * 3.1415927410125732421875) * (isnan(1.0) ? _4860 : (isnan(_4860) ? 1.0 : min(_4860, 1.0)))) / ((_3696 * _3696) * ((_3641 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3652 * _3498.y;
                                frontier_phi_78_pred_1 = _3652 * _3498.x;
                                frontier_phi_78_pred_2 = _3726 * _3510.z;
                                frontier_phi_78_pred_3 = _3726 * _3510.y;
                                frontier_phi_78_pred_4 = _3726 * _3510.x;
                                frontier_phi_78_pred_5 = _3652 * _3498.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3734 = frontier_phi_78_pred;
                            _3733 = frontier_phi_78_pred_1;
                            _3732 = frontier_phi_78_pred_2;
                            _3731 = frontier_phi_78_pred_3;
                            _3730 = frontier_phi_78_pred_4;
                            _3735 = frontier_phi_78_pred_5;
                            _3440 = _3733 + _3453;
                            _3441 = _3734 + _3454;
                            _3442 = _3735 + _3455;
                            _3437 = _3730 + _3450;
                            _3438 = _3731 + _3451;
                            _3439 = _3732 + _3452;
                            if (_3457 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3450 = _3437;
                                _3451 = _3438;
                                _3452 = _3439;
                                _3453 = _3440;
                                _3454 = _3441;
                                _3455 = _3442;
                                _3456 = _3457;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3442;
                        frontier_phi_72_pred_1 = _3441;
                        frontier_phi_72_pred_2 = _3440;
                        frontier_phi_72_pred_3 = _3439;
                        frontier_phi_72_pred_4 = _3438;
                        frontier_phi_72_pred_5 = _3437;
                    }
                    _3110 = frontier_phi_72_pred;
                    _3108 = frontier_phi_72_pred_1;
                    _3106 = frontier_phi_72_pred_2;
                    _3104 = frontier_phi_72_pred_3;
                    _3102 = frontier_phi_72_pred_4;
                    _3100 = frontier_phi_72_pred_5;
                    uint _3245 = _3244 + 1u;
                    if (_3245 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3238 = _3100;
                        _3239 = _3102;
                        _3240 = _3104;
                        _3241 = _3106;
                        _3242 = _3108;
                        _3243 = _3110;
                        _3244 = _3245;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3110;
                frontier_phi_60_61_ladder_1 = _3108;
                frontier_phi_60_61_ladder_2 = _3104;
                frontier_phi_60_61_ladder_3 = _3102;
                frontier_phi_60_61_ladder_4 = _3100;
                frontier_phi_60_61_ladder_5 = _3106;
            }
            else
            {
                frontier_phi_60_61_ladder = _2997;
                frontier_phi_60_61_ladder_1 = _2995;
                frontier_phi_60_61_ladder_2 = _2991;
                frontier_phi_60_61_ladder_3 = _2989;
                frontier_phi_60_61_ladder_4 = _2987;
                frontier_phi_60_61_ladder_5 = _2993;
            }
            _3099 = frontier_phi_60_61_ladder_4;
            _3101 = frontier_phi_60_61_ladder_3;
            _3103 = frontier_phi_60_61_ladder_2;
            _3105 = frontier_phi_60_61_ladder_5;
            _3107 = frontier_phi_60_61_ladder_1;
            _3109 = frontier_phi_60_61_ladder;
        }
        float _3114 = isnan(1.0) ? _914 : (isnan(_914) ? 1.0 : min(_914, 1.0));
        _2920 = (_3114 * _3105) + _2451;
        _2922 = (_3114 * _3107) + _2453;
        _2924 = (_3114 * _3109) + _2455;
        _2926 = ((_3099 * 0.039999999105930328369140625) * _3114) + _2774;
        _2928 = ((_3101 * 0.039999999105930328369140625) * _3114) + _2776;
        _2930 = ((_3103 * 0.039999999105930328369140625) * _3114) + _2778;
    }
    else
    {
        _2920 = _2451;
        _2922 = _2453;
        _2924 = _2455;
        _2926 = _2774;
        _2928 = _2776;
        _2930 = _2778;
    }
    float _4876 = isnan(0.0) ? _899 : (isnan(_899) ? 0.0 : max(_899, 0.0));
    float _4887 = isnan(0.0) ? _900 : (isnan(_900) ? 0.0 : max(_900, 0.0));
    float _4898 = isnan(0.0) ? _901 : (isnan(_901) ? 0.0 : max(_901, 0.0));
    uint _2950 = _253 + 6u;
    float _2958 = _851 / cbSceneParam._m0[86u].x;
    float _2959 = _852 / cbSceneParam._m0[86u].y;
    vec4 _2973 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2958, _2959, (log2((isnan(cbSceneParam._m0[77u].w) ? _785 : (isnan(_785) ? cbSceneParam._m0[77u].w : min(_785, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2975 = _2973.x;
    float _2976 = _2973.y;
    float _2977 = _2973.z;
    float _2978 = _2973.w;
    float _3049;
    float _3051;
    float _3053;
    float _3055;
    if (_785 > cbSceneParam._m0[78u].w)
    {
        float _3012 = isnan(_785) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _785 : min(cbSceneParam._m0[80u].w, _785));
        float _3013 = _3012 / _785;
        float _3024 = _3013 * _836;
        float _3025 = _837 * _3013;
        float _3026 = (-0.0) - _3025;
        float _3027 = _3013 * _838;
        float _3029 = (cbSceneParam._m0[77u].w * _3026) / _3012;
        float _3030 = _3029 + cbSceneParam._m0[79u].w;
        float _3031 = cbSceneParam._m0[79u].w - _3025;
        float _3037 = sqrt(((_3024 * _3024) + (_3025 * _3025)) + (_3027 * _3027));
        float _3040 = (1.0 - (cbSceneParam._m0[77u].w / _3012)) * _3037;
        float _3045 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3047 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3200;
        if (abs((_3026 - _3029) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3200 = ((((_3030 > 0.0) ? exp2(_3045 * _3030) : (2.0 - exp2(_3047 * _3030))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3040;
        }
        else
        {
            float _3160 = 1.0 / cbSceneParam._m0[80u].x;
            float _3161 = isnan(_3031) ? _3030 : (isnan(_3030) ? _3031 : max(_3030, _3031));
            float _3162 = isnan(_3031) ? _3030 : (isnan(_3030) ? _3031 : min(_3030, _3031));
            float _3171 = isnan(0.0) ? _3161 : (isnan(_3161) ? 0.0 : min(_3161, 0.0));
            float _3172 = isnan(0.0) ? _3162 : (isnan(_3162) ? 0.0 : min(_3162, 0.0));
            _3200 = ((abs(_3037 / _3026) * cbSceneParam._m0[80u].y) * ((((_3171 - _3172) * 2.0) - ((exp2(_3045 * (isnan(0.0) ? _3161 : (isnan(_3161) ? 0.0 : max(_3161, 0.0)))) - exp2(_3045 * (isnan(0.0) ? _3162 : (isnan(_3162) ? 0.0 : max(_3162, 0.0))))) * _3160)) - ((exp2(_3047 * _3171) - exp2(_3047 * _3172)) * _3160))) + (_3040 * cbSceneParam._m0[80u].z);
        }
        vec4 _3202 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2958, _2959, 1.0), 0.0);
        float _3211 = exp2((_3200 * (-1.44269502162933349609375)) * (1.0 - _3202.w));
        float _3212 = log2(_3211);
        float _3228 = log2(_2978);
        _3049 = (exp2(_3228 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3212 * cbSceneParam._m0[78u].x)) * _3202.x) / cbSceneParam._m0[78u].x)) + _2975;
        _3051 = (exp2(_3228 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3212 * cbSceneParam._m0[78u].y)) * _3202.y) / cbSceneParam._m0[78u].y)) + _2976;
        _3053 = (exp2(_3228 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3212 * cbSceneParam._m0[78u].z)) * _3202.z) / cbSceneParam._m0[78u].z)) + _2977;
        _3055 = _3211 * _2978;
    }
    else
    {
        _3049 = _2975;
        _3051 = _2976;
        _3053 = _2977;
        _3055 = _2978;
    }
    float _3067 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3068 = _3067 == 3.0;
    float _3069 = log2(_3055);
    float _3076 = exp2(_3069 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4876 : (isnan(_4876) ? 1.0 : min(_4876, 1.0))) * (_2920 + ((isnan(0.0) ? _1640 : (isnan(_1640) ? 0.0 : max(_1640, 0.0))) * _914))) + ((_2926 + ((isnan(0.0) ? _1932 : (isnan(_1932) ? 0.0 : max(_1932, 0.0))) * _1719)) * cbPerFrame._m0[3u].x));
    float _3077 = exp2(_3069 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4887 : (isnan(_4887) ? 1.0 : min(_4887, 1.0))) * (_2922 + ((isnan(0.0) ? _1643 : (isnan(_1643) ? 0.0 : max(_1643, 0.0))) * _914))) + ((_2928 + ((isnan(0.0) ? _1935 : (isnan(_1935) ? 0.0 : max(_1935, 0.0))) * _1719)) * cbPerFrame._m0[3u].x));
    float _3078 = exp2(_3069 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4898 : (isnan(_4898) ? 1.0 : min(_4898, 1.0))) * (_2924 + ((isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0))) * _914))) + ((_2930 + ((isnan(0.0) ? _1938 : (isnan(_1938) ? 0.0 : max(_1938, 0.0))) * _1719)) * cbPerFrame._m0[3u].x));
    float _3087 = (_3067 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3087 * (_3068 ? _3076 : (_3076 + (cbSceneParam._m0[72u].w * _3049)));
    SV_Target.y = _3087 * (_3068 ? _3077 : (_3077 + (cbSceneParam._m0[72u].w * _3051)));
    SV_Target.z = _3087 * (_3068 ? _3078 : (_3078 + (cbSceneParam._m0[72u].w * _3053)));
    SV_Target.w = cbInstanceData._m0[_2950].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2950].w;
}


