#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1176;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _210 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _211 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _212 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _218 = inversesqrt(dot(vec3(_210, _211, _212), vec3(_210, _211, _212)));
    float _219 = _218 * _210;
    float _220 = _218 * _211;
    float _221 = _218 * _212;
    float _225 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _226 = _225 * NORMAL.x;
    float _227 = _225 * NORMAL.y;
    float _228 = _225 * NORMAL.z;
    float _232 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _233 = _232 * TANGENT.x;
    float _234 = _232 * TANGENT.y;
    float _235 = _232 * TANGENT.z;
    uint _238 = uint(roundEven(NORMAL.w)) * 13u;
    uint _244 = _238 + 1u;
    uint _248 = _238 + 2u;
    float _257 = sqrt(((cbInstanceData._m0[_244].x * cbInstanceData._m0[_244].x) + (cbInstanceData._m0[_238].x * cbInstanceData._m0[_238].x)) + (cbInstanceData._m0[_248].x * cbInstanceData._m0[_248].x));
    float _258 = _257 * TEXCOORD.z;
    float _259 = _257 * TEXCOORD.w;
    vec4 _279 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _285 = _279.x * cbMtdParam._m0[11u].x;
    float _286 = _279.y * cbMtdParam._m0[11u].y;
    float _287 = _279.z * cbMtdParam._m0[11u].z;
    vec4 _306 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _258) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _259) + cbTextureTilingScale._m0[5u].w));
    vec4 _344 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _346 = _344.x;
    float _356 = dot(vec4(_346, _344.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _373 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_346 - _356) * cbMtdParam._m0[24u].x) + _356) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3504 = isnan(0.0) ? _373 : (isnan(_373) ? 0.0 : max(_373, 0.0));
    float _374 = isnan(1.0) ? _3504 : (isnan(_3504) ? 1.0 : min(_3504, 1.0));
    float _381 = (_374 * ((_306.x * cbMtdParam._m0[12u].x) - _285)) + _285;
    float _382 = (_374 * ((_306.y * cbMtdParam._m0[12u].y) - _286)) + _286;
    float _383 = (_374 * ((_306.z * cbMtdParam._m0[12u].z) - _287)) + _287;
    vec4 _402 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _258) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _259) + cbTextureTilingScale._m0[14u].w));
    vec4 _422 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _258) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _259) + cbTextureTilingScale._m0[20u].w));
    vec4 _449 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _258) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _259) + cbTextureTilingScale._m0[4u].w));
    vec4 _466 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _468 = _466.x;
    float _469 = _466.y;
    float _470 = _466.z;
    float _479 = ((_449.z - _470) * _374) + _470;
    float _482 = ((((_449.x - _468) * _374) + _468) * 2.0) + (-1.0);
    float _483 = ((((_449.y - _469) * _374) + _469) * 2.0) + (-1.0);
    float _484 = dot(vec2(_482, _483), vec2(_482, _483));
    float _3515 = isnan(0.0) ? _484 : (isnan(_484) ? 0.0 : max(_484, 0.0));
    float _489 = sqrt(1.0 - (isnan(1.0) ? _3515 : (isnan(_3515) ? 1.0 : min(_3515, 1.0))));
    float _492 = _482 + ((((_422.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x);
    float _493 = _483 + ((((_422.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x);
    float _496 = fma(_489, _226, fma(_493, _233, _492 * _219));
    float _499 = fma(_489, _227, fma(_493, _234, _492 * _220));
    float _502 = fma(_489, _228, fma(_493, _235, _492 * _221));
    float _506 = inversesqrt(dot(vec3(_496, _499, _502), vec3(_496, _499, _502)));
    vec4 _522 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _550 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _258) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _259) + cbTextureTilingScale._m0[11u].w));
    float _552 = _550.x;
    float _553 = 1.0 - _552;
    float _557 = ((_552 - _553) * cbMtdParam._m0[24u].z) + _553;
    float _559 = (cbMtdParam._m0[19u].x + dot(vec4(_506 * _496, _506 * _499, _506 * _502, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_557 * cbMtdParam._m0[21u].z);
    float _3526 = isnan(0.0) ? _559 : (isnan(_559) ? 0.0 : max(_559, 0.0));
    float _560 = isnan(1.0) ? _3526 : (isnan(_3526) ? 1.0 : min(_3526, 1.0));
    float _575 = (TEXCOORD_14.x - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_14.x)) * (_557 + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3537 = isnan(0.0) ? _575 : (isnan(_575) ? 0.0 : max(_575, 0.0));
    float _576 = isnan(1.0) ? _3537 : (isnan(_3537) ? 1.0 : min(_3537, 1.0));
    float _580 = ((_560 * ((_402.x * cbMtdParam._m0[18u].x) - _381)) * _576) + _381;
    float _581 = ((_560 * ((_402.y * cbMtdParam._m0[18u].y) - _382)) * _576) + _382;
    float _582 = ((_560 * ((_402.z * cbMtdParam._m0[18u].z) - _383)) * _576) + _383;
    float _587 = (((_422.z - _479) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _479;
    vec4 _600 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _258) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _259) + cbTextureTilingScale._m0[15u].w));
    float _607 = (_600.x * 2.0) + (-1.0);
    float _608 = (_600.y * 2.0) + (-1.0);
    float _609 = dot(vec2(_607, _608), vec2(_607, _608));
    float _3548 = isnan(0.0) ? _609 : (isnan(_609) ? 0.0 : max(_609, 0.0));
    float _618 = (((_600.z - _587) * _560) * _576) + _587;
    float _633 = (((cbMtdParam._m0[21u].x * _492) + ((_607 - _492) * _560)) * _576) + _492;
    float _634 = (((cbMtdParam._m0[21u].x * _493) + ((_608 - _493) * _560)) * _576) + _493;
    float _635 = (((sqrt(1.0 - (isnan(1.0) ? _3548 : (isnan(_3548) ? 1.0 : min(_3548, 1.0)))) - _489) * _560) * _576) + _489;
    float _640 = cbMtdParam._m0[22u].x + _522.w;
    float _643 = fma(_635, _226, fma(_634, _233, _633 * _219));
    float _646 = fma(_635, _227, fma(_634, _234, _633 * _220));
    float _649 = fma(_635, _228, fma(_634, _235, _633 * _221));
    float _653 = inversesqrt(dot(vec3(_643, _646, _649), vec3(_643, _646, _649)));
    float _654 = _653 * _643;
    float _655 = _653 * _646;
    float _656 = _653 * _649;
    float _3559 = isnan(0.0) ? _618 : (isnan(_618) ? 0.0 : max(_618, 0.0));
    float _657 = isnan(1.0) ? _3559 : (isnan(_3559) ? 1.0 : min(_3559, 1.0));
    float _3570 = isnan(0.0) ? _640 : (isnan(_640) ? 0.0 : max(_640, 0.0));
    float _3581 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
    float _3592 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
    float _3603 = isnan(0.0) ? _582 : (isnan(_582) ? 0.0 : max(_582, 0.0));
    float _675 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _717 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _727 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _717);
    float _728 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _717);
    float _729 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _717);
    float _733 = inversesqrt(dot(vec3(_727, _728, _729), vec3(_727, _728, _729)));
    float _734 = _727 * _733;
    float _735 = _728 * _733;
    float _736 = _729 * _733;
    float _742 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _743 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _761 = fma(_656, cbSceneParam._m0[5u].z, fma(_655, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _654));
    float _764 = fma(_656, cbSceneParam._m0[6u].z, fma(_655, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _654));
    float _767 = fma(_656, cbSceneParam._m0[7u].z, fma(_655, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _654));
    uint _781 = (_238 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _787 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3581 : (isnan(_3581) ? 1.0 : min(_3581, 1.0)))) * cbInstanceData._m0[_781].x;
    float _788 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3592 : (isnan(_3592) ? 1.0 : min(_3592, 1.0)))) * cbInstanceData._m0[_781].y;
    float _789 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3603 : (isnan(_3603) ? 1.0 : min(_3603, 1.0)))) * cbInstanceData._m0[_781].z;
    float _3614 = isnan(0.0) ? _787 : (isnan(_787) ? 0.0 : max(_787, 0.0));
    float _790 = isnan(1.0) ? _3614 : (isnan(_3614) ? 1.0 : min(_3614, 1.0));
    float _3625 = isnan(0.0) ? _788 : (isnan(_788) ? 0.0 : max(_788, 0.0));
    float _791 = isnan(1.0) ? _3625 : (isnan(_3625) ? 1.0 : min(_3625, 1.0));
    float _3636 = isnan(0.0) ? _789 : (isnan(_789) ? 0.0 : max(_789, 0.0));
    float _792 = isnan(1.0) ? _3636 : (isnan(_3636) ? 1.0 : min(_3636, 1.0));
    vec4 _801 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _742, cbSceneParam._m0[86u].y * _743));
    float _805 = ((isnan(1.0) ? _3570 : (isnan(_3570) ? 1.0 : min(_3570, 1.0))) * TEXCOORD_5.w) * _801.x;
    float _806 = dot(vec3(_654, _655, _656), vec3(_734, _735, _736));
    float _809 = _806 * 2.0;
    float _813 = (_809 * _654) - _734;
    float _814 = (_809 * _655) - _735;
    float _815 = (_809 * _656) - _736;
    float _819 = abs(dot(vec3(_734, _735, _736), vec3(_654, _655, _656)));
    float _3647 = isnan(0.0) ? _819 : (isnan(_819) ? 0.0 : max(_819, 0.0));
    float _821 = sqrt(_657);
    float _834 = exp2((_821 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3647 : (isnan(_3647) ? 1.0 : min(_3647, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_821 * 3.0));
    float _866 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _870 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _874 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1175;
    float _1177;
    float _1178;
    float _1179;
    float _1180;
    float _1181;
    float _1182;
    float _1183;
    float _1184;
    float _1185;
    float _1186;
    float _1187;
    float _1188;
    float _1189;
    float _1190;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _900 = fma(_874, cbModelParam._m0[26u].z, fma(_870, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _866));
        float _904 = fma(_874, cbModelParam._m0[27u].z, fma(_870, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _866));
        float _908 = fma(_874, cbModelParam._m0[28u].z, fma(_870, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _866));
        float _933 = _866 + _654;
        float _934 = _870 + _655;
        float _935 = _874 + _656;
        float _945 = fma(_935, cbModelParam._m0[26u].z, fma(_934, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _933)) - _900;
        float _946 = fma(_935, cbModelParam._m0[27u].z, fma(_934, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _933)) - _904;
        float _947 = fma(_935, cbModelParam._m0[28u].z, fma(_934, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _933)) - _908;
        float _951 = inversesqrt(dot(vec3(_945, _946, _947), vec3(_945, _946, _947)));
        float _964 = ((_951 * _945) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_900 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _965 = ((_951 * _946) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_904 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _966 = ((_951 * _947) / cbModelParam._m0[34u].z) + ((((((_908 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _969 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_964, _965, _966), 0.0);
        vec4 _976 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_964, _965, _966), 0.0);
        vec4 _983 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_964, _965, _966), 0.0);
        vec4 _990 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_964, _965, _966), 0.0);
        float _1003 = exp2((_969.w + (-0.5)) * 20.0) * 2.0;
        float _1004 = _1003 * (_969.x + (-0.5));
        float _1005 = _1003 * (_969.y + (-0.5));
        float _1006 = _1003 * (_969.z + (-0.5));
        float _1013 = exp2((_976.w + (-0.5)) * 20.0) * 2.0;
        float _1014 = _1013 * (_976.x + (-0.5));
        float _1015 = _1013 * (_976.y + (-0.5));
        float _1016 = _1013 * (_976.z + (-0.5));
        float _1023 = exp2((_983.w + (-0.5)) * 20.0) * 2.0;
        float _1024 = _1023 * (_983.x + (-0.5));
        float _1025 = _1023 * (_983.y + (-0.5));
        float _1026 = _1023 * (_983.z + (-0.5));
        float _1033 = exp2((_990.w + (-0.5)) * 20.0) * 2.0;
        float _1034 = _1033 * (_990.x + (-0.5));
        float _1035 = _1033 * (_990.y + (-0.5));
        float _1036 = _1033 * (_990.z + (-0.5));
        float _1037 = isnan(0.0) ? _1034 : (isnan(_1034) ? 0.0 : max(_1034, 0.0));
        float _1038 = isnan(0.0) ? _1035 : (isnan(_1035) ? 0.0 : max(_1035, 0.0));
        float _1039 = isnan(0.0) ? _1036 : (isnan(_1036) ? 0.0 : max(_1036, 0.0));
        float _1040 = _1004 * 0.5;
        float _1041 = _1014 * 0.5;
        float _1042 = _1024 * 0.5;
        float _1043 = dot(vec3(_1040, _1041, _1042), vec3(_1040, _1041, _1042));
        float _1048 = (_1043 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1043);
        float _1057 = (dot(vec3(_654, _655, _656), vec3(_1048 * _1040, _1048 * _1041, _1048 * _1042)) + 1.0) * 0.5;
        float _3673 = isnan(0.0) ? _1057 : (isnan(_1057) ? 0.0 : max(_1057, 0.0));
        float _1067 = sqrt(((_1041 * _1041) + (_1040 * _1040)) + (_1042 * _1042)) / (_1037 + 9.9999997473787516355514526367188e-06);
        float _3684 = isnan(0.0) ? _1067 : (isnan(_1067) ? 0.0 : max(_1067, 0.0));
        float _1068 = isnan(1.0) ? _3684 : (isnan(_3684) ? 1.0 : min(_3684, 1.0));
        float _1069 = _1068 * 2.0;
        float _1073 = (1.0 - _1068) / (_1068 + 1.0);
        float _3695 = isnan(0.0) ? _1073 : (isnan(_1073) ? 0.0 : max(_1073, 0.0));
        float _1074 = isnan(1.0) ? _3695 : (isnan(_3695) ? 1.0 : min(_3695, 1.0));
        float _1083 = ((((1.0 - _1074) * (_1069 + 2.0)) * exp2(log2(isnan(1.0) ? _3673 : (isnan(_3673) ? 1.0 : min(_3673, 1.0))) * (_1069 + 1.0))) + _1074) * _1037;
        float _1084 = _1005 * 0.5;
        float _1085 = _1015 * 0.5;
        float _1086 = _1025 * 0.5;
        float _1087 = dot(vec3(_1084, _1085, _1086), vec3(_1084, _1085, _1086));
        float _1092 = (_1087 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1087);
        float _1100 = (dot(vec3(_654, _655, _656), vec3(_1092 * _1084, _1092 * _1085, _1092 * _1086)) + 1.0) * 0.5;
        float _3706 = isnan(0.0) ? _1100 : (isnan(_1100) ? 0.0 : max(_1100, 0.0));
        float _1109 = sqrt(((_1085 * _1085) + (_1084 * _1084)) + (_1086 * _1086)) / (_1038 + 9.9999997473787516355514526367188e-06);
        float _3717 = isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0));
        float _1110 = isnan(1.0) ? _3717 : (isnan(_3717) ? 1.0 : min(_3717, 1.0));
        float _1111 = _1110 * 2.0;
        float _1115 = (1.0 - _1110) / (_1110 + 1.0);
        float _3728 = isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0));
        float _1116 = isnan(1.0) ? _3728 : (isnan(_3728) ? 1.0 : min(_3728, 1.0));
        float _1125 = ((((1.0 - _1116) * (_1111 + 2.0)) * exp2(log2(isnan(1.0) ? _3706 : (isnan(_3706) ? 1.0 : min(_3706, 1.0))) * (_1111 + 1.0))) + _1116) * _1038;
        float _1126 = _1006 * 0.5;
        float _1127 = _1016 * 0.5;
        float _1128 = _1026 * 0.5;
        float _1129 = dot(vec3(_1126, _1127, _1128), vec3(_1126, _1127, _1128));
        float _1134 = (_1129 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1129);
        float _1142 = (dot(vec3(_654, _655, _656), vec3(_1134 * _1126, _1134 * _1127, _1134 * _1128)) + 1.0) * 0.5;
        float _3739 = isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0));
        float _1151 = sqrt(((_1127 * _1127) + (_1126 * _1126)) + (_1128 * _1128)) / (_1039 + 9.9999997473787516355514526367188e-06);
        float _3750 = isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0));
        float _1152 = isnan(1.0) ? _3750 : (isnan(_3750) ? 1.0 : min(_3750, 1.0));
        float _1153 = _1152 * 2.0;
        float _1157 = (1.0 - _1152) / (_1152 + 1.0);
        float _3761 = isnan(0.0) ? _1157 : (isnan(_1157) ? 0.0 : max(_1157, 0.0));
        float _1158 = isnan(1.0) ? _3761 : (isnan(_3761) ? 1.0 : min(_3761, 1.0));
        float _1167 = ((((1.0 - _1158) * (_1153 + 2.0)) * exp2(log2(isnan(1.0) ? _3739 : (isnan(_3739) ? 1.0 : min(_3739, 1.0))) * (_1153 + 1.0))) + _1158) * _1039;
        _1175 = _1006;
        _1177 = _1005;
        _1178 = _1004;
        _1179 = _1016;
        _1180 = _1015;
        _1181 = _1014;
        _1182 = _1026;
        _1183 = _1025;
        _1184 = _1024;
        _1185 = _1039;
        _1186 = _1038;
        _1187 = _1037;
        _1188 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0)));
        _1189 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1125 : (isnan(_1125) ? 0.0 : max(_1125, 0.0)));
        _1190 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1167 : (isnan(_1167) ? 0.0 : max(_1167, 0.0)));
    }
    else
    {
        _1175 = _1176;
        _1177 = _1176;
        _1178 = _1176;
        _1179 = _1176;
        _1180 = _1176;
        _1181 = _1176;
        _1182 = _1176;
        _1183 = _1176;
        _1184 = _1176;
        _1185 = _1176;
        _1186 = _1176;
        _1187 = _1176;
        _1188 = 0.0;
        _1189 = 0.0;
        _1190 = 0.0;
    }
    float _1484;
    float _1485;
    float _1486;
    float _1487;
    float _1488;
    float _1489;
    float _1490;
    float _1491;
    float _1492;
    float _1493;
    float _1494;
    float _1495;
    float _1496;
    float _1497;
    float _1498;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1215 = fma(_874, cbModelParam._m0[30u].z, fma(_870, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _866));
        float _1219 = fma(_874, cbModelParam._m0[31u].z, fma(_870, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _866));
        float _1223 = fma(_874, cbModelParam._m0[32u].z, fma(_870, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _866));
        float _1246 = _866 + _654;
        float _1247 = _870 + _655;
        float _1248 = _874 + _656;
        float _1258 = fma(_1248, cbModelParam._m0[30u].z, fma(_1247, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1246)) - _1215;
        float _1259 = fma(_1248, cbModelParam._m0[31u].z, fma(_1247, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1246)) - _1219;
        float _1260 = fma(_1248, cbModelParam._m0[32u].z, fma(_1247, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1246)) - _1223;
        float _1264 = inversesqrt(dot(vec3(_1258, _1259, _1260), vec3(_1258, _1259, _1260)));
        float _1277 = ((_1264 * _1258) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1215 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1278 = ((_1264 * _1259) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1219 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1279 = ((_1264 * _1260) / cbModelParam._m0[35u].z) + ((((((_1223 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1281 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1277, _1278, _1279), 0.0);
        vec4 _1288 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1277, _1278, _1279), 0.0);
        vec4 _1295 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1277, _1278, _1279), 0.0);
        vec4 _1302 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1277, _1278, _1279), 0.0);
        float _1314 = exp2((_1281.w + (-0.5)) * 20.0) * 2.0;
        float _1315 = _1314 * (_1281.x + (-0.5));
        float _1316 = _1314 * (_1281.y + (-0.5));
        float _1317 = _1314 * (_1281.z + (-0.5));
        float _1324 = exp2((_1288.w + (-0.5)) * 20.0) * 2.0;
        float _1325 = _1324 * (_1288.x + (-0.5));
        float _1326 = _1324 * (_1288.y + (-0.5));
        float _1327 = _1324 * (_1288.z + (-0.5));
        float _1334 = exp2((_1295.w + (-0.5)) * 20.0) * 2.0;
        float _1335 = _1334 * (_1295.x + (-0.5));
        float _1336 = _1334 * (_1295.y + (-0.5));
        float _1337 = _1334 * (_1295.z + (-0.5));
        float _1344 = exp2((_1302.w + (-0.5)) * 20.0) * 2.0;
        float _1345 = _1344 * (_1302.x + (-0.5));
        float _1346 = _1344 * (_1302.y + (-0.5));
        float _1347 = _1344 * (_1302.z + (-0.5));
        float _1348 = isnan(0.0) ? _1345 : (isnan(_1345) ? 0.0 : max(_1345, 0.0));
        float _1349 = isnan(0.0) ? _1346 : (isnan(_1346) ? 0.0 : max(_1346, 0.0));
        float _1350 = isnan(0.0) ? _1347 : (isnan(_1347) ? 0.0 : max(_1347, 0.0));
        float _1351 = _1315 * 0.5;
        float _1352 = _1325 * 0.5;
        float _1353 = _1335 * 0.5;
        float _1354 = dot(vec3(_1351, _1352, _1353), vec3(_1351, _1352, _1353));
        float _1359 = (_1354 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1354);
        float _1367 = (dot(vec3(_654, _655, _656), vec3(_1359 * _1351, _1359 * _1352, _1359 * _1353)) + 1.0) * 0.5;
        float _3802 = isnan(0.0) ? _1367 : (isnan(_1367) ? 0.0 : max(_1367, 0.0));
        float _1376 = sqrt(((_1352 * _1352) + (_1351 * _1351)) + (_1353 * _1353)) / (_1348 + 9.9999997473787516355514526367188e-06);
        float _3813 = isnan(0.0) ? _1376 : (isnan(_1376) ? 0.0 : max(_1376, 0.0));
        float _1377 = isnan(1.0) ? _3813 : (isnan(_3813) ? 1.0 : min(_3813, 1.0));
        float _1378 = _1377 * 2.0;
        float _1382 = (1.0 - _1377) / (_1377 + 1.0);
        float _3824 = isnan(0.0) ? _1382 : (isnan(_1382) ? 0.0 : max(_1382, 0.0));
        float _1383 = isnan(1.0) ? _3824 : (isnan(_3824) ? 1.0 : min(_3824, 1.0));
        float _1392 = ((((1.0 - _1383) * (_1378 + 2.0)) * exp2(log2(isnan(1.0) ? _3802 : (isnan(_3802) ? 1.0 : min(_3802, 1.0))) * (_1378 + 1.0))) + _1383) * _1348;
        float _1393 = _1316 * 0.5;
        float _1394 = _1326 * 0.5;
        float _1395 = _1336 * 0.5;
        float _1396 = dot(vec3(_1393, _1394, _1395), vec3(_1393, _1394, _1395));
        float _1401 = (_1396 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1396);
        float _1409 = (dot(vec3(_654, _655, _656), vec3(_1401 * _1393, _1401 * _1394, _1401 * _1395)) + 1.0) * 0.5;
        float _3835 = isnan(0.0) ? _1409 : (isnan(_1409) ? 0.0 : max(_1409, 0.0));
        float _1418 = sqrt(((_1394 * _1394) + (_1393 * _1393)) + (_1395 * _1395)) / (_1349 + 9.9999997473787516355514526367188e-06);
        float _3846 = isnan(0.0) ? _1418 : (isnan(_1418) ? 0.0 : max(_1418, 0.0));
        float _1419 = isnan(1.0) ? _3846 : (isnan(_3846) ? 1.0 : min(_3846, 1.0));
        float _1420 = _1419 * 2.0;
        float _1424 = (1.0 - _1419) / (_1419 + 1.0);
        float _3857 = isnan(0.0) ? _1424 : (isnan(_1424) ? 0.0 : max(_1424, 0.0));
        float _1425 = isnan(1.0) ? _3857 : (isnan(_3857) ? 1.0 : min(_3857, 1.0));
        float _1434 = ((((1.0 - _1425) * (_1420 + 2.0)) * exp2(log2(isnan(1.0) ? _3835 : (isnan(_3835) ? 1.0 : min(_3835, 1.0))) * (_1420 + 1.0))) + _1425) * _1349;
        float _1435 = _1317 * 0.5;
        float _1436 = _1327 * 0.5;
        float _1437 = _1337 * 0.5;
        float _1438 = dot(vec3(_1435, _1436, _1437), vec3(_1435, _1436, _1437));
        float _1443 = (_1438 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1438);
        float _1451 = (dot(vec3(_654, _655, _656), vec3(_1443 * _1435, _1443 * _1436, _1443 * _1437)) + 1.0) * 0.5;
        float _3868 = isnan(0.0) ? _1451 : (isnan(_1451) ? 0.0 : max(_1451, 0.0));
        float _1460 = sqrt(((_1436 * _1436) + (_1435 * _1435)) + (_1437 * _1437)) / (_1350 + 9.9999997473787516355514526367188e-06);
        float _3879 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
        float _1461 = isnan(1.0) ? _3879 : (isnan(_3879) ? 1.0 : min(_3879, 1.0));
        float _1462 = _1461 * 2.0;
        float _1466 = (1.0 - _1461) / (_1461 + 1.0);
        float _3890 = isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0));
        float _1467 = isnan(1.0) ? _3890 : (isnan(_3890) ? 1.0 : min(_3890, 1.0));
        float _1476 = ((((1.0 - _1467) * (_1462 + 2.0)) * exp2(log2(isnan(1.0) ? _3868 : (isnan(_3868) ? 1.0 : min(_3868, 1.0))) * (_1462 + 1.0))) + _1467) * _1350;
        _1484 = _1317;
        _1485 = _1316;
        _1486 = _1315;
        _1487 = _1327;
        _1488 = _1326;
        _1489 = _1325;
        _1490 = _1337;
        _1491 = _1336;
        _1492 = _1335;
        _1493 = _1350;
        _1494 = _1349;
        _1495 = _1348;
        _1496 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1392 : (isnan(_1392) ? 0.0 : max(_1392, 0.0)));
        _1497 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1434 : (isnan(_1434) ? 0.0 : max(_1434, 0.0)));
        _1498 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0)));
    }
    else
    {
        _1484 = _1176;
        _1485 = _1176;
        _1486 = _1176;
        _1487 = _1176;
        _1488 = _1176;
        _1489 = _1176;
        _1490 = _1176;
        _1491 = _1176;
        _1492 = _1176;
        _1493 = _1176;
        _1494 = _1176;
        _1495 = _1176;
        _1496 = 0.0;
        _1497 = 0.0;
        _1498 = 0.0;
    }
    float _1508 = (cbModelParam._m0[1u].x * (_1496 - _1188)) + _1188;
    float _1509 = (cbModelParam._m0[1u].x * (_1497 - _1189)) + _1189;
    float _1510 = (cbModelParam._m0[1u].x * (_1498 - _1190)) + _1190;
    float _1531 = fma(_1510, cbSceneParam._m0[89u].z, fma(_1509, cbSceneParam._m0[89u].y, _1508 * cbSceneParam._m0[89u].x));
    float _1534 = fma(_1510, cbSceneParam._m0[90u].z, fma(_1509, cbSceneParam._m0[90u].y, _1508 * cbSceneParam._m0[90u].x));
    float _1537 = fma(_1510, cbSceneParam._m0[91u].z, fma(_1509, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1508));
    float _1552 = _813 * 0.5;
    float _1553 = _814 * 0.5;
    float _1554 = _815 * 0.5;
    float _1555 = dot(vec4(_1552, _1553, _1554, 1.0), vec4(_1486, _1489, _1492, _1495));
    float _1558 = dot(vec4(_1552, _1553, _1554, 1.0), vec4(_1485, _1488, _1491, _1494));
    float _1561 = dot(vec4(_1552, _1553, _1554, 1.0), vec4(_1484, _1487, _1490, _1493));
    float _1595;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1568 = dot(vec4(_1552, _1553, _1554, 1.0), vec4(_1175, _1179, _1182, _1185));
        float _1572 = dot(vec4(_1552, _1553, _1554, 1.0), vec4(_1177, _1180, _1183, _1186));
        float _1576 = dot(vec4(_1552, _1553, _1554, 1.0), vec4(_1178, _1181, _1184, _1187));
        float _1583 = dot(vec4(cbModelParam._m0[39u]), vec4(_1552, _1553, _1554, 1.0));
        _1595 = dot(vec3(isnan(0.0) ? _1576 : (isnan(_1576) ? 0.0 : max(_1576, 0.0)), isnan(0.0) ? _1572 : (isnan(_1572) ? 0.0 : max(_1572, 0.0)), isnan(0.0) ? _1568 : (isnan(_1568) ? 0.0 : max(_1568, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1583) ? 0.0 : (isnan(0.0) ? _1583 : max(0.0, _1583))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1595 = 1.0;
    }
    float _1606;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1597 = dot(vec4(cbModelParam._m0[40u]), vec4(_1552, _1553, _1554, 1.0));
        _1606 = dot(vec3(isnan(0.0) ? _1555 : (isnan(_1555) ? 0.0 : max(_1555, 0.0)), isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0)), isnan(0.0) ? _1561 : (isnan(_1561) ? 0.0 : max(_1561, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1597) ? 0.0 : (isnan(0.0) ? _1597 : max(0.0, _1597))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1606 = 1.0;
    }
    float _1610 = (_1606 * cbModelParam._m0[1u].x) + (_1595 * (1.0 - cbModelParam._m0[1u].x));
    float _1620 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _657);
    float _1621 = isnan(_1620) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1620 : min(cbModelParam._m0[25u].z, _1620));
    float _1701;
    float _1703;
    float _1705;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1668 = fma(_874, cbModelParam._m0[13u].z, fma(_870, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _866)) + cbModelParam._m0[13u].w;
        float _1672 = fma(_874, cbModelParam._m0[14u].z, fma(_870, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _866)) + cbModelParam._m0[14u].w;
        float _1676 = fma(_874, cbModelParam._m0[15u].z, fma(_870, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _866)) + cbModelParam._m0[15u].w;
        float _1679 = fma(_815, cbModelParam._m0[13u].z, fma(_814, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _813));
        float _1682 = fma(_815, cbModelParam._m0[14u].z, fma(_814, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _813));
        float _1685 = fma(_815, cbModelParam._m0[15u].z, fma(_814, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _813));
        float _1713;
        if (_1679 > 0.0)
        {
            _1713 = abs((1.0 - _1668) / _1679);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1679 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1668 + 1.0) / _1679);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1713 = frontier_phi_14_12_ladder;
        }
        float _1934;
        if (_1682 > 0.0)
        {
            _1934 = abs((1.0 - _1672) / _1682);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1682 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1672 + 1.0) / _1682);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1934 = frontier_phi_23_19_ladder;
        }
        float _2180;
        if (_1685 > 0.0)
        {
            _2180 = abs((1.0 - _1676) / _1685);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1685 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1676 + 1.0) / _1685);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2180 = frontier_phi_35_30_ladder;
        }
        float _2182 = isnan(_1934) ? _1713 : (isnan(_1713) ? _1934 : min(_1713, _1934));
        float _2183 = isnan(_2180) ? _2182 : (isnan(_2182) ? _2180 : min(_2182, _2180));
        float _2187 = (_2183 * _1679) + _1668;
        float _2188 = (_2183 * _1682) + _1672;
        float _2189 = (_2183 * _1685) + _1676;
        float _2190 = _2183 * 9.9999997473787516355514526367188e-05;
        float _2192 = (-1.0) - _2190;
        float _2194 = _2190 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2189 > _2194) || ((_2189 < _2192) || ((_2188 > _2194) || ((_2188 < _2192) || ((_2187 < _2192) || (_2187 > _2194))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2313 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2189, cbModelParam._m0[9u].z, fma(_2188, cbModelParam._m0[9u].y, _2187 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2189, cbModelParam._m0[10u].z, fma(_2188, cbModelParam._m0[10u].y, _2187 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2189, cbModelParam._m0[11u].z, fma(_2188, cbModelParam._m0[11u].y, _2187 * cbModelParam._m0[11u].x))), _1621);
            frontier_phi_13_35_ladder = _2313.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2313.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2313.x * cbModelParam._m0[1u].y;
        }
        _1701 = frontier_phi_13_35_ladder_2;
        _1703 = frontier_phi_13_35_ladder_1;
        _1705 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1689 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_813, _814, _815), _1621);
        _1701 = _1689.x * cbModelParam._m0[1u].y;
        _1703 = _1689.y * cbModelParam._m0[1u].y;
        _1705 = _1689.z * cbModelParam._m0[1u].y;
    }
    float _1709 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _657);
    float _1710 = isnan(_1709) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1709 : min(cbModelParam._m0[25u].w, _1709));
    float _1799;
    float _1801;
    float _1803;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1763 = fma(_874, cbModelParam._m0[21u].z, fma(_870, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _866)) + cbModelParam._m0[21u].w;
        float _1767 = fma(_874, cbModelParam._m0[22u].z, fma(_870, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _866)) + cbModelParam._m0[22u].w;
        float _1771 = fma(_874, cbModelParam._m0[23u].z, fma(_870, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _866)) + cbModelParam._m0[23u].w;
        float _1774 = fma(_815, cbModelParam._m0[21u].z, fma(_814, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _813));
        float _1777 = fma(_815, cbModelParam._m0[22u].z, fma(_814, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _813));
        float _1780 = fma(_815, cbModelParam._m0[23u].z, fma(_814, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _813));
        float _1939;
        if (_1774 > 0.0)
        {
            _1939 = abs((1.0 - _1763) / _1774);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1774 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1763 + 1.0) / _1774);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1939 = frontier_phi_25_21_ladder;
        }
        float _2207;
        if (_1777 > 0.0)
        {
            _2207 = abs((1.0 - _1767) / _1777);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1777 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1767 + 1.0) / _1777);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2207 = frontier_phi_37_32_ladder;
        }
        float _2412;
        if (_1780 > 0.0)
        {
            _2412 = abs((1.0 - _1771) / _1780);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_1780 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_1771 + 1.0) / _1780);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2412 = frontier_phi_46_43_ladder;
        }
        float _2414 = isnan(_2207) ? _1939 : (isnan(_1939) ? _2207 : min(_1939, _2207));
        float _2415 = isnan(_2412) ? _2414 : (isnan(_2414) ? _2412 : min(_2414, _2412));
        float _2419 = (_2415 * _1774) + _1763;
        float _2420 = (_2415 * _1777) + _1767;
        float _2421 = (_2415 * _1780) + _1771;
        float _2422 = _2415 * 9.9999997473787516355514526367188e-05;
        float _2423 = (-1.0) - _2422;
        float _2425 = _2422 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2421 > _2425) || ((_2421 < _2423) || ((_2420 > _2425) || ((_2420 < _2423) || ((_2419 < _2423) || (_2419 > _2425))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2620 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2421, cbModelParam._m0[17u].z, fma(_2420, cbModelParam._m0[17u].y, _2419 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2421, cbModelParam._m0[18u].z, fma(_2420, cbModelParam._m0[18u].y, _2419 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2421, cbModelParam._m0[19u].z, fma(_2420, cbModelParam._m0[19u].y, _2419 * cbModelParam._m0[19u].x))), _1710);
            frontier_phi_22_46_ladder = _2620.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2620.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2620.x * cbModelParam._m0[1u].z;
        }
        _1799 = frontier_phi_22_46_ladder_2;
        _1801 = frontier_phi_22_46_ladder_1;
        _1803 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _1783 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_813, _814, _815), _1710);
        _1799 = _1783.x * cbModelParam._m0[1u].z;
        _1801 = _1783.y * cbModelParam._m0[1u].z;
        _1803 = _1783.z * cbModelParam._m0[1u].z;
    }
    float _1815 = ((((1.0 - _834) * ((_821 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_834 * _821)) * _805;
    float _1816 = _1815 * ((cbModelParam._m0[1u].w * (_1799 - _1701)) + _1701);
    float _1817 = _1815 * ((cbModelParam._m0[1u].w * (_1801 - _1703)) + _1703);
    float _1818 = _1815 * ((cbModelParam._m0[1u].w * (_1803 - _1705)) + _1705);
    float _1821 = fma(_1818, cbSceneParam._m0[89u].z, fma(_1817, cbSceneParam._m0[89u].y, _1816 * cbSceneParam._m0[89u].x));
    float _1824 = fma(_1818, cbSceneParam._m0[90u].z, fma(_1817, cbSceneParam._m0[90u].y, _1816 * cbSceneParam._m0[90u].x));
    float _1827 = fma(_1818, cbSceneParam._m0[91u].z, fma(_1817, cbSceneParam._m0[91u].y, _1816 * cbSceneParam._m0[91u].x));
    vec4 _1835 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_742, _743));
    float _1837 = _1835.w;
    float _1849 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1837);
    float _1850 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1837);
    float _1851 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1837);
    uvec4 _1855 = floatBitsToUint(cbInstanceData._m0[_238 + 5u]);
    uint _1857 = _1855.x * 14u;
    uint _1858 = _1857 + 13u;
    float _1865 = _805 + (-1.0);
    float _1870 = (cbLight._m0[_1858].x * _1865) + 1.0;
    float _1871 = (cbLight._m0[_1858].y * _1865) + 1.0;
    float _1872 = (cbLight._m0[_1858].z * _1865) + 1.0;
    float _1873 = (cbLight._m0[_1858].w * _1865) + 1.0;
    uint _1874 = _1857 + 5u;
    float _1880 = isnan(1.0) ? _1871 : (isnan(_1871) ? 1.0 : min(_1871, 1.0));
    uint _1884 = _1857 + 4u;
    float _1893 = isnan(1.0) ? _1870 : (isnan(_1870) ? 1.0 : min(_1870, 1.0));
    uint _1897 = _1857 | 1u;
    float _1908 = dot(vec3(cbLight._m0[_1857].xyz), vec3(_654, _655, _656));
    float _1911 = dot(vec3(cbLight._m0[_1897].xyz), vec3(_654, _655, _656));
    float _4026 = isnan(0.0) ? _1908 : (isnan(_1908) ? 0.0 : max(_1908, 0.0));
    float _4037 = isnan(0.0) ? _1911 : (isnan(_1911) ? 0.0 : max(_1911, 0.0));
    float _1916 = (isnan(1.0) ? _4026 : (isnan(_4026) ? 1.0 : min(_4026, 1.0))) * 0.3183098733425140380859375;
    float _1918 = (isnan(1.0) ? _4037 : (isnan(_4037) ? 1.0 : min(_4037, 1.0))) * 0.3183098733425140380859375;
    float _1925 = ((cbLight._m0[_1874].x * _1880) * _1918) + (((cbLight._m0[_1884].x * _1849) * _1893) * _1916);
    float _1926 = ((_1880 * cbLight._m0[_1874].y) * _1918) + (((cbLight._m0[_1884].y * _1850) * _1893) * _1916);
    float _1927 = ((_1880 * cbLight._m0[_1874].z) * _1918) + (((cbLight._m0[_1884].z * _1851) * _1893) * _1916);
    uvec4 _1931 = floatBitsToUint(cbLight._m0[_1857 + 12u]);
    bool _1933 = _1931.x == 0u;
    float _1944;
    float _1946;
    float _1948;
    if (_1933)
    {
        _1944 = _1925;
        _1946 = _1926;
        _1948 = _1927;
    }
    else
    {
        uint _1952 = _1857 + 6u;
        float _1968 = (dot(vec3(cbLight._m0[_1857 + 2u].xyz), vec3(_654, _655, _656)) * 0.5) + 0.5;
        float _1969 = _1968 * _1968;
        float _4048 = isnan(0.0) ? _1969 : (isnan(_1969) ? 0.0 : max(_1969, 0.0));
        float _1970 = isnan(1.0) ? _4048 : (isnan(_4048) ? 1.0 : min(_4048, 1.0));
        float _1971 = isnan(1.0) ? _1872 : (isnan(_1872) ? 1.0 : min(_1872, 1.0));
        _1944 = (((cbLight._m0[_1952].x * 0.3183098733425140380859375) * _1970) * _1971) + _1925;
        _1946 = (((cbLight._m0[_1952].y * 0.3183098733425140380859375) * _1970) * _1971) + _1926;
        _1948 = (((cbLight._m0[_1952].z * 0.3183098733425140380859375) * _1970) * _1971) + _1927;
    }
    bool _1951 = _1931.y == 0u;
    float _1989;
    float _1991;
    float _1993;
    if (_1951)
    {
        _1989 = _1944;
        _1991 = _1946;
        _1993 = _1948;
    }
    else
    {
        uint _2151 = _1857 + 7u;
        float _2167 = (dot(vec3(cbLight._m0[_1857 + 3u].xyz), vec3(_654, _655, _656)) * 0.5) + 0.5;
        float _2168 = _2167 * _2167;
        float _4064 = isnan(0.0) ? _2168 : (isnan(_2168) ? 0.0 : max(_2168, 0.0));
        float _2169 = isnan(1.0) ? _4064 : (isnan(_4064) ? 1.0 : min(_4064, 1.0));
        float _2170 = isnan(1.0) ? _1873 : (isnan(_1873) ? 1.0 : min(_1873, 1.0));
        _1989 = (((cbLight._m0[_2151].x * 0.3183098733425140380859375) * _2169) * _2170) + _1944;
        _1991 = (((cbLight._m0[_2151].y * 0.3183098733425140380859375) * _2169) * _2170) + _1946;
        _1993 = (((cbLight._m0[_2151].z * 0.3183098733425140380859375) * _2169) * _2170) + _1948;
    }
    uint _1996 = _1857 + 8u;
    float _2009 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1857].w)) * _657) * 0.949999988079071044921875);
    float _2010 = _2009 * _2009;
    float _2011 = cbLight._m0[_1857].x + _734;
    float _2012 = cbLight._m0[_1857].y + _735;
    float _2013 = cbLight._m0[_1857].z + _736;
    float _2017 = inversesqrt(dot(vec3(_2011, _2012, _2013), vec3(_2011, _2012, _2013)));
    float _2018 = _2017 * _2011;
    float _2019 = _2017 * _2012;
    float _2020 = _2017 * _2013;
    float _2021 = dot(vec3(_654, _655, _656), vec3(cbLight._m0[_1857].xyz));
    float _4080 = isnan(0.0) ? _2021 : (isnan(_2021) ? 0.0 : max(_2021, 0.0));
    float _2024 = isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0));
    float _4091 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
    float _2025 = isnan(1.0) ? _4091 : (isnan(_4091) ? 1.0 : min(_4091, 1.0));
    float _2026 = dot(vec3(_654, _655, _656), vec3(_2018, _2019, _2020));
    float _4102 = isnan(0.0) ? _2026 : (isnan(_2026) ? 0.0 : max(_2026, 0.0));
    float _2029 = isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0));
    float _2030 = dot(vec3(cbLight._m0[_1857].xyz), vec3(_2018, _2019, _2020));
    float _4113 = isnan(0.0) ? _2030 : (isnan(_2030) ? 0.0 : max(_2030, 0.0));
    float _2034 = _2010 * _2010;
    float _2038 = ((_2029 * _2029) * (_2034 + (-1.0))) + 1.0;
    float _2049 = (exp2(log2(1.0 - (isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2050 = 1.0 - _2010;
    float _2061 = (0.5 / (((_2025 * ((_2024 * _2050) + _2010)) + 9.9999999392252902907785028219223e-09) + (((_2025 * _2050) + _2010) * _2024))) * _2024;
    float _4124 = isnan(0.0) ? _2061 : (isnan(_2061) ? 0.0 : max(_2061, 0.0));
    float _2063 = (isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0))) * (_2034 / ((_2038 * _2038) * 3.141590118408203125));
    uint _2077 = _1857 + 9u;
    float _2088 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1897].w)) * _657) * 0.949999988079071044921875);
    float _2089 = _2088 * _2088;
    float _2090 = cbLight._m0[_1897].x + _734;
    float _2091 = cbLight._m0[_1897].y + _735;
    float _2092 = cbLight._m0[_1897].z + _736;
    float _2096 = inversesqrt(dot(vec3(_2090, _2091, _2092), vec3(_2090, _2091, _2092)));
    float _2097 = _2096 * _2090;
    float _2098 = _2096 * _2091;
    float _2099 = _2096 * _2092;
    float _2100 = dot(vec3(_654, _655, _656), vec3(cbLight._m0[_1897].xyz));
    float _4135 = isnan(0.0) ? _2100 : (isnan(_2100) ? 0.0 : max(_2100, 0.0));
    float _2103 = isnan(1.0) ? _4135 : (isnan(_4135) ? 1.0 : min(_4135, 1.0));
    float _2104 = dot(vec3(_654, _655, _656), vec3(_2097, _2098, _2099));
    float _4146 = isnan(0.0) ? _2104 : (isnan(_2104) ? 0.0 : max(_2104, 0.0));
    float _2107 = isnan(1.0) ? _4146 : (isnan(_4146) ? 1.0 : min(_4146, 1.0));
    float _2108 = dot(vec3(cbLight._m0[_1897].xyz), vec3(_2097, _2098, _2099));
    float _4157 = isnan(0.0) ? _2108 : (isnan(_2108) ? 0.0 : max(_2108, 0.0));
    float _2112 = _2089 * _2089;
    float _2116 = ((_2107 * _2107) * (_2112 + (-1.0))) + 1.0;
    float _2125 = (exp2(log2(1.0 - (isnan(1.0) ? _4157 : (isnan(_4157) ? 1.0 : min(_4157, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2126 = 1.0 - _2089;
    float _2136 = (0.5 / (((_2025 * ((_2103 * _2126) + _2089)) + 9.9999999392252902907785028219223e-09) + (((_2025 * _2126) + _2089) * _2103))) * _2103;
    float _4168 = isnan(0.0) ? _2136 : (isnan(_2136) ? 0.0 : max(_2136, 0.0));
    float _2138 = (isnan(1.0) ? _4168 : (isnan(_4168) ? 1.0 : min(_4168, 1.0))) * (_2112 / ((_2116 * _2116) * 3.141590118408203125));
    float _2148 = (((_2125 * cbLight._m0[_2077].x) * _2138) * _1880) + ((((cbLight._m0[_1996].x * _1849) * _2049) * _2063) * _1893);
    float _2149 = (((_2125 * cbLight._m0[_2077].y) * _2138) * _1880) + ((((cbLight._m0[_1996].y * _1850) * _2049) * _2063) * _1893);
    float _2150 = (((_2125 * cbLight._m0[_2077].z) * _2138) * _1880) + ((((cbLight._m0[_1996].z * _1851) * _2049) * _2063) * _1893);
    float _2212;
    float _2214;
    float _2216;
    if (_1933)
    {
        _2212 = _2148;
        _2214 = _2149;
        _2216 = _2150;
    }
    else
    {
        uint _2218 = _1857 + 2u;
        uint _2222 = _1857 + 10u;
        float _2236 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2218].w)) * _657) * 0.949999988079071044921875);
        float _2237 = _2236 * _2236;
        float _2238 = cbLight._m0[_2218].x + _734;
        float _2239 = cbLight._m0[_2218].y + _735;
        float _2240 = cbLight._m0[_2218].z + _736;
        float _2244 = inversesqrt(dot(vec3(_2238, _2239, _2240), vec3(_2238, _2239, _2240)));
        float _2245 = _2244 * _2238;
        float _2246 = _2244 * _2239;
        float _2247 = _2244 * _2240;
        float _2248 = dot(vec3(_654, _655, _656), vec3(cbLight._m0[_2218].xyz));
        float _4179 = isnan(0.0) ? _2248 : (isnan(_2248) ? 0.0 : max(_2248, 0.0));
        float _2251 = isnan(1.0) ? _4179 : (isnan(_4179) ? 1.0 : min(_4179, 1.0));
        float _2252 = dot(vec3(_654, _655, _656), vec3(_2245, _2246, _2247));
        float _4190 = isnan(0.0) ? _2252 : (isnan(_2252) ? 0.0 : max(_2252, 0.0));
        float _2255 = isnan(1.0) ? _4190 : (isnan(_4190) ? 1.0 : min(_4190, 1.0));
        float _2256 = dot(vec3(cbLight._m0[_2218].xyz), vec3(_2245, _2246, _2247));
        float _4201 = isnan(0.0) ? _2256 : (isnan(_2256) ? 0.0 : max(_2256, 0.0));
        float _2260 = _2237 * _2237;
        float _2264 = ((_2255 * _2255) * (_2260 + (-1.0))) + 1.0;
        float _2273 = (exp2(log2(1.0 - (isnan(1.0) ? _4201 : (isnan(_4201) ? 1.0 : min(_4201, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2274 = 1.0 - _2237;
        float _2284 = (0.5 / (((_2025 * ((_2251 * _2274) + _2237)) + 9.9999999392252902907785028219223e-09) + (((_2025 * _2274) + _2237) * _2251))) * _2251;
        float _4212 = isnan(0.0) ? _2284 : (isnan(_2284) ? 0.0 : max(_2284, 0.0));
        float _2286 = (isnan(1.0) ? _4212 : (isnan(_4212) ? 1.0 : min(_4212, 1.0))) * (_2260 / ((_2264 * _2264) * 3.141590118408203125));
        float _2287 = isnan(1.0) ? _1872 : (isnan(_1872) ? 1.0 : min(_1872, 1.0));
        _2212 = (((_2273 * cbLight._m0[_2222].x) * _2286) * _2287) + _2148;
        _2214 = (((_2273 * cbLight._m0[_2222].y) * _2286) * _2287) + _2149;
        _2216 = (((_2273 * cbLight._m0[_2222].z) * _2286) * _2287) + _2150;
    }
    float _2322;
    float _2324;
    float _2326;
    if (_1951)
    {
        _2322 = _2212;
        _2324 = _2214;
        _2326 = _2216;
    }
    else
    {
        uint _2333 = _1857 + 3u;
        uint _2337 = _1857 + 11u;
        float _2351 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2333].w)) * _657) * 0.949999988079071044921875);
        float _2352 = _2351 * _2351;
        float _2353 = cbLight._m0[_2333].x + _734;
        float _2354 = cbLight._m0[_2333].y + _735;
        float _2355 = cbLight._m0[_2333].z + _736;
        float _2359 = inversesqrt(dot(vec3(_2353, _2354, _2355), vec3(_2353, _2354, _2355)));
        float _2360 = _2359 * _2353;
        float _2361 = _2359 * _2354;
        float _2362 = _2359 * _2355;
        float _2363 = dot(vec3(_654, _655, _656), vec3(cbLight._m0[_2333].xyz));
        float _4228 = isnan(0.0) ? _2363 : (isnan(_2363) ? 0.0 : max(_2363, 0.0));
        float _2366 = isnan(1.0) ? _4228 : (isnan(_4228) ? 1.0 : min(_4228, 1.0));
        float _2367 = dot(vec3(_654, _655, _656), vec3(_2360, _2361, _2362));
        float _4239 = isnan(0.0) ? _2367 : (isnan(_2367) ? 0.0 : max(_2367, 0.0));
        float _2370 = isnan(1.0) ? _4239 : (isnan(_4239) ? 1.0 : min(_4239, 1.0));
        float _2371 = dot(vec3(cbLight._m0[_2333].xyz), vec3(_2360, _2361, _2362));
        float _4250 = isnan(0.0) ? _2371 : (isnan(_2371) ? 0.0 : max(_2371, 0.0));
        float _2375 = _2352 * _2352;
        float _2379 = ((_2370 * _2370) * (_2375 + (-1.0))) + 1.0;
        float _2388 = (exp2(log2(1.0 - (isnan(1.0) ? _4250 : (isnan(_4250) ? 1.0 : min(_4250, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2389 = 1.0 - _2352;
        float _2399 = (0.5 / (((_2025 * ((_2366 * _2389) + _2352)) + 9.9999999392252902907785028219223e-09) + (((_2025 * _2389) + _2352) * _2366))) * _2366;
        float _4261 = isnan(0.0) ? _2399 : (isnan(_2399) ? 0.0 : max(_2399, 0.0));
        float _2401 = (isnan(1.0) ? _4261 : (isnan(_4261) ? 1.0 : min(_4261, 1.0))) * (_2375 / ((_2379 * _2379) * 3.141590118408203125));
        float _2402 = isnan(1.0) ? _1873 : (isnan(_1873) ? 1.0 : min(_1873, 1.0));
        _2322 = (((_2388 * cbLight._m0[_2337].x) * _2401) * _2402) + _2212;
        _2324 = (((_2388 * cbLight._m0[_2337].y) * _2401) * _2402) + _2214;
        _2326 = (((_2388 * cbLight._m0[_2337].z) * _2401) * _2402) + _2216;
    }
    float _2537;
    float _2539;
    float _2541;
    float _2543;
    float _2545;
    float _2547;
    if (_1855.y == 0u)
    {
        float _2477 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2478 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2477;
        float _2479 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2477;
        float _2480 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2477;
        uvec4 _2492 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2493 = _2492.x;
        uint _2504 = uint((float(_2492.y) * floor(float(uint(cbSceneParam._m0[85u].y * _743) / _2493))) + floor(float(uint(cbSceneParam._m0[85u].x * _742) / _2493)));
        float _2514 = (log2(_2480 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2515 = isnan(0.0) ? _2514 : (isnan(_2514) ? 0.0 : max(_2514, 0.0));
        uint _2518 = uint(isnan(14.0) ? _2515 : (isnan(_2515) ? 14.0 : min(_2515, 14.0)));
        uvec4 _2523 = texelFetch(g_lightClusterGridBuffer, int(((_2518 << 2u) + (_2504 << 6u)) >> 2u));
        uint _2524 = _2523.x;
        uint _2525 = _2492.z;
        float _2625;
        float _2627;
        float _2629;
        float _2631;
        float _2633;
        float _2635;
        if (((((1u << ((_2525 >> 4u) & 15u)) + 4294967295u) & _2524) == 0u) || ((_2525 & 240u) == 0u))
        {
            _2625 = 0.0;
            _2627 = 0.0;
            _2629 = 0.0;
            _2631 = 0.0;
            _2633 = 0.0;
            _2635 = 0.0;
        }
        else
        {
            float _2626;
            float _2628;
            float _2630;
            float _2632;
            float _2634;
            float _2636;
            float _2770 = 0.0;
            float _2771 = 0.0;
            float _2772 = 0.0;
            float _2773 = 0.0;
            float _2774 = 0.0;
            float _2775 = 0.0;
            uint _2776 = 0u;
            uint _2785;
            bool _2786;
            for (;;)
            {
                _2785 = texelFetch(g_lightClassification, int((((_2518 << 5u) + (_2504 << 9u)) + (_2776 << 2u)) >> 2u)).x;
                _2786 = _2785 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_2786)
                {
                    frontier_phi_61_pred = _2770;
                    frontier_phi_61_pred_1 = _2775;
                    frontier_phi_61_pred_2 = _2774;
                    frontier_phi_61_pred_3 = _2773;
                    frontier_phi_61_pred_4 = _2772;
                    frontier_phi_61_pred_5 = _2771;
                }
                else
                {
                    float _2894;
                    float _2895;
                    float _2896;
                    float _2897;
                    float _2898;
                    float _2899;
                    uint _2900;
                    _2894 = _2770;
                    _2895 = _2771;
                    _2896 = _2772;
                    _2897 = _2773;
                    _2898 = _2774;
                    _2899 = _2775;
                    _2900 = _2785;
                    float _2826;
                    float _2827;
                    float _2828;
                    float _2829;
                    float _2830;
                    float _2831;
                    for (;;)
                    {
                        uint _2904 = uint(findLSB(_2900)) + (_2776 << 5u);
                        uint _2901 = (_2900 + 4294967295u) & _2900;
                        uint _2906 = _2904 * 48u;
                        vec4 _2920 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2906)).x, texelFetch(g_PointLightRenderingBuffer, int(_2906 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2906 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2906 + 3u)).x));
                        uint _2926 = (_2904 * 48u) + 4u;
                        vec4 _2939 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2926)).x, texelFetch(g_PointLightRenderingBuffer, int(_2926 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2926 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2926 + 3u)).x));
                        uint _2945 = (_2904 * 48u) + 8u;
                        vec3 _2956 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2945)).x, texelFetch(g_PointLightRenderingBuffer, int(_2945 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2945 + 2u)).x));
                        float _2960 = _2920.x - _2478;
                        float _2961 = _2920.y - _2479;
                        float _2962 = _2920.z - _2480;
                        float _2963 = dot(vec3(_2960, _2961, _2962), vec3(_2960, _2961, _2962));
                        float _2966 = inversesqrt(_2963);
                        float _2967 = _2966 * _2960;
                        float _2968 = _2966 * _2961;
                        float _2969 = _2966 * _2962;
                        float _2970 = dot(vec3(_761, _764, _767), vec3(_2967, _2968, _2969));
                        float _2975 = 1.0 - (_2963 * _2920.w);
                        float _4287 = isnan(0.0) ? _2975 : (isnan(_2975) ? 0.0 : max(_2975, 0.0));
                        float _2976 = isnan(1.0) ? _4287 : (isnan(_4287) ? 1.0 : min(_4287, 1.0));
                        float _2977 = sqrt(_2963) * _2939.w;
                        float _2980 = 1.39999997615814208984375 / (_2977 + 1.39999997615814208984375);
                        float _2981 = _2980 * _2980;
                        float _2984 = ((1.0 - _2981) * _2970) + _2981;
                        float _2987 = _2977 * _2977;
                        float _2991 = ((isnan(0.0) ? _2984 : (isnan(_2984) ? 0.0 : max(_2984, 0.0))) * _2976) / ((_2987 * 0.699999988079071044921875) + 1.0);
                        float _2995 = (-0.0) - _2478;
                        float _2996 = (-0.0) - _2479;
                        float _2997 = (-0.0) - _2480;
                        float _3001 = inversesqrt(dot(vec3(_2995, _2996, _2997), vec3(_2995, _2996, _2997)));
                        float _3002 = _3001 * _2995;
                        float _3003 = _3001 * _2996;
                        float _3004 = _3001 * _2997;
                        float _3012 = exp2(log2(1.0 / ((_2987 * 3.5) + 5.0)) * 0.25);
                        float _3013 = 1.0 - _821;
                        float _3020 = sqrt(1.0 - ((1.0 - (_3013 * _3013)) * (1.0 - (_3012 * _3012))));
                        float _3021 = _3020 * _3020;
                        float _3022 = _3021 * _3021;
                        float _3023 = _3002 + _2967;
                        float _3024 = _3003 + _2968;
                        float _3025 = _3004 + _2969;
                        float _3029 = inversesqrt(dot(vec3(_3023, _3024, _3025), vec3(_3023, _3024, _3025)));
                        float _3033 = dot(vec3(_761, _764, _767), vec3(_3002, _3003, _3004));
                        float _4303 = isnan(0.0) ? _3033 : (isnan(_3033) ? 0.0 : max(_3033, 0.0));
                        float _3036 = isnan(1.0) ? _4303 : (isnan(_4303) ? 1.0 : min(_4303, 1.0));
                        float _3037 = dot(vec3(_761, _764, _767), vec3(_3029 * _3023, _3029 * _3024, _3029 * _3025));
                        float _4314 = isnan(0.0) ? _3037 : (isnan(_3037) ? 0.0 : max(_3037, 0.0));
                        float _3040 = isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0));
                        float _3044 = ((_3040 * _3040) * (_3022 + (-1.0))) + 1.0;
                        float _3045 = _2980 * _3021;
                        float _3046 = _3045 * _3045;
                        float _3049 = ((1.0 - _3046) * _2970) + _3046;
                        float _4325 = isnan(0.0) ? _3049 : (isnan(_3049) ? 0.0 : max(_3049, 0.0));
                        float _3050 = isnan(1.0) ? _4325 : (isnan(_4325) ? 1.0 : min(_4325, 1.0));
                        float _3051 = 1.0 - _3021;
                        float _3061 = (0.5 / (((_3050 * ((_3036 * _3051) + _3021)) + 9.9999999392252902907785028219223e-09) + (((_3050 * _3051) + _3021) * _3036))) * _3050;
                        float _4336 = isnan(0.0) ? _3061 : (isnan(_3061) ? 0.0 : max(_3061, 0.0));
                        float _3072 = (((_3022 * 3.1415927410125732421875) * (isnan(1.0) ? _4336 : (isnan(_4336) ? 1.0 : min(_4336, 1.0)))) / ((_3044 * _3044) * ((_2987 * 2.1991131305694580078125) + 3.141590118408203125))) * _2976;
                        _2829 = (_2991 * _2939.x) + _2897;
                        _2830 = (_2991 * _2939.y) + _2898;
                        _2831 = (_2991 * _2939.z) + _2899;
                        _2826 = (_3072 * _2956.x) + _2894;
                        _2827 = (_3072 * _2956.y) + _2895;
                        _2828 = (_3072 * _2956.z) + _2896;
                        if (_2901 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2894 = _2826;
                            _2895 = _2827;
                            _2896 = _2828;
                            _2897 = _2829;
                            _2898 = _2830;
                            _2899 = _2831;
                            _2900 = _2901;
                        }
                    }
                    frontier_phi_61_pred = _2826;
                    frontier_phi_61_pred_1 = _2831;
                    frontier_phi_61_pred_2 = _2830;
                    frontier_phi_61_pred_3 = _2829;
                    frontier_phi_61_pred_4 = _2828;
                    frontier_phi_61_pred_5 = _2827;
                }
                _2626 = frontier_phi_61_pred;
                _2636 = frontier_phi_61_pred_1;
                _2634 = frontier_phi_61_pred_2;
                _2632 = frontier_phi_61_pred_3;
                _2630 = frontier_phi_61_pred_4;
                _2628 = frontier_phi_61_pred_5;
                uint _2777 = _2776 + 1u;
                if (_2777 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2770 = _2626;
                    _2771 = _2628;
                    _2772 = _2630;
                    _2773 = _2632;
                    _2774 = _2634;
                    _2775 = _2636;
                    _2776 = _2777;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2625 = _2626;
            _2627 = _2628;
            _2629 = _2630;
            _2631 = _2632;
            _2633 = _2634;
            _2635 = _2636;
        }
        uvec4 _2639 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2640 = _2639.z;
        uint _2642 = (_2640 >> 8u) & 15u;
        float _2738;
        float _2740;
        float _2742;
        float _2744;
        float _2746;
        float _2748;
        if (((4294967295u << _2642) & _2524) == 0u)
        {
            _2738 = _2625;
            _2740 = _2627;
            _2742 = _2629;
            _2744 = _2631;
            _2746 = _2633;
            _2748 = _2635;
        }
        else
        {
            float _2763 = inversesqrt(dot(vec3(_2478, _2479, _2480), vec3(_2478, _2479, _2480)));
            float _2764 = _2763 * _2478;
            float _2765 = _2763 * _2479;
            float _2766 = _2763 * _2480;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2642 < ((_2640 >> 12u) & 15u))
            {
                float _2739;
                float _2741;
                float _2743;
                float _2745;
                float _2747;
                float _2749;
                float _2877 = _2625;
                float _2878 = _2627;
                float _2879 = _2629;
                float _2880 = _2631;
                float _2881 = _2633;
                float _2882 = _2635;
                uint _2883 = _2642;
                uint _2892;
                bool _2893;
                for (;;)
                {
                    _2892 = texelFetch(g_lightClassification, int((((_2518 << 5u) + (_2504 << 9u)) + (_2883 << 2u)) >> 2u)).x;
                    _2893 = _2892 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_2893)
                    {
                        frontier_phi_67_pred = _2880;
                        frontier_phi_67_pred_1 = _2881;
                        frontier_phi_67_pred_2 = _2882;
                        frontier_phi_67_pred_3 = _2879;
                        frontier_phi_67_pred_4 = _2878;
                        frontier_phi_67_pred_5 = _2877;
                    }
                    else
                    {
                        float _3077;
                        float _3078;
                        float _3079;
                        float _3080;
                        float _3081;
                        float _3082;
                        float _3370;
                        float _3371;
                        float _3372;
                        float _3373;
                        float _3374;
                        float _3375;
                        float _3090 = _2877;
                        float _3091 = _2878;
                        float _3092 = _2879;
                        float _3093 = _2880;
                        float _3094 = _2881;
                        float _3095 = _2882;
                        uint _3096 = _2892;
                        uint _3097;
                        vec4 _3122;
                        float _3123;
                        vec4 _3138;
                        vec3 _3150;
                        vec4 _3165;
                        vec4 _3180;
                        float _3226;
                        bool _3227;
                        for (;;)
                        {
                            uint _3107 = ((_2883 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3096));
                            _3097 = (_3096 + 4294967295u) & _3096;
                            uint _3109 = _3107 * 40u;
                            _3122 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3109)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3109 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3109 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3109 + 3u)).x));
                            _3123 = _3122.w;
                            uint _3125 = (_3107 * 40u) + 4u;
                            _3138 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3125)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3125 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3125 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3125 + 3u)).x));
                            uint _3140 = (_3107 * 40u) + 8u;
                            _3150 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3140)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3140 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3140 + 2u)).x));
                            uint _3152 = (_3107 * 40u) + 16u;
                            _3165 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3152)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3152 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3152 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3152 + 3u)).x));
                            uint _3167 = (_3107 * 40u) + 20u;
                            _3180 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3167)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3167 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3167 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3167 + 3u)).x));
                            uint _3182 = (_3107 * 40u) + 24u;
                            vec4 _3195 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3182)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3182 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3182 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3182 + 3u)).x));
                            uint _3201 = (_3107 * 40u) + 28u;
                            vec4 _3214 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3201)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3201 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3201 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3201 + 3u)).x));
                            _3226 = fma(_2480, _3214.z, fma(_2479, _3214.y, _3214.x * _2478)) + _3214.w;
                            _3227 = !((fma(_2480, _3195.z, fma(_2479, _3195.y, _3195.x * _2478)) + _3195.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3227)
                            {
                                float _3254 = _3122.x - _2478;
                                float _3255 = _3122.y - _2479;
                                float _3256 = _3122.z - _2480;
                                float _3257 = dot(vec3(_3254, _3255, _3256), vec3(_3254, _3255, _3256));
                                float _3260 = inversesqrt(_3257);
                                float _3261 = _3260 * _3254;
                                float _3262 = _3260 * _3255;
                                float _3263 = _3260 * _3256;
                                float _3267 = 1.0 - (_3257 / (_3123 * _3123));
                                float _4347 = isnan(0.0) ? _3267 : (isnan(_3267) ? 0.0 : max(_3267, 0.0));
                                float _3268 = isnan(1.0) ? _4347 : (isnan(_4347) ? 1.0 : min(_4347, 1.0));
                                float _3272 = sqrt(_3257) * _3138.w;
                                float _3274 = 1.39999997615814208984375 / (_3272 + 1.39999997615814208984375);
                                float _3275 = _3274 * _3274;
                                float _3278 = ((1.0 - _3275) * dot(vec3(_3261, _3262, _3263), vec3(_761, _764, _767))) + _3275;
                                float _3281 = _3272 * _3272;
                                float _3285 = (fma(_2480, _3165.z, fma(_2479, _3165.y, _3165.x * _2478)) + _3165.w) / _3226;
                                float _3286 = (fma(_2480, _3180.z, fma(_2479, _3180.y, _3180.x * _2478)) + _3180.w) / _3226;
                                float _3290 = 1.0 - dot(vec2(_3285, _3286), vec2(_3285, _3286));
                                float _4363 = isnan(0.0) ? _3290 : (isnan(_3290) ? 0.0 : max(_3290, 0.0));
                                float _3291 = isnan(1.0) ? _4363 : (isnan(_4363) ? 1.0 : min(_4363, 1.0));
                                float _3292 = _3291 * (((isnan(0.0) ? _3278 : (isnan(_3278) ? 0.0 : max(_3278, 0.0))) * _3268) / ((_3281 * 0.699999988079071044921875) + 1.0));
                                float _3304 = exp2(log2(1.0 / ((_3281 * 3.5) + 5.0)) * 0.25);
                                float _3305 = 1.0 - _821;
                                float _3312 = sqrt(1.0 - ((1.0 - (_3305 * _3305)) * (1.0 - (_3304 * _3304))));
                                float _3313 = _3312 * _3312;
                                float _3314 = _3313 * _3313;
                                float _3315 = _3261 - _2764;
                                float _3316 = _3262 - _2765;
                                float _3317 = _3263 - _2766;
                                float _3321 = inversesqrt(dot(vec3(_3315, _3316, _3317), vec3(_3315, _3316, _3317)));
                                float _3325 = dot(vec3(_761, _764, _767), vec3((-0.0) - _2764, (-0.0) - _2765, (-0.0) - _2766));
                                float _4374 = isnan(0.0) ? _3325 : (isnan(_3325) ? 0.0 : max(_3325, 0.0));
                                float _3328 = isnan(1.0) ? _4374 : (isnan(_4374) ? 1.0 : min(_4374, 1.0));
                                float _3329 = dot(vec3(_761, _764, _767), vec3(_3321 * _3315, _3321 * _3316, _3321 * _3317));
                                float _4385 = isnan(0.0) ? _3329 : (isnan(_3329) ? 0.0 : max(_3329, 0.0));
                                float _3332 = isnan(1.0) ? _4385 : (isnan(_4385) ? 1.0 : min(_4385, 1.0));
                                float _3336 = ((_3332 * _3332) * (_3314 + (-1.0))) + 1.0;
                                float _3337 = _3274 * _3313;
                                float _3338 = _3337 * _3337;
                                float _3344 = ((1.0 - _3338) * dot(vec3(_761, _764, _767), vec3(_3261, _3262, _3263))) + _3338;
                                float _4396 = isnan(0.0) ? _3344 : (isnan(_3344) ? 0.0 : max(_3344, 0.0));
                                float _3345 = isnan(1.0) ? _4396 : (isnan(_4396) ? 1.0 : min(_4396, 1.0));
                                float _3346 = 1.0 - _3313;
                                float _3356 = (0.5 / (((_3345 * ((_3328 * _3346) + _3313)) + 9.9999999392252902907785028219223e-09) + (((_3345 * _3346) + _3313) * _3328))) * _3345;
                                float _4407 = isnan(0.0) ? _3356 : (isnan(_3356) ? 0.0 : max(_3356, 0.0));
                                float _3366 = (_3291 * _3268) * (((_3314 * 3.1415927410125732421875) * (isnan(1.0) ? _4407 : (isnan(_4407) ? 1.0 : min(_4407, 1.0)))) / ((_3336 * _3336) * ((_3281 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3366 * _3150.x;
                                frontier_phi_73_pred_1 = _3366 * _3150.y;
                                frontier_phi_73_pred_2 = _3292 * _3138.z;
                                frontier_phi_73_pred_3 = _3292 * _3138.y;
                                frontier_phi_73_pred_4 = _3292 * _3138.x;
                                frontier_phi_73_pred_5 = _3366 * _3150.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3370 = frontier_phi_73_pred;
                            _3371 = frontier_phi_73_pred_1;
                            _3375 = frontier_phi_73_pred_2;
                            _3374 = frontier_phi_73_pred_3;
                            _3373 = frontier_phi_73_pred_4;
                            _3372 = frontier_phi_73_pred_5;
                            _3080 = _3373 + _3093;
                            _3081 = _3374 + _3094;
                            _3082 = _3375 + _3095;
                            _3077 = _3370 + _3090;
                            _3078 = _3371 + _3091;
                            _3079 = _3372 + _3092;
                            if (_3097 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3090 = _3077;
                                _3091 = _3078;
                                _3092 = _3079;
                                _3093 = _3080;
                                _3094 = _3081;
                                _3095 = _3082;
                                _3096 = _3097;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3080;
                        frontier_phi_67_pred_1 = _3081;
                        frontier_phi_67_pred_2 = _3082;
                        frontier_phi_67_pred_3 = _3079;
                        frontier_phi_67_pred_4 = _3078;
                        frontier_phi_67_pred_5 = _3077;
                    }
                    _2745 = frontier_phi_67_pred;
                    _2747 = frontier_phi_67_pred_1;
                    _2749 = frontier_phi_67_pred_2;
                    _2743 = frontier_phi_67_pred_3;
                    _2741 = frontier_phi_67_pred_4;
                    _2739 = frontier_phi_67_pred_5;
                    uint _2884 = _2883 + 1u;
                    if (_2884 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2877 = _2739;
                        _2878 = _2741;
                        _2879 = _2743;
                        _2880 = _2745;
                        _2881 = _2747;
                        _2882 = _2749;
                        _2883 = _2884;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _2747;
                frontier_phi_55_56_ladder_1 = _2749;
                frontier_phi_55_56_ladder_2 = _2745;
                frontier_phi_55_56_ladder_3 = _2743;
                frontier_phi_55_56_ladder_4 = _2741;
                frontier_phi_55_56_ladder_5 = _2739;
            }
            else
            {
                frontier_phi_55_56_ladder = _2633;
                frontier_phi_55_56_ladder_1 = _2635;
                frontier_phi_55_56_ladder_2 = _2631;
                frontier_phi_55_56_ladder_3 = _2629;
                frontier_phi_55_56_ladder_4 = _2627;
                frontier_phi_55_56_ladder_5 = _2625;
            }
            _2738 = frontier_phi_55_56_ladder_5;
            _2740 = frontier_phi_55_56_ladder_4;
            _2742 = frontier_phi_55_56_ladder_3;
            _2744 = frontier_phi_55_56_ladder_2;
            _2746 = frontier_phi_55_56_ladder;
            _2748 = frontier_phi_55_56_ladder_1;
        }
        float _2753 = isnan(1.0) ? _805 : (isnan(_805) ? 1.0 : min(_805, 1.0));
        _2537 = (_2753 * _2744) + _1989;
        _2539 = (_2753 * _2746) + _1991;
        _2541 = (_2753 * _2748) + _1993;
        _2543 = ((_2738 * 0.039999999105930328369140625) * _2753) + _2322;
        _2545 = ((_2740 * 0.039999999105930328369140625) * _2753) + _2324;
        _2547 = ((_2742 * 0.039999999105930328369140625) * _2753) + _2326;
    }
    else
    {
        _2537 = _1989;
        _2539 = _1991;
        _2541 = _1993;
        _2543 = _2322;
        _2545 = _2324;
        _2547 = _2326;
    }
    float _4423 = isnan(0.0) ? _790 : (isnan(_790) ? 0.0 : max(_790, 0.0));
    float _4434 = isnan(0.0) ? _791 : (isnan(_791) ? 0.0 : max(_791, 0.0));
    float _4445 = isnan(0.0) ? _792 : (isnan(_792) ? 0.0 : max(_792, 0.0));
    uint _2567 = _238 + 6u;
    float _2575 = _742 / cbSceneParam._m0[86u].x;
    float _2576 = _743 / cbSceneParam._m0[86u].y;
    vec4 _2590 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2575, _2576, (log2((isnan(cbSceneParam._m0[77u].w) ? _675 : (isnan(_675) ? cbSceneParam._m0[77u].w : min(_675, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2592 = _2590.x;
    float _2593 = _2590.y;
    float _2594 = _2590.z;
    float _2595 = _2590.w;
    float _2688;
    float _2690;
    float _2692;
    float _2694;
    if (_675 > cbSceneParam._m0[78u].w)
    {
        float _2650 = isnan(_675) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _675 : min(cbSceneParam._m0[80u].w, _675));
        float _2651 = _2650 / _675;
        float _2662 = _2651 * _727;
        float _2663 = _728 * _2651;
        float _2664 = (-0.0) - _2663;
        float _2666 = _2651 * _729;
        float _2668 = (cbSceneParam._m0[77u].w * _2664) / _2650;
        float _2669 = _2668 + cbSceneParam._m0[79u].w;
        float _2670 = cbSceneParam._m0[79u].w - _2663;
        float _2676 = sqrt(((_2662 * _2662) + (_2663 * _2663)) + (_2666 * _2666));
        float _2679 = (1.0 - (cbSceneParam._m0[77u].w / _2650)) * _2676;
        float _2684 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2686 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2839;
        if (abs((_2664 - _2668) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2839 = ((((_2669 > 0.0) ? exp2(_2684 * _2669) : (2.0 - exp2(_2686 * _2669))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2679;
        }
        else
        {
            float _2799 = 1.0 / cbSceneParam._m0[80u].x;
            float _2800 = isnan(_2670) ? _2669 : (isnan(_2669) ? _2670 : max(_2669, _2670));
            float _2801 = isnan(_2670) ? _2669 : (isnan(_2669) ? _2670 : min(_2669, _2670));
            float _2810 = isnan(0.0) ? _2800 : (isnan(_2800) ? 0.0 : min(_2800, 0.0));
            float _2811 = isnan(0.0) ? _2801 : (isnan(_2801) ? 0.0 : min(_2801, 0.0));
            _2839 = ((abs(_2676 / _2664) * cbSceneParam._m0[80u].y) * ((((_2810 - _2811) * 2.0) - ((exp2(_2684 * (isnan(0.0) ? _2800 : (isnan(_2800) ? 0.0 : max(_2800, 0.0)))) - exp2(_2684 * (isnan(0.0) ? _2801 : (isnan(_2801) ? 0.0 : max(_2801, 0.0))))) * _2799)) - ((exp2(_2686 * _2810) - exp2(_2686 * _2811)) * _2799))) + (_2679 * cbSceneParam._m0[80u].z);
        }
        vec4 _2841 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2575, _2576, 1.0), 0.0);
        float _2850 = exp2((_2839 * (-1.44269502162933349609375)) * (1.0 - _2841.w));
        float _2851 = log2(_2850);
        float _2867 = log2(_2595);
        _2688 = (exp2(_2867 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2851 * cbSceneParam._m0[78u].x)) * _2841.x) / cbSceneParam._m0[78u].x)) + _2592;
        _2690 = (exp2(_2867 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2851 * cbSceneParam._m0[78u].y)) * _2841.y) / cbSceneParam._m0[78u].y)) + _2593;
        _2692 = (exp2(_2867 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2851 * cbSceneParam._m0[78u].z)) * _2841.z) / cbSceneParam._m0[78u].z)) + _2594;
        _2694 = _2850 * _2595;
    }
    else
    {
        _2688 = _2592;
        _2690 = _2593;
        _2692 = _2594;
        _2694 = _2595;
    }
    float _2706 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2707 = _2706 == 3.0;
    float _2708 = log2(_2694);
    float _2715 = exp2(_2708 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4423 : (isnan(_4423) ? 1.0 : min(_4423, 1.0))) * (_2537 + ((isnan(0.0) ? _1531 : (isnan(_1531) ? 0.0 : max(_1531, 0.0))) * _805))) + ((_2543 + ((isnan(0.0) ? _1821 : (isnan(_1821) ? 0.0 : max(_1821, 0.0))) * _1610)) * cbPerFrame._m0[3u].x));
    float _2716 = exp2(_2708 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4434 : (isnan(_4434) ? 1.0 : min(_4434, 1.0))) * (_2539 + ((isnan(0.0) ? _1534 : (isnan(_1534) ? 0.0 : max(_1534, 0.0))) * _805))) + ((_2545 + ((isnan(0.0) ? _1824 : (isnan(_1824) ? 0.0 : max(_1824, 0.0))) * _1610)) * cbPerFrame._m0[3u].x));
    float _2717 = exp2(_2708 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4445 : (isnan(_4445) ? 1.0 : min(_4445, 1.0))) * (_2541 + ((isnan(0.0) ? _1537 : (isnan(_1537) ? 0.0 : max(_1537, 0.0))) * _805))) + ((_2547 + ((isnan(0.0) ? _1827 : (isnan(_1827) ? 0.0 : max(_1827, 0.0))) * _1610)) * cbPerFrame._m0[3u].x));
    float _2726 = (_2706 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2726 * (_2707 ? _2715 : (_2715 + (cbSceneParam._m0[72u].w * _2688)));
    SV_Target.y = _2726 * (_2707 ? _2716 : (_2716 + (cbSceneParam._m0[72u].w * _2690)));
    SV_Target.z = _2726 * (_2707 ? _2717 : (_2717 + (cbSceneParam._m0[72u].w * _2692)));
    SV_Target.w = cbInstanceData._m0[_2567].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2567].w;
}


