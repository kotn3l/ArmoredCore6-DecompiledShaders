#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 2) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 3) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _183 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _184 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _185 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _191 = inversesqrt(dot(vec3(_183, _184, _185), vec3(_183, _184, _185)));
    float _198 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _205 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _211 = uint(roundEven(NORMAL.w)) * 13u;
    uint _217 = _211 + 1u;
    uint _221 = _211 + 2u;
    float _230 = sqrt(((cbInstanceData._m0[_217].x * cbInstanceData._m0[_217].x) + (cbInstanceData._m0[_211].x * cbInstanceData._m0[_211].x)) + (cbInstanceData._m0[_221].x * cbInstanceData._m0[_221].x));
    float _231 = _230 * TEXCOORD.z;
    float _232 = _230 * TEXCOORD.w;
    vec4 _252 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _258 = _252.x * cbMtdParam._m0[11u].x;
    float _259 = _252.y * cbMtdParam._m0[11u].y;
    float _260 = _252.z * cbMtdParam._m0[11u].z;
    vec4 _279 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _231) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _232) + cbTextureTilingScale._m0[5u].w));
    vec4 _319 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _321 = _319.x;
    float _331 = dot(vec4(_321, _319.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _348 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_321 - _331) * cbMtdParam._m0[24u].x) + _331) * cbMtdParam._m0[23u].x))) + 1.0;
    float _924 = isnan(0.0) ? _348 : (isnan(_348) ? 0.0 : max(_348, 0.0));
    float _349 = isnan(1.0) ? _924 : (isnan(_924) ? 1.0 : min(_924, 1.0));
    float _356 = (_349 * ((_279.x * cbMtdParam._m0[12u].x) - _258)) + _258;
    float _357 = (_349 * ((_279.y * cbMtdParam._m0[12u].y) - _259)) + _259;
    float _358 = (_349 * ((_279.z * cbMtdParam._m0[12u].z) - _260)) + _260;
    vec4 _375 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _231) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _232) + cbTextureTilingScale._m0[3u].w));
    vec4 _395 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _397 = _395.x;
    float _407 = dot(vec4(_397, _395.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _421 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.y) * 2.0) - ((((_397 - _407) * cbMtdParam._m0[24u].x) + _407) * cbMtdParam._m0[20u].w))) + 1.0;
    float _935 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
    float _422 = isnan(1.0) ? _935 : (isnan(_935) ? 1.0 : min(_935, 1.0));
    float _429 = (_422 * ((_375.x * cbMtdParam._m0[13u].x) - _356)) + _356;
    float _430 = (_422 * ((_375.y * cbMtdParam._m0[13u].y) - _357)) + _357;
    float _431 = (_422 * ((_375.z * cbMtdParam._m0[13u].z) - _358)) + _358;
    vec4 _450 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _231) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _232) + cbTextureTilingScale._m0[14u].w));
    vec4 _469 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _231) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _232) + cbTextureTilingScale._m0[20u].w));
    vec4 _492 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _231) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _232) + cbTextureTilingScale._m0[4u].w));
    vec4 _509 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _511 = _509.x;
    float _512 = _509.y;
    float _513 = _509.z;
    float _520 = ((_492.x - _511) * _349) + _511;
    float _521 = ((_492.y - _512) * _349) + _512;
    float _522 = ((_492.z - _513) * _349) + _513;
    vec4 _534 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _231) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _232) + cbTextureTilingScale._m0[2u].w));
    float _547 = ((_534.z - _522) * _422) + _522;
    float _550 = ((((_534.x - _520) * _422) + _520) * 2.0) + (-1.0);
    float _551 = ((((_534.y - _521) * _422) + _521) * 2.0) + (-1.0);
    float _552 = dot(vec2(_550, _551), vec2(_550, _551));
    float _946 = isnan(0.0) ? _552 : (isnan(_552) ? 0.0 : max(_552, 0.0));
    float _557 = sqrt(1.0 - (isnan(1.0) ? _946 : (isnan(_946) ? 1.0 : min(_946, 1.0))));
    vec4 _570 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _588 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _231) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _232) + cbTextureTilingScale._m0[11u].w));
    float _590 = _588.x;
    float _591 = 1.0 - _590;
    float _604 = (TEXCOORD_8.w - ((cbMtdParam._m0[21u].z * (1.0 - TEXCOORD_8.w)) * ((((_590 - _591) * cbMtdParam._m0[24u].z) + _591) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[21u].w + 1.0);
    float _957 = isnan(0.0) ? _604 : (isnan(_604) ? 0.0 : max(_604, 0.0));
    float _605 = isnan(1.0) ? _957 : (isnan(_957) ? 1.0 : min(_957, 1.0));
    float _612 = (_605 * ((_450.x * cbMtdParam._m0[18u].x) - _429)) + _429;
    float _613 = (_605 * ((_450.y * cbMtdParam._m0[18u].y) - _430)) + _430;
    float _614 = (_605 * ((_450.z * cbMtdParam._m0[18u].z) - _431)) + _431;
    float _619 = (((_469.z - _547) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _547;
    vec4 _632 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _231) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _232) + cbTextureTilingScale._m0[15u].w));
    float _639 = (_632.x * 2.0) + (-1.0);
    float _640 = (_632.y * 2.0) + (-1.0);
    float _641 = dot(vec2(_639, _640), vec2(_639, _640));
    float _968 = isnan(0.0) ? _641 : (isnan(_641) ? 0.0 : max(_641, 0.0));
    float _649 = (_605 * (_632.z - _619)) + _619;
    float _654 = _550 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_469.x * 2.0) + (-1.0)));
    float _655 = _551 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_469.y * 2.0) + (-1.0)));
    float _667 = (((_639 - _654) + (cbMtdParam._m0[21u].x * _654)) * _605) + _654;
    float _668 = (((_640 - _655) + (cbMtdParam._m0[21u].x * _655)) * _605) + _655;
    float _669 = (_605 * (sqrt(1.0 - (isnan(1.0) ? _968 : (isnan(_968) ? 1.0 : min(_968, 1.0)))) - _557)) + _557;
    float _674 = cbMtdParam._m0[22u].x + _570.w;
    float _677 = fma(_669, _198 * NORMAL.x, fma(_668, _205 * TANGENT.x, (_191 * _183) * _667));
    float _680 = fma(_669, _198 * NORMAL.y, fma(_668, _205 * TANGENT.y, (_191 * _184) * _667));
    float _683 = fma(_669, _198 * NORMAL.z, fma(_668, _205 * TANGENT.z, (_191 * _185) * _667));
    float _687 = inversesqrt(dot(vec3(_677, _680, _683), vec3(_677, _680, _683)));
    float _979 = isnan(0.0) ? _649 : (isnan(_649) ? 0.0 : max(_649, 0.0));
    float _990 = isnan(0.0) ? _674 : (isnan(_674) ? 0.0 : max(_674, 0.0));
    float _689 = isnan(1.0) ? _990 : (isnan(_990) ? 1.0 : min(_990, 1.0));
    float _1001 = isnan(0.0) ? _612 : (isnan(_612) ? 0.0 : max(_612, 0.0));
    float _690 = isnan(1.0) ? _1001 : (isnan(_1001) ? 1.0 : min(_1001, 1.0));
    float _1012 = isnan(0.0) ? _613 : (isnan(_613) ? 0.0 : max(_613, 0.0));
    float _691 = isnan(1.0) ? _1012 : (isnan(_1012) ? 1.0 : min(_1012, 1.0));
    float _1023 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _692 = isnan(1.0) ? _1023 : (isnan(_1023) ? 1.0 : min(_1023, 1.0));
    float _734 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _744 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _734);
    float _745 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _734);
    float _746 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _734);
    vec4 _751 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _753 = _751.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _813 = sqrt(((_744 * _744) + (_745 * _745)) + (_746 * _746));
        float _819 = (cbMatDynParam._m0[5u].x * _813) + cbMatDynParam._m0[5u].y;
        float _1034 = isnan(0.0) ? _819 : (isnan(_819) ? 0.0 : max(_819, 0.0));
        float _820 = isnan(1.0) ? _1034 : (isnan(_1034) ? 1.0 : min(_1034, 1.0));
        float _824 = (cbMatDynParam._m0[5u].z * _813) + cbMatDynParam._m0[5u].w;
        float _1045 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1045 : (isnan(_1045) ? 1.0 : min(_1045, 1.0))) - _820)) + _820) < ((_753 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _851;
    vec4 _775;
    float _782;
    float _783;
    float _784;
    float _785;
    float _789;
    vec4 _793;
    float _795;
    float _796;
    bool _807;
    for (;;)
    {
        _775 = cbInstanceData._m0[(_211 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _779 = (cbMtdParam._m0[0u].x * _690) * _775.x;
        float _780 = (cbMtdParam._m0[0u].y * _691) * _775.y;
        float _781 = (cbMtdParam._m0[0u].z * _692) * _775.z;
        float _1056 = isnan(0.0) ? _779 : (isnan(_779) ? 0.0 : max(_779, 0.0));
        _782 = isnan(1.0) ? _1056 : (isnan(_1056) ? 1.0 : min(_1056, 1.0));
        float _1067 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
        _783 = isnan(1.0) ? _1067 : (isnan(_1067) ? 1.0 : min(_1067, 1.0));
        float _1078 = isnan(0.0) ? _781 : (isnan(_781) ? 0.0 : max(_781, 0.0));
        _784 = isnan(1.0) ? _1078 : (isnan(_1078) ? 1.0 : min(_1078, 1.0));
        _785 = _689 * TEXCOORD_5.w;
        _789 = cbInstanceData._m0[_211 + 6u].w;
        float _790 = _753 + (-0.5);
        _793 = cbMtdParam._m0[1u];
        _795 = _793.y * _790;
        _796 = _790 * 0.999000012874603271484375;
        _807 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_807)
        {
            if ((cbInstanceData._m0[_211 + 7u].x + _796) < 0.5)
            {
                _851 = true;
                break;
            }
        }
        if ((_775.w < 1.0) && ((_775.w + _796) < 0.5))
        {
            _851 = true;
            break;
        }
        if ((_795 + 1.0) < _793.x)
        {
            _851 = true;
            break;
        }
        _851 = false;
        break;
    }
    if (_851)
    {
        discard_state = true;
    }
    bool _877 = cbMtdParam._m0[1u].z != 0.0;
    float _878 = _877 ? _789 : 0.0;
    SV_Target.x = ((_677 * 0.5) * _687) + 0.500488758087158203125;
    SV_Target.y = ((_680 * 0.5) * _687) + 0.500488758087158203125;
    SV_Target.z = ((_683 * 0.5) * _687) + 0.500488758087158203125;
    SV_Target.w = _878;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _979 : (isnan(_979) ? 1.0 : min(_979, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _877 ? _789 : _785;
    SV_Target_2.x = _782;
    SV_Target_2.y = _783;
    SV_Target_2.z = _784;
    SV_Target_2.w = _877 ? _789 : (float(floatBitsToUint(cbInstanceData._m0[_211 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _878;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _878;
    discard_exit();
}


