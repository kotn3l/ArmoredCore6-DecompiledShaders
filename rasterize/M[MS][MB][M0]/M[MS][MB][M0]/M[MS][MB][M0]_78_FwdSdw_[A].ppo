#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 18) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_28;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1306;
float _3949;
float _3950;
float _3951;
float _3952;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _230 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _231 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _232 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _238 = inversesqrt(dot(vec3(_230, _231, _232), vec3(_230, _231, _232)));
    float _245 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _246 = _245 * NORMAL.x;
    float _247 = _245 * NORMAL.y;
    float _248 = _245 * NORMAL.z;
    float _252 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _264 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _266 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _267 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3961 = isnan(0.0) ? _264 : (isnan(_264) ? 0.0 : max(_264, 0.0));
    float _3972 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
    float _3983 = isnan(0.0) ? _267 : (isnan(_267) ? 0.0 : max(_267, 0.0));
    uint _277 = uint(roundEven(NORMAL.w)) * 13u;
    uint _282 = _277 + 1u;
    uint _286 = _277 + 2u;
    float _295 = sqrt(((cbInstanceData._m0[_282].x * cbInstanceData._m0[_282].x) + (cbInstanceData._m0[_277].x * cbInstanceData._m0[_277].x)) + (cbInstanceData._m0[_286].x * cbInstanceData._m0[_286].x));
    float _296 = _295 * TEXCOORD.z;
    float _297 = _295 * TEXCOORD.w;
    vec4 _310 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _296) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _297) + cbTextureTilingScale._m0[13u].w));
    vec4 _334 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _339 = _334.x * cbMtdParam._m0[11u].x;
    float _340 = _334.y * cbMtdParam._m0[11u].y;
    float _341 = _334.z * cbMtdParam._m0[11u].z;
    vec4 _360 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _296) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _297) + cbTextureTilingScale._m0[5u].w));
    vec4 _396 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _398 = _396.x;
    float _408 = dot(vec4(_398, _396.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _425 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_398 - _408) * cbMtdParam._m0[24u].x) + _408) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3994 = isnan(0.0) ? _425 : (isnan(_425) ? 0.0 : max(_425, 0.0));
    float _426 = isnan(1.0) ? _3994 : (isnan(_3994) ? 1.0 : min(_3994, 1.0));
    float _433 = (_426 * ((_360.x * cbMtdParam._m0[12u].x) - _339)) + _339;
    float _434 = (_426 * ((_360.y * cbMtdParam._m0[12u].y) - _340)) + _340;
    float _435 = (_426 * ((_360.z * cbMtdParam._m0[12u].z) - _341)) + _341;
    float _439 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _310.x) * _433;
    float _442 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _310.y) * _434;
    float _445 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _310.z) * _435;
    float _452 = ((_433 - _439) * (isnan(1.0) ? _3961 : (isnan(_3961) ? 1.0 : min(_3961, 1.0)))) + _439;
    float _453 = ((_434 - _442) * (isnan(1.0) ? _3972 : (isnan(_3972) ? 1.0 : min(_3972, 1.0)))) + _442;
    float _454 = ((_435 - _445) * (isnan(1.0) ? _3983 : (isnan(_3983) ? 1.0 : min(_3983, 1.0)))) + _445;
    vec4 _467 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _296) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _297) + cbTextureTilingScale._m0[20u].w));
    vec4 _492 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _296) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _297) + cbTextureTilingScale._m0[4u].w));
    vec4 _509 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _511 = _509.x;
    float _512 = _509.y;
    float _513 = _509.z;
    float _522 = ((_492.z - _513) * _426) + _513;
    float _525 = ((((_492.x - _511) * _426) + _511) * 2.0) + (-1.0);
    float _526 = ((((_492.y - _512) * _426) + _512) * 2.0) + (-1.0);
    float _527 = dot(vec2(_525, _526), vec2(_525, _526));
    float _4005 = isnan(0.0) ? _527 : (isnan(_527) ? 0.0 : max(_527, 0.0));
    float _532 = sqrt(1.0 - (isnan(1.0) ? _4005 : (isnan(_4005) ? 1.0 : min(_4005, 1.0))));
    float _537 = _525 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_467.x * 2.0) + (-1.0)));
    float _538 = _526 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_467.y * 2.0) + (-1.0)));
    vec4 _551 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _565 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _296) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _297) + cbTextureTilingScale._m0[19u].w));
    float _567 = _565.x;
    float _568 = 1.0 - _567;
    float _594 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_567 - _568) * cbMtdParam._m0[24u].w) + _568) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4016 = isnan(0.0) ? _594 : (isnan(_594) ? 0.0 : max(_594, 0.0));
    float _595 = isnan(1.0) ? _4016 : (isnan(_4016) ? 1.0 : min(_4016, 1.0));
    float _603 = ((((cbMtdParam._m0[10u].x - _452) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _595) + _452;
    float _604 = ((((cbMtdParam._m0[10u].y - _453) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _595) + _453;
    float _605 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _454)) * _595) + _454;
    float _610 = (((_467.z - _522) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _522;
    float _614 = ((cbMtdParam._m0[23u].y - _610) * _595) + _610;
    vec4 _633 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _296) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _297) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _635 = _633.x;
    float _636 = _633.y;
    float _642 = dot(vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0), vec4(_246, _247, _248, 0.0));
    vec4 _657 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_28, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * _296) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * _297) + cbTextureTilingScale._m0[18u].w));
    float _659 = _657.x;
    float _664 = fract(_657.w + cbPerFrame._m0[22u].x);
    float _666 = (1.0 - _664) * _659;
    float _671 = ((_664 + (-1.0)) + _659) * 9.0;
    float _673 = ((_659 + (-1.0)) + _664) * 9.0;
    float _674 = isnan(0.0) ? _671 : (isnan(_671) ? 0.0 : max(_671, 0.0));
    float _675 = isnan(0.0) ? _673 : (isnan(_673) ? 0.0 : max(_673, 0.0));
    float _689 = (_666 * ((_657.y * 2.0) + (-1.0))) * sin((isnan(3.0) ? _674 : (isnan(_674) ? 3.0 : min(_674, 3.0))) * 3.1415927410125732421875);
    float _691 = (_666 * ((_657.z * 2.0) + (-1.0))) * sin((isnan(3.0) ? _675 : (isnan(_675) ? 3.0 : min(_675, 3.0))) * 3.1415927410125732421875);
    float _695 = inversesqrt(dot(vec3(_689, _691, 1.0), vec3(_689, _691, 1.0)));
    float _711 = (((((0.5 - _635) + ((_689 * 0.5) * _695)) * _642) + _635) * 2.0) + (-1.0);
    float _712 = (((((0.5 - _636) + ((_695 * 0.5) * _691)) * _642) + _636) * 2.0) + (-1.0);
    float _713 = dot(vec2(_711, _712), vec2(_711, _712));
    float _4047 = isnan(0.0) ? _713 : (isnan(_713) ? 0.0 : max(_713, 0.0));
    float _729 = ((((cbMtdParam._m0[22u].z * _537) - _537) + _711) * _595) + _537;
    float _730 = ((((cbMtdParam._m0[22u].z * _538) - _538) + _712) * _595) + _538;
    float _731 = (_595 * (sqrt(1.0 - (isnan(1.0) ? _4047 : (isnan(_4047) ? 1.0 : min(_4047, 1.0)))) - _532)) + _532;
    float _733 = cbMtdParam._m0[22u].x + _551.w;
    float _736 = fma(_731, _246, fma(_730, _252 * TANGENT.x, (_238 * _230) * _729));
    float _739 = fma(_731, _247, fma(_730, _252 * TANGENT.y, (_238 * _231) * _729));
    float _742 = fma(_731, _248, fma(_730, _252 * TANGENT.z, (_238 * _232) * _729));
    float _746 = inversesqrt(dot(vec3(_736, _739, _742), vec3(_736, _739, _742)));
    float _747 = _746 * _736;
    float _748 = _746 * _739;
    float _749 = _746 * _742;
    float _4058 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _750 = isnan(1.0) ? _4058 : (isnan(_4058) ? 1.0 : min(_4058, 1.0));
    float _4069 = isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0));
    float _4080 = isnan(0.0) ? _603 : (isnan(_603) ? 0.0 : max(_603, 0.0));
    float _4091 = isnan(0.0) ? _604 : (isnan(_604) ? 0.0 : max(_604, 0.0));
    float _4102 = isnan(0.0) ? _605 : (isnan(_605) ? 0.0 : max(_605, 0.0));
    float _768 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _809 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _819 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _809);
    float _820 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _809);
    float _821 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _809);
    float _825 = inversesqrt(dot(vec3(_819, _820, _821), vec3(_819, _820, _821)));
    float _826 = _819 * _825;
    float _827 = _820 * _825;
    float _828 = _821 * _825;
    vec4 _833 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _835 = _833.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _988 = sqrt(((_819 * _819) + (_820 * _820)) + (_821 * _821));
        float _994 = (cbMatDynParam._m0[5u].x * _988) + cbMatDynParam._m0[5u].y;
        float _4113 = isnan(0.0) ? _994 : (isnan(_994) ? 0.0 : max(_994, 0.0));
        float _995 = isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0));
        float _999 = (cbMatDynParam._m0[5u].z * _988) + cbMatDynParam._m0[5u].w;
        float _4124 = isnan(0.0) ? _999 : (isnan(_999) ? 0.0 : max(_999, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0))) - _995)) + _995) < ((_835 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _846 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _847 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _865 = fma(_749, cbSceneParam._m0[5u].z, fma(_748, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _747));
    float _868 = fma(_749, cbSceneParam._m0[6u].z, fma(_748, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _747));
    float _871 = fma(_749, cbSceneParam._m0[7u].z, fma(_748, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _747));
    uint _884 = _277 + 9u;
    uint _885 = _884 + uint(cbMatDynParam._m0[0u].w);
    float _891 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0)))) * cbInstanceData._m0[_885].x;
    float _892 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4091 : (isnan(_4091) ? 1.0 : min(_4091, 1.0)))) * cbInstanceData._m0[_885].y;
    float _893 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0)))) * cbInstanceData._m0[_885].z;
    float _4135 = isnan(0.0) ? _891 : (isnan(_891) ? 0.0 : max(_891, 0.0));
    float _894 = isnan(1.0) ? _4135 : (isnan(_4135) ? 1.0 : min(_4135, 1.0));
    float _4146 = isnan(0.0) ? _892 : (isnan(_892) ? 0.0 : max(_892, 0.0));
    float _895 = isnan(1.0) ? _4146 : (isnan(_4146) ? 1.0 : min(_4146, 1.0));
    float _4157 = isnan(0.0) ? _893 : (isnan(_893) ? 0.0 : max(_893, 0.0));
    float _896 = isnan(1.0) ? _4157 : (isnan(_4157) ? 1.0 : min(_4157, 1.0));
    vec4 _905 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _846, cbSceneParam._m0[86u].y * _847));
    float _909 = ((isnan(1.0) ? _4069 : (isnan(_4069) ? 1.0 : min(_4069, 1.0))) * TEXCOORD_5.w) * _905.x;
    float _910 = dot(vec3(_747, _748, _749), vec3(_826, _827, _828));
    float _913 = _910 * 2.0;
    float _917 = (_913 * _747) - _826;
    float _918 = (_913 * _748) - _827;
    float _919 = (_913 * _749) - _828;
    float _923 = abs(dot(vec3(_826, _827, _828), vec3(_747, _748, _749)));
    float _4168 = isnan(0.0) ? _923 : (isnan(_923) ? 0.0 : max(_923, 0.0));
    float _925 = sqrt(_750);
    float _937 = exp2((_925 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4168 : (isnan(_4168) ? 1.0 : min(_4168, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_925 * 3.0));
    float _969 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _973 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _977 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1305;
    float _1307;
    float _1308;
    float _1309;
    float _1310;
    float _1311;
    float _1312;
    float _1313;
    float _1314;
    float _1315;
    float _1316;
    float _1317;
    float _1318;
    float _1319;
    float _1320;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1031 = fma(_977, cbModelParam._m0[26u].z, fma(_973, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _969));
        float _1035 = fma(_977, cbModelParam._m0[27u].z, fma(_973, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _969));
        float _1039 = fma(_977, cbModelParam._m0[28u].z, fma(_973, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _969));
        float _1063 = _969 + _747;
        float _1064 = _973 + _748;
        float _1065 = _977 + _749;
        float _1075 = fma(_1065, cbModelParam._m0[26u].z, fma(_1064, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1063)) - _1031;
        float _1076 = fma(_1065, cbModelParam._m0[27u].z, fma(_1064, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1063)) - _1035;
        float _1077 = fma(_1065, cbModelParam._m0[28u].z, fma(_1064, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1063)) - _1039;
        float _1081 = inversesqrt(dot(vec3(_1075, _1076, _1077), vec3(_1075, _1076, _1077)));
        float _1094 = ((_1081 * _1075) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1031 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1095 = ((_1081 * _1076) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1035 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1096 = ((_1081 * _1077) / cbModelParam._m0[34u].z) + ((((((_1039 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1099 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1094, _1095, _1096), 0.0);
        vec4 _1106 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1094, _1095, _1096), 0.0);
        vec4 _1113 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1094, _1095, _1096), 0.0);
        vec4 _1120 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1094, _1095, _1096), 0.0);
        float _1133 = exp2((_1099.w + (-0.5)) * 20.0) * 2.0;
        float _1134 = _1133 * (_1099.x + (-0.5));
        float _1135 = _1133 * (_1099.y + (-0.5));
        float _1136 = _1133 * (_1099.z + (-0.5));
        float _1143 = exp2((_1106.w + (-0.5)) * 20.0) * 2.0;
        float _1144 = _1143 * (_1106.x + (-0.5));
        float _1145 = _1143 * (_1106.y + (-0.5));
        float _1146 = _1143 * (_1106.z + (-0.5));
        float _1153 = exp2((_1113.w + (-0.5)) * 20.0) * 2.0;
        float _1154 = _1153 * (_1113.x + (-0.5));
        float _1155 = _1153 * (_1113.y + (-0.5));
        float _1156 = _1153 * (_1113.z + (-0.5));
        float _1163 = exp2((_1120.w + (-0.5)) * 20.0) * 2.0;
        float _1164 = _1163 * (_1120.x + (-0.5));
        float _1165 = _1163 * (_1120.y + (-0.5));
        float _1166 = _1163 * (_1120.z + (-0.5));
        float _1167 = isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0));
        float _1168 = isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0));
        float _1169 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
        float _1170 = _1134 * 0.5;
        float _1171 = _1144 * 0.5;
        float _1172 = _1154 * 0.5;
        float _1173 = dot(vec3(_1170, _1171, _1172), vec3(_1170, _1171, _1172));
        float _1178 = (_1173 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1173);
        float _1187 = (dot(vec3(_747, _748, _749), vec3(_1178 * _1170, _1178 * _1171, _1178 * _1172)) + 1.0) * 0.5;
        float _4194 = isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0));
        float _1197 = sqrt(((_1171 * _1171) + (_1170 * _1170)) + (_1172 * _1172)) / (_1167 + 9.9999997473787516355514526367188e-06);
        float _4205 = isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0));
        float _1198 = isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0));
        float _1199 = _1198 * 2.0;
        float _1203 = (1.0 - _1198) / (_1198 + 1.0);
        float _4216 = isnan(0.0) ? _1203 : (isnan(_1203) ? 0.0 : max(_1203, 0.0));
        float _1204 = isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0));
        float _1213 = ((((1.0 - _1204) * (_1199 + 2.0)) * exp2(log2(isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0))) * (_1199 + 1.0))) + _1204) * _1167;
        float _1214 = _1135 * 0.5;
        float _1215 = _1145 * 0.5;
        float _1216 = _1155 * 0.5;
        float _1217 = dot(vec3(_1214, _1215, _1216), vec3(_1214, _1215, _1216));
        float _1222 = (_1217 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1217);
        float _1230 = (dot(vec3(_747, _748, _749), vec3(_1222 * _1214, _1222 * _1215, _1222 * _1216)) + 1.0) * 0.5;
        float _4227 = isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0));
        float _1239 = sqrt(((_1215 * _1215) + (_1214 * _1214)) + (_1216 * _1216)) / (_1168 + 9.9999997473787516355514526367188e-06);
        float _4238 = isnan(0.0) ? _1239 : (isnan(_1239) ? 0.0 : max(_1239, 0.0));
        float _1240 = isnan(1.0) ? _4238 : (isnan(_4238) ? 1.0 : min(_4238, 1.0));
        float _1241 = _1240 * 2.0;
        float _1245 = (1.0 - _1240) / (_1240 + 1.0);
        float _4249 = isnan(0.0) ? _1245 : (isnan(_1245) ? 0.0 : max(_1245, 0.0));
        float _1246 = isnan(1.0) ? _4249 : (isnan(_4249) ? 1.0 : min(_4249, 1.0));
        float _1255 = ((((1.0 - _1246) * (_1241 + 2.0)) * exp2(log2(isnan(1.0) ? _4227 : (isnan(_4227) ? 1.0 : min(_4227, 1.0))) * (_1241 + 1.0))) + _1246) * _1168;
        float _1256 = _1136 * 0.5;
        float _1257 = _1146 * 0.5;
        float _1258 = _1156 * 0.5;
        float _1259 = dot(vec3(_1256, _1257, _1258), vec3(_1256, _1257, _1258));
        float _1264 = (_1259 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1259);
        float _1272 = (dot(vec3(_747, _748, _749), vec3(_1264 * _1256, _1264 * _1257, _1264 * _1258)) + 1.0) * 0.5;
        float _4260 = isnan(0.0) ? _1272 : (isnan(_1272) ? 0.0 : max(_1272, 0.0));
        float _1281 = sqrt(((_1257 * _1257) + (_1256 * _1256)) + (_1258 * _1258)) / (_1169 + 9.9999997473787516355514526367188e-06);
        float _4271 = isnan(0.0) ? _1281 : (isnan(_1281) ? 0.0 : max(_1281, 0.0));
        float _1282 = isnan(1.0) ? _4271 : (isnan(_4271) ? 1.0 : min(_4271, 1.0));
        float _1283 = _1282 * 2.0;
        float _1287 = (1.0 - _1282) / (_1282 + 1.0);
        float _4282 = isnan(0.0) ? _1287 : (isnan(_1287) ? 0.0 : max(_1287, 0.0));
        float _1288 = isnan(1.0) ? _4282 : (isnan(_4282) ? 1.0 : min(_4282, 1.0));
        float _1297 = ((((1.0 - _1288) * (_1283 + 2.0)) * exp2(log2(isnan(1.0) ? _4260 : (isnan(_4260) ? 1.0 : min(_4260, 1.0))) * (_1283 + 1.0))) + _1288) * _1169;
        _1305 = _1136;
        _1307 = _1135;
        _1308 = _1134;
        _1309 = _1146;
        _1310 = _1145;
        _1311 = _1144;
        _1312 = _1156;
        _1313 = _1155;
        _1314 = _1154;
        _1315 = _1169;
        _1316 = _1168;
        _1317 = _1167;
        _1318 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1213 : (isnan(_1213) ? 0.0 : max(_1213, 0.0)));
        _1319 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1255 : (isnan(_1255) ? 0.0 : max(_1255, 0.0)));
        _1320 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1297 : (isnan(_1297) ? 0.0 : max(_1297, 0.0)));
    }
    else
    {
        _1305 = _1306;
        _1307 = _1306;
        _1308 = _1306;
        _1309 = _1306;
        _1310 = _1306;
        _1311 = _1306;
        _1312 = _1306;
        _1313 = _1306;
        _1314 = _1306;
        _1315 = _1306;
        _1316 = _1306;
        _1317 = _1306;
        _1318 = 0.0;
        _1319 = 0.0;
        _1320 = 0.0;
    }
    float _1617;
    float _1618;
    float _1619;
    float _1620;
    float _1621;
    float _1622;
    float _1623;
    float _1624;
    float _1625;
    float _1626;
    float _1627;
    float _1628;
    float _1629;
    float _1630;
    float _1631;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1348 = fma(_977, cbModelParam._m0[30u].z, fma(_973, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _969));
        float _1352 = fma(_977, cbModelParam._m0[31u].z, fma(_973, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _969));
        float _1356 = fma(_977, cbModelParam._m0[32u].z, fma(_973, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _969));
        float _1379 = _969 + _747;
        float _1380 = _973 + _748;
        float _1381 = _977 + _749;
        float _1391 = fma(_1381, cbModelParam._m0[30u].z, fma(_1380, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1379)) - _1348;
        float _1392 = fma(_1381, cbModelParam._m0[31u].z, fma(_1380, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1379)) - _1352;
        float _1393 = fma(_1381, cbModelParam._m0[32u].z, fma(_1380, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1379)) - _1356;
        float _1397 = inversesqrt(dot(vec3(_1391, _1392, _1393), vec3(_1391, _1392, _1393)));
        float _1410 = ((_1397 * _1391) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1348 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1411 = ((_1397 * _1392) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1352 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1412 = ((_1397 * _1393) / cbModelParam._m0[35u].z) + ((((((_1356 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1414 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1410, _1411, _1412), 0.0);
        vec4 _1421 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1410, _1411, _1412), 0.0);
        vec4 _1428 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1410, _1411, _1412), 0.0);
        vec4 _1435 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1410, _1411, _1412), 0.0);
        float _1447 = exp2((_1414.w + (-0.5)) * 20.0) * 2.0;
        float _1448 = _1447 * (_1414.x + (-0.5));
        float _1449 = _1447 * (_1414.y + (-0.5));
        float _1450 = _1447 * (_1414.z + (-0.5));
        float _1457 = exp2((_1421.w + (-0.5)) * 20.0) * 2.0;
        float _1458 = _1457 * (_1421.x + (-0.5));
        float _1459 = _1457 * (_1421.y + (-0.5));
        float _1460 = _1457 * (_1421.z + (-0.5));
        float _1467 = exp2((_1428.w + (-0.5)) * 20.0) * 2.0;
        float _1468 = _1467 * (_1428.x + (-0.5));
        float _1469 = _1467 * (_1428.y + (-0.5));
        float _1470 = _1467 * (_1428.z + (-0.5));
        float _1477 = exp2((_1435.w + (-0.5)) * 20.0) * 2.0;
        float _1478 = _1477 * (_1435.x + (-0.5));
        float _1479 = _1477 * (_1435.y + (-0.5));
        float _1480 = _1477 * (_1435.z + (-0.5));
        float _1481 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
        float _1482 = isnan(0.0) ? _1479 : (isnan(_1479) ? 0.0 : max(_1479, 0.0));
        float _1483 = isnan(0.0) ? _1480 : (isnan(_1480) ? 0.0 : max(_1480, 0.0));
        float _1484 = _1448 * 0.5;
        float _1485 = _1458 * 0.5;
        float _1486 = _1468 * 0.5;
        float _1487 = dot(vec3(_1484, _1485, _1486), vec3(_1484, _1485, _1486));
        float _1492 = (_1487 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1487);
        float _1500 = (dot(vec3(_747, _748, _749), vec3(_1492 * _1484, _1492 * _1485, _1492 * _1486)) + 1.0) * 0.5;
        float _4323 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
        float _1509 = sqrt(((_1485 * _1485) + (_1484 * _1484)) + (_1486 * _1486)) / (_1481 + 9.9999997473787516355514526367188e-06);
        float _4334 = isnan(0.0) ? _1509 : (isnan(_1509) ? 0.0 : max(_1509, 0.0));
        float _1510 = isnan(1.0) ? _4334 : (isnan(_4334) ? 1.0 : min(_4334, 1.0));
        float _1511 = _1510 * 2.0;
        float _1515 = (1.0 - _1510) / (_1510 + 1.0);
        float _4345 = isnan(0.0) ? _1515 : (isnan(_1515) ? 0.0 : max(_1515, 0.0));
        float _1516 = isnan(1.0) ? _4345 : (isnan(_4345) ? 1.0 : min(_4345, 1.0));
        float _1525 = ((((1.0 - _1516) * (_1511 + 2.0)) * exp2(log2(isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0))) * (_1511 + 1.0))) + _1516) * _1481;
        float _1526 = _1449 * 0.5;
        float _1527 = _1459 * 0.5;
        float _1528 = _1469 * 0.5;
        float _1529 = dot(vec3(_1526, _1527, _1528), vec3(_1526, _1527, _1528));
        float _1534 = (_1529 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1529);
        float _1542 = (dot(vec3(_747, _748, _749), vec3(_1534 * _1526, _1534 * _1527, _1534 * _1528)) + 1.0) * 0.5;
        float _4356 = isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0));
        float _1551 = sqrt(((_1527 * _1527) + (_1526 * _1526)) + (_1528 * _1528)) / (_1482 + 9.9999997473787516355514526367188e-06);
        float _4367 = isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0));
        float _1552 = isnan(1.0) ? _4367 : (isnan(_4367) ? 1.0 : min(_4367, 1.0));
        float _1553 = _1552 * 2.0;
        float _1557 = (1.0 - _1552) / (_1552 + 1.0);
        float _4378 = isnan(0.0) ? _1557 : (isnan(_1557) ? 0.0 : max(_1557, 0.0));
        float _1558 = isnan(1.0) ? _4378 : (isnan(_4378) ? 1.0 : min(_4378, 1.0));
        float _1567 = ((((1.0 - _1558) * (_1553 + 2.0)) * exp2(log2(isnan(1.0) ? _4356 : (isnan(_4356) ? 1.0 : min(_4356, 1.0))) * (_1553 + 1.0))) + _1558) * _1482;
        float _1568 = _1450 * 0.5;
        float _1569 = _1460 * 0.5;
        float _1570 = _1470 * 0.5;
        float _1571 = dot(vec3(_1568, _1569, _1570), vec3(_1568, _1569, _1570));
        float _1576 = (_1571 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1571);
        float _1584 = (dot(vec3(_747, _748, _749), vec3(_1576 * _1568, _1576 * _1569, _1576 * _1570)) + 1.0) * 0.5;
        float _4389 = isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0));
        float _1593 = sqrt(((_1569 * _1569) + (_1568 * _1568)) + (_1570 * _1570)) / (_1483 + 9.9999997473787516355514526367188e-06);
        float _4400 = isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : max(_1593, 0.0));
        float _1594 = isnan(1.0) ? _4400 : (isnan(_4400) ? 1.0 : min(_4400, 1.0));
        float _1595 = _1594 * 2.0;
        float _1599 = (1.0 - _1594) / (_1594 + 1.0);
        float _4411 = isnan(0.0) ? _1599 : (isnan(_1599) ? 0.0 : max(_1599, 0.0));
        float _1600 = isnan(1.0) ? _4411 : (isnan(_4411) ? 1.0 : min(_4411, 1.0));
        float _1609 = ((((1.0 - _1600) * (_1595 + 2.0)) * exp2(log2(isnan(1.0) ? _4389 : (isnan(_4389) ? 1.0 : min(_4389, 1.0))) * (_1595 + 1.0))) + _1600) * _1483;
        _1617 = _1450;
        _1618 = _1449;
        _1619 = _1448;
        _1620 = _1460;
        _1621 = _1459;
        _1622 = _1458;
        _1623 = _1470;
        _1624 = _1469;
        _1625 = _1468;
        _1626 = _1483;
        _1627 = _1482;
        _1628 = _1481;
        _1629 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0)));
        _1630 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0)));
        _1631 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0)));
    }
    else
    {
        _1617 = _1306;
        _1618 = _1306;
        _1619 = _1306;
        _1620 = _1306;
        _1621 = _1306;
        _1622 = _1306;
        _1623 = _1306;
        _1624 = _1306;
        _1625 = _1306;
        _1626 = _1306;
        _1627 = _1306;
        _1628 = _1306;
        _1629 = 0.0;
        _1630 = 0.0;
        _1631 = 0.0;
    }
    float _1641 = (cbModelParam._m0[1u].x * (_1629 - _1318)) + _1318;
    float _1642 = (cbModelParam._m0[1u].x * (_1630 - _1319)) + _1319;
    float _1643 = (cbModelParam._m0[1u].x * (_1631 - _1320)) + _1320;
    float _1664 = fma(_1643, cbSceneParam._m0[89u].z, fma(_1642, cbSceneParam._m0[89u].y, _1641 * cbSceneParam._m0[89u].x));
    float _1667 = fma(_1643, cbSceneParam._m0[90u].z, fma(_1642, cbSceneParam._m0[90u].y, _1641 * cbSceneParam._m0[90u].x));
    float _1670 = fma(_1643, cbSceneParam._m0[91u].z, fma(_1642, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1641));
    float _1685 = _917 * 0.5;
    float _1686 = _918 * 0.5;
    float _1687 = _919 * 0.5;
    float _1688 = dot(vec4(_1685, _1686, _1687, 1.0), vec4(_1619, _1622, _1625, _1628));
    float _1691 = dot(vec4(_1685, _1686, _1687, 1.0), vec4(_1618, _1621, _1624, _1627));
    float _1694 = dot(vec4(_1685, _1686, _1687, 1.0), vec4(_1617, _1620, _1623, _1626));
    float _1728;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1701 = dot(vec4(_1685, _1686, _1687, 1.0), vec4(_1305, _1309, _1312, _1315));
        float _1705 = dot(vec4(_1685, _1686, _1687, 1.0), vec4(_1307, _1310, _1313, _1316));
        float _1709 = dot(vec4(_1685, _1686, _1687, 1.0), vec4(_1308, _1311, _1314, _1317));
        float _1716 = dot(vec4(cbModelParam._m0[39u]), vec4(_1685, _1686, _1687, 1.0));
        _1728 = dot(vec3(isnan(0.0) ? _1709 : (isnan(_1709) ? 0.0 : max(_1709, 0.0)), isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0)), isnan(0.0) ? _1701 : (isnan(_1701) ? 0.0 : max(_1701, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1716) ? 0.0 : (isnan(0.0) ? _1716 : max(0.0, _1716))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1728 = 1.0;
    }
    float _1739;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1730 = dot(vec4(cbModelParam._m0[40u]), vec4(_1685, _1686, _1687, 1.0));
        _1739 = dot(vec3(isnan(0.0) ? _1688 : (isnan(_1688) ? 0.0 : max(_1688, 0.0)), isnan(0.0) ? _1691 : (isnan(_1691) ? 0.0 : max(_1691, 0.0)), isnan(0.0) ? _1694 : (isnan(_1694) ? 0.0 : max(_1694, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1730) ? 0.0 : (isnan(0.0) ? _1730 : max(0.0, _1730))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1739 = 1.0;
    }
    float _1743 = (_1739 * cbModelParam._m0[1u].x) + (_1728 * (1.0 - cbModelParam._m0[1u].x));
    float _1753 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _750);
    float _1754 = isnan(_1753) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1753 : min(cbModelParam._m0[25u].z, _1753));
    float _1836;
    float _1838;
    float _1840;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1803 = fma(_977, cbModelParam._m0[13u].z, fma(_973, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _969)) + cbModelParam._m0[13u].w;
        float _1807 = fma(_977, cbModelParam._m0[14u].z, fma(_973, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _969)) + cbModelParam._m0[14u].w;
        float _1811 = fma(_977, cbModelParam._m0[15u].z, fma(_973, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _969)) + cbModelParam._m0[15u].w;
        float _1814 = fma(_919, cbModelParam._m0[13u].z, fma(_918, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _917));
        float _1817 = fma(_919, cbModelParam._m0[14u].z, fma(_918, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _917));
        float _1820 = fma(_919, cbModelParam._m0[15u].z, fma(_918, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _917));
        float _1848;
        if (_1814 > 0.0)
        {
            _1848 = abs((1.0 - _1803) / _1814);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1814 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1803 + 1.0) / _1814);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1848 = frontier_phi_17_15_ladder;
        }
        float _2018;
        if (_1817 > 0.0)
        {
            _2018 = abs((1.0 - _1807) / _1817);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1817 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1807 + 1.0) / _1817);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2018 = frontier_phi_26_22_ladder;
        }
        float _2313;
        if (_1820 > 0.0)
        {
            _2313 = abs((1.0 - _1811) / _1820);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1820 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1811 + 1.0) / _1820);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2313 = frontier_phi_38_33_ladder;
        }
        float _2315 = isnan(_2018) ? _1848 : (isnan(_1848) ? _2018 : min(_1848, _2018));
        float _2316 = isnan(_2313) ? _2315 : (isnan(_2315) ? _2313 : min(_2315, _2313));
        float _2320 = (_2316 * _1814) + _1803;
        float _2321 = (_2316 * _1817) + _1807;
        float _2322 = (_2316 * _1820) + _1811;
        float _2323 = _2316 * 9.9999997473787516355514526367188e-05;
        float _2325 = (-1.0) - _2323;
        float _2327 = _2323 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2322 > _2327) || ((_2322 < _2325) || ((_2321 > _2327) || ((_2321 < _2325) || ((_2320 < _2325) || (_2320 > _2327))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2467 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2322, cbModelParam._m0[9u].z, fma(_2321, cbModelParam._m0[9u].y, _2320 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2322, cbModelParam._m0[10u].z, fma(_2321, cbModelParam._m0[10u].y, _2320 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2322, cbModelParam._m0[11u].z, fma(_2321, cbModelParam._m0[11u].y, _2320 * cbModelParam._m0[11u].x))), _1754);
            frontier_phi_16_38_ladder = _2467.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2467.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2467.x * cbModelParam._m0[1u].y;
        }
        _1836 = frontier_phi_16_38_ladder_2;
        _1838 = frontier_phi_16_38_ladder_1;
        _1840 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1824 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_917, _918, _919), _1754);
        _1836 = _1824.x * cbModelParam._m0[1u].y;
        _1838 = _1824.y * cbModelParam._m0[1u].y;
        _1840 = _1824.z * cbModelParam._m0[1u].y;
    }
    float _1844 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _750);
    float _1845 = isnan(_1844) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1844 : min(cbModelParam._m0[25u].w, _1844));
    float _1935;
    float _1937;
    float _1939;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1899 = fma(_977, cbModelParam._m0[21u].z, fma(_973, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _969)) + cbModelParam._m0[21u].w;
        float _1903 = fma(_977, cbModelParam._m0[22u].z, fma(_973, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _969)) + cbModelParam._m0[22u].w;
        float _1907 = fma(_977, cbModelParam._m0[23u].z, fma(_973, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _969)) + cbModelParam._m0[23u].w;
        float _1910 = fma(_919, cbModelParam._m0[21u].z, fma(_918, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _917));
        float _1913 = fma(_919, cbModelParam._m0[22u].z, fma(_918, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _917));
        float _1916 = fma(_919, cbModelParam._m0[23u].z, fma(_918, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _917));
        float _2023;
        if (_1910 > 0.0)
        {
            _2023 = abs((1.0 - _1899) / _1910);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1910 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1899 + 1.0) / _1910);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2023 = frontier_phi_28_24_ladder;
        }
        float _2340;
        if (_1913 > 0.0)
        {
            _2340 = abs((1.0 - _1903) / _1913);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1913 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1903 + 1.0) / _1913);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2340 = frontier_phi_40_35_ladder;
        }
        float _2667;
        if (_1916 > 0.0)
        {
            _2667 = abs((1.0 - _1907) / _1916);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_1916 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_1907 + 1.0) / _1916);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2667 = frontier_phi_50_47_ladder;
        }
        float _2669 = isnan(_2340) ? _2023 : (isnan(_2023) ? _2340 : min(_2023, _2340));
        float _2670 = isnan(_2667) ? _2669 : (isnan(_2669) ? _2667 : min(_2669, _2667));
        float _2674 = (_2670 * _1910) + _1899;
        float _2675 = (_2670 * _1913) + _1903;
        float _2676 = (_2670 * _1916) + _1907;
        float _2677 = _2670 * 9.9999997473787516355514526367188e-05;
        float _2678 = (-1.0) - _2677;
        float _2680 = _2677 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2676 > _2680) || ((_2676 < _2678) || ((_2675 > _2680) || ((_2675 < _2678) || ((_2674 < _2678) || (_2674 > _2680))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2794 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2676, cbModelParam._m0[17u].z, fma(_2675, cbModelParam._m0[17u].y, _2674 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2676, cbModelParam._m0[18u].z, fma(_2675, cbModelParam._m0[18u].y, _2674 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2676, cbModelParam._m0[19u].z, fma(_2675, cbModelParam._m0[19u].y, _2674 * cbModelParam._m0[19u].x))), _1845);
            frontier_phi_25_50_ladder = _2794.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2794.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2794.x * cbModelParam._m0[1u].z;
        }
        _1935 = frontier_phi_25_50_ladder_2;
        _1937 = frontier_phi_25_50_ladder_1;
        _1939 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _1919 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_917, _918, _919), _1845);
        _1935 = _1919.x * cbModelParam._m0[1u].z;
        _1937 = _1919.y * cbModelParam._m0[1u].z;
        _1939 = _1919.z * cbModelParam._m0[1u].z;
    }
    float _1951 = ((((1.0 - _937) * ((_925 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_937 * _925)) * _909;
    float _1952 = _1951 * ((cbModelParam._m0[1u].w * (_1935 - _1836)) + _1836);
    float _1953 = _1951 * ((cbModelParam._m0[1u].w * (_1937 - _1838)) + _1838);
    float _1954 = _1951 * ((cbModelParam._m0[1u].w * (_1939 - _1840)) + _1840);
    float _1957 = fma(_1954, cbSceneParam._m0[89u].z, fma(_1953, cbSceneParam._m0[89u].y, _1952 * cbSceneParam._m0[89u].x));
    float _1960 = fma(_1954, cbSceneParam._m0[90u].z, fma(_1953, cbSceneParam._m0[90u].y, _1952 * cbSceneParam._m0[90u].x));
    float _1963 = fma(_1954, cbSceneParam._m0[91u].z, fma(_1953, cbSceneParam._m0[91u].y, _1952 * cbSceneParam._m0[91u].x));
    float _1997 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2001 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2005 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2009 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2010 = _1997 / _2009;
    float _2011 = _2001 / _2009;
    float _2012 = _2005 / _2009;
    float _2159;
    float _2160;
    float _2161;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2039 = ((uint(_2012 > cbSceneParam._m0[59u].y) + uint(_2012 > cbSceneParam._m0[59u].x)) + uint(_2012 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2040 = _2039 + 43u;
        uint _2048 = _2039 + 44u;
        uint _2056 = _2039 + 45u;
        uint _2064 = _2039 + 46u;
        float _2075 = fma(_2009, cbSceneParam._m0[_2040].w, fma(_2005, cbSceneParam._m0[_2040].z, fma(_2001, cbSceneParam._m0[_2040].y, _1997 * cbSceneParam._m0[_2040].x)));
        float _2079 = fma(_2009, cbSceneParam._m0[_2048].w, fma(_2005, cbSceneParam._m0[_2048].z, fma(_2001, cbSceneParam._m0[_2048].y, _1997 * cbSceneParam._m0[_2048].x)));
        float _2087 = fma(_2009, cbSceneParam._m0[_2064].w, fma(_2005, cbSceneParam._m0[_2064].z, fma(_2001, cbSceneParam._m0[_2064].y, _1997 * cbSceneParam._m0[_2064].x)));
        float _2092 = cbSceneParam._m0[33u].z * _2087;
        float _2094 = cbSceneParam._m0[33u].w * _2087;
        float _2097 = fma(_2009, cbSceneParam._m0[_2056].w, fma(_2005, cbSceneParam._m0[_2056].z, fma(_2001, cbSceneParam._m0[_2056].y, _1997 * cbSceneParam._m0[_2056].x))) / _2087;
        float _2145 = (cbSceneParam._m0[33u].x - sqrt(((_2011 * _2011) + (_2010 * _2010)) + (_2012 * _2012))) * cbSceneParam._m0[33u].y;
        float _4537 = isnan(0.0) ? _2145 : (isnan(_2145) ? 0.0 : max(_2145, 0.0));
        float _2152 = (isnan(1.0) ? _4537 : (isnan(_4537) ? 1.0 : min(_4537, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2092 + _2075) / _2087, (_2094 + _2079) / _2087), _2097), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2094 + _2075) / _2087, (_2079 - _2092) / _2087), _2097), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2075 - _2092) / _2087, (_2079 - _2094) / _2087), _2097), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2075 - _2094) / _2087, (_2092 + _2079) / _2087), _2097), 0.0)).x), vec4(0.25)));
        _2159 = 1.0 - (_2152 * cbSceneParam._m0[34u].x);
        _2160 = 1.0 - (_2152 * cbSceneParam._m0[34u].y);
        _2161 = 1.0 - (_2152 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2159 = 1.0;
        _2160 = 1.0;
        _2161 = 1.0;
    }
    float _2225;
    float _2227;
    float _2229;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2213 = fma(_2009, cbSceneParam._m0[63u].w, fma(_2005, cbSceneParam._m0[63u].z, fma(_2001, cbSceneParam._m0[63u].y, _1997 * cbSceneParam._m0[63u].x)));
        float _2214 = fma(_2009, cbSceneParam._m0[60u].w, fma(_2005, cbSceneParam._m0[60u].z, fma(_2001, cbSceneParam._m0[60u].y, _1997 * cbSceneParam._m0[60u].x))) / _2213;
        float _2215 = fma(_2009, cbSceneParam._m0[61u].w, fma(_2005, cbSceneParam._m0[61u].z, fma(_2001, cbSceneParam._m0[61u].y, _1997 * cbSceneParam._m0[61u].x))) / _2213;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2214 >= cbSceneParam._m0[64u].x) && (_2215 >= cbSceneParam._m0[64u].y)) && (_2214 <= cbSceneParam._m0[64u].z)) && (_2215 <= cbSceneParam._m0[64u].w))
        {
            float _2353 = fma(_2009, cbSceneParam._m0[62u].w, fma(_2005, cbSceneParam._m0[62u].z, fma(_2001, cbSceneParam._m0[62u].y, _1997 * cbSceneParam._m0[62u].x))) / _2213;
            float _2357 = isnan(cbSceneParam._m0[41u].w) ? _2353 : (isnan(_2353) ? cbSceneParam._m0[41u].w : max(_2353, cbSceneParam._m0[41u].w));
            float _2400 = (cbSceneParam._m0[33u].x - sqrt(((_2011 * _2011) + (_2010 * _2010)) + (_2012 * _2012))) * cbSceneParam._m0[33u].y;
            float _4553 = isnan(0.0) ? _2400 : (isnan(_2400) ? 0.0 : max(_2400, 0.0));
            float _2407 = (isnan(1.0) ? _4553 : (isnan(_4553) ? 1.0 : min(_4553, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2214, cbSceneParam._m0[33u].w + _2215), _2357), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2214, _2215 - cbSceneParam._m0[33u].z), _2357), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2214 - cbSceneParam._m0[33u].z, _2215 - cbSceneParam._m0[33u].w), _2357), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2214 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2215), _2357), 0.0)).x), vec4(0.25)));
            float _2411 = 1.0 - (_2407 * cbSceneParam._m0[34u].x);
            float _2412 = 1.0 - (_2407 * cbSceneParam._m0[34u].y);
            float _2413 = 1.0 - (_2407 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2413) ? _2161 : (isnan(_2161) ? _2413 : min(_2161, _2413));
            frontier_phi_37_36_ladder_1 = isnan(_2412) ? _2160 : (isnan(_2160) ? _2412 : min(_2160, _2412));
            frontier_phi_37_36_ladder_2 = isnan(_2411) ? _2159 : (isnan(_2159) ? _2411 : min(_2159, _2411));
        }
        else
        {
            frontier_phi_37_36_ladder = _2161;
            frontier_phi_37_36_ladder_1 = _2160;
            frontier_phi_37_36_ladder_2 = _2159;
        }
        _2225 = frontier_phi_37_36_ladder_2;
        _2227 = frontier_phi_37_36_ladder_1;
        _2229 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2225 = _2159;
        _2227 = _2160;
        _2229 = _2161;
    }
    uvec4 _2234 = floatBitsToUint(cbInstanceData._m0[_277 + 5u]);
    uint _2236 = _2234.x * 14u;
    uint _2237 = _2236 + 13u;
    float _2244 = _909 + (-1.0);
    float _2249 = (cbLight._m0[_2237].x * _2244) + 1.0;
    float _2250 = (cbLight._m0[_2237].y * _2244) + 1.0;
    float _2251 = (cbLight._m0[_2237].z * _2244) + 1.0;
    float _2252 = (cbLight._m0[_2237].w * _2244) + 1.0;
    uint _2253 = _2236 + 5u;
    float _2259 = isnan(1.0) ? _2250 : (isnan(_2250) ? 1.0 : min(_2250, 1.0));
    uint _2263 = _2236 + 4u;
    float _2272 = isnan(1.0) ? _2249 : (isnan(_2249) ? 1.0 : min(_2249, 1.0));
    uint _2276 = _2236 | 1u;
    float _2287 = dot(vec3(cbLight._m0[_2236].xyz), vec3(_747, _748, _749));
    float _2290 = dot(vec3(cbLight._m0[_2276].xyz), vec3(_747, _748, _749));
    float _4589 = isnan(0.0) ? _2287 : (isnan(_2287) ? 0.0 : max(_2287, 0.0));
    float _4600 = isnan(0.0) ? _2290 : (isnan(_2290) ? 0.0 : max(_2290, 0.0));
    float _2295 = (isnan(1.0) ? _4589 : (isnan(_4589) ? 1.0 : min(_4589, 1.0))) * 0.3183098733425140380859375;
    float _2297 = (isnan(1.0) ? _4600 : (isnan(_4600) ? 1.0 : min(_4600, 1.0))) * 0.3183098733425140380859375;
    float _2304 = ((cbLight._m0[_2253].x * _2259) * _2297) + (((cbLight._m0[_2263].x * _2225) * _2272) * _2295);
    float _2305 = ((_2259 * cbLight._m0[_2253].y) * _2297) + (((cbLight._m0[_2263].y * _2227) * _2272) * _2295);
    float _2306 = ((_2259 * cbLight._m0[_2253].z) * _2297) + (((cbLight._m0[_2263].z * _2229) * _2272) * _2295);
    uvec4 _2310 = floatBitsToUint(cbLight._m0[_2236 + 12u]);
    bool _2312 = _2310.x == 0u;
    float _2414;
    float _2416;
    float _2418;
    if (_2312)
    {
        _2414 = _2304;
        _2416 = _2305;
        _2418 = _2306;
    }
    else
    {
        uint _2422 = _2236 + 6u;
        float _2438 = (dot(vec3(cbLight._m0[_2236 + 2u].xyz), vec3(_747, _748, _749)) * 0.5) + 0.5;
        float _2439 = _2438 * _2438;
        float _4611 = isnan(0.0) ? _2439 : (isnan(_2439) ? 0.0 : max(_2439, 0.0));
        float _2440 = isnan(1.0) ? _4611 : (isnan(_4611) ? 1.0 : min(_4611, 1.0));
        float _2441 = isnan(1.0) ? _2251 : (isnan(_2251) ? 1.0 : min(_2251, 1.0));
        _2414 = (((cbLight._m0[_2422].x * 0.3183098733425140380859375) * _2440) * _2441) + _2304;
        _2416 = (((cbLight._m0[_2422].y * 0.3183098733425140380859375) * _2440) * _2441) + _2305;
        _2418 = (((cbLight._m0[_2422].z * 0.3183098733425140380859375) * _2440) * _2441) + _2306;
    }
    bool _2421 = _2310.y == 0u;
    float _2476;
    float _2478;
    float _2480;
    if (_2421)
    {
        _2476 = _2414;
        _2478 = _2416;
        _2480 = _2418;
    }
    else
    {
        uint _2638 = _2236 + 7u;
        float _2654 = (dot(vec3(cbLight._m0[_2236 + 3u].xyz), vec3(_747, _748, _749)) * 0.5) + 0.5;
        float _2655 = _2654 * _2654;
        float _4627 = isnan(0.0) ? _2655 : (isnan(_2655) ? 0.0 : max(_2655, 0.0));
        float _2656 = isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0));
        float _2657 = isnan(1.0) ? _2252 : (isnan(_2252) ? 1.0 : min(_2252, 1.0));
        _2476 = (((cbLight._m0[_2638].x * 0.3183098733425140380859375) * _2656) * _2657) + _2414;
        _2478 = (((cbLight._m0[_2638].y * 0.3183098733425140380859375) * _2656) * _2657) + _2416;
        _2480 = (((cbLight._m0[_2638].z * 0.3183098733425140380859375) * _2656) * _2657) + _2418;
    }
    uint _2483 = _2236 + 8u;
    float _2496 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2236].w)) * _750) * 0.949999988079071044921875);
    float _2497 = _2496 * _2496;
    float _2498 = cbLight._m0[_2236].x + _826;
    float _2499 = cbLight._m0[_2236].y + _827;
    float _2500 = cbLight._m0[_2236].z + _828;
    float _2504 = inversesqrt(dot(vec3(_2498, _2499, _2500), vec3(_2498, _2499, _2500)));
    float _2505 = _2504 * _2498;
    float _2506 = _2504 * _2499;
    float _2507 = _2504 * _2500;
    float _2508 = dot(vec3(_747, _748, _749), vec3(cbLight._m0[_2236].xyz));
    float _4643 = isnan(0.0) ? _2508 : (isnan(_2508) ? 0.0 : max(_2508, 0.0));
    float _2511 = isnan(1.0) ? _4643 : (isnan(_4643) ? 1.0 : min(_4643, 1.0));
    float _4654 = isnan(0.0) ? _910 : (isnan(_910) ? 0.0 : max(_910, 0.0));
    float _2512 = isnan(1.0) ? _4654 : (isnan(_4654) ? 1.0 : min(_4654, 1.0));
    float _2513 = dot(vec3(_747, _748, _749), vec3(_2505, _2506, _2507));
    float _4665 = isnan(0.0) ? _2513 : (isnan(_2513) ? 0.0 : max(_2513, 0.0));
    float _2516 = isnan(1.0) ? _4665 : (isnan(_4665) ? 1.0 : min(_4665, 1.0));
    float _2517 = dot(vec3(cbLight._m0[_2236].xyz), vec3(_2505, _2506, _2507));
    float _4676 = isnan(0.0) ? _2517 : (isnan(_2517) ? 0.0 : max(_2517, 0.0));
    float _2521 = _2497 * _2497;
    float _2525 = ((_2516 * _2516) * (_2521 + (-1.0))) + 1.0;
    float _2536 = (exp2(log2(1.0 - (isnan(1.0) ? _4676 : (isnan(_4676) ? 1.0 : min(_4676, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2537 = 1.0 - _2497;
    float _2548 = (0.5 / (((_2512 * ((_2511 * _2537) + _2497)) + 9.9999999392252902907785028219223e-09) + (((_2512 * _2537) + _2497) * _2511))) * _2511;
    float _4687 = isnan(0.0) ? _2548 : (isnan(_2548) ? 0.0 : max(_2548, 0.0));
    float _2550 = (isnan(1.0) ? _4687 : (isnan(_4687) ? 1.0 : min(_4687, 1.0))) * (_2521 / ((_2525 * _2525) * 3.141590118408203125));
    uint _2564 = _2236 + 9u;
    float _2575 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2276].w)) * _750) * 0.949999988079071044921875);
    float _2576 = _2575 * _2575;
    float _2577 = cbLight._m0[_2276].x + _826;
    float _2578 = cbLight._m0[_2276].y + _827;
    float _2579 = cbLight._m0[_2276].z + _828;
    float _2583 = inversesqrt(dot(vec3(_2577, _2578, _2579), vec3(_2577, _2578, _2579)));
    float _2584 = _2583 * _2577;
    float _2585 = _2583 * _2578;
    float _2586 = _2583 * _2579;
    float _2587 = dot(vec3(_747, _748, _749), vec3(cbLight._m0[_2276].xyz));
    float _4698 = isnan(0.0) ? _2587 : (isnan(_2587) ? 0.0 : max(_2587, 0.0));
    float _2590 = isnan(1.0) ? _4698 : (isnan(_4698) ? 1.0 : min(_4698, 1.0));
    float _2591 = dot(vec3(_747, _748, _749), vec3(_2584, _2585, _2586));
    float _4709 = isnan(0.0) ? _2591 : (isnan(_2591) ? 0.0 : max(_2591, 0.0));
    float _2594 = isnan(1.0) ? _4709 : (isnan(_4709) ? 1.0 : min(_4709, 1.0));
    float _2595 = dot(vec3(cbLight._m0[_2276].xyz), vec3(_2584, _2585, _2586));
    float _4720 = isnan(0.0) ? _2595 : (isnan(_2595) ? 0.0 : max(_2595, 0.0));
    float _2599 = _2576 * _2576;
    float _2603 = ((_2594 * _2594) * (_2599 + (-1.0))) + 1.0;
    float _2612 = (exp2(log2(1.0 - (isnan(1.0) ? _4720 : (isnan(_4720) ? 1.0 : min(_4720, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2613 = 1.0 - _2576;
    float _2623 = (0.5 / (((_2512 * ((_2590 * _2613) + _2576)) + 9.9999999392252902907785028219223e-09) + (((_2512 * _2613) + _2576) * _2590))) * _2590;
    float _4731 = isnan(0.0) ? _2623 : (isnan(_2623) ? 0.0 : max(_2623, 0.0));
    float _2625 = (isnan(1.0) ? _4731 : (isnan(_4731) ? 1.0 : min(_4731, 1.0))) * (_2599 / ((_2603 * _2603) * 3.141590118408203125));
    float _2635 = (((_2612 * cbLight._m0[_2564].x) * _2625) * _2259) + ((((cbLight._m0[_2483].x * _2225) * _2536) * _2550) * _2272);
    float _2636 = (((_2612 * cbLight._m0[_2564].y) * _2625) * _2259) + ((((cbLight._m0[_2483].y * _2227) * _2536) * _2550) * _2272);
    float _2637 = (((_2612 * cbLight._m0[_2564].z) * _2625) * _2259) + ((((cbLight._m0[_2483].z * _2229) * _2536) * _2550) * _2272);
    float _2693;
    float _2695;
    float _2697;
    if (_2312)
    {
        _2693 = _2635;
        _2695 = _2636;
        _2697 = _2637;
    }
    else
    {
        uint _2699 = _2236 + 2u;
        uint _2703 = _2236 + 10u;
        float _2717 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2699].w)) * _750) * 0.949999988079071044921875);
        float _2718 = _2717 * _2717;
        float _2719 = cbLight._m0[_2699].x + _826;
        float _2720 = cbLight._m0[_2699].y + _827;
        float _2721 = cbLight._m0[_2699].z + _828;
        float _2725 = inversesqrt(dot(vec3(_2719, _2720, _2721), vec3(_2719, _2720, _2721)));
        float _2726 = _2725 * _2719;
        float _2727 = _2725 * _2720;
        float _2728 = _2725 * _2721;
        float _2729 = dot(vec3(_747, _748, _749), vec3(cbLight._m0[_2699].xyz));
        float _4742 = isnan(0.0) ? _2729 : (isnan(_2729) ? 0.0 : max(_2729, 0.0));
        float _2732 = isnan(1.0) ? _4742 : (isnan(_4742) ? 1.0 : min(_4742, 1.0));
        float _2733 = dot(vec3(_747, _748, _749), vec3(_2726, _2727, _2728));
        float _4753 = isnan(0.0) ? _2733 : (isnan(_2733) ? 0.0 : max(_2733, 0.0));
        float _2736 = isnan(1.0) ? _4753 : (isnan(_4753) ? 1.0 : min(_4753, 1.0));
        float _2737 = dot(vec3(cbLight._m0[_2699].xyz), vec3(_2726, _2727, _2728));
        float _4764 = isnan(0.0) ? _2737 : (isnan(_2737) ? 0.0 : max(_2737, 0.0));
        float _2741 = _2718 * _2718;
        float _2745 = ((_2736 * _2736) * (_2741 + (-1.0))) + 1.0;
        float _2754 = (exp2(log2(1.0 - (isnan(1.0) ? _4764 : (isnan(_4764) ? 1.0 : min(_4764, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2755 = 1.0 - _2718;
        float _2765 = (0.5 / (((_2512 * ((_2732 * _2755) + _2718)) + 9.9999999392252902907785028219223e-09) + (((_2512 * _2755) + _2718) * _2732))) * _2732;
        float _4775 = isnan(0.0) ? _2765 : (isnan(_2765) ? 0.0 : max(_2765, 0.0));
        float _2767 = (isnan(1.0) ? _4775 : (isnan(_4775) ? 1.0 : min(_4775, 1.0))) * (_2741 / ((_2745 * _2745) * 3.141590118408203125));
        float _2768 = isnan(1.0) ? _2251 : (isnan(_2251) ? 1.0 : min(_2251, 1.0));
        _2693 = (((_2754 * cbLight._m0[_2703].x) * _2767) * _2768) + _2635;
        _2695 = (((_2754 * cbLight._m0[_2703].y) * _2767) * _2768) + _2636;
        _2697 = (((_2754 * cbLight._m0[_2703].z) * _2767) * _2768) + _2637;
    }
    float _2799;
    float _2801;
    float _2803;
    if (_2421)
    {
        _2799 = _2693;
        _2801 = _2695;
        _2803 = _2697;
    }
    else
    {
        uint _2810 = _2236 + 3u;
        uint _2814 = _2236 + 11u;
        float _2828 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2810].w)) * _750) * 0.949999988079071044921875);
        float _2829 = _2828 * _2828;
        float _2830 = cbLight._m0[_2810].x + _826;
        float _2831 = cbLight._m0[_2810].y + _827;
        float _2832 = cbLight._m0[_2810].z + _828;
        float _2836 = inversesqrt(dot(vec3(_2830, _2831, _2832), vec3(_2830, _2831, _2832)));
        float _2837 = _2836 * _2830;
        float _2838 = _2836 * _2831;
        float _2839 = _2836 * _2832;
        float _2840 = dot(vec3(_747, _748, _749), vec3(cbLight._m0[_2810].xyz));
        float _4791 = isnan(0.0) ? _2840 : (isnan(_2840) ? 0.0 : max(_2840, 0.0));
        float _2843 = isnan(1.0) ? _4791 : (isnan(_4791) ? 1.0 : min(_4791, 1.0));
        float _2844 = dot(vec3(_747, _748, _749), vec3(_2837, _2838, _2839));
        float _4802 = isnan(0.0) ? _2844 : (isnan(_2844) ? 0.0 : max(_2844, 0.0));
        float _2847 = isnan(1.0) ? _4802 : (isnan(_4802) ? 1.0 : min(_4802, 1.0));
        float _2848 = dot(vec3(cbLight._m0[_2810].xyz), vec3(_2837, _2838, _2839));
        float _4813 = isnan(0.0) ? _2848 : (isnan(_2848) ? 0.0 : max(_2848, 0.0));
        float _2852 = _2829 * _2829;
        float _2856 = ((_2847 * _2847) * (_2852 + (-1.0))) + 1.0;
        float _2865 = (exp2(log2(1.0 - (isnan(1.0) ? _4813 : (isnan(_4813) ? 1.0 : min(_4813, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2866 = 1.0 - _2829;
        float _2876 = (0.5 / (((_2512 * ((_2843 * _2866) + _2829)) + 9.9999999392252902907785028219223e-09) + (((_2512 * _2866) + _2829) * _2843))) * _2843;
        float _4824 = isnan(0.0) ? _2876 : (isnan(_2876) ? 0.0 : max(_2876, 0.0));
        float _2878 = (isnan(1.0) ? _4824 : (isnan(_4824) ? 1.0 : min(_4824, 1.0))) * (_2852 / ((_2856 * _2856) * 3.141590118408203125));
        float _2879 = isnan(1.0) ? _2252 : (isnan(_2252) ? 1.0 : min(_2252, 1.0));
        _2799 = (((_2865 * cbLight._m0[_2814].x) * _2878) * _2879) + _2693;
        _2801 = (((_2865 * cbLight._m0[_2814].y) * _2878) * _2879) + _2695;
        _2803 = (((_2865 * cbLight._m0[_2814].z) * _2878) * _2879) + _2697;
    }
    float _2945;
    float _2947;
    float _2949;
    float _2951;
    float _2953;
    float _2955;
    if (_2234.y == 0u)
    {
        uvec4 _2900 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2901 = _2900.x;
        uint _2912 = uint((float(_2900.y) * floor(float(uint(cbSceneParam._m0[85u].y * _847) / _2901))) + floor(float(uint(cbSceneParam._m0[85u].x * _846) / _2901)));
        float _2922 = (log2(_2012 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2923 = isnan(0.0) ? _2922 : (isnan(_2922) ? 0.0 : max(_2922, 0.0));
        uint _2926 = uint(isnan(14.0) ? _2923 : (isnan(_2923) ? 14.0 : min(_2923, 14.0)));
        uvec4 _2931 = texelFetch(g_lightClusterGridBuffer, int(((_2926 << 2u) + (_2912 << 6u)) >> 2u));
        uint _2932 = _2931.x;
        uint _2933 = _2900.z;
        float _3012;
        float _3014;
        float _3016;
        float _3018;
        float _3020;
        float _3022;
        if (((((1u << ((_2933 >> 4u) & 15u)) + 4294967295u) & _2932) == 0u) || ((_2933 & 240u) == 0u))
        {
            _3012 = 0.0;
            _3014 = 0.0;
            _3016 = 0.0;
            _3018 = 0.0;
            _3020 = 0.0;
            _3022 = 0.0;
        }
        else
        {
            float _3013;
            float _3015;
            float _3017;
            float _3019;
            float _3021;
            float _3023;
            float _3165 = 0.0;
            float _3166 = 0.0;
            float _3167 = 0.0;
            float _3168 = 0.0;
            float _3169 = 0.0;
            float _3170 = 0.0;
            uint _3171 = 0u;
            uint _3180;
            bool _3181;
            for (;;)
            {
                _3180 = texelFetch(g_lightClassification, int((((_2926 << 5u) + (_2912 << 9u)) + (_3171 << 2u)) >> 2u)).x;
                _3181 = _3180 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3181)
                {
                    frontier_phi_71_pred = _3170;
                    frontier_phi_71_pred_1 = _3169;
                    frontier_phi_71_pred_2 = _3168;
                    frontier_phi_71_pred_3 = _3167;
                    frontier_phi_71_pred_4 = _3166;
                    frontier_phi_71_pred_5 = _3165;
                }
                else
                {
                    float _3310;
                    float _3311;
                    float _3312;
                    float _3313;
                    float _3314;
                    float _3315;
                    uint _3316;
                    _3310 = _3165;
                    _3311 = _3166;
                    _3312 = _3167;
                    _3313 = _3168;
                    _3314 = _3169;
                    _3315 = _3170;
                    _3316 = _3180;
                    float _3237;
                    float _3238;
                    float _3239;
                    float _3240;
                    float _3241;
                    float _3242;
                    for (;;)
                    {
                        uint _3320 = uint(findLSB(_3316)) + (_3171 << 5u);
                        uint _3317 = (_3316 + 4294967295u) & _3316;
                        uint _3322 = _3320 * 48u;
                        vec4 _3336 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3322)).x, texelFetch(g_PointLightRenderingBuffer, int(_3322 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3322 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3322 + 3u)).x));
                        uint _3342 = (_3320 * 48u) + 4u;
                        vec4 _3355 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3342)).x, texelFetch(g_PointLightRenderingBuffer, int(_3342 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3342 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3342 + 3u)).x));
                        uint _3361 = (_3320 * 48u) + 8u;
                        vec3 _3372 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3361)).x, texelFetch(g_PointLightRenderingBuffer, int(_3361 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3361 + 2u)).x));
                        float _3376 = _3336.x - _2010;
                        float _3377 = _3336.y - _2011;
                        float _3378 = _3336.z - _2012;
                        float _3379 = dot(vec3(_3376, _3377, _3378), vec3(_3376, _3377, _3378));
                        float _3382 = inversesqrt(_3379);
                        float _3383 = _3382 * _3376;
                        float _3384 = _3382 * _3377;
                        float _3385 = _3382 * _3378;
                        float _3386 = dot(vec3(_865, _868, _871), vec3(_3383, _3384, _3385));
                        float _3391 = 1.0 - (_3379 * _3336.w);
                        float _4850 = isnan(0.0) ? _3391 : (isnan(_3391) ? 0.0 : max(_3391, 0.0));
                        float _3392 = isnan(1.0) ? _4850 : (isnan(_4850) ? 1.0 : min(_4850, 1.0));
                        float _3393 = sqrt(_3379) * _3355.w;
                        float _3396 = 1.39999997615814208984375 / (_3393 + 1.39999997615814208984375);
                        float _3397 = _3396 * _3396;
                        float _3400 = ((1.0 - _3397) * _3386) + _3397;
                        float _3403 = _3393 * _3393;
                        float _3407 = ((isnan(0.0) ? _3400 : (isnan(_3400) ? 0.0 : max(_3400, 0.0))) * _3392) / ((_3403 * 0.699999988079071044921875) + 1.0);
                        float _3411 = (-0.0) - _2010;
                        float _3412 = (-0.0) - _2011;
                        float _3413 = (-0.0) - _2012;
                        float _3417 = inversesqrt(dot(vec3(_3411, _3412, _3413), vec3(_3411, _3412, _3413)));
                        float _3418 = _3417 * _3411;
                        float _3419 = _3417 * _3412;
                        float _3420 = _3417 * _3413;
                        float _3427 = exp2(log2(1.0 / ((_3403 * 3.5) + 5.0)) * 0.25);
                        float _3428 = 1.0 - _925;
                        float _3435 = sqrt(1.0 - ((1.0 - (_3428 * _3428)) * (1.0 - (_3427 * _3427))));
                        float _3436 = _3435 * _3435;
                        float _3437 = _3436 * _3436;
                        float _3438 = _3418 + _3383;
                        float _3439 = _3419 + _3384;
                        float _3440 = _3420 + _3385;
                        float _3444 = inversesqrt(dot(vec3(_3438, _3439, _3440), vec3(_3438, _3439, _3440)));
                        float _3448 = dot(vec3(_865, _868, _871), vec3(_3418, _3419, _3420));
                        float _4866 = isnan(0.0) ? _3448 : (isnan(_3448) ? 0.0 : max(_3448, 0.0));
                        float _3451 = isnan(1.0) ? _4866 : (isnan(_4866) ? 1.0 : min(_4866, 1.0));
                        float _3452 = dot(vec3(_865, _868, _871), vec3(_3444 * _3438, _3444 * _3439, _3444 * _3440));
                        float _4877 = isnan(0.0) ? _3452 : (isnan(_3452) ? 0.0 : max(_3452, 0.0));
                        float _3455 = isnan(1.0) ? _4877 : (isnan(_4877) ? 1.0 : min(_4877, 1.0));
                        float _3459 = ((_3455 * _3455) * (_3437 + (-1.0))) + 1.0;
                        float _3460 = _3396 * _3436;
                        float _3461 = _3460 * _3460;
                        float _3464 = ((1.0 - _3461) * _3386) + _3461;
                        float _4888 = isnan(0.0) ? _3464 : (isnan(_3464) ? 0.0 : max(_3464, 0.0));
                        float _3465 = isnan(1.0) ? _4888 : (isnan(_4888) ? 1.0 : min(_4888, 1.0));
                        float _3466 = 1.0 - _3436;
                        float _3476 = (0.5 / (((_3465 * ((_3451 * _3466) + _3436)) + 9.9999999392252902907785028219223e-09) + (((_3465 * _3466) + _3436) * _3451))) * _3465;
                        float _4899 = isnan(0.0) ? _3476 : (isnan(_3476) ? 0.0 : max(_3476, 0.0));
                        float _3486 = (((_3437 * 3.1415927410125732421875) * (isnan(1.0) ? _4899 : (isnan(_4899) ? 1.0 : min(_4899, 1.0)))) / ((_3459 * _3459) * ((_3403 * 2.1991131305694580078125) + 3.141590118408203125))) * _3392;
                        _3240 = (_3407 * _3355.x) + _3313;
                        _3241 = (_3407 * _3355.y) + _3314;
                        _3242 = (_3407 * _3355.z) + _3315;
                        _3237 = (_3486 * _3372.x) + _3310;
                        _3238 = (_3486 * _3372.y) + _3311;
                        _3239 = (_3486 * _3372.z) + _3312;
                        if (_3317 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3310 = _3237;
                            _3311 = _3238;
                            _3312 = _3239;
                            _3313 = _3240;
                            _3314 = _3241;
                            _3315 = _3242;
                            _3316 = _3317;
                        }
                    }
                    frontier_phi_71_pred = _3242;
                    frontier_phi_71_pred_1 = _3241;
                    frontier_phi_71_pred_2 = _3240;
                    frontier_phi_71_pred_3 = _3239;
                    frontier_phi_71_pred_4 = _3238;
                    frontier_phi_71_pred_5 = _3237;
                }
                _3023 = frontier_phi_71_pred;
                _3021 = frontier_phi_71_pred_1;
                _3019 = frontier_phi_71_pred_2;
                _3017 = frontier_phi_71_pred_3;
                _3015 = frontier_phi_71_pred_4;
                _3013 = frontier_phi_71_pred_5;
                uint _3172 = _3171 + 1u;
                if (_3172 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3165 = _3013;
                    _3166 = _3015;
                    _3167 = _3017;
                    _3168 = _3019;
                    _3169 = _3021;
                    _3170 = _3023;
                    _3171 = _3172;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3012 = _3013;
            _3014 = _3015;
            _3016 = _3017;
            _3018 = _3019;
            _3020 = _3021;
            _3022 = _3023;
        }
        uvec4 _3026 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3027 = _3026.z;
        uint _3029 = (_3027 >> 8u) & 15u;
        float _3133;
        float _3135;
        float _3137;
        float _3139;
        float _3141;
        float _3143;
        if (((4294967295u << _3029) & _2932) == 0u)
        {
            _3133 = _3012;
            _3135 = _3014;
            _3137 = _3016;
            _3139 = _3018;
            _3141 = _3020;
            _3143 = _3022;
        }
        else
        {
            float _3158 = inversesqrt(dot(vec3(_2010, _2011, _2012), vec3(_2010, _2011, _2012)));
            float _3159 = _3158 * _2010;
            float _3160 = _3158 * _2011;
            float _3161 = _3158 * _2012;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3029 < ((_3027 >> 12u) & 15u))
            {
                float _3134;
                float _3136;
                float _3138;
                float _3140;
                float _3142;
                float _3144;
                float _3293 = _3012;
                float _3294 = _3014;
                float _3295 = _3016;
                float _3296 = _3018;
                float _3297 = _3020;
                float _3298 = _3022;
                uint _3299 = _3029;
                uint _3308;
                bool _3309;
                for (;;)
                {
                    _3308 = texelFetch(g_lightClassification, int((((_2926 << 5u) + (_2912 << 9u)) + (_3299 << 2u)) >> 2u)).x;
                    _3309 = _3308 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3309)
                    {
                        frontier_phi_82_pred = _3298;
                        frontier_phi_82_pred_1 = _3297;
                        frontier_phi_82_pred_2 = _3296;
                        frontier_phi_82_pred_3 = _3295;
                        frontier_phi_82_pred_4 = _3294;
                        frontier_phi_82_pred_5 = _3293;
                    }
                    else
                    {
                        float _3500;
                        float _3501;
                        float _3502;
                        float _3503;
                        float _3504;
                        float _3505;
                        float _3793;
                        float _3794;
                        float _3795;
                        float _3796;
                        float _3797;
                        float _3798;
                        float _3513 = _3293;
                        float _3514 = _3294;
                        float _3515 = _3295;
                        float _3516 = _3296;
                        float _3517 = _3297;
                        float _3518 = _3298;
                        uint _3519 = _3308;
                        uint _3520;
                        vec4 _3545;
                        float _3546;
                        vec4 _3561;
                        vec3 _3573;
                        vec4 _3588;
                        vec4 _3603;
                        float _3649;
                        bool _3650;
                        for (;;)
                        {
                            uint _3530 = ((_3299 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3519));
                            _3520 = (_3519 + 4294967295u) & _3519;
                            uint _3532 = _3530 * 40u;
                            _3545 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3532)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3532 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3532 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3532 + 3u)).x));
                            _3546 = _3545.w;
                            uint _3548 = (_3530 * 40u) + 4u;
                            _3561 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3548)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3548 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3548 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3548 + 3u)).x));
                            uint _3563 = (_3530 * 40u) + 8u;
                            _3573 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3563)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3563 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3563 + 2u)).x));
                            uint _3575 = (_3530 * 40u) + 16u;
                            _3588 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3575)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3575 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3575 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3575 + 3u)).x));
                            uint _3590 = (_3530 * 40u) + 20u;
                            _3603 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3590)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3590 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3590 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3590 + 3u)).x));
                            uint _3605 = (_3530 * 40u) + 24u;
                            vec4 _3618 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3605)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3605 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3605 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3605 + 3u)).x));
                            uint _3624 = (_3530 * 40u) + 28u;
                            vec4 _3637 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3624)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3624 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3624 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3624 + 3u)).x));
                            _3649 = fma(_2012, _3637.z, fma(_2011, _3637.y, _3637.x * _2010)) + _3637.w;
                            _3650 = !((fma(_2012, _3618.z, fma(_2011, _3618.y, _3618.x * _2010)) + _3618.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3650)
                            {
                                float _3677 = _3545.x - _2010;
                                float _3678 = _3545.y - _2011;
                                float _3679 = _3545.z - _2012;
                                float _3680 = dot(vec3(_3677, _3678, _3679), vec3(_3677, _3678, _3679));
                                float _3683 = inversesqrt(_3680);
                                float _3684 = _3683 * _3677;
                                float _3685 = _3683 * _3678;
                                float _3686 = _3683 * _3679;
                                float _3690 = 1.0 - (_3680 / (_3546 * _3546));
                                float _4910 = isnan(0.0) ? _3690 : (isnan(_3690) ? 0.0 : max(_3690, 0.0));
                                float _3691 = isnan(1.0) ? _4910 : (isnan(_4910) ? 1.0 : min(_4910, 1.0));
                                float _3695 = sqrt(_3680) * _3561.w;
                                float _3697 = 1.39999997615814208984375 / (_3695 + 1.39999997615814208984375);
                                float _3698 = _3697 * _3697;
                                float _3701 = ((1.0 - _3698) * dot(vec3(_3684, _3685, _3686), vec3(_865, _868, _871))) + _3698;
                                float _3704 = _3695 * _3695;
                                float _3708 = (fma(_2012, _3588.z, fma(_2011, _3588.y, _3588.x * _2010)) + _3588.w) / _3649;
                                float _3709 = (fma(_2012, _3603.z, fma(_2011, _3603.y, _3603.x * _2010)) + _3603.w) / _3649;
                                float _3713 = 1.0 - dot(vec2(_3708, _3709), vec2(_3708, _3709));
                                float _4926 = isnan(0.0) ? _3713 : (isnan(_3713) ? 0.0 : max(_3713, 0.0));
                                float _3714 = isnan(1.0) ? _4926 : (isnan(_4926) ? 1.0 : min(_4926, 1.0));
                                float _3715 = _3714 * (((isnan(0.0) ? _3701 : (isnan(_3701) ? 0.0 : max(_3701, 0.0))) * _3691) / ((_3704 * 0.699999988079071044921875) + 1.0));
                                float _3727 = exp2(log2(1.0 / ((_3704 * 3.5) + 5.0)) * 0.25);
                                float _3728 = 1.0 - _925;
                                float _3735 = sqrt(1.0 - ((1.0 - (_3728 * _3728)) * (1.0 - (_3727 * _3727))));
                                float _3736 = _3735 * _3735;
                                float _3737 = _3736 * _3736;
                                float _3738 = _3684 - _3159;
                                float _3739 = _3685 - _3160;
                                float _3740 = _3686 - _3161;
                                float _3744 = inversesqrt(dot(vec3(_3738, _3739, _3740), vec3(_3738, _3739, _3740)));
                                float _3748 = dot(vec3(_865, _868, _871), vec3((-0.0) - _3159, (-0.0) - _3160, (-0.0) - _3161));
                                float _4937 = isnan(0.0) ? _3748 : (isnan(_3748) ? 0.0 : max(_3748, 0.0));
                                float _3751 = isnan(1.0) ? _4937 : (isnan(_4937) ? 1.0 : min(_4937, 1.0));
                                float _3752 = dot(vec3(_865, _868, _871), vec3(_3744 * _3738, _3744 * _3739, _3744 * _3740));
                                float _4948 = isnan(0.0) ? _3752 : (isnan(_3752) ? 0.0 : max(_3752, 0.0));
                                float _3755 = isnan(1.0) ? _4948 : (isnan(_4948) ? 1.0 : min(_4948, 1.0));
                                float _3759 = ((_3755 * _3755) * (_3737 + (-1.0))) + 1.0;
                                float _3760 = _3697 * _3736;
                                float _3761 = _3760 * _3760;
                                float _3767 = ((1.0 - _3761) * dot(vec3(_865, _868, _871), vec3(_3684, _3685, _3686))) + _3761;
                                float _4959 = isnan(0.0) ? _3767 : (isnan(_3767) ? 0.0 : max(_3767, 0.0));
                                float _3768 = isnan(1.0) ? _4959 : (isnan(_4959) ? 1.0 : min(_4959, 1.0));
                                float _3769 = 1.0 - _3736;
                                float _3779 = (0.5 / (((_3768 * ((_3751 * _3769) + _3736)) + 9.9999999392252902907785028219223e-09) + (((_3768 * _3769) + _3736) * _3751))) * _3768;
                                float _4970 = isnan(0.0) ? _3779 : (isnan(_3779) ? 0.0 : max(_3779, 0.0));
                                float _3789 = (_3714 * _3691) * (((_3737 * 3.1415927410125732421875) * (isnan(1.0) ? _4970 : (isnan(_4970) ? 1.0 : min(_4970, 1.0)))) / ((_3759 * _3759) * ((_3704 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3715 * _3561.z;
                                frontier_phi_88_pred_1 = _3715 * _3561.y;
                                frontier_phi_88_pred_2 = _3715 * _3561.x;
                                frontier_phi_88_pred_3 = _3789 * _3573.z;
                                frontier_phi_88_pred_4 = _3789 * _3573.y;
                                frontier_phi_88_pred_5 = _3789 * _3573.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3798 = frontier_phi_88_pred;
                            _3797 = frontier_phi_88_pred_1;
                            _3796 = frontier_phi_88_pred_2;
                            _3795 = frontier_phi_88_pred_3;
                            _3794 = frontier_phi_88_pred_4;
                            _3793 = frontier_phi_88_pred_5;
                            _3503 = _3796 + _3516;
                            _3504 = _3797 + _3517;
                            _3505 = _3798 + _3518;
                            _3500 = _3793 + _3513;
                            _3501 = _3794 + _3514;
                            _3502 = _3795 + _3515;
                            if (_3520 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3513 = _3500;
                                _3514 = _3501;
                                _3515 = _3502;
                                _3516 = _3503;
                                _3517 = _3504;
                                _3518 = _3505;
                                _3519 = _3520;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3505;
                        frontier_phi_82_pred_1 = _3504;
                        frontier_phi_82_pred_2 = _3503;
                        frontier_phi_82_pred_3 = _3502;
                        frontier_phi_82_pred_4 = _3501;
                        frontier_phi_82_pred_5 = _3500;
                    }
                    _3144 = frontier_phi_82_pred;
                    _3142 = frontier_phi_82_pred_1;
                    _3140 = frontier_phi_82_pred_2;
                    _3138 = frontier_phi_82_pred_3;
                    _3136 = frontier_phi_82_pred_4;
                    _3134 = frontier_phi_82_pred_5;
                    uint _3300 = _3299 + 1u;
                    if (_3300 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3293 = _3134;
                        _3294 = _3136;
                        _3295 = _3138;
                        _3296 = _3140;
                        _3297 = _3142;
                        _3298 = _3144;
                        _3299 = _3300;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3140;
                frontier_phi_63_64_ladder_1 = _3144;
                frontier_phi_63_64_ladder_2 = _3142;
                frontier_phi_63_64_ladder_3 = _3138;
                frontier_phi_63_64_ladder_4 = _3136;
                frontier_phi_63_64_ladder_5 = _3134;
            }
            else
            {
                frontier_phi_63_64_ladder = _3018;
                frontier_phi_63_64_ladder_1 = _3022;
                frontier_phi_63_64_ladder_2 = _3020;
                frontier_phi_63_64_ladder_3 = _3016;
                frontier_phi_63_64_ladder_4 = _3014;
                frontier_phi_63_64_ladder_5 = _3012;
            }
            _3133 = frontier_phi_63_64_ladder_5;
            _3135 = frontier_phi_63_64_ladder_4;
            _3137 = frontier_phi_63_64_ladder_3;
            _3139 = frontier_phi_63_64_ladder;
            _3141 = frontier_phi_63_64_ladder_2;
            _3143 = frontier_phi_63_64_ladder_1;
        }
        float _3148 = isnan(1.0) ? _909 : (isnan(_909) ? 1.0 : min(_909, 1.0));
        _2945 = (_3148 * _3139) + _2476;
        _2947 = (_3148 * _3141) + _2478;
        _2949 = (_3148 * _3143) + _2480;
        _2951 = ((_3133 * 0.039999999105930328369140625) * _3148) + _2799;
        _2953 = ((_3135 * 0.039999999105930328369140625) * _3148) + _2801;
        _2955 = ((_3137 * 0.039999999105930328369140625) * _3148) + _2803;
    }
    else
    {
        _2945 = _2476;
        _2947 = _2478;
        _2949 = _2480;
        _2951 = _2799;
        _2953 = _2801;
        _2955 = _2803;
    }
    float _4986 = isnan(0.0) ? _894 : (isnan(_894) ? 0.0 : max(_894, 0.0));
    float _4997 = isnan(0.0) ? _895 : (isnan(_895) ? 0.0 : max(_895, 0.0));
    float _5008 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
    float _2972 = ((isnan(1.0) ? _4986 : (isnan(_4986) ? 1.0 : min(_4986, 1.0))) * (_2945 + ((isnan(0.0) ? _1664 : (isnan(_1664) ? 0.0 : max(_1664, 0.0))) * _909))) + ((_2951 + ((isnan(0.0) ? _1957 : (isnan(_1957) ? 0.0 : max(_1957, 0.0))) * _1743)) * cbPerFrame._m0[3u].x);
    float _2973 = ((isnan(1.0) ? _4997 : (isnan(_4997) ? 1.0 : min(_4997, 1.0))) * (_2947 + ((isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0))) * _909))) + ((_2953 + ((isnan(0.0) ? _1960 : (isnan(_1960) ? 0.0 : max(_1960, 0.0))) * _1743)) * cbPerFrame._m0[3u].x);
    float _2974 = ((isnan(1.0) ? _5008 : (isnan(_5008) ? 1.0 : min(_5008, 1.0))) * (_2949 + ((isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0))) * _909))) + ((_2955 + ((isnan(0.0) ? _1963 : (isnan(_1963) ? 0.0 : max(_1963, 0.0))) * _1743)) * cbPerFrame._m0[3u].x);
    uint _2975 = _277 + 6u;
    float _2983 = _846 / cbSceneParam._m0[86u].x;
    float _2984 = _847 / cbSceneParam._m0[86u].y;
    vec4 _2998 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2983, _2984, (log2((isnan(cbSceneParam._m0[77u].w) ? _768 : (isnan(_768) ? cbSceneParam._m0[77u].w : min(_768, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3000 = _2998.x;
    float _3001 = _2998.y;
    float _3002 = _2998.z;
    float _3003 = _2998.w;
    float _3075;
    float _3077;
    float _3079;
    float _3081;
    if (_768 > cbSceneParam._m0[78u].w)
    {
        float _3037 = isnan(_768) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _768 : min(cbSceneParam._m0[80u].w, _768));
        float _3038 = _3037 / _768;
        float _3049 = _3038 * _819;
        float _3050 = _820 * _3038;
        float _3051 = (-0.0) - _3050;
        float _3053 = _3038 * _821;
        float _3055 = (cbSceneParam._m0[77u].w * _3051) / _3037;
        float _3056 = _3055 + cbSceneParam._m0[79u].w;
        float _3057 = cbSceneParam._m0[79u].w - _3050;
        float _3063 = sqrt(((_3049 * _3049) + (_3050 * _3050)) + (_3053 * _3053));
        float _3066 = (1.0 - (cbSceneParam._m0[77u].w / _3037)) * _3063;
        float _3071 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3073 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3250;
        if (abs((_3051 - _3055) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3250 = ((((_3056 > 0.0) ? exp2(_3071 * _3056) : (2.0 - exp2(_3073 * _3056))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3066;
        }
        else
        {
            float _3194 = 1.0 / cbSceneParam._m0[80u].x;
            float _3195 = isnan(_3057) ? _3056 : (isnan(_3056) ? _3057 : max(_3056, _3057));
            float _3196 = isnan(_3057) ? _3056 : (isnan(_3056) ? _3057 : min(_3056, _3057));
            float _3205 = isnan(0.0) ? _3195 : (isnan(_3195) ? 0.0 : min(_3195, 0.0));
            float _3206 = isnan(0.0) ? _3196 : (isnan(_3196) ? 0.0 : min(_3196, 0.0));
            _3250 = ((abs(_3063 / _3051) * cbSceneParam._m0[80u].y) * ((((_3205 - _3206) * 2.0) - ((exp2(_3071 * (isnan(0.0) ? _3195 : (isnan(_3195) ? 0.0 : max(_3195, 0.0)))) - exp2(_3071 * (isnan(0.0) ? _3196 : (isnan(_3196) ? 0.0 : max(_3196, 0.0))))) * _3194)) - ((exp2(_3073 * _3205) - exp2(_3073 * _3206)) * _3194))) + (_3066 * cbSceneParam._m0[80u].z);
        }
        vec4 _3252 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2983, _2984, 1.0), 0.0);
        float _3261 = exp2((_3250 * (-1.44269502162933349609375)) * (1.0 - _3252.w));
        float _3262 = log2(_3261);
        float _3278 = log2(_3003);
        _3075 = (exp2(_3278 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3262 * cbSceneParam._m0[78u].x)) * _3252.x) / cbSceneParam._m0[78u].x)) + _3000;
        _3077 = (exp2(_3278 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3262 * cbSceneParam._m0[78u].y)) * _3252.y) / cbSceneParam._m0[78u].y)) + _3001;
        _3079 = (exp2(_3278 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3262 * cbSceneParam._m0[78u].z)) * _3252.z) / cbSceneParam._m0[78u].z)) + _3002;
        _3081 = _3261 * _3003;
    }
    else
    {
        _3075 = _3000;
        _3077 = _3001;
        _3079 = _3002;
        _3081 = _3003;
    }
    bool _3288;
    vec4 _3091;
    vec4 _3113;
    float _3115;
    float _3119;
    float _3120;
    float _3121;
    float _3122;
    bool _3132;
    for (;;)
    {
        _3091 = cbMatDynParam._m0[0u];
        float _3093 = roundEven(_3091.y);
        bool _3094 = _3093 == 3.0;
        float _3095 = log2(_3081);
        float _3102 = exp2(_3095 * cbSceneParam._m0[78u].x) * _2972;
        float _3103 = exp2(_3095 * cbSceneParam._m0[78u].y) * _2973;
        float _3104 = exp2(_3095 * cbSceneParam._m0[78u].z) * _2974;
        float _3111 = _835 + (-0.5);
        _3113 = cbMtdParam._m0[1u];
        _3115 = _3113.y * _3111;
        float _3118 = (_3093 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3119 = _3118 * (_3094 ? _3102 : (_3102 + (cbSceneParam._m0[72u].w * _3075)));
        _3120 = _3118 * (_3094 ? _3103 : (_3103 + (cbSceneParam._m0[72u].w * _3077)));
        _3121 = _3118 * (_3094 ? _3104 : (_3104 + (cbSceneParam._m0[72u].w * _3079)));
        _3122 = _3111 * 0.999000012874603271484375;
        _3132 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3132)
        {
            if ((cbInstanceData._m0[_277 + 7u].x + _3122) < 0.5)
            {
                _3288 = true;
                break;
            }
        }
        uint _3229 = _884 + uint(_3091.w);
        if ((cbInstanceData._m0[_3229].w < 1.0) && ((cbInstanceData._m0[_3229].w + _3122) < 0.5))
        {
            _3288 = true;
            break;
        }
        if ((_3115 + 1.0) < _3113.x)
        {
            _3288 = true;
            break;
        }
        _3288 = false;
        break;
    }
    float _3491;
    if (_3288)
    {
        discard_state = true;
        _3491 = 0.0;
    }
    else
    {
        _3491 = cbInstanceData._m0[_2975].w;
    }
    SV_Target.x = _3119;
    SV_Target.y = _3120;
    SV_Target.z = _3121;
    SV_Target.w = _3491;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2975].w;
    discard_exit();
}


