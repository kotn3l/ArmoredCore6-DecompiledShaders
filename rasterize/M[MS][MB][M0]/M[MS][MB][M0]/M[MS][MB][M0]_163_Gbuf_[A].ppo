#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _197 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _198 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _199 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _205 = inversesqrt(dot(vec3(_197, _198, _199), vec3(_197, _198, _199)));
    float _206 = _205 * _197;
    float _207 = _205 * _198;
    float _208 = _205 * _199;
    float _212 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _213 = _212 * NORMAL.x;
    float _214 = _212 * NORMAL.y;
    float _215 = _212 * NORMAL.z;
    float _219 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _220 = _219 * TANGENT.x;
    float _221 = _219 * TANGENT.y;
    float _222 = _219 * TANGENT.z;
    uint _225 = uint(roundEven(NORMAL.w)) * 13u;
    uint _230 = _225 + 1u;
    uint _234 = _225 + 2u;
    float _243 = sqrt(((cbInstanceData._m0[_230].x * cbInstanceData._m0[_230].x) + (cbInstanceData._m0[_225].x * cbInstanceData._m0[_225].x)) + (cbInstanceData._m0[_234].x * cbInstanceData._m0[_234].x));
    float _244 = _243 * TEXCOORD.z;
    float _245 = _243 * TEXCOORD.w;
    vec4 _265 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _271 = _265.x * cbMtdParam._m0[11u].x;
    float _272 = _265.y * cbMtdParam._m0[11u].y;
    float _273 = _265.z * cbMtdParam._m0[11u].z;
    vec4 _292 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _244) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _245) + cbTextureTilingScale._m0[5u].w));
    vec4 _330 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _332 = _330.x;
    float _342 = dot(vec4(_332, _330.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _359 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_332 - _342) * cbMtdParam._m0[24u].x) + _342) * cbMtdParam._m0[23u].x))) + 1.0;
    float _1011 = isnan(0.0) ? _359 : (isnan(_359) ? 0.0 : max(_359, 0.0));
    float _360 = isnan(1.0) ? _1011 : (isnan(_1011) ? 1.0 : min(_1011, 1.0));
    float _367 = (_360 * ((_292.x * cbMtdParam._m0[12u].x) - _271)) + _271;
    float _368 = (_360 * ((_292.y * cbMtdParam._m0[12u].y) - _272)) + _272;
    float _369 = (_360 * ((_292.z * cbMtdParam._m0[12u].z) - _273)) + _273;
    vec4 _388 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _244) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _245) + cbTextureTilingScale._m0[14u].w));
    vec4 _408 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _244) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _245) + cbTextureTilingScale._m0[20u].w));
    vec4 _435 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _244) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _245) + cbTextureTilingScale._m0[4u].w));
    vec4 _452 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _454 = _452.x;
    float _455 = _452.y;
    float _456 = _452.z;
    float _465 = ((_435.z - _456) * _360) + _456;
    float _468 = ((((_435.x - _454) * _360) + _454) * 2.0) + (-1.0);
    float _469 = ((((_435.y - _455) * _360) + _455) * 2.0) + (-1.0);
    float _470 = dot(vec2(_468, _469), vec2(_468, _469));
    float _1022 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _475 = sqrt(1.0 - (isnan(1.0) ? _1022 : (isnan(_1022) ? 1.0 : min(_1022, 1.0))));
    vec4 _495 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _507 = (_468 + ((((_408.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x)) + (((_495.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _508 = (_469 + ((((_408.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x)) + (((_495.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _511 = fma(_475, _213, fma(_508, _220, _507 * _206));
    float _514 = fma(_475, _214, fma(_508, _221, _507 * _207));
    float _517 = fma(_475, _215, fma(_508, _222, _507 * _208));
    float _521 = inversesqrt(dot(vec3(_511, _514, _517), vec3(_511, _514, _517)));
    vec4 _551 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _244) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _245) + cbTextureTilingScale._m0[11u].w));
    float _553 = _551.x;
    float _554 = 1.0 - _553;
    float _558 = ((_553 - _554) * cbMtdParam._m0[24u].z) + _554;
    float _560 = (cbMtdParam._m0[19u].x + dot(vec4(_521 * _511, _521 * _514, _521 * _517, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_558 * cbMtdParam._m0[21u].z);
    float _1033 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
    float _561 = isnan(1.0) ? _1033 : (isnan(_1033) ? 1.0 : min(_1033, 1.0));
    float _563 = (-0.0) - cbMtdParam._m0[24u].y;
    float _565 = isnan(0.0) ? _563 : (isnan(_563) ? 0.0 : max(_563, 0.0));
    float _566 = isnan(1.0) ? _565 : (isnan(_565) ? 1.0 : min(_565, 1.0));
    float _573 = _561 - ((_561 * TEXCOORD_8.x) * _566);
    float _574 = _561 - ((_561 * TEXCOORD_8.y) * _566);
    float _575 = _561 - ((_561 * TEXCOORD_8.z) * _566);
    float _582 = isnan(-1.0) ? cbMtdParam._m0[24u].y : (isnan(cbMtdParam._m0[24u].y) ? (-1.0) : max(cbMtdParam._m0[24u].y, -1.0));
    float _586 = ((isnan(0.0) ? _582 : (isnan(_582) ? 0.0 : min(_582, 0.0))) * TEXCOORD_8.x) + TEXCOORD_14.x;
    float _594 = (_586 - (((_558 + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _586))) * (cbMtdParam._m0[21u].w + 1.0);
    float _1064 = isnan(0.0) ? _594 : (isnan(_594) ? 0.0 : max(_594, 0.0));
    float _595 = isnan(1.0) ? _1064 : (isnan(_1064) ? 1.0 : min(_1064, 1.0));
    float _599 = ((_573 * ((_388.x * cbMtdParam._m0[18u].x) - _367)) * _595) + _367;
    float _600 = ((_574 * ((_388.y * cbMtdParam._m0[18u].y) - _368)) * _595) + _368;
    float _601 = ((_575 * ((_388.z * cbMtdParam._m0[18u].z) - _369)) * _595) + _369;
    vec4 _613 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _244) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _245) + cbTextureTilingScale._m0[19u].w));
    float _615 = _613.x;
    float _616 = 1.0 - _615;
    float _643 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_615 - _616) * cbMtdParam._m0[24u].w) + _616) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _1075 = isnan(0.0) ? _643 : (isnan(_643) ? 0.0 : max(_643, 0.0));
    float _644 = isnan(1.0) ? _1075 : (isnan(_1075) ? 1.0 : min(_1075, 1.0));
    float _652 = ((((cbMtdParam._m0[10u].x - _599) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _644) + _599;
    float _653 = ((((cbMtdParam._m0[10u].y - _600) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _644) + _600;
    float _654 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _601)) * _644) + _601;
    float _659 = (((_408.z - _465) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _465;
    float _663 = ((_495.z - _659) * cbMtdParam._m0[19u].w) + _659;
    vec4 _677 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _244) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _245) + cbTextureTilingScale._m0[15u].w));
    float _684 = (_677.x * 2.0) + (-1.0);
    float _685 = (_677.y * 2.0) + (-1.0);
    float _686 = dot(vec2(_684, _685), vec2(_684, _685));
    float _1086 = isnan(0.0) ? _686 : (isnan(_686) ? 0.0 : max(_686, 0.0));
    float _695 = (((_677.z - _663) * _573) * _595) + _663;
    float _698 = ((cbMtdParam._m0[23u].y - _695) * _644) + _695;
    vec4 _717 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _244) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _245) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _723 = (_717.x * 2.0) + (-1.0);
    float _724 = (_717.y * 2.0) + (-1.0);
    float _725 = dot(vec2(_723, _724), vec2(_723, _724));
    float _1097 = isnan(0.0) ? _725 : (isnan(_725) ? 0.0 : max(_725, 0.0));
    float _745 = (((cbMtdParam._m0[21u].x * _507) + ((_684 - _507) * _573)) * _595) + _507;
    float _746 = (((cbMtdParam._m0[21u].x * _508) + ((_685 - _508) * _574)) * _595) + _508;
    float _747 = (((sqrt(1.0 - (isnan(1.0) ? _1086 : (isnan(_1086) ? 1.0 : min(_1086, 1.0)))) - _475) * _575) * _595) + _475;
    float _758 = (((_723 - _745) + (_745 * cbMtdParam._m0[22u].z)) * _644) + _745;
    float _759 = (((_724 - _746) + (_746 * cbMtdParam._m0[22u].z)) * _644) + _746;
    float _760 = ((sqrt(1.0 - (isnan(1.0) ? _1097 : (isnan(_1097) ? 1.0 : min(_1097, 1.0)))) - _747) * _644) + _747;
    float _762 = cbMtdParam._m0[22u].x + _495.w;
    float _765 = fma(_760, _213, fma(_759, _220, _758 * _206));
    float _768 = fma(_760, _214, fma(_759, _221, _758 * _207));
    float _771 = fma(_760, _215, fma(_759, _222, _758 * _208));
    float _775 = inversesqrt(dot(vec3(_765, _768, _771), vec3(_765, _768, _771)));
    float _1108 = isnan(0.0) ? _698 : (isnan(_698) ? 0.0 : max(_698, 0.0));
    float _1119 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
    float _777 = isnan(1.0) ? _1119 : (isnan(_1119) ? 1.0 : min(_1119, 1.0));
    float _1130 = isnan(0.0) ? _652 : (isnan(_652) ? 0.0 : max(_652, 0.0));
    float _778 = isnan(1.0) ? _1130 : (isnan(_1130) ? 1.0 : min(_1130, 1.0));
    float _1141 = isnan(0.0) ? _653 : (isnan(_653) ? 0.0 : max(_653, 0.0));
    float _779 = isnan(1.0) ? _1141 : (isnan(_1141) ? 1.0 : min(_1141, 1.0));
    float _1152 = isnan(0.0) ? _654 : (isnan(_654) ? 0.0 : max(_654, 0.0));
    float _780 = isnan(1.0) ? _1152 : (isnan(_1152) ? 1.0 : min(_1152, 1.0));
    float _821 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _831 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _821);
    float _832 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _821);
    float _833 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _821);
    vec4 _838 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _840 = _838.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _900 = sqrt(((_831 * _831) + (_832 * _832)) + (_833 * _833));
        float _906 = (cbMatDynParam._m0[5u].x * _900) + cbMatDynParam._m0[5u].y;
        float _1163 = isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0));
        float _907 = isnan(1.0) ? _1163 : (isnan(_1163) ? 1.0 : min(_1163, 1.0));
        float _911 = (cbMatDynParam._m0[5u].z * _900) + cbMatDynParam._m0[5u].w;
        float _1174 = isnan(0.0) ? _911 : (isnan(_911) ? 0.0 : max(_911, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1174 : (isnan(_1174) ? 1.0 : min(_1174, 1.0))) - _907)) + _907) < ((_840 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _938;
    vec4 _862;
    float _869;
    float _870;
    float _871;
    float _872;
    float _876;
    vec4 _880;
    float _882;
    float _883;
    bool _894;
    for (;;)
    {
        _862 = cbInstanceData._m0[(_225 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _866 = (cbMtdParam._m0[0u].x * _778) * _862.x;
        float _867 = (cbMtdParam._m0[0u].y * _779) * _862.y;
        float _868 = (cbMtdParam._m0[0u].z * _780) * _862.z;
        float _1185 = isnan(0.0) ? _866 : (isnan(_866) ? 0.0 : max(_866, 0.0));
        _869 = isnan(1.0) ? _1185 : (isnan(_1185) ? 1.0 : min(_1185, 1.0));
        float _1196 = isnan(0.0) ? _867 : (isnan(_867) ? 0.0 : max(_867, 0.0));
        _870 = isnan(1.0) ? _1196 : (isnan(_1196) ? 1.0 : min(_1196, 1.0));
        float _1207 = isnan(0.0) ? _868 : (isnan(_868) ? 0.0 : max(_868, 0.0));
        _871 = isnan(1.0) ? _1207 : (isnan(_1207) ? 1.0 : min(_1207, 1.0));
        _872 = _777 * TEXCOORD_5.w;
        _876 = cbInstanceData._m0[_225 + 6u].w;
        float _877 = _840 + (-0.5);
        _880 = cbMtdParam._m0[1u];
        _882 = _880.y * _877;
        _883 = _877 * 0.999000012874603271484375;
        _894 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_894)
        {
            if ((cbInstanceData._m0[_225 + 7u].x + _883) < 0.5)
            {
                _938 = true;
                break;
            }
        }
        if ((_862.w < 1.0) && ((_862.w + _883) < 0.5))
        {
            _938 = true;
            break;
        }
        if ((_882 + 1.0) < _880.x)
        {
            _938 = true;
            break;
        }
        _938 = false;
        break;
    }
    if (_938)
    {
        discard_state = true;
    }
    bool _964 = cbMtdParam._m0[1u].z != 0.0;
    float _965 = _964 ? _876 : 0.0;
    SV_Target.x = ((_765 * 0.5) * _775) + 0.500488758087158203125;
    SV_Target.y = ((_768 * 0.5) * _775) + 0.500488758087158203125;
    SV_Target.z = ((_771 * 0.5) * _775) + 0.500488758087158203125;
    SV_Target.w = _965;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _1108 : (isnan(_1108) ? 1.0 : min(_1108, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _964 ? _876 : _872;
    SV_Target_2.x = _869;
    SV_Target_2.y = _870;
    SV_Target_2.z = _871;
    SV_Target_2.w = _964 ? _876 : (float(floatBitsToUint(cbInstanceData._m0[_225 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _965;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _965;
    discard_exit();
}


