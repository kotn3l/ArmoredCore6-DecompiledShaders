#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1341;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _230 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _231 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _232 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _238 = inversesqrt(dot(vec3(_230, _231, _232), vec3(_230, _231, _232)));
    float _239 = _238 * _230;
    float _240 = _238 * _231;
    float _241 = _238 * _232;
    float _245 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _246 = _245 * NORMAL.x;
    float _247 = _245 * NORMAL.y;
    float _248 = _245 * NORMAL.z;
    float _252 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _253 = _252 * TANGENT.x;
    float _254 = _252 * TANGENT.y;
    float _255 = _252 * TANGENT.z;
    float _264 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _266 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _267 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3927 = isnan(0.0) ? _264 : (isnan(_264) ? 0.0 : max(_264, 0.0));
    float _3938 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
    float _3949 = isnan(0.0) ? _267 : (isnan(_267) ? 0.0 : max(_267, 0.0));
    uint _277 = uint(roundEven(NORMAL.w)) * 13u;
    uint _282 = _277 + 1u;
    uint _286 = _277 + 2u;
    float _295 = sqrt(((cbInstanceData._m0[_282].x * cbInstanceData._m0[_282].x) + (cbInstanceData._m0[_277].x * cbInstanceData._m0[_277].x)) + (cbInstanceData._m0[_286].x * cbInstanceData._m0[_286].x));
    float _296 = _295 * TEXCOORD.z;
    float _297 = _295 * TEXCOORD.w;
    vec4 _310 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _296) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _297) + cbTextureTilingScale._m0[13u].w));
    vec4 _334 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _339 = _334.x * cbMtdParam._m0[11u].x;
    float _340 = _334.y * cbMtdParam._m0[11u].y;
    float _341 = _334.z * cbMtdParam._m0[11u].z;
    vec4 _360 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _296) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _297) + cbTextureTilingScale._m0[5u].w));
    vec4 _396 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _398 = _396.x;
    float _408 = dot(vec4(_398, _396.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _425 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_398 - _408) * cbMtdParam._m0[24u].x) + _408) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3960 = isnan(0.0) ? _425 : (isnan(_425) ? 0.0 : max(_425, 0.0));
    float _426 = isnan(1.0) ? _3960 : (isnan(_3960) ? 1.0 : min(_3960, 1.0));
    float _433 = (_426 * ((_360.x * cbMtdParam._m0[12u].x) - _339)) + _339;
    float _434 = (_426 * ((_360.y * cbMtdParam._m0[12u].y) - _340)) + _340;
    float _435 = (_426 * ((_360.z * cbMtdParam._m0[12u].z) - _341)) + _341;
    float _439 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _310.x) * _433;
    float _442 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _310.y) * _434;
    float _445 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _310.z) * _435;
    float _452 = ((_433 - _439) * (isnan(1.0) ? _3927 : (isnan(_3927) ? 1.0 : min(_3927, 1.0)))) + _439;
    float _453 = ((_434 - _442) * (isnan(1.0) ? _3938 : (isnan(_3938) ? 1.0 : min(_3938, 1.0)))) + _442;
    float _454 = ((_435 - _445) * (isnan(1.0) ? _3949 : (isnan(_3949) ? 1.0 : min(_3949, 1.0)))) + _445;
    vec4 _473 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _296) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _297) + cbTextureTilingScale._m0[14u].w));
    vec4 _493 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _296) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _297) + cbTextureTilingScale._m0[20u].w));
    vec4 _520 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _296) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _297) + cbTextureTilingScale._m0[4u].w));
    vec4 _537 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _539 = _537.x;
    float _540 = _537.y;
    float _541 = _537.z;
    float _550 = ((_520.z - _541) * _426) + _541;
    float _553 = ((((_520.x - _539) * _426) + _539) * 2.0) + (-1.0);
    float _554 = ((((_520.y - _540) * _426) + _540) * 2.0) + (-1.0);
    float _555 = dot(vec2(_553, _554), vec2(_553, _554));
    float _3971 = isnan(0.0) ? _555 : (isnan(_555) ? 0.0 : max(_555, 0.0));
    float _560 = sqrt(1.0 - (isnan(1.0) ? _3971 : (isnan(_3971) ? 1.0 : min(_3971, 1.0))));
    float _563 = _553 + ((((_493.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x);
    float _564 = _554 + ((((_493.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x);
    float _567 = fma(_560, _246, fma(_564, _253, _563 * _239));
    float _570 = fma(_560, _247, fma(_564, _254, _563 * _240));
    float _573 = fma(_560, _248, fma(_564, _255, _563 * _241));
    float _577 = inversesqrt(dot(vec3(_567, _570, _573), vec3(_567, _570, _573)));
    vec4 _593 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _621 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _296) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _297) + cbTextureTilingScale._m0[11u].w));
    float _623 = _621.x;
    float _624 = 1.0 - _623;
    float _630 = (cbMtdParam._m0[19u].x + dot(vec4(_577 * _567, _577 * _570, _577 * _573, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_623 - _624) * cbMtdParam._m0[24u].z) + _624) * cbMtdParam._m0[21u].z);
    float _3982 = isnan(0.0) ? _630 : (isnan(_630) ? 0.0 : max(_630, 0.0));
    float _631 = isnan(1.0) ? _3982 : (isnan(_3982) ? 1.0 : min(_3982, 1.0));
    float _633 = (-0.0) - cbMtdParam._m0[24u].y;
    float _635 = isnan(0.0) ? _633 : (isnan(_633) ? 0.0 : max(_633, 0.0));
    float _636 = isnan(1.0) ? _635 : (isnan(_635) ? 1.0 : min(_635, 1.0));
    float _643 = _631 - ((_631 * TEXCOORD_8.x) * _636);
    float _644 = _631 - ((_631 * TEXCOORD_8.y) * _636);
    float _645 = _631 - ((_631 * TEXCOORD_8.z) * _636);
    float _652 = (_643 * ((_473.x * cbMtdParam._m0[18u].x) - _452)) + _452;
    float _653 = (_644 * ((_473.y * cbMtdParam._m0[18u].y) - _453)) + _453;
    float _654 = (_645 * ((_473.z * cbMtdParam._m0[18u].z) - _454)) + _454;
    vec4 _666 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _296) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _297) + cbTextureTilingScale._m0[19u].w));
    float _668 = _666.x;
    float _669 = 1.0 - _668;
    float _695 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_668 - _669) * cbMtdParam._m0[24u].w) + _669) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4003 = isnan(0.0) ? _695 : (isnan(_695) ? 0.0 : max(_695, 0.0));
    float _696 = isnan(1.0) ? _4003 : (isnan(_4003) ? 1.0 : min(_4003, 1.0));
    float _704 = ((((cbMtdParam._m0[10u].x - _652) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _696) + _652;
    float _705 = ((((cbMtdParam._m0[10u].y - _653) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _696) + _653;
    float _706 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _654)) * _696) + _654;
    float _711 = (((_493.z - _550) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _550;
    vec4 _725 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _296) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _297) + cbTextureTilingScale._m0[15u].w));
    float _732 = (_725.x * 2.0) + (-1.0);
    float _733 = (_725.y * 2.0) + (-1.0);
    float _734 = dot(vec2(_732, _733), vec2(_732, _733));
    float _4014 = isnan(0.0) ? _734 : (isnan(_734) ? 0.0 : max(_734, 0.0));
    float _742 = ((_725.z - _711) * _643) + _711;
    float _745 = ((cbMtdParam._m0[23u].y - _742) * _696) + _742;
    vec4 _764 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _296) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _297) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _770 = (_764.x * 2.0) + (-1.0);
    float _771 = (_764.y * 2.0) + (-1.0);
    float _772 = dot(vec2(_770, _771), vec2(_770, _771));
    float _4025 = isnan(0.0) ? _772 : (isnan(_772) ? 0.0 : max(_772, 0.0));
    float _787 = ((sqrt(1.0 - (isnan(1.0) ? _4014 : (isnan(_4014) ? 1.0 : min(_4014, 1.0)))) - _560) * _645) + _560;
    float _790 = (((_732 - _563) * _643) + _563) + (cbMtdParam._m0[21u].x * _563);
    float _791 = (((_733 - _564) * _644) + _564) + (cbMtdParam._m0[21u].x * _564);
    float _802 = (((_770 - _790) + (_790 * cbMtdParam._m0[22u].z)) * _696) + _790;
    float _803 = (((_771 - _791) + (_791 * cbMtdParam._m0[22u].z)) * _696) + _791;
    float _804 = (_696 * (sqrt(1.0 - (isnan(1.0) ? _4025 : (isnan(_4025) ? 1.0 : min(_4025, 1.0)))) - _787)) + _787;
    float _806 = cbMtdParam._m0[22u].x + _593.w;
    float _809 = fma(_804, _246, fma(_803, _253, _802 * _239));
    float _812 = fma(_804, _247, fma(_803, _254, _802 * _240));
    float _815 = fma(_804, _248, fma(_803, _255, _802 * _241));
    float _819 = inversesqrt(dot(vec3(_809, _812, _815), vec3(_809, _812, _815)));
    float _820 = _819 * _809;
    float _821 = _819 * _812;
    float _822 = _819 * _815;
    float _4036 = isnan(0.0) ? _745 : (isnan(_745) ? 0.0 : max(_745, 0.0));
    float _823 = isnan(1.0) ? _4036 : (isnan(_4036) ? 1.0 : min(_4036, 1.0));
    float _4047 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
    float _4058 = isnan(0.0) ? _704 : (isnan(_704) ? 0.0 : max(_704, 0.0));
    float _4069 = isnan(0.0) ? _705 : (isnan(_705) ? 0.0 : max(_705, 0.0));
    float _4080 = isnan(0.0) ? _706 : (isnan(_706) ? 0.0 : max(_706, 0.0));
    float _841 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _882 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _892 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _882);
    float _893 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _882);
    float _894 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _882);
    float _898 = inversesqrt(dot(vec3(_892, _893, _894), vec3(_892, _893, _894)));
    float _899 = _892 * _898;
    float _900 = _893 * _898;
    float _901 = _894 * _898;
    float _907 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _908 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _926 = fma(_822, cbSceneParam._m0[5u].z, fma(_821, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _820));
    float _929 = fma(_822, cbSceneParam._m0[6u].z, fma(_821, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _820));
    float _932 = fma(_822, cbSceneParam._m0[7u].z, fma(_821, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _820));
    uint _946 = (_277 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _952 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4058 : (isnan(_4058) ? 1.0 : min(_4058, 1.0)))) * cbInstanceData._m0[_946].x;
    float _953 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4069 : (isnan(_4069) ? 1.0 : min(_4069, 1.0)))) * cbInstanceData._m0[_946].y;
    float _954 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0)))) * cbInstanceData._m0[_946].z;
    float _4091 = isnan(0.0) ? _952 : (isnan(_952) ? 0.0 : max(_952, 0.0));
    float _955 = isnan(1.0) ? _4091 : (isnan(_4091) ? 1.0 : min(_4091, 1.0));
    float _4102 = isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0));
    float _956 = isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0));
    float _4113 = isnan(0.0) ? _954 : (isnan(_954) ? 0.0 : max(_954, 0.0));
    float _957 = isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0));
    vec4 _966 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _907, cbSceneParam._m0[86u].y * _908));
    float _970 = ((isnan(1.0) ? _4047 : (isnan(_4047) ? 1.0 : min(_4047, 1.0))) * TEXCOORD_5.w) * _966.x;
    float _971 = dot(vec3(_820, _821, _822), vec3(_899, _900, _901));
    float _974 = _971 * 2.0;
    float _978 = (_974 * _820) - _899;
    float _979 = (_974 * _821) - _900;
    float _980 = (_974 * _822) - _901;
    float _984 = abs(dot(vec3(_899, _900, _901), vec3(_820, _821, _822)));
    float _4124 = isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0));
    float _986 = sqrt(_823);
    float _999 = exp2((_986 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_986 * 3.0));
    float _1031 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1035 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1039 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1340;
    float _1342;
    float _1343;
    float _1344;
    float _1345;
    float _1346;
    float _1347;
    float _1348;
    float _1349;
    float _1350;
    float _1351;
    float _1352;
    float _1353;
    float _1354;
    float _1355;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1065 = fma(_1039, cbModelParam._m0[26u].z, fma(_1035, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1031));
        float _1069 = fma(_1039, cbModelParam._m0[27u].z, fma(_1035, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1031));
        float _1073 = fma(_1039, cbModelParam._m0[28u].z, fma(_1035, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1031));
        float _1098 = _1031 + _820;
        float _1099 = _1035 + _821;
        float _1100 = _1039 + _822;
        float _1110 = fma(_1100, cbModelParam._m0[26u].z, fma(_1099, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1098)) - _1065;
        float _1111 = fma(_1100, cbModelParam._m0[27u].z, fma(_1099, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1098)) - _1069;
        float _1112 = fma(_1100, cbModelParam._m0[28u].z, fma(_1099, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1098)) - _1073;
        float _1116 = inversesqrt(dot(vec3(_1110, _1111, _1112), vec3(_1110, _1111, _1112)));
        float _1129 = ((_1116 * _1110) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1065 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1130 = ((_1116 * _1111) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1069 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1131 = ((_1116 * _1112) / cbModelParam._m0[34u].z) + ((((((_1073 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1134 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1129, _1130, _1131), 0.0);
        vec4 _1141 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1129, _1130, _1131), 0.0);
        vec4 _1148 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1129, _1130, _1131), 0.0);
        vec4 _1155 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1129, _1130, _1131), 0.0);
        float _1168 = exp2((_1134.w + (-0.5)) * 20.0) * 2.0;
        float _1169 = _1168 * (_1134.x + (-0.5));
        float _1170 = _1168 * (_1134.y + (-0.5));
        float _1171 = _1168 * (_1134.z + (-0.5));
        float _1178 = exp2((_1141.w + (-0.5)) * 20.0) * 2.0;
        float _1179 = _1178 * (_1141.x + (-0.5));
        float _1180 = _1178 * (_1141.y + (-0.5));
        float _1181 = _1178 * (_1141.z + (-0.5));
        float _1188 = exp2((_1148.w + (-0.5)) * 20.0) * 2.0;
        float _1189 = _1188 * (_1148.x + (-0.5));
        float _1190 = _1188 * (_1148.y + (-0.5));
        float _1191 = _1188 * (_1148.z + (-0.5));
        float _1198 = exp2((_1155.w + (-0.5)) * 20.0) * 2.0;
        float _1199 = _1198 * (_1155.x + (-0.5));
        float _1200 = _1198 * (_1155.y + (-0.5));
        float _1201 = _1198 * (_1155.z + (-0.5));
        float _1202 = isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0));
        float _1203 = isnan(0.0) ? _1200 : (isnan(_1200) ? 0.0 : max(_1200, 0.0));
        float _1204 = isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0));
        float _1205 = _1169 * 0.5;
        float _1206 = _1179 * 0.5;
        float _1207 = _1189 * 0.5;
        float _1208 = dot(vec3(_1205, _1206, _1207), vec3(_1205, _1206, _1207));
        float _1213 = (_1208 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1208);
        float _1222 = (dot(vec3(_820, _821, _822), vec3(_1213 * _1205, _1213 * _1206, _1213 * _1207)) + 1.0) * 0.5;
        float _4150 = isnan(0.0) ? _1222 : (isnan(_1222) ? 0.0 : max(_1222, 0.0));
        float _1232 = sqrt(((_1206 * _1206) + (_1205 * _1205)) + (_1207 * _1207)) / (_1202 + 9.9999997473787516355514526367188e-06);
        float _4161 = isnan(0.0) ? _1232 : (isnan(_1232) ? 0.0 : max(_1232, 0.0));
        float _1233 = isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0));
        float _1234 = _1233 * 2.0;
        float _1238 = (1.0 - _1233) / (_1233 + 1.0);
        float _4172 = isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0));
        float _1239 = isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0));
        float _1248 = ((((1.0 - _1239) * (_1234 + 2.0)) * exp2(log2(isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0))) * (_1234 + 1.0))) + _1239) * _1202;
        float _1249 = _1170 * 0.5;
        float _1250 = _1180 * 0.5;
        float _1251 = _1190 * 0.5;
        float _1252 = dot(vec3(_1249, _1250, _1251), vec3(_1249, _1250, _1251));
        float _1257 = (_1252 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1252);
        float _1265 = (dot(vec3(_820, _821, _822), vec3(_1257 * _1249, _1257 * _1250, _1257 * _1251)) + 1.0) * 0.5;
        float _4183 = isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0));
        float _1274 = sqrt(((_1250 * _1250) + (_1249 * _1249)) + (_1251 * _1251)) / (_1203 + 9.9999997473787516355514526367188e-06);
        float _4194 = isnan(0.0) ? _1274 : (isnan(_1274) ? 0.0 : max(_1274, 0.0));
        float _1275 = isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0));
        float _1276 = _1275 * 2.0;
        float _1280 = (1.0 - _1275) / (_1275 + 1.0);
        float _4205 = isnan(0.0) ? _1280 : (isnan(_1280) ? 0.0 : max(_1280, 0.0));
        float _1281 = isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0));
        float _1290 = ((((1.0 - _1281) * (_1276 + 2.0)) * exp2(log2(isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0))) * (_1276 + 1.0))) + _1281) * _1203;
        float _1291 = _1171 * 0.5;
        float _1292 = _1181 * 0.5;
        float _1293 = _1191 * 0.5;
        float _1294 = dot(vec3(_1291, _1292, _1293), vec3(_1291, _1292, _1293));
        float _1299 = (_1294 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1294);
        float _1307 = (dot(vec3(_820, _821, _822), vec3(_1299 * _1291, _1299 * _1292, _1299 * _1293)) + 1.0) * 0.5;
        float _4216 = isnan(0.0) ? _1307 : (isnan(_1307) ? 0.0 : max(_1307, 0.0));
        float _1316 = sqrt(((_1292 * _1292) + (_1291 * _1291)) + (_1293 * _1293)) / (_1204 + 9.9999997473787516355514526367188e-06);
        float _4227 = isnan(0.0) ? _1316 : (isnan(_1316) ? 0.0 : max(_1316, 0.0));
        float _1317 = isnan(1.0) ? _4227 : (isnan(_4227) ? 1.0 : min(_4227, 1.0));
        float _1318 = _1317 * 2.0;
        float _1322 = (1.0 - _1317) / (_1317 + 1.0);
        float _4238 = isnan(0.0) ? _1322 : (isnan(_1322) ? 0.0 : max(_1322, 0.0));
        float _1323 = isnan(1.0) ? _4238 : (isnan(_4238) ? 1.0 : min(_4238, 1.0));
        float _1332 = ((((1.0 - _1323) * (_1318 + 2.0)) * exp2(log2(isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0))) * (_1318 + 1.0))) + _1323) * _1204;
        _1340 = _1171;
        _1342 = _1170;
        _1343 = _1169;
        _1344 = _1181;
        _1345 = _1180;
        _1346 = _1179;
        _1347 = _1191;
        _1348 = _1190;
        _1349 = _1189;
        _1350 = _1204;
        _1351 = _1203;
        _1352 = _1202;
        _1353 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1248 : (isnan(_1248) ? 0.0 : max(_1248, 0.0)));
        _1354 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1290 : (isnan(_1290) ? 0.0 : max(_1290, 0.0)));
        _1355 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1332 : (isnan(_1332) ? 0.0 : max(_1332, 0.0)));
    }
    else
    {
        _1340 = _1341;
        _1342 = _1341;
        _1343 = _1341;
        _1344 = _1341;
        _1345 = _1341;
        _1346 = _1341;
        _1347 = _1341;
        _1348 = _1341;
        _1349 = _1341;
        _1350 = _1341;
        _1351 = _1341;
        _1352 = _1341;
        _1353 = 0.0;
        _1354 = 0.0;
        _1355 = 0.0;
    }
    float _1649;
    float _1650;
    float _1651;
    float _1652;
    float _1653;
    float _1654;
    float _1655;
    float _1656;
    float _1657;
    float _1658;
    float _1659;
    float _1660;
    float _1661;
    float _1662;
    float _1663;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1380 = fma(_1039, cbModelParam._m0[30u].z, fma(_1035, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1031));
        float _1384 = fma(_1039, cbModelParam._m0[31u].z, fma(_1035, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1031));
        float _1388 = fma(_1039, cbModelParam._m0[32u].z, fma(_1035, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1031));
        float _1411 = _1031 + _820;
        float _1412 = _1035 + _821;
        float _1413 = _1039 + _822;
        float _1423 = fma(_1413, cbModelParam._m0[30u].z, fma(_1412, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1411)) - _1380;
        float _1424 = fma(_1413, cbModelParam._m0[31u].z, fma(_1412, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1411)) - _1384;
        float _1425 = fma(_1413, cbModelParam._m0[32u].z, fma(_1412, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1411)) - _1388;
        float _1429 = inversesqrt(dot(vec3(_1423, _1424, _1425), vec3(_1423, _1424, _1425)));
        float _1442 = ((_1429 * _1423) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1380 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1443 = ((_1429 * _1424) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1384 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1444 = ((_1429 * _1425) / cbModelParam._m0[35u].z) + ((((((_1388 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1446 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1442, _1443, _1444), 0.0);
        vec4 _1453 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1442, _1443, _1444), 0.0);
        vec4 _1460 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1442, _1443, _1444), 0.0);
        vec4 _1467 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1442, _1443, _1444), 0.0);
        float _1479 = exp2((_1446.w + (-0.5)) * 20.0) * 2.0;
        float _1480 = _1479 * (_1446.x + (-0.5));
        float _1481 = _1479 * (_1446.y + (-0.5));
        float _1482 = _1479 * (_1446.z + (-0.5));
        float _1489 = exp2((_1453.w + (-0.5)) * 20.0) * 2.0;
        float _1490 = _1489 * (_1453.x + (-0.5));
        float _1491 = _1489 * (_1453.y + (-0.5));
        float _1492 = _1489 * (_1453.z + (-0.5));
        float _1499 = exp2((_1460.w + (-0.5)) * 20.0) * 2.0;
        float _1500 = _1499 * (_1460.x + (-0.5));
        float _1501 = _1499 * (_1460.y + (-0.5));
        float _1502 = _1499 * (_1460.z + (-0.5));
        float _1509 = exp2((_1467.w + (-0.5)) * 20.0) * 2.0;
        float _1510 = _1509 * (_1467.x + (-0.5));
        float _1511 = _1509 * (_1467.y + (-0.5));
        float _1512 = _1509 * (_1467.z + (-0.5));
        float _1513 = isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0));
        float _1514 = isnan(0.0) ? _1511 : (isnan(_1511) ? 0.0 : max(_1511, 0.0));
        float _1515 = isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0));
        float _1516 = _1480 * 0.5;
        float _1517 = _1490 * 0.5;
        float _1518 = _1500 * 0.5;
        float _1519 = dot(vec3(_1516, _1517, _1518), vec3(_1516, _1517, _1518));
        float _1524 = (_1519 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1519);
        float _1532 = (dot(vec3(_820, _821, _822), vec3(_1524 * _1516, _1524 * _1517, _1524 * _1518)) + 1.0) * 0.5;
        float _4279 = isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0));
        float _1541 = sqrt(((_1517 * _1517) + (_1516 * _1516)) + (_1518 * _1518)) / (_1513 + 9.9999997473787516355514526367188e-06);
        float _4290 = isnan(0.0) ? _1541 : (isnan(_1541) ? 0.0 : max(_1541, 0.0));
        float _1542 = isnan(1.0) ? _4290 : (isnan(_4290) ? 1.0 : min(_4290, 1.0));
        float _1543 = _1542 * 2.0;
        float _1547 = (1.0 - _1542) / (_1542 + 1.0);
        float _4301 = isnan(0.0) ? _1547 : (isnan(_1547) ? 0.0 : max(_1547, 0.0));
        float _1548 = isnan(1.0) ? _4301 : (isnan(_4301) ? 1.0 : min(_4301, 1.0));
        float _1557 = ((((1.0 - _1548) * (_1543 + 2.0)) * exp2(log2(isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0))) * (_1543 + 1.0))) + _1548) * _1513;
        float _1558 = _1481 * 0.5;
        float _1559 = _1491 * 0.5;
        float _1560 = _1501 * 0.5;
        float _1561 = dot(vec3(_1558, _1559, _1560), vec3(_1558, _1559, _1560));
        float _1566 = (_1561 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1561);
        float _1574 = (dot(vec3(_820, _821, _822), vec3(_1566 * _1558, _1566 * _1559, _1566 * _1560)) + 1.0) * 0.5;
        float _4312 = isnan(0.0) ? _1574 : (isnan(_1574) ? 0.0 : max(_1574, 0.0));
        float _1583 = sqrt(((_1559 * _1559) + (_1558 * _1558)) + (_1560 * _1560)) / (_1514 + 9.9999997473787516355514526367188e-06);
        float _4323 = isnan(0.0) ? _1583 : (isnan(_1583) ? 0.0 : max(_1583, 0.0));
        float _1584 = isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0));
        float _1585 = _1584 * 2.0;
        float _1589 = (1.0 - _1584) / (_1584 + 1.0);
        float _4334 = isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0));
        float _1590 = isnan(1.0) ? _4334 : (isnan(_4334) ? 1.0 : min(_4334, 1.0));
        float _1599 = ((((1.0 - _1590) * (_1585 + 2.0)) * exp2(log2(isnan(1.0) ? _4312 : (isnan(_4312) ? 1.0 : min(_4312, 1.0))) * (_1585 + 1.0))) + _1590) * _1514;
        float _1600 = _1482 * 0.5;
        float _1601 = _1492 * 0.5;
        float _1602 = _1502 * 0.5;
        float _1603 = dot(vec3(_1600, _1601, _1602), vec3(_1600, _1601, _1602));
        float _1608 = (_1603 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1603);
        float _1616 = (dot(vec3(_820, _821, _822), vec3(_1608 * _1600, _1608 * _1601, _1608 * _1602)) + 1.0) * 0.5;
        float _4345 = isnan(0.0) ? _1616 : (isnan(_1616) ? 0.0 : max(_1616, 0.0));
        float _1625 = sqrt(((_1601 * _1601) + (_1600 * _1600)) + (_1602 * _1602)) / (_1515 + 9.9999997473787516355514526367188e-06);
        float _4356 = isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0));
        float _1626 = isnan(1.0) ? _4356 : (isnan(_4356) ? 1.0 : min(_4356, 1.0));
        float _1627 = _1626 * 2.0;
        float _1631 = (1.0 - _1626) / (_1626 + 1.0);
        float _4367 = isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0));
        float _1632 = isnan(1.0) ? _4367 : (isnan(_4367) ? 1.0 : min(_4367, 1.0));
        float _1641 = ((((1.0 - _1632) * (_1627 + 2.0)) * exp2(log2(isnan(1.0) ? _4345 : (isnan(_4345) ? 1.0 : min(_4345, 1.0))) * (_1627 + 1.0))) + _1632) * _1515;
        _1649 = _1482;
        _1650 = _1481;
        _1651 = _1480;
        _1652 = _1492;
        _1653 = _1491;
        _1654 = _1490;
        _1655 = _1502;
        _1656 = _1501;
        _1657 = _1500;
        _1658 = _1515;
        _1659 = _1514;
        _1660 = _1513;
        _1661 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1557 : (isnan(_1557) ? 0.0 : max(_1557, 0.0)));
        _1662 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1599 : (isnan(_1599) ? 0.0 : max(_1599, 0.0)));
        _1663 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0)));
    }
    else
    {
        _1649 = _1341;
        _1650 = _1341;
        _1651 = _1341;
        _1652 = _1341;
        _1653 = _1341;
        _1654 = _1341;
        _1655 = _1341;
        _1656 = _1341;
        _1657 = _1341;
        _1658 = _1341;
        _1659 = _1341;
        _1660 = _1341;
        _1661 = 0.0;
        _1662 = 0.0;
        _1663 = 0.0;
    }
    float _1673 = (cbModelParam._m0[1u].x * (_1661 - _1353)) + _1353;
    float _1674 = (cbModelParam._m0[1u].x * (_1662 - _1354)) + _1354;
    float _1675 = (cbModelParam._m0[1u].x * (_1663 - _1355)) + _1355;
    float _1696 = fma(_1675, cbSceneParam._m0[89u].z, fma(_1674, cbSceneParam._m0[89u].y, _1673 * cbSceneParam._m0[89u].x));
    float _1699 = fma(_1675, cbSceneParam._m0[90u].z, fma(_1674, cbSceneParam._m0[90u].y, _1673 * cbSceneParam._m0[90u].x));
    float _1702 = fma(_1675, cbSceneParam._m0[91u].z, fma(_1674, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1673));
    float _1717 = _978 * 0.5;
    float _1718 = _979 * 0.5;
    float _1719 = _980 * 0.5;
    float _1720 = dot(vec4(_1717, _1718, _1719, 1.0), vec4(_1651, _1654, _1657, _1660));
    float _1723 = dot(vec4(_1717, _1718, _1719, 1.0), vec4(_1650, _1653, _1656, _1659));
    float _1726 = dot(vec4(_1717, _1718, _1719, 1.0), vec4(_1649, _1652, _1655, _1658));
    float _1760;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1733 = dot(vec4(_1717, _1718, _1719, 1.0), vec4(_1340, _1344, _1347, _1350));
        float _1737 = dot(vec4(_1717, _1718, _1719, 1.0), vec4(_1342, _1345, _1348, _1351));
        float _1741 = dot(vec4(_1717, _1718, _1719, 1.0), vec4(_1343, _1346, _1349, _1352));
        float _1748 = dot(vec4(cbModelParam._m0[39u]), vec4(_1717, _1718, _1719, 1.0));
        _1760 = dot(vec3(isnan(0.0) ? _1741 : (isnan(_1741) ? 0.0 : max(_1741, 0.0)), isnan(0.0) ? _1737 : (isnan(_1737) ? 0.0 : max(_1737, 0.0)), isnan(0.0) ? _1733 : (isnan(_1733) ? 0.0 : max(_1733, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1748) ? 0.0 : (isnan(0.0) ? _1748 : max(0.0, _1748))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1760 = 1.0;
    }
    float _1771;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1762 = dot(vec4(cbModelParam._m0[40u]), vec4(_1717, _1718, _1719, 1.0));
        _1771 = dot(vec3(isnan(0.0) ? _1720 : (isnan(_1720) ? 0.0 : max(_1720, 0.0)), isnan(0.0) ? _1723 : (isnan(_1723) ? 0.0 : max(_1723, 0.0)), isnan(0.0) ? _1726 : (isnan(_1726) ? 0.0 : max(_1726, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1762) ? 0.0 : (isnan(0.0) ? _1762 : max(0.0, _1762))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1771 = 1.0;
    }
    float _1775 = (_1771 * cbModelParam._m0[1u].x) + (_1760 * (1.0 - cbModelParam._m0[1u].x));
    float _1785 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _823);
    float _1786 = isnan(_1785) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1785 : min(cbModelParam._m0[25u].z, _1785));
    float _1866;
    float _1868;
    float _1870;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1833 = fma(_1039, cbModelParam._m0[13u].z, fma(_1035, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1031)) + cbModelParam._m0[13u].w;
        float _1837 = fma(_1039, cbModelParam._m0[14u].z, fma(_1035, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1031)) + cbModelParam._m0[14u].w;
        float _1841 = fma(_1039, cbModelParam._m0[15u].z, fma(_1035, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1031)) + cbModelParam._m0[15u].w;
        float _1844 = fma(_980, cbModelParam._m0[13u].z, fma(_979, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _978));
        float _1847 = fma(_980, cbModelParam._m0[14u].z, fma(_979, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _978));
        float _1850 = fma(_980, cbModelParam._m0[15u].z, fma(_979, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _978));
        float _1878;
        if (_1844 > 0.0)
        {
            _1878 = abs((1.0 - _1833) / _1844);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1844 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1833 + 1.0) / _1844);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1878 = frontier_phi_14_12_ladder;
        }
        float _2047;
        if (_1847 > 0.0)
        {
            _2047 = abs((1.0 - _1837) / _1847);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1847 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1837 + 1.0) / _1847);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2047 = frontier_phi_23_19_ladder;
        }
        float _2342;
        if (_1850 > 0.0)
        {
            _2342 = abs((1.0 - _1841) / _1850);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1850 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1841 + 1.0) / _1850);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2342 = frontier_phi_35_30_ladder;
        }
        float _2344 = isnan(_2047) ? _1878 : (isnan(_1878) ? _2047 : min(_1878, _2047));
        float _2345 = isnan(_2342) ? _2344 : (isnan(_2344) ? _2342 : min(_2344, _2342));
        float _2349 = (_2345 * _1844) + _1833;
        float _2350 = (_2345 * _1847) + _1837;
        float _2351 = (_2345 * _1850) + _1841;
        float _2352 = _2345 * 9.9999997473787516355514526367188e-05;
        float _2354 = (-1.0) - _2352;
        float _2356 = _2352 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2351 > _2356) || ((_2351 < _2354) || ((_2350 > _2356) || ((_2350 < _2354) || ((_2349 < _2354) || (_2349 > _2356))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2496 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2351, cbModelParam._m0[9u].z, fma(_2350, cbModelParam._m0[9u].y, _2349 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2351, cbModelParam._m0[10u].z, fma(_2350, cbModelParam._m0[10u].y, _2349 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2351, cbModelParam._m0[11u].z, fma(_2350, cbModelParam._m0[11u].y, _2349 * cbModelParam._m0[11u].x))), _1786);
            frontier_phi_13_35_ladder = _2496.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2496.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2496.x * cbModelParam._m0[1u].y;
        }
        _1866 = frontier_phi_13_35_ladder_2;
        _1868 = frontier_phi_13_35_ladder_1;
        _1870 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1854 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_978, _979, _980), _1786);
        _1866 = _1854.x * cbModelParam._m0[1u].y;
        _1868 = _1854.y * cbModelParam._m0[1u].y;
        _1870 = _1854.z * cbModelParam._m0[1u].y;
    }
    float _1874 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _823);
    float _1875 = isnan(_1874) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1874 : min(cbModelParam._m0[25u].w, _1874));
    float _1964;
    float _1966;
    float _1968;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1928 = fma(_1039, cbModelParam._m0[21u].z, fma(_1035, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1031)) + cbModelParam._m0[21u].w;
        float _1932 = fma(_1039, cbModelParam._m0[22u].z, fma(_1035, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1031)) + cbModelParam._m0[22u].w;
        float _1936 = fma(_1039, cbModelParam._m0[23u].z, fma(_1035, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1031)) + cbModelParam._m0[23u].w;
        float _1939 = fma(_980, cbModelParam._m0[21u].z, fma(_979, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _978));
        float _1942 = fma(_980, cbModelParam._m0[22u].z, fma(_979, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _978));
        float _1945 = fma(_980, cbModelParam._m0[23u].z, fma(_979, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _978));
        float _2052;
        if (_1939 > 0.0)
        {
            _2052 = abs((1.0 - _1928) / _1939);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1939 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1928 + 1.0) / _1939);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2052 = frontier_phi_25_21_ladder;
        }
        float _2369;
        if (_1942 > 0.0)
        {
            _2369 = abs((1.0 - _1932) / _1942);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1942 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1932 + 1.0) / _1942);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2369 = frontier_phi_37_32_ladder;
        }
        float _2696;
        if (_1945 > 0.0)
        {
            _2696 = abs((1.0 - _1936) / _1945);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1945 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1936 + 1.0) / _1945);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2696 = frontier_phi_47_44_ladder;
        }
        float _2698 = isnan(_2369) ? _2052 : (isnan(_2052) ? _2369 : min(_2052, _2369));
        float _2699 = isnan(_2696) ? _2698 : (isnan(_2698) ? _2696 : min(_2698, _2696));
        float _2703 = (_2699 * _1939) + _1928;
        float _2704 = (_2699 * _1942) + _1932;
        float _2705 = (_2699 * _1945) + _1936;
        float _2706 = _2699 * 9.9999997473787516355514526367188e-05;
        float _2707 = (-1.0) - _2706;
        float _2709 = _2706 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2705 > _2709) || ((_2705 < _2707) || ((_2704 > _2709) || ((_2704 < _2707) || ((_2703 < _2707) || (_2703 > _2709))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2823 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2705, cbModelParam._m0[17u].z, fma(_2704, cbModelParam._m0[17u].y, _2703 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2705, cbModelParam._m0[18u].z, fma(_2704, cbModelParam._m0[18u].y, _2703 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2705, cbModelParam._m0[19u].z, fma(_2704, cbModelParam._m0[19u].y, _2703 * cbModelParam._m0[19u].x))), _1875);
            frontier_phi_22_47_ladder = _2823.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2823.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2823.x * cbModelParam._m0[1u].z;
        }
        _1964 = frontier_phi_22_47_ladder_2;
        _1966 = frontier_phi_22_47_ladder_1;
        _1968 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1948 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_978, _979, _980), _1875);
        _1964 = _1948.x * cbModelParam._m0[1u].z;
        _1966 = _1948.y * cbModelParam._m0[1u].z;
        _1968 = _1948.z * cbModelParam._m0[1u].z;
    }
    float _1980 = ((((1.0 - _999) * ((_986 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_999 * _986)) * _970;
    float _1981 = _1980 * ((cbModelParam._m0[1u].w * (_1964 - _1866)) + _1866);
    float _1982 = _1980 * ((cbModelParam._m0[1u].w * (_1966 - _1868)) + _1868);
    float _1983 = _1980 * ((cbModelParam._m0[1u].w * (_1968 - _1870)) + _1870);
    float _1986 = fma(_1983, cbSceneParam._m0[89u].z, fma(_1982, cbSceneParam._m0[89u].y, _1981 * cbSceneParam._m0[89u].x));
    float _1989 = fma(_1983, cbSceneParam._m0[90u].z, fma(_1982, cbSceneParam._m0[90u].y, _1981 * cbSceneParam._m0[90u].x));
    float _1992 = fma(_1983, cbSceneParam._m0[91u].z, fma(_1982, cbSceneParam._m0[91u].y, _1981 * cbSceneParam._m0[91u].x));
    float _2026 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2030 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2034 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2038 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2039 = _2026 / _2038;
    float _2040 = _2030 / _2038;
    float _2041 = _2034 / _2038;
    float _2188;
    float _2189;
    float _2190;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2068 = ((uint(_2041 > cbSceneParam._m0[59u].y) + uint(_2041 > cbSceneParam._m0[59u].x)) + uint(_2041 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2069 = _2068 + 43u;
        uint _2077 = _2068 + 44u;
        uint _2085 = _2068 + 45u;
        uint _2093 = _2068 + 46u;
        float _2104 = fma(_2038, cbSceneParam._m0[_2069].w, fma(_2034, cbSceneParam._m0[_2069].z, fma(_2030, cbSceneParam._m0[_2069].y, _2026 * cbSceneParam._m0[_2069].x)));
        float _2108 = fma(_2038, cbSceneParam._m0[_2077].w, fma(_2034, cbSceneParam._m0[_2077].z, fma(_2030, cbSceneParam._m0[_2077].y, _2026 * cbSceneParam._m0[_2077].x)));
        float _2116 = fma(_2038, cbSceneParam._m0[_2093].w, fma(_2034, cbSceneParam._m0[_2093].z, fma(_2030, cbSceneParam._m0[_2093].y, _2026 * cbSceneParam._m0[_2093].x)));
        float _2121 = cbSceneParam._m0[33u].z * _2116;
        float _2123 = cbSceneParam._m0[33u].w * _2116;
        float _2126 = fma(_2038, cbSceneParam._m0[_2085].w, fma(_2034, cbSceneParam._m0[_2085].z, fma(_2030, cbSceneParam._m0[_2085].y, _2026 * cbSceneParam._m0[_2085].x))) / _2116;
        float _2174 = (cbSceneParam._m0[33u].x - sqrt(((_2040 * _2040) + (_2039 * _2039)) + (_2041 * _2041))) * cbSceneParam._m0[33u].y;
        float _4493 = isnan(0.0) ? _2174 : (isnan(_2174) ? 0.0 : max(_2174, 0.0));
        float _2181 = (isnan(1.0) ? _4493 : (isnan(_4493) ? 1.0 : min(_4493, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2121 + _2104) / _2116, (_2123 + _2108) / _2116), _2126), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2123 + _2104) / _2116, (_2108 - _2121) / _2116), _2126), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2104 - _2121) / _2116, (_2108 - _2123) / _2116), _2126), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2104 - _2123) / _2116, (_2121 + _2108) / _2116), _2126), 0.0)).x), vec4(0.25)));
        _2188 = 1.0 - (_2181 * cbSceneParam._m0[34u].x);
        _2189 = 1.0 - (_2181 * cbSceneParam._m0[34u].y);
        _2190 = 1.0 - (_2181 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2188 = 1.0;
        _2189 = 1.0;
        _2190 = 1.0;
    }
    float _2254;
    float _2256;
    float _2258;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2242 = fma(_2038, cbSceneParam._m0[63u].w, fma(_2034, cbSceneParam._m0[63u].z, fma(_2030, cbSceneParam._m0[63u].y, _2026 * cbSceneParam._m0[63u].x)));
        float _2243 = fma(_2038, cbSceneParam._m0[60u].w, fma(_2034, cbSceneParam._m0[60u].z, fma(_2030, cbSceneParam._m0[60u].y, _2026 * cbSceneParam._m0[60u].x))) / _2242;
        float _2244 = fma(_2038, cbSceneParam._m0[61u].w, fma(_2034, cbSceneParam._m0[61u].z, fma(_2030, cbSceneParam._m0[61u].y, _2026 * cbSceneParam._m0[61u].x))) / _2242;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2243 >= cbSceneParam._m0[64u].x) && (_2244 >= cbSceneParam._m0[64u].y)) && (_2243 <= cbSceneParam._m0[64u].z)) && (_2244 <= cbSceneParam._m0[64u].w))
        {
            float _2382 = fma(_2038, cbSceneParam._m0[62u].w, fma(_2034, cbSceneParam._m0[62u].z, fma(_2030, cbSceneParam._m0[62u].y, _2026 * cbSceneParam._m0[62u].x))) / _2242;
            float _2386 = isnan(cbSceneParam._m0[41u].w) ? _2382 : (isnan(_2382) ? cbSceneParam._m0[41u].w : max(_2382, cbSceneParam._m0[41u].w));
            float _2429 = (cbSceneParam._m0[33u].x - sqrt(((_2040 * _2040) + (_2039 * _2039)) + (_2041 * _2041))) * cbSceneParam._m0[33u].y;
            float _4509 = isnan(0.0) ? _2429 : (isnan(_2429) ? 0.0 : max(_2429, 0.0));
            float _2436 = (isnan(1.0) ? _4509 : (isnan(_4509) ? 1.0 : min(_4509, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2243, cbSceneParam._m0[33u].w + _2244), _2386), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2243, _2244 - cbSceneParam._m0[33u].z), _2386), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2243 - cbSceneParam._m0[33u].z, _2244 - cbSceneParam._m0[33u].w), _2386), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2243 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2244), _2386), 0.0)).x), vec4(0.25)));
            float _2440 = 1.0 - (_2436 * cbSceneParam._m0[34u].x);
            float _2441 = 1.0 - (_2436 * cbSceneParam._m0[34u].y);
            float _2442 = 1.0 - (_2436 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2442) ? _2190 : (isnan(_2190) ? _2442 : min(_2190, _2442));
            frontier_phi_34_33_ladder_1 = isnan(_2441) ? _2189 : (isnan(_2189) ? _2441 : min(_2189, _2441));
            frontier_phi_34_33_ladder_2 = isnan(_2440) ? _2188 : (isnan(_2188) ? _2440 : min(_2188, _2440));
        }
        else
        {
            frontier_phi_34_33_ladder = _2190;
            frontier_phi_34_33_ladder_1 = _2189;
            frontier_phi_34_33_ladder_2 = _2188;
        }
        _2254 = frontier_phi_34_33_ladder_2;
        _2256 = frontier_phi_34_33_ladder_1;
        _2258 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2254 = _2188;
        _2256 = _2189;
        _2258 = _2190;
    }
    uvec4 _2263 = floatBitsToUint(cbInstanceData._m0[_277 + 5u]);
    uint _2265 = _2263.x * 14u;
    uint _2266 = _2265 + 13u;
    float _2273 = _970 + (-1.0);
    float _2278 = (cbLight._m0[_2266].x * _2273) + 1.0;
    float _2279 = (cbLight._m0[_2266].y * _2273) + 1.0;
    float _2280 = (cbLight._m0[_2266].z * _2273) + 1.0;
    float _2281 = (cbLight._m0[_2266].w * _2273) + 1.0;
    uint _2282 = _2265 + 5u;
    float _2288 = isnan(1.0) ? _2279 : (isnan(_2279) ? 1.0 : min(_2279, 1.0));
    uint _2292 = _2265 + 4u;
    float _2301 = isnan(1.0) ? _2278 : (isnan(_2278) ? 1.0 : min(_2278, 1.0));
    uint _2305 = _2265 | 1u;
    float _2316 = dot(vec3(cbLight._m0[_2265].xyz), vec3(_820, _821, _822));
    float _2319 = dot(vec3(cbLight._m0[_2305].xyz), vec3(_820, _821, _822));
    float _4545 = isnan(0.0) ? _2316 : (isnan(_2316) ? 0.0 : max(_2316, 0.0));
    float _4556 = isnan(0.0) ? _2319 : (isnan(_2319) ? 0.0 : max(_2319, 0.0));
    float _2324 = (isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0))) * 0.3183098733425140380859375;
    float _2326 = (isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0))) * 0.3183098733425140380859375;
    float _2333 = ((cbLight._m0[_2282].x * _2288) * _2326) + (((cbLight._m0[_2292].x * _2254) * _2301) * _2324);
    float _2334 = ((_2288 * cbLight._m0[_2282].y) * _2326) + (((cbLight._m0[_2292].y * _2256) * _2301) * _2324);
    float _2335 = ((_2288 * cbLight._m0[_2282].z) * _2326) + (((cbLight._m0[_2292].z * _2258) * _2301) * _2324);
    uvec4 _2339 = floatBitsToUint(cbLight._m0[_2265 + 12u]);
    bool _2341 = _2339.x == 0u;
    float _2443;
    float _2445;
    float _2447;
    if (_2341)
    {
        _2443 = _2333;
        _2445 = _2334;
        _2447 = _2335;
    }
    else
    {
        uint _2451 = _2265 + 6u;
        float _2467 = (dot(vec3(cbLight._m0[_2265 + 2u].xyz), vec3(_820, _821, _822)) * 0.5) + 0.5;
        float _2468 = _2467 * _2467;
        float _4567 = isnan(0.0) ? _2468 : (isnan(_2468) ? 0.0 : max(_2468, 0.0));
        float _2469 = isnan(1.0) ? _4567 : (isnan(_4567) ? 1.0 : min(_4567, 1.0));
        float _2470 = isnan(1.0) ? _2280 : (isnan(_2280) ? 1.0 : min(_2280, 1.0));
        _2443 = (((cbLight._m0[_2451].x * 0.3183098733425140380859375) * _2469) * _2470) + _2333;
        _2445 = (((cbLight._m0[_2451].y * 0.3183098733425140380859375) * _2469) * _2470) + _2334;
        _2447 = (((cbLight._m0[_2451].z * 0.3183098733425140380859375) * _2469) * _2470) + _2335;
    }
    bool _2450 = _2339.y == 0u;
    float _2505;
    float _2507;
    float _2509;
    if (_2450)
    {
        _2505 = _2443;
        _2507 = _2445;
        _2509 = _2447;
    }
    else
    {
        uint _2667 = _2265 + 7u;
        float _2683 = (dot(vec3(cbLight._m0[_2265 + 3u].xyz), vec3(_820, _821, _822)) * 0.5) + 0.5;
        float _2684 = _2683 * _2683;
        float _4583 = isnan(0.0) ? _2684 : (isnan(_2684) ? 0.0 : max(_2684, 0.0));
        float _2685 = isnan(1.0) ? _4583 : (isnan(_4583) ? 1.0 : min(_4583, 1.0));
        float _2686 = isnan(1.0) ? _2281 : (isnan(_2281) ? 1.0 : min(_2281, 1.0));
        _2505 = (((cbLight._m0[_2667].x * 0.3183098733425140380859375) * _2685) * _2686) + _2443;
        _2507 = (((cbLight._m0[_2667].y * 0.3183098733425140380859375) * _2685) * _2686) + _2445;
        _2509 = (((cbLight._m0[_2667].z * 0.3183098733425140380859375) * _2685) * _2686) + _2447;
    }
    uint _2512 = _2265 + 8u;
    float _2525 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2265].w)) * _823) * 0.949999988079071044921875);
    float _2526 = _2525 * _2525;
    float _2527 = cbLight._m0[_2265].x + _899;
    float _2528 = cbLight._m0[_2265].y + _900;
    float _2529 = cbLight._m0[_2265].z + _901;
    float _2533 = inversesqrt(dot(vec3(_2527, _2528, _2529), vec3(_2527, _2528, _2529)));
    float _2534 = _2533 * _2527;
    float _2535 = _2533 * _2528;
    float _2536 = _2533 * _2529;
    float _2537 = dot(vec3(_820, _821, _822), vec3(cbLight._m0[_2265].xyz));
    float _4599 = isnan(0.0) ? _2537 : (isnan(_2537) ? 0.0 : max(_2537, 0.0));
    float _2540 = isnan(1.0) ? _4599 : (isnan(_4599) ? 1.0 : min(_4599, 1.0));
    float _4610 = isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0));
    float _2541 = isnan(1.0) ? _4610 : (isnan(_4610) ? 1.0 : min(_4610, 1.0));
    float _2542 = dot(vec3(_820, _821, _822), vec3(_2534, _2535, _2536));
    float _4621 = isnan(0.0) ? _2542 : (isnan(_2542) ? 0.0 : max(_2542, 0.0));
    float _2545 = isnan(1.0) ? _4621 : (isnan(_4621) ? 1.0 : min(_4621, 1.0));
    float _2546 = dot(vec3(cbLight._m0[_2265].xyz), vec3(_2534, _2535, _2536));
    float _4632 = isnan(0.0) ? _2546 : (isnan(_2546) ? 0.0 : max(_2546, 0.0));
    float _2550 = _2526 * _2526;
    float _2554 = ((_2545 * _2545) * (_2550 + (-1.0))) + 1.0;
    float _2565 = (exp2(log2(1.0 - (isnan(1.0) ? _4632 : (isnan(_4632) ? 1.0 : min(_4632, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2566 = 1.0 - _2526;
    float _2577 = (0.5 / (((_2541 * ((_2540 * _2566) + _2526)) + 9.9999999392252902907785028219223e-09) + (((_2541 * _2566) + _2526) * _2540))) * _2540;
    float _4643 = isnan(0.0) ? _2577 : (isnan(_2577) ? 0.0 : max(_2577, 0.0));
    float _2579 = (isnan(1.0) ? _4643 : (isnan(_4643) ? 1.0 : min(_4643, 1.0))) * (_2550 / ((_2554 * _2554) * 3.141590118408203125));
    uint _2593 = _2265 + 9u;
    float _2604 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2305].w)) * _823) * 0.949999988079071044921875);
    float _2605 = _2604 * _2604;
    float _2606 = cbLight._m0[_2305].x + _899;
    float _2607 = cbLight._m0[_2305].y + _900;
    float _2608 = cbLight._m0[_2305].z + _901;
    float _2612 = inversesqrt(dot(vec3(_2606, _2607, _2608), vec3(_2606, _2607, _2608)));
    float _2613 = _2612 * _2606;
    float _2614 = _2612 * _2607;
    float _2615 = _2612 * _2608;
    float _2616 = dot(vec3(_820, _821, _822), vec3(cbLight._m0[_2305].xyz));
    float _4654 = isnan(0.0) ? _2616 : (isnan(_2616) ? 0.0 : max(_2616, 0.0));
    float _2619 = isnan(1.0) ? _4654 : (isnan(_4654) ? 1.0 : min(_4654, 1.0));
    float _2620 = dot(vec3(_820, _821, _822), vec3(_2613, _2614, _2615));
    float _4665 = isnan(0.0) ? _2620 : (isnan(_2620) ? 0.0 : max(_2620, 0.0));
    float _2623 = isnan(1.0) ? _4665 : (isnan(_4665) ? 1.0 : min(_4665, 1.0));
    float _2624 = dot(vec3(cbLight._m0[_2305].xyz), vec3(_2613, _2614, _2615));
    float _4676 = isnan(0.0) ? _2624 : (isnan(_2624) ? 0.0 : max(_2624, 0.0));
    float _2628 = _2605 * _2605;
    float _2632 = ((_2623 * _2623) * (_2628 + (-1.0))) + 1.0;
    float _2641 = (exp2(log2(1.0 - (isnan(1.0) ? _4676 : (isnan(_4676) ? 1.0 : min(_4676, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2642 = 1.0 - _2605;
    float _2652 = (0.5 / (((_2541 * ((_2619 * _2642) + _2605)) + 9.9999999392252902907785028219223e-09) + (((_2541 * _2642) + _2605) * _2619))) * _2619;
    float _4687 = isnan(0.0) ? _2652 : (isnan(_2652) ? 0.0 : max(_2652, 0.0));
    float _2654 = (isnan(1.0) ? _4687 : (isnan(_4687) ? 1.0 : min(_4687, 1.0))) * (_2628 / ((_2632 * _2632) * 3.141590118408203125));
    float _2664 = (((_2641 * cbLight._m0[_2593].x) * _2654) * _2288) + ((((cbLight._m0[_2512].x * _2254) * _2565) * _2579) * _2301);
    float _2665 = (((_2641 * cbLight._m0[_2593].y) * _2654) * _2288) + ((((cbLight._m0[_2512].y * _2256) * _2565) * _2579) * _2301);
    float _2666 = (((_2641 * cbLight._m0[_2593].z) * _2654) * _2288) + ((((cbLight._m0[_2512].z * _2258) * _2565) * _2579) * _2301);
    float _2722;
    float _2724;
    float _2726;
    if (_2341)
    {
        _2722 = _2664;
        _2724 = _2665;
        _2726 = _2666;
    }
    else
    {
        uint _2728 = _2265 + 2u;
        uint _2732 = _2265 + 10u;
        float _2746 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2728].w)) * _823) * 0.949999988079071044921875);
        float _2747 = _2746 * _2746;
        float _2748 = cbLight._m0[_2728].x + _899;
        float _2749 = cbLight._m0[_2728].y + _900;
        float _2750 = cbLight._m0[_2728].z + _901;
        float _2754 = inversesqrt(dot(vec3(_2748, _2749, _2750), vec3(_2748, _2749, _2750)));
        float _2755 = _2754 * _2748;
        float _2756 = _2754 * _2749;
        float _2757 = _2754 * _2750;
        float _2758 = dot(vec3(_820, _821, _822), vec3(cbLight._m0[_2728].xyz));
        float _4698 = isnan(0.0) ? _2758 : (isnan(_2758) ? 0.0 : max(_2758, 0.0));
        float _2761 = isnan(1.0) ? _4698 : (isnan(_4698) ? 1.0 : min(_4698, 1.0));
        float _2762 = dot(vec3(_820, _821, _822), vec3(_2755, _2756, _2757));
        float _4709 = isnan(0.0) ? _2762 : (isnan(_2762) ? 0.0 : max(_2762, 0.0));
        float _2765 = isnan(1.0) ? _4709 : (isnan(_4709) ? 1.0 : min(_4709, 1.0));
        float _2766 = dot(vec3(cbLight._m0[_2728].xyz), vec3(_2755, _2756, _2757));
        float _4720 = isnan(0.0) ? _2766 : (isnan(_2766) ? 0.0 : max(_2766, 0.0));
        float _2770 = _2747 * _2747;
        float _2774 = ((_2765 * _2765) * (_2770 + (-1.0))) + 1.0;
        float _2783 = (exp2(log2(1.0 - (isnan(1.0) ? _4720 : (isnan(_4720) ? 1.0 : min(_4720, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2784 = 1.0 - _2747;
        float _2794 = (0.5 / (((_2541 * ((_2761 * _2784) + _2747)) + 9.9999999392252902907785028219223e-09) + (((_2541 * _2784) + _2747) * _2761))) * _2761;
        float _4731 = isnan(0.0) ? _2794 : (isnan(_2794) ? 0.0 : max(_2794, 0.0));
        float _2796 = (isnan(1.0) ? _4731 : (isnan(_4731) ? 1.0 : min(_4731, 1.0))) * (_2770 / ((_2774 * _2774) * 3.141590118408203125));
        float _2797 = isnan(1.0) ? _2280 : (isnan(_2280) ? 1.0 : min(_2280, 1.0));
        _2722 = (((_2783 * cbLight._m0[_2732].x) * _2796) * _2797) + _2664;
        _2724 = (((_2783 * cbLight._m0[_2732].y) * _2796) * _2797) + _2665;
        _2726 = (((_2783 * cbLight._m0[_2732].z) * _2796) * _2797) + _2666;
    }
    float _2828;
    float _2830;
    float _2832;
    if (_2450)
    {
        _2828 = _2722;
        _2830 = _2724;
        _2832 = _2726;
    }
    else
    {
        uint _2839 = _2265 + 3u;
        uint _2843 = _2265 + 11u;
        float _2857 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2839].w)) * _823) * 0.949999988079071044921875);
        float _2858 = _2857 * _2857;
        float _2859 = cbLight._m0[_2839].x + _899;
        float _2860 = cbLight._m0[_2839].y + _900;
        float _2861 = cbLight._m0[_2839].z + _901;
        float _2865 = inversesqrt(dot(vec3(_2859, _2860, _2861), vec3(_2859, _2860, _2861)));
        float _2866 = _2865 * _2859;
        float _2867 = _2865 * _2860;
        float _2868 = _2865 * _2861;
        float _2869 = dot(vec3(_820, _821, _822), vec3(cbLight._m0[_2839].xyz));
        float _4747 = isnan(0.0) ? _2869 : (isnan(_2869) ? 0.0 : max(_2869, 0.0));
        float _2872 = isnan(1.0) ? _4747 : (isnan(_4747) ? 1.0 : min(_4747, 1.0));
        float _2873 = dot(vec3(_820, _821, _822), vec3(_2866, _2867, _2868));
        float _4758 = isnan(0.0) ? _2873 : (isnan(_2873) ? 0.0 : max(_2873, 0.0));
        float _2876 = isnan(1.0) ? _4758 : (isnan(_4758) ? 1.0 : min(_4758, 1.0));
        float _2877 = dot(vec3(cbLight._m0[_2839].xyz), vec3(_2866, _2867, _2868));
        float _4769 = isnan(0.0) ? _2877 : (isnan(_2877) ? 0.0 : max(_2877, 0.0));
        float _2881 = _2858 * _2858;
        float _2885 = ((_2876 * _2876) * (_2881 + (-1.0))) + 1.0;
        float _2894 = (exp2(log2(1.0 - (isnan(1.0) ? _4769 : (isnan(_4769) ? 1.0 : min(_4769, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2895 = 1.0 - _2858;
        float _2905 = (0.5 / (((_2541 * ((_2872 * _2895) + _2858)) + 9.9999999392252902907785028219223e-09) + (((_2541 * _2895) + _2858) * _2872))) * _2872;
        float _4780 = isnan(0.0) ? _2905 : (isnan(_2905) ? 0.0 : max(_2905, 0.0));
        float _2907 = (isnan(1.0) ? _4780 : (isnan(_4780) ? 1.0 : min(_4780, 1.0))) * (_2881 / ((_2885 * _2885) * 3.141590118408203125));
        float _2908 = isnan(1.0) ? _2281 : (isnan(_2281) ? 1.0 : min(_2281, 1.0));
        _2828 = (((_2894 * cbLight._m0[_2843].x) * _2907) * _2908) + _2722;
        _2830 = (((_2894 * cbLight._m0[_2843].y) * _2907) * _2908) + _2724;
        _2832 = (((_2894 * cbLight._m0[_2843].z) * _2907) * _2908) + _2726;
    }
    float _2974;
    float _2976;
    float _2978;
    float _2980;
    float _2982;
    float _2984;
    if (_2263.y == 0u)
    {
        uvec4 _2929 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2930 = _2929.x;
        uint _2941 = uint((float(_2929.y) * floor(float(uint(cbSceneParam._m0[85u].y * _908) / _2930))) + floor(float(uint(cbSceneParam._m0[85u].x * _907) / _2930)));
        float _2951 = (log2(_2041 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2952 = isnan(0.0) ? _2951 : (isnan(_2951) ? 0.0 : max(_2951, 0.0));
        uint _2955 = uint(isnan(14.0) ? _2952 : (isnan(_2952) ? 14.0 : min(_2952, 14.0)));
        uvec4 _2960 = texelFetch(g_lightClusterGridBuffer, int(((_2955 << 2u) + (_2941 << 6u)) >> 2u));
        uint _2961 = _2960.x;
        uint _2962 = _2929.z;
        float _3041;
        float _3043;
        float _3045;
        float _3047;
        float _3049;
        float _3051;
        if (((((1u << ((_2962 >> 4u) & 15u)) + 4294967295u) & _2961) == 0u) || ((_2962 & 240u) == 0u))
        {
            _3041 = 0.0;
            _3043 = 0.0;
            _3045 = 0.0;
            _3047 = 0.0;
            _3049 = 0.0;
            _3051 = 0.0;
        }
        else
        {
            float _3042;
            float _3044;
            float _3046;
            float _3048;
            float _3050;
            float _3052;
            float _3185 = 0.0;
            float _3186 = 0.0;
            float _3187 = 0.0;
            float _3188 = 0.0;
            float _3189 = 0.0;
            float _3190 = 0.0;
            uint _3191 = 0u;
            uint _3200;
            bool _3201;
            for (;;)
            {
                _3200 = texelFetch(g_lightClassification, int((((_2955 << 5u) + (_2941 << 9u)) + (_3191 << 2u)) >> 2u)).x;
                _3201 = _3200 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3201)
                {
                    frontier_phi_66_pred = _3190;
                    frontier_phi_66_pred_1 = _3189;
                    frontier_phi_66_pred_2 = _3188;
                    frontier_phi_66_pred_3 = _3187;
                    frontier_phi_66_pred_4 = _3186;
                    frontier_phi_66_pred_5 = _3185;
                }
                else
                {
                    float _3309;
                    float _3310;
                    float _3311;
                    float _3312;
                    float _3313;
                    float _3314;
                    uint _3315;
                    _3309 = _3185;
                    _3310 = _3186;
                    _3311 = _3187;
                    _3312 = _3188;
                    _3313 = _3189;
                    _3314 = _3190;
                    _3315 = _3200;
                    float _3241;
                    float _3242;
                    float _3243;
                    float _3244;
                    float _3245;
                    float _3246;
                    for (;;)
                    {
                        uint _3319 = uint(findLSB(_3315)) + (_3191 << 5u);
                        uint _3316 = (_3315 + 4294967295u) & _3315;
                        uint _3321 = _3319 * 48u;
                        vec4 _3335 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3321)).x, texelFetch(g_PointLightRenderingBuffer, int(_3321 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3321 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3321 + 3u)).x));
                        uint _3341 = (_3319 * 48u) + 4u;
                        vec4 _3354 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3341)).x, texelFetch(g_PointLightRenderingBuffer, int(_3341 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3341 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3341 + 3u)).x));
                        uint _3360 = (_3319 * 48u) + 8u;
                        vec3 _3371 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3360)).x, texelFetch(g_PointLightRenderingBuffer, int(_3360 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3360 + 2u)).x));
                        float _3375 = _3335.x - _2039;
                        float _3376 = _3335.y - _2040;
                        float _3377 = _3335.z - _2041;
                        float _3378 = dot(vec3(_3375, _3376, _3377), vec3(_3375, _3376, _3377));
                        float _3381 = inversesqrt(_3378);
                        float _3382 = _3381 * _3375;
                        float _3383 = _3381 * _3376;
                        float _3384 = _3381 * _3377;
                        float _3385 = dot(vec3(_926, _929, _932), vec3(_3382, _3383, _3384));
                        float _3390 = 1.0 - (_3378 * _3335.w);
                        float _4806 = isnan(0.0) ? _3390 : (isnan(_3390) ? 0.0 : max(_3390, 0.0));
                        float _3391 = isnan(1.0) ? _4806 : (isnan(_4806) ? 1.0 : min(_4806, 1.0));
                        float _3392 = sqrt(_3378) * _3354.w;
                        float _3395 = 1.39999997615814208984375 / (_3392 + 1.39999997615814208984375);
                        float _3396 = _3395 * _3395;
                        float _3399 = ((1.0 - _3396) * _3385) + _3396;
                        float _3402 = _3392 * _3392;
                        float _3406 = ((isnan(0.0) ? _3399 : (isnan(_3399) ? 0.0 : max(_3399, 0.0))) * _3391) / ((_3402 * 0.699999988079071044921875) + 1.0);
                        float _3410 = (-0.0) - _2039;
                        float _3411 = (-0.0) - _2040;
                        float _3412 = (-0.0) - _2041;
                        float _3416 = inversesqrt(dot(vec3(_3410, _3411, _3412), vec3(_3410, _3411, _3412)));
                        float _3417 = _3416 * _3410;
                        float _3418 = _3416 * _3411;
                        float _3419 = _3416 * _3412;
                        float _3426 = exp2(log2(1.0 / ((_3402 * 3.5) + 5.0)) * 0.25);
                        float _3427 = 1.0 - _986;
                        float _3434 = sqrt(1.0 - ((1.0 - (_3427 * _3427)) * (1.0 - (_3426 * _3426))));
                        float _3435 = _3434 * _3434;
                        float _3436 = _3435 * _3435;
                        float _3437 = _3417 + _3382;
                        float _3438 = _3418 + _3383;
                        float _3439 = _3419 + _3384;
                        float _3443 = inversesqrt(dot(vec3(_3437, _3438, _3439), vec3(_3437, _3438, _3439)));
                        float _3447 = dot(vec3(_926, _929, _932), vec3(_3417, _3418, _3419));
                        float _4822 = isnan(0.0) ? _3447 : (isnan(_3447) ? 0.0 : max(_3447, 0.0));
                        float _3450 = isnan(1.0) ? _4822 : (isnan(_4822) ? 1.0 : min(_4822, 1.0));
                        float _3451 = dot(vec3(_926, _929, _932), vec3(_3443 * _3437, _3443 * _3438, _3443 * _3439));
                        float _4833 = isnan(0.0) ? _3451 : (isnan(_3451) ? 0.0 : max(_3451, 0.0));
                        float _3454 = isnan(1.0) ? _4833 : (isnan(_4833) ? 1.0 : min(_4833, 1.0));
                        float _3458 = ((_3454 * _3454) * (_3436 + (-1.0))) + 1.0;
                        float _3459 = _3395 * _3435;
                        float _3460 = _3459 * _3459;
                        float _3463 = ((1.0 - _3460) * _3385) + _3460;
                        float _4844 = isnan(0.0) ? _3463 : (isnan(_3463) ? 0.0 : max(_3463, 0.0));
                        float _3464 = isnan(1.0) ? _4844 : (isnan(_4844) ? 1.0 : min(_4844, 1.0));
                        float _3465 = 1.0 - _3435;
                        float _3475 = (0.5 / (((_3464 * ((_3450 * _3465) + _3435)) + 9.9999999392252902907785028219223e-09) + (((_3464 * _3465) + _3435) * _3450))) * _3464;
                        float _4855 = isnan(0.0) ? _3475 : (isnan(_3475) ? 0.0 : max(_3475, 0.0));
                        float _3486 = (((_3436 * 3.1415927410125732421875) * (isnan(1.0) ? _4855 : (isnan(_4855) ? 1.0 : min(_4855, 1.0)))) / ((_3458 * _3458) * ((_3402 * 2.1991131305694580078125) + 3.141590118408203125))) * _3391;
                        _3244 = (_3406 * _3354.x) + _3312;
                        _3245 = (_3406 * _3354.y) + _3313;
                        _3246 = (_3406 * _3354.z) + _3314;
                        _3241 = (_3486 * _3371.x) + _3309;
                        _3242 = (_3486 * _3371.y) + _3310;
                        _3243 = (_3486 * _3371.z) + _3311;
                        if (_3316 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3309 = _3241;
                            _3310 = _3242;
                            _3311 = _3243;
                            _3312 = _3244;
                            _3313 = _3245;
                            _3314 = _3246;
                            _3315 = _3316;
                        }
                    }
                    frontier_phi_66_pred = _3246;
                    frontier_phi_66_pred_1 = _3245;
                    frontier_phi_66_pred_2 = _3244;
                    frontier_phi_66_pred_3 = _3243;
                    frontier_phi_66_pred_4 = _3242;
                    frontier_phi_66_pred_5 = _3241;
                }
                _3052 = frontier_phi_66_pred;
                _3050 = frontier_phi_66_pred_1;
                _3048 = frontier_phi_66_pred_2;
                _3046 = frontier_phi_66_pred_3;
                _3044 = frontier_phi_66_pred_4;
                _3042 = frontier_phi_66_pred_5;
                uint _3192 = _3191 + 1u;
                if (_3192 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3185 = _3042;
                    _3186 = _3044;
                    _3187 = _3046;
                    _3188 = _3048;
                    _3189 = _3050;
                    _3190 = _3052;
                    _3191 = _3192;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3041 = _3042;
            _3043 = _3044;
            _3045 = _3046;
            _3047 = _3048;
            _3049 = _3050;
            _3051 = _3052;
        }
        uvec4 _3055 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3056 = _3055.z;
        uint _3058 = (_3056 >> 8u) & 15u;
        float _3153;
        float _3155;
        float _3157;
        float _3159;
        float _3161;
        float _3163;
        if (((4294967295u << _3058) & _2961) == 0u)
        {
            _3153 = _3041;
            _3155 = _3043;
            _3157 = _3045;
            _3159 = _3047;
            _3161 = _3049;
            _3163 = _3051;
        }
        else
        {
            float _3178 = inversesqrt(dot(vec3(_2039, _2040, _2041), vec3(_2039, _2040, _2041)));
            float _3179 = _3178 * _2039;
            float _3180 = _3178 * _2040;
            float _3181 = _3178 * _2041;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3058 < ((_3056 >> 12u) & 15u))
            {
                float _3154;
                float _3156;
                float _3158;
                float _3160;
                float _3162;
                float _3164;
                float _3292 = _3041;
                float _3293 = _3043;
                float _3294 = _3045;
                float _3295 = _3047;
                float _3296 = _3049;
                float _3297 = _3051;
                uint _3298 = _3058;
                uint _3307;
                bool _3308;
                for (;;)
                {
                    _3307 = texelFetch(g_lightClassification, int((((_2955 << 5u) + (_2941 << 9u)) + (_3298 << 2u)) >> 2u)).x;
                    _3308 = _3307 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3308)
                    {
                        frontier_phi_72_pred = _3297;
                        frontier_phi_72_pred_1 = _3296;
                        frontier_phi_72_pred_2 = _3295;
                        frontier_phi_72_pred_3 = _3294;
                        frontier_phi_72_pred_4 = _3293;
                        frontier_phi_72_pred_5 = _3292;
                    }
                    else
                    {
                        float _3491;
                        float _3492;
                        float _3493;
                        float _3494;
                        float _3495;
                        float _3496;
                        float _3784;
                        float _3785;
                        float _3786;
                        float _3787;
                        float _3788;
                        float _3789;
                        float _3504 = _3292;
                        float _3505 = _3293;
                        float _3506 = _3294;
                        float _3507 = _3295;
                        float _3508 = _3296;
                        float _3509 = _3297;
                        uint _3510 = _3307;
                        uint _3511;
                        vec4 _3536;
                        float _3537;
                        vec4 _3552;
                        vec3 _3564;
                        vec4 _3579;
                        vec4 _3594;
                        float _3640;
                        bool _3641;
                        for (;;)
                        {
                            uint _3521 = ((_3298 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3510));
                            _3511 = (_3510 + 4294967295u) & _3510;
                            uint _3523 = _3521 * 40u;
                            _3536 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3523)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3523 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3523 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3523 + 3u)).x));
                            _3537 = _3536.w;
                            uint _3539 = (_3521 * 40u) + 4u;
                            _3552 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3539)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3539 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3539 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3539 + 3u)).x));
                            uint _3554 = (_3521 * 40u) + 8u;
                            _3564 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3554)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 2u)).x));
                            uint _3566 = (_3521 * 40u) + 16u;
                            _3579 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3566)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3566 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3566 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3566 + 3u)).x));
                            uint _3581 = (_3521 * 40u) + 20u;
                            _3594 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3581)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3581 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3581 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3581 + 3u)).x));
                            uint _3596 = (_3521 * 40u) + 24u;
                            vec4 _3609 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3596)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3596 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3596 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3596 + 3u)).x));
                            uint _3615 = (_3521 * 40u) + 28u;
                            vec4 _3628 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3615)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3615 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3615 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3615 + 3u)).x));
                            _3640 = fma(_2041, _3628.z, fma(_2040, _3628.y, _3628.x * _2039)) + _3628.w;
                            _3641 = !((fma(_2041, _3609.z, fma(_2040, _3609.y, _3609.x * _2039)) + _3609.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3641)
                            {
                                float _3668 = _3536.x - _2039;
                                float _3669 = _3536.y - _2040;
                                float _3670 = _3536.z - _2041;
                                float _3671 = dot(vec3(_3668, _3669, _3670), vec3(_3668, _3669, _3670));
                                float _3674 = inversesqrt(_3671);
                                float _3675 = _3674 * _3668;
                                float _3676 = _3674 * _3669;
                                float _3677 = _3674 * _3670;
                                float _3681 = 1.0 - (_3671 / (_3537 * _3537));
                                float _4866 = isnan(0.0) ? _3681 : (isnan(_3681) ? 0.0 : max(_3681, 0.0));
                                float _3682 = isnan(1.0) ? _4866 : (isnan(_4866) ? 1.0 : min(_4866, 1.0));
                                float _3686 = sqrt(_3671) * _3552.w;
                                float _3688 = 1.39999997615814208984375 / (_3686 + 1.39999997615814208984375);
                                float _3689 = _3688 * _3688;
                                float _3692 = ((1.0 - _3689) * dot(vec3(_3675, _3676, _3677), vec3(_926, _929, _932))) + _3689;
                                float _3695 = _3686 * _3686;
                                float _3699 = (fma(_2041, _3579.z, fma(_2040, _3579.y, _3579.x * _2039)) + _3579.w) / _3640;
                                float _3700 = (fma(_2041, _3594.z, fma(_2040, _3594.y, _3594.x * _2039)) + _3594.w) / _3640;
                                float _3704 = 1.0 - dot(vec2(_3699, _3700), vec2(_3699, _3700));
                                float _4882 = isnan(0.0) ? _3704 : (isnan(_3704) ? 0.0 : max(_3704, 0.0));
                                float _3705 = isnan(1.0) ? _4882 : (isnan(_4882) ? 1.0 : min(_4882, 1.0));
                                float _3706 = _3705 * (((isnan(0.0) ? _3692 : (isnan(_3692) ? 0.0 : max(_3692, 0.0))) * _3682) / ((_3695 * 0.699999988079071044921875) + 1.0));
                                float _3718 = exp2(log2(1.0 / ((_3695 * 3.5) + 5.0)) * 0.25);
                                float _3719 = 1.0 - _986;
                                float _3726 = sqrt(1.0 - ((1.0 - (_3719 * _3719)) * (1.0 - (_3718 * _3718))));
                                float _3727 = _3726 * _3726;
                                float _3728 = _3727 * _3727;
                                float _3729 = _3675 - _3179;
                                float _3730 = _3676 - _3180;
                                float _3731 = _3677 - _3181;
                                float _3735 = inversesqrt(dot(vec3(_3729, _3730, _3731), vec3(_3729, _3730, _3731)));
                                float _3739 = dot(vec3(_926, _929, _932), vec3((-0.0) - _3179, (-0.0) - _3180, (-0.0) - _3181));
                                float _4893 = isnan(0.0) ? _3739 : (isnan(_3739) ? 0.0 : max(_3739, 0.0));
                                float _3742 = isnan(1.0) ? _4893 : (isnan(_4893) ? 1.0 : min(_4893, 1.0));
                                float _3743 = dot(vec3(_926, _929, _932), vec3(_3735 * _3729, _3735 * _3730, _3735 * _3731));
                                float _4904 = isnan(0.0) ? _3743 : (isnan(_3743) ? 0.0 : max(_3743, 0.0));
                                float _3746 = isnan(1.0) ? _4904 : (isnan(_4904) ? 1.0 : min(_4904, 1.0));
                                float _3750 = ((_3746 * _3746) * (_3728 + (-1.0))) + 1.0;
                                float _3751 = _3688 * _3727;
                                float _3752 = _3751 * _3751;
                                float _3758 = ((1.0 - _3752) * dot(vec3(_926, _929, _932), vec3(_3675, _3676, _3677))) + _3752;
                                float _4915 = isnan(0.0) ? _3758 : (isnan(_3758) ? 0.0 : max(_3758, 0.0));
                                float _3759 = isnan(1.0) ? _4915 : (isnan(_4915) ? 1.0 : min(_4915, 1.0));
                                float _3760 = 1.0 - _3727;
                                float _3770 = (0.5 / (((_3759 * ((_3742 * _3760) + _3727)) + 9.9999999392252902907785028219223e-09) + (((_3759 * _3760) + _3727) * _3742))) * _3759;
                                float _4926 = isnan(0.0) ? _3770 : (isnan(_3770) ? 0.0 : max(_3770, 0.0));
                                float _3780 = (_3705 * _3682) * (((_3728 * 3.1415927410125732421875) * (isnan(1.0) ? _4926 : (isnan(_4926) ? 1.0 : min(_4926, 1.0)))) / ((_3750 * _3750) * ((_3695 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3706 * _3552.y;
                                frontier_phi_78_pred_1 = _3706 * _3552.x;
                                frontier_phi_78_pred_2 = _3780 * _3564.z;
                                frontier_phi_78_pred_3 = _3780 * _3564.y;
                                frontier_phi_78_pred_4 = _3780 * _3564.x;
                                frontier_phi_78_pred_5 = _3706 * _3552.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3788 = frontier_phi_78_pred;
                            _3787 = frontier_phi_78_pred_1;
                            _3786 = frontier_phi_78_pred_2;
                            _3785 = frontier_phi_78_pred_3;
                            _3784 = frontier_phi_78_pred_4;
                            _3789 = frontier_phi_78_pred_5;
                            _3494 = _3787 + _3507;
                            _3495 = _3788 + _3508;
                            _3496 = _3789 + _3509;
                            _3491 = _3784 + _3504;
                            _3492 = _3785 + _3505;
                            _3493 = _3786 + _3506;
                            if (_3511 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3504 = _3491;
                                _3505 = _3492;
                                _3506 = _3493;
                                _3507 = _3494;
                                _3508 = _3495;
                                _3509 = _3496;
                                _3510 = _3511;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3496;
                        frontier_phi_72_pred_1 = _3495;
                        frontier_phi_72_pred_2 = _3494;
                        frontier_phi_72_pred_3 = _3493;
                        frontier_phi_72_pred_4 = _3492;
                        frontier_phi_72_pred_5 = _3491;
                    }
                    _3164 = frontier_phi_72_pred;
                    _3162 = frontier_phi_72_pred_1;
                    _3160 = frontier_phi_72_pred_2;
                    _3158 = frontier_phi_72_pred_3;
                    _3156 = frontier_phi_72_pred_4;
                    _3154 = frontier_phi_72_pred_5;
                    uint _3299 = _3298 + 1u;
                    if (_3299 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3292 = _3154;
                        _3293 = _3156;
                        _3294 = _3158;
                        _3295 = _3160;
                        _3296 = _3162;
                        _3297 = _3164;
                        _3298 = _3299;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3164;
                frontier_phi_60_61_ladder_1 = _3162;
                frontier_phi_60_61_ladder_2 = _3158;
                frontier_phi_60_61_ladder_3 = _3156;
                frontier_phi_60_61_ladder_4 = _3154;
                frontier_phi_60_61_ladder_5 = _3160;
            }
            else
            {
                frontier_phi_60_61_ladder = _3051;
                frontier_phi_60_61_ladder_1 = _3049;
                frontier_phi_60_61_ladder_2 = _3045;
                frontier_phi_60_61_ladder_3 = _3043;
                frontier_phi_60_61_ladder_4 = _3041;
                frontier_phi_60_61_ladder_5 = _3047;
            }
            _3153 = frontier_phi_60_61_ladder_4;
            _3155 = frontier_phi_60_61_ladder_3;
            _3157 = frontier_phi_60_61_ladder_2;
            _3159 = frontier_phi_60_61_ladder_5;
            _3161 = frontier_phi_60_61_ladder_1;
            _3163 = frontier_phi_60_61_ladder;
        }
        float _3168 = isnan(1.0) ? _970 : (isnan(_970) ? 1.0 : min(_970, 1.0));
        _2974 = (_3168 * _3159) + _2505;
        _2976 = (_3168 * _3161) + _2507;
        _2978 = (_3168 * _3163) + _2509;
        _2980 = ((_3153 * 0.039999999105930328369140625) * _3168) + _2828;
        _2982 = ((_3155 * 0.039999999105930328369140625) * _3168) + _2830;
        _2984 = ((_3157 * 0.039999999105930328369140625) * _3168) + _2832;
    }
    else
    {
        _2974 = _2505;
        _2976 = _2507;
        _2978 = _2509;
        _2980 = _2828;
        _2982 = _2830;
        _2984 = _2832;
    }
    float _4942 = isnan(0.0) ? _955 : (isnan(_955) ? 0.0 : max(_955, 0.0));
    float _4953 = isnan(0.0) ? _956 : (isnan(_956) ? 0.0 : max(_956, 0.0));
    float _4964 = isnan(0.0) ? _957 : (isnan(_957) ? 0.0 : max(_957, 0.0));
    uint _3004 = _277 + 6u;
    float _3012 = _907 / cbSceneParam._m0[86u].x;
    float _3013 = _908 / cbSceneParam._m0[86u].y;
    vec4 _3027 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3012, _3013, (log2((isnan(cbSceneParam._m0[77u].w) ? _841 : (isnan(_841) ? cbSceneParam._m0[77u].w : min(_841, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3029 = _3027.x;
    float _3030 = _3027.y;
    float _3031 = _3027.z;
    float _3032 = _3027.w;
    float _3103;
    float _3105;
    float _3107;
    float _3109;
    if (_841 > cbSceneParam._m0[78u].w)
    {
        float _3066 = isnan(_841) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _841 : min(cbSceneParam._m0[80u].w, _841));
        float _3067 = _3066 / _841;
        float _3078 = _3067 * _892;
        float _3079 = _893 * _3067;
        float _3080 = (-0.0) - _3079;
        float _3081 = _3067 * _894;
        float _3083 = (cbSceneParam._m0[77u].w * _3080) / _3066;
        float _3084 = _3083 + cbSceneParam._m0[79u].w;
        float _3085 = cbSceneParam._m0[79u].w - _3079;
        float _3091 = sqrt(((_3078 * _3078) + (_3079 * _3079)) + (_3081 * _3081));
        float _3094 = (1.0 - (cbSceneParam._m0[77u].w / _3066)) * _3091;
        float _3099 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3101 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3254;
        if (abs((_3080 - _3083) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3254 = ((((_3084 > 0.0) ? exp2(_3099 * _3084) : (2.0 - exp2(_3101 * _3084))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3094;
        }
        else
        {
            float _3214 = 1.0 / cbSceneParam._m0[80u].x;
            float _3215 = isnan(_3085) ? _3084 : (isnan(_3084) ? _3085 : max(_3084, _3085));
            float _3216 = isnan(_3085) ? _3084 : (isnan(_3084) ? _3085 : min(_3084, _3085));
            float _3225 = isnan(0.0) ? _3215 : (isnan(_3215) ? 0.0 : min(_3215, 0.0));
            float _3226 = isnan(0.0) ? _3216 : (isnan(_3216) ? 0.0 : min(_3216, 0.0));
            _3254 = ((abs(_3091 / _3080) * cbSceneParam._m0[80u].y) * ((((_3225 - _3226) * 2.0) - ((exp2(_3099 * (isnan(0.0) ? _3215 : (isnan(_3215) ? 0.0 : max(_3215, 0.0)))) - exp2(_3099 * (isnan(0.0) ? _3216 : (isnan(_3216) ? 0.0 : max(_3216, 0.0))))) * _3214)) - ((exp2(_3101 * _3225) - exp2(_3101 * _3226)) * _3214))) + (_3094 * cbSceneParam._m0[80u].z);
        }
        vec4 _3256 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3012, _3013, 1.0), 0.0);
        float _3265 = exp2((_3254 * (-1.44269502162933349609375)) * (1.0 - _3256.w));
        float _3266 = log2(_3265);
        float _3282 = log2(_3032);
        _3103 = (exp2(_3282 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3266 * cbSceneParam._m0[78u].x)) * _3256.x) / cbSceneParam._m0[78u].x)) + _3029;
        _3105 = (exp2(_3282 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3266 * cbSceneParam._m0[78u].y)) * _3256.y) / cbSceneParam._m0[78u].y)) + _3030;
        _3107 = (exp2(_3282 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3266 * cbSceneParam._m0[78u].z)) * _3256.z) / cbSceneParam._m0[78u].z)) + _3031;
        _3109 = _3265 * _3032;
    }
    else
    {
        _3103 = _3029;
        _3105 = _3030;
        _3107 = _3031;
        _3109 = _3032;
    }
    float _3121 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3122 = _3121 == 3.0;
    float _3123 = log2(_3109);
    float _3130 = exp2(_3123 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4942 : (isnan(_4942) ? 1.0 : min(_4942, 1.0))) * (_2974 + ((isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0))) * _970))) + ((_2980 + ((isnan(0.0) ? _1986 : (isnan(_1986) ? 0.0 : max(_1986, 0.0))) * _1775)) * cbPerFrame._m0[3u].x));
    float _3131 = exp2(_3123 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4953 : (isnan(_4953) ? 1.0 : min(_4953, 1.0))) * (_2976 + ((isnan(0.0) ? _1699 : (isnan(_1699) ? 0.0 : max(_1699, 0.0))) * _970))) + ((_2982 + ((isnan(0.0) ? _1989 : (isnan(_1989) ? 0.0 : max(_1989, 0.0))) * _1775)) * cbPerFrame._m0[3u].x));
    float _3132 = exp2(_3123 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4964 : (isnan(_4964) ? 1.0 : min(_4964, 1.0))) * (_2978 + ((isnan(0.0) ? _1702 : (isnan(_1702) ? 0.0 : max(_1702, 0.0))) * _970))) + ((_2984 + ((isnan(0.0) ? _1992 : (isnan(_1992) ? 0.0 : max(_1992, 0.0))) * _1775)) * cbPerFrame._m0[3u].x));
    float _3141 = (_3121 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3141 * (_3122 ? _3130 : (_3130 + (cbSceneParam._m0[72u].w * _3103)));
    SV_Target.y = _3141 * (_3122 ? _3131 : (_3131 + (cbSceneParam._m0[72u].w * _3105)));
    SV_Target.z = _3141 * (_3122 ? _3132 : (_3132 + (cbSceneParam._m0[72u].w * _3107)));
    SV_Target.w = cbInstanceData._m0[_3004].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3004].w;
}


