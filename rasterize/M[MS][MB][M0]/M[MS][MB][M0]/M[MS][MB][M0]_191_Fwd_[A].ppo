#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 3) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1394;
float _3753;
float _3754;
float _3755;
float _3756;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _231 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _232 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _233 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _239 = inversesqrt(dot(vec3(_231, _232, _233), vec3(_231, _232, _233)));
    float _246 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _253 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _259 = uint(roundEven(NORMAL.w)) * 13u;
    uint _264 = _259 + 1u;
    uint _268 = _259 + 2u;
    float _277 = sqrt(((cbInstanceData._m0[_264].x * cbInstanceData._m0[_264].x) + (cbInstanceData._m0[_259].x * cbInstanceData._m0[_259].x)) + (cbInstanceData._m0[_268].x * cbInstanceData._m0[_268].x));
    float _278 = _277 * TEXCOORD.z;
    float _279 = _277 * TEXCOORD.w;
    vec4 _299 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _305 = _299.x * cbMtdParam._m0[11u].x;
    float _306 = _299.y * cbMtdParam._m0[11u].y;
    float _307 = _299.z * cbMtdParam._m0[11u].z;
    vec4 _326 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _278) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _279) + cbTextureTilingScale._m0[5u].w));
    vec4 _365 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _367 = _365.x;
    float _377 = dot(vec4(_367, _365.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _394 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_367 - _377) * cbMtdParam._m0[24u].x) + _377) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3765 = isnan(0.0) ? _394 : (isnan(_394) ? 0.0 : max(_394, 0.0));
    float _395 = isnan(1.0) ? _3765 : (isnan(_3765) ? 1.0 : min(_3765, 1.0));
    float _402 = (_395 * ((_326.x * cbMtdParam._m0[12u].x) - _305)) + _305;
    float _403 = (_395 * ((_326.y * cbMtdParam._m0[12u].y) - _306)) + _306;
    float _404 = (_395 * ((_326.z * cbMtdParam._m0[12u].z) - _307)) + _307;
    vec4 _421 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _278) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _279) + cbTextureTilingScale._m0[3u].w));
    vec4 _441 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _443 = _441.x;
    float _453 = dot(vec4(_443, _441.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _467 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.y) * 2.0) - ((((_443 - _453) * cbMtdParam._m0[24u].x) + _453) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3776 = isnan(0.0) ? _467 : (isnan(_467) ? 0.0 : max(_467, 0.0));
    float _468 = isnan(1.0) ? _3776 : (isnan(_3776) ? 1.0 : min(_3776, 1.0));
    float _475 = (_468 * ((_421.x * cbMtdParam._m0[13u].x) - _402)) + _402;
    float _476 = (_468 * ((_421.y * cbMtdParam._m0[13u].y) - _403)) + _403;
    float _477 = (_468 * ((_421.z * cbMtdParam._m0[13u].z) - _404)) + _404;
    vec4 _494 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _278) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _279) + cbTextureTilingScale._m0[20u].w));
    vec4 _517 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _278) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _279) + cbTextureTilingScale._m0[4u].w));
    vec4 _534 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _536 = _534.x;
    float _537 = _534.y;
    float _538 = _534.z;
    float _545 = ((_517.x - _536) * _395) + _536;
    float _546 = ((_517.y - _537) * _395) + _537;
    float _547 = ((_517.z - _538) * _395) + _538;
    vec4 _559 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _278) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _279) + cbTextureTilingScale._m0[2u].w));
    float _572 = ((_559.z - _547) * _468) + _547;
    float _575 = ((((_559.x - _545) * _468) + _545) * 2.0) + (-1.0);
    float _576 = ((((_559.y - _546) * _468) + _546) * 2.0) + (-1.0);
    float _577 = dot(vec2(_575, _576), vec2(_575, _576));
    float _3787 = isnan(0.0) ? _577 : (isnan(_577) ? 0.0 : max(_577, 0.0));
    float _582 = sqrt(1.0 - (isnan(1.0) ? _3787 : (isnan(_3787) ? 1.0 : min(_3787, 1.0))));
    vec4 _596 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _621 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _278) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _279) + cbTextureTilingScale._m0[11u].w));
    float _623 = _621.x;
    float _624 = 1.0 - _623;
    float _630 = isnan(-1.0) ? cbMtdParam._m0[24u].y : (isnan(cbMtdParam._m0[24u].y) ? (-1.0) : max(cbMtdParam._m0[24u].y, -1.0));
    float _633 = ((isnan(0.0) ? _630 : (isnan(_630) ? 0.0 : min(_630, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _642 = (_633 - ((((((_623 - _624) * cbMtdParam._m0[24u].z) + _624) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _633))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3808 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
    float _643 = isnan(1.0) ? _3808 : (isnan(_3808) ? 1.0 : min(_3808, 1.0));
    float _650 = (_643 * (cbMtdParam._m0[17u].x - _475)) + _475;
    float _651 = (_643 * (cbMtdParam._m0[17u].y - _476)) + _476;
    float _652 = (_643 * (cbMtdParam._m0[17u].z - _477)) + _477;
    vec4 _664 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _278) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _279) + cbTextureTilingScale._m0[19u].w));
    float _666 = _664.x;
    float _667 = 1.0 - _666;
    float _694 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_666 - _667) * cbMtdParam._m0[24u].w) + _667) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3819 = isnan(0.0) ? _694 : (isnan(_694) ? 0.0 : max(_694, 0.0));
    float _695 = isnan(1.0) ? _3819 : (isnan(_3819) ? 1.0 : min(_3819, 1.0));
    float _703 = ((((cbMtdParam._m0[10u].x - _650) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _695) + _650;
    float _704 = ((((cbMtdParam._m0[10u].y - _651) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _695) + _651;
    float _705 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _652)) * _695) + _652;
    float _710 = (((_494.z - _572) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _572;
    float _714 = ((_596.z - _710) * cbMtdParam._m0[19u].w) + _710;
    vec4 _728 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _278) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _279) + cbTextureTilingScale._m0[15u].w));
    float _735 = (_728.x * 2.0) + (-1.0);
    float _736 = (_728.y * 2.0) + (-1.0);
    float _737 = dot(vec2(_735, _736), vec2(_735, _736));
    float _3830 = isnan(0.0) ? _737 : (isnan(_737) ? 0.0 : max(_737, 0.0));
    float _745 = (_643 * (_728.z - _714)) + _714;
    float _748 = ((cbMtdParam._m0[23u].y - _745) * _695) + _745;
    vec4 _767 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _278) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _279) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _773 = (_767.x * 2.0) + (-1.0);
    float _774 = (_767.y * 2.0) + (-1.0);
    float _775 = dot(vec2(_773, _774), vec2(_773, _774));
    float _3841 = isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0));
    float _789 = (_575 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_494.x * 2.0) + (-1.0)))) + (((_596.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _790 = (_576 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_494.y * 2.0) + (-1.0)))) + (((_596.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _802 = (((_735 - _789) + (cbMtdParam._m0[21u].x * _789)) * _643) + _789;
    float _803 = (((_736 - _790) + (cbMtdParam._m0[21u].x * _790)) * _643) + _790;
    float _804 = (_643 * (sqrt(1.0 - (isnan(1.0) ? _3830 : (isnan(_3830) ? 1.0 : min(_3830, 1.0)))) - _582)) + _582;
    float _815 = (((_773 - _802) + (_802 * cbMtdParam._m0[22u].z)) * _695) + _802;
    float _816 = (((_774 - _803) + (_803 * cbMtdParam._m0[22u].z)) * _695) + _803;
    float _817 = ((sqrt(1.0 - (isnan(1.0) ? _3841 : (isnan(_3841) ? 1.0 : min(_3841, 1.0)))) - _804) * _695) + _804;
    float _819 = cbMtdParam._m0[22u].x + _596.w;
    float _822 = fma(_817, _246 * NORMAL.x, fma(_816, _253 * TANGENT.x, (_239 * _231) * _815));
    float _825 = fma(_817, _246 * NORMAL.y, fma(_816, _253 * TANGENT.y, (_239 * _232) * _815));
    float _828 = fma(_817, _246 * NORMAL.z, fma(_816, _253 * TANGENT.z, (_239 * _233) * _815));
    float _832 = inversesqrt(dot(vec3(_822, _825, _828), vec3(_822, _825, _828)));
    float _833 = _832 * _822;
    float _834 = _832 * _825;
    float _835 = _832 * _828;
    float _3852 = isnan(0.0) ? _748 : (isnan(_748) ? 0.0 : max(_748, 0.0));
    float _836 = isnan(1.0) ? _3852 : (isnan(_3852) ? 1.0 : min(_3852, 1.0));
    float _3863 = isnan(0.0) ? _819 : (isnan(_819) ? 0.0 : max(_819, 0.0));
    float _3874 = isnan(0.0) ? _703 : (isnan(_703) ? 0.0 : max(_703, 0.0));
    float _3885 = isnan(0.0) ? _704 : (isnan(_704) ? 0.0 : max(_704, 0.0));
    float _3896 = isnan(0.0) ? _705 : (isnan(_705) ? 0.0 : max(_705, 0.0));
    float _854 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _895 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _905 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _895);
    float _906 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _895);
    float _907 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _895);
    float _911 = inversesqrt(dot(vec3(_905, _906, _907), vec3(_905, _906, _907)));
    float _912 = _905 * _911;
    float _913 = _906 * _911;
    float _914 = _907 * _911;
    vec4 _919 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _921 = _919.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1075 = sqrt(((_905 * _905) + (_906 * _906)) + (_907 * _907));
        float _1081 = (cbMatDynParam._m0[5u].x * _1075) + cbMatDynParam._m0[5u].y;
        float _3907 = isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0));
        float _1082 = isnan(1.0) ? _3907 : (isnan(_3907) ? 1.0 : min(_3907, 1.0));
        float _1086 = (cbMatDynParam._m0[5u].z * _1075) + cbMatDynParam._m0[5u].w;
        float _3918 = isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3918 : (isnan(_3918) ? 1.0 : min(_3918, 1.0))) - _1082)) + _1082) < ((_921 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _932 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _933 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _951 = fma(_835, cbSceneParam._m0[5u].z, fma(_834, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _833));
    float _954 = fma(_835, cbSceneParam._m0[6u].z, fma(_834, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _833));
    float _957 = fma(_835, cbSceneParam._m0[7u].z, fma(_834, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _833));
    uint _970 = _259 + 9u;
    uint _971 = _970 + uint(cbMatDynParam._m0[0u].w);
    float _977 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3874 : (isnan(_3874) ? 1.0 : min(_3874, 1.0)))) * cbInstanceData._m0[_971].x;
    float _978 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3885 : (isnan(_3885) ? 1.0 : min(_3885, 1.0)))) * cbInstanceData._m0[_971].y;
    float _979 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3896 : (isnan(_3896) ? 1.0 : min(_3896, 1.0)))) * cbInstanceData._m0[_971].z;
    float _3929 = isnan(0.0) ? _977 : (isnan(_977) ? 0.0 : max(_977, 0.0));
    float _980 = isnan(1.0) ? _3929 : (isnan(_3929) ? 1.0 : min(_3929, 1.0));
    float _3940 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
    float _981 = isnan(1.0) ? _3940 : (isnan(_3940) ? 1.0 : min(_3940, 1.0));
    float _3951 = isnan(0.0) ? _979 : (isnan(_979) ? 0.0 : max(_979, 0.0));
    float _982 = isnan(1.0) ? _3951 : (isnan(_3951) ? 1.0 : min(_3951, 1.0));
    vec4 _991 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _932, cbSceneParam._m0[86u].y * _933));
    float _995 = ((isnan(1.0) ? _3863 : (isnan(_3863) ? 1.0 : min(_3863, 1.0))) * TEXCOORD_5.w) * _991.x;
    float _996 = dot(vec3(_833, _834, _835), vec3(_912, _913, _914));
    float _999 = _996 * 2.0;
    float _1003 = (_999 * _833) - _912;
    float _1004 = (_999 * _834) - _913;
    float _1005 = (_999 * _835) - _914;
    float _1009 = abs(dot(vec3(_912, _913, _914), vec3(_833, _834, _835)));
    float _3962 = isnan(0.0) ? _1009 : (isnan(_1009) ? 0.0 : max(_1009, 0.0));
    float _1011 = sqrt(_836);
    float _1024 = exp2((_1011 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3962 : (isnan(_3962) ? 1.0 : min(_3962, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1011 * 3.0));
    float _1056 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1060 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1064 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1393;
    float _1395;
    float _1396;
    float _1397;
    float _1398;
    float _1399;
    float _1400;
    float _1401;
    float _1402;
    float _1403;
    float _1404;
    float _1405;
    float _1406;
    float _1407;
    float _1408;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1118 = fma(_1064, cbModelParam._m0[26u].z, fma(_1060, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1056));
        float _1122 = fma(_1064, cbModelParam._m0[27u].z, fma(_1060, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1056));
        float _1126 = fma(_1064, cbModelParam._m0[28u].z, fma(_1060, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1056));
        float _1151 = _1056 + _833;
        float _1152 = _1060 + _834;
        float _1153 = _1064 + _835;
        float _1163 = fma(_1153, cbModelParam._m0[26u].z, fma(_1152, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1151)) - _1118;
        float _1164 = fma(_1153, cbModelParam._m0[27u].z, fma(_1152, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1151)) - _1122;
        float _1165 = fma(_1153, cbModelParam._m0[28u].z, fma(_1152, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1151)) - _1126;
        float _1169 = inversesqrt(dot(vec3(_1163, _1164, _1165), vec3(_1163, _1164, _1165)));
        float _1182 = ((_1169 * _1163) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1118 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1183 = ((_1169 * _1164) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1122 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1184 = ((_1169 * _1165) / cbModelParam._m0[34u].z) + ((((((_1126 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1187 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1182, _1183, _1184), 0.0);
        vec4 _1194 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1182, _1183, _1184), 0.0);
        vec4 _1201 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1182, _1183, _1184), 0.0);
        vec4 _1208 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1182, _1183, _1184), 0.0);
        float _1221 = exp2((_1187.w + (-0.5)) * 20.0) * 2.0;
        float _1222 = _1221 * (_1187.x + (-0.5));
        float _1223 = _1221 * (_1187.y + (-0.5));
        float _1224 = _1221 * (_1187.z + (-0.5));
        float _1231 = exp2((_1194.w + (-0.5)) * 20.0) * 2.0;
        float _1232 = _1231 * (_1194.x + (-0.5));
        float _1233 = _1231 * (_1194.y + (-0.5));
        float _1234 = _1231 * (_1194.z + (-0.5));
        float _1241 = exp2((_1201.w + (-0.5)) * 20.0) * 2.0;
        float _1242 = _1241 * (_1201.x + (-0.5));
        float _1243 = _1241 * (_1201.y + (-0.5));
        float _1244 = _1241 * (_1201.z + (-0.5));
        float _1251 = exp2((_1208.w + (-0.5)) * 20.0) * 2.0;
        float _1252 = _1251 * (_1208.x + (-0.5));
        float _1253 = _1251 * (_1208.y + (-0.5));
        float _1254 = _1251 * (_1208.z + (-0.5));
        float _1255 = isnan(0.0) ? _1252 : (isnan(_1252) ? 0.0 : max(_1252, 0.0));
        float _1256 = isnan(0.0) ? _1253 : (isnan(_1253) ? 0.0 : max(_1253, 0.0));
        float _1257 = isnan(0.0) ? _1254 : (isnan(_1254) ? 0.0 : max(_1254, 0.0));
        float _1258 = _1222 * 0.5;
        float _1259 = _1232 * 0.5;
        float _1260 = _1242 * 0.5;
        float _1261 = dot(vec3(_1258, _1259, _1260), vec3(_1258, _1259, _1260));
        float _1266 = (_1261 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1261);
        float _1275 = (dot(vec3(_833, _834, _835), vec3(_1266 * _1258, _1266 * _1259, _1266 * _1260)) + 1.0) * 0.5;
        float _3988 = isnan(0.0) ? _1275 : (isnan(_1275) ? 0.0 : max(_1275, 0.0));
        float _1285 = sqrt(((_1259 * _1259) + (_1258 * _1258)) + (_1260 * _1260)) / (_1255 + 9.9999997473787516355514526367188e-06);
        float _3999 = isnan(0.0) ? _1285 : (isnan(_1285) ? 0.0 : max(_1285, 0.0));
        float _1286 = isnan(1.0) ? _3999 : (isnan(_3999) ? 1.0 : min(_3999, 1.0));
        float _1287 = _1286 * 2.0;
        float _1291 = (1.0 - _1286) / (_1286 + 1.0);
        float _4010 = isnan(0.0) ? _1291 : (isnan(_1291) ? 0.0 : max(_1291, 0.0));
        float _1292 = isnan(1.0) ? _4010 : (isnan(_4010) ? 1.0 : min(_4010, 1.0));
        float _1301 = ((((1.0 - _1292) * (_1287 + 2.0)) * exp2(log2(isnan(1.0) ? _3988 : (isnan(_3988) ? 1.0 : min(_3988, 1.0))) * (_1287 + 1.0))) + _1292) * _1255;
        float _1302 = _1223 * 0.5;
        float _1303 = _1233 * 0.5;
        float _1304 = _1243 * 0.5;
        float _1305 = dot(vec3(_1302, _1303, _1304), vec3(_1302, _1303, _1304));
        float _1310 = (_1305 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1305);
        float _1318 = (dot(vec3(_833, _834, _835), vec3(_1310 * _1302, _1310 * _1303, _1310 * _1304)) + 1.0) * 0.5;
        float _4021 = isnan(0.0) ? _1318 : (isnan(_1318) ? 0.0 : max(_1318, 0.0));
        float _1327 = sqrt(((_1303 * _1303) + (_1302 * _1302)) + (_1304 * _1304)) / (_1256 + 9.9999997473787516355514526367188e-06);
        float _4032 = isnan(0.0) ? _1327 : (isnan(_1327) ? 0.0 : max(_1327, 0.0));
        float _1328 = isnan(1.0) ? _4032 : (isnan(_4032) ? 1.0 : min(_4032, 1.0));
        float _1329 = _1328 * 2.0;
        float _1333 = (1.0 - _1328) / (_1328 + 1.0);
        float _4043 = isnan(0.0) ? _1333 : (isnan(_1333) ? 0.0 : max(_1333, 0.0));
        float _1334 = isnan(1.0) ? _4043 : (isnan(_4043) ? 1.0 : min(_4043, 1.0));
        float _1343 = ((((1.0 - _1334) * (_1329 + 2.0)) * exp2(log2(isnan(1.0) ? _4021 : (isnan(_4021) ? 1.0 : min(_4021, 1.0))) * (_1329 + 1.0))) + _1334) * _1256;
        float _1344 = _1224 * 0.5;
        float _1345 = _1234 * 0.5;
        float _1346 = _1244 * 0.5;
        float _1347 = dot(vec3(_1344, _1345, _1346), vec3(_1344, _1345, _1346));
        float _1352 = (_1347 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1347);
        float _1360 = (dot(vec3(_833, _834, _835), vec3(_1352 * _1344, _1352 * _1345, _1352 * _1346)) + 1.0) * 0.5;
        float _4054 = isnan(0.0) ? _1360 : (isnan(_1360) ? 0.0 : max(_1360, 0.0));
        float _1369 = sqrt(((_1345 * _1345) + (_1344 * _1344)) + (_1346 * _1346)) / (_1257 + 9.9999997473787516355514526367188e-06);
        float _4065 = isnan(0.0) ? _1369 : (isnan(_1369) ? 0.0 : max(_1369, 0.0));
        float _1370 = isnan(1.0) ? _4065 : (isnan(_4065) ? 1.0 : min(_4065, 1.0));
        float _1371 = _1370 * 2.0;
        float _1375 = (1.0 - _1370) / (_1370 + 1.0);
        float _4076 = isnan(0.0) ? _1375 : (isnan(_1375) ? 0.0 : max(_1375, 0.0));
        float _1376 = isnan(1.0) ? _4076 : (isnan(_4076) ? 1.0 : min(_4076, 1.0));
        float _1385 = ((((1.0 - _1376) * (_1371 + 2.0)) * exp2(log2(isnan(1.0) ? _4054 : (isnan(_4054) ? 1.0 : min(_4054, 1.0))) * (_1371 + 1.0))) + _1376) * _1257;
        _1393 = _1224;
        _1395 = _1223;
        _1396 = _1222;
        _1397 = _1234;
        _1398 = _1233;
        _1399 = _1232;
        _1400 = _1244;
        _1401 = _1243;
        _1402 = _1242;
        _1403 = _1257;
        _1404 = _1256;
        _1405 = _1255;
        _1406 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1301 : (isnan(_1301) ? 0.0 : max(_1301, 0.0)));
        _1407 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1343 : (isnan(_1343) ? 0.0 : max(_1343, 0.0)));
        _1408 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1385 : (isnan(_1385) ? 0.0 : max(_1385, 0.0)));
    }
    else
    {
        _1393 = _1394;
        _1395 = _1394;
        _1396 = _1394;
        _1397 = _1394;
        _1398 = _1394;
        _1399 = _1394;
        _1400 = _1394;
        _1401 = _1394;
        _1402 = _1394;
        _1403 = _1394;
        _1404 = _1394;
        _1405 = _1394;
        _1406 = 0.0;
        _1407 = 0.0;
        _1408 = 0.0;
    }
    float _1704;
    float _1705;
    float _1706;
    float _1707;
    float _1708;
    float _1709;
    float _1710;
    float _1711;
    float _1712;
    float _1713;
    float _1714;
    float _1715;
    float _1716;
    float _1717;
    float _1718;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1435 = fma(_1064, cbModelParam._m0[30u].z, fma(_1060, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1056));
        float _1439 = fma(_1064, cbModelParam._m0[31u].z, fma(_1060, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1056));
        float _1443 = fma(_1064, cbModelParam._m0[32u].z, fma(_1060, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1056));
        float _1466 = _1056 + _833;
        float _1467 = _1060 + _834;
        float _1468 = _1064 + _835;
        float _1478 = fma(_1468, cbModelParam._m0[30u].z, fma(_1467, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1466)) - _1435;
        float _1479 = fma(_1468, cbModelParam._m0[31u].z, fma(_1467, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1466)) - _1439;
        float _1480 = fma(_1468, cbModelParam._m0[32u].z, fma(_1467, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1466)) - _1443;
        float _1484 = inversesqrt(dot(vec3(_1478, _1479, _1480), vec3(_1478, _1479, _1480)));
        float _1497 = ((_1484 * _1478) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1435 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1498 = ((_1484 * _1479) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1439 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1499 = ((_1484 * _1480) / cbModelParam._m0[35u].z) + ((((((_1443 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1501 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1497, _1498, _1499), 0.0);
        vec4 _1508 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1497, _1498, _1499), 0.0);
        vec4 _1515 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1497, _1498, _1499), 0.0);
        vec4 _1522 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1497, _1498, _1499), 0.0);
        float _1534 = exp2((_1501.w + (-0.5)) * 20.0) * 2.0;
        float _1535 = _1534 * (_1501.x + (-0.5));
        float _1536 = _1534 * (_1501.y + (-0.5));
        float _1537 = _1534 * (_1501.z + (-0.5));
        float _1544 = exp2((_1508.w + (-0.5)) * 20.0) * 2.0;
        float _1545 = _1544 * (_1508.x + (-0.5));
        float _1546 = _1544 * (_1508.y + (-0.5));
        float _1547 = _1544 * (_1508.z + (-0.5));
        float _1554 = exp2((_1515.w + (-0.5)) * 20.0) * 2.0;
        float _1555 = _1554 * (_1515.x + (-0.5));
        float _1556 = _1554 * (_1515.y + (-0.5));
        float _1557 = _1554 * (_1515.z + (-0.5));
        float _1564 = exp2((_1522.w + (-0.5)) * 20.0) * 2.0;
        float _1565 = _1564 * (_1522.x + (-0.5));
        float _1566 = _1564 * (_1522.y + (-0.5));
        float _1567 = _1564 * (_1522.z + (-0.5));
        float _1568 = isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0));
        float _1569 = isnan(0.0) ? _1566 : (isnan(_1566) ? 0.0 : max(_1566, 0.0));
        float _1570 = isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0));
        float _1571 = _1535 * 0.5;
        float _1572 = _1545 * 0.5;
        float _1573 = _1555 * 0.5;
        float _1574 = dot(vec3(_1571, _1572, _1573), vec3(_1571, _1572, _1573));
        float _1579 = (_1574 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1574);
        float _1587 = (dot(vec3(_833, _834, _835), vec3(_1579 * _1571, _1579 * _1572, _1579 * _1573)) + 1.0) * 0.5;
        float _4117 = isnan(0.0) ? _1587 : (isnan(_1587) ? 0.0 : max(_1587, 0.0));
        float _1596 = sqrt(((_1572 * _1572) + (_1571 * _1571)) + (_1573 * _1573)) / (_1568 + 9.9999997473787516355514526367188e-06);
        float _4128 = isnan(0.0) ? _1596 : (isnan(_1596) ? 0.0 : max(_1596, 0.0));
        float _1597 = isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0));
        float _1598 = _1597 * 2.0;
        float _1602 = (1.0 - _1597) / (_1597 + 1.0);
        float _4139 = isnan(0.0) ? _1602 : (isnan(_1602) ? 0.0 : max(_1602, 0.0));
        float _1603 = isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0));
        float _1612 = ((((1.0 - _1603) * (_1598 + 2.0)) * exp2(log2(isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0))) * (_1598 + 1.0))) + _1603) * _1568;
        float _1613 = _1536 * 0.5;
        float _1614 = _1546 * 0.5;
        float _1615 = _1556 * 0.5;
        float _1616 = dot(vec3(_1613, _1614, _1615), vec3(_1613, _1614, _1615));
        float _1621 = (_1616 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1616);
        float _1629 = (dot(vec3(_833, _834, _835), vec3(_1621 * _1613, _1621 * _1614, _1621 * _1615)) + 1.0) * 0.5;
        float _4150 = isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0));
        float _1638 = sqrt(((_1614 * _1614) + (_1613 * _1613)) + (_1615 * _1615)) / (_1569 + 9.9999997473787516355514526367188e-06);
        float _4161 = isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0));
        float _1639 = isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0));
        float _1640 = _1639 * 2.0;
        float _1644 = (1.0 - _1639) / (_1639 + 1.0);
        float _4172 = isnan(0.0) ? _1644 : (isnan(_1644) ? 0.0 : max(_1644, 0.0));
        float _1645 = isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0));
        float _1654 = ((((1.0 - _1645) * (_1640 + 2.0)) * exp2(log2(isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0))) * (_1640 + 1.0))) + _1645) * _1569;
        float _1655 = _1537 * 0.5;
        float _1656 = _1547 * 0.5;
        float _1657 = _1557 * 0.5;
        float _1658 = dot(vec3(_1655, _1656, _1657), vec3(_1655, _1656, _1657));
        float _1663 = (_1658 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1658);
        float _1671 = (dot(vec3(_833, _834, _835), vec3(_1663 * _1655, _1663 * _1656, _1663 * _1657)) + 1.0) * 0.5;
        float _4183 = isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0));
        float _1680 = sqrt(((_1656 * _1656) + (_1655 * _1655)) + (_1657 * _1657)) / (_1570 + 9.9999997473787516355514526367188e-06);
        float _4194 = isnan(0.0) ? _1680 : (isnan(_1680) ? 0.0 : max(_1680, 0.0));
        float _1681 = isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0));
        float _1682 = _1681 * 2.0;
        float _1686 = (1.0 - _1681) / (_1681 + 1.0);
        float _4205 = isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0));
        float _1687 = isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0));
        float _1696 = ((((1.0 - _1687) * (_1682 + 2.0)) * exp2(log2(isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0))) * (_1682 + 1.0))) + _1687) * _1570;
        _1704 = _1537;
        _1705 = _1536;
        _1706 = _1535;
        _1707 = _1547;
        _1708 = _1546;
        _1709 = _1545;
        _1710 = _1557;
        _1711 = _1556;
        _1712 = _1555;
        _1713 = _1570;
        _1714 = _1569;
        _1715 = _1568;
        _1716 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1612 : (isnan(_1612) ? 0.0 : max(_1612, 0.0)));
        _1717 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0)));
        _1718 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0)));
    }
    else
    {
        _1704 = _1394;
        _1705 = _1394;
        _1706 = _1394;
        _1707 = _1394;
        _1708 = _1394;
        _1709 = _1394;
        _1710 = _1394;
        _1711 = _1394;
        _1712 = _1394;
        _1713 = _1394;
        _1714 = _1394;
        _1715 = _1394;
        _1716 = 0.0;
        _1717 = 0.0;
        _1718 = 0.0;
    }
    float _1728 = (cbModelParam._m0[1u].x * (_1716 - _1406)) + _1406;
    float _1729 = (cbModelParam._m0[1u].x * (_1717 - _1407)) + _1407;
    float _1730 = (cbModelParam._m0[1u].x * (_1718 - _1408)) + _1408;
    float _1751 = fma(_1730, cbSceneParam._m0[89u].z, fma(_1729, cbSceneParam._m0[89u].y, _1728 * cbSceneParam._m0[89u].x));
    float _1754 = fma(_1730, cbSceneParam._m0[90u].z, fma(_1729, cbSceneParam._m0[90u].y, _1728 * cbSceneParam._m0[90u].x));
    float _1757 = fma(_1730, cbSceneParam._m0[91u].z, fma(_1729, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1728));
    float _1772 = _1003 * 0.5;
    float _1773 = _1004 * 0.5;
    float _1774 = _1005 * 0.5;
    float _1775 = dot(vec4(_1772, _1773, _1774, 1.0), vec4(_1706, _1709, _1712, _1715));
    float _1778 = dot(vec4(_1772, _1773, _1774, 1.0), vec4(_1705, _1708, _1711, _1714));
    float _1781 = dot(vec4(_1772, _1773, _1774, 1.0), vec4(_1704, _1707, _1710, _1713));
    float _1815;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1788 = dot(vec4(_1772, _1773, _1774, 1.0), vec4(_1393, _1397, _1400, _1403));
        float _1792 = dot(vec4(_1772, _1773, _1774, 1.0), vec4(_1395, _1398, _1401, _1404));
        float _1796 = dot(vec4(_1772, _1773, _1774, 1.0), vec4(_1396, _1399, _1402, _1405));
        float _1803 = dot(vec4(cbModelParam._m0[39u]), vec4(_1772, _1773, _1774, 1.0));
        _1815 = dot(vec3(isnan(0.0) ? _1796 : (isnan(_1796) ? 0.0 : max(_1796, 0.0)), isnan(0.0) ? _1792 : (isnan(_1792) ? 0.0 : max(_1792, 0.0)), isnan(0.0) ? _1788 : (isnan(_1788) ? 0.0 : max(_1788, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1803) ? 0.0 : (isnan(0.0) ? _1803 : max(0.0, _1803))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1815 = 1.0;
    }
    float _1826;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1817 = dot(vec4(cbModelParam._m0[40u]), vec4(_1772, _1773, _1774, 1.0));
        _1826 = dot(vec3(isnan(0.0) ? _1775 : (isnan(_1775) ? 0.0 : max(_1775, 0.0)), isnan(0.0) ? _1778 : (isnan(_1778) ? 0.0 : max(_1778, 0.0)), isnan(0.0) ? _1781 : (isnan(_1781) ? 0.0 : max(_1781, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1817) ? 0.0 : (isnan(0.0) ? _1817 : max(0.0, _1817))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1826 = 1.0;
    }
    float _1830 = (_1826 * cbModelParam._m0[1u].x) + (_1815 * (1.0 - cbModelParam._m0[1u].x));
    float _1840 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _836);
    float _1841 = isnan(_1840) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1840 : min(cbModelParam._m0[25u].z, _1840));
    float _1922;
    float _1924;
    float _1926;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1889 = fma(_1064, cbModelParam._m0[13u].z, fma(_1060, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1056)) + cbModelParam._m0[13u].w;
        float _1893 = fma(_1064, cbModelParam._m0[14u].z, fma(_1060, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1056)) + cbModelParam._m0[14u].w;
        float _1897 = fma(_1064, cbModelParam._m0[15u].z, fma(_1060, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1056)) + cbModelParam._m0[15u].w;
        float _1900 = fma(_1005, cbModelParam._m0[13u].z, fma(_1004, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1003));
        float _1903 = fma(_1005, cbModelParam._m0[14u].z, fma(_1004, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1003));
        float _1906 = fma(_1005, cbModelParam._m0[15u].z, fma(_1004, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1003));
        float _1934;
        if (_1900 > 0.0)
        {
            _1934 = abs((1.0 - _1889) / _1900);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1900 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1889 + 1.0) / _1900);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1934 = frontier_phi_17_15_ladder;
        }
        float _2135;
        if (_1903 > 0.0)
        {
            _2135 = abs((1.0 - _1893) / _1903);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1903 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1893 + 1.0) / _1903);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2135 = frontier_phi_26_22_ladder;
        }
        float _2378;
        if (_1906 > 0.0)
        {
            _2378 = abs((1.0 - _1897) / _1906);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1906 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1897 + 1.0) / _1906);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2378 = frontier_phi_38_33_ladder;
        }
        float _2380 = isnan(_2135) ? _1934 : (isnan(_1934) ? _2135 : min(_1934, _2135));
        float _2381 = isnan(_2378) ? _2380 : (isnan(_2380) ? _2378 : min(_2380, _2378));
        float _2385 = (_2381 * _1900) + _1889;
        float _2386 = (_2381 * _1903) + _1893;
        float _2387 = (_2381 * _1906) + _1897;
        float _2388 = _2381 * 9.9999997473787516355514526367188e-05;
        float _2390 = (-1.0) - _2388;
        float _2392 = _2388 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2387 > _2392) || ((_2387 < _2390) || ((_2386 > _2392) || ((_2386 < _2390) || ((_2385 < _2390) || (_2385 > _2392))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2511 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2387, cbModelParam._m0[9u].z, fma(_2386, cbModelParam._m0[9u].y, _2385 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2387, cbModelParam._m0[10u].z, fma(_2386, cbModelParam._m0[10u].y, _2385 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2387, cbModelParam._m0[11u].z, fma(_2386, cbModelParam._m0[11u].y, _2385 * cbModelParam._m0[11u].x))), _1841);
            frontier_phi_16_38_ladder = _2511.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2511.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2511.x * cbModelParam._m0[1u].y;
        }
        _1922 = frontier_phi_16_38_ladder_2;
        _1924 = frontier_phi_16_38_ladder_1;
        _1926 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1910 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1003, _1004, _1005), _1841);
        _1922 = _1910.x * cbModelParam._m0[1u].y;
        _1924 = _1910.y * cbModelParam._m0[1u].y;
        _1926 = _1910.z * cbModelParam._m0[1u].y;
    }
    float _1930 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _836);
    float _1931 = isnan(_1930) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1930 : min(cbModelParam._m0[25u].w, _1930));
    float _2021;
    float _2023;
    float _2025;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1985 = fma(_1064, cbModelParam._m0[21u].z, fma(_1060, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1056)) + cbModelParam._m0[21u].w;
        float _1989 = fma(_1064, cbModelParam._m0[22u].z, fma(_1060, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1056)) + cbModelParam._m0[22u].w;
        float _1993 = fma(_1064, cbModelParam._m0[23u].z, fma(_1060, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1056)) + cbModelParam._m0[23u].w;
        float _1996 = fma(_1005, cbModelParam._m0[21u].z, fma(_1004, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1003));
        float _1999 = fma(_1005, cbModelParam._m0[22u].z, fma(_1004, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1003));
        float _2002 = fma(_1005, cbModelParam._m0[23u].z, fma(_1004, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1003));
        float _2140;
        if (_1996 > 0.0)
        {
            _2140 = abs((1.0 - _1985) / _1996);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1996 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1985 + 1.0) / _1996);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2140 = frontier_phi_28_24_ladder;
        }
        float _2405;
        if (_1999 > 0.0)
        {
            _2405 = abs((1.0 - _1989) / _1999);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1999 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1989 + 1.0) / _1999);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2405 = frontier_phi_40_35_ladder;
        }
        float _2610;
        if (_2002 > 0.0)
        {
            _2610 = abs((1.0 - _1993) / _2002);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_2002 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1993 + 1.0) / _2002);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2610 = frontier_phi_49_46_ladder;
        }
        float _2612 = isnan(_2405) ? _2140 : (isnan(_2140) ? _2405 : min(_2140, _2405));
        float _2613 = isnan(_2610) ? _2612 : (isnan(_2612) ? _2610 : min(_2612, _2610));
        float _2617 = (_2613 * _1996) + _1985;
        float _2618 = (_2613 * _1999) + _1989;
        float _2619 = (_2613 * _2002) + _1993;
        float _2620 = _2613 * 9.9999997473787516355514526367188e-05;
        float _2621 = (-1.0) - _2620;
        float _2623 = _2620 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_2619 > _2623) || ((_2619 < _2621) || ((_2618 > _2623) || ((_2618 < _2621) || ((_2617 < _2621) || (_2617 > _2623))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2818 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2619, cbModelParam._m0[17u].z, fma(_2618, cbModelParam._m0[17u].y, _2617 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2619, cbModelParam._m0[18u].z, fma(_2618, cbModelParam._m0[18u].y, _2617 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2619, cbModelParam._m0[19u].z, fma(_2618, cbModelParam._m0[19u].y, _2617 * cbModelParam._m0[19u].x))), _1931);
            frontier_phi_25_49_ladder = _2818.z * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_1 = _2818.y * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_2 = _2818.x * cbModelParam._m0[1u].z;
        }
        _2021 = frontier_phi_25_49_ladder_2;
        _2023 = frontier_phi_25_49_ladder_1;
        _2025 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _2005 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1003, _1004, _1005), _1931);
        _2021 = _2005.x * cbModelParam._m0[1u].z;
        _2023 = _2005.y * cbModelParam._m0[1u].z;
        _2025 = _2005.z * cbModelParam._m0[1u].z;
    }
    float _2037 = ((((1.0 - _1024) * ((_1011 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1024 * _1011)) * _995;
    float _2038 = _2037 * ((cbModelParam._m0[1u].w * (_2021 - _1922)) + _1922);
    float _2039 = _2037 * ((cbModelParam._m0[1u].w * (_2023 - _1924)) + _1924);
    float _2040 = _2037 * ((cbModelParam._m0[1u].w * (_2025 - _1926)) + _1926);
    float _2043 = fma(_2040, cbSceneParam._m0[89u].z, fma(_2039, cbSceneParam._m0[89u].y, _2038 * cbSceneParam._m0[89u].x));
    float _2046 = fma(_2040, cbSceneParam._m0[90u].z, fma(_2039, cbSceneParam._m0[90u].y, _2038 * cbSceneParam._m0[90u].x));
    float _2049 = fma(_2040, cbSceneParam._m0[91u].z, fma(_2039, cbSceneParam._m0[91u].y, _2038 * cbSceneParam._m0[91u].x));
    uvec4 _2059 = floatBitsToUint(cbInstanceData._m0[_259 + 5u]);
    uint _2061 = _2059.x * 14u;
    uint _2062 = _2061 + 13u;
    float _2069 = _995 + (-1.0);
    float _2074 = (cbLight._m0[_2062].x * _2069) + 1.0;
    float _2075 = (cbLight._m0[_2062].y * _2069) + 1.0;
    float _2076 = (cbLight._m0[_2062].z * _2069) + 1.0;
    float _2077 = (cbLight._m0[_2062].w * _2069) + 1.0;
    uint _2078 = _2061 + 5u;
    float _2084 = isnan(1.0) ? _2075 : (isnan(_2075) ? 1.0 : min(_2075, 1.0));
    uint _2088 = _2061 + 4u;
    float _2094 = isnan(1.0) ? _2074 : (isnan(_2074) ? 1.0 : min(_2074, 1.0));
    uint _2098 = _2061 | 1u;
    float _2109 = dot(vec3(cbLight._m0[_2061].xyz), vec3(_833, _834, _835));
    float _2112 = dot(vec3(cbLight._m0[_2098].xyz), vec3(_833, _834, _835));
    float _4341 = isnan(0.0) ? _2109 : (isnan(_2109) ? 0.0 : max(_2109, 0.0));
    float _4352 = isnan(0.0) ? _2112 : (isnan(_2112) ? 0.0 : max(_2112, 0.0));
    float _2117 = (isnan(1.0) ? _4341 : (isnan(_4341) ? 1.0 : min(_4341, 1.0))) * 0.3183098733425140380859375;
    float _2119 = (isnan(1.0) ? _4352 : (isnan(_4352) ? 1.0 : min(_4352, 1.0))) * 0.3183098733425140380859375;
    float _2126 = ((cbLight._m0[_2078].x * _2084) * _2119) + ((cbLight._m0[_2088].x * _2094) * _2117);
    float _2127 = ((_2084 * cbLight._m0[_2078].y) * _2119) + ((_2094 * cbLight._m0[_2088].y) * _2117);
    float _2128 = ((_2084 * cbLight._m0[_2078].z) * _2119) + ((_2094 * cbLight._m0[_2088].z) * _2117);
    uvec4 _2132 = floatBitsToUint(cbLight._m0[_2061 + 12u]);
    bool _2134 = _2132.x == 0u;
    float _2145;
    float _2147;
    float _2149;
    if (_2134)
    {
        _2145 = _2126;
        _2147 = _2127;
        _2149 = _2128;
    }
    else
    {
        uint _2153 = _2061 + 6u;
        float _2169 = (dot(vec3(cbLight._m0[_2061 + 2u].xyz), vec3(_833, _834, _835)) * 0.5) + 0.5;
        float _2170 = _2169 * _2169;
        float _4363 = isnan(0.0) ? _2170 : (isnan(_2170) ? 0.0 : max(_2170, 0.0));
        float _2171 = isnan(1.0) ? _4363 : (isnan(_4363) ? 1.0 : min(_4363, 1.0));
        float _2172 = isnan(1.0) ? _2076 : (isnan(_2076) ? 1.0 : min(_2076, 1.0));
        _2145 = (((cbLight._m0[_2153].x * 0.3183098733425140380859375) * _2171) * _2172) + _2126;
        _2147 = (((cbLight._m0[_2153].y * 0.3183098733425140380859375) * _2171) * _2172) + _2127;
        _2149 = (((cbLight._m0[_2153].z * 0.3183098733425140380859375) * _2171) * _2172) + _2128;
    }
    bool _2152 = _2132.y == 0u;
    float _2190;
    float _2192;
    float _2194;
    if (_2152)
    {
        _2190 = _2145;
        _2192 = _2147;
        _2194 = _2149;
    }
    else
    {
        uint _2349 = _2061 + 7u;
        float _2365 = (dot(vec3(cbLight._m0[_2061 + 3u].xyz), vec3(_833, _834, _835)) * 0.5) + 0.5;
        float _2366 = _2365 * _2365;
        float _4379 = isnan(0.0) ? _2366 : (isnan(_2366) ? 0.0 : max(_2366, 0.0));
        float _2367 = isnan(1.0) ? _4379 : (isnan(_4379) ? 1.0 : min(_4379, 1.0));
        float _2368 = isnan(1.0) ? _2077 : (isnan(_2077) ? 1.0 : min(_2077, 1.0));
        _2190 = (((cbLight._m0[_2349].x * 0.3183098733425140380859375) * _2367) * _2368) + _2145;
        _2192 = (((cbLight._m0[_2349].y * 0.3183098733425140380859375) * _2367) * _2368) + _2147;
        _2194 = (((cbLight._m0[_2349].z * 0.3183098733425140380859375) * _2367) * _2368) + _2149;
    }
    uint _2197 = _2061 + 8u;
    float _2210 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2061].w)) * _836) * 0.949999988079071044921875);
    float _2211 = _2210 * _2210;
    float _2212 = cbLight._m0[_2061].x + _912;
    float _2213 = cbLight._m0[_2061].y + _913;
    float _2214 = cbLight._m0[_2061].z + _914;
    float _2218 = inversesqrt(dot(vec3(_2212, _2213, _2214), vec3(_2212, _2213, _2214)));
    float _2219 = _2218 * _2212;
    float _2220 = _2218 * _2213;
    float _2221 = _2218 * _2214;
    float _2222 = dot(vec3(_833, _834, _835), vec3(cbLight._m0[_2061].xyz));
    float _4395 = isnan(0.0) ? _2222 : (isnan(_2222) ? 0.0 : max(_2222, 0.0));
    float _2225 = isnan(1.0) ? _4395 : (isnan(_4395) ? 1.0 : min(_4395, 1.0));
    float _4406 = isnan(0.0) ? _996 : (isnan(_996) ? 0.0 : max(_996, 0.0));
    float _2226 = isnan(1.0) ? _4406 : (isnan(_4406) ? 1.0 : min(_4406, 1.0));
    float _2227 = dot(vec3(_833, _834, _835), vec3(_2219, _2220, _2221));
    float _4417 = isnan(0.0) ? _2227 : (isnan(_2227) ? 0.0 : max(_2227, 0.0));
    float _2230 = isnan(1.0) ? _4417 : (isnan(_4417) ? 1.0 : min(_4417, 1.0));
    float _2231 = dot(vec3(cbLight._m0[_2061].xyz), vec3(_2219, _2220, _2221));
    float _4428 = isnan(0.0) ? _2231 : (isnan(_2231) ? 0.0 : max(_2231, 0.0));
    float _2235 = _2211 * _2211;
    float _2239 = ((_2230 * _2230) * (_2235 + (-1.0))) + 1.0;
    float _2250 = (exp2(log2(1.0 - (isnan(1.0) ? _4428 : (isnan(_4428) ? 1.0 : min(_4428, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2251 = 1.0 - _2211;
    float _2262 = (0.5 / (((_2226 * ((_2225 * _2251) + _2211)) + 9.9999999392252902907785028219223e-09) + (((_2226 * _2251) + _2211) * _2225))) * _2225;
    float _4439 = isnan(0.0) ? _2262 : (isnan(_2262) ? 0.0 : max(_2262, 0.0));
    float _2264 = (isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0))) * (_2235 / ((_2239 * _2239) * 3.141590118408203125));
    uint _2275 = _2061 + 9u;
    float _2286 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2098].w)) * _836) * 0.949999988079071044921875);
    float _2287 = _2286 * _2286;
    float _2288 = cbLight._m0[_2098].x + _912;
    float _2289 = cbLight._m0[_2098].y + _913;
    float _2290 = cbLight._m0[_2098].z + _914;
    float _2294 = inversesqrt(dot(vec3(_2288, _2289, _2290), vec3(_2288, _2289, _2290)));
    float _2295 = _2294 * _2288;
    float _2296 = _2294 * _2289;
    float _2297 = _2294 * _2290;
    float _2298 = dot(vec3(_833, _834, _835), vec3(cbLight._m0[_2098].xyz));
    float _4450 = isnan(0.0) ? _2298 : (isnan(_2298) ? 0.0 : max(_2298, 0.0));
    float _2301 = isnan(1.0) ? _4450 : (isnan(_4450) ? 1.0 : min(_4450, 1.0));
    float _2302 = dot(vec3(_833, _834, _835), vec3(_2295, _2296, _2297));
    float _4461 = isnan(0.0) ? _2302 : (isnan(_2302) ? 0.0 : max(_2302, 0.0));
    float _2305 = isnan(1.0) ? _4461 : (isnan(_4461) ? 1.0 : min(_4461, 1.0));
    float _2306 = dot(vec3(cbLight._m0[_2098].xyz), vec3(_2295, _2296, _2297));
    float _4472 = isnan(0.0) ? _2306 : (isnan(_2306) ? 0.0 : max(_2306, 0.0));
    float _2310 = _2287 * _2287;
    float _2314 = ((_2305 * _2305) * (_2310 + (-1.0))) + 1.0;
    float _2323 = (exp2(log2(1.0 - (isnan(1.0) ? _4472 : (isnan(_4472) ? 1.0 : min(_4472, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2324 = 1.0 - _2287;
    float _2334 = (0.5 / (((_2226 * ((_2301 * _2324) + _2287)) + 9.9999999392252902907785028219223e-09) + (((_2226 * _2324) + _2287) * _2301))) * _2301;
    float _4483 = isnan(0.0) ? _2334 : (isnan(_2334) ? 0.0 : max(_2334, 0.0));
    float _2336 = (isnan(1.0) ? _4483 : (isnan(_4483) ? 1.0 : min(_4483, 1.0))) * (_2310 / ((_2314 * _2314) * 3.141590118408203125));
    float _2346 = (((_2323 * cbLight._m0[_2275].x) * _2336) * _2084) + (((_2250 * cbLight._m0[_2197].x) * _2264) * _2094);
    float _2347 = (((_2323 * cbLight._m0[_2275].y) * _2336) * _2084) + (((_2250 * cbLight._m0[_2197].y) * _2264) * _2094);
    float _2348 = (((_2323 * cbLight._m0[_2275].z) * _2336) * _2084) + (((_2250 * cbLight._m0[_2197].z) * _2264) * _2094);
    float _2410;
    float _2412;
    float _2414;
    if (_2134)
    {
        _2410 = _2346;
        _2412 = _2347;
        _2414 = _2348;
    }
    else
    {
        uint _2416 = _2061 + 2u;
        uint _2420 = _2061 + 10u;
        float _2434 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2416].w)) * _836) * 0.949999988079071044921875);
        float _2435 = _2434 * _2434;
        float _2436 = cbLight._m0[_2416].x + _912;
        float _2437 = cbLight._m0[_2416].y + _913;
        float _2438 = cbLight._m0[_2416].z + _914;
        float _2442 = inversesqrt(dot(vec3(_2436, _2437, _2438), vec3(_2436, _2437, _2438)));
        float _2443 = _2442 * _2436;
        float _2444 = _2442 * _2437;
        float _2445 = _2442 * _2438;
        float _2446 = dot(vec3(_833, _834, _835), vec3(cbLight._m0[_2416].xyz));
        float _4494 = isnan(0.0) ? _2446 : (isnan(_2446) ? 0.0 : max(_2446, 0.0));
        float _2449 = isnan(1.0) ? _4494 : (isnan(_4494) ? 1.0 : min(_4494, 1.0));
        float _2450 = dot(vec3(_833, _834, _835), vec3(_2443, _2444, _2445));
        float _4505 = isnan(0.0) ? _2450 : (isnan(_2450) ? 0.0 : max(_2450, 0.0));
        float _2453 = isnan(1.0) ? _4505 : (isnan(_4505) ? 1.0 : min(_4505, 1.0));
        float _2454 = dot(vec3(cbLight._m0[_2416].xyz), vec3(_2443, _2444, _2445));
        float _4516 = isnan(0.0) ? _2454 : (isnan(_2454) ? 0.0 : max(_2454, 0.0));
        float _2458 = _2435 * _2435;
        float _2462 = ((_2453 * _2453) * (_2458 + (-1.0))) + 1.0;
        float _2471 = (exp2(log2(1.0 - (isnan(1.0) ? _4516 : (isnan(_4516) ? 1.0 : min(_4516, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2472 = 1.0 - _2435;
        float _2482 = (0.5 / (((_2226 * ((_2449 * _2472) + _2435)) + 9.9999999392252902907785028219223e-09) + (((_2226 * _2472) + _2435) * _2449))) * _2449;
        float _4527 = isnan(0.0) ? _2482 : (isnan(_2482) ? 0.0 : max(_2482, 0.0));
        float _2484 = (isnan(1.0) ? _4527 : (isnan(_4527) ? 1.0 : min(_4527, 1.0))) * (_2458 / ((_2462 * _2462) * 3.141590118408203125));
        float _2485 = isnan(1.0) ? _2076 : (isnan(_2076) ? 1.0 : min(_2076, 1.0));
        _2410 = (((_2471 * cbLight._m0[_2420].x) * _2484) * _2485) + _2346;
        _2412 = (((_2471 * cbLight._m0[_2420].y) * _2484) * _2485) + _2347;
        _2414 = (((_2471 * cbLight._m0[_2420].z) * _2484) * _2485) + _2348;
    }
    float _2520;
    float _2522;
    float _2524;
    if (_2152)
    {
        _2520 = _2410;
        _2522 = _2412;
        _2524 = _2414;
    }
    else
    {
        uint _2531 = _2061 + 3u;
        uint _2535 = _2061 + 11u;
        float _2549 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2531].w)) * _836) * 0.949999988079071044921875);
        float _2550 = _2549 * _2549;
        float _2551 = cbLight._m0[_2531].x + _912;
        float _2552 = cbLight._m0[_2531].y + _913;
        float _2553 = cbLight._m0[_2531].z + _914;
        float _2557 = inversesqrt(dot(vec3(_2551, _2552, _2553), vec3(_2551, _2552, _2553)));
        float _2558 = _2557 * _2551;
        float _2559 = _2557 * _2552;
        float _2560 = _2557 * _2553;
        float _2561 = dot(vec3(_833, _834, _835), vec3(cbLight._m0[_2531].xyz));
        float _4543 = isnan(0.0) ? _2561 : (isnan(_2561) ? 0.0 : max(_2561, 0.0));
        float _2564 = isnan(1.0) ? _4543 : (isnan(_4543) ? 1.0 : min(_4543, 1.0));
        float _2565 = dot(vec3(_833, _834, _835), vec3(_2558, _2559, _2560));
        float _4554 = isnan(0.0) ? _2565 : (isnan(_2565) ? 0.0 : max(_2565, 0.0));
        float _2568 = isnan(1.0) ? _4554 : (isnan(_4554) ? 1.0 : min(_4554, 1.0));
        float _2569 = dot(vec3(cbLight._m0[_2531].xyz), vec3(_2558, _2559, _2560));
        float _4565 = isnan(0.0) ? _2569 : (isnan(_2569) ? 0.0 : max(_2569, 0.0));
        float _2573 = _2550 * _2550;
        float _2577 = ((_2568 * _2568) * (_2573 + (-1.0))) + 1.0;
        float _2586 = (exp2(log2(1.0 - (isnan(1.0) ? _4565 : (isnan(_4565) ? 1.0 : min(_4565, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2587 = 1.0 - _2550;
        float _2597 = (0.5 / (((_2226 * ((_2564 * _2587) + _2550)) + 9.9999999392252902907785028219223e-09) + (((_2226 * _2587) + _2550) * _2564))) * _2564;
        float _4576 = isnan(0.0) ? _2597 : (isnan(_2597) ? 0.0 : max(_2597, 0.0));
        float _2599 = (isnan(1.0) ? _4576 : (isnan(_4576) ? 1.0 : min(_4576, 1.0))) * (_2573 / ((_2577 * _2577) * 3.141590118408203125));
        float _2600 = isnan(1.0) ? _2077 : (isnan(_2077) ? 1.0 : min(_2077, 1.0));
        _2520 = (((_2586 * cbLight._m0[_2535].x) * _2599) * _2600) + _2410;
        _2522 = (((_2586 * cbLight._m0[_2535].y) * _2599) * _2600) + _2412;
        _2524 = (((_2586 * cbLight._m0[_2535].z) * _2599) * _2600) + _2414;
    }
    float _2735;
    float _2737;
    float _2739;
    float _2741;
    float _2743;
    float _2745;
    if (_2059.y == 0u)
    {
        float _2675 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2676 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2675;
        float _2677 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2675;
        float _2678 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2675;
        uvec4 _2690 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2691 = _2690.x;
        uint _2702 = uint((float(_2690.y) * floor(float(uint(cbSceneParam._m0[85u].y * _933) / _2691))) + floor(float(uint(cbSceneParam._m0[85u].x * _932) / _2691)));
        float _2712 = (log2(_2678 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2713 = isnan(0.0) ? _2712 : (isnan(_2712) ? 0.0 : max(_2712, 0.0));
        uint _2716 = uint(isnan(14.0) ? _2713 : (isnan(_2713) ? 14.0 : min(_2713, 14.0)));
        uvec4 _2721 = texelFetch(g_lightClusterGridBuffer, int(((_2716 << 2u) + (_2702 << 6u)) >> 2u));
        uint _2722 = _2721.x;
        uint _2723 = _2690.z;
        float _2823;
        float _2825;
        float _2827;
        float _2829;
        float _2831;
        float _2833;
        if (((((1u << ((_2723 >> 4u) & 15u)) + 4294967295u) & _2722) == 0u) || ((_2723 & 240u) == 0u))
        {
            _2823 = 0.0;
            _2825 = 0.0;
            _2827 = 0.0;
            _2829 = 0.0;
            _2831 = 0.0;
            _2833 = 0.0;
        }
        else
        {
            float _2824;
            float _2826;
            float _2828;
            float _2830;
            float _2832;
            float _2834;
            float _2976 = 0.0;
            float _2977 = 0.0;
            float _2978 = 0.0;
            float _2979 = 0.0;
            float _2980 = 0.0;
            float _2981 = 0.0;
            uint _2982 = 0u;
            uint _2991;
            bool _2992;
            for (;;)
            {
                _2991 = texelFetch(g_lightClassification, int((((_2716 << 5u) + (_2702 << 9u)) + (_2982 << 2u)) >> 2u)).x;
                _2992 = _2991 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_2992)
                {
                    frontier_phi_66_pred = _2976;
                    frontier_phi_66_pred_1 = _2981;
                    frontier_phi_66_pred_2 = _2980;
                    frontier_phi_66_pred_3 = _2979;
                    frontier_phi_66_pred_4 = _2978;
                    frontier_phi_66_pred_5 = _2977;
                }
                else
                {
                    float _3121;
                    float _3122;
                    float _3123;
                    float _3124;
                    float _3125;
                    float _3126;
                    uint _3127;
                    _3121 = _2976;
                    _3122 = _2977;
                    _3123 = _2978;
                    _3124 = _2979;
                    _3125 = _2980;
                    _3126 = _2981;
                    _3127 = _2991;
                    float _3048;
                    float _3049;
                    float _3050;
                    float _3051;
                    float _3052;
                    float _3053;
                    for (;;)
                    {
                        uint _3131 = uint(findLSB(_3127)) + (_2982 << 5u);
                        uint _3128 = (_3127 + 4294967295u) & _3127;
                        uint _3133 = _3131 * 48u;
                        vec4 _3147 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3133)).x, texelFetch(g_PointLightRenderingBuffer, int(_3133 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3133 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3133 + 3u)).x));
                        uint _3153 = (_3131 * 48u) + 4u;
                        vec4 _3166 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3153)).x, texelFetch(g_PointLightRenderingBuffer, int(_3153 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3153 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3153 + 3u)).x));
                        uint _3172 = (_3131 * 48u) + 8u;
                        vec3 _3183 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3172)).x, texelFetch(g_PointLightRenderingBuffer, int(_3172 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3172 + 2u)).x));
                        float _3187 = _3147.x - _2676;
                        float _3188 = _3147.y - _2677;
                        float _3189 = _3147.z - _2678;
                        float _3190 = dot(vec3(_3187, _3188, _3189), vec3(_3187, _3188, _3189));
                        float _3193 = inversesqrt(_3190);
                        float _3194 = _3193 * _3187;
                        float _3195 = _3193 * _3188;
                        float _3196 = _3193 * _3189;
                        float _3197 = dot(vec3(_951, _954, _957), vec3(_3194, _3195, _3196));
                        float _3202 = 1.0 - (_3190 * _3147.w);
                        float _4602 = isnan(0.0) ? _3202 : (isnan(_3202) ? 0.0 : max(_3202, 0.0));
                        float _3203 = isnan(1.0) ? _4602 : (isnan(_4602) ? 1.0 : min(_4602, 1.0));
                        float _3204 = sqrt(_3190) * _3166.w;
                        float _3207 = 1.39999997615814208984375 / (_3204 + 1.39999997615814208984375);
                        float _3208 = _3207 * _3207;
                        float _3211 = ((1.0 - _3208) * _3197) + _3208;
                        float _3214 = _3204 * _3204;
                        float _3218 = ((isnan(0.0) ? _3211 : (isnan(_3211) ? 0.0 : max(_3211, 0.0))) * _3203) / ((_3214 * 0.699999988079071044921875) + 1.0);
                        float _3222 = (-0.0) - _2676;
                        float _3223 = (-0.0) - _2677;
                        float _3224 = (-0.0) - _2678;
                        float _3228 = inversesqrt(dot(vec3(_3222, _3223, _3224), vec3(_3222, _3223, _3224)));
                        float _3229 = _3228 * _3222;
                        float _3230 = _3228 * _3223;
                        float _3231 = _3228 * _3224;
                        float _3239 = exp2(log2(1.0 / ((_3214 * 3.5) + 5.0)) * 0.25);
                        float _3240 = 1.0 - _1011;
                        float _3247 = sqrt(1.0 - ((1.0 - (_3240 * _3240)) * (1.0 - (_3239 * _3239))));
                        float _3248 = _3247 * _3247;
                        float _3249 = _3248 * _3248;
                        float _3250 = _3229 + _3194;
                        float _3251 = _3230 + _3195;
                        float _3252 = _3231 + _3196;
                        float _3256 = inversesqrt(dot(vec3(_3250, _3251, _3252), vec3(_3250, _3251, _3252)));
                        float _3260 = dot(vec3(_951, _954, _957), vec3(_3229, _3230, _3231));
                        float _4618 = isnan(0.0) ? _3260 : (isnan(_3260) ? 0.0 : max(_3260, 0.0));
                        float _3263 = isnan(1.0) ? _4618 : (isnan(_4618) ? 1.0 : min(_4618, 1.0));
                        float _3264 = dot(vec3(_951, _954, _957), vec3(_3256 * _3250, _3256 * _3251, _3256 * _3252));
                        float _4629 = isnan(0.0) ? _3264 : (isnan(_3264) ? 0.0 : max(_3264, 0.0));
                        float _3267 = isnan(1.0) ? _4629 : (isnan(_4629) ? 1.0 : min(_4629, 1.0));
                        float _3271 = ((_3267 * _3267) * (_3249 + (-1.0))) + 1.0;
                        float _3272 = _3207 * _3248;
                        float _3273 = _3272 * _3272;
                        float _3276 = ((1.0 - _3273) * _3197) + _3273;
                        float _4640 = isnan(0.0) ? _3276 : (isnan(_3276) ? 0.0 : max(_3276, 0.0));
                        float _3277 = isnan(1.0) ? _4640 : (isnan(_4640) ? 1.0 : min(_4640, 1.0));
                        float _3278 = 1.0 - _3248;
                        float _3288 = (0.5 / (((_3277 * ((_3263 * _3278) + _3248)) + 9.9999999392252902907785028219223e-09) + (((_3277 * _3278) + _3248) * _3263))) * _3277;
                        float _4651 = isnan(0.0) ? _3288 : (isnan(_3288) ? 0.0 : max(_3288, 0.0));
                        float _3299 = (((_3249 * 3.1415927410125732421875) * (isnan(1.0) ? _4651 : (isnan(_4651) ? 1.0 : min(_4651, 1.0)))) / ((_3271 * _3271) * ((_3214 * 2.1991131305694580078125) + 3.141590118408203125))) * _3203;
                        _3051 = (_3218 * _3166.x) + _3124;
                        _3052 = (_3218 * _3166.y) + _3125;
                        _3053 = (_3218 * _3166.z) + _3126;
                        _3048 = (_3299 * _3183.x) + _3121;
                        _3049 = (_3299 * _3183.y) + _3122;
                        _3050 = (_3299 * _3183.z) + _3123;
                        if (_3128 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3121 = _3048;
                            _3122 = _3049;
                            _3123 = _3050;
                            _3124 = _3051;
                            _3125 = _3052;
                            _3126 = _3053;
                            _3127 = _3128;
                        }
                    }
                    frontier_phi_66_pred = _3048;
                    frontier_phi_66_pred_1 = _3053;
                    frontier_phi_66_pred_2 = _3052;
                    frontier_phi_66_pred_3 = _3051;
                    frontier_phi_66_pred_4 = _3050;
                    frontier_phi_66_pred_5 = _3049;
                }
                _2824 = frontier_phi_66_pred;
                _2834 = frontier_phi_66_pred_1;
                _2832 = frontier_phi_66_pred_2;
                _2830 = frontier_phi_66_pred_3;
                _2828 = frontier_phi_66_pred_4;
                _2826 = frontier_phi_66_pred_5;
                uint _2983 = _2982 + 1u;
                if (_2983 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2976 = _2824;
                    _2977 = _2826;
                    _2978 = _2828;
                    _2979 = _2830;
                    _2980 = _2832;
                    _2981 = _2834;
                    _2982 = _2983;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2823 = _2824;
            _2825 = _2826;
            _2827 = _2828;
            _2829 = _2830;
            _2831 = _2832;
            _2833 = _2834;
        }
        uvec4 _2837 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2838 = _2837.z;
        uint _2840 = (_2838 >> 8u) & 15u;
        float _2944;
        float _2946;
        float _2948;
        float _2950;
        float _2952;
        float _2954;
        if (((4294967295u << _2840) & _2722) == 0u)
        {
            _2944 = _2823;
            _2946 = _2825;
            _2948 = _2827;
            _2950 = _2829;
            _2952 = _2831;
            _2954 = _2833;
        }
        else
        {
            float _2969 = inversesqrt(dot(vec3(_2676, _2677, _2678), vec3(_2676, _2677, _2678)));
            float _2970 = _2969 * _2676;
            float _2971 = _2969 * _2677;
            float _2972 = _2969 * _2678;
            float frontier_phi_58_59_ladder;
            float frontier_phi_58_59_ladder_1;
            float frontier_phi_58_59_ladder_2;
            float frontier_phi_58_59_ladder_3;
            float frontier_phi_58_59_ladder_4;
            float frontier_phi_58_59_ladder_5;
            if (_2840 < ((_2838 >> 12u) & 15u))
            {
                float _2945;
                float _2947;
                float _2949;
                float _2951;
                float _2953;
                float _2955;
                float _3104 = _2823;
                float _3105 = _2825;
                float _3106 = _2827;
                float _3107 = _2829;
                float _3108 = _2831;
                float _3109 = _2833;
                uint _3110 = _2840;
                uint _3119;
                bool _3120;
                for (;;)
                {
                    _3119 = texelFetch(g_lightClassification, int((((_2716 << 5u) + (_2702 << 9u)) + (_3110 << 2u)) >> 2u)).x;
                    _3120 = _3119 == 0u;
                    float frontier_phi_77_pred;
                    float frontier_phi_77_pred_1;
                    float frontier_phi_77_pred_2;
                    float frontier_phi_77_pred_3;
                    float frontier_phi_77_pred_4;
                    float frontier_phi_77_pred_5;
                    if (_3120)
                    {
                        frontier_phi_77_pred = _3109;
                        frontier_phi_77_pred_1 = _3108;
                        frontier_phi_77_pred_2 = _3107;
                        frontier_phi_77_pred_3 = _3106;
                        frontier_phi_77_pred_4 = _3105;
                        frontier_phi_77_pred_5 = _3104;
                    }
                    else
                    {
                        float _3313;
                        float _3314;
                        float _3315;
                        float _3316;
                        float _3317;
                        float _3318;
                        float _3606;
                        float _3607;
                        float _3608;
                        float _3609;
                        float _3610;
                        float _3611;
                        float _3326 = _3104;
                        float _3327 = _3105;
                        float _3328 = _3106;
                        float _3329 = _3107;
                        float _3330 = _3108;
                        float _3331 = _3109;
                        uint _3332 = _3119;
                        uint _3333;
                        vec4 _3358;
                        float _3359;
                        vec4 _3374;
                        vec3 _3386;
                        vec4 _3401;
                        vec4 _3416;
                        float _3462;
                        bool _3463;
                        for (;;)
                        {
                            uint _3343 = ((_3110 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3332));
                            _3333 = (_3332 + 4294967295u) & _3332;
                            uint _3345 = _3343 * 40u;
                            _3358 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3345)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3345 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3345 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3345 + 3u)).x));
                            _3359 = _3358.w;
                            uint _3361 = (_3343 * 40u) + 4u;
                            _3374 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3361)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3361 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3361 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3361 + 3u)).x));
                            uint _3376 = (_3343 * 40u) + 8u;
                            _3386 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3376)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3376 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3376 + 2u)).x));
                            uint _3388 = (_3343 * 40u) + 16u;
                            _3401 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3388)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3388 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3388 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3388 + 3u)).x));
                            uint _3403 = (_3343 * 40u) + 20u;
                            _3416 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3403)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3403 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3403 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3403 + 3u)).x));
                            uint _3418 = (_3343 * 40u) + 24u;
                            vec4 _3431 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3418)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3418 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3418 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3418 + 3u)).x));
                            uint _3437 = (_3343 * 40u) + 28u;
                            vec4 _3450 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3437)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3437 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3437 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3437 + 3u)).x));
                            _3462 = fma(_2678, _3450.z, fma(_2677, _3450.y, _3450.x * _2676)) + _3450.w;
                            _3463 = !((fma(_2678, _3431.z, fma(_2677, _3431.y, _3431.x * _2676)) + _3431.w) <= 0.0);
                            float frontier_phi_83_pred;
                            float frontier_phi_83_pred_1;
                            float frontier_phi_83_pred_2;
                            float frontier_phi_83_pred_3;
                            float frontier_phi_83_pred_4;
                            float frontier_phi_83_pred_5;
                            if (_3463)
                            {
                                float _3490 = _3358.x - _2676;
                                float _3491 = _3358.y - _2677;
                                float _3492 = _3358.z - _2678;
                                float _3493 = dot(vec3(_3490, _3491, _3492), vec3(_3490, _3491, _3492));
                                float _3496 = inversesqrt(_3493);
                                float _3497 = _3496 * _3490;
                                float _3498 = _3496 * _3491;
                                float _3499 = _3496 * _3492;
                                float _3503 = 1.0 - (_3493 / (_3359 * _3359));
                                float _4662 = isnan(0.0) ? _3503 : (isnan(_3503) ? 0.0 : max(_3503, 0.0));
                                float _3504 = isnan(1.0) ? _4662 : (isnan(_4662) ? 1.0 : min(_4662, 1.0));
                                float _3508 = sqrt(_3493) * _3374.w;
                                float _3510 = 1.39999997615814208984375 / (_3508 + 1.39999997615814208984375);
                                float _3511 = _3510 * _3510;
                                float _3514 = ((1.0 - _3511) * dot(vec3(_3497, _3498, _3499), vec3(_951, _954, _957))) + _3511;
                                float _3517 = _3508 * _3508;
                                float _3521 = (fma(_2678, _3401.z, fma(_2677, _3401.y, _3401.x * _2676)) + _3401.w) / _3462;
                                float _3522 = (fma(_2678, _3416.z, fma(_2677, _3416.y, _3416.x * _2676)) + _3416.w) / _3462;
                                float _3526 = 1.0 - dot(vec2(_3521, _3522), vec2(_3521, _3522));
                                float _4678 = isnan(0.0) ? _3526 : (isnan(_3526) ? 0.0 : max(_3526, 0.0));
                                float _3527 = isnan(1.0) ? _4678 : (isnan(_4678) ? 1.0 : min(_4678, 1.0));
                                float _3528 = _3527 * (((isnan(0.0) ? _3514 : (isnan(_3514) ? 0.0 : max(_3514, 0.0))) * _3504) / ((_3517 * 0.699999988079071044921875) + 1.0));
                                float _3540 = exp2(log2(1.0 / ((_3517 * 3.5) + 5.0)) * 0.25);
                                float _3541 = 1.0 - _1011;
                                float _3548 = sqrt(1.0 - ((1.0 - (_3541 * _3541)) * (1.0 - (_3540 * _3540))));
                                float _3549 = _3548 * _3548;
                                float _3550 = _3549 * _3549;
                                float _3551 = _3497 - _2970;
                                float _3552 = _3498 - _2971;
                                float _3553 = _3499 - _2972;
                                float _3557 = inversesqrt(dot(vec3(_3551, _3552, _3553), vec3(_3551, _3552, _3553)));
                                float _3561 = dot(vec3(_951, _954, _957), vec3((-0.0) - _2970, (-0.0) - _2971, (-0.0) - _2972));
                                float _4689 = isnan(0.0) ? _3561 : (isnan(_3561) ? 0.0 : max(_3561, 0.0));
                                float _3564 = isnan(1.0) ? _4689 : (isnan(_4689) ? 1.0 : min(_4689, 1.0));
                                float _3565 = dot(vec3(_951, _954, _957), vec3(_3557 * _3551, _3557 * _3552, _3557 * _3553));
                                float _4700 = isnan(0.0) ? _3565 : (isnan(_3565) ? 0.0 : max(_3565, 0.0));
                                float _3568 = isnan(1.0) ? _4700 : (isnan(_4700) ? 1.0 : min(_4700, 1.0));
                                float _3572 = ((_3568 * _3568) * (_3550 + (-1.0))) + 1.0;
                                float _3573 = _3510 * _3549;
                                float _3574 = _3573 * _3573;
                                float _3580 = ((1.0 - _3574) * dot(vec3(_951, _954, _957), vec3(_3497, _3498, _3499))) + _3574;
                                float _4711 = isnan(0.0) ? _3580 : (isnan(_3580) ? 0.0 : max(_3580, 0.0));
                                float _3581 = isnan(1.0) ? _4711 : (isnan(_4711) ? 1.0 : min(_4711, 1.0));
                                float _3582 = 1.0 - _3549;
                                float _3592 = (0.5 / (((_3581 * ((_3564 * _3582) + _3549)) + 9.9999999392252902907785028219223e-09) + (((_3581 * _3582) + _3549) * _3564))) * _3581;
                                float _4722 = isnan(0.0) ? _3592 : (isnan(_3592) ? 0.0 : max(_3592, 0.0));
                                float _3602 = (_3527 * _3504) * (((_3550 * 3.1415927410125732421875) * (isnan(1.0) ? _4722 : (isnan(_4722) ? 1.0 : min(_4722, 1.0)))) / ((_3572 * _3572) * ((_3517 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_83_pred = _3528 * _3374.y;
                                frontier_phi_83_pred_1 = _3528 * _3374.x;
                                frontier_phi_83_pred_2 = _3602 * _3386.z;
                                frontier_phi_83_pred_3 = _3602 * _3386.y;
                                frontier_phi_83_pred_4 = _3602 * _3386.x;
                                frontier_phi_83_pred_5 = _3528 * _3374.z;
                            }
                            else
                            {
                                frontier_phi_83_pred = 0.0;
                                frontier_phi_83_pred_1 = 0.0;
                                frontier_phi_83_pred_2 = 0.0;
                                frontier_phi_83_pred_3 = 0.0;
                                frontier_phi_83_pred_4 = 0.0;
                                frontier_phi_83_pred_5 = 0.0;
                            }
                            _3610 = frontier_phi_83_pred;
                            _3609 = frontier_phi_83_pred_1;
                            _3608 = frontier_phi_83_pred_2;
                            _3607 = frontier_phi_83_pred_3;
                            _3606 = frontier_phi_83_pred_4;
                            _3611 = frontier_phi_83_pred_5;
                            _3316 = _3609 + _3329;
                            _3317 = _3610 + _3330;
                            _3318 = _3611 + _3331;
                            _3313 = _3606 + _3326;
                            _3314 = _3607 + _3327;
                            _3315 = _3608 + _3328;
                            if (_3333 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3326 = _3313;
                                _3327 = _3314;
                                _3328 = _3315;
                                _3329 = _3316;
                                _3330 = _3317;
                                _3331 = _3318;
                                _3332 = _3333;
                                continue;
                            }
                        }
                        frontier_phi_77_pred = _3318;
                        frontier_phi_77_pred_1 = _3317;
                        frontier_phi_77_pred_2 = _3316;
                        frontier_phi_77_pred_3 = _3315;
                        frontier_phi_77_pred_4 = _3314;
                        frontier_phi_77_pred_5 = _3313;
                    }
                    _2955 = frontier_phi_77_pred;
                    _2953 = frontier_phi_77_pred_1;
                    _2951 = frontier_phi_77_pred_2;
                    _2949 = frontier_phi_77_pred_3;
                    _2947 = frontier_phi_77_pred_4;
                    _2945 = frontier_phi_77_pred_5;
                    uint _3111 = _3110 + 1u;
                    if (_3111 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3104 = _2945;
                        _3105 = _2947;
                        _3106 = _2949;
                        _3107 = _2951;
                        _3108 = _2953;
                        _3109 = _2955;
                        _3110 = _3111;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_58_59_ladder = _2949;
                frontier_phi_58_59_ladder_1 = _2955;
                frontier_phi_58_59_ladder_2 = _2953;
                frontier_phi_58_59_ladder_3 = _2951;
                frontier_phi_58_59_ladder_4 = _2947;
                frontier_phi_58_59_ladder_5 = _2945;
            }
            else
            {
                frontier_phi_58_59_ladder = _2827;
                frontier_phi_58_59_ladder_1 = _2833;
                frontier_phi_58_59_ladder_2 = _2831;
                frontier_phi_58_59_ladder_3 = _2829;
                frontier_phi_58_59_ladder_4 = _2825;
                frontier_phi_58_59_ladder_5 = _2823;
            }
            _2944 = frontier_phi_58_59_ladder_5;
            _2946 = frontier_phi_58_59_ladder_4;
            _2948 = frontier_phi_58_59_ladder;
            _2950 = frontier_phi_58_59_ladder_3;
            _2952 = frontier_phi_58_59_ladder_2;
            _2954 = frontier_phi_58_59_ladder_1;
        }
        float _2959 = isnan(1.0) ? _995 : (isnan(_995) ? 1.0 : min(_995, 1.0));
        _2735 = (_2959 * _2950) + _2190;
        _2737 = (_2959 * _2952) + _2192;
        _2739 = (_2959 * _2954) + _2194;
        _2741 = ((_2944 * 0.039999999105930328369140625) * _2959) + _2520;
        _2743 = ((_2946 * 0.039999999105930328369140625) * _2959) + _2522;
        _2745 = ((_2948 * 0.039999999105930328369140625) * _2959) + _2524;
    }
    else
    {
        _2735 = _2190;
        _2737 = _2192;
        _2739 = _2194;
        _2741 = _2520;
        _2743 = _2522;
        _2745 = _2524;
    }
    float _4738 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
    float _4749 = isnan(0.0) ? _981 : (isnan(_981) ? 0.0 : max(_981, 0.0));
    float _4760 = isnan(0.0) ? _982 : (isnan(_982) ? 0.0 : max(_982, 0.0));
    float _2762 = ((isnan(1.0) ? _4738 : (isnan(_4738) ? 1.0 : min(_4738, 1.0))) * (_2735 + ((isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0))) * _995))) + ((_2741 + ((isnan(0.0) ? _2043 : (isnan(_2043) ? 0.0 : max(_2043, 0.0))) * _1830)) * cbPerFrame._m0[3u].x);
    float _2763 = ((isnan(1.0) ? _4749 : (isnan(_4749) ? 1.0 : min(_4749, 1.0))) * (_2737 + ((isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0))) * _995))) + ((_2743 + ((isnan(0.0) ? _2046 : (isnan(_2046) ? 0.0 : max(_2046, 0.0))) * _1830)) * cbPerFrame._m0[3u].x);
    float _2764 = ((isnan(1.0) ? _4760 : (isnan(_4760) ? 1.0 : min(_4760, 1.0))) * (_2739 + ((isnan(0.0) ? _1757 : (isnan(_1757) ? 0.0 : max(_1757, 0.0))) * _995))) + ((_2745 + ((isnan(0.0) ? _2049 : (isnan(_2049) ? 0.0 : max(_2049, 0.0))) * _1830)) * cbPerFrame._m0[3u].x);
    uint _2765 = _259 + 6u;
    float _2773 = _932 / cbSceneParam._m0[86u].x;
    float _2774 = _933 / cbSceneParam._m0[86u].y;
    vec4 _2788 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2773, _2774, (log2((isnan(cbSceneParam._m0[77u].w) ? _854 : (isnan(_854) ? cbSceneParam._m0[77u].w : min(_854, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2790 = _2788.x;
    float _2791 = _2788.y;
    float _2792 = _2788.z;
    float _2793 = _2788.w;
    float _2886;
    float _2888;
    float _2890;
    float _2892;
    if (_854 > cbSceneParam._m0[78u].w)
    {
        float _2848 = isnan(_854) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _854 : min(cbSceneParam._m0[80u].w, _854));
        float _2849 = _2848 / _854;
        float _2860 = _2849 * _905;
        float _2861 = _906 * _2849;
        float _2862 = (-0.0) - _2861;
        float _2864 = _2849 * _907;
        float _2866 = (cbSceneParam._m0[77u].w * _2862) / _2848;
        float _2867 = _2866 + cbSceneParam._m0[79u].w;
        float _2868 = cbSceneParam._m0[79u].w - _2861;
        float _2874 = sqrt(((_2860 * _2860) + (_2861 * _2861)) + (_2864 * _2864));
        float _2877 = (1.0 - (cbSceneParam._m0[77u].w / _2848)) * _2874;
        float _2882 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2884 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3061;
        if (abs((_2862 - _2866) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3061 = ((((_2867 > 0.0) ? exp2(_2882 * _2867) : (2.0 - exp2(_2884 * _2867))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2877;
        }
        else
        {
            float _3005 = 1.0 / cbSceneParam._m0[80u].x;
            float _3006 = isnan(_2868) ? _2867 : (isnan(_2867) ? _2868 : max(_2867, _2868));
            float _3007 = isnan(_2868) ? _2867 : (isnan(_2867) ? _2868 : min(_2867, _2868));
            float _3016 = isnan(0.0) ? _3006 : (isnan(_3006) ? 0.0 : min(_3006, 0.0));
            float _3017 = isnan(0.0) ? _3007 : (isnan(_3007) ? 0.0 : min(_3007, 0.0));
            _3061 = ((abs(_2874 / _2862) * cbSceneParam._m0[80u].y) * ((((_3016 - _3017) * 2.0) - ((exp2(_2882 * (isnan(0.0) ? _3006 : (isnan(_3006) ? 0.0 : max(_3006, 0.0)))) - exp2(_2882 * (isnan(0.0) ? _3007 : (isnan(_3007) ? 0.0 : max(_3007, 0.0))))) * _3005)) - ((exp2(_2884 * _3016) - exp2(_2884 * _3017)) * _3005))) + (_2877 * cbSceneParam._m0[80u].z);
        }
        vec4 _3063 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2773, _2774, 1.0), 0.0);
        float _3072 = exp2((_3061 * (-1.44269502162933349609375)) * (1.0 - _3063.w));
        float _3073 = log2(_3072);
        float _3089 = log2(_2793);
        _2886 = (exp2(_3089 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3073 * cbSceneParam._m0[78u].x)) * _3063.x) / cbSceneParam._m0[78u].x)) + _2790;
        _2888 = (exp2(_3089 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3073 * cbSceneParam._m0[78u].y)) * _3063.y) / cbSceneParam._m0[78u].y)) + _2791;
        _2890 = (exp2(_3089 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3073 * cbSceneParam._m0[78u].z)) * _3063.z) / cbSceneParam._m0[78u].z)) + _2792;
        _2892 = _3072 * _2793;
    }
    else
    {
        _2886 = _2790;
        _2888 = _2791;
        _2890 = _2792;
        _2892 = _2793;
    }
    bool _3099;
    vec4 _2902;
    vec4 _2924;
    float _2926;
    float _2930;
    float _2931;
    float _2932;
    float _2933;
    bool _2943;
    for (;;)
    {
        _2902 = cbMatDynParam._m0[0u];
        float _2904 = roundEven(_2902.y);
        bool _2905 = _2904 == 3.0;
        float _2906 = log2(_2892);
        float _2913 = exp2(_2906 * cbSceneParam._m0[78u].x) * _2762;
        float _2914 = exp2(_2906 * cbSceneParam._m0[78u].y) * _2763;
        float _2915 = exp2(_2906 * cbSceneParam._m0[78u].z) * _2764;
        float _2922 = _921 + (-0.5);
        _2924 = cbMtdParam._m0[1u];
        _2926 = _2924.y * _2922;
        float _2929 = (_2904 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2930 = _2929 * (_2905 ? _2913 : (_2913 + (cbSceneParam._m0[72u].w * _2886)));
        _2931 = _2929 * (_2905 ? _2914 : (_2914 + (cbSceneParam._m0[72u].w * _2888)));
        _2932 = _2929 * (_2905 ? _2915 : (_2915 + (cbSceneParam._m0[72u].w * _2890)));
        _2933 = _2922 * 0.999000012874603271484375;
        _2943 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2943)
        {
            if ((cbInstanceData._m0[_259 + 7u].x + _2933) < 0.5)
            {
                _3099 = true;
                break;
            }
        }
        uint _3040 = _970 + uint(_2902.w);
        if ((cbInstanceData._m0[_3040].w < 1.0) && ((cbInstanceData._m0[_3040].w + _2933) < 0.5))
        {
            _3099 = true;
            break;
        }
        if ((_2926 + 1.0) < _2924.x)
        {
            _3099 = true;
            break;
        }
        _3099 = false;
        break;
    }
    float _3304;
    if (_3099)
    {
        discard_state = true;
        _3304 = 0.0;
    }
    else
    {
        _3304 = cbInstanceData._m0[_2765].w;
    }
    SV_Target.x = _2930;
    SV_Target.y = _2931;
    SV_Target.z = _2932;
    SV_Target.w = _3304;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2765].w;
    discard_exit();
}


