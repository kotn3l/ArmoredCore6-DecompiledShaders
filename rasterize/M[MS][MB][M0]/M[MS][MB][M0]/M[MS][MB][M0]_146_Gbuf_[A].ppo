#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _195 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _196 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _197 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _203 = inversesqrt(dot(vec3(_195, _196, _197), vec3(_195, _196, _197)));
    float _204 = _203 * _195;
    float _205 = _203 * _196;
    float _206 = _203 * _197;
    float _210 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _211 = _210 * NORMAL.x;
    float _212 = _210 * NORMAL.y;
    float _213 = _210 * NORMAL.z;
    float _217 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _218 = _217 * TANGENT.x;
    float _219 = _217 * TANGENT.y;
    float _220 = _217 * TANGENT.z;
    uint _223 = uint(roundEven(NORMAL.w)) * 13u;
    uint _228 = _223 + 1u;
    uint _232 = _223 + 2u;
    float _241 = sqrt(((cbInstanceData._m0[_228].x * cbInstanceData._m0[_228].x) + (cbInstanceData._m0[_223].x * cbInstanceData._m0[_223].x)) + (cbInstanceData._m0[_232].x * cbInstanceData._m0[_232].x));
    float _242 = _241 * TEXCOORD.z;
    float _243 = _241 * TEXCOORD.w;
    vec4 _263 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _269 = _263.x * cbMtdParam._m0[11u].x;
    float _270 = _263.y * cbMtdParam._m0[11u].y;
    float _271 = _263.z * cbMtdParam._m0[11u].z;
    vec4 _290 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _242) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _243) + cbTextureTilingScale._m0[5u].w));
    vec4 _328 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _330 = _328.x;
    float _340 = dot(vec4(_330, _328.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _357 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_330 - _340) * cbMtdParam._m0[24u].x) + _340) * cbMtdParam._m0[23u].x))) + 1.0;
    float _971 = isnan(0.0) ? _357 : (isnan(_357) ? 0.0 : max(_357, 0.0));
    float _358 = isnan(1.0) ? _971 : (isnan(_971) ? 1.0 : min(_971, 1.0));
    float _365 = (_358 * ((_290.x * cbMtdParam._m0[12u].x) - _269)) + _269;
    float _366 = (_358 * ((_290.y * cbMtdParam._m0[12u].y) - _270)) + _270;
    float _367 = (_358 * ((_290.z * cbMtdParam._m0[12u].z) - _271)) + _271;
    vec4 _386 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _242) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _243) + cbTextureTilingScale._m0[14u].w));
    vec4 _406 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _242) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _243) + cbTextureTilingScale._m0[20u].w));
    vec4 _433 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _242) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _243) + cbTextureTilingScale._m0[4u].w));
    vec4 _450 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _452 = _450.x;
    float _453 = _450.y;
    float _454 = _450.z;
    float _463 = ((_433.z - _454) * _358) + _454;
    float _466 = ((((_433.x - _452) * _358) + _452) * 2.0) + (-1.0);
    float _467 = ((((_433.y - _453) * _358) + _453) * 2.0) + (-1.0);
    float _468 = dot(vec2(_466, _467), vec2(_466, _467));
    float _982 = isnan(0.0) ? _468 : (isnan(_468) ? 0.0 : max(_468, 0.0));
    float _473 = sqrt(1.0 - (isnan(1.0) ? _982 : (isnan(_982) ? 1.0 : min(_982, 1.0))));
    float _476 = _466 + ((((_406.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x);
    float _477 = _467 + ((((_406.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x);
    float _480 = fma(_473, _211, fma(_477, _218, _476 * _204));
    float _483 = fma(_473, _212, fma(_477, _219, _476 * _205));
    float _486 = fma(_473, _213, fma(_477, _220, _476 * _206));
    float _490 = inversesqrt(dot(vec3(_480, _483, _486), vec3(_480, _483, _486)));
    vec4 _506 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _535 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _242) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _243) + cbTextureTilingScale._m0[11u].w));
    float _537 = _535.x;
    float _538 = 1.0 - _537;
    float _544 = (cbMtdParam._m0[19u].x + dot(vec4(_490 * _480, _490 * _483, _490 * _486, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_537 - _538) * cbMtdParam._m0[24u].z) + _538) * cbMtdParam._m0[21u].z);
    float _993 = isnan(0.0) ? _544 : (isnan(_544) ? 0.0 : max(_544, 0.0));
    float _545 = isnan(1.0) ? _993 : (isnan(_993) ? 1.0 : min(_993, 1.0));
    float _547 = (-0.0) - cbMtdParam._m0[24u].y;
    float _549 = isnan(0.0) ? _547 : (isnan(_547) ? 0.0 : max(_547, 0.0));
    float _550 = isnan(1.0) ? _549 : (isnan(_549) ? 1.0 : min(_549, 1.0));
    float _557 = _545 - ((_545 * TEXCOORD_8.x) * _550);
    float _558 = _545 - ((_545 * TEXCOORD_8.y) * _550);
    float _559 = _545 - ((_545 * TEXCOORD_8.z) * _550);
    float _566 = (_557 * ((_386.x * cbMtdParam._m0[18u].x) - _365)) + _365;
    float _567 = (_558 * ((_386.y * cbMtdParam._m0[18u].y) - _366)) + _366;
    float _568 = (_559 * ((_386.z * cbMtdParam._m0[18u].z) - _367)) + _367;
    vec4 _580 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _242) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _243) + cbTextureTilingScale._m0[19u].w));
    float _582 = _580.x;
    float _583 = 1.0 - _582;
    float _611 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_582 - _583) * cbMtdParam._m0[24u].w) + _583) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _1014 = isnan(0.0) ? _611 : (isnan(_611) ? 0.0 : max(_611, 0.0));
    float _612 = isnan(1.0) ? _1014 : (isnan(_1014) ? 1.0 : min(_1014, 1.0));
    float _620 = ((((cbMtdParam._m0[10u].x - _566) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _612) + _566;
    float _621 = ((((cbMtdParam._m0[10u].y - _567) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _612) + _567;
    float _622 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _568)) * _612) + _568;
    float _627 = (((_406.z - _463) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _463;
    vec4 _641 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _242) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _243) + cbTextureTilingScale._m0[15u].w));
    float _648 = (_641.x * 2.0) + (-1.0);
    float _649 = (_641.y * 2.0) + (-1.0);
    float _650 = dot(vec2(_648, _649), vec2(_648, _649));
    float _1025 = isnan(0.0) ? _650 : (isnan(_650) ? 0.0 : max(_650, 0.0));
    float _658 = ((_641.z - _627) * _557) + _627;
    float _661 = ((cbMtdParam._m0[23u].y - _658) * _612) + _658;
    vec4 _680 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _242) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _243) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _686 = (_680.x * 2.0) + (-1.0);
    float _687 = (_680.y * 2.0) + (-1.0);
    float _688 = dot(vec2(_686, _687), vec2(_686, _687));
    float _1036 = isnan(0.0) ? _688 : (isnan(_688) ? 0.0 : max(_688, 0.0));
    float _703 = ((sqrt(1.0 - (isnan(1.0) ? _1025 : (isnan(_1025) ? 1.0 : min(_1025, 1.0)))) - _473) * _559) + _473;
    float _706 = (((_648 - _476) * _557) + _476) + (cbMtdParam._m0[21u].x * _476);
    float _707 = (((_649 - _477) * _558) + _477) + (cbMtdParam._m0[21u].x * _477);
    float _718 = (((_686 - _706) + (_706 * cbMtdParam._m0[22u].z)) * _612) + _706;
    float _719 = (((_687 - _707) + (_707 * cbMtdParam._m0[22u].z)) * _612) + _707;
    float _720 = (_612 * (sqrt(1.0 - (isnan(1.0) ? _1036 : (isnan(_1036) ? 1.0 : min(_1036, 1.0)))) - _703)) + _703;
    float _722 = cbMtdParam._m0[22u].x + _506.w;
    float _725 = fma(_720, _211, fma(_719, _218, _718 * _204));
    float _728 = fma(_720, _212, fma(_719, _219, _718 * _205));
    float _731 = fma(_720, _213, fma(_719, _220, _718 * _206));
    float _735 = inversesqrt(dot(vec3(_725, _728, _731), vec3(_725, _728, _731)));
    float _1047 = isnan(0.0) ? _661 : (isnan(_661) ? 0.0 : max(_661, 0.0));
    float _1058 = isnan(0.0) ? _722 : (isnan(_722) ? 0.0 : max(_722, 0.0));
    float _737 = isnan(1.0) ? _1058 : (isnan(_1058) ? 1.0 : min(_1058, 1.0));
    float _1069 = isnan(0.0) ? _620 : (isnan(_620) ? 0.0 : max(_620, 0.0));
    float _738 = isnan(1.0) ? _1069 : (isnan(_1069) ? 1.0 : min(_1069, 1.0));
    float _1080 = isnan(0.0) ? _621 : (isnan(_621) ? 0.0 : max(_621, 0.0));
    float _739 = isnan(1.0) ? _1080 : (isnan(_1080) ? 1.0 : min(_1080, 1.0));
    float _1091 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
    float _740 = isnan(1.0) ? _1091 : (isnan(_1091) ? 1.0 : min(_1091, 1.0));
    float _781 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _791 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _781);
    float _792 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _781);
    float _793 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _781);
    vec4 _798 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _800 = _798.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _860 = sqrt(((_791 * _791) + (_792 * _792)) + (_793 * _793));
        float _866 = (cbMatDynParam._m0[5u].x * _860) + cbMatDynParam._m0[5u].y;
        float _1102 = isnan(0.0) ? _866 : (isnan(_866) ? 0.0 : max(_866, 0.0));
        float _867 = isnan(1.0) ? _1102 : (isnan(_1102) ? 1.0 : min(_1102, 1.0));
        float _871 = (cbMatDynParam._m0[5u].z * _860) + cbMatDynParam._m0[5u].w;
        float _1113 = isnan(0.0) ? _871 : (isnan(_871) ? 0.0 : max(_871, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1113 : (isnan(_1113) ? 1.0 : min(_1113, 1.0))) - _867)) + _867) < ((_800 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _898;
    vec4 _822;
    float _829;
    float _830;
    float _831;
    float _832;
    float _836;
    vec4 _840;
    float _842;
    float _843;
    bool _854;
    for (;;)
    {
        _822 = cbInstanceData._m0[(_223 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _826 = (cbMtdParam._m0[0u].x * _738) * _822.x;
        float _827 = (cbMtdParam._m0[0u].y * _739) * _822.y;
        float _828 = (cbMtdParam._m0[0u].z * _740) * _822.z;
        float _1124 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
        _829 = isnan(1.0) ? _1124 : (isnan(_1124) ? 1.0 : min(_1124, 1.0));
        float _1135 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
        _830 = isnan(1.0) ? _1135 : (isnan(_1135) ? 1.0 : min(_1135, 1.0));
        float _1146 = isnan(0.0) ? _828 : (isnan(_828) ? 0.0 : max(_828, 0.0));
        _831 = isnan(1.0) ? _1146 : (isnan(_1146) ? 1.0 : min(_1146, 1.0));
        _832 = _737 * TEXCOORD_5.w;
        _836 = cbInstanceData._m0[_223 + 6u].w;
        float _837 = _800 + (-0.5);
        _840 = cbMtdParam._m0[1u];
        _842 = _840.y * _837;
        _843 = _837 * 0.999000012874603271484375;
        _854 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_854)
        {
            if ((cbInstanceData._m0[_223 + 7u].x + _843) < 0.5)
            {
                _898 = true;
                break;
            }
        }
        if ((_822.w < 1.0) && ((_822.w + _843) < 0.5))
        {
            _898 = true;
            break;
        }
        if ((_842 + 1.0) < _840.x)
        {
            _898 = true;
            break;
        }
        _898 = false;
        break;
    }
    if (_898)
    {
        discard_state = true;
    }
    bool _924 = cbMtdParam._m0[1u].z != 0.0;
    float _925 = _924 ? _836 : 0.0;
    SV_Target.x = ((_725 * 0.5) * _735) + 0.500488758087158203125;
    SV_Target.y = ((_728 * 0.5) * _735) + 0.500488758087158203125;
    SV_Target.z = ((_731 * 0.5) * _735) + 0.500488758087158203125;
    SV_Target.w = _925;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _1047 : (isnan(_1047) ? 1.0 : min(_1047, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _924 ? _836 : _832;
    SV_Target_2.x = _829;
    SV_Target_2.y = _830;
    SV_Target_2.z = _831;
    SV_Target_2.w = _924 ? _836 : (float(floatBitsToUint(cbInstanceData._m0[_223 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _925;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _925;
    discard_exit();
}


