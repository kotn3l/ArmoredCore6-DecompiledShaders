#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _157 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _158 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _159 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _165 = inversesqrt(dot(vec3(_157, _158, _159), vec3(_157, _158, _159)));
    float _172 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _179 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _185 = uint(roundEven(NORMAL.w)) * 13u;
    uint _191 = _185 + 1u;
    uint _195 = _185 + 2u;
    float _204 = sqrt(((cbInstanceData._m0[_191].x * cbInstanceData._m0[_191].x) + (cbInstanceData._m0[_185].x * cbInstanceData._m0[_185].x)) + (cbInstanceData._m0[_195].x * cbInstanceData._m0[_195].x));
    vec4 _225 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _231 = _225.x * cbMtdParam._m0[9u].x;
    float _232 = _225.y * cbMtdParam._m0[9u].y;
    float _233 = _225.z * cbMtdParam._m0[9u].z;
    vec4 _246 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2(((_204 * TEXCOORD.z) * cbTextureTilingScale._m0[20u].x) + cbTextureTilingScale._m0[20u].z, ((_204 * TEXCOORD.w) * cbTextureTilingScale._m0[20u].y) + cbTextureTilingScale._m0[20u].w));
    vec4 _272 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _276 = _272.z;
    float _280 = (_272.x * 2.0) + (-1.0);
    float _281 = (_272.y * 2.0) + (-1.0);
    float _282 = dot(vec2(_280, _281), vec2(_280, _281));
    float _558 = isnan(0.0) ? _282 : (isnan(_282) ? 0.0 : max(_282, 0.0));
    float _288 = sqrt(1.0 - (isnan(1.0) ? _558 : (isnan(_558) ? 1.0 : min(_558, 1.0))));
    float _293 = _280 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_246.x * 2.0) + (-1.0)));
    float _294 = _281 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_246.y * 2.0) + (-1.0)));
    float _299 = (((_246.z - _276) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _276;
    float _304 = cbMtdParam._m0[22u].x + _272.w;
    float _307 = fma(_288, _172 * NORMAL.x, fma(_294, _179 * TANGENT.x, (_165 * _157) * _293));
    float _310 = fma(_288, _172 * NORMAL.y, fma(_294, _179 * TANGENT.y, (_165 * _158) * _293));
    float _313 = fma(_288, _172 * NORMAL.z, fma(_294, _179 * TANGENT.z, (_165 * _159) * _293));
    float _317 = inversesqrt(dot(vec3(_307, _310, _313), vec3(_307, _310, _313)));
    float _569 = isnan(0.0) ? _299 : (isnan(_299) ? 0.0 : max(_299, 0.0));
    float _580 = isnan(0.0) ? _304 : (isnan(_304) ? 0.0 : max(_304, 0.0));
    float _319 = isnan(1.0) ? _580 : (isnan(_580) ? 1.0 : min(_580, 1.0));
    float _591 = isnan(0.0) ? _231 : (isnan(_231) ? 0.0 : max(_231, 0.0));
    float _320 = isnan(1.0) ? _591 : (isnan(_591) ? 1.0 : min(_591, 1.0));
    float _602 = isnan(0.0) ? _232 : (isnan(_232) ? 0.0 : max(_232, 0.0));
    float _321 = isnan(1.0) ? _602 : (isnan(_602) ? 1.0 : min(_602, 1.0));
    float _613 = isnan(0.0) ? _233 : (isnan(_233) ? 0.0 : max(_233, 0.0));
    float _322 = isnan(1.0) ? _613 : (isnan(_613) ? 1.0 : min(_613, 1.0));
    float _364 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _374 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _364);
    float _375 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _364);
    float _376 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _364);
    vec4 _381 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _383 = _381.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _444 = sqrt(((_374 * _374) + (_375 * _375)) + (_376 * _376));
        float _451 = (cbMatDynParam._m0[5u].x * _444) + cbMatDynParam._m0[5u].y;
        float _624 = isnan(0.0) ? _451 : (isnan(_451) ? 0.0 : max(_451, 0.0));
        float _452 = isnan(1.0) ? _624 : (isnan(_624) ? 1.0 : min(_624, 1.0));
        float _456 = (cbMatDynParam._m0[5u].z * _444) + cbMatDynParam._m0[5u].w;
        float _635 = isnan(0.0) ? _456 : (isnan(_456) ? 0.0 : max(_456, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _635 : (isnan(_635) ? 1.0 : min(_635, 1.0))) - _452)) + _452) < ((_383 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _485;
    vec4 _406;
    float _413;
    float _414;
    float _415;
    float _416;
    float _420;
    vec4 _424;
    float _426;
    float _427;
    bool _438;
    for (;;)
    {
        _406 = cbInstanceData._m0[(_185 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _410 = (cbMtdParam._m0[0u].x * _320) * _406.x;
        float _411 = (cbMtdParam._m0[0u].y * _321) * _406.y;
        float _412 = (cbMtdParam._m0[0u].z * _322) * _406.z;
        float _646 = isnan(0.0) ? _410 : (isnan(_410) ? 0.0 : max(_410, 0.0));
        _413 = isnan(1.0) ? _646 : (isnan(_646) ? 1.0 : min(_646, 1.0));
        float _657 = isnan(0.0) ? _411 : (isnan(_411) ? 0.0 : max(_411, 0.0));
        _414 = isnan(1.0) ? _657 : (isnan(_657) ? 1.0 : min(_657, 1.0));
        float _668 = isnan(0.0) ? _412 : (isnan(_412) ? 0.0 : max(_412, 0.0));
        _415 = isnan(1.0) ? _668 : (isnan(_668) ? 1.0 : min(_668, 1.0));
        _416 = _319 * TEXCOORD_5.w;
        _420 = cbInstanceData._m0[_185 + 6u].w;
        float _421 = _383 + (-0.5);
        _424 = cbMtdParam._m0[1u];
        _426 = _424.y * _421;
        _427 = _421 * 0.999000012874603271484375;
        _438 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_438)
        {
            if ((cbInstanceData._m0[_185 + 7u].x + _427) < 0.5)
            {
                _485 = true;
                break;
            }
        }
        if ((_406.w < 1.0) && ((_406.w + _427) < 0.5))
        {
            _485 = true;
            break;
        }
        if ((_426 + 1.0) < _424.x)
        {
            _485 = true;
            break;
        }
        _485 = false;
        break;
    }
    if (_485)
    {
        discard_state = true;
    }
    bool _511 = cbMtdParam._m0[1u].z != 0.0;
    float _512 = _511 ? _420 : 0.0;
    SV_Target.x = ((_307 * 0.5) * _317) + 0.500488758087158203125;
    SV_Target.y = ((_310 * 0.5) * _317) + 0.500488758087158203125;
    SV_Target.z = ((_313 * 0.5) * _317) + 0.500488758087158203125;
    SV_Target.w = _512;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _569 : (isnan(_569) ? 1.0 : min(_569, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _511 ? _420 : _416;
    SV_Target_2.x = _413;
    SV_Target_2.y = _414;
    SV_Target_2.z = _415;
    SV_Target_2.w = _511 ? _420 : (float(floatBitsToUint(cbInstanceData._m0[_185 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _512;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _512;
    discard_exit();
}


