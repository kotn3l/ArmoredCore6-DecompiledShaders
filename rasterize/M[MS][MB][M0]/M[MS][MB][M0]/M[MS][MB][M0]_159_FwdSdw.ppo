#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1267;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _221 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _222 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _223 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _229 = inversesqrt(dot(vec3(_221, _222, _223), vec3(_221, _222, _223)));
    float _230 = _229 * _221;
    float _231 = _229 * _222;
    float _232 = _229 * _223;
    float _236 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _237 = _236 * NORMAL.x;
    float _238 = _236 * NORMAL.y;
    float _239 = _236 * NORMAL.z;
    float _243 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _244 = _243 * TANGENT.x;
    float _245 = _243 * TANGENT.y;
    float _246 = _243 * TANGENT.z;
    uint _249 = uint(roundEven(NORMAL.w)) * 13u;
    uint _254 = _249 + 1u;
    uint _258 = _249 + 2u;
    float _267 = sqrt(((cbInstanceData._m0[_254].x * cbInstanceData._m0[_254].x) + (cbInstanceData._m0[_249].x * cbInstanceData._m0[_249].x)) + (cbInstanceData._m0[_258].x * cbInstanceData._m0[_258].x));
    float _268 = _267 * TEXCOORD.z;
    float _269 = _267 * TEXCOORD.w;
    vec4 _289 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _295 = _289.x * cbMtdParam._m0[11u].x;
    float _296 = _289.y * cbMtdParam._m0[11u].y;
    float _297 = _289.z * cbMtdParam._m0[11u].z;
    vec4 _316 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _268) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _269) + cbTextureTilingScale._m0[5u].w));
    vec4 _354 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _356 = _354.x;
    float _366 = dot(vec4(_356, _354.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _383 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_356 - _366) * cbMtdParam._m0[24u].x) + _366) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3854 = isnan(0.0) ? _383 : (isnan(_383) ? 0.0 : max(_383, 0.0));
    float _384 = isnan(1.0) ? _3854 : (isnan(_3854) ? 1.0 : min(_3854, 1.0));
    float _391 = (_384 * ((_316.x * cbMtdParam._m0[12u].x) - _295)) + _295;
    float _392 = (_384 * ((_316.y * cbMtdParam._m0[12u].y) - _296)) + _296;
    float _393 = (_384 * ((_316.z * cbMtdParam._m0[12u].z) - _297)) + _297;
    vec4 _412 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _268) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _269) + cbTextureTilingScale._m0[14u].w));
    vec4 _432 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _268) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _269) + cbTextureTilingScale._m0[4u].w));
    vec4 _449 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _451 = _449.x;
    float _452 = _449.y;
    float _453 = _449.z;
    float _462 = ((_432.z - _453) * _384) + _453;
    float _465 = ((((_432.x - _451) * _384) + _451) * 2.0) + (-1.0);
    float _467 = ((((_432.y - _452) * _384) + _452) * 2.0) + (-1.0);
    float _468 = dot(vec2(_465, _467), vec2(_465, _467));
    float _3865 = isnan(0.0) ? _468 : (isnan(_468) ? 0.0 : max(_468, 0.0));
    float _473 = sqrt(1.0 - (isnan(1.0) ? _3865 : (isnan(_3865) ? 1.0 : min(_3865, 1.0))));
    float _476 = fma(_473, _237, fma(_467, _244, _465 * _230));
    float _479 = fma(_473, _238, fma(_467, _245, _465 * _231));
    float _482 = fma(_473, _239, fma(_467, _246, _465 * _232));
    float _486 = inversesqrt(dot(vec3(_476, _479, _482), vec3(_476, _479, _482)));
    vec4 _502 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _530 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _268) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _269) + cbTextureTilingScale._m0[11u].w));
    float _532 = _530.x;
    float _533 = 1.0 - _532;
    float _537 = ((_532 - _533) * cbMtdParam._m0[24u].z) + _533;
    float _539 = (cbMtdParam._m0[19u].x + dot(vec4(_486 * _476, _486 * _479, _486 * _482, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_537 * cbMtdParam._m0[21u].z);
    float _3876 = isnan(0.0) ? _539 : (isnan(_539) ? 0.0 : max(_539, 0.0));
    float _540 = isnan(1.0) ? _3876 : (isnan(_3876) ? 1.0 : min(_3876, 1.0));
    float _542 = (-0.0) - cbMtdParam._m0[24u].y;
    float _544 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0));
    float _545 = isnan(1.0) ? _544 : (isnan(_544) ? 1.0 : min(_544, 1.0));
    float _552 = _540 - ((_540 * TEXCOORD_8.x) * _545);
    float _553 = _540 - ((_540 * TEXCOORD_8.y) * _545);
    float _554 = _540 - ((_540 * TEXCOORD_8.z) * _545);
    float _561 = isnan(-1.0) ? cbMtdParam._m0[24u].y : (isnan(cbMtdParam._m0[24u].y) ? (-1.0) : max(cbMtdParam._m0[24u].y, -1.0));
    float _565 = ((isnan(0.0) ? _561 : (isnan(_561) ? 0.0 : min(_561, 0.0))) * TEXCOORD_8.x) + TEXCOORD_14.x;
    float _573 = (_565 - (((_537 + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _565))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3907 = isnan(0.0) ? _573 : (isnan(_573) ? 0.0 : max(_573, 0.0));
    float _574 = isnan(1.0) ? _3907 : (isnan(_3907) ? 1.0 : min(_3907, 1.0));
    float _578 = ((_552 * ((_412.x * cbMtdParam._m0[18u].x) - _391)) * _574) + _391;
    float _579 = ((_553 * ((_412.y * cbMtdParam._m0[18u].y) - _392)) * _574) + _392;
    float _580 = ((_554 * ((_412.z * cbMtdParam._m0[18u].z) - _393)) * _574) + _393;
    vec4 _592 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _268) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _269) + cbTextureTilingScale._m0[19u].w));
    float _594 = _592.x;
    float _595 = 1.0 - _594;
    float _622 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_594 - _595) * cbMtdParam._m0[24u].w) + _595) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3918 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
    float _623 = isnan(1.0) ? _3918 : (isnan(_3918) ? 1.0 : min(_3918, 1.0));
    float _631 = ((((cbMtdParam._m0[10u].x - _578) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _623) + _578;
    float _632 = ((((cbMtdParam._m0[10u].y - _579) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _623) + _579;
    float _633 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _580)) * _623) + _580;
    vec4 _647 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _268) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _269) + cbTextureTilingScale._m0[15u].w));
    float _654 = (_647.x * 2.0) + (-1.0);
    float _655 = (_647.y * 2.0) + (-1.0);
    float _656 = dot(vec2(_654, _655), vec2(_654, _655));
    float _3929 = isnan(0.0) ? _656 : (isnan(_656) ? 0.0 : max(_656, 0.0));
    float _665 = (((_647.z - _462) * _552) * _574) + _462;
    float _668 = ((cbMtdParam._m0[23u].y - _665) * _623) + _665;
    vec4 _687 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _268) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _269) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _693 = (_687.x * 2.0) + (-1.0);
    float _694 = (_687.y * 2.0) + (-1.0);
    float _695 = dot(vec2(_693, _694), vec2(_693, _694));
    float _3940 = isnan(0.0) ? _695 : (isnan(_695) ? 0.0 : max(_695, 0.0));
    float _715 = (((cbMtdParam._m0[21u].x * _465) + ((_654 - _465) * _552)) * _574) + _465;
    float _716 = (((cbMtdParam._m0[21u].x * _467) + ((_655 - _467) * _553)) * _574) + _467;
    float _717 = (((sqrt(1.0 - (isnan(1.0) ? _3929 : (isnan(_3929) ? 1.0 : min(_3929, 1.0)))) - _473) * _554) * _574) + _473;
    float _728 = (((_693 - _715) + (_715 * cbMtdParam._m0[22u].z)) * _623) + _715;
    float _729 = (((_694 - _716) + (_716 * cbMtdParam._m0[22u].z)) * _623) + _716;
    float _730 = ((sqrt(1.0 - (isnan(1.0) ? _3940 : (isnan(_3940) ? 1.0 : min(_3940, 1.0)))) - _717) * _623) + _717;
    float _732 = cbMtdParam._m0[22u].x + _502.w;
    float _735 = fma(_730, _237, fma(_729, _244, _728 * _230));
    float _738 = fma(_730, _238, fma(_729, _245, _728 * _231));
    float _741 = fma(_730, _239, fma(_729, _246, _728 * _232));
    float _745 = inversesqrt(dot(vec3(_735, _738, _741), vec3(_735, _738, _741)));
    float _746 = _745 * _735;
    float _747 = _745 * _738;
    float _748 = _745 * _741;
    float _3951 = isnan(0.0) ? _668 : (isnan(_668) ? 0.0 : max(_668, 0.0));
    float _749 = isnan(1.0) ? _3951 : (isnan(_3951) ? 1.0 : min(_3951, 1.0));
    float _3962 = isnan(0.0) ? _732 : (isnan(_732) ? 0.0 : max(_732, 0.0));
    float _3973 = isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : max(_631, 0.0));
    float _3984 = isnan(0.0) ? _632 : (isnan(_632) ? 0.0 : max(_632, 0.0));
    float _3995 = isnan(0.0) ? _633 : (isnan(_633) ? 0.0 : max(_633, 0.0));
    float _767 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _808 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _818 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _808);
    float _819 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _808);
    float _820 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _808);
    float _824 = inversesqrt(dot(vec3(_818, _819, _820), vec3(_818, _819, _820)));
    float _825 = _818 * _824;
    float _826 = _819 * _824;
    float _827 = _820 * _824;
    float _833 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _834 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _852 = fma(_748, cbSceneParam._m0[5u].z, fma(_747, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _746));
    float _855 = fma(_748, cbSceneParam._m0[6u].z, fma(_747, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _746));
    float _858 = fma(_748, cbSceneParam._m0[7u].z, fma(_747, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _746));
    uint _872 = (_249 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _878 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3973 : (isnan(_3973) ? 1.0 : min(_3973, 1.0)))) * cbInstanceData._m0[_872].x;
    float _879 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3984 : (isnan(_3984) ? 1.0 : min(_3984, 1.0)))) * cbInstanceData._m0[_872].y;
    float _880 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3995 : (isnan(_3995) ? 1.0 : min(_3995, 1.0)))) * cbInstanceData._m0[_872].z;
    float _4006 = isnan(0.0) ? _878 : (isnan(_878) ? 0.0 : max(_878, 0.0));
    float _881 = isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0));
    float _4017 = isnan(0.0) ? _879 : (isnan(_879) ? 0.0 : max(_879, 0.0));
    float _882 = isnan(1.0) ? _4017 : (isnan(_4017) ? 1.0 : min(_4017, 1.0));
    float _4028 = isnan(0.0) ? _880 : (isnan(_880) ? 0.0 : max(_880, 0.0));
    float _883 = isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0));
    vec4 _892 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _833, cbSceneParam._m0[86u].y * _834));
    float _896 = ((isnan(1.0) ? _3962 : (isnan(_3962) ? 1.0 : min(_3962, 1.0))) * TEXCOORD_5.w) * _892.x;
    float _897 = dot(vec3(_746, _747, _748), vec3(_825, _826, _827));
    float _900 = _897 * 2.0;
    float _904 = (_900 * _746) - _825;
    float _905 = (_900 * _747) - _826;
    float _906 = (_900 * _748) - _827;
    float _910 = abs(dot(vec3(_825, _826, _827), vec3(_746, _747, _748)));
    float _4039 = isnan(0.0) ? _910 : (isnan(_910) ? 0.0 : max(_910, 0.0));
    float _912 = sqrt(_749);
    float _925 = exp2((_912 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_912 * 3.0));
    float _957 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _961 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _965 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1266;
    float _1268;
    float _1269;
    float _1270;
    float _1271;
    float _1272;
    float _1273;
    float _1274;
    float _1275;
    float _1276;
    float _1277;
    float _1278;
    float _1279;
    float _1280;
    float _1281;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _991 = fma(_965, cbModelParam._m0[26u].z, fma(_961, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _957));
        float _995 = fma(_965, cbModelParam._m0[27u].z, fma(_961, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _957));
        float _999 = fma(_965, cbModelParam._m0[28u].z, fma(_961, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _957));
        float _1024 = _957 + _746;
        float _1025 = _961 + _747;
        float _1026 = _965 + _748;
        float _1036 = fma(_1026, cbModelParam._m0[26u].z, fma(_1025, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1024)) - _991;
        float _1037 = fma(_1026, cbModelParam._m0[27u].z, fma(_1025, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1024)) - _995;
        float _1038 = fma(_1026, cbModelParam._m0[28u].z, fma(_1025, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1024)) - _999;
        float _1042 = inversesqrt(dot(vec3(_1036, _1037, _1038), vec3(_1036, _1037, _1038)));
        float _1055 = ((_1042 * _1036) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_991 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1056 = ((_1042 * _1037) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_995 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1057 = ((_1042 * _1038) / cbModelParam._m0[34u].z) + ((((((_999 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1060 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1055, _1056, _1057), 0.0);
        vec4 _1067 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1055, _1056, _1057), 0.0);
        vec4 _1074 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1055, _1056, _1057), 0.0);
        vec4 _1081 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1055, _1056, _1057), 0.0);
        float _1094 = exp2((_1060.w + (-0.5)) * 20.0) * 2.0;
        float _1095 = _1094 * (_1060.x + (-0.5));
        float _1096 = _1094 * (_1060.y + (-0.5));
        float _1097 = _1094 * (_1060.z + (-0.5));
        float _1104 = exp2((_1067.w + (-0.5)) * 20.0) * 2.0;
        float _1105 = _1104 * (_1067.x + (-0.5));
        float _1106 = _1104 * (_1067.y + (-0.5));
        float _1107 = _1104 * (_1067.z + (-0.5));
        float _1114 = exp2((_1074.w + (-0.5)) * 20.0) * 2.0;
        float _1115 = _1114 * (_1074.x + (-0.5));
        float _1116 = _1114 * (_1074.y + (-0.5));
        float _1117 = _1114 * (_1074.z + (-0.5));
        float _1124 = exp2((_1081.w + (-0.5)) * 20.0) * 2.0;
        float _1125 = _1124 * (_1081.x + (-0.5));
        float _1126 = _1124 * (_1081.y + (-0.5));
        float _1127 = _1124 * (_1081.z + (-0.5));
        float _1128 = isnan(0.0) ? _1125 : (isnan(_1125) ? 0.0 : max(_1125, 0.0));
        float _1129 = isnan(0.0) ? _1126 : (isnan(_1126) ? 0.0 : max(_1126, 0.0));
        float _1130 = isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0));
        float _1131 = _1095 * 0.5;
        float _1132 = _1105 * 0.5;
        float _1133 = _1115 * 0.5;
        float _1134 = dot(vec3(_1131, _1132, _1133), vec3(_1131, _1132, _1133));
        float _1139 = (_1134 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1134);
        float _1148 = (dot(vec3(_746, _747, _748), vec3(_1139 * _1131, _1139 * _1132, _1139 * _1133)) + 1.0) * 0.5;
        float _4065 = isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0));
        float _1158 = sqrt(((_1132 * _1132) + (_1131 * _1131)) + (_1133 * _1133)) / (_1128 + 9.9999997473787516355514526367188e-06);
        float _4076 = isnan(0.0) ? _1158 : (isnan(_1158) ? 0.0 : max(_1158, 0.0));
        float _1159 = isnan(1.0) ? _4076 : (isnan(_4076) ? 1.0 : min(_4076, 1.0));
        float _1160 = _1159 * 2.0;
        float _1164 = (1.0 - _1159) / (_1159 + 1.0);
        float _4087 = isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0));
        float _1165 = isnan(1.0) ? _4087 : (isnan(_4087) ? 1.0 : min(_4087, 1.0));
        float _1174 = ((((1.0 - _1165) * (_1160 + 2.0)) * exp2(log2(isnan(1.0) ? _4065 : (isnan(_4065) ? 1.0 : min(_4065, 1.0))) * (_1160 + 1.0))) + _1165) * _1128;
        float _1175 = _1096 * 0.5;
        float _1176 = _1106 * 0.5;
        float _1177 = _1116 * 0.5;
        float _1178 = dot(vec3(_1175, _1176, _1177), vec3(_1175, _1176, _1177));
        float _1183 = (_1178 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1178);
        float _1191 = (dot(vec3(_746, _747, _748), vec3(_1183 * _1175, _1183 * _1176, _1183 * _1177)) + 1.0) * 0.5;
        float _4098 = isnan(0.0) ? _1191 : (isnan(_1191) ? 0.0 : max(_1191, 0.0));
        float _1200 = sqrt(((_1176 * _1176) + (_1175 * _1175)) + (_1177 * _1177)) / (_1129 + 9.9999997473787516355514526367188e-06);
        float _4109 = isnan(0.0) ? _1200 : (isnan(_1200) ? 0.0 : max(_1200, 0.0));
        float _1201 = isnan(1.0) ? _4109 : (isnan(_4109) ? 1.0 : min(_4109, 1.0));
        float _1202 = _1201 * 2.0;
        float _1206 = (1.0 - _1201) / (_1201 + 1.0);
        float _4120 = isnan(0.0) ? _1206 : (isnan(_1206) ? 0.0 : max(_1206, 0.0));
        float _1207 = isnan(1.0) ? _4120 : (isnan(_4120) ? 1.0 : min(_4120, 1.0));
        float _1216 = ((((1.0 - _1207) * (_1202 + 2.0)) * exp2(log2(isnan(1.0) ? _4098 : (isnan(_4098) ? 1.0 : min(_4098, 1.0))) * (_1202 + 1.0))) + _1207) * _1129;
        float _1217 = _1097 * 0.5;
        float _1218 = _1107 * 0.5;
        float _1219 = _1117 * 0.5;
        float _1220 = dot(vec3(_1217, _1218, _1219), vec3(_1217, _1218, _1219));
        float _1225 = (_1220 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1220);
        float _1233 = (dot(vec3(_746, _747, _748), vec3(_1225 * _1217, _1225 * _1218, _1225 * _1219)) + 1.0) * 0.5;
        float _4131 = isnan(0.0) ? _1233 : (isnan(_1233) ? 0.0 : max(_1233, 0.0));
        float _1242 = sqrt(((_1218 * _1218) + (_1217 * _1217)) + (_1219 * _1219)) / (_1130 + 9.9999997473787516355514526367188e-06);
        float _4142 = isnan(0.0) ? _1242 : (isnan(_1242) ? 0.0 : max(_1242, 0.0));
        float _1243 = isnan(1.0) ? _4142 : (isnan(_4142) ? 1.0 : min(_4142, 1.0));
        float _1244 = _1243 * 2.0;
        float _1248 = (1.0 - _1243) / (_1243 + 1.0);
        float _4153 = isnan(0.0) ? _1248 : (isnan(_1248) ? 0.0 : max(_1248, 0.0));
        float _1249 = isnan(1.0) ? _4153 : (isnan(_4153) ? 1.0 : min(_4153, 1.0));
        float _1258 = ((((1.0 - _1249) * (_1244 + 2.0)) * exp2(log2(isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0))) * (_1244 + 1.0))) + _1249) * _1130;
        _1266 = _1097;
        _1268 = _1096;
        _1269 = _1095;
        _1270 = _1107;
        _1271 = _1106;
        _1272 = _1105;
        _1273 = _1117;
        _1274 = _1116;
        _1275 = _1115;
        _1276 = _1130;
        _1277 = _1129;
        _1278 = _1128;
        _1279 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1174 : (isnan(_1174) ? 0.0 : max(_1174, 0.0)));
        _1280 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1216 : (isnan(_1216) ? 0.0 : max(_1216, 0.0)));
        _1281 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1258 : (isnan(_1258) ? 0.0 : max(_1258, 0.0)));
    }
    else
    {
        _1266 = _1267;
        _1268 = _1267;
        _1269 = _1267;
        _1270 = _1267;
        _1271 = _1267;
        _1272 = _1267;
        _1273 = _1267;
        _1274 = _1267;
        _1275 = _1267;
        _1276 = _1267;
        _1277 = _1267;
        _1278 = _1267;
        _1279 = 0.0;
        _1280 = 0.0;
        _1281 = 0.0;
    }
    float _1575;
    float _1576;
    float _1577;
    float _1578;
    float _1579;
    float _1580;
    float _1581;
    float _1582;
    float _1583;
    float _1584;
    float _1585;
    float _1586;
    float _1587;
    float _1588;
    float _1589;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1306 = fma(_965, cbModelParam._m0[30u].z, fma(_961, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _957));
        float _1310 = fma(_965, cbModelParam._m0[31u].z, fma(_961, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _957));
        float _1314 = fma(_965, cbModelParam._m0[32u].z, fma(_961, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _957));
        float _1337 = _957 + _746;
        float _1338 = _961 + _747;
        float _1339 = _965 + _748;
        float _1349 = fma(_1339, cbModelParam._m0[30u].z, fma(_1338, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1337)) - _1306;
        float _1350 = fma(_1339, cbModelParam._m0[31u].z, fma(_1338, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1337)) - _1310;
        float _1351 = fma(_1339, cbModelParam._m0[32u].z, fma(_1338, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1337)) - _1314;
        float _1355 = inversesqrt(dot(vec3(_1349, _1350, _1351), vec3(_1349, _1350, _1351)));
        float _1368 = ((_1355 * _1349) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1306 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1369 = ((_1355 * _1350) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1310 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1370 = ((_1355 * _1351) / cbModelParam._m0[35u].z) + ((((((_1314 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1372 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1368, _1369, _1370), 0.0);
        vec4 _1379 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1368, _1369, _1370), 0.0);
        vec4 _1386 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1368, _1369, _1370), 0.0);
        vec4 _1393 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1368, _1369, _1370), 0.0);
        float _1405 = exp2((_1372.w + (-0.5)) * 20.0) * 2.0;
        float _1406 = _1405 * (_1372.x + (-0.5));
        float _1407 = _1405 * (_1372.y + (-0.5));
        float _1408 = _1405 * (_1372.z + (-0.5));
        float _1415 = exp2((_1379.w + (-0.5)) * 20.0) * 2.0;
        float _1416 = _1415 * (_1379.x + (-0.5));
        float _1417 = _1415 * (_1379.y + (-0.5));
        float _1418 = _1415 * (_1379.z + (-0.5));
        float _1425 = exp2((_1386.w + (-0.5)) * 20.0) * 2.0;
        float _1426 = _1425 * (_1386.x + (-0.5));
        float _1427 = _1425 * (_1386.y + (-0.5));
        float _1428 = _1425 * (_1386.z + (-0.5));
        float _1435 = exp2((_1393.w + (-0.5)) * 20.0) * 2.0;
        float _1436 = _1435 * (_1393.x + (-0.5));
        float _1437 = _1435 * (_1393.y + (-0.5));
        float _1438 = _1435 * (_1393.z + (-0.5));
        float _1439 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
        float _1440 = isnan(0.0) ? _1437 : (isnan(_1437) ? 0.0 : max(_1437, 0.0));
        float _1441 = isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0));
        float _1442 = _1406 * 0.5;
        float _1443 = _1416 * 0.5;
        float _1444 = _1426 * 0.5;
        float _1445 = dot(vec3(_1442, _1443, _1444), vec3(_1442, _1443, _1444));
        float _1450 = (_1445 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1445);
        float _1458 = (dot(vec3(_746, _747, _748), vec3(_1450 * _1442, _1450 * _1443, _1450 * _1444)) + 1.0) * 0.5;
        float _4194 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
        float _1467 = sqrt(((_1443 * _1443) + (_1442 * _1442)) + (_1444 * _1444)) / (_1439 + 9.9999997473787516355514526367188e-06);
        float _4205 = isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0));
        float _1468 = isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0));
        float _1469 = _1468 * 2.0;
        float _1473 = (1.0 - _1468) / (_1468 + 1.0);
        float _4216 = isnan(0.0) ? _1473 : (isnan(_1473) ? 0.0 : max(_1473, 0.0));
        float _1474 = isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0));
        float _1483 = ((((1.0 - _1474) * (_1469 + 2.0)) * exp2(log2(isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0))) * (_1469 + 1.0))) + _1474) * _1439;
        float _1484 = _1407 * 0.5;
        float _1485 = _1417 * 0.5;
        float _1486 = _1427 * 0.5;
        float _1487 = dot(vec3(_1484, _1485, _1486), vec3(_1484, _1485, _1486));
        float _1492 = (_1487 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1487);
        float _1500 = (dot(vec3(_746, _747, _748), vec3(_1492 * _1484, _1492 * _1485, _1492 * _1486)) + 1.0) * 0.5;
        float _4227 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
        float _1509 = sqrt(((_1485 * _1485) + (_1484 * _1484)) + (_1486 * _1486)) / (_1440 + 9.9999997473787516355514526367188e-06);
        float _4238 = isnan(0.0) ? _1509 : (isnan(_1509) ? 0.0 : max(_1509, 0.0));
        float _1510 = isnan(1.0) ? _4238 : (isnan(_4238) ? 1.0 : min(_4238, 1.0));
        float _1511 = _1510 * 2.0;
        float _1515 = (1.0 - _1510) / (_1510 + 1.0);
        float _4249 = isnan(0.0) ? _1515 : (isnan(_1515) ? 0.0 : max(_1515, 0.0));
        float _1516 = isnan(1.0) ? _4249 : (isnan(_4249) ? 1.0 : min(_4249, 1.0));
        float _1525 = ((((1.0 - _1516) * (_1511 + 2.0)) * exp2(log2(isnan(1.0) ? _4227 : (isnan(_4227) ? 1.0 : min(_4227, 1.0))) * (_1511 + 1.0))) + _1516) * _1440;
        float _1526 = _1408 * 0.5;
        float _1527 = _1418 * 0.5;
        float _1528 = _1428 * 0.5;
        float _1529 = dot(vec3(_1526, _1527, _1528), vec3(_1526, _1527, _1528));
        float _1534 = (_1529 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1529);
        float _1542 = (dot(vec3(_746, _747, _748), vec3(_1534 * _1526, _1534 * _1527, _1534 * _1528)) + 1.0) * 0.5;
        float _4260 = isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0));
        float _1551 = sqrt(((_1527 * _1527) + (_1526 * _1526)) + (_1528 * _1528)) / (_1441 + 9.9999997473787516355514526367188e-06);
        float _4271 = isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0));
        float _1552 = isnan(1.0) ? _4271 : (isnan(_4271) ? 1.0 : min(_4271, 1.0));
        float _1553 = _1552 * 2.0;
        float _1557 = (1.0 - _1552) / (_1552 + 1.0);
        float _4282 = isnan(0.0) ? _1557 : (isnan(_1557) ? 0.0 : max(_1557, 0.0));
        float _1558 = isnan(1.0) ? _4282 : (isnan(_4282) ? 1.0 : min(_4282, 1.0));
        float _1567 = ((((1.0 - _1558) * (_1553 + 2.0)) * exp2(log2(isnan(1.0) ? _4260 : (isnan(_4260) ? 1.0 : min(_4260, 1.0))) * (_1553 + 1.0))) + _1558) * _1441;
        _1575 = _1408;
        _1576 = _1407;
        _1577 = _1406;
        _1578 = _1418;
        _1579 = _1417;
        _1580 = _1416;
        _1581 = _1428;
        _1582 = _1427;
        _1583 = _1426;
        _1584 = _1441;
        _1585 = _1440;
        _1586 = _1439;
        _1587 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0)));
        _1588 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0)));
        _1589 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0)));
    }
    else
    {
        _1575 = _1267;
        _1576 = _1267;
        _1577 = _1267;
        _1578 = _1267;
        _1579 = _1267;
        _1580 = _1267;
        _1581 = _1267;
        _1582 = _1267;
        _1583 = _1267;
        _1584 = _1267;
        _1585 = _1267;
        _1586 = _1267;
        _1587 = 0.0;
        _1588 = 0.0;
        _1589 = 0.0;
    }
    float _1599 = (cbModelParam._m0[1u].x * (_1587 - _1279)) + _1279;
    float _1600 = (cbModelParam._m0[1u].x * (_1588 - _1280)) + _1280;
    float _1601 = (cbModelParam._m0[1u].x * (_1589 - _1281)) + _1281;
    float _1622 = fma(_1601, cbSceneParam._m0[89u].z, fma(_1600, cbSceneParam._m0[89u].y, _1599 * cbSceneParam._m0[89u].x));
    float _1625 = fma(_1601, cbSceneParam._m0[90u].z, fma(_1600, cbSceneParam._m0[90u].y, _1599 * cbSceneParam._m0[90u].x));
    float _1628 = fma(_1601, cbSceneParam._m0[91u].z, fma(_1600, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1599));
    float _1643 = _904 * 0.5;
    float _1644 = _905 * 0.5;
    float _1645 = _906 * 0.5;
    float _1646 = dot(vec4(_1643, _1644, _1645, 1.0), vec4(_1577, _1580, _1583, _1586));
    float _1649 = dot(vec4(_1643, _1644, _1645, 1.0), vec4(_1576, _1579, _1582, _1585));
    float _1652 = dot(vec4(_1643, _1644, _1645, 1.0), vec4(_1575, _1578, _1581, _1584));
    float _1686;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1659 = dot(vec4(_1643, _1644, _1645, 1.0), vec4(_1266, _1270, _1273, _1276));
        float _1663 = dot(vec4(_1643, _1644, _1645, 1.0), vec4(_1268, _1271, _1274, _1277));
        float _1667 = dot(vec4(_1643, _1644, _1645, 1.0), vec4(_1269, _1272, _1275, _1278));
        float _1674 = dot(vec4(cbModelParam._m0[39u]), vec4(_1643, _1644, _1645, 1.0));
        _1686 = dot(vec3(isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0)), isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0)), isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1674) ? 0.0 : (isnan(0.0) ? _1674 : max(0.0, _1674))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1686 = 1.0;
    }
    float _1697;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1688 = dot(vec4(cbModelParam._m0[40u]), vec4(_1643, _1644, _1645, 1.0));
        _1697 = dot(vec3(isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0)), isnan(0.0) ? _1649 : (isnan(_1649) ? 0.0 : max(_1649, 0.0)), isnan(0.0) ? _1652 : (isnan(_1652) ? 0.0 : max(_1652, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1688) ? 0.0 : (isnan(0.0) ? _1688 : max(0.0, _1688))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1697 = 1.0;
    }
    float _1701 = (_1697 * cbModelParam._m0[1u].x) + (_1686 * (1.0 - cbModelParam._m0[1u].x));
    float _1711 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _749);
    float _1712 = isnan(_1711) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1711 : min(cbModelParam._m0[25u].z, _1711));
    float _1792;
    float _1794;
    float _1796;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1759 = fma(_965, cbModelParam._m0[13u].z, fma(_961, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _957)) + cbModelParam._m0[13u].w;
        float _1763 = fma(_965, cbModelParam._m0[14u].z, fma(_961, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _957)) + cbModelParam._m0[14u].w;
        float _1767 = fma(_965, cbModelParam._m0[15u].z, fma(_961, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _957)) + cbModelParam._m0[15u].w;
        float _1770 = fma(_906, cbModelParam._m0[13u].z, fma(_905, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _904));
        float _1773 = fma(_906, cbModelParam._m0[14u].z, fma(_905, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _904));
        float _1776 = fma(_906, cbModelParam._m0[15u].z, fma(_905, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _904));
        float _1804;
        if (_1770 > 0.0)
        {
            _1804 = abs((1.0 - _1759) / _1770);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1770 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1759 + 1.0) / _1770);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1804 = frontier_phi_14_12_ladder;
        }
        float _1973;
        if (_1773 > 0.0)
        {
            _1973 = abs((1.0 - _1763) / _1773);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1773 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1763 + 1.0) / _1773);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1973 = frontier_phi_23_19_ladder;
        }
        float _2268;
        if (_1776 > 0.0)
        {
            _2268 = abs((1.0 - _1767) / _1776);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1776 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1767 + 1.0) / _1776);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2268 = frontier_phi_35_30_ladder;
        }
        float _2270 = isnan(_1973) ? _1804 : (isnan(_1804) ? _1973 : min(_1804, _1973));
        float _2271 = isnan(_2268) ? _2270 : (isnan(_2270) ? _2268 : min(_2270, _2268));
        float _2275 = (_2271 * _1770) + _1759;
        float _2276 = (_2271 * _1773) + _1763;
        float _2277 = (_2271 * _1776) + _1767;
        float _2278 = _2271 * 9.9999997473787516355514526367188e-05;
        float _2280 = (-1.0) - _2278;
        float _2282 = _2278 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2277 > _2282) || ((_2277 < _2280) || ((_2276 > _2282) || ((_2276 < _2280) || ((_2275 < _2280) || (_2275 > _2282))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2422 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2277, cbModelParam._m0[9u].z, fma(_2276, cbModelParam._m0[9u].y, _2275 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2277, cbModelParam._m0[10u].z, fma(_2276, cbModelParam._m0[10u].y, _2275 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2277, cbModelParam._m0[11u].z, fma(_2276, cbModelParam._m0[11u].y, _2275 * cbModelParam._m0[11u].x))), _1712);
            frontier_phi_13_35_ladder = _2422.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2422.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2422.x * cbModelParam._m0[1u].y;
        }
        _1792 = frontier_phi_13_35_ladder_2;
        _1794 = frontier_phi_13_35_ladder_1;
        _1796 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1780 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_904, _905, _906), _1712);
        _1792 = _1780.x * cbModelParam._m0[1u].y;
        _1794 = _1780.y * cbModelParam._m0[1u].y;
        _1796 = _1780.z * cbModelParam._m0[1u].y;
    }
    float _1800 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _749);
    float _1801 = isnan(_1800) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1800 : min(cbModelParam._m0[25u].w, _1800));
    float _1890;
    float _1892;
    float _1894;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1854 = fma(_965, cbModelParam._m0[21u].z, fma(_961, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _957)) + cbModelParam._m0[21u].w;
        float _1858 = fma(_965, cbModelParam._m0[22u].z, fma(_961, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _957)) + cbModelParam._m0[22u].w;
        float _1862 = fma(_965, cbModelParam._m0[23u].z, fma(_961, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _957)) + cbModelParam._m0[23u].w;
        float _1865 = fma(_906, cbModelParam._m0[21u].z, fma(_905, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _904));
        float _1868 = fma(_906, cbModelParam._m0[22u].z, fma(_905, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _904));
        float _1871 = fma(_906, cbModelParam._m0[23u].z, fma(_905, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _904));
        float _1978;
        if (_1865 > 0.0)
        {
            _1978 = abs((1.0 - _1854) / _1865);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1865 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1854 + 1.0) / _1865);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1978 = frontier_phi_25_21_ladder;
        }
        float _2295;
        if (_1868 > 0.0)
        {
            _2295 = abs((1.0 - _1858) / _1868);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1868 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1858 + 1.0) / _1868);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2295 = frontier_phi_37_32_ladder;
        }
        float _2622;
        if (_1871 > 0.0)
        {
            _2622 = abs((1.0 - _1862) / _1871);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1871 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1862 + 1.0) / _1871);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2622 = frontier_phi_47_44_ladder;
        }
        float _2624 = isnan(_2295) ? _1978 : (isnan(_1978) ? _2295 : min(_1978, _2295));
        float _2625 = isnan(_2622) ? _2624 : (isnan(_2624) ? _2622 : min(_2624, _2622));
        float _2629 = (_2625 * _1865) + _1854;
        float _2630 = (_2625 * _1868) + _1858;
        float _2631 = (_2625 * _1871) + _1862;
        float _2632 = _2625 * 9.9999997473787516355514526367188e-05;
        float _2633 = (-1.0) - _2632;
        float _2635 = _2632 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2631 > _2635) || ((_2631 < _2633) || ((_2630 > _2635) || ((_2630 < _2633) || ((_2629 < _2633) || (_2629 > _2635))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2749 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2631, cbModelParam._m0[17u].z, fma(_2630, cbModelParam._m0[17u].y, _2629 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2631, cbModelParam._m0[18u].z, fma(_2630, cbModelParam._m0[18u].y, _2629 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2631, cbModelParam._m0[19u].z, fma(_2630, cbModelParam._m0[19u].y, _2629 * cbModelParam._m0[19u].x))), _1801);
            frontier_phi_22_47_ladder = _2749.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2749.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2749.x * cbModelParam._m0[1u].z;
        }
        _1890 = frontier_phi_22_47_ladder_2;
        _1892 = frontier_phi_22_47_ladder_1;
        _1894 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1874 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_904, _905, _906), _1801);
        _1890 = _1874.x * cbModelParam._m0[1u].z;
        _1892 = _1874.y * cbModelParam._m0[1u].z;
        _1894 = _1874.z * cbModelParam._m0[1u].z;
    }
    float _1906 = ((((1.0 - _925) * ((_912 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_925 * _912)) * _896;
    float _1907 = _1906 * ((cbModelParam._m0[1u].w * (_1890 - _1792)) + _1792);
    float _1908 = _1906 * ((cbModelParam._m0[1u].w * (_1892 - _1794)) + _1794);
    float _1909 = _1906 * ((cbModelParam._m0[1u].w * (_1894 - _1796)) + _1796);
    float _1912 = fma(_1909, cbSceneParam._m0[89u].z, fma(_1908, cbSceneParam._m0[89u].y, _1907 * cbSceneParam._m0[89u].x));
    float _1915 = fma(_1909, cbSceneParam._m0[90u].z, fma(_1908, cbSceneParam._m0[90u].y, _1907 * cbSceneParam._m0[90u].x));
    float _1918 = fma(_1909, cbSceneParam._m0[91u].z, fma(_1908, cbSceneParam._m0[91u].y, _1907 * cbSceneParam._m0[91u].x));
    float _1952 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1956 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1960 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1964 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1965 = _1952 / _1964;
    float _1966 = _1956 / _1964;
    float _1967 = _1960 / _1964;
    float _2114;
    float _2115;
    float _2116;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1994 = ((uint(_1967 > cbSceneParam._m0[59u].y) + uint(_1967 > cbSceneParam._m0[59u].x)) + uint(_1967 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1995 = _1994 + 43u;
        uint _2003 = _1994 + 44u;
        uint _2011 = _1994 + 45u;
        uint _2019 = _1994 + 46u;
        float _2030 = fma(_1964, cbSceneParam._m0[_1995].w, fma(_1960, cbSceneParam._m0[_1995].z, fma(_1956, cbSceneParam._m0[_1995].y, _1952 * cbSceneParam._m0[_1995].x)));
        float _2034 = fma(_1964, cbSceneParam._m0[_2003].w, fma(_1960, cbSceneParam._m0[_2003].z, fma(_1956, cbSceneParam._m0[_2003].y, _1952 * cbSceneParam._m0[_2003].x)));
        float _2042 = fma(_1964, cbSceneParam._m0[_2019].w, fma(_1960, cbSceneParam._m0[_2019].z, fma(_1956, cbSceneParam._m0[_2019].y, _1952 * cbSceneParam._m0[_2019].x)));
        float _2047 = cbSceneParam._m0[33u].z * _2042;
        float _2049 = cbSceneParam._m0[33u].w * _2042;
        float _2052 = fma(_1964, cbSceneParam._m0[_2011].w, fma(_1960, cbSceneParam._m0[_2011].z, fma(_1956, cbSceneParam._m0[_2011].y, _1952 * cbSceneParam._m0[_2011].x))) / _2042;
        float _2100 = (cbSceneParam._m0[33u].x - sqrt(((_1966 * _1966) + (_1965 * _1965)) + (_1967 * _1967))) * cbSceneParam._m0[33u].y;
        float _4408 = isnan(0.0) ? _2100 : (isnan(_2100) ? 0.0 : max(_2100, 0.0));
        float _2107 = (isnan(1.0) ? _4408 : (isnan(_4408) ? 1.0 : min(_4408, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2047 + _2030) / _2042, (_2049 + _2034) / _2042), _2052), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2049 + _2030) / _2042, (_2034 - _2047) / _2042), _2052), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2030 - _2047) / _2042, (_2034 - _2049) / _2042), _2052), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2030 - _2049) / _2042, (_2047 + _2034) / _2042), _2052), 0.0)).x), vec4(0.25)));
        _2114 = 1.0 - (_2107 * cbSceneParam._m0[34u].x);
        _2115 = 1.0 - (_2107 * cbSceneParam._m0[34u].y);
        _2116 = 1.0 - (_2107 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2114 = 1.0;
        _2115 = 1.0;
        _2116 = 1.0;
    }
    float _2180;
    float _2182;
    float _2184;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2168 = fma(_1964, cbSceneParam._m0[63u].w, fma(_1960, cbSceneParam._m0[63u].z, fma(_1956, cbSceneParam._m0[63u].y, _1952 * cbSceneParam._m0[63u].x)));
        float _2169 = fma(_1964, cbSceneParam._m0[60u].w, fma(_1960, cbSceneParam._m0[60u].z, fma(_1956, cbSceneParam._m0[60u].y, _1952 * cbSceneParam._m0[60u].x))) / _2168;
        float _2170 = fma(_1964, cbSceneParam._m0[61u].w, fma(_1960, cbSceneParam._m0[61u].z, fma(_1956, cbSceneParam._m0[61u].y, _1952 * cbSceneParam._m0[61u].x))) / _2168;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2169 >= cbSceneParam._m0[64u].x) && (_2170 >= cbSceneParam._m0[64u].y)) && (_2169 <= cbSceneParam._m0[64u].z)) && (_2170 <= cbSceneParam._m0[64u].w))
        {
            float _2308 = fma(_1964, cbSceneParam._m0[62u].w, fma(_1960, cbSceneParam._m0[62u].z, fma(_1956, cbSceneParam._m0[62u].y, _1952 * cbSceneParam._m0[62u].x))) / _2168;
            float _2312 = isnan(cbSceneParam._m0[41u].w) ? _2308 : (isnan(_2308) ? cbSceneParam._m0[41u].w : max(_2308, cbSceneParam._m0[41u].w));
            float _2355 = (cbSceneParam._m0[33u].x - sqrt(((_1966 * _1966) + (_1965 * _1965)) + (_1967 * _1967))) * cbSceneParam._m0[33u].y;
            float _4424 = isnan(0.0) ? _2355 : (isnan(_2355) ? 0.0 : max(_2355, 0.0));
            float _2362 = (isnan(1.0) ? _4424 : (isnan(_4424) ? 1.0 : min(_4424, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2169, cbSceneParam._m0[33u].w + _2170), _2312), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2169, _2170 - cbSceneParam._m0[33u].z), _2312), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2169 - cbSceneParam._m0[33u].z, _2170 - cbSceneParam._m0[33u].w), _2312), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2169 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2170), _2312), 0.0)).x), vec4(0.25)));
            float _2366 = 1.0 - (_2362 * cbSceneParam._m0[34u].x);
            float _2367 = 1.0 - (_2362 * cbSceneParam._m0[34u].y);
            float _2368 = 1.0 - (_2362 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2368) ? _2116 : (isnan(_2116) ? _2368 : min(_2116, _2368));
            frontier_phi_34_33_ladder_1 = isnan(_2367) ? _2115 : (isnan(_2115) ? _2367 : min(_2115, _2367));
            frontier_phi_34_33_ladder_2 = isnan(_2366) ? _2114 : (isnan(_2114) ? _2366 : min(_2114, _2366));
        }
        else
        {
            frontier_phi_34_33_ladder = _2116;
            frontier_phi_34_33_ladder_1 = _2115;
            frontier_phi_34_33_ladder_2 = _2114;
        }
        _2180 = frontier_phi_34_33_ladder_2;
        _2182 = frontier_phi_34_33_ladder_1;
        _2184 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2180 = _2114;
        _2182 = _2115;
        _2184 = _2116;
    }
    uvec4 _2189 = floatBitsToUint(cbInstanceData._m0[_249 + 5u]);
    uint _2191 = _2189.x * 14u;
    uint _2192 = _2191 + 13u;
    float _2199 = _896 + (-1.0);
    float _2204 = (cbLight._m0[_2192].x * _2199) + 1.0;
    float _2205 = (cbLight._m0[_2192].y * _2199) + 1.0;
    float _2206 = (cbLight._m0[_2192].z * _2199) + 1.0;
    float _2207 = (cbLight._m0[_2192].w * _2199) + 1.0;
    uint _2208 = _2191 + 5u;
    float _2214 = isnan(1.0) ? _2205 : (isnan(_2205) ? 1.0 : min(_2205, 1.0));
    uint _2218 = _2191 + 4u;
    float _2227 = isnan(1.0) ? _2204 : (isnan(_2204) ? 1.0 : min(_2204, 1.0));
    uint _2231 = _2191 | 1u;
    float _2242 = dot(vec3(cbLight._m0[_2191].xyz), vec3(_746, _747, _748));
    float _2245 = dot(vec3(cbLight._m0[_2231].xyz), vec3(_746, _747, _748));
    float _4460 = isnan(0.0) ? _2242 : (isnan(_2242) ? 0.0 : max(_2242, 0.0));
    float _4471 = isnan(0.0) ? _2245 : (isnan(_2245) ? 0.0 : max(_2245, 0.0));
    float _2250 = (isnan(1.0) ? _4460 : (isnan(_4460) ? 1.0 : min(_4460, 1.0))) * 0.3183098733425140380859375;
    float _2252 = (isnan(1.0) ? _4471 : (isnan(_4471) ? 1.0 : min(_4471, 1.0))) * 0.3183098733425140380859375;
    float _2259 = ((cbLight._m0[_2208].x * _2214) * _2252) + (((cbLight._m0[_2218].x * _2180) * _2227) * _2250);
    float _2260 = ((_2214 * cbLight._m0[_2208].y) * _2252) + (((cbLight._m0[_2218].y * _2182) * _2227) * _2250);
    float _2261 = ((_2214 * cbLight._m0[_2208].z) * _2252) + (((cbLight._m0[_2218].z * _2184) * _2227) * _2250);
    uvec4 _2265 = floatBitsToUint(cbLight._m0[_2191 + 12u]);
    bool _2267 = _2265.x == 0u;
    float _2369;
    float _2371;
    float _2373;
    if (_2267)
    {
        _2369 = _2259;
        _2371 = _2260;
        _2373 = _2261;
    }
    else
    {
        uint _2377 = _2191 + 6u;
        float _2393 = (dot(vec3(cbLight._m0[_2191 + 2u].xyz), vec3(_746, _747, _748)) * 0.5) + 0.5;
        float _2394 = _2393 * _2393;
        float _4482 = isnan(0.0) ? _2394 : (isnan(_2394) ? 0.0 : max(_2394, 0.0));
        float _2395 = isnan(1.0) ? _4482 : (isnan(_4482) ? 1.0 : min(_4482, 1.0));
        float _2396 = isnan(1.0) ? _2206 : (isnan(_2206) ? 1.0 : min(_2206, 1.0));
        _2369 = (((cbLight._m0[_2377].x * 0.3183098733425140380859375) * _2395) * _2396) + _2259;
        _2371 = (((cbLight._m0[_2377].y * 0.3183098733425140380859375) * _2395) * _2396) + _2260;
        _2373 = (((cbLight._m0[_2377].z * 0.3183098733425140380859375) * _2395) * _2396) + _2261;
    }
    bool _2376 = _2265.y == 0u;
    float _2431;
    float _2433;
    float _2435;
    if (_2376)
    {
        _2431 = _2369;
        _2433 = _2371;
        _2435 = _2373;
    }
    else
    {
        uint _2593 = _2191 + 7u;
        float _2609 = (dot(vec3(cbLight._m0[_2191 + 3u].xyz), vec3(_746, _747, _748)) * 0.5) + 0.5;
        float _2610 = _2609 * _2609;
        float _4498 = isnan(0.0) ? _2610 : (isnan(_2610) ? 0.0 : max(_2610, 0.0));
        float _2611 = isnan(1.0) ? _4498 : (isnan(_4498) ? 1.0 : min(_4498, 1.0));
        float _2612 = isnan(1.0) ? _2207 : (isnan(_2207) ? 1.0 : min(_2207, 1.0));
        _2431 = (((cbLight._m0[_2593].x * 0.3183098733425140380859375) * _2611) * _2612) + _2369;
        _2433 = (((cbLight._m0[_2593].y * 0.3183098733425140380859375) * _2611) * _2612) + _2371;
        _2435 = (((cbLight._m0[_2593].z * 0.3183098733425140380859375) * _2611) * _2612) + _2373;
    }
    uint _2438 = _2191 + 8u;
    float _2451 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2191].w)) * _749) * 0.949999988079071044921875);
    float _2452 = _2451 * _2451;
    float _2453 = cbLight._m0[_2191].x + _825;
    float _2454 = cbLight._m0[_2191].y + _826;
    float _2455 = cbLight._m0[_2191].z + _827;
    float _2459 = inversesqrt(dot(vec3(_2453, _2454, _2455), vec3(_2453, _2454, _2455)));
    float _2460 = _2459 * _2453;
    float _2461 = _2459 * _2454;
    float _2462 = _2459 * _2455;
    float _2463 = dot(vec3(_746, _747, _748), vec3(cbLight._m0[_2191].xyz));
    float _4514 = isnan(0.0) ? _2463 : (isnan(_2463) ? 0.0 : max(_2463, 0.0));
    float _2466 = isnan(1.0) ? _4514 : (isnan(_4514) ? 1.0 : min(_4514, 1.0));
    float _4525 = isnan(0.0) ? _897 : (isnan(_897) ? 0.0 : max(_897, 0.0));
    float _2467 = isnan(1.0) ? _4525 : (isnan(_4525) ? 1.0 : min(_4525, 1.0));
    float _2468 = dot(vec3(_746, _747, _748), vec3(_2460, _2461, _2462));
    float _4536 = isnan(0.0) ? _2468 : (isnan(_2468) ? 0.0 : max(_2468, 0.0));
    float _2471 = isnan(1.0) ? _4536 : (isnan(_4536) ? 1.0 : min(_4536, 1.0));
    float _2472 = dot(vec3(cbLight._m0[_2191].xyz), vec3(_2460, _2461, _2462));
    float _4547 = isnan(0.0) ? _2472 : (isnan(_2472) ? 0.0 : max(_2472, 0.0));
    float _2476 = _2452 * _2452;
    float _2480 = ((_2471 * _2471) * (_2476 + (-1.0))) + 1.0;
    float _2491 = (exp2(log2(1.0 - (isnan(1.0) ? _4547 : (isnan(_4547) ? 1.0 : min(_4547, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2492 = 1.0 - _2452;
    float _2503 = (0.5 / (((_2467 * ((_2466 * _2492) + _2452)) + 9.9999999392252902907785028219223e-09) + (((_2467 * _2492) + _2452) * _2466))) * _2466;
    float _4558 = isnan(0.0) ? _2503 : (isnan(_2503) ? 0.0 : max(_2503, 0.0));
    float _2505 = (isnan(1.0) ? _4558 : (isnan(_4558) ? 1.0 : min(_4558, 1.0))) * (_2476 / ((_2480 * _2480) * 3.141590118408203125));
    uint _2519 = _2191 + 9u;
    float _2530 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2231].w)) * _749) * 0.949999988079071044921875);
    float _2531 = _2530 * _2530;
    float _2532 = cbLight._m0[_2231].x + _825;
    float _2533 = cbLight._m0[_2231].y + _826;
    float _2534 = cbLight._m0[_2231].z + _827;
    float _2538 = inversesqrt(dot(vec3(_2532, _2533, _2534), vec3(_2532, _2533, _2534)));
    float _2539 = _2538 * _2532;
    float _2540 = _2538 * _2533;
    float _2541 = _2538 * _2534;
    float _2542 = dot(vec3(_746, _747, _748), vec3(cbLight._m0[_2231].xyz));
    float _4569 = isnan(0.0) ? _2542 : (isnan(_2542) ? 0.0 : max(_2542, 0.0));
    float _2545 = isnan(1.0) ? _4569 : (isnan(_4569) ? 1.0 : min(_4569, 1.0));
    float _2546 = dot(vec3(_746, _747, _748), vec3(_2539, _2540, _2541));
    float _4580 = isnan(0.0) ? _2546 : (isnan(_2546) ? 0.0 : max(_2546, 0.0));
    float _2549 = isnan(1.0) ? _4580 : (isnan(_4580) ? 1.0 : min(_4580, 1.0));
    float _2550 = dot(vec3(cbLight._m0[_2231].xyz), vec3(_2539, _2540, _2541));
    float _4591 = isnan(0.0) ? _2550 : (isnan(_2550) ? 0.0 : max(_2550, 0.0));
    float _2554 = _2531 * _2531;
    float _2558 = ((_2549 * _2549) * (_2554 + (-1.0))) + 1.0;
    float _2567 = (exp2(log2(1.0 - (isnan(1.0) ? _4591 : (isnan(_4591) ? 1.0 : min(_4591, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2568 = 1.0 - _2531;
    float _2578 = (0.5 / (((_2467 * ((_2545 * _2568) + _2531)) + 9.9999999392252902907785028219223e-09) + (((_2467 * _2568) + _2531) * _2545))) * _2545;
    float _4602 = isnan(0.0) ? _2578 : (isnan(_2578) ? 0.0 : max(_2578, 0.0));
    float _2580 = (isnan(1.0) ? _4602 : (isnan(_4602) ? 1.0 : min(_4602, 1.0))) * (_2554 / ((_2558 * _2558) * 3.141590118408203125));
    float _2590 = (((_2567 * cbLight._m0[_2519].x) * _2580) * _2214) + ((((cbLight._m0[_2438].x * _2180) * _2491) * _2505) * _2227);
    float _2591 = (((_2567 * cbLight._m0[_2519].y) * _2580) * _2214) + ((((cbLight._m0[_2438].y * _2182) * _2491) * _2505) * _2227);
    float _2592 = (((_2567 * cbLight._m0[_2519].z) * _2580) * _2214) + ((((cbLight._m0[_2438].z * _2184) * _2491) * _2505) * _2227);
    float _2648;
    float _2650;
    float _2652;
    if (_2267)
    {
        _2648 = _2590;
        _2650 = _2591;
        _2652 = _2592;
    }
    else
    {
        uint _2654 = _2191 + 2u;
        uint _2658 = _2191 + 10u;
        float _2672 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2654].w)) * _749) * 0.949999988079071044921875);
        float _2673 = _2672 * _2672;
        float _2674 = cbLight._m0[_2654].x + _825;
        float _2675 = cbLight._m0[_2654].y + _826;
        float _2676 = cbLight._m0[_2654].z + _827;
        float _2680 = inversesqrt(dot(vec3(_2674, _2675, _2676), vec3(_2674, _2675, _2676)));
        float _2681 = _2680 * _2674;
        float _2682 = _2680 * _2675;
        float _2683 = _2680 * _2676;
        float _2684 = dot(vec3(_746, _747, _748), vec3(cbLight._m0[_2654].xyz));
        float _4613 = isnan(0.0) ? _2684 : (isnan(_2684) ? 0.0 : max(_2684, 0.0));
        float _2687 = isnan(1.0) ? _4613 : (isnan(_4613) ? 1.0 : min(_4613, 1.0));
        float _2688 = dot(vec3(_746, _747, _748), vec3(_2681, _2682, _2683));
        float _4624 = isnan(0.0) ? _2688 : (isnan(_2688) ? 0.0 : max(_2688, 0.0));
        float _2691 = isnan(1.0) ? _4624 : (isnan(_4624) ? 1.0 : min(_4624, 1.0));
        float _2692 = dot(vec3(cbLight._m0[_2654].xyz), vec3(_2681, _2682, _2683));
        float _4635 = isnan(0.0) ? _2692 : (isnan(_2692) ? 0.0 : max(_2692, 0.0));
        float _2696 = _2673 * _2673;
        float _2700 = ((_2691 * _2691) * (_2696 + (-1.0))) + 1.0;
        float _2709 = (exp2(log2(1.0 - (isnan(1.0) ? _4635 : (isnan(_4635) ? 1.0 : min(_4635, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2710 = 1.0 - _2673;
        float _2720 = (0.5 / (((_2467 * ((_2687 * _2710) + _2673)) + 9.9999999392252902907785028219223e-09) + (((_2467 * _2710) + _2673) * _2687))) * _2687;
        float _4646 = isnan(0.0) ? _2720 : (isnan(_2720) ? 0.0 : max(_2720, 0.0));
        float _2722 = (isnan(1.0) ? _4646 : (isnan(_4646) ? 1.0 : min(_4646, 1.0))) * (_2696 / ((_2700 * _2700) * 3.141590118408203125));
        float _2723 = isnan(1.0) ? _2206 : (isnan(_2206) ? 1.0 : min(_2206, 1.0));
        _2648 = (((_2709 * cbLight._m0[_2658].x) * _2722) * _2723) + _2590;
        _2650 = (((_2709 * cbLight._m0[_2658].y) * _2722) * _2723) + _2591;
        _2652 = (((_2709 * cbLight._m0[_2658].z) * _2722) * _2723) + _2592;
    }
    float _2754;
    float _2756;
    float _2758;
    if (_2376)
    {
        _2754 = _2648;
        _2756 = _2650;
        _2758 = _2652;
    }
    else
    {
        uint _2765 = _2191 + 3u;
        uint _2769 = _2191 + 11u;
        float _2783 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2765].w)) * _749) * 0.949999988079071044921875);
        float _2784 = _2783 * _2783;
        float _2785 = cbLight._m0[_2765].x + _825;
        float _2786 = cbLight._m0[_2765].y + _826;
        float _2787 = cbLight._m0[_2765].z + _827;
        float _2791 = inversesqrt(dot(vec3(_2785, _2786, _2787), vec3(_2785, _2786, _2787)));
        float _2792 = _2791 * _2785;
        float _2793 = _2791 * _2786;
        float _2794 = _2791 * _2787;
        float _2795 = dot(vec3(_746, _747, _748), vec3(cbLight._m0[_2765].xyz));
        float _4662 = isnan(0.0) ? _2795 : (isnan(_2795) ? 0.0 : max(_2795, 0.0));
        float _2798 = isnan(1.0) ? _4662 : (isnan(_4662) ? 1.0 : min(_4662, 1.0));
        float _2799 = dot(vec3(_746, _747, _748), vec3(_2792, _2793, _2794));
        float _4673 = isnan(0.0) ? _2799 : (isnan(_2799) ? 0.0 : max(_2799, 0.0));
        float _2802 = isnan(1.0) ? _4673 : (isnan(_4673) ? 1.0 : min(_4673, 1.0));
        float _2803 = dot(vec3(cbLight._m0[_2765].xyz), vec3(_2792, _2793, _2794));
        float _4684 = isnan(0.0) ? _2803 : (isnan(_2803) ? 0.0 : max(_2803, 0.0));
        float _2807 = _2784 * _2784;
        float _2811 = ((_2802 * _2802) * (_2807 + (-1.0))) + 1.0;
        float _2820 = (exp2(log2(1.0 - (isnan(1.0) ? _4684 : (isnan(_4684) ? 1.0 : min(_4684, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2821 = 1.0 - _2784;
        float _2831 = (0.5 / (((_2467 * ((_2798 * _2821) + _2784)) + 9.9999999392252902907785028219223e-09) + (((_2467 * _2821) + _2784) * _2798))) * _2798;
        float _4695 = isnan(0.0) ? _2831 : (isnan(_2831) ? 0.0 : max(_2831, 0.0));
        float _2833 = (isnan(1.0) ? _4695 : (isnan(_4695) ? 1.0 : min(_4695, 1.0))) * (_2807 / ((_2811 * _2811) * 3.141590118408203125));
        float _2834 = isnan(1.0) ? _2207 : (isnan(_2207) ? 1.0 : min(_2207, 1.0));
        _2754 = (((_2820 * cbLight._m0[_2769].x) * _2833) * _2834) + _2648;
        _2756 = (((_2820 * cbLight._m0[_2769].y) * _2833) * _2834) + _2650;
        _2758 = (((_2820 * cbLight._m0[_2769].z) * _2833) * _2834) + _2652;
    }
    float _2900;
    float _2902;
    float _2904;
    float _2906;
    float _2908;
    float _2910;
    if (_2189.y == 0u)
    {
        uvec4 _2855 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2856 = _2855.x;
        uint _2867 = uint((float(_2855.y) * floor(float(uint(cbSceneParam._m0[85u].y * _834) / _2856))) + floor(float(uint(cbSceneParam._m0[85u].x * _833) / _2856)));
        float _2877 = (log2(_1967 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2878 = isnan(0.0) ? _2877 : (isnan(_2877) ? 0.0 : max(_2877, 0.0));
        uint _2881 = uint(isnan(14.0) ? _2878 : (isnan(_2878) ? 14.0 : min(_2878, 14.0)));
        uvec4 _2886 = texelFetch(g_lightClusterGridBuffer, int(((_2881 << 2u) + (_2867 << 6u)) >> 2u));
        uint _2887 = _2886.x;
        uint _2888 = _2855.z;
        float _2967;
        float _2969;
        float _2971;
        float _2973;
        float _2975;
        float _2977;
        if (((((1u << ((_2888 >> 4u) & 15u)) + 4294967295u) & _2887) == 0u) || ((_2888 & 240u) == 0u))
        {
            _2967 = 0.0;
            _2969 = 0.0;
            _2971 = 0.0;
            _2973 = 0.0;
            _2975 = 0.0;
            _2977 = 0.0;
        }
        else
        {
            float _2968;
            float _2970;
            float _2972;
            float _2974;
            float _2976;
            float _2978;
            float _3111 = 0.0;
            float _3112 = 0.0;
            float _3113 = 0.0;
            float _3114 = 0.0;
            float _3115 = 0.0;
            float _3116 = 0.0;
            uint _3117 = 0u;
            uint _3126;
            bool _3127;
            for (;;)
            {
                _3126 = texelFetch(g_lightClassification, int((((_2881 << 5u) + (_2867 << 9u)) + (_3117 << 2u)) >> 2u)).x;
                _3127 = _3126 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3127)
                {
                    frontier_phi_66_pred = _3116;
                    frontier_phi_66_pred_1 = _3115;
                    frontier_phi_66_pred_2 = _3114;
                    frontier_phi_66_pred_3 = _3113;
                    frontier_phi_66_pred_4 = _3112;
                    frontier_phi_66_pred_5 = _3111;
                }
                else
                {
                    float _3235;
                    float _3236;
                    float _3237;
                    float _3238;
                    float _3239;
                    float _3240;
                    uint _3241;
                    _3235 = _3111;
                    _3236 = _3112;
                    _3237 = _3113;
                    _3238 = _3114;
                    _3239 = _3115;
                    _3240 = _3116;
                    _3241 = _3126;
                    float _3167;
                    float _3168;
                    float _3169;
                    float _3170;
                    float _3171;
                    float _3172;
                    for (;;)
                    {
                        uint _3245 = uint(findLSB(_3241)) + (_3117 << 5u);
                        uint _3242 = (_3241 + 4294967295u) & _3241;
                        uint _3247 = _3245 * 48u;
                        vec4 _3261 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3247)).x, texelFetch(g_PointLightRenderingBuffer, int(_3247 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3247 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3247 + 3u)).x));
                        uint _3267 = (_3245 * 48u) + 4u;
                        vec4 _3280 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3267)).x, texelFetch(g_PointLightRenderingBuffer, int(_3267 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3267 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3267 + 3u)).x));
                        uint _3286 = (_3245 * 48u) + 8u;
                        vec3 _3297 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3286)).x, texelFetch(g_PointLightRenderingBuffer, int(_3286 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3286 + 2u)).x));
                        float _3301 = _3261.x - _1965;
                        float _3302 = _3261.y - _1966;
                        float _3303 = _3261.z - _1967;
                        float _3304 = dot(vec3(_3301, _3302, _3303), vec3(_3301, _3302, _3303));
                        float _3307 = inversesqrt(_3304);
                        float _3308 = _3307 * _3301;
                        float _3309 = _3307 * _3302;
                        float _3310 = _3307 * _3303;
                        float _3311 = dot(vec3(_852, _855, _858), vec3(_3308, _3309, _3310));
                        float _3316 = 1.0 - (_3304 * _3261.w);
                        float _4721 = isnan(0.0) ? _3316 : (isnan(_3316) ? 0.0 : max(_3316, 0.0));
                        float _3317 = isnan(1.0) ? _4721 : (isnan(_4721) ? 1.0 : min(_4721, 1.0));
                        float _3318 = sqrt(_3304) * _3280.w;
                        float _3321 = 1.39999997615814208984375 / (_3318 + 1.39999997615814208984375);
                        float _3322 = _3321 * _3321;
                        float _3325 = ((1.0 - _3322) * _3311) + _3322;
                        float _3328 = _3318 * _3318;
                        float _3332 = ((isnan(0.0) ? _3325 : (isnan(_3325) ? 0.0 : max(_3325, 0.0))) * _3317) / ((_3328 * 0.699999988079071044921875) + 1.0);
                        float _3336 = (-0.0) - _1965;
                        float _3337 = (-0.0) - _1966;
                        float _3338 = (-0.0) - _1967;
                        float _3342 = inversesqrt(dot(vec3(_3336, _3337, _3338), vec3(_3336, _3337, _3338)));
                        float _3343 = _3342 * _3336;
                        float _3344 = _3342 * _3337;
                        float _3345 = _3342 * _3338;
                        float _3352 = exp2(log2(1.0 / ((_3328 * 3.5) + 5.0)) * 0.25);
                        float _3353 = 1.0 - _912;
                        float _3360 = sqrt(1.0 - ((1.0 - (_3353 * _3353)) * (1.0 - (_3352 * _3352))));
                        float _3361 = _3360 * _3360;
                        float _3362 = _3361 * _3361;
                        float _3363 = _3343 + _3308;
                        float _3364 = _3344 + _3309;
                        float _3365 = _3345 + _3310;
                        float _3369 = inversesqrt(dot(vec3(_3363, _3364, _3365), vec3(_3363, _3364, _3365)));
                        float _3373 = dot(vec3(_852, _855, _858), vec3(_3343, _3344, _3345));
                        float _4737 = isnan(0.0) ? _3373 : (isnan(_3373) ? 0.0 : max(_3373, 0.0));
                        float _3376 = isnan(1.0) ? _4737 : (isnan(_4737) ? 1.0 : min(_4737, 1.0));
                        float _3377 = dot(vec3(_852, _855, _858), vec3(_3369 * _3363, _3369 * _3364, _3369 * _3365));
                        float _4748 = isnan(0.0) ? _3377 : (isnan(_3377) ? 0.0 : max(_3377, 0.0));
                        float _3380 = isnan(1.0) ? _4748 : (isnan(_4748) ? 1.0 : min(_4748, 1.0));
                        float _3384 = ((_3380 * _3380) * (_3362 + (-1.0))) + 1.0;
                        float _3385 = _3321 * _3361;
                        float _3386 = _3385 * _3385;
                        float _3389 = ((1.0 - _3386) * _3311) + _3386;
                        float _4759 = isnan(0.0) ? _3389 : (isnan(_3389) ? 0.0 : max(_3389, 0.0));
                        float _3390 = isnan(1.0) ? _4759 : (isnan(_4759) ? 1.0 : min(_4759, 1.0));
                        float _3391 = 1.0 - _3361;
                        float _3401 = (0.5 / (((_3390 * ((_3376 * _3391) + _3361)) + 9.9999999392252902907785028219223e-09) + (((_3390 * _3391) + _3361) * _3376))) * _3390;
                        float _4770 = isnan(0.0) ? _3401 : (isnan(_3401) ? 0.0 : max(_3401, 0.0));
                        float _3412 = (((_3362 * 3.1415927410125732421875) * (isnan(1.0) ? _4770 : (isnan(_4770) ? 1.0 : min(_4770, 1.0)))) / ((_3384 * _3384) * ((_3328 * 2.1991131305694580078125) + 3.141590118408203125))) * _3317;
                        _3170 = (_3332 * _3280.x) + _3238;
                        _3171 = (_3332 * _3280.y) + _3239;
                        _3172 = (_3332 * _3280.z) + _3240;
                        _3167 = (_3412 * _3297.x) + _3235;
                        _3168 = (_3412 * _3297.y) + _3236;
                        _3169 = (_3412 * _3297.z) + _3237;
                        if (_3242 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3235 = _3167;
                            _3236 = _3168;
                            _3237 = _3169;
                            _3238 = _3170;
                            _3239 = _3171;
                            _3240 = _3172;
                            _3241 = _3242;
                        }
                    }
                    frontier_phi_66_pred = _3172;
                    frontier_phi_66_pred_1 = _3171;
                    frontier_phi_66_pred_2 = _3170;
                    frontier_phi_66_pred_3 = _3169;
                    frontier_phi_66_pred_4 = _3168;
                    frontier_phi_66_pred_5 = _3167;
                }
                _2978 = frontier_phi_66_pred;
                _2976 = frontier_phi_66_pred_1;
                _2974 = frontier_phi_66_pred_2;
                _2972 = frontier_phi_66_pred_3;
                _2970 = frontier_phi_66_pred_4;
                _2968 = frontier_phi_66_pred_5;
                uint _3118 = _3117 + 1u;
                if (_3118 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3111 = _2968;
                    _3112 = _2970;
                    _3113 = _2972;
                    _3114 = _2974;
                    _3115 = _2976;
                    _3116 = _2978;
                    _3117 = _3118;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2967 = _2968;
            _2969 = _2970;
            _2971 = _2972;
            _2973 = _2974;
            _2975 = _2976;
            _2977 = _2978;
        }
        uvec4 _2981 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2982 = _2981.z;
        uint _2984 = (_2982 >> 8u) & 15u;
        float _3079;
        float _3081;
        float _3083;
        float _3085;
        float _3087;
        float _3089;
        if (((4294967295u << _2984) & _2887) == 0u)
        {
            _3079 = _2967;
            _3081 = _2969;
            _3083 = _2971;
            _3085 = _2973;
            _3087 = _2975;
            _3089 = _2977;
        }
        else
        {
            float _3104 = inversesqrt(dot(vec3(_1965, _1966, _1967), vec3(_1965, _1966, _1967)));
            float _3105 = _3104 * _1965;
            float _3106 = _3104 * _1966;
            float _3107 = _3104 * _1967;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2984 < ((_2982 >> 12u) & 15u))
            {
                float _3080;
                float _3082;
                float _3084;
                float _3086;
                float _3088;
                float _3090;
                float _3218 = _2967;
                float _3219 = _2969;
                float _3220 = _2971;
                float _3221 = _2973;
                float _3222 = _2975;
                float _3223 = _2977;
                uint _3224 = _2984;
                uint _3233;
                bool _3234;
                for (;;)
                {
                    _3233 = texelFetch(g_lightClassification, int((((_2881 << 5u) + (_2867 << 9u)) + (_3224 << 2u)) >> 2u)).x;
                    _3234 = _3233 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3234)
                    {
                        frontier_phi_72_pred = _3223;
                        frontier_phi_72_pred_1 = _3222;
                        frontier_phi_72_pred_2 = _3221;
                        frontier_phi_72_pred_3 = _3220;
                        frontier_phi_72_pred_4 = _3219;
                        frontier_phi_72_pred_5 = _3218;
                    }
                    else
                    {
                        float _3417;
                        float _3418;
                        float _3419;
                        float _3420;
                        float _3421;
                        float _3422;
                        float _3711;
                        float _3712;
                        float _3713;
                        float _3714;
                        float _3715;
                        float _3716;
                        float _3430 = _3218;
                        float _3431 = _3219;
                        float _3432 = _3220;
                        float _3433 = _3221;
                        float _3434 = _3222;
                        float _3435 = _3223;
                        uint _3436 = _3233;
                        uint _3437;
                        vec4 _3462;
                        float _3463;
                        vec4 _3478;
                        vec3 _3490;
                        vec4 _3505;
                        vec4 _3521;
                        float _3567;
                        bool _3568;
                        for (;;)
                        {
                            uint _3447 = ((_3224 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3436));
                            _3437 = (_3436 + 4294967295u) & _3436;
                            uint _3449 = _3447 * 40u;
                            _3462 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3449)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3449 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3449 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3449 + 3u)).x));
                            _3463 = _3462.w;
                            uint _3465 = (_3447 * 40u) + 4u;
                            _3478 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3465)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3465 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3465 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3465 + 3u)).x));
                            uint _3480 = (_3447 * 40u) + 8u;
                            _3490 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3480)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3480 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3480 + 2u)).x));
                            uint _3492 = (_3447 * 40u) + 16u;
                            _3505 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3492)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3492 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3492 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3492 + 3u)).x));
                            uint _3508 = (_3447 * 40u) + 20u;
                            _3521 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3508)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3508 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3508 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3508 + 3u)).x));
                            uint _3523 = (_3447 * 40u) + 24u;
                            vec4 _3536 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3523)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3523 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3523 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3523 + 3u)).x));
                            uint _3542 = (_3447 * 40u) + 28u;
                            vec4 _3555 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3542)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3542 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3542 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3542 + 3u)).x));
                            _3567 = fma(_1967, _3555.z, fma(_1966, _3555.y, _3555.x * _1965)) + _3555.w;
                            _3568 = !((fma(_1967, _3536.z, fma(_1966, _3536.y, _3536.x * _1965)) + _3536.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3568)
                            {
                                float _3595 = _3462.x - _1965;
                                float _3596 = _3462.y - _1966;
                                float _3597 = _3462.z - _1967;
                                float _3598 = dot(vec3(_3595, _3596, _3597), vec3(_3595, _3596, _3597));
                                float _3601 = inversesqrt(_3598);
                                float _3602 = _3601 * _3595;
                                float _3603 = _3601 * _3596;
                                float _3604 = _3601 * _3597;
                                float _3608 = 1.0 - (_3598 / (_3463 * _3463));
                                float _4781 = isnan(0.0) ? _3608 : (isnan(_3608) ? 0.0 : max(_3608, 0.0));
                                float _3609 = isnan(1.0) ? _4781 : (isnan(_4781) ? 1.0 : min(_4781, 1.0));
                                float _3613 = sqrt(_3598) * _3478.w;
                                float _3615 = 1.39999997615814208984375 / (_3613 + 1.39999997615814208984375);
                                float _3616 = _3615 * _3615;
                                float _3619 = ((1.0 - _3616) * dot(vec3(_3602, _3603, _3604), vec3(_852, _855, _858))) + _3616;
                                float _3622 = _3613 * _3613;
                                float _3626 = (fma(_1967, _3505.z, fma(_1966, _3505.y, _3505.x * _1965)) + _3505.w) / _3567;
                                float _3627 = (fma(_1967, _3521.z, fma(_1966, _3521.y, _3521.x * _1965)) + _3521.w) / _3567;
                                float _3631 = 1.0 - dot(vec2(_3626, _3627), vec2(_3626, _3627));
                                float _4797 = isnan(0.0) ? _3631 : (isnan(_3631) ? 0.0 : max(_3631, 0.0));
                                float _3632 = isnan(1.0) ? _4797 : (isnan(_4797) ? 1.0 : min(_4797, 1.0));
                                float _3633 = _3632 * (((isnan(0.0) ? _3619 : (isnan(_3619) ? 0.0 : max(_3619, 0.0))) * _3609) / ((_3622 * 0.699999988079071044921875) + 1.0));
                                float _3645 = exp2(log2(1.0 / ((_3622 * 3.5) + 5.0)) * 0.25);
                                float _3646 = 1.0 - _912;
                                float _3653 = sqrt(1.0 - ((1.0 - (_3646 * _3646)) * (1.0 - (_3645 * _3645))));
                                float _3654 = _3653 * _3653;
                                float _3655 = _3654 * _3654;
                                float _3656 = _3602 - _3105;
                                float _3657 = _3603 - _3106;
                                float _3658 = _3604 - _3107;
                                float _3662 = inversesqrt(dot(vec3(_3656, _3657, _3658), vec3(_3656, _3657, _3658)));
                                float _3666 = dot(vec3(_852, _855, _858), vec3((-0.0) - _3105, (-0.0) - _3106, (-0.0) - _3107));
                                float _4808 = isnan(0.0) ? _3666 : (isnan(_3666) ? 0.0 : max(_3666, 0.0));
                                float _3669 = isnan(1.0) ? _4808 : (isnan(_4808) ? 1.0 : min(_4808, 1.0));
                                float _3670 = dot(vec3(_852, _855, _858), vec3(_3662 * _3656, _3662 * _3657, _3662 * _3658));
                                float _4819 = isnan(0.0) ? _3670 : (isnan(_3670) ? 0.0 : max(_3670, 0.0));
                                float _3673 = isnan(1.0) ? _4819 : (isnan(_4819) ? 1.0 : min(_4819, 1.0));
                                float _3677 = ((_3673 * _3673) * (_3655 + (-1.0))) + 1.0;
                                float _3678 = _3615 * _3654;
                                float _3679 = _3678 * _3678;
                                float _3685 = ((1.0 - _3679) * dot(vec3(_852, _855, _858), vec3(_3602, _3603, _3604))) + _3679;
                                float _4830 = isnan(0.0) ? _3685 : (isnan(_3685) ? 0.0 : max(_3685, 0.0));
                                float _3686 = isnan(1.0) ? _4830 : (isnan(_4830) ? 1.0 : min(_4830, 1.0));
                                float _3687 = 1.0 - _3654;
                                float _3697 = (0.5 / (((_3686 * ((_3669 * _3687) + _3654)) + 9.9999999392252902907785028219223e-09) + (((_3686 * _3687) + _3654) * _3669))) * _3686;
                                float _4841 = isnan(0.0) ? _3697 : (isnan(_3697) ? 0.0 : max(_3697, 0.0));
                                float _3707 = (_3632 * _3609) * (((_3655 * 3.1415927410125732421875) * (isnan(1.0) ? _4841 : (isnan(_4841) ? 1.0 : min(_4841, 1.0)))) / ((_3677 * _3677) * ((_3622 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3633 * _3478.y;
                                frontier_phi_78_pred_1 = _3633 * _3478.x;
                                frontier_phi_78_pred_2 = _3707 * _3490.z;
                                frontier_phi_78_pred_3 = _3707 * _3490.y;
                                frontier_phi_78_pred_4 = _3707 * _3490.x;
                                frontier_phi_78_pred_5 = _3633 * _3478.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3715 = frontier_phi_78_pred;
                            _3714 = frontier_phi_78_pred_1;
                            _3713 = frontier_phi_78_pred_2;
                            _3712 = frontier_phi_78_pred_3;
                            _3711 = frontier_phi_78_pred_4;
                            _3716 = frontier_phi_78_pred_5;
                            _3420 = _3714 + _3433;
                            _3421 = _3715 + _3434;
                            _3422 = _3716 + _3435;
                            _3417 = _3711 + _3430;
                            _3418 = _3712 + _3431;
                            _3419 = _3713 + _3432;
                            if (_3437 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3430 = _3417;
                                _3431 = _3418;
                                _3432 = _3419;
                                _3433 = _3420;
                                _3434 = _3421;
                                _3435 = _3422;
                                _3436 = _3437;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3422;
                        frontier_phi_72_pred_1 = _3421;
                        frontier_phi_72_pred_2 = _3420;
                        frontier_phi_72_pred_3 = _3419;
                        frontier_phi_72_pred_4 = _3418;
                        frontier_phi_72_pred_5 = _3417;
                    }
                    _3090 = frontier_phi_72_pred;
                    _3088 = frontier_phi_72_pred_1;
                    _3086 = frontier_phi_72_pred_2;
                    _3084 = frontier_phi_72_pred_3;
                    _3082 = frontier_phi_72_pred_4;
                    _3080 = frontier_phi_72_pred_5;
                    uint _3225 = _3224 + 1u;
                    if (_3225 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3218 = _3080;
                        _3219 = _3082;
                        _3220 = _3084;
                        _3221 = _3086;
                        _3222 = _3088;
                        _3223 = _3090;
                        _3224 = _3225;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3090;
                frontier_phi_60_61_ladder_1 = _3088;
                frontier_phi_60_61_ladder_2 = _3084;
                frontier_phi_60_61_ladder_3 = _3082;
                frontier_phi_60_61_ladder_4 = _3080;
                frontier_phi_60_61_ladder_5 = _3086;
            }
            else
            {
                frontier_phi_60_61_ladder = _2977;
                frontier_phi_60_61_ladder_1 = _2975;
                frontier_phi_60_61_ladder_2 = _2971;
                frontier_phi_60_61_ladder_3 = _2969;
                frontier_phi_60_61_ladder_4 = _2967;
                frontier_phi_60_61_ladder_5 = _2973;
            }
            _3079 = frontier_phi_60_61_ladder_4;
            _3081 = frontier_phi_60_61_ladder_3;
            _3083 = frontier_phi_60_61_ladder_2;
            _3085 = frontier_phi_60_61_ladder_5;
            _3087 = frontier_phi_60_61_ladder_1;
            _3089 = frontier_phi_60_61_ladder;
        }
        float _3094 = isnan(1.0) ? _896 : (isnan(_896) ? 1.0 : min(_896, 1.0));
        _2900 = (_3094 * _3085) + _2431;
        _2902 = (_3094 * _3087) + _2433;
        _2904 = (_3094 * _3089) + _2435;
        _2906 = ((_3079 * 0.039999999105930328369140625) * _3094) + _2754;
        _2908 = ((_3081 * 0.039999999105930328369140625) * _3094) + _2756;
        _2910 = ((_3083 * 0.039999999105930328369140625) * _3094) + _2758;
    }
    else
    {
        _2900 = _2431;
        _2902 = _2433;
        _2904 = _2435;
        _2906 = _2754;
        _2908 = _2756;
        _2910 = _2758;
    }
    float _4857 = isnan(0.0) ? _881 : (isnan(_881) ? 0.0 : max(_881, 0.0));
    float _4868 = isnan(0.0) ? _882 : (isnan(_882) ? 0.0 : max(_882, 0.0));
    float _4879 = isnan(0.0) ? _883 : (isnan(_883) ? 0.0 : max(_883, 0.0));
    uint _2930 = _249 + 6u;
    float _2938 = _833 / cbSceneParam._m0[86u].x;
    float _2939 = _834 / cbSceneParam._m0[86u].y;
    vec4 _2953 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2938, _2939, (log2((isnan(cbSceneParam._m0[77u].w) ? _767 : (isnan(_767) ? cbSceneParam._m0[77u].w : min(_767, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2955 = _2953.x;
    float _2956 = _2953.y;
    float _2957 = _2953.z;
    float _2958 = _2953.w;
    float _3029;
    float _3031;
    float _3033;
    float _3035;
    if (_767 > cbSceneParam._m0[78u].w)
    {
        float _2992 = isnan(_767) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _767 : min(cbSceneParam._m0[80u].w, _767));
        float _2993 = _2992 / _767;
        float _3004 = _2993 * _818;
        float _3005 = _819 * _2993;
        float _3006 = (-0.0) - _3005;
        float _3007 = _2993 * _820;
        float _3009 = (cbSceneParam._m0[77u].w * _3006) / _2992;
        float _3010 = _3009 + cbSceneParam._m0[79u].w;
        float _3011 = cbSceneParam._m0[79u].w - _3005;
        float _3017 = sqrt(((_3004 * _3004) + (_3005 * _3005)) + (_3007 * _3007));
        float _3020 = (1.0 - (cbSceneParam._m0[77u].w / _2992)) * _3017;
        float _3025 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3027 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3180;
        if (abs((_3006 - _3009) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3180 = ((((_3010 > 0.0) ? exp2(_3025 * _3010) : (2.0 - exp2(_3027 * _3010))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3020;
        }
        else
        {
            float _3140 = 1.0 / cbSceneParam._m0[80u].x;
            float _3141 = isnan(_3011) ? _3010 : (isnan(_3010) ? _3011 : max(_3010, _3011));
            float _3142 = isnan(_3011) ? _3010 : (isnan(_3010) ? _3011 : min(_3010, _3011));
            float _3151 = isnan(0.0) ? _3141 : (isnan(_3141) ? 0.0 : min(_3141, 0.0));
            float _3152 = isnan(0.0) ? _3142 : (isnan(_3142) ? 0.0 : min(_3142, 0.0));
            _3180 = ((abs(_3017 / _3006) * cbSceneParam._m0[80u].y) * ((((_3151 - _3152) * 2.0) - ((exp2(_3025 * (isnan(0.0) ? _3141 : (isnan(_3141) ? 0.0 : max(_3141, 0.0)))) - exp2(_3025 * (isnan(0.0) ? _3142 : (isnan(_3142) ? 0.0 : max(_3142, 0.0))))) * _3140)) - ((exp2(_3027 * _3151) - exp2(_3027 * _3152)) * _3140))) + (_3020 * cbSceneParam._m0[80u].z);
        }
        vec4 _3182 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2938, _2939, 1.0), 0.0);
        float _3191 = exp2((_3180 * (-1.44269502162933349609375)) * (1.0 - _3182.w));
        float _3192 = log2(_3191);
        float _3208 = log2(_2958);
        _3029 = (exp2(_3208 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3192 * cbSceneParam._m0[78u].x)) * _3182.x) / cbSceneParam._m0[78u].x)) + _2955;
        _3031 = (exp2(_3208 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3192 * cbSceneParam._m0[78u].y)) * _3182.y) / cbSceneParam._m0[78u].y)) + _2956;
        _3033 = (exp2(_3208 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3192 * cbSceneParam._m0[78u].z)) * _3182.z) / cbSceneParam._m0[78u].z)) + _2957;
        _3035 = _3191 * _2958;
    }
    else
    {
        _3029 = _2955;
        _3031 = _2956;
        _3033 = _2957;
        _3035 = _2958;
    }
    float _3047 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3048 = _3047 == 3.0;
    float _3049 = log2(_3035);
    float _3056 = exp2(_3049 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4857 : (isnan(_4857) ? 1.0 : min(_4857, 1.0))) * (_2900 + ((isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0))) * _896))) + ((_2906 + ((isnan(0.0) ? _1912 : (isnan(_1912) ? 0.0 : max(_1912, 0.0))) * _1701)) * cbPerFrame._m0[3u].x));
    float _3057 = exp2(_3049 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4868 : (isnan(_4868) ? 1.0 : min(_4868, 1.0))) * (_2902 + ((isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0))) * _896))) + ((_2908 + ((isnan(0.0) ? _1915 : (isnan(_1915) ? 0.0 : max(_1915, 0.0))) * _1701)) * cbPerFrame._m0[3u].x));
    float _3058 = exp2(_3049 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4879 : (isnan(_4879) ? 1.0 : min(_4879, 1.0))) * (_2904 + ((isnan(0.0) ? _1628 : (isnan(_1628) ? 0.0 : max(_1628, 0.0))) * _896))) + ((_2910 + ((isnan(0.0) ? _1918 : (isnan(_1918) ? 0.0 : max(_1918, 0.0))) * _1701)) * cbPerFrame._m0[3u].x));
    float _3067 = (_3047 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3067 * (_3048 ? _3056 : (_3056 + (cbSceneParam._m0[72u].w * _3029)));
    SV_Target.y = _3067 * (_3048 ? _3057 : (_3057 + (cbSceneParam._m0[72u].w * _3031)));
    SV_Target.z = _3067 * (_3048 ? _3058 : (_3058 + (cbSceneParam._m0[72u].w * _3033)));
    SV_Target.w = cbInstanceData._m0[_2930].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2930].w;
}


