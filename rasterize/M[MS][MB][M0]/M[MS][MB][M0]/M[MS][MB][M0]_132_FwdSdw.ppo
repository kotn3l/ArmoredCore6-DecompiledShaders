#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1259;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _227 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _228 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _229 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _235 = inversesqrt(dot(vec3(_227, _228, _229), vec3(_227, _228, _229)));
    float _242 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _249 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _255 = uint(roundEven(NORMAL.w)) * 13u;
    uint _260 = _255 + 1u;
    uint _264 = _255 + 2u;
    float _273 = sqrt(((cbInstanceData._m0[_260].x * cbInstanceData._m0[_260].x) + (cbInstanceData._m0[_255].x * cbInstanceData._m0[_255].x)) + (cbInstanceData._m0[_264].x * cbInstanceData._m0[_264].x));
    float _274 = _273 * TEXCOORD.z;
    float _275 = _273 * TEXCOORD.w;
    vec4 _295 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _301 = _295.x * cbMtdParam._m0[11u].x;
    float _302 = _295.y * cbMtdParam._m0[11u].y;
    float _303 = _295.z * cbMtdParam._m0[11u].z;
    vec4 _322 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _274) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _275) + cbTextureTilingScale._m0[5u].w));
    vec4 _360 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _362 = _360.x;
    float _372 = dot(vec4(_362, _360.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _389 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_362 - _372) * cbMtdParam._m0[24u].x) + _372) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3846 = isnan(0.0) ? _389 : (isnan(_389) ? 0.0 : max(_389, 0.0));
    float _390 = isnan(1.0) ? _3846 : (isnan(_3846) ? 1.0 : min(_3846, 1.0));
    float _397 = (_390 * ((_322.x * cbMtdParam._m0[12u].x) - _301)) + _301;
    float _398 = (_390 * ((_322.y * cbMtdParam._m0[12u].y) - _302)) + _302;
    float _399 = (_390 * ((_322.z * cbMtdParam._m0[12u].z) - _303)) + _303;
    vec4 _418 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _274) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _275) + cbTextureTilingScale._m0[14u].w));
    vec4 _438 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _274) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _275) + cbTextureTilingScale._m0[20u].w));
    vec4 _463 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _274) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _275) + cbTextureTilingScale._m0[4u].w));
    vec4 _480 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _482 = _480.x;
    float _483 = _480.y;
    float _484 = _480.z;
    float _493 = ((_463.z - _484) * _390) + _484;
    float _496 = ((((_463.x - _482) * _390) + _482) * 2.0) + (-1.0);
    float _497 = ((((_463.y - _483) * _390) + _483) * 2.0) + (-1.0);
    float _498 = dot(vec2(_496, _497), vec2(_496, _497));
    float _3857 = isnan(0.0) ? _498 : (isnan(_498) ? 0.0 : max(_498, 0.0));
    float _503 = sqrt(1.0 - (isnan(1.0) ? _3857 : (isnan(_3857) ? 1.0 : min(_3857, 1.0))));
    vec4 _516 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _534 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _274) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _275) + cbTextureTilingScale._m0[11u].w));
    float _536 = _534.x;
    float _537 = 1.0 - _536;
    float _543 = isnan(-1.0) ? cbMtdParam._m0[24u].y : (isnan(cbMtdParam._m0[24u].y) ? (-1.0) : max(cbMtdParam._m0[24u].y, -1.0));
    float _546 = ((isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : min(_543, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _555 = (_546 - ((((((_536 - _537) * cbMtdParam._m0[24u].z) + _537) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _546))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3878 = isnan(0.0) ? _555 : (isnan(_555) ? 0.0 : max(_555, 0.0));
    float _556 = isnan(1.0) ? _3878 : (isnan(_3878) ? 1.0 : min(_3878, 1.0));
    float _563 = (_556 * ((_418.x * cbMtdParam._m0[18u].x) - _397)) + _397;
    float _564 = (_556 * ((_418.y * cbMtdParam._m0[18u].y) - _398)) + _398;
    float _565 = (_556 * ((_418.z * cbMtdParam._m0[18u].z) - _399)) + _399;
    vec4 _577 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _274) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _275) + cbTextureTilingScale._m0[19u].w));
    float _579 = _577.x;
    float _580 = 1.0 - _579;
    float _607 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_579 - _580) * cbMtdParam._m0[24u].w) + _580) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3889 = isnan(0.0) ? _607 : (isnan(_607) ? 0.0 : max(_607, 0.0));
    float _608 = isnan(1.0) ? _3889 : (isnan(_3889) ? 1.0 : min(_3889, 1.0));
    float _616 = ((((cbMtdParam._m0[10u].x - _563) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _608) + _563;
    float _617 = ((((cbMtdParam._m0[10u].y - _564) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _608) + _564;
    float _618 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _565)) * _608) + _565;
    float _623 = (((_438.z - _493) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _493;
    vec4 _637 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _274) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _275) + cbTextureTilingScale._m0[15u].w));
    float _644 = (_637.x * 2.0) + (-1.0);
    float _645 = (_637.y * 2.0) + (-1.0);
    float _646 = dot(vec2(_644, _645), vec2(_644, _645));
    float _3900 = isnan(0.0) ? _646 : (isnan(_646) ? 0.0 : max(_646, 0.0));
    float _654 = (_556 * (_637.z - _623)) + _623;
    float _657 = ((cbMtdParam._m0[23u].y - _654) * _608) + _654;
    vec4 _676 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _274) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _275) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _682 = (_676.x * 2.0) + (-1.0);
    float _683 = (_676.y * 2.0) + (-1.0);
    float _684 = dot(vec2(_682, _683), vec2(_682, _683));
    float _3911 = isnan(0.0) ? _684 : (isnan(_684) ? 0.0 : max(_684, 0.0));
    float _694 = _496 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_438.x * 2.0) + (-1.0)));
    float _695 = _497 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_438.y * 2.0) + (-1.0)));
    float _707 = (((_644 - _694) + (cbMtdParam._m0[21u].x * _694)) * _556) + _694;
    float _708 = (((_645 - _695) + (cbMtdParam._m0[21u].x * _695)) * _556) + _695;
    float _709 = (_556 * (sqrt(1.0 - (isnan(1.0) ? _3900 : (isnan(_3900) ? 1.0 : min(_3900, 1.0)))) - _503)) + _503;
    float _720 = (((_682 - _707) + (_707 * cbMtdParam._m0[22u].z)) * _608) + _707;
    float _721 = (((_683 - _708) + (_708 * cbMtdParam._m0[22u].z)) * _608) + _708;
    float _722 = ((sqrt(1.0 - (isnan(1.0) ? _3911 : (isnan(_3911) ? 1.0 : min(_3911, 1.0)))) - _709) * _608) + _709;
    float _724 = cbMtdParam._m0[22u].x + _516.w;
    float _727 = fma(_722, _242 * NORMAL.x, fma(_721, _249 * TANGENT.x, (_235 * _227) * _720));
    float _730 = fma(_722, _242 * NORMAL.y, fma(_721, _249 * TANGENT.y, (_235 * _228) * _720));
    float _733 = fma(_722, _242 * NORMAL.z, fma(_721, _249 * TANGENT.z, (_235 * _229) * _720));
    float _737 = inversesqrt(dot(vec3(_727, _730, _733), vec3(_727, _730, _733)));
    float _738 = _737 * _727;
    float _739 = _737 * _730;
    float _740 = _737 * _733;
    float _3922 = isnan(0.0) ? _657 : (isnan(_657) ? 0.0 : max(_657, 0.0));
    float _741 = isnan(1.0) ? _3922 : (isnan(_3922) ? 1.0 : min(_3922, 1.0));
    float _3933 = isnan(0.0) ? _724 : (isnan(_724) ? 0.0 : max(_724, 0.0));
    float _3944 = isnan(0.0) ? _616 : (isnan(_616) ? 0.0 : max(_616, 0.0));
    float _3955 = isnan(0.0) ? _617 : (isnan(_617) ? 0.0 : max(_617, 0.0));
    float _3966 = isnan(0.0) ? _618 : (isnan(_618) ? 0.0 : max(_618, 0.0));
    float _759 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _800 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _810 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _800);
    float _811 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _800);
    float _812 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _800);
    float _816 = inversesqrt(dot(vec3(_810, _811, _812), vec3(_810, _811, _812)));
    float _817 = _810 * _816;
    float _818 = _811 * _816;
    float _819 = _812 * _816;
    float _825 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _826 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _844 = fma(_740, cbSceneParam._m0[5u].z, fma(_739, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _738));
    float _847 = fma(_740, cbSceneParam._m0[6u].z, fma(_739, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _738));
    float _850 = fma(_740, cbSceneParam._m0[7u].z, fma(_739, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _738));
    uint _864 = (_255 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _870 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3944 : (isnan(_3944) ? 1.0 : min(_3944, 1.0)))) * cbInstanceData._m0[_864].x;
    float _871 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3955 : (isnan(_3955) ? 1.0 : min(_3955, 1.0)))) * cbInstanceData._m0[_864].y;
    float _872 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3966 : (isnan(_3966) ? 1.0 : min(_3966, 1.0)))) * cbInstanceData._m0[_864].z;
    float _3977 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
    float _873 = isnan(1.0) ? _3977 : (isnan(_3977) ? 1.0 : min(_3977, 1.0));
    float _3988 = isnan(0.0) ? _871 : (isnan(_871) ? 0.0 : max(_871, 0.0));
    float _874 = isnan(1.0) ? _3988 : (isnan(_3988) ? 1.0 : min(_3988, 1.0));
    float _3999 = isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : max(_872, 0.0));
    float _875 = isnan(1.0) ? _3999 : (isnan(_3999) ? 1.0 : min(_3999, 1.0));
    vec4 _884 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _825, cbSceneParam._m0[86u].y * _826));
    float _888 = ((isnan(1.0) ? _3933 : (isnan(_3933) ? 1.0 : min(_3933, 1.0))) * TEXCOORD_5.w) * _884.x;
    float _889 = dot(vec3(_738, _739, _740), vec3(_817, _818, _819));
    float _892 = _889 * 2.0;
    float _896 = (_892 * _738) - _817;
    float _897 = (_892 * _739) - _818;
    float _898 = (_892 * _740) - _819;
    float _902 = abs(dot(vec3(_817, _818, _819), vec3(_738, _739, _740)));
    float _4010 = isnan(0.0) ? _902 : (isnan(_902) ? 0.0 : max(_902, 0.0));
    float _904 = sqrt(_741);
    float _917 = exp2((_904 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4010 : (isnan(_4010) ? 1.0 : min(_4010, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_904 * 3.0));
    float _949 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _953 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _957 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1258;
    float _1260;
    float _1261;
    float _1262;
    float _1263;
    float _1264;
    float _1265;
    float _1266;
    float _1267;
    float _1268;
    float _1269;
    float _1270;
    float _1271;
    float _1272;
    float _1273;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _983 = fma(_957, cbModelParam._m0[26u].z, fma(_953, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _949));
        float _987 = fma(_957, cbModelParam._m0[27u].z, fma(_953, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _949));
        float _991 = fma(_957, cbModelParam._m0[28u].z, fma(_953, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _949));
        float _1016 = _949 + _738;
        float _1017 = _953 + _739;
        float _1018 = _957 + _740;
        float _1028 = fma(_1018, cbModelParam._m0[26u].z, fma(_1017, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1016)) - _983;
        float _1029 = fma(_1018, cbModelParam._m0[27u].z, fma(_1017, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1016)) - _987;
        float _1030 = fma(_1018, cbModelParam._m0[28u].z, fma(_1017, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1016)) - _991;
        float _1034 = inversesqrt(dot(vec3(_1028, _1029, _1030), vec3(_1028, _1029, _1030)));
        float _1047 = ((_1034 * _1028) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_983 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1048 = ((_1034 * _1029) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_987 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1049 = ((_1034 * _1030) / cbModelParam._m0[34u].z) + ((((((_991 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1052 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1047, _1048, _1049), 0.0);
        vec4 _1059 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1047, _1048, _1049), 0.0);
        vec4 _1066 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1047, _1048, _1049), 0.0);
        vec4 _1073 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1047, _1048, _1049), 0.0);
        float _1086 = exp2((_1052.w + (-0.5)) * 20.0) * 2.0;
        float _1087 = _1086 * (_1052.x + (-0.5));
        float _1088 = _1086 * (_1052.y + (-0.5));
        float _1089 = _1086 * (_1052.z + (-0.5));
        float _1096 = exp2((_1059.w + (-0.5)) * 20.0) * 2.0;
        float _1097 = _1096 * (_1059.x + (-0.5));
        float _1098 = _1096 * (_1059.y + (-0.5));
        float _1099 = _1096 * (_1059.z + (-0.5));
        float _1106 = exp2((_1066.w + (-0.5)) * 20.0) * 2.0;
        float _1107 = _1106 * (_1066.x + (-0.5));
        float _1108 = _1106 * (_1066.y + (-0.5));
        float _1109 = _1106 * (_1066.z + (-0.5));
        float _1116 = exp2((_1073.w + (-0.5)) * 20.0) * 2.0;
        float _1117 = _1116 * (_1073.x + (-0.5));
        float _1118 = _1116 * (_1073.y + (-0.5));
        float _1119 = _1116 * (_1073.z + (-0.5));
        float _1120 = isnan(0.0) ? _1117 : (isnan(_1117) ? 0.0 : max(_1117, 0.0));
        float _1121 = isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0));
        float _1122 = isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0));
        float _1123 = _1087 * 0.5;
        float _1124 = _1097 * 0.5;
        float _1125 = _1107 * 0.5;
        float _1126 = dot(vec3(_1123, _1124, _1125), vec3(_1123, _1124, _1125));
        float _1131 = (_1126 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1126);
        float _1140 = (dot(vec3(_738, _739, _740), vec3(_1131 * _1123, _1131 * _1124, _1131 * _1125)) + 1.0) * 0.5;
        float _4036 = isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0));
        float _1150 = sqrt(((_1124 * _1124) + (_1123 * _1123)) + (_1125 * _1125)) / (_1120 + 9.9999997473787516355514526367188e-06);
        float _4047 = isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0));
        float _1151 = isnan(1.0) ? _4047 : (isnan(_4047) ? 1.0 : min(_4047, 1.0));
        float _1152 = _1151 * 2.0;
        float _1156 = (1.0 - _1151) / (_1151 + 1.0);
        float _4058 = isnan(0.0) ? _1156 : (isnan(_1156) ? 0.0 : max(_1156, 0.0));
        float _1157 = isnan(1.0) ? _4058 : (isnan(_4058) ? 1.0 : min(_4058, 1.0));
        float _1166 = ((((1.0 - _1157) * (_1152 + 2.0)) * exp2(log2(isnan(1.0) ? _4036 : (isnan(_4036) ? 1.0 : min(_4036, 1.0))) * (_1152 + 1.0))) + _1157) * _1120;
        float _1167 = _1088 * 0.5;
        float _1168 = _1098 * 0.5;
        float _1169 = _1108 * 0.5;
        float _1170 = dot(vec3(_1167, _1168, _1169), vec3(_1167, _1168, _1169));
        float _1175 = (_1170 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1170);
        float _1183 = (dot(vec3(_738, _739, _740), vec3(_1175 * _1167, _1175 * _1168, _1175 * _1169)) + 1.0) * 0.5;
        float _4069 = isnan(0.0) ? _1183 : (isnan(_1183) ? 0.0 : max(_1183, 0.0));
        float _1192 = sqrt(((_1168 * _1168) + (_1167 * _1167)) + (_1169 * _1169)) / (_1121 + 9.9999997473787516355514526367188e-06);
        float _4080 = isnan(0.0) ? _1192 : (isnan(_1192) ? 0.0 : max(_1192, 0.0));
        float _1193 = isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0));
        float _1194 = _1193 * 2.0;
        float _1198 = (1.0 - _1193) / (_1193 + 1.0);
        float _4091 = isnan(0.0) ? _1198 : (isnan(_1198) ? 0.0 : max(_1198, 0.0));
        float _1199 = isnan(1.0) ? _4091 : (isnan(_4091) ? 1.0 : min(_4091, 1.0));
        float _1208 = ((((1.0 - _1199) * (_1194 + 2.0)) * exp2(log2(isnan(1.0) ? _4069 : (isnan(_4069) ? 1.0 : min(_4069, 1.0))) * (_1194 + 1.0))) + _1199) * _1121;
        float _1209 = _1089 * 0.5;
        float _1210 = _1099 * 0.5;
        float _1211 = _1109 * 0.5;
        float _1212 = dot(vec3(_1209, _1210, _1211), vec3(_1209, _1210, _1211));
        float _1217 = (_1212 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1212);
        float _1225 = (dot(vec3(_738, _739, _740), vec3(_1217 * _1209, _1217 * _1210, _1217 * _1211)) + 1.0) * 0.5;
        float _4102 = isnan(0.0) ? _1225 : (isnan(_1225) ? 0.0 : max(_1225, 0.0));
        float _1234 = sqrt(((_1210 * _1210) + (_1209 * _1209)) + (_1211 * _1211)) / (_1122 + 9.9999997473787516355514526367188e-06);
        float _4113 = isnan(0.0) ? _1234 : (isnan(_1234) ? 0.0 : max(_1234, 0.0));
        float _1235 = isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0));
        float _1236 = _1235 * 2.0;
        float _1240 = (1.0 - _1235) / (_1235 + 1.0);
        float _4124 = isnan(0.0) ? _1240 : (isnan(_1240) ? 0.0 : max(_1240, 0.0));
        float _1241 = isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0));
        float _1250 = ((((1.0 - _1241) * (_1236 + 2.0)) * exp2(log2(isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0))) * (_1236 + 1.0))) + _1241) * _1122;
        _1258 = _1089;
        _1260 = _1088;
        _1261 = _1087;
        _1262 = _1099;
        _1263 = _1098;
        _1264 = _1097;
        _1265 = _1109;
        _1266 = _1108;
        _1267 = _1107;
        _1268 = _1122;
        _1269 = _1121;
        _1270 = _1120;
        _1271 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0)));
        _1272 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1208 : (isnan(_1208) ? 0.0 : max(_1208, 0.0)));
        _1273 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1250 : (isnan(_1250) ? 0.0 : max(_1250, 0.0)));
    }
    else
    {
        _1258 = _1259;
        _1260 = _1259;
        _1261 = _1259;
        _1262 = _1259;
        _1263 = _1259;
        _1264 = _1259;
        _1265 = _1259;
        _1266 = _1259;
        _1267 = _1259;
        _1268 = _1259;
        _1269 = _1259;
        _1270 = _1259;
        _1271 = 0.0;
        _1272 = 0.0;
        _1273 = 0.0;
    }
    float _1567;
    float _1568;
    float _1569;
    float _1570;
    float _1571;
    float _1572;
    float _1573;
    float _1574;
    float _1575;
    float _1576;
    float _1577;
    float _1578;
    float _1579;
    float _1580;
    float _1581;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1298 = fma(_957, cbModelParam._m0[30u].z, fma(_953, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _949));
        float _1302 = fma(_957, cbModelParam._m0[31u].z, fma(_953, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _949));
        float _1306 = fma(_957, cbModelParam._m0[32u].z, fma(_953, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _949));
        float _1329 = _949 + _738;
        float _1330 = _953 + _739;
        float _1331 = _957 + _740;
        float _1341 = fma(_1331, cbModelParam._m0[30u].z, fma(_1330, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1329)) - _1298;
        float _1342 = fma(_1331, cbModelParam._m0[31u].z, fma(_1330, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1329)) - _1302;
        float _1343 = fma(_1331, cbModelParam._m0[32u].z, fma(_1330, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1329)) - _1306;
        float _1347 = inversesqrt(dot(vec3(_1341, _1342, _1343), vec3(_1341, _1342, _1343)));
        float _1360 = ((_1347 * _1341) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1298 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1361 = ((_1347 * _1342) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1302 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1362 = ((_1347 * _1343) / cbModelParam._m0[35u].z) + ((((((_1306 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1364 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1360, _1361, _1362), 0.0);
        vec4 _1371 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1360, _1361, _1362), 0.0);
        vec4 _1378 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1360, _1361, _1362), 0.0);
        vec4 _1385 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1360, _1361, _1362), 0.0);
        float _1397 = exp2((_1364.w + (-0.5)) * 20.0) * 2.0;
        float _1398 = _1397 * (_1364.x + (-0.5));
        float _1399 = _1397 * (_1364.y + (-0.5));
        float _1400 = _1397 * (_1364.z + (-0.5));
        float _1407 = exp2((_1371.w + (-0.5)) * 20.0) * 2.0;
        float _1408 = _1407 * (_1371.x + (-0.5));
        float _1409 = _1407 * (_1371.y + (-0.5));
        float _1410 = _1407 * (_1371.z + (-0.5));
        float _1417 = exp2((_1378.w + (-0.5)) * 20.0) * 2.0;
        float _1418 = _1417 * (_1378.x + (-0.5));
        float _1419 = _1417 * (_1378.y + (-0.5));
        float _1420 = _1417 * (_1378.z + (-0.5));
        float _1427 = exp2((_1385.w + (-0.5)) * 20.0) * 2.0;
        float _1428 = _1427 * (_1385.x + (-0.5));
        float _1429 = _1427 * (_1385.y + (-0.5));
        float _1430 = _1427 * (_1385.z + (-0.5));
        float _1431 = isnan(0.0) ? _1428 : (isnan(_1428) ? 0.0 : max(_1428, 0.0));
        float _1432 = isnan(0.0) ? _1429 : (isnan(_1429) ? 0.0 : max(_1429, 0.0));
        float _1433 = isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0));
        float _1434 = _1398 * 0.5;
        float _1435 = _1408 * 0.5;
        float _1436 = _1418 * 0.5;
        float _1437 = dot(vec3(_1434, _1435, _1436), vec3(_1434, _1435, _1436));
        float _1442 = (_1437 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1437);
        float _1450 = (dot(vec3(_738, _739, _740), vec3(_1442 * _1434, _1442 * _1435, _1442 * _1436)) + 1.0) * 0.5;
        float _4165 = isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0));
        float _1459 = sqrt(((_1435 * _1435) + (_1434 * _1434)) + (_1436 * _1436)) / (_1431 + 9.9999997473787516355514526367188e-06);
        float _4176 = isnan(0.0) ? _1459 : (isnan(_1459) ? 0.0 : max(_1459, 0.0));
        float _1460 = isnan(1.0) ? _4176 : (isnan(_4176) ? 1.0 : min(_4176, 1.0));
        float _1461 = _1460 * 2.0;
        float _1465 = (1.0 - _1460) / (_1460 + 1.0);
        float _4187 = isnan(0.0) ? _1465 : (isnan(_1465) ? 0.0 : max(_1465, 0.0));
        float _1466 = isnan(1.0) ? _4187 : (isnan(_4187) ? 1.0 : min(_4187, 1.0));
        float _1475 = ((((1.0 - _1466) * (_1461 + 2.0)) * exp2(log2(isnan(1.0) ? _4165 : (isnan(_4165) ? 1.0 : min(_4165, 1.0))) * (_1461 + 1.0))) + _1466) * _1431;
        float _1476 = _1399 * 0.5;
        float _1477 = _1409 * 0.5;
        float _1478 = _1419 * 0.5;
        float _1479 = dot(vec3(_1476, _1477, _1478), vec3(_1476, _1477, _1478));
        float _1484 = (_1479 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1479);
        float _1492 = (dot(vec3(_738, _739, _740), vec3(_1484 * _1476, _1484 * _1477, _1484 * _1478)) + 1.0) * 0.5;
        float _4198 = isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0));
        float _1501 = sqrt(((_1477 * _1477) + (_1476 * _1476)) + (_1478 * _1478)) / (_1432 + 9.9999997473787516355514526367188e-06);
        float _4209 = isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0));
        float _1502 = isnan(1.0) ? _4209 : (isnan(_4209) ? 1.0 : min(_4209, 1.0));
        float _1503 = _1502 * 2.0;
        float _1507 = (1.0 - _1502) / (_1502 + 1.0);
        float _4220 = isnan(0.0) ? _1507 : (isnan(_1507) ? 0.0 : max(_1507, 0.0));
        float _1508 = isnan(1.0) ? _4220 : (isnan(_4220) ? 1.0 : min(_4220, 1.0));
        float _1517 = ((((1.0 - _1508) * (_1503 + 2.0)) * exp2(log2(isnan(1.0) ? _4198 : (isnan(_4198) ? 1.0 : min(_4198, 1.0))) * (_1503 + 1.0))) + _1508) * _1432;
        float _1518 = _1400 * 0.5;
        float _1519 = _1410 * 0.5;
        float _1520 = _1420 * 0.5;
        float _1521 = dot(vec3(_1518, _1519, _1520), vec3(_1518, _1519, _1520));
        float _1526 = (_1521 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1521);
        float _1534 = (dot(vec3(_738, _739, _740), vec3(_1526 * _1518, _1526 * _1519, _1526 * _1520)) + 1.0) * 0.5;
        float _4231 = isnan(0.0) ? _1534 : (isnan(_1534) ? 0.0 : max(_1534, 0.0));
        float _1543 = sqrt(((_1519 * _1519) + (_1518 * _1518)) + (_1520 * _1520)) / (_1433 + 9.9999997473787516355514526367188e-06);
        float _4242 = isnan(0.0) ? _1543 : (isnan(_1543) ? 0.0 : max(_1543, 0.0));
        float _1544 = isnan(1.0) ? _4242 : (isnan(_4242) ? 1.0 : min(_4242, 1.0));
        float _1545 = _1544 * 2.0;
        float _1549 = (1.0 - _1544) / (_1544 + 1.0);
        float _4253 = isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0));
        float _1550 = isnan(1.0) ? _4253 : (isnan(_4253) ? 1.0 : min(_4253, 1.0));
        float _1559 = ((((1.0 - _1550) * (_1545 + 2.0)) * exp2(log2(isnan(1.0) ? _4231 : (isnan(_4231) ? 1.0 : min(_4231, 1.0))) * (_1545 + 1.0))) + _1550) * _1433;
        _1567 = _1400;
        _1568 = _1399;
        _1569 = _1398;
        _1570 = _1410;
        _1571 = _1409;
        _1572 = _1408;
        _1573 = _1420;
        _1574 = _1419;
        _1575 = _1418;
        _1576 = _1433;
        _1577 = _1432;
        _1578 = _1431;
        _1579 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0)));
        _1580 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0)));
        _1581 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1559 : (isnan(_1559) ? 0.0 : max(_1559, 0.0)));
    }
    else
    {
        _1567 = _1259;
        _1568 = _1259;
        _1569 = _1259;
        _1570 = _1259;
        _1571 = _1259;
        _1572 = _1259;
        _1573 = _1259;
        _1574 = _1259;
        _1575 = _1259;
        _1576 = _1259;
        _1577 = _1259;
        _1578 = _1259;
        _1579 = 0.0;
        _1580 = 0.0;
        _1581 = 0.0;
    }
    float _1591 = (cbModelParam._m0[1u].x * (_1579 - _1271)) + _1271;
    float _1592 = (cbModelParam._m0[1u].x * (_1580 - _1272)) + _1272;
    float _1593 = (cbModelParam._m0[1u].x * (_1581 - _1273)) + _1273;
    float _1614 = fma(_1593, cbSceneParam._m0[89u].z, fma(_1592, cbSceneParam._m0[89u].y, _1591 * cbSceneParam._m0[89u].x));
    float _1617 = fma(_1593, cbSceneParam._m0[90u].z, fma(_1592, cbSceneParam._m0[90u].y, _1591 * cbSceneParam._m0[90u].x));
    float _1620 = fma(_1593, cbSceneParam._m0[91u].z, fma(_1592, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1591));
    float _1635 = _896 * 0.5;
    float _1636 = _897 * 0.5;
    float _1637 = _898 * 0.5;
    float _1638 = dot(vec4(_1635, _1636, _1637, 1.0), vec4(_1569, _1572, _1575, _1578));
    float _1641 = dot(vec4(_1635, _1636, _1637, 1.0), vec4(_1568, _1571, _1574, _1577));
    float _1644 = dot(vec4(_1635, _1636, _1637, 1.0), vec4(_1567, _1570, _1573, _1576));
    float _1678;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1651 = dot(vec4(_1635, _1636, _1637, 1.0), vec4(_1258, _1262, _1265, _1268));
        float _1655 = dot(vec4(_1635, _1636, _1637, 1.0), vec4(_1260, _1263, _1266, _1269));
        float _1659 = dot(vec4(_1635, _1636, _1637, 1.0), vec4(_1261, _1264, _1267, _1270));
        float _1666 = dot(vec4(cbModelParam._m0[39u]), vec4(_1635, _1636, _1637, 1.0));
        _1678 = dot(vec3(isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0)), isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0)), isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1666) ? 0.0 : (isnan(0.0) ? _1666 : max(0.0, _1666))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1678 = 1.0;
    }
    float _1689;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1680 = dot(vec4(cbModelParam._m0[40u]), vec4(_1635, _1636, _1637, 1.0));
        _1689 = dot(vec3(isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0)), isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0)), isnan(0.0) ? _1644 : (isnan(_1644) ? 0.0 : max(_1644, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1680) ? 0.0 : (isnan(0.0) ? _1680 : max(0.0, _1680))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1689 = 1.0;
    }
    float _1693 = (_1689 * cbModelParam._m0[1u].x) + (_1678 * (1.0 - cbModelParam._m0[1u].x));
    float _1703 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _741);
    float _1704 = isnan(_1703) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1703 : min(cbModelParam._m0[25u].z, _1703));
    float _1784;
    float _1786;
    float _1788;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1751 = fma(_957, cbModelParam._m0[13u].z, fma(_953, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _949)) + cbModelParam._m0[13u].w;
        float _1755 = fma(_957, cbModelParam._m0[14u].z, fma(_953, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _949)) + cbModelParam._m0[14u].w;
        float _1759 = fma(_957, cbModelParam._m0[15u].z, fma(_953, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _949)) + cbModelParam._m0[15u].w;
        float _1762 = fma(_898, cbModelParam._m0[13u].z, fma(_897, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _896));
        float _1765 = fma(_898, cbModelParam._m0[14u].z, fma(_897, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _896));
        float _1768 = fma(_898, cbModelParam._m0[15u].z, fma(_897, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _896));
        float _1796;
        if (_1762 > 0.0)
        {
            _1796 = abs((1.0 - _1751) / _1762);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1762 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1751 + 1.0) / _1762);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1796 = frontier_phi_14_12_ladder;
        }
        float _1965;
        if (_1765 > 0.0)
        {
            _1965 = abs((1.0 - _1755) / _1765);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1765 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1755 + 1.0) / _1765);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1965 = frontier_phi_23_19_ladder;
        }
        float _2260;
        if (_1768 > 0.0)
        {
            _2260 = abs((1.0 - _1759) / _1768);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1768 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1759 + 1.0) / _1768);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2260 = frontier_phi_35_30_ladder;
        }
        float _2262 = isnan(_1965) ? _1796 : (isnan(_1796) ? _1965 : min(_1796, _1965));
        float _2263 = isnan(_2260) ? _2262 : (isnan(_2262) ? _2260 : min(_2262, _2260));
        float _2267 = (_2263 * _1762) + _1751;
        float _2268 = (_2263 * _1765) + _1755;
        float _2269 = (_2263 * _1768) + _1759;
        float _2270 = _2263 * 9.9999997473787516355514526367188e-05;
        float _2272 = (-1.0) - _2270;
        float _2274 = _2270 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2269 > _2274) || ((_2269 < _2272) || ((_2268 > _2274) || ((_2268 < _2272) || ((_2267 < _2272) || (_2267 > _2274))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2414 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2269, cbModelParam._m0[9u].z, fma(_2268, cbModelParam._m0[9u].y, _2267 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2269, cbModelParam._m0[10u].z, fma(_2268, cbModelParam._m0[10u].y, _2267 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2269, cbModelParam._m0[11u].z, fma(_2268, cbModelParam._m0[11u].y, _2267 * cbModelParam._m0[11u].x))), _1704);
            frontier_phi_13_35_ladder = _2414.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2414.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2414.x * cbModelParam._m0[1u].y;
        }
        _1784 = frontier_phi_13_35_ladder_2;
        _1786 = frontier_phi_13_35_ladder_1;
        _1788 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1772 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_896, _897, _898), _1704);
        _1784 = _1772.x * cbModelParam._m0[1u].y;
        _1786 = _1772.y * cbModelParam._m0[1u].y;
        _1788 = _1772.z * cbModelParam._m0[1u].y;
    }
    float _1792 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _741);
    float _1793 = isnan(_1792) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1792 : min(cbModelParam._m0[25u].w, _1792));
    float _1882;
    float _1884;
    float _1886;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1846 = fma(_957, cbModelParam._m0[21u].z, fma(_953, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _949)) + cbModelParam._m0[21u].w;
        float _1850 = fma(_957, cbModelParam._m0[22u].z, fma(_953, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _949)) + cbModelParam._m0[22u].w;
        float _1854 = fma(_957, cbModelParam._m0[23u].z, fma(_953, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _949)) + cbModelParam._m0[23u].w;
        float _1857 = fma(_898, cbModelParam._m0[21u].z, fma(_897, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _896));
        float _1860 = fma(_898, cbModelParam._m0[22u].z, fma(_897, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _896));
        float _1863 = fma(_898, cbModelParam._m0[23u].z, fma(_897, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _896));
        float _1970;
        if (_1857 > 0.0)
        {
            _1970 = abs((1.0 - _1846) / _1857);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1857 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1846 + 1.0) / _1857);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1970 = frontier_phi_25_21_ladder;
        }
        float _2287;
        if (_1860 > 0.0)
        {
            _2287 = abs((1.0 - _1850) / _1860);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1860 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1850 + 1.0) / _1860);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2287 = frontier_phi_37_32_ladder;
        }
        float _2614;
        if (_1863 > 0.0)
        {
            _2614 = abs((1.0 - _1854) / _1863);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1863 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1854 + 1.0) / _1863);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2614 = frontier_phi_47_44_ladder;
        }
        float _2616 = isnan(_2287) ? _1970 : (isnan(_1970) ? _2287 : min(_1970, _2287));
        float _2617 = isnan(_2614) ? _2616 : (isnan(_2616) ? _2614 : min(_2616, _2614));
        float _2621 = (_2617 * _1857) + _1846;
        float _2622 = (_2617 * _1860) + _1850;
        float _2623 = (_2617 * _1863) + _1854;
        float _2624 = _2617 * 9.9999997473787516355514526367188e-05;
        float _2625 = (-1.0) - _2624;
        float _2627 = _2624 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2623 > _2627) || ((_2623 < _2625) || ((_2622 > _2627) || ((_2622 < _2625) || ((_2621 < _2625) || (_2621 > _2627))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2741 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2623, cbModelParam._m0[17u].z, fma(_2622, cbModelParam._m0[17u].y, _2621 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2623, cbModelParam._m0[18u].z, fma(_2622, cbModelParam._m0[18u].y, _2621 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2623, cbModelParam._m0[19u].z, fma(_2622, cbModelParam._m0[19u].y, _2621 * cbModelParam._m0[19u].x))), _1793);
            frontier_phi_22_47_ladder = _2741.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2741.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2741.x * cbModelParam._m0[1u].z;
        }
        _1882 = frontier_phi_22_47_ladder_2;
        _1884 = frontier_phi_22_47_ladder_1;
        _1886 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1866 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_896, _897, _898), _1793);
        _1882 = _1866.x * cbModelParam._m0[1u].z;
        _1884 = _1866.y * cbModelParam._m0[1u].z;
        _1886 = _1866.z * cbModelParam._m0[1u].z;
    }
    float _1898 = ((((1.0 - _917) * ((_904 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_917 * _904)) * _888;
    float _1899 = _1898 * ((cbModelParam._m0[1u].w * (_1882 - _1784)) + _1784);
    float _1900 = _1898 * ((cbModelParam._m0[1u].w * (_1884 - _1786)) + _1786);
    float _1901 = _1898 * ((cbModelParam._m0[1u].w * (_1886 - _1788)) + _1788);
    float _1904 = fma(_1901, cbSceneParam._m0[89u].z, fma(_1900, cbSceneParam._m0[89u].y, _1899 * cbSceneParam._m0[89u].x));
    float _1907 = fma(_1901, cbSceneParam._m0[90u].z, fma(_1900, cbSceneParam._m0[90u].y, _1899 * cbSceneParam._m0[90u].x));
    float _1910 = fma(_1901, cbSceneParam._m0[91u].z, fma(_1900, cbSceneParam._m0[91u].y, _1899 * cbSceneParam._m0[91u].x));
    float _1944 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1948 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1952 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1956 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1957 = _1944 / _1956;
    float _1958 = _1948 / _1956;
    float _1959 = _1952 / _1956;
    float _2106;
    float _2107;
    float _2108;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1986 = ((uint(_1959 > cbSceneParam._m0[59u].y) + uint(_1959 > cbSceneParam._m0[59u].x)) + uint(_1959 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1987 = _1986 + 43u;
        uint _1995 = _1986 + 44u;
        uint _2003 = _1986 + 45u;
        uint _2011 = _1986 + 46u;
        float _2022 = fma(_1956, cbSceneParam._m0[_1987].w, fma(_1952, cbSceneParam._m0[_1987].z, fma(_1948, cbSceneParam._m0[_1987].y, _1944 * cbSceneParam._m0[_1987].x)));
        float _2026 = fma(_1956, cbSceneParam._m0[_1995].w, fma(_1952, cbSceneParam._m0[_1995].z, fma(_1948, cbSceneParam._m0[_1995].y, _1944 * cbSceneParam._m0[_1995].x)));
        float _2034 = fma(_1956, cbSceneParam._m0[_2011].w, fma(_1952, cbSceneParam._m0[_2011].z, fma(_1948, cbSceneParam._m0[_2011].y, _1944 * cbSceneParam._m0[_2011].x)));
        float _2039 = cbSceneParam._m0[33u].z * _2034;
        float _2041 = cbSceneParam._m0[33u].w * _2034;
        float _2044 = fma(_1956, cbSceneParam._m0[_2003].w, fma(_1952, cbSceneParam._m0[_2003].z, fma(_1948, cbSceneParam._m0[_2003].y, _1944 * cbSceneParam._m0[_2003].x))) / _2034;
        float _2092 = (cbSceneParam._m0[33u].x - sqrt(((_1958 * _1958) + (_1957 * _1957)) + (_1959 * _1959))) * cbSceneParam._m0[33u].y;
        float _4379 = isnan(0.0) ? _2092 : (isnan(_2092) ? 0.0 : max(_2092, 0.0));
        float _2099 = (isnan(1.0) ? _4379 : (isnan(_4379) ? 1.0 : min(_4379, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2039 + _2022) / _2034, (_2041 + _2026) / _2034), _2044), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2041 + _2022) / _2034, (_2026 - _2039) / _2034), _2044), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2022 - _2039) / _2034, (_2026 - _2041) / _2034), _2044), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2022 - _2041) / _2034, (_2039 + _2026) / _2034), _2044), 0.0)).x), vec4(0.25)));
        _2106 = 1.0 - (_2099 * cbSceneParam._m0[34u].x);
        _2107 = 1.0 - (_2099 * cbSceneParam._m0[34u].y);
        _2108 = 1.0 - (_2099 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2106 = 1.0;
        _2107 = 1.0;
        _2108 = 1.0;
    }
    float _2172;
    float _2174;
    float _2176;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2160 = fma(_1956, cbSceneParam._m0[63u].w, fma(_1952, cbSceneParam._m0[63u].z, fma(_1948, cbSceneParam._m0[63u].y, _1944 * cbSceneParam._m0[63u].x)));
        float _2161 = fma(_1956, cbSceneParam._m0[60u].w, fma(_1952, cbSceneParam._m0[60u].z, fma(_1948, cbSceneParam._m0[60u].y, _1944 * cbSceneParam._m0[60u].x))) / _2160;
        float _2162 = fma(_1956, cbSceneParam._m0[61u].w, fma(_1952, cbSceneParam._m0[61u].z, fma(_1948, cbSceneParam._m0[61u].y, _1944 * cbSceneParam._m0[61u].x))) / _2160;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2161 >= cbSceneParam._m0[64u].x) && (_2162 >= cbSceneParam._m0[64u].y)) && (_2161 <= cbSceneParam._m0[64u].z)) && (_2162 <= cbSceneParam._m0[64u].w))
        {
            float _2300 = fma(_1956, cbSceneParam._m0[62u].w, fma(_1952, cbSceneParam._m0[62u].z, fma(_1948, cbSceneParam._m0[62u].y, _1944 * cbSceneParam._m0[62u].x))) / _2160;
            float _2304 = isnan(cbSceneParam._m0[41u].w) ? _2300 : (isnan(_2300) ? cbSceneParam._m0[41u].w : max(_2300, cbSceneParam._m0[41u].w));
            float _2347 = (cbSceneParam._m0[33u].x - sqrt(((_1958 * _1958) + (_1957 * _1957)) + (_1959 * _1959))) * cbSceneParam._m0[33u].y;
            float _4395 = isnan(0.0) ? _2347 : (isnan(_2347) ? 0.0 : max(_2347, 0.0));
            float _2354 = (isnan(1.0) ? _4395 : (isnan(_4395) ? 1.0 : min(_4395, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2161, cbSceneParam._m0[33u].w + _2162), _2304), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2161, _2162 - cbSceneParam._m0[33u].z), _2304), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2161 - cbSceneParam._m0[33u].z, _2162 - cbSceneParam._m0[33u].w), _2304), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2161 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2162), _2304), 0.0)).x), vec4(0.25)));
            float _2358 = 1.0 - (_2354 * cbSceneParam._m0[34u].x);
            float _2359 = 1.0 - (_2354 * cbSceneParam._m0[34u].y);
            float _2360 = 1.0 - (_2354 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2360) ? _2108 : (isnan(_2108) ? _2360 : min(_2108, _2360));
            frontier_phi_34_33_ladder_1 = isnan(_2359) ? _2107 : (isnan(_2107) ? _2359 : min(_2107, _2359));
            frontier_phi_34_33_ladder_2 = isnan(_2358) ? _2106 : (isnan(_2106) ? _2358 : min(_2106, _2358));
        }
        else
        {
            frontier_phi_34_33_ladder = _2108;
            frontier_phi_34_33_ladder_1 = _2107;
            frontier_phi_34_33_ladder_2 = _2106;
        }
        _2172 = frontier_phi_34_33_ladder_2;
        _2174 = frontier_phi_34_33_ladder_1;
        _2176 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2172 = _2106;
        _2174 = _2107;
        _2176 = _2108;
    }
    uvec4 _2181 = floatBitsToUint(cbInstanceData._m0[_255 + 5u]);
    uint _2183 = _2181.x * 14u;
    uint _2184 = _2183 + 13u;
    float _2191 = _888 + (-1.0);
    float _2196 = (cbLight._m0[_2184].x * _2191) + 1.0;
    float _2197 = (cbLight._m0[_2184].y * _2191) + 1.0;
    float _2198 = (cbLight._m0[_2184].z * _2191) + 1.0;
    float _2199 = (cbLight._m0[_2184].w * _2191) + 1.0;
    uint _2200 = _2183 + 5u;
    float _2206 = isnan(1.0) ? _2197 : (isnan(_2197) ? 1.0 : min(_2197, 1.0));
    uint _2210 = _2183 + 4u;
    float _2219 = isnan(1.0) ? _2196 : (isnan(_2196) ? 1.0 : min(_2196, 1.0));
    uint _2223 = _2183 | 1u;
    float _2234 = dot(vec3(cbLight._m0[_2183].xyz), vec3(_738, _739, _740));
    float _2237 = dot(vec3(cbLight._m0[_2223].xyz), vec3(_738, _739, _740));
    float _4431 = isnan(0.0) ? _2234 : (isnan(_2234) ? 0.0 : max(_2234, 0.0));
    float _4442 = isnan(0.0) ? _2237 : (isnan(_2237) ? 0.0 : max(_2237, 0.0));
    float _2242 = (isnan(1.0) ? _4431 : (isnan(_4431) ? 1.0 : min(_4431, 1.0))) * 0.3183098733425140380859375;
    float _2244 = (isnan(1.0) ? _4442 : (isnan(_4442) ? 1.0 : min(_4442, 1.0))) * 0.3183098733425140380859375;
    float _2251 = ((cbLight._m0[_2200].x * _2206) * _2244) + (((cbLight._m0[_2210].x * _2172) * _2219) * _2242);
    float _2252 = ((_2206 * cbLight._m0[_2200].y) * _2244) + (((cbLight._m0[_2210].y * _2174) * _2219) * _2242);
    float _2253 = ((_2206 * cbLight._m0[_2200].z) * _2244) + (((cbLight._m0[_2210].z * _2176) * _2219) * _2242);
    uvec4 _2257 = floatBitsToUint(cbLight._m0[_2183 + 12u]);
    bool _2259 = _2257.x == 0u;
    float _2361;
    float _2363;
    float _2365;
    if (_2259)
    {
        _2361 = _2251;
        _2363 = _2252;
        _2365 = _2253;
    }
    else
    {
        uint _2369 = _2183 + 6u;
        float _2385 = (dot(vec3(cbLight._m0[_2183 + 2u].xyz), vec3(_738, _739, _740)) * 0.5) + 0.5;
        float _2386 = _2385 * _2385;
        float _4453 = isnan(0.0) ? _2386 : (isnan(_2386) ? 0.0 : max(_2386, 0.0));
        float _2387 = isnan(1.0) ? _4453 : (isnan(_4453) ? 1.0 : min(_4453, 1.0));
        float _2388 = isnan(1.0) ? _2198 : (isnan(_2198) ? 1.0 : min(_2198, 1.0));
        _2361 = (((cbLight._m0[_2369].x * 0.3183098733425140380859375) * _2387) * _2388) + _2251;
        _2363 = (((cbLight._m0[_2369].y * 0.3183098733425140380859375) * _2387) * _2388) + _2252;
        _2365 = (((cbLight._m0[_2369].z * 0.3183098733425140380859375) * _2387) * _2388) + _2253;
    }
    bool _2368 = _2257.y == 0u;
    float _2423;
    float _2425;
    float _2427;
    if (_2368)
    {
        _2423 = _2361;
        _2425 = _2363;
        _2427 = _2365;
    }
    else
    {
        uint _2585 = _2183 + 7u;
        float _2601 = (dot(vec3(cbLight._m0[_2183 + 3u].xyz), vec3(_738, _739, _740)) * 0.5) + 0.5;
        float _2602 = _2601 * _2601;
        float _4469 = isnan(0.0) ? _2602 : (isnan(_2602) ? 0.0 : max(_2602, 0.0));
        float _2603 = isnan(1.0) ? _4469 : (isnan(_4469) ? 1.0 : min(_4469, 1.0));
        float _2604 = isnan(1.0) ? _2199 : (isnan(_2199) ? 1.0 : min(_2199, 1.0));
        _2423 = (((cbLight._m0[_2585].x * 0.3183098733425140380859375) * _2603) * _2604) + _2361;
        _2425 = (((cbLight._m0[_2585].y * 0.3183098733425140380859375) * _2603) * _2604) + _2363;
        _2427 = (((cbLight._m0[_2585].z * 0.3183098733425140380859375) * _2603) * _2604) + _2365;
    }
    uint _2430 = _2183 + 8u;
    float _2443 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2183].w)) * _741) * 0.949999988079071044921875);
    float _2444 = _2443 * _2443;
    float _2445 = cbLight._m0[_2183].x + _817;
    float _2446 = cbLight._m0[_2183].y + _818;
    float _2447 = cbLight._m0[_2183].z + _819;
    float _2451 = inversesqrt(dot(vec3(_2445, _2446, _2447), vec3(_2445, _2446, _2447)));
    float _2452 = _2451 * _2445;
    float _2453 = _2451 * _2446;
    float _2454 = _2451 * _2447;
    float _2455 = dot(vec3(_738, _739, _740), vec3(cbLight._m0[_2183].xyz));
    float _4485 = isnan(0.0) ? _2455 : (isnan(_2455) ? 0.0 : max(_2455, 0.0));
    float _2458 = isnan(1.0) ? _4485 : (isnan(_4485) ? 1.0 : min(_4485, 1.0));
    float _4496 = isnan(0.0) ? _889 : (isnan(_889) ? 0.0 : max(_889, 0.0));
    float _2459 = isnan(1.0) ? _4496 : (isnan(_4496) ? 1.0 : min(_4496, 1.0));
    float _2460 = dot(vec3(_738, _739, _740), vec3(_2452, _2453, _2454));
    float _4507 = isnan(0.0) ? _2460 : (isnan(_2460) ? 0.0 : max(_2460, 0.0));
    float _2463 = isnan(1.0) ? _4507 : (isnan(_4507) ? 1.0 : min(_4507, 1.0));
    float _2464 = dot(vec3(cbLight._m0[_2183].xyz), vec3(_2452, _2453, _2454));
    float _4518 = isnan(0.0) ? _2464 : (isnan(_2464) ? 0.0 : max(_2464, 0.0));
    float _2468 = _2444 * _2444;
    float _2472 = ((_2463 * _2463) * (_2468 + (-1.0))) + 1.0;
    float _2483 = (exp2(log2(1.0 - (isnan(1.0) ? _4518 : (isnan(_4518) ? 1.0 : min(_4518, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2484 = 1.0 - _2444;
    float _2495 = (0.5 / (((_2459 * ((_2458 * _2484) + _2444)) + 9.9999999392252902907785028219223e-09) + (((_2459 * _2484) + _2444) * _2458))) * _2458;
    float _4529 = isnan(0.0) ? _2495 : (isnan(_2495) ? 0.0 : max(_2495, 0.0));
    float _2497 = (isnan(1.0) ? _4529 : (isnan(_4529) ? 1.0 : min(_4529, 1.0))) * (_2468 / ((_2472 * _2472) * 3.141590118408203125));
    uint _2511 = _2183 + 9u;
    float _2522 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2223].w)) * _741) * 0.949999988079071044921875);
    float _2523 = _2522 * _2522;
    float _2524 = cbLight._m0[_2223].x + _817;
    float _2525 = cbLight._m0[_2223].y + _818;
    float _2526 = cbLight._m0[_2223].z + _819;
    float _2530 = inversesqrt(dot(vec3(_2524, _2525, _2526), vec3(_2524, _2525, _2526)));
    float _2531 = _2530 * _2524;
    float _2532 = _2530 * _2525;
    float _2533 = _2530 * _2526;
    float _2534 = dot(vec3(_738, _739, _740), vec3(cbLight._m0[_2223].xyz));
    float _4540 = isnan(0.0) ? _2534 : (isnan(_2534) ? 0.0 : max(_2534, 0.0));
    float _2537 = isnan(1.0) ? _4540 : (isnan(_4540) ? 1.0 : min(_4540, 1.0));
    float _2538 = dot(vec3(_738, _739, _740), vec3(_2531, _2532, _2533));
    float _4551 = isnan(0.0) ? _2538 : (isnan(_2538) ? 0.0 : max(_2538, 0.0));
    float _2541 = isnan(1.0) ? _4551 : (isnan(_4551) ? 1.0 : min(_4551, 1.0));
    float _2542 = dot(vec3(cbLight._m0[_2223].xyz), vec3(_2531, _2532, _2533));
    float _4562 = isnan(0.0) ? _2542 : (isnan(_2542) ? 0.0 : max(_2542, 0.0));
    float _2546 = _2523 * _2523;
    float _2550 = ((_2541 * _2541) * (_2546 + (-1.0))) + 1.0;
    float _2559 = (exp2(log2(1.0 - (isnan(1.0) ? _4562 : (isnan(_4562) ? 1.0 : min(_4562, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2560 = 1.0 - _2523;
    float _2570 = (0.5 / (((_2459 * ((_2537 * _2560) + _2523)) + 9.9999999392252902907785028219223e-09) + (((_2459 * _2560) + _2523) * _2537))) * _2537;
    float _4573 = isnan(0.0) ? _2570 : (isnan(_2570) ? 0.0 : max(_2570, 0.0));
    float _2572 = (isnan(1.0) ? _4573 : (isnan(_4573) ? 1.0 : min(_4573, 1.0))) * (_2546 / ((_2550 * _2550) * 3.141590118408203125));
    float _2582 = (((_2559 * cbLight._m0[_2511].x) * _2572) * _2206) + ((((cbLight._m0[_2430].x * _2172) * _2483) * _2497) * _2219);
    float _2583 = (((_2559 * cbLight._m0[_2511].y) * _2572) * _2206) + ((((cbLight._m0[_2430].y * _2174) * _2483) * _2497) * _2219);
    float _2584 = (((_2559 * cbLight._m0[_2511].z) * _2572) * _2206) + ((((cbLight._m0[_2430].z * _2176) * _2483) * _2497) * _2219);
    float _2640;
    float _2642;
    float _2644;
    if (_2259)
    {
        _2640 = _2582;
        _2642 = _2583;
        _2644 = _2584;
    }
    else
    {
        uint _2646 = _2183 + 2u;
        uint _2650 = _2183 + 10u;
        float _2664 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2646].w)) * _741) * 0.949999988079071044921875);
        float _2665 = _2664 * _2664;
        float _2666 = cbLight._m0[_2646].x + _817;
        float _2667 = cbLight._m0[_2646].y + _818;
        float _2668 = cbLight._m0[_2646].z + _819;
        float _2672 = inversesqrt(dot(vec3(_2666, _2667, _2668), vec3(_2666, _2667, _2668)));
        float _2673 = _2672 * _2666;
        float _2674 = _2672 * _2667;
        float _2675 = _2672 * _2668;
        float _2676 = dot(vec3(_738, _739, _740), vec3(cbLight._m0[_2646].xyz));
        float _4584 = isnan(0.0) ? _2676 : (isnan(_2676) ? 0.0 : max(_2676, 0.0));
        float _2679 = isnan(1.0) ? _4584 : (isnan(_4584) ? 1.0 : min(_4584, 1.0));
        float _2680 = dot(vec3(_738, _739, _740), vec3(_2673, _2674, _2675));
        float _4595 = isnan(0.0) ? _2680 : (isnan(_2680) ? 0.0 : max(_2680, 0.0));
        float _2683 = isnan(1.0) ? _4595 : (isnan(_4595) ? 1.0 : min(_4595, 1.0));
        float _2684 = dot(vec3(cbLight._m0[_2646].xyz), vec3(_2673, _2674, _2675));
        float _4606 = isnan(0.0) ? _2684 : (isnan(_2684) ? 0.0 : max(_2684, 0.0));
        float _2688 = _2665 * _2665;
        float _2692 = ((_2683 * _2683) * (_2688 + (-1.0))) + 1.0;
        float _2701 = (exp2(log2(1.0 - (isnan(1.0) ? _4606 : (isnan(_4606) ? 1.0 : min(_4606, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2702 = 1.0 - _2665;
        float _2712 = (0.5 / (((_2459 * ((_2679 * _2702) + _2665)) + 9.9999999392252902907785028219223e-09) + (((_2459 * _2702) + _2665) * _2679))) * _2679;
        float _4617 = isnan(0.0) ? _2712 : (isnan(_2712) ? 0.0 : max(_2712, 0.0));
        float _2714 = (isnan(1.0) ? _4617 : (isnan(_4617) ? 1.0 : min(_4617, 1.0))) * (_2688 / ((_2692 * _2692) * 3.141590118408203125));
        float _2715 = isnan(1.0) ? _2198 : (isnan(_2198) ? 1.0 : min(_2198, 1.0));
        _2640 = (((_2701 * cbLight._m0[_2650].x) * _2714) * _2715) + _2582;
        _2642 = (((_2701 * cbLight._m0[_2650].y) * _2714) * _2715) + _2583;
        _2644 = (((_2701 * cbLight._m0[_2650].z) * _2714) * _2715) + _2584;
    }
    float _2746;
    float _2748;
    float _2750;
    if (_2368)
    {
        _2746 = _2640;
        _2748 = _2642;
        _2750 = _2644;
    }
    else
    {
        uint _2757 = _2183 + 3u;
        uint _2761 = _2183 + 11u;
        float _2775 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2757].w)) * _741) * 0.949999988079071044921875);
        float _2776 = _2775 * _2775;
        float _2777 = cbLight._m0[_2757].x + _817;
        float _2778 = cbLight._m0[_2757].y + _818;
        float _2779 = cbLight._m0[_2757].z + _819;
        float _2783 = inversesqrt(dot(vec3(_2777, _2778, _2779), vec3(_2777, _2778, _2779)));
        float _2784 = _2783 * _2777;
        float _2785 = _2783 * _2778;
        float _2786 = _2783 * _2779;
        float _2787 = dot(vec3(_738, _739, _740), vec3(cbLight._m0[_2757].xyz));
        float _4633 = isnan(0.0) ? _2787 : (isnan(_2787) ? 0.0 : max(_2787, 0.0));
        float _2790 = isnan(1.0) ? _4633 : (isnan(_4633) ? 1.0 : min(_4633, 1.0));
        float _2791 = dot(vec3(_738, _739, _740), vec3(_2784, _2785, _2786));
        float _4644 = isnan(0.0) ? _2791 : (isnan(_2791) ? 0.0 : max(_2791, 0.0));
        float _2794 = isnan(1.0) ? _4644 : (isnan(_4644) ? 1.0 : min(_4644, 1.0));
        float _2795 = dot(vec3(cbLight._m0[_2757].xyz), vec3(_2784, _2785, _2786));
        float _4655 = isnan(0.0) ? _2795 : (isnan(_2795) ? 0.0 : max(_2795, 0.0));
        float _2799 = _2776 * _2776;
        float _2803 = ((_2794 * _2794) * (_2799 + (-1.0))) + 1.0;
        float _2812 = (exp2(log2(1.0 - (isnan(1.0) ? _4655 : (isnan(_4655) ? 1.0 : min(_4655, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2813 = 1.0 - _2776;
        float _2823 = (0.5 / (((_2459 * ((_2790 * _2813) + _2776)) + 9.9999999392252902907785028219223e-09) + (((_2459 * _2813) + _2776) * _2790))) * _2790;
        float _4666 = isnan(0.0) ? _2823 : (isnan(_2823) ? 0.0 : max(_2823, 0.0));
        float _2825 = (isnan(1.0) ? _4666 : (isnan(_4666) ? 1.0 : min(_4666, 1.0))) * (_2799 / ((_2803 * _2803) * 3.141590118408203125));
        float _2826 = isnan(1.0) ? _2199 : (isnan(_2199) ? 1.0 : min(_2199, 1.0));
        _2746 = (((_2812 * cbLight._m0[_2761].x) * _2825) * _2826) + _2640;
        _2748 = (((_2812 * cbLight._m0[_2761].y) * _2825) * _2826) + _2642;
        _2750 = (((_2812 * cbLight._m0[_2761].z) * _2825) * _2826) + _2644;
    }
    float _2892;
    float _2894;
    float _2896;
    float _2898;
    float _2900;
    float _2902;
    if (_2181.y == 0u)
    {
        uvec4 _2847 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2848 = _2847.x;
        uint _2859 = uint((float(_2847.y) * floor(float(uint(cbSceneParam._m0[85u].y * _826) / _2848))) + floor(float(uint(cbSceneParam._m0[85u].x * _825) / _2848)));
        float _2869 = (log2(_1959 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2870 = isnan(0.0) ? _2869 : (isnan(_2869) ? 0.0 : max(_2869, 0.0));
        uint _2873 = uint(isnan(14.0) ? _2870 : (isnan(_2870) ? 14.0 : min(_2870, 14.0)));
        uvec4 _2878 = texelFetch(g_lightClusterGridBuffer, int(((_2873 << 2u) + (_2859 << 6u)) >> 2u));
        uint _2879 = _2878.x;
        uint _2880 = _2847.z;
        float _2959;
        float _2961;
        float _2963;
        float _2965;
        float _2967;
        float _2969;
        if (((((1u << ((_2880 >> 4u) & 15u)) + 4294967295u) & _2879) == 0u) || ((_2880 & 240u) == 0u))
        {
            _2959 = 0.0;
            _2961 = 0.0;
            _2963 = 0.0;
            _2965 = 0.0;
            _2967 = 0.0;
            _2969 = 0.0;
        }
        else
        {
            float _2960;
            float _2962;
            float _2964;
            float _2966;
            float _2968;
            float _2970;
            float _3104 = 0.0;
            float _3105 = 0.0;
            float _3106 = 0.0;
            float _3107 = 0.0;
            float _3108 = 0.0;
            float _3109 = 0.0;
            uint _3110 = 0u;
            uint _3119;
            bool _3120;
            for (;;)
            {
                _3119 = texelFetch(g_lightClassification, int((((_2873 << 5u) + (_2859 << 9u)) + (_3110 << 2u)) >> 2u)).x;
                _3120 = _3119 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3120)
                {
                    frontier_phi_66_pred = _3109;
                    frontier_phi_66_pred_1 = _3108;
                    frontier_phi_66_pred_2 = _3107;
                    frontier_phi_66_pred_3 = _3106;
                    frontier_phi_66_pred_4 = _3105;
                    frontier_phi_66_pred_5 = _3104;
                }
                else
                {
                    float _3228;
                    float _3229;
                    float _3230;
                    float _3231;
                    float _3232;
                    float _3233;
                    uint _3234;
                    _3228 = _3104;
                    _3229 = _3105;
                    _3230 = _3106;
                    _3231 = _3107;
                    _3232 = _3108;
                    _3233 = _3109;
                    _3234 = _3119;
                    float _3160;
                    float _3161;
                    float _3162;
                    float _3163;
                    float _3164;
                    float _3165;
                    for (;;)
                    {
                        uint _3238 = uint(findLSB(_3234)) + (_3110 << 5u);
                        uint _3235 = (_3234 + 4294967295u) & _3234;
                        uint _3240 = _3238 * 48u;
                        vec4 _3254 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3240)).x, texelFetch(g_PointLightRenderingBuffer, int(_3240 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3240 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3240 + 3u)).x));
                        uint _3260 = (_3238 * 48u) + 4u;
                        vec4 _3273 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3260)).x, texelFetch(g_PointLightRenderingBuffer, int(_3260 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3260 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3260 + 3u)).x));
                        uint _3279 = (_3238 * 48u) + 8u;
                        vec3 _3290 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3279)).x, texelFetch(g_PointLightRenderingBuffer, int(_3279 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3279 + 2u)).x));
                        float _3294 = _3254.x - _1957;
                        float _3295 = _3254.y - _1958;
                        float _3296 = _3254.z - _1959;
                        float _3297 = dot(vec3(_3294, _3295, _3296), vec3(_3294, _3295, _3296));
                        float _3300 = inversesqrt(_3297);
                        float _3301 = _3300 * _3294;
                        float _3302 = _3300 * _3295;
                        float _3303 = _3300 * _3296;
                        float _3304 = dot(vec3(_844, _847, _850), vec3(_3301, _3302, _3303));
                        float _3309 = 1.0 - (_3297 * _3254.w);
                        float _4692 = isnan(0.0) ? _3309 : (isnan(_3309) ? 0.0 : max(_3309, 0.0));
                        float _3310 = isnan(1.0) ? _4692 : (isnan(_4692) ? 1.0 : min(_4692, 1.0));
                        float _3311 = sqrt(_3297) * _3273.w;
                        float _3314 = 1.39999997615814208984375 / (_3311 + 1.39999997615814208984375);
                        float _3315 = _3314 * _3314;
                        float _3318 = ((1.0 - _3315) * _3304) + _3315;
                        float _3321 = _3311 * _3311;
                        float _3325 = ((isnan(0.0) ? _3318 : (isnan(_3318) ? 0.0 : max(_3318, 0.0))) * _3310) / ((_3321 * 0.699999988079071044921875) + 1.0);
                        float _3329 = (-0.0) - _1957;
                        float _3330 = (-0.0) - _1958;
                        float _3331 = (-0.0) - _1959;
                        float _3335 = inversesqrt(dot(vec3(_3329, _3330, _3331), vec3(_3329, _3330, _3331)));
                        float _3336 = _3335 * _3329;
                        float _3337 = _3335 * _3330;
                        float _3338 = _3335 * _3331;
                        float _3345 = exp2(log2(1.0 / ((_3321 * 3.5) + 5.0)) * 0.25);
                        float _3346 = 1.0 - _904;
                        float _3353 = sqrt(1.0 - ((1.0 - (_3346 * _3346)) * (1.0 - (_3345 * _3345))));
                        float _3354 = _3353 * _3353;
                        float _3355 = _3354 * _3354;
                        float _3356 = _3336 + _3301;
                        float _3357 = _3337 + _3302;
                        float _3358 = _3338 + _3303;
                        float _3362 = inversesqrt(dot(vec3(_3356, _3357, _3358), vec3(_3356, _3357, _3358)));
                        float _3366 = dot(vec3(_844, _847, _850), vec3(_3336, _3337, _3338));
                        float _4708 = isnan(0.0) ? _3366 : (isnan(_3366) ? 0.0 : max(_3366, 0.0));
                        float _3369 = isnan(1.0) ? _4708 : (isnan(_4708) ? 1.0 : min(_4708, 1.0));
                        float _3370 = dot(vec3(_844, _847, _850), vec3(_3362 * _3356, _3362 * _3357, _3362 * _3358));
                        float _4719 = isnan(0.0) ? _3370 : (isnan(_3370) ? 0.0 : max(_3370, 0.0));
                        float _3373 = isnan(1.0) ? _4719 : (isnan(_4719) ? 1.0 : min(_4719, 1.0));
                        float _3377 = ((_3373 * _3373) * (_3355 + (-1.0))) + 1.0;
                        float _3378 = _3314 * _3354;
                        float _3379 = _3378 * _3378;
                        float _3382 = ((1.0 - _3379) * _3304) + _3379;
                        float _4730 = isnan(0.0) ? _3382 : (isnan(_3382) ? 0.0 : max(_3382, 0.0));
                        float _3383 = isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0));
                        float _3384 = 1.0 - _3354;
                        float _3394 = (0.5 / (((_3383 * ((_3369 * _3384) + _3354)) + 9.9999999392252902907785028219223e-09) + (((_3383 * _3384) + _3354) * _3369))) * _3383;
                        float _4741 = isnan(0.0) ? _3394 : (isnan(_3394) ? 0.0 : max(_3394, 0.0));
                        float _3405 = (((_3355 * 3.1415927410125732421875) * (isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0)))) / ((_3377 * _3377) * ((_3321 * 2.1991131305694580078125) + 3.141590118408203125))) * _3310;
                        _3163 = (_3325 * _3273.x) + _3231;
                        _3164 = (_3325 * _3273.y) + _3232;
                        _3165 = (_3325 * _3273.z) + _3233;
                        _3160 = (_3405 * _3290.x) + _3228;
                        _3161 = (_3405 * _3290.y) + _3229;
                        _3162 = (_3405 * _3290.z) + _3230;
                        if (_3235 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3228 = _3160;
                            _3229 = _3161;
                            _3230 = _3162;
                            _3231 = _3163;
                            _3232 = _3164;
                            _3233 = _3165;
                            _3234 = _3235;
                        }
                    }
                    frontier_phi_66_pred = _3165;
                    frontier_phi_66_pred_1 = _3164;
                    frontier_phi_66_pred_2 = _3163;
                    frontier_phi_66_pred_3 = _3162;
                    frontier_phi_66_pred_4 = _3161;
                    frontier_phi_66_pred_5 = _3160;
                }
                _2970 = frontier_phi_66_pred;
                _2968 = frontier_phi_66_pred_1;
                _2966 = frontier_phi_66_pred_2;
                _2964 = frontier_phi_66_pred_3;
                _2962 = frontier_phi_66_pred_4;
                _2960 = frontier_phi_66_pred_5;
                uint _3111 = _3110 + 1u;
                if (_3111 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3104 = _2960;
                    _3105 = _2962;
                    _3106 = _2964;
                    _3107 = _2966;
                    _3108 = _2968;
                    _3109 = _2970;
                    _3110 = _3111;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2959 = _2960;
            _2961 = _2962;
            _2963 = _2964;
            _2965 = _2966;
            _2967 = _2968;
            _2969 = _2970;
        }
        uvec4 _2973 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2974 = _2973.z;
        uint _2976 = (_2974 >> 8u) & 15u;
        float _3072;
        float _3074;
        float _3076;
        float _3078;
        float _3080;
        float _3082;
        if (((4294967295u << _2976) & _2879) == 0u)
        {
            _3072 = _2959;
            _3074 = _2961;
            _3076 = _2963;
            _3078 = _2965;
            _3080 = _2967;
            _3082 = _2969;
        }
        else
        {
            float _3097 = inversesqrt(dot(vec3(_1957, _1958, _1959), vec3(_1957, _1958, _1959)));
            float _3098 = _3097 * _1957;
            float _3099 = _3097 * _1958;
            float _3100 = _3097 * _1959;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2976 < ((_2974 >> 12u) & 15u))
            {
                float _3073;
                float _3075;
                float _3077;
                float _3079;
                float _3081;
                float _3083;
                float _3211 = _2959;
                float _3212 = _2961;
                float _3213 = _2963;
                float _3214 = _2965;
                float _3215 = _2967;
                float _3216 = _2969;
                uint _3217 = _2976;
                uint _3226;
                bool _3227;
                for (;;)
                {
                    _3226 = texelFetch(g_lightClassification, int((((_2873 << 5u) + (_2859 << 9u)) + (_3217 << 2u)) >> 2u)).x;
                    _3227 = _3226 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3227)
                    {
                        frontier_phi_72_pred = _3216;
                        frontier_phi_72_pred_1 = _3215;
                        frontier_phi_72_pred_2 = _3214;
                        frontier_phi_72_pred_3 = _3213;
                        frontier_phi_72_pred_4 = _3212;
                        frontier_phi_72_pred_5 = _3211;
                    }
                    else
                    {
                        float _3410;
                        float _3411;
                        float _3412;
                        float _3413;
                        float _3414;
                        float _3415;
                        float _3703;
                        float _3704;
                        float _3705;
                        float _3706;
                        float _3707;
                        float _3708;
                        float _3423 = _3211;
                        float _3424 = _3212;
                        float _3425 = _3213;
                        float _3426 = _3214;
                        float _3427 = _3215;
                        float _3428 = _3216;
                        uint _3429 = _3226;
                        uint _3430;
                        vec4 _3455;
                        float _3456;
                        vec4 _3471;
                        vec3 _3483;
                        vec4 _3498;
                        vec4 _3513;
                        float _3559;
                        bool _3560;
                        for (;;)
                        {
                            uint _3440 = ((_3217 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3429));
                            _3430 = (_3429 + 4294967295u) & _3429;
                            uint _3442 = _3440 * 40u;
                            _3455 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3442)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3442 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3442 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3442 + 3u)).x));
                            _3456 = _3455.w;
                            uint _3458 = (_3440 * 40u) + 4u;
                            _3471 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3458)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3458 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3458 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3458 + 3u)).x));
                            uint _3473 = (_3440 * 40u) + 8u;
                            _3483 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3473)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3473 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3473 + 2u)).x));
                            uint _3485 = (_3440 * 40u) + 16u;
                            _3498 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3485)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3485 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3485 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3485 + 3u)).x));
                            uint _3500 = (_3440 * 40u) + 20u;
                            _3513 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3500)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3500 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3500 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3500 + 3u)).x));
                            uint _3515 = (_3440 * 40u) + 24u;
                            vec4 _3528 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3515)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3515 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3515 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3515 + 3u)).x));
                            uint _3534 = (_3440 * 40u) + 28u;
                            vec4 _3547 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3534)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3534 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3534 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3534 + 3u)).x));
                            _3559 = fma(_1959, _3547.z, fma(_1958, _3547.y, _3547.x * _1957)) + _3547.w;
                            _3560 = !((fma(_1959, _3528.z, fma(_1958, _3528.y, _3528.x * _1957)) + _3528.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3560)
                            {
                                float _3587 = _3455.x - _1957;
                                float _3588 = _3455.y - _1958;
                                float _3589 = _3455.z - _1959;
                                float _3590 = dot(vec3(_3587, _3588, _3589), vec3(_3587, _3588, _3589));
                                float _3593 = inversesqrt(_3590);
                                float _3594 = _3593 * _3587;
                                float _3595 = _3593 * _3588;
                                float _3596 = _3593 * _3589;
                                float _3600 = 1.0 - (_3590 / (_3456 * _3456));
                                float _4752 = isnan(0.0) ? _3600 : (isnan(_3600) ? 0.0 : max(_3600, 0.0));
                                float _3601 = isnan(1.0) ? _4752 : (isnan(_4752) ? 1.0 : min(_4752, 1.0));
                                float _3605 = sqrt(_3590) * _3471.w;
                                float _3607 = 1.39999997615814208984375 / (_3605 + 1.39999997615814208984375);
                                float _3608 = _3607 * _3607;
                                float _3611 = ((1.0 - _3608) * dot(vec3(_3594, _3595, _3596), vec3(_844, _847, _850))) + _3608;
                                float _3614 = _3605 * _3605;
                                float _3618 = (fma(_1959, _3498.z, fma(_1958, _3498.y, _3498.x * _1957)) + _3498.w) / _3559;
                                float _3619 = (fma(_1959, _3513.z, fma(_1958, _3513.y, _3513.x * _1957)) + _3513.w) / _3559;
                                float _3623 = 1.0 - dot(vec2(_3618, _3619), vec2(_3618, _3619));
                                float _4768 = isnan(0.0) ? _3623 : (isnan(_3623) ? 0.0 : max(_3623, 0.0));
                                float _3624 = isnan(1.0) ? _4768 : (isnan(_4768) ? 1.0 : min(_4768, 1.0));
                                float _3625 = _3624 * (((isnan(0.0) ? _3611 : (isnan(_3611) ? 0.0 : max(_3611, 0.0))) * _3601) / ((_3614 * 0.699999988079071044921875) + 1.0));
                                float _3637 = exp2(log2(1.0 / ((_3614 * 3.5) + 5.0)) * 0.25);
                                float _3638 = 1.0 - _904;
                                float _3645 = sqrt(1.0 - ((1.0 - (_3638 * _3638)) * (1.0 - (_3637 * _3637))));
                                float _3646 = _3645 * _3645;
                                float _3647 = _3646 * _3646;
                                float _3648 = _3594 - _3098;
                                float _3649 = _3595 - _3099;
                                float _3650 = _3596 - _3100;
                                float _3654 = inversesqrt(dot(vec3(_3648, _3649, _3650), vec3(_3648, _3649, _3650)));
                                float _3658 = dot(vec3(_844, _847, _850), vec3((-0.0) - _3098, (-0.0) - _3099, (-0.0) - _3100));
                                float _4779 = isnan(0.0) ? _3658 : (isnan(_3658) ? 0.0 : max(_3658, 0.0));
                                float _3661 = isnan(1.0) ? _4779 : (isnan(_4779) ? 1.0 : min(_4779, 1.0));
                                float _3662 = dot(vec3(_844, _847, _850), vec3(_3654 * _3648, _3654 * _3649, _3654 * _3650));
                                float _4790 = isnan(0.0) ? _3662 : (isnan(_3662) ? 0.0 : max(_3662, 0.0));
                                float _3665 = isnan(1.0) ? _4790 : (isnan(_4790) ? 1.0 : min(_4790, 1.0));
                                float _3669 = ((_3665 * _3665) * (_3647 + (-1.0))) + 1.0;
                                float _3670 = _3607 * _3646;
                                float _3671 = _3670 * _3670;
                                float _3677 = ((1.0 - _3671) * dot(vec3(_844, _847, _850), vec3(_3594, _3595, _3596))) + _3671;
                                float _4801 = isnan(0.0) ? _3677 : (isnan(_3677) ? 0.0 : max(_3677, 0.0));
                                float _3678 = isnan(1.0) ? _4801 : (isnan(_4801) ? 1.0 : min(_4801, 1.0));
                                float _3679 = 1.0 - _3646;
                                float _3689 = (0.5 / (((_3678 * ((_3661 * _3679) + _3646)) + 9.9999999392252902907785028219223e-09) + (((_3678 * _3679) + _3646) * _3661))) * _3678;
                                float _4812 = isnan(0.0) ? _3689 : (isnan(_3689) ? 0.0 : max(_3689, 0.0));
                                float _3699 = (_3624 * _3601) * (((_3647 * 3.1415927410125732421875) * (isnan(1.0) ? _4812 : (isnan(_4812) ? 1.0 : min(_4812, 1.0)))) / ((_3669 * _3669) * ((_3614 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3625 * _3471.y;
                                frontier_phi_78_pred_1 = _3625 * _3471.x;
                                frontier_phi_78_pred_2 = _3699 * _3483.z;
                                frontier_phi_78_pred_3 = _3699 * _3483.y;
                                frontier_phi_78_pred_4 = _3699 * _3483.x;
                                frontier_phi_78_pred_5 = _3625 * _3471.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3707 = frontier_phi_78_pred;
                            _3706 = frontier_phi_78_pred_1;
                            _3705 = frontier_phi_78_pred_2;
                            _3704 = frontier_phi_78_pred_3;
                            _3703 = frontier_phi_78_pred_4;
                            _3708 = frontier_phi_78_pred_5;
                            _3413 = _3706 + _3426;
                            _3414 = _3707 + _3427;
                            _3415 = _3708 + _3428;
                            _3410 = _3703 + _3423;
                            _3411 = _3704 + _3424;
                            _3412 = _3705 + _3425;
                            if (_3430 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3423 = _3410;
                                _3424 = _3411;
                                _3425 = _3412;
                                _3426 = _3413;
                                _3427 = _3414;
                                _3428 = _3415;
                                _3429 = _3430;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3415;
                        frontier_phi_72_pred_1 = _3414;
                        frontier_phi_72_pred_2 = _3413;
                        frontier_phi_72_pred_3 = _3412;
                        frontier_phi_72_pred_4 = _3411;
                        frontier_phi_72_pred_5 = _3410;
                    }
                    _3083 = frontier_phi_72_pred;
                    _3081 = frontier_phi_72_pred_1;
                    _3079 = frontier_phi_72_pred_2;
                    _3077 = frontier_phi_72_pred_3;
                    _3075 = frontier_phi_72_pred_4;
                    _3073 = frontier_phi_72_pred_5;
                    uint _3218 = _3217 + 1u;
                    if (_3218 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3211 = _3073;
                        _3212 = _3075;
                        _3213 = _3077;
                        _3214 = _3079;
                        _3215 = _3081;
                        _3216 = _3083;
                        _3217 = _3218;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3083;
                frontier_phi_60_61_ladder_1 = _3081;
                frontier_phi_60_61_ladder_2 = _3077;
                frontier_phi_60_61_ladder_3 = _3075;
                frontier_phi_60_61_ladder_4 = _3073;
                frontier_phi_60_61_ladder_5 = _3079;
            }
            else
            {
                frontier_phi_60_61_ladder = _2969;
                frontier_phi_60_61_ladder_1 = _2967;
                frontier_phi_60_61_ladder_2 = _2963;
                frontier_phi_60_61_ladder_3 = _2961;
                frontier_phi_60_61_ladder_4 = _2959;
                frontier_phi_60_61_ladder_5 = _2965;
            }
            _3072 = frontier_phi_60_61_ladder_4;
            _3074 = frontier_phi_60_61_ladder_3;
            _3076 = frontier_phi_60_61_ladder_2;
            _3078 = frontier_phi_60_61_ladder_5;
            _3080 = frontier_phi_60_61_ladder_1;
            _3082 = frontier_phi_60_61_ladder;
        }
        float _3087 = isnan(1.0) ? _888 : (isnan(_888) ? 1.0 : min(_888, 1.0));
        _2892 = (_3087 * _3078) + _2423;
        _2894 = (_3087 * _3080) + _2425;
        _2896 = (_3087 * _3082) + _2427;
        _2898 = ((_3072 * 0.039999999105930328369140625) * _3087) + _2746;
        _2900 = ((_3074 * 0.039999999105930328369140625) * _3087) + _2748;
        _2902 = ((_3076 * 0.039999999105930328369140625) * _3087) + _2750;
    }
    else
    {
        _2892 = _2423;
        _2894 = _2425;
        _2896 = _2427;
        _2898 = _2746;
        _2900 = _2748;
        _2902 = _2750;
    }
    float _4828 = isnan(0.0) ? _873 : (isnan(_873) ? 0.0 : max(_873, 0.0));
    float _4839 = isnan(0.0) ? _874 : (isnan(_874) ? 0.0 : max(_874, 0.0));
    float _4850 = isnan(0.0) ? _875 : (isnan(_875) ? 0.0 : max(_875, 0.0));
    uint _2922 = _255 + 6u;
    float _2930 = _825 / cbSceneParam._m0[86u].x;
    float _2931 = _826 / cbSceneParam._m0[86u].y;
    vec4 _2945 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2930, _2931, (log2((isnan(cbSceneParam._m0[77u].w) ? _759 : (isnan(_759) ? cbSceneParam._m0[77u].w : min(_759, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2947 = _2945.x;
    float _2948 = _2945.y;
    float _2949 = _2945.z;
    float _2950 = _2945.w;
    float _3022;
    float _3024;
    float _3026;
    float _3028;
    if (_759 > cbSceneParam._m0[78u].w)
    {
        float _2984 = isnan(_759) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _759 : min(cbSceneParam._m0[80u].w, _759));
        float _2985 = _2984 / _759;
        float _2996 = _2985 * _810;
        float _2997 = _811 * _2985;
        float _2998 = (-0.0) - _2997;
        float _3000 = _2985 * _812;
        float _3002 = (cbSceneParam._m0[77u].w * _2998) / _2984;
        float _3003 = _3002 + cbSceneParam._m0[79u].w;
        float _3004 = cbSceneParam._m0[79u].w - _2997;
        float _3010 = sqrt(((_2996 * _2996) + (_2997 * _2997)) + (_3000 * _3000));
        float _3013 = (1.0 - (cbSceneParam._m0[77u].w / _2984)) * _3010;
        float _3018 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3020 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3173;
        if (abs((_2998 - _3002) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3173 = ((((_3003 > 0.0) ? exp2(_3018 * _3003) : (2.0 - exp2(_3020 * _3003))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3013;
        }
        else
        {
            float _3133 = 1.0 / cbSceneParam._m0[80u].x;
            float _3134 = isnan(_3004) ? _3003 : (isnan(_3003) ? _3004 : max(_3003, _3004));
            float _3135 = isnan(_3004) ? _3003 : (isnan(_3003) ? _3004 : min(_3003, _3004));
            float _3144 = isnan(0.0) ? _3134 : (isnan(_3134) ? 0.0 : min(_3134, 0.0));
            float _3145 = isnan(0.0) ? _3135 : (isnan(_3135) ? 0.0 : min(_3135, 0.0));
            _3173 = ((abs(_3010 / _2998) * cbSceneParam._m0[80u].y) * ((((_3144 - _3145) * 2.0) - ((exp2(_3018 * (isnan(0.0) ? _3134 : (isnan(_3134) ? 0.0 : max(_3134, 0.0)))) - exp2(_3018 * (isnan(0.0) ? _3135 : (isnan(_3135) ? 0.0 : max(_3135, 0.0))))) * _3133)) - ((exp2(_3020 * _3144) - exp2(_3020 * _3145)) * _3133))) + (_3013 * cbSceneParam._m0[80u].z);
        }
        vec4 _3175 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2930, _2931, 1.0), 0.0);
        float _3184 = exp2((_3173 * (-1.44269502162933349609375)) * (1.0 - _3175.w));
        float _3185 = log2(_3184);
        float _3201 = log2(_2950);
        _3022 = (exp2(_3201 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3185 * cbSceneParam._m0[78u].x)) * _3175.x) / cbSceneParam._m0[78u].x)) + _2947;
        _3024 = (exp2(_3201 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3185 * cbSceneParam._m0[78u].y)) * _3175.y) / cbSceneParam._m0[78u].y)) + _2948;
        _3026 = (exp2(_3201 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3185 * cbSceneParam._m0[78u].z)) * _3175.z) / cbSceneParam._m0[78u].z)) + _2949;
        _3028 = _3184 * _2950;
    }
    else
    {
        _3022 = _2947;
        _3024 = _2948;
        _3026 = _2949;
        _3028 = _2950;
    }
    float _3040 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3041 = _3040 == 3.0;
    float _3042 = log2(_3028);
    float _3049 = exp2(_3042 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4828 : (isnan(_4828) ? 1.0 : min(_4828, 1.0))) * (_2892 + ((isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0))) * _888))) + ((_2898 + ((isnan(0.0) ? _1904 : (isnan(_1904) ? 0.0 : max(_1904, 0.0))) * _1693)) * cbPerFrame._m0[3u].x));
    float _3050 = exp2(_3042 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4839 : (isnan(_4839) ? 1.0 : min(_4839, 1.0))) * (_2894 + ((isnan(0.0) ? _1617 : (isnan(_1617) ? 0.0 : max(_1617, 0.0))) * _888))) + ((_2900 + ((isnan(0.0) ? _1907 : (isnan(_1907) ? 0.0 : max(_1907, 0.0))) * _1693)) * cbPerFrame._m0[3u].x));
    float _3051 = exp2(_3042 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4850 : (isnan(_4850) ? 1.0 : min(_4850, 1.0))) * (_2896 + ((isnan(0.0) ? _1620 : (isnan(_1620) ? 0.0 : max(_1620, 0.0))) * _888))) + ((_2902 + ((isnan(0.0) ? _1910 : (isnan(_1910) ? 0.0 : max(_1910, 0.0))) * _1693)) * cbPerFrame._m0[3u].x));
    float _3060 = (_3040 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3060 * (_3041 ? _3049 : (_3049 + (cbSceneParam._m0[72u].w * _3022)));
    SV_Target.y = _3060 * (_3041 ? _3050 : (_3050 + (cbSceneParam._m0[72u].w * _3024)));
    SV_Target.z = _3060 * (_3041 ? _3051 : (_3051 + (cbSceneParam._m0[72u].w * _3026)));
    SV_Target.w = cbInstanceData._m0[_2922].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2922].w;
}


