#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 14) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _159 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _160 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _161 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _167 = inversesqrt(dot(vec3(_159, _160, _161), vec3(_159, _160, _161)));
    float _168 = _167 * _159;
    float _169 = _167 * _160;
    float _170 = _167 * _161;
    float _174 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _175 = _174 * NORMAL.x;
    float _176 = _174 * NORMAL.y;
    float _177 = _174 * NORMAL.z;
    float _181 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _182 = _181 * TANGENT.x;
    float _183 = _181 * TANGENT.y;
    float _184 = _181 * TANGENT.z;
    uint _187 = uint(roundEven(NORMAL.w)) * 13u;
    uint _193 = _187 + 1u;
    uint _197 = _187 + 2u;
    float _206 = sqrt(((cbInstanceData._m0[_193].x * cbInstanceData._m0[_193].x) + (cbInstanceData._m0[_187].x * cbInstanceData._m0[_187].x)) + (cbInstanceData._m0[_197].x * cbInstanceData._m0[_197].x));
    float _207 = _206 * TEXCOORD.z;
    float _208 = _206 * TEXCOORD.w;
    vec4 _227 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _233 = _227.x * cbMtdParam._m0[9u].x;
    float _234 = _227.y * cbMtdParam._m0[9u].y;
    float _235 = _227.z * cbMtdParam._m0[9u].z;
    vec4 _254 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _207) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _208) + cbTextureTilingScale._m0[14u].w));
    vec4 _274 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _278 = _274.z;
    float _283 = (_274.x * 2.0) + (-1.0);
    float _285 = (_274.y * 2.0) + (-1.0);
    float _286 = dot(vec2(_283, _285), vec2(_283, _285));
    float _666 = isnan(0.0) ? _286 : (isnan(_286) ? 0.0 : max(_286, 0.0));
    float _292 = sqrt(1.0 - (isnan(1.0) ? _666 : (isnan(_666) ? 1.0 : min(_666, 1.0))));
    float _295 = fma(_292, _175, fma(_285, _182, _283 * _168));
    float _298 = fma(_292, _176, fma(_285, _183, _283 * _169));
    float _301 = fma(_292, _177, fma(_285, _184, _283 * _170));
    float _305 = inversesqrt(dot(vec3(_295, _298, _301), vec3(_295, _298, _301)));
    vec4 _342 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _207) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _208) + cbTextureTilingScale._m0[11u].w));
    float _344 = _342.x;
    float _345 = 1.0 - _344;
    float _354 = (cbMtdParam._m0[19u].x + dot(vec4(_305 * _295, _305 * _298, _305 * _301, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - ((((_344 - _345) * cbMtdParam._m0[24u].z) + _345) * cbMtdParam._m0[21u].z);
    float _677 = isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0));
    float _355 = isnan(1.0) ? _677 : (isnan(_677) ? 1.0 : min(_677, 1.0));
    float _362 = (_355 * ((_254.x * cbMtdParam._m0[18u].x) - _233)) + _233;
    float _363 = (_355 * ((_254.y * cbMtdParam._m0[18u].y) - _234)) + _234;
    float _364 = (_355 * ((_254.z * cbMtdParam._m0[18u].z) - _235)) + _235;
    vec4 _377 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _207) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _208) + cbTextureTilingScale._m0[15u].w));
    float _384 = (_377.x * 2.0) + (-1.0);
    float _385 = (_377.y * 2.0) + (-1.0);
    float _386 = dot(vec2(_384, _385), vec2(_384, _385));
    float _688 = isnan(0.0) ? _386 : (isnan(_386) ? 0.0 : max(_386, 0.0));
    float _394 = ((_377.z - _278) * _355) + _278;
    float _404 = ((sqrt(1.0 - (isnan(1.0) ? _688 : (isnan(_688) ? 1.0 : min(_688, 1.0)))) - _292) * _355) + _292;
    float _407 = (((_384 - _283) * _355) + _283) + (cbMtdParam._m0[21u].x * _283);
    float _408 = (((_385 - _285) * _355) + _285) + (cbMtdParam._m0[21u].x * _285);
    float _413 = cbMtdParam._m0[22u].x + _274.w;
    float _416 = fma(_404, _175, fma(_408, _182, _407 * _168));
    float _419 = fma(_404, _176, fma(_408, _183, _407 * _169));
    float _422 = fma(_404, _177, fma(_408, _184, _407 * _170));
    float _426 = inversesqrt(dot(vec3(_416, _419, _422), vec3(_416, _419, _422)));
    float _699 = isnan(0.0) ? _394 : (isnan(_394) ? 0.0 : max(_394, 0.0));
    float _710 = isnan(0.0) ? _413 : (isnan(_413) ? 0.0 : max(_413, 0.0));
    float _428 = isnan(1.0) ? _710 : (isnan(_710) ? 1.0 : min(_710, 1.0));
    float _721 = isnan(0.0) ? _362 : (isnan(_362) ? 0.0 : max(_362, 0.0));
    float _429 = isnan(1.0) ? _721 : (isnan(_721) ? 1.0 : min(_721, 1.0));
    float _732 = isnan(0.0) ? _363 : (isnan(_363) ? 0.0 : max(_363, 0.0));
    float _430 = isnan(1.0) ? _732 : (isnan(_732) ? 1.0 : min(_732, 1.0));
    float _743 = isnan(0.0) ? _364 : (isnan(_364) ? 0.0 : max(_364, 0.0));
    float _431 = isnan(1.0) ? _743 : (isnan(_743) ? 1.0 : min(_743, 1.0));
    float _472 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _482 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _472);
    float _483 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _472);
    float _484 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _472);
    vec4 _489 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _491 = _489.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _552 = sqrt(((_482 * _482) + (_483 * _483)) + (_484 * _484));
        float _559 = (cbMatDynParam._m0[5u].x * _552) + cbMatDynParam._m0[5u].y;
        float _754 = isnan(0.0) ? _559 : (isnan(_559) ? 0.0 : max(_559, 0.0));
        float _560 = isnan(1.0) ? _754 : (isnan(_754) ? 1.0 : min(_754, 1.0));
        float _564 = (cbMatDynParam._m0[5u].z * _552) + cbMatDynParam._m0[5u].w;
        float _765 = isnan(0.0) ? _564 : (isnan(_564) ? 0.0 : max(_564, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _765 : (isnan(_765) ? 1.0 : min(_765, 1.0))) - _560)) + _560) < ((_491 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _593;
    vec4 _514;
    float _521;
    float _522;
    float _523;
    float _524;
    float _528;
    vec4 _532;
    float _534;
    float _535;
    bool _546;
    for (;;)
    {
        _514 = cbInstanceData._m0[(_187 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _518 = (cbMtdParam._m0[0u].x * _429) * _514.x;
        float _519 = (cbMtdParam._m0[0u].y * _430) * _514.y;
        float _520 = (cbMtdParam._m0[0u].z * _431) * _514.z;
        float _776 = isnan(0.0) ? _518 : (isnan(_518) ? 0.0 : max(_518, 0.0));
        _521 = isnan(1.0) ? _776 : (isnan(_776) ? 1.0 : min(_776, 1.0));
        float _787 = isnan(0.0) ? _519 : (isnan(_519) ? 0.0 : max(_519, 0.0));
        _522 = isnan(1.0) ? _787 : (isnan(_787) ? 1.0 : min(_787, 1.0));
        float _798 = isnan(0.0) ? _520 : (isnan(_520) ? 0.0 : max(_520, 0.0));
        _523 = isnan(1.0) ? _798 : (isnan(_798) ? 1.0 : min(_798, 1.0));
        _524 = _428 * TEXCOORD_5.w;
        _528 = cbInstanceData._m0[_187 + 6u].w;
        float _529 = _491 + (-0.5);
        _532 = cbMtdParam._m0[1u];
        _534 = _532.y * _529;
        _535 = _529 * 0.999000012874603271484375;
        _546 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_546)
        {
            if ((cbInstanceData._m0[_187 + 7u].x + _535) < 0.5)
            {
                _593 = true;
                break;
            }
        }
        if ((_514.w < 1.0) && ((_514.w + _535) < 0.5))
        {
            _593 = true;
            break;
        }
        if ((_534 + 1.0) < _532.x)
        {
            _593 = true;
            break;
        }
        _593 = false;
        break;
    }
    if (_593)
    {
        discard_state = true;
    }
    bool _619 = cbMtdParam._m0[1u].z != 0.0;
    float _620 = _619 ? _528 : 0.0;
    SV_Target.x = ((_416 * 0.5) * _426) + 0.500488758087158203125;
    SV_Target.y = ((_419 * 0.5) * _426) + 0.500488758087158203125;
    SV_Target.z = ((_422 * 0.5) * _426) + 0.500488758087158203125;
    SV_Target.w = _620;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _699 : (isnan(_699) ? 1.0 : min(_699, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _619 ? _528 : _524;
    SV_Target_2.x = _521;
    SV_Target_2.y = _522;
    SV_Target_2.z = _523;
    SV_Target_2.w = _619 ? _528 : (float(floatBitsToUint(cbInstanceData._m0[_187 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _620;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _620;
    discard_exit();
}


