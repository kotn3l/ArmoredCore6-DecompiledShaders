#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1281;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _221 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _222 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _223 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _229 = inversesqrt(dot(vec3(_221, _222, _223), vec3(_221, _222, _223)));
    float _230 = _229 * _221;
    float _231 = _229 * _222;
    float _232 = _229 * _223;
    float _236 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _237 = _236 * NORMAL.x;
    float _238 = _236 * NORMAL.y;
    float _239 = _236 * NORMAL.z;
    float _243 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _244 = _243 * TANGENT.x;
    float _245 = _243 * TANGENT.y;
    float _246 = _243 * TANGENT.z;
    uint _249 = uint(roundEven(NORMAL.w)) * 13u;
    uint _254 = _249 + 1u;
    uint _258 = _249 + 2u;
    float _267 = sqrt(((cbInstanceData._m0[_254].x * cbInstanceData._m0[_254].x) + (cbInstanceData._m0[_249].x * cbInstanceData._m0[_249].x)) + (cbInstanceData._m0[_258].x * cbInstanceData._m0[_258].x));
    float _268 = _267 * TEXCOORD.z;
    float _269 = _267 * TEXCOORD.w;
    vec4 _289 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _295 = _289.x * cbMtdParam._m0[11u].x;
    float _296 = _289.y * cbMtdParam._m0[11u].y;
    float _297 = _289.z * cbMtdParam._m0[11u].z;
    vec4 _316 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _268) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _269) + cbTextureTilingScale._m0[5u].w));
    vec4 _354 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _356 = _354.x;
    float _366 = dot(vec4(_356, _354.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _383 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_356 - _366) * cbMtdParam._m0[24u].x) + _366) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3586 = isnan(0.0) ? _383 : (isnan(_383) ? 0.0 : max(_383, 0.0));
    float _384 = isnan(1.0) ? _3586 : (isnan(_3586) ? 1.0 : min(_3586, 1.0));
    float _391 = (_384 * ((_316.x * cbMtdParam._m0[12u].x) - _295)) + _295;
    float _392 = (_384 * ((_316.y * cbMtdParam._m0[12u].y) - _296)) + _296;
    float _393 = (_384 * ((_316.z * cbMtdParam._m0[12u].z) - _297)) + _297;
    vec4 _411 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _268) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _269) + cbTextureTilingScale._m0[20u].w));
    vec4 _438 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _268) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _269) + cbTextureTilingScale._m0[4u].w));
    vec4 _455 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _457 = _455.x;
    float _458 = _455.y;
    float _459 = _455.z;
    float _468 = ((_438.z - _459) * _384) + _459;
    float _471 = ((((_438.x - _457) * _384) + _457) * 2.0) + (-1.0);
    float _472 = ((((_438.y - _458) * _384) + _458) * 2.0) + (-1.0);
    float _473 = dot(vec2(_471, _472), vec2(_471, _472));
    float _3597 = isnan(0.0) ? _473 : (isnan(_473) ? 0.0 : max(_473, 0.0));
    float _478 = sqrt(1.0 - (isnan(1.0) ? _3597 : (isnan(_3597) ? 1.0 : min(_3597, 1.0))));
    float _481 = _471 + ((((_411.x * 2.0) + (-1.0)) * TEXCOORD_11.x) * cbMtdParam._m0[20u].x);
    float _482 = _472 + ((((_411.y * 2.0) + (-1.0)) * TEXCOORD_11.y) * cbMtdParam._m0[20u].x);
    float _485 = fma(_478, _237, fma(_482, _244, _481 * _230));
    float _488 = fma(_478, _238, fma(_482, _245, _481 * _231));
    float _491 = fma(_478, _239, fma(_482, _246, _481 * _232));
    float _495 = inversesqrt(dot(vec3(_485, _488, _491), vec3(_485, _488, _491)));
    vec4 _511 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _539 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _268) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _269) + cbTextureTilingScale._m0[11u].w));
    float _541 = _539.x;
    float _542 = 1.0 - _541;
    float _546 = ((_541 - _542) * cbMtdParam._m0[24u].z) + _542;
    float _548 = (cbMtdParam._m0[19u].x + dot(vec4(_495 * _485, _495 * _488, _495 * _491, 0.0), vec4(cbMtdParam._m0[27u].w, cbMtdParam._m0[28u].xy, 0.0))) - (_546 * cbMtdParam._m0[21u].z);
    float _3608 = isnan(0.0) ? _548 : (isnan(_548) ? 0.0 : max(_548, 0.0));
    float _549 = isnan(1.0) ? _3608 : (isnan(_3608) ? 1.0 : min(_3608, 1.0));
    float _551 = (-0.0) - cbMtdParam._m0[24u].y;
    float _553 = isnan(0.0) ? _551 : (isnan(_551) ? 0.0 : max(_551, 0.0));
    float _554 = isnan(1.0) ? _553 : (isnan(_553) ? 1.0 : min(_553, 1.0));
    float _561 = _549 - ((_549 * TEXCOORD_8.x) * _554);
    float _562 = _549 - ((_549 * TEXCOORD_8.y) * _554);
    float _563 = _549 - ((_549 * TEXCOORD_8.z) * _554);
    float _570 = isnan(-1.0) ? cbMtdParam._m0[24u].y : (isnan(cbMtdParam._m0[24u].y) ? (-1.0) : max(cbMtdParam._m0[24u].y, -1.0));
    float _574 = ((isnan(0.0) ? _570 : (isnan(_570) ? 0.0 : min(_570, 0.0))) * TEXCOORD_8.x) + TEXCOORD_14.x;
    float _582 = (_574 - (((_546 + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _574))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3639 = isnan(0.0) ? _582 : (isnan(_582) ? 0.0 : max(_582, 0.0));
    float _583 = isnan(1.0) ? _3639 : (isnan(_3639) ? 1.0 : min(_3639, 1.0));
    float _587 = ((_561 * (cbMtdParam._m0[17u].x - _391)) * _583) + _391;
    float _588 = ((_562 * (cbMtdParam._m0[17u].y - _392)) * _583) + _392;
    float _589 = ((_563 * (cbMtdParam._m0[17u].z - _393)) * _583) + _393;
    vec4 _601 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _268) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _269) + cbTextureTilingScale._m0[19u].w));
    float _603 = _601.x;
    float _604 = 1.0 - _603;
    float _631 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_603 - _604) * cbMtdParam._m0[24u].w) + _604) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3650 = isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : max(_631, 0.0));
    float _632 = isnan(1.0) ? _3650 : (isnan(_3650) ? 1.0 : min(_3650, 1.0));
    float _640 = ((((cbMtdParam._m0[10u].x - _587) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _632) + _587;
    float _641 = ((((cbMtdParam._m0[10u].y - _588) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _632) + _588;
    float _642 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _589)) * _632) + _589;
    float _647 = (((_411.z - _468) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _468;
    vec4 _661 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _268) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _269) + cbTextureTilingScale._m0[15u].w));
    float _668 = (_661.x * 2.0) + (-1.0);
    float _669 = (_661.y * 2.0) + (-1.0);
    float _670 = dot(vec2(_668, _669), vec2(_668, _669));
    float _3661 = isnan(0.0) ? _670 : (isnan(_670) ? 0.0 : max(_670, 0.0));
    float _679 = (((_661.z - _647) * _561) * _583) + _647;
    float _682 = ((cbMtdParam._m0[23u].y - _679) * _632) + _679;
    vec4 _701 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _268) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _269) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _707 = (_701.x * 2.0) + (-1.0);
    float _708 = (_701.y * 2.0) + (-1.0);
    float _709 = dot(vec2(_707, _708), vec2(_707, _708));
    float _3672 = isnan(0.0) ? _709 : (isnan(_709) ? 0.0 : max(_709, 0.0));
    float _729 = (((cbMtdParam._m0[21u].x * _481) + ((_668 - _481) * _561)) * _583) + _481;
    float _730 = (((cbMtdParam._m0[21u].x * _482) + ((_669 - _482) * _562)) * _583) + _482;
    float _731 = (((sqrt(1.0 - (isnan(1.0) ? _3661 : (isnan(_3661) ? 1.0 : min(_3661, 1.0)))) - _478) * _563) * _583) + _478;
    float _742 = (((_707 - _729) + (_729 * cbMtdParam._m0[22u].z)) * _632) + _729;
    float _743 = (((_708 - _730) + (_730 * cbMtdParam._m0[22u].z)) * _632) + _730;
    float _744 = ((sqrt(1.0 - (isnan(1.0) ? _3672 : (isnan(_3672) ? 1.0 : min(_3672, 1.0)))) - _731) * _632) + _731;
    float _746 = cbMtdParam._m0[22u].x + _511.w;
    float _749 = fma(_744, _237, fma(_743, _244, _742 * _230));
    float _752 = fma(_744, _238, fma(_743, _245, _742 * _231));
    float _755 = fma(_744, _239, fma(_743, _246, _742 * _232));
    float _759 = inversesqrt(dot(vec3(_749, _752, _755), vec3(_749, _752, _755)));
    float _760 = _759 * _749;
    float _761 = _759 * _752;
    float _762 = _759 * _755;
    float _3683 = isnan(0.0) ? _682 : (isnan(_682) ? 0.0 : max(_682, 0.0));
    float _763 = isnan(1.0) ? _3683 : (isnan(_3683) ? 1.0 : min(_3683, 1.0));
    float _3694 = isnan(0.0) ? _746 : (isnan(_746) ? 0.0 : max(_746, 0.0));
    float _3705 = isnan(0.0) ? _640 : (isnan(_640) ? 0.0 : max(_640, 0.0));
    float _3716 = isnan(0.0) ? _641 : (isnan(_641) ? 0.0 : max(_641, 0.0));
    float _3727 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
    float _781 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _822 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _832 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _822);
    float _833 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _822);
    float _834 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _822);
    float _838 = inversesqrt(dot(vec3(_832, _833, _834), vec3(_832, _833, _834)));
    float _839 = _832 * _838;
    float _840 = _833 * _838;
    float _841 = _834 * _838;
    float _847 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _848 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _866 = fma(_762, cbSceneParam._m0[5u].z, fma(_761, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _760));
    float _869 = fma(_762, cbSceneParam._m0[6u].z, fma(_761, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _760));
    float _872 = fma(_762, cbSceneParam._m0[7u].z, fma(_761, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _760));
    uint _886 = (_249 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _892 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3705 : (isnan(_3705) ? 1.0 : min(_3705, 1.0)))) * cbInstanceData._m0[_886].x;
    float _893 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3716 : (isnan(_3716) ? 1.0 : min(_3716, 1.0)))) * cbInstanceData._m0[_886].y;
    float _894 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3727 : (isnan(_3727) ? 1.0 : min(_3727, 1.0)))) * cbInstanceData._m0[_886].z;
    float _3738 = isnan(0.0) ? _892 : (isnan(_892) ? 0.0 : max(_892, 0.0));
    float _895 = isnan(1.0) ? _3738 : (isnan(_3738) ? 1.0 : min(_3738, 1.0));
    float _3749 = isnan(0.0) ? _893 : (isnan(_893) ? 0.0 : max(_893, 0.0));
    float _896 = isnan(1.0) ? _3749 : (isnan(_3749) ? 1.0 : min(_3749, 1.0));
    float _3760 = isnan(0.0) ? _894 : (isnan(_894) ? 0.0 : max(_894, 0.0));
    float _897 = isnan(1.0) ? _3760 : (isnan(_3760) ? 1.0 : min(_3760, 1.0));
    vec4 _906 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _847, cbSceneParam._m0[86u].y * _848));
    float _910 = ((isnan(1.0) ? _3694 : (isnan(_3694) ? 1.0 : min(_3694, 1.0))) * TEXCOORD_5.w) * _906.x;
    float _911 = dot(vec3(_760, _761, _762), vec3(_839, _840, _841));
    float _914 = _911 * 2.0;
    float _918 = (_914 * _760) - _839;
    float _919 = (_914 * _761) - _840;
    float _920 = (_914 * _762) - _841;
    float _924 = abs(dot(vec3(_839, _840, _841), vec3(_760, _761, _762)));
    float _3771 = isnan(0.0) ? _924 : (isnan(_924) ? 0.0 : max(_924, 0.0));
    float _926 = sqrt(_763);
    float _939 = exp2((_926 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3771 : (isnan(_3771) ? 1.0 : min(_3771, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_926 * 3.0));
    float _971 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _975 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _979 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1280;
    float _1282;
    float _1283;
    float _1284;
    float _1285;
    float _1286;
    float _1287;
    float _1288;
    float _1289;
    float _1290;
    float _1291;
    float _1292;
    float _1293;
    float _1294;
    float _1295;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1005 = fma(_979, cbModelParam._m0[26u].z, fma(_975, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _971));
        float _1009 = fma(_979, cbModelParam._m0[27u].z, fma(_975, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _971));
        float _1013 = fma(_979, cbModelParam._m0[28u].z, fma(_975, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _971));
        float _1038 = _971 + _760;
        float _1039 = _975 + _761;
        float _1040 = _979 + _762;
        float _1050 = fma(_1040, cbModelParam._m0[26u].z, fma(_1039, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1038)) - _1005;
        float _1051 = fma(_1040, cbModelParam._m0[27u].z, fma(_1039, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1038)) - _1009;
        float _1052 = fma(_1040, cbModelParam._m0[28u].z, fma(_1039, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1038)) - _1013;
        float _1056 = inversesqrt(dot(vec3(_1050, _1051, _1052), vec3(_1050, _1051, _1052)));
        float _1069 = ((_1056 * _1050) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1005 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1070 = ((_1056 * _1051) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1009 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1071 = ((_1056 * _1052) / cbModelParam._m0[34u].z) + ((((((_1013 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1074 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1069, _1070, _1071), 0.0);
        vec4 _1081 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1069, _1070, _1071), 0.0);
        vec4 _1088 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1069, _1070, _1071), 0.0);
        vec4 _1095 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1069, _1070, _1071), 0.0);
        float _1108 = exp2((_1074.w + (-0.5)) * 20.0) * 2.0;
        float _1109 = _1108 * (_1074.x + (-0.5));
        float _1110 = _1108 * (_1074.y + (-0.5));
        float _1111 = _1108 * (_1074.z + (-0.5));
        float _1118 = exp2((_1081.w + (-0.5)) * 20.0) * 2.0;
        float _1119 = _1118 * (_1081.x + (-0.5));
        float _1120 = _1118 * (_1081.y + (-0.5));
        float _1121 = _1118 * (_1081.z + (-0.5));
        float _1128 = exp2((_1088.w + (-0.5)) * 20.0) * 2.0;
        float _1129 = _1128 * (_1088.x + (-0.5));
        float _1130 = _1128 * (_1088.y + (-0.5));
        float _1131 = _1128 * (_1088.z + (-0.5));
        float _1138 = exp2((_1095.w + (-0.5)) * 20.0) * 2.0;
        float _1139 = _1138 * (_1095.x + (-0.5));
        float _1140 = _1138 * (_1095.y + (-0.5));
        float _1141 = _1138 * (_1095.z + (-0.5));
        float _1142 = isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0));
        float _1143 = isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0));
        float _1144 = isnan(0.0) ? _1141 : (isnan(_1141) ? 0.0 : max(_1141, 0.0));
        float _1145 = _1109 * 0.5;
        float _1146 = _1119 * 0.5;
        float _1147 = _1129 * 0.5;
        float _1148 = dot(vec3(_1145, _1146, _1147), vec3(_1145, _1146, _1147));
        float _1153 = (_1148 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1148);
        float _1162 = (dot(vec3(_760, _761, _762), vec3(_1153 * _1145, _1153 * _1146, _1153 * _1147)) + 1.0) * 0.5;
        float _3797 = isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0));
        float _1172 = sqrt(((_1146 * _1146) + (_1145 * _1145)) + (_1147 * _1147)) / (_1142 + 9.9999997473787516355514526367188e-06);
        float _3808 = isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0));
        float _1173 = isnan(1.0) ? _3808 : (isnan(_3808) ? 1.0 : min(_3808, 1.0));
        float _1174 = _1173 * 2.0;
        float _1178 = (1.0 - _1173) / (_1173 + 1.0);
        float _3819 = isnan(0.0) ? _1178 : (isnan(_1178) ? 0.0 : max(_1178, 0.0));
        float _1179 = isnan(1.0) ? _3819 : (isnan(_3819) ? 1.0 : min(_3819, 1.0));
        float _1188 = ((((1.0 - _1179) * (_1174 + 2.0)) * exp2(log2(isnan(1.0) ? _3797 : (isnan(_3797) ? 1.0 : min(_3797, 1.0))) * (_1174 + 1.0))) + _1179) * _1142;
        float _1189 = _1110 * 0.5;
        float _1190 = _1120 * 0.5;
        float _1191 = _1130 * 0.5;
        float _1192 = dot(vec3(_1189, _1190, _1191), vec3(_1189, _1190, _1191));
        float _1197 = (_1192 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1192);
        float _1205 = (dot(vec3(_760, _761, _762), vec3(_1197 * _1189, _1197 * _1190, _1197 * _1191)) + 1.0) * 0.5;
        float _3830 = isnan(0.0) ? _1205 : (isnan(_1205) ? 0.0 : max(_1205, 0.0));
        float _1214 = sqrt(((_1190 * _1190) + (_1189 * _1189)) + (_1191 * _1191)) / (_1143 + 9.9999997473787516355514526367188e-06);
        float _3841 = isnan(0.0) ? _1214 : (isnan(_1214) ? 0.0 : max(_1214, 0.0));
        float _1215 = isnan(1.0) ? _3841 : (isnan(_3841) ? 1.0 : min(_3841, 1.0));
        float _1216 = _1215 * 2.0;
        float _1220 = (1.0 - _1215) / (_1215 + 1.0);
        float _3852 = isnan(0.0) ? _1220 : (isnan(_1220) ? 0.0 : max(_1220, 0.0));
        float _1221 = isnan(1.0) ? _3852 : (isnan(_3852) ? 1.0 : min(_3852, 1.0));
        float _1230 = ((((1.0 - _1221) * (_1216 + 2.0)) * exp2(log2(isnan(1.0) ? _3830 : (isnan(_3830) ? 1.0 : min(_3830, 1.0))) * (_1216 + 1.0))) + _1221) * _1143;
        float _1231 = _1111 * 0.5;
        float _1232 = _1121 * 0.5;
        float _1233 = _1131 * 0.5;
        float _1234 = dot(vec3(_1231, _1232, _1233), vec3(_1231, _1232, _1233));
        float _1239 = (_1234 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1234);
        float _1247 = (dot(vec3(_760, _761, _762), vec3(_1239 * _1231, _1239 * _1232, _1239 * _1233)) + 1.0) * 0.5;
        float _3863 = isnan(0.0) ? _1247 : (isnan(_1247) ? 0.0 : max(_1247, 0.0));
        float _1256 = sqrt(((_1232 * _1232) + (_1231 * _1231)) + (_1233 * _1233)) / (_1144 + 9.9999997473787516355514526367188e-06);
        float _3874 = isnan(0.0) ? _1256 : (isnan(_1256) ? 0.0 : max(_1256, 0.0));
        float _1257 = isnan(1.0) ? _3874 : (isnan(_3874) ? 1.0 : min(_3874, 1.0));
        float _1258 = _1257 * 2.0;
        float _1262 = (1.0 - _1257) / (_1257 + 1.0);
        float _3885 = isnan(0.0) ? _1262 : (isnan(_1262) ? 0.0 : max(_1262, 0.0));
        float _1263 = isnan(1.0) ? _3885 : (isnan(_3885) ? 1.0 : min(_3885, 1.0));
        float _1272 = ((((1.0 - _1263) * (_1258 + 2.0)) * exp2(log2(isnan(1.0) ? _3863 : (isnan(_3863) ? 1.0 : min(_3863, 1.0))) * (_1258 + 1.0))) + _1263) * _1144;
        _1280 = _1111;
        _1282 = _1110;
        _1283 = _1109;
        _1284 = _1121;
        _1285 = _1120;
        _1286 = _1119;
        _1287 = _1131;
        _1288 = _1130;
        _1289 = _1129;
        _1290 = _1144;
        _1291 = _1143;
        _1292 = _1142;
        _1293 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1188 : (isnan(_1188) ? 0.0 : max(_1188, 0.0)));
        _1294 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0)));
        _1295 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1272 : (isnan(_1272) ? 0.0 : max(_1272, 0.0)));
    }
    else
    {
        _1280 = _1281;
        _1282 = _1281;
        _1283 = _1281;
        _1284 = _1281;
        _1285 = _1281;
        _1286 = _1281;
        _1287 = _1281;
        _1288 = _1281;
        _1289 = _1281;
        _1290 = _1281;
        _1291 = _1281;
        _1292 = _1281;
        _1293 = 0.0;
        _1294 = 0.0;
        _1295 = 0.0;
    }
    float _1589;
    float _1590;
    float _1591;
    float _1592;
    float _1593;
    float _1594;
    float _1595;
    float _1596;
    float _1597;
    float _1598;
    float _1599;
    float _1600;
    float _1601;
    float _1602;
    float _1603;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1320 = fma(_979, cbModelParam._m0[30u].z, fma(_975, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _971));
        float _1324 = fma(_979, cbModelParam._m0[31u].z, fma(_975, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _971));
        float _1328 = fma(_979, cbModelParam._m0[32u].z, fma(_975, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _971));
        float _1351 = _971 + _760;
        float _1352 = _975 + _761;
        float _1353 = _979 + _762;
        float _1363 = fma(_1353, cbModelParam._m0[30u].z, fma(_1352, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1351)) - _1320;
        float _1364 = fma(_1353, cbModelParam._m0[31u].z, fma(_1352, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1351)) - _1324;
        float _1365 = fma(_1353, cbModelParam._m0[32u].z, fma(_1352, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1351)) - _1328;
        float _1369 = inversesqrt(dot(vec3(_1363, _1364, _1365), vec3(_1363, _1364, _1365)));
        float _1382 = ((_1369 * _1363) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1320 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1383 = ((_1369 * _1364) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1324 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1384 = ((_1369 * _1365) / cbModelParam._m0[35u].z) + ((((((_1328 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1386 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1382, _1383, _1384), 0.0);
        vec4 _1393 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1382, _1383, _1384), 0.0);
        vec4 _1400 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1382, _1383, _1384), 0.0);
        vec4 _1407 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1382, _1383, _1384), 0.0);
        float _1419 = exp2((_1386.w + (-0.5)) * 20.0) * 2.0;
        float _1420 = _1419 * (_1386.x + (-0.5));
        float _1421 = _1419 * (_1386.y + (-0.5));
        float _1422 = _1419 * (_1386.z + (-0.5));
        float _1429 = exp2((_1393.w + (-0.5)) * 20.0) * 2.0;
        float _1430 = _1429 * (_1393.x + (-0.5));
        float _1431 = _1429 * (_1393.y + (-0.5));
        float _1432 = _1429 * (_1393.z + (-0.5));
        float _1439 = exp2((_1400.w + (-0.5)) * 20.0) * 2.0;
        float _1440 = _1439 * (_1400.x + (-0.5));
        float _1441 = _1439 * (_1400.y + (-0.5));
        float _1442 = _1439 * (_1400.z + (-0.5));
        float _1449 = exp2((_1407.w + (-0.5)) * 20.0) * 2.0;
        float _1450 = _1449 * (_1407.x + (-0.5));
        float _1451 = _1449 * (_1407.y + (-0.5));
        float _1452 = _1449 * (_1407.z + (-0.5));
        float _1453 = isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0));
        float _1454 = isnan(0.0) ? _1451 : (isnan(_1451) ? 0.0 : max(_1451, 0.0));
        float _1455 = isnan(0.0) ? _1452 : (isnan(_1452) ? 0.0 : max(_1452, 0.0));
        float _1456 = _1420 * 0.5;
        float _1457 = _1430 * 0.5;
        float _1458 = _1440 * 0.5;
        float _1459 = dot(vec3(_1456, _1457, _1458), vec3(_1456, _1457, _1458));
        float _1464 = (_1459 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1459);
        float _1472 = (dot(vec3(_760, _761, _762), vec3(_1464 * _1456, _1464 * _1457, _1464 * _1458)) + 1.0) * 0.5;
        float _3926 = isnan(0.0) ? _1472 : (isnan(_1472) ? 0.0 : max(_1472, 0.0));
        float _1481 = sqrt(((_1457 * _1457) + (_1456 * _1456)) + (_1458 * _1458)) / (_1453 + 9.9999997473787516355514526367188e-06);
        float _3937 = isnan(0.0) ? _1481 : (isnan(_1481) ? 0.0 : max(_1481, 0.0));
        float _1482 = isnan(1.0) ? _3937 : (isnan(_3937) ? 1.0 : min(_3937, 1.0));
        float _1483 = _1482 * 2.0;
        float _1487 = (1.0 - _1482) / (_1482 + 1.0);
        float _3948 = isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0));
        float _1488 = isnan(1.0) ? _3948 : (isnan(_3948) ? 1.0 : min(_3948, 1.0));
        float _1497 = ((((1.0 - _1488) * (_1483 + 2.0)) * exp2(log2(isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0))) * (_1483 + 1.0))) + _1488) * _1453;
        float _1498 = _1421 * 0.5;
        float _1499 = _1431 * 0.5;
        float _1500 = _1441 * 0.5;
        float _1501 = dot(vec3(_1498, _1499, _1500), vec3(_1498, _1499, _1500));
        float _1506 = (_1501 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1501);
        float _1514 = (dot(vec3(_760, _761, _762), vec3(_1506 * _1498, _1506 * _1499, _1506 * _1500)) + 1.0) * 0.5;
        float _3959 = isnan(0.0) ? _1514 : (isnan(_1514) ? 0.0 : max(_1514, 0.0));
        float _1523 = sqrt(((_1499 * _1499) + (_1498 * _1498)) + (_1500 * _1500)) / (_1454 + 9.9999997473787516355514526367188e-06);
        float _3970 = isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0));
        float _1524 = isnan(1.0) ? _3970 : (isnan(_3970) ? 1.0 : min(_3970, 1.0));
        float _1525 = _1524 * 2.0;
        float _1529 = (1.0 - _1524) / (_1524 + 1.0);
        float _3981 = isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0));
        float _1530 = isnan(1.0) ? _3981 : (isnan(_3981) ? 1.0 : min(_3981, 1.0));
        float _1539 = ((((1.0 - _1530) * (_1525 + 2.0)) * exp2(log2(isnan(1.0) ? _3959 : (isnan(_3959) ? 1.0 : min(_3959, 1.0))) * (_1525 + 1.0))) + _1530) * _1454;
        float _1540 = _1422 * 0.5;
        float _1541 = _1432 * 0.5;
        float _1542 = _1442 * 0.5;
        float _1543 = dot(vec3(_1540, _1541, _1542), vec3(_1540, _1541, _1542));
        float _1548 = (_1543 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1543);
        float _1556 = (dot(vec3(_760, _761, _762), vec3(_1548 * _1540, _1548 * _1541, _1548 * _1542)) + 1.0) * 0.5;
        float _3992 = isnan(0.0) ? _1556 : (isnan(_1556) ? 0.0 : max(_1556, 0.0));
        float _1565 = sqrt(((_1541 * _1541) + (_1540 * _1540)) + (_1542 * _1542)) / (_1455 + 9.9999997473787516355514526367188e-06);
        float _4003 = isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0));
        float _1566 = isnan(1.0) ? _4003 : (isnan(_4003) ? 1.0 : min(_4003, 1.0));
        float _1567 = _1566 * 2.0;
        float _1571 = (1.0 - _1566) / (_1566 + 1.0);
        float _4014 = isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0));
        float _1572 = isnan(1.0) ? _4014 : (isnan(_4014) ? 1.0 : min(_4014, 1.0));
        float _1581 = ((((1.0 - _1572) * (_1567 + 2.0)) * exp2(log2(isnan(1.0) ? _3992 : (isnan(_3992) ? 1.0 : min(_3992, 1.0))) * (_1567 + 1.0))) + _1572) * _1455;
        _1589 = _1422;
        _1590 = _1421;
        _1591 = _1420;
        _1592 = _1432;
        _1593 = _1431;
        _1594 = _1430;
        _1595 = _1442;
        _1596 = _1441;
        _1597 = _1440;
        _1598 = _1455;
        _1599 = _1454;
        _1600 = _1453;
        _1601 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1497 : (isnan(_1497) ? 0.0 : max(_1497, 0.0)));
        _1602 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1539 : (isnan(_1539) ? 0.0 : max(_1539, 0.0)));
        _1603 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1581 : (isnan(_1581) ? 0.0 : max(_1581, 0.0)));
    }
    else
    {
        _1589 = _1281;
        _1590 = _1281;
        _1591 = _1281;
        _1592 = _1281;
        _1593 = _1281;
        _1594 = _1281;
        _1595 = _1281;
        _1596 = _1281;
        _1597 = _1281;
        _1598 = _1281;
        _1599 = _1281;
        _1600 = _1281;
        _1601 = 0.0;
        _1602 = 0.0;
        _1603 = 0.0;
    }
    float _1613 = (cbModelParam._m0[1u].x * (_1601 - _1293)) + _1293;
    float _1614 = (cbModelParam._m0[1u].x * (_1602 - _1294)) + _1294;
    float _1615 = (cbModelParam._m0[1u].x * (_1603 - _1295)) + _1295;
    float _1636 = fma(_1615, cbSceneParam._m0[89u].z, fma(_1614, cbSceneParam._m0[89u].y, _1613 * cbSceneParam._m0[89u].x));
    float _1639 = fma(_1615, cbSceneParam._m0[90u].z, fma(_1614, cbSceneParam._m0[90u].y, _1613 * cbSceneParam._m0[90u].x));
    float _1642 = fma(_1615, cbSceneParam._m0[91u].z, fma(_1614, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1613));
    float _1657 = _918 * 0.5;
    float _1658 = _919 * 0.5;
    float _1659 = _920 * 0.5;
    float _1660 = dot(vec4(_1657, _1658, _1659, 1.0), vec4(_1591, _1594, _1597, _1600));
    float _1663 = dot(vec4(_1657, _1658, _1659, 1.0), vec4(_1590, _1593, _1596, _1599));
    float _1666 = dot(vec4(_1657, _1658, _1659, 1.0), vec4(_1589, _1592, _1595, _1598));
    float _1700;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1673 = dot(vec4(_1657, _1658, _1659, 1.0), vec4(_1280, _1284, _1287, _1290));
        float _1677 = dot(vec4(_1657, _1658, _1659, 1.0), vec4(_1282, _1285, _1288, _1291));
        float _1681 = dot(vec4(_1657, _1658, _1659, 1.0), vec4(_1283, _1286, _1289, _1292));
        float _1688 = dot(vec4(cbModelParam._m0[39u]), vec4(_1657, _1658, _1659, 1.0));
        _1700 = dot(vec3(isnan(0.0) ? _1681 : (isnan(_1681) ? 0.0 : max(_1681, 0.0)), isnan(0.0) ? _1677 : (isnan(_1677) ? 0.0 : max(_1677, 0.0)), isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1688) ? 0.0 : (isnan(0.0) ? _1688 : max(0.0, _1688))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1700 = 1.0;
    }
    float _1711;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1702 = dot(vec4(cbModelParam._m0[40u]), vec4(_1657, _1658, _1659, 1.0));
        _1711 = dot(vec3(isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0)), isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0)), isnan(0.0) ? _1666 : (isnan(_1666) ? 0.0 : max(_1666, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1702) ? 0.0 : (isnan(0.0) ? _1702 : max(0.0, _1702))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1711 = 1.0;
    }
    float _1715 = (_1711 * cbModelParam._m0[1u].x) + (_1700 * (1.0 - cbModelParam._m0[1u].x));
    float _1725 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _763);
    float _1726 = isnan(_1725) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1725 : min(cbModelParam._m0[25u].z, _1725));
    float _1807;
    float _1809;
    float _1811;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1774 = fma(_979, cbModelParam._m0[13u].z, fma(_975, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _971)) + cbModelParam._m0[13u].w;
        float _1778 = fma(_979, cbModelParam._m0[14u].z, fma(_975, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _971)) + cbModelParam._m0[14u].w;
        float _1782 = fma(_979, cbModelParam._m0[15u].z, fma(_975, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _971)) + cbModelParam._m0[15u].w;
        float _1785 = fma(_920, cbModelParam._m0[13u].z, fma(_919, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _918));
        float _1788 = fma(_920, cbModelParam._m0[14u].z, fma(_919, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _918));
        float _1791 = fma(_920, cbModelParam._m0[15u].z, fma(_919, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _918));
        float _1819;
        if (_1785 > 0.0)
        {
            _1819 = abs((1.0 - _1774) / _1785);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1785 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1774 + 1.0) / _1785);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1819 = frontier_phi_14_12_ladder;
        }
        float _2020;
        if (_1788 > 0.0)
        {
            _2020 = abs((1.0 - _1778) / _1788);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1788 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1778 + 1.0) / _1788);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2020 = frontier_phi_23_19_ladder;
        }
        float _2263;
        if (_1791 > 0.0)
        {
            _2263 = abs((1.0 - _1782) / _1791);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1791 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1782 + 1.0) / _1791);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2263 = frontier_phi_35_30_ladder;
        }
        float _2265 = isnan(_2020) ? _1819 : (isnan(_1819) ? _2020 : min(_1819, _2020));
        float _2266 = isnan(_2263) ? _2265 : (isnan(_2265) ? _2263 : min(_2265, _2263));
        float _2270 = (_2266 * _1785) + _1774;
        float _2271 = (_2266 * _1788) + _1778;
        float _2272 = (_2266 * _1791) + _1782;
        float _2273 = _2266 * 9.9999997473787516355514526367188e-05;
        float _2275 = (-1.0) - _2273;
        float _2277 = _2273 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2272 > _2277) || ((_2272 < _2275) || ((_2271 > _2277) || ((_2271 < _2275) || ((_2270 < _2275) || (_2270 > _2277))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2396 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2272, cbModelParam._m0[9u].z, fma(_2271, cbModelParam._m0[9u].y, _2270 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2272, cbModelParam._m0[10u].z, fma(_2271, cbModelParam._m0[10u].y, _2270 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2272, cbModelParam._m0[11u].z, fma(_2271, cbModelParam._m0[11u].y, _2270 * cbModelParam._m0[11u].x))), _1726);
            frontier_phi_13_35_ladder = _2396.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2396.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2396.x * cbModelParam._m0[1u].y;
        }
        _1807 = frontier_phi_13_35_ladder_2;
        _1809 = frontier_phi_13_35_ladder_1;
        _1811 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1795 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_918, _919, _920), _1726);
        _1807 = _1795.x * cbModelParam._m0[1u].y;
        _1809 = _1795.y * cbModelParam._m0[1u].y;
        _1811 = _1795.z * cbModelParam._m0[1u].y;
    }
    float _1815 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _763);
    float _1816 = isnan(_1815) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1815 : min(cbModelParam._m0[25u].w, _1815));
    float _1906;
    float _1908;
    float _1910;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1870 = fma(_979, cbModelParam._m0[21u].z, fma(_975, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _971)) + cbModelParam._m0[21u].w;
        float _1874 = fma(_979, cbModelParam._m0[22u].z, fma(_975, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _971)) + cbModelParam._m0[22u].w;
        float _1878 = fma(_979, cbModelParam._m0[23u].z, fma(_975, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _971)) + cbModelParam._m0[23u].w;
        float _1881 = fma(_920, cbModelParam._m0[21u].z, fma(_919, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _918));
        float _1884 = fma(_920, cbModelParam._m0[22u].z, fma(_919, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _918));
        float _1887 = fma(_920, cbModelParam._m0[23u].z, fma(_919, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _918));
        float _2025;
        if (_1881 > 0.0)
        {
            _2025 = abs((1.0 - _1870) / _1881);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1881 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1870 + 1.0) / _1881);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2025 = frontier_phi_25_21_ladder;
        }
        float _2290;
        if (_1884 > 0.0)
        {
            _2290 = abs((1.0 - _1874) / _1884);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1884 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1874 + 1.0) / _1884);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2290 = frontier_phi_37_32_ladder;
        }
        float _2495;
        if (_1887 > 0.0)
        {
            _2495 = abs((1.0 - _1878) / _1887);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_1887 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_1878 + 1.0) / _1887);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2495 = frontier_phi_46_43_ladder;
        }
        float _2497 = isnan(_2290) ? _2025 : (isnan(_2025) ? _2290 : min(_2025, _2290));
        float _2498 = isnan(_2495) ? _2497 : (isnan(_2497) ? _2495 : min(_2497, _2495));
        float _2502 = (_2498 * _1881) + _1870;
        float _2503 = (_2498 * _1884) + _1874;
        float _2504 = (_2498 * _1887) + _1878;
        float _2505 = _2498 * 9.9999997473787516355514526367188e-05;
        float _2506 = (-1.0) - _2505;
        float _2508 = _2505 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2504 > _2508) || ((_2504 < _2506) || ((_2503 > _2508) || ((_2503 < _2506) || ((_2502 < _2506) || (_2502 > _2508))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2703 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2504, cbModelParam._m0[17u].z, fma(_2503, cbModelParam._m0[17u].y, _2502 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2504, cbModelParam._m0[18u].z, fma(_2503, cbModelParam._m0[18u].y, _2502 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2504, cbModelParam._m0[19u].z, fma(_2503, cbModelParam._m0[19u].y, _2502 * cbModelParam._m0[19u].x))), _1816);
            frontier_phi_22_46_ladder = _2703.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2703.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2703.x * cbModelParam._m0[1u].z;
        }
        _1906 = frontier_phi_22_46_ladder_2;
        _1908 = frontier_phi_22_46_ladder_1;
        _1910 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _1890 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_918, _919, _920), _1816);
        _1906 = _1890.x * cbModelParam._m0[1u].z;
        _1908 = _1890.y * cbModelParam._m0[1u].z;
        _1910 = _1890.z * cbModelParam._m0[1u].z;
    }
    float _1922 = ((((1.0 - _939) * ((_926 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_939 * _926)) * _910;
    float _1923 = _1922 * ((cbModelParam._m0[1u].w * (_1906 - _1807)) + _1807);
    float _1924 = _1922 * ((cbModelParam._m0[1u].w * (_1908 - _1809)) + _1809);
    float _1925 = _1922 * ((cbModelParam._m0[1u].w * (_1910 - _1811)) + _1811);
    float _1928 = fma(_1925, cbSceneParam._m0[89u].z, fma(_1924, cbSceneParam._m0[89u].y, _1923 * cbSceneParam._m0[89u].x));
    float _1931 = fma(_1925, cbSceneParam._m0[90u].z, fma(_1924, cbSceneParam._m0[90u].y, _1923 * cbSceneParam._m0[90u].x));
    float _1934 = fma(_1925, cbSceneParam._m0[91u].z, fma(_1924, cbSceneParam._m0[91u].y, _1923 * cbSceneParam._m0[91u].x));
    uvec4 _1944 = floatBitsToUint(cbInstanceData._m0[_249 + 5u]);
    uint _1946 = _1944.x * 14u;
    uint _1947 = _1946 + 13u;
    float _1954 = _910 + (-1.0);
    float _1959 = (cbLight._m0[_1947].x * _1954) + 1.0;
    float _1960 = (cbLight._m0[_1947].y * _1954) + 1.0;
    float _1961 = (cbLight._m0[_1947].z * _1954) + 1.0;
    float _1962 = (cbLight._m0[_1947].w * _1954) + 1.0;
    uint _1963 = _1946 + 5u;
    float _1969 = isnan(1.0) ? _1960 : (isnan(_1960) ? 1.0 : min(_1960, 1.0));
    uint _1973 = _1946 + 4u;
    float _1979 = isnan(1.0) ? _1959 : (isnan(_1959) ? 1.0 : min(_1959, 1.0));
    uint _1983 = _1946 | 1u;
    float _1994 = dot(vec3(cbLight._m0[_1946].xyz), vec3(_760, _761, _762));
    float _1997 = dot(vec3(cbLight._m0[_1983].xyz), vec3(_760, _761, _762));
    float _4150 = isnan(0.0) ? _1994 : (isnan(_1994) ? 0.0 : max(_1994, 0.0));
    float _4161 = isnan(0.0) ? _1997 : (isnan(_1997) ? 0.0 : max(_1997, 0.0));
    float _2002 = (isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0))) * 0.3183098733425140380859375;
    float _2004 = (isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0))) * 0.3183098733425140380859375;
    float _2011 = ((cbLight._m0[_1963].x * _1969) * _2004) + ((cbLight._m0[_1973].x * _1979) * _2002);
    float _2012 = ((_1969 * cbLight._m0[_1963].y) * _2004) + ((_1979 * cbLight._m0[_1973].y) * _2002);
    float _2013 = ((_1969 * cbLight._m0[_1963].z) * _2004) + ((_1979 * cbLight._m0[_1973].z) * _2002);
    uvec4 _2017 = floatBitsToUint(cbLight._m0[_1946 + 12u]);
    bool _2019 = _2017.x == 0u;
    float _2030;
    float _2032;
    float _2034;
    if (_2019)
    {
        _2030 = _2011;
        _2032 = _2012;
        _2034 = _2013;
    }
    else
    {
        uint _2038 = _1946 + 6u;
        float _2054 = (dot(vec3(cbLight._m0[_1946 + 2u].xyz), vec3(_760, _761, _762)) * 0.5) + 0.5;
        float _2055 = _2054 * _2054;
        float _4172 = isnan(0.0) ? _2055 : (isnan(_2055) ? 0.0 : max(_2055, 0.0));
        float _2056 = isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0));
        float _2057 = isnan(1.0) ? _1961 : (isnan(_1961) ? 1.0 : min(_1961, 1.0));
        _2030 = (((cbLight._m0[_2038].x * 0.3183098733425140380859375) * _2056) * _2057) + _2011;
        _2032 = (((cbLight._m0[_2038].y * 0.3183098733425140380859375) * _2056) * _2057) + _2012;
        _2034 = (((cbLight._m0[_2038].z * 0.3183098733425140380859375) * _2056) * _2057) + _2013;
    }
    bool _2037 = _2017.y == 0u;
    float _2075;
    float _2077;
    float _2079;
    if (_2037)
    {
        _2075 = _2030;
        _2077 = _2032;
        _2079 = _2034;
    }
    else
    {
        uint _2234 = _1946 + 7u;
        float _2250 = (dot(vec3(cbLight._m0[_1946 + 3u].xyz), vec3(_760, _761, _762)) * 0.5) + 0.5;
        float _2251 = _2250 * _2250;
        float _4188 = isnan(0.0) ? _2251 : (isnan(_2251) ? 0.0 : max(_2251, 0.0));
        float _2252 = isnan(1.0) ? _4188 : (isnan(_4188) ? 1.0 : min(_4188, 1.0));
        float _2253 = isnan(1.0) ? _1962 : (isnan(_1962) ? 1.0 : min(_1962, 1.0));
        _2075 = (((cbLight._m0[_2234].x * 0.3183098733425140380859375) * _2252) * _2253) + _2030;
        _2077 = (((cbLight._m0[_2234].y * 0.3183098733425140380859375) * _2252) * _2253) + _2032;
        _2079 = (((cbLight._m0[_2234].z * 0.3183098733425140380859375) * _2252) * _2253) + _2034;
    }
    uint _2082 = _1946 + 8u;
    float _2095 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1946].w)) * _763) * 0.949999988079071044921875);
    float _2096 = _2095 * _2095;
    float _2097 = cbLight._m0[_1946].x + _839;
    float _2098 = cbLight._m0[_1946].y + _840;
    float _2099 = cbLight._m0[_1946].z + _841;
    float _2103 = inversesqrt(dot(vec3(_2097, _2098, _2099), vec3(_2097, _2098, _2099)));
    float _2104 = _2103 * _2097;
    float _2105 = _2103 * _2098;
    float _2106 = _2103 * _2099;
    float _2107 = dot(vec3(_760, _761, _762), vec3(cbLight._m0[_1946].xyz));
    float _4204 = isnan(0.0) ? _2107 : (isnan(_2107) ? 0.0 : max(_2107, 0.0));
    float _2110 = isnan(1.0) ? _4204 : (isnan(_4204) ? 1.0 : min(_4204, 1.0));
    float _4215 = isnan(0.0) ? _911 : (isnan(_911) ? 0.0 : max(_911, 0.0));
    float _2111 = isnan(1.0) ? _4215 : (isnan(_4215) ? 1.0 : min(_4215, 1.0));
    float _2112 = dot(vec3(_760, _761, _762), vec3(_2104, _2105, _2106));
    float _4226 = isnan(0.0) ? _2112 : (isnan(_2112) ? 0.0 : max(_2112, 0.0));
    float _2115 = isnan(1.0) ? _4226 : (isnan(_4226) ? 1.0 : min(_4226, 1.0));
    float _2116 = dot(vec3(cbLight._m0[_1946].xyz), vec3(_2104, _2105, _2106));
    float _4237 = isnan(0.0) ? _2116 : (isnan(_2116) ? 0.0 : max(_2116, 0.0));
    float _2120 = _2096 * _2096;
    float _2124 = ((_2115 * _2115) * (_2120 + (-1.0))) + 1.0;
    float _2135 = (exp2(log2(1.0 - (isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2136 = 1.0 - _2096;
    float _2147 = (0.5 / (((_2111 * ((_2110 * _2136) + _2096)) + 9.9999999392252902907785028219223e-09) + (((_2111 * _2136) + _2096) * _2110))) * _2110;
    float _4248 = isnan(0.0) ? _2147 : (isnan(_2147) ? 0.0 : max(_2147, 0.0));
    float _2149 = (isnan(1.0) ? _4248 : (isnan(_4248) ? 1.0 : min(_4248, 1.0))) * (_2120 / ((_2124 * _2124) * 3.141590118408203125));
    uint _2160 = _1946 + 9u;
    float _2171 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1983].w)) * _763) * 0.949999988079071044921875);
    float _2172 = _2171 * _2171;
    float _2173 = cbLight._m0[_1983].x + _839;
    float _2174 = cbLight._m0[_1983].y + _840;
    float _2175 = cbLight._m0[_1983].z + _841;
    float _2179 = inversesqrt(dot(vec3(_2173, _2174, _2175), vec3(_2173, _2174, _2175)));
    float _2180 = _2179 * _2173;
    float _2181 = _2179 * _2174;
    float _2182 = _2179 * _2175;
    float _2183 = dot(vec3(_760, _761, _762), vec3(cbLight._m0[_1983].xyz));
    float _4259 = isnan(0.0) ? _2183 : (isnan(_2183) ? 0.0 : max(_2183, 0.0));
    float _2186 = isnan(1.0) ? _4259 : (isnan(_4259) ? 1.0 : min(_4259, 1.0));
    float _2187 = dot(vec3(_760, _761, _762), vec3(_2180, _2181, _2182));
    float _4270 = isnan(0.0) ? _2187 : (isnan(_2187) ? 0.0 : max(_2187, 0.0));
    float _2190 = isnan(1.0) ? _4270 : (isnan(_4270) ? 1.0 : min(_4270, 1.0));
    float _2191 = dot(vec3(cbLight._m0[_1983].xyz), vec3(_2180, _2181, _2182));
    float _4281 = isnan(0.0) ? _2191 : (isnan(_2191) ? 0.0 : max(_2191, 0.0));
    float _2195 = _2172 * _2172;
    float _2199 = ((_2190 * _2190) * (_2195 + (-1.0))) + 1.0;
    float _2208 = (exp2(log2(1.0 - (isnan(1.0) ? _4281 : (isnan(_4281) ? 1.0 : min(_4281, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2209 = 1.0 - _2172;
    float _2219 = (0.5 / (((_2111 * ((_2186 * _2209) + _2172)) + 9.9999999392252902907785028219223e-09) + (((_2111 * _2209) + _2172) * _2186))) * _2186;
    float _4292 = isnan(0.0) ? _2219 : (isnan(_2219) ? 0.0 : max(_2219, 0.0));
    float _2221 = (isnan(1.0) ? _4292 : (isnan(_4292) ? 1.0 : min(_4292, 1.0))) * (_2195 / ((_2199 * _2199) * 3.141590118408203125));
    float _2231 = (((_2208 * cbLight._m0[_2160].x) * _2221) * _1969) + (((_2135 * cbLight._m0[_2082].x) * _2149) * _1979);
    float _2232 = (((_2208 * cbLight._m0[_2160].y) * _2221) * _1969) + (((_2135 * cbLight._m0[_2082].y) * _2149) * _1979);
    float _2233 = (((_2208 * cbLight._m0[_2160].z) * _2221) * _1969) + (((_2135 * cbLight._m0[_2082].z) * _2149) * _1979);
    float _2295;
    float _2297;
    float _2299;
    if (_2019)
    {
        _2295 = _2231;
        _2297 = _2232;
        _2299 = _2233;
    }
    else
    {
        uint _2301 = _1946 + 2u;
        uint _2305 = _1946 + 10u;
        float _2319 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2301].w)) * _763) * 0.949999988079071044921875);
        float _2320 = _2319 * _2319;
        float _2321 = cbLight._m0[_2301].x + _839;
        float _2322 = cbLight._m0[_2301].y + _840;
        float _2323 = cbLight._m0[_2301].z + _841;
        float _2327 = inversesqrt(dot(vec3(_2321, _2322, _2323), vec3(_2321, _2322, _2323)));
        float _2328 = _2327 * _2321;
        float _2329 = _2327 * _2322;
        float _2330 = _2327 * _2323;
        float _2331 = dot(vec3(_760, _761, _762), vec3(cbLight._m0[_2301].xyz));
        float _4303 = isnan(0.0) ? _2331 : (isnan(_2331) ? 0.0 : max(_2331, 0.0));
        float _2334 = isnan(1.0) ? _4303 : (isnan(_4303) ? 1.0 : min(_4303, 1.0));
        float _2335 = dot(vec3(_760, _761, _762), vec3(_2328, _2329, _2330));
        float _4314 = isnan(0.0) ? _2335 : (isnan(_2335) ? 0.0 : max(_2335, 0.0));
        float _2338 = isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0));
        float _2339 = dot(vec3(cbLight._m0[_2301].xyz), vec3(_2328, _2329, _2330));
        float _4325 = isnan(0.0) ? _2339 : (isnan(_2339) ? 0.0 : max(_2339, 0.0));
        float _2343 = _2320 * _2320;
        float _2347 = ((_2338 * _2338) * (_2343 + (-1.0))) + 1.0;
        float _2356 = (exp2(log2(1.0 - (isnan(1.0) ? _4325 : (isnan(_4325) ? 1.0 : min(_4325, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2357 = 1.0 - _2320;
        float _2367 = (0.5 / (((_2111 * ((_2334 * _2357) + _2320)) + 9.9999999392252902907785028219223e-09) + (((_2111 * _2357) + _2320) * _2334))) * _2334;
        float _4336 = isnan(0.0) ? _2367 : (isnan(_2367) ? 0.0 : max(_2367, 0.0));
        float _2369 = (isnan(1.0) ? _4336 : (isnan(_4336) ? 1.0 : min(_4336, 1.0))) * (_2343 / ((_2347 * _2347) * 3.141590118408203125));
        float _2370 = isnan(1.0) ? _1961 : (isnan(_1961) ? 1.0 : min(_1961, 1.0));
        _2295 = (((_2356 * cbLight._m0[_2305].x) * _2369) * _2370) + _2231;
        _2297 = (((_2356 * cbLight._m0[_2305].y) * _2369) * _2370) + _2232;
        _2299 = (((_2356 * cbLight._m0[_2305].z) * _2369) * _2370) + _2233;
    }
    float _2405;
    float _2407;
    float _2409;
    if (_2037)
    {
        _2405 = _2295;
        _2407 = _2297;
        _2409 = _2299;
    }
    else
    {
        uint _2416 = _1946 + 3u;
        uint _2420 = _1946 + 11u;
        float _2434 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2416].w)) * _763) * 0.949999988079071044921875);
        float _2435 = _2434 * _2434;
        float _2436 = cbLight._m0[_2416].x + _839;
        float _2437 = cbLight._m0[_2416].y + _840;
        float _2438 = cbLight._m0[_2416].z + _841;
        float _2442 = inversesqrt(dot(vec3(_2436, _2437, _2438), vec3(_2436, _2437, _2438)));
        float _2443 = _2442 * _2436;
        float _2444 = _2442 * _2437;
        float _2445 = _2442 * _2438;
        float _2446 = dot(vec3(_760, _761, _762), vec3(cbLight._m0[_2416].xyz));
        float _4352 = isnan(0.0) ? _2446 : (isnan(_2446) ? 0.0 : max(_2446, 0.0));
        float _2449 = isnan(1.0) ? _4352 : (isnan(_4352) ? 1.0 : min(_4352, 1.0));
        float _2450 = dot(vec3(_760, _761, _762), vec3(_2443, _2444, _2445));
        float _4363 = isnan(0.0) ? _2450 : (isnan(_2450) ? 0.0 : max(_2450, 0.0));
        float _2453 = isnan(1.0) ? _4363 : (isnan(_4363) ? 1.0 : min(_4363, 1.0));
        float _2454 = dot(vec3(cbLight._m0[_2416].xyz), vec3(_2443, _2444, _2445));
        float _4374 = isnan(0.0) ? _2454 : (isnan(_2454) ? 0.0 : max(_2454, 0.0));
        float _2458 = _2435 * _2435;
        float _2462 = ((_2453 * _2453) * (_2458 + (-1.0))) + 1.0;
        float _2471 = (exp2(log2(1.0 - (isnan(1.0) ? _4374 : (isnan(_4374) ? 1.0 : min(_4374, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2472 = 1.0 - _2435;
        float _2482 = (0.5 / (((_2111 * ((_2449 * _2472) + _2435)) + 9.9999999392252902907785028219223e-09) + (((_2111 * _2472) + _2435) * _2449))) * _2449;
        float _4385 = isnan(0.0) ? _2482 : (isnan(_2482) ? 0.0 : max(_2482, 0.0));
        float _2484 = (isnan(1.0) ? _4385 : (isnan(_4385) ? 1.0 : min(_4385, 1.0))) * (_2458 / ((_2462 * _2462) * 3.141590118408203125));
        float _2485 = isnan(1.0) ? _1962 : (isnan(_1962) ? 1.0 : min(_1962, 1.0));
        _2405 = (((_2471 * cbLight._m0[_2420].x) * _2484) * _2485) + _2295;
        _2407 = (((_2471 * cbLight._m0[_2420].y) * _2484) * _2485) + _2297;
        _2409 = (((_2471 * cbLight._m0[_2420].z) * _2484) * _2485) + _2299;
    }
    float _2620;
    float _2622;
    float _2624;
    float _2626;
    float _2628;
    float _2630;
    if (_1944.y == 0u)
    {
        float _2560 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2561 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2560;
        float _2562 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2560;
        float _2563 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2560;
        uvec4 _2575 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2576 = _2575.x;
        uint _2587 = uint((float(_2575.y) * floor(float(uint(cbSceneParam._m0[85u].y * _848) / _2576))) + floor(float(uint(cbSceneParam._m0[85u].x * _847) / _2576)));
        float _2597 = (log2(_2563 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2598 = isnan(0.0) ? _2597 : (isnan(_2597) ? 0.0 : max(_2597, 0.0));
        uint _2601 = uint(isnan(14.0) ? _2598 : (isnan(_2598) ? 14.0 : min(_2598, 14.0)));
        uvec4 _2606 = texelFetch(g_lightClusterGridBuffer, int(((_2601 << 2u) + (_2587 << 6u)) >> 2u));
        uint _2607 = _2606.x;
        uint _2608 = _2575.z;
        float _2708;
        float _2710;
        float _2712;
        float _2714;
        float _2716;
        float _2718;
        if (((((1u << ((_2608 >> 4u) & 15u)) + 4294967295u) & _2607) == 0u) || ((_2608 & 240u) == 0u))
        {
            _2708 = 0.0;
            _2710 = 0.0;
            _2712 = 0.0;
            _2714 = 0.0;
            _2716 = 0.0;
            _2718 = 0.0;
        }
        else
        {
            float _2709;
            float _2711;
            float _2713;
            float _2715;
            float _2717;
            float _2719;
            float _2852 = 0.0;
            float _2853 = 0.0;
            float _2854 = 0.0;
            float _2855 = 0.0;
            float _2856 = 0.0;
            float _2857 = 0.0;
            uint _2858 = 0u;
            uint _2867;
            bool _2868;
            for (;;)
            {
                _2867 = texelFetch(g_lightClassification, int((((_2601 << 5u) + (_2587 << 9u)) + (_2858 << 2u)) >> 2u)).x;
                _2868 = _2867 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_2868)
                {
                    frontier_phi_61_pred = _2852;
                    frontier_phi_61_pred_1 = _2857;
                    frontier_phi_61_pred_2 = _2856;
                    frontier_phi_61_pred_3 = _2855;
                    frontier_phi_61_pred_4 = _2854;
                    frontier_phi_61_pred_5 = _2853;
                }
                else
                {
                    float _2976;
                    float _2977;
                    float _2978;
                    float _2979;
                    float _2980;
                    float _2981;
                    uint _2982;
                    _2976 = _2852;
                    _2977 = _2853;
                    _2978 = _2854;
                    _2979 = _2855;
                    _2980 = _2856;
                    _2981 = _2857;
                    _2982 = _2867;
                    float _2908;
                    float _2909;
                    float _2910;
                    float _2911;
                    float _2912;
                    float _2913;
                    for (;;)
                    {
                        uint _2986 = uint(findLSB(_2982)) + (_2858 << 5u);
                        uint _2983 = (_2982 + 4294967295u) & _2982;
                        uint _2988 = _2986 * 48u;
                        vec4 _3002 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2988)).x, texelFetch(g_PointLightRenderingBuffer, int(_2988 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2988 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2988 + 3u)).x));
                        uint _3008 = (_2986 * 48u) + 4u;
                        vec4 _3021 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3008)).x, texelFetch(g_PointLightRenderingBuffer, int(_3008 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3008 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3008 + 3u)).x));
                        uint _3027 = (_2986 * 48u) + 8u;
                        vec3 _3038 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3027)).x, texelFetch(g_PointLightRenderingBuffer, int(_3027 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3027 + 2u)).x));
                        float _3042 = _3002.x - _2561;
                        float _3043 = _3002.y - _2562;
                        float _3044 = _3002.z - _2563;
                        float _3045 = dot(vec3(_3042, _3043, _3044), vec3(_3042, _3043, _3044));
                        float _3048 = inversesqrt(_3045);
                        float _3049 = _3048 * _3042;
                        float _3050 = _3048 * _3043;
                        float _3051 = _3048 * _3044;
                        float _3052 = dot(vec3(_866, _869, _872), vec3(_3049, _3050, _3051));
                        float _3057 = 1.0 - (_3045 * _3002.w);
                        float _4411 = isnan(0.0) ? _3057 : (isnan(_3057) ? 0.0 : max(_3057, 0.0));
                        float _3058 = isnan(1.0) ? _4411 : (isnan(_4411) ? 1.0 : min(_4411, 1.0));
                        float _3059 = sqrt(_3045) * _3021.w;
                        float _3062 = 1.39999997615814208984375 / (_3059 + 1.39999997615814208984375);
                        float _3063 = _3062 * _3062;
                        float _3066 = ((1.0 - _3063) * _3052) + _3063;
                        float _3069 = _3059 * _3059;
                        float _3073 = ((isnan(0.0) ? _3066 : (isnan(_3066) ? 0.0 : max(_3066, 0.0))) * _3058) / ((_3069 * 0.699999988079071044921875) + 1.0);
                        float _3077 = (-0.0) - _2561;
                        float _3078 = (-0.0) - _2562;
                        float _3079 = (-0.0) - _2563;
                        float _3083 = inversesqrt(dot(vec3(_3077, _3078, _3079), vec3(_3077, _3078, _3079)));
                        float _3084 = _3083 * _3077;
                        float _3085 = _3083 * _3078;
                        float _3086 = _3083 * _3079;
                        float _3094 = exp2(log2(1.0 / ((_3069 * 3.5) + 5.0)) * 0.25);
                        float _3095 = 1.0 - _926;
                        float _3102 = sqrt(1.0 - ((1.0 - (_3095 * _3095)) * (1.0 - (_3094 * _3094))));
                        float _3103 = _3102 * _3102;
                        float _3104 = _3103 * _3103;
                        float _3105 = _3084 + _3049;
                        float _3106 = _3085 + _3050;
                        float _3107 = _3086 + _3051;
                        float _3111 = inversesqrt(dot(vec3(_3105, _3106, _3107), vec3(_3105, _3106, _3107)));
                        float _3115 = dot(vec3(_866, _869, _872), vec3(_3084, _3085, _3086));
                        float _4427 = isnan(0.0) ? _3115 : (isnan(_3115) ? 0.0 : max(_3115, 0.0));
                        float _3118 = isnan(1.0) ? _4427 : (isnan(_4427) ? 1.0 : min(_4427, 1.0));
                        float _3119 = dot(vec3(_866, _869, _872), vec3(_3111 * _3105, _3111 * _3106, _3111 * _3107));
                        float _4438 = isnan(0.0) ? _3119 : (isnan(_3119) ? 0.0 : max(_3119, 0.0));
                        float _3122 = isnan(1.0) ? _4438 : (isnan(_4438) ? 1.0 : min(_4438, 1.0));
                        float _3126 = ((_3122 * _3122) * (_3104 + (-1.0))) + 1.0;
                        float _3127 = _3062 * _3103;
                        float _3128 = _3127 * _3127;
                        float _3131 = ((1.0 - _3128) * _3052) + _3128;
                        float _4449 = isnan(0.0) ? _3131 : (isnan(_3131) ? 0.0 : max(_3131, 0.0));
                        float _3132 = isnan(1.0) ? _4449 : (isnan(_4449) ? 1.0 : min(_4449, 1.0));
                        float _3133 = 1.0 - _3103;
                        float _3143 = (0.5 / (((_3132 * ((_3118 * _3133) + _3103)) + 9.9999999392252902907785028219223e-09) + (((_3132 * _3133) + _3103) * _3118))) * _3132;
                        float _4460 = isnan(0.0) ? _3143 : (isnan(_3143) ? 0.0 : max(_3143, 0.0));
                        float _3154 = (((_3104 * 3.1415927410125732421875) * (isnan(1.0) ? _4460 : (isnan(_4460) ? 1.0 : min(_4460, 1.0)))) / ((_3126 * _3126) * ((_3069 * 2.1991131305694580078125) + 3.141590118408203125))) * _3058;
                        _2911 = (_3073 * _3021.x) + _2979;
                        _2912 = (_3073 * _3021.y) + _2980;
                        _2913 = (_3073 * _3021.z) + _2981;
                        _2908 = (_3154 * _3038.x) + _2976;
                        _2909 = (_3154 * _3038.y) + _2977;
                        _2910 = (_3154 * _3038.z) + _2978;
                        if (_2983 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2976 = _2908;
                            _2977 = _2909;
                            _2978 = _2910;
                            _2979 = _2911;
                            _2980 = _2912;
                            _2981 = _2913;
                            _2982 = _2983;
                        }
                    }
                    frontier_phi_61_pred = _2908;
                    frontier_phi_61_pred_1 = _2913;
                    frontier_phi_61_pred_2 = _2912;
                    frontier_phi_61_pred_3 = _2911;
                    frontier_phi_61_pred_4 = _2910;
                    frontier_phi_61_pred_5 = _2909;
                }
                _2709 = frontier_phi_61_pred;
                _2719 = frontier_phi_61_pred_1;
                _2717 = frontier_phi_61_pred_2;
                _2715 = frontier_phi_61_pred_3;
                _2713 = frontier_phi_61_pred_4;
                _2711 = frontier_phi_61_pred_5;
                uint _2859 = _2858 + 1u;
                if (_2859 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2852 = _2709;
                    _2853 = _2711;
                    _2854 = _2713;
                    _2855 = _2715;
                    _2856 = _2717;
                    _2857 = _2719;
                    _2858 = _2859;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2708 = _2709;
            _2710 = _2711;
            _2712 = _2713;
            _2714 = _2715;
            _2716 = _2717;
            _2718 = _2719;
        }
        uvec4 _2722 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2723 = _2722.z;
        uint _2725 = (_2723 >> 8u) & 15u;
        float _2820;
        float _2822;
        float _2824;
        float _2826;
        float _2828;
        float _2830;
        if (((4294967295u << _2725) & _2607) == 0u)
        {
            _2820 = _2708;
            _2822 = _2710;
            _2824 = _2712;
            _2826 = _2714;
            _2828 = _2716;
            _2830 = _2718;
        }
        else
        {
            float _2845 = inversesqrt(dot(vec3(_2561, _2562, _2563), vec3(_2561, _2562, _2563)));
            float _2846 = _2845 * _2561;
            float _2847 = _2845 * _2562;
            float _2848 = _2845 * _2563;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2725 < ((_2723 >> 12u) & 15u))
            {
                float _2821;
                float _2823;
                float _2825;
                float _2827;
                float _2829;
                float _2831;
                float _2959 = _2708;
                float _2960 = _2710;
                float _2961 = _2712;
                float _2962 = _2714;
                float _2963 = _2716;
                float _2964 = _2718;
                uint _2965 = _2725;
                uint _2974;
                bool _2975;
                for (;;)
                {
                    _2974 = texelFetch(g_lightClassification, int((((_2601 << 5u) + (_2587 << 9u)) + (_2965 << 2u)) >> 2u)).x;
                    _2975 = _2974 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_2975)
                    {
                        frontier_phi_67_pred = _2962;
                        frontier_phi_67_pred_1 = _2963;
                        frontier_phi_67_pred_2 = _2964;
                        frontier_phi_67_pred_3 = _2961;
                        frontier_phi_67_pred_4 = _2960;
                        frontier_phi_67_pred_5 = _2959;
                    }
                    else
                    {
                        float _3159;
                        float _3160;
                        float _3161;
                        float _3162;
                        float _3163;
                        float _3164;
                        float _3452;
                        float _3453;
                        float _3454;
                        float _3455;
                        float _3456;
                        float _3457;
                        float _3172 = _2959;
                        float _3173 = _2960;
                        float _3174 = _2961;
                        float _3175 = _2962;
                        float _3176 = _2963;
                        float _3177 = _2964;
                        uint _3178 = _2974;
                        uint _3179;
                        vec4 _3204;
                        float _3205;
                        vec4 _3220;
                        vec3 _3232;
                        vec4 _3247;
                        vec4 _3262;
                        float _3308;
                        bool _3309;
                        for (;;)
                        {
                            uint _3189 = ((_2965 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3178));
                            _3179 = (_3178 + 4294967295u) & _3178;
                            uint _3191 = _3189 * 40u;
                            _3204 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3191)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3191 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3191 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3191 + 3u)).x));
                            _3205 = _3204.w;
                            uint _3207 = (_3189 * 40u) + 4u;
                            _3220 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3207)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3207 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3207 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3207 + 3u)).x));
                            uint _3222 = (_3189 * 40u) + 8u;
                            _3232 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3222)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3222 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3222 + 2u)).x));
                            uint _3234 = (_3189 * 40u) + 16u;
                            _3247 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3234)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3234 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3234 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3234 + 3u)).x));
                            uint _3249 = (_3189 * 40u) + 20u;
                            _3262 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3249)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3249 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3249 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3249 + 3u)).x));
                            uint _3264 = (_3189 * 40u) + 24u;
                            vec4 _3277 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3264)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3264 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3264 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3264 + 3u)).x));
                            uint _3283 = (_3189 * 40u) + 28u;
                            vec4 _3296 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3283)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3283 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3283 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3283 + 3u)).x));
                            _3308 = fma(_2563, _3296.z, fma(_2562, _3296.y, _3296.x * _2561)) + _3296.w;
                            _3309 = !((fma(_2563, _3277.z, fma(_2562, _3277.y, _3277.x * _2561)) + _3277.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3309)
                            {
                                float _3336 = _3204.x - _2561;
                                float _3337 = _3204.y - _2562;
                                float _3338 = _3204.z - _2563;
                                float _3339 = dot(vec3(_3336, _3337, _3338), vec3(_3336, _3337, _3338));
                                float _3342 = inversesqrt(_3339);
                                float _3343 = _3342 * _3336;
                                float _3344 = _3342 * _3337;
                                float _3345 = _3342 * _3338;
                                float _3349 = 1.0 - (_3339 / (_3205 * _3205));
                                float _4471 = isnan(0.0) ? _3349 : (isnan(_3349) ? 0.0 : max(_3349, 0.0));
                                float _3350 = isnan(1.0) ? _4471 : (isnan(_4471) ? 1.0 : min(_4471, 1.0));
                                float _3354 = sqrt(_3339) * _3220.w;
                                float _3356 = 1.39999997615814208984375 / (_3354 + 1.39999997615814208984375);
                                float _3357 = _3356 * _3356;
                                float _3360 = ((1.0 - _3357) * dot(vec3(_3343, _3344, _3345), vec3(_866, _869, _872))) + _3357;
                                float _3363 = _3354 * _3354;
                                float _3367 = (fma(_2563, _3247.z, fma(_2562, _3247.y, _3247.x * _2561)) + _3247.w) / _3308;
                                float _3368 = (fma(_2563, _3262.z, fma(_2562, _3262.y, _3262.x * _2561)) + _3262.w) / _3308;
                                float _3372 = 1.0 - dot(vec2(_3367, _3368), vec2(_3367, _3368));
                                float _4487 = isnan(0.0) ? _3372 : (isnan(_3372) ? 0.0 : max(_3372, 0.0));
                                float _3373 = isnan(1.0) ? _4487 : (isnan(_4487) ? 1.0 : min(_4487, 1.0));
                                float _3374 = _3373 * (((isnan(0.0) ? _3360 : (isnan(_3360) ? 0.0 : max(_3360, 0.0))) * _3350) / ((_3363 * 0.699999988079071044921875) + 1.0));
                                float _3386 = exp2(log2(1.0 / ((_3363 * 3.5) + 5.0)) * 0.25);
                                float _3387 = 1.0 - _926;
                                float _3394 = sqrt(1.0 - ((1.0 - (_3387 * _3387)) * (1.0 - (_3386 * _3386))));
                                float _3395 = _3394 * _3394;
                                float _3396 = _3395 * _3395;
                                float _3397 = _3343 - _2846;
                                float _3398 = _3344 - _2847;
                                float _3399 = _3345 - _2848;
                                float _3403 = inversesqrt(dot(vec3(_3397, _3398, _3399), vec3(_3397, _3398, _3399)));
                                float _3407 = dot(vec3(_866, _869, _872), vec3((-0.0) - _2846, (-0.0) - _2847, (-0.0) - _2848));
                                float _4498 = isnan(0.0) ? _3407 : (isnan(_3407) ? 0.0 : max(_3407, 0.0));
                                float _3410 = isnan(1.0) ? _4498 : (isnan(_4498) ? 1.0 : min(_4498, 1.0));
                                float _3411 = dot(vec3(_866, _869, _872), vec3(_3403 * _3397, _3403 * _3398, _3403 * _3399));
                                float _4509 = isnan(0.0) ? _3411 : (isnan(_3411) ? 0.0 : max(_3411, 0.0));
                                float _3414 = isnan(1.0) ? _4509 : (isnan(_4509) ? 1.0 : min(_4509, 1.0));
                                float _3418 = ((_3414 * _3414) * (_3396 + (-1.0))) + 1.0;
                                float _3419 = _3356 * _3395;
                                float _3420 = _3419 * _3419;
                                float _3426 = ((1.0 - _3420) * dot(vec3(_866, _869, _872), vec3(_3343, _3344, _3345))) + _3420;
                                float _4520 = isnan(0.0) ? _3426 : (isnan(_3426) ? 0.0 : max(_3426, 0.0));
                                float _3427 = isnan(1.0) ? _4520 : (isnan(_4520) ? 1.0 : min(_4520, 1.0));
                                float _3428 = 1.0 - _3395;
                                float _3438 = (0.5 / (((_3427 * ((_3410 * _3428) + _3395)) + 9.9999999392252902907785028219223e-09) + (((_3427 * _3428) + _3395) * _3410))) * _3427;
                                float _4531 = isnan(0.0) ? _3438 : (isnan(_3438) ? 0.0 : max(_3438, 0.0));
                                float _3448 = (_3373 * _3350) * (((_3396 * 3.1415927410125732421875) * (isnan(1.0) ? _4531 : (isnan(_4531) ? 1.0 : min(_4531, 1.0)))) / ((_3418 * _3418) * ((_3363 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3448 * _3232.x;
                                frontier_phi_73_pred_1 = _3448 * _3232.y;
                                frontier_phi_73_pred_2 = _3374 * _3220.z;
                                frontier_phi_73_pred_3 = _3374 * _3220.y;
                                frontier_phi_73_pred_4 = _3374 * _3220.x;
                                frontier_phi_73_pred_5 = _3448 * _3232.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3452 = frontier_phi_73_pred;
                            _3453 = frontier_phi_73_pred_1;
                            _3457 = frontier_phi_73_pred_2;
                            _3456 = frontier_phi_73_pred_3;
                            _3455 = frontier_phi_73_pred_4;
                            _3454 = frontier_phi_73_pred_5;
                            _3162 = _3455 + _3175;
                            _3163 = _3456 + _3176;
                            _3164 = _3457 + _3177;
                            _3159 = _3452 + _3172;
                            _3160 = _3453 + _3173;
                            _3161 = _3454 + _3174;
                            if (_3179 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3172 = _3159;
                                _3173 = _3160;
                                _3174 = _3161;
                                _3175 = _3162;
                                _3176 = _3163;
                                _3177 = _3164;
                                _3178 = _3179;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3162;
                        frontier_phi_67_pred_1 = _3163;
                        frontier_phi_67_pred_2 = _3164;
                        frontier_phi_67_pred_3 = _3161;
                        frontier_phi_67_pred_4 = _3160;
                        frontier_phi_67_pred_5 = _3159;
                    }
                    _2827 = frontier_phi_67_pred;
                    _2829 = frontier_phi_67_pred_1;
                    _2831 = frontier_phi_67_pred_2;
                    _2825 = frontier_phi_67_pred_3;
                    _2823 = frontier_phi_67_pred_4;
                    _2821 = frontier_phi_67_pred_5;
                    uint _2966 = _2965 + 1u;
                    if (_2966 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2959 = _2821;
                        _2960 = _2823;
                        _2961 = _2825;
                        _2962 = _2827;
                        _2963 = _2829;
                        _2964 = _2831;
                        _2965 = _2966;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _2829;
                frontier_phi_55_56_ladder_1 = _2831;
                frontier_phi_55_56_ladder_2 = _2827;
                frontier_phi_55_56_ladder_3 = _2825;
                frontier_phi_55_56_ladder_4 = _2823;
                frontier_phi_55_56_ladder_5 = _2821;
            }
            else
            {
                frontier_phi_55_56_ladder = _2716;
                frontier_phi_55_56_ladder_1 = _2718;
                frontier_phi_55_56_ladder_2 = _2714;
                frontier_phi_55_56_ladder_3 = _2712;
                frontier_phi_55_56_ladder_4 = _2710;
                frontier_phi_55_56_ladder_5 = _2708;
            }
            _2820 = frontier_phi_55_56_ladder_5;
            _2822 = frontier_phi_55_56_ladder_4;
            _2824 = frontier_phi_55_56_ladder_3;
            _2826 = frontier_phi_55_56_ladder_2;
            _2828 = frontier_phi_55_56_ladder;
            _2830 = frontier_phi_55_56_ladder_1;
        }
        float _2835 = isnan(1.0) ? _910 : (isnan(_910) ? 1.0 : min(_910, 1.0));
        _2620 = (_2835 * _2826) + _2075;
        _2622 = (_2835 * _2828) + _2077;
        _2624 = (_2835 * _2830) + _2079;
        _2626 = ((_2820 * 0.039999999105930328369140625) * _2835) + _2405;
        _2628 = ((_2822 * 0.039999999105930328369140625) * _2835) + _2407;
        _2630 = ((_2824 * 0.039999999105930328369140625) * _2835) + _2409;
    }
    else
    {
        _2620 = _2075;
        _2622 = _2077;
        _2624 = _2079;
        _2626 = _2405;
        _2628 = _2407;
        _2630 = _2409;
    }
    float _4547 = isnan(0.0) ? _895 : (isnan(_895) ? 0.0 : max(_895, 0.0));
    float _4558 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
    float _4569 = isnan(0.0) ? _897 : (isnan(_897) ? 0.0 : max(_897, 0.0));
    uint _2650 = _249 + 6u;
    float _2658 = _847 / cbSceneParam._m0[86u].x;
    float _2659 = _848 / cbSceneParam._m0[86u].y;
    vec4 _2673 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2658, _2659, (log2((isnan(cbSceneParam._m0[77u].w) ? _781 : (isnan(_781) ? cbSceneParam._m0[77u].w : min(_781, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2675 = _2673.x;
    float _2676 = _2673.y;
    float _2677 = _2673.z;
    float _2678 = _2673.w;
    float _2770;
    float _2772;
    float _2774;
    float _2776;
    if (_781 > cbSceneParam._m0[78u].w)
    {
        float _2733 = isnan(_781) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _781 : min(cbSceneParam._m0[80u].w, _781));
        float _2734 = _2733 / _781;
        float _2745 = _2734 * _832;
        float _2746 = _833 * _2734;
        float _2747 = (-0.0) - _2746;
        float _2748 = _2734 * _834;
        float _2750 = (cbSceneParam._m0[77u].w * _2747) / _2733;
        float _2751 = _2750 + cbSceneParam._m0[79u].w;
        float _2752 = cbSceneParam._m0[79u].w - _2746;
        float _2758 = sqrt(((_2745 * _2745) + (_2746 * _2746)) + (_2748 * _2748));
        float _2761 = (1.0 - (cbSceneParam._m0[77u].w / _2733)) * _2758;
        float _2766 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2768 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2921;
        if (abs((_2747 - _2750) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2921 = ((((_2751 > 0.0) ? exp2(_2766 * _2751) : (2.0 - exp2(_2768 * _2751))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2761;
        }
        else
        {
            float _2881 = 1.0 / cbSceneParam._m0[80u].x;
            float _2882 = isnan(_2752) ? _2751 : (isnan(_2751) ? _2752 : max(_2751, _2752));
            float _2883 = isnan(_2752) ? _2751 : (isnan(_2751) ? _2752 : min(_2751, _2752));
            float _2892 = isnan(0.0) ? _2882 : (isnan(_2882) ? 0.0 : min(_2882, 0.0));
            float _2893 = isnan(0.0) ? _2883 : (isnan(_2883) ? 0.0 : min(_2883, 0.0));
            _2921 = ((abs(_2758 / _2747) * cbSceneParam._m0[80u].y) * ((((_2892 - _2893) * 2.0) - ((exp2(_2766 * (isnan(0.0) ? _2882 : (isnan(_2882) ? 0.0 : max(_2882, 0.0)))) - exp2(_2766 * (isnan(0.0) ? _2883 : (isnan(_2883) ? 0.0 : max(_2883, 0.0))))) * _2881)) - ((exp2(_2768 * _2892) - exp2(_2768 * _2893)) * _2881))) + (_2761 * cbSceneParam._m0[80u].z);
        }
        vec4 _2923 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2658, _2659, 1.0), 0.0);
        float _2932 = exp2((_2921 * (-1.44269502162933349609375)) * (1.0 - _2923.w));
        float _2933 = log2(_2932);
        float _2949 = log2(_2678);
        _2770 = (exp2(_2949 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2933 * cbSceneParam._m0[78u].x)) * _2923.x) / cbSceneParam._m0[78u].x)) + _2675;
        _2772 = (exp2(_2949 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2933 * cbSceneParam._m0[78u].y)) * _2923.y) / cbSceneParam._m0[78u].y)) + _2676;
        _2774 = (exp2(_2949 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2933 * cbSceneParam._m0[78u].z)) * _2923.z) / cbSceneParam._m0[78u].z)) + _2677;
        _2776 = _2932 * _2678;
    }
    else
    {
        _2770 = _2675;
        _2772 = _2676;
        _2774 = _2677;
        _2776 = _2678;
    }
    float _2788 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2789 = _2788 == 3.0;
    float _2790 = log2(_2776);
    float _2797 = exp2(_2790 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4547 : (isnan(_4547) ? 1.0 : min(_4547, 1.0))) * (_2620 + ((isnan(0.0) ? _1636 : (isnan(_1636) ? 0.0 : max(_1636, 0.0))) * _910))) + ((_2626 + ((isnan(0.0) ? _1928 : (isnan(_1928) ? 0.0 : max(_1928, 0.0))) * _1715)) * cbPerFrame._m0[3u].x));
    float _2798 = exp2(_2790 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4558 : (isnan(_4558) ? 1.0 : min(_4558, 1.0))) * (_2622 + ((isnan(0.0) ? _1639 : (isnan(_1639) ? 0.0 : max(_1639, 0.0))) * _910))) + ((_2628 + ((isnan(0.0) ? _1931 : (isnan(_1931) ? 0.0 : max(_1931, 0.0))) * _1715)) * cbPerFrame._m0[3u].x));
    float _2799 = exp2(_2790 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4569 : (isnan(_4569) ? 1.0 : min(_4569, 1.0))) * (_2624 + ((isnan(0.0) ? _1642 : (isnan(_1642) ? 0.0 : max(_1642, 0.0))) * _910))) + ((_2630 + ((isnan(0.0) ? _1934 : (isnan(_1934) ? 0.0 : max(_1934, 0.0))) * _1715)) * cbPerFrame._m0[3u].x));
    float _2808 = (_2788 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2808 * (_2789 ? _2797 : (_2797 + (cbSceneParam._m0[72u].w * _2770)));
    SV_Target.y = _2808 * (_2789 ? _2798 : (_2798 + (cbSceneParam._m0[72u].w * _2772)));
    SV_Target.z = _2808 * (_2789 ? _2799 : (_2799 + (cbSceneParam._m0[72u].w * _2774)));
    SV_Target.w = cbInstanceData._m0[_2650].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2650].w;
}


