#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 15) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 3) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1439;
float _4081;
float _4082;
float _4083;
float _4084;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _240 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _241 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _242 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _248 = inversesqrt(dot(vec3(_240, _241, _242), vec3(_240, _241, _242)));
    float _255 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _262 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _274 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _276 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _277 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4093 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _4104 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
    float _4115 = isnan(0.0) ? _277 : (isnan(_277) ? 0.0 : max(_277, 0.0));
    uint _287 = uint(roundEven(NORMAL.w)) * 13u;
    uint _292 = _287 + 1u;
    uint _296 = _287 + 2u;
    float _305 = sqrt(((cbInstanceData._m0[_292].x * cbInstanceData._m0[_292].x) + (cbInstanceData._m0[_287].x * cbInstanceData._m0[_287].x)) + (cbInstanceData._m0[_296].x * cbInstanceData._m0[_296].x));
    float _306 = _305 * TEXCOORD.z;
    float _307 = _305 * TEXCOORD.w;
    vec4 _320 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _306) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _307) + cbTextureTilingScale._m0[13u].w));
    vec4 _344 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _349 = _344.x * cbMtdParam._m0[11u].x;
    float _350 = _344.y * cbMtdParam._m0[11u].y;
    float _351 = _344.z * cbMtdParam._m0[11u].z;
    vec4 _370 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _306) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _307) + cbTextureTilingScale._m0[5u].w));
    vec4 _407 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _409 = _407.x;
    float _419 = dot(vec4(_409, _407.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _436 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_409 - _419) * cbMtdParam._m0[24u].x) + _419) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4126 = isnan(0.0) ? _436 : (isnan(_436) ? 0.0 : max(_436, 0.0));
    float _437 = isnan(1.0) ? _4126 : (isnan(_4126) ? 1.0 : min(_4126, 1.0));
    float _444 = (_437 * ((_370.x * cbMtdParam._m0[12u].x) - _349)) + _349;
    float _445 = (_437 * ((_370.y * cbMtdParam._m0[12u].y) - _350)) + _350;
    float _446 = (_437 * ((_370.z * cbMtdParam._m0[12u].z) - _351)) + _351;
    vec4 _463 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _306) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _307) + cbTextureTilingScale._m0[3u].w));
    vec4 _483 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _485 = _483.x;
    float _495 = dot(vec4(_485, _483.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _509 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.y) * 2.0) - ((((_485 - _495) * cbMtdParam._m0[24u].x) + _495) * cbMtdParam._m0[20u].w))) + 1.0;
    float _4137 = isnan(0.0) ? _509 : (isnan(_509) ? 0.0 : max(_509, 0.0));
    float _510 = isnan(1.0) ? _4137 : (isnan(_4137) ? 1.0 : min(_4137, 1.0));
    float _517 = (_510 * ((_463.x * cbMtdParam._m0[13u].x) - _444)) + _444;
    float _518 = (_510 * ((_463.y * cbMtdParam._m0[13u].y) - _445)) + _445;
    float _519 = (_510 * ((_463.z * cbMtdParam._m0[13u].z) - _446)) + _446;
    float _523 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _320.x) * _517;
    float _526 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _320.y) * _518;
    float _529 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _320.z) * _519;
    float _536 = ((_517 - _523) * (isnan(1.0) ? _4093 : (isnan(_4093) ? 1.0 : min(_4093, 1.0)))) + _523;
    float _537 = ((_518 - _526) * (isnan(1.0) ? _4104 : (isnan(_4104) ? 1.0 : min(_4104, 1.0)))) + _526;
    float _538 = ((_519 - _529) * (isnan(1.0) ? _4115 : (isnan(_4115) ? 1.0 : min(_4115, 1.0)))) + _529;
    vec4 _555 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _306) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _307) + cbTextureTilingScale._m0[20u].w));
    vec4 _578 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _306) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _307) + cbTextureTilingScale._m0[4u].w));
    vec4 _595 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _597 = _595.x;
    float _598 = _595.y;
    float _599 = _595.z;
    float _606 = ((_578.x - _597) * _437) + _597;
    float _607 = ((_578.y - _598) * _437) + _598;
    float _608 = ((_578.z - _599) * _437) + _599;
    vec4 _620 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _306) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _307) + cbTextureTilingScale._m0[2u].w));
    float _633 = ((_620.z - _608) * _510) + _608;
    float _636 = ((((_620.x - _606) * _510) + _606) * 2.0) + (-1.0);
    float _637 = ((((_620.y - _607) * _510) + _607) * 2.0) + (-1.0);
    float _638 = dot(vec2(_636, _637), vec2(_636, _637));
    float _4148 = isnan(0.0) ? _638 : (isnan(_638) ? 0.0 : max(_638, 0.0));
    float _643 = sqrt(1.0 - (isnan(1.0) ? _4148 : (isnan(_4148) ? 1.0 : min(_4148, 1.0))));
    vec4 _656 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _674 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _306) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _307) + cbTextureTilingScale._m0[11u].w));
    float _676 = _674.x;
    float _677 = 1.0 - _676;
    float _683 = isnan(-1.0) ? cbMtdParam._m0[24u].y : (isnan(cbMtdParam._m0[24u].y) ? (-1.0) : max(cbMtdParam._m0[24u].y, -1.0));
    float _686 = ((isnan(0.0) ? _683 : (isnan(_683) ? 0.0 : min(_683, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _695 = (_686 - ((((((_676 - _677) * cbMtdParam._m0[24u].z) + _677) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _686))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4169 = isnan(0.0) ? _695 : (isnan(_695) ? 0.0 : max(_695, 0.0));
    float _696 = isnan(1.0) ? _4169 : (isnan(_4169) ? 1.0 : min(_4169, 1.0));
    float _703 = (_696 * (cbMtdParam._m0[17u].x - _536)) + _536;
    float _704 = (_696 * (cbMtdParam._m0[17u].y - _537)) + _537;
    float _705 = (_696 * (cbMtdParam._m0[17u].z - _538)) + _538;
    vec4 _717 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _306) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _307) + cbTextureTilingScale._m0[19u].w));
    float _719 = _717.x;
    float _720 = 1.0 - _719;
    float _745 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_719 - _720) * cbMtdParam._m0[24u].w) + _720) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4180 = isnan(0.0) ? _745 : (isnan(_745) ? 0.0 : max(_745, 0.0));
    float _746 = isnan(1.0) ? _4180 : (isnan(_4180) ? 1.0 : min(_4180, 1.0));
    float _754 = ((((cbMtdParam._m0[10u].x - _703) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _746) + _703;
    float _755 = ((((cbMtdParam._m0[10u].y - _704) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _746) + _704;
    float _756 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _705)) * _746) + _705;
    float _761 = (((_555.z - _633) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _633;
    vec4 _775 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _306) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _307) + cbTextureTilingScale._m0[15u].w));
    float _782 = (_775.x * 2.0) + (-1.0);
    float _783 = (_775.y * 2.0) + (-1.0);
    float _784 = dot(vec2(_782, _783), vec2(_782, _783));
    float _4191 = isnan(0.0) ? _784 : (isnan(_784) ? 0.0 : max(_784, 0.0));
    float _792 = (_696 * (_775.z - _761)) + _761;
    float _795 = ((cbMtdParam._m0[23u].y - _792) * _746) + _792;
    vec4 _814 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _306) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _307) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _820 = (_814.x * 2.0) + (-1.0);
    float _821 = (_814.y * 2.0) + (-1.0);
    float _822 = dot(vec2(_820, _821), vec2(_820, _821));
    float _4202 = isnan(0.0) ? _822 : (isnan(_822) ? 0.0 : max(_822, 0.0));
    float _832 = _636 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_555.x * 2.0) + (-1.0)));
    float _833 = _637 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_555.y * 2.0) + (-1.0)));
    float _845 = (((_782 - _832) + (cbMtdParam._m0[21u].x * _832)) * _696) + _832;
    float _846 = (((_783 - _833) + (cbMtdParam._m0[21u].x * _833)) * _696) + _833;
    float _847 = (_696 * (sqrt(1.0 - (isnan(1.0) ? _4191 : (isnan(_4191) ? 1.0 : min(_4191, 1.0)))) - _643)) + _643;
    float _858 = (((_820 - _845) + (_845 * cbMtdParam._m0[22u].z)) * _746) + _845;
    float _859 = (((_821 - _846) + (_846 * cbMtdParam._m0[22u].z)) * _746) + _846;
    float _860 = ((sqrt(1.0 - (isnan(1.0) ? _4202 : (isnan(_4202) ? 1.0 : min(_4202, 1.0)))) - _847) * _746) + _847;
    float _864 = cbMtdParam._m0[22u].x + _656.w;
    float _867 = fma(_860, _255 * NORMAL.x, fma(_859, _262 * TANGENT.x, (_248 * _240) * _858));
    float _870 = fma(_860, _255 * NORMAL.y, fma(_859, _262 * TANGENT.y, (_248 * _241) * _858));
    float _873 = fma(_860, _255 * NORMAL.z, fma(_859, _262 * TANGENT.z, (_248 * _242) * _858));
    float _877 = inversesqrt(dot(vec3(_867, _870, _873), vec3(_867, _870, _873)));
    float _878 = _877 * _867;
    float _879 = _877 * _870;
    float _880 = _877 * _873;
    float _4213 = isnan(0.0) ? _795 : (isnan(_795) ? 0.0 : max(_795, 0.0));
    float _881 = isnan(1.0) ? _4213 : (isnan(_4213) ? 1.0 : min(_4213, 1.0));
    float _4224 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
    float _4235 = isnan(0.0) ? _754 : (isnan(_754) ? 0.0 : max(_754, 0.0));
    float _4246 = isnan(0.0) ? _755 : (isnan(_755) ? 0.0 : max(_755, 0.0));
    float _4257 = isnan(0.0) ? _756 : (isnan(_756) ? 0.0 : max(_756, 0.0));
    float _899 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _940 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _950 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _940);
    float _951 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _940);
    float _952 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _940);
    float _956 = inversesqrt(dot(vec3(_950, _951, _952), vec3(_950, _951, _952)));
    float _957 = _950 * _956;
    float _958 = _951 * _956;
    float _959 = _952 * _956;
    vec4 _964 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _966 = _964.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1120 = sqrt(((_950 * _950) + (_951 * _951)) + (_952 * _952));
        float _1126 = (cbMatDynParam._m0[5u].x * _1120) + cbMatDynParam._m0[5u].y;
        float _4268 = isnan(0.0) ? _1126 : (isnan(_1126) ? 0.0 : max(_1126, 0.0));
        float _1127 = isnan(1.0) ? _4268 : (isnan(_4268) ? 1.0 : min(_4268, 1.0));
        float _1131 = (cbMatDynParam._m0[5u].z * _1120) + cbMatDynParam._m0[5u].w;
        float _4279 = isnan(0.0) ? _1131 : (isnan(_1131) ? 0.0 : max(_1131, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0))) - _1127)) + _1127) < ((_966 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _977 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _978 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _996 = fma(_880, cbSceneParam._m0[5u].z, fma(_879, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _878));
    float _999 = fma(_880, cbSceneParam._m0[6u].z, fma(_879, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _878));
    float _1002 = fma(_880, cbSceneParam._m0[7u].z, fma(_879, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _878));
    uint _1015 = _287 + 9u;
    uint _1016 = _1015 + uint(cbMatDynParam._m0[0u].w);
    float _1022 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4235 : (isnan(_4235) ? 1.0 : min(_4235, 1.0)))) * cbInstanceData._m0[_1016].x;
    float _1023 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4246 : (isnan(_4246) ? 1.0 : min(_4246, 1.0)))) * cbInstanceData._m0[_1016].y;
    float _1024 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4257 : (isnan(_4257) ? 1.0 : min(_4257, 1.0)))) * cbInstanceData._m0[_1016].z;
    float _4290 = isnan(0.0) ? _1022 : (isnan(_1022) ? 0.0 : max(_1022, 0.0));
    float _1025 = isnan(1.0) ? _4290 : (isnan(_4290) ? 1.0 : min(_4290, 1.0));
    float _4301 = isnan(0.0) ? _1023 : (isnan(_1023) ? 0.0 : max(_1023, 0.0));
    float _1026 = isnan(1.0) ? _4301 : (isnan(_4301) ? 1.0 : min(_4301, 1.0));
    float _4312 = isnan(0.0) ? _1024 : (isnan(_1024) ? 0.0 : max(_1024, 0.0));
    float _1027 = isnan(1.0) ? _4312 : (isnan(_4312) ? 1.0 : min(_4312, 1.0));
    vec4 _1036 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _977, cbSceneParam._m0[86u].y * _978));
    float _1040 = ((isnan(1.0) ? _4224 : (isnan(_4224) ? 1.0 : min(_4224, 1.0))) * TEXCOORD_5.w) * _1036.x;
    float _1041 = dot(vec3(_878, _879, _880), vec3(_957, _958, _959));
    float _1044 = _1041 * 2.0;
    float _1048 = (_1044 * _878) - _957;
    float _1049 = (_1044 * _879) - _958;
    float _1050 = (_1044 * _880) - _959;
    float _1054 = abs(dot(vec3(_957, _958, _959), vec3(_878, _879, _880)));
    float _4323 = isnan(0.0) ? _1054 : (isnan(_1054) ? 0.0 : max(_1054, 0.0));
    float _1056 = sqrt(_881);
    float _1069 = exp2((_1056 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1056 * 3.0));
    float _1101 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1105 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1109 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1438;
    float _1440;
    float _1441;
    float _1442;
    float _1443;
    float _1444;
    float _1445;
    float _1446;
    float _1447;
    float _1448;
    float _1449;
    float _1450;
    float _1451;
    float _1452;
    float _1453;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1163 = fma(_1109, cbModelParam._m0[26u].z, fma(_1105, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1101));
        float _1167 = fma(_1109, cbModelParam._m0[27u].z, fma(_1105, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1101));
        float _1171 = fma(_1109, cbModelParam._m0[28u].z, fma(_1105, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1101));
        float _1196 = _1101 + _878;
        float _1197 = _1105 + _879;
        float _1198 = _1109 + _880;
        float _1208 = fma(_1198, cbModelParam._m0[26u].z, fma(_1197, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1196)) - _1163;
        float _1209 = fma(_1198, cbModelParam._m0[27u].z, fma(_1197, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1196)) - _1167;
        float _1210 = fma(_1198, cbModelParam._m0[28u].z, fma(_1197, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1196)) - _1171;
        float _1214 = inversesqrt(dot(vec3(_1208, _1209, _1210), vec3(_1208, _1209, _1210)));
        float _1227 = ((_1214 * _1208) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1163 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1228 = ((_1214 * _1209) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1167 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1229 = ((_1214 * _1210) / cbModelParam._m0[34u].z) + ((((((_1171 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1232 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1227, _1228, _1229), 0.0);
        vec4 _1239 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1227, _1228, _1229), 0.0);
        vec4 _1246 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1227, _1228, _1229), 0.0);
        vec4 _1253 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1227, _1228, _1229), 0.0);
        float _1266 = exp2((_1232.w + (-0.5)) * 20.0) * 2.0;
        float _1267 = _1266 * (_1232.x + (-0.5));
        float _1268 = _1266 * (_1232.y + (-0.5));
        float _1269 = _1266 * (_1232.z + (-0.5));
        float _1276 = exp2((_1239.w + (-0.5)) * 20.0) * 2.0;
        float _1277 = _1276 * (_1239.x + (-0.5));
        float _1278 = _1276 * (_1239.y + (-0.5));
        float _1279 = _1276 * (_1239.z + (-0.5));
        float _1286 = exp2((_1246.w + (-0.5)) * 20.0) * 2.0;
        float _1287 = _1286 * (_1246.x + (-0.5));
        float _1288 = _1286 * (_1246.y + (-0.5));
        float _1289 = _1286 * (_1246.z + (-0.5));
        float _1296 = exp2((_1253.w + (-0.5)) * 20.0) * 2.0;
        float _1297 = _1296 * (_1253.x + (-0.5));
        float _1298 = _1296 * (_1253.y + (-0.5));
        float _1299 = _1296 * (_1253.z + (-0.5));
        float _1300 = isnan(0.0) ? _1297 : (isnan(_1297) ? 0.0 : max(_1297, 0.0));
        float _1301 = isnan(0.0) ? _1298 : (isnan(_1298) ? 0.0 : max(_1298, 0.0));
        float _1302 = isnan(0.0) ? _1299 : (isnan(_1299) ? 0.0 : max(_1299, 0.0));
        float _1303 = _1267 * 0.5;
        float _1304 = _1277 * 0.5;
        float _1305 = _1287 * 0.5;
        float _1306 = dot(vec3(_1303, _1304, _1305), vec3(_1303, _1304, _1305));
        float _1311 = (_1306 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1306);
        float _1320 = (dot(vec3(_878, _879, _880), vec3(_1311 * _1303, _1311 * _1304, _1311 * _1305)) + 1.0) * 0.5;
        float _4349 = isnan(0.0) ? _1320 : (isnan(_1320) ? 0.0 : max(_1320, 0.0));
        float _1330 = sqrt(((_1304 * _1304) + (_1303 * _1303)) + (_1305 * _1305)) / (_1300 + 9.9999997473787516355514526367188e-06);
        float _4360 = isnan(0.0) ? _1330 : (isnan(_1330) ? 0.0 : max(_1330, 0.0));
        float _1331 = isnan(1.0) ? _4360 : (isnan(_4360) ? 1.0 : min(_4360, 1.0));
        float _1332 = _1331 * 2.0;
        float _1336 = (1.0 - _1331) / (_1331 + 1.0);
        float _4371 = isnan(0.0) ? _1336 : (isnan(_1336) ? 0.0 : max(_1336, 0.0));
        float _1337 = isnan(1.0) ? _4371 : (isnan(_4371) ? 1.0 : min(_4371, 1.0));
        float _1346 = ((((1.0 - _1337) * (_1332 + 2.0)) * exp2(log2(isnan(1.0) ? _4349 : (isnan(_4349) ? 1.0 : min(_4349, 1.0))) * (_1332 + 1.0))) + _1337) * _1300;
        float _1347 = _1268 * 0.5;
        float _1348 = _1278 * 0.5;
        float _1349 = _1288 * 0.5;
        float _1350 = dot(vec3(_1347, _1348, _1349), vec3(_1347, _1348, _1349));
        float _1355 = (_1350 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1350);
        float _1363 = (dot(vec3(_878, _879, _880), vec3(_1355 * _1347, _1355 * _1348, _1355 * _1349)) + 1.0) * 0.5;
        float _4382 = isnan(0.0) ? _1363 : (isnan(_1363) ? 0.0 : max(_1363, 0.0));
        float _1372 = sqrt(((_1348 * _1348) + (_1347 * _1347)) + (_1349 * _1349)) / (_1301 + 9.9999997473787516355514526367188e-06);
        float _4393 = isnan(0.0) ? _1372 : (isnan(_1372) ? 0.0 : max(_1372, 0.0));
        float _1373 = isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0));
        float _1374 = _1373 * 2.0;
        float _1378 = (1.0 - _1373) / (_1373 + 1.0);
        float _4404 = isnan(0.0) ? _1378 : (isnan(_1378) ? 0.0 : max(_1378, 0.0));
        float _1379 = isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0));
        float _1388 = ((((1.0 - _1379) * (_1374 + 2.0)) * exp2(log2(isnan(1.0) ? _4382 : (isnan(_4382) ? 1.0 : min(_4382, 1.0))) * (_1374 + 1.0))) + _1379) * _1301;
        float _1389 = _1269 * 0.5;
        float _1390 = _1279 * 0.5;
        float _1391 = _1289 * 0.5;
        float _1392 = dot(vec3(_1389, _1390, _1391), vec3(_1389, _1390, _1391));
        float _1397 = (_1392 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1392);
        float _1405 = (dot(vec3(_878, _879, _880), vec3(_1397 * _1389, _1397 * _1390, _1397 * _1391)) + 1.0) * 0.5;
        float _4415 = isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0));
        float _1414 = sqrt(((_1390 * _1390) + (_1389 * _1389)) + (_1391 * _1391)) / (_1302 + 9.9999997473787516355514526367188e-06);
        float _4426 = isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0));
        float _1415 = isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0));
        float _1416 = _1415 * 2.0;
        float _1420 = (1.0 - _1415) / (_1415 + 1.0);
        float _4437 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
        float _1421 = isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0));
        float _1430 = ((((1.0 - _1421) * (_1416 + 2.0)) * exp2(log2(isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0))) * (_1416 + 1.0))) + _1421) * _1302;
        _1438 = _1269;
        _1440 = _1268;
        _1441 = _1267;
        _1442 = _1279;
        _1443 = _1278;
        _1444 = _1277;
        _1445 = _1289;
        _1446 = _1288;
        _1447 = _1287;
        _1448 = _1302;
        _1449 = _1301;
        _1450 = _1300;
        _1451 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1346 : (isnan(_1346) ? 0.0 : max(_1346, 0.0)));
        _1452 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1388 : (isnan(_1388) ? 0.0 : max(_1388, 0.0)));
        _1453 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0)));
    }
    else
    {
        _1438 = _1439;
        _1440 = _1439;
        _1441 = _1439;
        _1442 = _1439;
        _1443 = _1439;
        _1444 = _1439;
        _1445 = _1439;
        _1446 = _1439;
        _1447 = _1439;
        _1448 = _1439;
        _1449 = _1439;
        _1450 = _1439;
        _1451 = 0.0;
        _1452 = 0.0;
        _1453 = 0.0;
    }
    float _1749;
    float _1750;
    float _1751;
    float _1752;
    float _1753;
    float _1754;
    float _1755;
    float _1756;
    float _1757;
    float _1758;
    float _1759;
    float _1760;
    float _1761;
    float _1762;
    float _1763;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1480 = fma(_1109, cbModelParam._m0[30u].z, fma(_1105, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1101));
        float _1484 = fma(_1109, cbModelParam._m0[31u].z, fma(_1105, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1101));
        float _1488 = fma(_1109, cbModelParam._m0[32u].z, fma(_1105, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1101));
        float _1511 = _1101 + _878;
        float _1512 = _1105 + _879;
        float _1513 = _1109 + _880;
        float _1523 = fma(_1513, cbModelParam._m0[30u].z, fma(_1512, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1511)) - _1480;
        float _1524 = fma(_1513, cbModelParam._m0[31u].z, fma(_1512, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1511)) - _1484;
        float _1525 = fma(_1513, cbModelParam._m0[32u].z, fma(_1512, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1511)) - _1488;
        float _1529 = inversesqrt(dot(vec3(_1523, _1524, _1525), vec3(_1523, _1524, _1525)));
        float _1542 = ((_1529 * _1523) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1480 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1543 = ((_1529 * _1524) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1484 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1544 = ((_1529 * _1525) / cbModelParam._m0[35u].z) + ((((((_1488 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1546 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1542, _1543, _1544), 0.0);
        vec4 _1553 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1542, _1543, _1544), 0.0);
        vec4 _1560 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1542, _1543, _1544), 0.0);
        vec4 _1567 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1542, _1543, _1544), 0.0);
        float _1579 = exp2((_1546.w + (-0.5)) * 20.0) * 2.0;
        float _1580 = _1579 * (_1546.x + (-0.5));
        float _1581 = _1579 * (_1546.y + (-0.5));
        float _1582 = _1579 * (_1546.z + (-0.5));
        float _1589 = exp2((_1553.w + (-0.5)) * 20.0) * 2.0;
        float _1590 = _1589 * (_1553.x + (-0.5));
        float _1591 = _1589 * (_1553.y + (-0.5));
        float _1592 = _1589 * (_1553.z + (-0.5));
        float _1599 = exp2((_1560.w + (-0.5)) * 20.0) * 2.0;
        float _1600 = _1599 * (_1560.x + (-0.5));
        float _1601 = _1599 * (_1560.y + (-0.5));
        float _1602 = _1599 * (_1560.z + (-0.5));
        float _1609 = exp2((_1567.w + (-0.5)) * 20.0) * 2.0;
        float _1610 = _1609 * (_1567.x + (-0.5));
        float _1611 = _1609 * (_1567.y + (-0.5));
        float _1612 = _1609 * (_1567.z + (-0.5));
        float _1613 = isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0));
        float _1614 = isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0));
        float _1615 = isnan(0.0) ? _1612 : (isnan(_1612) ? 0.0 : max(_1612, 0.0));
        float _1616 = _1580 * 0.5;
        float _1617 = _1590 * 0.5;
        float _1618 = _1600 * 0.5;
        float _1619 = dot(vec3(_1616, _1617, _1618), vec3(_1616, _1617, _1618));
        float _1624 = (_1619 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1619);
        float _1632 = (dot(vec3(_878, _879, _880), vec3(_1624 * _1616, _1624 * _1617, _1624 * _1618)) + 1.0) * 0.5;
        float _4478 = isnan(0.0) ? _1632 : (isnan(_1632) ? 0.0 : max(_1632, 0.0));
        float _1641 = sqrt(((_1617 * _1617) + (_1616 * _1616)) + (_1618 * _1618)) / (_1613 + 9.9999997473787516355514526367188e-06);
        float _4489 = isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0));
        float _1642 = isnan(1.0) ? _4489 : (isnan(_4489) ? 1.0 : min(_4489, 1.0));
        float _1643 = _1642 * 2.0;
        float _1647 = (1.0 - _1642) / (_1642 + 1.0);
        float _4500 = isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0));
        float _1648 = isnan(1.0) ? _4500 : (isnan(_4500) ? 1.0 : min(_4500, 1.0));
        float _1657 = ((((1.0 - _1648) * (_1643 + 2.0)) * exp2(log2(isnan(1.0) ? _4478 : (isnan(_4478) ? 1.0 : min(_4478, 1.0))) * (_1643 + 1.0))) + _1648) * _1613;
        float _1658 = _1581 * 0.5;
        float _1659 = _1591 * 0.5;
        float _1660 = _1601 * 0.5;
        float _1661 = dot(vec3(_1658, _1659, _1660), vec3(_1658, _1659, _1660));
        float _1666 = (_1661 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1661);
        float _1674 = (dot(vec3(_878, _879, _880), vec3(_1666 * _1658, _1666 * _1659, _1666 * _1660)) + 1.0) * 0.5;
        float _4511 = isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0));
        float _1683 = sqrt(((_1659 * _1659) + (_1658 * _1658)) + (_1660 * _1660)) / (_1614 + 9.9999997473787516355514526367188e-06);
        float _4522 = isnan(0.0) ? _1683 : (isnan(_1683) ? 0.0 : max(_1683, 0.0));
        float _1684 = isnan(1.0) ? _4522 : (isnan(_4522) ? 1.0 : min(_4522, 1.0));
        float _1685 = _1684 * 2.0;
        float _1689 = (1.0 - _1684) / (_1684 + 1.0);
        float _4533 = isnan(0.0) ? _1689 : (isnan(_1689) ? 0.0 : max(_1689, 0.0));
        float _1690 = isnan(1.0) ? _4533 : (isnan(_4533) ? 1.0 : min(_4533, 1.0));
        float _1699 = ((((1.0 - _1690) * (_1685 + 2.0)) * exp2(log2(isnan(1.0) ? _4511 : (isnan(_4511) ? 1.0 : min(_4511, 1.0))) * (_1685 + 1.0))) + _1690) * _1614;
        float _1700 = _1582 * 0.5;
        float _1701 = _1592 * 0.5;
        float _1702 = _1602 * 0.5;
        float _1703 = dot(vec3(_1700, _1701, _1702), vec3(_1700, _1701, _1702));
        float _1708 = (_1703 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1703);
        float _1716 = (dot(vec3(_878, _879, _880), vec3(_1708 * _1700, _1708 * _1701, _1708 * _1702)) + 1.0) * 0.5;
        float _4544 = isnan(0.0) ? _1716 : (isnan(_1716) ? 0.0 : max(_1716, 0.0));
        float _1725 = sqrt(((_1701 * _1701) + (_1700 * _1700)) + (_1702 * _1702)) / (_1615 + 9.9999997473787516355514526367188e-06);
        float _4555 = isnan(0.0) ? _1725 : (isnan(_1725) ? 0.0 : max(_1725, 0.0));
        float _1726 = isnan(1.0) ? _4555 : (isnan(_4555) ? 1.0 : min(_4555, 1.0));
        float _1727 = _1726 * 2.0;
        float _1731 = (1.0 - _1726) / (_1726 + 1.0);
        float _4566 = isnan(0.0) ? _1731 : (isnan(_1731) ? 0.0 : max(_1731, 0.0));
        float _1732 = isnan(1.0) ? _4566 : (isnan(_4566) ? 1.0 : min(_4566, 1.0));
        float _1741 = ((((1.0 - _1732) * (_1727 + 2.0)) * exp2(log2(isnan(1.0) ? _4544 : (isnan(_4544) ? 1.0 : min(_4544, 1.0))) * (_1727 + 1.0))) + _1732) * _1615;
        _1749 = _1582;
        _1750 = _1581;
        _1751 = _1580;
        _1752 = _1592;
        _1753 = _1591;
        _1754 = _1590;
        _1755 = _1602;
        _1756 = _1601;
        _1757 = _1600;
        _1758 = _1615;
        _1759 = _1614;
        _1760 = _1613;
        _1761 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1657 : (isnan(_1657) ? 0.0 : max(_1657, 0.0)));
        _1762 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1699 : (isnan(_1699) ? 0.0 : max(_1699, 0.0)));
        _1763 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1741 : (isnan(_1741) ? 0.0 : max(_1741, 0.0)));
    }
    else
    {
        _1749 = _1439;
        _1750 = _1439;
        _1751 = _1439;
        _1752 = _1439;
        _1753 = _1439;
        _1754 = _1439;
        _1755 = _1439;
        _1756 = _1439;
        _1757 = _1439;
        _1758 = _1439;
        _1759 = _1439;
        _1760 = _1439;
        _1761 = 0.0;
        _1762 = 0.0;
        _1763 = 0.0;
    }
    float _1773 = (cbModelParam._m0[1u].x * (_1761 - _1451)) + _1451;
    float _1774 = (cbModelParam._m0[1u].x * (_1762 - _1452)) + _1452;
    float _1775 = (cbModelParam._m0[1u].x * (_1763 - _1453)) + _1453;
    float _1796 = fma(_1775, cbSceneParam._m0[89u].z, fma(_1774, cbSceneParam._m0[89u].y, _1773 * cbSceneParam._m0[89u].x));
    float _1799 = fma(_1775, cbSceneParam._m0[90u].z, fma(_1774, cbSceneParam._m0[90u].y, _1773 * cbSceneParam._m0[90u].x));
    float _1802 = fma(_1775, cbSceneParam._m0[91u].z, fma(_1774, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1773));
    float _1817 = _1048 * 0.5;
    float _1818 = _1049 * 0.5;
    float _1819 = _1050 * 0.5;
    float _1820 = dot(vec4(_1817, _1818, _1819, 1.0), vec4(_1751, _1754, _1757, _1760));
    float _1823 = dot(vec4(_1817, _1818, _1819, 1.0), vec4(_1750, _1753, _1756, _1759));
    float _1826 = dot(vec4(_1817, _1818, _1819, 1.0), vec4(_1749, _1752, _1755, _1758));
    float _1860;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1833 = dot(vec4(_1817, _1818, _1819, 1.0), vec4(_1438, _1442, _1445, _1448));
        float _1837 = dot(vec4(_1817, _1818, _1819, 1.0), vec4(_1440, _1443, _1446, _1449));
        float _1841 = dot(vec4(_1817, _1818, _1819, 1.0), vec4(_1441, _1444, _1447, _1450));
        float _1848 = dot(vec4(cbModelParam._m0[39u]), vec4(_1817, _1818, _1819, 1.0));
        _1860 = dot(vec3(isnan(0.0) ? _1841 : (isnan(_1841) ? 0.0 : max(_1841, 0.0)), isnan(0.0) ? _1837 : (isnan(_1837) ? 0.0 : max(_1837, 0.0)), isnan(0.0) ? _1833 : (isnan(_1833) ? 0.0 : max(_1833, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1848) ? 0.0 : (isnan(0.0) ? _1848 : max(0.0, _1848))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1860 = 1.0;
    }
    float _1871;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1862 = dot(vec4(cbModelParam._m0[40u]), vec4(_1817, _1818, _1819, 1.0));
        _1871 = dot(vec3(isnan(0.0) ? _1820 : (isnan(_1820) ? 0.0 : max(_1820, 0.0)), isnan(0.0) ? _1823 : (isnan(_1823) ? 0.0 : max(_1823, 0.0)), isnan(0.0) ? _1826 : (isnan(_1826) ? 0.0 : max(_1826, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1862) ? 0.0 : (isnan(0.0) ? _1862 : max(0.0, _1862))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1871 = 1.0;
    }
    float _1875 = (_1871 * cbModelParam._m0[1u].x) + (_1860 * (1.0 - cbModelParam._m0[1u].x));
    float _1885 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _881);
    float _1886 = isnan(_1885) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1885 : min(cbModelParam._m0[25u].z, _1885));
    float _1967;
    float _1969;
    float _1971;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1934 = fma(_1109, cbModelParam._m0[13u].z, fma(_1105, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1101)) + cbModelParam._m0[13u].w;
        float _1938 = fma(_1109, cbModelParam._m0[14u].z, fma(_1105, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1101)) + cbModelParam._m0[14u].w;
        float _1942 = fma(_1109, cbModelParam._m0[15u].z, fma(_1105, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1101)) + cbModelParam._m0[15u].w;
        float _1945 = fma(_1050, cbModelParam._m0[13u].z, fma(_1049, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1048));
        float _1948 = fma(_1050, cbModelParam._m0[14u].z, fma(_1049, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1048));
        float _1951 = fma(_1050, cbModelParam._m0[15u].z, fma(_1049, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1048));
        float _1979;
        if (_1945 > 0.0)
        {
            _1979 = abs((1.0 - _1934) / _1945);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1945 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1934 + 1.0) / _1945);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1979 = frontier_phi_17_15_ladder;
        }
        float _2149;
        if (_1948 > 0.0)
        {
            _2149 = abs((1.0 - _1938) / _1948);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1948 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1938 + 1.0) / _1948);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2149 = frontier_phi_26_22_ladder;
        }
        float _2444;
        if (_1951 > 0.0)
        {
            _2444 = abs((1.0 - _1942) / _1951);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1951 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1942 + 1.0) / _1951);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2444 = frontier_phi_38_33_ladder;
        }
        float _2446 = isnan(_2149) ? _1979 : (isnan(_1979) ? _2149 : min(_1979, _2149));
        float _2447 = isnan(_2444) ? _2446 : (isnan(_2446) ? _2444 : min(_2446, _2444));
        float _2451 = (_2447 * _1945) + _1934;
        float _2452 = (_2447 * _1948) + _1938;
        float _2453 = (_2447 * _1951) + _1942;
        float _2454 = _2447 * 9.9999997473787516355514526367188e-05;
        float _2456 = (-1.0) - _2454;
        float _2458 = _2454 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2453 > _2458) || ((_2453 < _2456) || ((_2452 > _2458) || ((_2452 < _2456) || ((_2451 < _2456) || (_2451 > _2458))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2598 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2453, cbModelParam._m0[9u].z, fma(_2452, cbModelParam._m0[9u].y, _2451 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2453, cbModelParam._m0[10u].z, fma(_2452, cbModelParam._m0[10u].y, _2451 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2453, cbModelParam._m0[11u].z, fma(_2452, cbModelParam._m0[11u].y, _2451 * cbModelParam._m0[11u].x))), _1886);
            frontier_phi_16_38_ladder = _2598.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2598.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2598.x * cbModelParam._m0[1u].y;
        }
        _1967 = frontier_phi_16_38_ladder_2;
        _1969 = frontier_phi_16_38_ladder_1;
        _1971 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1955 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1048, _1049, _1050), _1886);
        _1967 = _1955.x * cbModelParam._m0[1u].y;
        _1969 = _1955.y * cbModelParam._m0[1u].y;
        _1971 = _1955.z * cbModelParam._m0[1u].y;
    }
    float _1975 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _881);
    float _1976 = isnan(_1975) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1975 : min(cbModelParam._m0[25u].w, _1975));
    float _2066;
    float _2068;
    float _2070;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2030 = fma(_1109, cbModelParam._m0[21u].z, fma(_1105, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1101)) + cbModelParam._m0[21u].w;
        float _2034 = fma(_1109, cbModelParam._m0[22u].z, fma(_1105, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1101)) + cbModelParam._m0[22u].w;
        float _2038 = fma(_1109, cbModelParam._m0[23u].z, fma(_1105, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1101)) + cbModelParam._m0[23u].w;
        float _2041 = fma(_1050, cbModelParam._m0[21u].z, fma(_1049, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1048));
        float _2044 = fma(_1050, cbModelParam._m0[22u].z, fma(_1049, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1048));
        float _2047 = fma(_1050, cbModelParam._m0[23u].z, fma(_1049, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1048));
        float _2154;
        if (_2041 > 0.0)
        {
            _2154 = abs((1.0 - _2030) / _2041);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2041 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2030 + 1.0) / _2041);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2154 = frontier_phi_28_24_ladder;
        }
        float _2471;
        if (_2044 > 0.0)
        {
            _2471 = abs((1.0 - _2034) / _2044);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2044 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2034 + 1.0) / _2044);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2471 = frontier_phi_40_35_ladder;
        }
        float _2798;
        if (_2047 > 0.0)
        {
            _2798 = abs((1.0 - _2038) / _2047);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_2047 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_2038 + 1.0) / _2047);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2798 = frontier_phi_50_47_ladder;
        }
        float _2800 = isnan(_2471) ? _2154 : (isnan(_2154) ? _2471 : min(_2154, _2471));
        float _2801 = isnan(_2798) ? _2800 : (isnan(_2800) ? _2798 : min(_2800, _2798));
        float _2805 = (_2801 * _2041) + _2030;
        float _2806 = (_2801 * _2044) + _2034;
        float _2807 = (_2801 * _2047) + _2038;
        float _2808 = _2801 * 9.9999997473787516355514526367188e-05;
        float _2809 = (-1.0) - _2808;
        float _2811 = _2808 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2807 > _2811) || ((_2807 < _2809) || ((_2806 > _2811) || ((_2806 < _2809) || ((_2805 < _2809) || (_2805 > _2811))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2925 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2807, cbModelParam._m0[17u].z, fma(_2806, cbModelParam._m0[17u].y, _2805 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2807, cbModelParam._m0[18u].z, fma(_2806, cbModelParam._m0[18u].y, _2805 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2807, cbModelParam._m0[19u].z, fma(_2806, cbModelParam._m0[19u].y, _2805 * cbModelParam._m0[19u].x))), _1976);
            frontier_phi_25_50_ladder = _2925.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2925.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2925.x * cbModelParam._m0[1u].z;
        }
        _2066 = frontier_phi_25_50_ladder_2;
        _2068 = frontier_phi_25_50_ladder_1;
        _2070 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _2050 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1048, _1049, _1050), _1976);
        _2066 = _2050.x * cbModelParam._m0[1u].z;
        _2068 = _2050.y * cbModelParam._m0[1u].z;
        _2070 = _2050.z * cbModelParam._m0[1u].z;
    }
    float _2082 = ((((1.0 - _1069) * ((_1056 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1069 * _1056)) * _1040;
    float _2083 = _2082 * ((cbModelParam._m0[1u].w * (_2066 - _1967)) + _1967);
    float _2084 = _2082 * ((cbModelParam._m0[1u].w * (_2068 - _1969)) + _1969);
    float _2085 = _2082 * ((cbModelParam._m0[1u].w * (_2070 - _1971)) + _1971);
    float _2088 = fma(_2085, cbSceneParam._m0[89u].z, fma(_2084, cbSceneParam._m0[89u].y, _2083 * cbSceneParam._m0[89u].x));
    float _2091 = fma(_2085, cbSceneParam._m0[90u].z, fma(_2084, cbSceneParam._m0[90u].y, _2083 * cbSceneParam._m0[90u].x));
    float _2094 = fma(_2085, cbSceneParam._m0[91u].z, fma(_2084, cbSceneParam._m0[91u].y, _2083 * cbSceneParam._m0[91u].x));
    float _2128 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2132 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2136 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2140 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2141 = _2128 / _2140;
    float _2142 = _2132 / _2140;
    float _2143 = _2136 / _2140;
    float _2290;
    float _2291;
    float _2292;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2170 = ((uint(_2143 > cbSceneParam._m0[59u].y) + uint(_2143 > cbSceneParam._m0[59u].x)) + uint(_2143 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2171 = _2170 + 43u;
        uint _2179 = _2170 + 44u;
        uint _2187 = _2170 + 45u;
        uint _2195 = _2170 + 46u;
        float _2206 = fma(_2140, cbSceneParam._m0[_2171].w, fma(_2136, cbSceneParam._m0[_2171].z, fma(_2132, cbSceneParam._m0[_2171].y, _2128 * cbSceneParam._m0[_2171].x)));
        float _2210 = fma(_2140, cbSceneParam._m0[_2179].w, fma(_2136, cbSceneParam._m0[_2179].z, fma(_2132, cbSceneParam._m0[_2179].y, _2128 * cbSceneParam._m0[_2179].x)));
        float _2218 = fma(_2140, cbSceneParam._m0[_2195].w, fma(_2136, cbSceneParam._m0[_2195].z, fma(_2132, cbSceneParam._m0[_2195].y, _2128 * cbSceneParam._m0[_2195].x)));
        float _2223 = cbSceneParam._m0[33u].z * _2218;
        float _2225 = cbSceneParam._m0[33u].w * _2218;
        float _2228 = fma(_2140, cbSceneParam._m0[_2187].w, fma(_2136, cbSceneParam._m0[_2187].z, fma(_2132, cbSceneParam._m0[_2187].y, _2128 * cbSceneParam._m0[_2187].x))) / _2218;
        float _2276 = (cbSceneParam._m0[33u].x - sqrt(((_2142 * _2142) + (_2141 * _2141)) + (_2143 * _2143))) * cbSceneParam._m0[33u].y;
        float _4692 = isnan(0.0) ? _2276 : (isnan(_2276) ? 0.0 : max(_2276, 0.0));
        float _2283 = (isnan(1.0) ? _4692 : (isnan(_4692) ? 1.0 : min(_4692, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2223 + _2206) / _2218, (_2225 + _2210) / _2218), _2228), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2225 + _2206) / _2218, (_2210 - _2223) / _2218), _2228), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2206 - _2223) / _2218, (_2210 - _2225) / _2218), _2228), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2206 - _2225) / _2218, (_2223 + _2210) / _2218), _2228), 0.0)).x), vec4(0.25)));
        _2290 = 1.0 - (_2283 * cbSceneParam._m0[34u].x);
        _2291 = 1.0 - (_2283 * cbSceneParam._m0[34u].y);
        _2292 = 1.0 - (_2283 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2290 = 1.0;
        _2291 = 1.0;
        _2292 = 1.0;
    }
    float _2356;
    float _2358;
    float _2360;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2344 = fma(_2140, cbSceneParam._m0[63u].w, fma(_2136, cbSceneParam._m0[63u].z, fma(_2132, cbSceneParam._m0[63u].y, _2128 * cbSceneParam._m0[63u].x)));
        float _2345 = fma(_2140, cbSceneParam._m0[60u].w, fma(_2136, cbSceneParam._m0[60u].z, fma(_2132, cbSceneParam._m0[60u].y, _2128 * cbSceneParam._m0[60u].x))) / _2344;
        float _2346 = fma(_2140, cbSceneParam._m0[61u].w, fma(_2136, cbSceneParam._m0[61u].z, fma(_2132, cbSceneParam._m0[61u].y, _2128 * cbSceneParam._m0[61u].x))) / _2344;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2345 >= cbSceneParam._m0[64u].x) && (_2346 >= cbSceneParam._m0[64u].y)) && (_2345 <= cbSceneParam._m0[64u].z)) && (_2346 <= cbSceneParam._m0[64u].w))
        {
            float _2484 = fma(_2140, cbSceneParam._m0[62u].w, fma(_2136, cbSceneParam._m0[62u].z, fma(_2132, cbSceneParam._m0[62u].y, _2128 * cbSceneParam._m0[62u].x))) / _2344;
            float _2488 = isnan(cbSceneParam._m0[41u].w) ? _2484 : (isnan(_2484) ? cbSceneParam._m0[41u].w : max(_2484, cbSceneParam._m0[41u].w));
            float _2531 = (cbSceneParam._m0[33u].x - sqrt(((_2142 * _2142) + (_2141 * _2141)) + (_2143 * _2143))) * cbSceneParam._m0[33u].y;
            float _4708 = isnan(0.0) ? _2531 : (isnan(_2531) ? 0.0 : max(_2531, 0.0));
            float _2538 = (isnan(1.0) ? _4708 : (isnan(_4708) ? 1.0 : min(_4708, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2345, cbSceneParam._m0[33u].w + _2346), _2488), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2345, _2346 - cbSceneParam._m0[33u].z), _2488), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2345 - cbSceneParam._m0[33u].z, _2346 - cbSceneParam._m0[33u].w), _2488), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2345 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2346), _2488), 0.0)).x), vec4(0.25)));
            float _2542 = 1.0 - (_2538 * cbSceneParam._m0[34u].x);
            float _2543 = 1.0 - (_2538 * cbSceneParam._m0[34u].y);
            float _2544 = 1.0 - (_2538 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2544) ? _2292 : (isnan(_2292) ? _2544 : min(_2292, _2544));
            frontier_phi_37_36_ladder_1 = isnan(_2543) ? _2291 : (isnan(_2291) ? _2543 : min(_2291, _2543));
            frontier_phi_37_36_ladder_2 = isnan(_2542) ? _2290 : (isnan(_2290) ? _2542 : min(_2290, _2542));
        }
        else
        {
            frontier_phi_37_36_ladder = _2292;
            frontier_phi_37_36_ladder_1 = _2291;
            frontier_phi_37_36_ladder_2 = _2290;
        }
        _2356 = frontier_phi_37_36_ladder_2;
        _2358 = frontier_phi_37_36_ladder_1;
        _2360 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2356 = _2290;
        _2358 = _2291;
        _2360 = _2292;
    }
    uvec4 _2365 = floatBitsToUint(cbInstanceData._m0[_287 + 5u]);
    uint _2367 = _2365.x * 14u;
    uint _2368 = _2367 + 13u;
    float _2375 = _1040 + (-1.0);
    float _2380 = (cbLight._m0[_2368].x * _2375) + 1.0;
    float _2381 = (cbLight._m0[_2368].y * _2375) + 1.0;
    float _2382 = (cbLight._m0[_2368].z * _2375) + 1.0;
    float _2383 = (cbLight._m0[_2368].w * _2375) + 1.0;
    uint _2384 = _2367 + 5u;
    float _2390 = isnan(1.0) ? _2381 : (isnan(_2381) ? 1.0 : min(_2381, 1.0));
    uint _2394 = _2367 + 4u;
    float _2403 = isnan(1.0) ? _2380 : (isnan(_2380) ? 1.0 : min(_2380, 1.0));
    uint _2407 = _2367 | 1u;
    float _2418 = dot(vec3(cbLight._m0[_2367].xyz), vec3(_878, _879, _880));
    float _2421 = dot(vec3(cbLight._m0[_2407].xyz), vec3(_878, _879, _880));
    float _4744 = isnan(0.0) ? _2418 : (isnan(_2418) ? 0.0 : max(_2418, 0.0));
    float _4755 = isnan(0.0) ? _2421 : (isnan(_2421) ? 0.0 : max(_2421, 0.0));
    float _2426 = (isnan(1.0) ? _4744 : (isnan(_4744) ? 1.0 : min(_4744, 1.0))) * 0.3183098733425140380859375;
    float _2428 = (isnan(1.0) ? _4755 : (isnan(_4755) ? 1.0 : min(_4755, 1.0))) * 0.3183098733425140380859375;
    float _2435 = ((cbLight._m0[_2384].x * _2390) * _2428) + (((cbLight._m0[_2394].x * _2356) * _2403) * _2426);
    float _2436 = ((_2390 * cbLight._m0[_2384].y) * _2428) + (((cbLight._m0[_2394].y * _2358) * _2403) * _2426);
    float _2437 = ((_2390 * cbLight._m0[_2384].z) * _2428) + (((cbLight._m0[_2394].z * _2360) * _2403) * _2426);
    uvec4 _2441 = floatBitsToUint(cbLight._m0[_2367 + 12u]);
    bool _2443 = _2441.x == 0u;
    float _2545;
    float _2547;
    float _2549;
    if (_2443)
    {
        _2545 = _2435;
        _2547 = _2436;
        _2549 = _2437;
    }
    else
    {
        uint _2553 = _2367 + 6u;
        float _2569 = (dot(vec3(cbLight._m0[_2367 + 2u].xyz), vec3(_878, _879, _880)) * 0.5) + 0.5;
        float _2570 = _2569 * _2569;
        float _4766 = isnan(0.0) ? _2570 : (isnan(_2570) ? 0.0 : max(_2570, 0.0));
        float _2571 = isnan(1.0) ? _4766 : (isnan(_4766) ? 1.0 : min(_4766, 1.0));
        float _2572 = isnan(1.0) ? _2382 : (isnan(_2382) ? 1.0 : min(_2382, 1.0));
        _2545 = (((cbLight._m0[_2553].x * 0.3183098733425140380859375) * _2571) * _2572) + _2435;
        _2547 = (((cbLight._m0[_2553].y * 0.3183098733425140380859375) * _2571) * _2572) + _2436;
        _2549 = (((cbLight._m0[_2553].z * 0.3183098733425140380859375) * _2571) * _2572) + _2437;
    }
    bool _2552 = _2441.y == 0u;
    float _2607;
    float _2609;
    float _2611;
    if (_2552)
    {
        _2607 = _2545;
        _2609 = _2547;
        _2611 = _2549;
    }
    else
    {
        uint _2769 = _2367 + 7u;
        float _2785 = (dot(vec3(cbLight._m0[_2367 + 3u].xyz), vec3(_878, _879, _880)) * 0.5) + 0.5;
        float _2786 = _2785 * _2785;
        float _4782 = isnan(0.0) ? _2786 : (isnan(_2786) ? 0.0 : max(_2786, 0.0));
        float _2787 = isnan(1.0) ? _4782 : (isnan(_4782) ? 1.0 : min(_4782, 1.0));
        float _2788 = isnan(1.0) ? _2383 : (isnan(_2383) ? 1.0 : min(_2383, 1.0));
        _2607 = (((cbLight._m0[_2769].x * 0.3183098733425140380859375) * _2787) * _2788) + _2545;
        _2609 = (((cbLight._m0[_2769].y * 0.3183098733425140380859375) * _2787) * _2788) + _2547;
        _2611 = (((cbLight._m0[_2769].z * 0.3183098733425140380859375) * _2787) * _2788) + _2549;
    }
    uint _2614 = _2367 + 8u;
    float _2627 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2367].w)) * _881) * 0.949999988079071044921875);
    float _2628 = _2627 * _2627;
    float _2629 = cbLight._m0[_2367].x + _957;
    float _2630 = cbLight._m0[_2367].y + _958;
    float _2631 = cbLight._m0[_2367].z + _959;
    float _2635 = inversesqrt(dot(vec3(_2629, _2630, _2631), vec3(_2629, _2630, _2631)));
    float _2636 = _2635 * _2629;
    float _2637 = _2635 * _2630;
    float _2638 = _2635 * _2631;
    float _2639 = dot(vec3(_878, _879, _880), vec3(cbLight._m0[_2367].xyz));
    float _4798 = isnan(0.0) ? _2639 : (isnan(_2639) ? 0.0 : max(_2639, 0.0));
    float _2642 = isnan(1.0) ? _4798 : (isnan(_4798) ? 1.0 : min(_4798, 1.0));
    float _4809 = isnan(0.0) ? _1041 : (isnan(_1041) ? 0.0 : max(_1041, 0.0));
    float _2643 = isnan(1.0) ? _4809 : (isnan(_4809) ? 1.0 : min(_4809, 1.0));
    float _2644 = dot(vec3(_878, _879, _880), vec3(_2636, _2637, _2638));
    float _4820 = isnan(0.0) ? _2644 : (isnan(_2644) ? 0.0 : max(_2644, 0.0));
    float _2647 = isnan(1.0) ? _4820 : (isnan(_4820) ? 1.0 : min(_4820, 1.0));
    float _2648 = dot(vec3(cbLight._m0[_2367].xyz), vec3(_2636, _2637, _2638));
    float _4831 = isnan(0.0) ? _2648 : (isnan(_2648) ? 0.0 : max(_2648, 0.0));
    float _2652 = _2628 * _2628;
    float _2656 = ((_2647 * _2647) * (_2652 + (-1.0))) + 1.0;
    float _2667 = (exp2(log2(1.0 - (isnan(1.0) ? _4831 : (isnan(_4831) ? 1.0 : min(_4831, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2668 = 1.0 - _2628;
    float _2679 = (0.5 / (((_2643 * ((_2642 * _2668) + _2628)) + 9.9999999392252902907785028219223e-09) + (((_2643 * _2668) + _2628) * _2642))) * _2642;
    float _4842 = isnan(0.0) ? _2679 : (isnan(_2679) ? 0.0 : max(_2679, 0.0));
    float _2681 = (isnan(1.0) ? _4842 : (isnan(_4842) ? 1.0 : min(_4842, 1.0))) * (_2652 / ((_2656 * _2656) * 3.141590118408203125));
    uint _2695 = _2367 + 9u;
    float _2706 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2407].w)) * _881) * 0.949999988079071044921875);
    float _2707 = _2706 * _2706;
    float _2708 = cbLight._m0[_2407].x + _957;
    float _2709 = cbLight._m0[_2407].y + _958;
    float _2710 = cbLight._m0[_2407].z + _959;
    float _2714 = inversesqrt(dot(vec3(_2708, _2709, _2710), vec3(_2708, _2709, _2710)));
    float _2715 = _2714 * _2708;
    float _2716 = _2714 * _2709;
    float _2717 = _2714 * _2710;
    float _2718 = dot(vec3(_878, _879, _880), vec3(cbLight._m0[_2407].xyz));
    float _4853 = isnan(0.0) ? _2718 : (isnan(_2718) ? 0.0 : max(_2718, 0.0));
    float _2721 = isnan(1.0) ? _4853 : (isnan(_4853) ? 1.0 : min(_4853, 1.0));
    float _2722 = dot(vec3(_878, _879, _880), vec3(_2715, _2716, _2717));
    float _4864 = isnan(0.0) ? _2722 : (isnan(_2722) ? 0.0 : max(_2722, 0.0));
    float _2725 = isnan(1.0) ? _4864 : (isnan(_4864) ? 1.0 : min(_4864, 1.0));
    float _2726 = dot(vec3(cbLight._m0[_2407].xyz), vec3(_2715, _2716, _2717));
    float _4875 = isnan(0.0) ? _2726 : (isnan(_2726) ? 0.0 : max(_2726, 0.0));
    float _2730 = _2707 * _2707;
    float _2734 = ((_2725 * _2725) * (_2730 + (-1.0))) + 1.0;
    float _2743 = (exp2(log2(1.0 - (isnan(1.0) ? _4875 : (isnan(_4875) ? 1.0 : min(_4875, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2744 = 1.0 - _2707;
    float _2754 = (0.5 / (((_2643 * ((_2721 * _2744) + _2707)) + 9.9999999392252902907785028219223e-09) + (((_2643 * _2744) + _2707) * _2721))) * _2721;
    float _4886 = isnan(0.0) ? _2754 : (isnan(_2754) ? 0.0 : max(_2754, 0.0));
    float _2756 = (isnan(1.0) ? _4886 : (isnan(_4886) ? 1.0 : min(_4886, 1.0))) * (_2730 / ((_2734 * _2734) * 3.141590118408203125));
    float _2766 = (((_2743 * cbLight._m0[_2695].x) * _2756) * _2390) + ((((cbLight._m0[_2614].x * _2356) * _2667) * _2681) * _2403);
    float _2767 = (((_2743 * cbLight._m0[_2695].y) * _2756) * _2390) + ((((cbLight._m0[_2614].y * _2358) * _2667) * _2681) * _2403);
    float _2768 = (((_2743 * cbLight._m0[_2695].z) * _2756) * _2390) + ((((cbLight._m0[_2614].z * _2360) * _2667) * _2681) * _2403);
    float _2824;
    float _2826;
    float _2828;
    if (_2443)
    {
        _2824 = _2766;
        _2826 = _2767;
        _2828 = _2768;
    }
    else
    {
        uint _2830 = _2367 + 2u;
        uint _2834 = _2367 + 10u;
        float _2848 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2830].w)) * _881) * 0.949999988079071044921875);
        float _2849 = _2848 * _2848;
        float _2850 = cbLight._m0[_2830].x + _957;
        float _2851 = cbLight._m0[_2830].y + _958;
        float _2852 = cbLight._m0[_2830].z + _959;
        float _2856 = inversesqrt(dot(vec3(_2850, _2851, _2852), vec3(_2850, _2851, _2852)));
        float _2857 = _2856 * _2850;
        float _2858 = _2856 * _2851;
        float _2859 = _2856 * _2852;
        float _2860 = dot(vec3(_878, _879, _880), vec3(cbLight._m0[_2830].xyz));
        float _4897 = isnan(0.0) ? _2860 : (isnan(_2860) ? 0.0 : max(_2860, 0.0));
        float _2863 = isnan(1.0) ? _4897 : (isnan(_4897) ? 1.0 : min(_4897, 1.0));
        float _2864 = dot(vec3(_878, _879, _880), vec3(_2857, _2858, _2859));
        float _4908 = isnan(0.0) ? _2864 : (isnan(_2864) ? 0.0 : max(_2864, 0.0));
        float _2867 = isnan(1.0) ? _4908 : (isnan(_4908) ? 1.0 : min(_4908, 1.0));
        float _2868 = dot(vec3(cbLight._m0[_2830].xyz), vec3(_2857, _2858, _2859));
        float _4919 = isnan(0.0) ? _2868 : (isnan(_2868) ? 0.0 : max(_2868, 0.0));
        float _2872 = _2849 * _2849;
        float _2876 = ((_2867 * _2867) * (_2872 + (-1.0))) + 1.0;
        float _2885 = (exp2(log2(1.0 - (isnan(1.0) ? _4919 : (isnan(_4919) ? 1.0 : min(_4919, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2886 = 1.0 - _2849;
        float _2896 = (0.5 / (((_2643 * ((_2863 * _2886) + _2849)) + 9.9999999392252902907785028219223e-09) + (((_2643 * _2886) + _2849) * _2863))) * _2863;
        float _4930 = isnan(0.0) ? _2896 : (isnan(_2896) ? 0.0 : max(_2896, 0.0));
        float _2898 = (isnan(1.0) ? _4930 : (isnan(_4930) ? 1.0 : min(_4930, 1.0))) * (_2872 / ((_2876 * _2876) * 3.141590118408203125));
        float _2899 = isnan(1.0) ? _2382 : (isnan(_2382) ? 1.0 : min(_2382, 1.0));
        _2824 = (((_2885 * cbLight._m0[_2834].x) * _2898) * _2899) + _2766;
        _2826 = (((_2885 * cbLight._m0[_2834].y) * _2898) * _2899) + _2767;
        _2828 = (((_2885 * cbLight._m0[_2834].z) * _2898) * _2899) + _2768;
    }
    float _2930;
    float _2932;
    float _2934;
    if (_2552)
    {
        _2930 = _2824;
        _2932 = _2826;
        _2934 = _2828;
    }
    else
    {
        uint _2941 = _2367 + 3u;
        uint _2945 = _2367 + 11u;
        float _2959 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2941].w)) * _881) * 0.949999988079071044921875);
        float _2960 = _2959 * _2959;
        float _2961 = cbLight._m0[_2941].x + _957;
        float _2962 = cbLight._m0[_2941].y + _958;
        float _2963 = cbLight._m0[_2941].z + _959;
        float _2967 = inversesqrt(dot(vec3(_2961, _2962, _2963), vec3(_2961, _2962, _2963)));
        float _2968 = _2967 * _2961;
        float _2969 = _2967 * _2962;
        float _2970 = _2967 * _2963;
        float _2971 = dot(vec3(_878, _879, _880), vec3(cbLight._m0[_2941].xyz));
        float _4946 = isnan(0.0) ? _2971 : (isnan(_2971) ? 0.0 : max(_2971, 0.0));
        float _2974 = isnan(1.0) ? _4946 : (isnan(_4946) ? 1.0 : min(_4946, 1.0));
        float _2975 = dot(vec3(_878, _879, _880), vec3(_2968, _2969, _2970));
        float _4957 = isnan(0.0) ? _2975 : (isnan(_2975) ? 0.0 : max(_2975, 0.0));
        float _2978 = isnan(1.0) ? _4957 : (isnan(_4957) ? 1.0 : min(_4957, 1.0));
        float _2979 = dot(vec3(cbLight._m0[_2941].xyz), vec3(_2968, _2969, _2970));
        float _4968 = isnan(0.0) ? _2979 : (isnan(_2979) ? 0.0 : max(_2979, 0.0));
        float _2983 = _2960 * _2960;
        float _2987 = ((_2978 * _2978) * (_2983 + (-1.0))) + 1.0;
        float _2996 = (exp2(log2(1.0 - (isnan(1.0) ? _4968 : (isnan(_4968) ? 1.0 : min(_4968, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2997 = 1.0 - _2960;
        float _3007 = (0.5 / (((_2643 * ((_2974 * _2997) + _2960)) + 9.9999999392252902907785028219223e-09) + (((_2643 * _2997) + _2960) * _2974))) * _2974;
        float _4979 = isnan(0.0) ? _3007 : (isnan(_3007) ? 0.0 : max(_3007, 0.0));
        float _3009 = (isnan(1.0) ? _4979 : (isnan(_4979) ? 1.0 : min(_4979, 1.0))) * (_2983 / ((_2987 * _2987) * 3.141590118408203125));
        float _3010 = isnan(1.0) ? _2383 : (isnan(_2383) ? 1.0 : min(_2383, 1.0));
        _2930 = (((_2996 * cbLight._m0[_2945].x) * _3009) * _3010) + _2824;
        _2932 = (((_2996 * cbLight._m0[_2945].y) * _3009) * _3010) + _2826;
        _2934 = (((_2996 * cbLight._m0[_2945].z) * _3009) * _3010) + _2828;
    }
    float _3076;
    float _3078;
    float _3080;
    float _3082;
    float _3084;
    float _3086;
    if (_2365.y == 0u)
    {
        uvec4 _3031 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3032 = _3031.x;
        uint _3043 = uint((float(_3031.y) * floor(float(uint(cbSceneParam._m0[85u].y * _978) / _3032))) + floor(float(uint(cbSceneParam._m0[85u].x * _977) / _3032)));
        float _3053 = (log2(_2143 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3054 = isnan(0.0) ? _3053 : (isnan(_3053) ? 0.0 : max(_3053, 0.0));
        uint _3057 = uint(isnan(14.0) ? _3054 : (isnan(_3054) ? 14.0 : min(_3054, 14.0)));
        uvec4 _3062 = texelFetch(g_lightClusterGridBuffer, int(((_3057 << 2u) + (_3043 << 6u)) >> 2u));
        uint _3063 = _3062.x;
        uint _3064 = _3031.z;
        float _3143;
        float _3145;
        float _3147;
        float _3149;
        float _3151;
        float _3153;
        if (((((1u << ((_3064 >> 4u) & 15u)) + 4294967295u) & _3063) == 0u) || ((_3064 & 240u) == 0u))
        {
            _3143 = 0.0;
            _3145 = 0.0;
            _3147 = 0.0;
            _3149 = 0.0;
            _3151 = 0.0;
            _3153 = 0.0;
        }
        else
        {
            float _3144;
            float _3146;
            float _3148;
            float _3150;
            float _3152;
            float _3154;
            float _3296 = 0.0;
            float _3297 = 0.0;
            float _3298 = 0.0;
            float _3299 = 0.0;
            float _3300 = 0.0;
            float _3301 = 0.0;
            uint _3302 = 0u;
            uint _3311;
            bool _3312;
            for (;;)
            {
                _3311 = texelFetch(g_lightClassification, int((((_3057 << 5u) + (_3043 << 9u)) + (_3302 << 2u)) >> 2u)).x;
                _3312 = _3311 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3312)
                {
                    frontier_phi_71_pred = _3301;
                    frontier_phi_71_pred_1 = _3300;
                    frontier_phi_71_pred_2 = _3299;
                    frontier_phi_71_pred_3 = _3298;
                    frontier_phi_71_pred_4 = _3297;
                    frontier_phi_71_pred_5 = _3296;
                }
                else
                {
                    float _3441;
                    float _3442;
                    float _3443;
                    float _3444;
                    float _3445;
                    float _3446;
                    uint _3447;
                    _3441 = _3296;
                    _3442 = _3297;
                    _3443 = _3298;
                    _3444 = _3299;
                    _3445 = _3300;
                    _3446 = _3301;
                    _3447 = _3311;
                    float _3368;
                    float _3369;
                    float _3370;
                    float _3371;
                    float _3372;
                    float _3373;
                    for (;;)
                    {
                        uint _3451 = uint(findLSB(_3447)) + (_3302 << 5u);
                        uint _3448 = (_3447 + 4294967295u) & _3447;
                        uint _3453 = _3451 * 48u;
                        vec4 _3467 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3453)).x, texelFetch(g_PointLightRenderingBuffer, int(_3453 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3453 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3453 + 3u)).x));
                        uint _3473 = (_3451 * 48u) + 4u;
                        vec4 _3486 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3473)).x, texelFetch(g_PointLightRenderingBuffer, int(_3473 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3473 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3473 + 3u)).x));
                        uint _3492 = (_3451 * 48u) + 8u;
                        vec3 _3503 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3492)).x, texelFetch(g_PointLightRenderingBuffer, int(_3492 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3492 + 2u)).x));
                        float _3507 = _3467.x - _2141;
                        float _3508 = _3467.y - _2142;
                        float _3509 = _3467.z - _2143;
                        float _3510 = dot(vec3(_3507, _3508, _3509), vec3(_3507, _3508, _3509));
                        float _3513 = inversesqrt(_3510);
                        float _3514 = _3513 * _3507;
                        float _3515 = _3513 * _3508;
                        float _3516 = _3513 * _3509;
                        float _3517 = dot(vec3(_996, _999, _1002), vec3(_3514, _3515, _3516));
                        float _3522 = 1.0 - (_3510 * _3467.w);
                        float _5005 = isnan(0.0) ? _3522 : (isnan(_3522) ? 0.0 : max(_3522, 0.0));
                        float _3523 = isnan(1.0) ? _5005 : (isnan(_5005) ? 1.0 : min(_5005, 1.0));
                        float _3524 = sqrt(_3510) * _3486.w;
                        float _3527 = 1.39999997615814208984375 / (_3524 + 1.39999997615814208984375);
                        float _3528 = _3527 * _3527;
                        float _3531 = ((1.0 - _3528) * _3517) + _3528;
                        float _3534 = _3524 * _3524;
                        float _3538 = ((isnan(0.0) ? _3531 : (isnan(_3531) ? 0.0 : max(_3531, 0.0))) * _3523) / ((_3534 * 0.699999988079071044921875) + 1.0);
                        float _3542 = (-0.0) - _2141;
                        float _3543 = (-0.0) - _2142;
                        float _3544 = (-0.0) - _2143;
                        float _3548 = inversesqrt(dot(vec3(_3542, _3543, _3544), vec3(_3542, _3543, _3544)));
                        float _3549 = _3548 * _3542;
                        float _3550 = _3548 * _3543;
                        float _3551 = _3548 * _3544;
                        float _3558 = exp2(log2(1.0 / ((_3534 * 3.5) + 5.0)) * 0.25);
                        float _3559 = 1.0 - _1056;
                        float _3566 = sqrt(1.0 - ((1.0 - (_3559 * _3559)) * (1.0 - (_3558 * _3558))));
                        float _3567 = _3566 * _3566;
                        float _3568 = _3567 * _3567;
                        float _3569 = _3549 + _3514;
                        float _3570 = _3550 + _3515;
                        float _3571 = _3551 + _3516;
                        float _3575 = inversesqrt(dot(vec3(_3569, _3570, _3571), vec3(_3569, _3570, _3571)));
                        float _3579 = dot(vec3(_996, _999, _1002), vec3(_3549, _3550, _3551));
                        float _5021 = isnan(0.0) ? _3579 : (isnan(_3579) ? 0.0 : max(_3579, 0.0));
                        float _3582 = isnan(1.0) ? _5021 : (isnan(_5021) ? 1.0 : min(_5021, 1.0));
                        float _3583 = dot(vec3(_996, _999, _1002), vec3(_3575 * _3569, _3575 * _3570, _3575 * _3571));
                        float _5032 = isnan(0.0) ? _3583 : (isnan(_3583) ? 0.0 : max(_3583, 0.0));
                        float _3586 = isnan(1.0) ? _5032 : (isnan(_5032) ? 1.0 : min(_5032, 1.0));
                        float _3590 = ((_3586 * _3586) * (_3568 + (-1.0))) + 1.0;
                        float _3591 = _3527 * _3567;
                        float _3592 = _3591 * _3591;
                        float _3595 = ((1.0 - _3592) * _3517) + _3592;
                        float _5043 = isnan(0.0) ? _3595 : (isnan(_3595) ? 0.0 : max(_3595, 0.0));
                        float _3596 = isnan(1.0) ? _5043 : (isnan(_5043) ? 1.0 : min(_5043, 1.0));
                        float _3597 = 1.0 - _3567;
                        float _3607 = (0.5 / (((_3596 * ((_3582 * _3597) + _3567)) + 9.9999999392252902907785028219223e-09) + (((_3596 * _3597) + _3567) * _3582))) * _3596;
                        float _5054 = isnan(0.0) ? _3607 : (isnan(_3607) ? 0.0 : max(_3607, 0.0));
                        float _3618 = (((_3568 * 3.1415927410125732421875) * (isnan(1.0) ? _5054 : (isnan(_5054) ? 1.0 : min(_5054, 1.0)))) / ((_3590 * _3590) * ((_3534 * 2.1991131305694580078125) + 3.141590118408203125))) * _3523;
                        _3371 = (_3538 * _3486.x) + _3444;
                        _3372 = (_3538 * _3486.y) + _3445;
                        _3373 = (_3538 * _3486.z) + _3446;
                        _3368 = (_3618 * _3503.x) + _3441;
                        _3369 = (_3618 * _3503.y) + _3442;
                        _3370 = (_3618 * _3503.z) + _3443;
                        if (_3448 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3441 = _3368;
                            _3442 = _3369;
                            _3443 = _3370;
                            _3444 = _3371;
                            _3445 = _3372;
                            _3446 = _3373;
                            _3447 = _3448;
                        }
                    }
                    frontier_phi_71_pred = _3373;
                    frontier_phi_71_pred_1 = _3372;
                    frontier_phi_71_pred_2 = _3371;
                    frontier_phi_71_pred_3 = _3370;
                    frontier_phi_71_pred_4 = _3369;
                    frontier_phi_71_pred_5 = _3368;
                }
                _3154 = frontier_phi_71_pred;
                _3152 = frontier_phi_71_pred_1;
                _3150 = frontier_phi_71_pred_2;
                _3148 = frontier_phi_71_pred_3;
                _3146 = frontier_phi_71_pred_4;
                _3144 = frontier_phi_71_pred_5;
                uint _3303 = _3302 + 1u;
                if (_3303 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3296 = _3144;
                    _3297 = _3146;
                    _3298 = _3148;
                    _3299 = _3150;
                    _3300 = _3152;
                    _3301 = _3154;
                    _3302 = _3303;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3143 = _3144;
            _3145 = _3146;
            _3147 = _3148;
            _3149 = _3150;
            _3151 = _3152;
            _3153 = _3154;
        }
        uvec4 _3157 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3158 = _3157.z;
        uint _3160 = (_3158 >> 8u) & 15u;
        float _3264;
        float _3266;
        float _3268;
        float _3270;
        float _3272;
        float _3274;
        if (((4294967295u << _3160) & _3063) == 0u)
        {
            _3264 = _3143;
            _3266 = _3145;
            _3268 = _3147;
            _3270 = _3149;
            _3272 = _3151;
            _3274 = _3153;
        }
        else
        {
            float _3289 = inversesqrt(dot(vec3(_2141, _2142, _2143), vec3(_2141, _2142, _2143)));
            float _3290 = _3289 * _2141;
            float _3291 = _3289 * _2142;
            float _3292 = _3289 * _2143;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3160 < ((_3158 >> 12u) & 15u))
            {
                float _3265;
                float _3267;
                float _3269;
                float _3271;
                float _3273;
                float _3275;
                float _3424 = _3143;
                float _3425 = _3145;
                float _3426 = _3147;
                float _3427 = _3149;
                float _3428 = _3151;
                float _3429 = _3153;
                uint _3430 = _3160;
                uint _3439;
                bool _3440;
                for (;;)
                {
                    _3439 = texelFetch(g_lightClassification, int((((_3057 << 5u) + (_3043 << 9u)) + (_3430 << 2u)) >> 2u)).x;
                    _3440 = _3439 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3440)
                    {
                        frontier_phi_82_pred = _3429;
                        frontier_phi_82_pred_1 = _3428;
                        frontier_phi_82_pred_2 = _3427;
                        frontier_phi_82_pred_3 = _3426;
                        frontier_phi_82_pred_4 = _3425;
                        frontier_phi_82_pred_5 = _3424;
                    }
                    else
                    {
                        float _3632;
                        float _3633;
                        float _3634;
                        float _3635;
                        float _3636;
                        float _3637;
                        float _3925;
                        float _3926;
                        float _3927;
                        float _3928;
                        float _3929;
                        float _3930;
                        float _3645 = _3424;
                        float _3646 = _3425;
                        float _3647 = _3426;
                        float _3648 = _3427;
                        float _3649 = _3428;
                        float _3650 = _3429;
                        uint _3651 = _3439;
                        uint _3652;
                        vec4 _3677;
                        float _3678;
                        vec4 _3693;
                        vec3 _3705;
                        vec4 _3720;
                        vec4 _3735;
                        float _3781;
                        bool _3782;
                        for (;;)
                        {
                            uint _3662 = ((_3430 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3651));
                            _3652 = (_3651 + 4294967295u) & _3651;
                            uint _3664 = _3662 * 40u;
                            _3677 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3664)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3664 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3664 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3664 + 3u)).x));
                            _3678 = _3677.w;
                            uint _3680 = (_3662 * 40u) + 4u;
                            _3693 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3680)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3680 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3680 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3680 + 3u)).x));
                            uint _3695 = (_3662 * 40u) + 8u;
                            _3705 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3695)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3695 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3695 + 2u)).x));
                            uint _3707 = (_3662 * 40u) + 16u;
                            _3720 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3707)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3707 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3707 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3707 + 3u)).x));
                            uint _3722 = (_3662 * 40u) + 20u;
                            _3735 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3722)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3722 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3722 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3722 + 3u)).x));
                            uint _3737 = (_3662 * 40u) + 24u;
                            vec4 _3750 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3737)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3737 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3737 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3737 + 3u)).x));
                            uint _3756 = (_3662 * 40u) + 28u;
                            vec4 _3769 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3756)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3756 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3756 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3756 + 3u)).x));
                            _3781 = fma(_2143, _3769.z, fma(_2142, _3769.y, _3769.x * _2141)) + _3769.w;
                            _3782 = !((fma(_2143, _3750.z, fma(_2142, _3750.y, _3750.x * _2141)) + _3750.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3782)
                            {
                                float _3809 = _3677.x - _2141;
                                float _3810 = _3677.y - _2142;
                                float _3811 = _3677.z - _2143;
                                float _3812 = dot(vec3(_3809, _3810, _3811), vec3(_3809, _3810, _3811));
                                float _3815 = inversesqrt(_3812);
                                float _3816 = _3815 * _3809;
                                float _3817 = _3815 * _3810;
                                float _3818 = _3815 * _3811;
                                float _3822 = 1.0 - (_3812 / (_3678 * _3678));
                                float _5065 = isnan(0.0) ? _3822 : (isnan(_3822) ? 0.0 : max(_3822, 0.0));
                                float _3823 = isnan(1.0) ? _5065 : (isnan(_5065) ? 1.0 : min(_5065, 1.0));
                                float _3827 = sqrt(_3812) * _3693.w;
                                float _3829 = 1.39999997615814208984375 / (_3827 + 1.39999997615814208984375);
                                float _3830 = _3829 * _3829;
                                float _3833 = ((1.0 - _3830) * dot(vec3(_3816, _3817, _3818), vec3(_996, _999, _1002))) + _3830;
                                float _3836 = _3827 * _3827;
                                float _3840 = (fma(_2143, _3720.z, fma(_2142, _3720.y, _3720.x * _2141)) + _3720.w) / _3781;
                                float _3841 = (fma(_2143, _3735.z, fma(_2142, _3735.y, _3735.x * _2141)) + _3735.w) / _3781;
                                float _3845 = 1.0 - dot(vec2(_3840, _3841), vec2(_3840, _3841));
                                float _5081 = isnan(0.0) ? _3845 : (isnan(_3845) ? 0.0 : max(_3845, 0.0));
                                float _3846 = isnan(1.0) ? _5081 : (isnan(_5081) ? 1.0 : min(_5081, 1.0));
                                float _3847 = _3846 * (((isnan(0.0) ? _3833 : (isnan(_3833) ? 0.0 : max(_3833, 0.0))) * _3823) / ((_3836 * 0.699999988079071044921875) + 1.0));
                                float _3859 = exp2(log2(1.0 / ((_3836 * 3.5) + 5.0)) * 0.25);
                                float _3860 = 1.0 - _1056;
                                float _3867 = sqrt(1.0 - ((1.0 - (_3860 * _3860)) * (1.0 - (_3859 * _3859))));
                                float _3868 = _3867 * _3867;
                                float _3869 = _3868 * _3868;
                                float _3870 = _3816 - _3290;
                                float _3871 = _3817 - _3291;
                                float _3872 = _3818 - _3292;
                                float _3876 = inversesqrt(dot(vec3(_3870, _3871, _3872), vec3(_3870, _3871, _3872)));
                                float _3880 = dot(vec3(_996, _999, _1002), vec3((-0.0) - _3290, (-0.0) - _3291, (-0.0) - _3292));
                                float _5092 = isnan(0.0) ? _3880 : (isnan(_3880) ? 0.0 : max(_3880, 0.0));
                                float _3883 = isnan(1.0) ? _5092 : (isnan(_5092) ? 1.0 : min(_5092, 1.0));
                                float _3884 = dot(vec3(_996, _999, _1002), vec3(_3876 * _3870, _3876 * _3871, _3876 * _3872));
                                float _5103 = isnan(0.0) ? _3884 : (isnan(_3884) ? 0.0 : max(_3884, 0.0));
                                float _3887 = isnan(1.0) ? _5103 : (isnan(_5103) ? 1.0 : min(_5103, 1.0));
                                float _3891 = ((_3887 * _3887) * (_3869 + (-1.0))) + 1.0;
                                float _3892 = _3829 * _3868;
                                float _3893 = _3892 * _3892;
                                float _3899 = ((1.0 - _3893) * dot(vec3(_996, _999, _1002), vec3(_3816, _3817, _3818))) + _3893;
                                float _5114 = isnan(0.0) ? _3899 : (isnan(_3899) ? 0.0 : max(_3899, 0.0));
                                float _3900 = isnan(1.0) ? _5114 : (isnan(_5114) ? 1.0 : min(_5114, 1.0));
                                float _3901 = 1.0 - _3868;
                                float _3911 = (0.5 / (((_3900 * ((_3883 * _3901) + _3868)) + 9.9999999392252902907785028219223e-09) + (((_3900 * _3901) + _3868) * _3883))) * _3900;
                                float _5125 = isnan(0.0) ? _3911 : (isnan(_3911) ? 0.0 : max(_3911, 0.0));
                                float _3921 = (_3846 * _3823) * (((_3869 * 3.1415927410125732421875) * (isnan(1.0) ? _5125 : (isnan(_5125) ? 1.0 : min(_5125, 1.0)))) / ((_3891 * _3891) * ((_3836 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3847 * _3693.z;
                                frontier_phi_88_pred_1 = _3847 * _3693.y;
                                frontier_phi_88_pred_2 = _3847 * _3693.x;
                                frontier_phi_88_pred_3 = _3921 * _3705.z;
                                frontier_phi_88_pred_4 = _3921 * _3705.y;
                                frontier_phi_88_pred_5 = _3921 * _3705.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3930 = frontier_phi_88_pred;
                            _3929 = frontier_phi_88_pred_1;
                            _3928 = frontier_phi_88_pred_2;
                            _3927 = frontier_phi_88_pred_3;
                            _3926 = frontier_phi_88_pred_4;
                            _3925 = frontier_phi_88_pred_5;
                            _3635 = _3928 + _3648;
                            _3636 = _3929 + _3649;
                            _3637 = _3930 + _3650;
                            _3632 = _3925 + _3645;
                            _3633 = _3926 + _3646;
                            _3634 = _3927 + _3647;
                            if (_3652 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3645 = _3632;
                                _3646 = _3633;
                                _3647 = _3634;
                                _3648 = _3635;
                                _3649 = _3636;
                                _3650 = _3637;
                                _3651 = _3652;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3637;
                        frontier_phi_82_pred_1 = _3636;
                        frontier_phi_82_pred_2 = _3635;
                        frontier_phi_82_pred_3 = _3634;
                        frontier_phi_82_pred_4 = _3633;
                        frontier_phi_82_pred_5 = _3632;
                    }
                    _3275 = frontier_phi_82_pred;
                    _3273 = frontier_phi_82_pred_1;
                    _3271 = frontier_phi_82_pred_2;
                    _3269 = frontier_phi_82_pred_3;
                    _3267 = frontier_phi_82_pred_4;
                    _3265 = frontier_phi_82_pred_5;
                    uint _3431 = _3430 + 1u;
                    if (_3431 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3424 = _3265;
                        _3425 = _3267;
                        _3426 = _3269;
                        _3427 = _3271;
                        _3428 = _3273;
                        _3429 = _3275;
                        _3430 = _3431;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3271;
                frontier_phi_63_64_ladder_1 = _3275;
                frontier_phi_63_64_ladder_2 = _3273;
                frontier_phi_63_64_ladder_3 = _3269;
                frontier_phi_63_64_ladder_4 = _3267;
                frontier_phi_63_64_ladder_5 = _3265;
            }
            else
            {
                frontier_phi_63_64_ladder = _3149;
                frontier_phi_63_64_ladder_1 = _3153;
                frontier_phi_63_64_ladder_2 = _3151;
                frontier_phi_63_64_ladder_3 = _3147;
                frontier_phi_63_64_ladder_4 = _3145;
                frontier_phi_63_64_ladder_5 = _3143;
            }
            _3264 = frontier_phi_63_64_ladder_5;
            _3266 = frontier_phi_63_64_ladder_4;
            _3268 = frontier_phi_63_64_ladder_3;
            _3270 = frontier_phi_63_64_ladder;
            _3272 = frontier_phi_63_64_ladder_2;
            _3274 = frontier_phi_63_64_ladder_1;
        }
        float _3279 = isnan(1.0) ? _1040 : (isnan(_1040) ? 1.0 : min(_1040, 1.0));
        _3076 = (_3279 * _3270) + _2607;
        _3078 = (_3279 * _3272) + _2609;
        _3080 = (_3279 * _3274) + _2611;
        _3082 = ((_3264 * 0.039999999105930328369140625) * _3279) + _2930;
        _3084 = ((_3266 * 0.039999999105930328369140625) * _3279) + _2932;
        _3086 = ((_3268 * 0.039999999105930328369140625) * _3279) + _2934;
    }
    else
    {
        _3076 = _2607;
        _3078 = _2609;
        _3080 = _2611;
        _3082 = _2930;
        _3084 = _2932;
        _3086 = _2934;
    }
    float _5141 = isnan(0.0) ? _1025 : (isnan(_1025) ? 0.0 : max(_1025, 0.0));
    float _5152 = isnan(0.0) ? _1026 : (isnan(_1026) ? 0.0 : max(_1026, 0.0));
    float _5163 = isnan(0.0) ? _1027 : (isnan(_1027) ? 0.0 : max(_1027, 0.0));
    float _3103 = ((isnan(1.0) ? _5141 : (isnan(_5141) ? 1.0 : min(_5141, 1.0))) * (_3076 + ((isnan(0.0) ? _1796 : (isnan(_1796) ? 0.0 : max(_1796, 0.0))) * _1040))) + ((_3082 + ((isnan(0.0) ? _2088 : (isnan(_2088) ? 0.0 : max(_2088, 0.0))) * _1875)) * cbPerFrame._m0[3u].x);
    float _3104 = ((isnan(1.0) ? _5152 : (isnan(_5152) ? 1.0 : min(_5152, 1.0))) * (_3078 + ((isnan(0.0) ? _1799 : (isnan(_1799) ? 0.0 : max(_1799, 0.0))) * _1040))) + ((_3084 + ((isnan(0.0) ? _2091 : (isnan(_2091) ? 0.0 : max(_2091, 0.0))) * _1875)) * cbPerFrame._m0[3u].x);
    float _3105 = ((isnan(1.0) ? _5163 : (isnan(_5163) ? 1.0 : min(_5163, 1.0))) * (_3080 + ((isnan(0.0) ? _1802 : (isnan(_1802) ? 0.0 : max(_1802, 0.0))) * _1040))) + ((_3086 + ((isnan(0.0) ? _2094 : (isnan(_2094) ? 0.0 : max(_2094, 0.0))) * _1875)) * cbPerFrame._m0[3u].x);
    uint _3106 = _287 + 6u;
    float _3114 = _977 / cbSceneParam._m0[86u].x;
    float _3115 = _978 / cbSceneParam._m0[86u].y;
    vec4 _3129 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3114, _3115, (log2((isnan(cbSceneParam._m0[77u].w) ? _899 : (isnan(_899) ? cbSceneParam._m0[77u].w : min(_899, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3131 = _3129.x;
    float _3132 = _3129.y;
    float _3133 = _3129.z;
    float _3134 = _3129.w;
    float _3206;
    float _3208;
    float _3210;
    float _3212;
    if (_899 > cbSceneParam._m0[78u].w)
    {
        float _3168 = isnan(_899) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _899 : min(cbSceneParam._m0[80u].w, _899));
        float _3169 = _3168 / _899;
        float _3180 = _3169 * _950;
        float _3181 = _951 * _3169;
        float _3182 = (-0.0) - _3181;
        float _3184 = _3169 * _952;
        float _3186 = (cbSceneParam._m0[77u].w * _3182) / _3168;
        float _3187 = _3186 + cbSceneParam._m0[79u].w;
        float _3188 = cbSceneParam._m0[79u].w - _3181;
        float _3194 = sqrt(((_3180 * _3180) + (_3181 * _3181)) + (_3184 * _3184));
        float _3197 = (1.0 - (cbSceneParam._m0[77u].w / _3168)) * _3194;
        float _3202 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3204 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3381;
        if (abs((_3182 - _3186) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3381 = ((((_3187 > 0.0) ? exp2(_3202 * _3187) : (2.0 - exp2(_3204 * _3187))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3197;
        }
        else
        {
            float _3325 = 1.0 / cbSceneParam._m0[80u].x;
            float _3326 = isnan(_3188) ? _3187 : (isnan(_3187) ? _3188 : max(_3187, _3188));
            float _3327 = isnan(_3188) ? _3187 : (isnan(_3187) ? _3188 : min(_3187, _3188));
            float _3336 = isnan(0.0) ? _3326 : (isnan(_3326) ? 0.0 : min(_3326, 0.0));
            float _3337 = isnan(0.0) ? _3327 : (isnan(_3327) ? 0.0 : min(_3327, 0.0));
            _3381 = ((abs(_3194 / _3182) * cbSceneParam._m0[80u].y) * ((((_3336 - _3337) * 2.0) - ((exp2(_3202 * (isnan(0.0) ? _3326 : (isnan(_3326) ? 0.0 : max(_3326, 0.0)))) - exp2(_3202 * (isnan(0.0) ? _3327 : (isnan(_3327) ? 0.0 : max(_3327, 0.0))))) * _3325)) - ((exp2(_3204 * _3336) - exp2(_3204 * _3337)) * _3325))) + (_3197 * cbSceneParam._m0[80u].z);
        }
        vec4 _3383 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3114, _3115, 1.0), 0.0);
        float _3392 = exp2((_3381 * (-1.44269502162933349609375)) * (1.0 - _3383.w));
        float _3393 = log2(_3392);
        float _3409 = log2(_3134);
        _3206 = (exp2(_3409 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3393 * cbSceneParam._m0[78u].x)) * _3383.x) / cbSceneParam._m0[78u].x)) + _3131;
        _3208 = (exp2(_3409 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3393 * cbSceneParam._m0[78u].y)) * _3383.y) / cbSceneParam._m0[78u].y)) + _3132;
        _3210 = (exp2(_3409 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3393 * cbSceneParam._m0[78u].z)) * _3383.z) / cbSceneParam._m0[78u].z)) + _3133;
        _3212 = _3392 * _3134;
    }
    else
    {
        _3206 = _3131;
        _3208 = _3132;
        _3210 = _3133;
        _3212 = _3134;
    }
    bool _3419;
    vec4 _3222;
    vec4 _3244;
    float _3246;
    float _3250;
    float _3251;
    float _3252;
    float _3253;
    bool _3263;
    for (;;)
    {
        _3222 = cbMatDynParam._m0[0u];
        float _3224 = roundEven(_3222.y);
        bool _3225 = _3224 == 3.0;
        float _3226 = log2(_3212);
        float _3233 = exp2(_3226 * cbSceneParam._m0[78u].x) * _3103;
        float _3234 = exp2(_3226 * cbSceneParam._m0[78u].y) * _3104;
        float _3235 = exp2(_3226 * cbSceneParam._m0[78u].z) * _3105;
        float _3242 = _966 + (-0.5);
        _3244 = cbMtdParam._m0[1u];
        _3246 = _3244.y * _3242;
        float _3249 = (_3224 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3250 = _3249 * (_3225 ? _3233 : (_3233 + (cbSceneParam._m0[72u].w * _3206)));
        _3251 = _3249 * (_3225 ? _3234 : (_3234 + (cbSceneParam._m0[72u].w * _3208)));
        _3252 = _3249 * (_3225 ? _3235 : (_3235 + (cbSceneParam._m0[72u].w * _3210)));
        _3253 = _3242 * 0.999000012874603271484375;
        _3263 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3263)
        {
            if ((cbInstanceData._m0[_287 + 7u].x + _3253) < 0.5)
            {
                _3419 = true;
                break;
            }
        }
        uint _3360 = _1015 + uint(_3222.w);
        if ((cbInstanceData._m0[_3360].w < 1.0) && ((cbInstanceData._m0[_3360].w + _3253) < 0.5))
        {
            _3419 = true;
            break;
        }
        if ((_3246 + 1.0) < _3244.x)
        {
            _3419 = true;
            break;
        }
        _3419 = false;
        break;
    }
    float _3623;
    if (_3419)
    {
        discard_state = true;
        _3623 = 0.0;
    }
    else
    {
        _3623 = cbInstanceData._m0[_3106].w;
    }
    SV_Target.x = _3250;
    SV_Target.y = _3251;
    SV_Target.z = _3252;
    SV_Target.w = _3623;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3106].w;
    discard_exit();
}


