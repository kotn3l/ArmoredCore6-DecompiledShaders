#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 2) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1213;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _217 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _218 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _219 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _225 = inversesqrt(dot(vec3(_217, _218, _219), vec3(_217, _218, _219)));
    float _232 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _239 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _245 = uint(roundEven(NORMAL.w)) * 13u;
    uint _250 = _245 + 1u;
    uint _254 = _245 + 2u;
    float _263 = sqrt(((cbInstanceData._m0[_250].x * cbInstanceData._m0[_250].x) + (cbInstanceData._m0[_245].x * cbInstanceData._m0[_245].x)) + (cbInstanceData._m0[_254].x * cbInstanceData._m0[_254].x));
    float _264 = _263 * TEXCOORD.z;
    float _265 = _263 * TEXCOORD.w;
    vec4 _285 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _291 = _285.x * cbMtdParam._m0[11u].x;
    float _292 = _285.y * cbMtdParam._m0[11u].y;
    float _293 = _285.z * cbMtdParam._m0[11u].z;
    vec4 _312 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _264) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _265) + cbTextureTilingScale._m0[5u].w));
    vec4 _351 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _353 = _351.x;
    float _363 = dot(vec4(_353, _351.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _380 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_353 - _363) * cbMtdParam._m0[24u].x) + _363) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3544 = isnan(0.0) ? _380 : (isnan(_380) ? 0.0 : max(_380, 0.0));
    float _381 = isnan(1.0) ? _3544 : (isnan(_3544) ? 1.0 : min(_3544, 1.0));
    float _388 = (_381 * ((_312.x * cbMtdParam._m0[12u].x) - _291)) + _291;
    float _389 = (_381 * ((_312.y * cbMtdParam._m0[12u].y) - _292)) + _292;
    float _390 = (_381 * ((_312.z * cbMtdParam._m0[12u].z) - _293)) + _293;
    vec4 _407 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * _264) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * _265) + cbTextureTilingScale._m0[3u].w));
    vec4 _427 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[26u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _429 = _427.x;
    float _439 = dot(vec4(_429, _427.yzw), vec4(cbMtdParam._m0[30u].xyz, 0.0));
    float _453 = ((cbMtdParam._m0[25u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.y) * 2.0) - ((((_429 - _439) * cbMtdParam._m0[24u].x) + _439) * cbMtdParam._m0[20u].w))) + 1.0;
    float _3555 = isnan(0.0) ? _453 : (isnan(_453) ? 0.0 : max(_453, 0.0));
    float _454 = isnan(1.0) ? _3555 : (isnan(_3555) ? 1.0 : min(_3555, 1.0));
    float _461 = (_454 * ((_407.x * cbMtdParam._m0[13u].x) - _388)) + _388;
    float _462 = (_454 * ((_407.y * cbMtdParam._m0[13u].y) - _389)) + _389;
    float _463 = (_454 * ((_407.z * cbMtdParam._m0[13u].z) - _390)) + _390;
    vec4 _476 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _264) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _265) + cbTextureTilingScale._m0[4u].w));
    vec4 _493 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _495 = _493.x;
    float _496 = _493.y;
    float _497 = _493.z;
    float _504 = ((_476.x - _495) * _381) + _495;
    float _505 = ((_476.y - _496) * _381) + _496;
    float _506 = ((_476.z - _497) * _381) + _497;
    vec4 _518 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * _264) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _265) + cbTextureTilingScale._m0[2u].w));
    float _531 = ((_518.z - _506) * _454) + _506;
    float _534 = ((((_518.x - _504) * _454) + _504) * 2.0) + (-1.0);
    float _536 = ((((_518.y - _505) * _454) + _505) * 2.0) + (-1.0);
    float _537 = dot(vec2(_534, _536), vec2(_534, _536));
    float _3566 = isnan(0.0) ? _537 : (isnan(_537) ? 0.0 : max(_537, 0.0));
    float _542 = sqrt(1.0 - (isnan(1.0) ? _3566 : (isnan(_3566) ? 1.0 : min(_3566, 1.0))));
    vec4 _556 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _568 = (((_556.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _534;
    float _569 = (((_556.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z) + _536;
    vec4 _581 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _264) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _265) + cbTextureTilingScale._m0[19u].w));
    float _583 = _581.x;
    float _584 = 1.0 - _583;
    float _612 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_583 - _584) * cbMtdParam._m0[24u].w) + _584) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3577 = isnan(0.0) ? _612 : (isnan(_612) ? 0.0 : max(_612, 0.0));
    float _613 = isnan(1.0) ? _3577 : (isnan(_3577) ? 1.0 : min(_3577, 1.0));
    float _621 = ((((cbMtdParam._m0[10u].x - _461) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _613) + _461;
    float _622 = ((((cbMtdParam._m0[10u].y - _462) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _613) + _462;
    float _623 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _463)) * _613) + _463;
    float _627 = (cbMtdParam._m0[19u].w * (_556.z - _531)) + _531;
    float _631 = ((cbMtdParam._m0[23u].y - _627) * _613) + _627;
    vec4 _650 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _264) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _265) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _656 = (_650.x * 2.0) + (-1.0);
    float _657 = (_650.y * 2.0) + (-1.0);
    float _658 = dot(vec2(_656, _657), vec2(_656, _657));
    float _3588 = isnan(0.0) ? _658 : (isnan(_658) ? 0.0 : max(_658, 0.0));
    float _674 = (_613 * (((cbMtdParam._m0[22u].z * _568) - _568) + _656)) + _568;
    float _675 = (_613 * (((cbMtdParam._m0[22u].z * _569) - _569) + _657)) + _569;
    float _676 = (_613 * (sqrt(1.0 - (isnan(1.0) ? _3588 : (isnan(_3588) ? 1.0 : min(_3588, 1.0)))) - _542)) + _542;
    float _678 = cbMtdParam._m0[22u].x + _556.w;
    float _681 = fma(_676, _232 * NORMAL.x, fma(_675, _239 * TANGENT.x, (_225 * _217) * _674));
    float _684 = fma(_676, _232 * NORMAL.y, fma(_675, _239 * TANGENT.y, (_225 * _218) * _674));
    float _687 = fma(_676, _232 * NORMAL.z, fma(_675, _239 * TANGENT.z, (_225 * _219) * _674));
    float _691 = inversesqrt(dot(vec3(_681, _684, _687), vec3(_681, _684, _687)));
    float _692 = _691 * _681;
    float _693 = _691 * _684;
    float _694 = _691 * _687;
    float _3599 = isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : max(_631, 0.0));
    float _695 = isnan(1.0) ? _3599 : (isnan(_3599) ? 1.0 : min(_3599, 1.0));
    float _3610 = isnan(0.0) ? _678 : (isnan(_678) ? 0.0 : max(_678, 0.0));
    float _3621 = isnan(0.0) ? _621 : (isnan(_621) ? 0.0 : max(_621, 0.0));
    float _3632 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
    float _3643 = isnan(0.0) ? _623 : (isnan(_623) ? 0.0 : max(_623, 0.0));
    float _713 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _754 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _764 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _754);
    float _765 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _754);
    float _766 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _754);
    float _770 = inversesqrt(dot(vec3(_764, _765, _766), vec3(_764, _765, _766)));
    float _771 = _764 * _770;
    float _772 = _765 * _770;
    float _773 = _766 * _770;
    float _779 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _780 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _798 = fma(_694, cbSceneParam._m0[5u].z, fma(_693, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _692));
    float _801 = fma(_694, cbSceneParam._m0[6u].z, fma(_693, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _692));
    float _804 = fma(_694, cbSceneParam._m0[7u].z, fma(_693, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _692));
    uint _818 = (_245 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _824 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3621 : (isnan(_3621) ? 1.0 : min(_3621, 1.0)))) * cbInstanceData._m0[_818].x;
    float _825 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3632 : (isnan(_3632) ? 1.0 : min(_3632, 1.0)))) * cbInstanceData._m0[_818].y;
    float _826 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3643 : (isnan(_3643) ? 1.0 : min(_3643, 1.0)))) * cbInstanceData._m0[_818].z;
    float _3654 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
    float _827 = isnan(1.0) ? _3654 : (isnan(_3654) ? 1.0 : min(_3654, 1.0));
    float _3665 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _828 = isnan(1.0) ? _3665 : (isnan(_3665) ? 1.0 : min(_3665, 1.0));
    float _3676 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
    float _829 = isnan(1.0) ? _3676 : (isnan(_3676) ? 1.0 : min(_3676, 1.0));
    vec4 _838 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _779, cbSceneParam._m0[86u].y * _780));
    float _842 = ((isnan(1.0) ? _3610 : (isnan(_3610) ? 1.0 : min(_3610, 1.0))) * TEXCOORD_5.w) * _838.x;
    float _843 = dot(vec3(_692, _693, _694), vec3(_771, _772, _773));
    float _846 = _843 * 2.0;
    float _850 = (_846 * _692) - _771;
    float _851 = (_846 * _693) - _772;
    float _852 = (_846 * _694) - _773;
    float _856 = abs(dot(vec3(_771, _772, _773), vec3(_692, _693, _694)));
    float _3687 = isnan(0.0) ? _856 : (isnan(_856) ? 0.0 : max(_856, 0.0));
    float _858 = sqrt(_695);
    float _871 = exp2((_858 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3687 : (isnan(_3687) ? 1.0 : min(_3687, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_858 * 3.0));
    float _903 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _907 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _911 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1212;
    float _1214;
    float _1215;
    float _1216;
    float _1217;
    float _1218;
    float _1219;
    float _1220;
    float _1221;
    float _1222;
    float _1223;
    float _1224;
    float _1225;
    float _1226;
    float _1227;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _937 = fma(_911, cbModelParam._m0[26u].z, fma(_907, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _903));
        float _941 = fma(_911, cbModelParam._m0[27u].z, fma(_907, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _903));
        float _945 = fma(_911, cbModelParam._m0[28u].z, fma(_907, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _903));
        float _970 = _903 + _692;
        float _971 = _907 + _693;
        float _972 = _911 + _694;
        float _982 = fma(_972, cbModelParam._m0[26u].z, fma(_971, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _970)) - _937;
        float _983 = fma(_972, cbModelParam._m0[27u].z, fma(_971, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _970)) - _941;
        float _984 = fma(_972, cbModelParam._m0[28u].z, fma(_971, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _970)) - _945;
        float _988 = inversesqrt(dot(vec3(_982, _983, _984), vec3(_982, _983, _984)));
        float _1001 = ((_988 * _982) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_937 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1002 = ((_988 * _983) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_941 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1003 = ((_988 * _984) / cbModelParam._m0[34u].z) + ((((((_945 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1006 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1001, _1002, _1003), 0.0);
        vec4 _1013 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1001, _1002, _1003), 0.0);
        vec4 _1020 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1001, _1002, _1003), 0.0);
        vec4 _1027 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1001, _1002, _1003), 0.0);
        float _1040 = exp2((_1006.w + (-0.5)) * 20.0) * 2.0;
        float _1041 = _1040 * (_1006.x + (-0.5));
        float _1042 = _1040 * (_1006.y + (-0.5));
        float _1043 = _1040 * (_1006.z + (-0.5));
        float _1050 = exp2((_1013.w + (-0.5)) * 20.0) * 2.0;
        float _1051 = _1050 * (_1013.x + (-0.5));
        float _1052 = _1050 * (_1013.y + (-0.5));
        float _1053 = _1050 * (_1013.z + (-0.5));
        float _1060 = exp2((_1020.w + (-0.5)) * 20.0) * 2.0;
        float _1061 = _1060 * (_1020.x + (-0.5));
        float _1062 = _1060 * (_1020.y + (-0.5));
        float _1063 = _1060 * (_1020.z + (-0.5));
        float _1070 = exp2((_1027.w + (-0.5)) * 20.0) * 2.0;
        float _1071 = _1070 * (_1027.x + (-0.5));
        float _1072 = _1070 * (_1027.y + (-0.5));
        float _1073 = _1070 * (_1027.z + (-0.5));
        float _1074 = isnan(0.0) ? _1071 : (isnan(_1071) ? 0.0 : max(_1071, 0.0));
        float _1075 = isnan(0.0) ? _1072 : (isnan(_1072) ? 0.0 : max(_1072, 0.0));
        float _1076 = isnan(0.0) ? _1073 : (isnan(_1073) ? 0.0 : max(_1073, 0.0));
        float _1077 = _1041 * 0.5;
        float _1078 = _1051 * 0.5;
        float _1079 = _1061 * 0.5;
        float _1080 = dot(vec3(_1077, _1078, _1079), vec3(_1077, _1078, _1079));
        float _1085 = (_1080 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1080);
        float _1094 = (dot(vec3(_692, _693, _694), vec3(_1085 * _1077, _1085 * _1078, _1085 * _1079)) + 1.0) * 0.5;
        float _3713 = isnan(0.0) ? _1094 : (isnan(_1094) ? 0.0 : max(_1094, 0.0));
        float _1104 = sqrt(((_1078 * _1078) + (_1077 * _1077)) + (_1079 * _1079)) / (_1074 + 9.9999997473787516355514526367188e-06);
        float _3724 = isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0));
        float _1105 = isnan(1.0) ? _3724 : (isnan(_3724) ? 1.0 : min(_3724, 1.0));
        float _1106 = _1105 * 2.0;
        float _1110 = (1.0 - _1105) / (_1105 + 1.0);
        float _3735 = isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0));
        float _1111 = isnan(1.0) ? _3735 : (isnan(_3735) ? 1.0 : min(_3735, 1.0));
        float _1120 = ((((1.0 - _1111) * (_1106 + 2.0)) * exp2(log2(isnan(1.0) ? _3713 : (isnan(_3713) ? 1.0 : min(_3713, 1.0))) * (_1106 + 1.0))) + _1111) * _1074;
        float _1121 = _1042 * 0.5;
        float _1122 = _1052 * 0.5;
        float _1123 = _1062 * 0.5;
        float _1124 = dot(vec3(_1121, _1122, _1123), vec3(_1121, _1122, _1123));
        float _1129 = (_1124 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1124);
        float _1137 = (dot(vec3(_692, _693, _694), vec3(_1129 * _1121, _1129 * _1122, _1129 * _1123)) + 1.0) * 0.5;
        float _3746 = isnan(0.0) ? _1137 : (isnan(_1137) ? 0.0 : max(_1137, 0.0));
        float _1146 = sqrt(((_1122 * _1122) + (_1121 * _1121)) + (_1123 * _1123)) / (_1075 + 9.9999997473787516355514526367188e-06);
        float _3757 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
        float _1147 = isnan(1.0) ? _3757 : (isnan(_3757) ? 1.0 : min(_3757, 1.0));
        float _1148 = _1147 * 2.0;
        float _1152 = (1.0 - _1147) / (_1147 + 1.0);
        float _3768 = isnan(0.0) ? _1152 : (isnan(_1152) ? 0.0 : max(_1152, 0.0));
        float _1153 = isnan(1.0) ? _3768 : (isnan(_3768) ? 1.0 : min(_3768, 1.0));
        float _1162 = ((((1.0 - _1153) * (_1148 + 2.0)) * exp2(log2(isnan(1.0) ? _3746 : (isnan(_3746) ? 1.0 : min(_3746, 1.0))) * (_1148 + 1.0))) + _1153) * _1075;
        float _1163 = _1043 * 0.5;
        float _1164 = _1053 * 0.5;
        float _1165 = _1063 * 0.5;
        float _1166 = dot(vec3(_1163, _1164, _1165), vec3(_1163, _1164, _1165));
        float _1171 = (_1166 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1166);
        float _1179 = (dot(vec3(_692, _693, _694), vec3(_1171 * _1163, _1171 * _1164, _1171 * _1165)) + 1.0) * 0.5;
        float _3779 = isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0));
        float _1188 = sqrt(((_1164 * _1164) + (_1163 * _1163)) + (_1165 * _1165)) / (_1076 + 9.9999997473787516355514526367188e-06);
        float _3790 = isnan(0.0) ? _1188 : (isnan(_1188) ? 0.0 : max(_1188, 0.0));
        float _1189 = isnan(1.0) ? _3790 : (isnan(_3790) ? 1.0 : min(_3790, 1.0));
        float _1190 = _1189 * 2.0;
        float _1194 = (1.0 - _1189) / (_1189 + 1.0);
        float _3801 = isnan(0.0) ? _1194 : (isnan(_1194) ? 0.0 : max(_1194, 0.0));
        float _1195 = isnan(1.0) ? _3801 : (isnan(_3801) ? 1.0 : min(_3801, 1.0));
        float _1204 = ((((1.0 - _1195) * (_1190 + 2.0)) * exp2(log2(isnan(1.0) ? _3779 : (isnan(_3779) ? 1.0 : min(_3779, 1.0))) * (_1190 + 1.0))) + _1195) * _1076;
        _1212 = _1043;
        _1214 = _1042;
        _1215 = _1041;
        _1216 = _1053;
        _1217 = _1052;
        _1218 = _1051;
        _1219 = _1063;
        _1220 = _1062;
        _1221 = _1061;
        _1222 = _1076;
        _1223 = _1075;
        _1224 = _1074;
        _1225 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1120 : (isnan(_1120) ? 0.0 : max(_1120, 0.0)));
        _1226 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0)));
        _1227 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1204 : (isnan(_1204) ? 0.0 : max(_1204, 0.0)));
    }
    else
    {
        _1212 = _1213;
        _1214 = _1213;
        _1215 = _1213;
        _1216 = _1213;
        _1217 = _1213;
        _1218 = _1213;
        _1219 = _1213;
        _1220 = _1213;
        _1221 = _1213;
        _1222 = _1213;
        _1223 = _1213;
        _1224 = _1213;
        _1225 = 0.0;
        _1226 = 0.0;
        _1227 = 0.0;
    }
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    float _1526;
    float _1527;
    float _1528;
    float _1529;
    float _1530;
    float _1531;
    float _1532;
    float _1533;
    float _1534;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1251 = fma(_911, cbModelParam._m0[30u].z, fma(_907, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _903));
        float _1255 = fma(_911, cbModelParam._m0[31u].z, fma(_907, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _903));
        float _1259 = fma(_911, cbModelParam._m0[32u].z, fma(_907, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _903));
        float _1282 = _903 + _692;
        float _1283 = _907 + _693;
        float _1284 = _911 + _694;
        float _1294 = fma(_1284, cbModelParam._m0[30u].z, fma(_1283, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1282)) - _1251;
        float _1295 = fma(_1284, cbModelParam._m0[31u].z, fma(_1283, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1282)) - _1255;
        float _1296 = fma(_1284, cbModelParam._m0[32u].z, fma(_1283, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1282)) - _1259;
        float _1300 = inversesqrt(dot(vec3(_1294, _1295, _1296), vec3(_1294, _1295, _1296)));
        float _1313 = ((_1300 * _1294) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1251 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1314 = ((_1300 * _1295) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1255 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1315 = ((_1300 * _1296) / cbModelParam._m0[35u].z) + ((((((_1259 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1317 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1313, _1314, _1315), 0.0);
        vec4 _1324 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1313, _1314, _1315), 0.0);
        vec4 _1331 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1313, _1314, _1315), 0.0);
        vec4 _1338 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1313, _1314, _1315), 0.0);
        float _1350 = exp2((_1317.w + (-0.5)) * 20.0) * 2.0;
        float _1351 = _1350 * (_1317.x + (-0.5));
        float _1352 = _1350 * (_1317.y + (-0.5));
        float _1353 = _1350 * (_1317.z + (-0.5));
        float _1360 = exp2((_1324.w + (-0.5)) * 20.0) * 2.0;
        float _1361 = _1360 * (_1324.x + (-0.5));
        float _1362 = _1360 * (_1324.y + (-0.5));
        float _1363 = _1360 * (_1324.z + (-0.5));
        float _1370 = exp2((_1331.w + (-0.5)) * 20.0) * 2.0;
        float _1371 = _1370 * (_1331.x + (-0.5));
        float _1372 = _1370 * (_1331.y + (-0.5));
        float _1373 = _1370 * (_1331.z + (-0.5));
        float _1380 = exp2((_1338.w + (-0.5)) * 20.0) * 2.0;
        float _1381 = _1380 * (_1338.x + (-0.5));
        float _1382 = _1380 * (_1338.y + (-0.5));
        float _1383 = _1380 * (_1338.z + (-0.5));
        float _1384 = isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0));
        float _1385 = isnan(0.0) ? _1382 : (isnan(_1382) ? 0.0 : max(_1382, 0.0));
        float _1386 = isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0));
        float _1387 = _1351 * 0.5;
        float _1388 = _1361 * 0.5;
        float _1389 = _1371 * 0.5;
        float _1390 = dot(vec3(_1387, _1388, _1389), vec3(_1387, _1388, _1389));
        float _1395 = (_1390 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1390);
        float _1403 = (dot(vec3(_692, _693, _694), vec3(_1395 * _1387, _1395 * _1388, _1395 * _1389)) + 1.0) * 0.5;
        float _3842 = isnan(0.0) ? _1403 : (isnan(_1403) ? 0.0 : max(_1403, 0.0));
        float _1412 = sqrt(((_1388 * _1388) + (_1387 * _1387)) + (_1389 * _1389)) / (_1384 + 9.9999997473787516355514526367188e-06);
        float _3853 = isnan(0.0) ? _1412 : (isnan(_1412) ? 0.0 : max(_1412, 0.0));
        float _1413 = isnan(1.0) ? _3853 : (isnan(_3853) ? 1.0 : min(_3853, 1.0));
        float _1414 = _1413 * 2.0;
        float _1418 = (1.0 - _1413) / (_1413 + 1.0);
        float _3864 = isnan(0.0) ? _1418 : (isnan(_1418) ? 0.0 : max(_1418, 0.0));
        float _1419 = isnan(1.0) ? _3864 : (isnan(_3864) ? 1.0 : min(_3864, 1.0));
        float _1428 = ((((1.0 - _1419) * (_1414 + 2.0)) * exp2(log2(isnan(1.0) ? _3842 : (isnan(_3842) ? 1.0 : min(_3842, 1.0))) * (_1414 + 1.0))) + _1419) * _1384;
        float _1429 = _1352 * 0.5;
        float _1430 = _1362 * 0.5;
        float _1431 = _1372 * 0.5;
        float _1432 = dot(vec3(_1429, _1430, _1431), vec3(_1429, _1430, _1431));
        float _1437 = (_1432 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1432);
        float _1445 = (dot(vec3(_692, _693, _694), vec3(_1437 * _1429, _1437 * _1430, _1437 * _1431)) + 1.0) * 0.5;
        float _3875 = isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0));
        float _1454 = sqrt(((_1430 * _1430) + (_1429 * _1429)) + (_1431 * _1431)) / (_1385 + 9.9999997473787516355514526367188e-06);
        float _3886 = isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0));
        float _1455 = isnan(1.0) ? _3886 : (isnan(_3886) ? 1.0 : min(_3886, 1.0));
        float _1456 = _1455 * 2.0;
        float _1460 = (1.0 - _1455) / (_1455 + 1.0);
        float _3897 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
        float _1461 = isnan(1.0) ? _3897 : (isnan(_3897) ? 1.0 : min(_3897, 1.0));
        float _1470 = ((((1.0 - _1461) * (_1456 + 2.0)) * exp2(log2(isnan(1.0) ? _3875 : (isnan(_3875) ? 1.0 : min(_3875, 1.0))) * (_1456 + 1.0))) + _1461) * _1385;
        float _1471 = _1353 * 0.5;
        float _1472 = _1363 * 0.5;
        float _1473 = _1373 * 0.5;
        float _1474 = dot(vec3(_1471, _1472, _1473), vec3(_1471, _1472, _1473));
        float _1479 = (_1474 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1474);
        float _1487 = (dot(vec3(_692, _693, _694), vec3(_1479 * _1471, _1479 * _1472, _1479 * _1473)) + 1.0) * 0.5;
        float _3908 = isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0));
        float _1496 = sqrt(((_1472 * _1472) + (_1471 * _1471)) + (_1473 * _1473)) / (_1386 + 9.9999997473787516355514526367188e-06);
        float _3919 = isnan(0.0) ? _1496 : (isnan(_1496) ? 0.0 : max(_1496, 0.0));
        float _1497 = isnan(1.0) ? _3919 : (isnan(_3919) ? 1.0 : min(_3919, 1.0));
        float _1498 = _1497 * 2.0;
        float _1502 = (1.0 - _1497) / (_1497 + 1.0);
        float _3930 = isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0));
        float _1503 = isnan(1.0) ? _3930 : (isnan(_3930) ? 1.0 : min(_3930, 1.0));
        float _1512 = ((((1.0 - _1503) * (_1498 + 2.0)) * exp2(log2(isnan(1.0) ? _3908 : (isnan(_3908) ? 1.0 : min(_3908, 1.0))) * (_1498 + 1.0))) + _1503) * _1386;
        _1520 = _1353;
        _1521 = _1352;
        _1522 = _1351;
        _1523 = _1363;
        _1524 = _1362;
        _1525 = _1361;
        _1526 = _1373;
        _1527 = _1372;
        _1528 = _1371;
        _1529 = _1386;
        _1530 = _1385;
        _1531 = _1384;
        _1532 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1428 : (isnan(_1428) ? 0.0 : max(_1428, 0.0)));
        _1533 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0)));
        _1534 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0)));
    }
    else
    {
        _1520 = _1213;
        _1521 = _1213;
        _1522 = _1213;
        _1523 = _1213;
        _1524 = _1213;
        _1525 = _1213;
        _1526 = _1213;
        _1527 = _1213;
        _1528 = _1213;
        _1529 = _1213;
        _1530 = _1213;
        _1531 = _1213;
        _1532 = 0.0;
        _1533 = 0.0;
        _1534 = 0.0;
    }
    float _1544 = (cbModelParam._m0[1u].x * (_1532 - _1225)) + _1225;
    float _1545 = (cbModelParam._m0[1u].x * (_1533 - _1226)) + _1226;
    float _1546 = (cbModelParam._m0[1u].x * (_1534 - _1227)) + _1227;
    float _1567 = fma(_1546, cbSceneParam._m0[89u].z, fma(_1545, cbSceneParam._m0[89u].y, _1544 * cbSceneParam._m0[89u].x));
    float _1570 = fma(_1546, cbSceneParam._m0[90u].z, fma(_1545, cbSceneParam._m0[90u].y, _1544 * cbSceneParam._m0[90u].x));
    float _1573 = fma(_1546, cbSceneParam._m0[91u].z, fma(_1545, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1544));
    float _1588 = _850 * 0.5;
    float _1589 = _851 * 0.5;
    float _1590 = _852 * 0.5;
    float _1591 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1522, _1525, _1528, _1531));
    float _1594 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1521, _1524, _1527, _1530));
    float _1597 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1520, _1523, _1526, _1529));
    float _1631;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1604 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1212, _1216, _1219, _1222));
        float _1608 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1214, _1217, _1220, _1223));
        float _1612 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1215, _1218, _1221, _1224));
        float _1619 = dot(vec4(cbModelParam._m0[39u]), vec4(_1588, _1589, _1590, 1.0));
        _1631 = dot(vec3(isnan(0.0) ? _1612 : (isnan(_1612) ? 0.0 : max(_1612, 0.0)), isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0)), isnan(0.0) ? _1604 : (isnan(_1604) ? 0.0 : max(_1604, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1619) ? 0.0 : (isnan(0.0) ? _1619 : max(0.0, _1619))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1631 = 1.0;
    }
    float _1642;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1633 = dot(vec4(cbModelParam._m0[40u]), vec4(_1588, _1589, _1590, 1.0));
        _1642 = dot(vec3(isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0)), isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0)), isnan(0.0) ? _1597 : (isnan(_1597) ? 0.0 : max(_1597, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1633) ? 0.0 : (isnan(0.0) ? _1633 : max(0.0, _1633))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1642 = 1.0;
    }
    float _1646 = (_1642 * cbModelParam._m0[1u].x) + (_1631 * (1.0 - cbModelParam._m0[1u].x));
    float _1656 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _695);
    float _1657 = isnan(_1656) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1656 : min(cbModelParam._m0[25u].z, _1656));
    float _1739;
    float _1741;
    float _1743;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1706 = fma(_911, cbModelParam._m0[13u].z, fma(_907, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _903)) + cbModelParam._m0[13u].w;
        float _1710 = fma(_911, cbModelParam._m0[14u].z, fma(_907, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _903)) + cbModelParam._m0[14u].w;
        float _1714 = fma(_911, cbModelParam._m0[15u].z, fma(_907, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _903)) + cbModelParam._m0[15u].w;
        float _1717 = fma(_852, cbModelParam._m0[13u].z, fma(_851, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _850));
        float _1720 = fma(_852, cbModelParam._m0[14u].z, fma(_851, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _850));
        float _1723 = fma(_852, cbModelParam._m0[15u].z, fma(_851, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _850));
        float _1751;
        if (_1717 > 0.0)
        {
            _1751 = abs((1.0 - _1706) / _1717);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1717 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1706 + 1.0) / _1717);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1751 = frontier_phi_14_12_ladder;
        }
        float _1974;
        if (_1720 > 0.0)
        {
            _1974 = abs((1.0 - _1710) / _1720);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1720 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1710 + 1.0) / _1720);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1974 = frontier_phi_23_19_ladder;
        }
        float _2220;
        if (_1723 > 0.0)
        {
            _2220 = abs((1.0 - _1714) / _1723);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1723 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1714 + 1.0) / _1723);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2220 = frontier_phi_35_30_ladder;
        }
        float _2222 = isnan(_1974) ? _1751 : (isnan(_1751) ? _1974 : min(_1751, _1974));
        float _2223 = isnan(_2220) ? _2222 : (isnan(_2222) ? _2220 : min(_2222, _2220));
        float _2227 = (_2223 * _1717) + _1706;
        float _2228 = (_2223 * _1720) + _1710;
        float _2229 = (_2223 * _1723) + _1714;
        float _2230 = _2223 * 9.9999997473787516355514526367188e-05;
        float _2232 = (-1.0) - _2230;
        float _2234 = _2230 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2229 > _2234) || ((_2229 < _2232) || ((_2228 > _2234) || ((_2228 < _2232) || ((_2227 < _2232) || (_2227 > _2234))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2353 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2229, cbModelParam._m0[9u].z, fma(_2228, cbModelParam._m0[9u].y, _2227 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2229, cbModelParam._m0[10u].z, fma(_2228, cbModelParam._m0[10u].y, _2227 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2229, cbModelParam._m0[11u].z, fma(_2228, cbModelParam._m0[11u].y, _2227 * cbModelParam._m0[11u].x))), _1657);
            frontier_phi_13_35_ladder = _2353.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2353.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2353.x * cbModelParam._m0[1u].y;
        }
        _1739 = frontier_phi_13_35_ladder_2;
        _1741 = frontier_phi_13_35_ladder_1;
        _1743 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1727 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_850, _851, _852), _1657);
        _1739 = _1727.x * cbModelParam._m0[1u].y;
        _1741 = _1727.y * cbModelParam._m0[1u].y;
        _1743 = _1727.z * cbModelParam._m0[1u].y;
    }
    float _1747 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _695);
    float _1748 = isnan(_1747) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1747 : min(cbModelParam._m0[25u].w, _1747));
    float _1839;
    float _1841;
    float _1843;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1803 = fma(_911, cbModelParam._m0[21u].z, fma(_907, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _903)) + cbModelParam._m0[21u].w;
        float _1807 = fma(_911, cbModelParam._m0[22u].z, fma(_907, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _903)) + cbModelParam._m0[22u].w;
        float _1811 = fma(_911, cbModelParam._m0[23u].z, fma(_907, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _903)) + cbModelParam._m0[23u].w;
        float _1814 = fma(_852, cbModelParam._m0[21u].z, fma(_851, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _850));
        float _1817 = fma(_852, cbModelParam._m0[22u].z, fma(_851, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _850));
        float _1820 = fma(_852, cbModelParam._m0[23u].z, fma(_851, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _850));
        float _1979;
        if (_1814 > 0.0)
        {
            _1979 = abs((1.0 - _1803) / _1814);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1814 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1803 + 1.0) / _1814);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1979 = frontier_phi_25_21_ladder;
        }
        float _2247;
        if (_1817 > 0.0)
        {
            _2247 = abs((1.0 - _1807) / _1817);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1817 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1807 + 1.0) / _1817);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2247 = frontier_phi_37_32_ladder;
        }
        float _2452;
        if (_1820 > 0.0)
        {
            _2452 = abs((1.0 - _1811) / _1820);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_1820 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_1811 + 1.0) / _1820);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2452 = frontier_phi_46_43_ladder;
        }
        float _2454 = isnan(_2247) ? _1979 : (isnan(_1979) ? _2247 : min(_1979, _2247));
        float _2455 = isnan(_2452) ? _2454 : (isnan(_2454) ? _2452 : min(_2454, _2452));
        float _2459 = (_2455 * _1814) + _1803;
        float _2460 = (_2455 * _1817) + _1807;
        float _2461 = (_2455 * _1820) + _1811;
        float _2462 = _2455 * 9.9999997473787516355514526367188e-05;
        float _2463 = (-1.0) - _2462;
        float _2465 = _2462 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2461 > _2465) || ((_2461 < _2463) || ((_2460 > _2465) || ((_2460 < _2463) || ((_2459 < _2463) || (_2459 > _2465))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2660 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2461, cbModelParam._m0[17u].z, fma(_2460, cbModelParam._m0[17u].y, _2459 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2461, cbModelParam._m0[18u].z, fma(_2460, cbModelParam._m0[18u].y, _2459 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2461, cbModelParam._m0[19u].z, fma(_2460, cbModelParam._m0[19u].y, _2459 * cbModelParam._m0[19u].x))), _1748);
            frontier_phi_22_46_ladder = _2660.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2660.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2660.x * cbModelParam._m0[1u].z;
        }
        _1839 = frontier_phi_22_46_ladder_2;
        _1841 = frontier_phi_22_46_ladder_1;
        _1843 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _1823 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_850, _851, _852), _1748);
        _1839 = _1823.x * cbModelParam._m0[1u].z;
        _1841 = _1823.y * cbModelParam._m0[1u].z;
        _1843 = _1823.z * cbModelParam._m0[1u].z;
    }
    float _1855 = ((((1.0 - _871) * ((_858 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_871 * _858)) * _842;
    float _1856 = _1855 * ((cbModelParam._m0[1u].w * (_1839 - _1739)) + _1739);
    float _1857 = _1855 * ((cbModelParam._m0[1u].w * (_1841 - _1741)) + _1741);
    float _1858 = _1855 * ((cbModelParam._m0[1u].w * (_1843 - _1743)) + _1743);
    float _1861 = fma(_1858, cbSceneParam._m0[89u].z, fma(_1857, cbSceneParam._m0[89u].y, _1856 * cbSceneParam._m0[89u].x));
    float _1864 = fma(_1858, cbSceneParam._m0[90u].z, fma(_1857, cbSceneParam._m0[90u].y, _1856 * cbSceneParam._m0[90u].x));
    float _1867 = fma(_1858, cbSceneParam._m0[91u].z, fma(_1857, cbSceneParam._m0[91u].y, _1856 * cbSceneParam._m0[91u].x));
    vec4 _1875 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_779, _780));
    float _1877 = _1875.w;
    float _1889 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1877);
    float _1890 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1877);
    float _1891 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1877);
    uvec4 _1895 = floatBitsToUint(cbInstanceData._m0[_245 + 5u]);
    uint _1897 = _1895.x * 14u;
    uint _1898 = _1897 + 13u;
    float _1905 = _842 + (-1.0);
    float _1910 = (cbLight._m0[_1898].x * _1905) + 1.0;
    float _1911 = (cbLight._m0[_1898].y * _1905) + 1.0;
    float _1912 = (cbLight._m0[_1898].z * _1905) + 1.0;
    float _1913 = (cbLight._m0[_1898].w * _1905) + 1.0;
    uint _1914 = _1897 + 5u;
    float _1920 = isnan(1.0) ? _1911 : (isnan(_1911) ? 1.0 : min(_1911, 1.0));
    uint _1924 = _1897 + 4u;
    float _1933 = isnan(1.0) ? _1910 : (isnan(_1910) ? 1.0 : min(_1910, 1.0));
    uint _1937 = _1897 | 1u;
    float _1948 = dot(vec3(cbLight._m0[_1897].xyz), vec3(_692, _693, _694));
    float _1951 = dot(vec3(cbLight._m0[_1937].xyz), vec3(_692, _693, _694));
    float _4066 = isnan(0.0) ? _1948 : (isnan(_1948) ? 0.0 : max(_1948, 0.0));
    float _4077 = isnan(0.0) ? _1951 : (isnan(_1951) ? 0.0 : max(_1951, 0.0));
    float _1956 = (isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0))) * 0.3183098733425140380859375;
    float _1958 = (isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0))) * 0.3183098733425140380859375;
    float _1965 = ((cbLight._m0[_1914].x * _1920) * _1958) + (((cbLight._m0[_1924].x * _1889) * _1933) * _1956);
    float _1966 = ((_1920 * cbLight._m0[_1914].y) * _1958) + (((cbLight._m0[_1924].y * _1890) * _1933) * _1956);
    float _1967 = ((_1920 * cbLight._m0[_1914].z) * _1958) + (((cbLight._m0[_1924].z * _1891) * _1933) * _1956);
    uvec4 _1971 = floatBitsToUint(cbLight._m0[_1897 + 12u]);
    bool _1973 = _1971.x == 0u;
    float _1984;
    float _1986;
    float _1988;
    if (_1973)
    {
        _1984 = _1965;
        _1986 = _1966;
        _1988 = _1967;
    }
    else
    {
        uint _1992 = _1897 + 6u;
        float _2008 = (dot(vec3(cbLight._m0[_1897 + 2u].xyz), vec3(_692, _693, _694)) * 0.5) + 0.5;
        float _2009 = _2008 * _2008;
        float _4088 = isnan(0.0) ? _2009 : (isnan(_2009) ? 0.0 : max(_2009, 0.0));
        float _2010 = isnan(1.0) ? _4088 : (isnan(_4088) ? 1.0 : min(_4088, 1.0));
        float _2011 = isnan(1.0) ? _1912 : (isnan(_1912) ? 1.0 : min(_1912, 1.0));
        _1984 = (((cbLight._m0[_1992].x * 0.3183098733425140380859375) * _2010) * _2011) + _1965;
        _1986 = (((cbLight._m0[_1992].y * 0.3183098733425140380859375) * _2010) * _2011) + _1966;
        _1988 = (((cbLight._m0[_1992].z * 0.3183098733425140380859375) * _2010) * _2011) + _1967;
    }
    bool _1991 = _1971.y == 0u;
    float _2029;
    float _2031;
    float _2033;
    if (_1991)
    {
        _2029 = _1984;
        _2031 = _1986;
        _2033 = _1988;
    }
    else
    {
        uint _2191 = _1897 + 7u;
        float _2207 = (dot(vec3(cbLight._m0[_1897 + 3u].xyz), vec3(_692, _693, _694)) * 0.5) + 0.5;
        float _2208 = _2207 * _2207;
        float _4104 = isnan(0.0) ? _2208 : (isnan(_2208) ? 0.0 : max(_2208, 0.0));
        float _2209 = isnan(1.0) ? _4104 : (isnan(_4104) ? 1.0 : min(_4104, 1.0));
        float _2210 = isnan(1.0) ? _1913 : (isnan(_1913) ? 1.0 : min(_1913, 1.0));
        _2029 = (((cbLight._m0[_2191].x * 0.3183098733425140380859375) * _2209) * _2210) + _1984;
        _2031 = (((cbLight._m0[_2191].y * 0.3183098733425140380859375) * _2209) * _2210) + _1986;
        _2033 = (((cbLight._m0[_2191].z * 0.3183098733425140380859375) * _2209) * _2210) + _1988;
    }
    uint _2036 = _1897 + 8u;
    float _2049 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1897].w)) * _695) * 0.949999988079071044921875);
    float _2050 = _2049 * _2049;
    float _2051 = cbLight._m0[_1897].x + _771;
    float _2052 = cbLight._m0[_1897].y + _772;
    float _2053 = cbLight._m0[_1897].z + _773;
    float _2057 = inversesqrt(dot(vec3(_2051, _2052, _2053), vec3(_2051, _2052, _2053)));
    float _2058 = _2057 * _2051;
    float _2059 = _2057 * _2052;
    float _2060 = _2057 * _2053;
    float _2061 = dot(vec3(_692, _693, _694), vec3(cbLight._m0[_1897].xyz));
    float _4120 = isnan(0.0) ? _2061 : (isnan(_2061) ? 0.0 : max(_2061, 0.0));
    float _2064 = isnan(1.0) ? _4120 : (isnan(_4120) ? 1.0 : min(_4120, 1.0));
    float _4131 = isnan(0.0) ? _843 : (isnan(_843) ? 0.0 : max(_843, 0.0));
    float _2065 = isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0));
    float _2066 = dot(vec3(_692, _693, _694), vec3(_2058, _2059, _2060));
    float _4142 = isnan(0.0) ? _2066 : (isnan(_2066) ? 0.0 : max(_2066, 0.0));
    float _2069 = isnan(1.0) ? _4142 : (isnan(_4142) ? 1.0 : min(_4142, 1.0));
    float _2070 = dot(vec3(cbLight._m0[_1897].xyz), vec3(_2058, _2059, _2060));
    float _4153 = isnan(0.0) ? _2070 : (isnan(_2070) ? 0.0 : max(_2070, 0.0));
    float _2074 = _2050 * _2050;
    float _2078 = ((_2069 * _2069) * (_2074 + (-1.0))) + 1.0;
    float _2089 = (exp2(log2(1.0 - (isnan(1.0) ? _4153 : (isnan(_4153) ? 1.0 : min(_4153, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2090 = 1.0 - _2050;
    float _2101 = (0.5 / (((_2065 * ((_2064 * _2090) + _2050)) + 9.9999999392252902907785028219223e-09) + (((_2065 * _2090) + _2050) * _2064))) * _2064;
    float _4164 = isnan(0.0) ? _2101 : (isnan(_2101) ? 0.0 : max(_2101, 0.0));
    float _2103 = (isnan(1.0) ? _4164 : (isnan(_4164) ? 1.0 : min(_4164, 1.0))) * (_2074 / ((_2078 * _2078) * 3.141590118408203125));
    uint _2117 = _1897 + 9u;
    float _2128 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1937].w)) * _695) * 0.949999988079071044921875);
    float _2129 = _2128 * _2128;
    float _2130 = cbLight._m0[_1937].x + _771;
    float _2131 = cbLight._m0[_1937].y + _772;
    float _2132 = cbLight._m0[_1937].z + _773;
    float _2136 = inversesqrt(dot(vec3(_2130, _2131, _2132), vec3(_2130, _2131, _2132)));
    float _2137 = _2136 * _2130;
    float _2138 = _2136 * _2131;
    float _2139 = _2136 * _2132;
    float _2140 = dot(vec3(_692, _693, _694), vec3(cbLight._m0[_1937].xyz));
    float _4175 = isnan(0.0) ? _2140 : (isnan(_2140) ? 0.0 : max(_2140, 0.0));
    float _2143 = isnan(1.0) ? _4175 : (isnan(_4175) ? 1.0 : min(_4175, 1.0));
    float _2144 = dot(vec3(_692, _693, _694), vec3(_2137, _2138, _2139));
    float _4186 = isnan(0.0) ? _2144 : (isnan(_2144) ? 0.0 : max(_2144, 0.0));
    float _2147 = isnan(1.0) ? _4186 : (isnan(_4186) ? 1.0 : min(_4186, 1.0));
    float _2148 = dot(vec3(cbLight._m0[_1937].xyz), vec3(_2137, _2138, _2139));
    float _4197 = isnan(0.0) ? _2148 : (isnan(_2148) ? 0.0 : max(_2148, 0.0));
    float _2152 = _2129 * _2129;
    float _2156 = ((_2147 * _2147) * (_2152 + (-1.0))) + 1.0;
    float _2165 = (exp2(log2(1.0 - (isnan(1.0) ? _4197 : (isnan(_4197) ? 1.0 : min(_4197, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2166 = 1.0 - _2129;
    float _2176 = (0.5 / (((_2065 * ((_2143 * _2166) + _2129)) + 9.9999999392252902907785028219223e-09) + (((_2065 * _2166) + _2129) * _2143))) * _2143;
    float _4208 = isnan(0.0) ? _2176 : (isnan(_2176) ? 0.0 : max(_2176, 0.0));
    float _2178 = (isnan(1.0) ? _4208 : (isnan(_4208) ? 1.0 : min(_4208, 1.0))) * (_2152 / ((_2156 * _2156) * 3.141590118408203125));
    float _2188 = (((_2165 * cbLight._m0[_2117].x) * _2178) * _1920) + ((((cbLight._m0[_2036].x * _1889) * _2089) * _2103) * _1933);
    float _2189 = (((_2165 * cbLight._m0[_2117].y) * _2178) * _1920) + ((((cbLight._m0[_2036].y * _1890) * _2089) * _2103) * _1933);
    float _2190 = (((_2165 * cbLight._m0[_2117].z) * _2178) * _1920) + ((((cbLight._m0[_2036].z * _1891) * _2089) * _2103) * _1933);
    float _2252;
    float _2254;
    float _2256;
    if (_1973)
    {
        _2252 = _2188;
        _2254 = _2189;
        _2256 = _2190;
    }
    else
    {
        uint _2258 = _1897 + 2u;
        uint _2262 = _1897 + 10u;
        float _2276 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2258].w)) * _695) * 0.949999988079071044921875);
        float _2277 = _2276 * _2276;
        float _2278 = cbLight._m0[_2258].x + _771;
        float _2279 = cbLight._m0[_2258].y + _772;
        float _2280 = cbLight._m0[_2258].z + _773;
        float _2284 = inversesqrt(dot(vec3(_2278, _2279, _2280), vec3(_2278, _2279, _2280)));
        float _2285 = _2284 * _2278;
        float _2286 = _2284 * _2279;
        float _2287 = _2284 * _2280;
        float _2288 = dot(vec3(_692, _693, _694), vec3(cbLight._m0[_2258].xyz));
        float _4219 = isnan(0.0) ? _2288 : (isnan(_2288) ? 0.0 : max(_2288, 0.0));
        float _2291 = isnan(1.0) ? _4219 : (isnan(_4219) ? 1.0 : min(_4219, 1.0));
        float _2292 = dot(vec3(_692, _693, _694), vec3(_2285, _2286, _2287));
        float _4230 = isnan(0.0) ? _2292 : (isnan(_2292) ? 0.0 : max(_2292, 0.0));
        float _2295 = isnan(1.0) ? _4230 : (isnan(_4230) ? 1.0 : min(_4230, 1.0));
        float _2296 = dot(vec3(cbLight._m0[_2258].xyz), vec3(_2285, _2286, _2287));
        float _4241 = isnan(0.0) ? _2296 : (isnan(_2296) ? 0.0 : max(_2296, 0.0));
        float _2300 = _2277 * _2277;
        float _2304 = ((_2295 * _2295) * (_2300 + (-1.0))) + 1.0;
        float _2313 = (exp2(log2(1.0 - (isnan(1.0) ? _4241 : (isnan(_4241) ? 1.0 : min(_4241, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2314 = 1.0 - _2277;
        float _2324 = (0.5 / (((_2065 * ((_2291 * _2314) + _2277)) + 9.9999999392252902907785028219223e-09) + (((_2065 * _2314) + _2277) * _2291))) * _2291;
        float _4252 = isnan(0.0) ? _2324 : (isnan(_2324) ? 0.0 : max(_2324, 0.0));
        float _2326 = (isnan(1.0) ? _4252 : (isnan(_4252) ? 1.0 : min(_4252, 1.0))) * (_2300 / ((_2304 * _2304) * 3.141590118408203125));
        float _2327 = isnan(1.0) ? _1912 : (isnan(_1912) ? 1.0 : min(_1912, 1.0));
        _2252 = (((_2313 * cbLight._m0[_2262].x) * _2326) * _2327) + _2188;
        _2254 = (((_2313 * cbLight._m0[_2262].y) * _2326) * _2327) + _2189;
        _2256 = (((_2313 * cbLight._m0[_2262].z) * _2326) * _2327) + _2190;
    }
    float _2362;
    float _2364;
    float _2366;
    if (_1991)
    {
        _2362 = _2252;
        _2364 = _2254;
        _2366 = _2256;
    }
    else
    {
        uint _2373 = _1897 + 3u;
        uint _2377 = _1897 + 11u;
        float _2391 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2373].w)) * _695) * 0.949999988079071044921875);
        float _2392 = _2391 * _2391;
        float _2393 = cbLight._m0[_2373].x + _771;
        float _2394 = cbLight._m0[_2373].y + _772;
        float _2395 = cbLight._m0[_2373].z + _773;
        float _2399 = inversesqrt(dot(vec3(_2393, _2394, _2395), vec3(_2393, _2394, _2395)));
        float _2400 = _2399 * _2393;
        float _2401 = _2399 * _2394;
        float _2402 = _2399 * _2395;
        float _2403 = dot(vec3(_692, _693, _694), vec3(cbLight._m0[_2373].xyz));
        float _4268 = isnan(0.0) ? _2403 : (isnan(_2403) ? 0.0 : max(_2403, 0.0));
        float _2406 = isnan(1.0) ? _4268 : (isnan(_4268) ? 1.0 : min(_4268, 1.0));
        float _2407 = dot(vec3(_692, _693, _694), vec3(_2400, _2401, _2402));
        float _4279 = isnan(0.0) ? _2407 : (isnan(_2407) ? 0.0 : max(_2407, 0.0));
        float _2410 = isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0));
        float _2411 = dot(vec3(cbLight._m0[_2373].xyz), vec3(_2400, _2401, _2402));
        float _4290 = isnan(0.0) ? _2411 : (isnan(_2411) ? 0.0 : max(_2411, 0.0));
        float _2415 = _2392 * _2392;
        float _2419 = ((_2410 * _2410) * (_2415 + (-1.0))) + 1.0;
        float _2428 = (exp2(log2(1.0 - (isnan(1.0) ? _4290 : (isnan(_4290) ? 1.0 : min(_4290, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2429 = 1.0 - _2392;
        float _2439 = (0.5 / (((_2065 * ((_2406 * _2429) + _2392)) + 9.9999999392252902907785028219223e-09) + (((_2065 * _2429) + _2392) * _2406))) * _2406;
        float _4301 = isnan(0.0) ? _2439 : (isnan(_2439) ? 0.0 : max(_2439, 0.0));
        float _2441 = (isnan(1.0) ? _4301 : (isnan(_4301) ? 1.0 : min(_4301, 1.0))) * (_2415 / ((_2419 * _2419) * 3.141590118408203125));
        float _2442 = isnan(1.0) ? _1913 : (isnan(_1913) ? 1.0 : min(_1913, 1.0));
        _2362 = (((_2428 * cbLight._m0[_2377].x) * _2441) * _2442) + _2252;
        _2364 = (((_2428 * cbLight._m0[_2377].y) * _2441) * _2442) + _2254;
        _2366 = (((_2428 * cbLight._m0[_2377].z) * _2441) * _2442) + _2256;
    }
    float _2577;
    float _2579;
    float _2581;
    float _2583;
    float _2585;
    float _2587;
    if (_1895.y == 0u)
    {
        float _2517 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2518 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2517;
        float _2519 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2517;
        float _2520 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2517;
        uvec4 _2532 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2533 = _2532.x;
        uint _2544 = uint((float(_2532.y) * floor(float(uint(cbSceneParam._m0[85u].y * _780) / _2533))) + floor(float(uint(cbSceneParam._m0[85u].x * _779) / _2533)));
        float _2554 = (log2(_2520 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2555 = isnan(0.0) ? _2554 : (isnan(_2554) ? 0.0 : max(_2554, 0.0));
        uint _2558 = uint(isnan(14.0) ? _2555 : (isnan(_2555) ? 14.0 : min(_2555, 14.0)));
        uvec4 _2563 = texelFetch(g_lightClusterGridBuffer, int(((_2558 << 2u) + (_2544 << 6u)) >> 2u));
        uint _2564 = _2563.x;
        uint _2565 = _2532.z;
        float _2665;
        float _2667;
        float _2669;
        float _2671;
        float _2673;
        float _2675;
        if (((((1u << ((_2565 >> 4u) & 15u)) + 4294967295u) & _2564) == 0u) || ((_2565 & 240u) == 0u))
        {
            _2665 = 0.0;
            _2667 = 0.0;
            _2669 = 0.0;
            _2671 = 0.0;
            _2673 = 0.0;
            _2675 = 0.0;
        }
        else
        {
            float _2666;
            float _2668;
            float _2670;
            float _2672;
            float _2674;
            float _2676;
            float _2810 = 0.0;
            float _2811 = 0.0;
            float _2812 = 0.0;
            float _2813 = 0.0;
            float _2814 = 0.0;
            float _2815 = 0.0;
            uint _2816 = 0u;
            uint _2825;
            bool _2826;
            for (;;)
            {
                _2825 = texelFetch(g_lightClassification, int((((_2558 << 5u) + (_2544 << 9u)) + (_2816 << 2u)) >> 2u)).x;
                _2826 = _2825 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_2826)
                {
                    frontier_phi_61_pred = _2810;
                    frontier_phi_61_pred_1 = _2815;
                    frontier_phi_61_pred_2 = _2814;
                    frontier_phi_61_pred_3 = _2813;
                    frontier_phi_61_pred_4 = _2812;
                    frontier_phi_61_pred_5 = _2811;
                }
                else
                {
                    float _2934;
                    float _2935;
                    float _2936;
                    float _2937;
                    float _2938;
                    float _2939;
                    uint _2940;
                    _2934 = _2810;
                    _2935 = _2811;
                    _2936 = _2812;
                    _2937 = _2813;
                    _2938 = _2814;
                    _2939 = _2815;
                    _2940 = _2825;
                    float _2866;
                    float _2867;
                    float _2868;
                    float _2869;
                    float _2870;
                    float _2871;
                    for (;;)
                    {
                        uint _2944 = uint(findLSB(_2940)) + (_2816 << 5u);
                        uint _2941 = (_2940 + 4294967295u) & _2940;
                        uint _2946 = _2944 * 48u;
                        vec4 _2960 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2946)).x, texelFetch(g_PointLightRenderingBuffer, int(_2946 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2946 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2946 + 3u)).x));
                        uint _2966 = (_2944 * 48u) + 4u;
                        vec4 _2979 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2966)).x, texelFetch(g_PointLightRenderingBuffer, int(_2966 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2966 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2966 + 3u)).x));
                        uint _2985 = (_2944 * 48u) + 8u;
                        vec3 _2996 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2985)).x, texelFetch(g_PointLightRenderingBuffer, int(_2985 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2985 + 2u)).x));
                        float _3000 = _2960.x - _2518;
                        float _3001 = _2960.y - _2519;
                        float _3002 = _2960.z - _2520;
                        float _3003 = dot(vec3(_3000, _3001, _3002), vec3(_3000, _3001, _3002));
                        float _3006 = inversesqrt(_3003);
                        float _3007 = _3006 * _3000;
                        float _3008 = _3006 * _3001;
                        float _3009 = _3006 * _3002;
                        float _3010 = dot(vec3(_798, _801, _804), vec3(_3007, _3008, _3009));
                        float _3015 = 1.0 - (_3003 * _2960.w);
                        float _4327 = isnan(0.0) ? _3015 : (isnan(_3015) ? 0.0 : max(_3015, 0.0));
                        float _3016 = isnan(1.0) ? _4327 : (isnan(_4327) ? 1.0 : min(_4327, 1.0));
                        float _3017 = sqrt(_3003) * _2979.w;
                        float _3020 = 1.39999997615814208984375 / (_3017 + 1.39999997615814208984375);
                        float _3021 = _3020 * _3020;
                        float _3024 = ((1.0 - _3021) * _3010) + _3021;
                        float _3027 = _3017 * _3017;
                        float _3031 = ((isnan(0.0) ? _3024 : (isnan(_3024) ? 0.0 : max(_3024, 0.0))) * _3016) / ((_3027 * 0.699999988079071044921875) + 1.0);
                        float _3035 = (-0.0) - _2518;
                        float _3036 = (-0.0) - _2519;
                        float _3037 = (-0.0) - _2520;
                        float _3041 = inversesqrt(dot(vec3(_3035, _3036, _3037), vec3(_3035, _3036, _3037)));
                        float _3042 = _3041 * _3035;
                        float _3043 = _3041 * _3036;
                        float _3044 = _3041 * _3037;
                        float _3052 = exp2(log2(1.0 / ((_3027 * 3.5) + 5.0)) * 0.25);
                        float _3053 = 1.0 - _858;
                        float _3060 = sqrt(1.0 - ((1.0 - (_3053 * _3053)) * (1.0 - (_3052 * _3052))));
                        float _3061 = _3060 * _3060;
                        float _3062 = _3061 * _3061;
                        float _3063 = _3042 + _3007;
                        float _3064 = _3043 + _3008;
                        float _3065 = _3044 + _3009;
                        float _3069 = inversesqrt(dot(vec3(_3063, _3064, _3065), vec3(_3063, _3064, _3065)));
                        float _3073 = dot(vec3(_798, _801, _804), vec3(_3042, _3043, _3044));
                        float _4343 = isnan(0.0) ? _3073 : (isnan(_3073) ? 0.0 : max(_3073, 0.0));
                        float _3076 = isnan(1.0) ? _4343 : (isnan(_4343) ? 1.0 : min(_4343, 1.0));
                        float _3077 = dot(vec3(_798, _801, _804), vec3(_3069 * _3063, _3069 * _3064, _3069 * _3065));
                        float _4354 = isnan(0.0) ? _3077 : (isnan(_3077) ? 0.0 : max(_3077, 0.0));
                        float _3080 = isnan(1.0) ? _4354 : (isnan(_4354) ? 1.0 : min(_4354, 1.0));
                        float _3084 = ((_3080 * _3080) * (_3062 + (-1.0))) + 1.0;
                        float _3085 = _3020 * _3061;
                        float _3086 = _3085 * _3085;
                        float _3089 = ((1.0 - _3086) * _3010) + _3086;
                        float _4365 = isnan(0.0) ? _3089 : (isnan(_3089) ? 0.0 : max(_3089, 0.0));
                        float _3090 = isnan(1.0) ? _4365 : (isnan(_4365) ? 1.0 : min(_4365, 1.0));
                        float _3091 = 1.0 - _3061;
                        float _3101 = (0.5 / (((_3090 * ((_3076 * _3091) + _3061)) + 9.9999999392252902907785028219223e-09) + (((_3090 * _3091) + _3061) * _3076))) * _3090;
                        float _4376 = isnan(0.0) ? _3101 : (isnan(_3101) ? 0.0 : max(_3101, 0.0));
                        float _3112 = (((_3062 * 3.1415927410125732421875) * (isnan(1.0) ? _4376 : (isnan(_4376) ? 1.0 : min(_4376, 1.0)))) / ((_3084 * _3084) * ((_3027 * 2.1991131305694580078125) + 3.141590118408203125))) * _3016;
                        _2869 = (_3031 * _2979.x) + _2937;
                        _2870 = (_3031 * _2979.y) + _2938;
                        _2871 = (_3031 * _2979.z) + _2939;
                        _2866 = (_3112 * _2996.x) + _2934;
                        _2867 = (_3112 * _2996.y) + _2935;
                        _2868 = (_3112 * _2996.z) + _2936;
                        if (_2941 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2934 = _2866;
                            _2935 = _2867;
                            _2936 = _2868;
                            _2937 = _2869;
                            _2938 = _2870;
                            _2939 = _2871;
                            _2940 = _2941;
                        }
                    }
                    frontier_phi_61_pred = _2866;
                    frontier_phi_61_pred_1 = _2871;
                    frontier_phi_61_pred_2 = _2870;
                    frontier_phi_61_pred_3 = _2869;
                    frontier_phi_61_pred_4 = _2868;
                    frontier_phi_61_pred_5 = _2867;
                }
                _2666 = frontier_phi_61_pred;
                _2676 = frontier_phi_61_pred_1;
                _2674 = frontier_phi_61_pred_2;
                _2672 = frontier_phi_61_pred_3;
                _2670 = frontier_phi_61_pred_4;
                _2668 = frontier_phi_61_pred_5;
                uint _2817 = _2816 + 1u;
                if (_2817 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2810 = _2666;
                    _2811 = _2668;
                    _2812 = _2670;
                    _2813 = _2672;
                    _2814 = _2674;
                    _2815 = _2676;
                    _2816 = _2817;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2665 = _2666;
            _2667 = _2668;
            _2669 = _2670;
            _2671 = _2672;
            _2673 = _2674;
            _2675 = _2676;
        }
        uvec4 _2679 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2680 = _2679.z;
        uint _2682 = (_2680 >> 8u) & 15u;
        float _2778;
        float _2780;
        float _2782;
        float _2784;
        float _2786;
        float _2788;
        if (((4294967295u << _2682) & _2564) == 0u)
        {
            _2778 = _2665;
            _2780 = _2667;
            _2782 = _2669;
            _2784 = _2671;
            _2786 = _2673;
            _2788 = _2675;
        }
        else
        {
            float _2803 = inversesqrt(dot(vec3(_2518, _2519, _2520), vec3(_2518, _2519, _2520)));
            float _2804 = _2803 * _2518;
            float _2805 = _2803 * _2519;
            float _2806 = _2803 * _2520;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2682 < ((_2680 >> 12u) & 15u))
            {
                float _2779;
                float _2781;
                float _2783;
                float _2785;
                float _2787;
                float _2789;
                float _2917 = _2665;
                float _2918 = _2667;
                float _2919 = _2669;
                float _2920 = _2671;
                float _2921 = _2673;
                float _2922 = _2675;
                uint _2923 = _2682;
                uint _2932;
                bool _2933;
                for (;;)
                {
                    _2932 = texelFetch(g_lightClassification, int((((_2558 << 5u) + (_2544 << 9u)) + (_2923 << 2u)) >> 2u)).x;
                    _2933 = _2932 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_2933)
                    {
                        frontier_phi_67_pred = _2920;
                        frontier_phi_67_pred_1 = _2921;
                        frontier_phi_67_pred_2 = _2922;
                        frontier_phi_67_pred_3 = _2919;
                        frontier_phi_67_pred_4 = _2918;
                        frontier_phi_67_pred_5 = _2917;
                    }
                    else
                    {
                        float _3117;
                        float _3118;
                        float _3119;
                        float _3120;
                        float _3121;
                        float _3122;
                        float _3410;
                        float _3411;
                        float _3412;
                        float _3413;
                        float _3414;
                        float _3415;
                        float _3130 = _2917;
                        float _3131 = _2918;
                        float _3132 = _2919;
                        float _3133 = _2920;
                        float _3134 = _2921;
                        float _3135 = _2922;
                        uint _3136 = _2932;
                        uint _3137;
                        vec4 _3162;
                        float _3163;
                        vec4 _3178;
                        vec3 _3190;
                        vec4 _3205;
                        vec4 _3220;
                        float _3266;
                        bool _3267;
                        for (;;)
                        {
                            uint _3147 = ((_2923 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3136));
                            _3137 = (_3136 + 4294967295u) & _3136;
                            uint _3149 = _3147 * 40u;
                            _3162 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3149)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3149 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3149 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3149 + 3u)).x));
                            _3163 = _3162.w;
                            uint _3165 = (_3147 * 40u) + 4u;
                            _3178 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3165)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3165 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3165 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3165 + 3u)).x));
                            uint _3180 = (_3147 * 40u) + 8u;
                            _3190 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3180)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3180 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3180 + 2u)).x));
                            uint _3192 = (_3147 * 40u) + 16u;
                            _3205 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3192)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3192 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3192 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3192 + 3u)).x));
                            uint _3207 = (_3147 * 40u) + 20u;
                            _3220 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3207)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3207 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3207 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3207 + 3u)).x));
                            uint _3222 = (_3147 * 40u) + 24u;
                            vec4 _3235 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3222)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3222 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3222 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3222 + 3u)).x));
                            uint _3241 = (_3147 * 40u) + 28u;
                            vec4 _3254 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3241)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3241 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3241 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3241 + 3u)).x));
                            _3266 = fma(_2520, _3254.z, fma(_2519, _3254.y, _3254.x * _2518)) + _3254.w;
                            _3267 = !((fma(_2520, _3235.z, fma(_2519, _3235.y, _3235.x * _2518)) + _3235.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3267)
                            {
                                float _3294 = _3162.x - _2518;
                                float _3295 = _3162.y - _2519;
                                float _3296 = _3162.z - _2520;
                                float _3297 = dot(vec3(_3294, _3295, _3296), vec3(_3294, _3295, _3296));
                                float _3300 = inversesqrt(_3297);
                                float _3301 = _3300 * _3294;
                                float _3302 = _3300 * _3295;
                                float _3303 = _3300 * _3296;
                                float _3307 = 1.0 - (_3297 / (_3163 * _3163));
                                float _4387 = isnan(0.0) ? _3307 : (isnan(_3307) ? 0.0 : max(_3307, 0.0));
                                float _3308 = isnan(1.0) ? _4387 : (isnan(_4387) ? 1.0 : min(_4387, 1.0));
                                float _3312 = sqrt(_3297) * _3178.w;
                                float _3314 = 1.39999997615814208984375 / (_3312 + 1.39999997615814208984375);
                                float _3315 = _3314 * _3314;
                                float _3318 = ((1.0 - _3315) * dot(vec3(_3301, _3302, _3303), vec3(_798, _801, _804))) + _3315;
                                float _3321 = _3312 * _3312;
                                float _3325 = (fma(_2520, _3205.z, fma(_2519, _3205.y, _3205.x * _2518)) + _3205.w) / _3266;
                                float _3326 = (fma(_2520, _3220.z, fma(_2519, _3220.y, _3220.x * _2518)) + _3220.w) / _3266;
                                float _3330 = 1.0 - dot(vec2(_3325, _3326), vec2(_3325, _3326));
                                float _4403 = isnan(0.0) ? _3330 : (isnan(_3330) ? 0.0 : max(_3330, 0.0));
                                float _3331 = isnan(1.0) ? _4403 : (isnan(_4403) ? 1.0 : min(_4403, 1.0));
                                float _3332 = _3331 * (((isnan(0.0) ? _3318 : (isnan(_3318) ? 0.0 : max(_3318, 0.0))) * _3308) / ((_3321 * 0.699999988079071044921875) + 1.0));
                                float _3344 = exp2(log2(1.0 / ((_3321 * 3.5) + 5.0)) * 0.25);
                                float _3345 = 1.0 - _858;
                                float _3352 = sqrt(1.0 - ((1.0 - (_3345 * _3345)) * (1.0 - (_3344 * _3344))));
                                float _3353 = _3352 * _3352;
                                float _3354 = _3353 * _3353;
                                float _3355 = _3301 - _2804;
                                float _3356 = _3302 - _2805;
                                float _3357 = _3303 - _2806;
                                float _3361 = inversesqrt(dot(vec3(_3355, _3356, _3357), vec3(_3355, _3356, _3357)));
                                float _3365 = dot(vec3(_798, _801, _804), vec3((-0.0) - _2804, (-0.0) - _2805, (-0.0) - _2806));
                                float _4414 = isnan(0.0) ? _3365 : (isnan(_3365) ? 0.0 : max(_3365, 0.0));
                                float _3368 = isnan(1.0) ? _4414 : (isnan(_4414) ? 1.0 : min(_4414, 1.0));
                                float _3369 = dot(vec3(_798, _801, _804), vec3(_3361 * _3355, _3361 * _3356, _3361 * _3357));
                                float _4425 = isnan(0.0) ? _3369 : (isnan(_3369) ? 0.0 : max(_3369, 0.0));
                                float _3372 = isnan(1.0) ? _4425 : (isnan(_4425) ? 1.0 : min(_4425, 1.0));
                                float _3376 = ((_3372 * _3372) * (_3354 + (-1.0))) + 1.0;
                                float _3377 = _3314 * _3353;
                                float _3378 = _3377 * _3377;
                                float _3384 = ((1.0 - _3378) * dot(vec3(_798, _801, _804), vec3(_3301, _3302, _3303))) + _3378;
                                float _4436 = isnan(0.0) ? _3384 : (isnan(_3384) ? 0.0 : max(_3384, 0.0));
                                float _3385 = isnan(1.0) ? _4436 : (isnan(_4436) ? 1.0 : min(_4436, 1.0));
                                float _3386 = 1.0 - _3353;
                                float _3396 = (0.5 / (((_3385 * ((_3368 * _3386) + _3353)) + 9.9999999392252902907785028219223e-09) + (((_3385 * _3386) + _3353) * _3368))) * _3385;
                                float _4447 = isnan(0.0) ? _3396 : (isnan(_3396) ? 0.0 : max(_3396, 0.0));
                                float _3406 = (_3331 * _3308) * (((_3354 * 3.1415927410125732421875) * (isnan(1.0) ? _4447 : (isnan(_4447) ? 1.0 : min(_4447, 1.0)))) / ((_3376 * _3376) * ((_3321 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3406 * _3190.x;
                                frontier_phi_73_pred_1 = _3406 * _3190.y;
                                frontier_phi_73_pred_2 = _3332 * _3178.z;
                                frontier_phi_73_pred_3 = _3332 * _3178.y;
                                frontier_phi_73_pred_4 = _3332 * _3178.x;
                                frontier_phi_73_pred_5 = _3406 * _3190.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3410 = frontier_phi_73_pred;
                            _3411 = frontier_phi_73_pred_1;
                            _3415 = frontier_phi_73_pred_2;
                            _3414 = frontier_phi_73_pred_3;
                            _3413 = frontier_phi_73_pred_4;
                            _3412 = frontier_phi_73_pred_5;
                            _3120 = _3413 + _3133;
                            _3121 = _3414 + _3134;
                            _3122 = _3415 + _3135;
                            _3117 = _3410 + _3130;
                            _3118 = _3411 + _3131;
                            _3119 = _3412 + _3132;
                            if (_3137 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3130 = _3117;
                                _3131 = _3118;
                                _3132 = _3119;
                                _3133 = _3120;
                                _3134 = _3121;
                                _3135 = _3122;
                                _3136 = _3137;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3120;
                        frontier_phi_67_pred_1 = _3121;
                        frontier_phi_67_pred_2 = _3122;
                        frontier_phi_67_pred_3 = _3119;
                        frontier_phi_67_pred_4 = _3118;
                        frontier_phi_67_pred_5 = _3117;
                    }
                    _2785 = frontier_phi_67_pred;
                    _2787 = frontier_phi_67_pred_1;
                    _2789 = frontier_phi_67_pred_2;
                    _2783 = frontier_phi_67_pred_3;
                    _2781 = frontier_phi_67_pred_4;
                    _2779 = frontier_phi_67_pred_5;
                    uint _2924 = _2923 + 1u;
                    if (_2924 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2917 = _2779;
                        _2918 = _2781;
                        _2919 = _2783;
                        _2920 = _2785;
                        _2921 = _2787;
                        _2922 = _2789;
                        _2923 = _2924;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _2787;
                frontier_phi_55_56_ladder_1 = _2789;
                frontier_phi_55_56_ladder_2 = _2785;
                frontier_phi_55_56_ladder_3 = _2783;
                frontier_phi_55_56_ladder_4 = _2781;
                frontier_phi_55_56_ladder_5 = _2779;
            }
            else
            {
                frontier_phi_55_56_ladder = _2673;
                frontier_phi_55_56_ladder_1 = _2675;
                frontier_phi_55_56_ladder_2 = _2671;
                frontier_phi_55_56_ladder_3 = _2669;
                frontier_phi_55_56_ladder_4 = _2667;
                frontier_phi_55_56_ladder_5 = _2665;
            }
            _2778 = frontier_phi_55_56_ladder_5;
            _2780 = frontier_phi_55_56_ladder_4;
            _2782 = frontier_phi_55_56_ladder_3;
            _2784 = frontier_phi_55_56_ladder_2;
            _2786 = frontier_phi_55_56_ladder;
            _2788 = frontier_phi_55_56_ladder_1;
        }
        float _2793 = isnan(1.0) ? _842 : (isnan(_842) ? 1.0 : min(_842, 1.0));
        _2577 = (_2793 * _2784) + _2029;
        _2579 = (_2793 * _2786) + _2031;
        _2581 = (_2793 * _2788) + _2033;
        _2583 = ((_2778 * 0.039999999105930328369140625) * _2793) + _2362;
        _2585 = ((_2780 * 0.039999999105930328369140625) * _2793) + _2364;
        _2587 = ((_2782 * 0.039999999105930328369140625) * _2793) + _2366;
    }
    else
    {
        _2577 = _2029;
        _2579 = _2031;
        _2581 = _2033;
        _2583 = _2362;
        _2585 = _2364;
        _2587 = _2366;
    }
    float _4463 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    float _4474 = isnan(0.0) ? _828 : (isnan(_828) ? 0.0 : max(_828, 0.0));
    float _4485 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
    uint _2607 = _245 + 6u;
    float _2615 = _779 / cbSceneParam._m0[86u].x;
    float _2616 = _780 / cbSceneParam._m0[86u].y;
    vec4 _2630 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2615, _2616, (log2((isnan(cbSceneParam._m0[77u].w) ? _713 : (isnan(_713) ? cbSceneParam._m0[77u].w : min(_713, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2632 = _2630.x;
    float _2633 = _2630.y;
    float _2634 = _2630.z;
    float _2635 = _2630.w;
    float _2728;
    float _2730;
    float _2732;
    float _2734;
    if (_713 > cbSceneParam._m0[78u].w)
    {
        float _2690 = isnan(_713) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _713 : min(cbSceneParam._m0[80u].w, _713));
        float _2691 = _2690 / _713;
        float _2702 = _2691 * _764;
        float _2703 = _765 * _2691;
        float _2704 = (-0.0) - _2703;
        float _2706 = _2691 * _766;
        float _2708 = (cbSceneParam._m0[77u].w * _2704) / _2690;
        float _2709 = _2708 + cbSceneParam._m0[79u].w;
        float _2710 = cbSceneParam._m0[79u].w - _2703;
        float _2716 = sqrt(((_2702 * _2702) + (_2703 * _2703)) + (_2706 * _2706));
        float _2719 = (1.0 - (cbSceneParam._m0[77u].w / _2690)) * _2716;
        float _2724 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2726 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2879;
        if (abs((_2704 - _2708) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2879 = ((((_2709 > 0.0) ? exp2(_2724 * _2709) : (2.0 - exp2(_2726 * _2709))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2719;
        }
        else
        {
            float _2839 = 1.0 / cbSceneParam._m0[80u].x;
            float _2840 = isnan(_2710) ? _2709 : (isnan(_2709) ? _2710 : max(_2709, _2710));
            float _2841 = isnan(_2710) ? _2709 : (isnan(_2709) ? _2710 : min(_2709, _2710));
            float _2850 = isnan(0.0) ? _2840 : (isnan(_2840) ? 0.0 : min(_2840, 0.0));
            float _2851 = isnan(0.0) ? _2841 : (isnan(_2841) ? 0.0 : min(_2841, 0.0));
            _2879 = ((abs(_2716 / _2704) * cbSceneParam._m0[80u].y) * ((((_2850 - _2851) * 2.0) - ((exp2(_2724 * (isnan(0.0) ? _2840 : (isnan(_2840) ? 0.0 : max(_2840, 0.0)))) - exp2(_2724 * (isnan(0.0) ? _2841 : (isnan(_2841) ? 0.0 : max(_2841, 0.0))))) * _2839)) - ((exp2(_2726 * _2850) - exp2(_2726 * _2851)) * _2839))) + (_2719 * cbSceneParam._m0[80u].z);
        }
        vec4 _2881 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2615, _2616, 1.0), 0.0);
        float _2890 = exp2((_2879 * (-1.44269502162933349609375)) * (1.0 - _2881.w));
        float _2891 = log2(_2890);
        float _2907 = log2(_2635);
        _2728 = (exp2(_2907 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2891 * cbSceneParam._m0[78u].x)) * _2881.x) / cbSceneParam._m0[78u].x)) + _2632;
        _2730 = (exp2(_2907 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2891 * cbSceneParam._m0[78u].y)) * _2881.y) / cbSceneParam._m0[78u].y)) + _2633;
        _2732 = (exp2(_2907 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2891 * cbSceneParam._m0[78u].z)) * _2881.z) / cbSceneParam._m0[78u].z)) + _2634;
        _2734 = _2890 * _2635;
    }
    else
    {
        _2728 = _2632;
        _2730 = _2633;
        _2732 = _2634;
        _2734 = _2635;
    }
    float _2746 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2747 = _2746 == 3.0;
    float _2748 = log2(_2734);
    float _2755 = exp2(_2748 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4463 : (isnan(_4463) ? 1.0 : min(_4463, 1.0))) * (_2577 + ((isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0))) * _842))) + ((_2583 + ((isnan(0.0) ? _1861 : (isnan(_1861) ? 0.0 : max(_1861, 0.0))) * _1646)) * cbPerFrame._m0[3u].x));
    float _2756 = exp2(_2748 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4474 : (isnan(_4474) ? 1.0 : min(_4474, 1.0))) * (_2579 + ((isnan(0.0) ? _1570 : (isnan(_1570) ? 0.0 : max(_1570, 0.0))) * _842))) + ((_2585 + ((isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0))) * _1646)) * cbPerFrame._m0[3u].x));
    float _2757 = exp2(_2748 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4485 : (isnan(_4485) ? 1.0 : min(_4485, 1.0))) * (_2581 + ((isnan(0.0) ? _1573 : (isnan(_1573) ? 0.0 : max(_1573, 0.0))) * _842))) + ((_2587 + ((isnan(0.0) ? _1867 : (isnan(_1867) ? 0.0 : max(_1867, 0.0))) * _1646)) * cbPerFrame._m0[3u].x));
    float _2766 = (_2746 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2766 * (_2747 ? _2755 : (_2755 + (cbSceneParam._m0[72u].w * _2728)));
    SV_Target.y = _2766 * (_2747 ? _2756 : (_2756 + (cbSceneParam._m0[72u].w * _2730)));
    SV_Target.z = _2766 * (_2747 ? _2757 : (_2757 + (cbSceneParam._m0[72u].w * _2732)));
    SV_Target.w = cbInstanceData._m0[_2607].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2607].w;
}


