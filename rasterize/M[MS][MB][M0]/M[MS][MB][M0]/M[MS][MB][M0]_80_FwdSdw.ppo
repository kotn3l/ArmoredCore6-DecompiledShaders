#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 13) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 16) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 18) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_28;
layout(set = 0, binding = 19) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1280;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _226 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _227 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _228 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _234 = inversesqrt(dot(vec3(_226, _227, _228), vec3(_226, _227, _228)));
    float _241 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _242 = _241 * NORMAL.x;
    float _243 = _241 * NORMAL.y;
    float _244 = _241 * NORMAL.z;
    float _248 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _260 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _262 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _263 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3869 = isnan(0.0) ? _260 : (isnan(_260) ? 0.0 : max(_260, 0.0));
    float _3880 = isnan(0.0) ? _262 : (isnan(_262) ? 0.0 : max(_262, 0.0));
    float _3891 = isnan(0.0) ? _263 : (isnan(_263) ? 0.0 : max(_263, 0.0));
    uint _273 = uint(roundEven(NORMAL.w)) * 13u;
    uint _278 = _273 + 1u;
    uint _282 = _273 + 2u;
    float _291 = sqrt(((cbInstanceData._m0[_278].x * cbInstanceData._m0[_278].x) + (cbInstanceData._m0[_273].x * cbInstanceData._m0[_273].x)) + (cbInstanceData._m0[_282].x * cbInstanceData._m0[_282].x));
    float _292 = _291 * TEXCOORD.z;
    float _293 = _291 * TEXCOORD.w;
    vec4 _306 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _292) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _293) + cbTextureTilingScale._m0[13u].w));
    vec4 _330 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _335 = _330.x * cbMtdParam._m0[11u].x;
    float _336 = _330.y * cbMtdParam._m0[11u].y;
    float _337 = _330.z * cbMtdParam._m0[11u].z;
    vec4 _356 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _292) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _293) + cbTextureTilingScale._m0[5u].w));
    vec4 _392 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[26u].w * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[27u].x * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _394 = _392.x;
    float _404 = dot(vec4(_394, _392.yzw), vec4(cbMtdParam._m0[29u].yzw, 0.0));
    float _421 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_394 - _404) * cbMtdParam._m0[24u].x) + _404) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3902 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
    float _422 = isnan(1.0) ? _3902 : (isnan(_3902) ? 1.0 : min(_3902, 1.0));
    float _429 = (_422 * ((_356.x * cbMtdParam._m0[12u].x) - _335)) + _335;
    float _430 = (_422 * ((_356.y * cbMtdParam._m0[12u].y) - _336)) + _336;
    float _431 = (_422 * ((_356.z * cbMtdParam._m0[12u].z) - _337)) + _337;
    float _435 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _306.x) * _429;
    float _438 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _306.y) * _430;
    float _441 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _306.z) * _431;
    float _448 = ((_429 - _435) * (isnan(1.0) ? _3869 : (isnan(_3869) ? 1.0 : min(_3869, 1.0)))) + _435;
    float _449 = ((_430 - _438) * (isnan(1.0) ? _3880 : (isnan(_3880) ? 1.0 : min(_3880, 1.0)))) + _438;
    float _450 = ((_431 - _441) * (isnan(1.0) ? _3891 : (isnan(_3891) ? 1.0 : min(_3891, 1.0)))) + _441;
    vec4 _463 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _292) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _293) + cbTextureTilingScale._m0[20u].w));
    vec4 _488 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _292) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _293) + cbTextureTilingScale._m0[4u].w));
    vec4 _505 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _507 = _505.x;
    float _508 = _505.y;
    float _509 = _505.z;
    float _518 = ((_488.z - _509) * _422) + _509;
    float _521 = ((((_488.x - _507) * _422) + _507) * 2.0) + (-1.0);
    float _522 = ((((_488.y - _508) * _422) + _508) * 2.0) + (-1.0);
    float _523 = dot(vec2(_521, _522), vec2(_521, _522));
    float _3913 = isnan(0.0) ? _523 : (isnan(_523) ? 0.0 : max(_523, 0.0));
    float _528 = sqrt(1.0 - (isnan(1.0) ? _3913 : (isnan(_3913) ? 1.0 : min(_3913, 1.0))));
    vec4 _550 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _562 = (_521 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_463.x * 2.0) + (-1.0)))) + (((_550.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    float _563 = (_522 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_463.y * 2.0) + (-1.0)))) + (((_550.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].z);
    vec4 _575 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _292) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _293) + cbTextureTilingScale._m0[19u].w));
    float _577 = _575.x;
    float _578 = 1.0 - _577;
    float _604 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_577 - _578) * cbMtdParam._m0[24u].w) + _578) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3924 = isnan(0.0) ? _604 : (isnan(_604) ? 0.0 : max(_604, 0.0));
    float _605 = isnan(1.0) ? _3924 : (isnan(_3924) ? 1.0 : min(_3924, 1.0));
    float _613 = ((((cbMtdParam._m0[10u].x - _448) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _605) + _448;
    float _614 = ((((cbMtdParam._m0[10u].y - _449) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _605) + _449;
    float _615 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _450)) * _605) + _450;
    float _620 = (((_463.z - _518) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _518;
    float _624 = ((_550.z - _620) * cbMtdParam._m0[19u].w) + _620;
    float _628 = ((cbMtdParam._m0[23u].y - _624) * _605) + _624;
    vec4 _647 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[27u].y * cbPerFrame._m0[22u].x) + _292) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[27u].z * cbPerFrame._m0[22u].x) + _293) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _649 = _647.x;
    float _650 = _647.y;
    float _656 = dot(vec4(cbMtdParam._m0[28u].zw, cbMtdParam._m0[29u].x, 0.0), vec4(_242, _243, _244, 0.0));
    vec4 _671 = texture(sampler2D(M_MS_MB_M0_snp_0_Texture2D_28, SS_BumpMap), vec2((cbTextureTilingScale._m0[18u].x * _292) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * _293) + cbTextureTilingScale._m0[18u].w));
    float _673 = _671.x;
    float _678 = fract(_671.w + cbPerFrame._m0[22u].x);
    float _680 = (1.0 - _678) * _673;
    float _685 = ((_678 + (-1.0)) + _673) * 9.0;
    float _687 = ((_673 + (-1.0)) + _678) * 9.0;
    float _688 = isnan(0.0) ? _685 : (isnan(_685) ? 0.0 : max(_685, 0.0));
    float _689 = isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : max(_687, 0.0));
    float _703 = (_680 * ((_671.y * 2.0) + (-1.0))) * sin((isnan(3.0) ? _688 : (isnan(_688) ? 3.0 : min(_688, 3.0))) * 3.1415927410125732421875);
    float _705 = (_680 * ((_671.z * 2.0) + (-1.0))) * sin((isnan(3.0) ? _689 : (isnan(_689) ? 3.0 : min(_689, 3.0))) * 3.1415927410125732421875);
    float _709 = inversesqrt(dot(vec3(_703, _705, 1.0), vec3(_703, _705, 1.0)));
    float _725 = (((((0.5 - _649) + ((_703 * 0.5) * _709)) * _656) + _649) * 2.0) + (-1.0);
    float _726 = (((((0.5 - _650) + ((_709 * 0.5) * _705)) * _656) + _650) * 2.0) + (-1.0);
    float _727 = dot(vec2(_725, _726), vec2(_725, _726));
    float _3955 = isnan(0.0) ? _727 : (isnan(_727) ? 0.0 : max(_727, 0.0));
    float _743 = ((((cbMtdParam._m0[22u].z * _562) - _562) + _725) * _605) + _562;
    float _744 = ((((cbMtdParam._m0[22u].z * _563) - _563) + _726) * _605) + _563;
    float _745 = (_605 * (sqrt(1.0 - (isnan(1.0) ? _3955 : (isnan(_3955) ? 1.0 : min(_3955, 1.0)))) - _528)) + _528;
    float _747 = cbMtdParam._m0[22u].x + _550.w;
    float _750 = fma(_745, _242, fma(_744, _248 * TANGENT.x, (_234 * _226) * _743));
    float _753 = fma(_745, _243, fma(_744, _248 * TANGENT.y, (_234 * _227) * _743));
    float _756 = fma(_745, _244, fma(_744, _248 * TANGENT.z, (_234 * _228) * _743));
    float _760 = inversesqrt(dot(vec3(_750, _753, _756), vec3(_750, _753, _756)));
    float _761 = _760 * _750;
    float _762 = _760 * _753;
    float _763 = _760 * _756;
    float _3966 = isnan(0.0) ? _628 : (isnan(_628) ? 0.0 : max(_628, 0.0));
    float _764 = isnan(1.0) ? _3966 : (isnan(_3966) ? 1.0 : min(_3966, 1.0));
    float _3977 = isnan(0.0) ? _747 : (isnan(_747) ? 0.0 : max(_747, 0.0));
    float _3988 = isnan(0.0) ? _613 : (isnan(_613) ? 0.0 : max(_613, 0.0));
    float _3999 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _4010 = isnan(0.0) ? _615 : (isnan(_615) ? 0.0 : max(_615, 0.0));
    float _782 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _823 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _833 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _823);
    float _834 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _823);
    float _835 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _823);
    float _839 = inversesqrt(dot(vec3(_833, _834, _835), vec3(_833, _834, _835)));
    float _840 = _833 * _839;
    float _841 = _834 * _839;
    float _842 = _835 * _839;
    float _848 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _849 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _867 = fma(_763, cbSceneParam._m0[5u].z, fma(_762, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _761));
    float _870 = fma(_763, cbSceneParam._m0[6u].z, fma(_762, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _761));
    float _873 = fma(_763, cbSceneParam._m0[7u].z, fma(_762, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _761));
    uint _887 = (_273 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _893 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3988 : (isnan(_3988) ? 1.0 : min(_3988, 1.0)))) * cbInstanceData._m0[_887].x;
    float _894 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3999 : (isnan(_3999) ? 1.0 : min(_3999, 1.0)))) * cbInstanceData._m0[_887].y;
    float _895 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4010 : (isnan(_4010) ? 1.0 : min(_4010, 1.0)))) * cbInstanceData._m0[_887].z;
    float _4021 = isnan(0.0) ? _893 : (isnan(_893) ? 0.0 : max(_893, 0.0));
    float _896 = isnan(1.0) ? _4021 : (isnan(_4021) ? 1.0 : min(_4021, 1.0));
    float _4032 = isnan(0.0) ? _894 : (isnan(_894) ? 0.0 : max(_894, 0.0));
    float _897 = isnan(1.0) ? _4032 : (isnan(_4032) ? 1.0 : min(_4032, 1.0));
    float _4043 = isnan(0.0) ? _895 : (isnan(_895) ? 0.0 : max(_895, 0.0));
    float _898 = isnan(1.0) ? _4043 : (isnan(_4043) ? 1.0 : min(_4043, 1.0));
    vec4 _907 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _848, cbSceneParam._m0[86u].y * _849));
    float _911 = ((isnan(1.0) ? _3977 : (isnan(_3977) ? 1.0 : min(_3977, 1.0))) * TEXCOORD_5.w) * _907.x;
    float _912 = dot(vec3(_761, _762, _763), vec3(_840, _841, _842));
    float _915 = _912 * 2.0;
    float _919 = (_915 * _761) - _840;
    float _920 = (_915 * _762) - _841;
    float _921 = (_915 * _763) - _842;
    float _925 = abs(dot(vec3(_840, _841, _842), vec3(_761, _762, _763)));
    float _4054 = isnan(0.0) ? _925 : (isnan(_925) ? 0.0 : max(_925, 0.0));
    float _927 = sqrt(_764);
    float _939 = exp2((_927 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4054 : (isnan(_4054) ? 1.0 : min(_4054, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_927 * 3.0));
    float _971 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _975 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _979 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1279;
    float _1281;
    float _1282;
    float _1283;
    float _1284;
    float _1285;
    float _1286;
    float _1287;
    float _1288;
    float _1289;
    float _1290;
    float _1291;
    float _1292;
    float _1293;
    float _1294;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1005 = fma(_979, cbModelParam._m0[26u].z, fma(_975, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _971));
        float _1009 = fma(_979, cbModelParam._m0[27u].z, fma(_975, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _971));
        float _1013 = fma(_979, cbModelParam._m0[28u].z, fma(_975, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _971));
        float _1037 = _971 + _761;
        float _1038 = _975 + _762;
        float _1039 = _979 + _763;
        float _1049 = fma(_1039, cbModelParam._m0[26u].z, fma(_1038, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1037)) - _1005;
        float _1050 = fma(_1039, cbModelParam._m0[27u].z, fma(_1038, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1037)) - _1009;
        float _1051 = fma(_1039, cbModelParam._m0[28u].z, fma(_1038, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1037)) - _1013;
        float _1055 = inversesqrt(dot(vec3(_1049, _1050, _1051), vec3(_1049, _1050, _1051)));
        float _1068 = ((_1055 * _1049) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1005 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1069 = ((_1055 * _1050) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1009 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1070 = ((_1055 * _1051) / cbModelParam._m0[34u].z) + ((((((_1013 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1073 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1068, _1069, _1070), 0.0);
        vec4 _1080 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1068, _1069, _1070), 0.0);
        vec4 _1087 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1068, _1069, _1070), 0.0);
        vec4 _1094 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1068, _1069, _1070), 0.0);
        float _1107 = exp2((_1073.w + (-0.5)) * 20.0) * 2.0;
        float _1108 = _1107 * (_1073.x + (-0.5));
        float _1109 = _1107 * (_1073.y + (-0.5));
        float _1110 = _1107 * (_1073.z + (-0.5));
        float _1117 = exp2((_1080.w + (-0.5)) * 20.0) * 2.0;
        float _1118 = _1117 * (_1080.x + (-0.5));
        float _1119 = _1117 * (_1080.y + (-0.5));
        float _1120 = _1117 * (_1080.z + (-0.5));
        float _1127 = exp2((_1087.w + (-0.5)) * 20.0) * 2.0;
        float _1128 = _1127 * (_1087.x + (-0.5));
        float _1129 = _1127 * (_1087.y + (-0.5));
        float _1130 = _1127 * (_1087.z + (-0.5));
        float _1137 = exp2((_1094.w + (-0.5)) * 20.0) * 2.0;
        float _1138 = _1137 * (_1094.x + (-0.5));
        float _1139 = _1137 * (_1094.y + (-0.5));
        float _1140 = _1137 * (_1094.z + (-0.5));
        float _1141 = isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0));
        float _1142 = isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0));
        float _1143 = isnan(0.0) ? _1140 : (isnan(_1140) ? 0.0 : max(_1140, 0.0));
        float _1144 = _1108 * 0.5;
        float _1145 = _1118 * 0.5;
        float _1146 = _1128 * 0.5;
        float _1147 = dot(vec3(_1144, _1145, _1146), vec3(_1144, _1145, _1146));
        float _1152 = (_1147 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1147);
        float _1161 = (dot(vec3(_761, _762, _763), vec3(_1152 * _1144, _1152 * _1145, _1152 * _1146)) + 1.0) * 0.5;
        float _4080 = isnan(0.0) ? _1161 : (isnan(_1161) ? 0.0 : max(_1161, 0.0));
        float _1171 = sqrt(((_1145 * _1145) + (_1144 * _1144)) + (_1146 * _1146)) / (_1141 + 9.9999997473787516355514526367188e-06);
        float _4091 = isnan(0.0) ? _1171 : (isnan(_1171) ? 0.0 : max(_1171, 0.0));
        float _1172 = isnan(1.0) ? _4091 : (isnan(_4091) ? 1.0 : min(_4091, 1.0));
        float _1173 = _1172 * 2.0;
        float _1177 = (1.0 - _1172) / (_1172 + 1.0);
        float _4102 = isnan(0.0) ? _1177 : (isnan(_1177) ? 0.0 : max(_1177, 0.0));
        float _1178 = isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0));
        float _1187 = ((((1.0 - _1178) * (_1173 + 2.0)) * exp2(log2(isnan(1.0) ? _4080 : (isnan(_4080) ? 1.0 : min(_4080, 1.0))) * (_1173 + 1.0))) + _1178) * _1141;
        float _1188 = _1109 * 0.5;
        float _1189 = _1119 * 0.5;
        float _1190 = _1129 * 0.5;
        float _1191 = dot(vec3(_1188, _1189, _1190), vec3(_1188, _1189, _1190));
        float _1196 = (_1191 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1191);
        float _1204 = (dot(vec3(_761, _762, _763), vec3(_1196 * _1188, _1196 * _1189, _1196 * _1190)) + 1.0) * 0.5;
        float _4113 = isnan(0.0) ? _1204 : (isnan(_1204) ? 0.0 : max(_1204, 0.0));
        float _1213 = sqrt(((_1189 * _1189) + (_1188 * _1188)) + (_1190 * _1190)) / (_1142 + 9.9999997473787516355514526367188e-06);
        float _4124 = isnan(0.0) ? _1213 : (isnan(_1213) ? 0.0 : max(_1213, 0.0));
        float _1214 = isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0));
        float _1215 = _1214 * 2.0;
        float _1219 = (1.0 - _1214) / (_1214 + 1.0);
        float _4135 = isnan(0.0) ? _1219 : (isnan(_1219) ? 0.0 : max(_1219, 0.0));
        float _1220 = isnan(1.0) ? _4135 : (isnan(_4135) ? 1.0 : min(_4135, 1.0));
        float _1229 = ((((1.0 - _1220) * (_1215 + 2.0)) * exp2(log2(isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0))) * (_1215 + 1.0))) + _1220) * _1142;
        float _1230 = _1110 * 0.5;
        float _1231 = _1120 * 0.5;
        float _1232 = _1130 * 0.5;
        float _1233 = dot(vec3(_1230, _1231, _1232), vec3(_1230, _1231, _1232));
        float _1238 = (_1233 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1233);
        float _1246 = (dot(vec3(_761, _762, _763), vec3(_1238 * _1230, _1238 * _1231, _1238 * _1232)) + 1.0) * 0.5;
        float _4146 = isnan(0.0) ? _1246 : (isnan(_1246) ? 0.0 : max(_1246, 0.0));
        float _1255 = sqrt(((_1231 * _1231) + (_1230 * _1230)) + (_1232 * _1232)) / (_1143 + 9.9999997473787516355514526367188e-06);
        float _4157 = isnan(0.0) ? _1255 : (isnan(_1255) ? 0.0 : max(_1255, 0.0));
        float _1256 = isnan(1.0) ? _4157 : (isnan(_4157) ? 1.0 : min(_4157, 1.0));
        float _1257 = _1256 * 2.0;
        float _1261 = (1.0 - _1256) / (_1256 + 1.0);
        float _4168 = isnan(0.0) ? _1261 : (isnan(_1261) ? 0.0 : max(_1261, 0.0));
        float _1262 = isnan(1.0) ? _4168 : (isnan(_4168) ? 1.0 : min(_4168, 1.0));
        float _1271 = ((((1.0 - _1262) * (_1257 + 2.0)) * exp2(log2(isnan(1.0) ? _4146 : (isnan(_4146) ? 1.0 : min(_4146, 1.0))) * (_1257 + 1.0))) + _1262) * _1143;
        _1279 = _1110;
        _1281 = _1109;
        _1282 = _1108;
        _1283 = _1120;
        _1284 = _1119;
        _1285 = _1118;
        _1286 = _1130;
        _1287 = _1129;
        _1288 = _1128;
        _1289 = _1143;
        _1290 = _1142;
        _1291 = _1141;
        _1292 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0)));
        _1293 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1229 : (isnan(_1229) ? 0.0 : max(_1229, 0.0)));
        _1294 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1271 : (isnan(_1271) ? 0.0 : max(_1271, 0.0)));
    }
    else
    {
        _1279 = _1280;
        _1281 = _1280;
        _1282 = _1280;
        _1283 = _1280;
        _1284 = _1280;
        _1285 = _1280;
        _1286 = _1280;
        _1287 = _1280;
        _1288 = _1280;
        _1289 = _1280;
        _1290 = _1280;
        _1291 = _1280;
        _1292 = 0.0;
        _1293 = 0.0;
        _1294 = 0.0;
    }
    float _1588;
    float _1589;
    float _1590;
    float _1591;
    float _1592;
    float _1593;
    float _1594;
    float _1595;
    float _1596;
    float _1597;
    float _1598;
    float _1599;
    float _1600;
    float _1601;
    float _1602;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1319 = fma(_979, cbModelParam._m0[30u].z, fma(_975, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _971));
        float _1323 = fma(_979, cbModelParam._m0[31u].z, fma(_975, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _971));
        float _1327 = fma(_979, cbModelParam._m0[32u].z, fma(_975, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _971));
        float _1350 = _971 + _761;
        float _1351 = _975 + _762;
        float _1352 = _979 + _763;
        float _1362 = fma(_1352, cbModelParam._m0[30u].z, fma(_1351, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1350)) - _1319;
        float _1363 = fma(_1352, cbModelParam._m0[31u].z, fma(_1351, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1350)) - _1323;
        float _1364 = fma(_1352, cbModelParam._m0[32u].z, fma(_1351, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1350)) - _1327;
        float _1368 = inversesqrt(dot(vec3(_1362, _1363, _1364), vec3(_1362, _1363, _1364)));
        float _1381 = ((_1368 * _1362) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1319 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1382 = ((_1368 * _1363) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1323 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1383 = ((_1368 * _1364) / cbModelParam._m0[35u].z) + ((((((_1327 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1385 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1381, _1382, _1383), 0.0);
        vec4 _1392 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1381, _1382, _1383), 0.0);
        vec4 _1399 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1381, _1382, _1383), 0.0);
        vec4 _1406 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1381, _1382, _1383), 0.0);
        float _1418 = exp2((_1385.w + (-0.5)) * 20.0) * 2.0;
        float _1419 = _1418 * (_1385.x + (-0.5));
        float _1420 = _1418 * (_1385.y + (-0.5));
        float _1421 = _1418 * (_1385.z + (-0.5));
        float _1428 = exp2((_1392.w + (-0.5)) * 20.0) * 2.0;
        float _1429 = _1428 * (_1392.x + (-0.5));
        float _1430 = _1428 * (_1392.y + (-0.5));
        float _1431 = _1428 * (_1392.z + (-0.5));
        float _1438 = exp2((_1399.w + (-0.5)) * 20.0) * 2.0;
        float _1439 = _1438 * (_1399.x + (-0.5));
        float _1440 = _1438 * (_1399.y + (-0.5));
        float _1441 = _1438 * (_1399.z + (-0.5));
        float _1448 = exp2((_1406.w + (-0.5)) * 20.0) * 2.0;
        float _1449 = _1448 * (_1406.x + (-0.5));
        float _1450 = _1448 * (_1406.y + (-0.5));
        float _1451 = _1448 * (_1406.z + (-0.5));
        float _1452 = isnan(0.0) ? _1449 : (isnan(_1449) ? 0.0 : max(_1449, 0.0));
        float _1453 = isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0));
        float _1454 = isnan(0.0) ? _1451 : (isnan(_1451) ? 0.0 : max(_1451, 0.0));
        float _1455 = _1419 * 0.5;
        float _1456 = _1429 * 0.5;
        float _1457 = _1439 * 0.5;
        float _1458 = dot(vec3(_1455, _1456, _1457), vec3(_1455, _1456, _1457));
        float _1463 = (_1458 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1458);
        float _1471 = (dot(vec3(_761, _762, _763), vec3(_1463 * _1455, _1463 * _1456, _1463 * _1457)) + 1.0) * 0.5;
        float _4209 = isnan(0.0) ? _1471 : (isnan(_1471) ? 0.0 : max(_1471, 0.0));
        float _1480 = sqrt(((_1456 * _1456) + (_1455 * _1455)) + (_1457 * _1457)) / (_1452 + 9.9999997473787516355514526367188e-06);
        float _4220 = isnan(0.0) ? _1480 : (isnan(_1480) ? 0.0 : max(_1480, 0.0));
        float _1481 = isnan(1.0) ? _4220 : (isnan(_4220) ? 1.0 : min(_4220, 1.0));
        float _1482 = _1481 * 2.0;
        float _1486 = (1.0 - _1481) / (_1481 + 1.0);
        float _4231 = isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0));
        float _1487 = isnan(1.0) ? _4231 : (isnan(_4231) ? 1.0 : min(_4231, 1.0));
        float _1496 = ((((1.0 - _1487) * (_1482 + 2.0)) * exp2(log2(isnan(1.0) ? _4209 : (isnan(_4209) ? 1.0 : min(_4209, 1.0))) * (_1482 + 1.0))) + _1487) * _1452;
        float _1497 = _1420 * 0.5;
        float _1498 = _1430 * 0.5;
        float _1499 = _1440 * 0.5;
        float _1500 = dot(vec3(_1497, _1498, _1499), vec3(_1497, _1498, _1499));
        float _1505 = (_1500 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1500);
        float _1513 = (dot(vec3(_761, _762, _763), vec3(_1505 * _1497, _1505 * _1498, _1505 * _1499)) + 1.0) * 0.5;
        float _4242 = isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0));
        float _1522 = sqrt(((_1498 * _1498) + (_1497 * _1497)) + (_1499 * _1499)) / (_1453 + 9.9999997473787516355514526367188e-06);
        float _4253 = isnan(0.0) ? _1522 : (isnan(_1522) ? 0.0 : max(_1522, 0.0));
        float _1523 = isnan(1.0) ? _4253 : (isnan(_4253) ? 1.0 : min(_4253, 1.0));
        float _1524 = _1523 * 2.0;
        float _1528 = (1.0 - _1523) / (_1523 + 1.0);
        float _4264 = isnan(0.0) ? _1528 : (isnan(_1528) ? 0.0 : max(_1528, 0.0));
        float _1529 = isnan(1.0) ? _4264 : (isnan(_4264) ? 1.0 : min(_4264, 1.0));
        float _1538 = ((((1.0 - _1529) * (_1524 + 2.0)) * exp2(log2(isnan(1.0) ? _4242 : (isnan(_4242) ? 1.0 : min(_4242, 1.0))) * (_1524 + 1.0))) + _1529) * _1453;
        float _1539 = _1421 * 0.5;
        float _1540 = _1431 * 0.5;
        float _1541 = _1441 * 0.5;
        float _1542 = dot(vec3(_1539, _1540, _1541), vec3(_1539, _1540, _1541));
        float _1547 = (_1542 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1542);
        float _1555 = (dot(vec3(_761, _762, _763), vec3(_1547 * _1539, _1547 * _1540, _1547 * _1541)) + 1.0) * 0.5;
        float _4275 = isnan(0.0) ? _1555 : (isnan(_1555) ? 0.0 : max(_1555, 0.0));
        float _1564 = sqrt(((_1540 * _1540) + (_1539 * _1539)) + (_1541 * _1541)) / (_1454 + 9.9999997473787516355514526367188e-06);
        float _4286 = isnan(0.0) ? _1564 : (isnan(_1564) ? 0.0 : max(_1564, 0.0));
        float _1565 = isnan(1.0) ? _4286 : (isnan(_4286) ? 1.0 : min(_4286, 1.0));
        float _1566 = _1565 * 2.0;
        float _1570 = (1.0 - _1565) / (_1565 + 1.0);
        float _4297 = isnan(0.0) ? _1570 : (isnan(_1570) ? 0.0 : max(_1570, 0.0));
        float _1571 = isnan(1.0) ? _4297 : (isnan(_4297) ? 1.0 : min(_4297, 1.0));
        float _1580 = ((((1.0 - _1571) * (_1566 + 2.0)) * exp2(log2(isnan(1.0) ? _4275 : (isnan(_4275) ? 1.0 : min(_4275, 1.0))) * (_1566 + 1.0))) + _1571) * _1454;
        _1588 = _1421;
        _1589 = _1420;
        _1590 = _1419;
        _1591 = _1431;
        _1592 = _1430;
        _1593 = _1429;
        _1594 = _1441;
        _1595 = _1440;
        _1596 = _1439;
        _1597 = _1454;
        _1598 = _1453;
        _1599 = _1452;
        _1600 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1496 : (isnan(_1496) ? 0.0 : max(_1496, 0.0)));
        _1601 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1538 : (isnan(_1538) ? 0.0 : max(_1538, 0.0)));
        _1602 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0)));
    }
    else
    {
        _1588 = _1280;
        _1589 = _1280;
        _1590 = _1280;
        _1591 = _1280;
        _1592 = _1280;
        _1593 = _1280;
        _1594 = _1280;
        _1595 = _1280;
        _1596 = _1280;
        _1597 = _1280;
        _1598 = _1280;
        _1599 = _1280;
        _1600 = 0.0;
        _1601 = 0.0;
        _1602 = 0.0;
    }
    float _1612 = (cbModelParam._m0[1u].x * (_1600 - _1292)) + _1292;
    float _1613 = (cbModelParam._m0[1u].x * (_1601 - _1293)) + _1293;
    float _1614 = (cbModelParam._m0[1u].x * (_1602 - _1294)) + _1294;
    float _1635 = fma(_1614, cbSceneParam._m0[89u].z, fma(_1613, cbSceneParam._m0[89u].y, _1612 * cbSceneParam._m0[89u].x));
    float _1638 = fma(_1614, cbSceneParam._m0[90u].z, fma(_1613, cbSceneParam._m0[90u].y, _1612 * cbSceneParam._m0[90u].x));
    float _1641 = fma(_1614, cbSceneParam._m0[91u].z, fma(_1613, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1612));
    float _1656 = _919 * 0.5;
    float _1657 = _920 * 0.5;
    float _1658 = _921 * 0.5;
    float _1659 = dot(vec4(_1656, _1657, _1658, 1.0), vec4(_1590, _1593, _1596, _1599));
    float _1662 = dot(vec4(_1656, _1657, _1658, 1.0), vec4(_1589, _1592, _1595, _1598));
    float _1665 = dot(vec4(_1656, _1657, _1658, 1.0), vec4(_1588, _1591, _1594, _1597));
    float _1699;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1672 = dot(vec4(_1656, _1657, _1658, 1.0), vec4(_1279, _1283, _1286, _1289));
        float _1676 = dot(vec4(_1656, _1657, _1658, 1.0), vec4(_1281, _1284, _1287, _1290));
        float _1680 = dot(vec4(_1656, _1657, _1658, 1.0), vec4(_1282, _1285, _1288, _1291));
        float _1687 = dot(vec4(cbModelParam._m0[39u]), vec4(_1656, _1657, _1658, 1.0));
        _1699 = dot(vec3(isnan(0.0) ? _1680 : (isnan(_1680) ? 0.0 : max(_1680, 0.0)), isnan(0.0) ? _1676 : (isnan(_1676) ? 0.0 : max(_1676, 0.0)), isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1687) ? 0.0 : (isnan(0.0) ? _1687 : max(0.0, _1687))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1699 = 1.0;
    }
    float _1710;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1701 = dot(vec4(cbModelParam._m0[40u]), vec4(_1656, _1657, _1658, 1.0));
        _1710 = dot(vec3(isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0)), isnan(0.0) ? _1662 : (isnan(_1662) ? 0.0 : max(_1662, 0.0)), isnan(0.0) ? _1665 : (isnan(_1665) ? 0.0 : max(_1665, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1701) ? 0.0 : (isnan(0.0) ? _1701 : max(0.0, _1701))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1710 = 1.0;
    }
    float _1714 = (_1710 * cbModelParam._m0[1u].x) + (_1699 * (1.0 - cbModelParam._m0[1u].x));
    float _1724 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _764);
    float _1725 = isnan(_1724) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1724 : min(cbModelParam._m0[25u].z, _1724));
    float _1807;
    float _1809;
    float _1811;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1774 = fma(_979, cbModelParam._m0[13u].z, fma(_975, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _971)) + cbModelParam._m0[13u].w;
        float _1778 = fma(_979, cbModelParam._m0[14u].z, fma(_975, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _971)) + cbModelParam._m0[14u].w;
        float _1782 = fma(_979, cbModelParam._m0[15u].z, fma(_975, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _971)) + cbModelParam._m0[15u].w;
        float _1785 = fma(_921, cbModelParam._m0[13u].z, fma(_920, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _919));
        float _1788 = fma(_921, cbModelParam._m0[14u].z, fma(_920, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _919));
        float _1791 = fma(_921, cbModelParam._m0[15u].z, fma(_920, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _919));
        float _1819;
        if (_1785 > 0.0)
        {
            _1819 = abs((1.0 - _1774) / _1785);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1785 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1774 + 1.0) / _1785);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1819 = frontier_phi_14_12_ladder;
        }
        float _1989;
        if (_1788 > 0.0)
        {
            _1989 = abs((1.0 - _1778) / _1788);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1788 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1778 + 1.0) / _1788);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1989 = frontier_phi_23_19_ladder;
        }
        float _2284;
        if (_1791 > 0.0)
        {
            _2284 = abs((1.0 - _1782) / _1791);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1791 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1782 + 1.0) / _1791);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2284 = frontier_phi_35_30_ladder;
        }
        float _2286 = isnan(_1989) ? _1819 : (isnan(_1819) ? _1989 : min(_1819, _1989));
        float _2287 = isnan(_2284) ? _2286 : (isnan(_2286) ? _2284 : min(_2286, _2284));
        float _2291 = (_2287 * _1785) + _1774;
        float _2292 = (_2287 * _1788) + _1778;
        float _2293 = (_2287 * _1791) + _1782;
        float _2294 = _2287 * 9.9999997473787516355514526367188e-05;
        float _2296 = (-1.0) - _2294;
        float _2298 = _2294 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2293 > _2298) || ((_2293 < _2296) || ((_2292 > _2298) || ((_2292 < _2296) || ((_2291 < _2296) || (_2291 > _2298))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2438 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2293, cbModelParam._m0[9u].z, fma(_2292, cbModelParam._m0[9u].y, _2291 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2293, cbModelParam._m0[10u].z, fma(_2292, cbModelParam._m0[10u].y, _2291 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2293, cbModelParam._m0[11u].z, fma(_2292, cbModelParam._m0[11u].y, _2291 * cbModelParam._m0[11u].x))), _1725);
            frontier_phi_13_35_ladder = _2438.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2438.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2438.x * cbModelParam._m0[1u].y;
        }
        _1807 = frontier_phi_13_35_ladder_2;
        _1809 = frontier_phi_13_35_ladder_1;
        _1811 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1795 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_919, _920, _921), _1725);
        _1807 = _1795.x * cbModelParam._m0[1u].y;
        _1809 = _1795.y * cbModelParam._m0[1u].y;
        _1811 = _1795.z * cbModelParam._m0[1u].y;
    }
    float _1815 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _764);
    float _1816 = isnan(_1815) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1815 : min(cbModelParam._m0[25u].w, _1815));
    float _1906;
    float _1908;
    float _1910;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1870 = fma(_979, cbModelParam._m0[21u].z, fma(_975, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _971)) + cbModelParam._m0[21u].w;
        float _1874 = fma(_979, cbModelParam._m0[22u].z, fma(_975, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _971)) + cbModelParam._m0[22u].w;
        float _1878 = fma(_979, cbModelParam._m0[23u].z, fma(_975, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _971)) + cbModelParam._m0[23u].w;
        float _1881 = fma(_921, cbModelParam._m0[21u].z, fma(_920, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _919));
        float _1884 = fma(_921, cbModelParam._m0[22u].z, fma(_920, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _919));
        float _1887 = fma(_921, cbModelParam._m0[23u].z, fma(_920, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _919));
        float _1994;
        if (_1881 > 0.0)
        {
            _1994 = abs((1.0 - _1870) / _1881);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1881 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1870 + 1.0) / _1881);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1994 = frontier_phi_25_21_ladder;
        }
        float _2311;
        if (_1884 > 0.0)
        {
            _2311 = abs((1.0 - _1874) / _1884);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1884 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1874 + 1.0) / _1884);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2311 = frontier_phi_37_32_ladder;
        }
        float _2638;
        if (_1887 > 0.0)
        {
            _2638 = abs((1.0 - _1878) / _1887);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1887 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1878 + 1.0) / _1887);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2638 = frontier_phi_47_44_ladder;
        }
        float _2640 = isnan(_2311) ? _1994 : (isnan(_1994) ? _2311 : min(_1994, _2311));
        float _2641 = isnan(_2638) ? _2640 : (isnan(_2640) ? _2638 : min(_2640, _2638));
        float _2645 = (_2641 * _1881) + _1870;
        float _2646 = (_2641 * _1884) + _1874;
        float _2647 = (_2641 * _1887) + _1878;
        float _2648 = _2641 * 9.9999997473787516355514526367188e-05;
        float _2649 = (-1.0) - _2648;
        float _2651 = _2648 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2647 > _2651) || ((_2647 < _2649) || ((_2646 > _2651) || ((_2646 < _2649) || ((_2645 < _2649) || (_2645 > _2651))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2765 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2647, cbModelParam._m0[17u].z, fma(_2646, cbModelParam._m0[17u].y, _2645 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2647, cbModelParam._m0[18u].z, fma(_2646, cbModelParam._m0[18u].y, _2645 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2647, cbModelParam._m0[19u].z, fma(_2646, cbModelParam._m0[19u].y, _2645 * cbModelParam._m0[19u].x))), _1816);
            frontier_phi_22_47_ladder = _2765.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2765.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2765.x * cbModelParam._m0[1u].z;
        }
        _1906 = frontier_phi_22_47_ladder_2;
        _1908 = frontier_phi_22_47_ladder_1;
        _1910 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1890 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_919, _920, _921), _1816);
        _1906 = _1890.x * cbModelParam._m0[1u].z;
        _1908 = _1890.y * cbModelParam._m0[1u].z;
        _1910 = _1890.z * cbModelParam._m0[1u].z;
    }
    float _1922 = ((((1.0 - _939) * ((_927 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_939 * _927)) * _911;
    float _1923 = _1922 * ((cbModelParam._m0[1u].w * (_1906 - _1807)) + _1807);
    float _1924 = _1922 * ((cbModelParam._m0[1u].w * (_1908 - _1809)) + _1809);
    float _1925 = _1922 * ((cbModelParam._m0[1u].w * (_1910 - _1811)) + _1811);
    float _1928 = fma(_1925, cbSceneParam._m0[89u].z, fma(_1924, cbSceneParam._m0[89u].y, _1923 * cbSceneParam._m0[89u].x));
    float _1931 = fma(_1925, cbSceneParam._m0[90u].z, fma(_1924, cbSceneParam._m0[90u].y, _1923 * cbSceneParam._m0[90u].x));
    float _1934 = fma(_1925, cbSceneParam._m0[91u].z, fma(_1924, cbSceneParam._m0[91u].y, _1923 * cbSceneParam._m0[91u].x));
    float _1968 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1972 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1976 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1980 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1981 = _1968 / _1980;
    float _1982 = _1972 / _1980;
    float _1983 = _1976 / _1980;
    float _2130;
    float _2131;
    float _2132;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2010 = ((uint(_1983 > cbSceneParam._m0[59u].y) + uint(_1983 > cbSceneParam._m0[59u].x)) + uint(_1983 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2011 = _2010 + 43u;
        uint _2019 = _2010 + 44u;
        uint _2027 = _2010 + 45u;
        uint _2035 = _2010 + 46u;
        float _2046 = fma(_1980, cbSceneParam._m0[_2011].w, fma(_1976, cbSceneParam._m0[_2011].z, fma(_1972, cbSceneParam._m0[_2011].y, _1968 * cbSceneParam._m0[_2011].x)));
        float _2050 = fma(_1980, cbSceneParam._m0[_2019].w, fma(_1976, cbSceneParam._m0[_2019].z, fma(_1972, cbSceneParam._m0[_2019].y, _1968 * cbSceneParam._m0[_2019].x)));
        float _2058 = fma(_1980, cbSceneParam._m0[_2035].w, fma(_1976, cbSceneParam._m0[_2035].z, fma(_1972, cbSceneParam._m0[_2035].y, _1968 * cbSceneParam._m0[_2035].x)));
        float _2063 = cbSceneParam._m0[33u].z * _2058;
        float _2065 = cbSceneParam._m0[33u].w * _2058;
        float _2068 = fma(_1980, cbSceneParam._m0[_2027].w, fma(_1976, cbSceneParam._m0[_2027].z, fma(_1972, cbSceneParam._m0[_2027].y, _1968 * cbSceneParam._m0[_2027].x))) / _2058;
        float _2116 = (cbSceneParam._m0[33u].x - sqrt(((_1982 * _1982) + (_1981 * _1981)) + (_1983 * _1983))) * cbSceneParam._m0[33u].y;
        float _4423 = isnan(0.0) ? _2116 : (isnan(_2116) ? 0.0 : max(_2116, 0.0));
        float _2123 = (isnan(1.0) ? _4423 : (isnan(_4423) ? 1.0 : min(_4423, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2063 + _2046) / _2058, (_2065 + _2050) / _2058), _2068), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2065 + _2046) / _2058, (_2050 - _2063) / _2058), _2068), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2046 - _2063) / _2058, (_2050 - _2065) / _2058), _2068), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2046 - _2065) / _2058, (_2063 + _2050) / _2058), _2068), 0.0)).x), vec4(0.25)));
        _2130 = 1.0 - (_2123 * cbSceneParam._m0[34u].x);
        _2131 = 1.0 - (_2123 * cbSceneParam._m0[34u].y);
        _2132 = 1.0 - (_2123 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2130 = 1.0;
        _2131 = 1.0;
        _2132 = 1.0;
    }
    float _2196;
    float _2198;
    float _2200;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2184 = fma(_1980, cbSceneParam._m0[63u].w, fma(_1976, cbSceneParam._m0[63u].z, fma(_1972, cbSceneParam._m0[63u].y, _1968 * cbSceneParam._m0[63u].x)));
        float _2185 = fma(_1980, cbSceneParam._m0[60u].w, fma(_1976, cbSceneParam._m0[60u].z, fma(_1972, cbSceneParam._m0[60u].y, _1968 * cbSceneParam._m0[60u].x))) / _2184;
        float _2186 = fma(_1980, cbSceneParam._m0[61u].w, fma(_1976, cbSceneParam._m0[61u].z, fma(_1972, cbSceneParam._m0[61u].y, _1968 * cbSceneParam._m0[61u].x))) / _2184;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2185 >= cbSceneParam._m0[64u].x) && (_2186 >= cbSceneParam._m0[64u].y)) && (_2185 <= cbSceneParam._m0[64u].z)) && (_2186 <= cbSceneParam._m0[64u].w))
        {
            float _2324 = fma(_1980, cbSceneParam._m0[62u].w, fma(_1976, cbSceneParam._m0[62u].z, fma(_1972, cbSceneParam._m0[62u].y, _1968 * cbSceneParam._m0[62u].x))) / _2184;
            float _2328 = isnan(cbSceneParam._m0[41u].w) ? _2324 : (isnan(_2324) ? cbSceneParam._m0[41u].w : max(_2324, cbSceneParam._m0[41u].w));
            float _2371 = (cbSceneParam._m0[33u].x - sqrt(((_1982 * _1982) + (_1981 * _1981)) + (_1983 * _1983))) * cbSceneParam._m0[33u].y;
            float _4439 = isnan(0.0) ? _2371 : (isnan(_2371) ? 0.0 : max(_2371, 0.0));
            float _2378 = (isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2185, cbSceneParam._m0[33u].w + _2186), _2328), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2185, _2186 - cbSceneParam._m0[33u].z), _2328), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2185 - cbSceneParam._m0[33u].z, _2186 - cbSceneParam._m0[33u].w), _2328), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2185 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2186), _2328), 0.0)).x), vec4(0.25)));
            float _2382 = 1.0 - (_2378 * cbSceneParam._m0[34u].x);
            float _2383 = 1.0 - (_2378 * cbSceneParam._m0[34u].y);
            float _2384 = 1.0 - (_2378 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2384) ? _2132 : (isnan(_2132) ? _2384 : min(_2132, _2384));
            frontier_phi_34_33_ladder_1 = isnan(_2383) ? _2131 : (isnan(_2131) ? _2383 : min(_2131, _2383));
            frontier_phi_34_33_ladder_2 = isnan(_2382) ? _2130 : (isnan(_2130) ? _2382 : min(_2130, _2382));
        }
        else
        {
            frontier_phi_34_33_ladder = _2132;
            frontier_phi_34_33_ladder_1 = _2131;
            frontier_phi_34_33_ladder_2 = _2130;
        }
        _2196 = frontier_phi_34_33_ladder_2;
        _2198 = frontier_phi_34_33_ladder_1;
        _2200 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2196 = _2130;
        _2198 = _2131;
        _2200 = _2132;
    }
    uvec4 _2205 = floatBitsToUint(cbInstanceData._m0[_273 + 5u]);
    uint _2207 = _2205.x * 14u;
    uint _2208 = _2207 + 13u;
    float _2215 = _911 + (-1.0);
    float _2220 = (cbLight._m0[_2208].x * _2215) + 1.0;
    float _2221 = (cbLight._m0[_2208].y * _2215) + 1.0;
    float _2222 = (cbLight._m0[_2208].z * _2215) + 1.0;
    float _2223 = (cbLight._m0[_2208].w * _2215) + 1.0;
    uint _2224 = _2207 + 5u;
    float _2230 = isnan(1.0) ? _2221 : (isnan(_2221) ? 1.0 : min(_2221, 1.0));
    uint _2234 = _2207 + 4u;
    float _2243 = isnan(1.0) ? _2220 : (isnan(_2220) ? 1.0 : min(_2220, 1.0));
    uint _2247 = _2207 | 1u;
    float _2258 = dot(vec3(cbLight._m0[_2207].xyz), vec3(_761, _762, _763));
    float _2261 = dot(vec3(cbLight._m0[_2247].xyz), vec3(_761, _762, _763));
    float _4475 = isnan(0.0) ? _2258 : (isnan(_2258) ? 0.0 : max(_2258, 0.0));
    float _4486 = isnan(0.0) ? _2261 : (isnan(_2261) ? 0.0 : max(_2261, 0.0));
    float _2266 = (isnan(1.0) ? _4475 : (isnan(_4475) ? 1.0 : min(_4475, 1.0))) * 0.3183098733425140380859375;
    float _2268 = (isnan(1.0) ? _4486 : (isnan(_4486) ? 1.0 : min(_4486, 1.0))) * 0.3183098733425140380859375;
    float _2275 = ((cbLight._m0[_2224].x * _2230) * _2268) + (((cbLight._m0[_2234].x * _2196) * _2243) * _2266);
    float _2276 = ((_2230 * cbLight._m0[_2224].y) * _2268) + (((cbLight._m0[_2234].y * _2198) * _2243) * _2266);
    float _2277 = ((_2230 * cbLight._m0[_2224].z) * _2268) + (((cbLight._m0[_2234].z * _2200) * _2243) * _2266);
    uvec4 _2281 = floatBitsToUint(cbLight._m0[_2207 + 12u]);
    bool _2283 = _2281.x == 0u;
    float _2385;
    float _2387;
    float _2389;
    if (_2283)
    {
        _2385 = _2275;
        _2387 = _2276;
        _2389 = _2277;
    }
    else
    {
        uint _2393 = _2207 + 6u;
        float _2409 = (dot(vec3(cbLight._m0[_2207 + 2u].xyz), vec3(_761, _762, _763)) * 0.5) + 0.5;
        float _2410 = _2409 * _2409;
        float _4497 = isnan(0.0) ? _2410 : (isnan(_2410) ? 0.0 : max(_2410, 0.0));
        float _2411 = isnan(1.0) ? _4497 : (isnan(_4497) ? 1.0 : min(_4497, 1.0));
        float _2412 = isnan(1.0) ? _2222 : (isnan(_2222) ? 1.0 : min(_2222, 1.0));
        _2385 = (((cbLight._m0[_2393].x * 0.3183098733425140380859375) * _2411) * _2412) + _2275;
        _2387 = (((cbLight._m0[_2393].y * 0.3183098733425140380859375) * _2411) * _2412) + _2276;
        _2389 = (((cbLight._m0[_2393].z * 0.3183098733425140380859375) * _2411) * _2412) + _2277;
    }
    bool _2392 = _2281.y == 0u;
    float _2447;
    float _2449;
    float _2451;
    if (_2392)
    {
        _2447 = _2385;
        _2449 = _2387;
        _2451 = _2389;
    }
    else
    {
        uint _2609 = _2207 + 7u;
        float _2625 = (dot(vec3(cbLight._m0[_2207 + 3u].xyz), vec3(_761, _762, _763)) * 0.5) + 0.5;
        float _2626 = _2625 * _2625;
        float _4513 = isnan(0.0) ? _2626 : (isnan(_2626) ? 0.0 : max(_2626, 0.0));
        float _2627 = isnan(1.0) ? _4513 : (isnan(_4513) ? 1.0 : min(_4513, 1.0));
        float _2628 = isnan(1.0) ? _2223 : (isnan(_2223) ? 1.0 : min(_2223, 1.0));
        _2447 = (((cbLight._m0[_2609].x * 0.3183098733425140380859375) * _2627) * _2628) + _2385;
        _2449 = (((cbLight._m0[_2609].y * 0.3183098733425140380859375) * _2627) * _2628) + _2387;
        _2451 = (((cbLight._m0[_2609].z * 0.3183098733425140380859375) * _2627) * _2628) + _2389;
    }
    uint _2454 = _2207 + 8u;
    float _2467 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2207].w)) * _764) * 0.949999988079071044921875);
    float _2468 = _2467 * _2467;
    float _2469 = cbLight._m0[_2207].x + _840;
    float _2470 = cbLight._m0[_2207].y + _841;
    float _2471 = cbLight._m0[_2207].z + _842;
    float _2475 = inversesqrt(dot(vec3(_2469, _2470, _2471), vec3(_2469, _2470, _2471)));
    float _2476 = _2475 * _2469;
    float _2477 = _2475 * _2470;
    float _2478 = _2475 * _2471;
    float _2479 = dot(vec3(_761, _762, _763), vec3(cbLight._m0[_2207].xyz));
    float _4529 = isnan(0.0) ? _2479 : (isnan(_2479) ? 0.0 : max(_2479, 0.0));
    float _2482 = isnan(1.0) ? _4529 : (isnan(_4529) ? 1.0 : min(_4529, 1.0));
    float _4540 = isnan(0.0) ? _912 : (isnan(_912) ? 0.0 : max(_912, 0.0));
    float _2483 = isnan(1.0) ? _4540 : (isnan(_4540) ? 1.0 : min(_4540, 1.0));
    float _2484 = dot(vec3(_761, _762, _763), vec3(_2476, _2477, _2478));
    float _4551 = isnan(0.0) ? _2484 : (isnan(_2484) ? 0.0 : max(_2484, 0.0));
    float _2487 = isnan(1.0) ? _4551 : (isnan(_4551) ? 1.0 : min(_4551, 1.0));
    float _2488 = dot(vec3(cbLight._m0[_2207].xyz), vec3(_2476, _2477, _2478));
    float _4562 = isnan(0.0) ? _2488 : (isnan(_2488) ? 0.0 : max(_2488, 0.0));
    float _2492 = _2468 * _2468;
    float _2496 = ((_2487 * _2487) * (_2492 + (-1.0))) + 1.0;
    float _2507 = (exp2(log2(1.0 - (isnan(1.0) ? _4562 : (isnan(_4562) ? 1.0 : min(_4562, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2508 = 1.0 - _2468;
    float _2519 = (0.5 / (((_2483 * ((_2482 * _2508) + _2468)) + 9.9999999392252902907785028219223e-09) + (((_2483 * _2508) + _2468) * _2482))) * _2482;
    float _4573 = isnan(0.0) ? _2519 : (isnan(_2519) ? 0.0 : max(_2519, 0.0));
    float _2521 = (isnan(1.0) ? _4573 : (isnan(_4573) ? 1.0 : min(_4573, 1.0))) * (_2492 / ((_2496 * _2496) * 3.141590118408203125));
    uint _2535 = _2207 + 9u;
    float _2546 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2247].w)) * _764) * 0.949999988079071044921875);
    float _2547 = _2546 * _2546;
    float _2548 = cbLight._m0[_2247].x + _840;
    float _2549 = cbLight._m0[_2247].y + _841;
    float _2550 = cbLight._m0[_2247].z + _842;
    float _2554 = inversesqrt(dot(vec3(_2548, _2549, _2550), vec3(_2548, _2549, _2550)));
    float _2555 = _2554 * _2548;
    float _2556 = _2554 * _2549;
    float _2557 = _2554 * _2550;
    float _2558 = dot(vec3(_761, _762, _763), vec3(cbLight._m0[_2247].xyz));
    float _4584 = isnan(0.0) ? _2558 : (isnan(_2558) ? 0.0 : max(_2558, 0.0));
    float _2561 = isnan(1.0) ? _4584 : (isnan(_4584) ? 1.0 : min(_4584, 1.0));
    float _2562 = dot(vec3(_761, _762, _763), vec3(_2555, _2556, _2557));
    float _4595 = isnan(0.0) ? _2562 : (isnan(_2562) ? 0.0 : max(_2562, 0.0));
    float _2565 = isnan(1.0) ? _4595 : (isnan(_4595) ? 1.0 : min(_4595, 1.0));
    float _2566 = dot(vec3(cbLight._m0[_2247].xyz), vec3(_2555, _2556, _2557));
    float _4606 = isnan(0.0) ? _2566 : (isnan(_2566) ? 0.0 : max(_2566, 0.0));
    float _2570 = _2547 * _2547;
    float _2574 = ((_2565 * _2565) * (_2570 + (-1.0))) + 1.0;
    float _2583 = (exp2(log2(1.0 - (isnan(1.0) ? _4606 : (isnan(_4606) ? 1.0 : min(_4606, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2584 = 1.0 - _2547;
    float _2594 = (0.5 / (((_2483 * ((_2561 * _2584) + _2547)) + 9.9999999392252902907785028219223e-09) + (((_2483 * _2584) + _2547) * _2561))) * _2561;
    float _4617 = isnan(0.0) ? _2594 : (isnan(_2594) ? 0.0 : max(_2594, 0.0));
    float _2596 = (isnan(1.0) ? _4617 : (isnan(_4617) ? 1.0 : min(_4617, 1.0))) * (_2570 / ((_2574 * _2574) * 3.141590118408203125));
    float _2606 = (((_2583 * cbLight._m0[_2535].x) * _2596) * _2230) + ((((cbLight._m0[_2454].x * _2196) * _2507) * _2521) * _2243);
    float _2607 = (((_2583 * cbLight._m0[_2535].y) * _2596) * _2230) + ((((cbLight._m0[_2454].y * _2198) * _2507) * _2521) * _2243);
    float _2608 = (((_2583 * cbLight._m0[_2535].z) * _2596) * _2230) + ((((cbLight._m0[_2454].z * _2200) * _2507) * _2521) * _2243);
    float _2664;
    float _2666;
    float _2668;
    if (_2283)
    {
        _2664 = _2606;
        _2666 = _2607;
        _2668 = _2608;
    }
    else
    {
        uint _2670 = _2207 + 2u;
        uint _2674 = _2207 + 10u;
        float _2688 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2670].w)) * _764) * 0.949999988079071044921875);
        float _2689 = _2688 * _2688;
        float _2690 = cbLight._m0[_2670].x + _840;
        float _2691 = cbLight._m0[_2670].y + _841;
        float _2692 = cbLight._m0[_2670].z + _842;
        float _2696 = inversesqrt(dot(vec3(_2690, _2691, _2692), vec3(_2690, _2691, _2692)));
        float _2697 = _2696 * _2690;
        float _2698 = _2696 * _2691;
        float _2699 = _2696 * _2692;
        float _2700 = dot(vec3(_761, _762, _763), vec3(cbLight._m0[_2670].xyz));
        float _4628 = isnan(0.0) ? _2700 : (isnan(_2700) ? 0.0 : max(_2700, 0.0));
        float _2703 = isnan(1.0) ? _4628 : (isnan(_4628) ? 1.0 : min(_4628, 1.0));
        float _2704 = dot(vec3(_761, _762, _763), vec3(_2697, _2698, _2699));
        float _4639 = isnan(0.0) ? _2704 : (isnan(_2704) ? 0.0 : max(_2704, 0.0));
        float _2707 = isnan(1.0) ? _4639 : (isnan(_4639) ? 1.0 : min(_4639, 1.0));
        float _2708 = dot(vec3(cbLight._m0[_2670].xyz), vec3(_2697, _2698, _2699));
        float _4650 = isnan(0.0) ? _2708 : (isnan(_2708) ? 0.0 : max(_2708, 0.0));
        float _2712 = _2689 * _2689;
        float _2716 = ((_2707 * _2707) * (_2712 + (-1.0))) + 1.0;
        float _2725 = (exp2(log2(1.0 - (isnan(1.0) ? _4650 : (isnan(_4650) ? 1.0 : min(_4650, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2726 = 1.0 - _2689;
        float _2736 = (0.5 / (((_2483 * ((_2703 * _2726) + _2689)) + 9.9999999392252902907785028219223e-09) + (((_2483 * _2726) + _2689) * _2703))) * _2703;
        float _4661 = isnan(0.0) ? _2736 : (isnan(_2736) ? 0.0 : max(_2736, 0.0));
        float _2738 = (isnan(1.0) ? _4661 : (isnan(_4661) ? 1.0 : min(_4661, 1.0))) * (_2712 / ((_2716 * _2716) * 3.141590118408203125));
        float _2739 = isnan(1.0) ? _2222 : (isnan(_2222) ? 1.0 : min(_2222, 1.0));
        _2664 = (((_2725 * cbLight._m0[_2674].x) * _2738) * _2739) + _2606;
        _2666 = (((_2725 * cbLight._m0[_2674].y) * _2738) * _2739) + _2607;
        _2668 = (((_2725 * cbLight._m0[_2674].z) * _2738) * _2739) + _2608;
    }
    float _2770;
    float _2772;
    float _2774;
    if (_2392)
    {
        _2770 = _2664;
        _2772 = _2666;
        _2774 = _2668;
    }
    else
    {
        uint _2781 = _2207 + 3u;
        uint _2785 = _2207 + 11u;
        float _2799 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2781].w)) * _764) * 0.949999988079071044921875);
        float _2800 = _2799 * _2799;
        float _2801 = cbLight._m0[_2781].x + _840;
        float _2802 = cbLight._m0[_2781].y + _841;
        float _2803 = cbLight._m0[_2781].z + _842;
        float _2807 = inversesqrt(dot(vec3(_2801, _2802, _2803), vec3(_2801, _2802, _2803)));
        float _2808 = _2807 * _2801;
        float _2809 = _2807 * _2802;
        float _2810 = _2807 * _2803;
        float _2811 = dot(vec3(_761, _762, _763), vec3(cbLight._m0[_2781].xyz));
        float _4677 = isnan(0.0) ? _2811 : (isnan(_2811) ? 0.0 : max(_2811, 0.0));
        float _2814 = isnan(1.0) ? _4677 : (isnan(_4677) ? 1.0 : min(_4677, 1.0));
        float _2815 = dot(vec3(_761, _762, _763), vec3(_2808, _2809, _2810));
        float _4688 = isnan(0.0) ? _2815 : (isnan(_2815) ? 0.0 : max(_2815, 0.0));
        float _2818 = isnan(1.0) ? _4688 : (isnan(_4688) ? 1.0 : min(_4688, 1.0));
        float _2819 = dot(vec3(cbLight._m0[_2781].xyz), vec3(_2808, _2809, _2810));
        float _4699 = isnan(0.0) ? _2819 : (isnan(_2819) ? 0.0 : max(_2819, 0.0));
        float _2823 = _2800 * _2800;
        float _2827 = ((_2818 * _2818) * (_2823 + (-1.0))) + 1.0;
        float _2836 = (exp2(log2(1.0 - (isnan(1.0) ? _4699 : (isnan(_4699) ? 1.0 : min(_4699, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2837 = 1.0 - _2800;
        float _2847 = (0.5 / (((_2483 * ((_2814 * _2837) + _2800)) + 9.9999999392252902907785028219223e-09) + (((_2483 * _2837) + _2800) * _2814))) * _2814;
        float _4710 = isnan(0.0) ? _2847 : (isnan(_2847) ? 0.0 : max(_2847, 0.0));
        float _2849 = (isnan(1.0) ? _4710 : (isnan(_4710) ? 1.0 : min(_4710, 1.0))) * (_2823 / ((_2827 * _2827) * 3.141590118408203125));
        float _2850 = isnan(1.0) ? _2223 : (isnan(_2223) ? 1.0 : min(_2223, 1.0));
        _2770 = (((_2836 * cbLight._m0[_2785].x) * _2849) * _2850) + _2664;
        _2772 = (((_2836 * cbLight._m0[_2785].y) * _2849) * _2850) + _2666;
        _2774 = (((_2836 * cbLight._m0[_2785].z) * _2849) * _2850) + _2668;
    }
    float _2916;
    float _2918;
    float _2920;
    float _2922;
    float _2924;
    float _2926;
    if (_2205.y == 0u)
    {
        uvec4 _2871 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2872 = _2871.x;
        uint _2883 = uint((float(_2871.y) * floor(float(uint(cbSceneParam._m0[85u].y * _849) / _2872))) + floor(float(uint(cbSceneParam._m0[85u].x * _848) / _2872)));
        float _2893 = (log2(_1983 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2894 = isnan(0.0) ? _2893 : (isnan(_2893) ? 0.0 : max(_2893, 0.0));
        uint _2897 = uint(isnan(14.0) ? _2894 : (isnan(_2894) ? 14.0 : min(_2894, 14.0)));
        uvec4 _2902 = texelFetch(g_lightClusterGridBuffer, int(((_2897 << 2u) + (_2883 << 6u)) >> 2u));
        uint _2903 = _2902.x;
        uint _2904 = _2871.z;
        float _2983;
        float _2985;
        float _2987;
        float _2989;
        float _2991;
        float _2993;
        if (((((1u << ((_2904 >> 4u) & 15u)) + 4294967295u) & _2903) == 0u) || ((_2904 & 240u) == 0u))
        {
            _2983 = 0.0;
            _2985 = 0.0;
            _2987 = 0.0;
            _2989 = 0.0;
            _2991 = 0.0;
            _2993 = 0.0;
        }
        else
        {
            float _2984;
            float _2986;
            float _2988;
            float _2990;
            float _2992;
            float _2994;
            float _3128 = 0.0;
            float _3129 = 0.0;
            float _3130 = 0.0;
            float _3131 = 0.0;
            float _3132 = 0.0;
            float _3133 = 0.0;
            uint _3134 = 0u;
            uint _3143;
            bool _3144;
            for (;;)
            {
                _3143 = texelFetch(g_lightClassification, int((((_2897 << 5u) + (_2883 << 9u)) + (_3134 << 2u)) >> 2u)).x;
                _3144 = _3143 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3144)
                {
                    frontier_phi_66_pred = _3133;
                    frontier_phi_66_pred_1 = _3132;
                    frontier_phi_66_pred_2 = _3131;
                    frontier_phi_66_pred_3 = _3130;
                    frontier_phi_66_pred_4 = _3129;
                    frontier_phi_66_pred_5 = _3128;
                }
                else
                {
                    float _3252;
                    float _3253;
                    float _3254;
                    float _3255;
                    float _3256;
                    float _3257;
                    uint _3258;
                    _3252 = _3128;
                    _3253 = _3129;
                    _3254 = _3130;
                    _3255 = _3131;
                    _3256 = _3132;
                    _3257 = _3133;
                    _3258 = _3143;
                    float _3184;
                    float _3185;
                    float _3186;
                    float _3187;
                    float _3188;
                    float _3189;
                    for (;;)
                    {
                        uint _3262 = uint(findLSB(_3258)) + (_3134 << 5u);
                        uint _3259 = (_3258 + 4294967295u) & _3258;
                        uint _3264 = _3262 * 48u;
                        vec4 _3278 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3264)).x, texelFetch(g_PointLightRenderingBuffer, int(_3264 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3264 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3264 + 3u)).x));
                        uint _3284 = (_3262 * 48u) + 4u;
                        vec4 _3297 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3284)).x, texelFetch(g_PointLightRenderingBuffer, int(_3284 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3284 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3284 + 3u)).x));
                        uint _3303 = (_3262 * 48u) + 8u;
                        vec3 _3314 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3303)).x, texelFetch(g_PointLightRenderingBuffer, int(_3303 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3303 + 2u)).x));
                        float _3318 = _3278.x - _1981;
                        float _3319 = _3278.y - _1982;
                        float _3320 = _3278.z - _1983;
                        float _3321 = dot(vec3(_3318, _3319, _3320), vec3(_3318, _3319, _3320));
                        float _3324 = inversesqrt(_3321);
                        float _3325 = _3324 * _3318;
                        float _3326 = _3324 * _3319;
                        float _3327 = _3324 * _3320;
                        float _3328 = dot(vec3(_867, _870, _873), vec3(_3325, _3326, _3327));
                        float _3333 = 1.0 - (_3321 * _3278.w);
                        float _4736 = isnan(0.0) ? _3333 : (isnan(_3333) ? 0.0 : max(_3333, 0.0));
                        float _3334 = isnan(1.0) ? _4736 : (isnan(_4736) ? 1.0 : min(_4736, 1.0));
                        float _3335 = sqrt(_3321) * _3297.w;
                        float _3338 = 1.39999997615814208984375 / (_3335 + 1.39999997615814208984375);
                        float _3339 = _3338 * _3338;
                        float _3342 = ((1.0 - _3339) * _3328) + _3339;
                        float _3345 = _3335 * _3335;
                        float _3349 = ((isnan(0.0) ? _3342 : (isnan(_3342) ? 0.0 : max(_3342, 0.0))) * _3334) / ((_3345 * 0.699999988079071044921875) + 1.0);
                        float _3353 = (-0.0) - _1981;
                        float _3354 = (-0.0) - _1982;
                        float _3355 = (-0.0) - _1983;
                        float _3359 = inversesqrt(dot(vec3(_3353, _3354, _3355), vec3(_3353, _3354, _3355)));
                        float _3360 = _3359 * _3353;
                        float _3361 = _3359 * _3354;
                        float _3362 = _3359 * _3355;
                        float _3369 = exp2(log2(1.0 / ((_3345 * 3.5) + 5.0)) * 0.25);
                        float _3370 = 1.0 - _927;
                        float _3377 = sqrt(1.0 - ((1.0 - (_3370 * _3370)) * (1.0 - (_3369 * _3369))));
                        float _3378 = _3377 * _3377;
                        float _3379 = _3378 * _3378;
                        float _3380 = _3360 + _3325;
                        float _3381 = _3361 + _3326;
                        float _3382 = _3362 + _3327;
                        float _3386 = inversesqrt(dot(vec3(_3380, _3381, _3382), vec3(_3380, _3381, _3382)));
                        float _3390 = dot(vec3(_867, _870, _873), vec3(_3360, _3361, _3362));
                        float _4752 = isnan(0.0) ? _3390 : (isnan(_3390) ? 0.0 : max(_3390, 0.0));
                        float _3393 = isnan(1.0) ? _4752 : (isnan(_4752) ? 1.0 : min(_4752, 1.0));
                        float _3394 = dot(vec3(_867, _870, _873), vec3(_3386 * _3380, _3386 * _3381, _3386 * _3382));
                        float _4763 = isnan(0.0) ? _3394 : (isnan(_3394) ? 0.0 : max(_3394, 0.0));
                        float _3397 = isnan(1.0) ? _4763 : (isnan(_4763) ? 1.0 : min(_4763, 1.0));
                        float _3401 = ((_3397 * _3397) * (_3379 + (-1.0))) + 1.0;
                        float _3402 = _3338 * _3378;
                        float _3403 = _3402 * _3402;
                        float _3406 = ((1.0 - _3403) * _3328) + _3403;
                        float _4774 = isnan(0.0) ? _3406 : (isnan(_3406) ? 0.0 : max(_3406, 0.0));
                        float _3407 = isnan(1.0) ? _4774 : (isnan(_4774) ? 1.0 : min(_4774, 1.0));
                        float _3408 = 1.0 - _3378;
                        float _3418 = (0.5 / (((_3407 * ((_3393 * _3408) + _3378)) + 9.9999999392252902907785028219223e-09) + (((_3407 * _3408) + _3378) * _3393))) * _3407;
                        float _4785 = isnan(0.0) ? _3418 : (isnan(_3418) ? 0.0 : max(_3418, 0.0));
                        float _3428 = (((_3379 * 3.1415927410125732421875) * (isnan(1.0) ? _4785 : (isnan(_4785) ? 1.0 : min(_4785, 1.0)))) / ((_3401 * _3401) * ((_3345 * 2.1991131305694580078125) + 3.141590118408203125))) * _3334;
                        _3187 = (_3349 * _3297.x) + _3255;
                        _3188 = (_3349 * _3297.y) + _3256;
                        _3189 = (_3349 * _3297.z) + _3257;
                        _3184 = (_3428 * _3314.x) + _3252;
                        _3185 = (_3428 * _3314.y) + _3253;
                        _3186 = (_3428 * _3314.z) + _3254;
                        if (_3259 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3252 = _3184;
                            _3253 = _3185;
                            _3254 = _3186;
                            _3255 = _3187;
                            _3256 = _3188;
                            _3257 = _3189;
                            _3258 = _3259;
                        }
                    }
                    frontier_phi_66_pred = _3189;
                    frontier_phi_66_pred_1 = _3188;
                    frontier_phi_66_pred_2 = _3187;
                    frontier_phi_66_pred_3 = _3186;
                    frontier_phi_66_pred_4 = _3185;
                    frontier_phi_66_pred_5 = _3184;
                }
                _2994 = frontier_phi_66_pred;
                _2992 = frontier_phi_66_pred_1;
                _2990 = frontier_phi_66_pred_2;
                _2988 = frontier_phi_66_pred_3;
                _2986 = frontier_phi_66_pred_4;
                _2984 = frontier_phi_66_pred_5;
                uint _3135 = _3134 + 1u;
                if (_3135 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3128 = _2984;
                    _3129 = _2986;
                    _3130 = _2988;
                    _3131 = _2990;
                    _3132 = _2992;
                    _3133 = _2994;
                    _3134 = _3135;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2983 = _2984;
            _2985 = _2986;
            _2987 = _2988;
            _2989 = _2990;
            _2991 = _2992;
            _2993 = _2994;
        }
        uvec4 _2997 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2998 = _2997.z;
        uint _3000 = (_2998 >> 8u) & 15u;
        float _3096;
        float _3098;
        float _3100;
        float _3102;
        float _3104;
        float _3106;
        if (((4294967295u << _3000) & _2903) == 0u)
        {
            _3096 = _2983;
            _3098 = _2985;
            _3100 = _2987;
            _3102 = _2989;
            _3104 = _2991;
            _3106 = _2993;
        }
        else
        {
            float _3121 = inversesqrt(dot(vec3(_1981, _1982, _1983), vec3(_1981, _1982, _1983)));
            float _3122 = _3121 * _1981;
            float _3123 = _3121 * _1982;
            float _3124 = _3121 * _1983;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3000 < ((_2998 >> 12u) & 15u))
            {
                float _3097;
                float _3099;
                float _3101;
                float _3103;
                float _3105;
                float _3107;
                float _3235 = _2983;
                float _3236 = _2985;
                float _3237 = _2987;
                float _3238 = _2989;
                float _3239 = _2991;
                float _3240 = _2993;
                uint _3241 = _3000;
                uint _3250;
                bool _3251;
                for (;;)
                {
                    _3250 = texelFetch(g_lightClassification, int((((_2897 << 5u) + (_2883 << 9u)) + (_3241 << 2u)) >> 2u)).x;
                    _3251 = _3250 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3251)
                    {
                        frontier_phi_72_pred = _3240;
                        frontier_phi_72_pred_1 = _3239;
                        frontier_phi_72_pred_2 = _3238;
                        frontier_phi_72_pred_3 = _3237;
                        frontier_phi_72_pred_4 = _3236;
                        frontier_phi_72_pred_5 = _3235;
                    }
                    else
                    {
                        float _3433;
                        float _3434;
                        float _3435;
                        float _3436;
                        float _3437;
                        float _3438;
                        float _3726;
                        float _3727;
                        float _3728;
                        float _3729;
                        float _3730;
                        float _3731;
                        float _3446 = _3235;
                        float _3447 = _3236;
                        float _3448 = _3237;
                        float _3449 = _3238;
                        float _3450 = _3239;
                        float _3451 = _3240;
                        uint _3452 = _3250;
                        uint _3453;
                        vec4 _3478;
                        float _3479;
                        vec4 _3494;
                        vec3 _3506;
                        vec4 _3521;
                        vec4 _3536;
                        float _3582;
                        bool _3583;
                        for (;;)
                        {
                            uint _3463 = ((_3241 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3452));
                            _3453 = (_3452 + 4294967295u) & _3452;
                            uint _3465 = _3463 * 40u;
                            _3478 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3465)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3465 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3465 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3465 + 3u)).x));
                            _3479 = _3478.w;
                            uint _3481 = (_3463 * 40u) + 4u;
                            _3494 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3481)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3481 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3481 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3481 + 3u)).x));
                            uint _3496 = (_3463 * 40u) + 8u;
                            _3506 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3496)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3496 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3496 + 2u)).x));
                            uint _3508 = (_3463 * 40u) + 16u;
                            _3521 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3508)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3508 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3508 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3508 + 3u)).x));
                            uint _3523 = (_3463 * 40u) + 20u;
                            _3536 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3523)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3523 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3523 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3523 + 3u)).x));
                            uint _3538 = (_3463 * 40u) + 24u;
                            vec4 _3551 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3538)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3538 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3538 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3538 + 3u)).x));
                            uint _3557 = (_3463 * 40u) + 28u;
                            vec4 _3570 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3557)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3557 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3557 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3557 + 3u)).x));
                            _3582 = fma(_1983, _3570.z, fma(_1982, _3570.y, _3570.x * _1981)) + _3570.w;
                            _3583 = !((fma(_1983, _3551.z, fma(_1982, _3551.y, _3551.x * _1981)) + _3551.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3583)
                            {
                                float _3610 = _3478.x - _1981;
                                float _3611 = _3478.y - _1982;
                                float _3612 = _3478.z - _1983;
                                float _3613 = dot(vec3(_3610, _3611, _3612), vec3(_3610, _3611, _3612));
                                float _3616 = inversesqrt(_3613);
                                float _3617 = _3616 * _3610;
                                float _3618 = _3616 * _3611;
                                float _3619 = _3616 * _3612;
                                float _3623 = 1.0 - (_3613 / (_3479 * _3479));
                                float _4796 = isnan(0.0) ? _3623 : (isnan(_3623) ? 0.0 : max(_3623, 0.0));
                                float _3624 = isnan(1.0) ? _4796 : (isnan(_4796) ? 1.0 : min(_4796, 1.0));
                                float _3628 = sqrt(_3613) * _3494.w;
                                float _3630 = 1.39999997615814208984375 / (_3628 + 1.39999997615814208984375);
                                float _3631 = _3630 * _3630;
                                float _3634 = ((1.0 - _3631) * dot(vec3(_3617, _3618, _3619), vec3(_867, _870, _873))) + _3631;
                                float _3637 = _3628 * _3628;
                                float _3641 = (fma(_1983, _3521.z, fma(_1982, _3521.y, _3521.x * _1981)) + _3521.w) / _3582;
                                float _3642 = (fma(_1983, _3536.z, fma(_1982, _3536.y, _3536.x * _1981)) + _3536.w) / _3582;
                                float _3646 = 1.0 - dot(vec2(_3641, _3642), vec2(_3641, _3642));
                                float _4812 = isnan(0.0) ? _3646 : (isnan(_3646) ? 0.0 : max(_3646, 0.0));
                                float _3647 = isnan(1.0) ? _4812 : (isnan(_4812) ? 1.0 : min(_4812, 1.0));
                                float _3648 = _3647 * (((isnan(0.0) ? _3634 : (isnan(_3634) ? 0.0 : max(_3634, 0.0))) * _3624) / ((_3637 * 0.699999988079071044921875) + 1.0));
                                float _3660 = exp2(log2(1.0 / ((_3637 * 3.5) + 5.0)) * 0.25);
                                float _3661 = 1.0 - _927;
                                float _3668 = sqrt(1.0 - ((1.0 - (_3661 * _3661)) * (1.0 - (_3660 * _3660))));
                                float _3669 = _3668 * _3668;
                                float _3670 = _3669 * _3669;
                                float _3671 = _3617 - _3122;
                                float _3672 = _3618 - _3123;
                                float _3673 = _3619 - _3124;
                                float _3677 = inversesqrt(dot(vec3(_3671, _3672, _3673), vec3(_3671, _3672, _3673)));
                                float _3681 = dot(vec3(_867, _870, _873), vec3((-0.0) - _3122, (-0.0) - _3123, (-0.0) - _3124));
                                float _4823 = isnan(0.0) ? _3681 : (isnan(_3681) ? 0.0 : max(_3681, 0.0));
                                float _3684 = isnan(1.0) ? _4823 : (isnan(_4823) ? 1.0 : min(_4823, 1.0));
                                float _3685 = dot(vec3(_867, _870, _873), vec3(_3677 * _3671, _3677 * _3672, _3677 * _3673));
                                float _4834 = isnan(0.0) ? _3685 : (isnan(_3685) ? 0.0 : max(_3685, 0.0));
                                float _3688 = isnan(1.0) ? _4834 : (isnan(_4834) ? 1.0 : min(_4834, 1.0));
                                float _3692 = ((_3688 * _3688) * (_3670 + (-1.0))) + 1.0;
                                float _3693 = _3630 * _3669;
                                float _3694 = _3693 * _3693;
                                float _3700 = ((1.0 - _3694) * dot(vec3(_867, _870, _873), vec3(_3617, _3618, _3619))) + _3694;
                                float _4845 = isnan(0.0) ? _3700 : (isnan(_3700) ? 0.0 : max(_3700, 0.0));
                                float _3701 = isnan(1.0) ? _4845 : (isnan(_4845) ? 1.0 : min(_4845, 1.0));
                                float _3702 = 1.0 - _3669;
                                float _3712 = (0.5 / (((_3701 * ((_3684 * _3702) + _3669)) + 9.9999999392252902907785028219223e-09) + (((_3701 * _3702) + _3669) * _3684))) * _3701;
                                float _4856 = isnan(0.0) ? _3712 : (isnan(_3712) ? 0.0 : max(_3712, 0.0));
                                float _3722 = (_3647 * _3624) * (((_3670 * 3.1415927410125732421875) * (isnan(1.0) ? _4856 : (isnan(_4856) ? 1.0 : min(_4856, 1.0)))) / ((_3692 * _3692) * ((_3637 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3648 * _3494.y;
                                frontier_phi_78_pred_1 = _3648 * _3494.x;
                                frontier_phi_78_pred_2 = _3722 * _3506.z;
                                frontier_phi_78_pred_3 = _3722 * _3506.y;
                                frontier_phi_78_pred_4 = _3722 * _3506.x;
                                frontier_phi_78_pred_5 = _3648 * _3494.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3730 = frontier_phi_78_pred;
                            _3729 = frontier_phi_78_pred_1;
                            _3728 = frontier_phi_78_pred_2;
                            _3727 = frontier_phi_78_pred_3;
                            _3726 = frontier_phi_78_pred_4;
                            _3731 = frontier_phi_78_pred_5;
                            _3436 = _3729 + _3449;
                            _3437 = _3730 + _3450;
                            _3438 = _3731 + _3451;
                            _3433 = _3726 + _3446;
                            _3434 = _3727 + _3447;
                            _3435 = _3728 + _3448;
                            if (_3453 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3446 = _3433;
                                _3447 = _3434;
                                _3448 = _3435;
                                _3449 = _3436;
                                _3450 = _3437;
                                _3451 = _3438;
                                _3452 = _3453;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3438;
                        frontier_phi_72_pred_1 = _3437;
                        frontier_phi_72_pred_2 = _3436;
                        frontier_phi_72_pred_3 = _3435;
                        frontier_phi_72_pred_4 = _3434;
                        frontier_phi_72_pred_5 = _3433;
                    }
                    _3107 = frontier_phi_72_pred;
                    _3105 = frontier_phi_72_pred_1;
                    _3103 = frontier_phi_72_pred_2;
                    _3101 = frontier_phi_72_pred_3;
                    _3099 = frontier_phi_72_pred_4;
                    _3097 = frontier_phi_72_pred_5;
                    uint _3242 = _3241 + 1u;
                    if (_3242 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3235 = _3097;
                        _3236 = _3099;
                        _3237 = _3101;
                        _3238 = _3103;
                        _3239 = _3105;
                        _3240 = _3107;
                        _3241 = _3242;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3107;
                frontier_phi_60_61_ladder_1 = _3105;
                frontier_phi_60_61_ladder_2 = _3101;
                frontier_phi_60_61_ladder_3 = _3099;
                frontier_phi_60_61_ladder_4 = _3097;
                frontier_phi_60_61_ladder_5 = _3103;
            }
            else
            {
                frontier_phi_60_61_ladder = _2993;
                frontier_phi_60_61_ladder_1 = _2991;
                frontier_phi_60_61_ladder_2 = _2987;
                frontier_phi_60_61_ladder_3 = _2985;
                frontier_phi_60_61_ladder_4 = _2983;
                frontier_phi_60_61_ladder_5 = _2989;
            }
            _3096 = frontier_phi_60_61_ladder_4;
            _3098 = frontier_phi_60_61_ladder_3;
            _3100 = frontier_phi_60_61_ladder_2;
            _3102 = frontier_phi_60_61_ladder_5;
            _3104 = frontier_phi_60_61_ladder_1;
            _3106 = frontier_phi_60_61_ladder;
        }
        float _3111 = isnan(1.0) ? _911 : (isnan(_911) ? 1.0 : min(_911, 1.0));
        _2916 = (_3111 * _3102) + _2447;
        _2918 = (_3111 * _3104) + _2449;
        _2920 = (_3111 * _3106) + _2451;
        _2922 = ((_3096 * 0.039999999105930328369140625) * _3111) + _2770;
        _2924 = ((_3098 * 0.039999999105930328369140625) * _3111) + _2772;
        _2926 = ((_3100 * 0.039999999105930328369140625) * _3111) + _2774;
    }
    else
    {
        _2916 = _2447;
        _2918 = _2449;
        _2920 = _2451;
        _2922 = _2770;
        _2924 = _2772;
        _2926 = _2774;
    }
    float _4872 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
    float _4883 = isnan(0.0) ? _897 : (isnan(_897) ? 0.0 : max(_897, 0.0));
    float _4894 = isnan(0.0) ? _898 : (isnan(_898) ? 0.0 : max(_898, 0.0));
    uint _2946 = _273 + 6u;
    float _2954 = _848 / cbSceneParam._m0[86u].x;
    float _2955 = _849 / cbSceneParam._m0[86u].y;
    vec4 _2969 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2954, _2955, (log2((isnan(cbSceneParam._m0[77u].w) ? _782 : (isnan(_782) ? cbSceneParam._m0[77u].w : min(_782, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2971 = _2969.x;
    float _2972 = _2969.y;
    float _2973 = _2969.z;
    float _2974 = _2969.w;
    float _3046;
    float _3048;
    float _3050;
    float _3052;
    if (_782 > cbSceneParam._m0[78u].w)
    {
        float _3008 = isnan(_782) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _782 : min(cbSceneParam._m0[80u].w, _782));
        float _3009 = _3008 / _782;
        float _3020 = _3009 * _833;
        float _3021 = _834 * _3009;
        float _3022 = (-0.0) - _3021;
        float _3024 = _3009 * _835;
        float _3026 = (cbSceneParam._m0[77u].w * _3022) / _3008;
        float _3027 = _3026 + cbSceneParam._m0[79u].w;
        float _3028 = cbSceneParam._m0[79u].w - _3021;
        float _3034 = sqrt(((_3020 * _3020) + (_3021 * _3021)) + (_3024 * _3024));
        float _3037 = (1.0 - (cbSceneParam._m0[77u].w / _3008)) * _3034;
        float _3042 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3044 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3197;
        if (abs((_3022 - _3026) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3197 = ((((_3027 > 0.0) ? exp2(_3042 * _3027) : (2.0 - exp2(_3044 * _3027))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3037;
        }
        else
        {
            float _3157 = 1.0 / cbSceneParam._m0[80u].x;
            float _3158 = isnan(_3028) ? _3027 : (isnan(_3027) ? _3028 : max(_3027, _3028));
            float _3159 = isnan(_3028) ? _3027 : (isnan(_3027) ? _3028 : min(_3027, _3028));
            float _3168 = isnan(0.0) ? _3158 : (isnan(_3158) ? 0.0 : min(_3158, 0.0));
            float _3169 = isnan(0.0) ? _3159 : (isnan(_3159) ? 0.0 : min(_3159, 0.0));
            _3197 = ((abs(_3034 / _3022) * cbSceneParam._m0[80u].y) * ((((_3168 - _3169) * 2.0) - ((exp2(_3042 * (isnan(0.0) ? _3158 : (isnan(_3158) ? 0.0 : max(_3158, 0.0)))) - exp2(_3042 * (isnan(0.0) ? _3159 : (isnan(_3159) ? 0.0 : max(_3159, 0.0))))) * _3157)) - ((exp2(_3044 * _3168) - exp2(_3044 * _3169)) * _3157))) + (_3037 * cbSceneParam._m0[80u].z);
        }
        vec4 _3199 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2954, _2955, 1.0), 0.0);
        float _3208 = exp2((_3197 * (-1.44269502162933349609375)) * (1.0 - _3199.w));
        float _3209 = log2(_3208);
        float _3225 = log2(_2974);
        _3046 = (exp2(_3225 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3209 * cbSceneParam._m0[78u].x)) * _3199.x) / cbSceneParam._m0[78u].x)) + _2971;
        _3048 = (exp2(_3225 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3209 * cbSceneParam._m0[78u].y)) * _3199.y) / cbSceneParam._m0[78u].y)) + _2972;
        _3050 = (exp2(_3225 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3209 * cbSceneParam._m0[78u].z)) * _3199.z) / cbSceneParam._m0[78u].z)) + _2973;
        _3052 = _3208 * _2974;
    }
    else
    {
        _3046 = _2971;
        _3048 = _2972;
        _3050 = _2973;
        _3052 = _2974;
    }
    float _3064 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3065 = _3064 == 3.0;
    float _3066 = log2(_3052);
    float _3073 = exp2(_3066 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4872 : (isnan(_4872) ? 1.0 : min(_4872, 1.0))) * (_2916 + ((isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0))) * _911))) + ((_2922 + ((isnan(0.0) ? _1928 : (isnan(_1928) ? 0.0 : max(_1928, 0.0))) * _1714)) * cbPerFrame._m0[3u].x));
    float _3074 = exp2(_3066 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4883 : (isnan(_4883) ? 1.0 : min(_4883, 1.0))) * (_2918 + ((isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0))) * _911))) + ((_2924 + ((isnan(0.0) ? _1931 : (isnan(_1931) ? 0.0 : max(_1931, 0.0))) * _1714)) * cbPerFrame._m0[3u].x));
    float _3075 = exp2(_3066 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4894 : (isnan(_4894) ? 1.0 : min(_4894, 1.0))) * (_2920 + ((isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0))) * _911))) + ((_2926 + ((isnan(0.0) ? _1934 : (isnan(_1934) ? 0.0 : max(_1934, 0.0))) * _1714)) * cbPerFrame._m0[3u].x));
    float _3084 = (_3064 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3084 * (_3065 ? _3073 : (_3073 + (cbSceneParam._m0[72u].w * _3046)));
    SV_Target.y = _3084 * (_3065 ? _3074 : (_3074 + (cbSceneParam._m0[72u].w * _3048)));
    SV_Target.z = _3084 * (_3065 ? _3075 : (_3075 + (cbSceneParam._m0[72u].w * _3050)));
    SV_Target.w = cbInstanceData._m0[_2946].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2946].w;
}


